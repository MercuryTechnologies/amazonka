-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-locationZSamazonka-location
@version 2.0


module Amazonka.Location.Types.BatchItemErrorCode
newtype BatchItemErrorCode
BatchItemErrorCode' :: Text -> BatchItemErrorCode
[fromBatchItemErrorCode] :: BatchItemErrorCode -> Text
pattern BatchItemErrorCode_AccessDeniedError :: BatchItemErrorCode
pattern BatchItemErrorCode_ConflictError :: BatchItemErrorCode
pattern BatchItemErrorCode_InternalServerError :: BatchItemErrorCode
pattern BatchItemErrorCode_ResourceNotFoundError :: BatchItemErrorCode
pattern BatchItemErrorCode_ThrottlingError :: BatchItemErrorCode
pattern BatchItemErrorCode_ValidationError :: BatchItemErrorCode
instance Amazonka.Data.XML.ToXML Amazonka.Location.Types.BatchItemErrorCode.BatchItemErrorCode
instance Amazonka.Data.XML.FromXML Amazonka.Location.Types.BatchItemErrorCode.BatchItemErrorCode
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Location.Types.BatchItemErrorCode.BatchItemErrorCode
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Location.Types.BatchItemErrorCode.BatchItemErrorCode
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Location.Types.BatchItemErrorCode.BatchItemErrorCode
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Location.Types.BatchItemErrorCode.BatchItemErrorCode
instance Amazonka.Data.Query.ToQuery Amazonka.Location.Types.BatchItemErrorCode.BatchItemErrorCode
instance Amazonka.Data.Headers.ToHeader Amazonka.Location.Types.BatchItemErrorCode.BatchItemErrorCode
instance Amazonka.Data.Log.ToLog Amazonka.Location.Types.BatchItemErrorCode.BatchItemErrorCode
instance Amazonka.Data.ByteString.ToByteString Amazonka.Location.Types.BatchItemErrorCode.BatchItemErrorCode
instance Amazonka.Data.Text.ToText Amazonka.Location.Types.BatchItemErrorCode.BatchItemErrorCode
instance Amazonka.Data.Text.FromText Amazonka.Location.Types.BatchItemErrorCode.BatchItemErrorCode
instance Control.DeepSeq.NFData Amazonka.Location.Types.BatchItemErrorCode.BatchItemErrorCode
instance Data.Hashable.Class.Hashable Amazonka.Location.Types.BatchItemErrorCode.BatchItemErrorCode
instance GHC.Generics.Generic Amazonka.Location.Types.BatchItemErrorCode.BatchItemErrorCode
instance GHC.Classes.Ord Amazonka.Location.Types.BatchItemErrorCode.BatchItemErrorCode
instance GHC.Classes.Eq Amazonka.Location.Types.BatchItemErrorCode.BatchItemErrorCode
instance GHC.Read.Read Amazonka.Location.Types.BatchItemErrorCode.BatchItemErrorCode
instance GHC.Show.Show Amazonka.Location.Types.BatchItemErrorCode.BatchItemErrorCode


module Amazonka.Location.Types.BatchItemError

-- | Contains the batch request error details associated with the request.
--   
--   <i>See:</i> <a>newBatchItemError</a> smart constructor.
data BatchItemError
BatchItemError' :: Maybe BatchItemErrorCode -> Maybe Text -> BatchItemError

-- | The error code associated with the batch request error.
[$sel:code:BatchItemError'] :: BatchItemError -> Maybe BatchItemErrorCode

-- | A message with the reason for the batch request error.
[$sel:message:BatchItemError'] :: BatchItemError -> Maybe Text

-- | Create a value of <a>BatchItemError</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:code:BatchItemError'</a>, <a>batchItemError_code</a> - The
--   error code associated with the batch request error.
--   
--   <a>$sel:message:BatchItemError'</a>, <a>batchItemError_message</a> - A
--   message with the reason for the batch request error.
newBatchItemError :: BatchItemError

-- | The error code associated with the batch request error.
batchItemError_code :: Lens' BatchItemError (Maybe BatchItemErrorCode)

-- | A message with the reason for the batch request error.
batchItemError_message :: Lens' BatchItemError (Maybe Text)
instance GHC.Generics.Generic Amazonka.Location.Types.BatchItemError.BatchItemError
instance GHC.Show.Show Amazonka.Location.Types.BatchItemError.BatchItemError
instance GHC.Read.Read Amazonka.Location.Types.BatchItemError.BatchItemError
instance GHC.Classes.Eq Amazonka.Location.Types.BatchItemError.BatchItemError
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Location.Types.BatchItemError.BatchItemError
instance Data.Hashable.Class.Hashable Amazonka.Location.Types.BatchItemError.BatchItemError
instance Control.DeepSeq.NFData Amazonka.Location.Types.BatchItemError.BatchItemError


module Amazonka.Location.Types.BatchGetDevicePositionError

-- | Contains error details for each device that didn't return a position.
--   
--   <i>See:</i> <a>newBatchGetDevicePositionError</a> smart constructor.
data BatchGetDevicePositionError
BatchGetDevicePositionError' :: Text -> BatchItemError -> BatchGetDevicePositionError

-- | The ID of the device that didn't return a position.
[$sel:deviceId:BatchGetDevicePositionError'] :: BatchGetDevicePositionError -> Text

-- | Contains details related to the error code.
[$sel:error:BatchGetDevicePositionError'] :: BatchGetDevicePositionError -> BatchItemError

-- | Create a value of <a>BatchGetDevicePositionError</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceId:BatchGetDevicePositionError'</a>,
--   <a>batchGetDevicePositionError_deviceId</a> - The ID of the device
--   that didn't return a position.
--   
--   <a>$sel:error:BatchGetDevicePositionError'</a>,
--   <a>batchGetDevicePositionError_error</a> - Contains details related to
--   the error code.
newBatchGetDevicePositionError :: Text -> BatchItemError -> BatchGetDevicePositionError

-- | The ID of the device that didn't return a position.
batchGetDevicePositionError_deviceId :: Lens' BatchGetDevicePositionError Text

-- | Contains details related to the error code.
batchGetDevicePositionError_error :: Lens' BatchGetDevicePositionError BatchItemError
instance GHC.Generics.Generic Amazonka.Location.Types.BatchGetDevicePositionError.BatchGetDevicePositionError
instance GHC.Show.Show Amazonka.Location.Types.BatchGetDevicePositionError.BatchGetDevicePositionError
instance GHC.Read.Read Amazonka.Location.Types.BatchGetDevicePositionError.BatchGetDevicePositionError
instance GHC.Classes.Eq Amazonka.Location.Types.BatchGetDevicePositionError.BatchGetDevicePositionError
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Location.Types.BatchGetDevicePositionError.BatchGetDevicePositionError
instance Data.Hashable.Class.Hashable Amazonka.Location.Types.BatchGetDevicePositionError.BatchGetDevicePositionError
instance Control.DeepSeq.NFData Amazonka.Location.Types.BatchGetDevicePositionError.BatchGetDevicePositionError


module Amazonka.Location.Types.BatchEvaluateGeofencesError

-- | Contains error details for each device that failed to evaluate its
--   position against the geofences in a given geofence collection.
--   
--   <i>See:</i> <a>newBatchEvaluateGeofencesError</a> smart constructor.
data BatchEvaluateGeofencesError
BatchEvaluateGeofencesError' :: Text -> BatchItemError -> POSIX -> BatchEvaluateGeofencesError

-- | The device associated with the position evaluation error.
[$sel:deviceId:BatchEvaluateGeofencesError'] :: BatchEvaluateGeofencesError -> Text

-- | Contains details associated to the batch error.
[$sel:error:BatchEvaluateGeofencesError'] :: BatchEvaluateGeofencesError -> BatchItemError

-- | Specifies a timestamp for when the error occurred in <a>ISO 8601</a>
--   format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
[$sel:sampleTime:BatchEvaluateGeofencesError'] :: BatchEvaluateGeofencesError -> POSIX

-- | Create a value of <a>BatchEvaluateGeofencesError</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceId:BatchEvaluateGeofencesError'</a>,
--   <a>batchEvaluateGeofencesError_deviceId</a> - The device associated
--   with the position evaluation error.
--   
--   <a>$sel:error:BatchEvaluateGeofencesError'</a>,
--   <a>batchEvaluateGeofencesError_error</a> - Contains details associated
--   to the batch error.
--   
--   <a>$sel:sampleTime:BatchEvaluateGeofencesError'</a>,
--   <a>batchEvaluateGeofencesError_sampleTime</a> - Specifies a timestamp
--   for when the error occurred in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
newBatchEvaluateGeofencesError :: Text -> BatchItemError -> UTCTime -> BatchEvaluateGeofencesError

-- | The device associated with the position evaluation error.
batchEvaluateGeofencesError_deviceId :: Lens' BatchEvaluateGeofencesError Text

-- | Contains details associated to the batch error.
batchEvaluateGeofencesError_error :: Lens' BatchEvaluateGeofencesError BatchItemError

-- | Specifies a timestamp for when the error occurred in <a>ISO 8601</a>
--   format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
batchEvaluateGeofencesError_sampleTime :: Lens' BatchEvaluateGeofencesError UTCTime
instance GHC.Generics.Generic Amazonka.Location.Types.BatchEvaluateGeofencesError.BatchEvaluateGeofencesError
instance GHC.Show.Show Amazonka.Location.Types.BatchEvaluateGeofencesError.BatchEvaluateGeofencesError
instance GHC.Read.Read Amazonka.Location.Types.BatchEvaluateGeofencesError.BatchEvaluateGeofencesError
instance GHC.Classes.Eq Amazonka.Location.Types.BatchEvaluateGeofencesError.BatchEvaluateGeofencesError
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Location.Types.BatchEvaluateGeofencesError.BatchEvaluateGeofencesError
instance Data.Hashable.Class.Hashable Amazonka.Location.Types.BatchEvaluateGeofencesError.BatchEvaluateGeofencesError
instance Control.DeepSeq.NFData Amazonka.Location.Types.BatchEvaluateGeofencesError.BatchEvaluateGeofencesError


module Amazonka.Location.Types.BatchDeleteGeofenceError

-- | Contains error details for each geofence that failed to delete from
--   the geofence collection.
--   
--   <i>See:</i> <a>newBatchDeleteGeofenceError</a> smart constructor.
data BatchDeleteGeofenceError
BatchDeleteGeofenceError' :: BatchItemError -> Text -> BatchDeleteGeofenceError

-- | Contains details associated to the batch error.
[$sel:error:BatchDeleteGeofenceError'] :: BatchDeleteGeofenceError -> BatchItemError

-- | The geofence associated with the error message.
[$sel:geofenceId:BatchDeleteGeofenceError'] :: BatchDeleteGeofenceError -> Text

-- | Create a value of <a>BatchDeleteGeofenceError</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:error:BatchDeleteGeofenceError'</a>,
--   <a>batchDeleteGeofenceError_error</a> - Contains details associated to
--   the batch error.
--   
--   <a>$sel:geofenceId:BatchDeleteGeofenceError'</a>,
--   <a>batchDeleteGeofenceError_geofenceId</a> - The geofence associated
--   with the error message.
newBatchDeleteGeofenceError :: BatchItemError -> Text -> BatchDeleteGeofenceError

-- | Contains details associated to the batch error.
batchDeleteGeofenceError_error :: Lens' BatchDeleteGeofenceError BatchItemError

-- | The geofence associated with the error message.
batchDeleteGeofenceError_geofenceId :: Lens' BatchDeleteGeofenceError Text
instance GHC.Generics.Generic Amazonka.Location.Types.BatchDeleteGeofenceError.BatchDeleteGeofenceError
instance GHC.Show.Show Amazonka.Location.Types.BatchDeleteGeofenceError.BatchDeleteGeofenceError
instance GHC.Read.Read Amazonka.Location.Types.BatchDeleteGeofenceError.BatchDeleteGeofenceError
instance GHC.Classes.Eq Amazonka.Location.Types.BatchDeleteGeofenceError.BatchDeleteGeofenceError
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Location.Types.BatchDeleteGeofenceError.BatchDeleteGeofenceError
instance Data.Hashable.Class.Hashable Amazonka.Location.Types.BatchDeleteGeofenceError.BatchDeleteGeofenceError
instance Control.DeepSeq.NFData Amazonka.Location.Types.BatchDeleteGeofenceError.BatchDeleteGeofenceError


module Amazonka.Location.Types.BatchDeleteDevicePositionHistoryError

-- | Contains the tracker resource details.
--   
--   <i>See:</i> <a>newBatchDeleteDevicePositionHistoryError</a> smart
--   constructor.
data BatchDeleteDevicePositionHistoryError
BatchDeleteDevicePositionHistoryError' :: Text -> BatchItemError -> BatchDeleteDevicePositionHistoryError

-- | The ID of the device for this position.
[$sel:deviceId:BatchDeleteDevicePositionHistoryError'] :: BatchDeleteDevicePositionHistoryError -> Text
[$sel:error:BatchDeleteDevicePositionHistoryError'] :: BatchDeleteDevicePositionHistoryError -> BatchItemError

-- | Create a value of <a>BatchDeleteDevicePositionHistoryError</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceId:BatchDeleteDevicePositionHistoryError'</a>,
--   <a>batchDeleteDevicePositionHistoryError_deviceId</a> - The ID of the
--   device for this position.
--   
--   <a>$sel:error:BatchDeleteDevicePositionHistoryError'</a>,
--   <a>batchDeleteDevicePositionHistoryError_error</a> - Undocumented
--   member.
newBatchDeleteDevicePositionHistoryError :: Text -> BatchItemError -> BatchDeleteDevicePositionHistoryError

-- | The ID of the device for this position.
batchDeleteDevicePositionHistoryError_deviceId :: Lens' BatchDeleteDevicePositionHistoryError Text

-- | Undocumented member.
batchDeleteDevicePositionHistoryError_error :: Lens' BatchDeleteDevicePositionHistoryError BatchItemError
instance GHC.Generics.Generic Amazonka.Location.Types.BatchDeleteDevicePositionHistoryError.BatchDeleteDevicePositionHistoryError
instance GHC.Show.Show Amazonka.Location.Types.BatchDeleteDevicePositionHistoryError.BatchDeleteDevicePositionHistoryError
instance GHC.Read.Read Amazonka.Location.Types.BatchDeleteDevicePositionHistoryError.BatchDeleteDevicePositionHistoryError
instance GHC.Classes.Eq Amazonka.Location.Types.BatchDeleteDevicePositionHistoryError.BatchDeleteDevicePositionHistoryError
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Location.Types.BatchDeleteDevicePositionHistoryError.BatchDeleteDevicePositionHistoryError
instance Data.Hashable.Class.Hashable Amazonka.Location.Types.BatchDeleteDevicePositionHistoryError.BatchDeleteDevicePositionHistoryError
instance Control.DeepSeq.NFData Amazonka.Location.Types.BatchDeleteDevicePositionHistoryError.BatchDeleteDevicePositionHistoryError


module Amazonka.Location.Types.BatchPutGeofenceError

-- | Contains error details for each geofence that failed to be stored in a
--   given geofence collection.
--   
--   <i>See:</i> <a>newBatchPutGeofenceError</a> smart constructor.
data BatchPutGeofenceError
BatchPutGeofenceError' :: BatchItemError -> Text -> BatchPutGeofenceError

-- | Contains details associated to the batch error.
[$sel:error:BatchPutGeofenceError'] :: BatchPutGeofenceError -> BatchItemError

-- | The geofence associated with the error message.
[$sel:geofenceId:BatchPutGeofenceError'] :: BatchPutGeofenceError -> Text

-- | Create a value of <a>BatchPutGeofenceError</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:error:BatchPutGeofenceError'</a>,
--   <a>batchPutGeofenceError_error</a> - Contains details associated to
--   the batch error.
--   
--   <a>$sel:geofenceId:BatchPutGeofenceError'</a>,
--   <a>batchPutGeofenceError_geofenceId</a> - The geofence associated with
--   the error message.
newBatchPutGeofenceError :: BatchItemError -> Text -> BatchPutGeofenceError

-- | Contains details associated to the batch error.
batchPutGeofenceError_error :: Lens' BatchPutGeofenceError BatchItemError

-- | The geofence associated with the error message.
batchPutGeofenceError_geofenceId :: Lens' BatchPutGeofenceError Text
instance GHC.Generics.Generic Amazonka.Location.Types.BatchPutGeofenceError.BatchPutGeofenceError
instance GHC.Show.Show Amazonka.Location.Types.BatchPutGeofenceError.BatchPutGeofenceError
instance GHC.Read.Read Amazonka.Location.Types.BatchPutGeofenceError.BatchPutGeofenceError
instance GHC.Classes.Eq Amazonka.Location.Types.BatchPutGeofenceError.BatchPutGeofenceError
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Location.Types.BatchPutGeofenceError.BatchPutGeofenceError
instance Data.Hashable.Class.Hashable Amazonka.Location.Types.BatchPutGeofenceError.BatchPutGeofenceError
instance Control.DeepSeq.NFData Amazonka.Location.Types.BatchPutGeofenceError.BatchPutGeofenceError


module Amazonka.Location.Types.BatchPutGeofenceSuccess

-- | Contains a summary of each geofence that was successfully stored in a
--   given geofence collection.
--   
--   <i>See:</i> <a>newBatchPutGeofenceSuccess</a> smart constructor.
data BatchPutGeofenceSuccess
BatchPutGeofenceSuccess' :: POSIX -> Text -> POSIX -> BatchPutGeofenceSuccess

-- | The timestamp for when the geofence was stored in a geofence
--   collection in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
[$sel:createTime:BatchPutGeofenceSuccess'] :: BatchPutGeofenceSuccess -> POSIX

-- | The geofence successfully stored in a geofence collection.
[$sel:geofenceId:BatchPutGeofenceSuccess'] :: BatchPutGeofenceSuccess -> Text

-- | The timestamp for when the geofence was last updated in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
[$sel:updateTime:BatchPutGeofenceSuccess'] :: BatchPutGeofenceSuccess -> POSIX

-- | Create a value of <a>BatchPutGeofenceSuccess</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createTime:BatchPutGeofenceSuccess'</a>,
--   <a>batchPutGeofenceSuccess_createTime</a> - The timestamp for when the
--   geofence was stored in a geofence collection in <a>ISO 8601</a>
--   format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
--   
--   <a>$sel:geofenceId:BatchPutGeofenceSuccess'</a>,
--   <a>batchPutGeofenceSuccess_geofenceId</a> - The geofence successfully
--   stored in a geofence collection.
--   
--   <a>$sel:updateTime:BatchPutGeofenceSuccess'</a>,
--   <a>batchPutGeofenceSuccess_updateTime</a> - The timestamp for when the
--   geofence was last updated in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
newBatchPutGeofenceSuccess :: UTCTime -> Text -> UTCTime -> BatchPutGeofenceSuccess

-- | The timestamp for when the geofence was stored in a geofence
--   collection in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
batchPutGeofenceSuccess_createTime :: Lens' BatchPutGeofenceSuccess UTCTime

-- | The geofence successfully stored in a geofence collection.
batchPutGeofenceSuccess_geofenceId :: Lens' BatchPutGeofenceSuccess Text

-- | The timestamp for when the geofence was last updated in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
batchPutGeofenceSuccess_updateTime :: Lens' BatchPutGeofenceSuccess UTCTime
instance GHC.Generics.Generic Amazonka.Location.Types.BatchPutGeofenceSuccess.BatchPutGeofenceSuccess
instance GHC.Show.Show Amazonka.Location.Types.BatchPutGeofenceSuccess.BatchPutGeofenceSuccess
instance GHC.Read.Read Amazonka.Location.Types.BatchPutGeofenceSuccess.BatchPutGeofenceSuccess
instance GHC.Classes.Eq Amazonka.Location.Types.BatchPutGeofenceSuccess.BatchPutGeofenceSuccess
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Location.Types.BatchPutGeofenceSuccess.BatchPutGeofenceSuccess
instance Data.Hashable.Class.Hashable Amazonka.Location.Types.BatchPutGeofenceSuccess.BatchPutGeofenceSuccess
instance Control.DeepSeq.NFData Amazonka.Location.Types.BatchPutGeofenceSuccess.BatchPutGeofenceSuccess


module Amazonka.Location.Types.BatchUpdateDevicePositionError

-- | Contains error details for each device that failed to update its
--   position.
--   
--   <i>See:</i> <a>newBatchUpdateDevicePositionError</a> smart
--   constructor.
data BatchUpdateDevicePositionError
BatchUpdateDevicePositionError' :: Text -> BatchItemError -> POSIX -> BatchUpdateDevicePositionError

-- | The device associated with the failed location update.
[$sel:deviceId:BatchUpdateDevicePositionError'] :: BatchUpdateDevicePositionError -> Text

-- | Contains details related to the error code such as the error code and
--   error message.
[$sel:error:BatchUpdateDevicePositionError'] :: BatchUpdateDevicePositionError -> BatchItemError

-- | The timestamp at which the device position was determined. Uses <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
[$sel:sampleTime:BatchUpdateDevicePositionError'] :: BatchUpdateDevicePositionError -> POSIX

-- | Create a value of <a>BatchUpdateDevicePositionError</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceId:BatchUpdateDevicePositionError'</a>,
--   <a>batchUpdateDevicePositionError_deviceId</a> - The device associated
--   with the failed location update.
--   
--   <a>$sel:error:BatchUpdateDevicePositionError'</a>,
--   <a>batchUpdateDevicePositionError_error</a> - Contains details related
--   to the error code such as the error code and error message.
--   
--   <a>$sel:sampleTime:BatchUpdateDevicePositionError'</a>,
--   <a>batchUpdateDevicePositionError_sampleTime</a> - The timestamp at
--   which the device position was determined. Uses <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
newBatchUpdateDevicePositionError :: Text -> BatchItemError -> UTCTime -> BatchUpdateDevicePositionError

-- | The device associated with the failed location update.
batchUpdateDevicePositionError_deviceId :: Lens' BatchUpdateDevicePositionError Text

-- | Contains details related to the error code such as the error code and
--   error message.
batchUpdateDevicePositionError_error :: Lens' BatchUpdateDevicePositionError BatchItemError

-- | The timestamp at which the device position was determined. Uses <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
batchUpdateDevicePositionError_sampleTime :: Lens' BatchUpdateDevicePositionError UTCTime
instance GHC.Generics.Generic Amazonka.Location.Types.BatchUpdateDevicePositionError.BatchUpdateDevicePositionError
instance GHC.Show.Show Amazonka.Location.Types.BatchUpdateDevicePositionError.BatchUpdateDevicePositionError
instance GHC.Read.Read Amazonka.Location.Types.BatchUpdateDevicePositionError.BatchUpdateDevicePositionError
instance GHC.Classes.Eq Amazonka.Location.Types.BatchUpdateDevicePositionError.BatchUpdateDevicePositionError
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Location.Types.BatchUpdateDevicePositionError.BatchUpdateDevicePositionError
instance Data.Hashable.Class.Hashable Amazonka.Location.Types.BatchUpdateDevicePositionError.BatchUpdateDevicePositionError
instance Control.DeepSeq.NFData Amazonka.Location.Types.BatchUpdateDevicePositionError.BatchUpdateDevicePositionError


module Amazonka.Location.Types.CalculateRouteCarModeOptions

-- | Contains details about additional route preferences for requests that
--   specify <tt>TravelMode</tt> as <tt>Car</tt>.
--   
--   <i>See:</i> <a>newCalculateRouteCarModeOptions</a> smart constructor.
data CalculateRouteCarModeOptions
CalculateRouteCarModeOptions' :: Maybe Bool -> Maybe Bool -> CalculateRouteCarModeOptions

-- | Avoids tolls when calculating routes.
--   
--   Default Value: <tt>false</tt>
--   
--   Valid Values: <tt>false</tt> | <tt>true</tt>
[$sel:avoidTolls:CalculateRouteCarModeOptions'] :: CalculateRouteCarModeOptions -> Maybe Bool

-- | Avoids ferries when calculating routes.
--   
--   Default Value: <tt>false</tt>
--   
--   Valid Values: <tt>false</tt> | <tt>true</tt>
[$sel:avoidFerries:CalculateRouteCarModeOptions'] :: CalculateRouteCarModeOptions -> Maybe Bool

-- | Create a value of <a>CalculateRouteCarModeOptions</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:avoidTolls:CalculateRouteCarModeOptions'</a>,
--   <a>calculateRouteCarModeOptions_avoidTolls</a> - Avoids tolls when
--   calculating routes.
--   
--   Default Value: <tt>false</tt>
--   
--   Valid Values: <tt>false</tt> | <tt>true</tt>
--   
--   <a>$sel:avoidFerries:CalculateRouteCarModeOptions'</a>,
--   <a>calculateRouteCarModeOptions_avoidFerries</a> - Avoids ferries when
--   calculating routes.
--   
--   Default Value: <tt>false</tt>
--   
--   Valid Values: <tt>false</tt> | <tt>true</tt>
newCalculateRouteCarModeOptions :: CalculateRouteCarModeOptions

-- | Avoids tolls when calculating routes.
--   
--   Default Value: <tt>false</tt>
--   
--   Valid Values: <tt>false</tt> | <tt>true</tt>
calculateRouteCarModeOptions_avoidTolls :: Lens' CalculateRouteCarModeOptions (Maybe Bool)

-- | Avoids ferries when calculating routes.
--   
--   Default Value: <tt>false</tt>
--   
--   Valid Values: <tt>false</tt> | <tt>true</tt>
calculateRouteCarModeOptions_avoidFerries :: Lens' CalculateRouteCarModeOptions (Maybe Bool)
instance GHC.Generics.Generic Amazonka.Location.Types.CalculateRouteCarModeOptions.CalculateRouteCarModeOptions
instance GHC.Show.Show Amazonka.Location.Types.CalculateRouteCarModeOptions.CalculateRouteCarModeOptions
instance GHC.Read.Read Amazonka.Location.Types.CalculateRouteCarModeOptions.CalculateRouteCarModeOptions
instance GHC.Classes.Eq Amazonka.Location.Types.CalculateRouteCarModeOptions.CalculateRouteCarModeOptions
instance Data.Hashable.Class.Hashable Amazonka.Location.Types.CalculateRouteCarModeOptions.CalculateRouteCarModeOptions
instance Control.DeepSeq.NFData Amazonka.Location.Types.CalculateRouteCarModeOptions.CalculateRouteCarModeOptions
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Location.Types.CalculateRouteCarModeOptions.CalculateRouteCarModeOptions


module Amazonka.Location.Types.DevicePosition

-- | Contains the device position details.
--   
--   <i>See:</i> <a>newDevicePosition</a> smart constructor.
data DevicePosition
DevicePosition' :: Maybe Text -> Sensitive (NonEmpty Double) -> POSIX -> POSIX -> DevicePosition

-- | The device whose position you retrieved.
[$sel:deviceId:DevicePosition'] :: DevicePosition -> Maybe Text

-- | The last known device position.
[$sel:position:DevicePosition'] :: DevicePosition -> Sensitive (NonEmpty Double)

-- | The timestamp for when the tracker resource received the device
--   position in <a>ISO 8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
[$sel:receivedTime:DevicePosition'] :: DevicePosition -> POSIX

-- | The timestamp at which the device's position was determined. Uses
--   <a>ISO 8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
[$sel:sampleTime:DevicePosition'] :: DevicePosition -> POSIX

-- | Create a value of <a>DevicePosition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceId:DevicePosition'</a>, <a>devicePosition_deviceId</a> -
--   The device whose position you retrieved.
--   
--   <a>$sel:position:DevicePosition'</a>, <a>devicePosition_position</a> -
--   The last known device position.
--   
--   <a>$sel:receivedTime:DevicePosition'</a>,
--   <a>devicePosition_receivedTime</a> - The timestamp for when the
--   tracker resource received the device position in <a>ISO 8601</a>
--   format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
--   
--   <a>$sel:sampleTime:DevicePosition'</a>,
--   <a>devicePosition_sampleTime</a> - The timestamp at which the device's
--   position was determined. Uses <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
newDevicePosition :: NonEmpty Double -> UTCTime -> UTCTime -> DevicePosition

-- | The device whose position you retrieved.
devicePosition_deviceId :: Lens' DevicePosition (Maybe Text)

-- | The last known device position.
devicePosition_position :: Lens' DevicePosition (NonEmpty Double)

-- | The timestamp for when the tracker resource received the device
--   position in <a>ISO 8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
devicePosition_receivedTime :: Lens' DevicePosition UTCTime

-- | The timestamp at which the device's position was determined. Uses
--   <a>ISO 8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
devicePosition_sampleTime :: Lens' DevicePosition UTCTime
instance GHC.Generics.Generic Amazonka.Location.Types.DevicePosition.DevicePosition
instance GHC.Show.Show Amazonka.Location.Types.DevicePosition.DevicePosition
instance GHC.Classes.Eq Amazonka.Location.Types.DevicePosition.DevicePosition
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Location.Types.DevicePosition.DevicePosition
instance Data.Hashable.Class.Hashable Amazonka.Location.Types.DevicePosition.DevicePosition
instance Control.DeepSeq.NFData Amazonka.Location.Types.DevicePosition.DevicePosition


module Amazonka.Location.Types.DevicePositionUpdate

-- | Contains the position update details for a device.
--   
--   <i>See:</i> <a>newDevicePositionUpdate</a> smart constructor.
data DevicePositionUpdate
DevicePositionUpdate' :: Text -> Sensitive (NonEmpty Double) -> POSIX -> DevicePositionUpdate

-- | The device associated to the position update.
[$sel:deviceId:DevicePositionUpdate'] :: DevicePositionUpdate -> Text

-- | The latest device position defined in <a>WGS 84</a> format: <tt>[X or
--   longitude, Y or latitude]</tt>.
[$sel:position:DevicePositionUpdate'] :: DevicePositionUpdate -> Sensitive (NonEmpty Double)

-- | The timestamp at which the device's position was determined. Uses
--   <a>ISO 8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
[$sel:sampleTime:DevicePositionUpdate'] :: DevicePositionUpdate -> POSIX

-- | Create a value of <a>DevicePositionUpdate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceId:DevicePositionUpdate'</a>,
--   <a>devicePositionUpdate_deviceId</a> - The device associated to the
--   position update.
--   
--   <a>$sel:position:DevicePositionUpdate'</a>,
--   <a>devicePositionUpdate_position</a> - The latest device position
--   defined in <a>WGS 84</a> format: <tt>[X or longitude, Y or
--   latitude]</tt>.
--   
--   <a>$sel:sampleTime:DevicePositionUpdate'</a>,
--   <a>devicePositionUpdate_sampleTime</a> - The timestamp at which the
--   device's position was determined. Uses <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
newDevicePositionUpdate :: Text -> NonEmpty Double -> UTCTime -> DevicePositionUpdate

-- | The device associated to the position update.
devicePositionUpdate_deviceId :: Lens' DevicePositionUpdate Text

-- | The latest device position defined in <a>WGS 84</a> format: <tt>[X or
--   longitude, Y or latitude]</tt>.
devicePositionUpdate_position :: Lens' DevicePositionUpdate (NonEmpty Double)

-- | The timestamp at which the device's position was determined. Uses
--   <a>ISO 8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
devicePositionUpdate_sampleTime :: Lens' DevicePositionUpdate UTCTime
instance GHC.Generics.Generic Amazonka.Location.Types.DevicePositionUpdate.DevicePositionUpdate
instance GHC.Show.Show Amazonka.Location.Types.DevicePositionUpdate.DevicePositionUpdate
instance GHC.Classes.Eq Amazonka.Location.Types.DevicePositionUpdate.DevicePositionUpdate
instance Data.Hashable.Class.Hashable Amazonka.Location.Types.DevicePositionUpdate.DevicePositionUpdate
instance Control.DeepSeq.NFData Amazonka.Location.Types.DevicePositionUpdate.DevicePositionUpdate
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Location.Types.DevicePositionUpdate.DevicePositionUpdate


module Amazonka.Location.Types.DimensionUnit
newtype DimensionUnit
DimensionUnit' :: Text -> DimensionUnit
[fromDimensionUnit] :: DimensionUnit -> Text
pattern DimensionUnit_Feet :: DimensionUnit
pattern DimensionUnit_Meters :: DimensionUnit
instance Amazonka.Data.XML.ToXML Amazonka.Location.Types.DimensionUnit.DimensionUnit
instance Amazonka.Data.XML.FromXML Amazonka.Location.Types.DimensionUnit.DimensionUnit
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Location.Types.DimensionUnit.DimensionUnit
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Location.Types.DimensionUnit.DimensionUnit
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Location.Types.DimensionUnit.DimensionUnit
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Location.Types.DimensionUnit.DimensionUnit
instance Amazonka.Data.Query.ToQuery Amazonka.Location.Types.DimensionUnit.DimensionUnit
instance Amazonka.Data.Headers.ToHeader Amazonka.Location.Types.DimensionUnit.DimensionUnit
instance Amazonka.Data.Log.ToLog Amazonka.Location.Types.DimensionUnit.DimensionUnit
instance Amazonka.Data.ByteString.ToByteString Amazonka.Location.Types.DimensionUnit.DimensionUnit
instance Amazonka.Data.Text.ToText Amazonka.Location.Types.DimensionUnit.DimensionUnit
instance Amazonka.Data.Text.FromText Amazonka.Location.Types.DimensionUnit.DimensionUnit
instance Control.DeepSeq.NFData Amazonka.Location.Types.DimensionUnit.DimensionUnit
instance Data.Hashable.Class.Hashable Amazonka.Location.Types.DimensionUnit.DimensionUnit
instance GHC.Generics.Generic Amazonka.Location.Types.DimensionUnit.DimensionUnit
instance GHC.Classes.Ord Amazonka.Location.Types.DimensionUnit.DimensionUnit
instance GHC.Classes.Eq Amazonka.Location.Types.DimensionUnit.DimensionUnit
instance GHC.Read.Read Amazonka.Location.Types.DimensionUnit.DimensionUnit
instance GHC.Show.Show Amazonka.Location.Types.DimensionUnit.DimensionUnit


module Amazonka.Location.Types.DistanceUnit
newtype DistanceUnit
DistanceUnit' :: Text -> DistanceUnit
[fromDistanceUnit] :: DistanceUnit -> Text
pattern DistanceUnit_Kilometers :: DistanceUnit
pattern DistanceUnit_Miles :: DistanceUnit
instance Amazonka.Data.XML.ToXML Amazonka.Location.Types.DistanceUnit.DistanceUnit
instance Amazonka.Data.XML.FromXML Amazonka.Location.Types.DistanceUnit.DistanceUnit
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Location.Types.DistanceUnit.DistanceUnit
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Location.Types.DistanceUnit.DistanceUnit
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Location.Types.DistanceUnit.DistanceUnit
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Location.Types.DistanceUnit.DistanceUnit
instance Amazonka.Data.Query.ToQuery Amazonka.Location.Types.DistanceUnit.DistanceUnit
instance Amazonka.Data.Headers.ToHeader Amazonka.Location.Types.DistanceUnit.DistanceUnit
instance Amazonka.Data.Log.ToLog Amazonka.Location.Types.DistanceUnit.DistanceUnit
instance Amazonka.Data.ByteString.ToByteString Amazonka.Location.Types.DistanceUnit.DistanceUnit
instance Amazonka.Data.Text.ToText Amazonka.Location.Types.DistanceUnit.DistanceUnit
instance Amazonka.Data.Text.FromText Amazonka.Location.Types.DistanceUnit.DistanceUnit
instance Control.DeepSeq.NFData Amazonka.Location.Types.DistanceUnit.DistanceUnit
instance Data.Hashable.Class.Hashable Amazonka.Location.Types.DistanceUnit.DistanceUnit
instance GHC.Generics.Generic Amazonka.Location.Types.DistanceUnit.DistanceUnit
instance GHC.Classes.Ord Amazonka.Location.Types.DistanceUnit.DistanceUnit
instance GHC.Classes.Eq Amazonka.Location.Types.DistanceUnit.DistanceUnit
instance GHC.Read.Read Amazonka.Location.Types.DistanceUnit.DistanceUnit
instance GHC.Show.Show Amazonka.Location.Types.DistanceUnit.DistanceUnit


module Amazonka.Location.Types.CalculateRouteSummary

-- | A summary of the calculated route.
--   
--   <i>See:</i> <a>newCalculateRouteSummary</a> smart constructor.
data CalculateRouteSummary
CalculateRouteSummary' :: Text -> Double -> DistanceUnit -> Double -> Sensitive (NonEmpty Double) -> CalculateRouteSummary

-- | The data provider of traffic and road network data used to calculate
--   the route. Indicates one of the available providers:
--   
--   <ul>
--   <li><pre>Esri</pre></li>
--   <li><pre>Here</pre></li>
--   </ul>
--   
--   For more information about data providers, see <a>Amazon Location
--   Service data providers</a>.
[$sel:dataSource:CalculateRouteSummary'] :: CalculateRouteSummary -> Text

-- | The total distance covered by the route. The sum of the distance
--   travelled between every stop on the route.
--   
--   If Esri is the data source for the route calculator, the route
--   distance can’t be greater than 400 km. If the route exceeds 400 km,
--   the response is a <tt>400 RoutesValidationException</tt> error.
[$sel:distance:CalculateRouteSummary'] :: CalculateRouteSummary -> Double

-- | The unit of measurement for the distance.
[$sel:distanceUnit:CalculateRouteSummary'] :: CalculateRouteSummary -> DistanceUnit

-- | The total travel time for the route measured in seconds. The sum of
--   the travel time between every stop on the route.
[$sel:durationSeconds:CalculateRouteSummary'] :: CalculateRouteSummary -> Double

-- | Specifies a geographical box surrounding a route. Used to zoom into a
--   route when displaying it in a map. For example, <tt>[min x, min y, max
--   x, max y]</tt>.
--   
--   The first 2 <tt>bbox</tt> parameters describe the lower southwest
--   corner:
--   
--   <ul>
--   <li>The first <tt>bbox</tt> position is the X coordinate or longitude
--   of the lower southwest corner.</li>
--   <li>The second <tt>bbox</tt> position is the Y coordinate or latitude
--   of the lower southwest corner.</li>
--   </ul>
--   
--   The next 2 <tt>bbox</tt> parameters describe the upper northeast
--   corner:
--   
--   <ul>
--   <li>The third <tt>bbox</tt> position is the X coordinate, or longitude
--   of the upper northeast corner.</li>
--   <li>The fourth <tt>bbox</tt> position is the Y coordinate, or latitude
--   of the upper northeast corner.</li>
--   </ul>
[$sel:routeBBox:CalculateRouteSummary'] :: CalculateRouteSummary -> Sensitive (NonEmpty Double)

-- | Create a value of <a>CalculateRouteSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataSource:CalculateRouteSummary'</a>,
--   <a>calculateRouteSummary_dataSource</a> - The data provider of traffic
--   and road network data used to calculate the route. Indicates one of
--   the available providers:
--   
--   <ul>
--   <li><pre>Esri</pre></li>
--   <li><pre>Here</pre></li>
--   </ul>
--   
--   For more information about data providers, see <a>Amazon Location
--   Service data providers</a>.
--   
--   <a>$sel:distance:CalculateRouteSummary'</a>,
--   <a>calculateRouteSummary_distance</a> - The total distance covered by
--   the route. The sum of the distance travelled between every stop on the
--   route.
--   
--   If Esri is the data source for the route calculator, the route
--   distance can’t be greater than 400 km. If the route exceeds 400 km,
--   the response is a <tt>400 RoutesValidationException</tt> error.
--   
--   <a>$sel:distanceUnit:CalculateRouteSummary'</a>,
--   <a>calculateRouteSummary_distanceUnit</a> - The unit of measurement
--   for the distance.
--   
--   <a>$sel:durationSeconds:CalculateRouteSummary'</a>,
--   <a>calculateRouteSummary_durationSeconds</a> - The total travel time
--   for the route measured in seconds. The sum of the travel time between
--   every stop on the route.
--   
--   <a>$sel:routeBBox:CalculateRouteSummary'</a>,
--   <a>calculateRouteSummary_routeBBox</a> - Specifies a geographical box
--   surrounding a route. Used to zoom into a route when displaying it in a
--   map. For example, <tt>[min x, min y, max x, max y]</tt>.
--   
--   The first 2 <tt>bbox</tt> parameters describe the lower southwest
--   corner:
--   
--   <ul>
--   <li>The first <tt>bbox</tt> position is the X coordinate or longitude
--   of the lower southwest corner.</li>
--   <li>The second <tt>bbox</tt> position is the Y coordinate or latitude
--   of the lower southwest corner.</li>
--   </ul>
--   
--   The next 2 <tt>bbox</tt> parameters describe the upper northeast
--   corner:
--   
--   <ul>
--   <li>The third <tt>bbox</tt> position is the X coordinate, or longitude
--   of the upper northeast corner.</li>
--   <li>The fourth <tt>bbox</tt> position is the Y coordinate, or latitude
--   of the upper northeast corner.</li>
--   </ul>
newCalculateRouteSummary :: Text -> Double -> DistanceUnit -> Double -> NonEmpty Double -> CalculateRouteSummary

-- | The data provider of traffic and road network data used to calculate
--   the route. Indicates one of the available providers:
--   
--   <ul>
--   <li><pre>Esri</pre></li>
--   <li><pre>Here</pre></li>
--   </ul>
--   
--   For more information about data providers, see <a>Amazon Location
--   Service data providers</a>.
calculateRouteSummary_dataSource :: Lens' CalculateRouteSummary Text

-- | The total distance covered by the route. The sum of the distance
--   travelled between every stop on the route.
--   
--   If Esri is the data source for the route calculator, the route
--   distance can’t be greater than 400 km. If the route exceeds 400 km,
--   the response is a <tt>400 RoutesValidationException</tt> error.
calculateRouteSummary_distance :: Lens' CalculateRouteSummary Double

-- | The unit of measurement for the distance.
calculateRouteSummary_distanceUnit :: Lens' CalculateRouteSummary DistanceUnit

-- | The total travel time for the route measured in seconds. The sum of
--   the travel time between every stop on the route.
calculateRouteSummary_durationSeconds :: Lens' CalculateRouteSummary Double

-- | Specifies a geographical box surrounding a route. Used to zoom into a
--   route when displaying it in a map. For example, <tt>[min x, min y, max
--   x, max y]</tt>.
--   
--   The first 2 <tt>bbox</tt> parameters describe the lower southwest
--   corner:
--   
--   <ul>
--   <li>The first <tt>bbox</tt> position is the X coordinate or longitude
--   of the lower southwest corner.</li>
--   <li>The second <tt>bbox</tt> position is the Y coordinate or latitude
--   of the lower southwest corner.</li>
--   </ul>
--   
--   The next 2 <tt>bbox</tt> parameters describe the upper northeast
--   corner:
--   
--   <ul>
--   <li>The third <tt>bbox</tt> position is the X coordinate, or longitude
--   of the upper northeast corner.</li>
--   <li>The fourth <tt>bbox</tt> position is the Y coordinate, or latitude
--   of the upper northeast corner.</li>
--   </ul>
calculateRouteSummary_routeBBox :: Lens' CalculateRouteSummary (NonEmpty Double)
instance GHC.Generics.Generic Amazonka.Location.Types.CalculateRouteSummary.CalculateRouteSummary
instance GHC.Show.Show Amazonka.Location.Types.CalculateRouteSummary.CalculateRouteSummary
instance GHC.Classes.Eq Amazonka.Location.Types.CalculateRouteSummary.CalculateRouteSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Location.Types.CalculateRouteSummary.CalculateRouteSummary
instance Data.Hashable.Class.Hashable Amazonka.Location.Types.CalculateRouteSummary.CalculateRouteSummary
instance Control.DeepSeq.NFData Amazonka.Location.Types.CalculateRouteSummary.CalculateRouteSummary


module Amazonka.Location.Types.GeofenceGeometry

-- | Contains the geofence geometry details.
--   
--   Amazon Location doesn't currently support polygons with holes,
--   multipolygons, polygons that are wound clockwise, or that cross the
--   antimeridian.
--   
--   <i>See:</i> <a>newGeofenceGeometry</a> smart constructor.
data GeofenceGeometry
GeofenceGeometry' :: Maybe (NonEmpty (NonEmpty (Sensitive (NonEmpty Double)))) -> GeofenceGeometry

-- | An array of 1 or more linear rings. A linear ring is an array of 4 or
--   more vertices, where the first and last vertex are the same to form a
--   closed boundary. Each vertex is a 2-dimensional point of the form:
--   <tt>[longitude, latitude]</tt>.
--   
--   The first linear ring is an outer ring, describing the polygon's
--   boundary. Subsequent linear rings may be inner or outer rings to
--   describe holes and islands. Outer rings must list their vertices in
--   counter-clockwise order around the ring's center, where the left side
--   is the polygon's exterior. Inner rings must list their vertices in
--   clockwise order, where the left side is the polygon's interior.
[$sel:polygon:GeofenceGeometry'] :: GeofenceGeometry -> Maybe (NonEmpty (NonEmpty (Sensitive (NonEmpty Double))))

-- | Create a value of <a>GeofenceGeometry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:polygon:GeofenceGeometry'</a>, <a>geofenceGeometry_polygon</a>
--   - An array of 1 or more linear rings. A linear ring is an array of 4
--   or more vertices, where the first and last vertex are the same to form
--   a closed boundary. Each vertex is a 2-dimensional point of the form:
--   <tt>[longitude, latitude]</tt>.
--   
--   The first linear ring is an outer ring, describing the polygon's
--   boundary. Subsequent linear rings may be inner or outer rings to
--   describe holes and islands. Outer rings must list their vertices in
--   counter-clockwise order around the ring's center, where the left side
--   is the polygon's exterior. Inner rings must list their vertices in
--   clockwise order, where the left side is the polygon's interior.
newGeofenceGeometry :: GeofenceGeometry

-- | An array of 1 or more linear rings. A linear ring is an array of 4 or
--   more vertices, where the first and last vertex are the same to form a
--   closed boundary. Each vertex is a 2-dimensional point of the form:
--   <tt>[longitude, latitude]</tt>.
--   
--   The first linear ring is an outer ring, describing the polygon's
--   boundary. Subsequent linear rings may be inner or outer rings to
--   describe holes and islands. Outer rings must list their vertices in
--   counter-clockwise order around the ring's center, where the left side
--   is the polygon's exterior. Inner rings must list their vertices in
--   clockwise order, where the left side is the polygon's interior.
geofenceGeometry_polygon :: Lens' GeofenceGeometry (Maybe (NonEmpty (NonEmpty (NonEmpty Double))))
instance GHC.Generics.Generic Amazonka.Location.Types.GeofenceGeometry.GeofenceGeometry
instance GHC.Show.Show Amazonka.Location.Types.GeofenceGeometry.GeofenceGeometry
instance GHC.Classes.Eq Amazonka.Location.Types.GeofenceGeometry.GeofenceGeometry
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Location.Types.GeofenceGeometry.GeofenceGeometry
instance Data.Hashable.Class.Hashable Amazonka.Location.Types.GeofenceGeometry.GeofenceGeometry
instance Control.DeepSeq.NFData Amazonka.Location.Types.GeofenceGeometry.GeofenceGeometry
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Location.Types.GeofenceGeometry.GeofenceGeometry


module Amazonka.Location.Types.BatchPutGeofenceRequestEntry

-- | Contains geofence geometry details.
--   
--   <i>See:</i> <a>newBatchPutGeofenceRequestEntry</a> smart constructor.
data BatchPutGeofenceRequestEntry
BatchPutGeofenceRequestEntry' :: Text -> GeofenceGeometry -> BatchPutGeofenceRequestEntry

-- | The identifier for the geofence to be stored in a given geofence
--   collection.
[$sel:geofenceId:BatchPutGeofenceRequestEntry'] :: BatchPutGeofenceRequestEntry -> Text

-- | Contains the polygon details to specify the position of the geofence.
--   
--   Each <a>geofence polygon</a> can have a maximum of 1,000 vertices.
[$sel:geometry:BatchPutGeofenceRequestEntry'] :: BatchPutGeofenceRequestEntry -> GeofenceGeometry

-- | Create a value of <a>BatchPutGeofenceRequestEntry</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:geofenceId:BatchPutGeofenceRequestEntry'</a>,
--   <a>batchPutGeofenceRequestEntry_geofenceId</a> - The identifier for
--   the geofence to be stored in a given geofence collection.
--   
--   <a>$sel:geometry:BatchPutGeofenceRequestEntry'</a>,
--   <a>batchPutGeofenceRequestEntry_geometry</a> - Contains the polygon
--   details to specify the position of the geofence.
--   
--   Each <a>geofence polygon</a> can have a maximum of 1,000 vertices.
newBatchPutGeofenceRequestEntry :: Text -> GeofenceGeometry -> BatchPutGeofenceRequestEntry

-- | The identifier for the geofence to be stored in a given geofence
--   collection.
batchPutGeofenceRequestEntry_geofenceId :: Lens' BatchPutGeofenceRequestEntry Text

-- | Contains the polygon details to specify the position of the geofence.
--   
--   Each <a>geofence polygon</a> can have a maximum of 1,000 vertices.
batchPutGeofenceRequestEntry_geometry :: Lens' BatchPutGeofenceRequestEntry GeofenceGeometry
instance GHC.Generics.Generic Amazonka.Location.Types.BatchPutGeofenceRequestEntry.BatchPutGeofenceRequestEntry
instance GHC.Show.Show Amazonka.Location.Types.BatchPutGeofenceRequestEntry.BatchPutGeofenceRequestEntry
instance GHC.Classes.Eq Amazonka.Location.Types.BatchPutGeofenceRequestEntry.BatchPutGeofenceRequestEntry
instance Data.Hashable.Class.Hashable Amazonka.Location.Types.BatchPutGeofenceRequestEntry.BatchPutGeofenceRequestEntry
instance Control.DeepSeq.NFData Amazonka.Location.Types.BatchPutGeofenceRequestEntry.BatchPutGeofenceRequestEntry
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Location.Types.BatchPutGeofenceRequestEntry.BatchPutGeofenceRequestEntry


module Amazonka.Location.Types.IntendedUse
newtype IntendedUse
IntendedUse' :: Text -> IntendedUse
[fromIntendedUse] :: IntendedUse -> Text
pattern IntendedUse_SingleUse :: IntendedUse
pattern IntendedUse_Storage :: IntendedUse
instance Amazonka.Data.XML.ToXML Amazonka.Location.Types.IntendedUse.IntendedUse
instance Amazonka.Data.XML.FromXML Amazonka.Location.Types.IntendedUse.IntendedUse
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Location.Types.IntendedUse.IntendedUse
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Location.Types.IntendedUse.IntendedUse
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Location.Types.IntendedUse.IntendedUse
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Location.Types.IntendedUse.IntendedUse
instance Amazonka.Data.Query.ToQuery Amazonka.Location.Types.IntendedUse.IntendedUse
instance Amazonka.Data.Headers.ToHeader Amazonka.Location.Types.IntendedUse.IntendedUse
instance Amazonka.Data.Log.ToLog Amazonka.Location.Types.IntendedUse.IntendedUse
instance Amazonka.Data.ByteString.ToByteString Amazonka.Location.Types.IntendedUse.IntendedUse
instance Amazonka.Data.Text.ToText Amazonka.Location.Types.IntendedUse.IntendedUse
instance Amazonka.Data.Text.FromText Amazonka.Location.Types.IntendedUse.IntendedUse
instance Control.DeepSeq.NFData Amazonka.Location.Types.IntendedUse.IntendedUse
instance Data.Hashable.Class.Hashable Amazonka.Location.Types.IntendedUse.IntendedUse
instance GHC.Generics.Generic Amazonka.Location.Types.IntendedUse.IntendedUse
instance GHC.Classes.Ord Amazonka.Location.Types.IntendedUse.IntendedUse
instance GHC.Classes.Eq Amazonka.Location.Types.IntendedUse.IntendedUse
instance GHC.Read.Read Amazonka.Location.Types.IntendedUse.IntendedUse
instance GHC.Show.Show Amazonka.Location.Types.IntendedUse.IntendedUse


module Amazonka.Location.Types.DataSourceConfiguration

-- | Specifies the data storage option chosen for requesting Places.
--   
--   When using Amazon Location Places:
--   
--   <ul>
--   <li>If using HERE Technologies as a data provider, you can't store
--   results for locations in Japan by setting <tt>IntendedUse</tt> to
--   <tt>Storage</tt>. parameter.</li>
--   <li>Under the <tt>MobileAssetTracking</tt> or
--   <tt>MobilAssetManagement</tt> pricing plan, you can't store results
--   from your place index resources by setting <tt>IntendedUse</tt> to
--   <tt>Storage</tt>. This returns a validation exception error.</li>
--   </ul>
--   
--   For more information, see the <a>AWS Service Terms</a> for Amazon
--   Location Service.
--   
--   <i>See:</i> <a>newDataSourceConfiguration</a> smart constructor.
data DataSourceConfiguration
DataSourceConfiguration' :: Maybe IntendedUse -> DataSourceConfiguration

-- | Specifies how the results of an operation will be stored by the
--   caller.
--   
--   Valid values include:
--   
--   <ul>
--   <li><tt>SingleUse</tt> specifies that the results won't be
--   stored.</li>
--   <li><tt>Storage</tt> specifies that the result can be cached or stored
--   in a database.</li>
--   </ul>
--   
--   Default value: <tt>SingleUse</tt>
[$sel:intendedUse:DataSourceConfiguration'] :: DataSourceConfiguration -> Maybe IntendedUse

-- | Create a value of <a>DataSourceConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:intendedUse:DataSourceConfiguration'</a>,
--   <a>dataSourceConfiguration_intendedUse</a> - Specifies how the results
--   of an operation will be stored by the caller.
--   
--   Valid values include:
--   
--   <ul>
--   <li><tt>SingleUse</tt> specifies that the results won't be
--   stored.</li>
--   <li><tt>Storage</tt> specifies that the result can be cached or stored
--   in a database.</li>
--   </ul>
--   
--   Default value: <tt>SingleUse</tt>
newDataSourceConfiguration :: DataSourceConfiguration

-- | Specifies how the results of an operation will be stored by the
--   caller.
--   
--   Valid values include:
--   
--   <ul>
--   <li><tt>SingleUse</tt> specifies that the results won't be
--   stored.</li>
--   <li><tt>Storage</tt> specifies that the result can be cached or stored
--   in a database.</li>
--   </ul>
--   
--   Default value: <tt>SingleUse</tt>
dataSourceConfiguration_intendedUse :: Lens' DataSourceConfiguration (Maybe IntendedUse)
instance GHC.Generics.Generic Amazonka.Location.Types.DataSourceConfiguration.DataSourceConfiguration
instance GHC.Show.Show Amazonka.Location.Types.DataSourceConfiguration.DataSourceConfiguration
instance GHC.Read.Read Amazonka.Location.Types.DataSourceConfiguration.DataSourceConfiguration
instance GHC.Classes.Eq Amazonka.Location.Types.DataSourceConfiguration.DataSourceConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Location.Types.DataSourceConfiguration.DataSourceConfiguration
instance Data.Hashable.Class.Hashable Amazonka.Location.Types.DataSourceConfiguration.DataSourceConfiguration
instance Control.DeepSeq.NFData Amazonka.Location.Types.DataSourceConfiguration.DataSourceConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Location.Types.DataSourceConfiguration.DataSourceConfiguration


module Amazonka.Location.Types.LegGeometry

-- | Contains the geometry details for each path between a pair of
--   positions. Used in plotting a route leg on a map.
--   
--   <i>See:</i> <a>newLegGeometry</a> smart constructor.
data LegGeometry
LegGeometry' :: Maybe (NonEmpty (Sensitive (NonEmpty Double))) -> LegGeometry

-- | An ordered list of positions used to plot a route on a map.
--   
--   The first position is closest to the start position for the leg, and
--   the last position is the closest to the end position for the leg.
--   
--   <ul>
--   <li>For example, <tt>[[-123.117, 49.284],[-123.115, 49.285],[-123.115,
--   49.285]]</tt></li>
--   </ul>
[$sel:lineString:LegGeometry'] :: LegGeometry -> Maybe (NonEmpty (Sensitive (NonEmpty Double)))

-- | Create a value of <a>LegGeometry</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lineString:LegGeometry'</a>, <a>legGeometry_lineString</a> -
--   An ordered list of positions used to plot a route on a map.
--   
--   The first position is closest to the start position for the leg, and
--   the last position is the closest to the end position for the leg.
--   
--   <ul>
--   <li>For example, <tt>[[-123.117, 49.284],[-123.115, 49.285],[-123.115,
--   49.285]]</tt></li>
--   </ul>
newLegGeometry :: LegGeometry

-- | An ordered list of positions used to plot a route on a map.
--   
--   The first position is closest to the start position for the leg, and
--   the last position is the closest to the end position for the leg.
--   
--   <ul>
--   <li>For example, <tt>[[-123.117, 49.284],[-123.115, 49.285],[-123.115,
--   49.285]]</tt></li>
--   </ul>
legGeometry_lineString :: Lens' LegGeometry (Maybe (NonEmpty (NonEmpty Double)))
instance GHC.Generics.Generic Amazonka.Location.Types.LegGeometry.LegGeometry
instance GHC.Show.Show Amazonka.Location.Types.LegGeometry.LegGeometry
instance GHC.Classes.Eq Amazonka.Location.Types.LegGeometry.LegGeometry
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Location.Types.LegGeometry.LegGeometry
instance Data.Hashable.Class.Hashable Amazonka.Location.Types.LegGeometry.LegGeometry
instance Control.DeepSeq.NFData Amazonka.Location.Types.LegGeometry.LegGeometry


module Amazonka.Location.Types.ListDevicePositionsResponseEntry

-- | Contains the tracker resource details.
--   
--   <i>See:</i> <a>newListDevicePositionsResponseEntry</a> smart
--   constructor.
data ListDevicePositionsResponseEntry
ListDevicePositionsResponseEntry' :: Text -> Sensitive (NonEmpty Double) -> POSIX -> ListDevicePositionsResponseEntry

-- | The ID of the device for this position.
[$sel:deviceId:ListDevicePositionsResponseEntry'] :: ListDevicePositionsResponseEntry -> Text

-- | The last known device position. Empty if no positions currently
--   stored.
[$sel:position:ListDevicePositionsResponseEntry'] :: ListDevicePositionsResponseEntry -> Sensitive (NonEmpty Double)

-- | The timestamp at which the device position was determined. Uses <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
[$sel:sampleTime:ListDevicePositionsResponseEntry'] :: ListDevicePositionsResponseEntry -> POSIX

-- | Create a value of <a>ListDevicePositionsResponseEntry</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceId:ListDevicePositionsResponseEntry'</a>,
--   <a>listDevicePositionsResponseEntry_deviceId</a> - The ID of the
--   device for this position.
--   
--   <a>$sel:position:ListDevicePositionsResponseEntry'</a>,
--   <a>listDevicePositionsResponseEntry_position</a> - The last known
--   device position. Empty if no positions currently stored.
--   
--   <a>$sel:sampleTime:ListDevicePositionsResponseEntry'</a>,
--   <a>listDevicePositionsResponseEntry_sampleTime</a> - The timestamp at
--   which the device position was determined. Uses <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
newListDevicePositionsResponseEntry :: Text -> NonEmpty Double -> UTCTime -> ListDevicePositionsResponseEntry

-- | The ID of the device for this position.
listDevicePositionsResponseEntry_deviceId :: Lens' ListDevicePositionsResponseEntry Text

-- | The last known device position. Empty if no positions currently
--   stored.
listDevicePositionsResponseEntry_position :: Lens' ListDevicePositionsResponseEntry (NonEmpty Double)

-- | The timestamp at which the device position was determined. Uses <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
listDevicePositionsResponseEntry_sampleTime :: Lens' ListDevicePositionsResponseEntry UTCTime
instance GHC.Generics.Generic Amazonka.Location.Types.ListDevicePositionsResponseEntry.ListDevicePositionsResponseEntry
instance GHC.Show.Show Amazonka.Location.Types.ListDevicePositionsResponseEntry.ListDevicePositionsResponseEntry
instance GHC.Classes.Eq Amazonka.Location.Types.ListDevicePositionsResponseEntry.ListDevicePositionsResponseEntry
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Location.Types.ListDevicePositionsResponseEntry.ListDevicePositionsResponseEntry
instance Data.Hashable.Class.Hashable Amazonka.Location.Types.ListDevicePositionsResponseEntry.ListDevicePositionsResponseEntry
instance Control.DeepSeq.NFData Amazonka.Location.Types.ListDevicePositionsResponseEntry.ListDevicePositionsResponseEntry


module Amazonka.Location.Types.ListGeofenceResponseEntry

-- | Contains a list of geofences stored in a given geofence collection.
--   
--   <i>See:</i> <a>newListGeofenceResponseEntry</a> smart constructor.
data ListGeofenceResponseEntry
ListGeofenceResponseEntry' :: POSIX -> Text -> GeofenceGeometry -> Text -> POSIX -> ListGeofenceResponseEntry

-- | The timestamp for when the geofence was stored in a geofence
--   collection in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
[$sel:createTime:ListGeofenceResponseEntry'] :: ListGeofenceResponseEntry -> POSIX

-- | The geofence identifier.
[$sel:geofenceId:ListGeofenceResponseEntry'] :: ListGeofenceResponseEntry -> Text

-- | Contains the geofence geometry details describing a polygon.
[$sel:geometry:ListGeofenceResponseEntry'] :: ListGeofenceResponseEntry -> GeofenceGeometry

-- | Identifies the state of the geofence. A geofence will hold one of the
--   following states:
--   
--   <ul>
--   <li><tt>ACTIVE</tt> — The geofence has been indexed by the
--   system.</li>
--   <li><tt>PENDING</tt> — The geofence is being processed by the
--   system.</li>
--   <li><tt>FAILED</tt> — The geofence failed to be indexed by the
--   system.</li>
--   <li><tt>DELETED</tt> — The geofence has been deleted from the system
--   index.</li>
--   <li><tt>DELETING</tt> — The geofence is being deleted from the system
--   index.</li>
--   </ul>
[$sel:status:ListGeofenceResponseEntry'] :: ListGeofenceResponseEntry -> Text

-- | The timestamp for when the geofence was last updated in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
[$sel:updateTime:ListGeofenceResponseEntry'] :: ListGeofenceResponseEntry -> POSIX

-- | Create a value of <a>ListGeofenceResponseEntry</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createTime:ListGeofenceResponseEntry'</a>,
--   <a>listGeofenceResponseEntry_createTime</a> - The timestamp for when
--   the geofence was stored in a geofence collection in <a>ISO 8601</a>
--   format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
--   
--   <a>$sel:geofenceId:ListGeofenceResponseEntry'</a>,
--   <a>listGeofenceResponseEntry_geofenceId</a> - The geofence identifier.
--   
--   <a>$sel:geometry:ListGeofenceResponseEntry'</a>,
--   <a>listGeofenceResponseEntry_geometry</a> - Contains the geofence
--   geometry details describing a polygon.
--   
--   <a>$sel:status:ListGeofenceResponseEntry'</a>,
--   <a>listGeofenceResponseEntry_status</a> - Identifies the state of the
--   geofence. A geofence will hold one of the following states:
--   
--   <ul>
--   <li><tt>ACTIVE</tt> — The geofence has been indexed by the
--   system.</li>
--   <li><tt>PENDING</tt> — The geofence is being processed by the
--   system.</li>
--   <li><tt>FAILED</tt> — The geofence failed to be indexed by the
--   system.</li>
--   <li><tt>DELETED</tt> — The geofence has been deleted from the system
--   index.</li>
--   <li><tt>DELETING</tt> — The geofence is being deleted from the system
--   index.</li>
--   </ul>
--   
--   <a>$sel:updateTime:ListGeofenceResponseEntry'</a>,
--   <a>listGeofenceResponseEntry_updateTime</a> - The timestamp for when
--   the geofence was last updated in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
newListGeofenceResponseEntry :: UTCTime -> Text -> GeofenceGeometry -> Text -> UTCTime -> ListGeofenceResponseEntry

-- | The timestamp for when the geofence was stored in a geofence
--   collection in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
listGeofenceResponseEntry_createTime :: Lens' ListGeofenceResponseEntry UTCTime

-- | The geofence identifier.
listGeofenceResponseEntry_geofenceId :: Lens' ListGeofenceResponseEntry Text

-- | Contains the geofence geometry details describing a polygon.
listGeofenceResponseEntry_geometry :: Lens' ListGeofenceResponseEntry GeofenceGeometry

-- | Identifies the state of the geofence. A geofence will hold one of the
--   following states:
--   
--   <ul>
--   <li><tt>ACTIVE</tt> — The geofence has been indexed by the
--   system.</li>
--   <li><tt>PENDING</tt> — The geofence is being processed by the
--   system.</li>
--   <li><tt>FAILED</tt> — The geofence failed to be indexed by the
--   system.</li>
--   <li><tt>DELETED</tt> — The geofence has been deleted from the system
--   index.</li>
--   <li><tt>DELETING</tt> — The geofence is being deleted from the system
--   index.</li>
--   </ul>
listGeofenceResponseEntry_status :: Lens' ListGeofenceResponseEntry Text

-- | The timestamp for when the geofence was last updated in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
listGeofenceResponseEntry_updateTime :: Lens' ListGeofenceResponseEntry UTCTime
instance GHC.Generics.Generic Amazonka.Location.Types.ListGeofenceResponseEntry.ListGeofenceResponseEntry
instance GHC.Show.Show Amazonka.Location.Types.ListGeofenceResponseEntry.ListGeofenceResponseEntry
instance GHC.Classes.Eq Amazonka.Location.Types.ListGeofenceResponseEntry.ListGeofenceResponseEntry
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Location.Types.ListGeofenceResponseEntry.ListGeofenceResponseEntry
instance Data.Hashable.Class.Hashable Amazonka.Location.Types.ListGeofenceResponseEntry.ListGeofenceResponseEntry
instance Control.DeepSeq.NFData Amazonka.Location.Types.ListGeofenceResponseEntry.ListGeofenceResponseEntry


module Amazonka.Location.Types.MapConfiguration

-- | Specifies the map tile style selected from an available provider.
--   
--   <i>See:</i> <a>newMapConfiguration</a> smart constructor.
data MapConfiguration
MapConfiguration' :: Text -> MapConfiguration

-- | Specifies the map style selected from an available data provider.
--   
--   Valid <a>Esri map styles</a>:
--   
--   <ul>
--   <li><tt>VectorEsriDarkGrayCanvas</tt> – The Esri Dark Gray Canvas map
--   style. A vector basemap with a dark gray, neutral background with
--   minimal colors, labels, and features that's designed to draw attention
--   to your thematic content.</li>
--   <li><tt>RasterEsriImagery</tt> – The Esri Imagery map style. A raster
--   basemap that provides one meter or better satellite and aerial imagery
--   in many parts of the world and lower resolution satellite imagery
--   worldwide.</li>
--   <li><tt>VectorEsriLightGrayCanvas</tt> – The Esri Light Gray Canvas
--   map style, which provides a detailed vector basemap with a light gray,
--   neutral background style with minimal colors, labels, and features
--   that's designed to draw attention to your thematic content.</li>
--   <li><tt>VectorEsriTopographic</tt> – The Esri Light map style, which
--   provides a detailed vector basemap with a classic Esri map style.</li>
--   <li><tt>VectorEsriStreets</tt> – The Esri World Streets map style,
--   which provides a detailed vector basemap for the world symbolized with
--   a classic Esri street map style. The vector tile layer is similar in
--   content and style to the World Street Map raster map.</li>
--   <li><tt>VectorEsriNavigation</tt> – The Esri World Navigation map
--   style, which provides a detailed basemap for the world symbolized with
--   a custom navigation map style that's designed for use during the day
--   in mobile devices.</li>
--   </ul>
--   
--   Valid <a>HERE Technologies map styles</a>:
--   
--   <ul>
--   <li><tt>VectorHereBerlin</tt> – The HERE Berlin map style is a high
--   contrast detailed base map of the world that blends 3D and 2D
--   rendering.When using HERE as your data provider, and selecting the
--   Style <tt>VectorHereBerlin</tt>, you may not use HERE Technologies
--   maps for Asset Management. See the <a>AWS Service Terms</a> for Amazon
--   Location Service.</li>
--   </ul>
[$sel:style:MapConfiguration'] :: MapConfiguration -> Text

-- | Create a value of <a>MapConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:style:MapConfiguration'</a>, <a>mapConfiguration_style</a> -
--   Specifies the map style selected from an available data provider.
--   
--   Valid <a>Esri map styles</a>:
--   
--   <ul>
--   <li><tt>VectorEsriDarkGrayCanvas</tt> – The Esri Dark Gray Canvas map
--   style. A vector basemap with a dark gray, neutral background with
--   minimal colors, labels, and features that's designed to draw attention
--   to your thematic content.</li>
--   <li><tt>RasterEsriImagery</tt> – The Esri Imagery map style. A raster
--   basemap that provides one meter or better satellite and aerial imagery
--   in many parts of the world and lower resolution satellite imagery
--   worldwide.</li>
--   <li><tt>VectorEsriLightGrayCanvas</tt> – The Esri Light Gray Canvas
--   map style, which provides a detailed vector basemap with a light gray,
--   neutral background style with minimal colors, labels, and features
--   that's designed to draw attention to your thematic content.</li>
--   <li><tt>VectorEsriTopographic</tt> – The Esri Light map style, which
--   provides a detailed vector basemap with a classic Esri map style.</li>
--   <li><tt>VectorEsriStreets</tt> – The Esri World Streets map style,
--   which provides a detailed vector basemap for the world symbolized with
--   a classic Esri street map style. The vector tile layer is similar in
--   content and style to the World Street Map raster map.</li>
--   <li><tt>VectorEsriNavigation</tt> – The Esri World Navigation map
--   style, which provides a detailed basemap for the world symbolized with
--   a custom navigation map style that's designed for use during the day
--   in mobile devices.</li>
--   </ul>
--   
--   Valid <a>HERE Technologies map styles</a>:
--   
--   <ul>
--   <li><tt>VectorHereBerlin</tt> – The HERE Berlin map style is a high
--   contrast detailed base map of the world that blends 3D and 2D
--   rendering.When using HERE as your data provider, and selecting the
--   Style <tt>VectorHereBerlin</tt>, you may not use HERE Technologies
--   maps for Asset Management. See the <a>AWS Service Terms</a> for Amazon
--   Location Service.</li>
--   </ul>
newMapConfiguration :: Text -> MapConfiguration

-- | Specifies the map style selected from an available data provider.
--   
--   Valid <a>Esri map styles</a>:
--   
--   <ul>
--   <li><tt>VectorEsriDarkGrayCanvas</tt> – The Esri Dark Gray Canvas map
--   style. A vector basemap with a dark gray, neutral background with
--   minimal colors, labels, and features that's designed to draw attention
--   to your thematic content.</li>
--   <li><tt>RasterEsriImagery</tt> – The Esri Imagery map style. A raster
--   basemap that provides one meter or better satellite and aerial imagery
--   in many parts of the world and lower resolution satellite imagery
--   worldwide.</li>
--   <li><tt>VectorEsriLightGrayCanvas</tt> – The Esri Light Gray Canvas
--   map style, which provides a detailed vector basemap with a light gray,
--   neutral background style with minimal colors, labels, and features
--   that's designed to draw attention to your thematic content.</li>
--   <li><tt>VectorEsriTopographic</tt> – The Esri Light map style, which
--   provides a detailed vector basemap with a classic Esri map style.</li>
--   <li><tt>VectorEsriStreets</tt> – The Esri World Streets map style,
--   which provides a detailed vector basemap for the world symbolized with
--   a classic Esri street map style. The vector tile layer is similar in
--   content and style to the World Street Map raster map.</li>
--   <li><tt>VectorEsriNavigation</tt> – The Esri World Navigation map
--   style, which provides a detailed basemap for the world symbolized with
--   a custom navigation map style that's designed for use during the day
--   in mobile devices.</li>
--   </ul>
--   
--   Valid <a>HERE Technologies map styles</a>:
--   
--   <ul>
--   <li><tt>VectorHereBerlin</tt> – The HERE Berlin map style is a high
--   contrast detailed base map of the world that blends 3D and 2D
--   rendering.When using HERE as your data provider, and selecting the
--   Style <tt>VectorHereBerlin</tt>, you may not use HERE Technologies
--   maps for Asset Management. See the <a>AWS Service Terms</a> for Amazon
--   Location Service.</li>
--   </ul>
mapConfiguration_style :: Lens' MapConfiguration Text
instance GHC.Generics.Generic Amazonka.Location.Types.MapConfiguration.MapConfiguration
instance GHC.Show.Show Amazonka.Location.Types.MapConfiguration.MapConfiguration
instance GHC.Read.Read Amazonka.Location.Types.MapConfiguration.MapConfiguration
instance GHC.Classes.Eq Amazonka.Location.Types.MapConfiguration.MapConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Location.Types.MapConfiguration.MapConfiguration
instance Data.Hashable.Class.Hashable Amazonka.Location.Types.MapConfiguration.MapConfiguration
instance Control.DeepSeq.NFData Amazonka.Location.Types.MapConfiguration.MapConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Location.Types.MapConfiguration.MapConfiguration


module Amazonka.Location.Types.PlaceGeometry

-- | Places uses a point geometry to specify a location or a Place.
--   
--   <i>See:</i> <a>newPlaceGeometry</a> smart constructor.
data PlaceGeometry
PlaceGeometry' :: Maybe (Sensitive (NonEmpty Double)) -> PlaceGeometry

-- | A single point geometry specifies a location for a Place using <a>WGS
--   84</a> coordinates:
--   
--   <ul>
--   <li><i>x</i> — Specifies the x coordinate or longitude.</li>
--   <li><i>y</i> — Specifies the y coordinate or latitude.</li>
--   </ul>
[$sel:point:PlaceGeometry'] :: PlaceGeometry -> Maybe (Sensitive (NonEmpty Double))

-- | Create a value of <a>PlaceGeometry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:point:PlaceGeometry'</a>, <a>placeGeometry_point</a> - A
--   single point geometry specifies a location for a Place using <a>WGS
--   84</a> coordinates:
--   
--   <ul>
--   <li><i>x</i> — Specifies the x coordinate or longitude.</li>
--   <li><i>y</i> — Specifies the y coordinate or latitude.</li>
--   </ul>
newPlaceGeometry :: PlaceGeometry

-- | A single point geometry specifies a location for a Place using <a>WGS
--   84</a> coordinates:
--   
--   <ul>
--   <li><i>x</i> — Specifies the x coordinate or longitude.</li>
--   <li><i>y</i> — Specifies the y coordinate or latitude.</li>
--   </ul>
placeGeometry_point :: Lens' PlaceGeometry (Maybe (NonEmpty Double))
instance GHC.Generics.Generic Amazonka.Location.Types.PlaceGeometry.PlaceGeometry
instance GHC.Show.Show Amazonka.Location.Types.PlaceGeometry.PlaceGeometry
instance GHC.Classes.Eq Amazonka.Location.Types.PlaceGeometry.PlaceGeometry
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Location.Types.PlaceGeometry.PlaceGeometry
instance Data.Hashable.Class.Hashable Amazonka.Location.Types.PlaceGeometry.PlaceGeometry
instance Control.DeepSeq.NFData Amazonka.Location.Types.PlaceGeometry.PlaceGeometry


module Amazonka.Location.Types.Place

-- | Contains details about addresses or points of interest that match the
--   search criteria.
--   
--   <i>See:</i> <a>newPlace</a> smart constructor.
data Place
Place' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> PlaceGeometry -> Place

-- | A name for a local area, such as a city or town name. For example,
--   <tt>Toronto</tt>.
[$sel:municipality:Place'] :: Place -> Maybe Text

-- | The numerical portion of an address, such as a building number.
[$sel:addressNumber:Place'] :: Place -> Maybe Text

-- | A group of numbers and letters in a country-specific format, which
--   accompanies the address for the purpose of identifying a location.
[$sel:postalCode:Place'] :: Place -> Maybe Text

-- | A country/region specified using <a>ISO 3166</a> 3-digit
--   country/region code. For example, <tt>CAN</tt>.
[$sel:country:Place'] :: Place -> Maybe Text

-- | The name for a street or a road to identify a location. For example,
--   <tt>Main Street</tt>.
[$sel:street:Place'] :: Place -> Maybe Text

-- | A country, or an area that's part of a larger region . For example,
--   <tt>Metro Vancouver</tt>.
[$sel:subRegion:Place'] :: Place -> Maybe Text

-- | A name for an area or geographical division, such as a province or
--   state name. For example, <tt>British Columbia</tt>.
[$sel:region:Place'] :: Place -> Maybe Text

-- | The full name and address of the point of interest such as a city,
--   region, or country. For example, <tt>123 Any Street, Any Town,
--   USA</tt>.
[$sel:label:Place'] :: Place -> Maybe Text

-- | The name of a community district. For example, <tt>Downtown</tt>.
[$sel:neighborhood:Place'] :: Place -> Maybe Text
[$sel:geometry:Place'] :: Place -> PlaceGeometry

-- | Create a value of <a>Place</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:municipality:Place'</a>, <a>place_municipality</a> - A name
--   for a local area, such as a city or town name. For example,
--   <tt>Toronto</tt>.
--   
--   <a>$sel:addressNumber:Place'</a>, <a>place_addressNumber</a> - The
--   numerical portion of an address, such as a building number.
--   
--   <a>$sel:postalCode:Place'</a>, <a>place_postalCode</a> - A group of
--   numbers and letters in a country-specific format, which accompanies
--   the address for the purpose of identifying a location.
--   
--   <a>$sel:country:Place'</a>, <a>place_country</a> - A country/region
--   specified using <a>ISO 3166</a> 3-digit country/region code. For
--   example, <tt>CAN</tt>.
--   
--   <a>$sel:street:Place'</a>, <a>place_street</a> - The name for a street
--   or a road to identify a location. For example, <tt>Main Street</tt>.
--   
--   <a>$sel:subRegion:Place'</a>, <a>place_subRegion</a> - A country, or
--   an area that's part of a larger region . For example, <tt>Metro
--   Vancouver</tt>.
--   
--   <a>$sel:region:Place'</a>, <a>place_region</a> - A name for an area or
--   geographical division, such as a province or state name. For example,
--   <tt>British Columbia</tt>.
--   
--   <a>$sel:label:Place'</a>, <a>place_label</a> - The full name and
--   address of the point of interest such as a city, region, or country.
--   For example, <tt>123 Any Street, Any Town, USA</tt>.
--   
--   <a>$sel:neighborhood:Place'</a>, <a>place_neighborhood</a> - The name
--   of a community district. For example, <tt>Downtown</tt>.
--   
--   <a>$sel:geometry:Place'</a>, <a>place_geometry</a> - Undocumented
--   member.
newPlace :: PlaceGeometry -> Place

-- | A name for a local area, such as a city or town name. For example,
--   <tt>Toronto</tt>.
place_municipality :: Lens' Place (Maybe Text)

-- | The numerical portion of an address, such as a building number.
place_addressNumber :: Lens' Place (Maybe Text)

-- | A group of numbers and letters in a country-specific format, which
--   accompanies the address for the purpose of identifying a location.
place_postalCode :: Lens' Place (Maybe Text)

-- | A country/region specified using <a>ISO 3166</a> 3-digit
--   country/region code. For example, <tt>CAN</tt>.
place_country :: Lens' Place (Maybe Text)

-- | The name for a street or a road to identify a location. For example,
--   <tt>Main Street</tt>.
place_street :: Lens' Place (Maybe Text)

-- | A country, or an area that's part of a larger region . For example,
--   <tt>Metro Vancouver</tt>.
place_subRegion :: Lens' Place (Maybe Text)

-- | A name for an area or geographical division, such as a province or
--   state name. For example, <tt>British Columbia</tt>.
place_region :: Lens' Place (Maybe Text)

-- | The full name and address of the point of interest such as a city,
--   region, or country. For example, <tt>123 Any Street, Any Town,
--   USA</tt>.
place_label :: Lens' Place (Maybe Text)

-- | The name of a community district. For example, <tt>Downtown</tt>.
place_neighborhood :: Lens' Place (Maybe Text)

-- | Undocumented member.
place_geometry :: Lens' Place PlaceGeometry
instance GHC.Generics.Generic Amazonka.Location.Types.Place.Place
instance GHC.Show.Show Amazonka.Location.Types.Place.Place
instance GHC.Classes.Eq Amazonka.Location.Types.Place.Place
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Location.Types.Place.Place
instance Data.Hashable.Class.Hashable Amazonka.Location.Types.Place.Place
instance Control.DeepSeq.NFData Amazonka.Location.Types.Place.Place


module Amazonka.Location.Types.PositionFiltering
newtype PositionFiltering
PositionFiltering' :: Text -> PositionFiltering
[fromPositionFiltering] :: PositionFiltering -> Text
pattern PositionFiltering_DistanceBased :: PositionFiltering
pattern PositionFiltering_TimeBased :: PositionFiltering
instance Amazonka.Data.XML.ToXML Amazonka.Location.Types.PositionFiltering.PositionFiltering
instance Amazonka.Data.XML.FromXML Amazonka.Location.Types.PositionFiltering.PositionFiltering
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Location.Types.PositionFiltering.PositionFiltering
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Location.Types.PositionFiltering.PositionFiltering
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Location.Types.PositionFiltering.PositionFiltering
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Location.Types.PositionFiltering.PositionFiltering
instance Amazonka.Data.Query.ToQuery Amazonka.Location.Types.PositionFiltering.PositionFiltering
instance Amazonka.Data.Headers.ToHeader Amazonka.Location.Types.PositionFiltering.PositionFiltering
instance Amazonka.Data.Log.ToLog Amazonka.Location.Types.PositionFiltering.PositionFiltering
instance Amazonka.Data.ByteString.ToByteString Amazonka.Location.Types.PositionFiltering.PositionFiltering
instance Amazonka.Data.Text.ToText Amazonka.Location.Types.PositionFiltering.PositionFiltering
instance Amazonka.Data.Text.FromText Amazonka.Location.Types.PositionFiltering.PositionFiltering
instance Control.DeepSeq.NFData Amazonka.Location.Types.PositionFiltering.PositionFiltering
instance Data.Hashable.Class.Hashable Amazonka.Location.Types.PositionFiltering.PositionFiltering
instance GHC.Generics.Generic Amazonka.Location.Types.PositionFiltering.PositionFiltering
instance GHC.Classes.Ord Amazonka.Location.Types.PositionFiltering.PositionFiltering
instance GHC.Classes.Eq Amazonka.Location.Types.PositionFiltering.PositionFiltering
instance GHC.Read.Read Amazonka.Location.Types.PositionFiltering.PositionFiltering
instance GHC.Show.Show Amazonka.Location.Types.PositionFiltering.PositionFiltering


module Amazonka.Location.Types.PricingPlan
newtype PricingPlan
PricingPlan' :: Text -> PricingPlan
[fromPricingPlan] :: PricingPlan -> Text
pattern PricingPlan_MobileAssetManagement :: PricingPlan
pattern PricingPlan_MobileAssetTracking :: PricingPlan
pattern PricingPlan_RequestBasedUsage :: PricingPlan
instance Amazonka.Data.XML.ToXML Amazonka.Location.Types.PricingPlan.PricingPlan
instance Amazonka.Data.XML.FromXML Amazonka.Location.Types.PricingPlan.PricingPlan
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Location.Types.PricingPlan.PricingPlan
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Location.Types.PricingPlan.PricingPlan
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Location.Types.PricingPlan.PricingPlan
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Location.Types.PricingPlan.PricingPlan
instance Amazonka.Data.Query.ToQuery Amazonka.Location.Types.PricingPlan.PricingPlan
instance Amazonka.Data.Headers.ToHeader Amazonka.Location.Types.PricingPlan.PricingPlan
instance Amazonka.Data.Log.ToLog Amazonka.Location.Types.PricingPlan.PricingPlan
instance Amazonka.Data.ByteString.ToByteString Amazonka.Location.Types.PricingPlan.PricingPlan
instance Amazonka.Data.Text.ToText Amazonka.Location.Types.PricingPlan.PricingPlan
instance Amazonka.Data.Text.FromText Amazonka.Location.Types.PricingPlan.PricingPlan
instance Control.DeepSeq.NFData Amazonka.Location.Types.PricingPlan.PricingPlan
instance Data.Hashable.Class.Hashable Amazonka.Location.Types.PricingPlan.PricingPlan
instance GHC.Generics.Generic Amazonka.Location.Types.PricingPlan.PricingPlan
instance GHC.Classes.Ord Amazonka.Location.Types.PricingPlan.PricingPlan
instance GHC.Classes.Eq Amazonka.Location.Types.PricingPlan.PricingPlan
instance GHC.Read.Read Amazonka.Location.Types.PricingPlan.PricingPlan
instance GHC.Show.Show Amazonka.Location.Types.PricingPlan.PricingPlan


module Amazonka.Location.Types.ListTrackersResponseEntry

-- | Contains the tracker resource details.
--   
--   <i>See:</i> <a>newListTrackersResponseEntry</a> smart constructor.
data ListTrackersResponseEntry
ListTrackersResponseEntry' :: Maybe Text -> POSIX -> Text -> PricingPlan -> Text -> POSIX -> ListTrackersResponseEntry

-- | The specified data provider for the tracker resource.
[$sel:pricingPlanDataSource:ListTrackersResponseEntry'] :: ListTrackersResponseEntry -> Maybe Text

-- | The timestamp for when the tracker resource was created in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
[$sel:createTime:ListTrackersResponseEntry'] :: ListTrackersResponseEntry -> POSIX

-- | The description for the tracker resource.
[$sel:description:ListTrackersResponseEntry'] :: ListTrackersResponseEntry -> Text

-- | The pricing plan for the specified tracker resource.
--   
--   For additional details and restrictions on each pricing plan option,
--   see <a>Amazon Location Service pricing</a>.
[$sel:pricingPlan:ListTrackersResponseEntry'] :: ListTrackersResponseEntry -> PricingPlan

-- | The name of the tracker resource.
[$sel:trackerName:ListTrackersResponseEntry'] :: ListTrackersResponseEntry -> Text

-- | The timestamp at which the device's position was determined. Uses
--   <a>ISO 8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
[$sel:updateTime:ListTrackersResponseEntry'] :: ListTrackersResponseEntry -> POSIX

-- | Create a value of <a>ListTrackersResponseEntry</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pricingPlanDataSource:ListTrackersResponseEntry'</a>,
--   <a>listTrackersResponseEntry_pricingPlanDataSource</a> - The specified
--   data provider for the tracker resource.
--   
--   <a>$sel:createTime:ListTrackersResponseEntry'</a>,
--   <a>listTrackersResponseEntry_createTime</a> - The timestamp for when
--   the tracker resource was created in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
--   
--   <a>$sel:description:ListTrackersResponseEntry'</a>,
--   <a>listTrackersResponseEntry_description</a> - The description for the
--   tracker resource.
--   
--   <a>$sel:pricingPlan:ListTrackersResponseEntry'</a>,
--   <a>listTrackersResponseEntry_pricingPlan</a> - The pricing plan for
--   the specified tracker resource.
--   
--   For additional details and restrictions on each pricing plan option,
--   see <a>Amazon Location Service pricing</a>.
--   
--   <a>$sel:trackerName:ListTrackersResponseEntry'</a>,
--   <a>listTrackersResponseEntry_trackerName</a> - The name of the tracker
--   resource.
--   
--   <a>$sel:updateTime:ListTrackersResponseEntry'</a>,
--   <a>listTrackersResponseEntry_updateTime</a> - The timestamp at which
--   the device's position was determined. Uses <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
newListTrackersResponseEntry :: UTCTime -> Text -> PricingPlan -> Text -> UTCTime -> ListTrackersResponseEntry

-- | The specified data provider for the tracker resource.
listTrackersResponseEntry_pricingPlanDataSource :: Lens' ListTrackersResponseEntry (Maybe Text)

-- | The timestamp for when the tracker resource was created in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
listTrackersResponseEntry_createTime :: Lens' ListTrackersResponseEntry UTCTime

-- | The description for the tracker resource.
listTrackersResponseEntry_description :: Lens' ListTrackersResponseEntry Text

-- | The pricing plan for the specified tracker resource.
--   
--   For additional details and restrictions on each pricing plan option,
--   see <a>Amazon Location Service pricing</a>.
listTrackersResponseEntry_pricingPlan :: Lens' ListTrackersResponseEntry PricingPlan

-- | The name of the tracker resource.
listTrackersResponseEntry_trackerName :: Lens' ListTrackersResponseEntry Text

-- | The timestamp at which the device's position was determined. Uses
--   <a>ISO 8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
listTrackersResponseEntry_updateTime :: Lens' ListTrackersResponseEntry UTCTime
instance GHC.Generics.Generic Amazonka.Location.Types.ListTrackersResponseEntry.ListTrackersResponseEntry
instance GHC.Show.Show Amazonka.Location.Types.ListTrackersResponseEntry.ListTrackersResponseEntry
instance GHC.Read.Read Amazonka.Location.Types.ListTrackersResponseEntry.ListTrackersResponseEntry
instance GHC.Classes.Eq Amazonka.Location.Types.ListTrackersResponseEntry.ListTrackersResponseEntry
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Location.Types.ListTrackersResponseEntry.ListTrackersResponseEntry
instance Data.Hashable.Class.Hashable Amazonka.Location.Types.ListTrackersResponseEntry.ListTrackersResponseEntry
instance Control.DeepSeq.NFData Amazonka.Location.Types.ListTrackersResponseEntry.ListTrackersResponseEntry


module Amazonka.Location.Types.ListRouteCalculatorsResponseEntry

-- | A route calculator resource listed in your AWS account.
--   
--   <i>See:</i> <a>newListRouteCalculatorsResponseEntry</a> smart
--   constructor.
data ListRouteCalculatorsResponseEntry
ListRouteCalculatorsResponseEntry' :: Text -> POSIX -> Text -> Text -> PricingPlan -> POSIX -> ListRouteCalculatorsResponseEntry

-- | The name of the route calculator resource.
[$sel:calculatorName:ListRouteCalculatorsResponseEntry'] :: ListRouteCalculatorsResponseEntry -> Text

-- | The timestamp when the route calculator resource was created in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
--   
--   <ul>
--   <li>For example, <tt>2020–07-2T12:15:20.000Z+01:00</tt></li>
--   </ul>
[$sel:createTime:ListRouteCalculatorsResponseEntry'] :: ListRouteCalculatorsResponseEntry -> POSIX

-- | The data provider of traffic and road network data. Indicates one of
--   the available providers:
--   
--   <ul>
--   <li><pre>Esri</pre></li>
--   <li><pre>Here</pre></li>
--   </ul>
--   
--   For more information about data providers, see <a>Amazon Location
--   Service data providers</a>.
[$sel:dataSource:ListRouteCalculatorsResponseEntry'] :: ListRouteCalculatorsResponseEntry -> Text

-- | The optional description of the route calculator resource.
[$sel:description:ListRouteCalculatorsResponseEntry'] :: ListRouteCalculatorsResponseEntry -> Text

-- | The pricing plan for the specified route calculator resource.
--   
--   For additional details and restrictions on each pricing plan option,
--   see <a>Amazon Location Service pricing</a>.
[$sel:pricingPlan:ListRouteCalculatorsResponseEntry'] :: ListRouteCalculatorsResponseEntry -> PricingPlan

-- | The timestamp when the route calculator resource was last updated in
--   <a>ISO 8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
--   
--   <ul>
--   <li>For example, <tt>2020–07-2T12:15:20.000Z+01:00</tt></li>
--   </ul>
[$sel:updateTime:ListRouteCalculatorsResponseEntry'] :: ListRouteCalculatorsResponseEntry -> POSIX

-- | Create a value of <a>ListRouteCalculatorsResponseEntry</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:calculatorName:ListRouteCalculatorsResponseEntry'</a>,
--   <a>listRouteCalculatorsResponseEntry_calculatorName</a> - The name of
--   the route calculator resource.
--   
--   <a>$sel:createTime:ListRouteCalculatorsResponseEntry'</a>,
--   <a>listRouteCalculatorsResponseEntry_createTime</a> - The timestamp
--   when the route calculator resource was created in <a>ISO 8601</a>
--   format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
--   
--   <ul>
--   <li>For example, <tt>2020–07-2T12:15:20.000Z+01:00</tt></li>
--   </ul>
--   
--   <a>$sel:dataSource:ListRouteCalculatorsResponseEntry'</a>,
--   <a>listRouteCalculatorsResponseEntry_dataSource</a> - The data
--   provider of traffic and road network data. Indicates one of the
--   available providers:
--   
--   <ul>
--   <li><pre>Esri</pre></li>
--   <li><pre>Here</pre></li>
--   </ul>
--   
--   For more information about data providers, see <a>Amazon Location
--   Service data providers</a>.
--   
--   <a>$sel:description:ListRouteCalculatorsResponseEntry'</a>,
--   <a>listRouteCalculatorsResponseEntry_description</a> - The optional
--   description of the route calculator resource.
--   
--   <a>$sel:pricingPlan:ListRouteCalculatorsResponseEntry'</a>,
--   <a>listRouteCalculatorsResponseEntry_pricingPlan</a> - The pricing
--   plan for the specified route calculator resource.
--   
--   For additional details and restrictions on each pricing plan option,
--   see <a>Amazon Location Service pricing</a>.
--   
--   <a>$sel:updateTime:ListRouteCalculatorsResponseEntry'</a>,
--   <a>listRouteCalculatorsResponseEntry_updateTime</a> - The timestamp
--   when the route calculator resource was last updated in <a>ISO 8601</a>
--   format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
--   
--   <ul>
--   <li>For example, <tt>2020–07-2T12:15:20.000Z+01:00</tt></li>
--   </ul>
newListRouteCalculatorsResponseEntry :: Text -> UTCTime -> Text -> Text -> PricingPlan -> UTCTime -> ListRouteCalculatorsResponseEntry

-- | The name of the route calculator resource.
listRouteCalculatorsResponseEntry_calculatorName :: Lens' ListRouteCalculatorsResponseEntry Text

-- | The timestamp when the route calculator resource was created in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
--   
--   <ul>
--   <li>For example, <tt>2020–07-2T12:15:20.000Z+01:00</tt></li>
--   </ul>
listRouteCalculatorsResponseEntry_createTime :: Lens' ListRouteCalculatorsResponseEntry UTCTime

-- | The data provider of traffic and road network data. Indicates one of
--   the available providers:
--   
--   <ul>
--   <li><pre>Esri</pre></li>
--   <li><pre>Here</pre></li>
--   </ul>
--   
--   For more information about data providers, see <a>Amazon Location
--   Service data providers</a>.
listRouteCalculatorsResponseEntry_dataSource :: Lens' ListRouteCalculatorsResponseEntry Text

-- | The optional description of the route calculator resource.
listRouteCalculatorsResponseEntry_description :: Lens' ListRouteCalculatorsResponseEntry Text

-- | The pricing plan for the specified route calculator resource.
--   
--   For additional details and restrictions on each pricing plan option,
--   see <a>Amazon Location Service pricing</a>.
listRouteCalculatorsResponseEntry_pricingPlan :: Lens' ListRouteCalculatorsResponseEntry PricingPlan

-- | The timestamp when the route calculator resource was last updated in
--   <a>ISO 8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
--   
--   <ul>
--   <li>For example, <tt>2020–07-2T12:15:20.000Z+01:00</tt></li>
--   </ul>
listRouteCalculatorsResponseEntry_updateTime :: Lens' ListRouteCalculatorsResponseEntry UTCTime
instance GHC.Generics.Generic Amazonka.Location.Types.ListRouteCalculatorsResponseEntry.ListRouteCalculatorsResponseEntry
instance GHC.Show.Show Amazonka.Location.Types.ListRouteCalculatorsResponseEntry.ListRouteCalculatorsResponseEntry
instance GHC.Read.Read Amazonka.Location.Types.ListRouteCalculatorsResponseEntry.ListRouteCalculatorsResponseEntry
instance GHC.Classes.Eq Amazonka.Location.Types.ListRouteCalculatorsResponseEntry.ListRouteCalculatorsResponseEntry
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Location.Types.ListRouteCalculatorsResponseEntry.ListRouteCalculatorsResponseEntry
instance Data.Hashable.Class.Hashable Amazonka.Location.Types.ListRouteCalculatorsResponseEntry.ListRouteCalculatorsResponseEntry
instance Control.DeepSeq.NFData Amazonka.Location.Types.ListRouteCalculatorsResponseEntry.ListRouteCalculatorsResponseEntry


module Amazonka.Location.Types.ListPlaceIndexesResponseEntry

-- | A place index resource listed in your AWS account.
--   
--   <i>See:</i> <a>newListPlaceIndexesResponseEntry</a> smart constructor.
data ListPlaceIndexesResponseEntry
ListPlaceIndexesResponseEntry' :: POSIX -> Text -> Text -> Text -> PricingPlan -> POSIX -> ListPlaceIndexesResponseEntry

-- | The timestamp for when the place index resource was created in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
[$sel:createTime:ListPlaceIndexesResponseEntry'] :: ListPlaceIndexesResponseEntry -> POSIX

-- | The data provider of geospatial data. Indicates one of the available
--   providers:
--   
--   <ul>
--   <li><pre>Esri</pre></li>
--   <li><pre>Here</pre></li>
--   </ul>
--   
--   For additional details on data providers, see <a>Amazon Location
--   Service data providers</a>.
[$sel:dataSource:ListPlaceIndexesResponseEntry'] :: ListPlaceIndexesResponseEntry -> Text

-- | The optional description for the place index resource.
[$sel:description:ListPlaceIndexesResponseEntry'] :: ListPlaceIndexesResponseEntry -> Text

-- | The name of the place index resource.
[$sel:indexName:ListPlaceIndexesResponseEntry'] :: ListPlaceIndexesResponseEntry -> Text

-- | The pricing plan for the specified place index resource.
--   
--   For additional details and restrictions on each pricing plan option,
--   see <a>Amazon Location Service pricing</a>.
[$sel:pricingPlan:ListPlaceIndexesResponseEntry'] :: ListPlaceIndexesResponseEntry -> PricingPlan

-- | The timestamp for when the place index resource was last updated in
--   <a>ISO 8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
[$sel:updateTime:ListPlaceIndexesResponseEntry'] :: ListPlaceIndexesResponseEntry -> POSIX

-- | Create a value of <a>ListPlaceIndexesResponseEntry</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createTime:ListPlaceIndexesResponseEntry'</a>,
--   <a>listPlaceIndexesResponseEntry_createTime</a> - The timestamp for
--   when the place index resource was created in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
--   
--   <a>$sel:dataSource:ListPlaceIndexesResponseEntry'</a>,
--   <a>listPlaceIndexesResponseEntry_dataSource</a> - The data provider of
--   geospatial data. Indicates one of the available providers:
--   
--   <ul>
--   <li><pre>Esri</pre></li>
--   <li><pre>Here</pre></li>
--   </ul>
--   
--   For additional details on data providers, see <a>Amazon Location
--   Service data providers</a>.
--   
--   <a>$sel:description:ListPlaceIndexesResponseEntry'</a>,
--   <a>listPlaceIndexesResponseEntry_description</a> - The optional
--   description for the place index resource.
--   
--   <a>$sel:indexName:ListPlaceIndexesResponseEntry'</a>,
--   <a>listPlaceIndexesResponseEntry_indexName</a> - The name of the place
--   index resource.
--   
--   <a>$sel:pricingPlan:ListPlaceIndexesResponseEntry'</a>,
--   <a>listPlaceIndexesResponseEntry_pricingPlan</a> - The pricing plan
--   for the specified place index resource.
--   
--   For additional details and restrictions on each pricing plan option,
--   see <a>Amazon Location Service pricing</a>.
--   
--   <a>$sel:updateTime:ListPlaceIndexesResponseEntry'</a>,
--   <a>listPlaceIndexesResponseEntry_updateTime</a> - The timestamp for
--   when the place index resource was last updated in <a>ISO 8601</a>
--   format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
newListPlaceIndexesResponseEntry :: UTCTime -> Text -> Text -> Text -> PricingPlan -> UTCTime -> ListPlaceIndexesResponseEntry

-- | The timestamp for when the place index resource was created in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
listPlaceIndexesResponseEntry_createTime :: Lens' ListPlaceIndexesResponseEntry UTCTime

-- | The data provider of geospatial data. Indicates one of the available
--   providers:
--   
--   <ul>
--   <li><pre>Esri</pre></li>
--   <li><pre>Here</pre></li>
--   </ul>
--   
--   For additional details on data providers, see <a>Amazon Location
--   Service data providers</a>.
listPlaceIndexesResponseEntry_dataSource :: Lens' ListPlaceIndexesResponseEntry Text

-- | The optional description for the place index resource.
listPlaceIndexesResponseEntry_description :: Lens' ListPlaceIndexesResponseEntry Text

-- | The name of the place index resource.
listPlaceIndexesResponseEntry_indexName :: Lens' ListPlaceIndexesResponseEntry Text

-- | The pricing plan for the specified place index resource.
--   
--   For additional details and restrictions on each pricing plan option,
--   see <a>Amazon Location Service pricing</a>.
listPlaceIndexesResponseEntry_pricingPlan :: Lens' ListPlaceIndexesResponseEntry PricingPlan

-- | The timestamp for when the place index resource was last updated in
--   <a>ISO 8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
listPlaceIndexesResponseEntry_updateTime :: Lens' ListPlaceIndexesResponseEntry UTCTime
instance GHC.Generics.Generic Amazonka.Location.Types.ListPlaceIndexesResponseEntry.ListPlaceIndexesResponseEntry
instance GHC.Show.Show Amazonka.Location.Types.ListPlaceIndexesResponseEntry.ListPlaceIndexesResponseEntry
instance GHC.Read.Read Amazonka.Location.Types.ListPlaceIndexesResponseEntry.ListPlaceIndexesResponseEntry
instance GHC.Classes.Eq Amazonka.Location.Types.ListPlaceIndexesResponseEntry.ListPlaceIndexesResponseEntry
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Location.Types.ListPlaceIndexesResponseEntry.ListPlaceIndexesResponseEntry
instance Data.Hashable.Class.Hashable Amazonka.Location.Types.ListPlaceIndexesResponseEntry.ListPlaceIndexesResponseEntry
instance Control.DeepSeq.NFData Amazonka.Location.Types.ListPlaceIndexesResponseEntry.ListPlaceIndexesResponseEntry


module Amazonka.Location.Types.ListMapsResponseEntry

-- | Contains details of an existing map resource in your AWS account.
--   
--   <i>See:</i> <a>newListMapsResponseEntry</a> smart constructor.
data ListMapsResponseEntry
ListMapsResponseEntry' :: POSIX -> Text -> Text -> Text -> PricingPlan -> POSIX -> ListMapsResponseEntry

-- | The timestamp for when the map resource was created in <a>ISO 8601</a>
--   format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
[$sel:createTime:ListMapsResponseEntry'] :: ListMapsResponseEntry -> POSIX

-- | Specifies the data provider for the associated map tiles.
[$sel:dataSource:ListMapsResponseEntry'] :: ListMapsResponseEntry -> Text

-- | The description for the map resource.
[$sel:description:ListMapsResponseEntry'] :: ListMapsResponseEntry -> Text

-- | The name of the associated map resource.
[$sel:mapName:ListMapsResponseEntry'] :: ListMapsResponseEntry -> Text

-- | The pricing plan for the specified map resource.
--   
--   For additional details and restrictions on each pricing plan option,
--   see <a>Amazon Location Service pricing</a>.
[$sel:pricingPlan:ListMapsResponseEntry'] :: ListMapsResponseEntry -> PricingPlan

-- | The timestamp for when the map resource was last updated in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
[$sel:updateTime:ListMapsResponseEntry'] :: ListMapsResponseEntry -> POSIX

-- | Create a value of <a>ListMapsResponseEntry</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createTime:ListMapsResponseEntry'</a>,
--   <a>listMapsResponseEntry_createTime</a> - The timestamp for when the
--   map resource was created in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
--   
--   <a>$sel:dataSource:ListMapsResponseEntry'</a>,
--   <a>listMapsResponseEntry_dataSource</a> - Specifies the data provider
--   for the associated map tiles.
--   
--   <a>$sel:description:ListMapsResponseEntry'</a>,
--   <a>listMapsResponseEntry_description</a> - The description for the map
--   resource.
--   
--   <a>$sel:mapName:ListMapsResponseEntry'</a>,
--   <a>listMapsResponseEntry_mapName</a> - The name of the associated map
--   resource.
--   
--   <a>$sel:pricingPlan:ListMapsResponseEntry'</a>,
--   <a>listMapsResponseEntry_pricingPlan</a> - The pricing plan for the
--   specified map resource.
--   
--   For additional details and restrictions on each pricing plan option,
--   see <a>Amazon Location Service pricing</a>.
--   
--   <a>$sel:updateTime:ListMapsResponseEntry'</a>,
--   <a>listMapsResponseEntry_updateTime</a> - The timestamp for when the
--   map resource was last updated in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
newListMapsResponseEntry :: UTCTime -> Text -> Text -> Text -> PricingPlan -> UTCTime -> ListMapsResponseEntry

-- | The timestamp for when the map resource was created in <a>ISO 8601</a>
--   format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
listMapsResponseEntry_createTime :: Lens' ListMapsResponseEntry UTCTime

-- | Specifies the data provider for the associated map tiles.
listMapsResponseEntry_dataSource :: Lens' ListMapsResponseEntry Text

-- | The description for the map resource.
listMapsResponseEntry_description :: Lens' ListMapsResponseEntry Text

-- | The name of the associated map resource.
listMapsResponseEntry_mapName :: Lens' ListMapsResponseEntry Text

-- | The pricing plan for the specified map resource.
--   
--   For additional details and restrictions on each pricing plan option,
--   see <a>Amazon Location Service pricing</a>.
listMapsResponseEntry_pricingPlan :: Lens' ListMapsResponseEntry PricingPlan

-- | The timestamp for when the map resource was last updated in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
listMapsResponseEntry_updateTime :: Lens' ListMapsResponseEntry UTCTime
instance GHC.Generics.Generic Amazonka.Location.Types.ListMapsResponseEntry.ListMapsResponseEntry
instance GHC.Show.Show Amazonka.Location.Types.ListMapsResponseEntry.ListMapsResponseEntry
instance GHC.Read.Read Amazonka.Location.Types.ListMapsResponseEntry.ListMapsResponseEntry
instance GHC.Classes.Eq Amazonka.Location.Types.ListMapsResponseEntry.ListMapsResponseEntry
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Location.Types.ListMapsResponseEntry.ListMapsResponseEntry
instance Data.Hashable.Class.Hashable Amazonka.Location.Types.ListMapsResponseEntry.ListMapsResponseEntry
instance Control.DeepSeq.NFData Amazonka.Location.Types.ListMapsResponseEntry.ListMapsResponseEntry


module Amazonka.Location.Types.ListGeofenceCollectionsResponseEntry

-- | Contains the geofence collection details.
--   
--   <i>See:</i> <a>newListGeofenceCollectionsResponseEntry</a> smart
--   constructor.
data ListGeofenceCollectionsResponseEntry
ListGeofenceCollectionsResponseEntry' :: Maybe Text -> Text -> POSIX -> Text -> PricingPlan -> POSIX -> ListGeofenceCollectionsResponseEntry

-- | The specified data provider for the geofence collection.
[$sel:pricingPlanDataSource:ListGeofenceCollectionsResponseEntry'] :: ListGeofenceCollectionsResponseEntry -> Maybe Text

-- | The name of the geofence collection.
[$sel:collectionName:ListGeofenceCollectionsResponseEntry'] :: ListGeofenceCollectionsResponseEntry -> Text

-- | The timestamp for when the geofence collection was created in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
[$sel:createTime:ListGeofenceCollectionsResponseEntry'] :: ListGeofenceCollectionsResponseEntry -> POSIX

-- | The description for the geofence collection
[$sel:description:ListGeofenceCollectionsResponseEntry'] :: ListGeofenceCollectionsResponseEntry -> Text

-- | The pricing plan for the specified geofence collection.
--   
--   For additional details and restrictions on each pricing plan option,
--   see the <a>Amazon Location Service pricing page</a>.
[$sel:pricingPlan:ListGeofenceCollectionsResponseEntry'] :: ListGeofenceCollectionsResponseEntry -> PricingPlan

-- | Specifies a timestamp for when the resource was last updated in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
[$sel:updateTime:ListGeofenceCollectionsResponseEntry'] :: ListGeofenceCollectionsResponseEntry -> POSIX

-- | Create a value of <a>ListGeofenceCollectionsResponseEntry</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:pricingPlanDataSource:ListGeofenceCollectionsResponseEntry'</a>,
--   <a>listGeofenceCollectionsResponseEntry_pricingPlanDataSource</a> -
--   The specified data provider for the geofence collection.
--   
--   <a>$sel:collectionName:ListGeofenceCollectionsResponseEntry'</a>,
--   <a>listGeofenceCollectionsResponseEntry_collectionName</a> - The name
--   of the geofence collection.
--   
--   <a>$sel:createTime:ListGeofenceCollectionsResponseEntry'</a>,
--   <a>listGeofenceCollectionsResponseEntry_createTime</a> - The timestamp
--   for when the geofence collection was created in <a>ISO 8601</a>
--   format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
--   
--   <a>$sel:description:ListGeofenceCollectionsResponseEntry'</a>,
--   <a>listGeofenceCollectionsResponseEntry_description</a> - The
--   description for the geofence collection
--   
--   <a>$sel:pricingPlan:ListGeofenceCollectionsResponseEntry'</a>,
--   <a>listGeofenceCollectionsResponseEntry_pricingPlan</a> - The pricing
--   plan for the specified geofence collection.
--   
--   For additional details and restrictions on each pricing plan option,
--   see the <a>Amazon Location Service pricing page</a>.
--   
--   <a>$sel:updateTime:ListGeofenceCollectionsResponseEntry'</a>,
--   <a>listGeofenceCollectionsResponseEntry_updateTime</a> - Specifies a
--   timestamp for when the resource was last updated in <a>ISO 8601</a>
--   format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
newListGeofenceCollectionsResponseEntry :: Text -> UTCTime -> Text -> PricingPlan -> UTCTime -> ListGeofenceCollectionsResponseEntry

-- | The specified data provider for the geofence collection.
listGeofenceCollectionsResponseEntry_pricingPlanDataSource :: Lens' ListGeofenceCollectionsResponseEntry (Maybe Text)

-- | The name of the geofence collection.
listGeofenceCollectionsResponseEntry_collectionName :: Lens' ListGeofenceCollectionsResponseEntry Text

-- | The timestamp for when the geofence collection was created in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
listGeofenceCollectionsResponseEntry_createTime :: Lens' ListGeofenceCollectionsResponseEntry UTCTime

-- | The description for the geofence collection
listGeofenceCollectionsResponseEntry_description :: Lens' ListGeofenceCollectionsResponseEntry Text

-- | The pricing plan for the specified geofence collection.
--   
--   For additional details and restrictions on each pricing plan option,
--   see the <a>Amazon Location Service pricing page</a>.
listGeofenceCollectionsResponseEntry_pricingPlan :: Lens' ListGeofenceCollectionsResponseEntry PricingPlan

-- | Specifies a timestamp for when the resource was last updated in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
listGeofenceCollectionsResponseEntry_updateTime :: Lens' ListGeofenceCollectionsResponseEntry UTCTime
instance GHC.Generics.Generic Amazonka.Location.Types.ListGeofenceCollectionsResponseEntry.ListGeofenceCollectionsResponseEntry
instance GHC.Show.Show Amazonka.Location.Types.ListGeofenceCollectionsResponseEntry.ListGeofenceCollectionsResponseEntry
instance GHC.Read.Read Amazonka.Location.Types.ListGeofenceCollectionsResponseEntry.ListGeofenceCollectionsResponseEntry
instance GHC.Classes.Eq Amazonka.Location.Types.ListGeofenceCollectionsResponseEntry.ListGeofenceCollectionsResponseEntry
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Location.Types.ListGeofenceCollectionsResponseEntry.ListGeofenceCollectionsResponseEntry
instance Data.Hashable.Class.Hashable Amazonka.Location.Types.ListGeofenceCollectionsResponseEntry.ListGeofenceCollectionsResponseEntry
instance Control.DeepSeq.NFData Amazonka.Location.Types.ListGeofenceCollectionsResponseEntry.ListGeofenceCollectionsResponseEntry


module Amazonka.Location.Types.SearchForPositionResult

-- | Specifies a single point of interest, or Place as a result of a search
--   query obtained from a dataset configured in the place index resource.
--   
--   <i>See:</i> <a>newSearchForPositionResult</a> smart constructor.
data SearchForPositionResult
SearchForPositionResult' :: Place -> SearchForPositionResult

-- | Contains details about the relevant point of interest.
[$sel:place:SearchForPositionResult'] :: SearchForPositionResult -> Place

-- | Create a value of <a>SearchForPositionResult</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:place:SearchForPositionResult'</a>,
--   <a>searchForPositionResult_place</a> - Contains details about the
--   relevant point of interest.
newSearchForPositionResult :: Place -> SearchForPositionResult

-- | Contains details about the relevant point of interest.
searchForPositionResult_place :: Lens' SearchForPositionResult Place
instance GHC.Generics.Generic Amazonka.Location.Types.SearchForPositionResult.SearchForPositionResult
instance GHC.Show.Show Amazonka.Location.Types.SearchForPositionResult.SearchForPositionResult
instance GHC.Classes.Eq Amazonka.Location.Types.SearchForPositionResult.SearchForPositionResult
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Location.Types.SearchForPositionResult.SearchForPositionResult
instance Data.Hashable.Class.Hashable Amazonka.Location.Types.SearchForPositionResult.SearchForPositionResult
instance Control.DeepSeq.NFData Amazonka.Location.Types.SearchForPositionResult.SearchForPositionResult


module Amazonka.Location.Types.SearchForTextResult

-- | Contains relevant Places returned by calling
--   <tt>SearchPlaceIndexForText</tt>.
--   
--   <i>See:</i> <a>newSearchForTextResult</a> smart constructor.
data SearchForTextResult
SearchForTextResult' :: Place -> SearchForTextResult

-- | Contains details about the relevant point of interest.
[$sel:place:SearchForTextResult'] :: SearchForTextResult -> Place

-- | Create a value of <a>SearchForTextResult</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:place:SearchForTextResult'</a>,
--   <a>searchForTextResult_place</a> - Contains details about the relevant
--   point of interest.
newSearchForTextResult :: Place -> SearchForTextResult

-- | Contains details about the relevant point of interest.
searchForTextResult_place :: Lens' SearchForTextResult Place
instance GHC.Generics.Generic Amazonka.Location.Types.SearchForTextResult.SearchForTextResult
instance GHC.Show.Show Amazonka.Location.Types.SearchForTextResult.SearchForTextResult
instance GHC.Classes.Eq Amazonka.Location.Types.SearchForTextResult.SearchForTextResult
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Location.Types.SearchForTextResult.SearchForTextResult
instance Data.Hashable.Class.Hashable Amazonka.Location.Types.SearchForTextResult.SearchForTextResult
instance Control.DeepSeq.NFData Amazonka.Location.Types.SearchForTextResult.SearchForTextResult


module Amazonka.Location.Types.SearchPlaceIndexForPositionSummary

-- | A summary of the reverse geocoding request sent using
--   <tt>SearchPlaceIndexForPosition</tt>.
--   
--   <i>See:</i> <a>newSearchPlaceIndexForPositionSummary</a> smart
--   constructor.
data SearchPlaceIndexForPositionSummary
SearchPlaceIndexForPositionSummary' :: Maybe Natural -> Text -> Sensitive (NonEmpty Double) -> SearchPlaceIndexForPositionSummary

-- | An optional parameter. The maximum number of results returned per
--   request.
--   
--   Default value: <tt>50</tt>
[$sel:maxResults:SearchPlaceIndexForPositionSummary'] :: SearchPlaceIndexForPositionSummary -> Maybe Natural

-- | The data provider of geospatial data. Indicates one of the available
--   providers:
--   
--   <ul>
--   <li>Esri</li>
--   <li>HERE</li>
--   </ul>
--   
--   For additional details on data providers, see <a>Amazon Location
--   Service data providers</a>.
[$sel:dataSource:SearchPlaceIndexForPositionSummary'] :: SearchPlaceIndexForPositionSummary -> Text

-- | The position given in the reverse geocoding request.
[$sel:position:SearchPlaceIndexForPositionSummary'] :: SearchPlaceIndexForPositionSummary -> Sensitive (NonEmpty Double)

-- | Create a value of <a>SearchPlaceIndexForPositionSummary</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxResults:SearchPlaceIndexForPositionSummary'</a>,
--   <a>searchPlaceIndexForPositionSummary_maxResults</a> - An optional
--   parameter. The maximum number of results returned per request.
--   
--   Default value: <tt>50</tt>
--   
--   <a>$sel:dataSource:SearchPlaceIndexForPositionSummary'</a>,
--   <a>searchPlaceIndexForPositionSummary_dataSource</a> - The data
--   provider of geospatial data. Indicates one of the available providers:
--   
--   <ul>
--   <li>Esri</li>
--   <li>HERE</li>
--   </ul>
--   
--   For additional details on data providers, see <a>Amazon Location
--   Service data providers</a>.
--   
--   <a>$sel:position:SearchPlaceIndexForPositionSummary'</a>,
--   <a>searchPlaceIndexForPositionSummary_position</a> - The position
--   given in the reverse geocoding request.
newSearchPlaceIndexForPositionSummary :: Text -> NonEmpty Double -> SearchPlaceIndexForPositionSummary

-- | An optional parameter. The maximum number of results returned per
--   request.
--   
--   Default value: <tt>50</tt>
searchPlaceIndexForPositionSummary_maxResults :: Lens' SearchPlaceIndexForPositionSummary (Maybe Natural)

-- | The data provider of geospatial data. Indicates one of the available
--   providers:
--   
--   <ul>
--   <li>Esri</li>
--   <li>HERE</li>
--   </ul>
--   
--   For additional details on data providers, see <a>Amazon Location
--   Service data providers</a>.
searchPlaceIndexForPositionSummary_dataSource :: Lens' SearchPlaceIndexForPositionSummary Text

-- | The position given in the reverse geocoding request.
searchPlaceIndexForPositionSummary_position :: Lens' SearchPlaceIndexForPositionSummary (NonEmpty Double)
instance GHC.Generics.Generic Amazonka.Location.Types.SearchPlaceIndexForPositionSummary.SearchPlaceIndexForPositionSummary
instance GHC.Show.Show Amazonka.Location.Types.SearchPlaceIndexForPositionSummary.SearchPlaceIndexForPositionSummary
instance GHC.Classes.Eq Amazonka.Location.Types.SearchPlaceIndexForPositionSummary.SearchPlaceIndexForPositionSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Location.Types.SearchPlaceIndexForPositionSummary.SearchPlaceIndexForPositionSummary
instance Data.Hashable.Class.Hashable Amazonka.Location.Types.SearchPlaceIndexForPositionSummary.SearchPlaceIndexForPositionSummary
instance Control.DeepSeq.NFData Amazonka.Location.Types.SearchPlaceIndexForPositionSummary.SearchPlaceIndexForPositionSummary


module Amazonka.Location.Types.SearchPlaceIndexForTextSummary

-- | A summary of the geocoding request sent using
--   <tt>SearchPlaceIndexForText</tt>.
--   
--   <i>See:</i> <a>newSearchPlaceIndexForTextSummary</a> smart
--   constructor.
data SearchPlaceIndexForTextSummary
SearchPlaceIndexForTextSummary' :: Maybe (Sensitive (NonEmpty Double)) -> Maybe (Sensitive (NonEmpty Double)) -> Maybe (Sensitive (NonEmpty Double)) -> Maybe (NonEmpty Text) -> Maybe Natural -> Text -> Sensitive Text -> SearchPlaceIndexForTextSummary

-- | Contains the coordinates for the optional bounding box coordinated
--   entered in the geocoding request.
[$sel:filterBBox:SearchPlaceIndexForTextSummary'] :: SearchPlaceIndexForTextSummary -> Maybe (Sensitive (NonEmpty Double))

-- | A bounding box that contains the search results within the specified
--   area indicated by <tt>FilterBBox</tt>. A subset of bounding box
--   specified using <tt>FilterBBox</tt>.
[$sel:resultBBox:SearchPlaceIndexForTextSummary'] :: SearchPlaceIndexForTextSummary -> Maybe (Sensitive (NonEmpty Double))

-- | Contains the coordinates for the bias position entered in the
--   geocoding request.
[$sel:biasPosition:SearchPlaceIndexForTextSummary'] :: SearchPlaceIndexForTextSummary -> Maybe (Sensitive (NonEmpty Double))

-- | Contains the country filter entered in the geocoding request.
[$sel:filterCountries:SearchPlaceIndexForTextSummary'] :: SearchPlaceIndexForTextSummary -> Maybe (NonEmpty Text)

-- | Contains the maximum number of results indicated for the request.
[$sel:maxResults:SearchPlaceIndexForTextSummary'] :: SearchPlaceIndexForTextSummary -> Maybe Natural

-- | The data provider of geospatial data. Indicates one of the available
--   providers:
--   
--   <ul>
--   <li>Esri</li>
--   <li>HERE</li>
--   </ul>
--   
--   For additional details on data providers, see <a>Amazon Location
--   Service data providers</a>.
[$sel:dataSource:SearchPlaceIndexForTextSummary'] :: SearchPlaceIndexForTextSummary -> Text

-- | The address, name, city or region to be used in the geocoding request.
--   In free-form text format. For example, <tt>Vancouver</tt>.
[$sel:text:SearchPlaceIndexForTextSummary'] :: SearchPlaceIndexForTextSummary -> Sensitive Text

-- | Create a value of <a>SearchPlaceIndexForTextSummary</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filterBBox:SearchPlaceIndexForTextSummary'</a>,
--   <a>searchPlaceIndexForTextSummary_filterBBox</a> - Contains the
--   coordinates for the optional bounding box coordinated entered in the
--   geocoding request.
--   
--   <a>$sel:resultBBox:SearchPlaceIndexForTextSummary'</a>,
--   <a>searchPlaceIndexForTextSummary_resultBBox</a> - A bounding box that
--   contains the search results within the specified area indicated by
--   <tt>FilterBBox</tt>. A subset of bounding box specified using
--   <tt>FilterBBox</tt>.
--   
--   <a>$sel:biasPosition:SearchPlaceIndexForTextSummary'</a>,
--   <a>searchPlaceIndexForTextSummary_biasPosition</a> - Contains the
--   coordinates for the bias position entered in the geocoding request.
--   
--   <a>$sel:filterCountries:SearchPlaceIndexForTextSummary'</a>,
--   <a>searchPlaceIndexForTextSummary_filterCountries</a> - Contains the
--   country filter entered in the geocoding request.
--   
--   <a>$sel:maxResults:SearchPlaceIndexForTextSummary'</a>,
--   <a>searchPlaceIndexForTextSummary_maxResults</a> - Contains the
--   maximum number of results indicated for the request.
--   
--   <a>$sel:dataSource:SearchPlaceIndexForTextSummary'</a>,
--   <a>searchPlaceIndexForTextSummary_dataSource</a> - The data provider
--   of geospatial data. Indicates one of the available providers:
--   
--   <ul>
--   <li>Esri</li>
--   <li>HERE</li>
--   </ul>
--   
--   For additional details on data providers, see <a>Amazon Location
--   Service data providers</a>.
--   
--   <a>$sel:text:SearchPlaceIndexForTextSummary'</a>,
--   <a>searchPlaceIndexForTextSummary_text</a> - The address, name, city
--   or region to be used in the geocoding request. In free-form text
--   format. For example, <tt>Vancouver</tt>.
newSearchPlaceIndexForTextSummary :: Text -> Text -> SearchPlaceIndexForTextSummary

-- | Contains the coordinates for the optional bounding box coordinated
--   entered in the geocoding request.
searchPlaceIndexForTextSummary_filterBBox :: Lens' SearchPlaceIndexForTextSummary (Maybe (NonEmpty Double))

-- | A bounding box that contains the search results within the specified
--   area indicated by <tt>FilterBBox</tt>. A subset of bounding box
--   specified using <tt>FilterBBox</tt>.
searchPlaceIndexForTextSummary_resultBBox :: Lens' SearchPlaceIndexForTextSummary (Maybe (NonEmpty Double))

-- | Contains the coordinates for the bias position entered in the
--   geocoding request.
searchPlaceIndexForTextSummary_biasPosition :: Lens' SearchPlaceIndexForTextSummary (Maybe (NonEmpty Double))

-- | Contains the country filter entered in the geocoding request.
searchPlaceIndexForTextSummary_filterCountries :: Lens' SearchPlaceIndexForTextSummary (Maybe (NonEmpty Text))

-- | Contains the maximum number of results indicated for the request.
searchPlaceIndexForTextSummary_maxResults :: Lens' SearchPlaceIndexForTextSummary (Maybe Natural)

-- | The data provider of geospatial data. Indicates one of the available
--   providers:
--   
--   <ul>
--   <li>Esri</li>
--   <li>HERE</li>
--   </ul>
--   
--   For additional details on data providers, see <a>Amazon Location
--   Service data providers</a>.
searchPlaceIndexForTextSummary_dataSource :: Lens' SearchPlaceIndexForTextSummary Text

-- | The address, name, city or region to be used in the geocoding request.
--   In free-form text format. For example, <tt>Vancouver</tt>.
searchPlaceIndexForTextSummary_text :: Lens' SearchPlaceIndexForTextSummary Text
instance GHC.Generics.Generic Amazonka.Location.Types.SearchPlaceIndexForTextSummary.SearchPlaceIndexForTextSummary
instance GHC.Show.Show Amazonka.Location.Types.SearchPlaceIndexForTextSummary.SearchPlaceIndexForTextSummary
instance GHC.Classes.Eq Amazonka.Location.Types.SearchPlaceIndexForTextSummary.SearchPlaceIndexForTextSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Location.Types.SearchPlaceIndexForTextSummary.SearchPlaceIndexForTextSummary
instance Data.Hashable.Class.Hashable Amazonka.Location.Types.SearchPlaceIndexForTextSummary.SearchPlaceIndexForTextSummary
instance Control.DeepSeq.NFData Amazonka.Location.Types.SearchPlaceIndexForTextSummary.SearchPlaceIndexForTextSummary


module Amazonka.Location.Types.Step

-- | Represents an element of a leg within a route. A step contains
--   instructions for how to move to the next step in the leg.
--   
--   <i>See:</i> <a>newStep</a> smart constructor.
data Step
Step' :: Maybe Natural -> Double -> Double -> Sensitive (NonEmpty Double) -> Sensitive (NonEmpty Double) -> Step

-- | Represents the start position, or index, in a sequence of steps within
--   the leg's line string geometry. For example, the index of the first
--   step in a leg geometry is <tt>0</tt>.
--   
--   Included in the response for queries that set
--   <tt>IncludeLegGeometry</tt> to <tt>True</tt>.
[$sel:geometryOffset:Step'] :: Step -> Maybe Natural

-- | The travel distance between the step's <tt>StartPosition</tt> and
--   <tt>EndPosition</tt>.
[$sel:distance:Step'] :: Step -> Double

-- | The estimated travel time, in seconds, from the step's
--   <tt>StartPosition</tt> to the <tt>EndPosition</tt>. . The travel mode
--   and departure time that you specify in the request determines the
--   calculated time.
[$sel:durationSeconds:Step'] :: Step -> Double

-- | The end position of a step. If the position the last step in the leg,
--   this position is the same as the end position of the leg.
[$sel:endPosition:Step'] :: Step -> Sensitive (NonEmpty Double)

-- | The starting position of a step. If the position is the first step in
--   the leg, this position is the same as the start position of the leg.
[$sel:startPosition:Step'] :: Step -> Sensitive (NonEmpty Double)

-- | Create a value of <a>Step</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:geometryOffset:Step'</a>, <a>step_geometryOffset</a> -
--   Represents the start position, or index, in a sequence of steps within
--   the leg's line string geometry. For example, the index of the first
--   step in a leg geometry is <tt>0</tt>.
--   
--   Included in the response for queries that set
--   <tt>IncludeLegGeometry</tt> to <tt>True</tt>.
--   
--   <a>$sel:distance:Step'</a>, <a>step_distance</a> - The travel distance
--   between the step's <tt>StartPosition</tt> and <tt>EndPosition</tt>.
--   
--   <a>$sel:durationSeconds:Step'</a>, <a>step_durationSeconds</a> - The
--   estimated travel time, in seconds, from the step's
--   <tt>StartPosition</tt> to the <tt>EndPosition</tt>. . The travel mode
--   and departure time that you specify in the request determines the
--   calculated time.
--   
--   <a>$sel:endPosition:Step'</a>, <a>step_endPosition</a> - The end
--   position of a step. If the position the last step in the leg, this
--   position is the same as the end position of the leg.
--   
--   <a>$sel:startPosition:Step'</a>, <a>step_startPosition</a> - The
--   starting position of a step. If the position is the first step in the
--   leg, this position is the same as the start position of the leg.
newStep :: Double -> Double -> NonEmpty Double -> NonEmpty Double -> Step

-- | Represents the start position, or index, in a sequence of steps within
--   the leg's line string geometry. For example, the index of the first
--   step in a leg geometry is <tt>0</tt>.
--   
--   Included in the response for queries that set
--   <tt>IncludeLegGeometry</tt> to <tt>True</tt>.
step_geometryOffset :: Lens' Step (Maybe Natural)

-- | The travel distance between the step's <tt>StartPosition</tt> and
--   <tt>EndPosition</tt>.
step_distance :: Lens' Step Double

-- | The estimated travel time, in seconds, from the step's
--   <tt>StartPosition</tt> to the <tt>EndPosition</tt>. . The travel mode
--   and departure time that you specify in the request determines the
--   calculated time.
step_durationSeconds :: Lens' Step Double

-- | The end position of a step. If the position the last step in the leg,
--   this position is the same as the end position of the leg.
step_endPosition :: Lens' Step (NonEmpty Double)

-- | The starting position of a step. If the position is the first step in
--   the leg, this position is the same as the start position of the leg.
step_startPosition :: Lens' Step (NonEmpty Double)
instance GHC.Generics.Generic Amazonka.Location.Types.Step.Step
instance GHC.Show.Show Amazonka.Location.Types.Step.Step
instance GHC.Classes.Eq Amazonka.Location.Types.Step.Step
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Location.Types.Step.Step
instance Data.Hashable.Class.Hashable Amazonka.Location.Types.Step.Step
instance Control.DeepSeq.NFData Amazonka.Location.Types.Step.Step


module Amazonka.Location.Types.Leg

-- | Contains the calculated route's details for each path between a pair
--   of positions. The number of legs returned corresponds to one fewer
--   than the total number of positions in the request.
--   
--   For example, a route with a departure position and destination
--   position returns one leg with the positions <a>snapped to a nearby
--   road</a>:
--   
--   <ul>
--   <li>The <tt>StartPosition</tt> is the departure position.</li>
--   <li>The <tt>EndPosition</tt> is the destination position.</li>
--   </ul>
--   
--   A route with a waypoint between the departure and destination position
--   returns two legs with the positions snapped to a nearby road:
--   
--   <ul>
--   <li>Leg 1: The <tt>StartPosition</tt> is the departure position . The
--   <tt>EndPosition</tt> is the waypoint positon.</li>
--   <li>Leg 2: The <tt>StartPosition</tt> is the waypoint position. The
--   <tt>EndPosition</tt> is the destination position.</li>
--   </ul>
--   
--   <i>See:</i> <a>newLeg</a> smart constructor.
data Leg
Leg' :: Maybe LegGeometry -> Double -> Double -> Sensitive (NonEmpty Double) -> Sensitive (NonEmpty Double) -> [Step] -> Leg

-- | Contains the calculated route's path as a linestring geometry.
[$sel:geometry:Leg'] :: Leg -> Maybe LegGeometry

-- | The distance between the leg's <tt>StartPosition</tt> and
--   <tt>EndPosition</tt> along a calculated route.
--   
--   <ul>
--   <li>The default measurement is <tt>Kilometers</tt> unless the request
--   specifies a <tt>DistanceUnit</tt> of <tt>Miles</tt>.</li>
--   </ul>
[$sel:distance:Leg'] :: Leg -> Double

-- | The estimated travel time between the leg's <tt>StartPosition</tt> and
--   <tt>EndPosition</tt>. The travel mode and departure time that you
--   specify in the request determines the calculated time.
[$sel:durationSeconds:Leg'] :: Leg -> Double

-- | The terminating position of the leg. Follows the format
--   <tt>[longitude,latitude]</tt>.
--   
--   If the <tt>EndPosition</tt> isn't located on a road, it's <a>snapped
--   to a nearby road</a>.
[$sel:endPosition:Leg'] :: Leg -> Sensitive (NonEmpty Double)

-- | The starting position of the leg. Follows the format
--   <tt>[longitude,latitude]</tt>.
--   
--   If the <tt>StartPosition</tt> isn't located on a road, it's <a>snapped
--   to a nearby road</a>.
[$sel:startPosition:Leg'] :: Leg -> Sensitive (NonEmpty Double)

-- | Contains a list of steps, which represent subsections of a leg. Each
--   step provides instructions for how to move to the next step in the leg
--   such as the step's start position, end position, travel distance,
--   travel duration, and geometry offset.
[$sel:steps:Leg'] :: Leg -> [Step]

-- | Create a value of <a>Leg</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:geometry:Leg'</a>, <a>leg_geometry</a> - Contains the
--   calculated route's path as a linestring geometry.
--   
--   <a>$sel:distance:Leg'</a>, <a>leg_distance</a> - The distance between
--   the leg's <tt>StartPosition</tt> and <tt>EndPosition</tt> along a
--   calculated route.
--   
--   <ul>
--   <li>The default measurement is <tt>Kilometers</tt> unless the request
--   specifies a <tt>DistanceUnit</tt> of <tt>Miles</tt>.</li>
--   </ul>
--   
--   <a>$sel:durationSeconds:Leg'</a>, <a>leg_durationSeconds</a> - The
--   estimated travel time between the leg's <tt>StartPosition</tt> and
--   <tt>EndPosition</tt>. The travel mode and departure time that you
--   specify in the request determines the calculated time.
--   
--   <a>$sel:endPosition:Leg'</a>, <a>leg_endPosition</a> - The terminating
--   position of the leg. Follows the format <tt>[longitude,latitude]</tt>.
--   
--   If the <tt>EndPosition</tt> isn't located on a road, it's <a>snapped
--   to a nearby road</a>.
--   
--   <a>$sel:startPosition:Leg'</a>, <a>leg_startPosition</a> - The
--   starting position of the leg. Follows the format
--   <tt>[longitude,latitude]</tt>.
--   
--   If the <tt>StartPosition</tt> isn't located on a road, it's <a>snapped
--   to a nearby road</a>.
--   
--   <a>$sel:steps:Leg'</a>, <a>leg_steps</a> - Contains a list of steps,
--   which represent subsections of a leg. Each step provides instructions
--   for how to move to the next step in the leg such as the step's start
--   position, end position, travel distance, travel duration, and geometry
--   offset.
newLeg :: Double -> Double -> NonEmpty Double -> NonEmpty Double -> Leg

-- | Contains the calculated route's path as a linestring geometry.
leg_geometry :: Lens' Leg (Maybe LegGeometry)

-- | The distance between the leg's <tt>StartPosition</tt> and
--   <tt>EndPosition</tt> along a calculated route.
--   
--   <ul>
--   <li>The default measurement is <tt>Kilometers</tt> unless the request
--   specifies a <tt>DistanceUnit</tt> of <tt>Miles</tt>.</li>
--   </ul>
leg_distance :: Lens' Leg Double

-- | The estimated travel time between the leg's <tt>StartPosition</tt> and
--   <tt>EndPosition</tt>. The travel mode and departure time that you
--   specify in the request determines the calculated time.
leg_durationSeconds :: Lens' Leg Double

-- | The terminating position of the leg. Follows the format
--   <tt>[longitude,latitude]</tt>.
--   
--   If the <tt>EndPosition</tt> isn't located on a road, it's <a>snapped
--   to a nearby road</a>.
leg_endPosition :: Lens' Leg (NonEmpty Double)

-- | The starting position of the leg. Follows the format
--   <tt>[longitude,latitude]</tt>.
--   
--   If the <tt>StartPosition</tt> isn't located on a road, it's <a>snapped
--   to a nearby road</a>.
leg_startPosition :: Lens' Leg (NonEmpty Double)

-- | Contains a list of steps, which represent subsections of a leg. Each
--   step provides instructions for how to move to the next step in the leg
--   such as the step's start position, end position, travel distance,
--   travel duration, and geometry offset.
leg_steps :: Lens' Leg [Step]
instance GHC.Generics.Generic Amazonka.Location.Types.Leg.Leg
instance GHC.Show.Show Amazonka.Location.Types.Leg.Leg
instance GHC.Classes.Eq Amazonka.Location.Types.Leg.Leg
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Location.Types.Leg.Leg
instance Data.Hashable.Class.Hashable Amazonka.Location.Types.Leg.Leg
instance Control.DeepSeq.NFData Amazonka.Location.Types.Leg.Leg


module Amazonka.Location.Types.TravelMode
newtype TravelMode
TravelMode' :: Text -> TravelMode
[fromTravelMode] :: TravelMode -> Text
pattern TravelMode_Car :: TravelMode
pattern TravelMode_Truck :: TravelMode
pattern TravelMode_Walking :: TravelMode
instance Amazonka.Data.XML.ToXML Amazonka.Location.Types.TravelMode.TravelMode
instance Amazonka.Data.XML.FromXML Amazonka.Location.Types.TravelMode.TravelMode
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Location.Types.TravelMode.TravelMode
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Location.Types.TravelMode.TravelMode
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Location.Types.TravelMode.TravelMode
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Location.Types.TravelMode.TravelMode
instance Amazonka.Data.Query.ToQuery Amazonka.Location.Types.TravelMode.TravelMode
instance Amazonka.Data.Headers.ToHeader Amazonka.Location.Types.TravelMode.TravelMode
instance Amazonka.Data.Log.ToLog Amazonka.Location.Types.TravelMode.TravelMode
instance Amazonka.Data.ByteString.ToByteString Amazonka.Location.Types.TravelMode.TravelMode
instance Amazonka.Data.Text.ToText Amazonka.Location.Types.TravelMode.TravelMode
instance Amazonka.Data.Text.FromText Amazonka.Location.Types.TravelMode.TravelMode
instance Control.DeepSeq.NFData Amazonka.Location.Types.TravelMode.TravelMode
instance Data.Hashable.Class.Hashable Amazonka.Location.Types.TravelMode.TravelMode
instance GHC.Generics.Generic Amazonka.Location.Types.TravelMode.TravelMode
instance GHC.Classes.Ord Amazonka.Location.Types.TravelMode.TravelMode
instance GHC.Classes.Eq Amazonka.Location.Types.TravelMode.TravelMode
instance GHC.Read.Read Amazonka.Location.Types.TravelMode.TravelMode
instance GHC.Show.Show Amazonka.Location.Types.TravelMode.TravelMode


module Amazonka.Location.Types.TruckDimensions

-- | Contains details about the truck dimensions in the unit of measurement
--   that you specify. Used to filter out roads that can't support or allow
--   the specified dimensions for requests that specify <tt>TravelMode</tt>
--   as <tt>Truck</tt>.
--   
--   <i>See:</i> <a>newTruckDimensions</a> smart constructor.
data TruckDimensions
TruckDimensions' :: Maybe Double -> Maybe Double -> Maybe Double -> Maybe DimensionUnit -> TruckDimensions

-- | The length of the truck.
--   
--   <ul>
--   <li>For example, <tt>15.5</tt>.</li>
--   </ul>
[$sel:length:TruckDimensions'] :: TruckDimensions -> Maybe Double

-- | The height of the truck.
--   
--   <ul>
--   <li>For example, <tt>4.5</tt>.</li>
--   </ul>
[$sel:height:TruckDimensions'] :: TruckDimensions -> Maybe Double

-- | The width of the truck.
--   
--   <ul>
--   <li>For example, <tt>4.5</tt>.</li>
--   </ul>
[$sel:width:TruckDimensions'] :: TruckDimensions -> Maybe Double

-- | Specifies the unit of measurement for the truck dimensions.
--   
--   Default Value: <tt>Meters</tt>
[$sel:unit:TruckDimensions'] :: TruckDimensions -> Maybe DimensionUnit

-- | Create a value of <a>TruckDimensions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:length:TruckDimensions'</a>, <a>truckDimensions_length</a> -
--   The length of the truck.
--   
--   <ul>
--   <li>For example, <tt>15.5</tt>.</li>
--   </ul>
--   
--   <a>$sel:height:TruckDimensions'</a>, <a>truckDimensions_height</a> -
--   The height of the truck.
--   
--   <ul>
--   <li>For example, <tt>4.5</tt>.</li>
--   </ul>
--   
--   <a>$sel:width:TruckDimensions'</a>, <a>truckDimensions_width</a> - The
--   width of the truck.
--   
--   <ul>
--   <li>For example, <tt>4.5</tt>.</li>
--   </ul>
--   
--   <a>$sel:unit:TruckDimensions'</a>, <a>truckDimensions_unit</a> -
--   Specifies the unit of measurement for the truck dimensions.
--   
--   Default Value: <tt>Meters</tt>
newTruckDimensions :: TruckDimensions

-- | The length of the truck.
--   
--   <ul>
--   <li>For example, <tt>15.5</tt>.</li>
--   </ul>
truckDimensions_length :: Lens' TruckDimensions (Maybe Double)

-- | The height of the truck.
--   
--   <ul>
--   <li>For example, <tt>4.5</tt>.</li>
--   </ul>
truckDimensions_height :: Lens' TruckDimensions (Maybe Double)

-- | The width of the truck.
--   
--   <ul>
--   <li>For example, <tt>4.5</tt>.</li>
--   </ul>
truckDimensions_width :: Lens' TruckDimensions (Maybe Double)

-- | Specifies the unit of measurement for the truck dimensions.
--   
--   Default Value: <tt>Meters</tt>
truckDimensions_unit :: Lens' TruckDimensions (Maybe DimensionUnit)
instance GHC.Generics.Generic Amazonka.Location.Types.TruckDimensions.TruckDimensions
instance GHC.Show.Show Amazonka.Location.Types.TruckDimensions.TruckDimensions
instance GHC.Read.Read Amazonka.Location.Types.TruckDimensions.TruckDimensions
instance GHC.Classes.Eq Amazonka.Location.Types.TruckDimensions.TruckDimensions
instance Data.Hashable.Class.Hashable Amazonka.Location.Types.TruckDimensions.TruckDimensions
instance Control.DeepSeq.NFData Amazonka.Location.Types.TruckDimensions.TruckDimensions
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Location.Types.TruckDimensions.TruckDimensions


module Amazonka.Location.Types.VehicleWeightUnit
newtype VehicleWeightUnit
VehicleWeightUnit' :: Text -> VehicleWeightUnit
[fromVehicleWeightUnit] :: VehicleWeightUnit -> Text
pattern VehicleWeightUnit_Kilograms :: VehicleWeightUnit
pattern VehicleWeightUnit_Pounds :: VehicleWeightUnit
instance Amazonka.Data.XML.ToXML Amazonka.Location.Types.VehicleWeightUnit.VehicleWeightUnit
instance Amazonka.Data.XML.FromXML Amazonka.Location.Types.VehicleWeightUnit.VehicleWeightUnit
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Location.Types.VehicleWeightUnit.VehicleWeightUnit
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Location.Types.VehicleWeightUnit.VehicleWeightUnit
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Location.Types.VehicleWeightUnit.VehicleWeightUnit
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Location.Types.VehicleWeightUnit.VehicleWeightUnit
instance Amazonka.Data.Query.ToQuery Amazonka.Location.Types.VehicleWeightUnit.VehicleWeightUnit
instance Amazonka.Data.Headers.ToHeader Amazonka.Location.Types.VehicleWeightUnit.VehicleWeightUnit
instance Amazonka.Data.Log.ToLog Amazonka.Location.Types.VehicleWeightUnit.VehicleWeightUnit
instance Amazonka.Data.ByteString.ToByteString Amazonka.Location.Types.VehicleWeightUnit.VehicleWeightUnit
instance Amazonka.Data.Text.ToText Amazonka.Location.Types.VehicleWeightUnit.VehicleWeightUnit
instance Amazonka.Data.Text.FromText Amazonka.Location.Types.VehicleWeightUnit.VehicleWeightUnit
instance Control.DeepSeq.NFData Amazonka.Location.Types.VehicleWeightUnit.VehicleWeightUnit
instance Data.Hashable.Class.Hashable Amazonka.Location.Types.VehicleWeightUnit.VehicleWeightUnit
instance GHC.Generics.Generic Amazonka.Location.Types.VehicleWeightUnit.VehicleWeightUnit
instance GHC.Classes.Ord Amazonka.Location.Types.VehicleWeightUnit.VehicleWeightUnit
instance GHC.Classes.Eq Amazonka.Location.Types.VehicleWeightUnit.VehicleWeightUnit
instance GHC.Read.Read Amazonka.Location.Types.VehicleWeightUnit.VehicleWeightUnit
instance GHC.Show.Show Amazonka.Location.Types.VehicleWeightUnit.VehicleWeightUnit


module Amazonka.Location.Types.TruckWeight

-- | Contains details about the truck's weight specifications. Used to
--   avoid roads that can't support or allow the total weight for requests
--   that specify <tt>TravelMode</tt> as <tt>Truck</tt>.
--   
--   <i>See:</i> <a>newTruckWeight</a> smart constructor.
data TruckWeight
TruckWeight' :: Maybe Double -> Maybe VehicleWeightUnit -> TruckWeight

-- | The total weight of the truck.
--   
--   <ul>
--   <li>For example, <tt>3500</tt>.</li>
--   </ul>
[$sel:total:TruckWeight'] :: TruckWeight -> Maybe Double

-- | The unit of measurement to use for the truck weight.
--   
--   Default Value: <tt>Kilograms</tt>
[$sel:unit:TruckWeight'] :: TruckWeight -> Maybe VehicleWeightUnit

-- | Create a value of <a>TruckWeight</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:total:TruckWeight'</a>, <a>truckWeight_total</a> - The total
--   weight of the truck.
--   
--   <ul>
--   <li>For example, <tt>3500</tt>.</li>
--   </ul>
--   
--   <a>$sel:unit:TruckWeight'</a>, <a>truckWeight_unit</a> - The unit of
--   measurement to use for the truck weight.
--   
--   Default Value: <tt>Kilograms</tt>
newTruckWeight :: TruckWeight

-- | The total weight of the truck.
--   
--   <ul>
--   <li>For example, <tt>3500</tt>.</li>
--   </ul>
truckWeight_total :: Lens' TruckWeight (Maybe Double)

-- | The unit of measurement to use for the truck weight.
--   
--   Default Value: <tt>Kilograms</tt>
truckWeight_unit :: Lens' TruckWeight (Maybe VehicleWeightUnit)
instance GHC.Generics.Generic Amazonka.Location.Types.TruckWeight.TruckWeight
instance GHC.Show.Show Amazonka.Location.Types.TruckWeight.TruckWeight
instance GHC.Read.Read Amazonka.Location.Types.TruckWeight.TruckWeight
instance GHC.Classes.Eq Amazonka.Location.Types.TruckWeight.TruckWeight
instance Data.Hashable.Class.Hashable Amazonka.Location.Types.TruckWeight.TruckWeight
instance Control.DeepSeq.NFData Amazonka.Location.Types.TruckWeight.TruckWeight
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Location.Types.TruckWeight.TruckWeight


module Amazonka.Location.Types.CalculateRouteTruckModeOptions

-- | Contains details about additional route preferences for requests that
--   specify <tt>TravelMode</tt> as <tt>Truck</tt>.
--   
--   <i>See:</i> <a>newCalculateRouteTruckModeOptions</a> smart
--   constructor.
data CalculateRouteTruckModeOptions
CalculateRouteTruckModeOptions' :: Maybe TruckWeight -> Maybe Bool -> Maybe TruckDimensions -> Maybe Bool -> CalculateRouteTruckModeOptions

-- | Specifies the truck's weight specifications including total weight and
--   unit of measurement. Used to avoid roads that can't support the
--   truck's weight.
[$sel:weight:CalculateRouteTruckModeOptions'] :: CalculateRouteTruckModeOptions -> Maybe TruckWeight

-- | Avoids ferries when calculating routes.
--   
--   Default Value: <tt>false</tt>
--   
--   Valid Values: <tt>false</tt> | <tt>true</tt>
[$sel:avoidTolls:CalculateRouteTruckModeOptions'] :: CalculateRouteTruckModeOptions -> Maybe Bool

-- | Specifies the truck's dimension specifications including length,
--   height, width, and unit of measurement. Used to avoid roads that can't
--   support the truck's dimensions.
[$sel:dimensions:CalculateRouteTruckModeOptions'] :: CalculateRouteTruckModeOptions -> Maybe TruckDimensions

-- | Avoids ferries when calculating routes.
--   
--   Default Value: <tt>false</tt>
--   
--   Valid Values: <tt>false</tt> | <tt>true</tt>
[$sel:avoidFerries:CalculateRouteTruckModeOptions'] :: CalculateRouteTruckModeOptions -> Maybe Bool

-- | Create a value of <a>CalculateRouteTruckModeOptions</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:weight:CalculateRouteTruckModeOptions'</a>,
--   <a>calculateRouteTruckModeOptions_weight</a> - Specifies the truck's
--   weight specifications including total weight and unit of measurement.
--   Used to avoid roads that can't support the truck's weight.
--   
--   <a>$sel:avoidTolls:CalculateRouteTruckModeOptions'</a>,
--   <a>calculateRouteTruckModeOptions_avoidTolls</a> - Avoids ferries when
--   calculating routes.
--   
--   Default Value: <tt>false</tt>
--   
--   Valid Values: <tt>false</tt> | <tt>true</tt>
--   
--   <a>$sel:dimensions:CalculateRouteTruckModeOptions'</a>,
--   <a>calculateRouteTruckModeOptions_dimensions</a> - Specifies the
--   truck's dimension specifications including length, height, width, and
--   unit of measurement. Used to avoid roads that can't support the
--   truck's dimensions.
--   
--   <a>$sel:avoidFerries:CalculateRouteTruckModeOptions'</a>,
--   <a>calculateRouteTruckModeOptions_avoidFerries</a> - Avoids ferries
--   when calculating routes.
--   
--   Default Value: <tt>false</tt>
--   
--   Valid Values: <tt>false</tt> | <tt>true</tt>
newCalculateRouteTruckModeOptions :: CalculateRouteTruckModeOptions

-- | Specifies the truck's weight specifications including total weight and
--   unit of measurement. Used to avoid roads that can't support the
--   truck's weight.
calculateRouteTruckModeOptions_weight :: Lens' CalculateRouteTruckModeOptions (Maybe TruckWeight)

-- | Avoids ferries when calculating routes.
--   
--   Default Value: <tt>false</tt>
--   
--   Valid Values: <tt>false</tt> | <tt>true</tt>
calculateRouteTruckModeOptions_avoidTolls :: Lens' CalculateRouteTruckModeOptions (Maybe Bool)

-- | Specifies the truck's dimension specifications including length,
--   height, width, and unit of measurement. Used to avoid roads that can't
--   support the truck's dimensions.
calculateRouteTruckModeOptions_dimensions :: Lens' CalculateRouteTruckModeOptions (Maybe TruckDimensions)

-- | Avoids ferries when calculating routes.
--   
--   Default Value: <tt>false</tt>
--   
--   Valid Values: <tt>false</tt> | <tt>true</tt>
calculateRouteTruckModeOptions_avoidFerries :: Lens' CalculateRouteTruckModeOptions (Maybe Bool)
instance GHC.Generics.Generic Amazonka.Location.Types.CalculateRouteTruckModeOptions.CalculateRouteTruckModeOptions
instance GHC.Show.Show Amazonka.Location.Types.CalculateRouteTruckModeOptions.CalculateRouteTruckModeOptions
instance GHC.Read.Read Amazonka.Location.Types.CalculateRouteTruckModeOptions.CalculateRouteTruckModeOptions
instance GHC.Classes.Eq Amazonka.Location.Types.CalculateRouteTruckModeOptions.CalculateRouteTruckModeOptions
instance Data.Hashable.Class.Hashable Amazonka.Location.Types.CalculateRouteTruckModeOptions.CalculateRouteTruckModeOptions
instance Control.DeepSeq.NFData Amazonka.Location.Types.CalculateRouteTruckModeOptions.CalculateRouteTruckModeOptions
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Location.Types.CalculateRouteTruckModeOptions.CalculateRouteTruckModeOptions


module Amazonka.Location.Types

-- | API version <tt>2020-11-19</tt> of the Amazon Location Service SDK
--   configuration.
defaultService :: Service

-- | The input failed to meet the constraints specified by the AWS service.
_ValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request was denied because of insufficient access or permissions.
--   Check with an administrator to verify your permissions.
_AccessDeniedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request was unsuccessful because of a conflict.
_ConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The operation was denied because the request would exceed the maximum
--   <a>quota</a> set for Amazon Location Service.
_ServiceQuotaExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request was denied because of request throttling.
_ThrottlingException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request has failed to process because of an unknown server error,
--   exception, or failure.
_InternalServerException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource that you've entered was not found in your AWS account.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError
newtype BatchItemErrorCode
BatchItemErrorCode' :: Text -> BatchItemErrorCode
[fromBatchItemErrorCode] :: BatchItemErrorCode -> Text
pattern BatchItemErrorCode_AccessDeniedError :: BatchItemErrorCode
pattern BatchItemErrorCode_ConflictError :: BatchItemErrorCode
pattern BatchItemErrorCode_InternalServerError :: BatchItemErrorCode
pattern BatchItemErrorCode_ResourceNotFoundError :: BatchItemErrorCode
pattern BatchItemErrorCode_ThrottlingError :: BatchItemErrorCode
pattern BatchItemErrorCode_ValidationError :: BatchItemErrorCode
newtype DimensionUnit
DimensionUnit' :: Text -> DimensionUnit
[fromDimensionUnit] :: DimensionUnit -> Text
pattern DimensionUnit_Feet :: DimensionUnit
pattern DimensionUnit_Meters :: DimensionUnit
newtype DistanceUnit
DistanceUnit' :: Text -> DistanceUnit
[fromDistanceUnit] :: DistanceUnit -> Text
pattern DistanceUnit_Kilometers :: DistanceUnit
pattern DistanceUnit_Miles :: DistanceUnit
newtype IntendedUse
IntendedUse' :: Text -> IntendedUse
[fromIntendedUse] :: IntendedUse -> Text
pattern IntendedUse_SingleUse :: IntendedUse
pattern IntendedUse_Storage :: IntendedUse
newtype PositionFiltering
PositionFiltering' :: Text -> PositionFiltering
[fromPositionFiltering] :: PositionFiltering -> Text
pattern PositionFiltering_DistanceBased :: PositionFiltering
pattern PositionFiltering_TimeBased :: PositionFiltering
newtype PricingPlan
PricingPlan' :: Text -> PricingPlan
[fromPricingPlan] :: PricingPlan -> Text
pattern PricingPlan_MobileAssetManagement :: PricingPlan
pattern PricingPlan_MobileAssetTracking :: PricingPlan
pattern PricingPlan_RequestBasedUsage :: PricingPlan
newtype TravelMode
TravelMode' :: Text -> TravelMode
[fromTravelMode] :: TravelMode -> Text
pattern TravelMode_Car :: TravelMode
pattern TravelMode_Truck :: TravelMode
pattern TravelMode_Walking :: TravelMode
newtype VehicleWeightUnit
VehicleWeightUnit' :: Text -> VehicleWeightUnit
[fromVehicleWeightUnit] :: VehicleWeightUnit -> Text
pattern VehicleWeightUnit_Kilograms :: VehicleWeightUnit
pattern VehicleWeightUnit_Pounds :: VehicleWeightUnit

-- | Contains the tracker resource details.
--   
--   <i>See:</i> <a>newBatchDeleteDevicePositionHistoryError</a> smart
--   constructor.
data BatchDeleteDevicePositionHistoryError
BatchDeleteDevicePositionHistoryError' :: Text -> BatchItemError -> BatchDeleteDevicePositionHistoryError

-- | The ID of the device for this position.
[$sel:deviceId:BatchDeleteDevicePositionHistoryError'] :: BatchDeleteDevicePositionHistoryError -> Text
[$sel:error:BatchDeleteDevicePositionHistoryError'] :: BatchDeleteDevicePositionHistoryError -> BatchItemError

-- | Create a value of <a>BatchDeleteDevicePositionHistoryError</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceId:BatchDeleteDevicePositionHistoryError'</a>,
--   <a>batchDeleteDevicePositionHistoryError_deviceId</a> - The ID of the
--   device for this position.
--   
--   <a>$sel:error:BatchDeleteDevicePositionHistoryError'</a>,
--   <a>batchDeleteDevicePositionHistoryError_error</a> - Undocumented
--   member.
newBatchDeleteDevicePositionHistoryError :: Text -> BatchItemError -> BatchDeleteDevicePositionHistoryError

-- | The ID of the device for this position.
batchDeleteDevicePositionHistoryError_deviceId :: Lens' BatchDeleteDevicePositionHistoryError Text

-- | Undocumented member.
batchDeleteDevicePositionHistoryError_error :: Lens' BatchDeleteDevicePositionHistoryError BatchItemError

-- | Contains error details for each geofence that failed to delete from
--   the geofence collection.
--   
--   <i>See:</i> <a>newBatchDeleteGeofenceError</a> smart constructor.
data BatchDeleteGeofenceError
BatchDeleteGeofenceError' :: BatchItemError -> Text -> BatchDeleteGeofenceError

-- | Contains details associated to the batch error.
[$sel:error:BatchDeleteGeofenceError'] :: BatchDeleteGeofenceError -> BatchItemError

-- | The geofence associated with the error message.
[$sel:geofenceId:BatchDeleteGeofenceError'] :: BatchDeleteGeofenceError -> Text

-- | Create a value of <a>BatchDeleteGeofenceError</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:error:BatchDeleteGeofenceError'</a>,
--   <a>batchDeleteGeofenceError_error</a> - Contains details associated to
--   the batch error.
--   
--   <a>$sel:geofenceId:BatchDeleteGeofenceError'</a>,
--   <a>batchDeleteGeofenceError_geofenceId</a> - The geofence associated
--   with the error message.
newBatchDeleteGeofenceError :: BatchItemError -> Text -> BatchDeleteGeofenceError

-- | Contains details associated to the batch error.
batchDeleteGeofenceError_error :: Lens' BatchDeleteGeofenceError BatchItemError

-- | The geofence associated with the error message.
batchDeleteGeofenceError_geofenceId :: Lens' BatchDeleteGeofenceError Text

-- | Contains error details for each device that failed to evaluate its
--   position against the geofences in a given geofence collection.
--   
--   <i>See:</i> <a>newBatchEvaluateGeofencesError</a> smart constructor.
data BatchEvaluateGeofencesError
BatchEvaluateGeofencesError' :: Text -> BatchItemError -> POSIX -> BatchEvaluateGeofencesError

-- | The device associated with the position evaluation error.
[$sel:deviceId:BatchEvaluateGeofencesError'] :: BatchEvaluateGeofencesError -> Text

-- | Contains details associated to the batch error.
[$sel:error:BatchEvaluateGeofencesError'] :: BatchEvaluateGeofencesError -> BatchItemError

-- | Specifies a timestamp for when the error occurred in <a>ISO 8601</a>
--   format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
[$sel:sampleTime:BatchEvaluateGeofencesError'] :: BatchEvaluateGeofencesError -> POSIX

-- | Create a value of <a>BatchEvaluateGeofencesError</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceId:BatchEvaluateGeofencesError'</a>,
--   <a>batchEvaluateGeofencesError_deviceId</a> - The device associated
--   with the position evaluation error.
--   
--   <a>$sel:error:BatchEvaluateGeofencesError'</a>,
--   <a>batchEvaluateGeofencesError_error</a> - Contains details associated
--   to the batch error.
--   
--   <a>$sel:sampleTime:BatchEvaluateGeofencesError'</a>,
--   <a>batchEvaluateGeofencesError_sampleTime</a> - Specifies a timestamp
--   for when the error occurred in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
newBatchEvaluateGeofencesError :: Text -> BatchItemError -> UTCTime -> BatchEvaluateGeofencesError

-- | The device associated with the position evaluation error.
batchEvaluateGeofencesError_deviceId :: Lens' BatchEvaluateGeofencesError Text

-- | Contains details associated to the batch error.
batchEvaluateGeofencesError_error :: Lens' BatchEvaluateGeofencesError BatchItemError

-- | Specifies a timestamp for when the error occurred in <a>ISO 8601</a>
--   format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
batchEvaluateGeofencesError_sampleTime :: Lens' BatchEvaluateGeofencesError UTCTime

-- | Contains error details for each device that didn't return a position.
--   
--   <i>See:</i> <a>newBatchGetDevicePositionError</a> smart constructor.
data BatchGetDevicePositionError
BatchGetDevicePositionError' :: Text -> BatchItemError -> BatchGetDevicePositionError

-- | The ID of the device that didn't return a position.
[$sel:deviceId:BatchGetDevicePositionError'] :: BatchGetDevicePositionError -> Text

-- | Contains details related to the error code.
[$sel:error:BatchGetDevicePositionError'] :: BatchGetDevicePositionError -> BatchItemError

-- | Create a value of <a>BatchGetDevicePositionError</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceId:BatchGetDevicePositionError'</a>,
--   <a>batchGetDevicePositionError_deviceId</a> - The ID of the device
--   that didn't return a position.
--   
--   <a>$sel:error:BatchGetDevicePositionError'</a>,
--   <a>batchGetDevicePositionError_error</a> - Contains details related to
--   the error code.
newBatchGetDevicePositionError :: Text -> BatchItemError -> BatchGetDevicePositionError

-- | The ID of the device that didn't return a position.
batchGetDevicePositionError_deviceId :: Lens' BatchGetDevicePositionError Text

-- | Contains details related to the error code.
batchGetDevicePositionError_error :: Lens' BatchGetDevicePositionError BatchItemError

-- | Contains the batch request error details associated with the request.
--   
--   <i>See:</i> <a>newBatchItemError</a> smart constructor.
data BatchItemError
BatchItemError' :: Maybe BatchItemErrorCode -> Maybe Text -> BatchItemError

-- | The error code associated with the batch request error.
[$sel:code:BatchItemError'] :: BatchItemError -> Maybe BatchItemErrorCode

-- | A message with the reason for the batch request error.
[$sel:message:BatchItemError'] :: BatchItemError -> Maybe Text

-- | Create a value of <a>BatchItemError</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:code:BatchItemError'</a>, <a>batchItemError_code</a> - The
--   error code associated with the batch request error.
--   
--   <a>$sel:message:BatchItemError'</a>, <a>batchItemError_message</a> - A
--   message with the reason for the batch request error.
newBatchItemError :: BatchItemError

-- | The error code associated with the batch request error.
batchItemError_code :: Lens' BatchItemError (Maybe BatchItemErrorCode)

-- | A message with the reason for the batch request error.
batchItemError_message :: Lens' BatchItemError (Maybe Text)

-- | Contains error details for each geofence that failed to be stored in a
--   given geofence collection.
--   
--   <i>See:</i> <a>newBatchPutGeofenceError</a> smart constructor.
data BatchPutGeofenceError
BatchPutGeofenceError' :: BatchItemError -> Text -> BatchPutGeofenceError

-- | Contains details associated to the batch error.
[$sel:error:BatchPutGeofenceError'] :: BatchPutGeofenceError -> BatchItemError

-- | The geofence associated with the error message.
[$sel:geofenceId:BatchPutGeofenceError'] :: BatchPutGeofenceError -> Text

-- | Create a value of <a>BatchPutGeofenceError</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:error:BatchPutGeofenceError'</a>,
--   <a>batchPutGeofenceError_error</a> - Contains details associated to
--   the batch error.
--   
--   <a>$sel:geofenceId:BatchPutGeofenceError'</a>,
--   <a>batchPutGeofenceError_geofenceId</a> - The geofence associated with
--   the error message.
newBatchPutGeofenceError :: BatchItemError -> Text -> BatchPutGeofenceError

-- | Contains details associated to the batch error.
batchPutGeofenceError_error :: Lens' BatchPutGeofenceError BatchItemError

-- | The geofence associated with the error message.
batchPutGeofenceError_geofenceId :: Lens' BatchPutGeofenceError Text

-- | Contains geofence geometry details.
--   
--   <i>See:</i> <a>newBatchPutGeofenceRequestEntry</a> smart constructor.
data BatchPutGeofenceRequestEntry
BatchPutGeofenceRequestEntry' :: Text -> GeofenceGeometry -> BatchPutGeofenceRequestEntry

-- | The identifier for the geofence to be stored in a given geofence
--   collection.
[$sel:geofenceId:BatchPutGeofenceRequestEntry'] :: BatchPutGeofenceRequestEntry -> Text

-- | Contains the polygon details to specify the position of the geofence.
--   
--   Each <a>geofence polygon</a> can have a maximum of 1,000 vertices.
[$sel:geometry:BatchPutGeofenceRequestEntry'] :: BatchPutGeofenceRequestEntry -> GeofenceGeometry

-- | Create a value of <a>BatchPutGeofenceRequestEntry</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:geofenceId:BatchPutGeofenceRequestEntry'</a>,
--   <a>batchPutGeofenceRequestEntry_geofenceId</a> - The identifier for
--   the geofence to be stored in a given geofence collection.
--   
--   <a>$sel:geometry:BatchPutGeofenceRequestEntry'</a>,
--   <a>batchPutGeofenceRequestEntry_geometry</a> - Contains the polygon
--   details to specify the position of the geofence.
--   
--   Each <a>geofence polygon</a> can have a maximum of 1,000 vertices.
newBatchPutGeofenceRequestEntry :: Text -> GeofenceGeometry -> BatchPutGeofenceRequestEntry

-- | The identifier for the geofence to be stored in a given geofence
--   collection.
batchPutGeofenceRequestEntry_geofenceId :: Lens' BatchPutGeofenceRequestEntry Text

-- | Contains the polygon details to specify the position of the geofence.
--   
--   Each <a>geofence polygon</a> can have a maximum of 1,000 vertices.
batchPutGeofenceRequestEntry_geometry :: Lens' BatchPutGeofenceRequestEntry GeofenceGeometry

-- | Contains a summary of each geofence that was successfully stored in a
--   given geofence collection.
--   
--   <i>See:</i> <a>newBatchPutGeofenceSuccess</a> smart constructor.
data BatchPutGeofenceSuccess
BatchPutGeofenceSuccess' :: POSIX -> Text -> POSIX -> BatchPutGeofenceSuccess

-- | The timestamp for when the geofence was stored in a geofence
--   collection in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
[$sel:createTime:BatchPutGeofenceSuccess'] :: BatchPutGeofenceSuccess -> POSIX

-- | The geofence successfully stored in a geofence collection.
[$sel:geofenceId:BatchPutGeofenceSuccess'] :: BatchPutGeofenceSuccess -> Text

-- | The timestamp for when the geofence was last updated in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
[$sel:updateTime:BatchPutGeofenceSuccess'] :: BatchPutGeofenceSuccess -> POSIX

-- | Create a value of <a>BatchPutGeofenceSuccess</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createTime:BatchPutGeofenceSuccess'</a>,
--   <a>batchPutGeofenceSuccess_createTime</a> - The timestamp for when the
--   geofence was stored in a geofence collection in <a>ISO 8601</a>
--   format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
--   
--   <a>$sel:geofenceId:BatchPutGeofenceSuccess'</a>,
--   <a>batchPutGeofenceSuccess_geofenceId</a> - The geofence successfully
--   stored in a geofence collection.
--   
--   <a>$sel:updateTime:BatchPutGeofenceSuccess'</a>,
--   <a>batchPutGeofenceSuccess_updateTime</a> - The timestamp for when the
--   geofence was last updated in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
newBatchPutGeofenceSuccess :: UTCTime -> Text -> UTCTime -> BatchPutGeofenceSuccess

-- | The timestamp for when the geofence was stored in a geofence
--   collection in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
batchPutGeofenceSuccess_createTime :: Lens' BatchPutGeofenceSuccess UTCTime

-- | The geofence successfully stored in a geofence collection.
batchPutGeofenceSuccess_geofenceId :: Lens' BatchPutGeofenceSuccess Text

-- | The timestamp for when the geofence was last updated in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
batchPutGeofenceSuccess_updateTime :: Lens' BatchPutGeofenceSuccess UTCTime

-- | Contains error details for each device that failed to update its
--   position.
--   
--   <i>See:</i> <a>newBatchUpdateDevicePositionError</a> smart
--   constructor.
data BatchUpdateDevicePositionError
BatchUpdateDevicePositionError' :: Text -> BatchItemError -> POSIX -> BatchUpdateDevicePositionError

-- | The device associated with the failed location update.
[$sel:deviceId:BatchUpdateDevicePositionError'] :: BatchUpdateDevicePositionError -> Text

-- | Contains details related to the error code such as the error code and
--   error message.
[$sel:error:BatchUpdateDevicePositionError'] :: BatchUpdateDevicePositionError -> BatchItemError

-- | The timestamp at which the device position was determined. Uses <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
[$sel:sampleTime:BatchUpdateDevicePositionError'] :: BatchUpdateDevicePositionError -> POSIX

-- | Create a value of <a>BatchUpdateDevicePositionError</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceId:BatchUpdateDevicePositionError'</a>,
--   <a>batchUpdateDevicePositionError_deviceId</a> - The device associated
--   with the failed location update.
--   
--   <a>$sel:error:BatchUpdateDevicePositionError'</a>,
--   <a>batchUpdateDevicePositionError_error</a> - Contains details related
--   to the error code such as the error code and error message.
--   
--   <a>$sel:sampleTime:BatchUpdateDevicePositionError'</a>,
--   <a>batchUpdateDevicePositionError_sampleTime</a> - The timestamp at
--   which the device position was determined. Uses <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
newBatchUpdateDevicePositionError :: Text -> BatchItemError -> UTCTime -> BatchUpdateDevicePositionError

-- | The device associated with the failed location update.
batchUpdateDevicePositionError_deviceId :: Lens' BatchUpdateDevicePositionError Text

-- | Contains details related to the error code such as the error code and
--   error message.
batchUpdateDevicePositionError_error :: Lens' BatchUpdateDevicePositionError BatchItemError

-- | The timestamp at which the device position was determined. Uses <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
batchUpdateDevicePositionError_sampleTime :: Lens' BatchUpdateDevicePositionError UTCTime

-- | Contains details about additional route preferences for requests that
--   specify <tt>TravelMode</tt> as <tt>Car</tt>.
--   
--   <i>See:</i> <a>newCalculateRouteCarModeOptions</a> smart constructor.
data CalculateRouteCarModeOptions
CalculateRouteCarModeOptions' :: Maybe Bool -> Maybe Bool -> CalculateRouteCarModeOptions

-- | Avoids tolls when calculating routes.
--   
--   Default Value: <tt>false</tt>
--   
--   Valid Values: <tt>false</tt> | <tt>true</tt>
[$sel:avoidTolls:CalculateRouteCarModeOptions'] :: CalculateRouteCarModeOptions -> Maybe Bool

-- | Avoids ferries when calculating routes.
--   
--   Default Value: <tt>false</tt>
--   
--   Valid Values: <tt>false</tt> | <tt>true</tt>
[$sel:avoidFerries:CalculateRouteCarModeOptions'] :: CalculateRouteCarModeOptions -> Maybe Bool

-- | Create a value of <a>CalculateRouteCarModeOptions</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:avoidTolls:CalculateRouteCarModeOptions'</a>,
--   <a>calculateRouteCarModeOptions_avoidTolls</a> - Avoids tolls when
--   calculating routes.
--   
--   Default Value: <tt>false</tt>
--   
--   Valid Values: <tt>false</tt> | <tt>true</tt>
--   
--   <a>$sel:avoidFerries:CalculateRouteCarModeOptions'</a>,
--   <a>calculateRouteCarModeOptions_avoidFerries</a> - Avoids ferries when
--   calculating routes.
--   
--   Default Value: <tt>false</tt>
--   
--   Valid Values: <tt>false</tt> | <tt>true</tt>
newCalculateRouteCarModeOptions :: CalculateRouteCarModeOptions

-- | Avoids tolls when calculating routes.
--   
--   Default Value: <tt>false</tt>
--   
--   Valid Values: <tt>false</tt> | <tt>true</tt>
calculateRouteCarModeOptions_avoidTolls :: Lens' CalculateRouteCarModeOptions (Maybe Bool)

-- | Avoids ferries when calculating routes.
--   
--   Default Value: <tt>false</tt>
--   
--   Valid Values: <tt>false</tt> | <tt>true</tt>
calculateRouteCarModeOptions_avoidFerries :: Lens' CalculateRouteCarModeOptions (Maybe Bool)

-- | A summary of the calculated route.
--   
--   <i>See:</i> <a>newCalculateRouteSummary</a> smart constructor.
data CalculateRouteSummary
CalculateRouteSummary' :: Text -> Double -> DistanceUnit -> Double -> Sensitive (NonEmpty Double) -> CalculateRouteSummary

-- | The data provider of traffic and road network data used to calculate
--   the route. Indicates one of the available providers:
--   
--   <ul>
--   <li><pre>Esri</pre></li>
--   <li><pre>Here</pre></li>
--   </ul>
--   
--   For more information about data providers, see <a>Amazon Location
--   Service data providers</a>.
[$sel:dataSource:CalculateRouteSummary'] :: CalculateRouteSummary -> Text

-- | The total distance covered by the route. The sum of the distance
--   travelled between every stop on the route.
--   
--   If Esri is the data source for the route calculator, the route
--   distance can’t be greater than 400 km. If the route exceeds 400 km,
--   the response is a <tt>400 RoutesValidationException</tt> error.
[$sel:distance:CalculateRouteSummary'] :: CalculateRouteSummary -> Double

-- | The unit of measurement for the distance.
[$sel:distanceUnit:CalculateRouteSummary'] :: CalculateRouteSummary -> DistanceUnit

-- | The total travel time for the route measured in seconds. The sum of
--   the travel time between every stop on the route.
[$sel:durationSeconds:CalculateRouteSummary'] :: CalculateRouteSummary -> Double

-- | Specifies a geographical box surrounding a route. Used to zoom into a
--   route when displaying it in a map. For example, <tt>[min x, min y, max
--   x, max y]</tt>.
--   
--   The first 2 <tt>bbox</tt> parameters describe the lower southwest
--   corner:
--   
--   <ul>
--   <li>The first <tt>bbox</tt> position is the X coordinate or longitude
--   of the lower southwest corner.</li>
--   <li>The second <tt>bbox</tt> position is the Y coordinate or latitude
--   of the lower southwest corner.</li>
--   </ul>
--   
--   The next 2 <tt>bbox</tt> parameters describe the upper northeast
--   corner:
--   
--   <ul>
--   <li>The third <tt>bbox</tt> position is the X coordinate, or longitude
--   of the upper northeast corner.</li>
--   <li>The fourth <tt>bbox</tt> position is the Y coordinate, or latitude
--   of the upper northeast corner.</li>
--   </ul>
[$sel:routeBBox:CalculateRouteSummary'] :: CalculateRouteSummary -> Sensitive (NonEmpty Double)

-- | Create a value of <a>CalculateRouteSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataSource:CalculateRouteSummary'</a>,
--   <a>calculateRouteSummary_dataSource</a> - The data provider of traffic
--   and road network data used to calculate the route. Indicates one of
--   the available providers:
--   
--   <ul>
--   <li><pre>Esri</pre></li>
--   <li><pre>Here</pre></li>
--   </ul>
--   
--   For more information about data providers, see <a>Amazon Location
--   Service data providers</a>.
--   
--   <a>$sel:distance:CalculateRouteSummary'</a>,
--   <a>calculateRouteSummary_distance</a> - The total distance covered by
--   the route. The sum of the distance travelled between every stop on the
--   route.
--   
--   If Esri is the data source for the route calculator, the route
--   distance can’t be greater than 400 km. If the route exceeds 400 km,
--   the response is a <tt>400 RoutesValidationException</tt> error.
--   
--   <a>$sel:distanceUnit:CalculateRouteSummary'</a>,
--   <a>calculateRouteSummary_distanceUnit</a> - The unit of measurement
--   for the distance.
--   
--   <a>$sel:durationSeconds:CalculateRouteSummary'</a>,
--   <a>calculateRouteSummary_durationSeconds</a> - The total travel time
--   for the route measured in seconds. The sum of the travel time between
--   every stop on the route.
--   
--   <a>$sel:routeBBox:CalculateRouteSummary'</a>,
--   <a>calculateRouteSummary_routeBBox</a> - Specifies a geographical box
--   surrounding a route. Used to zoom into a route when displaying it in a
--   map. For example, <tt>[min x, min y, max x, max y]</tt>.
--   
--   The first 2 <tt>bbox</tt> parameters describe the lower southwest
--   corner:
--   
--   <ul>
--   <li>The first <tt>bbox</tt> position is the X coordinate or longitude
--   of the lower southwest corner.</li>
--   <li>The second <tt>bbox</tt> position is the Y coordinate or latitude
--   of the lower southwest corner.</li>
--   </ul>
--   
--   The next 2 <tt>bbox</tt> parameters describe the upper northeast
--   corner:
--   
--   <ul>
--   <li>The third <tt>bbox</tt> position is the X coordinate, or longitude
--   of the upper northeast corner.</li>
--   <li>The fourth <tt>bbox</tt> position is the Y coordinate, or latitude
--   of the upper northeast corner.</li>
--   </ul>
newCalculateRouteSummary :: Text -> Double -> DistanceUnit -> Double -> NonEmpty Double -> CalculateRouteSummary

-- | The data provider of traffic and road network data used to calculate
--   the route. Indicates one of the available providers:
--   
--   <ul>
--   <li><pre>Esri</pre></li>
--   <li><pre>Here</pre></li>
--   </ul>
--   
--   For more information about data providers, see <a>Amazon Location
--   Service data providers</a>.
calculateRouteSummary_dataSource :: Lens' CalculateRouteSummary Text

-- | The total distance covered by the route. The sum of the distance
--   travelled between every stop on the route.
--   
--   If Esri is the data source for the route calculator, the route
--   distance can’t be greater than 400 km. If the route exceeds 400 km,
--   the response is a <tt>400 RoutesValidationException</tt> error.
calculateRouteSummary_distance :: Lens' CalculateRouteSummary Double

-- | The unit of measurement for the distance.
calculateRouteSummary_distanceUnit :: Lens' CalculateRouteSummary DistanceUnit

-- | The total travel time for the route measured in seconds. The sum of
--   the travel time between every stop on the route.
calculateRouteSummary_durationSeconds :: Lens' CalculateRouteSummary Double

-- | Specifies a geographical box surrounding a route. Used to zoom into a
--   route when displaying it in a map. For example, <tt>[min x, min y, max
--   x, max y]</tt>.
--   
--   The first 2 <tt>bbox</tt> parameters describe the lower southwest
--   corner:
--   
--   <ul>
--   <li>The first <tt>bbox</tt> position is the X coordinate or longitude
--   of the lower southwest corner.</li>
--   <li>The second <tt>bbox</tt> position is the Y coordinate or latitude
--   of the lower southwest corner.</li>
--   </ul>
--   
--   The next 2 <tt>bbox</tt> parameters describe the upper northeast
--   corner:
--   
--   <ul>
--   <li>The third <tt>bbox</tt> position is the X coordinate, or longitude
--   of the upper northeast corner.</li>
--   <li>The fourth <tt>bbox</tt> position is the Y coordinate, or latitude
--   of the upper northeast corner.</li>
--   </ul>
calculateRouteSummary_routeBBox :: Lens' CalculateRouteSummary (NonEmpty Double)

-- | Contains details about additional route preferences for requests that
--   specify <tt>TravelMode</tt> as <tt>Truck</tt>.
--   
--   <i>See:</i> <a>newCalculateRouteTruckModeOptions</a> smart
--   constructor.
data CalculateRouteTruckModeOptions
CalculateRouteTruckModeOptions' :: Maybe TruckWeight -> Maybe Bool -> Maybe TruckDimensions -> Maybe Bool -> CalculateRouteTruckModeOptions

-- | Specifies the truck's weight specifications including total weight and
--   unit of measurement. Used to avoid roads that can't support the
--   truck's weight.
[$sel:weight:CalculateRouteTruckModeOptions'] :: CalculateRouteTruckModeOptions -> Maybe TruckWeight

-- | Avoids ferries when calculating routes.
--   
--   Default Value: <tt>false</tt>
--   
--   Valid Values: <tt>false</tt> | <tt>true</tt>
[$sel:avoidTolls:CalculateRouteTruckModeOptions'] :: CalculateRouteTruckModeOptions -> Maybe Bool

-- | Specifies the truck's dimension specifications including length,
--   height, width, and unit of measurement. Used to avoid roads that can't
--   support the truck's dimensions.
[$sel:dimensions:CalculateRouteTruckModeOptions'] :: CalculateRouteTruckModeOptions -> Maybe TruckDimensions

-- | Avoids ferries when calculating routes.
--   
--   Default Value: <tt>false</tt>
--   
--   Valid Values: <tt>false</tt> | <tt>true</tt>
[$sel:avoidFerries:CalculateRouteTruckModeOptions'] :: CalculateRouteTruckModeOptions -> Maybe Bool

-- | Create a value of <a>CalculateRouteTruckModeOptions</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:weight:CalculateRouteTruckModeOptions'</a>,
--   <a>calculateRouteTruckModeOptions_weight</a> - Specifies the truck's
--   weight specifications including total weight and unit of measurement.
--   Used to avoid roads that can't support the truck's weight.
--   
--   <a>$sel:avoidTolls:CalculateRouteTruckModeOptions'</a>,
--   <a>calculateRouteTruckModeOptions_avoidTolls</a> - Avoids ferries when
--   calculating routes.
--   
--   Default Value: <tt>false</tt>
--   
--   Valid Values: <tt>false</tt> | <tt>true</tt>
--   
--   <a>$sel:dimensions:CalculateRouteTruckModeOptions'</a>,
--   <a>calculateRouteTruckModeOptions_dimensions</a> - Specifies the
--   truck's dimension specifications including length, height, width, and
--   unit of measurement. Used to avoid roads that can't support the
--   truck's dimensions.
--   
--   <a>$sel:avoidFerries:CalculateRouteTruckModeOptions'</a>,
--   <a>calculateRouteTruckModeOptions_avoidFerries</a> - Avoids ferries
--   when calculating routes.
--   
--   Default Value: <tt>false</tt>
--   
--   Valid Values: <tt>false</tt> | <tt>true</tt>
newCalculateRouteTruckModeOptions :: CalculateRouteTruckModeOptions

-- | Specifies the truck's weight specifications including total weight and
--   unit of measurement. Used to avoid roads that can't support the
--   truck's weight.
calculateRouteTruckModeOptions_weight :: Lens' CalculateRouteTruckModeOptions (Maybe TruckWeight)

-- | Avoids ferries when calculating routes.
--   
--   Default Value: <tt>false</tt>
--   
--   Valid Values: <tt>false</tt> | <tt>true</tt>
calculateRouteTruckModeOptions_avoidTolls :: Lens' CalculateRouteTruckModeOptions (Maybe Bool)

-- | Specifies the truck's dimension specifications including length,
--   height, width, and unit of measurement. Used to avoid roads that can't
--   support the truck's dimensions.
calculateRouteTruckModeOptions_dimensions :: Lens' CalculateRouteTruckModeOptions (Maybe TruckDimensions)

-- | Avoids ferries when calculating routes.
--   
--   Default Value: <tt>false</tt>
--   
--   Valid Values: <tt>false</tt> | <tt>true</tt>
calculateRouteTruckModeOptions_avoidFerries :: Lens' CalculateRouteTruckModeOptions (Maybe Bool)

-- | Specifies the data storage option chosen for requesting Places.
--   
--   When using Amazon Location Places:
--   
--   <ul>
--   <li>If using HERE Technologies as a data provider, you can't store
--   results for locations in Japan by setting <tt>IntendedUse</tt> to
--   <tt>Storage</tt>. parameter.</li>
--   <li>Under the <tt>MobileAssetTracking</tt> or
--   <tt>MobilAssetManagement</tt> pricing plan, you can't store results
--   from your place index resources by setting <tt>IntendedUse</tt> to
--   <tt>Storage</tt>. This returns a validation exception error.</li>
--   </ul>
--   
--   For more information, see the <a>AWS Service Terms</a> for Amazon
--   Location Service.
--   
--   <i>See:</i> <a>newDataSourceConfiguration</a> smart constructor.
data DataSourceConfiguration
DataSourceConfiguration' :: Maybe IntendedUse -> DataSourceConfiguration

-- | Specifies how the results of an operation will be stored by the
--   caller.
--   
--   Valid values include:
--   
--   <ul>
--   <li><tt>SingleUse</tt> specifies that the results won't be
--   stored.</li>
--   <li><tt>Storage</tt> specifies that the result can be cached or stored
--   in a database.</li>
--   </ul>
--   
--   Default value: <tt>SingleUse</tt>
[$sel:intendedUse:DataSourceConfiguration'] :: DataSourceConfiguration -> Maybe IntendedUse

-- | Create a value of <a>DataSourceConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:intendedUse:DataSourceConfiguration'</a>,
--   <a>dataSourceConfiguration_intendedUse</a> - Specifies how the results
--   of an operation will be stored by the caller.
--   
--   Valid values include:
--   
--   <ul>
--   <li><tt>SingleUse</tt> specifies that the results won't be
--   stored.</li>
--   <li><tt>Storage</tt> specifies that the result can be cached or stored
--   in a database.</li>
--   </ul>
--   
--   Default value: <tt>SingleUse</tt>
newDataSourceConfiguration :: DataSourceConfiguration

-- | Specifies how the results of an operation will be stored by the
--   caller.
--   
--   Valid values include:
--   
--   <ul>
--   <li><tt>SingleUse</tt> specifies that the results won't be
--   stored.</li>
--   <li><tt>Storage</tt> specifies that the result can be cached or stored
--   in a database.</li>
--   </ul>
--   
--   Default value: <tt>SingleUse</tt>
dataSourceConfiguration_intendedUse :: Lens' DataSourceConfiguration (Maybe IntendedUse)

-- | Contains the device position details.
--   
--   <i>See:</i> <a>newDevicePosition</a> smart constructor.
data DevicePosition
DevicePosition' :: Maybe Text -> Sensitive (NonEmpty Double) -> POSIX -> POSIX -> DevicePosition

-- | The device whose position you retrieved.
[$sel:deviceId:DevicePosition'] :: DevicePosition -> Maybe Text

-- | The last known device position.
[$sel:position:DevicePosition'] :: DevicePosition -> Sensitive (NonEmpty Double)

-- | The timestamp for when the tracker resource received the device
--   position in <a>ISO 8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
[$sel:receivedTime:DevicePosition'] :: DevicePosition -> POSIX

-- | The timestamp at which the device's position was determined. Uses
--   <a>ISO 8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
[$sel:sampleTime:DevicePosition'] :: DevicePosition -> POSIX

-- | Create a value of <a>DevicePosition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceId:DevicePosition'</a>, <a>devicePosition_deviceId</a> -
--   The device whose position you retrieved.
--   
--   <a>$sel:position:DevicePosition'</a>, <a>devicePosition_position</a> -
--   The last known device position.
--   
--   <a>$sel:receivedTime:DevicePosition'</a>,
--   <a>devicePosition_receivedTime</a> - The timestamp for when the
--   tracker resource received the device position in <a>ISO 8601</a>
--   format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
--   
--   <a>$sel:sampleTime:DevicePosition'</a>,
--   <a>devicePosition_sampleTime</a> - The timestamp at which the device's
--   position was determined. Uses <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
newDevicePosition :: NonEmpty Double -> UTCTime -> UTCTime -> DevicePosition

-- | The device whose position you retrieved.
devicePosition_deviceId :: Lens' DevicePosition (Maybe Text)

-- | The last known device position.
devicePosition_position :: Lens' DevicePosition (NonEmpty Double)

-- | The timestamp for when the tracker resource received the device
--   position in <a>ISO 8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
devicePosition_receivedTime :: Lens' DevicePosition UTCTime

-- | The timestamp at which the device's position was determined. Uses
--   <a>ISO 8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
devicePosition_sampleTime :: Lens' DevicePosition UTCTime

-- | Contains the position update details for a device.
--   
--   <i>See:</i> <a>newDevicePositionUpdate</a> smart constructor.
data DevicePositionUpdate
DevicePositionUpdate' :: Text -> Sensitive (NonEmpty Double) -> POSIX -> DevicePositionUpdate

-- | The device associated to the position update.
[$sel:deviceId:DevicePositionUpdate'] :: DevicePositionUpdate -> Text

-- | The latest device position defined in <a>WGS 84</a> format: <tt>[X or
--   longitude, Y or latitude]</tt>.
[$sel:position:DevicePositionUpdate'] :: DevicePositionUpdate -> Sensitive (NonEmpty Double)

-- | The timestamp at which the device's position was determined. Uses
--   <a>ISO 8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
[$sel:sampleTime:DevicePositionUpdate'] :: DevicePositionUpdate -> POSIX

-- | Create a value of <a>DevicePositionUpdate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceId:DevicePositionUpdate'</a>,
--   <a>devicePositionUpdate_deviceId</a> - The device associated to the
--   position update.
--   
--   <a>$sel:position:DevicePositionUpdate'</a>,
--   <a>devicePositionUpdate_position</a> - The latest device position
--   defined in <a>WGS 84</a> format: <tt>[X or longitude, Y or
--   latitude]</tt>.
--   
--   <a>$sel:sampleTime:DevicePositionUpdate'</a>,
--   <a>devicePositionUpdate_sampleTime</a> - The timestamp at which the
--   device's position was determined. Uses <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
newDevicePositionUpdate :: Text -> NonEmpty Double -> UTCTime -> DevicePositionUpdate

-- | The device associated to the position update.
devicePositionUpdate_deviceId :: Lens' DevicePositionUpdate Text

-- | The latest device position defined in <a>WGS 84</a> format: <tt>[X or
--   longitude, Y or latitude]</tt>.
devicePositionUpdate_position :: Lens' DevicePositionUpdate (NonEmpty Double)

-- | The timestamp at which the device's position was determined. Uses
--   <a>ISO 8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
devicePositionUpdate_sampleTime :: Lens' DevicePositionUpdate UTCTime

-- | Contains the geofence geometry details.
--   
--   Amazon Location doesn't currently support polygons with holes,
--   multipolygons, polygons that are wound clockwise, or that cross the
--   antimeridian.
--   
--   <i>See:</i> <a>newGeofenceGeometry</a> smart constructor.
data GeofenceGeometry
GeofenceGeometry' :: Maybe (NonEmpty (NonEmpty (Sensitive (NonEmpty Double)))) -> GeofenceGeometry

-- | An array of 1 or more linear rings. A linear ring is an array of 4 or
--   more vertices, where the first and last vertex are the same to form a
--   closed boundary. Each vertex is a 2-dimensional point of the form:
--   <tt>[longitude, latitude]</tt>.
--   
--   The first linear ring is an outer ring, describing the polygon's
--   boundary. Subsequent linear rings may be inner or outer rings to
--   describe holes and islands. Outer rings must list their vertices in
--   counter-clockwise order around the ring's center, where the left side
--   is the polygon's exterior. Inner rings must list their vertices in
--   clockwise order, where the left side is the polygon's interior.
[$sel:polygon:GeofenceGeometry'] :: GeofenceGeometry -> Maybe (NonEmpty (NonEmpty (Sensitive (NonEmpty Double))))

-- | Create a value of <a>GeofenceGeometry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:polygon:GeofenceGeometry'</a>, <a>geofenceGeometry_polygon</a>
--   - An array of 1 or more linear rings. A linear ring is an array of 4
--   or more vertices, where the first and last vertex are the same to form
--   a closed boundary. Each vertex is a 2-dimensional point of the form:
--   <tt>[longitude, latitude]</tt>.
--   
--   The first linear ring is an outer ring, describing the polygon's
--   boundary. Subsequent linear rings may be inner or outer rings to
--   describe holes and islands. Outer rings must list their vertices in
--   counter-clockwise order around the ring's center, where the left side
--   is the polygon's exterior. Inner rings must list their vertices in
--   clockwise order, where the left side is the polygon's interior.
newGeofenceGeometry :: GeofenceGeometry

-- | An array of 1 or more linear rings. A linear ring is an array of 4 or
--   more vertices, where the first and last vertex are the same to form a
--   closed boundary. Each vertex is a 2-dimensional point of the form:
--   <tt>[longitude, latitude]</tt>.
--   
--   The first linear ring is an outer ring, describing the polygon's
--   boundary. Subsequent linear rings may be inner or outer rings to
--   describe holes and islands. Outer rings must list their vertices in
--   counter-clockwise order around the ring's center, where the left side
--   is the polygon's exterior. Inner rings must list their vertices in
--   clockwise order, where the left side is the polygon's interior.
geofenceGeometry_polygon :: Lens' GeofenceGeometry (Maybe (NonEmpty (NonEmpty (NonEmpty Double))))

-- | Contains the calculated route's details for each path between a pair
--   of positions. The number of legs returned corresponds to one fewer
--   than the total number of positions in the request.
--   
--   For example, a route with a departure position and destination
--   position returns one leg with the positions <a>snapped to a nearby
--   road</a>:
--   
--   <ul>
--   <li>The <tt>StartPosition</tt> is the departure position.</li>
--   <li>The <tt>EndPosition</tt> is the destination position.</li>
--   </ul>
--   
--   A route with a waypoint between the departure and destination position
--   returns two legs with the positions snapped to a nearby road:
--   
--   <ul>
--   <li>Leg 1: The <tt>StartPosition</tt> is the departure position . The
--   <tt>EndPosition</tt> is the waypoint positon.</li>
--   <li>Leg 2: The <tt>StartPosition</tt> is the waypoint position. The
--   <tt>EndPosition</tt> is the destination position.</li>
--   </ul>
--   
--   <i>See:</i> <a>newLeg</a> smart constructor.
data Leg
Leg' :: Maybe LegGeometry -> Double -> Double -> Sensitive (NonEmpty Double) -> Sensitive (NonEmpty Double) -> [Step] -> Leg

-- | Contains the calculated route's path as a linestring geometry.
[$sel:geometry:Leg'] :: Leg -> Maybe LegGeometry

-- | The distance between the leg's <tt>StartPosition</tt> and
--   <tt>EndPosition</tt> along a calculated route.
--   
--   <ul>
--   <li>The default measurement is <tt>Kilometers</tt> unless the request
--   specifies a <tt>DistanceUnit</tt> of <tt>Miles</tt>.</li>
--   </ul>
[$sel:distance:Leg'] :: Leg -> Double

-- | The estimated travel time between the leg's <tt>StartPosition</tt> and
--   <tt>EndPosition</tt>. The travel mode and departure time that you
--   specify in the request determines the calculated time.
[$sel:durationSeconds:Leg'] :: Leg -> Double

-- | The terminating position of the leg. Follows the format
--   <tt>[longitude,latitude]</tt>.
--   
--   If the <tt>EndPosition</tt> isn't located on a road, it's <a>snapped
--   to a nearby road</a>.
[$sel:endPosition:Leg'] :: Leg -> Sensitive (NonEmpty Double)

-- | The starting position of the leg. Follows the format
--   <tt>[longitude,latitude]</tt>.
--   
--   If the <tt>StartPosition</tt> isn't located on a road, it's <a>snapped
--   to a nearby road</a>.
[$sel:startPosition:Leg'] :: Leg -> Sensitive (NonEmpty Double)

-- | Contains a list of steps, which represent subsections of a leg. Each
--   step provides instructions for how to move to the next step in the leg
--   such as the step's start position, end position, travel distance,
--   travel duration, and geometry offset.
[$sel:steps:Leg'] :: Leg -> [Step]

-- | Create a value of <a>Leg</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:geometry:Leg'</a>, <a>leg_geometry</a> - Contains the
--   calculated route's path as a linestring geometry.
--   
--   <a>$sel:distance:Leg'</a>, <a>leg_distance</a> - The distance between
--   the leg's <tt>StartPosition</tt> and <tt>EndPosition</tt> along a
--   calculated route.
--   
--   <ul>
--   <li>The default measurement is <tt>Kilometers</tt> unless the request
--   specifies a <tt>DistanceUnit</tt> of <tt>Miles</tt>.</li>
--   </ul>
--   
--   <a>$sel:durationSeconds:Leg'</a>, <a>leg_durationSeconds</a> - The
--   estimated travel time between the leg's <tt>StartPosition</tt> and
--   <tt>EndPosition</tt>. The travel mode and departure time that you
--   specify in the request determines the calculated time.
--   
--   <a>$sel:endPosition:Leg'</a>, <a>leg_endPosition</a> - The terminating
--   position of the leg. Follows the format <tt>[longitude,latitude]</tt>.
--   
--   If the <tt>EndPosition</tt> isn't located on a road, it's <a>snapped
--   to a nearby road</a>.
--   
--   <a>$sel:startPosition:Leg'</a>, <a>leg_startPosition</a> - The
--   starting position of the leg. Follows the format
--   <tt>[longitude,latitude]</tt>.
--   
--   If the <tt>StartPosition</tt> isn't located on a road, it's <a>snapped
--   to a nearby road</a>.
--   
--   <a>$sel:steps:Leg'</a>, <a>leg_steps</a> - Contains a list of steps,
--   which represent subsections of a leg. Each step provides instructions
--   for how to move to the next step in the leg such as the step's start
--   position, end position, travel distance, travel duration, and geometry
--   offset.
newLeg :: Double -> Double -> NonEmpty Double -> NonEmpty Double -> Leg

-- | Contains the calculated route's path as a linestring geometry.
leg_geometry :: Lens' Leg (Maybe LegGeometry)

-- | The distance between the leg's <tt>StartPosition</tt> and
--   <tt>EndPosition</tt> along a calculated route.
--   
--   <ul>
--   <li>The default measurement is <tt>Kilometers</tt> unless the request
--   specifies a <tt>DistanceUnit</tt> of <tt>Miles</tt>.</li>
--   </ul>
leg_distance :: Lens' Leg Double

-- | The estimated travel time between the leg's <tt>StartPosition</tt> and
--   <tt>EndPosition</tt>. The travel mode and departure time that you
--   specify in the request determines the calculated time.
leg_durationSeconds :: Lens' Leg Double

-- | The terminating position of the leg. Follows the format
--   <tt>[longitude,latitude]</tt>.
--   
--   If the <tt>EndPosition</tt> isn't located on a road, it's <a>snapped
--   to a nearby road</a>.
leg_endPosition :: Lens' Leg (NonEmpty Double)

-- | The starting position of the leg. Follows the format
--   <tt>[longitude,latitude]</tt>.
--   
--   If the <tt>StartPosition</tt> isn't located on a road, it's <a>snapped
--   to a nearby road</a>.
leg_startPosition :: Lens' Leg (NonEmpty Double)

-- | Contains a list of steps, which represent subsections of a leg. Each
--   step provides instructions for how to move to the next step in the leg
--   such as the step's start position, end position, travel distance,
--   travel duration, and geometry offset.
leg_steps :: Lens' Leg [Step]

-- | Contains the geometry details for each path between a pair of
--   positions. Used in plotting a route leg on a map.
--   
--   <i>See:</i> <a>newLegGeometry</a> smart constructor.
data LegGeometry
LegGeometry' :: Maybe (NonEmpty (Sensitive (NonEmpty Double))) -> LegGeometry

-- | An ordered list of positions used to plot a route on a map.
--   
--   The first position is closest to the start position for the leg, and
--   the last position is the closest to the end position for the leg.
--   
--   <ul>
--   <li>For example, <tt>[[-123.117, 49.284],[-123.115, 49.285],[-123.115,
--   49.285]]</tt></li>
--   </ul>
[$sel:lineString:LegGeometry'] :: LegGeometry -> Maybe (NonEmpty (Sensitive (NonEmpty Double)))

-- | Create a value of <a>LegGeometry</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lineString:LegGeometry'</a>, <a>legGeometry_lineString</a> -
--   An ordered list of positions used to plot a route on a map.
--   
--   The first position is closest to the start position for the leg, and
--   the last position is the closest to the end position for the leg.
--   
--   <ul>
--   <li>For example, <tt>[[-123.117, 49.284],[-123.115, 49.285],[-123.115,
--   49.285]]</tt></li>
--   </ul>
newLegGeometry :: LegGeometry

-- | An ordered list of positions used to plot a route on a map.
--   
--   The first position is closest to the start position for the leg, and
--   the last position is the closest to the end position for the leg.
--   
--   <ul>
--   <li>For example, <tt>[[-123.117, 49.284],[-123.115, 49.285],[-123.115,
--   49.285]]</tt></li>
--   </ul>
legGeometry_lineString :: Lens' LegGeometry (Maybe (NonEmpty (NonEmpty Double)))

-- | Contains the tracker resource details.
--   
--   <i>See:</i> <a>newListDevicePositionsResponseEntry</a> smart
--   constructor.
data ListDevicePositionsResponseEntry
ListDevicePositionsResponseEntry' :: Text -> Sensitive (NonEmpty Double) -> POSIX -> ListDevicePositionsResponseEntry

-- | The ID of the device for this position.
[$sel:deviceId:ListDevicePositionsResponseEntry'] :: ListDevicePositionsResponseEntry -> Text

-- | The last known device position. Empty if no positions currently
--   stored.
[$sel:position:ListDevicePositionsResponseEntry'] :: ListDevicePositionsResponseEntry -> Sensitive (NonEmpty Double)

-- | The timestamp at which the device position was determined. Uses <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
[$sel:sampleTime:ListDevicePositionsResponseEntry'] :: ListDevicePositionsResponseEntry -> POSIX

-- | Create a value of <a>ListDevicePositionsResponseEntry</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceId:ListDevicePositionsResponseEntry'</a>,
--   <a>listDevicePositionsResponseEntry_deviceId</a> - The ID of the
--   device for this position.
--   
--   <a>$sel:position:ListDevicePositionsResponseEntry'</a>,
--   <a>listDevicePositionsResponseEntry_position</a> - The last known
--   device position. Empty if no positions currently stored.
--   
--   <a>$sel:sampleTime:ListDevicePositionsResponseEntry'</a>,
--   <a>listDevicePositionsResponseEntry_sampleTime</a> - The timestamp at
--   which the device position was determined. Uses <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
newListDevicePositionsResponseEntry :: Text -> NonEmpty Double -> UTCTime -> ListDevicePositionsResponseEntry

-- | The ID of the device for this position.
listDevicePositionsResponseEntry_deviceId :: Lens' ListDevicePositionsResponseEntry Text

-- | The last known device position. Empty if no positions currently
--   stored.
listDevicePositionsResponseEntry_position :: Lens' ListDevicePositionsResponseEntry (NonEmpty Double)

-- | The timestamp at which the device position was determined. Uses <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
listDevicePositionsResponseEntry_sampleTime :: Lens' ListDevicePositionsResponseEntry UTCTime

-- | Contains the geofence collection details.
--   
--   <i>See:</i> <a>newListGeofenceCollectionsResponseEntry</a> smart
--   constructor.
data ListGeofenceCollectionsResponseEntry
ListGeofenceCollectionsResponseEntry' :: Maybe Text -> Text -> POSIX -> Text -> PricingPlan -> POSIX -> ListGeofenceCollectionsResponseEntry

-- | The specified data provider for the geofence collection.
[$sel:pricingPlanDataSource:ListGeofenceCollectionsResponseEntry'] :: ListGeofenceCollectionsResponseEntry -> Maybe Text

-- | The name of the geofence collection.
[$sel:collectionName:ListGeofenceCollectionsResponseEntry'] :: ListGeofenceCollectionsResponseEntry -> Text

-- | The timestamp for when the geofence collection was created in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
[$sel:createTime:ListGeofenceCollectionsResponseEntry'] :: ListGeofenceCollectionsResponseEntry -> POSIX

-- | The description for the geofence collection
[$sel:description:ListGeofenceCollectionsResponseEntry'] :: ListGeofenceCollectionsResponseEntry -> Text

-- | The pricing plan for the specified geofence collection.
--   
--   For additional details and restrictions on each pricing plan option,
--   see the <a>Amazon Location Service pricing page</a>.
[$sel:pricingPlan:ListGeofenceCollectionsResponseEntry'] :: ListGeofenceCollectionsResponseEntry -> PricingPlan

-- | Specifies a timestamp for when the resource was last updated in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
[$sel:updateTime:ListGeofenceCollectionsResponseEntry'] :: ListGeofenceCollectionsResponseEntry -> POSIX

-- | Create a value of <a>ListGeofenceCollectionsResponseEntry</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:pricingPlanDataSource:ListGeofenceCollectionsResponseEntry'</a>,
--   <a>listGeofenceCollectionsResponseEntry_pricingPlanDataSource</a> -
--   The specified data provider for the geofence collection.
--   
--   <a>$sel:collectionName:ListGeofenceCollectionsResponseEntry'</a>,
--   <a>listGeofenceCollectionsResponseEntry_collectionName</a> - The name
--   of the geofence collection.
--   
--   <a>$sel:createTime:ListGeofenceCollectionsResponseEntry'</a>,
--   <a>listGeofenceCollectionsResponseEntry_createTime</a> - The timestamp
--   for when the geofence collection was created in <a>ISO 8601</a>
--   format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
--   
--   <a>$sel:description:ListGeofenceCollectionsResponseEntry'</a>,
--   <a>listGeofenceCollectionsResponseEntry_description</a> - The
--   description for the geofence collection
--   
--   <a>$sel:pricingPlan:ListGeofenceCollectionsResponseEntry'</a>,
--   <a>listGeofenceCollectionsResponseEntry_pricingPlan</a> - The pricing
--   plan for the specified geofence collection.
--   
--   For additional details and restrictions on each pricing plan option,
--   see the <a>Amazon Location Service pricing page</a>.
--   
--   <a>$sel:updateTime:ListGeofenceCollectionsResponseEntry'</a>,
--   <a>listGeofenceCollectionsResponseEntry_updateTime</a> - Specifies a
--   timestamp for when the resource was last updated in <a>ISO 8601</a>
--   format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
newListGeofenceCollectionsResponseEntry :: Text -> UTCTime -> Text -> PricingPlan -> UTCTime -> ListGeofenceCollectionsResponseEntry

-- | The specified data provider for the geofence collection.
listGeofenceCollectionsResponseEntry_pricingPlanDataSource :: Lens' ListGeofenceCollectionsResponseEntry (Maybe Text)

-- | The name of the geofence collection.
listGeofenceCollectionsResponseEntry_collectionName :: Lens' ListGeofenceCollectionsResponseEntry Text

-- | The timestamp for when the geofence collection was created in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
listGeofenceCollectionsResponseEntry_createTime :: Lens' ListGeofenceCollectionsResponseEntry UTCTime

-- | The description for the geofence collection
listGeofenceCollectionsResponseEntry_description :: Lens' ListGeofenceCollectionsResponseEntry Text

-- | The pricing plan for the specified geofence collection.
--   
--   For additional details and restrictions on each pricing plan option,
--   see the <a>Amazon Location Service pricing page</a>.
listGeofenceCollectionsResponseEntry_pricingPlan :: Lens' ListGeofenceCollectionsResponseEntry PricingPlan

-- | Specifies a timestamp for when the resource was last updated in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
listGeofenceCollectionsResponseEntry_updateTime :: Lens' ListGeofenceCollectionsResponseEntry UTCTime

-- | Contains a list of geofences stored in a given geofence collection.
--   
--   <i>See:</i> <a>newListGeofenceResponseEntry</a> smart constructor.
data ListGeofenceResponseEntry
ListGeofenceResponseEntry' :: POSIX -> Text -> GeofenceGeometry -> Text -> POSIX -> ListGeofenceResponseEntry

-- | The timestamp for when the geofence was stored in a geofence
--   collection in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
[$sel:createTime:ListGeofenceResponseEntry'] :: ListGeofenceResponseEntry -> POSIX

-- | The geofence identifier.
[$sel:geofenceId:ListGeofenceResponseEntry'] :: ListGeofenceResponseEntry -> Text

-- | Contains the geofence geometry details describing a polygon.
[$sel:geometry:ListGeofenceResponseEntry'] :: ListGeofenceResponseEntry -> GeofenceGeometry

-- | Identifies the state of the geofence. A geofence will hold one of the
--   following states:
--   
--   <ul>
--   <li><tt>ACTIVE</tt> — The geofence has been indexed by the
--   system.</li>
--   <li><tt>PENDING</tt> — The geofence is being processed by the
--   system.</li>
--   <li><tt>FAILED</tt> — The geofence failed to be indexed by the
--   system.</li>
--   <li><tt>DELETED</tt> — The geofence has been deleted from the system
--   index.</li>
--   <li><tt>DELETING</tt> — The geofence is being deleted from the system
--   index.</li>
--   </ul>
[$sel:status:ListGeofenceResponseEntry'] :: ListGeofenceResponseEntry -> Text

-- | The timestamp for when the geofence was last updated in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
[$sel:updateTime:ListGeofenceResponseEntry'] :: ListGeofenceResponseEntry -> POSIX

-- | Create a value of <a>ListGeofenceResponseEntry</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createTime:ListGeofenceResponseEntry'</a>,
--   <a>listGeofenceResponseEntry_createTime</a> - The timestamp for when
--   the geofence was stored in a geofence collection in <a>ISO 8601</a>
--   format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
--   
--   <a>$sel:geofenceId:ListGeofenceResponseEntry'</a>,
--   <a>listGeofenceResponseEntry_geofenceId</a> - The geofence identifier.
--   
--   <a>$sel:geometry:ListGeofenceResponseEntry'</a>,
--   <a>listGeofenceResponseEntry_geometry</a> - Contains the geofence
--   geometry details describing a polygon.
--   
--   <a>$sel:status:ListGeofenceResponseEntry'</a>,
--   <a>listGeofenceResponseEntry_status</a> - Identifies the state of the
--   geofence. A geofence will hold one of the following states:
--   
--   <ul>
--   <li><tt>ACTIVE</tt> — The geofence has been indexed by the
--   system.</li>
--   <li><tt>PENDING</tt> — The geofence is being processed by the
--   system.</li>
--   <li><tt>FAILED</tt> — The geofence failed to be indexed by the
--   system.</li>
--   <li><tt>DELETED</tt> — The geofence has been deleted from the system
--   index.</li>
--   <li><tt>DELETING</tt> — The geofence is being deleted from the system
--   index.</li>
--   </ul>
--   
--   <a>$sel:updateTime:ListGeofenceResponseEntry'</a>,
--   <a>listGeofenceResponseEntry_updateTime</a> - The timestamp for when
--   the geofence was last updated in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
newListGeofenceResponseEntry :: UTCTime -> Text -> GeofenceGeometry -> Text -> UTCTime -> ListGeofenceResponseEntry

-- | The timestamp for when the geofence was stored in a geofence
--   collection in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
listGeofenceResponseEntry_createTime :: Lens' ListGeofenceResponseEntry UTCTime

-- | The geofence identifier.
listGeofenceResponseEntry_geofenceId :: Lens' ListGeofenceResponseEntry Text

-- | Contains the geofence geometry details describing a polygon.
listGeofenceResponseEntry_geometry :: Lens' ListGeofenceResponseEntry GeofenceGeometry

-- | Identifies the state of the geofence. A geofence will hold one of the
--   following states:
--   
--   <ul>
--   <li><tt>ACTIVE</tt> — The geofence has been indexed by the
--   system.</li>
--   <li><tt>PENDING</tt> — The geofence is being processed by the
--   system.</li>
--   <li><tt>FAILED</tt> — The geofence failed to be indexed by the
--   system.</li>
--   <li><tt>DELETED</tt> — The geofence has been deleted from the system
--   index.</li>
--   <li><tt>DELETING</tt> — The geofence is being deleted from the system
--   index.</li>
--   </ul>
listGeofenceResponseEntry_status :: Lens' ListGeofenceResponseEntry Text

-- | The timestamp for when the geofence was last updated in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
listGeofenceResponseEntry_updateTime :: Lens' ListGeofenceResponseEntry UTCTime

-- | Contains details of an existing map resource in your AWS account.
--   
--   <i>See:</i> <a>newListMapsResponseEntry</a> smart constructor.
data ListMapsResponseEntry
ListMapsResponseEntry' :: POSIX -> Text -> Text -> Text -> PricingPlan -> POSIX -> ListMapsResponseEntry

-- | The timestamp for when the map resource was created in <a>ISO 8601</a>
--   format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
[$sel:createTime:ListMapsResponseEntry'] :: ListMapsResponseEntry -> POSIX

-- | Specifies the data provider for the associated map tiles.
[$sel:dataSource:ListMapsResponseEntry'] :: ListMapsResponseEntry -> Text

-- | The description for the map resource.
[$sel:description:ListMapsResponseEntry'] :: ListMapsResponseEntry -> Text

-- | The name of the associated map resource.
[$sel:mapName:ListMapsResponseEntry'] :: ListMapsResponseEntry -> Text

-- | The pricing plan for the specified map resource.
--   
--   For additional details and restrictions on each pricing plan option,
--   see <a>Amazon Location Service pricing</a>.
[$sel:pricingPlan:ListMapsResponseEntry'] :: ListMapsResponseEntry -> PricingPlan

-- | The timestamp for when the map resource was last updated in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
[$sel:updateTime:ListMapsResponseEntry'] :: ListMapsResponseEntry -> POSIX

-- | Create a value of <a>ListMapsResponseEntry</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createTime:ListMapsResponseEntry'</a>,
--   <a>listMapsResponseEntry_createTime</a> - The timestamp for when the
--   map resource was created in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
--   
--   <a>$sel:dataSource:ListMapsResponseEntry'</a>,
--   <a>listMapsResponseEntry_dataSource</a> - Specifies the data provider
--   for the associated map tiles.
--   
--   <a>$sel:description:ListMapsResponseEntry'</a>,
--   <a>listMapsResponseEntry_description</a> - The description for the map
--   resource.
--   
--   <a>$sel:mapName:ListMapsResponseEntry'</a>,
--   <a>listMapsResponseEntry_mapName</a> - The name of the associated map
--   resource.
--   
--   <a>$sel:pricingPlan:ListMapsResponseEntry'</a>,
--   <a>listMapsResponseEntry_pricingPlan</a> - The pricing plan for the
--   specified map resource.
--   
--   For additional details and restrictions on each pricing plan option,
--   see <a>Amazon Location Service pricing</a>.
--   
--   <a>$sel:updateTime:ListMapsResponseEntry'</a>,
--   <a>listMapsResponseEntry_updateTime</a> - The timestamp for when the
--   map resource was last updated in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
newListMapsResponseEntry :: UTCTime -> Text -> Text -> Text -> PricingPlan -> UTCTime -> ListMapsResponseEntry

-- | The timestamp for when the map resource was created in <a>ISO 8601</a>
--   format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
listMapsResponseEntry_createTime :: Lens' ListMapsResponseEntry UTCTime

-- | Specifies the data provider for the associated map tiles.
listMapsResponseEntry_dataSource :: Lens' ListMapsResponseEntry Text

-- | The description for the map resource.
listMapsResponseEntry_description :: Lens' ListMapsResponseEntry Text

-- | The name of the associated map resource.
listMapsResponseEntry_mapName :: Lens' ListMapsResponseEntry Text

-- | The pricing plan for the specified map resource.
--   
--   For additional details and restrictions on each pricing plan option,
--   see <a>Amazon Location Service pricing</a>.
listMapsResponseEntry_pricingPlan :: Lens' ListMapsResponseEntry PricingPlan

-- | The timestamp for when the map resource was last updated in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
listMapsResponseEntry_updateTime :: Lens' ListMapsResponseEntry UTCTime

-- | A place index resource listed in your AWS account.
--   
--   <i>See:</i> <a>newListPlaceIndexesResponseEntry</a> smart constructor.
data ListPlaceIndexesResponseEntry
ListPlaceIndexesResponseEntry' :: POSIX -> Text -> Text -> Text -> PricingPlan -> POSIX -> ListPlaceIndexesResponseEntry

-- | The timestamp for when the place index resource was created in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
[$sel:createTime:ListPlaceIndexesResponseEntry'] :: ListPlaceIndexesResponseEntry -> POSIX

-- | The data provider of geospatial data. Indicates one of the available
--   providers:
--   
--   <ul>
--   <li><pre>Esri</pre></li>
--   <li><pre>Here</pre></li>
--   </ul>
--   
--   For additional details on data providers, see <a>Amazon Location
--   Service data providers</a>.
[$sel:dataSource:ListPlaceIndexesResponseEntry'] :: ListPlaceIndexesResponseEntry -> Text

-- | The optional description for the place index resource.
[$sel:description:ListPlaceIndexesResponseEntry'] :: ListPlaceIndexesResponseEntry -> Text

-- | The name of the place index resource.
[$sel:indexName:ListPlaceIndexesResponseEntry'] :: ListPlaceIndexesResponseEntry -> Text

-- | The pricing plan for the specified place index resource.
--   
--   For additional details and restrictions on each pricing plan option,
--   see <a>Amazon Location Service pricing</a>.
[$sel:pricingPlan:ListPlaceIndexesResponseEntry'] :: ListPlaceIndexesResponseEntry -> PricingPlan

-- | The timestamp for when the place index resource was last updated in
--   <a>ISO 8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
[$sel:updateTime:ListPlaceIndexesResponseEntry'] :: ListPlaceIndexesResponseEntry -> POSIX

-- | Create a value of <a>ListPlaceIndexesResponseEntry</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createTime:ListPlaceIndexesResponseEntry'</a>,
--   <a>listPlaceIndexesResponseEntry_createTime</a> - The timestamp for
--   when the place index resource was created in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
--   
--   <a>$sel:dataSource:ListPlaceIndexesResponseEntry'</a>,
--   <a>listPlaceIndexesResponseEntry_dataSource</a> - The data provider of
--   geospatial data. Indicates one of the available providers:
--   
--   <ul>
--   <li><pre>Esri</pre></li>
--   <li><pre>Here</pre></li>
--   </ul>
--   
--   For additional details on data providers, see <a>Amazon Location
--   Service data providers</a>.
--   
--   <a>$sel:description:ListPlaceIndexesResponseEntry'</a>,
--   <a>listPlaceIndexesResponseEntry_description</a> - The optional
--   description for the place index resource.
--   
--   <a>$sel:indexName:ListPlaceIndexesResponseEntry'</a>,
--   <a>listPlaceIndexesResponseEntry_indexName</a> - The name of the place
--   index resource.
--   
--   <a>$sel:pricingPlan:ListPlaceIndexesResponseEntry'</a>,
--   <a>listPlaceIndexesResponseEntry_pricingPlan</a> - The pricing plan
--   for the specified place index resource.
--   
--   For additional details and restrictions on each pricing plan option,
--   see <a>Amazon Location Service pricing</a>.
--   
--   <a>$sel:updateTime:ListPlaceIndexesResponseEntry'</a>,
--   <a>listPlaceIndexesResponseEntry_updateTime</a> - The timestamp for
--   when the place index resource was last updated in <a>ISO 8601</a>
--   format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
newListPlaceIndexesResponseEntry :: UTCTime -> Text -> Text -> Text -> PricingPlan -> UTCTime -> ListPlaceIndexesResponseEntry

-- | The timestamp for when the place index resource was created in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
listPlaceIndexesResponseEntry_createTime :: Lens' ListPlaceIndexesResponseEntry UTCTime

-- | The data provider of geospatial data. Indicates one of the available
--   providers:
--   
--   <ul>
--   <li><pre>Esri</pre></li>
--   <li><pre>Here</pre></li>
--   </ul>
--   
--   For additional details on data providers, see <a>Amazon Location
--   Service data providers</a>.
listPlaceIndexesResponseEntry_dataSource :: Lens' ListPlaceIndexesResponseEntry Text

-- | The optional description for the place index resource.
listPlaceIndexesResponseEntry_description :: Lens' ListPlaceIndexesResponseEntry Text

-- | The name of the place index resource.
listPlaceIndexesResponseEntry_indexName :: Lens' ListPlaceIndexesResponseEntry Text

-- | The pricing plan for the specified place index resource.
--   
--   For additional details and restrictions on each pricing plan option,
--   see <a>Amazon Location Service pricing</a>.
listPlaceIndexesResponseEntry_pricingPlan :: Lens' ListPlaceIndexesResponseEntry PricingPlan

-- | The timestamp for when the place index resource was last updated in
--   <a>ISO 8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
listPlaceIndexesResponseEntry_updateTime :: Lens' ListPlaceIndexesResponseEntry UTCTime

-- | A route calculator resource listed in your AWS account.
--   
--   <i>See:</i> <a>newListRouteCalculatorsResponseEntry</a> smart
--   constructor.
data ListRouteCalculatorsResponseEntry
ListRouteCalculatorsResponseEntry' :: Text -> POSIX -> Text -> Text -> PricingPlan -> POSIX -> ListRouteCalculatorsResponseEntry

-- | The name of the route calculator resource.
[$sel:calculatorName:ListRouteCalculatorsResponseEntry'] :: ListRouteCalculatorsResponseEntry -> Text

-- | The timestamp when the route calculator resource was created in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
--   
--   <ul>
--   <li>For example, <tt>2020–07-2T12:15:20.000Z+01:00</tt></li>
--   </ul>
[$sel:createTime:ListRouteCalculatorsResponseEntry'] :: ListRouteCalculatorsResponseEntry -> POSIX

-- | The data provider of traffic and road network data. Indicates one of
--   the available providers:
--   
--   <ul>
--   <li><pre>Esri</pre></li>
--   <li><pre>Here</pre></li>
--   </ul>
--   
--   For more information about data providers, see <a>Amazon Location
--   Service data providers</a>.
[$sel:dataSource:ListRouteCalculatorsResponseEntry'] :: ListRouteCalculatorsResponseEntry -> Text

-- | The optional description of the route calculator resource.
[$sel:description:ListRouteCalculatorsResponseEntry'] :: ListRouteCalculatorsResponseEntry -> Text

-- | The pricing plan for the specified route calculator resource.
--   
--   For additional details and restrictions on each pricing plan option,
--   see <a>Amazon Location Service pricing</a>.
[$sel:pricingPlan:ListRouteCalculatorsResponseEntry'] :: ListRouteCalculatorsResponseEntry -> PricingPlan

-- | The timestamp when the route calculator resource was last updated in
--   <a>ISO 8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
--   
--   <ul>
--   <li>For example, <tt>2020–07-2T12:15:20.000Z+01:00</tt></li>
--   </ul>
[$sel:updateTime:ListRouteCalculatorsResponseEntry'] :: ListRouteCalculatorsResponseEntry -> POSIX

-- | Create a value of <a>ListRouteCalculatorsResponseEntry</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:calculatorName:ListRouteCalculatorsResponseEntry'</a>,
--   <a>listRouteCalculatorsResponseEntry_calculatorName</a> - The name of
--   the route calculator resource.
--   
--   <a>$sel:createTime:ListRouteCalculatorsResponseEntry'</a>,
--   <a>listRouteCalculatorsResponseEntry_createTime</a> - The timestamp
--   when the route calculator resource was created in <a>ISO 8601</a>
--   format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
--   
--   <ul>
--   <li>For example, <tt>2020–07-2T12:15:20.000Z+01:00</tt></li>
--   </ul>
--   
--   <a>$sel:dataSource:ListRouteCalculatorsResponseEntry'</a>,
--   <a>listRouteCalculatorsResponseEntry_dataSource</a> - The data
--   provider of traffic and road network data. Indicates one of the
--   available providers:
--   
--   <ul>
--   <li><pre>Esri</pre></li>
--   <li><pre>Here</pre></li>
--   </ul>
--   
--   For more information about data providers, see <a>Amazon Location
--   Service data providers</a>.
--   
--   <a>$sel:description:ListRouteCalculatorsResponseEntry'</a>,
--   <a>listRouteCalculatorsResponseEntry_description</a> - The optional
--   description of the route calculator resource.
--   
--   <a>$sel:pricingPlan:ListRouteCalculatorsResponseEntry'</a>,
--   <a>listRouteCalculatorsResponseEntry_pricingPlan</a> - The pricing
--   plan for the specified route calculator resource.
--   
--   For additional details and restrictions on each pricing plan option,
--   see <a>Amazon Location Service pricing</a>.
--   
--   <a>$sel:updateTime:ListRouteCalculatorsResponseEntry'</a>,
--   <a>listRouteCalculatorsResponseEntry_updateTime</a> - The timestamp
--   when the route calculator resource was last updated in <a>ISO 8601</a>
--   format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
--   
--   <ul>
--   <li>For example, <tt>2020–07-2T12:15:20.000Z+01:00</tt></li>
--   </ul>
newListRouteCalculatorsResponseEntry :: Text -> UTCTime -> Text -> Text -> PricingPlan -> UTCTime -> ListRouteCalculatorsResponseEntry

-- | The name of the route calculator resource.
listRouteCalculatorsResponseEntry_calculatorName :: Lens' ListRouteCalculatorsResponseEntry Text

-- | The timestamp when the route calculator resource was created in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
--   
--   <ul>
--   <li>For example, <tt>2020–07-2T12:15:20.000Z+01:00</tt></li>
--   </ul>
listRouteCalculatorsResponseEntry_createTime :: Lens' ListRouteCalculatorsResponseEntry UTCTime

-- | The data provider of traffic and road network data. Indicates one of
--   the available providers:
--   
--   <ul>
--   <li><pre>Esri</pre></li>
--   <li><pre>Here</pre></li>
--   </ul>
--   
--   For more information about data providers, see <a>Amazon Location
--   Service data providers</a>.
listRouteCalculatorsResponseEntry_dataSource :: Lens' ListRouteCalculatorsResponseEntry Text

-- | The optional description of the route calculator resource.
listRouteCalculatorsResponseEntry_description :: Lens' ListRouteCalculatorsResponseEntry Text

-- | The pricing plan for the specified route calculator resource.
--   
--   For additional details and restrictions on each pricing plan option,
--   see <a>Amazon Location Service pricing</a>.
listRouteCalculatorsResponseEntry_pricingPlan :: Lens' ListRouteCalculatorsResponseEntry PricingPlan

-- | The timestamp when the route calculator resource was last updated in
--   <a>ISO 8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
--   
--   <ul>
--   <li>For example, <tt>2020–07-2T12:15:20.000Z+01:00</tt></li>
--   </ul>
listRouteCalculatorsResponseEntry_updateTime :: Lens' ListRouteCalculatorsResponseEntry UTCTime

-- | Contains the tracker resource details.
--   
--   <i>See:</i> <a>newListTrackersResponseEntry</a> smart constructor.
data ListTrackersResponseEntry
ListTrackersResponseEntry' :: Maybe Text -> POSIX -> Text -> PricingPlan -> Text -> POSIX -> ListTrackersResponseEntry

-- | The specified data provider for the tracker resource.
[$sel:pricingPlanDataSource:ListTrackersResponseEntry'] :: ListTrackersResponseEntry -> Maybe Text

-- | The timestamp for when the tracker resource was created in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
[$sel:createTime:ListTrackersResponseEntry'] :: ListTrackersResponseEntry -> POSIX

-- | The description for the tracker resource.
[$sel:description:ListTrackersResponseEntry'] :: ListTrackersResponseEntry -> Text

-- | The pricing plan for the specified tracker resource.
--   
--   For additional details and restrictions on each pricing plan option,
--   see <a>Amazon Location Service pricing</a>.
[$sel:pricingPlan:ListTrackersResponseEntry'] :: ListTrackersResponseEntry -> PricingPlan

-- | The name of the tracker resource.
[$sel:trackerName:ListTrackersResponseEntry'] :: ListTrackersResponseEntry -> Text

-- | The timestamp at which the device's position was determined. Uses
--   <a>ISO 8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
[$sel:updateTime:ListTrackersResponseEntry'] :: ListTrackersResponseEntry -> POSIX

-- | Create a value of <a>ListTrackersResponseEntry</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pricingPlanDataSource:ListTrackersResponseEntry'</a>,
--   <a>listTrackersResponseEntry_pricingPlanDataSource</a> - The specified
--   data provider for the tracker resource.
--   
--   <a>$sel:createTime:ListTrackersResponseEntry'</a>,
--   <a>listTrackersResponseEntry_createTime</a> - The timestamp for when
--   the tracker resource was created in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
--   
--   <a>$sel:description:ListTrackersResponseEntry'</a>,
--   <a>listTrackersResponseEntry_description</a> - The description for the
--   tracker resource.
--   
--   <a>$sel:pricingPlan:ListTrackersResponseEntry'</a>,
--   <a>listTrackersResponseEntry_pricingPlan</a> - The pricing plan for
--   the specified tracker resource.
--   
--   For additional details and restrictions on each pricing plan option,
--   see <a>Amazon Location Service pricing</a>.
--   
--   <a>$sel:trackerName:ListTrackersResponseEntry'</a>,
--   <a>listTrackersResponseEntry_trackerName</a> - The name of the tracker
--   resource.
--   
--   <a>$sel:updateTime:ListTrackersResponseEntry'</a>,
--   <a>listTrackersResponseEntry_updateTime</a> - The timestamp at which
--   the device's position was determined. Uses <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
newListTrackersResponseEntry :: UTCTime -> Text -> PricingPlan -> Text -> UTCTime -> ListTrackersResponseEntry

-- | The specified data provider for the tracker resource.
listTrackersResponseEntry_pricingPlanDataSource :: Lens' ListTrackersResponseEntry (Maybe Text)

-- | The timestamp for when the tracker resource was created in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
listTrackersResponseEntry_createTime :: Lens' ListTrackersResponseEntry UTCTime

-- | The description for the tracker resource.
listTrackersResponseEntry_description :: Lens' ListTrackersResponseEntry Text

-- | The pricing plan for the specified tracker resource.
--   
--   For additional details and restrictions on each pricing plan option,
--   see <a>Amazon Location Service pricing</a>.
listTrackersResponseEntry_pricingPlan :: Lens' ListTrackersResponseEntry PricingPlan

-- | The name of the tracker resource.
listTrackersResponseEntry_trackerName :: Lens' ListTrackersResponseEntry Text

-- | The timestamp at which the device's position was determined. Uses
--   <a>ISO 8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
listTrackersResponseEntry_updateTime :: Lens' ListTrackersResponseEntry UTCTime

-- | Specifies the map tile style selected from an available provider.
--   
--   <i>See:</i> <a>newMapConfiguration</a> smart constructor.
data MapConfiguration
MapConfiguration' :: Text -> MapConfiguration

-- | Specifies the map style selected from an available data provider.
--   
--   Valid <a>Esri map styles</a>:
--   
--   <ul>
--   <li><tt>VectorEsriDarkGrayCanvas</tt> – The Esri Dark Gray Canvas map
--   style. A vector basemap with a dark gray, neutral background with
--   minimal colors, labels, and features that's designed to draw attention
--   to your thematic content.</li>
--   <li><tt>RasterEsriImagery</tt> – The Esri Imagery map style. A raster
--   basemap that provides one meter or better satellite and aerial imagery
--   in many parts of the world and lower resolution satellite imagery
--   worldwide.</li>
--   <li><tt>VectorEsriLightGrayCanvas</tt> – The Esri Light Gray Canvas
--   map style, which provides a detailed vector basemap with a light gray,
--   neutral background style with minimal colors, labels, and features
--   that's designed to draw attention to your thematic content.</li>
--   <li><tt>VectorEsriTopographic</tt> – The Esri Light map style, which
--   provides a detailed vector basemap with a classic Esri map style.</li>
--   <li><tt>VectorEsriStreets</tt> – The Esri World Streets map style,
--   which provides a detailed vector basemap for the world symbolized with
--   a classic Esri street map style. The vector tile layer is similar in
--   content and style to the World Street Map raster map.</li>
--   <li><tt>VectorEsriNavigation</tt> – The Esri World Navigation map
--   style, which provides a detailed basemap for the world symbolized with
--   a custom navigation map style that's designed for use during the day
--   in mobile devices.</li>
--   </ul>
--   
--   Valid <a>HERE Technologies map styles</a>:
--   
--   <ul>
--   <li><tt>VectorHereBerlin</tt> – The HERE Berlin map style is a high
--   contrast detailed base map of the world that blends 3D and 2D
--   rendering.When using HERE as your data provider, and selecting the
--   Style <tt>VectorHereBerlin</tt>, you may not use HERE Technologies
--   maps for Asset Management. See the <a>AWS Service Terms</a> for Amazon
--   Location Service.</li>
--   </ul>
[$sel:style:MapConfiguration'] :: MapConfiguration -> Text

-- | Create a value of <a>MapConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:style:MapConfiguration'</a>, <a>mapConfiguration_style</a> -
--   Specifies the map style selected from an available data provider.
--   
--   Valid <a>Esri map styles</a>:
--   
--   <ul>
--   <li><tt>VectorEsriDarkGrayCanvas</tt> – The Esri Dark Gray Canvas map
--   style. A vector basemap with a dark gray, neutral background with
--   minimal colors, labels, and features that's designed to draw attention
--   to your thematic content.</li>
--   <li><tt>RasterEsriImagery</tt> – The Esri Imagery map style. A raster
--   basemap that provides one meter or better satellite and aerial imagery
--   in many parts of the world and lower resolution satellite imagery
--   worldwide.</li>
--   <li><tt>VectorEsriLightGrayCanvas</tt> – The Esri Light Gray Canvas
--   map style, which provides a detailed vector basemap with a light gray,
--   neutral background style with minimal colors, labels, and features
--   that's designed to draw attention to your thematic content.</li>
--   <li><tt>VectorEsriTopographic</tt> – The Esri Light map style, which
--   provides a detailed vector basemap with a classic Esri map style.</li>
--   <li><tt>VectorEsriStreets</tt> – The Esri World Streets map style,
--   which provides a detailed vector basemap for the world symbolized with
--   a classic Esri street map style. The vector tile layer is similar in
--   content and style to the World Street Map raster map.</li>
--   <li><tt>VectorEsriNavigation</tt> – The Esri World Navigation map
--   style, which provides a detailed basemap for the world symbolized with
--   a custom navigation map style that's designed for use during the day
--   in mobile devices.</li>
--   </ul>
--   
--   Valid <a>HERE Technologies map styles</a>:
--   
--   <ul>
--   <li><tt>VectorHereBerlin</tt> – The HERE Berlin map style is a high
--   contrast detailed base map of the world that blends 3D and 2D
--   rendering.When using HERE as your data provider, and selecting the
--   Style <tt>VectorHereBerlin</tt>, you may not use HERE Technologies
--   maps for Asset Management. See the <a>AWS Service Terms</a> for Amazon
--   Location Service.</li>
--   </ul>
newMapConfiguration :: Text -> MapConfiguration

-- | Specifies the map style selected from an available data provider.
--   
--   Valid <a>Esri map styles</a>:
--   
--   <ul>
--   <li><tt>VectorEsriDarkGrayCanvas</tt> – The Esri Dark Gray Canvas map
--   style. A vector basemap with a dark gray, neutral background with
--   minimal colors, labels, and features that's designed to draw attention
--   to your thematic content.</li>
--   <li><tt>RasterEsriImagery</tt> – The Esri Imagery map style. A raster
--   basemap that provides one meter or better satellite and aerial imagery
--   in many parts of the world and lower resolution satellite imagery
--   worldwide.</li>
--   <li><tt>VectorEsriLightGrayCanvas</tt> – The Esri Light Gray Canvas
--   map style, which provides a detailed vector basemap with a light gray,
--   neutral background style with minimal colors, labels, and features
--   that's designed to draw attention to your thematic content.</li>
--   <li><tt>VectorEsriTopographic</tt> – The Esri Light map style, which
--   provides a detailed vector basemap with a classic Esri map style.</li>
--   <li><tt>VectorEsriStreets</tt> – The Esri World Streets map style,
--   which provides a detailed vector basemap for the world symbolized with
--   a classic Esri street map style. The vector tile layer is similar in
--   content and style to the World Street Map raster map.</li>
--   <li><tt>VectorEsriNavigation</tt> – The Esri World Navigation map
--   style, which provides a detailed basemap for the world symbolized with
--   a custom navigation map style that's designed for use during the day
--   in mobile devices.</li>
--   </ul>
--   
--   Valid <a>HERE Technologies map styles</a>:
--   
--   <ul>
--   <li><tt>VectorHereBerlin</tt> – The HERE Berlin map style is a high
--   contrast detailed base map of the world that blends 3D and 2D
--   rendering.When using HERE as your data provider, and selecting the
--   Style <tt>VectorHereBerlin</tt>, you may not use HERE Technologies
--   maps for Asset Management. See the <a>AWS Service Terms</a> for Amazon
--   Location Service.</li>
--   </ul>
mapConfiguration_style :: Lens' MapConfiguration Text

-- | Contains details about addresses or points of interest that match the
--   search criteria.
--   
--   <i>See:</i> <a>newPlace</a> smart constructor.
data Place
Place' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> PlaceGeometry -> Place

-- | A name for a local area, such as a city or town name. For example,
--   <tt>Toronto</tt>.
[$sel:municipality:Place'] :: Place -> Maybe Text

-- | The numerical portion of an address, such as a building number.
[$sel:addressNumber:Place'] :: Place -> Maybe Text

-- | A group of numbers and letters in a country-specific format, which
--   accompanies the address for the purpose of identifying a location.
[$sel:postalCode:Place'] :: Place -> Maybe Text

-- | A country/region specified using <a>ISO 3166</a> 3-digit
--   country/region code. For example, <tt>CAN</tt>.
[$sel:country:Place'] :: Place -> Maybe Text

-- | The name for a street or a road to identify a location. For example,
--   <tt>Main Street</tt>.
[$sel:street:Place'] :: Place -> Maybe Text

-- | A country, or an area that's part of a larger region . For example,
--   <tt>Metro Vancouver</tt>.
[$sel:subRegion:Place'] :: Place -> Maybe Text

-- | A name for an area or geographical division, such as a province or
--   state name. For example, <tt>British Columbia</tt>.
[$sel:region:Place'] :: Place -> Maybe Text

-- | The full name and address of the point of interest such as a city,
--   region, or country. For example, <tt>123 Any Street, Any Town,
--   USA</tt>.
[$sel:label:Place'] :: Place -> Maybe Text

-- | The name of a community district. For example, <tt>Downtown</tt>.
[$sel:neighborhood:Place'] :: Place -> Maybe Text
[$sel:geometry:Place'] :: Place -> PlaceGeometry

-- | Create a value of <a>Place</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:municipality:Place'</a>, <a>place_municipality</a> - A name
--   for a local area, such as a city or town name. For example,
--   <tt>Toronto</tt>.
--   
--   <a>$sel:addressNumber:Place'</a>, <a>place_addressNumber</a> - The
--   numerical portion of an address, such as a building number.
--   
--   <a>$sel:postalCode:Place'</a>, <a>place_postalCode</a> - A group of
--   numbers and letters in a country-specific format, which accompanies
--   the address for the purpose of identifying a location.
--   
--   <a>$sel:country:Place'</a>, <a>place_country</a> - A country/region
--   specified using <a>ISO 3166</a> 3-digit country/region code. For
--   example, <tt>CAN</tt>.
--   
--   <a>$sel:street:Place'</a>, <a>place_street</a> - The name for a street
--   or a road to identify a location. For example, <tt>Main Street</tt>.
--   
--   <a>$sel:subRegion:Place'</a>, <a>place_subRegion</a> - A country, or
--   an area that's part of a larger region . For example, <tt>Metro
--   Vancouver</tt>.
--   
--   <a>$sel:region:Place'</a>, <a>place_region</a> - A name for an area or
--   geographical division, such as a province or state name. For example,
--   <tt>British Columbia</tt>.
--   
--   <a>$sel:label:Place'</a>, <a>place_label</a> - The full name and
--   address of the point of interest such as a city, region, or country.
--   For example, <tt>123 Any Street, Any Town, USA</tt>.
--   
--   <a>$sel:neighborhood:Place'</a>, <a>place_neighborhood</a> - The name
--   of a community district. For example, <tt>Downtown</tt>.
--   
--   <a>$sel:geometry:Place'</a>, <a>place_geometry</a> - Undocumented
--   member.
newPlace :: PlaceGeometry -> Place

-- | A name for a local area, such as a city or town name. For example,
--   <tt>Toronto</tt>.
place_municipality :: Lens' Place (Maybe Text)

-- | The numerical portion of an address, such as a building number.
place_addressNumber :: Lens' Place (Maybe Text)

-- | A group of numbers and letters in a country-specific format, which
--   accompanies the address for the purpose of identifying a location.
place_postalCode :: Lens' Place (Maybe Text)

-- | A country/region specified using <a>ISO 3166</a> 3-digit
--   country/region code. For example, <tt>CAN</tt>.
place_country :: Lens' Place (Maybe Text)

-- | The name for a street or a road to identify a location. For example,
--   <tt>Main Street</tt>.
place_street :: Lens' Place (Maybe Text)

-- | A country, or an area that's part of a larger region . For example,
--   <tt>Metro Vancouver</tt>.
place_subRegion :: Lens' Place (Maybe Text)

-- | A name for an area or geographical division, such as a province or
--   state name. For example, <tt>British Columbia</tt>.
place_region :: Lens' Place (Maybe Text)

-- | The full name and address of the point of interest such as a city,
--   region, or country. For example, <tt>123 Any Street, Any Town,
--   USA</tt>.
place_label :: Lens' Place (Maybe Text)

-- | The name of a community district. For example, <tt>Downtown</tt>.
place_neighborhood :: Lens' Place (Maybe Text)

-- | Undocumented member.
place_geometry :: Lens' Place PlaceGeometry

-- | Places uses a point geometry to specify a location or a Place.
--   
--   <i>See:</i> <a>newPlaceGeometry</a> smart constructor.
data PlaceGeometry
PlaceGeometry' :: Maybe (Sensitive (NonEmpty Double)) -> PlaceGeometry

-- | A single point geometry specifies a location for a Place using <a>WGS
--   84</a> coordinates:
--   
--   <ul>
--   <li><i>x</i> — Specifies the x coordinate or longitude.</li>
--   <li><i>y</i> — Specifies the y coordinate or latitude.</li>
--   </ul>
[$sel:point:PlaceGeometry'] :: PlaceGeometry -> Maybe (Sensitive (NonEmpty Double))

-- | Create a value of <a>PlaceGeometry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:point:PlaceGeometry'</a>, <a>placeGeometry_point</a> - A
--   single point geometry specifies a location for a Place using <a>WGS
--   84</a> coordinates:
--   
--   <ul>
--   <li><i>x</i> — Specifies the x coordinate or longitude.</li>
--   <li><i>y</i> — Specifies the y coordinate or latitude.</li>
--   </ul>
newPlaceGeometry :: PlaceGeometry

-- | A single point geometry specifies a location for a Place using <a>WGS
--   84</a> coordinates:
--   
--   <ul>
--   <li><i>x</i> — Specifies the x coordinate or longitude.</li>
--   <li><i>y</i> — Specifies the y coordinate or latitude.</li>
--   </ul>
placeGeometry_point :: Lens' PlaceGeometry (Maybe (NonEmpty Double))

-- | Specifies a single point of interest, or Place as a result of a search
--   query obtained from a dataset configured in the place index resource.
--   
--   <i>See:</i> <a>newSearchForPositionResult</a> smart constructor.
data SearchForPositionResult
SearchForPositionResult' :: Place -> SearchForPositionResult

-- | Contains details about the relevant point of interest.
[$sel:place:SearchForPositionResult'] :: SearchForPositionResult -> Place

-- | Create a value of <a>SearchForPositionResult</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:place:SearchForPositionResult'</a>,
--   <a>searchForPositionResult_place</a> - Contains details about the
--   relevant point of interest.
newSearchForPositionResult :: Place -> SearchForPositionResult

-- | Contains details about the relevant point of interest.
searchForPositionResult_place :: Lens' SearchForPositionResult Place

-- | Contains relevant Places returned by calling
--   <tt>SearchPlaceIndexForText</tt>.
--   
--   <i>See:</i> <a>newSearchForTextResult</a> smart constructor.
data SearchForTextResult
SearchForTextResult' :: Place -> SearchForTextResult

-- | Contains details about the relevant point of interest.
[$sel:place:SearchForTextResult'] :: SearchForTextResult -> Place

-- | Create a value of <a>SearchForTextResult</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:place:SearchForTextResult'</a>,
--   <a>searchForTextResult_place</a> - Contains details about the relevant
--   point of interest.
newSearchForTextResult :: Place -> SearchForTextResult

-- | Contains details about the relevant point of interest.
searchForTextResult_place :: Lens' SearchForTextResult Place

-- | A summary of the reverse geocoding request sent using
--   <tt>SearchPlaceIndexForPosition</tt>.
--   
--   <i>See:</i> <a>newSearchPlaceIndexForPositionSummary</a> smart
--   constructor.
data SearchPlaceIndexForPositionSummary
SearchPlaceIndexForPositionSummary' :: Maybe Natural -> Text -> Sensitive (NonEmpty Double) -> SearchPlaceIndexForPositionSummary

-- | An optional parameter. The maximum number of results returned per
--   request.
--   
--   Default value: <tt>50</tt>
[$sel:maxResults:SearchPlaceIndexForPositionSummary'] :: SearchPlaceIndexForPositionSummary -> Maybe Natural

-- | The data provider of geospatial data. Indicates one of the available
--   providers:
--   
--   <ul>
--   <li>Esri</li>
--   <li>HERE</li>
--   </ul>
--   
--   For additional details on data providers, see <a>Amazon Location
--   Service data providers</a>.
[$sel:dataSource:SearchPlaceIndexForPositionSummary'] :: SearchPlaceIndexForPositionSummary -> Text

-- | The position given in the reverse geocoding request.
[$sel:position:SearchPlaceIndexForPositionSummary'] :: SearchPlaceIndexForPositionSummary -> Sensitive (NonEmpty Double)

-- | Create a value of <a>SearchPlaceIndexForPositionSummary</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxResults:SearchPlaceIndexForPositionSummary'</a>,
--   <a>searchPlaceIndexForPositionSummary_maxResults</a> - An optional
--   parameter. The maximum number of results returned per request.
--   
--   Default value: <tt>50</tt>
--   
--   <a>$sel:dataSource:SearchPlaceIndexForPositionSummary'</a>,
--   <a>searchPlaceIndexForPositionSummary_dataSource</a> - The data
--   provider of geospatial data. Indicates one of the available providers:
--   
--   <ul>
--   <li>Esri</li>
--   <li>HERE</li>
--   </ul>
--   
--   For additional details on data providers, see <a>Amazon Location
--   Service data providers</a>.
--   
--   <a>$sel:position:SearchPlaceIndexForPositionSummary'</a>,
--   <a>searchPlaceIndexForPositionSummary_position</a> - The position
--   given in the reverse geocoding request.
newSearchPlaceIndexForPositionSummary :: Text -> NonEmpty Double -> SearchPlaceIndexForPositionSummary

-- | An optional parameter. The maximum number of results returned per
--   request.
--   
--   Default value: <tt>50</tt>
searchPlaceIndexForPositionSummary_maxResults :: Lens' SearchPlaceIndexForPositionSummary (Maybe Natural)

-- | The data provider of geospatial data. Indicates one of the available
--   providers:
--   
--   <ul>
--   <li>Esri</li>
--   <li>HERE</li>
--   </ul>
--   
--   For additional details on data providers, see <a>Amazon Location
--   Service data providers</a>.
searchPlaceIndexForPositionSummary_dataSource :: Lens' SearchPlaceIndexForPositionSummary Text

-- | The position given in the reverse geocoding request.
searchPlaceIndexForPositionSummary_position :: Lens' SearchPlaceIndexForPositionSummary (NonEmpty Double)

-- | A summary of the geocoding request sent using
--   <tt>SearchPlaceIndexForText</tt>.
--   
--   <i>See:</i> <a>newSearchPlaceIndexForTextSummary</a> smart
--   constructor.
data SearchPlaceIndexForTextSummary
SearchPlaceIndexForTextSummary' :: Maybe (Sensitive (NonEmpty Double)) -> Maybe (Sensitive (NonEmpty Double)) -> Maybe (Sensitive (NonEmpty Double)) -> Maybe (NonEmpty Text) -> Maybe Natural -> Text -> Sensitive Text -> SearchPlaceIndexForTextSummary

-- | Contains the coordinates for the optional bounding box coordinated
--   entered in the geocoding request.
[$sel:filterBBox:SearchPlaceIndexForTextSummary'] :: SearchPlaceIndexForTextSummary -> Maybe (Sensitive (NonEmpty Double))

-- | A bounding box that contains the search results within the specified
--   area indicated by <tt>FilterBBox</tt>. A subset of bounding box
--   specified using <tt>FilterBBox</tt>.
[$sel:resultBBox:SearchPlaceIndexForTextSummary'] :: SearchPlaceIndexForTextSummary -> Maybe (Sensitive (NonEmpty Double))

-- | Contains the coordinates for the bias position entered in the
--   geocoding request.
[$sel:biasPosition:SearchPlaceIndexForTextSummary'] :: SearchPlaceIndexForTextSummary -> Maybe (Sensitive (NonEmpty Double))

-- | Contains the country filter entered in the geocoding request.
[$sel:filterCountries:SearchPlaceIndexForTextSummary'] :: SearchPlaceIndexForTextSummary -> Maybe (NonEmpty Text)

-- | Contains the maximum number of results indicated for the request.
[$sel:maxResults:SearchPlaceIndexForTextSummary'] :: SearchPlaceIndexForTextSummary -> Maybe Natural

-- | The data provider of geospatial data. Indicates one of the available
--   providers:
--   
--   <ul>
--   <li>Esri</li>
--   <li>HERE</li>
--   </ul>
--   
--   For additional details on data providers, see <a>Amazon Location
--   Service data providers</a>.
[$sel:dataSource:SearchPlaceIndexForTextSummary'] :: SearchPlaceIndexForTextSummary -> Text

-- | The address, name, city or region to be used in the geocoding request.
--   In free-form text format. For example, <tt>Vancouver</tt>.
[$sel:text:SearchPlaceIndexForTextSummary'] :: SearchPlaceIndexForTextSummary -> Sensitive Text

-- | Create a value of <a>SearchPlaceIndexForTextSummary</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filterBBox:SearchPlaceIndexForTextSummary'</a>,
--   <a>searchPlaceIndexForTextSummary_filterBBox</a> - Contains the
--   coordinates for the optional bounding box coordinated entered in the
--   geocoding request.
--   
--   <a>$sel:resultBBox:SearchPlaceIndexForTextSummary'</a>,
--   <a>searchPlaceIndexForTextSummary_resultBBox</a> - A bounding box that
--   contains the search results within the specified area indicated by
--   <tt>FilterBBox</tt>. A subset of bounding box specified using
--   <tt>FilterBBox</tt>.
--   
--   <a>$sel:biasPosition:SearchPlaceIndexForTextSummary'</a>,
--   <a>searchPlaceIndexForTextSummary_biasPosition</a> - Contains the
--   coordinates for the bias position entered in the geocoding request.
--   
--   <a>$sel:filterCountries:SearchPlaceIndexForTextSummary'</a>,
--   <a>searchPlaceIndexForTextSummary_filterCountries</a> - Contains the
--   country filter entered in the geocoding request.
--   
--   <a>$sel:maxResults:SearchPlaceIndexForTextSummary'</a>,
--   <a>searchPlaceIndexForTextSummary_maxResults</a> - Contains the
--   maximum number of results indicated for the request.
--   
--   <a>$sel:dataSource:SearchPlaceIndexForTextSummary'</a>,
--   <a>searchPlaceIndexForTextSummary_dataSource</a> - The data provider
--   of geospatial data. Indicates one of the available providers:
--   
--   <ul>
--   <li>Esri</li>
--   <li>HERE</li>
--   </ul>
--   
--   For additional details on data providers, see <a>Amazon Location
--   Service data providers</a>.
--   
--   <a>$sel:text:SearchPlaceIndexForTextSummary'</a>,
--   <a>searchPlaceIndexForTextSummary_text</a> - The address, name, city
--   or region to be used in the geocoding request. In free-form text
--   format. For example, <tt>Vancouver</tt>.
newSearchPlaceIndexForTextSummary :: Text -> Text -> SearchPlaceIndexForTextSummary

-- | Contains the coordinates for the optional bounding box coordinated
--   entered in the geocoding request.
searchPlaceIndexForTextSummary_filterBBox :: Lens' SearchPlaceIndexForTextSummary (Maybe (NonEmpty Double))

-- | A bounding box that contains the search results within the specified
--   area indicated by <tt>FilterBBox</tt>. A subset of bounding box
--   specified using <tt>FilterBBox</tt>.
searchPlaceIndexForTextSummary_resultBBox :: Lens' SearchPlaceIndexForTextSummary (Maybe (NonEmpty Double))

-- | Contains the coordinates for the bias position entered in the
--   geocoding request.
searchPlaceIndexForTextSummary_biasPosition :: Lens' SearchPlaceIndexForTextSummary (Maybe (NonEmpty Double))

-- | Contains the country filter entered in the geocoding request.
searchPlaceIndexForTextSummary_filterCountries :: Lens' SearchPlaceIndexForTextSummary (Maybe (NonEmpty Text))

-- | Contains the maximum number of results indicated for the request.
searchPlaceIndexForTextSummary_maxResults :: Lens' SearchPlaceIndexForTextSummary (Maybe Natural)

-- | The data provider of geospatial data. Indicates one of the available
--   providers:
--   
--   <ul>
--   <li>Esri</li>
--   <li>HERE</li>
--   </ul>
--   
--   For additional details on data providers, see <a>Amazon Location
--   Service data providers</a>.
searchPlaceIndexForTextSummary_dataSource :: Lens' SearchPlaceIndexForTextSummary Text

-- | The address, name, city or region to be used in the geocoding request.
--   In free-form text format. For example, <tt>Vancouver</tt>.
searchPlaceIndexForTextSummary_text :: Lens' SearchPlaceIndexForTextSummary Text

-- | Represents an element of a leg within a route. A step contains
--   instructions for how to move to the next step in the leg.
--   
--   <i>See:</i> <a>newStep</a> smart constructor.
data Step
Step' :: Maybe Natural -> Double -> Double -> Sensitive (NonEmpty Double) -> Sensitive (NonEmpty Double) -> Step

-- | Represents the start position, or index, in a sequence of steps within
--   the leg's line string geometry. For example, the index of the first
--   step in a leg geometry is <tt>0</tt>.
--   
--   Included in the response for queries that set
--   <tt>IncludeLegGeometry</tt> to <tt>True</tt>.
[$sel:geometryOffset:Step'] :: Step -> Maybe Natural

-- | The travel distance between the step's <tt>StartPosition</tt> and
--   <tt>EndPosition</tt>.
[$sel:distance:Step'] :: Step -> Double

-- | The estimated travel time, in seconds, from the step's
--   <tt>StartPosition</tt> to the <tt>EndPosition</tt>. . The travel mode
--   and departure time that you specify in the request determines the
--   calculated time.
[$sel:durationSeconds:Step'] :: Step -> Double

-- | The end position of a step. If the position the last step in the leg,
--   this position is the same as the end position of the leg.
[$sel:endPosition:Step'] :: Step -> Sensitive (NonEmpty Double)

-- | The starting position of a step. If the position is the first step in
--   the leg, this position is the same as the start position of the leg.
[$sel:startPosition:Step'] :: Step -> Sensitive (NonEmpty Double)

-- | Create a value of <a>Step</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:geometryOffset:Step'</a>, <a>step_geometryOffset</a> -
--   Represents the start position, or index, in a sequence of steps within
--   the leg's line string geometry. For example, the index of the first
--   step in a leg geometry is <tt>0</tt>.
--   
--   Included in the response for queries that set
--   <tt>IncludeLegGeometry</tt> to <tt>True</tt>.
--   
--   <a>$sel:distance:Step'</a>, <a>step_distance</a> - The travel distance
--   between the step's <tt>StartPosition</tt> and <tt>EndPosition</tt>.
--   
--   <a>$sel:durationSeconds:Step'</a>, <a>step_durationSeconds</a> - The
--   estimated travel time, in seconds, from the step's
--   <tt>StartPosition</tt> to the <tt>EndPosition</tt>. . The travel mode
--   and departure time that you specify in the request determines the
--   calculated time.
--   
--   <a>$sel:endPosition:Step'</a>, <a>step_endPosition</a> - The end
--   position of a step. If the position the last step in the leg, this
--   position is the same as the end position of the leg.
--   
--   <a>$sel:startPosition:Step'</a>, <a>step_startPosition</a> - The
--   starting position of a step. If the position is the first step in the
--   leg, this position is the same as the start position of the leg.
newStep :: Double -> Double -> NonEmpty Double -> NonEmpty Double -> Step

-- | Represents the start position, or index, in a sequence of steps within
--   the leg's line string geometry. For example, the index of the first
--   step in a leg geometry is <tt>0</tt>.
--   
--   Included in the response for queries that set
--   <tt>IncludeLegGeometry</tt> to <tt>True</tt>.
step_geometryOffset :: Lens' Step (Maybe Natural)

-- | The travel distance between the step's <tt>StartPosition</tt> and
--   <tt>EndPosition</tt>.
step_distance :: Lens' Step Double

-- | The estimated travel time, in seconds, from the step's
--   <tt>StartPosition</tt> to the <tt>EndPosition</tt>. . The travel mode
--   and departure time that you specify in the request determines the
--   calculated time.
step_durationSeconds :: Lens' Step Double

-- | The end position of a step. If the position the last step in the leg,
--   this position is the same as the end position of the leg.
step_endPosition :: Lens' Step (NonEmpty Double)

-- | The starting position of a step. If the position is the first step in
--   the leg, this position is the same as the start position of the leg.
step_startPosition :: Lens' Step (NonEmpty Double)

-- | Contains details about the truck dimensions in the unit of measurement
--   that you specify. Used to filter out roads that can't support or allow
--   the specified dimensions for requests that specify <tt>TravelMode</tt>
--   as <tt>Truck</tt>.
--   
--   <i>See:</i> <a>newTruckDimensions</a> smart constructor.
data TruckDimensions
TruckDimensions' :: Maybe Double -> Maybe Double -> Maybe Double -> Maybe DimensionUnit -> TruckDimensions

-- | The length of the truck.
--   
--   <ul>
--   <li>For example, <tt>15.5</tt>.</li>
--   </ul>
[$sel:length:TruckDimensions'] :: TruckDimensions -> Maybe Double

-- | The height of the truck.
--   
--   <ul>
--   <li>For example, <tt>4.5</tt>.</li>
--   </ul>
[$sel:height:TruckDimensions'] :: TruckDimensions -> Maybe Double

-- | The width of the truck.
--   
--   <ul>
--   <li>For example, <tt>4.5</tt>.</li>
--   </ul>
[$sel:width:TruckDimensions'] :: TruckDimensions -> Maybe Double

-- | Specifies the unit of measurement for the truck dimensions.
--   
--   Default Value: <tt>Meters</tt>
[$sel:unit:TruckDimensions'] :: TruckDimensions -> Maybe DimensionUnit

-- | Create a value of <a>TruckDimensions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:length:TruckDimensions'</a>, <a>truckDimensions_length</a> -
--   The length of the truck.
--   
--   <ul>
--   <li>For example, <tt>15.5</tt>.</li>
--   </ul>
--   
--   <a>$sel:height:TruckDimensions'</a>, <a>truckDimensions_height</a> -
--   The height of the truck.
--   
--   <ul>
--   <li>For example, <tt>4.5</tt>.</li>
--   </ul>
--   
--   <a>$sel:width:TruckDimensions'</a>, <a>truckDimensions_width</a> - The
--   width of the truck.
--   
--   <ul>
--   <li>For example, <tt>4.5</tt>.</li>
--   </ul>
--   
--   <a>$sel:unit:TruckDimensions'</a>, <a>truckDimensions_unit</a> -
--   Specifies the unit of measurement for the truck dimensions.
--   
--   Default Value: <tt>Meters</tt>
newTruckDimensions :: TruckDimensions

-- | The length of the truck.
--   
--   <ul>
--   <li>For example, <tt>15.5</tt>.</li>
--   </ul>
truckDimensions_length :: Lens' TruckDimensions (Maybe Double)

-- | The height of the truck.
--   
--   <ul>
--   <li>For example, <tt>4.5</tt>.</li>
--   </ul>
truckDimensions_height :: Lens' TruckDimensions (Maybe Double)

-- | The width of the truck.
--   
--   <ul>
--   <li>For example, <tt>4.5</tt>.</li>
--   </ul>
truckDimensions_width :: Lens' TruckDimensions (Maybe Double)

-- | Specifies the unit of measurement for the truck dimensions.
--   
--   Default Value: <tt>Meters</tt>
truckDimensions_unit :: Lens' TruckDimensions (Maybe DimensionUnit)

-- | Contains details about the truck's weight specifications. Used to
--   avoid roads that can't support or allow the total weight for requests
--   that specify <tt>TravelMode</tt> as <tt>Truck</tt>.
--   
--   <i>See:</i> <a>newTruckWeight</a> smart constructor.
data TruckWeight
TruckWeight' :: Maybe Double -> Maybe VehicleWeightUnit -> TruckWeight

-- | The total weight of the truck.
--   
--   <ul>
--   <li>For example, <tt>3500</tt>.</li>
--   </ul>
[$sel:total:TruckWeight'] :: TruckWeight -> Maybe Double

-- | The unit of measurement to use for the truck weight.
--   
--   Default Value: <tt>Kilograms</tt>
[$sel:unit:TruckWeight'] :: TruckWeight -> Maybe VehicleWeightUnit

-- | Create a value of <a>TruckWeight</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:total:TruckWeight'</a>, <a>truckWeight_total</a> - The total
--   weight of the truck.
--   
--   <ul>
--   <li>For example, <tt>3500</tt>.</li>
--   </ul>
--   
--   <a>$sel:unit:TruckWeight'</a>, <a>truckWeight_unit</a> - The unit of
--   measurement to use for the truck weight.
--   
--   Default Value: <tt>Kilograms</tt>
newTruckWeight :: TruckWeight

-- | The total weight of the truck.
--   
--   <ul>
--   <li>For example, <tt>3500</tt>.</li>
--   </ul>
truckWeight_total :: Lens' TruckWeight (Maybe Double)

-- | The unit of measurement to use for the truck weight.
--   
--   Default Value: <tt>Kilograms</tt>
truckWeight_unit :: Lens' TruckWeight (Maybe VehicleWeightUnit)


-- | Assigns one or more tags (key-value pairs) to the specified Amazon
--   Location Service resource.
--   
--   <pre>
--   &lt;p&gt;Tags can help you organize and categorize your resources. You can also use them to scope user permissions, by granting a user permission to access or change only resources with certain tag values.&lt;/p&gt; &lt;p&gt;You can use the &lt;code&gt;TagResource&lt;/code&gt; operation with an Amazon Location Service resource that already has tags. If you specify a new tag key for the resource, this tag is appended to the tags already associated with the resource. If you specify a tag key that's already associated with the resource, the new tag value that you specify replaces the previous value for that tag. &lt;/p&gt; &lt;p&gt;You can associate up to 50 tags with a resource.&lt;/p&gt;
--   </pre>
module Amazonka.Location.TagResource

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> HashMap Text Text -> TagResource

-- | The Amazon Resource Name (ARN) of the resource whose tags you want to
--   update.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:resourcetype/ExampleResource</tt></li>
--   </ul>
[$sel:resourceArn:TagResource'] :: TagResource -> Text

-- | Tags that have been applied to the specified resource. Tags are mapped
--   from the tag key to the tag value: <tt>"TagKey" : "TagValue"</tt>.
--   
--   <ul>
--   <li>Format example: <tt>{"tag1" : "value1", "tag2" : "value2"}
--   </tt></li>
--   </ul>
[$sel:tags:TagResource'] :: TagResource -> HashMap Text Text

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The Amazon Resource Name (ARN) of the resource whose tags you want to
--   update.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:resourcetype/ExampleResource</tt></li>
--   </ul>
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - Tags that
--   have been applied to the specified resource. Tags are mapped from the
--   tag key to the tag value: <tt>"TagKey" : "TagValue"</tt>.
--   
--   <ul>
--   <li>Format example: <tt>{"tag1" : "value1", "tag2" : "value2"}
--   </tt></li>
--   </ul>
newTagResource :: Text -> TagResource

-- | The Amazon Resource Name (ARN) of the resource whose tags you want to
--   update.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:resourcetype/ExampleResource</tt></li>
--   </ul>
tagResource_resourceArn :: Lens' TagResource Text

-- | Tags that have been applied to the specified resource. Tags are mapped
--   from the tag key to the tag value: <tt>"TagKey" : "TagValue"</tt>.
--   
--   <ul>
--   <li>Format example: <tt>{"tag1" : "value1", "tag2" : "value2"}
--   </tt></li>
--   </ul>
tagResource_tags :: Lens' TagResource (HashMap Text Text)

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:TagResourceResponse'] :: TagResourceResponse -> Int

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int
instance GHC.Generics.Generic Amazonka.Location.TagResource.TagResource
instance GHC.Show.Show Amazonka.Location.TagResource.TagResource
instance GHC.Read.Read Amazonka.Location.TagResource.TagResource
instance GHC.Classes.Eq Amazonka.Location.TagResource.TagResource
instance GHC.Generics.Generic Amazonka.Location.TagResource.TagResourceResponse
instance GHC.Show.Show Amazonka.Location.TagResource.TagResourceResponse
instance GHC.Read.Read Amazonka.Location.TagResource.TagResourceResponse
instance GHC.Classes.Eq Amazonka.Location.TagResource.TagResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.Location.TagResource.TagResource
instance Control.DeepSeq.NFData Amazonka.Location.TagResource.TagResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.Location.TagResource.TagResource
instance Control.DeepSeq.NFData Amazonka.Location.TagResource.TagResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.Location.TagResource.TagResource
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Location.TagResource.TagResource
instance Amazonka.Data.Path.ToPath Amazonka.Location.TagResource.TagResource
instance Amazonka.Data.Query.ToQuery Amazonka.Location.TagResource.TagResource


-- | Geocodes free-form text, such as an address, name, city, or region to
--   allow you to search for Places or points of interest.
--   
--   Includes the option to apply additional parameters to narrow your list
--   of results.
--   
--   You can search for places near a given position using
--   <tt>BiasPosition</tt>, or filter results within a bounding box using
--   <tt>FilterBBox</tt>. Providing both parameters simultaneously returns
--   an error.
module Amazonka.Location.SearchPlaceIndexForText

-- | <i>See:</i> <a>newSearchPlaceIndexForText</a> smart constructor.
data SearchPlaceIndexForText
SearchPlaceIndexForText' :: Maybe (Sensitive (NonEmpty Double)) -> Maybe (Sensitive (NonEmpty Double)) -> Maybe (NonEmpty Text) -> Maybe Natural -> Text -> Sensitive Text -> SearchPlaceIndexForText

-- | Filters the results by returning only Places within the provided
--   bounding box. An optional parameter.
--   
--   The first 2 <tt>bbox</tt> parameters describe the lower southwest
--   corner:
--   
--   <ul>
--   <li>The first <tt>bbox</tt> position is the X coordinate or longitude
--   of the lower southwest corner.</li>
--   <li>The second <tt>bbox</tt> position is the Y coordinate or latitude
--   of the lower southwest corner.</li>
--   </ul>
--   
--   For example, <tt>bbox=xLongitudeSW&amp;bbox=yLatitudeSW</tt>.
--   
--   The next <tt>bbox</tt> parameters describe the upper northeast corner:
--   
--   <ul>
--   <li>The third <tt>bbox</tt> position is the X coordinate, or longitude
--   of the upper northeast corner.</li>
--   <li>The fourth <tt>bbox</tt> position is the Y coordinate, or
--   longitude of the upper northeast corner.</li>
--   </ul>
--   
--   For example, <tt>bbox=xLongitudeNE&amp;bbox=yLatitudeNE</tt>
[$sel:filterBBox:SearchPlaceIndexForText'] :: SearchPlaceIndexForText -> Maybe (Sensitive (NonEmpty Double))

-- | Searches for results closest to the given position. An optional
--   parameter defined by longitude, and latitude.
--   
--   <ul>
--   <li>The first <tt>bias</tt> position is the X coordinate, or
--   longitude.</li>
--   <li>The second <tt>bias</tt> position is the Y coordinate, or
--   latitude.</li>
--   </ul>
--   
--   For example, <tt>bias=xLongitude&amp;bias=yLatitude</tt>.
[$sel:biasPosition:SearchPlaceIndexForText'] :: SearchPlaceIndexForText -> Maybe (Sensitive (NonEmpty Double))

-- | Limits the search to the given a list of countries/regions. An
--   optional parameter.
--   
--   <ul>
--   <li>Use the <a>ISO 3166</a> 3-digit country code. For example,
--   Australia uses three upper-case characters: <tt>AUS</tt>.</li>
--   </ul>
[$sel:filterCountries:SearchPlaceIndexForText'] :: SearchPlaceIndexForText -> Maybe (NonEmpty Text)

-- | An optional parameter. The maximum number of results returned per
--   request.
--   
--   The default: <tt>50</tt>
[$sel:maxResults:SearchPlaceIndexForText'] :: SearchPlaceIndexForText -> Maybe Natural

-- | The name of the place index resource you want to use for the search.
[$sel:indexName:SearchPlaceIndexForText'] :: SearchPlaceIndexForText -> Text

-- | The address, name, city, or region to be used in the search. In
--   free-form text format. For example, <tt>123 Any Street</tt>.
[$sel:text:SearchPlaceIndexForText'] :: SearchPlaceIndexForText -> Sensitive Text

-- | Create a value of <a>SearchPlaceIndexForText</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filterBBox:SearchPlaceIndexForText'</a>,
--   <a>searchPlaceIndexForText_filterBBox</a> - Filters the results by
--   returning only Places within the provided bounding box. An optional
--   parameter.
--   
--   The first 2 <tt>bbox</tt> parameters describe the lower southwest
--   corner:
--   
--   <ul>
--   <li>The first <tt>bbox</tt> position is the X coordinate or longitude
--   of the lower southwest corner.</li>
--   <li>The second <tt>bbox</tt> position is the Y coordinate or latitude
--   of the lower southwest corner.</li>
--   </ul>
--   
--   For example, <tt>bbox=xLongitudeSW&amp;bbox=yLatitudeSW</tt>.
--   
--   The next <tt>bbox</tt> parameters describe the upper northeast corner:
--   
--   <ul>
--   <li>The third <tt>bbox</tt> position is the X coordinate, or longitude
--   of the upper northeast corner.</li>
--   <li>The fourth <tt>bbox</tt> position is the Y coordinate, or
--   longitude of the upper northeast corner.</li>
--   </ul>
--   
--   For example, <tt>bbox=xLongitudeNE&amp;bbox=yLatitudeNE</tt>
--   
--   <a>$sel:biasPosition:SearchPlaceIndexForText'</a>,
--   <a>searchPlaceIndexForText_biasPosition</a> - Searches for results
--   closest to the given position. An optional parameter defined by
--   longitude, and latitude.
--   
--   <ul>
--   <li>The first <tt>bias</tt> position is the X coordinate, or
--   longitude.</li>
--   <li>The second <tt>bias</tt> position is the Y coordinate, or
--   latitude.</li>
--   </ul>
--   
--   For example, <tt>bias=xLongitude&amp;bias=yLatitude</tt>.
--   
--   <a>$sel:filterCountries:SearchPlaceIndexForText'</a>,
--   <a>searchPlaceIndexForText_filterCountries</a> - Limits the search to
--   the given a list of countries/regions. An optional parameter.
--   
--   <ul>
--   <li>Use the <a>ISO 3166</a> 3-digit country code. For example,
--   Australia uses three upper-case characters: <tt>AUS</tt>.</li>
--   </ul>
--   
--   <a>$sel:maxResults:SearchPlaceIndexForText'</a>,
--   <a>searchPlaceIndexForText_maxResults</a> - An optional parameter. The
--   maximum number of results returned per request.
--   
--   The default: <tt>50</tt>
--   
--   <a>$sel:indexName:SearchPlaceIndexForText'</a>,
--   <a>searchPlaceIndexForText_indexName</a> - The name of the place index
--   resource you want to use for the search.
--   
--   <a>$sel:text:SearchPlaceIndexForText'</a>,
--   <a>searchPlaceIndexForText_text</a> - The address, name, city, or
--   region to be used in the search. In free-form text format. For
--   example, <tt>123 Any Street</tt>.
newSearchPlaceIndexForText :: Text -> Text -> SearchPlaceIndexForText

-- | Filters the results by returning only Places within the provided
--   bounding box. An optional parameter.
--   
--   The first 2 <tt>bbox</tt> parameters describe the lower southwest
--   corner:
--   
--   <ul>
--   <li>The first <tt>bbox</tt> position is the X coordinate or longitude
--   of the lower southwest corner.</li>
--   <li>The second <tt>bbox</tt> position is the Y coordinate or latitude
--   of the lower southwest corner.</li>
--   </ul>
--   
--   For example, <tt>bbox=xLongitudeSW&amp;bbox=yLatitudeSW</tt>.
--   
--   The next <tt>bbox</tt> parameters describe the upper northeast corner:
--   
--   <ul>
--   <li>The third <tt>bbox</tt> position is the X coordinate, or longitude
--   of the upper northeast corner.</li>
--   <li>The fourth <tt>bbox</tt> position is the Y coordinate, or
--   longitude of the upper northeast corner.</li>
--   </ul>
--   
--   For example, <tt>bbox=xLongitudeNE&amp;bbox=yLatitudeNE</tt>
searchPlaceIndexForText_filterBBox :: Lens' SearchPlaceIndexForText (Maybe (NonEmpty Double))

-- | Searches for results closest to the given position. An optional
--   parameter defined by longitude, and latitude.
--   
--   <ul>
--   <li>The first <tt>bias</tt> position is the X coordinate, or
--   longitude.</li>
--   <li>The second <tt>bias</tt> position is the Y coordinate, or
--   latitude.</li>
--   </ul>
--   
--   For example, <tt>bias=xLongitude&amp;bias=yLatitude</tt>.
searchPlaceIndexForText_biasPosition :: Lens' SearchPlaceIndexForText (Maybe (NonEmpty Double))

-- | Limits the search to the given a list of countries/regions. An
--   optional parameter.
--   
--   <ul>
--   <li>Use the <a>ISO 3166</a> 3-digit country code. For example,
--   Australia uses three upper-case characters: <tt>AUS</tt>.</li>
--   </ul>
searchPlaceIndexForText_filterCountries :: Lens' SearchPlaceIndexForText (Maybe (NonEmpty Text))

-- | An optional parameter. The maximum number of results returned per
--   request.
--   
--   The default: <tt>50</tt>
searchPlaceIndexForText_maxResults :: Lens' SearchPlaceIndexForText (Maybe Natural)

-- | The name of the place index resource you want to use for the search.
searchPlaceIndexForText_indexName :: Lens' SearchPlaceIndexForText Text

-- | The address, name, city, or region to be used in the search. In
--   free-form text format. For example, <tt>123 Any Street</tt>.
searchPlaceIndexForText_text :: Lens' SearchPlaceIndexForText Text

-- | <i>See:</i> <a>newSearchPlaceIndexForTextResponse</a> smart
--   constructor.
data SearchPlaceIndexForTextResponse
SearchPlaceIndexForTextResponse' :: Int -> [SearchForTextResult] -> SearchPlaceIndexForTextSummary -> SearchPlaceIndexForTextResponse

-- | The response's http status code.
[$sel:httpStatus:SearchPlaceIndexForTextResponse'] :: SearchPlaceIndexForTextResponse -> Int

-- | A list of Places closest to the specified position. Each result
--   contains additional information about the specific point of interest.
[$sel:results:SearchPlaceIndexForTextResponse'] :: SearchPlaceIndexForTextResponse -> [SearchForTextResult]

-- | Contains a summary of the request. Contains the <tt>BiasPosition</tt>,
--   <tt>DataSource</tt>, <tt>FilterBBox</tt>, <tt>FilterCountries</tt>,
--   <tt>MaxResults</tt>, <tt>ResultBBox</tt>, and <tt>Text</tt>.
[$sel:summary:SearchPlaceIndexForTextResponse'] :: SearchPlaceIndexForTextResponse -> SearchPlaceIndexForTextSummary

-- | Create a value of <a>SearchPlaceIndexForTextResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:SearchPlaceIndexForTextResponse'</a>,
--   <a>searchPlaceIndexForTextResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:results:SearchPlaceIndexForTextResponse'</a>,
--   <a>searchPlaceIndexForTextResponse_results</a> - A list of Places
--   closest to the specified position. Each result contains additional
--   information about the specific point of interest.
--   
--   <a>$sel:summary:SearchPlaceIndexForTextResponse'</a>,
--   <a>searchPlaceIndexForTextResponse_summary</a> - Contains a summary of
--   the request. Contains the <tt>BiasPosition</tt>, <tt>DataSource</tt>,
--   <tt>FilterBBox</tt>, <tt>FilterCountries</tt>, <tt>MaxResults</tt>,
--   <tt>ResultBBox</tt>, and <tt>Text</tt>.
newSearchPlaceIndexForTextResponse :: Int -> SearchPlaceIndexForTextSummary -> SearchPlaceIndexForTextResponse

-- | The response's http status code.
searchPlaceIndexForTextResponse_httpStatus :: Lens' SearchPlaceIndexForTextResponse Int

-- | A list of Places closest to the specified position. Each result
--   contains additional information about the specific point of interest.
searchPlaceIndexForTextResponse_results :: Lens' SearchPlaceIndexForTextResponse [SearchForTextResult]

-- | Contains a summary of the request. Contains the <tt>BiasPosition</tt>,
--   <tt>DataSource</tt>, <tt>FilterBBox</tt>, <tt>FilterCountries</tt>,
--   <tt>MaxResults</tt>, <tt>ResultBBox</tt>, and <tt>Text</tt>.
searchPlaceIndexForTextResponse_summary :: Lens' SearchPlaceIndexForTextResponse SearchPlaceIndexForTextSummary
instance GHC.Generics.Generic Amazonka.Location.SearchPlaceIndexForText.SearchPlaceIndexForText
instance GHC.Show.Show Amazonka.Location.SearchPlaceIndexForText.SearchPlaceIndexForText
instance GHC.Classes.Eq Amazonka.Location.SearchPlaceIndexForText.SearchPlaceIndexForText
instance GHC.Generics.Generic Amazonka.Location.SearchPlaceIndexForText.SearchPlaceIndexForTextResponse
instance GHC.Show.Show Amazonka.Location.SearchPlaceIndexForText.SearchPlaceIndexForTextResponse
instance GHC.Classes.Eq Amazonka.Location.SearchPlaceIndexForText.SearchPlaceIndexForTextResponse
instance Amazonka.Types.AWSRequest Amazonka.Location.SearchPlaceIndexForText.SearchPlaceIndexForText
instance Control.DeepSeq.NFData Amazonka.Location.SearchPlaceIndexForText.SearchPlaceIndexForTextResponse
instance Data.Hashable.Class.Hashable Amazonka.Location.SearchPlaceIndexForText.SearchPlaceIndexForText
instance Control.DeepSeq.NFData Amazonka.Location.SearchPlaceIndexForText.SearchPlaceIndexForText
instance Amazonka.Data.Headers.ToHeaders Amazonka.Location.SearchPlaceIndexForText.SearchPlaceIndexForText
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Location.SearchPlaceIndexForText.SearchPlaceIndexForText
instance Amazonka.Data.Path.ToPath Amazonka.Location.SearchPlaceIndexForText.SearchPlaceIndexForText
instance Amazonka.Data.Query.ToQuery Amazonka.Location.SearchPlaceIndexForText.SearchPlaceIndexForText


-- | Reverse geocodes a given coordinate and returns a legible address.
--   Allows you to search for Places or points of interest near a given
--   position.
module Amazonka.Location.SearchPlaceIndexForPosition

-- | <i>See:</i> <a>newSearchPlaceIndexForPosition</a> smart constructor.
data SearchPlaceIndexForPosition
SearchPlaceIndexForPosition' :: Maybe Natural -> Text -> Sensitive (NonEmpty Double) -> SearchPlaceIndexForPosition

-- | An optional paramer. The maximum number of results returned per
--   request.
--   
--   Default value: <tt>50</tt>
[$sel:maxResults:SearchPlaceIndexForPosition'] :: SearchPlaceIndexForPosition -> Maybe Natural

-- | The name of the place index resource you want to use for the search.
[$sel:indexName:SearchPlaceIndexForPosition'] :: SearchPlaceIndexForPosition -> Text

-- | Specifies a coordinate for the query defined by a longitude, and
--   latitude.
--   
--   <ul>
--   <li>The first position is the X coordinate, or longitude.</li>
--   <li>The second position is the Y coordinate, or latitude.</li>
--   </ul>
--   
--   For example, <tt>position=xLongitude&amp;position=yLatitude</tt> .
[$sel:position:SearchPlaceIndexForPosition'] :: SearchPlaceIndexForPosition -> Sensitive (NonEmpty Double)

-- | Create a value of <a>SearchPlaceIndexForPosition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxResults:SearchPlaceIndexForPosition'</a>,
--   <a>searchPlaceIndexForPosition_maxResults</a> - An optional paramer.
--   The maximum number of results returned per request.
--   
--   Default value: <tt>50</tt>
--   
--   <a>$sel:indexName:SearchPlaceIndexForPosition'</a>,
--   <a>searchPlaceIndexForPosition_indexName</a> - The name of the place
--   index resource you want to use for the search.
--   
--   <a>$sel:position:SearchPlaceIndexForPosition'</a>,
--   <a>searchPlaceIndexForPosition_position</a> - Specifies a coordinate
--   for the query defined by a longitude, and latitude.
--   
--   <ul>
--   <li>The first position is the X coordinate, or longitude.</li>
--   <li>The second position is the Y coordinate, or latitude.</li>
--   </ul>
--   
--   For example, <tt>position=xLongitude&amp;position=yLatitude</tt> .
newSearchPlaceIndexForPosition :: Text -> NonEmpty Double -> SearchPlaceIndexForPosition

-- | An optional paramer. The maximum number of results returned per
--   request.
--   
--   Default value: <tt>50</tt>
searchPlaceIndexForPosition_maxResults :: Lens' SearchPlaceIndexForPosition (Maybe Natural)

-- | The name of the place index resource you want to use for the search.
searchPlaceIndexForPosition_indexName :: Lens' SearchPlaceIndexForPosition Text

-- | Specifies a coordinate for the query defined by a longitude, and
--   latitude.
--   
--   <ul>
--   <li>The first position is the X coordinate, or longitude.</li>
--   <li>The second position is the Y coordinate, or latitude.</li>
--   </ul>
--   
--   For example, <tt>position=xLongitude&amp;position=yLatitude</tt> .
searchPlaceIndexForPosition_position :: Lens' SearchPlaceIndexForPosition (NonEmpty Double)

-- | <i>See:</i> <a>newSearchPlaceIndexForPositionResponse</a> smart
--   constructor.
data SearchPlaceIndexForPositionResponse
SearchPlaceIndexForPositionResponse' :: Int -> [SearchForPositionResult] -> SearchPlaceIndexForPositionSummary -> SearchPlaceIndexForPositionResponse

-- | The response's http status code.
[$sel:httpStatus:SearchPlaceIndexForPositionResponse'] :: SearchPlaceIndexForPositionResponse -> Int

-- | Returns a list of Places closest to the specified position. Each
--   result contains additional information about the Places returned.
[$sel:results:SearchPlaceIndexForPositionResponse'] :: SearchPlaceIndexForPositionResponse -> [SearchForPositionResult]

-- | Contains a summary of the request.
[$sel:summary:SearchPlaceIndexForPositionResponse'] :: SearchPlaceIndexForPositionResponse -> SearchPlaceIndexForPositionSummary

-- | Create a value of <a>SearchPlaceIndexForPositionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:SearchPlaceIndexForPositionResponse'</a>,
--   <a>searchPlaceIndexForPositionResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:results:SearchPlaceIndexForPositionResponse'</a>,
--   <a>searchPlaceIndexForPositionResponse_results</a> - Returns a list of
--   Places closest to the specified position. Each result contains
--   additional information about the Places returned.
--   
--   <a>$sel:summary:SearchPlaceIndexForPositionResponse'</a>,
--   <a>searchPlaceIndexForPositionResponse_summary</a> - Contains a
--   summary of the request.
newSearchPlaceIndexForPositionResponse :: Int -> SearchPlaceIndexForPositionSummary -> SearchPlaceIndexForPositionResponse

-- | The response's http status code.
searchPlaceIndexForPositionResponse_httpStatus :: Lens' SearchPlaceIndexForPositionResponse Int

-- | Returns a list of Places closest to the specified position. Each
--   result contains additional information about the Places returned.
searchPlaceIndexForPositionResponse_results :: Lens' SearchPlaceIndexForPositionResponse [SearchForPositionResult]

-- | Contains a summary of the request.
searchPlaceIndexForPositionResponse_summary :: Lens' SearchPlaceIndexForPositionResponse SearchPlaceIndexForPositionSummary
instance GHC.Generics.Generic Amazonka.Location.SearchPlaceIndexForPosition.SearchPlaceIndexForPosition
instance GHC.Show.Show Amazonka.Location.SearchPlaceIndexForPosition.SearchPlaceIndexForPosition
instance GHC.Classes.Eq Amazonka.Location.SearchPlaceIndexForPosition.SearchPlaceIndexForPosition
instance GHC.Generics.Generic Amazonka.Location.SearchPlaceIndexForPosition.SearchPlaceIndexForPositionResponse
instance GHC.Show.Show Amazonka.Location.SearchPlaceIndexForPosition.SearchPlaceIndexForPositionResponse
instance GHC.Classes.Eq Amazonka.Location.SearchPlaceIndexForPosition.SearchPlaceIndexForPositionResponse
instance Amazonka.Types.AWSRequest Amazonka.Location.SearchPlaceIndexForPosition.SearchPlaceIndexForPosition
instance Control.DeepSeq.NFData Amazonka.Location.SearchPlaceIndexForPosition.SearchPlaceIndexForPositionResponse
instance Data.Hashable.Class.Hashable Amazonka.Location.SearchPlaceIndexForPosition.SearchPlaceIndexForPosition
instance Control.DeepSeq.NFData Amazonka.Location.SearchPlaceIndexForPosition.SearchPlaceIndexForPosition
instance Amazonka.Data.Headers.ToHeaders Amazonka.Location.SearchPlaceIndexForPosition.SearchPlaceIndexForPosition
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Location.SearchPlaceIndexForPosition.SearchPlaceIndexForPosition
instance Amazonka.Data.Path.ToPath Amazonka.Location.SearchPlaceIndexForPosition.SearchPlaceIndexForPosition
instance Amazonka.Data.Query.ToQuery Amazonka.Location.SearchPlaceIndexForPosition.SearchPlaceIndexForPosition


-- | Stores a geofence geometry in a given geofence collection, or updates
--   the geometry of an existing geofence if a geofence ID is included in
--   the request.
module Amazonka.Location.PutGeofence

-- | <i>See:</i> <a>newPutGeofence</a> smart constructor.
data PutGeofence
PutGeofence' :: Text -> Text -> GeofenceGeometry -> PutGeofence

-- | The geofence collection to store the geofence in.
[$sel:collectionName:PutGeofence'] :: PutGeofence -> Text

-- | An identifier for the geofence. For example,
--   <tt>ExampleGeofence-1</tt>.
[$sel:geofenceId:PutGeofence'] :: PutGeofence -> Text

-- | Contains the polygon details to specify the position of the geofence.
--   
--   Each <a>geofence polygon</a> can have a maximum of 1,000 vertices.
[$sel:geometry:PutGeofence'] :: PutGeofence -> GeofenceGeometry

-- | Create a value of <a>PutGeofence</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:collectionName:PutGeofence'</a>,
--   <a>putGeofence_collectionName</a> - The geofence collection to store
--   the geofence in.
--   
--   <a>$sel:geofenceId:PutGeofence'</a>, <a>putGeofence_geofenceId</a> -
--   An identifier for the geofence. For example,
--   <tt>ExampleGeofence-1</tt>.
--   
--   <a>$sel:geometry:PutGeofence'</a>, <a>putGeofence_geometry</a> -
--   Contains the polygon details to specify the position of the geofence.
--   
--   Each <a>geofence polygon</a> can have a maximum of 1,000 vertices.
newPutGeofence :: Text -> Text -> GeofenceGeometry -> PutGeofence

-- | The geofence collection to store the geofence in.
putGeofence_collectionName :: Lens' PutGeofence Text

-- | An identifier for the geofence. For example,
--   <tt>ExampleGeofence-1</tt>.
putGeofence_geofenceId :: Lens' PutGeofence Text

-- | Contains the polygon details to specify the position of the geofence.
--   
--   Each <a>geofence polygon</a> can have a maximum of 1,000 vertices.
putGeofence_geometry :: Lens' PutGeofence GeofenceGeometry

-- | <i>See:</i> <a>newPutGeofenceResponse</a> smart constructor.
data PutGeofenceResponse
PutGeofenceResponse' :: Int -> POSIX -> Text -> POSIX -> PutGeofenceResponse

-- | The response's http status code.
[$sel:httpStatus:PutGeofenceResponse'] :: PutGeofenceResponse -> Int

-- | The timestamp for when the geofence was created in <a>ISO 8601</a>
--   format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
[$sel:createTime:PutGeofenceResponse'] :: PutGeofenceResponse -> POSIX

-- | The geofence identifier entered in the request.
[$sel:geofenceId:PutGeofenceResponse'] :: PutGeofenceResponse -> Text

-- | The timestamp for when the geofence was last updated in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
[$sel:updateTime:PutGeofenceResponse'] :: PutGeofenceResponse -> POSIX

-- | Create a value of <a>PutGeofenceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:PutGeofenceResponse'</a>,
--   <a>putGeofenceResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:createTime:PutGeofenceResponse'</a>,
--   <a>putGeofenceResponse_createTime</a> - The timestamp for when the
--   geofence was created in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
--   
--   <a>$sel:geofenceId:PutGeofence'</a>,
--   <a>putGeofenceResponse_geofenceId</a> - The geofence identifier
--   entered in the request.
--   
--   <a>$sel:updateTime:PutGeofenceResponse'</a>,
--   <a>putGeofenceResponse_updateTime</a> - The timestamp for when the
--   geofence was last updated in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
newPutGeofenceResponse :: Int -> UTCTime -> Text -> UTCTime -> PutGeofenceResponse

-- | The response's http status code.
putGeofenceResponse_httpStatus :: Lens' PutGeofenceResponse Int

-- | The timestamp for when the geofence was created in <a>ISO 8601</a>
--   format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
putGeofenceResponse_createTime :: Lens' PutGeofenceResponse UTCTime

-- | The geofence identifier entered in the request.
putGeofenceResponse_geofenceId :: Lens' PutGeofenceResponse Text

-- | The timestamp for when the geofence was last updated in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
putGeofenceResponse_updateTime :: Lens' PutGeofenceResponse UTCTime
instance GHC.Generics.Generic Amazonka.Location.PutGeofence.PutGeofence
instance GHC.Show.Show Amazonka.Location.PutGeofence.PutGeofence
instance GHC.Classes.Eq Amazonka.Location.PutGeofence.PutGeofence
instance GHC.Generics.Generic Amazonka.Location.PutGeofence.PutGeofenceResponse
instance GHC.Show.Show Amazonka.Location.PutGeofence.PutGeofenceResponse
instance GHC.Read.Read Amazonka.Location.PutGeofence.PutGeofenceResponse
instance GHC.Classes.Eq Amazonka.Location.PutGeofence.PutGeofenceResponse
instance Amazonka.Types.AWSRequest Amazonka.Location.PutGeofence.PutGeofence
instance Control.DeepSeq.NFData Amazonka.Location.PutGeofence.PutGeofenceResponse
instance Data.Hashable.Class.Hashable Amazonka.Location.PutGeofence.PutGeofence
instance Control.DeepSeq.NFData Amazonka.Location.PutGeofence.PutGeofence
instance Amazonka.Data.Headers.ToHeaders Amazonka.Location.PutGeofence.PutGeofence
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Location.PutGeofence.PutGeofence
instance Amazonka.Data.Path.ToPath Amazonka.Location.PutGeofence.PutGeofence
instance Amazonka.Data.Query.ToQuery Amazonka.Location.PutGeofence.PutGeofence


-- | Lists tracker resources in your AWS account.
--   
--   This operation returns paginated results.
module Amazonka.Location.ListTrackers

-- | <i>See:</i> <a>newListTrackers</a> smart constructor.
data ListTrackers
ListTrackers' :: Maybe Text -> Maybe Natural -> ListTrackers

-- | The pagination token specifying which page of results to return in the
--   response. If no token is provided, the default page is the first page.
--   
--   Default value: <tt>null</tt>
[$sel:nextToken:ListTrackers'] :: ListTrackers -> Maybe Text

-- | An optional limit for the number of resources returned in a single
--   call.
--   
--   Default value: <tt>100</tt>
[$sel:maxResults:ListTrackers'] :: ListTrackers -> Maybe Natural

-- | Create a value of <a>ListTrackers</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTrackers'</a>, <a>listTrackers_nextToken</a> -
--   The pagination token specifying which page of results to return in the
--   response. If no token is provided, the default page is the first page.
--   
--   Default value: <tt>null</tt>
--   
--   <a>$sel:maxResults:ListTrackers'</a>, <a>listTrackers_maxResults</a> -
--   An optional limit for the number of resources returned in a single
--   call.
--   
--   Default value: <tt>100</tt>
newListTrackers :: ListTrackers

-- | The pagination token specifying which page of results to return in the
--   response. If no token is provided, the default page is the first page.
--   
--   Default value: <tt>null</tt>
listTrackers_nextToken :: Lens' ListTrackers (Maybe Text)

-- | An optional limit for the number of resources returned in a single
--   call.
--   
--   Default value: <tt>100</tt>
listTrackers_maxResults :: Lens' ListTrackers (Maybe Natural)

-- | <i>See:</i> <a>newListTrackersResponse</a> smart constructor.
data ListTrackersResponse
ListTrackersResponse' :: Maybe Text -> Int -> [ListTrackersResponseEntry] -> ListTrackersResponse

-- | A pagination token indicating there are additional pages available.
--   You can use the token in a following request to fetch the next set of
--   results.
[$sel:nextToken:ListTrackersResponse'] :: ListTrackersResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListTrackersResponse'] :: ListTrackersResponse -> Int

-- | Contains tracker resources in your AWS account. Details include
--   tracker name, description and timestamps for when the tracker was
--   created and last updated.
[$sel:entries:ListTrackersResponse'] :: ListTrackersResponse -> [ListTrackersResponseEntry]

-- | Create a value of <a>ListTrackersResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTrackers'</a>,
--   <a>listTrackersResponse_nextToken</a> - A pagination token indicating
--   there are additional pages available. You can use the token in a
--   following request to fetch the next set of results.
--   
--   <a>$sel:httpStatus:ListTrackersResponse'</a>,
--   <a>listTrackersResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:entries:ListTrackersResponse'</a>,
--   <a>listTrackersResponse_entries</a> - Contains tracker resources in
--   your AWS account. Details include tracker name, description and
--   timestamps for when the tracker was created and last updated.
newListTrackersResponse :: Int -> ListTrackersResponse

-- | A pagination token indicating there are additional pages available.
--   You can use the token in a following request to fetch the next set of
--   results.
listTrackersResponse_nextToken :: Lens' ListTrackersResponse (Maybe Text)

-- | The response's http status code.
listTrackersResponse_httpStatus :: Lens' ListTrackersResponse Int

-- | Contains tracker resources in your AWS account. Details include
--   tracker name, description and timestamps for when the tracker was
--   created and last updated.
listTrackersResponse_entries :: Lens' ListTrackersResponse [ListTrackersResponseEntry]
instance GHC.Generics.Generic Amazonka.Location.ListTrackers.ListTrackers
instance GHC.Show.Show Amazonka.Location.ListTrackers.ListTrackers
instance GHC.Read.Read Amazonka.Location.ListTrackers.ListTrackers
instance GHC.Classes.Eq Amazonka.Location.ListTrackers.ListTrackers
instance GHC.Generics.Generic Amazonka.Location.ListTrackers.ListTrackersResponse
instance GHC.Show.Show Amazonka.Location.ListTrackers.ListTrackersResponse
instance GHC.Read.Read Amazonka.Location.ListTrackers.ListTrackersResponse
instance GHC.Classes.Eq Amazonka.Location.ListTrackers.ListTrackersResponse
instance Amazonka.Types.AWSRequest Amazonka.Location.ListTrackers.ListTrackers
instance Control.DeepSeq.NFData Amazonka.Location.ListTrackers.ListTrackersResponse
instance Amazonka.Pager.AWSPager Amazonka.Location.ListTrackers.ListTrackers
instance Data.Hashable.Class.Hashable Amazonka.Location.ListTrackers.ListTrackers
instance Control.DeepSeq.NFData Amazonka.Location.ListTrackers.ListTrackers
instance Amazonka.Data.Headers.ToHeaders Amazonka.Location.ListTrackers.ListTrackers
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Location.ListTrackers.ListTrackers
instance Amazonka.Data.Path.ToPath Amazonka.Location.ListTrackers.ListTrackers
instance Amazonka.Data.Query.ToQuery Amazonka.Location.ListTrackers.ListTrackers


-- | Lists geofence collections currently associated to the given tracker
--   resource.
--   
--   This operation returns paginated results.
module Amazonka.Location.ListTrackerConsumers

-- | <i>See:</i> <a>newListTrackerConsumers</a> smart constructor.
data ListTrackerConsumers
ListTrackerConsumers' :: Maybe Text -> Maybe Natural -> Text -> ListTrackerConsumers

-- | The pagination token specifying which page of results to return in the
--   response. If no token is provided, the default page is the first page.
--   
--   Default value: <tt>null</tt>
[$sel:nextToken:ListTrackerConsumers'] :: ListTrackerConsumers -> Maybe Text

-- | An optional limit for the number of resources returned in a single
--   call.
--   
--   Default value: <tt>100</tt>
[$sel:maxResults:ListTrackerConsumers'] :: ListTrackerConsumers -> Maybe Natural

-- | The tracker resource whose associated geofence collections you want to
--   list.
[$sel:trackerName:ListTrackerConsumers'] :: ListTrackerConsumers -> Text

-- | Create a value of <a>ListTrackerConsumers</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTrackerConsumers'</a>,
--   <a>listTrackerConsumers_nextToken</a> - The pagination token
--   specifying which page of results to return in the response. If no
--   token is provided, the default page is the first page.
--   
--   Default value: <tt>null</tt>
--   
--   <a>$sel:maxResults:ListTrackerConsumers'</a>,
--   <a>listTrackerConsumers_maxResults</a> - An optional limit for the
--   number of resources returned in a single call.
--   
--   Default value: <tt>100</tt>
--   
--   <a>$sel:trackerName:ListTrackerConsumers'</a>,
--   <a>listTrackerConsumers_trackerName</a> - The tracker resource whose
--   associated geofence collections you want to list.
newListTrackerConsumers :: Text -> ListTrackerConsumers

-- | The pagination token specifying which page of results to return in the
--   response. If no token is provided, the default page is the first page.
--   
--   Default value: <tt>null</tt>
listTrackerConsumers_nextToken :: Lens' ListTrackerConsumers (Maybe Text)

-- | An optional limit for the number of resources returned in a single
--   call.
--   
--   Default value: <tt>100</tt>
listTrackerConsumers_maxResults :: Lens' ListTrackerConsumers (Maybe Natural)

-- | The tracker resource whose associated geofence collections you want to
--   list.
listTrackerConsumers_trackerName :: Lens' ListTrackerConsumers Text

-- | <i>See:</i> <a>newListTrackerConsumersResponse</a> smart constructor.
data ListTrackerConsumersResponse
ListTrackerConsumersResponse' :: Maybe Text -> Int -> [Text] -> ListTrackerConsumersResponse

-- | A pagination token indicating there are additional pages available.
--   You can use the token in a following request to fetch the next set of
--   results.
[$sel:nextToken:ListTrackerConsumersResponse'] :: ListTrackerConsumersResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListTrackerConsumersResponse'] :: ListTrackerConsumersResponse -> Int

-- | Contains the list of geofence collection ARNs associated to the
--   tracker resource.
[$sel:consumerArns:ListTrackerConsumersResponse'] :: ListTrackerConsumersResponse -> [Text]

-- | Create a value of <a>ListTrackerConsumersResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTrackerConsumers'</a>,
--   <a>listTrackerConsumersResponse_nextToken</a> - A pagination token
--   indicating there are additional pages available. You can use the token
--   in a following request to fetch the next set of results.
--   
--   <a>$sel:httpStatus:ListTrackerConsumersResponse'</a>,
--   <a>listTrackerConsumersResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:consumerArns:ListTrackerConsumersResponse'</a>,
--   <a>listTrackerConsumersResponse_consumerArns</a> - Contains the list
--   of geofence collection ARNs associated to the tracker resource.
newListTrackerConsumersResponse :: Int -> ListTrackerConsumersResponse

-- | A pagination token indicating there are additional pages available.
--   You can use the token in a following request to fetch the next set of
--   results.
listTrackerConsumersResponse_nextToken :: Lens' ListTrackerConsumersResponse (Maybe Text)

-- | The response's http status code.
listTrackerConsumersResponse_httpStatus :: Lens' ListTrackerConsumersResponse Int

-- | Contains the list of geofence collection ARNs associated to the
--   tracker resource.
listTrackerConsumersResponse_consumerArns :: Lens' ListTrackerConsumersResponse [Text]
instance GHC.Generics.Generic Amazonka.Location.ListTrackerConsumers.ListTrackerConsumers
instance GHC.Show.Show Amazonka.Location.ListTrackerConsumers.ListTrackerConsumers
instance GHC.Read.Read Amazonka.Location.ListTrackerConsumers.ListTrackerConsumers
instance GHC.Classes.Eq Amazonka.Location.ListTrackerConsumers.ListTrackerConsumers
instance GHC.Generics.Generic Amazonka.Location.ListTrackerConsumers.ListTrackerConsumersResponse
instance GHC.Show.Show Amazonka.Location.ListTrackerConsumers.ListTrackerConsumersResponse
instance GHC.Read.Read Amazonka.Location.ListTrackerConsumers.ListTrackerConsumersResponse
instance GHC.Classes.Eq Amazonka.Location.ListTrackerConsumers.ListTrackerConsumersResponse
instance Amazonka.Types.AWSRequest Amazonka.Location.ListTrackerConsumers.ListTrackerConsumers
instance Control.DeepSeq.NFData Amazonka.Location.ListTrackerConsumers.ListTrackerConsumersResponse
instance Amazonka.Pager.AWSPager Amazonka.Location.ListTrackerConsumers.ListTrackerConsumers
instance Data.Hashable.Class.Hashable Amazonka.Location.ListTrackerConsumers.ListTrackerConsumers
instance Control.DeepSeq.NFData Amazonka.Location.ListTrackerConsumers.ListTrackerConsumers
instance Amazonka.Data.Headers.ToHeaders Amazonka.Location.ListTrackerConsumers.ListTrackerConsumers
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Location.ListTrackerConsumers.ListTrackerConsumers
instance Amazonka.Data.Path.ToPath Amazonka.Location.ListTrackerConsumers.ListTrackerConsumers
instance Amazonka.Data.Query.ToQuery Amazonka.Location.ListTrackerConsumers.ListTrackerConsumers


-- | Returns a list of tags that are applied to the specified Amazon
--   Location resource.
module Amazonka.Location.ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | The Amazon Resource Name (ARN) of the resource whose tags you want to
--   retrieve.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:resourcetype/ExampleResource</tt></li>
--   </ul>
[$sel:resourceArn:ListTagsForResource'] :: ListTagsForResource -> Text

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The Amazon Resource Name
--   (ARN) of the resource whose tags you want to retrieve.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:resourcetype/ExampleResource</tt></li>
--   </ul>
newListTagsForResource :: Text -> ListTagsForResource

-- | The Amazon Resource Name (ARN) of the resource whose tags you want to
--   retrieve.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:resourcetype/ExampleResource</tt></li>
--   </ul>
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe (HashMap Text Text) -> Int -> ListTagsForResourceResponse

-- | Tags that have been applied to the specified resource. Tags are mapped
--   from the tag key to the tag value: <tt>"TagKey" : "TagValue"</tt>.
--   
--   <ul>
--   <li>Format example: <tt>{"tag1" : "value1", "tag2" : "value2"}
--   </tt></li>
--   </ul>
[$sel:tags:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Int

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - Tags that have been applied
--   to the specified resource. Tags are mapped from the tag key to the tag
--   value: <tt>"TagKey" : "TagValue"</tt>.
--   
--   <ul>
--   <li>Format example: <tt>{"tag1" : "value1", "tag2" : "value2"}
--   </tt></li>
--   </ul>
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | Tags that have been applied to the specified resource. Tags are mapped
--   from the tag key to the tag value: <tt>"TagKey" : "TagValue"</tt>.
--   
--   <ul>
--   <li>Format example: <tt>{"tag1" : "value1", "tag2" : "value2"}
--   </tt></li>
--   </ul>
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int
instance GHC.Generics.Generic Amazonka.Location.ListTagsForResource.ListTagsForResource
instance GHC.Show.Show Amazonka.Location.ListTagsForResource.ListTagsForResource
instance GHC.Read.Read Amazonka.Location.ListTagsForResource.ListTagsForResource
instance GHC.Classes.Eq Amazonka.Location.ListTagsForResource.ListTagsForResource
instance GHC.Generics.Generic Amazonka.Location.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Show.Show Amazonka.Location.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Read.Read Amazonka.Location.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Classes.Eq Amazonka.Location.ListTagsForResource.ListTagsForResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.Location.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Amazonka.Location.ListTagsForResource.ListTagsForResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.Location.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Amazonka.Location.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.Location.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Path.ToPath Amazonka.Location.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Query.ToQuery Amazonka.Location.ListTagsForResource.ListTagsForResource


-- | Lists route calculator resources in your AWS account.
--   
--   This operation returns paginated results.
module Amazonka.Location.ListRouteCalculators

-- | <i>See:</i> <a>newListRouteCalculators</a> smart constructor.
data ListRouteCalculators
ListRouteCalculators' :: Maybe Text -> Maybe Natural -> ListRouteCalculators

-- | The pagination token specifying which page of results to return in the
--   response. If no token is provided, the default page is the first page.
--   
--   Default Value: <tt>null</tt>
[$sel:nextToken:ListRouteCalculators'] :: ListRouteCalculators -> Maybe Text

-- | An optional maximum number of results returned in a single call.
--   
--   Default Value: <tt>100</tt>
[$sel:maxResults:ListRouteCalculators'] :: ListRouteCalculators -> Maybe Natural

-- | Create a value of <a>ListRouteCalculators</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListRouteCalculators'</a>,
--   <a>listRouteCalculators_nextToken</a> - The pagination token
--   specifying which page of results to return in the response. If no
--   token is provided, the default page is the first page.
--   
--   Default Value: <tt>null</tt>
--   
--   <a>$sel:maxResults:ListRouteCalculators'</a>,
--   <a>listRouteCalculators_maxResults</a> - An optional maximum number of
--   results returned in a single call.
--   
--   Default Value: <tt>100</tt>
newListRouteCalculators :: ListRouteCalculators

-- | The pagination token specifying which page of results to return in the
--   response. If no token is provided, the default page is the first page.
--   
--   Default Value: <tt>null</tt>
listRouteCalculators_nextToken :: Lens' ListRouteCalculators (Maybe Text)

-- | An optional maximum number of results returned in a single call.
--   
--   Default Value: <tt>100</tt>
listRouteCalculators_maxResults :: Lens' ListRouteCalculators (Maybe Natural)

-- | <i>See:</i> <a>newListRouteCalculatorsResponse</a> smart constructor.
data ListRouteCalculatorsResponse
ListRouteCalculatorsResponse' :: Maybe Text -> Int -> [ListRouteCalculatorsResponseEntry] -> ListRouteCalculatorsResponse

-- | A pagination token indicating there are additional pages available.
--   You can use the token in a subsequent request to fetch the next set of
--   results.
[$sel:nextToken:ListRouteCalculatorsResponse'] :: ListRouteCalculatorsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListRouteCalculatorsResponse'] :: ListRouteCalculatorsResponse -> Int

-- | Lists the route calculator resources that exist in your AWS account
[$sel:entries:ListRouteCalculatorsResponse'] :: ListRouteCalculatorsResponse -> [ListRouteCalculatorsResponseEntry]

-- | Create a value of <a>ListRouteCalculatorsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListRouteCalculators'</a>,
--   <a>listRouteCalculatorsResponse_nextToken</a> - A pagination token
--   indicating there are additional pages available. You can use the token
--   in a subsequent request to fetch the next set of results.
--   
--   <a>$sel:httpStatus:ListRouteCalculatorsResponse'</a>,
--   <a>listRouteCalculatorsResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:entries:ListRouteCalculatorsResponse'</a>,
--   <a>listRouteCalculatorsResponse_entries</a> - Lists the route
--   calculator resources that exist in your AWS account
newListRouteCalculatorsResponse :: Int -> ListRouteCalculatorsResponse

-- | A pagination token indicating there are additional pages available.
--   You can use the token in a subsequent request to fetch the next set of
--   results.
listRouteCalculatorsResponse_nextToken :: Lens' ListRouteCalculatorsResponse (Maybe Text)

-- | The response's http status code.
listRouteCalculatorsResponse_httpStatus :: Lens' ListRouteCalculatorsResponse Int

-- | Lists the route calculator resources that exist in your AWS account
listRouteCalculatorsResponse_entries :: Lens' ListRouteCalculatorsResponse [ListRouteCalculatorsResponseEntry]
instance GHC.Generics.Generic Amazonka.Location.ListRouteCalculators.ListRouteCalculators
instance GHC.Show.Show Amazonka.Location.ListRouteCalculators.ListRouteCalculators
instance GHC.Read.Read Amazonka.Location.ListRouteCalculators.ListRouteCalculators
instance GHC.Classes.Eq Amazonka.Location.ListRouteCalculators.ListRouteCalculators
instance GHC.Generics.Generic Amazonka.Location.ListRouteCalculators.ListRouteCalculatorsResponse
instance GHC.Show.Show Amazonka.Location.ListRouteCalculators.ListRouteCalculatorsResponse
instance GHC.Read.Read Amazonka.Location.ListRouteCalculators.ListRouteCalculatorsResponse
instance GHC.Classes.Eq Amazonka.Location.ListRouteCalculators.ListRouteCalculatorsResponse
instance Amazonka.Types.AWSRequest Amazonka.Location.ListRouteCalculators.ListRouteCalculators
instance Control.DeepSeq.NFData Amazonka.Location.ListRouteCalculators.ListRouteCalculatorsResponse
instance Amazonka.Pager.AWSPager Amazonka.Location.ListRouteCalculators.ListRouteCalculators
instance Data.Hashable.Class.Hashable Amazonka.Location.ListRouteCalculators.ListRouteCalculators
instance Control.DeepSeq.NFData Amazonka.Location.ListRouteCalculators.ListRouteCalculators
instance Amazonka.Data.Headers.ToHeaders Amazonka.Location.ListRouteCalculators.ListRouteCalculators
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Location.ListRouteCalculators.ListRouteCalculators
instance Amazonka.Data.Path.ToPath Amazonka.Location.ListRouteCalculators.ListRouteCalculators
instance Amazonka.Data.Query.ToQuery Amazonka.Location.ListRouteCalculators.ListRouteCalculators


-- | Lists place index resources in your AWS account.
--   
--   This operation returns paginated results.
module Amazonka.Location.ListPlaceIndexes

-- | <i>See:</i> <a>newListPlaceIndexes</a> smart constructor.
data ListPlaceIndexes
ListPlaceIndexes' :: Maybe Text -> Maybe Natural -> ListPlaceIndexes

-- | The pagination token specifying which page of results to return in the
--   response. If no token is provided, the default page is the first page.
--   
--   Default value: <tt>null</tt>
[$sel:nextToken:ListPlaceIndexes'] :: ListPlaceIndexes -> Maybe Text

-- | An optional limit for the maximum number of results returned in a
--   single call.
--   
--   Default value: <tt>100</tt>
[$sel:maxResults:ListPlaceIndexes'] :: ListPlaceIndexes -> Maybe Natural

-- | Create a value of <a>ListPlaceIndexes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListPlaceIndexes'</a>,
--   <a>listPlaceIndexes_nextToken</a> - The pagination token specifying
--   which page of results to return in the response. If no token is
--   provided, the default page is the first page.
--   
--   Default value: <tt>null</tt>
--   
--   <a>$sel:maxResults:ListPlaceIndexes'</a>,
--   <a>listPlaceIndexes_maxResults</a> - An optional limit for the maximum
--   number of results returned in a single call.
--   
--   Default value: <tt>100</tt>
newListPlaceIndexes :: ListPlaceIndexes

-- | The pagination token specifying which page of results to return in the
--   response. If no token is provided, the default page is the first page.
--   
--   Default value: <tt>null</tt>
listPlaceIndexes_nextToken :: Lens' ListPlaceIndexes (Maybe Text)

-- | An optional limit for the maximum number of results returned in a
--   single call.
--   
--   Default value: <tt>100</tt>
listPlaceIndexes_maxResults :: Lens' ListPlaceIndexes (Maybe Natural)

-- | <i>See:</i> <a>newListPlaceIndexesResponse</a> smart constructor.
data ListPlaceIndexesResponse
ListPlaceIndexesResponse' :: Maybe Text -> Int -> [ListPlaceIndexesResponseEntry] -> ListPlaceIndexesResponse

-- | A pagination token indicating there are additional pages available.
--   You can use the token in a following request to fetch the next set of
--   results.
[$sel:nextToken:ListPlaceIndexesResponse'] :: ListPlaceIndexesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListPlaceIndexesResponse'] :: ListPlaceIndexesResponse -> Int

-- | Lists the place index resources that exist in your AWS account
[$sel:entries:ListPlaceIndexesResponse'] :: ListPlaceIndexesResponse -> [ListPlaceIndexesResponseEntry]

-- | Create a value of <a>ListPlaceIndexesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListPlaceIndexes'</a>,
--   <a>listPlaceIndexesResponse_nextToken</a> - A pagination token
--   indicating there are additional pages available. You can use the token
--   in a following request to fetch the next set of results.
--   
--   <a>$sel:httpStatus:ListPlaceIndexesResponse'</a>,
--   <a>listPlaceIndexesResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:entries:ListPlaceIndexesResponse'</a>,
--   <a>listPlaceIndexesResponse_entries</a> - Lists the place index
--   resources that exist in your AWS account
newListPlaceIndexesResponse :: Int -> ListPlaceIndexesResponse

-- | A pagination token indicating there are additional pages available.
--   You can use the token in a following request to fetch the next set of
--   results.
listPlaceIndexesResponse_nextToken :: Lens' ListPlaceIndexesResponse (Maybe Text)

-- | The response's http status code.
listPlaceIndexesResponse_httpStatus :: Lens' ListPlaceIndexesResponse Int

-- | Lists the place index resources that exist in your AWS account
listPlaceIndexesResponse_entries :: Lens' ListPlaceIndexesResponse [ListPlaceIndexesResponseEntry]
instance GHC.Generics.Generic Amazonka.Location.ListPlaceIndexes.ListPlaceIndexes
instance GHC.Show.Show Amazonka.Location.ListPlaceIndexes.ListPlaceIndexes
instance GHC.Read.Read Amazonka.Location.ListPlaceIndexes.ListPlaceIndexes
instance GHC.Classes.Eq Amazonka.Location.ListPlaceIndexes.ListPlaceIndexes
instance GHC.Generics.Generic Amazonka.Location.ListPlaceIndexes.ListPlaceIndexesResponse
instance GHC.Show.Show Amazonka.Location.ListPlaceIndexes.ListPlaceIndexesResponse
instance GHC.Read.Read Amazonka.Location.ListPlaceIndexes.ListPlaceIndexesResponse
instance GHC.Classes.Eq Amazonka.Location.ListPlaceIndexes.ListPlaceIndexesResponse
instance Amazonka.Types.AWSRequest Amazonka.Location.ListPlaceIndexes.ListPlaceIndexes
instance Control.DeepSeq.NFData Amazonka.Location.ListPlaceIndexes.ListPlaceIndexesResponse
instance Amazonka.Pager.AWSPager Amazonka.Location.ListPlaceIndexes.ListPlaceIndexes
instance Data.Hashable.Class.Hashable Amazonka.Location.ListPlaceIndexes.ListPlaceIndexes
instance Control.DeepSeq.NFData Amazonka.Location.ListPlaceIndexes.ListPlaceIndexes
instance Amazonka.Data.Headers.ToHeaders Amazonka.Location.ListPlaceIndexes.ListPlaceIndexes
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Location.ListPlaceIndexes.ListPlaceIndexes
instance Amazonka.Data.Path.ToPath Amazonka.Location.ListPlaceIndexes.ListPlaceIndexes
instance Amazonka.Data.Query.ToQuery Amazonka.Location.ListPlaceIndexes.ListPlaceIndexes


-- | Lists map resources in your AWS account.
--   
--   This operation returns paginated results.
module Amazonka.Location.ListMaps

-- | <i>See:</i> <a>newListMaps</a> smart constructor.
data ListMaps
ListMaps' :: Maybe Text -> Maybe Natural -> ListMaps

-- | The pagination token specifying which page of results to return in the
--   response. If no token is provided, the default page is the first page.
--   
--   Default value: <tt>null</tt>
[$sel:nextToken:ListMaps'] :: ListMaps -> Maybe Text

-- | An optional limit for the number of resources returned in a single
--   call.
--   
--   Default value: <tt>100</tt>
[$sel:maxResults:ListMaps'] :: ListMaps -> Maybe Natural

-- | Create a value of <a>ListMaps</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListMaps'</a>, <a>listMaps_nextToken</a> - The
--   pagination token specifying which page of results to return in the
--   response. If no token is provided, the default page is the first page.
--   
--   Default value: <tt>null</tt>
--   
--   <a>$sel:maxResults:ListMaps'</a>, <a>listMaps_maxResults</a> - An
--   optional limit for the number of resources returned in a single call.
--   
--   Default value: <tt>100</tt>
newListMaps :: ListMaps

-- | The pagination token specifying which page of results to return in the
--   response. If no token is provided, the default page is the first page.
--   
--   Default value: <tt>null</tt>
listMaps_nextToken :: Lens' ListMaps (Maybe Text)

-- | An optional limit for the number of resources returned in a single
--   call.
--   
--   Default value: <tt>100</tt>
listMaps_maxResults :: Lens' ListMaps (Maybe Natural)

-- | <i>See:</i> <a>newListMapsResponse</a> smart constructor.
data ListMapsResponse
ListMapsResponse' :: Maybe Text -> Int -> [ListMapsResponseEntry] -> ListMapsResponse

-- | A pagination token indicating there are additional pages available.
--   You can use the token in a following request to fetch the next set of
--   results.
[$sel:nextToken:ListMapsResponse'] :: ListMapsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListMapsResponse'] :: ListMapsResponse -> Int

-- | Contains a list of maps in your AWS account
[$sel:entries:ListMapsResponse'] :: ListMapsResponse -> [ListMapsResponseEntry]

-- | Create a value of <a>ListMapsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListMaps'</a>, <a>listMapsResponse_nextToken</a> - A
--   pagination token indicating there are additional pages available. You
--   can use the token in a following request to fetch the next set of
--   results.
--   
--   <a>$sel:httpStatus:ListMapsResponse'</a>,
--   <a>listMapsResponse_httpStatus</a> - The response's http status code.
--   
--   <a>$sel:entries:ListMapsResponse'</a>, <a>listMapsResponse_entries</a>
--   - Contains a list of maps in your AWS account
newListMapsResponse :: Int -> ListMapsResponse

-- | A pagination token indicating there are additional pages available.
--   You can use the token in a following request to fetch the next set of
--   results.
listMapsResponse_nextToken :: Lens' ListMapsResponse (Maybe Text)

-- | The response's http status code.
listMapsResponse_httpStatus :: Lens' ListMapsResponse Int

-- | Contains a list of maps in your AWS account
listMapsResponse_entries :: Lens' ListMapsResponse [ListMapsResponseEntry]
instance GHC.Generics.Generic Amazonka.Location.ListMaps.ListMaps
instance GHC.Show.Show Amazonka.Location.ListMaps.ListMaps
instance GHC.Read.Read Amazonka.Location.ListMaps.ListMaps
instance GHC.Classes.Eq Amazonka.Location.ListMaps.ListMaps
instance GHC.Generics.Generic Amazonka.Location.ListMaps.ListMapsResponse
instance GHC.Show.Show Amazonka.Location.ListMaps.ListMapsResponse
instance GHC.Read.Read Amazonka.Location.ListMaps.ListMapsResponse
instance GHC.Classes.Eq Amazonka.Location.ListMaps.ListMapsResponse
instance Amazonka.Types.AWSRequest Amazonka.Location.ListMaps.ListMaps
instance Control.DeepSeq.NFData Amazonka.Location.ListMaps.ListMapsResponse
instance Amazonka.Pager.AWSPager Amazonka.Location.ListMaps.ListMaps
instance Data.Hashable.Class.Hashable Amazonka.Location.ListMaps.ListMaps
instance Control.DeepSeq.NFData Amazonka.Location.ListMaps.ListMaps
instance Amazonka.Data.Headers.ToHeaders Amazonka.Location.ListMaps.ListMaps
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Location.ListMaps.ListMaps
instance Amazonka.Data.Path.ToPath Amazonka.Location.ListMaps.ListMaps
instance Amazonka.Data.Query.ToQuery Amazonka.Location.ListMaps.ListMaps


-- | Lists geofences stored in a given geofence collection.
--   
--   This operation returns paginated results.
module Amazonka.Location.ListGeofences

-- | <i>See:</i> <a>newListGeofences</a> smart constructor.
data ListGeofences
ListGeofences' :: Maybe Text -> Text -> ListGeofences

-- | The pagination token specifying which page of results to return in the
--   response. If no token is provided, the default page is the first page.
--   
--   Default value: <tt>null</tt>
[$sel:nextToken:ListGeofences'] :: ListGeofences -> Maybe Text

-- | The name of the geofence collection storing the list of geofences.
[$sel:collectionName:ListGeofences'] :: ListGeofences -> Text

-- | Create a value of <a>ListGeofences</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListGeofences'</a>, <a>listGeofences_nextToken</a> -
--   The pagination token specifying which page of results to return in the
--   response. If no token is provided, the default page is the first page.
--   
--   Default value: <tt>null</tt>
--   
--   <a>$sel:collectionName:ListGeofences'</a>,
--   <a>listGeofences_collectionName</a> - The name of the geofence
--   collection storing the list of geofences.
newListGeofences :: Text -> ListGeofences

-- | The pagination token specifying which page of results to return in the
--   response. If no token is provided, the default page is the first page.
--   
--   Default value: <tt>null</tt>
listGeofences_nextToken :: Lens' ListGeofences (Maybe Text)

-- | The name of the geofence collection storing the list of geofences.
listGeofences_collectionName :: Lens' ListGeofences Text

-- | <i>See:</i> <a>newListGeofencesResponse</a> smart constructor.
data ListGeofencesResponse
ListGeofencesResponse' :: Maybe Text -> Int -> [ListGeofenceResponseEntry] -> ListGeofencesResponse

-- | A pagination token indicating there are additional pages available.
--   You can use the token in a following request to fetch the next set of
--   results.
[$sel:nextToken:ListGeofencesResponse'] :: ListGeofencesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListGeofencesResponse'] :: ListGeofencesResponse -> Int

-- | Contains a list of geofences stored in the geofence collection.
[$sel:entries:ListGeofencesResponse'] :: ListGeofencesResponse -> [ListGeofenceResponseEntry]

-- | Create a value of <a>ListGeofencesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListGeofences'</a>,
--   <a>listGeofencesResponse_nextToken</a> - A pagination token indicating
--   there are additional pages available. You can use the token in a
--   following request to fetch the next set of results.
--   
--   <a>$sel:httpStatus:ListGeofencesResponse'</a>,
--   <a>listGeofencesResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:entries:ListGeofencesResponse'</a>,
--   <a>listGeofencesResponse_entries</a> - Contains a list of geofences
--   stored in the geofence collection.
newListGeofencesResponse :: Int -> ListGeofencesResponse

-- | A pagination token indicating there are additional pages available.
--   You can use the token in a following request to fetch the next set of
--   results.
listGeofencesResponse_nextToken :: Lens' ListGeofencesResponse (Maybe Text)

-- | The response's http status code.
listGeofencesResponse_httpStatus :: Lens' ListGeofencesResponse Int

-- | Contains a list of geofences stored in the geofence collection.
listGeofencesResponse_entries :: Lens' ListGeofencesResponse [ListGeofenceResponseEntry]
instance GHC.Generics.Generic Amazonka.Location.ListGeofences.ListGeofences
instance GHC.Show.Show Amazonka.Location.ListGeofences.ListGeofences
instance GHC.Read.Read Amazonka.Location.ListGeofences.ListGeofences
instance GHC.Classes.Eq Amazonka.Location.ListGeofences.ListGeofences
instance GHC.Generics.Generic Amazonka.Location.ListGeofences.ListGeofencesResponse
instance GHC.Show.Show Amazonka.Location.ListGeofences.ListGeofencesResponse
instance GHC.Classes.Eq Amazonka.Location.ListGeofences.ListGeofencesResponse
instance Amazonka.Types.AWSRequest Amazonka.Location.ListGeofences.ListGeofences
instance Control.DeepSeq.NFData Amazonka.Location.ListGeofences.ListGeofencesResponse
instance Amazonka.Pager.AWSPager Amazonka.Location.ListGeofences.ListGeofences
instance Data.Hashable.Class.Hashable Amazonka.Location.ListGeofences.ListGeofences
instance Control.DeepSeq.NFData Amazonka.Location.ListGeofences.ListGeofences
instance Amazonka.Data.Headers.ToHeaders Amazonka.Location.ListGeofences.ListGeofences
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Location.ListGeofences.ListGeofences
instance Amazonka.Data.Path.ToPath Amazonka.Location.ListGeofences.ListGeofences
instance Amazonka.Data.Query.ToQuery Amazonka.Location.ListGeofences.ListGeofences


-- | Lists geofence collections in your AWS account.
--   
--   This operation returns paginated results.
module Amazonka.Location.ListGeofenceCollections

-- | <i>See:</i> <a>newListGeofenceCollections</a> smart constructor.
data ListGeofenceCollections
ListGeofenceCollections' :: Maybe Text -> Maybe Natural -> ListGeofenceCollections

-- | The pagination token specifying which page of results to return in the
--   response. If no token is provided, the default page is the first page.
--   
--   Default value: <tt>null</tt>
[$sel:nextToken:ListGeofenceCollections'] :: ListGeofenceCollections -> Maybe Text

-- | An optional limit for the number of resources returned in a single
--   call.
--   
--   Default value: <tt>100</tt>
[$sel:maxResults:ListGeofenceCollections'] :: ListGeofenceCollections -> Maybe Natural

-- | Create a value of <a>ListGeofenceCollections</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListGeofenceCollections'</a>,
--   <a>listGeofenceCollections_nextToken</a> - The pagination token
--   specifying which page of results to return in the response. If no
--   token is provided, the default page is the first page.
--   
--   Default value: <tt>null</tt>
--   
--   <a>$sel:maxResults:ListGeofenceCollections'</a>,
--   <a>listGeofenceCollections_maxResults</a> - An optional limit for the
--   number of resources returned in a single call.
--   
--   Default value: <tt>100</tt>
newListGeofenceCollections :: ListGeofenceCollections

-- | The pagination token specifying which page of results to return in the
--   response. If no token is provided, the default page is the first page.
--   
--   Default value: <tt>null</tt>
listGeofenceCollections_nextToken :: Lens' ListGeofenceCollections (Maybe Text)

-- | An optional limit for the number of resources returned in a single
--   call.
--   
--   Default value: <tt>100</tt>
listGeofenceCollections_maxResults :: Lens' ListGeofenceCollections (Maybe Natural)

-- | <i>See:</i> <a>newListGeofenceCollectionsResponse</a> smart
--   constructor.
data ListGeofenceCollectionsResponse
ListGeofenceCollectionsResponse' :: Maybe Text -> Int -> [ListGeofenceCollectionsResponseEntry] -> ListGeofenceCollectionsResponse

-- | A pagination token indicating there are additional pages available.
--   You can use the token in a following request to fetch the next set of
--   results.
[$sel:nextToken:ListGeofenceCollectionsResponse'] :: ListGeofenceCollectionsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListGeofenceCollectionsResponse'] :: ListGeofenceCollectionsResponse -> Int

-- | Lists the geofence collections that exist in your AWS account.
[$sel:entries:ListGeofenceCollectionsResponse'] :: ListGeofenceCollectionsResponse -> [ListGeofenceCollectionsResponseEntry]

-- | Create a value of <a>ListGeofenceCollectionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListGeofenceCollections'</a>,
--   <a>listGeofenceCollectionsResponse_nextToken</a> - A pagination token
--   indicating there are additional pages available. You can use the token
--   in a following request to fetch the next set of results.
--   
--   <a>$sel:httpStatus:ListGeofenceCollectionsResponse'</a>,
--   <a>listGeofenceCollectionsResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:entries:ListGeofenceCollectionsResponse'</a>,
--   <a>listGeofenceCollectionsResponse_entries</a> - Lists the geofence
--   collections that exist in your AWS account.
newListGeofenceCollectionsResponse :: Int -> ListGeofenceCollectionsResponse

-- | A pagination token indicating there are additional pages available.
--   You can use the token in a following request to fetch the next set of
--   results.
listGeofenceCollectionsResponse_nextToken :: Lens' ListGeofenceCollectionsResponse (Maybe Text)

-- | The response's http status code.
listGeofenceCollectionsResponse_httpStatus :: Lens' ListGeofenceCollectionsResponse Int

-- | Lists the geofence collections that exist in your AWS account.
listGeofenceCollectionsResponse_entries :: Lens' ListGeofenceCollectionsResponse [ListGeofenceCollectionsResponseEntry]
instance GHC.Generics.Generic Amazonka.Location.ListGeofenceCollections.ListGeofenceCollections
instance GHC.Show.Show Amazonka.Location.ListGeofenceCollections.ListGeofenceCollections
instance GHC.Read.Read Amazonka.Location.ListGeofenceCollections.ListGeofenceCollections
instance GHC.Classes.Eq Amazonka.Location.ListGeofenceCollections.ListGeofenceCollections
instance GHC.Generics.Generic Amazonka.Location.ListGeofenceCollections.ListGeofenceCollectionsResponse
instance GHC.Show.Show Amazonka.Location.ListGeofenceCollections.ListGeofenceCollectionsResponse
instance GHC.Read.Read Amazonka.Location.ListGeofenceCollections.ListGeofenceCollectionsResponse
instance GHC.Classes.Eq Amazonka.Location.ListGeofenceCollections.ListGeofenceCollectionsResponse
instance Amazonka.Types.AWSRequest Amazonka.Location.ListGeofenceCollections.ListGeofenceCollections
instance Control.DeepSeq.NFData Amazonka.Location.ListGeofenceCollections.ListGeofenceCollectionsResponse
instance Amazonka.Pager.AWSPager Amazonka.Location.ListGeofenceCollections.ListGeofenceCollections
instance Data.Hashable.Class.Hashable Amazonka.Location.ListGeofenceCollections.ListGeofenceCollections
instance Control.DeepSeq.NFData Amazonka.Location.ListGeofenceCollections.ListGeofenceCollections
instance Amazonka.Data.Headers.ToHeaders Amazonka.Location.ListGeofenceCollections.ListGeofenceCollections
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Location.ListGeofenceCollections.ListGeofenceCollections
instance Amazonka.Data.Path.ToPath Amazonka.Location.ListGeofenceCollections.ListGeofenceCollections
instance Amazonka.Data.Query.ToQuery Amazonka.Location.ListGeofenceCollections.ListGeofenceCollections


-- | A batch request to retrieve all device positions.
--   
--   This operation returns paginated results.
module Amazonka.Location.ListDevicePositions

-- | <i>See:</i> <a>newListDevicePositions</a> smart constructor.
data ListDevicePositions
ListDevicePositions' :: Maybe Text -> Maybe Natural -> Text -> ListDevicePositions

-- | The pagination token specifying which page of results to return in the
--   response. If no token is provided, the default page is the first page.
--   
--   Default value: <tt>null</tt>
[$sel:nextToken:ListDevicePositions'] :: ListDevicePositions -> Maybe Text

-- | An optional limit for the number of entries returned in a single call.
--   
--   Default value: <tt>100</tt>
[$sel:maxResults:ListDevicePositions'] :: ListDevicePositions -> Maybe Natural

-- | The tracker resource containing the requested devices.
[$sel:trackerName:ListDevicePositions'] :: ListDevicePositions -> Text

-- | Create a value of <a>ListDevicePositions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDevicePositions'</a>,
--   <a>listDevicePositions_nextToken</a> - The pagination token specifying
--   which page of results to return in the response. If no token is
--   provided, the default page is the first page.
--   
--   Default value: <tt>null</tt>
--   
--   <a>$sel:maxResults:ListDevicePositions'</a>,
--   <a>listDevicePositions_maxResults</a> - An optional limit for the
--   number of entries returned in a single call.
--   
--   Default value: <tt>100</tt>
--   
--   <a>$sel:trackerName:ListDevicePositions'</a>,
--   <a>listDevicePositions_trackerName</a> - The tracker resource
--   containing the requested devices.
newListDevicePositions :: Text -> ListDevicePositions

-- | The pagination token specifying which page of results to return in the
--   response. If no token is provided, the default page is the first page.
--   
--   Default value: <tt>null</tt>
listDevicePositions_nextToken :: Lens' ListDevicePositions (Maybe Text)

-- | An optional limit for the number of entries returned in a single call.
--   
--   Default value: <tt>100</tt>
listDevicePositions_maxResults :: Lens' ListDevicePositions (Maybe Natural)

-- | The tracker resource containing the requested devices.
listDevicePositions_trackerName :: Lens' ListDevicePositions Text

-- | <i>See:</i> <a>newListDevicePositionsResponse</a> smart constructor.
data ListDevicePositionsResponse
ListDevicePositionsResponse' :: Maybe Text -> Int -> [ListDevicePositionsResponseEntry] -> ListDevicePositionsResponse

-- | A pagination token indicating there are additional pages available.
--   You can use the token in a following request to fetch the next set of
--   results.
[$sel:nextToken:ListDevicePositionsResponse'] :: ListDevicePositionsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListDevicePositionsResponse'] :: ListDevicePositionsResponse -> Int

-- | Contains details about each device's last known position. These
--   details includes the device ID, the time when the position was sampled
--   on the device, the time that the service received the update, and the
--   most recent coordinates.
[$sel:entries:ListDevicePositionsResponse'] :: ListDevicePositionsResponse -> [ListDevicePositionsResponseEntry]

-- | Create a value of <a>ListDevicePositionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDevicePositions'</a>,
--   <a>listDevicePositionsResponse_nextToken</a> - A pagination token
--   indicating there are additional pages available. You can use the token
--   in a following request to fetch the next set of results.
--   
--   <a>$sel:httpStatus:ListDevicePositionsResponse'</a>,
--   <a>listDevicePositionsResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:entries:ListDevicePositionsResponse'</a>,
--   <a>listDevicePositionsResponse_entries</a> - Contains details about
--   each device's last known position. These details includes the device
--   ID, the time when the position was sampled on the device, the time
--   that the service received the update, and the most recent coordinates.
newListDevicePositionsResponse :: Int -> ListDevicePositionsResponse

-- | A pagination token indicating there are additional pages available.
--   You can use the token in a following request to fetch the next set of
--   results.
listDevicePositionsResponse_nextToken :: Lens' ListDevicePositionsResponse (Maybe Text)

-- | The response's http status code.
listDevicePositionsResponse_httpStatus :: Lens' ListDevicePositionsResponse Int

-- | Contains details about each device's last known position. These
--   details includes the device ID, the time when the position was sampled
--   on the device, the time that the service received the update, and the
--   most recent coordinates.
listDevicePositionsResponse_entries :: Lens' ListDevicePositionsResponse [ListDevicePositionsResponseEntry]
instance GHC.Generics.Generic Amazonka.Location.ListDevicePositions.ListDevicePositions
instance GHC.Show.Show Amazonka.Location.ListDevicePositions.ListDevicePositions
instance GHC.Read.Read Amazonka.Location.ListDevicePositions.ListDevicePositions
instance GHC.Classes.Eq Amazonka.Location.ListDevicePositions.ListDevicePositions
instance GHC.Generics.Generic Amazonka.Location.ListDevicePositions.ListDevicePositionsResponse
instance GHC.Show.Show Amazonka.Location.ListDevicePositions.ListDevicePositionsResponse
instance GHC.Classes.Eq Amazonka.Location.ListDevicePositions.ListDevicePositionsResponse
instance Amazonka.Types.AWSRequest Amazonka.Location.ListDevicePositions.ListDevicePositions
instance Control.DeepSeq.NFData Amazonka.Location.ListDevicePositions.ListDevicePositionsResponse
instance Amazonka.Pager.AWSPager Amazonka.Location.ListDevicePositions.ListDevicePositions
instance Data.Hashable.Class.Hashable Amazonka.Location.ListDevicePositions.ListDevicePositions
instance Control.DeepSeq.NFData Amazonka.Location.ListDevicePositions.ListDevicePositions
instance Amazonka.Data.Headers.ToHeaders Amazonka.Location.ListDevicePositions.ListDevicePositions
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Location.ListDevicePositions.ListDevicePositions
instance Amazonka.Data.Path.ToPath Amazonka.Location.ListDevicePositions.ListDevicePositions
instance Amazonka.Data.Query.ToQuery Amazonka.Location.ListDevicePositions.ListDevicePositions


-- | Retrieves a vector data tile from the map resource. Map tiles are used
--   by clients to render a map. they're addressed using a grid arrangement
--   with an X coordinate, Y coordinate, and Z (zoom) level.
--   
--   The origin (0, 0) is the top left of the map. Increasing the zoom
--   level by 1 doubles both the X and Y dimensions, so a tile containing
--   data for the entire world at (0/0/0) will be split into 4 tiles at
--   zoom 1 (1/0/0, 1/0/1, 1/1/0, 1/1/1).
module Amazonka.Location.GetMapTile

-- | <i>See:</i> <a>newGetMapTile</a> smart constructor.
data GetMapTile
GetMapTile' :: Text -> Text -> Text -> Text -> GetMapTile

-- | The map resource to retrieve the map tiles from.
[$sel:mapName:GetMapTile'] :: GetMapTile -> Text

-- | The X axis value for the map tile.
[$sel:x:GetMapTile'] :: GetMapTile -> Text

-- | The Y axis value for the map tile.
[$sel:y:GetMapTile'] :: GetMapTile -> Text

-- | The zoom value for the map tile.
[$sel:z:GetMapTile'] :: GetMapTile -> Text

-- | Create a value of <a>GetMapTile</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mapName:GetMapTile'</a>, <a>getMapTile_mapName</a> - The map
--   resource to retrieve the map tiles from.
--   
--   <a>$sel:x:GetMapTile'</a>, <a>getMapTile_x</a> - The X axis value for
--   the map tile.
--   
--   <a>$sel:y:GetMapTile'</a>, <a>getMapTile_y</a> - The Y axis value for
--   the map tile.
--   
--   <a>$sel:z:GetMapTile'</a>, <a>getMapTile_z</a> - The zoom value for
--   the map tile.
newGetMapTile :: Text -> Text -> Text -> Text -> GetMapTile

-- | The map resource to retrieve the map tiles from.
getMapTile_mapName :: Lens' GetMapTile Text

-- | The X axis value for the map tile.
getMapTile_x :: Lens' GetMapTile Text

-- | The Y axis value for the map tile.
getMapTile_y :: Lens' GetMapTile Text

-- | The zoom value for the map tile.
getMapTile_z :: Lens' GetMapTile Text

-- | <i>See:</i> <a>newGetMapTileResponse</a> smart constructor.
data GetMapTileResponse
GetMapTileResponse' :: Maybe ByteString -> Maybe Text -> Int -> GetMapTileResponse

-- | Contains Mapbox Vector Tile (MVT) data.
[$sel:blob:GetMapTileResponse'] :: GetMapTileResponse -> Maybe ByteString

-- | The map tile's content type. For example,
--   <tt>application/vnd.mapbox-vector-tile</tt>.
[$sel:contentType:GetMapTileResponse'] :: GetMapTileResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetMapTileResponse'] :: GetMapTileResponse -> Int

-- | Create a value of <a>GetMapTileResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:blob:GetMapTileResponse'</a>, <a>getMapTileResponse_blob</a> -
--   Contains Mapbox Vector Tile (MVT) data.
--   
--   <a>$sel:contentType:GetMapTileResponse'</a>,
--   <a>getMapTileResponse_contentType</a> - The map tile's content type.
--   For example, <tt>application/vnd.mapbox-vector-tile</tt>.
--   
--   <a>$sel:httpStatus:GetMapTileResponse'</a>,
--   <a>getMapTileResponse_httpStatus</a> - The response's http status
--   code.
newGetMapTileResponse :: Int -> GetMapTileResponse

-- | Contains Mapbox Vector Tile (MVT) data.
getMapTileResponse_blob :: Lens' GetMapTileResponse (Maybe ByteString)

-- | The map tile's content type. For example,
--   <tt>application/vnd.mapbox-vector-tile</tt>.
getMapTileResponse_contentType :: Lens' GetMapTileResponse (Maybe Text)

-- | The response's http status code.
getMapTileResponse_httpStatus :: Lens' GetMapTileResponse Int
instance GHC.Generics.Generic Amazonka.Location.GetMapTile.GetMapTile
instance GHC.Show.Show Amazonka.Location.GetMapTile.GetMapTile
instance GHC.Read.Read Amazonka.Location.GetMapTile.GetMapTile
instance GHC.Classes.Eq Amazonka.Location.GetMapTile.GetMapTile
instance GHC.Generics.Generic Amazonka.Location.GetMapTile.GetMapTileResponse
instance GHC.Show.Show Amazonka.Location.GetMapTile.GetMapTileResponse
instance GHC.Read.Read Amazonka.Location.GetMapTile.GetMapTileResponse
instance GHC.Classes.Eq Amazonka.Location.GetMapTile.GetMapTileResponse
instance Amazonka.Types.AWSRequest Amazonka.Location.GetMapTile.GetMapTile
instance Control.DeepSeq.NFData Amazonka.Location.GetMapTile.GetMapTileResponse
instance Data.Hashable.Class.Hashable Amazonka.Location.GetMapTile.GetMapTile
instance Control.DeepSeq.NFData Amazonka.Location.GetMapTile.GetMapTile
instance Amazonka.Data.Headers.ToHeaders Amazonka.Location.GetMapTile.GetMapTile
instance Amazonka.Data.Path.ToPath Amazonka.Location.GetMapTile.GetMapTile
instance Amazonka.Data.Query.ToQuery Amazonka.Location.GetMapTile.GetMapTile


-- | Retrieves the map style descriptor from a map resource.
--   
--   The style descriptor contains speciﬁcations on how features render on
--   a map. For example, what data to display, what order to display the
--   data in, and the style for the data. Style descriptors follow the
--   Mapbox Style Specification.
module Amazonka.Location.GetMapStyleDescriptor

-- | <i>See:</i> <a>newGetMapStyleDescriptor</a> smart constructor.
data GetMapStyleDescriptor
GetMapStyleDescriptor' :: Text -> GetMapStyleDescriptor

-- | The map resource to retrieve the style descriptor from.
[$sel:mapName:GetMapStyleDescriptor'] :: GetMapStyleDescriptor -> Text

-- | Create a value of <a>GetMapStyleDescriptor</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mapName:GetMapStyleDescriptor'</a>,
--   <a>getMapStyleDescriptor_mapName</a> - The map resource to retrieve
--   the style descriptor from.
newGetMapStyleDescriptor :: Text -> GetMapStyleDescriptor

-- | The map resource to retrieve the style descriptor from.
getMapStyleDescriptor_mapName :: Lens' GetMapStyleDescriptor Text

-- | <i>See:</i> <a>newGetMapStyleDescriptorResponse</a> smart constructor.
data GetMapStyleDescriptorResponse
GetMapStyleDescriptorResponse' :: Maybe ByteString -> Maybe Text -> Int -> GetMapStyleDescriptorResponse

-- | Contains the body of the style descriptor.
[$sel:blob:GetMapStyleDescriptorResponse'] :: GetMapStyleDescriptorResponse -> Maybe ByteString

-- | The style descriptor's content type. For example,
--   <tt>application/json</tt>.
[$sel:contentType:GetMapStyleDescriptorResponse'] :: GetMapStyleDescriptorResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetMapStyleDescriptorResponse'] :: GetMapStyleDescriptorResponse -> Int

-- | Create a value of <a>GetMapStyleDescriptorResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:blob:GetMapStyleDescriptorResponse'</a>,
--   <a>getMapStyleDescriptorResponse_blob</a> - Contains the body of the
--   style descriptor.
--   
--   <a>$sel:contentType:GetMapStyleDescriptorResponse'</a>,
--   <a>getMapStyleDescriptorResponse_contentType</a> - The style
--   descriptor's content type. For example, <tt>application/json</tt>.
--   
--   <a>$sel:httpStatus:GetMapStyleDescriptorResponse'</a>,
--   <a>getMapStyleDescriptorResponse_httpStatus</a> - The response's http
--   status code.
newGetMapStyleDescriptorResponse :: Int -> GetMapStyleDescriptorResponse

-- | Contains the body of the style descriptor.
getMapStyleDescriptorResponse_blob :: Lens' GetMapStyleDescriptorResponse (Maybe ByteString)

-- | The style descriptor's content type. For example,
--   <tt>application/json</tt>.
getMapStyleDescriptorResponse_contentType :: Lens' GetMapStyleDescriptorResponse (Maybe Text)

-- | The response's http status code.
getMapStyleDescriptorResponse_httpStatus :: Lens' GetMapStyleDescriptorResponse Int
instance GHC.Generics.Generic Amazonka.Location.GetMapStyleDescriptor.GetMapStyleDescriptor
instance GHC.Show.Show Amazonka.Location.GetMapStyleDescriptor.GetMapStyleDescriptor
instance GHC.Read.Read Amazonka.Location.GetMapStyleDescriptor.GetMapStyleDescriptor
instance GHC.Classes.Eq Amazonka.Location.GetMapStyleDescriptor.GetMapStyleDescriptor
instance GHC.Generics.Generic Amazonka.Location.GetMapStyleDescriptor.GetMapStyleDescriptorResponse
instance GHC.Show.Show Amazonka.Location.GetMapStyleDescriptor.GetMapStyleDescriptorResponse
instance GHC.Read.Read Amazonka.Location.GetMapStyleDescriptor.GetMapStyleDescriptorResponse
instance GHC.Classes.Eq Amazonka.Location.GetMapStyleDescriptor.GetMapStyleDescriptorResponse
instance Amazonka.Types.AWSRequest Amazonka.Location.GetMapStyleDescriptor.GetMapStyleDescriptor
instance Control.DeepSeq.NFData Amazonka.Location.GetMapStyleDescriptor.GetMapStyleDescriptorResponse
instance Data.Hashable.Class.Hashable Amazonka.Location.GetMapStyleDescriptor.GetMapStyleDescriptor
instance Control.DeepSeq.NFData Amazonka.Location.GetMapStyleDescriptor.GetMapStyleDescriptor
instance Amazonka.Data.Headers.ToHeaders Amazonka.Location.GetMapStyleDescriptor.GetMapStyleDescriptor
instance Amazonka.Data.Path.ToPath Amazonka.Location.GetMapStyleDescriptor.GetMapStyleDescriptor
instance Amazonka.Data.Query.ToQuery Amazonka.Location.GetMapStyleDescriptor.GetMapStyleDescriptor


-- | Retrieves the sprite sheet corresponding to a map resource. The sprite
--   sheet is a PNG image paired with a JSON document describing the
--   offsets of individual icons that will be displayed on a rendered map.
module Amazonka.Location.GetMapSprites

-- | <i>See:</i> <a>newGetMapSprites</a> smart constructor.
data GetMapSprites
GetMapSprites' :: Text -> Text -> GetMapSprites

-- | The name of the sprite ﬁle. Use the following ﬁle names for the sprite
--   sheet:
--   
--   <ul>
--   <li><pre>sprites.png</pre></li>
--   <li><tt>sprites@2x.png</tt> for high pixel density displays</li>
--   </ul>
--   
--   For the JSON document contain image offsets. Use the following ﬁle
--   names:
--   
--   <ul>
--   <li><pre>sprites.json</pre></li>
--   <li><tt>sprites@2x.json</tt> for high pixel density displays</li>
--   </ul>
[$sel:fileName:GetMapSprites'] :: GetMapSprites -> Text

-- | The map resource associated with the sprite ﬁle.
[$sel:mapName:GetMapSprites'] :: GetMapSprites -> Text

-- | Create a value of <a>GetMapSprites</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fileName:GetMapSprites'</a>, <a>getMapSprites_fileName</a> -
--   The name of the sprite ﬁle. Use the following ﬁle names for the sprite
--   sheet:
--   
--   <ul>
--   <li><pre>sprites.png</pre></li>
--   <li><tt>sprites@2x.png</tt> for high pixel density displays</li>
--   </ul>
--   
--   For the JSON document contain image offsets. Use the following ﬁle
--   names:
--   
--   <ul>
--   <li><pre>sprites.json</pre></li>
--   <li><tt>sprites@2x.json</tt> for high pixel density displays</li>
--   </ul>
--   
--   <a>$sel:mapName:GetMapSprites'</a>, <a>getMapSprites_mapName</a> - The
--   map resource associated with the sprite ﬁle.
newGetMapSprites :: Text -> Text -> GetMapSprites

-- | The name of the sprite ﬁle. Use the following ﬁle names for the sprite
--   sheet:
--   
--   <ul>
--   <li><pre>sprites.png</pre></li>
--   <li><tt>sprites@2x.png</tt> for high pixel density displays</li>
--   </ul>
--   
--   For the JSON document contain image offsets. Use the following ﬁle
--   names:
--   
--   <ul>
--   <li><pre>sprites.json</pre></li>
--   <li><tt>sprites@2x.json</tt> for high pixel density displays</li>
--   </ul>
getMapSprites_fileName :: Lens' GetMapSprites Text

-- | The map resource associated with the sprite ﬁle.
getMapSprites_mapName :: Lens' GetMapSprites Text

-- | <i>See:</i> <a>newGetMapSpritesResponse</a> smart constructor.
data GetMapSpritesResponse
GetMapSpritesResponse' :: Maybe ByteString -> Maybe Text -> Int -> GetMapSpritesResponse

-- | Contains the body of the sprite sheet or JSON offset ﬁle.
[$sel:blob:GetMapSpritesResponse'] :: GetMapSpritesResponse -> Maybe ByteString

-- | The content type of the sprite sheet and offsets. For example, the
--   sprite sheet content type is <tt>image/png</tt>, and the sprite offset
--   JSON document is <tt>application/json</tt>.
[$sel:contentType:GetMapSpritesResponse'] :: GetMapSpritesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetMapSpritesResponse'] :: GetMapSpritesResponse -> Int

-- | Create a value of <a>GetMapSpritesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:blob:GetMapSpritesResponse'</a>,
--   <a>getMapSpritesResponse_blob</a> - Contains the body of the sprite
--   sheet or JSON offset ﬁle.
--   
--   <a>$sel:contentType:GetMapSpritesResponse'</a>,
--   <a>getMapSpritesResponse_contentType</a> - The content type of the
--   sprite sheet and offsets. For example, the sprite sheet content type
--   is <tt>image/png</tt>, and the sprite offset JSON document is
--   <tt>application/json</tt>.
--   
--   <a>$sel:httpStatus:GetMapSpritesResponse'</a>,
--   <a>getMapSpritesResponse_httpStatus</a> - The response's http status
--   code.
newGetMapSpritesResponse :: Int -> GetMapSpritesResponse

-- | Contains the body of the sprite sheet or JSON offset ﬁle.
getMapSpritesResponse_blob :: Lens' GetMapSpritesResponse (Maybe ByteString)

-- | The content type of the sprite sheet and offsets. For example, the
--   sprite sheet content type is <tt>image/png</tt>, and the sprite offset
--   JSON document is <tt>application/json</tt>.
getMapSpritesResponse_contentType :: Lens' GetMapSpritesResponse (Maybe Text)

-- | The response's http status code.
getMapSpritesResponse_httpStatus :: Lens' GetMapSpritesResponse Int
instance GHC.Generics.Generic Amazonka.Location.GetMapSprites.GetMapSprites
instance GHC.Show.Show Amazonka.Location.GetMapSprites.GetMapSprites
instance GHC.Read.Read Amazonka.Location.GetMapSprites.GetMapSprites
instance GHC.Classes.Eq Amazonka.Location.GetMapSprites.GetMapSprites
instance GHC.Generics.Generic Amazonka.Location.GetMapSprites.GetMapSpritesResponse
instance GHC.Show.Show Amazonka.Location.GetMapSprites.GetMapSpritesResponse
instance GHC.Read.Read Amazonka.Location.GetMapSprites.GetMapSpritesResponse
instance GHC.Classes.Eq Amazonka.Location.GetMapSprites.GetMapSpritesResponse
instance Amazonka.Types.AWSRequest Amazonka.Location.GetMapSprites.GetMapSprites
instance Control.DeepSeq.NFData Amazonka.Location.GetMapSprites.GetMapSpritesResponse
instance Data.Hashable.Class.Hashable Amazonka.Location.GetMapSprites.GetMapSprites
instance Control.DeepSeq.NFData Amazonka.Location.GetMapSprites.GetMapSprites
instance Amazonka.Data.Headers.ToHeaders Amazonka.Location.GetMapSprites.GetMapSprites
instance Amazonka.Data.Path.ToPath Amazonka.Location.GetMapSprites.GetMapSprites
instance Amazonka.Data.Query.ToQuery Amazonka.Location.GetMapSprites.GetMapSprites


-- | Retrieves glyphs used to display labels on a map.
module Amazonka.Location.GetMapGlyphs

-- | <i>See:</i> <a>newGetMapGlyphs</a> smart constructor.
data GetMapGlyphs
GetMapGlyphs' :: Text -> Text -> Text -> GetMapGlyphs

-- | A comma-separated list of fonts to load glyphs from in order of
--   preference. For example, <tt>Noto Sans Regular, Arial Unicode</tt>.
--   
--   Valid fonts stacks for <a>Esri</a> styles:
--   
--   <ul>
--   <li>VectorEsriDarkGrayCanvas – <tt>Ubuntu Medium Italic</tt> |
--   <tt>Ubuntu Medium</tt> | <tt>Ubuntu Italic</tt> | <tt>Ubuntu
--   Regular</tt> | <tt>Ubuntu Bold</tt></li>
--   <li>VectorEsriLightGrayCanvas – <tt>Ubuntu Italic</tt> | <tt>Ubuntu
--   Regular</tt> | <tt>Ubuntu Light</tt> | <tt>Ubuntu Bold</tt></li>
--   <li>VectorEsriTopographic – <tt>Noto Sans Italic</tt> | <tt>Noto Sans
--   Regular</tt> | <tt>Noto Sans Bold</tt> | <tt>Noto Serif Regular</tt> |
--   <tt>Roboto Condensed Light Italic</tt></li>
--   <li>VectorEsriStreets – <tt>Arial Regular</tt> | <tt>Arial Italic</tt>
--   | <tt>Arial Bold</tt></li>
--   <li>VectorEsriNavigation – <tt>Arial Regular</tt> | <tt>Arial
--   Italic</tt> | <tt>Arial Bold</tt></li>
--   </ul>
--   
--   Valid font stacks for <a>HERE Technologies</a> styles:
--   
--   <ul>
--   <li>VectorHereBerlin – <tt>Fira GO Regular</tt> | <tt>Fira GO
--   Bold</tt></li>
--   </ul>
[$sel:fontStack:GetMapGlyphs'] :: GetMapGlyphs -> Text

-- | A Unicode range of characters to download glyphs for. Each response
--   will contain 256 characters. For example, 0–255 includes all
--   characters from range <tt>U+0000</tt> to <tt>00FF</tt>. Must be
--   aligned to multiples of 256.
[$sel:fontUnicodeRange:GetMapGlyphs'] :: GetMapGlyphs -> Text

-- | The map resource associated with the glyph ﬁle.
[$sel:mapName:GetMapGlyphs'] :: GetMapGlyphs -> Text

-- | Create a value of <a>GetMapGlyphs</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fontStack:GetMapGlyphs'</a>, <a>getMapGlyphs_fontStack</a> - A
--   comma-separated list of fonts to load glyphs from in order of
--   preference. For example, <tt>Noto Sans Regular, Arial Unicode</tt>.
--   
--   Valid fonts stacks for <a>Esri</a> styles:
--   
--   <ul>
--   <li>VectorEsriDarkGrayCanvas – <tt>Ubuntu Medium Italic</tt> |
--   <tt>Ubuntu Medium</tt> | <tt>Ubuntu Italic</tt> | <tt>Ubuntu
--   Regular</tt> | <tt>Ubuntu Bold</tt></li>
--   <li>VectorEsriLightGrayCanvas – <tt>Ubuntu Italic</tt> | <tt>Ubuntu
--   Regular</tt> | <tt>Ubuntu Light</tt> | <tt>Ubuntu Bold</tt></li>
--   <li>VectorEsriTopographic – <tt>Noto Sans Italic</tt> | <tt>Noto Sans
--   Regular</tt> | <tt>Noto Sans Bold</tt> | <tt>Noto Serif Regular</tt> |
--   <tt>Roboto Condensed Light Italic</tt></li>
--   <li>VectorEsriStreets – <tt>Arial Regular</tt> | <tt>Arial Italic</tt>
--   | <tt>Arial Bold</tt></li>
--   <li>VectorEsriNavigation – <tt>Arial Regular</tt> | <tt>Arial
--   Italic</tt> | <tt>Arial Bold</tt></li>
--   </ul>
--   
--   Valid font stacks for <a>HERE Technologies</a> styles:
--   
--   <ul>
--   <li>VectorHereBerlin – <tt>Fira GO Regular</tt> | <tt>Fira GO
--   Bold</tt></li>
--   </ul>
--   
--   <a>$sel:fontUnicodeRange:GetMapGlyphs'</a>,
--   <a>getMapGlyphs_fontUnicodeRange</a> - A Unicode range of characters
--   to download glyphs for. Each response will contain 256 characters. For
--   example, 0–255 includes all characters from range <tt>U+0000</tt> to
--   <tt>00FF</tt>. Must be aligned to multiples of 256.
--   
--   <a>$sel:mapName:GetMapGlyphs'</a>, <a>getMapGlyphs_mapName</a> - The
--   map resource associated with the glyph ﬁle.
newGetMapGlyphs :: Text -> Text -> Text -> GetMapGlyphs

-- | A comma-separated list of fonts to load glyphs from in order of
--   preference. For example, <tt>Noto Sans Regular, Arial Unicode</tt>.
--   
--   Valid fonts stacks for <a>Esri</a> styles:
--   
--   <ul>
--   <li>VectorEsriDarkGrayCanvas – <tt>Ubuntu Medium Italic</tt> |
--   <tt>Ubuntu Medium</tt> | <tt>Ubuntu Italic</tt> | <tt>Ubuntu
--   Regular</tt> | <tt>Ubuntu Bold</tt></li>
--   <li>VectorEsriLightGrayCanvas – <tt>Ubuntu Italic</tt> | <tt>Ubuntu
--   Regular</tt> | <tt>Ubuntu Light</tt> | <tt>Ubuntu Bold</tt></li>
--   <li>VectorEsriTopographic – <tt>Noto Sans Italic</tt> | <tt>Noto Sans
--   Regular</tt> | <tt>Noto Sans Bold</tt> | <tt>Noto Serif Regular</tt> |
--   <tt>Roboto Condensed Light Italic</tt></li>
--   <li>VectorEsriStreets – <tt>Arial Regular</tt> | <tt>Arial Italic</tt>
--   | <tt>Arial Bold</tt></li>
--   <li>VectorEsriNavigation – <tt>Arial Regular</tt> | <tt>Arial
--   Italic</tt> | <tt>Arial Bold</tt></li>
--   </ul>
--   
--   Valid font stacks for <a>HERE Technologies</a> styles:
--   
--   <ul>
--   <li>VectorHereBerlin – <tt>Fira GO Regular</tt> | <tt>Fira GO
--   Bold</tt></li>
--   </ul>
getMapGlyphs_fontStack :: Lens' GetMapGlyphs Text

-- | A Unicode range of characters to download glyphs for. Each response
--   will contain 256 characters. For example, 0–255 includes all
--   characters from range <tt>U+0000</tt> to <tt>00FF</tt>. Must be
--   aligned to multiples of 256.
getMapGlyphs_fontUnicodeRange :: Lens' GetMapGlyphs Text

-- | The map resource associated with the glyph ﬁle.
getMapGlyphs_mapName :: Lens' GetMapGlyphs Text

-- | <i>See:</i> <a>newGetMapGlyphsResponse</a> smart constructor.
data GetMapGlyphsResponse
GetMapGlyphsResponse' :: Maybe ByteString -> Maybe Text -> Int -> GetMapGlyphsResponse

-- | The blob's content type.
[$sel:blob:GetMapGlyphsResponse'] :: GetMapGlyphsResponse -> Maybe ByteString

-- | The map glyph content type. For example,
--   <tt>application/octet-stream</tt>.
[$sel:contentType:GetMapGlyphsResponse'] :: GetMapGlyphsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetMapGlyphsResponse'] :: GetMapGlyphsResponse -> Int

-- | Create a value of <a>GetMapGlyphsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:blob:GetMapGlyphsResponse'</a>,
--   <a>getMapGlyphsResponse_blob</a> - The blob's content type.
--   
--   <a>$sel:contentType:GetMapGlyphsResponse'</a>,
--   <a>getMapGlyphsResponse_contentType</a> - The map glyph content type.
--   For example, <tt>application/octet-stream</tt>.
--   
--   <a>$sel:httpStatus:GetMapGlyphsResponse'</a>,
--   <a>getMapGlyphsResponse_httpStatus</a> - The response's http status
--   code.
newGetMapGlyphsResponse :: Int -> GetMapGlyphsResponse

-- | The blob's content type.
getMapGlyphsResponse_blob :: Lens' GetMapGlyphsResponse (Maybe ByteString)

-- | The map glyph content type. For example,
--   <tt>application/octet-stream</tt>.
getMapGlyphsResponse_contentType :: Lens' GetMapGlyphsResponse (Maybe Text)

-- | The response's http status code.
getMapGlyphsResponse_httpStatus :: Lens' GetMapGlyphsResponse Int
instance GHC.Generics.Generic Amazonka.Location.GetMapGlyphs.GetMapGlyphs
instance GHC.Show.Show Amazonka.Location.GetMapGlyphs.GetMapGlyphs
instance GHC.Read.Read Amazonka.Location.GetMapGlyphs.GetMapGlyphs
instance GHC.Classes.Eq Amazonka.Location.GetMapGlyphs.GetMapGlyphs
instance GHC.Generics.Generic Amazonka.Location.GetMapGlyphs.GetMapGlyphsResponse
instance GHC.Show.Show Amazonka.Location.GetMapGlyphs.GetMapGlyphsResponse
instance GHC.Read.Read Amazonka.Location.GetMapGlyphs.GetMapGlyphsResponse
instance GHC.Classes.Eq Amazonka.Location.GetMapGlyphs.GetMapGlyphsResponse
instance Amazonka.Types.AWSRequest Amazonka.Location.GetMapGlyphs.GetMapGlyphs
instance Control.DeepSeq.NFData Amazonka.Location.GetMapGlyphs.GetMapGlyphsResponse
instance Data.Hashable.Class.Hashable Amazonka.Location.GetMapGlyphs.GetMapGlyphs
instance Control.DeepSeq.NFData Amazonka.Location.GetMapGlyphs.GetMapGlyphs
instance Amazonka.Data.Headers.ToHeaders Amazonka.Location.GetMapGlyphs.GetMapGlyphs
instance Amazonka.Data.Path.ToPath Amazonka.Location.GetMapGlyphs.GetMapGlyphs
instance Amazonka.Data.Query.ToQuery Amazonka.Location.GetMapGlyphs.GetMapGlyphs


-- | Retrieves the geofence details from a geofence collection.
module Amazonka.Location.GetGeofence

-- | <i>See:</i> <a>newGetGeofence</a> smart constructor.
data GetGeofence
GetGeofence' :: Text -> Text -> GetGeofence

-- | The geofence collection storing the target geofence.
[$sel:collectionName:GetGeofence'] :: GetGeofence -> Text

-- | The geofence you're retrieving details for.
[$sel:geofenceId:GetGeofence'] :: GetGeofence -> Text

-- | Create a value of <a>GetGeofence</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:collectionName:GetGeofence'</a>,
--   <a>getGeofence_collectionName</a> - The geofence collection storing
--   the target geofence.
--   
--   <a>$sel:geofenceId:GetGeofence'</a>, <a>getGeofence_geofenceId</a> -
--   The geofence you're retrieving details for.
newGetGeofence :: Text -> Text -> GetGeofence

-- | The geofence collection storing the target geofence.
getGeofence_collectionName :: Lens' GetGeofence Text

-- | The geofence you're retrieving details for.
getGeofence_geofenceId :: Lens' GetGeofence Text

-- | <i>See:</i> <a>newGetGeofenceResponse</a> smart constructor.
data GetGeofenceResponse
GetGeofenceResponse' :: Int -> POSIX -> Text -> GeofenceGeometry -> Text -> POSIX -> GetGeofenceResponse

-- | The response's http status code.
[$sel:httpStatus:GetGeofenceResponse'] :: GetGeofenceResponse -> Int

-- | The timestamp for when the geofence collection was created in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
[$sel:createTime:GetGeofenceResponse'] :: GetGeofenceResponse -> POSIX

-- | The geofence identifier.
[$sel:geofenceId:GetGeofenceResponse'] :: GetGeofenceResponse -> Text

-- | Contains the geofence geometry details describing a polygon.
[$sel:geometry:GetGeofenceResponse'] :: GetGeofenceResponse -> GeofenceGeometry

-- | Identifies the state of the geofence. A geofence will hold one of the
--   following states:
--   
--   <ul>
--   <li><tt>ACTIVE</tt> — The geofence has been indexed by the
--   system.</li>
--   <li><tt>PENDING</tt> — The geofence is being processed by the
--   system.</li>
--   <li><tt>FAILED</tt> — The geofence failed to be indexed by the
--   system.</li>
--   <li><tt>DELETED</tt> — The geofence has been deleted from the system
--   index.</li>
--   <li><tt>DELETING</tt> — The geofence is being deleted from the system
--   index.</li>
--   </ul>
[$sel:status:GetGeofenceResponse'] :: GetGeofenceResponse -> Text

-- | The timestamp for when the geofence collection was last updated in
--   <a>ISO 8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
[$sel:updateTime:GetGeofenceResponse'] :: GetGeofenceResponse -> POSIX

-- | Create a value of <a>GetGeofenceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetGeofenceResponse'</a>,
--   <a>getGeofenceResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:createTime:GetGeofenceResponse'</a>,
--   <a>getGeofenceResponse_createTime</a> - The timestamp for when the
--   geofence collection was created in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
--   
--   <a>$sel:geofenceId:GetGeofence'</a>,
--   <a>getGeofenceResponse_geofenceId</a> - The geofence identifier.
--   
--   <a>$sel:geometry:GetGeofenceResponse'</a>,
--   <a>getGeofenceResponse_geometry</a> - Contains the geofence geometry
--   details describing a polygon.
--   
--   <a>$sel:status:GetGeofenceResponse'</a>,
--   <a>getGeofenceResponse_status</a> - Identifies the state of the
--   geofence. A geofence will hold one of the following states:
--   
--   <ul>
--   <li><tt>ACTIVE</tt> — The geofence has been indexed by the
--   system.</li>
--   <li><tt>PENDING</tt> — The geofence is being processed by the
--   system.</li>
--   <li><tt>FAILED</tt> — The geofence failed to be indexed by the
--   system.</li>
--   <li><tt>DELETED</tt> — The geofence has been deleted from the system
--   index.</li>
--   <li><tt>DELETING</tt> — The geofence is being deleted from the system
--   index.</li>
--   </ul>
--   
--   <a>$sel:updateTime:GetGeofenceResponse'</a>,
--   <a>getGeofenceResponse_updateTime</a> - The timestamp for when the
--   geofence collection was last updated in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
newGetGeofenceResponse :: Int -> UTCTime -> Text -> GeofenceGeometry -> Text -> UTCTime -> GetGeofenceResponse

-- | The response's http status code.
getGeofenceResponse_httpStatus :: Lens' GetGeofenceResponse Int

-- | The timestamp for when the geofence collection was created in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
getGeofenceResponse_createTime :: Lens' GetGeofenceResponse UTCTime

-- | The geofence identifier.
getGeofenceResponse_geofenceId :: Lens' GetGeofenceResponse Text

-- | Contains the geofence geometry details describing a polygon.
getGeofenceResponse_geometry :: Lens' GetGeofenceResponse GeofenceGeometry

-- | Identifies the state of the geofence. A geofence will hold one of the
--   following states:
--   
--   <ul>
--   <li><tt>ACTIVE</tt> — The geofence has been indexed by the
--   system.</li>
--   <li><tt>PENDING</tt> — The geofence is being processed by the
--   system.</li>
--   <li><tt>FAILED</tt> — The geofence failed to be indexed by the
--   system.</li>
--   <li><tt>DELETED</tt> — The geofence has been deleted from the system
--   index.</li>
--   <li><tt>DELETING</tt> — The geofence is being deleted from the system
--   index.</li>
--   </ul>
getGeofenceResponse_status :: Lens' GetGeofenceResponse Text

-- | The timestamp for when the geofence collection was last updated in
--   <a>ISO 8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
getGeofenceResponse_updateTime :: Lens' GetGeofenceResponse UTCTime
instance GHC.Generics.Generic Amazonka.Location.GetGeofence.GetGeofence
instance GHC.Show.Show Amazonka.Location.GetGeofence.GetGeofence
instance GHC.Read.Read Amazonka.Location.GetGeofence.GetGeofence
instance GHC.Classes.Eq Amazonka.Location.GetGeofence.GetGeofence
instance GHC.Generics.Generic Amazonka.Location.GetGeofence.GetGeofenceResponse
instance GHC.Show.Show Amazonka.Location.GetGeofence.GetGeofenceResponse
instance GHC.Classes.Eq Amazonka.Location.GetGeofence.GetGeofenceResponse
instance Amazonka.Types.AWSRequest Amazonka.Location.GetGeofence.GetGeofence
instance Control.DeepSeq.NFData Amazonka.Location.GetGeofence.GetGeofenceResponse
instance Data.Hashable.Class.Hashable Amazonka.Location.GetGeofence.GetGeofence
instance Control.DeepSeq.NFData Amazonka.Location.GetGeofence.GetGeofence
instance Amazonka.Data.Headers.ToHeaders Amazonka.Location.GetGeofence.GetGeofence
instance Amazonka.Data.Path.ToPath Amazonka.Location.GetGeofence.GetGeofence
instance Amazonka.Data.Query.ToQuery Amazonka.Location.GetGeofence.GetGeofence


-- | Retrieves the device position history from a tracker resource within a
--   specified range of time.
--   
--   Device positions are deleted after 30 days.
--   
--   This operation returns paginated results.
module Amazonka.Location.GetDevicePositionHistory

-- | <i>See:</i> <a>newGetDevicePositionHistory</a> smart constructor.
data GetDevicePositionHistory
GetDevicePositionHistory' :: Maybe Text -> Maybe POSIX -> Maybe POSIX -> Text -> Text -> GetDevicePositionHistory

-- | The pagination token specifying which page of results to return in the
--   response. If no token is provided, the default page is the first page.
--   
--   Default value: <tt>null</tt>
[$sel:nextToken:GetDevicePositionHistory'] :: GetDevicePositionHistory -> Maybe Text

-- | Specify the end time for the position history in <a>ISO 8601</a>
--   format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>. By default, the value will
--   be the time that the request is made.
--   
--   Requirement:
--   
--   <ul>
--   <li>The time specified for <tt>EndTimeExclusive</tt> must be after the
--   time for <tt>StartTimeInclusive</tt>.</li>
--   </ul>
[$sel:endTimeExclusive:GetDevicePositionHistory'] :: GetDevicePositionHistory -> Maybe POSIX

-- | Specify the start time for the position history in <a>ISO 8601</a>
--   format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>. By default, the value will
--   be 24 hours prior to the time that the request is made.
--   
--   Requirement:
--   
--   <ul>
--   <li>The time specified for <tt>StartTimeInclusive</tt> must be before
--   <tt>EndTimeExclusive</tt>.</li>
--   </ul>
[$sel:startTimeInclusive:GetDevicePositionHistory'] :: GetDevicePositionHistory -> Maybe POSIX

-- | The device whose position history you want to retrieve.
[$sel:deviceId:GetDevicePositionHistory'] :: GetDevicePositionHistory -> Text

-- | The tracker resource receiving the request for the device position
--   history.
[$sel:trackerName:GetDevicePositionHistory'] :: GetDevicePositionHistory -> Text

-- | Create a value of <a>GetDevicePositionHistory</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetDevicePositionHistory'</a>,
--   <a>getDevicePositionHistory_nextToken</a> - The pagination token
--   specifying which page of results to return in the response. If no
--   token is provided, the default page is the first page.
--   
--   Default value: <tt>null</tt>
--   
--   <a>$sel:endTimeExclusive:GetDevicePositionHistory'</a>,
--   <a>getDevicePositionHistory_endTimeExclusive</a> - Specify the end
--   time for the position history in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>. By default, the value will be the
--   time that the request is made.
--   
--   Requirement:
--   
--   <ul>
--   <li>The time specified for <tt>EndTimeExclusive</tt> must be after the
--   time for <tt>StartTimeInclusive</tt>.</li>
--   </ul>
--   
--   <a>$sel:startTimeInclusive:GetDevicePositionHistory'</a>,
--   <a>getDevicePositionHistory_startTimeInclusive</a> - Specify the start
--   time for the position history in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>. By default, the value will be 24
--   hours prior to the time that the request is made.
--   
--   Requirement:
--   
--   <ul>
--   <li>The time specified for <tt>StartTimeInclusive</tt> must be before
--   <tt>EndTimeExclusive</tt>.</li>
--   </ul>
--   
--   <a>$sel:deviceId:GetDevicePositionHistory'</a>,
--   <a>getDevicePositionHistory_deviceId</a> - The device whose position
--   history you want to retrieve.
--   
--   <a>$sel:trackerName:GetDevicePositionHistory'</a>,
--   <a>getDevicePositionHistory_trackerName</a> - The tracker resource
--   receiving the request for the device position history.
newGetDevicePositionHistory :: Text -> Text -> GetDevicePositionHistory

-- | The pagination token specifying which page of results to return in the
--   response. If no token is provided, the default page is the first page.
--   
--   Default value: <tt>null</tt>
getDevicePositionHistory_nextToken :: Lens' GetDevicePositionHistory (Maybe Text)

-- | Specify the end time for the position history in <a>ISO 8601</a>
--   format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>. By default, the value will
--   be the time that the request is made.
--   
--   Requirement:
--   
--   <ul>
--   <li>The time specified for <tt>EndTimeExclusive</tt> must be after the
--   time for <tt>StartTimeInclusive</tt>.</li>
--   </ul>
getDevicePositionHistory_endTimeExclusive :: Lens' GetDevicePositionHistory (Maybe UTCTime)

-- | Specify the start time for the position history in <a>ISO 8601</a>
--   format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>. By default, the value will
--   be 24 hours prior to the time that the request is made.
--   
--   Requirement:
--   
--   <ul>
--   <li>The time specified for <tt>StartTimeInclusive</tt> must be before
--   <tt>EndTimeExclusive</tt>.</li>
--   </ul>
getDevicePositionHistory_startTimeInclusive :: Lens' GetDevicePositionHistory (Maybe UTCTime)

-- | The device whose position history you want to retrieve.
getDevicePositionHistory_deviceId :: Lens' GetDevicePositionHistory Text

-- | The tracker resource receiving the request for the device position
--   history.
getDevicePositionHistory_trackerName :: Lens' GetDevicePositionHistory Text

-- | <i>See:</i> <a>newGetDevicePositionHistoryResponse</a> smart
--   constructor.
data GetDevicePositionHistoryResponse
GetDevicePositionHistoryResponse' :: Maybe Text -> Int -> [DevicePosition] -> GetDevicePositionHistoryResponse

-- | A pagination token indicating there are additional pages available.
--   You can use the token in a following request to fetch the next set of
--   results.
[$sel:nextToken:GetDevicePositionHistoryResponse'] :: GetDevicePositionHistoryResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetDevicePositionHistoryResponse'] :: GetDevicePositionHistoryResponse -> Int

-- | Contains the position history details for the requested device.
[$sel:devicePositions:GetDevicePositionHistoryResponse'] :: GetDevicePositionHistoryResponse -> [DevicePosition]

-- | Create a value of <a>GetDevicePositionHistoryResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetDevicePositionHistory'</a>,
--   <a>getDevicePositionHistoryResponse_nextToken</a> - A pagination token
--   indicating there are additional pages available. You can use the token
--   in a following request to fetch the next set of results.
--   
--   <a>$sel:httpStatus:GetDevicePositionHistoryResponse'</a>,
--   <a>getDevicePositionHistoryResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:devicePositions:GetDevicePositionHistoryResponse'</a>,
--   <a>getDevicePositionHistoryResponse_devicePositions</a> - Contains the
--   position history details for the requested device.
newGetDevicePositionHistoryResponse :: Int -> GetDevicePositionHistoryResponse

-- | A pagination token indicating there are additional pages available.
--   You can use the token in a following request to fetch the next set of
--   results.
getDevicePositionHistoryResponse_nextToken :: Lens' GetDevicePositionHistoryResponse (Maybe Text)

-- | The response's http status code.
getDevicePositionHistoryResponse_httpStatus :: Lens' GetDevicePositionHistoryResponse Int

-- | Contains the position history details for the requested device.
getDevicePositionHistoryResponse_devicePositions :: Lens' GetDevicePositionHistoryResponse [DevicePosition]
instance GHC.Generics.Generic Amazonka.Location.GetDevicePositionHistory.GetDevicePositionHistory
instance GHC.Show.Show Amazonka.Location.GetDevicePositionHistory.GetDevicePositionHistory
instance GHC.Read.Read Amazonka.Location.GetDevicePositionHistory.GetDevicePositionHistory
instance GHC.Classes.Eq Amazonka.Location.GetDevicePositionHistory.GetDevicePositionHistory
instance GHC.Generics.Generic Amazonka.Location.GetDevicePositionHistory.GetDevicePositionHistoryResponse
instance GHC.Show.Show Amazonka.Location.GetDevicePositionHistory.GetDevicePositionHistoryResponse
instance GHC.Classes.Eq Amazonka.Location.GetDevicePositionHistory.GetDevicePositionHistoryResponse
instance Amazonka.Types.AWSRequest Amazonka.Location.GetDevicePositionHistory.GetDevicePositionHistory
instance Control.DeepSeq.NFData Amazonka.Location.GetDevicePositionHistory.GetDevicePositionHistoryResponse
instance Amazonka.Pager.AWSPager Amazonka.Location.GetDevicePositionHistory.GetDevicePositionHistory
instance Data.Hashable.Class.Hashable Amazonka.Location.GetDevicePositionHistory.GetDevicePositionHistory
instance Control.DeepSeq.NFData Amazonka.Location.GetDevicePositionHistory.GetDevicePositionHistory
instance Amazonka.Data.Headers.ToHeaders Amazonka.Location.GetDevicePositionHistory.GetDevicePositionHistory
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Location.GetDevicePositionHistory.GetDevicePositionHistory
instance Amazonka.Data.Path.ToPath Amazonka.Location.GetDevicePositionHistory.GetDevicePositionHistory
instance Amazonka.Data.Query.ToQuery Amazonka.Location.GetDevicePositionHistory.GetDevicePositionHistory


-- | Retrieves a device's most recent position according to its sample
--   time.
--   
--   Device positions are deleted after 30 days.
module Amazonka.Location.GetDevicePosition

-- | <i>See:</i> <a>newGetDevicePosition</a> smart constructor.
data GetDevicePosition
GetDevicePosition' :: Text -> Text -> GetDevicePosition

-- | The device whose position you want to retrieve.
[$sel:deviceId:GetDevicePosition'] :: GetDevicePosition -> Text

-- | The tracker resource receiving the position update.
[$sel:trackerName:GetDevicePosition'] :: GetDevicePosition -> Text

-- | Create a value of <a>GetDevicePosition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceId:GetDevicePosition'</a>,
--   <a>getDevicePosition_deviceId</a> - The device whose position you want
--   to retrieve.
--   
--   <a>$sel:trackerName:GetDevicePosition'</a>,
--   <a>getDevicePosition_trackerName</a> - The tracker resource receiving
--   the position update.
newGetDevicePosition :: Text -> Text -> GetDevicePosition

-- | The device whose position you want to retrieve.
getDevicePosition_deviceId :: Lens' GetDevicePosition Text

-- | The tracker resource receiving the position update.
getDevicePosition_trackerName :: Lens' GetDevicePosition Text

-- | <i>See:</i> <a>newGetDevicePositionResponse</a> smart constructor.
data GetDevicePositionResponse
GetDevicePositionResponse' :: Maybe Text -> Int -> Sensitive (NonEmpty Double) -> POSIX -> POSIX -> GetDevicePositionResponse

-- | The device whose position you retrieved.
[$sel:deviceId:GetDevicePositionResponse'] :: GetDevicePositionResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetDevicePositionResponse'] :: GetDevicePositionResponse -> Int

-- | The last known device position.
[$sel:position:GetDevicePositionResponse'] :: GetDevicePositionResponse -> Sensitive (NonEmpty Double)

-- | The timestamp for when the tracker resource received the device
--   position in <a>ISO 8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
[$sel:receivedTime:GetDevicePositionResponse'] :: GetDevicePositionResponse -> POSIX

-- | The timestamp at which the device's position was determined. Uses
--   <a>ISO 8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
[$sel:sampleTime:GetDevicePositionResponse'] :: GetDevicePositionResponse -> POSIX

-- | Create a value of <a>GetDevicePositionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceId:GetDevicePosition'</a>,
--   <a>getDevicePositionResponse_deviceId</a> - The device whose position
--   you retrieved.
--   
--   <a>$sel:httpStatus:GetDevicePositionResponse'</a>,
--   <a>getDevicePositionResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:position:GetDevicePositionResponse'</a>,
--   <a>getDevicePositionResponse_position</a> - The last known device
--   position.
--   
--   <a>$sel:receivedTime:GetDevicePositionResponse'</a>,
--   <a>getDevicePositionResponse_receivedTime</a> - The timestamp for when
--   the tracker resource received the device position in <a>ISO 8601</a>
--   format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
--   
--   <a>$sel:sampleTime:GetDevicePositionResponse'</a>,
--   <a>getDevicePositionResponse_sampleTime</a> - The timestamp at which
--   the device's position was determined. Uses <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
newGetDevicePositionResponse :: Int -> NonEmpty Double -> UTCTime -> UTCTime -> GetDevicePositionResponse

-- | The device whose position you retrieved.
getDevicePositionResponse_deviceId :: Lens' GetDevicePositionResponse (Maybe Text)

-- | The response's http status code.
getDevicePositionResponse_httpStatus :: Lens' GetDevicePositionResponse Int

-- | The last known device position.
getDevicePositionResponse_position :: Lens' GetDevicePositionResponse (NonEmpty Double)

-- | The timestamp for when the tracker resource received the device
--   position in <a>ISO 8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
getDevicePositionResponse_receivedTime :: Lens' GetDevicePositionResponse UTCTime

-- | The timestamp at which the device's position was determined. Uses
--   <a>ISO 8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
getDevicePositionResponse_sampleTime :: Lens' GetDevicePositionResponse UTCTime
instance GHC.Generics.Generic Amazonka.Location.GetDevicePosition.GetDevicePosition
instance GHC.Show.Show Amazonka.Location.GetDevicePosition.GetDevicePosition
instance GHC.Read.Read Amazonka.Location.GetDevicePosition.GetDevicePosition
instance GHC.Classes.Eq Amazonka.Location.GetDevicePosition.GetDevicePosition
instance GHC.Generics.Generic Amazonka.Location.GetDevicePosition.GetDevicePositionResponse
instance GHC.Show.Show Amazonka.Location.GetDevicePosition.GetDevicePositionResponse
instance GHC.Classes.Eq Amazonka.Location.GetDevicePosition.GetDevicePositionResponse
instance Amazonka.Types.AWSRequest Amazonka.Location.GetDevicePosition.GetDevicePosition
instance Control.DeepSeq.NFData Amazonka.Location.GetDevicePosition.GetDevicePositionResponse
instance Data.Hashable.Class.Hashable Amazonka.Location.GetDevicePosition.GetDevicePosition
instance Control.DeepSeq.NFData Amazonka.Location.GetDevicePosition.GetDevicePosition
instance Amazonka.Data.Headers.ToHeaders Amazonka.Location.GetDevicePosition.GetDevicePosition
instance Amazonka.Data.Path.ToPath Amazonka.Location.GetDevicePosition.GetDevicePosition
instance Amazonka.Data.Query.ToQuery Amazonka.Location.GetDevicePosition.GetDevicePosition


-- | Removes the association between a tracker resource and a geofence
--   collection.
--   
--   Once you unlink a tracker resource from a geofence collection, the
--   tracker positions will no longer be automatically evaluated against
--   geofences.
module Amazonka.Location.DisassociateTrackerConsumer

-- | <i>See:</i> <a>newDisassociateTrackerConsumer</a> smart constructor.
data DisassociateTrackerConsumer
DisassociateTrackerConsumer' :: Text -> Text -> DisassociateTrackerConsumer

-- | The Amazon Resource Name (ARN) for the geofence collection to be
--   disassociated from the tracker resource. Used when you need to specify
--   a resource across all AWS.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:geofence-collection/ExampleGeofenceCollectionConsumer</tt></li>
--   </ul>
[$sel:consumerArn:DisassociateTrackerConsumer'] :: DisassociateTrackerConsumer -> Text

-- | The name of the tracker resource to be dissociated from the consumer.
[$sel:trackerName:DisassociateTrackerConsumer'] :: DisassociateTrackerConsumer -> Text

-- | Create a value of <a>DisassociateTrackerConsumer</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:consumerArn:DisassociateTrackerConsumer'</a>,
--   <a>disassociateTrackerConsumer_consumerArn</a> - The Amazon Resource
--   Name (ARN) for the geofence collection to be disassociated from the
--   tracker resource. Used when you need to specify a resource across all
--   AWS.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:geofence-collection/ExampleGeofenceCollectionConsumer</tt></li>
--   </ul>
--   
--   <a>$sel:trackerName:DisassociateTrackerConsumer'</a>,
--   <a>disassociateTrackerConsumer_trackerName</a> - The name of the
--   tracker resource to be dissociated from the consumer.
newDisassociateTrackerConsumer :: Text -> Text -> DisassociateTrackerConsumer

-- | The Amazon Resource Name (ARN) for the geofence collection to be
--   disassociated from the tracker resource. Used when you need to specify
--   a resource across all AWS.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:geofence-collection/ExampleGeofenceCollectionConsumer</tt></li>
--   </ul>
disassociateTrackerConsumer_consumerArn :: Lens' DisassociateTrackerConsumer Text

-- | The name of the tracker resource to be dissociated from the consumer.
disassociateTrackerConsumer_trackerName :: Lens' DisassociateTrackerConsumer Text

-- | <i>See:</i> <a>newDisassociateTrackerConsumerResponse</a> smart
--   constructor.
data DisassociateTrackerConsumerResponse
DisassociateTrackerConsumerResponse' :: Int -> DisassociateTrackerConsumerResponse

-- | The response's http status code.
[$sel:httpStatus:DisassociateTrackerConsumerResponse'] :: DisassociateTrackerConsumerResponse -> Int

-- | Create a value of <a>DisassociateTrackerConsumerResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DisassociateTrackerConsumerResponse'</a>,
--   <a>disassociateTrackerConsumerResponse_httpStatus</a> - The response's
--   http status code.
newDisassociateTrackerConsumerResponse :: Int -> DisassociateTrackerConsumerResponse

-- | The response's http status code.
disassociateTrackerConsumerResponse_httpStatus :: Lens' DisassociateTrackerConsumerResponse Int
instance GHC.Generics.Generic Amazonka.Location.DisassociateTrackerConsumer.DisassociateTrackerConsumer
instance GHC.Show.Show Amazonka.Location.DisassociateTrackerConsumer.DisassociateTrackerConsumer
instance GHC.Read.Read Amazonka.Location.DisassociateTrackerConsumer.DisassociateTrackerConsumer
instance GHC.Classes.Eq Amazonka.Location.DisassociateTrackerConsumer.DisassociateTrackerConsumer
instance GHC.Generics.Generic Amazonka.Location.DisassociateTrackerConsumer.DisassociateTrackerConsumerResponse
instance GHC.Show.Show Amazonka.Location.DisassociateTrackerConsumer.DisassociateTrackerConsumerResponse
instance GHC.Read.Read Amazonka.Location.DisassociateTrackerConsumer.DisassociateTrackerConsumerResponse
instance GHC.Classes.Eq Amazonka.Location.DisassociateTrackerConsumer.DisassociateTrackerConsumerResponse
instance Amazonka.Types.AWSRequest Amazonka.Location.DisassociateTrackerConsumer.DisassociateTrackerConsumer
instance Control.DeepSeq.NFData Amazonka.Location.DisassociateTrackerConsumer.DisassociateTrackerConsumerResponse
instance Data.Hashable.Class.Hashable Amazonka.Location.DisassociateTrackerConsumer.DisassociateTrackerConsumer
instance Control.DeepSeq.NFData Amazonka.Location.DisassociateTrackerConsumer.DisassociateTrackerConsumer
instance Amazonka.Data.Headers.ToHeaders Amazonka.Location.DisassociateTrackerConsumer.DisassociateTrackerConsumer
instance Amazonka.Data.Path.ToPath Amazonka.Location.DisassociateTrackerConsumer.DisassociateTrackerConsumer
instance Amazonka.Data.Query.ToQuery Amazonka.Location.DisassociateTrackerConsumer.DisassociateTrackerConsumer


-- | Retrieves the tracker resource details.
module Amazonka.Location.DescribeTracker

-- | <i>See:</i> <a>newDescribeTracker</a> smart constructor.
data DescribeTracker
DescribeTracker' :: Text -> DescribeTracker

-- | The name of the tracker resource.
[$sel:trackerName:DescribeTracker'] :: DescribeTracker -> Text

-- | Create a value of <a>DescribeTracker</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:trackerName:DescribeTracker'</a>,
--   <a>describeTracker_trackerName</a> - The name of the tracker resource.
newDescribeTracker :: Text -> DescribeTracker

-- | The name of the tracker resource.
describeTracker_trackerName :: Lens' DescribeTracker Text

-- | <i>See:</i> <a>newDescribeTrackerResponse</a> smart constructor.
data DescribeTrackerResponse
DescribeTrackerResponse' :: Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe PositionFiltering -> Int -> POSIX -> Text -> PricingPlan -> Text -> Text -> POSIX -> DescribeTrackerResponse

-- | The specified data provider for the tracker resource.
[$sel:pricingPlanDataSource:DescribeTrackerResponse'] :: DescribeTrackerResponse -> Maybe Text

-- | A key identifier for an <a>AWS KMS customer managed key</a> assigned
--   to the Amazon Location resource.
[$sel:kmsKeyId:DescribeTrackerResponse'] :: DescribeTrackerResponse -> Maybe Text

-- | The tags associated with the tracker resource.
[$sel:tags:DescribeTrackerResponse'] :: DescribeTrackerResponse -> Maybe (HashMap Text Text)

-- | The position filtering method of the tracker resource.
[$sel:positionFiltering:DescribeTrackerResponse'] :: DescribeTrackerResponse -> Maybe PositionFiltering

-- | The response's http status code.
[$sel:httpStatus:DescribeTrackerResponse'] :: DescribeTrackerResponse -> Int

-- | The timestamp for when the tracker resource was created in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
[$sel:createTime:DescribeTrackerResponse'] :: DescribeTrackerResponse -> POSIX

-- | The optional description for the tracker resource.
[$sel:description:DescribeTrackerResponse'] :: DescribeTrackerResponse -> Text

-- | The pricing plan selected for the specified tracker resource.
--   
--   For additional details and restrictions on each pricing plan option,
--   see <a>Amazon Location Service pricing</a>.
[$sel:pricingPlan:DescribeTrackerResponse'] :: DescribeTrackerResponse -> PricingPlan

-- | The Amazon Resource Name (ARN) for the tracker resource. Used when you
--   need to specify a resource across all AWS.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:tracker/ExampleTracker</tt></li>
--   </ul>
[$sel:trackerArn:DescribeTrackerResponse'] :: DescribeTrackerResponse -> Text

-- | The name of the tracker resource.
[$sel:trackerName:DescribeTrackerResponse'] :: DescribeTrackerResponse -> Text

-- | The timestamp for when the tracker resource was last updated in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
[$sel:updateTime:DescribeTrackerResponse'] :: DescribeTrackerResponse -> POSIX

-- | Create a value of <a>DescribeTrackerResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pricingPlanDataSource:DescribeTrackerResponse'</a>,
--   <a>describeTrackerResponse_pricingPlanDataSource</a> - The specified
--   data provider for the tracker resource.
--   
--   <a>$sel:kmsKeyId:DescribeTrackerResponse'</a>,
--   <a>describeTrackerResponse_kmsKeyId</a> - A key identifier for an
--   <a>AWS KMS customer managed key</a> assigned to the Amazon Location
--   resource.
--   
--   <a>$sel:tags:DescribeTrackerResponse'</a>,
--   <a>describeTrackerResponse_tags</a> - The tags associated with the
--   tracker resource.
--   
--   <a>$sel:positionFiltering:DescribeTrackerResponse'</a>,
--   <a>describeTrackerResponse_positionFiltering</a> - The position
--   filtering method of the tracker resource.
--   
--   <a>$sel:httpStatus:DescribeTrackerResponse'</a>,
--   <a>describeTrackerResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:createTime:DescribeTrackerResponse'</a>,
--   <a>describeTrackerResponse_createTime</a> - The timestamp for when the
--   tracker resource was created in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
--   
--   <a>$sel:description:DescribeTrackerResponse'</a>,
--   <a>describeTrackerResponse_description</a> - The optional description
--   for the tracker resource.
--   
--   <a>$sel:pricingPlan:DescribeTrackerResponse'</a>,
--   <a>describeTrackerResponse_pricingPlan</a> - The pricing plan selected
--   for the specified tracker resource.
--   
--   For additional details and restrictions on each pricing plan option,
--   see <a>Amazon Location Service pricing</a>.
--   
--   <a>$sel:trackerArn:DescribeTrackerResponse'</a>,
--   <a>describeTrackerResponse_trackerArn</a> - The Amazon Resource Name
--   (ARN) for the tracker resource. Used when you need to specify a
--   resource across all AWS.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:tracker/ExampleTracker</tt></li>
--   </ul>
--   
--   <a>$sel:trackerName:DescribeTracker'</a>,
--   <a>describeTrackerResponse_trackerName</a> - The name of the tracker
--   resource.
--   
--   <a>$sel:updateTime:DescribeTrackerResponse'</a>,
--   <a>describeTrackerResponse_updateTime</a> - The timestamp for when the
--   tracker resource was last updated in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
newDescribeTrackerResponse :: Int -> UTCTime -> Text -> PricingPlan -> Text -> Text -> UTCTime -> DescribeTrackerResponse

-- | The specified data provider for the tracker resource.
describeTrackerResponse_pricingPlanDataSource :: Lens' DescribeTrackerResponse (Maybe Text)

-- | A key identifier for an <a>AWS KMS customer managed key</a> assigned
--   to the Amazon Location resource.
describeTrackerResponse_kmsKeyId :: Lens' DescribeTrackerResponse (Maybe Text)

-- | The tags associated with the tracker resource.
describeTrackerResponse_tags :: Lens' DescribeTrackerResponse (Maybe (HashMap Text Text))

-- | The position filtering method of the tracker resource.
describeTrackerResponse_positionFiltering :: Lens' DescribeTrackerResponse (Maybe PositionFiltering)

-- | The response's http status code.
describeTrackerResponse_httpStatus :: Lens' DescribeTrackerResponse Int

-- | The timestamp for when the tracker resource was created in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
describeTrackerResponse_createTime :: Lens' DescribeTrackerResponse UTCTime

-- | The optional description for the tracker resource.
describeTrackerResponse_description :: Lens' DescribeTrackerResponse Text

-- | The pricing plan selected for the specified tracker resource.
--   
--   For additional details and restrictions on each pricing plan option,
--   see <a>Amazon Location Service pricing</a>.
describeTrackerResponse_pricingPlan :: Lens' DescribeTrackerResponse PricingPlan

-- | The Amazon Resource Name (ARN) for the tracker resource. Used when you
--   need to specify a resource across all AWS.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:tracker/ExampleTracker</tt></li>
--   </ul>
describeTrackerResponse_trackerArn :: Lens' DescribeTrackerResponse Text

-- | The name of the tracker resource.
describeTrackerResponse_trackerName :: Lens' DescribeTrackerResponse Text

-- | The timestamp for when the tracker resource was last updated in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
describeTrackerResponse_updateTime :: Lens' DescribeTrackerResponse UTCTime
instance GHC.Generics.Generic Amazonka.Location.DescribeTracker.DescribeTracker
instance GHC.Show.Show Amazonka.Location.DescribeTracker.DescribeTracker
instance GHC.Read.Read Amazonka.Location.DescribeTracker.DescribeTracker
instance GHC.Classes.Eq Amazonka.Location.DescribeTracker.DescribeTracker
instance GHC.Generics.Generic Amazonka.Location.DescribeTracker.DescribeTrackerResponse
instance GHC.Show.Show Amazonka.Location.DescribeTracker.DescribeTrackerResponse
instance GHC.Read.Read Amazonka.Location.DescribeTracker.DescribeTrackerResponse
instance GHC.Classes.Eq Amazonka.Location.DescribeTracker.DescribeTrackerResponse
instance Amazonka.Types.AWSRequest Amazonka.Location.DescribeTracker.DescribeTracker
instance Control.DeepSeq.NFData Amazonka.Location.DescribeTracker.DescribeTrackerResponse
instance Data.Hashable.Class.Hashable Amazonka.Location.DescribeTracker.DescribeTracker
instance Control.DeepSeq.NFData Amazonka.Location.DescribeTracker.DescribeTracker
instance Amazonka.Data.Headers.ToHeaders Amazonka.Location.DescribeTracker.DescribeTracker
instance Amazonka.Data.Path.ToPath Amazonka.Location.DescribeTracker.DescribeTracker
instance Amazonka.Data.Query.ToQuery Amazonka.Location.DescribeTracker.DescribeTracker


-- | Retrieves the route calculator resource details.
module Amazonka.Location.DescribeRouteCalculator

-- | <i>See:</i> <a>newDescribeRouteCalculator</a> smart constructor.
data DescribeRouteCalculator
DescribeRouteCalculator' :: Text -> DescribeRouteCalculator

-- | The name of the route calculator resource.
[$sel:calculatorName:DescribeRouteCalculator'] :: DescribeRouteCalculator -> Text

-- | Create a value of <a>DescribeRouteCalculator</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:calculatorName:DescribeRouteCalculator'</a>,
--   <a>describeRouteCalculator_calculatorName</a> - The name of the route
--   calculator resource.
newDescribeRouteCalculator :: Text -> DescribeRouteCalculator

-- | The name of the route calculator resource.
describeRouteCalculator_calculatorName :: Lens' DescribeRouteCalculator Text

-- | <i>See:</i> <a>newDescribeRouteCalculatorResponse</a> smart
--   constructor.
data DescribeRouteCalculatorResponse
DescribeRouteCalculatorResponse' :: Maybe (HashMap Text Text) -> Int -> Text -> Text -> POSIX -> Text -> Text -> PricingPlan -> POSIX -> DescribeRouteCalculatorResponse

-- | Tags associated with route calculator resource.
[$sel:tags:DescribeRouteCalculatorResponse'] :: DescribeRouteCalculatorResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:DescribeRouteCalculatorResponse'] :: DescribeRouteCalculatorResponse -> Int

-- | The Amazon Resource Name (ARN) for the Route calculator resource. Use
--   the ARN when you specify a resource across AWS.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:route-calculator/ExampleCalculator</tt></li>
--   </ul>
[$sel:calculatorArn:DescribeRouteCalculatorResponse'] :: DescribeRouteCalculatorResponse -> Text

-- | The name of the route calculator resource being described.
[$sel:calculatorName:DescribeRouteCalculatorResponse'] :: DescribeRouteCalculatorResponse -> Text

-- | The timestamp when the route calculator resource was created in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
--   
--   <ul>
--   <li>For example, <tt>2020–07-2T12:15:20.000Z+01:00</tt></li>
--   </ul>
[$sel:createTime:DescribeRouteCalculatorResponse'] :: DescribeRouteCalculatorResponse -> POSIX

-- | The data provider of traffic and road network data. Indicates one of
--   the available providers:
--   
--   <ul>
--   <li><pre>Esri</pre></li>
--   <li><pre>Here</pre></li>
--   </ul>
--   
--   For more information about data providers, see <a>Amazon Location
--   Service data providers</a>.
[$sel:dataSource:DescribeRouteCalculatorResponse'] :: DescribeRouteCalculatorResponse -> Text

-- | The optional description of the route calculator resource.
[$sel:description:DescribeRouteCalculatorResponse'] :: DescribeRouteCalculatorResponse -> Text

-- | The pricing plan selected for the specified route calculator resource.
--   
--   For additional details and restrictions on each pricing plan option,
--   see <a>Amazon Location Service pricing</a>.
[$sel:pricingPlan:DescribeRouteCalculatorResponse'] :: DescribeRouteCalculatorResponse -> PricingPlan

-- | The timestamp when the route calculator resource was last updated in
--   <a>ISO 8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
--   
--   <ul>
--   <li>For example, <tt>2020–07-2T12:15:20.000Z+01:00</tt></li>
--   </ul>
[$sel:updateTime:DescribeRouteCalculatorResponse'] :: DescribeRouteCalculatorResponse -> POSIX

-- | Create a value of <a>DescribeRouteCalculatorResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:DescribeRouteCalculatorResponse'</a>,
--   <a>describeRouteCalculatorResponse_tags</a> - Tags associated with
--   route calculator resource.
--   
--   <a>$sel:httpStatus:DescribeRouteCalculatorResponse'</a>,
--   <a>describeRouteCalculatorResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:calculatorArn:DescribeRouteCalculatorResponse'</a>,
--   <a>describeRouteCalculatorResponse_calculatorArn</a> - The Amazon
--   Resource Name (ARN) for the Route calculator resource. Use the ARN
--   when you specify a resource across AWS.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:route-calculator/ExampleCalculator</tt></li>
--   </ul>
--   
--   <a>$sel:calculatorName:DescribeRouteCalculator'</a>,
--   <a>describeRouteCalculatorResponse_calculatorName</a> - The name of
--   the route calculator resource being described.
--   
--   <a>$sel:createTime:DescribeRouteCalculatorResponse'</a>,
--   <a>describeRouteCalculatorResponse_createTime</a> - The timestamp when
--   the route calculator resource was created in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
--   
--   <ul>
--   <li>For example, <tt>2020–07-2T12:15:20.000Z+01:00</tt></li>
--   </ul>
--   
--   <a>$sel:dataSource:DescribeRouteCalculatorResponse'</a>,
--   <a>describeRouteCalculatorResponse_dataSource</a> - The data provider
--   of traffic and road network data. Indicates one of the available
--   providers:
--   
--   <ul>
--   <li><pre>Esri</pre></li>
--   <li><pre>Here</pre></li>
--   </ul>
--   
--   For more information about data providers, see <a>Amazon Location
--   Service data providers</a>.
--   
--   <a>$sel:description:DescribeRouteCalculatorResponse'</a>,
--   <a>describeRouteCalculatorResponse_description</a> - The optional
--   description of the route calculator resource.
--   
--   <a>$sel:pricingPlan:DescribeRouteCalculatorResponse'</a>,
--   <a>describeRouteCalculatorResponse_pricingPlan</a> - The pricing plan
--   selected for the specified route calculator resource.
--   
--   For additional details and restrictions on each pricing plan option,
--   see <a>Amazon Location Service pricing</a>.
--   
--   <a>$sel:updateTime:DescribeRouteCalculatorResponse'</a>,
--   <a>describeRouteCalculatorResponse_updateTime</a> - The timestamp when
--   the route calculator resource was last updated in <a>ISO 8601</a>
--   format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
--   
--   <ul>
--   <li>For example, <tt>2020–07-2T12:15:20.000Z+01:00</tt></li>
--   </ul>
newDescribeRouteCalculatorResponse :: Int -> Text -> Text -> UTCTime -> Text -> Text -> PricingPlan -> UTCTime -> DescribeRouteCalculatorResponse

-- | Tags associated with route calculator resource.
describeRouteCalculatorResponse_tags :: Lens' DescribeRouteCalculatorResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
describeRouteCalculatorResponse_httpStatus :: Lens' DescribeRouteCalculatorResponse Int

-- | The Amazon Resource Name (ARN) for the Route calculator resource. Use
--   the ARN when you specify a resource across AWS.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:route-calculator/ExampleCalculator</tt></li>
--   </ul>
describeRouteCalculatorResponse_calculatorArn :: Lens' DescribeRouteCalculatorResponse Text

-- | The name of the route calculator resource being described.
describeRouteCalculatorResponse_calculatorName :: Lens' DescribeRouteCalculatorResponse Text

-- | The timestamp when the route calculator resource was created in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
--   
--   <ul>
--   <li>For example, <tt>2020–07-2T12:15:20.000Z+01:00</tt></li>
--   </ul>
describeRouteCalculatorResponse_createTime :: Lens' DescribeRouteCalculatorResponse UTCTime

-- | The data provider of traffic and road network data. Indicates one of
--   the available providers:
--   
--   <ul>
--   <li><pre>Esri</pre></li>
--   <li><pre>Here</pre></li>
--   </ul>
--   
--   For more information about data providers, see <a>Amazon Location
--   Service data providers</a>.
describeRouteCalculatorResponse_dataSource :: Lens' DescribeRouteCalculatorResponse Text

-- | The optional description of the route calculator resource.
describeRouteCalculatorResponse_description :: Lens' DescribeRouteCalculatorResponse Text

-- | The pricing plan selected for the specified route calculator resource.
--   
--   For additional details and restrictions on each pricing plan option,
--   see <a>Amazon Location Service pricing</a>.
describeRouteCalculatorResponse_pricingPlan :: Lens' DescribeRouteCalculatorResponse PricingPlan

-- | The timestamp when the route calculator resource was last updated in
--   <a>ISO 8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
--   
--   <ul>
--   <li>For example, <tt>2020–07-2T12:15:20.000Z+01:00</tt></li>
--   </ul>
describeRouteCalculatorResponse_updateTime :: Lens' DescribeRouteCalculatorResponse UTCTime
instance GHC.Generics.Generic Amazonka.Location.DescribeRouteCalculator.DescribeRouteCalculator
instance GHC.Show.Show Amazonka.Location.DescribeRouteCalculator.DescribeRouteCalculator
instance GHC.Read.Read Amazonka.Location.DescribeRouteCalculator.DescribeRouteCalculator
instance GHC.Classes.Eq Amazonka.Location.DescribeRouteCalculator.DescribeRouteCalculator
instance GHC.Generics.Generic Amazonka.Location.DescribeRouteCalculator.DescribeRouteCalculatorResponse
instance GHC.Show.Show Amazonka.Location.DescribeRouteCalculator.DescribeRouteCalculatorResponse
instance GHC.Read.Read Amazonka.Location.DescribeRouteCalculator.DescribeRouteCalculatorResponse
instance GHC.Classes.Eq Amazonka.Location.DescribeRouteCalculator.DescribeRouteCalculatorResponse
instance Amazonka.Types.AWSRequest Amazonka.Location.DescribeRouteCalculator.DescribeRouteCalculator
instance Control.DeepSeq.NFData Amazonka.Location.DescribeRouteCalculator.DescribeRouteCalculatorResponse
instance Data.Hashable.Class.Hashable Amazonka.Location.DescribeRouteCalculator.DescribeRouteCalculator
instance Control.DeepSeq.NFData Amazonka.Location.DescribeRouteCalculator.DescribeRouteCalculator
instance Amazonka.Data.Headers.ToHeaders Amazonka.Location.DescribeRouteCalculator.DescribeRouteCalculator
instance Amazonka.Data.Path.ToPath Amazonka.Location.DescribeRouteCalculator.DescribeRouteCalculator
instance Amazonka.Data.Query.ToQuery Amazonka.Location.DescribeRouteCalculator.DescribeRouteCalculator


-- | Retrieves the place index resource details.
module Amazonka.Location.DescribePlaceIndex

-- | <i>See:</i> <a>newDescribePlaceIndex</a> smart constructor.
data DescribePlaceIndex
DescribePlaceIndex' :: Text -> DescribePlaceIndex

-- | The name of the place index resource.
[$sel:indexName:DescribePlaceIndex'] :: DescribePlaceIndex -> Text

-- | Create a value of <a>DescribePlaceIndex</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:indexName:DescribePlaceIndex'</a>,
--   <a>describePlaceIndex_indexName</a> - The name of the place index
--   resource.
newDescribePlaceIndex :: Text -> DescribePlaceIndex

-- | The name of the place index resource.
describePlaceIndex_indexName :: Lens' DescribePlaceIndex Text

-- | <i>See:</i> <a>newDescribePlaceIndexResponse</a> smart constructor.
data DescribePlaceIndexResponse
DescribePlaceIndexResponse' :: Maybe (HashMap Text Text) -> Int -> POSIX -> Text -> DataSourceConfiguration -> Text -> Text -> Text -> PricingPlan -> POSIX -> DescribePlaceIndexResponse

-- | Tags associated with place index resource.
[$sel:tags:DescribePlaceIndexResponse'] :: DescribePlaceIndexResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:DescribePlaceIndexResponse'] :: DescribePlaceIndexResponse -> Int

-- | The timestamp for when the place index resource was created in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
[$sel:createTime:DescribePlaceIndexResponse'] :: DescribePlaceIndexResponse -> POSIX

-- | The data provider of geospatial data. Indicates one of the available
--   providers:
--   
--   <ul>
--   <li><pre>Esri</pre></li>
--   <li><pre>Here</pre></li>
--   </ul>
--   
--   For additional details on data providers, see <a>Amazon Location
--   Service data providers</a>.
[$sel:dataSource:DescribePlaceIndexResponse'] :: DescribePlaceIndexResponse -> Text

-- | The specified data storage option for requesting Places.
[$sel:dataSourceConfiguration:DescribePlaceIndexResponse'] :: DescribePlaceIndexResponse -> DataSourceConfiguration

-- | The optional description for the place index resource.
[$sel:description:DescribePlaceIndexResponse'] :: DescribePlaceIndexResponse -> Text

-- | The Amazon Resource Name (ARN) for the place index resource. Used to
--   specify a resource across AWS.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:place-index/ExamplePlaceIndex</tt></li>
--   </ul>
[$sel:indexArn:DescribePlaceIndexResponse'] :: DescribePlaceIndexResponse -> Text

-- | The name of the place index resource being described.
[$sel:indexName:DescribePlaceIndexResponse'] :: DescribePlaceIndexResponse -> Text

-- | The pricing plan selected for the specified place index resource.
--   
--   For additional details and restrictions on each pricing plan option,
--   see <a>Amazon Location Service pricing</a>.
[$sel:pricingPlan:DescribePlaceIndexResponse'] :: DescribePlaceIndexResponse -> PricingPlan

-- | The timestamp for when the place index resource was last updated in
--   <a>ISO 8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
[$sel:updateTime:DescribePlaceIndexResponse'] :: DescribePlaceIndexResponse -> POSIX

-- | Create a value of <a>DescribePlaceIndexResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:DescribePlaceIndexResponse'</a>,
--   <a>describePlaceIndexResponse_tags</a> - Tags associated with place
--   index resource.
--   
--   <a>$sel:httpStatus:DescribePlaceIndexResponse'</a>,
--   <a>describePlaceIndexResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:createTime:DescribePlaceIndexResponse'</a>,
--   <a>describePlaceIndexResponse_createTime</a> - The timestamp for when
--   the place index resource was created in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
--   
--   <a>$sel:dataSource:DescribePlaceIndexResponse'</a>,
--   <a>describePlaceIndexResponse_dataSource</a> - The data provider of
--   geospatial data. Indicates one of the available providers:
--   
--   <ul>
--   <li><pre>Esri</pre></li>
--   <li><pre>Here</pre></li>
--   </ul>
--   
--   For additional details on data providers, see <a>Amazon Location
--   Service data providers</a>.
--   
--   <a>$sel:dataSourceConfiguration:DescribePlaceIndexResponse'</a>,
--   <a>describePlaceIndexResponse_dataSourceConfiguration</a> - The
--   specified data storage option for requesting Places.
--   
--   <a>$sel:description:DescribePlaceIndexResponse'</a>,
--   <a>describePlaceIndexResponse_description</a> - The optional
--   description for the place index resource.
--   
--   <a>$sel:indexArn:DescribePlaceIndexResponse'</a>,
--   <a>describePlaceIndexResponse_indexArn</a> - The Amazon Resource Name
--   (ARN) for the place index resource. Used to specify a resource across
--   AWS.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:place-index/ExamplePlaceIndex</tt></li>
--   </ul>
--   
--   <a>$sel:indexName:DescribePlaceIndex'</a>,
--   <a>describePlaceIndexResponse_indexName</a> - The name of the place
--   index resource being described.
--   
--   <a>$sel:pricingPlan:DescribePlaceIndexResponse'</a>,
--   <a>describePlaceIndexResponse_pricingPlan</a> - The pricing plan
--   selected for the specified place index resource.
--   
--   For additional details and restrictions on each pricing plan option,
--   see <a>Amazon Location Service pricing</a>.
--   
--   <a>$sel:updateTime:DescribePlaceIndexResponse'</a>,
--   <a>describePlaceIndexResponse_updateTime</a> - The timestamp for when
--   the place index resource was last updated in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
newDescribePlaceIndexResponse :: Int -> UTCTime -> Text -> DataSourceConfiguration -> Text -> Text -> Text -> PricingPlan -> UTCTime -> DescribePlaceIndexResponse

-- | Tags associated with place index resource.
describePlaceIndexResponse_tags :: Lens' DescribePlaceIndexResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
describePlaceIndexResponse_httpStatus :: Lens' DescribePlaceIndexResponse Int

-- | The timestamp for when the place index resource was created in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
describePlaceIndexResponse_createTime :: Lens' DescribePlaceIndexResponse UTCTime

-- | The data provider of geospatial data. Indicates one of the available
--   providers:
--   
--   <ul>
--   <li><pre>Esri</pre></li>
--   <li><pre>Here</pre></li>
--   </ul>
--   
--   For additional details on data providers, see <a>Amazon Location
--   Service data providers</a>.
describePlaceIndexResponse_dataSource :: Lens' DescribePlaceIndexResponse Text

-- | The specified data storage option for requesting Places.
describePlaceIndexResponse_dataSourceConfiguration :: Lens' DescribePlaceIndexResponse DataSourceConfiguration

-- | The optional description for the place index resource.
describePlaceIndexResponse_description :: Lens' DescribePlaceIndexResponse Text

-- | The Amazon Resource Name (ARN) for the place index resource. Used to
--   specify a resource across AWS.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:place-index/ExamplePlaceIndex</tt></li>
--   </ul>
describePlaceIndexResponse_indexArn :: Lens' DescribePlaceIndexResponse Text

-- | The name of the place index resource being described.
describePlaceIndexResponse_indexName :: Lens' DescribePlaceIndexResponse Text

-- | The pricing plan selected for the specified place index resource.
--   
--   For additional details and restrictions on each pricing plan option,
--   see <a>Amazon Location Service pricing</a>.
describePlaceIndexResponse_pricingPlan :: Lens' DescribePlaceIndexResponse PricingPlan

-- | The timestamp for when the place index resource was last updated in
--   <a>ISO 8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
describePlaceIndexResponse_updateTime :: Lens' DescribePlaceIndexResponse UTCTime
instance GHC.Generics.Generic Amazonka.Location.DescribePlaceIndex.DescribePlaceIndex
instance GHC.Show.Show Amazonka.Location.DescribePlaceIndex.DescribePlaceIndex
instance GHC.Read.Read Amazonka.Location.DescribePlaceIndex.DescribePlaceIndex
instance GHC.Classes.Eq Amazonka.Location.DescribePlaceIndex.DescribePlaceIndex
instance GHC.Generics.Generic Amazonka.Location.DescribePlaceIndex.DescribePlaceIndexResponse
instance GHC.Show.Show Amazonka.Location.DescribePlaceIndex.DescribePlaceIndexResponse
instance GHC.Read.Read Amazonka.Location.DescribePlaceIndex.DescribePlaceIndexResponse
instance GHC.Classes.Eq Amazonka.Location.DescribePlaceIndex.DescribePlaceIndexResponse
instance Amazonka.Types.AWSRequest Amazonka.Location.DescribePlaceIndex.DescribePlaceIndex
instance Control.DeepSeq.NFData Amazonka.Location.DescribePlaceIndex.DescribePlaceIndexResponse
instance Data.Hashable.Class.Hashable Amazonka.Location.DescribePlaceIndex.DescribePlaceIndex
instance Control.DeepSeq.NFData Amazonka.Location.DescribePlaceIndex.DescribePlaceIndex
instance Amazonka.Data.Headers.ToHeaders Amazonka.Location.DescribePlaceIndex.DescribePlaceIndex
instance Amazonka.Data.Path.ToPath Amazonka.Location.DescribePlaceIndex.DescribePlaceIndex
instance Amazonka.Data.Query.ToQuery Amazonka.Location.DescribePlaceIndex.DescribePlaceIndex


-- | Retrieves the map resource details.
module Amazonka.Location.DescribeMap

-- | <i>See:</i> <a>newDescribeMap</a> smart constructor.
data DescribeMap
DescribeMap' :: Text -> DescribeMap

-- | The name of the map resource.
[$sel:mapName:DescribeMap'] :: DescribeMap -> Text

-- | Create a value of <a>DescribeMap</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mapName:DescribeMap'</a>, <a>describeMap_mapName</a> - The
--   name of the map resource.
newDescribeMap :: Text -> DescribeMap

-- | The name of the map resource.
describeMap_mapName :: Lens' DescribeMap Text

-- | <i>See:</i> <a>newDescribeMapResponse</a> smart constructor.
data DescribeMapResponse
DescribeMapResponse' :: Maybe (HashMap Text Text) -> Int -> MapConfiguration -> POSIX -> Text -> Text -> Text -> Text -> PricingPlan -> POSIX -> DescribeMapResponse

-- | Tags associated with the map resource.
[$sel:tags:DescribeMapResponse'] :: DescribeMapResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:DescribeMapResponse'] :: DescribeMapResponse -> Int

-- | Specifies the map tile style selected from a partner data provider.
[$sel:configuration:DescribeMapResponse'] :: DescribeMapResponse -> MapConfiguration

-- | The timestamp for when the map resource was created in <a>ISO 8601</a>
--   format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
[$sel:createTime:DescribeMapResponse'] :: DescribeMapResponse -> POSIX

-- | Specifies the data provider for the associated map tiles.
[$sel:dataSource:DescribeMapResponse'] :: DescribeMapResponse -> Text

-- | The optional description for the map resource.
[$sel:description:DescribeMapResponse'] :: DescribeMapResponse -> Text

-- | The Amazon Resource Name (ARN) for the map resource. Used to specify a
--   resource across all AWS.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:maps/ExampleMap</tt></li>
--   </ul>
[$sel:mapArn:DescribeMapResponse'] :: DescribeMapResponse -> Text

-- | The map style selected from an available provider.
[$sel:mapName:DescribeMapResponse'] :: DescribeMapResponse -> Text

-- | The pricing plan selected for the specified map resource.
--   
--   <pre>
--   &lt;p&gt;For additional details and restrictions on each pricing plan option, see &lt;a href="https://aws.amazon.com/location/pricing/"&gt;Amazon Location Service pricing&lt;/a&gt;.&lt;/p&gt;
--   </pre>
[$sel:pricingPlan:DescribeMapResponse'] :: DescribeMapResponse -> PricingPlan

-- | The timestamp for when the map resource was last update in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
[$sel:updateTime:DescribeMapResponse'] :: DescribeMapResponse -> POSIX

-- | Create a value of <a>DescribeMapResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:DescribeMapResponse'</a>, <a>describeMapResponse_tags</a>
--   - Tags associated with the map resource.
--   
--   <a>$sel:httpStatus:DescribeMapResponse'</a>,
--   <a>describeMapResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:configuration:DescribeMapResponse'</a>,
--   <a>describeMapResponse_configuration</a> - Specifies the map tile
--   style selected from a partner data provider.
--   
--   <a>$sel:createTime:DescribeMapResponse'</a>,
--   <a>describeMapResponse_createTime</a> - The timestamp for when the map
--   resource was created in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
--   
--   <a>$sel:dataSource:DescribeMapResponse'</a>,
--   <a>describeMapResponse_dataSource</a> - Specifies the data provider
--   for the associated map tiles.
--   
--   <a>$sel:description:DescribeMapResponse'</a>,
--   <a>describeMapResponse_description</a> - The optional description for
--   the map resource.
--   
--   <a>$sel:mapArn:DescribeMapResponse'</a>,
--   <a>describeMapResponse_mapArn</a> - The Amazon Resource Name (ARN) for
--   the map resource. Used to specify a resource across all AWS.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:maps/ExampleMap</tt></li>
--   </ul>
--   
--   <a>$sel:mapName:DescribeMap'</a>, <a>describeMapResponse_mapName</a> -
--   The map style selected from an available provider.
--   
--   <a>$sel:pricingPlan:DescribeMapResponse'</a>,
--   <a>describeMapResponse_pricingPlan</a> - The pricing plan selected for
--   the specified map resource.
--   
--   <pre>
--   &lt;p&gt;For additional details and restrictions on each pricing plan option, see &lt;a href="https://aws.amazon.com/location/pricing/"&gt;Amazon Location Service pricing&lt;/a&gt;.&lt;/p&gt;
--   </pre>
--   
--   <a>$sel:updateTime:DescribeMapResponse'</a>,
--   <a>describeMapResponse_updateTime</a> - The timestamp for when the map
--   resource was last update in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
newDescribeMapResponse :: Int -> MapConfiguration -> UTCTime -> Text -> Text -> Text -> Text -> PricingPlan -> UTCTime -> DescribeMapResponse

-- | Tags associated with the map resource.
describeMapResponse_tags :: Lens' DescribeMapResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
describeMapResponse_httpStatus :: Lens' DescribeMapResponse Int

-- | Specifies the map tile style selected from a partner data provider.
describeMapResponse_configuration :: Lens' DescribeMapResponse MapConfiguration

-- | The timestamp for when the map resource was created in <a>ISO 8601</a>
--   format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
describeMapResponse_createTime :: Lens' DescribeMapResponse UTCTime

-- | Specifies the data provider for the associated map tiles.
describeMapResponse_dataSource :: Lens' DescribeMapResponse Text

-- | The optional description for the map resource.
describeMapResponse_description :: Lens' DescribeMapResponse Text

-- | The Amazon Resource Name (ARN) for the map resource. Used to specify a
--   resource across all AWS.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:maps/ExampleMap</tt></li>
--   </ul>
describeMapResponse_mapArn :: Lens' DescribeMapResponse Text

-- | The map style selected from an available provider.
describeMapResponse_mapName :: Lens' DescribeMapResponse Text

-- | The pricing plan selected for the specified map resource.
--   
--   <pre>
--   &lt;p&gt;For additional details and restrictions on each pricing plan option, see &lt;a href="https://aws.amazon.com/location/pricing/"&gt;Amazon Location Service pricing&lt;/a&gt;.&lt;/p&gt;
--   </pre>
describeMapResponse_pricingPlan :: Lens' DescribeMapResponse PricingPlan

-- | The timestamp for when the map resource was last update in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
describeMapResponse_updateTime :: Lens' DescribeMapResponse UTCTime
instance GHC.Generics.Generic Amazonka.Location.DescribeMap.DescribeMap
instance GHC.Show.Show Amazonka.Location.DescribeMap.DescribeMap
instance GHC.Read.Read Amazonka.Location.DescribeMap.DescribeMap
instance GHC.Classes.Eq Amazonka.Location.DescribeMap.DescribeMap
instance GHC.Generics.Generic Amazonka.Location.DescribeMap.DescribeMapResponse
instance GHC.Show.Show Amazonka.Location.DescribeMap.DescribeMapResponse
instance GHC.Read.Read Amazonka.Location.DescribeMap.DescribeMapResponse
instance GHC.Classes.Eq Amazonka.Location.DescribeMap.DescribeMapResponse
instance Amazonka.Types.AWSRequest Amazonka.Location.DescribeMap.DescribeMap
instance Control.DeepSeq.NFData Amazonka.Location.DescribeMap.DescribeMapResponse
instance Data.Hashable.Class.Hashable Amazonka.Location.DescribeMap.DescribeMap
instance Control.DeepSeq.NFData Amazonka.Location.DescribeMap.DescribeMap
instance Amazonka.Data.Headers.ToHeaders Amazonka.Location.DescribeMap.DescribeMap
instance Amazonka.Data.Path.ToPath Amazonka.Location.DescribeMap.DescribeMap
instance Amazonka.Data.Query.ToQuery Amazonka.Location.DescribeMap.DescribeMap


-- | Retrieves the geofence collection details.
module Amazonka.Location.DescribeGeofenceCollection

-- | <i>See:</i> <a>newDescribeGeofenceCollection</a> smart constructor.
data DescribeGeofenceCollection
DescribeGeofenceCollection' :: Text -> DescribeGeofenceCollection

-- | The name of the geofence collection.
[$sel:collectionName:DescribeGeofenceCollection'] :: DescribeGeofenceCollection -> Text

-- | Create a value of <a>DescribeGeofenceCollection</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:collectionName:DescribeGeofenceCollection'</a>,
--   <a>describeGeofenceCollection_collectionName</a> - The name of the
--   geofence collection.
newDescribeGeofenceCollection :: Text -> DescribeGeofenceCollection

-- | The name of the geofence collection.
describeGeofenceCollection_collectionName :: Lens' DescribeGeofenceCollection Text

-- | <i>See:</i> <a>newDescribeGeofenceCollectionResponse</a> smart
--   constructor.
data DescribeGeofenceCollectionResponse
DescribeGeofenceCollectionResponse' :: Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Int -> Text -> Text -> POSIX -> Text -> PricingPlan -> POSIX -> DescribeGeofenceCollectionResponse

-- | The specified data provider for the geofence collection.
[$sel:pricingPlanDataSource:DescribeGeofenceCollectionResponse'] :: DescribeGeofenceCollectionResponse -> Maybe Text

-- | A key identifier for an <a>AWS KMS customer managed key</a> assigned
--   to the Amazon Location resource
[$sel:kmsKeyId:DescribeGeofenceCollectionResponse'] :: DescribeGeofenceCollectionResponse -> Maybe Text

-- | Displays the key, value pairs of tags associated with this resource.
[$sel:tags:DescribeGeofenceCollectionResponse'] :: DescribeGeofenceCollectionResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:DescribeGeofenceCollectionResponse'] :: DescribeGeofenceCollectionResponse -> Int

-- | The Amazon Resource Name (ARN) for the geofence collection resource.
--   Used when you need to specify a resource across all AWS.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:geofence-collection/ExampleGeofenceCollection</tt></li>
--   </ul>
[$sel:collectionArn:DescribeGeofenceCollectionResponse'] :: DescribeGeofenceCollectionResponse -> Text

-- | The name of the geofence collection.
[$sel:collectionName:DescribeGeofenceCollectionResponse'] :: DescribeGeofenceCollectionResponse -> Text

-- | The timestamp for when the geofence resource was created in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
[$sel:createTime:DescribeGeofenceCollectionResponse'] :: DescribeGeofenceCollectionResponse -> POSIX

-- | The optional description for the geofence collection.
[$sel:description:DescribeGeofenceCollectionResponse'] :: DescribeGeofenceCollectionResponse -> Text

-- | The pricing plan selected for the specified geofence collection.
--   
--   For additional details and restrictions on each pricing plan option,
--   see the <a>Amazon Location Service pricing page</a>.
[$sel:pricingPlan:DescribeGeofenceCollectionResponse'] :: DescribeGeofenceCollectionResponse -> PricingPlan

-- | The timestamp for when the geofence collection was last updated in
--   <a>ISO 8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
[$sel:updateTime:DescribeGeofenceCollectionResponse'] :: DescribeGeofenceCollectionResponse -> POSIX

-- | Create a value of <a>DescribeGeofenceCollectionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pricingPlanDataSource:DescribeGeofenceCollectionResponse'</a>,
--   <a>describeGeofenceCollectionResponse_pricingPlanDataSource</a> - The
--   specified data provider for the geofence collection.
--   
--   <a>$sel:kmsKeyId:DescribeGeofenceCollectionResponse'</a>,
--   <a>describeGeofenceCollectionResponse_kmsKeyId</a> - A key identifier
--   for an <a>AWS KMS customer managed key</a> assigned to the Amazon
--   Location resource
--   
--   <a>$sel:tags:DescribeGeofenceCollectionResponse'</a>,
--   <a>describeGeofenceCollectionResponse_tags</a> - Displays the key,
--   value pairs of tags associated with this resource.
--   
--   <a>$sel:httpStatus:DescribeGeofenceCollectionResponse'</a>,
--   <a>describeGeofenceCollectionResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:collectionArn:DescribeGeofenceCollectionResponse'</a>,
--   <a>describeGeofenceCollectionResponse_collectionArn</a> - The Amazon
--   Resource Name (ARN) for the geofence collection resource. Used when
--   you need to specify a resource across all AWS.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:geofence-collection/ExampleGeofenceCollection</tt></li>
--   </ul>
--   
--   <a>$sel:collectionName:DescribeGeofenceCollection'</a>,
--   <a>describeGeofenceCollectionResponse_collectionName</a> - The name of
--   the geofence collection.
--   
--   <a>$sel:createTime:DescribeGeofenceCollectionResponse'</a>,
--   <a>describeGeofenceCollectionResponse_createTime</a> - The timestamp
--   for when the geofence resource was created in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
--   
--   <a>$sel:description:DescribeGeofenceCollectionResponse'</a>,
--   <a>describeGeofenceCollectionResponse_description</a> - The optional
--   description for the geofence collection.
--   
--   <a>$sel:pricingPlan:DescribeGeofenceCollectionResponse'</a>,
--   <a>describeGeofenceCollectionResponse_pricingPlan</a> - The pricing
--   plan selected for the specified geofence collection.
--   
--   For additional details and restrictions on each pricing plan option,
--   see the <a>Amazon Location Service pricing page</a>.
--   
--   <a>$sel:updateTime:DescribeGeofenceCollectionResponse'</a>,
--   <a>describeGeofenceCollectionResponse_updateTime</a> - The timestamp
--   for when the geofence collection was last updated in <a>ISO 8601</a>
--   format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
newDescribeGeofenceCollectionResponse :: Int -> Text -> Text -> UTCTime -> Text -> PricingPlan -> UTCTime -> DescribeGeofenceCollectionResponse

-- | The specified data provider for the geofence collection.
describeGeofenceCollectionResponse_pricingPlanDataSource :: Lens' DescribeGeofenceCollectionResponse (Maybe Text)

-- | A key identifier for an <a>AWS KMS customer managed key</a> assigned
--   to the Amazon Location resource
describeGeofenceCollectionResponse_kmsKeyId :: Lens' DescribeGeofenceCollectionResponse (Maybe Text)

-- | Displays the key, value pairs of tags associated with this resource.
describeGeofenceCollectionResponse_tags :: Lens' DescribeGeofenceCollectionResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
describeGeofenceCollectionResponse_httpStatus :: Lens' DescribeGeofenceCollectionResponse Int

-- | The Amazon Resource Name (ARN) for the geofence collection resource.
--   Used when you need to specify a resource across all AWS.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:geofence-collection/ExampleGeofenceCollection</tt></li>
--   </ul>
describeGeofenceCollectionResponse_collectionArn :: Lens' DescribeGeofenceCollectionResponse Text

-- | The name of the geofence collection.
describeGeofenceCollectionResponse_collectionName :: Lens' DescribeGeofenceCollectionResponse Text

-- | The timestamp for when the geofence resource was created in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
describeGeofenceCollectionResponse_createTime :: Lens' DescribeGeofenceCollectionResponse UTCTime

-- | The optional description for the geofence collection.
describeGeofenceCollectionResponse_description :: Lens' DescribeGeofenceCollectionResponse Text

-- | The pricing plan selected for the specified geofence collection.
--   
--   For additional details and restrictions on each pricing plan option,
--   see the <a>Amazon Location Service pricing page</a>.
describeGeofenceCollectionResponse_pricingPlan :: Lens' DescribeGeofenceCollectionResponse PricingPlan

-- | The timestamp for when the geofence collection was last updated in
--   <a>ISO 8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
describeGeofenceCollectionResponse_updateTime :: Lens' DescribeGeofenceCollectionResponse UTCTime
instance GHC.Generics.Generic Amazonka.Location.DescribeGeofenceCollection.DescribeGeofenceCollection
instance GHC.Show.Show Amazonka.Location.DescribeGeofenceCollection.DescribeGeofenceCollection
instance GHC.Read.Read Amazonka.Location.DescribeGeofenceCollection.DescribeGeofenceCollection
instance GHC.Classes.Eq Amazonka.Location.DescribeGeofenceCollection.DescribeGeofenceCollection
instance GHC.Generics.Generic Amazonka.Location.DescribeGeofenceCollection.DescribeGeofenceCollectionResponse
instance GHC.Show.Show Amazonka.Location.DescribeGeofenceCollection.DescribeGeofenceCollectionResponse
instance GHC.Read.Read Amazonka.Location.DescribeGeofenceCollection.DescribeGeofenceCollectionResponse
instance GHC.Classes.Eq Amazonka.Location.DescribeGeofenceCollection.DescribeGeofenceCollectionResponse
instance Amazonka.Types.AWSRequest Amazonka.Location.DescribeGeofenceCollection.DescribeGeofenceCollection
instance Control.DeepSeq.NFData Amazonka.Location.DescribeGeofenceCollection.DescribeGeofenceCollectionResponse
instance Data.Hashable.Class.Hashable Amazonka.Location.DescribeGeofenceCollection.DescribeGeofenceCollection
instance Control.DeepSeq.NFData Amazonka.Location.DescribeGeofenceCollection.DescribeGeofenceCollection
instance Amazonka.Data.Headers.ToHeaders Amazonka.Location.DescribeGeofenceCollection.DescribeGeofenceCollection
instance Amazonka.Data.Path.ToPath Amazonka.Location.DescribeGeofenceCollection.DescribeGeofenceCollection
instance Amazonka.Data.Query.ToQuery Amazonka.Location.DescribeGeofenceCollection.DescribeGeofenceCollection


-- | Deletes a tracker resource from your AWS account.
--   
--   This operation deletes the resource permanently. If the tracker
--   resource is in use, you may encounter an error. Make sure that the
--   target resource isn't a dependency for your applications.
module Amazonka.Location.DeleteTracker

-- | <i>See:</i> <a>newDeleteTracker</a> smart constructor.
data DeleteTracker
DeleteTracker' :: Text -> DeleteTracker

-- | The name of the tracker resource to be deleted.
[$sel:trackerName:DeleteTracker'] :: DeleteTracker -> Text

-- | Create a value of <a>DeleteTracker</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:trackerName:DeleteTracker'</a>,
--   <a>deleteTracker_trackerName</a> - The name of the tracker resource to
--   be deleted.
newDeleteTracker :: Text -> DeleteTracker

-- | The name of the tracker resource to be deleted.
deleteTracker_trackerName :: Lens' DeleteTracker Text

-- | <i>See:</i> <a>newDeleteTrackerResponse</a> smart constructor.
data DeleteTrackerResponse
DeleteTrackerResponse' :: Int -> DeleteTrackerResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteTrackerResponse'] :: DeleteTrackerResponse -> Int

-- | Create a value of <a>DeleteTrackerResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteTrackerResponse'</a>,
--   <a>deleteTrackerResponse_httpStatus</a> - The response's http status
--   code.
newDeleteTrackerResponse :: Int -> DeleteTrackerResponse

-- | The response's http status code.
deleteTrackerResponse_httpStatus :: Lens' DeleteTrackerResponse Int
instance GHC.Generics.Generic Amazonka.Location.DeleteTracker.DeleteTracker
instance GHC.Show.Show Amazonka.Location.DeleteTracker.DeleteTracker
instance GHC.Read.Read Amazonka.Location.DeleteTracker.DeleteTracker
instance GHC.Classes.Eq Amazonka.Location.DeleteTracker.DeleteTracker
instance GHC.Generics.Generic Amazonka.Location.DeleteTracker.DeleteTrackerResponse
instance GHC.Show.Show Amazonka.Location.DeleteTracker.DeleteTrackerResponse
instance GHC.Read.Read Amazonka.Location.DeleteTracker.DeleteTrackerResponse
instance GHC.Classes.Eq Amazonka.Location.DeleteTracker.DeleteTrackerResponse
instance Amazonka.Types.AWSRequest Amazonka.Location.DeleteTracker.DeleteTracker
instance Control.DeepSeq.NFData Amazonka.Location.DeleteTracker.DeleteTrackerResponse
instance Data.Hashable.Class.Hashable Amazonka.Location.DeleteTracker.DeleteTracker
instance Control.DeepSeq.NFData Amazonka.Location.DeleteTracker.DeleteTracker
instance Amazonka.Data.Headers.ToHeaders Amazonka.Location.DeleteTracker.DeleteTracker
instance Amazonka.Data.Path.ToPath Amazonka.Location.DeleteTracker.DeleteTracker
instance Amazonka.Data.Query.ToQuery Amazonka.Location.DeleteTracker.DeleteTracker


-- | Deletes a route calculator resource from your AWS account.
--   
--   This operation deletes the resource permanently.
module Amazonka.Location.DeleteRouteCalculator

-- | <i>See:</i> <a>newDeleteRouteCalculator</a> smart constructor.
data DeleteRouteCalculator
DeleteRouteCalculator' :: Text -> DeleteRouteCalculator

-- | The name of the route calculator resource to be deleted.
[$sel:calculatorName:DeleteRouteCalculator'] :: DeleteRouteCalculator -> Text

-- | Create a value of <a>DeleteRouteCalculator</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:calculatorName:DeleteRouteCalculator'</a>,
--   <a>deleteRouteCalculator_calculatorName</a> - The name of the route
--   calculator resource to be deleted.
newDeleteRouteCalculator :: Text -> DeleteRouteCalculator

-- | The name of the route calculator resource to be deleted.
deleteRouteCalculator_calculatorName :: Lens' DeleteRouteCalculator Text

-- | <i>See:</i> <a>newDeleteRouteCalculatorResponse</a> smart constructor.
data DeleteRouteCalculatorResponse
DeleteRouteCalculatorResponse' :: Int -> DeleteRouteCalculatorResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteRouteCalculatorResponse'] :: DeleteRouteCalculatorResponse -> Int

-- | Create a value of <a>DeleteRouteCalculatorResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteRouteCalculatorResponse'</a>,
--   <a>deleteRouteCalculatorResponse_httpStatus</a> - The response's http
--   status code.
newDeleteRouteCalculatorResponse :: Int -> DeleteRouteCalculatorResponse

-- | The response's http status code.
deleteRouteCalculatorResponse_httpStatus :: Lens' DeleteRouteCalculatorResponse Int
instance GHC.Generics.Generic Amazonka.Location.DeleteRouteCalculator.DeleteRouteCalculator
instance GHC.Show.Show Amazonka.Location.DeleteRouteCalculator.DeleteRouteCalculator
instance GHC.Read.Read Amazonka.Location.DeleteRouteCalculator.DeleteRouteCalculator
instance GHC.Classes.Eq Amazonka.Location.DeleteRouteCalculator.DeleteRouteCalculator
instance GHC.Generics.Generic Amazonka.Location.DeleteRouteCalculator.DeleteRouteCalculatorResponse
instance GHC.Show.Show Amazonka.Location.DeleteRouteCalculator.DeleteRouteCalculatorResponse
instance GHC.Read.Read Amazonka.Location.DeleteRouteCalculator.DeleteRouteCalculatorResponse
instance GHC.Classes.Eq Amazonka.Location.DeleteRouteCalculator.DeleteRouteCalculatorResponse
instance Amazonka.Types.AWSRequest Amazonka.Location.DeleteRouteCalculator.DeleteRouteCalculator
instance Control.DeepSeq.NFData Amazonka.Location.DeleteRouteCalculator.DeleteRouteCalculatorResponse
instance Data.Hashable.Class.Hashable Amazonka.Location.DeleteRouteCalculator.DeleteRouteCalculator
instance Control.DeepSeq.NFData Amazonka.Location.DeleteRouteCalculator.DeleteRouteCalculator
instance Amazonka.Data.Headers.ToHeaders Amazonka.Location.DeleteRouteCalculator.DeleteRouteCalculator
instance Amazonka.Data.Path.ToPath Amazonka.Location.DeleteRouteCalculator.DeleteRouteCalculator
instance Amazonka.Data.Query.ToQuery Amazonka.Location.DeleteRouteCalculator.DeleteRouteCalculator


-- | Deletes a place index resource from your AWS account.
--   
--   This operation deletes the resource permanently.
module Amazonka.Location.DeletePlaceIndex

-- | <i>See:</i> <a>newDeletePlaceIndex</a> smart constructor.
data DeletePlaceIndex
DeletePlaceIndex' :: Text -> DeletePlaceIndex

-- | The name of the place index resource to be deleted.
[$sel:indexName:DeletePlaceIndex'] :: DeletePlaceIndex -> Text

-- | Create a value of <a>DeletePlaceIndex</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:indexName:DeletePlaceIndex'</a>,
--   <a>deletePlaceIndex_indexName</a> - The name of the place index
--   resource to be deleted.
newDeletePlaceIndex :: Text -> DeletePlaceIndex

-- | The name of the place index resource to be deleted.
deletePlaceIndex_indexName :: Lens' DeletePlaceIndex Text

-- | <i>See:</i> <a>newDeletePlaceIndexResponse</a> smart constructor.
data DeletePlaceIndexResponse
DeletePlaceIndexResponse' :: Int -> DeletePlaceIndexResponse

-- | The response's http status code.
[$sel:httpStatus:DeletePlaceIndexResponse'] :: DeletePlaceIndexResponse -> Int

-- | Create a value of <a>DeletePlaceIndexResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeletePlaceIndexResponse'</a>,
--   <a>deletePlaceIndexResponse_httpStatus</a> - The response's http
--   status code.
newDeletePlaceIndexResponse :: Int -> DeletePlaceIndexResponse

-- | The response's http status code.
deletePlaceIndexResponse_httpStatus :: Lens' DeletePlaceIndexResponse Int
instance GHC.Generics.Generic Amazonka.Location.DeletePlaceIndex.DeletePlaceIndex
instance GHC.Show.Show Amazonka.Location.DeletePlaceIndex.DeletePlaceIndex
instance GHC.Read.Read Amazonka.Location.DeletePlaceIndex.DeletePlaceIndex
instance GHC.Classes.Eq Amazonka.Location.DeletePlaceIndex.DeletePlaceIndex
instance GHC.Generics.Generic Amazonka.Location.DeletePlaceIndex.DeletePlaceIndexResponse
instance GHC.Show.Show Amazonka.Location.DeletePlaceIndex.DeletePlaceIndexResponse
instance GHC.Read.Read Amazonka.Location.DeletePlaceIndex.DeletePlaceIndexResponse
instance GHC.Classes.Eq Amazonka.Location.DeletePlaceIndex.DeletePlaceIndexResponse
instance Amazonka.Types.AWSRequest Amazonka.Location.DeletePlaceIndex.DeletePlaceIndex
instance Control.DeepSeq.NFData Amazonka.Location.DeletePlaceIndex.DeletePlaceIndexResponse
instance Data.Hashable.Class.Hashable Amazonka.Location.DeletePlaceIndex.DeletePlaceIndex
instance Control.DeepSeq.NFData Amazonka.Location.DeletePlaceIndex.DeletePlaceIndex
instance Amazonka.Data.Headers.ToHeaders Amazonka.Location.DeletePlaceIndex.DeletePlaceIndex
instance Amazonka.Data.Path.ToPath Amazonka.Location.DeletePlaceIndex.DeletePlaceIndex
instance Amazonka.Data.Query.ToQuery Amazonka.Location.DeletePlaceIndex.DeletePlaceIndex


-- | Deletes a map resource from your AWS account.
--   
--   This operation deletes the resource permanently. If the map is being
--   used in an application, the map may not render.
module Amazonka.Location.DeleteMap

-- | <i>See:</i> <a>newDeleteMap</a> smart constructor.
data DeleteMap
DeleteMap' :: Text -> DeleteMap

-- | The name of the map resource to be deleted.
[$sel:mapName:DeleteMap'] :: DeleteMap -> Text

-- | Create a value of <a>DeleteMap</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mapName:DeleteMap'</a>, <a>deleteMap_mapName</a> - The name of
--   the map resource to be deleted.
newDeleteMap :: Text -> DeleteMap

-- | The name of the map resource to be deleted.
deleteMap_mapName :: Lens' DeleteMap Text

-- | <i>See:</i> <a>newDeleteMapResponse</a> smart constructor.
data DeleteMapResponse
DeleteMapResponse' :: Int -> DeleteMapResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteMapResponse'] :: DeleteMapResponse -> Int

-- | Create a value of <a>DeleteMapResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteMapResponse'</a>,
--   <a>deleteMapResponse_httpStatus</a> - The response's http status code.
newDeleteMapResponse :: Int -> DeleteMapResponse

-- | The response's http status code.
deleteMapResponse_httpStatus :: Lens' DeleteMapResponse Int
instance GHC.Generics.Generic Amazonka.Location.DeleteMap.DeleteMap
instance GHC.Show.Show Amazonka.Location.DeleteMap.DeleteMap
instance GHC.Read.Read Amazonka.Location.DeleteMap.DeleteMap
instance GHC.Classes.Eq Amazonka.Location.DeleteMap.DeleteMap
instance GHC.Generics.Generic Amazonka.Location.DeleteMap.DeleteMapResponse
instance GHC.Show.Show Amazonka.Location.DeleteMap.DeleteMapResponse
instance GHC.Read.Read Amazonka.Location.DeleteMap.DeleteMapResponse
instance GHC.Classes.Eq Amazonka.Location.DeleteMap.DeleteMapResponse
instance Amazonka.Types.AWSRequest Amazonka.Location.DeleteMap.DeleteMap
instance Control.DeepSeq.NFData Amazonka.Location.DeleteMap.DeleteMapResponse
instance Data.Hashable.Class.Hashable Amazonka.Location.DeleteMap.DeleteMap
instance Control.DeepSeq.NFData Amazonka.Location.DeleteMap.DeleteMap
instance Amazonka.Data.Headers.ToHeaders Amazonka.Location.DeleteMap.DeleteMap
instance Amazonka.Data.Path.ToPath Amazonka.Location.DeleteMap.DeleteMap
instance Amazonka.Data.Query.ToQuery Amazonka.Location.DeleteMap.DeleteMap


-- | Deletes a geofence collection from your AWS account.
--   
--   This operation deletes the resource permanently. If the geofence
--   collection is the target of a tracker resource, the devices will no
--   longer be monitored.
module Amazonka.Location.DeleteGeofenceCollection

-- | <i>See:</i> <a>newDeleteGeofenceCollection</a> smart constructor.
data DeleteGeofenceCollection
DeleteGeofenceCollection' :: Text -> DeleteGeofenceCollection

-- | The name of the geofence collection to be deleted.
[$sel:collectionName:DeleteGeofenceCollection'] :: DeleteGeofenceCollection -> Text

-- | Create a value of <a>DeleteGeofenceCollection</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:collectionName:DeleteGeofenceCollection'</a>,
--   <a>deleteGeofenceCollection_collectionName</a> - The name of the
--   geofence collection to be deleted.
newDeleteGeofenceCollection :: Text -> DeleteGeofenceCollection

-- | The name of the geofence collection to be deleted.
deleteGeofenceCollection_collectionName :: Lens' DeleteGeofenceCollection Text

-- | <i>See:</i> <a>newDeleteGeofenceCollectionResponse</a> smart
--   constructor.
data DeleteGeofenceCollectionResponse
DeleteGeofenceCollectionResponse' :: Int -> DeleteGeofenceCollectionResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteGeofenceCollectionResponse'] :: DeleteGeofenceCollectionResponse -> Int

-- | Create a value of <a>DeleteGeofenceCollectionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteGeofenceCollectionResponse'</a>,
--   <a>deleteGeofenceCollectionResponse_httpStatus</a> - The response's
--   http status code.
newDeleteGeofenceCollectionResponse :: Int -> DeleteGeofenceCollectionResponse

-- | The response's http status code.
deleteGeofenceCollectionResponse_httpStatus :: Lens' DeleteGeofenceCollectionResponse Int
instance GHC.Generics.Generic Amazonka.Location.DeleteGeofenceCollection.DeleteGeofenceCollection
instance GHC.Show.Show Amazonka.Location.DeleteGeofenceCollection.DeleteGeofenceCollection
instance GHC.Read.Read Amazonka.Location.DeleteGeofenceCollection.DeleteGeofenceCollection
instance GHC.Classes.Eq Amazonka.Location.DeleteGeofenceCollection.DeleteGeofenceCollection
instance GHC.Generics.Generic Amazonka.Location.DeleteGeofenceCollection.DeleteGeofenceCollectionResponse
instance GHC.Show.Show Amazonka.Location.DeleteGeofenceCollection.DeleteGeofenceCollectionResponse
instance GHC.Read.Read Amazonka.Location.DeleteGeofenceCollection.DeleteGeofenceCollectionResponse
instance GHC.Classes.Eq Amazonka.Location.DeleteGeofenceCollection.DeleteGeofenceCollectionResponse
instance Amazonka.Types.AWSRequest Amazonka.Location.DeleteGeofenceCollection.DeleteGeofenceCollection
instance Control.DeepSeq.NFData Amazonka.Location.DeleteGeofenceCollection.DeleteGeofenceCollectionResponse
instance Data.Hashable.Class.Hashable Amazonka.Location.DeleteGeofenceCollection.DeleteGeofenceCollection
instance Control.DeepSeq.NFData Amazonka.Location.DeleteGeofenceCollection.DeleteGeofenceCollection
instance Amazonka.Data.Headers.ToHeaders Amazonka.Location.DeleteGeofenceCollection.DeleteGeofenceCollection
instance Amazonka.Data.Path.ToPath Amazonka.Location.DeleteGeofenceCollection.DeleteGeofenceCollection
instance Amazonka.Data.Query.ToQuery Amazonka.Location.DeleteGeofenceCollection.DeleteGeofenceCollection


-- | Creates a tracker resource in your AWS account, which lets you
--   retrieve current and historical location of devices.
module Amazonka.Location.CreateTracker

-- | <i>See:</i> <a>newCreateTracker</a> smart constructor.
data CreateTracker
CreateTracker' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe PositionFiltering -> PricingPlan -> Text -> CreateTracker

-- | Specifies the data provider for the tracker resource.
--   
--   <ul>
--   <li>Required value for the following pricing plans:
--   <tt>MobileAssetTracking </tt>| <tt>MobileAssetManagement</tt></li>
--   </ul>
--   
--   For more information about <a>Data Providers</a>, and <a>Pricing
--   plans</a>, see the Amazon Location Service product page.
--   
--   Amazon Location Service only uses <tt>PricingPlanDataSource</tt> to
--   calculate billing for your tracker resource. Your data will not be
--   shared with the data provider, and will remain in your AWS account or
--   Region unless you move it.
--   
--   Valid values: <tt>Esri</tt> | <tt>Here</tt>
[$sel:pricingPlanDataSource:CreateTracker'] :: CreateTracker -> Maybe Text

-- | A key identifier for an <a>AWS KMS customer managed key</a>. Enter a
--   key ID, key ARN, alias name, or alias ARN.
[$sel:kmsKeyId:CreateTracker'] :: CreateTracker -> Maybe Text

-- | An optional description for the tracker resource.
[$sel:description:CreateTracker'] :: CreateTracker -> Maybe Text

-- | Applies one or more tags to the tracker resource. A tag is a key-value
--   pair helps manage, identify, search, and filter your resources by
--   labelling them.
--   
--   Format: <tt>"key" : "value"</tt>
--   
--   Restrictions:
--   
--   <ul>
--   <li>Maximum 50 tags per resource</li>
--   <li>Each resource tag must be unique with a maximum of one value.</li>
--   <li>Maximum key length: 128 Unicode characters in UTF-8</li>
--   <li>Maximum value length: 256 Unicode characters in UTF-8</li>
--   <li>Can use alphanumeric characters (A–Z, a–z, 0–9), and the following
--   characters: + - = . _ : / @.</li>
--   </ul>
[$sel:tags:CreateTracker'] :: CreateTracker -> Maybe (HashMap Text Text)

-- | Specifies the position filtering for the tracker resource.
--   
--   Valid values:
--   
--   <ul>
--   <li><tt>TimeBased</tt> - Location updates are evaluated against linked
--   geofence collections, but not every location update is stored. If your
--   update frequency is more often than 30 seconds, only one update per 30
--   seconds is stored for each unique device ID.</li>
--   <li><tt>DistanceBased</tt> - If the device has moved less than 30 m
--   (98.4 ft), location updates are ignored. Location updates within this
--   distance are neither evaluated against linked geofence collections,
--   nor stored. This helps control costs by reducing the number of
--   geofence evaluations and device positions to retrieve. Distance-based
--   filtering can also reduce the jitter effect when displaying device
--   trajectory on a map.</li>
--   </ul>
--   
--   This field is optional. If not specified, the default value is
--   <tt>TimeBased</tt>.
[$sel:positionFiltering:CreateTracker'] :: CreateTracker -> Maybe PositionFiltering

-- | Specifies the pricing plan for the tracker resource.
--   
--   For additional details and restrictions on each pricing plan option,
--   see <a>Amazon Location Service pricing</a>.
[$sel:pricingPlan:CreateTracker'] :: CreateTracker -> PricingPlan

-- | The name for the tracker resource.
--   
--   Requirements:
--   
--   <ul>
--   <li>Contain only alphanumeric characters (A-Z, a-z, 0-9) , hyphens
--   (-), periods (.), and underscores (_).</li>
--   <li>Must be a unique tracker resource name.</li>
--   <li>No spaces allowed. For example, <tt>ExampleTracker</tt>.</li>
--   </ul>
[$sel:trackerName:CreateTracker'] :: CreateTracker -> Text

-- | Create a value of <a>CreateTracker</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pricingPlanDataSource:CreateTracker'</a>,
--   <a>createTracker_pricingPlanDataSource</a> - Specifies the data
--   provider for the tracker resource.
--   
--   <ul>
--   <li>Required value for the following pricing plans:
--   <tt>MobileAssetTracking </tt>| <tt>MobileAssetManagement</tt></li>
--   </ul>
--   
--   For more information about <a>Data Providers</a>, and <a>Pricing
--   plans</a>, see the Amazon Location Service product page.
--   
--   Amazon Location Service only uses <tt>PricingPlanDataSource</tt> to
--   calculate billing for your tracker resource. Your data will not be
--   shared with the data provider, and will remain in your AWS account or
--   Region unless you move it.
--   
--   Valid values: <tt>Esri</tt> | <tt>Here</tt>
--   
--   <a>$sel:kmsKeyId:CreateTracker'</a>, <a>createTracker_kmsKeyId</a> - A
--   key identifier for an <a>AWS KMS customer managed key</a>. Enter a key
--   ID, key ARN, alias name, or alias ARN.
--   
--   <a>$sel:description:CreateTracker'</a>,
--   <a>createTracker_description</a> - An optional description for the
--   tracker resource.
--   
--   <a>$sel:tags:CreateTracker'</a>, <a>createTracker_tags</a> - Applies
--   one or more tags to the tracker resource. A tag is a key-value pair
--   helps manage, identify, search, and filter your resources by labelling
--   them.
--   
--   Format: <tt>"key" : "value"</tt>
--   
--   Restrictions:
--   
--   <ul>
--   <li>Maximum 50 tags per resource</li>
--   <li>Each resource tag must be unique with a maximum of one value.</li>
--   <li>Maximum key length: 128 Unicode characters in UTF-8</li>
--   <li>Maximum value length: 256 Unicode characters in UTF-8</li>
--   <li>Can use alphanumeric characters (A–Z, a–z, 0–9), and the following
--   characters: + - = . _ : / @.</li>
--   </ul>
--   
--   <a>$sel:positionFiltering:CreateTracker'</a>,
--   <a>createTracker_positionFiltering</a> - Specifies the position
--   filtering for the tracker resource.
--   
--   Valid values:
--   
--   <ul>
--   <li><tt>TimeBased</tt> - Location updates are evaluated against linked
--   geofence collections, but not every location update is stored. If your
--   update frequency is more often than 30 seconds, only one update per 30
--   seconds is stored for each unique device ID.</li>
--   <li><tt>DistanceBased</tt> - If the device has moved less than 30 m
--   (98.4 ft), location updates are ignored. Location updates within this
--   distance are neither evaluated against linked geofence collections,
--   nor stored. This helps control costs by reducing the number of
--   geofence evaluations and device positions to retrieve. Distance-based
--   filtering can also reduce the jitter effect when displaying device
--   trajectory on a map.</li>
--   </ul>
--   
--   This field is optional. If not specified, the default value is
--   <tt>TimeBased</tt>.
--   
--   <a>$sel:pricingPlan:CreateTracker'</a>,
--   <a>createTracker_pricingPlan</a> - Specifies the pricing plan for the
--   tracker resource.
--   
--   For additional details and restrictions on each pricing plan option,
--   see <a>Amazon Location Service pricing</a>.
--   
--   <a>$sel:trackerName:CreateTracker'</a>,
--   <a>createTracker_trackerName</a> - The name for the tracker resource.
--   
--   Requirements:
--   
--   <ul>
--   <li>Contain only alphanumeric characters (A-Z, a-z, 0-9) , hyphens
--   (-), periods (.), and underscores (_).</li>
--   <li>Must be a unique tracker resource name.</li>
--   <li>No spaces allowed. For example, <tt>ExampleTracker</tt>.</li>
--   </ul>
newCreateTracker :: PricingPlan -> Text -> CreateTracker

-- | Specifies the data provider for the tracker resource.
--   
--   <ul>
--   <li>Required value for the following pricing plans:
--   <tt>MobileAssetTracking </tt>| <tt>MobileAssetManagement</tt></li>
--   </ul>
--   
--   For more information about <a>Data Providers</a>, and <a>Pricing
--   plans</a>, see the Amazon Location Service product page.
--   
--   Amazon Location Service only uses <tt>PricingPlanDataSource</tt> to
--   calculate billing for your tracker resource. Your data will not be
--   shared with the data provider, and will remain in your AWS account or
--   Region unless you move it.
--   
--   Valid values: <tt>Esri</tt> | <tt>Here</tt>
createTracker_pricingPlanDataSource :: Lens' CreateTracker (Maybe Text)

-- | A key identifier for an <a>AWS KMS customer managed key</a>. Enter a
--   key ID, key ARN, alias name, or alias ARN.
createTracker_kmsKeyId :: Lens' CreateTracker (Maybe Text)

-- | An optional description for the tracker resource.
createTracker_description :: Lens' CreateTracker (Maybe Text)

-- | Applies one or more tags to the tracker resource. A tag is a key-value
--   pair helps manage, identify, search, and filter your resources by
--   labelling them.
--   
--   Format: <tt>"key" : "value"</tt>
--   
--   Restrictions:
--   
--   <ul>
--   <li>Maximum 50 tags per resource</li>
--   <li>Each resource tag must be unique with a maximum of one value.</li>
--   <li>Maximum key length: 128 Unicode characters in UTF-8</li>
--   <li>Maximum value length: 256 Unicode characters in UTF-8</li>
--   <li>Can use alphanumeric characters (A–Z, a–z, 0–9), and the following
--   characters: + - = . _ : / @.</li>
--   </ul>
createTracker_tags :: Lens' CreateTracker (Maybe (HashMap Text Text))

-- | Specifies the position filtering for the tracker resource.
--   
--   Valid values:
--   
--   <ul>
--   <li><tt>TimeBased</tt> - Location updates are evaluated against linked
--   geofence collections, but not every location update is stored. If your
--   update frequency is more often than 30 seconds, only one update per 30
--   seconds is stored for each unique device ID.</li>
--   <li><tt>DistanceBased</tt> - If the device has moved less than 30 m
--   (98.4 ft), location updates are ignored. Location updates within this
--   distance are neither evaluated against linked geofence collections,
--   nor stored. This helps control costs by reducing the number of
--   geofence evaluations and device positions to retrieve. Distance-based
--   filtering can also reduce the jitter effect when displaying device
--   trajectory on a map.</li>
--   </ul>
--   
--   This field is optional. If not specified, the default value is
--   <tt>TimeBased</tt>.
createTracker_positionFiltering :: Lens' CreateTracker (Maybe PositionFiltering)

-- | Specifies the pricing plan for the tracker resource.
--   
--   For additional details and restrictions on each pricing plan option,
--   see <a>Amazon Location Service pricing</a>.
createTracker_pricingPlan :: Lens' CreateTracker PricingPlan

-- | The name for the tracker resource.
--   
--   Requirements:
--   
--   <ul>
--   <li>Contain only alphanumeric characters (A-Z, a-z, 0-9) , hyphens
--   (-), periods (.), and underscores (_).</li>
--   <li>Must be a unique tracker resource name.</li>
--   <li>No spaces allowed. For example, <tt>ExampleTracker</tt>.</li>
--   </ul>
createTracker_trackerName :: Lens' CreateTracker Text

-- | <i>See:</i> <a>newCreateTrackerResponse</a> smart constructor.
data CreateTrackerResponse
CreateTrackerResponse' :: Int -> POSIX -> Text -> Text -> CreateTrackerResponse

-- | The response's http status code.
[$sel:httpStatus:CreateTrackerResponse'] :: CreateTrackerResponse -> Int

-- | The timestamp for when the tracker resource was created in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
[$sel:createTime:CreateTrackerResponse'] :: CreateTrackerResponse -> POSIX

-- | The Amazon Resource Name (ARN) for the tracker resource. Used when you
--   need to specify a resource across all AWS.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:tracker/ExampleTracker</tt></li>
--   </ul>
[$sel:trackerArn:CreateTrackerResponse'] :: CreateTrackerResponse -> Text

-- | The name of the tracker resource.
[$sel:trackerName:CreateTrackerResponse'] :: CreateTrackerResponse -> Text

-- | Create a value of <a>CreateTrackerResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateTrackerResponse'</a>,
--   <a>createTrackerResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:createTime:CreateTrackerResponse'</a>,
--   <a>createTrackerResponse_createTime</a> - The timestamp for when the
--   tracker resource was created in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
--   
--   <a>$sel:trackerArn:CreateTrackerResponse'</a>,
--   <a>createTrackerResponse_trackerArn</a> - The Amazon Resource Name
--   (ARN) for the tracker resource. Used when you need to specify a
--   resource across all AWS.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:tracker/ExampleTracker</tt></li>
--   </ul>
--   
--   <a>$sel:trackerName:CreateTracker'</a>,
--   <a>createTrackerResponse_trackerName</a> - The name of the tracker
--   resource.
newCreateTrackerResponse :: Int -> UTCTime -> Text -> Text -> CreateTrackerResponse

-- | The response's http status code.
createTrackerResponse_httpStatus :: Lens' CreateTrackerResponse Int

-- | The timestamp for when the tracker resource was created in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
createTrackerResponse_createTime :: Lens' CreateTrackerResponse UTCTime

-- | The Amazon Resource Name (ARN) for the tracker resource. Used when you
--   need to specify a resource across all AWS.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:tracker/ExampleTracker</tt></li>
--   </ul>
createTrackerResponse_trackerArn :: Lens' CreateTrackerResponse Text

-- | The name of the tracker resource.
createTrackerResponse_trackerName :: Lens' CreateTrackerResponse Text
instance GHC.Generics.Generic Amazonka.Location.CreateTracker.CreateTracker
instance GHC.Show.Show Amazonka.Location.CreateTracker.CreateTracker
instance GHC.Read.Read Amazonka.Location.CreateTracker.CreateTracker
instance GHC.Classes.Eq Amazonka.Location.CreateTracker.CreateTracker
instance GHC.Generics.Generic Amazonka.Location.CreateTracker.CreateTrackerResponse
instance GHC.Show.Show Amazonka.Location.CreateTracker.CreateTrackerResponse
instance GHC.Read.Read Amazonka.Location.CreateTracker.CreateTrackerResponse
instance GHC.Classes.Eq Amazonka.Location.CreateTracker.CreateTrackerResponse
instance Amazonka.Types.AWSRequest Amazonka.Location.CreateTracker.CreateTracker
instance Control.DeepSeq.NFData Amazonka.Location.CreateTracker.CreateTrackerResponse
instance Data.Hashable.Class.Hashable Amazonka.Location.CreateTracker.CreateTracker
instance Control.DeepSeq.NFData Amazonka.Location.CreateTracker.CreateTracker
instance Amazonka.Data.Headers.ToHeaders Amazonka.Location.CreateTracker.CreateTracker
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Location.CreateTracker.CreateTracker
instance Amazonka.Data.Path.ToPath Amazonka.Location.CreateTracker.CreateTracker
instance Amazonka.Data.Query.ToQuery Amazonka.Location.CreateTracker.CreateTracker


-- | Creates a route calculator resource in your AWS account.
--   
--   You can send requests to a route calculator resource to estimate
--   travel time, distance, and get directions. A route calculator sources
--   traffic and road network data from your chosen data provider.
module Amazonka.Location.CreateRouteCalculator

-- | <i>See:</i> <a>newCreateRouteCalculator</a> smart constructor.
data CreateRouteCalculator
CreateRouteCalculator' :: Maybe Text -> Maybe (HashMap Text Text) -> Text -> Text -> PricingPlan -> CreateRouteCalculator

-- | The optional description for the route calculator resource.
[$sel:description:CreateRouteCalculator'] :: CreateRouteCalculator -> Maybe Text

-- | Applies one or more tags to the route calculator resource. A tag is a
--   key-value pair helps manage, identify, search, and filter your
--   resources by labelling them.
--   
--   <ul>
--   <li>For example: { <tt>"tag1" : "value1"</tt>, <tt>"tag2" :
--   "value2"</tt>}</li>
--   </ul>
--   
--   Format: <tt>"key" : "value"</tt>
--   
--   Restrictions:
--   
--   <ul>
--   <li>Maximum 50 tags per resource</li>
--   <li>Each resource tag must be unique with a maximum of one value.</li>
--   <li>Maximum key length: 128 Unicode characters in UTF-8</li>
--   <li>Maximum value length: 256 Unicode characters in UTF-8</li>
--   <li>Can use alphanumeric characters (A–Z, a–z, 0–9), and the following
--   characters: + - = . _ : / @.</li>
--   </ul>
[$sel:tags:CreateRouteCalculator'] :: CreateRouteCalculator -> Maybe (HashMap Text Text)

-- | The name of the route calculator resource.
--   
--   Requirements:
--   
--   <ul>
--   <li>Can use alphanumeric characters (A–Z, a–z, 0–9) , hyphens (-),
--   periods (.), and underscores (_).</li>
--   <li>Must be a unique Route calculator resource name.</li>
--   <li>No spaces allowed. For example,
--   <tt>ExampleRouteCalculator</tt>.</li>
--   </ul>
[$sel:calculatorName:CreateRouteCalculator'] :: CreateRouteCalculator -> Text

-- | Specifies the data provider of traffic and road network data.
--   
--   This field is case-sensitive. Enter the valid values as shown. For
--   example, entering <tt>HERE</tt> returns an error. Route calculators
--   that use Esri as a data source only calculate routes that are shorter
--   than 400 km.
--   
--   Valid values include:
--   
--   <ul>
--   <li><tt>Esri</tt> – For additional information about <a>Esri</a>'s
--   coverage in your region of interest, see <a>Esri details on street
--   networks and traffic coverage</a>.</li>
--   <li><tt>Here</tt> – For additional information about <a>HERE
--   Technologies</a>' coverage in your region of interest, see <a>HERE car
--   routing coverage</a> and <a>HERE truck routing coverage</a>.</li>
--   </ul>
--   
--   For additional information , see <a>Data providers</a> on the
--   <i>Amazon Location Service Developer Guide</i>.
[$sel:dataSource:CreateRouteCalculator'] :: CreateRouteCalculator -> Text

-- | Specifies the pricing plan for your route calculator resource.
--   
--   For additional details and restrictions on each pricing plan option,
--   see <a>Amazon Location Service pricing</a>.
[$sel:pricingPlan:CreateRouteCalculator'] :: CreateRouteCalculator -> PricingPlan

-- | Create a value of <a>CreateRouteCalculator</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:CreateRouteCalculator'</a>,
--   <a>createRouteCalculator_description</a> - The optional description
--   for the route calculator resource.
--   
--   <a>$sel:tags:CreateRouteCalculator'</a>,
--   <a>createRouteCalculator_tags</a> - Applies one or more tags to the
--   route calculator resource. A tag is a key-value pair helps manage,
--   identify, search, and filter your resources by labelling them.
--   
--   <ul>
--   <li>For example: { <tt>"tag1" : "value1"</tt>, <tt>"tag2" :
--   "value2"</tt>}</li>
--   </ul>
--   
--   Format: <tt>"key" : "value"</tt>
--   
--   Restrictions:
--   
--   <ul>
--   <li>Maximum 50 tags per resource</li>
--   <li>Each resource tag must be unique with a maximum of one value.</li>
--   <li>Maximum key length: 128 Unicode characters in UTF-8</li>
--   <li>Maximum value length: 256 Unicode characters in UTF-8</li>
--   <li>Can use alphanumeric characters (A–Z, a–z, 0–9), and the following
--   characters: + - = . _ : / @.</li>
--   </ul>
--   
--   <a>$sel:calculatorName:CreateRouteCalculator'</a>,
--   <a>createRouteCalculator_calculatorName</a> - The name of the route
--   calculator resource.
--   
--   Requirements:
--   
--   <ul>
--   <li>Can use alphanumeric characters (A–Z, a–z, 0–9) , hyphens (-),
--   periods (.), and underscores (_).</li>
--   <li>Must be a unique Route calculator resource name.</li>
--   <li>No spaces allowed. For example,
--   <tt>ExampleRouteCalculator</tt>.</li>
--   </ul>
--   
--   <a>$sel:dataSource:CreateRouteCalculator'</a>,
--   <a>createRouteCalculator_dataSource</a> - Specifies the data provider
--   of traffic and road network data.
--   
--   This field is case-sensitive. Enter the valid values as shown. For
--   example, entering <tt>HERE</tt> returns an error. Route calculators
--   that use Esri as a data source only calculate routes that are shorter
--   than 400 km.
--   
--   Valid values include:
--   
--   <ul>
--   <li><tt>Esri</tt> – For additional information about <a>Esri</a>'s
--   coverage in your region of interest, see <a>Esri details on street
--   networks and traffic coverage</a>.</li>
--   <li><tt>Here</tt> – For additional information about <a>HERE
--   Technologies</a>' coverage in your region of interest, see <a>HERE car
--   routing coverage</a> and <a>HERE truck routing coverage</a>.</li>
--   </ul>
--   
--   For additional information , see <a>Data providers</a> on the
--   <i>Amazon Location Service Developer Guide</i>.
--   
--   <a>$sel:pricingPlan:CreateRouteCalculator'</a>,
--   <a>createRouteCalculator_pricingPlan</a> - Specifies the pricing plan
--   for your route calculator resource.
--   
--   For additional details and restrictions on each pricing plan option,
--   see <a>Amazon Location Service pricing</a>.
newCreateRouteCalculator :: Text -> Text -> PricingPlan -> CreateRouteCalculator

-- | The optional description for the route calculator resource.
createRouteCalculator_description :: Lens' CreateRouteCalculator (Maybe Text)

-- | Applies one or more tags to the route calculator resource. A tag is a
--   key-value pair helps manage, identify, search, and filter your
--   resources by labelling them.
--   
--   <ul>
--   <li>For example: { <tt>"tag1" : "value1"</tt>, <tt>"tag2" :
--   "value2"</tt>}</li>
--   </ul>
--   
--   Format: <tt>"key" : "value"</tt>
--   
--   Restrictions:
--   
--   <ul>
--   <li>Maximum 50 tags per resource</li>
--   <li>Each resource tag must be unique with a maximum of one value.</li>
--   <li>Maximum key length: 128 Unicode characters in UTF-8</li>
--   <li>Maximum value length: 256 Unicode characters in UTF-8</li>
--   <li>Can use alphanumeric characters (A–Z, a–z, 0–9), and the following
--   characters: + - = . _ : / @.</li>
--   </ul>
createRouteCalculator_tags :: Lens' CreateRouteCalculator (Maybe (HashMap Text Text))

-- | The name of the route calculator resource.
--   
--   Requirements:
--   
--   <ul>
--   <li>Can use alphanumeric characters (A–Z, a–z, 0–9) , hyphens (-),
--   periods (.), and underscores (_).</li>
--   <li>Must be a unique Route calculator resource name.</li>
--   <li>No spaces allowed. For example,
--   <tt>ExampleRouteCalculator</tt>.</li>
--   </ul>
createRouteCalculator_calculatorName :: Lens' CreateRouteCalculator Text

-- | Specifies the data provider of traffic and road network data.
--   
--   This field is case-sensitive. Enter the valid values as shown. For
--   example, entering <tt>HERE</tt> returns an error. Route calculators
--   that use Esri as a data source only calculate routes that are shorter
--   than 400 km.
--   
--   Valid values include:
--   
--   <ul>
--   <li><tt>Esri</tt> – For additional information about <a>Esri</a>'s
--   coverage in your region of interest, see <a>Esri details on street
--   networks and traffic coverage</a>.</li>
--   <li><tt>Here</tt> – For additional information about <a>HERE
--   Technologies</a>' coverage in your region of interest, see <a>HERE car
--   routing coverage</a> and <a>HERE truck routing coverage</a>.</li>
--   </ul>
--   
--   For additional information , see <a>Data providers</a> on the
--   <i>Amazon Location Service Developer Guide</i>.
createRouteCalculator_dataSource :: Lens' CreateRouteCalculator Text

-- | Specifies the pricing plan for your route calculator resource.
--   
--   For additional details and restrictions on each pricing plan option,
--   see <a>Amazon Location Service pricing</a>.
createRouteCalculator_pricingPlan :: Lens' CreateRouteCalculator PricingPlan

-- | <i>See:</i> <a>newCreateRouteCalculatorResponse</a> smart constructor.
data CreateRouteCalculatorResponse
CreateRouteCalculatorResponse' :: Int -> Text -> Text -> POSIX -> CreateRouteCalculatorResponse

-- | The response's http status code.
[$sel:httpStatus:CreateRouteCalculatorResponse'] :: CreateRouteCalculatorResponse -> Int

-- | The Amazon Resource Name (ARN) for the route calculator resource. Use
--   the ARN when you specify a resource across all AWS.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:route-calculator/ExampleCalculator</tt></li>
--   </ul>
[$sel:calculatorArn:CreateRouteCalculatorResponse'] :: CreateRouteCalculatorResponse -> Text

-- | The name of the route calculator resource.
--   
--   <ul>
--   <li>For example, <tt>ExampleRouteCalculator</tt>.</li>
--   </ul>
[$sel:calculatorName:CreateRouteCalculatorResponse'] :: CreateRouteCalculatorResponse -> Text

-- | The timestamp when the route calculator resource was created in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
--   
--   <ul>
--   <li>For example, <tt>2020–07-2T12:15:20.000Z+01:00</tt></li>
--   </ul>
[$sel:createTime:CreateRouteCalculatorResponse'] :: CreateRouteCalculatorResponse -> POSIX

-- | Create a value of <a>CreateRouteCalculatorResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateRouteCalculatorResponse'</a>,
--   <a>createRouteCalculatorResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:calculatorArn:CreateRouteCalculatorResponse'</a>,
--   <a>createRouteCalculatorResponse_calculatorArn</a> - The Amazon
--   Resource Name (ARN) for the route calculator resource. Use the ARN
--   when you specify a resource across all AWS.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:route-calculator/ExampleCalculator</tt></li>
--   </ul>
--   
--   <a>$sel:calculatorName:CreateRouteCalculator'</a>,
--   <a>createRouteCalculatorResponse_calculatorName</a> - The name of the
--   route calculator resource.
--   
--   <ul>
--   <li>For example, <tt>ExampleRouteCalculator</tt>.</li>
--   </ul>
--   
--   <a>$sel:createTime:CreateRouteCalculatorResponse'</a>,
--   <a>createRouteCalculatorResponse_createTime</a> - The timestamp when
--   the route calculator resource was created in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
--   
--   <ul>
--   <li>For example, <tt>2020–07-2T12:15:20.000Z+01:00</tt></li>
--   </ul>
newCreateRouteCalculatorResponse :: Int -> Text -> Text -> UTCTime -> CreateRouteCalculatorResponse

-- | The response's http status code.
createRouteCalculatorResponse_httpStatus :: Lens' CreateRouteCalculatorResponse Int

-- | The Amazon Resource Name (ARN) for the route calculator resource. Use
--   the ARN when you specify a resource across all AWS.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:route-calculator/ExampleCalculator</tt></li>
--   </ul>
createRouteCalculatorResponse_calculatorArn :: Lens' CreateRouteCalculatorResponse Text

-- | The name of the route calculator resource.
--   
--   <ul>
--   <li>For example, <tt>ExampleRouteCalculator</tt>.</li>
--   </ul>
createRouteCalculatorResponse_calculatorName :: Lens' CreateRouteCalculatorResponse Text

-- | The timestamp when the route calculator resource was created in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
--   
--   <ul>
--   <li>For example, <tt>2020–07-2T12:15:20.000Z+01:00</tt></li>
--   </ul>
createRouteCalculatorResponse_createTime :: Lens' CreateRouteCalculatorResponse UTCTime
instance GHC.Generics.Generic Amazonka.Location.CreateRouteCalculator.CreateRouteCalculator
instance GHC.Show.Show Amazonka.Location.CreateRouteCalculator.CreateRouteCalculator
instance GHC.Read.Read Amazonka.Location.CreateRouteCalculator.CreateRouteCalculator
instance GHC.Classes.Eq Amazonka.Location.CreateRouteCalculator.CreateRouteCalculator
instance GHC.Generics.Generic Amazonka.Location.CreateRouteCalculator.CreateRouteCalculatorResponse
instance GHC.Show.Show Amazonka.Location.CreateRouteCalculator.CreateRouteCalculatorResponse
instance GHC.Read.Read Amazonka.Location.CreateRouteCalculator.CreateRouteCalculatorResponse
instance GHC.Classes.Eq Amazonka.Location.CreateRouteCalculator.CreateRouteCalculatorResponse
instance Amazonka.Types.AWSRequest Amazonka.Location.CreateRouteCalculator.CreateRouteCalculator
instance Control.DeepSeq.NFData Amazonka.Location.CreateRouteCalculator.CreateRouteCalculatorResponse
instance Data.Hashable.Class.Hashable Amazonka.Location.CreateRouteCalculator.CreateRouteCalculator
instance Control.DeepSeq.NFData Amazonka.Location.CreateRouteCalculator.CreateRouteCalculator
instance Amazonka.Data.Headers.ToHeaders Amazonka.Location.CreateRouteCalculator.CreateRouteCalculator
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Location.CreateRouteCalculator.CreateRouteCalculator
instance Amazonka.Data.Path.ToPath Amazonka.Location.CreateRouteCalculator.CreateRouteCalculator
instance Amazonka.Data.Query.ToQuery Amazonka.Location.CreateRouteCalculator.CreateRouteCalculator


-- | Creates a place index resource in your AWS account, which supports
--   functions with geospatial data sourced from your chosen data provider.
module Amazonka.Location.CreatePlaceIndex

-- | <i>See:</i> <a>newCreatePlaceIndex</a> smart constructor.
data CreatePlaceIndex
CreatePlaceIndex' :: Maybe DataSourceConfiguration -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> Text -> PricingPlan -> CreatePlaceIndex

-- | Specifies the data storage option requesting Places.
[$sel:dataSourceConfiguration:CreatePlaceIndex'] :: CreatePlaceIndex -> Maybe DataSourceConfiguration

-- | The optional description for the place index resource.
[$sel:description:CreatePlaceIndex'] :: CreatePlaceIndex -> Maybe Text

-- | Applies one or more tags to the place index resource. A tag is a
--   key-value pair helps manage, identify, search, and filter your
--   resources by labelling them.
--   
--   Format: <tt>"key" : "value"</tt>
--   
--   Restrictions:
--   
--   <ul>
--   <li>Maximum 50 tags per resource</li>
--   <li>Each resource tag must be unique with a maximum of one value.</li>
--   <li>Maximum key length: 128 Unicode characters in UTF-8</li>
--   <li>Maximum value length: 256 Unicode characters in UTF-8</li>
--   <li>Can use alphanumeric characters (A–Z, a–z, 0–9), and the following
--   characters: + - = . _ : / @.</li>
--   </ul>
[$sel:tags:CreatePlaceIndex'] :: CreatePlaceIndex -> Maybe (HashMap Text Text)

-- | Specifies the data provider of geospatial data.
--   
--   This field is case-sensitive. Enter the valid values as shown. For
--   example, entering <tt>HERE</tt> returns an error.
--   
--   Valid values include:
--   
--   <ul>
--   <li><tt>Esri</tt> – For additional information about <a>Esri</a>'s
--   coverage in your region of interest, see <a>Esri details on geocoding
--   coverage</a>.</li>
--   <li><tt>Here</tt> – For additional information about <a>HERE
--   Technologies</a>' coverage in your region of interest, see <a>HERE
--   details on goecoding coverage</a>.Place index resources using HERE
--   Technologies as a data provider can't <a>store results</a> for
--   locations in Japan. For more information, see the <a>AWS Service
--   Terms</a> for Amazon Location Service.</li>
--   </ul>
--   
--   For additional information , see <a>Data providers</a> on the
--   <i>Amazon Location Service Developer Guide</i>.
[$sel:dataSource:CreatePlaceIndex'] :: CreatePlaceIndex -> Text

-- | The name of the place index resource.
--   
--   Requirements:
--   
--   <ul>
--   <li>Contain only alphanumeric characters (A–Z, a–z, 0–9), hyphens (-),
--   periods (.), and underscores (_).</li>
--   <li>Must be a unique place index resource name.</li>
--   <li>No spaces allowed. For example, <tt>ExamplePlaceIndex</tt>.</li>
--   </ul>
[$sel:indexName:CreatePlaceIndex'] :: CreatePlaceIndex -> Text

-- | Specifies the pricing plan for your place index resource.
--   
--   For additional details and restrictions on each pricing plan option,
--   see <a>Amazon Location Service pricing</a>.
[$sel:pricingPlan:CreatePlaceIndex'] :: CreatePlaceIndex -> PricingPlan

-- | Create a value of <a>CreatePlaceIndex</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataSourceConfiguration:CreatePlaceIndex'</a>,
--   <a>createPlaceIndex_dataSourceConfiguration</a> - Specifies the data
--   storage option requesting Places.
--   
--   <a>$sel:description:CreatePlaceIndex'</a>,
--   <a>createPlaceIndex_description</a> - The optional description for the
--   place index resource.
--   
--   <a>$sel:tags:CreatePlaceIndex'</a>, <a>createPlaceIndex_tags</a> -
--   Applies one or more tags to the place index resource. A tag is a
--   key-value pair helps manage, identify, search, and filter your
--   resources by labelling them.
--   
--   Format: <tt>"key" : "value"</tt>
--   
--   Restrictions:
--   
--   <ul>
--   <li>Maximum 50 tags per resource</li>
--   <li>Each resource tag must be unique with a maximum of one value.</li>
--   <li>Maximum key length: 128 Unicode characters in UTF-8</li>
--   <li>Maximum value length: 256 Unicode characters in UTF-8</li>
--   <li>Can use alphanumeric characters (A–Z, a–z, 0–9), and the following
--   characters: + - = . _ : / @.</li>
--   </ul>
--   
--   <a>$sel:dataSource:CreatePlaceIndex'</a>,
--   <a>createPlaceIndex_dataSource</a> - Specifies the data provider of
--   geospatial data.
--   
--   This field is case-sensitive. Enter the valid values as shown. For
--   example, entering <tt>HERE</tt> returns an error.
--   
--   Valid values include:
--   
--   <ul>
--   <li><tt>Esri</tt> – For additional information about <a>Esri</a>'s
--   coverage in your region of interest, see <a>Esri details on geocoding
--   coverage</a>.</li>
--   <li><tt>Here</tt> – For additional information about <a>HERE
--   Technologies</a>' coverage in your region of interest, see <a>HERE
--   details on goecoding coverage</a>.Place index resources using HERE
--   Technologies as a data provider can't <a>store results</a> for
--   locations in Japan. For more information, see the <a>AWS Service
--   Terms</a> for Amazon Location Service.</li>
--   </ul>
--   
--   For additional information , see <a>Data providers</a> on the
--   <i>Amazon Location Service Developer Guide</i>.
--   
--   <a>$sel:indexName:CreatePlaceIndex'</a>,
--   <a>createPlaceIndex_indexName</a> - The name of the place index
--   resource.
--   
--   Requirements:
--   
--   <ul>
--   <li>Contain only alphanumeric characters (A–Z, a–z, 0–9), hyphens (-),
--   periods (.), and underscores (_).</li>
--   <li>Must be a unique place index resource name.</li>
--   <li>No spaces allowed. For example, <tt>ExamplePlaceIndex</tt>.</li>
--   </ul>
--   
--   <a>$sel:pricingPlan:CreatePlaceIndex'</a>,
--   <a>createPlaceIndex_pricingPlan</a> - Specifies the pricing plan for
--   your place index resource.
--   
--   For additional details and restrictions on each pricing plan option,
--   see <a>Amazon Location Service pricing</a>.
newCreatePlaceIndex :: Text -> Text -> PricingPlan -> CreatePlaceIndex

-- | Specifies the data storage option requesting Places.
createPlaceIndex_dataSourceConfiguration :: Lens' CreatePlaceIndex (Maybe DataSourceConfiguration)

-- | The optional description for the place index resource.
createPlaceIndex_description :: Lens' CreatePlaceIndex (Maybe Text)

-- | Applies one or more tags to the place index resource. A tag is a
--   key-value pair helps manage, identify, search, and filter your
--   resources by labelling them.
--   
--   Format: <tt>"key" : "value"</tt>
--   
--   Restrictions:
--   
--   <ul>
--   <li>Maximum 50 tags per resource</li>
--   <li>Each resource tag must be unique with a maximum of one value.</li>
--   <li>Maximum key length: 128 Unicode characters in UTF-8</li>
--   <li>Maximum value length: 256 Unicode characters in UTF-8</li>
--   <li>Can use alphanumeric characters (A–Z, a–z, 0–9), and the following
--   characters: + - = . _ : / @.</li>
--   </ul>
createPlaceIndex_tags :: Lens' CreatePlaceIndex (Maybe (HashMap Text Text))

-- | Specifies the data provider of geospatial data.
--   
--   This field is case-sensitive. Enter the valid values as shown. For
--   example, entering <tt>HERE</tt> returns an error.
--   
--   Valid values include:
--   
--   <ul>
--   <li><tt>Esri</tt> – For additional information about <a>Esri</a>'s
--   coverage in your region of interest, see <a>Esri details on geocoding
--   coverage</a>.</li>
--   <li><tt>Here</tt> – For additional information about <a>HERE
--   Technologies</a>' coverage in your region of interest, see <a>HERE
--   details on goecoding coverage</a>.Place index resources using HERE
--   Technologies as a data provider can't <a>store results</a> for
--   locations in Japan. For more information, see the <a>AWS Service
--   Terms</a> for Amazon Location Service.</li>
--   </ul>
--   
--   For additional information , see <a>Data providers</a> on the
--   <i>Amazon Location Service Developer Guide</i>.
createPlaceIndex_dataSource :: Lens' CreatePlaceIndex Text

-- | The name of the place index resource.
--   
--   Requirements:
--   
--   <ul>
--   <li>Contain only alphanumeric characters (A–Z, a–z, 0–9), hyphens (-),
--   periods (.), and underscores (_).</li>
--   <li>Must be a unique place index resource name.</li>
--   <li>No spaces allowed. For example, <tt>ExamplePlaceIndex</tt>.</li>
--   </ul>
createPlaceIndex_indexName :: Lens' CreatePlaceIndex Text

-- | Specifies the pricing plan for your place index resource.
--   
--   For additional details and restrictions on each pricing plan option,
--   see <a>Amazon Location Service pricing</a>.
createPlaceIndex_pricingPlan :: Lens' CreatePlaceIndex PricingPlan

-- | <i>See:</i> <a>newCreatePlaceIndexResponse</a> smart constructor.
data CreatePlaceIndexResponse
CreatePlaceIndexResponse' :: Int -> POSIX -> Text -> Text -> CreatePlaceIndexResponse

-- | The response's http status code.
[$sel:httpStatus:CreatePlaceIndexResponse'] :: CreatePlaceIndexResponse -> Int

-- | The timestamp for when the place index resource was created in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
[$sel:createTime:CreatePlaceIndexResponse'] :: CreatePlaceIndexResponse -> POSIX

-- | The Amazon Resource Name (ARN) for the place index resource. Used to
--   specify a resource across AWS.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:place-index/ExamplePlaceIndex</tt></li>
--   </ul>
[$sel:indexArn:CreatePlaceIndexResponse'] :: CreatePlaceIndexResponse -> Text

-- | The name for the place index resource.
[$sel:indexName:CreatePlaceIndexResponse'] :: CreatePlaceIndexResponse -> Text

-- | Create a value of <a>CreatePlaceIndexResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreatePlaceIndexResponse'</a>,
--   <a>createPlaceIndexResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:createTime:CreatePlaceIndexResponse'</a>,
--   <a>createPlaceIndexResponse_createTime</a> - The timestamp for when
--   the place index resource was created in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
--   
--   <a>$sel:indexArn:CreatePlaceIndexResponse'</a>,
--   <a>createPlaceIndexResponse_indexArn</a> - The Amazon Resource Name
--   (ARN) for the place index resource. Used to specify a resource across
--   AWS.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:place-index/ExamplePlaceIndex</tt></li>
--   </ul>
--   
--   <a>$sel:indexName:CreatePlaceIndex'</a>,
--   <a>createPlaceIndexResponse_indexName</a> - The name for the place
--   index resource.
newCreatePlaceIndexResponse :: Int -> UTCTime -> Text -> Text -> CreatePlaceIndexResponse

-- | The response's http status code.
createPlaceIndexResponse_httpStatus :: Lens' CreatePlaceIndexResponse Int

-- | The timestamp for when the place index resource was created in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
createPlaceIndexResponse_createTime :: Lens' CreatePlaceIndexResponse UTCTime

-- | The Amazon Resource Name (ARN) for the place index resource. Used to
--   specify a resource across AWS.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:place-index/ExamplePlaceIndex</tt></li>
--   </ul>
createPlaceIndexResponse_indexArn :: Lens' CreatePlaceIndexResponse Text

-- | The name for the place index resource.
createPlaceIndexResponse_indexName :: Lens' CreatePlaceIndexResponse Text
instance GHC.Generics.Generic Amazonka.Location.CreatePlaceIndex.CreatePlaceIndex
instance GHC.Show.Show Amazonka.Location.CreatePlaceIndex.CreatePlaceIndex
instance GHC.Read.Read Amazonka.Location.CreatePlaceIndex.CreatePlaceIndex
instance GHC.Classes.Eq Amazonka.Location.CreatePlaceIndex.CreatePlaceIndex
instance GHC.Generics.Generic Amazonka.Location.CreatePlaceIndex.CreatePlaceIndexResponse
instance GHC.Show.Show Amazonka.Location.CreatePlaceIndex.CreatePlaceIndexResponse
instance GHC.Read.Read Amazonka.Location.CreatePlaceIndex.CreatePlaceIndexResponse
instance GHC.Classes.Eq Amazonka.Location.CreatePlaceIndex.CreatePlaceIndexResponse
instance Amazonka.Types.AWSRequest Amazonka.Location.CreatePlaceIndex.CreatePlaceIndex
instance Control.DeepSeq.NFData Amazonka.Location.CreatePlaceIndex.CreatePlaceIndexResponse
instance Data.Hashable.Class.Hashable Amazonka.Location.CreatePlaceIndex.CreatePlaceIndex
instance Control.DeepSeq.NFData Amazonka.Location.CreatePlaceIndex.CreatePlaceIndex
instance Amazonka.Data.Headers.ToHeaders Amazonka.Location.CreatePlaceIndex.CreatePlaceIndex
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Location.CreatePlaceIndex.CreatePlaceIndex
instance Amazonka.Data.Path.ToPath Amazonka.Location.CreatePlaceIndex.CreatePlaceIndex
instance Amazonka.Data.Query.ToQuery Amazonka.Location.CreatePlaceIndex.CreatePlaceIndex


-- | Creates a map resource in your AWS account, which provides map tiles
--   of different styles sourced from global location data providers.
module Amazonka.Location.CreateMap

-- | <i>See:</i> <a>newCreateMap</a> smart constructor.
data CreateMap
CreateMap' :: Maybe Text -> Maybe (HashMap Text Text) -> MapConfiguration -> Text -> PricingPlan -> CreateMap

-- | An optional description for the map resource.
[$sel:description:CreateMap'] :: CreateMap -> Maybe Text

-- | Applies one or more tags to the map resource. A tag is a key-value
--   pair helps manage, identify, search, and filter your resources by
--   labelling them.
--   
--   Format: <tt>"key" : "value"</tt>
--   
--   Restrictions:
--   
--   <ul>
--   <li>Maximum 50 tags per resource</li>
--   <li>Each resource tag must be unique with a maximum of one value.</li>
--   <li>Maximum key length: 128 Unicode characters in UTF-8</li>
--   <li>Maximum value length: 256 Unicode characters in UTF-8</li>
--   <li>Can use alphanumeric characters (A–Z, a–z, 0–9), and the following
--   characters: + - = . _ : / @.</li>
--   </ul>
[$sel:tags:CreateMap'] :: CreateMap -> Maybe (HashMap Text Text)

-- | Specifies the map style selected from an available data provider.
[$sel:configuration:CreateMap'] :: CreateMap -> MapConfiguration

-- | The name for the map resource.
--   
--   Requirements:
--   
--   <ul>
--   <li>Must contain only alphanumeric characters (A–Z, a–z, 0–9), hyphens
--   (-), periods (.), and underscores (_).</li>
--   <li>Must be a unique map resource name.</li>
--   <li>No spaces allowed. For example, <tt>ExampleMap</tt>.</li>
--   </ul>
[$sel:mapName:CreateMap'] :: CreateMap -> Text

-- | Specifies the pricing plan for your map resource.
--   
--   For additional details and restrictions on each pricing plan option,
--   see <a>Amazon Location Service pricing</a>.
[$sel:pricingPlan:CreateMap'] :: CreateMap -> PricingPlan

-- | Create a value of <a>CreateMap</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:CreateMap'</a>, <a>createMap_description</a> - An
--   optional description for the map resource.
--   
--   <a>$sel:tags:CreateMap'</a>, <a>createMap_tags</a> - Applies one or
--   more tags to the map resource. A tag is a key-value pair helps manage,
--   identify, search, and filter your resources by labelling them.
--   
--   Format: <tt>"key" : "value"</tt>
--   
--   Restrictions:
--   
--   <ul>
--   <li>Maximum 50 tags per resource</li>
--   <li>Each resource tag must be unique with a maximum of one value.</li>
--   <li>Maximum key length: 128 Unicode characters in UTF-8</li>
--   <li>Maximum value length: 256 Unicode characters in UTF-8</li>
--   <li>Can use alphanumeric characters (A–Z, a–z, 0–9), and the following
--   characters: + - = . _ : / @.</li>
--   </ul>
--   
--   <a>$sel:configuration:CreateMap'</a>, <a>createMap_configuration</a> -
--   Specifies the map style selected from an available data provider.
--   
--   <a>$sel:mapName:CreateMap'</a>, <a>createMap_mapName</a> - The name
--   for the map resource.
--   
--   Requirements:
--   
--   <ul>
--   <li>Must contain only alphanumeric characters (A–Z, a–z, 0–9), hyphens
--   (-), periods (.), and underscores (_).</li>
--   <li>Must be a unique map resource name.</li>
--   <li>No spaces allowed. For example, <tt>ExampleMap</tt>.</li>
--   </ul>
--   
--   <a>$sel:pricingPlan:CreateMap'</a>, <a>createMap_pricingPlan</a> -
--   Specifies the pricing plan for your map resource.
--   
--   For additional details and restrictions on each pricing plan option,
--   see <a>Amazon Location Service pricing</a>.
newCreateMap :: MapConfiguration -> Text -> PricingPlan -> CreateMap

-- | An optional description for the map resource.
createMap_description :: Lens' CreateMap (Maybe Text)

-- | Applies one or more tags to the map resource. A tag is a key-value
--   pair helps manage, identify, search, and filter your resources by
--   labelling them.
--   
--   Format: <tt>"key" : "value"</tt>
--   
--   Restrictions:
--   
--   <ul>
--   <li>Maximum 50 tags per resource</li>
--   <li>Each resource tag must be unique with a maximum of one value.</li>
--   <li>Maximum key length: 128 Unicode characters in UTF-8</li>
--   <li>Maximum value length: 256 Unicode characters in UTF-8</li>
--   <li>Can use alphanumeric characters (A–Z, a–z, 0–9), and the following
--   characters: + - = . _ : / @.</li>
--   </ul>
createMap_tags :: Lens' CreateMap (Maybe (HashMap Text Text))

-- | Specifies the map style selected from an available data provider.
createMap_configuration :: Lens' CreateMap MapConfiguration

-- | The name for the map resource.
--   
--   Requirements:
--   
--   <ul>
--   <li>Must contain only alphanumeric characters (A–Z, a–z, 0–9), hyphens
--   (-), periods (.), and underscores (_).</li>
--   <li>Must be a unique map resource name.</li>
--   <li>No spaces allowed. For example, <tt>ExampleMap</tt>.</li>
--   </ul>
createMap_mapName :: Lens' CreateMap Text

-- | Specifies the pricing plan for your map resource.
--   
--   For additional details and restrictions on each pricing plan option,
--   see <a>Amazon Location Service pricing</a>.
createMap_pricingPlan :: Lens' CreateMap PricingPlan

-- | <i>See:</i> <a>newCreateMapResponse</a> smart constructor.
data CreateMapResponse
CreateMapResponse' :: Int -> POSIX -> Text -> Text -> CreateMapResponse

-- | The response's http status code.
[$sel:httpStatus:CreateMapResponse'] :: CreateMapResponse -> Int

-- | The timestamp for when the map resource was created in <a>ISO 8601</a>
--   format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
[$sel:createTime:CreateMapResponse'] :: CreateMapResponse -> POSIX

-- | The Amazon Resource Name (ARN) for the map resource. Used to specify a
--   resource across all AWS.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:maps/ExampleMap</tt></li>
--   </ul>
[$sel:mapArn:CreateMapResponse'] :: CreateMapResponse -> Text

-- | The name of the map resource.
[$sel:mapName:CreateMapResponse'] :: CreateMapResponse -> Text

-- | Create a value of <a>CreateMapResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateMapResponse'</a>,
--   <a>createMapResponse_httpStatus</a> - The response's http status code.
--   
--   <a>$sel:createTime:CreateMapResponse'</a>,
--   <a>createMapResponse_createTime</a> - The timestamp for when the map
--   resource was created in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
--   
--   <a>$sel:mapArn:CreateMapResponse'</a>, <a>createMapResponse_mapArn</a>
--   - The Amazon Resource Name (ARN) for the map resource. Used to specify
--   a resource across all AWS.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:maps/ExampleMap</tt></li>
--   </ul>
--   
--   <a>$sel:mapName:CreateMap'</a>, <a>createMapResponse_mapName</a> - The
--   name of the map resource.
newCreateMapResponse :: Int -> UTCTime -> Text -> Text -> CreateMapResponse

-- | The response's http status code.
createMapResponse_httpStatus :: Lens' CreateMapResponse Int

-- | The timestamp for when the map resource was created in <a>ISO 8601</a>
--   format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
createMapResponse_createTime :: Lens' CreateMapResponse UTCTime

-- | The Amazon Resource Name (ARN) for the map resource. Used to specify a
--   resource across all AWS.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:maps/ExampleMap</tt></li>
--   </ul>
createMapResponse_mapArn :: Lens' CreateMapResponse Text

-- | The name of the map resource.
createMapResponse_mapName :: Lens' CreateMapResponse Text
instance GHC.Generics.Generic Amazonka.Location.CreateMap.CreateMap
instance GHC.Show.Show Amazonka.Location.CreateMap.CreateMap
instance GHC.Read.Read Amazonka.Location.CreateMap.CreateMap
instance GHC.Classes.Eq Amazonka.Location.CreateMap.CreateMap
instance GHC.Generics.Generic Amazonka.Location.CreateMap.CreateMapResponse
instance GHC.Show.Show Amazonka.Location.CreateMap.CreateMapResponse
instance GHC.Read.Read Amazonka.Location.CreateMap.CreateMapResponse
instance GHC.Classes.Eq Amazonka.Location.CreateMap.CreateMapResponse
instance Amazonka.Types.AWSRequest Amazonka.Location.CreateMap.CreateMap
instance Control.DeepSeq.NFData Amazonka.Location.CreateMap.CreateMapResponse
instance Data.Hashable.Class.Hashable Amazonka.Location.CreateMap.CreateMap
instance Control.DeepSeq.NFData Amazonka.Location.CreateMap.CreateMap
instance Amazonka.Data.Headers.ToHeaders Amazonka.Location.CreateMap.CreateMap
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Location.CreateMap.CreateMap
instance Amazonka.Data.Path.ToPath Amazonka.Location.CreateMap.CreateMap
instance Amazonka.Data.Query.ToQuery Amazonka.Location.CreateMap.CreateMap


-- | Creates a geofence collection, which manages and stores geofences.
module Amazonka.Location.CreateGeofenceCollection

-- | <i>See:</i> <a>newCreateGeofenceCollection</a> smart constructor.
data CreateGeofenceCollection
CreateGeofenceCollection' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> PricingPlan -> CreateGeofenceCollection

-- | Specifies the data provider for the geofence collection.
--   
--   <ul>
--   <li>Required value for the following pricing plans:
--   <tt>MobileAssetTracking </tt>| <tt>MobileAssetManagement</tt></li>
--   </ul>
--   
--   For more information about <a>Data Providers</a>, and <a>Pricing
--   plans</a>, see the Amazon Location Service product page.
--   
--   Amazon Location Service only uses <tt>PricingPlanDataSource</tt> to
--   calculate billing for your geofence collection. Your data won't be
--   shared with the data provider, and will remain in your AWS account or
--   Region unless you move it.
--   
--   Valid Values: <tt>Esri </tt>| <tt>Here</tt>
[$sel:pricingPlanDataSource:CreateGeofenceCollection'] :: CreateGeofenceCollection -> Maybe Text

-- | A key identifier for an <a>AWS KMS customer managed key</a>. Enter a
--   key ID, key ARN, alias name, or alias ARN.
[$sel:kmsKeyId:CreateGeofenceCollection'] :: CreateGeofenceCollection -> Maybe Text

-- | An optional description for the geofence collection.
[$sel:description:CreateGeofenceCollection'] :: CreateGeofenceCollection -> Maybe Text

-- | Applies one or more tags to the geofence collection. A tag is a
--   key-value pair helps manage, identify, search, and filter your
--   resources by labelling them.
--   
--   Format: <tt>"key" : "value"</tt>
--   
--   Restrictions:
--   
--   <ul>
--   <li>Maximum 50 tags per resource</li>
--   <li>Each resource tag must be unique with a maximum of one value.</li>
--   <li>Maximum key length: 128 Unicode characters in UTF-8</li>
--   <li>Maximum value length: 256 Unicode characters in UTF-8</li>
--   <li>Can use alphanumeric characters (A–Z, a–z, 0–9), and the following
--   characters: + - = . _ : / @.</li>
--   </ul>
[$sel:tags:CreateGeofenceCollection'] :: CreateGeofenceCollection -> Maybe (HashMap Text Text)

-- | A custom name for the geofence collection.
--   
--   Requirements:
--   
--   <ul>
--   <li>Contain only alphanumeric characters (A–Z, a–z, 0–9), hyphens (-),
--   periods (.), and underscores (_).</li>
--   <li>Must be a unique geofence collection name.</li>
--   <li>No spaces allowed. For example,
--   <tt>ExampleGeofenceCollection</tt>.</li>
--   </ul>
[$sel:collectionName:CreateGeofenceCollection'] :: CreateGeofenceCollection -> Text

-- | Specifies the pricing plan for the geofence collection.
--   
--   For additional details and restrictions on each pricing plan option,
--   see the <a>Amazon Location Service pricing page</a>.
[$sel:pricingPlan:CreateGeofenceCollection'] :: CreateGeofenceCollection -> PricingPlan

-- | Create a value of <a>CreateGeofenceCollection</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pricingPlanDataSource:CreateGeofenceCollection'</a>,
--   <a>createGeofenceCollection_pricingPlanDataSource</a> - Specifies the
--   data provider for the geofence collection.
--   
--   <ul>
--   <li>Required value for the following pricing plans:
--   <tt>MobileAssetTracking </tt>| <tt>MobileAssetManagement</tt></li>
--   </ul>
--   
--   For more information about <a>Data Providers</a>, and <a>Pricing
--   plans</a>, see the Amazon Location Service product page.
--   
--   Amazon Location Service only uses <tt>PricingPlanDataSource</tt> to
--   calculate billing for your geofence collection. Your data won't be
--   shared with the data provider, and will remain in your AWS account or
--   Region unless you move it.
--   
--   Valid Values: <tt>Esri </tt>| <tt>Here</tt>
--   
--   <a>$sel:kmsKeyId:CreateGeofenceCollection'</a>,
--   <a>createGeofenceCollection_kmsKeyId</a> - A key identifier for an
--   <a>AWS KMS customer managed key</a>. Enter a key ID, key ARN, alias
--   name, or alias ARN.
--   
--   <a>$sel:description:CreateGeofenceCollection'</a>,
--   <a>createGeofenceCollection_description</a> - An optional description
--   for the geofence collection.
--   
--   <a>$sel:tags:CreateGeofenceCollection'</a>,
--   <a>createGeofenceCollection_tags</a> - Applies one or more tags to the
--   geofence collection. A tag is a key-value pair helps manage, identify,
--   search, and filter your resources by labelling them.
--   
--   Format: <tt>"key" : "value"</tt>
--   
--   Restrictions:
--   
--   <ul>
--   <li>Maximum 50 tags per resource</li>
--   <li>Each resource tag must be unique with a maximum of one value.</li>
--   <li>Maximum key length: 128 Unicode characters in UTF-8</li>
--   <li>Maximum value length: 256 Unicode characters in UTF-8</li>
--   <li>Can use alphanumeric characters (A–Z, a–z, 0–9), and the following
--   characters: + - = . _ : / @.</li>
--   </ul>
--   
--   <a>$sel:collectionName:CreateGeofenceCollection'</a>,
--   <a>createGeofenceCollection_collectionName</a> - A custom name for the
--   geofence collection.
--   
--   Requirements:
--   
--   <ul>
--   <li>Contain only alphanumeric characters (A–Z, a–z, 0–9), hyphens (-),
--   periods (.), and underscores (_).</li>
--   <li>Must be a unique geofence collection name.</li>
--   <li>No spaces allowed. For example,
--   <tt>ExampleGeofenceCollection</tt>.</li>
--   </ul>
--   
--   <a>$sel:pricingPlan:CreateGeofenceCollection'</a>,
--   <a>createGeofenceCollection_pricingPlan</a> - Specifies the pricing
--   plan for the geofence collection.
--   
--   For additional details and restrictions on each pricing plan option,
--   see the <a>Amazon Location Service pricing page</a>.
newCreateGeofenceCollection :: Text -> PricingPlan -> CreateGeofenceCollection

-- | Specifies the data provider for the geofence collection.
--   
--   <ul>
--   <li>Required value for the following pricing plans:
--   <tt>MobileAssetTracking </tt>| <tt>MobileAssetManagement</tt></li>
--   </ul>
--   
--   For more information about <a>Data Providers</a>, and <a>Pricing
--   plans</a>, see the Amazon Location Service product page.
--   
--   Amazon Location Service only uses <tt>PricingPlanDataSource</tt> to
--   calculate billing for your geofence collection. Your data won't be
--   shared with the data provider, and will remain in your AWS account or
--   Region unless you move it.
--   
--   Valid Values: <tt>Esri </tt>| <tt>Here</tt>
createGeofenceCollection_pricingPlanDataSource :: Lens' CreateGeofenceCollection (Maybe Text)

-- | A key identifier for an <a>AWS KMS customer managed key</a>. Enter a
--   key ID, key ARN, alias name, or alias ARN.
createGeofenceCollection_kmsKeyId :: Lens' CreateGeofenceCollection (Maybe Text)

-- | An optional description for the geofence collection.
createGeofenceCollection_description :: Lens' CreateGeofenceCollection (Maybe Text)

-- | Applies one or more tags to the geofence collection. A tag is a
--   key-value pair helps manage, identify, search, and filter your
--   resources by labelling them.
--   
--   Format: <tt>"key" : "value"</tt>
--   
--   Restrictions:
--   
--   <ul>
--   <li>Maximum 50 tags per resource</li>
--   <li>Each resource tag must be unique with a maximum of one value.</li>
--   <li>Maximum key length: 128 Unicode characters in UTF-8</li>
--   <li>Maximum value length: 256 Unicode characters in UTF-8</li>
--   <li>Can use alphanumeric characters (A–Z, a–z, 0–9), and the following
--   characters: + - = . _ : / @.</li>
--   </ul>
createGeofenceCollection_tags :: Lens' CreateGeofenceCollection (Maybe (HashMap Text Text))

-- | A custom name for the geofence collection.
--   
--   Requirements:
--   
--   <ul>
--   <li>Contain only alphanumeric characters (A–Z, a–z, 0–9), hyphens (-),
--   periods (.), and underscores (_).</li>
--   <li>Must be a unique geofence collection name.</li>
--   <li>No spaces allowed. For example,
--   <tt>ExampleGeofenceCollection</tt>.</li>
--   </ul>
createGeofenceCollection_collectionName :: Lens' CreateGeofenceCollection Text

-- | Specifies the pricing plan for the geofence collection.
--   
--   For additional details and restrictions on each pricing plan option,
--   see the <a>Amazon Location Service pricing page</a>.
createGeofenceCollection_pricingPlan :: Lens' CreateGeofenceCollection PricingPlan

-- | <i>See:</i> <a>newCreateGeofenceCollectionResponse</a> smart
--   constructor.
data CreateGeofenceCollectionResponse
CreateGeofenceCollectionResponse' :: Int -> Text -> Text -> POSIX -> CreateGeofenceCollectionResponse

-- | The response's http status code.
[$sel:httpStatus:CreateGeofenceCollectionResponse'] :: CreateGeofenceCollectionResponse -> Int

-- | The Amazon Resource Name (ARN) for the geofence collection resource.
--   Used when you need to specify a resource across all AWS.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:geofence-collection/ExampleGeofenceCollection</tt></li>
--   </ul>
[$sel:collectionArn:CreateGeofenceCollectionResponse'] :: CreateGeofenceCollectionResponse -> Text

-- | The name for the geofence collection.
[$sel:collectionName:CreateGeofenceCollectionResponse'] :: CreateGeofenceCollectionResponse -> Text

-- | The timestamp for when the geofence collection was created in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
[$sel:createTime:CreateGeofenceCollectionResponse'] :: CreateGeofenceCollectionResponse -> POSIX

-- | Create a value of <a>CreateGeofenceCollectionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateGeofenceCollectionResponse'</a>,
--   <a>createGeofenceCollectionResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:collectionArn:CreateGeofenceCollectionResponse'</a>,
--   <a>createGeofenceCollectionResponse_collectionArn</a> - The Amazon
--   Resource Name (ARN) for the geofence collection resource. Used when
--   you need to specify a resource across all AWS.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:geofence-collection/ExampleGeofenceCollection</tt></li>
--   </ul>
--   
--   <a>$sel:collectionName:CreateGeofenceCollection'</a>,
--   <a>createGeofenceCollectionResponse_collectionName</a> - The name for
--   the geofence collection.
--   
--   <a>$sel:createTime:CreateGeofenceCollectionResponse'</a>,
--   <a>createGeofenceCollectionResponse_createTime</a> - The timestamp for
--   when the geofence collection was created in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
newCreateGeofenceCollectionResponse :: Int -> Text -> Text -> UTCTime -> CreateGeofenceCollectionResponse

-- | The response's http status code.
createGeofenceCollectionResponse_httpStatus :: Lens' CreateGeofenceCollectionResponse Int

-- | The Amazon Resource Name (ARN) for the geofence collection resource.
--   Used when you need to specify a resource across all AWS.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:geofence-collection/ExampleGeofenceCollection</tt></li>
--   </ul>
createGeofenceCollectionResponse_collectionArn :: Lens' CreateGeofenceCollectionResponse Text

-- | The name for the geofence collection.
createGeofenceCollectionResponse_collectionName :: Lens' CreateGeofenceCollectionResponse Text

-- | The timestamp for when the geofence collection was created in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
createGeofenceCollectionResponse_createTime :: Lens' CreateGeofenceCollectionResponse UTCTime
instance GHC.Generics.Generic Amazonka.Location.CreateGeofenceCollection.CreateGeofenceCollection
instance GHC.Show.Show Amazonka.Location.CreateGeofenceCollection.CreateGeofenceCollection
instance GHC.Read.Read Amazonka.Location.CreateGeofenceCollection.CreateGeofenceCollection
instance GHC.Classes.Eq Amazonka.Location.CreateGeofenceCollection.CreateGeofenceCollection
instance GHC.Generics.Generic Amazonka.Location.CreateGeofenceCollection.CreateGeofenceCollectionResponse
instance GHC.Show.Show Amazonka.Location.CreateGeofenceCollection.CreateGeofenceCollectionResponse
instance GHC.Read.Read Amazonka.Location.CreateGeofenceCollection.CreateGeofenceCollectionResponse
instance GHC.Classes.Eq Amazonka.Location.CreateGeofenceCollection.CreateGeofenceCollectionResponse
instance Amazonka.Types.AWSRequest Amazonka.Location.CreateGeofenceCollection.CreateGeofenceCollection
instance Control.DeepSeq.NFData Amazonka.Location.CreateGeofenceCollection.CreateGeofenceCollectionResponse
instance Data.Hashable.Class.Hashable Amazonka.Location.CreateGeofenceCollection.CreateGeofenceCollection
instance Control.DeepSeq.NFData Amazonka.Location.CreateGeofenceCollection.CreateGeofenceCollection
instance Amazonka.Data.Headers.ToHeaders Amazonka.Location.CreateGeofenceCollection.CreateGeofenceCollection
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Location.CreateGeofenceCollection.CreateGeofenceCollection
instance Amazonka.Data.Path.ToPath Amazonka.Location.CreateGeofenceCollection.CreateGeofenceCollection
instance Amazonka.Data.Query.ToQuery Amazonka.Location.CreateGeofenceCollection.CreateGeofenceCollection


-- | <a>Calculates a route</a> given the following required parameters:
--   <tt>DeparturePostiton</tt> and <tt>DestinationPosition</tt>. Requires
--   that you first <a>create a route calculator resource</a>
--   
--   By default, a request that doesn't specify a departure time uses the
--   best time of day to travel with the best traffic conditions when
--   calculating the route.
--   
--   Additional options include:
--   
--   <ul>
--   <li><a>Specifying a departure time</a> using either
--   <tt>DepartureTime</tt> or <tt>DepartureNow</tt>. This calculates a
--   route based on predictive traffic data at the given time.You can't
--   specify both <tt>DepartureTime</tt> and <tt>DepartureNow</tt> in a
--   single request. Specifying both parameters returns an error
--   message.</li>
--   <li><a>Specifying a travel mode</a> using TravelMode. This lets you
--   specify an additional route preference such as <tt>CarModeOptions</tt>
--   if traveling by <tt>Car</tt>, or <tt>TruckModeOptions</tt> if
--   traveling by <tt>Truck</tt>.</li>
--   </ul>
module Amazonka.Location.CalculateRoute

-- | <i>See:</i> <a>newCalculateRoute</a> smart constructor.
data CalculateRoute
CalculateRoute' :: Maybe DistanceUnit -> Maybe CalculateRouteTruckModeOptions -> Maybe [Sensitive (NonEmpty Double)] -> Maybe Bool -> Maybe Bool -> Maybe TravelMode -> Maybe CalculateRouteCarModeOptions -> Maybe POSIX -> Text -> Sensitive (NonEmpty Double) -> Sensitive (NonEmpty Double) -> CalculateRoute

-- | Set the unit system to specify the distance.
--   
--   Default Value: <tt>Kilometers</tt>
[$sel:distanceUnit:CalculateRoute'] :: CalculateRoute -> Maybe DistanceUnit

-- | Specifies route preferences when traveling by <tt>Truck</tt>, such as
--   avoiding routes that use ferries or tolls, and truck specifications to
--   consider when choosing an optimal road.
--   
--   Requirements: <tt>TravelMode</tt> must be specified as <tt>Truck</tt>.
[$sel:truckModeOptions:CalculateRoute'] :: CalculateRoute -> Maybe CalculateRouteTruckModeOptions

-- | Specifies an ordered list of up to 23 intermediate positions to
--   include along a route between the departure position and destination
--   position.
--   
--   <ul>
--   <li>For example, from the <tt>DeparturePosition</tt> <tt>[-123.115,
--   49.285]</tt>, the route follows the order that the waypoint positions
--   are given <tt>[[-122.757, 49.0021],[-122.349, 47.620]]</tt></li>
--   </ul>
--   
--   If you specify a waypoint position that's not located on a road,
--   Amazon Location <a>moves the position to the nearest road</a>.
--   
--   Specifying more than 23 waypoints returns a <tt>400
--   ValidationException</tt> error.
--   
--   If Esri is the provider for your route calculator, specifying a route
--   that is longer than 400 km returns a <tt>400
--   RoutesValidationException</tt> error.
--   
--   Valid Values: <tt>[-180 to 180,-90 to 90]</tt>
[$sel:waypointPositions:CalculateRoute'] :: CalculateRoute -> Maybe [Sensitive (NonEmpty Double)]

-- | Set to include the geometry details in the result for each path
--   between a pair of positions.
--   
--   Default Value: <tt>false</tt>
--   
--   Valid Values: <tt>false</tt> | <tt>true</tt>
[$sel:includeLegGeometry:CalculateRoute'] :: CalculateRoute -> Maybe Bool

-- | Sets the time of departure as the current time. Uses the current time
--   to calculate a route. Otherwise, the best time of day to travel with
--   the best traffic conditions is used to calculate the route.
--   
--   Default Value: <tt>false</tt>
--   
--   Valid Values: <tt>false</tt> | <tt>true</tt>
[$sel:departNow:CalculateRoute'] :: CalculateRoute -> Maybe Bool

-- | Specifies the mode of transport when calculating a route. Used in
--   estimating the speed of travel and road compatibility.
--   
--   The <tt>TravelMode</tt> you specify determines how you specify route
--   preferences:
--   
--   <ul>
--   <li>If traveling by <tt>Car</tt> use the <tt>CarModeOptions</tt>
--   parameter.</li>
--   <li>If traveling by <tt>Truck</tt> use the <tt>TruckModeOptions</tt>
--   parameter.</li>
--   </ul>
--   
--   Default Value: <tt>Car</tt>
[$sel:travelMode:CalculateRoute'] :: CalculateRoute -> Maybe TravelMode

-- | Specifies route preferences when traveling by <tt>Car</tt>, such as
--   avoiding routes that use ferries or tolls.
--   
--   Requirements: <tt>TravelMode</tt> must be specified as <tt>Car</tt>.
[$sel:carModeOptions:CalculateRoute'] :: CalculateRoute -> Maybe CalculateRouteCarModeOptions

-- | Specifies the desired time of departure. Uses the given time to
--   calculate a route. Otherwise, the best time of day to travel with the
--   best traffic conditions is used to calculate the route.
--   
--   Setting a departure time in the past returns a <tt>400
--   ValidationException</tt> error.
--   
--   <ul>
--   <li>In <a>ISO 8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>. For
--   example, <tt>2020–07-2T12:15:20.000Z+01:00</tt></li>
--   </ul>
[$sel:departureTime:CalculateRoute'] :: CalculateRoute -> Maybe POSIX

-- | The name of the route calculator resource that you want to use to
--   calculate a route.
[$sel:calculatorName:CalculateRoute'] :: CalculateRoute -> Text

-- | The start position for the route. Defined in <a>WGS 84</a> format:
--   <tt>[longitude, latitude]</tt>.
--   
--   <ul>
--   <li>For example, <tt>[-123.115, 49.285]</tt></li>
--   </ul>
--   
--   If you specify a departure that's not located on a road, Amazon
--   Location <a>moves the position to the nearest road</a>. If Esri is the
--   provider for your route calculator, specifying a route that is longer
--   than 400 km returns a <tt>400 RoutesValidationException</tt> error.
--   
--   Valid Values: <tt>[-180 to 180,-90 to 90]</tt>
[$sel:departurePosition:CalculateRoute'] :: CalculateRoute -> Sensitive (NonEmpty Double)

-- | The finish position for the route. Defined in <a>WGS 84</a> format:
--   <tt>[longitude, latitude]</tt>.
--   
--   <ul>
--   <li>For example, <tt>[-122.339, 47.615]</tt></li>
--   </ul>
--   
--   If you specify a destination that's not located on a road, Amazon
--   Location <a>moves the position to the nearest road</a>.
--   
--   Valid Values: <tt>[-180 to 180,-90 to 90]</tt>
[$sel:destinationPosition:CalculateRoute'] :: CalculateRoute -> Sensitive (NonEmpty Double)

-- | Create a value of <a>CalculateRoute</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:distanceUnit:CalculateRoute'</a>,
--   <a>calculateRoute_distanceUnit</a> - Set the unit system to specify
--   the distance.
--   
--   Default Value: <tt>Kilometers</tt>
--   
--   <a>$sel:truckModeOptions:CalculateRoute'</a>,
--   <a>calculateRoute_truckModeOptions</a> - Specifies route preferences
--   when traveling by <tt>Truck</tt>, such as avoiding routes that use
--   ferries or tolls, and truck specifications to consider when choosing
--   an optimal road.
--   
--   Requirements: <tt>TravelMode</tt> must be specified as <tt>Truck</tt>.
--   
--   <a>$sel:waypointPositions:CalculateRoute'</a>,
--   <a>calculateRoute_waypointPositions</a> - Specifies an ordered list of
--   up to 23 intermediate positions to include along a route between the
--   departure position and destination position.
--   
--   <ul>
--   <li>For example, from the <tt>DeparturePosition</tt> <tt>[-123.115,
--   49.285]</tt>, the route follows the order that the waypoint positions
--   are given <tt>[[-122.757, 49.0021],[-122.349, 47.620]]</tt></li>
--   </ul>
--   
--   If you specify a waypoint position that's not located on a road,
--   Amazon Location <a>moves the position to the nearest road</a>.
--   
--   Specifying more than 23 waypoints returns a <tt>400
--   ValidationException</tt> error.
--   
--   If Esri is the provider for your route calculator, specifying a route
--   that is longer than 400 km returns a <tt>400
--   RoutesValidationException</tt> error.
--   
--   Valid Values: <tt>[-180 to 180,-90 to 90]</tt>
--   
--   <a>$sel:includeLegGeometry:CalculateRoute'</a>,
--   <a>calculateRoute_includeLegGeometry</a> - Set to include the geometry
--   details in the result for each path between a pair of positions.
--   
--   Default Value: <tt>false</tt>
--   
--   Valid Values: <tt>false</tt> | <tt>true</tt>
--   
--   <a>$sel:departNow:CalculateRoute'</a>, <a>calculateRoute_departNow</a>
--   - Sets the time of departure as the current time. Uses the current
--   time to calculate a route. Otherwise, the best time of day to travel
--   with the best traffic conditions is used to calculate the route.
--   
--   Default Value: <tt>false</tt>
--   
--   Valid Values: <tt>false</tt> | <tt>true</tt>
--   
--   <a>$sel:travelMode:CalculateRoute'</a>,
--   <a>calculateRoute_travelMode</a> - Specifies the mode of transport
--   when calculating a route. Used in estimating the speed of travel and
--   road compatibility.
--   
--   The <tt>TravelMode</tt> you specify determines how you specify route
--   preferences:
--   
--   <ul>
--   <li>If traveling by <tt>Car</tt> use the <tt>CarModeOptions</tt>
--   parameter.</li>
--   <li>If traveling by <tt>Truck</tt> use the <tt>TruckModeOptions</tt>
--   parameter.</li>
--   </ul>
--   
--   Default Value: <tt>Car</tt>
--   
--   <a>$sel:carModeOptions:CalculateRoute'</a>,
--   <a>calculateRoute_carModeOptions</a> - Specifies route preferences
--   when traveling by <tt>Car</tt>, such as avoiding routes that use
--   ferries or tolls.
--   
--   Requirements: <tt>TravelMode</tt> must be specified as <tt>Car</tt>.
--   
--   <a>$sel:departureTime:CalculateRoute'</a>,
--   <a>calculateRoute_departureTime</a> - Specifies the desired time of
--   departure. Uses the given time to calculate a route. Otherwise, the
--   best time of day to travel with the best traffic conditions is used to
--   calculate the route.
--   
--   Setting a departure time in the past returns a <tt>400
--   ValidationException</tt> error.
--   
--   <ul>
--   <li>In <a>ISO 8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>. For
--   example, <tt>2020–07-2T12:15:20.000Z+01:00</tt></li>
--   </ul>
--   
--   <a>$sel:calculatorName:CalculateRoute'</a>,
--   <a>calculateRoute_calculatorName</a> - The name of the route
--   calculator resource that you want to use to calculate a route.
--   
--   <a>$sel:departurePosition:CalculateRoute'</a>,
--   <a>calculateRoute_departurePosition</a> - The start position for the
--   route. Defined in <a>WGS 84</a> format: <tt>[longitude,
--   latitude]</tt>.
--   
--   <ul>
--   <li>For example, <tt>[-123.115, 49.285]</tt></li>
--   </ul>
--   
--   If you specify a departure that's not located on a road, Amazon
--   Location <a>moves the position to the nearest road</a>. If Esri is the
--   provider for your route calculator, specifying a route that is longer
--   than 400 km returns a <tt>400 RoutesValidationException</tt> error.
--   
--   Valid Values: <tt>[-180 to 180,-90 to 90]</tt>
--   
--   <a>$sel:destinationPosition:CalculateRoute'</a>,
--   <a>calculateRoute_destinationPosition</a> - The finish position for
--   the route. Defined in <a>WGS 84</a> format: <tt>[longitude,
--   latitude]</tt>.
--   
--   <ul>
--   <li>For example, <tt>[-122.339, 47.615]</tt></li>
--   </ul>
--   
--   If you specify a destination that's not located on a road, Amazon
--   Location <a>moves the position to the nearest road</a>.
--   
--   Valid Values: <tt>[-180 to 180,-90 to 90]</tt>
newCalculateRoute :: Text -> NonEmpty Double -> NonEmpty Double -> CalculateRoute

-- | Set the unit system to specify the distance.
--   
--   Default Value: <tt>Kilometers</tt>
calculateRoute_distanceUnit :: Lens' CalculateRoute (Maybe DistanceUnit)

-- | Specifies route preferences when traveling by <tt>Truck</tt>, such as
--   avoiding routes that use ferries or tolls, and truck specifications to
--   consider when choosing an optimal road.
--   
--   Requirements: <tt>TravelMode</tt> must be specified as <tt>Truck</tt>.
calculateRoute_truckModeOptions :: Lens' CalculateRoute (Maybe CalculateRouteTruckModeOptions)

-- | Specifies an ordered list of up to 23 intermediate positions to
--   include along a route between the departure position and destination
--   position.
--   
--   <ul>
--   <li>For example, from the <tt>DeparturePosition</tt> <tt>[-123.115,
--   49.285]</tt>, the route follows the order that the waypoint positions
--   are given <tt>[[-122.757, 49.0021],[-122.349, 47.620]]</tt></li>
--   </ul>
--   
--   If you specify a waypoint position that's not located on a road,
--   Amazon Location <a>moves the position to the nearest road</a>.
--   
--   Specifying more than 23 waypoints returns a <tt>400
--   ValidationException</tt> error.
--   
--   If Esri is the provider for your route calculator, specifying a route
--   that is longer than 400 km returns a <tt>400
--   RoutesValidationException</tt> error.
--   
--   Valid Values: <tt>[-180 to 180,-90 to 90]</tt>
calculateRoute_waypointPositions :: Lens' CalculateRoute (Maybe [NonEmpty Double])

-- | Set to include the geometry details in the result for each path
--   between a pair of positions.
--   
--   Default Value: <tt>false</tt>
--   
--   Valid Values: <tt>false</tt> | <tt>true</tt>
calculateRoute_includeLegGeometry :: Lens' CalculateRoute (Maybe Bool)

-- | Sets the time of departure as the current time. Uses the current time
--   to calculate a route. Otherwise, the best time of day to travel with
--   the best traffic conditions is used to calculate the route.
--   
--   Default Value: <tt>false</tt>
--   
--   Valid Values: <tt>false</tt> | <tt>true</tt>
calculateRoute_departNow :: Lens' CalculateRoute (Maybe Bool)

-- | Specifies the mode of transport when calculating a route. Used in
--   estimating the speed of travel and road compatibility.
--   
--   The <tt>TravelMode</tt> you specify determines how you specify route
--   preferences:
--   
--   <ul>
--   <li>If traveling by <tt>Car</tt> use the <tt>CarModeOptions</tt>
--   parameter.</li>
--   <li>If traveling by <tt>Truck</tt> use the <tt>TruckModeOptions</tt>
--   parameter.</li>
--   </ul>
--   
--   Default Value: <tt>Car</tt>
calculateRoute_travelMode :: Lens' CalculateRoute (Maybe TravelMode)

-- | Specifies route preferences when traveling by <tt>Car</tt>, such as
--   avoiding routes that use ferries or tolls.
--   
--   Requirements: <tt>TravelMode</tt> must be specified as <tt>Car</tt>.
calculateRoute_carModeOptions :: Lens' CalculateRoute (Maybe CalculateRouteCarModeOptions)

-- | Specifies the desired time of departure. Uses the given time to
--   calculate a route. Otherwise, the best time of day to travel with the
--   best traffic conditions is used to calculate the route.
--   
--   Setting a departure time in the past returns a <tt>400
--   ValidationException</tt> error.
--   
--   <ul>
--   <li>In <a>ISO 8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>. For
--   example, <tt>2020–07-2T12:15:20.000Z+01:00</tt></li>
--   </ul>
calculateRoute_departureTime :: Lens' CalculateRoute (Maybe UTCTime)

-- | The name of the route calculator resource that you want to use to
--   calculate a route.
calculateRoute_calculatorName :: Lens' CalculateRoute Text

-- | The start position for the route. Defined in <a>WGS 84</a> format:
--   <tt>[longitude, latitude]</tt>.
--   
--   <ul>
--   <li>For example, <tt>[-123.115, 49.285]</tt></li>
--   </ul>
--   
--   If you specify a departure that's not located on a road, Amazon
--   Location <a>moves the position to the nearest road</a>. If Esri is the
--   provider for your route calculator, specifying a route that is longer
--   than 400 km returns a <tt>400 RoutesValidationException</tt> error.
--   
--   Valid Values: <tt>[-180 to 180,-90 to 90]</tt>
calculateRoute_departurePosition :: Lens' CalculateRoute (NonEmpty Double)

-- | The finish position for the route. Defined in <a>WGS 84</a> format:
--   <tt>[longitude, latitude]</tt>.
--   
--   <ul>
--   <li>For example, <tt>[-122.339, 47.615]</tt></li>
--   </ul>
--   
--   If you specify a destination that's not located on a road, Amazon
--   Location <a>moves the position to the nearest road</a>.
--   
--   Valid Values: <tt>[-180 to 180,-90 to 90]</tt>
calculateRoute_destinationPosition :: Lens' CalculateRoute (NonEmpty Double)

-- | Returns the result of the route calculation. Metadata includes legs
--   and route summary.
--   
--   <i>See:</i> <a>newCalculateRouteResponse</a> smart constructor.
data CalculateRouteResponse
CalculateRouteResponse' :: Int -> [Leg] -> CalculateRouteSummary -> CalculateRouteResponse

-- | The response's http status code.
[$sel:httpStatus:CalculateRouteResponse'] :: CalculateRouteResponse -> Int

-- | Contains details about each path between a pair of positions included
--   along a route such as: <tt>StartPosition</tt>, <tt>EndPosition</tt>,
--   <tt>Distance</tt>, <tt>DurationSeconds</tt>, <tt>Geometry</tt>, and
--   <tt>Steps</tt>. The number of legs returned corresponds to one fewer
--   than the total number of positions in the request.
--   
--   For example, a route with a departure position and destination
--   position returns one leg with the positions <a>snapped to a nearby
--   road</a>:
--   
--   <ul>
--   <li>The <tt>StartPosition</tt> is the departure position.</li>
--   <li>The <tt>EndPosition</tt> is the destination position.</li>
--   </ul>
--   
--   A route with a waypoint between the departure and destination position
--   returns two legs with the positions snapped to a nearby road:
--   
--   <ul>
--   <li>Leg 1: The <tt>StartPosition</tt> is the departure position . The
--   <tt>EndPosition</tt> is the waypoint positon.</li>
--   <li>Leg 2: The <tt>StartPosition</tt> is the waypoint position. The
--   <tt>EndPosition</tt> is the destination position.</li>
--   </ul>
[$sel:legs:CalculateRouteResponse'] :: CalculateRouteResponse -> [Leg]

-- | Contains information about the whole route, such as:
--   <tt>RouteBBox</tt>, <tt>DataSource</tt>, <tt>Distance</tt>,
--   <tt>DistanceUnit</tt>, and <tt>DurationSeconds</tt>.
[$sel:summary:CalculateRouteResponse'] :: CalculateRouteResponse -> CalculateRouteSummary

-- | Create a value of <a>CalculateRouteResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CalculateRouteResponse'</a>,
--   <a>calculateRouteResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:legs:CalculateRouteResponse'</a>,
--   <a>calculateRouteResponse_legs</a> - Contains details about each path
--   between a pair of positions included along a route such as:
--   <tt>StartPosition</tt>, <tt>EndPosition</tt>, <tt>Distance</tt>,
--   <tt>DurationSeconds</tt>, <tt>Geometry</tt>, and <tt>Steps</tt>. The
--   number of legs returned corresponds to one fewer than the total number
--   of positions in the request.
--   
--   For example, a route with a departure position and destination
--   position returns one leg with the positions <a>snapped to a nearby
--   road</a>:
--   
--   <ul>
--   <li>The <tt>StartPosition</tt> is the departure position.</li>
--   <li>The <tt>EndPosition</tt> is the destination position.</li>
--   </ul>
--   
--   A route with a waypoint between the departure and destination position
--   returns two legs with the positions snapped to a nearby road:
--   
--   <ul>
--   <li>Leg 1: The <tt>StartPosition</tt> is the departure position . The
--   <tt>EndPosition</tt> is the waypoint positon.</li>
--   <li>Leg 2: The <tt>StartPosition</tt> is the waypoint position. The
--   <tt>EndPosition</tt> is the destination position.</li>
--   </ul>
--   
--   <a>$sel:summary:CalculateRouteResponse'</a>,
--   <a>calculateRouteResponse_summary</a> - Contains information about the
--   whole route, such as: <tt>RouteBBox</tt>, <tt>DataSource</tt>,
--   <tt>Distance</tt>, <tt>DistanceUnit</tt>, and
--   <tt>DurationSeconds</tt>.
newCalculateRouteResponse :: Int -> CalculateRouteSummary -> CalculateRouteResponse

-- | The response's http status code.
calculateRouteResponse_httpStatus :: Lens' CalculateRouteResponse Int

-- | Contains details about each path between a pair of positions included
--   along a route such as: <tt>StartPosition</tt>, <tt>EndPosition</tt>,
--   <tt>Distance</tt>, <tt>DurationSeconds</tt>, <tt>Geometry</tt>, and
--   <tt>Steps</tt>. The number of legs returned corresponds to one fewer
--   than the total number of positions in the request.
--   
--   For example, a route with a departure position and destination
--   position returns one leg with the positions <a>snapped to a nearby
--   road</a>:
--   
--   <ul>
--   <li>The <tt>StartPosition</tt> is the departure position.</li>
--   <li>The <tt>EndPosition</tt> is the destination position.</li>
--   </ul>
--   
--   A route with a waypoint between the departure and destination position
--   returns two legs with the positions snapped to a nearby road:
--   
--   <ul>
--   <li>Leg 1: The <tt>StartPosition</tt> is the departure position . The
--   <tt>EndPosition</tt> is the waypoint positon.</li>
--   <li>Leg 2: The <tt>StartPosition</tt> is the waypoint position. The
--   <tt>EndPosition</tt> is the destination position.</li>
--   </ul>
calculateRouteResponse_legs :: Lens' CalculateRouteResponse [Leg]

-- | Contains information about the whole route, such as:
--   <tt>RouteBBox</tt>, <tt>DataSource</tt>, <tt>Distance</tt>,
--   <tt>DistanceUnit</tt>, and <tt>DurationSeconds</tt>.
calculateRouteResponse_summary :: Lens' CalculateRouteResponse CalculateRouteSummary
instance GHC.Generics.Generic Amazonka.Location.CalculateRoute.CalculateRoute
instance GHC.Show.Show Amazonka.Location.CalculateRoute.CalculateRoute
instance GHC.Classes.Eq Amazonka.Location.CalculateRoute.CalculateRoute
instance GHC.Generics.Generic Amazonka.Location.CalculateRoute.CalculateRouteResponse
instance GHC.Show.Show Amazonka.Location.CalculateRoute.CalculateRouteResponse
instance GHC.Classes.Eq Amazonka.Location.CalculateRoute.CalculateRouteResponse
instance Amazonka.Types.AWSRequest Amazonka.Location.CalculateRoute.CalculateRoute
instance Control.DeepSeq.NFData Amazonka.Location.CalculateRoute.CalculateRouteResponse
instance Data.Hashable.Class.Hashable Amazonka.Location.CalculateRoute.CalculateRoute
instance Control.DeepSeq.NFData Amazonka.Location.CalculateRoute.CalculateRoute
instance Amazonka.Data.Headers.ToHeaders Amazonka.Location.CalculateRoute.CalculateRoute
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Location.CalculateRoute.CalculateRoute
instance Amazonka.Data.Path.ToPath Amazonka.Location.CalculateRoute.CalculateRoute
instance Amazonka.Data.Query.ToQuery Amazonka.Location.CalculateRoute.CalculateRoute


-- | Uploads position update data for one or more devices to a tracker
--   resource. Amazon Location uses the data when it reports the last known
--   device position and position history. Amazon Location retains location
--   data for 30 days.
--   
--   Position updates are handled based on the <tt>PositionFiltering</tt>
--   property of the tracker. When <tt>PositionFiltering</tt> is set to
--   <tt>TimeBased</tt>, updates are evaluated against linked geofence
--   collections, and location data is stored at a maximum of one position
--   per 30 second interval. If your update frequency is more often than
--   every 30 seconds, only one update per 30 seconds is stored for each
--   unique device ID. When <tt>PositionFiltering</tt> is set to
--   <tt>DistanceBased</tt> filtering, location data is stored and
--   evaluated against linked geofence collections only if the device has
--   moved more than 30 m (98.4 ft).
module Amazonka.Location.BatchUpdateDevicePosition

-- | <i>See:</i> <a>newBatchUpdateDevicePosition</a> smart constructor.
data BatchUpdateDevicePosition
BatchUpdateDevicePosition' :: Text -> NonEmpty DevicePositionUpdate -> BatchUpdateDevicePosition

-- | The name of the tracker resource to update.
[$sel:trackerName:BatchUpdateDevicePosition'] :: BatchUpdateDevicePosition -> Text

-- | Contains the position update details for each device.
[$sel:updates:BatchUpdateDevicePosition'] :: BatchUpdateDevicePosition -> NonEmpty DevicePositionUpdate

-- | Create a value of <a>BatchUpdateDevicePosition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:trackerName:BatchUpdateDevicePosition'</a>,
--   <a>batchUpdateDevicePosition_trackerName</a> - The name of the tracker
--   resource to update.
--   
--   <a>$sel:updates:BatchUpdateDevicePosition'</a>,
--   <a>batchUpdateDevicePosition_updates</a> - Contains the position
--   update details for each device.
newBatchUpdateDevicePosition :: Text -> NonEmpty DevicePositionUpdate -> BatchUpdateDevicePosition

-- | The name of the tracker resource to update.
batchUpdateDevicePosition_trackerName :: Lens' BatchUpdateDevicePosition Text

-- | Contains the position update details for each device.
batchUpdateDevicePosition_updates :: Lens' BatchUpdateDevicePosition (NonEmpty DevicePositionUpdate)

-- | <i>See:</i> <a>newBatchUpdateDevicePositionResponse</a> smart
--   constructor.
data BatchUpdateDevicePositionResponse
BatchUpdateDevicePositionResponse' :: Int -> [BatchUpdateDevicePositionError] -> BatchUpdateDevicePositionResponse

-- | The response's http status code.
[$sel:httpStatus:BatchUpdateDevicePositionResponse'] :: BatchUpdateDevicePositionResponse -> Int

-- | Contains error details for each device that failed to update its
--   position.
[$sel:errors:BatchUpdateDevicePositionResponse'] :: BatchUpdateDevicePositionResponse -> [BatchUpdateDevicePositionError]

-- | Create a value of <a>BatchUpdateDevicePositionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:BatchUpdateDevicePositionResponse'</a>,
--   <a>batchUpdateDevicePositionResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:errors:BatchUpdateDevicePositionResponse'</a>,
--   <a>batchUpdateDevicePositionResponse_errors</a> - Contains error
--   details for each device that failed to update its position.
newBatchUpdateDevicePositionResponse :: Int -> BatchUpdateDevicePositionResponse

-- | The response's http status code.
batchUpdateDevicePositionResponse_httpStatus :: Lens' BatchUpdateDevicePositionResponse Int

-- | Contains error details for each device that failed to update its
--   position.
batchUpdateDevicePositionResponse_errors :: Lens' BatchUpdateDevicePositionResponse [BatchUpdateDevicePositionError]
instance GHC.Generics.Generic Amazonka.Location.BatchUpdateDevicePosition.BatchUpdateDevicePosition
instance GHC.Show.Show Amazonka.Location.BatchUpdateDevicePosition.BatchUpdateDevicePosition
instance GHC.Classes.Eq Amazonka.Location.BatchUpdateDevicePosition.BatchUpdateDevicePosition
instance GHC.Generics.Generic Amazonka.Location.BatchUpdateDevicePosition.BatchUpdateDevicePositionResponse
instance GHC.Show.Show Amazonka.Location.BatchUpdateDevicePosition.BatchUpdateDevicePositionResponse
instance GHC.Read.Read Amazonka.Location.BatchUpdateDevicePosition.BatchUpdateDevicePositionResponse
instance GHC.Classes.Eq Amazonka.Location.BatchUpdateDevicePosition.BatchUpdateDevicePositionResponse
instance Amazonka.Types.AWSRequest Amazonka.Location.BatchUpdateDevicePosition.BatchUpdateDevicePosition
instance Control.DeepSeq.NFData Amazonka.Location.BatchUpdateDevicePosition.BatchUpdateDevicePositionResponse
instance Data.Hashable.Class.Hashable Amazonka.Location.BatchUpdateDevicePosition.BatchUpdateDevicePosition
instance Control.DeepSeq.NFData Amazonka.Location.BatchUpdateDevicePosition.BatchUpdateDevicePosition
instance Amazonka.Data.Headers.ToHeaders Amazonka.Location.BatchUpdateDevicePosition.BatchUpdateDevicePosition
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Location.BatchUpdateDevicePosition.BatchUpdateDevicePosition
instance Amazonka.Data.Path.ToPath Amazonka.Location.BatchUpdateDevicePosition.BatchUpdateDevicePosition
instance Amazonka.Data.Query.ToQuery Amazonka.Location.BatchUpdateDevicePosition.BatchUpdateDevicePosition


-- | A batch request for storing geofence geometries into a given geofence
--   collection, or updates the geometry of an existing geofence if a
--   geofence ID is included in the request.
module Amazonka.Location.BatchPutGeofence

-- | <i>See:</i> <a>newBatchPutGeofence</a> smart constructor.
data BatchPutGeofence
BatchPutGeofence' :: Text -> NonEmpty BatchPutGeofenceRequestEntry -> BatchPutGeofence

-- | The geofence collection storing the geofences.
[$sel:collectionName:BatchPutGeofence'] :: BatchPutGeofence -> Text

-- | The batch of geofences to be stored in a geofence collection.
[$sel:entries:BatchPutGeofence'] :: BatchPutGeofence -> NonEmpty BatchPutGeofenceRequestEntry

-- | Create a value of <a>BatchPutGeofence</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:collectionName:BatchPutGeofence'</a>,
--   <a>batchPutGeofence_collectionName</a> - The geofence collection
--   storing the geofences.
--   
--   <a>$sel:entries:BatchPutGeofence'</a>, <a>batchPutGeofence_entries</a>
--   - The batch of geofences to be stored in a geofence collection.
newBatchPutGeofence :: Text -> NonEmpty BatchPutGeofenceRequestEntry -> BatchPutGeofence

-- | The geofence collection storing the geofences.
batchPutGeofence_collectionName :: Lens' BatchPutGeofence Text

-- | The batch of geofences to be stored in a geofence collection.
batchPutGeofence_entries :: Lens' BatchPutGeofence (NonEmpty BatchPutGeofenceRequestEntry)

-- | <i>See:</i> <a>newBatchPutGeofenceResponse</a> smart constructor.
data BatchPutGeofenceResponse
BatchPutGeofenceResponse' :: Int -> [BatchPutGeofenceError] -> [BatchPutGeofenceSuccess] -> BatchPutGeofenceResponse

-- | The response's http status code.
[$sel:httpStatus:BatchPutGeofenceResponse'] :: BatchPutGeofenceResponse -> Int

-- | Contains additional error details for each geofence that failed to be
--   stored in a geofence collection.
[$sel:errors:BatchPutGeofenceResponse'] :: BatchPutGeofenceResponse -> [BatchPutGeofenceError]

-- | Contains each geofence that was successfully stored in a geofence
--   collection.
[$sel:successes:BatchPutGeofenceResponse'] :: BatchPutGeofenceResponse -> [BatchPutGeofenceSuccess]

-- | Create a value of <a>BatchPutGeofenceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:BatchPutGeofenceResponse'</a>,
--   <a>batchPutGeofenceResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:errors:BatchPutGeofenceResponse'</a>,
--   <a>batchPutGeofenceResponse_errors</a> - Contains additional error
--   details for each geofence that failed to be stored in a geofence
--   collection.
--   
--   <a>$sel:successes:BatchPutGeofenceResponse'</a>,
--   <a>batchPutGeofenceResponse_successes</a> - Contains each geofence
--   that was successfully stored in a geofence collection.
newBatchPutGeofenceResponse :: Int -> BatchPutGeofenceResponse

-- | The response's http status code.
batchPutGeofenceResponse_httpStatus :: Lens' BatchPutGeofenceResponse Int

-- | Contains additional error details for each geofence that failed to be
--   stored in a geofence collection.
batchPutGeofenceResponse_errors :: Lens' BatchPutGeofenceResponse [BatchPutGeofenceError]

-- | Contains each geofence that was successfully stored in a geofence
--   collection.
batchPutGeofenceResponse_successes :: Lens' BatchPutGeofenceResponse [BatchPutGeofenceSuccess]
instance GHC.Generics.Generic Amazonka.Location.BatchPutGeofence.BatchPutGeofence
instance GHC.Show.Show Amazonka.Location.BatchPutGeofence.BatchPutGeofence
instance GHC.Classes.Eq Amazonka.Location.BatchPutGeofence.BatchPutGeofence
instance GHC.Generics.Generic Amazonka.Location.BatchPutGeofence.BatchPutGeofenceResponse
instance GHC.Show.Show Amazonka.Location.BatchPutGeofence.BatchPutGeofenceResponse
instance GHC.Read.Read Amazonka.Location.BatchPutGeofence.BatchPutGeofenceResponse
instance GHC.Classes.Eq Amazonka.Location.BatchPutGeofence.BatchPutGeofenceResponse
instance Amazonka.Types.AWSRequest Amazonka.Location.BatchPutGeofence.BatchPutGeofence
instance Control.DeepSeq.NFData Amazonka.Location.BatchPutGeofence.BatchPutGeofenceResponse
instance Data.Hashable.Class.Hashable Amazonka.Location.BatchPutGeofence.BatchPutGeofence
instance Control.DeepSeq.NFData Amazonka.Location.BatchPutGeofence.BatchPutGeofence
instance Amazonka.Data.Headers.ToHeaders Amazonka.Location.BatchPutGeofence.BatchPutGeofence
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Location.BatchPutGeofence.BatchPutGeofence
instance Amazonka.Data.Path.ToPath Amazonka.Location.BatchPutGeofence.BatchPutGeofence
instance Amazonka.Data.Query.ToQuery Amazonka.Location.BatchPutGeofence.BatchPutGeofence


-- | Lists the latest device positions for requested devices.
module Amazonka.Location.BatchGetDevicePosition

-- | <i>See:</i> <a>newBatchGetDevicePosition</a> smart constructor.
data BatchGetDevicePosition
BatchGetDevicePosition' :: NonEmpty Text -> Text -> BatchGetDevicePosition

-- | Devices whose position you want to retrieve.
--   
--   <ul>
--   <li>For example, for two devices:
--   <tt>device-ids=DeviceId1&amp;device-ids=DeviceId2</tt></li>
--   </ul>
[$sel:deviceIds:BatchGetDevicePosition'] :: BatchGetDevicePosition -> NonEmpty Text

-- | The tracker resource retrieving the device position.
[$sel:trackerName:BatchGetDevicePosition'] :: BatchGetDevicePosition -> Text

-- | Create a value of <a>BatchGetDevicePosition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceIds:BatchGetDevicePosition'</a>,
--   <a>batchGetDevicePosition_deviceIds</a> - Devices whose position you
--   want to retrieve.
--   
--   <ul>
--   <li>For example, for two devices:
--   <tt>device-ids=DeviceId1&amp;device-ids=DeviceId2</tt></li>
--   </ul>
--   
--   <a>$sel:trackerName:BatchGetDevicePosition'</a>,
--   <a>batchGetDevicePosition_trackerName</a> - The tracker resource
--   retrieving the device position.
newBatchGetDevicePosition :: NonEmpty Text -> Text -> BatchGetDevicePosition

-- | Devices whose position you want to retrieve.
--   
--   <ul>
--   <li>For example, for two devices:
--   <tt>device-ids=DeviceId1&amp;device-ids=DeviceId2</tt></li>
--   </ul>
batchGetDevicePosition_deviceIds :: Lens' BatchGetDevicePosition (NonEmpty Text)

-- | The tracker resource retrieving the device position.
batchGetDevicePosition_trackerName :: Lens' BatchGetDevicePosition Text

-- | <i>See:</i> <a>newBatchGetDevicePositionResponse</a> smart
--   constructor.
data BatchGetDevicePositionResponse
BatchGetDevicePositionResponse' :: Int -> [DevicePosition] -> [BatchGetDevicePositionError] -> BatchGetDevicePositionResponse

-- | The response's http status code.
[$sel:httpStatus:BatchGetDevicePositionResponse'] :: BatchGetDevicePositionResponse -> Int

-- | Contains device position details such as the device ID, position, and
--   timestamps for when the position was received and sampled.
[$sel:devicePositions:BatchGetDevicePositionResponse'] :: BatchGetDevicePositionResponse -> [DevicePosition]

-- | Contains error details for each device that failed to send its
--   position to the tracker resource.
[$sel:errors:BatchGetDevicePositionResponse'] :: BatchGetDevicePositionResponse -> [BatchGetDevicePositionError]

-- | Create a value of <a>BatchGetDevicePositionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:BatchGetDevicePositionResponse'</a>,
--   <a>batchGetDevicePositionResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:devicePositions:BatchGetDevicePositionResponse'</a>,
--   <a>batchGetDevicePositionResponse_devicePositions</a> - Contains
--   device position details such as the device ID, position, and
--   timestamps for when the position was received and sampled.
--   
--   <a>$sel:errors:BatchGetDevicePositionResponse'</a>,
--   <a>batchGetDevicePositionResponse_errors</a> - Contains error details
--   for each device that failed to send its position to the tracker
--   resource.
newBatchGetDevicePositionResponse :: Int -> BatchGetDevicePositionResponse

-- | The response's http status code.
batchGetDevicePositionResponse_httpStatus :: Lens' BatchGetDevicePositionResponse Int

-- | Contains device position details such as the device ID, position, and
--   timestamps for when the position was received and sampled.
batchGetDevicePositionResponse_devicePositions :: Lens' BatchGetDevicePositionResponse [DevicePosition]

-- | Contains error details for each device that failed to send its
--   position to the tracker resource.
batchGetDevicePositionResponse_errors :: Lens' BatchGetDevicePositionResponse [BatchGetDevicePositionError]
instance GHC.Generics.Generic Amazonka.Location.BatchGetDevicePosition.BatchGetDevicePosition
instance GHC.Show.Show Amazonka.Location.BatchGetDevicePosition.BatchGetDevicePosition
instance GHC.Read.Read Amazonka.Location.BatchGetDevicePosition.BatchGetDevicePosition
instance GHC.Classes.Eq Amazonka.Location.BatchGetDevicePosition.BatchGetDevicePosition
instance GHC.Generics.Generic Amazonka.Location.BatchGetDevicePosition.BatchGetDevicePositionResponse
instance GHC.Show.Show Amazonka.Location.BatchGetDevicePosition.BatchGetDevicePositionResponse
instance GHC.Classes.Eq Amazonka.Location.BatchGetDevicePosition.BatchGetDevicePositionResponse
instance Amazonka.Types.AWSRequest Amazonka.Location.BatchGetDevicePosition.BatchGetDevicePosition
instance Control.DeepSeq.NFData Amazonka.Location.BatchGetDevicePosition.BatchGetDevicePositionResponse
instance Data.Hashable.Class.Hashable Amazonka.Location.BatchGetDevicePosition.BatchGetDevicePosition
instance Control.DeepSeq.NFData Amazonka.Location.BatchGetDevicePosition.BatchGetDevicePosition
instance Amazonka.Data.Headers.ToHeaders Amazonka.Location.BatchGetDevicePosition.BatchGetDevicePosition
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Location.BatchGetDevicePosition.BatchGetDevicePosition
instance Amazonka.Data.Path.ToPath Amazonka.Location.BatchGetDevicePosition.BatchGetDevicePosition
instance Amazonka.Data.Query.ToQuery Amazonka.Location.BatchGetDevicePosition.BatchGetDevicePosition


-- | Evaluates device positions against the geofence geometries from a
--   given geofence collection.
--   
--   This operation always returns an empty response because geofences are
--   asynchronously evaluated. The evaluation determines if the device has
--   entered or exited a geofenced area, and then publishes one of the
--   following events to Amazon EventBridge:
--   
--   <ul>
--   <li><tt>ENTER</tt> if Amazon Location determines that the tracked
--   device has entered a geofenced area.</li>
--   <li><tt>EXIT</tt> if Amazon Location determines that the tracked
--   device has exited a geofenced area.</li>
--   </ul>
--   
--   The last geofence that a device was observed within is tracked for 30
--   days after the most recent device position update.
module Amazonka.Location.BatchEvaluateGeofences

-- | <i>See:</i> <a>newBatchEvaluateGeofences</a> smart constructor.
data BatchEvaluateGeofences
BatchEvaluateGeofences' :: Text -> NonEmpty DevicePositionUpdate -> BatchEvaluateGeofences

-- | The geofence collection used in evaluating the position of devices
--   against its geofences.
[$sel:collectionName:BatchEvaluateGeofences'] :: BatchEvaluateGeofences -> Text

-- | Contains device details for each device to be evaluated against the
--   given geofence collection.
[$sel:devicePositionUpdates:BatchEvaluateGeofences'] :: BatchEvaluateGeofences -> NonEmpty DevicePositionUpdate

-- | Create a value of <a>BatchEvaluateGeofences</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:collectionName:BatchEvaluateGeofences'</a>,
--   <a>batchEvaluateGeofences_collectionName</a> - The geofence collection
--   used in evaluating the position of devices against its geofences.
--   
--   <a>$sel:devicePositionUpdates:BatchEvaluateGeofences'</a>,
--   <a>batchEvaluateGeofences_devicePositionUpdates</a> - Contains device
--   details for each device to be evaluated against the given geofence
--   collection.
newBatchEvaluateGeofences :: Text -> NonEmpty DevicePositionUpdate -> BatchEvaluateGeofences

-- | The geofence collection used in evaluating the position of devices
--   against its geofences.
batchEvaluateGeofences_collectionName :: Lens' BatchEvaluateGeofences Text

-- | Contains device details for each device to be evaluated against the
--   given geofence collection.
batchEvaluateGeofences_devicePositionUpdates :: Lens' BatchEvaluateGeofences (NonEmpty DevicePositionUpdate)

-- | <i>See:</i> <a>newBatchEvaluateGeofencesResponse</a> smart
--   constructor.
data BatchEvaluateGeofencesResponse
BatchEvaluateGeofencesResponse' :: Int -> [BatchEvaluateGeofencesError] -> BatchEvaluateGeofencesResponse

-- | The response's http status code.
[$sel:httpStatus:BatchEvaluateGeofencesResponse'] :: BatchEvaluateGeofencesResponse -> Int

-- | Contains error details for each device that failed to evaluate its
--   position against the given geofence collection.
[$sel:errors:BatchEvaluateGeofencesResponse'] :: BatchEvaluateGeofencesResponse -> [BatchEvaluateGeofencesError]

-- | Create a value of <a>BatchEvaluateGeofencesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:BatchEvaluateGeofencesResponse'</a>,
--   <a>batchEvaluateGeofencesResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:errors:BatchEvaluateGeofencesResponse'</a>,
--   <a>batchEvaluateGeofencesResponse_errors</a> - Contains error details
--   for each device that failed to evaluate its position against the given
--   geofence collection.
newBatchEvaluateGeofencesResponse :: Int -> BatchEvaluateGeofencesResponse

-- | The response's http status code.
batchEvaluateGeofencesResponse_httpStatus :: Lens' BatchEvaluateGeofencesResponse Int

-- | Contains error details for each device that failed to evaluate its
--   position against the given geofence collection.
batchEvaluateGeofencesResponse_errors :: Lens' BatchEvaluateGeofencesResponse [BatchEvaluateGeofencesError]
instance GHC.Generics.Generic Amazonka.Location.BatchEvaluateGeofences.BatchEvaluateGeofences
instance GHC.Show.Show Amazonka.Location.BatchEvaluateGeofences.BatchEvaluateGeofences
instance GHC.Classes.Eq Amazonka.Location.BatchEvaluateGeofences.BatchEvaluateGeofences
instance GHC.Generics.Generic Amazonka.Location.BatchEvaluateGeofences.BatchEvaluateGeofencesResponse
instance GHC.Show.Show Amazonka.Location.BatchEvaluateGeofences.BatchEvaluateGeofencesResponse
instance GHC.Read.Read Amazonka.Location.BatchEvaluateGeofences.BatchEvaluateGeofencesResponse
instance GHC.Classes.Eq Amazonka.Location.BatchEvaluateGeofences.BatchEvaluateGeofencesResponse
instance Amazonka.Types.AWSRequest Amazonka.Location.BatchEvaluateGeofences.BatchEvaluateGeofences
instance Control.DeepSeq.NFData Amazonka.Location.BatchEvaluateGeofences.BatchEvaluateGeofencesResponse
instance Data.Hashable.Class.Hashable Amazonka.Location.BatchEvaluateGeofences.BatchEvaluateGeofences
instance Control.DeepSeq.NFData Amazonka.Location.BatchEvaluateGeofences.BatchEvaluateGeofences
instance Amazonka.Data.Headers.ToHeaders Amazonka.Location.BatchEvaluateGeofences.BatchEvaluateGeofences
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Location.BatchEvaluateGeofences.BatchEvaluateGeofences
instance Amazonka.Data.Path.ToPath Amazonka.Location.BatchEvaluateGeofences.BatchEvaluateGeofences
instance Amazonka.Data.Query.ToQuery Amazonka.Location.BatchEvaluateGeofences.BatchEvaluateGeofences


-- | Deletes a batch of geofences from a geofence collection.
--   
--   This operation deletes the resource permanently.
module Amazonka.Location.BatchDeleteGeofence

-- | <i>See:</i> <a>newBatchDeleteGeofence</a> smart constructor.
data BatchDeleteGeofence
BatchDeleteGeofence' :: Text -> NonEmpty Text -> BatchDeleteGeofence

-- | The geofence collection storing the geofences to be deleted.
[$sel:collectionName:BatchDeleteGeofence'] :: BatchDeleteGeofence -> Text

-- | The batch of geofences to be deleted.
[$sel:geofenceIds:BatchDeleteGeofence'] :: BatchDeleteGeofence -> NonEmpty Text

-- | Create a value of <a>BatchDeleteGeofence</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:collectionName:BatchDeleteGeofence'</a>,
--   <a>batchDeleteGeofence_collectionName</a> - The geofence collection
--   storing the geofences to be deleted.
--   
--   <a>$sel:geofenceIds:BatchDeleteGeofence'</a>,
--   <a>batchDeleteGeofence_geofenceIds</a> - The batch of geofences to be
--   deleted.
newBatchDeleteGeofence :: Text -> NonEmpty Text -> BatchDeleteGeofence

-- | The geofence collection storing the geofences to be deleted.
batchDeleteGeofence_collectionName :: Lens' BatchDeleteGeofence Text

-- | The batch of geofences to be deleted.
batchDeleteGeofence_geofenceIds :: Lens' BatchDeleteGeofence (NonEmpty Text)

-- | <i>See:</i> <a>newBatchDeleteGeofenceResponse</a> smart constructor.
data BatchDeleteGeofenceResponse
BatchDeleteGeofenceResponse' :: Int -> [BatchDeleteGeofenceError] -> BatchDeleteGeofenceResponse

-- | The response's http status code.
[$sel:httpStatus:BatchDeleteGeofenceResponse'] :: BatchDeleteGeofenceResponse -> Int

-- | Contains error details for each geofence that failed to delete.
[$sel:errors:BatchDeleteGeofenceResponse'] :: BatchDeleteGeofenceResponse -> [BatchDeleteGeofenceError]

-- | Create a value of <a>BatchDeleteGeofenceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:BatchDeleteGeofenceResponse'</a>,
--   <a>batchDeleteGeofenceResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:errors:BatchDeleteGeofenceResponse'</a>,
--   <a>batchDeleteGeofenceResponse_errors</a> - Contains error details for
--   each geofence that failed to delete.
newBatchDeleteGeofenceResponse :: Int -> BatchDeleteGeofenceResponse

-- | The response's http status code.
batchDeleteGeofenceResponse_httpStatus :: Lens' BatchDeleteGeofenceResponse Int

-- | Contains error details for each geofence that failed to delete.
batchDeleteGeofenceResponse_errors :: Lens' BatchDeleteGeofenceResponse [BatchDeleteGeofenceError]
instance GHC.Generics.Generic Amazonka.Location.BatchDeleteGeofence.BatchDeleteGeofence
instance GHC.Show.Show Amazonka.Location.BatchDeleteGeofence.BatchDeleteGeofence
instance GHC.Read.Read Amazonka.Location.BatchDeleteGeofence.BatchDeleteGeofence
instance GHC.Classes.Eq Amazonka.Location.BatchDeleteGeofence.BatchDeleteGeofence
instance GHC.Generics.Generic Amazonka.Location.BatchDeleteGeofence.BatchDeleteGeofenceResponse
instance GHC.Show.Show Amazonka.Location.BatchDeleteGeofence.BatchDeleteGeofenceResponse
instance GHC.Read.Read Amazonka.Location.BatchDeleteGeofence.BatchDeleteGeofenceResponse
instance GHC.Classes.Eq Amazonka.Location.BatchDeleteGeofence.BatchDeleteGeofenceResponse
instance Amazonka.Types.AWSRequest Amazonka.Location.BatchDeleteGeofence.BatchDeleteGeofence
instance Control.DeepSeq.NFData Amazonka.Location.BatchDeleteGeofence.BatchDeleteGeofenceResponse
instance Data.Hashable.Class.Hashable Amazonka.Location.BatchDeleteGeofence.BatchDeleteGeofence
instance Control.DeepSeq.NFData Amazonka.Location.BatchDeleteGeofence.BatchDeleteGeofence
instance Amazonka.Data.Headers.ToHeaders Amazonka.Location.BatchDeleteGeofence.BatchDeleteGeofence
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Location.BatchDeleteGeofence.BatchDeleteGeofence
instance Amazonka.Data.Path.ToPath Amazonka.Location.BatchDeleteGeofence.BatchDeleteGeofence
instance Amazonka.Data.Query.ToQuery Amazonka.Location.BatchDeleteGeofence.BatchDeleteGeofence


-- | Deletes the position history of one or more devices from a tracker
--   resource.
module Amazonka.Location.BatchDeleteDevicePositionHistory

-- | <i>See:</i> <a>newBatchDeleteDevicePositionHistory</a> smart
--   constructor.
data BatchDeleteDevicePositionHistory
BatchDeleteDevicePositionHistory' :: NonEmpty Text -> Text -> BatchDeleteDevicePositionHistory

-- | Devices whose position history you want to delete.
--   
--   <ul>
--   <li>For example, for two devices: <tt>“DeviceIds” :
--   [DeviceId1,DeviceId2]</tt></li>
--   </ul>
[$sel:deviceIds:BatchDeleteDevicePositionHistory'] :: BatchDeleteDevicePositionHistory -> NonEmpty Text

-- | The name of the tracker resource to delete the device position history
--   from.
[$sel:trackerName:BatchDeleteDevicePositionHistory'] :: BatchDeleteDevicePositionHistory -> Text

-- | Create a value of <a>BatchDeleteDevicePositionHistory</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceIds:BatchDeleteDevicePositionHistory'</a>,
--   <a>batchDeleteDevicePositionHistory_deviceIds</a> - Devices whose
--   position history you want to delete.
--   
--   <ul>
--   <li>For example, for two devices: <tt>“DeviceIds” :
--   [DeviceId1,DeviceId2]</tt></li>
--   </ul>
--   
--   <a>$sel:trackerName:BatchDeleteDevicePositionHistory'</a>,
--   <a>batchDeleteDevicePositionHistory_trackerName</a> - The name of the
--   tracker resource to delete the device position history from.
newBatchDeleteDevicePositionHistory :: NonEmpty Text -> Text -> BatchDeleteDevicePositionHistory

-- | Devices whose position history you want to delete.
--   
--   <ul>
--   <li>For example, for two devices: <tt>“DeviceIds” :
--   [DeviceId1,DeviceId2]</tt></li>
--   </ul>
batchDeleteDevicePositionHistory_deviceIds :: Lens' BatchDeleteDevicePositionHistory (NonEmpty Text)

-- | The name of the tracker resource to delete the device position history
--   from.
batchDeleteDevicePositionHistory_trackerName :: Lens' BatchDeleteDevicePositionHistory Text

-- | <i>See:</i> <a>newBatchDeleteDevicePositionHistoryResponse</a> smart
--   constructor.
data BatchDeleteDevicePositionHistoryResponse
BatchDeleteDevicePositionHistoryResponse' :: Int -> [BatchDeleteDevicePositionHistoryError] -> BatchDeleteDevicePositionHistoryResponse

-- | The response's http status code.
[$sel:httpStatus:BatchDeleteDevicePositionHistoryResponse'] :: BatchDeleteDevicePositionHistoryResponse -> Int

-- | Contains error details for each device history that failed to delete.
[$sel:errors:BatchDeleteDevicePositionHistoryResponse'] :: BatchDeleteDevicePositionHistoryResponse -> [BatchDeleteDevicePositionHistoryError]

-- | Create a value of <a>BatchDeleteDevicePositionHistoryResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:BatchDeleteDevicePositionHistoryResponse'</a>,
--   <a>batchDeleteDevicePositionHistoryResponse_httpStatus</a> - The
--   response's http status code.
--   
--   <a>$sel:errors:BatchDeleteDevicePositionHistoryResponse'</a>,
--   <a>batchDeleteDevicePositionHistoryResponse_errors</a> - Contains
--   error details for each device history that failed to delete.
newBatchDeleteDevicePositionHistoryResponse :: Int -> BatchDeleteDevicePositionHistoryResponse

-- | The response's http status code.
batchDeleteDevicePositionHistoryResponse_httpStatus :: Lens' BatchDeleteDevicePositionHistoryResponse Int

-- | Contains error details for each device history that failed to delete.
batchDeleteDevicePositionHistoryResponse_errors :: Lens' BatchDeleteDevicePositionHistoryResponse [BatchDeleteDevicePositionHistoryError]
instance GHC.Generics.Generic Amazonka.Location.BatchDeleteDevicePositionHistory.BatchDeleteDevicePositionHistory
instance GHC.Show.Show Amazonka.Location.BatchDeleteDevicePositionHistory.BatchDeleteDevicePositionHistory
instance GHC.Read.Read Amazonka.Location.BatchDeleteDevicePositionHistory.BatchDeleteDevicePositionHistory
instance GHC.Classes.Eq Amazonka.Location.BatchDeleteDevicePositionHistory.BatchDeleteDevicePositionHistory
instance GHC.Generics.Generic Amazonka.Location.BatchDeleteDevicePositionHistory.BatchDeleteDevicePositionHistoryResponse
instance GHC.Show.Show Amazonka.Location.BatchDeleteDevicePositionHistory.BatchDeleteDevicePositionHistoryResponse
instance GHC.Read.Read Amazonka.Location.BatchDeleteDevicePositionHistory.BatchDeleteDevicePositionHistoryResponse
instance GHC.Classes.Eq Amazonka.Location.BatchDeleteDevicePositionHistory.BatchDeleteDevicePositionHistoryResponse
instance Amazonka.Types.AWSRequest Amazonka.Location.BatchDeleteDevicePositionHistory.BatchDeleteDevicePositionHistory
instance Control.DeepSeq.NFData Amazonka.Location.BatchDeleteDevicePositionHistory.BatchDeleteDevicePositionHistoryResponse
instance Data.Hashable.Class.Hashable Amazonka.Location.BatchDeleteDevicePositionHistory.BatchDeleteDevicePositionHistory
instance Control.DeepSeq.NFData Amazonka.Location.BatchDeleteDevicePositionHistory.BatchDeleteDevicePositionHistory
instance Amazonka.Data.Headers.ToHeaders Amazonka.Location.BatchDeleteDevicePositionHistory.BatchDeleteDevicePositionHistory
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Location.BatchDeleteDevicePositionHistory.BatchDeleteDevicePositionHistory
instance Amazonka.Data.Path.ToPath Amazonka.Location.BatchDeleteDevicePositionHistory.BatchDeleteDevicePositionHistory
instance Amazonka.Data.Query.ToQuery Amazonka.Location.BatchDeleteDevicePositionHistory.BatchDeleteDevicePositionHistory


-- | Creates an association between a geofence collection and a tracker
--   resource. This allows the tracker resource to communicate location
--   data to the linked geofence collection.
--   
--   You can associate up to five geofence collections to each tracker
--   resource.
--   
--   Currently not supported — Cross-account configurations, such as
--   creating associations between a tracker resource in one account and a
--   geofence collection in another account.
module Amazonka.Location.AssociateTrackerConsumer

-- | <i>See:</i> <a>newAssociateTrackerConsumer</a> smart constructor.
data AssociateTrackerConsumer
AssociateTrackerConsumer' :: Text -> Text -> AssociateTrackerConsumer

-- | The Amazon Resource Name (ARN) for the geofence collection to be
--   associated to tracker resource. Used when you need to specify a
--   resource across all AWS.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:geofence-collection/ExampleGeofenceCollectionConsumer</tt></li>
--   </ul>
[$sel:consumerArn:AssociateTrackerConsumer'] :: AssociateTrackerConsumer -> Text

-- | The name of the tracker resource to be associated with a geofence
--   collection.
[$sel:trackerName:AssociateTrackerConsumer'] :: AssociateTrackerConsumer -> Text

-- | Create a value of <a>AssociateTrackerConsumer</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:consumerArn:AssociateTrackerConsumer'</a>,
--   <a>associateTrackerConsumer_consumerArn</a> - The Amazon Resource Name
--   (ARN) for the geofence collection to be associated to tracker
--   resource. Used when you need to specify a resource across all AWS.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:geofence-collection/ExampleGeofenceCollectionConsumer</tt></li>
--   </ul>
--   
--   <a>$sel:trackerName:AssociateTrackerConsumer'</a>,
--   <a>associateTrackerConsumer_trackerName</a> - The name of the tracker
--   resource to be associated with a geofence collection.
newAssociateTrackerConsumer :: Text -> Text -> AssociateTrackerConsumer

-- | The Amazon Resource Name (ARN) for the geofence collection to be
--   associated to tracker resource. Used when you need to specify a
--   resource across all AWS.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:geofence-collection/ExampleGeofenceCollectionConsumer</tt></li>
--   </ul>
associateTrackerConsumer_consumerArn :: Lens' AssociateTrackerConsumer Text

-- | The name of the tracker resource to be associated with a geofence
--   collection.
associateTrackerConsumer_trackerName :: Lens' AssociateTrackerConsumer Text

-- | <i>See:</i> <a>newAssociateTrackerConsumerResponse</a> smart
--   constructor.
data AssociateTrackerConsumerResponse
AssociateTrackerConsumerResponse' :: Int -> AssociateTrackerConsumerResponse

-- | The response's http status code.
[$sel:httpStatus:AssociateTrackerConsumerResponse'] :: AssociateTrackerConsumerResponse -> Int

-- | Create a value of <a>AssociateTrackerConsumerResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:AssociateTrackerConsumerResponse'</a>,
--   <a>associateTrackerConsumerResponse_httpStatus</a> - The response's
--   http status code.
newAssociateTrackerConsumerResponse :: Int -> AssociateTrackerConsumerResponse

-- | The response's http status code.
associateTrackerConsumerResponse_httpStatus :: Lens' AssociateTrackerConsumerResponse Int
instance GHC.Generics.Generic Amazonka.Location.AssociateTrackerConsumer.AssociateTrackerConsumer
instance GHC.Show.Show Amazonka.Location.AssociateTrackerConsumer.AssociateTrackerConsumer
instance GHC.Read.Read Amazonka.Location.AssociateTrackerConsumer.AssociateTrackerConsumer
instance GHC.Classes.Eq Amazonka.Location.AssociateTrackerConsumer.AssociateTrackerConsumer
instance GHC.Generics.Generic Amazonka.Location.AssociateTrackerConsumer.AssociateTrackerConsumerResponse
instance GHC.Show.Show Amazonka.Location.AssociateTrackerConsumer.AssociateTrackerConsumerResponse
instance GHC.Read.Read Amazonka.Location.AssociateTrackerConsumer.AssociateTrackerConsumerResponse
instance GHC.Classes.Eq Amazonka.Location.AssociateTrackerConsumer.AssociateTrackerConsumerResponse
instance Amazonka.Types.AWSRequest Amazonka.Location.AssociateTrackerConsumer.AssociateTrackerConsumer
instance Control.DeepSeq.NFData Amazonka.Location.AssociateTrackerConsumer.AssociateTrackerConsumerResponse
instance Data.Hashable.Class.Hashable Amazonka.Location.AssociateTrackerConsumer.AssociateTrackerConsumer
instance Control.DeepSeq.NFData Amazonka.Location.AssociateTrackerConsumer.AssociateTrackerConsumer
instance Amazonka.Data.Headers.ToHeaders Amazonka.Location.AssociateTrackerConsumer.AssociateTrackerConsumer
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Location.AssociateTrackerConsumer.AssociateTrackerConsumer
instance Amazonka.Data.Path.ToPath Amazonka.Location.AssociateTrackerConsumer.AssociateTrackerConsumer
instance Amazonka.Data.Query.ToQuery Amazonka.Location.AssociateTrackerConsumer.AssociateTrackerConsumer


-- | Removes one or more tags from the specified Amazon Location resource.
module Amazonka.Location.UntagResource

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> NonEmpty Text -> UntagResource

-- | The Amazon Resource Name (ARN) of the resource from which you want to
--   remove tags.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:resourcetype/ExampleResource</tt></li>
--   </ul>
[$sel:resourceArn:UntagResource'] :: UntagResource -> Text

-- | The list of tag keys to remove from the specified resource.
[$sel:tagKeys:UntagResource'] :: UntagResource -> NonEmpty Text

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The Amazon Resource Name (ARN) of
--   the resource from which you want to remove tags.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:resourcetype/ExampleResource</tt></li>
--   </ul>
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   list of tag keys to remove from the specified resource.
newUntagResource :: Text -> NonEmpty Text -> UntagResource

-- | The Amazon Resource Name (ARN) of the resource from which you want to
--   remove tags.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:resourcetype/ExampleResource</tt></li>
--   </ul>
untagResource_resourceArn :: Lens' UntagResource Text

-- | The list of tag keys to remove from the specified resource.
untagResource_tagKeys :: Lens' UntagResource (NonEmpty Text)

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:UntagResourceResponse'] :: UntagResourceResponse -> Int

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int
instance GHC.Generics.Generic Amazonka.Location.UntagResource.UntagResource
instance GHC.Show.Show Amazonka.Location.UntagResource.UntagResource
instance GHC.Read.Read Amazonka.Location.UntagResource.UntagResource
instance GHC.Classes.Eq Amazonka.Location.UntagResource.UntagResource
instance GHC.Generics.Generic Amazonka.Location.UntagResource.UntagResourceResponse
instance GHC.Show.Show Amazonka.Location.UntagResource.UntagResourceResponse
instance GHC.Read.Read Amazonka.Location.UntagResource.UntagResourceResponse
instance GHC.Classes.Eq Amazonka.Location.UntagResource.UntagResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.Location.UntagResource.UntagResource
instance Control.DeepSeq.NFData Amazonka.Location.UntagResource.UntagResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.Location.UntagResource.UntagResource
instance Control.DeepSeq.NFData Amazonka.Location.UntagResource.UntagResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.Location.UntagResource.UntagResource
instance Amazonka.Data.Path.ToPath Amazonka.Location.UntagResource.UntagResource
instance Amazonka.Data.Query.ToQuery Amazonka.Location.UntagResource.UntagResource


-- | Updates the specified properties of a given geofence collection.
module Amazonka.Location.UpdateGeofenceCollection

-- | <i>See:</i> <a>newUpdateGeofenceCollection</a> smart constructor.
data UpdateGeofenceCollection
UpdateGeofenceCollection' :: Maybe PricingPlan -> Maybe Text -> Maybe Text -> Text -> UpdateGeofenceCollection

-- | Updates the pricing plan for the geofence collection.
--   
--   For more information about each pricing plan option restrictions, see
--   <a>Amazon Location Service pricing</a>.
[$sel:pricingPlan:UpdateGeofenceCollection'] :: UpdateGeofenceCollection -> Maybe PricingPlan

-- | Updates the data provider for the geofence collection.
--   
--   A required value for the following pricing plans:
--   <tt>MobileAssetTracking</tt>| <tt>MobileAssetManagement</tt>
--   
--   For more information about <a>data providers</a> and <a>pricing
--   plans</a>, see the Amazon Location Service product page.
--   
--   This can only be updated when updating the <tt>PricingPlan</tt> in the
--   same request.
--   
--   Amazon Location Service uses <tt>PricingPlanDataSource</tt> to
--   calculate billing for your geofence collection. Your data won't be
--   shared with the data provider, and will remain in your AWS account and
--   Region unless you move it.
[$sel:pricingPlanDataSource:UpdateGeofenceCollection'] :: UpdateGeofenceCollection -> Maybe Text

-- | Updates the description for the geofence collection.
[$sel:description:UpdateGeofenceCollection'] :: UpdateGeofenceCollection -> Maybe Text

-- | The name of the geofence collection to update.
[$sel:collectionName:UpdateGeofenceCollection'] :: UpdateGeofenceCollection -> Text

-- | Create a value of <a>UpdateGeofenceCollection</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pricingPlan:UpdateGeofenceCollection'</a>,
--   <a>updateGeofenceCollection_pricingPlan</a> - Updates the pricing plan
--   for the geofence collection.
--   
--   For more information about each pricing plan option restrictions, see
--   <a>Amazon Location Service pricing</a>.
--   
--   <a>$sel:pricingPlanDataSource:UpdateGeofenceCollection'</a>,
--   <a>updateGeofenceCollection_pricingPlanDataSource</a> - Updates the
--   data provider for the geofence collection.
--   
--   A required value for the following pricing plans:
--   <tt>MobileAssetTracking</tt>| <tt>MobileAssetManagement</tt>
--   
--   For more information about <a>data providers</a> and <a>pricing
--   plans</a>, see the Amazon Location Service product page.
--   
--   This can only be updated when updating the <tt>PricingPlan</tt> in the
--   same request.
--   
--   Amazon Location Service uses <tt>PricingPlanDataSource</tt> to
--   calculate billing for your geofence collection. Your data won't be
--   shared with the data provider, and will remain in your AWS account and
--   Region unless you move it.
--   
--   <a>$sel:description:UpdateGeofenceCollection'</a>,
--   <a>updateGeofenceCollection_description</a> - Updates the description
--   for the geofence collection.
--   
--   <a>$sel:collectionName:UpdateGeofenceCollection'</a>,
--   <a>updateGeofenceCollection_collectionName</a> - The name of the
--   geofence collection to update.
newUpdateGeofenceCollection :: Text -> UpdateGeofenceCollection

-- | Updates the pricing plan for the geofence collection.
--   
--   For more information about each pricing plan option restrictions, see
--   <a>Amazon Location Service pricing</a>.
updateGeofenceCollection_pricingPlan :: Lens' UpdateGeofenceCollection (Maybe PricingPlan)

-- | Updates the data provider for the geofence collection.
--   
--   A required value for the following pricing plans:
--   <tt>MobileAssetTracking</tt>| <tt>MobileAssetManagement</tt>
--   
--   For more information about <a>data providers</a> and <a>pricing
--   plans</a>, see the Amazon Location Service product page.
--   
--   This can only be updated when updating the <tt>PricingPlan</tt> in the
--   same request.
--   
--   Amazon Location Service uses <tt>PricingPlanDataSource</tt> to
--   calculate billing for your geofence collection. Your data won't be
--   shared with the data provider, and will remain in your AWS account and
--   Region unless you move it.
updateGeofenceCollection_pricingPlanDataSource :: Lens' UpdateGeofenceCollection (Maybe Text)

-- | Updates the description for the geofence collection.
updateGeofenceCollection_description :: Lens' UpdateGeofenceCollection (Maybe Text)

-- | The name of the geofence collection to update.
updateGeofenceCollection_collectionName :: Lens' UpdateGeofenceCollection Text

-- | <i>See:</i> <a>newUpdateGeofenceCollectionResponse</a> smart
--   constructor.
data UpdateGeofenceCollectionResponse
UpdateGeofenceCollectionResponse' :: Int -> Text -> Text -> POSIX -> UpdateGeofenceCollectionResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateGeofenceCollectionResponse'] :: UpdateGeofenceCollectionResponse -> Int

-- | The Amazon Resource Name (ARN) of the updated geofence collection.
--   Used to specify a resource across AWS.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:geofence-collection/ExampleGeofenceCollection</tt></li>
--   </ul>
[$sel:collectionArn:UpdateGeofenceCollectionResponse'] :: UpdateGeofenceCollectionResponse -> Text

-- | The name of the updated geofence collection.
[$sel:collectionName:UpdateGeofenceCollectionResponse'] :: UpdateGeofenceCollectionResponse -> Text

-- | The time when the geofence collection was last updated in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
[$sel:updateTime:UpdateGeofenceCollectionResponse'] :: UpdateGeofenceCollectionResponse -> POSIX

-- | Create a value of <a>UpdateGeofenceCollectionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateGeofenceCollectionResponse'</a>,
--   <a>updateGeofenceCollectionResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:collectionArn:UpdateGeofenceCollectionResponse'</a>,
--   <a>updateGeofenceCollectionResponse_collectionArn</a> - The Amazon
--   Resource Name (ARN) of the updated geofence collection. Used to
--   specify a resource across AWS.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:geofence-collection/ExampleGeofenceCollection</tt></li>
--   </ul>
--   
--   <a>$sel:collectionName:UpdateGeofenceCollection'</a>,
--   <a>updateGeofenceCollectionResponse_collectionName</a> - The name of
--   the updated geofence collection.
--   
--   <a>$sel:updateTime:UpdateGeofenceCollectionResponse'</a>,
--   <a>updateGeofenceCollectionResponse_updateTime</a> - The time when the
--   geofence collection was last updated in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
newUpdateGeofenceCollectionResponse :: Int -> Text -> Text -> UTCTime -> UpdateGeofenceCollectionResponse

-- | The response's http status code.
updateGeofenceCollectionResponse_httpStatus :: Lens' UpdateGeofenceCollectionResponse Int

-- | The Amazon Resource Name (ARN) of the updated geofence collection.
--   Used to specify a resource across AWS.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:geofence-collection/ExampleGeofenceCollection</tt></li>
--   </ul>
updateGeofenceCollectionResponse_collectionArn :: Lens' UpdateGeofenceCollectionResponse Text

-- | The name of the updated geofence collection.
updateGeofenceCollectionResponse_collectionName :: Lens' UpdateGeofenceCollectionResponse Text

-- | The time when the geofence collection was last updated in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
updateGeofenceCollectionResponse_updateTime :: Lens' UpdateGeofenceCollectionResponse UTCTime
instance GHC.Generics.Generic Amazonka.Location.UpdateGeofenceCollection.UpdateGeofenceCollection
instance GHC.Show.Show Amazonka.Location.UpdateGeofenceCollection.UpdateGeofenceCollection
instance GHC.Read.Read Amazonka.Location.UpdateGeofenceCollection.UpdateGeofenceCollection
instance GHC.Classes.Eq Amazonka.Location.UpdateGeofenceCollection.UpdateGeofenceCollection
instance GHC.Generics.Generic Amazonka.Location.UpdateGeofenceCollection.UpdateGeofenceCollectionResponse
instance GHC.Show.Show Amazonka.Location.UpdateGeofenceCollection.UpdateGeofenceCollectionResponse
instance GHC.Read.Read Amazonka.Location.UpdateGeofenceCollection.UpdateGeofenceCollectionResponse
instance GHC.Classes.Eq Amazonka.Location.UpdateGeofenceCollection.UpdateGeofenceCollectionResponse
instance Amazonka.Types.AWSRequest Amazonka.Location.UpdateGeofenceCollection.UpdateGeofenceCollection
instance Control.DeepSeq.NFData Amazonka.Location.UpdateGeofenceCollection.UpdateGeofenceCollectionResponse
instance Data.Hashable.Class.Hashable Amazonka.Location.UpdateGeofenceCollection.UpdateGeofenceCollection
instance Control.DeepSeq.NFData Amazonka.Location.UpdateGeofenceCollection.UpdateGeofenceCollection
instance Amazonka.Data.Headers.ToHeaders Amazonka.Location.UpdateGeofenceCollection.UpdateGeofenceCollection
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Location.UpdateGeofenceCollection.UpdateGeofenceCollection
instance Amazonka.Data.Path.ToPath Amazonka.Location.UpdateGeofenceCollection.UpdateGeofenceCollection
instance Amazonka.Data.Query.ToQuery Amazonka.Location.UpdateGeofenceCollection.UpdateGeofenceCollection


-- | Updates the specified properties of a given map resource.
module Amazonka.Location.UpdateMap

-- | <i>See:</i> <a>newUpdateMap</a> smart constructor.
data UpdateMap
UpdateMap' :: Maybe PricingPlan -> Maybe Text -> Text -> UpdateMap

-- | Updates the pricing plan for the map resource.
--   
--   For more information about each pricing plan option restrictions, see
--   <a>Amazon Location Service pricing</a>.
[$sel:pricingPlan:UpdateMap'] :: UpdateMap -> Maybe PricingPlan

-- | Updates the description for the map resource.
[$sel:description:UpdateMap'] :: UpdateMap -> Maybe Text

-- | The name of the map resource to update.
[$sel:mapName:UpdateMap'] :: UpdateMap -> Text

-- | Create a value of <a>UpdateMap</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pricingPlan:UpdateMap'</a>, <a>updateMap_pricingPlan</a> -
--   Updates the pricing plan for the map resource.
--   
--   For more information about each pricing plan option restrictions, see
--   <a>Amazon Location Service pricing</a>.
--   
--   <a>$sel:description:UpdateMap'</a>, <a>updateMap_description</a> -
--   Updates the description for the map resource.
--   
--   <a>$sel:mapName:UpdateMap'</a>, <a>updateMap_mapName</a> - The name of
--   the map resource to update.
newUpdateMap :: Text -> UpdateMap

-- | Updates the pricing plan for the map resource.
--   
--   For more information about each pricing plan option restrictions, see
--   <a>Amazon Location Service pricing</a>.
updateMap_pricingPlan :: Lens' UpdateMap (Maybe PricingPlan)

-- | Updates the description for the map resource.
updateMap_description :: Lens' UpdateMap (Maybe Text)

-- | The name of the map resource to update.
updateMap_mapName :: Lens' UpdateMap Text

-- | <i>See:</i> <a>newUpdateMapResponse</a> smart constructor.
data UpdateMapResponse
UpdateMapResponse' :: Int -> Text -> Text -> POSIX -> UpdateMapResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateMapResponse'] :: UpdateMapResponse -> Int

-- | The Amazon Resource Name (ARN) of the updated map resource. Used to
--   specify a resource across AWS.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:maps/ExampleMap</tt></li>
--   </ul>
[$sel:mapArn:UpdateMapResponse'] :: UpdateMapResponse -> Text

-- | The name of the updated map resource.
[$sel:mapName:UpdateMapResponse'] :: UpdateMapResponse -> Text

-- | The timestamp for when the map resource was last updated in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
[$sel:updateTime:UpdateMapResponse'] :: UpdateMapResponse -> POSIX

-- | Create a value of <a>UpdateMapResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateMapResponse'</a>,
--   <a>updateMapResponse_httpStatus</a> - The response's http status code.
--   
--   <a>$sel:mapArn:UpdateMapResponse'</a>, <a>updateMapResponse_mapArn</a>
--   - The Amazon Resource Name (ARN) of the updated map resource. Used to
--   specify a resource across AWS.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:maps/ExampleMap</tt></li>
--   </ul>
--   
--   <a>$sel:mapName:UpdateMap'</a>, <a>updateMapResponse_mapName</a> - The
--   name of the updated map resource.
--   
--   <a>$sel:updateTime:UpdateMapResponse'</a>,
--   <a>updateMapResponse_updateTime</a> - The timestamp for when the map
--   resource was last updated in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
newUpdateMapResponse :: Int -> Text -> Text -> UTCTime -> UpdateMapResponse

-- | The response's http status code.
updateMapResponse_httpStatus :: Lens' UpdateMapResponse Int

-- | The Amazon Resource Name (ARN) of the updated map resource. Used to
--   specify a resource across AWS.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:maps/ExampleMap</tt></li>
--   </ul>
updateMapResponse_mapArn :: Lens' UpdateMapResponse Text

-- | The name of the updated map resource.
updateMapResponse_mapName :: Lens' UpdateMapResponse Text

-- | The timestamp for when the map resource was last updated in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
updateMapResponse_updateTime :: Lens' UpdateMapResponse UTCTime
instance GHC.Generics.Generic Amazonka.Location.UpdateMap.UpdateMap
instance GHC.Show.Show Amazonka.Location.UpdateMap.UpdateMap
instance GHC.Read.Read Amazonka.Location.UpdateMap.UpdateMap
instance GHC.Classes.Eq Amazonka.Location.UpdateMap.UpdateMap
instance GHC.Generics.Generic Amazonka.Location.UpdateMap.UpdateMapResponse
instance GHC.Show.Show Amazonka.Location.UpdateMap.UpdateMapResponse
instance GHC.Read.Read Amazonka.Location.UpdateMap.UpdateMapResponse
instance GHC.Classes.Eq Amazonka.Location.UpdateMap.UpdateMapResponse
instance Amazonka.Types.AWSRequest Amazonka.Location.UpdateMap.UpdateMap
instance Control.DeepSeq.NFData Amazonka.Location.UpdateMap.UpdateMapResponse
instance Data.Hashable.Class.Hashable Amazonka.Location.UpdateMap.UpdateMap
instance Control.DeepSeq.NFData Amazonka.Location.UpdateMap.UpdateMap
instance Amazonka.Data.Headers.ToHeaders Amazonka.Location.UpdateMap.UpdateMap
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Location.UpdateMap.UpdateMap
instance Amazonka.Data.Path.ToPath Amazonka.Location.UpdateMap.UpdateMap
instance Amazonka.Data.Query.ToQuery Amazonka.Location.UpdateMap.UpdateMap


-- | Updates the specified properties of a given place index resource.
module Amazonka.Location.UpdatePlaceIndex

-- | <i>See:</i> <a>newUpdatePlaceIndex</a> smart constructor.
data UpdatePlaceIndex
UpdatePlaceIndex' :: Maybe PricingPlan -> Maybe DataSourceConfiguration -> Maybe Text -> Text -> UpdatePlaceIndex

-- | Updates the pricing plan for the place index resource.
--   
--   For more information about each pricing plan option restrictions, see
--   <a>Amazon Location Service pricing</a>.
[$sel:pricingPlan:UpdatePlaceIndex'] :: UpdatePlaceIndex -> Maybe PricingPlan

-- | Updates the data storage option for the place index resource.
[$sel:dataSourceConfiguration:UpdatePlaceIndex'] :: UpdatePlaceIndex -> Maybe DataSourceConfiguration

-- | Updates the description for the place index resource.
[$sel:description:UpdatePlaceIndex'] :: UpdatePlaceIndex -> Maybe Text

-- | The name of the place index resource to update.
[$sel:indexName:UpdatePlaceIndex'] :: UpdatePlaceIndex -> Text

-- | Create a value of <a>UpdatePlaceIndex</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pricingPlan:UpdatePlaceIndex'</a>,
--   <a>updatePlaceIndex_pricingPlan</a> - Updates the pricing plan for the
--   place index resource.
--   
--   For more information about each pricing plan option restrictions, see
--   <a>Amazon Location Service pricing</a>.
--   
--   <a>$sel:dataSourceConfiguration:UpdatePlaceIndex'</a>,
--   <a>updatePlaceIndex_dataSourceConfiguration</a> - Updates the data
--   storage option for the place index resource.
--   
--   <a>$sel:description:UpdatePlaceIndex'</a>,
--   <a>updatePlaceIndex_description</a> - Updates the description for the
--   place index resource.
--   
--   <a>$sel:indexName:UpdatePlaceIndex'</a>,
--   <a>updatePlaceIndex_indexName</a> - The name of the place index
--   resource to update.
newUpdatePlaceIndex :: Text -> UpdatePlaceIndex

-- | Updates the pricing plan for the place index resource.
--   
--   For more information about each pricing plan option restrictions, see
--   <a>Amazon Location Service pricing</a>.
updatePlaceIndex_pricingPlan :: Lens' UpdatePlaceIndex (Maybe PricingPlan)

-- | Updates the data storage option for the place index resource.
updatePlaceIndex_dataSourceConfiguration :: Lens' UpdatePlaceIndex (Maybe DataSourceConfiguration)

-- | Updates the description for the place index resource.
updatePlaceIndex_description :: Lens' UpdatePlaceIndex (Maybe Text)

-- | The name of the place index resource to update.
updatePlaceIndex_indexName :: Lens' UpdatePlaceIndex Text

-- | <i>See:</i> <a>newUpdatePlaceIndexResponse</a> smart constructor.
data UpdatePlaceIndexResponse
UpdatePlaceIndexResponse' :: Int -> Text -> Text -> POSIX -> UpdatePlaceIndexResponse

-- | The response's http status code.
[$sel:httpStatus:UpdatePlaceIndexResponse'] :: UpdatePlaceIndexResponse -> Int

-- | The Amazon Resource Name (ARN) of the upated place index resource.
--   Used to specify a resource across AWS.
--   
--   <ul>
--   <li>Format example: <tt>arn:aws:geo:region:account-id:place-
--   index/ExamplePlaceIndex</tt></li>
--   </ul>
[$sel:indexArn:UpdatePlaceIndexResponse'] :: UpdatePlaceIndexResponse -> Text

-- | The name of the updated place index resource.
[$sel:indexName:UpdatePlaceIndexResponse'] :: UpdatePlaceIndexResponse -> Text

-- | The timestamp for when the place index resource was last updated in
--   <a>ISO 8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
[$sel:updateTime:UpdatePlaceIndexResponse'] :: UpdatePlaceIndexResponse -> POSIX

-- | Create a value of <a>UpdatePlaceIndexResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdatePlaceIndexResponse'</a>,
--   <a>updatePlaceIndexResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:indexArn:UpdatePlaceIndexResponse'</a>,
--   <a>updatePlaceIndexResponse_indexArn</a> - The Amazon Resource Name
--   (ARN) of the upated place index resource. Used to specify a resource
--   across AWS.
--   
--   <ul>
--   <li>Format example: <tt>arn:aws:geo:region:account-id:place-
--   index/ExamplePlaceIndex</tt></li>
--   </ul>
--   
--   <a>$sel:indexName:UpdatePlaceIndex'</a>,
--   <a>updatePlaceIndexResponse_indexName</a> - The name of the updated
--   place index resource.
--   
--   <a>$sel:updateTime:UpdatePlaceIndexResponse'</a>,
--   <a>updatePlaceIndexResponse_updateTime</a> - The timestamp for when
--   the place index resource was last updated in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
newUpdatePlaceIndexResponse :: Int -> Text -> Text -> UTCTime -> UpdatePlaceIndexResponse

-- | The response's http status code.
updatePlaceIndexResponse_httpStatus :: Lens' UpdatePlaceIndexResponse Int

-- | The Amazon Resource Name (ARN) of the upated place index resource.
--   Used to specify a resource across AWS.
--   
--   <ul>
--   <li>Format example: <tt>arn:aws:geo:region:account-id:place-
--   index/ExamplePlaceIndex</tt></li>
--   </ul>
updatePlaceIndexResponse_indexArn :: Lens' UpdatePlaceIndexResponse Text

-- | The name of the updated place index resource.
updatePlaceIndexResponse_indexName :: Lens' UpdatePlaceIndexResponse Text

-- | The timestamp for when the place index resource was last updated in
--   <a>ISO 8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
updatePlaceIndexResponse_updateTime :: Lens' UpdatePlaceIndexResponse UTCTime
instance GHC.Generics.Generic Amazonka.Location.UpdatePlaceIndex.UpdatePlaceIndex
instance GHC.Show.Show Amazonka.Location.UpdatePlaceIndex.UpdatePlaceIndex
instance GHC.Read.Read Amazonka.Location.UpdatePlaceIndex.UpdatePlaceIndex
instance GHC.Classes.Eq Amazonka.Location.UpdatePlaceIndex.UpdatePlaceIndex
instance GHC.Generics.Generic Amazonka.Location.UpdatePlaceIndex.UpdatePlaceIndexResponse
instance GHC.Show.Show Amazonka.Location.UpdatePlaceIndex.UpdatePlaceIndexResponse
instance GHC.Read.Read Amazonka.Location.UpdatePlaceIndex.UpdatePlaceIndexResponse
instance GHC.Classes.Eq Amazonka.Location.UpdatePlaceIndex.UpdatePlaceIndexResponse
instance Amazonka.Types.AWSRequest Amazonka.Location.UpdatePlaceIndex.UpdatePlaceIndex
instance Control.DeepSeq.NFData Amazonka.Location.UpdatePlaceIndex.UpdatePlaceIndexResponse
instance Data.Hashable.Class.Hashable Amazonka.Location.UpdatePlaceIndex.UpdatePlaceIndex
instance Control.DeepSeq.NFData Amazonka.Location.UpdatePlaceIndex.UpdatePlaceIndex
instance Amazonka.Data.Headers.ToHeaders Amazonka.Location.UpdatePlaceIndex.UpdatePlaceIndex
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Location.UpdatePlaceIndex.UpdatePlaceIndex
instance Amazonka.Data.Path.ToPath Amazonka.Location.UpdatePlaceIndex.UpdatePlaceIndex
instance Amazonka.Data.Query.ToQuery Amazonka.Location.UpdatePlaceIndex.UpdatePlaceIndex


-- | Updates the specified properties for a given route calculator
--   resource.
module Amazonka.Location.UpdateRouteCalculator

-- | <i>See:</i> <a>newUpdateRouteCalculator</a> smart constructor.
data UpdateRouteCalculator
UpdateRouteCalculator' :: Maybe PricingPlan -> Maybe Text -> Text -> UpdateRouteCalculator

-- | Updates the pricing plan for the route calculator resource.
--   
--   For more information about each pricing plan option restrictions, see
--   <a>Amazon Location Service pricing</a>.
[$sel:pricingPlan:UpdateRouteCalculator'] :: UpdateRouteCalculator -> Maybe PricingPlan

-- | Updates the description for the route calculator resource.
[$sel:description:UpdateRouteCalculator'] :: UpdateRouteCalculator -> Maybe Text

-- | The name of the route calculator resource to update.
[$sel:calculatorName:UpdateRouteCalculator'] :: UpdateRouteCalculator -> Text

-- | Create a value of <a>UpdateRouteCalculator</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pricingPlan:UpdateRouteCalculator'</a>,
--   <a>updateRouteCalculator_pricingPlan</a> - Updates the pricing plan
--   for the route calculator resource.
--   
--   For more information about each pricing plan option restrictions, see
--   <a>Amazon Location Service pricing</a>.
--   
--   <a>$sel:description:UpdateRouteCalculator'</a>,
--   <a>updateRouteCalculator_description</a> - Updates the description for
--   the route calculator resource.
--   
--   <a>$sel:calculatorName:UpdateRouteCalculator'</a>,
--   <a>updateRouteCalculator_calculatorName</a> - The name of the route
--   calculator resource to update.
newUpdateRouteCalculator :: Text -> UpdateRouteCalculator

-- | Updates the pricing plan for the route calculator resource.
--   
--   For more information about each pricing plan option restrictions, see
--   <a>Amazon Location Service pricing</a>.
updateRouteCalculator_pricingPlan :: Lens' UpdateRouteCalculator (Maybe PricingPlan)

-- | Updates the description for the route calculator resource.
updateRouteCalculator_description :: Lens' UpdateRouteCalculator (Maybe Text)

-- | The name of the route calculator resource to update.
updateRouteCalculator_calculatorName :: Lens' UpdateRouteCalculator Text

-- | <i>See:</i> <a>newUpdateRouteCalculatorResponse</a> smart constructor.
data UpdateRouteCalculatorResponse
UpdateRouteCalculatorResponse' :: Int -> Text -> Text -> POSIX -> UpdateRouteCalculatorResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateRouteCalculatorResponse'] :: UpdateRouteCalculatorResponse -> Int

-- | The Amazon Resource Name (ARN) of the updated route calculator
--   resource. Used to specify a resource across AWS.
--   
--   <ul>
--   <li>Format example: <tt>arn:aws:geo:region:account-id:route-
--   calculator/ExampleCalculator</tt></li>
--   </ul>
[$sel:calculatorArn:UpdateRouteCalculatorResponse'] :: UpdateRouteCalculatorResponse -> Text

-- | The name of the updated route calculator resource.
[$sel:calculatorName:UpdateRouteCalculatorResponse'] :: UpdateRouteCalculatorResponse -> Text

-- | The timestamp for when the route calculator was last updated in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
[$sel:updateTime:UpdateRouteCalculatorResponse'] :: UpdateRouteCalculatorResponse -> POSIX

-- | Create a value of <a>UpdateRouteCalculatorResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateRouteCalculatorResponse'</a>,
--   <a>updateRouteCalculatorResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:calculatorArn:UpdateRouteCalculatorResponse'</a>,
--   <a>updateRouteCalculatorResponse_calculatorArn</a> - The Amazon
--   Resource Name (ARN) of the updated route calculator resource. Used to
--   specify a resource across AWS.
--   
--   <ul>
--   <li>Format example: <tt>arn:aws:geo:region:account-id:route-
--   calculator/ExampleCalculator</tt></li>
--   </ul>
--   
--   <a>$sel:calculatorName:UpdateRouteCalculator'</a>,
--   <a>updateRouteCalculatorResponse_calculatorName</a> - The name of the
--   updated route calculator resource.
--   
--   <a>$sel:updateTime:UpdateRouteCalculatorResponse'</a>,
--   <a>updateRouteCalculatorResponse_updateTime</a> - The timestamp for
--   when the route calculator was last updated in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
newUpdateRouteCalculatorResponse :: Int -> Text -> Text -> UTCTime -> UpdateRouteCalculatorResponse

-- | The response's http status code.
updateRouteCalculatorResponse_httpStatus :: Lens' UpdateRouteCalculatorResponse Int

-- | The Amazon Resource Name (ARN) of the updated route calculator
--   resource. Used to specify a resource across AWS.
--   
--   <ul>
--   <li>Format example: <tt>arn:aws:geo:region:account-id:route-
--   calculator/ExampleCalculator</tt></li>
--   </ul>
updateRouteCalculatorResponse_calculatorArn :: Lens' UpdateRouteCalculatorResponse Text

-- | The name of the updated route calculator resource.
updateRouteCalculatorResponse_calculatorName :: Lens' UpdateRouteCalculatorResponse Text

-- | The timestamp for when the route calculator was last updated in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
updateRouteCalculatorResponse_updateTime :: Lens' UpdateRouteCalculatorResponse UTCTime
instance GHC.Generics.Generic Amazonka.Location.UpdateRouteCalculator.UpdateRouteCalculator
instance GHC.Show.Show Amazonka.Location.UpdateRouteCalculator.UpdateRouteCalculator
instance GHC.Read.Read Amazonka.Location.UpdateRouteCalculator.UpdateRouteCalculator
instance GHC.Classes.Eq Amazonka.Location.UpdateRouteCalculator.UpdateRouteCalculator
instance GHC.Generics.Generic Amazonka.Location.UpdateRouteCalculator.UpdateRouteCalculatorResponse
instance GHC.Show.Show Amazonka.Location.UpdateRouteCalculator.UpdateRouteCalculatorResponse
instance GHC.Read.Read Amazonka.Location.UpdateRouteCalculator.UpdateRouteCalculatorResponse
instance GHC.Classes.Eq Amazonka.Location.UpdateRouteCalculator.UpdateRouteCalculatorResponse
instance Amazonka.Types.AWSRequest Amazonka.Location.UpdateRouteCalculator.UpdateRouteCalculator
instance Control.DeepSeq.NFData Amazonka.Location.UpdateRouteCalculator.UpdateRouteCalculatorResponse
instance Data.Hashable.Class.Hashable Amazonka.Location.UpdateRouteCalculator.UpdateRouteCalculator
instance Control.DeepSeq.NFData Amazonka.Location.UpdateRouteCalculator.UpdateRouteCalculator
instance Amazonka.Data.Headers.ToHeaders Amazonka.Location.UpdateRouteCalculator.UpdateRouteCalculator
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Location.UpdateRouteCalculator.UpdateRouteCalculator
instance Amazonka.Data.Path.ToPath Amazonka.Location.UpdateRouteCalculator.UpdateRouteCalculator
instance Amazonka.Data.Query.ToQuery Amazonka.Location.UpdateRouteCalculator.UpdateRouteCalculator


-- | Updates the specified properties of a given tracker resource.
module Amazonka.Location.UpdateTracker

-- | <i>See:</i> <a>newUpdateTracker</a> smart constructor.
data UpdateTracker
UpdateTracker' :: Maybe PricingPlan -> Maybe Text -> Maybe Text -> Maybe PositionFiltering -> Text -> UpdateTracker

-- | Updates the pricing plan for the tracker resource.
--   
--   For more information about each pricing plan option restrictions, see
--   <a>Amazon Location Service pricing</a>.
[$sel:pricingPlan:UpdateTracker'] :: UpdateTracker -> Maybe PricingPlan

-- | Updates the data provider for the tracker resource.
--   
--   A required value for the following pricing plans:
--   <tt>MobileAssetTracking</tt>| <tt>MobileAssetManagement</tt>
--   
--   For more information about <a>data providers</a> and <a>pricing
--   plans</a>, see the Amazon Location Service product page
--   
--   This can only be updated when updating the <tt>PricingPlan</tt> in the
--   same request.
--   
--   Amazon Location Service uses <tt>PricingPlanDataSource</tt> to
--   calculate billing for your tracker resource. Your data won't be shared
--   with the data provider, and will remain in your AWS account and Region
--   unless you move it.
[$sel:pricingPlanDataSource:UpdateTracker'] :: UpdateTracker -> Maybe Text

-- | Updates the description for the tracker resource.
[$sel:description:UpdateTracker'] :: UpdateTracker -> Maybe Text

-- | Updates the position filtering for the tracker resource.
--   
--   Valid values:
--   
--   <ul>
--   <li><tt>TimeBased</tt> - Location updates are evaluated against linked
--   geofence collections, but not every location update is stored. If your
--   update frequency is more often than 30 seconds, only one update per 30
--   seconds is stored for each unique device ID.</li>
--   <li><tt>DistanceBased</tt> - If the device has moved less than 30 m
--   (98.4 ft), location updates are ignored. Location updates within this
--   distance are neither evaluated against linked geofence collections,
--   nor stored. This helps control costs by reducing the number of
--   geofence evaluations and device positions to retrieve. Distance-based
--   filtering can also reduce the jitter effect when displaying device
--   trajectory on a map.</li>
--   </ul>
[$sel:positionFiltering:UpdateTracker'] :: UpdateTracker -> Maybe PositionFiltering

-- | The name of the tracker resource to update.
[$sel:trackerName:UpdateTracker'] :: UpdateTracker -> Text

-- | Create a value of <a>UpdateTracker</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pricingPlan:UpdateTracker'</a>,
--   <a>updateTracker_pricingPlan</a> - Updates the pricing plan for the
--   tracker resource.
--   
--   For more information about each pricing plan option restrictions, see
--   <a>Amazon Location Service pricing</a>.
--   
--   <a>$sel:pricingPlanDataSource:UpdateTracker'</a>,
--   <a>updateTracker_pricingPlanDataSource</a> - Updates the data provider
--   for the tracker resource.
--   
--   A required value for the following pricing plans:
--   <tt>MobileAssetTracking</tt>| <tt>MobileAssetManagement</tt>
--   
--   For more information about <a>data providers</a> and <a>pricing
--   plans</a>, see the Amazon Location Service product page
--   
--   This can only be updated when updating the <tt>PricingPlan</tt> in the
--   same request.
--   
--   Amazon Location Service uses <tt>PricingPlanDataSource</tt> to
--   calculate billing for your tracker resource. Your data won't be shared
--   with the data provider, and will remain in your AWS account and Region
--   unless you move it.
--   
--   <a>$sel:description:UpdateTracker'</a>,
--   <a>updateTracker_description</a> - Updates the description for the
--   tracker resource.
--   
--   <a>$sel:positionFiltering:UpdateTracker'</a>,
--   <a>updateTracker_positionFiltering</a> - Updates the position
--   filtering for the tracker resource.
--   
--   Valid values:
--   
--   <ul>
--   <li><tt>TimeBased</tt> - Location updates are evaluated against linked
--   geofence collections, but not every location update is stored. If your
--   update frequency is more often than 30 seconds, only one update per 30
--   seconds is stored for each unique device ID.</li>
--   <li><tt>DistanceBased</tt> - If the device has moved less than 30 m
--   (98.4 ft), location updates are ignored. Location updates within this
--   distance are neither evaluated against linked geofence collections,
--   nor stored. This helps control costs by reducing the number of
--   geofence evaluations and device positions to retrieve. Distance-based
--   filtering can also reduce the jitter effect when displaying device
--   trajectory on a map.</li>
--   </ul>
--   
--   <a>$sel:trackerName:UpdateTracker'</a>,
--   <a>updateTracker_trackerName</a> - The name of the tracker resource to
--   update.
newUpdateTracker :: Text -> UpdateTracker

-- | Updates the pricing plan for the tracker resource.
--   
--   For more information about each pricing plan option restrictions, see
--   <a>Amazon Location Service pricing</a>.
updateTracker_pricingPlan :: Lens' UpdateTracker (Maybe PricingPlan)

-- | Updates the data provider for the tracker resource.
--   
--   A required value for the following pricing plans:
--   <tt>MobileAssetTracking</tt>| <tt>MobileAssetManagement</tt>
--   
--   For more information about <a>data providers</a> and <a>pricing
--   plans</a>, see the Amazon Location Service product page
--   
--   This can only be updated when updating the <tt>PricingPlan</tt> in the
--   same request.
--   
--   Amazon Location Service uses <tt>PricingPlanDataSource</tt> to
--   calculate billing for your tracker resource. Your data won't be shared
--   with the data provider, and will remain in your AWS account and Region
--   unless you move it.
updateTracker_pricingPlanDataSource :: Lens' UpdateTracker (Maybe Text)

-- | Updates the description for the tracker resource.
updateTracker_description :: Lens' UpdateTracker (Maybe Text)

-- | Updates the position filtering for the tracker resource.
--   
--   Valid values:
--   
--   <ul>
--   <li><tt>TimeBased</tt> - Location updates are evaluated against linked
--   geofence collections, but not every location update is stored. If your
--   update frequency is more often than 30 seconds, only one update per 30
--   seconds is stored for each unique device ID.</li>
--   <li><tt>DistanceBased</tt> - If the device has moved less than 30 m
--   (98.4 ft), location updates are ignored. Location updates within this
--   distance are neither evaluated against linked geofence collections,
--   nor stored. This helps control costs by reducing the number of
--   geofence evaluations and device positions to retrieve. Distance-based
--   filtering can also reduce the jitter effect when displaying device
--   trajectory on a map.</li>
--   </ul>
updateTracker_positionFiltering :: Lens' UpdateTracker (Maybe PositionFiltering)

-- | The name of the tracker resource to update.
updateTracker_trackerName :: Lens' UpdateTracker Text

-- | <i>See:</i> <a>newUpdateTrackerResponse</a> smart constructor.
data UpdateTrackerResponse
UpdateTrackerResponse' :: Int -> Text -> Text -> POSIX -> UpdateTrackerResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateTrackerResponse'] :: UpdateTrackerResponse -> Int

-- | The Amazon Resource Name (ARN) of the updated tracker resource. Used
--   to specify a resource across AWS.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:tracker/ExampleTracker</tt></li>
--   </ul>
[$sel:trackerArn:UpdateTrackerResponse'] :: UpdateTrackerResponse -> Text

-- | The name of the updated tracker resource.
[$sel:trackerName:UpdateTrackerResponse'] :: UpdateTrackerResponse -> Text

-- | The timestamp for when the tracker resource was last updated in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
[$sel:updateTime:UpdateTrackerResponse'] :: UpdateTrackerResponse -> POSIX

-- | Create a value of <a>UpdateTrackerResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateTrackerResponse'</a>,
--   <a>updateTrackerResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:trackerArn:UpdateTrackerResponse'</a>,
--   <a>updateTrackerResponse_trackerArn</a> - The Amazon Resource Name
--   (ARN) of the updated tracker resource. Used to specify a resource
--   across AWS.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:tracker/ExampleTracker</tt></li>
--   </ul>
--   
--   <a>$sel:trackerName:UpdateTracker'</a>,
--   <a>updateTrackerResponse_trackerName</a> - The name of the updated
--   tracker resource.
--   
--   <a>$sel:updateTime:UpdateTrackerResponse'</a>,
--   <a>updateTrackerResponse_updateTime</a> - The timestamp for when the
--   tracker resource was last updated in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
newUpdateTrackerResponse :: Int -> Text -> Text -> UTCTime -> UpdateTrackerResponse

-- | The response's http status code.
updateTrackerResponse_httpStatus :: Lens' UpdateTrackerResponse Int

-- | The Amazon Resource Name (ARN) of the updated tracker resource. Used
--   to specify a resource across AWS.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:tracker/ExampleTracker</tt></li>
--   </ul>
updateTrackerResponse_trackerArn :: Lens' UpdateTrackerResponse Text

-- | The name of the updated tracker resource.
updateTrackerResponse_trackerName :: Lens' UpdateTrackerResponse Text

-- | The timestamp for when the tracker resource was last updated in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
updateTrackerResponse_updateTime :: Lens' UpdateTrackerResponse UTCTime
instance GHC.Generics.Generic Amazonka.Location.UpdateTracker.UpdateTracker
instance GHC.Show.Show Amazonka.Location.UpdateTracker.UpdateTracker
instance GHC.Read.Read Amazonka.Location.UpdateTracker.UpdateTracker
instance GHC.Classes.Eq Amazonka.Location.UpdateTracker.UpdateTracker
instance GHC.Generics.Generic Amazonka.Location.UpdateTracker.UpdateTrackerResponse
instance GHC.Show.Show Amazonka.Location.UpdateTracker.UpdateTrackerResponse
instance GHC.Read.Read Amazonka.Location.UpdateTracker.UpdateTrackerResponse
instance GHC.Classes.Eq Amazonka.Location.UpdateTracker.UpdateTrackerResponse
instance Amazonka.Types.AWSRequest Amazonka.Location.UpdateTracker.UpdateTracker
instance Control.DeepSeq.NFData Amazonka.Location.UpdateTracker.UpdateTrackerResponse
instance Data.Hashable.Class.Hashable Amazonka.Location.UpdateTracker.UpdateTracker
instance Control.DeepSeq.NFData Amazonka.Location.UpdateTracker.UpdateTracker
instance Amazonka.Data.Headers.ToHeaders Amazonka.Location.UpdateTracker.UpdateTracker
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Location.UpdateTracker.UpdateTracker
instance Amazonka.Data.Path.ToPath Amazonka.Location.UpdateTracker.UpdateTracker
instance Amazonka.Data.Query.ToQuery Amazonka.Location.UpdateTracker.UpdateTracker


module Amazonka.Location.Lens

-- | The name of the tracker resource to update.
batchUpdateDevicePosition_trackerName :: Lens' BatchUpdateDevicePosition Text

-- | Contains the position update details for each device.
batchUpdateDevicePosition_updates :: Lens' BatchUpdateDevicePosition (NonEmpty DevicePositionUpdate)

-- | The response's http status code.
batchUpdateDevicePositionResponse_httpStatus :: Lens' BatchUpdateDevicePositionResponse Int

-- | Contains error details for each device that failed to update its
--   position.
batchUpdateDevicePositionResponse_errors :: Lens' BatchUpdateDevicePositionResponse [BatchUpdateDevicePositionError]

-- | The name of the route calculator resource to be deleted.
deleteRouteCalculator_calculatorName :: Lens' DeleteRouteCalculator Text

-- | The response's http status code.
deleteRouteCalculatorResponse_httpStatus :: Lens' DeleteRouteCalculatorResponse Int

-- | Updates the pricing plan for the route calculator resource.
--   
--   For more information about each pricing plan option restrictions, see
--   <a>Amazon Location Service pricing</a>.
updateRouteCalculator_pricingPlan :: Lens' UpdateRouteCalculator (Maybe PricingPlan)

-- | Updates the description for the route calculator resource.
updateRouteCalculator_description :: Lens' UpdateRouteCalculator (Maybe Text)

-- | The name of the route calculator resource to update.
updateRouteCalculator_calculatorName :: Lens' UpdateRouteCalculator Text

-- | The response's http status code.
updateRouteCalculatorResponse_httpStatus :: Lens' UpdateRouteCalculatorResponse Int

-- | The Amazon Resource Name (ARN) of the updated route calculator
--   resource. Used to specify a resource across AWS.
--   
--   <ul>
--   <li>Format example: <tt>arn:aws:geo:region:account-id:route-
--   calculator/ExampleCalculator</tt></li>
--   </ul>
updateRouteCalculatorResponse_calculatorArn :: Lens' UpdateRouteCalculatorResponse Text

-- | The name of the updated route calculator resource.
updateRouteCalculatorResponse_calculatorName :: Lens' UpdateRouteCalculatorResponse Text

-- | The timestamp for when the route calculator was last updated in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
updateRouteCalculatorResponse_updateTime :: Lens' UpdateRouteCalculatorResponse UTCTime

-- | Specifies the data provider for the geofence collection.
--   
--   <ul>
--   <li>Required value for the following pricing plans:
--   <tt>MobileAssetTracking </tt>| <tt>MobileAssetManagement</tt></li>
--   </ul>
--   
--   For more information about <a>Data Providers</a>, and <a>Pricing
--   plans</a>, see the Amazon Location Service product page.
--   
--   Amazon Location Service only uses <tt>PricingPlanDataSource</tt> to
--   calculate billing for your geofence collection. Your data won't be
--   shared with the data provider, and will remain in your AWS account or
--   Region unless you move it.
--   
--   Valid Values: <tt>Esri </tt>| <tt>Here</tt>
createGeofenceCollection_pricingPlanDataSource :: Lens' CreateGeofenceCollection (Maybe Text)

-- | A key identifier for an <a>AWS KMS customer managed key</a>. Enter a
--   key ID, key ARN, alias name, or alias ARN.
createGeofenceCollection_kmsKeyId :: Lens' CreateGeofenceCollection (Maybe Text)

-- | An optional description for the geofence collection.
createGeofenceCollection_description :: Lens' CreateGeofenceCollection (Maybe Text)

-- | Applies one or more tags to the geofence collection. A tag is a
--   key-value pair helps manage, identify, search, and filter your
--   resources by labelling them.
--   
--   Format: <tt>"key" : "value"</tt>
--   
--   Restrictions:
--   
--   <ul>
--   <li>Maximum 50 tags per resource</li>
--   <li>Each resource tag must be unique with a maximum of one value.</li>
--   <li>Maximum key length: 128 Unicode characters in UTF-8</li>
--   <li>Maximum value length: 256 Unicode characters in UTF-8</li>
--   <li>Can use alphanumeric characters (A–Z, a–z, 0–9), and the following
--   characters: + - = . _ : / @.</li>
--   </ul>
createGeofenceCollection_tags :: Lens' CreateGeofenceCollection (Maybe (HashMap Text Text))

-- | A custom name for the geofence collection.
--   
--   Requirements:
--   
--   <ul>
--   <li>Contain only alphanumeric characters (A–Z, a–z, 0–9), hyphens (-),
--   periods (.), and underscores (_).</li>
--   <li>Must be a unique geofence collection name.</li>
--   <li>No spaces allowed. For example,
--   <tt>ExampleGeofenceCollection</tt>.</li>
--   </ul>
createGeofenceCollection_collectionName :: Lens' CreateGeofenceCollection Text

-- | Specifies the pricing plan for the geofence collection.
--   
--   For additional details and restrictions on each pricing plan option,
--   see the <a>Amazon Location Service pricing page</a>.
createGeofenceCollection_pricingPlan :: Lens' CreateGeofenceCollection PricingPlan

-- | The response's http status code.
createGeofenceCollectionResponse_httpStatus :: Lens' CreateGeofenceCollectionResponse Int

-- | The Amazon Resource Name (ARN) for the geofence collection resource.
--   Used when you need to specify a resource across all AWS.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:geofence-collection/ExampleGeofenceCollection</tt></li>
--   </ul>
createGeofenceCollectionResponse_collectionArn :: Lens' CreateGeofenceCollectionResponse Text

-- | The name for the geofence collection.
createGeofenceCollectionResponse_collectionName :: Lens' CreateGeofenceCollectionResponse Text

-- | The timestamp for when the geofence collection was created in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
createGeofenceCollectionResponse_createTime :: Lens' CreateGeofenceCollectionResponse UTCTime

-- | The pagination token specifying which page of results to return in the
--   response. If no token is provided, the default page is the first page.
--   
--   Default Value: <tt>null</tt>
listRouteCalculators_nextToken :: Lens' ListRouteCalculators (Maybe Text)

-- | An optional maximum number of results returned in a single call.
--   
--   Default Value: <tt>100</tt>
listRouteCalculators_maxResults :: Lens' ListRouteCalculators (Maybe Natural)

-- | A pagination token indicating there are additional pages available.
--   You can use the token in a subsequent request to fetch the next set of
--   results.
listRouteCalculatorsResponse_nextToken :: Lens' ListRouteCalculatorsResponse (Maybe Text)

-- | The response's http status code.
listRouteCalculatorsResponse_httpStatus :: Lens' ListRouteCalculatorsResponse Int

-- | Lists the route calculator resources that exist in your AWS account
listRouteCalculatorsResponse_entries :: Lens' ListRouteCalculatorsResponse [ListRouteCalculatorsResponseEntry]

-- | Specifies the data provider for the tracker resource.
--   
--   <ul>
--   <li>Required value for the following pricing plans:
--   <tt>MobileAssetTracking </tt>| <tt>MobileAssetManagement</tt></li>
--   </ul>
--   
--   For more information about <a>Data Providers</a>, and <a>Pricing
--   plans</a>, see the Amazon Location Service product page.
--   
--   Amazon Location Service only uses <tt>PricingPlanDataSource</tt> to
--   calculate billing for your tracker resource. Your data will not be
--   shared with the data provider, and will remain in your AWS account or
--   Region unless you move it.
--   
--   Valid values: <tt>Esri</tt> | <tt>Here</tt>
createTracker_pricingPlanDataSource :: Lens' CreateTracker (Maybe Text)

-- | A key identifier for an <a>AWS KMS customer managed key</a>. Enter a
--   key ID, key ARN, alias name, or alias ARN.
createTracker_kmsKeyId :: Lens' CreateTracker (Maybe Text)

-- | An optional description for the tracker resource.
createTracker_description :: Lens' CreateTracker (Maybe Text)

-- | Applies one or more tags to the tracker resource. A tag is a key-value
--   pair helps manage, identify, search, and filter your resources by
--   labelling them.
--   
--   Format: <tt>"key" : "value"</tt>
--   
--   Restrictions:
--   
--   <ul>
--   <li>Maximum 50 tags per resource</li>
--   <li>Each resource tag must be unique with a maximum of one value.</li>
--   <li>Maximum key length: 128 Unicode characters in UTF-8</li>
--   <li>Maximum value length: 256 Unicode characters in UTF-8</li>
--   <li>Can use alphanumeric characters (A–Z, a–z, 0–9), and the following
--   characters: + - = . _ : / @.</li>
--   </ul>
createTracker_tags :: Lens' CreateTracker (Maybe (HashMap Text Text))

-- | Specifies the position filtering for the tracker resource.
--   
--   Valid values:
--   
--   <ul>
--   <li><tt>TimeBased</tt> - Location updates are evaluated against linked
--   geofence collections, but not every location update is stored. If your
--   update frequency is more often than 30 seconds, only one update per 30
--   seconds is stored for each unique device ID.</li>
--   <li><tt>DistanceBased</tt> - If the device has moved less than 30 m
--   (98.4 ft), location updates are ignored. Location updates within this
--   distance are neither evaluated against linked geofence collections,
--   nor stored. This helps control costs by reducing the number of
--   geofence evaluations and device positions to retrieve. Distance-based
--   filtering can also reduce the jitter effect when displaying device
--   trajectory on a map.</li>
--   </ul>
--   
--   This field is optional. If not specified, the default value is
--   <tt>TimeBased</tt>.
createTracker_positionFiltering :: Lens' CreateTracker (Maybe PositionFiltering)

-- | Specifies the pricing plan for the tracker resource.
--   
--   For additional details and restrictions on each pricing plan option,
--   see <a>Amazon Location Service pricing</a>.
createTracker_pricingPlan :: Lens' CreateTracker PricingPlan

-- | The name for the tracker resource.
--   
--   Requirements:
--   
--   <ul>
--   <li>Contain only alphanumeric characters (A-Z, a-z, 0-9) , hyphens
--   (-), periods (.), and underscores (_).</li>
--   <li>Must be a unique tracker resource name.</li>
--   <li>No spaces allowed. For example, <tt>ExampleTracker</tt>.</li>
--   </ul>
createTracker_trackerName :: Lens' CreateTracker Text

-- | The response's http status code.
createTrackerResponse_httpStatus :: Lens' CreateTrackerResponse Int

-- | The timestamp for when the tracker resource was created in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
createTrackerResponse_createTime :: Lens' CreateTrackerResponse UTCTime

-- | The Amazon Resource Name (ARN) for the tracker resource. Used when you
--   need to specify a resource across all AWS.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:tracker/ExampleTracker</tt></li>
--   </ul>
createTrackerResponse_trackerArn :: Lens' CreateTrackerResponse Text

-- | The name of the tracker resource.
createTrackerResponse_trackerName :: Lens' CreateTrackerResponse Text

-- | The pagination token specifying which page of results to return in the
--   response. If no token is provided, the default page is the first page.
--   
--   Default value: <tt>null</tt>
listTrackerConsumers_nextToken :: Lens' ListTrackerConsumers (Maybe Text)

-- | An optional limit for the number of resources returned in a single
--   call.
--   
--   Default value: <tt>100</tt>
listTrackerConsumers_maxResults :: Lens' ListTrackerConsumers (Maybe Natural)

-- | The tracker resource whose associated geofence collections you want to
--   list.
listTrackerConsumers_trackerName :: Lens' ListTrackerConsumers Text

-- | A pagination token indicating there are additional pages available.
--   You can use the token in a following request to fetch the next set of
--   results.
listTrackerConsumersResponse_nextToken :: Lens' ListTrackerConsumersResponse (Maybe Text)

-- | The response's http status code.
listTrackerConsumersResponse_httpStatus :: Lens' ListTrackerConsumersResponse Int

-- | Contains the list of geofence collection ARNs associated to the
--   tracker resource.
listTrackerConsumersResponse_consumerArns :: Lens' ListTrackerConsumersResponse [Text]

-- | The device whose position you want to retrieve.
getDevicePosition_deviceId :: Lens' GetDevicePosition Text

-- | The tracker resource receiving the position update.
getDevicePosition_trackerName :: Lens' GetDevicePosition Text

-- | The device whose position you retrieved.
getDevicePositionResponse_deviceId :: Lens' GetDevicePositionResponse (Maybe Text)

-- | The response's http status code.
getDevicePositionResponse_httpStatus :: Lens' GetDevicePositionResponse Int

-- | The last known device position.
getDevicePositionResponse_position :: Lens' GetDevicePositionResponse (NonEmpty Double)

-- | The timestamp for when the tracker resource received the device
--   position in <a>ISO 8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
getDevicePositionResponse_receivedTime :: Lens' GetDevicePositionResponse UTCTime

-- | The timestamp at which the device's position was determined. Uses
--   <a>ISO 8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
getDevicePositionResponse_sampleTime :: Lens' GetDevicePositionResponse UTCTime

-- | The Amazon Resource Name (ARN) of the resource whose tags you want to
--   retrieve.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:resourcetype/ExampleResource</tt></li>
--   </ul>
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | Tags that have been applied to the specified resource. Tags are mapped
--   from the tag key to the tag value: <tt>"TagKey" : "TagValue"</tt>.
--   
--   <ul>
--   <li>Format example: <tt>{"tag1" : "value1", "tag2" : "value2"}
--   </tt></li>
--   </ul>
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int

-- | Filters the results by returning only Places within the provided
--   bounding box. An optional parameter.
--   
--   The first 2 <tt>bbox</tt> parameters describe the lower southwest
--   corner:
--   
--   <ul>
--   <li>The first <tt>bbox</tt> position is the X coordinate or longitude
--   of the lower southwest corner.</li>
--   <li>The second <tt>bbox</tt> position is the Y coordinate or latitude
--   of the lower southwest corner.</li>
--   </ul>
--   
--   For example, <tt>bbox=xLongitudeSW&amp;bbox=yLatitudeSW</tt>.
--   
--   The next <tt>bbox</tt> parameters describe the upper northeast corner:
--   
--   <ul>
--   <li>The third <tt>bbox</tt> position is the X coordinate, or longitude
--   of the upper northeast corner.</li>
--   <li>The fourth <tt>bbox</tt> position is the Y coordinate, or
--   longitude of the upper northeast corner.</li>
--   </ul>
--   
--   For example, <tt>bbox=xLongitudeNE&amp;bbox=yLatitudeNE</tt>
searchPlaceIndexForText_filterBBox :: Lens' SearchPlaceIndexForText (Maybe (NonEmpty Double))

-- | Searches for results closest to the given position. An optional
--   parameter defined by longitude, and latitude.
--   
--   <ul>
--   <li>The first <tt>bias</tt> position is the X coordinate, or
--   longitude.</li>
--   <li>The second <tt>bias</tt> position is the Y coordinate, or
--   latitude.</li>
--   </ul>
--   
--   For example, <tt>bias=xLongitude&amp;bias=yLatitude</tt>.
searchPlaceIndexForText_biasPosition :: Lens' SearchPlaceIndexForText (Maybe (NonEmpty Double))

-- | Limits the search to the given a list of countries/regions. An
--   optional parameter.
--   
--   <ul>
--   <li>Use the <a>ISO 3166</a> 3-digit country code. For example,
--   Australia uses three upper-case characters: <tt>AUS</tt>.</li>
--   </ul>
searchPlaceIndexForText_filterCountries :: Lens' SearchPlaceIndexForText (Maybe (NonEmpty Text))

-- | An optional parameter. The maximum number of results returned per
--   request.
--   
--   The default: <tt>50</tt>
searchPlaceIndexForText_maxResults :: Lens' SearchPlaceIndexForText (Maybe Natural)

-- | The name of the place index resource you want to use for the search.
searchPlaceIndexForText_indexName :: Lens' SearchPlaceIndexForText Text

-- | The address, name, city, or region to be used in the search. In
--   free-form text format. For example, <tt>123 Any Street</tt>.
searchPlaceIndexForText_text :: Lens' SearchPlaceIndexForText Text

-- | The response's http status code.
searchPlaceIndexForTextResponse_httpStatus :: Lens' SearchPlaceIndexForTextResponse Int

-- | A list of Places closest to the specified position. Each result
--   contains additional information about the specific point of interest.
searchPlaceIndexForTextResponse_results :: Lens' SearchPlaceIndexForTextResponse [SearchForTextResult]

-- | Contains a summary of the request. Contains the <tt>BiasPosition</tt>,
--   <tt>DataSource</tt>, <tt>FilterBBox</tt>, <tt>FilterCountries</tt>,
--   <tt>MaxResults</tt>, <tt>ResultBBox</tt>, and <tt>Text</tt>.
searchPlaceIndexForTextResponse_summary :: Lens' SearchPlaceIndexForTextResponse SearchPlaceIndexForTextSummary

-- | The name of the geofence collection.
describeGeofenceCollection_collectionName :: Lens' DescribeGeofenceCollection Text

-- | The specified data provider for the geofence collection.
describeGeofenceCollectionResponse_pricingPlanDataSource :: Lens' DescribeGeofenceCollectionResponse (Maybe Text)

-- | A key identifier for an <a>AWS KMS customer managed key</a> assigned
--   to the Amazon Location resource
describeGeofenceCollectionResponse_kmsKeyId :: Lens' DescribeGeofenceCollectionResponse (Maybe Text)

-- | Displays the key, value pairs of tags associated with this resource.
describeGeofenceCollectionResponse_tags :: Lens' DescribeGeofenceCollectionResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
describeGeofenceCollectionResponse_httpStatus :: Lens' DescribeGeofenceCollectionResponse Int

-- | The Amazon Resource Name (ARN) for the geofence collection resource.
--   Used when you need to specify a resource across all AWS.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:geofence-collection/ExampleGeofenceCollection</tt></li>
--   </ul>
describeGeofenceCollectionResponse_collectionArn :: Lens' DescribeGeofenceCollectionResponse Text

-- | The name of the geofence collection.
describeGeofenceCollectionResponse_collectionName :: Lens' DescribeGeofenceCollectionResponse Text

-- | The timestamp for when the geofence resource was created in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
describeGeofenceCollectionResponse_createTime :: Lens' DescribeGeofenceCollectionResponse UTCTime

-- | The optional description for the geofence collection.
describeGeofenceCollectionResponse_description :: Lens' DescribeGeofenceCollectionResponse Text

-- | The pricing plan selected for the specified geofence collection.
--   
--   For additional details and restrictions on each pricing plan option,
--   see the <a>Amazon Location Service pricing page</a>.
describeGeofenceCollectionResponse_pricingPlan :: Lens' DescribeGeofenceCollectionResponse PricingPlan

-- | The timestamp for when the geofence collection was last updated in
--   <a>ISO 8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
describeGeofenceCollectionResponse_updateTime :: Lens' DescribeGeofenceCollectionResponse UTCTime

-- | The pagination token specifying which page of results to return in the
--   response. If no token is provided, the default page is the first page.
--   
--   Default value: <tt>null</tt>
listMaps_nextToken :: Lens' ListMaps (Maybe Text)

-- | An optional limit for the number of resources returned in a single
--   call.
--   
--   Default value: <tt>100</tt>
listMaps_maxResults :: Lens' ListMaps (Maybe Natural)

-- | A pagination token indicating there are additional pages available.
--   You can use the token in a following request to fetch the next set of
--   results.
listMapsResponse_nextToken :: Lens' ListMapsResponse (Maybe Text)

-- | The response's http status code.
listMapsResponse_httpStatus :: Lens' ListMapsResponse Int

-- | Contains a list of maps in your AWS account
listMapsResponse_entries :: Lens' ListMapsResponse [ListMapsResponseEntry]

-- | The name of the sprite ﬁle. Use the following ﬁle names for the sprite
--   sheet:
--   
--   <ul>
--   <li><pre>sprites.png</pre></li>
--   <li><tt>sprites@2x.png</tt> for high pixel density displays</li>
--   </ul>
--   
--   For the JSON document contain image offsets. Use the following ﬁle
--   names:
--   
--   <ul>
--   <li><pre>sprites.json</pre></li>
--   <li><tt>sprites@2x.json</tt> for high pixel density displays</li>
--   </ul>
getMapSprites_fileName :: Lens' GetMapSprites Text

-- | The map resource associated with the sprite ﬁle.
getMapSprites_mapName :: Lens' GetMapSprites Text

-- | Contains the body of the sprite sheet or JSON offset ﬁle.
getMapSpritesResponse_blob :: Lens' GetMapSpritesResponse (Maybe ByteString)

-- | The content type of the sprite sheet and offsets. For example, the
--   sprite sheet content type is <tt>image/png</tt>, and the sprite offset
--   JSON document is <tt>application/json</tt>.
getMapSpritesResponse_contentType :: Lens' GetMapSpritesResponse (Maybe Text)

-- | The response's http status code.
getMapSpritesResponse_httpStatus :: Lens' GetMapSpritesResponse Int

-- | An optional description for the map resource.
createMap_description :: Lens' CreateMap (Maybe Text)

-- | Applies one or more tags to the map resource. A tag is a key-value
--   pair helps manage, identify, search, and filter your resources by
--   labelling them.
--   
--   Format: <tt>"key" : "value"</tt>
--   
--   Restrictions:
--   
--   <ul>
--   <li>Maximum 50 tags per resource</li>
--   <li>Each resource tag must be unique with a maximum of one value.</li>
--   <li>Maximum key length: 128 Unicode characters in UTF-8</li>
--   <li>Maximum value length: 256 Unicode characters in UTF-8</li>
--   <li>Can use alphanumeric characters (A–Z, a–z, 0–9), and the following
--   characters: + - = . _ : / @.</li>
--   </ul>
createMap_tags :: Lens' CreateMap (Maybe (HashMap Text Text))

-- | Specifies the map style selected from an available data provider.
createMap_configuration :: Lens' CreateMap MapConfiguration

-- | The name for the map resource.
--   
--   Requirements:
--   
--   <ul>
--   <li>Must contain only alphanumeric characters (A–Z, a–z, 0–9), hyphens
--   (-), periods (.), and underscores (_).</li>
--   <li>Must be a unique map resource name.</li>
--   <li>No spaces allowed. For example, <tt>ExampleMap</tt>.</li>
--   </ul>
createMap_mapName :: Lens' CreateMap Text

-- | Specifies the pricing plan for your map resource.
--   
--   For additional details and restrictions on each pricing plan option,
--   see <a>Amazon Location Service pricing</a>.
createMap_pricingPlan :: Lens' CreateMap PricingPlan

-- | The response's http status code.
createMapResponse_httpStatus :: Lens' CreateMapResponse Int

-- | The timestamp for when the map resource was created in <a>ISO 8601</a>
--   format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
createMapResponse_createTime :: Lens' CreateMapResponse UTCTime

-- | The Amazon Resource Name (ARN) for the map resource. Used to specify a
--   resource across all AWS.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:maps/ExampleMap</tt></li>
--   </ul>
createMapResponse_mapArn :: Lens' CreateMapResponse Text

-- | The name of the map resource.
createMapResponse_mapName :: Lens' CreateMapResponse Text

-- | The name of the route calculator resource.
describeRouteCalculator_calculatorName :: Lens' DescribeRouteCalculator Text

-- | Tags associated with route calculator resource.
describeRouteCalculatorResponse_tags :: Lens' DescribeRouteCalculatorResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
describeRouteCalculatorResponse_httpStatus :: Lens' DescribeRouteCalculatorResponse Int

-- | The Amazon Resource Name (ARN) for the Route calculator resource. Use
--   the ARN when you specify a resource across AWS.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:route-calculator/ExampleCalculator</tt></li>
--   </ul>
describeRouteCalculatorResponse_calculatorArn :: Lens' DescribeRouteCalculatorResponse Text

-- | The name of the route calculator resource being described.
describeRouteCalculatorResponse_calculatorName :: Lens' DescribeRouteCalculatorResponse Text

-- | The timestamp when the route calculator resource was created in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
--   
--   <ul>
--   <li>For example, <tt>2020–07-2T12:15:20.000Z+01:00</tt></li>
--   </ul>
describeRouteCalculatorResponse_createTime :: Lens' DescribeRouteCalculatorResponse UTCTime

-- | The data provider of traffic and road network data. Indicates one of
--   the available providers:
--   
--   <ul>
--   <li><pre>Esri</pre></li>
--   <li><pre>Here</pre></li>
--   </ul>
--   
--   For more information about data providers, see <a>Amazon Location
--   Service data providers</a>.
describeRouteCalculatorResponse_dataSource :: Lens' DescribeRouteCalculatorResponse Text

-- | The optional description of the route calculator resource.
describeRouteCalculatorResponse_description :: Lens' DescribeRouteCalculatorResponse Text

-- | The pricing plan selected for the specified route calculator resource.
--   
--   For additional details and restrictions on each pricing plan option,
--   see <a>Amazon Location Service pricing</a>.
describeRouteCalculatorResponse_pricingPlan :: Lens' DescribeRouteCalculatorResponse PricingPlan

-- | The timestamp when the route calculator resource was last updated in
--   <a>ISO 8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
--   
--   <ul>
--   <li>For example, <tt>2020–07-2T12:15:20.000Z+01:00</tt></li>
--   </ul>
describeRouteCalculatorResponse_updateTime :: Lens' DescribeRouteCalculatorResponse UTCTime

-- | Devices whose position you want to retrieve.
--   
--   <ul>
--   <li>For example, for two devices:
--   <tt>device-ids=DeviceId1&amp;device-ids=DeviceId2</tt></li>
--   </ul>
batchGetDevicePosition_deviceIds :: Lens' BatchGetDevicePosition (NonEmpty Text)

-- | The tracker resource retrieving the device position.
batchGetDevicePosition_trackerName :: Lens' BatchGetDevicePosition Text

-- | The response's http status code.
batchGetDevicePositionResponse_httpStatus :: Lens' BatchGetDevicePositionResponse Int

-- | Contains device position details such as the device ID, position, and
--   timestamps for when the position was received and sampled.
batchGetDevicePositionResponse_devicePositions :: Lens' BatchGetDevicePositionResponse [DevicePosition]

-- | Contains error details for each device that failed to send its
--   position to the tracker resource.
batchGetDevicePositionResponse_errors :: Lens' BatchGetDevicePositionResponse [BatchGetDevicePositionError]

-- | The map resource to retrieve the style descriptor from.
getMapStyleDescriptor_mapName :: Lens' GetMapStyleDescriptor Text

-- | Contains the body of the style descriptor.
getMapStyleDescriptorResponse_blob :: Lens' GetMapStyleDescriptorResponse (Maybe ByteString)

-- | The style descriptor's content type. For example,
--   <tt>application/json</tt>.
getMapStyleDescriptorResponse_contentType :: Lens' GetMapStyleDescriptorResponse (Maybe Text)

-- | The response's http status code.
getMapStyleDescriptorResponse_httpStatus :: Lens' GetMapStyleDescriptorResponse Int

-- | The map resource to retrieve the map tiles from.
getMapTile_mapName :: Lens' GetMapTile Text

-- | The X axis value for the map tile.
getMapTile_x :: Lens' GetMapTile Text

-- | The Y axis value for the map tile.
getMapTile_y :: Lens' GetMapTile Text

-- | The zoom value for the map tile.
getMapTile_z :: Lens' GetMapTile Text

-- | Contains Mapbox Vector Tile (MVT) data.
getMapTileResponse_blob :: Lens' GetMapTileResponse (Maybe ByteString)

-- | The map tile's content type. For example,
--   <tt>application/vnd.mapbox-vector-tile</tt>.
getMapTileResponse_contentType :: Lens' GetMapTileResponse (Maybe Text)

-- | The response's http status code.
getMapTileResponse_httpStatus :: Lens' GetMapTileResponse Int

-- | The pagination token specifying which page of results to return in the
--   response. If no token is provided, the default page is the first page.
--   
--   Default value: <tt>null</tt>
listGeofenceCollections_nextToken :: Lens' ListGeofenceCollections (Maybe Text)

-- | An optional limit for the number of resources returned in a single
--   call.
--   
--   Default value: <tt>100</tt>
listGeofenceCollections_maxResults :: Lens' ListGeofenceCollections (Maybe Natural)

-- | A pagination token indicating there are additional pages available.
--   You can use the token in a following request to fetch the next set of
--   results.
listGeofenceCollectionsResponse_nextToken :: Lens' ListGeofenceCollectionsResponse (Maybe Text)

-- | The response's http status code.
listGeofenceCollectionsResponse_httpStatus :: Lens' ListGeofenceCollectionsResponse Int

-- | Lists the geofence collections that exist in your AWS account.
listGeofenceCollectionsResponse_entries :: Lens' ListGeofenceCollectionsResponse [ListGeofenceCollectionsResponseEntry]

-- | The name of the geofence collection to be deleted.
deleteGeofenceCollection_collectionName :: Lens' DeleteGeofenceCollection Text

-- | The response's http status code.
deleteGeofenceCollectionResponse_httpStatus :: Lens' DeleteGeofenceCollectionResponse Int

-- | Updates the pricing plan for the geofence collection.
--   
--   For more information about each pricing plan option restrictions, see
--   <a>Amazon Location Service pricing</a>.
updateGeofenceCollection_pricingPlan :: Lens' UpdateGeofenceCollection (Maybe PricingPlan)

-- | Updates the data provider for the geofence collection.
--   
--   A required value for the following pricing plans:
--   <tt>MobileAssetTracking</tt>| <tt>MobileAssetManagement</tt>
--   
--   For more information about <a>data providers</a> and <a>pricing
--   plans</a>, see the Amazon Location Service product page.
--   
--   This can only be updated when updating the <tt>PricingPlan</tt> in the
--   same request.
--   
--   Amazon Location Service uses <tt>PricingPlanDataSource</tt> to
--   calculate billing for your geofence collection. Your data won't be
--   shared with the data provider, and will remain in your AWS account and
--   Region unless you move it.
updateGeofenceCollection_pricingPlanDataSource :: Lens' UpdateGeofenceCollection (Maybe Text)

-- | Updates the description for the geofence collection.
updateGeofenceCollection_description :: Lens' UpdateGeofenceCollection (Maybe Text)

-- | The name of the geofence collection to update.
updateGeofenceCollection_collectionName :: Lens' UpdateGeofenceCollection Text

-- | The response's http status code.
updateGeofenceCollectionResponse_httpStatus :: Lens' UpdateGeofenceCollectionResponse Int

-- | The Amazon Resource Name (ARN) of the updated geofence collection.
--   Used to specify a resource across AWS.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:geofence-collection/ExampleGeofenceCollection</tt></li>
--   </ul>
updateGeofenceCollectionResponse_collectionArn :: Lens' UpdateGeofenceCollectionResponse Text

-- | The name of the updated geofence collection.
updateGeofenceCollectionResponse_collectionName :: Lens' UpdateGeofenceCollectionResponse Text

-- | The time when the geofence collection was last updated in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
updateGeofenceCollectionResponse_updateTime :: Lens' UpdateGeofenceCollectionResponse UTCTime

-- | The pagination token specifying which page of results to return in the
--   response. If no token is provided, the default page is the first page.
--   
--   Default value: <tt>null</tt>
listTrackers_nextToken :: Lens' ListTrackers (Maybe Text)

-- | An optional limit for the number of resources returned in a single
--   call.
--   
--   Default value: <tt>100</tt>
listTrackers_maxResults :: Lens' ListTrackers (Maybe Natural)

-- | A pagination token indicating there are additional pages available.
--   You can use the token in a following request to fetch the next set of
--   results.
listTrackersResponse_nextToken :: Lens' ListTrackersResponse (Maybe Text)

-- | The response's http status code.
listTrackersResponse_httpStatus :: Lens' ListTrackersResponse Int

-- | Contains tracker resources in your AWS account. Details include
--   tracker name, description and timestamps for when the tracker was
--   created and last updated.
listTrackersResponse_entries :: Lens' ListTrackersResponse [ListTrackersResponseEntry]

-- | The name of the place index resource to be deleted.
deletePlaceIndex_indexName :: Lens' DeletePlaceIndex Text

-- | The response's http status code.
deletePlaceIndexResponse_httpStatus :: Lens' DeletePlaceIndexResponse Int

-- | Updates the pricing plan for the place index resource.
--   
--   For more information about each pricing plan option restrictions, see
--   <a>Amazon Location Service pricing</a>.
updatePlaceIndex_pricingPlan :: Lens' UpdatePlaceIndex (Maybe PricingPlan)

-- | Updates the data storage option for the place index resource.
updatePlaceIndex_dataSourceConfiguration :: Lens' UpdatePlaceIndex (Maybe DataSourceConfiguration)

-- | Updates the description for the place index resource.
updatePlaceIndex_description :: Lens' UpdatePlaceIndex (Maybe Text)

-- | The name of the place index resource to update.
updatePlaceIndex_indexName :: Lens' UpdatePlaceIndex Text

-- | The response's http status code.
updatePlaceIndexResponse_httpStatus :: Lens' UpdatePlaceIndexResponse Int

-- | The Amazon Resource Name (ARN) of the upated place index resource.
--   Used to specify a resource across AWS.
--   
--   <ul>
--   <li>Format example: <tt>arn:aws:geo:region:account-id:place-
--   index/ExamplePlaceIndex</tt></li>
--   </ul>
updatePlaceIndexResponse_indexArn :: Lens' UpdatePlaceIndexResponse Text

-- | The name of the updated place index resource.
updatePlaceIndexResponse_indexName :: Lens' UpdatePlaceIndexResponse Text

-- | The timestamp for when the place index resource was last updated in
--   <a>ISO 8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
updatePlaceIndexResponse_updateTime :: Lens' UpdatePlaceIndexResponse UTCTime

-- | The Amazon Resource Name (ARN) for the geofence collection to be
--   disassociated from the tracker resource. Used when you need to specify
--   a resource across all AWS.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:geofence-collection/ExampleGeofenceCollectionConsumer</tt></li>
--   </ul>
disassociateTrackerConsumer_consumerArn :: Lens' DisassociateTrackerConsumer Text

-- | The name of the tracker resource to be dissociated from the consumer.
disassociateTrackerConsumer_trackerName :: Lens' DisassociateTrackerConsumer Text

-- | The response's http status code.
disassociateTrackerConsumerResponse_httpStatus :: Lens' DisassociateTrackerConsumerResponse Int

-- | The geofence collection to store the geofence in.
putGeofence_collectionName :: Lens' PutGeofence Text

-- | An identifier for the geofence. For example,
--   <tt>ExampleGeofence-1</tt>.
putGeofence_geofenceId :: Lens' PutGeofence Text

-- | Contains the polygon details to specify the position of the geofence.
--   
--   Each <a>geofence polygon</a> can have a maximum of 1,000 vertices.
putGeofence_geometry :: Lens' PutGeofence GeofenceGeometry

-- | The response's http status code.
putGeofenceResponse_httpStatus :: Lens' PutGeofenceResponse Int

-- | The timestamp for when the geofence was created in <a>ISO 8601</a>
--   format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
putGeofenceResponse_createTime :: Lens' PutGeofenceResponse UTCTime

-- | The geofence identifier entered in the request.
putGeofenceResponse_geofenceId :: Lens' PutGeofenceResponse Text

-- | The timestamp for when the geofence was last updated in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
putGeofenceResponse_updateTime :: Lens' PutGeofenceResponse UTCTime

-- | The pagination token specifying which page of results to return in the
--   response. If no token is provided, the default page is the first page.
--   
--   Default value: <tt>null</tt>
listGeofences_nextToken :: Lens' ListGeofences (Maybe Text)

-- | The name of the geofence collection storing the list of geofences.
listGeofences_collectionName :: Lens' ListGeofences Text

-- | A pagination token indicating there are additional pages available.
--   You can use the token in a following request to fetch the next set of
--   results.
listGeofencesResponse_nextToken :: Lens' ListGeofencesResponse (Maybe Text)

-- | The response's http status code.
listGeofencesResponse_httpStatus :: Lens' ListGeofencesResponse Int

-- | Contains a list of geofences stored in the geofence collection.
listGeofencesResponse_entries :: Lens' ListGeofencesResponse [ListGeofenceResponseEntry]

-- | The Amazon Resource Name (ARN) for the geofence collection to be
--   associated to tracker resource. Used when you need to specify a
--   resource across all AWS.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:geofence-collection/ExampleGeofenceCollectionConsumer</tt></li>
--   </ul>
associateTrackerConsumer_consumerArn :: Lens' AssociateTrackerConsumer Text

-- | The name of the tracker resource to be associated with a geofence
--   collection.
associateTrackerConsumer_trackerName :: Lens' AssociateTrackerConsumer Text

-- | The response's http status code.
associateTrackerConsumerResponse_httpStatus :: Lens' AssociateTrackerConsumerResponse Int

-- | The geofence collection used in evaluating the position of devices
--   against its geofences.
batchEvaluateGeofences_collectionName :: Lens' BatchEvaluateGeofences Text

-- | Contains device details for each device to be evaluated against the
--   given geofence collection.
batchEvaluateGeofences_devicePositionUpdates :: Lens' BatchEvaluateGeofences (NonEmpty DevicePositionUpdate)

-- | The response's http status code.
batchEvaluateGeofencesResponse_httpStatus :: Lens' BatchEvaluateGeofencesResponse Int

-- | Contains error details for each device that failed to evaluate its
--   position against the given geofence collection.
batchEvaluateGeofencesResponse_errors :: Lens' BatchEvaluateGeofencesResponse [BatchEvaluateGeofencesError]

-- | Set the unit system to specify the distance.
--   
--   Default Value: <tt>Kilometers</tt>
calculateRoute_distanceUnit :: Lens' CalculateRoute (Maybe DistanceUnit)

-- | Specifies route preferences when traveling by <tt>Truck</tt>, such as
--   avoiding routes that use ferries or tolls, and truck specifications to
--   consider when choosing an optimal road.
--   
--   Requirements: <tt>TravelMode</tt> must be specified as <tt>Truck</tt>.
calculateRoute_truckModeOptions :: Lens' CalculateRoute (Maybe CalculateRouteTruckModeOptions)

-- | Specifies an ordered list of up to 23 intermediate positions to
--   include along a route between the departure position and destination
--   position.
--   
--   <ul>
--   <li>For example, from the <tt>DeparturePosition</tt> <tt>[-123.115,
--   49.285]</tt>, the route follows the order that the waypoint positions
--   are given <tt>[[-122.757, 49.0021],[-122.349, 47.620]]</tt></li>
--   </ul>
--   
--   If you specify a waypoint position that's not located on a road,
--   Amazon Location <a>moves the position to the nearest road</a>.
--   
--   Specifying more than 23 waypoints returns a <tt>400
--   ValidationException</tt> error.
--   
--   If Esri is the provider for your route calculator, specifying a route
--   that is longer than 400 km returns a <tt>400
--   RoutesValidationException</tt> error.
--   
--   Valid Values: <tt>[-180 to 180,-90 to 90]</tt>
calculateRoute_waypointPositions :: Lens' CalculateRoute (Maybe [NonEmpty Double])

-- | Set to include the geometry details in the result for each path
--   between a pair of positions.
--   
--   Default Value: <tt>false</tt>
--   
--   Valid Values: <tt>false</tt> | <tt>true</tt>
calculateRoute_includeLegGeometry :: Lens' CalculateRoute (Maybe Bool)

-- | Sets the time of departure as the current time. Uses the current time
--   to calculate a route. Otherwise, the best time of day to travel with
--   the best traffic conditions is used to calculate the route.
--   
--   Default Value: <tt>false</tt>
--   
--   Valid Values: <tt>false</tt> | <tt>true</tt>
calculateRoute_departNow :: Lens' CalculateRoute (Maybe Bool)

-- | Specifies the mode of transport when calculating a route. Used in
--   estimating the speed of travel and road compatibility.
--   
--   The <tt>TravelMode</tt> you specify determines how you specify route
--   preferences:
--   
--   <ul>
--   <li>If traveling by <tt>Car</tt> use the <tt>CarModeOptions</tt>
--   parameter.</li>
--   <li>If traveling by <tt>Truck</tt> use the <tt>TruckModeOptions</tt>
--   parameter.</li>
--   </ul>
--   
--   Default Value: <tt>Car</tt>
calculateRoute_travelMode :: Lens' CalculateRoute (Maybe TravelMode)

-- | Specifies route preferences when traveling by <tt>Car</tt>, such as
--   avoiding routes that use ferries or tolls.
--   
--   Requirements: <tt>TravelMode</tt> must be specified as <tt>Car</tt>.
calculateRoute_carModeOptions :: Lens' CalculateRoute (Maybe CalculateRouteCarModeOptions)

-- | Specifies the desired time of departure. Uses the given time to
--   calculate a route. Otherwise, the best time of day to travel with the
--   best traffic conditions is used to calculate the route.
--   
--   Setting a departure time in the past returns a <tt>400
--   ValidationException</tt> error.
--   
--   <ul>
--   <li>In <a>ISO 8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>. For
--   example, <tt>2020–07-2T12:15:20.000Z+01:00</tt></li>
--   </ul>
calculateRoute_departureTime :: Lens' CalculateRoute (Maybe UTCTime)

-- | The name of the route calculator resource that you want to use to
--   calculate a route.
calculateRoute_calculatorName :: Lens' CalculateRoute Text

-- | The start position for the route. Defined in <a>WGS 84</a> format:
--   <tt>[longitude, latitude]</tt>.
--   
--   <ul>
--   <li>For example, <tt>[-123.115, 49.285]</tt></li>
--   </ul>
--   
--   If you specify a departure that's not located on a road, Amazon
--   Location <a>moves the position to the nearest road</a>. If Esri is the
--   provider for your route calculator, specifying a route that is longer
--   than 400 km returns a <tt>400 RoutesValidationException</tt> error.
--   
--   Valid Values: <tt>[-180 to 180,-90 to 90]</tt>
calculateRoute_departurePosition :: Lens' CalculateRoute (NonEmpty Double)

-- | The finish position for the route. Defined in <a>WGS 84</a> format:
--   <tt>[longitude, latitude]</tt>.
--   
--   <ul>
--   <li>For example, <tt>[-122.339, 47.615]</tt></li>
--   </ul>
--   
--   If you specify a destination that's not located on a road, Amazon
--   Location <a>moves the position to the nearest road</a>.
--   
--   Valid Values: <tt>[-180 to 180,-90 to 90]</tt>
calculateRoute_destinationPosition :: Lens' CalculateRoute (NonEmpty Double)

-- | The response's http status code.
calculateRouteResponse_httpStatus :: Lens' CalculateRouteResponse Int

-- | Contains details about each path between a pair of positions included
--   along a route such as: <tt>StartPosition</tt>, <tt>EndPosition</tt>,
--   <tt>Distance</tt>, <tt>DurationSeconds</tt>, <tt>Geometry</tt>, and
--   <tt>Steps</tt>. The number of legs returned corresponds to one fewer
--   than the total number of positions in the request.
--   
--   For example, a route with a departure position and destination
--   position returns one leg with the positions <a>snapped to a nearby
--   road</a>:
--   
--   <ul>
--   <li>The <tt>StartPosition</tt> is the departure position.</li>
--   <li>The <tt>EndPosition</tt> is the destination position.</li>
--   </ul>
--   
--   A route with a waypoint between the departure and destination position
--   returns two legs with the positions snapped to a nearby road:
--   
--   <ul>
--   <li>Leg 1: The <tt>StartPosition</tt> is the departure position . The
--   <tt>EndPosition</tt> is the waypoint positon.</li>
--   <li>Leg 2: The <tt>StartPosition</tt> is the waypoint position. The
--   <tt>EndPosition</tt> is the destination position.</li>
--   </ul>
calculateRouteResponse_legs :: Lens' CalculateRouteResponse [Leg]

-- | Contains information about the whole route, such as:
--   <tt>RouteBBox</tt>, <tt>DataSource</tt>, <tt>Distance</tt>,
--   <tt>DistanceUnit</tt>, and <tt>DurationSeconds</tt>.
calculateRouteResponse_summary :: Lens' CalculateRouteResponse CalculateRouteSummary

-- | The name of the map resource to be deleted.
deleteMap_mapName :: Lens' DeleteMap Text

-- | The response's http status code.
deleteMapResponse_httpStatus :: Lens' DeleteMapResponse Int

-- | Updates the pricing plan for the map resource.
--   
--   For more information about each pricing plan option restrictions, see
--   <a>Amazon Location Service pricing</a>.
updateMap_pricingPlan :: Lens' UpdateMap (Maybe PricingPlan)

-- | Updates the description for the map resource.
updateMap_description :: Lens' UpdateMap (Maybe Text)

-- | The name of the map resource to update.
updateMap_mapName :: Lens' UpdateMap Text

-- | The response's http status code.
updateMapResponse_httpStatus :: Lens' UpdateMapResponse Int

-- | The Amazon Resource Name (ARN) of the updated map resource. Used to
--   specify a resource across AWS.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:maps/ExampleMap</tt></li>
--   </ul>
updateMapResponse_mapArn :: Lens' UpdateMapResponse Text

-- | The name of the updated map resource.
updateMapResponse_mapName :: Lens' UpdateMapResponse Text

-- | The timestamp for when the map resource was last updated in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
updateMapResponse_updateTime :: Lens' UpdateMapResponse UTCTime

-- | The pagination token specifying which page of results to return in the
--   response. If no token is provided, the default page is the first page.
--   
--   Default value: <tt>null</tt>
getDevicePositionHistory_nextToken :: Lens' GetDevicePositionHistory (Maybe Text)

-- | Specify the end time for the position history in <a>ISO 8601</a>
--   format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>. By default, the value will
--   be the time that the request is made.
--   
--   Requirement:
--   
--   <ul>
--   <li>The time specified for <tt>EndTimeExclusive</tt> must be after the
--   time for <tt>StartTimeInclusive</tt>.</li>
--   </ul>
getDevicePositionHistory_endTimeExclusive :: Lens' GetDevicePositionHistory (Maybe UTCTime)

-- | Specify the start time for the position history in <a>ISO 8601</a>
--   format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>. By default, the value will
--   be 24 hours prior to the time that the request is made.
--   
--   Requirement:
--   
--   <ul>
--   <li>The time specified for <tt>StartTimeInclusive</tt> must be before
--   <tt>EndTimeExclusive</tt>.</li>
--   </ul>
getDevicePositionHistory_startTimeInclusive :: Lens' GetDevicePositionHistory (Maybe UTCTime)

-- | The device whose position history you want to retrieve.
getDevicePositionHistory_deviceId :: Lens' GetDevicePositionHistory Text

-- | The tracker resource receiving the request for the device position
--   history.
getDevicePositionHistory_trackerName :: Lens' GetDevicePositionHistory Text

-- | A pagination token indicating there are additional pages available.
--   You can use the token in a following request to fetch the next set of
--   results.
getDevicePositionHistoryResponse_nextToken :: Lens' GetDevicePositionHistoryResponse (Maybe Text)

-- | The response's http status code.
getDevicePositionHistoryResponse_httpStatus :: Lens' GetDevicePositionHistoryResponse Int

-- | Contains the position history details for the requested device.
getDevicePositionHistoryResponse_devicePositions :: Lens' GetDevicePositionHistoryResponse [DevicePosition]

-- | The name of the tracker resource.
describeTracker_trackerName :: Lens' DescribeTracker Text

-- | The specified data provider for the tracker resource.
describeTrackerResponse_pricingPlanDataSource :: Lens' DescribeTrackerResponse (Maybe Text)

-- | A key identifier for an <a>AWS KMS customer managed key</a> assigned
--   to the Amazon Location resource.
describeTrackerResponse_kmsKeyId :: Lens' DescribeTrackerResponse (Maybe Text)

-- | The tags associated with the tracker resource.
describeTrackerResponse_tags :: Lens' DescribeTrackerResponse (Maybe (HashMap Text Text))

-- | The position filtering method of the tracker resource.
describeTrackerResponse_positionFiltering :: Lens' DescribeTrackerResponse (Maybe PositionFiltering)

-- | The response's http status code.
describeTrackerResponse_httpStatus :: Lens' DescribeTrackerResponse Int

-- | The timestamp for when the tracker resource was created in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
describeTrackerResponse_createTime :: Lens' DescribeTrackerResponse UTCTime

-- | The optional description for the tracker resource.
describeTrackerResponse_description :: Lens' DescribeTrackerResponse Text

-- | The pricing plan selected for the specified tracker resource.
--   
--   For additional details and restrictions on each pricing plan option,
--   see <a>Amazon Location Service pricing</a>.
describeTrackerResponse_pricingPlan :: Lens' DescribeTrackerResponse PricingPlan

-- | The Amazon Resource Name (ARN) for the tracker resource. Used when you
--   need to specify a resource across all AWS.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:tracker/ExampleTracker</tt></li>
--   </ul>
describeTrackerResponse_trackerArn :: Lens' DescribeTrackerResponse Text

-- | The name of the tracker resource.
describeTrackerResponse_trackerName :: Lens' DescribeTrackerResponse Text

-- | The timestamp for when the tracker resource was last updated in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
describeTrackerResponse_updateTime :: Lens' DescribeTrackerResponse UTCTime

-- | The name of the place index resource.
describePlaceIndex_indexName :: Lens' DescribePlaceIndex Text

-- | Tags associated with place index resource.
describePlaceIndexResponse_tags :: Lens' DescribePlaceIndexResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
describePlaceIndexResponse_httpStatus :: Lens' DescribePlaceIndexResponse Int

-- | The timestamp for when the place index resource was created in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
describePlaceIndexResponse_createTime :: Lens' DescribePlaceIndexResponse UTCTime

-- | The data provider of geospatial data. Indicates one of the available
--   providers:
--   
--   <ul>
--   <li><pre>Esri</pre></li>
--   <li><pre>Here</pre></li>
--   </ul>
--   
--   For additional details on data providers, see <a>Amazon Location
--   Service data providers</a>.
describePlaceIndexResponse_dataSource :: Lens' DescribePlaceIndexResponse Text

-- | The specified data storage option for requesting Places.
describePlaceIndexResponse_dataSourceConfiguration :: Lens' DescribePlaceIndexResponse DataSourceConfiguration

-- | The optional description for the place index resource.
describePlaceIndexResponse_description :: Lens' DescribePlaceIndexResponse Text

-- | The Amazon Resource Name (ARN) for the place index resource. Used to
--   specify a resource across AWS.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:place-index/ExamplePlaceIndex</tt></li>
--   </ul>
describePlaceIndexResponse_indexArn :: Lens' DescribePlaceIndexResponse Text

-- | The name of the place index resource being described.
describePlaceIndexResponse_indexName :: Lens' DescribePlaceIndexResponse Text

-- | The pricing plan selected for the specified place index resource.
--   
--   For additional details and restrictions on each pricing plan option,
--   see <a>Amazon Location Service pricing</a>.
describePlaceIndexResponse_pricingPlan :: Lens' DescribePlaceIndexResponse PricingPlan

-- | The timestamp for when the place index resource was last updated in
--   <a>ISO 8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
describePlaceIndexResponse_updateTime :: Lens' DescribePlaceIndexResponse UTCTime

-- | The geofence collection storing the target geofence.
getGeofence_collectionName :: Lens' GetGeofence Text

-- | The geofence you're retrieving details for.
getGeofence_geofenceId :: Lens' GetGeofence Text

-- | The response's http status code.
getGeofenceResponse_httpStatus :: Lens' GetGeofenceResponse Int

-- | The timestamp for when the geofence collection was created in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
getGeofenceResponse_createTime :: Lens' GetGeofenceResponse UTCTime

-- | The geofence identifier.
getGeofenceResponse_geofenceId :: Lens' GetGeofenceResponse Text

-- | Contains the geofence geometry details describing a polygon.
getGeofenceResponse_geometry :: Lens' GetGeofenceResponse GeofenceGeometry

-- | Identifies the state of the geofence. A geofence will hold one of the
--   following states:
--   
--   <ul>
--   <li><tt>ACTIVE</tt> — The geofence has been indexed by the
--   system.</li>
--   <li><tt>PENDING</tt> — The geofence is being processed by the
--   system.</li>
--   <li><tt>FAILED</tt> — The geofence failed to be indexed by the
--   system.</li>
--   <li><tt>DELETED</tt> — The geofence has been deleted from the system
--   index.</li>
--   <li><tt>DELETING</tt> — The geofence is being deleted from the system
--   index.</li>
--   </ul>
getGeofenceResponse_status :: Lens' GetGeofenceResponse Text

-- | The timestamp for when the geofence collection was last updated in
--   <a>ISO 8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
getGeofenceResponse_updateTime :: Lens' GetGeofenceResponse UTCTime

-- | The pagination token specifying which page of results to return in the
--   response. If no token is provided, the default page is the first page.
--   
--   Default value: <tt>null</tt>
listDevicePositions_nextToken :: Lens' ListDevicePositions (Maybe Text)

-- | An optional limit for the number of entries returned in a single call.
--   
--   Default value: <tt>100</tt>
listDevicePositions_maxResults :: Lens' ListDevicePositions (Maybe Natural)

-- | The tracker resource containing the requested devices.
listDevicePositions_trackerName :: Lens' ListDevicePositions Text

-- | A pagination token indicating there are additional pages available.
--   You can use the token in a following request to fetch the next set of
--   results.
listDevicePositionsResponse_nextToken :: Lens' ListDevicePositionsResponse (Maybe Text)

-- | The response's http status code.
listDevicePositionsResponse_httpStatus :: Lens' ListDevicePositionsResponse Int

-- | Contains details about each device's last known position. These
--   details includes the device ID, the time when the position was sampled
--   on the device, the time that the service received the update, and the
--   most recent coordinates.
listDevicePositionsResponse_entries :: Lens' ListDevicePositionsResponse [ListDevicePositionsResponseEntry]

-- | The Amazon Resource Name (ARN) of the resource whose tags you want to
--   update.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:resourcetype/ExampleResource</tt></li>
--   </ul>
tagResource_resourceArn :: Lens' TagResource Text

-- | Tags that have been applied to the specified resource. Tags are mapped
--   from the tag key to the tag value: <tt>"TagKey" : "TagValue"</tt>.
--   
--   <ul>
--   <li>Format example: <tt>{"tag1" : "value1", "tag2" : "value2"}
--   </tt></li>
--   </ul>
tagResource_tags :: Lens' TagResource (HashMap Text Text)

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int

-- | A comma-separated list of fonts to load glyphs from in order of
--   preference. For example, <tt>Noto Sans Regular, Arial Unicode</tt>.
--   
--   Valid fonts stacks for <a>Esri</a> styles:
--   
--   <ul>
--   <li>VectorEsriDarkGrayCanvas – <tt>Ubuntu Medium Italic</tt> |
--   <tt>Ubuntu Medium</tt> | <tt>Ubuntu Italic</tt> | <tt>Ubuntu
--   Regular</tt> | <tt>Ubuntu Bold</tt></li>
--   <li>VectorEsriLightGrayCanvas – <tt>Ubuntu Italic</tt> | <tt>Ubuntu
--   Regular</tt> | <tt>Ubuntu Light</tt> | <tt>Ubuntu Bold</tt></li>
--   <li>VectorEsriTopographic – <tt>Noto Sans Italic</tt> | <tt>Noto Sans
--   Regular</tt> | <tt>Noto Sans Bold</tt> | <tt>Noto Serif Regular</tt> |
--   <tt>Roboto Condensed Light Italic</tt></li>
--   <li>VectorEsriStreets – <tt>Arial Regular</tt> | <tt>Arial Italic</tt>
--   | <tt>Arial Bold</tt></li>
--   <li>VectorEsriNavigation – <tt>Arial Regular</tt> | <tt>Arial
--   Italic</tt> | <tt>Arial Bold</tt></li>
--   </ul>
--   
--   Valid font stacks for <a>HERE Technologies</a> styles:
--   
--   <ul>
--   <li>VectorHereBerlin – <tt>Fira GO Regular</tt> | <tt>Fira GO
--   Bold</tt></li>
--   </ul>
getMapGlyphs_fontStack :: Lens' GetMapGlyphs Text

-- | A Unicode range of characters to download glyphs for. Each response
--   will contain 256 characters. For example, 0–255 includes all
--   characters from range <tt>U+0000</tt> to <tt>00FF</tt>. Must be
--   aligned to multiples of 256.
getMapGlyphs_fontUnicodeRange :: Lens' GetMapGlyphs Text

-- | The map resource associated with the glyph ﬁle.
getMapGlyphs_mapName :: Lens' GetMapGlyphs Text

-- | The blob's content type.
getMapGlyphsResponse_blob :: Lens' GetMapGlyphsResponse (Maybe ByteString)

-- | The map glyph content type. For example,
--   <tt>application/octet-stream</tt>.
getMapGlyphsResponse_contentType :: Lens' GetMapGlyphsResponse (Maybe Text)

-- | The response's http status code.
getMapGlyphsResponse_httpStatus :: Lens' GetMapGlyphsResponse Int

-- | The geofence collection storing the geofences.
batchPutGeofence_collectionName :: Lens' BatchPutGeofence Text

-- | The batch of geofences to be stored in a geofence collection.
batchPutGeofence_entries :: Lens' BatchPutGeofence (NonEmpty BatchPutGeofenceRequestEntry)

-- | The response's http status code.
batchPutGeofenceResponse_httpStatus :: Lens' BatchPutGeofenceResponse Int

-- | Contains additional error details for each geofence that failed to be
--   stored in a geofence collection.
batchPutGeofenceResponse_errors :: Lens' BatchPutGeofenceResponse [BatchPutGeofenceError]

-- | Contains each geofence that was successfully stored in a geofence
--   collection.
batchPutGeofenceResponse_successes :: Lens' BatchPutGeofenceResponse [BatchPutGeofenceSuccess]

-- | The geofence collection storing the geofences to be deleted.
batchDeleteGeofence_collectionName :: Lens' BatchDeleteGeofence Text

-- | The batch of geofences to be deleted.
batchDeleteGeofence_geofenceIds :: Lens' BatchDeleteGeofence (NonEmpty Text)

-- | The response's http status code.
batchDeleteGeofenceResponse_httpStatus :: Lens' BatchDeleteGeofenceResponse Int

-- | Contains error details for each geofence that failed to delete.
batchDeleteGeofenceResponse_errors :: Lens' BatchDeleteGeofenceResponse [BatchDeleteGeofenceError]

-- | The Amazon Resource Name (ARN) of the resource from which you want to
--   remove tags.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:resourcetype/ExampleResource</tt></li>
--   </ul>
untagResource_resourceArn :: Lens' UntagResource Text

-- | The list of tag keys to remove from the specified resource.
untagResource_tagKeys :: Lens' UntagResource (NonEmpty Text)

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int

-- | Devices whose position history you want to delete.
--   
--   <ul>
--   <li>For example, for two devices: <tt>“DeviceIds” :
--   [DeviceId1,DeviceId2]</tt></li>
--   </ul>
batchDeleteDevicePositionHistory_deviceIds :: Lens' BatchDeleteDevicePositionHistory (NonEmpty Text)

-- | The name of the tracker resource to delete the device position history
--   from.
batchDeleteDevicePositionHistory_trackerName :: Lens' BatchDeleteDevicePositionHistory Text

-- | The response's http status code.
batchDeleteDevicePositionHistoryResponse_httpStatus :: Lens' BatchDeleteDevicePositionHistoryResponse Int

-- | Contains error details for each device history that failed to delete.
batchDeleteDevicePositionHistoryResponse_errors :: Lens' BatchDeleteDevicePositionHistoryResponse [BatchDeleteDevicePositionHistoryError]

-- | The pagination token specifying which page of results to return in the
--   response. If no token is provided, the default page is the first page.
--   
--   Default value: <tt>null</tt>
listPlaceIndexes_nextToken :: Lens' ListPlaceIndexes (Maybe Text)

-- | An optional limit for the maximum number of results returned in a
--   single call.
--   
--   Default value: <tt>100</tt>
listPlaceIndexes_maxResults :: Lens' ListPlaceIndexes (Maybe Natural)

-- | A pagination token indicating there are additional pages available.
--   You can use the token in a following request to fetch the next set of
--   results.
listPlaceIndexesResponse_nextToken :: Lens' ListPlaceIndexesResponse (Maybe Text)

-- | The response's http status code.
listPlaceIndexesResponse_httpStatus :: Lens' ListPlaceIndexesResponse Int

-- | Lists the place index resources that exist in your AWS account
listPlaceIndexesResponse_entries :: Lens' ListPlaceIndexesResponse [ListPlaceIndexesResponseEntry]

-- | An optional paramer. The maximum number of results returned per
--   request.
--   
--   Default value: <tt>50</tt>
searchPlaceIndexForPosition_maxResults :: Lens' SearchPlaceIndexForPosition (Maybe Natural)

-- | The name of the place index resource you want to use for the search.
searchPlaceIndexForPosition_indexName :: Lens' SearchPlaceIndexForPosition Text

-- | Specifies a coordinate for the query defined by a longitude, and
--   latitude.
--   
--   <ul>
--   <li>The first position is the X coordinate, or longitude.</li>
--   <li>The second position is the Y coordinate, or latitude.</li>
--   </ul>
--   
--   For example, <tt>position=xLongitude&amp;position=yLatitude</tt> .
searchPlaceIndexForPosition_position :: Lens' SearchPlaceIndexForPosition (NonEmpty Double)

-- | The response's http status code.
searchPlaceIndexForPositionResponse_httpStatus :: Lens' SearchPlaceIndexForPositionResponse Int

-- | Returns a list of Places closest to the specified position. Each
--   result contains additional information about the Places returned.
searchPlaceIndexForPositionResponse_results :: Lens' SearchPlaceIndexForPositionResponse [SearchForPositionResult]

-- | Contains a summary of the request.
searchPlaceIndexForPositionResponse_summary :: Lens' SearchPlaceIndexForPositionResponse SearchPlaceIndexForPositionSummary

-- | The name of the tracker resource to be deleted.
deleteTracker_trackerName :: Lens' DeleteTracker Text

-- | The response's http status code.
deleteTrackerResponse_httpStatus :: Lens' DeleteTrackerResponse Int

-- | Specifies the data storage option requesting Places.
createPlaceIndex_dataSourceConfiguration :: Lens' CreatePlaceIndex (Maybe DataSourceConfiguration)

-- | The optional description for the place index resource.
createPlaceIndex_description :: Lens' CreatePlaceIndex (Maybe Text)

-- | Applies one or more tags to the place index resource. A tag is a
--   key-value pair helps manage, identify, search, and filter your
--   resources by labelling them.
--   
--   Format: <tt>"key" : "value"</tt>
--   
--   Restrictions:
--   
--   <ul>
--   <li>Maximum 50 tags per resource</li>
--   <li>Each resource tag must be unique with a maximum of one value.</li>
--   <li>Maximum key length: 128 Unicode characters in UTF-8</li>
--   <li>Maximum value length: 256 Unicode characters in UTF-8</li>
--   <li>Can use alphanumeric characters (A–Z, a–z, 0–9), and the following
--   characters: + - = . _ : / @.</li>
--   </ul>
createPlaceIndex_tags :: Lens' CreatePlaceIndex (Maybe (HashMap Text Text))

-- | Specifies the data provider of geospatial data.
--   
--   This field is case-sensitive. Enter the valid values as shown. For
--   example, entering <tt>HERE</tt> returns an error.
--   
--   Valid values include:
--   
--   <ul>
--   <li><tt>Esri</tt> – For additional information about <a>Esri</a>'s
--   coverage in your region of interest, see <a>Esri details on geocoding
--   coverage</a>.</li>
--   <li><tt>Here</tt> – For additional information about <a>HERE
--   Technologies</a>' coverage in your region of interest, see <a>HERE
--   details on goecoding coverage</a>.Place index resources using HERE
--   Technologies as a data provider can't <a>store results</a> for
--   locations in Japan. For more information, see the <a>AWS Service
--   Terms</a> for Amazon Location Service.</li>
--   </ul>
--   
--   For additional information , see <a>Data providers</a> on the
--   <i>Amazon Location Service Developer Guide</i>.
createPlaceIndex_dataSource :: Lens' CreatePlaceIndex Text

-- | The name of the place index resource.
--   
--   Requirements:
--   
--   <ul>
--   <li>Contain only alphanumeric characters (A–Z, a–z, 0–9), hyphens (-),
--   periods (.), and underscores (_).</li>
--   <li>Must be a unique place index resource name.</li>
--   <li>No spaces allowed. For example, <tt>ExamplePlaceIndex</tt>.</li>
--   </ul>
createPlaceIndex_indexName :: Lens' CreatePlaceIndex Text

-- | Specifies the pricing plan for your place index resource.
--   
--   For additional details and restrictions on each pricing plan option,
--   see <a>Amazon Location Service pricing</a>.
createPlaceIndex_pricingPlan :: Lens' CreatePlaceIndex PricingPlan

-- | The response's http status code.
createPlaceIndexResponse_httpStatus :: Lens' CreatePlaceIndexResponse Int

-- | The timestamp for when the place index resource was created in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
createPlaceIndexResponse_createTime :: Lens' CreatePlaceIndexResponse UTCTime

-- | The Amazon Resource Name (ARN) for the place index resource. Used to
--   specify a resource across AWS.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:place-index/ExamplePlaceIndex</tt></li>
--   </ul>
createPlaceIndexResponse_indexArn :: Lens' CreatePlaceIndexResponse Text

-- | The name for the place index resource.
createPlaceIndexResponse_indexName :: Lens' CreatePlaceIndexResponse Text

-- | Updates the pricing plan for the tracker resource.
--   
--   For more information about each pricing plan option restrictions, see
--   <a>Amazon Location Service pricing</a>.
updateTracker_pricingPlan :: Lens' UpdateTracker (Maybe PricingPlan)

-- | Updates the data provider for the tracker resource.
--   
--   A required value for the following pricing plans:
--   <tt>MobileAssetTracking</tt>| <tt>MobileAssetManagement</tt>
--   
--   For more information about <a>data providers</a> and <a>pricing
--   plans</a>, see the Amazon Location Service product page
--   
--   This can only be updated when updating the <tt>PricingPlan</tt> in the
--   same request.
--   
--   Amazon Location Service uses <tt>PricingPlanDataSource</tt> to
--   calculate billing for your tracker resource. Your data won't be shared
--   with the data provider, and will remain in your AWS account and Region
--   unless you move it.
updateTracker_pricingPlanDataSource :: Lens' UpdateTracker (Maybe Text)

-- | Updates the description for the tracker resource.
updateTracker_description :: Lens' UpdateTracker (Maybe Text)

-- | Updates the position filtering for the tracker resource.
--   
--   Valid values:
--   
--   <ul>
--   <li><tt>TimeBased</tt> - Location updates are evaluated against linked
--   geofence collections, but not every location update is stored. If your
--   update frequency is more often than 30 seconds, only one update per 30
--   seconds is stored for each unique device ID.</li>
--   <li><tt>DistanceBased</tt> - If the device has moved less than 30 m
--   (98.4 ft), location updates are ignored. Location updates within this
--   distance are neither evaluated against linked geofence collections,
--   nor stored. This helps control costs by reducing the number of
--   geofence evaluations and device positions to retrieve. Distance-based
--   filtering can also reduce the jitter effect when displaying device
--   trajectory on a map.</li>
--   </ul>
updateTracker_positionFiltering :: Lens' UpdateTracker (Maybe PositionFiltering)

-- | The name of the tracker resource to update.
updateTracker_trackerName :: Lens' UpdateTracker Text

-- | The response's http status code.
updateTrackerResponse_httpStatus :: Lens' UpdateTrackerResponse Int

-- | The Amazon Resource Name (ARN) of the updated tracker resource. Used
--   to specify a resource across AWS.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:tracker/ExampleTracker</tt></li>
--   </ul>
updateTrackerResponse_trackerArn :: Lens' UpdateTrackerResponse Text

-- | The name of the updated tracker resource.
updateTrackerResponse_trackerName :: Lens' UpdateTrackerResponse Text

-- | The timestamp for when the tracker resource was last updated in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
updateTrackerResponse_updateTime :: Lens' UpdateTrackerResponse UTCTime

-- | The optional description for the route calculator resource.
createRouteCalculator_description :: Lens' CreateRouteCalculator (Maybe Text)

-- | Applies one or more tags to the route calculator resource. A tag is a
--   key-value pair helps manage, identify, search, and filter your
--   resources by labelling them.
--   
--   <ul>
--   <li>For example: { <tt>"tag1" : "value1"</tt>, <tt>"tag2" :
--   "value2"</tt>}</li>
--   </ul>
--   
--   Format: <tt>"key" : "value"</tt>
--   
--   Restrictions:
--   
--   <ul>
--   <li>Maximum 50 tags per resource</li>
--   <li>Each resource tag must be unique with a maximum of one value.</li>
--   <li>Maximum key length: 128 Unicode characters in UTF-8</li>
--   <li>Maximum value length: 256 Unicode characters in UTF-8</li>
--   <li>Can use alphanumeric characters (A–Z, a–z, 0–9), and the following
--   characters: + - = . _ : / @.</li>
--   </ul>
createRouteCalculator_tags :: Lens' CreateRouteCalculator (Maybe (HashMap Text Text))

-- | The name of the route calculator resource.
--   
--   Requirements:
--   
--   <ul>
--   <li>Can use alphanumeric characters (A–Z, a–z, 0–9) , hyphens (-),
--   periods (.), and underscores (_).</li>
--   <li>Must be a unique Route calculator resource name.</li>
--   <li>No spaces allowed. For example,
--   <tt>ExampleRouteCalculator</tt>.</li>
--   </ul>
createRouteCalculator_calculatorName :: Lens' CreateRouteCalculator Text

-- | Specifies the data provider of traffic and road network data.
--   
--   This field is case-sensitive. Enter the valid values as shown. For
--   example, entering <tt>HERE</tt> returns an error. Route calculators
--   that use Esri as a data source only calculate routes that are shorter
--   than 400 km.
--   
--   Valid values include:
--   
--   <ul>
--   <li><tt>Esri</tt> – For additional information about <a>Esri</a>'s
--   coverage in your region of interest, see <a>Esri details on street
--   networks and traffic coverage</a>.</li>
--   <li><tt>Here</tt> – For additional information about <a>HERE
--   Technologies</a>' coverage in your region of interest, see <a>HERE car
--   routing coverage</a> and <a>HERE truck routing coverage</a>.</li>
--   </ul>
--   
--   For additional information , see <a>Data providers</a> on the
--   <i>Amazon Location Service Developer Guide</i>.
createRouteCalculator_dataSource :: Lens' CreateRouteCalculator Text

-- | Specifies the pricing plan for your route calculator resource.
--   
--   For additional details and restrictions on each pricing plan option,
--   see <a>Amazon Location Service pricing</a>.
createRouteCalculator_pricingPlan :: Lens' CreateRouteCalculator PricingPlan

-- | The response's http status code.
createRouteCalculatorResponse_httpStatus :: Lens' CreateRouteCalculatorResponse Int

-- | The Amazon Resource Name (ARN) for the route calculator resource. Use
--   the ARN when you specify a resource across all AWS.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:route-calculator/ExampleCalculator</tt></li>
--   </ul>
createRouteCalculatorResponse_calculatorArn :: Lens' CreateRouteCalculatorResponse Text

-- | The name of the route calculator resource.
--   
--   <ul>
--   <li>For example, <tt>ExampleRouteCalculator</tt>.</li>
--   </ul>
createRouteCalculatorResponse_calculatorName :: Lens' CreateRouteCalculatorResponse Text

-- | The timestamp when the route calculator resource was created in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
--   
--   <ul>
--   <li>For example, <tt>2020–07-2T12:15:20.000Z+01:00</tt></li>
--   </ul>
createRouteCalculatorResponse_createTime :: Lens' CreateRouteCalculatorResponse UTCTime

-- | The name of the map resource.
describeMap_mapName :: Lens' DescribeMap Text

-- | Tags associated with the map resource.
describeMapResponse_tags :: Lens' DescribeMapResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
describeMapResponse_httpStatus :: Lens' DescribeMapResponse Int

-- | Specifies the map tile style selected from a partner data provider.
describeMapResponse_configuration :: Lens' DescribeMapResponse MapConfiguration

-- | The timestamp for when the map resource was created in <a>ISO 8601</a>
--   format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
describeMapResponse_createTime :: Lens' DescribeMapResponse UTCTime

-- | Specifies the data provider for the associated map tiles.
describeMapResponse_dataSource :: Lens' DescribeMapResponse Text

-- | The optional description for the map resource.
describeMapResponse_description :: Lens' DescribeMapResponse Text

-- | The Amazon Resource Name (ARN) for the map resource. Used to specify a
--   resource across all AWS.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:maps/ExampleMap</tt></li>
--   </ul>
describeMapResponse_mapArn :: Lens' DescribeMapResponse Text

-- | The map style selected from an available provider.
describeMapResponse_mapName :: Lens' DescribeMapResponse Text

-- | The pricing plan selected for the specified map resource.
--   
--   <pre>
--   &lt;p&gt;For additional details and restrictions on each pricing plan option, see &lt;a href="https://aws.amazon.com/location/pricing/"&gt;Amazon Location Service pricing&lt;/a&gt;.&lt;/p&gt;
--   </pre>
describeMapResponse_pricingPlan :: Lens' DescribeMapResponse PricingPlan

-- | The timestamp for when the map resource was last update in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
describeMapResponse_updateTime :: Lens' DescribeMapResponse UTCTime

-- | The ID of the device for this position.
batchDeleteDevicePositionHistoryError_deviceId :: Lens' BatchDeleteDevicePositionHistoryError Text

-- | Undocumented member.
batchDeleteDevicePositionHistoryError_error :: Lens' BatchDeleteDevicePositionHistoryError BatchItemError

-- | Contains details associated to the batch error.
batchDeleteGeofenceError_error :: Lens' BatchDeleteGeofenceError BatchItemError

-- | The geofence associated with the error message.
batchDeleteGeofenceError_geofenceId :: Lens' BatchDeleteGeofenceError Text

-- | The device associated with the position evaluation error.
batchEvaluateGeofencesError_deviceId :: Lens' BatchEvaluateGeofencesError Text

-- | Contains details associated to the batch error.
batchEvaluateGeofencesError_error :: Lens' BatchEvaluateGeofencesError BatchItemError

-- | Specifies a timestamp for when the error occurred in <a>ISO 8601</a>
--   format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
batchEvaluateGeofencesError_sampleTime :: Lens' BatchEvaluateGeofencesError UTCTime

-- | The ID of the device that didn't return a position.
batchGetDevicePositionError_deviceId :: Lens' BatchGetDevicePositionError Text

-- | Contains details related to the error code.
batchGetDevicePositionError_error :: Lens' BatchGetDevicePositionError BatchItemError

-- | The error code associated with the batch request error.
batchItemError_code :: Lens' BatchItemError (Maybe BatchItemErrorCode)

-- | A message with the reason for the batch request error.
batchItemError_message :: Lens' BatchItemError (Maybe Text)

-- | Contains details associated to the batch error.
batchPutGeofenceError_error :: Lens' BatchPutGeofenceError BatchItemError

-- | The geofence associated with the error message.
batchPutGeofenceError_geofenceId :: Lens' BatchPutGeofenceError Text

-- | The identifier for the geofence to be stored in a given geofence
--   collection.
batchPutGeofenceRequestEntry_geofenceId :: Lens' BatchPutGeofenceRequestEntry Text

-- | Contains the polygon details to specify the position of the geofence.
--   
--   Each <a>geofence polygon</a> can have a maximum of 1,000 vertices.
batchPutGeofenceRequestEntry_geometry :: Lens' BatchPutGeofenceRequestEntry GeofenceGeometry

-- | The timestamp for when the geofence was stored in a geofence
--   collection in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
batchPutGeofenceSuccess_createTime :: Lens' BatchPutGeofenceSuccess UTCTime

-- | The geofence successfully stored in a geofence collection.
batchPutGeofenceSuccess_geofenceId :: Lens' BatchPutGeofenceSuccess Text

-- | The timestamp for when the geofence was last updated in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
batchPutGeofenceSuccess_updateTime :: Lens' BatchPutGeofenceSuccess UTCTime

-- | The device associated with the failed location update.
batchUpdateDevicePositionError_deviceId :: Lens' BatchUpdateDevicePositionError Text

-- | Contains details related to the error code such as the error code and
--   error message.
batchUpdateDevicePositionError_error :: Lens' BatchUpdateDevicePositionError BatchItemError

-- | The timestamp at which the device position was determined. Uses <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
batchUpdateDevicePositionError_sampleTime :: Lens' BatchUpdateDevicePositionError UTCTime

-- | Avoids tolls when calculating routes.
--   
--   Default Value: <tt>false</tt>
--   
--   Valid Values: <tt>false</tt> | <tt>true</tt>
calculateRouteCarModeOptions_avoidTolls :: Lens' CalculateRouteCarModeOptions (Maybe Bool)

-- | Avoids ferries when calculating routes.
--   
--   Default Value: <tt>false</tt>
--   
--   Valid Values: <tt>false</tt> | <tt>true</tt>
calculateRouteCarModeOptions_avoidFerries :: Lens' CalculateRouteCarModeOptions (Maybe Bool)

-- | The data provider of traffic and road network data used to calculate
--   the route. Indicates one of the available providers:
--   
--   <ul>
--   <li><pre>Esri</pre></li>
--   <li><pre>Here</pre></li>
--   </ul>
--   
--   For more information about data providers, see <a>Amazon Location
--   Service data providers</a>.
calculateRouteSummary_dataSource :: Lens' CalculateRouteSummary Text

-- | The total distance covered by the route. The sum of the distance
--   travelled between every stop on the route.
--   
--   If Esri is the data source for the route calculator, the route
--   distance can’t be greater than 400 km. If the route exceeds 400 km,
--   the response is a <tt>400 RoutesValidationException</tt> error.
calculateRouteSummary_distance :: Lens' CalculateRouteSummary Double

-- | The unit of measurement for the distance.
calculateRouteSummary_distanceUnit :: Lens' CalculateRouteSummary DistanceUnit

-- | The total travel time for the route measured in seconds. The sum of
--   the travel time between every stop on the route.
calculateRouteSummary_durationSeconds :: Lens' CalculateRouteSummary Double

-- | Specifies a geographical box surrounding a route. Used to zoom into a
--   route when displaying it in a map. For example, <tt>[min x, min y, max
--   x, max y]</tt>.
--   
--   The first 2 <tt>bbox</tt> parameters describe the lower southwest
--   corner:
--   
--   <ul>
--   <li>The first <tt>bbox</tt> position is the X coordinate or longitude
--   of the lower southwest corner.</li>
--   <li>The second <tt>bbox</tt> position is the Y coordinate or latitude
--   of the lower southwest corner.</li>
--   </ul>
--   
--   The next 2 <tt>bbox</tt> parameters describe the upper northeast
--   corner:
--   
--   <ul>
--   <li>The third <tt>bbox</tt> position is the X coordinate, or longitude
--   of the upper northeast corner.</li>
--   <li>The fourth <tt>bbox</tt> position is the Y coordinate, or latitude
--   of the upper northeast corner.</li>
--   </ul>
calculateRouteSummary_routeBBox :: Lens' CalculateRouteSummary (NonEmpty Double)

-- | Specifies the truck's weight specifications including total weight and
--   unit of measurement. Used to avoid roads that can't support the
--   truck's weight.
calculateRouteTruckModeOptions_weight :: Lens' CalculateRouteTruckModeOptions (Maybe TruckWeight)

-- | Avoids ferries when calculating routes.
--   
--   Default Value: <tt>false</tt>
--   
--   Valid Values: <tt>false</tt> | <tt>true</tt>
calculateRouteTruckModeOptions_avoidTolls :: Lens' CalculateRouteTruckModeOptions (Maybe Bool)

-- | Specifies the truck's dimension specifications including length,
--   height, width, and unit of measurement. Used to avoid roads that can't
--   support the truck's dimensions.
calculateRouteTruckModeOptions_dimensions :: Lens' CalculateRouteTruckModeOptions (Maybe TruckDimensions)

-- | Avoids ferries when calculating routes.
--   
--   Default Value: <tt>false</tt>
--   
--   Valid Values: <tt>false</tt> | <tt>true</tt>
calculateRouteTruckModeOptions_avoidFerries :: Lens' CalculateRouteTruckModeOptions (Maybe Bool)

-- | Specifies how the results of an operation will be stored by the
--   caller.
--   
--   Valid values include:
--   
--   <ul>
--   <li><tt>SingleUse</tt> specifies that the results won't be
--   stored.</li>
--   <li><tt>Storage</tt> specifies that the result can be cached or stored
--   in a database.</li>
--   </ul>
--   
--   Default value: <tt>SingleUse</tt>
dataSourceConfiguration_intendedUse :: Lens' DataSourceConfiguration (Maybe IntendedUse)

-- | The device whose position you retrieved.
devicePosition_deviceId :: Lens' DevicePosition (Maybe Text)

-- | The last known device position.
devicePosition_position :: Lens' DevicePosition (NonEmpty Double)

-- | The timestamp for when the tracker resource received the device
--   position in <a>ISO 8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
devicePosition_receivedTime :: Lens' DevicePosition UTCTime

-- | The timestamp at which the device's position was determined. Uses
--   <a>ISO 8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
devicePosition_sampleTime :: Lens' DevicePosition UTCTime

-- | The device associated to the position update.
devicePositionUpdate_deviceId :: Lens' DevicePositionUpdate Text

-- | The latest device position defined in <a>WGS 84</a> format: <tt>[X or
--   longitude, Y or latitude]</tt>.
devicePositionUpdate_position :: Lens' DevicePositionUpdate (NonEmpty Double)

-- | The timestamp at which the device's position was determined. Uses
--   <a>ISO 8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
devicePositionUpdate_sampleTime :: Lens' DevicePositionUpdate UTCTime

-- | An array of 1 or more linear rings. A linear ring is an array of 4 or
--   more vertices, where the first and last vertex are the same to form a
--   closed boundary. Each vertex is a 2-dimensional point of the form:
--   <tt>[longitude, latitude]</tt>.
--   
--   The first linear ring is an outer ring, describing the polygon's
--   boundary. Subsequent linear rings may be inner or outer rings to
--   describe holes and islands. Outer rings must list their vertices in
--   counter-clockwise order around the ring's center, where the left side
--   is the polygon's exterior. Inner rings must list their vertices in
--   clockwise order, where the left side is the polygon's interior.
geofenceGeometry_polygon :: Lens' GeofenceGeometry (Maybe (NonEmpty (NonEmpty (NonEmpty Double))))

-- | Contains the calculated route's path as a linestring geometry.
leg_geometry :: Lens' Leg (Maybe LegGeometry)

-- | The distance between the leg's <tt>StartPosition</tt> and
--   <tt>EndPosition</tt> along a calculated route.
--   
--   <ul>
--   <li>The default measurement is <tt>Kilometers</tt> unless the request
--   specifies a <tt>DistanceUnit</tt> of <tt>Miles</tt>.</li>
--   </ul>
leg_distance :: Lens' Leg Double

-- | The estimated travel time between the leg's <tt>StartPosition</tt> and
--   <tt>EndPosition</tt>. The travel mode and departure time that you
--   specify in the request determines the calculated time.
leg_durationSeconds :: Lens' Leg Double

-- | The terminating position of the leg. Follows the format
--   <tt>[longitude,latitude]</tt>.
--   
--   If the <tt>EndPosition</tt> isn't located on a road, it's <a>snapped
--   to a nearby road</a>.
leg_endPosition :: Lens' Leg (NonEmpty Double)

-- | The starting position of the leg. Follows the format
--   <tt>[longitude,latitude]</tt>.
--   
--   If the <tt>StartPosition</tt> isn't located on a road, it's <a>snapped
--   to a nearby road</a>.
leg_startPosition :: Lens' Leg (NonEmpty Double)

-- | Contains a list of steps, which represent subsections of a leg. Each
--   step provides instructions for how to move to the next step in the leg
--   such as the step's start position, end position, travel distance,
--   travel duration, and geometry offset.
leg_steps :: Lens' Leg [Step]

-- | An ordered list of positions used to plot a route on a map.
--   
--   The first position is closest to the start position for the leg, and
--   the last position is the closest to the end position for the leg.
--   
--   <ul>
--   <li>For example, <tt>[[-123.117, 49.284],[-123.115, 49.285],[-123.115,
--   49.285]]</tt></li>
--   </ul>
legGeometry_lineString :: Lens' LegGeometry (Maybe (NonEmpty (NonEmpty Double)))

-- | The ID of the device for this position.
listDevicePositionsResponseEntry_deviceId :: Lens' ListDevicePositionsResponseEntry Text

-- | The last known device position. Empty if no positions currently
--   stored.
listDevicePositionsResponseEntry_position :: Lens' ListDevicePositionsResponseEntry (NonEmpty Double)

-- | The timestamp at which the device position was determined. Uses <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
listDevicePositionsResponseEntry_sampleTime :: Lens' ListDevicePositionsResponseEntry UTCTime

-- | The specified data provider for the geofence collection.
listGeofenceCollectionsResponseEntry_pricingPlanDataSource :: Lens' ListGeofenceCollectionsResponseEntry (Maybe Text)

-- | The name of the geofence collection.
listGeofenceCollectionsResponseEntry_collectionName :: Lens' ListGeofenceCollectionsResponseEntry Text

-- | The timestamp for when the geofence collection was created in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
listGeofenceCollectionsResponseEntry_createTime :: Lens' ListGeofenceCollectionsResponseEntry UTCTime

-- | The description for the geofence collection
listGeofenceCollectionsResponseEntry_description :: Lens' ListGeofenceCollectionsResponseEntry Text

-- | The pricing plan for the specified geofence collection.
--   
--   For additional details and restrictions on each pricing plan option,
--   see the <a>Amazon Location Service pricing page</a>.
listGeofenceCollectionsResponseEntry_pricingPlan :: Lens' ListGeofenceCollectionsResponseEntry PricingPlan

-- | Specifies a timestamp for when the resource was last updated in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
listGeofenceCollectionsResponseEntry_updateTime :: Lens' ListGeofenceCollectionsResponseEntry UTCTime

-- | The timestamp for when the geofence was stored in a geofence
--   collection in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
listGeofenceResponseEntry_createTime :: Lens' ListGeofenceResponseEntry UTCTime

-- | The geofence identifier.
listGeofenceResponseEntry_geofenceId :: Lens' ListGeofenceResponseEntry Text

-- | Contains the geofence geometry details describing a polygon.
listGeofenceResponseEntry_geometry :: Lens' ListGeofenceResponseEntry GeofenceGeometry

-- | Identifies the state of the geofence. A geofence will hold one of the
--   following states:
--   
--   <ul>
--   <li><tt>ACTIVE</tt> — The geofence has been indexed by the
--   system.</li>
--   <li><tt>PENDING</tt> — The geofence is being processed by the
--   system.</li>
--   <li><tt>FAILED</tt> — The geofence failed to be indexed by the
--   system.</li>
--   <li><tt>DELETED</tt> — The geofence has been deleted from the system
--   index.</li>
--   <li><tt>DELETING</tt> — The geofence is being deleted from the system
--   index.</li>
--   </ul>
listGeofenceResponseEntry_status :: Lens' ListGeofenceResponseEntry Text

-- | The timestamp for when the geofence was last updated in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
listGeofenceResponseEntry_updateTime :: Lens' ListGeofenceResponseEntry UTCTime

-- | The timestamp for when the map resource was created in <a>ISO 8601</a>
--   format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
listMapsResponseEntry_createTime :: Lens' ListMapsResponseEntry UTCTime

-- | Specifies the data provider for the associated map tiles.
listMapsResponseEntry_dataSource :: Lens' ListMapsResponseEntry Text

-- | The description for the map resource.
listMapsResponseEntry_description :: Lens' ListMapsResponseEntry Text

-- | The name of the associated map resource.
listMapsResponseEntry_mapName :: Lens' ListMapsResponseEntry Text

-- | The pricing plan for the specified map resource.
--   
--   For additional details and restrictions on each pricing plan option,
--   see <a>Amazon Location Service pricing</a>.
listMapsResponseEntry_pricingPlan :: Lens' ListMapsResponseEntry PricingPlan

-- | The timestamp for when the map resource was last updated in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
listMapsResponseEntry_updateTime :: Lens' ListMapsResponseEntry UTCTime

-- | The timestamp for when the place index resource was created in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
listPlaceIndexesResponseEntry_createTime :: Lens' ListPlaceIndexesResponseEntry UTCTime

-- | The data provider of geospatial data. Indicates one of the available
--   providers:
--   
--   <ul>
--   <li><pre>Esri</pre></li>
--   <li><pre>Here</pre></li>
--   </ul>
--   
--   For additional details on data providers, see <a>Amazon Location
--   Service data providers</a>.
listPlaceIndexesResponseEntry_dataSource :: Lens' ListPlaceIndexesResponseEntry Text

-- | The optional description for the place index resource.
listPlaceIndexesResponseEntry_description :: Lens' ListPlaceIndexesResponseEntry Text

-- | The name of the place index resource.
listPlaceIndexesResponseEntry_indexName :: Lens' ListPlaceIndexesResponseEntry Text

-- | The pricing plan for the specified place index resource.
--   
--   For additional details and restrictions on each pricing plan option,
--   see <a>Amazon Location Service pricing</a>.
listPlaceIndexesResponseEntry_pricingPlan :: Lens' ListPlaceIndexesResponseEntry PricingPlan

-- | The timestamp for when the place index resource was last updated in
--   <a>ISO 8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
listPlaceIndexesResponseEntry_updateTime :: Lens' ListPlaceIndexesResponseEntry UTCTime

-- | The name of the route calculator resource.
listRouteCalculatorsResponseEntry_calculatorName :: Lens' ListRouteCalculatorsResponseEntry Text

-- | The timestamp when the route calculator resource was created in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
--   
--   <ul>
--   <li>For example, <tt>2020–07-2T12:15:20.000Z+01:00</tt></li>
--   </ul>
listRouteCalculatorsResponseEntry_createTime :: Lens' ListRouteCalculatorsResponseEntry UTCTime

-- | The data provider of traffic and road network data. Indicates one of
--   the available providers:
--   
--   <ul>
--   <li><pre>Esri</pre></li>
--   <li><pre>Here</pre></li>
--   </ul>
--   
--   For more information about data providers, see <a>Amazon Location
--   Service data providers</a>.
listRouteCalculatorsResponseEntry_dataSource :: Lens' ListRouteCalculatorsResponseEntry Text

-- | The optional description of the route calculator resource.
listRouteCalculatorsResponseEntry_description :: Lens' ListRouteCalculatorsResponseEntry Text

-- | The pricing plan for the specified route calculator resource.
--   
--   For additional details and restrictions on each pricing plan option,
--   see <a>Amazon Location Service pricing</a>.
listRouteCalculatorsResponseEntry_pricingPlan :: Lens' ListRouteCalculatorsResponseEntry PricingPlan

-- | The timestamp when the route calculator resource was last updated in
--   <a>ISO 8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
--   
--   <ul>
--   <li>For example, <tt>2020–07-2T12:15:20.000Z+01:00</tt></li>
--   </ul>
listRouteCalculatorsResponseEntry_updateTime :: Lens' ListRouteCalculatorsResponseEntry UTCTime

-- | The specified data provider for the tracker resource.
listTrackersResponseEntry_pricingPlanDataSource :: Lens' ListTrackersResponseEntry (Maybe Text)

-- | The timestamp for when the tracker resource was created in <a>ISO
--   8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
listTrackersResponseEntry_createTime :: Lens' ListTrackersResponseEntry UTCTime

-- | The description for the tracker resource.
listTrackersResponseEntry_description :: Lens' ListTrackersResponseEntry Text

-- | The pricing plan for the specified tracker resource.
--   
--   For additional details and restrictions on each pricing plan option,
--   see <a>Amazon Location Service pricing</a>.
listTrackersResponseEntry_pricingPlan :: Lens' ListTrackersResponseEntry PricingPlan

-- | The name of the tracker resource.
listTrackersResponseEntry_trackerName :: Lens' ListTrackersResponseEntry Text

-- | The timestamp at which the device's position was determined. Uses
--   <a>ISO 8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
listTrackersResponseEntry_updateTime :: Lens' ListTrackersResponseEntry UTCTime

-- | Specifies the map style selected from an available data provider.
--   
--   Valid <a>Esri map styles</a>:
--   
--   <ul>
--   <li><tt>VectorEsriDarkGrayCanvas</tt> – The Esri Dark Gray Canvas map
--   style. A vector basemap with a dark gray, neutral background with
--   minimal colors, labels, and features that's designed to draw attention
--   to your thematic content.</li>
--   <li><tt>RasterEsriImagery</tt> – The Esri Imagery map style. A raster
--   basemap that provides one meter or better satellite and aerial imagery
--   in many parts of the world and lower resolution satellite imagery
--   worldwide.</li>
--   <li><tt>VectorEsriLightGrayCanvas</tt> – The Esri Light Gray Canvas
--   map style, which provides a detailed vector basemap with a light gray,
--   neutral background style with minimal colors, labels, and features
--   that's designed to draw attention to your thematic content.</li>
--   <li><tt>VectorEsriTopographic</tt> – The Esri Light map style, which
--   provides a detailed vector basemap with a classic Esri map style.</li>
--   <li><tt>VectorEsriStreets</tt> – The Esri World Streets map style,
--   which provides a detailed vector basemap for the world symbolized with
--   a classic Esri street map style. The vector tile layer is similar in
--   content and style to the World Street Map raster map.</li>
--   <li><tt>VectorEsriNavigation</tt> – The Esri World Navigation map
--   style, which provides a detailed basemap for the world symbolized with
--   a custom navigation map style that's designed for use during the day
--   in mobile devices.</li>
--   </ul>
--   
--   Valid <a>HERE Technologies map styles</a>:
--   
--   <ul>
--   <li><tt>VectorHereBerlin</tt> – The HERE Berlin map style is a high
--   contrast detailed base map of the world that blends 3D and 2D
--   rendering.When using HERE as your data provider, and selecting the
--   Style <tt>VectorHereBerlin</tt>, you may not use HERE Technologies
--   maps for Asset Management. See the <a>AWS Service Terms</a> for Amazon
--   Location Service.</li>
--   </ul>
mapConfiguration_style :: Lens' MapConfiguration Text

-- | A name for a local area, such as a city or town name. For example,
--   <tt>Toronto</tt>.
place_municipality :: Lens' Place (Maybe Text)

-- | The numerical portion of an address, such as a building number.
place_addressNumber :: Lens' Place (Maybe Text)

-- | A group of numbers and letters in a country-specific format, which
--   accompanies the address for the purpose of identifying a location.
place_postalCode :: Lens' Place (Maybe Text)

-- | A country/region specified using <a>ISO 3166</a> 3-digit
--   country/region code. For example, <tt>CAN</tt>.
place_country :: Lens' Place (Maybe Text)

-- | The name for a street or a road to identify a location. For example,
--   <tt>Main Street</tt>.
place_street :: Lens' Place (Maybe Text)

-- | A country, or an area that's part of a larger region . For example,
--   <tt>Metro Vancouver</tt>.
place_subRegion :: Lens' Place (Maybe Text)

-- | A name for an area or geographical division, such as a province or
--   state name. For example, <tt>British Columbia</tt>.
place_region :: Lens' Place (Maybe Text)

-- | The full name and address of the point of interest such as a city,
--   region, or country. For example, <tt>123 Any Street, Any Town,
--   USA</tt>.
place_label :: Lens' Place (Maybe Text)

-- | The name of a community district. For example, <tt>Downtown</tt>.
place_neighborhood :: Lens' Place (Maybe Text)

-- | Undocumented member.
place_geometry :: Lens' Place PlaceGeometry

-- | A single point geometry specifies a location for a Place using <a>WGS
--   84</a> coordinates:
--   
--   <ul>
--   <li><i>x</i> — Specifies the x coordinate or longitude.</li>
--   <li><i>y</i> — Specifies the y coordinate or latitude.</li>
--   </ul>
placeGeometry_point :: Lens' PlaceGeometry (Maybe (NonEmpty Double))

-- | Contains details about the relevant point of interest.
searchForPositionResult_place :: Lens' SearchForPositionResult Place

-- | Contains details about the relevant point of interest.
searchForTextResult_place :: Lens' SearchForTextResult Place

-- | An optional parameter. The maximum number of results returned per
--   request.
--   
--   Default value: <tt>50</tt>
searchPlaceIndexForPositionSummary_maxResults :: Lens' SearchPlaceIndexForPositionSummary (Maybe Natural)

-- | The data provider of geospatial data. Indicates one of the available
--   providers:
--   
--   <ul>
--   <li>Esri</li>
--   <li>HERE</li>
--   </ul>
--   
--   For additional details on data providers, see <a>Amazon Location
--   Service data providers</a>.
searchPlaceIndexForPositionSummary_dataSource :: Lens' SearchPlaceIndexForPositionSummary Text

-- | The position given in the reverse geocoding request.
searchPlaceIndexForPositionSummary_position :: Lens' SearchPlaceIndexForPositionSummary (NonEmpty Double)

-- | Contains the coordinates for the optional bounding box coordinated
--   entered in the geocoding request.
searchPlaceIndexForTextSummary_filterBBox :: Lens' SearchPlaceIndexForTextSummary (Maybe (NonEmpty Double))

-- | A bounding box that contains the search results within the specified
--   area indicated by <tt>FilterBBox</tt>. A subset of bounding box
--   specified using <tt>FilterBBox</tt>.
searchPlaceIndexForTextSummary_resultBBox :: Lens' SearchPlaceIndexForTextSummary (Maybe (NonEmpty Double))

-- | Contains the coordinates for the bias position entered in the
--   geocoding request.
searchPlaceIndexForTextSummary_biasPosition :: Lens' SearchPlaceIndexForTextSummary (Maybe (NonEmpty Double))

-- | Contains the country filter entered in the geocoding request.
searchPlaceIndexForTextSummary_filterCountries :: Lens' SearchPlaceIndexForTextSummary (Maybe (NonEmpty Text))

-- | Contains the maximum number of results indicated for the request.
searchPlaceIndexForTextSummary_maxResults :: Lens' SearchPlaceIndexForTextSummary (Maybe Natural)

-- | The data provider of geospatial data. Indicates one of the available
--   providers:
--   
--   <ul>
--   <li>Esri</li>
--   <li>HERE</li>
--   </ul>
--   
--   For additional details on data providers, see <a>Amazon Location
--   Service data providers</a>.
searchPlaceIndexForTextSummary_dataSource :: Lens' SearchPlaceIndexForTextSummary Text

-- | The address, name, city or region to be used in the geocoding request.
--   In free-form text format. For example, <tt>Vancouver</tt>.
searchPlaceIndexForTextSummary_text :: Lens' SearchPlaceIndexForTextSummary Text

-- | Represents the start position, or index, in a sequence of steps within
--   the leg's line string geometry. For example, the index of the first
--   step in a leg geometry is <tt>0</tt>.
--   
--   Included in the response for queries that set
--   <tt>IncludeLegGeometry</tt> to <tt>True</tt>.
step_geometryOffset :: Lens' Step (Maybe Natural)

-- | The travel distance between the step's <tt>StartPosition</tt> and
--   <tt>EndPosition</tt>.
step_distance :: Lens' Step Double

-- | The estimated travel time, in seconds, from the step's
--   <tt>StartPosition</tt> to the <tt>EndPosition</tt>. . The travel mode
--   and departure time that you specify in the request determines the
--   calculated time.
step_durationSeconds :: Lens' Step Double

-- | The end position of a step. If the position the last step in the leg,
--   this position is the same as the end position of the leg.
step_endPosition :: Lens' Step (NonEmpty Double)

-- | The starting position of a step. If the position is the first step in
--   the leg, this position is the same as the start position of the leg.
step_startPosition :: Lens' Step (NonEmpty Double)

-- | The length of the truck.
--   
--   <ul>
--   <li>For example, <tt>15.5</tt>.</li>
--   </ul>
truckDimensions_length :: Lens' TruckDimensions (Maybe Double)

-- | The height of the truck.
--   
--   <ul>
--   <li>For example, <tt>4.5</tt>.</li>
--   </ul>
truckDimensions_height :: Lens' TruckDimensions (Maybe Double)

-- | The width of the truck.
--   
--   <ul>
--   <li>For example, <tt>4.5</tt>.</li>
--   </ul>
truckDimensions_width :: Lens' TruckDimensions (Maybe Double)

-- | Specifies the unit of measurement for the truck dimensions.
--   
--   Default Value: <tt>Meters</tt>
truckDimensions_unit :: Lens' TruckDimensions (Maybe DimensionUnit)

-- | The total weight of the truck.
--   
--   <ul>
--   <li>For example, <tt>3500</tt>.</li>
--   </ul>
truckWeight_total :: Lens' TruckWeight (Maybe Double)

-- | The unit of measurement to use for the truck weight.
--   
--   Default Value: <tt>Kilograms</tt>
truckWeight_unit :: Lens' TruckWeight (Maybe VehicleWeightUnit)


module Amazonka.Location.Waiters


-- | Derived from API version <tt>2020-11-19</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   Suite of geospatial services including Maps, Places, Routes, Tracking,
--   and Geofencing
module Amazonka.Location

-- | API version <tt>2020-11-19</tt> of the Amazon Location Service SDK
--   configuration.
defaultService :: Service

-- | The input failed to meet the constraints specified by the AWS service.
_ValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request was denied because of insufficient access or permissions.
--   Check with an administrator to verify your permissions.
_AccessDeniedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request was unsuccessful because of a conflict.
_ConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The operation was denied because the request would exceed the maximum
--   <a>quota</a> set for Amazon Location Service.
_ServiceQuotaExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request was denied because of request throttling.
_ThrottlingException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request has failed to process because of an unknown server error,
--   exception, or failure.
_InternalServerException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource that you've entered was not found in your AWS account.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newBatchUpdateDevicePosition</a> smart constructor.
data BatchUpdateDevicePosition
BatchUpdateDevicePosition' :: Text -> NonEmpty DevicePositionUpdate -> BatchUpdateDevicePosition

-- | Create a value of <a>BatchUpdateDevicePosition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:trackerName:BatchUpdateDevicePosition'</a>,
--   <a>batchUpdateDevicePosition_trackerName</a> - The name of the tracker
--   resource to update.
--   
--   <a>$sel:updates:BatchUpdateDevicePosition'</a>,
--   <a>batchUpdateDevicePosition_updates</a> - Contains the position
--   update details for each device.
newBatchUpdateDevicePosition :: Text -> NonEmpty DevicePositionUpdate -> BatchUpdateDevicePosition

-- | <i>See:</i> <a>newBatchUpdateDevicePositionResponse</a> smart
--   constructor.
data BatchUpdateDevicePositionResponse
BatchUpdateDevicePositionResponse' :: Int -> [BatchUpdateDevicePositionError] -> BatchUpdateDevicePositionResponse

-- | Create a value of <a>BatchUpdateDevicePositionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:BatchUpdateDevicePositionResponse'</a>,
--   <a>batchUpdateDevicePositionResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:errors:BatchUpdateDevicePositionResponse'</a>,
--   <a>batchUpdateDevicePositionResponse_errors</a> - Contains error
--   details for each device that failed to update its position.
newBatchUpdateDevicePositionResponse :: Int -> BatchUpdateDevicePositionResponse

-- | <i>See:</i> <a>newDeleteRouteCalculator</a> smart constructor.
data DeleteRouteCalculator
DeleteRouteCalculator' :: Text -> DeleteRouteCalculator

-- | Create a value of <a>DeleteRouteCalculator</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:calculatorName:DeleteRouteCalculator'</a>,
--   <a>deleteRouteCalculator_calculatorName</a> - The name of the route
--   calculator resource to be deleted.
newDeleteRouteCalculator :: Text -> DeleteRouteCalculator

-- | <i>See:</i> <a>newDeleteRouteCalculatorResponse</a> smart constructor.
data DeleteRouteCalculatorResponse
DeleteRouteCalculatorResponse' :: Int -> DeleteRouteCalculatorResponse

-- | Create a value of <a>DeleteRouteCalculatorResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteRouteCalculatorResponse'</a>,
--   <a>deleteRouteCalculatorResponse_httpStatus</a> - The response's http
--   status code.
newDeleteRouteCalculatorResponse :: Int -> DeleteRouteCalculatorResponse

-- | <i>See:</i> <a>newUpdateRouteCalculator</a> smart constructor.
data UpdateRouteCalculator
UpdateRouteCalculator' :: Maybe PricingPlan -> Maybe Text -> Text -> UpdateRouteCalculator

-- | Create a value of <a>UpdateRouteCalculator</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pricingPlan:UpdateRouteCalculator'</a>,
--   <a>updateRouteCalculator_pricingPlan</a> - Updates the pricing plan
--   for the route calculator resource.
--   
--   For more information about each pricing plan option restrictions, see
--   <a>Amazon Location Service pricing</a>.
--   
--   <a>$sel:description:UpdateRouteCalculator'</a>,
--   <a>updateRouteCalculator_description</a> - Updates the description for
--   the route calculator resource.
--   
--   <a>$sel:calculatorName:UpdateRouteCalculator'</a>,
--   <a>updateRouteCalculator_calculatorName</a> - The name of the route
--   calculator resource to update.
newUpdateRouteCalculator :: Text -> UpdateRouteCalculator

-- | <i>See:</i> <a>newUpdateRouteCalculatorResponse</a> smart constructor.
data UpdateRouteCalculatorResponse
UpdateRouteCalculatorResponse' :: Int -> Text -> Text -> POSIX -> UpdateRouteCalculatorResponse

-- | Create a value of <a>UpdateRouteCalculatorResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateRouteCalculatorResponse'</a>,
--   <a>updateRouteCalculatorResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:calculatorArn:UpdateRouteCalculatorResponse'</a>,
--   <a>updateRouteCalculatorResponse_calculatorArn</a> - The Amazon
--   Resource Name (ARN) of the updated route calculator resource. Used to
--   specify a resource across AWS.
--   
--   <ul>
--   <li>Format example: <tt>arn:aws:geo:region:account-id:route-
--   calculator/ExampleCalculator</tt></li>
--   </ul>
--   
--   <a>$sel:calculatorName:UpdateRouteCalculator'</a>,
--   <a>updateRouteCalculatorResponse_calculatorName</a> - The name of the
--   updated route calculator resource.
--   
--   <a>$sel:updateTime:UpdateRouteCalculatorResponse'</a>,
--   <a>updateRouteCalculatorResponse_updateTime</a> - The timestamp for
--   when the route calculator was last updated in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
newUpdateRouteCalculatorResponse :: Int -> Text -> Text -> UTCTime -> UpdateRouteCalculatorResponse

-- | <i>See:</i> <a>newCreateGeofenceCollection</a> smart constructor.
data CreateGeofenceCollection
CreateGeofenceCollection' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> PricingPlan -> CreateGeofenceCollection

-- | Create a value of <a>CreateGeofenceCollection</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pricingPlanDataSource:CreateGeofenceCollection'</a>,
--   <a>createGeofenceCollection_pricingPlanDataSource</a> - Specifies the
--   data provider for the geofence collection.
--   
--   <ul>
--   <li>Required value for the following pricing plans:
--   <tt>MobileAssetTracking </tt>| <tt>MobileAssetManagement</tt></li>
--   </ul>
--   
--   For more information about <a>Data Providers</a>, and <a>Pricing
--   plans</a>, see the Amazon Location Service product page.
--   
--   Amazon Location Service only uses <tt>PricingPlanDataSource</tt> to
--   calculate billing for your geofence collection. Your data won't be
--   shared with the data provider, and will remain in your AWS account or
--   Region unless you move it.
--   
--   Valid Values: <tt>Esri </tt>| <tt>Here</tt>
--   
--   <a>$sel:kmsKeyId:CreateGeofenceCollection'</a>,
--   <a>createGeofenceCollection_kmsKeyId</a> - A key identifier for an
--   <a>AWS KMS customer managed key</a>. Enter a key ID, key ARN, alias
--   name, or alias ARN.
--   
--   <a>$sel:description:CreateGeofenceCollection'</a>,
--   <a>createGeofenceCollection_description</a> - An optional description
--   for the geofence collection.
--   
--   <a>$sel:tags:CreateGeofenceCollection'</a>,
--   <a>createGeofenceCollection_tags</a> - Applies one or more tags to the
--   geofence collection. A tag is a key-value pair helps manage, identify,
--   search, and filter your resources by labelling them.
--   
--   Format: <tt>"key" : "value"</tt>
--   
--   Restrictions:
--   
--   <ul>
--   <li>Maximum 50 tags per resource</li>
--   <li>Each resource tag must be unique with a maximum of one value.</li>
--   <li>Maximum key length: 128 Unicode characters in UTF-8</li>
--   <li>Maximum value length: 256 Unicode characters in UTF-8</li>
--   <li>Can use alphanumeric characters (A–Z, a–z, 0–9), and the following
--   characters: + - = . _ : / @.</li>
--   </ul>
--   
--   <a>$sel:collectionName:CreateGeofenceCollection'</a>,
--   <a>createGeofenceCollection_collectionName</a> - A custom name for the
--   geofence collection.
--   
--   Requirements:
--   
--   <ul>
--   <li>Contain only alphanumeric characters (A–Z, a–z, 0–9), hyphens (-),
--   periods (.), and underscores (_).</li>
--   <li>Must be a unique geofence collection name.</li>
--   <li>No spaces allowed. For example,
--   <tt>ExampleGeofenceCollection</tt>.</li>
--   </ul>
--   
--   <a>$sel:pricingPlan:CreateGeofenceCollection'</a>,
--   <a>createGeofenceCollection_pricingPlan</a> - Specifies the pricing
--   plan for the geofence collection.
--   
--   For additional details and restrictions on each pricing plan option,
--   see the <a>Amazon Location Service pricing page</a>.
newCreateGeofenceCollection :: Text -> PricingPlan -> CreateGeofenceCollection

-- | <i>See:</i> <a>newCreateGeofenceCollectionResponse</a> smart
--   constructor.
data CreateGeofenceCollectionResponse
CreateGeofenceCollectionResponse' :: Int -> Text -> Text -> POSIX -> CreateGeofenceCollectionResponse

-- | Create a value of <a>CreateGeofenceCollectionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateGeofenceCollectionResponse'</a>,
--   <a>createGeofenceCollectionResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:collectionArn:CreateGeofenceCollectionResponse'</a>,
--   <a>createGeofenceCollectionResponse_collectionArn</a> - The Amazon
--   Resource Name (ARN) for the geofence collection resource. Used when
--   you need to specify a resource across all AWS.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:geofence-collection/ExampleGeofenceCollection</tt></li>
--   </ul>
--   
--   <a>$sel:collectionName:CreateGeofenceCollection'</a>,
--   <a>createGeofenceCollectionResponse_collectionName</a> - The name for
--   the geofence collection.
--   
--   <a>$sel:createTime:CreateGeofenceCollectionResponse'</a>,
--   <a>createGeofenceCollectionResponse_createTime</a> - The timestamp for
--   when the geofence collection was created in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
newCreateGeofenceCollectionResponse :: Int -> Text -> Text -> UTCTime -> CreateGeofenceCollectionResponse

-- | <i>See:</i> <a>newListRouteCalculators</a> smart constructor.
data ListRouteCalculators
ListRouteCalculators' :: Maybe Text -> Maybe Natural -> ListRouteCalculators

-- | Create a value of <a>ListRouteCalculators</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListRouteCalculators'</a>,
--   <a>listRouteCalculators_nextToken</a> - The pagination token
--   specifying which page of results to return in the response. If no
--   token is provided, the default page is the first page.
--   
--   Default Value: <tt>null</tt>
--   
--   <a>$sel:maxResults:ListRouteCalculators'</a>,
--   <a>listRouteCalculators_maxResults</a> - An optional maximum number of
--   results returned in a single call.
--   
--   Default Value: <tt>100</tt>
newListRouteCalculators :: ListRouteCalculators

-- | <i>See:</i> <a>newListRouteCalculatorsResponse</a> smart constructor.
data ListRouteCalculatorsResponse
ListRouteCalculatorsResponse' :: Maybe Text -> Int -> [ListRouteCalculatorsResponseEntry] -> ListRouteCalculatorsResponse

-- | Create a value of <a>ListRouteCalculatorsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListRouteCalculators'</a>,
--   <a>listRouteCalculatorsResponse_nextToken</a> - A pagination token
--   indicating there are additional pages available. You can use the token
--   in a subsequent request to fetch the next set of results.
--   
--   <a>$sel:httpStatus:ListRouteCalculatorsResponse'</a>,
--   <a>listRouteCalculatorsResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:entries:ListRouteCalculatorsResponse'</a>,
--   <a>listRouteCalculatorsResponse_entries</a> - Lists the route
--   calculator resources that exist in your AWS account
newListRouteCalculatorsResponse :: Int -> ListRouteCalculatorsResponse

-- | <i>See:</i> <a>newCreateTracker</a> smart constructor.
data CreateTracker
CreateTracker' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe PositionFiltering -> PricingPlan -> Text -> CreateTracker

-- | Create a value of <a>CreateTracker</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pricingPlanDataSource:CreateTracker'</a>,
--   <a>createTracker_pricingPlanDataSource</a> - Specifies the data
--   provider for the tracker resource.
--   
--   <ul>
--   <li>Required value for the following pricing plans:
--   <tt>MobileAssetTracking </tt>| <tt>MobileAssetManagement</tt></li>
--   </ul>
--   
--   For more information about <a>Data Providers</a>, and <a>Pricing
--   plans</a>, see the Amazon Location Service product page.
--   
--   Amazon Location Service only uses <tt>PricingPlanDataSource</tt> to
--   calculate billing for your tracker resource. Your data will not be
--   shared with the data provider, and will remain in your AWS account or
--   Region unless you move it.
--   
--   Valid values: <tt>Esri</tt> | <tt>Here</tt>
--   
--   <a>$sel:kmsKeyId:CreateTracker'</a>, <a>createTracker_kmsKeyId</a> - A
--   key identifier for an <a>AWS KMS customer managed key</a>. Enter a key
--   ID, key ARN, alias name, or alias ARN.
--   
--   <a>$sel:description:CreateTracker'</a>,
--   <a>createTracker_description</a> - An optional description for the
--   tracker resource.
--   
--   <a>$sel:tags:CreateTracker'</a>, <a>createTracker_tags</a> - Applies
--   one or more tags to the tracker resource. A tag is a key-value pair
--   helps manage, identify, search, and filter your resources by labelling
--   them.
--   
--   Format: <tt>"key" : "value"</tt>
--   
--   Restrictions:
--   
--   <ul>
--   <li>Maximum 50 tags per resource</li>
--   <li>Each resource tag must be unique with a maximum of one value.</li>
--   <li>Maximum key length: 128 Unicode characters in UTF-8</li>
--   <li>Maximum value length: 256 Unicode characters in UTF-8</li>
--   <li>Can use alphanumeric characters (A–Z, a–z, 0–9), and the following
--   characters: + - = . _ : / @.</li>
--   </ul>
--   
--   <a>$sel:positionFiltering:CreateTracker'</a>,
--   <a>createTracker_positionFiltering</a> - Specifies the position
--   filtering for the tracker resource.
--   
--   Valid values:
--   
--   <ul>
--   <li><tt>TimeBased</tt> - Location updates are evaluated against linked
--   geofence collections, but not every location update is stored. If your
--   update frequency is more often than 30 seconds, only one update per 30
--   seconds is stored for each unique device ID.</li>
--   <li><tt>DistanceBased</tt> - If the device has moved less than 30 m
--   (98.4 ft), location updates are ignored. Location updates within this
--   distance are neither evaluated against linked geofence collections,
--   nor stored. This helps control costs by reducing the number of
--   geofence evaluations and device positions to retrieve. Distance-based
--   filtering can also reduce the jitter effect when displaying device
--   trajectory on a map.</li>
--   </ul>
--   
--   This field is optional. If not specified, the default value is
--   <tt>TimeBased</tt>.
--   
--   <a>$sel:pricingPlan:CreateTracker'</a>,
--   <a>createTracker_pricingPlan</a> - Specifies the pricing plan for the
--   tracker resource.
--   
--   For additional details and restrictions on each pricing plan option,
--   see <a>Amazon Location Service pricing</a>.
--   
--   <a>$sel:trackerName:CreateTracker'</a>,
--   <a>createTracker_trackerName</a> - The name for the tracker resource.
--   
--   Requirements:
--   
--   <ul>
--   <li>Contain only alphanumeric characters (A-Z, a-z, 0-9) , hyphens
--   (-), periods (.), and underscores (_).</li>
--   <li>Must be a unique tracker resource name.</li>
--   <li>No spaces allowed. For example, <tt>ExampleTracker</tt>.</li>
--   </ul>
newCreateTracker :: PricingPlan -> Text -> CreateTracker

-- | <i>See:</i> <a>newCreateTrackerResponse</a> smart constructor.
data CreateTrackerResponse
CreateTrackerResponse' :: Int -> POSIX -> Text -> Text -> CreateTrackerResponse

-- | Create a value of <a>CreateTrackerResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateTrackerResponse'</a>,
--   <a>createTrackerResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:createTime:CreateTrackerResponse'</a>,
--   <a>createTrackerResponse_createTime</a> - The timestamp for when the
--   tracker resource was created in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
--   
--   <a>$sel:trackerArn:CreateTrackerResponse'</a>,
--   <a>createTrackerResponse_trackerArn</a> - The Amazon Resource Name
--   (ARN) for the tracker resource. Used when you need to specify a
--   resource across all AWS.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:tracker/ExampleTracker</tt></li>
--   </ul>
--   
--   <a>$sel:trackerName:CreateTracker'</a>,
--   <a>createTrackerResponse_trackerName</a> - The name of the tracker
--   resource.
newCreateTrackerResponse :: Int -> UTCTime -> Text -> Text -> CreateTrackerResponse

-- | <i>See:</i> <a>newListTrackerConsumers</a> smart constructor.
data ListTrackerConsumers
ListTrackerConsumers' :: Maybe Text -> Maybe Natural -> Text -> ListTrackerConsumers

-- | Create a value of <a>ListTrackerConsumers</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTrackerConsumers'</a>,
--   <a>listTrackerConsumers_nextToken</a> - The pagination token
--   specifying which page of results to return in the response. If no
--   token is provided, the default page is the first page.
--   
--   Default value: <tt>null</tt>
--   
--   <a>$sel:maxResults:ListTrackerConsumers'</a>,
--   <a>listTrackerConsumers_maxResults</a> - An optional limit for the
--   number of resources returned in a single call.
--   
--   Default value: <tt>100</tt>
--   
--   <a>$sel:trackerName:ListTrackerConsumers'</a>,
--   <a>listTrackerConsumers_trackerName</a> - The tracker resource whose
--   associated geofence collections you want to list.
newListTrackerConsumers :: Text -> ListTrackerConsumers

-- | <i>See:</i> <a>newListTrackerConsumersResponse</a> smart constructor.
data ListTrackerConsumersResponse
ListTrackerConsumersResponse' :: Maybe Text -> Int -> [Text] -> ListTrackerConsumersResponse

-- | Create a value of <a>ListTrackerConsumersResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTrackerConsumers'</a>,
--   <a>listTrackerConsumersResponse_nextToken</a> - A pagination token
--   indicating there are additional pages available. You can use the token
--   in a following request to fetch the next set of results.
--   
--   <a>$sel:httpStatus:ListTrackerConsumersResponse'</a>,
--   <a>listTrackerConsumersResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:consumerArns:ListTrackerConsumersResponse'</a>,
--   <a>listTrackerConsumersResponse_consumerArns</a> - Contains the list
--   of geofence collection ARNs associated to the tracker resource.
newListTrackerConsumersResponse :: Int -> ListTrackerConsumersResponse

-- | <i>See:</i> <a>newGetDevicePosition</a> smart constructor.
data GetDevicePosition
GetDevicePosition' :: Text -> Text -> GetDevicePosition

-- | Create a value of <a>GetDevicePosition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceId:GetDevicePosition'</a>,
--   <a>getDevicePosition_deviceId</a> - The device whose position you want
--   to retrieve.
--   
--   <a>$sel:trackerName:GetDevicePosition'</a>,
--   <a>getDevicePosition_trackerName</a> - The tracker resource receiving
--   the position update.
newGetDevicePosition :: Text -> Text -> GetDevicePosition

-- | <i>See:</i> <a>newGetDevicePositionResponse</a> smart constructor.
data GetDevicePositionResponse
GetDevicePositionResponse' :: Maybe Text -> Int -> Sensitive (NonEmpty Double) -> POSIX -> POSIX -> GetDevicePositionResponse

-- | Create a value of <a>GetDevicePositionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceId:GetDevicePosition'</a>,
--   <a>getDevicePositionResponse_deviceId</a> - The device whose position
--   you retrieved.
--   
--   <a>$sel:httpStatus:GetDevicePositionResponse'</a>,
--   <a>getDevicePositionResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:position:GetDevicePositionResponse'</a>,
--   <a>getDevicePositionResponse_position</a> - The last known device
--   position.
--   
--   <a>$sel:receivedTime:GetDevicePositionResponse'</a>,
--   <a>getDevicePositionResponse_receivedTime</a> - The timestamp for when
--   the tracker resource received the device position in <a>ISO 8601</a>
--   format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
--   
--   <a>$sel:sampleTime:GetDevicePositionResponse'</a>,
--   <a>getDevicePositionResponse_sampleTime</a> - The timestamp at which
--   the device's position was determined. Uses <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
newGetDevicePositionResponse :: Int -> NonEmpty Double -> UTCTime -> UTCTime -> GetDevicePositionResponse

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The Amazon Resource Name
--   (ARN) of the resource whose tags you want to retrieve.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:resourcetype/ExampleResource</tt></li>
--   </ul>
newListTagsForResource :: Text -> ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe (HashMap Text Text) -> Int -> ListTagsForResourceResponse

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - Tags that have been applied
--   to the specified resource. Tags are mapped from the tag key to the tag
--   value: <tt>"TagKey" : "TagValue"</tt>.
--   
--   <ul>
--   <li>Format example: <tt>{"tag1" : "value1", "tag2" : "value2"}
--   </tt></li>
--   </ul>
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | <i>See:</i> <a>newSearchPlaceIndexForText</a> smart constructor.
data SearchPlaceIndexForText
SearchPlaceIndexForText' :: Maybe (Sensitive (NonEmpty Double)) -> Maybe (Sensitive (NonEmpty Double)) -> Maybe (NonEmpty Text) -> Maybe Natural -> Text -> Sensitive Text -> SearchPlaceIndexForText

-- | Create a value of <a>SearchPlaceIndexForText</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filterBBox:SearchPlaceIndexForText'</a>,
--   <a>searchPlaceIndexForText_filterBBox</a> - Filters the results by
--   returning only Places within the provided bounding box. An optional
--   parameter.
--   
--   The first 2 <tt>bbox</tt> parameters describe the lower southwest
--   corner:
--   
--   <ul>
--   <li>The first <tt>bbox</tt> position is the X coordinate or longitude
--   of the lower southwest corner.</li>
--   <li>The second <tt>bbox</tt> position is the Y coordinate or latitude
--   of the lower southwest corner.</li>
--   </ul>
--   
--   For example, <tt>bbox=xLongitudeSW&amp;bbox=yLatitudeSW</tt>.
--   
--   The next <tt>bbox</tt> parameters describe the upper northeast corner:
--   
--   <ul>
--   <li>The third <tt>bbox</tt> position is the X coordinate, or longitude
--   of the upper northeast corner.</li>
--   <li>The fourth <tt>bbox</tt> position is the Y coordinate, or
--   longitude of the upper northeast corner.</li>
--   </ul>
--   
--   For example, <tt>bbox=xLongitudeNE&amp;bbox=yLatitudeNE</tt>
--   
--   <a>$sel:biasPosition:SearchPlaceIndexForText'</a>,
--   <a>searchPlaceIndexForText_biasPosition</a> - Searches for results
--   closest to the given position. An optional parameter defined by
--   longitude, and latitude.
--   
--   <ul>
--   <li>The first <tt>bias</tt> position is the X coordinate, or
--   longitude.</li>
--   <li>The second <tt>bias</tt> position is the Y coordinate, or
--   latitude.</li>
--   </ul>
--   
--   For example, <tt>bias=xLongitude&amp;bias=yLatitude</tt>.
--   
--   <a>$sel:filterCountries:SearchPlaceIndexForText'</a>,
--   <a>searchPlaceIndexForText_filterCountries</a> - Limits the search to
--   the given a list of countries/regions. An optional parameter.
--   
--   <ul>
--   <li>Use the <a>ISO 3166</a> 3-digit country code. For example,
--   Australia uses three upper-case characters: <tt>AUS</tt>.</li>
--   </ul>
--   
--   <a>$sel:maxResults:SearchPlaceIndexForText'</a>,
--   <a>searchPlaceIndexForText_maxResults</a> - An optional parameter. The
--   maximum number of results returned per request.
--   
--   The default: <tt>50</tt>
--   
--   <a>$sel:indexName:SearchPlaceIndexForText'</a>,
--   <a>searchPlaceIndexForText_indexName</a> - The name of the place index
--   resource you want to use for the search.
--   
--   <a>$sel:text:SearchPlaceIndexForText'</a>,
--   <a>searchPlaceIndexForText_text</a> - The address, name, city, or
--   region to be used in the search. In free-form text format. For
--   example, <tt>123 Any Street</tt>.
newSearchPlaceIndexForText :: Text -> Text -> SearchPlaceIndexForText

-- | <i>See:</i> <a>newSearchPlaceIndexForTextResponse</a> smart
--   constructor.
data SearchPlaceIndexForTextResponse
SearchPlaceIndexForTextResponse' :: Int -> [SearchForTextResult] -> SearchPlaceIndexForTextSummary -> SearchPlaceIndexForTextResponse

-- | Create a value of <a>SearchPlaceIndexForTextResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:SearchPlaceIndexForTextResponse'</a>,
--   <a>searchPlaceIndexForTextResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:results:SearchPlaceIndexForTextResponse'</a>,
--   <a>searchPlaceIndexForTextResponse_results</a> - A list of Places
--   closest to the specified position. Each result contains additional
--   information about the specific point of interest.
--   
--   <a>$sel:summary:SearchPlaceIndexForTextResponse'</a>,
--   <a>searchPlaceIndexForTextResponse_summary</a> - Contains a summary of
--   the request. Contains the <tt>BiasPosition</tt>, <tt>DataSource</tt>,
--   <tt>FilterBBox</tt>, <tt>FilterCountries</tt>, <tt>MaxResults</tt>,
--   <tt>ResultBBox</tt>, and <tt>Text</tt>.
newSearchPlaceIndexForTextResponse :: Int -> SearchPlaceIndexForTextSummary -> SearchPlaceIndexForTextResponse

-- | <i>See:</i> <a>newDescribeGeofenceCollection</a> smart constructor.
data DescribeGeofenceCollection
DescribeGeofenceCollection' :: Text -> DescribeGeofenceCollection

-- | Create a value of <a>DescribeGeofenceCollection</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:collectionName:DescribeGeofenceCollection'</a>,
--   <a>describeGeofenceCollection_collectionName</a> - The name of the
--   geofence collection.
newDescribeGeofenceCollection :: Text -> DescribeGeofenceCollection

-- | <i>See:</i> <a>newDescribeGeofenceCollectionResponse</a> smart
--   constructor.
data DescribeGeofenceCollectionResponse
DescribeGeofenceCollectionResponse' :: Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Int -> Text -> Text -> POSIX -> Text -> PricingPlan -> POSIX -> DescribeGeofenceCollectionResponse

-- | Create a value of <a>DescribeGeofenceCollectionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pricingPlanDataSource:DescribeGeofenceCollectionResponse'</a>,
--   <a>describeGeofenceCollectionResponse_pricingPlanDataSource</a> - The
--   specified data provider for the geofence collection.
--   
--   <a>$sel:kmsKeyId:DescribeGeofenceCollectionResponse'</a>,
--   <a>describeGeofenceCollectionResponse_kmsKeyId</a> - A key identifier
--   for an <a>AWS KMS customer managed key</a> assigned to the Amazon
--   Location resource
--   
--   <a>$sel:tags:DescribeGeofenceCollectionResponse'</a>,
--   <a>describeGeofenceCollectionResponse_tags</a> - Displays the key,
--   value pairs of tags associated with this resource.
--   
--   <a>$sel:httpStatus:DescribeGeofenceCollectionResponse'</a>,
--   <a>describeGeofenceCollectionResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:collectionArn:DescribeGeofenceCollectionResponse'</a>,
--   <a>describeGeofenceCollectionResponse_collectionArn</a> - The Amazon
--   Resource Name (ARN) for the geofence collection resource. Used when
--   you need to specify a resource across all AWS.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:geofence-collection/ExampleGeofenceCollection</tt></li>
--   </ul>
--   
--   <a>$sel:collectionName:DescribeGeofenceCollection'</a>,
--   <a>describeGeofenceCollectionResponse_collectionName</a> - The name of
--   the geofence collection.
--   
--   <a>$sel:createTime:DescribeGeofenceCollectionResponse'</a>,
--   <a>describeGeofenceCollectionResponse_createTime</a> - The timestamp
--   for when the geofence resource was created in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
--   
--   <a>$sel:description:DescribeGeofenceCollectionResponse'</a>,
--   <a>describeGeofenceCollectionResponse_description</a> - The optional
--   description for the geofence collection.
--   
--   <a>$sel:pricingPlan:DescribeGeofenceCollectionResponse'</a>,
--   <a>describeGeofenceCollectionResponse_pricingPlan</a> - The pricing
--   plan selected for the specified geofence collection.
--   
--   For additional details and restrictions on each pricing plan option,
--   see the <a>Amazon Location Service pricing page</a>.
--   
--   <a>$sel:updateTime:DescribeGeofenceCollectionResponse'</a>,
--   <a>describeGeofenceCollectionResponse_updateTime</a> - The timestamp
--   for when the geofence collection was last updated in <a>ISO 8601</a>
--   format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
newDescribeGeofenceCollectionResponse :: Int -> Text -> Text -> UTCTime -> Text -> PricingPlan -> UTCTime -> DescribeGeofenceCollectionResponse

-- | <i>See:</i> <a>newListMaps</a> smart constructor.
data ListMaps
ListMaps' :: Maybe Text -> Maybe Natural -> ListMaps

-- | Create a value of <a>ListMaps</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListMaps'</a>, <a>listMaps_nextToken</a> - The
--   pagination token specifying which page of results to return in the
--   response. If no token is provided, the default page is the first page.
--   
--   Default value: <tt>null</tt>
--   
--   <a>$sel:maxResults:ListMaps'</a>, <a>listMaps_maxResults</a> - An
--   optional limit for the number of resources returned in a single call.
--   
--   Default value: <tt>100</tt>
newListMaps :: ListMaps

-- | <i>See:</i> <a>newListMapsResponse</a> smart constructor.
data ListMapsResponse
ListMapsResponse' :: Maybe Text -> Int -> [ListMapsResponseEntry] -> ListMapsResponse

-- | Create a value of <a>ListMapsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListMaps'</a>, <a>listMapsResponse_nextToken</a> - A
--   pagination token indicating there are additional pages available. You
--   can use the token in a following request to fetch the next set of
--   results.
--   
--   <a>$sel:httpStatus:ListMapsResponse'</a>,
--   <a>listMapsResponse_httpStatus</a> - The response's http status code.
--   
--   <a>$sel:entries:ListMapsResponse'</a>, <a>listMapsResponse_entries</a>
--   - Contains a list of maps in your AWS account
newListMapsResponse :: Int -> ListMapsResponse

-- | <i>See:</i> <a>newGetMapSprites</a> smart constructor.
data GetMapSprites
GetMapSprites' :: Text -> Text -> GetMapSprites

-- | Create a value of <a>GetMapSprites</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fileName:GetMapSprites'</a>, <a>getMapSprites_fileName</a> -
--   The name of the sprite ﬁle. Use the following ﬁle names for the sprite
--   sheet:
--   
--   <ul>
--   <li><pre>sprites.png</pre></li>
--   <li><tt>sprites@2x.png</tt> for high pixel density displays</li>
--   </ul>
--   
--   For the JSON document contain image offsets. Use the following ﬁle
--   names:
--   
--   <ul>
--   <li><pre>sprites.json</pre></li>
--   <li><tt>sprites@2x.json</tt> for high pixel density displays</li>
--   </ul>
--   
--   <a>$sel:mapName:GetMapSprites'</a>, <a>getMapSprites_mapName</a> - The
--   map resource associated with the sprite ﬁle.
newGetMapSprites :: Text -> Text -> GetMapSprites

-- | <i>See:</i> <a>newGetMapSpritesResponse</a> smart constructor.
data GetMapSpritesResponse
GetMapSpritesResponse' :: Maybe ByteString -> Maybe Text -> Int -> GetMapSpritesResponse

-- | Create a value of <a>GetMapSpritesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:blob:GetMapSpritesResponse'</a>,
--   <a>getMapSpritesResponse_blob</a> - Contains the body of the sprite
--   sheet or JSON offset ﬁle.
--   
--   <a>$sel:contentType:GetMapSpritesResponse'</a>,
--   <a>getMapSpritesResponse_contentType</a> - The content type of the
--   sprite sheet and offsets. For example, the sprite sheet content type
--   is <tt>image/png</tt>, and the sprite offset JSON document is
--   <tt>application/json</tt>.
--   
--   <a>$sel:httpStatus:GetMapSpritesResponse'</a>,
--   <a>getMapSpritesResponse_httpStatus</a> - The response's http status
--   code.
newGetMapSpritesResponse :: Int -> GetMapSpritesResponse

-- | <i>See:</i> <a>newCreateMap</a> smart constructor.
data CreateMap
CreateMap' :: Maybe Text -> Maybe (HashMap Text Text) -> MapConfiguration -> Text -> PricingPlan -> CreateMap

-- | Create a value of <a>CreateMap</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:CreateMap'</a>, <a>createMap_description</a> - An
--   optional description for the map resource.
--   
--   <a>$sel:tags:CreateMap'</a>, <a>createMap_tags</a> - Applies one or
--   more tags to the map resource. A tag is a key-value pair helps manage,
--   identify, search, and filter your resources by labelling them.
--   
--   Format: <tt>"key" : "value"</tt>
--   
--   Restrictions:
--   
--   <ul>
--   <li>Maximum 50 tags per resource</li>
--   <li>Each resource tag must be unique with a maximum of one value.</li>
--   <li>Maximum key length: 128 Unicode characters in UTF-8</li>
--   <li>Maximum value length: 256 Unicode characters in UTF-8</li>
--   <li>Can use alphanumeric characters (A–Z, a–z, 0–9), and the following
--   characters: + - = . _ : / @.</li>
--   </ul>
--   
--   <a>$sel:configuration:CreateMap'</a>, <a>createMap_configuration</a> -
--   Specifies the map style selected from an available data provider.
--   
--   <a>$sel:mapName:CreateMap'</a>, <a>createMap_mapName</a> - The name
--   for the map resource.
--   
--   Requirements:
--   
--   <ul>
--   <li>Must contain only alphanumeric characters (A–Z, a–z, 0–9), hyphens
--   (-), periods (.), and underscores (_).</li>
--   <li>Must be a unique map resource name.</li>
--   <li>No spaces allowed. For example, <tt>ExampleMap</tt>.</li>
--   </ul>
--   
--   <a>$sel:pricingPlan:CreateMap'</a>, <a>createMap_pricingPlan</a> -
--   Specifies the pricing plan for your map resource.
--   
--   For additional details and restrictions on each pricing plan option,
--   see <a>Amazon Location Service pricing</a>.
newCreateMap :: MapConfiguration -> Text -> PricingPlan -> CreateMap

-- | <i>See:</i> <a>newCreateMapResponse</a> smart constructor.
data CreateMapResponse
CreateMapResponse' :: Int -> POSIX -> Text -> Text -> CreateMapResponse

-- | Create a value of <a>CreateMapResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateMapResponse'</a>,
--   <a>createMapResponse_httpStatus</a> - The response's http status code.
--   
--   <a>$sel:createTime:CreateMapResponse'</a>,
--   <a>createMapResponse_createTime</a> - The timestamp for when the map
--   resource was created in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
--   
--   <a>$sel:mapArn:CreateMapResponse'</a>, <a>createMapResponse_mapArn</a>
--   - The Amazon Resource Name (ARN) for the map resource. Used to specify
--   a resource across all AWS.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:maps/ExampleMap</tt></li>
--   </ul>
--   
--   <a>$sel:mapName:CreateMap'</a>, <a>createMapResponse_mapName</a> - The
--   name of the map resource.
newCreateMapResponse :: Int -> UTCTime -> Text -> Text -> CreateMapResponse

-- | <i>See:</i> <a>newDescribeRouteCalculator</a> smart constructor.
data DescribeRouteCalculator
DescribeRouteCalculator' :: Text -> DescribeRouteCalculator

-- | Create a value of <a>DescribeRouteCalculator</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:calculatorName:DescribeRouteCalculator'</a>,
--   <a>describeRouteCalculator_calculatorName</a> - The name of the route
--   calculator resource.
newDescribeRouteCalculator :: Text -> DescribeRouteCalculator

-- | <i>See:</i> <a>newDescribeRouteCalculatorResponse</a> smart
--   constructor.
data DescribeRouteCalculatorResponse
DescribeRouteCalculatorResponse' :: Maybe (HashMap Text Text) -> Int -> Text -> Text -> POSIX -> Text -> Text -> PricingPlan -> POSIX -> DescribeRouteCalculatorResponse

-- | Create a value of <a>DescribeRouteCalculatorResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:DescribeRouteCalculatorResponse'</a>,
--   <a>describeRouteCalculatorResponse_tags</a> - Tags associated with
--   route calculator resource.
--   
--   <a>$sel:httpStatus:DescribeRouteCalculatorResponse'</a>,
--   <a>describeRouteCalculatorResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:calculatorArn:DescribeRouteCalculatorResponse'</a>,
--   <a>describeRouteCalculatorResponse_calculatorArn</a> - The Amazon
--   Resource Name (ARN) for the Route calculator resource. Use the ARN
--   when you specify a resource across AWS.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:route-calculator/ExampleCalculator</tt></li>
--   </ul>
--   
--   <a>$sel:calculatorName:DescribeRouteCalculator'</a>,
--   <a>describeRouteCalculatorResponse_calculatorName</a> - The name of
--   the route calculator resource being described.
--   
--   <a>$sel:createTime:DescribeRouteCalculatorResponse'</a>,
--   <a>describeRouteCalculatorResponse_createTime</a> - The timestamp when
--   the route calculator resource was created in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
--   
--   <ul>
--   <li>For example, <tt>2020–07-2T12:15:20.000Z+01:00</tt></li>
--   </ul>
--   
--   <a>$sel:dataSource:DescribeRouteCalculatorResponse'</a>,
--   <a>describeRouteCalculatorResponse_dataSource</a> - The data provider
--   of traffic and road network data. Indicates one of the available
--   providers:
--   
--   <ul>
--   <li><pre>Esri</pre></li>
--   <li><pre>Here</pre></li>
--   </ul>
--   
--   For more information about data providers, see <a>Amazon Location
--   Service data providers</a>.
--   
--   <a>$sel:description:DescribeRouteCalculatorResponse'</a>,
--   <a>describeRouteCalculatorResponse_description</a> - The optional
--   description of the route calculator resource.
--   
--   <a>$sel:pricingPlan:DescribeRouteCalculatorResponse'</a>,
--   <a>describeRouteCalculatorResponse_pricingPlan</a> - The pricing plan
--   selected for the specified route calculator resource.
--   
--   For additional details and restrictions on each pricing plan option,
--   see <a>Amazon Location Service pricing</a>.
--   
--   <a>$sel:updateTime:DescribeRouteCalculatorResponse'</a>,
--   <a>describeRouteCalculatorResponse_updateTime</a> - The timestamp when
--   the route calculator resource was last updated in <a>ISO 8601</a>
--   format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
--   
--   <ul>
--   <li>For example, <tt>2020–07-2T12:15:20.000Z+01:00</tt></li>
--   </ul>
newDescribeRouteCalculatorResponse :: Int -> Text -> Text -> UTCTime -> Text -> Text -> PricingPlan -> UTCTime -> DescribeRouteCalculatorResponse

-- | <i>See:</i> <a>newBatchGetDevicePosition</a> smart constructor.
data BatchGetDevicePosition
BatchGetDevicePosition' :: NonEmpty Text -> Text -> BatchGetDevicePosition

-- | Create a value of <a>BatchGetDevicePosition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceIds:BatchGetDevicePosition'</a>,
--   <a>batchGetDevicePosition_deviceIds</a> - Devices whose position you
--   want to retrieve.
--   
--   <ul>
--   <li>For example, for two devices:
--   <tt>device-ids=DeviceId1&amp;device-ids=DeviceId2</tt></li>
--   </ul>
--   
--   <a>$sel:trackerName:BatchGetDevicePosition'</a>,
--   <a>batchGetDevicePosition_trackerName</a> - The tracker resource
--   retrieving the device position.
newBatchGetDevicePosition :: NonEmpty Text -> Text -> BatchGetDevicePosition

-- | <i>See:</i> <a>newBatchGetDevicePositionResponse</a> smart
--   constructor.
data BatchGetDevicePositionResponse
BatchGetDevicePositionResponse' :: Int -> [DevicePosition] -> [BatchGetDevicePositionError] -> BatchGetDevicePositionResponse

-- | Create a value of <a>BatchGetDevicePositionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:BatchGetDevicePositionResponse'</a>,
--   <a>batchGetDevicePositionResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:devicePositions:BatchGetDevicePositionResponse'</a>,
--   <a>batchGetDevicePositionResponse_devicePositions</a> - Contains
--   device position details such as the device ID, position, and
--   timestamps for when the position was received and sampled.
--   
--   <a>$sel:errors:BatchGetDevicePositionResponse'</a>,
--   <a>batchGetDevicePositionResponse_errors</a> - Contains error details
--   for each device that failed to send its position to the tracker
--   resource.
newBatchGetDevicePositionResponse :: Int -> BatchGetDevicePositionResponse

-- | <i>See:</i> <a>newGetMapStyleDescriptor</a> smart constructor.
data GetMapStyleDescriptor
GetMapStyleDescriptor' :: Text -> GetMapStyleDescriptor

-- | Create a value of <a>GetMapStyleDescriptor</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mapName:GetMapStyleDescriptor'</a>,
--   <a>getMapStyleDescriptor_mapName</a> - The map resource to retrieve
--   the style descriptor from.
newGetMapStyleDescriptor :: Text -> GetMapStyleDescriptor

-- | <i>See:</i> <a>newGetMapStyleDescriptorResponse</a> smart constructor.
data GetMapStyleDescriptorResponse
GetMapStyleDescriptorResponse' :: Maybe ByteString -> Maybe Text -> Int -> GetMapStyleDescriptorResponse

-- | Create a value of <a>GetMapStyleDescriptorResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:blob:GetMapStyleDescriptorResponse'</a>,
--   <a>getMapStyleDescriptorResponse_blob</a> - Contains the body of the
--   style descriptor.
--   
--   <a>$sel:contentType:GetMapStyleDescriptorResponse'</a>,
--   <a>getMapStyleDescriptorResponse_contentType</a> - The style
--   descriptor's content type. For example, <tt>application/json</tt>.
--   
--   <a>$sel:httpStatus:GetMapStyleDescriptorResponse'</a>,
--   <a>getMapStyleDescriptorResponse_httpStatus</a> - The response's http
--   status code.
newGetMapStyleDescriptorResponse :: Int -> GetMapStyleDescriptorResponse

-- | <i>See:</i> <a>newGetMapTile</a> smart constructor.
data GetMapTile
GetMapTile' :: Text -> Text -> Text -> Text -> GetMapTile

-- | Create a value of <a>GetMapTile</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mapName:GetMapTile'</a>, <a>getMapTile_mapName</a> - The map
--   resource to retrieve the map tiles from.
--   
--   <a>$sel:x:GetMapTile'</a>, <a>getMapTile_x</a> - The X axis value for
--   the map tile.
--   
--   <a>$sel:y:GetMapTile'</a>, <a>getMapTile_y</a> - The Y axis value for
--   the map tile.
--   
--   <a>$sel:z:GetMapTile'</a>, <a>getMapTile_z</a> - The zoom value for
--   the map tile.
newGetMapTile :: Text -> Text -> Text -> Text -> GetMapTile

-- | <i>See:</i> <a>newGetMapTileResponse</a> smart constructor.
data GetMapTileResponse
GetMapTileResponse' :: Maybe ByteString -> Maybe Text -> Int -> GetMapTileResponse

-- | Create a value of <a>GetMapTileResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:blob:GetMapTileResponse'</a>, <a>getMapTileResponse_blob</a> -
--   Contains Mapbox Vector Tile (MVT) data.
--   
--   <a>$sel:contentType:GetMapTileResponse'</a>,
--   <a>getMapTileResponse_contentType</a> - The map tile's content type.
--   For example, <tt>application/vnd.mapbox-vector-tile</tt>.
--   
--   <a>$sel:httpStatus:GetMapTileResponse'</a>,
--   <a>getMapTileResponse_httpStatus</a> - The response's http status
--   code.
newGetMapTileResponse :: Int -> GetMapTileResponse

-- | <i>See:</i> <a>newListGeofenceCollections</a> smart constructor.
data ListGeofenceCollections
ListGeofenceCollections' :: Maybe Text -> Maybe Natural -> ListGeofenceCollections

-- | Create a value of <a>ListGeofenceCollections</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListGeofenceCollections'</a>,
--   <a>listGeofenceCollections_nextToken</a> - The pagination token
--   specifying which page of results to return in the response. If no
--   token is provided, the default page is the first page.
--   
--   Default value: <tt>null</tt>
--   
--   <a>$sel:maxResults:ListGeofenceCollections'</a>,
--   <a>listGeofenceCollections_maxResults</a> - An optional limit for the
--   number of resources returned in a single call.
--   
--   Default value: <tt>100</tt>
newListGeofenceCollections :: ListGeofenceCollections

-- | <i>See:</i> <a>newListGeofenceCollectionsResponse</a> smart
--   constructor.
data ListGeofenceCollectionsResponse
ListGeofenceCollectionsResponse' :: Maybe Text -> Int -> [ListGeofenceCollectionsResponseEntry] -> ListGeofenceCollectionsResponse

-- | Create a value of <a>ListGeofenceCollectionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListGeofenceCollections'</a>,
--   <a>listGeofenceCollectionsResponse_nextToken</a> - A pagination token
--   indicating there are additional pages available. You can use the token
--   in a following request to fetch the next set of results.
--   
--   <a>$sel:httpStatus:ListGeofenceCollectionsResponse'</a>,
--   <a>listGeofenceCollectionsResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:entries:ListGeofenceCollectionsResponse'</a>,
--   <a>listGeofenceCollectionsResponse_entries</a> - Lists the geofence
--   collections that exist in your AWS account.
newListGeofenceCollectionsResponse :: Int -> ListGeofenceCollectionsResponse

-- | <i>See:</i> <a>newDeleteGeofenceCollection</a> smart constructor.
data DeleteGeofenceCollection
DeleteGeofenceCollection' :: Text -> DeleteGeofenceCollection

-- | Create a value of <a>DeleteGeofenceCollection</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:collectionName:DeleteGeofenceCollection'</a>,
--   <a>deleteGeofenceCollection_collectionName</a> - The name of the
--   geofence collection to be deleted.
newDeleteGeofenceCollection :: Text -> DeleteGeofenceCollection

-- | <i>See:</i> <a>newDeleteGeofenceCollectionResponse</a> smart
--   constructor.
data DeleteGeofenceCollectionResponse
DeleteGeofenceCollectionResponse' :: Int -> DeleteGeofenceCollectionResponse

-- | Create a value of <a>DeleteGeofenceCollectionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteGeofenceCollectionResponse'</a>,
--   <a>deleteGeofenceCollectionResponse_httpStatus</a> - The response's
--   http status code.
newDeleteGeofenceCollectionResponse :: Int -> DeleteGeofenceCollectionResponse

-- | <i>See:</i> <a>newUpdateGeofenceCollection</a> smart constructor.
data UpdateGeofenceCollection
UpdateGeofenceCollection' :: Maybe PricingPlan -> Maybe Text -> Maybe Text -> Text -> UpdateGeofenceCollection

-- | Create a value of <a>UpdateGeofenceCollection</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pricingPlan:UpdateGeofenceCollection'</a>,
--   <a>updateGeofenceCollection_pricingPlan</a> - Updates the pricing plan
--   for the geofence collection.
--   
--   For more information about each pricing plan option restrictions, see
--   <a>Amazon Location Service pricing</a>.
--   
--   <a>$sel:pricingPlanDataSource:UpdateGeofenceCollection'</a>,
--   <a>updateGeofenceCollection_pricingPlanDataSource</a> - Updates the
--   data provider for the geofence collection.
--   
--   A required value for the following pricing plans:
--   <tt>MobileAssetTracking</tt>| <tt>MobileAssetManagement</tt>
--   
--   For more information about <a>data providers</a> and <a>pricing
--   plans</a>, see the Amazon Location Service product page.
--   
--   This can only be updated when updating the <tt>PricingPlan</tt> in the
--   same request.
--   
--   Amazon Location Service uses <tt>PricingPlanDataSource</tt> to
--   calculate billing for your geofence collection. Your data won't be
--   shared with the data provider, and will remain in your AWS account and
--   Region unless you move it.
--   
--   <a>$sel:description:UpdateGeofenceCollection'</a>,
--   <a>updateGeofenceCollection_description</a> - Updates the description
--   for the geofence collection.
--   
--   <a>$sel:collectionName:UpdateGeofenceCollection'</a>,
--   <a>updateGeofenceCollection_collectionName</a> - The name of the
--   geofence collection to update.
newUpdateGeofenceCollection :: Text -> UpdateGeofenceCollection

-- | <i>See:</i> <a>newUpdateGeofenceCollectionResponse</a> smart
--   constructor.
data UpdateGeofenceCollectionResponse
UpdateGeofenceCollectionResponse' :: Int -> Text -> Text -> POSIX -> UpdateGeofenceCollectionResponse

-- | Create a value of <a>UpdateGeofenceCollectionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateGeofenceCollectionResponse'</a>,
--   <a>updateGeofenceCollectionResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:collectionArn:UpdateGeofenceCollectionResponse'</a>,
--   <a>updateGeofenceCollectionResponse_collectionArn</a> - The Amazon
--   Resource Name (ARN) of the updated geofence collection. Used to
--   specify a resource across AWS.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:geofence-collection/ExampleGeofenceCollection</tt></li>
--   </ul>
--   
--   <a>$sel:collectionName:UpdateGeofenceCollection'</a>,
--   <a>updateGeofenceCollectionResponse_collectionName</a> - The name of
--   the updated geofence collection.
--   
--   <a>$sel:updateTime:UpdateGeofenceCollectionResponse'</a>,
--   <a>updateGeofenceCollectionResponse_updateTime</a> - The time when the
--   geofence collection was last updated in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
newUpdateGeofenceCollectionResponse :: Int -> Text -> Text -> UTCTime -> UpdateGeofenceCollectionResponse

-- | <i>See:</i> <a>newListTrackers</a> smart constructor.
data ListTrackers
ListTrackers' :: Maybe Text -> Maybe Natural -> ListTrackers

-- | Create a value of <a>ListTrackers</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTrackers'</a>, <a>listTrackers_nextToken</a> -
--   The pagination token specifying which page of results to return in the
--   response. If no token is provided, the default page is the first page.
--   
--   Default value: <tt>null</tt>
--   
--   <a>$sel:maxResults:ListTrackers'</a>, <a>listTrackers_maxResults</a> -
--   An optional limit for the number of resources returned in a single
--   call.
--   
--   Default value: <tt>100</tt>
newListTrackers :: ListTrackers

-- | <i>See:</i> <a>newListTrackersResponse</a> smart constructor.
data ListTrackersResponse
ListTrackersResponse' :: Maybe Text -> Int -> [ListTrackersResponseEntry] -> ListTrackersResponse

-- | Create a value of <a>ListTrackersResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTrackers'</a>,
--   <a>listTrackersResponse_nextToken</a> - A pagination token indicating
--   there are additional pages available. You can use the token in a
--   following request to fetch the next set of results.
--   
--   <a>$sel:httpStatus:ListTrackersResponse'</a>,
--   <a>listTrackersResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:entries:ListTrackersResponse'</a>,
--   <a>listTrackersResponse_entries</a> - Contains tracker resources in
--   your AWS account. Details include tracker name, description and
--   timestamps for when the tracker was created and last updated.
newListTrackersResponse :: Int -> ListTrackersResponse

-- | <i>See:</i> <a>newDeletePlaceIndex</a> smart constructor.
data DeletePlaceIndex
DeletePlaceIndex' :: Text -> DeletePlaceIndex

-- | Create a value of <a>DeletePlaceIndex</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:indexName:DeletePlaceIndex'</a>,
--   <a>deletePlaceIndex_indexName</a> - The name of the place index
--   resource to be deleted.
newDeletePlaceIndex :: Text -> DeletePlaceIndex

-- | <i>See:</i> <a>newDeletePlaceIndexResponse</a> smart constructor.
data DeletePlaceIndexResponse
DeletePlaceIndexResponse' :: Int -> DeletePlaceIndexResponse

-- | Create a value of <a>DeletePlaceIndexResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeletePlaceIndexResponse'</a>,
--   <a>deletePlaceIndexResponse_httpStatus</a> - The response's http
--   status code.
newDeletePlaceIndexResponse :: Int -> DeletePlaceIndexResponse

-- | <i>See:</i> <a>newUpdatePlaceIndex</a> smart constructor.
data UpdatePlaceIndex
UpdatePlaceIndex' :: Maybe PricingPlan -> Maybe DataSourceConfiguration -> Maybe Text -> Text -> UpdatePlaceIndex

-- | Create a value of <a>UpdatePlaceIndex</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pricingPlan:UpdatePlaceIndex'</a>,
--   <a>updatePlaceIndex_pricingPlan</a> - Updates the pricing plan for the
--   place index resource.
--   
--   For more information about each pricing plan option restrictions, see
--   <a>Amazon Location Service pricing</a>.
--   
--   <a>$sel:dataSourceConfiguration:UpdatePlaceIndex'</a>,
--   <a>updatePlaceIndex_dataSourceConfiguration</a> - Updates the data
--   storage option for the place index resource.
--   
--   <a>$sel:description:UpdatePlaceIndex'</a>,
--   <a>updatePlaceIndex_description</a> - Updates the description for the
--   place index resource.
--   
--   <a>$sel:indexName:UpdatePlaceIndex'</a>,
--   <a>updatePlaceIndex_indexName</a> - The name of the place index
--   resource to update.
newUpdatePlaceIndex :: Text -> UpdatePlaceIndex

-- | <i>See:</i> <a>newUpdatePlaceIndexResponse</a> smart constructor.
data UpdatePlaceIndexResponse
UpdatePlaceIndexResponse' :: Int -> Text -> Text -> POSIX -> UpdatePlaceIndexResponse

-- | Create a value of <a>UpdatePlaceIndexResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdatePlaceIndexResponse'</a>,
--   <a>updatePlaceIndexResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:indexArn:UpdatePlaceIndexResponse'</a>,
--   <a>updatePlaceIndexResponse_indexArn</a> - The Amazon Resource Name
--   (ARN) of the upated place index resource. Used to specify a resource
--   across AWS.
--   
--   <ul>
--   <li>Format example: <tt>arn:aws:geo:region:account-id:place-
--   index/ExamplePlaceIndex</tt></li>
--   </ul>
--   
--   <a>$sel:indexName:UpdatePlaceIndex'</a>,
--   <a>updatePlaceIndexResponse_indexName</a> - The name of the updated
--   place index resource.
--   
--   <a>$sel:updateTime:UpdatePlaceIndexResponse'</a>,
--   <a>updatePlaceIndexResponse_updateTime</a> - The timestamp for when
--   the place index resource was last updated in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
newUpdatePlaceIndexResponse :: Int -> Text -> Text -> UTCTime -> UpdatePlaceIndexResponse

-- | <i>See:</i> <a>newDisassociateTrackerConsumer</a> smart constructor.
data DisassociateTrackerConsumer
DisassociateTrackerConsumer' :: Text -> Text -> DisassociateTrackerConsumer

-- | Create a value of <a>DisassociateTrackerConsumer</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:consumerArn:DisassociateTrackerConsumer'</a>,
--   <a>disassociateTrackerConsumer_consumerArn</a> - The Amazon Resource
--   Name (ARN) for the geofence collection to be disassociated from the
--   tracker resource. Used when you need to specify a resource across all
--   AWS.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:geofence-collection/ExampleGeofenceCollectionConsumer</tt></li>
--   </ul>
--   
--   <a>$sel:trackerName:DisassociateTrackerConsumer'</a>,
--   <a>disassociateTrackerConsumer_trackerName</a> - The name of the
--   tracker resource to be dissociated from the consumer.
newDisassociateTrackerConsumer :: Text -> Text -> DisassociateTrackerConsumer

-- | <i>See:</i> <a>newDisassociateTrackerConsumerResponse</a> smart
--   constructor.
data DisassociateTrackerConsumerResponse
DisassociateTrackerConsumerResponse' :: Int -> DisassociateTrackerConsumerResponse

-- | Create a value of <a>DisassociateTrackerConsumerResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DisassociateTrackerConsumerResponse'</a>,
--   <a>disassociateTrackerConsumerResponse_httpStatus</a> - The response's
--   http status code.
newDisassociateTrackerConsumerResponse :: Int -> DisassociateTrackerConsumerResponse

-- | <i>See:</i> <a>newPutGeofence</a> smart constructor.
data PutGeofence
PutGeofence' :: Text -> Text -> GeofenceGeometry -> PutGeofence

-- | Create a value of <a>PutGeofence</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:collectionName:PutGeofence'</a>,
--   <a>putGeofence_collectionName</a> - The geofence collection to store
--   the geofence in.
--   
--   <a>$sel:geofenceId:PutGeofence'</a>, <a>putGeofence_geofenceId</a> -
--   An identifier for the geofence. For example,
--   <tt>ExampleGeofence-1</tt>.
--   
--   <a>$sel:geometry:PutGeofence'</a>, <a>putGeofence_geometry</a> -
--   Contains the polygon details to specify the position of the geofence.
--   
--   Each <a>geofence polygon</a> can have a maximum of 1,000 vertices.
newPutGeofence :: Text -> Text -> GeofenceGeometry -> PutGeofence

-- | <i>See:</i> <a>newPutGeofenceResponse</a> smart constructor.
data PutGeofenceResponse
PutGeofenceResponse' :: Int -> POSIX -> Text -> POSIX -> PutGeofenceResponse

-- | Create a value of <a>PutGeofenceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:PutGeofenceResponse'</a>,
--   <a>putGeofenceResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:createTime:PutGeofenceResponse'</a>,
--   <a>putGeofenceResponse_createTime</a> - The timestamp for when the
--   geofence was created in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
--   
--   <a>$sel:geofenceId:PutGeofence'</a>,
--   <a>putGeofenceResponse_geofenceId</a> - The geofence identifier
--   entered in the request.
--   
--   <a>$sel:updateTime:PutGeofenceResponse'</a>,
--   <a>putGeofenceResponse_updateTime</a> - The timestamp for when the
--   geofence was last updated in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
newPutGeofenceResponse :: Int -> UTCTime -> Text -> UTCTime -> PutGeofenceResponse

-- | <i>See:</i> <a>newListGeofences</a> smart constructor.
data ListGeofences
ListGeofences' :: Maybe Text -> Text -> ListGeofences

-- | Create a value of <a>ListGeofences</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListGeofences'</a>, <a>listGeofences_nextToken</a> -
--   The pagination token specifying which page of results to return in the
--   response. If no token is provided, the default page is the first page.
--   
--   Default value: <tt>null</tt>
--   
--   <a>$sel:collectionName:ListGeofences'</a>,
--   <a>listGeofences_collectionName</a> - The name of the geofence
--   collection storing the list of geofences.
newListGeofences :: Text -> ListGeofences

-- | <i>See:</i> <a>newListGeofencesResponse</a> smart constructor.
data ListGeofencesResponse
ListGeofencesResponse' :: Maybe Text -> Int -> [ListGeofenceResponseEntry] -> ListGeofencesResponse

-- | Create a value of <a>ListGeofencesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListGeofences'</a>,
--   <a>listGeofencesResponse_nextToken</a> - A pagination token indicating
--   there are additional pages available. You can use the token in a
--   following request to fetch the next set of results.
--   
--   <a>$sel:httpStatus:ListGeofencesResponse'</a>,
--   <a>listGeofencesResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:entries:ListGeofencesResponse'</a>,
--   <a>listGeofencesResponse_entries</a> - Contains a list of geofences
--   stored in the geofence collection.
newListGeofencesResponse :: Int -> ListGeofencesResponse

-- | <i>See:</i> <a>newAssociateTrackerConsumer</a> smart constructor.
data AssociateTrackerConsumer
AssociateTrackerConsumer' :: Text -> Text -> AssociateTrackerConsumer

-- | Create a value of <a>AssociateTrackerConsumer</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:consumerArn:AssociateTrackerConsumer'</a>,
--   <a>associateTrackerConsumer_consumerArn</a> - The Amazon Resource Name
--   (ARN) for the geofence collection to be associated to tracker
--   resource. Used when you need to specify a resource across all AWS.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:geofence-collection/ExampleGeofenceCollectionConsumer</tt></li>
--   </ul>
--   
--   <a>$sel:trackerName:AssociateTrackerConsumer'</a>,
--   <a>associateTrackerConsumer_trackerName</a> - The name of the tracker
--   resource to be associated with a geofence collection.
newAssociateTrackerConsumer :: Text -> Text -> AssociateTrackerConsumer

-- | <i>See:</i> <a>newAssociateTrackerConsumerResponse</a> smart
--   constructor.
data AssociateTrackerConsumerResponse
AssociateTrackerConsumerResponse' :: Int -> AssociateTrackerConsumerResponse

-- | Create a value of <a>AssociateTrackerConsumerResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:AssociateTrackerConsumerResponse'</a>,
--   <a>associateTrackerConsumerResponse_httpStatus</a> - The response's
--   http status code.
newAssociateTrackerConsumerResponse :: Int -> AssociateTrackerConsumerResponse

-- | <i>See:</i> <a>newBatchEvaluateGeofences</a> smart constructor.
data BatchEvaluateGeofences
BatchEvaluateGeofences' :: Text -> NonEmpty DevicePositionUpdate -> BatchEvaluateGeofences

-- | Create a value of <a>BatchEvaluateGeofences</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:collectionName:BatchEvaluateGeofences'</a>,
--   <a>batchEvaluateGeofences_collectionName</a> - The geofence collection
--   used in evaluating the position of devices against its geofences.
--   
--   <a>$sel:devicePositionUpdates:BatchEvaluateGeofences'</a>,
--   <a>batchEvaluateGeofences_devicePositionUpdates</a> - Contains device
--   details for each device to be evaluated against the given geofence
--   collection.
newBatchEvaluateGeofences :: Text -> NonEmpty DevicePositionUpdate -> BatchEvaluateGeofences

-- | <i>See:</i> <a>newBatchEvaluateGeofencesResponse</a> smart
--   constructor.
data BatchEvaluateGeofencesResponse
BatchEvaluateGeofencesResponse' :: Int -> [BatchEvaluateGeofencesError] -> BatchEvaluateGeofencesResponse

-- | Create a value of <a>BatchEvaluateGeofencesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:BatchEvaluateGeofencesResponse'</a>,
--   <a>batchEvaluateGeofencesResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:errors:BatchEvaluateGeofencesResponse'</a>,
--   <a>batchEvaluateGeofencesResponse_errors</a> - Contains error details
--   for each device that failed to evaluate its position against the given
--   geofence collection.
newBatchEvaluateGeofencesResponse :: Int -> BatchEvaluateGeofencesResponse

-- | <i>See:</i> <a>newCalculateRoute</a> smart constructor.
data CalculateRoute
CalculateRoute' :: Maybe DistanceUnit -> Maybe CalculateRouteTruckModeOptions -> Maybe [Sensitive (NonEmpty Double)] -> Maybe Bool -> Maybe Bool -> Maybe TravelMode -> Maybe CalculateRouteCarModeOptions -> Maybe POSIX -> Text -> Sensitive (NonEmpty Double) -> Sensitive (NonEmpty Double) -> CalculateRoute

-- | Create a value of <a>CalculateRoute</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:distanceUnit:CalculateRoute'</a>,
--   <a>calculateRoute_distanceUnit</a> - Set the unit system to specify
--   the distance.
--   
--   Default Value: <tt>Kilometers</tt>
--   
--   <a>$sel:truckModeOptions:CalculateRoute'</a>,
--   <a>calculateRoute_truckModeOptions</a> - Specifies route preferences
--   when traveling by <tt>Truck</tt>, such as avoiding routes that use
--   ferries or tolls, and truck specifications to consider when choosing
--   an optimal road.
--   
--   Requirements: <tt>TravelMode</tt> must be specified as <tt>Truck</tt>.
--   
--   <a>$sel:waypointPositions:CalculateRoute'</a>,
--   <a>calculateRoute_waypointPositions</a> - Specifies an ordered list of
--   up to 23 intermediate positions to include along a route between the
--   departure position and destination position.
--   
--   <ul>
--   <li>For example, from the <tt>DeparturePosition</tt> <tt>[-123.115,
--   49.285]</tt>, the route follows the order that the waypoint positions
--   are given <tt>[[-122.757, 49.0021],[-122.349, 47.620]]</tt></li>
--   </ul>
--   
--   If you specify a waypoint position that's not located on a road,
--   Amazon Location <a>moves the position to the nearest road</a>.
--   
--   Specifying more than 23 waypoints returns a <tt>400
--   ValidationException</tt> error.
--   
--   If Esri is the provider for your route calculator, specifying a route
--   that is longer than 400 km returns a <tt>400
--   RoutesValidationException</tt> error.
--   
--   Valid Values: <tt>[-180 to 180,-90 to 90]</tt>
--   
--   <a>$sel:includeLegGeometry:CalculateRoute'</a>,
--   <a>calculateRoute_includeLegGeometry</a> - Set to include the geometry
--   details in the result for each path between a pair of positions.
--   
--   Default Value: <tt>false</tt>
--   
--   Valid Values: <tt>false</tt> | <tt>true</tt>
--   
--   <a>$sel:departNow:CalculateRoute'</a>, <a>calculateRoute_departNow</a>
--   - Sets the time of departure as the current time. Uses the current
--   time to calculate a route. Otherwise, the best time of day to travel
--   with the best traffic conditions is used to calculate the route.
--   
--   Default Value: <tt>false</tt>
--   
--   Valid Values: <tt>false</tt> | <tt>true</tt>
--   
--   <a>$sel:travelMode:CalculateRoute'</a>,
--   <a>calculateRoute_travelMode</a> - Specifies the mode of transport
--   when calculating a route. Used in estimating the speed of travel and
--   road compatibility.
--   
--   The <tt>TravelMode</tt> you specify determines how you specify route
--   preferences:
--   
--   <ul>
--   <li>If traveling by <tt>Car</tt> use the <tt>CarModeOptions</tt>
--   parameter.</li>
--   <li>If traveling by <tt>Truck</tt> use the <tt>TruckModeOptions</tt>
--   parameter.</li>
--   </ul>
--   
--   Default Value: <tt>Car</tt>
--   
--   <a>$sel:carModeOptions:CalculateRoute'</a>,
--   <a>calculateRoute_carModeOptions</a> - Specifies route preferences
--   when traveling by <tt>Car</tt>, such as avoiding routes that use
--   ferries or tolls.
--   
--   Requirements: <tt>TravelMode</tt> must be specified as <tt>Car</tt>.
--   
--   <a>$sel:departureTime:CalculateRoute'</a>,
--   <a>calculateRoute_departureTime</a> - Specifies the desired time of
--   departure. Uses the given time to calculate a route. Otherwise, the
--   best time of day to travel with the best traffic conditions is used to
--   calculate the route.
--   
--   Setting a departure time in the past returns a <tt>400
--   ValidationException</tt> error.
--   
--   <ul>
--   <li>In <a>ISO 8601</a> format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>. For
--   example, <tt>2020–07-2T12:15:20.000Z+01:00</tt></li>
--   </ul>
--   
--   <a>$sel:calculatorName:CalculateRoute'</a>,
--   <a>calculateRoute_calculatorName</a> - The name of the route
--   calculator resource that you want to use to calculate a route.
--   
--   <a>$sel:departurePosition:CalculateRoute'</a>,
--   <a>calculateRoute_departurePosition</a> - The start position for the
--   route. Defined in <a>WGS 84</a> format: <tt>[longitude,
--   latitude]</tt>.
--   
--   <ul>
--   <li>For example, <tt>[-123.115, 49.285]</tt></li>
--   </ul>
--   
--   If you specify a departure that's not located on a road, Amazon
--   Location <a>moves the position to the nearest road</a>. If Esri is the
--   provider for your route calculator, specifying a route that is longer
--   than 400 km returns a <tt>400 RoutesValidationException</tt> error.
--   
--   Valid Values: <tt>[-180 to 180,-90 to 90]</tt>
--   
--   <a>$sel:destinationPosition:CalculateRoute'</a>,
--   <a>calculateRoute_destinationPosition</a> - The finish position for
--   the route. Defined in <a>WGS 84</a> format: <tt>[longitude,
--   latitude]</tt>.
--   
--   <ul>
--   <li>For example, <tt>[-122.339, 47.615]</tt></li>
--   </ul>
--   
--   If you specify a destination that's not located on a road, Amazon
--   Location <a>moves the position to the nearest road</a>.
--   
--   Valid Values: <tt>[-180 to 180,-90 to 90]</tt>
newCalculateRoute :: Text -> NonEmpty Double -> NonEmpty Double -> CalculateRoute

-- | Returns the result of the route calculation. Metadata includes legs
--   and route summary.
--   
--   <i>See:</i> <a>newCalculateRouteResponse</a> smart constructor.
data CalculateRouteResponse
CalculateRouteResponse' :: Int -> [Leg] -> CalculateRouteSummary -> CalculateRouteResponse

-- | Create a value of <a>CalculateRouteResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CalculateRouteResponse'</a>,
--   <a>calculateRouteResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:legs:CalculateRouteResponse'</a>,
--   <a>calculateRouteResponse_legs</a> - Contains details about each path
--   between a pair of positions included along a route such as:
--   <tt>StartPosition</tt>, <tt>EndPosition</tt>, <tt>Distance</tt>,
--   <tt>DurationSeconds</tt>, <tt>Geometry</tt>, and <tt>Steps</tt>. The
--   number of legs returned corresponds to one fewer than the total number
--   of positions in the request.
--   
--   For example, a route with a departure position and destination
--   position returns one leg with the positions <a>snapped to a nearby
--   road</a>:
--   
--   <ul>
--   <li>The <tt>StartPosition</tt> is the departure position.</li>
--   <li>The <tt>EndPosition</tt> is the destination position.</li>
--   </ul>
--   
--   A route with a waypoint between the departure and destination position
--   returns two legs with the positions snapped to a nearby road:
--   
--   <ul>
--   <li>Leg 1: The <tt>StartPosition</tt> is the departure position . The
--   <tt>EndPosition</tt> is the waypoint positon.</li>
--   <li>Leg 2: The <tt>StartPosition</tt> is the waypoint position. The
--   <tt>EndPosition</tt> is the destination position.</li>
--   </ul>
--   
--   <a>$sel:summary:CalculateRouteResponse'</a>,
--   <a>calculateRouteResponse_summary</a> - Contains information about the
--   whole route, such as: <tt>RouteBBox</tt>, <tt>DataSource</tt>,
--   <tt>Distance</tt>, <tt>DistanceUnit</tt>, and
--   <tt>DurationSeconds</tt>.
newCalculateRouteResponse :: Int -> CalculateRouteSummary -> CalculateRouteResponse

-- | <i>See:</i> <a>newDeleteMap</a> smart constructor.
data DeleteMap
DeleteMap' :: Text -> DeleteMap

-- | Create a value of <a>DeleteMap</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mapName:DeleteMap'</a>, <a>deleteMap_mapName</a> - The name of
--   the map resource to be deleted.
newDeleteMap :: Text -> DeleteMap

-- | <i>See:</i> <a>newDeleteMapResponse</a> smart constructor.
data DeleteMapResponse
DeleteMapResponse' :: Int -> DeleteMapResponse

-- | Create a value of <a>DeleteMapResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteMapResponse'</a>,
--   <a>deleteMapResponse_httpStatus</a> - The response's http status code.
newDeleteMapResponse :: Int -> DeleteMapResponse

-- | <i>See:</i> <a>newUpdateMap</a> smart constructor.
data UpdateMap
UpdateMap' :: Maybe PricingPlan -> Maybe Text -> Text -> UpdateMap

-- | Create a value of <a>UpdateMap</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pricingPlan:UpdateMap'</a>, <a>updateMap_pricingPlan</a> -
--   Updates the pricing plan for the map resource.
--   
--   For more information about each pricing plan option restrictions, see
--   <a>Amazon Location Service pricing</a>.
--   
--   <a>$sel:description:UpdateMap'</a>, <a>updateMap_description</a> -
--   Updates the description for the map resource.
--   
--   <a>$sel:mapName:UpdateMap'</a>, <a>updateMap_mapName</a> - The name of
--   the map resource to update.
newUpdateMap :: Text -> UpdateMap

-- | <i>See:</i> <a>newUpdateMapResponse</a> smart constructor.
data UpdateMapResponse
UpdateMapResponse' :: Int -> Text -> Text -> POSIX -> UpdateMapResponse

-- | Create a value of <a>UpdateMapResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateMapResponse'</a>,
--   <a>updateMapResponse_httpStatus</a> - The response's http status code.
--   
--   <a>$sel:mapArn:UpdateMapResponse'</a>, <a>updateMapResponse_mapArn</a>
--   - The Amazon Resource Name (ARN) of the updated map resource. Used to
--   specify a resource across AWS.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:maps/ExampleMap</tt></li>
--   </ul>
--   
--   <a>$sel:mapName:UpdateMap'</a>, <a>updateMapResponse_mapName</a> - The
--   name of the updated map resource.
--   
--   <a>$sel:updateTime:UpdateMapResponse'</a>,
--   <a>updateMapResponse_updateTime</a> - The timestamp for when the map
--   resource was last updated in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
newUpdateMapResponse :: Int -> Text -> Text -> UTCTime -> UpdateMapResponse

-- | <i>See:</i> <a>newGetDevicePositionHistory</a> smart constructor.
data GetDevicePositionHistory
GetDevicePositionHistory' :: Maybe Text -> Maybe POSIX -> Maybe POSIX -> Text -> Text -> GetDevicePositionHistory

-- | Create a value of <a>GetDevicePositionHistory</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetDevicePositionHistory'</a>,
--   <a>getDevicePositionHistory_nextToken</a> - The pagination token
--   specifying which page of results to return in the response. If no
--   token is provided, the default page is the first page.
--   
--   Default value: <tt>null</tt>
--   
--   <a>$sel:endTimeExclusive:GetDevicePositionHistory'</a>,
--   <a>getDevicePositionHistory_endTimeExclusive</a> - Specify the end
--   time for the position history in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>. By default, the value will be the
--   time that the request is made.
--   
--   Requirement:
--   
--   <ul>
--   <li>The time specified for <tt>EndTimeExclusive</tt> must be after the
--   time for <tt>StartTimeInclusive</tt>.</li>
--   </ul>
--   
--   <a>$sel:startTimeInclusive:GetDevicePositionHistory'</a>,
--   <a>getDevicePositionHistory_startTimeInclusive</a> - Specify the start
--   time for the position history in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>. By default, the value will be 24
--   hours prior to the time that the request is made.
--   
--   Requirement:
--   
--   <ul>
--   <li>The time specified for <tt>StartTimeInclusive</tt> must be before
--   <tt>EndTimeExclusive</tt>.</li>
--   </ul>
--   
--   <a>$sel:deviceId:GetDevicePositionHistory'</a>,
--   <a>getDevicePositionHistory_deviceId</a> - The device whose position
--   history you want to retrieve.
--   
--   <a>$sel:trackerName:GetDevicePositionHistory'</a>,
--   <a>getDevicePositionHistory_trackerName</a> - The tracker resource
--   receiving the request for the device position history.
newGetDevicePositionHistory :: Text -> Text -> GetDevicePositionHistory

-- | <i>See:</i> <a>newGetDevicePositionHistoryResponse</a> smart
--   constructor.
data GetDevicePositionHistoryResponse
GetDevicePositionHistoryResponse' :: Maybe Text -> Int -> [DevicePosition] -> GetDevicePositionHistoryResponse

-- | Create a value of <a>GetDevicePositionHistoryResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetDevicePositionHistory'</a>,
--   <a>getDevicePositionHistoryResponse_nextToken</a> - A pagination token
--   indicating there are additional pages available. You can use the token
--   in a following request to fetch the next set of results.
--   
--   <a>$sel:httpStatus:GetDevicePositionHistoryResponse'</a>,
--   <a>getDevicePositionHistoryResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:devicePositions:GetDevicePositionHistoryResponse'</a>,
--   <a>getDevicePositionHistoryResponse_devicePositions</a> - Contains the
--   position history details for the requested device.
newGetDevicePositionHistoryResponse :: Int -> GetDevicePositionHistoryResponse

-- | <i>See:</i> <a>newDescribeTracker</a> smart constructor.
data DescribeTracker
DescribeTracker' :: Text -> DescribeTracker

-- | Create a value of <a>DescribeTracker</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:trackerName:DescribeTracker'</a>,
--   <a>describeTracker_trackerName</a> - The name of the tracker resource.
newDescribeTracker :: Text -> DescribeTracker

-- | <i>See:</i> <a>newDescribeTrackerResponse</a> smart constructor.
data DescribeTrackerResponse
DescribeTrackerResponse' :: Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe PositionFiltering -> Int -> POSIX -> Text -> PricingPlan -> Text -> Text -> POSIX -> DescribeTrackerResponse

-- | Create a value of <a>DescribeTrackerResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pricingPlanDataSource:DescribeTrackerResponse'</a>,
--   <a>describeTrackerResponse_pricingPlanDataSource</a> - The specified
--   data provider for the tracker resource.
--   
--   <a>$sel:kmsKeyId:DescribeTrackerResponse'</a>,
--   <a>describeTrackerResponse_kmsKeyId</a> - A key identifier for an
--   <a>AWS KMS customer managed key</a> assigned to the Amazon Location
--   resource.
--   
--   <a>$sel:tags:DescribeTrackerResponse'</a>,
--   <a>describeTrackerResponse_tags</a> - The tags associated with the
--   tracker resource.
--   
--   <a>$sel:positionFiltering:DescribeTrackerResponse'</a>,
--   <a>describeTrackerResponse_positionFiltering</a> - The position
--   filtering method of the tracker resource.
--   
--   <a>$sel:httpStatus:DescribeTrackerResponse'</a>,
--   <a>describeTrackerResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:createTime:DescribeTrackerResponse'</a>,
--   <a>describeTrackerResponse_createTime</a> - The timestamp for when the
--   tracker resource was created in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
--   
--   <a>$sel:description:DescribeTrackerResponse'</a>,
--   <a>describeTrackerResponse_description</a> - The optional description
--   for the tracker resource.
--   
--   <a>$sel:pricingPlan:DescribeTrackerResponse'</a>,
--   <a>describeTrackerResponse_pricingPlan</a> - The pricing plan selected
--   for the specified tracker resource.
--   
--   For additional details and restrictions on each pricing plan option,
--   see <a>Amazon Location Service pricing</a>.
--   
--   <a>$sel:trackerArn:DescribeTrackerResponse'</a>,
--   <a>describeTrackerResponse_trackerArn</a> - The Amazon Resource Name
--   (ARN) for the tracker resource. Used when you need to specify a
--   resource across all AWS.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:tracker/ExampleTracker</tt></li>
--   </ul>
--   
--   <a>$sel:trackerName:DescribeTracker'</a>,
--   <a>describeTrackerResponse_trackerName</a> - The name of the tracker
--   resource.
--   
--   <a>$sel:updateTime:DescribeTrackerResponse'</a>,
--   <a>describeTrackerResponse_updateTime</a> - The timestamp for when the
--   tracker resource was last updated in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
newDescribeTrackerResponse :: Int -> UTCTime -> Text -> PricingPlan -> Text -> Text -> UTCTime -> DescribeTrackerResponse

-- | <i>See:</i> <a>newDescribePlaceIndex</a> smart constructor.
data DescribePlaceIndex
DescribePlaceIndex' :: Text -> DescribePlaceIndex

-- | Create a value of <a>DescribePlaceIndex</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:indexName:DescribePlaceIndex'</a>,
--   <a>describePlaceIndex_indexName</a> - The name of the place index
--   resource.
newDescribePlaceIndex :: Text -> DescribePlaceIndex

-- | <i>See:</i> <a>newDescribePlaceIndexResponse</a> smart constructor.
data DescribePlaceIndexResponse
DescribePlaceIndexResponse' :: Maybe (HashMap Text Text) -> Int -> POSIX -> Text -> DataSourceConfiguration -> Text -> Text -> Text -> PricingPlan -> POSIX -> DescribePlaceIndexResponse

-- | Create a value of <a>DescribePlaceIndexResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:DescribePlaceIndexResponse'</a>,
--   <a>describePlaceIndexResponse_tags</a> - Tags associated with place
--   index resource.
--   
--   <a>$sel:httpStatus:DescribePlaceIndexResponse'</a>,
--   <a>describePlaceIndexResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:createTime:DescribePlaceIndexResponse'</a>,
--   <a>describePlaceIndexResponse_createTime</a> - The timestamp for when
--   the place index resource was created in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
--   
--   <a>$sel:dataSource:DescribePlaceIndexResponse'</a>,
--   <a>describePlaceIndexResponse_dataSource</a> - The data provider of
--   geospatial data. Indicates one of the available providers:
--   
--   <ul>
--   <li><pre>Esri</pre></li>
--   <li><pre>Here</pre></li>
--   </ul>
--   
--   For additional details on data providers, see <a>Amazon Location
--   Service data providers</a>.
--   
--   <a>$sel:dataSourceConfiguration:DescribePlaceIndexResponse'</a>,
--   <a>describePlaceIndexResponse_dataSourceConfiguration</a> - The
--   specified data storage option for requesting Places.
--   
--   <a>$sel:description:DescribePlaceIndexResponse'</a>,
--   <a>describePlaceIndexResponse_description</a> - The optional
--   description for the place index resource.
--   
--   <a>$sel:indexArn:DescribePlaceIndexResponse'</a>,
--   <a>describePlaceIndexResponse_indexArn</a> - The Amazon Resource Name
--   (ARN) for the place index resource. Used to specify a resource across
--   AWS.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:place-index/ExamplePlaceIndex</tt></li>
--   </ul>
--   
--   <a>$sel:indexName:DescribePlaceIndex'</a>,
--   <a>describePlaceIndexResponse_indexName</a> - The name of the place
--   index resource being described.
--   
--   <a>$sel:pricingPlan:DescribePlaceIndexResponse'</a>,
--   <a>describePlaceIndexResponse_pricingPlan</a> - The pricing plan
--   selected for the specified place index resource.
--   
--   For additional details and restrictions on each pricing plan option,
--   see <a>Amazon Location Service pricing</a>.
--   
--   <a>$sel:updateTime:DescribePlaceIndexResponse'</a>,
--   <a>describePlaceIndexResponse_updateTime</a> - The timestamp for when
--   the place index resource was last updated in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
newDescribePlaceIndexResponse :: Int -> UTCTime -> Text -> DataSourceConfiguration -> Text -> Text -> Text -> PricingPlan -> UTCTime -> DescribePlaceIndexResponse

-- | <i>See:</i> <a>newGetGeofence</a> smart constructor.
data GetGeofence
GetGeofence' :: Text -> Text -> GetGeofence

-- | Create a value of <a>GetGeofence</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:collectionName:GetGeofence'</a>,
--   <a>getGeofence_collectionName</a> - The geofence collection storing
--   the target geofence.
--   
--   <a>$sel:geofenceId:GetGeofence'</a>, <a>getGeofence_geofenceId</a> -
--   The geofence you're retrieving details for.
newGetGeofence :: Text -> Text -> GetGeofence

-- | <i>See:</i> <a>newGetGeofenceResponse</a> smart constructor.
data GetGeofenceResponse
GetGeofenceResponse' :: Int -> POSIX -> Text -> GeofenceGeometry -> Text -> POSIX -> GetGeofenceResponse

-- | Create a value of <a>GetGeofenceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetGeofenceResponse'</a>,
--   <a>getGeofenceResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:createTime:GetGeofenceResponse'</a>,
--   <a>getGeofenceResponse_createTime</a> - The timestamp for when the
--   geofence collection was created in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
--   
--   <a>$sel:geofenceId:GetGeofence'</a>,
--   <a>getGeofenceResponse_geofenceId</a> - The geofence identifier.
--   
--   <a>$sel:geometry:GetGeofenceResponse'</a>,
--   <a>getGeofenceResponse_geometry</a> - Contains the geofence geometry
--   details describing a polygon.
--   
--   <a>$sel:status:GetGeofenceResponse'</a>,
--   <a>getGeofenceResponse_status</a> - Identifies the state of the
--   geofence. A geofence will hold one of the following states:
--   
--   <ul>
--   <li><tt>ACTIVE</tt> — The geofence has been indexed by the
--   system.</li>
--   <li><tt>PENDING</tt> — The geofence is being processed by the
--   system.</li>
--   <li><tt>FAILED</tt> — The geofence failed to be indexed by the
--   system.</li>
--   <li><tt>DELETED</tt> — The geofence has been deleted from the system
--   index.</li>
--   <li><tt>DELETING</tt> — The geofence is being deleted from the system
--   index.</li>
--   </ul>
--   
--   <a>$sel:updateTime:GetGeofenceResponse'</a>,
--   <a>getGeofenceResponse_updateTime</a> - The timestamp for when the
--   geofence collection was last updated in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
newGetGeofenceResponse :: Int -> UTCTime -> Text -> GeofenceGeometry -> Text -> UTCTime -> GetGeofenceResponse

-- | <i>See:</i> <a>newListDevicePositions</a> smart constructor.
data ListDevicePositions
ListDevicePositions' :: Maybe Text -> Maybe Natural -> Text -> ListDevicePositions

-- | Create a value of <a>ListDevicePositions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDevicePositions'</a>,
--   <a>listDevicePositions_nextToken</a> - The pagination token specifying
--   which page of results to return in the response. If no token is
--   provided, the default page is the first page.
--   
--   Default value: <tt>null</tt>
--   
--   <a>$sel:maxResults:ListDevicePositions'</a>,
--   <a>listDevicePositions_maxResults</a> - An optional limit for the
--   number of entries returned in a single call.
--   
--   Default value: <tt>100</tt>
--   
--   <a>$sel:trackerName:ListDevicePositions'</a>,
--   <a>listDevicePositions_trackerName</a> - The tracker resource
--   containing the requested devices.
newListDevicePositions :: Text -> ListDevicePositions

-- | <i>See:</i> <a>newListDevicePositionsResponse</a> smart constructor.
data ListDevicePositionsResponse
ListDevicePositionsResponse' :: Maybe Text -> Int -> [ListDevicePositionsResponseEntry] -> ListDevicePositionsResponse

-- | Create a value of <a>ListDevicePositionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDevicePositions'</a>,
--   <a>listDevicePositionsResponse_nextToken</a> - A pagination token
--   indicating there are additional pages available. You can use the token
--   in a following request to fetch the next set of results.
--   
--   <a>$sel:httpStatus:ListDevicePositionsResponse'</a>,
--   <a>listDevicePositionsResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:entries:ListDevicePositionsResponse'</a>,
--   <a>listDevicePositionsResponse_entries</a> - Contains details about
--   each device's last known position. These details includes the device
--   ID, the time when the position was sampled on the device, the time
--   that the service received the update, and the most recent coordinates.
newListDevicePositionsResponse :: Int -> ListDevicePositionsResponse

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> HashMap Text Text -> TagResource

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The Amazon Resource Name (ARN) of the resource whose tags you want to
--   update.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:resourcetype/ExampleResource</tt></li>
--   </ul>
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - Tags that
--   have been applied to the specified resource. Tags are mapped from the
--   tag key to the tag value: <tt>"TagKey" : "TagValue"</tt>.
--   
--   <ul>
--   <li>Format example: <tt>{"tag1" : "value1", "tag2" : "value2"}
--   </tt></li>
--   </ul>
newTagResource :: Text -> TagResource

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | <i>See:</i> <a>newGetMapGlyphs</a> smart constructor.
data GetMapGlyphs
GetMapGlyphs' :: Text -> Text -> Text -> GetMapGlyphs

-- | Create a value of <a>GetMapGlyphs</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fontStack:GetMapGlyphs'</a>, <a>getMapGlyphs_fontStack</a> - A
--   comma-separated list of fonts to load glyphs from in order of
--   preference. For example, <tt>Noto Sans Regular, Arial Unicode</tt>.
--   
--   Valid fonts stacks for <a>Esri</a> styles:
--   
--   <ul>
--   <li>VectorEsriDarkGrayCanvas – <tt>Ubuntu Medium Italic</tt> |
--   <tt>Ubuntu Medium</tt> | <tt>Ubuntu Italic</tt> | <tt>Ubuntu
--   Regular</tt> | <tt>Ubuntu Bold</tt></li>
--   <li>VectorEsriLightGrayCanvas – <tt>Ubuntu Italic</tt> | <tt>Ubuntu
--   Regular</tt> | <tt>Ubuntu Light</tt> | <tt>Ubuntu Bold</tt></li>
--   <li>VectorEsriTopographic – <tt>Noto Sans Italic</tt> | <tt>Noto Sans
--   Regular</tt> | <tt>Noto Sans Bold</tt> | <tt>Noto Serif Regular</tt> |
--   <tt>Roboto Condensed Light Italic</tt></li>
--   <li>VectorEsriStreets – <tt>Arial Regular</tt> | <tt>Arial Italic</tt>
--   | <tt>Arial Bold</tt></li>
--   <li>VectorEsriNavigation – <tt>Arial Regular</tt> | <tt>Arial
--   Italic</tt> | <tt>Arial Bold</tt></li>
--   </ul>
--   
--   Valid font stacks for <a>HERE Technologies</a> styles:
--   
--   <ul>
--   <li>VectorHereBerlin – <tt>Fira GO Regular</tt> | <tt>Fira GO
--   Bold</tt></li>
--   </ul>
--   
--   <a>$sel:fontUnicodeRange:GetMapGlyphs'</a>,
--   <a>getMapGlyphs_fontUnicodeRange</a> - A Unicode range of characters
--   to download glyphs for. Each response will contain 256 characters. For
--   example, 0–255 includes all characters from range <tt>U+0000</tt> to
--   <tt>00FF</tt>. Must be aligned to multiples of 256.
--   
--   <a>$sel:mapName:GetMapGlyphs'</a>, <a>getMapGlyphs_mapName</a> - The
--   map resource associated with the glyph ﬁle.
newGetMapGlyphs :: Text -> Text -> Text -> GetMapGlyphs

-- | <i>See:</i> <a>newGetMapGlyphsResponse</a> smart constructor.
data GetMapGlyphsResponse
GetMapGlyphsResponse' :: Maybe ByteString -> Maybe Text -> Int -> GetMapGlyphsResponse

-- | Create a value of <a>GetMapGlyphsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:blob:GetMapGlyphsResponse'</a>,
--   <a>getMapGlyphsResponse_blob</a> - The blob's content type.
--   
--   <a>$sel:contentType:GetMapGlyphsResponse'</a>,
--   <a>getMapGlyphsResponse_contentType</a> - The map glyph content type.
--   For example, <tt>application/octet-stream</tt>.
--   
--   <a>$sel:httpStatus:GetMapGlyphsResponse'</a>,
--   <a>getMapGlyphsResponse_httpStatus</a> - The response's http status
--   code.
newGetMapGlyphsResponse :: Int -> GetMapGlyphsResponse

-- | <i>See:</i> <a>newBatchPutGeofence</a> smart constructor.
data BatchPutGeofence
BatchPutGeofence' :: Text -> NonEmpty BatchPutGeofenceRequestEntry -> BatchPutGeofence

-- | Create a value of <a>BatchPutGeofence</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:collectionName:BatchPutGeofence'</a>,
--   <a>batchPutGeofence_collectionName</a> - The geofence collection
--   storing the geofences.
--   
--   <a>$sel:entries:BatchPutGeofence'</a>, <a>batchPutGeofence_entries</a>
--   - The batch of geofences to be stored in a geofence collection.
newBatchPutGeofence :: Text -> NonEmpty BatchPutGeofenceRequestEntry -> BatchPutGeofence

-- | <i>See:</i> <a>newBatchPutGeofenceResponse</a> smart constructor.
data BatchPutGeofenceResponse
BatchPutGeofenceResponse' :: Int -> [BatchPutGeofenceError] -> [BatchPutGeofenceSuccess] -> BatchPutGeofenceResponse

-- | Create a value of <a>BatchPutGeofenceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:BatchPutGeofenceResponse'</a>,
--   <a>batchPutGeofenceResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:errors:BatchPutGeofenceResponse'</a>,
--   <a>batchPutGeofenceResponse_errors</a> - Contains additional error
--   details for each geofence that failed to be stored in a geofence
--   collection.
--   
--   <a>$sel:successes:BatchPutGeofenceResponse'</a>,
--   <a>batchPutGeofenceResponse_successes</a> - Contains each geofence
--   that was successfully stored in a geofence collection.
newBatchPutGeofenceResponse :: Int -> BatchPutGeofenceResponse

-- | <i>See:</i> <a>newBatchDeleteGeofence</a> smart constructor.
data BatchDeleteGeofence
BatchDeleteGeofence' :: Text -> NonEmpty Text -> BatchDeleteGeofence

-- | Create a value of <a>BatchDeleteGeofence</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:collectionName:BatchDeleteGeofence'</a>,
--   <a>batchDeleteGeofence_collectionName</a> - The geofence collection
--   storing the geofences to be deleted.
--   
--   <a>$sel:geofenceIds:BatchDeleteGeofence'</a>,
--   <a>batchDeleteGeofence_geofenceIds</a> - The batch of geofences to be
--   deleted.
newBatchDeleteGeofence :: Text -> NonEmpty Text -> BatchDeleteGeofence

-- | <i>See:</i> <a>newBatchDeleteGeofenceResponse</a> smart constructor.
data BatchDeleteGeofenceResponse
BatchDeleteGeofenceResponse' :: Int -> [BatchDeleteGeofenceError] -> BatchDeleteGeofenceResponse

-- | Create a value of <a>BatchDeleteGeofenceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:BatchDeleteGeofenceResponse'</a>,
--   <a>batchDeleteGeofenceResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:errors:BatchDeleteGeofenceResponse'</a>,
--   <a>batchDeleteGeofenceResponse_errors</a> - Contains error details for
--   each geofence that failed to delete.
newBatchDeleteGeofenceResponse :: Int -> BatchDeleteGeofenceResponse

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> NonEmpty Text -> UntagResource

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The Amazon Resource Name (ARN) of
--   the resource from which you want to remove tags.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:resourcetype/ExampleResource</tt></li>
--   </ul>
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   list of tag keys to remove from the specified resource.
newUntagResource :: Text -> NonEmpty Text -> UntagResource

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | <i>See:</i> <a>newBatchDeleteDevicePositionHistory</a> smart
--   constructor.
data BatchDeleteDevicePositionHistory
BatchDeleteDevicePositionHistory' :: NonEmpty Text -> Text -> BatchDeleteDevicePositionHistory

-- | Create a value of <a>BatchDeleteDevicePositionHistory</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceIds:BatchDeleteDevicePositionHistory'</a>,
--   <a>batchDeleteDevicePositionHistory_deviceIds</a> - Devices whose
--   position history you want to delete.
--   
--   <ul>
--   <li>For example, for two devices: <tt>“DeviceIds” :
--   [DeviceId1,DeviceId2]</tt></li>
--   </ul>
--   
--   <a>$sel:trackerName:BatchDeleteDevicePositionHistory'</a>,
--   <a>batchDeleteDevicePositionHistory_trackerName</a> - The name of the
--   tracker resource to delete the device position history from.
newBatchDeleteDevicePositionHistory :: NonEmpty Text -> Text -> BatchDeleteDevicePositionHistory

-- | <i>See:</i> <a>newBatchDeleteDevicePositionHistoryResponse</a> smart
--   constructor.
data BatchDeleteDevicePositionHistoryResponse
BatchDeleteDevicePositionHistoryResponse' :: Int -> [BatchDeleteDevicePositionHistoryError] -> BatchDeleteDevicePositionHistoryResponse

-- | Create a value of <a>BatchDeleteDevicePositionHistoryResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:BatchDeleteDevicePositionHistoryResponse'</a>,
--   <a>batchDeleteDevicePositionHistoryResponse_httpStatus</a> - The
--   response's http status code.
--   
--   <a>$sel:errors:BatchDeleteDevicePositionHistoryResponse'</a>,
--   <a>batchDeleteDevicePositionHistoryResponse_errors</a> - Contains
--   error details for each device history that failed to delete.
newBatchDeleteDevicePositionHistoryResponse :: Int -> BatchDeleteDevicePositionHistoryResponse

-- | <i>See:</i> <a>newListPlaceIndexes</a> smart constructor.
data ListPlaceIndexes
ListPlaceIndexes' :: Maybe Text -> Maybe Natural -> ListPlaceIndexes

-- | Create a value of <a>ListPlaceIndexes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListPlaceIndexes'</a>,
--   <a>listPlaceIndexes_nextToken</a> - The pagination token specifying
--   which page of results to return in the response. If no token is
--   provided, the default page is the first page.
--   
--   Default value: <tt>null</tt>
--   
--   <a>$sel:maxResults:ListPlaceIndexes'</a>,
--   <a>listPlaceIndexes_maxResults</a> - An optional limit for the maximum
--   number of results returned in a single call.
--   
--   Default value: <tt>100</tt>
newListPlaceIndexes :: ListPlaceIndexes

-- | <i>See:</i> <a>newListPlaceIndexesResponse</a> smart constructor.
data ListPlaceIndexesResponse
ListPlaceIndexesResponse' :: Maybe Text -> Int -> [ListPlaceIndexesResponseEntry] -> ListPlaceIndexesResponse

-- | Create a value of <a>ListPlaceIndexesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListPlaceIndexes'</a>,
--   <a>listPlaceIndexesResponse_nextToken</a> - A pagination token
--   indicating there are additional pages available. You can use the token
--   in a following request to fetch the next set of results.
--   
--   <a>$sel:httpStatus:ListPlaceIndexesResponse'</a>,
--   <a>listPlaceIndexesResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:entries:ListPlaceIndexesResponse'</a>,
--   <a>listPlaceIndexesResponse_entries</a> - Lists the place index
--   resources that exist in your AWS account
newListPlaceIndexesResponse :: Int -> ListPlaceIndexesResponse

-- | <i>See:</i> <a>newSearchPlaceIndexForPosition</a> smart constructor.
data SearchPlaceIndexForPosition
SearchPlaceIndexForPosition' :: Maybe Natural -> Text -> Sensitive (NonEmpty Double) -> SearchPlaceIndexForPosition

-- | Create a value of <a>SearchPlaceIndexForPosition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxResults:SearchPlaceIndexForPosition'</a>,
--   <a>searchPlaceIndexForPosition_maxResults</a> - An optional paramer.
--   The maximum number of results returned per request.
--   
--   Default value: <tt>50</tt>
--   
--   <a>$sel:indexName:SearchPlaceIndexForPosition'</a>,
--   <a>searchPlaceIndexForPosition_indexName</a> - The name of the place
--   index resource you want to use for the search.
--   
--   <a>$sel:position:SearchPlaceIndexForPosition'</a>,
--   <a>searchPlaceIndexForPosition_position</a> - Specifies a coordinate
--   for the query defined by a longitude, and latitude.
--   
--   <ul>
--   <li>The first position is the X coordinate, or longitude.</li>
--   <li>The second position is the Y coordinate, or latitude.</li>
--   </ul>
--   
--   For example, <tt>position=xLongitude&amp;position=yLatitude</tt> .
newSearchPlaceIndexForPosition :: Text -> NonEmpty Double -> SearchPlaceIndexForPosition

-- | <i>See:</i> <a>newSearchPlaceIndexForPositionResponse</a> smart
--   constructor.
data SearchPlaceIndexForPositionResponse
SearchPlaceIndexForPositionResponse' :: Int -> [SearchForPositionResult] -> SearchPlaceIndexForPositionSummary -> SearchPlaceIndexForPositionResponse

-- | Create a value of <a>SearchPlaceIndexForPositionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:SearchPlaceIndexForPositionResponse'</a>,
--   <a>searchPlaceIndexForPositionResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:results:SearchPlaceIndexForPositionResponse'</a>,
--   <a>searchPlaceIndexForPositionResponse_results</a> - Returns a list of
--   Places closest to the specified position. Each result contains
--   additional information about the Places returned.
--   
--   <a>$sel:summary:SearchPlaceIndexForPositionResponse'</a>,
--   <a>searchPlaceIndexForPositionResponse_summary</a> - Contains a
--   summary of the request.
newSearchPlaceIndexForPositionResponse :: Int -> SearchPlaceIndexForPositionSummary -> SearchPlaceIndexForPositionResponse

-- | <i>See:</i> <a>newDeleteTracker</a> smart constructor.
data DeleteTracker
DeleteTracker' :: Text -> DeleteTracker

-- | Create a value of <a>DeleteTracker</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:trackerName:DeleteTracker'</a>,
--   <a>deleteTracker_trackerName</a> - The name of the tracker resource to
--   be deleted.
newDeleteTracker :: Text -> DeleteTracker

-- | <i>See:</i> <a>newDeleteTrackerResponse</a> smart constructor.
data DeleteTrackerResponse
DeleteTrackerResponse' :: Int -> DeleteTrackerResponse

-- | Create a value of <a>DeleteTrackerResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteTrackerResponse'</a>,
--   <a>deleteTrackerResponse_httpStatus</a> - The response's http status
--   code.
newDeleteTrackerResponse :: Int -> DeleteTrackerResponse

-- | <i>See:</i> <a>newCreatePlaceIndex</a> smart constructor.
data CreatePlaceIndex
CreatePlaceIndex' :: Maybe DataSourceConfiguration -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> Text -> PricingPlan -> CreatePlaceIndex

-- | Create a value of <a>CreatePlaceIndex</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataSourceConfiguration:CreatePlaceIndex'</a>,
--   <a>createPlaceIndex_dataSourceConfiguration</a> - Specifies the data
--   storage option requesting Places.
--   
--   <a>$sel:description:CreatePlaceIndex'</a>,
--   <a>createPlaceIndex_description</a> - The optional description for the
--   place index resource.
--   
--   <a>$sel:tags:CreatePlaceIndex'</a>, <a>createPlaceIndex_tags</a> -
--   Applies one or more tags to the place index resource. A tag is a
--   key-value pair helps manage, identify, search, and filter your
--   resources by labelling them.
--   
--   Format: <tt>"key" : "value"</tt>
--   
--   Restrictions:
--   
--   <ul>
--   <li>Maximum 50 tags per resource</li>
--   <li>Each resource tag must be unique with a maximum of one value.</li>
--   <li>Maximum key length: 128 Unicode characters in UTF-8</li>
--   <li>Maximum value length: 256 Unicode characters in UTF-8</li>
--   <li>Can use alphanumeric characters (A–Z, a–z, 0–9), and the following
--   characters: + - = . _ : / @.</li>
--   </ul>
--   
--   <a>$sel:dataSource:CreatePlaceIndex'</a>,
--   <a>createPlaceIndex_dataSource</a> - Specifies the data provider of
--   geospatial data.
--   
--   This field is case-sensitive. Enter the valid values as shown. For
--   example, entering <tt>HERE</tt> returns an error.
--   
--   Valid values include:
--   
--   <ul>
--   <li><tt>Esri</tt> – For additional information about <a>Esri</a>'s
--   coverage in your region of interest, see <a>Esri details on geocoding
--   coverage</a>.</li>
--   <li><tt>Here</tt> – For additional information about <a>HERE
--   Technologies</a>' coverage in your region of interest, see <a>HERE
--   details on goecoding coverage</a>.Place index resources using HERE
--   Technologies as a data provider can't <a>store results</a> for
--   locations in Japan. For more information, see the <a>AWS Service
--   Terms</a> for Amazon Location Service.</li>
--   </ul>
--   
--   For additional information , see <a>Data providers</a> on the
--   <i>Amazon Location Service Developer Guide</i>.
--   
--   <a>$sel:indexName:CreatePlaceIndex'</a>,
--   <a>createPlaceIndex_indexName</a> - The name of the place index
--   resource.
--   
--   Requirements:
--   
--   <ul>
--   <li>Contain only alphanumeric characters (A–Z, a–z, 0–9), hyphens (-),
--   periods (.), and underscores (_).</li>
--   <li>Must be a unique place index resource name.</li>
--   <li>No spaces allowed. For example, <tt>ExamplePlaceIndex</tt>.</li>
--   </ul>
--   
--   <a>$sel:pricingPlan:CreatePlaceIndex'</a>,
--   <a>createPlaceIndex_pricingPlan</a> - Specifies the pricing plan for
--   your place index resource.
--   
--   For additional details and restrictions on each pricing plan option,
--   see <a>Amazon Location Service pricing</a>.
newCreatePlaceIndex :: Text -> Text -> PricingPlan -> CreatePlaceIndex

-- | <i>See:</i> <a>newCreatePlaceIndexResponse</a> smart constructor.
data CreatePlaceIndexResponse
CreatePlaceIndexResponse' :: Int -> POSIX -> Text -> Text -> CreatePlaceIndexResponse

-- | Create a value of <a>CreatePlaceIndexResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreatePlaceIndexResponse'</a>,
--   <a>createPlaceIndexResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:createTime:CreatePlaceIndexResponse'</a>,
--   <a>createPlaceIndexResponse_createTime</a> - The timestamp for when
--   the place index resource was created in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
--   
--   <a>$sel:indexArn:CreatePlaceIndexResponse'</a>,
--   <a>createPlaceIndexResponse_indexArn</a> - The Amazon Resource Name
--   (ARN) for the place index resource. Used to specify a resource across
--   AWS.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:place-index/ExamplePlaceIndex</tt></li>
--   </ul>
--   
--   <a>$sel:indexName:CreatePlaceIndex'</a>,
--   <a>createPlaceIndexResponse_indexName</a> - The name for the place
--   index resource.
newCreatePlaceIndexResponse :: Int -> UTCTime -> Text -> Text -> CreatePlaceIndexResponse

-- | <i>See:</i> <a>newUpdateTracker</a> smart constructor.
data UpdateTracker
UpdateTracker' :: Maybe PricingPlan -> Maybe Text -> Maybe Text -> Maybe PositionFiltering -> Text -> UpdateTracker

-- | Create a value of <a>UpdateTracker</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pricingPlan:UpdateTracker'</a>,
--   <a>updateTracker_pricingPlan</a> - Updates the pricing plan for the
--   tracker resource.
--   
--   For more information about each pricing plan option restrictions, see
--   <a>Amazon Location Service pricing</a>.
--   
--   <a>$sel:pricingPlanDataSource:UpdateTracker'</a>,
--   <a>updateTracker_pricingPlanDataSource</a> - Updates the data provider
--   for the tracker resource.
--   
--   A required value for the following pricing plans:
--   <tt>MobileAssetTracking</tt>| <tt>MobileAssetManagement</tt>
--   
--   For more information about <a>data providers</a> and <a>pricing
--   plans</a>, see the Amazon Location Service product page
--   
--   This can only be updated when updating the <tt>PricingPlan</tt> in the
--   same request.
--   
--   Amazon Location Service uses <tt>PricingPlanDataSource</tt> to
--   calculate billing for your tracker resource. Your data won't be shared
--   with the data provider, and will remain in your AWS account and Region
--   unless you move it.
--   
--   <a>$sel:description:UpdateTracker'</a>,
--   <a>updateTracker_description</a> - Updates the description for the
--   tracker resource.
--   
--   <a>$sel:positionFiltering:UpdateTracker'</a>,
--   <a>updateTracker_positionFiltering</a> - Updates the position
--   filtering for the tracker resource.
--   
--   Valid values:
--   
--   <ul>
--   <li><tt>TimeBased</tt> - Location updates are evaluated against linked
--   geofence collections, but not every location update is stored. If your
--   update frequency is more often than 30 seconds, only one update per 30
--   seconds is stored for each unique device ID.</li>
--   <li><tt>DistanceBased</tt> - If the device has moved less than 30 m
--   (98.4 ft), location updates are ignored. Location updates within this
--   distance are neither evaluated against linked geofence collections,
--   nor stored. This helps control costs by reducing the number of
--   geofence evaluations and device positions to retrieve. Distance-based
--   filtering can also reduce the jitter effect when displaying device
--   trajectory on a map.</li>
--   </ul>
--   
--   <a>$sel:trackerName:UpdateTracker'</a>,
--   <a>updateTracker_trackerName</a> - The name of the tracker resource to
--   update.
newUpdateTracker :: Text -> UpdateTracker

-- | <i>See:</i> <a>newUpdateTrackerResponse</a> smart constructor.
data UpdateTrackerResponse
UpdateTrackerResponse' :: Int -> Text -> Text -> POSIX -> UpdateTrackerResponse

-- | Create a value of <a>UpdateTrackerResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateTrackerResponse'</a>,
--   <a>updateTrackerResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:trackerArn:UpdateTrackerResponse'</a>,
--   <a>updateTrackerResponse_trackerArn</a> - The Amazon Resource Name
--   (ARN) of the updated tracker resource. Used to specify a resource
--   across AWS.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:tracker/ExampleTracker</tt></li>
--   </ul>
--   
--   <a>$sel:trackerName:UpdateTracker'</a>,
--   <a>updateTrackerResponse_trackerName</a> - The name of the updated
--   tracker resource.
--   
--   <a>$sel:updateTime:UpdateTrackerResponse'</a>,
--   <a>updateTrackerResponse_updateTime</a> - The timestamp for when the
--   tracker resource was last updated in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
newUpdateTrackerResponse :: Int -> Text -> Text -> UTCTime -> UpdateTrackerResponse

-- | <i>See:</i> <a>newCreateRouteCalculator</a> smart constructor.
data CreateRouteCalculator
CreateRouteCalculator' :: Maybe Text -> Maybe (HashMap Text Text) -> Text -> Text -> PricingPlan -> CreateRouteCalculator

-- | Create a value of <a>CreateRouteCalculator</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:CreateRouteCalculator'</a>,
--   <a>createRouteCalculator_description</a> - The optional description
--   for the route calculator resource.
--   
--   <a>$sel:tags:CreateRouteCalculator'</a>,
--   <a>createRouteCalculator_tags</a> - Applies one or more tags to the
--   route calculator resource. A tag is a key-value pair helps manage,
--   identify, search, and filter your resources by labelling them.
--   
--   <ul>
--   <li>For example: { <tt>"tag1" : "value1"</tt>, <tt>"tag2" :
--   "value2"</tt>}</li>
--   </ul>
--   
--   Format: <tt>"key" : "value"</tt>
--   
--   Restrictions:
--   
--   <ul>
--   <li>Maximum 50 tags per resource</li>
--   <li>Each resource tag must be unique with a maximum of one value.</li>
--   <li>Maximum key length: 128 Unicode characters in UTF-8</li>
--   <li>Maximum value length: 256 Unicode characters in UTF-8</li>
--   <li>Can use alphanumeric characters (A–Z, a–z, 0–9), and the following
--   characters: + - = . _ : / @.</li>
--   </ul>
--   
--   <a>$sel:calculatorName:CreateRouteCalculator'</a>,
--   <a>createRouteCalculator_calculatorName</a> - The name of the route
--   calculator resource.
--   
--   Requirements:
--   
--   <ul>
--   <li>Can use alphanumeric characters (A–Z, a–z, 0–9) , hyphens (-),
--   periods (.), and underscores (_).</li>
--   <li>Must be a unique Route calculator resource name.</li>
--   <li>No spaces allowed. For example,
--   <tt>ExampleRouteCalculator</tt>.</li>
--   </ul>
--   
--   <a>$sel:dataSource:CreateRouteCalculator'</a>,
--   <a>createRouteCalculator_dataSource</a> - Specifies the data provider
--   of traffic and road network data.
--   
--   This field is case-sensitive. Enter the valid values as shown. For
--   example, entering <tt>HERE</tt> returns an error. Route calculators
--   that use Esri as a data source only calculate routes that are shorter
--   than 400 km.
--   
--   Valid values include:
--   
--   <ul>
--   <li><tt>Esri</tt> – For additional information about <a>Esri</a>'s
--   coverage in your region of interest, see <a>Esri details on street
--   networks and traffic coverage</a>.</li>
--   <li><tt>Here</tt> – For additional information about <a>HERE
--   Technologies</a>' coverage in your region of interest, see <a>HERE car
--   routing coverage</a> and <a>HERE truck routing coverage</a>.</li>
--   </ul>
--   
--   For additional information , see <a>Data providers</a> on the
--   <i>Amazon Location Service Developer Guide</i>.
--   
--   <a>$sel:pricingPlan:CreateRouteCalculator'</a>,
--   <a>createRouteCalculator_pricingPlan</a> - Specifies the pricing plan
--   for your route calculator resource.
--   
--   For additional details and restrictions on each pricing plan option,
--   see <a>Amazon Location Service pricing</a>.
newCreateRouteCalculator :: Text -> Text -> PricingPlan -> CreateRouteCalculator

-- | <i>See:</i> <a>newCreateRouteCalculatorResponse</a> smart constructor.
data CreateRouteCalculatorResponse
CreateRouteCalculatorResponse' :: Int -> Text -> Text -> POSIX -> CreateRouteCalculatorResponse

-- | Create a value of <a>CreateRouteCalculatorResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateRouteCalculatorResponse'</a>,
--   <a>createRouteCalculatorResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:calculatorArn:CreateRouteCalculatorResponse'</a>,
--   <a>createRouteCalculatorResponse_calculatorArn</a> - The Amazon
--   Resource Name (ARN) for the route calculator resource. Use the ARN
--   when you specify a resource across all AWS.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:route-calculator/ExampleCalculator</tt></li>
--   </ul>
--   
--   <a>$sel:calculatorName:CreateRouteCalculator'</a>,
--   <a>createRouteCalculatorResponse_calculatorName</a> - The name of the
--   route calculator resource.
--   
--   <ul>
--   <li>For example, <tt>ExampleRouteCalculator</tt>.</li>
--   </ul>
--   
--   <a>$sel:createTime:CreateRouteCalculatorResponse'</a>,
--   <a>createRouteCalculatorResponse_createTime</a> - The timestamp when
--   the route calculator resource was created in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
--   
--   <ul>
--   <li>For example, <tt>2020–07-2T12:15:20.000Z+01:00</tt></li>
--   </ul>
newCreateRouteCalculatorResponse :: Int -> Text -> Text -> UTCTime -> CreateRouteCalculatorResponse

-- | <i>See:</i> <a>newDescribeMap</a> smart constructor.
data DescribeMap
DescribeMap' :: Text -> DescribeMap

-- | Create a value of <a>DescribeMap</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mapName:DescribeMap'</a>, <a>describeMap_mapName</a> - The
--   name of the map resource.
newDescribeMap :: Text -> DescribeMap

-- | <i>See:</i> <a>newDescribeMapResponse</a> smart constructor.
data DescribeMapResponse
DescribeMapResponse' :: Maybe (HashMap Text Text) -> Int -> MapConfiguration -> POSIX -> Text -> Text -> Text -> Text -> PricingPlan -> POSIX -> DescribeMapResponse

-- | Create a value of <a>DescribeMapResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:DescribeMapResponse'</a>, <a>describeMapResponse_tags</a>
--   - Tags associated with the map resource.
--   
--   <a>$sel:httpStatus:DescribeMapResponse'</a>,
--   <a>describeMapResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:configuration:DescribeMapResponse'</a>,
--   <a>describeMapResponse_configuration</a> - Specifies the map tile
--   style selected from a partner data provider.
--   
--   <a>$sel:createTime:DescribeMapResponse'</a>,
--   <a>describeMapResponse_createTime</a> - The timestamp for when the map
--   resource was created in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
--   
--   <a>$sel:dataSource:DescribeMapResponse'</a>,
--   <a>describeMapResponse_dataSource</a> - Specifies the data provider
--   for the associated map tiles.
--   
--   <a>$sel:description:DescribeMapResponse'</a>,
--   <a>describeMapResponse_description</a> - The optional description for
--   the map resource.
--   
--   <a>$sel:mapArn:DescribeMapResponse'</a>,
--   <a>describeMapResponse_mapArn</a> - The Amazon Resource Name (ARN) for
--   the map resource. Used to specify a resource across all AWS.
--   
--   <ul>
--   <li>Format example:
--   <tt>arn:aws:geo:region:account-id:maps/ExampleMap</tt></li>
--   </ul>
--   
--   <a>$sel:mapName:DescribeMap'</a>, <a>describeMapResponse_mapName</a> -
--   The map style selected from an available provider.
--   
--   <a>$sel:pricingPlan:DescribeMapResponse'</a>,
--   <a>describeMapResponse_pricingPlan</a> - The pricing plan selected for
--   the specified map resource.
--   
--   <pre>
--   &lt;p&gt;For additional details and restrictions on each pricing plan option, see &lt;a href="https://aws.amazon.com/location/pricing/"&gt;Amazon Location Service pricing&lt;/a&gt;.&lt;/p&gt;
--   </pre>
--   
--   <a>$sel:updateTime:DescribeMapResponse'</a>,
--   <a>describeMapResponse_updateTime</a> - The timestamp for when the map
--   resource was last update in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
newDescribeMapResponse :: Int -> MapConfiguration -> UTCTime -> Text -> Text -> Text -> Text -> PricingPlan -> UTCTime -> DescribeMapResponse
newtype BatchItemErrorCode
BatchItemErrorCode' :: Text -> BatchItemErrorCode
[fromBatchItemErrorCode] :: BatchItemErrorCode -> Text
pattern BatchItemErrorCode_AccessDeniedError :: BatchItemErrorCode
pattern BatchItemErrorCode_ConflictError :: BatchItemErrorCode
pattern BatchItemErrorCode_InternalServerError :: BatchItemErrorCode
pattern BatchItemErrorCode_ResourceNotFoundError :: BatchItemErrorCode
pattern BatchItemErrorCode_ThrottlingError :: BatchItemErrorCode
pattern BatchItemErrorCode_ValidationError :: BatchItemErrorCode
newtype DimensionUnit
DimensionUnit' :: Text -> DimensionUnit
[fromDimensionUnit] :: DimensionUnit -> Text
pattern DimensionUnit_Feet :: DimensionUnit
pattern DimensionUnit_Meters :: DimensionUnit
newtype DistanceUnit
DistanceUnit' :: Text -> DistanceUnit
[fromDistanceUnit] :: DistanceUnit -> Text
pattern DistanceUnit_Kilometers :: DistanceUnit
pattern DistanceUnit_Miles :: DistanceUnit
newtype IntendedUse
IntendedUse' :: Text -> IntendedUse
[fromIntendedUse] :: IntendedUse -> Text
pattern IntendedUse_SingleUse :: IntendedUse
pattern IntendedUse_Storage :: IntendedUse
newtype PositionFiltering
PositionFiltering' :: Text -> PositionFiltering
[fromPositionFiltering] :: PositionFiltering -> Text
pattern PositionFiltering_DistanceBased :: PositionFiltering
pattern PositionFiltering_TimeBased :: PositionFiltering
newtype PricingPlan
PricingPlan' :: Text -> PricingPlan
[fromPricingPlan] :: PricingPlan -> Text
pattern PricingPlan_MobileAssetManagement :: PricingPlan
pattern PricingPlan_MobileAssetTracking :: PricingPlan
pattern PricingPlan_RequestBasedUsage :: PricingPlan
newtype TravelMode
TravelMode' :: Text -> TravelMode
[fromTravelMode] :: TravelMode -> Text
pattern TravelMode_Car :: TravelMode
pattern TravelMode_Truck :: TravelMode
pattern TravelMode_Walking :: TravelMode
newtype VehicleWeightUnit
VehicleWeightUnit' :: Text -> VehicleWeightUnit
[fromVehicleWeightUnit] :: VehicleWeightUnit -> Text
pattern VehicleWeightUnit_Kilograms :: VehicleWeightUnit
pattern VehicleWeightUnit_Pounds :: VehicleWeightUnit

-- | Contains the tracker resource details.
--   
--   <i>See:</i> <a>newBatchDeleteDevicePositionHistoryError</a> smart
--   constructor.
data BatchDeleteDevicePositionHistoryError
BatchDeleteDevicePositionHistoryError' :: Text -> BatchItemError -> BatchDeleteDevicePositionHistoryError

-- | Create a value of <a>BatchDeleteDevicePositionHistoryError</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceId:BatchDeleteDevicePositionHistoryError'</a>,
--   <a>batchDeleteDevicePositionHistoryError_deviceId</a> - The ID of the
--   device for this position.
--   
--   <a>$sel:error:BatchDeleteDevicePositionHistoryError'</a>,
--   <a>batchDeleteDevicePositionHistoryError_error</a> - Undocumented
--   member.
newBatchDeleteDevicePositionHistoryError :: Text -> BatchItemError -> BatchDeleteDevicePositionHistoryError

-- | Contains error details for each geofence that failed to delete from
--   the geofence collection.
--   
--   <i>See:</i> <a>newBatchDeleteGeofenceError</a> smart constructor.
data BatchDeleteGeofenceError
BatchDeleteGeofenceError' :: BatchItemError -> Text -> BatchDeleteGeofenceError

-- | Create a value of <a>BatchDeleteGeofenceError</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:error:BatchDeleteGeofenceError'</a>,
--   <a>batchDeleteGeofenceError_error</a> - Contains details associated to
--   the batch error.
--   
--   <a>$sel:geofenceId:BatchDeleteGeofenceError'</a>,
--   <a>batchDeleteGeofenceError_geofenceId</a> - The geofence associated
--   with the error message.
newBatchDeleteGeofenceError :: BatchItemError -> Text -> BatchDeleteGeofenceError

-- | Contains error details for each device that failed to evaluate its
--   position against the geofences in a given geofence collection.
--   
--   <i>See:</i> <a>newBatchEvaluateGeofencesError</a> smart constructor.
data BatchEvaluateGeofencesError
BatchEvaluateGeofencesError' :: Text -> BatchItemError -> POSIX -> BatchEvaluateGeofencesError

-- | Create a value of <a>BatchEvaluateGeofencesError</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceId:BatchEvaluateGeofencesError'</a>,
--   <a>batchEvaluateGeofencesError_deviceId</a> - The device associated
--   with the position evaluation error.
--   
--   <a>$sel:error:BatchEvaluateGeofencesError'</a>,
--   <a>batchEvaluateGeofencesError_error</a> - Contains details associated
--   to the batch error.
--   
--   <a>$sel:sampleTime:BatchEvaluateGeofencesError'</a>,
--   <a>batchEvaluateGeofencesError_sampleTime</a> - Specifies a timestamp
--   for when the error occurred in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
newBatchEvaluateGeofencesError :: Text -> BatchItemError -> UTCTime -> BatchEvaluateGeofencesError

-- | Contains error details for each device that didn't return a position.
--   
--   <i>See:</i> <a>newBatchGetDevicePositionError</a> smart constructor.
data BatchGetDevicePositionError
BatchGetDevicePositionError' :: Text -> BatchItemError -> BatchGetDevicePositionError

-- | Create a value of <a>BatchGetDevicePositionError</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceId:BatchGetDevicePositionError'</a>,
--   <a>batchGetDevicePositionError_deviceId</a> - The ID of the device
--   that didn't return a position.
--   
--   <a>$sel:error:BatchGetDevicePositionError'</a>,
--   <a>batchGetDevicePositionError_error</a> - Contains details related to
--   the error code.
newBatchGetDevicePositionError :: Text -> BatchItemError -> BatchGetDevicePositionError

-- | Contains the batch request error details associated with the request.
--   
--   <i>See:</i> <a>newBatchItemError</a> smart constructor.
data BatchItemError
BatchItemError' :: Maybe BatchItemErrorCode -> Maybe Text -> BatchItemError

-- | Create a value of <a>BatchItemError</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:code:BatchItemError'</a>, <a>batchItemError_code</a> - The
--   error code associated with the batch request error.
--   
--   <a>$sel:message:BatchItemError'</a>, <a>batchItemError_message</a> - A
--   message with the reason for the batch request error.
newBatchItemError :: BatchItemError

-- | Contains error details for each geofence that failed to be stored in a
--   given geofence collection.
--   
--   <i>See:</i> <a>newBatchPutGeofenceError</a> smart constructor.
data BatchPutGeofenceError
BatchPutGeofenceError' :: BatchItemError -> Text -> BatchPutGeofenceError

-- | Create a value of <a>BatchPutGeofenceError</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:error:BatchPutGeofenceError'</a>,
--   <a>batchPutGeofenceError_error</a> - Contains details associated to
--   the batch error.
--   
--   <a>$sel:geofenceId:BatchPutGeofenceError'</a>,
--   <a>batchPutGeofenceError_geofenceId</a> - The geofence associated with
--   the error message.
newBatchPutGeofenceError :: BatchItemError -> Text -> BatchPutGeofenceError

-- | Contains geofence geometry details.
--   
--   <i>See:</i> <a>newBatchPutGeofenceRequestEntry</a> smart constructor.
data BatchPutGeofenceRequestEntry
BatchPutGeofenceRequestEntry' :: Text -> GeofenceGeometry -> BatchPutGeofenceRequestEntry

-- | Create a value of <a>BatchPutGeofenceRequestEntry</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:geofenceId:BatchPutGeofenceRequestEntry'</a>,
--   <a>batchPutGeofenceRequestEntry_geofenceId</a> - The identifier for
--   the geofence to be stored in a given geofence collection.
--   
--   <a>$sel:geometry:BatchPutGeofenceRequestEntry'</a>,
--   <a>batchPutGeofenceRequestEntry_geometry</a> - Contains the polygon
--   details to specify the position of the geofence.
--   
--   Each <a>geofence polygon</a> can have a maximum of 1,000 vertices.
newBatchPutGeofenceRequestEntry :: Text -> GeofenceGeometry -> BatchPutGeofenceRequestEntry

-- | Contains a summary of each geofence that was successfully stored in a
--   given geofence collection.
--   
--   <i>See:</i> <a>newBatchPutGeofenceSuccess</a> smart constructor.
data BatchPutGeofenceSuccess
BatchPutGeofenceSuccess' :: POSIX -> Text -> POSIX -> BatchPutGeofenceSuccess

-- | Create a value of <a>BatchPutGeofenceSuccess</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createTime:BatchPutGeofenceSuccess'</a>,
--   <a>batchPutGeofenceSuccess_createTime</a> - The timestamp for when the
--   geofence was stored in a geofence collection in <a>ISO 8601</a>
--   format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
--   
--   <a>$sel:geofenceId:BatchPutGeofenceSuccess'</a>,
--   <a>batchPutGeofenceSuccess_geofenceId</a> - The geofence successfully
--   stored in a geofence collection.
--   
--   <a>$sel:updateTime:BatchPutGeofenceSuccess'</a>,
--   <a>batchPutGeofenceSuccess_updateTime</a> - The timestamp for when the
--   geofence was last updated in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
newBatchPutGeofenceSuccess :: UTCTime -> Text -> UTCTime -> BatchPutGeofenceSuccess

-- | Contains error details for each device that failed to update its
--   position.
--   
--   <i>See:</i> <a>newBatchUpdateDevicePositionError</a> smart
--   constructor.
data BatchUpdateDevicePositionError
BatchUpdateDevicePositionError' :: Text -> BatchItemError -> POSIX -> BatchUpdateDevicePositionError

-- | Create a value of <a>BatchUpdateDevicePositionError</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceId:BatchUpdateDevicePositionError'</a>,
--   <a>batchUpdateDevicePositionError_deviceId</a> - The device associated
--   with the failed location update.
--   
--   <a>$sel:error:BatchUpdateDevicePositionError'</a>,
--   <a>batchUpdateDevicePositionError_error</a> - Contains details related
--   to the error code such as the error code and error message.
--   
--   <a>$sel:sampleTime:BatchUpdateDevicePositionError'</a>,
--   <a>batchUpdateDevicePositionError_sampleTime</a> - The timestamp at
--   which the device position was determined. Uses <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
newBatchUpdateDevicePositionError :: Text -> BatchItemError -> UTCTime -> BatchUpdateDevicePositionError

-- | Contains details about additional route preferences for requests that
--   specify <tt>TravelMode</tt> as <tt>Car</tt>.
--   
--   <i>See:</i> <a>newCalculateRouteCarModeOptions</a> smart constructor.
data CalculateRouteCarModeOptions
CalculateRouteCarModeOptions' :: Maybe Bool -> Maybe Bool -> CalculateRouteCarModeOptions

-- | Create a value of <a>CalculateRouteCarModeOptions</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:avoidTolls:CalculateRouteCarModeOptions'</a>,
--   <a>calculateRouteCarModeOptions_avoidTolls</a> - Avoids tolls when
--   calculating routes.
--   
--   Default Value: <tt>false</tt>
--   
--   Valid Values: <tt>false</tt> | <tt>true</tt>
--   
--   <a>$sel:avoidFerries:CalculateRouteCarModeOptions'</a>,
--   <a>calculateRouteCarModeOptions_avoidFerries</a> - Avoids ferries when
--   calculating routes.
--   
--   Default Value: <tt>false</tt>
--   
--   Valid Values: <tt>false</tt> | <tt>true</tt>
newCalculateRouteCarModeOptions :: CalculateRouteCarModeOptions

-- | A summary of the calculated route.
--   
--   <i>See:</i> <a>newCalculateRouteSummary</a> smart constructor.
data CalculateRouteSummary
CalculateRouteSummary' :: Text -> Double -> DistanceUnit -> Double -> Sensitive (NonEmpty Double) -> CalculateRouteSummary

-- | Create a value of <a>CalculateRouteSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataSource:CalculateRouteSummary'</a>,
--   <a>calculateRouteSummary_dataSource</a> - The data provider of traffic
--   and road network data used to calculate the route. Indicates one of
--   the available providers:
--   
--   <ul>
--   <li><pre>Esri</pre></li>
--   <li><pre>Here</pre></li>
--   </ul>
--   
--   For more information about data providers, see <a>Amazon Location
--   Service data providers</a>.
--   
--   <a>$sel:distance:CalculateRouteSummary'</a>,
--   <a>calculateRouteSummary_distance</a> - The total distance covered by
--   the route. The sum of the distance travelled between every stop on the
--   route.
--   
--   If Esri is the data source for the route calculator, the route
--   distance can’t be greater than 400 km. If the route exceeds 400 km,
--   the response is a <tt>400 RoutesValidationException</tt> error.
--   
--   <a>$sel:distanceUnit:CalculateRouteSummary'</a>,
--   <a>calculateRouteSummary_distanceUnit</a> - The unit of measurement
--   for the distance.
--   
--   <a>$sel:durationSeconds:CalculateRouteSummary'</a>,
--   <a>calculateRouteSummary_durationSeconds</a> - The total travel time
--   for the route measured in seconds. The sum of the travel time between
--   every stop on the route.
--   
--   <a>$sel:routeBBox:CalculateRouteSummary'</a>,
--   <a>calculateRouteSummary_routeBBox</a> - Specifies a geographical box
--   surrounding a route. Used to zoom into a route when displaying it in a
--   map. For example, <tt>[min x, min y, max x, max y]</tt>.
--   
--   The first 2 <tt>bbox</tt> parameters describe the lower southwest
--   corner:
--   
--   <ul>
--   <li>The first <tt>bbox</tt> position is the X coordinate or longitude
--   of the lower southwest corner.</li>
--   <li>The second <tt>bbox</tt> position is the Y coordinate or latitude
--   of the lower southwest corner.</li>
--   </ul>
--   
--   The next 2 <tt>bbox</tt> parameters describe the upper northeast
--   corner:
--   
--   <ul>
--   <li>The third <tt>bbox</tt> position is the X coordinate, or longitude
--   of the upper northeast corner.</li>
--   <li>The fourth <tt>bbox</tt> position is the Y coordinate, or latitude
--   of the upper northeast corner.</li>
--   </ul>
newCalculateRouteSummary :: Text -> Double -> DistanceUnit -> Double -> NonEmpty Double -> CalculateRouteSummary

-- | Contains details about additional route preferences for requests that
--   specify <tt>TravelMode</tt> as <tt>Truck</tt>.
--   
--   <i>See:</i> <a>newCalculateRouteTruckModeOptions</a> smart
--   constructor.
data CalculateRouteTruckModeOptions
CalculateRouteTruckModeOptions' :: Maybe TruckWeight -> Maybe Bool -> Maybe TruckDimensions -> Maybe Bool -> CalculateRouteTruckModeOptions

-- | Create a value of <a>CalculateRouteTruckModeOptions</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:weight:CalculateRouteTruckModeOptions'</a>,
--   <a>calculateRouteTruckModeOptions_weight</a> - Specifies the truck's
--   weight specifications including total weight and unit of measurement.
--   Used to avoid roads that can't support the truck's weight.
--   
--   <a>$sel:avoidTolls:CalculateRouteTruckModeOptions'</a>,
--   <a>calculateRouteTruckModeOptions_avoidTolls</a> - Avoids ferries when
--   calculating routes.
--   
--   Default Value: <tt>false</tt>
--   
--   Valid Values: <tt>false</tt> | <tt>true</tt>
--   
--   <a>$sel:dimensions:CalculateRouteTruckModeOptions'</a>,
--   <a>calculateRouteTruckModeOptions_dimensions</a> - Specifies the
--   truck's dimension specifications including length, height, width, and
--   unit of measurement. Used to avoid roads that can't support the
--   truck's dimensions.
--   
--   <a>$sel:avoidFerries:CalculateRouteTruckModeOptions'</a>,
--   <a>calculateRouteTruckModeOptions_avoidFerries</a> - Avoids ferries
--   when calculating routes.
--   
--   Default Value: <tt>false</tt>
--   
--   Valid Values: <tt>false</tt> | <tt>true</tt>
newCalculateRouteTruckModeOptions :: CalculateRouteTruckModeOptions

-- | Specifies the data storage option chosen for requesting Places.
--   
--   When using Amazon Location Places:
--   
--   <ul>
--   <li>If using HERE Technologies as a data provider, you can't store
--   results for locations in Japan by setting <tt>IntendedUse</tt> to
--   <tt>Storage</tt>. parameter.</li>
--   <li>Under the <tt>MobileAssetTracking</tt> or
--   <tt>MobilAssetManagement</tt> pricing plan, you can't store results
--   from your place index resources by setting <tt>IntendedUse</tt> to
--   <tt>Storage</tt>. This returns a validation exception error.</li>
--   </ul>
--   
--   For more information, see the <a>AWS Service Terms</a> for Amazon
--   Location Service.
--   
--   <i>See:</i> <a>newDataSourceConfiguration</a> smart constructor.
data DataSourceConfiguration
DataSourceConfiguration' :: Maybe IntendedUse -> DataSourceConfiguration

-- | Create a value of <a>DataSourceConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:intendedUse:DataSourceConfiguration'</a>,
--   <a>dataSourceConfiguration_intendedUse</a> - Specifies how the results
--   of an operation will be stored by the caller.
--   
--   Valid values include:
--   
--   <ul>
--   <li><tt>SingleUse</tt> specifies that the results won't be
--   stored.</li>
--   <li><tt>Storage</tt> specifies that the result can be cached or stored
--   in a database.</li>
--   </ul>
--   
--   Default value: <tt>SingleUse</tt>
newDataSourceConfiguration :: DataSourceConfiguration

-- | Contains the device position details.
--   
--   <i>See:</i> <a>newDevicePosition</a> smart constructor.
data DevicePosition
DevicePosition' :: Maybe Text -> Sensitive (NonEmpty Double) -> POSIX -> POSIX -> DevicePosition

-- | Create a value of <a>DevicePosition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceId:DevicePosition'</a>, <a>devicePosition_deviceId</a> -
--   The device whose position you retrieved.
--   
--   <a>$sel:position:DevicePosition'</a>, <a>devicePosition_position</a> -
--   The last known device position.
--   
--   <a>$sel:receivedTime:DevicePosition'</a>,
--   <a>devicePosition_receivedTime</a> - The timestamp for when the
--   tracker resource received the device position in <a>ISO 8601</a>
--   format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
--   
--   <a>$sel:sampleTime:DevicePosition'</a>,
--   <a>devicePosition_sampleTime</a> - The timestamp at which the device's
--   position was determined. Uses <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
newDevicePosition :: NonEmpty Double -> UTCTime -> UTCTime -> DevicePosition

-- | Contains the position update details for a device.
--   
--   <i>See:</i> <a>newDevicePositionUpdate</a> smart constructor.
data DevicePositionUpdate
DevicePositionUpdate' :: Text -> Sensitive (NonEmpty Double) -> POSIX -> DevicePositionUpdate

-- | Create a value of <a>DevicePositionUpdate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceId:DevicePositionUpdate'</a>,
--   <a>devicePositionUpdate_deviceId</a> - The device associated to the
--   position update.
--   
--   <a>$sel:position:DevicePositionUpdate'</a>,
--   <a>devicePositionUpdate_position</a> - The latest device position
--   defined in <a>WGS 84</a> format: <tt>[X or longitude, Y or
--   latitude]</tt>.
--   
--   <a>$sel:sampleTime:DevicePositionUpdate'</a>,
--   <a>devicePositionUpdate_sampleTime</a> - The timestamp at which the
--   device's position was determined. Uses <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
newDevicePositionUpdate :: Text -> NonEmpty Double -> UTCTime -> DevicePositionUpdate

-- | Contains the geofence geometry details.
--   
--   Amazon Location doesn't currently support polygons with holes,
--   multipolygons, polygons that are wound clockwise, or that cross the
--   antimeridian.
--   
--   <i>See:</i> <a>newGeofenceGeometry</a> smart constructor.
data GeofenceGeometry
GeofenceGeometry' :: Maybe (NonEmpty (NonEmpty (Sensitive (NonEmpty Double)))) -> GeofenceGeometry

-- | Create a value of <a>GeofenceGeometry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:polygon:GeofenceGeometry'</a>, <a>geofenceGeometry_polygon</a>
--   - An array of 1 or more linear rings. A linear ring is an array of 4
--   or more vertices, where the first and last vertex are the same to form
--   a closed boundary. Each vertex is a 2-dimensional point of the form:
--   <tt>[longitude, latitude]</tt>.
--   
--   The first linear ring is an outer ring, describing the polygon's
--   boundary. Subsequent linear rings may be inner or outer rings to
--   describe holes and islands. Outer rings must list their vertices in
--   counter-clockwise order around the ring's center, where the left side
--   is the polygon's exterior. Inner rings must list their vertices in
--   clockwise order, where the left side is the polygon's interior.
newGeofenceGeometry :: GeofenceGeometry

-- | Contains the calculated route's details for each path between a pair
--   of positions. The number of legs returned corresponds to one fewer
--   than the total number of positions in the request.
--   
--   For example, a route with a departure position and destination
--   position returns one leg with the positions <a>snapped to a nearby
--   road</a>:
--   
--   <ul>
--   <li>The <tt>StartPosition</tt> is the departure position.</li>
--   <li>The <tt>EndPosition</tt> is the destination position.</li>
--   </ul>
--   
--   A route with a waypoint between the departure and destination position
--   returns two legs with the positions snapped to a nearby road:
--   
--   <ul>
--   <li>Leg 1: The <tt>StartPosition</tt> is the departure position . The
--   <tt>EndPosition</tt> is the waypoint positon.</li>
--   <li>Leg 2: The <tt>StartPosition</tt> is the waypoint position. The
--   <tt>EndPosition</tt> is the destination position.</li>
--   </ul>
--   
--   <i>See:</i> <a>newLeg</a> smart constructor.
data Leg
Leg' :: Maybe LegGeometry -> Double -> Double -> Sensitive (NonEmpty Double) -> Sensitive (NonEmpty Double) -> [Step] -> Leg

-- | Create a value of <a>Leg</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:geometry:Leg'</a>, <a>leg_geometry</a> - Contains the
--   calculated route's path as a linestring geometry.
--   
--   <a>$sel:distance:Leg'</a>, <a>leg_distance</a> - The distance between
--   the leg's <tt>StartPosition</tt> and <tt>EndPosition</tt> along a
--   calculated route.
--   
--   <ul>
--   <li>The default measurement is <tt>Kilometers</tt> unless the request
--   specifies a <tt>DistanceUnit</tt> of <tt>Miles</tt>.</li>
--   </ul>
--   
--   <a>$sel:durationSeconds:Leg'</a>, <a>leg_durationSeconds</a> - The
--   estimated travel time between the leg's <tt>StartPosition</tt> and
--   <tt>EndPosition</tt>. The travel mode and departure time that you
--   specify in the request determines the calculated time.
--   
--   <a>$sel:endPosition:Leg'</a>, <a>leg_endPosition</a> - The terminating
--   position of the leg. Follows the format <tt>[longitude,latitude]</tt>.
--   
--   If the <tt>EndPosition</tt> isn't located on a road, it's <a>snapped
--   to a nearby road</a>.
--   
--   <a>$sel:startPosition:Leg'</a>, <a>leg_startPosition</a> - The
--   starting position of the leg. Follows the format
--   <tt>[longitude,latitude]</tt>.
--   
--   If the <tt>StartPosition</tt> isn't located on a road, it's <a>snapped
--   to a nearby road</a>.
--   
--   <a>$sel:steps:Leg'</a>, <a>leg_steps</a> - Contains a list of steps,
--   which represent subsections of a leg. Each step provides instructions
--   for how to move to the next step in the leg such as the step's start
--   position, end position, travel distance, travel duration, and geometry
--   offset.
newLeg :: Double -> Double -> NonEmpty Double -> NonEmpty Double -> Leg

-- | Contains the geometry details for each path between a pair of
--   positions. Used in plotting a route leg on a map.
--   
--   <i>See:</i> <a>newLegGeometry</a> smart constructor.
data LegGeometry
LegGeometry' :: Maybe (NonEmpty (Sensitive (NonEmpty Double))) -> LegGeometry

-- | Create a value of <a>LegGeometry</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lineString:LegGeometry'</a>, <a>legGeometry_lineString</a> -
--   An ordered list of positions used to plot a route on a map.
--   
--   The first position is closest to the start position for the leg, and
--   the last position is the closest to the end position for the leg.
--   
--   <ul>
--   <li>For example, <tt>[[-123.117, 49.284],[-123.115, 49.285],[-123.115,
--   49.285]]</tt></li>
--   </ul>
newLegGeometry :: LegGeometry

-- | Contains the tracker resource details.
--   
--   <i>See:</i> <a>newListDevicePositionsResponseEntry</a> smart
--   constructor.
data ListDevicePositionsResponseEntry
ListDevicePositionsResponseEntry' :: Text -> Sensitive (NonEmpty Double) -> POSIX -> ListDevicePositionsResponseEntry

-- | Create a value of <a>ListDevicePositionsResponseEntry</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceId:ListDevicePositionsResponseEntry'</a>,
--   <a>listDevicePositionsResponseEntry_deviceId</a> - The ID of the
--   device for this position.
--   
--   <a>$sel:position:ListDevicePositionsResponseEntry'</a>,
--   <a>listDevicePositionsResponseEntry_position</a> - The last known
--   device position. Empty if no positions currently stored.
--   
--   <a>$sel:sampleTime:ListDevicePositionsResponseEntry'</a>,
--   <a>listDevicePositionsResponseEntry_sampleTime</a> - The timestamp at
--   which the device position was determined. Uses <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
newListDevicePositionsResponseEntry :: Text -> NonEmpty Double -> UTCTime -> ListDevicePositionsResponseEntry

-- | Contains the geofence collection details.
--   
--   <i>See:</i> <a>newListGeofenceCollectionsResponseEntry</a> smart
--   constructor.
data ListGeofenceCollectionsResponseEntry
ListGeofenceCollectionsResponseEntry' :: Maybe Text -> Text -> POSIX -> Text -> PricingPlan -> POSIX -> ListGeofenceCollectionsResponseEntry

-- | Create a value of <a>ListGeofenceCollectionsResponseEntry</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:pricingPlanDataSource:ListGeofenceCollectionsResponseEntry'</a>,
--   <a>listGeofenceCollectionsResponseEntry_pricingPlanDataSource</a> -
--   The specified data provider for the geofence collection.
--   
--   <a>$sel:collectionName:ListGeofenceCollectionsResponseEntry'</a>,
--   <a>listGeofenceCollectionsResponseEntry_collectionName</a> - The name
--   of the geofence collection.
--   
--   <a>$sel:createTime:ListGeofenceCollectionsResponseEntry'</a>,
--   <a>listGeofenceCollectionsResponseEntry_createTime</a> - The timestamp
--   for when the geofence collection was created in <a>ISO 8601</a>
--   format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
--   
--   <a>$sel:description:ListGeofenceCollectionsResponseEntry'</a>,
--   <a>listGeofenceCollectionsResponseEntry_description</a> - The
--   description for the geofence collection
--   
--   <a>$sel:pricingPlan:ListGeofenceCollectionsResponseEntry'</a>,
--   <a>listGeofenceCollectionsResponseEntry_pricingPlan</a> - The pricing
--   plan for the specified geofence collection.
--   
--   For additional details and restrictions on each pricing plan option,
--   see the <a>Amazon Location Service pricing page</a>.
--   
--   <a>$sel:updateTime:ListGeofenceCollectionsResponseEntry'</a>,
--   <a>listGeofenceCollectionsResponseEntry_updateTime</a> - Specifies a
--   timestamp for when the resource was last updated in <a>ISO 8601</a>
--   format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
newListGeofenceCollectionsResponseEntry :: Text -> UTCTime -> Text -> PricingPlan -> UTCTime -> ListGeofenceCollectionsResponseEntry

-- | Contains a list of geofences stored in a given geofence collection.
--   
--   <i>See:</i> <a>newListGeofenceResponseEntry</a> smart constructor.
data ListGeofenceResponseEntry
ListGeofenceResponseEntry' :: POSIX -> Text -> GeofenceGeometry -> Text -> POSIX -> ListGeofenceResponseEntry

-- | Create a value of <a>ListGeofenceResponseEntry</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createTime:ListGeofenceResponseEntry'</a>,
--   <a>listGeofenceResponseEntry_createTime</a> - The timestamp for when
--   the geofence was stored in a geofence collection in <a>ISO 8601</a>
--   format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
--   
--   <a>$sel:geofenceId:ListGeofenceResponseEntry'</a>,
--   <a>listGeofenceResponseEntry_geofenceId</a> - The geofence identifier.
--   
--   <a>$sel:geometry:ListGeofenceResponseEntry'</a>,
--   <a>listGeofenceResponseEntry_geometry</a> - Contains the geofence
--   geometry details describing a polygon.
--   
--   <a>$sel:status:ListGeofenceResponseEntry'</a>,
--   <a>listGeofenceResponseEntry_status</a> - Identifies the state of the
--   geofence. A geofence will hold one of the following states:
--   
--   <ul>
--   <li><tt>ACTIVE</tt> — The geofence has been indexed by the
--   system.</li>
--   <li><tt>PENDING</tt> — The geofence is being processed by the
--   system.</li>
--   <li><tt>FAILED</tt> — The geofence failed to be indexed by the
--   system.</li>
--   <li><tt>DELETED</tt> — The geofence has been deleted from the system
--   index.</li>
--   <li><tt>DELETING</tt> — The geofence is being deleted from the system
--   index.</li>
--   </ul>
--   
--   <a>$sel:updateTime:ListGeofenceResponseEntry'</a>,
--   <a>listGeofenceResponseEntry_updateTime</a> - The timestamp for when
--   the geofence was last updated in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>
newListGeofenceResponseEntry :: UTCTime -> Text -> GeofenceGeometry -> Text -> UTCTime -> ListGeofenceResponseEntry

-- | Contains details of an existing map resource in your AWS account.
--   
--   <i>See:</i> <a>newListMapsResponseEntry</a> smart constructor.
data ListMapsResponseEntry
ListMapsResponseEntry' :: POSIX -> Text -> Text -> Text -> PricingPlan -> POSIX -> ListMapsResponseEntry

-- | Create a value of <a>ListMapsResponseEntry</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createTime:ListMapsResponseEntry'</a>,
--   <a>listMapsResponseEntry_createTime</a> - The timestamp for when the
--   map resource was created in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
--   
--   <a>$sel:dataSource:ListMapsResponseEntry'</a>,
--   <a>listMapsResponseEntry_dataSource</a> - Specifies the data provider
--   for the associated map tiles.
--   
--   <a>$sel:description:ListMapsResponseEntry'</a>,
--   <a>listMapsResponseEntry_description</a> - The description for the map
--   resource.
--   
--   <a>$sel:mapName:ListMapsResponseEntry'</a>,
--   <a>listMapsResponseEntry_mapName</a> - The name of the associated map
--   resource.
--   
--   <a>$sel:pricingPlan:ListMapsResponseEntry'</a>,
--   <a>listMapsResponseEntry_pricingPlan</a> - The pricing plan for the
--   specified map resource.
--   
--   For additional details and restrictions on each pricing plan option,
--   see <a>Amazon Location Service pricing</a>.
--   
--   <a>$sel:updateTime:ListMapsResponseEntry'</a>,
--   <a>listMapsResponseEntry_updateTime</a> - The timestamp for when the
--   map resource was last updated in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
newListMapsResponseEntry :: UTCTime -> Text -> Text -> Text -> PricingPlan -> UTCTime -> ListMapsResponseEntry

-- | A place index resource listed in your AWS account.
--   
--   <i>See:</i> <a>newListPlaceIndexesResponseEntry</a> smart constructor.
data ListPlaceIndexesResponseEntry
ListPlaceIndexesResponseEntry' :: POSIX -> Text -> Text -> Text -> PricingPlan -> POSIX -> ListPlaceIndexesResponseEntry

-- | Create a value of <a>ListPlaceIndexesResponseEntry</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createTime:ListPlaceIndexesResponseEntry'</a>,
--   <a>listPlaceIndexesResponseEntry_createTime</a> - The timestamp for
--   when the place index resource was created in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
--   
--   <a>$sel:dataSource:ListPlaceIndexesResponseEntry'</a>,
--   <a>listPlaceIndexesResponseEntry_dataSource</a> - The data provider of
--   geospatial data. Indicates one of the available providers:
--   
--   <ul>
--   <li><pre>Esri</pre></li>
--   <li><pre>Here</pre></li>
--   </ul>
--   
--   For additional details on data providers, see <a>Amazon Location
--   Service data providers</a>.
--   
--   <a>$sel:description:ListPlaceIndexesResponseEntry'</a>,
--   <a>listPlaceIndexesResponseEntry_description</a> - The optional
--   description for the place index resource.
--   
--   <a>$sel:indexName:ListPlaceIndexesResponseEntry'</a>,
--   <a>listPlaceIndexesResponseEntry_indexName</a> - The name of the place
--   index resource.
--   
--   <a>$sel:pricingPlan:ListPlaceIndexesResponseEntry'</a>,
--   <a>listPlaceIndexesResponseEntry_pricingPlan</a> - The pricing plan
--   for the specified place index resource.
--   
--   For additional details and restrictions on each pricing plan option,
--   see <a>Amazon Location Service pricing</a>.
--   
--   <a>$sel:updateTime:ListPlaceIndexesResponseEntry'</a>,
--   <a>listPlaceIndexesResponseEntry_updateTime</a> - The timestamp for
--   when the place index resource was last updated in <a>ISO 8601</a>
--   format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
newListPlaceIndexesResponseEntry :: UTCTime -> Text -> Text -> Text -> PricingPlan -> UTCTime -> ListPlaceIndexesResponseEntry

-- | A route calculator resource listed in your AWS account.
--   
--   <i>See:</i> <a>newListRouteCalculatorsResponseEntry</a> smart
--   constructor.
data ListRouteCalculatorsResponseEntry
ListRouteCalculatorsResponseEntry' :: Text -> POSIX -> Text -> Text -> PricingPlan -> POSIX -> ListRouteCalculatorsResponseEntry

-- | Create a value of <a>ListRouteCalculatorsResponseEntry</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:calculatorName:ListRouteCalculatorsResponseEntry'</a>,
--   <a>listRouteCalculatorsResponseEntry_calculatorName</a> - The name of
--   the route calculator resource.
--   
--   <a>$sel:createTime:ListRouteCalculatorsResponseEntry'</a>,
--   <a>listRouteCalculatorsResponseEntry_createTime</a> - The timestamp
--   when the route calculator resource was created in <a>ISO 8601</a>
--   format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
--   
--   <ul>
--   <li>For example, <tt>2020–07-2T12:15:20.000Z+01:00</tt></li>
--   </ul>
--   
--   <a>$sel:dataSource:ListRouteCalculatorsResponseEntry'</a>,
--   <a>listRouteCalculatorsResponseEntry_dataSource</a> - The data
--   provider of traffic and road network data. Indicates one of the
--   available providers:
--   
--   <ul>
--   <li><pre>Esri</pre></li>
--   <li><pre>Here</pre></li>
--   </ul>
--   
--   For more information about data providers, see <a>Amazon Location
--   Service data providers</a>.
--   
--   <a>$sel:description:ListRouteCalculatorsResponseEntry'</a>,
--   <a>listRouteCalculatorsResponseEntry_description</a> - The optional
--   description of the route calculator resource.
--   
--   <a>$sel:pricingPlan:ListRouteCalculatorsResponseEntry'</a>,
--   <a>listRouteCalculatorsResponseEntry_pricingPlan</a> - The pricing
--   plan for the specified route calculator resource.
--   
--   For additional details and restrictions on each pricing plan option,
--   see <a>Amazon Location Service pricing</a>.
--   
--   <a>$sel:updateTime:ListRouteCalculatorsResponseEntry'</a>,
--   <a>listRouteCalculatorsResponseEntry_updateTime</a> - The timestamp
--   when the route calculator resource was last updated in <a>ISO 8601</a>
--   format: <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
--   
--   <ul>
--   <li>For example, <tt>2020–07-2T12:15:20.000Z+01:00</tt></li>
--   </ul>
newListRouteCalculatorsResponseEntry :: Text -> UTCTime -> Text -> Text -> PricingPlan -> UTCTime -> ListRouteCalculatorsResponseEntry

-- | Contains the tracker resource details.
--   
--   <i>See:</i> <a>newListTrackersResponseEntry</a> smart constructor.
data ListTrackersResponseEntry
ListTrackersResponseEntry' :: Maybe Text -> POSIX -> Text -> PricingPlan -> Text -> POSIX -> ListTrackersResponseEntry

-- | Create a value of <a>ListTrackersResponseEntry</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pricingPlanDataSource:ListTrackersResponseEntry'</a>,
--   <a>listTrackersResponseEntry_pricingPlanDataSource</a> - The specified
--   data provider for the tracker resource.
--   
--   <a>$sel:createTime:ListTrackersResponseEntry'</a>,
--   <a>listTrackersResponseEntry_createTime</a> - The timestamp for when
--   the tracker resource was created in <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
--   
--   <a>$sel:description:ListTrackersResponseEntry'</a>,
--   <a>listTrackersResponseEntry_description</a> - The description for the
--   tracker resource.
--   
--   <a>$sel:pricingPlan:ListTrackersResponseEntry'</a>,
--   <a>listTrackersResponseEntry_pricingPlan</a> - The pricing plan for
--   the specified tracker resource.
--   
--   For additional details and restrictions on each pricing plan option,
--   see <a>Amazon Location Service pricing</a>.
--   
--   <a>$sel:trackerName:ListTrackersResponseEntry'</a>,
--   <a>listTrackersResponseEntry_trackerName</a> - The name of the tracker
--   resource.
--   
--   <a>$sel:updateTime:ListTrackersResponseEntry'</a>,
--   <a>listTrackersResponseEntry_updateTime</a> - The timestamp at which
--   the device's position was determined. Uses <a>ISO 8601</a> format:
--   <tt>YYYY-MM-DDThh:mm:ss.sssZ</tt>.
newListTrackersResponseEntry :: UTCTime -> Text -> PricingPlan -> Text -> UTCTime -> ListTrackersResponseEntry

-- | Specifies the map tile style selected from an available provider.
--   
--   <i>See:</i> <a>newMapConfiguration</a> smart constructor.
data MapConfiguration
MapConfiguration' :: Text -> MapConfiguration

-- | Create a value of <a>MapConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:style:MapConfiguration'</a>, <a>mapConfiguration_style</a> -
--   Specifies the map style selected from an available data provider.
--   
--   Valid <a>Esri map styles</a>:
--   
--   <ul>
--   <li><tt>VectorEsriDarkGrayCanvas</tt> – The Esri Dark Gray Canvas map
--   style. A vector basemap with a dark gray, neutral background with
--   minimal colors, labels, and features that's designed to draw attention
--   to your thematic content.</li>
--   <li><tt>RasterEsriImagery</tt> – The Esri Imagery map style. A raster
--   basemap that provides one meter or better satellite and aerial imagery
--   in many parts of the world and lower resolution satellite imagery
--   worldwide.</li>
--   <li><tt>VectorEsriLightGrayCanvas</tt> – The Esri Light Gray Canvas
--   map style, which provides a detailed vector basemap with a light gray,
--   neutral background style with minimal colors, labels, and features
--   that's designed to draw attention to your thematic content.</li>
--   <li><tt>VectorEsriTopographic</tt> – The Esri Light map style, which
--   provides a detailed vector basemap with a classic Esri map style.</li>
--   <li><tt>VectorEsriStreets</tt> – The Esri World Streets map style,
--   which provides a detailed vector basemap for the world symbolized with
--   a classic Esri street map style. The vector tile layer is similar in
--   content and style to the World Street Map raster map.</li>
--   <li><tt>VectorEsriNavigation</tt> – The Esri World Navigation map
--   style, which provides a detailed basemap for the world symbolized with
--   a custom navigation map style that's designed for use during the day
--   in mobile devices.</li>
--   </ul>
--   
--   Valid <a>HERE Technologies map styles</a>:
--   
--   <ul>
--   <li><tt>VectorHereBerlin</tt> – The HERE Berlin map style is a high
--   contrast detailed base map of the world that blends 3D and 2D
--   rendering.When using HERE as your data provider, and selecting the
--   Style <tt>VectorHereBerlin</tt>, you may not use HERE Technologies
--   maps for Asset Management. See the <a>AWS Service Terms</a> for Amazon
--   Location Service.</li>
--   </ul>
newMapConfiguration :: Text -> MapConfiguration

-- | Contains details about addresses or points of interest that match the
--   search criteria.
--   
--   <i>See:</i> <a>newPlace</a> smart constructor.
data Place
Place' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> PlaceGeometry -> Place

-- | Create a value of <a>Place</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:municipality:Place'</a>, <a>place_municipality</a> - A name
--   for a local area, such as a city or town name. For example,
--   <tt>Toronto</tt>.
--   
--   <a>$sel:addressNumber:Place'</a>, <a>place_addressNumber</a> - The
--   numerical portion of an address, such as a building number.
--   
--   <a>$sel:postalCode:Place'</a>, <a>place_postalCode</a> - A group of
--   numbers and letters in a country-specific format, which accompanies
--   the address for the purpose of identifying a location.
--   
--   <a>$sel:country:Place'</a>, <a>place_country</a> - A country/region
--   specified using <a>ISO 3166</a> 3-digit country/region code. For
--   example, <tt>CAN</tt>.
--   
--   <a>$sel:street:Place'</a>, <a>place_street</a> - The name for a street
--   or a road to identify a location. For example, <tt>Main Street</tt>.
--   
--   <a>$sel:subRegion:Place'</a>, <a>place_subRegion</a> - A country, or
--   an area that's part of a larger region . For example, <tt>Metro
--   Vancouver</tt>.
--   
--   <a>$sel:region:Place'</a>, <a>place_region</a> - A name for an area or
--   geographical division, such as a province or state name. For example,
--   <tt>British Columbia</tt>.
--   
--   <a>$sel:label:Place'</a>, <a>place_label</a> - The full name and
--   address of the point of interest such as a city, region, or country.
--   For example, <tt>123 Any Street, Any Town, USA</tt>.
--   
--   <a>$sel:neighborhood:Place'</a>, <a>place_neighborhood</a> - The name
--   of a community district. For example, <tt>Downtown</tt>.
--   
--   <a>$sel:geometry:Place'</a>, <a>place_geometry</a> - Undocumented
--   member.
newPlace :: PlaceGeometry -> Place

-- | Places uses a point geometry to specify a location or a Place.
--   
--   <i>See:</i> <a>newPlaceGeometry</a> smart constructor.
data PlaceGeometry
PlaceGeometry' :: Maybe (Sensitive (NonEmpty Double)) -> PlaceGeometry

-- | Create a value of <a>PlaceGeometry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:point:PlaceGeometry'</a>, <a>placeGeometry_point</a> - A
--   single point geometry specifies a location for a Place using <a>WGS
--   84</a> coordinates:
--   
--   <ul>
--   <li><i>x</i> — Specifies the x coordinate or longitude.</li>
--   <li><i>y</i> — Specifies the y coordinate or latitude.</li>
--   </ul>
newPlaceGeometry :: PlaceGeometry

-- | Specifies a single point of interest, or Place as a result of a search
--   query obtained from a dataset configured in the place index resource.
--   
--   <i>See:</i> <a>newSearchForPositionResult</a> smart constructor.
data SearchForPositionResult
SearchForPositionResult' :: Place -> SearchForPositionResult

-- | Create a value of <a>SearchForPositionResult</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:place:SearchForPositionResult'</a>,
--   <a>searchForPositionResult_place</a> - Contains details about the
--   relevant point of interest.
newSearchForPositionResult :: Place -> SearchForPositionResult

-- | Contains relevant Places returned by calling
--   <tt>SearchPlaceIndexForText</tt>.
--   
--   <i>See:</i> <a>newSearchForTextResult</a> smart constructor.
data SearchForTextResult
SearchForTextResult' :: Place -> SearchForTextResult

-- | Create a value of <a>SearchForTextResult</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:place:SearchForTextResult'</a>,
--   <a>searchForTextResult_place</a> - Contains details about the relevant
--   point of interest.
newSearchForTextResult :: Place -> SearchForTextResult

-- | A summary of the reverse geocoding request sent using
--   <tt>SearchPlaceIndexForPosition</tt>.
--   
--   <i>See:</i> <a>newSearchPlaceIndexForPositionSummary</a> smart
--   constructor.
data SearchPlaceIndexForPositionSummary
SearchPlaceIndexForPositionSummary' :: Maybe Natural -> Text -> Sensitive (NonEmpty Double) -> SearchPlaceIndexForPositionSummary

-- | Create a value of <a>SearchPlaceIndexForPositionSummary</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxResults:SearchPlaceIndexForPositionSummary'</a>,
--   <a>searchPlaceIndexForPositionSummary_maxResults</a> - An optional
--   parameter. The maximum number of results returned per request.
--   
--   Default value: <tt>50</tt>
--   
--   <a>$sel:dataSource:SearchPlaceIndexForPositionSummary'</a>,
--   <a>searchPlaceIndexForPositionSummary_dataSource</a> - The data
--   provider of geospatial data. Indicates one of the available providers:
--   
--   <ul>
--   <li>Esri</li>
--   <li>HERE</li>
--   </ul>
--   
--   For additional details on data providers, see <a>Amazon Location
--   Service data providers</a>.
--   
--   <a>$sel:position:SearchPlaceIndexForPositionSummary'</a>,
--   <a>searchPlaceIndexForPositionSummary_position</a> - The position
--   given in the reverse geocoding request.
newSearchPlaceIndexForPositionSummary :: Text -> NonEmpty Double -> SearchPlaceIndexForPositionSummary

-- | A summary of the geocoding request sent using
--   <tt>SearchPlaceIndexForText</tt>.
--   
--   <i>See:</i> <a>newSearchPlaceIndexForTextSummary</a> smart
--   constructor.
data SearchPlaceIndexForTextSummary
SearchPlaceIndexForTextSummary' :: Maybe (Sensitive (NonEmpty Double)) -> Maybe (Sensitive (NonEmpty Double)) -> Maybe (Sensitive (NonEmpty Double)) -> Maybe (NonEmpty Text) -> Maybe Natural -> Text -> Sensitive Text -> SearchPlaceIndexForTextSummary

-- | Create a value of <a>SearchPlaceIndexForTextSummary</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filterBBox:SearchPlaceIndexForTextSummary'</a>,
--   <a>searchPlaceIndexForTextSummary_filterBBox</a> - Contains the
--   coordinates for the optional bounding box coordinated entered in the
--   geocoding request.
--   
--   <a>$sel:resultBBox:SearchPlaceIndexForTextSummary'</a>,
--   <a>searchPlaceIndexForTextSummary_resultBBox</a> - A bounding box that
--   contains the search results within the specified area indicated by
--   <tt>FilterBBox</tt>. A subset of bounding box specified using
--   <tt>FilterBBox</tt>.
--   
--   <a>$sel:biasPosition:SearchPlaceIndexForTextSummary'</a>,
--   <a>searchPlaceIndexForTextSummary_biasPosition</a> - Contains the
--   coordinates for the bias position entered in the geocoding request.
--   
--   <a>$sel:filterCountries:SearchPlaceIndexForTextSummary'</a>,
--   <a>searchPlaceIndexForTextSummary_filterCountries</a> - Contains the
--   country filter entered in the geocoding request.
--   
--   <a>$sel:maxResults:SearchPlaceIndexForTextSummary'</a>,
--   <a>searchPlaceIndexForTextSummary_maxResults</a> - Contains the
--   maximum number of results indicated for the request.
--   
--   <a>$sel:dataSource:SearchPlaceIndexForTextSummary'</a>,
--   <a>searchPlaceIndexForTextSummary_dataSource</a> - The data provider
--   of geospatial data. Indicates one of the available providers:
--   
--   <ul>
--   <li>Esri</li>
--   <li>HERE</li>
--   </ul>
--   
--   For additional details on data providers, see <a>Amazon Location
--   Service data providers</a>.
--   
--   <a>$sel:text:SearchPlaceIndexForTextSummary'</a>,
--   <a>searchPlaceIndexForTextSummary_text</a> - The address, name, city
--   or region to be used in the geocoding request. In free-form text
--   format. For example, <tt>Vancouver</tt>.
newSearchPlaceIndexForTextSummary :: Text -> Text -> SearchPlaceIndexForTextSummary

-- | Represents an element of a leg within a route. A step contains
--   instructions for how to move to the next step in the leg.
--   
--   <i>See:</i> <a>newStep</a> smart constructor.
data Step
Step' :: Maybe Natural -> Double -> Double -> Sensitive (NonEmpty Double) -> Sensitive (NonEmpty Double) -> Step

-- | Create a value of <a>Step</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:geometryOffset:Step'</a>, <a>step_geometryOffset</a> -
--   Represents the start position, or index, in a sequence of steps within
--   the leg's line string geometry. For example, the index of the first
--   step in a leg geometry is <tt>0</tt>.
--   
--   Included in the response for queries that set
--   <tt>IncludeLegGeometry</tt> to <tt>True</tt>.
--   
--   <a>$sel:distance:Step'</a>, <a>step_distance</a> - The travel distance
--   between the step's <tt>StartPosition</tt> and <tt>EndPosition</tt>.
--   
--   <a>$sel:durationSeconds:Step'</a>, <a>step_durationSeconds</a> - The
--   estimated travel time, in seconds, from the step's
--   <tt>StartPosition</tt> to the <tt>EndPosition</tt>. . The travel mode
--   and departure time that you specify in the request determines the
--   calculated time.
--   
--   <a>$sel:endPosition:Step'</a>, <a>step_endPosition</a> - The end
--   position of a step. If the position the last step in the leg, this
--   position is the same as the end position of the leg.
--   
--   <a>$sel:startPosition:Step'</a>, <a>step_startPosition</a> - The
--   starting position of a step. If the position is the first step in the
--   leg, this position is the same as the start position of the leg.
newStep :: Double -> Double -> NonEmpty Double -> NonEmpty Double -> Step

-- | Contains details about the truck dimensions in the unit of measurement
--   that you specify. Used to filter out roads that can't support or allow
--   the specified dimensions for requests that specify <tt>TravelMode</tt>
--   as <tt>Truck</tt>.
--   
--   <i>See:</i> <a>newTruckDimensions</a> smart constructor.
data TruckDimensions
TruckDimensions' :: Maybe Double -> Maybe Double -> Maybe Double -> Maybe DimensionUnit -> TruckDimensions

-- | Create a value of <a>TruckDimensions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:length:TruckDimensions'</a>, <a>truckDimensions_length</a> -
--   The length of the truck.
--   
--   <ul>
--   <li>For example, <tt>15.5</tt>.</li>
--   </ul>
--   
--   <a>$sel:height:TruckDimensions'</a>, <a>truckDimensions_height</a> -
--   The height of the truck.
--   
--   <ul>
--   <li>For example, <tt>4.5</tt>.</li>
--   </ul>
--   
--   <a>$sel:width:TruckDimensions'</a>, <a>truckDimensions_width</a> - The
--   width of the truck.
--   
--   <ul>
--   <li>For example, <tt>4.5</tt>.</li>
--   </ul>
--   
--   <a>$sel:unit:TruckDimensions'</a>, <a>truckDimensions_unit</a> -
--   Specifies the unit of measurement for the truck dimensions.
--   
--   Default Value: <tt>Meters</tt>
newTruckDimensions :: TruckDimensions

-- | Contains details about the truck's weight specifications. Used to
--   avoid roads that can't support or allow the total weight for requests
--   that specify <tt>TravelMode</tt> as <tt>Truck</tt>.
--   
--   <i>See:</i> <a>newTruckWeight</a> smart constructor.
data TruckWeight
TruckWeight' :: Maybe Double -> Maybe VehicleWeightUnit -> TruckWeight

-- | Create a value of <a>TruckWeight</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:total:TruckWeight'</a>, <a>truckWeight_total</a> - The total
--   weight of the truck.
--   
--   <ul>
--   <li>For example, <tt>3500</tt>.</li>
--   </ul>
--   
--   <a>$sel:unit:TruckWeight'</a>, <a>truckWeight_unit</a> - The unit of
--   measurement to use for the truck weight.
--   
--   Default Value: <tt>Kilograms</tt>
newTruckWeight :: TruckWeight
