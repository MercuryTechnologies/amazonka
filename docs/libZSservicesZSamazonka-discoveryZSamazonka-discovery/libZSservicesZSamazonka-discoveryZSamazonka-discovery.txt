-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-discoveryZSamazonka-discovery
@version 2.0


module Network.AWS.Discovery.Types.AgentConfigurationStatus

-- | Information about agents or connectors that were instructed to start
--   collecting data. Information includes the agent/connector ID, a
--   description of the operation, and whether the agent/connector
--   configuration was updated.
--   
--   <i>See:</i> <a>newAgentConfigurationStatus</a> smart constructor.
data AgentConfigurationStatus
AgentConfigurationStatus' :: Maybe Text -> Maybe Bool -> Maybe Text -> AgentConfigurationStatus

-- | The agent/connector ID.
[$sel:agentId:AgentConfigurationStatus'] :: AgentConfigurationStatus -> Maybe Text

-- | Information about the status of the <tt>StartDataCollection</tt> and
--   <tt>StopDataCollection</tt> operations. The system has recorded the
--   data collection operation. The agent/connector receives this command
--   the next time it polls for a new command.
[$sel:operationSucceeded:AgentConfigurationStatus'] :: AgentConfigurationStatus -> Maybe Bool

-- | A description of the operation performed.
[$sel:description:AgentConfigurationStatus'] :: AgentConfigurationStatus -> Maybe Text

-- | Create a value of <a>AgentConfigurationStatus</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:agentId:AgentConfigurationStatus'</a>,
--   <a>agentConfigurationStatus_agentId</a> - The agent/connector ID.
--   
--   <a>$sel:operationSucceeded:AgentConfigurationStatus'</a>,
--   <a>agentConfigurationStatus_operationSucceeded</a> - Information about
--   the status of the <tt>StartDataCollection</tt> and
--   <tt>StopDataCollection</tt> operations. The system has recorded the
--   data collection operation. The agent/connector receives this command
--   the next time it polls for a new command.
--   
--   <a>$sel:description:AgentConfigurationStatus'</a>,
--   <a>agentConfigurationStatus_description</a> - A description of the
--   operation performed.
newAgentConfigurationStatus :: AgentConfigurationStatus

-- | The agent/connector ID.
agentConfigurationStatus_agentId :: Lens' AgentConfigurationStatus (Maybe Text)

-- | Information about the status of the <tt>StartDataCollection</tt> and
--   <tt>StopDataCollection</tt> operations. The system has recorded the
--   data collection operation. The agent/connector receives this command
--   the next time it polls for a new command.
agentConfigurationStatus_operationSucceeded :: Lens' AgentConfigurationStatus (Maybe Bool)

-- | A description of the operation performed.
agentConfigurationStatus_description :: Lens' AgentConfigurationStatus (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Discovery.Types.AgentConfigurationStatus.AgentConfigurationStatus
instance GHC.Show.Show Network.AWS.Discovery.Types.AgentConfigurationStatus.AgentConfigurationStatus
instance GHC.Read.Read Network.AWS.Discovery.Types.AgentConfigurationStatus.AgentConfigurationStatus
instance GHC.Classes.Eq Network.AWS.Discovery.Types.AgentConfigurationStatus.AgentConfigurationStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Discovery.Types.AgentConfigurationStatus.AgentConfigurationStatus
instance Data.Hashable.Class.Hashable Network.AWS.Discovery.Types.AgentConfigurationStatus.AgentConfigurationStatus
instance Control.DeepSeq.NFData Network.AWS.Discovery.Types.AgentConfigurationStatus.AgentConfigurationStatus


module Network.AWS.Discovery.Types.AgentNetworkInfo

-- | Network details about the host where the agent/connector resides.
--   
--   <i>See:</i> <a>newAgentNetworkInfo</a> smart constructor.
data AgentNetworkInfo
AgentNetworkInfo' :: Maybe Text -> Maybe Text -> AgentNetworkInfo

-- | The IP address for the host where the agent/connector resides.
[$sel:ipAddress:AgentNetworkInfo'] :: AgentNetworkInfo -> Maybe Text

-- | The MAC address for the host where the agent/connector resides.
[$sel:macAddress:AgentNetworkInfo'] :: AgentNetworkInfo -> Maybe Text

-- | Create a value of <a>AgentNetworkInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ipAddress:AgentNetworkInfo'</a>,
--   <a>agentNetworkInfo_ipAddress</a> - The IP address for the host where
--   the agent/connector resides.
--   
--   <a>$sel:macAddress:AgentNetworkInfo'</a>,
--   <a>agentNetworkInfo_macAddress</a> - The MAC address for the host
--   where the agent/connector resides.
newAgentNetworkInfo :: AgentNetworkInfo

-- | The IP address for the host where the agent/connector resides.
agentNetworkInfo_ipAddress :: Lens' AgentNetworkInfo (Maybe Text)

-- | The MAC address for the host where the agent/connector resides.
agentNetworkInfo_macAddress :: Lens' AgentNetworkInfo (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Discovery.Types.AgentNetworkInfo.AgentNetworkInfo
instance GHC.Show.Show Network.AWS.Discovery.Types.AgentNetworkInfo.AgentNetworkInfo
instance GHC.Read.Read Network.AWS.Discovery.Types.AgentNetworkInfo.AgentNetworkInfo
instance GHC.Classes.Eq Network.AWS.Discovery.Types.AgentNetworkInfo.AgentNetworkInfo
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Discovery.Types.AgentNetworkInfo.AgentNetworkInfo
instance Data.Hashable.Class.Hashable Network.AWS.Discovery.Types.AgentNetworkInfo.AgentNetworkInfo
instance Control.DeepSeq.NFData Network.AWS.Discovery.Types.AgentNetworkInfo.AgentNetworkInfo


module Network.AWS.Discovery.Types.AgentStatus
newtype AgentStatus
AgentStatus' :: Text -> AgentStatus
[fromAgentStatus] :: AgentStatus -> Text
pattern AgentStatus_BLACKLISTED :: AgentStatus
pattern AgentStatus_HEALTHY :: AgentStatus
pattern AgentStatus_RUNNING :: AgentStatus
pattern AgentStatus_SHUTDOWN :: AgentStatus
pattern AgentStatus_UNHEALTHY :: AgentStatus
pattern AgentStatus_UNKNOWN :: AgentStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.Discovery.Types.AgentStatus.AgentStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.Discovery.Types.AgentStatus.AgentStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Discovery.Types.AgentStatus.AgentStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Discovery.Types.AgentStatus.AgentStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Discovery.Types.AgentStatus.AgentStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Discovery.Types.AgentStatus.AgentStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.Discovery.Types.AgentStatus.AgentStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Discovery.Types.AgentStatus.AgentStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.Discovery.Types.AgentStatus.AgentStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Discovery.Types.AgentStatus.AgentStatus
instance Network.AWS.Data.Text.ToText Network.AWS.Discovery.Types.AgentStatus.AgentStatus
instance Network.AWS.Data.Text.FromText Network.AWS.Discovery.Types.AgentStatus.AgentStatus
instance Control.DeepSeq.NFData Network.AWS.Discovery.Types.AgentStatus.AgentStatus
instance Data.Hashable.Class.Hashable Network.AWS.Discovery.Types.AgentStatus.AgentStatus
instance GHC.Generics.Generic Network.AWS.Discovery.Types.AgentStatus.AgentStatus
instance GHC.Classes.Ord Network.AWS.Discovery.Types.AgentStatus.AgentStatus
instance GHC.Classes.Eq Network.AWS.Discovery.Types.AgentStatus.AgentStatus
instance GHC.Read.Read Network.AWS.Discovery.Types.AgentStatus.AgentStatus
instance GHC.Show.Show Network.AWS.Discovery.Types.AgentStatus.AgentStatus


module Network.AWS.Discovery.Types.AgentInfo

-- | Information about agents or connectors associated with the userâ€™s AWS
--   account. Information includes agent or connector IDs, IP addresses,
--   media access control (MAC) addresses, agent or connector health,
--   hostname where the agent or connector resides, and agent version for
--   each agent.
--   
--   <i>See:</i> <a>newAgentInfo</a> smart constructor.
data AgentInfo
AgentInfo' :: Maybe Text -> Maybe Text -> Maybe [AgentNetworkInfo] -> Maybe Text -> Maybe AgentStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> AgentInfo

-- | The name of the host where the agent or connector resides. The host
--   can be a server or virtual machine.
[$sel:hostName:AgentInfo'] :: AgentInfo -> Maybe Text

-- | Time since agent or connector health was reported.
[$sel:lastHealthPingTime:AgentInfo'] :: AgentInfo -> Maybe Text

-- | Network details about the host where the agent or connector resides.
[$sel:agentNetworkInfoList:AgentInfo'] :: AgentInfo -> Maybe [AgentNetworkInfo]

-- | The ID of the connector.
[$sel:connectorId:AgentInfo'] :: AgentInfo -> Maybe Text

-- | The health of the agent or connector.
[$sel:health:AgentInfo'] :: AgentInfo -> Maybe AgentStatus

-- | The agent or connector ID.
[$sel:agentId:AgentInfo'] :: AgentInfo -> Maybe Text

-- | The agent or connector version.
[$sel:version:AgentInfo'] :: AgentInfo -> Maybe Text

-- | Status of the collection process for an agent or connector.
[$sel:collectionStatus:AgentInfo'] :: AgentInfo -> Maybe Text

-- | Agent's first registration timestamp in UTC.
[$sel:registeredTime:AgentInfo'] :: AgentInfo -> Maybe Text

-- | Type of agent.
[$sel:agentType:AgentInfo'] :: AgentInfo -> Maybe Text

-- | Create a value of <a>AgentInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hostName:AgentInfo'</a>, <a>agentInfo_hostName</a> - The name
--   of the host where the agent or connector resides. The host can be a
--   server or virtual machine.
--   
--   <a>$sel:lastHealthPingTime:AgentInfo'</a>,
--   <a>agentInfo_lastHealthPingTime</a> - Time since agent or connector
--   health was reported.
--   
--   <a>$sel:agentNetworkInfoList:AgentInfo'</a>,
--   <a>agentInfo_agentNetworkInfoList</a> - Network details about the host
--   where the agent or connector resides.
--   
--   <a>$sel:connectorId:AgentInfo'</a>, <a>agentInfo_connectorId</a> - The
--   ID of the connector.
--   
--   <a>$sel:health:AgentInfo'</a>, <a>agentInfo_health</a> - The health of
--   the agent or connector.
--   
--   <a>$sel:agentId:AgentInfo'</a>, <a>agentInfo_agentId</a> - The agent
--   or connector ID.
--   
--   <a>$sel:version:AgentInfo'</a>, <a>agentInfo_version</a> - The agent
--   or connector version.
--   
--   <a>$sel:collectionStatus:AgentInfo'</a>,
--   <a>agentInfo_collectionStatus</a> - Status of the collection process
--   for an agent or connector.
--   
--   <a>$sel:registeredTime:AgentInfo'</a>, <a>agentInfo_registeredTime</a>
--   - Agent's first registration timestamp in UTC.
--   
--   <a>$sel:agentType:AgentInfo'</a>, <a>agentInfo_agentType</a> - Type of
--   agent.
newAgentInfo :: AgentInfo

-- | The name of the host where the agent or connector resides. The host
--   can be a server or virtual machine.
agentInfo_hostName :: Lens' AgentInfo (Maybe Text)

-- | Time since agent or connector health was reported.
agentInfo_lastHealthPingTime :: Lens' AgentInfo (Maybe Text)

-- | Network details about the host where the agent or connector resides.
agentInfo_agentNetworkInfoList :: Lens' AgentInfo (Maybe [AgentNetworkInfo])

-- | The ID of the connector.
agentInfo_connectorId :: Lens' AgentInfo (Maybe Text)

-- | The health of the agent or connector.
agentInfo_health :: Lens' AgentInfo (Maybe AgentStatus)

-- | The agent or connector ID.
agentInfo_agentId :: Lens' AgentInfo (Maybe Text)

-- | The agent or connector version.
agentInfo_version :: Lens' AgentInfo (Maybe Text)

-- | Status of the collection process for an agent or connector.
agentInfo_collectionStatus :: Lens' AgentInfo (Maybe Text)

-- | Agent's first registration timestamp in UTC.
agentInfo_registeredTime :: Lens' AgentInfo (Maybe Text)

-- | Type of agent.
agentInfo_agentType :: Lens' AgentInfo (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Discovery.Types.AgentInfo.AgentInfo
instance GHC.Show.Show Network.AWS.Discovery.Types.AgentInfo.AgentInfo
instance GHC.Read.Read Network.AWS.Discovery.Types.AgentInfo.AgentInfo
instance GHC.Classes.Eq Network.AWS.Discovery.Types.AgentInfo.AgentInfo
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Discovery.Types.AgentInfo.AgentInfo
instance Data.Hashable.Class.Hashable Network.AWS.Discovery.Types.AgentInfo.AgentInfo
instance Control.DeepSeq.NFData Network.AWS.Discovery.Types.AgentInfo.AgentInfo


module Network.AWS.Discovery.Types.BatchDeleteImportDataErrorCode
newtype BatchDeleteImportDataErrorCode
BatchDeleteImportDataErrorCode' :: Text -> BatchDeleteImportDataErrorCode
[fromBatchDeleteImportDataErrorCode] :: BatchDeleteImportDataErrorCode -> Text
pattern BatchDeleteImportDataErrorCode_INTERNAL_SERVER_ERROR :: BatchDeleteImportDataErrorCode
pattern BatchDeleteImportDataErrorCode_NOT_FOUND :: BatchDeleteImportDataErrorCode
pattern BatchDeleteImportDataErrorCode_OVER_LIMIT :: BatchDeleteImportDataErrorCode
instance Network.AWS.Data.XML.ToXML Network.AWS.Discovery.Types.BatchDeleteImportDataErrorCode.BatchDeleteImportDataErrorCode
instance Network.AWS.Data.XML.FromXML Network.AWS.Discovery.Types.BatchDeleteImportDataErrorCode.BatchDeleteImportDataErrorCode
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Discovery.Types.BatchDeleteImportDataErrorCode.BatchDeleteImportDataErrorCode
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Discovery.Types.BatchDeleteImportDataErrorCode.BatchDeleteImportDataErrorCode
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Discovery.Types.BatchDeleteImportDataErrorCode.BatchDeleteImportDataErrorCode
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Discovery.Types.BatchDeleteImportDataErrorCode.BatchDeleteImportDataErrorCode
instance Network.AWS.Data.Query.ToQuery Network.AWS.Discovery.Types.BatchDeleteImportDataErrorCode.BatchDeleteImportDataErrorCode
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Discovery.Types.BatchDeleteImportDataErrorCode.BatchDeleteImportDataErrorCode
instance Network.AWS.Data.Log.ToLog Network.AWS.Discovery.Types.BatchDeleteImportDataErrorCode.BatchDeleteImportDataErrorCode
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Discovery.Types.BatchDeleteImportDataErrorCode.BatchDeleteImportDataErrorCode
instance Network.AWS.Data.Text.ToText Network.AWS.Discovery.Types.BatchDeleteImportDataErrorCode.BatchDeleteImportDataErrorCode
instance Network.AWS.Data.Text.FromText Network.AWS.Discovery.Types.BatchDeleteImportDataErrorCode.BatchDeleteImportDataErrorCode
instance Control.DeepSeq.NFData Network.AWS.Discovery.Types.BatchDeleteImportDataErrorCode.BatchDeleteImportDataErrorCode
instance Data.Hashable.Class.Hashable Network.AWS.Discovery.Types.BatchDeleteImportDataErrorCode.BatchDeleteImportDataErrorCode
instance GHC.Generics.Generic Network.AWS.Discovery.Types.BatchDeleteImportDataErrorCode.BatchDeleteImportDataErrorCode
instance GHC.Classes.Ord Network.AWS.Discovery.Types.BatchDeleteImportDataErrorCode.BatchDeleteImportDataErrorCode
instance GHC.Classes.Eq Network.AWS.Discovery.Types.BatchDeleteImportDataErrorCode.BatchDeleteImportDataErrorCode
instance GHC.Read.Read Network.AWS.Discovery.Types.BatchDeleteImportDataErrorCode.BatchDeleteImportDataErrorCode
instance GHC.Show.Show Network.AWS.Discovery.Types.BatchDeleteImportDataErrorCode.BatchDeleteImportDataErrorCode


module Network.AWS.Discovery.Types.BatchDeleteImportDataError

-- | Error messages returned for each import task that you deleted as a
--   response for this command.
--   
--   <i>See:</i> <a>newBatchDeleteImportDataError</a> smart constructor.
data BatchDeleteImportDataError
BatchDeleteImportDataError' :: Maybe Text -> Maybe BatchDeleteImportDataErrorCode -> Maybe Text -> BatchDeleteImportDataError

-- | The unique import ID associated with the error that occurred.
[$sel:importTaskId:BatchDeleteImportDataError'] :: BatchDeleteImportDataError -> Maybe Text

-- | The type of error that occurred for a specific import task.
[$sel:errorCode:BatchDeleteImportDataError'] :: BatchDeleteImportDataError -> Maybe BatchDeleteImportDataErrorCode

-- | The description of the error that occurred for a specific import task.
[$sel:errorDescription:BatchDeleteImportDataError'] :: BatchDeleteImportDataError -> Maybe Text

-- | Create a value of <a>BatchDeleteImportDataError</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:importTaskId:BatchDeleteImportDataError'</a>,
--   <a>batchDeleteImportDataError_importTaskId</a> - The unique import ID
--   associated with the error that occurred.
--   
--   <a>$sel:errorCode:BatchDeleteImportDataError'</a>,
--   <a>batchDeleteImportDataError_errorCode</a> - The type of error that
--   occurred for a specific import task.
--   
--   <a>$sel:errorDescription:BatchDeleteImportDataError'</a>,
--   <a>batchDeleteImportDataError_errorDescription</a> - The description
--   of the error that occurred for a specific import task.
newBatchDeleteImportDataError :: BatchDeleteImportDataError

-- | The unique import ID associated with the error that occurred.
batchDeleteImportDataError_importTaskId :: Lens' BatchDeleteImportDataError (Maybe Text)

-- | The type of error that occurred for a specific import task.
batchDeleteImportDataError_errorCode :: Lens' BatchDeleteImportDataError (Maybe BatchDeleteImportDataErrorCode)

-- | The description of the error that occurred for a specific import task.
batchDeleteImportDataError_errorDescription :: Lens' BatchDeleteImportDataError (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Discovery.Types.BatchDeleteImportDataError.BatchDeleteImportDataError
instance GHC.Show.Show Network.AWS.Discovery.Types.BatchDeleteImportDataError.BatchDeleteImportDataError
instance GHC.Read.Read Network.AWS.Discovery.Types.BatchDeleteImportDataError.BatchDeleteImportDataError
instance GHC.Classes.Eq Network.AWS.Discovery.Types.BatchDeleteImportDataError.BatchDeleteImportDataError
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Discovery.Types.BatchDeleteImportDataError.BatchDeleteImportDataError
instance Data.Hashable.Class.Hashable Network.AWS.Discovery.Types.BatchDeleteImportDataError.BatchDeleteImportDataError
instance Control.DeepSeq.NFData Network.AWS.Discovery.Types.BatchDeleteImportDataError.BatchDeleteImportDataError


module Network.AWS.Discovery.Types.ConfigurationItemType
newtype ConfigurationItemType
ConfigurationItemType' :: Text -> ConfigurationItemType
[fromConfigurationItemType] :: ConfigurationItemType -> Text
pattern ConfigurationItemType_APPLICATION :: ConfigurationItemType
pattern ConfigurationItemType_CONNECTION :: ConfigurationItemType
pattern ConfigurationItemType_PROCESS :: ConfigurationItemType
pattern ConfigurationItemType_SERVER :: ConfigurationItemType
instance Network.AWS.Data.XML.ToXML Network.AWS.Discovery.Types.ConfigurationItemType.ConfigurationItemType
instance Network.AWS.Data.XML.FromXML Network.AWS.Discovery.Types.ConfigurationItemType.ConfigurationItemType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Discovery.Types.ConfigurationItemType.ConfigurationItemType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Discovery.Types.ConfigurationItemType.ConfigurationItemType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Discovery.Types.ConfigurationItemType.ConfigurationItemType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Discovery.Types.ConfigurationItemType.ConfigurationItemType
instance Network.AWS.Data.Query.ToQuery Network.AWS.Discovery.Types.ConfigurationItemType.ConfigurationItemType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Discovery.Types.ConfigurationItemType.ConfigurationItemType
instance Network.AWS.Data.Log.ToLog Network.AWS.Discovery.Types.ConfigurationItemType.ConfigurationItemType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Discovery.Types.ConfigurationItemType.ConfigurationItemType
instance Network.AWS.Data.Text.ToText Network.AWS.Discovery.Types.ConfigurationItemType.ConfigurationItemType
instance Network.AWS.Data.Text.FromText Network.AWS.Discovery.Types.ConfigurationItemType.ConfigurationItemType
instance Control.DeepSeq.NFData Network.AWS.Discovery.Types.ConfigurationItemType.ConfigurationItemType
instance Data.Hashable.Class.Hashable Network.AWS.Discovery.Types.ConfigurationItemType.ConfigurationItemType
instance GHC.Generics.Generic Network.AWS.Discovery.Types.ConfigurationItemType.ConfigurationItemType
instance GHC.Classes.Ord Network.AWS.Discovery.Types.ConfigurationItemType.ConfigurationItemType
instance GHC.Classes.Eq Network.AWS.Discovery.Types.ConfigurationItemType.ConfigurationItemType
instance GHC.Read.Read Network.AWS.Discovery.Types.ConfigurationItemType.ConfigurationItemType
instance GHC.Show.Show Network.AWS.Discovery.Types.ConfigurationItemType.ConfigurationItemType


module Network.AWS.Discovery.Types.ConfigurationTag

-- | Tags for a configuration item. Tags are metadata that help you
--   categorize IT assets.
--   
--   <i>See:</i> <a>newConfigurationTag</a> smart constructor.
data ConfigurationTag
ConfigurationTag' :: Maybe POSIX -> Maybe Text -> Maybe ConfigurationItemType -> Maybe Text -> Maybe Text -> ConfigurationTag

-- | The time the configuration tag was created in Coordinated Universal
--   Time (UTC).
[$sel:timeOfCreation:ConfigurationTag'] :: ConfigurationTag -> Maybe POSIX

-- | The configuration ID for the item to tag. You can specify a list of
--   keys and values.
[$sel:configurationId:ConfigurationTag'] :: ConfigurationTag -> Maybe Text

-- | A type of IT asset to tag.
[$sel:configurationType:ConfigurationTag'] :: ConfigurationTag -> Maybe ConfigurationItemType

-- | A value on which to filter. For example <i>key = serverType</i> and
--   /value = web server/.
[$sel:value:ConfigurationTag'] :: ConfigurationTag -> Maybe Text

-- | A type of tag on which to filter. For example, <i>serverType</i>.
[$sel:key:ConfigurationTag'] :: ConfigurationTag -> Maybe Text

-- | Create a value of <a>ConfigurationTag</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timeOfCreation:ConfigurationTag'</a>,
--   <a>configurationTag_timeOfCreation</a> - The time the configuration
--   tag was created in Coordinated Universal Time (UTC).
--   
--   <a>$sel:configurationId:ConfigurationTag'</a>,
--   <a>configurationTag_configurationId</a> - The configuration ID for the
--   item to tag. You can specify a list of keys and values.
--   
--   <a>$sel:configurationType:ConfigurationTag'</a>,
--   <a>configurationTag_configurationType</a> - A type of IT asset to tag.
--   
--   <a>$sel:value:ConfigurationTag'</a>, <a>configurationTag_value</a> - A
--   value on which to filter. For example <i>key = serverType</i> and
--   /value = web server/.
--   
--   <a>$sel:key:ConfigurationTag'</a>, <a>configurationTag_key</a> - A
--   type of tag on which to filter. For example, <i>serverType</i>.
newConfigurationTag :: ConfigurationTag

-- | The time the configuration tag was created in Coordinated Universal
--   Time (UTC).
configurationTag_timeOfCreation :: Lens' ConfigurationTag (Maybe UTCTime)

-- | The configuration ID for the item to tag. You can specify a list of
--   keys and values.
configurationTag_configurationId :: Lens' ConfigurationTag (Maybe Text)

-- | A type of IT asset to tag.
configurationTag_configurationType :: Lens' ConfigurationTag (Maybe ConfigurationItemType)

-- | A value on which to filter. For example <i>key = serverType</i> and
--   /value = web server/.
configurationTag_value :: Lens' ConfigurationTag (Maybe Text)

-- | A type of tag on which to filter. For example, <i>serverType</i>.
configurationTag_key :: Lens' ConfigurationTag (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Discovery.Types.ConfigurationTag.ConfigurationTag
instance GHC.Show.Show Network.AWS.Discovery.Types.ConfigurationTag.ConfigurationTag
instance GHC.Read.Read Network.AWS.Discovery.Types.ConfigurationTag.ConfigurationTag
instance GHC.Classes.Eq Network.AWS.Discovery.Types.ConfigurationTag.ConfigurationTag
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Discovery.Types.ConfigurationTag.ConfigurationTag
instance Data.Hashable.Class.Hashable Network.AWS.Discovery.Types.ConfigurationTag.ConfigurationTag
instance Control.DeepSeq.NFData Network.AWS.Discovery.Types.ConfigurationTag.ConfigurationTag


module Network.AWS.Discovery.Types.ContinuousExportStatus
newtype ContinuousExportStatus
ContinuousExportStatus' :: Text -> ContinuousExportStatus
[fromContinuousExportStatus] :: ContinuousExportStatus -> Text
pattern ContinuousExportStatus_ACTIVE :: ContinuousExportStatus
pattern ContinuousExportStatus_ERROR :: ContinuousExportStatus
pattern ContinuousExportStatus_INACTIVE :: ContinuousExportStatus
pattern ContinuousExportStatus_START_FAILED :: ContinuousExportStatus
pattern ContinuousExportStatus_START_IN_PROGRESS :: ContinuousExportStatus
pattern ContinuousExportStatus_STOP_FAILED :: ContinuousExportStatus
pattern ContinuousExportStatus_STOP_IN_PROGRESS :: ContinuousExportStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.Discovery.Types.ContinuousExportStatus.ContinuousExportStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.Discovery.Types.ContinuousExportStatus.ContinuousExportStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Discovery.Types.ContinuousExportStatus.ContinuousExportStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Discovery.Types.ContinuousExportStatus.ContinuousExportStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Discovery.Types.ContinuousExportStatus.ContinuousExportStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Discovery.Types.ContinuousExportStatus.ContinuousExportStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.Discovery.Types.ContinuousExportStatus.ContinuousExportStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Discovery.Types.ContinuousExportStatus.ContinuousExportStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.Discovery.Types.ContinuousExportStatus.ContinuousExportStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Discovery.Types.ContinuousExportStatus.ContinuousExportStatus
instance Network.AWS.Data.Text.ToText Network.AWS.Discovery.Types.ContinuousExportStatus.ContinuousExportStatus
instance Network.AWS.Data.Text.FromText Network.AWS.Discovery.Types.ContinuousExportStatus.ContinuousExportStatus
instance Control.DeepSeq.NFData Network.AWS.Discovery.Types.ContinuousExportStatus.ContinuousExportStatus
instance Data.Hashable.Class.Hashable Network.AWS.Discovery.Types.ContinuousExportStatus.ContinuousExportStatus
instance GHC.Generics.Generic Network.AWS.Discovery.Types.ContinuousExportStatus.ContinuousExportStatus
instance GHC.Classes.Ord Network.AWS.Discovery.Types.ContinuousExportStatus.ContinuousExportStatus
instance GHC.Classes.Eq Network.AWS.Discovery.Types.ContinuousExportStatus.ContinuousExportStatus
instance GHC.Read.Read Network.AWS.Discovery.Types.ContinuousExportStatus.ContinuousExportStatus
instance GHC.Show.Show Network.AWS.Discovery.Types.ContinuousExportStatus.ContinuousExportStatus


module Network.AWS.Discovery.Types.CustomerAgentInfo

-- | Inventory data for installed discovery agents.
--   
--   <i>See:</i> <a>newCustomerAgentInfo</a> smart constructor.
data CustomerAgentInfo
CustomerAgentInfo' :: Int -> Int -> Int -> Int -> Int -> Int -> Int -> CustomerAgentInfo

-- | Number of active discovery agents.
[$sel:activeAgents:CustomerAgentInfo'] :: CustomerAgentInfo -> Int

-- | Number of healthy discovery agents
[$sel:healthyAgents:CustomerAgentInfo'] :: CustomerAgentInfo -> Int

-- | Number of blacklisted discovery agents.
[$sel:blackListedAgents:CustomerAgentInfo'] :: CustomerAgentInfo -> Int

-- | Number of discovery agents with status SHUTDOWN.
[$sel:shutdownAgents:CustomerAgentInfo'] :: CustomerAgentInfo -> Int

-- | Number of unhealthy discovery agents.
[$sel:unhealthyAgents:CustomerAgentInfo'] :: CustomerAgentInfo -> Int

-- | Total number of discovery agents.
[$sel:totalAgents:CustomerAgentInfo'] :: CustomerAgentInfo -> Int

-- | Number of unknown discovery agents.
[$sel:unknownAgents:CustomerAgentInfo'] :: CustomerAgentInfo -> Int

-- | Create a value of <a>CustomerAgentInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:activeAgents:CustomerAgentInfo'</a>,
--   <a>customerAgentInfo_activeAgents</a> - Number of active discovery
--   agents.
--   
--   <a>$sel:healthyAgents:CustomerAgentInfo'</a>,
--   <a>customerAgentInfo_healthyAgents</a> - Number of healthy discovery
--   agents
--   
--   <a>$sel:blackListedAgents:CustomerAgentInfo'</a>,
--   <a>customerAgentInfo_blackListedAgents</a> - Number of blacklisted
--   discovery agents.
--   
--   <a>$sel:shutdownAgents:CustomerAgentInfo'</a>,
--   <a>customerAgentInfo_shutdownAgents</a> - Number of discovery agents
--   with status SHUTDOWN.
--   
--   <a>$sel:unhealthyAgents:CustomerAgentInfo'</a>,
--   <a>customerAgentInfo_unhealthyAgents</a> - Number of unhealthy
--   discovery agents.
--   
--   <a>$sel:totalAgents:CustomerAgentInfo'</a>,
--   <a>customerAgentInfo_totalAgents</a> - Total number of discovery
--   agents.
--   
--   <a>$sel:unknownAgents:CustomerAgentInfo'</a>,
--   <a>customerAgentInfo_unknownAgents</a> - Number of unknown discovery
--   agents.
newCustomerAgentInfo :: Int -> Int -> Int -> Int -> Int -> Int -> Int -> CustomerAgentInfo

-- | Number of active discovery agents.
customerAgentInfo_activeAgents :: Lens' CustomerAgentInfo Int

-- | Number of healthy discovery agents
customerAgentInfo_healthyAgents :: Lens' CustomerAgentInfo Int

-- | Number of blacklisted discovery agents.
customerAgentInfo_blackListedAgents :: Lens' CustomerAgentInfo Int

-- | Number of discovery agents with status SHUTDOWN.
customerAgentInfo_shutdownAgents :: Lens' CustomerAgentInfo Int

-- | Number of unhealthy discovery agents.
customerAgentInfo_unhealthyAgents :: Lens' CustomerAgentInfo Int

-- | Total number of discovery agents.
customerAgentInfo_totalAgents :: Lens' CustomerAgentInfo Int

-- | Number of unknown discovery agents.
customerAgentInfo_unknownAgents :: Lens' CustomerAgentInfo Int
instance GHC.Generics.Generic Network.AWS.Discovery.Types.CustomerAgentInfo.CustomerAgentInfo
instance GHC.Show.Show Network.AWS.Discovery.Types.CustomerAgentInfo.CustomerAgentInfo
instance GHC.Read.Read Network.AWS.Discovery.Types.CustomerAgentInfo.CustomerAgentInfo
instance GHC.Classes.Eq Network.AWS.Discovery.Types.CustomerAgentInfo.CustomerAgentInfo
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Discovery.Types.CustomerAgentInfo.CustomerAgentInfo
instance Data.Hashable.Class.Hashable Network.AWS.Discovery.Types.CustomerAgentInfo.CustomerAgentInfo
instance Control.DeepSeq.NFData Network.AWS.Discovery.Types.CustomerAgentInfo.CustomerAgentInfo


module Network.AWS.Discovery.Types.CustomerConnectorInfo

-- | Inventory data for installed discovery connectors.
--   
--   <i>See:</i> <a>newCustomerConnectorInfo</a> smart constructor.
data CustomerConnectorInfo
CustomerConnectorInfo' :: Int -> Int -> Int -> Int -> Int -> Int -> Int -> CustomerConnectorInfo

-- | Number of active discovery connectors.
[$sel:activeConnectors:CustomerConnectorInfo'] :: CustomerConnectorInfo -> Int

-- | Number of healthy discovery connectors.
[$sel:healthyConnectors:CustomerConnectorInfo'] :: CustomerConnectorInfo -> Int

-- | Number of blacklisted discovery connectors.
[$sel:blackListedConnectors:CustomerConnectorInfo'] :: CustomerConnectorInfo -> Int

-- | Number of discovery connectors with status SHUTDOWN,
[$sel:shutdownConnectors:CustomerConnectorInfo'] :: CustomerConnectorInfo -> Int

-- | Number of unhealthy discovery connectors.
[$sel:unhealthyConnectors:CustomerConnectorInfo'] :: CustomerConnectorInfo -> Int

-- | Total number of discovery connectors.
[$sel:totalConnectors:CustomerConnectorInfo'] :: CustomerConnectorInfo -> Int

-- | Number of unknown discovery connectors.
[$sel:unknownConnectors:CustomerConnectorInfo'] :: CustomerConnectorInfo -> Int

-- | Create a value of <a>CustomerConnectorInfo</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:activeConnectors:CustomerConnectorInfo'</a>,
--   <a>customerConnectorInfo_activeConnectors</a> - Number of active
--   discovery connectors.
--   
--   <a>$sel:healthyConnectors:CustomerConnectorInfo'</a>,
--   <a>customerConnectorInfo_healthyConnectors</a> - Number of healthy
--   discovery connectors.
--   
--   <a>$sel:blackListedConnectors:CustomerConnectorInfo'</a>,
--   <a>customerConnectorInfo_blackListedConnectors</a> - Number of
--   blacklisted discovery connectors.
--   
--   <a>$sel:shutdownConnectors:CustomerConnectorInfo'</a>,
--   <a>customerConnectorInfo_shutdownConnectors</a> - Number of discovery
--   connectors with status SHUTDOWN,
--   
--   <a>$sel:unhealthyConnectors:CustomerConnectorInfo'</a>,
--   <a>customerConnectorInfo_unhealthyConnectors</a> - Number of unhealthy
--   discovery connectors.
--   
--   <a>$sel:totalConnectors:CustomerConnectorInfo'</a>,
--   <a>customerConnectorInfo_totalConnectors</a> - Total number of
--   discovery connectors.
--   
--   <a>$sel:unknownConnectors:CustomerConnectorInfo'</a>,
--   <a>customerConnectorInfo_unknownConnectors</a> - Number of unknown
--   discovery connectors.
newCustomerConnectorInfo :: Int -> Int -> Int -> Int -> Int -> Int -> Int -> CustomerConnectorInfo

-- | Number of active discovery connectors.
customerConnectorInfo_activeConnectors :: Lens' CustomerConnectorInfo Int

-- | Number of healthy discovery connectors.
customerConnectorInfo_healthyConnectors :: Lens' CustomerConnectorInfo Int

-- | Number of blacklisted discovery connectors.
customerConnectorInfo_blackListedConnectors :: Lens' CustomerConnectorInfo Int

-- | Number of discovery connectors with status SHUTDOWN,
customerConnectorInfo_shutdownConnectors :: Lens' CustomerConnectorInfo Int

-- | Number of unhealthy discovery connectors.
customerConnectorInfo_unhealthyConnectors :: Lens' CustomerConnectorInfo Int

-- | Total number of discovery connectors.
customerConnectorInfo_totalConnectors :: Lens' CustomerConnectorInfo Int

-- | Number of unknown discovery connectors.
customerConnectorInfo_unknownConnectors :: Lens' CustomerConnectorInfo Int
instance GHC.Generics.Generic Network.AWS.Discovery.Types.CustomerConnectorInfo.CustomerConnectorInfo
instance GHC.Show.Show Network.AWS.Discovery.Types.CustomerConnectorInfo.CustomerConnectorInfo
instance GHC.Read.Read Network.AWS.Discovery.Types.CustomerConnectorInfo.CustomerConnectorInfo
instance GHC.Classes.Eq Network.AWS.Discovery.Types.CustomerConnectorInfo.CustomerConnectorInfo
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Discovery.Types.CustomerConnectorInfo.CustomerConnectorInfo
instance Data.Hashable.Class.Hashable Network.AWS.Discovery.Types.CustomerConnectorInfo.CustomerConnectorInfo
instance Control.DeepSeq.NFData Network.AWS.Discovery.Types.CustomerConnectorInfo.CustomerConnectorInfo


module Network.AWS.Discovery.Types.DataSource
newtype DataSource
DataSource' :: Text -> DataSource
[fromDataSource] :: DataSource -> Text
pattern DataSource_AGENT :: DataSource
instance Network.AWS.Data.XML.ToXML Network.AWS.Discovery.Types.DataSource.DataSource
instance Network.AWS.Data.XML.FromXML Network.AWS.Discovery.Types.DataSource.DataSource
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Discovery.Types.DataSource.DataSource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Discovery.Types.DataSource.DataSource
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Discovery.Types.DataSource.DataSource
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Discovery.Types.DataSource.DataSource
instance Network.AWS.Data.Query.ToQuery Network.AWS.Discovery.Types.DataSource.DataSource
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Discovery.Types.DataSource.DataSource
instance Network.AWS.Data.Log.ToLog Network.AWS.Discovery.Types.DataSource.DataSource
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Discovery.Types.DataSource.DataSource
instance Network.AWS.Data.Text.ToText Network.AWS.Discovery.Types.DataSource.DataSource
instance Network.AWS.Data.Text.FromText Network.AWS.Discovery.Types.DataSource.DataSource
instance Control.DeepSeq.NFData Network.AWS.Discovery.Types.DataSource.DataSource
instance Data.Hashable.Class.Hashable Network.AWS.Discovery.Types.DataSource.DataSource
instance GHC.Generics.Generic Network.AWS.Discovery.Types.DataSource.DataSource
instance GHC.Classes.Ord Network.AWS.Discovery.Types.DataSource.DataSource
instance GHC.Classes.Eq Network.AWS.Discovery.Types.DataSource.DataSource
instance GHC.Read.Read Network.AWS.Discovery.Types.DataSource.DataSource
instance GHC.Show.Show Network.AWS.Discovery.Types.DataSource.DataSource


module Network.AWS.Discovery.Types.ContinuousExportDescription

-- | A list of continuous export descriptions.
--   
--   <i>See:</i> <a>newContinuousExportDescription</a> smart constructor.
data ContinuousExportDescription
ContinuousExportDescription' :: Maybe ContinuousExportStatus -> Maybe POSIX -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe POSIX -> Maybe DataSource -> Maybe Text -> Maybe Text -> ContinuousExportDescription

-- | Describes the status of the export. Can be one of the following
--   values:
--   
--   <ul>
--   <li>START_IN_PROGRESS - setting up resources to start continuous
--   export.</li>
--   <li>START_FAILED - an error occurred setting up continuous export. To
--   recover, call start-continuous-export again.</li>
--   <li>ACTIVE - data is being exported to the customer bucket.</li>
--   <li>ERROR - an error occurred during export. To fix the issue, call
--   stop-continuous-export and start-continuous-export.</li>
--   <li>STOP_IN_PROGRESS - stopping the export.</li>
--   <li>STOP_FAILED - an error occurred stopping the export. To recover,
--   call stop-continuous-export again.</li>
--   <li>INACTIVE - the continuous export has been stopped. Data is no
--   longer being exported to the customer bucket.</li>
--   </ul>
[$sel:status:ContinuousExportDescription'] :: ContinuousExportDescription -> Maybe ContinuousExportStatus

-- | The timestamp representing when the continuous export was started.
[$sel:startTime:ContinuousExportDescription'] :: ContinuousExportDescription -> Maybe POSIX

-- | An object which describes how the data is stored.
--   
--   <ul>
--   <li><tt>databaseName</tt> - the name of the Glue database used to
--   store the schema.</li>
--   </ul>
[$sel:schemaStorageConfig:ContinuousExportDescription'] :: ContinuousExportDescription -> Maybe (HashMap Text Text)

-- | Contains information about any errors that have occurred. This data
--   type can have the following values:
--   
--   <ul>
--   <li>ACCESS_DENIED - You donâ€™t have permission to start Data
--   Exploration in Amazon Athena. Contact your AWS administrator for help.
--   For more information, see <a>Setting Up AWS Application Discovery
--   Service</a> in the Application Discovery Service User Guide.</li>
--   <li>DELIVERY_STREAM_LIMIT_FAILURE - You reached the limit for Amazon
--   Kinesis Data Firehose delivery streams. Reduce the number of streams
--   or request a limit increase and try again. For more information, see
--   <a>Kinesis Data Streams Limits</a> in the Amazon Kinesis Data Streams
--   Developer Guide.</li>
--   <li>FIREHOSE_ROLE_MISSING - The Data Exploration feature is in an
--   error state because your IAM User is missing the
--   AWSApplicationDiscoveryServiceFirehose role. Turn on Data Exploration
--   in Amazon Athena and try again. For more information, see <a>Step 3:
--   Provide Application Discovery Service Access to Non-Administrator
--   Users by Attaching Policies</a> in the Application Discovery Service
--   User Guide.</li>
--   <li>FIREHOSE_STREAM_DOES_NOT_EXIST - The Data Exploration feature is
--   in an error state because your IAM User is missing one or more of the
--   Kinesis data delivery streams.</li>
--   <li>INTERNAL_FAILURE - The Data Exploration feature is in an error
--   state because of an internal failure. Try again later. If this problem
--   persists, contact AWS Support.</li>
--   <li>S3_BUCKET_LIMIT_FAILURE - You reached the limit for Amazon S3
--   buckets. Reduce the number of Amazon S3 buckets or request a limit
--   increase and try again. For more information, see <a>Bucket
--   Restrictions and Limitations</a> in the Amazon Simple Storage Service
--   Developer Guide.</li>
--   <li>S3_NOT_SIGNED_UP - Your account is not signed up for the Amazon S3
--   service. You must sign up before you can use Amazon S3. You can sign
--   up at the following URL: <a>https://aws.amazon.com/s3</a>.</li>
--   </ul>
[$sel:statusDetail:ContinuousExportDescription'] :: ContinuousExportDescription -> Maybe Text

-- | The timestamp that represents when this continuous export was stopped.
[$sel:stopTime:ContinuousExportDescription'] :: ContinuousExportDescription -> Maybe POSIX

-- | The type of data collector used to gather this data (currently only
--   offered for AGENT).
[$sel:dataSource:ContinuousExportDescription'] :: ContinuousExportDescription -> Maybe DataSource

-- | The name of the s3 bucket where the export data parquet files are
--   stored.
[$sel:s3Bucket:ContinuousExportDescription'] :: ContinuousExportDescription -> Maybe Text

-- | The unique ID assigned to this export.
[$sel:exportId:ContinuousExportDescription'] :: ContinuousExportDescription -> Maybe Text

-- | Create a value of <a>ContinuousExportDescription</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ContinuousExportDescription'</a>,
--   <a>continuousExportDescription_status</a> - Describes the status of
--   the export. Can be one of the following values:
--   
--   <ul>
--   <li>START_IN_PROGRESS - setting up resources to start continuous
--   export.</li>
--   <li>START_FAILED - an error occurred setting up continuous export. To
--   recover, call start-continuous-export again.</li>
--   <li>ACTIVE - data is being exported to the customer bucket.</li>
--   <li>ERROR - an error occurred during export. To fix the issue, call
--   stop-continuous-export and start-continuous-export.</li>
--   <li>STOP_IN_PROGRESS - stopping the export.</li>
--   <li>STOP_FAILED - an error occurred stopping the export. To recover,
--   call stop-continuous-export again.</li>
--   <li>INACTIVE - the continuous export has been stopped. Data is no
--   longer being exported to the customer bucket.</li>
--   </ul>
--   
--   <a>$sel:startTime:ContinuousExportDescription'</a>,
--   <a>continuousExportDescription_startTime</a> - The timestamp
--   representing when the continuous export was started.
--   
--   <a>$sel:schemaStorageConfig:ContinuousExportDescription'</a>,
--   <a>continuousExportDescription_schemaStorageConfig</a> - An object
--   which describes how the data is stored.
--   
--   <ul>
--   <li><tt>databaseName</tt> - the name of the Glue database used to
--   store the schema.</li>
--   </ul>
--   
--   <a>$sel:statusDetail:ContinuousExportDescription'</a>,
--   <a>continuousExportDescription_statusDetail</a> - Contains information
--   about any errors that have occurred. This data type can have the
--   following values:
--   
--   <ul>
--   <li>ACCESS_DENIED - You donâ€™t have permission to start Data
--   Exploration in Amazon Athena. Contact your AWS administrator for help.
--   For more information, see <a>Setting Up AWS Application Discovery
--   Service</a> in the Application Discovery Service User Guide.</li>
--   <li>DELIVERY_STREAM_LIMIT_FAILURE - You reached the limit for Amazon
--   Kinesis Data Firehose delivery streams. Reduce the number of streams
--   or request a limit increase and try again. For more information, see
--   <a>Kinesis Data Streams Limits</a> in the Amazon Kinesis Data Streams
--   Developer Guide.</li>
--   <li>FIREHOSE_ROLE_MISSING - The Data Exploration feature is in an
--   error state because your IAM User is missing the
--   AWSApplicationDiscoveryServiceFirehose role. Turn on Data Exploration
--   in Amazon Athena and try again. For more information, see <a>Step 3:
--   Provide Application Discovery Service Access to Non-Administrator
--   Users by Attaching Policies</a> in the Application Discovery Service
--   User Guide.</li>
--   <li>FIREHOSE_STREAM_DOES_NOT_EXIST - The Data Exploration feature is
--   in an error state because your IAM User is missing one or more of the
--   Kinesis data delivery streams.</li>
--   <li>INTERNAL_FAILURE - The Data Exploration feature is in an error
--   state because of an internal failure. Try again later. If this problem
--   persists, contact AWS Support.</li>
--   <li>S3_BUCKET_LIMIT_FAILURE - You reached the limit for Amazon S3
--   buckets. Reduce the number of Amazon S3 buckets or request a limit
--   increase and try again. For more information, see <a>Bucket
--   Restrictions and Limitations</a> in the Amazon Simple Storage Service
--   Developer Guide.</li>
--   <li>S3_NOT_SIGNED_UP - Your account is not signed up for the Amazon S3
--   service. You must sign up before you can use Amazon S3. You can sign
--   up at the following URL: <a>https://aws.amazon.com/s3</a>.</li>
--   </ul>
--   
--   <a>$sel:stopTime:ContinuousExportDescription'</a>,
--   <a>continuousExportDescription_stopTime</a> - The timestamp that
--   represents when this continuous export was stopped.
--   
--   <a>$sel:dataSource:ContinuousExportDescription'</a>,
--   <a>continuousExportDescription_dataSource</a> - The type of data
--   collector used to gather this data (currently only offered for AGENT).
--   
--   <a>$sel:s3Bucket:ContinuousExportDescription'</a>,
--   <a>continuousExportDescription_s3Bucket</a> - The name of the s3
--   bucket where the export data parquet files are stored.
--   
--   <a>$sel:exportId:ContinuousExportDescription'</a>,
--   <a>continuousExportDescription_exportId</a> - The unique ID assigned
--   to this export.
newContinuousExportDescription :: ContinuousExportDescription

-- | Describes the status of the export. Can be one of the following
--   values:
--   
--   <ul>
--   <li>START_IN_PROGRESS - setting up resources to start continuous
--   export.</li>
--   <li>START_FAILED - an error occurred setting up continuous export. To
--   recover, call start-continuous-export again.</li>
--   <li>ACTIVE - data is being exported to the customer bucket.</li>
--   <li>ERROR - an error occurred during export. To fix the issue, call
--   stop-continuous-export and start-continuous-export.</li>
--   <li>STOP_IN_PROGRESS - stopping the export.</li>
--   <li>STOP_FAILED - an error occurred stopping the export. To recover,
--   call stop-continuous-export again.</li>
--   <li>INACTIVE - the continuous export has been stopped. Data is no
--   longer being exported to the customer bucket.</li>
--   </ul>
continuousExportDescription_status :: Lens' ContinuousExportDescription (Maybe ContinuousExportStatus)

-- | The timestamp representing when the continuous export was started.
continuousExportDescription_startTime :: Lens' ContinuousExportDescription (Maybe UTCTime)

-- | An object which describes how the data is stored.
--   
--   <ul>
--   <li><tt>databaseName</tt> - the name of the Glue database used to
--   store the schema.</li>
--   </ul>
continuousExportDescription_schemaStorageConfig :: Lens' ContinuousExportDescription (Maybe (HashMap Text Text))

-- | Contains information about any errors that have occurred. This data
--   type can have the following values:
--   
--   <ul>
--   <li>ACCESS_DENIED - You donâ€™t have permission to start Data
--   Exploration in Amazon Athena. Contact your AWS administrator for help.
--   For more information, see <a>Setting Up AWS Application Discovery
--   Service</a> in the Application Discovery Service User Guide.</li>
--   <li>DELIVERY_STREAM_LIMIT_FAILURE - You reached the limit for Amazon
--   Kinesis Data Firehose delivery streams. Reduce the number of streams
--   or request a limit increase and try again. For more information, see
--   <a>Kinesis Data Streams Limits</a> in the Amazon Kinesis Data Streams
--   Developer Guide.</li>
--   <li>FIREHOSE_ROLE_MISSING - The Data Exploration feature is in an
--   error state because your IAM User is missing the
--   AWSApplicationDiscoveryServiceFirehose role. Turn on Data Exploration
--   in Amazon Athena and try again. For more information, see <a>Step 3:
--   Provide Application Discovery Service Access to Non-Administrator
--   Users by Attaching Policies</a> in the Application Discovery Service
--   User Guide.</li>
--   <li>FIREHOSE_STREAM_DOES_NOT_EXIST - The Data Exploration feature is
--   in an error state because your IAM User is missing one or more of the
--   Kinesis data delivery streams.</li>
--   <li>INTERNAL_FAILURE - The Data Exploration feature is in an error
--   state because of an internal failure. Try again later. If this problem
--   persists, contact AWS Support.</li>
--   <li>S3_BUCKET_LIMIT_FAILURE - You reached the limit for Amazon S3
--   buckets. Reduce the number of Amazon S3 buckets or request a limit
--   increase and try again. For more information, see <a>Bucket
--   Restrictions and Limitations</a> in the Amazon Simple Storage Service
--   Developer Guide.</li>
--   <li>S3_NOT_SIGNED_UP - Your account is not signed up for the Amazon S3
--   service. You must sign up before you can use Amazon S3. You can sign
--   up at the following URL: <a>https://aws.amazon.com/s3</a>.</li>
--   </ul>
continuousExportDescription_statusDetail :: Lens' ContinuousExportDescription (Maybe Text)

-- | The timestamp that represents when this continuous export was stopped.
continuousExportDescription_stopTime :: Lens' ContinuousExportDescription (Maybe UTCTime)

-- | The type of data collector used to gather this data (currently only
--   offered for AGENT).
continuousExportDescription_dataSource :: Lens' ContinuousExportDescription (Maybe DataSource)

-- | The name of the s3 bucket where the export data parquet files are
--   stored.
continuousExportDescription_s3Bucket :: Lens' ContinuousExportDescription (Maybe Text)

-- | The unique ID assigned to this export.
continuousExportDescription_exportId :: Lens' ContinuousExportDescription (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Discovery.Types.ContinuousExportDescription.ContinuousExportDescription
instance GHC.Show.Show Network.AWS.Discovery.Types.ContinuousExportDescription.ContinuousExportDescription
instance GHC.Read.Read Network.AWS.Discovery.Types.ContinuousExportDescription.ContinuousExportDescription
instance GHC.Classes.Eq Network.AWS.Discovery.Types.ContinuousExportDescription.ContinuousExportDescription
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Discovery.Types.ContinuousExportDescription.ContinuousExportDescription
instance Data.Hashable.Class.Hashable Network.AWS.Discovery.Types.ContinuousExportDescription.ContinuousExportDescription
instance Control.DeepSeq.NFData Network.AWS.Discovery.Types.ContinuousExportDescription.ContinuousExportDescription


module Network.AWS.Discovery.Types.ExportDataFormat
newtype ExportDataFormat
ExportDataFormat' :: Text -> ExportDataFormat
[fromExportDataFormat] :: ExportDataFormat -> Text
pattern ExportDataFormat_CSV :: ExportDataFormat
pattern ExportDataFormat_GRAPHML :: ExportDataFormat
instance Network.AWS.Data.XML.ToXML Network.AWS.Discovery.Types.ExportDataFormat.ExportDataFormat
instance Network.AWS.Data.XML.FromXML Network.AWS.Discovery.Types.ExportDataFormat.ExportDataFormat
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Discovery.Types.ExportDataFormat.ExportDataFormat
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Discovery.Types.ExportDataFormat.ExportDataFormat
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Discovery.Types.ExportDataFormat.ExportDataFormat
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Discovery.Types.ExportDataFormat.ExportDataFormat
instance Network.AWS.Data.Query.ToQuery Network.AWS.Discovery.Types.ExportDataFormat.ExportDataFormat
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Discovery.Types.ExportDataFormat.ExportDataFormat
instance Network.AWS.Data.Log.ToLog Network.AWS.Discovery.Types.ExportDataFormat.ExportDataFormat
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Discovery.Types.ExportDataFormat.ExportDataFormat
instance Network.AWS.Data.Text.ToText Network.AWS.Discovery.Types.ExportDataFormat.ExportDataFormat
instance Network.AWS.Data.Text.FromText Network.AWS.Discovery.Types.ExportDataFormat.ExportDataFormat
instance Control.DeepSeq.NFData Network.AWS.Discovery.Types.ExportDataFormat.ExportDataFormat
instance Data.Hashable.Class.Hashable Network.AWS.Discovery.Types.ExportDataFormat.ExportDataFormat
instance GHC.Generics.Generic Network.AWS.Discovery.Types.ExportDataFormat.ExportDataFormat
instance GHC.Classes.Ord Network.AWS.Discovery.Types.ExportDataFormat.ExportDataFormat
instance GHC.Classes.Eq Network.AWS.Discovery.Types.ExportDataFormat.ExportDataFormat
instance GHC.Read.Read Network.AWS.Discovery.Types.ExportDataFormat.ExportDataFormat
instance GHC.Show.Show Network.AWS.Discovery.Types.ExportDataFormat.ExportDataFormat


module Network.AWS.Discovery.Types.ExportFilter

-- | Used to select which agent's data is to be exported. A single agent ID
--   may be selected for export using the <a>StartExportTask</a> action.
--   
--   <i>See:</i> <a>newExportFilter</a> smart constructor.
data ExportFilter
ExportFilter' :: Text -> [Text] -> Text -> ExportFilter

-- | A single <tt>ExportFilter</tt> name. Supported filters:
--   <tt>agentId</tt>.
[$sel:name:ExportFilter'] :: ExportFilter -> Text

-- | A single <tt>agentId</tt> for a Discovery Agent. An <tt>agentId</tt>
--   can be found using the <a>DescribeAgents</a> action. Typically an ADS
--   <tt>agentId</tt> is in the form <tt>o-0123456789abcdef0</tt>.
[$sel:values:ExportFilter'] :: ExportFilter -> [Text]

-- | Supported condition: <tt>EQUALS</tt>
[$sel:condition:ExportFilter'] :: ExportFilter -> Text

-- | Create a value of <a>ExportFilter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:ExportFilter'</a>, <a>exportFilter_name</a> - A single
--   <tt>ExportFilter</tt> name. Supported filters: <tt>agentId</tt>.
--   
--   <a>$sel:values:ExportFilter'</a>, <a>exportFilter_values</a> - A
--   single <tt>agentId</tt> for a Discovery Agent. An <tt>agentId</tt> can
--   be found using the <a>DescribeAgents</a> action. Typically an ADS
--   <tt>agentId</tt> is in the form <tt>o-0123456789abcdef0</tt>.
--   
--   <a>$sel:condition:ExportFilter'</a>, <a>exportFilter_condition</a> -
--   Supported condition: <tt>EQUALS</tt>
newExportFilter :: Text -> Text -> ExportFilter

-- | A single <tt>ExportFilter</tt> name. Supported filters:
--   <tt>agentId</tt>.
exportFilter_name :: Lens' ExportFilter Text

-- | A single <tt>agentId</tt> for a Discovery Agent. An <tt>agentId</tt>
--   can be found using the <a>DescribeAgents</a> action. Typically an ADS
--   <tt>agentId</tt> is in the form <tt>o-0123456789abcdef0</tt>.
exportFilter_values :: Lens' ExportFilter [Text]

-- | Supported condition: <tt>EQUALS</tt>
exportFilter_condition :: Lens' ExportFilter Text
instance GHC.Generics.Generic Network.AWS.Discovery.Types.ExportFilter.ExportFilter
instance GHC.Show.Show Network.AWS.Discovery.Types.ExportFilter.ExportFilter
instance GHC.Read.Read Network.AWS.Discovery.Types.ExportFilter.ExportFilter
instance GHC.Classes.Eq Network.AWS.Discovery.Types.ExportFilter.ExportFilter
instance Data.Hashable.Class.Hashable Network.AWS.Discovery.Types.ExportFilter.ExportFilter
instance Control.DeepSeq.NFData Network.AWS.Discovery.Types.ExportFilter.ExportFilter
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Discovery.Types.ExportFilter.ExportFilter


module Network.AWS.Discovery.Types.ExportStatus
newtype ExportStatus
ExportStatus' :: Text -> ExportStatus
[fromExportStatus] :: ExportStatus -> Text
pattern ExportStatus_FAILED :: ExportStatus
pattern ExportStatus_IN_PROGRESS :: ExportStatus
pattern ExportStatus_SUCCEEDED :: ExportStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.Discovery.Types.ExportStatus.ExportStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.Discovery.Types.ExportStatus.ExportStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Discovery.Types.ExportStatus.ExportStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Discovery.Types.ExportStatus.ExportStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Discovery.Types.ExportStatus.ExportStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Discovery.Types.ExportStatus.ExportStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.Discovery.Types.ExportStatus.ExportStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Discovery.Types.ExportStatus.ExportStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.Discovery.Types.ExportStatus.ExportStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Discovery.Types.ExportStatus.ExportStatus
instance Network.AWS.Data.Text.ToText Network.AWS.Discovery.Types.ExportStatus.ExportStatus
instance Network.AWS.Data.Text.FromText Network.AWS.Discovery.Types.ExportStatus.ExportStatus
instance Control.DeepSeq.NFData Network.AWS.Discovery.Types.ExportStatus.ExportStatus
instance Data.Hashable.Class.Hashable Network.AWS.Discovery.Types.ExportStatus.ExportStatus
instance GHC.Generics.Generic Network.AWS.Discovery.Types.ExportStatus.ExportStatus
instance GHC.Classes.Ord Network.AWS.Discovery.Types.ExportStatus.ExportStatus
instance GHC.Classes.Eq Network.AWS.Discovery.Types.ExportStatus.ExportStatus
instance GHC.Read.Read Network.AWS.Discovery.Types.ExportStatus.ExportStatus
instance GHC.Show.Show Network.AWS.Discovery.Types.ExportStatus.ExportStatus


module Network.AWS.Discovery.Types.ExportInfo

-- | Information regarding the export status of discovered data. The value
--   is an array of objects.
--   
--   <i>See:</i> <a>newExportInfo</a> smart constructor.
data ExportInfo
ExportInfo' :: Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe Bool -> Text -> ExportStatus -> Text -> POSIX -> ExportInfo

-- | A URL for an Amazon S3 bucket where you can review the exported data.
--   The URL is displayed only if the export succeeded.
[$sel:configurationsDownloadUrl:ExportInfo'] :: ExportInfo -> Maybe Text

-- | The value of <tt>startTime</tt> parameter in the
--   <tt>StartExportTask</tt> request. If no <tt>startTime</tt> was
--   requested, this result does not appear in <tt>ExportInfo</tt>.
[$sel:requestedStartTime:ExportInfo'] :: ExportInfo -> Maybe POSIX

-- | The <tt>endTime</tt> used in the <tt>StartExportTask</tt> request. If
--   no <tt>endTime</tt> was requested, this result does not appear in
--   <tt>ExportInfo</tt>.
[$sel:requestedEndTime:ExportInfo'] :: ExportInfo -> Maybe POSIX

-- | If true, the export of agent information exceeded the size limit for a
--   single export and the exported data is incomplete for the requested
--   time range. To address this, select a smaller time range for the
--   export by using <tt>startDate</tt> and <tt>endDate</tt>.
[$sel:isTruncated:ExportInfo'] :: ExportInfo -> Maybe Bool

-- | A unique identifier used to query an export.
[$sel:exportId:ExportInfo'] :: ExportInfo -> Text

-- | The status of the data export job.
[$sel:exportStatus:ExportInfo'] :: ExportInfo -> ExportStatus

-- | A status message provided for API callers.
[$sel:statusMessage:ExportInfo'] :: ExportInfo -> Text

-- | The time that the data export was initiated.
[$sel:exportRequestTime:ExportInfo'] :: ExportInfo -> POSIX

-- | Create a value of <a>ExportInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configurationsDownloadUrl:ExportInfo'</a>,
--   <a>exportInfo_configurationsDownloadUrl</a> - A URL for an Amazon S3
--   bucket where you can review the exported data. The URL is displayed
--   only if the export succeeded.
--   
--   <a>$sel:requestedStartTime:ExportInfo'</a>,
--   <a>exportInfo_requestedStartTime</a> - The value of <tt>startTime</tt>
--   parameter in the <tt>StartExportTask</tt> request. If no
--   <tt>startTime</tt> was requested, this result does not appear in
--   <tt>ExportInfo</tt>.
--   
--   <a>$sel:requestedEndTime:ExportInfo'</a>,
--   <a>exportInfo_requestedEndTime</a> - The <tt>endTime</tt> used in the
--   <tt>StartExportTask</tt> request. If no <tt>endTime</tt> was
--   requested, this result does not appear in <tt>ExportInfo</tt>.
--   
--   <a>$sel:isTruncated:ExportInfo'</a>, <a>exportInfo_isTruncated</a> -
--   If true, the export of agent information exceeded the size limit for a
--   single export and the exported data is incomplete for the requested
--   time range. To address this, select a smaller time range for the
--   export by using <tt>startDate</tt> and <tt>endDate</tt>.
--   
--   <a>$sel:exportId:ExportInfo'</a>, <a>exportInfo_exportId</a> - A
--   unique identifier used to query an export.
--   
--   <a>$sel:exportStatus:ExportInfo'</a>, <a>exportInfo_exportStatus</a> -
--   The status of the data export job.
--   
--   <a>$sel:statusMessage:ExportInfo'</a>, <a>exportInfo_statusMessage</a>
--   - A status message provided for API callers.
--   
--   <a>$sel:exportRequestTime:ExportInfo'</a>,
--   <a>exportInfo_exportRequestTime</a> - The time that the data export
--   was initiated.
newExportInfo :: Text -> ExportStatus -> Text -> UTCTime -> ExportInfo

-- | A URL for an Amazon S3 bucket where you can review the exported data.
--   The URL is displayed only if the export succeeded.
exportInfo_configurationsDownloadUrl :: Lens' ExportInfo (Maybe Text)

-- | The value of <tt>startTime</tt> parameter in the
--   <tt>StartExportTask</tt> request. If no <tt>startTime</tt> was
--   requested, this result does not appear in <tt>ExportInfo</tt>.
exportInfo_requestedStartTime :: Lens' ExportInfo (Maybe UTCTime)

-- | The <tt>endTime</tt> used in the <tt>StartExportTask</tt> request. If
--   no <tt>endTime</tt> was requested, this result does not appear in
--   <tt>ExportInfo</tt>.
exportInfo_requestedEndTime :: Lens' ExportInfo (Maybe UTCTime)

-- | If true, the export of agent information exceeded the size limit for a
--   single export and the exported data is incomplete for the requested
--   time range. To address this, select a smaller time range for the
--   export by using <tt>startDate</tt> and <tt>endDate</tt>.
exportInfo_isTruncated :: Lens' ExportInfo (Maybe Bool)

-- | A unique identifier used to query an export.
exportInfo_exportId :: Lens' ExportInfo Text

-- | The status of the data export job.
exportInfo_exportStatus :: Lens' ExportInfo ExportStatus

-- | A status message provided for API callers.
exportInfo_statusMessage :: Lens' ExportInfo Text

-- | The time that the data export was initiated.
exportInfo_exportRequestTime :: Lens' ExportInfo UTCTime
instance GHC.Generics.Generic Network.AWS.Discovery.Types.ExportInfo.ExportInfo
instance GHC.Show.Show Network.AWS.Discovery.Types.ExportInfo.ExportInfo
instance GHC.Read.Read Network.AWS.Discovery.Types.ExportInfo.ExportInfo
instance GHC.Classes.Eq Network.AWS.Discovery.Types.ExportInfo.ExportInfo
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Discovery.Types.ExportInfo.ExportInfo
instance Data.Hashable.Class.Hashable Network.AWS.Discovery.Types.ExportInfo.ExportInfo
instance Control.DeepSeq.NFData Network.AWS.Discovery.Types.ExportInfo.ExportInfo


module Network.AWS.Discovery.Types.Filter

-- | A filter that can use conditional operators.
--   
--   For more information about filters, see <a>Querying Discovered
--   Configuration Items</a> in the <i>AWS Application Discovery Service
--   User Guide</i>.
--   
--   <i>See:</i> <a>newFilter</a> smart constructor.
data Filter
Filter' :: Text -> [Text] -> Text -> Filter

-- | The name of the filter.
[$sel:name:Filter'] :: Filter -> Text

-- | A string value on which to filter. For example, if you choose the
--   <tt>destinationServer.osVersion</tt> filter name, you could specify
--   <tt>Ubuntu</tt> for the value.
[$sel:values:Filter'] :: Filter -> [Text]

-- | A conditional operator. The following operators are valid: EQUALS,
--   NOT_EQUALS, CONTAINS, NOT_CONTAINS. If you specify multiple filters,
--   the system utilizes all filters as though concatenated by <i>AND</i>.
--   If you specify multiple values for a particular filter, the system
--   differentiates the values using <i>OR</i>. Calling either
--   <i>DescribeConfigurations</i> or <i>ListConfigurations</i> returns
--   attributes of matching configuration items.
[$sel:condition:Filter'] :: Filter -> Text

-- | Create a value of <a>Filter</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:Filter'</a>, <a>filter_name</a> - The name of the filter.
--   
--   <a>$sel:values:Filter'</a>, <a>filter_values</a> - A string value on
--   which to filter. For example, if you choose the
--   <tt>destinationServer.osVersion</tt> filter name, you could specify
--   <tt>Ubuntu</tt> for the value.
--   
--   <a>$sel:condition:Filter'</a>, <a>filter_condition</a> - A conditional
--   operator. The following operators are valid: EQUALS, NOT_EQUALS,
--   CONTAINS, NOT_CONTAINS. If you specify multiple filters, the system
--   utilizes all filters as though concatenated by <i>AND</i>. If you
--   specify multiple values for a particular filter, the system
--   differentiates the values using <i>OR</i>. Calling either
--   <i>DescribeConfigurations</i> or <i>ListConfigurations</i> returns
--   attributes of matching configuration items.
newFilter :: Text -> Text -> Filter

-- | The name of the filter.
filter_name :: Lens' Filter Text

-- | A string value on which to filter. For example, if you choose the
--   <tt>destinationServer.osVersion</tt> filter name, you could specify
--   <tt>Ubuntu</tt> for the value.
filter_values :: Lens' Filter [Text]

-- | A conditional operator. The following operators are valid: EQUALS,
--   NOT_EQUALS, CONTAINS, NOT_CONTAINS. If you specify multiple filters,
--   the system utilizes all filters as though concatenated by <i>AND</i>.
--   If you specify multiple values for a particular filter, the system
--   differentiates the values using <i>OR</i>. Calling either
--   <i>DescribeConfigurations</i> or <i>ListConfigurations</i> returns
--   attributes of matching configuration items.
filter_condition :: Lens' Filter Text
instance GHC.Generics.Generic Network.AWS.Discovery.Types.Filter.Filter
instance GHC.Show.Show Network.AWS.Discovery.Types.Filter.Filter
instance GHC.Read.Read Network.AWS.Discovery.Types.Filter.Filter
instance GHC.Classes.Eq Network.AWS.Discovery.Types.Filter.Filter
instance Data.Hashable.Class.Hashable Network.AWS.Discovery.Types.Filter.Filter
instance Control.DeepSeq.NFData Network.AWS.Discovery.Types.Filter.Filter
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Discovery.Types.Filter.Filter


module Network.AWS.Discovery.Types.ImportStatus
newtype ImportStatus
ImportStatus' :: Text -> ImportStatus
[fromImportStatus] :: ImportStatus -> Text
pattern ImportStatus_DELETE_COMPLETE :: ImportStatus
pattern ImportStatus_DELETE_FAILED :: ImportStatus
pattern ImportStatus_DELETE_FAILED_LIMIT_EXCEEDED :: ImportStatus
pattern ImportStatus_DELETE_IN_PROGRESS :: ImportStatus
pattern ImportStatus_IMPORT_COMPLETE :: ImportStatus
pattern ImportStatus_IMPORT_COMPLETE_WITH_ERRORS :: ImportStatus
pattern ImportStatus_IMPORT_FAILED :: ImportStatus
pattern ImportStatus_IMPORT_FAILED_RECORD_LIMIT_EXCEEDED :: ImportStatus
pattern ImportStatus_IMPORT_FAILED_SERVER_LIMIT_EXCEEDED :: ImportStatus
pattern ImportStatus_IMPORT_IN_PROGRESS :: ImportStatus
pattern ImportStatus_INTERNAL_ERROR :: ImportStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.Discovery.Types.ImportStatus.ImportStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.Discovery.Types.ImportStatus.ImportStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Discovery.Types.ImportStatus.ImportStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Discovery.Types.ImportStatus.ImportStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Discovery.Types.ImportStatus.ImportStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Discovery.Types.ImportStatus.ImportStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.Discovery.Types.ImportStatus.ImportStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Discovery.Types.ImportStatus.ImportStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.Discovery.Types.ImportStatus.ImportStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Discovery.Types.ImportStatus.ImportStatus
instance Network.AWS.Data.Text.ToText Network.AWS.Discovery.Types.ImportStatus.ImportStatus
instance Network.AWS.Data.Text.FromText Network.AWS.Discovery.Types.ImportStatus.ImportStatus
instance Control.DeepSeq.NFData Network.AWS.Discovery.Types.ImportStatus.ImportStatus
instance Data.Hashable.Class.Hashable Network.AWS.Discovery.Types.ImportStatus.ImportStatus
instance GHC.Generics.Generic Network.AWS.Discovery.Types.ImportStatus.ImportStatus
instance GHC.Classes.Ord Network.AWS.Discovery.Types.ImportStatus.ImportStatus
instance GHC.Classes.Eq Network.AWS.Discovery.Types.ImportStatus.ImportStatus
instance GHC.Read.Read Network.AWS.Discovery.Types.ImportStatus.ImportStatus
instance GHC.Show.Show Network.AWS.Discovery.Types.ImportStatus.ImportStatus


module Network.AWS.Discovery.Types.ImportTask

-- | An array of information related to the import task request that
--   includes status information, times, IDs, the Amazon S3 Object URL for
--   the import file, and more.
--   
--   <i>See:</i> <a>newImportTask</a> smart constructor.
data ImportTask
ImportTask' :: Maybe Int -> Maybe ImportStatus -> Maybe Int -> Maybe POSIX -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe POSIX -> ImportTask

-- | The total number of application records in the import file that were
--   successfully imported.
[$sel:applicationImportSuccess:ImportTask'] :: ImportTask -> Maybe Int

-- | The status of the import task. An import can have the status of
--   <tt>IMPORT_COMPLETE</tt> and still have some records fail to import
--   from the overall request. More information can be found in the
--   downloadable archive defined in the <tt>errorsAndFailedEntriesZip</tt>
--   field, or in the Migration Hub management console.
[$sel:status:ImportTask'] :: ImportTask -> Maybe ImportStatus

-- | The total number of server records in the import file that were
--   successfully imported.
[$sel:serverImportSuccess:ImportTask'] :: ImportTask -> Maybe Int

-- | The time that the import task request finished, presented in the Unix
--   time stamp format.
[$sel:importCompletionTime:ImportTask'] :: ImportTask -> Maybe POSIX

-- | A descriptive name for an import task. You can use this name to filter
--   future requests related to this import task, such as identifying
--   applications and servers that were included in this import task. We
--   recommend that you use a meaningful name for each import task.
[$sel:name:ImportTask'] :: ImportTask -> Maybe Text

-- | The total number of application records in the import file that failed
--   to be imported.
[$sel:applicationImportFailure:ImportTask'] :: ImportTask -> Maybe Int

-- | A link to a compressed archive folder (in the ZIP format) that
--   contains an error log and a file of failed records. You can use these
--   two files to quickly identify records that failed, why they failed,
--   and correct those records. Afterward, you can upload the corrected
--   file to your Amazon S3 bucket and create another import task request.
--   
--   This field also includes authorization information so you can confirm
--   the authenticity of the compressed archive before you download it.
--   
--   If some records failed to be imported we recommend that you correct
--   the records in the failed entries file and then imports that failed
--   entries file. This prevents you from having to correct and update the
--   larger original file and attempt importing it again.
[$sel:errorsAndFailedEntriesZip:ImportTask'] :: ImportTask -> Maybe Text

-- | The unique ID for a specific import task. These IDs aren't globally
--   unique, but they are unique within an AWS account.
[$sel:importTaskId:ImportTask'] :: ImportTask -> Maybe Text

-- | The time that the import task request was deleted, presented in the
--   Unix time stamp format.
[$sel:importDeletedTime:ImportTask'] :: ImportTask -> Maybe POSIX

-- | The total number of server records in the import file that failed to
--   be imported.
[$sel:serverImportFailure:ImportTask'] :: ImportTask -> Maybe Int

-- | A unique token used to prevent the same import request from occurring
--   more than once. If you didn't provide a token, a token was
--   automatically generated when the import task request was sent.
[$sel:clientRequestToken:ImportTask'] :: ImportTask -> Maybe Text

-- | The URL for your import file that you've uploaded to Amazon S3.
[$sel:importUrl:ImportTask'] :: ImportTask -> Maybe Text

-- | The time that the import task request was made, presented in the Unix
--   time stamp format.
[$sel:importRequestTime:ImportTask'] :: ImportTask -> Maybe POSIX

-- | Create a value of <a>ImportTask</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationImportSuccess:ImportTask'</a>,
--   <a>importTask_applicationImportSuccess</a> - The total number of
--   application records in the import file that were successfully
--   imported.
--   
--   <a>$sel:status:ImportTask'</a>, <a>importTask_status</a> - The status
--   of the import task. An import can have the status of
--   <tt>IMPORT_COMPLETE</tt> and still have some records fail to import
--   from the overall request. More information can be found in the
--   downloadable archive defined in the <tt>errorsAndFailedEntriesZip</tt>
--   field, or in the Migration Hub management console.
--   
--   <a>$sel:serverImportSuccess:ImportTask'</a>,
--   <a>importTask_serverImportSuccess</a> - The total number of server
--   records in the import file that were successfully imported.
--   
--   <a>$sel:importCompletionTime:ImportTask'</a>,
--   <a>importTask_importCompletionTime</a> - The time that the import task
--   request finished, presented in the Unix time stamp format.
--   
--   <a>$sel:name:ImportTask'</a>, <a>importTask_name</a> - A descriptive
--   name for an import task. You can use this name to filter future
--   requests related to this import task, such as identifying applications
--   and servers that were included in this import task. We recommend that
--   you use a meaningful name for each import task.
--   
--   <a>$sel:applicationImportFailure:ImportTask'</a>,
--   <a>importTask_applicationImportFailure</a> - The total number of
--   application records in the import file that failed to be imported.
--   
--   <a>$sel:errorsAndFailedEntriesZip:ImportTask'</a>,
--   <a>importTask_errorsAndFailedEntriesZip</a> - A link to a compressed
--   archive folder (in the ZIP format) that contains an error log and a
--   file of failed records. You can use these two files to quickly
--   identify records that failed, why they failed, and correct those
--   records. Afterward, you can upload the corrected file to your Amazon
--   S3 bucket and create another import task request.
--   
--   This field also includes authorization information so you can confirm
--   the authenticity of the compressed archive before you download it.
--   
--   If some records failed to be imported we recommend that you correct
--   the records in the failed entries file and then imports that failed
--   entries file. This prevents you from having to correct and update the
--   larger original file and attempt importing it again.
--   
--   <a>$sel:importTaskId:ImportTask'</a>, <a>importTask_importTaskId</a> -
--   The unique ID for a specific import task. These IDs aren't globally
--   unique, but they are unique within an AWS account.
--   
--   <a>$sel:importDeletedTime:ImportTask'</a>,
--   <a>importTask_importDeletedTime</a> - The time that the import task
--   request was deleted, presented in the Unix time stamp format.
--   
--   <a>$sel:serverImportFailure:ImportTask'</a>,
--   <a>importTask_serverImportFailure</a> - The total number of server
--   records in the import file that failed to be imported.
--   
--   <a>$sel:clientRequestToken:ImportTask'</a>,
--   <a>importTask_clientRequestToken</a> - A unique token used to prevent
--   the same import request from occurring more than once. If you didn't
--   provide a token, a token was automatically generated when the import
--   task request was sent.
--   
--   <a>$sel:importUrl:ImportTask'</a>, <a>importTask_importUrl</a> - The
--   URL for your import file that you've uploaded to Amazon S3.
--   
--   <a>$sel:importRequestTime:ImportTask'</a>,
--   <a>importTask_importRequestTime</a> - The time that the import task
--   request was made, presented in the Unix time stamp format.
newImportTask :: ImportTask

-- | The total number of application records in the import file that were
--   successfully imported.
importTask_applicationImportSuccess :: Lens' ImportTask (Maybe Int)

-- | The status of the import task. An import can have the status of
--   <tt>IMPORT_COMPLETE</tt> and still have some records fail to import
--   from the overall request. More information can be found in the
--   downloadable archive defined in the <tt>errorsAndFailedEntriesZip</tt>
--   field, or in the Migration Hub management console.
importTask_status :: Lens' ImportTask (Maybe ImportStatus)

-- | The total number of server records in the import file that were
--   successfully imported.
importTask_serverImportSuccess :: Lens' ImportTask (Maybe Int)

-- | The time that the import task request finished, presented in the Unix
--   time stamp format.
importTask_importCompletionTime :: Lens' ImportTask (Maybe UTCTime)

-- | A descriptive name for an import task. You can use this name to filter
--   future requests related to this import task, such as identifying
--   applications and servers that were included in this import task. We
--   recommend that you use a meaningful name for each import task.
importTask_name :: Lens' ImportTask (Maybe Text)

-- | The total number of application records in the import file that failed
--   to be imported.
importTask_applicationImportFailure :: Lens' ImportTask (Maybe Int)

-- | A link to a compressed archive folder (in the ZIP format) that
--   contains an error log and a file of failed records. You can use these
--   two files to quickly identify records that failed, why they failed,
--   and correct those records. Afterward, you can upload the corrected
--   file to your Amazon S3 bucket and create another import task request.
--   
--   This field also includes authorization information so you can confirm
--   the authenticity of the compressed archive before you download it.
--   
--   If some records failed to be imported we recommend that you correct
--   the records in the failed entries file and then imports that failed
--   entries file. This prevents you from having to correct and update the
--   larger original file and attempt importing it again.
importTask_errorsAndFailedEntriesZip :: Lens' ImportTask (Maybe Text)

-- | The unique ID for a specific import task. These IDs aren't globally
--   unique, but they are unique within an AWS account.
importTask_importTaskId :: Lens' ImportTask (Maybe Text)

-- | The time that the import task request was deleted, presented in the
--   Unix time stamp format.
importTask_importDeletedTime :: Lens' ImportTask (Maybe UTCTime)

-- | The total number of server records in the import file that failed to
--   be imported.
importTask_serverImportFailure :: Lens' ImportTask (Maybe Int)

-- | A unique token used to prevent the same import request from occurring
--   more than once. If you didn't provide a token, a token was
--   automatically generated when the import task request was sent.
importTask_clientRequestToken :: Lens' ImportTask (Maybe Text)

-- | The URL for your import file that you've uploaded to Amazon S3.
importTask_importUrl :: Lens' ImportTask (Maybe Text)

-- | The time that the import task request was made, presented in the Unix
--   time stamp format.
importTask_importRequestTime :: Lens' ImportTask (Maybe UTCTime)
instance GHC.Generics.Generic Network.AWS.Discovery.Types.ImportTask.ImportTask
instance GHC.Show.Show Network.AWS.Discovery.Types.ImportTask.ImportTask
instance GHC.Read.Read Network.AWS.Discovery.Types.ImportTask.ImportTask
instance GHC.Classes.Eq Network.AWS.Discovery.Types.ImportTask.ImportTask
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Discovery.Types.ImportTask.ImportTask
instance Data.Hashable.Class.Hashable Network.AWS.Discovery.Types.ImportTask.ImportTask
instance Control.DeepSeq.NFData Network.AWS.Discovery.Types.ImportTask.ImportTask


module Network.AWS.Discovery.Types.ImportTaskFilterName
newtype ImportTaskFilterName
ImportTaskFilterName' :: Text -> ImportTaskFilterName
[fromImportTaskFilterName] :: ImportTaskFilterName -> Text
pattern ImportTaskFilterName_IMPORT_TASK_ID :: ImportTaskFilterName
pattern ImportTaskFilterName_NAME :: ImportTaskFilterName
pattern ImportTaskFilterName_STATUS :: ImportTaskFilterName
instance Network.AWS.Data.XML.ToXML Network.AWS.Discovery.Types.ImportTaskFilterName.ImportTaskFilterName
instance Network.AWS.Data.XML.FromXML Network.AWS.Discovery.Types.ImportTaskFilterName.ImportTaskFilterName
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Discovery.Types.ImportTaskFilterName.ImportTaskFilterName
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Discovery.Types.ImportTaskFilterName.ImportTaskFilterName
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Discovery.Types.ImportTaskFilterName.ImportTaskFilterName
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Discovery.Types.ImportTaskFilterName.ImportTaskFilterName
instance Network.AWS.Data.Query.ToQuery Network.AWS.Discovery.Types.ImportTaskFilterName.ImportTaskFilterName
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Discovery.Types.ImportTaskFilterName.ImportTaskFilterName
instance Network.AWS.Data.Log.ToLog Network.AWS.Discovery.Types.ImportTaskFilterName.ImportTaskFilterName
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Discovery.Types.ImportTaskFilterName.ImportTaskFilterName
instance Network.AWS.Data.Text.ToText Network.AWS.Discovery.Types.ImportTaskFilterName.ImportTaskFilterName
instance Network.AWS.Data.Text.FromText Network.AWS.Discovery.Types.ImportTaskFilterName.ImportTaskFilterName
instance Control.DeepSeq.NFData Network.AWS.Discovery.Types.ImportTaskFilterName.ImportTaskFilterName
instance Data.Hashable.Class.Hashable Network.AWS.Discovery.Types.ImportTaskFilterName.ImportTaskFilterName
instance GHC.Generics.Generic Network.AWS.Discovery.Types.ImportTaskFilterName.ImportTaskFilterName
instance GHC.Classes.Ord Network.AWS.Discovery.Types.ImportTaskFilterName.ImportTaskFilterName
instance GHC.Classes.Eq Network.AWS.Discovery.Types.ImportTaskFilterName.ImportTaskFilterName
instance GHC.Read.Read Network.AWS.Discovery.Types.ImportTaskFilterName.ImportTaskFilterName
instance GHC.Show.Show Network.AWS.Discovery.Types.ImportTaskFilterName.ImportTaskFilterName


module Network.AWS.Discovery.Types.ImportTaskFilter

-- | A name-values pair of elements you can use to filter the results when
--   querying your import tasks. Currently, wildcards are not supported for
--   filters.
--   
--   When filtering by import status, all other filter values are ignored.
--   
--   <i>See:</i> <a>newImportTaskFilter</a> smart constructor.
data ImportTaskFilter
ImportTaskFilter' :: Maybe (NonEmpty Text) -> Maybe ImportTaskFilterName -> ImportTaskFilter

-- | An array of strings that you can provide to match against a specific
--   name, status, or import task ID to filter the results for your import
--   task queries.
[$sel:values:ImportTaskFilter'] :: ImportTaskFilter -> Maybe (NonEmpty Text)

-- | The name, status, or import task ID for a specific import task.
[$sel:name:ImportTaskFilter'] :: ImportTaskFilter -> Maybe ImportTaskFilterName

-- | Create a value of <a>ImportTaskFilter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:values:ImportTaskFilter'</a>, <a>importTaskFilter_values</a> -
--   An array of strings that you can provide to match against a specific
--   name, status, or import task ID to filter the results for your import
--   task queries.
--   
--   <a>$sel:name:ImportTaskFilter'</a>, <a>importTaskFilter_name</a> - The
--   name, status, or import task ID for a specific import task.
newImportTaskFilter :: ImportTaskFilter

-- | An array of strings that you can provide to match against a specific
--   name, status, or import task ID to filter the results for your import
--   task queries.
importTaskFilter_values :: Lens' ImportTaskFilter (Maybe (NonEmpty Text))

-- | The name, status, or import task ID for a specific import task.
importTaskFilter_name :: Lens' ImportTaskFilter (Maybe ImportTaskFilterName)
instance GHC.Generics.Generic Network.AWS.Discovery.Types.ImportTaskFilter.ImportTaskFilter
instance GHC.Show.Show Network.AWS.Discovery.Types.ImportTaskFilter.ImportTaskFilter
instance GHC.Read.Read Network.AWS.Discovery.Types.ImportTaskFilter.ImportTaskFilter
instance GHC.Classes.Eq Network.AWS.Discovery.Types.ImportTaskFilter.ImportTaskFilter
instance Data.Hashable.Class.Hashable Network.AWS.Discovery.Types.ImportTaskFilter.ImportTaskFilter
instance Control.DeepSeq.NFData Network.AWS.Discovery.Types.ImportTaskFilter.ImportTaskFilter
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Discovery.Types.ImportTaskFilter.ImportTaskFilter


module Network.AWS.Discovery.Types.NeighborConnectionDetail

-- | Details about neighboring servers.
--   
--   <i>See:</i> <a>newNeighborConnectionDetail</a> smart constructor.
data NeighborConnectionDetail
NeighborConnectionDetail' :: Maybe Text -> Maybe Int -> Text -> Text -> Integer -> NeighborConnectionDetail

-- | The network protocol used for the connection.
[$sel:transportProtocol:NeighborConnectionDetail'] :: NeighborConnectionDetail -> Maybe Text

-- | The destination network port for the connection.
[$sel:destinationPort:NeighborConnectionDetail'] :: NeighborConnectionDetail -> Maybe Int

-- | The ID of the server that opened the network connection.
[$sel:sourceServerId:NeighborConnectionDetail'] :: NeighborConnectionDetail -> Text

-- | The ID of the server that accepted the network connection.
[$sel:destinationServerId:NeighborConnectionDetail'] :: NeighborConnectionDetail -> Text

-- | The number of open network connections with the neighboring server.
[$sel:connectionsCount:NeighborConnectionDetail'] :: NeighborConnectionDetail -> Integer

-- | Create a value of <a>NeighborConnectionDetail</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:transportProtocol:NeighborConnectionDetail'</a>,
--   <a>neighborConnectionDetail_transportProtocol</a> - The network
--   protocol used for the connection.
--   
--   <a>$sel:destinationPort:NeighborConnectionDetail'</a>,
--   <a>neighborConnectionDetail_destinationPort</a> - The destination
--   network port for the connection.
--   
--   <a>$sel:sourceServerId:NeighborConnectionDetail'</a>,
--   <a>neighborConnectionDetail_sourceServerId</a> - The ID of the server
--   that opened the network connection.
--   
--   <a>$sel:destinationServerId:NeighborConnectionDetail'</a>,
--   <a>neighborConnectionDetail_destinationServerId</a> - The ID of the
--   server that accepted the network connection.
--   
--   <a>$sel:connectionsCount:NeighborConnectionDetail'</a>,
--   <a>neighborConnectionDetail_connectionsCount</a> - The number of open
--   network connections with the neighboring server.
newNeighborConnectionDetail :: Text -> Text -> Integer -> NeighborConnectionDetail

-- | The network protocol used for the connection.
neighborConnectionDetail_transportProtocol :: Lens' NeighborConnectionDetail (Maybe Text)

-- | The destination network port for the connection.
neighborConnectionDetail_destinationPort :: Lens' NeighborConnectionDetail (Maybe Int)

-- | The ID of the server that opened the network connection.
neighborConnectionDetail_sourceServerId :: Lens' NeighborConnectionDetail Text

-- | The ID of the server that accepted the network connection.
neighborConnectionDetail_destinationServerId :: Lens' NeighborConnectionDetail Text

-- | The number of open network connections with the neighboring server.
neighborConnectionDetail_connectionsCount :: Lens' NeighborConnectionDetail Integer
instance GHC.Generics.Generic Network.AWS.Discovery.Types.NeighborConnectionDetail.NeighborConnectionDetail
instance GHC.Show.Show Network.AWS.Discovery.Types.NeighborConnectionDetail.NeighborConnectionDetail
instance GHC.Read.Read Network.AWS.Discovery.Types.NeighborConnectionDetail.NeighborConnectionDetail
instance GHC.Classes.Eq Network.AWS.Discovery.Types.NeighborConnectionDetail.NeighborConnectionDetail
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Discovery.Types.NeighborConnectionDetail.NeighborConnectionDetail
instance Data.Hashable.Class.Hashable Network.AWS.Discovery.Types.NeighborConnectionDetail.NeighborConnectionDetail
instance Control.DeepSeq.NFData Network.AWS.Discovery.Types.NeighborConnectionDetail.NeighborConnectionDetail


module Network.AWS.Discovery.Types.OrderString
newtype OrderString
OrderString' :: Text -> OrderString
[fromOrderString] :: OrderString -> Text
pattern OrderString_ASC :: OrderString
pattern OrderString_DESC :: OrderString
instance Network.AWS.Data.XML.ToXML Network.AWS.Discovery.Types.OrderString.OrderString
instance Network.AWS.Data.XML.FromXML Network.AWS.Discovery.Types.OrderString.OrderString
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Discovery.Types.OrderString.OrderString
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Discovery.Types.OrderString.OrderString
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Discovery.Types.OrderString.OrderString
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Discovery.Types.OrderString.OrderString
instance Network.AWS.Data.Query.ToQuery Network.AWS.Discovery.Types.OrderString.OrderString
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Discovery.Types.OrderString.OrderString
instance Network.AWS.Data.Log.ToLog Network.AWS.Discovery.Types.OrderString.OrderString
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Discovery.Types.OrderString.OrderString
instance Network.AWS.Data.Text.ToText Network.AWS.Discovery.Types.OrderString.OrderString
instance Network.AWS.Data.Text.FromText Network.AWS.Discovery.Types.OrderString.OrderString
instance Control.DeepSeq.NFData Network.AWS.Discovery.Types.OrderString.OrderString
instance Data.Hashable.Class.Hashable Network.AWS.Discovery.Types.OrderString.OrderString
instance GHC.Generics.Generic Network.AWS.Discovery.Types.OrderString.OrderString
instance GHC.Classes.Ord Network.AWS.Discovery.Types.OrderString.OrderString
instance GHC.Classes.Eq Network.AWS.Discovery.Types.OrderString.OrderString
instance GHC.Read.Read Network.AWS.Discovery.Types.OrderString.OrderString
instance GHC.Show.Show Network.AWS.Discovery.Types.OrderString.OrderString


module Network.AWS.Discovery.Types.OrderByElement

-- | A field and direction for ordered output.
--   
--   <i>See:</i> <a>newOrderByElement</a> smart constructor.
data OrderByElement
OrderByElement' :: Maybe OrderString -> Text -> OrderByElement

-- | Ordering direction.
[$sel:sortOrder:OrderByElement'] :: OrderByElement -> Maybe OrderString

-- | The field on which to order.
[$sel:fieldName:OrderByElement'] :: OrderByElement -> Text

-- | Create a value of <a>OrderByElement</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sortOrder:OrderByElement'</a>, <a>orderByElement_sortOrder</a>
--   - Ordering direction.
--   
--   <a>$sel:fieldName:OrderByElement'</a>, <a>orderByElement_fieldName</a>
--   - The field on which to order.
newOrderByElement :: Text -> OrderByElement

-- | Ordering direction.
orderByElement_sortOrder :: Lens' OrderByElement (Maybe OrderString)

-- | The field on which to order.
orderByElement_fieldName :: Lens' OrderByElement Text
instance GHC.Generics.Generic Network.AWS.Discovery.Types.OrderByElement.OrderByElement
instance GHC.Show.Show Network.AWS.Discovery.Types.OrderByElement.OrderByElement
instance GHC.Read.Read Network.AWS.Discovery.Types.OrderByElement.OrderByElement
instance GHC.Classes.Eq Network.AWS.Discovery.Types.OrderByElement.OrderByElement
instance Data.Hashable.Class.Hashable Network.AWS.Discovery.Types.OrderByElement.OrderByElement
instance Control.DeepSeq.NFData Network.AWS.Discovery.Types.OrderByElement.OrderByElement
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Discovery.Types.OrderByElement.OrderByElement


module Network.AWS.Discovery.Types.Tag

-- | Metadata that help you categorize IT assets.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | The type of tag on which to filter.
[$sel:key:Tag'] :: Tag -> Text

-- | A value for a tag key on which to filter.
[$sel:value:Tag'] :: Tag -> Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The type of tag on which to
--   filter.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - A value for a tag key on
--   which to filter.
newTag :: Text -> Text -> Tag

-- | The type of tag on which to filter.
tag_key :: Lens' Tag Text

-- | A value for a tag key on which to filter.
tag_value :: Lens' Tag Text
instance GHC.Generics.Generic Network.AWS.Discovery.Types.Tag.Tag
instance GHC.Show.Show Network.AWS.Discovery.Types.Tag.Tag
instance GHC.Read.Read Network.AWS.Discovery.Types.Tag.Tag
instance GHC.Classes.Eq Network.AWS.Discovery.Types.Tag.Tag
instance Data.Hashable.Class.Hashable Network.AWS.Discovery.Types.Tag.Tag
instance Control.DeepSeq.NFData Network.AWS.Discovery.Types.Tag.Tag
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Discovery.Types.Tag.Tag


module Network.AWS.Discovery.Types.TagFilter

-- | The tag filter. Valid names are: <tt>tagKey</tt>, <tt>tagValue</tt>,
--   <tt>configurationId</tt>.
--   
--   <i>See:</i> <a>newTagFilter</a> smart constructor.
data TagFilter
TagFilter' :: Text -> [Text] -> TagFilter

-- | A name of the tag filter.
[$sel:name:TagFilter'] :: TagFilter -> Text

-- | Values for the tag filter.
[$sel:values:TagFilter'] :: TagFilter -> [Text]

-- | Create a value of <a>TagFilter</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:TagFilter'</a>, <a>tagFilter_name</a> - A name of the tag
--   filter.
--   
--   <a>$sel:values:TagFilter'</a>, <a>tagFilter_values</a> - Values for
--   the tag filter.
newTagFilter :: Text -> TagFilter

-- | A name of the tag filter.
tagFilter_name :: Lens' TagFilter Text

-- | Values for the tag filter.
tagFilter_values :: Lens' TagFilter [Text]
instance GHC.Generics.Generic Network.AWS.Discovery.Types.TagFilter.TagFilter
instance GHC.Show.Show Network.AWS.Discovery.Types.TagFilter.TagFilter
instance GHC.Read.Read Network.AWS.Discovery.Types.TagFilter.TagFilter
instance GHC.Classes.Eq Network.AWS.Discovery.Types.TagFilter.TagFilter
instance Data.Hashable.Class.Hashable Network.AWS.Discovery.Types.TagFilter.TagFilter
instance Control.DeepSeq.NFData Network.AWS.Discovery.Types.TagFilter.TagFilter
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Discovery.Types.TagFilter.TagFilter


module Network.AWS.Discovery.Types

-- | API version <tt>2015-11-01</tt> of the Amazon Application Discovery
--   Service SDK configuration.
defaultService :: Service

-- | The AWS user account does not have permission to perform the action.
--   Check the IAM policy associated with this account.
_AuthorizationErrorException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The home region is not set. Set the home region to continue.
_HomeRegionNotSetException :: AsError a => Getting (First ServiceError) a ServiceError

-- | One or more parameters are not valid. Verify the parameters and try
--   again.
_InvalidParameterException :: AsError a => Getting (First ServiceError) a ServiceError

_ConflictErrorException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The value of one or more parameters are either invalid or out of
--   range. Verify the parameter values and try again.
_InvalidParameterValueException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The server experienced an internal error. Try again.
_ServerInternalErrorException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This operation is not permitted.
_OperationNotPermittedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified configuration ID was not located. Verify the
--   configuration ID and try again.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This issue occurs when the same <tt>clientRequestToken</tt> is used
--   with the <tt>StartImportTask</tt> action, but with different
--   parameters. For example, you use the same request token but have two
--   different import URLs, you can encounter this issue. If the import
--   tasks are meant to be different, use a different
--   <tt>clientRequestToken</tt>, and try again.
_ResourceInUseException :: AsError a => Getting (First ServiceError) a ServiceError
newtype AgentStatus
AgentStatus' :: Text -> AgentStatus
[fromAgentStatus] :: AgentStatus -> Text
pattern AgentStatus_BLACKLISTED :: AgentStatus
pattern AgentStatus_HEALTHY :: AgentStatus
pattern AgentStatus_RUNNING :: AgentStatus
pattern AgentStatus_SHUTDOWN :: AgentStatus
pattern AgentStatus_UNHEALTHY :: AgentStatus
pattern AgentStatus_UNKNOWN :: AgentStatus
newtype BatchDeleteImportDataErrorCode
BatchDeleteImportDataErrorCode' :: Text -> BatchDeleteImportDataErrorCode
[fromBatchDeleteImportDataErrorCode] :: BatchDeleteImportDataErrorCode -> Text
pattern BatchDeleteImportDataErrorCode_INTERNAL_SERVER_ERROR :: BatchDeleteImportDataErrorCode
pattern BatchDeleteImportDataErrorCode_NOT_FOUND :: BatchDeleteImportDataErrorCode
pattern BatchDeleteImportDataErrorCode_OVER_LIMIT :: BatchDeleteImportDataErrorCode
newtype ConfigurationItemType
ConfigurationItemType' :: Text -> ConfigurationItemType
[fromConfigurationItemType] :: ConfigurationItemType -> Text
pattern ConfigurationItemType_APPLICATION :: ConfigurationItemType
pattern ConfigurationItemType_CONNECTION :: ConfigurationItemType
pattern ConfigurationItemType_PROCESS :: ConfigurationItemType
pattern ConfigurationItemType_SERVER :: ConfigurationItemType
newtype ContinuousExportStatus
ContinuousExportStatus' :: Text -> ContinuousExportStatus
[fromContinuousExportStatus] :: ContinuousExportStatus -> Text
pattern ContinuousExportStatus_ACTIVE :: ContinuousExportStatus
pattern ContinuousExportStatus_ERROR :: ContinuousExportStatus
pattern ContinuousExportStatus_INACTIVE :: ContinuousExportStatus
pattern ContinuousExportStatus_START_FAILED :: ContinuousExportStatus
pattern ContinuousExportStatus_START_IN_PROGRESS :: ContinuousExportStatus
pattern ContinuousExportStatus_STOP_FAILED :: ContinuousExportStatus
pattern ContinuousExportStatus_STOP_IN_PROGRESS :: ContinuousExportStatus
newtype DataSource
DataSource' :: Text -> DataSource
[fromDataSource] :: DataSource -> Text
pattern DataSource_AGENT :: DataSource
newtype ExportDataFormat
ExportDataFormat' :: Text -> ExportDataFormat
[fromExportDataFormat] :: ExportDataFormat -> Text
pattern ExportDataFormat_CSV :: ExportDataFormat
pattern ExportDataFormat_GRAPHML :: ExportDataFormat
newtype ExportStatus
ExportStatus' :: Text -> ExportStatus
[fromExportStatus] :: ExportStatus -> Text
pattern ExportStatus_FAILED :: ExportStatus
pattern ExportStatus_IN_PROGRESS :: ExportStatus
pattern ExportStatus_SUCCEEDED :: ExportStatus
newtype ImportStatus
ImportStatus' :: Text -> ImportStatus
[fromImportStatus] :: ImportStatus -> Text
pattern ImportStatus_DELETE_COMPLETE :: ImportStatus
pattern ImportStatus_DELETE_FAILED :: ImportStatus
pattern ImportStatus_DELETE_FAILED_LIMIT_EXCEEDED :: ImportStatus
pattern ImportStatus_DELETE_IN_PROGRESS :: ImportStatus
pattern ImportStatus_IMPORT_COMPLETE :: ImportStatus
pattern ImportStatus_IMPORT_COMPLETE_WITH_ERRORS :: ImportStatus
pattern ImportStatus_IMPORT_FAILED :: ImportStatus
pattern ImportStatus_IMPORT_FAILED_RECORD_LIMIT_EXCEEDED :: ImportStatus
pattern ImportStatus_IMPORT_FAILED_SERVER_LIMIT_EXCEEDED :: ImportStatus
pattern ImportStatus_IMPORT_IN_PROGRESS :: ImportStatus
pattern ImportStatus_INTERNAL_ERROR :: ImportStatus
newtype ImportTaskFilterName
ImportTaskFilterName' :: Text -> ImportTaskFilterName
[fromImportTaskFilterName] :: ImportTaskFilterName -> Text
pattern ImportTaskFilterName_IMPORT_TASK_ID :: ImportTaskFilterName
pattern ImportTaskFilterName_NAME :: ImportTaskFilterName
pattern ImportTaskFilterName_STATUS :: ImportTaskFilterName
newtype OrderString
OrderString' :: Text -> OrderString
[fromOrderString] :: OrderString -> Text
pattern OrderString_ASC :: OrderString
pattern OrderString_DESC :: OrderString

-- | Information about agents or connectors that were instructed to start
--   collecting data. Information includes the agent/connector ID, a
--   description of the operation, and whether the agent/connector
--   configuration was updated.
--   
--   <i>See:</i> <a>newAgentConfigurationStatus</a> smart constructor.
data AgentConfigurationStatus
AgentConfigurationStatus' :: Maybe Text -> Maybe Bool -> Maybe Text -> AgentConfigurationStatus

-- | The agent/connector ID.
[$sel:agentId:AgentConfigurationStatus'] :: AgentConfigurationStatus -> Maybe Text

-- | Information about the status of the <tt>StartDataCollection</tt> and
--   <tt>StopDataCollection</tt> operations. The system has recorded the
--   data collection operation. The agent/connector receives this command
--   the next time it polls for a new command.
[$sel:operationSucceeded:AgentConfigurationStatus'] :: AgentConfigurationStatus -> Maybe Bool

-- | A description of the operation performed.
[$sel:description:AgentConfigurationStatus'] :: AgentConfigurationStatus -> Maybe Text

-- | Create a value of <a>AgentConfigurationStatus</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:agentId:AgentConfigurationStatus'</a>,
--   <a>agentConfigurationStatus_agentId</a> - The agent/connector ID.
--   
--   <a>$sel:operationSucceeded:AgentConfigurationStatus'</a>,
--   <a>agentConfigurationStatus_operationSucceeded</a> - Information about
--   the status of the <tt>StartDataCollection</tt> and
--   <tt>StopDataCollection</tt> operations. The system has recorded the
--   data collection operation. The agent/connector receives this command
--   the next time it polls for a new command.
--   
--   <a>$sel:description:AgentConfigurationStatus'</a>,
--   <a>agentConfigurationStatus_description</a> - A description of the
--   operation performed.
newAgentConfigurationStatus :: AgentConfigurationStatus

-- | The agent/connector ID.
agentConfigurationStatus_agentId :: Lens' AgentConfigurationStatus (Maybe Text)

-- | Information about the status of the <tt>StartDataCollection</tt> and
--   <tt>StopDataCollection</tt> operations. The system has recorded the
--   data collection operation. The agent/connector receives this command
--   the next time it polls for a new command.
agentConfigurationStatus_operationSucceeded :: Lens' AgentConfigurationStatus (Maybe Bool)

-- | A description of the operation performed.
agentConfigurationStatus_description :: Lens' AgentConfigurationStatus (Maybe Text)

-- | Information about agents or connectors associated with the userâ€™s AWS
--   account. Information includes agent or connector IDs, IP addresses,
--   media access control (MAC) addresses, agent or connector health,
--   hostname where the agent or connector resides, and agent version for
--   each agent.
--   
--   <i>See:</i> <a>newAgentInfo</a> smart constructor.
data AgentInfo
AgentInfo' :: Maybe Text -> Maybe Text -> Maybe [AgentNetworkInfo] -> Maybe Text -> Maybe AgentStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> AgentInfo

-- | The name of the host where the agent or connector resides. The host
--   can be a server or virtual machine.
[$sel:hostName:AgentInfo'] :: AgentInfo -> Maybe Text

-- | Time since agent or connector health was reported.
[$sel:lastHealthPingTime:AgentInfo'] :: AgentInfo -> Maybe Text

-- | Network details about the host where the agent or connector resides.
[$sel:agentNetworkInfoList:AgentInfo'] :: AgentInfo -> Maybe [AgentNetworkInfo]

-- | The ID of the connector.
[$sel:connectorId:AgentInfo'] :: AgentInfo -> Maybe Text

-- | The health of the agent or connector.
[$sel:health:AgentInfo'] :: AgentInfo -> Maybe AgentStatus

-- | The agent or connector ID.
[$sel:agentId:AgentInfo'] :: AgentInfo -> Maybe Text

-- | The agent or connector version.
[$sel:version:AgentInfo'] :: AgentInfo -> Maybe Text

-- | Status of the collection process for an agent or connector.
[$sel:collectionStatus:AgentInfo'] :: AgentInfo -> Maybe Text

-- | Agent's first registration timestamp in UTC.
[$sel:registeredTime:AgentInfo'] :: AgentInfo -> Maybe Text

-- | Type of agent.
[$sel:agentType:AgentInfo'] :: AgentInfo -> Maybe Text

-- | Create a value of <a>AgentInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hostName:AgentInfo'</a>, <a>agentInfo_hostName</a> - The name
--   of the host where the agent or connector resides. The host can be a
--   server or virtual machine.
--   
--   <a>$sel:lastHealthPingTime:AgentInfo'</a>,
--   <a>agentInfo_lastHealthPingTime</a> - Time since agent or connector
--   health was reported.
--   
--   <a>$sel:agentNetworkInfoList:AgentInfo'</a>,
--   <a>agentInfo_agentNetworkInfoList</a> - Network details about the host
--   where the agent or connector resides.
--   
--   <a>$sel:connectorId:AgentInfo'</a>, <a>agentInfo_connectorId</a> - The
--   ID of the connector.
--   
--   <a>$sel:health:AgentInfo'</a>, <a>agentInfo_health</a> - The health of
--   the agent or connector.
--   
--   <a>$sel:agentId:AgentInfo'</a>, <a>agentInfo_agentId</a> - The agent
--   or connector ID.
--   
--   <a>$sel:version:AgentInfo'</a>, <a>agentInfo_version</a> - The agent
--   or connector version.
--   
--   <a>$sel:collectionStatus:AgentInfo'</a>,
--   <a>agentInfo_collectionStatus</a> - Status of the collection process
--   for an agent or connector.
--   
--   <a>$sel:registeredTime:AgentInfo'</a>, <a>agentInfo_registeredTime</a>
--   - Agent's first registration timestamp in UTC.
--   
--   <a>$sel:agentType:AgentInfo'</a>, <a>agentInfo_agentType</a> - Type of
--   agent.
newAgentInfo :: AgentInfo

-- | The name of the host where the agent or connector resides. The host
--   can be a server or virtual machine.
agentInfo_hostName :: Lens' AgentInfo (Maybe Text)

-- | Time since agent or connector health was reported.
agentInfo_lastHealthPingTime :: Lens' AgentInfo (Maybe Text)

-- | Network details about the host where the agent or connector resides.
agentInfo_agentNetworkInfoList :: Lens' AgentInfo (Maybe [AgentNetworkInfo])

-- | The ID of the connector.
agentInfo_connectorId :: Lens' AgentInfo (Maybe Text)

-- | The health of the agent or connector.
agentInfo_health :: Lens' AgentInfo (Maybe AgentStatus)

-- | The agent or connector ID.
agentInfo_agentId :: Lens' AgentInfo (Maybe Text)

-- | The agent or connector version.
agentInfo_version :: Lens' AgentInfo (Maybe Text)

-- | Status of the collection process for an agent or connector.
agentInfo_collectionStatus :: Lens' AgentInfo (Maybe Text)

-- | Agent's first registration timestamp in UTC.
agentInfo_registeredTime :: Lens' AgentInfo (Maybe Text)

-- | Type of agent.
agentInfo_agentType :: Lens' AgentInfo (Maybe Text)

-- | Network details about the host where the agent/connector resides.
--   
--   <i>See:</i> <a>newAgentNetworkInfo</a> smart constructor.
data AgentNetworkInfo
AgentNetworkInfo' :: Maybe Text -> Maybe Text -> AgentNetworkInfo

-- | The IP address for the host where the agent/connector resides.
[$sel:ipAddress:AgentNetworkInfo'] :: AgentNetworkInfo -> Maybe Text

-- | The MAC address for the host where the agent/connector resides.
[$sel:macAddress:AgentNetworkInfo'] :: AgentNetworkInfo -> Maybe Text

-- | Create a value of <a>AgentNetworkInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ipAddress:AgentNetworkInfo'</a>,
--   <a>agentNetworkInfo_ipAddress</a> - The IP address for the host where
--   the agent/connector resides.
--   
--   <a>$sel:macAddress:AgentNetworkInfo'</a>,
--   <a>agentNetworkInfo_macAddress</a> - The MAC address for the host
--   where the agent/connector resides.
newAgentNetworkInfo :: AgentNetworkInfo

-- | The IP address for the host where the agent/connector resides.
agentNetworkInfo_ipAddress :: Lens' AgentNetworkInfo (Maybe Text)

-- | The MAC address for the host where the agent/connector resides.
agentNetworkInfo_macAddress :: Lens' AgentNetworkInfo (Maybe Text)

-- | Error messages returned for each import task that you deleted as a
--   response for this command.
--   
--   <i>See:</i> <a>newBatchDeleteImportDataError</a> smart constructor.
data BatchDeleteImportDataError
BatchDeleteImportDataError' :: Maybe Text -> Maybe BatchDeleteImportDataErrorCode -> Maybe Text -> BatchDeleteImportDataError

-- | The unique import ID associated with the error that occurred.
[$sel:importTaskId:BatchDeleteImportDataError'] :: BatchDeleteImportDataError -> Maybe Text

-- | The type of error that occurred for a specific import task.
[$sel:errorCode:BatchDeleteImportDataError'] :: BatchDeleteImportDataError -> Maybe BatchDeleteImportDataErrorCode

-- | The description of the error that occurred for a specific import task.
[$sel:errorDescription:BatchDeleteImportDataError'] :: BatchDeleteImportDataError -> Maybe Text

-- | Create a value of <a>BatchDeleteImportDataError</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:importTaskId:BatchDeleteImportDataError'</a>,
--   <a>batchDeleteImportDataError_importTaskId</a> - The unique import ID
--   associated with the error that occurred.
--   
--   <a>$sel:errorCode:BatchDeleteImportDataError'</a>,
--   <a>batchDeleteImportDataError_errorCode</a> - The type of error that
--   occurred for a specific import task.
--   
--   <a>$sel:errorDescription:BatchDeleteImportDataError'</a>,
--   <a>batchDeleteImportDataError_errorDescription</a> - The description
--   of the error that occurred for a specific import task.
newBatchDeleteImportDataError :: BatchDeleteImportDataError

-- | The unique import ID associated with the error that occurred.
batchDeleteImportDataError_importTaskId :: Lens' BatchDeleteImportDataError (Maybe Text)

-- | The type of error that occurred for a specific import task.
batchDeleteImportDataError_errorCode :: Lens' BatchDeleteImportDataError (Maybe BatchDeleteImportDataErrorCode)

-- | The description of the error that occurred for a specific import task.
batchDeleteImportDataError_errorDescription :: Lens' BatchDeleteImportDataError (Maybe Text)

-- | Tags for a configuration item. Tags are metadata that help you
--   categorize IT assets.
--   
--   <i>See:</i> <a>newConfigurationTag</a> smart constructor.
data ConfigurationTag
ConfigurationTag' :: Maybe POSIX -> Maybe Text -> Maybe ConfigurationItemType -> Maybe Text -> Maybe Text -> ConfigurationTag

-- | The time the configuration tag was created in Coordinated Universal
--   Time (UTC).
[$sel:timeOfCreation:ConfigurationTag'] :: ConfigurationTag -> Maybe POSIX

-- | The configuration ID for the item to tag. You can specify a list of
--   keys and values.
[$sel:configurationId:ConfigurationTag'] :: ConfigurationTag -> Maybe Text

-- | A type of IT asset to tag.
[$sel:configurationType:ConfigurationTag'] :: ConfigurationTag -> Maybe ConfigurationItemType

-- | A value on which to filter. For example <i>key = serverType</i> and
--   /value = web server/.
[$sel:value:ConfigurationTag'] :: ConfigurationTag -> Maybe Text

-- | A type of tag on which to filter. For example, <i>serverType</i>.
[$sel:key:ConfigurationTag'] :: ConfigurationTag -> Maybe Text

-- | Create a value of <a>ConfigurationTag</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timeOfCreation:ConfigurationTag'</a>,
--   <a>configurationTag_timeOfCreation</a> - The time the configuration
--   tag was created in Coordinated Universal Time (UTC).
--   
--   <a>$sel:configurationId:ConfigurationTag'</a>,
--   <a>configurationTag_configurationId</a> - The configuration ID for the
--   item to tag. You can specify a list of keys and values.
--   
--   <a>$sel:configurationType:ConfigurationTag'</a>,
--   <a>configurationTag_configurationType</a> - A type of IT asset to tag.
--   
--   <a>$sel:value:ConfigurationTag'</a>, <a>configurationTag_value</a> - A
--   value on which to filter. For example <i>key = serverType</i> and
--   /value = web server/.
--   
--   <a>$sel:key:ConfigurationTag'</a>, <a>configurationTag_key</a> - A
--   type of tag on which to filter. For example, <i>serverType</i>.
newConfigurationTag :: ConfigurationTag

-- | The time the configuration tag was created in Coordinated Universal
--   Time (UTC).
configurationTag_timeOfCreation :: Lens' ConfigurationTag (Maybe UTCTime)

-- | The configuration ID for the item to tag. You can specify a list of
--   keys and values.
configurationTag_configurationId :: Lens' ConfigurationTag (Maybe Text)

-- | A type of IT asset to tag.
configurationTag_configurationType :: Lens' ConfigurationTag (Maybe ConfigurationItemType)

-- | A value on which to filter. For example <i>key = serverType</i> and
--   /value = web server/.
configurationTag_value :: Lens' ConfigurationTag (Maybe Text)

-- | A type of tag on which to filter. For example, <i>serverType</i>.
configurationTag_key :: Lens' ConfigurationTag (Maybe Text)

-- | A list of continuous export descriptions.
--   
--   <i>See:</i> <a>newContinuousExportDescription</a> smart constructor.
data ContinuousExportDescription
ContinuousExportDescription' :: Maybe ContinuousExportStatus -> Maybe POSIX -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe POSIX -> Maybe DataSource -> Maybe Text -> Maybe Text -> ContinuousExportDescription

-- | Describes the status of the export. Can be one of the following
--   values:
--   
--   <ul>
--   <li>START_IN_PROGRESS - setting up resources to start continuous
--   export.</li>
--   <li>START_FAILED - an error occurred setting up continuous export. To
--   recover, call start-continuous-export again.</li>
--   <li>ACTIVE - data is being exported to the customer bucket.</li>
--   <li>ERROR - an error occurred during export. To fix the issue, call
--   stop-continuous-export and start-continuous-export.</li>
--   <li>STOP_IN_PROGRESS - stopping the export.</li>
--   <li>STOP_FAILED - an error occurred stopping the export. To recover,
--   call stop-continuous-export again.</li>
--   <li>INACTIVE - the continuous export has been stopped. Data is no
--   longer being exported to the customer bucket.</li>
--   </ul>
[$sel:status:ContinuousExportDescription'] :: ContinuousExportDescription -> Maybe ContinuousExportStatus

-- | The timestamp representing when the continuous export was started.
[$sel:startTime:ContinuousExportDescription'] :: ContinuousExportDescription -> Maybe POSIX

-- | An object which describes how the data is stored.
--   
--   <ul>
--   <li><tt>databaseName</tt> - the name of the Glue database used to
--   store the schema.</li>
--   </ul>
[$sel:schemaStorageConfig:ContinuousExportDescription'] :: ContinuousExportDescription -> Maybe (HashMap Text Text)

-- | Contains information about any errors that have occurred. This data
--   type can have the following values:
--   
--   <ul>
--   <li>ACCESS_DENIED - You donâ€™t have permission to start Data
--   Exploration in Amazon Athena. Contact your AWS administrator for help.
--   For more information, see <a>Setting Up AWS Application Discovery
--   Service</a> in the Application Discovery Service User Guide.</li>
--   <li>DELIVERY_STREAM_LIMIT_FAILURE - You reached the limit for Amazon
--   Kinesis Data Firehose delivery streams. Reduce the number of streams
--   or request a limit increase and try again. For more information, see
--   <a>Kinesis Data Streams Limits</a> in the Amazon Kinesis Data Streams
--   Developer Guide.</li>
--   <li>FIREHOSE_ROLE_MISSING - The Data Exploration feature is in an
--   error state because your IAM User is missing the
--   AWSApplicationDiscoveryServiceFirehose role. Turn on Data Exploration
--   in Amazon Athena and try again. For more information, see <a>Step 3:
--   Provide Application Discovery Service Access to Non-Administrator
--   Users by Attaching Policies</a> in the Application Discovery Service
--   User Guide.</li>
--   <li>FIREHOSE_STREAM_DOES_NOT_EXIST - The Data Exploration feature is
--   in an error state because your IAM User is missing one or more of the
--   Kinesis data delivery streams.</li>
--   <li>INTERNAL_FAILURE - The Data Exploration feature is in an error
--   state because of an internal failure. Try again later. If this problem
--   persists, contact AWS Support.</li>
--   <li>S3_BUCKET_LIMIT_FAILURE - You reached the limit for Amazon S3
--   buckets. Reduce the number of Amazon S3 buckets or request a limit
--   increase and try again. For more information, see <a>Bucket
--   Restrictions and Limitations</a> in the Amazon Simple Storage Service
--   Developer Guide.</li>
--   <li>S3_NOT_SIGNED_UP - Your account is not signed up for the Amazon S3
--   service. You must sign up before you can use Amazon S3. You can sign
--   up at the following URL: <a>https://aws.amazon.com/s3</a>.</li>
--   </ul>
[$sel:statusDetail:ContinuousExportDescription'] :: ContinuousExportDescription -> Maybe Text

-- | The timestamp that represents when this continuous export was stopped.
[$sel:stopTime:ContinuousExportDescription'] :: ContinuousExportDescription -> Maybe POSIX

-- | The type of data collector used to gather this data (currently only
--   offered for AGENT).
[$sel:dataSource:ContinuousExportDescription'] :: ContinuousExportDescription -> Maybe DataSource

-- | The name of the s3 bucket where the export data parquet files are
--   stored.
[$sel:s3Bucket:ContinuousExportDescription'] :: ContinuousExportDescription -> Maybe Text

-- | The unique ID assigned to this export.
[$sel:exportId:ContinuousExportDescription'] :: ContinuousExportDescription -> Maybe Text

-- | Create a value of <a>ContinuousExportDescription</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ContinuousExportDescription'</a>,
--   <a>continuousExportDescription_status</a> - Describes the status of
--   the export. Can be one of the following values:
--   
--   <ul>
--   <li>START_IN_PROGRESS - setting up resources to start continuous
--   export.</li>
--   <li>START_FAILED - an error occurred setting up continuous export. To
--   recover, call start-continuous-export again.</li>
--   <li>ACTIVE - data is being exported to the customer bucket.</li>
--   <li>ERROR - an error occurred during export. To fix the issue, call
--   stop-continuous-export and start-continuous-export.</li>
--   <li>STOP_IN_PROGRESS - stopping the export.</li>
--   <li>STOP_FAILED - an error occurred stopping the export. To recover,
--   call stop-continuous-export again.</li>
--   <li>INACTIVE - the continuous export has been stopped. Data is no
--   longer being exported to the customer bucket.</li>
--   </ul>
--   
--   <a>$sel:startTime:ContinuousExportDescription'</a>,
--   <a>continuousExportDescription_startTime</a> - The timestamp
--   representing when the continuous export was started.
--   
--   <a>$sel:schemaStorageConfig:ContinuousExportDescription'</a>,
--   <a>continuousExportDescription_schemaStorageConfig</a> - An object
--   which describes how the data is stored.
--   
--   <ul>
--   <li><tt>databaseName</tt> - the name of the Glue database used to
--   store the schema.</li>
--   </ul>
--   
--   <a>$sel:statusDetail:ContinuousExportDescription'</a>,
--   <a>continuousExportDescription_statusDetail</a> - Contains information
--   about any errors that have occurred. This data type can have the
--   following values:
--   
--   <ul>
--   <li>ACCESS_DENIED - You donâ€™t have permission to start Data
--   Exploration in Amazon Athena. Contact your AWS administrator for help.
--   For more information, see <a>Setting Up AWS Application Discovery
--   Service</a> in the Application Discovery Service User Guide.</li>
--   <li>DELIVERY_STREAM_LIMIT_FAILURE - You reached the limit for Amazon
--   Kinesis Data Firehose delivery streams. Reduce the number of streams
--   or request a limit increase and try again. For more information, see
--   <a>Kinesis Data Streams Limits</a> in the Amazon Kinesis Data Streams
--   Developer Guide.</li>
--   <li>FIREHOSE_ROLE_MISSING - The Data Exploration feature is in an
--   error state because your IAM User is missing the
--   AWSApplicationDiscoveryServiceFirehose role. Turn on Data Exploration
--   in Amazon Athena and try again. For more information, see <a>Step 3:
--   Provide Application Discovery Service Access to Non-Administrator
--   Users by Attaching Policies</a> in the Application Discovery Service
--   User Guide.</li>
--   <li>FIREHOSE_STREAM_DOES_NOT_EXIST - The Data Exploration feature is
--   in an error state because your IAM User is missing one or more of the
--   Kinesis data delivery streams.</li>
--   <li>INTERNAL_FAILURE - The Data Exploration feature is in an error
--   state because of an internal failure. Try again later. If this problem
--   persists, contact AWS Support.</li>
--   <li>S3_BUCKET_LIMIT_FAILURE - You reached the limit for Amazon S3
--   buckets. Reduce the number of Amazon S3 buckets or request a limit
--   increase and try again. For more information, see <a>Bucket
--   Restrictions and Limitations</a> in the Amazon Simple Storage Service
--   Developer Guide.</li>
--   <li>S3_NOT_SIGNED_UP - Your account is not signed up for the Amazon S3
--   service. You must sign up before you can use Amazon S3. You can sign
--   up at the following URL: <a>https://aws.amazon.com/s3</a>.</li>
--   </ul>
--   
--   <a>$sel:stopTime:ContinuousExportDescription'</a>,
--   <a>continuousExportDescription_stopTime</a> - The timestamp that
--   represents when this continuous export was stopped.
--   
--   <a>$sel:dataSource:ContinuousExportDescription'</a>,
--   <a>continuousExportDescription_dataSource</a> - The type of data
--   collector used to gather this data (currently only offered for AGENT).
--   
--   <a>$sel:s3Bucket:ContinuousExportDescription'</a>,
--   <a>continuousExportDescription_s3Bucket</a> - The name of the s3
--   bucket where the export data parquet files are stored.
--   
--   <a>$sel:exportId:ContinuousExportDescription'</a>,
--   <a>continuousExportDescription_exportId</a> - The unique ID assigned
--   to this export.
newContinuousExportDescription :: ContinuousExportDescription

-- | Describes the status of the export. Can be one of the following
--   values:
--   
--   <ul>
--   <li>START_IN_PROGRESS - setting up resources to start continuous
--   export.</li>
--   <li>START_FAILED - an error occurred setting up continuous export. To
--   recover, call start-continuous-export again.</li>
--   <li>ACTIVE - data is being exported to the customer bucket.</li>
--   <li>ERROR - an error occurred during export. To fix the issue, call
--   stop-continuous-export and start-continuous-export.</li>
--   <li>STOP_IN_PROGRESS - stopping the export.</li>
--   <li>STOP_FAILED - an error occurred stopping the export. To recover,
--   call stop-continuous-export again.</li>
--   <li>INACTIVE - the continuous export has been stopped. Data is no
--   longer being exported to the customer bucket.</li>
--   </ul>
continuousExportDescription_status :: Lens' ContinuousExportDescription (Maybe ContinuousExportStatus)

-- | The timestamp representing when the continuous export was started.
continuousExportDescription_startTime :: Lens' ContinuousExportDescription (Maybe UTCTime)

-- | An object which describes how the data is stored.
--   
--   <ul>
--   <li><tt>databaseName</tt> - the name of the Glue database used to
--   store the schema.</li>
--   </ul>
continuousExportDescription_schemaStorageConfig :: Lens' ContinuousExportDescription (Maybe (HashMap Text Text))

-- | Contains information about any errors that have occurred. This data
--   type can have the following values:
--   
--   <ul>
--   <li>ACCESS_DENIED - You donâ€™t have permission to start Data
--   Exploration in Amazon Athena. Contact your AWS administrator for help.
--   For more information, see <a>Setting Up AWS Application Discovery
--   Service</a> in the Application Discovery Service User Guide.</li>
--   <li>DELIVERY_STREAM_LIMIT_FAILURE - You reached the limit for Amazon
--   Kinesis Data Firehose delivery streams. Reduce the number of streams
--   or request a limit increase and try again. For more information, see
--   <a>Kinesis Data Streams Limits</a> in the Amazon Kinesis Data Streams
--   Developer Guide.</li>
--   <li>FIREHOSE_ROLE_MISSING - The Data Exploration feature is in an
--   error state because your IAM User is missing the
--   AWSApplicationDiscoveryServiceFirehose role. Turn on Data Exploration
--   in Amazon Athena and try again. For more information, see <a>Step 3:
--   Provide Application Discovery Service Access to Non-Administrator
--   Users by Attaching Policies</a> in the Application Discovery Service
--   User Guide.</li>
--   <li>FIREHOSE_STREAM_DOES_NOT_EXIST - The Data Exploration feature is
--   in an error state because your IAM User is missing one or more of the
--   Kinesis data delivery streams.</li>
--   <li>INTERNAL_FAILURE - The Data Exploration feature is in an error
--   state because of an internal failure. Try again later. If this problem
--   persists, contact AWS Support.</li>
--   <li>S3_BUCKET_LIMIT_FAILURE - You reached the limit for Amazon S3
--   buckets. Reduce the number of Amazon S3 buckets or request a limit
--   increase and try again. For more information, see <a>Bucket
--   Restrictions and Limitations</a> in the Amazon Simple Storage Service
--   Developer Guide.</li>
--   <li>S3_NOT_SIGNED_UP - Your account is not signed up for the Amazon S3
--   service. You must sign up before you can use Amazon S3. You can sign
--   up at the following URL: <a>https://aws.amazon.com/s3</a>.</li>
--   </ul>
continuousExportDescription_statusDetail :: Lens' ContinuousExportDescription (Maybe Text)

-- | The timestamp that represents when this continuous export was stopped.
continuousExportDescription_stopTime :: Lens' ContinuousExportDescription (Maybe UTCTime)

-- | The type of data collector used to gather this data (currently only
--   offered for AGENT).
continuousExportDescription_dataSource :: Lens' ContinuousExportDescription (Maybe DataSource)

-- | The name of the s3 bucket where the export data parquet files are
--   stored.
continuousExportDescription_s3Bucket :: Lens' ContinuousExportDescription (Maybe Text)

-- | The unique ID assigned to this export.
continuousExportDescription_exportId :: Lens' ContinuousExportDescription (Maybe Text)

-- | Inventory data for installed discovery agents.
--   
--   <i>See:</i> <a>newCustomerAgentInfo</a> smart constructor.
data CustomerAgentInfo
CustomerAgentInfo' :: Int -> Int -> Int -> Int -> Int -> Int -> Int -> CustomerAgentInfo

-- | Number of active discovery agents.
[$sel:activeAgents:CustomerAgentInfo'] :: CustomerAgentInfo -> Int

-- | Number of healthy discovery agents
[$sel:healthyAgents:CustomerAgentInfo'] :: CustomerAgentInfo -> Int

-- | Number of blacklisted discovery agents.
[$sel:blackListedAgents:CustomerAgentInfo'] :: CustomerAgentInfo -> Int

-- | Number of discovery agents with status SHUTDOWN.
[$sel:shutdownAgents:CustomerAgentInfo'] :: CustomerAgentInfo -> Int

-- | Number of unhealthy discovery agents.
[$sel:unhealthyAgents:CustomerAgentInfo'] :: CustomerAgentInfo -> Int

-- | Total number of discovery agents.
[$sel:totalAgents:CustomerAgentInfo'] :: CustomerAgentInfo -> Int

-- | Number of unknown discovery agents.
[$sel:unknownAgents:CustomerAgentInfo'] :: CustomerAgentInfo -> Int

-- | Create a value of <a>CustomerAgentInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:activeAgents:CustomerAgentInfo'</a>,
--   <a>customerAgentInfo_activeAgents</a> - Number of active discovery
--   agents.
--   
--   <a>$sel:healthyAgents:CustomerAgentInfo'</a>,
--   <a>customerAgentInfo_healthyAgents</a> - Number of healthy discovery
--   agents
--   
--   <a>$sel:blackListedAgents:CustomerAgentInfo'</a>,
--   <a>customerAgentInfo_blackListedAgents</a> - Number of blacklisted
--   discovery agents.
--   
--   <a>$sel:shutdownAgents:CustomerAgentInfo'</a>,
--   <a>customerAgentInfo_shutdownAgents</a> - Number of discovery agents
--   with status SHUTDOWN.
--   
--   <a>$sel:unhealthyAgents:CustomerAgentInfo'</a>,
--   <a>customerAgentInfo_unhealthyAgents</a> - Number of unhealthy
--   discovery agents.
--   
--   <a>$sel:totalAgents:CustomerAgentInfo'</a>,
--   <a>customerAgentInfo_totalAgents</a> - Total number of discovery
--   agents.
--   
--   <a>$sel:unknownAgents:CustomerAgentInfo'</a>,
--   <a>customerAgentInfo_unknownAgents</a> - Number of unknown discovery
--   agents.
newCustomerAgentInfo :: Int -> Int -> Int -> Int -> Int -> Int -> Int -> CustomerAgentInfo

-- | Number of active discovery agents.
customerAgentInfo_activeAgents :: Lens' CustomerAgentInfo Int

-- | Number of healthy discovery agents
customerAgentInfo_healthyAgents :: Lens' CustomerAgentInfo Int

-- | Number of blacklisted discovery agents.
customerAgentInfo_blackListedAgents :: Lens' CustomerAgentInfo Int

-- | Number of discovery agents with status SHUTDOWN.
customerAgentInfo_shutdownAgents :: Lens' CustomerAgentInfo Int

-- | Number of unhealthy discovery agents.
customerAgentInfo_unhealthyAgents :: Lens' CustomerAgentInfo Int

-- | Total number of discovery agents.
customerAgentInfo_totalAgents :: Lens' CustomerAgentInfo Int

-- | Number of unknown discovery agents.
customerAgentInfo_unknownAgents :: Lens' CustomerAgentInfo Int

-- | Inventory data for installed discovery connectors.
--   
--   <i>See:</i> <a>newCustomerConnectorInfo</a> smart constructor.
data CustomerConnectorInfo
CustomerConnectorInfo' :: Int -> Int -> Int -> Int -> Int -> Int -> Int -> CustomerConnectorInfo

-- | Number of active discovery connectors.
[$sel:activeConnectors:CustomerConnectorInfo'] :: CustomerConnectorInfo -> Int

-- | Number of healthy discovery connectors.
[$sel:healthyConnectors:CustomerConnectorInfo'] :: CustomerConnectorInfo -> Int

-- | Number of blacklisted discovery connectors.
[$sel:blackListedConnectors:CustomerConnectorInfo'] :: CustomerConnectorInfo -> Int

-- | Number of discovery connectors with status SHUTDOWN,
[$sel:shutdownConnectors:CustomerConnectorInfo'] :: CustomerConnectorInfo -> Int

-- | Number of unhealthy discovery connectors.
[$sel:unhealthyConnectors:CustomerConnectorInfo'] :: CustomerConnectorInfo -> Int

-- | Total number of discovery connectors.
[$sel:totalConnectors:CustomerConnectorInfo'] :: CustomerConnectorInfo -> Int

-- | Number of unknown discovery connectors.
[$sel:unknownConnectors:CustomerConnectorInfo'] :: CustomerConnectorInfo -> Int

-- | Create a value of <a>CustomerConnectorInfo</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:activeConnectors:CustomerConnectorInfo'</a>,
--   <a>customerConnectorInfo_activeConnectors</a> - Number of active
--   discovery connectors.
--   
--   <a>$sel:healthyConnectors:CustomerConnectorInfo'</a>,
--   <a>customerConnectorInfo_healthyConnectors</a> - Number of healthy
--   discovery connectors.
--   
--   <a>$sel:blackListedConnectors:CustomerConnectorInfo'</a>,
--   <a>customerConnectorInfo_blackListedConnectors</a> - Number of
--   blacklisted discovery connectors.
--   
--   <a>$sel:shutdownConnectors:CustomerConnectorInfo'</a>,
--   <a>customerConnectorInfo_shutdownConnectors</a> - Number of discovery
--   connectors with status SHUTDOWN,
--   
--   <a>$sel:unhealthyConnectors:CustomerConnectorInfo'</a>,
--   <a>customerConnectorInfo_unhealthyConnectors</a> - Number of unhealthy
--   discovery connectors.
--   
--   <a>$sel:totalConnectors:CustomerConnectorInfo'</a>,
--   <a>customerConnectorInfo_totalConnectors</a> - Total number of
--   discovery connectors.
--   
--   <a>$sel:unknownConnectors:CustomerConnectorInfo'</a>,
--   <a>customerConnectorInfo_unknownConnectors</a> - Number of unknown
--   discovery connectors.
newCustomerConnectorInfo :: Int -> Int -> Int -> Int -> Int -> Int -> Int -> CustomerConnectorInfo

-- | Number of active discovery connectors.
customerConnectorInfo_activeConnectors :: Lens' CustomerConnectorInfo Int

-- | Number of healthy discovery connectors.
customerConnectorInfo_healthyConnectors :: Lens' CustomerConnectorInfo Int

-- | Number of blacklisted discovery connectors.
customerConnectorInfo_blackListedConnectors :: Lens' CustomerConnectorInfo Int

-- | Number of discovery connectors with status SHUTDOWN,
customerConnectorInfo_shutdownConnectors :: Lens' CustomerConnectorInfo Int

-- | Number of unhealthy discovery connectors.
customerConnectorInfo_unhealthyConnectors :: Lens' CustomerConnectorInfo Int

-- | Total number of discovery connectors.
customerConnectorInfo_totalConnectors :: Lens' CustomerConnectorInfo Int

-- | Number of unknown discovery connectors.
customerConnectorInfo_unknownConnectors :: Lens' CustomerConnectorInfo Int

-- | Used to select which agent's data is to be exported. A single agent ID
--   may be selected for export using the <a>StartExportTask</a> action.
--   
--   <i>See:</i> <a>newExportFilter</a> smart constructor.
data ExportFilter
ExportFilter' :: Text -> [Text] -> Text -> ExportFilter

-- | A single <tt>ExportFilter</tt> name. Supported filters:
--   <tt>agentId</tt>.
[$sel:name:ExportFilter'] :: ExportFilter -> Text

-- | A single <tt>agentId</tt> for a Discovery Agent. An <tt>agentId</tt>
--   can be found using the <a>DescribeAgents</a> action. Typically an ADS
--   <tt>agentId</tt> is in the form <tt>o-0123456789abcdef0</tt>.
[$sel:values:ExportFilter'] :: ExportFilter -> [Text]

-- | Supported condition: <tt>EQUALS</tt>
[$sel:condition:ExportFilter'] :: ExportFilter -> Text

-- | Create a value of <a>ExportFilter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:ExportFilter'</a>, <a>exportFilter_name</a> - A single
--   <tt>ExportFilter</tt> name. Supported filters: <tt>agentId</tt>.
--   
--   <a>$sel:values:ExportFilter'</a>, <a>exportFilter_values</a> - A
--   single <tt>agentId</tt> for a Discovery Agent. An <tt>agentId</tt> can
--   be found using the <a>DescribeAgents</a> action. Typically an ADS
--   <tt>agentId</tt> is in the form <tt>o-0123456789abcdef0</tt>.
--   
--   <a>$sel:condition:ExportFilter'</a>, <a>exportFilter_condition</a> -
--   Supported condition: <tt>EQUALS</tt>
newExportFilter :: Text -> Text -> ExportFilter

-- | A single <tt>ExportFilter</tt> name. Supported filters:
--   <tt>agentId</tt>.
exportFilter_name :: Lens' ExportFilter Text

-- | A single <tt>agentId</tt> for a Discovery Agent. An <tt>agentId</tt>
--   can be found using the <a>DescribeAgents</a> action. Typically an ADS
--   <tt>agentId</tt> is in the form <tt>o-0123456789abcdef0</tt>.
exportFilter_values :: Lens' ExportFilter [Text]

-- | Supported condition: <tt>EQUALS</tt>
exportFilter_condition :: Lens' ExportFilter Text

-- | Information regarding the export status of discovered data. The value
--   is an array of objects.
--   
--   <i>See:</i> <a>newExportInfo</a> smart constructor.
data ExportInfo
ExportInfo' :: Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe Bool -> Text -> ExportStatus -> Text -> POSIX -> ExportInfo

-- | A URL for an Amazon S3 bucket where you can review the exported data.
--   The URL is displayed only if the export succeeded.
[$sel:configurationsDownloadUrl:ExportInfo'] :: ExportInfo -> Maybe Text

-- | The value of <tt>startTime</tt> parameter in the
--   <tt>StartExportTask</tt> request. If no <tt>startTime</tt> was
--   requested, this result does not appear in <tt>ExportInfo</tt>.
[$sel:requestedStartTime:ExportInfo'] :: ExportInfo -> Maybe POSIX

-- | The <tt>endTime</tt> used in the <tt>StartExportTask</tt> request. If
--   no <tt>endTime</tt> was requested, this result does not appear in
--   <tt>ExportInfo</tt>.
[$sel:requestedEndTime:ExportInfo'] :: ExportInfo -> Maybe POSIX

-- | If true, the export of agent information exceeded the size limit for a
--   single export and the exported data is incomplete for the requested
--   time range. To address this, select a smaller time range for the
--   export by using <tt>startDate</tt> and <tt>endDate</tt>.
[$sel:isTruncated:ExportInfo'] :: ExportInfo -> Maybe Bool

-- | A unique identifier used to query an export.
[$sel:exportId:ExportInfo'] :: ExportInfo -> Text

-- | The status of the data export job.
[$sel:exportStatus:ExportInfo'] :: ExportInfo -> ExportStatus

-- | A status message provided for API callers.
[$sel:statusMessage:ExportInfo'] :: ExportInfo -> Text

-- | The time that the data export was initiated.
[$sel:exportRequestTime:ExportInfo'] :: ExportInfo -> POSIX

-- | Create a value of <a>ExportInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configurationsDownloadUrl:ExportInfo'</a>,
--   <a>exportInfo_configurationsDownloadUrl</a> - A URL for an Amazon S3
--   bucket where you can review the exported data. The URL is displayed
--   only if the export succeeded.
--   
--   <a>$sel:requestedStartTime:ExportInfo'</a>,
--   <a>exportInfo_requestedStartTime</a> - The value of <tt>startTime</tt>
--   parameter in the <tt>StartExportTask</tt> request. If no
--   <tt>startTime</tt> was requested, this result does not appear in
--   <tt>ExportInfo</tt>.
--   
--   <a>$sel:requestedEndTime:ExportInfo'</a>,
--   <a>exportInfo_requestedEndTime</a> - The <tt>endTime</tt> used in the
--   <tt>StartExportTask</tt> request. If no <tt>endTime</tt> was
--   requested, this result does not appear in <tt>ExportInfo</tt>.
--   
--   <a>$sel:isTruncated:ExportInfo'</a>, <a>exportInfo_isTruncated</a> -
--   If true, the export of agent information exceeded the size limit for a
--   single export and the exported data is incomplete for the requested
--   time range. To address this, select a smaller time range for the
--   export by using <tt>startDate</tt> and <tt>endDate</tt>.
--   
--   <a>$sel:exportId:ExportInfo'</a>, <a>exportInfo_exportId</a> - A
--   unique identifier used to query an export.
--   
--   <a>$sel:exportStatus:ExportInfo'</a>, <a>exportInfo_exportStatus</a> -
--   The status of the data export job.
--   
--   <a>$sel:statusMessage:ExportInfo'</a>, <a>exportInfo_statusMessage</a>
--   - A status message provided for API callers.
--   
--   <a>$sel:exportRequestTime:ExportInfo'</a>,
--   <a>exportInfo_exportRequestTime</a> - The time that the data export
--   was initiated.
newExportInfo :: Text -> ExportStatus -> Text -> UTCTime -> ExportInfo

-- | A URL for an Amazon S3 bucket where you can review the exported data.
--   The URL is displayed only if the export succeeded.
exportInfo_configurationsDownloadUrl :: Lens' ExportInfo (Maybe Text)

-- | The value of <tt>startTime</tt> parameter in the
--   <tt>StartExportTask</tt> request. If no <tt>startTime</tt> was
--   requested, this result does not appear in <tt>ExportInfo</tt>.
exportInfo_requestedStartTime :: Lens' ExportInfo (Maybe UTCTime)

-- | The <tt>endTime</tt> used in the <tt>StartExportTask</tt> request. If
--   no <tt>endTime</tt> was requested, this result does not appear in
--   <tt>ExportInfo</tt>.
exportInfo_requestedEndTime :: Lens' ExportInfo (Maybe UTCTime)

-- | If true, the export of agent information exceeded the size limit for a
--   single export and the exported data is incomplete for the requested
--   time range. To address this, select a smaller time range for the
--   export by using <tt>startDate</tt> and <tt>endDate</tt>.
exportInfo_isTruncated :: Lens' ExportInfo (Maybe Bool)

-- | A unique identifier used to query an export.
exportInfo_exportId :: Lens' ExportInfo Text

-- | The status of the data export job.
exportInfo_exportStatus :: Lens' ExportInfo ExportStatus

-- | A status message provided for API callers.
exportInfo_statusMessage :: Lens' ExportInfo Text

-- | The time that the data export was initiated.
exportInfo_exportRequestTime :: Lens' ExportInfo UTCTime

-- | A filter that can use conditional operators.
--   
--   For more information about filters, see <a>Querying Discovered
--   Configuration Items</a> in the <i>AWS Application Discovery Service
--   User Guide</i>.
--   
--   <i>See:</i> <a>newFilter</a> smart constructor.
data Filter
Filter' :: Text -> [Text] -> Text -> Filter

-- | The name of the filter.
[$sel:name:Filter'] :: Filter -> Text

-- | A string value on which to filter. For example, if you choose the
--   <tt>destinationServer.osVersion</tt> filter name, you could specify
--   <tt>Ubuntu</tt> for the value.
[$sel:values:Filter'] :: Filter -> [Text]

-- | A conditional operator. The following operators are valid: EQUALS,
--   NOT_EQUALS, CONTAINS, NOT_CONTAINS. If you specify multiple filters,
--   the system utilizes all filters as though concatenated by <i>AND</i>.
--   If you specify multiple values for a particular filter, the system
--   differentiates the values using <i>OR</i>. Calling either
--   <i>DescribeConfigurations</i> or <i>ListConfigurations</i> returns
--   attributes of matching configuration items.
[$sel:condition:Filter'] :: Filter -> Text

-- | Create a value of <a>Filter</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:Filter'</a>, <a>filter_name</a> - The name of the filter.
--   
--   <a>$sel:values:Filter'</a>, <a>filter_values</a> - A string value on
--   which to filter. For example, if you choose the
--   <tt>destinationServer.osVersion</tt> filter name, you could specify
--   <tt>Ubuntu</tt> for the value.
--   
--   <a>$sel:condition:Filter'</a>, <a>filter_condition</a> - A conditional
--   operator. The following operators are valid: EQUALS, NOT_EQUALS,
--   CONTAINS, NOT_CONTAINS. If you specify multiple filters, the system
--   utilizes all filters as though concatenated by <i>AND</i>. If you
--   specify multiple values for a particular filter, the system
--   differentiates the values using <i>OR</i>. Calling either
--   <i>DescribeConfigurations</i> or <i>ListConfigurations</i> returns
--   attributes of matching configuration items.
newFilter :: Text -> Text -> Filter

-- | The name of the filter.
filter_name :: Lens' Filter Text

-- | A string value on which to filter. For example, if you choose the
--   <tt>destinationServer.osVersion</tt> filter name, you could specify
--   <tt>Ubuntu</tt> for the value.
filter_values :: Lens' Filter [Text]

-- | A conditional operator. The following operators are valid: EQUALS,
--   NOT_EQUALS, CONTAINS, NOT_CONTAINS. If you specify multiple filters,
--   the system utilizes all filters as though concatenated by <i>AND</i>.
--   If you specify multiple values for a particular filter, the system
--   differentiates the values using <i>OR</i>. Calling either
--   <i>DescribeConfigurations</i> or <i>ListConfigurations</i> returns
--   attributes of matching configuration items.
filter_condition :: Lens' Filter Text

-- | An array of information related to the import task request that
--   includes status information, times, IDs, the Amazon S3 Object URL for
--   the import file, and more.
--   
--   <i>See:</i> <a>newImportTask</a> smart constructor.
data ImportTask
ImportTask' :: Maybe Int -> Maybe ImportStatus -> Maybe Int -> Maybe POSIX -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe POSIX -> ImportTask

-- | The total number of application records in the import file that were
--   successfully imported.
[$sel:applicationImportSuccess:ImportTask'] :: ImportTask -> Maybe Int

-- | The status of the import task. An import can have the status of
--   <tt>IMPORT_COMPLETE</tt> and still have some records fail to import
--   from the overall request. More information can be found in the
--   downloadable archive defined in the <tt>errorsAndFailedEntriesZip</tt>
--   field, or in the Migration Hub management console.
[$sel:status:ImportTask'] :: ImportTask -> Maybe ImportStatus

-- | The total number of server records in the import file that were
--   successfully imported.
[$sel:serverImportSuccess:ImportTask'] :: ImportTask -> Maybe Int

-- | The time that the import task request finished, presented in the Unix
--   time stamp format.
[$sel:importCompletionTime:ImportTask'] :: ImportTask -> Maybe POSIX

-- | A descriptive name for an import task. You can use this name to filter
--   future requests related to this import task, such as identifying
--   applications and servers that were included in this import task. We
--   recommend that you use a meaningful name for each import task.
[$sel:name:ImportTask'] :: ImportTask -> Maybe Text

-- | The total number of application records in the import file that failed
--   to be imported.
[$sel:applicationImportFailure:ImportTask'] :: ImportTask -> Maybe Int

-- | A link to a compressed archive folder (in the ZIP format) that
--   contains an error log and a file of failed records. You can use these
--   two files to quickly identify records that failed, why they failed,
--   and correct those records. Afterward, you can upload the corrected
--   file to your Amazon S3 bucket and create another import task request.
--   
--   This field also includes authorization information so you can confirm
--   the authenticity of the compressed archive before you download it.
--   
--   If some records failed to be imported we recommend that you correct
--   the records in the failed entries file and then imports that failed
--   entries file. This prevents you from having to correct and update the
--   larger original file and attempt importing it again.
[$sel:errorsAndFailedEntriesZip:ImportTask'] :: ImportTask -> Maybe Text

-- | The unique ID for a specific import task. These IDs aren't globally
--   unique, but they are unique within an AWS account.
[$sel:importTaskId:ImportTask'] :: ImportTask -> Maybe Text

-- | The time that the import task request was deleted, presented in the
--   Unix time stamp format.
[$sel:importDeletedTime:ImportTask'] :: ImportTask -> Maybe POSIX

-- | The total number of server records in the import file that failed to
--   be imported.
[$sel:serverImportFailure:ImportTask'] :: ImportTask -> Maybe Int

-- | A unique token used to prevent the same import request from occurring
--   more than once. If you didn't provide a token, a token was
--   automatically generated when the import task request was sent.
[$sel:clientRequestToken:ImportTask'] :: ImportTask -> Maybe Text

-- | The URL for your import file that you've uploaded to Amazon S3.
[$sel:importUrl:ImportTask'] :: ImportTask -> Maybe Text

-- | The time that the import task request was made, presented in the Unix
--   time stamp format.
[$sel:importRequestTime:ImportTask'] :: ImportTask -> Maybe POSIX

-- | Create a value of <a>ImportTask</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationImportSuccess:ImportTask'</a>,
--   <a>importTask_applicationImportSuccess</a> - The total number of
--   application records in the import file that were successfully
--   imported.
--   
--   <a>$sel:status:ImportTask'</a>, <a>importTask_status</a> - The status
--   of the import task. An import can have the status of
--   <tt>IMPORT_COMPLETE</tt> and still have some records fail to import
--   from the overall request. More information can be found in the
--   downloadable archive defined in the <tt>errorsAndFailedEntriesZip</tt>
--   field, or in the Migration Hub management console.
--   
--   <a>$sel:serverImportSuccess:ImportTask'</a>,
--   <a>importTask_serverImportSuccess</a> - The total number of server
--   records in the import file that were successfully imported.
--   
--   <a>$sel:importCompletionTime:ImportTask'</a>,
--   <a>importTask_importCompletionTime</a> - The time that the import task
--   request finished, presented in the Unix time stamp format.
--   
--   <a>$sel:name:ImportTask'</a>, <a>importTask_name</a> - A descriptive
--   name for an import task. You can use this name to filter future
--   requests related to this import task, such as identifying applications
--   and servers that were included in this import task. We recommend that
--   you use a meaningful name for each import task.
--   
--   <a>$sel:applicationImportFailure:ImportTask'</a>,
--   <a>importTask_applicationImportFailure</a> - The total number of
--   application records in the import file that failed to be imported.
--   
--   <a>$sel:errorsAndFailedEntriesZip:ImportTask'</a>,
--   <a>importTask_errorsAndFailedEntriesZip</a> - A link to a compressed
--   archive folder (in the ZIP format) that contains an error log and a
--   file of failed records. You can use these two files to quickly
--   identify records that failed, why they failed, and correct those
--   records. Afterward, you can upload the corrected file to your Amazon
--   S3 bucket and create another import task request.
--   
--   This field also includes authorization information so you can confirm
--   the authenticity of the compressed archive before you download it.
--   
--   If some records failed to be imported we recommend that you correct
--   the records in the failed entries file and then imports that failed
--   entries file. This prevents you from having to correct and update the
--   larger original file and attempt importing it again.
--   
--   <a>$sel:importTaskId:ImportTask'</a>, <a>importTask_importTaskId</a> -
--   The unique ID for a specific import task. These IDs aren't globally
--   unique, but they are unique within an AWS account.
--   
--   <a>$sel:importDeletedTime:ImportTask'</a>,
--   <a>importTask_importDeletedTime</a> - The time that the import task
--   request was deleted, presented in the Unix time stamp format.
--   
--   <a>$sel:serverImportFailure:ImportTask'</a>,
--   <a>importTask_serverImportFailure</a> - The total number of server
--   records in the import file that failed to be imported.
--   
--   <a>$sel:clientRequestToken:ImportTask'</a>,
--   <a>importTask_clientRequestToken</a> - A unique token used to prevent
--   the same import request from occurring more than once. If you didn't
--   provide a token, a token was automatically generated when the import
--   task request was sent.
--   
--   <a>$sel:importUrl:ImportTask'</a>, <a>importTask_importUrl</a> - The
--   URL for your import file that you've uploaded to Amazon S3.
--   
--   <a>$sel:importRequestTime:ImportTask'</a>,
--   <a>importTask_importRequestTime</a> - The time that the import task
--   request was made, presented in the Unix time stamp format.
newImportTask :: ImportTask

-- | The total number of application records in the import file that were
--   successfully imported.
importTask_applicationImportSuccess :: Lens' ImportTask (Maybe Int)

-- | The status of the import task. An import can have the status of
--   <tt>IMPORT_COMPLETE</tt> and still have some records fail to import
--   from the overall request. More information can be found in the
--   downloadable archive defined in the <tt>errorsAndFailedEntriesZip</tt>
--   field, or in the Migration Hub management console.
importTask_status :: Lens' ImportTask (Maybe ImportStatus)

-- | The total number of server records in the import file that were
--   successfully imported.
importTask_serverImportSuccess :: Lens' ImportTask (Maybe Int)

-- | The time that the import task request finished, presented in the Unix
--   time stamp format.
importTask_importCompletionTime :: Lens' ImportTask (Maybe UTCTime)

-- | A descriptive name for an import task. You can use this name to filter
--   future requests related to this import task, such as identifying
--   applications and servers that were included in this import task. We
--   recommend that you use a meaningful name for each import task.
importTask_name :: Lens' ImportTask (Maybe Text)

-- | The total number of application records in the import file that failed
--   to be imported.
importTask_applicationImportFailure :: Lens' ImportTask (Maybe Int)

-- | A link to a compressed archive folder (in the ZIP format) that
--   contains an error log and a file of failed records. You can use these
--   two files to quickly identify records that failed, why they failed,
--   and correct those records. Afterward, you can upload the corrected
--   file to your Amazon S3 bucket and create another import task request.
--   
--   This field also includes authorization information so you can confirm
--   the authenticity of the compressed archive before you download it.
--   
--   If some records failed to be imported we recommend that you correct
--   the records in the failed entries file and then imports that failed
--   entries file. This prevents you from having to correct and update the
--   larger original file and attempt importing it again.
importTask_errorsAndFailedEntriesZip :: Lens' ImportTask (Maybe Text)

-- | The unique ID for a specific import task. These IDs aren't globally
--   unique, but they are unique within an AWS account.
importTask_importTaskId :: Lens' ImportTask (Maybe Text)

-- | The time that the import task request was deleted, presented in the
--   Unix time stamp format.
importTask_importDeletedTime :: Lens' ImportTask (Maybe UTCTime)

-- | The total number of server records in the import file that failed to
--   be imported.
importTask_serverImportFailure :: Lens' ImportTask (Maybe Int)

-- | A unique token used to prevent the same import request from occurring
--   more than once. If you didn't provide a token, a token was
--   automatically generated when the import task request was sent.
importTask_clientRequestToken :: Lens' ImportTask (Maybe Text)

-- | The URL for your import file that you've uploaded to Amazon S3.
importTask_importUrl :: Lens' ImportTask (Maybe Text)

-- | The time that the import task request was made, presented in the Unix
--   time stamp format.
importTask_importRequestTime :: Lens' ImportTask (Maybe UTCTime)

-- | A name-values pair of elements you can use to filter the results when
--   querying your import tasks. Currently, wildcards are not supported for
--   filters.
--   
--   When filtering by import status, all other filter values are ignored.
--   
--   <i>See:</i> <a>newImportTaskFilter</a> smart constructor.
data ImportTaskFilter
ImportTaskFilter' :: Maybe (NonEmpty Text) -> Maybe ImportTaskFilterName -> ImportTaskFilter

-- | An array of strings that you can provide to match against a specific
--   name, status, or import task ID to filter the results for your import
--   task queries.
[$sel:values:ImportTaskFilter'] :: ImportTaskFilter -> Maybe (NonEmpty Text)

-- | The name, status, or import task ID for a specific import task.
[$sel:name:ImportTaskFilter'] :: ImportTaskFilter -> Maybe ImportTaskFilterName

-- | Create a value of <a>ImportTaskFilter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:values:ImportTaskFilter'</a>, <a>importTaskFilter_values</a> -
--   An array of strings that you can provide to match against a specific
--   name, status, or import task ID to filter the results for your import
--   task queries.
--   
--   <a>$sel:name:ImportTaskFilter'</a>, <a>importTaskFilter_name</a> - The
--   name, status, or import task ID for a specific import task.
newImportTaskFilter :: ImportTaskFilter

-- | An array of strings that you can provide to match against a specific
--   name, status, or import task ID to filter the results for your import
--   task queries.
importTaskFilter_values :: Lens' ImportTaskFilter (Maybe (NonEmpty Text))

-- | The name, status, or import task ID for a specific import task.
importTaskFilter_name :: Lens' ImportTaskFilter (Maybe ImportTaskFilterName)

-- | Details about neighboring servers.
--   
--   <i>See:</i> <a>newNeighborConnectionDetail</a> smart constructor.
data NeighborConnectionDetail
NeighborConnectionDetail' :: Maybe Text -> Maybe Int -> Text -> Text -> Integer -> NeighborConnectionDetail

-- | The network protocol used for the connection.
[$sel:transportProtocol:NeighborConnectionDetail'] :: NeighborConnectionDetail -> Maybe Text

-- | The destination network port for the connection.
[$sel:destinationPort:NeighborConnectionDetail'] :: NeighborConnectionDetail -> Maybe Int

-- | The ID of the server that opened the network connection.
[$sel:sourceServerId:NeighborConnectionDetail'] :: NeighborConnectionDetail -> Text

-- | The ID of the server that accepted the network connection.
[$sel:destinationServerId:NeighborConnectionDetail'] :: NeighborConnectionDetail -> Text

-- | The number of open network connections with the neighboring server.
[$sel:connectionsCount:NeighborConnectionDetail'] :: NeighborConnectionDetail -> Integer

-- | Create a value of <a>NeighborConnectionDetail</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:transportProtocol:NeighborConnectionDetail'</a>,
--   <a>neighborConnectionDetail_transportProtocol</a> - The network
--   protocol used for the connection.
--   
--   <a>$sel:destinationPort:NeighborConnectionDetail'</a>,
--   <a>neighborConnectionDetail_destinationPort</a> - The destination
--   network port for the connection.
--   
--   <a>$sel:sourceServerId:NeighborConnectionDetail'</a>,
--   <a>neighborConnectionDetail_sourceServerId</a> - The ID of the server
--   that opened the network connection.
--   
--   <a>$sel:destinationServerId:NeighborConnectionDetail'</a>,
--   <a>neighborConnectionDetail_destinationServerId</a> - The ID of the
--   server that accepted the network connection.
--   
--   <a>$sel:connectionsCount:NeighborConnectionDetail'</a>,
--   <a>neighborConnectionDetail_connectionsCount</a> - The number of open
--   network connections with the neighboring server.
newNeighborConnectionDetail :: Text -> Text -> Integer -> NeighborConnectionDetail

-- | The network protocol used for the connection.
neighborConnectionDetail_transportProtocol :: Lens' NeighborConnectionDetail (Maybe Text)

-- | The destination network port for the connection.
neighborConnectionDetail_destinationPort :: Lens' NeighborConnectionDetail (Maybe Int)

-- | The ID of the server that opened the network connection.
neighborConnectionDetail_sourceServerId :: Lens' NeighborConnectionDetail Text

-- | The ID of the server that accepted the network connection.
neighborConnectionDetail_destinationServerId :: Lens' NeighborConnectionDetail Text

-- | The number of open network connections with the neighboring server.
neighborConnectionDetail_connectionsCount :: Lens' NeighborConnectionDetail Integer

-- | A field and direction for ordered output.
--   
--   <i>See:</i> <a>newOrderByElement</a> smart constructor.
data OrderByElement
OrderByElement' :: Maybe OrderString -> Text -> OrderByElement

-- | Ordering direction.
[$sel:sortOrder:OrderByElement'] :: OrderByElement -> Maybe OrderString

-- | The field on which to order.
[$sel:fieldName:OrderByElement'] :: OrderByElement -> Text

-- | Create a value of <a>OrderByElement</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sortOrder:OrderByElement'</a>, <a>orderByElement_sortOrder</a>
--   - Ordering direction.
--   
--   <a>$sel:fieldName:OrderByElement'</a>, <a>orderByElement_fieldName</a>
--   - The field on which to order.
newOrderByElement :: Text -> OrderByElement

-- | Ordering direction.
orderByElement_sortOrder :: Lens' OrderByElement (Maybe OrderString)

-- | The field on which to order.
orderByElement_fieldName :: Lens' OrderByElement Text

-- | Metadata that help you categorize IT assets.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | The type of tag on which to filter.
[$sel:key:Tag'] :: Tag -> Text

-- | A value for a tag key on which to filter.
[$sel:value:Tag'] :: Tag -> Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The type of tag on which to
--   filter.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - A value for a tag key on
--   which to filter.
newTag :: Text -> Text -> Tag

-- | The type of tag on which to filter.
tag_key :: Lens' Tag Text

-- | A value for a tag key on which to filter.
tag_value :: Lens' Tag Text

-- | The tag filter. Valid names are: <tt>tagKey</tt>, <tt>tagValue</tt>,
--   <tt>configurationId</tt>.
--   
--   <i>See:</i> <a>newTagFilter</a> smart constructor.
data TagFilter
TagFilter' :: Text -> [Text] -> TagFilter

-- | A name of the tag filter.
[$sel:name:TagFilter'] :: TagFilter -> Text

-- | Values for the tag filter.
[$sel:values:TagFilter'] :: TagFilter -> [Text]

-- | Create a value of <a>TagFilter</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:TagFilter'</a>, <a>tagFilter_name</a> - A name of the tag
--   filter.
--   
--   <a>$sel:values:TagFilter'</a>, <a>tagFilter_values</a> - Values for
--   the tag filter.
newTagFilter :: Text -> TagFilter

-- | A name of the tag filter.
tagFilter_name :: Lens' TagFilter Text

-- | Values for the tag filter.
tagFilter_values :: Lens' TagFilter [Text]


-- | Instructs the specified agents or connectors to stop collecting data.
module Network.AWS.Discovery.StopDataCollectionByAgentIds

-- | <i>See:</i> <a>newStopDataCollectionByAgentIds</a> smart constructor.
data StopDataCollectionByAgentIds
StopDataCollectionByAgentIds' :: [Text] -> StopDataCollectionByAgentIds

-- | The IDs of the agents or connectors from which to stop collecting
--   data.
[$sel:agentIds:StopDataCollectionByAgentIds'] :: StopDataCollectionByAgentIds -> [Text]

-- | Create a value of <a>StopDataCollectionByAgentIds</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:agentIds:StopDataCollectionByAgentIds'</a>,
--   <a>stopDataCollectionByAgentIds_agentIds</a> - The IDs of the agents
--   or connectors from which to stop collecting data.
newStopDataCollectionByAgentIds :: StopDataCollectionByAgentIds

-- | The IDs of the agents or connectors from which to stop collecting
--   data.
stopDataCollectionByAgentIds_agentIds :: Lens' StopDataCollectionByAgentIds [Text]

-- | <i>See:</i> <a>newStopDataCollectionByAgentIdsResponse</a> smart
--   constructor.
data StopDataCollectionByAgentIdsResponse
StopDataCollectionByAgentIdsResponse' :: Maybe [AgentConfigurationStatus] -> Int -> StopDataCollectionByAgentIdsResponse

-- | Information about the agents or connector that were instructed to stop
--   collecting data. Information includes the agent/connector ID, a
--   description of the operation performed, and whether the
--   agent/connector configuration was updated.
[$sel:agentsConfigurationStatus:StopDataCollectionByAgentIdsResponse'] :: StopDataCollectionByAgentIdsResponse -> Maybe [AgentConfigurationStatus]

-- | The response's http status code.
[$sel:httpStatus:StopDataCollectionByAgentIdsResponse'] :: StopDataCollectionByAgentIdsResponse -> Int

-- | Create a value of <a>StopDataCollectionByAgentIdsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:agentsConfigurationStatus:StopDataCollectionByAgentIdsResponse'</a>,
--   <a>stopDataCollectionByAgentIdsResponse_agentsConfigurationStatus</a>
--   - Information about the agents or connector that were instructed to
--   stop collecting data. Information includes the agent/connector ID, a
--   description of the operation performed, and whether the
--   agent/connector configuration was updated.
--   
--   <a>$sel:httpStatus:StopDataCollectionByAgentIdsResponse'</a>,
--   <a>stopDataCollectionByAgentIdsResponse_httpStatus</a> - The
--   response's http status code.
newStopDataCollectionByAgentIdsResponse :: Int -> StopDataCollectionByAgentIdsResponse

-- | Information about the agents or connector that were instructed to stop
--   collecting data. Information includes the agent/connector ID, a
--   description of the operation performed, and whether the
--   agent/connector configuration was updated.
stopDataCollectionByAgentIdsResponse_agentsConfigurationStatus :: Lens' StopDataCollectionByAgentIdsResponse (Maybe [AgentConfigurationStatus])

-- | The response's http status code.
stopDataCollectionByAgentIdsResponse_httpStatus :: Lens' StopDataCollectionByAgentIdsResponse Int
instance GHC.Generics.Generic Network.AWS.Discovery.StopDataCollectionByAgentIds.StopDataCollectionByAgentIds
instance GHC.Show.Show Network.AWS.Discovery.StopDataCollectionByAgentIds.StopDataCollectionByAgentIds
instance GHC.Read.Read Network.AWS.Discovery.StopDataCollectionByAgentIds.StopDataCollectionByAgentIds
instance GHC.Classes.Eq Network.AWS.Discovery.StopDataCollectionByAgentIds.StopDataCollectionByAgentIds
instance GHC.Generics.Generic Network.AWS.Discovery.StopDataCollectionByAgentIds.StopDataCollectionByAgentIdsResponse
instance GHC.Show.Show Network.AWS.Discovery.StopDataCollectionByAgentIds.StopDataCollectionByAgentIdsResponse
instance GHC.Read.Read Network.AWS.Discovery.StopDataCollectionByAgentIds.StopDataCollectionByAgentIdsResponse
instance GHC.Classes.Eq Network.AWS.Discovery.StopDataCollectionByAgentIds.StopDataCollectionByAgentIdsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Discovery.StopDataCollectionByAgentIds.StopDataCollectionByAgentIds
instance Control.DeepSeq.NFData Network.AWS.Discovery.StopDataCollectionByAgentIds.StopDataCollectionByAgentIdsResponse
instance Data.Hashable.Class.Hashable Network.AWS.Discovery.StopDataCollectionByAgentIds.StopDataCollectionByAgentIds
instance Control.DeepSeq.NFData Network.AWS.Discovery.StopDataCollectionByAgentIds.StopDataCollectionByAgentIds
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Discovery.StopDataCollectionByAgentIds.StopDataCollectionByAgentIds
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Discovery.StopDataCollectionByAgentIds.StopDataCollectionByAgentIds
instance Network.AWS.Data.Path.ToPath Network.AWS.Discovery.StopDataCollectionByAgentIds.StopDataCollectionByAgentIds
instance Network.AWS.Data.Query.ToQuery Network.AWS.Discovery.StopDataCollectionByAgentIds.StopDataCollectionByAgentIds


-- | Stop the continuous flow of agent's discovered data into Amazon
--   Athena.
module Network.AWS.Discovery.StopContinuousExport

-- | <i>See:</i> <a>newStopContinuousExport</a> smart constructor.
data StopContinuousExport
StopContinuousExport' :: Text -> StopContinuousExport

-- | The unique ID assigned to this export.
[$sel:exportId:StopContinuousExport'] :: StopContinuousExport -> Text

-- | Create a value of <a>StopContinuousExport</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:exportId:StopContinuousExport'</a>,
--   <a>stopContinuousExport_exportId</a> - The unique ID assigned to this
--   export.
newStopContinuousExport :: Text -> StopContinuousExport

-- | The unique ID assigned to this export.
stopContinuousExport_exportId :: Lens' StopContinuousExport Text

-- | <i>See:</i> <a>newStopContinuousExportResponse</a> smart constructor.
data StopContinuousExportResponse
StopContinuousExportResponse' :: Maybe POSIX -> Maybe POSIX -> Int -> StopContinuousExportResponse

-- | Timestamp that represents when this continuous export started
--   collecting data.
[$sel:startTime:StopContinuousExportResponse'] :: StopContinuousExportResponse -> Maybe POSIX

-- | Timestamp that represents when this continuous export was stopped.
[$sel:stopTime:StopContinuousExportResponse'] :: StopContinuousExportResponse -> Maybe POSIX

-- | The response's http status code.
[$sel:httpStatus:StopContinuousExportResponse'] :: StopContinuousExportResponse -> Int

-- | Create a value of <a>StopContinuousExportResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:startTime:StopContinuousExportResponse'</a>,
--   <a>stopContinuousExportResponse_startTime</a> - Timestamp that
--   represents when this continuous export started collecting data.
--   
--   <a>$sel:stopTime:StopContinuousExportResponse'</a>,
--   <a>stopContinuousExportResponse_stopTime</a> - Timestamp that
--   represents when this continuous export was stopped.
--   
--   <a>$sel:httpStatus:StopContinuousExportResponse'</a>,
--   <a>stopContinuousExportResponse_httpStatus</a> - The response's http
--   status code.
newStopContinuousExportResponse :: Int -> StopContinuousExportResponse

-- | Timestamp that represents when this continuous export started
--   collecting data.
stopContinuousExportResponse_startTime :: Lens' StopContinuousExportResponse (Maybe UTCTime)

-- | Timestamp that represents when this continuous export was stopped.
stopContinuousExportResponse_stopTime :: Lens' StopContinuousExportResponse (Maybe UTCTime)

-- | The response's http status code.
stopContinuousExportResponse_httpStatus :: Lens' StopContinuousExportResponse Int
instance GHC.Generics.Generic Network.AWS.Discovery.StopContinuousExport.StopContinuousExport
instance GHC.Show.Show Network.AWS.Discovery.StopContinuousExport.StopContinuousExport
instance GHC.Read.Read Network.AWS.Discovery.StopContinuousExport.StopContinuousExport
instance GHC.Classes.Eq Network.AWS.Discovery.StopContinuousExport.StopContinuousExport
instance GHC.Generics.Generic Network.AWS.Discovery.StopContinuousExport.StopContinuousExportResponse
instance GHC.Show.Show Network.AWS.Discovery.StopContinuousExport.StopContinuousExportResponse
instance GHC.Read.Read Network.AWS.Discovery.StopContinuousExport.StopContinuousExportResponse
instance GHC.Classes.Eq Network.AWS.Discovery.StopContinuousExport.StopContinuousExportResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Discovery.StopContinuousExport.StopContinuousExport
instance Control.DeepSeq.NFData Network.AWS.Discovery.StopContinuousExport.StopContinuousExportResponse
instance Data.Hashable.Class.Hashable Network.AWS.Discovery.StopContinuousExport.StopContinuousExport
instance Control.DeepSeq.NFData Network.AWS.Discovery.StopContinuousExport.StopContinuousExport
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Discovery.StopContinuousExport.StopContinuousExport
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Discovery.StopContinuousExport.StopContinuousExport
instance Network.AWS.Data.Path.ToPath Network.AWS.Discovery.StopContinuousExport.StopContinuousExport
instance Network.AWS.Data.Query.ToQuery Network.AWS.Discovery.StopContinuousExport.StopContinuousExport


-- | Starts an import task, which allows you to import details of your
--   on-premises environment directly into AWS Migration Hub without having
--   to use the Application Discovery Service (ADS) tools such as the
--   Discovery Connector or Discovery Agent. This gives you the option to
--   perform migration assessment and planning directly from your imported
--   data, including the ability to group your devices as applications and
--   track their migration status.
--   
--   To start an import request, do this:
--   
--   <ol>
--   <li>Download the specially formatted comma separated value (CSV)
--   import template, which you can find here:
--   <a>https://s3-us-west-2.amazonaws.com/templates-7cffcf56-bd96-4b1c-b45b-a5b42f282e46/import_template.csv</a>.</li>
--   <li>Fill out the template with your server and application data.</li>
--   <li>Upload your import file to an Amazon S3 bucket, and make a note of
--   it's Object URL. Your import file must be in the CSV format.</li>
--   <li>Use the console or the <tt>StartImportTask</tt> command with the
--   AWS CLI or one of the AWS SDKs to import the records from your
--   file.</li>
--   </ol>
--   
--   For more information, including step-by-step procedures, see
--   <a>Migration Hub Import</a> in the <i>AWS Application Discovery
--   Service User Guide</i>.
--   
--   There are limits to the number of import tasks you can create (and
--   delete) in an AWS account. For more information, see <a>AWS
--   Application Discovery Service Limits</a> in the <i>AWS Application
--   Discovery Service User Guide</i>.
module Network.AWS.Discovery.StartImportTask

-- | <i>See:</i> <a>newStartImportTask</a> smart constructor.
data StartImportTask
StartImportTask' :: Maybe Text -> Text -> Text -> StartImportTask

-- | Optional. A unique token that you can provide to prevent the same
--   import request from occurring more than once. If you don't provide a
--   token, a token is automatically generated.
--   
--   Sending more than one <tt>StartImportTask</tt> request with the same
--   client request token will return information about the original import
--   task with that client request token.
[$sel:clientRequestToken:StartImportTask'] :: StartImportTask -> Maybe Text

-- | A descriptive name for this request. You can use this name to filter
--   future requests related to this import task, such as identifying
--   applications and servers that were included in this import task. We
--   recommend that you use a meaningful name for each import task.
[$sel:name:StartImportTask'] :: StartImportTask -> Text

-- | The URL for your import file that you've uploaded to Amazon S3.
--   
--   If you're using the AWS CLI, this URL is structured as follows:
--   <tt>s3://BucketName/ImportFileName.CSV</tt>
[$sel:importUrl:StartImportTask'] :: StartImportTask -> Text

-- | Create a value of <a>StartImportTask</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientRequestToken:StartImportTask'</a>,
--   <a>startImportTask_clientRequestToken</a> - Optional. A unique token
--   that you can provide to prevent the same import request from occurring
--   more than once. If you don't provide a token, a token is automatically
--   generated.
--   
--   Sending more than one <tt>StartImportTask</tt> request with the same
--   client request token will return information about the original import
--   task with that client request token.
--   
--   <a>$sel:name:StartImportTask'</a>, <a>startImportTask_name</a> - A
--   descriptive name for this request. You can use this name to filter
--   future requests related to this import task, such as identifying
--   applications and servers that were included in this import task. We
--   recommend that you use a meaningful name for each import task.
--   
--   <a>$sel:importUrl:StartImportTask'</a>,
--   <a>startImportTask_importUrl</a> - The URL for your import file that
--   you've uploaded to Amazon S3.
--   
--   If you're using the AWS CLI, this URL is structured as follows:
--   <tt>s3://BucketName/ImportFileName.CSV</tt>
newStartImportTask :: Text -> Text -> StartImportTask

-- | Optional. A unique token that you can provide to prevent the same
--   import request from occurring more than once. If you don't provide a
--   token, a token is automatically generated.
--   
--   Sending more than one <tt>StartImportTask</tt> request with the same
--   client request token will return information about the original import
--   task with that client request token.
startImportTask_clientRequestToken :: Lens' StartImportTask (Maybe Text)

-- | A descriptive name for this request. You can use this name to filter
--   future requests related to this import task, such as identifying
--   applications and servers that were included in this import task. We
--   recommend that you use a meaningful name for each import task.
startImportTask_name :: Lens' StartImportTask Text

-- | The URL for your import file that you've uploaded to Amazon S3.
--   
--   If you're using the AWS CLI, this URL is structured as follows:
--   <tt>s3://BucketName/ImportFileName.CSV</tt>
startImportTask_importUrl :: Lens' StartImportTask Text

-- | <i>See:</i> <a>newStartImportTaskResponse</a> smart constructor.
data StartImportTaskResponse
StartImportTaskResponse' :: Maybe ImportTask -> Int -> StartImportTaskResponse

-- | An array of information related to the import task request including
--   status information, times, IDs, the Amazon S3 Object URL for the
--   import file, and more.
[$sel:task:StartImportTaskResponse'] :: StartImportTaskResponse -> Maybe ImportTask

-- | The response's http status code.
[$sel:httpStatus:StartImportTaskResponse'] :: StartImportTaskResponse -> Int

-- | Create a value of <a>StartImportTaskResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:task:StartImportTaskResponse'</a>,
--   <a>startImportTaskResponse_task</a> - An array of information related
--   to the import task request including status information, times, IDs,
--   the Amazon S3 Object URL for the import file, and more.
--   
--   <a>$sel:httpStatus:StartImportTaskResponse'</a>,
--   <a>startImportTaskResponse_httpStatus</a> - The response's http status
--   code.
newStartImportTaskResponse :: Int -> StartImportTaskResponse

-- | An array of information related to the import task request including
--   status information, times, IDs, the Amazon S3 Object URL for the
--   import file, and more.
startImportTaskResponse_task :: Lens' StartImportTaskResponse (Maybe ImportTask)

-- | The response's http status code.
startImportTaskResponse_httpStatus :: Lens' StartImportTaskResponse Int
instance GHC.Generics.Generic Network.AWS.Discovery.StartImportTask.StartImportTask
instance GHC.Show.Show Network.AWS.Discovery.StartImportTask.StartImportTask
instance GHC.Read.Read Network.AWS.Discovery.StartImportTask.StartImportTask
instance GHC.Classes.Eq Network.AWS.Discovery.StartImportTask.StartImportTask
instance GHC.Generics.Generic Network.AWS.Discovery.StartImportTask.StartImportTaskResponse
instance GHC.Show.Show Network.AWS.Discovery.StartImportTask.StartImportTaskResponse
instance GHC.Read.Read Network.AWS.Discovery.StartImportTask.StartImportTaskResponse
instance GHC.Classes.Eq Network.AWS.Discovery.StartImportTask.StartImportTaskResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Discovery.StartImportTask.StartImportTask
instance Control.DeepSeq.NFData Network.AWS.Discovery.StartImportTask.StartImportTaskResponse
instance Data.Hashable.Class.Hashable Network.AWS.Discovery.StartImportTask.StartImportTask
instance Control.DeepSeq.NFData Network.AWS.Discovery.StartImportTask.StartImportTask
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Discovery.StartImportTask.StartImportTask
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Discovery.StartImportTask.StartImportTask
instance Network.AWS.Data.Path.ToPath Network.AWS.Discovery.StartImportTask.StartImportTask
instance Network.AWS.Data.Query.ToQuery Network.AWS.Discovery.StartImportTask.StartImportTask


-- | Begins the export of discovered data to an S3 bucket.
--   
--   If you specify <tt>agentIds</tt> in a filter, the task exports up to
--   72 hours of detailed data collected by the identified Application
--   Discovery Agent, including network, process, and performance details.
--   A time range for exported agent data may be set by using
--   <tt>startTime</tt> and <tt>endTime</tt>. Export of detailed agent data
--   is limited to five concurrently running exports.
--   
--   If you do not include an <tt>agentIds</tt> filter, summary data is
--   exported that includes both AWS Agentless Discovery Connector data and
--   summary data from AWS Discovery Agents. Export of summary data is
--   limited to two exports per day.
module Network.AWS.Discovery.StartExportTask

-- | <i>See:</i> <a>newStartExportTask</a> smart constructor.
data StartExportTask
StartExportTask' :: Maybe [ExportDataFormat] -> Maybe POSIX -> Maybe [ExportFilter] -> Maybe POSIX -> StartExportTask

-- | The file format for the returned export data. Default value is
--   <tt>CSV</tt>. <b>Note:</b> <i>The</i> <tt>GRAPHML</tt> <i>option has
--   been deprecated.</i>
[$sel:exportDataFormat:StartExportTask'] :: StartExportTask -> Maybe [ExportDataFormat]

-- | The start timestamp for exported data from the single Application
--   Discovery Agent selected in the filters. If no value is specified,
--   data is exported starting from the first data collected by the agent.
[$sel:startTime:StartExportTask'] :: StartExportTask -> Maybe POSIX

-- | If a filter is present, it selects the single <tt>agentId</tt> of the
--   Application Discovery Agent for which data is exported. The
--   <tt>agentId</tt> can be found in the results of the
--   <tt>DescribeAgents</tt> API or CLI. If no filter is present,
--   <tt>startTime</tt> and <tt>endTime</tt> are ignored and exported data
--   includes both Agentless Discovery Connector data and summary data from
--   Application Discovery agents.
[$sel:filters:StartExportTask'] :: StartExportTask -> Maybe [ExportFilter]

-- | The end timestamp for exported data from the single Application
--   Discovery Agent selected in the filters. If no value is specified,
--   exported data includes the most recent data collected by the agent.
[$sel:endTime:StartExportTask'] :: StartExportTask -> Maybe POSIX

-- | Create a value of <a>StartExportTask</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:exportDataFormat:StartExportTask'</a>,
--   <a>startExportTask_exportDataFormat</a> - The file format for the
--   returned export data. Default value is <tt>CSV</tt>. <b>Note:</b>
--   <i>The</i> <tt>GRAPHML</tt> <i>option has been deprecated.</i>
--   
--   <a>$sel:startTime:StartExportTask'</a>,
--   <a>startExportTask_startTime</a> - The start timestamp for exported
--   data from the single Application Discovery Agent selected in the
--   filters. If no value is specified, data is exported starting from the
--   first data collected by the agent.
--   
--   <a>$sel:filters:StartExportTask'</a>, <a>startExportTask_filters</a> -
--   If a filter is present, it selects the single <tt>agentId</tt> of the
--   Application Discovery Agent for which data is exported. The
--   <tt>agentId</tt> can be found in the results of the
--   <tt>DescribeAgents</tt> API or CLI. If no filter is present,
--   <tt>startTime</tt> and <tt>endTime</tt> are ignored and exported data
--   includes both Agentless Discovery Connector data and summary data from
--   Application Discovery agents.
--   
--   <a>$sel:endTime:StartExportTask'</a>, <a>startExportTask_endTime</a> -
--   The end timestamp for exported data from the single Application
--   Discovery Agent selected in the filters. If no value is specified,
--   exported data includes the most recent data collected by the agent.
newStartExportTask :: StartExportTask

-- | The file format for the returned export data. Default value is
--   <tt>CSV</tt>. <b>Note:</b> <i>The</i> <tt>GRAPHML</tt> <i>option has
--   been deprecated.</i>
startExportTask_exportDataFormat :: Lens' StartExportTask (Maybe [ExportDataFormat])

-- | The start timestamp for exported data from the single Application
--   Discovery Agent selected in the filters. If no value is specified,
--   data is exported starting from the first data collected by the agent.
startExportTask_startTime :: Lens' StartExportTask (Maybe UTCTime)

-- | If a filter is present, it selects the single <tt>agentId</tt> of the
--   Application Discovery Agent for which data is exported. The
--   <tt>agentId</tt> can be found in the results of the
--   <tt>DescribeAgents</tt> API or CLI. If no filter is present,
--   <tt>startTime</tt> and <tt>endTime</tt> are ignored and exported data
--   includes both Agentless Discovery Connector data and summary data from
--   Application Discovery agents.
startExportTask_filters :: Lens' StartExportTask (Maybe [ExportFilter])

-- | The end timestamp for exported data from the single Application
--   Discovery Agent selected in the filters. If no value is specified,
--   exported data includes the most recent data collected by the agent.
startExportTask_endTime :: Lens' StartExportTask (Maybe UTCTime)

-- | <i>See:</i> <a>newStartExportTaskResponse</a> smart constructor.
data StartExportTaskResponse
StartExportTaskResponse' :: Maybe Text -> Int -> StartExportTaskResponse

-- | A unique identifier used to query the status of an export request.
[$sel:exportId:StartExportTaskResponse'] :: StartExportTaskResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:StartExportTaskResponse'] :: StartExportTaskResponse -> Int

-- | Create a value of <a>StartExportTaskResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:exportId:StartExportTaskResponse'</a>,
--   <a>startExportTaskResponse_exportId</a> - A unique identifier used to
--   query the status of an export request.
--   
--   <a>$sel:httpStatus:StartExportTaskResponse'</a>,
--   <a>startExportTaskResponse_httpStatus</a> - The response's http status
--   code.
newStartExportTaskResponse :: Int -> StartExportTaskResponse

-- | A unique identifier used to query the status of an export request.
startExportTaskResponse_exportId :: Lens' StartExportTaskResponse (Maybe Text)

-- | The response's http status code.
startExportTaskResponse_httpStatus :: Lens' StartExportTaskResponse Int
instance GHC.Generics.Generic Network.AWS.Discovery.StartExportTask.StartExportTask
instance GHC.Show.Show Network.AWS.Discovery.StartExportTask.StartExportTask
instance GHC.Read.Read Network.AWS.Discovery.StartExportTask.StartExportTask
instance GHC.Classes.Eq Network.AWS.Discovery.StartExportTask.StartExportTask
instance GHC.Generics.Generic Network.AWS.Discovery.StartExportTask.StartExportTaskResponse
instance GHC.Show.Show Network.AWS.Discovery.StartExportTask.StartExportTaskResponse
instance GHC.Read.Read Network.AWS.Discovery.StartExportTask.StartExportTaskResponse
instance GHC.Classes.Eq Network.AWS.Discovery.StartExportTask.StartExportTaskResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Discovery.StartExportTask.StartExportTask
instance Control.DeepSeq.NFData Network.AWS.Discovery.StartExportTask.StartExportTaskResponse
instance Data.Hashable.Class.Hashable Network.AWS.Discovery.StartExportTask.StartExportTask
instance Control.DeepSeq.NFData Network.AWS.Discovery.StartExportTask.StartExportTask
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Discovery.StartExportTask.StartExportTask
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Discovery.StartExportTask.StartExportTask
instance Network.AWS.Data.Path.ToPath Network.AWS.Discovery.StartExportTask.StartExportTask
instance Network.AWS.Data.Query.ToQuery Network.AWS.Discovery.StartExportTask.StartExportTask


-- | Instructs the specified agents or connectors to start collecting data.
module Network.AWS.Discovery.StartDataCollectionByAgentIds

-- | <i>See:</i> <a>newStartDataCollectionByAgentIds</a> smart constructor.
data StartDataCollectionByAgentIds
StartDataCollectionByAgentIds' :: [Text] -> StartDataCollectionByAgentIds

-- | The IDs of the agents or connectors from which to start collecting
--   data. If you send a request to an agent/connector ID that you do not
--   have permission to contact, according to your AWS account, the service
--   does not throw an exception. Instead, it returns the error in the
--   <i>Description</i> field. If you send a request to multiple
--   agents/connectors and you do not have permission to contact some of
--   those agents/connectors, the system does not throw an exception.
--   Instead, the system shows <tt>Failed</tt> in the <i>Description</i>
--   field.
[$sel:agentIds:StartDataCollectionByAgentIds'] :: StartDataCollectionByAgentIds -> [Text]

-- | Create a value of <a>StartDataCollectionByAgentIds</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:agentIds:StartDataCollectionByAgentIds'</a>,
--   <a>startDataCollectionByAgentIds_agentIds</a> - The IDs of the agents
--   or connectors from which to start collecting data. If you send a
--   request to an agent/connector ID that you do not have permission to
--   contact, according to your AWS account, the service does not throw an
--   exception. Instead, it returns the error in the <i>Description</i>
--   field. If you send a request to multiple agents/connectors and you do
--   not have permission to contact some of those agents/connectors, the
--   system does not throw an exception. Instead, the system shows
--   <tt>Failed</tt> in the <i>Description</i> field.
newStartDataCollectionByAgentIds :: StartDataCollectionByAgentIds

-- | The IDs of the agents or connectors from which to start collecting
--   data. If you send a request to an agent/connector ID that you do not
--   have permission to contact, according to your AWS account, the service
--   does not throw an exception. Instead, it returns the error in the
--   <i>Description</i> field. If you send a request to multiple
--   agents/connectors and you do not have permission to contact some of
--   those agents/connectors, the system does not throw an exception.
--   Instead, the system shows <tt>Failed</tt> in the <i>Description</i>
--   field.
startDataCollectionByAgentIds_agentIds :: Lens' StartDataCollectionByAgentIds [Text]

-- | <i>See:</i> <a>newStartDataCollectionByAgentIdsResponse</a> smart
--   constructor.
data StartDataCollectionByAgentIdsResponse
StartDataCollectionByAgentIdsResponse' :: Maybe [AgentConfigurationStatus] -> Int -> StartDataCollectionByAgentIdsResponse

-- | Information about agents or the connector that were instructed to
--   start collecting data. Information includes the agent/connector ID, a
--   description of the operation performed, and whether the
--   agent/connector configuration was updated.
[$sel:agentsConfigurationStatus:StartDataCollectionByAgentIdsResponse'] :: StartDataCollectionByAgentIdsResponse -> Maybe [AgentConfigurationStatus]

-- | The response's http status code.
[$sel:httpStatus:StartDataCollectionByAgentIdsResponse'] :: StartDataCollectionByAgentIdsResponse -> Int

-- | Create a value of <a>StartDataCollectionByAgentIdsResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:agentsConfigurationStatus:StartDataCollectionByAgentIdsResponse'</a>,
--   <a>startDataCollectionByAgentIdsResponse_agentsConfigurationStatus</a>
--   - Information about agents or the connector that were instructed to
--   start collecting data. Information includes the agent/connector ID, a
--   description of the operation performed, and whether the
--   agent/connector configuration was updated.
--   
--   <a>$sel:httpStatus:StartDataCollectionByAgentIdsResponse'</a>,
--   <a>startDataCollectionByAgentIdsResponse_httpStatus</a> - The
--   response's http status code.
newStartDataCollectionByAgentIdsResponse :: Int -> StartDataCollectionByAgentIdsResponse

-- | Information about agents or the connector that were instructed to
--   start collecting data. Information includes the agent/connector ID, a
--   description of the operation performed, and whether the
--   agent/connector configuration was updated.
startDataCollectionByAgentIdsResponse_agentsConfigurationStatus :: Lens' StartDataCollectionByAgentIdsResponse (Maybe [AgentConfigurationStatus])

-- | The response's http status code.
startDataCollectionByAgentIdsResponse_httpStatus :: Lens' StartDataCollectionByAgentIdsResponse Int
instance GHC.Generics.Generic Network.AWS.Discovery.StartDataCollectionByAgentIds.StartDataCollectionByAgentIds
instance GHC.Show.Show Network.AWS.Discovery.StartDataCollectionByAgentIds.StartDataCollectionByAgentIds
instance GHC.Read.Read Network.AWS.Discovery.StartDataCollectionByAgentIds.StartDataCollectionByAgentIds
instance GHC.Classes.Eq Network.AWS.Discovery.StartDataCollectionByAgentIds.StartDataCollectionByAgentIds
instance GHC.Generics.Generic Network.AWS.Discovery.StartDataCollectionByAgentIds.StartDataCollectionByAgentIdsResponse
instance GHC.Show.Show Network.AWS.Discovery.StartDataCollectionByAgentIds.StartDataCollectionByAgentIdsResponse
instance GHC.Read.Read Network.AWS.Discovery.StartDataCollectionByAgentIds.StartDataCollectionByAgentIdsResponse
instance GHC.Classes.Eq Network.AWS.Discovery.StartDataCollectionByAgentIds.StartDataCollectionByAgentIdsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Discovery.StartDataCollectionByAgentIds.StartDataCollectionByAgentIds
instance Control.DeepSeq.NFData Network.AWS.Discovery.StartDataCollectionByAgentIds.StartDataCollectionByAgentIdsResponse
instance Data.Hashable.Class.Hashable Network.AWS.Discovery.StartDataCollectionByAgentIds.StartDataCollectionByAgentIds
instance Control.DeepSeq.NFData Network.AWS.Discovery.StartDataCollectionByAgentIds.StartDataCollectionByAgentIds
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Discovery.StartDataCollectionByAgentIds.StartDataCollectionByAgentIds
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Discovery.StartDataCollectionByAgentIds.StartDataCollectionByAgentIds
instance Network.AWS.Data.Path.ToPath Network.AWS.Discovery.StartDataCollectionByAgentIds.StartDataCollectionByAgentIds
instance Network.AWS.Data.Query.ToQuery Network.AWS.Discovery.StartDataCollectionByAgentIds.StartDataCollectionByAgentIds


-- | Start the continuous flow of agent's discovered data into Amazon
--   Athena.
module Network.AWS.Discovery.StartContinuousExport

-- | <i>See:</i> <a>newStartContinuousExport</a> smart constructor.
data StartContinuousExport
StartContinuousExport' :: StartContinuousExport

-- | Create a value of <a>StartContinuousExport</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newStartContinuousExport :: StartContinuousExport

-- | <i>See:</i> <a>newStartContinuousExportResponse</a> smart constructor.
data StartContinuousExportResponse
StartContinuousExportResponse' :: Maybe POSIX -> Maybe (HashMap Text Text) -> Maybe DataSource -> Maybe Text -> Maybe Text -> Int -> StartContinuousExportResponse

-- | The timestamp representing when the continuous export was started.
[$sel:startTime:StartContinuousExportResponse'] :: StartContinuousExportResponse -> Maybe POSIX

-- | A dictionary which describes how the data is stored.
--   
--   <ul>
--   <li><tt>databaseName</tt> - the name of the Glue database used to
--   store the schema.</li>
--   </ul>
[$sel:schemaStorageConfig:StartContinuousExportResponse'] :: StartContinuousExportResponse -> Maybe (HashMap Text Text)

-- | The type of data collector used to gather this data (currently only
--   offered for AGENT).
[$sel:dataSource:StartContinuousExportResponse'] :: StartContinuousExportResponse -> Maybe DataSource

-- | The name of the s3 bucket where the export data parquet files are
--   stored.
[$sel:s3Bucket:StartContinuousExportResponse'] :: StartContinuousExportResponse -> Maybe Text

-- | The unique ID assigned to this export.
[$sel:exportId:StartContinuousExportResponse'] :: StartContinuousExportResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:StartContinuousExportResponse'] :: StartContinuousExportResponse -> Int

-- | Create a value of <a>StartContinuousExportResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:startTime:StartContinuousExportResponse'</a>,
--   <a>startContinuousExportResponse_startTime</a> - The timestamp
--   representing when the continuous export was started.
--   
--   <a>$sel:schemaStorageConfig:StartContinuousExportResponse'</a>,
--   <a>startContinuousExportResponse_schemaStorageConfig</a> - A
--   dictionary which describes how the data is stored.
--   
--   <ul>
--   <li><tt>databaseName</tt> - the name of the Glue database used to
--   store the schema.</li>
--   </ul>
--   
--   <a>$sel:dataSource:StartContinuousExportResponse'</a>,
--   <a>startContinuousExportResponse_dataSource</a> - The type of data
--   collector used to gather this data (currently only offered for AGENT).
--   
--   <a>$sel:s3Bucket:StartContinuousExportResponse'</a>,
--   <a>startContinuousExportResponse_s3Bucket</a> - The name of the s3
--   bucket where the export data parquet files are stored.
--   
--   <a>$sel:exportId:StartContinuousExportResponse'</a>,
--   <a>startContinuousExportResponse_exportId</a> - The unique ID assigned
--   to this export.
--   
--   <a>$sel:httpStatus:StartContinuousExportResponse'</a>,
--   <a>startContinuousExportResponse_httpStatus</a> - The response's http
--   status code.
newStartContinuousExportResponse :: Int -> StartContinuousExportResponse

-- | The timestamp representing when the continuous export was started.
startContinuousExportResponse_startTime :: Lens' StartContinuousExportResponse (Maybe UTCTime)

-- | A dictionary which describes how the data is stored.
--   
--   <ul>
--   <li><tt>databaseName</tt> - the name of the Glue database used to
--   store the schema.</li>
--   </ul>
startContinuousExportResponse_schemaStorageConfig :: Lens' StartContinuousExportResponse (Maybe (HashMap Text Text))

-- | The type of data collector used to gather this data (currently only
--   offered for AGENT).
startContinuousExportResponse_dataSource :: Lens' StartContinuousExportResponse (Maybe DataSource)

-- | The name of the s3 bucket where the export data parquet files are
--   stored.
startContinuousExportResponse_s3Bucket :: Lens' StartContinuousExportResponse (Maybe Text)

-- | The unique ID assigned to this export.
startContinuousExportResponse_exportId :: Lens' StartContinuousExportResponse (Maybe Text)

-- | The response's http status code.
startContinuousExportResponse_httpStatus :: Lens' StartContinuousExportResponse Int
instance GHC.Generics.Generic Network.AWS.Discovery.StartContinuousExport.StartContinuousExport
instance GHC.Show.Show Network.AWS.Discovery.StartContinuousExport.StartContinuousExport
instance GHC.Read.Read Network.AWS.Discovery.StartContinuousExport.StartContinuousExport
instance GHC.Classes.Eq Network.AWS.Discovery.StartContinuousExport.StartContinuousExport
instance GHC.Generics.Generic Network.AWS.Discovery.StartContinuousExport.StartContinuousExportResponse
instance GHC.Show.Show Network.AWS.Discovery.StartContinuousExport.StartContinuousExportResponse
instance GHC.Read.Read Network.AWS.Discovery.StartContinuousExport.StartContinuousExportResponse
instance GHC.Classes.Eq Network.AWS.Discovery.StartContinuousExport.StartContinuousExportResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Discovery.StartContinuousExport.StartContinuousExport
instance Control.DeepSeq.NFData Network.AWS.Discovery.StartContinuousExport.StartContinuousExportResponse
instance Data.Hashable.Class.Hashable Network.AWS.Discovery.StartContinuousExport.StartContinuousExport
instance Control.DeepSeq.NFData Network.AWS.Discovery.StartContinuousExport.StartContinuousExport
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Discovery.StartContinuousExport.StartContinuousExport
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Discovery.StartContinuousExport.StartContinuousExport
instance Network.AWS.Data.Path.ToPath Network.AWS.Discovery.StartContinuousExport.StartContinuousExport
instance Network.AWS.Data.Query.ToQuery Network.AWS.Discovery.StartContinuousExport.StartContinuousExport


-- | Retrieves a list of servers that are one network hop away from a
--   specified server.
module Network.AWS.Discovery.ListServerNeighbors

-- | <i>See:</i> <a>newListServerNeighbors</a> smart constructor.
data ListServerNeighbors
ListServerNeighbors' :: Maybe Bool -> Maybe [Text] -> Maybe Text -> Maybe Int -> Text -> ListServerNeighbors

-- | Flag to indicate if port and protocol information is needed as part of
--   the response.
[$sel:portInformationNeeded:ListServerNeighbors'] :: ListServerNeighbors -> Maybe Bool

-- | List of configuration IDs to test for one-hop-away.
[$sel:neighborConfigurationIds:ListServerNeighbors'] :: ListServerNeighbors -> Maybe [Text]

-- | Token to retrieve the next set of results. For example, if you
--   previously specified 100 IDs for
--   <tt>ListServerNeighborsRequest$neighborConfigurationIds</tt> but set
--   <tt>ListServerNeighborsRequest$maxResults</tt> to 10, you received a
--   set of 10 results along with a token. Use that token in this query to
--   get the next set of 10.
[$sel:nextToken:ListServerNeighbors'] :: ListServerNeighbors -> Maybe Text

-- | Maximum number of results to return in a single page of output.
[$sel:maxResults:ListServerNeighbors'] :: ListServerNeighbors -> Maybe Int

-- | Configuration ID of the server for which neighbors are being listed.
[$sel:configurationId:ListServerNeighbors'] :: ListServerNeighbors -> Text

-- | Create a value of <a>ListServerNeighbors</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:portInformationNeeded:ListServerNeighbors'</a>,
--   <a>listServerNeighbors_portInformationNeeded</a> - Flag to indicate if
--   port and protocol information is needed as part of the response.
--   
--   <a>$sel:neighborConfigurationIds:ListServerNeighbors'</a>,
--   <a>listServerNeighbors_neighborConfigurationIds</a> - List of
--   configuration IDs to test for one-hop-away.
--   
--   <a>$sel:nextToken:ListServerNeighbors'</a>,
--   <a>listServerNeighbors_nextToken</a> - Token to retrieve the next set
--   of results. For example, if you previously specified 100 IDs for
--   <tt>ListServerNeighborsRequest$neighborConfigurationIds</tt> but set
--   <tt>ListServerNeighborsRequest$maxResults</tt> to 10, you received a
--   set of 10 results along with a token. Use that token in this query to
--   get the next set of 10.
--   
--   <a>$sel:maxResults:ListServerNeighbors'</a>,
--   <a>listServerNeighbors_maxResults</a> - Maximum number of results to
--   return in a single page of output.
--   
--   <a>$sel:configurationId:ListServerNeighbors'</a>,
--   <a>listServerNeighbors_configurationId</a> - Configuration ID of the
--   server for which neighbors are being listed.
newListServerNeighbors :: Text -> ListServerNeighbors

-- | Flag to indicate if port and protocol information is needed as part of
--   the response.
listServerNeighbors_portInformationNeeded :: Lens' ListServerNeighbors (Maybe Bool)

-- | List of configuration IDs to test for one-hop-away.
listServerNeighbors_neighborConfigurationIds :: Lens' ListServerNeighbors (Maybe [Text])

-- | Token to retrieve the next set of results. For example, if you
--   previously specified 100 IDs for
--   <tt>ListServerNeighborsRequest$neighborConfigurationIds</tt> but set
--   <tt>ListServerNeighborsRequest$maxResults</tt> to 10, you received a
--   set of 10 results along with a token. Use that token in this query to
--   get the next set of 10.
listServerNeighbors_nextToken :: Lens' ListServerNeighbors (Maybe Text)

-- | Maximum number of results to return in a single page of output.
listServerNeighbors_maxResults :: Lens' ListServerNeighbors (Maybe Int)

-- | Configuration ID of the server for which neighbors are being listed.
listServerNeighbors_configurationId :: Lens' ListServerNeighbors Text

-- | <i>See:</i> <a>newListServerNeighborsResponse</a> smart constructor.
data ListServerNeighborsResponse
ListServerNeighborsResponse' :: Maybe Text -> Maybe Integer -> Int -> [NeighborConnectionDetail] -> ListServerNeighborsResponse

-- | Token to retrieve the next set of results. For example, if you
--   specified 100 IDs for
--   <tt>ListServerNeighborsRequest$neighborConfigurationIds</tt> but set
--   <tt>ListServerNeighborsRequest$maxResults</tt> to 10, you received a
--   set of 10 results along with this token. Use this token in the next
--   query to retrieve the next set of 10.
[$sel:nextToken:ListServerNeighborsResponse'] :: ListServerNeighborsResponse -> Maybe Text

-- | Count of distinct servers that are one hop away from the given server.
[$sel:knownDependencyCount:ListServerNeighborsResponse'] :: ListServerNeighborsResponse -> Maybe Integer

-- | The response's http status code.
[$sel:httpStatus:ListServerNeighborsResponse'] :: ListServerNeighborsResponse -> Int

-- | List of distinct servers that are one hop away from the given server.
[$sel:neighbors:ListServerNeighborsResponse'] :: ListServerNeighborsResponse -> [NeighborConnectionDetail]

-- | Create a value of <a>ListServerNeighborsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListServerNeighbors'</a>,
--   <a>listServerNeighborsResponse_nextToken</a> - Token to retrieve the
--   next set of results. For example, if you specified 100 IDs for
--   <tt>ListServerNeighborsRequest$neighborConfigurationIds</tt> but set
--   <tt>ListServerNeighborsRequest$maxResults</tt> to 10, you received a
--   set of 10 results along with this token. Use this token in the next
--   query to retrieve the next set of 10.
--   
--   <a>$sel:knownDependencyCount:ListServerNeighborsResponse'</a>,
--   <a>listServerNeighborsResponse_knownDependencyCount</a> - Count of
--   distinct servers that are one hop away from the given server.
--   
--   <a>$sel:httpStatus:ListServerNeighborsResponse'</a>,
--   <a>listServerNeighborsResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:neighbors:ListServerNeighborsResponse'</a>,
--   <a>listServerNeighborsResponse_neighbors</a> - List of distinct
--   servers that are one hop away from the given server.
newListServerNeighborsResponse :: Int -> ListServerNeighborsResponse

-- | Token to retrieve the next set of results. For example, if you
--   specified 100 IDs for
--   <tt>ListServerNeighborsRequest$neighborConfigurationIds</tt> but set
--   <tt>ListServerNeighborsRequest$maxResults</tt> to 10, you received a
--   set of 10 results along with this token. Use this token in the next
--   query to retrieve the next set of 10.
listServerNeighborsResponse_nextToken :: Lens' ListServerNeighborsResponse (Maybe Text)

-- | Count of distinct servers that are one hop away from the given server.
listServerNeighborsResponse_knownDependencyCount :: Lens' ListServerNeighborsResponse (Maybe Integer)

-- | The response's http status code.
listServerNeighborsResponse_httpStatus :: Lens' ListServerNeighborsResponse Int

-- | List of distinct servers that are one hop away from the given server.
listServerNeighborsResponse_neighbors :: Lens' ListServerNeighborsResponse [NeighborConnectionDetail]
instance GHC.Generics.Generic Network.AWS.Discovery.ListServerNeighbors.ListServerNeighbors
instance GHC.Show.Show Network.AWS.Discovery.ListServerNeighbors.ListServerNeighbors
instance GHC.Read.Read Network.AWS.Discovery.ListServerNeighbors.ListServerNeighbors
instance GHC.Classes.Eq Network.AWS.Discovery.ListServerNeighbors.ListServerNeighbors
instance GHC.Generics.Generic Network.AWS.Discovery.ListServerNeighbors.ListServerNeighborsResponse
instance GHC.Show.Show Network.AWS.Discovery.ListServerNeighbors.ListServerNeighborsResponse
instance GHC.Read.Read Network.AWS.Discovery.ListServerNeighbors.ListServerNeighborsResponse
instance GHC.Classes.Eq Network.AWS.Discovery.ListServerNeighbors.ListServerNeighborsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Discovery.ListServerNeighbors.ListServerNeighbors
instance Control.DeepSeq.NFData Network.AWS.Discovery.ListServerNeighbors.ListServerNeighborsResponse
instance Data.Hashable.Class.Hashable Network.AWS.Discovery.ListServerNeighbors.ListServerNeighbors
instance Control.DeepSeq.NFData Network.AWS.Discovery.ListServerNeighbors.ListServerNeighbors
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Discovery.ListServerNeighbors.ListServerNeighbors
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Discovery.ListServerNeighbors.ListServerNeighbors
instance Network.AWS.Data.Path.ToPath Network.AWS.Discovery.ListServerNeighbors.ListServerNeighbors
instance Network.AWS.Data.Query.ToQuery Network.AWS.Discovery.ListServerNeighbors.ListServerNeighbors


-- | Retrieves a list of configuration items as specified by the value
--   passed to the required parameter <tt>configurationType</tt>. Optional
--   filtering may be applied to refine search results.
--   
--   This operation returns paginated results.
module Network.AWS.Discovery.ListConfigurations

-- | <i>See:</i> <a>newListConfigurations</a> smart constructor.
data ListConfigurations
ListConfigurations' :: Maybe [OrderByElement] -> Maybe [Filter] -> Maybe Text -> Maybe Int -> ConfigurationItemType -> ListConfigurations

-- | Certain filter criteria return output that can be sorted in ascending
--   or descending order. For a list of output characteristics for each
--   filter, see <a>Using the ListConfigurations Action</a> in the <i>AWS
--   Application Discovery Service User Guide</i>.
[$sel:orderBy:ListConfigurations'] :: ListConfigurations -> Maybe [OrderByElement]

-- | You can filter the request using various logical operators and a
--   <i>key</i>-<i>value</i> format. For example:
--   
--   <pre>
--   {"key": "serverType", "value": "webServer"}
--   </pre>
--   
--   For a complete list of filter options and guidance about using them
--   with this action, see <a>Using the ListConfigurations Action</a> in
--   the <i>AWS Application Discovery Service User Guide</i>.
[$sel:filters:ListConfigurations'] :: ListConfigurations -> Maybe [Filter]

-- | Token to retrieve the next set of results. For example, if a previous
--   call to ListConfigurations returned 100 items, but you set
--   <tt>ListConfigurationsRequest$maxResults</tt> to 10, you received a
--   set of 10 results along with a token. Use that token in this query to
--   get the next set of 10.
[$sel:nextToken:ListConfigurations'] :: ListConfigurations -> Maybe Text

-- | The total number of items to return. The maximum value is 100.
[$sel:maxResults:ListConfigurations'] :: ListConfigurations -> Maybe Int

-- | A valid configuration identified by Application Discovery Service.
[$sel:configurationType:ListConfigurations'] :: ListConfigurations -> ConfigurationItemType

-- | Create a value of <a>ListConfigurations</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:orderBy:ListConfigurations'</a>,
--   <a>listConfigurations_orderBy</a> - Certain filter criteria return
--   output that can be sorted in ascending or descending order. For a list
--   of output characteristics for each filter, see <a>Using the
--   ListConfigurations Action</a> in the <i>AWS Application Discovery
--   Service User Guide</i>.
--   
--   <a>$sel:filters:ListConfigurations'</a>,
--   <a>listConfigurations_filters</a> - You can filter the request using
--   various logical operators and a <i>key</i>-<i>value</i> format. For
--   example:
--   
--   <pre>
--   {"key": "serverType", "value": "webServer"}
--   </pre>
--   
--   For a complete list of filter options and guidance about using them
--   with this action, see <a>Using the ListConfigurations Action</a> in
--   the <i>AWS Application Discovery Service User Guide</i>.
--   
--   <a>$sel:nextToken:ListConfigurations'</a>,
--   <a>listConfigurations_nextToken</a> - Token to retrieve the next set
--   of results. For example, if a previous call to ListConfigurations
--   returned 100 items, but you set
--   <tt>ListConfigurationsRequest$maxResults</tt> to 10, you received a
--   set of 10 results along with a token. Use that token in this query to
--   get the next set of 10.
--   
--   <a>$sel:maxResults:ListConfigurations'</a>,
--   <a>listConfigurations_maxResults</a> - The total number of items to
--   return. The maximum value is 100.
--   
--   <a>$sel:configurationType:ListConfigurations'</a>,
--   <a>listConfigurations_configurationType</a> - A valid configuration
--   identified by Application Discovery Service.
newListConfigurations :: ConfigurationItemType -> ListConfigurations

-- | Certain filter criteria return output that can be sorted in ascending
--   or descending order. For a list of output characteristics for each
--   filter, see <a>Using the ListConfigurations Action</a> in the <i>AWS
--   Application Discovery Service User Guide</i>.
listConfigurations_orderBy :: Lens' ListConfigurations (Maybe [OrderByElement])

-- | You can filter the request using various logical operators and a
--   <i>key</i>-<i>value</i> format. For example:
--   
--   <pre>
--   {"key": "serverType", "value": "webServer"}
--   </pre>
--   
--   For a complete list of filter options and guidance about using them
--   with this action, see <a>Using the ListConfigurations Action</a> in
--   the <i>AWS Application Discovery Service User Guide</i>.
listConfigurations_filters :: Lens' ListConfigurations (Maybe [Filter])

-- | Token to retrieve the next set of results. For example, if a previous
--   call to ListConfigurations returned 100 items, but you set
--   <tt>ListConfigurationsRequest$maxResults</tt> to 10, you received a
--   set of 10 results along with a token. Use that token in this query to
--   get the next set of 10.
listConfigurations_nextToken :: Lens' ListConfigurations (Maybe Text)

-- | The total number of items to return. The maximum value is 100.
listConfigurations_maxResults :: Lens' ListConfigurations (Maybe Int)

-- | A valid configuration identified by Application Discovery Service.
listConfigurations_configurationType :: Lens' ListConfigurations ConfigurationItemType

-- | <i>See:</i> <a>newListConfigurationsResponse</a> smart constructor.
data ListConfigurationsResponse
ListConfigurationsResponse' :: Maybe [HashMap Text Text] -> Maybe Text -> Int -> ListConfigurationsResponse

-- | Returns configuration details, including the configuration ID,
--   attribute names, and attribute values.
[$sel:configurations:ListConfigurationsResponse'] :: ListConfigurationsResponse -> Maybe [HashMap Text Text]

-- | Token to retrieve the next set of results. For example, if your call
--   to ListConfigurations returned 100 items, but you set
--   <tt>ListConfigurationsRequest$maxResults</tt> to 10, you received a
--   set of 10 results along with this token. Use this token in the next
--   query to retrieve the next set of 10.
[$sel:nextToken:ListConfigurationsResponse'] :: ListConfigurationsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListConfigurationsResponse'] :: ListConfigurationsResponse -> Int

-- | Create a value of <a>ListConfigurationsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configurations:ListConfigurationsResponse'</a>,
--   <a>listConfigurationsResponse_configurations</a> - Returns
--   configuration details, including the configuration ID, attribute
--   names, and attribute values.
--   
--   <a>$sel:nextToken:ListConfigurations'</a>,
--   <a>listConfigurationsResponse_nextToken</a> - Token to retrieve the
--   next set of results. For example, if your call to ListConfigurations
--   returned 100 items, but you set
--   <tt>ListConfigurationsRequest$maxResults</tt> to 10, you received a
--   set of 10 results along with this token. Use this token in the next
--   query to retrieve the next set of 10.
--   
--   <a>$sel:httpStatus:ListConfigurationsResponse'</a>,
--   <a>listConfigurationsResponse_httpStatus</a> - The response's http
--   status code.
newListConfigurationsResponse :: Int -> ListConfigurationsResponse

-- | Returns configuration details, including the configuration ID,
--   attribute names, and attribute values.
listConfigurationsResponse_configurations :: Lens' ListConfigurationsResponse (Maybe [HashMap Text Text])

-- | Token to retrieve the next set of results. For example, if your call
--   to ListConfigurations returned 100 items, but you set
--   <tt>ListConfigurationsRequest$maxResults</tt> to 10, you received a
--   set of 10 results along with this token. Use this token in the next
--   query to retrieve the next set of 10.
listConfigurationsResponse_nextToken :: Lens' ListConfigurationsResponse (Maybe Text)

-- | The response's http status code.
listConfigurationsResponse_httpStatus :: Lens' ListConfigurationsResponse Int
instance GHC.Generics.Generic Network.AWS.Discovery.ListConfigurations.ListConfigurations
instance GHC.Show.Show Network.AWS.Discovery.ListConfigurations.ListConfigurations
instance GHC.Read.Read Network.AWS.Discovery.ListConfigurations.ListConfigurations
instance GHC.Classes.Eq Network.AWS.Discovery.ListConfigurations.ListConfigurations
instance GHC.Generics.Generic Network.AWS.Discovery.ListConfigurations.ListConfigurationsResponse
instance GHC.Show.Show Network.AWS.Discovery.ListConfigurations.ListConfigurationsResponse
instance GHC.Read.Read Network.AWS.Discovery.ListConfigurations.ListConfigurationsResponse
instance GHC.Classes.Eq Network.AWS.Discovery.ListConfigurations.ListConfigurationsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Discovery.ListConfigurations.ListConfigurations
instance Control.DeepSeq.NFData Network.AWS.Discovery.ListConfigurations.ListConfigurationsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Discovery.ListConfigurations.ListConfigurations
instance Data.Hashable.Class.Hashable Network.AWS.Discovery.ListConfigurations.ListConfigurations
instance Control.DeepSeq.NFData Network.AWS.Discovery.ListConfigurations.ListConfigurations
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Discovery.ListConfigurations.ListConfigurations
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Discovery.ListConfigurations.ListConfigurations
instance Network.AWS.Data.Path.ToPath Network.AWS.Discovery.ListConfigurations.ListConfigurations
instance Network.AWS.Data.Query.ToQuery Network.AWS.Discovery.ListConfigurations.ListConfigurations


-- | Retrieves a short summary of discovered assets.
--   
--   This API operation takes no request parameters and is called as is at
--   the command prompt as shown in the example.
module Network.AWS.Discovery.GetDiscoverySummary

-- | <i>See:</i> <a>newGetDiscoverySummary</a> smart constructor.
data GetDiscoverySummary
GetDiscoverySummary' :: GetDiscoverySummary

-- | Create a value of <a>GetDiscoverySummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newGetDiscoverySummary :: GetDiscoverySummary

-- | <i>See:</i> <a>newGetDiscoverySummaryResponse</a> smart constructor.
data GetDiscoverySummaryResponse
GetDiscoverySummaryResponse' :: Maybe Integer -> Maybe Integer -> Maybe Integer -> Maybe CustomerConnectorInfo -> Maybe CustomerAgentInfo -> Maybe Integer -> Int -> GetDiscoverySummaryResponse

-- | The number of servers discovered.
[$sel:servers:GetDiscoverySummaryResponse'] :: GetDiscoverySummaryResponse -> Maybe Integer

-- | The number of servers mapped to tags.
[$sel:serversMappedtoTags:GetDiscoverySummaryResponse'] :: GetDiscoverySummaryResponse -> Maybe Integer

-- | The number of servers mapped to applications.
[$sel:serversMappedToApplications:GetDiscoverySummaryResponse'] :: GetDiscoverySummaryResponse -> Maybe Integer

-- | Details about discovered connectors, including connector status and
--   health.
[$sel:connectorSummary:GetDiscoverySummaryResponse'] :: GetDiscoverySummaryResponse -> Maybe CustomerConnectorInfo

-- | Details about discovered agents, including agent status and health.
[$sel:agentSummary:GetDiscoverySummaryResponse'] :: GetDiscoverySummaryResponse -> Maybe CustomerAgentInfo

-- | The number of applications discovered.
[$sel:applications:GetDiscoverySummaryResponse'] :: GetDiscoverySummaryResponse -> Maybe Integer

-- | The response's http status code.
[$sel:httpStatus:GetDiscoverySummaryResponse'] :: GetDiscoverySummaryResponse -> Int

-- | Create a value of <a>GetDiscoverySummaryResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:servers:GetDiscoverySummaryResponse'</a>,
--   <a>getDiscoverySummaryResponse_servers</a> - The number of servers
--   discovered.
--   
--   <a>$sel:serversMappedtoTags:GetDiscoverySummaryResponse'</a>,
--   <a>getDiscoverySummaryResponse_serversMappedtoTags</a> - The number of
--   servers mapped to tags.
--   
--   <a>$sel:serversMappedToApplications:GetDiscoverySummaryResponse'</a>,
--   <a>getDiscoverySummaryResponse_serversMappedToApplications</a> - The
--   number of servers mapped to applications.
--   
--   <a>$sel:connectorSummary:GetDiscoverySummaryResponse'</a>,
--   <a>getDiscoverySummaryResponse_connectorSummary</a> - Details about
--   discovered connectors, including connector status and health.
--   
--   <a>$sel:agentSummary:GetDiscoverySummaryResponse'</a>,
--   <a>getDiscoverySummaryResponse_agentSummary</a> - Details about
--   discovered agents, including agent status and health.
--   
--   <a>$sel:applications:GetDiscoverySummaryResponse'</a>,
--   <a>getDiscoverySummaryResponse_applications</a> - The number of
--   applications discovered.
--   
--   <a>$sel:httpStatus:GetDiscoverySummaryResponse'</a>,
--   <a>getDiscoverySummaryResponse_httpStatus</a> - The response's http
--   status code.
newGetDiscoverySummaryResponse :: Int -> GetDiscoverySummaryResponse

-- | The number of servers discovered.
getDiscoverySummaryResponse_servers :: Lens' GetDiscoverySummaryResponse (Maybe Integer)

-- | The number of servers mapped to tags.
getDiscoverySummaryResponse_serversMappedtoTags :: Lens' GetDiscoverySummaryResponse (Maybe Integer)

-- | The number of servers mapped to applications.
getDiscoverySummaryResponse_serversMappedToApplications :: Lens' GetDiscoverySummaryResponse (Maybe Integer)

-- | Details about discovered connectors, including connector status and
--   health.
getDiscoverySummaryResponse_connectorSummary :: Lens' GetDiscoverySummaryResponse (Maybe CustomerConnectorInfo)

-- | Details about discovered agents, including agent status and health.
getDiscoverySummaryResponse_agentSummary :: Lens' GetDiscoverySummaryResponse (Maybe CustomerAgentInfo)

-- | The number of applications discovered.
getDiscoverySummaryResponse_applications :: Lens' GetDiscoverySummaryResponse (Maybe Integer)

-- | The response's http status code.
getDiscoverySummaryResponse_httpStatus :: Lens' GetDiscoverySummaryResponse Int
instance GHC.Generics.Generic Network.AWS.Discovery.GetDiscoverySummary.GetDiscoverySummary
instance GHC.Show.Show Network.AWS.Discovery.GetDiscoverySummary.GetDiscoverySummary
instance GHC.Read.Read Network.AWS.Discovery.GetDiscoverySummary.GetDiscoverySummary
instance GHC.Classes.Eq Network.AWS.Discovery.GetDiscoverySummary.GetDiscoverySummary
instance GHC.Generics.Generic Network.AWS.Discovery.GetDiscoverySummary.GetDiscoverySummaryResponse
instance GHC.Show.Show Network.AWS.Discovery.GetDiscoverySummary.GetDiscoverySummaryResponse
instance GHC.Read.Read Network.AWS.Discovery.GetDiscoverySummary.GetDiscoverySummaryResponse
instance GHC.Classes.Eq Network.AWS.Discovery.GetDiscoverySummary.GetDiscoverySummaryResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Discovery.GetDiscoverySummary.GetDiscoverySummary
instance Control.DeepSeq.NFData Network.AWS.Discovery.GetDiscoverySummary.GetDiscoverySummaryResponse
instance Data.Hashable.Class.Hashable Network.AWS.Discovery.GetDiscoverySummary.GetDiscoverySummary
instance Control.DeepSeq.NFData Network.AWS.Discovery.GetDiscoverySummary.GetDiscoverySummary
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Discovery.GetDiscoverySummary.GetDiscoverySummary
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Discovery.GetDiscoverySummary.GetDiscoverySummary
instance Network.AWS.Data.Path.ToPath Network.AWS.Discovery.GetDiscoverySummary.GetDiscoverySummary
instance Network.AWS.Data.Query.ToQuery Network.AWS.Discovery.GetDiscoverySummary.GetDiscoverySummary


-- | Disassociates one or more configuration items from an application.
module Network.AWS.Discovery.DisassociateConfigurationItemsFromApplication

-- | <i>See:</i> <a>newDisassociateConfigurationItemsFromApplication</a>
--   smart constructor.
data DisassociateConfigurationItemsFromApplication
DisassociateConfigurationItemsFromApplication' :: Text -> [Text] -> DisassociateConfigurationItemsFromApplication

-- | Configuration ID of an application from which each item is
--   disassociated.
[$sel:applicationConfigurationId:DisassociateConfigurationItemsFromApplication'] :: DisassociateConfigurationItemsFromApplication -> Text

-- | Configuration ID of each item to be disassociated from an application.
[$sel:configurationIds:DisassociateConfigurationItemsFromApplication'] :: DisassociateConfigurationItemsFromApplication -> [Text]

-- | Create a value of <a>DisassociateConfigurationItemsFromApplication</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:applicationConfigurationId:DisassociateConfigurationItemsFromApplication'</a>,
--   <a>disassociateConfigurationItemsFromApplication_applicationConfigurationId</a>
--   - Configuration ID of an application from which each item is
--   disassociated.
--   
--   
--   <a>$sel:configurationIds:DisassociateConfigurationItemsFromApplication'</a>,
--   <a>disassociateConfigurationItemsFromApplication_configurationIds</a>
--   - Configuration ID of each item to be disassociated from an
--   application.
newDisassociateConfigurationItemsFromApplication :: Text -> DisassociateConfigurationItemsFromApplication

-- | Configuration ID of an application from which each item is
--   disassociated.
disassociateConfigurationItemsFromApplication_applicationConfigurationId :: Lens' DisassociateConfigurationItemsFromApplication Text

-- | Configuration ID of each item to be disassociated from an application.
disassociateConfigurationItemsFromApplication_configurationIds :: Lens' DisassociateConfigurationItemsFromApplication [Text]

-- | <i>See:</i>
--   <a>newDisassociateConfigurationItemsFromApplicationResponse</a> smart
--   constructor.
data DisassociateConfigurationItemsFromApplicationResponse
DisassociateConfigurationItemsFromApplicationResponse' :: Int -> DisassociateConfigurationItemsFromApplicationResponse

-- | The response's http status code.
[$sel:httpStatus:DisassociateConfigurationItemsFromApplicationResponse'] :: DisassociateConfigurationItemsFromApplicationResponse -> Int

-- | Create a value of
--   <a>DisassociateConfigurationItemsFromApplicationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:httpStatus:DisassociateConfigurationItemsFromApplicationResponse'</a>,
--   <a>disassociateConfigurationItemsFromApplicationResponse_httpStatus</a>
--   - The response's http status code.
newDisassociateConfigurationItemsFromApplicationResponse :: Int -> DisassociateConfigurationItemsFromApplicationResponse

-- | The response's http status code.
disassociateConfigurationItemsFromApplicationResponse_httpStatus :: Lens' DisassociateConfigurationItemsFromApplicationResponse Int
instance GHC.Generics.Generic Network.AWS.Discovery.DisassociateConfigurationItemsFromApplication.DisassociateConfigurationItemsFromApplication
instance GHC.Show.Show Network.AWS.Discovery.DisassociateConfigurationItemsFromApplication.DisassociateConfigurationItemsFromApplication
instance GHC.Read.Read Network.AWS.Discovery.DisassociateConfigurationItemsFromApplication.DisassociateConfigurationItemsFromApplication
instance GHC.Classes.Eq Network.AWS.Discovery.DisassociateConfigurationItemsFromApplication.DisassociateConfigurationItemsFromApplication
instance GHC.Generics.Generic Network.AWS.Discovery.DisassociateConfigurationItemsFromApplication.DisassociateConfigurationItemsFromApplicationResponse
instance GHC.Show.Show Network.AWS.Discovery.DisassociateConfigurationItemsFromApplication.DisassociateConfigurationItemsFromApplicationResponse
instance GHC.Read.Read Network.AWS.Discovery.DisassociateConfigurationItemsFromApplication.DisassociateConfigurationItemsFromApplicationResponse
instance GHC.Classes.Eq Network.AWS.Discovery.DisassociateConfigurationItemsFromApplication.DisassociateConfigurationItemsFromApplicationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Discovery.DisassociateConfigurationItemsFromApplication.DisassociateConfigurationItemsFromApplication
instance Control.DeepSeq.NFData Network.AWS.Discovery.DisassociateConfigurationItemsFromApplication.DisassociateConfigurationItemsFromApplicationResponse
instance Data.Hashable.Class.Hashable Network.AWS.Discovery.DisassociateConfigurationItemsFromApplication.DisassociateConfigurationItemsFromApplication
instance Control.DeepSeq.NFData Network.AWS.Discovery.DisassociateConfigurationItemsFromApplication.DisassociateConfigurationItemsFromApplication
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Discovery.DisassociateConfigurationItemsFromApplication.DisassociateConfigurationItemsFromApplication
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Discovery.DisassociateConfigurationItemsFromApplication.DisassociateConfigurationItemsFromApplication
instance Network.AWS.Data.Path.ToPath Network.AWS.Discovery.DisassociateConfigurationItemsFromApplication.DisassociateConfigurationItemsFromApplication
instance Network.AWS.Data.Query.ToQuery Network.AWS.Discovery.DisassociateConfigurationItemsFromApplication.DisassociateConfigurationItemsFromApplication


-- | Retrieves a list of configuration items that have tags as specified by
--   the key-value pairs, name and value, passed to the optional parameter
--   <tt>filters</tt>.
--   
--   There are three valid tag filter names:
--   
--   <ul>
--   <li>tagKey</li>
--   <li>tagValue</li>
--   <li>configurationId</li>
--   </ul>
--   
--   Also, all configuration items associated with your user account that
--   have tags can be listed if you call <tt>DescribeTags</tt> as is
--   without passing any parameters.
--   
--   This operation returns paginated results.
module Network.AWS.Discovery.DescribeTags

-- | <i>See:</i> <a>newDescribeTags</a> smart constructor.
data DescribeTags
DescribeTags' :: Maybe [TagFilter] -> Maybe Text -> Maybe Int -> DescribeTags

-- | You can filter the list using a <i>key</i>-<i>value</i> format. You
--   can separate these items by using logical operators. Allowed filters
--   include <tt>tagKey</tt>, <tt>tagValue</tt>, and
--   <tt>configurationId</tt>.
[$sel:filters:DescribeTags'] :: DescribeTags -> Maybe [TagFilter]

-- | A token to start the list. Use this token to get the next set of
--   results.
[$sel:nextToken:DescribeTags'] :: DescribeTags -> Maybe Text

-- | The total number of items to return in a single page of output. The
--   maximum value is 100.
[$sel:maxResults:DescribeTags'] :: DescribeTags -> Maybe Int

-- | Create a value of <a>DescribeTags</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:DescribeTags'</a>, <a>describeTags_filters</a> - You
--   can filter the list using a <i>key</i>-<i>value</i> format. You can
--   separate these items by using logical operators. Allowed filters
--   include <tt>tagKey</tt>, <tt>tagValue</tt>, and
--   <tt>configurationId</tt>.
--   
--   <a>$sel:nextToken:DescribeTags'</a>, <a>describeTags_nextToken</a> - A
--   token to start the list. Use this token to get the next set of
--   results.
--   
--   <a>$sel:maxResults:DescribeTags'</a>, <a>describeTags_maxResults</a> -
--   The total number of items to return in a single page of output. The
--   maximum value is 100.
newDescribeTags :: DescribeTags

-- | You can filter the list using a <i>key</i>-<i>value</i> format. You
--   can separate these items by using logical operators. Allowed filters
--   include <tt>tagKey</tt>, <tt>tagValue</tt>, and
--   <tt>configurationId</tt>.
describeTags_filters :: Lens' DescribeTags (Maybe [TagFilter])

-- | A token to start the list. Use this token to get the next set of
--   results.
describeTags_nextToken :: Lens' DescribeTags (Maybe Text)

-- | The total number of items to return in a single page of output. The
--   maximum value is 100.
describeTags_maxResults :: Lens' DescribeTags (Maybe Int)

-- | <i>See:</i> <a>newDescribeTagsResponse</a> smart constructor.
data DescribeTagsResponse
DescribeTagsResponse' :: Maybe Text -> Maybe [ConfigurationTag] -> Int -> DescribeTagsResponse

-- | The call returns a token. Use this token to get the next set of
--   results.
[$sel:nextToken:DescribeTagsResponse'] :: DescribeTagsResponse -> Maybe Text

-- | Depending on the input, this is a list of configuration items tagged
--   with a specific tag, or a list of tags for a specific configuration
--   item.
[$sel:tags:DescribeTagsResponse'] :: DescribeTagsResponse -> Maybe [ConfigurationTag]

-- | The response's http status code.
[$sel:httpStatus:DescribeTagsResponse'] :: DescribeTagsResponse -> Int

-- | Create a value of <a>DescribeTagsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeTags'</a>,
--   <a>describeTagsResponse_nextToken</a> - The call returns a token. Use
--   this token to get the next set of results.
--   
--   <a>$sel:tags:DescribeTagsResponse'</a>,
--   <a>describeTagsResponse_tags</a> - Depending on the input, this is a
--   list of configuration items tagged with a specific tag, or a list of
--   tags for a specific configuration item.
--   
--   <a>$sel:httpStatus:DescribeTagsResponse'</a>,
--   <a>describeTagsResponse_httpStatus</a> - The response's http status
--   code.
newDescribeTagsResponse :: Int -> DescribeTagsResponse

-- | The call returns a token. Use this token to get the next set of
--   results.
describeTagsResponse_nextToken :: Lens' DescribeTagsResponse (Maybe Text)

-- | Depending on the input, this is a list of configuration items tagged
--   with a specific tag, or a list of tags for a specific configuration
--   item.
describeTagsResponse_tags :: Lens' DescribeTagsResponse (Maybe [ConfigurationTag])

-- | The response's http status code.
describeTagsResponse_httpStatus :: Lens' DescribeTagsResponse Int
instance GHC.Generics.Generic Network.AWS.Discovery.DescribeTags.DescribeTags
instance GHC.Show.Show Network.AWS.Discovery.DescribeTags.DescribeTags
instance GHC.Read.Read Network.AWS.Discovery.DescribeTags.DescribeTags
instance GHC.Classes.Eq Network.AWS.Discovery.DescribeTags.DescribeTags
instance GHC.Generics.Generic Network.AWS.Discovery.DescribeTags.DescribeTagsResponse
instance GHC.Show.Show Network.AWS.Discovery.DescribeTags.DescribeTagsResponse
instance GHC.Read.Read Network.AWS.Discovery.DescribeTags.DescribeTagsResponse
instance GHC.Classes.Eq Network.AWS.Discovery.DescribeTags.DescribeTagsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Discovery.DescribeTags.DescribeTags
instance Control.DeepSeq.NFData Network.AWS.Discovery.DescribeTags.DescribeTagsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Discovery.DescribeTags.DescribeTags
instance Data.Hashable.Class.Hashable Network.AWS.Discovery.DescribeTags.DescribeTags
instance Control.DeepSeq.NFData Network.AWS.Discovery.DescribeTags.DescribeTags
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Discovery.DescribeTags.DescribeTags
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Discovery.DescribeTags.DescribeTags
instance Network.AWS.Data.Path.ToPath Network.AWS.Discovery.DescribeTags.DescribeTags
instance Network.AWS.Data.Query.ToQuery Network.AWS.Discovery.DescribeTags.DescribeTags


-- | Returns an array of import tasks for your account, including status
--   information, times, IDs, the Amazon S3 Object URL for the import file,
--   and more.
module Network.AWS.Discovery.DescribeImportTasks

-- | <i>See:</i> <a>newDescribeImportTasks</a> smart constructor.
data DescribeImportTasks
DescribeImportTasks' :: Maybe [ImportTaskFilter] -> Maybe Text -> Maybe Natural -> DescribeImportTasks

-- | An array of name-value pairs that you provide to filter the results
--   for the <tt>DescribeImportTask</tt> request to a specific subset of
--   results. Currently, wildcard values aren't supported for filters.
[$sel:filters:DescribeImportTasks'] :: DescribeImportTasks -> Maybe [ImportTaskFilter]

-- | The token to request a specific page of results.
[$sel:nextToken:DescribeImportTasks'] :: DescribeImportTasks -> Maybe Text

-- | The maximum number of results that you want this request to return, up
--   to 100.
[$sel:maxResults:DescribeImportTasks'] :: DescribeImportTasks -> Maybe Natural

-- | Create a value of <a>DescribeImportTasks</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:DescribeImportTasks'</a>,
--   <a>describeImportTasks_filters</a> - An array of name-value pairs that
--   you provide to filter the results for the <tt>DescribeImportTask</tt>
--   request to a specific subset of results. Currently, wildcard values
--   aren't supported for filters.
--   
--   <a>$sel:nextToken:DescribeImportTasks'</a>,
--   <a>describeImportTasks_nextToken</a> - The token to request a specific
--   page of results.
--   
--   <a>$sel:maxResults:DescribeImportTasks'</a>,
--   <a>describeImportTasks_maxResults</a> - The maximum number of results
--   that you want this request to return, up to 100.
newDescribeImportTasks :: DescribeImportTasks

-- | An array of name-value pairs that you provide to filter the results
--   for the <tt>DescribeImportTask</tt> request to a specific subset of
--   results. Currently, wildcard values aren't supported for filters.
describeImportTasks_filters :: Lens' DescribeImportTasks (Maybe [ImportTaskFilter])

-- | The token to request a specific page of results.
describeImportTasks_nextToken :: Lens' DescribeImportTasks (Maybe Text)

-- | The maximum number of results that you want this request to return, up
--   to 100.
describeImportTasks_maxResults :: Lens' DescribeImportTasks (Maybe Natural)

-- | <i>See:</i> <a>newDescribeImportTasksResponse</a> smart constructor.
data DescribeImportTasksResponse
DescribeImportTasksResponse' :: Maybe [ImportTask] -> Maybe Text -> Int -> DescribeImportTasksResponse

-- | A returned array of import tasks that match any applied filters, up to
--   the specified number of maximum results.
[$sel:tasks:DescribeImportTasksResponse'] :: DescribeImportTasksResponse -> Maybe [ImportTask]

-- | The token to request the next page of results.
[$sel:nextToken:DescribeImportTasksResponse'] :: DescribeImportTasksResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeImportTasksResponse'] :: DescribeImportTasksResponse -> Int

-- | Create a value of <a>DescribeImportTasksResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tasks:DescribeImportTasksResponse'</a>,
--   <a>describeImportTasksResponse_tasks</a> - A returned array of import
--   tasks that match any applied filters, up to the specified number of
--   maximum results.
--   
--   <a>$sel:nextToken:DescribeImportTasks'</a>,
--   <a>describeImportTasksResponse_nextToken</a> - The token to request
--   the next page of results.
--   
--   <a>$sel:httpStatus:DescribeImportTasksResponse'</a>,
--   <a>describeImportTasksResponse_httpStatus</a> - The response's http
--   status code.
newDescribeImportTasksResponse :: Int -> DescribeImportTasksResponse

-- | A returned array of import tasks that match any applied filters, up to
--   the specified number of maximum results.
describeImportTasksResponse_tasks :: Lens' DescribeImportTasksResponse (Maybe [ImportTask])

-- | The token to request the next page of results.
describeImportTasksResponse_nextToken :: Lens' DescribeImportTasksResponse (Maybe Text)

-- | The response's http status code.
describeImportTasksResponse_httpStatus :: Lens' DescribeImportTasksResponse Int
instance GHC.Generics.Generic Network.AWS.Discovery.DescribeImportTasks.DescribeImportTasks
instance GHC.Show.Show Network.AWS.Discovery.DescribeImportTasks.DescribeImportTasks
instance GHC.Read.Read Network.AWS.Discovery.DescribeImportTasks.DescribeImportTasks
instance GHC.Classes.Eq Network.AWS.Discovery.DescribeImportTasks.DescribeImportTasks
instance GHC.Generics.Generic Network.AWS.Discovery.DescribeImportTasks.DescribeImportTasksResponse
instance GHC.Show.Show Network.AWS.Discovery.DescribeImportTasks.DescribeImportTasksResponse
instance GHC.Read.Read Network.AWS.Discovery.DescribeImportTasks.DescribeImportTasksResponse
instance GHC.Classes.Eq Network.AWS.Discovery.DescribeImportTasks.DescribeImportTasksResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Discovery.DescribeImportTasks.DescribeImportTasks
instance Control.DeepSeq.NFData Network.AWS.Discovery.DescribeImportTasks.DescribeImportTasksResponse
instance Data.Hashable.Class.Hashable Network.AWS.Discovery.DescribeImportTasks.DescribeImportTasks
instance Control.DeepSeq.NFData Network.AWS.Discovery.DescribeImportTasks.DescribeImportTasks
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Discovery.DescribeImportTasks.DescribeImportTasks
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Discovery.DescribeImportTasks.DescribeImportTasks
instance Network.AWS.Data.Path.ToPath Network.AWS.Discovery.DescribeImportTasks.DescribeImportTasks
instance Network.AWS.Data.Query.ToQuery Network.AWS.Discovery.DescribeImportTasks.DescribeImportTasks


-- | Retrieve status of one or more export tasks. You can retrieve the
--   status of up to 100 export tasks.
--   
--   This operation returns paginated results.
module Network.AWS.Discovery.DescribeExportTasks

-- | <i>See:</i> <a>newDescribeExportTasks</a> smart constructor.
data DescribeExportTasks
DescribeExportTasks' :: Maybe [ExportFilter] -> Maybe Text -> Maybe [Text] -> Maybe Int -> DescribeExportTasks

-- | One or more filters.
--   
--   <ul>
--   <li><tt>AgentId</tt> - ID of the agent whose collected data will be
--   exported</li>
--   </ul>
[$sel:filters:DescribeExportTasks'] :: DescribeExportTasks -> Maybe [ExportFilter]

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>DescribeExportTasks</tt> request where <tt>maxResults</tt> was
--   used and the results exceeded the value of that parameter. Pagination
--   continues from the end of the previous results that returned the
--   <tt>nextToken</tt> value. This value is null when there are no more
--   results to return.
[$sel:nextToken:DescribeExportTasks'] :: DescribeExportTasks -> Maybe Text

-- | One or more unique identifiers used to query the status of an export
--   request.
[$sel:exportIds:DescribeExportTasks'] :: DescribeExportTasks -> Maybe [Text]

-- | The maximum number of volume results returned by
--   <tt>DescribeExportTasks</tt> in paginated output. When this parameter
--   is used, <tt>DescribeExportTasks</tt> only returns <tt>maxResults</tt>
--   results in a single page along with a <tt>nextToken</tt> response
--   element.
[$sel:maxResults:DescribeExportTasks'] :: DescribeExportTasks -> Maybe Int

-- | Create a value of <a>DescribeExportTasks</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:DescribeExportTasks'</a>,
--   <a>describeExportTasks_filters</a> - One or more filters.
--   
--   <ul>
--   <li><tt>AgentId</tt> - ID of the agent whose collected data will be
--   exported</li>
--   </ul>
--   
--   <a>$sel:nextToken:DescribeExportTasks'</a>,
--   <a>describeExportTasks_nextToken</a> - The <tt>nextToken</tt> value
--   returned from a previous paginated <tt>DescribeExportTasks</tt>
--   request where <tt>maxResults</tt> was used and the results exceeded
--   the value of that parameter. Pagination continues from the end of the
--   previous results that returned the <tt>nextToken</tt> value. This
--   value is null when there are no more results to return.
--   
--   <a>$sel:exportIds:DescribeExportTasks'</a>,
--   <a>describeExportTasks_exportIds</a> - One or more unique identifiers
--   used to query the status of an export request.
--   
--   <a>$sel:maxResults:DescribeExportTasks'</a>,
--   <a>describeExportTasks_maxResults</a> - The maximum number of volume
--   results returned by <tt>DescribeExportTasks</tt> in paginated output.
--   When this parameter is used, <tt>DescribeExportTasks</tt> only returns
--   <tt>maxResults</tt> results in a single page along with a
--   <tt>nextToken</tt> response element.
newDescribeExportTasks :: DescribeExportTasks

-- | One or more filters.
--   
--   <ul>
--   <li><tt>AgentId</tt> - ID of the agent whose collected data will be
--   exported</li>
--   </ul>
describeExportTasks_filters :: Lens' DescribeExportTasks (Maybe [ExportFilter])

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>DescribeExportTasks</tt> request where <tt>maxResults</tt> was
--   used and the results exceeded the value of that parameter. Pagination
--   continues from the end of the previous results that returned the
--   <tt>nextToken</tt> value. This value is null when there are no more
--   results to return.
describeExportTasks_nextToken :: Lens' DescribeExportTasks (Maybe Text)

-- | One or more unique identifiers used to query the status of an export
--   request.
describeExportTasks_exportIds :: Lens' DescribeExportTasks (Maybe [Text])

-- | The maximum number of volume results returned by
--   <tt>DescribeExportTasks</tt> in paginated output. When this parameter
--   is used, <tt>DescribeExportTasks</tt> only returns <tt>maxResults</tt>
--   results in a single page along with a <tt>nextToken</tt> response
--   element.
describeExportTasks_maxResults :: Lens' DescribeExportTasks (Maybe Int)

-- | <i>See:</i> <a>newDescribeExportTasksResponse</a> smart constructor.
data DescribeExportTasksResponse
DescribeExportTasksResponse' :: Maybe Text -> Maybe [ExportInfo] -> Int -> DescribeExportTasksResponse

-- | The <tt>nextToken</tt> value to include in a future
--   <tt>DescribeExportTasks</tt> request. When the results of a
--   <tt>DescribeExportTasks</tt> request exceed <tt>maxResults</tt>, this
--   value can be used to retrieve the next page of results. This value is
--   null when there are no more results to return.
[$sel:nextToken:DescribeExportTasksResponse'] :: DescribeExportTasksResponse -> Maybe Text

-- | Contains one or more sets of export request details. When the status
--   of a request is <tt>SUCCEEDED</tt>, the response includes a URL for an
--   Amazon S3 bucket where you can view the data in a CSV file.
[$sel:exportsInfo:DescribeExportTasksResponse'] :: DescribeExportTasksResponse -> Maybe [ExportInfo]

-- | The response's http status code.
[$sel:httpStatus:DescribeExportTasksResponse'] :: DescribeExportTasksResponse -> Int

-- | Create a value of <a>DescribeExportTasksResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeExportTasks'</a>,
--   <a>describeExportTasksResponse_nextToken</a> - The <tt>nextToken</tt>
--   value to include in a future <tt>DescribeExportTasks</tt> request.
--   When the results of a <tt>DescribeExportTasks</tt> request exceed
--   <tt>maxResults</tt>, this value can be used to retrieve the next page
--   of results. This value is null when there are no more results to
--   return.
--   
--   <a>$sel:exportsInfo:DescribeExportTasksResponse'</a>,
--   <a>describeExportTasksResponse_exportsInfo</a> - Contains one or more
--   sets of export request details. When the status of a request is
--   <tt>SUCCEEDED</tt>, the response includes a URL for an Amazon S3
--   bucket where you can view the data in a CSV file.
--   
--   <a>$sel:httpStatus:DescribeExportTasksResponse'</a>,
--   <a>describeExportTasksResponse_httpStatus</a> - The response's http
--   status code.
newDescribeExportTasksResponse :: Int -> DescribeExportTasksResponse

-- | The <tt>nextToken</tt> value to include in a future
--   <tt>DescribeExportTasks</tt> request. When the results of a
--   <tt>DescribeExportTasks</tt> request exceed <tt>maxResults</tt>, this
--   value can be used to retrieve the next page of results. This value is
--   null when there are no more results to return.
describeExportTasksResponse_nextToken :: Lens' DescribeExportTasksResponse (Maybe Text)

-- | Contains one or more sets of export request details. When the status
--   of a request is <tt>SUCCEEDED</tt>, the response includes a URL for an
--   Amazon S3 bucket where you can view the data in a CSV file.
describeExportTasksResponse_exportsInfo :: Lens' DescribeExportTasksResponse (Maybe [ExportInfo])

-- | The response's http status code.
describeExportTasksResponse_httpStatus :: Lens' DescribeExportTasksResponse Int
instance GHC.Generics.Generic Network.AWS.Discovery.DescribeExportTasks.DescribeExportTasks
instance GHC.Show.Show Network.AWS.Discovery.DescribeExportTasks.DescribeExportTasks
instance GHC.Read.Read Network.AWS.Discovery.DescribeExportTasks.DescribeExportTasks
instance GHC.Classes.Eq Network.AWS.Discovery.DescribeExportTasks.DescribeExportTasks
instance GHC.Generics.Generic Network.AWS.Discovery.DescribeExportTasks.DescribeExportTasksResponse
instance GHC.Show.Show Network.AWS.Discovery.DescribeExportTasks.DescribeExportTasksResponse
instance GHC.Read.Read Network.AWS.Discovery.DescribeExportTasks.DescribeExportTasksResponse
instance GHC.Classes.Eq Network.AWS.Discovery.DescribeExportTasks.DescribeExportTasksResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Discovery.DescribeExportTasks.DescribeExportTasks
instance Control.DeepSeq.NFData Network.AWS.Discovery.DescribeExportTasks.DescribeExportTasksResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Discovery.DescribeExportTasks.DescribeExportTasks
instance Data.Hashable.Class.Hashable Network.AWS.Discovery.DescribeExportTasks.DescribeExportTasks
instance Control.DeepSeq.NFData Network.AWS.Discovery.DescribeExportTasks.DescribeExportTasks
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Discovery.DescribeExportTasks.DescribeExportTasks
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Discovery.DescribeExportTasks.DescribeExportTasks
instance Network.AWS.Data.Path.ToPath Network.AWS.Discovery.DescribeExportTasks.DescribeExportTasks
instance Network.AWS.Data.Query.ToQuery Network.AWS.Discovery.DescribeExportTasks.DescribeExportTasks


-- | Lists exports as specified by ID. All continuous exports associated
--   with your user account can be listed if you call
--   <tt>DescribeContinuousExports</tt> as is without passing any
--   parameters.
--   
--   This operation returns paginated results.
module Network.AWS.Discovery.DescribeContinuousExports

-- | <i>See:</i> <a>newDescribeContinuousExports</a> smart constructor.
data DescribeContinuousExports
DescribeContinuousExports' :: Maybe Text -> Maybe [Text] -> Maybe Natural -> DescribeContinuousExports

-- | The token from the previous call to <tt>DescribeExportTasks</tt>.
[$sel:nextToken:DescribeContinuousExports'] :: DescribeContinuousExports -> Maybe Text

-- | The unique IDs assigned to the exports.
[$sel:exportIds:DescribeContinuousExports'] :: DescribeContinuousExports -> Maybe [Text]

-- | A number between 1 and 100 specifying the maximum number of continuous
--   export descriptions returned.
[$sel:maxResults:DescribeContinuousExports'] :: DescribeContinuousExports -> Maybe Natural

-- | Create a value of <a>DescribeContinuousExports</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeContinuousExports'</a>,
--   <a>describeContinuousExports_nextToken</a> - The token from the
--   previous call to <tt>DescribeExportTasks</tt>.
--   
--   <a>$sel:exportIds:DescribeContinuousExports'</a>,
--   <a>describeContinuousExports_exportIds</a> - The unique IDs assigned
--   to the exports.
--   
--   <a>$sel:maxResults:DescribeContinuousExports'</a>,
--   <a>describeContinuousExports_maxResults</a> - A number between 1 and
--   100 specifying the maximum number of continuous export descriptions
--   returned.
newDescribeContinuousExports :: DescribeContinuousExports

-- | The token from the previous call to <tt>DescribeExportTasks</tt>.
describeContinuousExports_nextToken :: Lens' DescribeContinuousExports (Maybe Text)

-- | The unique IDs assigned to the exports.
describeContinuousExports_exportIds :: Lens' DescribeContinuousExports (Maybe [Text])

-- | A number between 1 and 100 specifying the maximum number of continuous
--   export descriptions returned.
describeContinuousExports_maxResults :: Lens' DescribeContinuousExports (Maybe Natural)

-- | <i>See:</i> <a>newDescribeContinuousExportsResponse</a> smart
--   constructor.
data DescribeContinuousExportsResponse
DescribeContinuousExportsResponse' :: Maybe Text -> Maybe [ContinuousExportDescription] -> Int -> DescribeContinuousExportsResponse

-- | The token from the previous call to <tt>DescribeExportTasks</tt>.
[$sel:nextToken:DescribeContinuousExportsResponse'] :: DescribeContinuousExportsResponse -> Maybe Text

-- | A list of continuous export descriptions.
[$sel:descriptions:DescribeContinuousExportsResponse'] :: DescribeContinuousExportsResponse -> Maybe [ContinuousExportDescription]

-- | The response's http status code.
[$sel:httpStatus:DescribeContinuousExportsResponse'] :: DescribeContinuousExportsResponse -> Int

-- | Create a value of <a>DescribeContinuousExportsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeContinuousExports'</a>,
--   <a>describeContinuousExportsResponse_nextToken</a> - The token from
--   the previous call to <tt>DescribeExportTasks</tt>.
--   
--   <a>$sel:descriptions:DescribeContinuousExportsResponse'</a>,
--   <a>describeContinuousExportsResponse_descriptions</a> - A list of
--   continuous export descriptions.
--   
--   <a>$sel:httpStatus:DescribeContinuousExportsResponse'</a>,
--   <a>describeContinuousExportsResponse_httpStatus</a> - The response's
--   http status code.
newDescribeContinuousExportsResponse :: Int -> DescribeContinuousExportsResponse

-- | The token from the previous call to <tt>DescribeExportTasks</tt>.
describeContinuousExportsResponse_nextToken :: Lens' DescribeContinuousExportsResponse (Maybe Text)

-- | A list of continuous export descriptions.
describeContinuousExportsResponse_descriptions :: Lens' DescribeContinuousExportsResponse (Maybe [ContinuousExportDescription])

-- | The response's http status code.
describeContinuousExportsResponse_httpStatus :: Lens' DescribeContinuousExportsResponse Int
instance GHC.Generics.Generic Network.AWS.Discovery.DescribeContinuousExports.DescribeContinuousExports
instance GHC.Show.Show Network.AWS.Discovery.DescribeContinuousExports.DescribeContinuousExports
instance GHC.Read.Read Network.AWS.Discovery.DescribeContinuousExports.DescribeContinuousExports
instance GHC.Classes.Eq Network.AWS.Discovery.DescribeContinuousExports.DescribeContinuousExports
instance GHC.Generics.Generic Network.AWS.Discovery.DescribeContinuousExports.DescribeContinuousExportsResponse
instance GHC.Show.Show Network.AWS.Discovery.DescribeContinuousExports.DescribeContinuousExportsResponse
instance GHC.Read.Read Network.AWS.Discovery.DescribeContinuousExports.DescribeContinuousExportsResponse
instance GHC.Classes.Eq Network.AWS.Discovery.DescribeContinuousExports.DescribeContinuousExportsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Discovery.DescribeContinuousExports.DescribeContinuousExports
instance Control.DeepSeq.NFData Network.AWS.Discovery.DescribeContinuousExports.DescribeContinuousExportsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Discovery.DescribeContinuousExports.DescribeContinuousExports
instance Data.Hashable.Class.Hashable Network.AWS.Discovery.DescribeContinuousExports.DescribeContinuousExports
instance Control.DeepSeq.NFData Network.AWS.Discovery.DescribeContinuousExports.DescribeContinuousExports
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Discovery.DescribeContinuousExports.DescribeContinuousExports
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Discovery.DescribeContinuousExports.DescribeContinuousExports
instance Network.AWS.Data.Path.ToPath Network.AWS.Discovery.DescribeContinuousExports.DescribeContinuousExports
instance Network.AWS.Data.Query.ToQuery Network.AWS.Discovery.DescribeContinuousExports.DescribeContinuousExports


-- | Retrieves attributes for a list of configuration item IDs.
--   
--   All of the supplied IDs must be for the same asset type from one of
--   the following:
--   
--   <ul>
--   <li>server</li>
--   <li>application</li>
--   <li>process</li>
--   <li>connection</li>
--   </ul>
--   
--   Output fields are specific to the asset type specified. For example,
--   the output for a <i>server</i> configuration item includes a list of
--   attributes about the server, such as host name, operating system,
--   number of network cards, etc.
--   
--   For a complete list of outputs for each asset type, see <a>Using the
--   DescribeConfigurations Action</a> in the <i>AWS Application Discovery
--   Service User Guide</i>.
module Network.AWS.Discovery.DescribeConfigurations

-- | <i>See:</i> <a>newDescribeConfigurations</a> smart constructor.
data DescribeConfigurations
DescribeConfigurations' :: [Text] -> DescribeConfigurations

-- | One or more configuration IDs.
[$sel:configurationIds:DescribeConfigurations'] :: DescribeConfigurations -> [Text]

-- | Create a value of <a>DescribeConfigurations</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configurationIds:DescribeConfigurations'</a>,
--   <a>describeConfigurations_configurationIds</a> - One or more
--   configuration IDs.
newDescribeConfigurations :: DescribeConfigurations

-- | One or more configuration IDs.
describeConfigurations_configurationIds :: Lens' DescribeConfigurations [Text]

-- | <i>See:</i> <a>newDescribeConfigurationsResponse</a> smart
--   constructor.
data DescribeConfigurationsResponse
DescribeConfigurationsResponse' :: Maybe [HashMap Text Text] -> Int -> DescribeConfigurationsResponse

-- | A key in the response map. The value is an array of data.
[$sel:configurations:DescribeConfigurationsResponse'] :: DescribeConfigurationsResponse -> Maybe [HashMap Text Text]

-- | The response's http status code.
[$sel:httpStatus:DescribeConfigurationsResponse'] :: DescribeConfigurationsResponse -> Int

-- | Create a value of <a>DescribeConfigurationsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configurations:DescribeConfigurationsResponse'</a>,
--   <a>describeConfigurationsResponse_configurations</a> - A key in the
--   response map. The value is an array of data.
--   
--   <a>$sel:httpStatus:DescribeConfigurationsResponse'</a>,
--   <a>describeConfigurationsResponse_httpStatus</a> - The response's http
--   status code.
newDescribeConfigurationsResponse :: Int -> DescribeConfigurationsResponse

-- | A key in the response map. The value is an array of data.
describeConfigurationsResponse_configurations :: Lens' DescribeConfigurationsResponse (Maybe [HashMap Text Text])

-- | The response's http status code.
describeConfigurationsResponse_httpStatus :: Lens' DescribeConfigurationsResponse Int
instance GHC.Generics.Generic Network.AWS.Discovery.DescribeConfigurations.DescribeConfigurations
instance GHC.Show.Show Network.AWS.Discovery.DescribeConfigurations.DescribeConfigurations
instance GHC.Read.Read Network.AWS.Discovery.DescribeConfigurations.DescribeConfigurations
instance GHC.Classes.Eq Network.AWS.Discovery.DescribeConfigurations.DescribeConfigurations
instance GHC.Generics.Generic Network.AWS.Discovery.DescribeConfigurations.DescribeConfigurationsResponse
instance GHC.Show.Show Network.AWS.Discovery.DescribeConfigurations.DescribeConfigurationsResponse
instance GHC.Read.Read Network.AWS.Discovery.DescribeConfigurations.DescribeConfigurationsResponse
instance GHC.Classes.Eq Network.AWS.Discovery.DescribeConfigurations.DescribeConfigurationsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Discovery.DescribeConfigurations.DescribeConfigurations
instance Control.DeepSeq.NFData Network.AWS.Discovery.DescribeConfigurations.DescribeConfigurationsResponse
instance Data.Hashable.Class.Hashable Network.AWS.Discovery.DescribeConfigurations.DescribeConfigurations
instance Control.DeepSeq.NFData Network.AWS.Discovery.DescribeConfigurations.DescribeConfigurations
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Discovery.DescribeConfigurations.DescribeConfigurations
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Discovery.DescribeConfigurations.DescribeConfigurations
instance Network.AWS.Data.Path.ToPath Network.AWS.Discovery.DescribeConfigurations.DescribeConfigurations
instance Network.AWS.Data.Query.ToQuery Network.AWS.Discovery.DescribeConfigurations.DescribeConfigurations


-- | Lists agents or connectors as specified by ID or other filters. All
--   agents/connectors associated with your user account can be listed if
--   you call <tt>DescribeAgents</tt> as is without passing any parameters.
--   
--   This operation returns paginated results.
module Network.AWS.Discovery.DescribeAgents

-- | <i>See:</i> <a>newDescribeAgents</a> smart constructor.
data DescribeAgents
DescribeAgents' :: Maybe [Text] -> Maybe [Filter] -> Maybe Text -> Maybe Int -> DescribeAgents

-- | The agent or the Connector IDs for which you want information. If you
--   specify no IDs, the system returns information about all
--   agents/Connectors associated with your AWS user account.
[$sel:agentIds:DescribeAgents'] :: DescribeAgents -> Maybe [Text]

-- | You can filter the request using various logical operators and a
--   <i>key</i>-<i>value</i> format. For example:
--   
--   <pre>
--   {"key": "collectionStatus", "value": "STARTED"}
--   </pre>
[$sel:filters:DescribeAgents'] :: DescribeAgents -> Maybe [Filter]

-- | Token to retrieve the next set of results. For example, if you
--   previously specified 100 IDs for
--   <tt>DescribeAgentsRequest$agentIds</tt> but set
--   <tt>DescribeAgentsRequest$maxResults</tt> to 10, you received a set of
--   10 results along with a token. Use that token in this query to get the
--   next set of 10.
[$sel:nextToken:DescribeAgents'] :: DescribeAgents -> Maybe Text

-- | The total number of agents/Connectors to return in a single page of
--   output. The maximum value is 100.
[$sel:maxResults:DescribeAgents'] :: DescribeAgents -> Maybe Int

-- | Create a value of <a>DescribeAgents</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:agentIds:DescribeAgents'</a>, <a>describeAgents_agentIds</a> -
--   The agent or the Connector IDs for which you want information. If you
--   specify no IDs, the system returns information about all
--   agents/Connectors associated with your AWS user account.
--   
--   <a>$sel:filters:DescribeAgents'</a>, <a>describeAgents_filters</a> -
--   You can filter the request using various logical operators and a
--   <i>key</i>-<i>value</i> format. For example:
--   
--   <pre>
--   {"key": "collectionStatus", "value": "STARTED"}
--   </pre>
--   
--   <a>$sel:nextToken:DescribeAgents'</a>, <a>describeAgents_nextToken</a>
--   - Token to retrieve the next set of results. For example, if you
--   previously specified 100 IDs for
--   <tt>DescribeAgentsRequest$agentIds</tt> but set
--   <tt>DescribeAgentsRequest$maxResults</tt> to 10, you received a set of
--   10 results along with a token. Use that token in this query to get the
--   next set of 10.
--   
--   <a>$sel:maxResults:DescribeAgents'</a>,
--   <a>describeAgents_maxResults</a> - The total number of
--   agents/Connectors to return in a single page of output. The maximum
--   value is 100.
newDescribeAgents :: DescribeAgents

-- | The agent or the Connector IDs for which you want information. If you
--   specify no IDs, the system returns information about all
--   agents/Connectors associated with your AWS user account.
describeAgents_agentIds :: Lens' DescribeAgents (Maybe [Text])

-- | You can filter the request using various logical operators and a
--   <i>key</i>-<i>value</i> format. For example:
--   
--   <pre>
--   {"key": "collectionStatus", "value": "STARTED"}
--   </pre>
describeAgents_filters :: Lens' DescribeAgents (Maybe [Filter])

-- | Token to retrieve the next set of results. For example, if you
--   previously specified 100 IDs for
--   <tt>DescribeAgentsRequest$agentIds</tt> but set
--   <tt>DescribeAgentsRequest$maxResults</tt> to 10, you received a set of
--   10 results along with a token. Use that token in this query to get the
--   next set of 10.
describeAgents_nextToken :: Lens' DescribeAgents (Maybe Text)

-- | The total number of agents/Connectors to return in a single page of
--   output. The maximum value is 100.
describeAgents_maxResults :: Lens' DescribeAgents (Maybe Int)

-- | <i>See:</i> <a>newDescribeAgentsResponse</a> smart constructor.
data DescribeAgentsResponse
DescribeAgentsResponse' :: Maybe [AgentInfo] -> Maybe Text -> Int -> DescribeAgentsResponse

-- | Lists agents or the Connector by ID or lists all agents/Connectors
--   associated with your user account if you did not specify an
--   agent/Connector ID. The output includes agent/Connector IDs, IP
--   addresses, media access control (MAC) addresses, agent/Connector
--   health, host name where the agent/Connector resides, and the version
--   number of each agent/Connector.
[$sel:agentsInfo:DescribeAgentsResponse'] :: DescribeAgentsResponse -> Maybe [AgentInfo]

-- | Token to retrieve the next set of results. For example, if you
--   specified 100 IDs for <tt>DescribeAgentsRequest$agentIds</tt> but set
--   <tt>DescribeAgentsRequest$maxResults</tt> to 10, you received a set of
--   10 results along with this token. Use this token in the next query to
--   retrieve the next set of 10.
[$sel:nextToken:DescribeAgentsResponse'] :: DescribeAgentsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeAgentsResponse'] :: DescribeAgentsResponse -> Int

-- | Create a value of <a>DescribeAgentsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:agentsInfo:DescribeAgentsResponse'</a>,
--   <a>describeAgentsResponse_agentsInfo</a> - Lists agents or the
--   Connector by ID or lists all agents/Connectors associated with your
--   user account if you did not specify an agent/Connector ID. The output
--   includes agent/Connector IDs, IP addresses, media access control (MAC)
--   addresses, agent/Connector health, host name where the agent/Connector
--   resides, and the version number of each agent/Connector.
--   
--   <a>$sel:nextToken:DescribeAgents'</a>,
--   <a>describeAgentsResponse_nextToken</a> - Token to retrieve the next
--   set of results. For example, if you specified 100 IDs for
--   <tt>DescribeAgentsRequest$agentIds</tt> but set
--   <tt>DescribeAgentsRequest$maxResults</tt> to 10, you received a set of
--   10 results along with this token. Use this token in the next query to
--   retrieve the next set of 10.
--   
--   <a>$sel:httpStatus:DescribeAgentsResponse'</a>,
--   <a>describeAgentsResponse_httpStatus</a> - The response's http status
--   code.
newDescribeAgentsResponse :: Int -> DescribeAgentsResponse

-- | Lists agents or the Connector by ID or lists all agents/Connectors
--   associated with your user account if you did not specify an
--   agent/Connector ID. The output includes agent/Connector IDs, IP
--   addresses, media access control (MAC) addresses, agent/Connector
--   health, host name where the agent/Connector resides, and the version
--   number of each agent/Connector.
describeAgentsResponse_agentsInfo :: Lens' DescribeAgentsResponse (Maybe [AgentInfo])

-- | Token to retrieve the next set of results. For example, if you
--   specified 100 IDs for <tt>DescribeAgentsRequest$agentIds</tt> but set
--   <tt>DescribeAgentsRequest$maxResults</tt> to 10, you received a set of
--   10 results along with this token. Use this token in the next query to
--   retrieve the next set of 10.
describeAgentsResponse_nextToken :: Lens' DescribeAgentsResponse (Maybe Text)

-- | The response's http status code.
describeAgentsResponse_httpStatus :: Lens' DescribeAgentsResponse Int
instance GHC.Generics.Generic Network.AWS.Discovery.DescribeAgents.DescribeAgents
instance GHC.Show.Show Network.AWS.Discovery.DescribeAgents.DescribeAgents
instance GHC.Read.Read Network.AWS.Discovery.DescribeAgents.DescribeAgents
instance GHC.Classes.Eq Network.AWS.Discovery.DescribeAgents.DescribeAgents
instance GHC.Generics.Generic Network.AWS.Discovery.DescribeAgents.DescribeAgentsResponse
instance GHC.Show.Show Network.AWS.Discovery.DescribeAgents.DescribeAgentsResponse
instance GHC.Read.Read Network.AWS.Discovery.DescribeAgents.DescribeAgentsResponse
instance GHC.Classes.Eq Network.AWS.Discovery.DescribeAgents.DescribeAgentsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Discovery.DescribeAgents.DescribeAgents
instance Control.DeepSeq.NFData Network.AWS.Discovery.DescribeAgents.DescribeAgentsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Discovery.DescribeAgents.DescribeAgents
instance Data.Hashable.Class.Hashable Network.AWS.Discovery.DescribeAgents.DescribeAgents
instance Control.DeepSeq.NFData Network.AWS.Discovery.DescribeAgents.DescribeAgents
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Discovery.DescribeAgents.DescribeAgents
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Discovery.DescribeAgents.DescribeAgents
instance Network.AWS.Data.Path.ToPath Network.AWS.Discovery.DescribeAgents.DescribeAgents
instance Network.AWS.Data.Query.ToQuery Network.AWS.Discovery.DescribeAgents.DescribeAgents


-- | Deletes the association between configuration items and one or more
--   tags. This API accepts a list of multiple configuration items.
module Network.AWS.Discovery.DeleteTags

-- | <i>See:</i> <a>newDeleteTags</a> smart constructor.
data DeleteTags
DeleteTags' :: Maybe [Tag] -> [Text] -> DeleteTags

-- | Tags that you want to delete from one or more configuration items.
--   Specify the tags that you want to delete in a <i>key</i>-<i>value</i>
--   format. For example:
--   
--   <pre>
--   {"key": "serverType", "value": "webServer"}
--   </pre>
[$sel:tags:DeleteTags'] :: DeleteTags -> Maybe [Tag]

-- | A list of configuration items with tags that you want to delete.
[$sel:configurationIds:DeleteTags'] :: DeleteTags -> [Text]

-- | Create a value of <a>DeleteTags</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:DeleteTags'</a>, <a>deleteTags_tags</a> - Tags that you
--   want to delete from one or more configuration items. Specify the tags
--   that you want to delete in a <i>key</i>-<i>value</i> format. For
--   example:
--   
--   <pre>
--   {"key": "serverType", "value": "webServer"}
--   </pre>
--   
--   <a>$sel:configurationIds:DeleteTags'</a>,
--   <a>deleteTags_configurationIds</a> - A list of configuration items
--   with tags that you want to delete.
newDeleteTags :: DeleteTags

-- | Tags that you want to delete from one or more configuration items.
--   Specify the tags that you want to delete in a <i>key</i>-<i>value</i>
--   format. For example:
--   
--   <pre>
--   {"key": "serverType", "value": "webServer"}
--   </pre>
deleteTags_tags :: Lens' DeleteTags (Maybe [Tag])

-- | A list of configuration items with tags that you want to delete.
deleteTags_configurationIds :: Lens' DeleteTags [Text]

-- | <i>See:</i> <a>newDeleteTagsResponse</a> smart constructor.
data DeleteTagsResponse
DeleteTagsResponse' :: Int -> DeleteTagsResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteTagsResponse'] :: DeleteTagsResponse -> Int

-- | Create a value of <a>DeleteTagsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteTagsResponse'</a>,
--   <a>deleteTagsResponse_httpStatus</a> - The response's http status
--   code.
newDeleteTagsResponse :: Int -> DeleteTagsResponse

-- | The response's http status code.
deleteTagsResponse_httpStatus :: Lens' DeleteTagsResponse Int
instance GHC.Generics.Generic Network.AWS.Discovery.DeleteTags.DeleteTags
instance GHC.Show.Show Network.AWS.Discovery.DeleteTags.DeleteTags
instance GHC.Read.Read Network.AWS.Discovery.DeleteTags.DeleteTags
instance GHC.Classes.Eq Network.AWS.Discovery.DeleteTags.DeleteTags
instance GHC.Generics.Generic Network.AWS.Discovery.DeleteTags.DeleteTagsResponse
instance GHC.Show.Show Network.AWS.Discovery.DeleteTags.DeleteTagsResponse
instance GHC.Read.Read Network.AWS.Discovery.DeleteTags.DeleteTagsResponse
instance GHC.Classes.Eq Network.AWS.Discovery.DeleteTags.DeleteTagsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Discovery.DeleteTags.DeleteTags
instance Control.DeepSeq.NFData Network.AWS.Discovery.DeleteTags.DeleteTagsResponse
instance Data.Hashable.Class.Hashable Network.AWS.Discovery.DeleteTags.DeleteTags
instance Control.DeepSeq.NFData Network.AWS.Discovery.DeleteTags.DeleteTags
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Discovery.DeleteTags.DeleteTags
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Discovery.DeleteTags.DeleteTags
instance Network.AWS.Data.Path.ToPath Network.AWS.Discovery.DeleteTags.DeleteTags
instance Network.AWS.Data.Query.ToQuery Network.AWS.Discovery.DeleteTags.DeleteTags


-- | Deletes a list of applications and their associations with
--   configuration items.
module Network.AWS.Discovery.DeleteApplications

-- | <i>See:</i> <a>newDeleteApplications</a> smart constructor.
data DeleteApplications
DeleteApplications' :: [Text] -> DeleteApplications

-- | Configuration ID of an application to be deleted.
[$sel:configurationIds:DeleteApplications'] :: DeleteApplications -> [Text]

-- | Create a value of <a>DeleteApplications</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configurationIds:DeleteApplications'</a>,
--   <a>deleteApplications_configurationIds</a> - Configuration ID of an
--   application to be deleted.
newDeleteApplications :: DeleteApplications

-- | Configuration ID of an application to be deleted.
deleteApplications_configurationIds :: Lens' DeleteApplications [Text]

-- | <i>See:</i> <a>newDeleteApplicationsResponse</a> smart constructor.
data DeleteApplicationsResponse
DeleteApplicationsResponse' :: Int -> DeleteApplicationsResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteApplicationsResponse'] :: DeleteApplicationsResponse -> Int

-- | Create a value of <a>DeleteApplicationsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteApplicationsResponse'</a>,
--   <a>deleteApplicationsResponse_httpStatus</a> - The response's http
--   status code.
newDeleteApplicationsResponse :: Int -> DeleteApplicationsResponse

-- | The response's http status code.
deleteApplicationsResponse_httpStatus :: Lens' DeleteApplicationsResponse Int
instance GHC.Generics.Generic Network.AWS.Discovery.DeleteApplications.DeleteApplications
instance GHC.Show.Show Network.AWS.Discovery.DeleteApplications.DeleteApplications
instance GHC.Read.Read Network.AWS.Discovery.DeleteApplications.DeleteApplications
instance GHC.Classes.Eq Network.AWS.Discovery.DeleteApplications.DeleteApplications
instance GHC.Generics.Generic Network.AWS.Discovery.DeleteApplications.DeleteApplicationsResponse
instance GHC.Show.Show Network.AWS.Discovery.DeleteApplications.DeleteApplicationsResponse
instance GHC.Read.Read Network.AWS.Discovery.DeleteApplications.DeleteApplicationsResponse
instance GHC.Classes.Eq Network.AWS.Discovery.DeleteApplications.DeleteApplicationsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Discovery.DeleteApplications.DeleteApplications
instance Control.DeepSeq.NFData Network.AWS.Discovery.DeleteApplications.DeleteApplicationsResponse
instance Data.Hashable.Class.Hashable Network.AWS.Discovery.DeleteApplications.DeleteApplications
instance Control.DeepSeq.NFData Network.AWS.Discovery.DeleteApplications.DeleteApplications
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Discovery.DeleteApplications.DeleteApplications
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Discovery.DeleteApplications.DeleteApplications
instance Network.AWS.Data.Path.ToPath Network.AWS.Discovery.DeleteApplications.DeleteApplications
instance Network.AWS.Data.Query.ToQuery Network.AWS.Discovery.DeleteApplications.DeleteApplications


-- | Creates one or more tags for configuration items. Tags are metadata
--   that help you categorize IT assets. This API accepts a list of
--   multiple configuration items.
module Network.AWS.Discovery.CreateTags

-- | <i>See:</i> <a>newCreateTags</a> smart constructor.
data CreateTags
CreateTags' :: [Text] -> [Tag] -> CreateTags

-- | A list of configuration items that you want to tag.
[$sel:configurationIds:CreateTags'] :: CreateTags -> [Text]

-- | Tags that you want to associate with one or more configuration items.
--   Specify the tags that you want to create in a <i>key</i>-<i>value</i>
--   format. For example:
--   
--   <pre>
--   {"key": "serverType", "value": "webServer"}
--   </pre>
[$sel:tags:CreateTags'] :: CreateTags -> [Tag]

-- | Create a value of <a>CreateTags</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configurationIds:CreateTags'</a>,
--   <a>createTags_configurationIds</a> - A list of configuration items
--   that you want to tag.
--   
--   <a>$sel:tags:CreateTags'</a>, <a>createTags_tags</a> - Tags that you
--   want to associate with one or more configuration items. Specify the
--   tags that you want to create in a <i>key</i>-<i>value</i> format. For
--   example:
--   
--   <pre>
--   {"key": "serverType", "value": "webServer"}
--   </pre>
newCreateTags :: CreateTags

-- | A list of configuration items that you want to tag.
createTags_configurationIds :: Lens' CreateTags [Text]

-- | Tags that you want to associate with one or more configuration items.
--   Specify the tags that you want to create in a <i>key</i>-<i>value</i>
--   format. For example:
--   
--   <pre>
--   {"key": "serverType", "value": "webServer"}
--   </pre>
createTags_tags :: Lens' CreateTags [Tag]

-- | <i>See:</i> <a>newCreateTagsResponse</a> smart constructor.
data CreateTagsResponse
CreateTagsResponse' :: Int -> CreateTagsResponse

-- | The response's http status code.
[$sel:httpStatus:CreateTagsResponse'] :: CreateTagsResponse -> Int

-- | Create a value of <a>CreateTagsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateTagsResponse'</a>,
--   <a>createTagsResponse_httpStatus</a> - The response's http status
--   code.
newCreateTagsResponse :: Int -> CreateTagsResponse

-- | The response's http status code.
createTagsResponse_httpStatus :: Lens' CreateTagsResponse Int
instance GHC.Generics.Generic Network.AWS.Discovery.CreateTags.CreateTags
instance GHC.Show.Show Network.AWS.Discovery.CreateTags.CreateTags
instance GHC.Read.Read Network.AWS.Discovery.CreateTags.CreateTags
instance GHC.Classes.Eq Network.AWS.Discovery.CreateTags.CreateTags
instance GHC.Generics.Generic Network.AWS.Discovery.CreateTags.CreateTagsResponse
instance GHC.Show.Show Network.AWS.Discovery.CreateTags.CreateTagsResponse
instance GHC.Read.Read Network.AWS.Discovery.CreateTags.CreateTagsResponse
instance GHC.Classes.Eq Network.AWS.Discovery.CreateTags.CreateTagsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Discovery.CreateTags.CreateTags
instance Control.DeepSeq.NFData Network.AWS.Discovery.CreateTags.CreateTagsResponse
instance Data.Hashable.Class.Hashable Network.AWS.Discovery.CreateTags.CreateTags
instance Control.DeepSeq.NFData Network.AWS.Discovery.CreateTags.CreateTags
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Discovery.CreateTags.CreateTags
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Discovery.CreateTags.CreateTags
instance Network.AWS.Data.Path.ToPath Network.AWS.Discovery.CreateTags.CreateTags
instance Network.AWS.Data.Query.ToQuery Network.AWS.Discovery.CreateTags.CreateTags


-- | Creates an application with the given name and description.
module Network.AWS.Discovery.CreateApplication

-- | <i>See:</i> <a>newCreateApplication</a> smart constructor.
data CreateApplication
CreateApplication' :: Maybe Text -> Text -> CreateApplication

-- | Description of the application to be created.
[$sel:description:CreateApplication'] :: CreateApplication -> Maybe Text

-- | Name of the application to be created.
[$sel:name:CreateApplication'] :: CreateApplication -> Text

-- | Create a value of <a>CreateApplication</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:CreateApplication'</a>,
--   <a>createApplication_description</a> - Description of the application
--   to be created.
--   
--   <a>$sel:name:CreateApplication'</a>, <a>createApplication_name</a> -
--   Name of the application to be created.
newCreateApplication :: Text -> CreateApplication

-- | Description of the application to be created.
createApplication_description :: Lens' CreateApplication (Maybe Text)

-- | Name of the application to be created.
createApplication_name :: Lens' CreateApplication Text

-- | <i>See:</i> <a>newCreateApplicationResponse</a> smart constructor.
data CreateApplicationResponse
CreateApplicationResponse' :: Maybe Text -> Int -> CreateApplicationResponse

-- | Configuration ID of an application to be created.
[$sel:configurationId:CreateApplicationResponse'] :: CreateApplicationResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateApplicationResponse'] :: CreateApplicationResponse -> Int

-- | Create a value of <a>CreateApplicationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configurationId:CreateApplicationResponse'</a>,
--   <a>createApplicationResponse_configurationId</a> - Configuration ID of
--   an application to be created.
--   
--   <a>$sel:httpStatus:CreateApplicationResponse'</a>,
--   <a>createApplicationResponse_httpStatus</a> - The response's http
--   status code.
newCreateApplicationResponse :: Int -> CreateApplicationResponse

-- | Configuration ID of an application to be created.
createApplicationResponse_configurationId :: Lens' CreateApplicationResponse (Maybe Text)

-- | The response's http status code.
createApplicationResponse_httpStatus :: Lens' CreateApplicationResponse Int
instance GHC.Generics.Generic Network.AWS.Discovery.CreateApplication.CreateApplication
instance GHC.Show.Show Network.AWS.Discovery.CreateApplication.CreateApplication
instance GHC.Read.Read Network.AWS.Discovery.CreateApplication.CreateApplication
instance GHC.Classes.Eq Network.AWS.Discovery.CreateApplication.CreateApplication
instance GHC.Generics.Generic Network.AWS.Discovery.CreateApplication.CreateApplicationResponse
instance GHC.Show.Show Network.AWS.Discovery.CreateApplication.CreateApplicationResponse
instance GHC.Read.Read Network.AWS.Discovery.CreateApplication.CreateApplicationResponse
instance GHC.Classes.Eq Network.AWS.Discovery.CreateApplication.CreateApplicationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Discovery.CreateApplication.CreateApplication
instance Control.DeepSeq.NFData Network.AWS.Discovery.CreateApplication.CreateApplicationResponse
instance Data.Hashable.Class.Hashable Network.AWS.Discovery.CreateApplication.CreateApplication
instance Control.DeepSeq.NFData Network.AWS.Discovery.CreateApplication.CreateApplication
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Discovery.CreateApplication.CreateApplication
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Discovery.CreateApplication.CreateApplication
instance Network.AWS.Data.Path.ToPath Network.AWS.Discovery.CreateApplication.CreateApplication
instance Network.AWS.Data.Query.ToQuery Network.AWS.Discovery.CreateApplication.CreateApplication


-- | Deletes one or more import tasks, each identified by their import ID.
--   Each import task has a number of records that can identify servers or
--   applications.
--   
--   AWS Application Discovery Service has built-in matching logic that
--   will identify when discovered servers match existing entries that
--   you've previously discovered, the information for the already-existing
--   discovered server is updated. When you delete an import task that
--   contains records that were used to match, the information in those
--   matched records that comes from the deleted records will also be
--   deleted.
module Network.AWS.Discovery.BatchDeleteImportData

-- | <i>See:</i> <a>newBatchDeleteImportData</a> smart constructor.
data BatchDeleteImportData
BatchDeleteImportData' :: NonEmpty Text -> BatchDeleteImportData

-- | The IDs for the import tasks that you want to delete.
[$sel:importTaskIds:BatchDeleteImportData'] :: BatchDeleteImportData -> NonEmpty Text

-- | Create a value of <a>BatchDeleteImportData</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:importTaskIds:BatchDeleteImportData'</a>,
--   <a>batchDeleteImportData_importTaskIds</a> - The IDs for the import
--   tasks that you want to delete.
newBatchDeleteImportData :: NonEmpty Text -> BatchDeleteImportData

-- | The IDs for the import tasks that you want to delete.
batchDeleteImportData_importTaskIds :: Lens' BatchDeleteImportData (NonEmpty Text)

-- | <i>See:</i> <a>newBatchDeleteImportDataResponse</a> smart constructor.
data BatchDeleteImportDataResponse
BatchDeleteImportDataResponse' :: Maybe [BatchDeleteImportDataError] -> Int -> BatchDeleteImportDataResponse

-- | Error messages returned for each import task that you deleted as a
--   response for this command.
[$sel:errors:BatchDeleteImportDataResponse'] :: BatchDeleteImportDataResponse -> Maybe [BatchDeleteImportDataError]

-- | The response's http status code.
[$sel:httpStatus:BatchDeleteImportDataResponse'] :: BatchDeleteImportDataResponse -> Int

-- | Create a value of <a>BatchDeleteImportDataResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errors:BatchDeleteImportDataResponse'</a>,
--   <a>batchDeleteImportDataResponse_errors</a> - Error messages returned
--   for each import task that you deleted as a response for this command.
--   
--   <a>$sel:httpStatus:BatchDeleteImportDataResponse'</a>,
--   <a>batchDeleteImportDataResponse_httpStatus</a> - The response's http
--   status code.
newBatchDeleteImportDataResponse :: Int -> BatchDeleteImportDataResponse

-- | Error messages returned for each import task that you deleted as a
--   response for this command.
batchDeleteImportDataResponse_errors :: Lens' BatchDeleteImportDataResponse (Maybe [BatchDeleteImportDataError])

-- | The response's http status code.
batchDeleteImportDataResponse_httpStatus :: Lens' BatchDeleteImportDataResponse Int
instance GHC.Generics.Generic Network.AWS.Discovery.BatchDeleteImportData.BatchDeleteImportData
instance GHC.Show.Show Network.AWS.Discovery.BatchDeleteImportData.BatchDeleteImportData
instance GHC.Read.Read Network.AWS.Discovery.BatchDeleteImportData.BatchDeleteImportData
instance GHC.Classes.Eq Network.AWS.Discovery.BatchDeleteImportData.BatchDeleteImportData
instance GHC.Generics.Generic Network.AWS.Discovery.BatchDeleteImportData.BatchDeleteImportDataResponse
instance GHC.Show.Show Network.AWS.Discovery.BatchDeleteImportData.BatchDeleteImportDataResponse
instance GHC.Read.Read Network.AWS.Discovery.BatchDeleteImportData.BatchDeleteImportDataResponse
instance GHC.Classes.Eq Network.AWS.Discovery.BatchDeleteImportData.BatchDeleteImportDataResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Discovery.BatchDeleteImportData.BatchDeleteImportData
instance Control.DeepSeq.NFData Network.AWS.Discovery.BatchDeleteImportData.BatchDeleteImportDataResponse
instance Data.Hashable.Class.Hashable Network.AWS.Discovery.BatchDeleteImportData.BatchDeleteImportData
instance Control.DeepSeq.NFData Network.AWS.Discovery.BatchDeleteImportData.BatchDeleteImportData
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Discovery.BatchDeleteImportData.BatchDeleteImportData
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Discovery.BatchDeleteImportData.BatchDeleteImportData
instance Network.AWS.Data.Path.ToPath Network.AWS.Discovery.BatchDeleteImportData.BatchDeleteImportData
instance Network.AWS.Data.Query.ToQuery Network.AWS.Discovery.BatchDeleteImportData.BatchDeleteImportData


-- | Associates one or more configuration items with an application.
module Network.AWS.Discovery.AssociateConfigurationItemsToApplication

-- | <i>See:</i> <a>newAssociateConfigurationItemsToApplication</a> smart
--   constructor.
data AssociateConfigurationItemsToApplication
AssociateConfigurationItemsToApplication' :: Text -> [Text] -> AssociateConfigurationItemsToApplication

-- | The configuration ID of an application with which items are to be
--   associated.
[$sel:applicationConfigurationId:AssociateConfigurationItemsToApplication'] :: AssociateConfigurationItemsToApplication -> Text

-- | The ID of each configuration item to be associated with an
--   application.
[$sel:configurationIds:AssociateConfigurationItemsToApplication'] :: AssociateConfigurationItemsToApplication -> [Text]

-- | Create a value of <a>AssociateConfigurationItemsToApplication</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:applicationConfigurationId:AssociateConfigurationItemsToApplication'</a>,
--   <a>associateConfigurationItemsToApplication_applicationConfigurationId</a>
--   - The configuration ID of an application with which items are to be
--   associated.
--   
--   
--   <a>$sel:configurationIds:AssociateConfigurationItemsToApplication'</a>,
--   <a>associateConfigurationItemsToApplication_configurationIds</a> - The
--   ID of each configuration item to be associated with an application.
newAssociateConfigurationItemsToApplication :: Text -> AssociateConfigurationItemsToApplication

-- | The configuration ID of an application with which items are to be
--   associated.
associateConfigurationItemsToApplication_applicationConfigurationId :: Lens' AssociateConfigurationItemsToApplication Text

-- | The ID of each configuration item to be associated with an
--   application.
associateConfigurationItemsToApplication_configurationIds :: Lens' AssociateConfigurationItemsToApplication [Text]

-- | <i>See:</i> <a>newAssociateConfigurationItemsToApplicationResponse</a>
--   smart constructor.
data AssociateConfigurationItemsToApplicationResponse
AssociateConfigurationItemsToApplicationResponse' :: Int -> AssociateConfigurationItemsToApplicationResponse

-- | The response's http status code.
[$sel:httpStatus:AssociateConfigurationItemsToApplicationResponse'] :: AssociateConfigurationItemsToApplicationResponse -> Int

-- | Create a value of
--   <a>AssociateConfigurationItemsToApplicationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:httpStatus:AssociateConfigurationItemsToApplicationResponse'</a>,
--   <a>associateConfigurationItemsToApplicationResponse_httpStatus</a> -
--   The response's http status code.
newAssociateConfigurationItemsToApplicationResponse :: Int -> AssociateConfigurationItemsToApplicationResponse

-- | The response's http status code.
associateConfigurationItemsToApplicationResponse_httpStatus :: Lens' AssociateConfigurationItemsToApplicationResponse Int
instance GHC.Generics.Generic Network.AWS.Discovery.AssociateConfigurationItemsToApplication.AssociateConfigurationItemsToApplication
instance GHC.Show.Show Network.AWS.Discovery.AssociateConfigurationItemsToApplication.AssociateConfigurationItemsToApplication
instance GHC.Read.Read Network.AWS.Discovery.AssociateConfigurationItemsToApplication.AssociateConfigurationItemsToApplication
instance GHC.Classes.Eq Network.AWS.Discovery.AssociateConfigurationItemsToApplication.AssociateConfigurationItemsToApplication
instance GHC.Generics.Generic Network.AWS.Discovery.AssociateConfigurationItemsToApplication.AssociateConfigurationItemsToApplicationResponse
instance GHC.Show.Show Network.AWS.Discovery.AssociateConfigurationItemsToApplication.AssociateConfigurationItemsToApplicationResponse
instance GHC.Read.Read Network.AWS.Discovery.AssociateConfigurationItemsToApplication.AssociateConfigurationItemsToApplicationResponse
instance GHC.Classes.Eq Network.AWS.Discovery.AssociateConfigurationItemsToApplication.AssociateConfigurationItemsToApplicationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Discovery.AssociateConfigurationItemsToApplication.AssociateConfigurationItemsToApplication
instance Control.DeepSeq.NFData Network.AWS.Discovery.AssociateConfigurationItemsToApplication.AssociateConfigurationItemsToApplicationResponse
instance Data.Hashable.Class.Hashable Network.AWS.Discovery.AssociateConfigurationItemsToApplication.AssociateConfigurationItemsToApplication
instance Control.DeepSeq.NFData Network.AWS.Discovery.AssociateConfigurationItemsToApplication.AssociateConfigurationItemsToApplication
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Discovery.AssociateConfigurationItemsToApplication.AssociateConfigurationItemsToApplication
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Discovery.AssociateConfigurationItemsToApplication.AssociateConfigurationItemsToApplication
instance Network.AWS.Data.Path.ToPath Network.AWS.Discovery.AssociateConfigurationItemsToApplication.AssociateConfigurationItemsToApplication
instance Network.AWS.Data.Query.ToQuery Network.AWS.Discovery.AssociateConfigurationItemsToApplication.AssociateConfigurationItemsToApplication


-- | Updates metadata about an application.
module Network.AWS.Discovery.UpdateApplication

-- | <i>See:</i> <a>newUpdateApplication</a> smart constructor.
data UpdateApplication
UpdateApplication' :: Maybe Text -> Maybe Text -> Text -> UpdateApplication

-- | New name of the application to be updated.
[$sel:name:UpdateApplication'] :: UpdateApplication -> Maybe Text

-- | New description of the application to be updated.
[$sel:description:UpdateApplication'] :: UpdateApplication -> Maybe Text

-- | Configuration ID of the application to be updated.
[$sel:configurationId:UpdateApplication'] :: UpdateApplication -> Text

-- | Create a value of <a>UpdateApplication</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:UpdateApplication'</a>, <a>updateApplication_name</a> -
--   New name of the application to be updated.
--   
--   <a>$sel:description:UpdateApplication'</a>,
--   <a>updateApplication_description</a> - New description of the
--   application to be updated.
--   
--   <a>$sel:configurationId:UpdateApplication'</a>,
--   <a>updateApplication_configurationId</a> - Configuration ID of the
--   application to be updated.
newUpdateApplication :: Text -> UpdateApplication

-- | New name of the application to be updated.
updateApplication_name :: Lens' UpdateApplication (Maybe Text)

-- | New description of the application to be updated.
updateApplication_description :: Lens' UpdateApplication (Maybe Text)

-- | Configuration ID of the application to be updated.
updateApplication_configurationId :: Lens' UpdateApplication Text

-- | <i>See:</i> <a>newUpdateApplicationResponse</a> smart constructor.
data UpdateApplicationResponse
UpdateApplicationResponse' :: Int -> UpdateApplicationResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateApplicationResponse'] :: UpdateApplicationResponse -> Int

-- | Create a value of <a>UpdateApplicationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateApplicationResponse'</a>,
--   <a>updateApplicationResponse_httpStatus</a> - The response's http
--   status code.
newUpdateApplicationResponse :: Int -> UpdateApplicationResponse

-- | The response's http status code.
updateApplicationResponse_httpStatus :: Lens' UpdateApplicationResponse Int
instance GHC.Generics.Generic Network.AWS.Discovery.UpdateApplication.UpdateApplication
instance GHC.Show.Show Network.AWS.Discovery.UpdateApplication.UpdateApplication
instance GHC.Read.Read Network.AWS.Discovery.UpdateApplication.UpdateApplication
instance GHC.Classes.Eq Network.AWS.Discovery.UpdateApplication.UpdateApplication
instance GHC.Generics.Generic Network.AWS.Discovery.UpdateApplication.UpdateApplicationResponse
instance GHC.Show.Show Network.AWS.Discovery.UpdateApplication.UpdateApplicationResponse
instance GHC.Read.Read Network.AWS.Discovery.UpdateApplication.UpdateApplicationResponse
instance GHC.Classes.Eq Network.AWS.Discovery.UpdateApplication.UpdateApplicationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Discovery.UpdateApplication.UpdateApplication
instance Control.DeepSeq.NFData Network.AWS.Discovery.UpdateApplication.UpdateApplicationResponse
instance Data.Hashable.Class.Hashable Network.AWS.Discovery.UpdateApplication.UpdateApplication
instance Control.DeepSeq.NFData Network.AWS.Discovery.UpdateApplication.UpdateApplication
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Discovery.UpdateApplication.UpdateApplication
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Discovery.UpdateApplication.UpdateApplication
instance Network.AWS.Data.Path.ToPath Network.AWS.Discovery.UpdateApplication.UpdateApplication
instance Network.AWS.Data.Query.ToQuery Network.AWS.Discovery.UpdateApplication.UpdateApplication


module Network.AWS.Discovery.Lens

-- | You can filter the list using a <i>key</i>-<i>value</i> format. You
--   can separate these items by using logical operators. Allowed filters
--   include <tt>tagKey</tt>, <tt>tagValue</tt>, and
--   <tt>configurationId</tt>.
describeTags_filters :: Lens' DescribeTags (Maybe [TagFilter])

-- | A token to start the list. Use this token to get the next set of
--   results.
describeTags_nextToken :: Lens' DescribeTags (Maybe Text)

-- | The total number of items to return in a single page of output. The
--   maximum value is 100.
describeTags_maxResults :: Lens' DescribeTags (Maybe Int)

-- | The call returns a token. Use this token to get the next set of
--   results.
describeTagsResponse_nextToken :: Lens' DescribeTagsResponse (Maybe Text)

-- | Depending on the input, this is a list of configuration items tagged
--   with a specific tag, or a list of tags for a specific configuration
--   item.
describeTagsResponse_tags :: Lens' DescribeTagsResponse (Maybe [ConfigurationTag])

-- | The response's http status code.
describeTagsResponse_httpStatus :: Lens' DescribeTagsResponse Int

-- | The token from the previous call to <tt>DescribeExportTasks</tt>.
describeContinuousExports_nextToken :: Lens' DescribeContinuousExports (Maybe Text)

-- | The unique IDs assigned to the exports.
describeContinuousExports_exportIds :: Lens' DescribeContinuousExports (Maybe [Text])

-- | A number between 1 and 100 specifying the maximum number of continuous
--   export descriptions returned.
describeContinuousExports_maxResults :: Lens' DescribeContinuousExports (Maybe Natural)

-- | The token from the previous call to <tt>DescribeExportTasks</tt>.
describeContinuousExportsResponse_nextToken :: Lens' DescribeContinuousExportsResponse (Maybe Text)

-- | A list of continuous export descriptions.
describeContinuousExportsResponse_descriptions :: Lens' DescribeContinuousExportsResponse (Maybe [ContinuousExportDescription])

-- | The response's http status code.
describeContinuousExportsResponse_httpStatus :: Lens' DescribeContinuousExportsResponse Int

-- | The IDs of the agents or connectors from which to stop collecting
--   data.
stopDataCollectionByAgentIds_agentIds :: Lens' StopDataCollectionByAgentIds [Text]

-- | Information about the agents or connector that were instructed to stop
--   collecting data. Information includes the agent/connector ID, a
--   description of the operation performed, and whether the
--   agent/connector configuration was updated.
stopDataCollectionByAgentIdsResponse_agentsConfigurationStatus :: Lens' StopDataCollectionByAgentIdsResponse (Maybe [AgentConfigurationStatus])

-- | The response's http status code.
stopDataCollectionByAgentIdsResponse_httpStatus :: Lens' StopDataCollectionByAgentIdsResponse Int

-- | A list of configuration items that you want to tag.
createTags_configurationIds :: Lens' CreateTags [Text]

-- | Tags that you want to associate with one or more configuration items.
--   Specify the tags that you want to create in a <i>key</i>-<i>value</i>
--   format. For example:
--   
--   <pre>
--   {"key": "serverType", "value": "webServer"}
--   </pre>
createTags_tags :: Lens' CreateTags [Tag]

-- | The response's http status code.
createTagsResponse_httpStatus :: Lens' CreateTagsResponse Int

-- | The IDs for the import tasks that you want to delete.
batchDeleteImportData_importTaskIds :: Lens' BatchDeleteImportData (NonEmpty Text)

-- | Error messages returned for each import task that you deleted as a
--   response for this command.
batchDeleteImportDataResponse_errors :: Lens' BatchDeleteImportDataResponse (Maybe [BatchDeleteImportDataError])

-- | The response's http status code.
batchDeleteImportDataResponse_httpStatus :: Lens' BatchDeleteImportDataResponse Int

-- | Tags that you want to delete from one or more configuration items.
--   Specify the tags that you want to delete in a <i>key</i>-<i>value</i>
--   format. For example:
--   
--   <pre>
--   {"key": "serverType", "value": "webServer"}
--   </pre>
deleteTags_tags :: Lens' DeleteTags (Maybe [Tag])

-- | A list of configuration items with tags that you want to delete.
deleteTags_configurationIds :: Lens' DeleteTags [Text]

-- | The response's http status code.
deleteTagsResponse_httpStatus :: Lens' DeleteTagsResponse Int

-- | Optional. A unique token that you can provide to prevent the same
--   import request from occurring more than once. If you don't provide a
--   token, a token is automatically generated.
--   
--   Sending more than one <tt>StartImportTask</tt> request with the same
--   client request token will return information about the original import
--   task with that client request token.
startImportTask_clientRequestToken :: Lens' StartImportTask (Maybe Text)

-- | A descriptive name for this request. You can use this name to filter
--   future requests related to this import task, such as identifying
--   applications and servers that were included in this import task. We
--   recommend that you use a meaningful name for each import task.
startImportTask_name :: Lens' StartImportTask Text

-- | The URL for your import file that you've uploaded to Amazon S3.
--   
--   If you're using the AWS CLI, this URL is structured as follows:
--   <tt>s3://BucketName/ImportFileName.CSV</tt>
startImportTask_importUrl :: Lens' StartImportTask Text

-- | An array of information related to the import task request including
--   status information, times, IDs, the Amazon S3 Object URL for the
--   import file, and more.
startImportTaskResponse_task :: Lens' StartImportTaskResponse (Maybe ImportTask)

-- | The response's http status code.
startImportTaskResponse_httpStatus :: Lens' StartImportTaskResponse Int

-- | Configuration ID of an application to be deleted.
deleteApplications_configurationIds :: Lens' DeleteApplications [Text]

-- | The response's http status code.
deleteApplicationsResponse_httpStatus :: Lens' DeleteApplicationsResponse Int

-- | New name of the application to be updated.
updateApplication_name :: Lens' UpdateApplication (Maybe Text)

-- | New description of the application to be updated.
updateApplication_description :: Lens' UpdateApplication (Maybe Text)

-- | Configuration ID of the application to be updated.
updateApplication_configurationId :: Lens' UpdateApplication Text

-- | The response's http status code.
updateApplicationResponse_httpStatus :: Lens' UpdateApplicationResponse Int

-- | One or more configuration IDs.
describeConfigurations_configurationIds :: Lens' DescribeConfigurations [Text]

-- | A key in the response map. The value is an array of data.
describeConfigurationsResponse_configurations :: Lens' DescribeConfigurationsResponse (Maybe [HashMap Text Text])

-- | The response's http status code.
describeConfigurationsResponse_httpStatus :: Lens' DescribeConfigurationsResponse Int

-- | An array of name-value pairs that you provide to filter the results
--   for the <tt>DescribeImportTask</tt> request to a specific subset of
--   results. Currently, wildcard values aren't supported for filters.
describeImportTasks_filters :: Lens' DescribeImportTasks (Maybe [ImportTaskFilter])

-- | The token to request a specific page of results.
describeImportTasks_nextToken :: Lens' DescribeImportTasks (Maybe Text)

-- | The maximum number of results that you want this request to return, up
--   to 100.
describeImportTasks_maxResults :: Lens' DescribeImportTasks (Maybe Natural)

-- | A returned array of import tasks that match any applied filters, up to
--   the specified number of maximum results.
describeImportTasksResponse_tasks :: Lens' DescribeImportTasksResponse (Maybe [ImportTask])

-- | The token to request the next page of results.
describeImportTasksResponse_nextToken :: Lens' DescribeImportTasksResponse (Maybe Text)

-- | The response's http status code.
describeImportTasksResponse_httpStatus :: Lens' DescribeImportTasksResponse Int

-- | Description of the application to be created.
createApplication_description :: Lens' CreateApplication (Maybe Text)

-- | Name of the application to be created.
createApplication_name :: Lens' CreateApplication Text

-- | Configuration ID of an application to be created.
createApplicationResponse_configurationId :: Lens' CreateApplicationResponse (Maybe Text)

-- | The response's http status code.
createApplicationResponse_httpStatus :: Lens' CreateApplicationResponse Int

-- | Certain filter criteria return output that can be sorted in ascending
--   or descending order. For a list of output characteristics for each
--   filter, see <a>Using the ListConfigurations Action</a> in the <i>AWS
--   Application Discovery Service User Guide</i>.
listConfigurations_orderBy :: Lens' ListConfigurations (Maybe [OrderByElement])

-- | You can filter the request using various logical operators and a
--   <i>key</i>-<i>value</i> format. For example:
--   
--   <pre>
--   {"key": "serverType", "value": "webServer"}
--   </pre>
--   
--   For a complete list of filter options and guidance about using them
--   with this action, see <a>Using the ListConfigurations Action</a> in
--   the <i>AWS Application Discovery Service User Guide</i>.
listConfigurations_filters :: Lens' ListConfigurations (Maybe [Filter])

-- | Token to retrieve the next set of results. For example, if a previous
--   call to ListConfigurations returned 100 items, but you set
--   <tt>ListConfigurationsRequest$maxResults</tt> to 10, you received a
--   set of 10 results along with a token. Use that token in this query to
--   get the next set of 10.
listConfigurations_nextToken :: Lens' ListConfigurations (Maybe Text)

-- | The total number of items to return. The maximum value is 100.
listConfigurations_maxResults :: Lens' ListConfigurations (Maybe Int)

-- | A valid configuration identified by Application Discovery Service.
listConfigurations_configurationType :: Lens' ListConfigurations ConfigurationItemType

-- | Returns configuration details, including the configuration ID,
--   attribute names, and attribute values.
listConfigurationsResponse_configurations :: Lens' ListConfigurationsResponse (Maybe [HashMap Text Text])

-- | Token to retrieve the next set of results. For example, if your call
--   to ListConfigurations returned 100 items, but you set
--   <tt>ListConfigurationsRequest$maxResults</tt> to 10, you received a
--   set of 10 results along with this token. Use this token in the next
--   query to retrieve the next set of 10.
listConfigurationsResponse_nextToken :: Lens' ListConfigurationsResponse (Maybe Text)

-- | The response's http status code.
listConfigurationsResponse_httpStatus :: Lens' ListConfigurationsResponse Int

-- | The timestamp representing when the continuous export was started.
startContinuousExportResponse_startTime :: Lens' StartContinuousExportResponse (Maybe UTCTime)

-- | A dictionary which describes how the data is stored.
--   
--   <ul>
--   <li><tt>databaseName</tt> - the name of the Glue database used to
--   store the schema.</li>
--   </ul>
startContinuousExportResponse_schemaStorageConfig :: Lens' StartContinuousExportResponse (Maybe (HashMap Text Text))

-- | The type of data collector used to gather this data (currently only
--   offered for AGENT).
startContinuousExportResponse_dataSource :: Lens' StartContinuousExportResponse (Maybe DataSource)

-- | The name of the s3 bucket where the export data parquet files are
--   stored.
startContinuousExportResponse_s3Bucket :: Lens' StartContinuousExportResponse (Maybe Text)

-- | The unique ID assigned to this export.
startContinuousExportResponse_exportId :: Lens' StartContinuousExportResponse (Maybe Text)

-- | The response's http status code.
startContinuousExportResponse_httpStatus :: Lens' StartContinuousExportResponse Int

-- | The agent or the Connector IDs for which you want information. If you
--   specify no IDs, the system returns information about all
--   agents/Connectors associated with your AWS user account.
describeAgents_agentIds :: Lens' DescribeAgents (Maybe [Text])

-- | You can filter the request using various logical operators and a
--   <i>key</i>-<i>value</i> format. For example:
--   
--   <pre>
--   {"key": "collectionStatus", "value": "STARTED"}
--   </pre>
describeAgents_filters :: Lens' DescribeAgents (Maybe [Filter])

-- | Token to retrieve the next set of results. For example, if you
--   previously specified 100 IDs for
--   <tt>DescribeAgentsRequest$agentIds</tt> but set
--   <tt>DescribeAgentsRequest$maxResults</tt> to 10, you received a set of
--   10 results along with a token. Use that token in this query to get the
--   next set of 10.
describeAgents_nextToken :: Lens' DescribeAgents (Maybe Text)

-- | The total number of agents/Connectors to return in a single page of
--   output. The maximum value is 100.
describeAgents_maxResults :: Lens' DescribeAgents (Maybe Int)

-- | Lists agents or the Connector by ID or lists all agents/Connectors
--   associated with your user account if you did not specify an
--   agent/Connector ID. The output includes agent/Connector IDs, IP
--   addresses, media access control (MAC) addresses, agent/Connector
--   health, host name where the agent/Connector resides, and the version
--   number of each agent/Connector.
describeAgentsResponse_agentsInfo :: Lens' DescribeAgentsResponse (Maybe [AgentInfo])

-- | Token to retrieve the next set of results. For example, if you
--   specified 100 IDs for <tt>DescribeAgentsRequest$agentIds</tt> but set
--   <tt>DescribeAgentsRequest$maxResults</tt> to 10, you received a set of
--   10 results along with this token. Use this token in the next query to
--   retrieve the next set of 10.
describeAgentsResponse_nextToken :: Lens' DescribeAgentsResponse (Maybe Text)

-- | The response's http status code.
describeAgentsResponse_httpStatus :: Lens' DescribeAgentsResponse Int

-- | One or more filters.
--   
--   <ul>
--   <li><tt>AgentId</tt> - ID of the agent whose collected data will be
--   exported</li>
--   </ul>
describeExportTasks_filters :: Lens' DescribeExportTasks (Maybe [ExportFilter])

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>DescribeExportTasks</tt> request where <tt>maxResults</tt> was
--   used and the results exceeded the value of that parameter. Pagination
--   continues from the end of the previous results that returned the
--   <tt>nextToken</tt> value. This value is null when there are no more
--   results to return.
describeExportTasks_nextToken :: Lens' DescribeExportTasks (Maybe Text)

-- | One or more unique identifiers used to query the status of an export
--   request.
describeExportTasks_exportIds :: Lens' DescribeExportTasks (Maybe [Text])

-- | The maximum number of volume results returned by
--   <tt>DescribeExportTasks</tt> in paginated output. When this parameter
--   is used, <tt>DescribeExportTasks</tt> only returns <tt>maxResults</tt>
--   results in a single page along with a <tt>nextToken</tt> response
--   element.
describeExportTasks_maxResults :: Lens' DescribeExportTasks (Maybe Int)

-- | The <tt>nextToken</tt> value to include in a future
--   <tt>DescribeExportTasks</tt> request. When the results of a
--   <tt>DescribeExportTasks</tt> request exceed <tt>maxResults</tt>, this
--   value can be used to retrieve the next page of results. This value is
--   null when there are no more results to return.
describeExportTasksResponse_nextToken :: Lens' DescribeExportTasksResponse (Maybe Text)

-- | Contains one or more sets of export request details. When the status
--   of a request is <tt>SUCCEEDED</tt>, the response includes a URL for an
--   Amazon S3 bucket where you can view the data in a CSV file.
describeExportTasksResponse_exportsInfo :: Lens' DescribeExportTasksResponse (Maybe [ExportInfo])

-- | The response's http status code.
describeExportTasksResponse_httpStatus :: Lens' DescribeExportTasksResponse Int

-- | The IDs of the agents or connectors from which to start collecting
--   data. If you send a request to an agent/connector ID that you do not
--   have permission to contact, according to your AWS account, the service
--   does not throw an exception. Instead, it returns the error in the
--   <i>Description</i> field. If you send a request to multiple
--   agents/connectors and you do not have permission to contact some of
--   those agents/connectors, the system does not throw an exception.
--   Instead, the system shows <tt>Failed</tt> in the <i>Description</i>
--   field.
startDataCollectionByAgentIds_agentIds :: Lens' StartDataCollectionByAgentIds [Text]

-- | Information about agents or the connector that were instructed to
--   start collecting data. Information includes the agent/connector ID, a
--   description of the operation performed, and whether the
--   agent/connector configuration was updated.
startDataCollectionByAgentIdsResponse_agentsConfigurationStatus :: Lens' StartDataCollectionByAgentIdsResponse (Maybe [AgentConfigurationStatus])

-- | The response's http status code.
startDataCollectionByAgentIdsResponse_httpStatus :: Lens' StartDataCollectionByAgentIdsResponse Int

-- | The number of servers discovered.
getDiscoverySummaryResponse_servers :: Lens' GetDiscoverySummaryResponse (Maybe Integer)

-- | The number of servers mapped to tags.
getDiscoverySummaryResponse_serversMappedtoTags :: Lens' GetDiscoverySummaryResponse (Maybe Integer)

-- | The number of servers mapped to applications.
getDiscoverySummaryResponse_serversMappedToApplications :: Lens' GetDiscoverySummaryResponse (Maybe Integer)

-- | Details about discovered connectors, including connector status and
--   health.
getDiscoverySummaryResponse_connectorSummary :: Lens' GetDiscoverySummaryResponse (Maybe CustomerConnectorInfo)

-- | Details about discovered agents, including agent status and health.
getDiscoverySummaryResponse_agentSummary :: Lens' GetDiscoverySummaryResponse (Maybe CustomerAgentInfo)

-- | The number of applications discovered.
getDiscoverySummaryResponse_applications :: Lens' GetDiscoverySummaryResponse (Maybe Integer)

-- | The response's http status code.
getDiscoverySummaryResponse_httpStatus :: Lens' GetDiscoverySummaryResponse Int

-- | Configuration ID of an application from which each item is
--   disassociated.
disassociateConfigurationItemsFromApplication_applicationConfigurationId :: Lens' DisassociateConfigurationItemsFromApplication Text

-- | Configuration ID of each item to be disassociated from an application.
disassociateConfigurationItemsFromApplication_configurationIds :: Lens' DisassociateConfigurationItemsFromApplication [Text]

-- | The response's http status code.
disassociateConfigurationItemsFromApplicationResponse_httpStatus :: Lens' DisassociateConfigurationItemsFromApplicationResponse Int

-- | The configuration ID of an application with which items are to be
--   associated.
associateConfigurationItemsToApplication_applicationConfigurationId :: Lens' AssociateConfigurationItemsToApplication Text

-- | The ID of each configuration item to be associated with an
--   application.
associateConfigurationItemsToApplication_configurationIds :: Lens' AssociateConfigurationItemsToApplication [Text]

-- | The response's http status code.
associateConfigurationItemsToApplicationResponse_httpStatus :: Lens' AssociateConfigurationItemsToApplicationResponse Int

-- | Flag to indicate if port and protocol information is needed as part of
--   the response.
listServerNeighbors_portInformationNeeded :: Lens' ListServerNeighbors (Maybe Bool)

-- | List of configuration IDs to test for one-hop-away.
listServerNeighbors_neighborConfigurationIds :: Lens' ListServerNeighbors (Maybe [Text])

-- | Token to retrieve the next set of results. For example, if you
--   previously specified 100 IDs for
--   <tt>ListServerNeighborsRequest$neighborConfigurationIds</tt> but set
--   <tt>ListServerNeighborsRequest$maxResults</tt> to 10, you received a
--   set of 10 results along with a token. Use that token in this query to
--   get the next set of 10.
listServerNeighbors_nextToken :: Lens' ListServerNeighbors (Maybe Text)

-- | Maximum number of results to return in a single page of output.
listServerNeighbors_maxResults :: Lens' ListServerNeighbors (Maybe Int)

-- | Configuration ID of the server for which neighbors are being listed.
listServerNeighbors_configurationId :: Lens' ListServerNeighbors Text

-- | Token to retrieve the next set of results. For example, if you
--   specified 100 IDs for
--   <tt>ListServerNeighborsRequest$neighborConfigurationIds</tt> but set
--   <tt>ListServerNeighborsRequest$maxResults</tt> to 10, you received a
--   set of 10 results along with this token. Use this token in the next
--   query to retrieve the next set of 10.
listServerNeighborsResponse_nextToken :: Lens' ListServerNeighborsResponse (Maybe Text)

-- | Count of distinct servers that are one hop away from the given server.
listServerNeighborsResponse_knownDependencyCount :: Lens' ListServerNeighborsResponse (Maybe Integer)

-- | The response's http status code.
listServerNeighborsResponse_httpStatus :: Lens' ListServerNeighborsResponse Int

-- | List of distinct servers that are one hop away from the given server.
listServerNeighborsResponse_neighbors :: Lens' ListServerNeighborsResponse [NeighborConnectionDetail]

-- | The unique ID assigned to this export.
stopContinuousExport_exportId :: Lens' StopContinuousExport Text

-- | Timestamp that represents when this continuous export started
--   collecting data.
stopContinuousExportResponse_startTime :: Lens' StopContinuousExportResponse (Maybe UTCTime)

-- | Timestamp that represents when this continuous export was stopped.
stopContinuousExportResponse_stopTime :: Lens' StopContinuousExportResponse (Maybe UTCTime)

-- | The response's http status code.
stopContinuousExportResponse_httpStatus :: Lens' StopContinuousExportResponse Int

-- | The file format for the returned export data. Default value is
--   <tt>CSV</tt>. <b>Note:</b> <i>The</i> <tt>GRAPHML</tt> <i>option has
--   been deprecated.</i>
startExportTask_exportDataFormat :: Lens' StartExportTask (Maybe [ExportDataFormat])

-- | The start timestamp for exported data from the single Application
--   Discovery Agent selected in the filters. If no value is specified,
--   data is exported starting from the first data collected by the agent.
startExportTask_startTime :: Lens' StartExportTask (Maybe UTCTime)

-- | If a filter is present, it selects the single <tt>agentId</tt> of the
--   Application Discovery Agent for which data is exported. The
--   <tt>agentId</tt> can be found in the results of the
--   <tt>DescribeAgents</tt> API or CLI. If no filter is present,
--   <tt>startTime</tt> and <tt>endTime</tt> are ignored and exported data
--   includes both Agentless Discovery Connector data and summary data from
--   Application Discovery agents.
startExportTask_filters :: Lens' StartExportTask (Maybe [ExportFilter])

-- | The end timestamp for exported data from the single Application
--   Discovery Agent selected in the filters. If no value is specified,
--   exported data includes the most recent data collected by the agent.
startExportTask_endTime :: Lens' StartExportTask (Maybe UTCTime)

-- | A unique identifier used to query the status of an export request.
startExportTaskResponse_exportId :: Lens' StartExportTaskResponse (Maybe Text)

-- | The response's http status code.
startExportTaskResponse_httpStatus :: Lens' StartExportTaskResponse Int

-- | The agent/connector ID.
agentConfigurationStatus_agentId :: Lens' AgentConfigurationStatus (Maybe Text)

-- | Information about the status of the <tt>StartDataCollection</tt> and
--   <tt>StopDataCollection</tt> operations. The system has recorded the
--   data collection operation. The agent/connector receives this command
--   the next time it polls for a new command.
agentConfigurationStatus_operationSucceeded :: Lens' AgentConfigurationStatus (Maybe Bool)

-- | A description of the operation performed.
agentConfigurationStatus_description :: Lens' AgentConfigurationStatus (Maybe Text)

-- | The name of the host where the agent or connector resides. The host
--   can be a server or virtual machine.
agentInfo_hostName :: Lens' AgentInfo (Maybe Text)

-- | Time since agent or connector health was reported.
agentInfo_lastHealthPingTime :: Lens' AgentInfo (Maybe Text)

-- | Network details about the host where the agent or connector resides.
agentInfo_agentNetworkInfoList :: Lens' AgentInfo (Maybe [AgentNetworkInfo])

-- | The ID of the connector.
agentInfo_connectorId :: Lens' AgentInfo (Maybe Text)

-- | The health of the agent or connector.
agentInfo_health :: Lens' AgentInfo (Maybe AgentStatus)

-- | The agent or connector ID.
agentInfo_agentId :: Lens' AgentInfo (Maybe Text)

-- | The agent or connector version.
agentInfo_version :: Lens' AgentInfo (Maybe Text)

-- | Status of the collection process for an agent or connector.
agentInfo_collectionStatus :: Lens' AgentInfo (Maybe Text)

-- | Agent's first registration timestamp in UTC.
agentInfo_registeredTime :: Lens' AgentInfo (Maybe Text)

-- | Type of agent.
agentInfo_agentType :: Lens' AgentInfo (Maybe Text)

-- | The IP address for the host where the agent/connector resides.
agentNetworkInfo_ipAddress :: Lens' AgentNetworkInfo (Maybe Text)

-- | The MAC address for the host where the agent/connector resides.
agentNetworkInfo_macAddress :: Lens' AgentNetworkInfo (Maybe Text)

-- | The unique import ID associated with the error that occurred.
batchDeleteImportDataError_importTaskId :: Lens' BatchDeleteImportDataError (Maybe Text)

-- | The type of error that occurred for a specific import task.
batchDeleteImportDataError_errorCode :: Lens' BatchDeleteImportDataError (Maybe BatchDeleteImportDataErrorCode)

-- | The description of the error that occurred for a specific import task.
batchDeleteImportDataError_errorDescription :: Lens' BatchDeleteImportDataError (Maybe Text)

-- | The time the configuration tag was created in Coordinated Universal
--   Time (UTC).
configurationTag_timeOfCreation :: Lens' ConfigurationTag (Maybe UTCTime)

-- | The configuration ID for the item to tag. You can specify a list of
--   keys and values.
configurationTag_configurationId :: Lens' ConfigurationTag (Maybe Text)

-- | A type of IT asset to tag.
configurationTag_configurationType :: Lens' ConfigurationTag (Maybe ConfigurationItemType)

-- | A value on which to filter. For example <i>key = serverType</i> and
--   /value = web server/.
configurationTag_value :: Lens' ConfigurationTag (Maybe Text)

-- | A type of tag on which to filter. For example, <i>serverType</i>.
configurationTag_key :: Lens' ConfigurationTag (Maybe Text)

-- | Describes the status of the export. Can be one of the following
--   values:
--   
--   <ul>
--   <li>START_IN_PROGRESS - setting up resources to start continuous
--   export.</li>
--   <li>START_FAILED - an error occurred setting up continuous export. To
--   recover, call start-continuous-export again.</li>
--   <li>ACTIVE - data is being exported to the customer bucket.</li>
--   <li>ERROR - an error occurred during export. To fix the issue, call
--   stop-continuous-export and start-continuous-export.</li>
--   <li>STOP_IN_PROGRESS - stopping the export.</li>
--   <li>STOP_FAILED - an error occurred stopping the export. To recover,
--   call stop-continuous-export again.</li>
--   <li>INACTIVE - the continuous export has been stopped. Data is no
--   longer being exported to the customer bucket.</li>
--   </ul>
continuousExportDescription_status :: Lens' ContinuousExportDescription (Maybe ContinuousExportStatus)

-- | The timestamp representing when the continuous export was started.
continuousExportDescription_startTime :: Lens' ContinuousExportDescription (Maybe UTCTime)

-- | An object which describes how the data is stored.
--   
--   <ul>
--   <li><tt>databaseName</tt> - the name of the Glue database used to
--   store the schema.</li>
--   </ul>
continuousExportDescription_schemaStorageConfig :: Lens' ContinuousExportDescription (Maybe (HashMap Text Text))

-- | Contains information about any errors that have occurred. This data
--   type can have the following values:
--   
--   <ul>
--   <li>ACCESS_DENIED - You donâ€™t have permission to start Data
--   Exploration in Amazon Athena. Contact your AWS administrator for help.
--   For more information, see <a>Setting Up AWS Application Discovery
--   Service</a> in the Application Discovery Service User Guide.</li>
--   <li>DELIVERY_STREAM_LIMIT_FAILURE - You reached the limit for Amazon
--   Kinesis Data Firehose delivery streams. Reduce the number of streams
--   or request a limit increase and try again. For more information, see
--   <a>Kinesis Data Streams Limits</a> in the Amazon Kinesis Data Streams
--   Developer Guide.</li>
--   <li>FIREHOSE_ROLE_MISSING - The Data Exploration feature is in an
--   error state because your IAM User is missing the
--   AWSApplicationDiscoveryServiceFirehose role. Turn on Data Exploration
--   in Amazon Athena and try again. For more information, see <a>Step 3:
--   Provide Application Discovery Service Access to Non-Administrator
--   Users by Attaching Policies</a> in the Application Discovery Service
--   User Guide.</li>
--   <li>FIREHOSE_STREAM_DOES_NOT_EXIST - The Data Exploration feature is
--   in an error state because your IAM User is missing one or more of the
--   Kinesis data delivery streams.</li>
--   <li>INTERNAL_FAILURE - The Data Exploration feature is in an error
--   state because of an internal failure. Try again later. If this problem
--   persists, contact AWS Support.</li>
--   <li>S3_BUCKET_LIMIT_FAILURE - You reached the limit for Amazon S3
--   buckets. Reduce the number of Amazon S3 buckets or request a limit
--   increase and try again. For more information, see <a>Bucket
--   Restrictions and Limitations</a> in the Amazon Simple Storage Service
--   Developer Guide.</li>
--   <li>S3_NOT_SIGNED_UP - Your account is not signed up for the Amazon S3
--   service. You must sign up before you can use Amazon S3. You can sign
--   up at the following URL: <a>https://aws.amazon.com/s3</a>.</li>
--   </ul>
continuousExportDescription_statusDetail :: Lens' ContinuousExportDescription (Maybe Text)

-- | The timestamp that represents when this continuous export was stopped.
continuousExportDescription_stopTime :: Lens' ContinuousExportDescription (Maybe UTCTime)

-- | The type of data collector used to gather this data (currently only
--   offered for AGENT).
continuousExportDescription_dataSource :: Lens' ContinuousExportDescription (Maybe DataSource)

-- | The name of the s3 bucket where the export data parquet files are
--   stored.
continuousExportDescription_s3Bucket :: Lens' ContinuousExportDescription (Maybe Text)

-- | The unique ID assigned to this export.
continuousExportDescription_exportId :: Lens' ContinuousExportDescription (Maybe Text)

-- | Number of active discovery agents.
customerAgentInfo_activeAgents :: Lens' CustomerAgentInfo Int

-- | Number of healthy discovery agents
customerAgentInfo_healthyAgents :: Lens' CustomerAgentInfo Int

-- | Number of blacklisted discovery agents.
customerAgentInfo_blackListedAgents :: Lens' CustomerAgentInfo Int

-- | Number of discovery agents with status SHUTDOWN.
customerAgentInfo_shutdownAgents :: Lens' CustomerAgentInfo Int

-- | Number of unhealthy discovery agents.
customerAgentInfo_unhealthyAgents :: Lens' CustomerAgentInfo Int

-- | Total number of discovery agents.
customerAgentInfo_totalAgents :: Lens' CustomerAgentInfo Int

-- | Number of unknown discovery agents.
customerAgentInfo_unknownAgents :: Lens' CustomerAgentInfo Int

-- | Number of active discovery connectors.
customerConnectorInfo_activeConnectors :: Lens' CustomerConnectorInfo Int

-- | Number of healthy discovery connectors.
customerConnectorInfo_healthyConnectors :: Lens' CustomerConnectorInfo Int

-- | Number of blacklisted discovery connectors.
customerConnectorInfo_blackListedConnectors :: Lens' CustomerConnectorInfo Int

-- | Number of discovery connectors with status SHUTDOWN,
customerConnectorInfo_shutdownConnectors :: Lens' CustomerConnectorInfo Int

-- | Number of unhealthy discovery connectors.
customerConnectorInfo_unhealthyConnectors :: Lens' CustomerConnectorInfo Int

-- | Total number of discovery connectors.
customerConnectorInfo_totalConnectors :: Lens' CustomerConnectorInfo Int

-- | Number of unknown discovery connectors.
customerConnectorInfo_unknownConnectors :: Lens' CustomerConnectorInfo Int

-- | A single <tt>ExportFilter</tt> name. Supported filters:
--   <tt>agentId</tt>.
exportFilter_name :: Lens' ExportFilter Text

-- | A single <tt>agentId</tt> for a Discovery Agent. An <tt>agentId</tt>
--   can be found using the <a>DescribeAgents</a> action. Typically an ADS
--   <tt>agentId</tt> is in the form <tt>o-0123456789abcdef0</tt>.
exportFilter_values :: Lens' ExportFilter [Text]

-- | Supported condition: <tt>EQUALS</tt>
exportFilter_condition :: Lens' ExportFilter Text

-- | A URL for an Amazon S3 bucket where you can review the exported data.
--   The URL is displayed only if the export succeeded.
exportInfo_configurationsDownloadUrl :: Lens' ExportInfo (Maybe Text)

-- | The value of <tt>startTime</tt> parameter in the
--   <tt>StartExportTask</tt> request. If no <tt>startTime</tt> was
--   requested, this result does not appear in <tt>ExportInfo</tt>.
exportInfo_requestedStartTime :: Lens' ExportInfo (Maybe UTCTime)

-- | The <tt>endTime</tt> used in the <tt>StartExportTask</tt> request. If
--   no <tt>endTime</tt> was requested, this result does not appear in
--   <tt>ExportInfo</tt>.
exportInfo_requestedEndTime :: Lens' ExportInfo (Maybe UTCTime)

-- | If true, the export of agent information exceeded the size limit for a
--   single export and the exported data is incomplete for the requested
--   time range. To address this, select a smaller time range for the
--   export by using <tt>startDate</tt> and <tt>endDate</tt>.
exportInfo_isTruncated :: Lens' ExportInfo (Maybe Bool)

-- | A unique identifier used to query an export.
exportInfo_exportId :: Lens' ExportInfo Text

-- | The status of the data export job.
exportInfo_exportStatus :: Lens' ExportInfo ExportStatus

-- | A status message provided for API callers.
exportInfo_statusMessage :: Lens' ExportInfo Text

-- | The time that the data export was initiated.
exportInfo_exportRequestTime :: Lens' ExportInfo UTCTime

-- | The name of the filter.
filter_name :: Lens' Filter Text

-- | A string value on which to filter. For example, if you choose the
--   <tt>destinationServer.osVersion</tt> filter name, you could specify
--   <tt>Ubuntu</tt> for the value.
filter_values :: Lens' Filter [Text]

-- | A conditional operator. The following operators are valid: EQUALS,
--   NOT_EQUALS, CONTAINS, NOT_CONTAINS. If you specify multiple filters,
--   the system utilizes all filters as though concatenated by <i>AND</i>.
--   If you specify multiple values for a particular filter, the system
--   differentiates the values using <i>OR</i>. Calling either
--   <i>DescribeConfigurations</i> or <i>ListConfigurations</i> returns
--   attributes of matching configuration items.
filter_condition :: Lens' Filter Text

-- | The total number of application records in the import file that were
--   successfully imported.
importTask_applicationImportSuccess :: Lens' ImportTask (Maybe Int)

-- | The status of the import task. An import can have the status of
--   <tt>IMPORT_COMPLETE</tt> and still have some records fail to import
--   from the overall request. More information can be found in the
--   downloadable archive defined in the <tt>errorsAndFailedEntriesZip</tt>
--   field, or in the Migration Hub management console.
importTask_status :: Lens' ImportTask (Maybe ImportStatus)

-- | The total number of server records in the import file that were
--   successfully imported.
importTask_serverImportSuccess :: Lens' ImportTask (Maybe Int)

-- | The time that the import task request finished, presented in the Unix
--   time stamp format.
importTask_importCompletionTime :: Lens' ImportTask (Maybe UTCTime)

-- | A descriptive name for an import task. You can use this name to filter
--   future requests related to this import task, such as identifying
--   applications and servers that were included in this import task. We
--   recommend that you use a meaningful name for each import task.
importTask_name :: Lens' ImportTask (Maybe Text)

-- | The total number of application records in the import file that failed
--   to be imported.
importTask_applicationImportFailure :: Lens' ImportTask (Maybe Int)

-- | A link to a compressed archive folder (in the ZIP format) that
--   contains an error log and a file of failed records. You can use these
--   two files to quickly identify records that failed, why they failed,
--   and correct those records. Afterward, you can upload the corrected
--   file to your Amazon S3 bucket and create another import task request.
--   
--   This field also includes authorization information so you can confirm
--   the authenticity of the compressed archive before you download it.
--   
--   If some records failed to be imported we recommend that you correct
--   the records in the failed entries file and then imports that failed
--   entries file. This prevents you from having to correct and update the
--   larger original file and attempt importing it again.
importTask_errorsAndFailedEntriesZip :: Lens' ImportTask (Maybe Text)

-- | The unique ID for a specific import task. These IDs aren't globally
--   unique, but they are unique within an AWS account.
importTask_importTaskId :: Lens' ImportTask (Maybe Text)

-- | The time that the import task request was deleted, presented in the
--   Unix time stamp format.
importTask_importDeletedTime :: Lens' ImportTask (Maybe UTCTime)

-- | The total number of server records in the import file that failed to
--   be imported.
importTask_serverImportFailure :: Lens' ImportTask (Maybe Int)

-- | A unique token used to prevent the same import request from occurring
--   more than once. If you didn't provide a token, a token was
--   automatically generated when the import task request was sent.
importTask_clientRequestToken :: Lens' ImportTask (Maybe Text)

-- | The URL for your import file that you've uploaded to Amazon S3.
importTask_importUrl :: Lens' ImportTask (Maybe Text)

-- | The time that the import task request was made, presented in the Unix
--   time stamp format.
importTask_importRequestTime :: Lens' ImportTask (Maybe UTCTime)

-- | An array of strings that you can provide to match against a specific
--   name, status, or import task ID to filter the results for your import
--   task queries.
importTaskFilter_values :: Lens' ImportTaskFilter (Maybe (NonEmpty Text))

-- | The name, status, or import task ID for a specific import task.
importTaskFilter_name :: Lens' ImportTaskFilter (Maybe ImportTaskFilterName)

-- | The network protocol used for the connection.
neighborConnectionDetail_transportProtocol :: Lens' NeighborConnectionDetail (Maybe Text)

-- | The destination network port for the connection.
neighborConnectionDetail_destinationPort :: Lens' NeighborConnectionDetail (Maybe Int)

-- | The ID of the server that opened the network connection.
neighborConnectionDetail_sourceServerId :: Lens' NeighborConnectionDetail Text

-- | The ID of the server that accepted the network connection.
neighborConnectionDetail_destinationServerId :: Lens' NeighborConnectionDetail Text

-- | The number of open network connections with the neighboring server.
neighborConnectionDetail_connectionsCount :: Lens' NeighborConnectionDetail Integer

-- | Ordering direction.
orderByElement_sortOrder :: Lens' OrderByElement (Maybe OrderString)

-- | The field on which to order.
orderByElement_fieldName :: Lens' OrderByElement Text

-- | The type of tag on which to filter.
tag_key :: Lens' Tag Text

-- | A value for a tag key on which to filter.
tag_value :: Lens' Tag Text

-- | A name of the tag filter.
tagFilter_name :: Lens' TagFilter Text

-- | Values for the tag filter.
tagFilter_values :: Lens' TagFilter [Text]


module Network.AWS.Discovery.Waiters


-- | Derived from API version <tt>2015-11-01</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   AWS Application Discovery Service
--   
--   AWS Application Discovery Service helps you plan application migration
--   projects. It automatically identifies servers, virtual machines (VMs),
--   and network dependencies in your on-premises data centers. For more
--   information, see the <a>AWS Application Discovery Service FAQ</a>.
--   Application Discovery Service offers three ways of performing
--   discovery and collecting data about your on-premises servers:
--   
--   <ul>
--   <li><b>Agentless discovery</b> is recommended for environments that
--   use VMware vCenter Server. This mode doesn't require you to install an
--   agent on each host. It does not work in non-VMware
--   environments.<ul><li>Agentless discovery gathers server information
--   regardless of the operating systems, which minimizes the time required
--   for initial on-premises infrastructure assessment.</li><li>Agentless
--   discovery doesn't collect information about network dependencies, only
--   agent-based discovery collects that information.</li></ul></li>
--   <li><b>Agent-based discovery</b> collects a richer set of data than
--   agentless discovery by using the AWS Application Discovery Agent,
--   which you install on one or more hosts in your data center.<ul><li>The
--   agent captures infrastructure and application information, including
--   an inventory of running processes, system performance information,
--   resource utilization, and network dependencies.</li><li>The
--   information collected by agents is secured at rest and in transit to
--   the Application Discovery Service database in the
--   cloud.</li></ul></li>
--   <li><b>AWS Partner Network (APN) solutions</b> integrate with
--   Application Discovery Service, enabling you to import details of your
--   on-premises environment directly into Migration Hub without using the
--   discovery connector or discovery agent.<ul><li>Third-party application
--   discovery tools can query AWS Application Discovery Service, and they
--   can write to the Application Discovery Service database using the
--   public API.</li><li>In this way, you can import data into Migration
--   Hub and view it, so that you can associate applications with servers
--   and track migrations.</li></ul></li>
--   </ul>
--   
--   <b>Recommendations</b>
--   
--   We recommend that you use agent-based discovery for non-VMware
--   environments, and whenever you want to collect information about
--   network dependencies. You can run agent-based and agentless discovery
--   simultaneously. Use agentless discovery to complete the initial
--   infrastructure assessment quickly, and then install agents on select
--   hosts to collect additional information.
--   
--   <b>Working With This Guide</b>
--   
--   This API reference provides descriptions, syntax, and usage examples
--   for each of the actions and data types for Application Discovery
--   Service. The topic for each action shows the API request parameters
--   and the response. Alternatively, you can use one of the AWS SDKs to
--   access an API that is tailored to the programming language or platform
--   that you're using. For more information, see <a>AWS SDKs</a>.
--   
--   <ul>
--   <li>Remember that you must set your Migration Hub home region before
--   you call any of these APIs.</li>
--   <li>You must make API calls for write actions (create, notify,
--   associate, disassociate, import, or put) while in your home region, or
--   a <tt>HomeRegionNotSetException</tt> error is returned.</li>
--   <li>API calls for read actions (list, describe, stop, and delete) are
--   permitted outside of your home region.</li>
--   <li>Although it is unlikely, the Migration Hub home region could
--   change. If you call APIs outside the home region, an
--   <tt>InvalidInputException</tt> is returned.</li>
--   <li>You must call <tt>GetHomeRegion</tt> to obtain the latest
--   Migration Hub home region.</li>
--   </ul>
--   
--   This guide is intended for use with the <a>AWS Application Discovery
--   Service User Guide</a>.
--   
--   All data is handled according to the <a>AWS Privacy Policy</a>. You
--   can operate Application Discovery Service offline to inspect collected
--   data before it is shared with the service.
module Network.AWS.Discovery

-- | API version <tt>2015-11-01</tt> of the Amazon Application Discovery
--   Service SDK configuration.
defaultService :: Service

-- | The AWS user account does not have permission to perform the action.
--   Check the IAM policy associated with this account.
_AuthorizationErrorException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The home region is not set. Set the home region to continue.
_HomeRegionNotSetException :: AsError a => Getting (First ServiceError) a ServiceError

-- | One or more parameters are not valid. Verify the parameters and try
--   again.
_InvalidParameterException :: AsError a => Getting (First ServiceError) a ServiceError

_ConflictErrorException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The value of one or more parameters are either invalid or out of
--   range. Verify the parameter values and try again.
_InvalidParameterValueException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The server experienced an internal error. Try again.
_ServerInternalErrorException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This operation is not permitted.
_OperationNotPermittedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified configuration ID was not located. Verify the
--   configuration ID and try again.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This issue occurs when the same <tt>clientRequestToken</tt> is used
--   with the <tt>StartImportTask</tt> action, but with different
--   parameters. For example, you use the same request token but have two
--   different import URLs, you can encounter this issue. If the import
--   tasks are meant to be different, use a different
--   <tt>clientRequestToken</tt>, and try again.
_ResourceInUseException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newDescribeTags</a> smart constructor.
data DescribeTags
DescribeTags' :: Maybe [TagFilter] -> Maybe Text -> Maybe Int -> DescribeTags

-- | Create a value of <a>DescribeTags</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:DescribeTags'</a>, <a>describeTags_filters</a> - You
--   can filter the list using a <i>key</i>-<i>value</i> format. You can
--   separate these items by using logical operators. Allowed filters
--   include <tt>tagKey</tt>, <tt>tagValue</tt>, and
--   <tt>configurationId</tt>.
--   
--   <a>$sel:nextToken:DescribeTags'</a>, <a>describeTags_nextToken</a> - A
--   token to start the list. Use this token to get the next set of
--   results.
--   
--   <a>$sel:maxResults:DescribeTags'</a>, <a>describeTags_maxResults</a> -
--   The total number of items to return in a single page of output. The
--   maximum value is 100.
newDescribeTags :: DescribeTags

-- | <i>See:</i> <a>newDescribeTagsResponse</a> smart constructor.
data DescribeTagsResponse
DescribeTagsResponse' :: Maybe Text -> Maybe [ConfigurationTag] -> Int -> DescribeTagsResponse

-- | Create a value of <a>DescribeTagsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeTags'</a>,
--   <a>describeTagsResponse_nextToken</a> - The call returns a token. Use
--   this token to get the next set of results.
--   
--   <a>$sel:tags:DescribeTagsResponse'</a>,
--   <a>describeTagsResponse_tags</a> - Depending on the input, this is a
--   list of configuration items tagged with a specific tag, or a list of
--   tags for a specific configuration item.
--   
--   <a>$sel:httpStatus:DescribeTagsResponse'</a>,
--   <a>describeTagsResponse_httpStatus</a> - The response's http status
--   code.
newDescribeTagsResponse :: Int -> DescribeTagsResponse

-- | <i>See:</i> <a>newDescribeContinuousExports</a> smart constructor.
data DescribeContinuousExports
DescribeContinuousExports' :: Maybe Text -> Maybe [Text] -> Maybe Natural -> DescribeContinuousExports

-- | Create a value of <a>DescribeContinuousExports</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeContinuousExports'</a>,
--   <a>describeContinuousExports_nextToken</a> - The token from the
--   previous call to <tt>DescribeExportTasks</tt>.
--   
--   <a>$sel:exportIds:DescribeContinuousExports'</a>,
--   <a>describeContinuousExports_exportIds</a> - The unique IDs assigned
--   to the exports.
--   
--   <a>$sel:maxResults:DescribeContinuousExports'</a>,
--   <a>describeContinuousExports_maxResults</a> - A number between 1 and
--   100 specifying the maximum number of continuous export descriptions
--   returned.
newDescribeContinuousExports :: DescribeContinuousExports

-- | <i>See:</i> <a>newDescribeContinuousExportsResponse</a> smart
--   constructor.
data DescribeContinuousExportsResponse
DescribeContinuousExportsResponse' :: Maybe Text -> Maybe [ContinuousExportDescription] -> Int -> DescribeContinuousExportsResponse

-- | Create a value of <a>DescribeContinuousExportsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeContinuousExports'</a>,
--   <a>describeContinuousExportsResponse_nextToken</a> - The token from
--   the previous call to <tt>DescribeExportTasks</tt>.
--   
--   <a>$sel:descriptions:DescribeContinuousExportsResponse'</a>,
--   <a>describeContinuousExportsResponse_descriptions</a> - A list of
--   continuous export descriptions.
--   
--   <a>$sel:httpStatus:DescribeContinuousExportsResponse'</a>,
--   <a>describeContinuousExportsResponse_httpStatus</a> - The response's
--   http status code.
newDescribeContinuousExportsResponse :: Int -> DescribeContinuousExportsResponse

-- | <i>See:</i> <a>newStopDataCollectionByAgentIds</a> smart constructor.
data StopDataCollectionByAgentIds
StopDataCollectionByAgentIds' :: [Text] -> StopDataCollectionByAgentIds

-- | Create a value of <a>StopDataCollectionByAgentIds</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:agentIds:StopDataCollectionByAgentIds'</a>,
--   <a>stopDataCollectionByAgentIds_agentIds</a> - The IDs of the agents
--   or connectors from which to stop collecting data.
newStopDataCollectionByAgentIds :: StopDataCollectionByAgentIds

-- | <i>See:</i> <a>newStopDataCollectionByAgentIdsResponse</a> smart
--   constructor.
data StopDataCollectionByAgentIdsResponse
StopDataCollectionByAgentIdsResponse' :: Maybe [AgentConfigurationStatus] -> Int -> StopDataCollectionByAgentIdsResponse

-- | Create a value of <a>StopDataCollectionByAgentIdsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:agentsConfigurationStatus:StopDataCollectionByAgentIdsResponse'</a>,
--   <a>stopDataCollectionByAgentIdsResponse_agentsConfigurationStatus</a>
--   - Information about the agents or connector that were instructed to
--   stop collecting data. Information includes the agent/connector ID, a
--   description of the operation performed, and whether the
--   agent/connector configuration was updated.
--   
--   <a>$sel:httpStatus:StopDataCollectionByAgentIdsResponse'</a>,
--   <a>stopDataCollectionByAgentIdsResponse_httpStatus</a> - The
--   response's http status code.
newStopDataCollectionByAgentIdsResponse :: Int -> StopDataCollectionByAgentIdsResponse

-- | <i>See:</i> <a>newCreateTags</a> smart constructor.
data CreateTags
CreateTags' :: [Text] -> [Tag] -> CreateTags

-- | Create a value of <a>CreateTags</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configurationIds:CreateTags'</a>,
--   <a>createTags_configurationIds</a> - A list of configuration items
--   that you want to tag.
--   
--   <a>$sel:tags:CreateTags'</a>, <a>createTags_tags</a> - Tags that you
--   want to associate with one or more configuration items. Specify the
--   tags that you want to create in a <i>key</i>-<i>value</i> format. For
--   example:
--   
--   <pre>
--   {"key": "serverType", "value": "webServer"}
--   </pre>
newCreateTags :: CreateTags

-- | <i>See:</i> <a>newCreateTagsResponse</a> smart constructor.
data CreateTagsResponse
CreateTagsResponse' :: Int -> CreateTagsResponse

-- | Create a value of <a>CreateTagsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateTagsResponse'</a>,
--   <a>createTagsResponse_httpStatus</a> - The response's http status
--   code.
newCreateTagsResponse :: Int -> CreateTagsResponse

-- | <i>See:</i> <a>newBatchDeleteImportData</a> smart constructor.
data BatchDeleteImportData
BatchDeleteImportData' :: NonEmpty Text -> BatchDeleteImportData

-- | Create a value of <a>BatchDeleteImportData</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:importTaskIds:BatchDeleteImportData'</a>,
--   <a>batchDeleteImportData_importTaskIds</a> - The IDs for the import
--   tasks that you want to delete.
newBatchDeleteImportData :: NonEmpty Text -> BatchDeleteImportData

-- | <i>See:</i> <a>newBatchDeleteImportDataResponse</a> smart constructor.
data BatchDeleteImportDataResponse
BatchDeleteImportDataResponse' :: Maybe [BatchDeleteImportDataError] -> Int -> BatchDeleteImportDataResponse

-- | Create a value of <a>BatchDeleteImportDataResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errors:BatchDeleteImportDataResponse'</a>,
--   <a>batchDeleteImportDataResponse_errors</a> - Error messages returned
--   for each import task that you deleted as a response for this command.
--   
--   <a>$sel:httpStatus:BatchDeleteImportDataResponse'</a>,
--   <a>batchDeleteImportDataResponse_httpStatus</a> - The response's http
--   status code.
newBatchDeleteImportDataResponse :: Int -> BatchDeleteImportDataResponse

-- | <i>See:</i> <a>newDeleteTags</a> smart constructor.
data DeleteTags
DeleteTags' :: Maybe [Tag] -> [Text] -> DeleteTags

-- | Create a value of <a>DeleteTags</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:DeleteTags'</a>, <a>deleteTags_tags</a> - Tags that you
--   want to delete from one or more configuration items. Specify the tags
--   that you want to delete in a <i>key</i>-<i>value</i> format. For
--   example:
--   
--   <pre>
--   {"key": "serverType", "value": "webServer"}
--   </pre>
--   
--   <a>$sel:configurationIds:DeleteTags'</a>,
--   <a>deleteTags_configurationIds</a> - A list of configuration items
--   with tags that you want to delete.
newDeleteTags :: DeleteTags

-- | <i>See:</i> <a>newDeleteTagsResponse</a> smart constructor.
data DeleteTagsResponse
DeleteTagsResponse' :: Int -> DeleteTagsResponse

-- | Create a value of <a>DeleteTagsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteTagsResponse'</a>,
--   <a>deleteTagsResponse_httpStatus</a> - The response's http status
--   code.
newDeleteTagsResponse :: Int -> DeleteTagsResponse

-- | <i>See:</i> <a>newStartImportTask</a> smart constructor.
data StartImportTask
StartImportTask' :: Maybe Text -> Text -> Text -> StartImportTask

-- | Create a value of <a>StartImportTask</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientRequestToken:StartImportTask'</a>,
--   <a>startImportTask_clientRequestToken</a> - Optional. A unique token
--   that you can provide to prevent the same import request from occurring
--   more than once. If you don't provide a token, a token is automatically
--   generated.
--   
--   Sending more than one <tt>StartImportTask</tt> request with the same
--   client request token will return information about the original import
--   task with that client request token.
--   
--   <a>$sel:name:StartImportTask'</a>, <a>startImportTask_name</a> - A
--   descriptive name for this request. You can use this name to filter
--   future requests related to this import task, such as identifying
--   applications and servers that were included in this import task. We
--   recommend that you use a meaningful name for each import task.
--   
--   <a>$sel:importUrl:StartImportTask'</a>,
--   <a>startImportTask_importUrl</a> - The URL for your import file that
--   you've uploaded to Amazon S3.
--   
--   If you're using the AWS CLI, this URL is structured as follows:
--   <tt>s3://BucketName/ImportFileName.CSV</tt>
newStartImportTask :: Text -> Text -> StartImportTask

-- | <i>See:</i> <a>newStartImportTaskResponse</a> smart constructor.
data StartImportTaskResponse
StartImportTaskResponse' :: Maybe ImportTask -> Int -> StartImportTaskResponse

-- | Create a value of <a>StartImportTaskResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:task:StartImportTaskResponse'</a>,
--   <a>startImportTaskResponse_task</a> - An array of information related
--   to the import task request including status information, times, IDs,
--   the Amazon S3 Object URL for the import file, and more.
--   
--   <a>$sel:httpStatus:StartImportTaskResponse'</a>,
--   <a>startImportTaskResponse_httpStatus</a> - The response's http status
--   code.
newStartImportTaskResponse :: Int -> StartImportTaskResponse

-- | <i>See:</i> <a>newDeleteApplications</a> smart constructor.
data DeleteApplications
DeleteApplications' :: [Text] -> DeleteApplications

-- | Create a value of <a>DeleteApplications</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configurationIds:DeleteApplications'</a>,
--   <a>deleteApplications_configurationIds</a> - Configuration ID of an
--   application to be deleted.
newDeleteApplications :: DeleteApplications

-- | <i>See:</i> <a>newDeleteApplicationsResponse</a> smart constructor.
data DeleteApplicationsResponse
DeleteApplicationsResponse' :: Int -> DeleteApplicationsResponse

-- | Create a value of <a>DeleteApplicationsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteApplicationsResponse'</a>,
--   <a>deleteApplicationsResponse_httpStatus</a> - The response's http
--   status code.
newDeleteApplicationsResponse :: Int -> DeleteApplicationsResponse

-- | <i>See:</i> <a>newUpdateApplication</a> smart constructor.
data UpdateApplication
UpdateApplication' :: Maybe Text -> Maybe Text -> Text -> UpdateApplication

-- | Create a value of <a>UpdateApplication</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:UpdateApplication'</a>, <a>updateApplication_name</a> -
--   New name of the application to be updated.
--   
--   <a>$sel:description:UpdateApplication'</a>,
--   <a>updateApplication_description</a> - New description of the
--   application to be updated.
--   
--   <a>$sel:configurationId:UpdateApplication'</a>,
--   <a>updateApplication_configurationId</a> - Configuration ID of the
--   application to be updated.
newUpdateApplication :: Text -> UpdateApplication

-- | <i>See:</i> <a>newUpdateApplicationResponse</a> smart constructor.
data UpdateApplicationResponse
UpdateApplicationResponse' :: Int -> UpdateApplicationResponse

-- | Create a value of <a>UpdateApplicationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateApplicationResponse'</a>,
--   <a>updateApplicationResponse_httpStatus</a> - The response's http
--   status code.
newUpdateApplicationResponse :: Int -> UpdateApplicationResponse

-- | <i>See:</i> <a>newDescribeConfigurations</a> smart constructor.
data DescribeConfigurations
DescribeConfigurations' :: [Text] -> DescribeConfigurations

-- | Create a value of <a>DescribeConfigurations</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configurationIds:DescribeConfigurations'</a>,
--   <a>describeConfigurations_configurationIds</a> - One or more
--   configuration IDs.
newDescribeConfigurations :: DescribeConfigurations

-- | <i>See:</i> <a>newDescribeConfigurationsResponse</a> smart
--   constructor.
data DescribeConfigurationsResponse
DescribeConfigurationsResponse' :: Maybe [HashMap Text Text] -> Int -> DescribeConfigurationsResponse

-- | Create a value of <a>DescribeConfigurationsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configurations:DescribeConfigurationsResponse'</a>,
--   <a>describeConfigurationsResponse_configurations</a> - A key in the
--   response map. The value is an array of data.
--   
--   <a>$sel:httpStatus:DescribeConfigurationsResponse'</a>,
--   <a>describeConfigurationsResponse_httpStatus</a> - The response's http
--   status code.
newDescribeConfigurationsResponse :: Int -> DescribeConfigurationsResponse

-- | <i>See:</i> <a>newDescribeImportTasks</a> smart constructor.
data DescribeImportTasks
DescribeImportTasks' :: Maybe [ImportTaskFilter] -> Maybe Text -> Maybe Natural -> DescribeImportTasks

-- | Create a value of <a>DescribeImportTasks</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:DescribeImportTasks'</a>,
--   <a>describeImportTasks_filters</a> - An array of name-value pairs that
--   you provide to filter the results for the <tt>DescribeImportTask</tt>
--   request to a specific subset of results. Currently, wildcard values
--   aren't supported for filters.
--   
--   <a>$sel:nextToken:DescribeImportTasks'</a>,
--   <a>describeImportTasks_nextToken</a> - The token to request a specific
--   page of results.
--   
--   <a>$sel:maxResults:DescribeImportTasks'</a>,
--   <a>describeImportTasks_maxResults</a> - The maximum number of results
--   that you want this request to return, up to 100.
newDescribeImportTasks :: DescribeImportTasks

-- | <i>See:</i> <a>newDescribeImportTasksResponse</a> smart constructor.
data DescribeImportTasksResponse
DescribeImportTasksResponse' :: Maybe [ImportTask] -> Maybe Text -> Int -> DescribeImportTasksResponse

-- | Create a value of <a>DescribeImportTasksResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tasks:DescribeImportTasksResponse'</a>,
--   <a>describeImportTasksResponse_tasks</a> - A returned array of import
--   tasks that match any applied filters, up to the specified number of
--   maximum results.
--   
--   <a>$sel:nextToken:DescribeImportTasks'</a>,
--   <a>describeImportTasksResponse_nextToken</a> - The token to request
--   the next page of results.
--   
--   <a>$sel:httpStatus:DescribeImportTasksResponse'</a>,
--   <a>describeImportTasksResponse_httpStatus</a> - The response's http
--   status code.
newDescribeImportTasksResponse :: Int -> DescribeImportTasksResponse

-- | <i>See:</i> <a>newCreateApplication</a> smart constructor.
data CreateApplication
CreateApplication' :: Maybe Text -> Text -> CreateApplication

-- | Create a value of <a>CreateApplication</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:CreateApplication'</a>,
--   <a>createApplication_description</a> - Description of the application
--   to be created.
--   
--   <a>$sel:name:CreateApplication'</a>, <a>createApplication_name</a> -
--   Name of the application to be created.
newCreateApplication :: Text -> CreateApplication

-- | <i>See:</i> <a>newCreateApplicationResponse</a> smart constructor.
data CreateApplicationResponse
CreateApplicationResponse' :: Maybe Text -> Int -> CreateApplicationResponse

-- | Create a value of <a>CreateApplicationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configurationId:CreateApplicationResponse'</a>,
--   <a>createApplicationResponse_configurationId</a> - Configuration ID of
--   an application to be created.
--   
--   <a>$sel:httpStatus:CreateApplicationResponse'</a>,
--   <a>createApplicationResponse_httpStatus</a> - The response's http
--   status code.
newCreateApplicationResponse :: Int -> CreateApplicationResponse

-- | <i>See:</i> <a>newListConfigurations</a> smart constructor.
data ListConfigurations
ListConfigurations' :: Maybe [OrderByElement] -> Maybe [Filter] -> Maybe Text -> Maybe Int -> ConfigurationItemType -> ListConfigurations

-- | Create a value of <a>ListConfigurations</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:orderBy:ListConfigurations'</a>,
--   <a>listConfigurations_orderBy</a> - Certain filter criteria return
--   output that can be sorted in ascending or descending order. For a list
--   of output characteristics for each filter, see <a>Using the
--   ListConfigurations Action</a> in the <i>AWS Application Discovery
--   Service User Guide</i>.
--   
--   <a>$sel:filters:ListConfigurations'</a>,
--   <a>listConfigurations_filters</a> - You can filter the request using
--   various logical operators and a <i>key</i>-<i>value</i> format. For
--   example:
--   
--   <pre>
--   {"key": "serverType", "value": "webServer"}
--   </pre>
--   
--   For a complete list of filter options and guidance about using them
--   with this action, see <a>Using the ListConfigurations Action</a> in
--   the <i>AWS Application Discovery Service User Guide</i>.
--   
--   <a>$sel:nextToken:ListConfigurations'</a>,
--   <a>listConfigurations_nextToken</a> - Token to retrieve the next set
--   of results. For example, if a previous call to ListConfigurations
--   returned 100 items, but you set
--   <tt>ListConfigurationsRequest$maxResults</tt> to 10, you received a
--   set of 10 results along with a token. Use that token in this query to
--   get the next set of 10.
--   
--   <a>$sel:maxResults:ListConfigurations'</a>,
--   <a>listConfigurations_maxResults</a> - The total number of items to
--   return. The maximum value is 100.
--   
--   <a>$sel:configurationType:ListConfigurations'</a>,
--   <a>listConfigurations_configurationType</a> - A valid configuration
--   identified by Application Discovery Service.
newListConfigurations :: ConfigurationItemType -> ListConfigurations

-- | <i>See:</i> <a>newListConfigurationsResponse</a> smart constructor.
data ListConfigurationsResponse
ListConfigurationsResponse' :: Maybe [HashMap Text Text] -> Maybe Text -> Int -> ListConfigurationsResponse

-- | Create a value of <a>ListConfigurationsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configurations:ListConfigurationsResponse'</a>,
--   <a>listConfigurationsResponse_configurations</a> - Returns
--   configuration details, including the configuration ID, attribute
--   names, and attribute values.
--   
--   <a>$sel:nextToken:ListConfigurations'</a>,
--   <a>listConfigurationsResponse_nextToken</a> - Token to retrieve the
--   next set of results. For example, if your call to ListConfigurations
--   returned 100 items, but you set
--   <tt>ListConfigurationsRequest$maxResults</tt> to 10, you received a
--   set of 10 results along with this token. Use this token in the next
--   query to retrieve the next set of 10.
--   
--   <a>$sel:httpStatus:ListConfigurationsResponse'</a>,
--   <a>listConfigurationsResponse_httpStatus</a> - The response's http
--   status code.
newListConfigurationsResponse :: Int -> ListConfigurationsResponse

-- | <i>See:</i> <a>newStartContinuousExport</a> smart constructor.
data StartContinuousExport
StartContinuousExport' :: StartContinuousExport

-- | Create a value of <a>StartContinuousExport</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newStartContinuousExport :: StartContinuousExport

-- | <i>See:</i> <a>newStartContinuousExportResponse</a> smart constructor.
data StartContinuousExportResponse
StartContinuousExportResponse' :: Maybe POSIX -> Maybe (HashMap Text Text) -> Maybe DataSource -> Maybe Text -> Maybe Text -> Int -> StartContinuousExportResponse

-- | Create a value of <a>StartContinuousExportResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:startTime:StartContinuousExportResponse'</a>,
--   <a>startContinuousExportResponse_startTime</a> - The timestamp
--   representing when the continuous export was started.
--   
--   <a>$sel:schemaStorageConfig:StartContinuousExportResponse'</a>,
--   <a>startContinuousExportResponse_schemaStorageConfig</a> - A
--   dictionary which describes how the data is stored.
--   
--   <ul>
--   <li><tt>databaseName</tt> - the name of the Glue database used to
--   store the schema.</li>
--   </ul>
--   
--   <a>$sel:dataSource:StartContinuousExportResponse'</a>,
--   <a>startContinuousExportResponse_dataSource</a> - The type of data
--   collector used to gather this data (currently only offered for AGENT).
--   
--   <a>$sel:s3Bucket:StartContinuousExportResponse'</a>,
--   <a>startContinuousExportResponse_s3Bucket</a> - The name of the s3
--   bucket where the export data parquet files are stored.
--   
--   <a>$sel:exportId:StartContinuousExportResponse'</a>,
--   <a>startContinuousExportResponse_exportId</a> - The unique ID assigned
--   to this export.
--   
--   <a>$sel:httpStatus:StartContinuousExportResponse'</a>,
--   <a>startContinuousExportResponse_httpStatus</a> - The response's http
--   status code.
newStartContinuousExportResponse :: Int -> StartContinuousExportResponse

-- | <i>See:</i> <a>newDescribeAgents</a> smart constructor.
data DescribeAgents
DescribeAgents' :: Maybe [Text] -> Maybe [Filter] -> Maybe Text -> Maybe Int -> DescribeAgents

-- | Create a value of <a>DescribeAgents</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:agentIds:DescribeAgents'</a>, <a>describeAgents_agentIds</a> -
--   The agent or the Connector IDs for which you want information. If you
--   specify no IDs, the system returns information about all
--   agents/Connectors associated with your AWS user account.
--   
--   <a>$sel:filters:DescribeAgents'</a>, <a>describeAgents_filters</a> -
--   You can filter the request using various logical operators and a
--   <i>key</i>-<i>value</i> format. For example:
--   
--   <pre>
--   {"key": "collectionStatus", "value": "STARTED"}
--   </pre>
--   
--   <a>$sel:nextToken:DescribeAgents'</a>, <a>describeAgents_nextToken</a>
--   - Token to retrieve the next set of results. For example, if you
--   previously specified 100 IDs for
--   <tt>DescribeAgentsRequest$agentIds</tt> but set
--   <tt>DescribeAgentsRequest$maxResults</tt> to 10, you received a set of
--   10 results along with a token. Use that token in this query to get the
--   next set of 10.
--   
--   <a>$sel:maxResults:DescribeAgents'</a>,
--   <a>describeAgents_maxResults</a> - The total number of
--   agents/Connectors to return in a single page of output. The maximum
--   value is 100.
newDescribeAgents :: DescribeAgents

-- | <i>See:</i> <a>newDescribeAgentsResponse</a> smart constructor.
data DescribeAgentsResponse
DescribeAgentsResponse' :: Maybe [AgentInfo] -> Maybe Text -> Int -> DescribeAgentsResponse

-- | Create a value of <a>DescribeAgentsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:agentsInfo:DescribeAgentsResponse'</a>,
--   <a>describeAgentsResponse_agentsInfo</a> - Lists agents or the
--   Connector by ID or lists all agents/Connectors associated with your
--   user account if you did not specify an agent/Connector ID. The output
--   includes agent/Connector IDs, IP addresses, media access control (MAC)
--   addresses, agent/Connector health, host name where the agent/Connector
--   resides, and the version number of each agent/Connector.
--   
--   <a>$sel:nextToken:DescribeAgents'</a>,
--   <a>describeAgentsResponse_nextToken</a> - Token to retrieve the next
--   set of results. For example, if you specified 100 IDs for
--   <tt>DescribeAgentsRequest$agentIds</tt> but set
--   <tt>DescribeAgentsRequest$maxResults</tt> to 10, you received a set of
--   10 results along with this token. Use this token in the next query to
--   retrieve the next set of 10.
--   
--   <a>$sel:httpStatus:DescribeAgentsResponse'</a>,
--   <a>describeAgentsResponse_httpStatus</a> - The response's http status
--   code.
newDescribeAgentsResponse :: Int -> DescribeAgentsResponse

-- | <i>See:</i> <a>newDescribeExportTasks</a> smart constructor.
data DescribeExportTasks
DescribeExportTasks' :: Maybe [ExportFilter] -> Maybe Text -> Maybe [Text] -> Maybe Int -> DescribeExportTasks

-- | Create a value of <a>DescribeExportTasks</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:DescribeExportTasks'</a>,
--   <a>describeExportTasks_filters</a> - One or more filters.
--   
--   <ul>
--   <li><tt>AgentId</tt> - ID of the agent whose collected data will be
--   exported</li>
--   </ul>
--   
--   <a>$sel:nextToken:DescribeExportTasks'</a>,
--   <a>describeExportTasks_nextToken</a> - The <tt>nextToken</tt> value
--   returned from a previous paginated <tt>DescribeExportTasks</tt>
--   request where <tt>maxResults</tt> was used and the results exceeded
--   the value of that parameter. Pagination continues from the end of the
--   previous results that returned the <tt>nextToken</tt> value. This
--   value is null when there are no more results to return.
--   
--   <a>$sel:exportIds:DescribeExportTasks'</a>,
--   <a>describeExportTasks_exportIds</a> - One or more unique identifiers
--   used to query the status of an export request.
--   
--   <a>$sel:maxResults:DescribeExportTasks'</a>,
--   <a>describeExportTasks_maxResults</a> - The maximum number of volume
--   results returned by <tt>DescribeExportTasks</tt> in paginated output.
--   When this parameter is used, <tt>DescribeExportTasks</tt> only returns
--   <tt>maxResults</tt> results in a single page along with a
--   <tt>nextToken</tt> response element.
newDescribeExportTasks :: DescribeExportTasks

-- | <i>See:</i> <a>newDescribeExportTasksResponse</a> smart constructor.
data DescribeExportTasksResponse
DescribeExportTasksResponse' :: Maybe Text -> Maybe [ExportInfo] -> Int -> DescribeExportTasksResponse

-- | Create a value of <a>DescribeExportTasksResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeExportTasks'</a>,
--   <a>describeExportTasksResponse_nextToken</a> - The <tt>nextToken</tt>
--   value to include in a future <tt>DescribeExportTasks</tt> request.
--   When the results of a <tt>DescribeExportTasks</tt> request exceed
--   <tt>maxResults</tt>, this value can be used to retrieve the next page
--   of results. This value is null when there are no more results to
--   return.
--   
--   <a>$sel:exportsInfo:DescribeExportTasksResponse'</a>,
--   <a>describeExportTasksResponse_exportsInfo</a> - Contains one or more
--   sets of export request details. When the status of a request is
--   <tt>SUCCEEDED</tt>, the response includes a URL for an Amazon S3
--   bucket where you can view the data in a CSV file.
--   
--   <a>$sel:httpStatus:DescribeExportTasksResponse'</a>,
--   <a>describeExportTasksResponse_httpStatus</a> - The response's http
--   status code.
newDescribeExportTasksResponse :: Int -> DescribeExportTasksResponse

-- | <i>See:</i> <a>newStartDataCollectionByAgentIds</a> smart constructor.
data StartDataCollectionByAgentIds
StartDataCollectionByAgentIds' :: [Text] -> StartDataCollectionByAgentIds

-- | Create a value of <a>StartDataCollectionByAgentIds</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:agentIds:StartDataCollectionByAgentIds'</a>,
--   <a>startDataCollectionByAgentIds_agentIds</a> - The IDs of the agents
--   or connectors from which to start collecting data. If you send a
--   request to an agent/connector ID that you do not have permission to
--   contact, according to your AWS account, the service does not throw an
--   exception. Instead, it returns the error in the <i>Description</i>
--   field. If you send a request to multiple agents/connectors and you do
--   not have permission to contact some of those agents/connectors, the
--   system does not throw an exception. Instead, the system shows
--   <tt>Failed</tt> in the <i>Description</i> field.
newStartDataCollectionByAgentIds :: StartDataCollectionByAgentIds

-- | <i>See:</i> <a>newStartDataCollectionByAgentIdsResponse</a> smart
--   constructor.
data StartDataCollectionByAgentIdsResponse
StartDataCollectionByAgentIdsResponse' :: Maybe [AgentConfigurationStatus] -> Int -> StartDataCollectionByAgentIdsResponse

-- | Create a value of <a>StartDataCollectionByAgentIdsResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:agentsConfigurationStatus:StartDataCollectionByAgentIdsResponse'</a>,
--   <a>startDataCollectionByAgentIdsResponse_agentsConfigurationStatus</a>
--   - Information about agents or the connector that were instructed to
--   start collecting data. Information includes the agent/connector ID, a
--   description of the operation performed, and whether the
--   agent/connector configuration was updated.
--   
--   <a>$sel:httpStatus:StartDataCollectionByAgentIdsResponse'</a>,
--   <a>startDataCollectionByAgentIdsResponse_httpStatus</a> - The
--   response's http status code.
newStartDataCollectionByAgentIdsResponse :: Int -> StartDataCollectionByAgentIdsResponse

-- | <i>See:</i> <a>newGetDiscoverySummary</a> smart constructor.
data GetDiscoverySummary
GetDiscoverySummary' :: GetDiscoverySummary

-- | Create a value of <a>GetDiscoverySummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newGetDiscoverySummary :: GetDiscoverySummary

-- | <i>See:</i> <a>newGetDiscoverySummaryResponse</a> smart constructor.
data GetDiscoverySummaryResponse
GetDiscoverySummaryResponse' :: Maybe Integer -> Maybe Integer -> Maybe Integer -> Maybe CustomerConnectorInfo -> Maybe CustomerAgentInfo -> Maybe Integer -> Int -> GetDiscoverySummaryResponse

-- | Create a value of <a>GetDiscoverySummaryResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:servers:GetDiscoverySummaryResponse'</a>,
--   <a>getDiscoverySummaryResponse_servers</a> - The number of servers
--   discovered.
--   
--   <a>$sel:serversMappedtoTags:GetDiscoverySummaryResponse'</a>,
--   <a>getDiscoverySummaryResponse_serversMappedtoTags</a> - The number of
--   servers mapped to tags.
--   
--   <a>$sel:serversMappedToApplications:GetDiscoverySummaryResponse'</a>,
--   <a>getDiscoverySummaryResponse_serversMappedToApplications</a> - The
--   number of servers mapped to applications.
--   
--   <a>$sel:connectorSummary:GetDiscoverySummaryResponse'</a>,
--   <a>getDiscoverySummaryResponse_connectorSummary</a> - Details about
--   discovered connectors, including connector status and health.
--   
--   <a>$sel:agentSummary:GetDiscoverySummaryResponse'</a>,
--   <a>getDiscoverySummaryResponse_agentSummary</a> - Details about
--   discovered agents, including agent status and health.
--   
--   <a>$sel:applications:GetDiscoverySummaryResponse'</a>,
--   <a>getDiscoverySummaryResponse_applications</a> - The number of
--   applications discovered.
--   
--   <a>$sel:httpStatus:GetDiscoverySummaryResponse'</a>,
--   <a>getDiscoverySummaryResponse_httpStatus</a> - The response's http
--   status code.
newGetDiscoverySummaryResponse :: Int -> GetDiscoverySummaryResponse

-- | <i>See:</i> <a>newDisassociateConfigurationItemsFromApplication</a>
--   smart constructor.
data DisassociateConfigurationItemsFromApplication
DisassociateConfigurationItemsFromApplication' :: Text -> [Text] -> DisassociateConfigurationItemsFromApplication

-- | Create a value of <a>DisassociateConfigurationItemsFromApplication</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:applicationConfigurationId:DisassociateConfigurationItemsFromApplication'</a>,
--   <a>disassociateConfigurationItemsFromApplication_applicationConfigurationId</a>
--   - Configuration ID of an application from which each item is
--   disassociated.
--   
--   
--   <a>$sel:configurationIds:DisassociateConfigurationItemsFromApplication'</a>,
--   <a>disassociateConfigurationItemsFromApplication_configurationIds</a>
--   - Configuration ID of each item to be disassociated from an
--   application.
newDisassociateConfigurationItemsFromApplication :: Text -> DisassociateConfigurationItemsFromApplication

-- | <i>See:</i>
--   <a>newDisassociateConfigurationItemsFromApplicationResponse</a> smart
--   constructor.
data DisassociateConfigurationItemsFromApplicationResponse
DisassociateConfigurationItemsFromApplicationResponse' :: Int -> DisassociateConfigurationItemsFromApplicationResponse

-- | Create a value of
--   <a>DisassociateConfigurationItemsFromApplicationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:httpStatus:DisassociateConfigurationItemsFromApplicationResponse'</a>,
--   <a>disassociateConfigurationItemsFromApplicationResponse_httpStatus</a>
--   - The response's http status code.
newDisassociateConfigurationItemsFromApplicationResponse :: Int -> DisassociateConfigurationItemsFromApplicationResponse

-- | <i>See:</i> <a>newAssociateConfigurationItemsToApplication</a> smart
--   constructor.
data AssociateConfigurationItemsToApplication
AssociateConfigurationItemsToApplication' :: Text -> [Text] -> AssociateConfigurationItemsToApplication

-- | Create a value of <a>AssociateConfigurationItemsToApplication</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:applicationConfigurationId:AssociateConfigurationItemsToApplication'</a>,
--   <a>associateConfigurationItemsToApplication_applicationConfigurationId</a>
--   - The configuration ID of an application with which items are to be
--   associated.
--   
--   
--   <a>$sel:configurationIds:AssociateConfigurationItemsToApplication'</a>,
--   <a>associateConfigurationItemsToApplication_configurationIds</a> - The
--   ID of each configuration item to be associated with an application.
newAssociateConfigurationItemsToApplication :: Text -> AssociateConfigurationItemsToApplication

-- | <i>See:</i> <a>newAssociateConfigurationItemsToApplicationResponse</a>
--   smart constructor.
data AssociateConfigurationItemsToApplicationResponse
AssociateConfigurationItemsToApplicationResponse' :: Int -> AssociateConfigurationItemsToApplicationResponse

-- | Create a value of
--   <a>AssociateConfigurationItemsToApplicationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:httpStatus:AssociateConfigurationItemsToApplicationResponse'</a>,
--   <a>associateConfigurationItemsToApplicationResponse_httpStatus</a> -
--   The response's http status code.
newAssociateConfigurationItemsToApplicationResponse :: Int -> AssociateConfigurationItemsToApplicationResponse

-- | <i>See:</i> <a>newListServerNeighbors</a> smart constructor.
data ListServerNeighbors
ListServerNeighbors' :: Maybe Bool -> Maybe [Text] -> Maybe Text -> Maybe Int -> Text -> ListServerNeighbors

-- | Create a value of <a>ListServerNeighbors</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:portInformationNeeded:ListServerNeighbors'</a>,
--   <a>listServerNeighbors_portInformationNeeded</a> - Flag to indicate if
--   port and protocol information is needed as part of the response.
--   
--   <a>$sel:neighborConfigurationIds:ListServerNeighbors'</a>,
--   <a>listServerNeighbors_neighborConfigurationIds</a> - List of
--   configuration IDs to test for one-hop-away.
--   
--   <a>$sel:nextToken:ListServerNeighbors'</a>,
--   <a>listServerNeighbors_nextToken</a> - Token to retrieve the next set
--   of results. For example, if you previously specified 100 IDs for
--   <tt>ListServerNeighborsRequest$neighborConfigurationIds</tt> but set
--   <tt>ListServerNeighborsRequest$maxResults</tt> to 10, you received a
--   set of 10 results along with a token. Use that token in this query to
--   get the next set of 10.
--   
--   <a>$sel:maxResults:ListServerNeighbors'</a>,
--   <a>listServerNeighbors_maxResults</a> - Maximum number of results to
--   return in a single page of output.
--   
--   <a>$sel:configurationId:ListServerNeighbors'</a>,
--   <a>listServerNeighbors_configurationId</a> - Configuration ID of the
--   server for which neighbors are being listed.
newListServerNeighbors :: Text -> ListServerNeighbors

-- | <i>See:</i> <a>newListServerNeighborsResponse</a> smart constructor.
data ListServerNeighborsResponse
ListServerNeighborsResponse' :: Maybe Text -> Maybe Integer -> Int -> [NeighborConnectionDetail] -> ListServerNeighborsResponse

-- | Create a value of <a>ListServerNeighborsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListServerNeighbors'</a>,
--   <a>listServerNeighborsResponse_nextToken</a> - Token to retrieve the
--   next set of results. For example, if you specified 100 IDs for
--   <tt>ListServerNeighborsRequest$neighborConfigurationIds</tt> but set
--   <tt>ListServerNeighborsRequest$maxResults</tt> to 10, you received a
--   set of 10 results along with this token. Use this token in the next
--   query to retrieve the next set of 10.
--   
--   <a>$sel:knownDependencyCount:ListServerNeighborsResponse'</a>,
--   <a>listServerNeighborsResponse_knownDependencyCount</a> - Count of
--   distinct servers that are one hop away from the given server.
--   
--   <a>$sel:httpStatus:ListServerNeighborsResponse'</a>,
--   <a>listServerNeighborsResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:neighbors:ListServerNeighborsResponse'</a>,
--   <a>listServerNeighborsResponse_neighbors</a> - List of distinct
--   servers that are one hop away from the given server.
newListServerNeighborsResponse :: Int -> ListServerNeighborsResponse

-- | <i>See:</i> <a>newStopContinuousExport</a> smart constructor.
data StopContinuousExport
StopContinuousExport' :: Text -> StopContinuousExport

-- | Create a value of <a>StopContinuousExport</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:exportId:StopContinuousExport'</a>,
--   <a>stopContinuousExport_exportId</a> - The unique ID assigned to this
--   export.
newStopContinuousExport :: Text -> StopContinuousExport

-- | <i>See:</i> <a>newStopContinuousExportResponse</a> smart constructor.
data StopContinuousExportResponse
StopContinuousExportResponse' :: Maybe POSIX -> Maybe POSIX -> Int -> StopContinuousExportResponse

-- | Create a value of <a>StopContinuousExportResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:startTime:StopContinuousExportResponse'</a>,
--   <a>stopContinuousExportResponse_startTime</a> - Timestamp that
--   represents when this continuous export started collecting data.
--   
--   <a>$sel:stopTime:StopContinuousExportResponse'</a>,
--   <a>stopContinuousExportResponse_stopTime</a> - Timestamp that
--   represents when this continuous export was stopped.
--   
--   <a>$sel:httpStatus:StopContinuousExportResponse'</a>,
--   <a>stopContinuousExportResponse_httpStatus</a> - The response's http
--   status code.
newStopContinuousExportResponse :: Int -> StopContinuousExportResponse

-- | <i>See:</i> <a>newStartExportTask</a> smart constructor.
data StartExportTask
StartExportTask' :: Maybe [ExportDataFormat] -> Maybe POSIX -> Maybe [ExportFilter] -> Maybe POSIX -> StartExportTask

-- | Create a value of <a>StartExportTask</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:exportDataFormat:StartExportTask'</a>,
--   <a>startExportTask_exportDataFormat</a> - The file format for the
--   returned export data. Default value is <tt>CSV</tt>. <b>Note:</b>
--   <i>The</i> <tt>GRAPHML</tt> <i>option has been deprecated.</i>
--   
--   <a>$sel:startTime:StartExportTask'</a>,
--   <a>startExportTask_startTime</a> - The start timestamp for exported
--   data from the single Application Discovery Agent selected in the
--   filters. If no value is specified, data is exported starting from the
--   first data collected by the agent.
--   
--   <a>$sel:filters:StartExportTask'</a>, <a>startExportTask_filters</a> -
--   If a filter is present, it selects the single <tt>agentId</tt> of the
--   Application Discovery Agent for which data is exported. The
--   <tt>agentId</tt> can be found in the results of the
--   <tt>DescribeAgents</tt> API or CLI. If no filter is present,
--   <tt>startTime</tt> and <tt>endTime</tt> are ignored and exported data
--   includes both Agentless Discovery Connector data and summary data from
--   Application Discovery agents.
--   
--   <a>$sel:endTime:StartExportTask'</a>, <a>startExportTask_endTime</a> -
--   The end timestamp for exported data from the single Application
--   Discovery Agent selected in the filters. If no value is specified,
--   exported data includes the most recent data collected by the agent.
newStartExportTask :: StartExportTask

-- | <i>See:</i> <a>newStartExportTaskResponse</a> smart constructor.
data StartExportTaskResponse
StartExportTaskResponse' :: Maybe Text -> Int -> StartExportTaskResponse

-- | Create a value of <a>StartExportTaskResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:exportId:StartExportTaskResponse'</a>,
--   <a>startExportTaskResponse_exportId</a> - A unique identifier used to
--   query the status of an export request.
--   
--   <a>$sel:httpStatus:StartExportTaskResponse'</a>,
--   <a>startExportTaskResponse_httpStatus</a> - The response's http status
--   code.
newStartExportTaskResponse :: Int -> StartExportTaskResponse
newtype AgentStatus
AgentStatus' :: Text -> AgentStatus
[fromAgentStatus] :: AgentStatus -> Text
pattern AgentStatus_BLACKLISTED :: AgentStatus
pattern AgentStatus_HEALTHY :: AgentStatus
pattern AgentStatus_RUNNING :: AgentStatus
pattern AgentStatus_SHUTDOWN :: AgentStatus
pattern AgentStatus_UNHEALTHY :: AgentStatus
pattern AgentStatus_UNKNOWN :: AgentStatus
newtype BatchDeleteImportDataErrorCode
BatchDeleteImportDataErrorCode' :: Text -> BatchDeleteImportDataErrorCode
[fromBatchDeleteImportDataErrorCode] :: BatchDeleteImportDataErrorCode -> Text
pattern BatchDeleteImportDataErrorCode_INTERNAL_SERVER_ERROR :: BatchDeleteImportDataErrorCode
pattern BatchDeleteImportDataErrorCode_NOT_FOUND :: BatchDeleteImportDataErrorCode
pattern BatchDeleteImportDataErrorCode_OVER_LIMIT :: BatchDeleteImportDataErrorCode
newtype ConfigurationItemType
ConfigurationItemType' :: Text -> ConfigurationItemType
[fromConfigurationItemType] :: ConfigurationItemType -> Text
pattern ConfigurationItemType_APPLICATION :: ConfigurationItemType
pattern ConfigurationItemType_CONNECTION :: ConfigurationItemType
pattern ConfigurationItemType_PROCESS :: ConfigurationItemType
pattern ConfigurationItemType_SERVER :: ConfigurationItemType
newtype ContinuousExportStatus
ContinuousExportStatus' :: Text -> ContinuousExportStatus
[fromContinuousExportStatus] :: ContinuousExportStatus -> Text
pattern ContinuousExportStatus_ACTIVE :: ContinuousExportStatus
pattern ContinuousExportStatus_ERROR :: ContinuousExportStatus
pattern ContinuousExportStatus_INACTIVE :: ContinuousExportStatus
pattern ContinuousExportStatus_START_FAILED :: ContinuousExportStatus
pattern ContinuousExportStatus_START_IN_PROGRESS :: ContinuousExportStatus
pattern ContinuousExportStatus_STOP_FAILED :: ContinuousExportStatus
pattern ContinuousExportStatus_STOP_IN_PROGRESS :: ContinuousExportStatus
newtype DataSource
DataSource' :: Text -> DataSource
[fromDataSource] :: DataSource -> Text
pattern DataSource_AGENT :: DataSource
newtype ExportDataFormat
ExportDataFormat' :: Text -> ExportDataFormat
[fromExportDataFormat] :: ExportDataFormat -> Text
pattern ExportDataFormat_CSV :: ExportDataFormat
pattern ExportDataFormat_GRAPHML :: ExportDataFormat
newtype ExportStatus
ExportStatus' :: Text -> ExportStatus
[fromExportStatus] :: ExportStatus -> Text
pattern ExportStatus_FAILED :: ExportStatus
pattern ExportStatus_IN_PROGRESS :: ExportStatus
pattern ExportStatus_SUCCEEDED :: ExportStatus
newtype ImportStatus
ImportStatus' :: Text -> ImportStatus
[fromImportStatus] :: ImportStatus -> Text
pattern ImportStatus_DELETE_COMPLETE :: ImportStatus
pattern ImportStatus_DELETE_FAILED :: ImportStatus
pattern ImportStatus_DELETE_FAILED_LIMIT_EXCEEDED :: ImportStatus
pattern ImportStatus_DELETE_IN_PROGRESS :: ImportStatus
pattern ImportStatus_IMPORT_COMPLETE :: ImportStatus
pattern ImportStatus_IMPORT_COMPLETE_WITH_ERRORS :: ImportStatus
pattern ImportStatus_IMPORT_FAILED :: ImportStatus
pattern ImportStatus_IMPORT_FAILED_RECORD_LIMIT_EXCEEDED :: ImportStatus
pattern ImportStatus_IMPORT_FAILED_SERVER_LIMIT_EXCEEDED :: ImportStatus
pattern ImportStatus_IMPORT_IN_PROGRESS :: ImportStatus
pattern ImportStatus_INTERNAL_ERROR :: ImportStatus
newtype ImportTaskFilterName
ImportTaskFilterName' :: Text -> ImportTaskFilterName
[fromImportTaskFilterName] :: ImportTaskFilterName -> Text
pattern ImportTaskFilterName_IMPORT_TASK_ID :: ImportTaskFilterName
pattern ImportTaskFilterName_NAME :: ImportTaskFilterName
pattern ImportTaskFilterName_STATUS :: ImportTaskFilterName
newtype OrderString
OrderString' :: Text -> OrderString
[fromOrderString] :: OrderString -> Text
pattern OrderString_ASC :: OrderString
pattern OrderString_DESC :: OrderString

-- | Information about agents or connectors that were instructed to start
--   collecting data. Information includes the agent/connector ID, a
--   description of the operation, and whether the agent/connector
--   configuration was updated.
--   
--   <i>See:</i> <a>newAgentConfigurationStatus</a> smart constructor.
data AgentConfigurationStatus
AgentConfigurationStatus' :: Maybe Text -> Maybe Bool -> Maybe Text -> AgentConfigurationStatus

-- | Create a value of <a>AgentConfigurationStatus</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:agentId:AgentConfigurationStatus'</a>,
--   <a>agentConfigurationStatus_agentId</a> - The agent/connector ID.
--   
--   <a>$sel:operationSucceeded:AgentConfigurationStatus'</a>,
--   <a>agentConfigurationStatus_operationSucceeded</a> - Information about
--   the status of the <tt>StartDataCollection</tt> and
--   <tt>StopDataCollection</tt> operations. The system has recorded the
--   data collection operation. The agent/connector receives this command
--   the next time it polls for a new command.
--   
--   <a>$sel:description:AgentConfigurationStatus'</a>,
--   <a>agentConfigurationStatus_description</a> - A description of the
--   operation performed.
newAgentConfigurationStatus :: AgentConfigurationStatus

-- | Information about agents or connectors associated with the userâ€™s AWS
--   account. Information includes agent or connector IDs, IP addresses,
--   media access control (MAC) addresses, agent or connector health,
--   hostname where the agent or connector resides, and agent version for
--   each agent.
--   
--   <i>See:</i> <a>newAgentInfo</a> smart constructor.
data AgentInfo
AgentInfo' :: Maybe Text -> Maybe Text -> Maybe [AgentNetworkInfo] -> Maybe Text -> Maybe AgentStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> AgentInfo

-- | Create a value of <a>AgentInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hostName:AgentInfo'</a>, <a>agentInfo_hostName</a> - The name
--   of the host where the agent or connector resides. The host can be a
--   server or virtual machine.
--   
--   <a>$sel:lastHealthPingTime:AgentInfo'</a>,
--   <a>agentInfo_lastHealthPingTime</a> - Time since agent or connector
--   health was reported.
--   
--   <a>$sel:agentNetworkInfoList:AgentInfo'</a>,
--   <a>agentInfo_agentNetworkInfoList</a> - Network details about the host
--   where the agent or connector resides.
--   
--   <a>$sel:connectorId:AgentInfo'</a>, <a>agentInfo_connectorId</a> - The
--   ID of the connector.
--   
--   <a>$sel:health:AgentInfo'</a>, <a>agentInfo_health</a> - The health of
--   the agent or connector.
--   
--   <a>$sel:agentId:AgentInfo'</a>, <a>agentInfo_agentId</a> - The agent
--   or connector ID.
--   
--   <a>$sel:version:AgentInfo'</a>, <a>agentInfo_version</a> - The agent
--   or connector version.
--   
--   <a>$sel:collectionStatus:AgentInfo'</a>,
--   <a>agentInfo_collectionStatus</a> - Status of the collection process
--   for an agent or connector.
--   
--   <a>$sel:registeredTime:AgentInfo'</a>, <a>agentInfo_registeredTime</a>
--   - Agent's first registration timestamp in UTC.
--   
--   <a>$sel:agentType:AgentInfo'</a>, <a>agentInfo_agentType</a> - Type of
--   agent.
newAgentInfo :: AgentInfo

-- | Network details about the host where the agent/connector resides.
--   
--   <i>See:</i> <a>newAgentNetworkInfo</a> smart constructor.
data AgentNetworkInfo
AgentNetworkInfo' :: Maybe Text -> Maybe Text -> AgentNetworkInfo

-- | Create a value of <a>AgentNetworkInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ipAddress:AgentNetworkInfo'</a>,
--   <a>agentNetworkInfo_ipAddress</a> - The IP address for the host where
--   the agent/connector resides.
--   
--   <a>$sel:macAddress:AgentNetworkInfo'</a>,
--   <a>agentNetworkInfo_macAddress</a> - The MAC address for the host
--   where the agent/connector resides.
newAgentNetworkInfo :: AgentNetworkInfo

-- | Error messages returned for each import task that you deleted as a
--   response for this command.
--   
--   <i>See:</i> <a>newBatchDeleteImportDataError</a> smart constructor.
data BatchDeleteImportDataError
BatchDeleteImportDataError' :: Maybe Text -> Maybe BatchDeleteImportDataErrorCode -> Maybe Text -> BatchDeleteImportDataError

-- | Create a value of <a>BatchDeleteImportDataError</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:importTaskId:BatchDeleteImportDataError'</a>,
--   <a>batchDeleteImportDataError_importTaskId</a> - The unique import ID
--   associated with the error that occurred.
--   
--   <a>$sel:errorCode:BatchDeleteImportDataError'</a>,
--   <a>batchDeleteImportDataError_errorCode</a> - The type of error that
--   occurred for a specific import task.
--   
--   <a>$sel:errorDescription:BatchDeleteImportDataError'</a>,
--   <a>batchDeleteImportDataError_errorDescription</a> - The description
--   of the error that occurred for a specific import task.
newBatchDeleteImportDataError :: BatchDeleteImportDataError

-- | Tags for a configuration item. Tags are metadata that help you
--   categorize IT assets.
--   
--   <i>See:</i> <a>newConfigurationTag</a> smart constructor.
data ConfigurationTag
ConfigurationTag' :: Maybe POSIX -> Maybe Text -> Maybe ConfigurationItemType -> Maybe Text -> Maybe Text -> ConfigurationTag

-- | Create a value of <a>ConfigurationTag</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timeOfCreation:ConfigurationTag'</a>,
--   <a>configurationTag_timeOfCreation</a> - The time the configuration
--   tag was created in Coordinated Universal Time (UTC).
--   
--   <a>$sel:configurationId:ConfigurationTag'</a>,
--   <a>configurationTag_configurationId</a> - The configuration ID for the
--   item to tag. You can specify a list of keys and values.
--   
--   <a>$sel:configurationType:ConfigurationTag'</a>,
--   <a>configurationTag_configurationType</a> - A type of IT asset to tag.
--   
--   <a>$sel:value:ConfigurationTag'</a>, <a>configurationTag_value</a> - A
--   value on which to filter. For example <i>key = serverType</i> and
--   /value = web server/.
--   
--   <a>$sel:key:ConfigurationTag'</a>, <a>configurationTag_key</a> - A
--   type of tag on which to filter. For example, <i>serverType</i>.
newConfigurationTag :: ConfigurationTag

-- | A list of continuous export descriptions.
--   
--   <i>See:</i> <a>newContinuousExportDescription</a> smart constructor.
data ContinuousExportDescription
ContinuousExportDescription' :: Maybe ContinuousExportStatus -> Maybe POSIX -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe POSIX -> Maybe DataSource -> Maybe Text -> Maybe Text -> ContinuousExportDescription

-- | Create a value of <a>ContinuousExportDescription</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ContinuousExportDescription'</a>,
--   <a>continuousExportDescription_status</a> - Describes the status of
--   the export. Can be one of the following values:
--   
--   <ul>
--   <li>START_IN_PROGRESS - setting up resources to start continuous
--   export.</li>
--   <li>START_FAILED - an error occurred setting up continuous export. To
--   recover, call start-continuous-export again.</li>
--   <li>ACTIVE - data is being exported to the customer bucket.</li>
--   <li>ERROR - an error occurred during export. To fix the issue, call
--   stop-continuous-export and start-continuous-export.</li>
--   <li>STOP_IN_PROGRESS - stopping the export.</li>
--   <li>STOP_FAILED - an error occurred stopping the export. To recover,
--   call stop-continuous-export again.</li>
--   <li>INACTIVE - the continuous export has been stopped. Data is no
--   longer being exported to the customer bucket.</li>
--   </ul>
--   
--   <a>$sel:startTime:ContinuousExportDescription'</a>,
--   <a>continuousExportDescription_startTime</a> - The timestamp
--   representing when the continuous export was started.
--   
--   <a>$sel:schemaStorageConfig:ContinuousExportDescription'</a>,
--   <a>continuousExportDescription_schemaStorageConfig</a> - An object
--   which describes how the data is stored.
--   
--   <ul>
--   <li><tt>databaseName</tt> - the name of the Glue database used to
--   store the schema.</li>
--   </ul>
--   
--   <a>$sel:statusDetail:ContinuousExportDescription'</a>,
--   <a>continuousExportDescription_statusDetail</a> - Contains information
--   about any errors that have occurred. This data type can have the
--   following values:
--   
--   <ul>
--   <li>ACCESS_DENIED - You donâ€™t have permission to start Data
--   Exploration in Amazon Athena. Contact your AWS administrator for help.
--   For more information, see <a>Setting Up AWS Application Discovery
--   Service</a> in the Application Discovery Service User Guide.</li>
--   <li>DELIVERY_STREAM_LIMIT_FAILURE - You reached the limit for Amazon
--   Kinesis Data Firehose delivery streams. Reduce the number of streams
--   or request a limit increase and try again. For more information, see
--   <a>Kinesis Data Streams Limits</a> in the Amazon Kinesis Data Streams
--   Developer Guide.</li>
--   <li>FIREHOSE_ROLE_MISSING - The Data Exploration feature is in an
--   error state because your IAM User is missing the
--   AWSApplicationDiscoveryServiceFirehose role. Turn on Data Exploration
--   in Amazon Athena and try again. For more information, see <a>Step 3:
--   Provide Application Discovery Service Access to Non-Administrator
--   Users by Attaching Policies</a> in the Application Discovery Service
--   User Guide.</li>
--   <li>FIREHOSE_STREAM_DOES_NOT_EXIST - The Data Exploration feature is
--   in an error state because your IAM User is missing one or more of the
--   Kinesis data delivery streams.</li>
--   <li>INTERNAL_FAILURE - The Data Exploration feature is in an error
--   state because of an internal failure. Try again later. If this problem
--   persists, contact AWS Support.</li>
--   <li>S3_BUCKET_LIMIT_FAILURE - You reached the limit for Amazon S3
--   buckets. Reduce the number of Amazon S3 buckets or request a limit
--   increase and try again. For more information, see <a>Bucket
--   Restrictions and Limitations</a> in the Amazon Simple Storage Service
--   Developer Guide.</li>
--   <li>S3_NOT_SIGNED_UP - Your account is not signed up for the Amazon S3
--   service. You must sign up before you can use Amazon S3. You can sign
--   up at the following URL: <a>https://aws.amazon.com/s3</a>.</li>
--   </ul>
--   
--   <a>$sel:stopTime:ContinuousExportDescription'</a>,
--   <a>continuousExportDescription_stopTime</a> - The timestamp that
--   represents when this continuous export was stopped.
--   
--   <a>$sel:dataSource:ContinuousExportDescription'</a>,
--   <a>continuousExportDescription_dataSource</a> - The type of data
--   collector used to gather this data (currently only offered for AGENT).
--   
--   <a>$sel:s3Bucket:ContinuousExportDescription'</a>,
--   <a>continuousExportDescription_s3Bucket</a> - The name of the s3
--   bucket where the export data parquet files are stored.
--   
--   <a>$sel:exportId:ContinuousExportDescription'</a>,
--   <a>continuousExportDescription_exportId</a> - The unique ID assigned
--   to this export.
newContinuousExportDescription :: ContinuousExportDescription

-- | Inventory data for installed discovery agents.
--   
--   <i>See:</i> <a>newCustomerAgentInfo</a> smart constructor.
data CustomerAgentInfo
CustomerAgentInfo' :: Int -> Int -> Int -> Int -> Int -> Int -> Int -> CustomerAgentInfo

-- | Create a value of <a>CustomerAgentInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:activeAgents:CustomerAgentInfo'</a>,
--   <a>customerAgentInfo_activeAgents</a> - Number of active discovery
--   agents.
--   
--   <a>$sel:healthyAgents:CustomerAgentInfo'</a>,
--   <a>customerAgentInfo_healthyAgents</a> - Number of healthy discovery
--   agents
--   
--   <a>$sel:blackListedAgents:CustomerAgentInfo'</a>,
--   <a>customerAgentInfo_blackListedAgents</a> - Number of blacklisted
--   discovery agents.
--   
--   <a>$sel:shutdownAgents:CustomerAgentInfo'</a>,
--   <a>customerAgentInfo_shutdownAgents</a> - Number of discovery agents
--   with status SHUTDOWN.
--   
--   <a>$sel:unhealthyAgents:CustomerAgentInfo'</a>,
--   <a>customerAgentInfo_unhealthyAgents</a> - Number of unhealthy
--   discovery agents.
--   
--   <a>$sel:totalAgents:CustomerAgentInfo'</a>,
--   <a>customerAgentInfo_totalAgents</a> - Total number of discovery
--   agents.
--   
--   <a>$sel:unknownAgents:CustomerAgentInfo'</a>,
--   <a>customerAgentInfo_unknownAgents</a> - Number of unknown discovery
--   agents.
newCustomerAgentInfo :: Int -> Int -> Int -> Int -> Int -> Int -> Int -> CustomerAgentInfo

-- | Inventory data for installed discovery connectors.
--   
--   <i>See:</i> <a>newCustomerConnectorInfo</a> smart constructor.
data CustomerConnectorInfo
CustomerConnectorInfo' :: Int -> Int -> Int -> Int -> Int -> Int -> Int -> CustomerConnectorInfo

-- | Create a value of <a>CustomerConnectorInfo</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:activeConnectors:CustomerConnectorInfo'</a>,
--   <a>customerConnectorInfo_activeConnectors</a> - Number of active
--   discovery connectors.
--   
--   <a>$sel:healthyConnectors:CustomerConnectorInfo'</a>,
--   <a>customerConnectorInfo_healthyConnectors</a> - Number of healthy
--   discovery connectors.
--   
--   <a>$sel:blackListedConnectors:CustomerConnectorInfo'</a>,
--   <a>customerConnectorInfo_blackListedConnectors</a> - Number of
--   blacklisted discovery connectors.
--   
--   <a>$sel:shutdownConnectors:CustomerConnectorInfo'</a>,
--   <a>customerConnectorInfo_shutdownConnectors</a> - Number of discovery
--   connectors with status SHUTDOWN,
--   
--   <a>$sel:unhealthyConnectors:CustomerConnectorInfo'</a>,
--   <a>customerConnectorInfo_unhealthyConnectors</a> - Number of unhealthy
--   discovery connectors.
--   
--   <a>$sel:totalConnectors:CustomerConnectorInfo'</a>,
--   <a>customerConnectorInfo_totalConnectors</a> - Total number of
--   discovery connectors.
--   
--   <a>$sel:unknownConnectors:CustomerConnectorInfo'</a>,
--   <a>customerConnectorInfo_unknownConnectors</a> - Number of unknown
--   discovery connectors.
newCustomerConnectorInfo :: Int -> Int -> Int -> Int -> Int -> Int -> Int -> CustomerConnectorInfo

-- | Used to select which agent's data is to be exported. A single agent ID
--   may be selected for export using the <a>StartExportTask</a> action.
--   
--   <i>See:</i> <a>newExportFilter</a> smart constructor.
data ExportFilter
ExportFilter' :: Text -> [Text] -> Text -> ExportFilter

-- | Create a value of <a>ExportFilter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:ExportFilter'</a>, <a>exportFilter_name</a> - A single
--   <tt>ExportFilter</tt> name. Supported filters: <tt>agentId</tt>.
--   
--   <a>$sel:values:ExportFilter'</a>, <a>exportFilter_values</a> - A
--   single <tt>agentId</tt> for a Discovery Agent. An <tt>agentId</tt> can
--   be found using the <a>DescribeAgents</a> action. Typically an ADS
--   <tt>agentId</tt> is in the form <tt>o-0123456789abcdef0</tt>.
--   
--   <a>$sel:condition:ExportFilter'</a>, <a>exportFilter_condition</a> -
--   Supported condition: <tt>EQUALS</tt>
newExportFilter :: Text -> Text -> ExportFilter

-- | Information regarding the export status of discovered data. The value
--   is an array of objects.
--   
--   <i>See:</i> <a>newExportInfo</a> smart constructor.
data ExportInfo
ExportInfo' :: Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe Bool -> Text -> ExportStatus -> Text -> POSIX -> ExportInfo

-- | Create a value of <a>ExportInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configurationsDownloadUrl:ExportInfo'</a>,
--   <a>exportInfo_configurationsDownloadUrl</a> - A URL for an Amazon S3
--   bucket where you can review the exported data. The URL is displayed
--   only if the export succeeded.
--   
--   <a>$sel:requestedStartTime:ExportInfo'</a>,
--   <a>exportInfo_requestedStartTime</a> - The value of <tt>startTime</tt>
--   parameter in the <tt>StartExportTask</tt> request. If no
--   <tt>startTime</tt> was requested, this result does not appear in
--   <tt>ExportInfo</tt>.
--   
--   <a>$sel:requestedEndTime:ExportInfo'</a>,
--   <a>exportInfo_requestedEndTime</a> - The <tt>endTime</tt> used in the
--   <tt>StartExportTask</tt> request. If no <tt>endTime</tt> was
--   requested, this result does not appear in <tt>ExportInfo</tt>.
--   
--   <a>$sel:isTruncated:ExportInfo'</a>, <a>exportInfo_isTruncated</a> -
--   If true, the export of agent information exceeded the size limit for a
--   single export and the exported data is incomplete for the requested
--   time range. To address this, select a smaller time range for the
--   export by using <tt>startDate</tt> and <tt>endDate</tt>.
--   
--   <a>$sel:exportId:ExportInfo'</a>, <a>exportInfo_exportId</a> - A
--   unique identifier used to query an export.
--   
--   <a>$sel:exportStatus:ExportInfo'</a>, <a>exportInfo_exportStatus</a> -
--   The status of the data export job.
--   
--   <a>$sel:statusMessage:ExportInfo'</a>, <a>exportInfo_statusMessage</a>
--   - A status message provided for API callers.
--   
--   <a>$sel:exportRequestTime:ExportInfo'</a>,
--   <a>exportInfo_exportRequestTime</a> - The time that the data export
--   was initiated.
newExportInfo :: Text -> ExportStatus -> Text -> UTCTime -> ExportInfo

-- | A filter that can use conditional operators.
--   
--   For more information about filters, see <a>Querying Discovered
--   Configuration Items</a> in the <i>AWS Application Discovery Service
--   User Guide</i>.
--   
--   <i>See:</i> <a>newFilter</a> smart constructor.
data Filter
Filter' :: Text -> [Text] -> Text -> Filter

-- | Create a value of <a>Filter</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:Filter'</a>, <a>filter_name</a> - The name of the filter.
--   
--   <a>$sel:values:Filter'</a>, <a>filter_values</a> - A string value on
--   which to filter. For example, if you choose the
--   <tt>destinationServer.osVersion</tt> filter name, you could specify
--   <tt>Ubuntu</tt> for the value.
--   
--   <a>$sel:condition:Filter'</a>, <a>filter_condition</a> - A conditional
--   operator. The following operators are valid: EQUALS, NOT_EQUALS,
--   CONTAINS, NOT_CONTAINS. If you specify multiple filters, the system
--   utilizes all filters as though concatenated by <i>AND</i>. If you
--   specify multiple values for a particular filter, the system
--   differentiates the values using <i>OR</i>. Calling either
--   <i>DescribeConfigurations</i> or <i>ListConfigurations</i> returns
--   attributes of matching configuration items.
newFilter :: Text -> Text -> Filter

-- | An array of information related to the import task request that
--   includes status information, times, IDs, the Amazon S3 Object URL for
--   the import file, and more.
--   
--   <i>See:</i> <a>newImportTask</a> smart constructor.
data ImportTask
ImportTask' :: Maybe Int -> Maybe ImportStatus -> Maybe Int -> Maybe POSIX -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe POSIX -> ImportTask

-- | Create a value of <a>ImportTask</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationImportSuccess:ImportTask'</a>,
--   <a>importTask_applicationImportSuccess</a> - The total number of
--   application records in the import file that were successfully
--   imported.
--   
--   <a>$sel:status:ImportTask'</a>, <a>importTask_status</a> - The status
--   of the import task. An import can have the status of
--   <tt>IMPORT_COMPLETE</tt> and still have some records fail to import
--   from the overall request. More information can be found in the
--   downloadable archive defined in the <tt>errorsAndFailedEntriesZip</tt>
--   field, or in the Migration Hub management console.
--   
--   <a>$sel:serverImportSuccess:ImportTask'</a>,
--   <a>importTask_serverImportSuccess</a> - The total number of server
--   records in the import file that were successfully imported.
--   
--   <a>$sel:importCompletionTime:ImportTask'</a>,
--   <a>importTask_importCompletionTime</a> - The time that the import task
--   request finished, presented in the Unix time stamp format.
--   
--   <a>$sel:name:ImportTask'</a>, <a>importTask_name</a> - A descriptive
--   name for an import task. You can use this name to filter future
--   requests related to this import task, such as identifying applications
--   and servers that were included in this import task. We recommend that
--   you use a meaningful name for each import task.
--   
--   <a>$sel:applicationImportFailure:ImportTask'</a>,
--   <a>importTask_applicationImportFailure</a> - The total number of
--   application records in the import file that failed to be imported.
--   
--   <a>$sel:errorsAndFailedEntriesZip:ImportTask'</a>,
--   <a>importTask_errorsAndFailedEntriesZip</a> - A link to a compressed
--   archive folder (in the ZIP format) that contains an error log and a
--   file of failed records. You can use these two files to quickly
--   identify records that failed, why they failed, and correct those
--   records. Afterward, you can upload the corrected file to your Amazon
--   S3 bucket and create another import task request.
--   
--   This field also includes authorization information so you can confirm
--   the authenticity of the compressed archive before you download it.
--   
--   If some records failed to be imported we recommend that you correct
--   the records in the failed entries file and then imports that failed
--   entries file. This prevents you from having to correct and update the
--   larger original file and attempt importing it again.
--   
--   <a>$sel:importTaskId:ImportTask'</a>, <a>importTask_importTaskId</a> -
--   The unique ID for a specific import task. These IDs aren't globally
--   unique, but they are unique within an AWS account.
--   
--   <a>$sel:importDeletedTime:ImportTask'</a>,
--   <a>importTask_importDeletedTime</a> - The time that the import task
--   request was deleted, presented in the Unix time stamp format.
--   
--   <a>$sel:serverImportFailure:ImportTask'</a>,
--   <a>importTask_serverImportFailure</a> - The total number of server
--   records in the import file that failed to be imported.
--   
--   <a>$sel:clientRequestToken:ImportTask'</a>,
--   <a>importTask_clientRequestToken</a> - A unique token used to prevent
--   the same import request from occurring more than once. If you didn't
--   provide a token, a token was automatically generated when the import
--   task request was sent.
--   
--   <a>$sel:importUrl:ImportTask'</a>, <a>importTask_importUrl</a> - The
--   URL for your import file that you've uploaded to Amazon S3.
--   
--   <a>$sel:importRequestTime:ImportTask'</a>,
--   <a>importTask_importRequestTime</a> - The time that the import task
--   request was made, presented in the Unix time stamp format.
newImportTask :: ImportTask

-- | A name-values pair of elements you can use to filter the results when
--   querying your import tasks. Currently, wildcards are not supported for
--   filters.
--   
--   When filtering by import status, all other filter values are ignored.
--   
--   <i>See:</i> <a>newImportTaskFilter</a> smart constructor.
data ImportTaskFilter
ImportTaskFilter' :: Maybe (NonEmpty Text) -> Maybe ImportTaskFilterName -> ImportTaskFilter

-- | Create a value of <a>ImportTaskFilter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:values:ImportTaskFilter'</a>, <a>importTaskFilter_values</a> -
--   An array of strings that you can provide to match against a specific
--   name, status, or import task ID to filter the results for your import
--   task queries.
--   
--   <a>$sel:name:ImportTaskFilter'</a>, <a>importTaskFilter_name</a> - The
--   name, status, or import task ID for a specific import task.
newImportTaskFilter :: ImportTaskFilter

-- | Details about neighboring servers.
--   
--   <i>See:</i> <a>newNeighborConnectionDetail</a> smart constructor.
data NeighborConnectionDetail
NeighborConnectionDetail' :: Maybe Text -> Maybe Int -> Text -> Text -> Integer -> NeighborConnectionDetail

-- | Create a value of <a>NeighborConnectionDetail</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:transportProtocol:NeighborConnectionDetail'</a>,
--   <a>neighborConnectionDetail_transportProtocol</a> - The network
--   protocol used for the connection.
--   
--   <a>$sel:destinationPort:NeighborConnectionDetail'</a>,
--   <a>neighborConnectionDetail_destinationPort</a> - The destination
--   network port for the connection.
--   
--   <a>$sel:sourceServerId:NeighborConnectionDetail'</a>,
--   <a>neighborConnectionDetail_sourceServerId</a> - The ID of the server
--   that opened the network connection.
--   
--   <a>$sel:destinationServerId:NeighborConnectionDetail'</a>,
--   <a>neighborConnectionDetail_destinationServerId</a> - The ID of the
--   server that accepted the network connection.
--   
--   <a>$sel:connectionsCount:NeighborConnectionDetail'</a>,
--   <a>neighborConnectionDetail_connectionsCount</a> - The number of open
--   network connections with the neighboring server.
newNeighborConnectionDetail :: Text -> Text -> Integer -> NeighborConnectionDetail

-- | A field and direction for ordered output.
--   
--   <i>See:</i> <a>newOrderByElement</a> smart constructor.
data OrderByElement
OrderByElement' :: Maybe OrderString -> Text -> OrderByElement

-- | Create a value of <a>OrderByElement</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sortOrder:OrderByElement'</a>, <a>orderByElement_sortOrder</a>
--   - Ordering direction.
--   
--   <a>$sel:fieldName:OrderByElement'</a>, <a>orderByElement_fieldName</a>
--   - The field on which to order.
newOrderByElement :: Text -> OrderByElement

-- | Metadata that help you categorize IT assets.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The type of tag on which to
--   filter.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - A value for a tag key on
--   which to filter.
newTag :: Text -> Text -> Tag

-- | The tag filter. Valid names are: <tt>tagKey</tt>, <tt>tagValue</tt>,
--   <tt>configurationId</tt>.
--   
--   <i>See:</i> <a>newTagFilter</a> smart constructor.
data TagFilter
TagFilter' :: Text -> [Text] -> TagFilter

-- | Create a value of <a>TagFilter</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:TagFilter'</a>, <a>tagFilter_name</a> - A name of the tag
--   filter.
--   
--   <a>$sel:values:TagFilter'</a>, <a>tagFilter_values</a> - Values for
--   the tag filter.
newTagFilter :: Text -> TagFilter
