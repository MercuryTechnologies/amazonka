-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-dlmZSamazonka-dlm
@version 2.0


module Amazonka.DLM.Types.EncryptionConfiguration

-- | Specifies the encryption settings for shared snapshots that are copied
--   across Regions.
--   
--   <i>See:</i> <a>newEncryptionConfiguration</a> smart constructor.
data EncryptionConfiguration
EncryptionConfiguration' :: Maybe Text -> Bool -> EncryptionConfiguration

-- | The Amazon Resource Name (ARN) of the KMS key to use for EBS
--   encryption. If this parameter is not specified, the default KMS key
--   for the account is used.
[$sel:cmkArn:EncryptionConfiguration'] :: EncryptionConfiguration -> Maybe Text

-- | To encrypt a copy of an unencrypted snapshot when encryption by
--   default is not enabled, enable encryption using this parameter. Copies
--   of encrypted snapshots are encrypted, even if this parameter is false
--   or when encryption by default is not enabled.
[$sel:encrypted:EncryptionConfiguration'] :: EncryptionConfiguration -> Bool

-- | Create a value of <a>EncryptionConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cmkArn:EncryptionConfiguration'</a>,
--   <a>encryptionConfiguration_cmkArn</a> - The Amazon Resource Name (ARN)
--   of the KMS key to use for EBS encryption. If this parameter is not
--   specified, the default KMS key for the account is used.
--   
--   <a>$sel:encrypted:EncryptionConfiguration'</a>,
--   <a>encryptionConfiguration_encrypted</a> - To encrypt a copy of an
--   unencrypted snapshot when encryption by default is not enabled, enable
--   encryption using this parameter. Copies of encrypted snapshots are
--   encrypted, even if this parameter is false or when encryption by
--   default is not enabled.
newEncryptionConfiguration :: Bool -> EncryptionConfiguration

-- | The Amazon Resource Name (ARN) of the KMS key to use for EBS
--   encryption. If this parameter is not specified, the default KMS key
--   for the account is used.
encryptionConfiguration_cmkArn :: Lens' EncryptionConfiguration (Maybe Text)

-- | To encrypt a copy of an unencrypted snapshot when encryption by
--   default is not enabled, enable encryption using this parameter. Copies
--   of encrypted snapshots are encrypted, even if this parameter is false
--   or when encryption by default is not enabled.
encryptionConfiguration_encrypted :: Lens' EncryptionConfiguration Bool
instance GHC.Generics.Generic Amazonka.DLM.Types.EncryptionConfiguration.EncryptionConfiguration
instance GHC.Show.Show Amazonka.DLM.Types.EncryptionConfiguration.EncryptionConfiguration
instance GHC.Read.Read Amazonka.DLM.Types.EncryptionConfiguration.EncryptionConfiguration
instance GHC.Classes.Eq Amazonka.DLM.Types.EncryptionConfiguration.EncryptionConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DLM.Types.EncryptionConfiguration.EncryptionConfiguration
instance Data.Hashable.Class.Hashable Amazonka.DLM.Types.EncryptionConfiguration.EncryptionConfiguration
instance Control.DeepSeq.NFData Amazonka.DLM.Types.EncryptionConfiguration.EncryptionConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DLM.Types.EncryptionConfiguration.EncryptionConfiguration


module Amazonka.DLM.Types.EventSourceValues
newtype EventSourceValues
EventSourceValues' :: Text -> EventSourceValues
[fromEventSourceValues] :: EventSourceValues -> Text
pattern EventSourceValues_MANAGED_CWE :: EventSourceValues
instance Amazonka.Data.XML.ToXML Amazonka.DLM.Types.EventSourceValues.EventSourceValues
instance Amazonka.Data.XML.FromXML Amazonka.DLM.Types.EventSourceValues.EventSourceValues
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.DLM.Types.EventSourceValues.EventSourceValues
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DLM.Types.EventSourceValues.EventSourceValues
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.DLM.Types.EventSourceValues.EventSourceValues
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DLM.Types.EventSourceValues.EventSourceValues
instance Amazonka.Data.Query.ToQuery Amazonka.DLM.Types.EventSourceValues.EventSourceValues
instance Amazonka.Data.Headers.ToHeader Amazonka.DLM.Types.EventSourceValues.EventSourceValues
instance Amazonka.Data.Log.ToLog Amazonka.DLM.Types.EventSourceValues.EventSourceValues
instance Amazonka.Data.ByteString.ToByteString Amazonka.DLM.Types.EventSourceValues.EventSourceValues
instance Amazonka.Data.Text.ToText Amazonka.DLM.Types.EventSourceValues.EventSourceValues
instance Amazonka.Data.Text.FromText Amazonka.DLM.Types.EventSourceValues.EventSourceValues
instance Control.DeepSeq.NFData Amazonka.DLM.Types.EventSourceValues.EventSourceValues
instance Data.Hashable.Class.Hashable Amazonka.DLM.Types.EventSourceValues.EventSourceValues
instance GHC.Generics.Generic Amazonka.DLM.Types.EventSourceValues.EventSourceValues
instance GHC.Classes.Ord Amazonka.DLM.Types.EventSourceValues.EventSourceValues
instance GHC.Classes.Eq Amazonka.DLM.Types.EventSourceValues.EventSourceValues
instance GHC.Read.Read Amazonka.DLM.Types.EventSourceValues.EventSourceValues
instance GHC.Show.Show Amazonka.DLM.Types.EventSourceValues.EventSourceValues


module Amazonka.DLM.Types.EventTypeValues
newtype EventTypeValues
EventTypeValues' :: Text -> EventTypeValues
[fromEventTypeValues] :: EventTypeValues -> Text
pattern EventTypeValues_ShareSnapshot :: EventTypeValues
instance Amazonka.Data.XML.ToXML Amazonka.DLM.Types.EventTypeValues.EventTypeValues
instance Amazonka.Data.XML.FromXML Amazonka.DLM.Types.EventTypeValues.EventTypeValues
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.DLM.Types.EventTypeValues.EventTypeValues
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DLM.Types.EventTypeValues.EventTypeValues
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.DLM.Types.EventTypeValues.EventTypeValues
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DLM.Types.EventTypeValues.EventTypeValues
instance Amazonka.Data.Query.ToQuery Amazonka.DLM.Types.EventTypeValues.EventTypeValues
instance Amazonka.Data.Headers.ToHeader Amazonka.DLM.Types.EventTypeValues.EventTypeValues
instance Amazonka.Data.Log.ToLog Amazonka.DLM.Types.EventTypeValues.EventTypeValues
instance Amazonka.Data.ByteString.ToByteString Amazonka.DLM.Types.EventTypeValues.EventTypeValues
instance Amazonka.Data.Text.ToText Amazonka.DLM.Types.EventTypeValues.EventTypeValues
instance Amazonka.Data.Text.FromText Amazonka.DLM.Types.EventTypeValues.EventTypeValues
instance Control.DeepSeq.NFData Amazonka.DLM.Types.EventTypeValues.EventTypeValues
instance Data.Hashable.Class.Hashable Amazonka.DLM.Types.EventTypeValues.EventTypeValues
instance GHC.Generics.Generic Amazonka.DLM.Types.EventTypeValues.EventTypeValues
instance GHC.Classes.Ord Amazonka.DLM.Types.EventTypeValues.EventTypeValues
instance GHC.Classes.Eq Amazonka.DLM.Types.EventTypeValues.EventTypeValues
instance GHC.Read.Read Amazonka.DLM.Types.EventTypeValues.EventTypeValues
instance GHC.Show.Show Amazonka.DLM.Types.EventTypeValues.EventTypeValues


module Amazonka.DLM.Types.EventParameters

-- | Specifies an event that triggers an event-based policy.
--   
--   <i>See:</i> <a>newEventParameters</a> smart constructor.
data EventParameters
EventParameters' :: EventTypeValues -> [Text] -> Text -> EventParameters

-- | The type of event. Currently, only snapshot sharing events are
--   supported.
[$sel:eventType:EventParameters'] :: EventParameters -> EventTypeValues

-- | The IDs of the Amazon Web Services accounts that can trigger policy by
--   sharing snapshots with your account. The policy only runs if one of
--   the specified Amazon Web Services accounts shares a snapshot with your
--   account.
[$sel:snapshotOwner:EventParameters'] :: EventParameters -> [Text]

-- | The snapshot description that can trigger the policy. The description
--   pattern is specified using a regular expression. The policy runs only
--   if a snapshot with a description that matches the specified pattern is
--   shared with your account.
--   
--   For example, specifying <tt>^.*Created for policy:
--   policy-1234567890abcdef0.*$</tt> configures the policy to run only if
--   snapshots created by policy <tt>policy-1234567890abcdef0</tt> are
--   shared with your account.
[$sel:descriptionRegex:EventParameters'] :: EventParameters -> Text

-- | Create a value of <a>EventParameters</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventType:EventParameters'</a>,
--   <a>eventParameters_eventType</a> - The type of event. Currently, only
--   snapshot sharing events are supported.
--   
--   <a>$sel:snapshotOwner:EventParameters'</a>,
--   <a>eventParameters_snapshotOwner</a> - The IDs of the Amazon Web
--   Services accounts that can trigger policy by sharing snapshots with
--   your account. The policy only runs if one of the specified Amazon Web
--   Services accounts shares a snapshot with your account.
--   
--   <a>$sel:descriptionRegex:EventParameters'</a>,
--   <a>eventParameters_descriptionRegex</a> - The snapshot description
--   that can trigger the policy. The description pattern is specified
--   using a regular expression. The policy runs only if a snapshot with a
--   description that matches the specified pattern is shared with your
--   account.
--   
--   For example, specifying <tt>^.*Created for policy:
--   policy-1234567890abcdef0.*$</tt> configures the policy to run only if
--   snapshots created by policy <tt>policy-1234567890abcdef0</tt> are
--   shared with your account.
newEventParameters :: EventTypeValues -> Text -> EventParameters

-- | The type of event. Currently, only snapshot sharing events are
--   supported.
eventParameters_eventType :: Lens' EventParameters EventTypeValues

-- | The IDs of the Amazon Web Services accounts that can trigger policy by
--   sharing snapshots with your account. The policy only runs if one of
--   the specified Amazon Web Services accounts shares a snapshot with your
--   account.
eventParameters_snapshotOwner :: Lens' EventParameters [Text]

-- | The snapshot description that can trigger the policy. The description
--   pattern is specified using a regular expression. The policy runs only
--   if a snapshot with a description that matches the specified pattern is
--   shared with your account.
--   
--   For example, specifying <tt>^.*Created for policy:
--   policy-1234567890abcdef0.*$</tt> configures the policy to run only if
--   snapshots created by policy <tt>policy-1234567890abcdef0</tt> are
--   shared with your account.
eventParameters_descriptionRegex :: Lens' EventParameters Text
instance GHC.Generics.Generic Amazonka.DLM.Types.EventParameters.EventParameters
instance GHC.Show.Show Amazonka.DLM.Types.EventParameters.EventParameters
instance GHC.Read.Read Amazonka.DLM.Types.EventParameters.EventParameters
instance GHC.Classes.Eq Amazonka.DLM.Types.EventParameters.EventParameters
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DLM.Types.EventParameters.EventParameters
instance Data.Hashable.Class.Hashable Amazonka.DLM.Types.EventParameters.EventParameters
instance Control.DeepSeq.NFData Amazonka.DLM.Types.EventParameters.EventParameters
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DLM.Types.EventParameters.EventParameters


module Amazonka.DLM.Types.EventSource

-- | Specifies an event that triggers an event-based policy.
--   
--   <i>See:</i> <a>newEventSource</a> smart constructor.
data EventSource
EventSource' :: Maybe EventParameters -> EventSourceValues -> EventSource

-- | Information about the event.
[$sel:parameters:EventSource'] :: EventSource -> Maybe EventParameters

-- | The source of the event. Currently only managed CloudWatch Events
--   rules are supported.
[$sel:type':EventSource'] :: EventSource -> EventSourceValues

-- | Create a value of <a>EventSource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameters:EventSource'</a>, <a>eventSource_parameters</a> -
--   Information about the event.
--   
--   <a>$sel:type':EventSource'</a>, <a>eventSource_type</a> - The source
--   of the event. Currently only managed CloudWatch Events rules are
--   supported.
newEventSource :: EventSourceValues -> EventSource

-- | Information about the event.
eventSource_parameters :: Lens' EventSource (Maybe EventParameters)

-- | The source of the event. Currently only managed CloudWatch Events
--   rules are supported.
eventSource_type :: Lens' EventSource EventSourceValues
instance GHC.Generics.Generic Amazonka.DLM.Types.EventSource.EventSource
instance GHC.Show.Show Amazonka.DLM.Types.EventSource.EventSource
instance GHC.Read.Read Amazonka.DLM.Types.EventSource.EventSource
instance GHC.Classes.Eq Amazonka.DLM.Types.EventSource.EventSource
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DLM.Types.EventSource.EventSource
instance Data.Hashable.Class.Hashable Amazonka.DLM.Types.EventSource.EventSource
instance Control.DeepSeq.NFData Amazonka.DLM.Types.EventSource.EventSource
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DLM.Types.EventSource.EventSource


module Amazonka.DLM.Types.GettablePolicyStateValues
newtype GettablePolicyStateValues
GettablePolicyStateValues' :: Text -> GettablePolicyStateValues
[fromGettablePolicyStateValues] :: GettablePolicyStateValues -> Text
pattern GettablePolicyStateValues_DISABLED :: GettablePolicyStateValues
pattern GettablePolicyStateValues_ENABLED :: GettablePolicyStateValues
pattern GettablePolicyStateValues_ERROR :: GettablePolicyStateValues
instance Amazonka.Data.XML.ToXML Amazonka.DLM.Types.GettablePolicyStateValues.GettablePolicyStateValues
instance Amazonka.Data.XML.FromXML Amazonka.DLM.Types.GettablePolicyStateValues.GettablePolicyStateValues
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.DLM.Types.GettablePolicyStateValues.GettablePolicyStateValues
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DLM.Types.GettablePolicyStateValues.GettablePolicyStateValues
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.DLM.Types.GettablePolicyStateValues.GettablePolicyStateValues
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DLM.Types.GettablePolicyStateValues.GettablePolicyStateValues
instance Amazonka.Data.Query.ToQuery Amazonka.DLM.Types.GettablePolicyStateValues.GettablePolicyStateValues
instance Amazonka.Data.Headers.ToHeader Amazonka.DLM.Types.GettablePolicyStateValues.GettablePolicyStateValues
instance Amazonka.Data.Log.ToLog Amazonka.DLM.Types.GettablePolicyStateValues.GettablePolicyStateValues
instance Amazonka.Data.ByteString.ToByteString Amazonka.DLM.Types.GettablePolicyStateValues.GettablePolicyStateValues
instance Amazonka.Data.Text.ToText Amazonka.DLM.Types.GettablePolicyStateValues.GettablePolicyStateValues
instance Amazonka.Data.Text.FromText Amazonka.DLM.Types.GettablePolicyStateValues.GettablePolicyStateValues
instance Control.DeepSeq.NFData Amazonka.DLM.Types.GettablePolicyStateValues.GettablePolicyStateValues
instance Data.Hashable.Class.Hashable Amazonka.DLM.Types.GettablePolicyStateValues.GettablePolicyStateValues
instance GHC.Generics.Generic Amazonka.DLM.Types.GettablePolicyStateValues.GettablePolicyStateValues
instance GHC.Classes.Ord Amazonka.DLM.Types.GettablePolicyStateValues.GettablePolicyStateValues
instance GHC.Classes.Eq Amazonka.DLM.Types.GettablePolicyStateValues.GettablePolicyStateValues
instance GHC.Read.Read Amazonka.DLM.Types.GettablePolicyStateValues.GettablePolicyStateValues
instance GHC.Show.Show Amazonka.DLM.Types.GettablePolicyStateValues.GettablePolicyStateValues


module Amazonka.DLM.Types.IntervalUnitValues
newtype IntervalUnitValues
IntervalUnitValues' :: Text -> IntervalUnitValues
[fromIntervalUnitValues] :: IntervalUnitValues -> Text
pattern IntervalUnitValues_HOURS :: IntervalUnitValues
instance Amazonka.Data.XML.ToXML Amazonka.DLM.Types.IntervalUnitValues.IntervalUnitValues
instance Amazonka.Data.XML.FromXML Amazonka.DLM.Types.IntervalUnitValues.IntervalUnitValues
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.DLM.Types.IntervalUnitValues.IntervalUnitValues
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DLM.Types.IntervalUnitValues.IntervalUnitValues
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.DLM.Types.IntervalUnitValues.IntervalUnitValues
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DLM.Types.IntervalUnitValues.IntervalUnitValues
instance Amazonka.Data.Query.ToQuery Amazonka.DLM.Types.IntervalUnitValues.IntervalUnitValues
instance Amazonka.Data.Headers.ToHeader Amazonka.DLM.Types.IntervalUnitValues.IntervalUnitValues
instance Amazonka.Data.Log.ToLog Amazonka.DLM.Types.IntervalUnitValues.IntervalUnitValues
instance Amazonka.Data.ByteString.ToByteString Amazonka.DLM.Types.IntervalUnitValues.IntervalUnitValues
instance Amazonka.Data.Text.ToText Amazonka.DLM.Types.IntervalUnitValues.IntervalUnitValues
instance Amazonka.Data.Text.FromText Amazonka.DLM.Types.IntervalUnitValues.IntervalUnitValues
instance Control.DeepSeq.NFData Amazonka.DLM.Types.IntervalUnitValues.IntervalUnitValues
instance Data.Hashable.Class.Hashable Amazonka.DLM.Types.IntervalUnitValues.IntervalUnitValues
instance GHC.Generics.Generic Amazonka.DLM.Types.IntervalUnitValues.IntervalUnitValues
instance GHC.Classes.Ord Amazonka.DLM.Types.IntervalUnitValues.IntervalUnitValues
instance GHC.Classes.Eq Amazonka.DLM.Types.IntervalUnitValues.IntervalUnitValues
instance GHC.Read.Read Amazonka.DLM.Types.IntervalUnitValues.IntervalUnitValues
instance GHC.Show.Show Amazonka.DLM.Types.IntervalUnitValues.IntervalUnitValues


module Amazonka.DLM.Types.LocationValues
newtype LocationValues
LocationValues' :: Text -> LocationValues
[fromLocationValues] :: LocationValues -> Text
pattern LocationValues_CLOUD :: LocationValues
pattern LocationValues_OUTPOST_LOCAL :: LocationValues
instance Amazonka.Data.XML.ToXML Amazonka.DLM.Types.LocationValues.LocationValues
instance Amazonka.Data.XML.FromXML Amazonka.DLM.Types.LocationValues.LocationValues
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.DLM.Types.LocationValues.LocationValues
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DLM.Types.LocationValues.LocationValues
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.DLM.Types.LocationValues.LocationValues
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DLM.Types.LocationValues.LocationValues
instance Amazonka.Data.Query.ToQuery Amazonka.DLM.Types.LocationValues.LocationValues
instance Amazonka.Data.Headers.ToHeader Amazonka.DLM.Types.LocationValues.LocationValues
instance Amazonka.Data.Log.ToLog Amazonka.DLM.Types.LocationValues.LocationValues
instance Amazonka.Data.ByteString.ToByteString Amazonka.DLM.Types.LocationValues.LocationValues
instance Amazonka.Data.Text.ToText Amazonka.DLM.Types.LocationValues.LocationValues
instance Amazonka.Data.Text.FromText Amazonka.DLM.Types.LocationValues.LocationValues
instance Control.DeepSeq.NFData Amazonka.DLM.Types.LocationValues.LocationValues
instance Data.Hashable.Class.Hashable Amazonka.DLM.Types.LocationValues.LocationValues
instance GHC.Generics.Generic Amazonka.DLM.Types.LocationValues.LocationValues
instance GHC.Classes.Ord Amazonka.DLM.Types.LocationValues.LocationValues
instance GHC.Classes.Eq Amazonka.DLM.Types.LocationValues.LocationValues
instance GHC.Read.Read Amazonka.DLM.Types.LocationValues.LocationValues
instance GHC.Show.Show Amazonka.DLM.Types.LocationValues.LocationValues


module Amazonka.DLM.Types.CreateRule

-- | Specifies when to create snapshots of EBS volumes.
--   
--   You must specify either a Cron expression or an interval, interval
--   unit, and start time. You cannot specify both.
--   
--   <i>See:</i> <a>newCreateRule</a> smart constructor.
data CreateRule
CreateRule' :: Maybe LocationValues -> Maybe Natural -> Maybe Text -> Maybe [Text] -> Maybe IntervalUnitValues -> CreateRule

-- | Specifies the destination for snapshots created by the policy. To
--   create snapshots in the same Region as the source resource, specify
--   <tt>CLOUD</tt>. To create snapshots on the same Outpost as the source
--   resource, specify <tt>OUTPOST_LOCAL</tt>. If you omit this parameter,
--   <tt>CLOUD</tt> is used by default.
--   
--   If the policy targets resources in an Amazon Web Services Region, then
--   you must create snapshots in the same Region as the source resource.
--   
--   If the policy targets resources on an Outpost, then you can create
--   snapshots on the same Outpost as the source resource, or in the Region
--   of that Outpost.
[$sel:location:CreateRule'] :: CreateRule -> Maybe LocationValues

-- | The interval between snapshots. The supported values are 1, 2, 3, 4,
--   6, 8, 12, and 24.
[$sel:interval:CreateRule'] :: CreateRule -> Maybe Natural

-- | The schedule, as a Cron expression. The schedule interval must be
--   between 1 hour and 1 year. For more information, see <a>Cron
--   expressions</a> in the <i>Amazon CloudWatch User Guide</i>.
[$sel:cronExpression:CreateRule'] :: CreateRule -> Maybe Text

-- | The time, in UTC, to start the operation. The supported format is
--   hh:mm.
--   
--   The operation occurs within a one-hour window following the specified
--   time. If you do not specify a time, Amazon DLM selects a time within
--   the next 24 hours.
[$sel:times:CreateRule'] :: CreateRule -> Maybe [Text]

-- | The interval unit.
[$sel:intervalUnit:CreateRule'] :: CreateRule -> Maybe IntervalUnitValues

-- | Create a value of <a>CreateRule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:location:CreateRule'</a>, <a>createRule_location</a> -
--   Specifies the destination for snapshots created by the policy. To
--   create snapshots in the same Region as the source resource, specify
--   <tt>CLOUD</tt>. To create snapshots on the same Outpost as the source
--   resource, specify <tt>OUTPOST_LOCAL</tt>. If you omit this parameter,
--   <tt>CLOUD</tt> is used by default.
--   
--   If the policy targets resources in an Amazon Web Services Region, then
--   you must create snapshots in the same Region as the source resource.
--   
--   If the policy targets resources on an Outpost, then you can create
--   snapshots on the same Outpost as the source resource, or in the Region
--   of that Outpost.
--   
--   <a>$sel:interval:CreateRule'</a>, <a>createRule_interval</a> - The
--   interval between snapshots. The supported values are 1, 2, 3, 4, 6, 8,
--   12, and 24.
--   
--   <a>$sel:cronExpression:CreateRule'</a>,
--   <a>createRule_cronExpression</a> - The schedule, as a Cron expression.
--   The schedule interval must be between 1 hour and 1 year. For more
--   information, see <a>Cron expressions</a> in the <i>Amazon CloudWatch
--   User Guide</i>.
--   
--   <a>$sel:times:CreateRule'</a>, <a>createRule_times</a> - The time, in
--   UTC, to start the operation. The supported format is hh:mm.
--   
--   The operation occurs within a one-hour window following the specified
--   time. If you do not specify a time, Amazon DLM selects a time within
--   the next 24 hours.
--   
--   <a>$sel:intervalUnit:CreateRule'</a>, <a>createRule_intervalUnit</a> -
--   The interval unit.
newCreateRule :: CreateRule

-- | Specifies the destination for snapshots created by the policy. To
--   create snapshots in the same Region as the source resource, specify
--   <tt>CLOUD</tt>. To create snapshots on the same Outpost as the source
--   resource, specify <tt>OUTPOST_LOCAL</tt>. If you omit this parameter,
--   <tt>CLOUD</tt> is used by default.
--   
--   If the policy targets resources in an Amazon Web Services Region, then
--   you must create snapshots in the same Region as the source resource.
--   
--   If the policy targets resources on an Outpost, then you can create
--   snapshots on the same Outpost as the source resource, or in the Region
--   of that Outpost.
createRule_location :: Lens' CreateRule (Maybe LocationValues)

-- | The interval between snapshots. The supported values are 1, 2, 3, 4,
--   6, 8, 12, and 24.
createRule_interval :: Lens' CreateRule (Maybe Natural)

-- | The schedule, as a Cron expression. The schedule interval must be
--   between 1 hour and 1 year. For more information, see <a>Cron
--   expressions</a> in the <i>Amazon CloudWatch User Guide</i>.
createRule_cronExpression :: Lens' CreateRule (Maybe Text)

-- | The time, in UTC, to start the operation. The supported format is
--   hh:mm.
--   
--   The operation occurs within a one-hour window following the specified
--   time. If you do not specify a time, Amazon DLM selects a time within
--   the next 24 hours.
createRule_times :: Lens' CreateRule (Maybe [Text])

-- | The interval unit.
createRule_intervalUnit :: Lens' CreateRule (Maybe IntervalUnitValues)
instance GHC.Generics.Generic Amazonka.DLM.Types.CreateRule.CreateRule
instance GHC.Show.Show Amazonka.DLM.Types.CreateRule.CreateRule
instance GHC.Read.Read Amazonka.DLM.Types.CreateRule.CreateRule
instance GHC.Classes.Eq Amazonka.DLM.Types.CreateRule.CreateRule
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DLM.Types.CreateRule.CreateRule
instance Data.Hashable.Class.Hashable Amazonka.DLM.Types.CreateRule.CreateRule
instance Control.DeepSeq.NFData Amazonka.DLM.Types.CreateRule.CreateRule
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DLM.Types.CreateRule.CreateRule


module Amazonka.DLM.Types.Parameters

-- | Specifies optional parameters to add to a policy. The set of valid
--   parameters depends on the combination of policy type and resource
--   type.
--   
--   <i>See:</i> <a>newParameters</a> smart constructor.
data Parameters
Parameters' :: Maybe Bool -> Maybe Bool -> Parameters

-- | Applies to AMI lifecycle policies only. Indicates whether targeted
--   instances are rebooted when the lifecycle policy runs. <tt>true</tt>
--   indicates that targeted instances are not rebooted when the policy
--   runs. <tt>false</tt> indicates that target instances are rebooted when
--   the policy runs. The default is <tt>true</tt> (instances are not
--   rebooted).
[$sel:noReboot:Parameters'] :: Parameters -> Maybe Bool

-- | <ul>
--   <li><i>EBS Snapshot Management – Instance policies only</i> Indicates
--   whether to exclude the root volume from snapshots created using
--   <a>CreateSnapshots</a>. The default is false.</li>
--   </ul>
[$sel:excludeBootVolume:Parameters'] :: Parameters -> Maybe Bool

-- | Create a value of <a>Parameters</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:noReboot:Parameters'</a>, <a>parameters_noReboot</a> - Applies
--   to AMI lifecycle policies only. Indicates whether targeted instances
--   are rebooted when the lifecycle policy runs. <tt>true</tt> indicates
--   that targeted instances are not rebooted when the policy runs.
--   <tt>false</tt> indicates that target instances are rebooted when the
--   policy runs. The default is <tt>true</tt> (instances are not
--   rebooted).
--   
--   <a>$sel:excludeBootVolume:Parameters'</a>,
--   <a>parameters_excludeBootVolume</a> - [EBS Snapshot Management –
--   Instance policies only] Indicates whether to exclude the root volume
--   from snapshots created using <a>CreateSnapshots</a>. The default is
--   false.
newParameters :: Parameters

-- | Applies to AMI lifecycle policies only. Indicates whether targeted
--   instances are rebooted when the lifecycle policy runs. <tt>true</tt>
--   indicates that targeted instances are not rebooted when the policy
--   runs. <tt>false</tt> indicates that target instances are rebooted when
--   the policy runs. The default is <tt>true</tt> (instances are not
--   rebooted).
parameters_noReboot :: Lens' Parameters (Maybe Bool)

-- | <ul>
--   <li><i>EBS Snapshot Management – Instance policies only</i> Indicates
--   whether to exclude the root volume from snapshots created using
--   <a>CreateSnapshots</a>. The default is false.</li>
--   </ul>
parameters_excludeBootVolume :: Lens' Parameters (Maybe Bool)
instance GHC.Generics.Generic Amazonka.DLM.Types.Parameters.Parameters
instance GHC.Show.Show Amazonka.DLM.Types.Parameters.Parameters
instance GHC.Read.Read Amazonka.DLM.Types.Parameters.Parameters
instance GHC.Classes.Eq Amazonka.DLM.Types.Parameters.Parameters
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DLM.Types.Parameters.Parameters
instance Data.Hashable.Class.Hashable Amazonka.DLM.Types.Parameters.Parameters
instance Control.DeepSeq.NFData Amazonka.DLM.Types.Parameters.Parameters
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DLM.Types.Parameters.Parameters


module Amazonka.DLM.Types.PolicyTypeValues
newtype PolicyTypeValues
PolicyTypeValues' :: Text -> PolicyTypeValues
[fromPolicyTypeValues] :: PolicyTypeValues -> Text
pattern PolicyTypeValues_EBS_SNAPSHOT_MANAGEMENT :: PolicyTypeValues
pattern PolicyTypeValues_EVENT_BASED_POLICY :: PolicyTypeValues
pattern PolicyTypeValues_IMAGE_MANAGEMENT :: PolicyTypeValues
instance Amazonka.Data.XML.ToXML Amazonka.DLM.Types.PolicyTypeValues.PolicyTypeValues
instance Amazonka.Data.XML.FromXML Amazonka.DLM.Types.PolicyTypeValues.PolicyTypeValues
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.DLM.Types.PolicyTypeValues.PolicyTypeValues
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DLM.Types.PolicyTypeValues.PolicyTypeValues
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.DLM.Types.PolicyTypeValues.PolicyTypeValues
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DLM.Types.PolicyTypeValues.PolicyTypeValues
instance Amazonka.Data.Query.ToQuery Amazonka.DLM.Types.PolicyTypeValues.PolicyTypeValues
instance Amazonka.Data.Headers.ToHeader Amazonka.DLM.Types.PolicyTypeValues.PolicyTypeValues
instance Amazonka.Data.Log.ToLog Amazonka.DLM.Types.PolicyTypeValues.PolicyTypeValues
instance Amazonka.Data.ByteString.ToByteString Amazonka.DLM.Types.PolicyTypeValues.PolicyTypeValues
instance Amazonka.Data.Text.ToText Amazonka.DLM.Types.PolicyTypeValues.PolicyTypeValues
instance Amazonka.Data.Text.FromText Amazonka.DLM.Types.PolicyTypeValues.PolicyTypeValues
instance Control.DeepSeq.NFData Amazonka.DLM.Types.PolicyTypeValues.PolicyTypeValues
instance Data.Hashable.Class.Hashable Amazonka.DLM.Types.PolicyTypeValues.PolicyTypeValues
instance GHC.Generics.Generic Amazonka.DLM.Types.PolicyTypeValues.PolicyTypeValues
instance GHC.Classes.Ord Amazonka.DLM.Types.PolicyTypeValues.PolicyTypeValues
instance GHC.Classes.Eq Amazonka.DLM.Types.PolicyTypeValues.PolicyTypeValues
instance GHC.Read.Read Amazonka.DLM.Types.PolicyTypeValues.PolicyTypeValues
instance GHC.Show.Show Amazonka.DLM.Types.PolicyTypeValues.PolicyTypeValues


module Amazonka.DLM.Types.LifecyclePolicySummary

-- | Summary information about a lifecycle policy.
--   
--   <i>See:</i> <a>newLifecyclePolicySummary</a> smart constructor.
data LifecyclePolicySummary
LifecyclePolicySummary' :: Maybe GettablePolicyStateValues -> Maybe Text -> Maybe PolicyTypeValues -> Maybe Text -> Maybe (HashMap Text Text) -> LifecyclePolicySummary

-- | The activation state of the lifecycle policy.
[$sel:state:LifecyclePolicySummary'] :: LifecyclePolicySummary -> Maybe GettablePolicyStateValues

-- | The identifier of the lifecycle policy.
[$sel:policyId:LifecyclePolicySummary'] :: LifecyclePolicySummary -> Maybe Text

-- | The type of policy. <tt>EBS_SNAPSHOT_MANAGEMENT</tt> indicates that
--   the policy manages the lifecycle of Amazon EBS snapshots.
--   <tt>IMAGE_MANAGEMENT</tt> indicates that the policy manages the
--   lifecycle of EBS-backed AMIs.
[$sel:policyType:LifecyclePolicySummary'] :: LifecyclePolicySummary -> Maybe PolicyTypeValues

-- | The description of the lifecycle policy.
[$sel:description:LifecyclePolicySummary'] :: LifecyclePolicySummary -> Maybe Text

-- | The tags.
[$sel:tags:LifecyclePolicySummary'] :: LifecyclePolicySummary -> Maybe (HashMap Text Text)

-- | Create a value of <a>LifecyclePolicySummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:LifecyclePolicySummary'</a>,
--   <a>lifecyclePolicySummary_state</a> - The activation state of the
--   lifecycle policy.
--   
--   <a>$sel:policyId:LifecyclePolicySummary'</a>,
--   <a>lifecyclePolicySummary_policyId</a> - The identifier of the
--   lifecycle policy.
--   
--   <a>$sel:policyType:LifecyclePolicySummary'</a>,
--   <a>lifecyclePolicySummary_policyType</a> - The type of policy.
--   <tt>EBS_SNAPSHOT_MANAGEMENT</tt> indicates that the policy manages the
--   lifecycle of Amazon EBS snapshots. <tt>IMAGE_MANAGEMENT</tt> indicates
--   that the policy manages the lifecycle of EBS-backed AMIs.
--   
--   <a>$sel:description:LifecyclePolicySummary'</a>,
--   <a>lifecyclePolicySummary_description</a> - The description of the
--   lifecycle policy.
--   
--   <a>$sel:tags:LifecyclePolicySummary'</a>,
--   <a>lifecyclePolicySummary_tags</a> - The tags.
newLifecyclePolicySummary :: LifecyclePolicySummary

-- | The activation state of the lifecycle policy.
lifecyclePolicySummary_state :: Lens' LifecyclePolicySummary (Maybe GettablePolicyStateValues)

-- | The identifier of the lifecycle policy.
lifecyclePolicySummary_policyId :: Lens' LifecyclePolicySummary (Maybe Text)

-- | The type of policy. <tt>EBS_SNAPSHOT_MANAGEMENT</tt> indicates that
--   the policy manages the lifecycle of Amazon EBS snapshots.
--   <tt>IMAGE_MANAGEMENT</tt> indicates that the policy manages the
--   lifecycle of EBS-backed AMIs.
lifecyclePolicySummary_policyType :: Lens' LifecyclePolicySummary (Maybe PolicyTypeValues)

-- | The description of the lifecycle policy.
lifecyclePolicySummary_description :: Lens' LifecyclePolicySummary (Maybe Text)

-- | The tags.
lifecyclePolicySummary_tags :: Lens' LifecyclePolicySummary (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Amazonka.DLM.Types.LifecyclePolicySummary.LifecyclePolicySummary
instance GHC.Show.Show Amazonka.DLM.Types.LifecyclePolicySummary.LifecyclePolicySummary
instance GHC.Read.Read Amazonka.DLM.Types.LifecyclePolicySummary.LifecyclePolicySummary
instance GHC.Classes.Eq Amazonka.DLM.Types.LifecyclePolicySummary.LifecyclePolicySummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DLM.Types.LifecyclePolicySummary.LifecyclePolicySummary
instance Data.Hashable.Class.Hashable Amazonka.DLM.Types.LifecyclePolicySummary.LifecyclePolicySummary
instance Control.DeepSeq.NFData Amazonka.DLM.Types.LifecyclePolicySummary.LifecyclePolicySummary


module Amazonka.DLM.Types.ResourceLocationValues
newtype ResourceLocationValues
ResourceLocationValues' :: Text -> ResourceLocationValues
[fromResourceLocationValues] :: ResourceLocationValues -> Text
pattern ResourceLocationValues_CLOUD :: ResourceLocationValues
pattern ResourceLocationValues_OUTPOST :: ResourceLocationValues
instance Amazonka.Data.XML.ToXML Amazonka.DLM.Types.ResourceLocationValues.ResourceLocationValues
instance Amazonka.Data.XML.FromXML Amazonka.DLM.Types.ResourceLocationValues.ResourceLocationValues
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.DLM.Types.ResourceLocationValues.ResourceLocationValues
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DLM.Types.ResourceLocationValues.ResourceLocationValues
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.DLM.Types.ResourceLocationValues.ResourceLocationValues
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DLM.Types.ResourceLocationValues.ResourceLocationValues
instance Amazonka.Data.Query.ToQuery Amazonka.DLM.Types.ResourceLocationValues.ResourceLocationValues
instance Amazonka.Data.Headers.ToHeader Amazonka.DLM.Types.ResourceLocationValues.ResourceLocationValues
instance Amazonka.Data.Log.ToLog Amazonka.DLM.Types.ResourceLocationValues.ResourceLocationValues
instance Amazonka.Data.ByteString.ToByteString Amazonka.DLM.Types.ResourceLocationValues.ResourceLocationValues
instance Amazonka.Data.Text.ToText Amazonka.DLM.Types.ResourceLocationValues.ResourceLocationValues
instance Amazonka.Data.Text.FromText Amazonka.DLM.Types.ResourceLocationValues.ResourceLocationValues
instance Control.DeepSeq.NFData Amazonka.DLM.Types.ResourceLocationValues.ResourceLocationValues
instance Data.Hashable.Class.Hashable Amazonka.DLM.Types.ResourceLocationValues.ResourceLocationValues
instance GHC.Generics.Generic Amazonka.DLM.Types.ResourceLocationValues.ResourceLocationValues
instance GHC.Classes.Ord Amazonka.DLM.Types.ResourceLocationValues.ResourceLocationValues
instance GHC.Classes.Eq Amazonka.DLM.Types.ResourceLocationValues.ResourceLocationValues
instance GHC.Read.Read Amazonka.DLM.Types.ResourceLocationValues.ResourceLocationValues
instance GHC.Show.Show Amazonka.DLM.Types.ResourceLocationValues.ResourceLocationValues


module Amazonka.DLM.Types.ResourceTypeValues
newtype ResourceTypeValues
ResourceTypeValues' :: Text -> ResourceTypeValues
[fromResourceTypeValues] :: ResourceTypeValues -> Text
pattern ResourceTypeValues_INSTANCE :: ResourceTypeValues
pattern ResourceTypeValues_VOLUME :: ResourceTypeValues
instance Amazonka.Data.XML.ToXML Amazonka.DLM.Types.ResourceTypeValues.ResourceTypeValues
instance Amazonka.Data.XML.FromXML Amazonka.DLM.Types.ResourceTypeValues.ResourceTypeValues
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.DLM.Types.ResourceTypeValues.ResourceTypeValues
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DLM.Types.ResourceTypeValues.ResourceTypeValues
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.DLM.Types.ResourceTypeValues.ResourceTypeValues
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DLM.Types.ResourceTypeValues.ResourceTypeValues
instance Amazonka.Data.Query.ToQuery Amazonka.DLM.Types.ResourceTypeValues.ResourceTypeValues
instance Amazonka.Data.Headers.ToHeader Amazonka.DLM.Types.ResourceTypeValues.ResourceTypeValues
instance Amazonka.Data.Log.ToLog Amazonka.DLM.Types.ResourceTypeValues.ResourceTypeValues
instance Amazonka.Data.ByteString.ToByteString Amazonka.DLM.Types.ResourceTypeValues.ResourceTypeValues
instance Amazonka.Data.Text.ToText Amazonka.DLM.Types.ResourceTypeValues.ResourceTypeValues
instance Amazonka.Data.Text.FromText Amazonka.DLM.Types.ResourceTypeValues.ResourceTypeValues
instance Control.DeepSeq.NFData Amazonka.DLM.Types.ResourceTypeValues.ResourceTypeValues
instance Data.Hashable.Class.Hashable Amazonka.DLM.Types.ResourceTypeValues.ResourceTypeValues
instance GHC.Generics.Generic Amazonka.DLM.Types.ResourceTypeValues.ResourceTypeValues
instance GHC.Classes.Ord Amazonka.DLM.Types.ResourceTypeValues.ResourceTypeValues
instance GHC.Classes.Eq Amazonka.DLM.Types.ResourceTypeValues.ResourceTypeValues
instance GHC.Read.Read Amazonka.DLM.Types.ResourceTypeValues.ResourceTypeValues
instance GHC.Show.Show Amazonka.DLM.Types.ResourceTypeValues.ResourceTypeValues


module Amazonka.DLM.Types.RetentionIntervalUnitValues
newtype RetentionIntervalUnitValues
RetentionIntervalUnitValues' :: Text -> RetentionIntervalUnitValues
[fromRetentionIntervalUnitValues] :: RetentionIntervalUnitValues -> Text
pattern RetentionIntervalUnitValues_DAYS :: RetentionIntervalUnitValues
pattern RetentionIntervalUnitValues_MONTHS :: RetentionIntervalUnitValues
pattern RetentionIntervalUnitValues_WEEKS :: RetentionIntervalUnitValues
pattern RetentionIntervalUnitValues_YEARS :: RetentionIntervalUnitValues
instance Amazonka.Data.XML.ToXML Amazonka.DLM.Types.RetentionIntervalUnitValues.RetentionIntervalUnitValues
instance Amazonka.Data.XML.FromXML Amazonka.DLM.Types.RetentionIntervalUnitValues.RetentionIntervalUnitValues
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.DLM.Types.RetentionIntervalUnitValues.RetentionIntervalUnitValues
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DLM.Types.RetentionIntervalUnitValues.RetentionIntervalUnitValues
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.DLM.Types.RetentionIntervalUnitValues.RetentionIntervalUnitValues
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DLM.Types.RetentionIntervalUnitValues.RetentionIntervalUnitValues
instance Amazonka.Data.Query.ToQuery Amazonka.DLM.Types.RetentionIntervalUnitValues.RetentionIntervalUnitValues
instance Amazonka.Data.Headers.ToHeader Amazonka.DLM.Types.RetentionIntervalUnitValues.RetentionIntervalUnitValues
instance Amazonka.Data.Log.ToLog Amazonka.DLM.Types.RetentionIntervalUnitValues.RetentionIntervalUnitValues
instance Amazonka.Data.ByteString.ToByteString Amazonka.DLM.Types.RetentionIntervalUnitValues.RetentionIntervalUnitValues
instance Amazonka.Data.Text.ToText Amazonka.DLM.Types.RetentionIntervalUnitValues.RetentionIntervalUnitValues
instance Amazonka.Data.Text.FromText Amazonka.DLM.Types.RetentionIntervalUnitValues.RetentionIntervalUnitValues
instance Control.DeepSeq.NFData Amazonka.DLM.Types.RetentionIntervalUnitValues.RetentionIntervalUnitValues
instance Data.Hashable.Class.Hashable Amazonka.DLM.Types.RetentionIntervalUnitValues.RetentionIntervalUnitValues
instance GHC.Generics.Generic Amazonka.DLM.Types.RetentionIntervalUnitValues.RetentionIntervalUnitValues
instance GHC.Classes.Ord Amazonka.DLM.Types.RetentionIntervalUnitValues.RetentionIntervalUnitValues
instance GHC.Classes.Eq Amazonka.DLM.Types.RetentionIntervalUnitValues.RetentionIntervalUnitValues
instance GHC.Read.Read Amazonka.DLM.Types.RetentionIntervalUnitValues.RetentionIntervalUnitValues
instance GHC.Show.Show Amazonka.DLM.Types.RetentionIntervalUnitValues.RetentionIntervalUnitValues


module Amazonka.DLM.Types.RetainRule

-- | Specifies the retention rule for a lifecycle policy. You can retain
--   snapshots based on either a count or a time interval.
--   
--   <i>See:</i> <a>newRetainRule</a> smart constructor.
data RetainRule
RetainRule' :: Maybe Natural -> Maybe Natural -> Maybe RetentionIntervalUnitValues -> RetainRule

-- | The number of snapshots to retain for each volume, up to a maximum of
--   1000.
[$sel:count:RetainRule'] :: RetainRule -> Maybe Natural

-- | The amount of time to retain each snapshot. The maximum is 100 years.
--   This is equivalent to 1200 months, 5200 weeks, or 36500 days.
[$sel:interval:RetainRule'] :: RetainRule -> Maybe Natural

-- | The unit of time for time-based retention.
[$sel:intervalUnit:RetainRule'] :: RetainRule -> Maybe RetentionIntervalUnitValues

-- | Create a value of <a>RetainRule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:count:RetainRule'</a>, <a>retainRule_count</a> - The number of
--   snapshots to retain for each volume, up to a maximum of 1000.
--   
--   <a>$sel:interval:RetainRule'</a>, <a>retainRule_interval</a> - The
--   amount of time to retain each snapshot. The maximum is 100 years. This
--   is equivalent to 1200 months, 5200 weeks, or 36500 days.
--   
--   <a>$sel:intervalUnit:RetainRule'</a>, <a>retainRule_intervalUnit</a> -
--   The unit of time for time-based retention.
newRetainRule :: RetainRule

-- | The number of snapshots to retain for each volume, up to a maximum of
--   1000.
retainRule_count :: Lens' RetainRule (Maybe Natural)

-- | The amount of time to retain each snapshot. The maximum is 100 years.
--   This is equivalent to 1200 months, 5200 weeks, or 36500 days.
retainRule_interval :: Lens' RetainRule (Maybe Natural)

-- | The unit of time for time-based retention.
retainRule_intervalUnit :: Lens' RetainRule (Maybe RetentionIntervalUnitValues)
instance GHC.Generics.Generic Amazonka.DLM.Types.RetainRule.RetainRule
instance GHC.Show.Show Amazonka.DLM.Types.RetainRule.RetainRule
instance GHC.Read.Read Amazonka.DLM.Types.RetainRule.RetainRule
instance GHC.Classes.Eq Amazonka.DLM.Types.RetainRule.RetainRule
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DLM.Types.RetainRule.RetainRule
instance Data.Hashable.Class.Hashable Amazonka.DLM.Types.RetainRule.RetainRule
instance Control.DeepSeq.NFData Amazonka.DLM.Types.RetainRule.RetainRule
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DLM.Types.RetainRule.RetainRule


module Amazonka.DLM.Types.FastRestoreRule

-- | Specifies a rule for enabling fast snapshot restore. You can enable
--   fast snapshot restore based on either a count or a time interval.
--   
--   <i>See:</i> <a>newFastRestoreRule</a> smart constructor.
data FastRestoreRule
FastRestoreRule' :: Maybe Natural -> Maybe Natural -> Maybe RetentionIntervalUnitValues -> NonEmpty Text -> FastRestoreRule

-- | The number of snapshots to be enabled with fast snapshot restore.
[$sel:count:FastRestoreRule'] :: FastRestoreRule -> Maybe Natural

-- | The amount of time to enable fast snapshot restore. The maximum is 100
--   years. This is equivalent to 1200 months, 5200 weeks, or 36500 days.
[$sel:interval:FastRestoreRule'] :: FastRestoreRule -> Maybe Natural

-- | The unit of time for enabling fast snapshot restore.
[$sel:intervalUnit:FastRestoreRule'] :: FastRestoreRule -> Maybe RetentionIntervalUnitValues

-- | The Availability Zones in which to enable fast snapshot restore.
[$sel:availabilityZones:FastRestoreRule'] :: FastRestoreRule -> NonEmpty Text

-- | Create a value of <a>FastRestoreRule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:count:FastRestoreRule'</a>, <a>fastRestoreRule_count</a> - The
--   number of snapshots to be enabled with fast snapshot restore.
--   
--   <a>$sel:interval:FastRestoreRule'</a>, <a>fastRestoreRule_interval</a>
--   - The amount of time to enable fast snapshot restore. The maximum is
--   100 years. This is equivalent to 1200 months, 5200 weeks, or 36500
--   days.
--   
--   <a>$sel:intervalUnit:FastRestoreRule'</a>,
--   <a>fastRestoreRule_intervalUnit</a> - The unit of time for enabling
--   fast snapshot restore.
--   
--   <a>$sel:availabilityZones:FastRestoreRule'</a>,
--   <a>fastRestoreRule_availabilityZones</a> - The Availability Zones in
--   which to enable fast snapshot restore.
newFastRestoreRule :: NonEmpty Text -> FastRestoreRule

-- | The number of snapshots to be enabled with fast snapshot restore.
fastRestoreRule_count :: Lens' FastRestoreRule (Maybe Natural)

-- | The amount of time to enable fast snapshot restore. The maximum is 100
--   years. This is equivalent to 1200 months, 5200 weeks, or 36500 days.
fastRestoreRule_interval :: Lens' FastRestoreRule (Maybe Natural)

-- | The unit of time for enabling fast snapshot restore.
fastRestoreRule_intervalUnit :: Lens' FastRestoreRule (Maybe RetentionIntervalUnitValues)

-- | The Availability Zones in which to enable fast snapshot restore.
fastRestoreRule_availabilityZones :: Lens' FastRestoreRule (NonEmpty Text)
instance GHC.Generics.Generic Amazonka.DLM.Types.FastRestoreRule.FastRestoreRule
instance GHC.Show.Show Amazonka.DLM.Types.FastRestoreRule.FastRestoreRule
instance GHC.Read.Read Amazonka.DLM.Types.FastRestoreRule.FastRestoreRule
instance GHC.Classes.Eq Amazonka.DLM.Types.FastRestoreRule.FastRestoreRule
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DLM.Types.FastRestoreRule.FastRestoreRule
instance Data.Hashable.Class.Hashable Amazonka.DLM.Types.FastRestoreRule.FastRestoreRule
instance Control.DeepSeq.NFData Amazonka.DLM.Types.FastRestoreRule.FastRestoreRule
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DLM.Types.FastRestoreRule.FastRestoreRule


module Amazonka.DLM.Types.DeprecateRule

-- | Specifies an AMI deprecation rule for a schedule.
--   
--   <i>See:</i> <a>newDeprecateRule</a> smart constructor.
data DeprecateRule
DeprecateRule' :: Maybe Natural -> Maybe Natural -> Maybe RetentionIntervalUnitValues -> DeprecateRule

-- | If the schedule has a count-based retention rule, this parameter
--   specifies the number of oldest AMIs to deprecate. The count must be
--   less than or equal to the schedule's retention count, and it can't be
--   greater than 1000.
[$sel:count:DeprecateRule'] :: DeprecateRule -> Maybe Natural

-- | If the schedule has an age-based retention rule, this parameter
--   specifies the period after which to deprecate AMIs created by the
--   schedule. The period must be less than or equal to the schedule's
--   retention period, and it can't be greater than 10 years. This is
--   equivalent to 120 months, 520 weeks, or 3650 days.
[$sel:interval:DeprecateRule'] :: DeprecateRule -> Maybe Natural

-- | The unit of time in which to measure the <b>Interval</b>.
[$sel:intervalUnit:DeprecateRule'] :: DeprecateRule -> Maybe RetentionIntervalUnitValues

-- | Create a value of <a>DeprecateRule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:count:DeprecateRule'</a>, <a>deprecateRule_count</a> - If the
--   schedule has a count-based retention rule, this parameter specifies
--   the number of oldest AMIs to deprecate. The count must be less than or
--   equal to the schedule's retention count, and it can't be greater than
--   1000.
--   
--   <a>$sel:interval:DeprecateRule'</a>, <a>deprecateRule_interval</a> -
--   If the schedule has an age-based retention rule, this parameter
--   specifies the period after which to deprecate AMIs created by the
--   schedule. The period must be less than or equal to the schedule's
--   retention period, and it can't be greater than 10 years. This is
--   equivalent to 120 months, 520 weeks, or 3650 days.
--   
--   <a>$sel:intervalUnit:DeprecateRule'</a>,
--   <a>deprecateRule_intervalUnit</a> - The unit of time in which to
--   measure the <b>Interval</b>.
newDeprecateRule :: DeprecateRule

-- | If the schedule has a count-based retention rule, this parameter
--   specifies the number of oldest AMIs to deprecate. The count must be
--   less than or equal to the schedule's retention count, and it can't be
--   greater than 1000.
deprecateRule_count :: Lens' DeprecateRule (Maybe Natural)

-- | If the schedule has an age-based retention rule, this parameter
--   specifies the period after which to deprecate AMIs created by the
--   schedule. The period must be less than or equal to the schedule's
--   retention period, and it can't be greater than 10 years. This is
--   equivalent to 120 months, 520 weeks, or 3650 days.
deprecateRule_interval :: Lens' DeprecateRule (Maybe Natural)

-- | The unit of time in which to measure the <b>Interval</b>.
deprecateRule_intervalUnit :: Lens' DeprecateRule (Maybe RetentionIntervalUnitValues)
instance GHC.Generics.Generic Amazonka.DLM.Types.DeprecateRule.DeprecateRule
instance GHC.Show.Show Amazonka.DLM.Types.DeprecateRule.DeprecateRule
instance GHC.Read.Read Amazonka.DLM.Types.DeprecateRule.DeprecateRule
instance GHC.Classes.Eq Amazonka.DLM.Types.DeprecateRule.DeprecateRule
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DLM.Types.DeprecateRule.DeprecateRule
instance Data.Hashable.Class.Hashable Amazonka.DLM.Types.DeprecateRule.DeprecateRule
instance Control.DeepSeq.NFData Amazonka.DLM.Types.DeprecateRule.DeprecateRule
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DLM.Types.DeprecateRule.DeprecateRule


module Amazonka.DLM.Types.CrossRegionCopyRetainRule

-- | Specifies the retention rule for cross-Region snapshot copies.
--   
--   <i>See:</i> <a>newCrossRegionCopyRetainRule</a> smart constructor.
data CrossRegionCopyRetainRule
CrossRegionCopyRetainRule' :: Maybe Natural -> Maybe RetentionIntervalUnitValues -> CrossRegionCopyRetainRule

-- | The amount of time to retain each snapshot. The maximum is 100 years.
--   This is equivalent to 1200 months, 5200 weeks, or 36500 days.
[$sel:interval:CrossRegionCopyRetainRule'] :: CrossRegionCopyRetainRule -> Maybe Natural

-- | The unit of time for time-based retention.
[$sel:intervalUnit:CrossRegionCopyRetainRule'] :: CrossRegionCopyRetainRule -> Maybe RetentionIntervalUnitValues

-- | Create a value of <a>CrossRegionCopyRetainRule</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:interval:CrossRegionCopyRetainRule'</a>,
--   <a>crossRegionCopyRetainRule_interval</a> - The amount of time to
--   retain each snapshot. The maximum is 100 years. This is equivalent to
--   1200 months, 5200 weeks, or 36500 days.
--   
--   <a>$sel:intervalUnit:CrossRegionCopyRetainRule'</a>,
--   <a>crossRegionCopyRetainRule_intervalUnit</a> - The unit of time for
--   time-based retention.
newCrossRegionCopyRetainRule :: CrossRegionCopyRetainRule

-- | The amount of time to retain each snapshot. The maximum is 100 years.
--   This is equivalent to 1200 months, 5200 weeks, or 36500 days.
crossRegionCopyRetainRule_interval :: Lens' CrossRegionCopyRetainRule (Maybe Natural)

-- | The unit of time for time-based retention.
crossRegionCopyRetainRule_intervalUnit :: Lens' CrossRegionCopyRetainRule (Maybe RetentionIntervalUnitValues)
instance GHC.Generics.Generic Amazonka.DLM.Types.CrossRegionCopyRetainRule.CrossRegionCopyRetainRule
instance GHC.Show.Show Amazonka.DLM.Types.CrossRegionCopyRetainRule.CrossRegionCopyRetainRule
instance GHC.Read.Read Amazonka.DLM.Types.CrossRegionCopyRetainRule.CrossRegionCopyRetainRule
instance GHC.Classes.Eq Amazonka.DLM.Types.CrossRegionCopyRetainRule.CrossRegionCopyRetainRule
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DLM.Types.CrossRegionCopyRetainRule.CrossRegionCopyRetainRule
instance Data.Hashable.Class.Hashable Amazonka.DLM.Types.CrossRegionCopyRetainRule.CrossRegionCopyRetainRule
instance Control.DeepSeq.NFData Amazonka.DLM.Types.CrossRegionCopyRetainRule.CrossRegionCopyRetainRule
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DLM.Types.CrossRegionCopyRetainRule.CrossRegionCopyRetainRule


module Amazonka.DLM.Types.CrossRegionCopyAction

-- | Specifies a rule for copying shared snapshots across Regions.
--   
--   <i>See:</i> <a>newCrossRegionCopyAction</a> smart constructor.
data CrossRegionCopyAction
CrossRegionCopyAction' :: Maybe CrossRegionCopyRetainRule -> Text -> EncryptionConfiguration -> CrossRegionCopyAction
[$sel:retainRule:CrossRegionCopyAction'] :: CrossRegionCopyAction -> Maybe CrossRegionCopyRetainRule

-- | The target Region.
[$sel:target:CrossRegionCopyAction'] :: CrossRegionCopyAction -> Text

-- | The encryption settings for the copied snapshot.
[$sel:encryptionConfiguration:CrossRegionCopyAction'] :: CrossRegionCopyAction -> EncryptionConfiguration

-- | Create a value of <a>CrossRegionCopyAction</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:retainRule:CrossRegionCopyAction'</a>,
--   <a>crossRegionCopyAction_retainRule</a> - Undocumented member.
--   
--   <a>$sel:target:CrossRegionCopyAction'</a>,
--   <a>crossRegionCopyAction_target</a> - The target Region.
--   
--   <a>$sel:encryptionConfiguration:CrossRegionCopyAction'</a>,
--   <a>crossRegionCopyAction_encryptionConfiguration</a> - The encryption
--   settings for the copied snapshot.
newCrossRegionCopyAction :: Text -> EncryptionConfiguration -> CrossRegionCopyAction

-- | Undocumented member.
crossRegionCopyAction_retainRule :: Lens' CrossRegionCopyAction (Maybe CrossRegionCopyRetainRule)

-- | The target Region.
crossRegionCopyAction_target :: Lens' CrossRegionCopyAction Text

-- | The encryption settings for the copied snapshot.
crossRegionCopyAction_encryptionConfiguration :: Lens' CrossRegionCopyAction EncryptionConfiguration
instance GHC.Generics.Generic Amazonka.DLM.Types.CrossRegionCopyAction.CrossRegionCopyAction
instance GHC.Show.Show Amazonka.DLM.Types.CrossRegionCopyAction.CrossRegionCopyAction
instance GHC.Read.Read Amazonka.DLM.Types.CrossRegionCopyAction.CrossRegionCopyAction
instance GHC.Classes.Eq Amazonka.DLM.Types.CrossRegionCopyAction.CrossRegionCopyAction
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DLM.Types.CrossRegionCopyAction.CrossRegionCopyAction
instance Data.Hashable.Class.Hashable Amazonka.DLM.Types.CrossRegionCopyAction.CrossRegionCopyAction
instance Control.DeepSeq.NFData Amazonka.DLM.Types.CrossRegionCopyAction.CrossRegionCopyAction
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DLM.Types.CrossRegionCopyAction.CrossRegionCopyAction


module Amazonka.DLM.Types.Action

-- | Specifies an action for an event-based policy.
--   
--   <i>See:</i> <a>newAction</a> smart constructor.
data Action
Action' :: Text -> [CrossRegionCopyAction] -> Action

-- | A descriptive name for the action.
[$sel:name:Action'] :: Action -> Text

-- | The rule for copying shared snapshots across Regions.
[$sel:crossRegionCopy:Action'] :: Action -> [CrossRegionCopyAction]

-- | Create a value of <a>Action</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:Action'</a>, <a>action_name</a> - A descriptive name for
--   the action.
--   
--   <a>$sel:crossRegionCopy:Action'</a>, <a>action_crossRegionCopy</a> -
--   The rule for copying shared snapshots across Regions.
newAction :: Text -> Action

-- | A descriptive name for the action.
action_name :: Lens' Action Text

-- | The rule for copying shared snapshots across Regions.
action_crossRegionCopy :: Lens' Action [CrossRegionCopyAction]
instance GHC.Generics.Generic Amazonka.DLM.Types.Action.Action
instance GHC.Show.Show Amazonka.DLM.Types.Action.Action
instance GHC.Read.Read Amazonka.DLM.Types.Action.Action
instance GHC.Classes.Eq Amazonka.DLM.Types.Action.Action
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DLM.Types.Action.Action
instance Data.Hashable.Class.Hashable Amazonka.DLM.Types.Action.Action
instance Control.DeepSeq.NFData Amazonka.DLM.Types.Action.Action
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DLM.Types.Action.Action


module Amazonka.DLM.Types.CrossRegionCopyDeprecateRule

-- | Specifies an AMI deprecation rule for cross-Region AMI copies created
--   by a cross-Region copy rule.
--   
--   <i>See:</i> <a>newCrossRegionCopyDeprecateRule</a> smart constructor.
data CrossRegionCopyDeprecateRule
CrossRegionCopyDeprecateRule' :: Maybe Natural -> Maybe RetentionIntervalUnitValues -> CrossRegionCopyDeprecateRule

-- | The period after which to deprecate the cross-Region AMI copies. The
--   period must be less than or equal to the cross-Region AMI copy
--   retention period, and it can't be greater than 10 years. This is
--   equivalent to 120 months, 520 weeks, or 3650 days.
[$sel:interval:CrossRegionCopyDeprecateRule'] :: CrossRegionCopyDeprecateRule -> Maybe Natural

-- | The unit of time in which to measure the <b>Interval</b>.
[$sel:intervalUnit:CrossRegionCopyDeprecateRule'] :: CrossRegionCopyDeprecateRule -> Maybe RetentionIntervalUnitValues

-- | Create a value of <a>CrossRegionCopyDeprecateRule</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:interval:CrossRegionCopyDeprecateRule'</a>,
--   <a>crossRegionCopyDeprecateRule_interval</a> - The period after which
--   to deprecate the cross-Region AMI copies. The period must be less than
--   or equal to the cross-Region AMI copy retention period, and it can't
--   be greater than 10 years. This is equivalent to 120 months, 520 weeks,
--   or 3650 days.
--   
--   <a>$sel:intervalUnit:CrossRegionCopyDeprecateRule'</a>,
--   <a>crossRegionCopyDeprecateRule_intervalUnit</a> - The unit of time in
--   which to measure the <b>Interval</b>.
newCrossRegionCopyDeprecateRule :: CrossRegionCopyDeprecateRule

-- | The period after which to deprecate the cross-Region AMI copies. The
--   period must be less than or equal to the cross-Region AMI copy
--   retention period, and it can't be greater than 10 years. This is
--   equivalent to 120 months, 520 weeks, or 3650 days.
crossRegionCopyDeprecateRule_interval :: Lens' CrossRegionCopyDeprecateRule (Maybe Natural)

-- | The unit of time in which to measure the <b>Interval</b>.
crossRegionCopyDeprecateRule_intervalUnit :: Lens' CrossRegionCopyDeprecateRule (Maybe RetentionIntervalUnitValues)
instance GHC.Generics.Generic Amazonka.DLM.Types.CrossRegionCopyDeprecateRule.CrossRegionCopyDeprecateRule
instance GHC.Show.Show Amazonka.DLM.Types.CrossRegionCopyDeprecateRule.CrossRegionCopyDeprecateRule
instance GHC.Read.Read Amazonka.DLM.Types.CrossRegionCopyDeprecateRule.CrossRegionCopyDeprecateRule
instance GHC.Classes.Eq Amazonka.DLM.Types.CrossRegionCopyDeprecateRule.CrossRegionCopyDeprecateRule
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DLM.Types.CrossRegionCopyDeprecateRule.CrossRegionCopyDeprecateRule
instance Data.Hashable.Class.Hashable Amazonka.DLM.Types.CrossRegionCopyDeprecateRule.CrossRegionCopyDeprecateRule
instance Control.DeepSeq.NFData Amazonka.DLM.Types.CrossRegionCopyDeprecateRule.CrossRegionCopyDeprecateRule
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DLM.Types.CrossRegionCopyDeprecateRule.CrossRegionCopyDeprecateRule


module Amazonka.DLM.Types.CrossRegionCopyRule

-- | Specifies a rule for cross-Region snapshot copies.
--   
--   <i>See:</i> <a>newCrossRegionCopyRule</a> smart constructor.
data CrossRegionCopyRule
CrossRegionCopyRule' :: Maybe CrossRegionCopyDeprecateRule -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe CrossRegionCopyRetainRule -> Maybe Text -> Bool -> CrossRegionCopyRule

-- | The AMI deprecation rule for cross-Region AMI copies created by the
--   rule.
[$sel:deprecateRule:CrossRegionCopyRule'] :: CrossRegionCopyRule -> Maybe CrossRegionCopyDeprecateRule

-- | Avoid using this parameter when creating new policies. Instead, use
--   <b>Target</b> to specify a target Region or a target Outpost for
--   snapshot copies.
--   
--   For policies created before the <b>Target</b> parameter was
--   introduced, this parameter indicates the target Region for snapshot
--   copies.
[$sel:targetRegion:CrossRegionCopyRule'] :: CrossRegionCopyRule -> Maybe Text

-- | Indicates whether to copy all user-defined tags from the source
--   snapshot to the cross-Region snapshot copy.
[$sel:copyTags:CrossRegionCopyRule'] :: CrossRegionCopyRule -> Maybe Bool

-- | The Amazon Resource Name (ARN) of the KMS key to use for EBS
--   encryption. If this parameter is not specified, the default KMS key
--   for the account is used.
[$sel:cmkArn:CrossRegionCopyRule'] :: CrossRegionCopyRule -> Maybe Text

-- | The retention rule that indicates how long snapshot copies are to be
--   retained in the destination Region.
[$sel:retainRule:CrossRegionCopyRule'] :: CrossRegionCopyRule -> Maybe CrossRegionCopyRetainRule

-- | The target Region or the Amazon Resource Name (ARN) of the target
--   Outpost for the snapshot copies.
--   
--   Use this parameter instead of <b>TargetRegion</b>. Do not specify
--   both.
[$sel:target:CrossRegionCopyRule'] :: CrossRegionCopyRule -> Maybe Text

-- | To encrypt a copy of an unencrypted snapshot if encryption by default
--   is not enabled, enable encryption using this parameter. Copies of
--   encrypted snapshots are encrypted, even if this parameter is false or
--   if encryption by default is not enabled.
[$sel:encrypted:CrossRegionCopyRule'] :: CrossRegionCopyRule -> Bool

-- | Create a value of <a>CrossRegionCopyRule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deprecateRule:CrossRegionCopyRule'</a>,
--   <a>crossRegionCopyRule_deprecateRule</a> - The AMI deprecation rule
--   for cross-Region AMI copies created by the rule.
--   
--   <a>$sel:targetRegion:CrossRegionCopyRule'</a>,
--   <a>crossRegionCopyRule_targetRegion</a> - Avoid using this parameter
--   when creating new policies. Instead, use <b>Target</b> to specify a
--   target Region or a target Outpost for snapshot copies.
--   
--   For policies created before the <b>Target</b> parameter was
--   introduced, this parameter indicates the target Region for snapshot
--   copies.
--   
--   <a>$sel:copyTags:CrossRegionCopyRule'</a>,
--   <a>crossRegionCopyRule_copyTags</a> - Indicates whether to copy all
--   user-defined tags from the source snapshot to the cross-Region
--   snapshot copy.
--   
--   <a>$sel:cmkArn:CrossRegionCopyRule'</a>,
--   <a>crossRegionCopyRule_cmkArn</a> - The Amazon Resource Name (ARN) of
--   the KMS key to use for EBS encryption. If this parameter is not
--   specified, the default KMS key for the account is used.
--   
--   <a>$sel:retainRule:CrossRegionCopyRule'</a>,
--   <a>crossRegionCopyRule_retainRule</a> - The retention rule that
--   indicates how long snapshot copies are to be retained in the
--   destination Region.
--   
--   <a>$sel:target:CrossRegionCopyRule'</a>,
--   <a>crossRegionCopyRule_target</a> - The target Region or the Amazon
--   Resource Name (ARN) of the target Outpost for the snapshot copies.
--   
--   Use this parameter instead of <b>TargetRegion</b>. Do not specify
--   both.
--   
--   <a>$sel:encrypted:CrossRegionCopyRule'</a>,
--   <a>crossRegionCopyRule_encrypted</a> - To encrypt a copy of an
--   unencrypted snapshot if encryption by default is not enabled, enable
--   encryption using this parameter. Copies of encrypted snapshots are
--   encrypted, even if this parameter is false or if encryption by default
--   is not enabled.
newCrossRegionCopyRule :: Bool -> CrossRegionCopyRule

-- | The AMI deprecation rule for cross-Region AMI copies created by the
--   rule.
crossRegionCopyRule_deprecateRule :: Lens' CrossRegionCopyRule (Maybe CrossRegionCopyDeprecateRule)

-- | Avoid using this parameter when creating new policies. Instead, use
--   <b>Target</b> to specify a target Region or a target Outpost for
--   snapshot copies.
--   
--   For policies created before the <b>Target</b> parameter was
--   introduced, this parameter indicates the target Region for snapshot
--   copies.
crossRegionCopyRule_targetRegion :: Lens' CrossRegionCopyRule (Maybe Text)

-- | Indicates whether to copy all user-defined tags from the source
--   snapshot to the cross-Region snapshot copy.
crossRegionCopyRule_copyTags :: Lens' CrossRegionCopyRule (Maybe Bool)

-- | The Amazon Resource Name (ARN) of the KMS key to use for EBS
--   encryption. If this parameter is not specified, the default KMS key
--   for the account is used.
crossRegionCopyRule_cmkArn :: Lens' CrossRegionCopyRule (Maybe Text)

-- | The retention rule that indicates how long snapshot copies are to be
--   retained in the destination Region.
crossRegionCopyRule_retainRule :: Lens' CrossRegionCopyRule (Maybe CrossRegionCopyRetainRule)

-- | The target Region or the Amazon Resource Name (ARN) of the target
--   Outpost for the snapshot copies.
--   
--   Use this parameter instead of <b>TargetRegion</b>. Do not specify
--   both.
crossRegionCopyRule_target :: Lens' CrossRegionCopyRule (Maybe Text)

-- | To encrypt a copy of an unencrypted snapshot if encryption by default
--   is not enabled, enable encryption using this parameter. Copies of
--   encrypted snapshots are encrypted, even if this parameter is false or
--   if encryption by default is not enabled.
crossRegionCopyRule_encrypted :: Lens' CrossRegionCopyRule Bool
instance GHC.Generics.Generic Amazonka.DLM.Types.CrossRegionCopyRule.CrossRegionCopyRule
instance GHC.Show.Show Amazonka.DLM.Types.CrossRegionCopyRule.CrossRegionCopyRule
instance GHC.Read.Read Amazonka.DLM.Types.CrossRegionCopyRule.CrossRegionCopyRule
instance GHC.Classes.Eq Amazonka.DLM.Types.CrossRegionCopyRule.CrossRegionCopyRule
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DLM.Types.CrossRegionCopyRule.CrossRegionCopyRule
instance Data.Hashable.Class.Hashable Amazonka.DLM.Types.CrossRegionCopyRule.CrossRegionCopyRule
instance Control.DeepSeq.NFData Amazonka.DLM.Types.CrossRegionCopyRule.CrossRegionCopyRule
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DLM.Types.CrossRegionCopyRule.CrossRegionCopyRule


module Amazonka.DLM.Types.SettablePolicyStateValues
newtype SettablePolicyStateValues
SettablePolicyStateValues' :: Text -> SettablePolicyStateValues
[fromSettablePolicyStateValues] :: SettablePolicyStateValues -> Text
pattern SettablePolicyStateValues_DISABLED :: SettablePolicyStateValues
pattern SettablePolicyStateValues_ENABLED :: SettablePolicyStateValues
instance Amazonka.Data.XML.ToXML Amazonka.DLM.Types.SettablePolicyStateValues.SettablePolicyStateValues
instance Amazonka.Data.XML.FromXML Amazonka.DLM.Types.SettablePolicyStateValues.SettablePolicyStateValues
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.DLM.Types.SettablePolicyStateValues.SettablePolicyStateValues
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DLM.Types.SettablePolicyStateValues.SettablePolicyStateValues
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.DLM.Types.SettablePolicyStateValues.SettablePolicyStateValues
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DLM.Types.SettablePolicyStateValues.SettablePolicyStateValues
instance Amazonka.Data.Query.ToQuery Amazonka.DLM.Types.SettablePolicyStateValues.SettablePolicyStateValues
instance Amazonka.Data.Headers.ToHeader Amazonka.DLM.Types.SettablePolicyStateValues.SettablePolicyStateValues
instance Amazonka.Data.Log.ToLog Amazonka.DLM.Types.SettablePolicyStateValues.SettablePolicyStateValues
instance Amazonka.Data.ByteString.ToByteString Amazonka.DLM.Types.SettablePolicyStateValues.SettablePolicyStateValues
instance Amazonka.Data.Text.ToText Amazonka.DLM.Types.SettablePolicyStateValues.SettablePolicyStateValues
instance Amazonka.Data.Text.FromText Amazonka.DLM.Types.SettablePolicyStateValues.SettablePolicyStateValues
instance Control.DeepSeq.NFData Amazonka.DLM.Types.SettablePolicyStateValues.SettablePolicyStateValues
instance Data.Hashable.Class.Hashable Amazonka.DLM.Types.SettablePolicyStateValues.SettablePolicyStateValues
instance GHC.Generics.Generic Amazonka.DLM.Types.SettablePolicyStateValues.SettablePolicyStateValues
instance GHC.Classes.Ord Amazonka.DLM.Types.SettablePolicyStateValues.SettablePolicyStateValues
instance GHC.Classes.Eq Amazonka.DLM.Types.SettablePolicyStateValues.SettablePolicyStateValues
instance GHC.Read.Read Amazonka.DLM.Types.SettablePolicyStateValues.SettablePolicyStateValues
instance GHC.Show.Show Amazonka.DLM.Types.SettablePolicyStateValues.SettablePolicyStateValues


module Amazonka.DLM.Types.ShareRule

-- | Specifies a rule for sharing snapshots across Amazon Web Services
--   accounts.
--   
--   <i>See:</i> <a>newShareRule</a> smart constructor.
data ShareRule
ShareRule' :: Maybe RetentionIntervalUnitValues -> Maybe Natural -> NonEmpty Text -> ShareRule

-- | The unit of time for the automatic unsharing interval.
[$sel:unshareIntervalUnit:ShareRule'] :: ShareRule -> Maybe RetentionIntervalUnitValues

-- | The period after which snapshots that are shared with other Amazon Web
--   Services accounts are automatically unshared.
[$sel:unshareInterval:ShareRule'] :: ShareRule -> Maybe Natural

-- | The IDs of the Amazon Web Services accounts with which to share the
--   snapshots.
[$sel:targetAccounts:ShareRule'] :: ShareRule -> NonEmpty Text

-- | Create a value of <a>ShareRule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:unshareIntervalUnit:ShareRule'</a>,
--   <a>shareRule_unshareIntervalUnit</a> - The unit of time for the
--   automatic unsharing interval.
--   
--   <a>$sel:unshareInterval:ShareRule'</a>,
--   <a>shareRule_unshareInterval</a> - The period after which snapshots
--   that are shared with other Amazon Web Services accounts are
--   automatically unshared.
--   
--   <a>$sel:targetAccounts:ShareRule'</a>, <a>shareRule_targetAccounts</a>
--   - The IDs of the Amazon Web Services accounts with which to share the
--   snapshots.
newShareRule :: NonEmpty Text -> ShareRule

-- | The unit of time for the automatic unsharing interval.
shareRule_unshareIntervalUnit :: Lens' ShareRule (Maybe RetentionIntervalUnitValues)

-- | The period after which snapshots that are shared with other Amazon Web
--   Services accounts are automatically unshared.
shareRule_unshareInterval :: Lens' ShareRule (Maybe Natural)

-- | The IDs of the Amazon Web Services accounts with which to share the
--   snapshots.
shareRule_targetAccounts :: Lens' ShareRule (NonEmpty Text)
instance GHC.Generics.Generic Amazonka.DLM.Types.ShareRule.ShareRule
instance GHC.Show.Show Amazonka.DLM.Types.ShareRule.ShareRule
instance GHC.Read.Read Amazonka.DLM.Types.ShareRule.ShareRule
instance GHC.Classes.Eq Amazonka.DLM.Types.ShareRule.ShareRule
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DLM.Types.ShareRule.ShareRule
instance Data.Hashable.Class.Hashable Amazonka.DLM.Types.ShareRule.ShareRule
instance Control.DeepSeq.NFData Amazonka.DLM.Types.ShareRule.ShareRule
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DLM.Types.ShareRule.ShareRule


module Amazonka.DLM.Types.Tag

-- | Specifies a tag for a resource.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | The tag key.
[$sel:key:Tag'] :: Tag -> Text

-- | The tag value.
[$sel:value:Tag'] :: Tag -> Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The tag key.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The tag value.
newTag :: Text -> Text -> Tag

-- | The tag key.
tag_key :: Lens' Tag Text

-- | The tag value.
tag_value :: Lens' Tag Text
instance GHC.Generics.Generic Amazonka.DLM.Types.Tag.Tag
instance GHC.Show.Show Amazonka.DLM.Types.Tag.Tag
instance GHC.Read.Read Amazonka.DLM.Types.Tag.Tag
instance GHC.Classes.Eq Amazonka.DLM.Types.Tag.Tag
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DLM.Types.Tag.Tag
instance Data.Hashable.Class.Hashable Amazonka.DLM.Types.Tag.Tag
instance Control.DeepSeq.NFData Amazonka.DLM.Types.Tag.Tag
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DLM.Types.Tag.Tag


module Amazonka.DLM.Types.Schedule

-- | Specifies a backup schedule for a snapshot or AMI lifecycle policy.
--   
--   <i>See:</i> <a>newSchedule</a> smart constructor.
data Schedule
Schedule' :: Maybe [Tag] -> Maybe CreateRule -> Maybe DeprecateRule -> Maybe Bool -> Maybe Text -> Maybe [ShareRule] -> Maybe [Tag] -> Maybe RetainRule -> Maybe [CrossRegionCopyRule] -> Maybe FastRestoreRule -> Schedule

-- | A collection of key/value pairs with values determined dynamically
--   when the policy is executed. Keys may be any valid Amazon EC2 tag key.
--   Values must be in one of the two following formats:
--   <tt>$(instance-id)</tt> or <tt>$(timestamp)</tt>. Variable tags are
--   only valid for EBS Snapshot Management – Instance policies.
[$sel:variableTags:Schedule'] :: Schedule -> Maybe [Tag]

-- | The creation rule.
[$sel:createRule:Schedule'] :: Schedule -> Maybe CreateRule

-- | The AMI deprecation rule for the schedule.
[$sel:deprecateRule:Schedule'] :: Schedule -> Maybe DeprecateRule

-- | Copy all user-defined tags on a source volume to snapshots of the
--   volume created by this policy.
[$sel:copyTags:Schedule'] :: Schedule -> Maybe Bool

-- | The name of the schedule.
[$sel:name:Schedule'] :: Schedule -> Maybe Text

-- | The rule for sharing snapshots with other Amazon Web Services
--   accounts.
[$sel:shareRules:Schedule'] :: Schedule -> Maybe [ShareRule]

-- | The tags to apply to policy-created resources. These user-defined tags
--   are in addition to the Amazon Web Services-added lifecycle tags.
[$sel:tagsToAdd:Schedule'] :: Schedule -> Maybe [Tag]

-- | The retention rule.
[$sel:retainRule:Schedule'] :: Schedule -> Maybe RetainRule

-- | The rule for cross-Region snapshot copies.
--   
--   You can only specify cross-Region copy rules for policies that create
--   snapshots in a Region. If the policy creates snapshots on an Outpost,
--   then you cannot copy the snapshots to a Region or to an Outpost. If
--   the policy creates snapshots in a Region, then snapshots can be copied
--   to up to three Regions or Outposts.
[$sel:crossRegionCopyRules:Schedule'] :: Schedule -> Maybe [CrossRegionCopyRule]

-- | The rule for enabling fast snapshot restore.
[$sel:fastRestoreRule:Schedule'] :: Schedule -> Maybe FastRestoreRule

-- | Create a value of <a>Schedule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:variableTags:Schedule'</a>, <a>schedule_variableTags</a> - A
--   collection of key/value pairs with values determined dynamically when
--   the policy is executed. Keys may be any valid Amazon EC2 tag key.
--   Values must be in one of the two following formats:
--   <tt>$(instance-id)</tt> or <tt>$(timestamp)</tt>. Variable tags are
--   only valid for EBS Snapshot Management – Instance policies.
--   
--   <a>$sel:createRule:Schedule'</a>, <a>schedule_createRule</a> - The
--   creation rule.
--   
--   <a>$sel:deprecateRule:Schedule'</a>, <a>schedule_deprecateRule</a> -
--   The AMI deprecation rule for the schedule.
--   
--   <a>$sel:copyTags:Schedule'</a>, <a>schedule_copyTags</a> - Copy all
--   user-defined tags on a source volume to snapshots of the volume
--   created by this policy.
--   
--   <a>$sel:name:Schedule'</a>, <a>schedule_name</a> - The name of the
--   schedule.
--   
--   <a>$sel:shareRules:Schedule'</a>, <a>schedule_shareRules</a> - The
--   rule for sharing snapshots with other Amazon Web Services accounts.
--   
--   <a>$sel:tagsToAdd:Schedule'</a>, <a>schedule_tagsToAdd</a> - The tags
--   to apply to policy-created resources. These user-defined tags are in
--   addition to the Amazon Web Services-added lifecycle tags.
--   
--   <a>$sel:retainRule:Schedule'</a>, <a>schedule_retainRule</a> - The
--   retention rule.
--   
--   <a>$sel:crossRegionCopyRules:Schedule'</a>,
--   <a>schedule_crossRegionCopyRules</a> - The rule for cross-Region
--   snapshot copies.
--   
--   You can only specify cross-Region copy rules for policies that create
--   snapshots in a Region. If the policy creates snapshots on an Outpost,
--   then you cannot copy the snapshots to a Region or to an Outpost. If
--   the policy creates snapshots in a Region, then snapshots can be copied
--   to up to three Regions or Outposts.
--   
--   <a>$sel:fastRestoreRule:Schedule'</a>, <a>schedule_fastRestoreRule</a>
--   - The rule for enabling fast snapshot restore.
newSchedule :: Schedule

-- | A collection of key/value pairs with values determined dynamically
--   when the policy is executed. Keys may be any valid Amazon EC2 tag key.
--   Values must be in one of the two following formats:
--   <tt>$(instance-id)</tt> or <tt>$(timestamp)</tt>. Variable tags are
--   only valid for EBS Snapshot Management – Instance policies.
schedule_variableTags :: Lens' Schedule (Maybe [Tag])

-- | The creation rule.
schedule_createRule :: Lens' Schedule (Maybe CreateRule)

-- | The AMI deprecation rule for the schedule.
schedule_deprecateRule :: Lens' Schedule (Maybe DeprecateRule)

-- | Copy all user-defined tags on a source volume to snapshots of the
--   volume created by this policy.
schedule_copyTags :: Lens' Schedule (Maybe Bool)

-- | The name of the schedule.
schedule_name :: Lens' Schedule (Maybe Text)

-- | The rule for sharing snapshots with other Amazon Web Services
--   accounts.
schedule_shareRules :: Lens' Schedule (Maybe [ShareRule])

-- | The tags to apply to policy-created resources. These user-defined tags
--   are in addition to the Amazon Web Services-added lifecycle tags.
schedule_tagsToAdd :: Lens' Schedule (Maybe [Tag])

-- | The retention rule.
schedule_retainRule :: Lens' Schedule (Maybe RetainRule)

-- | The rule for cross-Region snapshot copies.
--   
--   You can only specify cross-Region copy rules for policies that create
--   snapshots in a Region. If the policy creates snapshots on an Outpost,
--   then you cannot copy the snapshots to a Region or to an Outpost. If
--   the policy creates snapshots in a Region, then snapshots can be copied
--   to up to three Regions or Outposts.
schedule_crossRegionCopyRules :: Lens' Schedule (Maybe [CrossRegionCopyRule])

-- | The rule for enabling fast snapshot restore.
schedule_fastRestoreRule :: Lens' Schedule (Maybe FastRestoreRule)
instance GHC.Generics.Generic Amazonka.DLM.Types.Schedule.Schedule
instance GHC.Show.Show Amazonka.DLM.Types.Schedule.Schedule
instance GHC.Read.Read Amazonka.DLM.Types.Schedule.Schedule
instance GHC.Classes.Eq Amazonka.DLM.Types.Schedule.Schedule
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DLM.Types.Schedule.Schedule
instance Data.Hashable.Class.Hashable Amazonka.DLM.Types.Schedule.Schedule
instance Control.DeepSeq.NFData Amazonka.DLM.Types.Schedule.Schedule
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DLM.Types.Schedule.Schedule


module Amazonka.DLM.Types.PolicyDetails

-- | Specifies the configuration of a lifecycle policy.
--   
--   <i>See:</i> <a>newPolicyDetails</a> smart constructor.
data PolicyDetails
PolicyDetails' :: Maybe (NonEmpty Action) -> Maybe (NonEmpty Tag) -> Maybe PolicyTypeValues -> Maybe (NonEmpty ResourceLocationValues) -> Maybe Parameters -> Maybe (NonEmpty Schedule) -> Maybe EventSource -> Maybe (NonEmpty ResourceTypeValues) -> PolicyDetails

-- | The actions to be performed when the event-based policy is triggered.
--   You can specify only one action per policy.
--   
--   This parameter is required for event-based policies only. If you are
--   creating a snapshot or AMI policy, omit this parameter.
[$sel:actions:PolicyDetails'] :: PolicyDetails -> Maybe (NonEmpty Action)

-- | The single tag that identifies targeted resources for this policy.
--   
--   This parameter is required for snapshot and AMI policies only. If you
--   are creating an event-based policy, omit this parameter.
[$sel:targetTags:PolicyDetails'] :: PolicyDetails -> Maybe (NonEmpty Tag)

-- | The valid target resource types and actions a policy can manage.
--   Specify <tt>EBS_SNAPSHOT_MANAGEMENT</tt> to create a lifecycle policy
--   that manages the lifecycle of Amazon EBS snapshots. Specify
--   <tt>IMAGE_MANAGEMENT</tt> to create a lifecycle policy that manages
--   the lifecycle of EBS-backed AMIs. Specify <tt>EVENT_BASED_POLICY </tt>
--   to create an event-based policy that performs specific actions when a
--   defined event occurs in your Amazon Web Services account.
--   
--   The default is <tt>EBS_SNAPSHOT_MANAGEMENT</tt>.
[$sel:policyType:PolicyDetails'] :: PolicyDetails -> Maybe PolicyTypeValues

-- | The location of the resources to backup. If the source resources are
--   located in an Amazon Web Services Region, specify <tt>CLOUD</tt>. If
--   the source resources are located on an Outpost in your account,
--   specify <tt>OUTPOST</tt>.
--   
--   If you specify <tt>OUTPOST</tt>, Amazon Data Lifecycle Manager backs
--   up all resources of the specified type with matching target tags
--   across all of the Outposts in your account.
[$sel:resourceLocations:PolicyDetails'] :: PolicyDetails -> Maybe (NonEmpty ResourceLocationValues)

-- | A set of optional parameters for snapshot and AMI lifecycle policies.
--   
--   This parameter is required for snapshot and AMI policies only. If you
--   are creating an event-based policy, omit this parameter.
[$sel:parameters:PolicyDetails'] :: PolicyDetails -> Maybe Parameters

-- | The schedules of policy-defined actions for snapshot and AMI lifecycle
--   policies. A policy can have up to four schedules—one mandatory
--   schedule and up to three optional schedules.
--   
--   This parameter is required for snapshot and AMI policies only. If you
--   are creating an event-based policy, omit this parameter.
[$sel:schedules:PolicyDetails'] :: PolicyDetails -> Maybe (NonEmpty Schedule)

-- | The event that triggers the event-based policy.
--   
--   This parameter is required for event-based policies only. If you are
--   creating a snapshot or AMI policy, omit this parameter.
[$sel:eventSource:PolicyDetails'] :: PolicyDetails -> Maybe EventSource

-- | The target resource type for snapshot and AMI lifecycle policies. Use
--   <tt>VOLUME </tt>to create snapshots of individual volumes or use
--   <tt>INSTANCE</tt> to create multi-volume snapshots from the volumes
--   for an instance.
--   
--   This parameter is required for snapshot and AMI policies only. If you
--   are creating an event-based policy, omit this parameter.
[$sel:resourceTypes:PolicyDetails'] :: PolicyDetails -> Maybe (NonEmpty ResourceTypeValues)

-- | Create a value of <a>PolicyDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:actions:PolicyDetails'</a>, <a>policyDetails_actions</a> - The
--   actions to be performed when the event-based policy is triggered. You
--   can specify only one action per policy.
--   
--   This parameter is required for event-based policies only. If you are
--   creating a snapshot or AMI policy, omit this parameter.
--   
--   <a>$sel:targetTags:PolicyDetails'</a>, <a>policyDetails_targetTags</a>
--   - The single tag that identifies targeted resources for this policy.
--   
--   This parameter is required for snapshot and AMI policies only. If you
--   are creating an event-based policy, omit this parameter.
--   
--   <a>$sel:policyType:PolicyDetails'</a>, <a>policyDetails_policyType</a>
--   - The valid target resource types and actions a policy can manage.
--   Specify <tt>EBS_SNAPSHOT_MANAGEMENT</tt> to create a lifecycle policy
--   that manages the lifecycle of Amazon EBS snapshots. Specify
--   <tt>IMAGE_MANAGEMENT</tt> to create a lifecycle policy that manages
--   the lifecycle of EBS-backed AMIs. Specify <tt>EVENT_BASED_POLICY </tt>
--   to create an event-based policy that performs specific actions when a
--   defined event occurs in your Amazon Web Services account.
--   
--   The default is <tt>EBS_SNAPSHOT_MANAGEMENT</tt>.
--   
--   <a>$sel:resourceLocations:PolicyDetails'</a>,
--   <a>policyDetails_resourceLocations</a> - The location of the resources
--   to backup. If the source resources are located in an Amazon Web
--   Services Region, specify <tt>CLOUD</tt>. If the source resources are
--   located on an Outpost in your account, specify <tt>OUTPOST</tt>.
--   
--   If you specify <tt>OUTPOST</tt>, Amazon Data Lifecycle Manager backs
--   up all resources of the specified type with matching target tags
--   across all of the Outposts in your account.
--   
--   <a>$sel:parameters:PolicyDetails'</a>, <a>policyDetails_parameters</a>
--   - A set of optional parameters for snapshot and AMI lifecycle
--   policies.
--   
--   This parameter is required for snapshot and AMI policies only. If you
--   are creating an event-based policy, omit this parameter.
--   
--   <a>$sel:schedules:PolicyDetails'</a>, <a>policyDetails_schedules</a> -
--   The schedules of policy-defined actions for snapshot and AMI lifecycle
--   policies. A policy can have up to four schedules—one mandatory
--   schedule and up to three optional schedules.
--   
--   This parameter is required for snapshot and AMI policies only. If you
--   are creating an event-based policy, omit this parameter.
--   
--   <a>$sel:eventSource:PolicyDetails'</a>,
--   <a>policyDetails_eventSource</a> - The event that triggers the
--   event-based policy.
--   
--   This parameter is required for event-based policies only. If you are
--   creating a snapshot or AMI policy, omit this parameter.
--   
--   <a>$sel:resourceTypes:PolicyDetails'</a>,
--   <a>policyDetails_resourceTypes</a> - The target resource type for
--   snapshot and AMI lifecycle policies. Use <tt>VOLUME </tt>to create
--   snapshots of individual volumes or use <tt>INSTANCE</tt> to create
--   multi-volume snapshots from the volumes for an instance.
--   
--   This parameter is required for snapshot and AMI policies only. If you
--   are creating an event-based policy, omit this parameter.
newPolicyDetails :: PolicyDetails

-- | The actions to be performed when the event-based policy is triggered.
--   You can specify only one action per policy.
--   
--   This parameter is required for event-based policies only. If you are
--   creating a snapshot or AMI policy, omit this parameter.
policyDetails_actions :: Lens' PolicyDetails (Maybe (NonEmpty Action))

-- | The single tag that identifies targeted resources for this policy.
--   
--   This parameter is required for snapshot and AMI policies only. If you
--   are creating an event-based policy, omit this parameter.
policyDetails_targetTags :: Lens' PolicyDetails (Maybe (NonEmpty Tag))

-- | The valid target resource types and actions a policy can manage.
--   Specify <tt>EBS_SNAPSHOT_MANAGEMENT</tt> to create a lifecycle policy
--   that manages the lifecycle of Amazon EBS snapshots. Specify
--   <tt>IMAGE_MANAGEMENT</tt> to create a lifecycle policy that manages
--   the lifecycle of EBS-backed AMIs. Specify <tt>EVENT_BASED_POLICY </tt>
--   to create an event-based policy that performs specific actions when a
--   defined event occurs in your Amazon Web Services account.
--   
--   The default is <tt>EBS_SNAPSHOT_MANAGEMENT</tt>.
policyDetails_policyType :: Lens' PolicyDetails (Maybe PolicyTypeValues)

-- | The location of the resources to backup. If the source resources are
--   located in an Amazon Web Services Region, specify <tt>CLOUD</tt>. If
--   the source resources are located on an Outpost in your account,
--   specify <tt>OUTPOST</tt>.
--   
--   If you specify <tt>OUTPOST</tt>, Amazon Data Lifecycle Manager backs
--   up all resources of the specified type with matching target tags
--   across all of the Outposts in your account.
policyDetails_resourceLocations :: Lens' PolicyDetails (Maybe (NonEmpty ResourceLocationValues))

-- | A set of optional parameters for snapshot and AMI lifecycle policies.
--   
--   This parameter is required for snapshot and AMI policies only. If you
--   are creating an event-based policy, omit this parameter.
policyDetails_parameters :: Lens' PolicyDetails (Maybe Parameters)

-- | The schedules of policy-defined actions for snapshot and AMI lifecycle
--   policies. A policy can have up to four schedules—one mandatory
--   schedule and up to three optional schedules.
--   
--   This parameter is required for snapshot and AMI policies only. If you
--   are creating an event-based policy, omit this parameter.
policyDetails_schedules :: Lens' PolicyDetails (Maybe (NonEmpty Schedule))

-- | The event that triggers the event-based policy.
--   
--   This parameter is required for event-based policies only. If you are
--   creating a snapshot or AMI policy, omit this parameter.
policyDetails_eventSource :: Lens' PolicyDetails (Maybe EventSource)

-- | The target resource type for snapshot and AMI lifecycle policies. Use
--   <tt>VOLUME </tt>to create snapshots of individual volumes or use
--   <tt>INSTANCE</tt> to create multi-volume snapshots from the volumes
--   for an instance.
--   
--   This parameter is required for snapshot and AMI policies only. If you
--   are creating an event-based policy, omit this parameter.
policyDetails_resourceTypes :: Lens' PolicyDetails (Maybe (NonEmpty ResourceTypeValues))
instance GHC.Generics.Generic Amazonka.DLM.Types.PolicyDetails.PolicyDetails
instance GHC.Show.Show Amazonka.DLM.Types.PolicyDetails.PolicyDetails
instance GHC.Read.Read Amazonka.DLM.Types.PolicyDetails.PolicyDetails
instance GHC.Classes.Eq Amazonka.DLM.Types.PolicyDetails.PolicyDetails
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DLM.Types.PolicyDetails.PolicyDetails
instance Data.Hashable.Class.Hashable Amazonka.DLM.Types.PolicyDetails.PolicyDetails
instance Control.DeepSeq.NFData Amazonka.DLM.Types.PolicyDetails.PolicyDetails
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DLM.Types.PolicyDetails.PolicyDetails


module Amazonka.DLM.Types.LifecyclePolicy

-- | Detailed information about a lifecycle policy.
--   
--   <i>See:</i> <a>newLifecyclePolicy</a> smart constructor.
data LifecyclePolicy
LifecyclePolicy' :: Maybe GettablePolicyStateValues -> Maybe PolicyDetails -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> LifecyclePolicy

-- | The activation state of the lifecycle policy.
[$sel:state:LifecyclePolicy'] :: LifecyclePolicy -> Maybe GettablePolicyStateValues

-- | The configuration of the lifecycle policy
[$sel:policyDetails:LifecyclePolicy'] :: LifecyclePolicy -> Maybe PolicyDetails

-- | The identifier of the lifecycle policy.
[$sel:policyId:LifecyclePolicy'] :: LifecyclePolicy -> Maybe Text

-- | The Amazon Resource Name (ARN) of the IAM role used to run the
--   operations specified by the lifecycle policy.
[$sel:executionRoleArn:LifecyclePolicy'] :: LifecyclePolicy -> Maybe Text

-- | The local date and time when the lifecycle policy was created.
[$sel:dateCreated:LifecyclePolicy'] :: LifecyclePolicy -> Maybe POSIX

-- | The description of the status.
[$sel:statusMessage:LifecyclePolicy'] :: LifecyclePolicy -> Maybe Text

-- | The local date and time when the lifecycle policy was last modified.
[$sel:dateModified:LifecyclePolicy'] :: LifecyclePolicy -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the policy.
[$sel:policyArn:LifecyclePolicy'] :: LifecyclePolicy -> Maybe Text

-- | The description of the lifecycle policy.
[$sel:description:LifecyclePolicy'] :: LifecyclePolicy -> Maybe Text

-- | The tags.
[$sel:tags:LifecyclePolicy'] :: LifecyclePolicy -> Maybe (HashMap Text Text)

-- | Create a value of <a>LifecyclePolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:LifecyclePolicy'</a>, <a>lifecyclePolicy_state</a> - The
--   activation state of the lifecycle policy.
--   
--   <a>$sel:policyDetails:LifecyclePolicy'</a>,
--   <a>lifecyclePolicy_policyDetails</a> - The configuration of the
--   lifecycle policy
--   
--   <a>$sel:policyId:LifecyclePolicy'</a>, <a>lifecyclePolicy_policyId</a>
--   - The identifier of the lifecycle policy.
--   
--   <a>$sel:executionRoleArn:LifecyclePolicy'</a>,
--   <a>lifecyclePolicy_executionRoleArn</a> - The Amazon Resource Name
--   (ARN) of the IAM role used to run the operations specified by the
--   lifecycle policy.
--   
--   <a>$sel:dateCreated:LifecyclePolicy'</a>,
--   <a>lifecyclePolicy_dateCreated</a> - The local date and time when the
--   lifecycle policy was created.
--   
--   <a>$sel:statusMessage:LifecyclePolicy'</a>,
--   <a>lifecyclePolicy_statusMessage</a> - The description of the status.
--   
--   <a>$sel:dateModified:LifecyclePolicy'</a>,
--   <a>lifecyclePolicy_dateModified</a> - The local date and time when the
--   lifecycle policy was last modified.
--   
--   <a>$sel:policyArn:LifecyclePolicy'</a>,
--   <a>lifecyclePolicy_policyArn</a> - The Amazon Resource Name (ARN) of
--   the policy.
--   
--   <a>$sel:description:LifecyclePolicy'</a>,
--   <a>lifecyclePolicy_description</a> - The description of the lifecycle
--   policy.
--   
--   <a>$sel:tags:LifecyclePolicy'</a>, <a>lifecyclePolicy_tags</a> - The
--   tags.
newLifecyclePolicy :: LifecyclePolicy

-- | The activation state of the lifecycle policy.
lifecyclePolicy_state :: Lens' LifecyclePolicy (Maybe GettablePolicyStateValues)

-- | The configuration of the lifecycle policy
lifecyclePolicy_policyDetails :: Lens' LifecyclePolicy (Maybe PolicyDetails)

-- | The identifier of the lifecycle policy.
lifecyclePolicy_policyId :: Lens' LifecyclePolicy (Maybe Text)

-- | The Amazon Resource Name (ARN) of the IAM role used to run the
--   operations specified by the lifecycle policy.
lifecyclePolicy_executionRoleArn :: Lens' LifecyclePolicy (Maybe Text)

-- | The local date and time when the lifecycle policy was created.
lifecyclePolicy_dateCreated :: Lens' LifecyclePolicy (Maybe UTCTime)

-- | The description of the status.
lifecyclePolicy_statusMessage :: Lens' LifecyclePolicy (Maybe Text)

-- | The local date and time when the lifecycle policy was last modified.
lifecyclePolicy_dateModified :: Lens' LifecyclePolicy (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the policy.
lifecyclePolicy_policyArn :: Lens' LifecyclePolicy (Maybe Text)

-- | The description of the lifecycle policy.
lifecyclePolicy_description :: Lens' LifecyclePolicy (Maybe Text)

-- | The tags.
lifecyclePolicy_tags :: Lens' LifecyclePolicy (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Amazonka.DLM.Types.LifecyclePolicy.LifecyclePolicy
instance GHC.Show.Show Amazonka.DLM.Types.LifecyclePolicy.LifecyclePolicy
instance GHC.Read.Read Amazonka.DLM.Types.LifecyclePolicy.LifecyclePolicy
instance GHC.Classes.Eq Amazonka.DLM.Types.LifecyclePolicy.LifecyclePolicy
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DLM.Types.LifecyclePolicy.LifecyclePolicy
instance Data.Hashable.Class.Hashable Amazonka.DLM.Types.LifecyclePolicy.LifecyclePolicy
instance Control.DeepSeq.NFData Amazonka.DLM.Types.LifecyclePolicy.LifecyclePolicy


module Amazonka.DLM.Types

-- | API version <tt>2018-01-12</tt> of the Amazon Data Lifecycle Manager
--   SDK configuration.
defaultService :: Service

-- | Bad request. The request is missing required parameters or has invalid
--   parameters.
_InvalidRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The service failed in an unexpected way.
_InternalServerException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A requested resource was not found.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request failed because a limit was exceeded.
_LimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError
newtype EventSourceValues
EventSourceValues' :: Text -> EventSourceValues
[fromEventSourceValues] :: EventSourceValues -> Text
pattern EventSourceValues_MANAGED_CWE :: EventSourceValues
newtype EventTypeValues
EventTypeValues' :: Text -> EventTypeValues
[fromEventTypeValues] :: EventTypeValues -> Text
pattern EventTypeValues_ShareSnapshot :: EventTypeValues
newtype GettablePolicyStateValues
GettablePolicyStateValues' :: Text -> GettablePolicyStateValues
[fromGettablePolicyStateValues] :: GettablePolicyStateValues -> Text
pattern GettablePolicyStateValues_DISABLED :: GettablePolicyStateValues
pattern GettablePolicyStateValues_ENABLED :: GettablePolicyStateValues
pattern GettablePolicyStateValues_ERROR :: GettablePolicyStateValues
newtype IntervalUnitValues
IntervalUnitValues' :: Text -> IntervalUnitValues
[fromIntervalUnitValues] :: IntervalUnitValues -> Text
pattern IntervalUnitValues_HOURS :: IntervalUnitValues
newtype LocationValues
LocationValues' :: Text -> LocationValues
[fromLocationValues] :: LocationValues -> Text
pattern LocationValues_CLOUD :: LocationValues
pattern LocationValues_OUTPOST_LOCAL :: LocationValues
newtype PolicyTypeValues
PolicyTypeValues' :: Text -> PolicyTypeValues
[fromPolicyTypeValues] :: PolicyTypeValues -> Text
pattern PolicyTypeValues_EBS_SNAPSHOT_MANAGEMENT :: PolicyTypeValues
pattern PolicyTypeValues_EVENT_BASED_POLICY :: PolicyTypeValues
pattern PolicyTypeValues_IMAGE_MANAGEMENT :: PolicyTypeValues
newtype ResourceLocationValues
ResourceLocationValues' :: Text -> ResourceLocationValues
[fromResourceLocationValues] :: ResourceLocationValues -> Text
pattern ResourceLocationValues_CLOUD :: ResourceLocationValues
pattern ResourceLocationValues_OUTPOST :: ResourceLocationValues
newtype ResourceTypeValues
ResourceTypeValues' :: Text -> ResourceTypeValues
[fromResourceTypeValues] :: ResourceTypeValues -> Text
pattern ResourceTypeValues_INSTANCE :: ResourceTypeValues
pattern ResourceTypeValues_VOLUME :: ResourceTypeValues
newtype RetentionIntervalUnitValues
RetentionIntervalUnitValues' :: Text -> RetentionIntervalUnitValues
[fromRetentionIntervalUnitValues] :: RetentionIntervalUnitValues -> Text
pattern RetentionIntervalUnitValues_DAYS :: RetentionIntervalUnitValues
pattern RetentionIntervalUnitValues_MONTHS :: RetentionIntervalUnitValues
pattern RetentionIntervalUnitValues_WEEKS :: RetentionIntervalUnitValues
pattern RetentionIntervalUnitValues_YEARS :: RetentionIntervalUnitValues
newtype SettablePolicyStateValues
SettablePolicyStateValues' :: Text -> SettablePolicyStateValues
[fromSettablePolicyStateValues] :: SettablePolicyStateValues -> Text
pattern SettablePolicyStateValues_DISABLED :: SettablePolicyStateValues
pattern SettablePolicyStateValues_ENABLED :: SettablePolicyStateValues

-- | Specifies an action for an event-based policy.
--   
--   <i>See:</i> <a>newAction</a> smart constructor.
data Action
Action' :: Text -> [CrossRegionCopyAction] -> Action

-- | A descriptive name for the action.
[$sel:name:Action'] :: Action -> Text

-- | The rule for copying shared snapshots across Regions.
[$sel:crossRegionCopy:Action'] :: Action -> [CrossRegionCopyAction]

-- | Create a value of <a>Action</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:Action'</a>, <a>action_name</a> - A descriptive name for
--   the action.
--   
--   <a>$sel:crossRegionCopy:Action'</a>, <a>action_crossRegionCopy</a> -
--   The rule for copying shared snapshots across Regions.
newAction :: Text -> Action

-- | A descriptive name for the action.
action_name :: Lens' Action Text

-- | The rule for copying shared snapshots across Regions.
action_crossRegionCopy :: Lens' Action [CrossRegionCopyAction]

-- | Specifies when to create snapshots of EBS volumes.
--   
--   You must specify either a Cron expression or an interval, interval
--   unit, and start time. You cannot specify both.
--   
--   <i>See:</i> <a>newCreateRule</a> smart constructor.
data CreateRule
CreateRule' :: Maybe LocationValues -> Maybe Natural -> Maybe Text -> Maybe [Text] -> Maybe IntervalUnitValues -> CreateRule

-- | Specifies the destination for snapshots created by the policy. To
--   create snapshots in the same Region as the source resource, specify
--   <tt>CLOUD</tt>. To create snapshots on the same Outpost as the source
--   resource, specify <tt>OUTPOST_LOCAL</tt>. If you omit this parameter,
--   <tt>CLOUD</tt> is used by default.
--   
--   If the policy targets resources in an Amazon Web Services Region, then
--   you must create snapshots in the same Region as the source resource.
--   
--   If the policy targets resources on an Outpost, then you can create
--   snapshots on the same Outpost as the source resource, or in the Region
--   of that Outpost.
[$sel:location:CreateRule'] :: CreateRule -> Maybe LocationValues

-- | The interval between snapshots. The supported values are 1, 2, 3, 4,
--   6, 8, 12, and 24.
[$sel:interval:CreateRule'] :: CreateRule -> Maybe Natural

-- | The schedule, as a Cron expression. The schedule interval must be
--   between 1 hour and 1 year. For more information, see <a>Cron
--   expressions</a> in the <i>Amazon CloudWatch User Guide</i>.
[$sel:cronExpression:CreateRule'] :: CreateRule -> Maybe Text

-- | The time, in UTC, to start the operation. The supported format is
--   hh:mm.
--   
--   The operation occurs within a one-hour window following the specified
--   time. If you do not specify a time, Amazon DLM selects a time within
--   the next 24 hours.
[$sel:times:CreateRule'] :: CreateRule -> Maybe [Text]

-- | The interval unit.
[$sel:intervalUnit:CreateRule'] :: CreateRule -> Maybe IntervalUnitValues

-- | Create a value of <a>CreateRule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:location:CreateRule'</a>, <a>createRule_location</a> -
--   Specifies the destination for snapshots created by the policy. To
--   create snapshots in the same Region as the source resource, specify
--   <tt>CLOUD</tt>. To create snapshots on the same Outpost as the source
--   resource, specify <tt>OUTPOST_LOCAL</tt>. If you omit this parameter,
--   <tt>CLOUD</tt> is used by default.
--   
--   If the policy targets resources in an Amazon Web Services Region, then
--   you must create snapshots in the same Region as the source resource.
--   
--   If the policy targets resources on an Outpost, then you can create
--   snapshots on the same Outpost as the source resource, or in the Region
--   of that Outpost.
--   
--   <a>$sel:interval:CreateRule'</a>, <a>createRule_interval</a> - The
--   interval between snapshots. The supported values are 1, 2, 3, 4, 6, 8,
--   12, and 24.
--   
--   <a>$sel:cronExpression:CreateRule'</a>,
--   <a>createRule_cronExpression</a> - The schedule, as a Cron expression.
--   The schedule interval must be between 1 hour and 1 year. For more
--   information, see <a>Cron expressions</a> in the <i>Amazon CloudWatch
--   User Guide</i>.
--   
--   <a>$sel:times:CreateRule'</a>, <a>createRule_times</a> - The time, in
--   UTC, to start the operation. The supported format is hh:mm.
--   
--   The operation occurs within a one-hour window following the specified
--   time. If you do not specify a time, Amazon DLM selects a time within
--   the next 24 hours.
--   
--   <a>$sel:intervalUnit:CreateRule'</a>, <a>createRule_intervalUnit</a> -
--   The interval unit.
newCreateRule :: CreateRule

-- | Specifies the destination for snapshots created by the policy. To
--   create snapshots in the same Region as the source resource, specify
--   <tt>CLOUD</tt>. To create snapshots on the same Outpost as the source
--   resource, specify <tt>OUTPOST_LOCAL</tt>. If you omit this parameter,
--   <tt>CLOUD</tt> is used by default.
--   
--   If the policy targets resources in an Amazon Web Services Region, then
--   you must create snapshots in the same Region as the source resource.
--   
--   If the policy targets resources on an Outpost, then you can create
--   snapshots on the same Outpost as the source resource, or in the Region
--   of that Outpost.
createRule_location :: Lens' CreateRule (Maybe LocationValues)

-- | The interval between snapshots. The supported values are 1, 2, 3, 4,
--   6, 8, 12, and 24.
createRule_interval :: Lens' CreateRule (Maybe Natural)

-- | The schedule, as a Cron expression. The schedule interval must be
--   between 1 hour and 1 year. For more information, see <a>Cron
--   expressions</a> in the <i>Amazon CloudWatch User Guide</i>.
createRule_cronExpression :: Lens' CreateRule (Maybe Text)

-- | The time, in UTC, to start the operation. The supported format is
--   hh:mm.
--   
--   The operation occurs within a one-hour window following the specified
--   time. If you do not specify a time, Amazon DLM selects a time within
--   the next 24 hours.
createRule_times :: Lens' CreateRule (Maybe [Text])

-- | The interval unit.
createRule_intervalUnit :: Lens' CreateRule (Maybe IntervalUnitValues)

-- | Specifies a rule for copying shared snapshots across Regions.
--   
--   <i>See:</i> <a>newCrossRegionCopyAction</a> smart constructor.
data CrossRegionCopyAction
CrossRegionCopyAction' :: Maybe CrossRegionCopyRetainRule -> Text -> EncryptionConfiguration -> CrossRegionCopyAction
[$sel:retainRule:CrossRegionCopyAction'] :: CrossRegionCopyAction -> Maybe CrossRegionCopyRetainRule

-- | The target Region.
[$sel:target:CrossRegionCopyAction'] :: CrossRegionCopyAction -> Text

-- | The encryption settings for the copied snapshot.
[$sel:encryptionConfiguration:CrossRegionCopyAction'] :: CrossRegionCopyAction -> EncryptionConfiguration

-- | Create a value of <a>CrossRegionCopyAction</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:retainRule:CrossRegionCopyAction'</a>,
--   <a>crossRegionCopyAction_retainRule</a> - Undocumented member.
--   
--   <a>$sel:target:CrossRegionCopyAction'</a>,
--   <a>crossRegionCopyAction_target</a> - The target Region.
--   
--   <a>$sel:encryptionConfiguration:CrossRegionCopyAction'</a>,
--   <a>crossRegionCopyAction_encryptionConfiguration</a> - The encryption
--   settings for the copied snapshot.
newCrossRegionCopyAction :: Text -> EncryptionConfiguration -> CrossRegionCopyAction

-- | Undocumented member.
crossRegionCopyAction_retainRule :: Lens' CrossRegionCopyAction (Maybe CrossRegionCopyRetainRule)

-- | The target Region.
crossRegionCopyAction_target :: Lens' CrossRegionCopyAction Text

-- | The encryption settings for the copied snapshot.
crossRegionCopyAction_encryptionConfiguration :: Lens' CrossRegionCopyAction EncryptionConfiguration

-- | Specifies an AMI deprecation rule for cross-Region AMI copies created
--   by a cross-Region copy rule.
--   
--   <i>See:</i> <a>newCrossRegionCopyDeprecateRule</a> smart constructor.
data CrossRegionCopyDeprecateRule
CrossRegionCopyDeprecateRule' :: Maybe Natural -> Maybe RetentionIntervalUnitValues -> CrossRegionCopyDeprecateRule

-- | The period after which to deprecate the cross-Region AMI copies. The
--   period must be less than or equal to the cross-Region AMI copy
--   retention period, and it can't be greater than 10 years. This is
--   equivalent to 120 months, 520 weeks, or 3650 days.
[$sel:interval:CrossRegionCopyDeprecateRule'] :: CrossRegionCopyDeprecateRule -> Maybe Natural

-- | The unit of time in which to measure the <b>Interval</b>.
[$sel:intervalUnit:CrossRegionCopyDeprecateRule'] :: CrossRegionCopyDeprecateRule -> Maybe RetentionIntervalUnitValues

-- | Create a value of <a>CrossRegionCopyDeprecateRule</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:interval:CrossRegionCopyDeprecateRule'</a>,
--   <a>crossRegionCopyDeprecateRule_interval</a> - The period after which
--   to deprecate the cross-Region AMI copies. The period must be less than
--   or equal to the cross-Region AMI copy retention period, and it can't
--   be greater than 10 years. This is equivalent to 120 months, 520 weeks,
--   or 3650 days.
--   
--   <a>$sel:intervalUnit:CrossRegionCopyDeprecateRule'</a>,
--   <a>crossRegionCopyDeprecateRule_intervalUnit</a> - The unit of time in
--   which to measure the <b>Interval</b>.
newCrossRegionCopyDeprecateRule :: CrossRegionCopyDeprecateRule

-- | The period after which to deprecate the cross-Region AMI copies. The
--   period must be less than or equal to the cross-Region AMI copy
--   retention period, and it can't be greater than 10 years. This is
--   equivalent to 120 months, 520 weeks, or 3650 days.
crossRegionCopyDeprecateRule_interval :: Lens' CrossRegionCopyDeprecateRule (Maybe Natural)

-- | The unit of time in which to measure the <b>Interval</b>.
crossRegionCopyDeprecateRule_intervalUnit :: Lens' CrossRegionCopyDeprecateRule (Maybe RetentionIntervalUnitValues)

-- | Specifies the retention rule for cross-Region snapshot copies.
--   
--   <i>See:</i> <a>newCrossRegionCopyRetainRule</a> smart constructor.
data CrossRegionCopyRetainRule
CrossRegionCopyRetainRule' :: Maybe Natural -> Maybe RetentionIntervalUnitValues -> CrossRegionCopyRetainRule

-- | The amount of time to retain each snapshot. The maximum is 100 years.
--   This is equivalent to 1200 months, 5200 weeks, or 36500 days.
[$sel:interval:CrossRegionCopyRetainRule'] :: CrossRegionCopyRetainRule -> Maybe Natural

-- | The unit of time for time-based retention.
[$sel:intervalUnit:CrossRegionCopyRetainRule'] :: CrossRegionCopyRetainRule -> Maybe RetentionIntervalUnitValues

-- | Create a value of <a>CrossRegionCopyRetainRule</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:interval:CrossRegionCopyRetainRule'</a>,
--   <a>crossRegionCopyRetainRule_interval</a> - The amount of time to
--   retain each snapshot. The maximum is 100 years. This is equivalent to
--   1200 months, 5200 weeks, or 36500 days.
--   
--   <a>$sel:intervalUnit:CrossRegionCopyRetainRule'</a>,
--   <a>crossRegionCopyRetainRule_intervalUnit</a> - The unit of time for
--   time-based retention.
newCrossRegionCopyRetainRule :: CrossRegionCopyRetainRule

-- | The amount of time to retain each snapshot. The maximum is 100 years.
--   This is equivalent to 1200 months, 5200 weeks, or 36500 days.
crossRegionCopyRetainRule_interval :: Lens' CrossRegionCopyRetainRule (Maybe Natural)

-- | The unit of time for time-based retention.
crossRegionCopyRetainRule_intervalUnit :: Lens' CrossRegionCopyRetainRule (Maybe RetentionIntervalUnitValues)

-- | Specifies a rule for cross-Region snapshot copies.
--   
--   <i>See:</i> <a>newCrossRegionCopyRule</a> smart constructor.
data CrossRegionCopyRule
CrossRegionCopyRule' :: Maybe CrossRegionCopyDeprecateRule -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe CrossRegionCopyRetainRule -> Maybe Text -> Bool -> CrossRegionCopyRule

-- | The AMI deprecation rule for cross-Region AMI copies created by the
--   rule.
[$sel:deprecateRule:CrossRegionCopyRule'] :: CrossRegionCopyRule -> Maybe CrossRegionCopyDeprecateRule

-- | Avoid using this parameter when creating new policies. Instead, use
--   <b>Target</b> to specify a target Region or a target Outpost for
--   snapshot copies.
--   
--   For policies created before the <b>Target</b> parameter was
--   introduced, this parameter indicates the target Region for snapshot
--   copies.
[$sel:targetRegion:CrossRegionCopyRule'] :: CrossRegionCopyRule -> Maybe Text

-- | Indicates whether to copy all user-defined tags from the source
--   snapshot to the cross-Region snapshot copy.
[$sel:copyTags:CrossRegionCopyRule'] :: CrossRegionCopyRule -> Maybe Bool

-- | The Amazon Resource Name (ARN) of the KMS key to use for EBS
--   encryption. If this parameter is not specified, the default KMS key
--   for the account is used.
[$sel:cmkArn:CrossRegionCopyRule'] :: CrossRegionCopyRule -> Maybe Text

-- | The retention rule that indicates how long snapshot copies are to be
--   retained in the destination Region.
[$sel:retainRule:CrossRegionCopyRule'] :: CrossRegionCopyRule -> Maybe CrossRegionCopyRetainRule

-- | The target Region or the Amazon Resource Name (ARN) of the target
--   Outpost for the snapshot copies.
--   
--   Use this parameter instead of <b>TargetRegion</b>. Do not specify
--   both.
[$sel:target:CrossRegionCopyRule'] :: CrossRegionCopyRule -> Maybe Text

-- | To encrypt a copy of an unencrypted snapshot if encryption by default
--   is not enabled, enable encryption using this parameter. Copies of
--   encrypted snapshots are encrypted, even if this parameter is false or
--   if encryption by default is not enabled.
[$sel:encrypted:CrossRegionCopyRule'] :: CrossRegionCopyRule -> Bool

-- | Create a value of <a>CrossRegionCopyRule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deprecateRule:CrossRegionCopyRule'</a>,
--   <a>crossRegionCopyRule_deprecateRule</a> - The AMI deprecation rule
--   for cross-Region AMI copies created by the rule.
--   
--   <a>$sel:targetRegion:CrossRegionCopyRule'</a>,
--   <a>crossRegionCopyRule_targetRegion</a> - Avoid using this parameter
--   when creating new policies. Instead, use <b>Target</b> to specify a
--   target Region or a target Outpost for snapshot copies.
--   
--   For policies created before the <b>Target</b> parameter was
--   introduced, this parameter indicates the target Region for snapshot
--   copies.
--   
--   <a>$sel:copyTags:CrossRegionCopyRule'</a>,
--   <a>crossRegionCopyRule_copyTags</a> - Indicates whether to copy all
--   user-defined tags from the source snapshot to the cross-Region
--   snapshot copy.
--   
--   <a>$sel:cmkArn:CrossRegionCopyRule'</a>,
--   <a>crossRegionCopyRule_cmkArn</a> - The Amazon Resource Name (ARN) of
--   the KMS key to use for EBS encryption. If this parameter is not
--   specified, the default KMS key for the account is used.
--   
--   <a>$sel:retainRule:CrossRegionCopyRule'</a>,
--   <a>crossRegionCopyRule_retainRule</a> - The retention rule that
--   indicates how long snapshot copies are to be retained in the
--   destination Region.
--   
--   <a>$sel:target:CrossRegionCopyRule'</a>,
--   <a>crossRegionCopyRule_target</a> - The target Region or the Amazon
--   Resource Name (ARN) of the target Outpost for the snapshot copies.
--   
--   Use this parameter instead of <b>TargetRegion</b>. Do not specify
--   both.
--   
--   <a>$sel:encrypted:CrossRegionCopyRule'</a>,
--   <a>crossRegionCopyRule_encrypted</a> - To encrypt a copy of an
--   unencrypted snapshot if encryption by default is not enabled, enable
--   encryption using this parameter. Copies of encrypted snapshots are
--   encrypted, even if this parameter is false or if encryption by default
--   is not enabled.
newCrossRegionCopyRule :: Bool -> CrossRegionCopyRule

-- | The AMI deprecation rule for cross-Region AMI copies created by the
--   rule.
crossRegionCopyRule_deprecateRule :: Lens' CrossRegionCopyRule (Maybe CrossRegionCopyDeprecateRule)

-- | Avoid using this parameter when creating new policies. Instead, use
--   <b>Target</b> to specify a target Region or a target Outpost for
--   snapshot copies.
--   
--   For policies created before the <b>Target</b> parameter was
--   introduced, this parameter indicates the target Region for snapshot
--   copies.
crossRegionCopyRule_targetRegion :: Lens' CrossRegionCopyRule (Maybe Text)

-- | Indicates whether to copy all user-defined tags from the source
--   snapshot to the cross-Region snapshot copy.
crossRegionCopyRule_copyTags :: Lens' CrossRegionCopyRule (Maybe Bool)

-- | The Amazon Resource Name (ARN) of the KMS key to use for EBS
--   encryption. If this parameter is not specified, the default KMS key
--   for the account is used.
crossRegionCopyRule_cmkArn :: Lens' CrossRegionCopyRule (Maybe Text)

-- | The retention rule that indicates how long snapshot copies are to be
--   retained in the destination Region.
crossRegionCopyRule_retainRule :: Lens' CrossRegionCopyRule (Maybe CrossRegionCopyRetainRule)

-- | The target Region or the Amazon Resource Name (ARN) of the target
--   Outpost for the snapshot copies.
--   
--   Use this parameter instead of <b>TargetRegion</b>. Do not specify
--   both.
crossRegionCopyRule_target :: Lens' CrossRegionCopyRule (Maybe Text)

-- | To encrypt a copy of an unencrypted snapshot if encryption by default
--   is not enabled, enable encryption using this parameter. Copies of
--   encrypted snapshots are encrypted, even if this parameter is false or
--   if encryption by default is not enabled.
crossRegionCopyRule_encrypted :: Lens' CrossRegionCopyRule Bool

-- | Specifies an AMI deprecation rule for a schedule.
--   
--   <i>See:</i> <a>newDeprecateRule</a> smart constructor.
data DeprecateRule
DeprecateRule' :: Maybe Natural -> Maybe Natural -> Maybe RetentionIntervalUnitValues -> DeprecateRule

-- | If the schedule has a count-based retention rule, this parameter
--   specifies the number of oldest AMIs to deprecate. The count must be
--   less than or equal to the schedule's retention count, and it can't be
--   greater than 1000.
[$sel:count:DeprecateRule'] :: DeprecateRule -> Maybe Natural

-- | If the schedule has an age-based retention rule, this parameter
--   specifies the period after which to deprecate AMIs created by the
--   schedule. The period must be less than or equal to the schedule's
--   retention period, and it can't be greater than 10 years. This is
--   equivalent to 120 months, 520 weeks, or 3650 days.
[$sel:interval:DeprecateRule'] :: DeprecateRule -> Maybe Natural

-- | The unit of time in which to measure the <b>Interval</b>.
[$sel:intervalUnit:DeprecateRule'] :: DeprecateRule -> Maybe RetentionIntervalUnitValues

-- | Create a value of <a>DeprecateRule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:count:DeprecateRule'</a>, <a>deprecateRule_count</a> - If the
--   schedule has a count-based retention rule, this parameter specifies
--   the number of oldest AMIs to deprecate. The count must be less than or
--   equal to the schedule's retention count, and it can't be greater than
--   1000.
--   
--   <a>$sel:interval:DeprecateRule'</a>, <a>deprecateRule_interval</a> -
--   If the schedule has an age-based retention rule, this parameter
--   specifies the period after which to deprecate AMIs created by the
--   schedule. The period must be less than or equal to the schedule's
--   retention period, and it can't be greater than 10 years. This is
--   equivalent to 120 months, 520 weeks, or 3650 days.
--   
--   <a>$sel:intervalUnit:DeprecateRule'</a>,
--   <a>deprecateRule_intervalUnit</a> - The unit of time in which to
--   measure the <b>Interval</b>.
newDeprecateRule :: DeprecateRule

-- | If the schedule has a count-based retention rule, this parameter
--   specifies the number of oldest AMIs to deprecate. The count must be
--   less than or equal to the schedule's retention count, and it can't be
--   greater than 1000.
deprecateRule_count :: Lens' DeprecateRule (Maybe Natural)

-- | If the schedule has an age-based retention rule, this parameter
--   specifies the period after which to deprecate AMIs created by the
--   schedule. The period must be less than or equal to the schedule's
--   retention period, and it can't be greater than 10 years. This is
--   equivalent to 120 months, 520 weeks, or 3650 days.
deprecateRule_interval :: Lens' DeprecateRule (Maybe Natural)

-- | The unit of time in which to measure the <b>Interval</b>.
deprecateRule_intervalUnit :: Lens' DeprecateRule (Maybe RetentionIntervalUnitValues)

-- | Specifies the encryption settings for shared snapshots that are copied
--   across Regions.
--   
--   <i>See:</i> <a>newEncryptionConfiguration</a> smart constructor.
data EncryptionConfiguration
EncryptionConfiguration' :: Maybe Text -> Bool -> EncryptionConfiguration

-- | The Amazon Resource Name (ARN) of the KMS key to use for EBS
--   encryption. If this parameter is not specified, the default KMS key
--   for the account is used.
[$sel:cmkArn:EncryptionConfiguration'] :: EncryptionConfiguration -> Maybe Text

-- | To encrypt a copy of an unencrypted snapshot when encryption by
--   default is not enabled, enable encryption using this parameter. Copies
--   of encrypted snapshots are encrypted, even if this parameter is false
--   or when encryption by default is not enabled.
[$sel:encrypted:EncryptionConfiguration'] :: EncryptionConfiguration -> Bool

-- | Create a value of <a>EncryptionConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cmkArn:EncryptionConfiguration'</a>,
--   <a>encryptionConfiguration_cmkArn</a> - The Amazon Resource Name (ARN)
--   of the KMS key to use for EBS encryption. If this parameter is not
--   specified, the default KMS key for the account is used.
--   
--   <a>$sel:encrypted:EncryptionConfiguration'</a>,
--   <a>encryptionConfiguration_encrypted</a> - To encrypt a copy of an
--   unencrypted snapshot when encryption by default is not enabled, enable
--   encryption using this parameter. Copies of encrypted snapshots are
--   encrypted, even if this parameter is false or when encryption by
--   default is not enabled.
newEncryptionConfiguration :: Bool -> EncryptionConfiguration

-- | The Amazon Resource Name (ARN) of the KMS key to use for EBS
--   encryption. If this parameter is not specified, the default KMS key
--   for the account is used.
encryptionConfiguration_cmkArn :: Lens' EncryptionConfiguration (Maybe Text)

-- | To encrypt a copy of an unencrypted snapshot when encryption by
--   default is not enabled, enable encryption using this parameter. Copies
--   of encrypted snapshots are encrypted, even if this parameter is false
--   or when encryption by default is not enabled.
encryptionConfiguration_encrypted :: Lens' EncryptionConfiguration Bool

-- | Specifies an event that triggers an event-based policy.
--   
--   <i>See:</i> <a>newEventParameters</a> smart constructor.
data EventParameters
EventParameters' :: EventTypeValues -> [Text] -> Text -> EventParameters

-- | The type of event. Currently, only snapshot sharing events are
--   supported.
[$sel:eventType:EventParameters'] :: EventParameters -> EventTypeValues

-- | The IDs of the Amazon Web Services accounts that can trigger policy by
--   sharing snapshots with your account. The policy only runs if one of
--   the specified Amazon Web Services accounts shares a snapshot with your
--   account.
[$sel:snapshotOwner:EventParameters'] :: EventParameters -> [Text]

-- | The snapshot description that can trigger the policy. The description
--   pattern is specified using a regular expression. The policy runs only
--   if a snapshot with a description that matches the specified pattern is
--   shared with your account.
--   
--   For example, specifying <tt>^.*Created for policy:
--   policy-1234567890abcdef0.*$</tt> configures the policy to run only if
--   snapshots created by policy <tt>policy-1234567890abcdef0</tt> are
--   shared with your account.
[$sel:descriptionRegex:EventParameters'] :: EventParameters -> Text

-- | Create a value of <a>EventParameters</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventType:EventParameters'</a>,
--   <a>eventParameters_eventType</a> - The type of event. Currently, only
--   snapshot sharing events are supported.
--   
--   <a>$sel:snapshotOwner:EventParameters'</a>,
--   <a>eventParameters_snapshotOwner</a> - The IDs of the Amazon Web
--   Services accounts that can trigger policy by sharing snapshots with
--   your account. The policy only runs if one of the specified Amazon Web
--   Services accounts shares a snapshot with your account.
--   
--   <a>$sel:descriptionRegex:EventParameters'</a>,
--   <a>eventParameters_descriptionRegex</a> - The snapshot description
--   that can trigger the policy. The description pattern is specified
--   using a regular expression. The policy runs only if a snapshot with a
--   description that matches the specified pattern is shared with your
--   account.
--   
--   For example, specifying <tt>^.*Created for policy:
--   policy-1234567890abcdef0.*$</tt> configures the policy to run only if
--   snapshots created by policy <tt>policy-1234567890abcdef0</tt> are
--   shared with your account.
newEventParameters :: EventTypeValues -> Text -> EventParameters

-- | The type of event. Currently, only snapshot sharing events are
--   supported.
eventParameters_eventType :: Lens' EventParameters EventTypeValues

-- | The IDs of the Amazon Web Services accounts that can trigger policy by
--   sharing snapshots with your account. The policy only runs if one of
--   the specified Amazon Web Services accounts shares a snapshot with your
--   account.
eventParameters_snapshotOwner :: Lens' EventParameters [Text]

-- | The snapshot description that can trigger the policy. The description
--   pattern is specified using a regular expression. The policy runs only
--   if a snapshot with a description that matches the specified pattern is
--   shared with your account.
--   
--   For example, specifying <tt>^.*Created for policy:
--   policy-1234567890abcdef0.*$</tt> configures the policy to run only if
--   snapshots created by policy <tt>policy-1234567890abcdef0</tt> are
--   shared with your account.
eventParameters_descriptionRegex :: Lens' EventParameters Text

-- | Specifies an event that triggers an event-based policy.
--   
--   <i>See:</i> <a>newEventSource</a> smart constructor.
data EventSource
EventSource' :: Maybe EventParameters -> EventSourceValues -> EventSource

-- | Information about the event.
[$sel:parameters:EventSource'] :: EventSource -> Maybe EventParameters

-- | The source of the event. Currently only managed CloudWatch Events
--   rules are supported.
[$sel:type':EventSource'] :: EventSource -> EventSourceValues

-- | Create a value of <a>EventSource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameters:EventSource'</a>, <a>eventSource_parameters</a> -
--   Information about the event.
--   
--   <a>$sel:type':EventSource'</a>, <a>eventSource_type</a> - The source
--   of the event. Currently only managed CloudWatch Events rules are
--   supported.
newEventSource :: EventSourceValues -> EventSource

-- | Information about the event.
eventSource_parameters :: Lens' EventSource (Maybe EventParameters)

-- | The source of the event. Currently only managed CloudWatch Events
--   rules are supported.
eventSource_type :: Lens' EventSource EventSourceValues

-- | Specifies a rule for enabling fast snapshot restore. You can enable
--   fast snapshot restore based on either a count or a time interval.
--   
--   <i>See:</i> <a>newFastRestoreRule</a> smart constructor.
data FastRestoreRule
FastRestoreRule' :: Maybe Natural -> Maybe Natural -> Maybe RetentionIntervalUnitValues -> NonEmpty Text -> FastRestoreRule

-- | The number of snapshots to be enabled with fast snapshot restore.
[$sel:count:FastRestoreRule'] :: FastRestoreRule -> Maybe Natural

-- | The amount of time to enable fast snapshot restore. The maximum is 100
--   years. This is equivalent to 1200 months, 5200 weeks, or 36500 days.
[$sel:interval:FastRestoreRule'] :: FastRestoreRule -> Maybe Natural

-- | The unit of time for enabling fast snapshot restore.
[$sel:intervalUnit:FastRestoreRule'] :: FastRestoreRule -> Maybe RetentionIntervalUnitValues

-- | The Availability Zones in which to enable fast snapshot restore.
[$sel:availabilityZones:FastRestoreRule'] :: FastRestoreRule -> NonEmpty Text

-- | Create a value of <a>FastRestoreRule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:count:FastRestoreRule'</a>, <a>fastRestoreRule_count</a> - The
--   number of snapshots to be enabled with fast snapshot restore.
--   
--   <a>$sel:interval:FastRestoreRule'</a>, <a>fastRestoreRule_interval</a>
--   - The amount of time to enable fast snapshot restore. The maximum is
--   100 years. This is equivalent to 1200 months, 5200 weeks, or 36500
--   days.
--   
--   <a>$sel:intervalUnit:FastRestoreRule'</a>,
--   <a>fastRestoreRule_intervalUnit</a> - The unit of time for enabling
--   fast snapshot restore.
--   
--   <a>$sel:availabilityZones:FastRestoreRule'</a>,
--   <a>fastRestoreRule_availabilityZones</a> - The Availability Zones in
--   which to enable fast snapshot restore.
newFastRestoreRule :: NonEmpty Text -> FastRestoreRule

-- | The number of snapshots to be enabled with fast snapshot restore.
fastRestoreRule_count :: Lens' FastRestoreRule (Maybe Natural)

-- | The amount of time to enable fast snapshot restore. The maximum is 100
--   years. This is equivalent to 1200 months, 5200 weeks, or 36500 days.
fastRestoreRule_interval :: Lens' FastRestoreRule (Maybe Natural)

-- | The unit of time for enabling fast snapshot restore.
fastRestoreRule_intervalUnit :: Lens' FastRestoreRule (Maybe RetentionIntervalUnitValues)

-- | The Availability Zones in which to enable fast snapshot restore.
fastRestoreRule_availabilityZones :: Lens' FastRestoreRule (NonEmpty Text)

-- | Detailed information about a lifecycle policy.
--   
--   <i>See:</i> <a>newLifecyclePolicy</a> smart constructor.
data LifecyclePolicy
LifecyclePolicy' :: Maybe GettablePolicyStateValues -> Maybe PolicyDetails -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> LifecyclePolicy

-- | The activation state of the lifecycle policy.
[$sel:state:LifecyclePolicy'] :: LifecyclePolicy -> Maybe GettablePolicyStateValues

-- | The configuration of the lifecycle policy
[$sel:policyDetails:LifecyclePolicy'] :: LifecyclePolicy -> Maybe PolicyDetails

-- | The identifier of the lifecycle policy.
[$sel:policyId:LifecyclePolicy'] :: LifecyclePolicy -> Maybe Text

-- | The Amazon Resource Name (ARN) of the IAM role used to run the
--   operations specified by the lifecycle policy.
[$sel:executionRoleArn:LifecyclePolicy'] :: LifecyclePolicy -> Maybe Text

-- | The local date and time when the lifecycle policy was created.
[$sel:dateCreated:LifecyclePolicy'] :: LifecyclePolicy -> Maybe POSIX

-- | The description of the status.
[$sel:statusMessage:LifecyclePolicy'] :: LifecyclePolicy -> Maybe Text

-- | The local date and time when the lifecycle policy was last modified.
[$sel:dateModified:LifecyclePolicy'] :: LifecyclePolicy -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the policy.
[$sel:policyArn:LifecyclePolicy'] :: LifecyclePolicy -> Maybe Text

-- | The description of the lifecycle policy.
[$sel:description:LifecyclePolicy'] :: LifecyclePolicy -> Maybe Text

-- | The tags.
[$sel:tags:LifecyclePolicy'] :: LifecyclePolicy -> Maybe (HashMap Text Text)

-- | Create a value of <a>LifecyclePolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:LifecyclePolicy'</a>, <a>lifecyclePolicy_state</a> - The
--   activation state of the lifecycle policy.
--   
--   <a>$sel:policyDetails:LifecyclePolicy'</a>,
--   <a>lifecyclePolicy_policyDetails</a> - The configuration of the
--   lifecycle policy
--   
--   <a>$sel:policyId:LifecyclePolicy'</a>, <a>lifecyclePolicy_policyId</a>
--   - The identifier of the lifecycle policy.
--   
--   <a>$sel:executionRoleArn:LifecyclePolicy'</a>,
--   <a>lifecyclePolicy_executionRoleArn</a> - The Amazon Resource Name
--   (ARN) of the IAM role used to run the operations specified by the
--   lifecycle policy.
--   
--   <a>$sel:dateCreated:LifecyclePolicy'</a>,
--   <a>lifecyclePolicy_dateCreated</a> - The local date and time when the
--   lifecycle policy was created.
--   
--   <a>$sel:statusMessage:LifecyclePolicy'</a>,
--   <a>lifecyclePolicy_statusMessage</a> - The description of the status.
--   
--   <a>$sel:dateModified:LifecyclePolicy'</a>,
--   <a>lifecyclePolicy_dateModified</a> - The local date and time when the
--   lifecycle policy was last modified.
--   
--   <a>$sel:policyArn:LifecyclePolicy'</a>,
--   <a>lifecyclePolicy_policyArn</a> - The Amazon Resource Name (ARN) of
--   the policy.
--   
--   <a>$sel:description:LifecyclePolicy'</a>,
--   <a>lifecyclePolicy_description</a> - The description of the lifecycle
--   policy.
--   
--   <a>$sel:tags:LifecyclePolicy'</a>, <a>lifecyclePolicy_tags</a> - The
--   tags.
newLifecyclePolicy :: LifecyclePolicy

-- | The activation state of the lifecycle policy.
lifecyclePolicy_state :: Lens' LifecyclePolicy (Maybe GettablePolicyStateValues)

-- | The configuration of the lifecycle policy
lifecyclePolicy_policyDetails :: Lens' LifecyclePolicy (Maybe PolicyDetails)

-- | The identifier of the lifecycle policy.
lifecyclePolicy_policyId :: Lens' LifecyclePolicy (Maybe Text)

-- | The Amazon Resource Name (ARN) of the IAM role used to run the
--   operations specified by the lifecycle policy.
lifecyclePolicy_executionRoleArn :: Lens' LifecyclePolicy (Maybe Text)

-- | The local date and time when the lifecycle policy was created.
lifecyclePolicy_dateCreated :: Lens' LifecyclePolicy (Maybe UTCTime)

-- | The description of the status.
lifecyclePolicy_statusMessage :: Lens' LifecyclePolicy (Maybe Text)

-- | The local date and time when the lifecycle policy was last modified.
lifecyclePolicy_dateModified :: Lens' LifecyclePolicy (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the policy.
lifecyclePolicy_policyArn :: Lens' LifecyclePolicy (Maybe Text)

-- | The description of the lifecycle policy.
lifecyclePolicy_description :: Lens' LifecyclePolicy (Maybe Text)

-- | The tags.
lifecyclePolicy_tags :: Lens' LifecyclePolicy (Maybe (HashMap Text Text))

-- | Summary information about a lifecycle policy.
--   
--   <i>See:</i> <a>newLifecyclePolicySummary</a> smart constructor.
data LifecyclePolicySummary
LifecyclePolicySummary' :: Maybe GettablePolicyStateValues -> Maybe Text -> Maybe PolicyTypeValues -> Maybe Text -> Maybe (HashMap Text Text) -> LifecyclePolicySummary

-- | The activation state of the lifecycle policy.
[$sel:state:LifecyclePolicySummary'] :: LifecyclePolicySummary -> Maybe GettablePolicyStateValues

-- | The identifier of the lifecycle policy.
[$sel:policyId:LifecyclePolicySummary'] :: LifecyclePolicySummary -> Maybe Text

-- | The type of policy. <tt>EBS_SNAPSHOT_MANAGEMENT</tt> indicates that
--   the policy manages the lifecycle of Amazon EBS snapshots.
--   <tt>IMAGE_MANAGEMENT</tt> indicates that the policy manages the
--   lifecycle of EBS-backed AMIs.
[$sel:policyType:LifecyclePolicySummary'] :: LifecyclePolicySummary -> Maybe PolicyTypeValues

-- | The description of the lifecycle policy.
[$sel:description:LifecyclePolicySummary'] :: LifecyclePolicySummary -> Maybe Text

-- | The tags.
[$sel:tags:LifecyclePolicySummary'] :: LifecyclePolicySummary -> Maybe (HashMap Text Text)

-- | Create a value of <a>LifecyclePolicySummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:LifecyclePolicySummary'</a>,
--   <a>lifecyclePolicySummary_state</a> - The activation state of the
--   lifecycle policy.
--   
--   <a>$sel:policyId:LifecyclePolicySummary'</a>,
--   <a>lifecyclePolicySummary_policyId</a> - The identifier of the
--   lifecycle policy.
--   
--   <a>$sel:policyType:LifecyclePolicySummary'</a>,
--   <a>lifecyclePolicySummary_policyType</a> - The type of policy.
--   <tt>EBS_SNAPSHOT_MANAGEMENT</tt> indicates that the policy manages the
--   lifecycle of Amazon EBS snapshots. <tt>IMAGE_MANAGEMENT</tt> indicates
--   that the policy manages the lifecycle of EBS-backed AMIs.
--   
--   <a>$sel:description:LifecyclePolicySummary'</a>,
--   <a>lifecyclePolicySummary_description</a> - The description of the
--   lifecycle policy.
--   
--   <a>$sel:tags:LifecyclePolicySummary'</a>,
--   <a>lifecyclePolicySummary_tags</a> - The tags.
newLifecyclePolicySummary :: LifecyclePolicySummary

-- | The activation state of the lifecycle policy.
lifecyclePolicySummary_state :: Lens' LifecyclePolicySummary (Maybe GettablePolicyStateValues)

-- | The identifier of the lifecycle policy.
lifecyclePolicySummary_policyId :: Lens' LifecyclePolicySummary (Maybe Text)

-- | The type of policy. <tt>EBS_SNAPSHOT_MANAGEMENT</tt> indicates that
--   the policy manages the lifecycle of Amazon EBS snapshots.
--   <tt>IMAGE_MANAGEMENT</tt> indicates that the policy manages the
--   lifecycle of EBS-backed AMIs.
lifecyclePolicySummary_policyType :: Lens' LifecyclePolicySummary (Maybe PolicyTypeValues)

-- | The description of the lifecycle policy.
lifecyclePolicySummary_description :: Lens' LifecyclePolicySummary (Maybe Text)

-- | The tags.
lifecyclePolicySummary_tags :: Lens' LifecyclePolicySummary (Maybe (HashMap Text Text))

-- | Specifies optional parameters to add to a policy. The set of valid
--   parameters depends on the combination of policy type and resource
--   type.
--   
--   <i>See:</i> <a>newParameters</a> smart constructor.
data Parameters
Parameters' :: Maybe Bool -> Maybe Bool -> Parameters

-- | Applies to AMI lifecycle policies only. Indicates whether targeted
--   instances are rebooted when the lifecycle policy runs. <tt>true</tt>
--   indicates that targeted instances are not rebooted when the policy
--   runs. <tt>false</tt> indicates that target instances are rebooted when
--   the policy runs. The default is <tt>true</tt> (instances are not
--   rebooted).
[$sel:noReboot:Parameters'] :: Parameters -> Maybe Bool

-- | <ul>
--   <li><i>EBS Snapshot Management – Instance policies only</i> Indicates
--   whether to exclude the root volume from snapshots created using
--   <a>CreateSnapshots</a>. The default is false.</li>
--   </ul>
[$sel:excludeBootVolume:Parameters'] :: Parameters -> Maybe Bool

-- | Create a value of <a>Parameters</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:noReboot:Parameters'</a>, <a>parameters_noReboot</a> - Applies
--   to AMI lifecycle policies only. Indicates whether targeted instances
--   are rebooted when the lifecycle policy runs. <tt>true</tt> indicates
--   that targeted instances are not rebooted when the policy runs.
--   <tt>false</tt> indicates that target instances are rebooted when the
--   policy runs. The default is <tt>true</tt> (instances are not
--   rebooted).
--   
--   <a>$sel:excludeBootVolume:Parameters'</a>,
--   <a>parameters_excludeBootVolume</a> - [EBS Snapshot Management –
--   Instance policies only] Indicates whether to exclude the root volume
--   from snapshots created using <a>CreateSnapshots</a>. The default is
--   false.
newParameters :: Parameters

-- | Applies to AMI lifecycle policies only. Indicates whether targeted
--   instances are rebooted when the lifecycle policy runs. <tt>true</tt>
--   indicates that targeted instances are not rebooted when the policy
--   runs. <tt>false</tt> indicates that target instances are rebooted when
--   the policy runs. The default is <tt>true</tt> (instances are not
--   rebooted).
parameters_noReboot :: Lens' Parameters (Maybe Bool)

-- | <ul>
--   <li><i>EBS Snapshot Management – Instance policies only</i> Indicates
--   whether to exclude the root volume from snapshots created using
--   <a>CreateSnapshots</a>. The default is false.</li>
--   </ul>
parameters_excludeBootVolume :: Lens' Parameters (Maybe Bool)

-- | Specifies the configuration of a lifecycle policy.
--   
--   <i>See:</i> <a>newPolicyDetails</a> smart constructor.
data PolicyDetails
PolicyDetails' :: Maybe (NonEmpty Action) -> Maybe (NonEmpty Tag) -> Maybe PolicyTypeValues -> Maybe (NonEmpty ResourceLocationValues) -> Maybe Parameters -> Maybe (NonEmpty Schedule) -> Maybe EventSource -> Maybe (NonEmpty ResourceTypeValues) -> PolicyDetails

-- | The actions to be performed when the event-based policy is triggered.
--   You can specify only one action per policy.
--   
--   This parameter is required for event-based policies only. If you are
--   creating a snapshot or AMI policy, omit this parameter.
[$sel:actions:PolicyDetails'] :: PolicyDetails -> Maybe (NonEmpty Action)

-- | The single tag that identifies targeted resources for this policy.
--   
--   This parameter is required for snapshot and AMI policies only. If you
--   are creating an event-based policy, omit this parameter.
[$sel:targetTags:PolicyDetails'] :: PolicyDetails -> Maybe (NonEmpty Tag)

-- | The valid target resource types and actions a policy can manage.
--   Specify <tt>EBS_SNAPSHOT_MANAGEMENT</tt> to create a lifecycle policy
--   that manages the lifecycle of Amazon EBS snapshots. Specify
--   <tt>IMAGE_MANAGEMENT</tt> to create a lifecycle policy that manages
--   the lifecycle of EBS-backed AMIs. Specify <tt>EVENT_BASED_POLICY </tt>
--   to create an event-based policy that performs specific actions when a
--   defined event occurs in your Amazon Web Services account.
--   
--   The default is <tt>EBS_SNAPSHOT_MANAGEMENT</tt>.
[$sel:policyType:PolicyDetails'] :: PolicyDetails -> Maybe PolicyTypeValues

-- | The location of the resources to backup. If the source resources are
--   located in an Amazon Web Services Region, specify <tt>CLOUD</tt>. If
--   the source resources are located on an Outpost in your account,
--   specify <tt>OUTPOST</tt>.
--   
--   If you specify <tt>OUTPOST</tt>, Amazon Data Lifecycle Manager backs
--   up all resources of the specified type with matching target tags
--   across all of the Outposts in your account.
[$sel:resourceLocations:PolicyDetails'] :: PolicyDetails -> Maybe (NonEmpty ResourceLocationValues)

-- | A set of optional parameters for snapshot and AMI lifecycle policies.
--   
--   This parameter is required for snapshot and AMI policies only. If you
--   are creating an event-based policy, omit this parameter.
[$sel:parameters:PolicyDetails'] :: PolicyDetails -> Maybe Parameters

-- | The schedules of policy-defined actions for snapshot and AMI lifecycle
--   policies. A policy can have up to four schedules—one mandatory
--   schedule and up to three optional schedules.
--   
--   This parameter is required for snapshot and AMI policies only. If you
--   are creating an event-based policy, omit this parameter.
[$sel:schedules:PolicyDetails'] :: PolicyDetails -> Maybe (NonEmpty Schedule)

-- | The event that triggers the event-based policy.
--   
--   This parameter is required for event-based policies only. If you are
--   creating a snapshot or AMI policy, omit this parameter.
[$sel:eventSource:PolicyDetails'] :: PolicyDetails -> Maybe EventSource

-- | The target resource type for snapshot and AMI lifecycle policies. Use
--   <tt>VOLUME </tt>to create snapshots of individual volumes or use
--   <tt>INSTANCE</tt> to create multi-volume snapshots from the volumes
--   for an instance.
--   
--   This parameter is required for snapshot and AMI policies only. If you
--   are creating an event-based policy, omit this parameter.
[$sel:resourceTypes:PolicyDetails'] :: PolicyDetails -> Maybe (NonEmpty ResourceTypeValues)

-- | Create a value of <a>PolicyDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:actions:PolicyDetails'</a>, <a>policyDetails_actions</a> - The
--   actions to be performed when the event-based policy is triggered. You
--   can specify only one action per policy.
--   
--   This parameter is required for event-based policies only. If you are
--   creating a snapshot or AMI policy, omit this parameter.
--   
--   <a>$sel:targetTags:PolicyDetails'</a>, <a>policyDetails_targetTags</a>
--   - The single tag that identifies targeted resources for this policy.
--   
--   This parameter is required for snapshot and AMI policies only. If you
--   are creating an event-based policy, omit this parameter.
--   
--   <a>$sel:policyType:PolicyDetails'</a>, <a>policyDetails_policyType</a>
--   - The valid target resource types and actions a policy can manage.
--   Specify <tt>EBS_SNAPSHOT_MANAGEMENT</tt> to create a lifecycle policy
--   that manages the lifecycle of Amazon EBS snapshots. Specify
--   <tt>IMAGE_MANAGEMENT</tt> to create a lifecycle policy that manages
--   the lifecycle of EBS-backed AMIs. Specify <tt>EVENT_BASED_POLICY </tt>
--   to create an event-based policy that performs specific actions when a
--   defined event occurs in your Amazon Web Services account.
--   
--   The default is <tt>EBS_SNAPSHOT_MANAGEMENT</tt>.
--   
--   <a>$sel:resourceLocations:PolicyDetails'</a>,
--   <a>policyDetails_resourceLocations</a> - The location of the resources
--   to backup. If the source resources are located in an Amazon Web
--   Services Region, specify <tt>CLOUD</tt>. If the source resources are
--   located on an Outpost in your account, specify <tt>OUTPOST</tt>.
--   
--   If you specify <tt>OUTPOST</tt>, Amazon Data Lifecycle Manager backs
--   up all resources of the specified type with matching target tags
--   across all of the Outposts in your account.
--   
--   <a>$sel:parameters:PolicyDetails'</a>, <a>policyDetails_parameters</a>
--   - A set of optional parameters for snapshot and AMI lifecycle
--   policies.
--   
--   This parameter is required for snapshot and AMI policies only. If you
--   are creating an event-based policy, omit this parameter.
--   
--   <a>$sel:schedules:PolicyDetails'</a>, <a>policyDetails_schedules</a> -
--   The schedules of policy-defined actions for snapshot and AMI lifecycle
--   policies. A policy can have up to four schedules—one mandatory
--   schedule and up to three optional schedules.
--   
--   This parameter is required for snapshot and AMI policies only. If you
--   are creating an event-based policy, omit this parameter.
--   
--   <a>$sel:eventSource:PolicyDetails'</a>,
--   <a>policyDetails_eventSource</a> - The event that triggers the
--   event-based policy.
--   
--   This parameter is required for event-based policies only. If you are
--   creating a snapshot or AMI policy, omit this parameter.
--   
--   <a>$sel:resourceTypes:PolicyDetails'</a>,
--   <a>policyDetails_resourceTypes</a> - The target resource type for
--   snapshot and AMI lifecycle policies. Use <tt>VOLUME </tt>to create
--   snapshots of individual volumes or use <tt>INSTANCE</tt> to create
--   multi-volume snapshots from the volumes for an instance.
--   
--   This parameter is required for snapshot and AMI policies only. If you
--   are creating an event-based policy, omit this parameter.
newPolicyDetails :: PolicyDetails

-- | The actions to be performed when the event-based policy is triggered.
--   You can specify only one action per policy.
--   
--   This parameter is required for event-based policies only. If you are
--   creating a snapshot or AMI policy, omit this parameter.
policyDetails_actions :: Lens' PolicyDetails (Maybe (NonEmpty Action))

-- | The single tag that identifies targeted resources for this policy.
--   
--   This parameter is required for snapshot and AMI policies only. If you
--   are creating an event-based policy, omit this parameter.
policyDetails_targetTags :: Lens' PolicyDetails (Maybe (NonEmpty Tag))

-- | The valid target resource types and actions a policy can manage.
--   Specify <tt>EBS_SNAPSHOT_MANAGEMENT</tt> to create a lifecycle policy
--   that manages the lifecycle of Amazon EBS snapshots. Specify
--   <tt>IMAGE_MANAGEMENT</tt> to create a lifecycle policy that manages
--   the lifecycle of EBS-backed AMIs. Specify <tt>EVENT_BASED_POLICY </tt>
--   to create an event-based policy that performs specific actions when a
--   defined event occurs in your Amazon Web Services account.
--   
--   The default is <tt>EBS_SNAPSHOT_MANAGEMENT</tt>.
policyDetails_policyType :: Lens' PolicyDetails (Maybe PolicyTypeValues)

-- | The location of the resources to backup. If the source resources are
--   located in an Amazon Web Services Region, specify <tt>CLOUD</tt>. If
--   the source resources are located on an Outpost in your account,
--   specify <tt>OUTPOST</tt>.
--   
--   If you specify <tt>OUTPOST</tt>, Amazon Data Lifecycle Manager backs
--   up all resources of the specified type with matching target tags
--   across all of the Outposts in your account.
policyDetails_resourceLocations :: Lens' PolicyDetails (Maybe (NonEmpty ResourceLocationValues))

-- | A set of optional parameters for snapshot and AMI lifecycle policies.
--   
--   This parameter is required for snapshot and AMI policies only. If you
--   are creating an event-based policy, omit this parameter.
policyDetails_parameters :: Lens' PolicyDetails (Maybe Parameters)

-- | The schedules of policy-defined actions for snapshot and AMI lifecycle
--   policies. A policy can have up to four schedules—one mandatory
--   schedule and up to three optional schedules.
--   
--   This parameter is required for snapshot and AMI policies only. If you
--   are creating an event-based policy, omit this parameter.
policyDetails_schedules :: Lens' PolicyDetails (Maybe (NonEmpty Schedule))

-- | The event that triggers the event-based policy.
--   
--   This parameter is required for event-based policies only. If you are
--   creating a snapshot or AMI policy, omit this parameter.
policyDetails_eventSource :: Lens' PolicyDetails (Maybe EventSource)

-- | The target resource type for snapshot and AMI lifecycle policies. Use
--   <tt>VOLUME </tt>to create snapshots of individual volumes or use
--   <tt>INSTANCE</tt> to create multi-volume snapshots from the volumes
--   for an instance.
--   
--   This parameter is required for snapshot and AMI policies only. If you
--   are creating an event-based policy, omit this parameter.
policyDetails_resourceTypes :: Lens' PolicyDetails (Maybe (NonEmpty ResourceTypeValues))

-- | Specifies the retention rule for a lifecycle policy. You can retain
--   snapshots based on either a count or a time interval.
--   
--   <i>See:</i> <a>newRetainRule</a> smart constructor.
data RetainRule
RetainRule' :: Maybe Natural -> Maybe Natural -> Maybe RetentionIntervalUnitValues -> RetainRule

-- | The number of snapshots to retain for each volume, up to a maximum of
--   1000.
[$sel:count:RetainRule'] :: RetainRule -> Maybe Natural

-- | The amount of time to retain each snapshot. The maximum is 100 years.
--   This is equivalent to 1200 months, 5200 weeks, or 36500 days.
[$sel:interval:RetainRule'] :: RetainRule -> Maybe Natural

-- | The unit of time for time-based retention.
[$sel:intervalUnit:RetainRule'] :: RetainRule -> Maybe RetentionIntervalUnitValues

-- | Create a value of <a>RetainRule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:count:RetainRule'</a>, <a>retainRule_count</a> - The number of
--   snapshots to retain for each volume, up to a maximum of 1000.
--   
--   <a>$sel:interval:RetainRule'</a>, <a>retainRule_interval</a> - The
--   amount of time to retain each snapshot. The maximum is 100 years. This
--   is equivalent to 1200 months, 5200 weeks, or 36500 days.
--   
--   <a>$sel:intervalUnit:RetainRule'</a>, <a>retainRule_intervalUnit</a> -
--   The unit of time for time-based retention.
newRetainRule :: RetainRule

-- | The number of snapshots to retain for each volume, up to a maximum of
--   1000.
retainRule_count :: Lens' RetainRule (Maybe Natural)

-- | The amount of time to retain each snapshot. The maximum is 100 years.
--   This is equivalent to 1200 months, 5200 weeks, or 36500 days.
retainRule_interval :: Lens' RetainRule (Maybe Natural)

-- | The unit of time for time-based retention.
retainRule_intervalUnit :: Lens' RetainRule (Maybe RetentionIntervalUnitValues)

-- | Specifies a backup schedule for a snapshot or AMI lifecycle policy.
--   
--   <i>See:</i> <a>newSchedule</a> smart constructor.
data Schedule
Schedule' :: Maybe [Tag] -> Maybe CreateRule -> Maybe DeprecateRule -> Maybe Bool -> Maybe Text -> Maybe [ShareRule] -> Maybe [Tag] -> Maybe RetainRule -> Maybe [CrossRegionCopyRule] -> Maybe FastRestoreRule -> Schedule

-- | A collection of key/value pairs with values determined dynamically
--   when the policy is executed. Keys may be any valid Amazon EC2 tag key.
--   Values must be in one of the two following formats:
--   <tt>$(instance-id)</tt> or <tt>$(timestamp)</tt>. Variable tags are
--   only valid for EBS Snapshot Management – Instance policies.
[$sel:variableTags:Schedule'] :: Schedule -> Maybe [Tag]

-- | The creation rule.
[$sel:createRule:Schedule'] :: Schedule -> Maybe CreateRule

-- | The AMI deprecation rule for the schedule.
[$sel:deprecateRule:Schedule'] :: Schedule -> Maybe DeprecateRule

-- | Copy all user-defined tags on a source volume to snapshots of the
--   volume created by this policy.
[$sel:copyTags:Schedule'] :: Schedule -> Maybe Bool

-- | The name of the schedule.
[$sel:name:Schedule'] :: Schedule -> Maybe Text

-- | The rule for sharing snapshots with other Amazon Web Services
--   accounts.
[$sel:shareRules:Schedule'] :: Schedule -> Maybe [ShareRule]

-- | The tags to apply to policy-created resources. These user-defined tags
--   are in addition to the Amazon Web Services-added lifecycle tags.
[$sel:tagsToAdd:Schedule'] :: Schedule -> Maybe [Tag]

-- | The retention rule.
[$sel:retainRule:Schedule'] :: Schedule -> Maybe RetainRule

-- | The rule for cross-Region snapshot copies.
--   
--   You can only specify cross-Region copy rules for policies that create
--   snapshots in a Region. If the policy creates snapshots on an Outpost,
--   then you cannot copy the snapshots to a Region or to an Outpost. If
--   the policy creates snapshots in a Region, then snapshots can be copied
--   to up to three Regions or Outposts.
[$sel:crossRegionCopyRules:Schedule'] :: Schedule -> Maybe [CrossRegionCopyRule]

-- | The rule for enabling fast snapshot restore.
[$sel:fastRestoreRule:Schedule'] :: Schedule -> Maybe FastRestoreRule

-- | Create a value of <a>Schedule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:variableTags:Schedule'</a>, <a>schedule_variableTags</a> - A
--   collection of key/value pairs with values determined dynamically when
--   the policy is executed. Keys may be any valid Amazon EC2 tag key.
--   Values must be in one of the two following formats:
--   <tt>$(instance-id)</tt> or <tt>$(timestamp)</tt>. Variable tags are
--   only valid for EBS Snapshot Management – Instance policies.
--   
--   <a>$sel:createRule:Schedule'</a>, <a>schedule_createRule</a> - The
--   creation rule.
--   
--   <a>$sel:deprecateRule:Schedule'</a>, <a>schedule_deprecateRule</a> -
--   The AMI deprecation rule for the schedule.
--   
--   <a>$sel:copyTags:Schedule'</a>, <a>schedule_copyTags</a> - Copy all
--   user-defined tags on a source volume to snapshots of the volume
--   created by this policy.
--   
--   <a>$sel:name:Schedule'</a>, <a>schedule_name</a> - The name of the
--   schedule.
--   
--   <a>$sel:shareRules:Schedule'</a>, <a>schedule_shareRules</a> - The
--   rule for sharing snapshots with other Amazon Web Services accounts.
--   
--   <a>$sel:tagsToAdd:Schedule'</a>, <a>schedule_tagsToAdd</a> - The tags
--   to apply to policy-created resources. These user-defined tags are in
--   addition to the Amazon Web Services-added lifecycle tags.
--   
--   <a>$sel:retainRule:Schedule'</a>, <a>schedule_retainRule</a> - The
--   retention rule.
--   
--   <a>$sel:crossRegionCopyRules:Schedule'</a>,
--   <a>schedule_crossRegionCopyRules</a> - The rule for cross-Region
--   snapshot copies.
--   
--   You can only specify cross-Region copy rules for policies that create
--   snapshots in a Region. If the policy creates snapshots on an Outpost,
--   then you cannot copy the snapshots to a Region or to an Outpost. If
--   the policy creates snapshots in a Region, then snapshots can be copied
--   to up to three Regions or Outposts.
--   
--   <a>$sel:fastRestoreRule:Schedule'</a>, <a>schedule_fastRestoreRule</a>
--   - The rule for enabling fast snapshot restore.
newSchedule :: Schedule

-- | A collection of key/value pairs with values determined dynamically
--   when the policy is executed. Keys may be any valid Amazon EC2 tag key.
--   Values must be in one of the two following formats:
--   <tt>$(instance-id)</tt> or <tt>$(timestamp)</tt>. Variable tags are
--   only valid for EBS Snapshot Management – Instance policies.
schedule_variableTags :: Lens' Schedule (Maybe [Tag])

-- | The creation rule.
schedule_createRule :: Lens' Schedule (Maybe CreateRule)

-- | The AMI deprecation rule for the schedule.
schedule_deprecateRule :: Lens' Schedule (Maybe DeprecateRule)

-- | Copy all user-defined tags on a source volume to snapshots of the
--   volume created by this policy.
schedule_copyTags :: Lens' Schedule (Maybe Bool)

-- | The name of the schedule.
schedule_name :: Lens' Schedule (Maybe Text)

-- | The rule for sharing snapshots with other Amazon Web Services
--   accounts.
schedule_shareRules :: Lens' Schedule (Maybe [ShareRule])

-- | The tags to apply to policy-created resources. These user-defined tags
--   are in addition to the Amazon Web Services-added lifecycle tags.
schedule_tagsToAdd :: Lens' Schedule (Maybe [Tag])

-- | The retention rule.
schedule_retainRule :: Lens' Schedule (Maybe RetainRule)

-- | The rule for cross-Region snapshot copies.
--   
--   You can only specify cross-Region copy rules for policies that create
--   snapshots in a Region. If the policy creates snapshots on an Outpost,
--   then you cannot copy the snapshots to a Region or to an Outpost. If
--   the policy creates snapshots in a Region, then snapshots can be copied
--   to up to three Regions or Outposts.
schedule_crossRegionCopyRules :: Lens' Schedule (Maybe [CrossRegionCopyRule])

-- | The rule for enabling fast snapshot restore.
schedule_fastRestoreRule :: Lens' Schedule (Maybe FastRestoreRule)

-- | Specifies a rule for sharing snapshots across Amazon Web Services
--   accounts.
--   
--   <i>See:</i> <a>newShareRule</a> smart constructor.
data ShareRule
ShareRule' :: Maybe RetentionIntervalUnitValues -> Maybe Natural -> NonEmpty Text -> ShareRule

-- | The unit of time for the automatic unsharing interval.
[$sel:unshareIntervalUnit:ShareRule'] :: ShareRule -> Maybe RetentionIntervalUnitValues

-- | The period after which snapshots that are shared with other Amazon Web
--   Services accounts are automatically unshared.
[$sel:unshareInterval:ShareRule'] :: ShareRule -> Maybe Natural

-- | The IDs of the Amazon Web Services accounts with which to share the
--   snapshots.
[$sel:targetAccounts:ShareRule'] :: ShareRule -> NonEmpty Text

-- | Create a value of <a>ShareRule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:unshareIntervalUnit:ShareRule'</a>,
--   <a>shareRule_unshareIntervalUnit</a> - The unit of time for the
--   automatic unsharing interval.
--   
--   <a>$sel:unshareInterval:ShareRule'</a>,
--   <a>shareRule_unshareInterval</a> - The period after which snapshots
--   that are shared with other Amazon Web Services accounts are
--   automatically unshared.
--   
--   <a>$sel:targetAccounts:ShareRule'</a>, <a>shareRule_targetAccounts</a>
--   - The IDs of the Amazon Web Services accounts with which to share the
--   snapshots.
newShareRule :: NonEmpty Text -> ShareRule

-- | The unit of time for the automatic unsharing interval.
shareRule_unshareIntervalUnit :: Lens' ShareRule (Maybe RetentionIntervalUnitValues)

-- | The period after which snapshots that are shared with other Amazon Web
--   Services accounts are automatically unshared.
shareRule_unshareInterval :: Lens' ShareRule (Maybe Natural)

-- | The IDs of the Amazon Web Services accounts with which to share the
--   snapshots.
shareRule_targetAccounts :: Lens' ShareRule (NonEmpty Text)

-- | Specifies a tag for a resource.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | The tag key.
[$sel:key:Tag'] :: Tag -> Text

-- | The tag value.
[$sel:value:Tag'] :: Tag -> Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The tag key.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The tag value.
newTag :: Text -> Text -> Tag

-- | The tag key.
tag_key :: Lens' Tag Text

-- | The tag value.
tag_value :: Lens' Tag Text


-- | Adds the specified tags to the specified resource.
module Amazonka.DLM.TagResource

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> HashMap Text Text -> TagResource

-- | The Amazon Resource Name (ARN) of the resource.
[$sel:resourceArn:TagResource'] :: TagResource -> Text

-- | One or more tags.
[$sel:tags:TagResource'] :: TagResource -> HashMap Text Text

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The Amazon Resource Name (ARN) of the resource.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - One or more
--   tags.
newTagResource :: Text -> TagResource

-- | The Amazon Resource Name (ARN) of the resource.
tagResource_resourceArn :: Lens' TagResource Text

-- | One or more tags.
tagResource_tags :: Lens' TagResource (HashMap Text Text)

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:TagResourceResponse'] :: TagResourceResponse -> Int

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int
instance GHC.Generics.Generic Amazonka.DLM.TagResource.TagResource
instance GHC.Show.Show Amazonka.DLM.TagResource.TagResource
instance GHC.Read.Read Amazonka.DLM.TagResource.TagResource
instance GHC.Classes.Eq Amazonka.DLM.TagResource.TagResource
instance GHC.Generics.Generic Amazonka.DLM.TagResource.TagResourceResponse
instance GHC.Show.Show Amazonka.DLM.TagResource.TagResourceResponse
instance GHC.Read.Read Amazonka.DLM.TagResource.TagResourceResponse
instance GHC.Classes.Eq Amazonka.DLM.TagResource.TagResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.DLM.TagResource.TagResource
instance Control.DeepSeq.NFData Amazonka.DLM.TagResource.TagResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.DLM.TagResource.TagResource
instance Control.DeepSeq.NFData Amazonka.DLM.TagResource.TagResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.DLM.TagResource.TagResource
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DLM.TagResource.TagResource
instance Amazonka.Data.Path.ToPath Amazonka.DLM.TagResource.TagResource
instance Amazonka.Data.Query.ToQuery Amazonka.DLM.TagResource.TagResource


-- | Lists the tags for the specified resource.
module Amazonka.DLM.ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | The Amazon Resource Name (ARN) of the resource.
[$sel:resourceArn:ListTagsForResource'] :: ListTagsForResource -> Text

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The Amazon Resource Name
--   (ARN) of the resource.
newListTagsForResource :: Text -> ListTagsForResource

-- | The Amazon Resource Name (ARN) of the resource.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe (HashMap Text Text) -> Int -> ListTagsForResourceResponse

-- | Information about the tags.
[$sel:tags:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Int

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - Information about the tags.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | Information about the tags.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int
instance GHC.Generics.Generic Amazonka.DLM.ListTagsForResource.ListTagsForResource
instance GHC.Show.Show Amazonka.DLM.ListTagsForResource.ListTagsForResource
instance GHC.Read.Read Amazonka.DLM.ListTagsForResource.ListTagsForResource
instance GHC.Classes.Eq Amazonka.DLM.ListTagsForResource.ListTagsForResource
instance GHC.Generics.Generic Amazonka.DLM.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Show.Show Amazonka.DLM.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Read.Read Amazonka.DLM.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Classes.Eq Amazonka.DLM.ListTagsForResource.ListTagsForResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.DLM.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Amazonka.DLM.ListTagsForResource.ListTagsForResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.DLM.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Amazonka.DLM.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.DLM.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Path.ToPath Amazonka.DLM.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Query.ToQuery Amazonka.DLM.ListTagsForResource.ListTagsForResource


-- | Gets detailed information about the specified lifecycle policy.
module Amazonka.DLM.GetLifecyclePolicy

-- | <i>See:</i> <a>newGetLifecyclePolicy</a> smart constructor.
data GetLifecyclePolicy
GetLifecyclePolicy' :: Text -> GetLifecyclePolicy

-- | The identifier of the lifecycle policy.
[$sel:policyId:GetLifecyclePolicy'] :: GetLifecyclePolicy -> Text

-- | Create a value of <a>GetLifecyclePolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policyId:GetLifecyclePolicy'</a>,
--   <a>getLifecyclePolicy_policyId</a> - The identifier of the lifecycle
--   policy.
newGetLifecyclePolicy :: Text -> GetLifecyclePolicy

-- | The identifier of the lifecycle policy.
getLifecyclePolicy_policyId :: Lens' GetLifecyclePolicy Text

-- | <i>See:</i> <a>newGetLifecyclePolicyResponse</a> smart constructor.
data GetLifecyclePolicyResponse
GetLifecyclePolicyResponse' :: Maybe LifecyclePolicy -> Int -> GetLifecyclePolicyResponse

-- | Detailed information about the lifecycle policy.
[$sel:policy:GetLifecyclePolicyResponse'] :: GetLifecyclePolicyResponse -> Maybe LifecyclePolicy

-- | The response's http status code.
[$sel:httpStatus:GetLifecyclePolicyResponse'] :: GetLifecyclePolicyResponse -> Int

-- | Create a value of <a>GetLifecyclePolicyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policy:GetLifecyclePolicyResponse'</a>,
--   <a>getLifecyclePolicyResponse_policy</a> - Detailed information about
--   the lifecycle policy.
--   
--   <a>$sel:httpStatus:GetLifecyclePolicyResponse'</a>,
--   <a>getLifecyclePolicyResponse_httpStatus</a> - The response's http
--   status code.
newGetLifecyclePolicyResponse :: Int -> GetLifecyclePolicyResponse

-- | Detailed information about the lifecycle policy.
getLifecyclePolicyResponse_policy :: Lens' GetLifecyclePolicyResponse (Maybe LifecyclePolicy)

-- | The response's http status code.
getLifecyclePolicyResponse_httpStatus :: Lens' GetLifecyclePolicyResponse Int
instance GHC.Generics.Generic Amazonka.DLM.GetLifecyclePolicy.GetLifecyclePolicy
instance GHC.Show.Show Amazonka.DLM.GetLifecyclePolicy.GetLifecyclePolicy
instance GHC.Read.Read Amazonka.DLM.GetLifecyclePolicy.GetLifecyclePolicy
instance GHC.Classes.Eq Amazonka.DLM.GetLifecyclePolicy.GetLifecyclePolicy
instance GHC.Generics.Generic Amazonka.DLM.GetLifecyclePolicy.GetLifecyclePolicyResponse
instance GHC.Show.Show Amazonka.DLM.GetLifecyclePolicy.GetLifecyclePolicyResponse
instance GHC.Read.Read Amazonka.DLM.GetLifecyclePolicy.GetLifecyclePolicyResponse
instance GHC.Classes.Eq Amazonka.DLM.GetLifecyclePolicy.GetLifecyclePolicyResponse
instance Amazonka.Types.AWSRequest Amazonka.DLM.GetLifecyclePolicy.GetLifecyclePolicy
instance Control.DeepSeq.NFData Amazonka.DLM.GetLifecyclePolicy.GetLifecyclePolicyResponse
instance Data.Hashable.Class.Hashable Amazonka.DLM.GetLifecyclePolicy.GetLifecyclePolicy
instance Control.DeepSeq.NFData Amazonka.DLM.GetLifecyclePolicy.GetLifecyclePolicy
instance Amazonka.Data.Headers.ToHeaders Amazonka.DLM.GetLifecyclePolicy.GetLifecyclePolicy
instance Amazonka.Data.Path.ToPath Amazonka.DLM.GetLifecyclePolicy.GetLifecyclePolicy
instance Amazonka.Data.Query.ToQuery Amazonka.DLM.GetLifecyclePolicy.GetLifecyclePolicy


-- | Gets summary information about all or the specified data lifecycle
--   policies.
--   
--   To get complete information about a policy, use GetLifecyclePolicy.
module Amazonka.DLM.GetLifecyclePolicies

-- | <i>See:</i> <a>newGetLifecyclePolicies</a> smart constructor.
data GetLifecyclePolicies
GetLifecyclePolicies' :: Maybe GettablePolicyStateValues -> Maybe (NonEmpty Text) -> Maybe [Text] -> Maybe [Text] -> Maybe (NonEmpty ResourceTypeValues) -> GetLifecyclePolicies

-- | The activation state.
[$sel:state:GetLifecyclePolicies'] :: GetLifecyclePolicies -> Maybe GettablePolicyStateValues

-- | The target tag for a policy.
--   
--   Tags are strings in the format <tt>key=value</tt>.
[$sel:targetTags:GetLifecyclePolicies'] :: GetLifecyclePolicies -> Maybe (NonEmpty Text)

-- | The tags to add to objects created by the policy.
--   
--   Tags are strings in the format <tt>key=value</tt>.
--   
--   These user-defined tags are added in addition to the Amazon Web
--   Services-added lifecycle tags.
[$sel:tagsToAdd:GetLifecyclePolicies'] :: GetLifecyclePolicies -> Maybe [Text]

-- | The identifiers of the data lifecycle policies.
[$sel:policyIds:GetLifecyclePolicies'] :: GetLifecyclePolicies -> Maybe [Text]

-- | The resource type.
[$sel:resourceTypes:GetLifecyclePolicies'] :: GetLifecyclePolicies -> Maybe (NonEmpty ResourceTypeValues)

-- | Create a value of <a>GetLifecyclePolicies</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:GetLifecyclePolicies'</a>,
--   <a>getLifecyclePolicies_state</a> - The activation state.
--   
--   <a>$sel:targetTags:GetLifecyclePolicies'</a>,
--   <a>getLifecyclePolicies_targetTags</a> - The target tag for a policy.
--   
--   Tags are strings in the format <tt>key=value</tt>.
--   
--   <a>$sel:tagsToAdd:GetLifecyclePolicies'</a>,
--   <a>getLifecyclePolicies_tagsToAdd</a> - The tags to add to objects
--   created by the policy.
--   
--   Tags are strings in the format <tt>key=value</tt>.
--   
--   These user-defined tags are added in addition to the Amazon Web
--   Services-added lifecycle tags.
--   
--   <a>$sel:policyIds:GetLifecyclePolicies'</a>,
--   <a>getLifecyclePolicies_policyIds</a> - The identifiers of the data
--   lifecycle policies.
--   
--   <a>$sel:resourceTypes:GetLifecyclePolicies'</a>,
--   <a>getLifecyclePolicies_resourceTypes</a> - The resource type.
newGetLifecyclePolicies :: GetLifecyclePolicies

-- | The activation state.
getLifecyclePolicies_state :: Lens' GetLifecyclePolicies (Maybe GettablePolicyStateValues)

-- | The target tag for a policy.
--   
--   Tags are strings in the format <tt>key=value</tt>.
getLifecyclePolicies_targetTags :: Lens' GetLifecyclePolicies (Maybe (NonEmpty Text))

-- | The tags to add to objects created by the policy.
--   
--   Tags are strings in the format <tt>key=value</tt>.
--   
--   These user-defined tags are added in addition to the Amazon Web
--   Services-added lifecycle tags.
getLifecyclePolicies_tagsToAdd :: Lens' GetLifecyclePolicies (Maybe [Text])

-- | The identifiers of the data lifecycle policies.
getLifecyclePolicies_policyIds :: Lens' GetLifecyclePolicies (Maybe [Text])

-- | The resource type.
getLifecyclePolicies_resourceTypes :: Lens' GetLifecyclePolicies (Maybe (NonEmpty ResourceTypeValues))

-- | <i>See:</i> <a>newGetLifecyclePoliciesResponse</a> smart constructor.
data GetLifecyclePoliciesResponse
GetLifecyclePoliciesResponse' :: Maybe [LifecyclePolicySummary] -> Int -> GetLifecyclePoliciesResponse

-- | Summary information about the lifecycle policies.
[$sel:policies:GetLifecyclePoliciesResponse'] :: GetLifecyclePoliciesResponse -> Maybe [LifecyclePolicySummary]

-- | The response's http status code.
[$sel:httpStatus:GetLifecyclePoliciesResponse'] :: GetLifecyclePoliciesResponse -> Int

-- | Create a value of <a>GetLifecyclePoliciesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policies:GetLifecyclePoliciesResponse'</a>,
--   <a>getLifecyclePoliciesResponse_policies</a> - Summary information
--   about the lifecycle policies.
--   
--   <a>$sel:httpStatus:GetLifecyclePoliciesResponse'</a>,
--   <a>getLifecyclePoliciesResponse_httpStatus</a> - The response's http
--   status code.
newGetLifecyclePoliciesResponse :: Int -> GetLifecyclePoliciesResponse

-- | Summary information about the lifecycle policies.
getLifecyclePoliciesResponse_policies :: Lens' GetLifecyclePoliciesResponse (Maybe [LifecyclePolicySummary])

-- | The response's http status code.
getLifecyclePoliciesResponse_httpStatus :: Lens' GetLifecyclePoliciesResponse Int
instance GHC.Generics.Generic Amazonka.DLM.GetLifecyclePolicies.GetLifecyclePolicies
instance GHC.Show.Show Amazonka.DLM.GetLifecyclePolicies.GetLifecyclePolicies
instance GHC.Read.Read Amazonka.DLM.GetLifecyclePolicies.GetLifecyclePolicies
instance GHC.Classes.Eq Amazonka.DLM.GetLifecyclePolicies.GetLifecyclePolicies
instance GHC.Generics.Generic Amazonka.DLM.GetLifecyclePolicies.GetLifecyclePoliciesResponse
instance GHC.Show.Show Amazonka.DLM.GetLifecyclePolicies.GetLifecyclePoliciesResponse
instance GHC.Read.Read Amazonka.DLM.GetLifecyclePolicies.GetLifecyclePoliciesResponse
instance GHC.Classes.Eq Amazonka.DLM.GetLifecyclePolicies.GetLifecyclePoliciesResponse
instance Amazonka.Types.AWSRequest Amazonka.DLM.GetLifecyclePolicies.GetLifecyclePolicies
instance Control.DeepSeq.NFData Amazonka.DLM.GetLifecyclePolicies.GetLifecyclePoliciesResponse
instance Data.Hashable.Class.Hashable Amazonka.DLM.GetLifecyclePolicies.GetLifecyclePolicies
instance Control.DeepSeq.NFData Amazonka.DLM.GetLifecyclePolicies.GetLifecyclePolicies
instance Amazonka.Data.Headers.ToHeaders Amazonka.DLM.GetLifecyclePolicies.GetLifecyclePolicies
instance Amazonka.Data.Path.ToPath Amazonka.DLM.GetLifecyclePolicies.GetLifecyclePolicies
instance Amazonka.Data.Query.ToQuery Amazonka.DLM.GetLifecyclePolicies.GetLifecyclePolicies


-- | Deletes the specified lifecycle policy and halts the automated
--   operations that the policy specified.
module Amazonka.DLM.DeleteLifecyclePolicy

-- | <i>See:</i> <a>newDeleteLifecyclePolicy</a> smart constructor.
data DeleteLifecyclePolicy
DeleteLifecyclePolicy' :: Text -> DeleteLifecyclePolicy

-- | The identifier of the lifecycle policy.
[$sel:policyId:DeleteLifecyclePolicy'] :: DeleteLifecyclePolicy -> Text

-- | Create a value of <a>DeleteLifecyclePolicy</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policyId:DeleteLifecyclePolicy'</a>,
--   <a>deleteLifecyclePolicy_policyId</a> - The identifier of the
--   lifecycle policy.
newDeleteLifecyclePolicy :: Text -> DeleteLifecyclePolicy

-- | The identifier of the lifecycle policy.
deleteLifecyclePolicy_policyId :: Lens' DeleteLifecyclePolicy Text

-- | <i>See:</i> <a>newDeleteLifecyclePolicyResponse</a> smart constructor.
data DeleteLifecyclePolicyResponse
DeleteLifecyclePolicyResponse' :: Int -> DeleteLifecyclePolicyResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteLifecyclePolicyResponse'] :: DeleteLifecyclePolicyResponse -> Int

-- | Create a value of <a>DeleteLifecyclePolicyResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteLifecyclePolicyResponse'</a>,
--   <a>deleteLifecyclePolicyResponse_httpStatus</a> - The response's http
--   status code.
newDeleteLifecyclePolicyResponse :: Int -> DeleteLifecyclePolicyResponse

-- | The response's http status code.
deleteLifecyclePolicyResponse_httpStatus :: Lens' DeleteLifecyclePolicyResponse Int
instance GHC.Generics.Generic Amazonka.DLM.DeleteLifecyclePolicy.DeleteLifecyclePolicy
instance GHC.Show.Show Amazonka.DLM.DeleteLifecyclePolicy.DeleteLifecyclePolicy
instance GHC.Read.Read Amazonka.DLM.DeleteLifecyclePolicy.DeleteLifecyclePolicy
instance GHC.Classes.Eq Amazonka.DLM.DeleteLifecyclePolicy.DeleteLifecyclePolicy
instance GHC.Generics.Generic Amazonka.DLM.DeleteLifecyclePolicy.DeleteLifecyclePolicyResponse
instance GHC.Show.Show Amazonka.DLM.DeleteLifecyclePolicy.DeleteLifecyclePolicyResponse
instance GHC.Read.Read Amazonka.DLM.DeleteLifecyclePolicy.DeleteLifecyclePolicyResponse
instance GHC.Classes.Eq Amazonka.DLM.DeleteLifecyclePolicy.DeleteLifecyclePolicyResponse
instance Amazonka.Types.AWSRequest Amazonka.DLM.DeleteLifecyclePolicy.DeleteLifecyclePolicy
instance Control.DeepSeq.NFData Amazonka.DLM.DeleteLifecyclePolicy.DeleteLifecyclePolicyResponse
instance Data.Hashable.Class.Hashable Amazonka.DLM.DeleteLifecyclePolicy.DeleteLifecyclePolicy
instance Control.DeepSeq.NFData Amazonka.DLM.DeleteLifecyclePolicy.DeleteLifecyclePolicy
instance Amazonka.Data.Headers.ToHeaders Amazonka.DLM.DeleteLifecyclePolicy.DeleteLifecyclePolicy
instance Amazonka.Data.Path.ToPath Amazonka.DLM.DeleteLifecyclePolicy.DeleteLifecyclePolicy
instance Amazonka.Data.Query.ToQuery Amazonka.DLM.DeleteLifecyclePolicy.DeleteLifecyclePolicy


-- | Creates a policy to manage the lifecycle of the specified Amazon Web
--   Services resources. You can create up to 100 lifecycle policies.
module Amazonka.DLM.CreateLifecyclePolicy

-- | <i>See:</i> <a>newCreateLifecyclePolicy</a> smart constructor.
data CreateLifecyclePolicy
CreateLifecyclePolicy' :: Maybe (HashMap Text Text) -> Text -> Text -> SettablePolicyStateValues -> PolicyDetails -> CreateLifecyclePolicy

-- | The tags to apply to the lifecycle policy during creation.
[$sel:tags:CreateLifecyclePolicy'] :: CreateLifecyclePolicy -> Maybe (HashMap Text Text)

-- | The Amazon Resource Name (ARN) of the IAM role used to run the
--   operations specified by the lifecycle policy.
[$sel:executionRoleArn:CreateLifecyclePolicy'] :: CreateLifecyclePolicy -> Text

-- | A description of the lifecycle policy. The characters ^[0-9A-Za-z
--   _-]+$ are supported.
[$sel:description:CreateLifecyclePolicy'] :: CreateLifecyclePolicy -> Text

-- | The desired activation state of the lifecycle policy after creation.
[$sel:state:CreateLifecyclePolicy'] :: CreateLifecyclePolicy -> SettablePolicyStateValues

-- | The configuration details of the lifecycle policy.
[$sel:policyDetails:CreateLifecyclePolicy'] :: CreateLifecyclePolicy -> PolicyDetails

-- | Create a value of <a>CreateLifecyclePolicy</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:CreateLifecyclePolicy'</a>,
--   <a>createLifecyclePolicy_tags</a> - The tags to apply to the lifecycle
--   policy during creation.
--   
--   <a>$sel:executionRoleArn:CreateLifecyclePolicy'</a>,
--   <a>createLifecyclePolicy_executionRoleArn</a> - The Amazon Resource
--   Name (ARN) of the IAM role used to run the operations specified by the
--   lifecycle policy.
--   
--   <a>$sel:description:CreateLifecyclePolicy'</a>,
--   <a>createLifecyclePolicy_description</a> - A description of the
--   lifecycle policy. The characters ^[0-9A-Za-z _-]+$ are supported.
--   
--   <a>$sel:state:CreateLifecyclePolicy'</a>,
--   <a>createLifecyclePolicy_state</a> - The desired activation state of
--   the lifecycle policy after creation.
--   
--   <a>$sel:policyDetails:CreateLifecyclePolicy'</a>,
--   <a>createLifecyclePolicy_policyDetails</a> - The configuration details
--   of the lifecycle policy.
newCreateLifecyclePolicy :: Text -> Text -> SettablePolicyStateValues -> PolicyDetails -> CreateLifecyclePolicy

-- | The tags to apply to the lifecycle policy during creation.
createLifecyclePolicy_tags :: Lens' CreateLifecyclePolicy (Maybe (HashMap Text Text))

-- | The Amazon Resource Name (ARN) of the IAM role used to run the
--   operations specified by the lifecycle policy.
createLifecyclePolicy_executionRoleArn :: Lens' CreateLifecyclePolicy Text

-- | A description of the lifecycle policy. The characters ^[0-9A-Za-z
--   _-]+$ are supported.
createLifecyclePolicy_description :: Lens' CreateLifecyclePolicy Text

-- | The desired activation state of the lifecycle policy after creation.
createLifecyclePolicy_state :: Lens' CreateLifecyclePolicy SettablePolicyStateValues

-- | The configuration details of the lifecycle policy.
createLifecyclePolicy_policyDetails :: Lens' CreateLifecyclePolicy PolicyDetails

-- | <i>See:</i> <a>newCreateLifecyclePolicyResponse</a> smart constructor.
data CreateLifecyclePolicyResponse
CreateLifecyclePolicyResponse' :: Maybe Text -> Int -> CreateLifecyclePolicyResponse

-- | The identifier of the lifecycle policy.
[$sel:policyId:CreateLifecyclePolicyResponse'] :: CreateLifecyclePolicyResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateLifecyclePolicyResponse'] :: CreateLifecyclePolicyResponse -> Int

-- | Create a value of <a>CreateLifecyclePolicyResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policyId:CreateLifecyclePolicyResponse'</a>,
--   <a>createLifecyclePolicyResponse_policyId</a> - The identifier of the
--   lifecycle policy.
--   
--   <a>$sel:httpStatus:CreateLifecyclePolicyResponse'</a>,
--   <a>createLifecyclePolicyResponse_httpStatus</a> - The response's http
--   status code.
newCreateLifecyclePolicyResponse :: Int -> CreateLifecyclePolicyResponse

-- | The identifier of the lifecycle policy.
createLifecyclePolicyResponse_policyId :: Lens' CreateLifecyclePolicyResponse (Maybe Text)

-- | The response's http status code.
createLifecyclePolicyResponse_httpStatus :: Lens' CreateLifecyclePolicyResponse Int
instance GHC.Generics.Generic Amazonka.DLM.CreateLifecyclePolicy.CreateLifecyclePolicy
instance GHC.Show.Show Amazonka.DLM.CreateLifecyclePolicy.CreateLifecyclePolicy
instance GHC.Read.Read Amazonka.DLM.CreateLifecyclePolicy.CreateLifecyclePolicy
instance GHC.Classes.Eq Amazonka.DLM.CreateLifecyclePolicy.CreateLifecyclePolicy
instance GHC.Generics.Generic Amazonka.DLM.CreateLifecyclePolicy.CreateLifecyclePolicyResponse
instance GHC.Show.Show Amazonka.DLM.CreateLifecyclePolicy.CreateLifecyclePolicyResponse
instance GHC.Read.Read Amazonka.DLM.CreateLifecyclePolicy.CreateLifecyclePolicyResponse
instance GHC.Classes.Eq Amazonka.DLM.CreateLifecyclePolicy.CreateLifecyclePolicyResponse
instance Amazonka.Types.AWSRequest Amazonka.DLM.CreateLifecyclePolicy.CreateLifecyclePolicy
instance Control.DeepSeq.NFData Amazonka.DLM.CreateLifecyclePolicy.CreateLifecyclePolicyResponse
instance Data.Hashable.Class.Hashable Amazonka.DLM.CreateLifecyclePolicy.CreateLifecyclePolicy
instance Control.DeepSeq.NFData Amazonka.DLM.CreateLifecyclePolicy.CreateLifecyclePolicy
instance Amazonka.Data.Headers.ToHeaders Amazonka.DLM.CreateLifecyclePolicy.CreateLifecyclePolicy
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DLM.CreateLifecyclePolicy.CreateLifecyclePolicy
instance Amazonka.Data.Path.ToPath Amazonka.DLM.CreateLifecyclePolicy.CreateLifecyclePolicy
instance Amazonka.Data.Query.ToQuery Amazonka.DLM.CreateLifecyclePolicy.CreateLifecyclePolicy


-- | Removes the specified tags from the specified resource.
module Amazonka.DLM.UntagResource

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> NonEmpty Text -> UntagResource

-- | The Amazon Resource Name (ARN) of the resource.
[$sel:resourceArn:UntagResource'] :: UntagResource -> Text

-- | The tag keys.
[$sel:tagKeys:UntagResource'] :: UntagResource -> NonEmpty Text

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The Amazon Resource Name (ARN) of
--   the resource.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   tag keys.
newUntagResource :: Text -> NonEmpty Text -> UntagResource

-- | The Amazon Resource Name (ARN) of the resource.
untagResource_resourceArn :: Lens' UntagResource Text

-- | The tag keys.
untagResource_tagKeys :: Lens' UntagResource (NonEmpty Text)

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:UntagResourceResponse'] :: UntagResourceResponse -> Int

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int
instance GHC.Generics.Generic Amazonka.DLM.UntagResource.UntagResource
instance GHC.Show.Show Amazonka.DLM.UntagResource.UntagResource
instance GHC.Read.Read Amazonka.DLM.UntagResource.UntagResource
instance GHC.Classes.Eq Amazonka.DLM.UntagResource.UntagResource
instance GHC.Generics.Generic Amazonka.DLM.UntagResource.UntagResourceResponse
instance GHC.Show.Show Amazonka.DLM.UntagResource.UntagResourceResponse
instance GHC.Read.Read Amazonka.DLM.UntagResource.UntagResourceResponse
instance GHC.Classes.Eq Amazonka.DLM.UntagResource.UntagResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.DLM.UntagResource.UntagResource
instance Control.DeepSeq.NFData Amazonka.DLM.UntagResource.UntagResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.DLM.UntagResource.UntagResource
instance Control.DeepSeq.NFData Amazonka.DLM.UntagResource.UntagResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.DLM.UntagResource.UntagResource
instance Amazonka.Data.Path.ToPath Amazonka.DLM.UntagResource.UntagResource
instance Amazonka.Data.Query.ToQuery Amazonka.DLM.UntagResource.UntagResource


-- | Updates the specified lifecycle policy.
module Amazonka.DLM.UpdateLifecyclePolicy

-- | <i>See:</i> <a>newUpdateLifecyclePolicy</a> smart constructor.
data UpdateLifecyclePolicy
UpdateLifecyclePolicy' :: Maybe SettablePolicyStateValues -> Maybe PolicyDetails -> Maybe Text -> Maybe Text -> Text -> UpdateLifecyclePolicy

-- | The desired activation state of the lifecycle policy after creation.
[$sel:state:UpdateLifecyclePolicy'] :: UpdateLifecyclePolicy -> Maybe SettablePolicyStateValues

-- | The configuration of the lifecycle policy. You cannot update the
--   policy type or the resource type.
[$sel:policyDetails:UpdateLifecyclePolicy'] :: UpdateLifecyclePolicy -> Maybe PolicyDetails

-- | The Amazon Resource Name (ARN) of the IAM role used to run the
--   operations specified by the lifecycle policy.
[$sel:executionRoleArn:UpdateLifecyclePolicy'] :: UpdateLifecyclePolicy -> Maybe Text

-- | A description of the lifecycle policy.
[$sel:description:UpdateLifecyclePolicy'] :: UpdateLifecyclePolicy -> Maybe Text

-- | The identifier of the lifecycle policy.
[$sel:policyId:UpdateLifecyclePolicy'] :: UpdateLifecyclePolicy -> Text

-- | Create a value of <a>UpdateLifecyclePolicy</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:UpdateLifecyclePolicy'</a>,
--   <a>updateLifecyclePolicy_state</a> - The desired activation state of
--   the lifecycle policy after creation.
--   
--   <a>$sel:policyDetails:UpdateLifecyclePolicy'</a>,
--   <a>updateLifecyclePolicy_policyDetails</a> - The configuration of the
--   lifecycle policy. You cannot update the policy type or the resource
--   type.
--   
--   <a>$sel:executionRoleArn:UpdateLifecyclePolicy'</a>,
--   <a>updateLifecyclePolicy_executionRoleArn</a> - The Amazon Resource
--   Name (ARN) of the IAM role used to run the operations specified by the
--   lifecycle policy.
--   
--   <a>$sel:description:UpdateLifecyclePolicy'</a>,
--   <a>updateLifecyclePolicy_description</a> - A description of the
--   lifecycle policy.
--   
--   <a>$sel:policyId:UpdateLifecyclePolicy'</a>,
--   <a>updateLifecyclePolicy_policyId</a> - The identifier of the
--   lifecycle policy.
newUpdateLifecyclePolicy :: Text -> UpdateLifecyclePolicy

-- | The desired activation state of the lifecycle policy after creation.
updateLifecyclePolicy_state :: Lens' UpdateLifecyclePolicy (Maybe SettablePolicyStateValues)

-- | The configuration of the lifecycle policy. You cannot update the
--   policy type or the resource type.
updateLifecyclePolicy_policyDetails :: Lens' UpdateLifecyclePolicy (Maybe PolicyDetails)

-- | The Amazon Resource Name (ARN) of the IAM role used to run the
--   operations specified by the lifecycle policy.
updateLifecyclePolicy_executionRoleArn :: Lens' UpdateLifecyclePolicy (Maybe Text)

-- | A description of the lifecycle policy.
updateLifecyclePolicy_description :: Lens' UpdateLifecyclePolicy (Maybe Text)

-- | The identifier of the lifecycle policy.
updateLifecyclePolicy_policyId :: Lens' UpdateLifecyclePolicy Text

-- | <i>See:</i> <a>newUpdateLifecyclePolicyResponse</a> smart constructor.
data UpdateLifecyclePolicyResponse
UpdateLifecyclePolicyResponse' :: Int -> UpdateLifecyclePolicyResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateLifecyclePolicyResponse'] :: UpdateLifecyclePolicyResponse -> Int

-- | Create a value of <a>UpdateLifecyclePolicyResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateLifecyclePolicyResponse'</a>,
--   <a>updateLifecyclePolicyResponse_httpStatus</a> - The response's http
--   status code.
newUpdateLifecyclePolicyResponse :: Int -> UpdateLifecyclePolicyResponse

-- | The response's http status code.
updateLifecyclePolicyResponse_httpStatus :: Lens' UpdateLifecyclePolicyResponse Int
instance GHC.Generics.Generic Amazonka.DLM.UpdateLifecyclePolicy.UpdateLifecyclePolicy
instance GHC.Show.Show Amazonka.DLM.UpdateLifecyclePolicy.UpdateLifecyclePolicy
instance GHC.Read.Read Amazonka.DLM.UpdateLifecyclePolicy.UpdateLifecyclePolicy
instance GHC.Classes.Eq Amazonka.DLM.UpdateLifecyclePolicy.UpdateLifecyclePolicy
instance GHC.Generics.Generic Amazonka.DLM.UpdateLifecyclePolicy.UpdateLifecyclePolicyResponse
instance GHC.Show.Show Amazonka.DLM.UpdateLifecyclePolicy.UpdateLifecyclePolicyResponse
instance GHC.Read.Read Amazonka.DLM.UpdateLifecyclePolicy.UpdateLifecyclePolicyResponse
instance GHC.Classes.Eq Amazonka.DLM.UpdateLifecyclePolicy.UpdateLifecyclePolicyResponse
instance Amazonka.Types.AWSRequest Amazonka.DLM.UpdateLifecyclePolicy.UpdateLifecyclePolicy
instance Control.DeepSeq.NFData Amazonka.DLM.UpdateLifecyclePolicy.UpdateLifecyclePolicyResponse
instance Data.Hashable.Class.Hashable Amazonka.DLM.UpdateLifecyclePolicy.UpdateLifecyclePolicy
instance Control.DeepSeq.NFData Amazonka.DLM.UpdateLifecyclePolicy.UpdateLifecyclePolicy
instance Amazonka.Data.Headers.ToHeaders Amazonka.DLM.UpdateLifecyclePolicy.UpdateLifecyclePolicy
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DLM.UpdateLifecyclePolicy.UpdateLifecyclePolicy
instance Amazonka.Data.Path.ToPath Amazonka.DLM.UpdateLifecyclePolicy.UpdateLifecyclePolicy
instance Amazonka.Data.Query.ToQuery Amazonka.DLM.UpdateLifecyclePolicy.UpdateLifecyclePolicy


module Amazonka.DLM.Lens

-- | The identifier of the lifecycle policy.
deleteLifecyclePolicy_policyId :: Lens' DeleteLifecyclePolicy Text

-- | The response's http status code.
deleteLifecyclePolicyResponse_httpStatus :: Lens' DeleteLifecyclePolicyResponse Int

-- | The desired activation state of the lifecycle policy after creation.
updateLifecyclePolicy_state :: Lens' UpdateLifecyclePolicy (Maybe SettablePolicyStateValues)

-- | The configuration of the lifecycle policy. You cannot update the
--   policy type or the resource type.
updateLifecyclePolicy_policyDetails :: Lens' UpdateLifecyclePolicy (Maybe PolicyDetails)

-- | The Amazon Resource Name (ARN) of the IAM role used to run the
--   operations specified by the lifecycle policy.
updateLifecyclePolicy_executionRoleArn :: Lens' UpdateLifecyclePolicy (Maybe Text)

-- | A description of the lifecycle policy.
updateLifecyclePolicy_description :: Lens' UpdateLifecyclePolicy (Maybe Text)

-- | The identifier of the lifecycle policy.
updateLifecyclePolicy_policyId :: Lens' UpdateLifecyclePolicy Text

-- | The response's http status code.
updateLifecyclePolicyResponse_httpStatus :: Lens' UpdateLifecyclePolicyResponse Int

-- | The Amazon Resource Name (ARN) of the resource.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | Information about the tags.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int

-- | The tags to apply to the lifecycle policy during creation.
createLifecyclePolicy_tags :: Lens' CreateLifecyclePolicy (Maybe (HashMap Text Text))

-- | The Amazon Resource Name (ARN) of the IAM role used to run the
--   operations specified by the lifecycle policy.
createLifecyclePolicy_executionRoleArn :: Lens' CreateLifecyclePolicy Text

-- | A description of the lifecycle policy. The characters ^[0-9A-Za-z
--   _-]+$ are supported.
createLifecyclePolicy_description :: Lens' CreateLifecyclePolicy Text

-- | The desired activation state of the lifecycle policy after creation.
createLifecyclePolicy_state :: Lens' CreateLifecyclePolicy SettablePolicyStateValues

-- | The configuration details of the lifecycle policy.
createLifecyclePolicy_policyDetails :: Lens' CreateLifecyclePolicy PolicyDetails

-- | The identifier of the lifecycle policy.
createLifecyclePolicyResponse_policyId :: Lens' CreateLifecyclePolicyResponse (Maybe Text)

-- | The response's http status code.
createLifecyclePolicyResponse_httpStatus :: Lens' CreateLifecyclePolicyResponse Int

-- | The identifier of the lifecycle policy.
getLifecyclePolicy_policyId :: Lens' GetLifecyclePolicy Text

-- | Detailed information about the lifecycle policy.
getLifecyclePolicyResponse_policy :: Lens' GetLifecyclePolicyResponse (Maybe LifecyclePolicy)

-- | The response's http status code.
getLifecyclePolicyResponse_httpStatus :: Lens' GetLifecyclePolicyResponse Int

-- | The Amazon Resource Name (ARN) of the resource.
tagResource_resourceArn :: Lens' TagResource Text

-- | One or more tags.
tagResource_tags :: Lens' TagResource (HashMap Text Text)

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int

-- | The Amazon Resource Name (ARN) of the resource.
untagResource_resourceArn :: Lens' UntagResource Text

-- | The tag keys.
untagResource_tagKeys :: Lens' UntagResource (NonEmpty Text)

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int

-- | The activation state.
getLifecyclePolicies_state :: Lens' GetLifecyclePolicies (Maybe GettablePolicyStateValues)

-- | The target tag for a policy.
--   
--   Tags are strings in the format <tt>key=value</tt>.
getLifecyclePolicies_targetTags :: Lens' GetLifecyclePolicies (Maybe (NonEmpty Text))

-- | The tags to add to objects created by the policy.
--   
--   Tags are strings in the format <tt>key=value</tt>.
--   
--   These user-defined tags are added in addition to the Amazon Web
--   Services-added lifecycle tags.
getLifecyclePolicies_tagsToAdd :: Lens' GetLifecyclePolicies (Maybe [Text])

-- | The identifiers of the data lifecycle policies.
getLifecyclePolicies_policyIds :: Lens' GetLifecyclePolicies (Maybe [Text])

-- | The resource type.
getLifecyclePolicies_resourceTypes :: Lens' GetLifecyclePolicies (Maybe (NonEmpty ResourceTypeValues))

-- | Summary information about the lifecycle policies.
getLifecyclePoliciesResponse_policies :: Lens' GetLifecyclePoliciesResponse (Maybe [LifecyclePolicySummary])

-- | The response's http status code.
getLifecyclePoliciesResponse_httpStatus :: Lens' GetLifecyclePoliciesResponse Int

-- | A descriptive name for the action.
action_name :: Lens' Action Text

-- | The rule for copying shared snapshots across Regions.
action_crossRegionCopy :: Lens' Action [CrossRegionCopyAction]

-- | Specifies the destination for snapshots created by the policy. To
--   create snapshots in the same Region as the source resource, specify
--   <tt>CLOUD</tt>. To create snapshots on the same Outpost as the source
--   resource, specify <tt>OUTPOST_LOCAL</tt>. If you omit this parameter,
--   <tt>CLOUD</tt> is used by default.
--   
--   If the policy targets resources in an Amazon Web Services Region, then
--   you must create snapshots in the same Region as the source resource.
--   
--   If the policy targets resources on an Outpost, then you can create
--   snapshots on the same Outpost as the source resource, or in the Region
--   of that Outpost.
createRule_location :: Lens' CreateRule (Maybe LocationValues)

-- | The interval between snapshots. The supported values are 1, 2, 3, 4,
--   6, 8, 12, and 24.
createRule_interval :: Lens' CreateRule (Maybe Natural)

-- | The schedule, as a Cron expression. The schedule interval must be
--   between 1 hour and 1 year. For more information, see <a>Cron
--   expressions</a> in the <i>Amazon CloudWatch User Guide</i>.
createRule_cronExpression :: Lens' CreateRule (Maybe Text)

-- | The time, in UTC, to start the operation. The supported format is
--   hh:mm.
--   
--   The operation occurs within a one-hour window following the specified
--   time. If you do not specify a time, Amazon DLM selects a time within
--   the next 24 hours.
createRule_times :: Lens' CreateRule (Maybe [Text])

-- | The interval unit.
createRule_intervalUnit :: Lens' CreateRule (Maybe IntervalUnitValues)

-- | Undocumented member.
crossRegionCopyAction_retainRule :: Lens' CrossRegionCopyAction (Maybe CrossRegionCopyRetainRule)

-- | The target Region.
crossRegionCopyAction_target :: Lens' CrossRegionCopyAction Text

-- | The encryption settings for the copied snapshot.
crossRegionCopyAction_encryptionConfiguration :: Lens' CrossRegionCopyAction EncryptionConfiguration

-- | The period after which to deprecate the cross-Region AMI copies. The
--   period must be less than or equal to the cross-Region AMI copy
--   retention period, and it can't be greater than 10 years. This is
--   equivalent to 120 months, 520 weeks, or 3650 days.
crossRegionCopyDeprecateRule_interval :: Lens' CrossRegionCopyDeprecateRule (Maybe Natural)

-- | The unit of time in which to measure the <b>Interval</b>.
crossRegionCopyDeprecateRule_intervalUnit :: Lens' CrossRegionCopyDeprecateRule (Maybe RetentionIntervalUnitValues)

-- | The amount of time to retain each snapshot. The maximum is 100 years.
--   This is equivalent to 1200 months, 5200 weeks, or 36500 days.
crossRegionCopyRetainRule_interval :: Lens' CrossRegionCopyRetainRule (Maybe Natural)

-- | The unit of time for time-based retention.
crossRegionCopyRetainRule_intervalUnit :: Lens' CrossRegionCopyRetainRule (Maybe RetentionIntervalUnitValues)

-- | The AMI deprecation rule for cross-Region AMI copies created by the
--   rule.
crossRegionCopyRule_deprecateRule :: Lens' CrossRegionCopyRule (Maybe CrossRegionCopyDeprecateRule)

-- | Avoid using this parameter when creating new policies. Instead, use
--   <b>Target</b> to specify a target Region or a target Outpost for
--   snapshot copies.
--   
--   For policies created before the <b>Target</b> parameter was
--   introduced, this parameter indicates the target Region for snapshot
--   copies.
crossRegionCopyRule_targetRegion :: Lens' CrossRegionCopyRule (Maybe Text)

-- | Indicates whether to copy all user-defined tags from the source
--   snapshot to the cross-Region snapshot copy.
crossRegionCopyRule_copyTags :: Lens' CrossRegionCopyRule (Maybe Bool)

-- | The Amazon Resource Name (ARN) of the KMS key to use for EBS
--   encryption. If this parameter is not specified, the default KMS key
--   for the account is used.
crossRegionCopyRule_cmkArn :: Lens' CrossRegionCopyRule (Maybe Text)

-- | The retention rule that indicates how long snapshot copies are to be
--   retained in the destination Region.
crossRegionCopyRule_retainRule :: Lens' CrossRegionCopyRule (Maybe CrossRegionCopyRetainRule)

-- | The target Region or the Amazon Resource Name (ARN) of the target
--   Outpost for the snapshot copies.
--   
--   Use this parameter instead of <b>TargetRegion</b>. Do not specify
--   both.
crossRegionCopyRule_target :: Lens' CrossRegionCopyRule (Maybe Text)

-- | To encrypt a copy of an unencrypted snapshot if encryption by default
--   is not enabled, enable encryption using this parameter. Copies of
--   encrypted snapshots are encrypted, even if this parameter is false or
--   if encryption by default is not enabled.
crossRegionCopyRule_encrypted :: Lens' CrossRegionCopyRule Bool

-- | If the schedule has a count-based retention rule, this parameter
--   specifies the number of oldest AMIs to deprecate. The count must be
--   less than or equal to the schedule's retention count, and it can't be
--   greater than 1000.
deprecateRule_count :: Lens' DeprecateRule (Maybe Natural)

-- | If the schedule has an age-based retention rule, this parameter
--   specifies the period after which to deprecate AMIs created by the
--   schedule. The period must be less than or equal to the schedule's
--   retention period, and it can't be greater than 10 years. This is
--   equivalent to 120 months, 520 weeks, or 3650 days.
deprecateRule_interval :: Lens' DeprecateRule (Maybe Natural)

-- | The unit of time in which to measure the <b>Interval</b>.
deprecateRule_intervalUnit :: Lens' DeprecateRule (Maybe RetentionIntervalUnitValues)

-- | The Amazon Resource Name (ARN) of the KMS key to use for EBS
--   encryption. If this parameter is not specified, the default KMS key
--   for the account is used.
encryptionConfiguration_cmkArn :: Lens' EncryptionConfiguration (Maybe Text)

-- | To encrypt a copy of an unencrypted snapshot when encryption by
--   default is not enabled, enable encryption using this parameter. Copies
--   of encrypted snapshots are encrypted, even if this parameter is false
--   or when encryption by default is not enabled.
encryptionConfiguration_encrypted :: Lens' EncryptionConfiguration Bool

-- | The type of event. Currently, only snapshot sharing events are
--   supported.
eventParameters_eventType :: Lens' EventParameters EventTypeValues

-- | The IDs of the Amazon Web Services accounts that can trigger policy by
--   sharing snapshots with your account. The policy only runs if one of
--   the specified Amazon Web Services accounts shares a snapshot with your
--   account.
eventParameters_snapshotOwner :: Lens' EventParameters [Text]

-- | The snapshot description that can trigger the policy. The description
--   pattern is specified using a regular expression. The policy runs only
--   if a snapshot with a description that matches the specified pattern is
--   shared with your account.
--   
--   For example, specifying <tt>^.*Created for policy:
--   policy-1234567890abcdef0.*$</tt> configures the policy to run only if
--   snapshots created by policy <tt>policy-1234567890abcdef0</tt> are
--   shared with your account.
eventParameters_descriptionRegex :: Lens' EventParameters Text

-- | Information about the event.
eventSource_parameters :: Lens' EventSource (Maybe EventParameters)

-- | The source of the event. Currently only managed CloudWatch Events
--   rules are supported.
eventSource_type :: Lens' EventSource EventSourceValues

-- | The number of snapshots to be enabled with fast snapshot restore.
fastRestoreRule_count :: Lens' FastRestoreRule (Maybe Natural)

-- | The amount of time to enable fast snapshot restore. The maximum is 100
--   years. This is equivalent to 1200 months, 5200 weeks, or 36500 days.
fastRestoreRule_interval :: Lens' FastRestoreRule (Maybe Natural)

-- | The unit of time for enabling fast snapshot restore.
fastRestoreRule_intervalUnit :: Lens' FastRestoreRule (Maybe RetentionIntervalUnitValues)

-- | The Availability Zones in which to enable fast snapshot restore.
fastRestoreRule_availabilityZones :: Lens' FastRestoreRule (NonEmpty Text)

-- | The activation state of the lifecycle policy.
lifecyclePolicy_state :: Lens' LifecyclePolicy (Maybe GettablePolicyStateValues)

-- | The configuration of the lifecycle policy
lifecyclePolicy_policyDetails :: Lens' LifecyclePolicy (Maybe PolicyDetails)

-- | The identifier of the lifecycle policy.
lifecyclePolicy_policyId :: Lens' LifecyclePolicy (Maybe Text)

-- | The Amazon Resource Name (ARN) of the IAM role used to run the
--   operations specified by the lifecycle policy.
lifecyclePolicy_executionRoleArn :: Lens' LifecyclePolicy (Maybe Text)

-- | The local date and time when the lifecycle policy was created.
lifecyclePolicy_dateCreated :: Lens' LifecyclePolicy (Maybe UTCTime)

-- | The description of the status.
lifecyclePolicy_statusMessage :: Lens' LifecyclePolicy (Maybe Text)

-- | The local date and time when the lifecycle policy was last modified.
lifecyclePolicy_dateModified :: Lens' LifecyclePolicy (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the policy.
lifecyclePolicy_policyArn :: Lens' LifecyclePolicy (Maybe Text)

-- | The description of the lifecycle policy.
lifecyclePolicy_description :: Lens' LifecyclePolicy (Maybe Text)

-- | The tags.
lifecyclePolicy_tags :: Lens' LifecyclePolicy (Maybe (HashMap Text Text))

-- | The activation state of the lifecycle policy.
lifecyclePolicySummary_state :: Lens' LifecyclePolicySummary (Maybe GettablePolicyStateValues)

-- | The identifier of the lifecycle policy.
lifecyclePolicySummary_policyId :: Lens' LifecyclePolicySummary (Maybe Text)

-- | The type of policy. <tt>EBS_SNAPSHOT_MANAGEMENT</tt> indicates that
--   the policy manages the lifecycle of Amazon EBS snapshots.
--   <tt>IMAGE_MANAGEMENT</tt> indicates that the policy manages the
--   lifecycle of EBS-backed AMIs.
lifecyclePolicySummary_policyType :: Lens' LifecyclePolicySummary (Maybe PolicyTypeValues)

-- | The description of the lifecycle policy.
lifecyclePolicySummary_description :: Lens' LifecyclePolicySummary (Maybe Text)

-- | The tags.
lifecyclePolicySummary_tags :: Lens' LifecyclePolicySummary (Maybe (HashMap Text Text))

-- | Applies to AMI lifecycle policies only. Indicates whether targeted
--   instances are rebooted when the lifecycle policy runs. <tt>true</tt>
--   indicates that targeted instances are not rebooted when the policy
--   runs. <tt>false</tt> indicates that target instances are rebooted when
--   the policy runs. The default is <tt>true</tt> (instances are not
--   rebooted).
parameters_noReboot :: Lens' Parameters (Maybe Bool)

-- | <ul>
--   <li><i>EBS Snapshot Management – Instance policies only</i> Indicates
--   whether to exclude the root volume from snapshots created using
--   <a>CreateSnapshots</a>. The default is false.</li>
--   </ul>
parameters_excludeBootVolume :: Lens' Parameters (Maybe Bool)

-- | The actions to be performed when the event-based policy is triggered.
--   You can specify only one action per policy.
--   
--   This parameter is required for event-based policies only. If you are
--   creating a snapshot or AMI policy, omit this parameter.
policyDetails_actions :: Lens' PolicyDetails (Maybe (NonEmpty Action))

-- | The single tag that identifies targeted resources for this policy.
--   
--   This parameter is required for snapshot and AMI policies only. If you
--   are creating an event-based policy, omit this parameter.
policyDetails_targetTags :: Lens' PolicyDetails (Maybe (NonEmpty Tag))

-- | The valid target resource types and actions a policy can manage.
--   Specify <tt>EBS_SNAPSHOT_MANAGEMENT</tt> to create a lifecycle policy
--   that manages the lifecycle of Amazon EBS snapshots. Specify
--   <tt>IMAGE_MANAGEMENT</tt> to create a lifecycle policy that manages
--   the lifecycle of EBS-backed AMIs. Specify <tt>EVENT_BASED_POLICY </tt>
--   to create an event-based policy that performs specific actions when a
--   defined event occurs in your Amazon Web Services account.
--   
--   The default is <tt>EBS_SNAPSHOT_MANAGEMENT</tt>.
policyDetails_policyType :: Lens' PolicyDetails (Maybe PolicyTypeValues)

-- | The location of the resources to backup. If the source resources are
--   located in an Amazon Web Services Region, specify <tt>CLOUD</tt>. If
--   the source resources are located on an Outpost in your account,
--   specify <tt>OUTPOST</tt>.
--   
--   If you specify <tt>OUTPOST</tt>, Amazon Data Lifecycle Manager backs
--   up all resources of the specified type with matching target tags
--   across all of the Outposts in your account.
policyDetails_resourceLocations :: Lens' PolicyDetails (Maybe (NonEmpty ResourceLocationValues))

-- | A set of optional parameters for snapshot and AMI lifecycle policies.
--   
--   This parameter is required for snapshot and AMI policies only. If you
--   are creating an event-based policy, omit this parameter.
policyDetails_parameters :: Lens' PolicyDetails (Maybe Parameters)

-- | The schedules of policy-defined actions for snapshot and AMI lifecycle
--   policies. A policy can have up to four schedules—one mandatory
--   schedule and up to three optional schedules.
--   
--   This parameter is required for snapshot and AMI policies only. If you
--   are creating an event-based policy, omit this parameter.
policyDetails_schedules :: Lens' PolicyDetails (Maybe (NonEmpty Schedule))

-- | The event that triggers the event-based policy.
--   
--   This parameter is required for event-based policies only. If you are
--   creating a snapshot or AMI policy, omit this parameter.
policyDetails_eventSource :: Lens' PolicyDetails (Maybe EventSource)

-- | The target resource type for snapshot and AMI lifecycle policies. Use
--   <tt>VOLUME </tt>to create snapshots of individual volumes or use
--   <tt>INSTANCE</tt> to create multi-volume snapshots from the volumes
--   for an instance.
--   
--   This parameter is required for snapshot and AMI policies only. If you
--   are creating an event-based policy, omit this parameter.
policyDetails_resourceTypes :: Lens' PolicyDetails (Maybe (NonEmpty ResourceTypeValues))

-- | The number of snapshots to retain for each volume, up to a maximum of
--   1000.
retainRule_count :: Lens' RetainRule (Maybe Natural)

-- | The amount of time to retain each snapshot. The maximum is 100 years.
--   This is equivalent to 1200 months, 5200 weeks, or 36500 days.
retainRule_interval :: Lens' RetainRule (Maybe Natural)

-- | The unit of time for time-based retention.
retainRule_intervalUnit :: Lens' RetainRule (Maybe RetentionIntervalUnitValues)

-- | A collection of key/value pairs with values determined dynamically
--   when the policy is executed. Keys may be any valid Amazon EC2 tag key.
--   Values must be in one of the two following formats:
--   <tt>$(instance-id)</tt> or <tt>$(timestamp)</tt>. Variable tags are
--   only valid for EBS Snapshot Management – Instance policies.
schedule_variableTags :: Lens' Schedule (Maybe [Tag])

-- | The creation rule.
schedule_createRule :: Lens' Schedule (Maybe CreateRule)

-- | The AMI deprecation rule for the schedule.
schedule_deprecateRule :: Lens' Schedule (Maybe DeprecateRule)

-- | Copy all user-defined tags on a source volume to snapshots of the
--   volume created by this policy.
schedule_copyTags :: Lens' Schedule (Maybe Bool)

-- | The name of the schedule.
schedule_name :: Lens' Schedule (Maybe Text)

-- | The rule for sharing snapshots with other Amazon Web Services
--   accounts.
schedule_shareRules :: Lens' Schedule (Maybe [ShareRule])

-- | The tags to apply to policy-created resources. These user-defined tags
--   are in addition to the Amazon Web Services-added lifecycle tags.
schedule_tagsToAdd :: Lens' Schedule (Maybe [Tag])

-- | The retention rule.
schedule_retainRule :: Lens' Schedule (Maybe RetainRule)

-- | The rule for cross-Region snapshot copies.
--   
--   You can only specify cross-Region copy rules for policies that create
--   snapshots in a Region. If the policy creates snapshots on an Outpost,
--   then you cannot copy the snapshots to a Region or to an Outpost. If
--   the policy creates snapshots in a Region, then snapshots can be copied
--   to up to three Regions or Outposts.
schedule_crossRegionCopyRules :: Lens' Schedule (Maybe [CrossRegionCopyRule])

-- | The rule for enabling fast snapshot restore.
schedule_fastRestoreRule :: Lens' Schedule (Maybe FastRestoreRule)

-- | The unit of time for the automatic unsharing interval.
shareRule_unshareIntervalUnit :: Lens' ShareRule (Maybe RetentionIntervalUnitValues)

-- | The period after which snapshots that are shared with other Amazon Web
--   Services accounts are automatically unshared.
shareRule_unshareInterval :: Lens' ShareRule (Maybe Natural)

-- | The IDs of the Amazon Web Services accounts with which to share the
--   snapshots.
shareRule_targetAccounts :: Lens' ShareRule (NonEmpty Text)

-- | The tag key.
tag_key :: Lens' Tag Text

-- | The tag value.
tag_value :: Lens' Tag Text


module Amazonka.DLM.Waiters


-- | Derived from API version <tt>2018-01-12</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   Amazon Data Lifecycle Manager
--   
--   With Amazon Data Lifecycle Manager, you can manage the lifecycle of
--   your Amazon Web Services resources. You create lifecycle policies,
--   which are used to automate operations on the specified resources.
--   
--   Amazon DLM supports Amazon EBS volumes and snapshots. For information
--   about using Amazon DLM with Amazon EBS, see <a>Automating the Amazon
--   EBS Snapshot Lifecycle</a> in the <i>Amazon EC2 User Guide</i>.
module Amazonka.DLM

-- | API version <tt>2018-01-12</tt> of the Amazon Data Lifecycle Manager
--   SDK configuration.
defaultService :: Service

-- | Bad request. The request is missing required parameters or has invalid
--   parameters.
_InvalidRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The service failed in an unexpected way.
_InternalServerException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A requested resource was not found.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request failed because a limit was exceeded.
_LimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newDeleteLifecyclePolicy</a> smart constructor.
data DeleteLifecyclePolicy
DeleteLifecyclePolicy' :: Text -> DeleteLifecyclePolicy

-- | Create a value of <a>DeleteLifecyclePolicy</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policyId:DeleteLifecyclePolicy'</a>,
--   <a>deleteLifecyclePolicy_policyId</a> - The identifier of the
--   lifecycle policy.
newDeleteLifecyclePolicy :: Text -> DeleteLifecyclePolicy

-- | <i>See:</i> <a>newDeleteLifecyclePolicyResponse</a> smart constructor.
data DeleteLifecyclePolicyResponse
DeleteLifecyclePolicyResponse' :: Int -> DeleteLifecyclePolicyResponse

-- | Create a value of <a>DeleteLifecyclePolicyResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteLifecyclePolicyResponse'</a>,
--   <a>deleteLifecyclePolicyResponse_httpStatus</a> - The response's http
--   status code.
newDeleteLifecyclePolicyResponse :: Int -> DeleteLifecyclePolicyResponse

-- | <i>See:</i> <a>newUpdateLifecyclePolicy</a> smart constructor.
data UpdateLifecyclePolicy
UpdateLifecyclePolicy' :: Maybe SettablePolicyStateValues -> Maybe PolicyDetails -> Maybe Text -> Maybe Text -> Text -> UpdateLifecyclePolicy

-- | Create a value of <a>UpdateLifecyclePolicy</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:UpdateLifecyclePolicy'</a>,
--   <a>updateLifecyclePolicy_state</a> - The desired activation state of
--   the lifecycle policy after creation.
--   
--   <a>$sel:policyDetails:UpdateLifecyclePolicy'</a>,
--   <a>updateLifecyclePolicy_policyDetails</a> - The configuration of the
--   lifecycle policy. You cannot update the policy type or the resource
--   type.
--   
--   <a>$sel:executionRoleArn:UpdateLifecyclePolicy'</a>,
--   <a>updateLifecyclePolicy_executionRoleArn</a> - The Amazon Resource
--   Name (ARN) of the IAM role used to run the operations specified by the
--   lifecycle policy.
--   
--   <a>$sel:description:UpdateLifecyclePolicy'</a>,
--   <a>updateLifecyclePolicy_description</a> - A description of the
--   lifecycle policy.
--   
--   <a>$sel:policyId:UpdateLifecyclePolicy'</a>,
--   <a>updateLifecyclePolicy_policyId</a> - The identifier of the
--   lifecycle policy.
newUpdateLifecyclePolicy :: Text -> UpdateLifecyclePolicy

-- | <i>See:</i> <a>newUpdateLifecyclePolicyResponse</a> smart constructor.
data UpdateLifecyclePolicyResponse
UpdateLifecyclePolicyResponse' :: Int -> UpdateLifecyclePolicyResponse

-- | Create a value of <a>UpdateLifecyclePolicyResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateLifecyclePolicyResponse'</a>,
--   <a>updateLifecyclePolicyResponse_httpStatus</a> - The response's http
--   status code.
newUpdateLifecyclePolicyResponse :: Int -> UpdateLifecyclePolicyResponse

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The Amazon Resource Name
--   (ARN) of the resource.
newListTagsForResource :: Text -> ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe (HashMap Text Text) -> Int -> ListTagsForResourceResponse

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - Information about the tags.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | <i>See:</i> <a>newCreateLifecyclePolicy</a> smart constructor.
data CreateLifecyclePolicy
CreateLifecyclePolicy' :: Maybe (HashMap Text Text) -> Text -> Text -> SettablePolicyStateValues -> PolicyDetails -> CreateLifecyclePolicy

-- | Create a value of <a>CreateLifecyclePolicy</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:CreateLifecyclePolicy'</a>,
--   <a>createLifecyclePolicy_tags</a> - The tags to apply to the lifecycle
--   policy during creation.
--   
--   <a>$sel:executionRoleArn:CreateLifecyclePolicy'</a>,
--   <a>createLifecyclePolicy_executionRoleArn</a> - The Amazon Resource
--   Name (ARN) of the IAM role used to run the operations specified by the
--   lifecycle policy.
--   
--   <a>$sel:description:CreateLifecyclePolicy'</a>,
--   <a>createLifecyclePolicy_description</a> - A description of the
--   lifecycle policy. The characters ^[0-9A-Za-z _-]+$ are supported.
--   
--   <a>$sel:state:CreateLifecyclePolicy'</a>,
--   <a>createLifecyclePolicy_state</a> - The desired activation state of
--   the lifecycle policy after creation.
--   
--   <a>$sel:policyDetails:CreateLifecyclePolicy'</a>,
--   <a>createLifecyclePolicy_policyDetails</a> - The configuration details
--   of the lifecycle policy.
newCreateLifecyclePolicy :: Text -> Text -> SettablePolicyStateValues -> PolicyDetails -> CreateLifecyclePolicy

-- | <i>See:</i> <a>newCreateLifecyclePolicyResponse</a> smart constructor.
data CreateLifecyclePolicyResponse
CreateLifecyclePolicyResponse' :: Maybe Text -> Int -> CreateLifecyclePolicyResponse

-- | Create a value of <a>CreateLifecyclePolicyResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policyId:CreateLifecyclePolicyResponse'</a>,
--   <a>createLifecyclePolicyResponse_policyId</a> - The identifier of the
--   lifecycle policy.
--   
--   <a>$sel:httpStatus:CreateLifecyclePolicyResponse'</a>,
--   <a>createLifecyclePolicyResponse_httpStatus</a> - The response's http
--   status code.
newCreateLifecyclePolicyResponse :: Int -> CreateLifecyclePolicyResponse

-- | <i>See:</i> <a>newGetLifecyclePolicy</a> smart constructor.
data GetLifecyclePolicy
GetLifecyclePolicy' :: Text -> GetLifecyclePolicy

-- | Create a value of <a>GetLifecyclePolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policyId:GetLifecyclePolicy'</a>,
--   <a>getLifecyclePolicy_policyId</a> - The identifier of the lifecycle
--   policy.
newGetLifecyclePolicy :: Text -> GetLifecyclePolicy

-- | <i>See:</i> <a>newGetLifecyclePolicyResponse</a> smart constructor.
data GetLifecyclePolicyResponse
GetLifecyclePolicyResponse' :: Maybe LifecyclePolicy -> Int -> GetLifecyclePolicyResponse

-- | Create a value of <a>GetLifecyclePolicyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policy:GetLifecyclePolicyResponse'</a>,
--   <a>getLifecyclePolicyResponse_policy</a> - Detailed information about
--   the lifecycle policy.
--   
--   <a>$sel:httpStatus:GetLifecyclePolicyResponse'</a>,
--   <a>getLifecyclePolicyResponse_httpStatus</a> - The response's http
--   status code.
newGetLifecyclePolicyResponse :: Int -> GetLifecyclePolicyResponse

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> HashMap Text Text -> TagResource

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The Amazon Resource Name (ARN) of the resource.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - One or more
--   tags.
newTagResource :: Text -> TagResource

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> NonEmpty Text -> UntagResource

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The Amazon Resource Name (ARN) of
--   the resource.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   tag keys.
newUntagResource :: Text -> NonEmpty Text -> UntagResource

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | <i>See:</i> <a>newGetLifecyclePolicies</a> smart constructor.
data GetLifecyclePolicies
GetLifecyclePolicies' :: Maybe GettablePolicyStateValues -> Maybe (NonEmpty Text) -> Maybe [Text] -> Maybe [Text] -> Maybe (NonEmpty ResourceTypeValues) -> GetLifecyclePolicies

-- | Create a value of <a>GetLifecyclePolicies</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:GetLifecyclePolicies'</a>,
--   <a>getLifecyclePolicies_state</a> - The activation state.
--   
--   <a>$sel:targetTags:GetLifecyclePolicies'</a>,
--   <a>getLifecyclePolicies_targetTags</a> - The target tag for a policy.
--   
--   Tags are strings in the format <tt>key=value</tt>.
--   
--   <a>$sel:tagsToAdd:GetLifecyclePolicies'</a>,
--   <a>getLifecyclePolicies_tagsToAdd</a> - The tags to add to objects
--   created by the policy.
--   
--   Tags are strings in the format <tt>key=value</tt>.
--   
--   These user-defined tags are added in addition to the Amazon Web
--   Services-added lifecycle tags.
--   
--   <a>$sel:policyIds:GetLifecyclePolicies'</a>,
--   <a>getLifecyclePolicies_policyIds</a> - The identifiers of the data
--   lifecycle policies.
--   
--   <a>$sel:resourceTypes:GetLifecyclePolicies'</a>,
--   <a>getLifecyclePolicies_resourceTypes</a> - The resource type.
newGetLifecyclePolicies :: GetLifecyclePolicies

-- | <i>See:</i> <a>newGetLifecyclePoliciesResponse</a> smart constructor.
data GetLifecyclePoliciesResponse
GetLifecyclePoliciesResponse' :: Maybe [LifecyclePolicySummary] -> Int -> GetLifecyclePoliciesResponse

-- | Create a value of <a>GetLifecyclePoliciesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policies:GetLifecyclePoliciesResponse'</a>,
--   <a>getLifecyclePoliciesResponse_policies</a> - Summary information
--   about the lifecycle policies.
--   
--   <a>$sel:httpStatus:GetLifecyclePoliciesResponse'</a>,
--   <a>getLifecyclePoliciesResponse_httpStatus</a> - The response's http
--   status code.
newGetLifecyclePoliciesResponse :: Int -> GetLifecyclePoliciesResponse
newtype EventSourceValues
EventSourceValues' :: Text -> EventSourceValues
[fromEventSourceValues] :: EventSourceValues -> Text
pattern EventSourceValues_MANAGED_CWE :: EventSourceValues
newtype EventTypeValues
EventTypeValues' :: Text -> EventTypeValues
[fromEventTypeValues] :: EventTypeValues -> Text
pattern EventTypeValues_ShareSnapshot :: EventTypeValues
newtype GettablePolicyStateValues
GettablePolicyStateValues' :: Text -> GettablePolicyStateValues
[fromGettablePolicyStateValues] :: GettablePolicyStateValues -> Text
pattern GettablePolicyStateValues_DISABLED :: GettablePolicyStateValues
pattern GettablePolicyStateValues_ENABLED :: GettablePolicyStateValues
pattern GettablePolicyStateValues_ERROR :: GettablePolicyStateValues
newtype IntervalUnitValues
IntervalUnitValues' :: Text -> IntervalUnitValues
[fromIntervalUnitValues] :: IntervalUnitValues -> Text
pattern IntervalUnitValues_HOURS :: IntervalUnitValues
newtype LocationValues
LocationValues' :: Text -> LocationValues
[fromLocationValues] :: LocationValues -> Text
pattern LocationValues_CLOUD :: LocationValues
pattern LocationValues_OUTPOST_LOCAL :: LocationValues
newtype PolicyTypeValues
PolicyTypeValues' :: Text -> PolicyTypeValues
[fromPolicyTypeValues] :: PolicyTypeValues -> Text
pattern PolicyTypeValues_EBS_SNAPSHOT_MANAGEMENT :: PolicyTypeValues
pattern PolicyTypeValues_EVENT_BASED_POLICY :: PolicyTypeValues
pattern PolicyTypeValues_IMAGE_MANAGEMENT :: PolicyTypeValues
newtype ResourceLocationValues
ResourceLocationValues' :: Text -> ResourceLocationValues
[fromResourceLocationValues] :: ResourceLocationValues -> Text
pattern ResourceLocationValues_CLOUD :: ResourceLocationValues
pattern ResourceLocationValues_OUTPOST :: ResourceLocationValues
newtype ResourceTypeValues
ResourceTypeValues' :: Text -> ResourceTypeValues
[fromResourceTypeValues] :: ResourceTypeValues -> Text
pattern ResourceTypeValues_INSTANCE :: ResourceTypeValues
pattern ResourceTypeValues_VOLUME :: ResourceTypeValues
newtype RetentionIntervalUnitValues
RetentionIntervalUnitValues' :: Text -> RetentionIntervalUnitValues
[fromRetentionIntervalUnitValues] :: RetentionIntervalUnitValues -> Text
pattern RetentionIntervalUnitValues_DAYS :: RetentionIntervalUnitValues
pattern RetentionIntervalUnitValues_MONTHS :: RetentionIntervalUnitValues
pattern RetentionIntervalUnitValues_WEEKS :: RetentionIntervalUnitValues
pattern RetentionIntervalUnitValues_YEARS :: RetentionIntervalUnitValues
newtype SettablePolicyStateValues
SettablePolicyStateValues' :: Text -> SettablePolicyStateValues
[fromSettablePolicyStateValues] :: SettablePolicyStateValues -> Text
pattern SettablePolicyStateValues_DISABLED :: SettablePolicyStateValues
pattern SettablePolicyStateValues_ENABLED :: SettablePolicyStateValues

-- | Specifies an action for an event-based policy.
--   
--   <i>See:</i> <a>newAction</a> smart constructor.
data Action
Action' :: Text -> [CrossRegionCopyAction] -> Action

-- | Create a value of <a>Action</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:Action'</a>, <a>action_name</a> - A descriptive name for
--   the action.
--   
--   <a>$sel:crossRegionCopy:Action'</a>, <a>action_crossRegionCopy</a> -
--   The rule for copying shared snapshots across Regions.
newAction :: Text -> Action

-- | Specifies when to create snapshots of EBS volumes.
--   
--   You must specify either a Cron expression or an interval, interval
--   unit, and start time. You cannot specify both.
--   
--   <i>See:</i> <a>newCreateRule</a> smart constructor.
data CreateRule
CreateRule' :: Maybe LocationValues -> Maybe Natural -> Maybe Text -> Maybe [Text] -> Maybe IntervalUnitValues -> CreateRule

-- | Create a value of <a>CreateRule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:location:CreateRule'</a>, <a>createRule_location</a> -
--   Specifies the destination for snapshots created by the policy. To
--   create snapshots in the same Region as the source resource, specify
--   <tt>CLOUD</tt>. To create snapshots on the same Outpost as the source
--   resource, specify <tt>OUTPOST_LOCAL</tt>. If you omit this parameter,
--   <tt>CLOUD</tt> is used by default.
--   
--   If the policy targets resources in an Amazon Web Services Region, then
--   you must create snapshots in the same Region as the source resource.
--   
--   If the policy targets resources on an Outpost, then you can create
--   snapshots on the same Outpost as the source resource, or in the Region
--   of that Outpost.
--   
--   <a>$sel:interval:CreateRule'</a>, <a>createRule_interval</a> - The
--   interval between snapshots. The supported values are 1, 2, 3, 4, 6, 8,
--   12, and 24.
--   
--   <a>$sel:cronExpression:CreateRule'</a>,
--   <a>createRule_cronExpression</a> - The schedule, as a Cron expression.
--   The schedule interval must be between 1 hour and 1 year. For more
--   information, see <a>Cron expressions</a> in the <i>Amazon CloudWatch
--   User Guide</i>.
--   
--   <a>$sel:times:CreateRule'</a>, <a>createRule_times</a> - The time, in
--   UTC, to start the operation. The supported format is hh:mm.
--   
--   The operation occurs within a one-hour window following the specified
--   time. If you do not specify a time, Amazon DLM selects a time within
--   the next 24 hours.
--   
--   <a>$sel:intervalUnit:CreateRule'</a>, <a>createRule_intervalUnit</a> -
--   The interval unit.
newCreateRule :: CreateRule

-- | Specifies a rule for copying shared snapshots across Regions.
--   
--   <i>See:</i> <a>newCrossRegionCopyAction</a> smart constructor.
data CrossRegionCopyAction
CrossRegionCopyAction' :: Maybe CrossRegionCopyRetainRule -> Text -> EncryptionConfiguration -> CrossRegionCopyAction

-- | Create a value of <a>CrossRegionCopyAction</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:retainRule:CrossRegionCopyAction'</a>,
--   <a>crossRegionCopyAction_retainRule</a> - Undocumented member.
--   
--   <a>$sel:target:CrossRegionCopyAction'</a>,
--   <a>crossRegionCopyAction_target</a> - The target Region.
--   
--   <a>$sel:encryptionConfiguration:CrossRegionCopyAction'</a>,
--   <a>crossRegionCopyAction_encryptionConfiguration</a> - The encryption
--   settings for the copied snapshot.
newCrossRegionCopyAction :: Text -> EncryptionConfiguration -> CrossRegionCopyAction

-- | Specifies an AMI deprecation rule for cross-Region AMI copies created
--   by a cross-Region copy rule.
--   
--   <i>See:</i> <a>newCrossRegionCopyDeprecateRule</a> smart constructor.
data CrossRegionCopyDeprecateRule
CrossRegionCopyDeprecateRule' :: Maybe Natural -> Maybe RetentionIntervalUnitValues -> CrossRegionCopyDeprecateRule

-- | Create a value of <a>CrossRegionCopyDeprecateRule</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:interval:CrossRegionCopyDeprecateRule'</a>,
--   <a>crossRegionCopyDeprecateRule_interval</a> - The period after which
--   to deprecate the cross-Region AMI copies. The period must be less than
--   or equal to the cross-Region AMI copy retention period, and it can't
--   be greater than 10 years. This is equivalent to 120 months, 520 weeks,
--   or 3650 days.
--   
--   <a>$sel:intervalUnit:CrossRegionCopyDeprecateRule'</a>,
--   <a>crossRegionCopyDeprecateRule_intervalUnit</a> - The unit of time in
--   which to measure the <b>Interval</b>.
newCrossRegionCopyDeprecateRule :: CrossRegionCopyDeprecateRule

-- | Specifies the retention rule for cross-Region snapshot copies.
--   
--   <i>See:</i> <a>newCrossRegionCopyRetainRule</a> smart constructor.
data CrossRegionCopyRetainRule
CrossRegionCopyRetainRule' :: Maybe Natural -> Maybe RetentionIntervalUnitValues -> CrossRegionCopyRetainRule

-- | Create a value of <a>CrossRegionCopyRetainRule</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:interval:CrossRegionCopyRetainRule'</a>,
--   <a>crossRegionCopyRetainRule_interval</a> - The amount of time to
--   retain each snapshot. The maximum is 100 years. This is equivalent to
--   1200 months, 5200 weeks, or 36500 days.
--   
--   <a>$sel:intervalUnit:CrossRegionCopyRetainRule'</a>,
--   <a>crossRegionCopyRetainRule_intervalUnit</a> - The unit of time for
--   time-based retention.
newCrossRegionCopyRetainRule :: CrossRegionCopyRetainRule

-- | Specifies a rule for cross-Region snapshot copies.
--   
--   <i>See:</i> <a>newCrossRegionCopyRule</a> smart constructor.
data CrossRegionCopyRule
CrossRegionCopyRule' :: Maybe CrossRegionCopyDeprecateRule -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe CrossRegionCopyRetainRule -> Maybe Text -> Bool -> CrossRegionCopyRule

-- | Create a value of <a>CrossRegionCopyRule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deprecateRule:CrossRegionCopyRule'</a>,
--   <a>crossRegionCopyRule_deprecateRule</a> - The AMI deprecation rule
--   for cross-Region AMI copies created by the rule.
--   
--   <a>$sel:targetRegion:CrossRegionCopyRule'</a>,
--   <a>crossRegionCopyRule_targetRegion</a> - Avoid using this parameter
--   when creating new policies. Instead, use <b>Target</b> to specify a
--   target Region or a target Outpost for snapshot copies.
--   
--   For policies created before the <b>Target</b> parameter was
--   introduced, this parameter indicates the target Region for snapshot
--   copies.
--   
--   <a>$sel:copyTags:CrossRegionCopyRule'</a>,
--   <a>crossRegionCopyRule_copyTags</a> - Indicates whether to copy all
--   user-defined tags from the source snapshot to the cross-Region
--   snapshot copy.
--   
--   <a>$sel:cmkArn:CrossRegionCopyRule'</a>,
--   <a>crossRegionCopyRule_cmkArn</a> - The Amazon Resource Name (ARN) of
--   the KMS key to use for EBS encryption. If this parameter is not
--   specified, the default KMS key for the account is used.
--   
--   <a>$sel:retainRule:CrossRegionCopyRule'</a>,
--   <a>crossRegionCopyRule_retainRule</a> - The retention rule that
--   indicates how long snapshot copies are to be retained in the
--   destination Region.
--   
--   <a>$sel:target:CrossRegionCopyRule'</a>,
--   <a>crossRegionCopyRule_target</a> - The target Region or the Amazon
--   Resource Name (ARN) of the target Outpost for the snapshot copies.
--   
--   Use this parameter instead of <b>TargetRegion</b>. Do not specify
--   both.
--   
--   <a>$sel:encrypted:CrossRegionCopyRule'</a>,
--   <a>crossRegionCopyRule_encrypted</a> - To encrypt a copy of an
--   unencrypted snapshot if encryption by default is not enabled, enable
--   encryption using this parameter. Copies of encrypted snapshots are
--   encrypted, even if this parameter is false or if encryption by default
--   is not enabled.
newCrossRegionCopyRule :: Bool -> CrossRegionCopyRule

-- | Specifies an AMI deprecation rule for a schedule.
--   
--   <i>See:</i> <a>newDeprecateRule</a> smart constructor.
data DeprecateRule
DeprecateRule' :: Maybe Natural -> Maybe Natural -> Maybe RetentionIntervalUnitValues -> DeprecateRule

-- | Create a value of <a>DeprecateRule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:count:DeprecateRule'</a>, <a>deprecateRule_count</a> - If the
--   schedule has a count-based retention rule, this parameter specifies
--   the number of oldest AMIs to deprecate. The count must be less than or
--   equal to the schedule's retention count, and it can't be greater than
--   1000.
--   
--   <a>$sel:interval:DeprecateRule'</a>, <a>deprecateRule_interval</a> -
--   If the schedule has an age-based retention rule, this parameter
--   specifies the period after which to deprecate AMIs created by the
--   schedule. The period must be less than or equal to the schedule's
--   retention period, and it can't be greater than 10 years. This is
--   equivalent to 120 months, 520 weeks, or 3650 days.
--   
--   <a>$sel:intervalUnit:DeprecateRule'</a>,
--   <a>deprecateRule_intervalUnit</a> - The unit of time in which to
--   measure the <b>Interval</b>.
newDeprecateRule :: DeprecateRule

-- | Specifies the encryption settings for shared snapshots that are copied
--   across Regions.
--   
--   <i>See:</i> <a>newEncryptionConfiguration</a> smart constructor.
data EncryptionConfiguration
EncryptionConfiguration' :: Maybe Text -> Bool -> EncryptionConfiguration

-- | Create a value of <a>EncryptionConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cmkArn:EncryptionConfiguration'</a>,
--   <a>encryptionConfiguration_cmkArn</a> - The Amazon Resource Name (ARN)
--   of the KMS key to use for EBS encryption. If this parameter is not
--   specified, the default KMS key for the account is used.
--   
--   <a>$sel:encrypted:EncryptionConfiguration'</a>,
--   <a>encryptionConfiguration_encrypted</a> - To encrypt a copy of an
--   unencrypted snapshot when encryption by default is not enabled, enable
--   encryption using this parameter. Copies of encrypted snapshots are
--   encrypted, even if this parameter is false or when encryption by
--   default is not enabled.
newEncryptionConfiguration :: Bool -> EncryptionConfiguration

-- | Specifies an event that triggers an event-based policy.
--   
--   <i>See:</i> <a>newEventParameters</a> smart constructor.
data EventParameters
EventParameters' :: EventTypeValues -> [Text] -> Text -> EventParameters

-- | Create a value of <a>EventParameters</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventType:EventParameters'</a>,
--   <a>eventParameters_eventType</a> - The type of event. Currently, only
--   snapshot sharing events are supported.
--   
--   <a>$sel:snapshotOwner:EventParameters'</a>,
--   <a>eventParameters_snapshotOwner</a> - The IDs of the Amazon Web
--   Services accounts that can trigger policy by sharing snapshots with
--   your account. The policy only runs if one of the specified Amazon Web
--   Services accounts shares a snapshot with your account.
--   
--   <a>$sel:descriptionRegex:EventParameters'</a>,
--   <a>eventParameters_descriptionRegex</a> - The snapshot description
--   that can trigger the policy. The description pattern is specified
--   using a regular expression. The policy runs only if a snapshot with a
--   description that matches the specified pattern is shared with your
--   account.
--   
--   For example, specifying <tt>^.*Created for policy:
--   policy-1234567890abcdef0.*$</tt> configures the policy to run only if
--   snapshots created by policy <tt>policy-1234567890abcdef0</tt> are
--   shared with your account.
newEventParameters :: EventTypeValues -> Text -> EventParameters

-- | Specifies an event that triggers an event-based policy.
--   
--   <i>See:</i> <a>newEventSource</a> smart constructor.
data EventSource
EventSource' :: Maybe EventParameters -> EventSourceValues -> EventSource

-- | Create a value of <a>EventSource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameters:EventSource'</a>, <a>eventSource_parameters</a> -
--   Information about the event.
--   
--   <a>$sel:type':EventSource'</a>, <a>eventSource_type</a> - The source
--   of the event. Currently only managed CloudWatch Events rules are
--   supported.
newEventSource :: EventSourceValues -> EventSource

-- | Specifies a rule for enabling fast snapshot restore. You can enable
--   fast snapshot restore based on either a count or a time interval.
--   
--   <i>See:</i> <a>newFastRestoreRule</a> smart constructor.
data FastRestoreRule
FastRestoreRule' :: Maybe Natural -> Maybe Natural -> Maybe RetentionIntervalUnitValues -> NonEmpty Text -> FastRestoreRule

-- | Create a value of <a>FastRestoreRule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:count:FastRestoreRule'</a>, <a>fastRestoreRule_count</a> - The
--   number of snapshots to be enabled with fast snapshot restore.
--   
--   <a>$sel:interval:FastRestoreRule'</a>, <a>fastRestoreRule_interval</a>
--   - The amount of time to enable fast snapshot restore. The maximum is
--   100 years. This is equivalent to 1200 months, 5200 weeks, or 36500
--   days.
--   
--   <a>$sel:intervalUnit:FastRestoreRule'</a>,
--   <a>fastRestoreRule_intervalUnit</a> - The unit of time for enabling
--   fast snapshot restore.
--   
--   <a>$sel:availabilityZones:FastRestoreRule'</a>,
--   <a>fastRestoreRule_availabilityZones</a> - The Availability Zones in
--   which to enable fast snapshot restore.
newFastRestoreRule :: NonEmpty Text -> FastRestoreRule

-- | Detailed information about a lifecycle policy.
--   
--   <i>See:</i> <a>newLifecyclePolicy</a> smart constructor.
data LifecyclePolicy
LifecyclePolicy' :: Maybe GettablePolicyStateValues -> Maybe PolicyDetails -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> LifecyclePolicy

-- | Create a value of <a>LifecyclePolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:LifecyclePolicy'</a>, <a>lifecyclePolicy_state</a> - The
--   activation state of the lifecycle policy.
--   
--   <a>$sel:policyDetails:LifecyclePolicy'</a>,
--   <a>lifecyclePolicy_policyDetails</a> - The configuration of the
--   lifecycle policy
--   
--   <a>$sel:policyId:LifecyclePolicy'</a>, <a>lifecyclePolicy_policyId</a>
--   - The identifier of the lifecycle policy.
--   
--   <a>$sel:executionRoleArn:LifecyclePolicy'</a>,
--   <a>lifecyclePolicy_executionRoleArn</a> - The Amazon Resource Name
--   (ARN) of the IAM role used to run the operations specified by the
--   lifecycle policy.
--   
--   <a>$sel:dateCreated:LifecyclePolicy'</a>,
--   <a>lifecyclePolicy_dateCreated</a> - The local date and time when the
--   lifecycle policy was created.
--   
--   <a>$sel:statusMessage:LifecyclePolicy'</a>,
--   <a>lifecyclePolicy_statusMessage</a> - The description of the status.
--   
--   <a>$sel:dateModified:LifecyclePolicy'</a>,
--   <a>lifecyclePolicy_dateModified</a> - The local date and time when the
--   lifecycle policy was last modified.
--   
--   <a>$sel:policyArn:LifecyclePolicy'</a>,
--   <a>lifecyclePolicy_policyArn</a> - The Amazon Resource Name (ARN) of
--   the policy.
--   
--   <a>$sel:description:LifecyclePolicy'</a>,
--   <a>lifecyclePolicy_description</a> - The description of the lifecycle
--   policy.
--   
--   <a>$sel:tags:LifecyclePolicy'</a>, <a>lifecyclePolicy_tags</a> - The
--   tags.
newLifecyclePolicy :: LifecyclePolicy

-- | Summary information about a lifecycle policy.
--   
--   <i>See:</i> <a>newLifecyclePolicySummary</a> smart constructor.
data LifecyclePolicySummary
LifecyclePolicySummary' :: Maybe GettablePolicyStateValues -> Maybe Text -> Maybe PolicyTypeValues -> Maybe Text -> Maybe (HashMap Text Text) -> LifecyclePolicySummary

-- | Create a value of <a>LifecyclePolicySummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:LifecyclePolicySummary'</a>,
--   <a>lifecyclePolicySummary_state</a> - The activation state of the
--   lifecycle policy.
--   
--   <a>$sel:policyId:LifecyclePolicySummary'</a>,
--   <a>lifecyclePolicySummary_policyId</a> - The identifier of the
--   lifecycle policy.
--   
--   <a>$sel:policyType:LifecyclePolicySummary'</a>,
--   <a>lifecyclePolicySummary_policyType</a> - The type of policy.
--   <tt>EBS_SNAPSHOT_MANAGEMENT</tt> indicates that the policy manages the
--   lifecycle of Amazon EBS snapshots. <tt>IMAGE_MANAGEMENT</tt> indicates
--   that the policy manages the lifecycle of EBS-backed AMIs.
--   
--   <a>$sel:description:LifecyclePolicySummary'</a>,
--   <a>lifecyclePolicySummary_description</a> - The description of the
--   lifecycle policy.
--   
--   <a>$sel:tags:LifecyclePolicySummary'</a>,
--   <a>lifecyclePolicySummary_tags</a> - The tags.
newLifecyclePolicySummary :: LifecyclePolicySummary

-- | Specifies optional parameters to add to a policy. The set of valid
--   parameters depends on the combination of policy type and resource
--   type.
--   
--   <i>See:</i> <a>newParameters</a> smart constructor.
data Parameters
Parameters' :: Maybe Bool -> Maybe Bool -> Parameters

-- | Create a value of <a>Parameters</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:noReboot:Parameters'</a>, <a>parameters_noReboot</a> - Applies
--   to AMI lifecycle policies only. Indicates whether targeted instances
--   are rebooted when the lifecycle policy runs. <tt>true</tt> indicates
--   that targeted instances are not rebooted when the policy runs.
--   <tt>false</tt> indicates that target instances are rebooted when the
--   policy runs. The default is <tt>true</tt> (instances are not
--   rebooted).
--   
--   <a>$sel:excludeBootVolume:Parameters'</a>,
--   <a>parameters_excludeBootVolume</a> - [EBS Snapshot Management –
--   Instance policies only] Indicates whether to exclude the root volume
--   from snapshots created using <a>CreateSnapshots</a>. The default is
--   false.
newParameters :: Parameters

-- | Specifies the configuration of a lifecycle policy.
--   
--   <i>See:</i> <a>newPolicyDetails</a> smart constructor.
data PolicyDetails
PolicyDetails' :: Maybe (NonEmpty Action) -> Maybe (NonEmpty Tag) -> Maybe PolicyTypeValues -> Maybe (NonEmpty ResourceLocationValues) -> Maybe Parameters -> Maybe (NonEmpty Schedule) -> Maybe EventSource -> Maybe (NonEmpty ResourceTypeValues) -> PolicyDetails

-- | Create a value of <a>PolicyDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:actions:PolicyDetails'</a>, <a>policyDetails_actions</a> - The
--   actions to be performed when the event-based policy is triggered. You
--   can specify only one action per policy.
--   
--   This parameter is required for event-based policies only. If you are
--   creating a snapshot or AMI policy, omit this parameter.
--   
--   <a>$sel:targetTags:PolicyDetails'</a>, <a>policyDetails_targetTags</a>
--   - The single tag that identifies targeted resources for this policy.
--   
--   This parameter is required for snapshot and AMI policies only. If you
--   are creating an event-based policy, omit this parameter.
--   
--   <a>$sel:policyType:PolicyDetails'</a>, <a>policyDetails_policyType</a>
--   - The valid target resource types and actions a policy can manage.
--   Specify <tt>EBS_SNAPSHOT_MANAGEMENT</tt> to create a lifecycle policy
--   that manages the lifecycle of Amazon EBS snapshots. Specify
--   <tt>IMAGE_MANAGEMENT</tt> to create a lifecycle policy that manages
--   the lifecycle of EBS-backed AMIs. Specify <tt>EVENT_BASED_POLICY </tt>
--   to create an event-based policy that performs specific actions when a
--   defined event occurs in your Amazon Web Services account.
--   
--   The default is <tt>EBS_SNAPSHOT_MANAGEMENT</tt>.
--   
--   <a>$sel:resourceLocations:PolicyDetails'</a>,
--   <a>policyDetails_resourceLocations</a> - The location of the resources
--   to backup. If the source resources are located in an Amazon Web
--   Services Region, specify <tt>CLOUD</tt>. If the source resources are
--   located on an Outpost in your account, specify <tt>OUTPOST</tt>.
--   
--   If you specify <tt>OUTPOST</tt>, Amazon Data Lifecycle Manager backs
--   up all resources of the specified type with matching target tags
--   across all of the Outposts in your account.
--   
--   <a>$sel:parameters:PolicyDetails'</a>, <a>policyDetails_parameters</a>
--   - A set of optional parameters for snapshot and AMI lifecycle
--   policies.
--   
--   This parameter is required for snapshot and AMI policies only. If you
--   are creating an event-based policy, omit this parameter.
--   
--   <a>$sel:schedules:PolicyDetails'</a>, <a>policyDetails_schedules</a> -
--   The schedules of policy-defined actions for snapshot and AMI lifecycle
--   policies. A policy can have up to four schedules—one mandatory
--   schedule and up to three optional schedules.
--   
--   This parameter is required for snapshot and AMI policies only. If you
--   are creating an event-based policy, omit this parameter.
--   
--   <a>$sel:eventSource:PolicyDetails'</a>,
--   <a>policyDetails_eventSource</a> - The event that triggers the
--   event-based policy.
--   
--   This parameter is required for event-based policies only. If you are
--   creating a snapshot or AMI policy, omit this parameter.
--   
--   <a>$sel:resourceTypes:PolicyDetails'</a>,
--   <a>policyDetails_resourceTypes</a> - The target resource type for
--   snapshot and AMI lifecycle policies. Use <tt>VOLUME </tt>to create
--   snapshots of individual volumes or use <tt>INSTANCE</tt> to create
--   multi-volume snapshots from the volumes for an instance.
--   
--   This parameter is required for snapshot and AMI policies only. If you
--   are creating an event-based policy, omit this parameter.
newPolicyDetails :: PolicyDetails

-- | Specifies the retention rule for a lifecycle policy. You can retain
--   snapshots based on either a count or a time interval.
--   
--   <i>See:</i> <a>newRetainRule</a> smart constructor.
data RetainRule
RetainRule' :: Maybe Natural -> Maybe Natural -> Maybe RetentionIntervalUnitValues -> RetainRule

-- | Create a value of <a>RetainRule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:count:RetainRule'</a>, <a>retainRule_count</a> - The number of
--   snapshots to retain for each volume, up to a maximum of 1000.
--   
--   <a>$sel:interval:RetainRule'</a>, <a>retainRule_interval</a> - The
--   amount of time to retain each snapshot. The maximum is 100 years. This
--   is equivalent to 1200 months, 5200 weeks, or 36500 days.
--   
--   <a>$sel:intervalUnit:RetainRule'</a>, <a>retainRule_intervalUnit</a> -
--   The unit of time for time-based retention.
newRetainRule :: RetainRule

-- | Specifies a backup schedule for a snapshot or AMI lifecycle policy.
--   
--   <i>See:</i> <a>newSchedule</a> smart constructor.
data Schedule
Schedule' :: Maybe [Tag] -> Maybe CreateRule -> Maybe DeprecateRule -> Maybe Bool -> Maybe Text -> Maybe [ShareRule] -> Maybe [Tag] -> Maybe RetainRule -> Maybe [CrossRegionCopyRule] -> Maybe FastRestoreRule -> Schedule

-- | Create a value of <a>Schedule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:variableTags:Schedule'</a>, <a>schedule_variableTags</a> - A
--   collection of key/value pairs with values determined dynamically when
--   the policy is executed. Keys may be any valid Amazon EC2 tag key.
--   Values must be in one of the two following formats:
--   <tt>$(instance-id)</tt> or <tt>$(timestamp)</tt>. Variable tags are
--   only valid for EBS Snapshot Management – Instance policies.
--   
--   <a>$sel:createRule:Schedule'</a>, <a>schedule_createRule</a> - The
--   creation rule.
--   
--   <a>$sel:deprecateRule:Schedule'</a>, <a>schedule_deprecateRule</a> -
--   The AMI deprecation rule for the schedule.
--   
--   <a>$sel:copyTags:Schedule'</a>, <a>schedule_copyTags</a> - Copy all
--   user-defined tags on a source volume to snapshots of the volume
--   created by this policy.
--   
--   <a>$sel:name:Schedule'</a>, <a>schedule_name</a> - The name of the
--   schedule.
--   
--   <a>$sel:shareRules:Schedule'</a>, <a>schedule_shareRules</a> - The
--   rule for sharing snapshots with other Amazon Web Services accounts.
--   
--   <a>$sel:tagsToAdd:Schedule'</a>, <a>schedule_tagsToAdd</a> - The tags
--   to apply to policy-created resources. These user-defined tags are in
--   addition to the Amazon Web Services-added lifecycle tags.
--   
--   <a>$sel:retainRule:Schedule'</a>, <a>schedule_retainRule</a> - The
--   retention rule.
--   
--   <a>$sel:crossRegionCopyRules:Schedule'</a>,
--   <a>schedule_crossRegionCopyRules</a> - The rule for cross-Region
--   snapshot copies.
--   
--   You can only specify cross-Region copy rules for policies that create
--   snapshots in a Region. If the policy creates snapshots on an Outpost,
--   then you cannot copy the snapshots to a Region or to an Outpost. If
--   the policy creates snapshots in a Region, then snapshots can be copied
--   to up to three Regions or Outposts.
--   
--   <a>$sel:fastRestoreRule:Schedule'</a>, <a>schedule_fastRestoreRule</a>
--   - The rule for enabling fast snapshot restore.
newSchedule :: Schedule

-- | Specifies a rule for sharing snapshots across Amazon Web Services
--   accounts.
--   
--   <i>See:</i> <a>newShareRule</a> smart constructor.
data ShareRule
ShareRule' :: Maybe RetentionIntervalUnitValues -> Maybe Natural -> NonEmpty Text -> ShareRule

-- | Create a value of <a>ShareRule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:unshareIntervalUnit:ShareRule'</a>,
--   <a>shareRule_unshareIntervalUnit</a> - The unit of time for the
--   automatic unsharing interval.
--   
--   <a>$sel:unshareInterval:ShareRule'</a>,
--   <a>shareRule_unshareInterval</a> - The period after which snapshots
--   that are shared with other Amazon Web Services accounts are
--   automatically unshared.
--   
--   <a>$sel:targetAccounts:ShareRule'</a>, <a>shareRule_targetAccounts</a>
--   - The IDs of the Amazon Web Services accounts with which to share the
--   snapshots.
newShareRule :: NonEmpty Text -> ShareRule

-- | Specifies a tag for a resource.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The tag key.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The tag value.
newTag :: Text -> Text -> Tag
