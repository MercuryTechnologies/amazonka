-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-elbv2ZSamazonka-elbv2
@version 2.0


module Network.AWS.ELBV2.Types.ActionTypeEnum
newtype ActionTypeEnum
ActionTypeEnum' :: Text -> ActionTypeEnum
[fromActionTypeEnum] :: ActionTypeEnum -> Text
pattern ActionTypeEnum_Authenticate_cognito :: ActionTypeEnum
pattern ActionTypeEnum_Authenticate_oidc :: ActionTypeEnum
pattern ActionTypeEnum_Fixed_response :: ActionTypeEnum
pattern ActionTypeEnum_Forward :: ActionTypeEnum
pattern ActionTypeEnum_Redirect :: ActionTypeEnum
instance Network.AWS.Data.XML.ToXML Network.AWS.ELBV2.Types.ActionTypeEnum.ActionTypeEnum
instance Network.AWS.Data.XML.FromXML Network.AWS.ELBV2.Types.ActionTypeEnum.ActionTypeEnum
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.ELBV2.Types.ActionTypeEnum.ActionTypeEnum
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ELBV2.Types.ActionTypeEnum.ActionTypeEnum
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.ELBV2.Types.ActionTypeEnum.ActionTypeEnum
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ELBV2.Types.ActionTypeEnum.ActionTypeEnum
instance Network.AWS.Data.Query.ToQuery Network.AWS.ELBV2.Types.ActionTypeEnum.ActionTypeEnum
instance Network.AWS.Data.Headers.ToHeader Network.AWS.ELBV2.Types.ActionTypeEnum.ActionTypeEnum
instance Network.AWS.Data.Log.ToLog Network.AWS.ELBV2.Types.ActionTypeEnum.ActionTypeEnum
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.ELBV2.Types.ActionTypeEnum.ActionTypeEnum
instance Network.AWS.Data.Text.ToText Network.AWS.ELBV2.Types.ActionTypeEnum.ActionTypeEnum
instance Network.AWS.Data.Text.FromText Network.AWS.ELBV2.Types.ActionTypeEnum.ActionTypeEnum
instance Control.DeepSeq.NFData Network.AWS.ELBV2.Types.ActionTypeEnum.ActionTypeEnum
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.Types.ActionTypeEnum.ActionTypeEnum
instance GHC.Generics.Generic Network.AWS.ELBV2.Types.ActionTypeEnum.ActionTypeEnum
instance GHC.Classes.Ord Network.AWS.ELBV2.Types.ActionTypeEnum.ActionTypeEnum
instance GHC.Classes.Eq Network.AWS.ELBV2.Types.ActionTypeEnum.ActionTypeEnum
instance GHC.Read.Read Network.AWS.ELBV2.Types.ActionTypeEnum.ActionTypeEnum
instance GHC.Show.Show Network.AWS.ELBV2.Types.ActionTypeEnum.ActionTypeEnum


module Network.AWS.ELBV2.Types.AuthenticateCognitoActionConditionalBehaviorEnum
newtype AuthenticateCognitoActionConditionalBehaviorEnum
AuthenticateCognitoActionConditionalBehaviorEnum' :: Text -> AuthenticateCognitoActionConditionalBehaviorEnum
[fromAuthenticateCognitoActionConditionalBehaviorEnum] :: AuthenticateCognitoActionConditionalBehaviorEnum -> Text
pattern AuthenticateCognitoActionConditionalBehaviorEnum_Allow :: AuthenticateCognitoActionConditionalBehaviorEnum
pattern AuthenticateCognitoActionConditionalBehaviorEnum_Authenticate :: AuthenticateCognitoActionConditionalBehaviorEnum
pattern AuthenticateCognitoActionConditionalBehaviorEnum_Deny :: AuthenticateCognitoActionConditionalBehaviorEnum
instance Network.AWS.Data.XML.ToXML Network.AWS.ELBV2.Types.AuthenticateCognitoActionConditionalBehaviorEnum.AuthenticateCognitoActionConditionalBehaviorEnum
instance Network.AWS.Data.XML.FromXML Network.AWS.ELBV2.Types.AuthenticateCognitoActionConditionalBehaviorEnum.AuthenticateCognitoActionConditionalBehaviorEnum
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.ELBV2.Types.AuthenticateCognitoActionConditionalBehaviorEnum.AuthenticateCognitoActionConditionalBehaviorEnum
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ELBV2.Types.AuthenticateCognitoActionConditionalBehaviorEnum.AuthenticateCognitoActionConditionalBehaviorEnum
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.ELBV2.Types.AuthenticateCognitoActionConditionalBehaviorEnum.AuthenticateCognitoActionConditionalBehaviorEnum
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ELBV2.Types.AuthenticateCognitoActionConditionalBehaviorEnum.AuthenticateCognitoActionConditionalBehaviorEnum
instance Network.AWS.Data.Query.ToQuery Network.AWS.ELBV2.Types.AuthenticateCognitoActionConditionalBehaviorEnum.AuthenticateCognitoActionConditionalBehaviorEnum
instance Network.AWS.Data.Headers.ToHeader Network.AWS.ELBV2.Types.AuthenticateCognitoActionConditionalBehaviorEnum.AuthenticateCognitoActionConditionalBehaviorEnum
instance Network.AWS.Data.Log.ToLog Network.AWS.ELBV2.Types.AuthenticateCognitoActionConditionalBehaviorEnum.AuthenticateCognitoActionConditionalBehaviorEnum
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.ELBV2.Types.AuthenticateCognitoActionConditionalBehaviorEnum.AuthenticateCognitoActionConditionalBehaviorEnum
instance Network.AWS.Data.Text.ToText Network.AWS.ELBV2.Types.AuthenticateCognitoActionConditionalBehaviorEnum.AuthenticateCognitoActionConditionalBehaviorEnum
instance Network.AWS.Data.Text.FromText Network.AWS.ELBV2.Types.AuthenticateCognitoActionConditionalBehaviorEnum.AuthenticateCognitoActionConditionalBehaviorEnum
instance Control.DeepSeq.NFData Network.AWS.ELBV2.Types.AuthenticateCognitoActionConditionalBehaviorEnum.AuthenticateCognitoActionConditionalBehaviorEnum
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.Types.AuthenticateCognitoActionConditionalBehaviorEnum.AuthenticateCognitoActionConditionalBehaviorEnum
instance GHC.Generics.Generic Network.AWS.ELBV2.Types.AuthenticateCognitoActionConditionalBehaviorEnum.AuthenticateCognitoActionConditionalBehaviorEnum
instance GHC.Classes.Ord Network.AWS.ELBV2.Types.AuthenticateCognitoActionConditionalBehaviorEnum.AuthenticateCognitoActionConditionalBehaviorEnum
instance GHC.Classes.Eq Network.AWS.ELBV2.Types.AuthenticateCognitoActionConditionalBehaviorEnum.AuthenticateCognitoActionConditionalBehaviorEnum
instance GHC.Read.Read Network.AWS.ELBV2.Types.AuthenticateCognitoActionConditionalBehaviorEnum.AuthenticateCognitoActionConditionalBehaviorEnum
instance GHC.Show.Show Network.AWS.ELBV2.Types.AuthenticateCognitoActionConditionalBehaviorEnum.AuthenticateCognitoActionConditionalBehaviorEnum


module Network.AWS.ELBV2.Types.AuthenticateCognitoActionConfig

-- | Request parameters to use when integrating with Amazon Cognito to
--   authenticate users.
--   
--   <i>See:</i> <a>newAuthenticateCognitoActionConfig</a> smart
--   constructor.
data AuthenticateCognitoActionConfig
AuthenticateCognitoActionConfig' :: Maybe (HashMap Text Text) -> Maybe Text -> Maybe AuthenticateCognitoActionConditionalBehaviorEnum -> Maybe Text -> Maybe Integer -> Text -> Text -> Text -> AuthenticateCognitoActionConfig

-- | The query parameters (up to 10) to include in the redirect request to
--   the authorization endpoint.
[$sel:authenticationRequestExtraParams:AuthenticateCognitoActionConfig'] :: AuthenticateCognitoActionConfig -> Maybe (HashMap Text Text)

-- | The set of user claims to be requested from the IdP. The default is
--   <tt>openid</tt>.
--   
--   To verify which scope values your IdP supports and how to separate
--   multiple values, see the documentation for your IdP.
[$sel:scope:AuthenticateCognitoActionConfig'] :: AuthenticateCognitoActionConfig -> Maybe Text

-- | The behavior if the user is not authenticated. The following are
--   possible values:
--   
--   <ul>
--   <li>deny@@ - Return an HTTP 401 Unauthorized error.</li>
--   <li>allow@@ - Allow the request to be forwarded to the target.</li>
--   <li>authenticate@@ - Redirect the request to the IdP authorization
--   endpoint. This is the default value.</li>
--   </ul>
[$sel:onUnauthenticatedRequest:AuthenticateCognitoActionConfig'] :: AuthenticateCognitoActionConfig -> Maybe AuthenticateCognitoActionConditionalBehaviorEnum

-- | The name of the cookie used to maintain session information. The
--   default is AWSELBAuthSessionCookie.
[$sel:sessionCookieName:AuthenticateCognitoActionConfig'] :: AuthenticateCognitoActionConfig -> Maybe Text

-- | The maximum duration of the authentication session, in seconds. The
--   default is 604800 seconds (7 days).
[$sel:sessionTimeout:AuthenticateCognitoActionConfig'] :: AuthenticateCognitoActionConfig -> Maybe Integer

-- | The Amazon Resource Name (ARN) of the Amazon Cognito user pool.
[$sel:userPoolArn:AuthenticateCognitoActionConfig'] :: AuthenticateCognitoActionConfig -> Text

-- | The ID of the Amazon Cognito user pool client.
[$sel:userPoolClientId:AuthenticateCognitoActionConfig'] :: AuthenticateCognitoActionConfig -> Text

-- | The domain prefix or fully-qualified domain name of the Amazon Cognito
--   user pool.
[$sel:userPoolDomain:AuthenticateCognitoActionConfig'] :: AuthenticateCognitoActionConfig -> Text

-- | Create a value of <a>AuthenticateCognitoActionConfig</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:authenticationRequestExtraParams:AuthenticateCognitoActionConfig'</a>,
--   <a>authenticateCognitoActionConfig_authenticationRequestExtraParams</a>
--   - The query parameters (up to 10) to include in the redirect request
--   to the authorization endpoint.
--   
--   <a>$sel:scope:AuthenticateCognitoActionConfig'</a>,
--   <a>authenticateCognitoActionConfig_scope</a> - The set of user claims
--   to be requested from the IdP. The default is <tt>openid</tt>.
--   
--   To verify which scope values your IdP supports and how to separate
--   multiple values, see the documentation for your IdP.
--   
--   <a>$sel:onUnauthenticatedRequest:AuthenticateCognitoActionConfig'</a>,
--   <a>authenticateCognitoActionConfig_onUnauthenticatedRequest</a> - The
--   behavior if the user is not authenticated. The following are possible
--   values:
--   
--   <ul>
--   <li>deny@@ - Return an HTTP 401 Unauthorized error.</li>
--   <li>allow@@ - Allow the request to be forwarded to the target.</li>
--   <li>authenticate@@ - Redirect the request to the IdP authorization
--   endpoint. This is the default value.</li>
--   </ul>
--   
--   <a>$sel:sessionCookieName:AuthenticateCognitoActionConfig'</a>,
--   <a>authenticateCognitoActionConfig_sessionCookieName</a> - The name of
--   the cookie used to maintain session information. The default is
--   AWSELBAuthSessionCookie.
--   
--   <a>$sel:sessionTimeout:AuthenticateCognitoActionConfig'</a>,
--   <a>authenticateCognitoActionConfig_sessionTimeout</a> - The maximum
--   duration of the authentication session, in seconds. The default is
--   604800 seconds (7 days).
--   
--   <a>$sel:userPoolArn:AuthenticateCognitoActionConfig'</a>,
--   <a>authenticateCognitoActionConfig_userPoolArn</a> - The Amazon
--   Resource Name (ARN) of the Amazon Cognito user pool.
--   
--   <a>$sel:userPoolClientId:AuthenticateCognitoActionConfig'</a>,
--   <a>authenticateCognitoActionConfig_userPoolClientId</a> - The ID of
--   the Amazon Cognito user pool client.
--   
--   <a>$sel:userPoolDomain:AuthenticateCognitoActionConfig'</a>,
--   <a>authenticateCognitoActionConfig_userPoolDomain</a> - The domain
--   prefix or fully-qualified domain name of the Amazon Cognito user pool.
newAuthenticateCognitoActionConfig :: Text -> Text -> Text -> AuthenticateCognitoActionConfig

-- | The query parameters (up to 10) to include in the redirect request to
--   the authorization endpoint.
authenticateCognitoActionConfig_authenticationRequestExtraParams :: Lens' AuthenticateCognitoActionConfig (Maybe (HashMap Text Text))

-- | The set of user claims to be requested from the IdP. The default is
--   <tt>openid</tt>.
--   
--   To verify which scope values your IdP supports and how to separate
--   multiple values, see the documentation for your IdP.
authenticateCognitoActionConfig_scope :: Lens' AuthenticateCognitoActionConfig (Maybe Text)

-- | The behavior if the user is not authenticated. The following are
--   possible values:
--   
--   <ul>
--   <li>deny@@ - Return an HTTP 401 Unauthorized error.</li>
--   <li>allow@@ - Allow the request to be forwarded to the target.</li>
--   <li>authenticate@@ - Redirect the request to the IdP authorization
--   endpoint. This is the default value.</li>
--   </ul>
authenticateCognitoActionConfig_onUnauthenticatedRequest :: Lens' AuthenticateCognitoActionConfig (Maybe AuthenticateCognitoActionConditionalBehaviorEnum)

-- | The name of the cookie used to maintain session information. The
--   default is AWSELBAuthSessionCookie.
authenticateCognitoActionConfig_sessionCookieName :: Lens' AuthenticateCognitoActionConfig (Maybe Text)

-- | The maximum duration of the authentication session, in seconds. The
--   default is 604800 seconds (7 days).
authenticateCognitoActionConfig_sessionTimeout :: Lens' AuthenticateCognitoActionConfig (Maybe Integer)

-- | The Amazon Resource Name (ARN) of the Amazon Cognito user pool.
authenticateCognitoActionConfig_userPoolArn :: Lens' AuthenticateCognitoActionConfig Text

-- | The ID of the Amazon Cognito user pool client.
authenticateCognitoActionConfig_userPoolClientId :: Lens' AuthenticateCognitoActionConfig Text

-- | The domain prefix or fully-qualified domain name of the Amazon Cognito
--   user pool.
authenticateCognitoActionConfig_userPoolDomain :: Lens' AuthenticateCognitoActionConfig Text
instance GHC.Generics.Generic Network.AWS.ELBV2.Types.AuthenticateCognitoActionConfig.AuthenticateCognitoActionConfig
instance GHC.Show.Show Network.AWS.ELBV2.Types.AuthenticateCognitoActionConfig.AuthenticateCognitoActionConfig
instance GHC.Read.Read Network.AWS.ELBV2.Types.AuthenticateCognitoActionConfig.AuthenticateCognitoActionConfig
instance GHC.Classes.Eq Network.AWS.ELBV2.Types.AuthenticateCognitoActionConfig.AuthenticateCognitoActionConfig
instance Network.AWS.Data.XML.FromXML Network.AWS.ELBV2.Types.AuthenticateCognitoActionConfig.AuthenticateCognitoActionConfig
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.Types.AuthenticateCognitoActionConfig.AuthenticateCognitoActionConfig
instance Control.DeepSeq.NFData Network.AWS.ELBV2.Types.AuthenticateCognitoActionConfig.AuthenticateCognitoActionConfig
instance Network.AWS.Data.Query.ToQuery Network.AWS.ELBV2.Types.AuthenticateCognitoActionConfig.AuthenticateCognitoActionConfig


module Network.AWS.ELBV2.Types.AuthenticateOidcActionConditionalBehaviorEnum
newtype AuthenticateOidcActionConditionalBehaviorEnum
AuthenticateOidcActionConditionalBehaviorEnum' :: Text -> AuthenticateOidcActionConditionalBehaviorEnum
[fromAuthenticateOidcActionConditionalBehaviorEnum] :: AuthenticateOidcActionConditionalBehaviorEnum -> Text
pattern AuthenticateOidcActionConditionalBehaviorEnum_Allow :: AuthenticateOidcActionConditionalBehaviorEnum
pattern AuthenticateOidcActionConditionalBehaviorEnum_Authenticate :: AuthenticateOidcActionConditionalBehaviorEnum
pattern AuthenticateOidcActionConditionalBehaviorEnum_Deny :: AuthenticateOidcActionConditionalBehaviorEnum
instance Network.AWS.Data.XML.ToXML Network.AWS.ELBV2.Types.AuthenticateOidcActionConditionalBehaviorEnum.AuthenticateOidcActionConditionalBehaviorEnum
instance Network.AWS.Data.XML.FromXML Network.AWS.ELBV2.Types.AuthenticateOidcActionConditionalBehaviorEnum.AuthenticateOidcActionConditionalBehaviorEnum
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.ELBV2.Types.AuthenticateOidcActionConditionalBehaviorEnum.AuthenticateOidcActionConditionalBehaviorEnum
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ELBV2.Types.AuthenticateOidcActionConditionalBehaviorEnum.AuthenticateOidcActionConditionalBehaviorEnum
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.ELBV2.Types.AuthenticateOidcActionConditionalBehaviorEnum.AuthenticateOidcActionConditionalBehaviorEnum
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ELBV2.Types.AuthenticateOidcActionConditionalBehaviorEnum.AuthenticateOidcActionConditionalBehaviorEnum
instance Network.AWS.Data.Query.ToQuery Network.AWS.ELBV2.Types.AuthenticateOidcActionConditionalBehaviorEnum.AuthenticateOidcActionConditionalBehaviorEnum
instance Network.AWS.Data.Headers.ToHeader Network.AWS.ELBV2.Types.AuthenticateOidcActionConditionalBehaviorEnum.AuthenticateOidcActionConditionalBehaviorEnum
instance Network.AWS.Data.Log.ToLog Network.AWS.ELBV2.Types.AuthenticateOidcActionConditionalBehaviorEnum.AuthenticateOidcActionConditionalBehaviorEnum
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.ELBV2.Types.AuthenticateOidcActionConditionalBehaviorEnum.AuthenticateOidcActionConditionalBehaviorEnum
instance Network.AWS.Data.Text.ToText Network.AWS.ELBV2.Types.AuthenticateOidcActionConditionalBehaviorEnum.AuthenticateOidcActionConditionalBehaviorEnum
instance Network.AWS.Data.Text.FromText Network.AWS.ELBV2.Types.AuthenticateOidcActionConditionalBehaviorEnum.AuthenticateOidcActionConditionalBehaviorEnum
instance Control.DeepSeq.NFData Network.AWS.ELBV2.Types.AuthenticateOidcActionConditionalBehaviorEnum.AuthenticateOidcActionConditionalBehaviorEnum
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.Types.AuthenticateOidcActionConditionalBehaviorEnum.AuthenticateOidcActionConditionalBehaviorEnum
instance GHC.Generics.Generic Network.AWS.ELBV2.Types.AuthenticateOidcActionConditionalBehaviorEnum.AuthenticateOidcActionConditionalBehaviorEnum
instance GHC.Classes.Ord Network.AWS.ELBV2.Types.AuthenticateOidcActionConditionalBehaviorEnum.AuthenticateOidcActionConditionalBehaviorEnum
instance GHC.Classes.Eq Network.AWS.ELBV2.Types.AuthenticateOidcActionConditionalBehaviorEnum.AuthenticateOidcActionConditionalBehaviorEnum
instance GHC.Read.Read Network.AWS.ELBV2.Types.AuthenticateOidcActionConditionalBehaviorEnum.AuthenticateOidcActionConditionalBehaviorEnum
instance GHC.Show.Show Network.AWS.ELBV2.Types.AuthenticateOidcActionConditionalBehaviorEnum.AuthenticateOidcActionConditionalBehaviorEnum


module Network.AWS.ELBV2.Types.AuthenticateOidcActionConfig

-- | Request parameters when using an identity provider (IdP) that is
--   compliant with OpenID Connect (OIDC) to authenticate users.
--   
--   <i>See:</i> <a>newAuthenticateOidcActionConfig</a> smart constructor.
data AuthenticateOidcActionConfig
AuthenticateOidcActionConfig' :: Maybe Text -> Maybe Bool -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe AuthenticateOidcActionConditionalBehaviorEnum -> Maybe Text -> Maybe Integer -> Text -> Text -> Text -> Text -> Text -> AuthenticateOidcActionConfig

-- | The OAuth 2.0 client secret. This parameter is required if you are
--   creating a rule. If you are modifying a rule, you can omit this
--   parameter if you set <tt>UseExistingClientSecret</tt> to true.
[$sel:clientSecret:AuthenticateOidcActionConfig'] :: AuthenticateOidcActionConfig -> Maybe Text

-- | Indicates whether to use the existing client secret when modifying a
--   rule. If you are creating a rule, you can omit this parameter or set
--   it to false.
[$sel:useExistingClientSecret:AuthenticateOidcActionConfig'] :: AuthenticateOidcActionConfig -> Maybe Bool

-- | The query parameters (up to 10) to include in the redirect request to
--   the authorization endpoint.
[$sel:authenticationRequestExtraParams:AuthenticateOidcActionConfig'] :: AuthenticateOidcActionConfig -> Maybe (HashMap Text Text)

-- | The set of user claims to be requested from the IdP. The default is
--   <tt>openid</tt>.
--   
--   To verify which scope values your IdP supports and how to separate
--   multiple values, see the documentation for your IdP.
[$sel:scope:AuthenticateOidcActionConfig'] :: AuthenticateOidcActionConfig -> Maybe Text

-- | The behavior if the user is not authenticated. The following are
--   possible values:
--   
--   <ul>
--   <li>deny@@ - Return an HTTP 401 Unauthorized error.</li>
--   <li>allow@@ - Allow the request to be forwarded to the target.</li>
--   <li>authenticate@@ - Redirect the request to the IdP authorization
--   endpoint. This is the default value.</li>
--   </ul>
[$sel:onUnauthenticatedRequest:AuthenticateOidcActionConfig'] :: AuthenticateOidcActionConfig -> Maybe AuthenticateOidcActionConditionalBehaviorEnum

-- | The name of the cookie used to maintain session information. The
--   default is AWSELBAuthSessionCookie.
[$sel:sessionCookieName:AuthenticateOidcActionConfig'] :: AuthenticateOidcActionConfig -> Maybe Text

-- | The maximum duration of the authentication session, in seconds. The
--   default is 604800 seconds (7 days).
[$sel:sessionTimeout:AuthenticateOidcActionConfig'] :: AuthenticateOidcActionConfig -> Maybe Integer

-- | The OIDC issuer identifier of the IdP. This must be a full URL,
--   including the HTTPS protocol, the domain, and the path.
[$sel:issuer:AuthenticateOidcActionConfig'] :: AuthenticateOidcActionConfig -> Text

-- | The authorization endpoint of the IdP. This must be a full URL,
--   including the HTTPS protocol, the domain, and the path.
[$sel:authorizationEndpoint:AuthenticateOidcActionConfig'] :: AuthenticateOidcActionConfig -> Text

-- | The token endpoint of the IdP. This must be a full URL, including the
--   HTTPS protocol, the domain, and the path.
[$sel:tokenEndpoint:AuthenticateOidcActionConfig'] :: AuthenticateOidcActionConfig -> Text

-- | The user info endpoint of the IdP. This must be a full URL, including
--   the HTTPS protocol, the domain, and the path.
[$sel:userInfoEndpoint:AuthenticateOidcActionConfig'] :: AuthenticateOidcActionConfig -> Text

-- | The OAuth 2.0 client identifier.
[$sel:clientId:AuthenticateOidcActionConfig'] :: AuthenticateOidcActionConfig -> Text

-- | Create a value of <a>AuthenticateOidcActionConfig</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientSecret:AuthenticateOidcActionConfig'</a>,
--   <a>authenticateOidcActionConfig_clientSecret</a> - The OAuth 2.0
--   client secret. This parameter is required if you are creating a rule.
--   If you are modifying a rule, you can omit this parameter if you set
--   <tt>UseExistingClientSecret</tt> to true.
--   
--   <a>$sel:useExistingClientSecret:AuthenticateOidcActionConfig'</a>,
--   <a>authenticateOidcActionConfig_useExistingClientSecret</a> -
--   Indicates whether to use the existing client secret when modifying a
--   rule. If you are creating a rule, you can omit this parameter or set
--   it to false.
--   
--   
--   <a>$sel:authenticationRequestExtraParams:AuthenticateOidcActionConfig'</a>,
--   <a>authenticateOidcActionConfig_authenticationRequestExtraParams</a> -
--   The query parameters (up to 10) to include in the redirect request to
--   the authorization endpoint.
--   
--   <a>$sel:scope:AuthenticateOidcActionConfig'</a>,
--   <a>authenticateOidcActionConfig_scope</a> - The set of user claims to
--   be requested from the IdP. The default is <tt>openid</tt>.
--   
--   To verify which scope values your IdP supports and how to separate
--   multiple values, see the documentation for your IdP.
--   
--   <a>$sel:onUnauthenticatedRequest:AuthenticateOidcActionConfig'</a>,
--   <a>authenticateOidcActionConfig_onUnauthenticatedRequest</a> - The
--   behavior if the user is not authenticated. The following are possible
--   values:
--   
--   <ul>
--   <li>deny@@ - Return an HTTP 401 Unauthorized error.</li>
--   <li>allow@@ - Allow the request to be forwarded to the target.</li>
--   <li>authenticate@@ - Redirect the request to the IdP authorization
--   endpoint. This is the default value.</li>
--   </ul>
--   
--   <a>$sel:sessionCookieName:AuthenticateOidcActionConfig'</a>,
--   <a>authenticateOidcActionConfig_sessionCookieName</a> - The name of
--   the cookie used to maintain session information. The default is
--   AWSELBAuthSessionCookie.
--   
--   <a>$sel:sessionTimeout:AuthenticateOidcActionConfig'</a>,
--   <a>authenticateOidcActionConfig_sessionTimeout</a> - The maximum
--   duration of the authentication session, in seconds. The default is
--   604800 seconds (7 days).
--   
--   <a>$sel:issuer:AuthenticateOidcActionConfig'</a>,
--   <a>authenticateOidcActionConfig_issuer</a> - The OIDC issuer
--   identifier of the IdP. This must be a full URL, including the HTTPS
--   protocol, the domain, and the path.
--   
--   <a>$sel:authorizationEndpoint:AuthenticateOidcActionConfig'</a>,
--   <a>authenticateOidcActionConfig_authorizationEndpoint</a> - The
--   authorization endpoint of the IdP. This must be a full URL, including
--   the HTTPS protocol, the domain, and the path.
--   
--   <a>$sel:tokenEndpoint:AuthenticateOidcActionConfig'</a>,
--   <a>authenticateOidcActionConfig_tokenEndpoint</a> - The token endpoint
--   of the IdP. This must be a full URL, including the HTTPS protocol, the
--   domain, and the path.
--   
--   <a>$sel:userInfoEndpoint:AuthenticateOidcActionConfig'</a>,
--   <a>authenticateOidcActionConfig_userInfoEndpoint</a> - The user info
--   endpoint of the IdP. This must be a full URL, including the HTTPS
--   protocol, the domain, and the path.
--   
--   <a>$sel:clientId:AuthenticateOidcActionConfig'</a>,
--   <a>authenticateOidcActionConfig_clientId</a> - The OAuth 2.0 client
--   identifier.
newAuthenticateOidcActionConfig :: Text -> Text -> Text -> Text -> Text -> AuthenticateOidcActionConfig

-- | The OAuth 2.0 client secret. This parameter is required if you are
--   creating a rule. If you are modifying a rule, you can omit this
--   parameter if you set <tt>UseExistingClientSecret</tt> to true.
authenticateOidcActionConfig_clientSecret :: Lens' AuthenticateOidcActionConfig (Maybe Text)

-- | Indicates whether to use the existing client secret when modifying a
--   rule. If you are creating a rule, you can omit this parameter or set
--   it to false.
authenticateOidcActionConfig_useExistingClientSecret :: Lens' AuthenticateOidcActionConfig (Maybe Bool)

-- | The query parameters (up to 10) to include in the redirect request to
--   the authorization endpoint.
authenticateOidcActionConfig_authenticationRequestExtraParams :: Lens' AuthenticateOidcActionConfig (Maybe (HashMap Text Text))

-- | The set of user claims to be requested from the IdP. The default is
--   <tt>openid</tt>.
--   
--   To verify which scope values your IdP supports and how to separate
--   multiple values, see the documentation for your IdP.
authenticateOidcActionConfig_scope :: Lens' AuthenticateOidcActionConfig (Maybe Text)

-- | The behavior if the user is not authenticated. The following are
--   possible values:
--   
--   <ul>
--   <li>deny@@ - Return an HTTP 401 Unauthorized error.</li>
--   <li>allow@@ - Allow the request to be forwarded to the target.</li>
--   <li>authenticate@@ - Redirect the request to the IdP authorization
--   endpoint. This is the default value.</li>
--   </ul>
authenticateOidcActionConfig_onUnauthenticatedRequest :: Lens' AuthenticateOidcActionConfig (Maybe AuthenticateOidcActionConditionalBehaviorEnum)

-- | The name of the cookie used to maintain session information. The
--   default is AWSELBAuthSessionCookie.
authenticateOidcActionConfig_sessionCookieName :: Lens' AuthenticateOidcActionConfig (Maybe Text)

-- | The maximum duration of the authentication session, in seconds. The
--   default is 604800 seconds (7 days).
authenticateOidcActionConfig_sessionTimeout :: Lens' AuthenticateOidcActionConfig (Maybe Integer)

-- | The OIDC issuer identifier of the IdP. This must be a full URL,
--   including the HTTPS protocol, the domain, and the path.
authenticateOidcActionConfig_issuer :: Lens' AuthenticateOidcActionConfig Text

-- | The authorization endpoint of the IdP. This must be a full URL,
--   including the HTTPS protocol, the domain, and the path.
authenticateOidcActionConfig_authorizationEndpoint :: Lens' AuthenticateOidcActionConfig Text

-- | The token endpoint of the IdP. This must be a full URL, including the
--   HTTPS protocol, the domain, and the path.
authenticateOidcActionConfig_tokenEndpoint :: Lens' AuthenticateOidcActionConfig Text

-- | The user info endpoint of the IdP. This must be a full URL, including
--   the HTTPS protocol, the domain, and the path.
authenticateOidcActionConfig_userInfoEndpoint :: Lens' AuthenticateOidcActionConfig Text

-- | The OAuth 2.0 client identifier.
authenticateOidcActionConfig_clientId :: Lens' AuthenticateOidcActionConfig Text
instance GHC.Generics.Generic Network.AWS.ELBV2.Types.AuthenticateOidcActionConfig.AuthenticateOidcActionConfig
instance GHC.Show.Show Network.AWS.ELBV2.Types.AuthenticateOidcActionConfig.AuthenticateOidcActionConfig
instance GHC.Read.Read Network.AWS.ELBV2.Types.AuthenticateOidcActionConfig.AuthenticateOidcActionConfig
instance GHC.Classes.Eq Network.AWS.ELBV2.Types.AuthenticateOidcActionConfig.AuthenticateOidcActionConfig
instance Network.AWS.Data.XML.FromXML Network.AWS.ELBV2.Types.AuthenticateOidcActionConfig.AuthenticateOidcActionConfig
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.Types.AuthenticateOidcActionConfig.AuthenticateOidcActionConfig
instance Control.DeepSeq.NFData Network.AWS.ELBV2.Types.AuthenticateOidcActionConfig.AuthenticateOidcActionConfig
instance Network.AWS.Data.Query.ToQuery Network.AWS.ELBV2.Types.AuthenticateOidcActionConfig.AuthenticateOidcActionConfig


module Network.AWS.ELBV2.Types.Certificate

-- | Information about an SSL server certificate.
--   
--   <i>See:</i> <a>newCertificate</a> smart constructor.
data Certificate
Certificate' :: Maybe Text -> Maybe Bool -> Certificate

-- | The Amazon Resource Name (ARN) of the certificate.
[$sel:certificateArn:Certificate'] :: Certificate -> Maybe Text

-- | Indicates whether the certificate is the default certificate. Do not
--   set this value when specifying a certificate as an input. This value
--   is not included in the output when describing a listener, but is
--   included when describing listener certificates.
[$sel:isDefault:Certificate'] :: Certificate -> Maybe Bool

-- | Create a value of <a>Certificate</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:certificateArn:Certificate'</a>,
--   <a>certificate_certificateArn</a> - The Amazon Resource Name (ARN) of
--   the certificate.
--   
--   <a>$sel:isDefault:Certificate'</a>, <a>certificate_isDefault</a> -
--   Indicates whether the certificate is the default certificate. Do not
--   set this value when specifying a certificate as an input. This value
--   is not included in the output when describing a listener, but is
--   included when describing listener certificates.
newCertificate :: Certificate

-- | The Amazon Resource Name (ARN) of the certificate.
certificate_certificateArn :: Lens' Certificate (Maybe Text)

-- | Indicates whether the certificate is the default certificate. Do not
--   set this value when specifying a certificate as an input. This value
--   is not included in the output when describing a listener, but is
--   included when describing listener certificates.
certificate_isDefault :: Lens' Certificate (Maybe Bool)
instance GHC.Generics.Generic Network.AWS.ELBV2.Types.Certificate.Certificate
instance GHC.Show.Show Network.AWS.ELBV2.Types.Certificate.Certificate
instance GHC.Read.Read Network.AWS.ELBV2.Types.Certificate.Certificate
instance GHC.Classes.Eq Network.AWS.ELBV2.Types.Certificate.Certificate
instance Network.AWS.Data.XML.FromXML Network.AWS.ELBV2.Types.Certificate.Certificate
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.Types.Certificate.Certificate
instance Control.DeepSeq.NFData Network.AWS.ELBV2.Types.Certificate.Certificate
instance Network.AWS.Data.Query.ToQuery Network.AWS.ELBV2.Types.Certificate.Certificate


module Network.AWS.ELBV2.Types.Cipher

-- | Information about a cipher used in a policy.
--   
--   <i>See:</i> <a>newCipher</a> smart constructor.
data Cipher
Cipher' :: Maybe Int -> Maybe Text -> Cipher

-- | The priority of the cipher.
[$sel:priority:Cipher'] :: Cipher -> Maybe Int

-- | The name of the cipher.
[$sel:name:Cipher'] :: Cipher -> Maybe Text

-- | Create a value of <a>Cipher</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:priority:Cipher'</a>, <a>cipher_priority</a> - The priority of
--   the cipher.
--   
--   <a>$sel:name:Cipher'</a>, <a>cipher_name</a> - The name of the cipher.
newCipher :: Cipher

-- | The priority of the cipher.
cipher_priority :: Lens' Cipher (Maybe Int)

-- | The name of the cipher.
cipher_name :: Lens' Cipher (Maybe Text)
instance GHC.Generics.Generic Network.AWS.ELBV2.Types.Cipher.Cipher
instance GHC.Show.Show Network.AWS.ELBV2.Types.Cipher.Cipher
instance GHC.Read.Read Network.AWS.ELBV2.Types.Cipher.Cipher
instance GHC.Classes.Eq Network.AWS.ELBV2.Types.Cipher.Cipher
instance Network.AWS.Data.XML.FromXML Network.AWS.ELBV2.Types.Cipher.Cipher
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.Types.Cipher.Cipher
instance Control.DeepSeq.NFData Network.AWS.ELBV2.Types.Cipher.Cipher


module Network.AWS.ELBV2.Types.FixedResponseActionConfig

-- | Information about an action that returns a custom HTTP response.
--   
--   <i>See:</i> <a>newFixedResponseActionConfig</a> smart constructor.
data FixedResponseActionConfig
FixedResponseActionConfig' :: Maybe Text -> Maybe Text -> Text -> FixedResponseActionConfig

-- | The message.
[$sel:messageBody:FixedResponseActionConfig'] :: FixedResponseActionConfig -> Maybe Text

-- | The content type.
--   
--   Valid Values: text/plain | text/css | text/html |
--   application/javascript | application/json
[$sel:contentType:FixedResponseActionConfig'] :: FixedResponseActionConfig -> Maybe Text

-- | The HTTP response code (2XX, 4XX, or 5XX).
[$sel:statusCode:FixedResponseActionConfig'] :: FixedResponseActionConfig -> Text

-- | Create a value of <a>FixedResponseActionConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:messageBody:FixedResponseActionConfig'</a>,
--   <a>fixedResponseActionConfig_messageBody</a> - The message.
--   
--   <a>$sel:contentType:FixedResponseActionConfig'</a>,
--   <a>fixedResponseActionConfig_contentType</a> - The content type.
--   
--   Valid Values: text/plain | text/css | text/html |
--   application/javascript | application/json
--   
--   <a>$sel:statusCode:FixedResponseActionConfig'</a>,
--   <a>fixedResponseActionConfig_statusCode</a> - The HTTP response code
--   (2XX, 4XX, or 5XX).
newFixedResponseActionConfig :: Text -> FixedResponseActionConfig

-- | The message.
fixedResponseActionConfig_messageBody :: Lens' FixedResponseActionConfig (Maybe Text)

-- | The content type.
--   
--   Valid Values: text/plain | text/css | text/html |
--   application/javascript | application/json
fixedResponseActionConfig_contentType :: Lens' FixedResponseActionConfig (Maybe Text)

-- | The HTTP response code (2XX, 4XX, or 5XX).
fixedResponseActionConfig_statusCode :: Lens' FixedResponseActionConfig Text
instance GHC.Generics.Generic Network.AWS.ELBV2.Types.FixedResponseActionConfig.FixedResponseActionConfig
instance GHC.Show.Show Network.AWS.ELBV2.Types.FixedResponseActionConfig.FixedResponseActionConfig
instance GHC.Read.Read Network.AWS.ELBV2.Types.FixedResponseActionConfig.FixedResponseActionConfig
instance GHC.Classes.Eq Network.AWS.ELBV2.Types.FixedResponseActionConfig.FixedResponseActionConfig
instance Network.AWS.Data.XML.FromXML Network.AWS.ELBV2.Types.FixedResponseActionConfig.FixedResponseActionConfig
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.Types.FixedResponseActionConfig.FixedResponseActionConfig
instance Control.DeepSeq.NFData Network.AWS.ELBV2.Types.FixedResponseActionConfig.FixedResponseActionConfig
instance Network.AWS.Data.Query.ToQuery Network.AWS.ELBV2.Types.FixedResponseActionConfig.FixedResponseActionConfig


module Network.AWS.ELBV2.Types.HostHeaderConditionConfig

-- | Information about a host header condition.
--   
--   <i>See:</i> <a>newHostHeaderConditionConfig</a> smart constructor.
data HostHeaderConditionConfig
HostHeaderConditionConfig' :: Maybe [Text] -> HostHeaderConditionConfig

-- | One or more host names. The maximum size of each name is 128
--   characters. The comparison is case insensitive. The following wildcard
--   characters are supported: * (matches 0 or more characters) and ?
--   (matches exactly 1 character).
--   
--   If you specify multiple strings, the condition is satisfied if one of
--   the strings matches the host name.
[$sel:values:HostHeaderConditionConfig'] :: HostHeaderConditionConfig -> Maybe [Text]

-- | Create a value of <a>HostHeaderConditionConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:values:HostHeaderConditionConfig'</a>,
--   <a>hostHeaderConditionConfig_values</a> - One or more host names. The
--   maximum size of each name is 128 characters. The comparison is case
--   insensitive. The following wildcard characters are supported: *
--   (matches 0 or more characters) and ? (matches exactly 1 character).
--   
--   If you specify multiple strings, the condition is satisfied if one of
--   the strings matches the host name.
newHostHeaderConditionConfig :: HostHeaderConditionConfig

-- | One or more host names. The maximum size of each name is 128
--   characters. The comparison is case insensitive. The following wildcard
--   characters are supported: * (matches 0 or more characters) and ?
--   (matches exactly 1 character).
--   
--   If you specify multiple strings, the condition is satisfied if one of
--   the strings matches the host name.
hostHeaderConditionConfig_values :: Lens' HostHeaderConditionConfig (Maybe [Text])
instance GHC.Generics.Generic Network.AWS.ELBV2.Types.HostHeaderConditionConfig.HostHeaderConditionConfig
instance GHC.Show.Show Network.AWS.ELBV2.Types.HostHeaderConditionConfig.HostHeaderConditionConfig
instance GHC.Read.Read Network.AWS.ELBV2.Types.HostHeaderConditionConfig.HostHeaderConditionConfig
instance GHC.Classes.Eq Network.AWS.ELBV2.Types.HostHeaderConditionConfig.HostHeaderConditionConfig
instance Network.AWS.Data.XML.FromXML Network.AWS.ELBV2.Types.HostHeaderConditionConfig.HostHeaderConditionConfig
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.Types.HostHeaderConditionConfig.HostHeaderConditionConfig
instance Control.DeepSeq.NFData Network.AWS.ELBV2.Types.HostHeaderConditionConfig.HostHeaderConditionConfig
instance Network.AWS.Data.Query.ToQuery Network.AWS.ELBV2.Types.HostHeaderConditionConfig.HostHeaderConditionConfig


module Network.AWS.ELBV2.Types.HttpHeaderConditionConfig

-- | Information about an HTTP header condition.
--   
--   There is a set of standard HTTP header fields. You can also define
--   custom HTTP header fields.
--   
--   <i>See:</i> <a>newHttpHeaderConditionConfig</a> smart constructor.
data HttpHeaderConditionConfig
HttpHeaderConditionConfig' :: Maybe [Text] -> Maybe Text -> HttpHeaderConditionConfig

-- | One or more strings to compare against the value of the HTTP header.
--   The maximum size of each string is 128 characters. The comparison
--   strings are case insensitive. The following wildcard characters are
--   supported: * (matches 0 or more characters) and ? (matches exactly 1
--   character).
--   
--   If the same header appears multiple times in the request, we search
--   them in order until a match is found.
--   
--   If you specify multiple strings, the condition is satisfied if one of
--   the strings matches the value of the HTTP header. To require that all
--   of the strings are a match, create one condition per string.
[$sel:values:HttpHeaderConditionConfig'] :: HttpHeaderConditionConfig -> Maybe [Text]

-- | The name of the HTTP header field. The maximum size is 40 characters.
--   The header name is case insensitive. The allowed characters are
--   specified by RFC 7230. Wildcards are not supported.
--   
--   You can't use an HTTP header condition to specify the host header. Use
--   HostHeaderConditionConfig to specify a host header condition.
[$sel:httpHeaderName:HttpHeaderConditionConfig'] :: HttpHeaderConditionConfig -> Maybe Text

-- | Create a value of <a>HttpHeaderConditionConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:values:HttpHeaderConditionConfig'</a>,
--   <a>httpHeaderConditionConfig_values</a> - One or more strings to
--   compare against the value of the HTTP header. The maximum size of each
--   string is 128 characters. The comparison strings are case insensitive.
--   The following wildcard characters are supported: * (matches 0 or more
--   characters) and ? (matches exactly 1 character).
--   
--   If the same header appears multiple times in the request, we search
--   them in order until a match is found.
--   
--   If you specify multiple strings, the condition is satisfied if one of
--   the strings matches the value of the HTTP header. To require that all
--   of the strings are a match, create one condition per string.
--   
--   <a>$sel:httpHeaderName:HttpHeaderConditionConfig'</a>,
--   <a>httpHeaderConditionConfig_httpHeaderName</a> - The name of the HTTP
--   header field. The maximum size is 40 characters. The header name is
--   case insensitive. The allowed characters are specified by RFC 7230.
--   Wildcards are not supported.
--   
--   You can't use an HTTP header condition to specify the host header. Use
--   HostHeaderConditionConfig to specify a host header condition.
newHttpHeaderConditionConfig :: HttpHeaderConditionConfig

-- | One or more strings to compare against the value of the HTTP header.
--   The maximum size of each string is 128 characters. The comparison
--   strings are case insensitive. The following wildcard characters are
--   supported: * (matches 0 or more characters) and ? (matches exactly 1
--   character).
--   
--   If the same header appears multiple times in the request, we search
--   them in order until a match is found.
--   
--   If you specify multiple strings, the condition is satisfied if one of
--   the strings matches the value of the HTTP header. To require that all
--   of the strings are a match, create one condition per string.
httpHeaderConditionConfig_values :: Lens' HttpHeaderConditionConfig (Maybe [Text])

-- | The name of the HTTP header field. The maximum size is 40 characters.
--   The header name is case insensitive. The allowed characters are
--   specified by RFC 7230. Wildcards are not supported.
--   
--   You can't use an HTTP header condition to specify the host header. Use
--   HostHeaderConditionConfig to specify a host header condition.
httpHeaderConditionConfig_httpHeaderName :: Lens' HttpHeaderConditionConfig (Maybe Text)
instance GHC.Generics.Generic Network.AWS.ELBV2.Types.HttpHeaderConditionConfig.HttpHeaderConditionConfig
instance GHC.Show.Show Network.AWS.ELBV2.Types.HttpHeaderConditionConfig.HttpHeaderConditionConfig
instance GHC.Read.Read Network.AWS.ELBV2.Types.HttpHeaderConditionConfig.HttpHeaderConditionConfig
instance GHC.Classes.Eq Network.AWS.ELBV2.Types.HttpHeaderConditionConfig.HttpHeaderConditionConfig
instance Network.AWS.Data.XML.FromXML Network.AWS.ELBV2.Types.HttpHeaderConditionConfig.HttpHeaderConditionConfig
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.Types.HttpHeaderConditionConfig.HttpHeaderConditionConfig
instance Control.DeepSeq.NFData Network.AWS.ELBV2.Types.HttpHeaderConditionConfig.HttpHeaderConditionConfig
instance Network.AWS.Data.Query.ToQuery Network.AWS.ELBV2.Types.HttpHeaderConditionConfig.HttpHeaderConditionConfig


module Network.AWS.ELBV2.Types.HttpRequestMethodConditionConfig

-- | Information about an HTTP method condition.
--   
--   HTTP defines a set of request methods, also referred to as HTTP verbs.
--   For more information, see the <a>HTTP Method Registry</a>. You can
--   also define custom HTTP methods.
--   
--   <i>See:</i> <a>newHttpRequestMethodConditionConfig</a> smart
--   constructor.
data HttpRequestMethodConditionConfig
HttpRequestMethodConditionConfig' :: Maybe [Text] -> HttpRequestMethodConditionConfig

-- | The name of the request method. The maximum size is 40 characters. The
--   allowed characters are A-Z, hyphen (-), and underscore (_). The
--   comparison is case sensitive. Wildcards are not supported; therefore,
--   the method name must be an exact match.
--   
--   If you specify multiple strings, the condition is satisfied if one of
--   the strings matches the HTTP request method. We recommend that you
--   route GET and HEAD requests in the same way, because the response to a
--   HEAD request may be cached.
[$sel:values:HttpRequestMethodConditionConfig'] :: HttpRequestMethodConditionConfig -> Maybe [Text]

-- | Create a value of <a>HttpRequestMethodConditionConfig</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:values:HttpRequestMethodConditionConfig'</a>,
--   <a>httpRequestMethodConditionConfig_values</a> - The name of the
--   request method. The maximum size is 40 characters. The allowed
--   characters are A-Z, hyphen (-), and underscore (_). The comparison is
--   case sensitive. Wildcards are not supported; therefore, the method
--   name must be an exact match.
--   
--   If you specify multiple strings, the condition is satisfied if one of
--   the strings matches the HTTP request method. We recommend that you
--   route GET and HEAD requests in the same way, because the response to a
--   HEAD request may be cached.
newHttpRequestMethodConditionConfig :: HttpRequestMethodConditionConfig

-- | The name of the request method. The maximum size is 40 characters. The
--   allowed characters are A-Z, hyphen (-), and underscore (_). The
--   comparison is case sensitive. Wildcards are not supported; therefore,
--   the method name must be an exact match.
--   
--   If you specify multiple strings, the condition is satisfied if one of
--   the strings matches the HTTP request method. We recommend that you
--   route GET and HEAD requests in the same way, because the response to a
--   HEAD request may be cached.
httpRequestMethodConditionConfig_values :: Lens' HttpRequestMethodConditionConfig (Maybe [Text])
instance GHC.Generics.Generic Network.AWS.ELBV2.Types.HttpRequestMethodConditionConfig.HttpRequestMethodConditionConfig
instance GHC.Show.Show Network.AWS.ELBV2.Types.HttpRequestMethodConditionConfig.HttpRequestMethodConditionConfig
instance GHC.Read.Read Network.AWS.ELBV2.Types.HttpRequestMethodConditionConfig.HttpRequestMethodConditionConfig
instance GHC.Classes.Eq Network.AWS.ELBV2.Types.HttpRequestMethodConditionConfig.HttpRequestMethodConditionConfig
instance Network.AWS.Data.XML.FromXML Network.AWS.ELBV2.Types.HttpRequestMethodConditionConfig.HttpRequestMethodConditionConfig
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.Types.HttpRequestMethodConditionConfig.HttpRequestMethodConditionConfig
instance Control.DeepSeq.NFData Network.AWS.ELBV2.Types.HttpRequestMethodConditionConfig.HttpRequestMethodConditionConfig
instance Network.AWS.Data.Query.ToQuery Network.AWS.ELBV2.Types.HttpRequestMethodConditionConfig.HttpRequestMethodConditionConfig


module Network.AWS.ELBV2.Types.IpAddressType
newtype IpAddressType
IpAddressType' :: Text -> IpAddressType
[fromIpAddressType] :: IpAddressType -> Text
pattern IpAddressType_Dualstack :: IpAddressType
pattern IpAddressType_Ipv4 :: IpAddressType
instance Network.AWS.Data.XML.ToXML Network.AWS.ELBV2.Types.IpAddressType.IpAddressType
instance Network.AWS.Data.XML.FromXML Network.AWS.ELBV2.Types.IpAddressType.IpAddressType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.ELBV2.Types.IpAddressType.IpAddressType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ELBV2.Types.IpAddressType.IpAddressType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.ELBV2.Types.IpAddressType.IpAddressType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ELBV2.Types.IpAddressType.IpAddressType
instance Network.AWS.Data.Query.ToQuery Network.AWS.ELBV2.Types.IpAddressType.IpAddressType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.ELBV2.Types.IpAddressType.IpAddressType
instance Network.AWS.Data.Log.ToLog Network.AWS.ELBV2.Types.IpAddressType.IpAddressType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.ELBV2.Types.IpAddressType.IpAddressType
instance Network.AWS.Data.Text.ToText Network.AWS.ELBV2.Types.IpAddressType.IpAddressType
instance Network.AWS.Data.Text.FromText Network.AWS.ELBV2.Types.IpAddressType.IpAddressType
instance Control.DeepSeq.NFData Network.AWS.ELBV2.Types.IpAddressType.IpAddressType
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.Types.IpAddressType.IpAddressType
instance GHC.Generics.Generic Network.AWS.ELBV2.Types.IpAddressType.IpAddressType
instance GHC.Classes.Ord Network.AWS.ELBV2.Types.IpAddressType.IpAddressType
instance GHC.Classes.Eq Network.AWS.ELBV2.Types.IpAddressType.IpAddressType
instance GHC.Read.Read Network.AWS.ELBV2.Types.IpAddressType.IpAddressType
instance GHC.Show.Show Network.AWS.ELBV2.Types.IpAddressType.IpAddressType


module Network.AWS.ELBV2.Types.Limit

-- | Information about an Elastic Load Balancing resource limit for your
--   Amazon Web Services account.
--   
--   <i>See:</i> <a>newLimit</a> smart constructor.
data Limit
Limit' :: Maybe Text -> Maybe Text -> Limit

-- | The maximum value of the limit.
[$sel:max:Limit'] :: Limit -> Maybe Text

-- | The name of the limit. The possible values are:
--   
--   <ul>
--   <li>application-load-balancers</li>
--   <li>condition-values-per-alb-rule</li>
--   <li>condition-wildcards-per-alb-rule</li>
--   <li>gateway-load-balancers</li>
--   <li>gateway-load-balancers-per-vpc</li>
--   <li>geneve-target-groups</li>
--   <li>listeners-per-application-load-balancer</li>
--   <li>listeners-per-network-load-balancer</li>
--   <li>network-load-balancers</li>
--   <li>rules-per-application-load-balancer</li>
--   <li>target-groups</li>
--   <li>target-groups-per-action-on-application-load-balancer</li>
--   <li>target-groups-per-action-on-network-load-balancer</li>
--   <li>target-groups-per-application-load-balancer</li>
--   <li>targets-per-application-load-balancer</li>
--   <li>targets-per-availability-zone-per-gateway-load-balancer</li>
--   <li>targets-per-availability-zone-per-network-load-balancer</li>
--   <li>targets-per-network-load-balancer</li>
--   </ul>
[$sel:name:Limit'] :: Limit -> Maybe Text

-- | Create a value of <a>Limit</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:max:Limit'</a>, <a>limit_max</a> - The maximum value of the
--   limit.
--   
--   <a>$sel:name:Limit'</a>, <a>limit_name</a> - The name of the limit.
--   The possible values are:
--   
--   <ul>
--   <li>application-load-balancers</li>
--   <li>condition-values-per-alb-rule</li>
--   <li>condition-wildcards-per-alb-rule</li>
--   <li>gateway-load-balancers</li>
--   <li>gateway-load-balancers-per-vpc</li>
--   <li>geneve-target-groups</li>
--   <li>listeners-per-application-load-balancer</li>
--   <li>listeners-per-network-load-balancer</li>
--   <li>network-load-balancers</li>
--   <li>rules-per-application-load-balancer</li>
--   <li>target-groups</li>
--   <li>target-groups-per-action-on-application-load-balancer</li>
--   <li>target-groups-per-action-on-network-load-balancer</li>
--   <li>target-groups-per-application-load-balancer</li>
--   <li>targets-per-application-load-balancer</li>
--   <li>targets-per-availability-zone-per-gateway-load-balancer</li>
--   <li>targets-per-availability-zone-per-network-load-balancer</li>
--   <li>targets-per-network-load-balancer</li>
--   </ul>
newLimit :: Limit

-- | The maximum value of the limit.
limit_max :: Lens' Limit (Maybe Text)

-- | The name of the limit. The possible values are:
--   
--   <ul>
--   <li>application-load-balancers</li>
--   <li>condition-values-per-alb-rule</li>
--   <li>condition-wildcards-per-alb-rule</li>
--   <li>gateway-load-balancers</li>
--   <li>gateway-load-balancers-per-vpc</li>
--   <li>geneve-target-groups</li>
--   <li>listeners-per-application-load-balancer</li>
--   <li>listeners-per-network-load-balancer</li>
--   <li>network-load-balancers</li>
--   <li>rules-per-application-load-balancer</li>
--   <li>target-groups</li>
--   <li>target-groups-per-action-on-application-load-balancer</li>
--   <li>target-groups-per-action-on-network-load-balancer</li>
--   <li>target-groups-per-application-load-balancer</li>
--   <li>targets-per-application-load-balancer</li>
--   <li>targets-per-availability-zone-per-gateway-load-balancer</li>
--   <li>targets-per-availability-zone-per-network-load-balancer</li>
--   <li>targets-per-network-load-balancer</li>
--   </ul>
limit_name :: Lens' Limit (Maybe Text)
instance GHC.Generics.Generic Network.AWS.ELBV2.Types.Limit.Limit
instance GHC.Show.Show Network.AWS.ELBV2.Types.Limit.Limit
instance GHC.Read.Read Network.AWS.ELBV2.Types.Limit.Limit
instance GHC.Classes.Eq Network.AWS.ELBV2.Types.Limit.Limit
instance Network.AWS.Data.XML.FromXML Network.AWS.ELBV2.Types.Limit.Limit
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.Types.Limit.Limit
instance Control.DeepSeq.NFData Network.AWS.ELBV2.Types.Limit.Limit


module Network.AWS.ELBV2.Types.LoadBalancerAddress

-- | Information about a static IP address for a load balancer.
--   
--   <i>See:</i> <a>newLoadBalancerAddress</a> smart constructor.
data LoadBalancerAddress
LoadBalancerAddress' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> LoadBalancerAddress

-- | <ul>
--   <li><i>Network Load Balancers</i> The IPv6 address.</li>
--   </ul>
[$sel:iPv6Address:LoadBalancerAddress'] :: LoadBalancerAddress -> Maybe Text

-- | The static IP address.
[$sel:ipAddress:LoadBalancerAddress'] :: LoadBalancerAddress -> Maybe Text

-- | <ul>
--   <li><i>Network Load Balancers</i> The allocation ID of the Elastic IP
--   address for an internal-facing load balancer.</li>
--   </ul>
[$sel:allocationId:LoadBalancerAddress'] :: LoadBalancerAddress -> Maybe Text

-- | <ul>
--   <li><i>Network Load Balancers</i> The private IPv4 address for an
--   internal load balancer.</li>
--   </ul>
[$sel:privateIPv4Address:LoadBalancerAddress'] :: LoadBalancerAddress -> Maybe Text

-- | Create a value of <a>LoadBalancerAddress</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:iPv6Address:LoadBalancerAddress'</a>,
--   <a>loadBalancerAddress_iPv6Address</a> - [Network Load Balancers] The
--   IPv6 address.
--   
--   <a>$sel:ipAddress:LoadBalancerAddress'</a>,
--   <a>loadBalancerAddress_ipAddress</a> - The static IP address.
--   
--   <a>$sel:allocationId:LoadBalancerAddress'</a>,
--   <a>loadBalancerAddress_allocationId</a> - [Network Load Balancers] The
--   allocation ID of the Elastic IP address for an internal-facing load
--   balancer.
--   
--   <a>$sel:privateIPv4Address:LoadBalancerAddress'</a>,
--   <a>loadBalancerAddress_privateIPv4Address</a> - [Network Load
--   Balancers] The private IPv4 address for an internal load balancer.
newLoadBalancerAddress :: LoadBalancerAddress

-- | <ul>
--   <li><i>Network Load Balancers</i> The IPv6 address.</li>
--   </ul>
loadBalancerAddress_iPv6Address :: Lens' LoadBalancerAddress (Maybe Text)

-- | The static IP address.
loadBalancerAddress_ipAddress :: Lens' LoadBalancerAddress (Maybe Text)

-- | <ul>
--   <li><i>Network Load Balancers</i> The allocation ID of the Elastic IP
--   address for an internal-facing load balancer.</li>
--   </ul>
loadBalancerAddress_allocationId :: Lens' LoadBalancerAddress (Maybe Text)

-- | <ul>
--   <li><i>Network Load Balancers</i> The private IPv4 address for an
--   internal load balancer.</li>
--   </ul>
loadBalancerAddress_privateIPv4Address :: Lens' LoadBalancerAddress (Maybe Text)
instance GHC.Generics.Generic Network.AWS.ELBV2.Types.LoadBalancerAddress.LoadBalancerAddress
instance GHC.Show.Show Network.AWS.ELBV2.Types.LoadBalancerAddress.LoadBalancerAddress
instance GHC.Read.Read Network.AWS.ELBV2.Types.LoadBalancerAddress.LoadBalancerAddress
instance GHC.Classes.Eq Network.AWS.ELBV2.Types.LoadBalancerAddress.LoadBalancerAddress
instance Network.AWS.Data.XML.FromXML Network.AWS.ELBV2.Types.LoadBalancerAddress.LoadBalancerAddress
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.Types.LoadBalancerAddress.LoadBalancerAddress
instance Control.DeepSeq.NFData Network.AWS.ELBV2.Types.LoadBalancerAddress.LoadBalancerAddress


module Network.AWS.ELBV2.Types.AvailabilityZone

-- | Information about an Availability Zone.
--   
--   <i>See:</i> <a>newAvailabilityZone</a> smart constructor.
data AvailabilityZone
AvailabilityZone' :: Maybe Text -> Maybe Text -> Maybe [LoadBalancerAddress] -> Maybe Text -> AvailabilityZone

-- | The ID of the subnet. You can specify one subnet per Availability
--   Zone.
[$sel:subnetId:AvailabilityZone'] :: AvailabilityZone -> Maybe Text

-- | The name of the Availability Zone.
[$sel:zoneName:AvailabilityZone'] :: AvailabilityZone -> Maybe Text

-- | <ul>
--   <li><i>Network Load Balancers</i> If you need static IP addresses for
--   your load balancer, you can specify one Elastic IP address per
--   Availability Zone when you create an internal-facing load balancer.
--   For internal load balancers, you can specify a private IP address from
--   the IPv4 range of the subnet.</li>
--   </ul>
[$sel:loadBalancerAddresses:AvailabilityZone'] :: AvailabilityZone -> Maybe [LoadBalancerAddress]

-- | <ul>
--   <li><i>Application Load Balancers on Outposts</i> The ID of the
--   Outpost.</li>
--   </ul>
[$sel:outpostId:AvailabilityZone'] :: AvailabilityZone -> Maybe Text

-- | Create a value of <a>AvailabilityZone</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subnetId:AvailabilityZone'</a>,
--   <a>availabilityZone_subnetId</a> - The ID of the subnet. You can
--   specify one subnet per Availability Zone.
--   
--   <a>$sel:zoneName:AvailabilityZone'</a>,
--   <a>availabilityZone_zoneName</a> - The name of the Availability Zone.
--   
--   <a>$sel:loadBalancerAddresses:AvailabilityZone'</a>,
--   <a>availabilityZone_loadBalancerAddresses</a> - [Network Load
--   Balancers] If you need static IP addresses for your load balancer, you
--   can specify one Elastic IP address per Availability Zone when you
--   create an internal-facing load balancer. For internal load balancers,
--   you can specify a private IP address from the IPv4 range of the
--   subnet.
--   
--   <a>$sel:outpostId:AvailabilityZone'</a>,
--   <a>availabilityZone_outpostId</a> - [Application Load Balancers on
--   Outposts] The ID of the Outpost.
newAvailabilityZone :: AvailabilityZone

-- | The ID of the subnet. You can specify one subnet per Availability
--   Zone.
availabilityZone_subnetId :: Lens' AvailabilityZone (Maybe Text)

-- | The name of the Availability Zone.
availabilityZone_zoneName :: Lens' AvailabilityZone (Maybe Text)

-- | <ul>
--   <li><i>Network Load Balancers</i> If you need static IP addresses for
--   your load balancer, you can specify one Elastic IP address per
--   Availability Zone when you create an internal-facing load balancer.
--   For internal load balancers, you can specify a private IP address from
--   the IPv4 range of the subnet.</li>
--   </ul>
availabilityZone_loadBalancerAddresses :: Lens' AvailabilityZone (Maybe [LoadBalancerAddress])

-- | <ul>
--   <li><i>Application Load Balancers on Outposts</i> The ID of the
--   Outpost.</li>
--   </ul>
availabilityZone_outpostId :: Lens' AvailabilityZone (Maybe Text)
instance GHC.Generics.Generic Network.AWS.ELBV2.Types.AvailabilityZone.AvailabilityZone
instance GHC.Show.Show Network.AWS.ELBV2.Types.AvailabilityZone.AvailabilityZone
instance GHC.Read.Read Network.AWS.ELBV2.Types.AvailabilityZone.AvailabilityZone
instance GHC.Classes.Eq Network.AWS.ELBV2.Types.AvailabilityZone.AvailabilityZone
instance Network.AWS.Data.XML.FromXML Network.AWS.ELBV2.Types.AvailabilityZone.AvailabilityZone
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.Types.AvailabilityZone.AvailabilityZone
instance Control.DeepSeq.NFData Network.AWS.ELBV2.Types.AvailabilityZone.AvailabilityZone


module Network.AWS.ELBV2.Types.LoadBalancerAttribute

-- | Information about a load balancer attribute.
--   
--   <i>See:</i> <a>newLoadBalancerAttribute</a> smart constructor.
data LoadBalancerAttribute
LoadBalancerAttribute' :: Maybe Text -> Maybe Text -> LoadBalancerAttribute

-- | The value of the attribute.
[$sel:value:LoadBalancerAttribute'] :: LoadBalancerAttribute -> Maybe Text

-- | The name of the attribute.
--   
--   The following attribute is supported by all load balancers:
--   
--   <ul>
--   <li><tt>deletion_protection.enabled</tt> - Indicates whether deletion
--   protection is enabled. The value is <tt>true</tt> or <tt>false</tt>.
--   The default is <tt>false</tt>.</li>
--   </ul>
--   
--   The following attributes are supported by both Application Load
--   Balancers and Network Load Balancers:
--   
--   <ul>
--   <li><tt>access_logs.s3.enabled</tt> - Indicates whether access logs
--   are enabled. The value is <tt>true</tt> or <tt>false</tt>. The default
--   is <tt>false</tt>.</li>
--   <li><tt>access_logs.s3.bucket</tt> - The name of the S3 bucket for the
--   access logs. This attribute is required if access logs are enabled.
--   The bucket must exist in the same region as the load balancer and have
--   a bucket policy that grants Elastic Load Balancing permissions to
--   write to the bucket.</li>
--   <li><tt>access_logs.s3.prefix</tt> - The prefix for the location in
--   the S3 bucket for the access logs.</li>
--   </ul>
--   
--   The following attributes are supported by only Application Load
--   Balancers:
--   
--   <ul>
--   <li><tt>idle_timeout.timeout_seconds</tt> - The idle timeout value, in
--   seconds. The valid range is 1-4000 seconds. The default is 60
--   seconds.</li>
--   <li><tt>routing.http.desync_mitigation_mode</tt> - Determines how the
--   load balancer handles requests that might pose a security risk to your
--   application. The possible values are <tt>monitor</tt>,
--   <tt>defensive</tt>, and <tt>strictest</tt>. The default is
--   <tt>defensive</tt>.</li>
--   <li><tt>routing.http.drop_invalid_header_fields.enabled</tt> -
--   Indicates whether HTTP headers with invalid header fields are removed
--   by the load balancer (<tt>true</tt>) or routed to targets
--   (<tt>false</tt>). The default is <tt>false</tt>.</li>
--   <li><tt>routing.http.x_amzn_tls_version_and_cipher_suite.enabled</tt>
--   - Indicates whether the two headers (<tt>x-amzn-tls-version</tt> and
--   <tt>x-amzn-tls-cipher-suite</tt>), which contain information about the
--   negotiated TLS version and cipher suite, are added to the client
--   request before sending it to the target. The
--   <tt>x-amzn-tls-version</tt> header has information about the TLS
--   protocol version negotiated with the client, and the
--   <tt>x-amzn-tls-cipher-suite</tt> header has information about the
--   cipher suite negotiated with the client. Both headers are in OpenSSL
--   format. The possible values for the attribute are <tt>true</tt> and
--   <tt>false</tt>. The default is <tt>false</tt>.</li>
--   <li><tt>routing.http.xff_client_port.enabled</tt> - Indicates whether
--   the <tt>X-Forwarded-For</tt> header should preserve the source port
--   that the client used to connect to the load balancer. The possible
--   values are <tt>true</tt> and <tt>false</tt>. The default is
--   <tt>false</tt>.</li>
--   <li><tt>routing.http2.enabled</tt> - Indicates whether HTTP/2 is
--   enabled. The possible values are <tt>true</tt> and <tt>false</tt>. The
--   default is <tt>true</tt>. Elastic Load Balancing requires that message
--   header names contain only alphanumeric characters and hyphens.</li>
--   <li><tt>waf.fail_open.enabled</tt> - Indicates whether to allow a
--   WAF-enabled load balancer to route requests to targets if it is unable
--   to forward the request to Amazon Web Services WAF. The possible values
--   are <tt>true</tt> and <tt>false</tt>. The default is
--   <tt>false</tt>.</li>
--   </ul>
--   
--   The following attribute is supported by Network Load Balancers and
--   Gateway Load Balancers:
--   
--   <ul>
--   <li><tt>load_balancing.cross_zone.enabled</tt> - Indicates whether
--   cross-zone load balancing is enabled. The possible values are
--   <tt>true</tt> and <tt>false</tt>. The default is <tt>false</tt>.</li>
--   </ul>
[$sel:key:LoadBalancerAttribute'] :: LoadBalancerAttribute -> Maybe Text

-- | Create a value of <a>LoadBalancerAttribute</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:LoadBalancerAttribute'</a>,
--   <a>loadBalancerAttribute_value</a> - The value of the attribute.
--   
--   <a>$sel:key:LoadBalancerAttribute'</a>,
--   <a>loadBalancerAttribute_key</a> - The name of the attribute.
--   
--   The following attribute is supported by all load balancers:
--   
--   <ul>
--   <li><tt>deletion_protection.enabled</tt> - Indicates whether deletion
--   protection is enabled. The value is <tt>true</tt> or <tt>false</tt>.
--   The default is <tt>false</tt>.</li>
--   </ul>
--   
--   The following attributes are supported by both Application Load
--   Balancers and Network Load Balancers:
--   
--   <ul>
--   <li><tt>access_logs.s3.enabled</tt> - Indicates whether access logs
--   are enabled. The value is <tt>true</tt> or <tt>false</tt>. The default
--   is <tt>false</tt>.</li>
--   <li><tt>access_logs.s3.bucket</tt> - The name of the S3 bucket for the
--   access logs. This attribute is required if access logs are enabled.
--   The bucket must exist in the same region as the load balancer and have
--   a bucket policy that grants Elastic Load Balancing permissions to
--   write to the bucket.</li>
--   <li><tt>access_logs.s3.prefix</tt> - The prefix for the location in
--   the S3 bucket for the access logs.</li>
--   </ul>
--   
--   The following attributes are supported by only Application Load
--   Balancers:
--   
--   <ul>
--   <li><tt>idle_timeout.timeout_seconds</tt> - The idle timeout value, in
--   seconds. The valid range is 1-4000 seconds. The default is 60
--   seconds.</li>
--   <li><tt>routing.http.desync_mitigation_mode</tt> - Determines how the
--   load balancer handles requests that might pose a security risk to your
--   application. The possible values are <tt>monitor</tt>,
--   <tt>defensive</tt>, and <tt>strictest</tt>. The default is
--   <tt>defensive</tt>.</li>
--   <li><tt>routing.http.drop_invalid_header_fields.enabled</tt> -
--   Indicates whether HTTP headers with invalid header fields are removed
--   by the load balancer (<tt>true</tt>) or routed to targets
--   (<tt>false</tt>). The default is <tt>false</tt>.</li>
--   <li><tt>routing.http.x_amzn_tls_version_and_cipher_suite.enabled</tt>
--   - Indicates whether the two headers (<tt>x-amzn-tls-version</tt> and
--   <tt>x-amzn-tls-cipher-suite</tt>), which contain information about the
--   negotiated TLS version and cipher suite, are added to the client
--   request before sending it to the target. The
--   <tt>x-amzn-tls-version</tt> header has information about the TLS
--   protocol version negotiated with the client, and the
--   <tt>x-amzn-tls-cipher-suite</tt> header has information about the
--   cipher suite negotiated with the client. Both headers are in OpenSSL
--   format. The possible values for the attribute are <tt>true</tt> and
--   <tt>false</tt>. The default is <tt>false</tt>.</li>
--   <li><tt>routing.http.xff_client_port.enabled</tt> - Indicates whether
--   the <tt>X-Forwarded-For</tt> header should preserve the source port
--   that the client used to connect to the load balancer. The possible
--   values are <tt>true</tt> and <tt>false</tt>. The default is
--   <tt>false</tt>.</li>
--   <li><tt>routing.http2.enabled</tt> - Indicates whether HTTP/2 is
--   enabled. The possible values are <tt>true</tt> and <tt>false</tt>. The
--   default is <tt>true</tt>. Elastic Load Balancing requires that message
--   header names contain only alphanumeric characters and hyphens.</li>
--   <li><tt>waf.fail_open.enabled</tt> - Indicates whether to allow a
--   WAF-enabled load balancer to route requests to targets if it is unable
--   to forward the request to Amazon Web Services WAF. The possible values
--   are <tt>true</tt> and <tt>false</tt>. The default is
--   <tt>false</tt>.</li>
--   </ul>
--   
--   The following attribute is supported by Network Load Balancers and
--   Gateway Load Balancers:
--   
--   <ul>
--   <li><tt>load_balancing.cross_zone.enabled</tt> - Indicates whether
--   cross-zone load balancing is enabled. The possible values are
--   <tt>true</tt> and <tt>false</tt>. The default is <tt>false</tt>.</li>
--   </ul>
newLoadBalancerAttribute :: LoadBalancerAttribute

-- | The value of the attribute.
loadBalancerAttribute_value :: Lens' LoadBalancerAttribute (Maybe Text)

-- | The name of the attribute.
--   
--   The following attribute is supported by all load balancers:
--   
--   <ul>
--   <li><tt>deletion_protection.enabled</tt> - Indicates whether deletion
--   protection is enabled. The value is <tt>true</tt> or <tt>false</tt>.
--   The default is <tt>false</tt>.</li>
--   </ul>
--   
--   The following attributes are supported by both Application Load
--   Balancers and Network Load Balancers:
--   
--   <ul>
--   <li><tt>access_logs.s3.enabled</tt> - Indicates whether access logs
--   are enabled. The value is <tt>true</tt> or <tt>false</tt>. The default
--   is <tt>false</tt>.</li>
--   <li><tt>access_logs.s3.bucket</tt> - The name of the S3 bucket for the
--   access logs. This attribute is required if access logs are enabled.
--   The bucket must exist in the same region as the load balancer and have
--   a bucket policy that grants Elastic Load Balancing permissions to
--   write to the bucket.</li>
--   <li><tt>access_logs.s3.prefix</tt> - The prefix for the location in
--   the S3 bucket for the access logs.</li>
--   </ul>
--   
--   The following attributes are supported by only Application Load
--   Balancers:
--   
--   <ul>
--   <li><tt>idle_timeout.timeout_seconds</tt> - The idle timeout value, in
--   seconds. The valid range is 1-4000 seconds. The default is 60
--   seconds.</li>
--   <li><tt>routing.http.desync_mitigation_mode</tt> - Determines how the
--   load balancer handles requests that might pose a security risk to your
--   application. The possible values are <tt>monitor</tt>,
--   <tt>defensive</tt>, and <tt>strictest</tt>. The default is
--   <tt>defensive</tt>.</li>
--   <li><tt>routing.http.drop_invalid_header_fields.enabled</tt> -
--   Indicates whether HTTP headers with invalid header fields are removed
--   by the load balancer (<tt>true</tt>) or routed to targets
--   (<tt>false</tt>). The default is <tt>false</tt>.</li>
--   <li><tt>routing.http.x_amzn_tls_version_and_cipher_suite.enabled</tt>
--   - Indicates whether the two headers (<tt>x-amzn-tls-version</tt> and
--   <tt>x-amzn-tls-cipher-suite</tt>), which contain information about the
--   negotiated TLS version and cipher suite, are added to the client
--   request before sending it to the target. The
--   <tt>x-amzn-tls-version</tt> header has information about the TLS
--   protocol version negotiated with the client, and the
--   <tt>x-amzn-tls-cipher-suite</tt> header has information about the
--   cipher suite negotiated with the client. Both headers are in OpenSSL
--   format. The possible values for the attribute are <tt>true</tt> and
--   <tt>false</tt>. The default is <tt>false</tt>.</li>
--   <li><tt>routing.http.xff_client_port.enabled</tt> - Indicates whether
--   the <tt>X-Forwarded-For</tt> header should preserve the source port
--   that the client used to connect to the load balancer. The possible
--   values are <tt>true</tt> and <tt>false</tt>. The default is
--   <tt>false</tt>.</li>
--   <li><tt>routing.http2.enabled</tt> - Indicates whether HTTP/2 is
--   enabled. The possible values are <tt>true</tt> and <tt>false</tt>. The
--   default is <tt>true</tt>. Elastic Load Balancing requires that message
--   header names contain only alphanumeric characters and hyphens.</li>
--   <li><tt>waf.fail_open.enabled</tt> - Indicates whether to allow a
--   WAF-enabled load balancer to route requests to targets if it is unable
--   to forward the request to Amazon Web Services WAF. The possible values
--   are <tt>true</tt> and <tt>false</tt>. The default is
--   <tt>false</tt>.</li>
--   </ul>
--   
--   The following attribute is supported by Network Load Balancers and
--   Gateway Load Balancers:
--   
--   <ul>
--   <li><tt>load_balancing.cross_zone.enabled</tt> - Indicates whether
--   cross-zone load balancing is enabled. The possible values are
--   <tt>true</tt> and <tt>false</tt>. The default is <tt>false</tt>.</li>
--   </ul>
loadBalancerAttribute_key :: Lens' LoadBalancerAttribute (Maybe Text)
instance GHC.Generics.Generic Network.AWS.ELBV2.Types.LoadBalancerAttribute.LoadBalancerAttribute
instance GHC.Show.Show Network.AWS.ELBV2.Types.LoadBalancerAttribute.LoadBalancerAttribute
instance GHC.Read.Read Network.AWS.ELBV2.Types.LoadBalancerAttribute.LoadBalancerAttribute
instance GHC.Classes.Eq Network.AWS.ELBV2.Types.LoadBalancerAttribute.LoadBalancerAttribute
instance Network.AWS.Data.XML.FromXML Network.AWS.ELBV2.Types.LoadBalancerAttribute.LoadBalancerAttribute
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.Types.LoadBalancerAttribute.LoadBalancerAttribute
instance Control.DeepSeq.NFData Network.AWS.ELBV2.Types.LoadBalancerAttribute.LoadBalancerAttribute
instance Network.AWS.Data.Query.ToQuery Network.AWS.ELBV2.Types.LoadBalancerAttribute.LoadBalancerAttribute


module Network.AWS.ELBV2.Types.LoadBalancerSchemeEnum
newtype LoadBalancerSchemeEnum
LoadBalancerSchemeEnum' :: Text -> LoadBalancerSchemeEnum
[fromLoadBalancerSchemeEnum] :: LoadBalancerSchemeEnum -> Text
pattern LoadBalancerSchemeEnum_Internal :: LoadBalancerSchemeEnum
pattern LoadBalancerSchemeEnum_Internet_facing :: LoadBalancerSchemeEnum
instance Network.AWS.Data.XML.ToXML Network.AWS.ELBV2.Types.LoadBalancerSchemeEnum.LoadBalancerSchemeEnum
instance Network.AWS.Data.XML.FromXML Network.AWS.ELBV2.Types.LoadBalancerSchemeEnum.LoadBalancerSchemeEnum
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.ELBV2.Types.LoadBalancerSchemeEnum.LoadBalancerSchemeEnum
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ELBV2.Types.LoadBalancerSchemeEnum.LoadBalancerSchemeEnum
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.ELBV2.Types.LoadBalancerSchemeEnum.LoadBalancerSchemeEnum
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ELBV2.Types.LoadBalancerSchemeEnum.LoadBalancerSchemeEnum
instance Network.AWS.Data.Query.ToQuery Network.AWS.ELBV2.Types.LoadBalancerSchemeEnum.LoadBalancerSchemeEnum
instance Network.AWS.Data.Headers.ToHeader Network.AWS.ELBV2.Types.LoadBalancerSchemeEnum.LoadBalancerSchemeEnum
instance Network.AWS.Data.Log.ToLog Network.AWS.ELBV2.Types.LoadBalancerSchemeEnum.LoadBalancerSchemeEnum
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.ELBV2.Types.LoadBalancerSchemeEnum.LoadBalancerSchemeEnum
instance Network.AWS.Data.Text.ToText Network.AWS.ELBV2.Types.LoadBalancerSchemeEnum.LoadBalancerSchemeEnum
instance Network.AWS.Data.Text.FromText Network.AWS.ELBV2.Types.LoadBalancerSchemeEnum.LoadBalancerSchemeEnum
instance Control.DeepSeq.NFData Network.AWS.ELBV2.Types.LoadBalancerSchemeEnum.LoadBalancerSchemeEnum
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.Types.LoadBalancerSchemeEnum.LoadBalancerSchemeEnum
instance GHC.Generics.Generic Network.AWS.ELBV2.Types.LoadBalancerSchemeEnum.LoadBalancerSchemeEnum
instance GHC.Classes.Ord Network.AWS.ELBV2.Types.LoadBalancerSchemeEnum.LoadBalancerSchemeEnum
instance GHC.Classes.Eq Network.AWS.ELBV2.Types.LoadBalancerSchemeEnum.LoadBalancerSchemeEnum
instance GHC.Read.Read Network.AWS.ELBV2.Types.LoadBalancerSchemeEnum.LoadBalancerSchemeEnum
instance GHC.Show.Show Network.AWS.ELBV2.Types.LoadBalancerSchemeEnum.LoadBalancerSchemeEnum


module Network.AWS.ELBV2.Types.LoadBalancerStateEnum
newtype LoadBalancerStateEnum
LoadBalancerStateEnum' :: Text -> LoadBalancerStateEnum
[fromLoadBalancerStateEnum] :: LoadBalancerStateEnum -> Text
pattern LoadBalancerStateEnum_Active :: LoadBalancerStateEnum
pattern LoadBalancerStateEnum_Active_impaired :: LoadBalancerStateEnum
pattern LoadBalancerStateEnum_Failed :: LoadBalancerStateEnum
pattern LoadBalancerStateEnum_Provisioning :: LoadBalancerStateEnum
instance Network.AWS.Data.XML.ToXML Network.AWS.ELBV2.Types.LoadBalancerStateEnum.LoadBalancerStateEnum
instance Network.AWS.Data.XML.FromXML Network.AWS.ELBV2.Types.LoadBalancerStateEnum.LoadBalancerStateEnum
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.ELBV2.Types.LoadBalancerStateEnum.LoadBalancerStateEnum
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ELBV2.Types.LoadBalancerStateEnum.LoadBalancerStateEnum
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.ELBV2.Types.LoadBalancerStateEnum.LoadBalancerStateEnum
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ELBV2.Types.LoadBalancerStateEnum.LoadBalancerStateEnum
instance Network.AWS.Data.Query.ToQuery Network.AWS.ELBV2.Types.LoadBalancerStateEnum.LoadBalancerStateEnum
instance Network.AWS.Data.Headers.ToHeader Network.AWS.ELBV2.Types.LoadBalancerStateEnum.LoadBalancerStateEnum
instance Network.AWS.Data.Log.ToLog Network.AWS.ELBV2.Types.LoadBalancerStateEnum.LoadBalancerStateEnum
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.ELBV2.Types.LoadBalancerStateEnum.LoadBalancerStateEnum
instance Network.AWS.Data.Text.ToText Network.AWS.ELBV2.Types.LoadBalancerStateEnum.LoadBalancerStateEnum
instance Network.AWS.Data.Text.FromText Network.AWS.ELBV2.Types.LoadBalancerStateEnum.LoadBalancerStateEnum
instance Control.DeepSeq.NFData Network.AWS.ELBV2.Types.LoadBalancerStateEnum.LoadBalancerStateEnum
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.Types.LoadBalancerStateEnum.LoadBalancerStateEnum
instance GHC.Generics.Generic Network.AWS.ELBV2.Types.LoadBalancerStateEnum.LoadBalancerStateEnum
instance GHC.Classes.Ord Network.AWS.ELBV2.Types.LoadBalancerStateEnum.LoadBalancerStateEnum
instance GHC.Classes.Eq Network.AWS.ELBV2.Types.LoadBalancerStateEnum.LoadBalancerStateEnum
instance GHC.Read.Read Network.AWS.ELBV2.Types.LoadBalancerStateEnum.LoadBalancerStateEnum
instance GHC.Show.Show Network.AWS.ELBV2.Types.LoadBalancerStateEnum.LoadBalancerStateEnum


module Network.AWS.ELBV2.Types.LoadBalancerState

-- | Information about the state of the load balancer.
--   
--   <i>See:</i> <a>newLoadBalancerState</a> smart constructor.
data LoadBalancerState
LoadBalancerState' :: Maybe Text -> Maybe LoadBalancerStateEnum -> LoadBalancerState

-- | A description of the state.
[$sel:reason:LoadBalancerState'] :: LoadBalancerState -> Maybe Text

-- | The state code. The initial state of the load balancer is
--   <tt>provisioning</tt>. After the load balancer is fully set up and
--   ready to route traffic, its state is <tt>active</tt>. If load balancer
--   is routing traffic but does not have the resources it needs to scale,
--   its state is<tt>active_impaired</tt>. If the load balancer could not
--   be set up, its state is <tt>failed</tt>.
[$sel:code:LoadBalancerState'] :: LoadBalancerState -> Maybe LoadBalancerStateEnum

-- | Create a value of <a>LoadBalancerState</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:reason:LoadBalancerState'</a>, <a>loadBalancerState_reason</a>
--   - A description of the state.
--   
--   <a>$sel:code:LoadBalancerState'</a>, <a>loadBalancerState_code</a> -
--   The state code. The initial state of the load balancer is
--   <tt>provisioning</tt>. After the load balancer is fully set up and
--   ready to route traffic, its state is <tt>active</tt>. If load balancer
--   is routing traffic but does not have the resources it needs to scale,
--   its state is<tt>active_impaired</tt>. If the load balancer could not
--   be set up, its state is <tt>failed</tt>.
newLoadBalancerState :: LoadBalancerState

-- | A description of the state.
loadBalancerState_reason :: Lens' LoadBalancerState (Maybe Text)

-- | The state code. The initial state of the load balancer is
--   <tt>provisioning</tt>. After the load balancer is fully set up and
--   ready to route traffic, its state is <tt>active</tt>. If load balancer
--   is routing traffic but does not have the resources it needs to scale,
--   its state is<tt>active_impaired</tt>. If the load balancer could not
--   be set up, its state is <tt>failed</tt>.
loadBalancerState_code :: Lens' LoadBalancerState (Maybe LoadBalancerStateEnum)
instance GHC.Generics.Generic Network.AWS.ELBV2.Types.LoadBalancerState.LoadBalancerState
instance GHC.Show.Show Network.AWS.ELBV2.Types.LoadBalancerState.LoadBalancerState
instance GHC.Read.Read Network.AWS.ELBV2.Types.LoadBalancerState.LoadBalancerState
instance GHC.Classes.Eq Network.AWS.ELBV2.Types.LoadBalancerState.LoadBalancerState
instance Network.AWS.Data.XML.FromXML Network.AWS.ELBV2.Types.LoadBalancerState.LoadBalancerState
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.Types.LoadBalancerState.LoadBalancerState
instance Control.DeepSeq.NFData Network.AWS.ELBV2.Types.LoadBalancerState.LoadBalancerState


module Network.AWS.ELBV2.Types.LoadBalancerTypeEnum
newtype LoadBalancerTypeEnum
LoadBalancerTypeEnum' :: Text -> LoadBalancerTypeEnum
[fromLoadBalancerTypeEnum] :: LoadBalancerTypeEnum -> Text
pattern LoadBalancerTypeEnum_Application :: LoadBalancerTypeEnum
pattern LoadBalancerTypeEnum_Gateway :: LoadBalancerTypeEnum
pattern LoadBalancerTypeEnum_Network :: LoadBalancerTypeEnum
instance Network.AWS.Data.XML.ToXML Network.AWS.ELBV2.Types.LoadBalancerTypeEnum.LoadBalancerTypeEnum
instance Network.AWS.Data.XML.FromXML Network.AWS.ELBV2.Types.LoadBalancerTypeEnum.LoadBalancerTypeEnum
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.ELBV2.Types.LoadBalancerTypeEnum.LoadBalancerTypeEnum
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ELBV2.Types.LoadBalancerTypeEnum.LoadBalancerTypeEnum
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.ELBV2.Types.LoadBalancerTypeEnum.LoadBalancerTypeEnum
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ELBV2.Types.LoadBalancerTypeEnum.LoadBalancerTypeEnum
instance Network.AWS.Data.Query.ToQuery Network.AWS.ELBV2.Types.LoadBalancerTypeEnum.LoadBalancerTypeEnum
instance Network.AWS.Data.Headers.ToHeader Network.AWS.ELBV2.Types.LoadBalancerTypeEnum.LoadBalancerTypeEnum
instance Network.AWS.Data.Log.ToLog Network.AWS.ELBV2.Types.LoadBalancerTypeEnum.LoadBalancerTypeEnum
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.ELBV2.Types.LoadBalancerTypeEnum.LoadBalancerTypeEnum
instance Network.AWS.Data.Text.ToText Network.AWS.ELBV2.Types.LoadBalancerTypeEnum.LoadBalancerTypeEnum
instance Network.AWS.Data.Text.FromText Network.AWS.ELBV2.Types.LoadBalancerTypeEnum.LoadBalancerTypeEnum
instance Control.DeepSeq.NFData Network.AWS.ELBV2.Types.LoadBalancerTypeEnum.LoadBalancerTypeEnum
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.Types.LoadBalancerTypeEnum.LoadBalancerTypeEnum
instance GHC.Generics.Generic Network.AWS.ELBV2.Types.LoadBalancerTypeEnum.LoadBalancerTypeEnum
instance GHC.Classes.Ord Network.AWS.ELBV2.Types.LoadBalancerTypeEnum.LoadBalancerTypeEnum
instance GHC.Classes.Eq Network.AWS.ELBV2.Types.LoadBalancerTypeEnum.LoadBalancerTypeEnum
instance GHC.Read.Read Network.AWS.ELBV2.Types.LoadBalancerTypeEnum.LoadBalancerTypeEnum
instance GHC.Show.Show Network.AWS.ELBV2.Types.LoadBalancerTypeEnum.LoadBalancerTypeEnum


module Network.AWS.ELBV2.Types.LoadBalancer

-- | Information about a load balancer.
--   
--   <i>See:</i> <a>newLoadBalancer</a> smart constructor.
data LoadBalancer
LoadBalancer' :: Maybe LoadBalancerState -> Maybe [Text] -> Maybe Text -> Maybe ISO8601 -> Maybe Text -> Maybe Text -> Maybe [AvailabilityZone] -> Maybe Text -> Maybe Text -> Maybe IpAddressType -> Maybe LoadBalancerSchemeEnum -> Maybe LoadBalancerTypeEnum -> Maybe Text -> LoadBalancer

-- | The state of the load balancer.
[$sel:state:LoadBalancer'] :: LoadBalancer -> Maybe LoadBalancerState

-- | The IDs of the security groups for the load balancer.
[$sel:securityGroups:LoadBalancer'] :: LoadBalancer -> Maybe [Text]

-- | The name of the load balancer.
[$sel:loadBalancerName:LoadBalancer'] :: LoadBalancer -> Maybe Text

-- | The date and time the load balancer was created.
[$sel:createdTime:LoadBalancer'] :: LoadBalancer -> Maybe ISO8601

-- | The ID of the VPC for the load balancer.
[$sel:vpcId:LoadBalancer'] :: LoadBalancer -> Maybe Text

-- | The ID of the Amazon Route 53 hosted zone associated with the load
--   balancer.
[$sel:canonicalHostedZoneId:LoadBalancer'] :: LoadBalancer -> Maybe Text

-- | The subnets for the load balancer.
[$sel:availabilityZones:LoadBalancer'] :: LoadBalancer -> Maybe [AvailabilityZone]

-- | <ul>
--   <li><i>Application Load Balancers on Outposts</i> The ID of the
--   customer-owned address pool.</li>
--   </ul>
[$sel:customerOwnedIpv4Pool:LoadBalancer'] :: LoadBalancer -> Maybe Text

-- | The Amazon Resource Name (ARN) of the load balancer.
[$sel:loadBalancerArn:LoadBalancer'] :: LoadBalancer -> Maybe Text

-- | The type of IP addresses used by the subnets for your load balancer.
--   The possible values are <tt>ipv4</tt> (for IPv4 addresses) and
--   <tt>dualstack</tt> (for IPv4 and IPv6 addresses).
[$sel:ipAddressType:LoadBalancer'] :: LoadBalancer -> Maybe IpAddressType

-- | The nodes of an Internet-facing load balancer have public IP
--   addresses. The DNS name of an Internet-facing load balancer is
--   publicly resolvable to the public IP addresses of the nodes.
--   Therefore, Internet-facing load balancers can route requests from
--   clients over the internet.
--   
--   The nodes of an internal load balancer have only private IP addresses.
--   The DNS name of an internal load balancer is publicly resolvable to
--   the private IP addresses of the nodes. Therefore, internal load
--   balancers can route requests only from clients with access to the VPC
--   for the load balancer.
[$sel:scheme:LoadBalancer'] :: LoadBalancer -> Maybe LoadBalancerSchemeEnum

-- | The type of load balancer.
[$sel:type':LoadBalancer'] :: LoadBalancer -> Maybe LoadBalancerTypeEnum

-- | The public DNS name of the load balancer.
[$sel:dNSName:LoadBalancer'] :: LoadBalancer -> Maybe Text

-- | Create a value of <a>LoadBalancer</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:LoadBalancer'</a>, <a>loadBalancer_state</a> - The state
--   of the load balancer.
--   
--   <a>$sel:securityGroups:LoadBalancer'</a>,
--   <a>loadBalancer_securityGroups</a> - The IDs of the security groups
--   for the load balancer.
--   
--   <a>$sel:loadBalancerName:LoadBalancer'</a>,
--   <a>loadBalancer_loadBalancerName</a> - The name of the load balancer.
--   
--   <a>$sel:createdTime:LoadBalancer'</a>, <a>loadBalancer_createdTime</a>
--   - The date and time the load balancer was created.
--   
--   <a>$sel:vpcId:LoadBalancer'</a>, <a>loadBalancer_vpcId</a> - The ID of
--   the VPC for the load balancer.
--   
--   <a>$sel:canonicalHostedZoneId:LoadBalancer'</a>,
--   <a>loadBalancer_canonicalHostedZoneId</a> - The ID of the Amazon Route
--   53 hosted zone associated with the load balancer.
--   
--   <a>$sel:availabilityZones:LoadBalancer'</a>,
--   <a>loadBalancer_availabilityZones</a> - The subnets for the load
--   balancer.
--   
--   <a>$sel:customerOwnedIpv4Pool:LoadBalancer'</a>,
--   <a>loadBalancer_customerOwnedIpv4Pool</a> - [Application Load
--   Balancers on Outposts] The ID of the customer-owned address pool.
--   
--   <a>$sel:loadBalancerArn:LoadBalancer'</a>,
--   <a>loadBalancer_loadBalancerArn</a> - The Amazon Resource Name (ARN)
--   of the load balancer.
--   
--   <a>$sel:ipAddressType:LoadBalancer'</a>,
--   <a>loadBalancer_ipAddressType</a> - The type of IP addresses used by
--   the subnets for your load balancer. The possible values are
--   <tt>ipv4</tt> (for IPv4 addresses) and <tt>dualstack</tt> (for IPv4
--   and IPv6 addresses).
--   
--   <a>$sel:scheme:LoadBalancer'</a>, <a>loadBalancer_scheme</a> - The
--   nodes of an Internet-facing load balancer have public IP addresses.
--   The DNS name of an Internet-facing load balancer is publicly
--   resolvable to the public IP addresses of the nodes. Therefore,
--   Internet-facing load balancers can route requests from clients over
--   the internet.
--   
--   The nodes of an internal load balancer have only private IP addresses.
--   The DNS name of an internal load balancer is publicly resolvable to
--   the private IP addresses of the nodes. Therefore, internal load
--   balancers can route requests only from clients with access to the VPC
--   for the load balancer.
--   
--   <a>$sel:type':LoadBalancer'</a>, <a>loadBalancer_type</a> - The type
--   of load balancer.
--   
--   <a>$sel:dNSName:LoadBalancer'</a>, <a>loadBalancer_dNSName</a> - The
--   public DNS name of the load balancer.
newLoadBalancer :: LoadBalancer

-- | The state of the load balancer.
loadBalancer_state :: Lens' LoadBalancer (Maybe LoadBalancerState)

-- | The IDs of the security groups for the load balancer.
loadBalancer_securityGroups :: Lens' LoadBalancer (Maybe [Text])

-- | The name of the load balancer.
loadBalancer_loadBalancerName :: Lens' LoadBalancer (Maybe Text)

-- | The date and time the load balancer was created.
loadBalancer_createdTime :: Lens' LoadBalancer (Maybe UTCTime)

-- | The ID of the VPC for the load balancer.
loadBalancer_vpcId :: Lens' LoadBalancer (Maybe Text)

-- | The ID of the Amazon Route 53 hosted zone associated with the load
--   balancer.
loadBalancer_canonicalHostedZoneId :: Lens' LoadBalancer (Maybe Text)

-- | The subnets for the load balancer.
loadBalancer_availabilityZones :: Lens' LoadBalancer (Maybe [AvailabilityZone])

-- | <ul>
--   <li><i>Application Load Balancers on Outposts</i> The ID of the
--   customer-owned address pool.</li>
--   </ul>
loadBalancer_customerOwnedIpv4Pool :: Lens' LoadBalancer (Maybe Text)

-- | The Amazon Resource Name (ARN) of the load balancer.
loadBalancer_loadBalancerArn :: Lens' LoadBalancer (Maybe Text)

-- | The type of IP addresses used by the subnets for your load balancer.
--   The possible values are <tt>ipv4</tt> (for IPv4 addresses) and
--   <tt>dualstack</tt> (for IPv4 and IPv6 addresses).
loadBalancer_ipAddressType :: Lens' LoadBalancer (Maybe IpAddressType)

-- | The nodes of an Internet-facing load balancer have public IP
--   addresses. The DNS name of an Internet-facing load balancer is
--   publicly resolvable to the public IP addresses of the nodes.
--   Therefore, Internet-facing load balancers can route requests from
--   clients over the internet.
--   
--   The nodes of an internal load balancer have only private IP addresses.
--   The DNS name of an internal load balancer is publicly resolvable to
--   the private IP addresses of the nodes. Therefore, internal load
--   balancers can route requests only from clients with access to the VPC
--   for the load balancer.
loadBalancer_scheme :: Lens' LoadBalancer (Maybe LoadBalancerSchemeEnum)

-- | The type of load balancer.
loadBalancer_type :: Lens' LoadBalancer (Maybe LoadBalancerTypeEnum)

-- | The public DNS name of the load balancer.
loadBalancer_dNSName :: Lens' LoadBalancer (Maybe Text)
instance GHC.Generics.Generic Network.AWS.ELBV2.Types.LoadBalancer.LoadBalancer
instance GHC.Show.Show Network.AWS.ELBV2.Types.LoadBalancer.LoadBalancer
instance GHC.Read.Read Network.AWS.ELBV2.Types.LoadBalancer.LoadBalancer
instance GHC.Classes.Eq Network.AWS.ELBV2.Types.LoadBalancer.LoadBalancer
instance Network.AWS.Data.XML.FromXML Network.AWS.ELBV2.Types.LoadBalancer.LoadBalancer
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.Types.LoadBalancer.LoadBalancer
instance Control.DeepSeq.NFData Network.AWS.ELBV2.Types.LoadBalancer.LoadBalancer


module Network.AWS.ELBV2.Types.Matcher

-- | The codes to use when checking for a successful response from a
--   target. If the protocol version is gRPC, these are gRPC codes.
--   Otherwise, these are HTTP codes.
--   
--   <i>See:</i> <a>newMatcher</a> smart constructor.
data Matcher
Matcher' :: Maybe Text -> Maybe Text -> Matcher

-- | For Application Load Balancers, you can specify values between 200 and
--   499, and the default value is 200. You can specify multiple values
--   (for example, "200,202") or a range of values (for example,
--   "200-299").
--   
--   For Network Load Balancers and Gateway Load Balancers, this must be
--   "200–399".
--   
--   Note that when using shorthand syntax, some values such as commas need
--   to be escaped.
[$sel:httpCode:Matcher'] :: Matcher -> Maybe Text

-- | You can specify values between 0 and 99. You can specify multiple
--   values (for example, "0,1") or a range of values (for example, "0-5").
--   The default value is 12.
[$sel:grpcCode:Matcher'] :: Matcher -> Maybe Text

-- | Create a value of <a>Matcher</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpCode:Matcher'</a>, <a>matcher_httpCode</a> - For
--   Application Load Balancers, you can specify values between 200 and
--   499, and the default value is 200. You can specify multiple values
--   (for example, "200,202") or a range of values (for example,
--   "200-299").
--   
--   For Network Load Balancers and Gateway Load Balancers, this must be
--   "200–399".
--   
--   Note that when using shorthand syntax, some values such as commas need
--   to be escaped.
--   
--   <a>$sel:grpcCode:Matcher'</a>, <a>matcher_grpcCode</a> - You can
--   specify values between 0 and 99. You can specify multiple values (for
--   example, "0,1") or a range of values (for example, "0-5"). The default
--   value is 12.
newMatcher :: Matcher

-- | For Application Load Balancers, you can specify values between 200 and
--   499, and the default value is 200. You can specify multiple values
--   (for example, "200,202") or a range of values (for example,
--   "200-299").
--   
--   For Network Load Balancers and Gateway Load Balancers, this must be
--   "200–399".
--   
--   Note that when using shorthand syntax, some values such as commas need
--   to be escaped.
matcher_httpCode :: Lens' Matcher (Maybe Text)

-- | You can specify values between 0 and 99. You can specify multiple
--   values (for example, "0,1") or a range of values (for example, "0-5").
--   The default value is 12.
matcher_grpcCode :: Lens' Matcher (Maybe Text)
instance GHC.Generics.Generic Network.AWS.ELBV2.Types.Matcher.Matcher
instance GHC.Show.Show Network.AWS.ELBV2.Types.Matcher.Matcher
instance GHC.Read.Read Network.AWS.ELBV2.Types.Matcher.Matcher
instance GHC.Classes.Eq Network.AWS.ELBV2.Types.Matcher.Matcher
instance Network.AWS.Data.XML.FromXML Network.AWS.ELBV2.Types.Matcher.Matcher
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.Types.Matcher.Matcher
instance Control.DeepSeq.NFData Network.AWS.ELBV2.Types.Matcher.Matcher
instance Network.AWS.Data.Query.ToQuery Network.AWS.ELBV2.Types.Matcher.Matcher


module Network.AWS.ELBV2.Types.PathPatternConditionConfig

-- | Information about a path pattern condition.
--   
--   <i>See:</i> <a>newPathPatternConditionConfig</a> smart constructor.
data PathPatternConditionConfig
PathPatternConditionConfig' :: Maybe [Text] -> PathPatternConditionConfig

-- | One or more path patterns to compare against the request URL. The
--   maximum size of each string is 128 characters. The comparison is case
--   sensitive. The following wildcard characters are supported: * (matches
--   0 or more characters) and ? (matches exactly 1 character).
--   
--   If you specify multiple strings, the condition is satisfied if one of
--   them matches the request URL. The path pattern is compared only to the
--   path of the URL, not to its query string. To compare against the query
--   string, use QueryStringConditionConfig.
[$sel:values:PathPatternConditionConfig'] :: PathPatternConditionConfig -> Maybe [Text]

-- | Create a value of <a>PathPatternConditionConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:values:PathPatternConditionConfig'</a>,
--   <a>pathPatternConditionConfig_values</a> - One or more path patterns
--   to compare against the request URL. The maximum size of each string is
--   128 characters. The comparison is case sensitive. The following
--   wildcard characters are supported: * (matches 0 or more characters)
--   and ? (matches exactly 1 character).
--   
--   If you specify multiple strings, the condition is satisfied if one of
--   them matches the request URL. The path pattern is compared only to the
--   path of the URL, not to its query string. To compare against the query
--   string, use QueryStringConditionConfig.
newPathPatternConditionConfig :: PathPatternConditionConfig

-- | One or more path patterns to compare against the request URL. The
--   maximum size of each string is 128 characters. The comparison is case
--   sensitive. The following wildcard characters are supported: * (matches
--   0 or more characters) and ? (matches exactly 1 character).
--   
--   If you specify multiple strings, the condition is satisfied if one of
--   them matches the request URL. The path pattern is compared only to the
--   path of the URL, not to its query string. To compare against the query
--   string, use QueryStringConditionConfig.
pathPatternConditionConfig_values :: Lens' PathPatternConditionConfig (Maybe [Text])
instance GHC.Generics.Generic Network.AWS.ELBV2.Types.PathPatternConditionConfig.PathPatternConditionConfig
instance GHC.Show.Show Network.AWS.ELBV2.Types.PathPatternConditionConfig.PathPatternConditionConfig
instance GHC.Read.Read Network.AWS.ELBV2.Types.PathPatternConditionConfig.PathPatternConditionConfig
instance GHC.Classes.Eq Network.AWS.ELBV2.Types.PathPatternConditionConfig.PathPatternConditionConfig
instance Network.AWS.Data.XML.FromXML Network.AWS.ELBV2.Types.PathPatternConditionConfig.PathPatternConditionConfig
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.Types.PathPatternConditionConfig.PathPatternConditionConfig
instance Control.DeepSeq.NFData Network.AWS.ELBV2.Types.PathPatternConditionConfig.PathPatternConditionConfig
instance Network.AWS.Data.Query.ToQuery Network.AWS.ELBV2.Types.PathPatternConditionConfig.PathPatternConditionConfig


module Network.AWS.ELBV2.Types.ProtocolEnum
newtype ProtocolEnum
ProtocolEnum' :: Text -> ProtocolEnum
[fromProtocolEnum] :: ProtocolEnum -> Text
pattern ProtocolEnum_GENEVE :: ProtocolEnum
pattern ProtocolEnum_HTTP :: ProtocolEnum
pattern ProtocolEnum_HTTPS :: ProtocolEnum
pattern ProtocolEnum_TCP :: ProtocolEnum
pattern ProtocolEnum_TCP_UDP :: ProtocolEnum
pattern ProtocolEnum_TLS :: ProtocolEnum
pattern ProtocolEnum_UDP :: ProtocolEnum
instance Network.AWS.Data.XML.ToXML Network.AWS.ELBV2.Types.ProtocolEnum.ProtocolEnum
instance Network.AWS.Data.XML.FromXML Network.AWS.ELBV2.Types.ProtocolEnum.ProtocolEnum
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.ELBV2.Types.ProtocolEnum.ProtocolEnum
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ELBV2.Types.ProtocolEnum.ProtocolEnum
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.ELBV2.Types.ProtocolEnum.ProtocolEnum
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ELBV2.Types.ProtocolEnum.ProtocolEnum
instance Network.AWS.Data.Query.ToQuery Network.AWS.ELBV2.Types.ProtocolEnum.ProtocolEnum
instance Network.AWS.Data.Headers.ToHeader Network.AWS.ELBV2.Types.ProtocolEnum.ProtocolEnum
instance Network.AWS.Data.Log.ToLog Network.AWS.ELBV2.Types.ProtocolEnum.ProtocolEnum
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.ELBV2.Types.ProtocolEnum.ProtocolEnum
instance Network.AWS.Data.Text.ToText Network.AWS.ELBV2.Types.ProtocolEnum.ProtocolEnum
instance Network.AWS.Data.Text.FromText Network.AWS.ELBV2.Types.ProtocolEnum.ProtocolEnum
instance Control.DeepSeq.NFData Network.AWS.ELBV2.Types.ProtocolEnum.ProtocolEnum
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.Types.ProtocolEnum.ProtocolEnum
instance GHC.Generics.Generic Network.AWS.ELBV2.Types.ProtocolEnum.ProtocolEnum
instance GHC.Classes.Ord Network.AWS.ELBV2.Types.ProtocolEnum.ProtocolEnum
instance GHC.Classes.Eq Network.AWS.ELBV2.Types.ProtocolEnum.ProtocolEnum
instance GHC.Read.Read Network.AWS.ELBV2.Types.ProtocolEnum.ProtocolEnum
instance GHC.Show.Show Network.AWS.ELBV2.Types.ProtocolEnum.ProtocolEnum


module Network.AWS.ELBV2.Types.QueryStringKeyValuePair

-- | Information about a key/value pair.
--   
--   <i>See:</i> <a>newQueryStringKeyValuePair</a> smart constructor.
data QueryStringKeyValuePair
QueryStringKeyValuePair' :: Maybe Text -> Maybe Text -> QueryStringKeyValuePair

-- | The value.
[$sel:value:QueryStringKeyValuePair'] :: QueryStringKeyValuePair -> Maybe Text

-- | The key. You can omit the key.
[$sel:key:QueryStringKeyValuePair'] :: QueryStringKeyValuePair -> Maybe Text

-- | Create a value of <a>QueryStringKeyValuePair</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:QueryStringKeyValuePair'</a>,
--   <a>queryStringKeyValuePair_value</a> - The value.
--   
--   <a>$sel:key:QueryStringKeyValuePair'</a>,
--   <a>queryStringKeyValuePair_key</a> - The key. You can omit the key.
newQueryStringKeyValuePair :: QueryStringKeyValuePair

-- | The value.
queryStringKeyValuePair_value :: Lens' QueryStringKeyValuePair (Maybe Text)

-- | The key. You can omit the key.
queryStringKeyValuePair_key :: Lens' QueryStringKeyValuePair (Maybe Text)
instance GHC.Generics.Generic Network.AWS.ELBV2.Types.QueryStringKeyValuePair.QueryStringKeyValuePair
instance GHC.Show.Show Network.AWS.ELBV2.Types.QueryStringKeyValuePair.QueryStringKeyValuePair
instance GHC.Read.Read Network.AWS.ELBV2.Types.QueryStringKeyValuePair.QueryStringKeyValuePair
instance GHC.Classes.Eq Network.AWS.ELBV2.Types.QueryStringKeyValuePair.QueryStringKeyValuePair
instance Network.AWS.Data.XML.FromXML Network.AWS.ELBV2.Types.QueryStringKeyValuePair.QueryStringKeyValuePair
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.Types.QueryStringKeyValuePair.QueryStringKeyValuePair
instance Control.DeepSeq.NFData Network.AWS.ELBV2.Types.QueryStringKeyValuePair.QueryStringKeyValuePair
instance Network.AWS.Data.Query.ToQuery Network.AWS.ELBV2.Types.QueryStringKeyValuePair.QueryStringKeyValuePair


module Network.AWS.ELBV2.Types.QueryStringConditionConfig

-- | Information about a query string condition.
--   
--   The query string component of a URI starts after the first '?'
--   character and is terminated by either a '#' character or the end of
--   the URI. A typical query string contains key/value pairs separated by
--   '&amp;' characters. The allowed characters are specified by RFC 3986.
--   Any character can be percentage encoded.
--   
--   <i>See:</i> <a>newQueryStringConditionConfig</a> smart constructor.
data QueryStringConditionConfig
QueryStringConditionConfig' :: Maybe [QueryStringKeyValuePair] -> QueryStringConditionConfig

-- | One or more key/value pairs or values to find in the query string. The
--   maximum size of each string is 128 characters. The comparison is case
--   insensitive. The following wildcard characters are supported: *
--   (matches 0 or more characters) and ? (matches exactly 1 character). To
--   search for a literal '*' or '?' character in a query string, you must
--   escape these characters in <tt>Values</tt> using a '\' character.
--   
--   If you specify multiple key/value pairs or values, the condition is
--   satisfied if one of them is found in the query string.
[$sel:values:QueryStringConditionConfig'] :: QueryStringConditionConfig -> Maybe [QueryStringKeyValuePair]

-- | Create a value of <a>QueryStringConditionConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:values:QueryStringConditionConfig'</a>,
--   <a>queryStringConditionConfig_values</a> - One or more key/value pairs
--   or values to find in the query string. The maximum size of each string
--   is 128 characters. The comparison is case insensitive. The following
--   wildcard characters are supported: * (matches 0 or more characters)
--   and ? (matches exactly 1 character). To search for a literal '*' or
--   '?' character in a query string, you must escape these characters in
--   <tt>Values</tt> using a '\' character.
--   
--   If you specify multiple key/value pairs or values, the condition is
--   satisfied if one of them is found in the query string.
newQueryStringConditionConfig :: QueryStringConditionConfig

-- | One or more key/value pairs or values to find in the query string. The
--   maximum size of each string is 128 characters. The comparison is case
--   insensitive. The following wildcard characters are supported: *
--   (matches 0 or more characters) and ? (matches exactly 1 character). To
--   search for a literal '*' or '?' character in a query string, you must
--   escape these characters in <tt>Values</tt> using a '\' character.
--   
--   If you specify multiple key/value pairs or values, the condition is
--   satisfied if one of them is found in the query string.
queryStringConditionConfig_values :: Lens' QueryStringConditionConfig (Maybe [QueryStringKeyValuePair])
instance GHC.Generics.Generic Network.AWS.ELBV2.Types.QueryStringConditionConfig.QueryStringConditionConfig
instance GHC.Show.Show Network.AWS.ELBV2.Types.QueryStringConditionConfig.QueryStringConditionConfig
instance GHC.Read.Read Network.AWS.ELBV2.Types.QueryStringConditionConfig.QueryStringConditionConfig
instance GHC.Classes.Eq Network.AWS.ELBV2.Types.QueryStringConditionConfig.QueryStringConditionConfig
instance Network.AWS.Data.XML.FromXML Network.AWS.ELBV2.Types.QueryStringConditionConfig.QueryStringConditionConfig
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.Types.QueryStringConditionConfig.QueryStringConditionConfig
instance Control.DeepSeq.NFData Network.AWS.ELBV2.Types.QueryStringConditionConfig.QueryStringConditionConfig
instance Network.AWS.Data.Query.ToQuery Network.AWS.ELBV2.Types.QueryStringConditionConfig.QueryStringConditionConfig


module Network.AWS.ELBV2.Types.RedirectActionStatusCodeEnum
newtype RedirectActionStatusCodeEnum
RedirectActionStatusCodeEnum' :: Text -> RedirectActionStatusCodeEnum
[fromRedirectActionStatusCodeEnum] :: RedirectActionStatusCodeEnum -> Text
pattern RedirectActionStatusCodeEnum_HTTP_301 :: RedirectActionStatusCodeEnum
pattern RedirectActionStatusCodeEnum_HTTP_302 :: RedirectActionStatusCodeEnum
instance Network.AWS.Data.XML.ToXML Network.AWS.ELBV2.Types.RedirectActionStatusCodeEnum.RedirectActionStatusCodeEnum
instance Network.AWS.Data.XML.FromXML Network.AWS.ELBV2.Types.RedirectActionStatusCodeEnum.RedirectActionStatusCodeEnum
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.ELBV2.Types.RedirectActionStatusCodeEnum.RedirectActionStatusCodeEnum
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ELBV2.Types.RedirectActionStatusCodeEnum.RedirectActionStatusCodeEnum
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.ELBV2.Types.RedirectActionStatusCodeEnum.RedirectActionStatusCodeEnum
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ELBV2.Types.RedirectActionStatusCodeEnum.RedirectActionStatusCodeEnum
instance Network.AWS.Data.Query.ToQuery Network.AWS.ELBV2.Types.RedirectActionStatusCodeEnum.RedirectActionStatusCodeEnum
instance Network.AWS.Data.Headers.ToHeader Network.AWS.ELBV2.Types.RedirectActionStatusCodeEnum.RedirectActionStatusCodeEnum
instance Network.AWS.Data.Log.ToLog Network.AWS.ELBV2.Types.RedirectActionStatusCodeEnum.RedirectActionStatusCodeEnum
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.ELBV2.Types.RedirectActionStatusCodeEnum.RedirectActionStatusCodeEnum
instance Network.AWS.Data.Text.ToText Network.AWS.ELBV2.Types.RedirectActionStatusCodeEnum.RedirectActionStatusCodeEnum
instance Network.AWS.Data.Text.FromText Network.AWS.ELBV2.Types.RedirectActionStatusCodeEnum.RedirectActionStatusCodeEnum
instance Control.DeepSeq.NFData Network.AWS.ELBV2.Types.RedirectActionStatusCodeEnum.RedirectActionStatusCodeEnum
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.Types.RedirectActionStatusCodeEnum.RedirectActionStatusCodeEnum
instance GHC.Generics.Generic Network.AWS.ELBV2.Types.RedirectActionStatusCodeEnum.RedirectActionStatusCodeEnum
instance GHC.Classes.Ord Network.AWS.ELBV2.Types.RedirectActionStatusCodeEnum.RedirectActionStatusCodeEnum
instance GHC.Classes.Eq Network.AWS.ELBV2.Types.RedirectActionStatusCodeEnum.RedirectActionStatusCodeEnum
instance GHC.Read.Read Network.AWS.ELBV2.Types.RedirectActionStatusCodeEnum.RedirectActionStatusCodeEnum
instance GHC.Show.Show Network.AWS.ELBV2.Types.RedirectActionStatusCodeEnum.RedirectActionStatusCodeEnum


module Network.AWS.ELBV2.Types.RedirectActionConfig

-- | Information about a redirect action.
--   
--   A URI consists of the following components:
--   protocol://hostname:port/path?query. You must modify at least one of
--   the following components to avoid a redirect loop: protocol, hostname,
--   port, or path. Any components that you do not modify retain their
--   original values.
--   
--   You can reuse URI components using the following reserved keywords:
--   
--   <ul>
--   <li>#{protocol}</li>
--   <li>#{host}</li>
--   <li>#{port}</li>
--   <li>#{path} (the leading "/" is removed)</li>
--   <li>#{query}</li>
--   </ul>
--   
--   For example, you can change the path to "/new/#{path}", the hostname
--   to "example.#{host}", or the query to "#{query}&amp;value=xyz".
--   
--   <i>See:</i> <a>newRedirectActionConfig</a> smart constructor.
data RedirectActionConfig
RedirectActionConfig' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> RedirectActionStatusCodeEnum -> RedirectActionConfig

-- | The absolute path, starting with the leading "/". This component is
--   not percent-encoded. The path can contain #{host}, #{path}, and
--   #{port}.
[$sel:path:RedirectActionConfig'] :: RedirectActionConfig -> Maybe Text

-- | The protocol. You can specify HTTP, HTTPS, or #{protocol}. You can
--   redirect HTTP to HTTP, HTTP to HTTPS, and HTTPS to HTTPS. You cannot
--   redirect HTTPS to HTTP.
[$sel:protocol:RedirectActionConfig'] :: RedirectActionConfig -> Maybe Text

-- | The query parameters, URL-encoded when necessary, but not
--   percent-encoded. Do not include the leading "?", as it is
--   automatically added. You can specify any of the reserved keywords.
[$sel:query:RedirectActionConfig'] :: RedirectActionConfig -> Maybe Text

-- | The hostname. This component is not percent-encoded. The hostname can
--   contain #{host}.
[$sel:host:RedirectActionConfig'] :: RedirectActionConfig -> Maybe Text

-- | The port. You can specify a value from 1 to 65535 or #{port}.
[$sel:port:RedirectActionConfig'] :: RedirectActionConfig -> Maybe Text

-- | The HTTP redirect code. The redirect is either permanent (HTTP 301) or
--   temporary (HTTP 302).
[$sel:statusCode:RedirectActionConfig'] :: RedirectActionConfig -> RedirectActionStatusCodeEnum

-- | Create a value of <a>RedirectActionConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:path:RedirectActionConfig'</a>,
--   <a>redirectActionConfig_path</a> - The absolute path, starting with
--   the leading "/". This component is not percent-encoded. The path can
--   contain #{host}, #{path}, and #{port}.
--   
--   <a>$sel:protocol:RedirectActionConfig'</a>,
--   <a>redirectActionConfig_protocol</a> - The protocol. You can specify
--   HTTP, HTTPS, or #{protocol}. You can redirect HTTP to HTTP, HTTP to
--   HTTPS, and HTTPS to HTTPS. You cannot redirect HTTPS to HTTP.
--   
--   <a>$sel:query:RedirectActionConfig'</a>,
--   <a>redirectActionConfig_query</a> - The query parameters, URL-encoded
--   when necessary, but not percent-encoded. Do not include the leading
--   "?", as it is automatically added. You can specify any of the reserved
--   keywords.
--   
--   <a>$sel:host:RedirectActionConfig'</a>,
--   <a>redirectActionConfig_host</a> - The hostname. This component is not
--   percent-encoded. The hostname can contain #{host}.
--   
--   <a>$sel:port:RedirectActionConfig'</a>,
--   <a>redirectActionConfig_port</a> - The port. You can specify a value
--   from 1 to 65535 or #{port}.
--   
--   <a>$sel:statusCode:RedirectActionConfig'</a>,
--   <a>redirectActionConfig_statusCode</a> - The HTTP redirect code. The
--   redirect is either permanent (HTTP 301) or temporary (HTTP 302).
newRedirectActionConfig :: RedirectActionStatusCodeEnum -> RedirectActionConfig

-- | The absolute path, starting with the leading "/". This component is
--   not percent-encoded. The path can contain #{host}, #{path}, and
--   #{port}.
redirectActionConfig_path :: Lens' RedirectActionConfig (Maybe Text)

-- | The protocol. You can specify HTTP, HTTPS, or #{protocol}. You can
--   redirect HTTP to HTTP, HTTP to HTTPS, and HTTPS to HTTPS. You cannot
--   redirect HTTPS to HTTP.
redirectActionConfig_protocol :: Lens' RedirectActionConfig (Maybe Text)

-- | The query parameters, URL-encoded when necessary, but not
--   percent-encoded. Do not include the leading "?", as it is
--   automatically added. You can specify any of the reserved keywords.
redirectActionConfig_query :: Lens' RedirectActionConfig (Maybe Text)

-- | The hostname. This component is not percent-encoded. The hostname can
--   contain #{host}.
redirectActionConfig_host :: Lens' RedirectActionConfig (Maybe Text)

-- | The port. You can specify a value from 1 to 65535 or #{port}.
redirectActionConfig_port :: Lens' RedirectActionConfig (Maybe Text)

-- | The HTTP redirect code. The redirect is either permanent (HTTP 301) or
--   temporary (HTTP 302).
redirectActionConfig_statusCode :: Lens' RedirectActionConfig RedirectActionStatusCodeEnum
instance GHC.Generics.Generic Network.AWS.ELBV2.Types.RedirectActionConfig.RedirectActionConfig
instance GHC.Show.Show Network.AWS.ELBV2.Types.RedirectActionConfig.RedirectActionConfig
instance GHC.Read.Read Network.AWS.ELBV2.Types.RedirectActionConfig.RedirectActionConfig
instance GHC.Classes.Eq Network.AWS.ELBV2.Types.RedirectActionConfig.RedirectActionConfig
instance Network.AWS.Data.XML.FromXML Network.AWS.ELBV2.Types.RedirectActionConfig.RedirectActionConfig
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.Types.RedirectActionConfig.RedirectActionConfig
instance Control.DeepSeq.NFData Network.AWS.ELBV2.Types.RedirectActionConfig.RedirectActionConfig
instance Network.AWS.Data.Query.ToQuery Network.AWS.ELBV2.Types.RedirectActionConfig.RedirectActionConfig


module Network.AWS.ELBV2.Types.RulePriorityPair

-- | Information about the priorities for the rules for a listener.
--   
--   <i>See:</i> <a>newRulePriorityPair</a> smart constructor.
data RulePriorityPair
RulePriorityPair' :: Maybe Natural -> Maybe Text -> RulePriorityPair

-- | The rule priority.
[$sel:priority:RulePriorityPair'] :: RulePriorityPair -> Maybe Natural

-- | The Amazon Resource Name (ARN) of the rule.
[$sel:ruleArn:RulePriorityPair'] :: RulePriorityPair -> Maybe Text

-- | Create a value of <a>RulePriorityPair</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:priority:RulePriorityPair'</a>,
--   <a>rulePriorityPair_priority</a> - The rule priority.
--   
--   <a>$sel:ruleArn:RulePriorityPair'</a>, <a>rulePriorityPair_ruleArn</a>
--   - The Amazon Resource Name (ARN) of the rule.
newRulePriorityPair :: RulePriorityPair

-- | The rule priority.
rulePriorityPair_priority :: Lens' RulePriorityPair (Maybe Natural)

-- | The Amazon Resource Name (ARN) of the rule.
rulePriorityPair_ruleArn :: Lens' RulePriorityPair (Maybe Text)
instance GHC.Generics.Generic Network.AWS.ELBV2.Types.RulePriorityPair.RulePriorityPair
instance GHC.Show.Show Network.AWS.ELBV2.Types.RulePriorityPair.RulePriorityPair
instance GHC.Read.Read Network.AWS.ELBV2.Types.RulePriorityPair.RulePriorityPair
instance GHC.Classes.Eq Network.AWS.ELBV2.Types.RulePriorityPair.RulePriorityPair
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.Types.RulePriorityPair.RulePriorityPair
instance Control.DeepSeq.NFData Network.AWS.ELBV2.Types.RulePriorityPair.RulePriorityPair
instance Network.AWS.Data.Query.ToQuery Network.AWS.ELBV2.Types.RulePriorityPair.RulePriorityPair


module Network.AWS.ELBV2.Types.SourceIpConditionConfig

-- | Information about a source IP condition.
--   
--   You can use this condition to route based on the IP address of the
--   source that connects to the load balancer. If a client is behind a
--   proxy, this is the IP address of the proxy not the IP address of the
--   client.
--   
--   <i>See:</i> <a>newSourceIpConditionConfig</a> smart constructor.
data SourceIpConditionConfig
SourceIpConditionConfig' :: Maybe [Text] -> SourceIpConditionConfig

-- | One or more source IP addresses, in CIDR format. You can use both IPv4
--   and IPv6 addresses. Wildcards are not supported.
--   
--   If you specify multiple addresses, the condition is satisfied if the
--   source IP address of the request matches one of the CIDR blocks. This
--   condition is not satisfied by the addresses in the X-Forwarded-For
--   header. To search for addresses in the X-Forwarded-For header, use
--   HttpHeaderConditionConfig.
[$sel:values:SourceIpConditionConfig'] :: SourceIpConditionConfig -> Maybe [Text]

-- | Create a value of <a>SourceIpConditionConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:values:SourceIpConditionConfig'</a>,
--   <a>sourceIpConditionConfig_values</a> - One or more source IP
--   addresses, in CIDR format. You can use both IPv4 and IPv6 addresses.
--   Wildcards are not supported.
--   
--   If you specify multiple addresses, the condition is satisfied if the
--   source IP address of the request matches one of the CIDR blocks. This
--   condition is not satisfied by the addresses in the X-Forwarded-For
--   header. To search for addresses in the X-Forwarded-For header, use
--   HttpHeaderConditionConfig.
newSourceIpConditionConfig :: SourceIpConditionConfig

-- | One or more source IP addresses, in CIDR format. You can use both IPv4
--   and IPv6 addresses. Wildcards are not supported.
--   
--   If you specify multiple addresses, the condition is satisfied if the
--   source IP address of the request matches one of the CIDR blocks. This
--   condition is not satisfied by the addresses in the X-Forwarded-For
--   header. To search for addresses in the X-Forwarded-For header, use
--   HttpHeaderConditionConfig.
sourceIpConditionConfig_values :: Lens' SourceIpConditionConfig (Maybe [Text])
instance GHC.Generics.Generic Network.AWS.ELBV2.Types.SourceIpConditionConfig.SourceIpConditionConfig
instance GHC.Show.Show Network.AWS.ELBV2.Types.SourceIpConditionConfig.SourceIpConditionConfig
instance GHC.Read.Read Network.AWS.ELBV2.Types.SourceIpConditionConfig.SourceIpConditionConfig
instance GHC.Classes.Eq Network.AWS.ELBV2.Types.SourceIpConditionConfig.SourceIpConditionConfig
instance Network.AWS.Data.XML.FromXML Network.AWS.ELBV2.Types.SourceIpConditionConfig.SourceIpConditionConfig
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.Types.SourceIpConditionConfig.SourceIpConditionConfig
instance Control.DeepSeq.NFData Network.AWS.ELBV2.Types.SourceIpConditionConfig.SourceIpConditionConfig
instance Network.AWS.Data.Query.ToQuery Network.AWS.ELBV2.Types.SourceIpConditionConfig.SourceIpConditionConfig


module Network.AWS.ELBV2.Types.RuleCondition

-- | Information about a condition for a rule.
--   
--   Each rule can optionally include up to one of each of the following
--   conditions: <tt>http-request-method</tt>, <tt>host-header</tt>,
--   <tt>path-pattern</tt>, and <tt>source-ip</tt>. Each rule can also
--   optionally include one or more of each of the following conditions:
--   <tt>http-header</tt> and <tt>query-string</tt>.
--   
--   <i>See:</i> <a>newRuleCondition</a> smart constructor.
data RuleCondition
RuleCondition' :: Maybe Text -> Maybe HttpHeaderConditionConfig -> Maybe HostHeaderConditionConfig -> Maybe [Text] -> Maybe SourceIpConditionConfig -> Maybe HttpRequestMethodConditionConfig -> Maybe PathPatternConditionConfig -> Maybe QueryStringConditionConfig -> RuleCondition

-- | The field in the HTTP request. The following are the possible values:
--   
--   <ul>
--   <li><pre>http-header</pre></li>
--   <li><pre>http-request-method</pre></li>
--   <li><pre>host-header</pre></li>
--   <li><pre>path-pattern</pre></li>
--   <li><pre>query-string</pre></li>
--   <li><pre>source-ip</pre></li>
--   </ul>
[$sel:field:RuleCondition'] :: RuleCondition -> Maybe Text

-- | Information for an HTTP header condition. Specify only when
--   <tt>Field</tt> is <tt>http-header</tt>.
[$sel:httpHeaderConfig:RuleCondition'] :: RuleCondition -> Maybe HttpHeaderConditionConfig

-- | Information for a host header condition. Specify only when
--   <tt>Field</tt> is <tt>host-header</tt>.
[$sel:hostHeaderConfig:RuleCondition'] :: RuleCondition -> Maybe HostHeaderConditionConfig

-- | The condition value. Specify only when <tt>Field</tt> is
--   <tt>host-header</tt> or <tt>path-pattern</tt>. Alternatively, to
--   specify multiple host names or multiple path patterns, use
--   <tt>HostHeaderConfig</tt> or <tt>PathPatternConfig</tt>.
--   
--   If <tt>Field</tt> is <tt>host-header</tt> and you are not using
--   <tt>HostHeaderConfig</tt>, you can specify a single host name (for
--   example, my.example.com) in <tt>Values</tt>. A host name is case
--   insensitive, can be up to 128 characters in length, and can contain
--   any of the following characters.
--   
--   <ul>
--   <li>A-Z, a-z, 0-9</li>
--   <li>- .</li>
--   <li>* (matches 0 or more characters)</li>
--   <li>? (matches exactly 1 character)</li>
--   </ul>
--   
--   If <tt>Field</tt> is <tt>path-pattern</tt> and you are not using
--   <tt>PathPatternConfig</tt>, you can specify a single path pattern (for
--   example, /img/*) in <tt>Values</tt>. A path pattern is case-sensitive,
--   can be up to 128 characters in length, and can contain any of the
--   following characters.
--   
--   <ul>
--   <li>A-Z, a-z, 0-9</li>
--   <li>_ - . $ / ~ " ' @ : +</li>
--   <li>&amp; (using &amp;amp;)</li>
--   <li>* (matches 0 or more characters)</li>
--   <li>? (matches exactly 1 character)</li>
--   </ul>
[$sel:values:RuleCondition'] :: RuleCondition -> Maybe [Text]

-- | Information for a source IP condition. Specify only when
--   <tt>Field</tt> is <tt>source-ip</tt>.
[$sel:sourceIpConfig:RuleCondition'] :: RuleCondition -> Maybe SourceIpConditionConfig

-- | Information for an HTTP method condition. Specify only when
--   <tt>Field</tt> is <tt>http-request-method</tt>.
[$sel:httpRequestMethodConfig:RuleCondition'] :: RuleCondition -> Maybe HttpRequestMethodConditionConfig

-- | Information for a path pattern condition. Specify only when
--   <tt>Field</tt> is <tt>path-pattern</tt>.
[$sel:pathPatternConfig:RuleCondition'] :: RuleCondition -> Maybe PathPatternConditionConfig

-- | Information for a query string condition. Specify only when
--   <tt>Field</tt> is <tt>query-string</tt>.
[$sel:queryStringConfig:RuleCondition'] :: RuleCondition -> Maybe QueryStringConditionConfig

-- | Create a value of <a>RuleCondition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:field:RuleCondition'</a>, <a>ruleCondition_field</a> - The
--   field in the HTTP request. The following are the possible values:
--   
--   <ul>
--   <li><pre>http-header</pre></li>
--   <li><pre>http-request-method</pre></li>
--   <li><pre>host-header</pre></li>
--   <li><pre>path-pattern</pre></li>
--   <li><pre>query-string</pre></li>
--   <li><pre>source-ip</pre></li>
--   </ul>
--   
--   <a>$sel:httpHeaderConfig:RuleCondition'</a>,
--   <a>ruleCondition_httpHeaderConfig</a> - Information for an HTTP header
--   condition. Specify only when <tt>Field</tt> is <tt>http-header</tt>.
--   
--   <a>$sel:hostHeaderConfig:RuleCondition'</a>,
--   <a>ruleCondition_hostHeaderConfig</a> - Information for a host header
--   condition. Specify only when <tt>Field</tt> is <tt>host-header</tt>.
--   
--   <a>$sel:values:RuleCondition'</a>, <a>ruleCondition_values</a> - The
--   condition value. Specify only when <tt>Field</tt> is
--   <tt>host-header</tt> or <tt>path-pattern</tt>. Alternatively, to
--   specify multiple host names or multiple path patterns, use
--   <tt>HostHeaderConfig</tt> or <tt>PathPatternConfig</tt>.
--   
--   If <tt>Field</tt> is <tt>host-header</tt> and you are not using
--   <tt>HostHeaderConfig</tt>, you can specify a single host name (for
--   example, my.example.com) in <tt>Values</tt>. A host name is case
--   insensitive, can be up to 128 characters in length, and can contain
--   any of the following characters.
--   
--   <ul>
--   <li>A-Z, a-z, 0-9</li>
--   <li>- .</li>
--   <li>* (matches 0 or more characters)</li>
--   <li>? (matches exactly 1 character)</li>
--   </ul>
--   
--   If <tt>Field</tt> is <tt>path-pattern</tt> and you are not using
--   <tt>PathPatternConfig</tt>, you can specify a single path pattern (for
--   example, /img/*) in <tt>Values</tt>. A path pattern is case-sensitive,
--   can be up to 128 characters in length, and can contain any of the
--   following characters.
--   
--   <ul>
--   <li>A-Z, a-z, 0-9</li>
--   <li>_ - . $ / ~ " ' @ : +</li>
--   <li>&amp; (using &amp;amp;)</li>
--   <li>* (matches 0 or more characters)</li>
--   <li>? (matches exactly 1 character)</li>
--   </ul>
--   
--   <a>$sel:sourceIpConfig:RuleCondition'</a>,
--   <a>ruleCondition_sourceIpConfig</a> - Information for a source IP
--   condition. Specify only when <tt>Field</tt> is <tt>source-ip</tt>.
--   
--   <a>$sel:httpRequestMethodConfig:RuleCondition'</a>,
--   <a>ruleCondition_httpRequestMethodConfig</a> - Information for an HTTP
--   method condition. Specify only when <tt>Field</tt> is
--   <tt>http-request-method</tt>.
--   
--   <a>$sel:pathPatternConfig:RuleCondition'</a>,
--   <a>ruleCondition_pathPatternConfig</a> - Information for a path
--   pattern condition. Specify only when <tt>Field</tt> is
--   <tt>path-pattern</tt>.
--   
--   <a>$sel:queryStringConfig:RuleCondition'</a>,
--   <a>ruleCondition_queryStringConfig</a> - Information for a query
--   string condition. Specify only when <tt>Field</tt> is
--   <tt>query-string</tt>.
newRuleCondition :: RuleCondition

-- | The field in the HTTP request. The following are the possible values:
--   
--   <ul>
--   <li><pre>http-header</pre></li>
--   <li><pre>http-request-method</pre></li>
--   <li><pre>host-header</pre></li>
--   <li><pre>path-pattern</pre></li>
--   <li><pre>query-string</pre></li>
--   <li><pre>source-ip</pre></li>
--   </ul>
ruleCondition_field :: Lens' RuleCondition (Maybe Text)

-- | Information for an HTTP header condition. Specify only when
--   <tt>Field</tt> is <tt>http-header</tt>.
ruleCondition_httpHeaderConfig :: Lens' RuleCondition (Maybe HttpHeaderConditionConfig)

-- | Information for a host header condition. Specify only when
--   <tt>Field</tt> is <tt>host-header</tt>.
ruleCondition_hostHeaderConfig :: Lens' RuleCondition (Maybe HostHeaderConditionConfig)

-- | The condition value. Specify only when <tt>Field</tt> is
--   <tt>host-header</tt> or <tt>path-pattern</tt>. Alternatively, to
--   specify multiple host names or multiple path patterns, use
--   <tt>HostHeaderConfig</tt> or <tt>PathPatternConfig</tt>.
--   
--   If <tt>Field</tt> is <tt>host-header</tt> and you are not using
--   <tt>HostHeaderConfig</tt>, you can specify a single host name (for
--   example, my.example.com) in <tt>Values</tt>. A host name is case
--   insensitive, can be up to 128 characters in length, and can contain
--   any of the following characters.
--   
--   <ul>
--   <li>A-Z, a-z, 0-9</li>
--   <li>- .</li>
--   <li>* (matches 0 or more characters)</li>
--   <li>? (matches exactly 1 character)</li>
--   </ul>
--   
--   If <tt>Field</tt> is <tt>path-pattern</tt> and you are not using
--   <tt>PathPatternConfig</tt>, you can specify a single path pattern (for
--   example, /img/*) in <tt>Values</tt>. A path pattern is case-sensitive,
--   can be up to 128 characters in length, and can contain any of the
--   following characters.
--   
--   <ul>
--   <li>A-Z, a-z, 0-9</li>
--   <li>_ - . $ / ~ " ' @ : +</li>
--   <li>&amp; (using &amp;amp;)</li>
--   <li>* (matches 0 or more characters)</li>
--   <li>? (matches exactly 1 character)</li>
--   </ul>
ruleCondition_values :: Lens' RuleCondition (Maybe [Text])

-- | Information for a source IP condition. Specify only when
--   <tt>Field</tt> is <tt>source-ip</tt>.
ruleCondition_sourceIpConfig :: Lens' RuleCondition (Maybe SourceIpConditionConfig)

-- | Information for an HTTP method condition. Specify only when
--   <tt>Field</tt> is <tt>http-request-method</tt>.
ruleCondition_httpRequestMethodConfig :: Lens' RuleCondition (Maybe HttpRequestMethodConditionConfig)

-- | Information for a path pattern condition. Specify only when
--   <tt>Field</tt> is <tt>path-pattern</tt>.
ruleCondition_pathPatternConfig :: Lens' RuleCondition (Maybe PathPatternConditionConfig)

-- | Information for a query string condition. Specify only when
--   <tt>Field</tt> is <tt>query-string</tt>.
ruleCondition_queryStringConfig :: Lens' RuleCondition (Maybe QueryStringConditionConfig)
instance GHC.Generics.Generic Network.AWS.ELBV2.Types.RuleCondition.RuleCondition
instance GHC.Show.Show Network.AWS.ELBV2.Types.RuleCondition.RuleCondition
instance GHC.Read.Read Network.AWS.ELBV2.Types.RuleCondition.RuleCondition
instance GHC.Classes.Eq Network.AWS.ELBV2.Types.RuleCondition.RuleCondition
instance Network.AWS.Data.XML.FromXML Network.AWS.ELBV2.Types.RuleCondition.RuleCondition
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.Types.RuleCondition.RuleCondition
instance Control.DeepSeq.NFData Network.AWS.ELBV2.Types.RuleCondition.RuleCondition
instance Network.AWS.Data.Query.ToQuery Network.AWS.ELBV2.Types.RuleCondition.RuleCondition


module Network.AWS.ELBV2.Types.SslPolicy

-- | Information about a policy used for SSL negotiation.
--   
--   <i>See:</i> <a>newSslPolicy</a> smart constructor.
data SslPolicy
SslPolicy' :: Maybe [Text] -> Maybe [Cipher] -> Maybe Text -> Maybe [Text] -> SslPolicy

-- | The supported load balancers.
[$sel:supportedLoadBalancerTypes:SslPolicy'] :: SslPolicy -> Maybe [Text]

-- | The ciphers.
[$sel:ciphers:SslPolicy'] :: SslPolicy -> Maybe [Cipher]

-- | The name of the policy.
[$sel:name:SslPolicy'] :: SslPolicy -> Maybe Text

-- | The protocols.
[$sel:sslProtocols:SslPolicy'] :: SslPolicy -> Maybe [Text]

-- | Create a value of <a>SslPolicy</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:supportedLoadBalancerTypes:SslPolicy'</a>,
--   <a>sslPolicy_supportedLoadBalancerTypes</a> - The supported load
--   balancers.
--   
--   <a>$sel:ciphers:SslPolicy'</a>, <a>sslPolicy_ciphers</a> - The
--   ciphers.
--   
--   <a>$sel:name:SslPolicy'</a>, <a>sslPolicy_name</a> - The name of the
--   policy.
--   
--   <a>$sel:sslProtocols:SslPolicy'</a>, <a>sslPolicy_sslProtocols</a> -
--   The protocols.
newSslPolicy :: SslPolicy

-- | The supported load balancers.
sslPolicy_supportedLoadBalancerTypes :: Lens' SslPolicy (Maybe [Text])

-- | The ciphers.
sslPolicy_ciphers :: Lens' SslPolicy (Maybe [Cipher])

-- | The name of the policy.
sslPolicy_name :: Lens' SslPolicy (Maybe Text)

-- | The protocols.
sslPolicy_sslProtocols :: Lens' SslPolicy (Maybe [Text])
instance GHC.Generics.Generic Network.AWS.ELBV2.Types.SslPolicy.SslPolicy
instance GHC.Show.Show Network.AWS.ELBV2.Types.SslPolicy.SslPolicy
instance GHC.Read.Read Network.AWS.ELBV2.Types.SslPolicy.SslPolicy
instance GHC.Classes.Eq Network.AWS.ELBV2.Types.SslPolicy.SslPolicy
instance Network.AWS.Data.XML.FromXML Network.AWS.ELBV2.Types.SslPolicy.SslPolicy
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.Types.SslPolicy.SslPolicy
instance Control.DeepSeq.NFData Network.AWS.ELBV2.Types.SslPolicy.SslPolicy


module Network.AWS.ELBV2.Types.SubnetMapping

-- | Information about a subnet mapping.
--   
--   <i>See:</i> <a>newSubnetMapping</a> smart constructor.
data SubnetMapping
SubnetMapping' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> SubnetMapping

-- | <ul>
--   <li><i>Network Load Balancers</i> The IPv6 address.</li>
--   </ul>
[$sel:iPv6Address:SubnetMapping'] :: SubnetMapping -> Maybe Text

-- | <ul>
--   <li><i>Network Load Balancers</i> The allocation ID of the Elastic IP
--   address for an internet-facing load balancer.</li>
--   </ul>
[$sel:allocationId:SubnetMapping'] :: SubnetMapping -> Maybe Text

-- | <ul>
--   <li><i>Network Load Balancers</i> The private IPv4 address for an
--   internal load balancer.</li>
--   </ul>
[$sel:privateIPv4Address:SubnetMapping'] :: SubnetMapping -> Maybe Text

-- | The ID of the subnet.
[$sel:subnetId:SubnetMapping'] :: SubnetMapping -> Maybe Text

-- | Create a value of <a>SubnetMapping</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:iPv6Address:SubnetMapping'</a>,
--   <a>subnetMapping_iPv6Address</a> - [Network Load Balancers] The IPv6
--   address.
--   
--   <a>$sel:allocationId:SubnetMapping'</a>,
--   <a>subnetMapping_allocationId</a> - [Network Load Balancers] The
--   allocation ID of the Elastic IP address for an internet-facing load
--   balancer.
--   
--   <a>$sel:privateIPv4Address:SubnetMapping'</a>,
--   <a>subnetMapping_privateIPv4Address</a> - [Network Load Balancers] The
--   private IPv4 address for an internal load balancer.
--   
--   <a>$sel:subnetId:SubnetMapping'</a>, <a>subnetMapping_subnetId</a> -
--   The ID of the subnet.
newSubnetMapping :: SubnetMapping

-- | <ul>
--   <li><i>Network Load Balancers</i> The IPv6 address.</li>
--   </ul>
subnetMapping_iPv6Address :: Lens' SubnetMapping (Maybe Text)

-- | <ul>
--   <li><i>Network Load Balancers</i> The allocation ID of the Elastic IP
--   address for an internet-facing load balancer.</li>
--   </ul>
subnetMapping_allocationId :: Lens' SubnetMapping (Maybe Text)

-- | <ul>
--   <li><i>Network Load Balancers</i> The private IPv4 address for an
--   internal load balancer.</li>
--   </ul>
subnetMapping_privateIPv4Address :: Lens' SubnetMapping (Maybe Text)

-- | The ID of the subnet.
subnetMapping_subnetId :: Lens' SubnetMapping (Maybe Text)
instance GHC.Generics.Generic Network.AWS.ELBV2.Types.SubnetMapping.SubnetMapping
instance GHC.Show.Show Network.AWS.ELBV2.Types.SubnetMapping.SubnetMapping
instance GHC.Read.Read Network.AWS.ELBV2.Types.SubnetMapping.SubnetMapping
instance GHC.Classes.Eq Network.AWS.ELBV2.Types.SubnetMapping.SubnetMapping
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.Types.SubnetMapping.SubnetMapping
instance Control.DeepSeq.NFData Network.AWS.ELBV2.Types.SubnetMapping.SubnetMapping
instance Network.AWS.Data.Query.ToQuery Network.AWS.ELBV2.Types.SubnetMapping.SubnetMapping


module Network.AWS.ELBV2.Types.Tag

-- | Information about a tag.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Maybe Text -> Text -> Tag

-- | The value of the tag.
[$sel:value:Tag'] :: Tag -> Maybe Text

-- | The key of the tag.
[$sel:key:Tag'] :: Tag -> Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The value of the tag.
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The key of the tag.
newTag :: Text -> Tag

-- | The value of the tag.
tag_value :: Lens' Tag (Maybe Text)

-- | The key of the tag.
tag_key :: Lens' Tag Text
instance GHC.Generics.Generic Network.AWS.ELBV2.Types.Tag.Tag
instance GHC.Show.Show Network.AWS.ELBV2.Types.Tag.Tag
instance GHC.Read.Read Network.AWS.ELBV2.Types.Tag.Tag
instance GHC.Classes.Eq Network.AWS.ELBV2.Types.Tag.Tag
instance Network.AWS.Data.XML.FromXML Network.AWS.ELBV2.Types.Tag.Tag
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.Types.Tag.Tag
instance Control.DeepSeq.NFData Network.AWS.ELBV2.Types.Tag.Tag
instance Network.AWS.Data.Query.ToQuery Network.AWS.ELBV2.Types.Tag.Tag


module Network.AWS.ELBV2.Types.TagDescription

-- | The tags associated with a resource.
--   
--   <i>See:</i> <a>newTagDescription</a> smart constructor.
data TagDescription
TagDescription' :: Maybe Text -> Maybe (NonEmpty Tag) -> TagDescription

-- | The Amazon Resource Name (ARN) of the resource.
[$sel:resourceArn:TagDescription'] :: TagDescription -> Maybe Text

-- | Information about the tags.
[$sel:tags:TagDescription'] :: TagDescription -> Maybe (NonEmpty Tag)

-- | Create a value of <a>TagDescription</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagDescription'</a>,
--   <a>tagDescription_resourceArn</a> - The Amazon Resource Name (ARN) of
--   the resource.
--   
--   <a>$sel:tags:TagDescription'</a>, <a>tagDescription_tags</a> -
--   Information about the tags.
newTagDescription :: TagDescription

-- | The Amazon Resource Name (ARN) of the resource.
tagDescription_resourceArn :: Lens' TagDescription (Maybe Text)

-- | Information about the tags.
tagDescription_tags :: Lens' TagDescription (Maybe (NonEmpty Tag))
instance GHC.Generics.Generic Network.AWS.ELBV2.Types.TagDescription.TagDescription
instance GHC.Show.Show Network.AWS.ELBV2.Types.TagDescription.TagDescription
instance GHC.Read.Read Network.AWS.ELBV2.Types.TagDescription.TagDescription
instance GHC.Classes.Eq Network.AWS.ELBV2.Types.TagDescription.TagDescription
instance Network.AWS.Data.XML.FromXML Network.AWS.ELBV2.Types.TagDescription.TagDescription
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.Types.TagDescription.TagDescription
instance Control.DeepSeq.NFData Network.AWS.ELBV2.Types.TagDescription.TagDescription


module Network.AWS.ELBV2.Types.TargetDescription

-- | Information about a target.
--   
--   <i>See:</i> <a>newTargetDescription</a> smart constructor.
data TargetDescription
TargetDescription' :: Maybe Text -> Maybe Natural -> Text -> TargetDescription

-- | An Availability Zone or <tt>all</tt>. This determines whether the
--   target receives traffic from the load balancer nodes in the specified
--   Availability Zone or from all enabled Availability Zones for the load
--   balancer.
--   
--   This parameter is not supported if the target type of the target group
--   is <tt>instance</tt> or <tt>alb</tt>.
--   
--   If the target type is <tt>ip</tt> and the IP address is in a subnet of
--   the VPC for the target group, the Availability Zone is automatically
--   detected and this parameter is optional. If the IP address is outside
--   the VPC, this parameter is required.
--   
--   With an Application Load Balancer, if the target type is <tt>ip</tt>
--   and the IP address is outside the VPC for the target group, the only
--   supported value is <tt>all</tt>.
--   
--   If the target type is <tt>lambda</tt>, this parameter is optional and
--   the only supported value is <tt>all</tt>.
[$sel:availabilityZone:TargetDescription'] :: TargetDescription -> Maybe Text

-- | The port on which the target is listening. If the target group
--   protocol is GENEVE, the supported port is 6081. If the target type is
--   <tt>alb</tt>, the targeted Application Load Balancer must have at
--   least one listener whose port matches the target group port. Not used
--   if the target is a Lambda function.
[$sel:port:TargetDescription'] :: TargetDescription -> Maybe Natural

-- | The ID of the target. If the target type of the target group is
--   <tt>instance</tt>, specify an instance ID. If the target type is
--   <tt>ip</tt>, specify an IP address. If the target type is
--   <tt>lambda</tt>, specify the ARN of the Lambda function. If the target
--   type is <tt>alb</tt>, specify the ARN of the Application Load Balancer
--   target.
[$sel:id:TargetDescription'] :: TargetDescription -> Text

-- | Create a value of <a>TargetDescription</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:availabilityZone:TargetDescription'</a>,
--   <a>targetDescription_availabilityZone</a> - An Availability Zone or
--   <tt>all</tt>. This determines whether the target receives traffic from
--   the load balancer nodes in the specified Availability Zone or from all
--   enabled Availability Zones for the load balancer.
--   
--   This parameter is not supported if the target type of the target group
--   is <tt>instance</tt> or <tt>alb</tt>.
--   
--   If the target type is <tt>ip</tt> and the IP address is in a subnet of
--   the VPC for the target group, the Availability Zone is automatically
--   detected and this parameter is optional. If the IP address is outside
--   the VPC, this parameter is required.
--   
--   With an Application Load Balancer, if the target type is <tt>ip</tt>
--   and the IP address is outside the VPC for the target group, the only
--   supported value is <tt>all</tt>.
--   
--   If the target type is <tt>lambda</tt>, this parameter is optional and
--   the only supported value is <tt>all</tt>.
--   
--   <a>$sel:port:TargetDescription'</a>, <a>targetDescription_port</a> -
--   The port on which the target is listening. If the target group
--   protocol is GENEVE, the supported port is 6081. If the target type is
--   <tt>alb</tt>, the targeted Application Load Balancer must have at
--   least one listener whose port matches the target group port. Not used
--   if the target is a Lambda function.
--   
--   <a>$sel:id:TargetDescription'</a>, <a>targetDescription_id</a> - The
--   ID of the target. If the target type of the target group is
--   <tt>instance</tt>, specify an instance ID. If the target type is
--   <tt>ip</tt>, specify an IP address. If the target type is
--   <tt>lambda</tt>, specify the ARN of the Lambda function. If the target
--   type is <tt>alb</tt>, specify the ARN of the Application Load Balancer
--   target.
newTargetDescription :: Text -> TargetDescription

-- | An Availability Zone or <tt>all</tt>. This determines whether the
--   target receives traffic from the load balancer nodes in the specified
--   Availability Zone or from all enabled Availability Zones for the load
--   balancer.
--   
--   This parameter is not supported if the target type of the target group
--   is <tt>instance</tt> or <tt>alb</tt>.
--   
--   If the target type is <tt>ip</tt> and the IP address is in a subnet of
--   the VPC for the target group, the Availability Zone is automatically
--   detected and this parameter is optional. If the IP address is outside
--   the VPC, this parameter is required.
--   
--   With an Application Load Balancer, if the target type is <tt>ip</tt>
--   and the IP address is outside the VPC for the target group, the only
--   supported value is <tt>all</tt>.
--   
--   If the target type is <tt>lambda</tt>, this parameter is optional and
--   the only supported value is <tt>all</tt>.
targetDescription_availabilityZone :: Lens' TargetDescription (Maybe Text)

-- | The port on which the target is listening. If the target group
--   protocol is GENEVE, the supported port is 6081. If the target type is
--   <tt>alb</tt>, the targeted Application Load Balancer must have at
--   least one listener whose port matches the target group port. Not used
--   if the target is a Lambda function.
targetDescription_port :: Lens' TargetDescription (Maybe Natural)

-- | The ID of the target. If the target type of the target group is
--   <tt>instance</tt>, specify an instance ID. If the target type is
--   <tt>ip</tt>, specify an IP address. If the target type is
--   <tt>lambda</tt>, specify the ARN of the Lambda function. If the target
--   type is <tt>alb</tt>, specify the ARN of the Application Load Balancer
--   target.
targetDescription_id :: Lens' TargetDescription Text
instance GHC.Generics.Generic Network.AWS.ELBV2.Types.TargetDescription.TargetDescription
instance GHC.Show.Show Network.AWS.ELBV2.Types.TargetDescription.TargetDescription
instance GHC.Read.Read Network.AWS.ELBV2.Types.TargetDescription.TargetDescription
instance GHC.Classes.Eq Network.AWS.ELBV2.Types.TargetDescription.TargetDescription
instance Network.AWS.Data.XML.FromXML Network.AWS.ELBV2.Types.TargetDescription.TargetDescription
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.Types.TargetDescription.TargetDescription
instance Control.DeepSeq.NFData Network.AWS.ELBV2.Types.TargetDescription.TargetDescription
instance Network.AWS.Data.Query.ToQuery Network.AWS.ELBV2.Types.TargetDescription.TargetDescription


module Network.AWS.ELBV2.Types.TargetGroupAttribute

-- | Information about a target group attribute.
--   
--   <i>See:</i> <a>newTargetGroupAttribute</a> smart constructor.
data TargetGroupAttribute
TargetGroupAttribute' :: Maybe Text -> Maybe Text -> TargetGroupAttribute

-- | The value of the attribute.
[$sel:value:TargetGroupAttribute'] :: TargetGroupAttribute -> Maybe Text

-- | The name of the attribute.
--   
--   The following attribute is supported by all load balancers:
--   
--   <ul>
--   <li><tt>deregistration_delay.timeout_seconds</tt> - The amount of
--   time, in seconds, for Elastic Load Balancing to wait before changing
--   the state of a deregistering target from <tt>draining</tt> to
--   <tt>unused</tt>. The range is 0-3600 seconds. The default value is 300
--   seconds. If the target is a Lambda function, this attribute is not
--   supported.</li>
--   </ul>
--   
--   The following attributes are supported by both Application Load
--   Balancers and Network Load Balancers:
--   
--   <ul>
--   <li><tt>stickiness.enabled</tt> - Indicates whether sticky sessions
--   are enabled. The value is <tt>true</tt> or <tt>false</tt>. The default
--   is <tt>false</tt>.</li>
--   <li><tt>stickiness.type</tt> - The type of sticky sessions. The
--   possible values are <tt>lb_cookie</tt> and <tt>app_cookie</tt> for
--   Application Load Balancers or <tt>source_ip</tt> for Network Load
--   Balancers.</li>
--   </ul>
--   
--   The following attributes are supported only if the load balancer is an
--   Application Load Balancer and the target is an instance or an IP
--   address:
--   
--   <ul>
--   <li><tt>load_balancing.algorithm.type</tt> - The load balancing
--   algorithm determines how the load balancer selects targets when
--   routing requests. The value is <tt>round_robin</tt> or
--   <tt>least_outstanding_requests</tt>. The default is
--   <tt>round_robin</tt>.</li>
--   <li><tt>slow_start.duration_seconds</tt> - The time period, in
--   seconds, during which a newly registered target receives an increasing
--   share of the traffic to the target group. After this time period ends,
--   the target receives its full share of traffic. The range is 30-900
--   seconds (15 minutes). The default is 0 seconds (disabled).</li>
--   <li><tt>stickiness.app_cookie.cookie_name</tt> - Indicates the name of
--   the application-based cookie. Names that start with the following
--   prefixes are not allowed: <tt>AWSALB</tt>, <tt>AWSALBAPP</tt>, and
--   <tt>AWSALBTG</tt>; they're reserved for use by the load balancer.</li>
--   <li><tt>stickiness.app_cookie.duration_seconds</tt> - The time period,
--   in seconds, during which requests from a client should be routed to
--   the same target. After this time period expires, the application-based
--   cookie is considered stale. The range is 1 second to 1 week (604800
--   seconds). The default value is 1 day (86400 seconds).</li>
--   <li><tt>stickiness.lb_cookie.duration_seconds</tt> - The time period,
--   in seconds, during which requests from a client should be routed to
--   the same target. After this time period expires, the load
--   balancer-generated cookie is considered stale. The range is 1 second
--   to 1 week (604800 seconds). The default value is 1 day (86400
--   seconds).</li>
--   </ul>
--   
--   The following attribute is supported only if the load balancer is an
--   Application Load Balancer and the target is a Lambda function:
--   
--   <ul>
--   <li><tt>lambda.multi_value_headers.enabled</tt> - Indicates whether
--   the request and response headers that are exchanged between the load
--   balancer and the Lambda function include arrays of values or strings.
--   The value is <tt>true</tt> or <tt>false</tt>. The default is
--   <tt>false</tt>. If the value is <tt>false</tt> and the request
--   contains a duplicate header field name or query parameter key, the
--   load balancer uses the last value sent by the client.</li>
--   </ul>
--   
--   The following attributes are supported only by Network Load Balancers:
--   
--   <ul>
--   <li><tt>deregistration_delay.connection_termination.enabled</tt> -
--   Indicates whether the load balancer terminates connections at the end
--   of the deregistration timeout. The value is <tt>true</tt> or
--   <tt>false</tt>. The default is <tt>false</tt>.</li>
--   <li><tt>preserve_client_ip.enabled</tt> - Indicates whether client IP
--   preservation is enabled. The value is <tt>true</tt> or <tt>false</tt>.
--   The default is disabled if the target group type is IP address and the
--   target group protocol is TCP or TLS. Otherwise, the default is
--   enabled. Client IP preservation cannot be disabled for UDP and TCP_UDP
--   target groups.</li>
--   <li><tt>proxy_protocol_v2.enabled</tt> - Indicates whether Proxy
--   Protocol version 2 is enabled. The value is <tt>true</tt> or
--   <tt>false</tt>. The default is <tt>false</tt>.</li>
--   </ul>
[$sel:key:TargetGroupAttribute'] :: TargetGroupAttribute -> Maybe Text

-- | Create a value of <a>TargetGroupAttribute</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:TargetGroupAttribute'</a>,
--   <a>targetGroupAttribute_value</a> - The value of the attribute.
--   
--   <a>$sel:key:TargetGroupAttribute'</a>, <a>targetGroupAttribute_key</a>
--   - The name of the attribute.
--   
--   The following attribute is supported by all load balancers:
--   
--   <ul>
--   <li><tt>deregistration_delay.timeout_seconds</tt> - The amount of
--   time, in seconds, for Elastic Load Balancing to wait before changing
--   the state of a deregistering target from <tt>draining</tt> to
--   <tt>unused</tt>. The range is 0-3600 seconds. The default value is 300
--   seconds. If the target is a Lambda function, this attribute is not
--   supported.</li>
--   </ul>
--   
--   The following attributes are supported by both Application Load
--   Balancers and Network Load Balancers:
--   
--   <ul>
--   <li><tt>stickiness.enabled</tt> - Indicates whether sticky sessions
--   are enabled. The value is <tt>true</tt> or <tt>false</tt>. The default
--   is <tt>false</tt>.</li>
--   <li><tt>stickiness.type</tt> - The type of sticky sessions. The
--   possible values are <tt>lb_cookie</tt> and <tt>app_cookie</tt> for
--   Application Load Balancers or <tt>source_ip</tt> for Network Load
--   Balancers.</li>
--   </ul>
--   
--   The following attributes are supported only if the load balancer is an
--   Application Load Balancer and the target is an instance or an IP
--   address:
--   
--   <ul>
--   <li><tt>load_balancing.algorithm.type</tt> - The load balancing
--   algorithm determines how the load balancer selects targets when
--   routing requests. The value is <tt>round_robin</tt> or
--   <tt>least_outstanding_requests</tt>. The default is
--   <tt>round_robin</tt>.</li>
--   <li><tt>slow_start.duration_seconds</tt> - The time period, in
--   seconds, during which a newly registered target receives an increasing
--   share of the traffic to the target group. After this time period ends,
--   the target receives its full share of traffic. The range is 30-900
--   seconds (15 minutes). The default is 0 seconds (disabled).</li>
--   <li><tt>stickiness.app_cookie.cookie_name</tt> - Indicates the name of
--   the application-based cookie. Names that start with the following
--   prefixes are not allowed: <tt>AWSALB</tt>, <tt>AWSALBAPP</tt>, and
--   <tt>AWSALBTG</tt>; they're reserved for use by the load balancer.</li>
--   <li><tt>stickiness.app_cookie.duration_seconds</tt> - The time period,
--   in seconds, during which requests from a client should be routed to
--   the same target. After this time period expires, the application-based
--   cookie is considered stale. The range is 1 second to 1 week (604800
--   seconds). The default value is 1 day (86400 seconds).</li>
--   <li><tt>stickiness.lb_cookie.duration_seconds</tt> - The time period,
--   in seconds, during which requests from a client should be routed to
--   the same target. After this time period expires, the load
--   balancer-generated cookie is considered stale. The range is 1 second
--   to 1 week (604800 seconds). The default value is 1 day (86400
--   seconds).</li>
--   </ul>
--   
--   The following attribute is supported only if the load balancer is an
--   Application Load Balancer and the target is a Lambda function:
--   
--   <ul>
--   <li><tt>lambda.multi_value_headers.enabled</tt> - Indicates whether
--   the request and response headers that are exchanged between the load
--   balancer and the Lambda function include arrays of values or strings.
--   The value is <tt>true</tt> or <tt>false</tt>. The default is
--   <tt>false</tt>. If the value is <tt>false</tt> and the request
--   contains a duplicate header field name or query parameter key, the
--   load balancer uses the last value sent by the client.</li>
--   </ul>
--   
--   The following attributes are supported only by Network Load Balancers:
--   
--   <ul>
--   <li><tt>deregistration_delay.connection_termination.enabled</tt> -
--   Indicates whether the load balancer terminates connections at the end
--   of the deregistration timeout. The value is <tt>true</tt> or
--   <tt>false</tt>. The default is <tt>false</tt>.</li>
--   <li><tt>preserve_client_ip.enabled</tt> - Indicates whether client IP
--   preservation is enabled. The value is <tt>true</tt> or <tt>false</tt>.
--   The default is disabled if the target group type is IP address and the
--   target group protocol is TCP or TLS. Otherwise, the default is
--   enabled. Client IP preservation cannot be disabled for UDP and TCP_UDP
--   target groups.</li>
--   <li><tt>proxy_protocol_v2.enabled</tt> - Indicates whether Proxy
--   Protocol version 2 is enabled. The value is <tt>true</tt> or
--   <tt>false</tt>. The default is <tt>false</tt>.</li>
--   </ul>
newTargetGroupAttribute :: TargetGroupAttribute

-- | The value of the attribute.
targetGroupAttribute_value :: Lens' TargetGroupAttribute (Maybe Text)

-- | The name of the attribute.
--   
--   The following attribute is supported by all load balancers:
--   
--   <ul>
--   <li><tt>deregistration_delay.timeout_seconds</tt> - The amount of
--   time, in seconds, for Elastic Load Balancing to wait before changing
--   the state of a deregistering target from <tt>draining</tt> to
--   <tt>unused</tt>. The range is 0-3600 seconds. The default value is 300
--   seconds. If the target is a Lambda function, this attribute is not
--   supported.</li>
--   </ul>
--   
--   The following attributes are supported by both Application Load
--   Balancers and Network Load Balancers:
--   
--   <ul>
--   <li><tt>stickiness.enabled</tt> - Indicates whether sticky sessions
--   are enabled. The value is <tt>true</tt> or <tt>false</tt>. The default
--   is <tt>false</tt>.</li>
--   <li><tt>stickiness.type</tt> - The type of sticky sessions. The
--   possible values are <tt>lb_cookie</tt> and <tt>app_cookie</tt> for
--   Application Load Balancers or <tt>source_ip</tt> for Network Load
--   Balancers.</li>
--   </ul>
--   
--   The following attributes are supported only if the load balancer is an
--   Application Load Balancer and the target is an instance or an IP
--   address:
--   
--   <ul>
--   <li><tt>load_balancing.algorithm.type</tt> - The load balancing
--   algorithm determines how the load balancer selects targets when
--   routing requests. The value is <tt>round_robin</tt> or
--   <tt>least_outstanding_requests</tt>. The default is
--   <tt>round_robin</tt>.</li>
--   <li><tt>slow_start.duration_seconds</tt> - The time period, in
--   seconds, during which a newly registered target receives an increasing
--   share of the traffic to the target group. After this time period ends,
--   the target receives its full share of traffic. The range is 30-900
--   seconds (15 minutes). The default is 0 seconds (disabled).</li>
--   <li><tt>stickiness.app_cookie.cookie_name</tt> - Indicates the name of
--   the application-based cookie. Names that start with the following
--   prefixes are not allowed: <tt>AWSALB</tt>, <tt>AWSALBAPP</tt>, and
--   <tt>AWSALBTG</tt>; they're reserved for use by the load balancer.</li>
--   <li><tt>stickiness.app_cookie.duration_seconds</tt> - The time period,
--   in seconds, during which requests from a client should be routed to
--   the same target. After this time period expires, the application-based
--   cookie is considered stale. The range is 1 second to 1 week (604800
--   seconds). The default value is 1 day (86400 seconds).</li>
--   <li><tt>stickiness.lb_cookie.duration_seconds</tt> - The time period,
--   in seconds, during which requests from a client should be routed to
--   the same target. After this time period expires, the load
--   balancer-generated cookie is considered stale. The range is 1 second
--   to 1 week (604800 seconds). The default value is 1 day (86400
--   seconds).</li>
--   </ul>
--   
--   The following attribute is supported only if the load balancer is an
--   Application Load Balancer and the target is a Lambda function:
--   
--   <ul>
--   <li><tt>lambda.multi_value_headers.enabled</tt> - Indicates whether
--   the request and response headers that are exchanged between the load
--   balancer and the Lambda function include arrays of values or strings.
--   The value is <tt>true</tt> or <tt>false</tt>. The default is
--   <tt>false</tt>. If the value is <tt>false</tt> and the request
--   contains a duplicate header field name or query parameter key, the
--   load balancer uses the last value sent by the client.</li>
--   </ul>
--   
--   The following attributes are supported only by Network Load Balancers:
--   
--   <ul>
--   <li><tt>deregistration_delay.connection_termination.enabled</tt> -
--   Indicates whether the load balancer terminates connections at the end
--   of the deregistration timeout. The value is <tt>true</tt> or
--   <tt>false</tt>. The default is <tt>false</tt>.</li>
--   <li><tt>preserve_client_ip.enabled</tt> - Indicates whether client IP
--   preservation is enabled. The value is <tt>true</tt> or <tt>false</tt>.
--   The default is disabled if the target group type is IP address and the
--   target group protocol is TCP or TLS. Otherwise, the default is
--   enabled. Client IP preservation cannot be disabled for UDP and TCP_UDP
--   target groups.</li>
--   <li><tt>proxy_protocol_v2.enabled</tt> - Indicates whether Proxy
--   Protocol version 2 is enabled. The value is <tt>true</tt> or
--   <tt>false</tt>. The default is <tt>false</tt>.</li>
--   </ul>
targetGroupAttribute_key :: Lens' TargetGroupAttribute (Maybe Text)
instance GHC.Generics.Generic Network.AWS.ELBV2.Types.TargetGroupAttribute.TargetGroupAttribute
instance GHC.Show.Show Network.AWS.ELBV2.Types.TargetGroupAttribute.TargetGroupAttribute
instance GHC.Read.Read Network.AWS.ELBV2.Types.TargetGroupAttribute.TargetGroupAttribute
instance GHC.Classes.Eq Network.AWS.ELBV2.Types.TargetGroupAttribute.TargetGroupAttribute
instance Network.AWS.Data.XML.FromXML Network.AWS.ELBV2.Types.TargetGroupAttribute.TargetGroupAttribute
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.Types.TargetGroupAttribute.TargetGroupAttribute
instance Control.DeepSeq.NFData Network.AWS.ELBV2.Types.TargetGroupAttribute.TargetGroupAttribute
instance Network.AWS.Data.Query.ToQuery Network.AWS.ELBV2.Types.TargetGroupAttribute.TargetGroupAttribute


module Network.AWS.ELBV2.Types.TargetGroupIpAddressTypeEnum
newtype TargetGroupIpAddressTypeEnum
TargetGroupIpAddressTypeEnum' :: Text -> TargetGroupIpAddressTypeEnum
[fromTargetGroupIpAddressTypeEnum] :: TargetGroupIpAddressTypeEnum -> Text
pattern TargetGroupIpAddressTypeEnum_Ipv4 :: TargetGroupIpAddressTypeEnum
pattern TargetGroupIpAddressTypeEnum_Ipv6 :: TargetGroupIpAddressTypeEnum
instance Network.AWS.Data.XML.ToXML Network.AWS.ELBV2.Types.TargetGroupIpAddressTypeEnum.TargetGroupIpAddressTypeEnum
instance Network.AWS.Data.XML.FromXML Network.AWS.ELBV2.Types.TargetGroupIpAddressTypeEnum.TargetGroupIpAddressTypeEnum
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.ELBV2.Types.TargetGroupIpAddressTypeEnum.TargetGroupIpAddressTypeEnum
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ELBV2.Types.TargetGroupIpAddressTypeEnum.TargetGroupIpAddressTypeEnum
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.ELBV2.Types.TargetGroupIpAddressTypeEnum.TargetGroupIpAddressTypeEnum
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ELBV2.Types.TargetGroupIpAddressTypeEnum.TargetGroupIpAddressTypeEnum
instance Network.AWS.Data.Query.ToQuery Network.AWS.ELBV2.Types.TargetGroupIpAddressTypeEnum.TargetGroupIpAddressTypeEnum
instance Network.AWS.Data.Headers.ToHeader Network.AWS.ELBV2.Types.TargetGroupIpAddressTypeEnum.TargetGroupIpAddressTypeEnum
instance Network.AWS.Data.Log.ToLog Network.AWS.ELBV2.Types.TargetGroupIpAddressTypeEnum.TargetGroupIpAddressTypeEnum
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.ELBV2.Types.TargetGroupIpAddressTypeEnum.TargetGroupIpAddressTypeEnum
instance Network.AWS.Data.Text.ToText Network.AWS.ELBV2.Types.TargetGroupIpAddressTypeEnum.TargetGroupIpAddressTypeEnum
instance Network.AWS.Data.Text.FromText Network.AWS.ELBV2.Types.TargetGroupIpAddressTypeEnum.TargetGroupIpAddressTypeEnum
instance Control.DeepSeq.NFData Network.AWS.ELBV2.Types.TargetGroupIpAddressTypeEnum.TargetGroupIpAddressTypeEnum
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.Types.TargetGroupIpAddressTypeEnum.TargetGroupIpAddressTypeEnum
instance GHC.Generics.Generic Network.AWS.ELBV2.Types.TargetGroupIpAddressTypeEnum.TargetGroupIpAddressTypeEnum
instance GHC.Classes.Ord Network.AWS.ELBV2.Types.TargetGroupIpAddressTypeEnum.TargetGroupIpAddressTypeEnum
instance GHC.Classes.Eq Network.AWS.ELBV2.Types.TargetGroupIpAddressTypeEnum.TargetGroupIpAddressTypeEnum
instance GHC.Read.Read Network.AWS.ELBV2.Types.TargetGroupIpAddressTypeEnum.TargetGroupIpAddressTypeEnum
instance GHC.Show.Show Network.AWS.ELBV2.Types.TargetGroupIpAddressTypeEnum.TargetGroupIpAddressTypeEnum


module Network.AWS.ELBV2.Types.TargetGroupStickinessConfig

-- | Information about the target group stickiness for a rule.
--   
--   <i>See:</i> <a>newTargetGroupStickinessConfig</a> smart constructor.
data TargetGroupStickinessConfig
TargetGroupStickinessConfig' :: Maybe Bool -> Maybe Int -> TargetGroupStickinessConfig

-- | Indicates whether target group stickiness is enabled.
[$sel:enabled:TargetGroupStickinessConfig'] :: TargetGroupStickinessConfig -> Maybe Bool

-- | The time period, in seconds, during which requests from a client
--   should be routed to the same target group. The range is 1-604800
--   seconds (7 days).
[$sel:durationSeconds:TargetGroupStickinessConfig'] :: TargetGroupStickinessConfig -> Maybe Int

-- | Create a value of <a>TargetGroupStickinessConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabled:TargetGroupStickinessConfig'</a>,
--   <a>targetGroupStickinessConfig_enabled</a> - Indicates whether target
--   group stickiness is enabled.
--   
--   <a>$sel:durationSeconds:TargetGroupStickinessConfig'</a>,
--   <a>targetGroupStickinessConfig_durationSeconds</a> - The time period,
--   in seconds, during which requests from a client should be routed to
--   the same target group. The range is 1-604800 seconds (7 days).
newTargetGroupStickinessConfig :: TargetGroupStickinessConfig

-- | Indicates whether target group stickiness is enabled.
targetGroupStickinessConfig_enabled :: Lens' TargetGroupStickinessConfig (Maybe Bool)

-- | The time period, in seconds, during which requests from a client
--   should be routed to the same target group. The range is 1-604800
--   seconds (7 days).
targetGroupStickinessConfig_durationSeconds :: Lens' TargetGroupStickinessConfig (Maybe Int)
instance GHC.Generics.Generic Network.AWS.ELBV2.Types.TargetGroupStickinessConfig.TargetGroupStickinessConfig
instance GHC.Show.Show Network.AWS.ELBV2.Types.TargetGroupStickinessConfig.TargetGroupStickinessConfig
instance GHC.Read.Read Network.AWS.ELBV2.Types.TargetGroupStickinessConfig.TargetGroupStickinessConfig
instance GHC.Classes.Eq Network.AWS.ELBV2.Types.TargetGroupStickinessConfig.TargetGroupStickinessConfig
instance Network.AWS.Data.XML.FromXML Network.AWS.ELBV2.Types.TargetGroupStickinessConfig.TargetGroupStickinessConfig
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.Types.TargetGroupStickinessConfig.TargetGroupStickinessConfig
instance Control.DeepSeq.NFData Network.AWS.ELBV2.Types.TargetGroupStickinessConfig.TargetGroupStickinessConfig
instance Network.AWS.Data.Query.ToQuery Network.AWS.ELBV2.Types.TargetGroupStickinessConfig.TargetGroupStickinessConfig


module Network.AWS.ELBV2.Types.TargetGroupTuple

-- | Information about how traffic will be distributed between multiple
--   target groups in a forward rule.
--   
--   <i>See:</i> <a>newTargetGroupTuple</a> smart constructor.
data TargetGroupTuple
TargetGroupTuple' :: Maybe Int -> Maybe Text -> TargetGroupTuple

-- | The weight. The range is 0 to 999.
[$sel:weight:TargetGroupTuple'] :: TargetGroupTuple -> Maybe Int

-- | The Amazon Resource Name (ARN) of the target group.
[$sel:targetGroupArn:TargetGroupTuple'] :: TargetGroupTuple -> Maybe Text

-- | Create a value of <a>TargetGroupTuple</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:weight:TargetGroupTuple'</a>, <a>targetGroupTuple_weight</a> -
--   The weight. The range is 0 to 999.
--   
--   <a>$sel:targetGroupArn:TargetGroupTuple'</a>,
--   <a>targetGroupTuple_targetGroupArn</a> - The Amazon Resource Name
--   (ARN) of the target group.
newTargetGroupTuple :: TargetGroupTuple

-- | The weight. The range is 0 to 999.
targetGroupTuple_weight :: Lens' TargetGroupTuple (Maybe Int)

-- | The Amazon Resource Name (ARN) of the target group.
targetGroupTuple_targetGroupArn :: Lens' TargetGroupTuple (Maybe Text)
instance GHC.Generics.Generic Network.AWS.ELBV2.Types.TargetGroupTuple.TargetGroupTuple
instance GHC.Show.Show Network.AWS.ELBV2.Types.TargetGroupTuple.TargetGroupTuple
instance GHC.Read.Read Network.AWS.ELBV2.Types.TargetGroupTuple.TargetGroupTuple
instance GHC.Classes.Eq Network.AWS.ELBV2.Types.TargetGroupTuple.TargetGroupTuple
instance Network.AWS.Data.XML.FromXML Network.AWS.ELBV2.Types.TargetGroupTuple.TargetGroupTuple
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.Types.TargetGroupTuple.TargetGroupTuple
instance Control.DeepSeq.NFData Network.AWS.ELBV2.Types.TargetGroupTuple.TargetGroupTuple
instance Network.AWS.Data.Query.ToQuery Network.AWS.ELBV2.Types.TargetGroupTuple.TargetGroupTuple


module Network.AWS.ELBV2.Types.ForwardActionConfig

-- | Information about a forward action.
--   
--   <i>See:</i> <a>newForwardActionConfig</a> smart constructor.
data ForwardActionConfig
ForwardActionConfig' :: Maybe [TargetGroupTuple] -> Maybe TargetGroupStickinessConfig -> ForwardActionConfig

-- | One or more target groups. For Network Load Balancers, you can specify
--   a single target group.
[$sel:targetGroups:ForwardActionConfig'] :: ForwardActionConfig -> Maybe [TargetGroupTuple]

-- | The target group stickiness for the rule.
[$sel:targetGroupStickinessConfig:ForwardActionConfig'] :: ForwardActionConfig -> Maybe TargetGroupStickinessConfig

-- | Create a value of <a>ForwardActionConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetGroups:ForwardActionConfig'</a>,
--   <a>forwardActionConfig_targetGroups</a> - One or more target groups.
--   For Network Load Balancers, you can specify a single target group.
--   
--   <a>$sel:targetGroupStickinessConfig:ForwardActionConfig'</a>,
--   <a>forwardActionConfig_targetGroupStickinessConfig</a> - The target
--   group stickiness for the rule.
newForwardActionConfig :: ForwardActionConfig

-- | One or more target groups. For Network Load Balancers, you can specify
--   a single target group.
forwardActionConfig_targetGroups :: Lens' ForwardActionConfig (Maybe [TargetGroupTuple])

-- | The target group stickiness for the rule.
forwardActionConfig_targetGroupStickinessConfig :: Lens' ForwardActionConfig (Maybe TargetGroupStickinessConfig)
instance GHC.Generics.Generic Network.AWS.ELBV2.Types.ForwardActionConfig.ForwardActionConfig
instance GHC.Show.Show Network.AWS.ELBV2.Types.ForwardActionConfig.ForwardActionConfig
instance GHC.Read.Read Network.AWS.ELBV2.Types.ForwardActionConfig.ForwardActionConfig
instance GHC.Classes.Eq Network.AWS.ELBV2.Types.ForwardActionConfig.ForwardActionConfig
instance Network.AWS.Data.XML.FromXML Network.AWS.ELBV2.Types.ForwardActionConfig.ForwardActionConfig
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.Types.ForwardActionConfig.ForwardActionConfig
instance Control.DeepSeq.NFData Network.AWS.ELBV2.Types.ForwardActionConfig.ForwardActionConfig
instance Network.AWS.Data.Query.ToQuery Network.AWS.ELBV2.Types.ForwardActionConfig.ForwardActionConfig


module Network.AWS.ELBV2.Types.Action

-- | Information about an action.
--   
--   Each rule must include exactly one of the following types of actions:
--   <tt>forward</tt>, <tt>fixed-response</tt>, or <tt>redirect</tt>, and
--   it must be the last action to be performed.
--   
--   <i>See:</i> <a>newAction</a> smart constructor.
data Action
Action' :: Maybe FixedResponseActionConfig -> Maybe Text -> Maybe ForwardActionConfig -> Maybe RedirectActionConfig -> Maybe AuthenticateCognitoActionConfig -> Maybe Natural -> Maybe AuthenticateOidcActionConfig -> ActionTypeEnum -> Action

-- | <ul>
--   <li><i>Application Load Balancer</i> Information for creating an
--   action that returns a custom HTTP response. Specify only when
--   <tt>Type</tt> is <tt>fixed-response</tt>.</li>
--   </ul>
[$sel:fixedResponseConfig:Action'] :: Action -> Maybe FixedResponseActionConfig

-- | The Amazon Resource Name (ARN) of the target group. Specify only when
--   <tt>Type</tt> is <tt>forward</tt> and you want to route to a single
--   target group. To route to one or more target groups, use
--   <tt>ForwardConfig</tt> instead.
[$sel:targetGroupArn:Action'] :: Action -> Maybe Text

-- | Information for creating an action that distributes requests among one
--   or more target groups. For Network Load Balancers, you can specify a
--   single target group. Specify only when <tt>Type</tt> is
--   <tt>forward</tt>. If you specify both <tt>ForwardConfig</tt> and
--   <tt>TargetGroupArn</tt>, you can specify only one target group using
--   <tt>ForwardConfig</tt> and it must be the same target group specified
--   in <tt>TargetGroupArn</tt>.
[$sel:forwardConfig:Action'] :: Action -> Maybe ForwardActionConfig

-- | <ul>
--   <li><i>Application Load Balancer</i> Information for creating a
--   redirect action. Specify only when <tt>Type</tt> is
--   <tt>redirect</tt>.</li>
--   </ul>
[$sel:redirectConfig:Action'] :: Action -> Maybe RedirectActionConfig

-- | <ul>
--   <li><i>HTTPS listeners</i> Information for using Amazon Cognito to
--   authenticate users. Specify only when <tt>Type</tt> is
--   <tt>authenticate-cognito</tt>.</li>
--   </ul>
[$sel:authenticateCognitoConfig:Action'] :: Action -> Maybe AuthenticateCognitoActionConfig

-- | The order for the action. This value is required for rules with
--   multiple actions. The action with the lowest value for order is
--   performed first.
[$sel:order:Action'] :: Action -> Maybe Natural

-- | <ul>
--   <li><i>HTTPS listeners</i> Information about an identity provider that
--   is compliant with OpenID Connect (OIDC). Specify only when
--   <tt>Type</tt> is <tt>authenticate-oidc</tt>.</li>
--   </ul>
[$sel:authenticateOidcConfig:Action'] :: Action -> Maybe AuthenticateOidcActionConfig

-- | The type of action.
[$sel:type':Action'] :: Action -> ActionTypeEnum

-- | Create a value of <a>Action</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fixedResponseConfig:Action'</a>,
--   <a>action_fixedResponseConfig</a> - [Application Load Balancer]
--   Information for creating an action that returns a custom HTTP
--   response. Specify only when <tt>Type</tt> is <tt>fixed-response</tt>.
--   
--   <a>$sel:targetGroupArn:Action'</a>, <a>action_targetGroupArn</a> - The
--   Amazon Resource Name (ARN) of the target group. Specify only when
--   <tt>Type</tt> is <tt>forward</tt> and you want to route to a single
--   target group. To route to one or more target groups, use
--   <tt>ForwardConfig</tt> instead.
--   
--   <a>$sel:forwardConfig:Action'</a>, <a>action_forwardConfig</a> -
--   Information for creating an action that distributes requests among one
--   or more target groups. For Network Load Balancers, you can specify a
--   single target group. Specify only when <tt>Type</tt> is
--   <tt>forward</tt>. If you specify both <tt>ForwardConfig</tt> and
--   <tt>TargetGroupArn</tt>, you can specify only one target group using
--   <tt>ForwardConfig</tt> and it must be the same target group specified
--   in <tt>TargetGroupArn</tt>.
--   
--   <a>$sel:redirectConfig:Action'</a>, <a>action_redirectConfig</a> -
--   [Application Load Balancer] Information for creating a redirect
--   action. Specify only when <tt>Type</tt> is <tt>redirect</tt>.
--   
--   <a>$sel:authenticateCognitoConfig:Action'</a>,
--   <a>action_authenticateCognitoConfig</a> - [HTTPS listeners]
--   Information for using Amazon Cognito to authenticate users. Specify
--   only when <tt>Type</tt> is <tt>authenticate-cognito</tt>.
--   
--   <a>$sel:order:Action'</a>, <a>action_order</a> - The order for the
--   action. This value is required for rules with multiple actions. The
--   action with the lowest value for order is performed first.
--   
--   <a>$sel:authenticateOidcConfig:Action'</a>,
--   <a>action_authenticateOidcConfig</a> - [HTTPS listeners] Information
--   about an identity provider that is compliant with OpenID Connect
--   (OIDC). Specify only when <tt>Type</tt> is <tt>authenticate-oidc</tt>.
--   
--   <a>$sel:type':Action'</a>, <a>action_type</a> - The type of action.
newAction :: ActionTypeEnum -> Action

-- | <ul>
--   <li><i>Application Load Balancer</i> Information for creating an
--   action that returns a custom HTTP response. Specify only when
--   <tt>Type</tt> is <tt>fixed-response</tt>.</li>
--   </ul>
action_fixedResponseConfig :: Lens' Action (Maybe FixedResponseActionConfig)

-- | The Amazon Resource Name (ARN) of the target group. Specify only when
--   <tt>Type</tt> is <tt>forward</tt> and you want to route to a single
--   target group. To route to one or more target groups, use
--   <tt>ForwardConfig</tt> instead.
action_targetGroupArn :: Lens' Action (Maybe Text)

-- | Information for creating an action that distributes requests among one
--   or more target groups. For Network Load Balancers, you can specify a
--   single target group. Specify only when <tt>Type</tt> is
--   <tt>forward</tt>. If you specify both <tt>ForwardConfig</tt> and
--   <tt>TargetGroupArn</tt>, you can specify only one target group using
--   <tt>ForwardConfig</tt> and it must be the same target group specified
--   in <tt>TargetGroupArn</tt>.
action_forwardConfig :: Lens' Action (Maybe ForwardActionConfig)

-- | <ul>
--   <li><i>Application Load Balancer</i> Information for creating a
--   redirect action. Specify only when <tt>Type</tt> is
--   <tt>redirect</tt>.</li>
--   </ul>
action_redirectConfig :: Lens' Action (Maybe RedirectActionConfig)

-- | <ul>
--   <li><i>HTTPS listeners</i> Information for using Amazon Cognito to
--   authenticate users. Specify only when <tt>Type</tt> is
--   <tt>authenticate-cognito</tt>.</li>
--   </ul>
action_authenticateCognitoConfig :: Lens' Action (Maybe AuthenticateCognitoActionConfig)

-- | The order for the action. This value is required for rules with
--   multiple actions. The action with the lowest value for order is
--   performed first.
action_order :: Lens' Action (Maybe Natural)

-- | <ul>
--   <li><i>HTTPS listeners</i> Information about an identity provider that
--   is compliant with OpenID Connect (OIDC). Specify only when
--   <tt>Type</tt> is <tt>authenticate-oidc</tt>.</li>
--   </ul>
action_authenticateOidcConfig :: Lens' Action (Maybe AuthenticateOidcActionConfig)

-- | The type of action.
action_type :: Lens' Action ActionTypeEnum
instance GHC.Generics.Generic Network.AWS.ELBV2.Types.Action.Action
instance GHC.Show.Show Network.AWS.ELBV2.Types.Action.Action
instance GHC.Read.Read Network.AWS.ELBV2.Types.Action.Action
instance GHC.Classes.Eq Network.AWS.ELBV2.Types.Action.Action
instance Network.AWS.Data.XML.FromXML Network.AWS.ELBV2.Types.Action.Action
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.Types.Action.Action
instance Control.DeepSeq.NFData Network.AWS.ELBV2.Types.Action.Action
instance Network.AWS.Data.Query.ToQuery Network.AWS.ELBV2.Types.Action.Action


module Network.AWS.ELBV2.Types.Rule

-- | Information about a rule.
--   
--   <i>See:</i> <a>newRule</a> smart constructor.
data Rule
Rule' :: Maybe Text -> Maybe [Action] -> Maybe [RuleCondition] -> Maybe Text -> Maybe Bool -> Rule

-- | The priority.
[$sel:priority:Rule'] :: Rule -> Maybe Text

-- | The actions. Each rule must include exactly one of the following types
--   of actions: <tt>forward</tt>, <tt>redirect</tt>, or
--   <tt>fixed-response</tt>, and it must be the last action to be
--   performed.
[$sel:actions:Rule'] :: Rule -> Maybe [Action]

-- | The conditions. Each rule can include zero or one of the following
--   conditions: <tt>http-request-method</tt>, <tt>host-header</tt>,
--   <tt>path-pattern</tt>, and <tt>source-ip</tt>, and zero or more of the
--   following conditions: <tt>http-header</tt> and <tt>query-string</tt>.
[$sel:conditions:Rule'] :: Rule -> Maybe [RuleCondition]

-- | The Amazon Resource Name (ARN) of the rule.
[$sel:ruleArn:Rule'] :: Rule -> Maybe Text

-- | Indicates whether this is the default rule.
[$sel:isDefault:Rule'] :: Rule -> Maybe Bool

-- | Create a value of <a>Rule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:priority:Rule'</a>, <a>rule_priority</a> - The priority.
--   
--   <a>$sel:actions:Rule'</a>, <a>rule_actions</a> - The actions. Each
--   rule must include exactly one of the following types of actions:
--   <tt>forward</tt>, <tt>redirect</tt>, or <tt>fixed-response</tt>, and
--   it must be the last action to be performed.
--   
--   <a>$sel:conditions:Rule'</a>, <a>rule_conditions</a> - The conditions.
--   Each rule can include zero or one of the following conditions:
--   <tt>http-request-method</tt>, <tt>host-header</tt>,
--   <tt>path-pattern</tt>, and <tt>source-ip</tt>, and zero or more of the
--   following conditions: <tt>http-header</tt> and <tt>query-string</tt>.
--   
--   <a>$sel:ruleArn:Rule'</a>, <a>rule_ruleArn</a> - The Amazon Resource
--   Name (ARN) of the rule.
--   
--   <a>$sel:isDefault:Rule'</a>, <a>rule_isDefault</a> - Indicates whether
--   this is the default rule.
newRule :: Rule

-- | The priority.
rule_priority :: Lens' Rule (Maybe Text)

-- | The actions. Each rule must include exactly one of the following types
--   of actions: <tt>forward</tt>, <tt>redirect</tt>, or
--   <tt>fixed-response</tt>, and it must be the last action to be
--   performed.
rule_actions :: Lens' Rule (Maybe [Action])

-- | The conditions. Each rule can include zero or one of the following
--   conditions: <tt>http-request-method</tt>, <tt>host-header</tt>,
--   <tt>path-pattern</tt>, and <tt>source-ip</tt>, and zero or more of the
--   following conditions: <tt>http-header</tt> and <tt>query-string</tt>.
rule_conditions :: Lens' Rule (Maybe [RuleCondition])

-- | The Amazon Resource Name (ARN) of the rule.
rule_ruleArn :: Lens' Rule (Maybe Text)

-- | Indicates whether this is the default rule.
rule_isDefault :: Lens' Rule (Maybe Bool)
instance GHC.Generics.Generic Network.AWS.ELBV2.Types.Rule.Rule
instance GHC.Show.Show Network.AWS.ELBV2.Types.Rule.Rule
instance GHC.Read.Read Network.AWS.ELBV2.Types.Rule.Rule
instance GHC.Classes.Eq Network.AWS.ELBV2.Types.Rule.Rule
instance Network.AWS.Data.XML.FromXML Network.AWS.ELBV2.Types.Rule.Rule
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.Types.Rule.Rule
instance Control.DeepSeq.NFData Network.AWS.ELBV2.Types.Rule.Rule


module Network.AWS.ELBV2.Types.Listener

-- | Information about a listener.
--   
--   <i>See:</i> <a>newListener</a> smart constructor.
data Listener
Listener' :: Maybe Text -> Maybe Text -> Maybe ProtocolEnum -> Maybe [Action] -> Maybe [Certificate] -> Maybe Text -> Maybe [Text] -> Maybe Natural -> Listener

-- | <ul>
--   <li><i>HTTPS or TLS listener</i> The security policy that defines
--   which protocols and ciphers are supported.</li>
--   </ul>
[$sel:sslPolicy:Listener'] :: Listener -> Maybe Text

-- | The Amazon Resource Name (ARN) of the listener.
[$sel:listenerArn:Listener'] :: Listener -> Maybe Text

-- | The protocol for connections from clients to the load balancer.
[$sel:protocol:Listener'] :: Listener -> Maybe ProtocolEnum

-- | The default actions for the listener.
[$sel:defaultActions:Listener'] :: Listener -> Maybe [Action]

-- | <ul>
--   <li><i>HTTPS or TLS listener</i> The default certificate for the
--   listener.</li>
--   </ul>
[$sel:certificates:Listener'] :: Listener -> Maybe [Certificate]

-- | The Amazon Resource Name (ARN) of the load balancer.
[$sel:loadBalancerArn:Listener'] :: Listener -> Maybe Text

-- | <ul>
--   <li><i>TLS listener</i> The name of the Application-Layer Protocol
--   Negotiation (ALPN) policy.</li>
--   </ul>
[$sel:alpnPolicy:Listener'] :: Listener -> Maybe [Text]

-- | The port on which the load balancer is listening.
[$sel:port:Listener'] :: Listener -> Maybe Natural

-- | Create a value of <a>Listener</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sslPolicy:Listener'</a>, <a>listener_sslPolicy</a> - [HTTPS or
--   TLS listener] The security policy that defines which protocols and
--   ciphers are supported.
--   
--   <a>$sel:listenerArn:Listener'</a>, <a>listener_listenerArn</a> - The
--   Amazon Resource Name (ARN) of the listener.
--   
--   <a>$sel:protocol:Listener'</a>, <a>listener_protocol</a> - The
--   protocol for connections from clients to the load balancer.
--   
--   <a>$sel:defaultActions:Listener'</a>, <a>listener_defaultActions</a> -
--   The default actions for the listener.
--   
--   <a>$sel:certificates:Listener'</a>, <a>listener_certificates</a> -
--   [HTTPS or TLS listener] The default certificate for the listener.
--   
--   <a>$sel:loadBalancerArn:Listener'</a>, <a>listener_loadBalancerArn</a>
--   - The Amazon Resource Name (ARN) of the load balancer.
--   
--   <a>$sel:alpnPolicy:Listener'</a>, <a>listener_alpnPolicy</a> - [TLS
--   listener] The name of the Application-Layer Protocol Negotiation
--   (ALPN) policy.
--   
--   <a>$sel:port:Listener'</a>, <a>listener_port</a> - The port on which
--   the load balancer is listening.
newListener :: Listener

-- | <ul>
--   <li><i>HTTPS or TLS listener</i> The security policy that defines
--   which protocols and ciphers are supported.</li>
--   </ul>
listener_sslPolicy :: Lens' Listener (Maybe Text)

-- | The Amazon Resource Name (ARN) of the listener.
listener_listenerArn :: Lens' Listener (Maybe Text)

-- | The protocol for connections from clients to the load balancer.
listener_protocol :: Lens' Listener (Maybe ProtocolEnum)

-- | The default actions for the listener.
listener_defaultActions :: Lens' Listener (Maybe [Action])

-- | <ul>
--   <li><i>HTTPS or TLS listener</i> The default certificate for the
--   listener.</li>
--   </ul>
listener_certificates :: Lens' Listener (Maybe [Certificate])

-- | The Amazon Resource Name (ARN) of the load balancer.
listener_loadBalancerArn :: Lens' Listener (Maybe Text)

-- | <ul>
--   <li><i>TLS listener</i> The name of the Application-Layer Protocol
--   Negotiation (ALPN) policy.</li>
--   </ul>
listener_alpnPolicy :: Lens' Listener (Maybe [Text])

-- | The port on which the load balancer is listening.
listener_port :: Lens' Listener (Maybe Natural)
instance GHC.Generics.Generic Network.AWS.ELBV2.Types.Listener.Listener
instance GHC.Show.Show Network.AWS.ELBV2.Types.Listener.Listener
instance GHC.Read.Read Network.AWS.ELBV2.Types.Listener.Listener
instance GHC.Classes.Eq Network.AWS.ELBV2.Types.Listener.Listener
instance Network.AWS.Data.XML.FromXML Network.AWS.ELBV2.Types.Listener.Listener
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.Types.Listener.Listener
instance Control.DeepSeq.NFData Network.AWS.ELBV2.Types.Listener.Listener


module Network.AWS.ELBV2.Types.TargetHealthReasonEnum
newtype TargetHealthReasonEnum
TargetHealthReasonEnum' :: Text -> TargetHealthReasonEnum
[fromTargetHealthReasonEnum] :: TargetHealthReasonEnum -> Text
pattern TargetHealthReasonEnum_Elb_InitialHealthChecking :: TargetHealthReasonEnum
pattern TargetHealthReasonEnum_Elb_InternalError :: TargetHealthReasonEnum
pattern TargetHealthReasonEnum_Elb_RegistrationInProgress :: TargetHealthReasonEnum
pattern TargetHealthReasonEnum_Target_DeregistrationInProgress :: TargetHealthReasonEnum
pattern TargetHealthReasonEnum_Target_FailedHealthChecks :: TargetHealthReasonEnum
pattern TargetHealthReasonEnum_Target_HealthCheckDisabled :: TargetHealthReasonEnum
pattern TargetHealthReasonEnum_Target_InvalidState :: TargetHealthReasonEnum
pattern TargetHealthReasonEnum_Target_IpUnusable :: TargetHealthReasonEnum
pattern TargetHealthReasonEnum_Target_NotInUse :: TargetHealthReasonEnum
pattern TargetHealthReasonEnum_Target_NotRegistered :: TargetHealthReasonEnum
pattern TargetHealthReasonEnum_Target_ResponseCodeMismatch :: TargetHealthReasonEnum
pattern TargetHealthReasonEnum_Target_Timeout :: TargetHealthReasonEnum
instance Network.AWS.Data.XML.ToXML Network.AWS.ELBV2.Types.TargetHealthReasonEnum.TargetHealthReasonEnum
instance Network.AWS.Data.XML.FromXML Network.AWS.ELBV2.Types.TargetHealthReasonEnum.TargetHealthReasonEnum
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.ELBV2.Types.TargetHealthReasonEnum.TargetHealthReasonEnum
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ELBV2.Types.TargetHealthReasonEnum.TargetHealthReasonEnum
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.ELBV2.Types.TargetHealthReasonEnum.TargetHealthReasonEnum
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ELBV2.Types.TargetHealthReasonEnum.TargetHealthReasonEnum
instance Network.AWS.Data.Query.ToQuery Network.AWS.ELBV2.Types.TargetHealthReasonEnum.TargetHealthReasonEnum
instance Network.AWS.Data.Headers.ToHeader Network.AWS.ELBV2.Types.TargetHealthReasonEnum.TargetHealthReasonEnum
instance Network.AWS.Data.Log.ToLog Network.AWS.ELBV2.Types.TargetHealthReasonEnum.TargetHealthReasonEnum
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.ELBV2.Types.TargetHealthReasonEnum.TargetHealthReasonEnum
instance Network.AWS.Data.Text.ToText Network.AWS.ELBV2.Types.TargetHealthReasonEnum.TargetHealthReasonEnum
instance Network.AWS.Data.Text.FromText Network.AWS.ELBV2.Types.TargetHealthReasonEnum.TargetHealthReasonEnum
instance Control.DeepSeq.NFData Network.AWS.ELBV2.Types.TargetHealthReasonEnum.TargetHealthReasonEnum
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.Types.TargetHealthReasonEnum.TargetHealthReasonEnum
instance GHC.Generics.Generic Network.AWS.ELBV2.Types.TargetHealthReasonEnum.TargetHealthReasonEnum
instance GHC.Classes.Ord Network.AWS.ELBV2.Types.TargetHealthReasonEnum.TargetHealthReasonEnum
instance GHC.Classes.Eq Network.AWS.ELBV2.Types.TargetHealthReasonEnum.TargetHealthReasonEnum
instance GHC.Read.Read Network.AWS.ELBV2.Types.TargetHealthReasonEnum.TargetHealthReasonEnum
instance GHC.Show.Show Network.AWS.ELBV2.Types.TargetHealthReasonEnum.TargetHealthReasonEnum


module Network.AWS.ELBV2.Types.TargetHealthStateEnum
newtype TargetHealthStateEnum
TargetHealthStateEnum' :: Text -> TargetHealthStateEnum
[fromTargetHealthStateEnum] :: TargetHealthStateEnum -> Text
pattern TargetHealthStateEnum_Draining :: TargetHealthStateEnum
pattern TargetHealthStateEnum_Healthy :: TargetHealthStateEnum
pattern TargetHealthStateEnum_Initial :: TargetHealthStateEnum
pattern TargetHealthStateEnum_Unavailable :: TargetHealthStateEnum
pattern TargetHealthStateEnum_Unhealthy :: TargetHealthStateEnum
pattern TargetHealthStateEnum_Unused :: TargetHealthStateEnum
instance Network.AWS.Data.XML.ToXML Network.AWS.ELBV2.Types.TargetHealthStateEnum.TargetHealthStateEnum
instance Network.AWS.Data.XML.FromXML Network.AWS.ELBV2.Types.TargetHealthStateEnum.TargetHealthStateEnum
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.ELBV2.Types.TargetHealthStateEnum.TargetHealthStateEnum
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ELBV2.Types.TargetHealthStateEnum.TargetHealthStateEnum
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.ELBV2.Types.TargetHealthStateEnum.TargetHealthStateEnum
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ELBV2.Types.TargetHealthStateEnum.TargetHealthStateEnum
instance Network.AWS.Data.Query.ToQuery Network.AWS.ELBV2.Types.TargetHealthStateEnum.TargetHealthStateEnum
instance Network.AWS.Data.Headers.ToHeader Network.AWS.ELBV2.Types.TargetHealthStateEnum.TargetHealthStateEnum
instance Network.AWS.Data.Log.ToLog Network.AWS.ELBV2.Types.TargetHealthStateEnum.TargetHealthStateEnum
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.ELBV2.Types.TargetHealthStateEnum.TargetHealthStateEnum
instance Network.AWS.Data.Text.ToText Network.AWS.ELBV2.Types.TargetHealthStateEnum.TargetHealthStateEnum
instance Network.AWS.Data.Text.FromText Network.AWS.ELBV2.Types.TargetHealthStateEnum.TargetHealthStateEnum
instance Control.DeepSeq.NFData Network.AWS.ELBV2.Types.TargetHealthStateEnum.TargetHealthStateEnum
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.Types.TargetHealthStateEnum.TargetHealthStateEnum
instance GHC.Generics.Generic Network.AWS.ELBV2.Types.TargetHealthStateEnum.TargetHealthStateEnum
instance GHC.Classes.Ord Network.AWS.ELBV2.Types.TargetHealthStateEnum.TargetHealthStateEnum
instance GHC.Classes.Eq Network.AWS.ELBV2.Types.TargetHealthStateEnum.TargetHealthStateEnum
instance GHC.Read.Read Network.AWS.ELBV2.Types.TargetHealthStateEnum.TargetHealthStateEnum
instance GHC.Show.Show Network.AWS.ELBV2.Types.TargetHealthStateEnum.TargetHealthStateEnum


module Network.AWS.ELBV2.Types.TargetHealth

-- | Information about the current health of a target.
--   
--   <i>See:</i> <a>newTargetHealth</a> smart constructor.
data TargetHealth
TargetHealth' :: Maybe TargetHealthStateEnum -> Maybe TargetHealthReasonEnum -> Maybe Text -> TargetHealth

-- | The state of the target.
[$sel:state:TargetHealth'] :: TargetHealth -> Maybe TargetHealthStateEnum

-- | The reason code.
--   
--   If the target state is <tt>healthy</tt>, a reason code is not
--   provided.
--   
--   If the target state is <tt>initial</tt>, the reason code can be one of
--   the following values:
--   
--   <ul>
--   <li><tt>Elb.RegistrationInProgress</tt> - The target is in the process
--   of being registered with the load balancer.</li>
--   <li><tt>Elb.InitialHealthChecking</tt> - The load balancer is still
--   sending the target the minimum number of health checks required to
--   determine its health status.</li>
--   </ul>
--   
--   If the target state is <tt>unhealthy</tt>, the reason code can be one
--   of the following values:
--   
--   <ul>
--   <li><tt>Target.ResponseCodeMismatch</tt> - The health checks did not
--   return an expected HTTP code. Applies only to Application Load
--   Balancers and Gateway Load Balancers.</li>
--   <li><tt>Target.Timeout</tt> - The health check requests timed out.
--   Applies only to Application Load Balancers and Gateway Load
--   Balancers.</li>
--   <li><tt>Target.FailedHealthChecks</tt> - The load balancer received an
--   error while establishing a connection to the target or the target
--   response was malformed.</li>
--   <li><tt>Elb.InternalError</tt> - The health checks failed due to an
--   internal error. Applies only to Application Load Balancers.</li>
--   </ul>
--   
--   If the target state is <tt>unused</tt>, the reason code can be one of
--   the following values:
--   
--   <ul>
--   <li><tt>Target.NotRegistered</tt> - The target is not registered with
--   the target group.</li>
--   <li><tt>Target.NotInUse</tt> - The target group is not used by any
--   load balancer or the target is in an Availability Zone that is not
--   enabled for its load balancer.</li>
--   <li><tt>Target.InvalidState</tt> - The target is in the stopped or
--   terminated state.</li>
--   <li><tt>Target.IpUnusable</tt> - The target IP address is reserved for
--   use by a load balancer.</li>
--   </ul>
--   
--   If the target state is <tt>draining</tt>, the reason code can be the
--   following value:
--   
--   <ul>
--   <li><tt>Target.DeregistrationInProgress</tt> - The target is in the
--   process of being deregistered and the deregistration delay period has
--   not expired.</li>
--   </ul>
--   
--   If the target state is <tt>unavailable</tt>, the reason code can be
--   the following value:
--   
--   <ul>
--   <li><tt>Target.HealthCheckDisabled</tt> - Health checks are disabled
--   for the target group. Applies only to Application Load Balancers.</li>
--   <li><tt>Elb.InternalError</tt> - Target health is unavailable due to
--   an internal error. Applies only to Network Load Balancers.</li>
--   </ul>
[$sel:reason:TargetHealth'] :: TargetHealth -> Maybe TargetHealthReasonEnum

-- | A description of the target health that provides additional details.
--   If the state is <tt>healthy</tt>, a description is not provided.
[$sel:description:TargetHealth'] :: TargetHealth -> Maybe Text

-- | Create a value of <a>TargetHealth</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:TargetHealth'</a>, <a>targetHealth_state</a> - The state
--   of the target.
--   
--   <a>$sel:reason:TargetHealth'</a>, <a>targetHealth_reason</a> - The
--   reason code.
--   
--   If the target state is <tt>healthy</tt>, a reason code is not
--   provided.
--   
--   If the target state is <tt>initial</tt>, the reason code can be one of
--   the following values:
--   
--   <ul>
--   <li><tt>Elb.RegistrationInProgress</tt> - The target is in the process
--   of being registered with the load balancer.</li>
--   <li><tt>Elb.InitialHealthChecking</tt> - The load balancer is still
--   sending the target the minimum number of health checks required to
--   determine its health status.</li>
--   </ul>
--   
--   If the target state is <tt>unhealthy</tt>, the reason code can be one
--   of the following values:
--   
--   <ul>
--   <li><tt>Target.ResponseCodeMismatch</tt> - The health checks did not
--   return an expected HTTP code. Applies only to Application Load
--   Balancers and Gateway Load Balancers.</li>
--   <li><tt>Target.Timeout</tt> - The health check requests timed out.
--   Applies only to Application Load Balancers and Gateway Load
--   Balancers.</li>
--   <li><tt>Target.FailedHealthChecks</tt> - The load balancer received an
--   error while establishing a connection to the target or the target
--   response was malformed.</li>
--   <li><tt>Elb.InternalError</tt> - The health checks failed due to an
--   internal error. Applies only to Application Load Balancers.</li>
--   </ul>
--   
--   If the target state is <tt>unused</tt>, the reason code can be one of
--   the following values:
--   
--   <ul>
--   <li><tt>Target.NotRegistered</tt> - The target is not registered with
--   the target group.</li>
--   <li><tt>Target.NotInUse</tt> - The target group is not used by any
--   load balancer or the target is in an Availability Zone that is not
--   enabled for its load balancer.</li>
--   <li><tt>Target.InvalidState</tt> - The target is in the stopped or
--   terminated state.</li>
--   <li><tt>Target.IpUnusable</tt> - The target IP address is reserved for
--   use by a load balancer.</li>
--   </ul>
--   
--   If the target state is <tt>draining</tt>, the reason code can be the
--   following value:
--   
--   <ul>
--   <li><tt>Target.DeregistrationInProgress</tt> - The target is in the
--   process of being deregistered and the deregistration delay period has
--   not expired.</li>
--   </ul>
--   
--   If the target state is <tt>unavailable</tt>, the reason code can be
--   the following value:
--   
--   <ul>
--   <li><tt>Target.HealthCheckDisabled</tt> - Health checks are disabled
--   for the target group. Applies only to Application Load Balancers.</li>
--   <li><tt>Elb.InternalError</tt> - Target health is unavailable due to
--   an internal error. Applies only to Network Load Balancers.</li>
--   </ul>
--   
--   <a>$sel:description:TargetHealth'</a>, <a>targetHealth_description</a>
--   - A description of the target health that provides additional details.
--   If the state is <tt>healthy</tt>, a description is not provided.
newTargetHealth :: TargetHealth

-- | The state of the target.
targetHealth_state :: Lens' TargetHealth (Maybe TargetHealthStateEnum)

-- | The reason code.
--   
--   If the target state is <tt>healthy</tt>, a reason code is not
--   provided.
--   
--   If the target state is <tt>initial</tt>, the reason code can be one of
--   the following values:
--   
--   <ul>
--   <li><tt>Elb.RegistrationInProgress</tt> - The target is in the process
--   of being registered with the load balancer.</li>
--   <li><tt>Elb.InitialHealthChecking</tt> - The load balancer is still
--   sending the target the minimum number of health checks required to
--   determine its health status.</li>
--   </ul>
--   
--   If the target state is <tt>unhealthy</tt>, the reason code can be one
--   of the following values:
--   
--   <ul>
--   <li><tt>Target.ResponseCodeMismatch</tt> - The health checks did not
--   return an expected HTTP code. Applies only to Application Load
--   Balancers and Gateway Load Balancers.</li>
--   <li><tt>Target.Timeout</tt> - The health check requests timed out.
--   Applies only to Application Load Balancers and Gateway Load
--   Balancers.</li>
--   <li><tt>Target.FailedHealthChecks</tt> - The load balancer received an
--   error while establishing a connection to the target or the target
--   response was malformed.</li>
--   <li><tt>Elb.InternalError</tt> - The health checks failed due to an
--   internal error. Applies only to Application Load Balancers.</li>
--   </ul>
--   
--   If the target state is <tt>unused</tt>, the reason code can be one of
--   the following values:
--   
--   <ul>
--   <li><tt>Target.NotRegistered</tt> - The target is not registered with
--   the target group.</li>
--   <li><tt>Target.NotInUse</tt> - The target group is not used by any
--   load balancer or the target is in an Availability Zone that is not
--   enabled for its load balancer.</li>
--   <li><tt>Target.InvalidState</tt> - The target is in the stopped or
--   terminated state.</li>
--   <li><tt>Target.IpUnusable</tt> - The target IP address is reserved for
--   use by a load balancer.</li>
--   </ul>
--   
--   If the target state is <tt>draining</tt>, the reason code can be the
--   following value:
--   
--   <ul>
--   <li><tt>Target.DeregistrationInProgress</tt> - The target is in the
--   process of being deregistered and the deregistration delay period has
--   not expired.</li>
--   </ul>
--   
--   If the target state is <tt>unavailable</tt>, the reason code can be
--   the following value:
--   
--   <ul>
--   <li><tt>Target.HealthCheckDisabled</tt> - Health checks are disabled
--   for the target group. Applies only to Application Load Balancers.</li>
--   <li><tt>Elb.InternalError</tt> - Target health is unavailable due to
--   an internal error. Applies only to Network Load Balancers.</li>
--   </ul>
targetHealth_reason :: Lens' TargetHealth (Maybe TargetHealthReasonEnum)

-- | A description of the target health that provides additional details.
--   If the state is <tt>healthy</tt>, a description is not provided.
targetHealth_description :: Lens' TargetHealth (Maybe Text)
instance GHC.Generics.Generic Network.AWS.ELBV2.Types.TargetHealth.TargetHealth
instance GHC.Show.Show Network.AWS.ELBV2.Types.TargetHealth.TargetHealth
instance GHC.Read.Read Network.AWS.ELBV2.Types.TargetHealth.TargetHealth
instance GHC.Classes.Eq Network.AWS.ELBV2.Types.TargetHealth.TargetHealth
instance Network.AWS.Data.XML.FromXML Network.AWS.ELBV2.Types.TargetHealth.TargetHealth
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.Types.TargetHealth.TargetHealth
instance Control.DeepSeq.NFData Network.AWS.ELBV2.Types.TargetHealth.TargetHealth


module Network.AWS.ELBV2.Types.TargetHealthDescription

-- | Information about the health of a target.
--   
--   <i>See:</i> <a>newTargetHealthDescription</a> smart constructor.
data TargetHealthDescription
TargetHealthDescription' :: Maybe TargetHealth -> Maybe Text -> Maybe TargetDescription -> TargetHealthDescription

-- | The health information for the target.
[$sel:targetHealth:TargetHealthDescription'] :: TargetHealthDescription -> Maybe TargetHealth

-- | The port to use to connect with the target.
[$sel:healthCheckPort:TargetHealthDescription'] :: TargetHealthDescription -> Maybe Text

-- | The description of the target.
[$sel:target:TargetHealthDescription'] :: TargetHealthDescription -> Maybe TargetDescription

-- | Create a value of <a>TargetHealthDescription</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetHealth:TargetHealthDescription'</a>,
--   <a>targetHealthDescription_targetHealth</a> - The health information
--   for the target.
--   
--   <a>$sel:healthCheckPort:TargetHealthDescription'</a>,
--   <a>targetHealthDescription_healthCheckPort</a> - The port to use to
--   connect with the target.
--   
--   <a>$sel:target:TargetHealthDescription'</a>,
--   <a>targetHealthDescription_target</a> - The description of the target.
newTargetHealthDescription :: TargetHealthDescription

-- | The health information for the target.
targetHealthDescription_targetHealth :: Lens' TargetHealthDescription (Maybe TargetHealth)

-- | The port to use to connect with the target.
targetHealthDescription_healthCheckPort :: Lens' TargetHealthDescription (Maybe Text)

-- | The description of the target.
targetHealthDescription_target :: Lens' TargetHealthDescription (Maybe TargetDescription)
instance GHC.Generics.Generic Network.AWS.ELBV2.Types.TargetHealthDescription.TargetHealthDescription
instance GHC.Show.Show Network.AWS.ELBV2.Types.TargetHealthDescription.TargetHealthDescription
instance GHC.Read.Read Network.AWS.ELBV2.Types.TargetHealthDescription.TargetHealthDescription
instance GHC.Classes.Eq Network.AWS.ELBV2.Types.TargetHealthDescription.TargetHealthDescription
instance Network.AWS.Data.XML.FromXML Network.AWS.ELBV2.Types.TargetHealthDescription.TargetHealthDescription
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.Types.TargetHealthDescription.TargetHealthDescription
instance Control.DeepSeq.NFData Network.AWS.ELBV2.Types.TargetHealthDescription.TargetHealthDescription


module Network.AWS.ELBV2.Types.TargetTypeEnum
newtype TargetTypeEnum
TargetTypeEnum' :: Text -> TargetTypeEnum
[fromTargetTypeEnum] :: TargetTypeEnum -> Text
pattern TargetTypeEnum_Alb :: TargetTypeEnum
pattern TargetTypeEnum_Instance :: TargetTypeEnum
pattern TargetTypeEnum_Ip :: TargetTypeEnum
pattern TargetTypeEnum_Lambda :: TargetTypeEnum
instance Network.AWS.Data.XML.ToXML Network.AWS.ELBV2.Types.TargetTypeEnum.TargetTypeEnum
instance Network.AWS.Data.XML.FromXML Network.AWS.ELBV2.Types.TargetTypeEnum.TargetTypeEnum
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.ELBV2.Types.TargetTypeEnum.TargetTypeEnum
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ELBV2.Types.TargetTypeEnum.TargetTypeEnum
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.ELBV2.Types.TargetTypeEnum.TargetTypeEnum
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ELBV2.Types.TargetTypeEnum.TargetTypeEnum
instance Network.AWS.Data.Query.ToQuery Network.AWS.ELBV2.Types.TargetTypeEnum.TargetTypeEnum
instance Network.AWS.Data.Headers.ToHeader Network.AWS.ELBV2.Types.TargetTypeEnum.TargetTypeEnum
instance Network.AWS.Data.Log.ToLog Network.AWS.ELBV2.Types.TargetTypeEnum.TargetTypeEnum
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.ELBV2.Types.TargetTypeEnum.TargetTypeEnum
instance Network.AWS.Data.Text.ToText Network.AWS.ELBV2.Types.TargetTypeEnum.TargetTypeEnum
instance Network.AWS.Data.Text.FromText Network.AWS.ELBV2.Types.TargetTypeEnum.TargetTypeEnum
instance Control.DeepSeq.NFData Network.AWS.ELBV2.Types.TargetTypeEnum.TargetTypeEnum
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.Types.TargetTypeEnum.TargetTypeEnum
instance GHC.Generics.Generic Network.AWS.ELBV2.Types.TargetTypeEnum.TargetTypeEnum
instance GHC.Classes.Ord Network.AWS.ELBV2.Types.TargetTypeEnum.TargetTypeEnum
instance GHC.Classes.Eq Network.AWS.ELBV2.Types.TargetTypeEnum.TargetTypeEnum
instance GHC.Read.Read Network.AWS.ELBV2.Types.TargetTypeEnum.TargetTypeEnum
instance GHC.Show.Show Network.AWS.ELBV2.Types.TargetTypeEnum.TargetTypeEnum


module Network.AWS.ELBV2.Types.TargetGroup

-- | Information about a target group.
--   
--   <i>See:</i> <a>newTargetGroup</a> smart constructor.
data TargetGroup
TargetGroup' :: Maybe Text -> Maybe Matcher -> Maybe Text -> Maybe Bool -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe ProtocolEnum -> Maybe Natural -> Maybe TargetTypeEnum -> Maybe Natural -> Maybe ProtocolEnum -> Maybe [Text] -> Maybe TargetGroupIpAddressTypeEnum -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Natural -> TargetGroup

-- | <ul>
--   <li><i>HTTP/HTTPS protocol</i> The protocol version. The possible
--   values are <tt>GRPC</tt>, <tt>HTTP1</tt>, and <tt>HTTP2</tt>.</li>
--   </ul>
[$sel:protocolVersion:TargetGroup'] :: TargetGroup -> Maybe Text

-- | The HTTP or gRPC codes to use when checking for a successful response
--   from a target.
[$sel:matcher:TargetGroup'] :: TargetGroup -> Maybe Matcher

-- | The destination for health checks on the targets.
[$sel:healthCheckPath:TargetGroup'] :: TargetGroup -> Maybe Text

-- | Indicates whether health checks are enabled.
[$sel:healthCheckEnabled:TargetGroup'] :: TargetGroup -> Maybe Bool

-- | The number of consecutive health check failures required before
--   considering the target unhealthy.
[$sel:unhealthyThresholdCount:TargetGroup'] :: TargetGroup -> Maybe Natural

-- | The ID of the VPC for the targets.
[$sel:vpcId:TargetGroup'] :: TargetGroup -> Maybe Text

-- | The Amazon Resource Name (ARN) of the target group.
[$sel:targetGroupArn:TargetGroup'] :: TargetGroup -> Maybe Text

-- | The protocol to use for routing traffic to the targets.
[$sel:protocol:TargetGroup'] :: TargetGroup -> Maybe ProtocolEnum

-- | The approximate amount of time, in seconds, between health checks of
--   an individual target.
[$sel:healthCheckIntervalSeconds:TargetGroup'] :: TargetGroup -> Maybe Natural

-- | The type of target that you must specify when registering targets with
--   this target group. The possible values are <tt>instance</tt> (register
--   targets by instance ID), <tt>ip</tt> (register targets by IP address),
--   <tt>lambda</tt> (register a single Lambda function as a target), or
--   <tt>alb</tt> (register a single Application Load Balancer as a
--   target).
[$sel:targetType:TargetGroup'] :: TargetGroup -> Maybe TargetTypeEnum

-- | The number of consecutive health checks successes required before
--   considering an unhealthy target healthy.
[$sel:healthyThresholdCount:TargetGroup'] :: TargetGroup -> Maybe Natural

-- | The protocol to use to connect with the target. The GENEVE, TLS, UDP,
--   and TCP_UDP protocols are not supported for health checks.
[$sel:healthCheckProtocol:TargetGroup'] :: TargetGroup -> Maybe ProtocolEnum

-- | The Amazon Resource Names (ARN) of the load balancers that route
--   traffic to this target group.
[$sel:loadBalancerArns:TargetGroup'] :: TargetGroup -> Maybe [Text]

-- | The type of IP address used for this target group. The possible values
--   are <tt>ipv4</tt> and <tt>ipv6</tt>. This is an optional parameter. If
--   not specified, the IP address type defaults to <tt>ipv4</tt>.
[$sel:ipAddressType:TargetGroup'] :: TargetGroup -> Maybe TargetGroupIpAddressTypeEnum

-- | The amount of time, in seconds, during which no response means a
--   failed health check.
[$sel:healthCheckTimeoutSeconds:TargetGroup'] :: TargetGroup -> Maybe Natural

-- | The port to use to connect with the target.
[$sel:healthCheckPort:TargetGroup'] :: TargetGroup -> Maybe Text

-- | The name of the target group.
[$sel:targetGroupName:TargetGroup'] :: TargetGroup -> Maybe Text

-- | The port on which the targets are listening. Not used if the target is
--   a Lambda function.
[$sel:port:TargetGroup'] :: TargetGroup -> Maybe Natural

-- | Create a value of <a>TargetGroup</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:protocolVersion:TargetGroup'</a>,
--   <a>targetGroup_protocolVersion</a> - [HTTP/HTTPS protocol] The
--   protocol version. The possible values are <tt>GRPC</tt>,
--   <tt>HTTP1</tt>, and <tt>HTTP2</tt>.
--   
--   <a>$sel:matcher:TargetGroup'</a>, <a>targetGroup_matcher</a> - The
--   HTTP or gRPC codes to use when checking for a successful response from
--   a target.
--   
--   <a>$sel:healthCheckPath:TargetGroup'</a>,
--   <a>targetGroup_healthCheckPath</a> - The destination for health checks
--   on the targets.
--   
--   <a>$sel:healthCheckEnabled:TargetGroup'</a>,
--   <a>targetGroup_healthCheckEnabled</a> - Indicates whether health
--   checks are enabled.
--   
--   <a>$sel:unhealthyThresholdCount:TargetGroup'</a>,
--   <a>targetGroup_unhealthyThresholdCount</a> - The number of consecutive
--   health check failures required before considering the target
--   unhealthy.
--   
--   <a>$sel:vpcId:TargetGroup'</a>, <a>targetGroup_vpcId</a> - The ID of
--   the VPC for the targets.
--   
--   <a>$sel:targetGroupArn:TargetGroup'</a>,
--   <a>targetGroup_targetGroupArn</a> - The Amazon Resource Name (ARN) of
--   the target group.
--   
--   <a>$sel:protocol:TargetGroup'</a>, <a>targetGroup_protocol</a> - The
--   protocol to use for routing traffic to the targets.
--   
--   <a>$sel:healthCheckIntervalSeconds:TargetGroup'</a>,
--   <a>targetGroup_healthCheckIntervalSeconds</a> - The approximate amount
--   of time, in seconds, between health checks of an individual target.
--   
--   <a>$sel:targetType:TargetGroup'</a>, <a>targetGroup_targetType</a> -
--   The type of target that you must specify when registering targets with
--   this target group. The possible values are <tt>instance</tt> (register
--   targets by instance ID), <tt>ip</tt> (register targets by IP address),
--   <tt>lambda</tt> (register a single Lambda function as a target), or
--   <tt>alb</tt> (register a single Application Load Balancer as a
--   target).
--   
--   <a>$sel:healthyThresholdCount:TargetGroup'</a>,
--   <a>targetGroup_healthyThresholdCount</a> - The number of consecutive
--   health checks successes required before considering an unhealthy
--   target healthy.
--   
--   <a>$sel:healthCheckProtocol:TargetGroup'</a>,
--   <a>targetGroup_healthCheckProtocol</a> - The protocol to use to
--   connect with the target. The GENEVE, TLS, UDP, and TCP_UDP protocols
--   are not supported for health checks.
--   
--   <a>$sel:loadBalancerArns:TargetGroup'</a>,
--   <a>targetGroup_loadBalancerArns</a> - The Amazon Resource Names (ARN)
--   of the load balancers that route traffic to this target group.
--   
--   <a>$sel:ipAddressType:TargetGroup'</a>,
--   <a>targetGroup_ipAddressType</a> - The type of IP address used for
--   this target group. The possible values are <tt>ipv4</tt> and
--   <tt>ipv6</tt>. This is an optional parameter. If not specified, the IP
--   address type defaults to <tt>ipv4</tt>.
--   
--   <a>$sel:healthCheckTimeoutSeconds:TargetGroup'</a>,
--   <a>targetGroup_healthCheckTimeoutSeconds</a> - The amount of time, in
--   seconds, during which no response means a failed health check.
--   
--   <a>$sel:healthCheckPort:TargetGroup'</a>,
--   <a>targetGroup_healthCheckPort</a> - The port to use to connect with
--   the target.
--   
--   <a>$sel:targetGroupName:TargetGroup'</a>,
--   <a>targetGroup_targetGroupName</a> - The name of the target group.
--   
--   <a>$sel:port:TargetGroup'</a>, <a>targetGroup_port</a> - The port on
--   which the targets are listening. Not used if the target is a Lambda
--   function.
newTargetGroup :: TargetGroup

-- | <ul>
--   <li><i>HTTP/HTTPS protocol</i> The protocol version. The possible
--   values are <tt>GRPC</tt>, <tt>HTTP1</tt>, and <tt>HTTP2</tt>.</li>
--   </ul>
targetGroup_protocolVersion :: Lens' TargetGroup (Maybe Text)

-- | The HTTP or gRPC codes to use when checking for a successful response
--   from a target.
targetGroup_matcher :: Lens' TargetGroup (Maybe Matcher)

-- | The destination for health checks on the targets.
targetGroup_healthCheckPath :: Lens' TargetGroup (Maybe Text)

-- | Indicates whether health checks are enabled.
targetGroup_healthCheckEnabled :: Lens' TargetGroup (Maybe Bool)

-- | The number of consecutive health check failures required before
--   considering the target unhealthy.
targetGroup_unhealthyThresholdCount :: Lens' TargetGroup (Maybe Natural)

-- | The ID of the VPC for the targets.
targetGroup_vpcId :: Lens' TargetGroup (Maybe Text)

-- | The Amazon Resource Name (ARN) of the target group.
targetGroup_targetGroupArn :: Lens' TargetGroup (Maybe Text)

-- | The protocol to use for routing traffic to the targets.
targetGroup_protocol :: Lens' TargetGroup (Maybe ProtocolEnum)

-- | The approximate amount of time, in seconds, between health checks of
--   an individual target.
targetGroup_healthCheckIntervalSeconds :: Lens' TargetGroup (Maybe Natural)

-- | The type of target that you must specify when registering targets with
--   this target group. The possible values are <tt>instance</tt> (register
--   targets by instance ID), <tt>ip</tt> (register targets by IP address),
--   <tt>lambda</tt> (register a single Lambda function as a target), or
--   <tt>alb</tt> (register a single Application Load Balancer as a
--   target).
targetGroup_targetType :: Lens' TargetGroup (Maybe TargetTypeEnum)

-- | The number of consecutive health checks successes required before
--   considering an unhealthy target healthy.
targetGroup_healthyThresholdCount :: Lens' TargetGroup (Maybe Natural)

-- | The protocol to use to connect with the target. The GENEVE, TLS, UDP,
--   and TCP_UDP protocols are not supported for health checks.
targetGroup_healthCheckProtocol :: Lens' TargetGroup (Maybe ProtocolEnum)

-- | The Amazon Resource Names (ARN) of the load balancers that route
--   traffic to this target group.
targetGroup_loadBalancerArns :: Lens' TargetGroup (Maybe [Text])

-- | The type of IP address used for this target group. The possible values
--   are <tt>ipv4</tt> and <tt>ipv6</tt>. This is an optional parameter. If
--   not specified, the IP address type defaults to <tt>ipv4</tt>.
targetGroup_ipAddressType :: Lens' TargetGroup (Maybe TargetGroupIpAddressTypeEnum)

-- | The amount of time, in seconds, during which no response means a
--   failed health check.
targetGroup_healthCheckTimeoutSeconds :: Lens' TargetGroup (Maybe Natural)

-- | The port to use to connect with the target.
targetGroup_healthCheckPort :: Lens' TargetGroup (Maybe Text)

-- | The name of the target group.
targetGroup_targetGroupName :: Lens' TargetGroup (Maybe Text)

-- | The port on which the targets are listening. Not used if the target is
--   a Lambda function.
targetGroup_port :: Lens' TargetGroup (Maybe Natural)
instance GHC.Generics.Generic Network.AWS.ELBV2.Types.TargetGroup.TargetGroup
instance GHC.Show.Show Network.AWS.ELBV2.Types.TargetGroup.TargetGroup
instance GHC.Read.Read Network.AWS.ELBV2.Types.TargetGroup.TargetGroup
instance GHC.Classes.Eq Network.AWS.ELBV2.Types.TargetGroup.TargetGroup
instance Network.AWS.Data.XML.FromXML Network.AWS.ELBV2.Types.TargetGroup.TargetGroup
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.Types.TargetGroup.TargetGroup
instance Control.DeepSeq.NFData Network.AWS.ELBV2.Types.TargetGroup.TargetGroup


module Network.AWS.ELBV2.Types

-- | API version <tt>2015-12-01</tt> of the Amazon Elastic Load Balancing
--   SDK configuration.
defaultService :: Service

-- | The requested configuration is not valid.
_InvalidConfigurationRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified subnet does not exist.
_SubnetNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You've reached the limit on the number of targets.
_TooManyTargetsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified rule does not exist.
_RuleNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified subnet is out of available addresses.
_InvalidSubnetException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You've reached the limit on the number of rules per load balancer.
_TooManyRulesException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You've reached the limit on the number of target groups for your
--   Amazon Web Services account.
_TooManyTargetGroupsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You've reached the limit on the number of actions per rule.
_TooManyActionsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A load balancer with the specified name already exists.
_DuplicateLoadBalancerNameException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified configuration is not valid with this protocol.
_IncompatibleProtocolsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You've reached the limit on the number of certificates per load
--   balancer.
_TooManyCertificatesException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A tag key was specified more than once.
_DuplicateTagKeysException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A listener with the specified port already exists.
_DuplicateListenerException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You've reached the limit on the number of tags per load balancer.
_TooManyTagsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A target group with the specified name already exists.
_DuplicateTargetGroupNameException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The health of the specified targets could not be retrieved due to an
--   internal error.
_HealthUnavailableException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified allocation ID does not exist.
_AllocationIdNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified priority is in use.
_PriorityInUseException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You've reached the limit on the number of load balancers for your
--   Amazon Web Services account.
_TooManyLoadBalancersException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified protocol is not supported.
_UnsupportedProtocolException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified ALPN policy is not supported.
_ALPNPolicyNotSupportedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified target does not exist, is not in the same VPC as the
--   target group, or has an unsupported instance type.
_InvalidTargetException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified security group does not exist.
_InvalidSecurityGroupException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified target group does not exist.
_TargetGroupNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified listener does not exist.
_ListenerNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested action is not valid.
_InvalidLoadBalancerActionException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You've reached the limit on the number of times a target can be
--   registered with a load balancer.
_TooManyRegistrationsForTargetIdException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You've reached the limit on the number of listeners per load balancer.
_TooManyListenersException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You've reached the limit on the number of load balancers per target
--   group.
_TargetGroupAssociationLimitException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This operation is not allowed.
_OperationNotPermittedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified SSL policy does not exist.
_SSLPolicyNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested scheme is not valid.
_InvalidSchemeException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified Availability Zone is not supported.
_AvailabilityZoneNotSupportedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You've reached the limit on the number of unique target groups per
--   load balancer across all listeners. If a target group is used by
--   multiple actions for a load balancer, it is counted as only one use.
_TooManyUniqueTargetGroupsPerLoadBalancerException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified load balancer does not exist.
_LoadBalancerNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A specified resource is in use.
_ResourceInUseException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified certificate does not exist.
_CertificateNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError
newtype ActionTypeEnum
ActionTypeEnum' :: Text -> ActionTypeEnum
[fromActionTypeEnum] :: ActionTypeEnum -> Text
pattern ActionTypeEnum_Authenticate_cognito :: ActionTypeEnum
pattern ActionTypeEnum_Authenticate_oidc :: ActionTypeEnum
pattern ActionTypeEnum_Fixed_response :: ActionTypeEnum
pattern ActionTypeEnum_Forward :: ActionTypeEnum
pattern ActionTypeEnum_Redirect :: ActionTypeEnum
newtype AuthenticateCognitoActionConditionalBehaviorEnum
AuthenticateCognitoActionConditionalBehaviorEnum' :: Text -> AuthenticateCognitoActionConditionalBehaviorEnum
[fromAuthenticateCognitoActionConditionalBehaviorEnum] :: AuthenticateCognitoActionConditionalBehaviorEnum -> Text
pattern AuthenticateCognitoActionConditionalBehaviorEnum_Allow :: AuthenticateCognitoActionConditionalBehaviorEnum
pattern AuthenticateCognitoActionConditionalBehaviorEnum_Authenticate :: AuthenticateCognitoActionConditionalBehaviorEnum
pattern AuthenticateCognitoActionConditionalBehaviorEnum_Deny :: AuthenticateCognitoActionConditionalBehaviorEnum
newtype AuthenticateOidcActionConditionalBehaviorEnum
AuthenticateOidcActionConditionalBehaviorEnum' :: Text -> AuthenticateOidcActionConditionalBehaviorEnum
[fromAuthenticateOidcActionConditionalBehaviorEnum] :: AuthenticateOidcActionConditionalBehaviorEnum -> Text
pattern AuthenticateOidcActionConditionalBehaviorEnum_Allow :: AuthenticateOidcActionConditionalBehaviorEnum
pattern AuthenticateOidcActionConditionalBehaviorEnum_Authenticate :: AuthenticateOidcActionConditionalBehaviorEnum
pattern AuthenticateOidcActionConditionalBehaviorEnum_Deny :: AuthenticateOidcActionConditionalBehaviorEnum
newtype IpAddressType
IpAddressType' :: Text -> IpAddressType
[fromIpAddressType] :: IpAddressType -> Text
pattern IpAddressType_Dualstack :: IpAddressType
pattern IpAddressType_Ipv4 :: IpAddressType
newtype LoadBalancerSchemeEnum
LoadBalancerSchemeEnum' :: Text -> LoadBalancerSchemeEnum
[fromLoadBalancerSchemeEnum] :: LoadBalancerSchemeEnum -> Text
pattern LoadBalancerSchemeEnum_Internal :: LoadBalancerSchemeEnum
pattern LoadBalancerSchemeEnum_Internet_facing :: LoadBalancerSchemeEnum
newtype LoadBalancerStateEnum
LoadBalancerStateEnum' :: Text -> LoadBalancerStateEnum
[fromLoadBalancerStateEnum] :: LoadBalancerStateEnum -> Text
pattern LoadBalancerStateEnum_Active :: LoadBalancerStateEnum
pattern LoadBalancerStateEnum_Active_impaired :: LoadBalancerStateEnum
pattern LoadBalancerStateEnum_Failed :: LoadBalancerStateEnum
pattern LoadBalancerStateEnum_Provisioning :: LoadBalancerStateEnum
newtype LoadBalancerTypeEnum
LoadBalancerTypeEnum' :: Text -> LoadBalancerTypeEnum
[fromLoadBalancerTypeEnum] :: LoadBalancerTypeEnum -> Text
pattern LoadBalancerTypeEnum_Application :: LoadBalancerTypeEnum
pattern LoadBalancerTypeEnum_Gateway :: LoadBalancerTypeEnum
pattern LoadBalancerTypeEnum_Network :: LoadBalancerTypeEnum
newtype ProtocolEnum
ProtocolEnum' :: Text -> ProtocolEnum
[fromProtocolEnum] :: ProtocolEnum -> Text
pattern ProtocolEnum_GENEVE :: ProtocolEnum
pattern ProtocolEnum_HTTP :: ProtocolEnum
pattern ProtocolEnum_HTTPS :: ProtocolEnum
pattern ProtocolEnum_TCP :: ProtocolEnum
pattern ProtocolEnum_TCP_UDP :: ProtocolEnum
pattern ProtocolEnum_TLS :: ProtocolEnum
pattern ProtocolEnum_UDP :: ProtocolEnum
newtype RedirectActionStatusCodeEnum
RedirectActionStatusCodeEnum' :: Text -> RedirectActionStatusCodeEnum
[fromRedirectActionStatusCodeEnum] :: RedirectActionStatusCodeEnum -> Text
pattern RedirectActionStatusCodeEnum_HTTP_301 :: RedirectActionStatusCodeEnum
pattern RedirectActionStatusCodeEnum_HTTP_302 :: RedirectActionStatusCodeEnum
newtype TargetGroupIpAddressTypeEnum
TargetGroupIpAddressTypeEnum' :: Text -> TargetGroupIpAddressTypeEnum
[fromTargetGroupIpAddressTypeEnum] :: TargetGroupIpAddressTypeEnum -> Text
pattern TargetGroupIpAddressTypeEnum_Ipv4 :: TargetGroupIpAddressTypeEnum
pattern TargetGroupIpAddressTypeEnum_Ipv6 :: TargetGroupIpAddressTypeEnum
newtype TargetHealthReasonEnum
TargetHealthReasonEnum' :: Text -> TargetHealthReasonEnum
[fromTargetHealthReasonEnum] :: TargetHealthReasonEnum -> Text
pattern TargetHealthReasonEnum_Elb_InitialHealthChecking :: TargetHealthReasonEnum
pattern TargetHealthReasonEnum_Elb_InternalError :: TargetHealthReasonEnum
pattern TargetHealthReasonEnum_Elb_RegistrationInProgress :: TargetHealthReasonEnum
pattern TargetHealthReasonEnum_Target_DeregistrationInProgress :: TargetHealthReasonEnum
pattern TargetHealthReasonEnum_Target_FailedHealthChecks :: TargetHealthReasonEnum
pattern TargetHealthReasonEnum_Target_HealthCheckDisabled :: TargetHealthReasonEnum
pattern TargetHealthReasonEnum_Target_InvalidState :: TargetHealthReasonEnum
pattern TargetHealthReasonEnum_Target_IpUnusable :: TargetHealthReasonEnum
pattern TargetHealthReasonEnum_Target_NotInUse :: TargetHealthReasonEnum
pattern TargetHealthReasonEnum_Target_NotRegistered :: TargetHealthReasonEnum
pattern TargetHealthReasonEnum_Target_ResponseCodeMismatch :: TargetHealthReasonEnum
pattern TargetHealthReasonEnum_Target_Timeout :: TargetHealthReasonEnum
newtype TargetHealthStateEnum
TargetHealthStateEnum' :: Text -> TargetHealthStateEnum
[fromTargetHealthStateEnum] :: TargetHealthStateEnum -> Text
pattern TargetHealthStateEnum_Draining :: TargetHealthStateEnum
pattern TargetHealthStateEnum_Healthy :: TargetHealthStateEnum
pattern TargetHealthStateEnum_Initial :: TargetHealthStateEnum
pattern TargetHealthStateEnum_Unavailable :: TargetHealthStateEnum
pattern TargetHealthStateEnum_Unhealthy :: TargetHealthStateEnum
pattern TargetHealthStateEnum_Unused :: TargetHealthStateEnum
newtype TargetTypeEnum
TargetTypeEnum' :: Text -> TargetTypeEnum
[fromTargetTypeEnum] :: TargetTypeEnum -> Text
pattern TargetTypeEnum_Alb :: TargetTypeEnum
pattern TargetTypeEnum_Instance :: TargetTypeEnum
pattern TargetTypeEnum_Ip :: TargetTypeEnum
pattern TargetTypeEnum_Lambda :: TargetTypeEnum

-- | Information about an action.
--   
--   Each rule must include exactly one of the following types of actions:
--   <tt>forward</tt>, <tt>fixed-response</tt>, or <tt>redirect</tt>, and
--   it must be the last action to be performed.
--   
--   <i>See:</i> <a>newAction</a> smart constructor.
data Action
Action' :: Maybe FixedResponseActionConfig -> Maybe Text -> Maybe ForwardActionConfig -> Maybe RedirectActionConfig -> Maybe AuthenticateCognitoActionConfig -> Maybe Natural -> Maybe AuthenticateOidcActionConfig -> ActionTypeEnum -> Action

-- | <ul>
--   <li><i>Application Load Balancer</i> Information for creating an
--   action that returns a custom HTTP response. Specify only when
--   <tt>Type</tt> is <tt>fixed-response</tt>.</li>
--   </ul>
[$sel:fixedResponseConfig:Action'] :: Action -> Maybe FixedResponseActionConfig

-- | The Amazon Resource Name (ARN) of the target group. Specify only when
--   <tt>Type</tt> is <tt>forward</tt> and you want to route to a single
--   target group. To route to one or more target groups, use
--   <tt>ForwardConfig</tt> instead.
[$sel:targetGroupArn:Action'] :: Action -> Maybe Text

-- | Information for creating an action that distributes requests among one
--   or more target groups. For Network Load Balancers, you can specify a
--   single target group. Specify only when <tt>Type</tt> is
--   <tt>forward</tt>. If you specify both <tt>ForwardConfig</tt> and
--   <tt>TargetGroupArn</tt>, you can specify only one target group using
--   <tt>ForwardConfig</tt> and it must be the same target group specified
--   in <tt>TargetGroupArn</tt>.
[$sel:forwardConfig:Action'] :: Action -> Maybe ForwardActionConfig

-- | <ul>
--   <li><i>Application Load Balancer</i> Information for creating a
--   redirect action. Specify only when <tt>Type</tt> is
--   <tt>redirect</tt>.</li>
--   </ul>
[$sel:redirectConfig:Action'] :: Action -> Maybe RedirectActionConfig

-- | <ul>
--   <li><i>HTTPS listeners</i> Information for using Amazon Cognito to
--   authenticate users. Specify only when <tt>Type</tt> is
--   <tt>authenticate-cognito</tt>.</li>
--   </ul>
[$sel:authenticateCognitoConfig:Action'] :: Action -> Maybe AuthenticateCognitoActionConfig

-- | The order for the action. This value is required for rules with
--   multiple actions. The action with the lowest value for order is
--   performed first.
[$sel:order:Action'] :: Action -> Maybe Natural

-- | <ul>
--   <li><i>HTTPS listeners</i> Information about an identity provider that
--   is compliant with OpenID Connect (OIDC). Specify only when
--   <tt>Type</tt> is <tt>authenticate-oidc</tt>.</li>
--   </ul>
[$sel:authenticateOidcConfig:Action'] :: Action -> Maybe AuthenticateOidcActionConfig

-- | The type of action.
[$sel:type':Action'] :: Action -> ActionTypeEnum

-- | Create a value of <a>Action</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fixedResponseConfig:Action'</a>,
--   <a>action_fixedResponseConfig</a> - [Application Load Balancer]
--   Information for creating an action that returns a custom HTTP
--   response. Specify only when <tt>Type</tt> is <tt>fixed-response</tt>.
--   
--   <a>$sel:targetGroupArn:Action'</a>, <a>action_targetGroupArn</a> - The
--   Amazon Resource Name (ARN) of the target group. Specify only when
--   <tt>Type</tt> is <tt>forward</tt> and you want to route to a single
--   target group. To route to one or more target groups, use
--   <tt>ForwardConfig</tt> instead.
--   
--   <a>$sel:forwardConfig:Action'</a>, <a>action_forwardConfig</a> -
--   Information for creating an action that distributes requests among one
--   or more target groups. For Network Load Balancers, you can specify a
--   single target group. Specify only when <tt>Type</tt> is
--   <tt>forward</tt>. If you specify both <tt>ForwardConfig</tt> and
--   <tt>TargetGroupArn</tt>, you can specify only one target group using
--   <tt>ForwardConfig</tt> and it must be the same target group specified
--   in <tt>TargetGroupArn</tt>.
--   
--   <a>$sel:redirectConfig:Action'</a>, <a>action_redirectConfig</a> -
--   [Application Load Balancer] Information for creating a redirect
--   action. Specify only when <tt>Type</tt> is <tt>redirect</tt>.
--   
--   <a>$sel:authenticateCognitoConfig:Action'</a>,
--   <a>action_authenticateCognitoConfig</a> - [HTTPS listeners]
--   Information for using Amazon Cognito to authenticate users. Specify
--   only when <tt>Type</tt> is <tt>authenticate-cognito</tt>.
--   
--   <a>$sel:order:Action'</a>, <a>action_order</a> - The order for the
--   action. This value is required for rules with multiple actions. The
--   action with the lowest value for order is performed first.
--   
--   <a>$sel:authenticateOidcConfig:Action'</a>,
--   <a>action_authenticateOidcConfig</a> - [HTTPS listeners] Information
--   about an identity provider that is compliant with OpenID Connect
--   (OIDC). Specify only when <tt>Type</tt> is <tt>authenticate-oidc</tt>.
--   
--   <a>$sel:type':Action'</a>, <a>action_type</a> - The type of action.
newAction :: ActionTypeEnum -> Action

-- | <ul>
--   <li><i>Application Load Balancer</i> Information for creating an
--   action that returns a custom HTTP response. Specify only when
--   <tt>Type</tt> is <tt>fixed-response</tt>.</li>
--   </ul>
action_fixedResponseConfig :: Lens' Action (Maybe FixedResponseActionConfig)

-- | The Amazon Resource Name (ARN) of the target group. Specify only when
--   <tt>Type</tt> is <tt>forward</tt> and you want to route to a single
--   target group. To route to one or more target groups, use
--   <tt>ForwardConfig</tt> instead.
action_targetGroupArn :: Lens' Action (Maybe Text)

-- | Information for creating an action that distributes requests among one
--   or more target groups. For Network Load Balancers, you can specify a
--   single target group. Specify only when <tt>Type</tt> is
--   <tt>forward</tt>. If you specify both <tt>ForwardConfig</tt> and
--   <tt>TargetGroupArn</tt>, you can specify only one target group using
--   <tt>ForwardConfig</tt> and it must be the same target group specified
--   in <tt>TargetGroupArn</tt>.
action_forwardConfig :: Lens' Action (Maybe ForwardActionConfig)

-- | <ul>
--   <li><i>Application Load Balancer</i> Information for creating a
--   redirect action. Specify only when <tt>Type</tt> is
--   <tt>redirect</tt>.</li>
--   </ul>
action_redirectConfig :: Lens' Action (Maybe RedirectActionConfig)

-- | <ul>
--   <li><i>HTTPS listeners</i> Information for using Amazon Cognito to
--   authenticate users. Specify only when <tt>Type</tt> is
--   <tt>authenticate-cognito</tt>.</li>
--   </ul>
action_authenticateCognitoConfig :: Lens' Action (Maybe AuthenticateCognitoActionConfig)

-- | The order for the action. This value is required for rules with
--   multiple actions. The action with the lowest value for order is
--   performed first.
action_order :: Lens' Action (Maybe Natural)

-- | <ul>
--   <li><i>HTTPS listeners</i> Information about an identity provider that
--   is compliant with OpenID Connect (OIDC). Specify only when
--   <tt>Type</tt> is <tt>authenticate-oidc</tt>.</li>
--   </ul>
action_authenticateOidcConfig :: Lens' Action (Maybe AuthenticateOidcActionConfig)

-- | The type of action.
action_type :: Lens' Action ActionTypeEnum

-- | Request parameters to use when integrating with Amazon Cognito to
--   authenticate users.
--   
--   <i>See:</i> <a>newAuthenticateCognitoActionConfig</a> smart
--   constructor.
data AuthenticateCognitoActionConfig
AuthenticateCognitoActionConfig' :: Maybe (HashMap Text Text) -> Maybe Text -> Maybe AuthenticateCognitoActionConditionalBehaviorEnum -> Maybe Text -> Maybe Integer -> Text -> Text -> Text -> AuthenticateCognitoActionConfig

-- | The query parameters (up to 10) to include in the redirect request to
--   the authorization endpoint.
[$sel:authenticationRequestExtraParams:AuthenticateCognitoActionConfig'] :: AuthenticateCognitoActionConfig -> Maybe (HashMap Text Text)

-- | The set of user claims to be requested from the IdP. The default is
--   <tt>openid</tt>.
--   
--   To verify which scope values your IdP supports and how to separate
--   multiple values, see the documentation for your IdP.
[$sel:scope:AuthenticateCognitoActionConfig'] :: AuthenticateCognitoActionConfig -> Maybe Text

-- | The behavior if the user is not authenticated. The following are
--   possible values:
--   
--   <ul>
--   <li>deny@@ - Return an HTTP 401 Unauthorized error.</li>
--   <li>allow@@ - Allow the request to be forwarded to the target.</li>
--   <li>authenticate@@ - Redirect the request to the IdP authorization
--   endpoint. This is the default value.</li>
--   </ul>
[$sel:onUnauthenticatedRequest:AuthenticateCognitoActionConfig'] :: AuthenticateCognitoActionConfig -> Maybe AuthenticateCognitoActionConditionalBehaviorEnum

-- | The name of the cookie used to maintain session information. The
--   default is AWSELBAuthSessionCookie.
[$sel:sessionCookieName:AuthenticateCognitoActionConfig'] :: AuthenticateCognitoActionConfig -> Maybe Text

-- | The maximum duration of the authentication session, in seconds. The
--   default is 604800 seconds (7 days).
[$sel:sessionTimeout:AuthenticateCognitoActionConfig'] :: AuthenticateCognitoActionConfig -> Maybe Integer

-- | The Amazon Resource Name (ARN) of the Amazon Cognito user pool.
[$sel:userPoolArn:AuthenticateCognitoActionConfig'] :: AuthenticateCognitoActionConfig -> Text

-- | The ID of the Amazon Cognito user pool client.
[$sel:userPoolClientId:AuthenticateCognitoActionConfig'] :: AuthenticateCognitoActionConfig -> Text

-- | The domain prefix or fully-qualified domain name of the Amazon Cognito
--   user pool.
[$sel:userPoolDomain:AuthenticateCognitoActionConfig'] :: AuthenticateCognitoActionConfig -> Text

-- | Create a value of <a>AuthenticateCognitoActionConfig</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:authenticationRequestExtraParams:AuthenticateCognitoActionConfig'</a>,
--   <a>authenticateCognitoActionConfig_authenticationRequestExtraParams</a>
--   - The query parameters (up to 10) to include in the redirect request
--   to the authorization endpoint.
--   
--   <a>$sel:scope:AuthenticateCognitoActionConfig'</a>,
--   <a>authenticateCognitoActionConfig_scope</a> - The set of user claims
--   to be requested from the IdP. The default is <tt>openid</tt>.
--   
--   To verify which scope values your IdP supports and how to separate
--   multiple values, see the documentation for your IdP.
--   
--   <a>$sel:onUnauthenticatedRequest:AuthenticateCognitoActionConfig'</a>,
--   <a>authenticateCognitoActionConfig_onUnauthenticatedRequest</a> - The
--   behavior if the user is not authenticated. The following are possible
--   values:
--   
--   <ul>
--   <li>deny@@ - Return an HTTP 401 Unauthorized error.</li>
--   <li>allow@@ - Allow the request to be forwarded to the target.</li>
--   <li>authenticate@@ - Redirect the request to the IdP authorization
--   endpoint. This is the default value.</li>
--   </ul>
--   
--   <a>$sel:sessionCookieName:AuthenticateCognitoActionConfig'</a>,
--   <a>authenticateCognitoActionConfig_sessionCookieName</a> - The name of
--   the cookie used to maintain session information. The default is
--   AWSELBAuthSessionCookie.
--   
--   <a>$sel:sessionTimeout:AuthenticateCognitoActionConfig'</a>,
--   <a>authenticateCognitoActionConfig_sessionTimeout</a> - The maximum
--   duration of the authentication session, in seconds. The default is
--   604800 seconds (7 days).
--   
--   <a>$sel:userPoolArn:AuthenticateCognitoActionConfig'</a>,
--   <a>authenticateCognitoActionConfig_userPoolArn</a> - The Amazon
--   Resource Name (ARN) of the Amazon Cognito user pool.
--   
--   <a>$sel:userPoolClientId:AuthenticateCognitoActionConfig'</a>,
--   <a>authenticateCognitoActionConfig_userPoolClientId</a> - The ID of
--   the Amazon Cognito user pool client.
--   
--   <a>$sel:userPoolDomain:AuthenticateCognitoActionConfig'</a>,
--   <a>authenticateCognitoActionConfig_userPoolDomain</a> - The domain
--   prefix or fully-qualified domain name of the Amazon Cognito user pool.
newAuthenticateCognitoActionConfig :: Text -> Text -> Text -> AuthenticateCognitoActionConfig

-- | The query parameters (up to 10) to include in the redirect request to
--   the authorization endpoint.
authenticateCognitoActionConfig_authenticationRequestExtraParams :: Lens' AuthenticateCognitoActionConfig (Maybe (HashMap Text Text))

-- | The set of user claims to be requested from the IdP. The default is
--   <tt>openid</tt>.
--   
--   To verify which scope values your IdP supports and how to separate
--   multiple values, see the documentation for your IdP.
authenticateCognitoActionConfig_scope :: Lens' AuthenticateCognitoActionConfig (Maybe Text)

-- | The behavior if the user is not authenticated. The following are
--   possible values:
--   
--   <ul>
--   <li>deny@@ - Return an HTTP 401 Unauthorized error.</li>
--   <li>allow@@ - Allow the request to be forwarded to the target.</li>
--   <li>authenticate@@ - Redirect the request to the IdP authorization
--   endpoint. This is the default value.</li>
--   </ul>
authenticateCognitoActionConfig_onUnauthenticatedRequest :: Lens' AuthenticateCognitoActionConfig (Maybe AuthenticateCognitoActionConditionalBehaviorEnum)

-- | The name of the cookie used to maintain session information. The
--   default is AWSELBAuthSessionCookie.
authenticateCognitoActionConfig_sessionCookieName :: Lens' AuthenticateCognitoActionConfig (Maybe Text)

-- | The maximum duration of the authentication session, in seconds. The
--   default is 604800 seconds (7 days).
authenticateCognitoActionConfig_sessionTimeout :: Lens' AuthenticateCognitoActionConfig (Maybe Integer)

-- | The Amazon Resource Name (ARN) of the Amazon Cognito user pool.
authenticateCognitoActionConfig_userPoolArn :: Lens' AuthenticateCognitoActionConfig Text

-- | The ID of the Amazon Cognito user pool client.
authenticateCognitoActionConfig_userPoolClientId :: Lens' AuthenticateCognitoActionConfig Text

-- | The domain prefix or fully-qualified domain name of the Amazon Cognito
--   user pool.
authenticateCognitoActionConfig_userPoolDomain :: Lens' AuthenticateCognitoActionConfig Text

-- | Request parameters when using an identity provider (IdP) that is
--   compliant with OpenID Connect (OIDC) to authenticate users.
--   
--   <i>See:</i> <a>newAuthenticateOidcActionConfig</a> smart constructor.
data AuthenticateOidcActionConfig
AuthenticateOidcActionConfig' :: Maybe Text -> Maybe Bool -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe AuthenticateOidcActionConditionalBehaviorEnum -> Maybe Text -> Maybe Integer -> Text -> Text -> Text -> Text -> Text -> AuthenticateOidcActionConfig

-- | The OAuth 2.0 client secret. This parameter is required if you are
--   creating a rule. If you are modifying a rule, you can omit this
--   parameter if you set <tt>UseExistingClientSecret</tt> to true.
[$sel:clientSecret:AuthenticateOidcActionConfig'] :: AuthenticateOidcActionConfig -> Maybe Text

-- | Indicates whether to use the existing client secret when modifying a
--   rule. If you are creating a rule, you can omit this parameter or set
--   it to false.
[$sel:useExistingClientSecret:AuthenticateOidcActionConfig'] :: AuthenticateOidcActionConfig -> Maybe Bool

-- | The query parameters (up to 10) to include in the redirect request to
--   the authorization endpoint.
[$sel:authenticationRequestExtraParams:AuthenticateOidcActionConfig'] :: AuthenticateOidcActionConfig -> Maybe (HashMap Text Text)

-- | The set of user claims to be requested from the IdP. The default is
--   <tt>openid</tt>.
--   
--   To verify which scope values your IdP supports and how to separate
--   multiple values, see the documentation for your IdP.
[$sel:scope:AuthenticateOidcActionConfig'] :: AuthenticateOidcActionConfig -> Maybe Text

-- | The behavior if the user is not authenticated. The following are
--   possible values:
--   
--   <ul>
--   <li>deny@@ - Return an HTTP 401 Unauthorized error.</li>
--   <li>allow@@ - Allow the request to be forwarded to the target.</li>
--   <li>authenticate@@ - Redirect the request to the IdP authorization
--   endpoint. This is the default value.</li>
--   </ul>
[$sel:onUnauthenticatedRequest:AuthenticateOidcActionConfig'] :: AuthenticateOidcActionConfig -> Maybe AuthenticateOidcActionConditionalBehaviorEnum

-- | The name of the cookie used to maintain session information. The
--   default is AWSELBAuthSessionCookie.
[$sel:sessionCookieName:AuthenticateOidcActionConfig'] :: AuthenticateOidcActionConfig -> Maybe Text

-- | The maximum duration of the authentication session, in seconds. The
--   default is 604800 seconds (7 days).
[$sel:sessionTimeout:AuthenticateOidcActionConfig'] :: AuthenticateOidcActionConfig -> Maybe Integer

-- | The OIDC issuer identifier of the IdP. This must be a full URL,
--   including the HTTPS protocol, the domain, and the path.
[$sel:issuer:AuthenticateOidcActionConfig'] :: AuthenticateOidcActionConfig -> Text

-- | The authorization endpoint of the IdP. This must be a full URL,
--   including the HTTPS protocol, the domain, and the path.
[$sel:authorizationEndpoint:AuthenticateOidcActionConfig'] :: AuthenticateOidcActionConfig -> Text

-- | The token endpoint of the IdP. This must be a full URL, including the
--   HTTPS protocol, the domain, and the path.
[$sel:tokenEndpoint:AuthenticateOidcActionConfig'] :: AuthenticateOidcActionConfig -> Text

-- | The user info endpoint of the IdP. This must be a full URL, including
--   the HTTPS protocol, the domain, and the path.
[$sel:userInfoEndpoint:AuthenticateOidcActionConfig'] :: AuthenticateOidcActionConfig -> Text

-- | The OAuth 2.0 client identifier.
[$sel:clientId:AuthenticateOidcActionConfig'] :: AuthenticateOidcActionConfig -> Text

-- | Create a value of <a>AuthenticateOidcActionConfig</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientSecret:AuthenticateOidcActionConfig'</a>,
--   <a>authenticateOidcActionConfig_clientSecret</a> - The OAuth 2.0
--   client secret. This parameter is required if you are creating a rule.
--   If you are modifying a rule, you can omit this parameter if you set
--   <tt>UseExistingClientSecret</tt> to true.
--   
--   <a>$sel:useExistingClientSecret:AuthenticateOidcActionConfig'</a>,
--   <a>authenticateOidcActionConfig_useExistingClientSecret</a> -
--   Indicates whether to use the existing client secret when modifying a
--   rule. If you are creating a rule, you can omit this parameter or set
--   it to false.
--   
--   
--   <a>$sel:authenticationRequestExtraParams:AuthenticateOidcActionConfig'</a>,
--   <a>authenticateOidcActionConfig_authenticationRequestExtraParams</a> -
--   The query parameters (up to 10) to include in the redirect request to
--   the authorization endpoint.
--   
--   <a>$sel:scope:AuthenticateOidcActionConfig'</a>,
--   <a>authenticateOidcActionConfig_scope</a> - The set of user claims to
--   be requested from the IdP. The default is <tt>openid</tt>.
--   
--   To verify which scope values your IdP supports and how to separate
--   multiple values, see the documentation for your IdP.
--   
--   <a>$sel:onUnauthenticatedRequest:AuthenticateOidcActionConfig'</a>,
--   <a>authenticateOidcActionConfig_onUnauthenticatedRequest</a> - The
--   behavior if the user is not authenticated. The following are possible
--   values:
--   
--   <ul>
--   <li>deny@@ - Return an HTTP 401 Unauthorized error.</li>
--   <li>allow@@ - Allow the request to be forwarded to the target.</li>
--   <li>authenticate@@ - Redirect the request to the IdP authorization
--   endpoint. This is the default value.</li>
--   </ul>
--   
--   <a>$sel:sessionCookieName:AuthenticateOidcActionConfig'</a>,
--   <a>authenticateOidcActionConfig_sessionCookieName</a> - The name of
--   the cookie used to maintain session information. The default is
--   AWSELBAuthSessionCookie.
--   
--   <a>$sel:sessionTimeout:AuthenticateOidcActionConfig'</a>,
--   <a>authenticateOidcActionConfig_sessionTimeout</a> - The maximum
--   duration of the authentication session, in seconds. The default is
--   604800 seconds (7 days).
--   
--   <a>$sel:issuer:AuthenticateOidcActionConfig'</a>,
--   <a>authenticateOidcActionConfig_issuer</a> - The OIDC issuer
--   identifier of the IdP. This must be a full URL, including the HTTPS
--   protocol, the domain, and the path.
--   
--   <a>$sel:authorizationEndpoint:AuthenticateOidcActionConfig'</a>,
--   <a>authenticateOidcActionConfig_authorizationEndpoint</a> - The
--   authorization endpoint of the IdP. This must be a full URL, including
--   the HTTPS protocol, the domain, and the path.
--   
--   <a>$sel:tokenEndpoint:AuthenticateOidcActionConfig'</a>,
--   <a>authenticateOidcActionConfig_tokenEndpoint</a> - The token endpoint
--   of the IdP. This must be a full URL, including the HTTPS protocol, the
--   domain, and the path.
--   
--   <a>$sel:userInfoEndpoint:AuthenticateOidcActionConfig'</a>,
--   <a>authenticateOidcActionConfig_userInfoEndpoint</a> - The user info
--   endpoint of the IdP. This must be a full URL, including the HTTPS
--   protocol, the domain, and the path.
--   
--   <a>$sel:clientId:AuthenticateOidcActionConfig'</a>,
--   <a>authenticateOidcActionConfig_clientId</a> - The OAuth 2.0 client
--   identifier.
newAuthenticateOidcActionConfig :: Text -> Text -> Text -> Text -> Text -> AuthenticateOidcActionConfig

-- | The OAuth 2.0 client secret. This parameter is required if you are
--   creating a rule. If you are modifying a rule, you can omit this
--   parameter if you set <tt>UseExistingClientSecret</tt> to true.
authenticateOidcActionConfig_clientSecret :: Lens' AuthenticateOidcActionConfig (Maybe Text)

-- | Indicates whether to use the existing client secret when modifying a
--   rule. If you are creating a rule, you can omit this parameter or set
--   it to false.
authenticateOidcActionConfig_useExistingClientSecret :: Lens' AuthenticateOidcActionConfig (Maybe Bool)

-- | The query parameters (up to 10) to include in the redirect request to
--   the authorization endpoint.
authenticateOidcActionConfig_authenticationRequestExtraParams :: Lens' AuthenticateOidcActionConfig (Maybe (HashMap Text Text))

-- | The set of user claims to be requested from the IdP. The default is
--   <tt>openid</tt>.
--   
--   To verify which scope values your IdP supports and how to separate
--   multiple values, see the documentation for your IdP.
authenticateOidcActionConfig_scope :: Lens' AuthenticateOidcActionConfig (Maybe Text)

-- | The behavior if the user is not authenticated. The following are
--   possible values:
--   
--   <ul>
--   <li>deny@@ - Return an HTTP 401 Unauthorized error.</li>
--   <li>allow@@ - Allow the request to be forwarded to the target.</li>
--   <li>authenticate@@ - Redirect the request to the IdP authorization
--   endpoint. This is the default value.</li>
--   </ul>
authenticateOidcActionConfig_onUnauthenticatedRequest :: Lens' AuthenticateOidcActionConfig (Maybe AuthenticateOidcActionConditionalBehaviorEnum)

-- | The name of the cookie used to maintain session information. The
--   default is AWSELBAuthSessionCookie.
authenticateOidcActionConfig_sessionCookieName :: Lens' AuthenticateOidcActionConfig (Maybe Text)

-- | The maximum duration of the authentication session, in seconds. The
--   default is 604800 seconds (7 days).
authenticateOidcActionConfig_sessionTimeout :: Lens' AuthenticateOidcActionConfig (Maybe Integer)

-- | The OIDC issuer identifier of the IdP. This must be a full URL,
--   including the HTTPS protocol, the domain, and the path.
authenticateOidcActionConfig_issuer :: Lens' AuthenticateOidcActionConfig Text

-- | The authorization endpoint of the IdP. This must be a full URL,
--   including the HTTPS protocol, the domain, and the path.
authenticateOidcActionConfig_authorizationEndpoint :: Lens' AuthenticateOidcActionConfig Text

-- | The token endpoint of the IdP. This must be a full URL, including the
--   HTTPS protocol, the domain, and the path.
authenticateOidcActionConfig_tokenEndpoint :: Lens' AuthenticateOidcActionConfig Text

-- | The user info endpoint of the IdP. This must be a full URL, including
--   the HTTPS protocol, the domain, and the path.
authenticateOidcActionConfig_userInfoEndpoint :: Lens' AuthenticateOidcActionConfig Text

-- | The OAuth 2.0 client identifier.
authenticateOidcActionConfig_clientId :: Lens' AuthenticateOidcActionConfig Text

-- | Information about an Availability Zone.
--   
--   <i>See:</i> <a>newAvailabilityZone</a> smart constructor.
data AvailabilityZone
AvailabilityZone' :: Maybe Text -> Maybe Text -> Maybe [LoadBalancerAddress] -> Maybe Text -> AvailabilityZone

-- | The ID of the subnet. You can specify one subnet per Availability
--   Zone.
[$sel:subnetId:AvailabilityZone'] :: AvailabilityZone -> Maybe Text

-- | The name of the Availability Zone.
[$sel:zoneName:AvailabilityZone'] :: AvailabilityZone -> Maybe Text

-- | <ul>
--   <li><i>Network Load Balancers</i> If you need static IP addresses for
--   your load balancer, you can specify one Elastic IP address per
--   Availability Zone when you create an internal-facing load balancer.
--   For internal load balancers, you can specify a private IP address from
--   the IPv4 range of the subnet.</li>
--   </ul>
[$sel:loadBalancerAddresses:AvailabilityZone'] :: AvailabilityZone -> Maybe [LoadBalancerAddress]

-- | <ul>
--   <li><i>Application Load Balancers on Outposts</i> The ID of the
--   Outpost.</li>
--   </ul>
[$sel:outpostId:AvailabilityZone'] :: AvailabilityZone -> Maybe Text

-- | Create a value of <a>AvailabilityZone</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subnetId:AvailabilityZone'</a>,
--   <a>availabilityZone_subnetId</a> - The ID of the subnet. You can
--   specify one subnet per Availability Zone.
--   
--   <a>$sel:zoneName:AvailabilityZone'</a>,
--   <a>availabilityZone_zoneName</a> - The name of the Availability Zone.
--   
--   <a>$sel:loadBalancerAddresses:AvailabilityZone'</a>,
--   <a>availabilityZone_loadBalancerAddresses</a> - [Network Load
--   Balancers] If you need static IP addresses for your load balancer, you
--   can specify one Elastic IP address per Availability Zone when you
--   create an internal-facing load balancer. For internal load balancers,
--   you can specify a private IP address from the IPv4 range of the
--   subnet.
--   
--   <a>$sel:outpostId:AvailabilityZone'</a>,
--   <a>availabilityZone_outpostId</a> - [Application Load Balancers on
--   Outposts] The ID of the Outpost.
newAvailabilityZone :: AvailabilityZone

-- | The ID of the subnet. You can specify one subnet per Availability
--   Zone.
availabilityZone_subnetId :: Lens' AvailabilityZone (Maybe Text)

-- | The name of the Availability Zone.
availabilityZone_zoneName :: Lens' AvailabilityZone (Maybe Text)

-- | <ul>
--   <li><i>Network Load Balancers</i> If you need static IP addresses for
--   your load balancer, you can specify one Elastic IP address per
--   Availability Zone when you create an internal-facing load balancer.
--   For internal load balancers, you can specify a private IP address from
--   the IPv4 range of the subnet.</li>
--   </ul>
availabilityZone_loadBalancerAddresses :: Lens' AvailabilityZone (Maybe [LoadBalancerAddress])

-- | <ul>
--   <li><i>Application Load Balancers on Outposts</i> The ID of the
--   Outpost.</li>
--   </ul>
availabilityZone_outpostId :: Lens' AvailabilityZone (Maybe Text)

-- | Information about an SSL server certificate.
--   
--   <i>See:</i> <a>newCertificate</a> smart constructor.
data Certificate
Certificate' :: Maybe Text -> Maybe Bool -> Certificate

-- | The Amazon Resource Name (ARN) of the certificate.
[$sel:certificateArn:Certificate'] :: Certificate -> Maybe Text

-- | Indicates whether the certificate is the default certificate. Do not
--   set this value when specifying a certificate as an input. This value
--   is not included in the output when describing a listener, but is
--   included when describing listener certificates.
[$sel:isDefault:Certificate'] :: Certificate -> Maybe Bool

-- | Create a value of <a>Certificate</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:certificateArn:Certificate'</a>,
--   <a>certificate_certificateArn</a> - The Amazon Resource Name (ARN) of
--   the certificate.
--   
--   <a>$sel:isDefault:Certificate'</a>, <a>certificate_isDefault</a> -
--   Indicates whether the certificate is the default certificate. Do not
--   set this value when specifying a certificate as an input. This value
--   is not included in the output when describing a listener, but is
--   included when describing listener certificates.
newCertificate :: Certificate

-- | The Amazon Resource Name (ARN) of the certificate.
certificate_certificateArn :: Lens' Certificate (Maybe Text)

-- | Indicates whether the certificate is the default certificate. Do not
--   set this value when specifying a certificate as an input. This value
--   is not included in the output when describing a listener, but is
--   included when describing listener certificates.
certificate_isDefault :: Lens' Certificate (Maybe Bool)

-- | Information about a cipher used in a policy.
--   
--   <i>See:</i> <a>newCipher</a> smart constructor.
data Cipher
Cipher' :: Maybe Int -> Maybe Text -> Cipher

-- | The priority of the cipher.
[$sel:priority:Cipher'] :: Cipher -> Maybe Int

-- | The name of the cipher.
[$sel:name:Cipher'] :: Cipher -> Maybe Text

-- | Create a value of <a>Cipher</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:priority:Cipher'</a>, <a>cipher_priority</a> - The priority of
--   the cipher.
--   
--   <a>$sel:name:Cipher'</a>, <a>cipher_name</a> - The name of the cipher.
newCipher :: Cipher

-- | The priority of the cipher.
cipher_priority :: Lens' Cipher (Maybe Int)

-- | The name of the cipher.
cipher_name :: Lens' Cipher (Maybe Text)

-- | Information about an action that returns a custom HTTP response.
--   
--   <i>See:</i> <a>newFixedResponseActionConfig</a> smart constructor.
data FixedResponseActionConfig
FixedResponseActionConfig' :: Maybe Text -> Maybe Text -> Text -> FixedResponseActionConfig

-- | The message.
[$sel:messageBody:FixedResponseActionConfig'] :: FixedResponseActionConfig -> Maybe Text

-- | The content type.
--   
--   Valid Values: text/plain | text/css | text/html |
--   application/javascript | application/json
[$sel:contentType:FixedResponseActionConfig'] :: FixedResponseActionConfig -> Maybe Text

-- | The HTTP response code (2XX, 4XX, or 5XX).
[$sel:statusCode:FixedResponseActionConfig'] :: FixedResponseActionConfig -> Text

-- | Create a value of <a>FixedResponseActionConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:messageBody:FixedResponseActionConfig'</a>,
--   <a>fixedResponseActionConfig_messageBody</a> - The message.
--   
--   <a>$sel:contentType:FixedResponseActionConfig'</a>,
--   <a>fixedResponseActionConfig_contentType</a> - The content type.
--   
--   Valid Values: text/plain | text/css | text/html |
--   application/javascript | application/json
--   
--   <a>$sel:statusCode:FixedResponseActionConfig'</a>,
--   <a>fixedResponseActionConfig_statusCode</a> - The HTTP response code
--   (2XX, 4XX, or 5XX).
newFixedResponseActionConfig :: Text -> FixedResponseActionConfig

-- | The message.
fixedResponseActionConfig_messageBody :: Lens' FixedResponseActionConfig (Maybe Text)

-- | The content type.
--   
--   Valid Values: text/plain | text/css | text/html |
--   application/javascript | application/json
fixedResponseActionConfig_contentType :: Lens' FixedResponseActionConfig (Maybe Text)

-- | The HTTP response code (2XX, 4XX, or 5XX).
fixedResponseActionConfig_statusCode :: Lens' FixedResponseActionConfig Text

-- | Information about a forward action.
--   
--   <i>See:</i> <a>newForwardActionConfig</a> smart constructor.
data ForwardActionConfig
ForwardActionConfig' :: Maybe [TargetGroupTuple] -> Maybe TargetGroupStickinessConfig -> ForwardActionConfig

-- | One or more target groups. For Network Load Balancers, you can specify
--   a single target group.
[$sel:targetGroups:ForwardActionConfig'] :: ForwardActionConfig -> Maybe [TargetGroupTuple]

-- | The target group stickiness for the rule.
[$sel:targetGroupStickinessConfig:ForwardActionConfig'] :: ForwardActionConfig -> Maybe TargetGroupStickinessConfig

-- | Create a value of <a>ForwardActionConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetGroups:ForwardActionConfig'</a>,
--   <a>forwardActionConfig_targetGroups</a> - One or more target groups.
--   For Network Load Balancers, you can specify a single target group.
--   
--   <a>$sel:targetGroupStickinessConfig:ForwardActionConfig'</a>,
--   <a>forwardActionConfig_targetGroupStickinessConfig</a> - The target
--   group stickiness for the rule.
newForwardActionConfig :: ForwardActionConfig

-- | One or more target groups. For Network Load Balancers, you can specify
--   a single target group.
forwardActionConfig_targetGroups :: Lens' ForwardActionConfig (Maybe [TargetGroupTuple])

-- | The target group stickiness for the rule.
forwardActionConfig_targetGroupStickinessConfig :: Lens' ForwardActionConfig (Maybe TargetGroupStickinessConfig)

-- | Information about a host header condition.
--   
--   <i>See:</i> <a>newHostHeaderConditionConfig</a> smart constructor.
data HostHeaderConditionConfig
HostHeaderConditionConfig' :: Maybe [Text] -> HostHeaderConditionConfig

-- | One or more host names. The maximum size of each name is 128
--   characters. The comparison is case insensitive. The following wildcard
--   characters are supported: * (matches 0 or more characters) and ?
--   (matches exactly 1 character).
--   
--   If you specify multiple strings, the condition is satisfied if one of
--   the strings matches the host name.
[$sel:values:HostHeaderConditionConfig'] :: HostHeaderConditionConfig -> Maybe [Text]

-- | Create a value of <a>HostHeaderConditionConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:values:HostHeaderConditionConfig'</a>,
--   <a>hostHeaderConditionConfig_values</a> - One or more host names. The
--   maximum size of each name is 128 characters. The comparison is case
--   insensitive. The following wildcard characters are supported: *
--   (matches 0 or more characters) and ? (matches exactly 1 character).
--   
--   If you specify multiple strings, the condition is satisfied if one of
--   the strings matches the host name.
newHostHeaderConditionConfig :: HostHeaderConditionConfig

-- | One or more host names. The maximum size of each name is 128
--   characters. The comparison is case insensitive. The following wildcard
--   characters are supported: * (matches 0 or more characters) and ?
--   (matches exactly 1 character).
--   
--   If you specify multiple strings, the condition is satisfied if one of
--   the strings matches the host name.
hostHeaderConditionConfig_values :: Lens' HostHeaderConditionConfig (Maybe [Text])

-- | Information about an HTTP header condition.
--   
--   There is a set of standard HTTP header fields. You can also define
--   custom HTTP header fields.
--   
--   <i>See:</i> <a>newHttpHeaderConditionConfig</a> smart constructor.
data HttpHeaderConditionConfig
HttpHeaderConditionConfig' :: Maybe [Text] -> Maybe Text -> HttpHeaderConditionConfig

-- | One or more strings to compare against the value of the HTTP header.
--   The maximum size of each string is 128 characters. The comparison
--   strings are case insensitive. The following wildcard characters are
--   supported: * (matches 0 or more characters) and ? (matches exactly 1
--   character).
--   
--   If the same header appears multiple times in the request, we search
--   them in order until a match is found.
--   
--   If you specify multiple strings, the condition is satisfied if one of
--   the strings matches the value of the HTTP header. To require that all
--   of the strings are a match, create one condition per string.
[$sel:values:HttpHeaderConditionConfig'] :: HttpHeaderConditionConfig -> Maybe [Text]

-- | The name of the HTTP header field. The maximum size is 40 characters.
--   The header name is case insensitive. The allowed characters are
--   specified by RFC 7230. Wildcards are not supported.
--   
--   You can't use an HTTP header condition to specify the host header. Use
--   HostHeaderConditionConfig to specify a host header condition.
[$sel:httpHeaderName:HttpHeaderConditionConfig'] :: HttpHeaderConditionConfig -> Maybe Text

-- | Create a value of <a>HttpHeaderConditionConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:values:HttpHeaderConditionConfig'</a>,
--   <a>httpHeaderConditionConfig_values</a> - One or more strings to
--   compare against the value of the HTTP header. The maximum size of each
--   string is 128 characters. The comparison strings are case insensitive.
--   The following wildcard characters are supported: * (matches 0 or more
--   characters) and ? (matches exactly 1 character).
--   
--   If the same header appears multiple times in the request, we search
--   them in order until a match is found.
--   
--   If you specify multiple strings, the condition is satisfied if one of
--   the strings matches the value of the HTTP header. To require that all
--   of the strings are a match, create one condition per string.
--   
--   <a>$sel:httpHeaderName:HttpHeaderConditionConfig'</a>,
--   <a>httpHeaderConditionConfig_httpHeaderName</a> - The name of the HTTP
--   header field. The maximum size is 40 characters. The header name is
--   case insensitive. The allowed characters are specified by RFC 7230.
--   Wildcards are not supported.
--   
--   You can't use an HTTP header condition to specify the host header. Use
--   HostHeaderConditionConfig to specify a host header condition.
newHttpHeaderConditionConfig :: HttpHeaderConditionConfig

-- | One or more strings to compare against the value of the HTTP header.
--   The maximum size of each string is 128 characters. The comparison
--   strings are case insensitive. The following wildcard characters are
--   supported: * (matches 0 or more characters) and ? (matches exactly 1
--   character).
--   
--   If the same header appears multiple times in the request, we search
--   them in order until a match is found.
--   
--   If you specify multiple strings, the condition is satisfied if one of
--   the strings matches the value of the HTTP header. To require that all
--   of the strings are a match, create one condition per string.
httpHeaderConditionConfig_values :: Lens' HttpHeaderConditionConfig (Maybe [Text])

-- | The name of the HTTP header field. The maximum size is 40 characters.
--   The header name is case insensitive. The allowed characters are
--   specified by RFC 7230. Wildcards are not supported.
--   
--   You can't use an HTTP header condition to specify the host header. Use
--   HostHeaderConditionConfig to specify a host header condition.
httpHeaderConditionConfig_httpHeaderName :: Lens' HttpHeaderConditionConfig (Maybe Text)

-- | Information about an HTTP method condition.
--   
--   HTTP defines a set of request methods, also referred to as HTTP verbs.
--   For more information, see the <a>HTTP Method Registry</a>. You can
--   also define custom HTTP methods.
--   
--   <i>See:</i> <a>newHttpRequestMethodConditionConfig</a> smart
--   constructor.
data HttpRequestMethodConditionConfig
HttpRequestMethodConditionConfig' :: Maybe [Text] -> HttpRequestMethodConditionConfig

-- | The name of the request method. The maximum size is 40 characters. The
--   allowed characters are A-Z, hyphen (-), and underscore (_). The
--   comparison is case sensitive. Wildcards are not supported; therefore,
--   the method name must be an exact match.
--   
--   If you specify multiple strings, the condition is satisfied if one of
--   the strings matches the HTTP request method. We recommend that you
--   route GET and HEAD requests in the same way, because the response to a
--   HEAD request may be cached.
[$sel:values:HttpRequestMethodConditionConfig'] :: HttpRequestMethodConditionConfig -> Maybe [Text]

-- | Create a value of <a>HttpRequestMethodConditionConfig</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:values:HttpRequestMethodConditionConfig'</a>,
--   <a>httpRequestMethodConditionConfig_values</a> - The name of the
--   request method. The maximum size is 40 characters. The allowed
--   characters are A-Z, hyphen (-), and underscore (_). The comparison is
--   case sensitive. Wildcards are not supported; therefore, the method
--   name must be an exact match.
--   
--   If you specify multiple strings, the condition is satisfied if one of
--   the strings matches the HTTP request method. We recommend that you
--   route GET and HEAD requests in the same way, because the response to a
--   HEAD request may be cached.
newHttpRequestMethodConditionConfig :: HttpRequestMethodConditionConfig

-- | The name of the request method. The maximum size is 40 characters. The
--   allowed characters are A-Z, hyphen (-), and underscore (_). The
--   comparison is case sensitive. Wildcards are not supported; therefore,
--   the method name must be an exact match.
--   
--   If you specify multiple strings, the condition is satisfied if one of
--   the strings matches the HTTP request method. We recommend that you
--   route GET and HEAD requests in the same way, because the response to a
--   HEAD request may be cached.
httpRequestMethodConditionConfig_values :: Lens' HttpRequestMethodConditionConfig (Maybe [Text])

-- | Information about an Elastic Load Balancing resource limit for your
--   Amazon Web Services account.
--   
--   <i>See:</i> <a>newLimit</a> smart constructor.
data Limit
Limit' :: Maybe Text -> Maybe Text -> Limit

-- | The maximum value of the limit.
[$sel:max:Limit'] :: Limit -> Maybe Text

-- | The name of the limit. The possible values are:
--   
--   <ul>
--   <li>application-load-balancers</li>
--   <li>condition-values-per-alb-rule</li>
--   <li>condition-wildcards-per-alb-rule</li>
--   <li>gateway-load-balancers</li>
--   <li>gateway-load-balancers-per-vpc</li>
--   <li>geneve-target-groups</li>
--   <li>listeners-per-application-load-balancer</li>
--   <li>listeners-per-network-load-balancer</li>
--   <li>network-load-balancers</li>
--   <li>rules-per-application-load-balancer</li>
--   <li>target-groups</li>
--   <li>target-groups-per-action-on-application-load-balancer</li>
--   <li>target-groups-per-action-on-network-load-balancer</li>
--   <li>target-groups-per-application-load-balancer</li>
--   <li>targets-per-application-load-balancer</li>
--   <li>targets-per-availability-zone-per-gateway-load-balancer</li>
--   <li>targets-per-availability-zone-per-network-load-balancer</li>
--   <li>targets-per-network-load-balancer</li>
--   </ul>
[$sel:name:Limit'] :: Limit -> Maybe Text

-- | Create a value of <a>Limit</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:max:Limit'</a>, <a>limit_max</a> - The maximum value of the
--   limit.
--   
--   <a>$sel:name:Limit'</a>, <a>limit_name</a> - The name of the limit.
--   The possible values are:
--   
--   <ul>
--   <li>application-load-balancers</li>
--   <li>condition-values-per-alb-rule</li>
--   <li>condition-wildcards-per-alb-rule</li>
--   <li>gateway-load-balancers</li>
--   <li>gateway-load-balancers-per-vpc</li>
--   <li>geneve-target-groups</li>
--   <li>listeners-per-application-load-balancer</li>
--   <li>listeners-per-network-load-balancer</li>
--   <li>network-load-balancers</li>
--   <li>rules-per-application-load-balancer</li>
--   <li>target-groups</li>
--   <li>target-groups-per-action-on-application-load-balancer</li>
--   <li>target-groups-per-action-on-network-load-balancer</li>
--   <li>target-groups-per-application-load-balancer</li>
--   <li>targets-per-application-load-balancer</li>
--   <li>targets-per-availability-zone-per-gateway-load-balancer</li>
--   <li>targets-per-availability-zone-per-network-load-balancer</li>
--   <li>targets-per-network-load-balancer</li>
--   </ul>
newLimit :: Limit

-- | The maximum value of the limit.
limit_max :: Lens' Limit (Maybe Text)

-- | The name of the limit. The possible values are:
--   
--   <ul>
--   <li>application-load-balancers</li>
--   <li>condition-values-per-alb-rule</li>
--   <li>condition-wildcards-per-alb-rule</li>
--   <li>gateway-load-balancers</li>
--   <li>gateway-load-balancers-per-vpc</li>
--   <li>geneve-target-groups</li>
--   <li>listeners-per-application-load-balancer</li>
--   <li>listeners-per-network-load-balancer</li>
--   <li>network-load-balancers</li>
--   <li>rules-per-application-load-balancer</li>
--   <li>target-groups</li>
--   <li>target-groups-per-action-on-application-load-balancer</li>
--   <li>target-groups-per-action-on-network-load-balancer</li>
--   <li>target-groups-per-application-load-balancer</li>
--   <li>targets-per-application-load-balancer</li>
--   <li>targets-per-availability-zone-per-gateway-load-balancer</li>
--   <li>targets-per-availability-zone-per-network-load-balancer</li>
--   <li>targets-per-network-load-balancer</li>
--   </ul>
limit_name :: Lens' Limit (Maybe Text)

-- | Information about a listener.
--   
--   <i>See:</i> <a>newListener</a> smart constructor.
data Listener
Listener' :: Maybe Text -> Maybe Text -> Maybe ProtocolEnum -> Maybe [Action] -> Maybe [Certificate] -> Maybe Text -> Maybe [Text] -> Maybe Natural -> Listener

-- | <ul>
--   <li><i>HTTPS or TLS listener</i> The security policy that defines
--   which protocols and ciphers are supported.</li>
--   </ul>
[$sel:sslPolicy:Listener'] :: Listener -> Maybe Text

-- | The Amazon Resource Name (ARN) of the listener.
[$sel:listenerArn:Listener'] :: Listener -> Maybe Text

-- | The protocol for connections from clients to the load balancer.
[$sel:protocol:Listener'] :: Listener -> Maybe ProtocolEnum

-- | The default actions for the listener.
[$sel:defaultActions:Listener'] :: Listener -> Maybe [Action]

-- | <ul>
--   <li><i>HTTPS or TLS listener</i> The default certificate for the
--   listener.</li>
--   </ul>
[$sel:certificates:Listener'] :: Listener -> Maybe [Certificate]

-- | The Amazon Resource Name (ARN) of the load balancer.
[$sel:loadBalancerArn:Listener'] :: Listener -> Maybe Text

-- | <ul>
--   <li><i>TLS listener</i> The name of the Application-Layer Protocol
--   Negotiation (ALPN) policy.</li>
--   </ul>
[$sel:alpnPolicy:Listener'] :: Listener -> Maybe [Text]

-- | The port on which the load balancer is listening.
[$sel:port:Listener'] :: Listener -> Maybe Natural

-- | Create a value of <a>Listener</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sslPolicy:Listener'</a>, <a>listener_sslPolicy</a> - [HTTPS or
--   TLS listener] The security policy that defines which protocols and
--   ciphers are supported.
--   
--   <a>$sel:listenerArn:Listener'</a>, <a>listener_listenerArn</a> - The
--   Amazon Resource Name (ARN) of the listener.
--   
--   <a>$sel:protocol:Listener'</a>, <a>listener_protocol</a> - The
--   protocol for connections from clients to the load balancer.
--   
--   <a>$sel:defaultActions:Listener'</a>, <a>listener_defaultActions</a> -
--   The default actions for the listener.
--   
--   <a>$sel:certificates:Listener'</a>, <a>listener_certificates</a> -
--   [HTTPS or TLS listener] The default certificate for the listener.
--   
--   <a>$sel:loadBalancerArn:Listener'</a>, <a>listener_loadBalancerArn</a>
--   - The Amazon Resource Name (ARN) of the load balancer.
--   
--   <a>$sel:alpnPolicy:Listener'</a>, <a>listener_alpnPolicy</a> - [TLS
--   listener] The name of the Application-Layer Protocol Negotiation
--   (ALPN) policy.
--   
--   <a>$sel:port:Listener'</a>, <a>listener_port</a> - The port on which
--   the load balancer is listening.
newListener :: Listener

-- | <ul>
--   <li><i>HTTPS or TLS listener</i> The security policy that defines
--   which protocols and ciphers are supported.</li>
--   </ul>
listener_sslPolicy :: Lens' Listener (Maybe Text)

-- | The Amazon Resource Name (ARN) of the listener.
listener_listenerArn :: Lens' Listener (Maybe Text)

-- | The protocol for connections from clients to the load balancer.
listener_protocol :: Lens' Listener (Maybe ProtocolEnum)

-- | The default actions for the listener.
listener_defaultActions :: Lens' Listener (Maybe [Action])

-- | <ul>
--   <li><i>HTTPS or TLS listener</i> The default certificate for the
--   listener.</li>
--   </ul>
listener_certificates :: Lens' Listener (Maybe [Certificate])

-- | The Amazon Resource Name (ARN) of the load balancer.
listener_loadBalancerArn :: Lens' Listener (Maybe Text)

-- | <ul>
--   <li><i>TLS listener</i> The name of the Application-Layer Protocol
--   Negotiation (ALPN) policy.</li>
--   </ul>
listener_alpnPolicy :: Lens' Listener (Maybe [Text])

-- | The port on which the load balancer is listening.
listener_port :: Lens' Listener (Maybe Natural)

-- | Information about a load balancer.
--   
--   <i>See:</i> <a>newLoadBalancer</a> smart constructor.
data LoadBalancer
LoadBalancer' :: Maybe LoadBalancerState -> Maybe [Text] -> Maybe Text -> Maybe ISO8601 -> Maybe Text -> Maybe Text -> Maybe [AvailabilityZone] -> Maybe Text -> Maybe Text -> Maybe IpAddressType -> Maybe LoadBalancerSchemeEnum -> Maybe LoadBalancerTypeEnum -> Maybe Text -> LoadBalancer

-- | The state of the load balancer.
[$sel:state:LoadBalancer'] :: LoadBalancer -> Maybe LoadBalancerState

-- | The IDs of the security groups for the load balancer.
[$sel:securityGroups:LoadBalancer'] :: LoadBalancer -> Maybe [Text]

-- | The name of the load balancer.
[$sel:loadBalancerName:LoadBalancer'] :: LoadBalancer -> Maybe Text

-- | The date and time the load balancer was created.
[$sel:createdTime:LoadBalancer'] :: LoadBalancer -> Maybe ISO8601

-- | The ID of the VPC for the load balancer.
[$sel:vpcId:LoadBalancer'] :: LoadBalancer -> Maybe Text

-- | The ID of the Amazon Route 53 hosted zone associated with the load
--   balancer.
[$sel:canonicalHostedZoneId:LoadBalancer'] :: LoadBalancer -> Maybe Text

-- | The subnets for the load balancer.
[$sel:availabilityZones:LoadBalancer'] :: LoadBalancer -> Maybe [AvailabilityZone]

-- | <ul>
--   <li><i>Application Load Balancers on Outposts</i> The ID of the
--   customer-owned address pool.</li>
--   </ul>
[$sel:customerOwnedIpv4Pool:LoadBalancer'] :: LoadBalancer -> Maybe Text

-- | The Amazon Resource Name (ARN) of the load balancer.
[$sel:loadBalancerArn:LoadBalancer'] :: LoadBalancer -> Maybe Text

-- | The type of IP addresses used by the subnets for your load balancer.
--   The possible values are <tt>ipv4</tt> (for IPv4 addresses) and
--   <tt>dualstack</tt> (for IPv4 and IPv6 addresses).
[$sel:ipAddressType:LoadBalancer'] :: LoadBalancer -> Maybe IpAddressType

-- | The nodes of an Internet-facing load balancer have public IP
--   addresses. The DNS name of an Internet-facing load balancer is
--   publicly resolvable to the public IP addresses of the nodes.
--   Therefore, Internet-facing load balancers can route requests from
--   clients over the internet.
--   
--   The nodes of an internal load balancer have only private IP addresses.
--   The DNS name of an internal load balancer is publicly resolvable to
--   the private IP addresses of the nodes. Therefore, internal load
--   balancers can route requests only from clients with access to the VPC
--   for the load balancer.
[$sel:scheme:LoadBalancer'] :: LoadBalancer -> Maybe LoadBalancerSchemeEnum

-- | The type of load balancer.
[$sel:type':LoadBalancer'] :: LoadBalancer -> Maybe LoadBalancerTypeEnum

-- | The public DNS name of the load balancer.
[$sel:dNSName:LoadBalancer'] :: LoadBalancer -> Maybe Text

-- | Create a value of <a>LoadBalancer</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:LoadBalancer'</a>, <a>loadBalancer_state</a> - The state
--   of the load balancer.
--   
--   <a>$sel:securityGroups:LoadBalancer'</a>,
--   <a>loadBalancer_securityGroups</a> - The IDs of the security groups
--   for the load balancer.
--   
--   <a>$sel:loadBalancerName:LoadBalancer'</a>,
--   <a>loadBalancer_loadBalancerName</a> - The name of the load balancer.
--   
--   <a>$sel:createdTime:LoadBalancer'</a>, <a>loadBalancer_createdTime</a>
--   - The date and time the load balancer was created.
--   
--   <a>$sel:vpcId:LoadBalancer'</a>, <a>loadBalancer_vpcId</a> - The ID of
--   the VPC for the load balancer.
--   
--   <a>$sel:canonicalHostedZoneId:LoadBalancer'</a>,
--   <a>loadBalancer_canonicalHostedZoneId</a> - The ID of the Amazon Route
--   53 hosted zone associated with the load balancer.
--   
--   <a>$sel:availabilityZones:LoadBalancer'</a>,
--   <a>loadBalancer_availabilityZones</a> - The subnets for the load
--   balancer.
--   
--   <a>$sel:customerOwnedIpv4Pool:LoadBalancer'</a>,
--   <a>loadBalancer_customerOwnedIpv4Pool</a> - [Application Load
--   Balancers on Outposts] The ID of the customer-owned address pool.
--   
--   <a>$sel:loadBalancerArn:LoadBalancer'</a>,
--   <a>loadBalancer_loadBalancerArn</a> - The Amazon Resource Name (ARN)
--   of the load balancer.
--   
--   <a>$sel:ipAddressType:LoadBalancer'</a>,
--   <a>loadBalancer_ipAddressType</a> - The type of IP addresses used by
--   the subnets for your load balancer. The possible values are
--   <tt>ipv4</tt> (for IPv4 addresses) and <tt>dualstack</tt> (for IPv4
--   and IPv6 addresses).
--   
--   <a>$sel:scheme:LoadBalancer'</a>, <a>loadBalancer_scheme</a> - The
--   nodes of an Internet-facing load balancer have public IP addresses.
--   The DNS name of an Internet-facing load balancer is publicly
--   resolvable to the public IP addresses of the nodes. Therefore,
--   Internet-facing load balancers can route requests from clients over
--   the internet.
--   
--   The nodes of an internal load balancer have only private IP addresses.
--   The DNS name of an internal load balancer is publicly resolvable to
--   the private IP addresses of the nodes. Therefore, internal load
--   balancers can route requests only from clients with access to the VPC
--   for the load balancer.
--   
--   <a>$sel:type':LoadBalancer'</a>, <a>loadBalancer_type</a> - The type
--   of load balancer.
--   
--   <a>$sel:dNSName:LoadBalancer'</a>, <a>loadBalancer_dNSName</a> - The
--   public DNS name of the load balancer.
newLoadBalancer :: LoadBalancer

-- | The state of the load balancer.
loadBalancer_state :: Lens' LoadBalancer (Maybe LoadBalancerState)

-- | The IDs of the security groups for the load balancer.
loadBalancer_securityGroups :: Lens' LoadBalancer (Maybe [Text])

-- | The name of the load balancer.
loadBalancer_loadBalancerName :: Lens' LoadBalancer (Maybe Text)

-- | The date and time the load balancer was created.
loadBalancer_createdTime :: Lens' LoadBalancer (Maybe UTCTime)

-- | The ID of the VPC for the load balancer.
loadBalancer_vpcId :: Lens' LoadBalancer (Maybe Text)

-- | The ID of the Amazon Route 53 hosted zone associated with the load
--   balancer.
loadBalancer_canonicalHostedZoneId :: Lens' LoadBalancer (Maybe Text)

-- | The subnets for the load balancer.
loadBalancer_availabilityZones :: Lens' LoadBalancer (Maybe [AvailabilityZone])

-- | <ul>
--   <li><i>Application Load Balancers on Outposts</i> The ID of the
--   customer-owned address pool.</li>
--   </ul>
loadBalancer_customerOwnedIpv4Pool :: Lens' LoadBalancer (Maybe Text)

-- | The Amazon Resource Name (ARN) of the load balancer.
loadBalancer_loadBalancerArn :: Lens' LoadBalancer (Maybe Text)

-- | The type of IP addresses used by the subnets for your load balancer.
--   The possible values are <tt>ipv4</tt> (for IPv4 addresses) and
--   <tt>dualstack</tt> (for IPv4 and IPv6 addresses).
loadBalancer_ipAddressType :: Lens' LoadBalancer (Maybe IpAddressType)

-- | The nodes of an Internet-facing load balancer have public IP
--   addresses. The DNS name of an Internet-facing load balancer is
--   publicly resolvable to the public IP addresses of the nodes.
--   Therefore, Internet-facing load balancers can route requests from
--   clients over the internet.
--   
--   The nodes of an internal load balancer have only private IP addresses.
--   The DNS name of an internal load balancer is publicly resolvable to
--   the private IP addresses of the nodes. Therefore, internal load
--   balancers can route requests only from clients with access to the VPC
--   for the load balancer.
loadBalancer_scheme :: Lens' LoadBalancer (Maybe LoadBalancerSchemeEnum)

-- | The type of load balancer.
loadBalancer_type :: Lens' LoadBalancer (Maybe LoadBalancerTypeEnum)

-- | The public DNS name of the load balancer.
loadBalancer_dNSName :: Lens' LoadBalancer (Maybe Text)

-- | Information about a static IP address for a load balancer.
--   
--   <i>See:</i> <a>newLoadBalancerAddress</a> smart constructor.
data LoadBalancerAddress
LoadBalancerAddress' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> LoadBalancerAddress

-- | <ul>
--   <li><i>Network Load Balancers</i> The IPv6 address.</li>
--   </ul>
[$sel:iPv6Address:LoadBalancerAddress'] :: LoadBalancerAddress -> Maybe Text

-- | The static IP address.
[$sel:ipAddress:LoadBalancerAddress'] :: LoadBalancerAddress -> Maybe Text

-- | <ul>
--   <li><i>Network Load Balancers</i> The allocation ID of the Elastic IP
--   address for an internal-facing load balancer.</li>
--   </ul>
[$sel:allocationId:LoadBalancerAddress'] :: LoadBalancerAddress -> Maybe Text

-- | <ul>
--   <li><i>Network Load Balancers</i> The private IPv4 address for an
--   internal load balancer.</li>
--   </ul>
[$sel:privateIPv4Address:LoadBalancerAddress'] :: LoadBalancerAddress -> Maybe Text

-- | Create a value of <a>LoadBalancerAddress</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:iPv6Address:LoadBalancerAddress'</a>,
--   <a>loadBalancerAddress_iPv6Address</a> - [Network Load Balancers] The
--   IPv6 address.
--   
--   <a>$sel:ipAddress:LoadBalancerAddress'</a>,
--   <a>loadBalancerAddress_ipAddress</a> - The static IP address.
--   
--   <a>$sel:allocationId:LoadBalancerAddress'</a>,
--   <a>loadBalancerAddress_allocationId</a> - [Network Load Balancers] The
--   allocation ID of the Elastic IP address for an internal-facing load
--   balancer.
--   
--   <a>$sel:privateIPv4Address:LoadBalancerAddress'</a>,
--   <a>loadBalancerAddress_privateIPv4Address</a> - [Network Load
--   Balancers] The private IPv4 address for an internal load balancer.
newLoadBalancerAddress :: LoadBalancerAddress

-- | <ul>
--   <li><i>Network Load Balancers</i> The IPv6 address.</li>
--   </ul>
loadBalancerAddress_iPv6Address :: Lens' LoadBalancerAddress (Maybe Text)

-- | The static IP address.
loadBalancerAddress_ipAddress :: Lens' LoadBalancerAddress (Maybe Text)

-- | <ul>
--   <li><i>Network Load Balancers</i> The allocation ID of the Elastic IP
--   address for an internal-facing load balancer.</li>
--   </ul>
loadBalancerAddress_allocationId :: Lens' LoadBalancerAddress (Maybe Text)

-- | <ul>
--   <li><i>Network Load Balancers</i> The private IPv4 address for an
--   internal load balancer.</li>
--   </ul>
loadBalancerAddress_privateIPv4Address :: Lens' LoadBalancerAddress (Maybe Text)

-- | Information about a load balancer attribute.
--   
--   <i>See:</i> <a>newLoadBalancerAttribute</a> smart constructor.
data LoadBalancerAttribute
LoadBalancerAttribute' :: Maybe Text -> Maybe Text -> LoadBalancerAttribute

-- | The value of the attribute.
[$sel:value:LoadBalancerAttribute'] :: LoadBalancerAttribute -> Maybe Text

-- | The name of the attribute.
--   
--   The following attribute is supported by all load balancers:
--   
--   <ul>
--   <li><tt>deletion_protection.enabled</tt> - Indicates whether deletion
--   protection is enabled. The value is <tt>true</tt> or <tt>false</tt>.
--   The default is <tt>false</tt>.</li>
--   </ul>
--   
--   The following attributes are supported by both Application Load
--   Balancers and Network Load Balancers:
--   
--   <ul>
--   <li><tt>access_logs.s3.enabled</tt> - Indicates whether access logs
--   are enabled. The value is <tt>true</tt> or <tt>false</tt>. The default
--   is <tt>false</tt>.</li>
--   <li><tt>access_logs.s3.bucket</tt> - The name of the S3 bucket for the
--   access logs. This attribute is required if access logs are enabled.
--   The bucket must exist in the same region as the load balancer and have
--   a bucket policy that grants Elastic Load Balancing permissions to
--   write to the bucket.</li>
--   <li><tt>access_logs.s3.prefix</tt> - The prefix for the location in
--   the S3 bucket for the access logs.</li>
--   </ul>
--   
--   The following attributes are supported by only Application Load
--   Balancers:
--   
--   <ul>
--   <li><tt>idle_timeout.timeout_seconds</tt> - The idle timeout value, in
--   seconds. The valid range is 1-4000 seconds. The default is 60
--   seconds.</li>
--   <li><tt>routing.http.desync_mitigation_mode</tt> - Determines how the
--   load balancer handles requests that might pose a security risk to your
--   application. The possible values are <tt>monitor</tt>,
--   <tt>defensive</tt>, and <tt>strictest</tt>. The default is
--   <tt>defensive</tt>.</li>
--   <li><tt>routing.http.drop_invalid_header_fields.enabled</tt> -
--   Indicates whether HTTP headers with invalid header fields are removed
--   by the load balancer (<tt>true</tt>) or routed to targets
--   (<tt>false</tt>). The default is <tt>false</tt>.</li>
--   <li><tt>routing.http.x_amzn_tls_version_and_cipher_suite.enabled</tt>
--   - Indicates whether the two headers (<tt>x-amzn-tls-version</tt> and
--   <tt>x-amzn-tls-cipher-suite</tt>), which contain information about the
--   negotiated TLS version and cipher suite, are added to the client
--   request before sending it to the target. The
--   <tt>x-amzn-tls-version</tt> header has information about the TLS
--   protocol version negotiated with the client, and the
--   <tt>x-amzn-tls-cipher-suite</tt> header has information about the
--   cipher suite negotiated with the client. Both headers are in OpenSSL
--   format. The possible values for the attribute are <tt>true</tt> and
--   <tt>false</tt>. The default is <tt>false</tt>.</li>
--   <li><tt>routing.http.xff_client_port.enabled</tt> - Indicates whether
--   the <tt>X-Forwarded-For</tt> header should preserve the source port
--   that the client used to connect to the load balancer. The possible
--   values are <tt>true</tt> and <tt>false</tt>. The default is
--   <tt>false</tt>.</li>
--   <li><tt>routing.http2.enabled</tt> - Indicates whether HTTP/2 is
--   enabled. The possible values are <tt>true</tt> and <tt>false</tt>. The
--   default is <tt>true</tt>. Elastic Load Balancing requires that message
--   header names contain only alphanumeric characters and hyphens.</li>
--   <li><tt>waf.fail_open.enabled</tt> - Indicates whether to allow a
--   WAF-enabled load balancer to route requests to targets if it is unable
--   to forward the request to Amazon Web Services WAF. The possible values
--   are <tt>true</tt> and <tt>false</tt>. The default is
--   <tt>false</tt>.</li>
--   </ul>
--   
--   The following attribute is supported by Network Load Balancers and
--   Gateway Load Balancers:
--   
--   <ul>
--   <li><tt>load_balancing.cross_zone.enabled</tt> - Indicates whether
--   cross-zone load balancing is enabled. The possible values are
--   <tt>true</tt> and <tt>false</tt>. The default is <tt>false</tt>.</li>
--   </ul>
[$sel:key:LoadBalancerAttribute'] :: LoadBalancerAttribute -> Maybe Text

-- | Create a value of <a>LoadBalancerAttribute</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:LoadBalancerAttribute'</a>,
--   <a>loadBalancerAttribute_value</a> - The value of the attribute.
--   
--   <a>$sel:key:LoadBalancerAttribute'</a>,
--   <a>loadBalancerAttribute_key</a> - The name of the attribute.
--   
--   The following attribute is supported by all load balancers:
--   
--   <ul>
--   <li><tt>deletion_protection.enabled</tt> - Indicates whether deletion
--   protection is enabled. The value is <tt>true</tt> or <tt>false</tt>.
--   The default is <tt>false</tt>.</li>
--   </ul>
--   
--   The following attributes are supported by both Application Load
--   Balancers and Network Load Balancers:
--   
--   <ul>
--   <li><tt>access_logs.s3.enabled</tt> - Indicates whether access logs
--   are enabled. The value is <tt>true</tt> or <tt>false</tt>. The default
--   is <tt>false</tt>.</li>
--   <li><tt>access_logs.s3.bucket</tt> - The name of the S3 bucket for the
--   access logs. This attribute is required if access logs are enabled.
--   The bucket must exist in the same region as the load balancer and have
--   a bucket policy that grants Elastic Load Balancing permissions to
--   write to the bucket.</li>
--   <li><tt>access_logs.s3.prefix</tt> - The prefix for the location in
--   the S3 bucket for the access logs.</li>
--   </ul>
--   
--   The following attributes are supported by only Application Load
--   Balancers:
--   
--   <ul>
--   <li><tt>idle_timeout.timeout_seconds</tt> - The idle timeout value, in
--   seconds. The valid range is 1-4000 seconds. The default is 60
--   seconds.</li>
--   <li><tt>routing.http.desync_mitigation_mode</tt> - Determines how the
--   load balancer handles requests that might pose a security risk to your
--   application. The possible values are <tt>monitor</tt>,
--   <tt>defensive</tt>, and <tt>strictest</tt>. The default is
--   <tt>defensive</tt>.</li>
--   <li><tt>routing.http.drop_invalid_header_fields.enabled</tt> -
--   Indicates whether HTTP headers with invalid header fields are removed
--   by the load balancer (<tt>true</tt>) or routed to targets
--   (<tt>false</tt>). The default is <tt>false</tt>.</li>
--   <li><tt>routing.http.x_amzn_tls_version_and_cipher_suite.enabled</tt>
--   - Indicates whether the two headers (<tt>x-amzn-tls-version</tt> and
--   <tt>x-amzn-tls-cipher-suite</tt>), which contain information about the
--   negotiated TLS version and cipher suite, are added to the client
--   request before sending it to the target. The
--   <tt>x-amzn-tls-version</tt> header has information about the TLS
--   protocol version negotiated with the client, and the
--   <tt>x-amzn-tls-cipher-suite</tt> header has information about the
--   cipher suite negotiated with the client. Both headers are in OpenSSL
--   format. The possible values for the attribute are <tt>true</tt> and
--   <tt>false</tt>. The default is <tt>false</tt>.</li>
--   <li><tt>routing.http.xff_client_port.enabled</tt> - Indicates whether
--   the <tt>X-Forwarded-For</tt> header should preserve the source port
--   that the client used to connect to the load balancer. The possible
--   values are <tt>true</tt> and <tt>false</tt>. The default is
--   <tt>false</tt>.</li>
--   <li><tt>routing.http2.enabled</tt> - Indicates whether HTTP/2 is
--   enabled. The possible values are <tt>true</tt> and <tt>false</tt>. The
--   default is <tt>true</tt>. Elastic Load Balancing requires that message
--   header names contain only alphanumeric characters and hyphens.</li>
--   <li><tt>waf.fail_open.enabled</tt> - Indicates whether to allow a
--   WAF-enabled load balancer to route requests to targets if it is unable
--   to forward the request to Amazon Web Services WAF. The possible values
--   are <tt>true</tt> and <tt>false</tt>. The default is
--   <tt>false</tt>.</li>
--   </ul>
--   
--   The following attribute is supported by Network Load Balancers and
--   Gateway Load Balancers:
--   
--   <ul>
--   <li><tt>load_balancing.cross_zone.enabled</tt> - Indicates whether
--   cross-zone load balancing is enabled. The possible values are
--   <tt>true</tt> and <tt>false</tt>. The default is <tt>false</tt>.</li>
--   </ul>
newLoadBalancerAttribute :: LoadBalancerAttribute

-- | The value of the attribute.
loadBalancerAttribute_value :: Lens' LoadBalancerAttribute (Maybe Text)

-- | The name of the attribute.
--   
--   The following attribute is supported by all load balancers:
--   
--   <ul>
--   <li><tt>deletion_protection.enabled</tt> - Indicates whether deletion
--   protection is enabled. The value is <tt>true</tt> or <tt>false</tt>.
--   The default is <tt>false</tt>.</li>
--   </ul>
--   
--   The following attributes are supported by both Application Load
--   Balancers and Network Load Balancers:
--   
--   <ul>
--   <li><tt>access_logs.s3.enabled</tt> - Indicates whether access logs
--   are enabled. The value is <tt>true</tt> or <tt>false</tt>. The default
--   is <tt>false</tt>.</li>
--   <li><tt>access_logs.s3.bucket</tt> - The name of the S3 bucket for the
--   access logs. This attribute is required if access logs are enabled.
--   The bucket must exist in the same region as the load balancer and have
--   a bucket policy that grants Elastic Load Balancing permissions to
--   write to the bucket.</li>
--   <li><tt>access_logs.s3.prefix</tt> - The prefix for the location in
--   the S3 bucket for the access logs.</li>
--   </ul>
--   
--   The following attributes are supported by only Application Load
--   Balancers:
--   
--   <ul>
--   <li><tt>idle_timeout.timeout_seconds</tt> - The idle timeout value, in
--   seconds. The valid range is 1-4000 seconds. The default is 60
--   seconds.</li>
--   <li><tt>routing.http.desync_mitigation_mode</tt> - Determines how the
--   load balancer handles requests that might pose a security risk to your
--   application. The possible values are <tt>monitor</tt>,
--   <tt>defensive</tt>, and <tt>strictest</tt>. The default is
--   <tt>defensive</tt>.</li>
--   <li><tt>routing.http.drop_invalid_header_fields.enabled</tt> -
--   Indicates whether HTTP headers with invalid header fields are removed
--   by the load balancer (<tt>true</tt>) or routed to targets
--   (<tt>false</tt>). The default is <tt>false</tt>.</li>
--   <li><tt>routing.http.x_amzn_tls_version_and_cipher_suite.enabled</tt>
--   - Indicates whether the two headers (<tt>x-amzn-tls-version</tt> and
--   <tt>x-amzn-tls-cipher-suite</tt>), which contain information about the
--   negotiated TLS version and cipher suite, are added to the client
--   request before sending it to the target. The
--   <tt>x-amzn-tls-version</tt> header has information about the TLS
--   protocol version negotiated with the client, and the
--   <tt>x-amzn-tls-cipher-suite</tt> header has information about the
--   cipher suite negotiated with the client. Both headers are in OpenSSL
--   format. The possible values for the attribute are <tt>true</tt> and
--   <tt>false</tt>. The default is <tt>false</tt>.</li>
--   <li><tt>routing.http.xff_client_port.enabled</tt> - Indicates whether
--   the <tt>X-Forwarded-For</tt> header should preserve the source port
--   that the client used to connect to the load balancer. The possible
--   values are <tt>true</tt> and <tt>false</tt>. The default is
--   <tt>false</tt>.</li>
--   <li><tt>routing.http2.enabled</tt> - Indicates whether HTTP/2 is
--   enabled. The possible values are <tt>true</tt> and <tt>false</tt>. The
--   default is <tt>true</tt>. Elastic Load Balancing requires that message
--   header names contain only alphanumeric characters and hyphens.</li>
--   <li><tt>waf.fail_open.enabled</tt> - Indicates whether to allow a
--   WAF-enabled load balancer to route requests to targets if it is unable
--   to forward the request to Amazon Web Services WAF. The possible values
--   are <tt>true</tt> and <tt>false</tt>. The default is
--   <tt>false</tt>.</li>
--   </ul>
--   
--   The following attribute is supported by Network Load Balancers and
--   Gateway Load Balancers:
--   
--   <ul>
--   <li><tt>load_balancing.cross_zone.enabled</tt> - Indicates whether
--   cross-zone load balancing is enabled. The possible values are
--   <tt>true</tt> and <tt>false</tt>. The default is <tt>false</tt>.</li>
--   </ul>
loadBalancerAttribute_key :: Lens' LoadBalancerAttribute (Maybe Text)

-- | Information about the state of the load balancer.
--   
--   <i>See:</i> <a>newLoadBalancerState</a> smart constructor.
data LoadBalancerState
LoadBalancerState' :: Maybe Text -> Maybe LoadBalancerStateEnum -> LoadBalancerState

-- | A description of the state.
[$sel:reason:LoadBalancerState'] :: LoadBalancerState -> Maybe Text

-- | The state code. The initial state of the load balancer is
--   <tt>provisioning</tt>. After the load balancer is fully set up and
--   ready to route traffic, its state is <tt>active</tt>. If load balancer
--   is routing traffic but does not have the resources it needs to scale,
--   its state is<tt>active_impaired</tt>. If the load balancer could not
--   be set up, its state is <tt>failed</tt>.
[$sel:code:LoadBalancerState'] :: LoadBalancerState -> Maybe LoadBalancerStateEnum

-- | Create a value of <a>LoadBalancerState</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:reason:LoadBalancerState'</a>, <a>loadBalancerState_reason</a>
--   - A description of the state.
--   
--   <a>$sel:code:LoadBalancerState'</a>, <a>loadBalancerState_code</a> -
--   The state code. The initial state of the load balancer is
--   <tt>provisioning</tt>. After the load balancer is fully set up and
--   ready to route traffic, its state is <tt>active</tt>. If load balancer
--   is routing traffic but does not have the resources it needs to scale,
--   its state is<tt>active_impaired</tt>. If the load balancer could not
--   be set up, its state is <tt>failed</tt>.
newLoadBalancerState :: LoadBalancerState

-- | A description of the state.
loadBalancerState_reason :: Lens' LoadBalancerState (Maybe Text)

-- | The state code. The initial state of the load balancer is
--   <tt>provisioning</tt>. After the load balancer is fully set up and
--   ready to route traffic, its state is <tt>active</tt>. If load balancer
--   is routing traffic but does not have the resources it needs to scale,
--   its state is<tt>active_impaired</tt>. If the load balancer could not
--   be set up, its state is <tt>failed</tt>.
loadBalancerState_code :: Lens' LoadBalancerState (Maybe LoadBalancerStateEnum)

-- | The codes to use when checking for a successful response from a
--   target. If the protocol version is gRPC, these are gRPC codes.
--   Otherwise, these are HTTP codes.
--   
--   <i>See:</i> <a>newMatcher</a> smart constructor.
data Matcher
Matcher' :: Maybe Text -> Maybe Text -> Matcher

-- | For Application Load Balancers, you can specify values between 200 and
--   499, and the default value is 200. You can specify multiple values
--   (for example, "200,202") or a range of values (for example,
--   "200-299").
--   
--   For Network Load Balancers and Gateway Load Balancers, this must be
--   "200–399".
--   
--   Note that when using shorthand syntax, some values such as commas need
--   to be escaped.
[$sel:httpCode:Matcher'] :: Matcher -> Maybe Text

-- | You can specify values between 0 and 99. You can specify multiple
--   values (for example, "0,1") or a range of values (for example, "0-5").
--   The default value is 12.
[$sel:grpcCode:Matcher'] :: Matcher -> Maybe Text

-- | Create a value of <a>Matcher</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpCode:Matcher'</a>, <a>matcher_httpCode</a> - For
--   Application Load Balancers, you can specify values between 200 and
--   499, and the default value is 200. You can specify multiple values
--   (for example, "200,202") or a range of values (for example,
--   "200-299").
--   
--   For Network Load Balancers and Gateway Load Balancers, this must be
--   "200–399".
--   
--   Note that when using shorthand syntax, some values such as commas need
--   to be escaped.
--   
--   <a>$sel:grpcCode:Matcher'</a>, <a>matcher_grpcCode</a> - You can
--   specify values between 0 and 99. You can specify multiple values (for
--   example, "0,1") or a range of values (for example, "0-5"). The default
--   value is 12.
newMatcher :: Matcher

-- | For Application Load Balancers, you can specify values between 200 and
--   499, and the default value is 200. You can specify multiple values
--   (for example, "200,202") or a range of values (for example,
--   "200-299").
--   
--   For Network Load Balancers and Gateway Load Balancers, this must be
--   "200–399".
--   
--   Note that when using shorthand syntax, some values such as commas need
--   to be escaped.
matcher_httpCode :: Lens' Matcher (Maybe Text)

-- | You can specify values between 0 and 99. You can specify multiple
--   values (for example, "0,1") or a range of values (for example, "0-5").
--   The default value is 12.
matcher_grpcCode :: Lens' Matcher (Maybe Text)

-- | Information about a path pattern condition.
--   
--   <i>See:</i> <a>newPathPatternConditionConfig</a> smart constructor.
data PathPatternConditionConfig
PathPatternConditionConfig' :: Maybe [Text] -> PathPatternConditionConfig

-- | One or more path patterns to compare against the request URL. The
--   maximum size of each string is 128 characters. The comparison is case
--   sensitive. The following wildcard characters are supported: * (matches
--   0 or more characters) and ? (matches exactly 1 character).
--   
--   If you specify multiple strings, the condition is satisfied if one of
--   them matches the request URL. The path pattern is compared only to the
--   path of the URL, not to its query string. To compare against the query
--   string, use QueryStringConditionConfig.
[$sel:values:PathPatternConditionConfig'] :: PathPatternConditionConfig -> Maybe [Text]

-- | Create a value of <a>PathPatternConditionConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:values:PathPatternConditionConfig'</a>,
--   <a>pathPatternConditionConfig_values</a> - One or more path patterns
--   to compare against the request URL. The maximum size of each string is
--   128 characters. The comparison is case sensitive. The following
--   wildcard characters are supported: * (matches 0 or more characters)
--   and ? (matches exactly 1 character).
--   
--   If you specify multiple strings, the condition is satisfied if one of
--   them matches the request URL. The path pattern is compared only to the
--   path of the URL, not to its query string. To compare against the query
--   string, use QueryStringConditionConfig.
newPathPatternConditionConfig :: PathPatternConditionConfig

-- | One or more path patterns to compare against the request URL. The
--   maximum size of each string is 128 characters. The comparison is case
--   sensitive. The following wildcard characters are supported: * (matches
--   0 or more characters) and ? (matches exactly 1 character).
--   
--   If you specify multiple strings, the condition is satisfied if one of
--   them matches the request URL. The path pattern is compared only to the
--   path of the URL, not to its query string. To compare against the query
--   string, use QueryStringConditionConfig.
pathPatternConditionConfig_values :: Lens' PathPatternConditionConfig (Maybe [Text])

-- | Information about a query string condition.
--   
--   The query string component of a URI starts after the first '?'
--   character and is terminated by either a '#' character or the end of
--   the URI. A typical query string contains key/value pairs separated by
--   '&amp;' characters. The allowed characters are specified by RFC 3986.
--   Any character can be percentage encoded.
--   
--   <i>See:</i> <a>newQueryStringConditionConfig</a> smart constructor.
data QueryStringConditionConfig
QueryStringConditionConfig' :: Maybe [QueryStringKeyValuePair] -> QueryStringConditionConfig

-- | One or more key/value pairs or values to find in the query string. The
--   maximum size of each string is 128 characters. The comparison is case
--   insensitive. The following wildcard characters are supported: *
--   (matches 0 or more characters) and ? (matches exactly 1 character). To
--   search for a literal '*' or '?' character in a query string, you must
--   escape these characters in <tt>Values</tt> using a '\' character.
--   
--   If you specify multiple key/value pairs or values, the condition is
--   satisfied if one of them is found in the query string.
[$sel:values:QueryStringConditionConfig'] :: QueryStringConditionConfig -> Maybe [QueryStringKeyValuePair]

-- | Create a value of <a>QueryStringConditionConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:values:QueryStringConditionConfig'</a>,
--   <a>queryStringConditionConfig_values</a> - One or more key/value pairs
--   or values to find in the query string. The maximum size of each string
--   is 128 characters. The comparison is case insensitive. The following
--   wildcard characters are supported: * (matches 0 or more characters)
--   and ? (matches exactly 1 character). To search for a literal '*' or
--   '?' character in a query string, you must escape these characters in
--   <tt>Values</tt> using a '\' character.
--   
--   If you specify multiple key/value pairs or values, the condition is
--   satisfied if one of them is found in the query string.
newQueryStringConditionConfig :: QueryStringConditionConfig

-- | One or more key/value pairs or values to find in the query string. The
--   maximum size of each string is 128 characters. The comparison is case
--   insensitive. The following wildcard characters are supported: *
--   (matches 0 or more characters) and ? (matches exactly 1 character). To
--   search for a literal '*' or '?' character in a query string, you must
--   escape these characters in <tt>Values</tt> using a '\' character.
--   
--   If you specify multiple key/value pairs or values, the condition is
--   satisfied if one of them is found in the query string.
queryStringConditionConfig_values :: Lens' QueryStringConditionConfig (Maybe [QueryStringKeyValuePair])

-- | Information about a key/value pair.
--   
--   <i>See:</i> <a>newQueryStringKeyValuePair</a> smart constructor.
data QueryStringKeyValuePair
QueryStringKeyValuePair' :: Maybe Text -> Maybe Text -> QueryStringKeyValuePair

-- | The value.
[$sel:value:QueryStringKeyValuePair'] :: QueryStringKeyValuePair -> Maybe Text

-- | The key. You can omit the key.
[$sel:key:QueryStringKeyValuePair'] :: QueryStringKeyValuePair -> Maybe Text

-- | Create a value of <a>QueryStringKeyValuePair</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:QueryStringKeyValuePair'</a>,
--   <a>queryStringKeyValuePair_value</a> - The value.
--   
--   <a>$sel:key:QueryStringKeyValuePair'</a>,
--   <a>queryStringKeyValuePair_key</a> - The key. You can omit the key.
newQueryStringKeyValuePair :: QueryStringKeyValuePair

-- | The value.
queryStringKeyValuePair_value :: Lens' QueryStringKeyValuePair (Maybe Text)

-- | The key. You can omit the key.
queryStringKeyValuePair_key :: Lens' QueryStringKeyValuePair (Maybe Text)

-- | Information about a redirect action.
--   
--   A URI consists of the following components:
--   protocol://hostname:port/path?query. You must modify at least one of
--   the following components to avoid a redirect loop: protocol, hostname,
--   port, or path. Any components that you do not modify retain their
--   original values.
--   
--   You can reuse URI components using the following reserved keywords:
--   
--   <ul>
--   <li>#{protocol}</li>
--   <li>#{host}</li>
--   <li>#{port}</li>
--   <li>#{path} (the leading "/" is removed)</li>
--   <li>#{query}</li>
--   </ul>
--   
--   For example, you can change the path to "/new/#{path}", the hostname
--   to "example.#{host}", or the query to "#{query}&amp;value=xyz".
--   
--   <i>See:</i> <a>newRedirectActionConfig</a> smart constructor.
data RedirectActionConfig
RedirectActionConfig' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> RedirectActionStatusCodeEnum -> RedirectActionConfig

-- | The absolute path, starting with the leading "/". This component is
--   not percent-encoded. The path can contain #{host}, #{path}, and
--   #{port}.
[$sel:path:RedirectActionConfig'] :: RedirectActionConfig -> Maybe Text

-- | The protocol. You can specify HTTP, HTTPS, or #{protocol}. You can
--   redirect HTTP to HTTP, HTTP to HTTPS, and HTTPS to HTTPS. You cannot
--   redirect HTTPS to HTTP.
[$sel:protocol:RedirectActionConfig'] :: RedirectActionConfig -> Maybe Text

-- | The query parameters, URL-encoded when necessary, but not
--   percent-encoded. Do not include the leading "?", as it is
--   automatically added. You can specify any of the reserved keywords.
[$sel:query:RedirectActionConfig'] :: RedirectActionConfig -> Maybe Text

-- | The hostname. This component is not percent-encoded. The hostname can
--   contain #{host}.
[$sel:host:RedirectActionConfig'] :: RedirectActionConfig -> Maybe Text

-- | The port. You can specify a value from 1 to 65535 or #{port}.
[$sel:port:RedirectActionConfig'] :: RedirectActionConfig -> Maybe Text

-- | The HTTP redirect code. The redirect is either permanent (HTTP 301) or
--   temporary (HTTP 302).
[$sel:statusCode:RedirectActionConfig'] :: RedirectActionConfig -> RedirectActionStatusCodeEnum

-- | Create a value of <a>RedirectActionConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:path:RedirectActionConfig'</a>,
--   <a>redirectActionConfig_path</a> - The absolute path, starting with
--   the leading "/". This component is not percent-encoded. The path can
--   contain #{host}, #{path}, and #{port}.
--   
--   <a>$sel:protocol:RedirectActionConfig'</a>,
--   <a>redirectActionConfig_protocol</a> - The protocol. You can specify
--   HTTP, HTTPS, or #{protocol}. You can redirect HTTP to HTTP, HTTP to
--   HTTPS, and HTTPS to HTTPS. You cannot redirect HTTPS to HTTP.
--   
--   <a>$sel:query:RedirectActionConfig'</a>,
--   <a>redirectActionConfig_query</a> - The query parameters, URL-encoded
--   when necessary, but not percent-encoded. Do not include the leading
--   "?", as it is automatically added. You can specify any of the reserved
--   keywords.
--   
--   <a>$sel:host:RedirectActionConfig'</a>,
--   <a>redirectActionConfig_host</a> - The hostname. This component is not
--   percent-encoded. The hostname can contain #{host}.
--   
--   <a>$sel:port:RedirectActionConfig'</a>,
--   <a>redirectActionConfig_port</a> - The port. You can specify a value
--   from 1 to 65535 or #{port}.
--   
--   <a>$sel:statusCode:RedirectActionConfig'</a>,
--   <a>redirectActionConfig_statusCode</a> - The HTTP redirect code. The
--   redirect is either permanent (HTTP 301) or temporary (HTTP 302).
newRedirectActionConfig :: RedirectActionStatusCodeEnum -> RedirectActionConfig

-- | The absolute path, starting with the leading "/". This component is
--   not percent-encoded. The path can contain #{host}, #{path}, and
--   #{port}.
redirectActionConfig_path :: Lens' RedirectActionConfig (Maybe Text)

-- | The protocol. You can specify HTTP, HTTPS, or #{protocol}. You can
--   redirect HTTP to HTTP, HTTP to HTTPS, and HTTPS to HTTPS. You cannot
--   redirect HTTPS to HTTP.
redirectActionConfig_protocol :: Lens' RedirectActionConfig (Maybe Text)

-- | The query parameters, URL-encoded when necessary, but not
--   percent-encoded. Do not include the leading "?", as it is
--   automatically added. You can specify any of the reserved keywords.
redirectActionConfig_query :: Lens' RedirectActionConfig (Maybe Text)

-- | The hostname. This component is not percent-encoded. The hostname can
--   contain #{host}.
redirectActionConfig_host :: Lens' RedirectActionConfig (Maybe Text)

-- | The port. You can specify a value from 1 to 65535 or #{port}.
redirectActionConfig_port :: Lens' RedirectActionConfig (Maybe Text)

-- | The HTTP redirect code. The redirect is either permanent (HTTP 301) or
--   temporary (HTTP 302).
redirectActionConfig_statusCode :: Lens' RedirectActionConfig RedirectActionStatusCodeEnum

-- | Information about a rule.
--   
--   <i>See:</i> <a>newRule</a> smart constructor.
data Rule
Rule' :: Maybe Text -> Maybe [Action] -> Maybe [RuleCondition] -> Maybe Text -> Maybe Bool -> Rule

-- | The priority.
[$sel:priority:Rule'] :: Rule -> Maybe Text

-- | The actions. Each rule must include exactly one of the following types
--   of actions: <tt>forward</tt>, <tt>redirect</tt>, or
--   <tt>fixed-response</tt>, and it must be the last action to be
--   performed.
[$sel:actions:Rule'] :: Rule -> Maybe [Action]

-- | The conditions. Each rule can include zero or one of the following
--   conditions: <tt>http-request-method</tt>, <tt>host-header</tt>,
--   <tt>path-pattern</tt>, and <tt>source-ip</tt>, and zero or more of the
--   following conditions: <tt>http-header</tt> and <tt>query-string</tt>.
[$sel:conditions:Rule'] :: Rule -> Maybe [RuleCondition]

-- | The Amazon Resource Name (ARN) of the rule.
[$sel:ruleArn:Rule'] :: Rule -> Maybe Text

-- | Indicates whether this is the default rule.
[$sel:isDefault:Rule'] :: Rule -> Maybe Bool

-- | Create a value of <a>Rule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:priority:Rule'</a>, <a>rule_priority</a> - The priority.
--   
--   <a>$sel:actions:Rule'</a>, <a>rule_actions</a> - The actions. Each
--   rule must include exactly one of the following types of actions:
--   <tt>forward</tt>, <tt>redirect</tt>, or <tt>fixed-response</tt>, and
--   it must be the last action to be performed.
--   
--   <a>$sel:conditions:Rule'</a>, <a>rule_conditions</a> - The conditions.
--   Each rule can include zero or one of the following conditions:
--   <tt>http-request-method</tt>, <tt>host-header</tt>,
--   <tt>path-pattern</tt>, and <tt>source-ip</tt>, and zero or more of the
--   following conditions: <tt>http-header</tt> and <tt>query-string</tt>.
--   
--   <a>$sel:ruleArn:Rule'</a>, <a>rule_ruleArn</a> - The Amazon Resource
--   Name (ARN) of the rule.
--   
--   <a>$sel:isDefault:Rule'</a>, <a>rule_isDefault</a> - Indicates whether
--   this is the default rule.
newRule :: Rule

-- | The priority.
rule_priority :: Lens' Rule (Maybe Text)

-- | The actions. Each rule must include exactly one of the following types
--   of actions: <tt>forward</tt>, <tt>redirect</tt>, or
--   <tt>fixed-response</tt>, and it must be the last action to be
--   performed.
rule_actions :: Lens' Rule (Maybe [Action])

-- | The conditions. Each rule can include zero or one of the following
--   conditions: <tt>http-request-method</tt>, <tt>host-header</tt>,
--   <tt>path-pattern</tt>, and <tt>source-ip</tt>, and zero or more of the
--   following conditions: <tt>http-header</tt> and <tt>query-string</tt>.
rule_conditions :: Lens' Rule (Maybe [RuleCondition])

-- | The Amazon Resource Name (ARN) of the rule.
rule_ruleArn :: Lens' Rule (Maybe Text)

-- | Indicates whether this is the default rule.
rule_isDefault :: Lens' Rule (Maybe Bool)

-- | Information about a condition for a rule.
--   
--   Each rule can optionally include up to one of each of the following
--   conditions: <tt>http-request-method</tt>, <tt>host-header</tt>,
--   <tt>path-pattern</tt>, and <tt>source-ip</tt>. Each rule can also
--   optionally include one or more of each of the following conditions:
--   <tt>http-header</tt> and <tt>query-string</tt>.
--   
--   <i>See:</i> <a>newRuleCondition</a> smart constructor.
data RuleCondition
RuleCondition' :: Maybe Text -> Maybe HttpHeaderConditionConfig -> Maybe HostHeaderConditionConfig -> Maybe [Text] -> Maybe SourceIpConditionConfig -> Maybe HttpRequestMethodConditionConfig -> Maybe PathPatternConditionConfig -> Maybe QueryStringConditionConfig -> RuleCondition

-- | The field in the HTTP request. The following are the possible values:
--   
--   <ul>
--   <li><pre>http-header</pre></li>
--   <li><pre>http-request-method</pre></li>
--   <li><pre>host-header</pre></li>
--   <li><pre>path-pattern</pre></li>
--   <li><pre>query-string</pre></li>
--   <li><pre>source-ip</pre></li>
--   </ul>
[$sel:field:RuleCondition'] :: RuleCondition -> Maybe Text

-- | Information for an HTTP header condition. Specify only when
--   <tt>Field</tt> is <tt>http-header</tt>.
[$sel:httpHeaderConfig:RuleCondition'] :: RuleCondition -> Maybe HttpHeaderConditionConfig

-- | Information for a host header condition. Specify only when
--   <tt>Field</tt> is <tt>host-header</tt>.
[$sel:hostHeaderConfig:RuleCondition'] :: RuleCondition -> Maybe HostHeaderConditionConfig

-- | The condition value. Specify only when <tt>Field</tt> is
--   <tt>host-header</tt> or <tt>path-pattern</tt>. Alternatively, to
--   specify multiple host names or multiple path patterns, use
--   <tt>HostHeaderConfig</tt> or <tt>PathPatternConfig</tt>.
--   
--   If <tt>Field</tt> is <tt>host-header</tt> and you are not using
--   <tt>HostHeaderConfig</tt>, you can specify a single host name (for
--   example, my.example.com) in <tt>Values</tt>. A host name is case
--   insensitive, can be up to 128 characters in length, and can contain
--   any of the following characters.
--   
--   <ul>
--   <li>A-Z, a-z, 0-9</li>
--   <li>- .</li>
--   <li>* (matches 0 or more characters)</li>
--   <li>? (matches exactly 1 character)</li>
--   </ul>
--   
--   If <tt>Field</tt> is <tt>path-pattern</tt> and you are not using
--   <tt>PathPatternConfig</tt>, you can specify a single path pattern (for
--   example, /img/*) in <tt>Values</tt>. A path pattern is case-sensitive,
--   can be up to 128 characters in length, and can contain any of the
--   following characters.
--   
--   <ul>
--   <li>A-Z, a-z, 0-9</li>
--   <li>_ - . $ / ~ " ' @ : +</li>
--   <li>&amp; (using &amp;amp;)</li>
--   <li>* (matches 0 or more characters)</li>
--   <li>? (matches exactly 1 character)</li>
--   </ul>
[$sel:values:RuleCondition'] :: RuleCondition -> Maybe [Text]

-- | Information for a source IP condition. Specify only when
--   <tt>Field</tt> is <tt>source-ip</tt>.
[$sel:sourceIpConfig:RuleCondition'] :: RuleCondition -> Maybe SourceIpConditionConfig

-- | Information for an HTTP method condition. Specify only when
--   <tt>Field</tt> is <tt>http-request-method</tt>.
[$sel:httpRequestMethodConfig:RuleCondition'] :: RuleCondition -> Maybe HttpRequestMethodConditionConfig

-- | Information for a path pattern condition. Specify only when
--   <tt>Field</tt> is <tt>path-pattern</tt>.
[$sel:pathPatternConfig:RuleCondition'] :: RuleCondition -> Maybe PathPatternConditionConfig

-- | Information for a query string condition. Specify only when
--   <tt>Field</tt> is <tt>query-string</tt>.
[$sel:queryStringConfig:RuleCondition'] :: RuleCondition -> Maybe QueryStringConditionConfig

-- | Create a value of <a>RuleCondition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:field:RuleCondition'</a>, <a>ruleCondition_field</a> - The
--   field in the HTTP request. The following are the possible values:
--   
--   <ul>
--   <li><pre>http-header</pre></li>
--   <li><pre>http-request-method</pre></li>
--   <li><pre>host-header</pre></li>
--   <li><pre>path-pattern</pre></li>
--   <li><pre>query-string</pre></li>
--   <li><pre>source-ip</pre></li>
--   </ul>
--   
--   <a>$sel:httpHeaderConfig:RuleCondition'</a>,
--   <a>ruleCondition_httpHeaderConfig</a> - Information for an HTTP header
--   condition. Specify only when <tt>Field</tt> is <tt>http-header</tt>.
--   
--   <a>$sel:hostHeaderConfig:RuleCondition'</a>,
--   <a>ruleCondition_hostHeaderConfig</a> - Information for a host header
--   condition. Specify only when <tt>Field</tt> is <tt>host-header</tt>.
--   
--   <a>$sel:values:RuleCondition'</a>, <a>ruleCondition_values</a> - The
--   condition value. Specify only when <tt>Field</tt> is
--   <tt>host-header</tt> or <tt>path-pattern</tt>. Alternatively, to
--   specify multiple host names or multiple path patterns, use
--   <tt>HostHeaderConfig</tt> or <tt>PathPatternConfig</tt>.
--   
--   If <tt>Field</tt> is <tt>host-header</tt> and you are not using
--   <tt>HostHeaderConfig</tt>, you can specify a single host name (for
--   example, my.example.com) in <tt>Values</tt>. A host name is case
--   insensitive, can be up to 128 characters in length, and can contain
--   any of the following characters.
--   
--   <ul>
--   <li>A-Z, a-z, 0-9</li>
--   <li>- .</li>
--   <li>* (matches 0 or more characters)</li>
--   <li>? (matches exactly 1 character)</li>
--   </ul>
--   
--   If <tt>Field</tt> is <tt>path-pattern</tt> and you are not using
--   <tt>PathPatternConfig</tt>, you can specify a single path pattern (for
--   example, /img/*) in <tt>Values</tt>. A path pattern is case-sensitive,
--   can be up to 128 characters in length, and can contain any of the
--   following characters.
--   
--   <ul>
--   <li>A-Z, a-z, 0-9</li>
--   <li>_ - . $ / ~ " ' @ : +</li>
--   <li>&amp; (using &amp;amp;)</li>
--   <li>* (matches 0 or more characters)</li>
--   <li>? (matches exactly 1 character)</li>
--   </ul>
--   
--   <a>$sel:sourceIpConfig:RuleCondition'</a>,
--   <a>ruleCondition_sourceIpConfig</a> - Information for a source IP
--   condition. Specify only when <tt>Field</tt> is <tt>source-ip</tt>.
--   
--   <a>$sel:httpRequestMethodConfig:RuleCondition'</a>,
--   <a>ruleCondition_httpRequestMethodConfig</a> - Information for an HTTP
--   method condition. Specify only when <tt>Field</tt> is
--   <tt>http-request-method</tt>.
--   
--   <a>$sel:pathPatternConfig:RuleCondition'</a>,
--   <a>ruleCondition_pathPatternConfig</a> - Information for a path
--   pattern condition. Specify only when <tt>Field</tt> is
--   <tt>path-pattern</tt>.
--   
--   <a>$sel:queryStringConfig:RuleCondition'</a>,
--   <a>ruleCondition_queryStringConfig</a> - Information for a query
--   string condition. Specify only when <tt>Field</tt> is
--   <tt>query-string</tt>.
newRuleCondition :: RuleCondition

-- | The field in the HTTP request. The following are the possible values:
--   
--   <ul>
--   <li><pre>http-header</pre></li>
--   <li><pre>http-request-method</pre></li>
--   <li><pre>host-header</pre></li>
--   <li><pre>path-pattern</pre></li>
--   <li><pre>query-string</pre></li>
--   <li><pre>source-ip</pre></li>
--   </ul>
ruleCondition_field :: Lens' RuleCondition (Maybe Text)

-- | Information for an HTTP header condition. Specify only when
--   <tt>Field</tt> is <tt>http-header</tt>.
ruleCondition_httpHeaderConfig :: Lens' RuleCondition (Maybe HttpHeaderConditionConfig)

-- | Information for a host header condition. Specify only when
--   <tt>Field</tt> is <tt>host-header</tt>.
ruleCondition_hostHeaderConfig :: Lens' RuleCondition (Maybe HostHeaderConditionConfig)

-- | The condition value. Specify only when <tt>Field</tt> is
--   <tt>host-header</tt> or <tt>path-pattern</tt>. Alternatively, to
--   specify multiple host names or multiple path patterns, use
--   <tt>HostHeaderConfig</tt> or <tt>PathPatternConfig</tt>.
--   
--   If <tt>Field</tt> is <tt>host-header</tt> and you are not using
--   <tt>HostHeaderConfig</tt>, you can specify a single host name (for
--   example, my.example.com) in <tt>Values</tt>. A host name is case
--   insensitive, can be up to 128 characters in length, and can contain
--   any of the following characters.
--   
--   <ul>
--   <li>A-Z, a-z, 0-9</li>
--   <li>- .</li>
--   <li>* (matches 0 or more characters)</li>
--   <li>? (matches exactly 1 character)</li>
--   </ul>
--   
--   If <tt>Field</tt> is <tt>path-pattern</tt> and you are not using
--   <tt>PathPatternConfig</tt>, you can specify a single path pattern (for
--   example, /img/*) in <tt>Values</tt>. A path pattern is case-sensitive,
--   can be up to 128 characters in length, and can contain any of the
--   following characters.
--   
--   <ul>
--   <li>A-Z, a-z, 0-9</li>
--   <li>_ - . $ / ~ " ' @ : +</li>
--   <li>&amp; (using &amp;amp;)</li>
--   <li>* (matches 0 or more characters)</li>
--   <li>? (matches exactly 1 character)</li>
--   </ul>
ruleCondition_values :: Lens' RuleCondition (Maybe [Text])

-- | Information for a source IP condition. Specify only when
--   <tt>Field</tt> is <tt>source-ip</tt>.
ruleCondition_sourceIpConfig :: Lens' RuleCondition (Maybe SourceIpConditionConfig)

-- | Information for an HTTP method condition. Specify only when
--   <tt>Field</tt> is <tt>http-request-method</tt>.
ruleCondition_httpRequestMethodConfig :: Lens' RuleCondition (Maybe HttpRequestMethodConditionConfig)

-- | Information for a path pattern condition. Specify only when
--   <tt>Field</tt> is <tt>path-pattern</tt>.
ruleCondition_pathPatternConfig :: Lens' RuleCondition (Maybe PathPatternConditionConfig)

-- | Information for a query string condition. Specify only when
--   <tt>Field</tt> is <tt>query-string</tt>.
ruleCondition_queryStringConfig :: Lens' RuleCondition (Maybe QueryStringConditionConfig)

-- | Information about the priorities for the rules for a listener.
--   
--   <i>See:</i> <a>newRulePriorityPair</a> smart constructor.
data RulePriorityPair
RulePriorityPair' :: Maybe Natural -> Maybe Text -> RulePriorityPair

-- | The rule priority.
[$sel:priority:RulePriorityPair'] :: RulePriorityPair -> Maybe Natural

-- | The Amazon Resource Name (ARN) of the rule.
[$sel:ruleArn:RulePriorityPair'] :: RulePriorityPair -> Maybe Text

-- | Create a value of <a>RulePriorityPair</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:priority:RulePriorityPair'</a>,
--   <a>rulePriorityPair_priority</a> - The rule priority.
--   
--   <a>$sel:ruleArn:RulePriorityPair'</a>, <a>rulePriorityPair_ruleArn</a>
--   - The Amazon Resource Name (ARN) of the rule.
newRulePriorityPair :: RulePriorityPair

-- | The rule priority.
rulePriorityPair_priority :: Lens' RulePriorityPair (Maybe Natural)

-- | The Amazon Resource Name (ARN) of the rule.
rulePriorityPair_ruleArn :: Lens' RulePriorityPair (Maybe Text)

-- | Information about a source IP condition.
--   
--   You can use this condition to route based on the IP address of the
--   source that connects to the load balancer. If a client is behind a
--   proxy, this is the IP address of the proxy not the IP address of the
--   client.
--   
--   <i>See:</i> <a>newSourceIpConditionConfig</a> smart constructor.
data SourceIpConditionConfig
SourceIpConditionConfig' :: Maybe [Text] -> SourceIpConditionConfig

-- | One or more source IP addresses, in CIDR format. You can use both IPv4
--   and IPv6 addresses. Wildcards are not supported.
--   
--   If you specify multiple addresses, the condition is satisfied if the
--   source IP address of the request matches one of the CIDR blocks. This
--   condition is not satisfied by the addresses in the X-Forwarded-For
--   header. To search for addresses in the X-Forwarded-For header, use
--   HttpHeaderConditionConfig.
[$sel:values:SourceIpConditionConfig'] :: SourceIpConditionConfig -> Maybe [Text]

-- | Create a value of <a>SourceIpConditionConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:values:SourceIpConditionConfig'</a>,
--   <a>sourceIpConditionConfig_values</a> - One or more source IP
--   addresses, in CIDR format. You can use both IPv4 and IPv6 addresses.
--   Wildcards are not supported.
--   
--   If you specify multiple addresses, the condition is satisfied if the
--   source IP address of the request matches one of the CIDR blocks. This
--   condition is not satisfied by the addresses in the X-Forwarded-For
--   header. To search for addresses in the X-Forwarded-For header, use
--   HttpHeaderConditionConfig.
newSourceIpConditionConfig :: SourceIpConditionConfig

-- | One or more source IP addresses, in CIDR format. You can use both IPv4
--   and IPv6 addresses. Wildcards are not supported.
--   
--   If you specify multiple addresses, the condition is satisfied if the
--   source IP address of the request matches one of the CIDR blocks. This
--   condition is not satisfied by the addresses in the X-Forwarded-For
--   header. To search for addresses in the X-Forwarded-For header, use
--   HttpHeaderConditionConfig.
sourceIpConditionConfig_values :: Lens' SourceIpConditionConfig (Maybe [Text])

-- | Information about a policy used for SSL negotiation.
--   
--   <i>See:</i> <a>newSslPolicy</a> smart constructor.
data SslPolicy
SslPolicy' :: Maybe [Text] -> Maybe [Cipher] -> Maybe Text -> Maybe [Text] -> SslPolicy

-- | The supported load balancers.
[$sel:supportedLoadBalancerTypes:SslPolicy'] :: SslPolicy -> Maybe [Text]

-- | The ciphers.
[$sel:ciphers:SslPolicy'] :: SslPolicy -> Maybe [Cipher]

-- | The name of the policy.
[$sel:name:SslPolicy'] :: SslPolicy -> Maybe Text

-- | The protocols.
[$sel:sslProtocols:SslPolicy'] :: SslPolicy -> Maybe [Text]

-- | Create a value of <a>SslPolicy</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:supportedLoadBalancerTypes:SslPolicy'</a>,
--   <a>sslPolicy_supportedLoadBalancerTypes</a> - The supported load
--   balancers.
--   
--   <a>$sel:ciphers:SslPolicy'</a>, <a>sslPolicy_ciphers</a> - The
--   ciphers.
--   
--   <a>$sel:name:SslPolicy'</a>, <a>sslPolicy_name</a> - The name of the
--   policy.
--   
--   <a>$sel:sslProtocols:SslPolicy'</a>, <a>sslPolicy_sslProtocols</a> -
--   The protocols.
newSslPolicy :: SslPolicy

-- | The supported load balancers.
sslPolicy_supportedLoadBalancerTypes :: Lens' SslPolicy (Maybe [Text])

-- | The ciphers.
sslPolicy_ciphers :: Lens' SslPolicy (Maybe [Cipher])

-- | The name of the policy.
sslPolicy_name :: Lens' SslPolicy (Maybe Text)

-- | The protocols.
sslPolicy_sslProtocols :: Lens' SslPolicy (Maybe [Text])

-- | Information about a subnet mapping.
--   
--   <i>See:</i> <a>newSubnetMapping</a> smart constructor.
data SubnetMapping
SubnetMapping' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> SubnetMapping

-- | <ul>
--   <li><i>Network Load Balancers</i> The IPv6 address.</li>
--   </ul>
[$sel:iPv6Address:SubnetMapping'] :: SubnetMapping -> Maybe Text

-- | <ul>
--   <li><i>Network Load Balancers</i> The allocation ID of the Elastic IP
--   address for an internet-facing load balancer.</li>
--   </ul>
[$sel:allocationId:SubnetMapping'] :: SubnetMapping -> Maybe Text

-- | <ul>
--   <li><i>Network Load Balancers</i> The private IPv4 address for an
--   internal load balancer.</li>
--   </ul>
[$sel:privateIPv4Address:SubnetMapping'] :: SubnetMapping -> Maybe Text

-- | The ID of the subnet.
[$sel:subnetId:SubnetMapping'] :: SubnetMapping -> Maybe Text

-- | Create a value of <a>SubnetMapping</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:iPv6Address:SubnetMapping'</a>,
--   <a>subnetMapping_iPv6Address</a> - [Network Load Balancers] The IPv6
--   address.
--   
--   <a>$sel:allocationId:SubnetMapping'</a>,
--   <a>subnetMapping_allocationId</a> - [Network Load Balancers] The
--   allocation ID of the Elastic IP address for an internet-facing load
--   balancer.
--   
--   <a>$sel:privateIPv4Address:SubnetMapping'</a>,
--   <a>subnetMapping_privateIPv4Address</a> - [Network Load Balancers] The
--   private IPv4 address for an internal load balancer.
--   
--   <a>$sel:subnetId:SubnetMapping'</a>, <a>subnetMapping_subnetId</a> -
--   The ID of the subnet.
newSubnetMapping :: SubnetMapping

-- | <ul>
--   <li><i>Network Load Balancers</i> The IPv6 address.</li>
--   </ul>
subnetMapping_iPv6Address :: Lens' SubnetMapping (Maybe Text)

-- | <ul>
--   <li><i>Network Load Balancers</i> The allocation ID of the Elastic IP
--   address for an internet-facing load balancer.</li>
--   </ul>
subnetMapping_allocationId :: Lens' SubnetMapping (Maybe Text)

-- | <ul>
--   <li><i>Network Load Balancers</i> The private IPv4 address for an
--   internal load balancer.</li>
--   </ul>
subnetMapping_privateIPv4Address :: Lens' SubnetMapping (Maybe Text)

-- | The ID of the subnet.
subnetMapping_subnetId :: Lens' SubnetMapping (Maybe Text)

-- | Information about a tag.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Maybe Text -> Text -> Tag

-- | The value of the tag.
[$sel:value:Tag'] :: Tag -> Maybe Text

-- | The key of the tag.
[$sel:key:Tag'] :: Tag -> Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The value of the tag.
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The key of the tag.
newTag :: Text -> Tag

-- | The value of the tag.
tag_value :: Lens' Tag (Maybe Text)

-- | The key of the tag.
tag_key :: Lens' Tag Text

-- | The tags associated with a resource.
--   
--   <i>See:</i> <a>newTagDescription</a> smart constructor.
data TagDescription
TagDescription' :: Maybe Text -> Maybe (NonEmpty Tag) -> TagDescription

-- | The Amazon Resource Name (ARN) of the resource.
[$sel:resourceArn:TagDescription'] :: TagDescription -> Maybe Text

-- | Information about the tags.
[$sel:tags:TagDescription'] :: TagDescription -> Maybe (NonEmpty Tag)

-- | Create a value of <a>TagDescription</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagDescription'</a>,
--   <a>tagDescription_resourceArn</a> - The Amazon Resource Name (ARN) of
--   the resource.
--   
--   <a>$sel:tags:TagDescription'</a>, <a>tagDescription_tags</a> -
--   Information about the tags.
newTagDescription :: TagDescription

-- | The Amazon Resource Name (ARN) of the resource.
tagDescription_resourceArn :: Lens' TagDescription (Maybe Text)

-- | Information about the tags.
tagDescription_tags :: Lens' TagDescription (Maybe (NonEmpty Tag))

-- | Information about a target.
--   
--   <i>See:</i> <a>newTargetDescription</a> smart constructor.
data TargetDescription
TargetDescription' :: Maybe Text -> Maybe Natural -> Text -> TargetDescription

-- | An Availability Zone or <tt>all</tt>. This determines whether the
--   target receives traffic from the load balancer nodes in the specified
--   Availability Zone or from all enabled Availability Zones for the load
--   balancer.
--   
--   This parameter is not supported if the target type of the target group
--   is <tt>instance</tt> or <tt>alb</tt>.
--   
--   If the target type is <tt>ip</tt> and the IP address is in a subnet of
--   the VPC for the target group, the Availability Zone is automatically
--   detected and this parameter is optional. If the IP address is outside
--   the VPC, this parameter is required.
--   
--   With an Application Load Balancer, if the target type is <tt>ip</tt>
--   and the IP address is outside the VPC for the target group, the only
--   supported value is <tt>all</tt>.
--   
--   If the target type is <tt>lambda</tt>, this parameter is optional and
--   the only supported value is <tt>all</tt>.
[$sel:availabilityZone:TargetDescription'] :: TargetDescription -> Maybe Text

-- | The port on which the target is listening. If the target group
--   protocol is GENEVE, the supported port is 6081. If the target type is
--   <tt>alb</tt>, the targeted Application Load Balancer must have at
--   least one listener whose port matches the target group port. Not used
--   if the target is a Lambda function.
[$sel:port:TargetDescription'] :: TargetDescription -> Maybe Natural

-- | The ID of the target. If the target type of the target group is
--   <tt>instance</tt>, specify an instance ID. If the target type is
--   <tt>ip</tt>, specify an IP address. If the target type is
--   <tt>lambda</tt>, specify the ARN of the Lambda function. If the target
--   type is <tt>alb</tt>, specify the ARN of the Application Load Balancer
--   target.
[$sel:id:TargetDescription'] :: TargetDescription -> Text

-- | Create a value of <a>TargetDescription</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:availabilityZone:TargetDescription'</a>,
--   <a>targetDescription_availabilityZone</a> - An Availability Zone or
--   <tt>all</tt>. This determines whether the target receives traffic from
--   the load balancer nodes in the specified Availability Zone or from all
--   enabled Availability Zones for the load balancer.
--   
--   This parameter is not supported if the target type of the target group
--   is <tt>instance</tt> or <tt>alb</tt>.
--   
--   If the target type is <tt>ip</tt> and the IP address is in a subnet of
--   the VPC for the target group, the Availability Zone is automatically
--   detected and this parameter is optional. If the IP address is outside
--   the VPC, this parameter is required.
--   
--   With an Application Load Balancer, if the target type is <tt>ip</tt>
--   and the IP address is outside the VPC for the target group, the only
--   supported value is <tt>all</tt>.
--   
--   If the target type is <tt>lambda</tt>, this parameter is optional and
--   the only supported value is <tt>all</tt>.
--   
--   <a>$sel:port:TargetDescription'</a>, <a>targetDescription_port</a> -
--   The port on which the target is listening. If the target group
--   protocol is GENEVE, the supported port is 6081. If the target type is
--   <tt>alb</tt>, the targeted Application Load Balancer must have at
--   least one listener whose port matches the target group port. Not used
--   if the target is a Lambda function.
--   
--   <a>$sel:id:TargetDescription'</a>, <a>targetDescription_id</a> - The
--   ID of the target. If the target type of the target group is
--   <tt>instance</tt>, specify an instance ID. If the target type is
--   <tt>ip</tt>, specify an IP address. If the target type is
--   <tt>lambda</tt>, specify the ARN of the Lambda function. If the target
--   type is <tt>alb</tt>, specify the ARN of the Application Load Balancer
--   target.
newTargetDescription :: Text -> TargetDescription

-- | An Availability Zone or <tt>all</tt>. This determines whether the
--   target receives traffic from the load balancer nodes in the specified
--   Availability Zone or from all enabled Availability Zones for the load
--   balancer.
--   
--   This parameter is not supported if the target type of the target group
--   is <tt>instance</tt> or <tt>alb</tt>.
--   
--   If the target type is <tt>ip</tt> and the IP address is in a subnet of
--   the VPC for the target group, the Availability Zone is automatically
--   detected and this parameter is optional. If the IP address is outside
--   the VPC, this parameter is required.
--   
--   With an Application Load Balancer, if the target type is <tt>ip</tt>
--   and the IP address is outside the VPC for the target group, the only
--   supported value is <tt>all</tt>.
--   
--   If the target type is <tt>lambda</tt>, this parameter is optional and
--   the only supported value is <tt>all</tt>.
targetDescription_availabilityZone :: Lens' TargetDescription (Maybe Text)

-- | The port on which the target is listening. If the target group
--   protocol is GENEVE, the supported port is 6081. If the target type is
--   <tt>alb</tt>, the targeted Application Load Balancer must have at
--   least one listener whose port matches the target group port. Not used
--   if the target is a Lambda function.
targetDescription_port :: Lens' TargetDescription (Maybe Natural)

-- | The ID of the target. If the target type of the target group is
--   <tt>instance</tt>, specify an instance ID. If the target type is
--   <tt>ip</tt>, specify an IP address. If the target type is
--   <tt>lambda</tt>, specify the ARN of the Lambda function. If the target
--   type is <tt>alb</tt>, specify the ARN of the Application Load Balancer
--   target.
targetDescription_id :: Lens' TargetDescription Text

-- | Information about a target group.
--   
--   <i>See:</i> <a>newTargetGroup</a> smart constructor.
data TargetGroup
TargetGroup' :: Maybe Text -> Maybe Matcher -> Maybe Text -> Maybe Bool -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe ProtocolEnum -> Maybe Natural -> Maybe TargetTypeEnum -> Maybe Natural -> Maybe ProtocolEnum -> Maybe [Text] -> Maybe TargetGroupIpAddressTypeEnum -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Natural -> TargetGroup

-- | <ul>
--   <li><i>HTTP/HTTPS protocol</i> The protocol version. The possible
--   values are <tt>GRPC</tt>, <tt>HTTP1</tt>, and <tt>HTTP2</tt>.</li>
--   </ul>
[$sel:protocolVersion:TargetGroup'] :: TargetGroup -> Maybe Text

-- | The HTTP or gRPC codes to use when checking for a successful response
--   from a target.
[$sel:matcher:TargetGroup'] :: TargetGroup -> Maybe Matcher

-- | The destination for health checks on the targets.
[$sel:healthCheckPath:TargetGroup'] :: TargetGroup -> Maybe Text

-- | Indicates whether health checks are enabled.
[$sel:healthCheckEnabled:TargetGroup'] :: TargetGroup -> Maybe Bool

-- | The number of consecutive health check failures required before
--   considering the target unhealthy.
[$sel:unhealthyThresholdCount:TargetGroup'] :: TargetGroup -> Maybe Natural

-- | The ID of the VPC for the targets.
[$sel:vpcId:TargetGroup'] :: TargetGroup -> Maybe Text

-- | The Amazon Resource Name (ARN) of the target group.
[$sel:targetGroupArn:TargetGroup'] :: TargetGroup -> Maybe Text

-- | The protocol to use for routing traffic to the targets.
[$sel:protocol:TargetGroup'] :: TargetGroup -> Maybe ProtocolEnum

-- | The approximate amount of time, in seconds, between health checks of
--   an individual target.
[$sel:healthCheckIntervalSeconds:TargetGroup'] :: TargetGroup -> Maybe Natural

-- | The type of target that you must specify when registering targets with
--   this target group. The possible values are <tt>instance</tt> (register
--   targets by instance ID), <tt>ip</tt> (register targets by IP address),
--   <tt>lambda</tt> (register a single Lambda function as a target), or
--   <tt>alb</tt> (register a single Application Load Balancer as a
--   target).
[$sel:targetType:TargetGroup'] :: TargetGroup -> Maybe TargetTypeEnum

-- | The number of consecutive health checks successes required before
--   considering an unhealthy target healthy.
[$sel:healthyThresholdCount:TargetGroup'] :: TargetGroup -> Maybe Natural

-- | The protocol to use to connect with the target. The GENEVE, TLS, UDP,
--   and TCP_UDP protocols are not supported for health checks.
[$sel:healthCheckProtocol:TargetGroup'] :: TargetGroup -> Maybe ProtocolEnum

-- | The Amazon Resource Names (ARN) of the load balancers that route
--   traffic to this target group.
[$sel:loadBalancerArns:TargetGroup'] :: TargetGroup -> Maybe [Text]

-- | The type of IP address used for this target group. The possible values
--   are <tt>ipv4</tt> and <tt>ipv6</tt>. This is an optional parameter. If
--   not specified, the IP address type defaults to <tt>ipv4</tt>.
[$sel:ipAddressType:TargetGroup'] :: TargetGroup -> Maybe TargetGroupIpAddressTypeEnum

-- | The amount of time, in seconds, during which no response means a
--   failed health check.
[$sel:healthCheckTimeoutSeconds:TargetGroup'] :: TargetGroup -> Maybe Natural

-- | The port to use to connect with the target.
[$sel:healthCheckPort:TargetGroup'] :: TargetGroup -> Maybe Text

-- | The name of the target group.
[$sel:targetGroupName:TargetGroup'] :: TargetGroup -> Maybe Text

-- | The port on which the targets are listening. Not used if the target is
--   a Lambda function.
[$sel:port:TargetGroup'] :: TargetGroup -> Maybe Natural

-- | Create a value of <a>TargetGroup</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:protocolVersion:TargetGroup'</a>,
--   <a>targetGroup_protocolVersion</a> - [HTTP/HTTPS protocol] The
--   protocol version. The possible values are <tt>GRPC</tt>,
--   <tt>HTTP1</tt>, and <tt>HTTP2</tt>.
--   
--   <a>$sel:matcher:TargetGroup'</a>, <a>targetGroup_matcher</a> - The
--   HTTP or gRPC codes to use when checking for a successful response from
--   a target.
--   
--   <a>$sel:healthCheckPath:TargetGroup'</a>,
--   <a>targetGroup_healthCheckPath</a> - The destination for health checks
--   on the targets.
--   
--   <a>$sel:healthCheckEnabled:TargetGroup'</a>,
--   <a>targetGroup_healthCheckEnabled</a> - Indicates whether health
--   checks are enabled.
--   
--   <a>$sel:unhealthyThresholdCount:TargetGroup'</a>,
--   <a>targetGroup_unhealthyThresholdCount</a> - The number of consecutive
--   health check failures required before considering the target
--   unhealthy.
--   
--   <a>$sel:vpcId:TargetGroup'</a>, <a>targetGroup_vpcId</a> - The ID of
--   the VPC for the targets.
--   
--   <a>$sel:targetGroupArn:TargetGroup'</a>,
--   <a>targetGroup_targetGroupArn</a> - The Amazon Resource Name (ARN) of
--   the target group.
--   
--   <a>$sel:protocol:TargetGroup'</a>, <a>targetGroup_protocol</a> - The
--   protocol to use for routing traffic to the targets.
--   
--   <a>$sel:healthCheckIntervalSeconds:TargetGroup'</a>,
--   <a>targetGroup_healthCheckIntervalSeconds</a> - The approximate amount
--   of time, in seconds, between health checks of an individual target.
--   
--   <a>$sel:targetType:TargetGroup'</a>, <a>targetGroup_targetType</a> -
--   The type of target that you must specify when registering targets with
--   this target group. The possible values are <tt>instance</tt> (register
--   targets by instance ID), <tt>ip</tt> (register targets by IP address),
--   <tt>lambda</tt> (register a single Lambda function as a target), or
--   <tt>alb</tt> (register a single Application Load Balancer as a
--   target).
--   
--   <a>$sel:healthyThresholdCount:TargetGroup'</a>,
--   <a>targetGroup_healthyThresholdCount</a> - The number of consecutive
--   health checks successes required before considering an unhealthy
--   target healthy.
--   
--   <a>$sel:healthCheckProtocol:TargetGroup'</a>,
--   <a>targetGroup_healthCheckProtocol</a> - The protocol to use to
--   connect with the target. The GENEVE, TLS, UDP, and TCP_UDP protocols
--   are not supported for health checks.
--   
--   <a>$sel:loadBalancerArns:TargetGroup'</a>,
--   <a>targetGroup_loadBalancerArns</a> - The Amazon Resource Names (ARN)
--   of the load balancers that route traffic to this target group.
--   
--   <a>$sel:ipAddressType:TargetGroup'</a>,
--   <a>targetGroup_ipAddressType</a> - The type of IP address used for
--   this target group. The possible values are <tt>ipv4</tt> and
--   <tt>ipv6</tt>. This is an optional parameter. If not specified, the IP
--   address type defaults to <tt>ipv4</tt>.
--   
--   <a>$sel:healthCheckTimeoutSeconds:TargetGroup'</a>,
--   <a>targetGroup_healthCheckTimeoutSeconds</a> - The amount of time, in
--   seconds, during which no response means a failed health check.
--   
--   <a>$sel:healthCheckPort:TargetGroup'</a>,
--   <a>targetGroup_healthCheckPort</a> - The port to use to connect with
--   the target.
--   
--   <a>$sel:targetGroupName:TargetGroup'</a>,
--   <a>targetGroup_targetGroupName</a> - The name of the target group.
--   
--   <a>$sel:port:TargetGroup'</a>, <a>targetGroup_port</a> - The port on
--   which the targets are listening. Not used if the target is a Lambda
--   function.
newTargetGroup :: TargetGroup

-- | <ul>
--   <li><i>HTTP/HTTPS protocol</i> The protocol version. The possible
--   values are <tt>GRPC</tt>, <tt>HTTP1</tt>, and <tt>HTTP2</tt>.</li>
--   </ul>
targetGroup_protocolVersion :: Lens' TargetGroup (Maybe Text)

-- | The HTTP or gRPC codes to use when checking for a successful response
--   from a target.
targetGroup_matcher :: Lens' TargetGroup (Maybe Matcher)

-- | The destination for health checks on the targets.
targetGroup_healthCheckPath :: Lens' TargetGroup (Maybe Text)

-- | Indicates whether health checks are enabled.
targetGroup_healthCheckEnabled :: Lens' TargetGroup (Maybe Bool)

-- | The number of consecutive health check failures required before
--   considering the target unhealthy.
targetGroup_unhealthyThresholdCount :: Lens' TargetGroup (Maybe Natural)

-- | The ID of the VPC for the targets.
targetGroup_vpcId :: Lens' TargetGroup (Maybe Text)

-- | The Amazon Resource Name (ARN) of the target group.
targetGroup_targetGroupArn :: Lens' TargetGroup (Maybe Text)

-- | The protocol to use for routing traffic to the targets.
targetGroup_protocol :: Lens' TargetGroup (Maybe ProtocolEnum)

-- | The approximate amount of time, in seconds, between health checks of
--   an individual target.
targetGroup_healthCheckIntervalSeconds :: Lens' TargetGroup (Maybe Natural)

-- | The type of target that you must specify when registering targets with
--   this target group. The possible values are <tt>instance</tt> (register
--   targets by instance ID), <tt>ip</tt> (register targets by IP address),
--   <tt>lambda</tt> (register a single Lambda function as a target), or
--   <tt>alb</tt> (register a single Application Load Balancer as a
--   target).
targetGroup_targetType :: Lens' TargetGroup (Maybe TargetTypeEnum)

-- | The number of consecutive health checks successes required before
--   considering an unhealthy target healthy.
targetGroup_healthyThresholdCount :: Lens' TargetGroup (Maybe Natural)

-- | The protocol to use to connect with the target. The GENEVE, TLS, UDP,
--   and TCP_UDP protocols are not supported for health checks.
targetGroup_healthCheckProtocol :: Lens' TargetGroup (Maybe ProtocolEnum)

-- | The Amazon Resource Names (ARN) of the load balancers that route
--   traffic to this target group.
targetGroup_loadBalancerArns :: Lens' TargetGroup (Maybe [Text])

-- | The type of IP address used for this target group. The possible values
--   are <tt>ipv4</tt> and <tt>ipv6</tt>. This is an optional parameter. If
--   not specified, the IP address type defaults to <tt>ipv4</tt>.
targetGroup_ipAddressType :: Lens' TargetGroup (Maybe TargetGroupIpAddressTypeEnum)

-- | The amount of time, in seconds, during which no response means a
--   failed health check.
targetGroup_healthCheckTimeoutSeconds :: Lens' TargetGroup (Maybe Natural)

-- | The port to use to connect with the target.
targetGroup_healthCheckPort :: Lens' TargetGroup (Maybe Text)

-- | The name of the target group.
targetGroup_targetGroupName :: Lens' TargetGroup (Maybe Text)

-- | The port on which the targets are listening. Not used if the target is
--   a Lambda function.
targetGroup_port :: Lens' TargetGroup (Maybe Natural)

-- | Information about a target group attribute.
--   
--   <i>See:</i> <a>newTargetGroupAttribute</a> smart constructor.
data TargetGroupAttribute
TargetGroupAttribute' :: Maybe Text -> Maybe Text -> TargetGroupAttribute

-- | The value of the attribute.
[$sel:value:TargetGroupAttribute'] :: TargetGroupAttribute -> Maybe Text

-- | The name of the attribute.
--   
--   The following attribute is supported by all load balancers:
--   
--   <ul>
--   <li><tt>deregistration_delay.timeout_seconds</tt> - The amount of
--   time, in seconds, for Elastic Load Balancing to wait before changing
--   the state of a deregistering target from <tt>draining</tt> to
--   <tt>unused</tt>. The range is 0-3600 seconds. The default value is 300
--   seconds. If the target is a Lambda function, this attribute is not
--   supported.</li>
--   </ul>
--   
--   The following attributes are supported by both Application Load
--   Balancers and Network Load Balancers:
--   
--   <ul>
--   <li><tt>stickiness.enabled</tt> - Indicates whether sticky sessions
--   are enabled. The value is <tt>true</tt> or <tt>false</tt>. The default
--   is <tt>false</tt>.</li>
--   <li><tt>stickiness.type</tt> - The type of sticky sessions. The
--   possible values are <tt>lb_cookie</tt> and <tt>app_cookie</tt> for
--   Application Load Balancers or <tt>source_ip</tt> for Network Load
--   Balancers.</li>
--   </ul>
--   
--   The following attributes are supported only if the load balancer is an
--   Application Load Balancer and the target is an instance or an IP
--   address:
--   
--   <ul>
--   <li><tt>load_balancing.algorithm.type</tt> - The load balancing
--   algorithm determines how the load balancer selects targets when
--   routing requests. The value is <tt>round_robin</tt> or
--   <tt>least_outstanding_requests</tt>. The default is
--   <tt>round_robin</tt>.</li>
--   <li><tt>slow_start.duration_seconds</tt> - The time period, in
--   seconds, during which a newly registered target receives an increasing
--   share of the traffic to the target group. After this time period ends,
--   the target receives its full share of traffic. The range is 30-900
--   seconds (15 minutes). The default is 0 seconds (disabled).</li>
--   <li><tt>stickiness.app_cookie.cookie_name</tt> - Indicates the name of
--   the application-based cookie. Names that start with the following
--   prefixes are not allowed: <tt>AWSALB</tt>, <tt>AWSALBAPP</tt>, and
--   <tt>AWSALBTG</tt>; they're reserved for use by the load balancer.</li>
--   <li><tt>stickiness.app_cookie.duration_seconds</tt> - The time period,
--   in seconds, during which requests from a client should be routed to
--   the same target. After this time period expires, the application-based
--   cookie is considered stale. The range is 1 second to 1 week (604800
--   seconds). The default value is 1 day (86400 seconds).</li>
--   <li><tt>stickiness.lb_cookie.duration_seconds</tt> - The time period,
--   in seconds, during which requests from a client should be routed to
--   the same target. After this time period expires, the load
--   balancer-generated cookie is considered stale. The range is 1 second
--   to 1 week (604800 seconds). The default value is 1 day (86400
--   seconds).</li>
--   </ul>
--   
--   The following attribute is supported only if the load balancer is an
--   Application Load Balancer and the target is a Lambda function:
--   
--   <ul>
--   <li><tt>lambda.multi_value_headers.enabled</tt> - Indicates whether
--   the request and response headers that are exchanged between the load
--   balancer and the Lambda function include arrays of values or strings.
--   The value is <tt>true</tt> or <tt>false</tt>. The default is
--   <tt>false</tt>. If the value is <tt>false</tt> and the request
--   contains a duplicate header field name or query parameter key, the
--   load balancer uses the last value sent by the client.</li>
--   </ul>
--   
--   The following attributes are supported only by Network Load Balancers:
--   
--   <ul>
--   <li><tt>deregistration_delay.connection_termination.enabled</tt> -
--   Indicates whether the load balancer terminates connections at the end
--   of the deregistration timeout. The value is <tt>true</tt> or
--   <tt>false</tt>. The default is <tt>false</tt>.</li>
--   <li><tt>preserve_client_ip.enabled</tt> - Indicates whether client IP
--   preservation is enabled. The value is <tt>true</tt> or <tt>false</tt>.
--   The default is disabled if the target group type is IP address and the
--   target group protocol is TCP or TLS. Otherwise, the default is
--   enabled. Client IP preservation cannot be disabled for UDP and TCP_UDP
--   target groups.</li>
--   <li><tt>proxy_protocol_v2.enabled</tt> - Indicates whether Proxy
--   Protocol version 2 is enabled. The value is <tt>true</tt> or
--   <tt>false</tt>. The default is <tt>false</tt>.</li>
--   </ul>
[$sel:key:TargetGroupAttribute'] :: TargetGroupAttribute -> Maybe Text

-- | Create a value of <a>TargetGroupAttribute</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:TargetGroupAttribute'</a>,
--   <a>targetGroupAttribute_value</a> - The value of the attribute.
--   
--   <a>$sel:key:TargetGroupAttribute'</a>, <a>targetGroupAttribute_key</a>
--   - The name of the attribute.
--   
--   The following attribute is supported by all load balancers:
--   
--   <ul>
--   <li><tt>deregistration_delay.timeout_seconds</tt> - The amount of
--   time, in seconds, for Elastic Load Balancing to wait before changing
--   the state of a deregistering target from <tt>draining</tt> to
--   <tt>unused</tt>. The range is 0-3600 seconds. The default value is 300
--   seconds. If the target is a Lambda function, this attribute is not
--   supported.</li>
--   </ul>
--   
--   The following attributes are supported by both Application Load
--   Balancers and Network Load Balancers:
--   
--   <ul>
--   <li><tt>stickiness.enabled</tt> - Indicates whether sticky sessions
--   are enabled. The value is <tt>true</tt> or <tt>false</tt>. The default
--   is <tt>false</tt>.</li>
--   <li><tt>stickiness.type</tt> - The type of sticky sessions. The
--   possible values are <tt>lb_cookie</tt> and <tt>app_cookie</tt> for
--   Application Load Balancers or <tt>source_ip</tt> for Network Load
--   Balancers.</li>
--   </ul>
--   
--   The following attributes are supported only if the load balancer is an
--   Application Load Balancer and the target is an instance or an IP
--   address:
--   
--   <ul>
--   <li><tt>load_balancing.algorithm.type</tt> - The load balancing
--   algorithm determines how the load balancer selects targets when
--   routing requests. The value is <tt>round_robin</tt> or
--   <tt>least_outstanding_requests</tt>. The default is
--   <tt>round_robin</tt>.</li>
--   <li><tt>slow_start.duration_seconds</tt> - The time period, in
--   seconds, during which a newly registered target receives an increasing
--   share of the traffic to the target group. After this time period ends,
--   the target receives its full share of traffic. The range is 30-900
--   seconds (15 minutes). The default is 0 seconds (disabled).</li>
--   <li><tt>stickiness.app_cookie.cookie_name</tt> - Indicates the name of
--   the application-based cookie. Names that start with the following
--   prefixes are not allowed: <tt>AWSALB</tt>, <tt>AWSALBAPP</tt>, and
--   <tt>AWSALBTG</tt>; they're reserved for use by the load balancer.</li>
--   <li><tt>stickiness.app_cookie.duration_seconds</tt> - The time period,
--   in seconds, during which requests from a client should be routed to
--   the same target. After this time period expires, the application-based
--   cookie is considered stale. The range is 1 second to 1 week (604800
--   seconds). The default value is 1 day (86400 seconds).</li>
--   <li><tt>stickiness.lb_cookie.duration_seconds</tt> - The time period,
--   in seconds, during which requests from a client should be routed to
--   the same target. After this time period expires, the load
--   balancer-generated cookie is considered stale. The range is 1 second
--   to 1 week (604800 seconds). The default value is 1 day (86400
--   seconds).</li>
--   </ul>
--   
--   The following attribute is supported only if the load balancer is an
--   Application Load Balancer and the target is a Lambda function:
--   
--   <ul>
--   <li><tt>lambda.multi_value_headers.enabled</tt> - Indicates whether
--   the request and response headers that are exchanged between the load
--   balancer and the Lambda function include arrays of values or strings.
--   The value is <tt>true</tt> or <tt>false</tt>. The default is
--   <tt>false</tt>. If the value is <tt>false</tt> and the request
--   contains a duplicate header field name or query parameter key, the
--   load balancer uses the last value sent by the client.</li>
--   </ul>
--   
--   The following attributes are supported only by Network Load Balancers:
--   
--   <ul>
--   <li><tt>deregistration_delay.connection_termination.enabled</tt> -
--   Indicates whether the load balancer terminates connections at the end
--   of the deregistration timeout. The value is <tt>true</tt> or
--   <tt>false</tt>. The default is <tt>false</tt>.</li>
--   <li><tt>preserve_client_ip.enabled</tt> - Indicates whether client IP
--   preservation is enabled. The value is <tt>true</tt> or <tt>false</tt>.
--   The default is disabled if the target group type is IP address and the
--   target group protocol is TCP or TLS. Otherwise, the default is
--   enabled. Client IP preservation cannot be disabled for UDP and TCP_UDP
--   target groups.</li>
--   <li><tt>proxy_protocol_v2.enabled</tt> - Indicates whether Proxy
--   Protocol version 2 is enabled. The value is <tt>true</tt> or
--   <tt>false</tt>. The default is <tt>false</tt>.</li>
--   </ul>
newTargetGroupAttribute :: TargetGroupAttribute

-- | The value of the attribute.
targetGroupAttribute_value :: Lens' TargetGroupAttribute (Maybe Text)

-- | The name of the attribute.
--   
--   The following attribute is supported by all load balancers:
--   
--   <ul>
--   <li><tt>deregistration_delay.timeout_seconds</tt> - The amount of
--   time, in seconds, for Elastic Load Balancing to wait before changing
--   the state of a deregistering target from <tt>draining</tt> to
--   <tt>unused</tt>. The range is 0-3600 seconds. The default value is 300
--   seconds. If the target is a Lambda function, this attribute is not
--   supported.</li>
--   </ul>
--   
--   The following attributes are supported by both Application Load
--   Balancers and Network Load Balancers:
--   
--   <ul>
--   <li><tt>stickiness.enabled</tt> - Indicates whether sticky sessions
--   are enabled. The value is <tt>true</tt> or <tt>false</tt>. The default
--   is <tt>false</tt>.</li>
--   <li><tt>stickiness.type</tt> - The type of sticky sessions. The
--   possible values are <tt>lb_cookie</tt> and <tt>app_cookie</tt> for
--   Application Load Balancers or <tt>source_ip</tt> for Network Load
--   Balancers.</li>
--   </ul>
--   
--   The following attributes are supported only if the load balancer is an
--   Application Load Balancer and the target is an instance or an IP
--   address:
--   
--   <ul>
--   <li><tt>load_balancing.algorithm.type</tt> - The load balancing
--   algorithm determines how the load balancer selects targets when
--   routing requests. The value is <tt>round_robin</tt> or
--   <tt>least_outstanding_requests</tt>. The default is
--   <tt>round_robin</tt>.</li>
--   <li><tt>slow_start.duration_seconds</tt> - The time period, in
--   seconds, during which a newly registered target receives an increasing
--   share of the traffic to the target group. After this time period ends,
--   the target receives its full share of traffic. The range is 30-900
--   seconds (15 minutes). The default is 0 seconds (disabled).</li>
--   <li><tt>stickiness.app_cookie.cookie_name</tt> - Indicates the name of
--   the application-based cookie. Names that start with the following
--   prefixes are not allowed: <tt>AWSALB</tt>, <tt>AWSALBAPP</tt>, and
--   <tt>AWSALBTG</tt>; they're reserved for use by the load balancer.</li>
--   <li><tt>stickiness.app_cookie.duration_seconds</tt> - The time period,
--   in seconds, during which requests from a client should be routed to
--   the same target. After this time period expires, the application-based
--   cookie is considered stale. The range is 1 second to 1 week (604800
--   seconds). The default value is 1 day (86400 seconds).</li>
--   <li><tt>stickiness.lb_cookie.duration_seconds</tt> - The time period,
--   in seconds, during which requests from a client should be routed to
--   the same target. After this time period expires, the load
--   balancer-generated cookie is considered stale. The range is 1 second
--   to 1 week (604800 seconds). The default value is 1 day (86400
--   seconds).</li>
--   </ul>
--   
--   The following attribute is supported only if the load balancer is an
--   Application Load Balancer and the target is a Lambda function:
--   
--   <ul>
--   <li><tt>lambda.multi_value_headers.enabled</tt> - Indicates whether
--   the request and response headers that are exchanged between the load
--   balancer and the Lambda function include arrays of values or strings.
--   The value is <tt>true</tt> or <tt>false</tt>. The default is
--   <tt>false</tt>. If the value is <tt>false</tt> and the request
--   contains a duplicate header field name or query parameter key, the
--   load balancer uses the last value sent by the client.</li>
--   </ul>
--   
--   The following attributes are supported only by Network Load Balancers:
--   
--   <ul>
--   <li><tt>deregistration_delay.connection_termination.enabled</tt> -
--   Indicates whether the load balancer terminates connections at the end
--   of the deregistration timeout. The value is <tt>true</tt> or
--   <tt>false</tt>. The default is <tt>false</tt>.</li>
--   <li><tt>preserve_client_ip.enabled</tt> - Indicates whether client IP
--   preservation is enabled. The value is <tt>true</tt> or <tt>false</tt>.
--   The default is disabled if the target group type is IP address and the
--   target group protocol is TCP or TLS. Otherwise, the default is
--   enabled. Client IP preservation cannot be disabled for UDP and TCP_UDP
--   target groups.</li>
--   <li><tt>proxy_protocol_v2.enabled</tt> - Indicates whether Proxy
--   Protocol version 2 is enabled. The value is <tt>true</tt> or
--   <tt>false</tt>. The default is <tt>false</tt>.</li>
--   </ul>
targetGroupAttribute_key :: Lens' TargetGroupAttribute (Maybe Text)

-- | Information about the target group stickiness for a rule.
--   
--   <i>See:</i> <a>newTargetGroupStickinessConfig</a> smart constructor.
data TargetGroupStickinessConfig
TargetGroupStickinessConfig' :: Maybe Bool -> Maybe Int -> TargetGroupStickinessConfig

-- | Indicates whether target group stickiness is enabled.
[$sel:enabled:TargetGroupStickinessConfig'] :: TargetGroupStickinessConfig -> Maybe Bool

-- | The time period, in seconds, during which requests from a client
--   should be routed to the same target group. The range is 1-604800
--   seconds (7 days).
[$sel:durationSeconds:TargetGroupStickinessConfig'] :: TargetGroupStickinessConfig -> Maybe Int

-- | Create a value of <a>TargetGroupStickinessConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabled:TargetGroupStickinessConfig'</a>,
--   <a>targetGroupStickinessConfig_enabled</a> - Indicates whether target
--   group stickiness is enabled.
--   
--   <a>$sel:durationSeconds:TargetGroupStickinessConfig'</a>,
--   <a>targetGroupStickinessConfig_durationSeconds</a> - The time period,
--   in seconds, during which requests from a client should be routed to
--   the same target group. The range is 1-604800 seconds (7 days).
newTargetGroupStickinessConfig :: TargetGroupStickinessConfig

-- | Indicates whether target group stickiness is enabled.
targetGroupStickinessConfig_enabled :: Lens' TargetGroupStickinessConfig (Maybe Bool)

-- | The time period, in seconds, during which requests from a client
--   should be routed to the same target group. The range is 1-604800
--   seconds (7 days).
targetGroupStickinessConfig_durationSeconds :: Lens' TargetGroupStickinessConfig (Maybe Int)

-- | Information about how traffic will be distributed between multiple
--   target groups in a forward rule.
--   
--   <i>See:</i> <a>newTargetGroupTuple</a> smart constructor.
data TargetGroupTuple
TargetGroupTuple' :: Maybe Int -> Maybe Text -> TargetGroupTuple

-- | The weight. The range is 0 to 999.
[$sel:weight:TargetGroupTuple'] :: TargetGroupTuple -> Maybe Int

-- | The Amazon Resource Name (ARN) of the target group.
[$sel:targetGroupArn:TargetGroupTuple'] :: TargetGroupTuple -> Maybe Text

-- | Create a value of <a>TargetGroupTuple</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:weight:TargetGroupTuple'</a>, <a>targetGroupTuple_weight</a> -
--   The weight. The range is 0 to 999.
--   
--   <a>$sel:targetGroupArn:TargetGroupTuple'</a>,
--   <a>targetGroupTuple_targetGroupArn</a> - The Amazon Resource Name
--   (ARN) of the target group.
newTargetGroupTuple :: TargetGroupTuple

-- | The weight. The range is 0 to 999.
targetGroupTuple_weight :: Lens' TargetGroupTuple (Maybe Int)

-- | The Amazon Resource Name (ARN) of the target group.
targetGroupTuple_targetGroupArn :: Lens' TargetGroupTuple (Maybe Text)

-- | Information about the current health of a target.
--   
--   <i>See:</i> <a>newTargetHealth</a> smart constructor.
data TargetHealth
TargetHealth' :: Maybe TargetHealthStateEnum -> Maybe TargetHealthReasonEnum -> Maybe Text -> TargetHealth

-- | The state of the target.
[$sel:state:TargetHealth'] :: TargetHealth -> Maybe TargetHealthStateEnum

-- | The reason code.
--   
--   If the target state is <tt>healthy</tt>, a reason code is not
--   provided.
--   
--   If the target state is <tt>initial</tt>, the reason code can be one of
--   the following values:
--   
--   <ul>
--   <li><tt>Elb.RegistrationInProgress</tt> - The target is in the process
--   of being registered with the load balancer.</li>
--   <li><tt>Elb.InitialHealthChecking</tt> - The load balancer is still
--   sending the target the minimum number of health checks required to
--   determine its health status.</li>
--   </ul>
--   
--   If the target state is <tt>unhealthy</tt>, the reason code can be one
--   of the following values:
--   
--   <ul>
--   <li><tt>Target.ResponseCodeMismatch</tt> - The health checks did not
--   return an expected HTTP code. Applies only to Application Load
--   Balancers and Gateway Load Balancers.</li>
--   <li><tt>Target.Timeout</tt> - The health check requests timed out.
--   Applies only to Application Load Balancers and Gateway Load
--   Balancers.</li>
--   <li><tt>Target.FailedHealthChecks</tt> - The load balancer received an
--   error while establishing a connection to the target or the target
--   response was malformed.</li>
--   <li><tt>Elb.InternalError</tt> - The health checks failed due to an
--   internal error. Applies only to Application Load Balancers.</li>
--   </ul>
--   
--   If the target state is <tt>unused</tt>, the reason code can be one of
--   the following values:
--   
--   <ul>
--   <li><tt>Target.NotRegistered</tt> - The target is not registered with
--   the target group.</li>
--   <li><tt>Target.NotInUse</tt> - The target group is not used by any
--   load balancer or the target is in an Availability Zone that is not
--   enabled for its load balancer.</li>
--   <li><tt>Target.InvalidState</tt> - The target is in the stopped or
--   terminated state.</li>
--   <li><tt>Target.IpUnusable</tt> - The target IP address is reserved for
--   use by a load balancer.</li>
--   </ul>
--   
--   If the target state is <tt>draining</tt>, the reason code can be the
--   following value:
--   
--   <ul>
--   <li><tt>Target.DeregistrationInProgress</tt> - The target is in the
--   process of being deregistered and the deregistration delay period has
--   not expired.</li>
--   </ul>
--   
--   If the target state is <tt>unavailable</tt>, the reason code can be
--   the following value:
--   
--   <ul>
--   <li><tt>Target.HealthCheckDisabled</tt> - Health checks are disabled
--   for the target group. Applies only to Application Load Balancers.</li>
--   <li><tt>Elb.InternalError</tt> - Target health is unavailable due to
--   an internal error. Applies only to Network Load Balancers.</li>
--   </ul>
[$sel:reason:TargetHealth'] :: TargetHealth -> Maybe TargetHealthReasonEnum

-- | A description of the target health that provides additional details.
--   If the state is <tt>healthy</tt>, a description is not provided.
[$sel:description:TargetHealth'] :: TargetHealth -> Maybe Text

-- | Create a value of <a>TargetHealth</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:TargetHealth'</a>, <a>targetHealth_state</a> - The state
--   of the target.
--   
--   <a>$sel:reason:TargetHealth'</a>, <a>targetHealth_reason</a> - The
--   reason code.
--   
--   If the target state is <tt>healthy</tt>, a reason code is not
--   provided.
--   
--   If the target state is <tt>initial</tt>, the reason code can be one of
--   the following values:
--   
--   <ul>
--   <li><tt>Elb.RegistrationInProgress</tt> - The target is in the process
--   of being registered with the load balancer.</li>
--   <li><tt>Elb.InitialHealthChecking</tt> - The load balancer is still
--   sending the target the minimum number of health checks required to
--   determine its health status.</li>
--   </ul>
--   
--   If the target state is <tt>unhealthy</tt>, the reason code can be one
--   of the following values:
--   
--   <ul>
--   <li><tt>Target.ResponseCodeMismatch</tt> - The health checks did not
--   return an expected HTTP code. Applies only to Application Load
--   Balancers and Gateway Load Balancers.</li>
--   <li><tt>Target.Timeout</tt> - The health check requests timed out.
--   Applies only to Application Load Balancers and Gateway Load
--   Balancers.</li>
--   <li><tt>Target.FailedHealthChecks</tt> - The load balancer received an
--   error while establishing a connection to the target or the target
--   response was malformed.</li>
--   <li><tt>Elb.InternalError</tt> - The health checks failed due to an
--   internal error. Applies only to Application Load Balancers.</li>
--   </ul>
--   
--   If the target state is <tt>unused</tt>, the reason code can be one of
--   the following values:
--   
--   <ul>
--   <li><tt>Target.NotRegistered</tt> - The target is not registered with
--   the target group.</li>
--   <li><tt>Target.NotInUse</tt> - The target group is not used by any
--   load balancer or the target is in an Availability Zone that is not
--   enabled for its load balancer.</li>
--   <li><tt>Target.InvalidState</tt> - The target is in the stopped or
--   terminated state.</li>
--   <li><tt>Target.IpUnusable</tt> - The target IP address is reserved for
--   use by a load balancer.</li>
--   </ul>
--   
--   If the target state is <tt>draining</tt>, the reason code can be the
--   following value:
--   
--   <ul>
--   <li><tt>Target.DeregistrationInProgress</tt> - The target is in the
--   process of being deregistered and the deregistration delay period has
--   not expired.</li>
--   </ul>
--   
--   If the target state is <tt>unavailable</tt>, the reason code can be
--   the following value:
--   
--   <ul>
--   <li><tt>Target.HealthCheckDisabled</tt> - Health checks are disabled
--   for the target group. Applies only to Application Load Balancers.</li>
--   <li><tt>Elb.InternalError</tt> - Target health is unavailable due to
--   an internal error. Applies only to Network Load Balancers.</li>
--   </ul>
--   
--   <a>$sel:description:TargetHealth'</a>, <a>targetHealth_description</a>
--   - A description of the target health that provides additional details.
--   If the state is <tt>healthy</tt>, a description is not provided.
newTargetHealth :: TargetHealth

-- | The state of the target.
targetHealth_state :: Lens' TargetHealth (Maybe TargetHealthStateEnum)

-- | The reason code.
--   
--   If the target state is <tt>healthy</tt>, a reason code is not
--   provided.
--   
--   If the target state is <tt>initial</tt>, the reason code can be one of
--   the following values:
--   
--   <ul>
--   <li><tt>Elb.RegistrationInProgress</tt> - The target is in the process
--   of being registered with the load balancer.</li>
--   <li><tt>Elb.InitialHealthChecking</tt> - The load balancer is still
--   sending the target the minimum number of health checks required to
--   determine its health status.</li>
--   </ul>
--   
--   If the target state is <tt>unhealthy</tt>, the reason code can be one
--   of the following values:
--   
--   <ul>
--   <li><tt>Target.ResponseCodeMismatch</tt> - The health checks did not
--   return an expected HTTP code. Applies only to Application Load
--   Balancers and Gateway Load Balancers.</li>
--   <li><tt>Target.Timeout</tt> - The health check requests timed out.
--   Applies only to Application Load Balancers and Gateway Load
--   Balancers.</li>
--   <li><tt>Target.FailedHealthChecks</tt> - The load balancer received an
--   error while establishing a connection to the target or the target
--   response was malformed.</li>
--   <li><tt>Elb.InternalError</tt> - The health checks failed due to an
--   internal error. Applies only to Application Load Balancers.</li>
--   </ul>
--   
--   If the target state is <tt>unused</tt>, the reason code can be one of
--   the following values:
--   
--   <ul>
--   <li><tt>Target.NotRegistered</tt> - The target is not registered with
--   the target group.</li>
--   <li><tt>Target.NotInUse</tt> - The target group is not used by any
--   load balancer or the target is in an Availability Zone that is not
--   enabled for its load balancer.</li>
--   <li><tt>Target.InvalidState</tt> - The target is in the stopped or
--   terminated state.</li>
--   <li><tt>Target.IpUnusable</tt> - The target IP address is reserved for
--   use by a load balancer.</li>
--   </ul>
--   
--   If the target state is <tt>draining</tt>, the reason code can be the
--   following value:
--   
--   <ul>
--   <li><tt>Target.DeregistrationInProgress</tt> - The target is in the
--   process of being deregistered and the deregistration delay period has
--   not expired.</li>
--   </ul>
--   
--   If the target state is <tt>unavailable</tt>, the reason code can be
--   the following value:
--   
--   <ul>
--   <li><tt>Target.HealthCheckDisabled</tt> - Health checks are disabled
--   for the target group. Applies only to Application Load Balancers.</li>
--   <li><tt>Elb.InternalError</tt> - Target health is unavailable due to
--   an internal error. Applies only to Network Load Balancers.</li>
--   </ul>
targetHealth_reason :: Lens' TargetHealth (Maybe TargetHealthReasonEnum)

-- | A description of the target health that provides additional details.
--   If the state is <tt>healthy</tt>, a description is not provided.
targetHealth_description :: Lens' TargetHealth (Maybe Text)

-- | Information about the health of a target.
--   
--   <i>See:</i> <a>newTargetHealthDescription</a> smart constructor.
data TargetHealthDescription
TargetHealthDescription' :: Maybe TargetHealth -> Maybe Text -> Maybe TargetDescription -> TargetHealthDescription

-- | The health information for the target.
[$sel:targetHealth:TargetHealthDescription'] :: TargetHealthDescription -> Maybe TargetHealth

-- | The port to use to connect with the target.
[$sel:healthCheckPort:TargetHealthDescription'] :: TargetHealthDescription -> Maybe Text

-- | The description of the target.
[$sel:target:TargetHealthDescription'] :: TargetHealthDescription -> Maybe TargetDescription

-- | Create a value of <a>TargetHealthDescription</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetHealth:TargetHealthDescription'</a>,
--   <a>targetHealthDescription_targetHealth</a> - The health information
--   for the target.
--   
--   <a>$sel:healthCheckPort:TargetHealthDescription'</a>,
--   <a>targetHealthDescription_healthCheckPort</a> - The port to use to
--   connect with the target.
--   
--   <a>$sel:target:TargetHealthDescription'</a>,
--   <a>targetHealthDescription_target</a> - The description of the target.
newTargetHealthDescription :: TargetHealthDescription

-- | The health information for the target.
targetHealthDescription_targetHealth :: Lens' TargetHealthDescription (Maybe TargetHealth)

-- | The port to use to connect with the target.
targetHealthDescription_healthCheckPort :: Lens' TargetHealthDescription (Maybe Text)

-- | The description of the target.
targetHealthDescription_target :: Lens' TargetHealthDescription (Maybe TargetDescription)


-- | Enables the Availability Zones for the specified public subnets for
--   the specified Application Load Balancer or Network Load Balancer. The
--   specified subnets replace the previously enabled subnets.
--   
--   When you specify subnets for a Network Load Balancer, you must include
--   all subnets that were enabled previously, with their existing
--   configurations, plus any additional subnets.
module Network.AWS.ELBV2.SetSubnets

-- | <i>See:</i> <a>newSetSubnets</a> smart constructor.
data SetSubnets
SetSubnets' :: Maybe [SubnetMapping] -> Maybe [Text] -> Maybe IpAddressType -> Text -> SetSubnets

-- | The IDs of the public subnets. You can specify only one subnet per
--   Availability Zone. You must specify either subnets or subnet mappings.
--   
--   <ul>
--   <li><i>Application Load Balancers</i> You must specify subnets from at
--   least two Availability Zones. You cannot specify Elastic IP addresses
--   for your subnets.</li>
--   <li><i>Application Load Balancers on Outposts</i> You must specify one
--   Outpost subnet.</li>
--   <li><i>Application Load Balancers on Local Zones</i> You can specify
--   subnets from one or more Local Zones.</li>
--   <li><i>Network Load Balancers</i> You can specify subnets from one or
--   more Availability Zones. You can specify one Elastic IP address per
--   subnet if you need static IP addresses for your internet-facing load
--   balancer. For internal load balancers, you can specify one private IP
--   address per subnet from the IPv4 range of the subnet. For
--   internet-facing load balancer, you can specify one IPv6 address per
--   subnet.</li>
--   </ul>
[$sel:subnetMappings:SetSubnets'] :: SetSubnets -> Maybe [SubnetMapping]

-- | The IDs of the public subnets. You can specify only one subnet per
--   Availability Zone. You must specify either subnets or subnet mappings.
--   
--   <ul>
--   <li><i>Application Load Balancers</i> You must specify subnets from at
--   least two Availability Zones.</li>
--   <li><i>Application Load Balancers on Outposts</i> You must specify one
--   Outpost subnet.</li>
--   <li><i>Application Load Balancers on Local Zones</i> You can specify
--   subnets from one or more Local Zones.</li>
--   <li><i>Network Load Balancers</i> You can specify subnets from one or
--   more Availability Zones.</li>
--   </ul>
[$sel:subnets:SetSubnets'] :: SetSubnets -> Maybe [Text]

-- | <ul>
--   <li><i>Network Load Balancers</i> The type of IP addresses used by the
--   subnets for your load balancer. The possible values are <tt>ipv4</tt>
--   (for IPv4 addresses) and <tt>dualstack</tt> (for IPv4 and IPv6
--   addresses). You can’t specify <tt>dualstack</tt> for a load balancer
--   with a UDP or TCP_UDP listener. Internal load balancers must use
--   <tt>ipv4</tt>.</li>
--   </ul>
[$sel:ipAddressType:SetSubnets'] :: SetSubnets -> Maybe IpAddressType

-- | The Amazon Resource Name (ARN) of the load balancer.
[$sel:loadBalancerArn:SetSubnets'] :: SetSubnets -> Text

-- | Create a value of <a>SetSubnets</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subnetMappings:SetSubnets'</a>,
--   <a>setSubnets_subnetMappings</a> - The IDs of the public subnets. You
--   can specify only one subnet per Availability Zone. You must specify
--   either subnets or subnet mappings.
--   
--   <ul>
--   <li><i>Application Load Balancers</i> You must specify subnets from at
--   least two Availability Zones. You cannot specify Elastic IP addresses
--   for your subnets.</li>
--   <li><i>Application Load Balancers on Outposts</i> You must specify one
--   Outpost subnet.</li>
--   <li><i>Application Load Balancers on Local Zones</i> You can specify
--   subnets from one or more Local Zones.</li>
--   <li><i>Network Load Balancers</i> You can specify subnets from one or
--   more Availability Zones. You can specify one Elastic IP address per
--   subnet if you need static IP addresses for your internet-facing load
--   balancer. For internal load balancers, you can specify one private IP
--   address per subnet from the IPv4 range of the subnet. For
--   internet-facing load balancer, you can specify one IPv6 address per
--   subnet.</li>
--   </ul>
--   
--   <a>$sel:subnets:SetSubnets'</a>, <a>setSubnets_subnets</a> - The IDs
--   of the public subnets. You can specify only one subnet per
--   Availability Zone. You must specify either subnets or subnet mappings.
--   
--   <ul>
--   <li><i>Application Load Balancers</i> You must specify subnets from at
--   least two Availability Zones.</li>
--   <li><i>Application Load Balancers on Outposts</i> You must specify one
--   Outpost subnet.</li>
--   <li><i>Application Load Balancers on Local Zones</i> You can specify
--   subnets from one or more Local Zones.</li>
--   <li><i>Network Load Balancers</i> You can specify subnets from one or
--   more Availability Zones.</li>
--   </ul>
--   
--   <a>$sel:ipAddressType:SetSubnets'</a>, <a>setSubnets_ipAddressType</a>
--   - [Network Load Balancers] The type of IP addresses used by the
--   subnets for your load balancer. The possible values are <tt>ipv4</tt>
--   (for IPv4 addresses) and <tt>dualstack</tt> (for IPv4 and IPv6
--   addresses). You can’t specify <tt>dualstack</tt> for a load balancer
--   with a UDP or TCP_UDP listener. Internal load balancers must use
--   <tt>ipv4</tt>.
--   
--   <a>$sel:loadBalancerArn:SetSubnets'</a>,
--   <a>setSubnets_loadBalancerArn</a> - The Amazon Resource Name (ARN) of
--   the load balancer.
newSetSubnets :: Text -> SetSubnets

-- | The IDs of the public subnets. You can specify only one subnet per
--   Availability Zone. You must specify either subnets or subnet mappings.
--   
--   <ul>
--   <li><i>Application Load Balancers</i> You must specify subnets from at
--   least two Availability Zones. You cannot specify Elastic IP addresses
--   for your subnets.</li>
--   <li><i>Application Load Balancers on Outposts</i> You must specify one
--   Outpost subnet.</li>
--   <li><i>Application Load Balancers on Local Zones</i> You can specify
--   subnets from one or more Local Zones.</li>
--   <li><i>Network Load Balancers</i> You can specify subnets from one or
--   more Availability Zones. You can specify one Elastic IP address per
--   subnet if you need static IP addresses for your internet-facing load
--   balancer. For internal load balancers, you can specify one private IP
--   address per subnet from the IPv4 range of the subnet. For
--   internet-facing load balancer, you can specify one IPv6 address per
--   subnet.</li>
--   </ul>
setSubnets_subnetMappings :: Lens' SetSubnets (Maybe [SubnetMapping])

-- | The IDs of the public subnets. You can specify only one subnet per
--   Availability Zone. You must specify either subnets or subnet mappings.
--   
--   <ul>
--   <li><i>Application Load Balancers</i> You must specify subnets from at
--   least two Availability Zones.</li>
--   <li><i>Application Load Balancers on Outposts</i> You must specify one
--   Outpost subnet.</li>
--   <li><i>Application Load Balancers on Local Zones</i> You can specify
--   subnets from one or more Local Zones.</li>
--   <li><i>Network Load Balancers</i> You can specify subnets from one or
--   more Availability Zones.</li>
--   </ul>
setSubnets_subnets :: Lens' SetSubnets (Maybe [Text])

-- | <ul>
--   <li><i>Network Load Balancers</i> The type of IP addresses used by the
--   subnets for your load balancer. The possible values are <tt>ipv4</tt>
--   (for IPv4 addresses) and <tt>dualstack</tt> (for IPv4 and IPv6
--   addresses). You can’t specify <tt>dualstack</tt> for a load balancer
--   with a UDP or TCP_UDP listener. Internal load balancers must use
--   <tt>ipv4</tt>.</li>
--   </ul>
setSubnets_ipAddressType :: Lens' SetSubnets (Maybe IpAddressType)

-- | The Amazon Resource Name (ARN) of the load balancer.
setSubnets_loadBalancerArn :: Lens' SetSubnets Text

-- | <i>See:</i> <a>newSetSubnetsResponse</a> smart constructor.
data SetSubnetsResponse
SetSubnetsResponse' :: Maybe [AvailabilityZone] -> Maybe IpAddressType -> Int -> SetSubnetsResponse

-- | Information about the subnets.
[$sel:availabilityZones:SetSubnetsResponse'] :: SetSubnetsResponse -> Maybe [AvailabilityZone]

-- | <ul>
--   <li><i>Network Load Balancers</i> The IP address type.</li>
--   </ul>
[$sel:ipAddressType:SetSubnetsResponse'] :: SetSubnetsResponse -> Maybe IpAddressType

-- | The response's http status code.
[$sel:httpStatus:SetSubnetsResponse'] :: SetSubnetsResponse -> Int

-- | Create a value of <a>SetSubnetsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:availabilityZones:SetSubnetsResponse'</a>,
--   <a>setSubnetsResponse_availabilityZones</a> - Information about the
--   subnets.
--   
--   <a>$sel:ipAddressType:SetSubnets'</a>,
--   <a>setSubnetsResponse_ipAddressType</a> - [Network Load Balancers] The
--   IP address type.
--   
--   <a>$sel:httpStatus:SetSubnetsResponse'</a>,
--   <a>setSubnetsResponse_httpStatus</a> - The response's http status
--   code.
newSetSubnetsResponse :: Int -> SetSubnetsResponse

-- | Information about the subnets.
setSubnetsResponse_availabilityZones :: Lens' SetSubnetsResponse (Maybe [AvailabilityZone])

-- | <ul>
--   <li><i>Network Load Balancers</i> The IP address type.</li>
--   </ul>
setSubnetsResponse_ipAddressType :: Lens' SetSubnetsResponse (Maybe IpAddressType)

-- | The response's http status code.
setSubnetsResponse_httpStatus :: Lens' SetSubnetsResponse Int
instance GHC.Generics.Generic Network.AWS.ELBV2.SetSubnets.SetSubnets
instance GHC.Show.Show Network.AWS.ELBV2.SetSubnets.SetSubnets
instance GHC.Read.Read Network.AWS.ELBV2.SetSubnets.SetSubnets
instance GHC.Classes.Eq Network.AWS.ELBV2.SetSubnets.SetSubnets
instance GHC.Generics.Generic Network.AWS.ELBV2.SetSubnets.SetSubnetsResponse
instance GHC.Show.Show Network.AWS.ELBV2.SetSubnets.SetSubnetsResponse
instance GHC.Read.Read Network.AWS.ELBV2.SetSubnets.SetSubnetsResponse
instance GHC.Classes.Eq Network.AWS.ELBV2.SetSubnets.SetSubnetsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ELBV2.SetSubnets.SetSubnets
instance Control.DeepSeq.NFData Network.AWS.ELBV2.SetSubnets.SetSubnetsResponse
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.SetSubnets.SetSubnets
instance Control.DeepSeq.NFData Network.AWS.ELBV2.SetSubnets.SetSubnets
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ELBV2.SetSubnets.SetSubnets
instance Network.AWS.Data.Path.ToPath Network.AWS.ELBV2.SetSubnets.SetSubnets
instance Network.AWS.Data.Query.ToQuery Network.AWS.ELBV2.SetSubnets.SetSubnets


-- | Associates the specified security groups with the specified
--   Application Load Balancer. The specified security groups override the
--   previously associated security groups.
--   
--   You can't specify a security group for a Network Load Balancer or
--   Gateway Load Balancer.
module Network.AWS.ELBV2.SetSecurityGroups

-- | <i>See:</i> <a>newSetSecurityGroups</a> smart constructor.
data SetSecurityGroups
SetSecurityGroups' :: Text -> [Text] -> SetSecurityGroups

-- | The Amazon Resource Name (ARN) of the load balancer.
[$sel:loadBalancerArn:SetSecurityGroups'] :: SetSecurityGroups -> Text

-- | The IDs of the security groups.
[$sel:securityGroups:SetSecurityGroups'] :: SetSecurityGroups -> [Text]

-- | Create a value of <a>SetSecurityGroups</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:loadBalancerArn:SetSecurityGroups'</a>,
--   <a>setSecurityGroups_loadBalancerArn</a> - The Amazon Resource Name
--   (ARN) of the load balancer.
--   
--   <a>$sel:securityGroups:SetSecurityGroups'</a>,
--   <a>setSecurityGroups_securityGroups</a> - The IDs of the security
--   groups.
newSetSecurityGroups :: Text -> SetSecurityGroups

-- | The Amazon Resource Name (ARN) of the load balancer.
setSecurityGroups_loadBalancerArn :: Lens' SetSecurityGroups Text

-- | The IDs of the security groups.
setSecurityGroups_securityGroups :: Lens' SetSecurityGroups [Text]

-- | <i>See:</i> <a>newSetSecurityGroupsResponse</a> smart constructor.
data SetSecurityGroupsResponse
SetSecurityGroupsResponse' :: Maybe [Text] -> Int -> SetSecurityGroupsResponse

-- | The IDs of the security groups associated with the load balancer.
[$sel:securityGroupIds:SetSecurityGroupsResponse'] :: SetSecurityGroupsResponse -> Maybe [Text]

-- | The response's http status code.
[$sel:httpStatus:SetSecurityGroupsResponse'] :: SetSecurityGroupsResponse -> Int

-- | Create a value of <a>SetSecurityGroupsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityGroupIds:SetSecurityGroupsResponse'</a>,
--   <a>setSecurityGroupsResponse_securityGroupIds</a> - The IDs of the
--   security groups associated with the load balancer.
--   
--   <a>$sel:httpStatus:SetSecurityGroupsResponse'</a>,
--   <a>setSecurityGroupsResponse_httpStatus</a> - The response's http
--   status code.
newSetSecurityGroupsResponse :: Int -> SetSecurityGroupsResponse

-- | The IDs of the security groups associated with the load balancer.
setSecurityGroupsResponse_securityGroupIds :: Lens' SetSecurityGroupsResponse (Maybe [Text])

-- | The response's http status code.
setSecurityGroupsResponse_httpStatus :: Lens' SetSecurityGroupsResponse Int
instance GHC.Generics.Generic Network.AWS.ELBV2.SetSecurityGroups.SetSecurityGroups
instance GHC.Show.Show Network.AWS.ELBV2.SetSecurityGroups.SetSecurityGroups
instance GHC.Read.Read Network.AWS.ELBV2.SetSecurityGroups.SetSecurityGroups
instance GHC.Classes.Eq Network.AWS.ELBV2.SetSecurityGroups.SetSecurityGroups
instance GHC.Generics.Generic Network.AWS.ELBV2.SetSecurityGroups.SetSecurityGroupsResponse
instance GHC.Show.Show Network.AWS.ELBV2.SetSecurityGroups.SetSecurityGroupsResponse
instance GHC.Read.Read Network.AWS.ELBV2.SetSecurityGroups.SetSecurityGroupsResponse
instance GHC.Classes.Eq Network.AWS.ELBV2.SetSecurityGroups.SetSecurityGroupsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ELBV2.SetSecurityGroups.SetSecurityGroups
instance Control.DeepSeq.NFData Network.AWS.ELBV2.SetSecurityGroups.SetSecurityGroupsResponse
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.SetSecurityGroups.SetSecurityGroups
instance Control.DeepSeq.NFData Network.AWS.ELBV2.SetSecurityGroups.SetSecurityGroups
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ELBV2.SetSecurityGroups.SetSecurityGroups
instance Network.AWS.Data.Path.ToPath Network.AWS.ELBV2.SetSecurityGroups.SetSecurityGroups
instance Network.AWS.Data.Query.ToQuery Network.AWS.ELBV2.SetSecurityGroups.SetSecurityGroups


-- | Sets the priorities of the specified rules.
--   
--   You can reorder the rules as long as there are no priority conflicts
--   in the new order. Any existing rules that you do not specify retain
--   their current priority.
module Network.AWS.ELBV2.SetRulePriorities

-- | <i>See:</i> <a>newSetRulePriorities</a> smart constructor.
data SetRulePriorities
SetRulePriorities' :: [RulePriorityPair] -> SetRulePriorities

-- | The rule priorities.
[$sel:rulePriorities:SetRulePriorities'] :: SetRulePriorities -> [RulePriorityPair]

-- | Create a value of <a>SetRulePriorities</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:rulePriorities:SetRulePriorities'</a>,
--   <a>setRulePriorities_rulePriorities</a> - The rule priorities.
newSetRulePriorities :: SetRulePriorities

-- | The rule priorities.
setRulePriorities_rulePriorities :: Lens' SetRulePriorities [RulePriorityPair]

-- | <i>See:</i> <a>newSetRulePrioritiesResponse</a> smart constructor.
data SetRulePrioritiesResponse
SetRulePrioritiesResponse' :: Maybe [Rule] -> Int -> SetRulePrioritiesResponse

-- | Information about the rules.
[$sel:rules:SetRulePrioritiesResponse'] :: SetRulePrioritiesResponse -> Maybe [Rule]

-- | The response's http status code.
[$sel:httpStatus:SetRulePrioritiesResponse'] :: SetRulePrioritiesResponse -> Int

-- | Create a value of <a>SetRulePrioritiesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:rules:SetRulePrioritiesResponse'</a>,
--   <a>setRulePrioritiesResponse_rules</a> - Information about the rules.
--   
--   <a>$sel:httpStatus:SetRulePrioritiesResponse'</a>,
--   <a>setRulePrioritiesResponse_httpStatus</a> - The response's http
--   status code.
newSetRulePrioritiesResponse :: Int -> SetRulePrioritiesResponse

-- | Information about the rules.
setRulePrioritiesResponse_rules :: Lens' SetRulePrioritiesResponse (Maybe [Rule])

-- | The response's http status code.
setRulePrioritiesResponse_httpStatus :: Lens' SetRulePrioritiesResponse Int
instance GHC.Generics.Generic Network.AWS.ELBV2.SetRulePriorities.SetRulePriorities
instance GHC.Show.Show Network.AWS.ELBV2.SetRulePriorities.SetRulePriorities
instance GHC.Read.Read Network.AWS.ELBV2.SetRulePriorities.SetRulePriorities
instance GHC.Classes.Eq Network.AWS.ELBV2.SetRulePriorities.SetRulePriorities
instance GHC.Generics.Generic Network.AWS.ELBV2.SetRulePriorities.SetRulePrioritiesResponse
instance GHC.Show.Show Network.AWS.ELBV2.SetRulePriorities.SetRulePrioritiesResponse
instance GHC.Read.Read Network.AWS.ELBV2.SetRulePriorities.SetRulePrioritiesResponse
instance GHC.Classes.Eq Network.AWS.ELBV2.SetRulePriorities.SetRulePrioritiesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ELBV2.SetRulePriorities.SetRulePriorities
instance Control.DeepSeq.NFData Network.AWS.ELBV2.SetRulePriorities.SetRulePrioritiesResponse
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.SetRulePriorities.SetRulePriorities
instance Control.DeepSeq.NFData Network.AWS.ELBV2.SetRulePriorities.SetRulePriorities
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ELBV2.SetRulePriorities.SetRulePriorities
instance Network.AWS.Data.Path.ToPath Network.AWS.ELBV2.SetRulePriorities.SetRulePriorities
instance Network.AWS.Data.Query.ToQuery Network.AWS.ELBV2.SetRulePriorities.SetRulePriorities


-- | Sets the type of IP addresses used by the subnets of the specified
--   Application Load Balancer or Network Load Balancer.
module Network.AWS.ELBV2.SetIpAddressType

-- | <i>See:</i> <a>newSetIpAddressType</a> smart constructor.
data SetIpAddressType
SetIpAddressType' :: Text -> IpAddressType -> SetIpAddressType

-- | The Amazon Resource Name (ARN) of the load balancer.
[$sel:loadBalancerArn:SetIpAddressType'] :: SetIpAddressType -> Text

-- | The IP address type. The possible values are <tt>ipv4</tt> (for IPv4
--   addresses) and <tt>dualstack</tt> (for IPv4 and IPv6 addresses).
--   Internal load balancers must use <tt>ipv4</tt>. You can’t specify
--   <tt>dualstack</tt> for a load balancer with a UDP or TCP_UDP listener.
[$sel:ipAddressType:SetIpAddressType'] :: SetIpAddressType -> IpAddressType

-- | Create a value of <a>SetIpAddressType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:loadBalancerArn:SetIpAddressType'</a>,
--   <a>setIpAddressType_loadBalancerArn</a> - The Amazon Resource Name
--   (ARN) of the load balancer.
--   
--   <a>$sel:ipAddressType:SetIpAddressType'</a>,
--   <a>setIpAddressType_ipAddressType</a> - The IP address type. The
--   possible values are <tt>ipv4</tt> (for IPv4 addresses) and
--   <tt>dualstack</tt> (for IPv4 and IPv6 addresses). Internal load
--   balancers must use <tt>ipv4</tt>. You can’t specify <tt>dualstack</tt>
--   for a load balancer with a UDP or TCP_UDP listener.
newSetIpAddressType :: Text -> IpAddressType -> SetIpAddressType

-- | The Amazon Resource Name (ARN) of the load balancer.
setIpAddressType_loadBalancerArn :: Lens' SetIpAddressType Text

-- | The IP address type. The possible values are <tt>ipv4</tt> (for IPv4
--   addresses) and <tt>dualstack</tt> (for IPv4 and IPv6 addresses).
--   Internal load balancers must use <tt>ipv4</tt>. You can’t specify
--   <tt>dualstack</tt> for a load balancer with a UDP or TCP_UDP listener.
setIpAddressType_ipAddressType :: Lens' SetIpAddressType IpAddressType

-- | <i>See:</i> <a>newSetIpAddressTypeResponse</a> smart constructor.
data SetIpAddressTypeResponse
SetIpAddressTypeResponse' :: Maybe IpAddressType -> Int -> SetIpAddressTypeResponse

-- | The IP address type.
[$sel:ipAddressType:SetIpAddressTypeResponse'] :: SetIpAddressTypeResponse -> Maybe IpAddressType

-- | The response's http status code.
[$sel:httpStatus:SetIpAddressTypeResponse'] :: SetIpAddressTypeResponse -> Int

-- | Create a value of <a>SetIpAddressTypeResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ipAddressType:SetIpAddressType'</a>,
--   <a>setIpAddressTypeResponse_ipAddressType</a> - The IP address type.
--   
--   <a>$sel:httpStatus:SetIpAddressTypeResponse'</a>,
--   <a>setIpAddressTypeResponse_httpStatus</a> - The response's http
--   status code.
newSetIpAddressTypeResponse :: Int -> SetIpAddressTypeResponse

-- | The IP address type.
setIpAddressTypeResponse_ipAddressType :: Lens' SetIpAddressTypeResponse (Maybe IpAddressType)

-- | The response's http status code.
setIpAddressTypeResponse_httpStatus :: Lens' SetIpAddressTypeResponse Int
instance GHC.Generics.Generic Network.AWS.ELBV2.SetIpAddressType.SetIpAddressType
instance GHC.Show.Show Network.AWS.ELBV2.SetIpAddressType.SetIpAddressType
instance GHC.Read.Read Network.AWS.ELBV2.SetIpAddressType.SetIpAddressType
instance GHC.Classes.Eq Network.AWS.ELBV2.SetIpAddressType.SetIpAddressType
instance GHC.Generics.Generic Network.AWS.ELBV2.SetIpAddressType.SetIpAddressTypeResponse
instance GHC.Show.Show Network.AWS.ELBV2.SetIpAddressType.SetIpAddressTypeResponse
instance GHC.Read.Read Network.AWS.ELBV2.SetIpAddressType.SetIpAddressTypeResponse
instance GHC.Classes.Eq Network.AWS.ELBV2.SetIpAddressType.SetIpAddressTypeResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ELBV2.SetIpAddressType.SetIpAddressType
instance Control.DeepSeq.NFData Network.AWS.ELBV2.SetIpAddressType.SetIpAddressTypeResponse
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.SetIpAddressType.SetIpAddressType
instance Control.DeepSeq.NFData Network.AWS.ELBV2.SetIpAddressType.SetIpAddressType
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ELBV2.SetIpAddressType.SetIpAddressType
instance Network.AWS.Data.Path.ToPath Network.AWS.ELBV2.SetIpAddressType.SetIpAddressType
instance Network.AWS.Data.Query.ToQuery Network.AWS.ELBV2.SetIpAddressType.SetIpAddressType


-- | Removes the specified tags from the specified Elastic Load Balancing
--   resources. You can remove the tags for one or more Application Load
--   Balancers, Network Load Balancers, Gateway Load Balancers, target
--   groups, listeners, or rules.
module Network.AWS.ELBV2.RemoveTags

-- | <i>See:</i> <a>newRemoveTags</a> smart constructor.
data RemoveTags
RemoveTags' :: [Text] -> [Text] -> RemoveTags

-- | The Amazon Resource Name (ARN) of the resource.
[$sel:resourceArns:RemoveTags'] :: RemoveTags -> [Text]

-- | The tag keys for the tags to remove.
[$sel:tagKeys:RemoveTags'] :: RemoveTags -> [Text]

-- | Create a value of <a>RemoveTags</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArns:RemoveTags'</a>, <a>removeTags_resourceArns</a> -
--   The Amazon Resource Name (ARN) of the resource.
--   
--   <a>$sel:tagKeys:RemoveTags'</a>, <a>removeTags_tagKeys</a> - The tag
--   keys for the tags to remove.
newRemoveTags :: RemoveTags

-- | The Amazon Resource Name (ARN) of the resource.
removeTags_resourceArns :: Lens' RemoveTags [Text]

-- | The tag keys for the tags to remove.
removeTags_tagKeys :: Lens' RemoveTags [Text]

-- | <i>See:</i> <a>newRemoveTagsResponse</a> smart constructor.
data RemoveTagsResponse
RemoveTagsResponse' :: Int -> RemoveTagsResponse

-- | The response's http status code.
[$sel:httpStatus:RemoveTagsResponse'] :: RemoveTagsResponse -> Int

-- | Create a value of <a>RemoveTagsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:RemoveTagsResponse'</a>,
--   <a>removeTagsResponse_httpStatus</a> - The response's http status
--   code.
newRemoveTagsResponse :: Int -> RemoveTagsResponse

-- | The response's http status code.
removeTagsResponse_httpStatus :: Lens' RemoveTagsResponse Int
instance GHC.Generics.Generic Network.AWS.ELBV2.RemoveTags.RemoveTags
instance GHC.Show.Show Network.AWS.ELBV2.RemoveTags.RemoveTags
instance GHC.Read.Read Network.AWS.ELBV2.RemoveTags.RemoveTags
instance GHC.Classes.Eq Network.AWS.ELBV2.RemoveTags.RemoveTags
instance GHC.Generics.Generic Network.AWS.ELBV2.RemoveTags.RemoveTagsResponse
instance GHC.Show.Show Network.AWS.ELBV2.RemoveTags.RemoveTagsResponse
instance GHC.Read.Read Network.AWS.ELBV2.RemoveTags.RemoveTagsResponse
instance GHC.Classes.Eq Network.AWS.ELBV2.RemoveTags.RemoveTagsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ELBV2.RemoveTags.RemoveTags
instance Control.DeepSeq.NFData Network.AWS.ELBV2.RemoveTags.RemoveTagsResponse
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.RemoveTags.RemoveTags
instance Control.DeepSeq.NFData Network.AWS.ELBV2.RemoveTags.RemoveTags
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ELBV2.RemoveTags.RemoveTags
instance Network.AWS.Data.Path.ToPath Network.AWS.ELBV2.RemoveTags.RemoveTags
instance Network.AWS.Data.Query.ToQuery Network.AWS.ELBV2.RemoveTags.RemoveTags


-- | Removes the specified certificate from the certificate list for the
--   specified HTTPS or TLS listener.
module Network.AWS.ELBV2.RemoveListenerCertificates

-- | <i>See:</i> <a>newRemoveListenerCertificates</a> smart constructor.
data RemoveListenerCertificates
RemoveListenerCertificates' :: Text -> [Certificate] -> RemoveListenerCertificates

-- | The Amazon Resource Name (ARN) of the listener.
[$sel:listenerArn:RemoveListenerCertificates'] :: RemoveListenerCertificates -> Text

-- | The certificate to remove. You can specify one certificate per call.
--   Set <tt>CertificateArn</tt> to the certificate ARN but do not set
--   <tt>IsDefault</tt>.
[$sel:certificates:RemoveListenerCertificates'] :: RemoveListenerCertificates -> [Certificate]

-- | Create a value of <a>RemoveListenerCertificates</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:listenerArn:RemoveListenerCertificates'</a>,
--   <a>removeListenerCertificates_listenerArn</a> - The Amazon Resource
--   Name (ARN) of the listener.
--   
--   <a>$sel:certificates:RemoveListenerCertificates'</a>,
--   <a>removeListenerCertificates_certificates</a> - The certificate to
--   remove. You can specify one certificate per call. Set
--   <tt>CertificateArn</tt> to the certificate ARN but do not set
--   <tt>IsDefault</tt>.
newRemoveListenerCertificates :: Text -> RemoveListenerCertificates

-- | The Amazon Resource Name (ARN) of the listener.
removeListenerCertificates_listenerArn :: Lens' RemoveListenerCertificates Text

-- | The certificate to remove. You can specify one certificate per call.
--   Set <tt>CertificateArn</tt> to the certificate ARN but do not set
--   <tt>IsDefault</tt>.
removeListenerCertificates_certificates :: Lens' RemoveListenerCertificates [Certificate]

-- | <i>See:</i> <a>newRemoveListenerCertificatesResponse</a> smart
--   constructor.
data RemoveListenerCertificatesResponse
RemoveListenerCertificatesResponse' :: Int -> RemoveListenerCertificatesResponse

-- | The response's http status code.
[$sel:httpStatus:RemoveListenerCertificatesResponse'] :: RemoveListenerCertificatesResponse -> Int

-- | Create a value of <a>RemoveListenerCertificatesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:RemoveListenerCertificatesResponse'</a>,
--   <a>removeListenerCertificatesResponse_httpStatus</a> - The response's
--   http status code.
newRemoveListenerCertificatesResponse :: Int -> RemoveListenerCertificatesResponse

-- | The response's http status code.
removeListenerCertificatesResponse_httpStatus :: Lens' RemoveListenerCertificatesResponse Int
instance GHC.Generics.Generic Network.AWS.ELBV2.RemoveListenerCertificates.RemoveListenerCertificates
instance GHC.Show.Show Network.AWS.ELBV2.RemoveListenerCertificates.RemoveListenerCertificates
instance GHC.Read.Read Network.AWS.ELBV2.RemoveListenerCertificates.RemoveListenerCertificates
instance GHC.Classes.Eq Network.AWS.ELBV2.RemoveListenerCertificates.RemoveListenerCertificates
instance GHC.Generics.Generic Network.AWS.ELBV2.RemoveListenerCertificates.RemoveListenerCertificatesResponse
instance GHC.Show.Show Network.AWS.ELBV2.RemoveListenerCertificates.RemoveListenerCertificatesResponse
instance GHC.Read.Read Network.AWS.ELBV2.RemoveListenerCertificates.RemoveListenerCertificatesResponse
instance GHC.Classes.Eq Network.AWS.ELBV2.RemoveListenerCertificates.RemoveListenerCertificatesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ELBV2.RemoveListenerCertificates.RemoveListenerCertificates
instance Control.DeepSeq.NFData Network.AWS.ELBV2.RemoveListenerCertificates.RemoveListenerCertificatesResponse
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.RemoveListenerCertificates.RemoveListenerCertificates
instance Control.DeepSeq.NFData Network.AWS.ELBV2.RemoveListenerCertificates.RemoveListenerCertificates
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ELBV2.RemoveListenerCertificates.RemoveListenerCertificates
instance Network.AWS.Data.Path.ToPath Network.AWS.ELBV2.RemoveListenerCertificates.RemoveListenerCertificates
instance Network.AWS.Data.Query.ToQuery Network.AWS.ELBV2.RemoveListenerCertificates.RemoveListenerCertificates


-- | Registers the specified targets with the specified target group.
--   
--   If the target is an EC2 instance, it must be in the <tt>running</tt>
--   state when you register it.
--   
--   By default, the load balancer routes requests to registered targets
--   using the protocol and port for the target group. Alternatively, you
--   can override the port for a target when you register it. You can
--   register each EC2 instance or IP address with the same target group
--   multiple times using different ports.
--   
--   With a Network Load Balancer, you cannot register instances by
--   instance ID if they have the following instance types: C1, CC1, CC2,
--   CG1, CG2, CR1, CS1, G1, G2, HI1, HS1, M1, M2, M3, and T1. You can
--   register instances of these types by IP address.
module Network.AWS.ELBV2.RegisterTargets

-- | <i>See:</i> <a>newRegisterTargets</a> smart constructor.
data RegisterTargets
RegisterTargets' :: Text -> [TargetDescription] -> RegisterTargets

-- | The Amazon Resource Name (ARN) of the target group.
[$sel:targetGroupArn:RegisterTargets'] :: RegisterTargets -> Text

-- | The targets.
[$sel:targets:RegisterTargets'] :: RegisterTargets -> [TargetDescription]

-- | Create a value of <a>RegisterTargets</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetGroupArn:RegisterTargets'</a>,
--   <a>registerTargets_targetGroupArn</a> - The Amazon Resource Name (ARN)
--   of the target group.
--   
--   <a>$sel:targets:RegisterTargets'</a>, <a>registerTargets_targets</a> -
--   The targets.
newRegisterTargets :: Text -> RegisterTargets

-- | The Amazon Resource Name (ARN) of the target group.
registerTargets_targetGroupArn :: Lens' RegisterTargets Text

-- | The targets.
registerTargets_targets :: Lens' RegisterTargets [TargetDescription]

-- | <i>See:</i> <a>newRegisterTargetsResponse</a> smart constructor.
data RegisterTargetsResponse
RegisterTargetsResponse' :: Int -> RegisterTargetsResponse

-- | The response's http status code.
[$sel:httpStatus:RegisterTargetsResponse'] :: RegisterTargetsResponse -> Int

-- | Create a value of <a>RegisterTargetsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:RegisterTargetsResponse'</a>,
--   <a>registerTargetsResponse_httpStatus</a> - The response's http status
--   code.
newRegisterTargetsResponse :: Int -> RegisterTargetsResponse

-- | The response's http status code.
registerTargetsResponse_httpStatus :: Lens' RegisterTargetsResponse Int
instance GHC.Generics.Generic Network.AWS.ELBV2.RegisterTargets.RegisterTargets
instance GHC.Show.Show Network.AWS.ELBV2.RegisterTargets.RegisterTargets
instance GHC.Read.Read Network.AWS.ELBV2.RegisterTargets.RegisterTargets
instance GHC.Classes.Eq Network.AWS.ELBV2.RegisterTargets.RegisterTargets
instance GHC.Generics.Generic Network.AWS.ELBV2.RegisterTargets.RegisterTargetsResponse
instance GHC.Show.Show Network.AWS.ELBV2.RegisterTargets.RegisterTargetsResponse
instance GHC.Read.Read Network.AWS.ELBV2.RegisterTargets.RegisterTargetsResponse
instance GHC.Classes.Eq Network.AWS.ELBV2.RegisterTargets.RegisterTargetsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ELBV2.RegisterTargets.RegisterTargets
instance Control.DeepSeq.NFData Network.AWS.ELBV2.RegisterTargets.RegisterTargetsResponse
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.RegisterTargets.RegisterTargets
instance Control.DeepSeq.NFData Network.AWS.ELBV2.RegisterTargets.RegisterTargets
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ELBV2.RegisterTargets.RegisterTargets
instance Network.AWS.Data.Path.ToPath Network.AWS.ELBV2.RegisterTargets.RegisterTargets
instance Network.AWS.Data.Query.ToQuery Network.AWS.ELBV2.RegisterTargets.RegisterTargets


-- | Modifies the specified attributes of the specified target group.
module Network.AWS.ELBV2.ModifyTargetGroupAttributes

-- | <i>See:</i> <a>newModifyTargetGroupAttributes</a> smart constructor.
data ModifyTargetGroupAttributes
ModifyTargetGroupAttributes' :: Text -> [TargetGroupAttribute] -> ModifyTargetGroupAttributes

-- | The Amazon Resource Name (ARN) of the target group.
[$sel:targetGroupArn:ModifyTargetGroupAttributes'] :: ModifyTargetGroupAttributes -> Text

-- | The attributes.
[$sel:attributes:ModifyTargetGroupAttributes'] :: ModifyTargetGroupAttributes -> [TargetGroupAttribute]

-- | Create a value of <a>ModifyTargetGroupAttributes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetGroupArn:ModifyTargetGroupAttributes'</a>,
--   <a>modifyTargetGroupAttributes_targetGroupArn</a> - The Amazon
--   Resource Name (ARN) of the target group.
--   
--   <a>$sel:attributes:ModifyTargetGroupAttributes'</a>,
--   <a>modifyTargetGroupAttributes_attributes</a> - The attributes.
newModifyTargetGroupAttributes :: Text -> ModifyTargetGroupAttributes

-- | The Amazon Resource Name (ARN) of the target group.
modifyTargetGroupAttributes_targetGroupArn :: Lens' ModifyTargetGroupAttributes Text

-- | The attributes.
modifyTargetGroupAttributes_attributes :: Lens' ModifyTargetGroupAttributes [TargetGroupAttribute]

-- | <i>See:</i> <a>newModifyTargetGroupAttributesResponse</a> smart
--   constructor.
data ModifyTargetGroupAttributesResponse
ModifyTargetGroupAttributesResponse' :: Maybe [TargetGroupAttribute] -> Int -> ModifyTargetGroupAttributesResponse

-- | Information about the attributes.
[$sel:attributes:ModifyTargetGroupAttributesResponse'] :: ModifyTargetGroupAttributesResponse -> Maybe [TargetGroupAttribute]

-- | The response's http status code.
[$sel:httpStatus:ModifyTargetGroupAttributesResponse'] :: ModifyTargetGroupAttributesResponse -> Int

-- | Create a value of <a>ModifyTargetGroupAttributesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributes:ModifyTargetGroupAttributes'</a>,
--   <a>modifyTargetGroupAttributesResponse_attributes</a> - Information
--   about the attributes.
--   
--   <a>$sel:httpStatus:ModifyTargetGroupAttributesResponse'</a>,
--   <a>modifyTargetGroupAttributesResponse_httpStatus</a> - The response's
--   http status code.
newModifyTargetGroupAttributesResponse :: Int -> ModifyTargetGroupAttributesResponse

-- | Information about the attributes.
modifyTargetGroupAttributesResponse_attributes :: Lens' ModifyTargetGroupAttributesResponse (Maybe [TargetGroupAttribute])

-- | The response's http status code.
modifyTargetGroupAttributesResponse_httpStatus :: Lens' ModifyTargetGroupAttributesResponse Int
instance GHC.Generics.Generic Network.AWS.ELBV2.ModifyTargetGroupAttributes.ModifyTargetGroupAttributes
instance GHC.Show.Show Network.AWS.ELBV2.ModifyTargetGroupAttributes.ModifyTargetGroupAttributes
instance GHC.Read.Read Network.AWS.ELBV2.ModifyTargetGroupAttributes.ModifyTargetGroupAttributes
instance GHC.Classes.Eq Network.AWS.ELBV2.ModifyTargetGroupAttributes.ModifyTargetGroupAttributes
instance GHC.Generics.Generic Network.AWS.ELBV2.ModifyTargetGroupAttributes.ModifyTargetGroupAttributesResponse
instance GHC.Show.Show Network.AWS.ELBV2.ModifyTargetGroupAttributes.ModifyTargetGroupAttributesResponse
instance GHC.Read.Read Network.AWS.ELBV2.ModifyTargetGroupAttributes.ModifyTargetGroupAttributesResponse
instance GHC.Classes.Eq Network.AWS.ELBV2.ModifyTargetGroupAttributes.ModifyTargetGroupAttributesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ELBV2.ModifyTargetGroupAttributes.ModifyTargetGroupAttributes
instance Control.DeepSeq.NFData Network.AWS.ELBV2.ModifyTargetGroupAttributes.ModifyTargetGroupAttributesResponse
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.ModifyTargetGroupAttributes.ModifyTargetGroupAttributes
instance Control.DeepSeq.NFData Network.AWS.ELBV2.ModifyTargetGroupAttributes.ModifyTargetGroupAttributes
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ELBV2.ModifyTargetGroupAttributes.ModifyTargetGroupAttributes
instance Network.AWS.Data.Path.ToPath Network.AWS.ELBV2.ModifyTargetGroupAttributes.ModifyTargetGroupAttributes
instance Network.AWS.Data.Query.ToQuery Network.AWS.ELBV2.ModifyTargetGroupAttributes.ModifyTargetGroupAttributes


-- | Modifies the health checks used when evaluating the health state of
--   the targets in the specified target group.
module Network.AWS.ELBV2.ModifyTargetGroup

-- | <i>See:</i> <a>newModifyTargetGroup</a> smart constructor.
data ModifyTargetGroup
ModifyTargetGroup' :: Maybe Matcher -> Maybe Text -> Maybe Bool -> Maybe Natural -> Maybe Natural -> Maybe Natural -> Maybe ProtocolEnum -> Maybe Natural -> Maybe Text -> Text -> ModifyTargetGroup

-- | <ul>
--   <li><i>HTTP/HTTPS health checks</i> The HTTP or gRPC codes to use when
--   checking for a successful response from a target.</li>
--   </ul>
--   
--   With Network Load Balancers, you can't modify this setting.
[$sel:matcher:ModifyTargetGroup'] :: ModifyTargetGroup -> Maybe Matcher

-- | <ul>
--   <li><i>HTTP/HTTPS health checks</i> The destination for health checks
--   on the targets.</li>
--   <li><i>HTTP1 or HTTP2 protocol version</i> The ping path. The default
--   is /.</li>
--   <li><i>GRPC protocol version</i> The path of a custom health check
--   method with the format /package.service/method. The default is /Amazon
--   Web Services.ALB/healthcheck.</li>
--   </ul>
[$sel:healthCheckPath:ModifyTargetGroup'] :: ModifyTargetGroup -> Maybe Text

-- | Indicates whether health checks are enabled.
[$sel:healthCheckEnabled:ModifyTargetGroup'] :: ModifyTargetGroup -> Maybe Bool

-- | The number of consecutive health check failures required before
--   considering the target unhealthy. For target groups with a protocol of
--   TCP or TLS, this value must be the same as the healthy threshold
--   count.
[$sel:unhealthyThresholdCount:ModifyTargetGroup'] :: ModifyTargetGroup -> Maybe Natural

-- | The approximate amount of time, in seconds, between health checks of
--   an individual target. For TCP health checks, the supported values are
--   10 or 30 seconds.
--   
--   With Network Load Balancers, you can't modify this setting.
[$sel:healthCheckIntervalSeconds:ModifyTargetGroup'] :: ModifyTargetGroup -> Maybe Natural

-- | The number of consecutive health checks successes required before
--   considering an unhealthy target healthy.
[$sel:healthyThresholdCount:ModifyTargetGroup'] :: ModifyTargetGroup -> Maybe Natural

-- | The protocol the load balancer uses when performing health checks on
--   targets. For Application Load Balancers, the default is HTTP. For
--   Network Load Balancers and Gateway Load Balancers, the default is TCP.
--   The TCP protocol is not supported for health checks if the protocol of
--   the target group is HTTP or HTTPS. It is supported for health checks
--   only if the protocol of the target group is TCP, TLS, UDP, or TCP_UDP.
--   The GENEVE, TLS, UDP, and TCP_UDP protocols are not supported for
--   health checks.
--   
--   With Network Load Balancers, you can't modify this setting.
[$sel:healthCheckProtocol:ModifyTargetGroup'] :: ModifyTargetGroup -> Maybe ProtocolEnum

-- | <ul>
--   <li><i>HTTP/HTTPS health checks</i> The amount of time, in seconds,
--   during which no response means a failed health check.</li>
--   </ul>
--   
--   With Network Load Balancers, you can't modify this setting.
[$sel:healthCheckTimeoutSeconds:ModifyTargetGroup'] :: ModifyTargetGroup -> Maybe Natural

-- | The port the load balancer uses when performing health checks on
--   targets.
[$sel:healthCheckPort:ModifyTargetGroup'] :: ModifyTargetGroup -> Maybe Text

-- | The Amazon Resource Name (ARN) of the target group.
[$sel:targetGroupArn:ModifyTargetGroup'] :: ModifyTargetGroup -> Text

-- | Create a value of <a>ModifyTargetGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:matcher:ModifyTargetGroup'</a>,
--   <a>modifyTargetGroup_matcher</a> - [HTTP/HTTPS health checks] The HTTP
--   or gRPC codes to use when checking for a successful response from a
--   target.
--   
--   With Network Load Balancers, you can't modify this setting.
--   
--   <a>$sel:healthCheckPath:ModifyTargetGroup'</a>,
--   <a>modifyTargetGroup_healthCheckPath</a> - [HTTP/HTTPS health checks]
--   The destination for health checks on the targets.
--   
--   <ul>
--   <li><i>HTTP1 or HTTP2 protocol version</i> The ping path. The default
--   is /.</li>
--   <li><i>GRPC protocol version</i> The path of a custom health check
--   method with the format /package.service/method. The default is /Amazon
--   Web Services.ALB/healthcheck.</li>
--   </ul>
--   
--   <a>$sel:healthCheckEnabled:ModifyTargetGroup'</a>,
--   <a>modifyTargetGroup_healthCheckEnabled</a> - Indicates whether health
--   checks are enabled.
--   
--   <a>$sel:unhealthyThresholdCount:ModifyTargetGroup'</a>,
--   <a>modifyTargetGroup_unhealthyThresholdCount</a> - The number of
--   consecutive health check failures required before considering the
--   target unhealthy. For target groups with a protocol of TCP or TLS,
--   this value must be the same as the healthy threshold count.
--   
--   <a>$sel:healthCheckIntervalSeconds:ModifyTargetGroup'</a>,
--   <a>modifyTargetGroup_healthCheckIntervalSeconds</a> - The approximate
--   amount of time, in seconds, between health checks of an individual
--   target. For TCP health checks, the supported values are 10 or 30
--   seconds.
--   
--   With Network Load Balancers, you can't modify this setting.
--   
--   <a>$sel:healthyThresholdCount:ModifyTargetGroup'</a>,
--   <a>modifyTargetGroup_healthyThresholdCount</a> - The number of
--   consecutive health checks successes required before considering an
--   unhealthy target healthy.
--   
--   <a>$sel:healthCheckProtocol:ModifyTargetGroup'</a>,
--   <a>modifyTargetGroup_healthCheckProtocol</a> - The protocol the load
--   balancer uses when performing health checks on targets. For
--   Application Load Balancers, the default is HTTP. For Network Load
--   Balancers and Gateway Load Balancers, the default is TCP. The TCP
--   protocol is not supported for health checks if the protocol of the
--   target group is HTTP or HTTPS. It is supported for health checks only
--   if the protocol of the target group is TCP, TLS, UDP, or TCP_UDP. The
--   GENEVE, TLS, UDP, and TCP_UDP protocols are not supported for health
--   checks.
--   
--   With Network Load Balancers, you can't modify this setting.
--   
--   <a>$sel:healthCheckTimeoutSeconds:ModifyTargetGroup'</a>,
--   <a>modifyTargetGroup_healthCheckTimeoutSeconds</a> - [HTTP/HTTPS
--   health checks] The amount of time, in seconds, during which no
--   response means a failed health check.
--   
--   With Network Load Balancers, you can't modify this setting.
--   
--   <a>$sel:healthCheckPort:ModifyTargetGroup'</a>,
--   <a>modifyTargetGroup_healthCheckPort</a> - The port the load balancer
--   uses when performing health checks on targets.
--   
--   <a>$sel:targetGroupArn:ModifyTargetGroup'</a>,
--   <a>modifyTargetGroup_targetGroupArn</a> - The Amazon Resource Name
--   (ARN) of the target group.
newModifyTargetGroup :: Text -> ModifyTargetGroup

-- | <ul>
--   <li><i>HTTP/HTTPS health checks</i> The HTTP or gRPC codes to use when
--   checking for a successful response from a target.</li>
--   </ul>
--   
--   With Network Load Balancers, you can't modify this setting.
modifyTargetGroup_matcher :: Lens' ModifyTargetGroup (Maybe Matcher)

-- | <ul>
--   <li><i>HTTP/HTTPS health checks</i> The destination for health checks
--   on the targets.</li>
--   <li><i>HTTP1 or HTTP2 protocol version</i> The ping path. The default
--   is /.</li>
--   <li><i>GRPC protocol version</i> The path of a custom health check
--   method with the format /package.service/method. The default is /Amazon
--   Web Services.ALB/healthcheck.</li>
--   </ul>
modifyTargetGroup_healthCheckPath :: Lens' ModifyTargetGroup (Maybe Text)

-- | Indicates whether health checks are enabled.
modifyTargetGroup_healthCheckEnabled :: Lens' ModifyTargetGroup (Maybe Bool)

-- | The number of consecutive health check failures required before
--   considering the target unhealthy. For target groups with a protocol of
--   TCP or TLS, this value must be the same as the healthy threshold
--   count.
modifyTargetGroup_unhealthyThresholdCount :: Lens' ModifyTargetGroup (Maybe Natural)

-- | The approximate amount of time, in seconds, between health checks of
--   an individual target. For TCP health checks, the supported values are
--   10 or 30 seconds.
--   
--   With Network Load Balancers, you can't modify this setting.
modifyTargetGroup_healthCheckIntervalSeconds :: Lens' ModifyTargetGroup (Maybe Natural)

-- | The number of consecutive health checks successes required before
--   considering an unhealthy target healthy.
modifyTargetGroup_healthyThresholdCount :: Lens' ModifyTargetGroup (Maybe Natural)

-- | The protocol the load balancer uses when performing health checks on
--   targets. For Application Load Balancers, the default is HTTP. For
--   Network Load Balancers and Gateway Load Balancers, the default is TCP.
--   The TCP protocol is not supported for health checks if the protocol of
--   the target group is HTTP or HTTPS. It is supported for health checks
--   only if the protocol of the target group is TCP, TLS, UDP, or TCP_UDP.
--   The GENEVE, TLS, UDP, and TCP_UDP protocols are not supported for
--   health checks.
--   
--   With Network Load Balancers, you can't modify this setting.
modifyTargetGroup_healthCheckProtocol :: Lens' ModifyTargetGroup (Maybe ProtocolEnum)

-- | <ul>
--   <li><i>HTTP/HTTPS health checks</i> The amount of time, in seconds,
--   during which no response means a failed health check.</li>
--   </ul>
--   
--   With Network Load Balancers, you can't modify this setting.
modifyTargetGroup_healthCheckTimeoutSeconds :: Lens' ModifyTargetGroup (Maybe Natural)

-- | The port the load balancer uses when performing health checks on
--   targets.
modifyTargetGroup_healthCheckPort :: Lens' ModifyTargetGroup (Maybe Text)

-- | The Amazon Resource Name (ARN) of the target group.
modifyTargetGroup_targetGroupArn :: Lens' ModifyTargetGroup Text

-- | <i>See:</i> <a>newModifyTargetGroupResponse</a> smart constructor.
data ModifyTargetGroupResponse
ModifyTargetGroupResponse' :: Maybe [TargetGroup] -> Int -> ModifyTargetGroupResponse

-- | Information about the modified target group.
[$sel:targetGroups:ModifyTargetGroupResponse'] :: ModifyTargetGroupResponse -> Maybe [TargetGroup]

-- | The response's http status code.
[$sel:httpStatus:ModifyTargetGroupResponse'] :: ModifyTargetGroupResponse -> Int

-- | Create a value of <a>ModifyTargetGroupResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetGroups:ModifyTargetGroupResponse'</a>,
--   <a>modifyTargetGroupResponse_targetGroups</a> - Information about the
--   modified target group.
--   
--   <a>$sel:httpStatus:ModifyTargetGroupResponse'</a>,
--   <a>modifyTargetGroupResponse_httpStatus</a> - The response's http
--   status code.
newModifyTargetGroupResponse :: Int -> ModifyTargetGroupResponse

-- | Information about the modified target group.
modifyTargetGroupResponse_targetGroups :: Lens' ModifyTargetGroupResponse (Maybe [TargetGroup])

-- | The response's http status code.
modifyTargetGroupResponse_httpStatus :: Lens' ModifyTargetGroupResponse Int
instance GHC.Generics.Generic Network.AWS.ELBV2.ModifyTargetGroup.ModifyTargetGroup
instance GHC.Show.Show Network.AWS.ELBV2.ModifyTargetGroup.ModifyTargetGroup
instance GHC.Read.Read Network.AWS.ELBV2.ModifyTargetGroup.ModifyTargetGroup
instance GHC.Classes.Eq Network.AWS.ELBV2.ModifyTargetGroup.ModifyTargetGroup
instance GHC.Generics.Generic Network.AWS.ELBV2.ModifyTargetGroup.ModifyTargetGroupResponse
instance GHC.Show.Show Network.AWS.ELBV2.ModifyTargetGroup.ModifyTargetGroupResponse
instance GHC.Read.Read Network.AWS.ELBV2.ModifyTargetGroup.ModifyTargetGroupResponse
instance GHC.Classes.Eq Network.AWS.ELBV2.ModifyTargetGroup.ModifyTargetGroupResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ELBV2.ModifyTargetGroup.ModifyTargetGroup
instance Control.DeepSeq.NFData Network.AWS.ELBV2.ModifyTargetGroup.ModifyTargetGroupResponse
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.ModifyTargetGroup.ModifyTargetGroup
instance Control.DeepSeq.NFData Network.AWS.ELBV2.ModifyTargetGroup.ModifyTargetGroup
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ELBV2.ModifyTargetGroup.ModifyTargetGroup
instance Network.AWS.Data.Path.ToPath Network.AWS.ELBV2.ModifyTargetGroup.ModifyTargetGroup
instance Network.AWS.Data.Query.ToQuery Network.AWS.ELBV2.ModifyTargetGroup.ModifyTargetGroup


-- | Replaces the specified properties of the specified rule. Any
--   properties that you do not specify are unchanged.
--   
--   To add an item to a list, remove an item from a list, or update an
--   item in a list, you must provide the entire list. For example, to add
--   an action, specify a list with the current actions plus the new
--   action.
module Network.AWS.ELBV2.ModifyRule

-- | <i>See:</i> <a>newModifyRule</a> smart constructor.
data ModifyRule
ModifyRule' :: Maybe [Action] -> Maybe [RuleCondition] -> Text -> ModifyRule

-- | The actions.
[$sel:actions:ModifyRule'] :: ModifyRule -> Maybe [Action]

-- | The conditions.
[$sel:conditions:ModifyRule'] :: ModifyRule -> Maybe [RuleCondition]

-- | The Amazon Resource Name (ARN) of the rule.
[$sel:ruleArn:ModifyRule'] :: ModifyRule -> Text

-- | Create a value of <a>ModifyRule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:actions:ModifyRule'</a>, <a>modifyRule_actions</a> - The
--   actions.
--   
--   <a>$sel:conditions:ModifyRule'</a>, <a>modifyRule_conditions</a> - The
--   conditions.
--   
--   <a>$sel:ruleArn:ModifyRule'</a>, <a>modifyRule_ruleArn</a> - The
--   Amazon Resource Name (ARN) of the rule.
newModifyRule :: Text -> ModifyRule

-- | The actions.
modifyRule_actions :: Lens' ModifyRule (Maybe [Action])

-- | The conditions.
modifyRule_conditions :: Lens' ModifyRule (Maybe [RuleCondition])

-- | The Amazon Resource Name (ARN) of the rule.
modifyRule_ruleArn :: Lens' ModifyRule Text

-- | <i>See:</i> <a>newModifyRuleResponse</a> smart constructor.
data ModifyRuleResponse
ModifyRuleResponse' :: Maybe [Rule] -> Int -> ModifyRuleResponse

-- | Information about the modified rule.
[$sel:rules:ModifyRuleResponse'] :: ModifyRuleResponse -> Maybe [Rule]

-- | The response's http status code.
[$sel:httpStatus:ModifyRuleResponse'] :: ModifyRuleResponse -> Int

-- | Create a value of <a>ModifyRuleResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:rules:ModifyRuleResponse'</a>, <a>modifyRuleResponse_rules</a>
--   - Information about the modified rule.
--   
--   <a>$sel:httpStatus:ModifyRuleResponse'</a>,
--   <a>modifyRuleResponse_httpStatus</a> - The response's http status
--   code.
newModifyRuleResponse :: Int -> ModifyRuleResponse

-- | Information about the modified rule.
modifyRuleResponse_rules :: Lens' ModifyRuleResponse (Maybe [Rule])

-- | The response's http status code.
modifyRuleResponse_httpStatus :: Lens' ModifyRuleResponse Int
instance GHC.Generics.Generic Network.AWS.ELBV2.ModifyRule.ModifyRule
instance GHC.Show.Show Network.AWS.ELBV2.ModifyRule.ModifyRule
instance GHC.Read.Read Network.AWS.ELBV2.ModifyRule.ModifyRule
instance GHC.Classes.Eq Network.AWS.ELBV2.ModifyRule.ModifyRule
instance GHC.Generics.Generic Network.AWS.ELBV2.ModifyRule.ModifyRuleResponse
instance GHC.Show.Show Network.AWS.ELBV2.ModifyRule.ModifyRuleResponse
instance GHC.Read.Read Network.AWS.ELBV2.ModifyRule.ModifyRuleResponse
instance GHC.Classes.Eq Network.AWS.ELBV2.ModifyRule.ModifyRuleResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ELBV2.ModifyRule.ModifyRule
instance Control.DeepSeq.NFData Network.AWS.ELBV2.ModifyRule.ModifyRuleResponse
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.ModifyRule.ModifyRule
instance Control.DeepSeq.NFData Network.AWS.ELBV2.ModifyRule.ModifyRule
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ELBV2.ModifyRule.ModifyRule
instance Network.AWS.Data.Path.ToPath Network.AWS.ELBV2.ModifyRule.ModifyRule
instance Network.AWS.Data.Query.ToQuery Network.AWS.ELBV2.ModifyRule.ModifyRule


-- | Modifies the specified attributes of the specified Application Load
--   Balancer, Network Load Balancer, or Gateway Load Balancer.
--   
--   If any of the specified attributes can't be modified as requested, the
--   call fails. Any existing attributes that you do not modify retain
--   their current values.
module Network.AWS.ELBV2.ModifyLoadBalancerAttributes

-- | <i>See:</i> <a>newModifyLoadBalancerAttributes</a> smart constructor.
data ModifyLoadBalancerAttributes
ModifyLoadBalancerAttributes' :: Text -> [LoadBalancerAttribute] -> ModifyLoadBalancerAttributes

-- | The Amazon Resource Name (ARN) of the load balancer.
[$sel:loadBalancerArn:ModifyLoadBalancerAttributes'] :: ModifyLoadBalancerAttributes -> Text

-- | The load balancer attributes.
[$sel:attributes:ModifyLoadBalancerAttributes'] :: ModifyLoadBalancerAttributes -> [LoadBalancerAttribute]

-- | Create a value of <a>ModifyLoadBalancerAttributes</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:loadBalancerArn:ModifyLoadBalancerAttributes'</a>,
--   <a>modifyLoadBalancerAttributes_loadBalancerArn</a> - The Amazon
--   Resource Name (ARN) of the load balancer.
--   
--   <a>$sel:attributes:ModifyLoadBalancerAttributes'</a>,
--   <a>modifyLoadBalancerAttributes_attributes</a> - The load balancer
--   attributes.
newModifyLoadBalancerAttributes :: Text -> ModifyLoadBalancerAttributes

-- | The Amazon Resource Name (ARN) of the load balancer.
modifyLoadBalancerAttributes_loadBalancerArn :: Lens' ModifyLoadBalancerAttributes Text

-- | The load balancer attributes.
modifyLoadBalancerAttributes_attributes :: Lens' ModifyLoadBalancerAttributes [LoadBalancerAttribute]

-- | <i>See:</i> <a>newModifyLoadBalancerAttributesResponse</a> smart
--   constructor.
data ModifyLoadBalancerAttributesResponse
ModifyLoadBalancerAttributesResponse' :: Maybe [LoadBalancerAttribute] -> Int -> ModifyLoadBalancerAttributesResponse

-- | Information about the load balancer attributes.
[$sel:attributes:ModifyLoadBalancerAttributesResponse'] :: ModifyLoadBalancerAttributesResponse -> Maybe [LoadBalancerAttribute]

-- | The response's http status code.
[$sel:httpStatus:ModifyLoadBalancerAttributesResponse'] :: ModifyLoadBalancerAttributesResponse -> Int

-- | Create a value of <a>ModifyLoadBalancerAttributesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributes:ModifyLoadBalancerAttributes'</a>,
--   <a>modifyLoadBalancerAttributesResponse_attributes</a> - Information
--   about the load balancer attributes.
--   
--   <a>$sel:httpStatus:ModifyLoadBalancerAttributesResponse'</a>,
--   <a>modifyLoadBalancerAttributesResponse_httpStatus</a> - The
--   response's http status code.
newModifyLoadBalancerAttributesResponse :: Int -> ModifyLoadBalancerAttributesResponse

-- | Information about the load balancer attributes.
modifyLoadBalancerAttributesResponse_attributes :: Lens' ModifyLoadBalancerAttributesResponse (Maybe [LoadBalancerAttribute])

-- | The response's http status code.
modifyLoadBalancerAttributesResponse_httpStatus :: Lens' ModifyLoadBalancerAttributesResponse Int
instance GHC.Generics.Generic Network.AWS.ELBV2.ModifyLoadBalancerAttributes.ModifyLoadBalancerAttributes
instance GHC.Show.Show Network.AWS.ELBV2.ModifyLoadBalancerAttributes.ModifyLoadBalancerAttributes
instance GHC.Read.Read Network.AWS.ELBV2.ModifyLoadBalancerAttributes.ModifyLoadBalancerAttributes
instance GHC.Classes.Eq Network.AWS.ELBV2.ModifyLoadBalancerAttributes.ModifyLoadBalancerAttributes
instance GHC.Generics.Generic Network.AWS.ELBV2.ModifyLoadBalancerAttributes.ModifyLoadBalancerAttributesResponse
instance GHC.Show.Show Network.AWS.ELBV2.ModifyLoadBalancerAttributes.ModifyLoadBalancerAttributesResponse
instance GHC.Read.Read Network.AWS.ELBV2.ModifyLoadBalancerAttributes.ModifyLoadBalancerAttributesResponse
instance GHC.Classes.Eq Network.AWS.ELBV2.ModifyLoadBalancerAttributes.ModifyLoadBalancerAttributesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ELBV2.ModifyLoadBalancerAttributes.ModifyLoadBalancerAttributes
instance Control.DeepSeq.NFData Network.AWS.ELBV2.ModifyLoadBalancerAttributes.ModifyLoadBalancerAttributesResponse
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.ModifyLoadBalancerAttributes.ModifyLoadBalancerAttributes
instance Control.DeepSeq.NFData Network.AWS.ELBV2.ModifyLoadBalancerAttributes.ModifyLoadBalancerAttributes
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ELBV2.ModifyLoadBalancerAttributes.ModifyLoadBalancerAttributes
instance Network.AWS.Data.Path.ToPath Network.AWS.ELBV2.ModifyLoadBalancerAttributes.ModifyLoadBalancerAttributes
instance Network.AWS.Data.Query.ToQuery Network.AWS.ELBV2.ModifyLoadBalancerAttributes.ModifyLoadBalancerAttributes


-- | Replaces the specified properties of the specified listener. Any
--   properties that you do not specify remain unchanged.
--   
--   Changing the protocol from HTTPS to HTTP, or from TLS to TCP, removes
--   the security policy and default certificate properties. If you change
--   the protocol from HTTP to HTTPS, or from TCP to TLS, you must add the
--   security policy and default certificate properties.
--   
--   To add an item to a list, remove an item from a list, or update an
--   item in a list, you must provide the entire list. For example, to add
--   an action, specify a list with the current actions plus the new
--   action.
module Network.AWS.ELBV2.ModifyListener

-- | <i>See:</i> <a>newModifyListener</a> smart constructor.
data ModifyListener
ModifyListener' :: Maybe Text -> Maybe ProtocolEnum -> Maybe [Action] -> Maybe [Certificate] -> Maybe [Text] -> Maybe Natural -> Text -> ModifyListener

-- | <ul>
--   <li><i>HTTPS and TLS listeners</i> The security policy that defines
--   which protocols and ciphers are supported.</li>
--   </ul>
--   
--   For more information, see <a>Security policies</a> in the
--   <i>Application Load Balancers Guide</i> or <a>Security policies</a> in
--   the <i>Network Load Balancers Guide</i>.
[$sel:sslPolicy:ModifyListener'] :: ModifyListener -> Maybe Text

-- | The protocol for connections from clients to the load balancer.
--   Application Load Balancers support the HTTP and HTTPS protocols.
--   Network Load Balancers support the TCP, TLS, UDP, and TCP_UDP
--   protocols. You can’t change the protocol to UDP or TCP_UDP if
--   dual-stack mode is enabled. You cannot specify a protocol for a
--   Gateway Load Balancer.
[$sel:protocol:ModifyListener'] :: ModifyListener -> Maybe ProtocolEnum

-- | The actions for the default rule.
[$sel:defaultActions:ModifyListener'] :: ModifyListener -> Maybe [Action]

-- | <ul>
--   <li><i>HTTPS and TLS listeners</i> The default certificate for the
--   listener. You must provide exactly one certificate. Set
--   <tt>CertificateArn</tt> to the certificate ARN but do not set
--   <tt>IsDefault</tt>.</li>
--   </ul>
[$sel:certificates:ModifyListener'] :: ModifyListener -> Maybe [Certificate]

-- | <ul>
--   <li><i>TLS listeners</i> The name of the Application-Layer Protocol
--   Negotiation (ALPN) policy. You can specify one policy name. The
--   following are the possible values:</li>
--   </ul>
--   
--   <ul>
--   <li><pre>HTTP1Only</pre></li>
--   <li><pre>HTTP2Only</pre></li>
--   <li><pre>HTTP2Optional</pre></li>
--   <li><pre>HTTP2Preferred</pre></li>
--   <li><pre>None</pre></li>
--   </ul>
--   
--   For more information, see <a>ALPN policies</a> in the <i>Network Load
--   Balancers Guide</i>.
[$sel:alpnPolicy:ModifyListener'] :: ModifyListener -> Maybe [Text]

-- | The port for connections from clients to the load balancer. You cannot
--   specify a port for a Gateway Load Balancer.
[$sel:port:ModifyListener'] :: ModifyListener -> Maybe Natural

-- | The Amazon Resource Name (ARN) of the listener.
[$sel:listenerArn:ModifyListener'] :: ModifyListener -> Text

-- | Create a value of <a>ModifyListener</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sslPolicy:ModifyListener'</a>, <a>modifyListener_sslPolicy</a>
--   - [HTTPS and TLS listeners] The security policy that defines which
--   protocols and ciphers are supported.
--   
--   For more information, see <a>Security policies</a> in the
--   <i>Application Load Balancers Guide</i> or <a>Security policies</a> in
--   the <i>Network Load Balancers Guide</i>.
--   
--   <a>$sel:protocol:ModifyListener'</a>, <a>modifyListener_protocol</a> -
--   The protocol for connections from clients to the load balancer.
--   Application Load Balancers support the HTTP and HTTPS protocols.
--   Network Load Balancers support the TCP, TLS, UDP, and TCP_UDP
--   protocols. You can’t change the protocol to UDP or TCP_UDP if
--   dual-stack mode is enabled. You cannot specify a protocol for a
--   Gateway Load Balancer.
--   
--   <a>$sel:defaultActions:ModifyListener'</a>,
--   <a>modifyListener_defaultActions</a> - The actions for the default
--   rule.
--   
--   <a>$sel:certificates:ModifyListener'</a>,
--   <a>modifyListener_certificates</a> - [HTTPS and TLS listeners] The
--   default certificate for the listener. You must provide exactly one
--   certificate. Set <tt>CertificateArn</tt> to the certificate ARN but do
--   not set <tt>IsDefault</tt>.
--   
--   <a>$sel:alpnPolicy:ModifyListener'</a>,
--   <a>modifyListener_alpnPolicy</a> - [TLS listeners] The name of the
--   Application-Layer Protocol Negotiation (ALPN) policy. You can specify
--   one policy name. The following are the possible values:
--   
--   <ul>
--   <li><pre>HTTP1Only</pre></li>
--   <li><pre>HTTP2Only</pre></li>
--   <li><pre>HTTP2Optional</pre></li>
--   <li><pre>HTTP2Preferred</pre></li>
--   <li><pre>None</pre></li>
--   </ul>
--   
--   For more information, see <a>ALPN policies</a> in the <i>Network Load
--   Balancers Guide</i>.
--   
--   <a>$sel:port:ModifyListener'</a>, <a>modifyListener_port</a> - The
--   port for connections from clients to the load balancer. You cannot
--   specify a port for a Gateway Load Balancer.
--   
--   <a>$sel:listenerArn:ModifyListener'</a>,
--   <a>modifyListener_listenerArn</a> - The Amazon Resource Name (ARN) of
--   the listener.
newModifyListener :: Text -> ModifyListener

-- | <ul>
--   <li><i>HTTPS and TLS listeners</i> The security policy that defines
--   which protocols and ciphers are supported.</li>
--   </ul>
--   
--   For more information, see <a>Security policies</a> in the
--   <i>Application Load Balancers Guide</i> or <a>Security policies</a> in
--   the <i>Network Load Balancers Guide</i>.
modifyListener_sslPolicy :: Lens' ModifyListener (Maybe Text)

-- | The protocol for connections from clients to the load balancer.
--   Application Load Balancers support the HTTP and HTTPS protocols.
--   Network Load Balancers support the TCP, TLS, UDP, and TCP_UDP
--   protocols. You can’t change the protocol to UDP or TCP_UDP if
--   dual-stack mode is enabled. You cannot specify a protocol for a
--   Gateway Load Balancer.
modifyListener_protocol :: Lens' ModifyListener (Maybe ProtocolEnum)

-- | The actions for the default rule.
modifyListener_defaultActions :: Lens' ModifyListener (Maybe [Action])

-- | <ul>
--   <li><i>HTTPS and TLS listeners</i> The default certificate for the
--   listener. You must provide exactly one certificate. Set
--   <tt>CertificateArn</tt> to the certificate ARN but do not set
--   <tt>IsDefault</tt>.</li>
--   </ul>
modifyListener_certificates :: Lens' ModifyListener (Maybe [Certificate])

-- | <ul>
--   <li><i>TLS listeners</i> The name of the Application-Layer Protocol
--   Negotiation (ALPN) policy. You can specify one policy name. The
--   following are the possible values:</li>
--   </ul>
--   
--   <ul>
--   <li><pre>HTTP1Only</pre></li>
--   <li><pre>HTTP2Only</pre></li>
--   <li><pre>HTTP2Optional</pre></li>
--   <li><pre>HTTP2Preferred</pre></li>
--   <li><pre>None</pre></li>
--   </ul>
--   
--   For more information, see <a>ALPN policies</a> in the <i>Network Load
--   Balancers Guide</i>.
modifyListener_alpnPolicy :: Lens' ModifyListener (Maybe [Text])

-- | The port for connections from clients to the load balancer. You cannot
--   specify a port for a Gateway Load Balancer.
modifyListener_port :: Lens' ModifyListener (Maybe Natural)

-- | The Amazon Resource Name (ARN) of the listener.
modifyListener_listenerArn :: Lens' ModifyListener Text

-- | <i>See:</i> <a>newModifyListenerResponse</a> smart constructor.
data ModifyListenerResponse
ModifyListenerResponse' :: Maybe [Listener] -> Int -> ModifyListenerResponse

-- | Information about the modified listener.
[$sel:listeners:ModifyListenerResponse'] :: ModifyListenerResponse -> Maybe [Listener]

-- | The response's http status code.
[$sel:httpStatus:ModifyListenerResponse'] :: ModifyListenerResponse -> Int

-- | Create a value of <a>ModifyListenerResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:listeners:ModifyListenerResponse'</a>,
--   <a>modifyListenerResponse_listeners</a> - Information about the
--   modified listener.
--   
--   <a>$sel:httpStatus:ModifyListenerResponse'</a>,
--   <a>modifyListenerResponse_httpStatus</a> - The response's http status
--   code.
newModifyListenerResponse :: Int -> ModifyListenerResponse

-- | Information about the modified listener.
modifyListenerResponse_listeners :: Lens' ModifyListenerResponse (Maybe [Listener])

-- | The response's http status code.
modifyListenerResponse_httpStatus :: Lens' ModifyListenerResponse Int
instance GHC.Generics.Generic Network.AWS.ELBV2.ModifyListener.ModifyListener
instance GHC.Show.Show Network.AWS.ELBV2.ModifyListener.ModifyListener
instance GHC.Read.Read Network.AWS.ELBV2.ModifyListener.ModifyListener
instance GHC.Classes.Eq Network.AWS.ELBV2.ModifyListener.ModifyListener
instance GHC.Generics.Generic Network.AWS.ELBV2.ModifyListener.ModifyListenerResponse
instance GHC.Show.Show Network.AWS.ELBV2.ModifyListener.ModifyListenerResponse
instance GHC.Read.Read Network.AWS.ELBV2.ModifyListener.ModifyListenerResponse
instance GHC.Classes.Eq Network.AWS.ELBV2.ModifyListener.ModifyListenerResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ELBV2.ModifyListener.ModifyListener
instance Control.DeepSeq.NFData Network.AWS.ELBV2.ModifyListener.ModifyListenerResponse
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.ModifyListener.ModifyListener
instance Control.DeepSeq.NFData Network.AWS.ELBV2.ModifyListener.ModifyListener
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ELBV2.ModifyListener.ModifyListener
instance Network.AWS.Data.Path.ToPath Network.AWS.ELBV2.ModifyListener.ModifyListener
instance Network.AWS.Data.Query.ToQuery Network.AWS.ELBV2.ModifyListener.ModifyListener


-- | Describes the health of the specified targets or all of your targets.
module Network.AWS.ELBV2.DescribeTargetHealth

-- | <i>See:</i> <a>newDescribeTargetHealth</a> smart constructor.
data DescribeTargetHealth
DescribeTargetHealth' :: Maybe [TargetDescription] -> Text -> DescribeTargetHealth

-- | The targets.
[$sel:targets:DescribeTargetHealth'] :: DescribeTargetHealth -> Maybe [TargetDescription]

-- | The Amazon Resource Name (ARN) of the target group.
[$sel:targetGroupArn:DescribeTargetHealth'] :: DescribeTargetHealth -> Text

-- | Create a value of <a>DescribeTargetHealth</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targets:DescribeTargetHealth'</a>,
--   <a>describeTargetHealth_targets</a> - The targets.
--   
--   <a>$sel:targetGroupArn:DescribeTargetHealth'</a>,
--   <a>describeTargetHealth_targetGroupArn</a> - The Amazon Resource Name
--   (ARN) of the target group.
newDescribeTargetHealth :: Text -> DescribeTargetHealth

-- | The targets.
describeTargetHealth_targets :: Lens' DescribeTargetHealth (Maybe [TargetDescription])

-- | The Amazon Resource Name (ARN) of the target group.
describeTargetHealth_targetGroupArn :: Lens' DescribeTargetHealth Text

-- | <i>See:</i> <a>newDescribeTargetHealthResponse</a> smart constructor.
data DescribeTargetHealthResponse
DescribeTargetHealthResponse' :: Maybe [TargetHealthDescription] -> Int -> DescribeTargetHealthResponse

-- | Information about the health of the targets.
[$sel:targetHealthDescriptions:DescribeTargetHealthResponse'] :: DescribeTargetHealthResponse -> Maybe [TargetHealthDescription]

-- | The response's http status code.
[$sel:httpStatus:DescribeTargetHealthResponse'] :: DescribeTargetHealthResponse -> Int

-- | Create a value of <a>DescribeTargetHealthResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetHealthDescriptions:DescribeTargetHealthResponse'</a>,
--   <a>describeTargetHealthResponse_targetHealthDescriptions</a> -
--   Information about the health of the targets.
--   
--   <a>$sel:httpStatus:DescribeTargetHealthResponse'</a>,
--   <a>describeTargetHealthResponse_httpStatus</a> - The response's http
--   status code.
newDescribeTargetHealthResponse :: Int -> DescribeTargetHealthResponse

-- | Information about the health of the targets.
describeTargetHealthResponse_targetHealthDescriptions :: Lens' DescribeTargetHealthResponse (Maybe [TargetHealthDescription])

-- | The response's http status code.
describeTargetHealthResponse_httpStatus :: Lens' DescribeTargetHealthResponse Int
instance GHC.Generics.Generic Network.AWS.ELBV2.DescribeTargetHealth.DescribeTargetHealth
instance GHC.Show.Show Network.AWS.ELBV2.DescribeTargetHealth.DescribeTargetHealth
instance GHC.Read.Read Network.AWS.ELBV2.DescribeTargetHealth.DescribeTargetHealth
instance GHC.Classes.Eq Network.AWS.ELBV2.DescribeTargetHealth.DescribeTargetHealth
instance GHC.Generics.Generic Network.AWS.ELBV2.DescribeTargetHealth.DescribeTargetHealthResponse
instance GHC.Show.Show Network.AWS.ELBV2.DescribeTargetHealth.DescribeTargetHealthResponse
instance GHC.Read.Read Network.AWS.ELBV2.DescribeTargetHealth.DescribeTargetHealthResponse
instance GHC.Classes.Eq Network.AWS.ELBV2.DescribeTargetHealth.DescribeTargetHealthResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ELBV2.DescribeTargetHealth.DescribeTargetHealth
instance Control.DeepSeq.NFData Network.AWS.ELBV2.DescribeTargetHealth.DescribeTargetHealthResponse
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.DescribeTargetHealth.DescribeTargetHealth
instance Control.DeepSeq.NFData Network.AWS.ELBV2.DescribeTargetHealth.DescribeTargetHealth
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ELBV2.DescribeTargetHealth.DescribeTargetHealth
instance Network.AWS.Data.Path.ToPath Network.AWS.ELBV2.DescribeTargetHealth.DescribeTargetHealth
instance Network.AWS.Data.Query.ToQuery Network.AWS.ELBV2.DescribeTargetHealth.DescribeTargetHealth


-- | Describes the specified target groups or all of your target groups. By
--   default, all target groups are described. Alternatively, you can
--   specify one of the following to filter the results: the ARN of the
--   load balancer, the names of one or more target groups, or the ARNs of
--   one or more target groups.
--   
--   This operation returns paginated results.
module Network.AWS.ELBV2.DescribeTargetGroups

-- | <i>See:</i> <a>newDescribeTargetGroups</a> smart constructor.
data DescribeTargetGroups
DescribeTargetGroups' :: Maybe [Text] -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Natural -> DescribeTargetGroups

-- | The Amazon Resource Names (ARN) of the target groups.
[$sel:targetGroupArns:DescribeTargetGroups'] :: DescribeTargetGroups -> Maybe [Text]

-- | The names of the target groups.
[$sel:names:DescribeTargetGroups'] :: DescribeTargetGroups -> Maybe [Text]

-- | The Amazon Resource Name (ARN) of the load balancer.
[$sel:loadBalancerArn:DescribeTargetGroups'] :: DescribeTargetGroups -> Maybe Text

-- | The marker for the next set of results. (You received this marker from
--   a previous call.)
[$sel:marker:DescribeTargetGroups'] :: DescribeTargetGroups -> Maybe Text

-- | The maximum number of results to return with this call.
[$sel:pageSize:DescribeTargetGroups'] :: DescribeTargetGroups -> Maybe Natural

-- | Create a value of <a>DescribeTargetGroups</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetGroupArns:DescribeTargetGroups'</a>,
--   <a>describeTargetGroups_targetGroupArns</a> - The Amazon Resource
--   Names (ARN) of the target groups.
--   
--   <a>$sel:names:DescribeTargetGroups'</a>,
--   <a>describeTargetGroups_names</a> - The names of the target groups.
--   
--   <a>$sel:loadBalancerArn:DescribeTargetGroups'</a>,
--   <a>describeTargetGroups_loadBalancerArn</a> - The Amazon Resource Name
--   (ARN) of the load balancer.
--   
--   <a>$sel:marker:DescribeTargetGroups'</a>,
--   <a>describeTargetGroups_marker</a> - The marker for the next set of
--   results. (You received this marker from a previous call.)
--   
--   <a>$sel:pageSize:DescribeTargetGroups'</a>,
--   <a>describeTargetGroups_pageSize</a> - The maximum number of results
--   to return with this call.
newDescribeTargetGroups :: DescribeTargetGroups

-- | The Amazon Resource Names (ARN) of the target groups.
describeTargetGroups_targetGroupArns :: Lens' DescribeTargetGroups (Maybe [Text])

-- | The names of the target groups.
describeTargetGroups_names :: Lens' DescribeTargetGroups (Maybe [Text])

-- | The Amazon Resource Name (ARN) of the load balancer.
describeTargetGroups_loadBalancerArn :: Lens' DescribeTargetGroups (Maybe Text)

-- | The marker for the next set of results. (You received this marker from
--   a previous call.)
describeTargetGroups_marker :: Lens' DescribeTargetGroups (Maybe Text)

-- | The maximum number of results to return with this call.
describeTargetGroups_pageSize :: Lens' DescribeTargetGroups (Maybe Natural)

-- | <i>See:</i> <a>newDescribeTargetGroupsResponse</a> smart constructor.
data DescribeTargetGroupsResponse
DescribeTargetGroupsResponse' :: Maybe Text -> Maybe [TargetGroup] -> Int -> DescribeTargetGroupsResponse

-- | If there are additional results, this is the marker for the next set
--   of results. Otherwise, this is null.
[$sel:nextMarker:DescribeTargetGroupsResponse'] :: DescribeTargetGroupsResponse -> Maybe Text

-- | Information about the target groups.
[$sel:targetGroups:DescribeTargetGroupsResponse'] :: DescribeTargetGroupsResponse -> Maybe [TargetGroup]

-- | The response's http status code.
[$sel:httpStatus:DescribeTargetGroupsResponse'] :: DescribeTargetGroupsResponse -> Int

-- | Create a value of <a>DescribeTargetGroupsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextMarker:DescribeTargetGroupsResponse'</a>,
--   <a>describeTargetGroupsResponse_nextMarker</a> - If there are
--   additional results, this is the marker for the next set of results.
--   Otherwise, this is null.
--   
--   <a>$sel:targetGroups:DescribeTargetGroupsResponse'</a>,
--   <a>describeTargetGroupsResponse_targetGroups</a> - Information about
--   the target groups.
--   
--   <a>$sel:httpStatus:DescribeTargetGroupsResponse'</a>,
--   <a>describeTargetGroupsResponse_httpStatus</a> - The response's http
--   status code.
newDescribeTargetGroupsResponse :: Int -> DescribeTargetGroupsResponse

-- | If there are additional results, this is the marker for the next set
--   of results. Otherwise, this is null.
describeTargetGroupsResponse_nextMarker :: Lens' DescribeTargetGroupsResponse (Maybe Text)

-- | Information about the target groups.
describeTargetGroupsResponse_targetGroups :: Lens' DescribeTargetGroupsResponse (Maybe [TargetGroup])

-- | The response's http status code.
describeTargetGroupsResponse_httpStatus :: Lens' DescribeTargetGroupsResponse Int
instance GHC.Generics.Generic Network.AWS.ELBV2.DescribeTargetGroups.DescribeTargetGroups
instance GHC.Show.Show Network.AWS.ELBV2.DescribeTargetGroups.DescribeTargetGroups
instance GHC.Read.Read Network.AWS.ELBV2.DescribeTargetGroups.DescribeTargetGroups
instance GHC.Classes.Eq Network.AWS.ELBV2.DescribeTargetGroups.DescribeTargetGroups
instance GHC.Generics.Generic Network.AWS.ELBV2.DescribeTargetGroups.DescribeTargetGroupsResponse
instance GHC.Show.Show Network.AWS.ELBV2.DescribeTargetGroups.DescribeTargetGroupsResponse
instance GHC.Read.Read Network.AWS.ELBV2.DescribeTargetGroups.DescribeTargetGroupsResponse
instance GHC.Classes.Eq Network.AWS.ELBV2.DescribeTargetGroups.DescribeTargetGroupsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ELBV2.DescribeTargetGroups.DescribeTargetGroups
instance Control.DeepSeq.NFData Network.AWS.ELBV2.DescribeTargetGroups.DescribeTargetGroupsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.ELBV2.DescribeTargetGroups.DescribeTargetGroups
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.DescribeTargetGroups.DescribeTargetGroups
instance Control.DeepSeq.NFData Network.AWS.ELBV2.DescribeTargetGroups.DescribeTargetGroups
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ELBV2.DescribeTargetGroups.DescribeTargetGroups
instance Network.AWS.Data.Path.ToPath Network.AWS.ELBV2.DescribeTargetGroups.DescribeTargetGroups
instance Network.AWS.Data.Query.ToQuery Network.AWS.ELBV2.DescribeTargetGroups.DescribeTargetGroups


-- | Describes the attributes for the specified target group.
--   
--   For more information, see the following:
--   
--   <ul>
--   <li><a>Target group attributes</a> in the <i>Application Load
--   Balancers Guide</i></li>
--   <li><a>Target group attributes</a> in the <i>Network Load Balancers
--   Guide</i></li>
--   <li><a>Target group attributes</a> in the <i>Gateway Load Balancers
--   Guide</i></li>
--   </ul>
module Network.AWS.ELBV2.DescribeTargetGroupAttributes

-- | <i>See:</i> <a>newDescribeTargetGroupAttributes</a> smart constructor.
data DescribeTargetGroupAttributes
DescribeTargetGroupAttributes' :: Text -> DescribeTargetGroupAttributes

-- | The Amazon Resource Name (ARN) of the target group.
[$sel:targetGroupArn:DescribeTargetGroupAttributes'] :: DescribeTargetGroupAttributes -> Text

-- | Create a value of <a>DescribeTargetGroupAttributes</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetGroupArn:DescribeTargetGroupAttributes'</a>,
--   <a>describeTargetGroupAttributes_targetGroupArn</a> - The Amazon
--   Resource Name (ARN) of the target group.
newDescribeTargetGroupAttributes :: Text -> DescribeTargetGroupAttributes

-- | The Amazon Resource Name (ARN) of the target group.
describeTargetGroupAttributes_targetGroupArn :: Lens' DescribeTargetGroupAttributes Text

-- | <i>See:</i> <a>newDescribeTargetGroupAttributesResponse</a> smart
--   constructor.
data DescribeTargetGroupAttributesResponse
DescribeTargetGroupAttributesResponse' :: Maybe [TargetGroupAttribute] -> Int -> DescribeTargetGroupAttributesResponse

-- | Information about the target group attributes
[$sel:attributes:DescribeTargetGroupAttributesResponse'] :: DescribeTargetGroupAttributesResponse -> Maybe [TargetGroupAttribute]

-- | The response's http status code.
[$sel:httpStatus:DescribeTargetGroupAttributesResponse'] :: DescribeTargetGroupAttributesResponse -> Int

-- | Create a value of <a>DescribeTargetGroupAttributesResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributes:DescribeTargetGroupAttributesResponse'</a>,
--   <a>describeTargetGroupAttributesResponse_attributes</a> - Information
--   about the target group attributes
--   
--   <a>$sel:httpStatus:DescribeTargetGroupAttributesResponse'</a>,
--   <a>describeTargetGroupAttributesResponse_httpStatus</a> - The
--   response's http status code.
newDescribeTargetGroupAttributesResponse :: Int -> DescribeTargetGroupAttributesResponse

-- | Information about the target group attributes
describeTargetGroupAttributesResponse_attributes :: Lens' DescribeTargetGroupAttributesResponse (Maybe [TargetGroupAttribute])

-- | The response's http status code.
describeTargetGroupAttributesResponse_httpStatus :: Lens' DescribeTargetGroupAttributesResponse Int
instance GHC.Generics.Generic Network.AWS.ELBV2.DescribeTargetGroupAttributes.DescribeTargetGroupAttributes
instance GHC.Show.Show Network.AWS.ELBV2.DescribeTargetGroupAttributes.DescribeTargetGroupAttributes
instance GHC.Read.Read Network.AWS.ELBV2.DescribeTargetGroupAttributes.DescribeTargetGroupAttributes
instance GHC.Classes.Eq Network.AWS.ELBV2.DescribeTargetGroupAttributes.DescribeTargetGroupAttributes
instance GHC.Generics.Generic Network.AWS.ELBV2.DescribeTargetGroupAttributes.DescribeTargetGroupAttributesResponse
instance GHC.Show.Show Network.AWS.ELBV2.DescribeTargetGroupAttributes.DescribeTargetGroupAttributesResponse
instance GHC.Read.Read Network.AWS.ELBV2.DescribeTargetGroupAttributes.DescribeTargetGroupAttributesResponse
instance GHC.Classes.Eq Network.AWS.ELBV2.DescribeTargetGroupAttributes.DescribeTargetGroupAttributesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ELBV2.DescribeTargetGroupAttributes.DescribeTargetGroupAttributes
instance Control.DeepSeq.NFData Network.AWS.ELBV2.DescribeTargetGroupAttributes.DescribeTargetGroupAttributesResponse
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.DescribeTargetGroupAttributes.DescribeTargetGroupAttributes
instance Control.DeepSeq.NFData Network.AWS.ELBV2.DescribeTargetGroupAttributes.DescribeTargetGroupAttributes
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ELBV2.DescribeTargetGroupAttributes.DescribeTargetGroupAttributes
instance Network.AWS.Data.Path.ToPath Network.AWS.ELBV2.DescribeTargetGroupAttributes.DescribeTargetGroupAttributes
instance Network.AWS.Data.Query.ToQuery Network.AWS.ELBV2.DescribeTargetGroupAttributes.DescribeTargetGroupAttributes


-- | Describes the tags for the specified Elastic Load Balancing resources.
--   You can describe the tags for one or more Application Load Balancers,
--   Network Load Balancers, Gateway Load Balancers, target groups,
--   listeners, or rules.
module Network.AWS.ELBV2.DescribeTags

-- | <i>See:</i> <a>newDescribeTags</a> smart constructor.
data DescribeTags
DescribeTags' :: [Text] -> DescribeTags

-- | The Amazon Resource Names (ARN) of the resources. You can specify up
--   to 20 resources in a single call.
[$sel:resourceArns:DescribeTags'] :: DescribeTags -> [Text]

-- | Create a value of <a>DescribeTags</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArns:DescribeTags'</a>,
--   <a>describeTags_resourceArns</a> - The Amazon Resource Names (ARN) of
--   the resources. You can specify up to 20 resources in a single call.
newDescribeTags :: DescribeTags

-- | The Amazon Resource Names (ARN) of the resources. You can specify up
--   to 20 resources in a single call.
describeTags_resourceArns :: Lens' DescribeTags [Text]

-- | <i>See:</i> <a>newDescribeTagsResponse</a> smart constructor.
data DescribeTagsResponse
DescribeTagsResponse' :: Maybe [TagDescription] -> Int -> DescribeTagsResponse

-- | Information about the tags.
[$sel:tagDescriptions:DescribeTagsResponse'] :: DescribeTagsResponse -> Maybe [TagDescription]

-- | The response's http status code.
[$sel:httpStatus:DescribeTagsResponse'] :: DescribeTagsResponse -> Int

-- | Create a value of <a>DescribeTagsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tagDescriptions:DescribeTagsResponse'</a>,
--   <a>describeTagsResponse_tagDescriptions</a> - Information about the
--   tags.
--   
--   <a>$sel:httpStatus:DescribeTagsResponse'</a>,
--   <a>describeTagsResponse_httpStatus</a> - The response's http status
--   code.
newDescribeTagsResponse :: Int -> DescribeTagsResponse

-- | Information about the tags.
describeTagsResponse_tagDescriptions :: Lens' DescribeTagsResponse (Maybe [TagDescription])

-- | The response's http status code.
describeTagsResponse_httpStatus :: Lens' DescribeTagsResponse Int
instance GHC.Generics.Generic Network.AWS.ELBV2.DescribeTags.DescribeTags
instance GHC.Show.Show Network.AWS.ELBV2.DescribeTags.DescribeTags
instance GHC.Read.Read Network.AWS.ELBV2.DescribeTags.DescribeTags
instance GHC.Classes.Eq Network.AWS.ELBV2.DescribeTags.DescribeTags
instance GHC.Generics.Generic Network.AWS.ELBV2.DescribeTags.DescribeTagsResponse
instance GHC.Show.Show Network.AWS.ELBV2.DescribeTags.DescribeTagsResponse
instance GHC.Read.Read Network.AWS.ELBV2.DescribeTags.DescribeTagsResponse
instance GHC.Classes.Eq Network.AWS.ELBV2.DescribeTags.DescribeTagsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ELBV2.DescribeTags.DescribeTags
instance Control.DeepSeq.NFData Network.AWS.ELBV2.DescribeTags.DescribeTagsResponse
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.DescribeTags.DescribeTags
instance Control.DeepSeq.NFData Network.AWS.ELBV2.DescribeTags.DescribeTags
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ELBV2.DescribeTags.DescribeTags
instance Network.AWS.Data.Path.ToPath Network.AWS.ELBV2.DescribeTags.DescribeTags
instance Network.AWS.Data.Query.ToQuery Network.AWS.ELBV2.DescribeTags.DescribeTags


-- | Describes the specified policies or all policies used for SSL
--   negotiation.
--   
--   For more information, see <a>Security policies</a> in the
--   <i>Application Load Balancers Guide</i> or <a>Security policies</a> in
--   the <i>Network Load Balancers Guide</i>.
--   
--   This operation returns paginated results.
module Network.AWS.ELBV2.DescribeSSLPolicies

-- | <i>See:</i> <a>newDescribeSSLPolicies</a> smart constructor.
data DescribeSSLPolicies
DescribeSSLPolicies' :: Maybe LoadBalancerTypeEnum -> Maybe [Text] -> Maybe Text -> Maybe Natural -> DescribeSSLPolicies

-- | The type of load balancer. The default lists the SSL policies for all
--   load balancers.
[$sel:loadBalancerType:DescribeSSLPolicies'] :: DescribeSSLPolicies -> Maybe LoadBalancerTypeEnum

-- | The names of the policies.
[$sel:names:DescribeSSLPolicies'] :: DescribeSSLPolicies -> Maybe [Text]

-- | The marker for the next set of results. (You received this marker from
--   a previous call.)
[$sel:marker:DescribeSSLPolicies'] :: DescribeSSLPolicies -> Maybe Text

-- | The maximum number of results to return with this call.
[$sel:pageSize:DescribeSSLPolicies'] :: DescribeSSLPolicies -> Maybe Natural

-- | Create a value of <a>DescribeSSLPolicies</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:loadBalancerType:DescribeSSLPolicies'</a>,
--   <a>describeSSLPolicies_loadBalancerType</a> - The type of load
--   balancer. The default lists the SSL policies for all load balancers.
--   
--   <a>$sel:names:DescribeSSLPolicies'</a>,
--   <a>describeSSLPolicies_names</a> - The names of the policies.
--   
--   <a>$sel:marker:DescribeSSLPolicies'</a>,
--   <a>describeSSLPolicies_marker</a> - The marker for the next set of
--   results. (You received this marker from a previous call.)
--   
--   <a>$sel:pageSize:DescribeSSLPolicies'</a>,
--   <a>describeSSLPolicies_pageSize</a> - The maximum number of results to
--   return with this call.
newDescribeSSLPolicies :: DescribeSSLPolicies

-- | The type of load balancer. The default lists the SSL policies for all
--   load balancers.
describeSSLPolicies_loadBalancerType :: Lens' DescribeSSLPolicies (Maybe LoadBalancerTypeEnum)

-- | The names of the policies.
describeSSLPolicies_names :: Lens' DescribeSSLPolicies (Maybe [Text])

-- | The marker for the next set of results. (You received this marker from
--   a previous call.)
describeSSLPolicies_marker :: Lens' DescribeSSLPolicies (Maybe Text)

-- | The maximum number of results to return with this call.
describeSSLPolicies_pageSize :: Lens' DescribeSSLPolicies (Maybe Natural)

-- | <i>See:</i> <a>newDescribeSSLPoliciesResponse</a> smart constructor.
data DescribeSSLPoliciesResponse
DescribeSSLPoliciesResponse' :: Maybe [SslPolicy] -> Maybe Text -> Int -> DescribeSSLPoliciesResponse

-- | Information about the security policies.
[$sel:sslPolicies:DescribeSSLPoliciesResponse'] :: DescribeSSLPoliciesResponse -> Maybe [SslPolicy]

-- | If there are additional results, this is the marker for the next set
--   of results. Otherwise, this is null.
[$sel:nextMarker:DescribeSSLPoliciesResponse'] :: DescribeSSLPoliciesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeSSLPoliciesResponse'] :: DescribeSSLPoliciesResponse -> Int

-- | Create a value of <a>DescribeSSLPoliciesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sslPolicies:DescribeSSLPoliciesResponse'</a>,
--   <a>describeSSLPoliciesResponse_sslPolicies</a> - Information about the
--   security policies.
--   
--   <a>$sel:nextMarker:DescribeSSLPoliciesResponse'</a>,
--   <a>describeSSLPoliciesResponse_nextMarker</a> - If there are
--   additional results, this is the marker for the next set of results.
--   Otherwise, this is null.
--   
--   <a>$sel:httpStatus:DescribeSSLPoliciesResponse'</a>,
--   <a>describeSSLPoliciesResponse_httpStatus</a> - The response's http
--   status code.
newDescribeSSLPoliciesResponse :: Int -> DescribeSSLPoliciesResponse

-- | Information about the security policies.
describeSSLPoliciesResponse_sslPolicies :: Lens' DescribeSSLPoliciesResponse (Maybe [SslPolicy])

-- | If there are additional results, this is the marker for the next set
--   of results. Otherwise, this is null.
describeSSLPoliciesResponse_nextMarker :: Lens' DescribeSSLPoliciesResponse (Maybe Text)

-- | The response's http status code.
describeSSLPoliciesResponse_httpStatus :: Lens' DescribeSSLPoliciesResponse Int
instance GHC.Generics.Generic Network.AWS.ELBV2.DescribeSSLPolicies.DescribeSSLPolicies
instance GHC.Show.Show Network.AWS.ELBV2.DescribeSSLPolicies.DescribeSSLPolicies
instance GHC.Read.Read Network.AWS.ELBV2.DescribeSSLPolicies.DescribeSSLPolicies
instance GHC.Classes.Eq Network.AWS.ELBV2.DescribeSSLPolicies.DescribeSSLPolicies
instance GHC.Generics.Generic Network.AWS.ELBV2.DescribeSSLPolicies.DescribeSSLPoliciesResponse
instance GHC.Show.Show Network.AWS.ELBV2.DescribeSSLPolicies.DescribeSSLPoliciesResponse
instance GHC.Read.Read Network.AWS.ELBV2.DescribeSSLPolicies.DescribeSSLPoliciesResponse
instance GHC.Classes.Eq Network.AWS.ELBV2.DescribeSSLPolicies.DescribeSSLPoliciesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ELBV2.DescribeSSLPolicies.DescribeSSLPolicies
instance Control.DeepSeq.NFData Network.AWS.ELBV2.DescribeSSLPolicies.DescribeSSLPoliciesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.ELBV2.DescribeSSLPolicies.DescribeSSLPolicies
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.DescribeSSLPolicies.DescribeSSLPolicies
instance Control.DeepSeq.NFData Network.AWS.ELBV2.DescribeSSLPolicies.DescribeSSLPolicies
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ELBV2.DescribeSSLPolicies.DescribeSSLPolicies
instance Network.AWS.Data.Path.ToPath Network.AWS.ELBV2.DescribeSSLPolicies.DescribeSSLPolicies
instance Network.AWS.Data.Query.ToQuery Network.AWS.ELBV2.DescribeSSLPolicies.DescribeSSLPolicies


-- | Describes the specified rules or the rules for the specified listener.
--   You must specify either a listener or one or more rules.
--   
--   This operation returns paginated results.
module Network.AWS.ELBV2.DescribeRules

-- | <i>See:</i> <a>newDescribeRules</a> smart constructor.
data DescribeRules
DescribeRules' :: Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe Natural -> DescribeRules

-- | The Amazon Resource Name (ARN) of the listener.
[$sel:listenerArn:DescribeRules'] :: DescribeRules -> Maybe Text

-- | The marker for the next set of results. (You received this marker from
--   a previous call.)
[$sel:marker:DescribeRules'] :: DescribeRules -> Maybe Text

-- | The Amazon Resource Names (ARN) of the rules.
[$sel:ruleArns:DescribeRules'] :: DescribeRules -> Maybe [Text]

-- | The maximum number of results to return with this call.
[$sel:pageSize:DescribeRules'] :: DescribeRules -> Maybe Natural

-- | Create a value of <a>DescribeRules</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:listenerArn:DescribeRules'</a>,
--   <a>describeRules_listenerArn</a> - The Amazon Resource Name (ARN) of
--   the listener.
--   
--   <a>$sel:marker:DescribeRules'</a>, <a>describeRules_marker</a> - The
--   marker for the next set of results. (You received this marker from a
--   previous call.)
--   
--   <a>$sel:ruleArns:DescribeRules'</a>, <a>describeRules_ruleArns</a> -
--   The Amazon Resource Names (ARN) of the rules.
--   
--   <a>$sel:pageSize:DescribeRules'</a>, <a>describeRules_pageSize</a> -
--   The maximum number of results to return with this call.
newDescribeRules :: DescribeRules

-- | The Amazon Resource Name (ARN) of the listener.
describeRules_listenerArn :: Lens' DescribeRules (Maybe Text)

-- | The marker for the next set of results. (You received this marker from
--   a previous call.)
describeRules_marker :: Lens' DescribeRules (Maybe Text)

-- | The Amazon Resource Names (ARN) of the rules.
describeRules_ruleArns :: Lens' DescribeRules (Maybe [Text])

-- | The maximum number of results to return with this call.
describeRules_pageSize :: Lens' DescribeRules (Maybe Natural)

-- | <i>See:</i> <a>newDescribeRulesResponse</a> smart constructor.
data DescribeRulesResponse
DescribeRulesResponse' :: Maybe [Rule] -> Maybe Text -> Int -> DescribeRulesResponse

-- | Information about the rules.
[$sel:rules:DescribeRulesResponse'] :: DescribeRulesResponse -> Maybe [Rule]

-- | If there are additional results, this is the marker for the next set
--   of results. Otherwise, this is null.
[$sel:nextMarker:DescribeRulesResponse'] :: DescribeRulesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeRulesResponse'] :: DescribeRulesResponse -> Int

-- | Create a value of <a>DescribeRulesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:rules:DescribeRulesResponse'</a>,
--   <a>describeRulesResponse_rules</a> - Information about the rules.
--   
--   <a>$sel:nextMarker:DescribeRulesResponse'</a>,
--   <a>describeRulesResponse_nextMarker</a> - If there are additional
--   results, this is the marker for the next set of results. Otherwise,
--   this is null.
--   
--   <a>$sel:httpStatus:DescribeRulesResponse'</a>,
--   <a>describeRulesResponse_httpStatus</a> - The response's http status
--   code.
newDescribeRulesResponse :: Int -> DescribeRulesResponse

-- | Information about the rules.
describeRulesResponse_rules :: Lens' DescribeRulesResponse (Maybe [Rule])

-- | If there are additional results, this is the marker for the next set
--   of results. Otherwise, this is null.
describeRulesResponse_nextMarker :: Lens' DescribeRulesResponse (Maybe Text)

-- | The response's http status code.
describeRulesResponse_httpStatus :: Lens' DescribeRulesResponse Int
instance GHC.Generics.Generic Network.AWS.ELBV2.DescribeRules.DescribeRules
instance GHC.Show.Show Network.AWS.ELBV2.DescribeRules.DescribeRules
instance GHC.Read.Read Network.AWS.ELBV2.DescribeRules.DescribeRules
instance GHC.Classes.Eq Network.AWS.ELBV2.DescribeRules.DescribeRules
instance GHC.Generics.Generic Network.AWS.ELBV2.DescribeRules.DescribeRulesResponse
instance GHC.Show.Show Network.AWS.ELBV2.DescribeRules.DescribeRulesResponse
instance GHC.Read.Read Network.AWS.ELBV2.DescribeRules.DescribeRulesResponse
instance GHC.Classes.Eq Network.AWS.ELBV2.DescribeRules.DescribeRulesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ELBV2.DescribeRules.DescribeRules
instance Control.DeepSeq.NFData Network.AWS.ELBV2.DescribeRules.DescribeRulesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.ELBV2.DescribeRules.DescribeRules
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.DescribeRules.DescribeRules
instance Control.DeepSeq.NFData Network.AWS.ELBV2.DescribeRules.DescribeRules
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ELBV2.DescribeRules.DescribeRules
instance Network.AWS.Data.Path.ToPath Network.AWS.ELBV2.DescribeRules.DescribeRules
instance Network.AWS.Data.Query.ToQuery Network.AWS.ELBV2.DescribeRules.DescribeRules


-- | Describes the specified load balancers or all of your load balancers.
--   
--   This operation returns paginated results.
module Network.AWS.ELBV2.DescribeLoadBalancers

-- | <i>See:</i> <a>newDescribeLoadBalancers</a> smart constructor.
data DescribeLoadBalancers
DescribeLoadBalancers' :: Maybe [Text] -> Maybe [Text] -> Maybe Text -> Maybe Natural -> DescribeLoadBalancers

-- | The names of the load balancers.
[$sel:names:DescribeLoadBalancers'] :: DescribeLoadBalancers -> Maybe [Text]

-- | The Amazon Resource Names (ARN) of the load balancers. You can specify
--   up to 20 load balancers in a single call.
[$sel:loadBalancerArns:DescribeLoadBalancers'] :: DescribeLoadBalancers -> Maybe [Text]

-- | The marker for the next set of results. (You received this marker from
--   a previous call.)
[$sel:marker:DescribeLoadBalancers'] :: DescribeLoadBalancers -> Maybe Text

-- | The maximum number of results to return with this call.
[$sel:pageSize:DescribeLoadBalancers'] :: DescribeLoadBalancers -> Maybe Natural

-- | Create a value of <a>DescribeLoadBalancers</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:names:DescribeLoadBalancers'</a>,
--   <a>describeLoadBalancers_names</a> - The names of the load balancers.
--   
--   <a>$sel:loadBalancerArns:DescribeLoadBalancers'</a>,
--   <a>describeLoadBalancers_loadBalancerArns</a> - The Amazon Resource
--   Names (ARN) of the load balancers. You can specify up to 20 load
--   balancers in a single call.
--   
--   <a>$sel:marker:DescribeLoadBalancers'</a>,
--   <a>describeLoadBalancers_marker</a> - The marker for the next set of
--   results. (You received this marker from a previous call.)
--   
--   <a>$sel:pageSize:DescribeLoadBalancers'</a>,
--   <a>describeLoadBalancers_pageSize</a> - The maximum number of results
--   to return with this call.
newDescribeLoadBalancers :: DescribeLoadBalancers

-- | The names of the load balancers.
describeLoadBalancers_names :: Lens' DescribeLoadBalancers (Maybe [Text])

-- | The Amazon Resource Names (ARN) of the load balancers. You can specify
--   up to 20 load balancers in a single call.
describeLoadBalancers_loadBalancerArns :: Lens' DescribeLoadBalancers (Maybe [Text])

-- | The marker for the next set of results. (You received this marker from
--   a previous call.)
describeLoadBalancers_marker :: Lens' DescribeLoadBalancers (Maybe Text)

-- | The maximum number of results to return with this call.
describeLoadBalancers_pageSize :: Lens' DescribeLoadBalancers (Maybe Natural)

-- | <i>See:</i> <a>newDescribeLoadBalancersResponse</a> smart constructor.
data DescribeLoadBalancersResponse
DescribeLoadBalancersResponse' :: Maybe [LoadBalancer] -> Maybe Text -> Int -> DescribeLoadBalancersResponse

-- | Information about the load balancers.
[$sel:loadBalancers:DescribeLoadBalancersResponse'] :: DescribeLoadBalancersResponse -> Maybe [LoadBalancer]

-- | If there are additional results, this is the marker for the next set
--   of results. Otherwise, this is null.
[$sel:nextMarker:DescribeLoadBalancersResponse'] :: DescribeLoadBalancersResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeLoadBalancersResponse'] :: DescribeLoadBalancersResponse -> Int

-- | Create a value of <a>DescribeLoadBalancersResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:loadBalancers:DescribeLoadBalancersResponse'</a>,
--   <a>describeLoadBalancersResponse_loadBalancers</a> - Information about
--   the load balancers.
--   
--   <a>$sel:nextMarker:DescribeLoadBalancersResponse'</a>,
--   <a>describeLoadBalancersResponse_nextMarker</a> - If there are
--   additional results, this is the marker for the next set of results.
--   Otherwise, this is null.
--   
--   <a>$sel:httpStatus:DescribeLoadBalancersResponse'</a>,
--   <a>describeLoadBalancersResponse_httpStatus</a> - The response's http
--   status code.
newDescribeLoadBalancersResponse :: Int -> DescribeLoadBalancersResponse

-- | Information about the load balancers.
describeLoadBalancersResponse_loadBalancers :: Lens' DescribeLoadBalancersResponse (Maybe [LoadBalancer])

-- | If there are additional results, this is the marker for the next set
--   of results. Otherwise, this is null.
describeLoadBalancersResponse_nextMarker :: Lens' DescribeLoadBalancersResponse (Maybe Text)

-- | The response's http status code.
describeLoadBalancersResponse_httpStatus :: Lens' DescribeLoadBalancersResponse Int
instance GHC.Generics.Generic Network.AWS.ELBV2.DescribeLoadBalancers.DescribeLoadBalancers
instance GHC.Show.Show Network.AWS.ELBV2.DescribeLoadBalancers.DescribeLoadBalancers
instance GHC.Read.Read Network.AWS.ELBV2.DescribeLoadBalancers.DescribeLoadBalancers
instance GHC.Classes.Eq Network.AWS.ELBV2.DescribeLoadBalancers.DescribeLoadBalancers
instance GHC.Generics.Generic Network.AWS.ELBV2.DescribeLoadBalancers.DescribeLoadBalancersResponse
instance GHC.Show.Show Network.AWS.ELBV2.DescribeLoadBalancers.DescribeLoadBalancersResponse
instance GHC.Read.Read Network.AWS.ELBV2.DescribeLoadBalancers.DescribeLoadBalancersResponse
instance GHC.Classes.Eq Network.AWS.ELBV2.DescribeLoadBalancers.DescribeLoadBalancersResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ELBV2.DescribeLoadBalancers.DescribeLoadBalancers
instance Control.DeepSeq.NFData Network.AWS.ELBV2.DescribeLoadBalancers.DescribeLoadBalancersResponse
instance Network.AWS.Pager.AWSPager Network.AWS.ELBV2.DescribeLoadBalancers.DescribeLoadBalancers
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.DescribeLoadBalancers.DescribeLoadBalancers
instance Control.DeepSeq.NFData Network.AWS.ELBV2.DescribeLoadBalancers.DescribeLoadBalancers
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ELBV2.DescribeLoadBalancers.DescribeLoadBalancers
instance Network.AWS.Data.Path.ToPath Network.AWS.ELBV2.DescribeLoadBalancers.DescribeLoadBalancers
instance Network.AWS.Data.Query.ToQuery Network.AWS.ELBV2.DescribeLoadBalancers.DescribeLoadBalancers


-- | Describes the attributes for the specified Application Load Balancer,
--   Network Load Balancer, or Gateway Load Balancer.
--   
--   For more information, see the following:
--   
--   <ul>
--   <li><a>Load balancer attributes</a> in the <i>Application Load
--   Balancers Guide</i></li>
--   <li><a>Load balancer attributes</a> in the <i>Network Load Balancers
--   Guide</i></li>
--   <li><a>Load balancer attributes</a> in the <i>Gateway Load Balancers
--   Guide</i></li>
--   </ul>
module Network.AWS.ELBV2.DescribeLoadBalancerAttributes

-- | <i>See:</i> <a>newDescribeLoadBalancerAttributes</a> smart
--   constructor.
data DescribeLoadBalancerAttributes
DescribeLoadBalancerAttributes' :: Text -> DescribeLoadBalancerAttributes

-- | The Amazon Resource Name (ARN) of the load balancer.
[$sel:loadBalancerArn:DescribeLoadBalancerAttributes'] :: DescribeLoadBalancerAttributes -> Text

-- | Create a value of <a>DescribeLoadBalancerAttributes</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:loadBalancerArn:DescribeLoadBalancerAttributes'</a>,
--   <a>describeLoadBalancerAttributes_loadBalancerArn</a> - The Amazon
--   Resource Name (ARN) of the load balancer.
newDescribeLoadBalancerAttributes :: Text -> DescribeLoadBalancerAttributes

-- | The Amazon Resource Name (ARN) of the load balancer.
describeLoadBalancerAttributes_loadBalancerArn :: Lens' DescribeLoadBalancerAttributes Text

-- | <i>See:</i> <a>newDescribeLoadBalancerAttributesResponse</a> smart
--   constructor.
data DescribeLoadBalancerAttributesResponse
DescribeLoadBalancerAttributesResponse' :: Maybe [LoadBalancerAttribute] -> Int -> DescribeLoadBalancerAttributesResponse

-- | Information about the load balancer attributes.
[$sel:attributes:DescribeLoadBalancerAttributesResponse'] :: DescribeLoadBalancerAttributesResponse -> Maybe [LoadBalancerAttribute]

-- | The response's http status code.
[$sel:httpStatus:DescribeLoadBalancerAttributesResponse'] :: DescribeLoadBalancerAttributesResponse -> Int

-- | Create a value of <a>DescribeLoadBalancerAttributesResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributes:DescribeLoadBalancerAttributesResponse'</a>,
--   <a>describeLoadBalancerAttributesResponse_attributes</a> - Information
--   about the load balancer attributes.
--   
--   <a>$sel:httpStatus:DescribeLoadBalancerAttributesResponse'</a>,
--   <a>describeLoadBalancerAttributesResponse_httpStatus</a> - The
--   response's http status code.
newDescribeLoadBalancerAttributesResponse :: Int -> DescribeLoadBalancerAttributesResponse

-- | Information about the load balancer attributes.
describeLoadBalancerAttributesResponse_attributes :: Lens' DescribeLoadBalancerAttributesResponse (Maybe [LoadBalancerAttribute])

-- | The response's http status code.
describeLoadBalancerAttributesResponse_httpStatus :: Lens' DescribeLoadBalancerAttributesResponse Int
instance GHC.Generics.Generic Network.AWS.ELBV2.DescribeLoadBalancerAttributes.DescribeLoadBalancerAttributes
instance GHC.Show.Show Network.AWS.ELBV2.DescribeLoadBalancerAttributes.DescribeLoadBalancerAttributes
instance GHC.Read.Read Network.AWS.ELBV2.DescribeLoadBalancerAttributes.DescribeLoadBalancerAttributes
instance GHC.Classes.Eq Network.AWS.ELBV2.DescribeLoadBalancerAttributes.DescribeLoadBalancerAttributes
instance GHC.Generics.Generic Network.AWS.ELBV2.DescribeLoadBalancerAttributes.DescribeLoadBalancerAttributesResponse
instance GHC.Show.Show Network.AWS.ELBV2.DescribeLoadBalancerAttributes.DescribeLoadBalancerAttributesResponse
instance GHC.Read.Read Network.AWS.ELBV2.DescribeLoadBalancerAttributes.DescribeLoadBalancerAttributesResponse
instance GHC.Classes.Eq Network.AWS.ELBV2.DescribeLoadBalancerAttributes.DescribeLoadBalancerAttributesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ELBV2.DescribeLoadBalancerAttributes.DescribeLoadBalancerAttributes
instance Control.DeepSeq.NFData Network.AWS.ELBV2.DescribeLoadBalancerAttributes.DescribeLoadBalancerAttributesResponse
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.DescribeLoadBalancerAttributes.DescribeLoadBalancerAttributes
instance Control.DeepSeq.NFData Network.AWS.ELBV2.DescribeLoadBalancerAttributes.DescribeLoadBalancerAttributes
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ELBV2.DescribeLoadBalancerAttributes.DescribeLoadBalancerAttributes
instance Network.AWS.Data.Path.ToPath Network.AWS.ELBV2.DescribeLoadBalancerAttributes.DescribeLoadBalancerAttributes
instance Network.AWS.Data.Query.ToQuery Network.AWS.ELBV2.DescribeLoadBalancerAttributes.DescribeLoadBalancerAttributes


-- | Describes the specified listeners or the listeners for the specified
--   Application Load Balancer, Network Load Balancer, or Gateway Load
--   Balancer. You must specify either a load balancer or one or more
--   listeners.
--   
--   This operation returns paginated results.
module Network.AWS.ELBV2.DescribeListeners

-- | <i>See:</i> <a>newDescribeListeners</a> smart constructor.
data DescribeListeners
DescribeListeners' :: Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Natural -> DescribeListeners

-- | The Amazon Resource Names (ARN) of the listeners.
[$sel:listenerArns:DescribeListeners'] :: DescribeListeners -> Maybe [Text]

-- | The Amazon Resource Name (ARN) of the load balancer.
[$sel:loadBalancerArn:DescribeListeners'] :: DescribeListeners -> Maybe Text

-- | The marker for the next set of results. (You received this marker from
--   a previous call.)
[$sel:marker:DescribeListeners'] :: DescribeListeners -> Maybe Text

-- | The maximum number of results to return with this call.
[$sel:pageSize:DescribeListeners'] :: DescribeListeners -> Maybe Natural

-- | Create a value of <a>DescribeListeners</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:listenerArns:DescribeListeners'</a>,
--   <a>describeListeners_listenerArns</a> - The Amazon Resource Names
--   (ARN) of the listeners.
--   
--   <a>$sel:loadBalancerArn:DescribeListeners'</a>,
--   <a>describeListeners_loadBalancerArn</a> - The Amazon Resource Name
--   (ARN) of the load balancer.
--   
--   <a>$sel:marker:DescribeListeners'</a>, <a>describeListeners_marker</a>
--   - The marker for the next set of results. (You received this marker
--   from a previous call.)
--   
--   <a>$sel:pageSize:DescribeListeners'</a>,
--   <a>describeListeners_pageSize</a> - The maximum number of results to
--   return with this call.
newDescribeListeners :: DescribeListeners

-- | The Amazon Resource Names (ARN) of the listeners.
describeListeners_listenerArns :: Lens' DescribeListeners (Maybe [Text])

-- | The Amazon Resource Name (ARN) of the load balancer.
describeListeners_loadBalancerArn :: Lens' DescribeListeners (Maybe Text)

-- | The marker for the next set of results. (You received this marker from
--   a previous call.)
describeListeners_marker :: Lens' DescribeListeners (Maybe Text)

-- | The maximum number of results to return with this call.
describeListeners_pageSize :: Lens' DescribeListeners (Maybe Natural)

-- | <i>See:</i> <a>newDescribeListenersResponse</a> smart constructor.
data DescribeListenersResponse
DescribeListenersResponse' :: Maybe Text -> Maybe [Listener] -> Int -> DescribeListenersResponse

-- | If there are additional results, this is the marker for the next set
--   of results. Otherwise, this is null.
[$sel:nextMarker:DescribeListenersResponse'] :: DescribeListenersResponse -> Maybe Text

-- | Information about the listeners.
[$sel:listeners:DescribeListenersResponse'] :: DescribeListenersResponse -> Maybe [Listener]

-- | The response's http status code.
[$sel:httpStatus:DescribeListenersResponse'] :: DescribeListenersResponse -> Int

-- | Create a value of <a>DescribeListenersResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextMarker:DescribeListenersResponse'</a>,
--   <a>describeListenersResponse_nextMarker</a> - If there are additional
--   results, this is the marker for the next set of results. Otherwise,
--   this is null.
--   
--   <a>$sel:listeners:DescribeListenersResponse'</a>,
--   <a>describeListenersResponse_listeners</a> - Information about the
--   listeners.
--   
--   <a>$sel:httpStatus:DescribeListenersResponse'</a>,
--   <a>describeListenersResponse_httpStatus</a> - The response's http
--   status code.
newDescribeListenersResponse :: Int -> DescribeListenersResponse

-- | If there are additional results, this is the marker for the next set
--   of results. Otherwise, this is null.
describeListenersResponse_nextMarker :: Lens' DescribeListenersResponse (Maybe Text)

-- | Information about the listeners.
describeListenersResponse_listeners :: Lens' DescribeListenersResponse (Maybe [Listener])

-- | The response's http status code.
describeListenersResponse_httpStatus :: Lens' DescribeListenersResponse Int
instance GHC.Generics.Generic Network.AWS.ELBV2.DescribeListeners.DescribeListeners
instance GHC.Show.Show Network.AWS.ELBV2.DescribeListeners.DescribeListeners
instance GHC.Read.Read Network.AWS.ELBV2.DescribeListeners.DescribeListeners
instance GHC.Classes.Eq Network.AWS.ELBV2.DescribeListeners.DescribeListeners
instance GHC.Generics.Generic Network.AWS.ELBV2.DescribeListeners.DescribeListenersResponse
instance GHC.Show.Show Network.AWS.ELBV2.DescribeListeners.DescribeListenersResponse
instance GHC.Read.Read Network.AWS.ELBV2.DescribeListeners.DescribeListenersResponse
instance GHC.Classes.Eq Network.AWS.ELBV2.DescribeListeners.DescribeListenersResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ELBV2.DescribeListeners.DescribeListeners
instance Control.DeepSeq.NFData Network.AWS.ELBV2.DescribeListeners.DescribeListenersResponse
instance Network.AWS.Pager.AWSPager Network.AWS.ELBV2.DescribeListeners.DescribeListeners
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.DescribeListeners.DescribeListeners
instance Control.DeepSeq.NFData Network.AWS.ELBV2.DescribeListeners.DescribeListeners
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ELBV2.DescribeListeners.DescribeListeners
instance Network.AWS.Data.Path.ToPath Network.AWS.ELBV2.DescribeListeners.DescribeListeners
instance Network.AWS.Data.Query.ToQuery Network.AWS.ELBV2.DescribeListeners.DescribeListeners


-- | Describes the default certificate and the certificate list for the
--   specified HTTPS or TLS listener.
--   
--   If the default certificate is also in the certificate list, it appears
--   twice in the results (once with <tt>IsDefault</tt> set to true and
--   once with <tt>IsDefault</tt> set to false).
--   
--   For more information, see <a>SSL certificates</a> in the
--   <i>Application Load Balancers Guide</i> or <a>Server certificates</a>
--   in the <i>Network Load Balancers Guide</i>.
--   
--   This operation returns paginated results.
module Network.AWS.ELBV2.DescribeListenerCertificates

-- | <i>See:</i> <a>newDescribeListenerCertificates</a> smart constructor.
data DescribeListenerCertificates
DescribeListenerCertificates' :: Maybe Text -> Maybe Natural -> Text -> DescribeListenerCertificates

-- | The marker for the next set of results. (You received this marker from
--   a previous call.)
[$sel:marker:DescribeListenerCertificates'] :: DescribeListenerCertificates -> Maybe Text

-- | The maximum number of results to return with this call.
[$sel:pageSize:DescribeListenerCertificates'] :: DescribeListenerCertificates -> Maybe Natural

-- | The Amazon Resource Names (ARN) of the listener.
[$sel:listenerArn:DescribeListenerCertificates'] :: DescribeListenerCertificates -> Text

-- | Create a value of <a>DescribeListenerCertificates</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:marker:DescribeListenerCertificates'</a>,
--   <a>describeListenerCertificates_marker</a> - The marker for the next
--   set of results. (You received this marker from a previous call.)
--   
--   <a>$sel:pageSize:DescribeListenerCertificates'</a>,
--   <a>describeListenerCertificates_pageSize</a> - The maximum number of
--   results to return with this call.
--   
--   <a>$sel:listenerArn:DescribeListenerCertificates'</a>,
--   <a>describeListenerCertificates_listenerArn</a> - The Amazon Resource
--   Names (ARN) of the listener.
newDescribeListenerCertificates :: Text -> DescribeListenerCertificates

-- | The marker for the next set of results. (You received this marker from
--   a previous call.)
describeListenerCertificates_marker :: Lens' DescribeListenerCertificates (Maybe Text)

-- | The maximum number of results to return with this call.
describeListenerCertificates_pageSize :: Lens' DescribeListenerCertificates (Maybe Natural)

-- | The Amazon Resource Names (ARN) of the listener.
describeListenerCertificates_listenerArn :: Lens' DescribeListenerCertificates Text

-- | <i>See:</i> <a>newDescribeListenerCertificatesResponse</a> smart
--   constructor.
data DescribeListenerCertificatesResponse
DescribeListenerCertificatesResponse' :: Maybe [Certificate] -> Maybe Text -> Int -> DescribeListenerCertificatesResponse

-- | Information about the certificates.
[$sel:certificates:DescribeListenerCertificatesResponse'] :: DescribeListenerCertificatesResponse -> Maybe [Certificate]

-- | If there are additional results, this is the marker for the next set
--   of results. Otherwise, this is null.
[$sel:nextMarker:DescribeListenerCertificatesResponse'] :: DescribeListenerCertificatesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeListenerCertificatesResponse'] :: DescribeListenerCertificatesResponse -> Int

-- | Create a value of <a>DescribeListenerCertificatesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:certificates:DescribeListenerCertificatesResponse'</a>,
--   <a>describeListenerCertificatesResponse_certificates</a> - Information
--   about the certificates.
--   
--   <a>$sel:nextMarker:DescribeListenerCertificatesResponse'</a>,
--   <a>describeListenerCertificatesResponse_nextMarker</a> - If there are
--   additional results, this is the marker for the next set of results.
--   Otherwise, this is null.
--   
--   <a>$sel:httpStatus:DescribeListenerCertificatesResponse'</a>,
--   <a>describeListenerCertificatesResponse_httpStatus</a> - The
--   response's http status code.
newDescribeListenerCertificatesResponse :: Int -> DescribeListenerCertificatesResponse

-- | Information about the certificates.
describeListenerCertificatesResponse_certificates :: Lens' DescribeListenerCertificatesResponse (Maybe [Certificate])

-- | If there are additional results, this is the marker for the next set
--   of results. Otherwise, this is null.
describeListenerCertificatesResponse_nextMarker :: Lens' DescribeListenerCertificatesResponse (Maybe Text)

-- | The response's http status code.
describeListenerCertificatesResponse_httpStatus :: Lens' DescribeListenerCertificatesResponse Int
instance GHC.Generics.Generic Network.AWS.ELBV2.DescribeListenerCertificates.DescribeListenerCertificates
instance GHC.Show.Show Network.AWS.ELBV2.DescribeListenerCertificates.DescribeListenerCertificates
instance GHC.Read.Read Network.AWS.ELBV2.DescribeListenerCertificates.DescribeListenerCertificates
instance GHC.Classes.Eq Network.AWS.ELBV2.DescribeListenerCertificates.DescribeListenerCertificates
instance GHC.Generics.Generic Network.AWS.ELBV2.DescribeListenerCertificates.DescribeListenerCertificatesResponse
instance GHC.Show.Show Network.AWS.ELBV2.DescribeListenerCertificates.DescribeListenerCertificatesResponse
instance GHC.Read.Read Network.AWS.ELBV2.DescribeListenerCertificates.DescribeListenerCertificatesResponse
instance GHC.Classes.Eq Network.AWS.ELBV2.DescribeListenerCertificates.DescribeListenerCertificatesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ELBV2.DescribeListenerCertificates.DescribeListenerCertificates
instance Control.DeepSeq.NFData Network.AWS.ELBV2.DescribeListenerCertificates.DescribeListenerCertificatesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.ELBV2.DescribeListenerCertificates.DescribeListenerCertificates
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.DescribeListenerCertificates.DescribeListenerCertificates
instance Control.DeepSeq.NFData Network.AWS.ELBV2.DescribeListenerCertificates.DescribeListenerCertificates
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ELBV2.DescribeListenerCertificates.DescribeListenerCertificates
instance Network.AWS.Data.Path.ToPath Network.AWS.ELBV2.DescribeListenerCertificates.DescribeListenerCertificates
instance Network.AWS.Data.Query.ToQuery Network.AWS.ELBV2.DescribeListenerCertificates.DescribeListenerCertificates


-- | Describes the current Elastic Load Balancing resource limits for your
--   Amazon Web Services account.
--   
--   For more information, see the following:
--   
--   <ul>
--   <li><a>Quotas for your Application Load Balancers</a></li>
--   <li><a>Quotas for your Network Load Balancers</a></li>
--   <li><a>Quotas for your Gateway Load Balancers</a></li>
--   </ul>
--   
--   This operation returns paginated results.
module Network.AWS.ELBV2.DescribeAccountLimits

-- | <i>See:</i> <a>newDescribeAccountLimits</a> smart constructor.
data DescribeAccountLimits
DescribeAccountLimits' :: Maybe Text -> Maybe Natural -> DescribeAccountLimits

-- | The marker for the next set of results. (You received this marker from
--   a previous call.)
[$sel:marker:DescribeAccountLimits'] :: DescribeAccountLimits -> Maybe Text

-- | The maximum number of results to return with this call.
[$sel:pageSize:DescribeAccountLimits'] :: DescribeAccountLimits -> Maybe Natural

-- | Create a value of <a>DescribeAccountLimits</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:marker:DescribeAccountLimits'</a>,
--   <a>describeAccountLimits_marker</a> - The marker for the next set of
--   results. (You received this marker from a previous call.)
--   
--   <a>$sel:pageSize:DescribeAccountLimits'</a>,
--   <a>describeAccountLimits_pageSize</a> - The maximum number of results
--   to return with this call.
newDescribeAccountLimits :: DescribeAccountLimits

-- | The marker for the next set of results. (You received this marker from
--   a previous call.)
describeAccountLimits_marker :: Lens' DescribeAccountLimits (Maybe Text)

-- | The maximum number of results to return with this call.
describeAccountLimits_pageSize :: Lens' DescribeAccountLimits (Maybe Natural)

-- | <i>See:</i> <a>newDescribeAccountLimitsResponse</a> smart constructor.
data DescribeAccountLimitsResponse
DescribeAccountLimitsResponse' :: Maybe [Limit] -> Maybe Text -> Int -> DescribeAccountLimitsResponse

-- | Information about the limits.
[$sel:limits:DescribeAccountLimitsResponse'] :: DescribeAccountLimitsResponse -> Maybe [Limit]

-- | If there are additional results, this is the marker for the next set
--   of results. Otherwise, this is null.
[$sel:nextMarker:DescribeAccountLimitsResponse'] :: DescribeAccountLimitsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeAccountLimitsResponse'] :: DescribeAccountLimitsResponse -> Int

-- | Create a value of <a>DescribeAccountLimitsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:limits:DescribeAccountLimitsResponse'</a>,
--   <a>describeAccountLimitsResponse_limits</a> - Information about the
--   limits.
--   
--   <a>$sel:nextMarker:DescribeAccountLimitsResponse'</a>,
--   <a>describeAccountLimitsResponse_nextMarker</a> - If there are
--   additional results, this is the marker for the next set of results.
--   Otherwise, this is null.
--   
--   <a>$sel:httpStatus:DescribeAccountLimitsResponse'</a>,
--   <a>describeAccountLimitsResponse_httpStatus</a> - The response's http
--   status code.
newDescribeAccountLimitsResponse :: Int -> DescribeAccountLimitsResponse

-- | Information about the limits.
describeAccountLimitsResponse_limits :: Lens' DescribeAccountLimitsResponse (Maybe [Limit])

-- | If there are additional results, this is the marker for the next set
--   of results. Otherwise, this is null.
describeAccountLimitsResponse_nextMarker :: Lens' DescribeAccountLimitsResponse (Maybe Text)

-- | The response's http status code.
describeAccountLimitsResponse_httpStatus :: Lens' DescribeAccountLimitsResponse Int
instance GHC.Generics.Generic Network.AWS.ELBV2.DescribeAccountLimits.DescribeAccountLimits
instance GHC.Show.Show Network.AWS.ELBV2.DescribeAccountLimits.DescribeAccountLimits
instance GHC.Read.Read Network.AWS.ELBV2.DescribeAccountLimits.DescribeAccountLimits
instance GHC.Classes.Eq Network.AWS.ELBV2.DescribeAccountLimits.DescribeAccountLimits
instance GHC.Generics.Generic Network.AWS.ELBV2.DescribeAccountLimits.DescribeAccountLimitsResponse
instance GHC.Show.Show Network.AWS.ELBV2.DescribeAccountLimits.DescribeAccountLimitsResponse
instance GHC.Read.Read Network.AWS.ELBV2.DescribeAccountLimits.DescribeAccountLimitsResponse
instance GHC.Classes.Eq Network.AWS.ELBV2.DescribeAccountLimits.DescribeAccountLimitsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ELBV2.DescribeAccountLimits.DescribeAccountLimits
instance Control.DeepSeq.NFData Network.AWS.ELBV2.DescribeAccountLimits.DescribeAccountLimitsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.ELBV2.DescribeAccountLimits.DescribeAccountLimits
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.DescribeAccountLimits.DescribeAccountLimits
instance Control.DeepSeq.NFData Network.AWS.ELBV2.DescribeAccountLimits.DescribeAccountLimits
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ELBV2.DescribeAccountLimits.DescribeAccountLimits
instance Network.AWS.Data.Path.ToPath Network.AWS.ELBV2.DescribeAccountLimits.DescribeAccountLimits
instance Network.AWS.Data.Query.ToQuery Network.AWS.ELBV2.DescribeAccountLimits.DescribeAccountLimits


-- | Deregisters the specified targets from the specified target group.
--   After the targets are deregistered, they no longer receive traffic
--   from the load balancer.
module Network.AWS.ELBV2.DeregisterTargets

-- | <i>See:</i> <a>newDeregisterTargets</a> smart constructor.
data DeregisterTargets
DeregisterTargets' :: Text -> [TargetDescription] -> DeregisterTargets

-- | The Amazon Resource Name (ARN) of the target group.
[$sel:targetGroupArn:DeregisterTargets'] :: DeregisterTargets -> Text

-- | The targets. If you specified a port override when you registered a
--   target, you must specify both the target ID and the port when you
--   deregister it.
[$sel:targets:DeregisterTargets'] :: DeregisterTargets -> [TargetDescription]

-- | Create a value of <a>DeregisterTargets</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetGroupArn:DeregisterTargets'</a>,
--   <a>deregisterTargets_targetGroupArn</a> - The Amazon Resource Name
--   (ARN) of the target group.
--   
--   <a>$sel:targets:DeregisterTargets'</a>,
--   <a>deregisterTargets_targets</a> - The targets. If you specified a
--   port override when you registered a target, you must specify both the
--   target ID and the port when you deregister it.
newDeregisterTargets :: Text -> DeregisterTargets

-- | The Amazon Resource Name (ARN) of the target group.
deregisterTargets_targetGroupArn :: Lens' DeregisterTargets Text

-- | The targets. If you specified a port override when you registered a
--   target, you must specify both the target ID and the port when you
--   deregister it.
deregisterTargets_targets :: Lens' DeregisterTargets [TargetDescription]

-- | <i>See:</i> <a>newDeregisterTargetsResponse</a> smart constructor.
data DeregisterTargetsResponse
DeregisterTargetsResponse' :: Int -> DeregisterTargetsResponse

-- | The response's http status code.
[$sel:httpStatus:DeregisterTargetsResponse'] :: DeregisterTargetsResponse -> Int

-- | Create a value of <a>DeregisterTargetsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeregisterTargetsResponse'</a>,
--   <a>deregisterTargetsResponse_httpStatus</a> - The response's http
--   status code.
newDeregisterTargetsResponse :: Int -> DeregisterTargetsResponse

-- | The response's http status code.
deregisterTargetsResponse_httpStatus :: Lens' DeregisterTargetsResponse Int
instance GHC.Generics.Generic Network.AWS.ELBV2.DeregisterTargets.DeregisterTargets
instance GHC.Show.Show Network.AWS.ELBV2.DeregisterTargets.DeregisterTargets
instance GHC.Read.Read Network.AWS.ELBV2.DeregisterTargets.DeregisterTargets
instance GHC.Classes.Eq Network.AWS.ELBV2.DeregisterTargets.DeregisterTargets
instance GHC.Generics.Generic Network.AWS.ELBV2.DeregisterTargets.DeregisterTargetsResponse
instance GHC.Show.Show Network.AWS.ELBV2.DeregisterTargets.DeregisterTargetsResponse
instance GHC.Read.Read Network.AWS.ELBV2.DeregisterTargets.DeregisterTargetsResponse
instance GHC.Classes.Eq Network.AWS.ELBV2.DeregisterTargets.DeregisterTargetsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ELBV2.DeregisterTargets.DeregisterTargets
instance Control.DeepSeq.NFData Network.AWS.ELBV2.DeregisterTargets.DeregisterTargetsResponse
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.DeregisterTargets.DeregisterTargets
instance Control.DeepSeq.NFData Network.AWS.ELBV2.DeregisterTargets.DeregisterTargets
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ELBV2.DeregisterTargets.DeregisterTargets
instance Network.AWS.Data.Path.ToPath Network.AWS.ELBV2.DeregisterTargets.DeregisterTargets
instance Network.AWS.Data.Query.ToQuery Network.AWS.ELBV2.DeregisterTargets.DeregisterTargets


-- | Deletes the specified target group.
--   
--   You can delete a target group if it is not referenced by any actions.
--   Deleting a target group also deletes any associated health checks.
--   Deleting a target group does not affect its registered targets. For
--   example, any EC2 instances continue to run until you stop or terminate
--   them.
module Network.AWS.ELBV2.DeleteTargetGroup

-- | <i>See:</i> <a>newDeleteTargetGroup</a> smart constructor.
data DeleteTargetGroup
DeleteTargetGroup' :: Text -> DeleteTargetGroup

-- | The Amazon Resource Name (ARN) of the target group.
[$sel:targetGroupArn:DeleteTargetGroup'] :: DeleteTargetGroup -> Text

-- | Create a value of <a>DeleteTargetGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetGroupArn:DeleteTargetGroup'</a>,
--   <a>deleteTargetGroup_targetGroupArn</a> - The Amazon Resource Name
--   (ARN) of the target group.
newDeleteTargetGroup :: Text -> DeleteTargetGroup

-- | The Amazon Resource Name (ARN) of the target group.
deleteTargetGroup_targetGroupArn :: Lens' DeleteTargetGroup Text

-- | <i>See:</i> <a>newDeleteTargetGroupResponse</a> smart constructor.
data DeleteTargetGroupResponse
DeleteTargetGroupResponse' :: Int -> DeleteTargetGroupResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteTargetGroupResponse'] :: DeleteTargetGroupResponse -> Int

-- | Create a value of <a>DeleteTargetGroupResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteTargetGroupResponse'</a>,
--   <a>deleteTargetGroupResponse_httpStatus</a> - The response's http
--   status code.
newDeleteTargetGroupResponse :: Int -> DeleteTargetGroupResponse

-- | The response's http status code.
deleteTargetGroupResponse_httpStatus :: Lens' DeleteTargetGroupResponse Int
instance GHC.Generics.Generic Network.AWS.ELBV2.DeleteTargetGroup.DeleteTargetGroup
instance GHC.Show.Show Network.AWS.ELBV2.DeleteTargetGroup.DeleteTargetGroup
instance GHC.Read.Read Network.AWS.ELBV2.DeleteTargetGroup.DeleteTargetGroup
instance GHC.Classes.Eq Network.AWS.ELBV2.DeleteTargetGroup.DeleteTargetGroup
instance GHC.Generics.Generic Network.AWS.ELBV2.DeleteTargetGroup.DeleteTargetGroupResponse
instance GHC.Show.Show Network.AWS.ELBV2.DeleteTargetGroup.DeleteTargetGroupResponse
instance GHC.Read.Read Network.AWS.ELBV2.DeleteTargetGroup.DeleteTargetGroupResponse
instance GHC.Classes.Eq Network.AWS.ELBV2.DeleteTargetGroup.DeleteTargetGroupResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ELBV2.DeleteTargetGroup.DeleteTargetGroup
instance Control.DeepSeq.NFData Network.AWS.ELBV2.DeleteTargetGroup.DeleteTargetGroupResponse
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.DeleteTargetGroup.DeleteTargetGroup
instance Control.DeepSeq.NFData Network.AWS.ELBV2.DeleteTargetGroup.DeleteTargetGroup
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ELBV2.DeleteTargetGroup.DeleteTargetGroup
instance Network.AWS.Data.Path.ToPath Network.AWS.ELBV2.DeleteTargetGroup.DeleteTargetGroup
instance Network.AWS.Data.Query.ToQuery Network.AWS.ELBV2.DeleteTargetGroup.DeleteTargetGroup


-- | Deletes the specified rule.
--   
--   You can't delete the default rule.
module Network.AWS.ELBV2.DeleteRule

-- | <i>See:</i> <a>newDeleteRule</a> smart constructor.
data DeleteRule
DeleteRule' :: Text -> DeleteRule

-- | The Amazon Resource Name (ARN) of the rule.
[$sel:ruleArn:DeleteRule'] :: DeleteRule -> Text

-- | Create a value of <a>DeleteRule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ruleArn:DeleteRule'</a>, <a>deleteRule_ruleArn</a> - The
--   Amazon Resource Name (ARN) of the rule.
newDeleteRule :: Text -> DeleteRule

-- | The Amazon Resource Name (ARN) of the rule.
deleteRule_ruleArn :: Lens' DeleteRule Text

-- | <i>See:</i> <a>newDeleteRuleResponse</a> smart constructor.
data DeleteRuleResponse
DeleteRuleResponse' :: Int -> DeleteRuleResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteRuleResponse'] :: DeleteRuleResponse -> Int

-- | Create a value of <a>DeleteRuleResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteRuleResponse'</a>,
--   <a>deleteRuleResponse_httpStatus</a> - The response's http status
--   code.
newDeleteRuleResponse :: Int -> DeleteRuleResponse

-- | The response's http status code.
deleteRuleResponse_httpStatus :: Lens' DeleteRuleResponse Int
instance GHC.Generics.Generic Network.AWS.ELBV2.DeleteRule.DeleteRule
instance GHC.Show.Show Network.AWS.ELBV2.DeleteRule.DeleteRule
instance GHC.Read.Read Network.AWS.ELBV2.DeleteRule.DeleteRule
instance GHC.Classes.Eq Network.AWS.ELBV2.DeleteRule.DeleteRule
instance GHC.Generics.Generic Network.AWS.ELBV2.DeleteRule.DeleteRuleResponse
instance GHC.Show.Show Network.AWS.ELBV2.DeleteRule.DeleteRuleResponse
instance GHC.Read.Read Network.AWS.ELBV2.DeleteRule.DeleteRuleResponse
instance GHC.Classes.Eq Network.AWS.ELBV2.DeleteRule.DeleteRuleResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ELBV2.DeleteRule.DeleteRule
instance Control.DeepSeq.NFData Network.AWS.ELBV2.DeleteRule.DeleteRuleResponse
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.DeleteRule.DeleteRule
instance Control.DeepSeq.NFData Network.AWS.ELBV2.DeleteRule.DeleteRule
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ELBV2.DeleteRule.DeleteRule
instance Network.AWS.Data.Path.ToPath Network.AWS.ELBV2.DeleteRule.DeleteRule
instance Network.AWS.Data.Query.ToQuery Network.AWS.ELBV2.DeleteRule.DeleteRule


-- | Deletes the specified Application Load Balancer, Network Load
--   Balancer, or Gateway Load Balancer. Deleting a load balancer also
--   deletes its listeners.
--   
--   You can't delete a load balancer if deletion protection is enabled. If
--   the load balancer does not exist or has already been deleted, the call
--   succeeds.
--   
--   Deleting a load balancer does not affect its registered targets. For
--   example, your EC2 instances continue to run and are still registered
--   to their target groups. If you no longer need these EC2 instances, you
--   can stop or terminate them.
module Network.AWS.ELBV2.DeleteLoadBalancer

-- | <i>See:</i> <a>newDeleteLoadBalancer</a> smart constructor.
data DeleteLoadBalancer
DeleteLoadBalancer' :: Text -> DeleteLoadBalancer

-- | The Amazon Resource Name (ARN) of the load balancer.
[$sel:loadBalancerArn:DeleteLoadBalancer'] :: DeleteLoadBalancer -> Text

-- | Create a value of <a>DeleteLoadBalancer</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:loadBalancerArn:DeleteLoadBalancer'</a>,
--   <a>deleteLoadBalancer_loadBalancerArn</a> - The Amazon Resource Name
--   (ARN) of the load balancer.
newDeleteLoadBalancer :: Text -> DeleteLoadBalancer

-- | The Amazon Resource Name (ARN) of the load balancer.
deleteLoadBalancer_loadBalancerArn :: Lens' DeleteLoadBalancer Text

-- | <i>See:</i> <a>newDeleteLoadBalancerResponse</a> smart constructor.
data DeleteLoadBalancerResponse
DeleteLoadBalancerResponse' :: Int -> DeleteLoadBalancerResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteLoadBalancerResponse'] :: DeleteLoadBalancerResponse -> Int

-- | Create a value of <a>DeleteLoadBalancerResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteLoadBalancerResponse'</a>,
--   <a>deleteLoadBalancerResponse_httpStatus</a> - The response's http
--   status code.
newDeleteLoadBalancerResponse :: Int -> DeleteLoadBalancerResponse

-- | The response's http status code.
deleteLoadBalancerResponse_httpStatus :: Lens' DeleteLoadBalancerResponse Int
instance GHC.Generics.Generic Network.AWS.ELBV2.DeleteLoadBalancer.DeleteLoadBalancer
instance GHC.Show.Show Network.AWS.ELBV2.DeleteLoadBalancer.DeleteLoadBalancer
instance GHC.Read.Read Network.AWS.ELBV2.DeleteLoadBalancer.DeleteLoadBalancer
instance GHC.Classes.Eq Network.AWS.ELBV2.DeleteLoadBalancer.DeleteLoadBalancer
instance GHC.Generics.Generic Network.AWS.ELBV2.DeleteLoadBalancer.DeleteLoadBalancerResponse
instance GHC.Show.Show Network.AWS.ELBV2.DeleteLoadBalancer.DeleteLoadBalancerResponse
instance GHC.Read.Read Network.AWS.ELBV2.DeleteLoadBalancer.DeleteLoadBalancerResponse
instance GHC.Classes.Eq Network.AWS.ELBV2.DeleteLoadBalancer.DeleteLoadBalancerResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ELBV2.DeleteLoadBalancer.DeleteLoadBalancer
instance Control.DeepSeq.NFData Network.AWS.ELBV2.DeleteLoadBalancer.DeleteLoadBalancerResponse
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.DeleteLoadBalancer.DeleteLoadBalancer
instance Control.DeepSeq.NFData Network.AWS.ELBV2.DeleteLoadBalancer.DeleteLoadBalancer
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ELBV2.DeleteLoadBalancer.DeleteLoadBalancer
instance Network.AWS.Data.Path.ToPath Network.AWS.ELBV2.DeleteLoadBalancer.DeleteLoadBalancer
instance Network.AWS.Data.Query.ToQuery Network.AWS.ELBV2.DeleteLoadBalancer.DeleteLoadBalancer


-- | Deletes the specified listener.
--   
--   Alternatively, your listener is deleted when you delete the load
--   balancer to which it is attached.
module Network.AWS.ELBV2.DeleteListener

-- | <i>See:</i> <a>newDeleteListener</a> smart constructor.
data DeleteListener
DeleteListener' :: Text -> DeleteListener

-- | The Amazon Resource Name (ARN) of the listener.
[$sel:listenerArn:DeleteListener'] :: DeleteListener -> Text

-- | Create a value of <a>DeleteListener</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:listenerArn:DeleteListener'</a>,
--   <a>deleteListener_listenerArn</a> - The Amazon Resource Name (ARN) of
--   the listener.
newDeleteListener :: Text -> DeleteListener

-- | The Amazon Resource Name (ARN) of the listener.
deleteListener_listenerArn :: Lens' DeleteListener Text

-- | <i>See:</i> <a>newDeleteListenerResponse</a> smart constructor.
data DeleteListenerResponse
DeleteListenerResponse' :: Int -> DeleteListenerResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteListenerResponse'] :: DeleteListenerResponse -> Int

-- | Create a value of <a>DeleteListenerResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteListenerResponse'</a>,
--   <a>deleteListenerResponse_httpStatus</a> - The response's http status
--   code.
newDeleteListenerResponse :: Int -> DeleteListenerResponse

-- | The response's http status code.
deleteListenerResponse_httpStatus :: Lens' DeleteListenerResponse Int
instance GHC.Generics.Generic Network.AWS.ELBV2.DeleteListener.DeleteListener
instance GHC.Show.Show Network.AWS.ELBV2.DeleteListener.DeleteListener
instance GHC.Read.Read Network.AWS.ELBV2.DeleteListener.DeleteListener
instance GHC.Classes.Eq Network.AWS.ELBV2.DeleteListener.DeleteListener
instance GHC.Generics.Generic Network.AWS.ELBV2.DeleteListener.DeleteListenerResponse
instance GHC.Show.Show Network.AWS.ELBV2.DeleteListener.DeleteListenerResponse
instance GHC.Read.Read Network.AWS.ELBV2.DeleteListener.DeleteListenerResponse
instance GHC.Classes.Eq Network.AWS.ELBV2.DeleteListener.DeleteListenerResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ELBV2.DeleteListener.DeleteListener
instance Control.DeepSeq.NFData Network.AWS.ELBV2.DeleteListener.DeleteListenerResponse
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.DeleteListener.DeleteListener
instance Control.DeepSeq.NFData Network.AWS.ELBV2.DeleteListener.DeleteListener
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ELBV2.DeleteListener.DeleteListener
instance Network.AWS.Data.Path.ToPath Network.AWS.ELBV2.DeleteListener.DeleteListener
instance Network.AWS.Data.Query.ToQuery Network.AWS.ELBV2.DeleteListener.DeleteListener


-- | Creates a target group.
--   
--   For more information, see the following:
--   
--   <ul>
--   <li><a>Target groups for your Application Load Balancers</a></li>
--   <li><a>Target groups for your Network Load Balancers</a></li>
--   <li><a>Target groups for your Gateway Load Balancers</a></li>
--   </ul>
--   
--   This operation is idempotent, which means that it completes at most
--   one time. If you attempt to create multiple target groups with the
--   same settings, each call succeeds.
module Network.AWS.ELBV2.CreateTargetGroup

-- | <i>See:</i> <a>newCreateTargetGroup</a> smart constructor.
data CreateTargetGroup
CreateTargetGroup' :: Maybe Text -> Maybe Matcher -> Maybe Text -> Maybe Bool -> Maybe Natural -> Maybe Text -> Maybe ProtocolEnum -> Maybe Natural -> Maybe TargetTypeEnum -> Maybe Natural -> Maybe ProtocolEnum -> Maybe TargetGroupIpAddressTypeEnum -> Maybe Natural -> Maybe Text -> Maybe (NonEmpty Tag) -> Maybe Natural -> Text -> CreateTargetGroup

-- | <ul>
--   <li><i>HTTP/HTTPS protocol</i> The protocol version. Specify
--   <tt>GRPC</tt> to send requests to targets using gRPC. Specify
--   <tt>HTTP2</tt> to send requests to targets using HTTP/2. The default
--   is <tt>HTTP1</tt>, which sends requests to targets using
--   HTTP/1.1.</li>
--   </ul>
[$sel:protocolVersion:CreateTargetGroup'] :: CreateTargetGroup -> Maybe Text

-- | <ul>
--   <li><i>HTTP/HTTPS health checks</i> The HTTP or gRPC codes to use when
--   checking for a successful response from a target.</li>
--   </ul>
[$sel:matcher:CreateTargetGroup'] :: CreateTargetGroup -> Maybe Matcher

-- | <ul>
--   <li><i>HTTP/HTTPS health checks</i> The destination for health checks
--   on the targets.</li>
--   <li><i>HTTP1 or HTTP2 protocol version</i> The ping path. The default
--   is /.</li>
--   <li><i>GRPC protocol version</i> The path of a custom health check
--   method with the format /package.service/method. The default is /Amazon
--   Web Services.ALB/healthcheck.</li>
--   </ul>
[$sel:healthCheckPath:CreateTargetGroup'] :: CreateTargetGroup -> Maybe Text

-- | Indicates whether health checks are enabled. If the target type is
--   <tt>lambda</tt>, health checks are disabled by default but can be
--   enabled. If the target type is <tt>instance</tt>, <tt>ip</tt>, or
--   <tt>alb</tt>, health checks are always enabled and cannot be disabled.
[$sel:healthCheckEnabled:CreateTargetGroup'] :: CreateTargetGroup -> Maybe Bool

-- | The number of consecutive health check failures required before
--   considering a target unhealthy. If the target group protocol is HTTP
--   or HTTPS, the default is 2. If the target group protocol is TCP or
--   TLS, this value must be the same as the healthy threshold count. If
--   the target group protocol is GENEVE, the default is 3. If the target
--   type is <tt>lambda</tt>, the default is 2.
[$sel:unhealthyThresholdCount:CreateTargetGroup'] :: CreateTargetGroup -> Maybe Natural

-- | The identifier of the virtual private cloud (VPC). If the target is a
--   Lambda function, this parameter does not apply. Otherwise, this
--   parameter is required.
[$sel:vpcId:CreateTargetGroup'] :: CreateTargetGroup -> Maybe Text

-- | The protocol to use for routing traffic to the targets. For
--   Application Load Balancers, the supported protocols are HTTP and
--   HTTPS. For Network Load Balancers, the supported protocols are TCP,
--   TLS, UDP, or TCP_UDP. For Gateway Load Balancers, the supported
--   protocol is GENEVE. A TCP_UDP listener must be associated with a
--   TCP_UDP target group. If the target is a Lambda function, this
--   parameter does not apply.
[$sel:protocol:CreateTargetGroup'] :: CreateTargetGroup -> Maybe ProtocolEnum

-- | The approximate amount of time, in seconds, between health checks of
--   an individual target. If the target group protocol is TCP, TLS, UDP,
--   or TCP_UDP, the supported values are 10 and 30 seconds. If the target
--   group protocol is HTTP or HTTPS, the default is 30 seconds. If the
--   target group protocol is GENEVE, the default is 10 seconds. If the
--   target type is <tt>lambda</tt>, the default is 35 seconds.
[$sel:healthCheckIntervalSeconds:CreateTargetGroup'] :: CreateTargetGroup -> Maybe Natural

-- | The type of target that you must specify when registering targets with
--   this target group. You can't specify targets for a target group using
--   more than one target type.
--   
--   <ul>
--   <li><tt>instance</tt> - Register targets by instance ID. This is the
--   default value.</li>
--   <li><tt>ip</tt> - Register targets by IP address. You can specify IP
--   addresses from the subnets of the virtual private cloud (VPC) for the
--   target group, the RFC 1918 range (10.0.0.0/8, 172.16.0.0/12, and
--   192.168.0.0/16), and the RFC 6598 range (100.64.0.0/10). You can't
--   specify publicly routable IP addresses.</li>
--   <li><tt>lambda</tt> - Register a single Lambda function as a
--   target.</li>
--   <li><tt>alb</tt> - Register a single Application Load Balancer as a
--   target.</li>
--   </ul>
[$sel:targetType:CreateTargetGroup'] :: CreateTargetGroup -> Maybe TargetTypeEnum

-- | The number of consecutive health checks successes required before
--   considering an unhealthy target healthy. For target groups with a
--   protocol of HTTP or HTTPS, the default is 5. For target groups with a
--   protocol of TCP, TLS, or GENEVE, the default is 3. If the target type
--   is <tt>lambda</tt>, the default is 5.
[$sel:healthyThresholdCount:CreateTargetGroup'] :: CreateTargetGroup -> Maybe Natural

-- | The protocol the load balancer uses when performing health checks on
--   targets. For Application Load Balancers, the default is HTTP. For
--   Network Load Balancers and Gateway Load Balancers, the default is TCP.
--   The TCP protocol is not supported for health checks if the protocol of
--   the target group is HTTP or HTTPS. The GENEVE, TLS, UDP, and TCP_UDP
--   protocols are not supported for health checks.
[$sel:healthCheckProtocol:CreateTargetGroup'] :: CreateTargetGroup -> Maybe ProtocolEnum

-- | The type of IP address used for this target group. The possible values
--   are <tt>ipv4</tt> and <tt>ipv6</tt>. This is an optional parameter. If
--   not specified, the IP address type defaults to <tt>ipv4</tt>.
[$sel:ipAddressType:CreateTargetGroup'] :: CreateTargetGroup -> Maybe TargetGroupIpAddressTypeEnum

-- | The amount of time, in seconds, during which no response from a target
--   means a failed health check. For target groups with a protocol of
--   HTTP, HTTPS, or GENEVE, the default is 5 seconds. For target groups
--   with a protocol of TCP or TLS, this value must be 6 seconds for HTTP
--   health checks and 10 seconds for TCP and HTTPS health checks. If the
--   target type is <tt>lambda</tt>, the default is 30 seconds.
[$sel:healthCheckTimeoutSeconds:CreateTargetGroup'] :: CreateTargetGroup -> Maybe Natural

-- | The port the load balancer uses when performing health checks on
--   targets. If the protocol is HTTP, HTTPS, TCP, TLS, UDP, or TCP_UDP,
--   the default is <tt>traffic-port</tt>, which is the port on which each
--   target receives traffic from the load balancer. If the protocol is
--   GENEVE, the default is port 80.
[$sel:healthCheckPort:CreateTargetGroup'] :: CreateTargetGroup -> Maybe Text

-- | The tags to assign to the target group.
[$sel:tags:CreateTargetGroup'] :: CreateTargetGroup -> Maybe (NonEmpty Tag)

-- | The port on which the targets receive traffic. This port is used
--   unless you specify a port override when registering the target. If the
--   target is a Lambda function, this parameter does not apply. If the
--   protocol is GENEVE, the supported port is 6081.
[$sel:port:CreateTargetGroup'] :: CreateTargetGroup -> Maybe Natural

-- | The name of the target group.
--   
--   This name must be unique per region per account, can have a maximum of
--   32 characters, must contain only alphanumeric characters or hyphens,
--   and must not begin or end with a hyphen.
[$sel:name:CreateTargetGroup'] :: CreateTargetGroup -> Text

-- | Create a value of <a>CreateTargetGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:protocolVersion:CreateTargetGroup'</a>,
--   <a>createTargetGroup_protocolVersion</a> - [HTTP/HTTPS protocol] The
--   protocol version. Specify <tt>GRPC</tt> to send requests to targets
--   using gRPC. Specify <tt>HTTP2</tt> to send requests to targets using
--   HTTP/2. The default is <tt>HTTP1</tt>, which sends requests to targets
--   using HTTP/1.1.
--   
--   <a>$sel:matcher:CreateTargetGroup'</a>,
--   <a>createTargetGroup_matcher</a> - [HTTP/HTTPS health checks] The HTTP
--   or gRPC codes to use when checking for a successful response from a
--   target.
--   
--   <a>$sel:healthCheckPath:CreateTargetGroup'</a>,
--   <a>createTargetGroup_healthCheckPath</a> - [HTTP/HTTPS health checks]
--   The destination for health checks on the targets.
--   
--   <ul>
--   <li><i>HTTP1 or HTTP2 protocol version</i> The ping path. The default
--   is /.</li>
--   <li><i>GRPC protocol version</i> The path of a custom health check
--   method with the format /package.service/method. The default is /Amazon
--   Web Services.ALB/healthcheck.</li>
--   </ul>
--   
--   <a>$sel:healthCheckEnabled:CreateTargetGroup'</a>,
--   <a>createTargetGroup_healthCheckEnabled</a> - Indicates whether health
--   checks are enabled. If the target type is <tt>lambda</tt>, health
--   checks are disabled by default but can be enabled. If the target type
--   is <tt>instance</tt>, <tt>ip</tt>, or <tt>alb</tt>, health checks are
--   always enabled and cannot be disabled.
--   
--   <a>$sel:unhealthyThresholdCount:CreateTargetGroup'</a>,
--   <a>createTargetGroup_unhealthyThresholdCount</a> - The number of
--   consecutive health check failures required before considering a target
--   unhealthy. If the target group protocol is HTTP or HTTPS, the default
--   is 2. If the target group protocol is TCP or TLS, this value must be
--   the same as the healthy threshold count. If the target group protocol
--   is GENEVE, the default is 3. If the target type is <tt>lambda</tt>,
--   the default is 2.
--   
--   <a>$sel:vpcId:CreateTargetGroup'</a>, <a>createTargetGroup_vpcId</a> -
--   The identifier of the virtual private cloud (VPC). If the target is a
--   Lambda function, this parameter does not apply. Otherwise, this
--   parameter is required.
--   
--   <a>$sel:protocol:CreateTargetGroup'</a>,
--   <a>createTargetGroup_protocol</a> - The protocol to use for routing
--   traffic to the targets. For Application Load Balancers, the supported
--   protocols are HTTP and HTTPS. For Network Load Balancers, the
--   supported protocols are TCP, TLS, UDP, or TCP_UDP. For Gateway Load
--   Balancers, the supported protocol is GENEVE. A TCP_UDP listener must
--   be associated with a TCP_UDP target group. If the target is a Lambda
--   function, this parameter does not apply.
--   
--   <a>$sel:healthCheckIntervalSeconds:CreateTargetGroup'</a>,
--   <a>createTargetGroup_healthCheckIntervalSeconds</a> - The approximate
--   amount of time, in seconds, between health checks of an individual
--   target. If the target group protocol is TCP, TLS, UDP, or TCP_UDP, the
--   supported values are 10 and 30 seconds. If the target group protocol
--   is HTTP or HTTPS, the default is 30 seconds. If the target group
--   protocol is GENEVE, the default is 10 seconds. If the target type is
--   <tt>lambda</tt>, the default is 35 seconds.
--   
--   <a>$sel:targetType:CreateTargetGroup'</a>,
--   <a>createTargetGroup_targetType</a> - The type of target that you must
--   specify when registering targets with this target group. You can't
--   specify targets for a target group using more than one target type.
--   
--   <ul>
--   <li><tt>instance</tt> - Register targets by instance ID. This is the
--   default value.</li>
--   <li><tt>ip</tt> - Register targets by IP address. You can specify IP
--   addresses from the subnets of the virtual private cloud (VPC) for the
--   target group, the RFC 1918 range (10.0.0.0/8, 172.16.0.0/12, and
--   192.168.0.0/16), and the RFC 6598 range (100.64.0.0/10). You can't
--   specify publicly routable IP addresses.</li>
--   <li><tt>lambda</tt> - Register a single Lambda function as a
--   target.</li>
--   <li><tt>alb</tt> - Register a single Application Load Balancer as a
--   target.</li>
--   </ul>
--   
--   <a>$sel:healthyThresholdCount:CreateTargetGroup'</a>,
--   <a>createTargetGroup_healthyThresholdCount</a> - The number of
--   consecutive health checks successes required before considering an
--   unhealthy target healthy. For target groups with a protocol of HTTP or
--   HTTPS, the default is 5. For target groups with a protocol of TCP,
--   TLS, or GENEVE, the default is 3. If the target type is
--   <tt>lambda</tt>, the default is 5.
--   
--   <a>$sel:healthCheckProtocol:CreateTargetGroup'</a>,
--   <a>createTargetGroup_healthCheckProtocol</a> - The protocol the load
--   balancer uses when performing health checks on targets. For
--   Application Load Balancers, the default is HTTP. For Network Load
--   Balancers and Gateway Load Balancers, the default is TCP. The TCP
--   protocol is not supported for health checks if the protocol of the
--   target group is HTTP or HTTPS. The GENEVE, TLS, UDP, and TCP_UDP
--   protocols are not supported for health checks.
--   
--   <a>$sel:ipAddressType:CreateTargetGroup'</a>,
--   <a>createTargetGroup_ipAddressType</a> - The type of IP address used
--   for this target group. The possible values are <tt>ipv4</tt> and
--   <tt>ipv6</tt>. This is an optional parameter. If not specified, the IP
--   address type defaults to <tt>ipv4</tt>.
--   
--   <a>$sel:healthCheckTimeoutSeconds:CreateTargetGroup'</a>,
--   <a>createTargetGroup_healthCheckTimeoutSeconds</a> - The amount of
--   time, in seconds, during which no response from a target means a
--   failed health check. For target groups with a protocol of HTTP, HTTPS,
--   or GENEVE, the default is 5 seconds. For target groups with a protocol
--   of TCP or TLS, this value must be 6 seconds for HTTP health checks and
--   10 seconds for TCP and HTTPS health checks. If the target type is
--   <tt>lambda</tt>, the default is 30 seconds.
--   
--   <a>$sel:healthCheckPort:CreateTargetGroup'</a>,
--   <a>createTargetGroup_healthCheckPort</a> - The port the load balancer
--   uses when performing health checks on targets. If the protocol is
--   HTTP, HTTPS, TCP, TLS, UDP, or TCP_UDP, the default is
--   <tt>traffic-port</tt>, which is the port on which each target receives
--   traffic from the load balancer. If the protocol is GENEVE, the default
--   is port 80.
--   
--   <a>$sel:tags:CreateTargetGroup'</a>, <a>createTargetGroup_tags</a> -
--   The tags to assign to the target group.
--   
--   <a>$sel:port:CreateTargetGroup'</a>, <a>createTargetGroup_port</a> -
--   The port on which the targets receive traffic. This port is used
--   unless you specify a port override when registering the target. If the
--   target is a Lambda function, this parameter does not apply. If the
--   protocol is GENEVE, the supported port is 6081.
--   
--   <a>$sel:name:CreateTargetGroup'</a>, <a>createTargetGroup_name</a> -
--   The name of the target group.
--   
--   This name must be unique per region per account, can have a maximum of
--   32 characters, must contain only alphanumeric characters or hyphens,
--   and must not begin or end with a hyphen.
newCreateTargetGroup :: Text -> CreateTargetGroup

-- | <ul>
--   <li><i>HTTP/HTTPS protocol</i> The protocol version. Specify
--   <tt>GRPC</tt> to send requests to targets using gRPC. Specify
--   <tt>HTTP2</tt> to send requests to targets using HTTP/2. The default
--   is <tt>HTTP1</tt>, which sends requests to targets using
--   HTTP/1.1.</li>
--   </ul>
createTargetGroup_protocolVersion :: Lens' CreateTargetGroup (Maybe Text)

-- | <ul>
--   <li><i>HTTP/HTTPS health checks</i> The HTTP or gRPC codes to use when
--   checking for a successful response from a target.</li>
--   </ul>
createTargetGroup_matcher :: Lens' CreateTargetGroup (Maybe Matcher)

-- | <ul>
--   <li><i>HTTP/HTTPS health checks</i> The destination for health checks
--   on the targets.</li>
--   <li><i>HTTP1 or HTTP2 protocol version</i> The ping path. The default
--   is /.</li>
--   <li><i>GRPC protocol version</i> The path of a custom health check
--   method with the format /package.service/method. The default is /Amazon
--   Web Services.ALB/healthcheck.</li>
--   </ul>
createTargetGroup_healthCheckPath :: Lens' CreateTargetGroup (Maybe Text)

-- | Indicates whether health checks are enabled. If the target type is
--   <tt>lambda</tt>, health checks are disabled by default but can be
--   enabled. If the target type is <tt>instance</tt>, <tt>ip</tt>, or
--   <tt>alb</tt>, health checks are always enabled and cannot be disabled.
createTargetGroup_healthCheckEnabled :: Lens' CreateTargetGroup (Maybe Bool)

-- | The number of consecutive health check failures required before
--   considering a target unhealthy. If the target group protocol is HTTP
--   or HTTPS, the default is 2. If the target group protocol is TCP or
--   TLS, this value must be the same as the healthy threshold count. If
--   the target group protocol is GENEVE, the default is 3. If the target
--   type is <tt>lambda</tt>, the default is 2.
createTargetGroup_unhealthyThresholdCount :: Lens' CreateTargetGroup (Maybe Natural)

-- | The identifier of the virtual private cloud (VPC). If the target is a
--   Lambda function, this parameter does not apply. Otherwise, this
--   parameter is required.
createTargetGroup_vpcId :: Lens' CreateTargetGroup (Maybe Text)

-- | The protocol to use for routing traffic to the targets. For
--   Application Load Balancers, the supported protocols are HTTP and
--   HTTPS. For Network Load Balancers, the supported protocols are TCP,
--   TLS, UDP, or TCP_UDP. For Gateway Load Balancers, the supported
--   protocol is GENEVE. A TCP_UDP listener must be associated with a
--   TCP_UDP target group. If the target is a Lambda function, this
--   parameter does not apply.
createTargetGroup_protocol :: Lens' CreateTargetGroup (Maybe ProtocolEnum)

-- | The approximate amount of time, in seconds, between health checks of
--   an individual target. If the target group protocol is TCP, TLS, UDP,
--   or TCP_UDP, the supported values are 10 and 30 seconds. If the target
--   group protocol is HTTP or HTTPS, the default is 30 seconds. If the
--   target group protocol is GENEVE, the default is 10 seconds. If the
--   target type is <tt>lambda</tt>, the default is 35 seconds.
createTargetGroup_healthCheckIntervalSeconds :: Lens' CreateTargetGroup (Maybe Natural)

-- | The type of target that you must specify when registering targets with
--   this target group. You can't specify targets for a target group using
--   more than one target type.
--   
--   <ul>
--   <li><tt>instance</tt> - Register targets by instance ID. This is the
--   default value.</li>
--   <li><tt>ip</tt> - Register targets by IP address. You can specify IP
--   addresses from the subnets of the virtual private cloud (VPC) for the
--   target group, the RFC 1918 range (10.0.0.0/8, 172.16.0.0/12, and
--   192.168.0.0/16), and the RFC 6598 range (100.64.0.0/10). You can't
--   specify publicly routable IP addresses.</li>
--   <li><tt>lambda</tt> - Register a single Lambda function as a
--   target.</li>
--   <li><tt>alb</tt> - Register a single Application Load Balancer as a
--   target.</li>
--   </ul>
createTargetGroup_targetType :: Lens' CreateTargetGroup (Maybe TargetTypeEnum)

-- | The number of consecutive health checks successes required before
--   considering an unhealthy target healthy. For target groups with a
--   protocol of HTTP or HTTPS, the default is 5. For target groups with a
--   protocol of TCP, TLS, or GENEVE, the default is 3. If the target type
--   is <tt>lambda</tt>, the default is 5.
createTargetGroup_healthyThresholdCount :: Lens' CreateTargetGroup (Maybe Natural)

-- | The protocol the load balancer uses when performing health checks on
--   targets. For Application Load Balancers, the default is HTTP. For
--   Network Load Balancers and Gateway Load Balancers, the default is TCP.
--   The TCP protocol is not supported for health checks if the protocol of
--   the target group is HTTP or HTTPS. The GENEVE, TLS, UDP, and TCP_UDP
--   protocols are not supported for health checks.
createTargetGroup_healthCheckProtocol :: Lens' CreateTargetGroup (Maybe ProtocolEnum)

-- | The type of IP address used for this target group. The possible values
--   are <tt>ipv4</tt> and <tt>ipv6</tt>. This is an optional parameter. If
--   not specified, the IP address type defaults to <tt>ipv4</tt>.
createTargetGroup_ipAddressType :: Lens' CreateTargetGroup (Maybe TargetGroupIpAddressTypeEnum)

-- | The amount of time, in seconds, during which no response from a target
--   means a failed health check. For target groups with a protocol of
--   HTTP, HTTPS, or GENEVE, the default is 5 seconds. For target groups
--   with a protocol of TCP or TLS, this value must be 6 seconds for HTTP
--   health checks and 10 seconds for TCP and HTTPS health checks. If the
--   target type is <tt>lambda</tt>, the default is 30 seconds.
createTargetGroup_healthCheckTimeoutSeconds :: Lens' CreateTargetGroup (Maybe Natural)

-- | The port the load balancer uses when performing health checks on
--   targets. If the protocol is HTTP, HTTPS, TCP, TLS, UDP, or TCP_UDP,
--   the default is <tt>traffic-port</tt>, which is the port on which each
--   target receives traffic from the load balancer. If the protocol is
--   GENEVE, the default is port 80.
createTargetGroup_healthCheckPort :: Lens' CreateTargetGroup (Maybe Text)

-- | The tags to assign to the target group.
createTargetGroup_tags :: Lens' CreateTargetGroup (Maybe (NonEmpty Tag))

-- | The port on which the targets receive traffic. This port is used
--   unless you specify a port override when registering the target. If the
--   target is a Lambda function, this parameter does not apply. If the
--   protocol is GENEVE, the supported port is 6081.
createTargetGroup_port :: Lens' CreateTargetGroup (Maybe Natural)

-- | The name of the target group.
--   
--   This name must be unique per region per account, can have a maximum of
--   32 characters, must contain only alphanumeric characters or hyphens,
--   and must not begin or end with a hyphen.
createTargetGroup_name :: Lens' CreateTargetGroup Text

-- | <i>See:</i> <a>newCreateTargetGroupResponse</a> smart constructor.
data CreateTargetGroupResponse
CreateTargetGroupResponse' :: Maybe [TargetGroup] -> Int -> CreateTargetGroupResponse

-- | Information about the target group.
[$sel:targetGroups:CreateTargetGroupResponse'] :: CreateTargetGroupResponse -> Maybe [TargetGroup]

-- | The response's http status code.
[$sel:httpStatus:CreateTargetGroupResponse'] :: CreateTargetGroupResponse -> Int

-- | Create a value of <a>CreateTargetGroupResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetGroups:CreateTargetGroupResponse'</a>,
--   <a>createTargetGroupResponse_targetGroups</a> - Information about the
--   target group.
--   
--   <a>$sel:httpStatus:CreateTargetGroupResponse'</a>,
--   <a>createTargetGroupResponse_httpStatus</a> - The response's http
--   status code.
newCreateTargetGroupResponse :: Int -> CreateTargetGroupResponse

-- | Information about the target group.
createTargetGroupResponse_targetGroups :: Lens' CreateTargetGroupResponse (Maybe [TargetGroup])

-- | The response's http status code.
createTargetGroupResponse_httpStatus :: Lens' CreateTargetGroupResponse Int
instance GHC.Generics.Generic Network.AWS.ELBV2.CreateTargetGroup.CreateTargetGroup
instance GHC.Show.Show Network.AWS.ELBV2.CreateTargetGroup.CreateTargetGroup
instance GHC.Read.Read Network.AWS.ELBV2.CreateTargetGroup.CreateTargetGroup
instance GHC.Classes.Eq Network.AWS.ELBV2.CreateTargetGroup.CreateTargetGroup
instance GHC.Generics.Generic Network.AWS.ELBV2.CreateTargetGroup.CreateTargetGroupResponse
instance GHC.Show.Show Network.AWS.ELBV2.CreateTargetGroup.CreateTargetGroupResponse
instance GHC.Read.Read Network.AWS.ELBV2.CreateTargetGroup.CreateTargetGroupResponse
instance GHC.Classes.Eq Network.AWS.ELBV2.CreateTargetGroup.CreateTargetGroupResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ELBV2.CreateTargetGroup.CreateTargetGroup
instance Control.DeepSeq.NFData Network.AWS.ELBV2.CreateTargetGroup.CreateTargetGroupResponse
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.CreateTargetGroup.CreateTargetGroup
instance Control.DeepSeq.NFData Network.AWS.ELBV2.CreateTargetGroup.CreateTargetGroup
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ELBV2.CreateTargetGroup.CreateTargetGroup
instance Network.AWS.Data.Path.ToPath Network.AWS.ELBV2.CreateTargetGroup.CreateTargetGroup
instance Network.AWS.Data.Query.ToQuery Network.AWS.ELBV2.CreateTargetGroup.CreateTargetGroup


-- | Creates a rule for the specified listener. The listener must be
--   associated with an Application Load Balancer.
--   
--   Each rule consists of a priority, one or more actions, and one or more
--   conditions. Rules are evaluated in priority order, from the lowest
--   value to the highest value. When the conditions for a rule are met,
--   its actions are performed. If the conditions for no rules are met, the
--   actions for the default rule are performed. For more information, see
--   <a>Listener rules</a> in the <i>Application Load Balancers Guide</i>.
module Network.AWS.ELBV2.CreateRule

-- | <i>See:</i> <a>newCreateRule</a> smart constructor.
data CreateRule
CreateRule' :: Maybe (NonEmpty Tag) -> Text -> [RuleCondition] -> Natural -> [Action] -> CreateRule

-- | The tags to assign to the rule.
[$sel:tags:CreateRule'] :: CreateRule -> Maybe (NonEmpty Tag)

-- | The Amazon Resource Name (ARN) of the listener.
[$sel:listenerArn:CreateRule'] :: CreateRule -> Text

-- | The conditions.
[$sel:conditions:CreateRule'] :: CreateRule -> [RuleCondition]

-- | The rule priority. A listener can't have multiple rules with the same
--   priority.
[$sel:priority:CreateRule'] :: CreateRule -> Natural

-- | The actions.
[$sel:actions:CreateRule'] :: CreateRule -> [Action]

-- | Create a value of <a>CreateRule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:CreateRule'</a>, <a>createRule_tags</a> - The tags to
--   assign to the rule.
--   
--   <a>$sel:listenerArn:CreateRule'</a>, <a>createRule_listenerArn</a> -
--   The Amazon Resource Name (ARN) of the listener.
--   
--   <a>$sel:conditions:CreateRule'</a>, <a>createRule_conditions</a> - The
--   conditions.
--   
--   <a>$sel:priority:CreateRule'</a>, <a>createRule_priority</a> - The
--   rule priority. A listener can't have multiple rules with the same
--   priority.
--   
--   <a>$sel:actions:CreateRule'</a>, <a>createRule_actions</a> - The
--   actions.
newCreateRule :: Text -> Natural -> CreateRule

-- | The tags to assign to the rule.
createRule_tags :: Lens' CreateRule (Maybe (NonEmpty Tag))

-- | The Amazon Resource Name (ARN) of the listener.
createRule_listenerArn :: Lens' CreateRule Text

-- | The conditions.
createRule_conditions :: Lens' CreateRule [RuleCondition]

-- | The rule priority. A listener can't have multiple rules with the same
--   priority.
createRule_priority :: Lens' CreateRule Natural

-- | The actions.
createRule_actions :: Lens' CreateRule [Action]

-- | <i>See:</i> <a>newCreateRuleResponse</a> smart constructor.
data CreateRuleResponse
CreateRuleResponse' :: Maybe [Rule] -> Int -> CreateRuleResponse

-- | Information about the rule.
[$sel:rules:CreateRuleResponse'] :: CreateRuleResponse -> Maybe [Rule]

-- | The response's http status code.
[$sel:httpStatus:CreateRuleResponse'] :: CreateRuleResponse -> Int

-- | Create a value of <a>CreateRuleResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:rules:CreateRuleResponse'</a>, <a>createRuleResponse_rules</a>
--   - Information about the rule.
--   
--   <a>$sel:httpStatus:CreateRuleResponse'</a>,
--   <a>createRuleResponse_httpStatus</a> - The response's http status
--   code.
newCreateRuleResponse :: Int -> CreateRuleResponse

-- | Information about the rule.
createRuleResponse_rules :: Lens' CreateRuleResponse (Maybe [Rule])

-- | The response's http status code.
createRuleResponse_httpStatus :: Lens' CreateRuleResponse Int
instance GHC.Generics.Generic Network.AWS.ELBV2.CreateRule.CreateRule
instance GHC.Show.Show Network.AWS.ELBV2.CreateRule.CreateRule
instance GHC.Read.Read Network.AWS.ELBV2.CreateRule.CreateRule
instance GHC.Classes.Eq Network.AWS.ELBV2.CreateRule.CreateRule
instance GHC.Generics.Generic Network.AWS.ELBV2.CreateRule.CreateRuleResponse
instance GHC.Show.Show Network.AWS.ELBV2.CreateRule.CreateRuleResponse
instance GHC.Read.Read Network.AWS.ELBV2.CreateRule.CreateRuleResponse
instance GHC.Classes.Eq Network.AWS.ELBV2.CreateRule.CreateRuleResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ELBV2.CreateRule.CreateRule
instance Control.DeepSeq.NFData Network.AWS.ELBV2.CreateRule.CreateRuleResponse
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.CreateRule.CreateRule
instance Control.DeepSeq.NFData Network.AWS.ELBV2.CreateRule.CreateRule
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ELBV2.CreateRule.CreateRule
instance Network.AWS.Data.Path.ToPath Network.AWS.ELBV2.CreateRule.CreateRule
instance Network.AWS.Data.Query.ToQuery Network.AWS.ELBV2.CreateRule.CreateRule


-- | Creates an Application Load Balancer, Network Load Balancer, or
--   Gateway Load Balancer.
--   
--   For more information, see the following:
--   
--   <ul>
--   <li><a>Application Load Balancers</a></li>
--   <li><a>Network Load Balancers</a></li>
--   <li><a>Gateway Load Balancers</a></li>
--   </ul>
--   
--   This operation is idempotent, which means that it completes at most
--   one time. If you attempt to create multiple load balancers with the
--   same settings, each call succeeds.
module Network.AWS.ELBV2.CreateLoadBalancer

-- | <i>See:</i> <a>newCreateLoadBalancer</a> smart constructor.
data CreateLoadBalancer
CreateLoadBalancer' :: Maybe [SubnetMapping] -> Maybe [Text] -> Maybe [Text] -> Maybe Text -> Maybe IpAddressType -> Maybe LoadBalancerSchemeEnum -> Maybe LoadBalancerTypeEnum -> Maybe (NonEmpty Tag) -> Text -> CreateLoadBalancer

-- | The IDs of the public subnets. You can specify only one subnet per
--   Availability Zone. You must specify either subnets or subnet mappings.
--   
--   <ul>
--   <li><i>Application Load Balancers</i> You must specify subnets from at
--   least two Availability Zones. You cannot specify Elastic IP addresses
--   for your subnets.</li>
--   <li><i>Application Load Balancers on Outposts</i> You must specify one
--   Outpost subnet.</li>
--   <li><i>Application Load Balancers on Local Zones</i> You can specify
--   subnets from one or more Local Zones.</li>
--   <li><i>Network Load Balancers</i> You can specify subnets from one or
--   more Availability Zones. You can specify one Elastic IP address per
--   subnet if you need static IP addresses for your internet-facing load
--   balancer. For internal load balancers, you can specify one private IP
--   address per subnet from the IPv4 range of the subnet. For
--   internet-facing load balancer, you can specify one IPv6 address per
--   subnet.</li>
--   <li><i>Gateway Load Balancers</i> You can specify subnets from one or
--   more Availability Zones. You cannot specify Elastic IP addresses for
--   your subnets.</li>
--   </ul>
[$sel:subnetMappings:CreateLoadBalancer'] :: CreateLoadBalancer -> Maybe [SubnetMapping]

-- | <ul>
--   <li><i>Application Load Balancers</i> The IDs of the security groups
--   for the load balancer.</li>
--   </ul>
[$sel:securityGroups:CreateLoadBalancer'] :: CreateLoadBalancer -> Maybe [Text]

-- | The IDs of the public subnets. You can specify only one subnet per
--   Availability Zone. You must specify either subnets or subnet mappings.
--   
--   <ul>
--   <li><i>Application Load Balancers</i> You must specify subnets from at
--   least two Availability Zones.</li>
--   <li><i>Application Load Balancers on Outposts</i> You must specify one
--   Outpost subnet.</li>
--   <li><i>Application Load Balancers on Local Zones</i> You can specify
--   subnets from one or more Local Zones.</li>
--   <li><i>Network Load Balancers</i> You can specify subnets from one or
--   more Availability Zones.</li>
--   <li><i>Gateway Load Balancers</i> You can specify subnets from one or
--   more Availability Zones.</li>
--   </ul>
[$sel:subnets:CreateLoadBalancer'] :: CreateLoadBalancer -> Maybe [Text]

-- | <ul>
--   <li><i>Application Load Balancers on Outposts</i> The ID of the
--   customer-owned address pool (CoIP pool).</li>
--   </ul>
[$sel:customerOwnedIpv4Pool:CreateLoadBalancer'] :: CreateLoadBalancer -> Maybe Text

-- | The type of IP addresses used by the subnets for your load balancer.
--   The possible values are <tt>ipv4</tt> (for IPv4 addresses) and
--   <tt>dualstack</tt> (for IPv4 and IPv6 addresses). Internal load
--   balancers must use <tt>ipv4</tt>.
[$sel:ipAddressType:CreateLoadBalancer'] :: CreateLoadBalancer -> Maybe IpAddressType

-- | The nodes of an Internet-facing load balancer have public IP
--   addresses. The DNS name of an Internet-facing load balancer is
--   publicly resolvable to the public IP addresses of the nodes.
--   Therefore, Internet-facing load balancers can route requests from
--   clients over the internet.
--   
--   The nodes of an internal load balancer have only private IP addresses.
--   The DNS name of an internal load balancer is publicly resolvable to
--   the private IP addresses of the nodes. Therefore, internal load
--   balancers can route requests only from clients with access to the VPC
--   for the load balancer.
--   
--   The default is an Internet-facing load balancer.
--   
--   You cannot specify a scheme for a Gateway Load Balancer.
[$sel:scheme:CreateLoadBalancer'] :: CreateLoadBalancer -> Maybe LoadBalancerSchemeEnum

-- | The type of load balancer. The default is <tt>application</tt>.
[$sel:type':CreateLoadBalancer'] :: CreateLoadBalancer -> Maybe LoadBalancerTypeEnum

-- | The tags to assign to the load balancer.
[$sel:tags:CreateLoadBalancer'] :: CreateLoadBalancer -> Maybe (NonEmpty Tag)

-- | The name of the load balancer.
--   
--   This name must be unique per region per account, can have a maximum of
--   32 characters, must contain only alphanumeric characters or hyphens,
--   must not begin or end with a hyphen, and must not begin with
--   "internal-".
[$sel:name:CreateLoadBalancer'] :: CreateLoadBalancer -> Text

-- | Create a value of <a>CreateLoadBalancer</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subnetMappings:CreateLoadBalancer'</a>,
--   <a>createLoadBalancer_subnetMappings</a> - The IDs of the public
--   subnets. You can specify only one subnet per Availability Zone. You
--   must specify either subnets or subnet mappings.
--   
--   <ul>
--   <li><i>Application Load Balancers</i> You must specify subnets from at
--   least two Availability Zones. You cannot specify Elastic IP addresses
--   for your subnets.</li>
--   <li><i>Application Load Balancers on Outposts</i> You must specify one
--   Outpost subnet.</li>
--   <li><i>Application Load Balancers on Local Zones</i> You can specify
--   subnets from one or more Local Zones.</li>
--   <li><i>Network Load Balancers</i> You can specify subnets from one or
--   more Availability Zones. You can specify one Elastic IP address per
--   subnet if you need static IP addresses for your internet-facing load
--   balancer. For internal load balancers, you can specify one private IP
--   address per subnet from the IPv4 range of the subnet. For
--   internet-facing load balancer, you can specify one IPv6 address per
--   subnet.</li>
--   <li><i>Gateway Load Balancers</i> You can specify subnets from one or
--   more Availability Zones. You cannot specify Elastic IP addresses for
--   your subnets.</li>
--   </ul>
--   
--   <a>$sel:securityGroups:CreateLoadBalancer'</a>,
--   <a>createLoadBalancer_securityGroups</a> - [Application Load
--   Balancers] The IDs of the security groups for the load balancer.
--   
--   <a>$sel:subnets:CreateLoadBalancer'</a>,
--   <a>createLoadBalancer_subnets</a> - The IDs of the public subnets. You
--   can specify only one subnet per Availability Zone. You must specify
--   either subnets or subnet mappings.
--   
--   <ul>
--   <li><i>Application Load Balancers</i> You must specify subnets from at
--   least two Availability Zones.</li>
--   <li><i>Application Load Balancers on Outposts</i> You must specify one
--   Outpost subnet.</li>
--   <li><i>Application Load Balancers on Local Zones</i> You can specify
--   subnets from one or more Local Zones.</li>
--   <li><i>Network Load Balancers</i> You can specify subnets from one or
--   more Availability Zones.</li>
--   <li><i>Gateway Load Balancers</i> You can specify subnets from one or
--   more Availability Zones.</li>
--   </ul>
--   
--   <a>$sel:customerOwnedIpv4Pool:CreateLoadBalancer'</a>,
--   <a>createLoadBalancer_customerOwnedIpv4Pool</a> - [Application Load
--   Balancers on Outposts] The ID of the customer-owned address pool (CoIP
--   pool).
--   
--   <a>$sel:ipAddressType:CreateLoadBalancer'</a>,
--   <a>createLoadBalancer_ipAddressType</a> - The type of IP addresses
--   used by the subnets for your load balancer. The possible values are
--   <tt>ipv4</tt> (for IPv4 addresses) and <tt>dualstack</tt> (for IPv4
--   and IPv6 addresses). Internal load balancers must use <tt>ipv4</tt>.
--   
--   <a>$sel:scheme:CreateLoadBalancer'</a>,
--   <a>createLoadBalancer_scheme</a> - The nodes of an Internet-facing
--   load balancer have public IP addresses. The DNS name of an
--   Internet-facing load balancer is publicly resolvable to the public IP
--   addresses of the nodes. Therefore, Internet-facing load balancers can
--   route requests from clients over the internet.
--   
--   The nodes of an internal load balancer have only private IP addresses.
--   The DNS name of an internal load balancer is publicly resolvable to
--   the private IP addresses of the nodes. Therefore, internal load
--   balancers can route requests only from clients with access to the VPC
--   for the load balancer.
--   
--   The default is an Internet-facing load balancer.
--   
--   You cannot specify a scheme for a Gateway Load Balancer.
--   
--   <a>$sel:type':CreateLoadBalancer'</a>, <a>createLoadBalancer_type</a>
--   - The type of load balancer. The default is <tt>application</tt>.
--   
--   <a>$sel:tags:CreateLoadBalancer'</a>, <a>createLoadBalancer_tags</a> -
--   The tags to assign to the load balancer.
--   
--   <a>$sel:name:CreateLoadBalancer'</a>, <a>createLoadBalancer_name</a> -
--   The name of the load balancer.
--   
--   This name must be unique per region per account, can have a maximum of
--   32 characters, must contain only alphanumeric characters or hyphens,
--   must not begin or end with a hyphen, and must not begin with
--   "internal-".
newCreateLoadBalancer :: Text -> CreateLoadBalancer

-- | The IDs of the public subnets. You can specify only one subnet per
--   Availability Zone. You must specify either subnets or subnet mappings.
--   
--   <ul>
--   <li><i>Application Load Balancers</i> You must specify subnets from at
--   least two Availability Zones. You cannot specify Elastic IP addresses
--   for your subnets.</li>
--   <li><i>Application Load Balancers on Outposts</i> You must specify one
--   Outpost subnet.</li>
--   <li><i>Application Load Balancers on Local Zones</i> You can specify
--   subnets from one or more Local Zones.</li>
--   <li><i>Network Load Balancers</i> You can specify subnets from one or
--   more Availability Zones. You can specify one Elastic IP address per
--   subnet if you need static IP addresses for your internet-facing load
--   balancer. For internal load balancers, you can specify one private IP
--   address per subnet from the IPv4 range of the subnet. For
--   internet-facing load balancer, you can specify one IPv6 address per
--   subnet.</li>
--   <li><i>Gateway Load Balancers</i> You can specify subnets from one or
--   more Availability Zones. You cannot specify Elastic IP addresses for
--   your subnets.</li>
--   </ul>
createLoadBalancer_subnetMappings :: Lens' CreateLoadBalancer (Maybe [SubnetMapping])

-- | <ul>
--   <li><i>Application Load Balancers</i> The IDs of the security groups
--   for the load balancer.</li>
--   </ul>
createLoadBalancer_securityGroups :: Lens' CreateLoadBalancer (Maybe [Text])

-- | The IDs of the public subnets. You can specify only one subnet per
--   Availability Zone. You must specify either subnets or subnet mappings.
--   
--   <ul>
--   <li><i>Application Load Balancers</i> You must specify subnets from at
--   least two Availability Zones.</li>
--   <li><i>Application Load Balancers on Outposts</i> You must specify one
--   Outpost subnet.</li>
--   <li><i>Application Load Balancers on Local Zones</i> You can specify
--   subnets from one or more Local Zones.</li>
--   <li><i>Network Load Balancers</i> You can specify subnets from one or
--   more Availability Zones.</li>
--   <li><i>Gateway Load Balancers</i> You can specify subnets from one or
--   more Availability Zones.</li>
--   </ul>
createLoadBalancer_subnets :: Lens' CreateLoadBalancer (Maybe [Text])

-- | <ul>
--   <li><i>Application Load Balancers on Outposts</i> The ID of the
--   customer-owned address pool (CoIP pool).</li>
--   </ul>
createLoadBalancer_customerOwnedIpv4Pool :: Lens' CreateLoadBalancer (Maybe Text)

-- | The type of IP addresses used by the subnets for your load balancer.
--   The possible values are <tt>ipv4</tt> (for IPv4 addresses) and
--   <tt>dualstack</tt> (for IPv4 and IPv6 addresses). Internal load
--   balancers must use <tt>ipv4</tt>.
createLoadBalancer_ipAddressType :: Lens' CreateLoadBalancer (Maybe IpAddressType)

-- | The nodes of an Internet-facing load balancer have public IP
--   addresses. The DNS name of an Internet-facing load balancer is
--   publicly resolvable to the public IP addresses of the nodes.
--   Therefore, Internet-facing load balancers can route requests from
--   clients over the internet.
--   
--   The nodes of an internal load balancer have only private IP addresses.
--   The DNS name of an internal load balancer is publicly resolvable to
--   the private IP addresses of the nodes. Therefore, internal load
--   balancers can route requests only from clients with access to the VPC
--   for the load balancer.
--   
--   The default is an Internet-facing load balancer.
--   
--   You cannot specify a scheme for a Gateway Load Balancer.
createLoadBalancer_scheme :: Lens' CreateLoadBalancer (Maybe LoadBalancerSchemeEnum)

-- | The type of load balancer. The default is <tt>application</tt>.
createLoadBalancer_type :: Lens' CreateLoadBalancer (Maybe LoadBalancerTypeEnum)

-- | The tags to assign to the load balancer.
createLoadBalancer_tags :: Lens' CreateLoadBalancer (Maybe (NonEmpty Tag))

-- | The name of the load balancer.
--   
--   This name must be unique per region per account, can have a maximum of
--   32 characters, must contain only alphanumeric characters or hyphens,
--   must not begin or end with a hyphen, and must not begin with
--   "internal-".
createLoadBalancer_name :: Lens' CreateLoadBalancer Text

-- | <i>See:</i> <a>newCreateLoadBalancerResponse</a> smart constructor.
data CreateLoadBalancerResponse
CreateLoadBalancerResponse' :: Maybe [LoadBalancer] -> Int -> CreateLoadBalancerResponse

-- | Information about the load balancer.
[$sel:loadBalancers:CreateLoadBalancerResponse'] :: CreateLoadBalancerResponse -> Maybe [LoadBalancer]

-- | The response's http status code.
[$sel:httpStatus:CreateLoadBalancerResponse'] :: CreateLoadBalancerResponse -> Int

-- | Create a value of <a>CreateLoadBalancerResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:loadBalancers:CreateLoadBalancerResponse'</a>,
--   <a>createLoadBalancerResponse_loadBalancers</a> - Information about
--   the load balancer.
--   
--   <a>$sel:httpStatus:CreateLoadBalancerResponse'</a>,
--   <a>createLoadBalancerResponse_httpStatus</a> - The response's http
--   status code.
newCreateLoadBalancerResponse :: Int -> CreateLoadBalancerResponse

-- | Information about the load balancer.
createLoadBalancerResponse_loadBalancers :: Lens' CreateLoadBalancerResponse (Maybe [LoadBalancer])

-- | The response's http status code.
createLoadBalancerResponse_httpStatus :: Lens' CreateLoadBalancerResponse Int
instance GHC.Generics.Generic Network.AWS.ELBV2.CreateLoadBalancer.CreateLoadBalancer
instance GHC.Show.Show Network.AWS.ELBV2.CreateLoadBalancer.CreateLoadBalancer
instance GHC.Read.Read Network.AWS.ELBV2.CreateLoadBalancer.CreateLoadBalancer
instance GHC.Classes.Eq Network.AWS.ELBV2.CreateLoadBalancer.CreateLoadBalancer
instance GHC.Generics.Generic Network.AWS.ELBV2.CreateLoadBalancer.CreateLoadBalancerResponse
instance GHC.Show.Show Network.AWS.ELBV2.CreateLoadBalancer.CreateLoadBalancerResponse
instance GHC.Read.Read Network.AWS.ELBV2.CreateLoadBalancer.CreateLoadBalancerResponse
instance GHC.Classes.Eq Network.AWS.ELBV2.CreateLoadBalancer.CreateLoadBalancerResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ELBV2.CreateLoadBalancer.CreateLoadBalancer
instance Control.DeepSeq.NFData Network.AWS.ELBV2.CreateLoadBalancer.CreateLoadBalancerResponse
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.CreateLoadBalancer.CreateLoadBalancer
instance Control.DeepSeq.NFData Network.AWS.ELBV2.CreateLoadBalancer.CreateLoadBalancer
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ELBV2.CreateLoadBalancer.CreateLoadBalancer
instance Network.AWS.Data.Path.ToPath Network.AWS.ELBV2.CreateLoadBalancer.CreateLoadBalancer
instance Network.AWS.Data.Query.ToQuery Network.AWS.ELBV2.CreateLoadBalancer.CreateLoadBalancer


-- | Creates a listener for the specified Application Load Balancer,
--   Network Load Balancer, or Gateway Load Balancer.
--   
--   For more information, see the following:
--   
--   <ul>
--   <li><a>Listeners for your Application Load Balancers</a></li>
--   <li><a>Listeners for your Network Load Balancers</a></li>
--   <li><a>Listeners for your Gateway Load Balancers</a></li>
--   </ul>
--   
--   This operation is idempotent, which means that it completes at most
--   one time. If you attempt to create multiple listeners with the same
--   settings, each call succeeds.
module Network.AWS.ELBV2.CreateListener

-- | <i>See:</i> <a>newCreateListener</a> smart constructor.
data CreateListener
CreateListener' :: Maybe Text -> Maybe ProtocolEnum -> Maybe [Certificate] -> Maybe [Text] -> Maybe (NonEmpty Tag) -> Maybe Natural -> Text -> [Action] -> CreateListener

-- | <ul>
--   <li><i>HTTPS and TLS listeners</i> The security policy that defines
--   which protocols and ciphers are supported.</li>
--   </ul>
--   
--   For more information, see <a>Security policies</a> in the
--   <i>Application Load Balancers Guide</i> and <a>Security policies</a>
--   in the <i>Network Load Balancers Guide</i>.
[$sel:sslPolicy:CreateListener'] :: CreateListener -> Maybe Text

-- | The protocol for connections from clients to the load balancer. For
--   Application Load Balancers, the supported protocols are HTTP and
--   HTTPS. For Network Load Balancers, the supported protocols are TCP,
--   TLS, UDP, and TCP_UDP. You can’t specify the UDP or TCP_UDP protocol
--   if dual-stack mode is enabled. You cannot specify a protocol for a
--   Gateway Load Balancer.
[$sel:protocol:CreateListener'] :: CreateListener -> Maybe ProtocolEnum

-- | <ul>
--   <li><i>HTTPS and TLS listeners</i> The default certificate for the
--   listener. You must provide exactly one certificate. Set
--   <tt>CertificateArn</tt> to the certificate ARN but do not set
--   <tt>IsDefault</tt>.</li>
--   </ul>
[$sel:certificates:CreateListener'] :: CreateListener -> Maybe [Certificate]

-- | <ul>
--   <li><i>TLS listeners</i> The name of the Application-Layer Protocol
--   Negotiation (ALPN) policy. You can specify one policy name. The
--   following are the possible values:</li>
--   </ul>
--   
--   <ul>
--   <li><pre>HTTP1Only</pre></li>
--   <li><pre>HTTP2Only</pre></li>
--   <li><pre>HTTP2Optional</pre></li>
--   <li><pre>HTTP2Preferred</pre></li>
--   <li><pre>None</pre></li>
--   </ul>
--   
--   For more information, see <a>ALPN policies</a> in the <i>Network Load
--   Balancers Guide</i>.
[$sel:alpnPolicy:CreateListener'] :: CreateListener -> Maybe [Text]

-- | The tags to assign to the listener.
[$sel:tags:CreateListener'] :: CreateListener -> Maybe (NonEmpty Tag)

-- | The port on which the load balancer is listening. You cannot specify a
--   port for a Gateway Load Balancer.
[$sel:port:CreateListener'] :: CreateListener -> Maybe Natural

-- | The Amazon Resource Name (ARN) of the load balancer.
[$sel:loadBalancerArn:CreateListener'] :: CreateListener -> Text

-- | The actions for the default rule.
[$sel:defaultActions:CreateListener'] :: CreateListener -> [Action]

-- | Create a value of <a>CreateListener</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sslPolicy:CreateListener'</a>, <a>createListener_sslPolicy</a>
--   - [HTTPS and TLS listeners] The security policy that defines which
--   protocols and ciphers are supported.
--   
--   For more information, see <a>Security policies</a> in the
--   <i>Application Load Balancers Guide</i> and <a>Security policies</a>
--   in the <i>Network Load Balancers Guide</i>.
--   
--   <a>$sel:protocol:CreateListener'</a>, <a>createListener_protocol</a> -
--   The protocol for connections from clients to the load balancer. For
--   Application Load Balancers, the supported protocols are HTTP and
--   HTTPS. For Network Load Balancers, the supported protocols are TCP,
--   TLS, UDP, and TCP_UDP. You can’t specify the UDP or TCP_UDP protocol
--   if dual-stack mode is enabled. You cannot specify a protocol for a
--   Gateway Load Balancer.
--   
--   <a>$sel:certificates:CreateListener'</a>,
--   <a>createListener_certificates</a> - [HTTPS and TLS listeners] The
--   default certificate for the listener. You must provide exactly one
--   certificate. Set <tt>CertificateArn</tt> to the certificate ARN but do
--   not set <tt>IsDefault</tt>.
--   
--   <a>$sel:alpnPolicy:CreateListener'</a>,
--   <a>createListener_alpnPolicy</a> - [TLS listeners] The name of the
--   Application-Layer Protocol Negotiation (ALPN) policy. You can specify
--   one policy name. The following are the possible values:
--   
--   <ul>
--   <li><pre>HTTP1Only</pre></li>
--   <li><pre>HTTP2Only</pre></li>
--   <li><pre>HTTP2Optional</pre></li>
--   <li><pre>HTTP2Preferred</pre></li>
--   <li><pre>None</pre></li>
--   </ul>
--   
--   For more information, see <a>ALPN policies</a> in the <i>Network Load
--   Balancers Guide</i>.
--   
--   <a>$sel:tags:CreateListener'</a>, <a>createListener_tags</a> - The
--   tags to assign to the listener.
--   
--   <a>$sel:port:CreateListener'</a>, <a>createListener_port</a> - The
--   port on which the load balancer is listening. You cannot specify a
--   port for a Gateway Load Balancer.
--   
--   <a>$sel:loadBalancerArn:CreateListener'</a>,
--   <a>createListener_loadBalancerArn</a> - The Amazon Resource Name (ARN)
--   of the load balancer.
--   
--   <a>$sel:defaultActions:CreateListener'</a>,
--   <a>createListener_defaultActions</a> - The actions for the default
--   rule.
newCreateListener :: Text -> CreateListener

-- | <ul>
--   <li><i>HTTPS and TLS listeners</i> The security policy that defines
--   which protocols and ciphers are supported.</li>
--   </ul>
--   
--   For more information, see <a>Security policies</a> in the
--   <i>Application Load Balancers Guide</i> and <a>Security policies</a>
--   in the <i>Network Load Balancers Guide</i>.
createListener_sslPolicy :: Lens' CreateListener (Maybe Text)

-- | The protocol for connections from clients to the load balancer. For
--   Application Load Balancers, the supported protocols are HTTP and
--   HTTPS. For Network Load Balancers, the supported protocols are TCP,
--   TLS, UDP, and TCP_UDP. You can’t specify the UDP or TCP_UDP protocol
--   if dual-stack mode is enabled. You cannot specify a protocol for a
--   Gateway Load Balancer.
createListener_protocol :: Lens' CreateListener (Maybe ProtocolEnum)

-- | <ul>
--   <li><i>HTTPS and TLS listeners</i> The default certificate for the
--   listener. You must provide exactly one certificate. Set
--   <tt>CertificateArn</tt> to the certificate ARN but do not set
--   <tt>IsDefault</tt>.</li>
--   </ul>
createListener_certificates :: Lens' CreateListener (Maybe [Certificate])

-- | <ul>
--   <li><i>TLS listeners</i> The name of the Application-Layer Protocol
--   Negotiation (ALPN) policy. You can specify one policy name. The
--   following are the possible values:</li>
--   </ul>
--   
--   <ul>
--   <li><pre>HTTP1Only</pre></li>
--   <li><pre>HTTP2Only</pre></li>
--   <li><pre>HTTP2Optional</pre></li>
--   <li><pre>HTTP2Preferred</pre></li>
--   <li><pre>None</pre></li>
--   </ul>
--   
--   For more information, see <a>ALPN policies</a> in the <i>Network Load
--   Balancers Guide</i>.
createListener_alpnPolicy :: Lens' CreateListener (Maybe [Text])

-- | The tags to assign to the listener.
createListener_tags :: Lens' CreateListener (Maybe (NonEmpty Tag))

-- | The port on which the load balancer is listening. You cannot specify a
--   port for a Gateway Load Balancer.
createListener_port :: Lens' CreateListener (Maybe Natural)

-- | The Amazon Resource Name (ARN) of the load balancer.
createListener_loadBalancerArn :: Lens' CreateListener Text

-- | The actions for the default rule.
createListener_defaultActions :: Lens' CreateListener [Action]

-- | <i>See:</i> <a>newCreateListenerResponse</a> smart constructor.
data CreateListenerResponse
CreateListenerResponse' :: Maybe [Listener] -> Int -> CreateListenerResponse

-- | Information about the listener.
[$sel:listeners:CreateListenerResponse'] :: CreateListenerResponse -> Maybe [Listener]

-- | The response's http status code.
[$sel:httpStatus:CreateListenerResponse'] :: CreateListenerResponse -> Int

-- | Create a value of <a>CreateListenerResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:listeners:CreateListenerResponse'</a>,
--   <a>createListenerResponse_listeners</a> - Information about the
--   listener.
--   
--   <a>$sel:httpStatus:CreateListenerResponse'</a>,
--   <a>createListenerResponse_httpStatus</a> - The response's http status
--   code.
newCreateListenerResponse :: Int -> CreateListenerResponse

-- | Information about the listener.
createListenerResponse_listeners :: Lens' CreateListenerResponse (Maybe [Listener])

-- | The response's http status code.
createListenerResponse_httpStatus :: Lens' CreateListenerResponse Int
instance GHC.Generics.Generic Network.AWS.ELBV2.CreateListener.CreateListener
instance GHC.Show.Show Network.AWS.ELBV2.CreateListener.CreateListener
instance GHC.Read.Read Network.AWS.ELBV2.CreateListener.CreateListener
instance GHC.Classes.Eq Network.AWS.ELBV2.CreateListener.CreateListener
instance GHC.Generics.Generic Network.AWS.ELBV2.CreateListener.CreateListenerResponse
instance GHC.Show.Show Network.AWS.ELBV2.CreateListener.CreateListenerResponse
instance GHC.Read.Read Network.AWS.ELBV2.CreateListener.CreateListenerResponse
instance GHC.Classes.Eq Network.AWS.ELBV2.CreateListener.CreateListenerResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ELBV2.CreateListener.CreateListener
instance Control.DeepSeq.NFData Network.AWS.ELBV2.CreateListener.CreateListenerResponse
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.CreateListener.CreateListener
instance Control.DeepSeq.NFData Network.AWS.ELBV2.CreateListener.CreateListener
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ELBV2.CreateListener.CreateListener
instance Network.AWS.Data.Path.ToPath Network.AWS.ELBV2.CreateListener.CreateListener
instance Network.AWS.Data.Query.ToQuery Network.AWS.ELBV2.CreateListener.CreateListener


-- | Adds the specified tags to the specified Elastic Load Balancing
--   resource. You can tag your Application Load Balancers, Network Load
--   Balancers, Gateway Load Balancers, target groups, listeners, and
--   rules.
--   
--   Each tag consists of a key and an optional value. If a resource
--   already has a tag with the same key, <tt>AddTags</tt> updates its
--   value.
module Network.AWS.ELBV2.AddTags

-- | <i>See:</i> <a>newAddTags</a> smart constructor.
data AddTags
AddTags' :: [Text] -> NonEmpty Tag -> AddTags

-- | The Amazon Resource Name (ARN) of the resource.
[$sel:resourceArns:AddTags'] :: AddTags -> [Text]

-- | The tags.
[$sel:tags:AddTags'] :: AddTags -> NonEmpty Tag

-- | Create a value of <a>AddTags</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArns:AddTags'</a>, <a>addTags_resourceArns</a> - The
--   Amazon Resource Name (ARN) of the resource.
--   
--   <a>$sel:tags:AddTags'</a>, <a>addTags_tags</a> - The tags.
newAddTags :: NonEmpty Tag -> AddTags

-- | The Amazon Resource Name (ARN) of the resource.
addTags_resourceArns :: Lens' AddTags [Text]

-- | The tags.
addTags_tags :: Lens' AddTags (NonEmpty Tag)

-- | <i>See:</i> <a>newAddTagsResponse</a> smart constructor.
data AddTagsResponse
AddTagsResponse' :: Int -> AddTagsResponse

-- | The response's http status code.
[$sel:httpStatus:AddTagsResponse'] :: AddTagsResponse -> Int

-- | Create a value of <a>AddTagsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:AddTagsResponse'</a>,
--   <a>addTagsResponse_httpStatus</a> - The response's http status code.
newAddTagsResponse :: Int -> AddTagsResponse

-- | The response's http status code.
addTagsResponse_httpStatus :: Lens' AddTagsResponse Int
instance GHC.Generics.Generic Network.AWS.ELBV2.AddTags.AddTags
instance GHC.Show.Show Network.AWS.ELBV2.AddTags.AddTags
instance GHC.Read.Read Network.AWS.ELBV2.AddTags.AddTags
instance GHC.Classes.Eq Network.AWS.ELBV2.AddTags.AddTags
instance GHC.Generics.Generic Network.AWS.ELBV2.AddTags.AddTagsResponse
instance GHC.Show.Show Network.AWS.ELBV2.AddTags.AddTagsResponse
instance GHC.Read.Read Network.AWS.ELBV2.AddTags.AddTagsResponse
instance GHC.Classes.Eq Network.AWS.ELBV2.AddTags.AddTagsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ELBV2.AddTags.AddTags
instance Control.DeepSeq.NFData Network.AWS.ELBV2.AddTags.AddTagsResponse
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.AddTags.AddTags
instance Control.DeepSeq.NFData Network.AWS.ELBV2.AddTags.AddTags
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ELBV2.AddTags.AddTags
instance Network.AWS.Data.Path.ToPath Network.AWS.ELBV2.AddTags.AddTags
instance Network.AWS.Data.Query.ToQuery Network.AWS.ELBV2.AddTags.AddTags


-- | Adds the specified SSL server certificate to the certificate list for
--   the specified HTTPS or TLS listener.
--   
--   If the certificate in already in the certificate list, the call is
--   successful but the certificate is not added again.
--   
--   For more information, see <a>HTTPS listeners</a> in the <i>Application
--   Load Balancers Guide</i> or <a>TLS listeners</a> in the <i>Network
--   Load Balancers Guide</i>.
module Network.AWS.ELBV2.AddListenerCertificates

-- | <i>See:</i> <a>newAddListenerCertificates</a> smart constructor.
data AddListenerCertificates
AddListenerCertificates' :: Text -> [Certificate] -> AddListenerCertificates

-- | The Amazon Resource Name (ARN) of the listener.
[$sel:listenerArn:AddListenerCertificates'] :: AddListenerCertificates -> Text

-- | The certificate to add. You can specify one certificate per call. Set
--   <tt>CertificateArn</tt> to the certificate ARN but do not set
--   <tt>IsDefault</tt>.
[$sel:certificates:AddListenerCertificates'] :: AddListenerCertificates -> [Certificate]

-- | Create a value of <a>AddListenerCertificates</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:listenerArn:AddListenerCertificates'</a>,
--   <a>addListenerCertificates_listenerArn</a> - The Amazon Resource Name
--   (ARN) of the listener.
--   
--   <a>$sel:certificates:AddListenerCertificates'</a>,
--   <a>addListenerCertificates_certificates</a> - The certificate to add.
--   You can specify one certificate per call. Set <tt>CertificateArn</tt>
--   to the certificate ARN but do not set <tt>IsDefault</tt>.
newAddListenerCertificates :: Text -> AddListenerCertificates

-- | The Amazon Resource Name (ARN) of the listener.
addListenerCertificates_listenerArn :: Lens' AddListenerCertificates Text

-- | The certificate to add. You can specify one certificate per call. Set
--   <tt>CertificateArn</tt> to the certificate ARN but do not set
--   <tt>IsDefault</tt>.
addListenerCertificates_certificates :: Lens' AddListenerCertificates [Certificate]

-- | <i>See:</i> <a>newAddListenerCertificatesResponse</a> smart
--   constructor.
data AddListenerCertificatesResponse
AddListenerCertificatesResponse' :: Maybe [Certificate] -> Int -> AddListenerCertificatesResponse

-- | Information about the certificates in the certificate list.
[$sel:certificates:AddListenerCertificatesResponse'] :: AddListenerCertificatesResponse -> Maybe [Certificate]

-- | The response's http status code.
[$sel:httpStatus:AddListenerCertificatesResponse'] :: AddListenerCertificatesResponse -> Int

-- | Create a value of <a>AddListenerCertificatesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:certificates:AddListenerCertificates'</a>,
--   <a>addListenerCertificatesResponse_certificates</a> - Information
--   about the certificates in the certificate list.
--   
--   <a>$sel:httpStatus:AddListenerCertificatesResponse'</a>,
--   <a>addListenerCertificatesResponse_httpStatus</a> - The response's
--   http status code.
newAddListenerCertificatesResponse :: Int -> AddListenerCertificatesResponse

-- | Information about the certificates in the certificate list.
addListenerCertificatesResponse_certificates :: Lens' AddListenerCertificatesResponse (Maybe [Certificate])

-- | The response's http status code.
addListenerCertificatesResponse_httpStatus :: Lens' AddListenerCertificatesResponse Int
instance GHC.Generics.Generic Network.AWS.ELBV2.AddListenerCertificates.AddListenerCertificates
instance GHC.Show.Show Network.AWS.ELBV2.AddListenerCertificates.AddListenerCertificates
instance GHC.Read.Read Network.AWS.ELBV2.AddListenerCertificates.AddListenerCertificates
instance GHC.Classes.Eq Network.AWS.ELBV2.AddListenerCertificates.AddListenerCertificates
instance GHC.Generics.Generic Network.AWS.ELBV2.AddListenerCertificates.AddListenerCertificatesResponse
instance GHC.Show.Show Network.AWS.ELBV2.AddListenerCertificates.AddListenerCertificatesResponse
instance GHC.Read.Read Network.AWS.ELBV2.AddListenerCertificates.AddListenerCertificatesResponse
instance GHC.Classes.Eq Network.AWS.ELBV2.AddListenerCertificates.AddListenerCertificatesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ELBV2.AddListenerCertificates.AddListenerCertificates
instance Control.DeepSeq.NFData Network.AWS.ELBV2.AddListenerCertificates.AddListenerCertificatesResponse
instance Data.Hashable.Class.Hashable Network.AWS.ELBV2.AddListenerCertificates.AddListenerCertificates
instance Control.DeepSeq.NFData Network.AWS.ELBV2.AddListenerCertificates.AddListenerCertificates
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ELBV2.AddListenerCertificates.AddListenerCertificates
instance Network.AWS.Data.Path.ToPath Network.AWS.ELBV2.AddListenerCertificates.AddListenerCertificates
instance Network.AWS.Data.Query.ToQuery Network.AWS.ELBV2.AddListenerCertificates.AddListenerCertificates


module Network.AWS.ELBV2.Lens

-- | The names of the load balancers.
describeLoadBalancers_names :: Lens' DescribeLoadBalancers (Maybe [Text])

-- | The Amazon Resource Names (ARN) of the load balancers. You can specify
--   up to 20 load balancers in a single call.
describeLoadBalancers_loadBalancerArns :: Lens' DescribeLoadBalancers (Maybe [Text])

-- | The marker for the next set of results. (You received this marker from
--   a previous call.)
describeLoadBalancers_marker :: Lens' DescribeLoadBalancers (Maybe Text)

-- | The maximum number of results to return with this call.
describeLoadBalancers_pageSize :: Lens' DescribeLoadBalancers (Maybe Natural)

-- | Information about the load balancers.
describeLoadBalancersResponse_loadBalancers :: Lens' DescribeLoadBalancersResponse (Maybe [LoadBalancer])

-- | If there are additional results, this is the marker for the next set
--   of results. Otherwise, this is null.
describeLoadBalancersResponse_nextMarker :: Lens' DescribeLoadBalancersResponse (Maybe Text)

-- | The response's http status code.
describeLoadBalancersResponse_httpStatus :: Lens' DescribeLoadBalancersResponse Int

-- | The Amazon Resource Names (ARN) of the resources. You can specify up
--   to 20 resources in a single call.
describeTags_resourceArns :: Lens' DescribeTags [Text]

-- | Information about the tags.
describeTagsResponse_tagDescriptions :: Lens' DescribeTagsResponse (Maybe [TagDescription])

-- | The response's http status code.
describeTagsResponse_httpStatus :: Lens' DescribeTagsResponse Int

-- | The Amazon Resource Name (ARN) of the rule.
deleteRule_ruleArn :: Lens' DeleteRule Text

-- | The response's http status code.
deleteRuleResponse_httpStatus :: Lens' DeleteRuleResponse Int

-- | The Amazon Resource Name (ARN) of the resource.
removeTags_resourceArns :: Lens' RemoveTags [Text]

-- | The tag keys for the tags to remove.
removeTags_tagKeys :: Lens' RemoveTags [Text]

-- | The response's http status code.
removeTagsResponse_httpStatus :: Lens' RemoveTagsResponse Int

-- | The Amazon Resource Name (ARN) of the target group.
deleteTargetGroup_targetGroupArn :: Lens' DeleteTargetGroup Text

-- | The response's http status code.
deleteTargetGroupResponse_httpStatus :: Lens' DeleteTargetGroupResponse Int

-- | The IDs of the public subnets. You can specify only one subnet per
--   Availability Zone. You must specify either subnets or subnet mappings.
--   
--   <ul>
--   <li><i>Application Load Balancers</i> You must specify subnets from at
--   least two Availability Zones. You cannot specify Elastic IP addresses
--   for your subnets.</li>
--   <li><i>Application Load Balancers on Outposts</i> You must specify one
--   Outpost subnet.</li>
--   <li><i>Application Load Balancers on Local Zones</i> You can specify
--   subnets from one or more Local Zones.</li>
--   <li><i>Network Load Balancers</i> You can specify subnets from one or
--   more Availability Zones. You can specify one Elastic IP address per
--   subnet if you need static IP addresses for your internet-facing load
--   balancer. For internal load balancers, you can specify one private IP
--   address per subnet from the IPv4 range of the subnet. For
--   internet-facing load balancer, you can specify one IPv6 address per
--   subnet.</li>
--   </ul>
setSubnets_subnetMappings :: Lens' SetSubnets (Maybe [SubnetMapping])

-- | The IDs of the public subnets. You can specify only one subnet per
--   Availability Zone. You must specify either subnets or subnet mappings.
--   
--   <ul>
--   <li><i>Application Load Balancers</i> You must specify subnets from at
--   least two Availability Zones.</li>
--   <li><i>Application Load Balancers on Outposts</i> You must specify one
--   Outpost subnet.</li>
--   <li><i>Application Load Balancers on Local Zones</i> You can specify
--   subnets from one or more Local Zones.</li>
--   <li><i>Network Load Balancers</i> You can specify subnets from one or
--   more Availability Zones.</li>
--   </ul>
setSubnets_subnets :: Lens' SetSubnets (Maybe [Text])

-- | <ul>
--   <li><i>Network Load Balancers</i> The type of IP addresses used by the
--   subnets for your load balancer. The possible values are <tt>ipv4</tt>
--   (for IPv4 addresses) and <tt>dualstack</tt> (for IPv4 and IPv6
--   addresses). You can’t specify <tt>dualstack</tt> for a load balancer
--   with a UDP or TCP_UDP listener. Internal load balancers must use
--   <tt>ipv4</tt>.</li>
--   </ul>
setSubnets_ipAddressType :: Lens' SetSubnets (Maybe IpAddressType)

-- | The Amazon Resource Name (ARN) of the load balancer.
setSubnets_loadBalancerArn :: Lens' SetSubnets Text

-- | Information about the subnets.
setSubnetsResponse_availabilityZones :: Lens' SetSubnetsResponse (Maybe [AvailabilityZone])

-- | <ul>
--   <li><i>Network Load Balancers</i> The IP address type.</li>
--   </ul>
setSubnetsResponse_ipAddressType :: Lens' SetSubnetsResponse (Maybe IpAddressType)

-- | The response's http status code.
setSubnetsResponse_httpStatus :: Lens' SetSubnetsResponse Int

-- | The tags to assign to the rule.
createRule_tags :: Lens' CreateRule (Maybe (NonEmpty Tag))

-- | The Amazon Resource Name (ARN) of the listener.
createRule_listenerArn :: Lens' CreateRule Text

-- | The conditions.
createRule_conditions :: Lens' CreateRule [RuleCondition]

-- | The rule priority. A listener can't have multiple rules with the same
--   priority.
createRule_priority :: Lens' CreateRule Natural

-- | The actions.
createRule_actions :: Lens' CreateRule [Action]

-- | Information about the rule.
createRuleResponse_rules :: Lens' CreateRuleResponse (Maybe [Rule])

-- | The response's http status code.
createRuleResponse_httpStatus :: Lens' CreateRuleResponse Int

-- | The marker for the next set of results. (You received this marker from
--   a previous call.)
describeListenerCertificates_marker :: Lens' DescribeListenerCertificates (Maybe Text)

-- | The maximum number of results to return with this call.
describeListenerCertificates_pageSize :: Lens' DescribeListenerCertificates (Maybe Natural)

-- | The Amazon Resource Names (ARN) of the listener.
describeListenerCertificates_listenerArn :: Lens' DescribeListenerCertificates Text

-- | Information about the certificates.
describeListenerCertificatesResponse_certificates :: Lens' DescribeListenerCertificatesResponse (Maybe [Certificate])

-- | If there are additional results, this is the marker for the next set
--   of results. Otherwise, this is null.
describeListenerCertificatesResponse_nextMarker :: Lens' DescribeListenerCertificatesResponse (Maybe Text)

-- | The response's http status code.
describeListenerCertificatesResponse_httpStatus :: Lens' DescribeListenerCertificatesResponse Int

-- | The Amazon Resource Name (ARN) of the load balancer.
setSecurityGroups_loadBalancerArn :: Lens' SetSecurityGroups Text

-- | The IDs of the security groups.
setSecurityGroups_securityGroups :: Lens' SetSecurityGroups [Text]

-- | The IDs of the security groups associated with the load balancer.
setSecurityGroupsResponse_securityGroupIds :: Lens' SetSecurityGroupsResponse (Maybe [Text])

-- | The response's http status code.
setSecurityGroupsResponse_httpStatus :: Lens' SetSecurityGroupsResponse Int

-- | The rule priorities.
setRulePriorities_rulePriorities :: Lens' SetRulePriorities [RulePriorityPair]

-- | Information about the rules.
setRulePrioritiesResponse_rules :: Lens' SetRulePrioritiesResponse (Maybe [Rule])

-- | The response's http status code.
setRulePrioritiesResponse_httpStatus :: Lens' SetRulePrioritiesResponse Int

-- | The Amazon Resource Names (ARN) of the target groups.
describeTargetGroups_targetGroupArns :: Lens' DescribeTargetGroups (Maybe [Text])

-- | The names of the target groups.
describeTargetGroups_names :: Lens' DescribeTargetGroups (Maybe [Text])

-- | The Amazon Resource Name (ARN) of the load balancer.
describeTargetGroups_loadBalancerArn :: Lens' DescribeTargetGroups (Maybe Text)

-- | The marker for the next set of results. (You received this marker from
--   a previous call.)
describeTargetGroups_marker :: Lens' DescribeTargetGroups (Maybe Text)

-- | The maximum number of results to return with this call.
describeTargetGroups_pageSize :: Lens' DescribeTargetGroups (Maybe Natural)

-- | If there are additional results, this is the marker for the next set
--   of results. Otherwise, this is null.
describeTargetGroupsResponse_nextMarker :: Lens' DescribeTargetGroupsResponse (Maybe Text)

-- | Information about the target groups.
describeTargetGroupsResponse_targetGroups :: Lens' DescribeTargetGroupsResponse (Maybe [TargetGroup])

-- | The response's http status code.
describeTargetGroupsResponse_httpStatus :: Lens' DescribeTargetGroupsResponse Int

-- | The Amazon Resource Name (ARN) of the listener.
describeRules_listenerArn :: Lens' DescribeRules (Maybe Text)

-- | The marker for the next set of results. (You received this marker from
--   a previous call.)
describeRules_marker :: Lens' DescribeRules (Maybe Text)

-- | The Amazon Resource Names (ARN) of the rules.
describeRules_ruleArns :: Lens' DescribeRules (Maybe [Text])

-- | The maximum number of results to return with this call.
describeRules_pageSize :: Lens' DescribeRules (Maybe Natural)

-- | Information about the rules.
describeRulesResponse_rules :: Lens' DescribeRulesResponse (Maybe [Rule])

-- | If there are additional results, this is the marker for the next set
--   of results. Otherwise, this is null.
describeRulesResponse_nextMarker :: Lens' DescribeRulesResponse (Maybe Text)

-- | The response's http status code.
describeRulesResponse_httpStatus :: Lens' DescribeRulesResponse Int

-- | The Amazon Resource Name (ARN) of the load balancer.
deleteLoadBalancer_loadBalancerArn :: Lens' DeleteLoadBalancer Text

-- | The response's http status code.
deleteLoadBalancerResponse_httpStatus :: Lens' DeleteLoadBalancerResponse Int

-- | The Amazon Resource Name (ARN) of the target group.
registerTargets_targetGroupArn :: Lens' RegisterTargets Text

-- | The targets.
registerTargets_targets :: Lens' RegisterTargets [TargetDescription]

-- | The response's http status code.
registerTargetsResponse_httpStatus :: Lens' RegisterTargetsResponse Int

-- | <ul>
--   <li><i>HTTPS and TLS listeners</i> The security policy that defines
--   which protocols and ciphers are supported.</li>
--   </ul>
--   
--   For more information, see <a>Security policies</a> in the
--   <i>Application Load Balancers Guide</i> or <a>Security policies</a> in
--   the <i>Network Load Balancers Guide</i>.
modifyListener_sslPolicy :: Lens' ModifyListener (Maybe Text)

-- | The protocol for connections from clients to the load balancer.
--   Application Load Balancers support the HTTP and HTTPS protocols.
--   Network Load Balancers support the TCP, TLS, UDP, and TCP_UDP
--   protocols. You can’t change the protocol to UDP or TCP_UDP if
--   dual-stack mode is enabled. You cannot specify a protocol for a
--   Gateway Load Balancer.
modifyListener_protocol :: Lens' ModifyListener (Maybe ProtocolEnum)

-- | The actions for the default rule.
modifyListener_defaultActions :: Lens' ModifyListener (Maybe [Action])

-- | <ul>
--   <li><i>HTTPS and TLS listeners</i> The default certificate for the
--   listener. You must provide exactly one certificate. Set
--   <tt>CertificateArn</tt> to the certificate ARN but do not set
--   <tt>IsDefault</tt>.</li>
--   </ul>
modifyListener_certificates :: Lens' ModifyListener (Maybe [Certificate])

-- | <ul>
--   <li><i>TLS listeners</i> The name of the Application-Layer Protocol
--   Negotiation (ALPN) policy. You can specify one policy name. The
--   following are the possible values:</li>
--   </ul>
--   
--   <ul>
--   <li><pre>HTTP1Only</pre></li>
--   <li><pre>HTTP2Only</pre></li>
--   <li><pre>HTTP2Optional</pre></li>
--   <li><pre>HTTP2Preferred</pre></li>
--   <li><pre>None</pre></li>
--   </ul>
--   
--   For more information, see <a>ALPN policies</a> in the <i>Network Load
--   Balancers Guide</i>.
modifyListener_alpnPolicy :: Lens' ModifyListener (Maybe [Text])

-- | The port for connections from clients to the load balancer. You cannot
--   specify a port for a Gateway Load Balancer.
modifyListener_port :: Lens' ModifyListener (Maybe Natural)

-- | The Amazon Resource Name (ARN) of the listener.
modifyListener_listenerArn :: Lens' ModifyListener Text

-- | Information about the modified listener.
modifyListenerResponse_listeners :: Lens' ModifyListenerResponse (Maybe [Listener])

-- | The response's http status code.
modifyListenerResponse_httpStatus :: Lens' ModifyListenerResponse Int

-- | <ul>
--   <li><i>HTTP/HTTPS health checks</i> The HTTP or gRPC codes to use when
--   checking for a successful response from a target.</li>
--   </ul>
--   
--   With Network Load Balancers, you can't modify this setting.
modifyTargetGroup_matcher :: Lens' ModifyTargetGroup (Maybe Matcher)

-- | <ul>
--   <li><i>HTTP/HTTPS health checks</i> The destination for health checks
--   on the targets.</li>
--   <li><i>HTTP1 or HTTP2 protocol version</i> The ping path. The default
--   is /.</li>
--   <li><i>GRPC protocol version</i> The path of a custom health check
--   method with the format /package.service/method. The default is /Amazon
--   Web Services.ALB/healthcheck.</li>
--   </ul>
modifyTargetGroup_healthCheckPath :: Lens' ModifyTargetGroup (Maybe Text)

-- | Indicates whether health checks are enabled.
modifyTargetGroup_healthCheckEnabled :: Lens' ModifyTargetGroup (Maybe Bool)

-- | The number of consecutive health check failures required before
--   considering the target unhealthy. For target groups with a protocol of
--   TCP or TLS, this value must be the same as the healthy threshold
--   count.
modifyTargetGroup_unhealthyThresholdCount :: Lens' ModifyTargetGroup (Maybe Natural)

-- | The approximate amount of time, in seconds, between health checks of
--   an individual target. For TCP health checks, the supported values are
--   10 or 30 seconds.
--   
--   With Network Load Balancers, you can't modify this setting.
modifyTargetGroup_healthCheckIntervalSeconds :: Lens' ModifyTargetGroup (Maybe Natural)

-- | The number of consecutive health checks successes required before
--   considering an unhealthy target healthy.
modifyTargetGroup_healthyThresholdCount :: Lens' ModifyTargetGroup (Maybe Natural)

-- | The protocol the load balancer uses when performing health checks on
--   targets. For Application Load Balancers, the default is HTTP. For
--   Network Load Balancers and Gateway Load Balancers, the default is TCP.
--   The TCP protocol is not supported for health checks if the protocol of
--   the target group is HTTP or HTTPS. It is supported for health checks
--   only if the protocol of the target group is TCP, TLS, UDP, or TCP_UDP.
--   The GENEVE, TLS, UDP, and TCP_UDP protocols are not supported for
--   health checks.
--   
--   With Network Load Balancers, you can't modify this setting.
modifyTargetGroup_healthCheckProtocol :: Lens' ModifyTargetGroup (Maybe ProtocolEnum)

-- | <ul>
--   <li><i>HTTP/HTTPS health checks</i> The amount of time, in seconds,
--   during which no response means a failed health check.</li>
--   </ul>
--   
--   With Network Load Balancers, you can't modify this setting.
modifyTargetGroup_healthCheckTimeoutSeconds :: Lens' ModifyTargetGroup (Maybe Natural)

-- | The port the load balancer uses when performing health checks on
--   targets.
modifyTargetGroup_healthCheckPort :: Lens' ModifyTargetGroup (Maybe Text)

-- | The Amazon Resource Name (ARN) of the target group.
modifyTargetGroup_targetGroupArn :: Lens' ModifyTargetGroup Text

-- | Information about the modified target group.
modifyTargetGroupResponse_targetGroups :: Lens' ModifyTargetGroupResponse (Maybe [TargetGroup])

-- | The response's http status code.
modifyTargetGroupResponse_httpStatus :: Lens' ModifyTargetGroupResponse Int

-- | The Amazon Resource Name (ARN) of the target group.
modifyTargetGroupAttributes_targetGroupArn :: Lens' ModifyTargetGroupAttributes Text

-- | The attributes.
modifyTargetGroupAttributes_attributes :: Lens' ModifyTargetGroupAttributes [TargetGroupAttribute]

-- | Information about the attributes.
modifyTargetGroupAttributesResponse_attributes :: Lens' ModifyTargetGroupAttributesResponse (Maybe [TargetGroupAttribute])

-- | The response's http status code.
modifyTargetGroupAttributesResponse_httpStatus :: Lens' ModifyTargetGroupAttributesResponse Int

-- | The Amazon Resource Name (ARN) of the target group.
describeTargetGroupAttributes_targetGroupArn :: Lens' DescribeTargetGroupAttributes Text

-- | Information about the target group attributes
describeTargetGroupAttributesResponse_attributes :: Lens' DescribeTargetGroupAttributesResponse (Maybe [TargetGroupAttribute])

-- | The response's http status code.
describeTargetGroupAttributesResponse_httpStatus :: Lens' DescribeTargetGroupAttributesResponse Int

-- | The Amazon Resource Name (ARN) of the listener.
deleteListener_listenerArn :: Lens' DeleteListener Text

-- | The response's http status code.
deleteListenerResponse_httpStatus :: Lens' DeleteListenerResponse Int

-- | The type of load balancer. The default lists the SSL policies for all
--   load balancers.
describeSSLPolicies_loadBalancerType :: Lens' DescribeSSLPolicies (Maybe LoadBalancerTypeEnum)

-- | The names of the policies.
describeSSLPolicies_names :: Lens' DescribeSSLPolicies (Maybe [Text])

-- | The marker for the next set of results. (You received this marker from
--   a previous call.)
describeSSLPolicies_marker :: Lens' DescribeSSLPolicies (Maybe Text)

-- | The maximum number of results to return with this call.
describeSSLPolicies_pageSize :: Lens' DescribeSSLPolicies (Maybe Natural)

-- | Information about the security policies.
describeSSLPoliciesResponse_sslPolicies :: Lens' DescribeSSLPoliciesResponse (Maybe [SslPolicy])

-- | If there are additional results, this is the marker for the next set
--   of results. Otherwise, this is null.
describeSSLPoliciesResponse_nextMarker :: Lens' DescribeSSLPoliciesResponse (Maybe Text)

-- | The response's http status code.
describeSSLPoliciesResponse_httpStatus :: Lens' DescribeSSLPoliciesResponse Int

-- | The marker for the next set of results. (You received this marker from
--   a previous call.)
describeAccountLimits_marker :: Lens' DescribeAccountLimits (Maybe Text)

-- | The maximum number of results to return with this call.
describeAccountLimits_pageSize :: Lens' DescribeAccountLimits (Maybe Natural)

-- | Information about the limits.
describeAccountLimitsResponse_limits :: Lens' DescribeAccountLimitsResponse (Maybe [Limit])

-- | If there are additional results, this is the marker for the next set
--   of results. Otherwise, this is null.
describeAccountLimitsResponse_nextMarker :: Lens' DescribeAccountLimitsResponse (Maybe Text)

-- | The response's http status code.
describeAccountLimitsResponse_httpStatus :: Lens' DescribeAccountLimitsResponse Int

-- | The Amazon Resource Name (ARN) of the target group.
deregisterTargets_targetGroupArn :: Lens' DeregisterTargets Text

-- | The targets. If you specified a port override when you registered a
--   target, you must specify both the target ID and the port when you
--   deregister it.
deregisterTargets_targets :: Lens' DeregisterTargets [TargetDescription]

-- | The response's http status code.
deregisterTargetsResponse_httpStatus :: Lens' DeregisterTargetsResponse Int

-- | <ul>
--   <li><i>HTTPS and TLS listeners</i> The security policy that defines
--   which protocols and ciphers are supported.</li>
--   </ul>
--   
--   For more information, see <a>Security policies</a> in the
--   <i>Application Load Balancers Guide</i> and <a>Security policies</a>
--   in the <i>Network Load Balancers Guide</i>.
createListener_sslPolicy :: Lens' CreateListener (Maybe Text)

-- | The protocol for connections from clients to the load balancer. For
--   Application Load Balancers, the supported protocols are HTTP and
--   HTTPS. For Network Load Balancers, the supported protocols are TCP,
--   TLS, UDP, and TCP_UDP. You can’t specify the UDP or TCP_UDP protocol
--   if dual-stack mode is enabled. You cannot specify a protocol for a
--   Gateway Load Balancer.
createListener_protocol :: Lens' CreateListener (Maybe ProtocolEnum)

-- | <ul>
--   <li><i>HTTPS and TLS listeners</i> The default certificate for the
--   listener. You must provide exactly one certificate. Set
--   <tt>CertificateArn</tt> to the certificate ARN but do not set
--   <tt>IsDefault</tt>.</li>
--   </ul>
createListener_certificates :: Lens' CreateListener (Maybe [Certificate])

-- | <ul>
--   <li><i>TLS listeners</i> The name of the Application-Layer Protocol
--   Negotiation (ALPN) policy. You can specify one policy name. The
--   following are the possible values:</li>
--   </ul>
--   
--   <ul>
--   <li><pre>HTTP1Only</pre></li>
--   <li><pre>HTTP2Only</pre></li>
--   <li><pre>HTTP2Optional</pre></li>
--   <li><pre>HTTP2Preferred</pre></li>
--   <li><pre>None</pre></li>
--   </ul>
--   
--   For more information, see <a>ALPN policies</a> in the <i>Network Load
--   Balancers Guide</i>.
createListener_alpnPolicy :: Lens' CreateListener (Maybe [Text])

-- | The tags to assign to the listener.
createListener_tags :: Lens' CreateListener (Maybe (NonEmpty Tag))

-- | The port on which the load balancer is listening. You cannot specify a
--   port for a Gateway Load Balancer.
createListener_port :: Lens' CreateListener (Maybe Natural)

-- | The Amazon Resource Name (ARN) of the load balancer.
createListener_loadBalancerArn :: Lens' CreateListener Text

-- | The actions for the default rule.
createListener_defaultActions :: Lens' CreateListener [Action]

-- | Information about the listener.
createListenerResponse_listeners :: Lens' CreateListenerResponse (Maybe [Listener])

-- | The response's http status code.
createListenerResponse_httpStatus :: Lens' CreateListenerResponse Int

-- | <ul>
--   <li><i>HTTP/HTTPS protocol</i> The protocol version. Specify
--   <tt>GRPC</tt> to send requests to targets using gRPC. Specify
--   <tt>HTTP2</tt> to send requests to targets using HTTP/2. The default
--   is <tt>HTTP1</tt>, which sends requests to targets using
--   HTTP/1.1.</li>
--   </ul>
createTargetGroup_protocolVersion :: Lens' CreateTargetGroup (Maybe Text)

-- | <ul>
--   <li><i>HTTP/HTTPS health checks</i> The HTTP or gRPC codes to use when
--   checking for a successful response from a target.</li>
--   </ul>
createTargetGroup_matcher :: Lens' CreateTargetGroup (Maybe Matcher)

-- | <ul>
--   <li><i>HTTP/HTTPS health checks</i> The destination for health checks
--   on the targets.</li>
--   <li><i>HTTP1 or HTTP2 protocol version</i> The ping path. The default
--   is /.</li>
--   <li><i>GRPC protocol version</i> The path of a custom health check
--   method with the format /package.service/method. The default is /Amazon
--   Web Services.ALB/healthcheck.</li>
--   </ul>
createTargetGroup_healthCheckPath :: Lens' CreateTargetGroup (Maybe Text)

-- | Indicates whether health checks are enabled. If the target type is
--   <tt>lambda</tt>, health checks are disabled by default but can be
--   enabled. If the target type is <tt>instance</tt>, <tt>ip</tt>, or
--   <tt>alb</tt>, health checks are always enabled and cannot be disabled.
createTargetGroup_healthCheckEnabled :: Lens' CreateTargetGroup (Maybe Bool)

-- | The number of consecutive health check failures required before
--   considering a target unhealthy. If the target group protocol is HTTP
--   or HTTPS, the default is 2. If the target group protocol is TCP or
--   TLS, this value must be the same as the healthy threshold count. If
--   the target group protocol is GENEVE, the default is 3. If the target
--   type is <tt>lambda</tt>, the default is 2.
createTargetGroup_unhealthyThresholdCount :: Lens' CreateTargetGroup (Maybe Natural)

-- | The identifier of the virtual private cloud (VPC). If the target is a
--   Lambda function, this parameter does not apply. Otherwise, this
--   parameter is required.
createTargetGroup_vpcId :: Lens' CreateTargetGroup (Maybe Text)

-- | The protocol to use for routing traffic to the targets. For
--   Application Load Balancers, the supported protocols are HTTP and
--   HTTPS. For Network Load Balancers, the supported protocols are TCP,
--   TLS, UDP, or TCP_UDP. For Gateway Load Balancers, the supported
--   protocol is GENEVE. A TCP_UDP listener must be associated with a
--   TCP_UDP target group. If the target is a Lambda function, this
--   parameter does not apply.
createTargetGroup_protocol :: Lens' CreateTargetGroup (Maybe ProtocolEnum)

-- | The approximate amount of time, in seconds, between health checks of
--   an individual target. If the target group protocol is TCP, TLS, UDP,
--   or TCP_UDP, the supported values are 10 and 30 seconds. If the target
--   group protocol is HTTP or HTTPS, the default is 30 seconds. If the
--   target group protocol is GENEVE, the default is 10 seconds. If the
--   target type is <tt>lambda</tt>, the default is 35 seconds.
createTargetGroup_healthCheckIntervalSeconds :: Lens' CreateTargetGroup (Maybe Natural)

-- | The type of target that you must specify when registering targets with
--   this target group. You can't specify targets for a target group using
--   more than one target type.
--   
--   <ul>
--   <li><tt>instance</tt> - Register targets by instance ID. This is the
--   default value.</li>
--   <li><tt>ip</tt> - Register targets by IP address. You can specify IP
--   addresses from the subnets of the virtual private cloud (VPC) for the
--   target group, the RFC 1918 range (10.0.0.0/8, 172.16.0.0/12, and
--   192.168.0.0/16), and the RFC 6598 range (100.64.0.0/10). You can't
--   specify publicly routable IP addresses.</li>
--   <li><tt>lambda</tt> - Register a single Lambda function as a
--   target.</li>
--   <li><tt>alb</tt> - Register a single Application Load Balancer as a
--   target.</li>
--   </ul>
createTargetGroup_targetType :: Lens' CreateTargetGroup (Maybe TargetTypeEnum)

-- | The number of consecutive health checks successes required before
--   considering an unhealthy target healthy. For target groups with a
--   protocol of HTTP or HTTPS, the default is 5. For target groups with a
--   protocol of TCP, TLS, or GENEVE, the default is 3. If the target type
--   is <tt>lambda</tt>, the default is 5.
createTargetGroup_healthyThresholdCount :: Lens' CreateTargetGroup (Maybe Natural)

-- | The protocol the load balancer uses when performing health checks on
--   targets. For Application Load Balancers, the default is HTTP. For
--   Network Load Balancers and Gateway Load Balancers, the default is TCP.
--   The TCP protocol is not supported for health checks if the protocol of
--   the target group is HTTP or HTTPS. The GENEVE, TLS, UDP, and TCP_UDP
--   protocols are not supported for health checks.
createTargetGroup_healthCheckProtocol :: Lens' CreateTargetGroup (Maybe ProtocolEnum)

-- | The type of IP address used for this target group. The possible values
--   are <tt>ipv4</tt> and <tt>ipv6</tt>. This is an optional parameter. If
--   not specified, the IP address type defaults to <tt>ipv4</tt>.
createTargetGroup_ipAddressType :: Lens' CreateTargetGroup (Maybe TargetGroupIpAddressTypeEnum)

-- | The amount of time, in seconds, during which no response from a target
--   means a failed health check. For target groups with a protocol of
--   HTTP, HTTPS, or GENEVE, the default is 5 seconds. For target groups
--   with a protocol of TCP or TLS, this value must be 6 seconds for HTTP
--   health checks and 10 seconds for TCP and HTTPS health checks. If the
--   target type is <tt>lambda</tt>, the default is 30 seconds.
createTargetGroup_healthCheckTimeoutSeconds :: Lens' CreateTargetGroup (Maybe Natural)

-- | The port the load balancer uses when performing health checks on
--   targets. If the protocol is HTTP, HTTPS, TCP, TLS, UDP, or TCP_UDP,
--   the default is <tt>traffic-port</tt>, which is the port on which each
--   target receives traffic from the load balancer. If the protocol is
--   GENEVE, the default is port 80.
createTargetGroup_healthCheckPort :: Lens' CreateTargetGroup (Maybe Text)

-- | The tags to assign to the target group.
createTargetGroup_tags :: Lens' CreateTargetGroup (Maybe (NonEmpty Tag))

-- | The port on which the targets receive traffic. This port is used
--   unless you specify a port override when registering the target. If the
--   target is a Lambda function, this parameter does not apply. If the
--   protocol is GENEVE, the supported port is 6081.
createTargetGroup_port :: Lens' CreateTargetGroup (Maybe Natural)

-- | The name of the target group.
--   
--   This name must be unique per region per account, can have a maximum of
--   32 characters, must contain only alphanumeric characters or hyphens,
--   and must not begin or end with a hyphen.
createTargetGroup_name :: Lens' CreateTargetGroup Text

-- | Information about the target group.
createTargetGroupResponse_targetGroups :: Lens' CreateTargetGroupResponse (Maybe [TargetGroup])

-- | The response's http status code.
createTargetGroupResponse_httpStatus :: Lens' CreateTargetGroupResponse Int

-- | The Amazon Resource Name (ARN) of the load balancer.
modifyLoadBalancerAttributes_loadBalancerArn :: Lens' ModifyLoadBalancerAttributes Text

-- | The load balancer attributes.
modifyLoadBalancerAttributes_attributes :: Lens' ModifyLoadBalancerAttributes [LoadBalancerAttribute]

-- | Information about the load balancer attributes.
modifyLoadBalancerAttributesResponse_attributes :: Lens' ModifyLoadBalancerAttributesResponse (Maybe [LoadBalancerAttribute])

-- | The response's http status code.
modifyLoadBalancerAttributesResponse_httpStatus :: Lens' ModifyLoadBalancerAttributesResponse Int

-- | The Amazon Resource Name (ARN) of the load balancer.
setIpAddressType_loadBalancerArn :: Lens' SetIpAddressType Text

-- | The IP address type. The possible values are <tt>ipv4</tt> (for IPv4
--   addresses) and <tt>dualstack</tt> (for IPv4 and IPv6 addresses).
--   Internal load balancers must use <tt>ipv4</tt>. You can’t specify
--   <tt>dualstack</tt> for a load balancer with a UDP or TCP_UDP listener.
setIpAddressType_ipAddressType :: Lens' SetIpAddressType IpAddressType

-- | The IP address type.
setIpAddressTypeResponse_ipAddressType :: Lens' SetIpAddressTypeResponse (Maybe IpAddressType)

-- | The response's http status code.
setIpAddressTypeResponse_httpStatus :: Lens' SetIpAddressTypeResponse Int

-- | The Amazon Resource Name (ARN) of the resource.
addTags_resourceArns :: Lens' AddTags [Text]

-- | The tags.
addTags_tags :: Lens' AddTags (NonEmpty Tag)

-- | The response's http status code.
addTagsResponse_httpStatus :: Lens' AddTagsResponse Int

-- | The Amazon Resource Name (ARN) of the load balancer.
describeLoadBalancerAttributes_loadBalancerArn :: Lens' DescribeLoadBalancerAttributes Text

-- | Information about the load balancer attributes.
describeLoadBalancerAttributesResponse_attributes :: Lens' DescribeLoadBalancerAttributesResponse (Maybe [LoadBalancerAttribute])

-- | The response's http status code.
describeLoadBalancerAttributesResponse_httpStatus :: Lens' DescribeLoadBalancerAttributesResponse Int

-- | The Amazon Resource Names (ARN) of the listeners.
describeListeners_listenerArns :: Lens' DescribeListeners (Maybe [Text])

-- | The Amazon Resource Name (ARN) of the load balancer.
describeListeners_loadBalancerArn :: Lens' DescribeListeners (Maybe Text)

-- | The marker for the next set of results. (You received this marker from
--   a previous call.)
describeListeners_marker :: Lens' DescribeListeners (Maybe Text)

-- | The maximum number of results to return with this call.
describeListeners_pageSize :: Lens' DescribeListeners (Maybe Natural)

-- | If there are additional results, this is the marker for the next set
--   of results. Otherwise, this is null.
describeListenersResponse_nextMarker :: Lens' DescribeListenersResponse (Maybe Text)

-- | Information about the listeners.
describeListenersResponse_listeners :: Lens' DescribeListenersResponse (Maybe [Listener])

-- | The response's http status code.
describeListenersResponse_httpStatus :: Lens' DescribeListenersResponse Int

-- | The targets.
describeTargetHealth_targets :: Lens' DescribeTargetHealth (Maybe [TargetDescription])

-- | The Amazon Resource Name (ARN) of the target group.
describeTargetHealth_targetGroupArn :: Lens' DescribeTargetHealth Text

-- | Information about the health of the targets.
describeTargetHealthResponse_targetHealthDescriptions :: Lens' DescribeTargetHealthResponse (Maybe [TargetHealthDescription])

-- | The response's http status code.
describeTargetHealthResponse_httpStatus :: Lens' DescribeTargetHealthResponse Int

-- | The IDs of the public subnets. You can specify only one subnet per
--   Availability Zone. You must specify either subnets or subnet mappings.
--   
--   <ul>
--   <li><i>Application Load Balancers</i> You must specify subnets from at
--   least two Availability Zones. You cannot specify Elastic IP addresses
--   for your subnets.</li>
--   <li><i>Application Load Balancers on Outposts</i> You must specify one
--   Outpost subnet.</li>
--   <li><i>Application Load Balancers on Local Zones</i> You can specify
--   subnets from one or more Local Zones.</li>
--   <li><i>Network Load Balancers</i> You can specify subnets from one or
--   more Availability Zones. You can specify one Elastic IP address per
--   subnet if you need static IP addresses for your internet-facing load
--   balancer. For internal load balancers, you can specify one private IP
--   address per subnet from the IPv4 range of the subnet. For
--   internet-facing load balancer, you can specify one IPv6 address per
--   subnet.</li>
--   <li><i>Gateway Load Balancers</i> You can specify subnets from one or
--   more Availability Zones. You cannot specify Elastic IP addresses for
--   your subnets.</li>
--   </ul>
createLoadBalancer_subnetMappings :: Lens' CreateLoadBalancer (Maybe [SubnetMapping])

-- | <ul>
--   <li><i>Application Load Balancers</i> The IDs of the security groups
--   for the load balancer.</li>
--   </ul>
createLoadBalancer_securityGroups :: Lens' CreateLoadBalancer (Maybe [Text])

-- | The IDs of the public subnets. You can specify only one subnet per
--   Availability Zone. You must specify either subnets or subnet mappings.
--   
--   <ul>
--   <li><i>Application Load Balancers</i> You must specify subnets from at
--   least two Availability Zones.</li>
--   <li><i>Application Load Balancers on Outposts</i> You must specify one
--   Outpost subnet.</li>
--   <li><i>Application Load Balancers on Local Zones</i> You can specify
--   subnets from one or more Local Zones.</li>
--   <li><i>Network Load Balancers</i> You can specify subnets from one or
--   more Availability Zones.</li>
--   <li><i>Gateway Load Balancers</i> You can specify subnets from one or
--   more Availability Zones.</li>
--   </ul>
createLoadBalancer_subnets :: Lens' CreateLoadBalancer (Maybe [Text])

-- | <ul>
--   <li><i>Application Load Balancers on Outposts</i> The ID of the
--   customer-owned address pool (CoIP pool).</li>
--   </ul>
createLoadBalancer_customerOwnedIpv4Pool :: Lens' CreateLoadBalancer (Maybe Text)

-- | The type of IP addresses used by the subnets for your load balancer.
--   The possible values are <tt>ipv4</tt> (for IPv4 addresses) and
--   <tt>dualstack</tt> (for IPv4 and IPv6 addresses). Internal load
--   balancers must use <tt>ipv4</tt>.
createLoadBalancer_ipAddressType :: Lens' CreateLoadBalancer (Maybe IpAddressType)

-- | The nodes of an Internet-facing load balancer have public IP
--   addresses. The DNS name of an Internet-facing load balancer is
--   publicly resolvable to the public IP addresses of the nodes.
--   Therefore, Internet-facing load balancers can route requests from
--   clients over the internet.
--   
--   The nodes of an internal load balancer have only private IP addresses.
--   The DNS name of an internal load balancer is publicly resolvable to
--   the private IP addresses of the nodes. Therefore, internal load
--   balancers can route requests only from clients with access to the VPC
--   for the load balancer.
--   
--   The default is an Internet-facing load balancer.
--   
--   You cannot specify a scheme for a Gateway Load Balancer.
createLoadBalancer_scheme :: Lens' CreateLoadBalancer (Maybe LoadBalancerSchemeEnum)

-- | The type of load balancer. The default is <tt>application</tt>.
createLoadBalancer_type :: Lens' CreateLoadBalancer (Maybe LoadBalancerTypeEnum)

-- | The tags to assign to the load balancer.
createLoadBalancer_tags :: Lens' CreateLoadBalancer (Maybe (NonEmpty Tag))

-- | The name of the load balancer.
--   
--   This name must be unique per region per account, can have a maximum of
--   32 characters, must contain only alphanumeric characters or hyphens,
--   must not begin or end with a hyphen, and must not begin with
--   "internal-".
createLoadBalancer_name :: Lens' CreateLoadBalancer Text

-- | Information about the load balancer.
createLoadBalancerResponse_loadBalancers :: Lens' CreateLoadBalancerResponse (Maybe [LoadBalancer])

-- | The response's http status code.
createLoadBalancerResponse_httpStatus :: Lens' CreateLoadBalancerResponse Int

-- | The Amazon Resource Name (ARN) of the listener.
removeListenerCertificates_listenerArn :: Lens' RemoveListenerCertificates Text

-- | The certificate to remove. You can specify one certificate per call.
--   Set <tt>CertificateArn</tt> to the certificate ARN but do not set
--   <tt>IsDefault</tt>.
removeListenerCertificates_certificates :: Lens' RemoveListenerCertificates [Certificate]

-- | The response's http status code.
removeListenerCertificatesResponse_httpStatus :: Lens' RemoveListenerCertificatesResponse Int

-- | The actions.
modifyRule_actions :: Lens' ModifyRule (Maybe [Action])

-- | The conditions.
modifyRule_conditions :: Lens' ModifyRule (Maybe [RuleCondition])

-- | The Amazon Resource Name (ARN) of the rule.
modifyRule_ruleArn :: Lens' ModifyRule Text

-- | Information about the modified rule.
modifyRuleResponse_rules :: Lens' ModifyRuleResponse (Maybe [Rule])

-- | The response's http status code.
modifyRuleResponse_httpStatus :: Lens' ModifyRuleResponse Int

-- | The Amazon Resource Name (ARN) of the listener.
addListenerCertificates_listenerArn :: Lens' AddListenerCertificates Text

-- | The certificate to add. You can specify one certificate per call. Set
--   <tt>CertificateArn</tt> to the certificate ARN but do not set
--   <tt>IsDefault</tt>.
addListenerCertificates_certificates :: Lens' AddListenerCertificates [Certificate]

-- | Information about the certificates in the certificate list.
addListenerCertificatesResponse_certificates :: Lens' AddListenerCertificatesResponse (Maybe [Certificate])

-- | The response's http status code.
addListenerCertificatesResponse_httpStatus :: Lens' AddListenerCertificatesResponse Int

-- | <ul>
--   <li><i>Application Load Balancer</i> Information for creating an
--   action that returns a custom HTTP response. Specify only when
--   <tt>Type</tt> is <tt>fixed-response</tt>.</li>
--   </ul>
action_fixedResponseConfig :: Lens' Action (Maybe FixedResponseActionConfig)

-- | The Amazon Resource Name (ARN) of the target group. Specify only when
--   <tt>Type</tt> is <tt>forward</tt> and you want to route to a single
--   target group. To route to one or more target groups, use
--   <tt>ForwardConfig</tt> instead.
action_targetGroupArn :: Lens' Action (Maybe Text)

-- | Information for creating an action that distributes requests among one
--   or more target groups. For Network Load Balancers, you can specify a
--   single target group. Specify only when <tt>Type</tt> is
--   <tt>forward</tt>. If you specify both <tt>ForwardConfig</tt> and
--   <tt>TargetGroupArn</tt>, you can specify only one target group using
--   <tt>ForwardConfig</tt> and it must be the same target group specified
--   in <tt>TargetGroupArn</tt>.
action_forwardConfig :: Lens' Action (Maybe ForwardActionConfig)

-- | <ul>
--   <li><i>Application Load Balancer</i> Information for creating a
--   redirect action. Specify only when <tt>Type</tt> is
--   <tt>redirect</tt>.</li>
--   </ul>
action_redirectConfig :: Lens' Action (Maybe RedirectActionConfig)

-- | <ul>
--   <li><i>HTTPS listeners</i> Information for using Amazon Cognito to
--   authenticate users. Specify only when <tt>Type</tt> is
--   <tt>authenticate-cognito</tt>.</li>
--   </ul>
action_authenticateCognitoConfig :: Lens' Action (Maybe AuthenticateCognitoActionConfig)

-- | The order for the action. This value is required for rules with
--   multiple actions. The action with the lowest value for order is
--   performed first.
action_order :: Lens' Action (Maybe Natural)

-- | <ul>
--   <li><i>HTTPS listeners</i> Information about an identity provider that
--   is compliant with OpenID Connect (OIDC). Specify only when
--   <tt>Type</tt> is <tt>authenticate-oidc</tt>.</li>
--   </ul>
action_authenticateOidcConfig :: Lens' Action (Maybe AuthenticateOidcActionConfig)

-- | The type of action.
action_type :: Lens' Action ActionTypeEnum

-- | The query parameters (up to 10) to include in the redirect request to
--   the authorization endpoint.
authenticateCognitoActionConfig_authenticationRequestExtraParams :: Lens' AuthenticateCognitoActionConfig (Maybe (HashMap Text Text))

-- | The set of user claims to be requested from the IdP. The default is
--   <tt>openid</tt>.
--   
--   To verify which scope values your IdP supports and how to separate
--   multiple values, see the documentation for your IdP.
authenticateCognitoActionConfig_scope :: Lens' AuthenticateCognitoActionConfig (Maybe Text)

-- | The behavior if the user is not authenticated. The following are
--   possible values:
--   
--   <ul>
--   <li>deny@@ - Return an HTTP 401 Unauthorized error.</li>
--   <li>allow@@ - Allow the request to be forwarded to the target.</li>
--   <li>authenticate@@ - Redirect the request to the IdP authorization
--   endpoint. This is the default value.</li>
--   </ul>
authenticateCognitoActionConfig_onUnauthenticatedRequest :: Lens' AuthenticateCognitoActionConfig (Maybe AuthenticateCognitoActionConditionalBehaviorEnum)

-- | The name of the cookie used to maintain session information. The
--   default is AWSELBAuthSessionCookie.
authenticateCognitoActionConfig_sessionCookieName :: Lens' AuthenticateCognitoActionConfig (Maybe Text)

-- | The maximum duration of the authentication session, in seconds. The
--   default is 604800 seconds (7 days).
authenticateCognitoActionConfig_sessionTimeout :: Lens' AuthenticateCognitoActionConfig (Maybe Integer)

-- | The Amazon Resource Name (ARN) of the Amazon Cognito user pool.
authenticateCognitoActionConfig_userPoolArn :: Lens' AuthenticateCognitoActionConfig Text

-- | The ID of the Amazon Cognito user pool client.
authenticateCognitoActionConfig_userPoolClientId :: Lens' AuthenticateCognitoActionConfig Text

-- | The domain prefix or fully-qualified domain name of the Amazon Cognito
--   user pool.
authenticateCognitoActionConfig_userPoolDomain :: Lens' AuthenticateCognitoActionConfig Text

-- | The OAuth 2.0 client secret. This parameter is required if you are
--   creating a rule. If you are modifying a rule, you can omit this
--   parameter if you set <tt>UseExistingClientSecret</tt> to true.
authenticateOidcActionConfig_clientSecret :: Lens' AuthenticateOidcActionConfig (Maybe Text)

-- | Indicates whether to use the existing client secret when modifying a
--   rule. If you are creating a rule, you can omit this parameter or set
--   it to false.
authenticateOidcActionConfig_useExistingClientSecret :: Lens' AuthenticateOidcActionConfig (Maybe Bool)

-- | The query parameters (up to 10) to include in the redirect request to
--   the authorization endpoint.
authenticateOidcActionConfig_authenticationRequestExtraParams :: Lens' AuthenticateOidcActionConfig (Maybe (HashMap Text Text))

-- | The set of user claims to be requested from the IdP. The default is
--   <tt>openid</tt>.
--   
--   To verify which scope values your IdP supports and how to separate
--   multiple values, see the documentation for your IdP.
authenticateOidcActionConfig_scope :: Lens' AuthenticateOidcActionConfig (Maybe Text)

-- | The behavior if the user is not authenticated. The following are
--   possible values:
--   
--   <ul>
--   <li>deny@@ - Return an HTTP 401 Unauthorized error.</li>
--   <li>allow@@ - Allow the request to be forwarded to the target.</li>
--   <li>authenticate@@ - Redirect the request to the IdP authorization
--   endpoint. This is the default value.</li>
--   </ul>
authenticateOidcActionConfig_onUnauthenticatedRequest :: Lens' AuthenticateOidcActionConfig (Maybe AuthenticateOidcActionConditionalBehaviorEnum)

-- | The name of the cookie used to maintain session information. The
--   default is AWSELBAuthSessionCookie.
authenticateOidcActionConfig_sessionCookieName :: Lens' AuthenticateOidcActionConfig (Maybe Text)

-- | The maximum duration of the authentication session, in seconds. The
--   default is 604800 seconds (7 days).
authenticateOidcActionConfig_sessionTimeout :: Lens' AuthenticateOidcActionConfig (Maybe Integer)

-- | The OIDC issuer identifier of the IdP. This must be a full URL,
--   including the HTTPS protocol, the domain, and the path.
authenticateOidcActionConfig_issuer :: Lens' AuthenticateOidcActionConfig Text

-- | The authorization endpoint of the IdP. This must be a full URL,
--   including the HTTPS protocol, the domain, and the path.
authenticateOidcActionConfig_authorizationEndpoint :: Lens' AuthenticateOidcActionConfig Text

-- | The token endpoint of the IdP. This must be a full URL, including the
--   HTTPS protocol, the domain, and the path.
authenticateOidcActionConfig_tokenEndpoint :: Lens' AuthenticateOidcActionConfig Text

-- | The user info endpoint of the IdP. This must be a full URL, including
--   the HTTPS protocol, the domain, and the path.
authenticateOidcActionConfig_userInfoEndpoint :: Lens' AuthenticateOidcActionConfig Text

-- | The OAuth 2.0 client identifier.
authenticateOidcActionConfig_clientId :: Lens' AuthenticateOidcActionConfig Text

-- | The ID of the subnet. You can specify one subnet per Availability
--   Zone.
availabilityZone_subnetId :: Lens' AvailabilityZone (Maybe Text)

-- | The name of the Availability Zone.
availabilityZone_zoneName :: Lens' AvailabilityZone (Maybe Text)

-- | <ul>
--   <li><i>Network Load Balancers</i> If you need static IP addresses for
--   your load balancer, you can specify one Elastic IP address per
--   Availability Zone when you create an internal-facing load balancer.
--   For internal load balancers, you can specify a private IP address from
--   the IPv4 range of the subnet.</li>
--   </ul>
availabilityZone_loadBalancerAddresses :: Lens' AvailabilityZone (Maybe [LoadBalancerAddress])

-- | <ul>
--   <li><i>Application Load Balancers on Outposts</i> The ID of the
--   Outpost.</li>
--   </ul>
availabilityZone_outpostId :: Lens' AvailabilityZone (Maybe Text)

-- | The Amazon Resource Name (ARN) of the certificate.
certificate_certificateArn :: Lens' Certificate (Maybe Text)

-- | Indicates whether the certificate is the default certificate. Do not
--   set this value when specifying a certificate as an input. This value
--   is not included in the output when describing a listener, but is
--   included when describing listener certificates.
certificate_isDefault :: Lens' Certificate (Maybe Bool)

-- | The priority of the cipher.
cipher_priority :: Lens' Cipher (Maybe Int)

-- | The name of the cipher.
cipher_name :: Lens' Cipher (Maybe Text)

-- | The message.
fixedResponseActionConfig_messageBody :: Lens' FixedResponseActionConfig (Maybe Text)

-- | The content type.
--   
--   Valid Values: text/plain | text/css | text/html |
--   application/javascript | application/json
fixedResponseActionConfig_contentType :: Lens' FixedResponseActionConfig (Maybe Text)

-- | The HTTP response code (2XX, 4XX, or 5XX).
fixedResponseActionConfig_statusCode :: Lens' FixedResponseActionConfig Text

-- | One or more target groups. For Network Load Balancers, you can specify
--   a single target group.
forwardActionConfig_targetGroups :: Lens' ForwardActionConfig (Maybe [TargetGroupTuple])

-- | The target group stickiness for the rule.
forwardActionConfig_targetGroupStickinessConfig :: Lens' ForwardActionConfig (Maybe TargetGroupStickinessConfig)

-- | One or more host names. The maximum size of each name is 128
--   characters. The comparison is case insensitive. The following wildcard
--   characters are supported: * (matches 0 or more characters) and ?
--   (matches exactly 1 character).
--   
--   If you specify multiple strings, the condition is satisfied if one of
--   the strings matches the host name.
hostHeaderConditionConfig_values :: Lens' HostHeaderConditionConfig (Maybe [Text])

-- | One or more strings to compare against the value of the HTTP header.
--   The maximum size of each string is 128 characters. The comparison
--   strings are case insensitive. The following wildcard characters are
--   supported: * (matches 0 or more characters) and ? (matches exactly 1
--   character).
--   
--   If the same header appears multiple times in the request, we search
--   them in order until a match is found.
--   
--   If you specify multiple strings, the condition is satisfied if one of
--   the strings matches the value of the HTTP header. To require that all
--   of the strings are a match, create one condition per string.
httpHeaderConditionConfig_values :: Lens' HttpHeaderConditionConfig (Maybe [Text])

-- | The name of the HTTP header field. The maximum size is 40 characters.
--   The header name is case insensitive. The allowed characters are
--   specified by RFC 7230. Wildcards are not supported.
--   
--   You can't use an HTTP header condition to specify the host header. Use
--   HostHeaderConditionConfig to specify a host header condition.
httpHeaderConditionConfig_httpHeaderName :: Lens' HttpHeaderConditionConfig (Maybe Text)

-- | The name of the request method. The maximum size is 40 characters. The
--   allowed characters are A-Z, hyphen (-), and underscore (_). The
--   comparison is case sensitive. Wildcards are not supported; therefore,
--   the method name must be an exact match.
--   
--   If you specify multiple strings, the condition is satisfied if one of
--   the strings matches the HTTP request method. We recommend that you
--   route GET and HEAD requests in the same way, because the response to a
--   HEAD request may be cached.
httpRequestMethodConditionConfig_values :: Lens' HttpRequestMethodConditionConfig (Maybe [Text])

-- | The maximum value of the limit.
limit_max :: Lens' Limit (Maybe Text)

-- | The name of the limit. The possible values are:
--   
--   <ul>
--   <li>application-load-balancers</li>
--   <li>condition-values-per-alb-rule</li>
--   <li>condition-wildcards-per-alb-rule</li>
--   <li>gateway-load-balancers</li>
--   <li>gateway-load-balancers-per-vpc</li>
--   <li>geneve-target-groups</li>
--   <li>listeners-per-application-load-balancer</li>
--   <li>listeners-per-network-load-balancer</li>
--   <li>network-load-balancers</li>
--   <li>rules-per-application-load-balancer</li>
--   <li>target-groups</li>
--   <li>target-groups-per-action-on-application-load-balancer</li>
--   <li>target-groups-per-action-on-network-load-balancer</li>
--   <li>target-groups-per-application-load-balancer</li>
--   <li>targets-per-application-load-balancer</li>
--   <li>targets-per-availability-zone-per-gateway-load-balancer</li>
--   <li>targets-per-availability-zone-per-network-load-balancer</li>
--   <li>targets-per-network-load-balancer</li>
--   </ul>
limit_name :: Lens' Limit (Maybe Text)

-- | <ul>
--   <li><i>HTTPS or TLS listener</i> The security policy that defines
--   which protocols and ciphers are supported.</li>
--   </ul>
listener_sslPolicy :: Lens' Listener (Maybe Text)

-- | The Amazon Resource Name (ARN) of the listener.
listener_listenerArn :: Lens' Listener (Maybe Text)

-- | The protocol for connections from clients to the load balancer.
listener_protocol :: Lens' Listener (Maybe ProtocolEnum)

-- | The default actions for the listener.
listener_defaultActions :: Lens' Listener (Maybe [Action])

-- | <ul>
--   <li><i>HTTPS or TLS listener</i> The default certificate for the
--   listener.</li>
--   </ul>
listener_certificates :: Lens' Listener (Maybe [Certificate])

-- | The Amazon Resource Name (ARN) of the load balancer.
listener_loadBalancerArn :: Lens' Listener (Maybe Text)

-- | <ul>
--   <li><i>TLS listener</i> The name of the Application-Layer Protocol
--   Negotiation (ALPN) policy.</li>
--   </ul>
listener_alpnPolicy :: Lens' Listener (Maybe [Text])

-- | The port on which the load balancer is listening.
listener_port :: Lens' Listener (Maybe Natural)

-- | The state of the load balancer.
loadBalancer_state :: Lens' LoadBalancer (Maybe LoadBalancerState)

-- | The IDs of the security groups for the load balancer.
loadBalancer_securityGroups :: Lens' LoadBalancer (Maybe [Text])

-- | The name of the load balancer.
loadBalancer_loadBalancerName :: Lens' LoadBalancer (Maybe Text)

-- | The date and time the load balancer was created.
loadBalancer_createdTime :: Lens' LoadBalancer (Maybe UTCTime)

-- | The ID of the VPC for the load balancer.
loadBalancer_vpcId :: Lens' LoadBalancer (Maybe Text)

-- | The ID of the Amazon Route 53 hosted zone associated with the load
--   balancer.
loadBalancer_canonicalHostedZoneId :: Lens' LoadBalancer (Maybe Text)

-- | The subnets for the load balancer.
loadBalancer_availabilityZones :: Lens' LoadBalancer (Maybe [AvailabilityZone])

-- | <ul>
--   <li><i>Application Load Balancers on Outposts</i> The ID of the
--   customer-owned address pool.</li>
--   </ul>
loadBalancer_customerOwnedIpv4Pool :: Lens' LoadBalancer (Maybe Text)

-- | The Amazon Resource Name (ARN) of the load balancer.
loadBalancer_loadBalancerArn :: Lens' LoadBalancer (Maybe Text)

-- | The type of IP addresses used by the subnets for your load balancer.
--   The possible values are <tt>ipv4</tt> (for IPv4 addresses) and
--   <tt>dualstack</tt> (for IPv4 and IPv6 addresses).
loadBalancer_ipAddressType :: Lens' LoadBalancer (Maybe IpAddressType)

-- | The nodes of an Internet-facing load balancer have public IP
--   addresses. The DNS name of an Internet-facing load balancer is
--   publicly resolvable to the public IP addresses of the nodes.
--   Therefore, Internet-facing load balancers can route requests from
--   clients over the internet.
--   
--   The nodes of an internal load balancer have only private IP addresses.
--   The DNS name of an internal load balancer is publicly resolvable to
--   the private IP addresses of the nodes. Therefore, internal load
--   balancers can route requests only from clients with access to the VPC
--   for the load balancer.
loadBalancer_scheme :: Lens' LoadBalancer (Maybe LoadBalancerSchemeEnum)

-- | The type of load balancer.
loadBalancer_type :: Lens' LoadBalancer (Maybe LoadBalancerTypeEnum)

-- | The public DNS name of the load balancer.
loadBalancer_dNSName :: Lens' LoadBalancer (Maybe Text)

-- | <ul>
--   <li><i>Network Load Balancers</i> The IPv6 address.</li>
--   </ul>
loadBalancerAddress_iPv6Address :: Lens' LoadBalancerAddress (Maybe Text)

-- | The static IP address.
loadBalancerAddress_ipAddress :: Lens' LoadBalancerAddress (Maybe Text)

-- | <ul>
--   <li><i>Network Load Balancers</i> The allocation ID of the Elastic IP
--   address for an internal-facing load balancer.</li>
--   </ul>
loadBalancerAddress_allocationId :: Lens' LoadBalancerAddress (Maybe Text)

-- | <ul>
--   <li><i>Network Load Balancers</i> The private IPv4 address for an
--   internal load balancer.</li>
--   </ul>
loadBalancerAddress_privateIPv4Address :: Lens' LoadBalancerAddress (Maybe Text)

-- | The value of the attribute.
loadBalancerAttribute_value :: Lens' LoadBalancerAttribute (Maybe Text)

-- | The name of the attribute.
--   
--   The following attribute is supported by all load balancers:
--   
--   <ul>
--   <li><tt>deletion_protection.enabled</tt> - Indicates whether deletion
--   protection is enabled. The value is <tt>true</tt> or <tt>false</tt>.
--   The default is <tt>false</tt>.</li>
--   </ul>
--   
--   The following attributes are supported by both Application Load
--   Balancers and Network Load Balancers:
--   
--   <ul>
--   <li><tt>access_logs.s3.enabled</tt> - Indicates whether access logs
--   are enabled. The value is <tt>true</tt> or <tt>false</tt>. The default
--   is <tt>false</tt>.</li>
--   <li><tt>access_logs.s3.bucket</tt> - The name of the S3 bucket for the
--   access logs. This attribute is required if access logs are enabled.
--   The bucket must exist in the same region as the load balancer and have
--   a bucket policy that grants Elastic Load Balancing permissions to
--   write to the bucket.</li>
--   <li><tt>access_logs.s3.prefix</tt> - The prefix for the location in
--   the S3 bucket for the access logs.</li>
--   </ul>
--   
--   The following attributes are supported by only Application Load
--   Balancers:
--   
--   <ul>
--   <li><tt>idle_timeout.timeout_seconds</tt> - The idle timeout value, in
--   seconds. The valid range is 1-4000 seconds. The default is 60
--   seconds.</li>
--   <li><tt>routing.http.desync_mitigation_mode</tt> - Determines how the
--   load balancer handles requests that might pose a security risk to your
--   application. The possible values are <tt>monitor</tt>,
--   <tt>defensive</tt>, and <tt>strictest</tt>. The default is
--   <tt>defensive</tt>.</li>
--   <li><tt>routing.http.drop_invalid_header_fields.enabled</tt> -
--   Indicates whether HTTP headers with invalid header fields are removed
--   by the load balancer (<tt>true</tt>) or routed to targets
--   (<tt>false</tt>). The default is <tt>false</tt>.</li>
--   <li><tt>routing.http.x_amzn_tls_version_and_cipher_suite.enabled</tt>
--   - Indicates whether the two headers (<tt>x-amzn-tls-version</tt> and
--   <tt>x-amzn-tls-cipher-suite</tt>), which contain information about the
--   negotiated TLS version and cipher suite, are added to the client
--   request before sending it to the target. The
--   <tt>x-amzn-tls-version</tt> header has information about the TLS
--   protocol version negotiated with the client, and the
--   <tt>x-amzn-tls-cipher-suite</tt> header has information about the
--   cipher suite negotiated with the client. Both headers are in OpenSSL
--   format. The possible values for the attribute are <tt>true</tt> and
--   <tt>false</tt>. The default is <tt>false</tt>.</li>
--   <li><tt>routing.http.xff_client_port.enabled</tt> - Indicates whether
--   the <tt>X-Forwarded-For</tt> header should preserve the source port
--   that the client used to connect to the load balancer. The possible
--   values are <tt>true</tt> and <tt>false</tt>. The default is
--   <tt>false</tt>.</li>
--   <li><tt>routing.http2.enabled</tt> - Indicates whether HTTP/2 is
--   enabled. The possible values are <tt>true</tt> and <tt>false</tt>. The
--   default is <tt>true</tt>. Elastic Load Balancing requires that message
--   header names contain only alphanumeric characters and hyphens.</li>
--   <li><tt>waf.fail_open.enabled</tt> - Indicates whether to allow a
--   WAF-enabled load balancer to route requests to targets if it is unable
--   to forward the request to Amazon Web Services WAF. The possible values
--   are <tt>true</tt> and <tt>false</tt>. The default is
--   <tt>false</tt>.</li>
--   </ul>
--   
--   The following attribute is supported by Network Load Balancers and
--   Gateway Load Balancers:
--   
--   <ul>
--   <li><tt>load_balancing.cross_zone.enabled</tt> - Indicates whether
--   cross-zone load balancing is enabled. The possible values are
--   <tt>true</tt> and <tt>false</tt>. The default is <tt>false</tt>.</li>
--   </ul>
loadBalancerAttribute_key :: Lens' LoadBalancerAttribute (Maybe Text)

-- | A description of the state.
loadBalancerState_reason :: Lens' LoadBalancerState (Maybe Text)

-- | The state code. The initial state of the load balancer is
--   <tt>provisioning</tt>. After the load balancer is fully set up and
--   ready to route traffic, its state is <tt>active</tt>. If load balancer
--   is routing traffic but does not have the resources it needs to scale,
--   its state is<tt>active_impaired</tt>. If the load balancer could not
--   be set up, its state is <tt>failed</tt>.
loadBalancerState_code :: Lens' LoadBalancerState (Maybe LoadBalancerStateEnum)

-- | For Application Load Balancers, you can specify values between 200 and
--   499, and the default value is 200. You can specify multiple values
--   (for example, "200,202") or a range of values (for example,
--   "200-299").
--   
--   For Network Load Balancers and Gateway Load Balancers, this must be
--   "200–399".
--   
--   Note that when using shorthand syntax, some values such as commas need
--   to be escaped.
matcher_httpCode :: Lens' Matcher (Maybe Text)

-- | You can specify values between 0 and 99. You can specify multiple
--   values (for example, "0,1") or a range of values (for example, "0-5").
--   The default value is 12.
matcher_grpcCode :: Lens' Matcher (Maybe Text)

-- | One or more path patterns to compare against the request URL. The
--   maximum size of each string is 128 characters. The comparison is case
--   sensitive. The following wildcard characters are supported: * (matches
--   0 or more characters) and ? (matches exactly 1 character).
--   
--   If you specify multiple strings, the condition is satisfied if one of
--   them matches the request URL. The path pattern is compared only to the
--   path of the URL, not to its query string. To compare against the query
--   string, use QueryStringConditionConfig.
pathPatternConditionConfig_values :: Lens' PathPatternConditionConfig (Maybe [Text])

-- | One or more key/value pairs or values to find in the query string. The
--   maximum size of each string is 128 characters. The comparison is case
--   insensitive. The following wildcard characters are supported: *
--   (matches 0 or more characters) and ? (matches exactly 1 character). To
--   search for a literal '*' or '?' character in a query string, you must
--   escape these characters in <tt>Values</tt> using a '\' character.
--   
--   If you specify multiple key/value pairs or values, the condition is
--   satisfied if one of them is found in the query string.
queryStringConditionConfig_values :: Lens' QueryStringConditionConfig (Maybe [QueryStringKeyValuePair])

-- | The value.
queryStringKeyValuePair_value :: Lens' QueryStringKeyValuePair (Maybe Text)

-- | The key. You can omit the key.
queryStringKeyValuePair_key :: Lens' QueryStringKeyValuePair (Maybe Text)

-- | The absolute path, starting with the leading "/". This component is
--   not percent-encoded. The path can contain #{host}, #{path}, and
--   #{port}.
redirectActionConfig_path :: Lens' RedirectActionConfig (Maybe Text)

-- | The protocol. You can specify HTTP, HTTPS, or #{protocol}. You can
--   redirect HTTP to HTTP, HTTP to HTTPS, and HTTPS to HTTPS. You cannot
--   redirect HTTPS to HTTP.
redirectActionConfig_protocol :: Lens' RedirectActionConfig (Maybe Text)

-- | The query parameters, URL-encoded when necessary, but not
--   percent-encoded. Do not include the leading "?", as it is
--   automatically added. You can specify any of the reserved keywords.
redirectActionConfig_query :: Lens' RedirectActionConfig (Maybe Text)

-- | The hostname. This component is not percent-encoded. The hostname can
--   contain #{host}.
redirectActionConfig_host :: Lens' RedirectActionConfig (Maybe Text)

-- | The port. You can specify a value from 1 to 65535 or #{port}.
redirectActionConfig_port :: Lens' RedirectActionConfig (Maybe Text)

-- | The HTTP redirect code. The redirect is either permanent (HTTP 301) or
--   temporary (HTTP 302).
redirectActionConfig_statusCode :: Lens' RedirectActionConfig RedirectActionStatusCodeEnum

-- | The priority.
rule_priority :: Lens' Rule (Maybe Text)

-- | The actions. Each rule must include exactly one of the following types
--   of actions: <tt>forward</tt>, <tt>redirect</tt>, or
--   <tt>fixed-response</tt>, and it must be the last action to be
--   performed.
rule_actions :: Lens' Rule (Maybe [Action])

-- | The conditions. Each rule can include zero or one of the following
--   conditions: <tt>http-request-method</tt>, <tt>host-header</tt>,
--   <tt>path-pattern</tt>, and <tt>source-ip</tt>, and zero or more of the
--   following conditions: <tt>http-header</tt> and <tt>query-string</tt>.
rule_conditions :: Lens' Rule (Maybe [RuleCondition])

-- | The Amazon Resource Name (ARN) of the rule.
rule_ruleArn :: Lens' Rule (Maybe Text)

-- | Indicates whether this is the default rule.
rule_isDefault :: Lens' Rule (Maybe Bool)

-- | The field in the HTTP request. The following are the possible values:
--   
--   <ul>
--   <li><pre>http-header</pre></li>
--   <li><pre>http-request-method</pre></li>
--   <li><pre>host-header</pre></li>
--   <li><pre>path-pattern</pre></li>
--   <li><pre>query-string</pre></li>
--   <li><pre>source-ip</pre></li>
--   </ul>
ruleCondition_field :: Lens' RuleCondition (Maybe Text)

-- | Information for an HTTP header condition. Specify only when
--   <tt>Field</tt> is <tt>http-header</tt>.
ruleCondition_httpHeaderConfig :: Lens' RuleCondition (Maybe HttpHeaderConditionConfig)

-- | Information for a host header condition. Specify only when
--   <tt>Field</tt> is <tt>host-header</tt>.
ruleCondition_hostHeaderConfig :: Lens' RuleCondition (Maybe HostHeaderConditionConfig)

-- | The condition value. Specify only when <tt>Field</tt> is
--   <tt>host-header</tt> or <tt>path-pattern</tt>. Alternatively, to
--   specify multiple host names or multiple path patterns, use
--   <tt>HostHeaderConfig</tt> or <tt>PathPatternConfig</tt>.
--   
--   If <tt>Field</tt> is <tt>host-header</tt> and you are not using
--   <tt>HostHeaderConfig</tt>, you can specify a single host name (for
--   example, my.example.com) in <tt>Values</tt>. A host name is case
--   insensitive, can be up to 128 characters in length, and can contain
--   any of the following characters.
--   
--   <ul>
--   <li>A-Z, a-z, 0-9</li>
--   <li>- .</li>
--   <li>* (matches 0 or more characters)</li>
--   <li>? (matches exactly 1 character)</li>
--   </ul>
--   
--   If <tt>Field</tt> is <tt>path-pattern</tt> and you are not using
--   <tt>PathPatternConfig</tt>, you can specify a single path pattern (for
--   example, /img/*) in <tt>Values</tt>. A path pattern is case-sensitive,
--   can be up to 128 characters in length, and can contain any of the
--   following characters.
--   
--   <ul>
--   <li>A-Z, a-z, 0-9</li>
--   <li>_ - . $ / ~ " ' @ : +</li>
--   <li>&amp; (using &amp;amp;)</li>
--   <li>* (matches 0 or more characters)</li>
--   <li>? (matches exactly 1 character)</li>
--   </ul>
ruleCondition_values :: Lens' RuleCondition (Maybe [Text])

-- | Information for a source IP condition. Specify only when
--   <tt>Field</tt> is <tt>source-ip</tt>.
ruleCondition_sourceIpConfig :: Lens' RuleCondition (Maybe SourceIpConditionConfig)

-- | Information for an HTTP method condition. Specify only when
--   <tt>Field</tt> is <tt>http-request-method</tt>.
ruleCondition_httpRequestMethodConfig :: Lens' RuleCondition (Maybe HttpRequestMethodConditionConfig)

-- | Information for a path pattern condition. Specify only when
--   <tt>Field</tt> is <tt>path-pattern</tt>.
ruleCondition_pathPatternConfig :: Lens' RuleCondition (Maybe PathPatternConditionConfig)

-- | Information for a query string condition. Specify only when
--   <tt>Field</tt> is <tt>query-string</tt>.
ruleCondition_queryStringConfig :: Lens' RuleCondition (Maybe QueryStringConditionConfig)

-- | The rule priority.
rulePriorityPair_priority :: Lens' RulePriorityPair (Maybe Natural)

-- | The Amazon Resource Name (ARN) of the rule.
rulePriorityPair_ruleArn :: Lens' RulePriorityPair (Maybe Text)

-- | One or more source IP addresses, in CIDR format. You can use both IPv4
--   and IPv6 addresses. Wildcards are not supported.
--   
--   If you specify multiple addresses, the condition is satisfied if the
--   source IP address of the request matches one of the CIDR blocks. This
--   condition is not satisfied by the addresses in the X-Forwarded-For
--   header. To search for addresses in the X-Forwarded-For header, use
--   HttpHeaderConditionConfig.
sourceIpConditionConfig_values :: Lens' SourceIpConditionConfig (Maybe [Text])

-- | The supported load balancers.
sslPolicy_supportedLoadBalancerTypes :: Lens' SslPolicy (Maybe [Text])

-- | The ciphers.
sslPolicy_ciphers :: Lens' SslPolicy (Maybe [Cipher])

-- | The name of the policy.
sslPolicy_name :: Lens' SslPolicy (Maybe Text)

-- | The protocols.
sslPolicy_sslProtocols :: Lens' SslPolicy (Maybe [Text])

-- | <ul>
--   <li><i>Network Load Balancers</i> The IPv6 address.</li>
--   </ul>
subnetMapping_iPv6Address :: Lens' SubnetMapping (Maybe Text)

-- | <ul>
--   <li><i>Network Load Balancers</i> The allocation ID of the Elastic IP
--   address for an internet-facing load balancer.</li>
--   </ul>
subnetMapping_allocationId :: Lens' SubnetMapping (Maybe Text)

-- | <ul>
--   <li><i>Network Load Balancers</i> The private IPv4 address for an
--   internal load balancer.</li>
--   </ul>
subnetMapping_privateIPv4Address :: Lens' SubnetMapping (Maybe Text)

-- | The ID of the subnet.
subnetMapping_subnetId :: Lens' SubnetMapping (Maybe Text)

-- | The value of the tag.
tag_value :: Lens' Tag (Maybe Text)

-- | The key of the tag.
tag_key :: Lens' Tag Text

-- | The Amazon Resource Name (ARN) of the resource.
tagDescription_resourceArn :: Lens' TagDescription (Maybe Text)

-- | Information about the tags.
tagDescription_tags :: Lens' TagDescription (Maybe (NonEmpty Tag))

-- | An Availability Zone or <tt>all</tt>. This determines whether the
--   target receives traffic from the load balancer nodes in the specified
--   Availability Zone or from all enabled Availability Zones for the load
--   balancer.
--   
--   This parameter is not supported if the target type of the target group
--   is <tt>instance</tt> or <tt>alb</tt>.
--   
--   If the target type is <tt>ip</tt> and the IP address is in a subnet of
--   the VPC for the target group, the Availability Zone is automatically
--   detected and this parameter is optional. If the IP address is outside
--   the VPC, this parameter is required.
--   
--   With an Application Load Balancer, if the target type is <tt>ip</tt>
--   and the IP address is outside the VPC for the target group, the only
--   supported value is <tt>all</tt>.
--   
--   If the target type is <tt>lambda</tt>, this parameter is optional and
--   the only supported value is <tt>all</tt>.
targetDescription_availabilityZone :: Lens' TargetDescription (Maybe Text)

-- | The port on which the target is listening. If the target group
--   protocol is GENEVE, the supported port is 6081. If the target type is
--   <tt>alb</tt>, the targeted Application Load Balancer must have at
--   least one listener whose port matches the target group port. Not used
--   if the target is a Lambda function.
targetDescription_port :: Lens' TargetDescription (Maybe Natural)

-- | The ID of the target. If the target type of the target group is
--   <tt>instance</tt>, specify an instance ID. If the target type is
--   <tt>ip</tt>, specify an IP address. If the target type is
--   <tt>lambda</tt>, specify the ARN of the Lambda function. If the target
--   type is <tt>alb</tt>, specify the ARN of the Application Load Balancer
--   target.
targetDescription_id :: Lens' TargetDescription Text

-- | <ul>
--   <li><i>HTTP/HTTPS protocol</i> The protocol version. The possible
--   values are <tt>GRPC</tt>, <tt>HTTP1</tt>, and <tt>HTTP2</tt>.</li>
--   </ul>
targetGroup_protocolVersion :: Lens' TargetGroup (Maybe Text)

-- | The HTTP or gRPC codes to use when checking for a successful response
--   from a target.
targetGroup_matcher :: Lens' TargetGroup (Maybe Matcher)

-- | The destination for health checks on the targets.
targetGroup_healthCheckPath :: Lens' TargetGroup (Maybe Text)

-- | Indicates whether health checks are enabled.
targetGroup_healthCheckEnabled :: Lens' TargetGroup (Maybe Bool)

-- | The number of consecutive health check failures required before
--   considering the target unhealthy.
targetGroup_unhealthyThresholdCount :: Lens' TargetGroup (Maybe Natural)

-- | The ID of the VPC for the targets.
targetGroup_vpcId :: Lens' TargetGroup (Maybe Text)

-- | The Amazon Resource Name (ARN) of the target group.
targetGroup_targetGroupArn :: Lens' TargetGroup (Maybe Text)

-- | The protocol to use for routing traffic to the targets.
targetGroup_protocol :: Lens' TargetGroup (Maybe ProtocolEnum)

-- | The approximate amount of time, in seconds, between health checks of
--   an individual target.
targetGroup_healthCheckIntervalSeconds :: Lens' TargetGroup (Maybe Natural)

-- | The type of target that you must specify when registering targets with
--   this target group. The possible values are <tt>instance</tt> (register
--   targets by instance ID), <tt>ip</tt> (register targets by IP address),
--   <tt>lambda</tt> (register a single Lambda function as a target), or
--   <tt>alb</tt> (register a single Application Load Balancer as a
--   target).
targetGroup_targetType :: Lens' TargetGroup (Maybe TargetTypeEnum)

-- | The number of consecutive health checks successes required before
--   considering an unhealthy target healthy.
targetGroup_healthyThresholdCount :: Lens' TargetGroup (Maybe Natural)

-- | The protocol to use to connect with the target. The GENEVE, TLS, UDP,
--   and TCP_UDP protocols are not supported for health checks.
targetGroup_healthCheckProtocol :: Lens' TargetGroup (Maybe ProtocolEnum)

-- | The Amazon Resource Names (ARN) of the load balancers that route
--   traffic to this target group.
targetGroup_loadBalancerArns :: Lens' TargetGroup (Maybe [Text])

-- | The type of IP address used for this target group. The possible values
--   are <tt>ipv4</tt> and <tt>ipv6</tt>. This is an optional parameter. If
--   not specified, the IP address type defaults to <tt>ipv4</tt>.
targetGroup_ipAddressType :: Lens' TargetGroup (Maybe TargetGroupIpAddressTypeEnum)

-- | The amount of time, in seconds, during which no response means a
--   failed health check.
targetGroup_healthCheckTimeoutSeconds :: Lens' TargetGroup (Maybe Natural)

-- | The port to use to connect with the target.
targetGroup_healthCheckPort :: Lens' TargetGroup (Maybe Text)

-- | The name of the target group.
targetGroup_targetGroupName :: Lens' TargetGroup (Maybe Text)

-- | The port on which the targets are listening. Not used if the target is
--   a Lambda function.
targetGroup_port :: Lens' TargetGroup (Maybe Natural)

-- | The value of the attribute.
targetGroupAttribute_value :: Lens' TargetGroupAttribute (Maybe Text)

-- | The name of the attribute.
--   
--   The following attribute is supported by all load balancers:
--   
--   <ul>
--   <li><tt>deregistration_delay.timeout_seconds</tt> - The amount of
--   time, in seconds, for Elastic Load Balancing to wait before changing
--   the state of a deregistering target from <tt>draining</tt> to
--   <tt>unused</tt>. The range is 0-3600 seconds. The default value is 300
--   seconds. If the target is a Lambda function, this attribute is not
--   supported.</li>
--   </ul>
--   
--   The following attributes are supported by both Application Load
--   Balancers and Network Load Balancers:
--   
--   <ul>
--   <li><tt>stickiness.enabled</tt> - Indicates whether sticky sessions
--   are enabled. The value is <tt>true</tt> or <tt>false</tt>. The default
--   is <tt>false</tt>.</li>
--   <li><tt>stickiness.type</tt> - The type of sticky sessions. The
--   possible values are <tt>lb_cookie</tt> and <tt>app_cookie</tt> for
--   Application Load Balancers or <tt>source_ip</tt> for Network Load
--   Balancers.</li>
--   </ul>
--   
--   The following attributes are supported only if the load balancer is an
--   Application Load Balancer and the target is an instance or an IP
--   address:
--   
--   <ul>
--   <li><tt>load_balancing.algorithm.type</tt> - The load balancing
--   algorithm determines how the load balancer selects targets when
--   routing requests. The value is <tt>round_robin</tt> or
--   <tt>least_outstanding_requests</tt>. The default is
--   <tt>round_robin</tt>.</li>
--   <li><tt>slow_start.duration_seconds</tt> - The time period, in
--   seconds, during which a newly registered target receives an increasing
--   share of the traffic to the target group. After this time period ends,
--   the target receives its full share of traffic. The range is 30-900
--   seconds (15 minutes). The default is 0 seconds (disabled).</li>
--   <li><tt>stickiness.app_cookie.cookie_name</tt> - Indicates the name of
--   the application-based cookie. Names that start with the following
--   prefixes are not allowed: <tt>AWSALB</tt>, <tt>AWSALBAPP</tt>, and
--   <tt>AWSALBTG</tt>; they're reserved for use by the load balancer.</li>
--   <li><tt>stickiness.app_cookie.duration_seconds</tt> - The time period,
--   in seconds, during which requests from a client should be routed to
--   the same target. After this time period expires, the application-based
--   cookie is considered stale. The range is 1 second to 1 week (604800
--   seconds). The default value is 1 day (86400 seconds).</li>
--   <li><tt>stickiness.lb_cookie.duration_seconds</tt> - The time period,
--   in seconds, during which requests from a client should be routed to
--   the same target. After this time period expires, the load
--   balancer-generated cookie is considered stale. The range is 1 second
--   to 1 week (604800 seconds). The default value is 1 day (86400
--   seconds).</li>
--   </ul>
--   
--   The following attribute is supported only if the load balancer is an
--   Application Load Balancer and the target is a Lambda function:
--   
--   <ul>
--   <li><tt>lambda.multi_value_headers.enabled</tt> - Indicates whether
--   the request and response headers that are exchanged between the load
--   balancer and the Lambda function include arrays of values or strings.
--   The value is <tt>true</tt> or <tt>false</tt>. The default is
--   <tt>false</tt>. If the value is <tt>false</tt> and the request
--   contains a duplicate header field name or query parameter key, the
--   load balancer uses the last value sent by the client.</li>
--   </ul>
--   
--   The following attributes are supported only by Network Load Balancers:
--   
--   <ul>
--   <li><tt>deregistration_delay.connection_termination.enabled</tt> -
--   Indicates whether the load balancer terminates connections at the end
--   of the deregistration timeout. The value is <tt>true</tt> or
--   <tt>false</tt>. The default is <tt>false</tt>.</li>
--   <li><tt>preserve_client_ip.enabled</tt> - Indicates whether client IP
--   preservation is enabled. The value is <tt>true</tt> or <tt>false</tt>.
--   The default is disabled if the target group type is IP address and the
--   target group protocol is TCP or TLS. Otherwise, the default is
--   enabled. Client IP preservation cannot be disabled for UDP and TCP_UDP
--   target groups.</li>
--   <li><tt>proxy_protocol_v2.enabled</tt> - Indicates whether Proxy
--   Protocol version 2 is enabled. The value is <tt>true</tt> or
--   <tt>false</tt>. The default is <tt>false</tt>.</li>
--   </ul>
targetGroupAttribute_key :: Lens' TargetGroupAttribute (Maybe Text)

-- | Indicates whether target group stickiness is enabled.
targetGroupStickinessConfig_enabled :: Lens' TargetGroupStickinessConfig (Maybe Bool)

-- | The time period, in seconds, during which requests from a client
--   should be routed to the same target group. The range is 1-604800
--   seconds (7 days).
targetGroupStickinessConfig_durationSeconds :: Lens' TargetGroupStickinessConfig (Maybe Int)

-- | The weight. The range is 0 to 999.
targetGroupTuple_weight :: Lens' TargetGroupTuple (Maybe Int)

-- | The Amazon Resource Name (ARN) of the target group.
targetGroupTuple_targetGroupArn :: Lens' TargetGroupTuple (Maybe Text)

-- | The state of the target.
targetHealth_state :: Lens' TargetHealth (Maybe TargetHealthStateEnum)

-- | The reason code.
--   
--   If the target state is <tt>healthy</tt>, a reason code is not
--   provided.
--   
--   If the target state is <tt>initial</tt>, the reason code can be one of
--   the following values:
--   
--   <ul>
--   <li><tt>Elb.RegistrationInProgress</tt> - The target is in the process
--   of being registered with the load balancer.</li>
--   <li><tt>Elb.InitialHealthChecking</tt> - The load balancer is still
--   sending the target the minimum number of health checks required to
--   determine its health status.</li>
--   </ul>
--   
--   If the target state is <tt>unhealthy</tt>, the reason code can be one
--   of the following values:
--   
--   <ul>
--   <li><tt>Target.ResponseCodeMismatch</tt> - The health checks did not
--   return an expected HTTP code. Applies only to Application Load
--   Balancers and Gateway Load Balancers.</li>
--   <li><tt>Target.Timeout</tt> - The health check requests timed out.
--   Applies only to Application Load Balancers and Gateway Load
--   Balancers.</li>
--   <li><tt>Target.FailedHealthChecks</tt> - The load balancer received an
--   error while establishing a connection to the target or the target
--   response was malformed.</li>
--   <li><tt>Elb.InternalError</tt> - The health checks failed due to an
--   internal error. Applies only to Application Load Balancers.</li>
--   </ul>
--   
--   If the target state is <tt>unused</tt>, the reason code can be one of
--   the following values:
--   
--   <ul>
--   <li><tt>Target.NotRegistered</tt> - The target is not registered with
--   the target group.</li>
--   <li><tt>Target.NotInUse</tt> - The target group is not used by any
--   load balancer or the target is in an Availability Zone that is not
--   enabled for its load balancer.</li>
--   <li><tt>Target.InvalidState</tt> - The target is in the stopped or
--   terminated state.</li>
--   <li><tt>Target.IpUnusable</tt> - The target IP address is reserved for
--   use by a load balancer.</li>
--   </ul>
--   
--   If the target state is <tt>draining</tt>, the reason code can be the
--   following value:
--   
--   <ul>
--   <li><tt>Target.DeregistrationInProgress</tt> - The target is in the
--   process of being deregistered and the deregistration delay period has
--   not expired.</li>
--   </ul>
--   
--   If the target state is <tt>unavailable</tt>, the reason code can be
--   the following value:
--   
--   <ul>
--   <li><tt>Target.HealthCheckDisabled</tt> - Health checks are disabled
--   for the target group. Applies only to Application Load Balancers.</li>
--   <li><tt>Elb.InternalError</tt> - Target health is unavailable due to
--   an internal error. Applies only to Network Load Balancers.</li>
--   </ul>
targetHealth_reason :: Lens' TargetHealth (Maybe TargetHealthReasonEnum)

-- | A description of the target health that provides additional details.
--   If the state is <tt>healthy</tt>, a description is not provided.
targetHealth_description :: Lens' TargetHealth (Maybe Text)

-- | The health information for the target.
targetHealthDescription_targetHealth :: Lens' TargetHealthDescription (Maybe TargetHealth)

-- | The port to use to connect with the target.
targetHealthDescription_healthCheckPort :: Lens' TargetHealthDescription (Maybe Text)

-- | The description of the target.
targetHealthDescription_target :: Lens' TargetHealthDescription (Maybe TargetDescription)


module Network.AWS.ELBV2.Waiters

-- | Polls <a>DescribeLoadBalancers</a> every 15 seconds until a successful
--   state is reached. An error is returned after 40 failed checks.
newLoadBalancersDeleted :: Wait DescribeLoadBalancers

-- | Polls <a>DescribeTargetHealth</a> every 15 seconds until a successful
--   state is reached. An error is returned after 40 failed checks.
newTargetDeregistered :: Wait DescribeTargetHealth

-- | Polls <a>DescribeLoadBalancers</a> every 15 seconds until a successful
--   state is reached. An error is returned after 40 failed checks.
newLoadBalancerAvailable :: Wait DescribeLoadBalancers

-- | Polls <a>DescribeTargetHealth</a> every 15 seconds until a successful
--   state is reached. An error is returned after 40 failed checks.
newTargetInService :: Wait DescribeTargetHealth

-- | Polls <a>DescribeLoadBalancers</a> every 15 seconds until a successful
--   state is reached. An error is returned after 40 failed checks.
newLoadBalancerExists :: Wait DescribeLoadBalancers


-- | Derived from API version <tt>2015-12-01</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   Elastic Load Balancing
--   
--   A load balancer distributes incoming traffic across targets, such as
--   your EC2 instances. This enables you to increase the availability of
--   your application. The load balancer also monitors the health of its
--   registered targets and ensures that it routes traffic only to healthy
--   targets. You configure your load balancer to accept incoming traffic
--   by specifying one or more listeners, which are configured with a
--   protocol and port number for connections from clients to the load
--   balancer. You configure a target group with a protocol and port number
--   for connections from the load balancer to the targets, and with health
--   check settings to be used when checking the health status of the
--   targets.
--   
--   Elastic Load Balancing supports the following types of load balancers:
--   Application Load Balancers, Network Load Balancers, Gateway Load
--   Balancers, and Classic Load Balancers. This reference covers the
--   following load balancer types:
--   
--   <ul>
--   <li>Application Load Balancer - Operates at the application layer
--   (layer 7) and supports HTTP and HTTPS.</li>
--   <li>Network Load Balancer - Operates at the transport layer (layer 4)
--   and supports TCP, TLS, and UDP.</li>
--   <li>Gateway Load Balancer - Operates at the network layer (layer
--   3).</li>
--   </ul>
--   
--   For more information, see the <a>Elastic Load Balancing User
--   Guide</a>.
--   
--   All Elastic Load Balancing operations are idempotent, which means that
--   they complete at most one time. If you repeat an operation, it
--   succeeds.
module Network.AWS.ELBV2

-- | API version <tt>2015-12-01</tt> of the Amazon Elastic Load Balancing
--   SDK configuration.
defaultService :: Service

-- | The requested configuration is not valid.
_InvalidConfigurationRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified subnet does not exist.
_SubnetNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You've reached the limit on the number of targets.
_TooManyTargetsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified rule does not exist.
_RuleNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified subnet is out of available addresses.
_InvalidSubnetException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You've reached the limit on the number of rules per load balancer.
_TooManyRulesException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You've reached the limit on the number of target groups for your
--   Amazon Web Services account.
_TooManyTargetGroupsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You've reached the limit on the number of actions per rule.
_TooManyActionsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A load balancer with the specified name already exists.
_DuplicateLoadBalancerNameException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified configuration is not valid with this protocol.
_IncompatibleProtocolsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You've reached the limit on the number of certificates per load
--   balancer.
_TooManyCertificatesException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A tag key was specified more than once.
_DuplicateTagKeysException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A listener with the specified port already exists.
_DuplicateListenerException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You've reached the limit on the number of tags per load balancer.
_TooManyTagsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A target group with the specified name already exists.
_DuplicateTargetGroupNameException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The health of the specified targets could not be retrieved due to an
--   internal error.
_HealthUnavailableException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified allocation ID does not exist.
_AllocationIdNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified priority is in use.
_PriorityInUseException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You've reached the limit on the number of load balancers for your
--   Amazon Web Services account.
_TooManyLoadBalancersException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified protocol is not supported.
_UnsupportedProtocolException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified ALPN policy is not supported.
_ALPNPolicyNotSupportedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified target does not exist, is not in the same VPC as the
--   target group, or has an unsupported instance type.
_InvalidTargetException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified security group does not exist.
_InvalidSecurityGroupException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified target group does not exist.
_TargetGroupNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified listener does not exist.
_ListenerNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested action is not valid.
_InvalidLoadBalancerActionException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You've reached the limit on the number of times a target can be
--   registered with a load balancer.
_TooManyRegistrationsForTargetIdException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You've reached the limit on the number of listeners per load balancer.
_TooManyListenersException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You've reached the limit on the number of load balancers per target
--   group.
_TargetGroupAssociationLimitException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This operation is not allowed.
_OperationNotPermittedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified SSL policy does not exist.
_SSLPolicyNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested scheme is not valid.
_InvalidSchemeException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified Availability Zone is not supported.
_AvailabilityZoneNotSupportedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You've reached the limit on the number of unique target groups per
--   load balancer across all listeners. If a target group is used by
--   multiple actions for a load balancer, it is counted as only one use.
_TooManyUniqueTargetGroupsPerLoadBalancerException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified load balancer does not exist.
_LoadBalancerNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A specified resource is in use.
_ResourceInUseException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified certificate does not exist.
_CertificateNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Polls <a>DescribeLoadBalancers</a> every 15 seconds until a successful
--   state is reached. An error is returned after 40 failed checks.
newLoadBalancersDeleted :: Wait DescribeLoadBalancers

-- | Polls <a>DescribeTargetHealth</a> every 15 seconds until a successful
--   state is reached. An error is returned after 40 failed checks.
newTargetDeregistered :: Wait DescribeTargetHealth

-- | Polls <a>DescribeLoadBalancers</a> every 15 seconds until a successful
--   state is reached. An error is returned after 40 failed checks.
newLoadBalancerAvailable :: Wait DescribeLoadBalancers

-- | Polls <a>DescribeTargetHealth</a> every 15 seconds until a successful
--   state is reached. An error is returned after 40 failed checks.
newTargetInService :: Wait DescribeTargetHealth

-- | Polls <a>DescribeLoadBalancers</a> every 15 seconds until a successful
--   state is reached. An error is returned after 40 failed checks.
newLoadBalancerExists :: Wait DescribeLoadBalancers

-- | <i>See:</i> <a>newDescribeLoadBalancers</a> smart constructor.
data DescribeLoadBalancers
DescribeLoadBalancers' :: Maybe [Text] -> Maybe [Text] -> Maybe Text -> Maybe Natural -> DescribeLoadBalancers

-- | Create a value of <a>DescribeLoadBalancers</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:names:DescribeLoadBalancers'</a>,
--   <a>describeLoadBalancers_names</a> - The names of the load balancers.
--   
--   <a>$sel:loadBalancerArns:DescribeLoadBalancers'</a>,
--   <a>describeLoadBalancers_loadBalancerArns</a> - The Amazon Resource
--   Names (ARN) of the load balancers. You can specify up to 20 load
--   balancers in a single call.
--   
--   <a>$sel:marker:DescribeLoadBalancers'</a>,
--   <a>describeLoadBalancers_marker</a> - The marker for the next set of
--   results. (You received this marker from a previous call.)
--   
--   <a>$sel:pageSize:DescribeLoadBalancers'</a>,
--   <a>describeLoadBalancers_pageSize</a> - The maximum number of results
--   to return with this call.
newDescribeLoadBalancers :: DescribeLoadBalancers

-- | <i>See:</i> <a>newDescribeLoadBalancersResponse</a> smart constructor.
data DescribeLoadBalancersResponse
DescribeLoadBalancersResponse' :: Maybe [LoadBalancer] -> Maybe Text -> Int -> DescribeLoadBalancersResponse

-- | Create a value of <a>DescribeLoadBalancersResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:loadBalancers:DescribeLoadBalancersResponse'</a>,
--   <a>describeLoadBalancersResponse_loadBalancers</a> - Information about
--   the load balancers.
--   
--   <a>$sel:nextMarker:DescribeLoadBalancersResponse'</a>,
--   <a>describeLoadBalancersResponse_nextMarker</a> - If there are
--   additional results, this is the marker for the next set of results.
--   Otherwise, this is null.
--   
--   <a>$sel:httpStatus:DescribeLoadBalancersResponse'</a>,
--   <a>describeLoadBalancersResponse_httpStatus</a> - The response's http
--   status code.
newDescribeLoadBalancersResponse :: Int -> DescribeLoadBalancersResponse

-- | <i>See:</i> <a>newDescribeTags</a> smart constructor.
data DescribeTags
DescribeTags' :: [Text] -> DescribeTags

-- | Create a value of <a>DescribeTags</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArns:DescribeTags'</a>,
--   <a>describeTags_resourceArns</a> - The Amazon Resource Names (ARN) of
--   the resources. You can specify up to 20 resources in a single call.
newDescribeTags :: DescribeTags

-- | <i>See:</i> <a>newDescribeTagsResponse</a> smart constructor.
data DescribeTagsResponse
DescribeTagsResponse' :: Maybe [TagDescription] -> Int -> DescribeTagsResponse

-- | Create a value of <a>DescribeTagsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tagDescriptions:DescribeTagsResponse'</a>,
--   <a>describeTagsResponse_tagDescriptions</a> - Information about the
--   tags.
--   
--   <a>$sel:httpStatus:DescribeTagsResponse'</a>,
--   <a>describeTagsResponse_httpStatus</a> - The response's http status
--   code.
newDescribeTagsResponse :: Int -> DescribeTagsResponse

-- | <i>See:</i> <a>newDeleteRule</a> smart constructor.
data DeleteRule
DeleteRule' :: Text -> DeleteRule

-- | Create a value of <a>DeleteRule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ruleArn:DeleteRule'</a>, <a>deleteRule_ruleArn</a> - The
--   Amazon Resource Name (ARN) of the rule.
newDeleteRule :: Text -> DeleteRule

-- | <i>See:</i> <a>newDeleteRuleResponse</a> smart constructor.
data DeleteRuleResponse
DeleteRuleResponse' :: Int -> DeleteRuleResponse

-- | Create a value of <a>DeleteRuleResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteRuleResponse'</a>,
--   <a>deleteRuleResponse_httpStatus</a> - The response's http status
--   code.
newDeleteRuleResponse :: Int -> DeleteRuleResponse

-- | <i>See:</i> <a>newRemoveTags</a> smart constructor.
data RemoveTags
RemoveTags' :: [Text] -> [Text] -> RemoveTags

-- | Create a value of <a>RemoveTags</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArns:RemoveTags'</a>, <a>removeTags_resourceArns</a> -
--   The Amazon Resource Name (ARN) of the resource.
--   
--   <a>$sel:tagKeys:RemoveTags'</a>, <a>removeTags_tagKeys</a> - The tag
--   keys for the tags to remove.
newRemoveTags :: RemoveTags

-- | <i>See:</i> <a>newRemoveTagsResponse</a> smart constructor.
data RemoveTagsResponse
RemoveTagsResponse' :: Int -> RemoveTagsResponse

-- | Create a value of <a>RemoveTagsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:RemoveTagsResponse'</a>,
--   <a>removeTagsResponse_httpStatus</a> - The response's http status
--   code.
newRemoveTagsResponse :: Int -> RemoveTagsResponse

-- | <i>See:</i> <a>newDeleteTargetGroup</a> smart constructor.
data DeleteTargetGroup
DeleteTargetGroup' :: Text -> DeleteTargetGroup

-- | Create a value of <a>DeleteTargetGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetGroupArn:DeleteTargetGroup'</a>,
--   <a>deleteTargetGroup_targetGroupArn</a> - The Amazon Resource Name
--   (ARN) of the target group.
newDeleteTargetGroup :: Text -> DeleteTargetGroup

-- | <i>See:</i> <a>newDeleteTargetGroupResponse</a> smart constructor.
data DeleteTargetGroupResponse
DeleteTargetGroupResponse' :: Int -> DeleteTargetGroupResponse

-- | Create a value of <a>DeleteTargetGroupResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteTargetGroupResponse'</a>,
--   <a>deleteTargetGroupResponse_httpStatus</a> - The response's http
--   status code.
newDeleteTargetGroupResponse :: Int -> DeleteTargetGroupResponse

-- | <i>See:</i> <a>newSetSubnets</a> smart constructor.
data SetSubnets
SetSubnets' :: Maybe [SubnetMapping] -> Maybe [Text] -> Maybe IpAddressType -> Text -> SetSubnets

-- | Create a value of <a>SetSubnets</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subnetMappings:SetSubnets'</a>,
--   <a>setSubnets_subnetMappings</a> - The IDs of the public subnets. You
--   can specify only one subnet per Availability Zone. You must specify
--   either subnets or subnet mappings.
--   
--   <ul>
--   <li><i>Application Load Balancers</i> You must specify subnets from at
--   least two Availability Zones. You cannot specify Elastic IP addresses
--   for your subnets.</li>
--   <li><i>Application Load Balancers on Outposts</i> You must specify one
--   Outpost subnet.</li>
--   <li><i>Application Load Balancers on Local Zones</i> You can specify
--   subnets from one or more Local Zones.</li>
--   <li><i>Network Load Balancers</i> You can specify subnets from one or
--   more Availability Zones. You can specify one Elastic IP address per
--   subnet if you need static IP addresses for your internet-facing load
--   balancer. For internal load balancers, you can specify one private IP
--   address per subnet from the IPv4 range of the subnet. For
--   internet-facing load balancer, you can specify one IPv6 address per
--   subnet.</li>
--   </ul>
--   
--   <a>$sel:subnets:SetSubnets'</a>, <a>setSubnets_subnets</a> - The IDs
--   of the public subnets. You can specify only one subnet per
--   Availability Zone. You must specify either subnets or subnet mappings.
--   
--   <ul>
--   <li><i>Application Load Balancers</i> You must specify subnets from at
--   least two Availability Zones.</li>
--   <li><i>Application Load Balancers on Outposts</i> You must specify one
--   Outpost subnet.</li>
--   <li><i>Application Load Balancers on Local Zones</i> You can specify
--   subnets from one or more Local Zones.</li>
--   <li><i>Network Load Balancers</i> You can specify subnets from one or
--   more Availability Zones.</li>
--   </ul>
--   
--   <a>$sel:ipAddressType:SetSubnets'</a>, <a>setSubnets_ipAddressType</a>
--   - [Network Load Balancers] The type of IP addresses used by the
--   subnets for your load balancer. The possible values are <tt>ipv4</tt>
--   (for IPv4 addresses) and <tt>dualstack</tt> (for IPv4 and IPv6
--   addresses). You can’t specify <tt>dualstack</tt> for a load balancer
--   with a UDP or TCP_UDP listener. Internal load balancers must use
--   <tt>ipv4</tt>.
--   
--   <a>$sel:loadBalancerArn:SetSubnets'</a>,
--   <a>setSubnets_loadBalancerArn</a> - The Amazon Resource Name (ARN) of
--   the load balancer.
newSetSubnets :: Text -> SetSubnets

-- | <i>See:</i> <a>newSetSubnetsResponse</a> smart constructor.
data SetSubnetsResponse
SetSubnetsResponse' :: Maybe [AvailabilityZone] -> Maybe IpAddressType -> Int -> SetSubnetsResponse

-- | Create a value of <a>SetSubnetsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:availabilityZones:SetSubnetsResponse'</a>,
--   <a>setSubnetsResponse_availabilityZones</a> - Information about the
--   subnets.
--   
--   <a>$sel:ipAddressType:SetSubnets'</a>,
--   <a>setSubnetsResponse_ipAddressType</a> - [Network Load Balancers] The
--   IP address type.
--   
--   <a>$sel:httpStatus:SetSubnetsResponse'</a>,
--   <a>setSubnetsResponse_httpStatus</a> - The response's http status
--   code.
newSetSubnetsResponse :: Int -> SetSubnetsResponse

-- | <i>See:</i> <a>newCreateRule</a> smart constructor.
data CreateRule
CreateRule' :: Maybe (NonEmpty Tag) -> Text -> [RuleCondition] -> Natural -> [Action] -> CreateRule

-- | Create a value of <a>CreateRule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:CreateRule'</a>, <a>createRule_tags</a> - The tags to
--   assign to the rule.
--   
--   <a>$sel:listenerArn:CreateRule'</a>, <a>createRule_listenerArn</a> -
--   The Amazon Resource Name (ARN) of the listener.
--   
--   <a>$sel:conditions:CreateRule'</a>, <a>createRule_conditions</a> - The
--   conditions.
--   
--   <a>$sel:priority:CreateRule'</a>, <a>createRule_priority</a> - The
--   rule priority. A listener can't have multiple rules with the same
--   priority.
--   
--   <a>$sel:actions:CreateRule'</a>, <a>createRule_actions</a> - The
--   actions.
newCreateRule :: Text -> Natural -> CreateRule

-- | <i>See:</i> <a>newCreateRuleResponse</a> smart constructor.
data CreateRuleResponse
CreateRuleResponse' :: Maybe [Rule] -> Int -> CreateRuleResponse

-- | Create a value of <a>CreateRuleResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:rules:CreateRuleResponse'</a>, <a>createRuleResponse_rules</a>
--   - Information about the rule.
--   
--   <a>$sel:httpStatus:CreateRuleResponse'</a>,
--   <a>createRuleResponse_httpStatus</a> - The response's http status
--   code.
newCreateRuleResponse :: Int -> CreateRuleResponse

-- | <i>See:</i> <a>newDescribeListenerCertificates</a> smart constructor.
data DescribeListenerCertificates
DescribeListenerCertificates' :: Maybe Text -> Maybe Natural -> Text -> DescribeListenerCertificates

-- | Create a value of <a>DescribeListenerCertificates</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:marker:DescribeListenerCertificates'</a>,
--   <a>describeListenerCertificates_marker</a> - The marker for the next
--   set of results. (You received this marker from a previous call.)
--   
--   <a>$sel:pageSize:DescribeListenerCertificates'</a>,
--   <a>describeListenerCertificates_pageSize</a> - The maximum number of
--   results to return with this call.
--   
--   <a>$sel:listenerArn:DescribeListenerCertificates'</a>,
--   <a>describeListenerCertificates_listenerArn</a> - The Amazon Resource
--   Names (ARN) of the listener.
newDescribeListenerCertificates :: Text -> DescribeListenerCertificates

-- | <i>See:</i> <a>newDescribeListenerCertificatesResponse</a> smart
--   constructor.
data DescribeListenerCertificatesResponse
DescribeListenerCertificatesResponse' :: Maybe [Certificate] -> Maybe Text -> Int -> DescribeListenerCertificatesResponse

-- | Create a value of <a>DescribeListenerCertificatesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:certificates:DescribeListenerCertificatesResponse'</a>,
--   <a>describeListenerCertificatesResponse_certificates</a> - Information
--   about the certificates.
--   
--   <a>$sel:nextMarker:DescribeListenerCertificatesResponse'</a>,
--   <a>describeListenerCertificatesResponse_nextMarker</a> - If there are
--   additional results, this is the marker for the next set of results.
--   Otherwise, this is null.
--   
--   <a>$sel:httpStatus:DescribeListenerCertificatesResponse'</a>,
--   <a>describeListenerCertificatesResponse_httpStatus</a> - The
--   response's http status code.
newDescribeListenerCertificatesResponse :: Int -> DescribeListenerCertificatesResponse

-- | <i>See:</i> <a>newSetSecurityGroups</a> smart constructor.
data SetSecurityGroups
SetSecurityGroups' :: Text -> [Text] -> SetSecurityGroups

-- | Create a value of <a>SetSecurityGroups</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:loadBalancerArn:SetSecurityGroups'</a>,
--   <a>setSecurityGroups_loadBalancerArn</a> - The Amazon Resource Name
--   (ARN) of the load balancer.
--   
--   <a>$sel:securityGroups:SetSecurityGroups'</a>,
--   <a>setSecurityGroups_securityGroups</a> - The IDs of the security
--   groups.
newSetSecurityGroups :: Text -> SetSecurityGroups

-- | <i>See:</i> <a>newSetSecurityGroupsResponse</a> smart constructor.
data SetSecurityGroupsResponse
SetSecurityGroupsResponse' :: Maybe [Text] -> Int -> SetSecurityGroupsResponse

-- | Create a value of <a>SetSecurityGroupsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityGroupIds:SetSecurityGroupsResponse'</a>,
--   <a>setSecurityGroupsResponse_securityGroupIds</a> - The IDs of the
--   security groups associated with the load balancer.
--   
--   <a>$sel:httpStatus:SetSecurityGroupsResponse'</a>,
--   <a>setSecurityGroupsResponse_httpStatus</a> - The response's http
--   status code.
newSetSecurityGroupsResponse :: Int -> SetSecurityGroupsResponse

-- | <i>See:</i> <a>newSetRulePriorities</a> smart constructor.
data SetRulePriorities
SetRulePriorities' :: [RulePriorityPair] -> SetRulePriorities

-- | Create a value of <a>SetRulePriorities</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:rulePriorities:SetRulePriorities'</a>,
--   <a>setRulePriorities_rulePriorities</a> - The rule priorities.
newSetRulePriorities :: SetRulePriorities

-- | <i>See:</i> <a>newSetRulePrioritiesResponse</a> smart constructor.
data SetRulePrioritiesResponse
SetRulePrioritiesResponse' :: Maybe [Rule] -> Int -> SetRulePrioritiesResponse

-- | Create a value of <a>SetRulePrioritiesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:rules:SetRulePrioritiesResponse'</a>,
--   <a>setRulePrioritiesResponse_rules</a> - Information about the rules.
--   
--   <a>$sel:httpStatus:SetRulePrioritiesResponse'</a>,
--   <a>setRulePrioritiesResponse_httpStatus</a> - The response's http
--   status code.
newSetRulePrioritiesResponse :: Int -> SetRulePrioritiesResponse

-- | <i>See:</i> <a>newDescribeTargetGroups</a> smart constructor.
data DescribeTargetGroups
DescribeTargetGroups' :: Maybe [Text] -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Natural -> DescribeTargetGroups

-- | Create a value of <a>DescribeTargetGroups</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetGroupArns:DescribeTargetGroups'</a>,
--   <a>describeTargetGroups_targetGroupArns</a> - The Amazon Resource
--   Names (ARN) of the target groups.
--   
--   <a>$sel:names:DescribeTargetGroups'</a>,
--   <a>describeTargetGroups_names</a> - The names of the target groups.
--   
--   <a>$sel:loadBalancerArn:DescribeTargetGroups'</a>,
--   <a>describeTargetGroups_loadBalancerArn</a> - The Amazon Resource Name
--   (ARN) of the load balancer.
--   
--   <a>$sel:marker:DescribeTargetGroups'</a>,
--   <a>describeTargetGroups_marker</a> - The marker for the next set of
--   results. (You received this marker from a previous call.)
--   
--   <a>$sel:pageSize:DescribeTargetGroups'</a>,
--   <a>describeTargetGroups_pageSize</a> - The maximum number of results
--   to return with this call.
newDescribeTargetGroups :: DescribeTargetGroups

-- | <i>See:</i> <a>newDescribeTargetGroupsResponse</a> smart constructor.
data DescribeTargetGroupsResponse
DescribeTargetGroupsResponse' :: Maybe Text -> Maybe [TargetGroup] -> Int -> DescribeTargetGroupsResponse

-- | Create a value of <a>DescribeTargetGroupsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextMarker:DescribeTargetGroupsResponse'</a>,
--   <a>describeTargetGroupsResponse_nextMarker</a> - If there are
--   additional results, this is the marker for the next set of results.
--   Otherwise, this is null.
--   
--   <a>$sel:targetGroups:DescribeTargetGroupsResponse'</a>,
--   <a>describeTargetGroupsResponse_targetGroups</a> - Information about
--   the target groups.
--   
--   <a>$sel:httpStatus:DescribeTargetGroupsResponse'</a>,
--   <a>describeTargetGroupsResponse_httpStatus</a> - The response's http
--   status code.
newDescribeTargetGroupsResponse :: Int -> DescribeTargetGroupsResponse

-- | <i>See:</i> <a>newDescribeRules</a> smart constructor.
data DescribeRules
DescribeRules' :: Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe Natural -> DescribeRules

-- | Create a value of <a>DescribeRules</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:listenerArn:DescribeRules'</a>,
--   <a>describeRules_listenerArn</a> - The Amazon Resource Name (ARN) of
--   the listener.
--   
--   <a>$sel:marker:DescribeRules'</a>, <a>describeRules_marker</a> - The
--   marker for the next set of results. (You received this marker from a
--   previous call.)
--   
--   <a>$sel:ruleArns:DescribeRules'</a>, <a>describeRules_ruleArns</a> -
--   The Amazon Resource Names (ARN) of the rules.
--   
--   <a>$sel:pageSize:DescribeRules'</a>, <a>describeRules_pageSize</a> -
--   The maximum number of results to return with this call.
newDescribeRules :: DescribeRules

-- | <i>See:</i> <a>newDescribeRulesResponse</a> smart constructor.
data DescribeRulesResponse
DescribeRulesResponse' :: Maybe [Rule] -> Maybe Text -> Int -> DescribeRulesResponse

-- | Create a value of <a>DescribeRulesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:rules:DescribeRulesResponse'</a>,
--   <a>describeRulesResponse_rules</a> - Information about the rules.
--   
--   <a>$sel:nextMarker:DescribeRulesResponse'</a>,
--   <a>describeRulesResponse_nextMarker</a> - If there are additional
--   results, this is the marker for the next set of results. Otherwise,
--   this is null.
--   
--   <a>$sel:httpStatus:DescribeRulesResponse'</a>,
--   <a>describeRulesResponse_httpStatus</a> - The response's http status
--   code.
newDescribeRulesResponse :: Int -> DescribeRulesResponse

-- | <i>See:</i> <a>newDeleteLoadBalancer</a> smart constructor.
data DeleteLoadBalancer
DeleteLoadBalancer' :: Text -> DeleteLoadBalancer

-- | Create a value of <a>DeleteLoadBalancer</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:loadBalancerArn:DeleteLoadBalancer'</a>,
--   <a>deleteLoadBalancer_loadBalancerArn</a> - The Amazon Resource Name
--   (ARN) of the load balancer.
newDeleteLoadBalancer :: Text -> DeleteLoadBalancer

-- | <i>See:</i> <a>newDeleteLoadBalancerResponse</a> smart constructor.
data DeleteLoadBalancerResponse
DeleteLoadBalancerResponse' :: Int -> DeleteLoadBalancerResponse

-- | Create a value of <a>DeleteLoadBalancerResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteLoadBalancerResponse'</a>,
--   <a>deleteLoadBalancerResponse_httpStatus</a> - The response's http
--   status code.
newDeleteLoadBalancerResponse :: Int -> DeleteLoadBalancerResponse

-- | <i>See:</i> <a>newRegisterTargets</a> smart constructor.
data RegisterTargets
RegisterTargets' :: Text -> [TargetDescription] -> RegisterTargets

-- | Create a value of <a>RegisterTargets</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetGroupArn:RegisterTargets'</a>,
--   <a>registerTargets_targetGroupArn</a> - The Amazon Resource Name (ARN)
--   of the target group.
--   
--   <a>$sel:targets:RegisterTargets'</a>, <a>registerTargets_targets</a> -
--   The targets.
newRegisterTargets :: Text -> RegisterTargets

-- | <i>See:</i> <a>newRegisterTargetsResponse</a> smart constructor.
data RegisterTargetsResponse
RegisterTargetsResponse' :: Int -> RegisterTargetsResponse

-- | Create a value of <a>RegisterTargetsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:RegisterTargetsResponse'</a>,
--   <a>registerTargetsResponse_httpStatus</a> - The response's http status
--   code.
newRegisterTargetsResponse :: Int -> RegisterTargetsResponse

-- | <i>See:</i> <a>newModifyListener</a> smart constructor.
data ModifyListener
ModifyListener' :: Maybe Text -> Maybe ProtocolEnum -> Maybe [Action] -> Maybe [Certificate] -> Maybe [Text] -> Maybe Natural -> Text -> ModifyListener

-- | Create a value of <a>ModifyListener</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sslPolicy:ModifyListener'</a>, <a>modifyListener_sslPolicy</a>
--   - [HTTPS and TLS listeners] The security policy that defines which
--   protocols and ciphers are supported.
--   
--   For more information, see <a>Security policies</a> in the
--   <i>Application Load Balancers Guide</i> or <a>Security policies</a> in
--   the <i>Network Load Balancers Guide</i>.
--   
--   <a>$sel:protocol:ModifyListener'</a>, <a>modifyListener_protocol</a> -
--   The protocol for connections from clients to the load balancer.
--   Application Load Balancers support the HTTP and HTTPS protocols.
--   Network Load Balancers support the TCP, TLS, UDP, and TCP_UDP
--   protocols. You can’t change the protocol to UDP or TCP_UDP if
--   dual-stack mode is enabled. You cannot specify a protocol for a
--   Gateway Load Balancer.
--   
--   <a>$sel:defaultActions:ModifyListener'</a>,
--   <a>modifyListener_defaultActions</a> - The actions for the default
--   rule.
--   
--   <a>$sel:certificates:ModifyListener'</a>,
--   <a>modifyListener_certificates</a> - [HTTPS and TLS listeners] The
--   default certificate for the listener. You must provide exactly one
--   certificate. Set <tt>CertificateArn</tt> to the certificate ARN but do
--   not set <tt>IsDefault</tt>.
--   
--   <a>$sel:alpnPolicy:ModifyListener'</a>,
--   <a>modifyListener_alpnPolicy</a> - [TLS listeners] The name of the
--   Application-Layer Protocol Negotiation (ALPN) policy. You can specify
--   one policy name. The following are the possible values:
--   
--   <ul>
--   <li><pre>HTTP1Only</pre></li>
--   <li><pre>HTTP2Only</pre></li>
--   <li><pre>HTTP2Optional</pre></li>
--   <li><pre>HTTP2Preferred</pre></li>
--   <li><pre>None</pre></li>
--   </ul>
--   
--   For more information, see <a>ALPN policies</a> in the <i>Network Load
--   Balancers Guide</i>.
--   
--   <a>$sel:port:ModifyListener'</a>, <a>modifyListener_port</a> - The
--   port for connections from clients to the load balancer. You cannot
--   specify a port for a Gateway Load Balancer.
--   
--   <a>$sel:listenerArn:ModifyListener'</a>,
--   <a>modifyListener_listenerArn</a> - The Amazon Resource Name (ARN) of
--   the listener.
newModifyListener :: Text -> ModifyListener

-- | <i>See:</i> <a>newModifyListenerResponse</a> smart constructor.
data ModifyListenerResponse
ModifyListenerResponse' :: Maybe [Listener] -> Int -> ModifyListenerResponse

-- | Create a value of <a>ModifyListenerResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:listeners:ModifyListenerResponse'</a>,
--   <a>modifyListenerResponse_listeners</a> - Information about the
--   modified listener.
--   
--   <a>$sel:httpStatus:ModifyListenerResponse'</a>,
--   <a>modifyListenerResponse_httpStatus</a> - The response's http status
--   code.
newModifyListenerResponse :: Int -> ModifyListenerResponse

-- | <i>See:</i> <a>newModifyTargetGroup</a> smart constructor.
data ModifyTargetGroup
ModifyTargetGroup' :: Maybe Matcher -> Maybe Text -> Maybe Bool -> Maybe Natural -> Maybe Natural -> Maybe Natural -> Maybe ProtocolEnum -> Maybe Natural -> Maybe Text -> Text -> ModifyTargetGroup

-- | Create a value of <a>ModifyTargetGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:matcher:ModifyTargetGroup'</a>,
--   <a>modifyTargetGroup_matcher</a> - [HTTP/HTTPS health checks] The HTTP
--   or gRPC codes to use when checking for a successful response from a
--   target.
--   
--   With Network Load Balancers, you can't modify this setting.
--   
--   <a>$sel:healthCheckPath:ModifyTargetGroup'</a>,
--   <a>modifyTargetGroup_healthCheckPath</a> - [HTTP/HTTPS health checks]
--   The destination for health checks on the targets.
--   
--   <ul>
--   <li><i>HTTP1 or HTTP2 protocol version</i> The ping path. The default
--   is /.</li>
--   <li><i>GRPC protocol version</i> The path of a custom health check
--   method with the format /package.service/method. The default is /Amazon
--   Web Services.ALB/healthcheck.</li>
--   </ul>
--   
--   <a>$sel:healthCheckEnabled:ModifyTargetGroup'</a>,
--   <a>modifyTargetGroup_healthCheckEnabled</a> - Indicates whether health
--   checks are enabled.
--   
--   <a>$sel:unhealthyThresholdCount:ModifyTargetGroup'</a>,
--   <a>modifyTargetGroup_unhealthyThresholdCount</a> - The number of
--   consecutive health check failures required before considering the
--   target unhealthy. For target groups with a protocol of TCP or TLS,
--   this value must be the same as the healthy threshold count.
--   
--   <a>$sel:healthCheckIntervalSeconds:ModifyTargetGroup'</a>,
--   <a>modifyTargetGroup_healthCheckIntervalSeconds</a> - The approximate
--   amount of time, in seconds, between health checks of an individual
--   target. For TCP health checks, the supported values are 10 or 30
--   seconds.
--   
--   With Network Load Balancers, you can't modify this setting.
--   
--   <a>$sel:healthyThresholdCount:ModifyTargetGroup'</a>,
--   <a>modifyTargetGroup_healthyThresholdCount</a> - The number of
--   consecutive health checks successes required before considering an
--   unhealthy target healthy.
--   
--   <a>$sel:healthCheckProtocol:ModifyTargetGroup'</a>,
--   <a>modifyTargetGroup_healthCheckProtocol</a> - The protocol the load
--   balancer uses when performing health checks on targets. For
--   Application Load Balancers, the default is HTTP. For Network Load
--   Balancers and Gateway Load Balancers, the default is TCP. The TCP
--   protocol is not supported for health checks if the protocol of the
--   target group is HTTP or HTTPS. It is supported for health checks only
--   if the protocol of the target group is TCP, TLS, UDP, or TCP_UDP. The
--   GENEVE, TLS, UDP, and TCP_UDP protocols are not supported for health
--   checks.
--   
--   With Network Load Balancers, you can't modify this setting.
--   
--   <a>$sel:healthCheckTimeoutSeconds:ModifyTargetGroup'</a>,
--   <a>modifyTargetGroup_healthCheckTimeoutSeconds</a> - [HTTP/HTTPS
--   health checks] The amount of time, in seconds, during which no
--   response means a failed health check.
--   
--   With Network Load Balancers, you can't modify this setting.
--   
--   <a>$sel:healthCheckPort:ModifyTargetGroup'</a>,
--   <a>modifyTargetGroup_healthCheckPort</a> - The port the load balancer
--   uses when performing health checks on targets.
--   
--   <a>$sel:targetGroupArn:ModifyTargetGroup'</a>,
--   <a>modifyTargetGroup_targetGroupArn</a> - The Amazon Resource Name
--   (ARN) of the target group.
newModifyTargetGroup :: Text -> ModifyTargetGroup

-- | <i>See:</i> <a>newModifyTargetGroupResponse</a> smart constructor.
data ModifyTargetGroupResponse
ModifyTargetGroupResponse' :: Maybe [TargetGroup] -> Int -> ModifyTargetGroupResponse

-- | Create a value of <a>ModifyTargetGroupResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetGroups:ModifyTargetGroupResponse'</a>,
--   <a>modifyTargetGroupResponse_targetGroups</a> - Information about the
--   modified target group.
--   
--   <a>$sel:httpStatus:ModifyTargetGroupResponse'</a>,
--   <a>modifyTargetGroupResponse_httpStatus</a> - The response's http
--   status code.
newModifyTargetGroupResponse :: Int -> ModifyTargetGroupResponse

-- | <i>See:</i> <a>newModifyTargetGroupAttributes</a> smart constructor.
data ModifyTargetGroupAttributes
ModifyTargetGroupAttributes' :: Text -> [TargetGroupAttribute] -> ModifyTargetGroupAttributes

-- | Create a value of <a>ModifyTargetGroupAttributes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetGroupArn:ModifyTargetGroupAttributes'</a>,
--   <a>modifyTargetGroupAttributes_targetGroupArn</a> - The Amazon
--   Resource Name (ARN) of the target group.
--   
--   <a>$sel:attributes:ModifyTargetGroupAttributes'</a>,
--   <a>modifyTargetGroupAttributes_attributes</a> - The attributes.
newModifyTargetGroupAttributes :: Text -> ModifyTargetGroupAttributes

-- | <i>See:</i> <a>newModifyTargetGroupAttributesResponse</a> smart
--   constructor.
data ModifyTargetGroupAttributesResponse
ModifyTargetGroupAttributesResponse' :: Maybe [TargetGroupAttribute] -> Int -> ModifyTargetGroupAttributesResponse

-- | Create a value of <a>ModifyTargetGroupAttributesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributes:ModifyTargetGroupAttributes'</a>,
--   <a>modifyTargetGroupAttributesResponse_attributes</a> - Information
--   about the attributes.
--   
--   <a>$sel:httpStatus:ModifyTargetGroupAttributesResponse'</a>,
--   <a>modifyTargetGroupAttributesResponse_httpStatus</a> - The response's
--   http status code.
newModifyTargetGroupAttributesResponse :: Int -> ModifyTargetGroupAttributesResponse

-- | <i>See:</i> <a>newDescribeTargetGroupAttributes</a> smart constructor.
data DescribeTargetGroupAttributes
DescribeTargetGroupAttributes' :: Text -> DescribeTargetGroupAttributes

-- | Create a value of <a>DescribeTargetGroupAttributes</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetGroupArn:DescribeTargetGroupAttributes'</a>,
--   <a>describeTargetGroupAttributes_targetGroupArn</a> - The Amazon
--   Resource Name (ARN) of the target group.
newDescribeTargetGroupAttributes :: Text -> DescribeTargetGroupAttributes

-- | <i>See:</i> <a>newDescribeTargetGroupAttributesResponse</a> smart
--   constructor.
data DescribeTargetGroupAttributesResponse
DescribeTargetGroupAttributesResponse' :: Maybe [TargetGroupAttribute] -> Int -> DescribeTargetGroupAttributesResponse

-- | Create a value of <a>DescribeTargetGroupAttributesResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributes:DescribeTargetGroupAttributesResponse'</a>,
--   <a>describeTargetGroupAttributesResponse_attributes</a> - Information
--   about the target group attributes
--   
--   <a>$sel:httpStatus:DescribeTargetGroupAttributesResponse'</a>,
--   <a>describeTargetGroupAttributesResponse_httpStatus</a> - The
--   response's http status code.
newDescribeTargetGroupAttributesResponse :: Int -> DescribeTargetGroupAttributesResponse

-- | <i>See:</i> <a>newDeleteListener</a> smart constructor.
data DeleteListener
DeleteListener' :: Text -> DeleteListener

-- | Create a value of <a>DeleteListener</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:listenerArn:DeleteListener'</a>,
--   <a>deleteListener_listenerArn</a> - The Amazon Resource Name (ARN) of
--   the listener.
newDeleteListener :: Text -> DeleteListener

-- | <i>See:</i> <a>newDeleteListenerResponse</a> smart constructor.
data DeleteListenerResponse
DeleteListenerResponse' :: Int -> DeleteListenerResponse

-- | Create a value of <a>DeleteListenerResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteListenerResponse'</a>,
--   <a>deleteListenerResponse_httpStatus</a> - The response's http status
--   code.
newDeleteListenerResponse :: Int -> DeleteListenerResponse

-- | <i>See:</i> <a>newDescribeSSLPolicies</a> smart constructor.
data DescribeSSLPolicies
DescribeSSLPolicies' :: Maybe LoadBalancerTypeEnum -> Maybe [Text] -> Maybe Text -> Maybe Natural -> DescribeSSLPolicies

-- | Create a value of <a>DescribeSSLPolicies</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:loadBalancerType:DescribeSSLPolicies'</a>,
--   <a>describeSSLPolicies_loadBalancerType</a> - The type of load
--   balancer. The default lists the SSL policies for all load balancers.
--   
--   <a>$sel:names:DescribeSSLPolicies'</a>,
--   <a>describeSSLPolicies_names</a> - The names of the policies.
--   
--   <a>$sel:marker:DescribeSSLPolicies'</a>,
--   <a>describeSSLPolicies_marker</a> - The marker for the next set of
--   results. (You received this marker from a previous call.)
--   
--   <a>$sel:pageSize:DescribeSSLPolicies'</a>,
--   <a>describeSSLPolicies_pageSize</a> - The maximum number of results to
--   return with this call.
newDescribeSSLPolicies :: DescribeSSLPolicies

-- | <i>See:</i> <a>newDescribeSSLPoliciesResponse</a> smart constructor.
data DescribeSSLPoliciesResponse
DescribeSSLPoliciesResponse' :: Maybe [SslPolicy] -> Maybe Text -> Int -> DescribeSSLPoliciesResponse

-- | Create a value of <a>DescribeSSLPoliciesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sslPolicies:DescribeSSLPoliciesResponse'</a>,
--   <a>describeSSLPoliciesResponse_sslPolicies</a> - Information about the
--   security policies.
--   
--   <a>$sel:nextMarker:DescribeSSLPoliciesResponse'</a>,
--   <a>describeSSLPoliciesResponse_nextMarker</a> - If there are
--   additional results, this is the marker for the next set of results.
--   Otherwise, this is null.
--   
--   <a>$sel:httpStatus:DescribeSSLPoliciesResponse'</a>,
--   <a>describeSSLPoliciesResponse_httpStatus</a> - The response's http
--   status code.
newDescribeSSLPoliciesResponse :: Int -> DescribeSSLPoliciesResponse

-- | <i>See:</i> <a>newDescribeAccountLimits</a> smart constructor.
data DescribeAccountLimits
DescribeAccountLimits' :: Maybe Text -> Maybe Natural -> DescribeAccountLimits

-- | Create a value of <a>DescribeAccountLimits</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:marker:DescribeAccountLimits'</a>,
--   <a>describeAccountLimits_marker</a> - The marker for the next set of
--   results. (You received this marker from a previous call.)
--   
--   <a>$sel:pageSize:DescribeAccountLimits'</a>,
--   <a>describeAccountLimits_pageSize</a> - The maximum number of results
--   to return with this call.
newDescribeAccountLimits :: DescribeAccountLimits

-- | <i>See:</i> <a>newDescribeAccountLimitsResponse</a> smart constructor.
data DescribeAccountLimitsResponse
DescribeAccountLimitsResponse' :: Maybe [Limit] -> Maybe Text -> Int -> DescribeAccountLimitsResponse

-- | Create a value of <a>DescribeAccountLimitsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:limits:DescribeAccountLimitsResponse'</a>,
--   <a>describeAccountLimitsResponse_limits</a> - Information about the
--   limits.
--   
--   <a>$sel:nextMarker:DescribeAccountLimitsResponse'</a>,
--   <a>describeAccountLimitsResponse_nextMarker</a> - If there are
--   additional results, this is the marker for the next set of results.
--   Otherwise, this is null.
--   
--   <a>$sel:httpStatus:DescribeAccountLimitsResponse'</a>,
--   <a>describeAccountLimitsResponse_httpStatus</a> - The response's http
--   status code.
newDescribeAccountLimitsResponse :: Int -> DescribeAccountLimitsResponse

-- | <i>See:</i> <a>newDeregisterTargets</a> smart constructor.
data DeregisterTargets
DeregisterTargets' :: Text -> [TargetDescription] -> DeregisterTargets

-- | Create a value of <a>DeregisterTargets</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetGroupArn:DeregisterTargets'</a>,
--   <a>deregisterTargets_targetGroupArn</a> - The Amazon Resource Name
--   (ARN) of the target group.
--   
--   <a>$sel:targets:DeregisterTargets'</a>,
--   <a>deregisterTargets_targets</a> - The targets. If you specified a
--   port override when you registered a target, you must specify both the
--   target ID and the port when you deregister it.
newDeregisterTargets :: Text -> DeregisterTargets

-- | <i>See:</i> <a>newDeregisterTargetsResponse</a> smart constructor.
data DeregisterTargetsResponse
DeregisterTargetsResponse' :: Int -> DeregisterTargetsResponse

-- | Create a value of <a>DeregisterTargetsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeregisterTargetsResponse'</a>,
--   <a>deregisterTargetsResponse_httpStatus</a> - The response's http
--   status code.
newDeregisterTargetsResponse :: Int -> DeregisterTargetsResponse

-- | <i>See:</i> <a>newCreateListener</a> smart constructor.
data CreateListener
CreateListener' :: Maybe Text -> Maybe ProtocolEnum -> Maybe [Certificate] -> Maybe [Text] -> Maybe (NonEmpty Tag) -> Maybe Natural -> Text -> [Action] -> CreateListener

-- | Create a value of <a>CreateListener</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sslPolicy:CreateListener'</a>, <a>createListener_sslPolicy</a>
--   - [HTTPS and TLS listeners] The security policy that defines which
--   protocols and ciphers are supported.
--   
--   For more information, see <a>Security policies</a> in the
--   <i>Application Load Balancers Guide</i> and <a>Security policies</a>
--   in the <i>Network Load Balancers Guide</i>.
--   
--   <a>$sel:protocol:CreateListener'</a>, <a>createListener_protocol</a> -
--   The protocol for connections from clients to the load balancer. For
--   Application Load Balancers, the supported protocols are HTTP and
--   HTTPS. For Network Load Balancers, the supported protocols are TCP,
--   TLS, UDP, and TCP_UDP. You can’t specify the UDP or TCP_UDP protocol
--   if dual-stack mode is enabled. You cannot specify a protocol for a
--   Gateway Load Balancer.
--   
--   <a>$sel:certificates:CreateListener'</a>,
--   <a>createListener_certificates</a> - [HTTPS and TLS listeners] The
--   default certificate for the listener. You must provide exactly one
--   certificate. Set <tt>CertificateArn</tt> to the certificate ARN but do
--   not set <tt>IsDefault</tt>.
--   
--   <a>$sel:alpnPolicy:CreateListener'</a>,
--   <a>createListener_alpnPolicy</a> - [TLS listeners] The name of the
--   Application-Layer Protocol Negotiation (ALPN) policy. You can specify
--   one policy name. The following are the possible values:
--   
--   <ul>
--   <li><pre>HTTP1Only</pre></li>
--   <li><pre>HTTP2Only</pre></li>
--   <li><pre>HTTP2Optional</pre></li>
--   <li><pre>HTTP2Preferred</pre></li>
--   <li><pre>None</pre></li>
--   </ul>
--   
--   For more information, see <a>ALPN policies</a> in the <i>Network Load
--   Balancers Guide</i>.
--   
--   <a>$sel:tags:CreateListener'</a>, <a>createListener_tags</a> - The
--   tags to assign to the listener.
--   
--   <a>$sel:port:CreateListener'</a>, <a>createListener_port</a> - The
--   port on which the load balancer is listening. You cannot specify a
--   port for a Gateway Load Balancer.
--   
--   <a>$sel:loadBalancerArn:CreateListener'</a>,
--   <a>createListener_loadBalancerArn</a> - The Amazon Resource Name (ARN)
--   of the load balancer.
--   
--   <a>$sel:defaultActions:CreateListener'</a>,
--   <a>createListener_defaultActions</a> - The actions for the default
--   rule.
newCreateListener :: Text -> CreateListener

-- | <i>See:</i> <a>newCreateListenerResponse</a> smart constructor.
data CreateListenerResponse
CreateListenerResponse' :: Maybe [Listener] -> Int -> CreateListenerResponse

-- | Create a value of <a>CreateListenerResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:listeners:CreateListenerResponse'</a>,
--   <a>createListenerResponse_listeners</a> - Information about the
--   listener.
--   
--   <a>$sel:httpStatus:CreateListenerResponse'</a>,
--   <a>createListenerResponse_httpStatus</a> - The response's http status
--   code.
newCreateListenerResponse :: Int -> CreateListenerResponse

-- | <i>See:</i> <a>newCreateTargetGroup</a> smart constructor.
data CreateTargetGroup
CreateTargetGroup' :: Maybe Text -> Maybe Matcher -> Maybe Text -> Maybe Bool -> Maybe Natural -> Maybe Text -> Maybe ProtocolEnum -> Maybe Natural -> Maybe TargetTypeEnum -> Maybe Natural -> Maybe ProtocolEnum -> Maybe TargetGroupIpAddressTypeEnum -> Maybe Natural -> Maybe Text -> Maybe (NonEmpty Tag) -> Maybe Natural -> Text -> CreateTargetGroup

-- | Create a value of <a>CreateTargetGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:protocolVersion:CreateTargetGroup'</a>,
--   <a>createTargetGroup_protocolVersion</a> - [HTTP/HTTPS protocol] The
--   protocol version. Specify <tt>GRPC</tt> to send requests to targets
--   using gRPC. Specify <tt>HTTP2</tt> to send requests to targets using
--   HTTP/2. The default is <tt>HTTP1</tt>, which sends requests to targets
--   using HTTP/1.1.
--   
--   <a>$sel:matcher:CreateTargetGroup'</a>,
--   <a>createTargetGroup_matcher</a> - [HTTP/HTTPS health checks] The HTTP
--   or gRPC codes to use when checking for a successful response from a
--   target.
--   
--   <a>$sel:healthCheckPath:CreateTargetGroup'</a>,
--   <a>createTargetGroup_healthCheckPath</a> - [HTTP/HTTPS health checks]
--   The destination for health checks on the targets.
--   
--   <ul>
--   <li><i>HTTP1 or HTTP2 protocol version</i> The ping path. The default
--   is /.</li>
--   <li><i>GRPC protocol version</i> The path of a custom health check
--   method with the format /package.service/method. The default is /Amazon
--   Web Services.ALB/healthcheck.</li>
--   </ul>
--   
--   <a>$sel:healthCheckEnabled:CreateTargetGroup'</a>,
--   <a>createTargetGroup_healthCheckEnabled</a> - Indicates whether health
--   checks are enabled. If the target type is <tt>lambda</tt>, health
--   checks are disabled by default but can be enabled. If the target type
--   is <tt>instance</tt>, <tt>ip</tt>, or <tt>alb</tt>, health checks are
--   always enabled and cannot be disabled.
--   
--   <a>$sel:unhealthyThresholdCount:CreateTargetGroup'</a>,
--   <a>createTargetGroup_unhealthyThresholdCount</a> - The number of
--   consecutive health check failures required before considering a target
--   unhealthy. If the target group protocol is HTTP or HTTPS, the default
--   is 2. If the target group protocol is TCP or TLS, this value must be
--   the same as the healthy threshold count. If the target group protocol
--   is GENEVE, the default is 3. If the target type is <tt>lambda</tt>,
--   the default is 2.
--   
--   <a>$sel:vpcId:CreateTargetGroup'</a>, <a>createTargetGroup_vpcId</a> -
--   The identifier of the virtual private cloud (VPC). If the target is a
--   Lambda function, this parameter does not apply. Otherwise, this
--   parameter is required.
--   
--   <a>$sel:protocol:CreateTargetGroup'</a>,
--   <a>createTargetGroup_protocol</a> - The protocol to use for routing
--   traffic to the targets. For Application Load Balancers, the supported
--   protocols are HTTP and HTTPS. For Network Load Balancers, the
--   supported protocols are TCP, TLS, UDP, or TCP_UDP. For Gateway Load
--   Balancers, the supported protocol is GENEVE. A TCP_UDP listener must
--   be associated with a TCP_UDP target group. If the target is a Lambda
--   function, this parameter does not apply.
--   
--   <a>$sel:healthCheckIntervalSeconds:CreateTargetGroup'</a>,
--   <a>createTargetGroup_healthCheckIntervalSeconds</a> - The approximate
--   amount of time, in seconds, between health checks of an individual
--   target. If the target group protocol is TCP, TLS, UDP, or TCP_UDP, the
--   supported values are 10 and 30 seconds. If the target group protocol
--   is HTTP or HTTPS, the default is 30 seconds. If the target group
--   protocol is GENEVE, the default is 10 seconds. If the target type is
--   <tt>lambda</tt>, the default is 35 seconds.
--   
--   <a>$sel:targetType:CreateTargetGroup'</a>,
--   <a>createTargetGroup_targetType</a> - The type of target that you must
--   specify when registering targets with this target group. You can't
--   specify targets for a target group using more than one target type.
--   
--   <ul>
--   <li><tt>instance</tt> - Register targets by instance ID. This is the
--   default value.</li>
--   <li><tt>ip</tt> - Register targets by IP address. You can specify IP
--   addresses from the subnets of the virtual private cloud (VPC) for the
--   target group, the RFC 1918 range (10.0.0.0/8, 172.16.0.0/12, and
--   192.168.0.0/16), and the RFC 6598 range (100.64.0.0/10). You can't
--   specify publicly routable IP addresses.</li>
--   <li><tt>lambda</tt> - Register a single Lambda function as a
--   target.</li>
--   <li><tt>alb</tt> - Register a single Application Load Balancer as a
--   target.</li>
--   </ul>
--   
--   <a>$sel:healthyThresholdCount:CreateTargetGroup'</a>,
--   <a>createTargetGroup_healthyThresholdCount</a> - The number of
--   consecutive health checks successes required before considering an
--   unhealthy target healthy. For target groups with a protocol of HTTP or
--   HTTPS, the default is 5. For target groups with a protocol of TCP,
--   TLS, or GENEVE, the default is 3. If the target type is
--   <tt>lambda</tt>, the default is 5.
--   
--   <a>$sel:healthCheckProtocol:CreateTargetGroup'</a>,
--   <a>createTargetGroup_healthCheckProtocol</a> - The protocol the load
--   balancer uses when performing health checks on targets. For
--   Application Load Balancers, the default is HTTP. For Network Load
--   Balancers and Gateway Load Balancers, the default is TCP. The TCP
--   protocol is not supported for health checks if the protocol of the
--   target group is HTTP or HTTPS. The GENEVE, TLS, UDP, and TCP_UDP
--   protocols are not supported for health checks.
--   
--   <a>$sel:ipAddressType:CreateTargetGroup'</a>,
--   <a>createTargetGroup_ipAddressType</a> - The type of IP address used
--   for this target group. The possible values are <tt>ipv4</tt> and
--   <tt>ipv6</tt>. This is an optional parameter. If not specified, the IP
--   address type defaults to <tt>ipv4</tt>.
--   
--   <a>$sel:healthCheckTimeoutSeconds:CreateTargetGroup'</a>,
--   <a>createTargetGroup_healthCheckTimeoutSeconds</a> - The amount of
--   time, in seconds, during which no response from a target means a
--   failed health check. For target groups with a protocol of HTTP, HTTPS,
--   or GENEVE, the default is 5 seconds. For target groups with a protocol
--   of TCP or TLS, this value must be 6 seconds for HTTP health checks and
--   10 seconds for TCP and HTTPS health checks. If the target type is
--   <tt>lambda</tt>, the default is 30 seconds.
--   
--   <a>$sel:healthCheckPort:CreateTargetGroup'</a>,
--   <a>createTargetGroup_healthCheckPort</a> - The port the load balancer
--   uses when performing health checks on targets. If the protocol is
--   HTTP, HTTPS, TCP, TLS, UDP, or TCP_UDP, the default is
--   <tt>traffic-port</tt>, which is the port on which each target receives
--   traffic from the load balancer. If the protocol is GENEVE, the default
--   is port 80.
--   
--   <a>$sel:tags:CreateTargetGroup'</a>, <a>createTargetGroup_tags</a> -
--   The tags to assign to the target group.
--   
--   <a>$sel:port:CreateTargetGroup'</a>, <a>createTargetGroup_port</a> -
--   The port on which the targets receive traffic. This port is used
--   unless you specify a port override when registering the target. If the
--   target is a Lambda function, this parameter does not apply. If the
--   protocol is GENEVE, the supported port is 6081.
--   
--   <a>$sel:name:CreateTargetGroup'</a>, <a>createTargetGroup_name</a> -
--   The name of the target group.
--   
--   This name must be unique per region per account, can have a maximum of
--   32 characters, must contain only alphanumeric characters or hyphens,
--   and must not begin or end with a hyphen.
newCreateTargetGroup :: Text -> CreateTargetGroup

-- | <i>See:</i> <a>newCreateTargetGroupResponse</a> smart constructor.
data CreateTargetGroupResponse
CreateTargetGroupResponse' :: Maybe [TargetGroup] -> Int -> CreateTargetGroupResponse

-- | Create a value of <a>CreateTargetGroupResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetGroups:CreateTargetGroupResponse'</a>,
--   <a>createTargetGroupResponse_targetGroups</a> - Information about the
--   target group.
--   
--   <a>$sel:httpStatus:CreateTargetGroupResponse'</a>,
--   <a>createTargetGroupResponse_httpStatus</a> - The response's http
--   status code.
newCreateTargetGroupResponse :: Int -> CreateTargetGroupResponse

-- | <i>See:</i> <a>newModifyLoadBalancerAttributes</a> smart constructor.
data ModifyLoadBalancerAttributes
ModifyLoadBalancerAttributes' :: Text -> [LoadBalancerAttribute] -> ModifyLoadBalancerAttributes

-- | Create a value of <a>ModifyLoadBalancerAttributes</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:loadBalancerArn:ModifyLoadBalancerAttributes'</a>,
--   <a>modifyLoadBalancerAttributes_loadBalancerArn</a> - The Amazon
--   Resource Name (ARN) of the load balancer.
--   
--   <a>$sel:attributes:ModifyLoadBalancerAttributes'</a>,
--   <a>modifyLoadBalancerAttributes_attributes</a> - The load balancer
--   attributes.
newModifyLoadBalancerAttributes :: Text -> ModifyLoadBalancerAttributes

-- | <i>See:</i> <a>newModifyLoadBalancerAttributesResponse</a> smart
--   constructor.
data ModifyLoadBalancerAttributesResponse
ModifyLoadBalancerAttributesResponse' :: Maybe [LoadBalancerAttribute] -> Int -> ModifyLoadBalancerAttributesResponse

-- | Create a value of <a>ModifyLoadBalancerAttributesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributes:ModifyLoadBalancerAttributes'</a>,
--   <a>modifyLoadBalancerAttributesResponse_attributes</a> - Information
--   about the load balancer attributes.
--   
--   <a>$sel:httpStatus:ModifyLoadBalancerAttributesResponse'</a>,
--   <a>modifyLoadBalancerAttributesResponse_httpStatus</a> - The
--   response's http status code.
newModifyLoadBalancerAttributesResponse :: Int -> ModifyLoadBalancerAttributesResponse

-- | <i>See:</i> <a>newSetIpAddressType</a> smart constructor.
data SetIpAddressType
SetIpAddressType' :: Text -> IpAddressType -> SetIpAddressType

-- | Create a value of <a>SetIpAddressType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:loadBalancerArn:SetIpAddressType'</a>,
--   <a>setIpAddressType_loadBalancerArn</a> - The Amazon Resource Name
--   (ARN) of the load balancer.
--   
--   <a>$sel:ipAddressType:SetIpAddressType'</a>,
--   <a>setIpAddressType_ipAddressType</a> - The IP address type. The
--   possible values are <tt>ipv4</tt> (for IPv4 addresses) and
--   <tt>dualstack</tt> (for IPv4 and IPv6 addresses). Internal load
--   balancers must use <tt>ipv4</tt>. You can’t specify <tt>dualstack</tt>
--   for a load balancer with a UDP or TCP_UDP listener.
newSetIpAddressType :: Text -> IpAddressType -> SetIpAddressType

-- | <i>See:</i> <a>newSetIpAddressTypeResponse</a> smart constructor.
data SetIpAddressTypeResponse
SetIpAddressTypeResponse' :: Maybe IpAddressType -> Int -> SetIpAddressTypeResponse

-- | Create a value of <a>SetIpAddressTypeResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ipAddressType:SetIpAddressType'</a>,
--   <a>setIpAddressTypeResponse_ipAddressType</a> - The IP address type.
--   
--   <a>$sel:httpStatus:SetIpAddressTypeResponse'</a>,
--   <a>setIpAddressTypeResponse_httpStatus</a> - The response's http
--   status code.
newSetIpAddressTypeResponse :: Int -> SetIpAddressTypeResponse

-- | <i>See:</i> <a>newAddTags</a> smart constructor.
data AddTags
AddTags' :: [Text] -> NonEmpty Tag -> AddTags

-- | Create a value of <a>AddTags</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArns:AddTags'</a>, <a>addTags_resourceArns</a> - The
--   Amazon Resource Name (ARN) of the resource.
--   
--   <a>$sel:tags:AddTags'</a>, <a>addTags_tags</a> - The tags.
newAddTags :: NonEmpty Tag -> AddTags

-- | <i>See:</i> <a>newAddTagsResponse</a> smart constructor.
data AddTagsResponse
AddTagsResponse' :: Int -> AddTagsResponse

-- | Create a value of <a>AddTagsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:AddTagsResponse'</a>,
--   <a>addTagsResponse_httpStatus</a> - The response's http status code.
newAddTagsResponse :: Int -> AddTagsResponse

-- | <i>See:</i> <a>newDescribeLoadBalancerAttributes</a> smart
--   constructor.
data DescribeLoadBalancerAttributes
DescribeLoadBalancerAttributes' :: Text -> DescribeLoadBalancerAttributes

-- | Create a value of <a>DescribeLoadBalancerAttributes</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:loadBalancerArn:DescribeLoadBalancerAttributes'</a>,
--   <a>describeLoadBalancerAttributes_loadBalancerArn</a> - The Amazon
--   Resource Name (ARN) of the load balancer.
newDescribeLoadBalancerAttributes :: Text -> DescribeLoadBalancerAttributes

-- | <i>See:</i> <a>newDescribeLoadBalancerAttributesResponse</a> smart
--   constructor.
data DescribeLoadBalancerAttributesResponse
DescribeLoadBalancerAttributesResponse' :: Maybe [LoadBalancerAttribute] -> Int -> DescribeLoadBalancerAttributesResponse

-- | Create a value of <a>DescribeLoadBalancerAttributesResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributes:DescribeLoadBalancerAttributesResponse'</a>,
--   <a>describeLoadBalancerAttributesResponse_attributes</a> - Information
--   about the load balancer attributes.
--   
--   <a>$sel:httpStatus:DescribeLoadBalancerAttributesResponse'</a>,
--   <a>describeLoadBalancerAttributesResponse_httpStatus</a> - The
--   response's http status code.
newDescribeLoadBalancerAttributesResponse :: Int -> DescribeLoadBalancerAttributesResponse

-- | <i>See:</i> <a>newDescribeListeners</a> smart constructor.
data DescribeListeners
DescribeListeners' :: Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Natural -> DescribeListeners

-- | Create a value of <a>DescribeListeners</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:listenerArns:DescribeListeners'</a>,
--   <a>describeListeners_listenerArns</a> - The Amazon Resource Names
--   (ARN) of the listeners.
--   
--   <a>$sel:loadBalancerArn:DescribeListeners'</a>,
--   <a>describeListeners_loadBalancerArn</a> - The Amazon Resource Name
--   (ARN) of the load balancer.
--   
--   <a>$sel:marker:DescribeListeners'</a>, <a>describeListeners_marker</a>
--   - The marker for the next set of results. (You received this marker
--   from a previous call.)
--   
--   <a>$sel:pageSize:DescribeListeners'</a>,
--   <a>describeListeners_pageSize</a> - The maximum number of results to
--   return with this call.
newDescribeListeners :: DescribeListeners

-- | <i>See:</i> <a>newDescribeListenersResponse</a> smart constructor.
data DescribeListenersResponse
DescribeListenersResponse' :: Maybe Text -> Maybe [Listener] -> Int -> DescribeListenersResponse

-- | Create a value of <a>DescribeListenersResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextMarker:DescribeListenersResponse'</a>,
--   <a>describeListenersResponse_nextMarker</a> - If there are additional
--   results, this is the marker for the next set of results. Otherwise,
--   this is null.
--   
--   <a>$sel:listeners:DescribeListenersResponse'</a>,
--   <a>describeListenersResponse_listeners</a> - Information about the
--   listeners.
--   
--   <a>$sel:httpStatus:DescribeListenersResponse'</a>,
--   <a>describeListenersResponse_httpStatus</a> - The response's http
--   status code.
newDescribeListenersResponse :: Int -> DescribeListenersResponse

-- | <i>See:</i> <a>newDescribeTargetHealth</a> smart constructor.
data DescribeTargetHealth
DescribeTargetHealth' :: Maybe [TargetDescription] -> Text -> DescribeTargetHealth

-- | Create a value of <a>DescribeTargetHealth</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targets:DescribeTargetHealth'</a>,
--   <a>describeTargetHealth_targets</a> - The targets.
--   
--   <a>$sel:targetGroupArn:DescribeTargetHealth'</a>,
--   <a>describeTargetHealth_targetGroupArn</a> - The Amazon Resource Name
--   (ARN) of the target group.
newDescribeTargetHealth :: Text -> DescribeTargetHealth

-- | <i>See:</i> <a>newDescribeTargetHealthResponse</a> smart constructor.
data DescribeTargetHealthResponse
DescribeTargetHealthResponse' :: Maybe [TargetHealthDescription] -> Int -> DescribeTargetHealthResponse

-- | Create a value of <a>DescribeTargetHealthResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetHealthDescriptions:DescribeTargetHealthResponse'</a>,
--   <a>describeTargetHealthResponse_targetHealthDescriptions</a> -
--   Information about the health of the targets.
--   
--   <a>$sel:httpStatus:DescribeTargetHealthResponse'</a>,
--   <a>describeTargetHealthResponse_httpStatus</a> - The response's http
--   status code.
newDescribeTargetHealthResponse :: Int -> DescribeTargetHealthResponse

-- | <i>See:</i> <a>newCreateLoadBalancer</a> smart constructor.
data CreateLoadBalancer
CreateLoadBalancer' :: Maybe [SubnetMapping] -> Maybe [Text] -> Maybe [Text] -> Maybe Text -> Maybe IpAddressType -> Maybe LoadBalancerSchemeEnum -> Maybe LoadBalancerTypeEnum -> Maybe (NonEmpty Tag) -> Text -> CreateLoadBalancer

-- | Create a value of <a>CreateLoadBalancer</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subnetMappings:CreateLoadBalancer'</a>,
--   <a>createLoadBalancer_subnetMappings</a> - The IDs of the public
--   subnets. You can specify only one subnet per Availability Zone. You
--   must specify either subnets or subnet mappings.
--   
--   <ul>
--   <li><i>Application Load Balancers</i> You must specify subnets from at
--   least two Availability Zones. You cannot specify Elastic IP addresses
--   for your subnets.</li>
--   <li><i>Application Load Balancers on Outposts</i> You must specify one
--   Outpost subnet.</li>
--   <li><i>Application Load Balancers on Local Zones</i> You can specify
--   subnets from one or more Local Zones.</li>
--   <li><i>Network Load Balancers</i> You can specify subnets from one or
--   more Availability Zones. You can specify one Elastic IP address per
--   subnet if you need static IP addresses for your internet-facing load
--   balancer. For internal load balancers, you can specify one private IP
--   address per subnet from the IPv4 range of the subnet. For
--   internet-facing load balancer, you can specify one IPv6 address per
--   subnet.</li>
--   <li><i>Gateway Load Balancers</i> You can specify subnets from one or
--   more Availability Zones. You cannot specify Elastic IP addresses for
--   your subnets.</li>
--   </ul>
--   
--   <a>$sel:securityGroups:CreateLoadBalancer'</a>,
--   <a>createLoadBalancer_securityGroups</a> - [Application Load
--   Balancers] The IDs of the security groups for the load balancer.
--   
--   <a>$sel:subnets:CreateLoadBalancer'</a>,
--   <a>createLoadBalancer_subnets</a> - The IDs of the public subnets. You
--   can specify only one subnet per Availability Zone. You must specify
--   either subnets or subnet mappings.
--   
--   <ul>
--   <li><i>Application Load Balancers</i> You must specify subnets from at
--   least two Availability Zones.</li>
--   <li><i>Application Load Balancers on Outposts</i> You must specify one
--   Outpost subnet.</li>
--   <li><i>Application Load Balancers on Local Zones</i> You can specify
--   subnets from one or more Local Zones.</li>
--   <li><i>Network Load Balancers</i> You can specify subnets from one or
--   more Availability Zones.</li>
--   <li><i>Gateway Load Balancers</i> You can specify subnets from one or
--   more Availability Zones.</li>
--   </ul>
--   
--   <a>$sel:customerOwnedIpv4Pool:CreateLoadBalancer'</a>,
--   <a>createLoadBalancer_customerOwnedIpv4Pool</a> - [Application Load
--   Balancers on Outposts] The ID of the customer-owned address pool (CoIP
--   pool).
--   
--   <a>$sel:ipAddressType:CreateLoadBalancer'</a>,
--   <a>createLoadBalancer_ipAddressType</a> - The type of IP addresses
--   used by the subnets for your load balancer. The possible values are
--   <tt>ipv4</tt> (for IPv4 addresses) and <tt>dualstack</tt> (for IPv4
--   and IPv6 addresses). Internal load balancers must use <tt>ipv4</tt>.
--   
--   <a>$sel:scheme:CreateLoadBalancer'</a>,
--   <a>createLoadBalancer_scheme</a> - The nodes of an Internet-facing
--   load balancer have public IP addresses. The DNS name of an
--   Internet-facing load balancer is publicly resolvable to the public IP
--   addresses of the nodes. Therefore, Internet-facing load balancers can
--   route requests from clients over the internet.
--   
--   The nodes of an internal load balancer have only private IP addresses.
--   The DNS name of an internal load balancer is publicly resolvable to
--   the private IP addresses of the nodes. Therefore, internal load
--   balancers can route requests only from clients with access to the VPC
--   for the load balancer.
--   
--   The default is an Internet-facing load balancer.
--   
--   You cannot specify a scheme for a Gateway Load Balancer.
--   
--   <a>$sel:type':CreateLoadBalancer'</a>, <a>createLoadBalancer_type</a>
--   - The type of load balancer. The default is <tt>application</tt>.
--   
--   <a>$sel:tags:CreateLoadBalancer'</a>, <a>createLoadBalancer_tags</a> -
--   The tags to assign to the load balancer.
--   
--   <a>$sel:name:CreateLoadBalancer'</a>, <a>createLoadBalancer_name</a> -
--   The name of the load balancer.
--   
--   This name must be unique per region per account, can have a maximum of
--   32 characters, must contain only alphanumeric characters or hyphens,
--   must not begin or end with a hyphen, and must not begin with
--   "internal-".
newCreateLoadBalancer :: Text -> CreateLoadBalancer

-- | <i>See:</i> <a>newCreateLoadBalancerResponse</a> smart constructor.
data CreateLoadBalancerResponse
CreateLoadBalancerResponse' :: Maybe [LoadBalancer] -> Int -> CreateLoadBalancerResponse

-- | Create a value of <a>CreateLoadBalancerResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:loadBalancers:CreateLoadBalancerResponse'</a>,
--   <a>createLoadBalancerResponse_loadBalancers</a> - Information about
--   the load balancer.
--   
--   <a>$sel:httpStatus:CreateLoadBalancerResponse'</a>,
--   <a>createLoadBalancerResponse_httpStatus</a> - The response's http
--   status code.
newCreateLoadBalancerResponse :: Int -> CreateLoadBalancerResponse

-- | <i>See:</i> <a>newRemoveListenerCertificates</a> smart constructor.
data RemoveListenerCertificates
RemoveListenerCertificates' :: Text -> [Certificate] -> RemoveListenerCertificates

-- | Create a value of <a>RemoveListenerCertificates</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:listenerArn:RemoveListenerCertificates'</a>,
--   <a>removeListenerCertificates_listenerArn</a> - The Amazon Resource
--   Name (ARN) of the listener.
--   
--   <a>$sel:certificates:RemoveListenerCertificates'</a>,
--   <a>removeListenerCertificates_certificates</a> - The certificate to
--   remove. You can specify one certificate per call. Set
--   <tt>CertificateArn</tt> to the certificate ARN but do not set
--   <tt>IsDefault</tt>.
newRemoveListenerCertificates :: Text -> RemoveListenerCertificates

-- | <i>See:</i> <a>newRemoveListenerCertificatesResponse</a> smart
--   constructor.
data RemoveListenerCertificatesResponse
RemoveListenerCertificatesResponse' :: Int -> RemoveListenerCertificatesResponse

-- | Create a value of <a>RemoveListenerCertificatesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:RemoveListenerCertificatesResponse'</a>,
--   <a>removeListenerCertificatesResponse_httpStatus</a> - The response's
--   http status code.
newRemoveListenerCertificatesResponse :: Int -> RemoveListenerCertificatesResponse

-- | <i>See:</i> <a>newModifyRule</a> smart constructor.
data ModifyRule
ModifyRule' :: Maybe [Action] -> Maybe [RuleCondition] -> Text -> ModifyRule

-- | Create a value of <a>ModifyRule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:actions:ModifyRule'</a>, <a>modifyRule_actions</a> - The
--   actions.
--   
--   <a>$sel:conditions:ModifyRule'</a>, <a>modifyRule_conditions</a> - The
--   conditions.
--   
--   <a>$sel:ruleArn:ModifyRule'</a>, <a>modifyRule_ruleArn</a> - The
--   Amazon Resource Name (ARN) of the rule.
newModifyRule :: Text -> ModifyRule

-- | <i>See:</i> <a>newModifyRuleResponse</a> smart constructor.
data ModifyRuleResponse
ModifyRuleResponse' :: Maybe [Rule] -> Int -> ModifyRuleResponse

-- | Create a value of <a>ModifyRuleResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:rules:ModifyRuleResponse'</a>, <a>modifyRuleResponse_rules</a>
--   - Information about the modified rule.
--   
--   <a>$sel:httpStatus:ModifyRuleResponse'</a>,
--   <a>modifyRuleResponse_httpStatus</a> - The response's http status
--   code.
newModifyRuleResponse :: Int -> ModifyRuleResponse

-- | <i>See:</i> <a>newAddListenerCertificates</a> smart constructor.
data AddListenerCertificates
AddListenerCertificates' :: Text -> [Certificate] -> AddListenerCertificates

-- | Create a value of <a>AddListenerCertificates</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:listenerArn:AddListenerCertificates'</a>,
--   <a>addListenerCertificates_listenerArn</a> - The Amazon Resource Name
--   (ARN) of the listener.
--   
--   <a>$sel:certificates:AddListenerCertificates'</a>,
--   <a>addListenerCertificates_certificates</a> - The certificate to add.
--   You can specify one certificate per call. Set <tt>CertificateArn</tt>
--   to the certificate ARN but do not set <tt>IsDefault</tt>.
newAddListenerCertificates :: Text -> AddListenerCertificates

-- | <i>See:</i> <a>newAddListenerCertificatesResponse</a> smart
--   constructor.
data AddListenerCertificatesResponse
AddListenerCertificatesResponse' :: Maybe [Certificate] -> Int -> AddListenerCertificatesResponse

-- | Create a value of <a>AddListenerCertificatesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:certificates:AddListenerCertificates'</a>,
--   <a>addListenerCertificatesResponse_certificates</a> - Information
--   about the certificates in the certificate list.
--   
--   <a>$sel:httpStatus:AddListenerCertificatesResponse'</a>,
--   <a>addListenerCertificatesResponse_httpStatus</a> - The response's
--   http status code.
newAddListenerCertificatesResponse :: Int -> AddListenerCertificatesResponse
newtype ActionTypeEnum
ActionTypeEnum' :: Text -> ActionTypeEnum
[fromActionTypeEnum] :: ActionTypeEnum -> Text
pattern ActionTypeEnum_Authenticate_cognito :: ActionTypeEnum
pattern ActionTypeEnum_Authenticate_oidc :: ActionTypeEnum
pattern ActionTypeEnum_Fixed_response :: ActionTypeEnum
pattern ActionTypeEnum_Forward :: ActionTypeEnum
pattern ActionTypeEnum_Redirect :: ActionTypeEnum
newtype AuthenticateCognitoActionConditionalBehaviorEnum
AuthenticateCognitoActionConditionalBehaviorEnum' :: Text -> AuthenticateCognitoActionConditionalBehaviorEnum
[fromAuthenticateCognitoActionConditionalBehaviorEnum] :: AuthenticateCognitoActionConditionalBehaviorEnum -> Text
pattern AuthenticateCognitoActionConditionalBehaviorEnum_Allow :: AuthenticateCognitoActionConditionalBehaviorEnum
pattern AuthenticateCognitoActionConditionalBehaviorEnum_Authenticate :: AuthenticateCognitoActionConditionalBehaviorEnum
pattern AuthenticateCognitoActionConditionalBehaviorEnum_Deny :: AuthenticateCognitoActionConditionalBehaviorEnum
newtype AuthenticateOidcActionConditionalBehaviorEnum
AuthenticateOidcActionConditionalBehaviorEnum' :: Text -> AuthenticateOidcActionConditionalBehaviorEnum
[fromAuthenticateOidcActionConditionalBehaviorEnum] :: AuthenticateOidcActionConditionalBehaviorEnum -> Text
pattern AuthenticateOidcActionConditionalBehaviorEnum_Allow :: AuthenticateOidcActionConditionalBehaviorEnum
pattern AuthenticateOidcActionConditionalBehaviorEnum_Authenticate :: AuthenticateOidcActionConditionalBehaviorEnum
pattern AuthenticateOidcActionConditionalBehaviorEnum_Deny :: AuthenticateOidcActionConditionalBehaviorEnum
newtype IpAddressType
IpAddressType' :: Text -> IpAddressType
[fromIpAddressType] :: IpAddressType -> Text
pattern IpAddressType_Dualstack :: IpAddressType
pattern IpAddressType_Ipv4 :: IpAddressType
newtype LoadBalancerSchemeEnum
LoadBalancerSchemeEnum' :: Text -> LoadBalancerSchemeEnum
[fromLoadBalancerSchemeEnum] :: LoadBalancerSchemeEnum -> Text
pattern LoadBalancerSchemeEnum_Internal :: LoadBalancerSchemeEnum
pattern LoadBalancerSchemeEnum_Internet_facing :: LoadBalancerSchemeEnum
newtype LoadBalancerStateEnum
LoadBalancerStateEnum' :: Text -> LoadBalancerStateEnum
[fromLoadBalancerStateEnum] :: LoadBalancerStateEnum -> Text
pattern LoadBalancerStateEnum_Active :: LoadBalancerStateEnum
pattern LoadBalancerStateEnum_Active_impaired :: LoadBalancerStateEnum
pattern LoadBalancerStateEnum_Failed :: LoadBalancerStateEnum
pattern LoadBalancerStateEnum_Provisioning :: LoadBalancerStateEnum
newtype LoadBalancerTypeEnum
LoadBalancerTypeEnum' :: Text -> LoadBalancerTypeEnum
[fromLoadBalancerTypeEnum] :: LoadBalancerTypeEnum -> Text
pattern LoadBalancerTypeEnum_Application :: LoadBalancerTypeEnum
pattern LoadBalancerTypeEnum_Gateway :: LoadBalancerTypeEnum
pattern LoadBalancerTypeEnum_Network :: LoadBalancerTypeEnum
newtype ProtocolEnum
ProtocolEnum' :: Text -> ProtocolEnum
[fromProtocolEnum] :: ProtocolEnum -> Text
pattern ProtocolEnum_GENEVE :: ProtocolEnum
pattern ProtocolEnum_HTTP :: ProtocolEnum
pattern ProtocolEnum_HTTPS :: ProtocolEnum
pattern ProtocolEnum_TCP :: ProtocolEnum
pattern ProtocolEnum_TCP_UDP :: ProtocolEnum
pattern ProtocolEnum_TLS :: ProtocolEnum
pattern ProtocolEnum_UDP :: ProtocolEnum
newtype RedirectActionStatusCodeEnum
RedirectActionStatusCodeEnum' :: Text -> RedirectActionStatusCodeEnum
[fromRedirectActionStatusCodeEnum] :: RedirectActionStatusCodeEnum -> Text
pattern RedirectActionStatusCodeEnum_HTTP_301 :: RedirectActionStatusCodeEnum
pattern RedirectActionStatusCodeEnum_HTTP_302 :: RedirectActionStatusCodeEnum
newtype TargetGroupIpAddressTypeEnum
TargetGroupIpAddressTypeEnum' :: Text -> TargetGroupIpAddressTypeEnum
[fromTargetGroupIpAddressTypeEnum] :: TargetGroupIpAddressTypeEnum -> Text
pattern TargetGroupIpAddressTypeEnum_Ipv4 :: TargetGroupIpAddressTypeEnum
pattern TargetGroupIpAddressTypeEnum_Ipv6 :: TargetGroupIpAddressTypeEnum
newtype TargetHealthReasonEnum
TargetHealthReasonEnum' :: Text -> TargetHealthReasonEnum
[fromTargetHealthReasonEnum] :: TargetHealthReasonEnum -> Text
pattern TargetHealthReasonEnum_Elb_InitialHealthChecking :: TargetHealthReasonEnum
pattern TargetHealthReasonEnum_Elb_InternalError :: TargetHealthReasonEnum
pattern TargetHealthReasonEnum_Elb_RegistrationInProgress :: TargetHealthReasonEnum
pattern TargetHealthReasonEnum_Target_DeregistrationInProgress :: TargetHealthReasonEnum
pattern TargetHealthReasonEnum_Target_FailedHealthChecks :: TargetHealthReasonEnum
pattern TargetHealthReasonEnum_Target_HealthCheckDisabled :: TargetHealthReasonEnum
pattern TargetHealthReasonEnum_Target_InvalidState :: TargetHealthReasonEnum
pattern TargetHealthReasonEnum_Target_IpUnusable :: TargetHealthReasonEnum
pattern TargetHealthReasonEnum_Target_NotInUse :: TargetHealthReasonEnum
pattern TargetHealthReasonEnum_Target_NotRegistered :: TargetHealthReasonEnum
pattern TargetHealthReasonEnum_Target_ResponseCodeMismatch :: TargetHealthReasonEnum
pattern TargetHealthReasonEnum_Target_Timeout :: TargetHealthReasonEnum
newtype TargetHealthStateEnum
TargetHealthStateEnum' :: Text -> TargetHealthStateEnum
[fromTargetHealthStateEnum] :: TargetHealthStateEnum -> Text
pattern TargetHealthStateEnum_Draining :: TargetHealthStateEnum
pattern TargetHealthStateEnum_Healthy :: TargetHealthStateEnum
pattern TargetHealthStateEnum_Initial :: TargetHealthStateEnum
pattern TargetHealthStateEnum_Unavailable :: TargetHealthStateEnum
pattern TargetHealthStateEnum_Unhealthy :: TargetHealthStateEnum
pattern TargetHealthStateEnum_Unused :: TargetHealthStateEnum
newtype TargetTypeEnum
TargetTypeEnum' :: Text -> TargetTypeEnum
[fromTargetTypeEnum] :: TargetTypeEnum -> Text
pattern TargetTypeEnum_Alb :: TargetTypeEnum
pattern TargetTypeEnum_Instance :: TargetTypeEnum
pattern TargetTypeEnum_Ip :: TargetTypeEnum
pattern TargetTypeEnum_Lambda :: TargetTypeEnum

-- | Information about an action.
--   
--   Each rule must include exactly one of the following types of actions:
--   <tt>forward</tt>, <tt>fixed-response</tt>, or <tt>redirect</tt>, and
--   it must be the last action to be performed.
--   
--   <i>See:</i> <a>newAction</a> smart constructor.
data Action
Action' :: Maybe FixedResponseActionConfig -> Maybe Text -> Maybe ForwardActionConfig -> Maybe RedirectActionConfig -> Maybe AuthenticateCognitoActionConfig -> Maybe Natural -> Maybe AuthenticateOidcActionConfig -> ActionTypeEnum -> Action

-- | Create a value of <a>Action</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fixedResponseConfig:Action'</a>,
--   <a>action_fixedResponseConfig</a> - [Application Load Balancer]
--   Information for creating an action that returns a custom HTTP
--   response. Specify only when <tt>Type</tt> is <tt>fixed-response</tt>.
--   
--   <a>$sel:targetGroupArn:Action'</a>, <a>action_targetGroupArn</a> - The
--   Amazon Resource Name (ARN) of the target group. Specify only when
--   <tt>Type</tt> is <tt>forward</tt> and you want to route to a single
--   target group. To route to one or more target groups, use
--   <tt>ForwardConfig</tt> instead.
--   
--   <a>$sel:forwardConfig:Action'</a>, <a>action_forwardConfig</a> -
--   Information for creating an action that distributes requests among one
--   or more target groups. For Network Load Balancers, you can specify a
--   single target group. Specify only when <tt>Type</tt> is
--   <tt>forward</tt>. If you specify both <tt>ForwardConfig</tt> and
--   <tt>TargetGroupArn</tt>, you can specify only one target group using
--   <tt>ForwardConfig</tt> and it must be the same target group specified
--   in <tt>TargetGroupArn</tt>.
--   
--   <a>$sel:redirectConfig:Action'</a>, <a>action_redirectConfig</a> -
--   [Application Load Balancer] Information for creating a redirect
--   action. Specify only when <tt>Type</tt> is <tt>redirect</tt>.
--   
--   <a>$sel:authenticateCognitoConfig:Action'</a>,
--   <a>action_authenticateCognitoConfig</a> - [HTTPS listeners]
--   Information for using Amazon Cognito to authenticate users. Specify
--   only when <tt>Type</tt> is <tt>authenticate-cognito</tt>.
--   
--   <a>$sel:order:Action'</a>, <a>action_order</a> - The order for the
--   action. This value is required for rules with multiple actions. The
--   action with the lowest value for order is performed first.
--   
--   <a>$sel:authenticateOidcConfig:Action'</a>,
--   <a>action_authenticateOidcConfig</a> - [HTTPS listeners] Information
--   about an identity provider that is compliant with OpenID Connect
--   (OIDC). Specify only when <tt>Type</tt> is <tt>authenticate-oidc</tt>.
--   
--   <a>$sel:type':Action'</a>, <a>action_type</a> - The type of action.
newAction :: ActionTypeEnum -> Action

-- | Request parameters to use when integrating with Amazon Cognito to
--   authenticate users.
--   
--   <i>See:</i> <a>newAuthenticateCognitoActionConfig</a> smart
--   constructor.
data AuthenticateCognitoActionConfig
AuthenticateCognitoActionConfig' :: Maybe (HashMap Text Text) -> Maybe Text -> Maybe AuthenticateCognitoActionConditionalBehaviorEnum -> Maybe Text -> Maybe Integer -> Text -> Text -> Text -> AuthenticateCognitoActionConfig

-- | Create a value of <a>AuthenticateCognitoActionConfig</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:authenticationRequestExtraParams:AuthenticateCognitoActionConfig'</a>,
--   <a>authenticateCognitoActionConfig_authenticationRequestExtraParams</a>
--   - The query parameters (up to 10) to include in the redirect request
--   to the authorization endpoint.
--   
--   <a>$sel:scope:AuthenticateCognitoActionConfig'</a>,
--   <a>authenticateCognitoActionConfig_scope</a> - The set of user claims
--   to be requested from the IdP. The default is <tt>openid</tt>.
--   
--   To verify which scope values your IdP supports and how to separate
--   multiple values, see the documentation for your IdP.
--   
--   <a>$sel:onUnauthenticatedRequest:AuthenticateCognitoActionConfig'</a>,
--   <a>authenticateCognitoActionConfig_onUnauthenticatedRequest</a> - The
--   behavior if the user is not authenticated. The following are possible
--   values:
--   
--   <ul>
--   <li>deny@@ - Return an HTTP 401 Unauthorized error.</li>
--   <li>allow@@ - Allow the request to be forwarded to the target.</li>
--   <li>authenticate@@ - Redirect the request to the IdP authorization
--   endpoint. This is the default value.</li>
--   </ul>
--   
--   <a>$sel:sessionCookieName:AuthenticateCognitoActionConfig'</a>,
--   <a>authenticateCognitoActionConfig_sessionCookieName</a> - The name of
--   the cookie used to maintain session information. The default is
--   AWSELBAuthSessionCookie.
--   
--   <a>$sel:sessionTimeout:AuthenticateCognitoActionConfig'</a>,
--   <a>authenticateCognitoActionConfig_sessionTimeout</a> - The maximum
--   duration of the authentication session, in seconds. The default is
--   604800 seconds (7 days).
--   
--   <a>$sel:userPoolArn:AuthenticateCognitoActionConfig'</a>,
--   <a>authenticateCognitoActionConfig_userPoolArn</a> - The Amazon
--   Resource Name (ARN) of the Amazon Cognito user pool.
--   
--   <a>$sel:userPoolClientId:AuthenticateCognitoActionConfig'</a>,
--   <a>authenticateCognitoActionConfig_userPoolClientId</a> - The ID of
--   the Amazon Cognito user pool client.
--   
--   <a>$sel:userPoolDomain:AuthenticateCognitoActionConfig'</a>,
--   <a>authenticateCognitoActionConfig_userPoolDomain</a> - The domain
--   prefix or fully-qualified domain name of the Amazon Cognito user pool.
newAuthenticateCognitoActionConfig :: Text -> Text -> Text -> AuthenticateCognitoActionConfig

-- | Request parameters when using an identity provider (IdP) that is
--   compliant with OpenID Connect (OIDC) to authenticate users.
--   
--   <i>See:</i> <a>newAuthenticateOidcActionConfig</a> smart constructor.
data AuthenticateOidcActionConfig
AuthenticateOidcActionConfig' :: Maybe Text -> Maybe Bool -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe AuthenticateOidcActionConditionalBehaviorEnum -> Maybe Text -> Maybe Integer -> Text -> Text -> Text -> Text -> Text -> AuthenticateOidcActionConfig

-- | Create a value of <a>AuthenticateOidcActionConfig</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientSecret:AuthenticateOidcActionConfig'</a>,
--   <a>authenticateOidcActionConfig_clientSecret</a> - The OAuth 2.0
--   client secret. This parameter is required if you are creating a rule.
--   If you are modifying a rule, you can omit this parameter if you set
--   <tt>UseExistingClientSecret</tt> to true.
--   
--   <a>$sel:useExistingClientSecret:AuthenticateOidcActionConfig'</a>,
--   <a>authenticateOidcActionConfig_useExistingClientSecret</a> -
--   Indicates whether to use the existing client secret when modifying a
--   rule. If you are creating a rule, you can omit this parameter or set
--   it to false.
--   
--   
--   <a>$sel:authenticationRequestExtraParams:AuthenticateOidcActionConfig'</a>,
--   <a>authenticateOidcActionConfig_authenticationRequestExtraParams</a> -
--   The query parameters (up to 10) to include in the redirect request to
--   the authorization endpoint.
--   
--   <a>$sel:scope:AuthenticateOidcActionConfig'</a>,
--   <a>authenticateOidcActionConfig_scope</a> - The set of user claims to
--   be requested from the IdP. The default is <tt>openid</tt>.
--   
--   To verify which scope values your IdP supports and how to separate
--   multiple values, see the documentation for your IdP.
--   
--   <a>$sel:onUnauthenticatedRequest:AuthenticateOidcActionConfig'</a>,
--   <a>authenticateOidcActionConfig_onUnauthenticatedRequest</a> - The
--   behavior if the user is not authenticated. The following are possible
--   values:
--   
--   <ul>
--   <li>deny@@ - Return an HTTP 401 Unauthorized error.</li>
--   <li>allow@@ - Allow the request to be forwarded to the target.</li>
--   <li>authenticate@@ - Redirect the request to the IdP authorization
--   endpoint. This is the default value.</li>
--   </ul>
--   
--   <a>$sel:sessionCookieName:AuthenticateOidcActionConfig'</a>,
--   <a>authenticateOidcActionConfig_sessionCookieName</a> - The name of
--   the cookie used to maintain session information. The default is
--   AWSELBAuthSessionCookie.
--   
--   <a>$sel:sessionTimeout:AuthenticateOidcActionConfig'</a>,
--   <a>authenticateOidcActionConfig_sessionTimeout</a> - The maximum
--   duration of the authentication session, in seconds. The default is
--   604800 seconds (7 days).
--   
--   <a>$sel:issuer:AuthenticateOidcActionConfig'</a>,
--   <a>authenticateOidcActionConfig_issuer</a> - The OIDC issuer
--   identifier of the IdP. This must be a full URL, including the HTTPS
--   protocol, the domain, and the path.
--   
--   <a>$sel:authorizationEndpoint:AuthenticateOidcActionConfig'</a>,
--   <a>authenticateOidcActionConfig_authorizationEndpoint</a> - The
--   authorization endpoint of the IdP. This must be a full URL, including
--   the HTTPS protocol, the domain, and the path.
--   
--   <a>$sel:tokenEndpoint:AuthenticateOidcActionConfig'</a>,
--   <a>authenticateOidcActionConfig_tokenEndpoint</a> - The token endpoint
--   of the IdP. This must be a full URL, including the HTTPS protocol, the
--   domain, and the path.
--   
--   <a>$sel:userInfoEndpoint:AuthenticateOidcActionConfig'</a>,
--   <a>authenticateOidcActionConfig_userInfoEndpoint</a> - The user info
--   endpoint of the IdP. This must be a full URL, including the HTTPS
--   protocol, the domain, and the path.
--   
--   <a>$sel:clientId:AuthenticateOidcActionConfig'</a>,
--   <a>authenticateOidcActionConfig_clientId</a> - The OAuth 2.0 client
--   identifier.
newAuthenticateOidcActionConfig :: Text -> Text -> Text -> Text -> Text -> AuthenticateOidcActionConfig

-- | Information about an Availability Zone.
--   
--   <i>See:</i> <a>newAvailabilityZone</a> smart constructor.
data AvailabilityZone
AvailabilityZone' :: Maybe Text -> Maybe Text -> Maybe [LoadBalancerAddress] -> Maybe Text -> AvailabilityZone

-- | Create a value of <a>AvailabilityZone</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subnetId:AvailabilityZone'</a>,
--   <a>availabilityZone_subnetId</a> - The ID of the subnet. You can
--   specify one subnet per Availability Zone.
--   
--   <a>$sel:zoneName:AvailabilityZone'</a>,
--   <a>availabilityZone_zoneName</a> - The name of the Availability Zone.
--   
--   <a>$sel:loadBalancerAddresses:AvailabilityZone'</a>,
--   <a>availabilityZone_loadBalancerAddresses</a> - [Network Load
--   Balancers] If you need static IP addresses for your load balancer, you
--   can specify one Elastic IP address per Availability Zone when you
--   create an internal-facing load balancer. For internal load balancers,
--   you can specify a private IP address from the IPv4 range of the
--   subnet.
--   
--   <a>$sel:outpostId:AvailabilityZone'</a>,
--   <a>availabilityZone_outpostId</a> - [Application Load Balancers on
--   Outposts] The ID of the Outpost.
newAvailabilityZone :: AvailabilityZone

-- | Information about an SSL server certificate.
--   
--   <i>See:</i> <a>newCertificate</a> smart constructor.
data Certificate
Certificate' :: Maybe Text -> Maybe Bool -> Certificate

-- | Create a value of <a>Certificate</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:certificateArn:Certificate'</a>,
--   <a>certificate_certificateArn</a> - The Amazon Resource Name (ARN) of
--   the certificate.
--   
--   <a>$sel:isDefault:Certificate'</a>, <a>certificate_isDefault</a> -
--   Indicates whether the certificate is the default certificate. Do not
--   set this value when specifying a certificate as an input. This value
--   is not included in the output when describing a listener, but is
--   included when describing listener certificates.
newCertificate :: Certificate

-- | Information about a cipher used in a policy.
--   
--   <i>See:</i> <a>newCipher</a> smart constructor.
data Cipher
Cipher' :: Maybe Int -> Maybe Text -> Cipher

-- | Create a value of <a>Cipher</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:priority:Cipher'</a>, <a>cipher_priority</a> - The priority of
--   the cipher.
--   
--   <a>$sel:name:Cipher'</a>, <a>cipher_name</a> - The name of the cipher.
newCipher :: Cipher

-- | Information about an action that returns a custom HTTP response.
--   
--   <i>See:</i> <a>newFixedResponseActionConfig</a> smart constructor.
data FixedResponseActionConfig
FixedResponseActionConfig' :: Maybe Text -> Maybe Text -> Text -> FixedResponseActionConfig

-- | Create a value of <a>FixedResponseActionConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:messageBody:FixedResponseActionConfig'</a>,
--   <a>fixedResponseActionConfig_messageBody</a> - The message.
--   
--   <a>$sel:contentType:FixedResponseActionConfig'</a>,
--   <a>fixedResponseActionConfig_contentType</a> - The content type.
--   
--   Valid Values: text/plain | text/css | text/html |
--   application/javascript | application/json
--   
--   <a>$sel:statusCode:FixedResponseActionConfig'</a>,
--   <a>fixedResponseActionConfig_statusCode</a> - The HTTP response code
--   (2XX, 4XX, or 5XX).
newFixedResponseActionConfig :: Text -> FixedResponseActionConfig

-- | Information about a forward action.
--   
--   <i>See:</i> <a>newForwardActionConfig</a> smart constructor.
data ForwardActionConfig
ForwardActionConfig' :: Maybe [TargetGroupTuple] -> Maybe TargetGroupStickinessConfig -> ForwardActionConfig

-- | Create a value of <a>ForwardActionConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetGroups:ForwardActionConfig'</a>,
--   <a>forwardActionConfig_targetGroups</a> - One or more target groups.
--   For Network Load Balancers, you can specify a single target group.
--   
--   <a>$sel:targetGroupStickinessConfig:ForwardActionConfig'</a>,
--   <a>forwardActionConfig_targetGroupStickinessConfig</a> - The target
--   group stickiness for the rule.
newForwardActionConfig :: ForwardActionConfig

-- | Information about a host header condition.
--   
--   <i>See:</i> <a>newHostHeaderConditionConfig</a> smart constructor.
data HostHeaderConditionConfig
HostHeaderConditionConfig' :: Maybe [Text] -> HostHeaderConditionConfig

-- | Create a value of <a>HostHeaderConditionConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:values:HostHeaderConditionConfig'</a>,
--   <a>hostHeaderConditionConfig_values</a> - One or more host names. The
--   maximum size of each name is 128 characters. The comparison is case
--   insensitive. The following wildcard characters are supported: *
--   (matches 0 or more characters) and ? (matches exactly 1 character).
--   
--   If you specify multiple strings, the condition is satisfied if one of
--   the strings matches the host name.
newHostHeaderConditionConfig :: HostHeaderConditionConfig

-- | Information about an HTTP header condition.
--   
--   There is a set of standard HTTP header fields. You can also define
--   custom HTTP header fields.
--   
--   <i>See:</i> <a>newHttpHeaderConditionConfig</a> smart constructor.
data HttpHeaderConditionConfig
HttpHeaderConditionConfig' :: Maybe [Text] -> Maybe Text -> HttpHeaderConditionConfig

-- | Create a value of <a>HttpHeaderConditionConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:values:HttpHeaderConditionConfig'</a>,
--   <a>httpHeaderConditionConfig_values</a> - One or more strings to
--   compare against the value of the HTTP header. The maximum size of each
--   string is 128 characters. The comparison strings are case insensitive.
--   The following wildcard characters are supported: * (matches 0 or more
--   characters) and ? (matches exactly 1 character).
--   
--   If the same header appears multiple times in the request, we search
--   them in order until a match is found.
--   
--   If you specify multiple strings, the condition is satisfied if one of
--   the strings matches the value of the HTTP header. To require that all
--   of the strings are a match, create one condition per string.
--   
--   <a>$sel:httpHeaderName:HttpHeaderConditionConfig'</a>,
--   <a>httpHeaderConditionConfig_httpHeaderName</a> - The name of the HTTP
--   header field. The maximum size is 40 characters. The header name is
--   case insensitive. The allowed characters are specified by RFC 7230.
--   Wildcards are not supported.
--   
--   You can't use an HTTP header condition to specify the host header. Use
--   HostHeaderConditionConfig to specify a host header condition.
newHttpHeaderConditionConfig :: HttpHeaderConditionConfig

-- | Information about an HTTP method condition.
--   
--   HTTP defines a set of request methods, also referred to as HTTP verbs.
--   For more information, see the <a>HTTP Method Registry</a>. You can
--   also define custom HTTP methods.
--   
--   <i>See:</i> <a>newHttpRequestMethodConditionConfig</a> smart
--   constructor.
data HttpRequestMethodConditionConfig
HttpRequestMethodConditionConfig' :: Maybe [Text] -> HttpRequestMethodConditionConfig

-- | Create a value of <a>HttpRequestMethodConditionConfig</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:values:HttpRequestMethodConditionConfig'</a>,
--   <a>httpRequestMethodConditionConfig_values</a> - The name of the
--   request method. The maximum size is 40 characters. The allowed
--   characters are A-Z, hyphen (-), and underscore (_). The comparison is
--   case sensitive. Wildcards are not supported; therefore, the method
--   name must be an exact match.
--   
--   If you specify multiple strings, the condition is satisfied if one of
--   the strings matches the HTTP request method. We recommend that you
--   route GET and HEAD requests in the same way, because the response to a
--   HEAD request may be cached.
newHttpRequestMethodConditionConfig :: HttpRequestMethodConditionConfig

-- | Information about an Elastic Load Balancing resource limit for your
--   Amazon Web Services account.
--   
--   <i>See:</i> <a>newLimit</a> smart constructor.
data Limit
Limit' :: Maybe Text -> Maybe Text -> Limit

-- | Create a value of <a>Limit</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:max:Limit'</a>, <a>limit_max</a> - The maximum value of the
--   limit.
--   
--   <a>$sel:name:Limit'</a>, <a>limit_name</a> - The name of the limit.
--   The possible values are:
--   
--   <ul>
--   <li>application-load-balancers</li>
--   <li>condition-values-per-alb-rule</li>
--   <li>condition-wildcards-per-alb-rule</li>
--   <li>gateway-load-balancers</li>
--   <li>gateway-load-balancers-per-vpc</li>
--   <li>geneve-target-groups</li>
--   <li>listeners-per-application-load-balancer</li>
--   <li>listeners-per-network-load-balancer</li>
--   <li>network-load-balancers</li>
--   <li>rules-per-application-load-balancer</li>
--   <li>target-groups</li>
--   <li>target-groups-per-action-on-application-load-balancer</li>
--   <li>target-groups-per-action-on-network-load-balancer</li>
--   <li>target-groups-per-application-load-balancer</li>
--   <li>targets-per-application-load-balancer</li>
--   <li>targets-per-availability-zone-per-gateway-load-balancer</li>
--   <li>targets-per-availability-zone-per-network-load-balancer</li>
--   <li>targets-per-network-load-balancer</li>
--   </ul>
newLimit :: Limit

-- | Information about a listener.
--   
--   <i>See:</i> <a>newListener</a> smart constructor.
data Listener
Listener' :: Maybe Text -> Maybe Text -> Maybe ProtocolEnum -> Maybe [Action] -> Maybe [Certificate] -> Maybe Text -> Maybe [Text] -> Maybe Natural -> Listener

-- | Create a value of <a>Listener</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sslPolicy:Listener'</a>, <a>listener_sslPolicy</a> - [HTTPS or
--   TLS listener] The security policy that defines which protocols and
--   ciphers are supported.
--   
--   <a>$sel:listenerArn:Listener'</a>, <a>listener_listenerArn</a> - The
--   Amazon Resource Name (ARN) of the listener.
--   
--   <a>$sel:protocol:Listener'</a>, <a>listener_protocol</a> - The
--   protocol for connections from clients to the load balancer.
--   
--   <a>$sel:defaultActions:Listener'</a>, <a>listener_defaultActions</a> -
--   The default actions for the listener.
--   
--   <a>$sel:certificates:Listener'</a>, <a>listener_certificates</a> -
--   [HTTPS or TLS listener] The default certificate for the listener.
--   
--   <a>$sel:loadBalancerArn:Listener'</a>, <a>listener_loadBalancerArn</a>
--   - The Amazon Resource Name (ARN) of the load balancer.
--   
--   <a>$sel:alpnPolicy:Listener'</a>, <a>listener_alpnPolicy</a> - [TLS
--   listener] The name of the Application-Layer Protocol Negotiation
--   (ALPN) policy.
--   
--   <a>$sel:port:Listener'</a>, <a>listener_port</a> - The port on which
--   the load balancer is listening.
newListener :: Listener

-- | Information about a load balancer.
--   
--   <i>See:</i> <a>newLoadBalancer</a> smart constructor.
data LoadBalancer
LoadBalancer' :: Maybe LoadBalancerState -> Maybe [Text] -> Maybe Text -> Maybe ISO8601 -> Maybe Text -> Maybe Text -> Maybe [AvailabilityZone] -> Maybe Text -> Maybe Text -> Maybe IpAddressType -> Maybe LoadBalancerSchemeEnum -> Maybe LoadBalancerTypeEnum -> Maybe Text -> LoadBalancer

-- | Create a value of <a>LoadBalancer</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:LoadBalancer'</a>, <a>loadBalancer_state</a> - The state
--   of the load balancer.
--   
--   <a>$sel:securityGroups:LoadBalancer'</a>,
--   <a>loadBalancer_securityGroups</a> - The IDs of the security groups
--   for the load balancer.
--   
--   <a>$sel:loadBalancerName:LoadBalancer'</a>,
--   <a>loadBalancer_loadBalancerName</a> - The name of the load balancer.
--   
--   <a>$sel:createdTime:LoadBalancer'</a>, <a>loadBalancer_createdTime</a>
--   - The date and time the load balancer was created.
--   
--   <a>$sel:vpcId:LoadBalancer'</a>, <a>loadBalancer_vpcId</a> - The ID of
--   the VPC for the load balancer.
--   
--   <a>$sel:canonicalHostedZoneId:LoadBalancer'</a>,
--   <a>loadBalancer_canonicalHostedZoneId</a> - The ID of the Amazon Route
--   53 hosted zone associated with the load balancer.
--   
--   <a>$sel:availabilityZones:LoadBalancer'</a>,
--   <a>loadBalancer_availabilityZones</a> - The subnets for the load
--   balancer.
--   
--   <a>$sel:customerOwnedIpv4Pool:LoadBalancer'</a>,
--   <a>loadBalancer_customerOwnedIpv4Pool</a> - [Application Load
--   Balancers on Outposts] The ID of the customer-owned address pool.
--   
--   <a>$sel:loadBalancerArn:LoadBalancer'</a>,
--   <a>loadBalancer_loadBalancerArn</a> - The Amazon Resource Name (ARN)
--   of the load balancer.
--   
--   <a>$sel:ipAddressType:LoadBalancer'</a>,
--   <a>loadBalancer_ipAddressType</a> - The type of IP addresses used by
--   the subnets for your load balancer. The possible values are
--   <tt>ipv4</tt> (for IPv4 addresses) and <tt>dualstack</tt> (for IPv4
--   and IPv6 addresses).
--   
--   <a>$sel:scheme:LoadBalancer'</a>, <a>loadBalancer_scheme</a> - The
--   nodes of an Internet-facing load balancer have public IP addresses.
--   The DNS name of an Internet-facing load balancer is publicly
--   resolvable to the public IP addresses of the nodes. Therefore,
--   Internet-facing load balancers can route requests from clients over
--   the internet.
--   
--   The nodes of an internal load balancer have only private IP addresses.
--   The DNS name of an internal load balancer is publicly resolvable to
--   the private IP addresses of the nodes. Therefore, internal load
--   balancers can route requests only from clients with access to the VPC
--   for the load balancer.
--   
--   <a>$sel:type':LoadBalancer'</a>, <a>loadBalancer_type</a> - The type
--   of load balancer.
--   
--   <a>$sel:dNSName:LoadBalancer'</a>, <a>loadBalancer_dNSName</a> - The
--   public DNS name of the load balancer.
newLoadBalancer :: LoadBalancer

-- | Information about a static IP address for a load balancer.
--   
--   <i>See:</i> <a>newLoadBalancerAddress</a> smart constructor.
data LoadBalancerAddress
LoadBalancerAddress' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> LoadBalancerAddress

-- | Create a value of <a>LoadBalancerAddress</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:iPv6Address:LoadBalancerAddress'</a>,
--   <a>loadBalancerAddress_iPv6Address</a> - [Network Load Balancers] The
--   IPv6 address.
--   
--   <a>$sel:ipAddress:LoadBalancerAddress'</a>,
--   <a>loadBalancerAddress_ipAddress</a> - The static IP address.
--   
--   <a>$sel:allocationId:LoadBalancerAddress'</a>,
--   <a>loadBalancerAddress_allocationId</a> - [Network Load Balancers] The
--   allocation ID of the Elastic IP address for an internal-facing load
--   balancer.
--   
--   <a>$sel:privateIPv4Address:LoadBalancerAddress'</a>,
--   <a>loadBalancerAddress_privateIPv4Address</a> - [Network Load
--   Balancers] The private IPv4 address for an internal load balancer.
newLoadBalancerAddress :: LoadBalancerAddress

-- | Information about a load balancer attribute.
--   
--   <i>See:</i> <a>newLoadBalancerAttribute</a> smart constructor.
data LoadBalancerAttribute
LoadBalancerAttribute' :: Maybe Text -> Maybe Text -> LoadBalancerAttribute

-- | Create a value of <a>LoadBalancerAttribute</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:LoadBalancerAttribute'</a>,
--   <a>loadBalancerAttribute_value</a> - The value of the attribute.
--   
--   <a>$sel:key:LoadBalancerAttribute'</a>,
--   <a>loadBalancerAttribute_key</a> - The name of the attribute.
--   
--   The following attribute is supported by all load balancers:
--   
--   <ul>
--   <li><tt>deletion_protection.enabled</tt> - Indicates whether deletion
--   protection is enabled. The value is <tt>true</tt> or <tt>false</tt>.
--   The default is <tt>false</tt>.</li>
--   </ul>
--   
--   The following attributes are supported by both Application Load
--   Balancers and Network Load Balancers:
--   
--   <ul>
--   <li><tt>access_logs.s3.enabled</tt> - Indicates whether access logs
--   are enabled. The value is <tt>true</tt> or <tt>false</tt>. The default
--   is <tt>false</tt>.</li>
--   <li><tt>access_logs.s3.bucket</tt> - The name of the S3 bucket for the
--   access logs. This attribute is required if access logs are enabled.
--   The bucket must exist in the same region as the load balancer and have
--   a bucket policy that grants Elastic Load Balancing permissions to
--   write to the bucket.</li>
--   <li><tt>access_logs.s3.prefix</tt> - The prefix for the location in
--   the S3 bucket for the access logs.</li>
--   </ul>
--   
--   The following attributes are supported by only Application Load
--   Balancers:
--   
--   <ul>
--   <li><tt>idle_timeout.timeout_seconds</tt> - The idle timeout value, in
--   seconds. The valid range is 1-4000 seconds. The default is 60
--   seconds.</li>
--   <li><tt>routing.http.desync_mitigation_mode</tt> - Determines how the
--   load balancer handles requests that might pose a security risk to your
--   application. The possible values are <tt>monitor</tt>,
--   <tt>defensive</tt>, and <tt>strictest</tt>. The default is
--   <tt>defensive</tt>.</li>
--   <li><tt>routing.http.drop_invalid_header_fields.enabled</tt> -
--   Indicates whether HTTP headers with invalid header fields are removed
--   by the load balancer (<tt>true</tt>) or routed to targets
--   (<tt>false</tt>). The default is <tt>false</tt>.</li>
--   <li><tt>routing.http.x_amzn_tls_version_and_cipher_suite.enabled</tt>
--   - Indicates whether the two headers (<tt>x-amzn-tls-version</tt> and
--   <tt>x-amzn-tls-cipher-suite</tt>), which contain information about the
--   negotiated TLS version and cipher suite, are added to the client
--   request before sending it to the target. The
--   <tt>x-amzn-tls-version</tt> header has information about the TLS
--   protocol version negotiated with the client, and the
--   <tt>x-amzn-tls-cipher-suite</tt> header has information about the
--   cipher suite negotiated with the client. Both headers are in OpenSSL
--   format. The possible values for the attribute are <tt>true</tt> and
--   <tt>false</tt>. The default is <tt>false</tt>.</li>
--   <li><tt>routing.http.xff_client_port.enabled</tt> - Indicates whether
--   the <tt>X-Forwarded-For</tt> header should preserve the source port
--   that the client used to connect to the load balancer. The possible
--   values are <tt>true</tt> and <tt>false</tt>. The default is
--   <tt>false</tt>.</li>
--   <li><tt>routing.http2.enabled</tt> - Indicates whether HTTP/2 is
--   enabled. The possible values are <tt>true</tt> and <tt>false</tt>. The
--   default is <tt>true</tt>. Elastic Load Balancing requires that message
--   header names contain only alphanumeric characters and hyphens.</li>
--   <li><tt>waf.fail_open.enabled</tt> - Indicates whether to allow a
--   WAF-enabled load balancer to route requests to targets if it is unable
--   to forward the request to Amazon Web Services WAF. The possible values
--   are <tt>true</tt> and <tt>false</tt>. The default is
--   <tt>false</tt>.</li>
--   </ul>
--   
--   The following attribute is supported by Network Load Balancers and
--   Gateway Load Balancers:
--   
--   <ul>
--   <li><tt>load_balancing.cross_zone.enabled</tt> - Indicates whether
--   cross-zone load balancing is enabled. The possible values are
--   <tt>true</tt> and <tt>false</tt>. The default is <tt>false</tt>.</li>
--   </ul>
newLoadBalancerAttribute :: LoadBalancerAttribute

-- | Information about the state of the load balancer.
--   
--   <i>See:</i> <a>newLoadBalancerState</a> smart constructor.
data LoadBalancerState
LoadBalancerState' :: Maybe Text -> Maybe LoadBalancerStateEnum -> LoadBalancerState

-- | Create a value of <a>LoadBalancerState</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:reason:LoadBalancerState'</a>, <a>loadBalancerState_reason</a>
--   - A description of the state.
--   
--   <a>$sel:code:LoadBalancerState'</a>, <a>loadBalancerState_code</a> -
--   The state code. The initial state of the load balancer is
--   <tt>provisioning</tt>. After the load balancer is fully set up and
--   ready to route traffic, its state is <tt>active</tt>. If load balancer
--   is routing traffic but does not have the resources it needs to scale,
--   its state is<tt>active_impaired</tt>. If the load balancer could not
--   be set up, its state is <tt>failed</tt>.
newLoadBalancerState :: LoadBalancerState

-- | The codes to use when checking for a successful response from a
--   target. If the protocol version is gRPC, these are gRPC codes.
--   Otherwise, these are HTTP codes.
--   
--   <i>See:</i> <a>newMatcher</a> smart constructor.
data Matcher
Matcher' :: Maybe Text -> Maybe Text -> Matcher

-- | Create a value of <a>Matcher</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpCode:Matcher'</a>, <a>matcher_httpCode</a> - For
--   Application Load Balancers, you can specify values between 200 and
--   499, and the default value is 200. You can specify multiple values
--   (for example, "200,202") or a range of values (for example,
--   "200-299").
--   
--   For Network Load Balancers and Gateway Load Balancers, this must be
--   "200–399".
--   
--   Note that when using shorthand syntax, some values such as commas need
--   to be escaped.
--   
--   <a>$sel:grpcCode:Matcher'</a>, <a>matcher_grpcCode</a> - You can
--   specify values between 0 and 99. You can specify multiple values (for
--   example, "0,1") or a range of values (for example, "0-5"). The default
--   value is 12.
newMatcher :: Matcher

-- | Information about a path pattern condition.
--   
--   <i>See:</i> <a>newPathPatternConditionConfig</a> smart constructor.
data PathPatternConditionConfig
PathPatternConditionConfig' :: Maybe [Text] -> PathPatternConditionConfig

-- | Create a value of <a>PathPatternConditionConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:values:PathPatternConditionConfig'</a>,
--   <a>pathPatternConditionConfig_values</a> - One or more path patterns
--   to compare against the request URL. The maximum size of each string is
--   128 characters. The comparison is case sensitive. The following
--   wildcard characters are supported: * (matches 0 or more characters)
--   and ? (matches exactly 1 character).
--   
--   If you specify multiple strings, the condition is satisfied if one of
--   them matches the request URL. The path pattern is compared only to the
--   path of the URL, not to its query string. To compare against the query
--   string, use QueryStringConditionConfig.
newPathPatternConditionConfig :: PathPatternConditionConfig

-- | Information about a query string condition.
--   
--   The query string component of a URI starts after the first '?'
--   character and is terminated by either a '#' character or the end of
--   the URI. A typical query string contains key/value pairs separated by
--   '&amp;' characters. The allowed characters are specified by RFC 3986.
--   Any character can be percentage encoded.
--   
--   <i>See:</i> <a>newQueryStringConditionConfig</a> smart constructor.
data QueryStringConditionConfig
QueryStringConditionConfig' :: Maybe [QueryStringKeyValuePair] -> QueryStringConditionConfig

-- | Create a value of <a>QueryStringConditionConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:values:QueryStringConditionConfig'</a>,
--   <a>queryStringConditionConfig_values</a> - One or more key/value pairs
--   or values to find in the query string. The maximum size of each string
--   is 128 characters. The comparison is case insensitive. The following
--   wildcard characters are supported: * (matches 0 or more characters)
--   and ? (matches exactly 1 character). To search for a literal '*' or
--   '?' character in a query string, you must escape these characters in
--   <tt>Values</tt> using a '\' character.
--   
--   If you specify multiple key/value pairs or values, the condition is
--   satisfied if one of them is found in the query string.
newQueryStringConditionConfig :: QueryStringConditionConfig

-- | Information about a key/value pair.
--   
--   <i>See:</i> <a>newQueryStringKeyValuePair</a> smart constructor.
data QueryStringKeyValuePair
QueryStringKeyValuePair' :: Maybe Text -> Maybe Text -> QueryStringKeyValuePair

-- | Create a value of <a>QueryStringKeyValuePair</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:QueryStringKeyValuePair'</a>,
--   <a>queryStringKeyValuePair_value</a> - The value.
--   
--   <a>$sel:key:QueryStringKeyValuePair'</a>,
--   <a>queryStringKeyValuePair_key</a> - The key. You can omit the key.
newQueryStringKeyValuePair :: QueryStringKeyValuePair

-- | Information about a redirect action.
--   
--   A URI consists of the following components:
--   protocol://hostname:port/path?query. You must modify at least one of
--   the following components to avoid a redirect loop: protocol, hostname,
--   port, or path. Any components that you do not modify retain their
--   original values.
--   
--   You can reuse URI components using the following reserved keywords:
--   
--   <ul>
--   <li>#{protocol}</li>
--   <li>#{host}</li>
--   <li>#{port}</li>
--   <li>#{path} (the leading "/" is removed)</li>
--   <li>#{query}</li>
--   </ul>
--   
--   For example, you can change the path to "/new/#{path}", the hostname
--   to "example.#{host}", or the query to "#{query}&amp;value=xyz".
--   
--   <i>See:</i> <a>newRedirectActionConfig</a> smart constructor.
data RedirectActionConfig
RedirectActionConfig' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> RedirectActionStatusCodeEnum -> RedirectActionConfig

-- | Create a value of <a>RedirectActionConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:path:RedirectActionConfig'</a>,
--   <a>redirectActionConfig_path</a> - The absolute path, starting with
--   the leading "/". This component is not percent-encoded. The path can
--   contain #{host}, #{path}, and #{port}.
--   
--   <a>$sel:protocol:RedirectActionConfig'</a>,
--   <a>redirectActionConfig_protocol</a> - The protocol. You can specify
--   HTTP, HTTPS, or #{protocol}. You can redirect HTTP to HTTP, HTTP to
--   HTTPS, and HTTPS to HTTPS. You cannot redirect HTTPS to HTTP.
--   
--   <a>$sel:query:RedirectActionConfig'</a>,
--   <a>redirectActionConfig_query</a> - The query parameters, URL-encoded
--   when necessary, but not percent-encoded. Do not include the leading
--   "?", as it is automatically added. You can specify any of the reserved
--   keywords.
--   
--   <a>$sel:host:RedirectActionConfig'</a>,
--   <a>redirectActionConfig_host</a> - The hostname. This component is not
--   percent-encoded. The hostname can contain #{host}.
--   
--   <a>$sel:port:RedirectActionConfig'</a>,
--   <a>redirectActionConfig_port</a> - The port. You can specify a value
--   from 1 to 65535 or #{port}.
--   
--   <a>$sel:statusCode:RedirectActionConfig'</a>,
--   <a>redirectActionConfig_statusCode</a> - The HTTP redirect code. The
--   redirect is either permanent (HTTP 301) or temporary (HTTP 302).
newRedirectActionConfig :: RedirectActionStatusCodeEnum -> RedirectActionConfig

-- | Information about a rule.
--   
--   <i>See:</i> <a>newRule</a> smart constructor.
data Rule
Rule' :: Maybe Text -> Maybe [Action] -> Maybe [RuleCondition] -> Maybe Text -> Maybe Bool -> Rule

-- | Create a value of <a>Rule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:priority:Rule'</a>, <a>rule_priority</a> - The priority.
--   
--   <a>$sel:actions:Rule'</a>, <a>rule_actions</a> - The actions. Each
--   rule must include exactly one of the following types of actions:
--   <tt>forward</tt>, <tt>redirect</tt>, or <tt>fixed-response</tt>, and
--   it must be the last action to be performed.
--   
--   <a>$sel:conditions:Rule'</a>, <a>rule_conditions</a> - The conditions.
--   Each rule can include zero or one of the following conditions:
--   <tt>http-request-method</tt>, <tt>host-header</tt>,
--   <tt>path-pattern</tt>, and <tt>source-ip</tt>, and zero or more of the
--   following conditions: <tt>http-header</tt> and <tt>query-string</tt>.
--   
--   <a>$sel:ruleArn:Rule'</a>, <a>rule_ruleArn</a> - The Amazon Resource
--   Name (ARN) of the rule.
--   
--   <a>$sel:isDefault:Rule'</a>, <a>rule_isDefault</a> - Indicates whether
--   this is the default rule.
newRule :: Rule

-- | Information about a condition for a rule.
--   
--   Each rule can optionally include up to one of each of the following
--   conditions: <tt>http-request-method</tt>, <tt>host-header</tt>,
--   <tt>path-pattern</tt>, and <tt>source-ip</tt>. Each rule can also
--   optionally include one or more of each of the following conditions:
--   <tt>http-header</tt> and <tt>query-string</tt>.
--   
--   <i>See:</i> <a>newRuleCondition</a> smart constructor.
data RuleCondition
RuleCondition' :: Maybe Text -> Maybe HttpHeaderConditionConfig -> Maybe HostHeaderConditionConfig -> Maybe [Text] -> Maybe SourceIpConditionConfig -> Maybe HttpRequestMethodConditionConfig -> Maybe PathPatternConditionConfig -> Maybe QueryStringConditionConfig -> RuleCondition

-- | Create a value of <a>RuleCondition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:field:RuleCondition'</a>, <a>ruleCondition_field</a> - The
--   field in the HTTP request. The following are the possible values:
--   
--   <ul>
--   <li><pre>http-header</pre></li>
--   <li><pre>http-request-method</pre></li>
--   <li><pre>host-header</pre></li>
--   <li><pre>path-pattern</pre></li>
--   <li><pre>query-string</pre></li>
--   <li><pre>source-ip</pre></li>
--   </ul>
--   
--   <a>$sel:httpHeaderConfig:RuleCondition'</a>,
--   <a>ruleCondition_httpHeaderConfig</a> - Information for an HTTP header
--   condition. Specify only when <tt>Field</tt> is <tt>http-header</tt>.
--   
--   <a>$sel:hostHeaderConfig:RuleCondition'</a>,
--   <a>ruleCondition_hostHeaderConfig</a> - Information for a host header
--   condition. Specify only when <tt>Field</tt> is <tt>host-header</tt>.
--   
--   <a>$sel:values:RuleCondition'</a>, <a>ruleCondition_values</a> - The
--   condition value. Specify only when <tt>Field</tt> is
--   <tt>host-header</tt> or <tt>path-pattern</tt>. Alternatively, to
--   specify multiple host names or multiple path patterns, use
--   <tt>HostHeaderConfig</tt> or <tt>PathPatternConfig</tt>.
--   
--   If <tt>Field</tt> is <tt>host-header</tt> and you are not using
--   <tt>HostHeaderConfig</tt>, you can specify a single host name (for
--   example, my.example.com) in <tt>Values</tt>. A host name is case
--   insensitive, can be up to 128 characters in length, and can contain
--   any of the following characters.
--   
--   <ul>
--   <li>A-Z, a-z, 0-9</li>
--   <li>- .</li>
--   <li>* (matches 0 or more characters)</li>
--   <li>? (matches exactly 1 character)</li>
--   </ul>
--   
--   If <tt>Field</tt> is <tt>path-pattern</tt> and you are not using
--   <tt>PathPatternConfig</tt>, you can specify a single path pattern (for
--   example, /img/*) in <tt>Values</tt>. A path pattern is case-sensitive,
--   can be up to 128 characters in length, and can contain any of the
--   following characters.
--   
--   <ul>
--   <li>A-Z, a-z, 0-9</li>
--   <li>_ - . $ / ~ " ' @ : +</li>
--   <li>&amp; (using &amp;amp;)</li>
--   <li>* (matches 0 or more characters)</li>
--   <li>? (matches exactly 1 character)</li>
--   </ul>
--   
--   <a>$sel:sourceIpConfig:RuleCondition'</a>,
--   <a>ruleCondition_sourceIpConfig</a> - Information for a source IP
--   condition. Specify only when <tt>Field</tt> is <tt>source-ip</tt>.
--   
--   <a>$sel:httpRequestMethodConfig:RuleCondition'</a>,
--   <a>ruleCondition_httpRequestMethodConfig</a> - Information for an HTTP
--   method condition. Specify only when <tt>Field</tt> is
--   <tt>http-request-method</tt>.
--   
--   <a>$sel:pathPatternConfig:RuleCondition'</a>,
--   <a>ruleCondition_pathPatternConfig</a> - Information for a path
--   pattern condition. Specify only when <tt>Field</tt> is
--   <tt>path-pattern</tt>.
--   
--   <a>$sel:queryStringConfig:RuleCondition'</a>,
--   <a>ruleCondition_queryStringConfig</a> - Information for a query
--   string condition. Specify only when <tt>Field</tt> is
--   <tt>query-string</tt>.
newRuleCondition :: RuleCondition

-- | Information about the priorities for the rules for a listener.
--   
--   <i>See:</i> <a>newRulePriorityPair</a> smart constructor.
data RulePriorityPair
RulePriorityPair' :: Maybe Natural -> Maybe Text -> RulePriorityPair

-- | Create a value of <a>RulePriorityPair</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:priority:RulePriorityPair'</a>,
--   <a>rulePriorityPair_priority</a> - The rule priority.
--   
--   <a>$sel:ruleArn:RulePriorityPair'</a>, <a>rulePriorityPair_ruleArn</a>
--   - The Amazon Resource Name (ARN) of the rule.
newRulePriorityPair :: RulePriorityPair

-- | Information about a source IP condition.
--   
--   You can use this condition to route based on the IP address of the
--   source that connects to the load balancer. If a client is behind a
--   proxy, this is the IP address of the proxy not the IP address of the
--   client.
--   
--   <i>See:</i> <a>newSourceIpConditionConfig</a> smart constructor.
data SourceIpConditionConfig
SourceIpConditionConfig' :: Maybe [Text] -> SourceIpConditionConfig

-- | Create a value of <a>SourceIpConditionConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:values:SourceIpConditionConfig'</a>,
--   <a>sourceIpConditionConfig_values</a> - One or more source IP
--   addresses, in CIDR format. You can use both IPv4 and IPv6 addresses.
--   Wildcards are not supported.
--   
--   If you specify multiple addresses, the condition is satisfied if the
--   source IP address of the request matches one of the CIDR blocks. This
--   condition is not satisfied by the addresses in the X-Forwarded-For
--   header. To search for addresses in the X-Forwarded-For header, use
--   HttpHeaderConditionConfig.
newSourceIpConditionConfig :: SourceIpConditionConfig

-- | Information about a policy used for SSL negotiation.
--   
--   <i>See:</i> <a>newSslPolicy</a> smart constructor.
data SslPolicy
SslPolicy' :: Maybe [Text] -> Maybe [Cipher] -> Maybe Text -> Maybe [Text] -> SslPolicy

-- | Create a value of <a>SslPolicy</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:supportedLoadBalancerTypes:SslPolicy'</a>,
--   <a>sslPolicy_supportedLoadBalancerTypes</a> - The supported load
--   balancers.
--   
--   <a>$sel:ciphers:SslPolicy'</a>, <a>sslPolicy_ciphers</a> - The
--   ciphers.
--   
--   <a>$sel:name:SslPolicy'</a>, <a>sslPolicy_name</a> - The name of the
--   policy.
--   
--   <a>$sel:sslProtocols:SslPolicy'</a>, <a>sslPolicy_sslProtocols</a> -
--   The protocols.
newSslPolicy :: SslPolicy

-- | Information about a subnet mapping.
--   
--   <i>See:</i> <a>newSubnetMapping</a> smart constructor.
data SubnetMapping
SubnetMapping' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> SubnetMapping

-- | Create a value of <a>SubnetMapping</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:iPv6Address:SubnetMapping'</a>,
--   <a>subnetMapping_iPv6Address</a> - [Network Load Balancers] The IPv6
--   address.
--   
--   <a>$sel:allocationId:SubnetMapping'</a>,
--   <a>subnetMapping_allocationId</a> - [Network Load Balancers] The
--   allocation ID of the Elastic IP address for an internet-facing load
--   balancer.
--   
--   <a>$sel:privateIPv4Address:SubnetMapping'</a>,
--   <a>subnetMapping_privateIPv4Address</a> - [Network Load Balancers] The
--   private IPv4 address for an internal load balancer.
--   
--   <a>$sel:subnetId:SubnetMapping'</a>, <a>subnetMapping_subnetId</a> -
--   The ID of the subnet.
newSubnetMapping :: SubnetMapping

-- | Information about a tag.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Maybe Text -> Text -> Tag

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The value of the tag.
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The key of the tag.
newTag :: Text -> Tag

-- | The tags associated with a resource.
--   
--   <i>See:</i> <a>newTagDescription</a> smart constructor.
data TagDescription
TagDescription' :: Maybe Text -> Maybe (NonEmpty Tag) -> TagDescription

-- | Create a value of <a>TagDescription</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagDescription'</a>,
--   <a>tagDescription_resourceArn</a> - The Amazon Resource Name (ARN) of
--   the resource.
--   
--   <a>$sel:tags:TagDescription'</a>, <a>tagDescription_tags</a> -
--   Information about the tags.
newTagDescription :: TagDescription

-- | Information about a target.
--   
--   <i>See:</i> <a>newTargetDescription</a> smart constructor.
data TargetDescription
TargetDescription' :: Maybe Text -> Maybe Natural -> Text -> TargetDescription

-- | Create a value of <a>TargetDescription</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:availabilityZone:TargetDescription'</a>,
--   <a>targetDescription_availabilityZone</a> - An Availability Zone or
--   <tt>all</tt>. This determines whether the target receives traffic from
--   the load balancer nodes in the specified Availability Zone or from all
--   enabled Availability Zones for the load balancer.
--   
--   This parameter is not supported if the target type of the target group
--   is <tt>instance</tt> or <tt>alb</tt>.
--   
--   If the target type is <tt>ip</tt> and the IP address is in a subnet of
--   the VPC for the target group, the Availability Zone is automatically
--   detected and this parameter is optional. If the IP address is outside
--   the VPC, this parameter is required.
--   
--   With an Application Load Balancer, if the target type is <tt>ip</tt>
--   and the IP address is outside the VPC for the target group, the only
--   supported value is <tt>all</tt>.
--   
--   If the target type is <tt>lambda</tt>, this parameter is optional and
--   the only supported value is <tt>all</tt>.
--   
--   <a>$sel:port:TargetDescription'</a>, <a>targetDescription_port</a> -
--   The port on which the target is listening. If the target group
--   protocol is GENEVE, the supported port is 6081. If the target type is
--   <tt>alb</tt>, the targeted Application Load Balancer must have at
--   least one listener whose port matches the target group port. Not used
--   if the target is a Lambda function.
--   
--   <a>$sel:id:TargetDescription'</a>, <a>targetDescription_id</a> - The
--   ID of the target. If the target type of the target group is
--   <tt>instance</tt>, specify an instance ID. If the target type is
--   <tt>ip</tt>, specify an IP address. If the target type is
--   <tt>lambda</tt>, specify the ARN of the Lambda function. If the target
--   type is <tt>alb</tt>, specify the ARN of the Application Load Balancer
--   target.
newTargetDescription :: Text -> TargetDescription

-- | Information about a target group.
--   
--   <i>See:</i> <a>newTargetGroup</a> smart constructor.
data TargetGroup
TargetGroup' :: Maybe Text -> Maybe Matcher -> Maybe Text -> Maybe Bool -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe ProtocolEnum -> Maybe Natural -> Maybe TargetTypeEnum -> Maybe Natural -> Maybe ProtocolEnum -> Maybe [Text] -> Maybe TargetGroupIpAddressTypeEnum -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Natural -> TargetGroup

-- | Create a value of <a>TargetGroup</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:protocolVersion:TargetGroup'</a>,
--   <a>targetGroup_protocolVersion</a> - [HTTP/HTTPS protocol] The
--   protocol version. The possible values are <tt>GRPC</tt>,
--   <tt>HTTP1</tt>, and <tt>HTTP2</tt>.
--   
--   <a>$sel:matcher:TargetGroup'</a>, <a>targetGroup_matcher</a> - The
--   HTTP or gRPC codes to use when checking for a successful response from
--   a target.
--   
--   <a>$sel:healthCheckPath:TargetGroup'</a>,
--   <a>targetGroup_healthCheckPath</a> - The destination for health checks
--   on the targets.
--   
--   <a>$sel:healthCheckEnabled:TargetGroup'</a>,
--   <a>targetGroup_healthCheckEnabled</a> - Indicates whether health
--   checks are enabled.
--   
--   <a>$sel:unhealthyThresholdCount:TargetGroup'</a>,
--   <a>targetGroup_unhealthyThresholdCount</a> - The number of consecutive
--   health check failures required before considering the target
--   unhealthy.
--   
--   <a>$sel:vpcId:TargetGroup'</a>, <a>targetGroup_vpcId</a> - The ID of
--   the VPC for the targets.
--   
--   <a>$sel:targetGroupArn:TargetGroup'</a>,
--   <a>targetGroup_targetGroupArn</a> - The Amazon Resource Name (ARN) of
--   the target group.
--   
--   <a>$sel:protocol:TargetGroup'</a>, <a>targetGroup_protocol</a> - The
--   protocol to use for routing traffic to the targets.
--   
--   <a>$sel:healthCheckIntervalSeconds:TargetGroup'</a>,
--   <a>targetGroup_healthCheckIntervalSeconds</a> - The approximate amount
--   of time, in seconds, between health checks of an individual target.
--   
--   <a>$sel:targetType:TargetGroup'</a>, <a>targetGroup_targetType</a> -
--   The type of target that you must specify when registering targets with
--   this target group. The possible values are <tt>instance</tt> (register
--   targets by instance ID), <tt>ip</tt> (register targets by IP address),
--   <tt>lambda</tt> (register a single Lambda function as a target), or
--   <tt>alb</tt> (register a single Application Load Balancer as a
--   target).
--   
--   <a>$sel:healthyThresholdCount:TargetGroup'</a>,
--   <a>targetGroup_healthyThresholdCount</a> - The number of consecutive
--   health checks successes required before considering an unhealthy
--   target healthy.
--   
--   <a>$sel:healthCheckProtocol:TargetGroup'</a>,
--   <a>targetGroup_healthCheckProtocol</a> - The protocol to use to
--   connect with the target. The GENEVE, TLS, UDP, and TCP_UDP protocols
--   are not supported for health checks.
--   
--   <a>$sel:loadBalancerArns:TargetGroup'</a>,
--   <a>targetGroup_loadBalancerArns</a> - The Amazon Resource Names (ARN)
--   of the load balancers that route traffic to this target group.
--   
--   <a>$sel:ipAddressType:TargetGroup'</a>,
--   <a>targetGroup_ipAddressType</a> - The type of IP address used for
--   this target group. The possible values are <tt>ipv4</tt> and
--   <tt>ipv6</tt>. This is an optional parameter. If not specified, the IP
--   address type defaults to <tt>ipv4</tt>.
--   
--   <a>$sel:healthCheckTimeoutSeconds:TargetGroup'</a>,
--   <a>targetGroup_healthCheckTimeoutSeconds</a> - The amount of time, in
--   seconds, during which no response means a failed health check.
--   
--   <a>$sel:healthCheckPort:TargetGroup'</a>,
--   <a>targetGroup_healthCheckPort</a> - The port to use to connect with
--   the target.
--   
--   <a>$sel:targetGroupName:TargetGroup'</a>,
--   <a>targetGroup_targetGroupName</a> - The name of the target group.
--   
--   <a>$sel:port:TargetGroup'</a>, <a>targetGroup_port</a> - The port on
--   which the targets are listening. Not used if the target is a Lambda
--   function.
newTargetGroup :: TargetGroup

-- | Information about a target group attribute.
--   
--   <i>See:</i> <a>newTargetGroupAttribute</a> smart constructor.
data TargetGroupAttribute
TargetGroupAttribute' :: Maybe Text -> Maybe Text -> TargetGroupAttribute

-- | Create a value of <a>TargetGroupAttribute</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:TargetGroupAttribute'</a>,
--   <a>targetGroupAttribute_value</a> - The value of the attribute.
--   
--   <a>$sel:key:TargetGroupAttribute'</a>, <a>targetGroupAttribute_key</a>
--   - The name of the attribute.
--   
--   The following attribute is supported by all load balancers:
--   
--   <ul>
--   <li><tt>deregistration_delay.timeout_seconds</tt> - The amount of
--   time, in seconds, for Elastic Load Balancing to wait before changing
--   the state of a deregistering target from <tt>draining</tt> to
--   <tt>unused</tt>. The range is 0-3600 seconds. The default value is 300
--   seconds. If the target is a Lambda function, this attribute is not
--   supported.</li>
--   </ul>
--   
--   The following attributes are supported by both Application Load
--   Balancers and Network Load Balancers:
--   
--   <ul>
--   <li><tt>stickiness.enabled</tt> - Indicates whether sticky sessions
--   are enabled. The value is <tt>true</tt> or <tt>false</tt>. The default
--   is <tt>false</tt>.</li>
--   <li><tt>stickiness.type</tt> - The type of sticky sessions. The
--   possible values are <tt>lb_cookie</tt> and <tt>app_cookie</tt> for
--   Application Load Balancers or <tt>source_ip</tt> for Network Load
--   Balancers.</li>
--   </ul>
--   
--   The following attributes are supported only if the load balancer is an
--   Application Load Balancer and the target is an instance or an IP
--   address:
--   
--   <ul>
--   <li><tt>load_balancing.algorithm.type</tt> - The load balancing
--   algorithm determines how the load balancer selects targets when
--   routing requests. The value is <tt>round_robin</tt> or
--   <tt>least_outstanding_requests</tt>. The default is
--   <tt>round_robin</tt>.</li>
--   <li><tt>slow_start.duration_seconds</tt> - The time period, in
--   seconds, during which a newly registered target receives an increasing
--   share of the traffic to the target group. After this time period ends,
--   the target receives its full share of traffic. The range is 30-900
--   seconds (15 minutes). The default is 0 seconds (disabled).</li>
--   <li><tt>stickiness.app_cookie.cookie_name</tt> - Indicates the name of
--   the application-based cookie. Names that start with the following
--   prefixes are not allowed: <tt>AWSALB</tt>, <tt>AWSALBAPP</tt>, and
--   <tt>AWSALBTG</tt>; they're reserved for use by the load balancer.</li>
--   <li><tt>stickiness.app_cookie.duration_seconds</tt> - The time period,
--   in seconds, during which requests from a client should be routed to
--   the same target. After this time period expires, the application-based
--   cookie is considered stale. The range is 1 second to 1 week (604800
--   seconds). The default value is 1 day (86400 seconds).</li>
--   <li><tt>stickiness.lb_cookie.duration_seconds</tt> - The time period,
--   in seconds, during which requests from a client should be routed to
--   the same target. After this time period expires, the load
--   balancer-generated cookie is considered stale. The range is 1 second
--   to 1 week (604800 seconds). The default value is 1 day (86400
--   seconds).</li>
--   </ul>
--   
--   The following attribute is supported only if the load balancer is an
--   Application Load Balancer and the target is a Lambda function:
--   
--   <ul>
--   <li><tt>lambda.multi_value_headers.enabled</tt> - Indicates whether
--   the request and response headers that are exchanged between the load
--   balancer and the Lambda function include arrays of values or strings.
--   The value is <tt>true</tt> or <tt>false</tt>. The default is
--   <tt>false</tt>. If the value is <tt>false</tt> and the request
--   contains a duplicate header field name or query parameter key, the
--   load balancer uses the last value sent by the client.</li>
--   </ul>
--   
--   The following attributes are supported only by Network Load Balancers:
--   
--   <ul>
--   <li><tt>deregistration_delay.connection_termination.enabled</tt> -
--   Indicates whether the load balancer terminates connections at the end
--   of the deregistration timeout. The value is <tt>true</tt> or
--   <tt>false</tt>. The default is <tt>false</tt>.</li>
--   <li><tt>preserve_client_ip.enabled</tt> - Indicates whether client IP
--   preservation is enabled. The value is <tt>true</tt> or <tt>false</tt>.
--   The default is disabled if the target group type is IP address and the
--   target group protocol is TCP or TLS. Otherwise, the default is
--   enabled. Client IP preservation cannot be disabled for UDP and TCP_UDP
--   target groups.</li>
--   <li><tt>proxy_protocol_v2.enabled</tt> - Indicates whether Proxy
--   Protocol version 2 is enabled. The value is <tt>true</tt> or
--   <tt>false</tt>. The default is <tt>false</tt>.</li>
--   </ul>
newTargetGroupAttribute :: TargetGroupAttribute

-- | Information about the target group stickiness for a rule.
--   
--   <i>See:</i> <a>newTargetGroupStickinessConfig</a> smart constructor.
data TargetGroupStickinessConfig
TargetGroupStickinessConfig' :: Maybe Bool -> Maybe Int -> TargetGroupStickinessConfig

-- | Create a value of <a>TargetGroupStickinessConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabled:TargetGroupStickinessConfig'</a>,
--   <a>targetGroupStickinessConfig_enabled</a> - Indicates whether target
--   group stickiness is enabled.
--   
--   <a>$sel:durationSeconds:TargetGroupStickinessConfig'</a>,
--   <a>targetGroupStickinessConfig_durationSeconds</a> - The time period,
--   in seconds, during which requests from a client should be routed to
--   the same target group. The range is 1-604800 seconds (7 days).
newTargetGroupStickinessConfig :: TargetGroupStickinessConfig

-- | Information about how traffic will be distributed between multiple
--   target groups in a forward rule.
--   
--   <i>See:</i> <a>newTargetGroupTuple</a> smart constructor.
data TargetGroupTuple
TargetGroupTuple' :: Maybe Int -> Maybe Text -> TargetGroupTuple

-- | Create a value of <a>TargetGroupTuple</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:weight:TargetGroupTuple'</a>, <a>targetGroupTuple_weight</a> -
--   The weight. The range is 0 to 999.
--   
--   <a>$sel:targetGroupArn:TargetGroupTuple'</a>,
--   <a>targetGroupTuple_targetGroupArn</a> - The Amazon Resource Name
--   (ARN) of the target group.
newTargetGroupTuple :: TargetGroupTuple

-- | Information about the current health of a target.
--   
--   <i>See:</i> <a>newTargetHealth</a> smart constructor.
data TargetHealth
TargetHealth' :: Maybe TargetHealthStateEnum -> Maybe TargetHealthReasonEnum -> Maybe Text -> TargetHealth

-- | Create a value of <a>TargetHealth</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:TargetHealth'</a>, <a>targetHealth_state</a> - The state
--   of the target.
--   
--   <a>$sel:reason:TargetHealth'</a>, <a>targetHealth_reason</a> - The
--   reason code.
--   
--   If the target state is <tt>healthy</tt>, a reason code is not
--   provided.
--   
--   If the target state is <tt>initial</tt>, the reason code can be one of
--   the following values:
--   
--   <ul>
--   <li><tt>Elb.RegistrationInProgress</tt> - The target is in the process
--   of being registered with the load balancer.</li>
--   <li><tt>Elb.InitialHealthChecking</tt> - The load balancer is still
--   sending the target the minimum number of health checks required to
--   determine its health status.</li>
--   </ul>
--   
--   If the target state is <tt>unhealthy</tt>, the reason code can be one
--   of the following values:
--   
--   <ul>
--   <li><tt>Target.ResponseCodeMismatch</tt> - The health checks did not
--   return an expected HTTP code. Applies only to Application Load
--   Balancers and Gateway Load Balancers.</li>
--   <li><tt>Target.Timeout</tt> - The health check requests timed out.
--   Applies only to Application Load Balancers and Gateway Load
--   Balancers.</li>
--   <li><tt>Target.FailedHealthChecks</tt> - The load balancer received an
--   error while establishing a connection to the target or the target
--   response was malformed.</li>
--   <li><tt>Elb.InternalError</tt> - The health checks failed due to an
--   internal error. Applies only to Application Load Balancers.</li>
--   </ul>
--   
--   If the target state is <tt>unused</tt>, the reason code can be one of
--   the following values:
--   
--   <ul>
--   <li><tt>Target.NotRegistered</tt> - The target is not registered with
--   the target group.</li>
--   <li><tt>Target.NotInUse</tt> - The target group is not used by any
--   load balancer or the target is in an Availability Zone that is not
--   enabled for its load balancer.</li>
--   <li><tt>Target.InvalidState</tt> - The target is in the stopped or
--   terminated state.</li>
--   <li><tt>Target.IpUnusable</tt> - The target IP address is reserved for
--   use by a load balancer.</li>
--   </ul>
--   
--   If the target state is <tt>draining</tt>, the reason code can be the
--   following value:
--   
--   <ul>
--   <li><tt>Target.DeregistrationInProgress</tt> - The target is in the
--   process of being deregistered and the deregistration delay period has
--   not expired.</li>
--   </ul>
--   
--   If the target state is <tt>unavailable</tt>, the reason code can be
--   the following value:
--   
--   <ul>
--   <li><tt>Target.HealthCheckDisabled</tt> - Health checks are disabled
--   for the target group. Applies only to Application Load Balancers.</li>
--   <li><tt>Elb.InternalError</tt> - Target health is unavailable due to
--   an internal error. Applies only to Network Load Balancers.</li>
--   </ul>
--   
--   <a>$sel:description:TargetHealth'</a>, <a>targetHealth_description</a>
--   - A description of the target health that provides additional details.
--   If the state is <tt>healthy</tt>, a description is not provided.
newTargetHealth :: TargetHealth

-- | Information about the health of a target.
--   
--   <i>See:</i> <a>newTargetHealthDescription</a> smart constructor.
data TargetHealthDescription
TargetHealthDescription' :: Maybe TargetHealth -> Maybe Text -> Maybe TargetDescription -> TargetHealthDescription

-- | Create a value of <a>TargetHealthDescription</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetHealth:TargetHealthDescription'</a>,
--   <a>targetHealthDescription_targetHealth</a> - The health information
--   for the target.
--   
--   <a>$sel:healthCheckPort:TargetHealthDescription'</a>,
--   <a>targetHealthDescription_healthCheckPort</a> - The port to use to
--   connect with the target.
--   
--   <a>$sel:target:TargetHealthDescription'</a>,
--   <a>targetHealthDescription_target</a> - The description of the target.
newTargetHealthDescription :: TargetHealthDescription
