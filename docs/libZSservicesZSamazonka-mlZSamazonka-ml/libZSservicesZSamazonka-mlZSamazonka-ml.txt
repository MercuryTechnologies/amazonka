-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-mlZSamazonka-ml
@version 1.6.1


module Network.AWS.MachineLearning.Types.Algorithm

-- | The function used to train an <tt>MLModel</tt>. Training choices
--   supported by Amazon ML include the following:
--   
--   <ul>
--   <li><tt>SGD</tt> - Stochastic Gradient Descent.</li>
--   <li><tt>RandomForest</tt> - Random forest of decision trees.</li>
--   </ul>
newtype Algorithm
Algorithm' :: Text -> Algorithm
[fromAlgorithm] :: Algorithm -> Text
pattern Algorithm_Sgd :: Algorithm
instance Network.AWS.Data.XML.ToXML Network.AWS.MachineLearning.Types.Algorithm.Algorithm
instance Network.AWS.Data.XML.FromXML Network.AWS.MachineLearning.Types.Algorithm.Algorithm
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.MachineLearning.Types.Algorithm.Algorithm
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MachineLearning.Types.Algorithm.Algorithm
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.MachineLearning.Types.Algorithm.Algorithm
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.MachineLearning.Types.Algorithm.Algorithm
instance Network.AWS.Data.Query.ToQuery Network.AWS.MachineLearning.Types.Algorithm.Algorithm
instance Network.AWS.Data.Headers.ToHeader Network.AWS.MachineLearning.Types.Algorithm.Algorithm
instance Network.AWS.Data.Log.ToLog Network.AWS.MachineLearning.Types.Algorithm.Algorithm
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.MachineLearning.Types.Algorithm.Algorithm
instance Network.AWS.Data.Text.ToText Network.AWS.MachineLearning.Types.Algorithm.Algorithm
instance Network.AWS.Data.Text.FromText Network.AWS.MachineLearning.Types.Algorithm.Algorithm
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.Types.Algorithm.Algorithm
instance Data.Hashable.Class.Hashable Network.AWS.MachineLearning.Types.Algorithm.Algorithm
instance GHC.Generics.Generic Network.AWS.MachineLearning.Types.Algorithm.Algorithm
instance GHC.Classes.Ord Network.AWS.MachineLearning.Types.Algorithm.Algorithm
instance GHC.Classes.Eq Network.AWS.MachineLearning.Types.Algorithm.Algorithm
instance GHC.Read.Read Network.AWS.MachineLearning.Types.Algorithm.Algorithm
instance GHC.Show.Show Network.AWS.MachineLearning.Types.Algorithm.Algorithm


module Network.AWS.MachineLearning.Types.BatchPredictionFilterVariable

-- | A list of the variables to use in searching or filtering
--   <tt>BatchPrediction</tt>.
--   
--   <ul>
--   <li><tt>CreatedAt</tt> - Sets the search criteria to
--   <tt>BatchPrediction</tt> creation date.</li>
--   <li><tt>Status</tt> - Sets the search criteria to
--   <tt>BatchPrediction</tt> status.</li>
--   <li><tt>Name</tt> - Sets the search criteria to the contents of
--   <tt>BatchPrediction</tt> <tt>Name</tt>.</li>
--   <li><tt>IAMUser</tt> - Sets the search criteria to the user account
--   that invoked the <tt>BatchPrediction</tt> creation.</li>
--   <li><tt>MLModelId</tt> - Sets the search criteria to the
--   <tt>MLModel</tt> used in the <tt>BatchPrediction</tt>.</li>
--   <li><tt>DataSourceId</tt> - Sets the search criteria to the
--   <tt>DataSource</tt> used in the <tt>BatchPrediction</tt>.</li>
--   <li><tt>DataURI</tt> - Sets the search criteria to the data file(s)
--   used in the <tt>BatchPrediction</tt>. The URL can identify either a
--   file or an Amazon Simple Storage Service (Amazon S3) bucket or
--   directory.</li>
--   </ul>
newtype BatchPredictionFilterVariable
BatchPredictionFilterVariable' :: Text -> BatchPredictionFilterVariable
[fromBatchPredictionFilterVariable] :: BatchPredictionFilterVariable -> Text
pattern BatchPredictionFilterVariable_CreatedAt :: BatchPredictionFilterVariable
pattern BatchPredictionFilterVariable_DataSourceId :: BatchPredictionFilterVariable
pattern BatchPredictionFilterVariable_DataURI :: BatchPredictionFilterVariable
pattern BatchPredictionFilterVariable_IAMUser :: BatchPredictionFilterVariable
pattern BatchPredictionFilterVariable_LastUpdatedAt :: BatchPredictionFilterVariable
pattern BatchPredictionFilterVariable_MLModelId :: BatchPredictionFilterVariable
pattern BatchPredictionFilterVariable_Name :: BatchPredictionFilterVariable
pattern BatchPredictionFilterVariable_Status :: BatchPredictionFilterVariable
instance Network.AWS.Data.XML.ToXML Network.AWS.MachineLearning.Types.BatchPredictionFilterVariable.BatchPredictionFilterVariable
instance Network.AWS.Data.XML.FromXML Network.AWS.MachineLearning.Types.BatchPredictionFilterVariable.BatchPredictionFilterVariable
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.MachineLearning.Types.BatchPredictionFilterVariable.BatchPredictionFilterVariable
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MachineLearning.Types.BatchPredictionFilterVariable.BatchPredictionFilterVariable
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.MachineLearning.Types.BatchPredictionFilterVariable.BatchPredictionFilterVariable
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.MachineLearning.Types.BatchPredictionFilterVariable.BatchPredictionFilterVariable
instance Network.AWS.Data.Query.ToQuery Network.AWS.MachineLearning.Types.BatchPredictionFilterVariable.BatchPredictionFilterVariable
instance Network.AWS.Data.Headers.ToHeader Network.AWS.MachineLearning.Types.BatchPredictionFilterVariable.BatchPredictionFilterVariable
instance Network.AWS.Data.Log.ToLog Network.AWS.MachineLearning.Types.BatchPredictionFilterVariable.BatchPredictionFilterVariable
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.MachineLearning.Types.BatchPredictionFilterVariable.BatchPredictionFilterVariable
instance Network.AWS.Data.Text.ToText Network.AWS.MachineLearning.Types.BatchPredictionFilterVariable.BatchPredictionFilterVariable
instance Network.AWS.Data.Text.FromText Network.AWS.MachineLearning.Types.BatchPredictionFilterVariable.BatchPredictionFilterVariable
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.Types.BatchPredictionFilterVariable.BatchPredictionFilterVariable
instance Data.Hashable.Class.Hashable Network.AWS.MachineLearning.Types.BatchPredictionFilterVariable.BatchPredictionFilterVariable
instance GHC.Generics.Generic Network.AWS.MachineLearning.Types.BatchPredictionFilterVariable.BatchPredictionFilterVariable
instance GHC.Classes.Ord Network.AWS.MachineLearning.Types.BatchPredictionFilterVariable.BatchPredictionFilterVariable
instance GHC.Classes.Eq Network.AWS.MachineLearning.Types.BatchPredictionFilterVariable.BatchPredictionFilterVariable
instance GHC.Read.Read Network.AWS.MachineLearning.Types.BatchPredictionFilterVariable.BatchPredictionFilterVariable
instance GHC.Show.Show Network.AWS.MachineLearning.Types.BatchPredictionFilterVariable.BatchPredictionFilterVariable


module Network.AWS.MachineLearning.Types.DataSourceFilterVariable

-- | A list of the variables to use in searching or filtering
--   <tt>DataSource</tt>.
--   
--   <ul>
--   <li><tt>CreatedAt</tt> - Sets the search criteria to
--   <tt>DataSource</tt> creation date.</li>
--   <li><tt>Status</tt> - Sets the search criteria to <tt>DataSource</tt>
--   status.</li>
--   <li><tt>Name</tt> - Sets the search criteria to the contents of
--   <tt>DataSource</tt> <tt>Name</tt>.</li>
--   <li><tt>DataUri</tt> - Sets the search criteria to the URI of data
--   files used to create the <tt>DataSource</tt>. The URI can identify
--   either a file or an Amazon Simple Storage Service (Amazon S3) bucket
--   or directory.</li>
--   <li><tt>IAMUser</tt> - Sets the search criteria to the user account
--   that invoked the <tt>DataSource</tt> creation.</li>
--   </ul>
--   
--   <b>Note:</b> The variable names should match the variable names in the
--   <tt>DataSource</tt>.
newtype DataSourceFilterVariable
DataSourceFilterVariable' :: Text -> DataSourceFilterVariable
[fromDataSourceFilterVariable] :: DataSourceFilterVariable -> Text
pattern DataSourceFilterVariable_CreatedAt :: DataSourceFilterVariable
pattern DataSourceFilterVariable_DataLocationS3 :: DataSourceFilterVariable
pattern DataSourceFilterVariable_IAMUser :: DataSourceFilterVariable
pattern DataSourceFilterVariable_LastUpdatedAt :: DataSourceFilterVariable
pattern DataSourceFilterVariable_Name :: DataSourceFilterVariable
pattern DataSourceFilterVariable_Status :: DataSourceFilterVariable
instance Network.AWS.Data.XML.ToXML Network.AWS.MachineLearning.Types.DataSourceFilterVariable.DataSourceFilterVariable
instance Network.AWS.Data.XML.FromXML Network.AWS.MachineLearning.Types.DataSourceFilterVariable.DataSourceFilterVariable
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.MachineLearning.Types.DataSourceFilterVariable.DataSourceFilterVariable
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MachineLearning.Types.DataSourceFilterVariable.DataSourceFilterVariable
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.MachineLearning.Types.DataSourceFilterVariable.DataSourceFilterVariable
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.MachineLearning.Types.DataSourceFilterVariable.DataSourceFilterVariable
instance Network.AWS.Data.Query.ToQuery Network.AWS.MachineLearning.Types.DataSourceFilterVariable.DataSourceFilterVariable
instance Network.AWS.Data.Headers.ToHeader Network.AWS.MachineLearning.Types.DataSourceFilterVariable.DataSourceFilterVariable
instance Network.AWS.Data.Log.ToLog Network.AWS.MachineLearning.Types.DataSourceFilterVariable.DataSourceFilterVariable
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.MachineLearning.Types.DataSourceFilterVariable.DataSourceFilterVariable
instance Network.AWS.Data.Text.ToText Network.AWS.MachineLearning.Types.DataSourceFilterVariable.DataSourceFilterVariable
instance Network.AWS.Data.Text.FromText Network.AWS.MachineLearning.Types.DataSourceFilterVariable.DataSourceFilterVariable
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.Types.DataSourceFilterVariable.DataSourceFilterVariable
instance Data.Hashable.Class.Hashable Network.AWS.MachineLearning.Types.DataSourceFilterVariable.DataSourceFilterVariable
instance GHC.Generics.Generic Network.AWS.MachineLearning.Types.DataSourceFilterVariable.DataSourceFilterVariable
instance GHC.Classes.Ord Network.AWS.MachineLearning.Types.DataSourceFilterVariable.DataSourceFilterVariable
instance GHC.Classes.Eq Network.AWS.MachineLearning.Types.DataSourceFilterVariable.DataSourceFilterVariable
instance GHC.Read.Read Network.AWS.MachineLearning.Types.DataSourceFilterVariable.DataSourceFilterVariable
instance GHC.Show.Show Network.AWS.MachineLearning.Types.DataSourceFilterVariable.DataSourceFilterVariable


module Network.AWS.MachineLearning.Types.DetailsAttributes

-- | Contains the key values of <tt>DetailsMap</tt>:
--   
--   <ul>
--   <li><tt>PredictiveModelType</tt> - Indicates the type of the
--   <tt>MLModel</tt>.</li>
--   <li><tt>Algorithm</tt> - Indicates the algorithm that was used for the
--   <tt>MLModel</tt>.</li>
--   </ul>
newtype DetailsAttributes
DetailsAttributes' :: Text -> DetailsAttributes
[fromDetailsAttributes] :: DetailsAttributes -> Text
pattern DetailsAttributes_Algorithm :: DetailsAttributes
pattern DetailsAttributes_PredictiveModelType :: DetailsAttributes
instance Network.AWS.Data.XML.ToXML Network.AWS.MachineLearning.Types.DetailsAttributes.DetailsAttributes
instance Network.AWS.Data.XML.FromXML Network.AWS.MachineLearning.Types.DetailsAttributes.DetailsAttributes
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.MachineLearning.Types.DetailsAttributes.DetailsAttributes
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MachineLearning.Types.DetailsAttributes.DetailsAttributes
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.MachineLearning.Types.DetailsAttributes.DetailsAttributes
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.MachineLearning.Types.DetailsAttributes.DetailsAttributes
instance Network.AWS.Data.Query.ToQuery Network.AWS.MachineLearning.Types.DetailsAttributes.DetailsAttributes
instance Network.AWS.Data.Headers.ToHeader Network.AWS.MachineLearning.Types.DetailsAttributes.DetailsAttributes
instance Network.AWS.Data.Log.ToLog Network.AWS.MachineLearning.Types.DetailsAttributes.DetailsAttributes
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.MachineLearning.Types.DetailsAttributes.DetailsAttributes
instance Network.AWS.Data.Text.ToText Network.AWS.MachineLearning.Types.DetailsAttributes.DetailsAttributes
instance Network.AWS.Data.Text.FromText Network.AWS.MachineLearning.Types.DetailsAttributes.DetailsAttributes
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.Types.DetailsAttributes.DetailsAttributes
instance Data.Hashable.Class.Hashable Network.AWS.MachineLearning.Types.DetailsAttributes.DetailsAttributes
instance GHC.Generics.Generic Network.AWS.MachineLearning.Types.DetailsAttributes.DetailsAttributes
instance GHC.Classes.Ord Network.AWS.MachineLearning.Types.DetailsAttributes.DetailsAttributes
instance GHC.Classes.Eq Network.AWS.MachineLearning.Types.DetailsAttributes.DetailsAttributes
instance GHC.Read.Read Network.AWS.MachineLearning.Types.DetailsAttributes.DetailsAttributes
instance GHC.Show.Show Network.AWS.MachineLearning.Types.DetailsAttributes.DetailsAttributes


module Network.AWS.MachineLearning.Types.EntityStatus

-- | Object status with the following possible values:
--   
--   <ul>
--   <li><pre>PENDING</pre></li>
--   <li><pre>INPROGRESS</pre></li>
--   <li><pre>FAILED</pre></li>
--   <li><pre>COMPLETED</pre></li>
--   <li><pre>DELETED</pre></li>
--   </ul>
newtype EntityStatus
EntityStatus' :: Text -> EntityStatus
[fromEntityStatus] :: EntityStatus -> Text
pattern EntityStatus_COMPLETED :: EntityStatus
pattern EntityStatus_DELETED :: EntityStatus
pattern EntityStatus_FAILED :: EntityStatus
pattern EntityStatus_INPROGRESS :: EntityStatus
pattern EntityStatus_PENDING :: EntityStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.MachineLearning.Types.EntityStatus.EntityStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.MachineLearning.Types.EntityStatus.EntityStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.MachineLearning.Types.EntityStatus.EntityStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MachineLearning.Types.EntityStatus.EntityStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.MachineLearning.Types.EntityStatus.EntityStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.MachineLearning.Types.EntityStatus.EntityStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.MachineLearning.Types.EntityStatus.EntityStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.MachineLearning.Types.EntityStatus.EntityStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.MachineLearning.Types.EntityStatus.EntityStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.MachineLearning.Types.EntityStatus.EntityStatus
instance Network.AWS.Data.Text.ToText Network.AWS.MachineLearning.Types.EntityStatus.EntityStatus
instance Network.AWS.Data.Text.FromText Network.AWS.MachineLearning.Types.EntityStatus.EntityStatus
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.Types.EntityStatus.EntityStatus
instance Data.Hashable.Class.Hashable Network.AWS.MachineLearning.Types.EntityStatus.EntityStatus
instance GHC.Generics.Generic Network.AWS.MachineLearning.Types.EntityStatus.EntityStatus
instance GHC.Classes.Ord Network.AWS.MachineLearning.Types.EntityStatus.EntityStatus
instance GHC.Classes.Eq Network.AWS.MachineLearning.Types.EntityStatus.EntityStatus
instance GHC.Read.Read Network.AWS.MachineLearning.Types.EntityStatus.EntityStatus
instance GHC.Show.Show Network.AWS.MachineLearning.Types.EntityStatus.EntityStatus


module Network.AWS.MachineLearning.Types.BatchPrediction

-- | Represents the output of a <tt>GetBatchPrediction</tt> operation.
--   
--   The content consists of the detailed metadata, the status, and the
--   data file information of a <tt>Batch Prediction</tt>.
--   
--   <i>See:</i> <a>newBatchPrediction</a> smart constructor.
data BatchPrediction
BatchPrediction' :: Maybe EntityStatus -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Integer -> Maybe Integer -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Integer -> Maybe POSIX -> BatchPrediction

-- | The status of the <tt>BatchPrediction</tt>. This element can have one
--   of the following values:
--   
--   <ul>
--   <li><tt>PENDING</tt> - Amazon Machine Learning (Amazon ML) submitted a
--   request to generate predictions for a batch of observations.</li>
--   <li><tt>INPROGRESS</tt> - The process is underway.</li>
--   <li><tt>FAILED</tt> - The request to perform a batch prediction did
--   not run to completion. It is not usable.</li>
--   <li><tt>COMPLETED</tt> - The batch prediction process completed
--   successfully.</li>
--   <li><tt>DELETED</tt> - The <tt>BatchPrediction</tt> is marked as
--   deleted. It is not usable.</li>
--   </ul>
[$sel:status:BatchPrediction'] :: BatchPrediction -> Maybe EntityStatus

-- | The ID assigned to the <tt>BatchPrediction</tt> at creation. This
--   value should be identical to the value of the
--   <tt>BatchPredictionID</tt> in the request.
[$sel:batchPredictionId:BatchPrediction'] :: BatchPrediction -> Maybe Text
[$sel:startedAt:BatchPrediction'] :: BatchPrediction -> Maybe POSIX

-- | The location of an Amazon S3 bucket or directory to receive the
--   operation results. The following substrings are not allowed in the
--   <tt>s3 key</tt> portion of the <tt>outputURI</tt> field: ':', '//',
--   '/./', '/../'.
[$sel:outputUri:BatchPrediction'] :: BatchPrediction -> Maybe Text

-- | A description of the most recent details about processing the batch
--   prediction request.
[$sel:message:BatchPrediction'] :: BatchPrediction -> Maybe Text

-- | The time that the <tt>BatchPrediction</tt> was created. The time is
--   expressed in epoch time.
[$sel:createdAt:BatchPrediction'] :: BatchPrediction -> Maybe POSIX

-- | A user-supplied name or description of the <tt>BatchPrediction</tt>.
[$sel:name:BatchPrediction'] :: BatchPrediction -> Maybe Text

-- | The AWS user account that invoked the <tt>BatchPrediction</tt>. The
--   account type can be either an AWS root account or an AWS Identity and
--   Access Management (IAM) user account.
[$sel:createdByIamUser:BatchPrediction'] :: BatchPrediction -> Maybe Text
[$sel:finishedAt:BatchPrediction'] :: BatchPrediction -> Maybe POSIX
[$sel:invalidRecordCount:BatchPrediction'] :: BatchPrediction -> Maybe Integer
[$sel:totalRecordCount:BatchPrediction'] :: BatchPrediction -> Maybe Integer

-- | The ID of the <tt>DataSource</tt> that points to the group of
--   observations to predict.
[$sel:batchPredictionDataSourceId:BatchPrediction'] :: BatchPrediction -> Maybe Text

-- | The ID of the <tt>MLModel</tt> that generated predictions for the
--   <tt>BatchPrediction</tt> request.
[$sel:mLModelId:BatchPrediction'] :: BatchPrediction -> Maybe Text

-- | The location of the data file or directory in Amazon Simple Storage
--   Service (Amazon S3).
[$sel:inputDataLocationS3:BatchPrediction'] :: BatchPrediction -> Maybe Text
[$sel:computeTime:BatchPrediction'] :: BatchPrediction -> Maybe Integer

-- | The time of the most recent edit to the <tt>BatchPrediction</tt>. The
--   time is expressed in epoch time.
[$sel:lastUpdatedAt:BatchPrediction'] :: BatchPrediction -> Maybe POSIX

-- | Create a value of <a>BatchPrediction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:BatchPrediction'</a>, <a>batchPrediction_status</a> -
--   The status of the <tt>BatchPrediction</tt>. This element can have one
--   of the following values:
--   
--   <ul>
--   <li><tt>PENDING</tt> - Amazon Machine Learning (Amazon ML) submitted a
--   request to generate predictions for a batch of observations.</li>
--   <li><tt>INPROGRESS</tt> - The process is underway.</li>
--   <li><tt>FAILED</tt> - The request to perform a batch prediction did
--   not run to completion. It is not usable.</li>
--   <li><tt>COMPLETED</tt> - The batch prediction process completed
--   successfully.</li>
--   <li><tt>DELETED</tt> - The <tt>BatchPrediction</tt> is marked as
--   deleted. It is not usable.</li>
--   </ul>
--   
--   <a>$sel:batchPredictionId:BatchPrediction'</a>,
--   <a>batchPrediction_batchPredictionId</a> - The ID assigned to the
--   <tt>BatchPrediction</tt> at creation. This value should be identical
--   to the value of the <tt>BatchPredictionID</tt> in the request.
--   
--   <a>$sel:startedAt:BatchPrediction'</a>,
--   <a>batchPrediction_startedAt</a> - Undocumented member.
--   
--   <a>$sel:outputUri:BatchPrediction'</a>,
--   <a>batchPrediction_outputUri</a> - The location of an Amazon S3 bucket
--   or directory to receive the operation results. The following
--   substrings are not allowed in the <tt>s3 key</tt> portion of the
--   <tt>outputURI</tt> field: ':', '//', '/./', '/../'.
--   
--   <a>$sel:message:BatchPrediction'</a>, <a>batchPrediction_message</a> -
--   A description of the most recent details about processing the batch
--   prediction request.
--   
--   <a>$sel:createdAt:BatchPrediction'</a>,
--   <a>batchPrediction_createdAt</a> - The time that the
--   <tt>BatchPrediction</tt> was created. The time is expressed in epoch
--   time.
--   
--   <a>$sel:name:BatchPrediction'</a>, <a>batchPrediction_name</a> - A
--   user-supplied name or description of the <tt>BatchPrediction</tt>.
--   
--   <a>$sel:createdByIamUser:BatchPrediction'</a>,
--   <a>batchPrediction_createdByIamUser</a> - The AWS user account that
--   invoked the <tt>BatchPrediction</tt>. The account type can be either
--   an AWS root account or an AWS Identity and Access Management (IAM)
--   user account.
--   
--   <a>$sel:finishedAt:BatchPrediction'</a>,
--   <a>batchPrediction_finishedAt</a> - Undocumented member.
--   
--   <a>$sel:invalidRecordCount:BatchPrediction'</a>,
--   <a>batchPrediction_invalidRecordCount</a> - Undocumented member.
--   
--   <a>$sel:totalRecordCount:BatchPrediction'</a>,
--   <a>batchPrediction_totalRecordCount</a> - Undocumented member.
--   
--   <a>$sel:batchPredictionDataSourceId:BatchPrediction'</a>,
--   <a>batchPrediction_batchPredictionDataSourceId</a> - The ID of the
--   <tt>DataSource</tt> that points to the group of observations to
--   predict.
--   
--   <a>$sel:mLModelId:BatchPrediction'</a>,
--   <a>batchPrediction_mLModelId</a> - The ID of the <tt>MLModel</tt> that
--   generated predictions for the <tt>BatchPrediction</tt> request.
--   
--   <a>$sel:inputDataLocationS3:BatchPrediction'</a>,
--   <a>batchPrediction_inputDataLocationS3</a> - The location of the data
--   file or directory in Amazon Simple Storage Service (Amazon S3).
--   
--   <a>$sel:computeTime:BatchPrediction'</a>,
--   <a>batchPrediction_computeTime</a> - Undocumented member.
--   
--   <a>$sel:lastUpdatedAt:BatchPrediction'</a>,
--   <a>batchPrediction_lastUpdatedAt</a> - The time of the most recent
--   edit to the <tt>BatchPrediction</tt>. The time is expressed in epoch
--   time.
newBatchPrediction :: BatchPrediction

-- | The status of the <tt>BatchPrediction</tt>. This element can have one
--   of the following values:
--   
--   <ul>
--   <li><tt>PENDING</tt> - Amazon Machine Learning (Amazon ML) submitted a
--   request to generate predictions for a batch of observations.</li>
--   <li><tt>INPROGRESS</tt> - The process is underway.</li>
--   <li><tt>FAILED</tt> - The request to perform a batch prediction did
--   not run to completion. It is not usable.</li>
--   <li><tt>COMPLETED</tt> - The batch prediction process completed
--   successfully.</li>
--   <li><tt>DELETED</tt> - The <tt>BatchPrediction</tt> is marked as
--   deleted. It is not usable.</li>
--   </ul>
batchPrediction_status :: Lens' BatchPrediction (Maybe EntityStatus)

-- | The ID assigned to the <tt>BatchPrediction</tt> at creation. This
--   value should be identical to the value of the
--   <tt>BatchPredictionID</tt> in the request.
batchPrediction_batchPredictionId :: Lens' BatchPrediction (Maybe Text)

-- | Undocumented member.
batchPrediction_startedAt :: Lens' BatchPrediction (Maybe UTCTime)

-- | The location of an Amazon S3 bucket or directory to receive the
--   operation results. The following substrings are not allowed in the
--   <tt>s3 key</tt> portion of the <tt>outputURI</tt> field: ':', '//',
--   '/./', '/../'.
batchPrediction_outputUri :: Lens' BatchPrediction (Maybe Text)

-- | A description of the most recent details about processing the batch
--   prediction request.
batchPrediction_message :: Lens' BatchPrediction (Maybe Text)

-- | The time that the <tt>BatchPrediction</tt> was created. The time is
--   expressed in epoch time.
batchPrediction_createdAt :: Lens' BatchPrediction (Maybe UTCTime)

-- | A user-supplied name or description of the <tt>BatchPrediction</tt>.
batchPrediction_name :: Lens' BatchPrediction (Maybe Text)

-- | The AWS user account that invoked the <tt>BatchPrediction</tt>. The
--   account type can be either an AWS root account or an AWS Identity and
--   Access Management (IAM) user account.
batchPrediction_createdByIamUser :: Lens' BatchPrediction (Maybe Text)

-- | Undocumented member.
batchPrediction_finishedAt :: Lens' BatchPrediction (Maybe UTCTime)

-- | Undocumented member.
batchPrediction_invalidRecordCount :: Lens' BatchPrediction (Maybe Integer)

-- | Undocumented member.
batchPrediction_totalRecordCount :: Lens' BatchPrediction (Maybe Integer)

-- | The ID of the <tt>DataSource</tt> that points to the group of
--   observations to predict.
batchPrediction_batchPredictionDataSourceId :: Lens' BatchPrediction (Maybe Text)

-- | The ID of the <tt>MLModel</tt> that generated predictions for the
--   <tt>BatchPrediction</tt> request.
batchPrediction_mLModelId :: Lens' BatchPrediction (Maybe Text)

-- | The location of the data file or directory in Amazon Simple Storage
--   Service (Amazon S3).
batchPrediction_inputDataLocationS3 :: Lens' BatchPrediction (Maybe Text)

-- | Undocumented member.
batchPrediction_computeTime :: Lens' BatchPrediction (Maybe Integer)

-- | The time of the most recent edit to the <tt>BatchPrediction</tt>. The
--   time is expressed in epoch time.
batchPrediction_lastUpdatedAt :: Lens' BatchPrediction (Maybe UTCTime)
instance GHC.Generics.Generic Network.AWS.MachineLearning.Types.BatchPrediction.BatchPrediction
instance GHC.Show.Show Network.AWS.MachineLearning.Types.BatchPrediction.BatchPrediction
instance GHC.Read.Read Network.AWS.MachineLearning.Types.BatchPrediction.BatchPrediction
instance GHC.Classes.Eq Network.AWS.MachineLearning.Types.BatchPrediction.BatchPrediction
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.MachineLearning.Types.BatchPrediction.BatchPrediction
instance Data.Hashable.Class.Hashable Network.AWS.MachineLearning.Types.BatchPrediction.BatchPrediction
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.Types.BatchPrediction.BatchPrediction


module Network.AWS.MachineLearning.Types.EvaluationFilterVariable

-- | A list of the variables to use in searching or filtering
--   <tt>Evaluation</tt>.
--   
--   <ul>
--   <li><tt>CreatedAt</tt> - Sets the search criteria to
--   <tt>Evaluation</tt> creation date.</li>
--   <li><tt>Status</tt> - Sets the search criteria to <tt>Evaluation</tt>
--   status.</li>
--   <li><tt>Name</tt> - Sets the search criteria to the contents of
--   <tt>Evaluation</tt> ____ <tt>Name</tt>.</li>
--   <li><tt>IAMUser</tt> - Sets the search criteria to the user account
--   that invoked an evaluation.</li>
--   <li><tt>MLModelId</tt> - Sets the search criteria to the
--   <tt>Predictor</tt> that was evaluated.</li>
--   <li><tt>DataSourceId</tt> - Sets the search criteria to the
--   <tt>DataSource</tt> used in evaluation.</li>
--   <li><tt>DataUri</tt> - Sets the search criteria to the data file(s)
--   used in evaluation. The URL can identify either a file or an Amazon
--   Simple Storage Service (Amazon S3) bucket or directory.</li>
--   </ul>
newtype EvaluationFilterVariable
EvaluationFilterVariable' :: Text -> EvaluationFilterVariable
[fromEvaluationFilterVariable] :: EvaluationFilterVariable -> Text
pattern EvaluationFilterVariable_CreatedAt :: EvaluationFilterVariable
pattern EvaluationFilterVariable_DataSourceId :: EvaluationFilterVariable
pattern EvaluationFilterVariable_DataURI :: EvaluationFilterVariable
pattern EvaluationFilterVariable_IAMUser :: EvaluationFilterVariable
pattern EvaluationFilterVariable_LastUpdatedAt :: EvaluationFilterVariable
pattern EvaluationFilterVariable_MLModelId :: EvaluationFilterVariable
pattern EvaluationFilterVariable_Name :: EvaluationFilterVariable
pattern EvaluationFilterVariable_Status :: EvaluationFilterVariable
instance Network.AWS.Data.XML.ToXML Network.AWS.MachineLearning.Types.EvaluationFilterVariable.EvaluationFilterVariable
instance Network.AWS.Data.XML.FromXML Network.AWS.MachineLearning.Types.EvaluationFilterVariable.EvaluationFilterVariable
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.MachineLearning.Types.EvaluationFilterVariable.EvaluationFilterVariable
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MachineLearning.Types.EvaluationFilterVariable.EvaluationFilterVariable
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.MachineLearning.Types.EvaluationFilterVariable.EvaluationFilterVariable
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.MachineLearning.Types.EvaluationFilterVariable.EvaluationFilterVariable
instance Network.AWS.Data.Query.ToQuery Network.AWS.MachineLearning.Types.EvaluationFilterVariable.EvaluationFilterVariable
instance Network.AWS.Data.Headers.ToHeader Network.AWS.MachineLearning.Types.EvaluationFilterVariable.EvaluationFilterVariable
instance Network.AWS.Data.Log.ToLog Network.AWS.MachineLearning.Types.EvaluationFilterVariable.EvaluationFilterVariable
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.MachineLearning.Types.EvaluationFilterVariable.EvaluationFilterVariable
instance Network.AWS.Data.Text.ToText Network.AWS.MachineLearning.Types.EvaluationFilterVariable.EvaluationFilterVariable
instance Network.AWS.Data.Text.FromText Network.AWS.MachineLearning.Types.EvaluationFilterVariable.EvaluationFilterVariable
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.Types.EvaluationFilterVariable.EvaluationFilterVariable
instance Data.Hashable.Class.Hashable Network.AWS.MachineLearning.Types.EvaluationFilterVariable.EvaluationFilterVariable
instance GHC.Generics.Generic Network.AWS.MachineLearning.Types.EvaluationFilterVariable.EvaluationFilterVariable
instance GHC.Classes.Ord Network.AWS.MachineLearning.Types.EvaluationFilterVariable.EvaluationFilterVariable
instance GHC.Classes.Eq Network.AWS.MachineLearning.Types.EvaluationFilterVariable.EvaluationFilterVariable
instance GHC.Read.Read Network.AWS.MachineLearning.Types.EvaluationFilterVariable.EvaluationFilterVariable
instance GHC.Show.Show Network.AWS.MachineLearning.Types.EvaluationFilterVariable.EvaluationFilterVariable


module Network.AWS.MachineLearning.Types.MLModelFilterVariable
newtype MLModelFilterVariable
MLModelFilterVariable' :: Text -> MLModelFilterVariable
[fromMLModelFilterVariable] :: MLModelFilterVariable -> Text
pattern MLModelFilterVariable_Algorithm :: MLModelFilterVariable
pattern MLModelFilterVariable_CreatedAt :: MLModelFilterVariable
pattern MLModelFilterVariable_IAMUser :: MLModelFilterVariable
pattern MLModelFilterVariable_LastUpdatedAt :: MLModelFilterVariable
pattern MLModelFilterVariable_MLModelType :: MLModelFilterVariable
pattern MLModelFilterVariable_Name :: MLModelFilterVariable
pattern MLModelFilterVariable_RealtimeEndpointStatus :: MLModelFilterVariable
pattern MLModelFilterVariable_Status :: MLModelFilterVariable
pattern MLModelFilterVariable_TrainingDataSourceId :: MLModelFilterVariable
pattern MLModelFilterVariable_TrainingDataURI :: MLModelFilterVariable
instance Network.AWS.Data.XML.ToXML Network.AWS.MachineLearning.Types.MLModelFilterVariable.MLModelFilterVariable
instance Network.AWS.Data.XML.FromXML Network.AWS.MachineLearning.Types.MLModelFilterVariable.MLModelFilterVariable
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.MachineLearning.Types.MLModelFilterVariable.MLModelFilterVariable
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MachineLearning.Types.MLModelFilterVariable.MLModelFilterVariable
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.MachineLearning.Types.MLModelFilterVariable.MLModelFilterVariable
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.MachineLearning.Types.MLModelFilterVariable.MLModelFilterVariable
instance Network.AWS.Data.Query.ToQuery Network.AWS.MachineLearning.Types.MLModelFilterVariable.MLModelFilterVariable
instance Network.AWS.Data.Headers.ToHeader Network.AWS.MachineLearning.Types.MLModelFilterVariable.MLModelFilterVariable
instance Network.AWS.Data.Log.ToLog Network.AWS.MachineLearning.Types.MLModelFilterVariable.MLModelFilterVariable
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.MachineLearning.Types.MLModelFilterVariable.MLModelFilterVariable
instance Network.AWS.Data.Text.ToText Network.AWS.MachineLearning.Types.MLModelFilterVariable.MLModelFilterVariable
instance Network.AWS.Data.Text.FromText Network.AWS.MachineLearning.Types.MLModelFilterVariable.MLModelFilterVariable
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.Types.MLModelFilterVariable.MLModelFilterVariable
instance Data.Hashable.Class.Hashable Network.AWS.MachineLearning.Types.MLModelFilterVariable.MLModelFilterVariable
instance GHC.Generics.Generic Network.AWS.MachineLearning.Types.MLModelFilterVariable.MLModelFilterVariable
instance GHC.Classes.Ord Network.AWS.MachineLearning.Types.MLModelFilterVariable.MLModelFilterVariable
instance GHC.Classes.Eq Network.AWS.MachineLearning.Types.MLModelFilterVariable.MLModelFilterVariable
instance GHC.Read.Read Network.AWS.MachineLearning.Types.MLModelFilterVariable.MLModelFilterVariable
instance GHC.Show.Show Network.AWS.MachineLearning.Types.MLModelFilterVariable.MLModelFilterVariable


module Network.AWS.MachineLearning.Types.MLModelType
newtype MLModelType
MLModelType' :: Text -> MLModelType
[fromMLModelType] :: MLModelType -> Text
pattern MLModelType_BINARY :: MLModelType
pattern MLModelType_MULTICLASS :: MLModelType
pattern MLModelType_REGRESSION :: MLModelType
instance Network.AWS.Data.XML.ToXML Network.AWS.MachineLearning.Types.MLModelType.MLModelType
instance Network.AWS.Data.XML.FromXML Network.AWS.MachineLearning.Types.MLModelType.MLModelType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.MachineLearning.Types.MLModelType.MLModelType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MachineLearning.Types.MLModelType.MLModelType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.MachineLearning.Types.MLModelType.MLModelType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.MachineLearning.Types.MLModelType.MLModelType
instance Network.AWS.Data.Query.ToQuery Network.AWS.MachineLearning.Types.MLModelType.MLModelType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.MachineLearning.Types.MLModelType.MLModelType
instance Network.AWS.Data.Log.ToLog Network.AWS.MachineLearning.Types.MLModelType.MLModelType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.MachineLearning.Types.MLModelType.MLModelType
instance Network.AWS.Data.Text.ToText Network.AWS.MachineLearning.Types.MLModelType.MLModelType
instance Network.AWS.Data.Text.FromText Network.AWS.MachineLearning.Types.MLModelType.MLModelType
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.Types.MLModelType.MLModelType
instance Data.Hashable.Class.Hashable Network.AWS.MachineLearning.Types.MLModelType.MLModelType
instance GHC.Generics.Generic Network.AWS.MachineLearning.Types.MLModelType.MLModelType
instance GHC.Classes.Ord Network.AWS.MachineLearning.Types.MLModelType.MLModelType
instance GHC.Classes.Eq Network.AWS.MachineLearning.Types.MLModelType.MLModelType
instance GHC.Read.Read Network.AWS.MachineLearning.Types.MLModelType.MLModelType
instance GHC.Show.Show Network.AWS.MachineLearning.Types.MLModelType.MLModelType


module Network.AWS.MachineLearning.Types.PerformanceMetrics

-- | Measurements of how well the <tt>MLModel</tt> performed on known
--   observations. One of the following metrics is returned, based on the
--   type of the <tt>MLModel</tt>:
--   
--   <ul>
--   <li>BinaryAUC: The binary <tt>MLModel</tt> uses the Area Under the
--   Curve (AUC) technique to measure performance.</li>
--   <li>RegressionRMSE: The regression <tt>MLModel</tt> uses the Root Mean
--   Square Error (RMSE) technique to measure performance. RMSE measures
--   the difference between predicted and actual values for a single
--   variable.</li>
--   <li>MulticlassAvgFScore: The multiclass <tt>MLModel</tt> uses the F1
--   score technique to measure performance.</li>
--   </ul>
--   
--   For more information about performance metrics, please see the
--   <a>Amazon Machine Learning Developer Guide</a>.
--   
--   <i>See:</i> <a>newPerformanceMetrics</a> smart constructor.
data PerformanceMetrics
PerformanceMetrics' :: Maybe (HashMap Text Text) -> PerformanceMetrics
[$sel:properties:PerformanceMetrics'] :: PerformanceMetrics -> Maybe (HashMap Text Text)

-- | Create a value of <a>PerformanceMetrics</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:properties:PerformanceMetrics'</a>,
--   <a>performanceMetrics_properties</a> - Undocumented member.
newPerformanceMetrics :: PerformanceMetrics

-- | Undocumented member.
performanceMetrics_properties :: Lens' PerformanceMetrics (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Network.AWS.MachineLearning.Types.PerformanceMetrics.PerformanceMetrics
instance GHC.Show.Show Network.AWS.MachineLearning.Types.PerformanceMetrics.PerformanceMetrics
instance GHC.Read.Read Network.AWS.MachineLearning.Types.PerformanceMetrics.PerformanceMetrics
instance GHC.Classes.Eq Network.AWS.MachineLearning.Types.PerformanceMetrics.PerformanceMetrics
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.MachineLearning.Types.PerformanceMetrics.PerformanceMetrics
instance Data.Hashable.Class.Hashable Network.AWS.MachineLearning.Types.PerformanceMetrics.PerformanceMetrics
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.Types.PerformanceMetrics.PerformanceMetrics


module Network.AWS.MachineLearning.Types.Evaluation

-- | Represents the output of <tt>GetEvaluation</tt> operation.
--   
--   The content consists of the detailed metadata and data file
--   information and the current status of the <tt>Evaluation</tt>.
--   
--   <i>See:</i> <a>newEvaluation</a> smart constructor.
data Evaluation
Evaluation' :: Maybe PerformanceMetrics -> Maybe EntityStatus -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Integer -> Maybe POSIX -> Evaluation

-- | Measurements of how well the <tt>MLModel</tt> performed, using
--   observations referenced by the <tt>DataSource</tt>. One of the
--   following metrics is returned, based on the type of the
--   <tt>MLModel</tt>:
--   
--   <ul>
--   <li>BinaryAUC: A binary <tt>MLModel</tt> uses the Area Under the Curve
--   (AUC) technique to measure performance.</li>
--   <li>RegressionRMSE: A regression <tt>MLModel</tt> uses the Root Mean
--   Square Error (RMSE) technique to measure performance. RMSE measures
--   the difference between predicted and actual values for a single
--   variable.</li>
--   <li>MulticlassAvgFScore: A multiclass <tt>MLModel</tt> uses the F1
--   score technique to measure performance.</li>
--   </ul>
--   
--   For more information about performance metrics, please see the
--   <a>Amazon Machine Learning Developer Guide</a>.
[$sel:performanceMetrics:Evaluation'] :: Evaluation -> Maybe PerformanceMetrics

-- | The status of the evaluation. This element can have one of the
--   following values:
--   
--   <ul>
--   <li><tt>PENDING</tt> - Amazon Machine Learning (Amazon ML) submitted a
--   request to evaluate an <tt>MLModel</tt>.</li>
--   <li><tt>INPROGRESS</tt> - The evaluation is underway.</li>
--   <li><tt>FAILED</tt> - The request to evaluate an <tt>MLModel</tt> did
--   not run to completion. It is not usable.</li>
--   <li><tt>COMPLETED</tt> - The evaluation process completed
--   successfully.</li>
--   <li><tt>DELETED</tt> - The <tt>Evaluation</tt> is marked as deleted.
--   It is not usable.</li>
--   </ul>
[$sel:status:Evaluation'] :: Evaluation -> Maybe EntityStatus
[$sel:startedAt:Evaluation'] :: Evaluation -> Maybe POSIX

-- | The ID of the <tt>DataSource</tt> that is used to evaluate the
--   <tt>MLModel</tt>.
[$sel:evaluationDataSourceId:Evaluation'] :: Evaluation -> Maybe Text

-- | A description of the most recent details about evaluating the
--   <tt>MLModel</tt>.
[$sel:message:Evaluation'] :: Evaluation -> Maybe Text

-- | The time that the <tt>Evaluation</tt> was created. The time is
--   expressed in epoch time.
[$sel:createdAt:Evaluation'] :: Evaluation -> Maybe POSIX

-- | A user-supplied name or description of the <tt>Evaluation</tt>.
[$sel:name:Evaluation'] :: Evaluation -> Maybe Text

-- | The AWS user account that invoked the evaluation. The account type can
--   be either an AWS root account or an AWS Identity and Access Management
--   (IAM) user account.
[$sel:createdByIamUser:Evaluation'] :: Evaluation -> Maybe Text
[$sel:finishedAt:Evaluation'] :: Evaluation -> Maybe POSIX

-- | The ID of the <tt>MLModel</tt> that is the focus of the evaluation.
[$sel:mLModelId:Evaluation'] :: Evaluation -> Maybe Text

-- | The ID that is assigned to the <tt>Evaluation</tt> at creation.
[$sel:evaluationId:Evaluation'] :: Evaluation -> Maybe Text

-- | The location and name of the data in Amazon Simple Storage Server
--   (Amazon S3) that is used in the evaluation.
[$sel:inputDataLocationS3:Evaluation'] :: Evaluation -> Maybe Text
[$sel:computeTime:Evaluation'] :: Evaluation -> Maybe Integer

-- | The time of the most recent edit to the <tt>Evaluation</tt>. The time
--   is expressed in epoch time.
[$sel:lastUpdatedAt:Evaluation'] :: Evaluation -> Maybe POSIX

-- | Create a value of <a>Evaluation</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:performanceMetrics:Evaluation'</a>,
--   <a>evaluation_performanceMetrics</a> - Measurements of how well the
--   <tt>MLModel</tt> performed, using observations referenced by the
--   <tt>DataSource</tt>. One of the following metrics is returned, based
--   on the type of the <tt>MLModel</tt>:
--   
--   <ul>
--   <li>BinaryAUC: A binary <tt>MLModel</tt> uses the Area Under the Curve
--   (AUC) technique to measure performance.</li>
--   <li>RegressionRMSE: A regression <tt>MLModel</tt> uses the Root Mean
--   Square Error (RMSE) technique to measure performance. RMSE measures
--   the difference between predicted and actual values for a single
--   variable.</li>
--   <li>MulticlassAvgFScore: A multiclass <tt>MLModel</tt> uses the F1
--   score technique to measure performance.</li>
--   </ul>
--   
--   For more information about performance metrics, please see the
--   <a>Amazon Machine Learning Developer Guide</a>.
--   
--   <a>$sel:status:Evaluation'</a>, <a>evaluation_status</a> - The status
--   of the evaluation. This element can have one of the following values:
--   
--   <ul>
--   <li><tt>PENDING</tt> - Amazon Machine Learning (Amazon ML) submitted a
--   request to evaluate an <tt>MLModel</tt>.</li>
--   <li><tt>INPROGRESS</tt> - The evaluation is underway.</li>
--   <li><tt>FAILED</tt> - The request to evaluate an <tt>MLModel</tt> did
--   not run to completion. It is not usable.</li>
--   <li><tt>COMPLETED</tt> - The evaluation process completed
--   successfully.</li>
--   <li><tt>DELETED</tt> - The <tt>Evaluation</tt> is marked as deleted.
--   It is not usable.</li>
--   </ul>
--   
--   <a>$sel:startedAt:Evaluation'</a>, <a>evaluation_startedAt</a> -
--   Undocumented member.
--   
--   <a>$sel:evaluationDataSourceId:Evaluation'</a>,
--   <a>evaluation_evaluationDataSourceId</a> - The ID of the
--   <tt>DataSource</tt> that is used to evaluate the <tt>MLModel</tt>.
--   
--   <a>$sel:message:Evaluation'</a>, <a>evaluation_message</a> - A
--   description of the most recent details about evaluating the
--   <tt>MLModel</tt>.
--   
--   <a>$sel:createdAt:Evaluation'</a>, <a>evaluation_createdAt</a> - The
--   time that the <tt>Evaluation</tt> was created. The time is expressed
--   in epoch time.
--   
--   <a>$sel:name:Evaluation'</a>, <a>evaluation_name</a> - A user-supplied
--   name or description of the <tt>Evaluation</tt>.
--   
--   <a>$sel:createdByIamUser:Evaluation'</a>,
--   <a>evaluation_createdByIamUser</a> - The AWS user account that invoked
--   the evaluation. The account type can be either an AWS root account or
--   an AWS Identity and Access Management (IAM) user account.
--   
--   <a>$sel:finishedAt:Evaluation'</a>, <a>evaluation_finishedAt</a> -
--   Undocumented member.
--   
--   <a>$sel:mLModelId:Evaluation'</a>, <a>evaluation_mLModelId</a> - The
--   ID of the <tt>MLModel</tt> that is the focus of the evaluation.
--   
--   <a>$sel:evaluationId:Evaluation'</a>, <a>evaluation_evaluationId</a> -
--   The ID that is assigned to the <tt>Evaluation</tt> at creation.
--   
--   <a>$sel:inputDataLocationS3:Evaluation'</a>,
--   <a>evaluation_inputDataLocationS3</a> - The location and name of the
--   data in Amazon Simple Storage Server (Amazon S3) that is used in the
--   evaluation.
--   
--   <a>$sel:computeTime:Evaluation'</a>, <a>evaluation_computeTime</a> -
--   Undocumented member.
--   
--   <a>$sel:lastUpdatedAt:Evaluation'</a>, <a>evaluation_lastUpdatedAt</a>
--   - The time of the most recent edit to the <tt>Evaluation</tt>. The
--   time is expressed in epoch time.
newEvaluation :: Evaluation

-- | Measurements of how well the <tt>MLModel</tt> performed, using
--   observations referenced by the <tt>DataSource</tt>. One of the
--   following metrics is returned, based on the type of the
--   <tt>MLModel</tt>:
--   
--   <ul>
--   <li>BinaryAUC: A binary <tt>MLModel</tt> uses the Area Under the Curve
--   (AUC) technique to measure performance.</li>
--   <li>RegressionRMSE: A regression <tt>MLModel</tt> uses the Root Mean
--   Square Error (RMSE) technique to measure performance. RMSE measures
--   the difference between predicted and actual values for a single
--   variable.</li>
--   <li>MulticlassAvgFScore: A multiclass <tt>MLModel</tt> uses the F1
--   score technique to measure performance.</li>
--   </ul>
--   
--   For more information about performance metrics, please see the
--   <a>Amazon Machine Learning Developer Guide</a>.
evaluation_performanceMetrics :: Lens' Evaluation (Maybe PerformanceMetrics)

-- | The status of the evaluation. This element can have one of the
--   following values:
--   
--   <ul>
--   <li><tt>PENDING</tt> - Amazon Machine Learning (Amazon ML) submitted a
--   request to evaluate an <tt>MLModel</tt>.</li>
--   <li><tt>INPROGRESS</tt> - The evaluation is underway.</li>
--   <li><tt>FAILED</tt> - The request to evaluate an <tt>MLModel</tt> did
--   not run to completion. It is not usable.</li>
--   <li><tt>COMPLETED</tt> - The evaluation process completed
--   successfully.</li>
--   <li><tt>DELETED</tt> - The <tt>Evaluation</tt> is marked as deleted.
--   It is not usable.</li>
--   </ul>
evaluation_status :: Lens' Evaluation (Maybe EntityStatus)

-- | Undocumented member.
evaluation_startedAt :: Lens' Evaluation (Maybe UTCTime)

-- | The ID of the <tt>DataSource</tt> that is used to evaluate the
--   <tt>MLModel</tt>.
evaluation_evaluationDataSourceId :: Lens' Evaluation (Maybe Text)

-- | A description of the most recent details about evaluating the
--   <tt>MLModel</tt>.
evaluation_message :: Lens' Evaluation (Maybe Text)

-- | The time that the <tt>Evaluation</tt> was created. The time is
--   expressed in epoch time.
evaluation_createdAt :: Lens' Evaluation (Maybe UTCTime)

-- | A user-supplied name or description of the <tt>Evaluation</tt>.
evaluation_name :: Lens' Evaluation (Maybe Text)

-- | The AWS user account that invoked the evaluation. The account type can
--   be either an AWS root account or an AWS Identity and Access Management
--   (IAM) user account.
evaluation_createdByIamUser :: Lens' Evaluation (Maybe Text)

-- | Undocumented member.
evaluation_finishedAt :: Lens' Evaluation (Maybe UTCTime)

-- | The ID of the <tt>MLModel</tt> that is the focus of the evaluation.
evaluation_mLModelId :: Lens' Evaluation (Maybe Text)

-- | The ID that is assigned to the <tt>Evaluation</tt> at creation.
evaluation_evaluationId :: Lens' Evaluation (Maybe Text)

-- | The location and name of the data in Amazon Simple Storage Server
--   (Amazon S3) that is used in the evaluation.
evaluation_inputDataLocationS3 :: Lens' Evaluation (Maybe Text)

-- | Undocumented member.
evaluation_computeTime :: Lens' Evaluation (Maybe Integer)

-- | The time of the most recent edit to the <tt>Evaluation</tt>. The time
--   is expressed in epoch time.
evaluation_lastUpdatedAt :: Lens' Evaluation (Maybe UTCTime)
instance GHC.Generics.Generic Network.AWS.MachineLearning.Types.Evaluation.Evaluation
instance GHC.Show.Show Network.AWS.MachineLearning.Types.Evaluation.Evaluation
instance GHC.Read.Read Network.AWS.MachineLearning.Types.Evaluation.Evaluation
instance GHC.Classes.Eq Network.AWS.MachineLearning.Types.Evaluation.Evaluation
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.MachineLearning.Types.Evaluation.Evaluation
instance Data.Hashable.Class.Hashable Network.AWS.MachineLearning.Types.Evaluation.Evaluation
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.Types.Evaluation.Evaluation


module Network.AWS.MachineLearning.Types.Prediction

-- | The output from a <tt>Predict</tt> operation:
--   
--   <ul>
--   <li><tt>Details</tt> - Contains the following attributes:
--   <tt>DetailsAttributes.PREDICTIVE_MODEL_TYPE - REGRESSION | BINARY |
--   MULTICLASS</tt> <tt>DetailsAttributes.ALGORITHM - SGD</tt></li>
--   <li><tt>PredictedLabel</tt> - Present for either a <tt>BINARY</tt> or
--   <tt>MULTICLASS</tt> <tt>MLModel</tt> request.</li>
--   <li><tt>PredictedScores</tt> - Contains the raw classification score
--   corresponding to each label.</li>
--   <li><tt>PredictedValue</tt> - Present for a <tt>REGRESSION</tt>
--   <tt>MLModel</tt> request.</li>
--   </ul>
--   
--   <i>See:</i> <a>newPrediction</a> smart constructor.
data Prediction
Prediction' :: Maybe Double -> Maybe (HashMap Text Double) -> Maybe Text -> Maybe (HashMap DetailsAttributes Text) -> Prediction

-- | The prediction value for <tt>REGRESSION</tt> <tt>MLModel</tt>.
[$sel:predictedValue:Prediction'] :: Prediction -> Maybe Double
[$sel:predictedScores:Prediction'] :: Prediction -> Maybe (HashMap Text Double)

-- | The prediction label for either a <tt>BINARY</tt> or
--   <tt>MULTICLASS</tt> <tt>MLModel</tt>.
[$sel:predictedLabel:Prediction'] :: Prediction -> Maybe Text
[$sel:details:Prediction'] :: Prediction -> Maybe (HashMap DetailsAttributes Text)

-- | Create a value of <a>Prediction</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:predictedValue:Prediction'</a>,
--   <a>prediction_predictedValue</a> - The prediction value for
--   <tt>REGRESSION</tt> <tt>MLModel</tt>.
--   
--   <a>$sel:predictedScores:Prediction'</a>,
--   <a>prediction_predictedScores</a> - Undocumented member.
--   
--   <a>$sel:predictedLabel:Prediction'</a>,
--   <a>prediction_predictedLabel</a> - The prediction label for either a
--   <tt>BINARY</tt> or <tt>MULTICLASS</tt> <tt>MLModel</tt>.
--   
--   <a>$sel:details:Prediction'</a>, <a>prediction_details</a> -
--   Undocumented member.
newPrediction :: Prediction

-- | The prediction value for <tt>REGRESSION</tt> <tt>MLModel</tt>.
prediction_predictedValue :: Lens' Prediction (Maybe Double)

-- | Undocumented member.
prediction_predictedScores :: Lens' Prediction (Maybe (HashMap Text Double))

-- | The prediction label for either a <tt>BINARY</tt> or
--   <tt>MULTICLASS</tt> <tt>MLModel</tt>.
prediction_predictedLabel :: Lens' Prediction (Maybe Text)

-- | Undocumented member.
prediction_details :: Lens' Prediction (Maybe (HashMap DetailsAttributes Text))
instance GHC.Generics.Generic Network.AWS.MachineLearning.Types.Prediction.Prediction
instance GHC.Show.Show Network.AWS.MachineLearning.Types.Prediction.Prediction
instance GHC.Read.Read Network.AWS.MachineLearning.Types.Prediction.Prediction
instance GHC.Classes.Eq Network.AWS.MachineLearning.Types.Prediction.Prediction
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.MachineLearning.Types.Prediction.Prediction
instance Data.Hashable.Class.Hashable Network.AWS.MachineLearning.Types.Prediction.Prediction
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.Types.Prediction.Prediction


module Network.AWS.MachineLearning.Types.RDSDatabase

-- | The database details of an Amazon RDS database.
--   
--   <i>See:</i> <a>newRDSDatabase</a> smart constructor.
data RDSDatabase
RDSDatabase' :: Text -> Text -> RDSDatabase

-- | The ID of an RDS DB instance.
[$sel:instanceIdentifier:RDSDatabase'] :: RDSDatabase -> Text
[$sel:databaseName:RDSDatabase'] :: RDSDatabase -> Text

-- | Create a value of <a>RDSDatabase</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceIdentifier:RDSDatabase'</a>,
--   <a>rDSDatabase_instanceIdentifier</a> - The ID of an RDS DB instance.
--   
--   <a>$sel:databaseName:RDSDatabase'</a>, <a>rDSDatabase_databaseName</a>
--   - Undocumented member.
newRDSDatabase :: Text -> Text -> RDSDatabase

-- | The ID of an RDS DB instance.
rDSDatabase_instanceIdentifier :: Lens' RDSDatabase Text

-- | Undocumented member.
rDSDatabase_databaseName :: Lens' RDSDatabase Text
instance GHC.Generics.Generic Network.AWS.MachineLearning.Types.RDSDatabase.RDSDatabase
instance GHC.Show.Show Network.AWS.MachineLearning.Types.RDSDatabase.RDSDatabase
instance GHC.Read.Read Network.AWS.MachineLearning.Types.RDSDatabase.RDSDatabase
instance GHC.Classes.Eq Network.AWS.MachineLearning.Types.RDSDatabase.RDSDatabase
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.MachineLearning.Types.RDSDatabase.RDSDatabase
instance Data.Hashable.Class.Hashable Network.AWS.MachineLearning.Types.RDSDatabase.RDSDatabase
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.Types.RDSDatabase.RDSDatabase
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MachineLearning.Types.RDSDatabase.RDSDatabase


module Network.AWS.MachineLearning.Types.RDSDatabaseCredentials

-- | The database credentials to connect to a database on an RDS DB
--   instance.
--   
--   <i>See:</i> <a>newRDSDatabaseCredentials</a> smart constructor.
data RDSDatabaseCredentials
RDSDatabaseCredentials' :: Text -> Text -> RDSDatabaseCredentials
[$sel:username:RDSDatabaseCredentials'] :: RDSDatabaseCredentials -> Text
[$sel:password:RDSDatabaseCredentials'] :: RDSDatabaseCredentials -> Text

-- | Create a value of <a>RDSDatabaseCredentials</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:username:RDSDatabaseCredentials'</a>,
--   <a>rDSDatabaseCredentials_username</a> - Undocumented member.
--   
--   <a>$sel:password:RDSDatabaseCredentials'</a>,
--   <a>rDSDatabaseCredentials_password</a> - Undocumented member.
newRDSDatabaseCredentials :: Text -> Text -> RDSDatabaseCredentials

-- | Undocumented member.
rDSDatabaseCredentials_username :: Lens' RDSDatabaseCredentials Text

-- | Undocumented member.
rDSDatabaseCredentials_password :: Lens' RDSDatabaseCredentials Text
instance GHC.Generics.Generic Network.AWS.MachineLearning.Types.RDSDatabaseCredentials.RDSDatabaseCredentials
instance GHC.Show.Show Network.AWS.MachineLearning.Types.RDSDatabaseCredentials.RDSDatabaseCredentials
instance GHC.Read.Read Network.AWS.MachineLearning.Types.RDSDatabaseCredentials.RDSDatabaseCredentials
instance GHC.Classes.Eq Network.AWS.MachineLearning.Types.RDSDatabaseCredentials.RDSDatabaseCredentials
instance Data.Hashable.Class.Hashable Network.AWS.MachineLearning.Types.RDSDatabaseCredentials.RDSDatabaseCredentials
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.Types.RDSDatabaseCredentials.RDSDatabaseCredentials
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MachineLearning.Types.RDSDatabaseCredentials.RDSDatabaseCredentials


module Network.AWS.MachineLearning.Types.RDSDataSpec

-- | The data specification of an Amazon Relational Database Service
--   (Amazon RDS) <tt>DataSource</tt>.
--   
--   <i>See:</i> <a>newRDSDataSpec</a> smart constructor.
data RDSDataSpec
RDSDataSpec' :: Maybe Text -> Maybe Text -> Maybe Text -> RDSDatabase -> Text -> RDSDatabaseCredentials -> Text -> Text -> Text -> Text -> [Text] -> RDSDataSpec

-- | A JSON string that represents the schema for an Amazon RDS
--   <tt>DataSource</tt>. The <tt>DataSchema</tt> defines the structure of
--   the observation data in the data file(s) referenced in the
--   <tt>DataSource</tt>.
--   
--   A <tt>DataSchema</tt> is not required if you specify a
--   <tt>DataSchemaUri</tt>
--   
--   Define your <tt>DataSchema</tt> as a series of key-value pairs.
--   <tt>attributes</tt> and <tt>excludedVariableNames</tt> have an array
--   of key-value pairs for their value. Use the following format to define
--   your <tt>DataSchema</tt>.
--   
--   { "version": "1.0",
--   
--   "recordAnnotationFieldName": "F1",
--   
--   "recordWeightFieldName": "F2",
--   
--   "targetFieldName": "F3",
--   
--   "dataFormat": "CSV",
--   
--   "dataFileContainsHeader": true,
--   
--   "attributes": [
--   
--   { "fieldName": "F1", "fieldType": "TEXT" }, { "fieldName": "F2",
--   "fieldType": "NUMERIC" }, { "fieldName": "F3", "fieldType":
--   "CATEGORICAL" }, { "fieldName": "F4", "fieldType": "NUMERIC" }, {
--   "fieldName": "F5", "fieldType": "CATEGORICAL" }, { "fieldName": "F6",
--   "fieldType": "TEXT" }, { "fieldName": "F7", "fieldType":
--   "WEIGHTED_INT_SEQUENCE" }, { "fieldName": "F8", "fieldType":
--   "WEIGHTED_STRING_SEQUENCE" } ],
--   
--   "excludedVariableNames": [ "F6" ] }
[$sel:dataSchema:RDSDataSpec'] :: RDSDataSpec -> Maybe Text

-- | A JSON string that represents the splitting and rearrangement
--   processing to be applied to a <tt>DataSource</tt>. If the
--   <tt>DataRearrangement</tt> parameter is not provided, all of the input
--   data is used to create the <tt>Datasource</tt>.
--   
--   There are multiple parameters that control what data is used to create
--   a datasource:
--   
--   <ul>
--   <li><b><tt>percentBegin</tt></b>Use <tt>percentBegin</tt> to indicate
--   the beginning of the range of the data used to create the Datasource.
--   If you do not include <tt>percentBegin</tt> and <tt>percentEnd</tt>,
--   Amazon ML includes all of the data when creating the datasource.</li>
--   <li><b><tt>percentEnd</tt></b>Use <tt>percentEnd</tt> to indicate the
--   end of the range of the data used to create the Datasource. If you do
--   not include <tt>percentBegin</tt> and <tt>percentEnd</tt>, Amazon ML
--   includes all of the data when creating the datasource.</li>
--   <li><b><tt>complement</tt></b>The <tt>complement</tt> parameter
--   instructs Amazon ML to use the data that is not included in the range
--   of <tt>percentBegin</tt> to <tt>percentEnd</tt> to create a
--   datasource. The <tt>complement</tt> parameter is useful if you need to
--   create complementary datasources for training and evaluation. To
--   create a complementary datasource, use the same values for
--   <tt>percentBegin</tt> and <tt>percentEnd</tt>, along with the
--   <tt>complement</tt> parameter.For example, the following two
--   datasources do not share any data, and can be used to train and
--   evaluate a model. The first datasource has 25 percent of the data, and
--   the second one has 75 percent of the data.Datasource for evaluation:
--   <tt>{"splitting":{"percentBegin":0, "percentEnd":25}}</tt>Datasource
--   for training: <tt>{"splitting":{"percentBegin":0, "percentEnd":25,
--   "complement":"true"}}</tt></li>
--   <li><b><tt>strategy</tt></b>To change how Amazon ML splits the data
--   for a datasource, use the <tt>strategy</tt> parameter.The default
--   value for the <tt>strategy</tt> parameter is <tt>sequential</tt>,
--   meaning that Amazon ML takes all of the data records between the
--   <tt>percentBegin</tt> and <tt>percentEnd</tt> parameters for the
--   datasource, in the order that the records appear in the input data.The
--   following two <tt>DataRearrangement</tt> lines are examples of
--   sequentially ordered training and evaluation datasources:Datasource
--   for evaluation: <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"sequential"}}</tt>Datasource for training:
--   <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"sequential", "complement":"true"}}</tt>To randomly split
--   the input data into the proportions indicated by the percentBegin and
--   percentEnd parameters, set the <tt>strategy</tt> parameter to
--   <tt>random</tt> and provide a string that is used as the seed value
--   for the random data splitting (for example, you can use the S3 path to
--   your data as the random seed string). If you choose the random split
--   strategy, Amazon ML assigns each row of data a pseudo-random number
--   between 0 and 100, and then selects the rows that have an assigned
--   number between <tt>percentBegin</tt> and <tt>percentEnd</tt>.
--   Pseudo-random numbers are assigned using both the input seed string
--   value and the byte offset as a seed, so changing the data results in a
--   different split. Any existing ordering is preserved. The random
--   splitting strategy ensures that variables in the training and
--   evaluation data are distributed similarly. It is useful in the cases
--   where the input data may have an implicit sort order, which would
--   otherwise result in training and evaluation datasources containing
--   non-similar data records.The following two <tt>DataRearrangement</tt>
--   lines are examples of non-sequentially ordered training and evaluation
--   datasources:Datasource for evaluation:
--   <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"random",
--   "randomSeed"="s3://my_s3_path/bucket/file.csv"}}</tt>Datasource for
--   training: <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"random", "randomSeed"="s3://my_s3_path/bucket/file.csv",
--   "complement":"true"}}</tt></li>
--   </ul>
[$sel:dataRearrangement:RDSDataSpec'] :: RDSDataSpec -> Maybe Text

-- | The Amazon S3 location of the <tt>DataSchema</tt>.
[$sel:dataSchemaUri:RDSDataSpec'] :: RDSDataSpec -> Maybe Text

-- | Describes the <tt>DatabaseName</tt> and <tt>InstanceIdentifier</tt> of
--   an Amazon RDS database.
[$sel:databaseInformation:RDSDataSpec'] :: RDSDataSpec -> RDSDatabase

-- | The query that is used to retrieve the observation data for the
--   <tt>DataSource</tt>.
[$sel:selectSqlQuery:RDSDataSpec'] :: RDSDataSpec -> Text

-- | The AWS Identity and Access Management (IAM) credentials that are used
--   connect to the Amazon RDS database.
[$sel:databaseCredentials:RDSDataSpec'] :: RDSDataSpec -> RDSDatabaseCredentials

-- | The Amazon S3 location for staging Amazon RDS data. The data retrieved
--   from Amazon RDS using <tt>SelectSqlQuery</tt> is stored in this
--   location.
[$sel:s3StagingLocation:RDSDataSpec'] :: RDSDataSpec -> Text

-- | The role (DataPipelineDefaultResourceRole) assumed by an Amazon
--   Elastic Compute Cloud (Amazon EC2) instance to carry out the copy
--   operation from Amazon RDS to an Amazon S3 task. For more information,
--   see <a>Role templates</a> for data pipelines.
[$sel:resourceRole:RDSDataSpec'] :: RDSDataSpec -> Text

-- | The role (DataPipelineDefaultRole) assumed by AWS Data Pipeline
--   service to monitor the progress of the copy task from Amazon RDS to
--   Amazon S3. For more information, see <a>Role templates</a> for data
--   pipelines.
[$sel:serviceRole:RDSDataSpec'] :: RDSDataSpec -> Text

-- | The subnet ID to be used to access a VPC-based RDS DB instance. This
--   attribute is used by Data Pipeline to carry out the copy task from
--   Amazon RDS to Amazon S3.
[$sel:subnetId:RDSDataSpec'] :: RDSDataSpec -> Text

-- | The security group IDs to be used to access a VPC-based RDS DB
--   instance. Ensure that there are appropriate ingress rules set up to
--   allow access to the RDS DB instance. This attribute is used by Data
--   Pipeline to carry out the copy operation from Amazon RDS to an Amazon
--   S3 task.
[$sel:securityGroupIds:RDSDataSpec'] :: RDSDataSpec -> [Text]

-- | Create a value of <a>RDSDataSpec</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataSchema:RDSDataSpec'</a>, <a>rDSDataSpec_dataSchema</a> - A
--   JSON string that represents the schema for an Amazon RDS
--   <tt>DataSource</tt>. The <tt>DataSchema</tt> defines the structure of
--   the observation data in the data file(s) referenced in the
--   <tt>DataSource</tt>.
--   
--   A <tt>DataSchema</tt> is not required if you specify a
--   <tt>DataSchemaUri</tt>
--   
--   Define your <tt>DataSchema</tt> as a series of key-value pairs.
--   <tt>attributes</tt> and <tt>excludedVariableNames</tt> have an array
--   of key-value pairs for their value. Use the following format to define
--   your <tt>DataSchema</tt>.
--   
--   { "version": "1.0",
--   
--   "recordAnnotationFieldName": "F1",
--   
--   "recordWeightFieldName": "F2",
--   
--   "targetFieldName": "F3",
--   
--   "dataFormat": "CSV",
--   
--   "dataFileContainsHeader": true,
--   
--   "attributes": [
--   
--   { "fieldName": "F1", "fieldType": "TEXT" }, { "fieldName": "F2",
--   "fieldType": "NUMERIC" }, { "fieldName": "F3", "fieldType":
--   "CATEGORICAL" }, { "fieldName": "F4", "fieldType": "NUMERIC" }, {
--   "fieldName": "F5", "fieldType": "CATEGORICAL" }, { "fieldName": "F6",
--   "fieldType": "TEXT" }, { "fieldName": "F7", "fieldType":
--   "WEIGHTED_INT_SEQUENCE" }, { "fieldName": "F8", "fieldType":
--   "WEIGHTED_STRING_SEQUENCE" } ],
--   
--   "excludedVariableNames": [ "F6" ] }
--   
--   <a>$sel:dataRearrangement:RDSDataSpec'</a>,
--   <a>rDSDataSpec_dataRearrangement</a> - A JSON string that represents
--   the splitting and rearrangement processing to be applied to a
--   <tt>DataSource</tt>. If the <tt>DataRearrangement</tt> parameter is
--   not provided, all of the input data is used to create the
--   <tt>Datasource</tt>.
--   
--   There are multiple parameters that control what data is used to create
--   a datasource:
--   
--   <ul>
--   <li><b><tt>percentBegin</tt></b>Use <tt>percentBegin</tt> to indicate
--   the beginning of the range of the data used to create the Datasource.
--   If you do not include <tt>percentBegin</tt> and <tt>percentEnd</tt>,
--   Amazon ML includes all of the data when creating the datasource.</li>
--   <li><b><tt>percentEnd</tt></b>Use <tt>percentEnd</tt> to indicate the
--   end of the range of the data used to create the Datasource. If you do
--   not include <tt>percentBegin</tt> and <tt>percentEnd</tt>, Amazon ML
--   includes all of the data when creating the datasource.</li>
--   <li><b><tt>complement</tt></b>The <tt>complement</tt> parameter
--   instructs Amazon ML to use the data that is not included in the range
--   of <tt>percentBegin</tt> to <tt>percentEnd</tt> to create a
--   datasource. The <tt>complement</tt> parameter is useful if you need to
--   create complementary datasources for training and evaluation. To
--   create a complementary datasource, use the same values for
--   <tt>percentBegin</tt> and <tt>percentEnd</tt>, along with the
--   <tt>complement</tt> parameter.For example, the following two
--   datasources do not share any data, and can be used to train and
--   evaluate a model. The first datasource has 25 percent of the data, and
--   the second one has 75 percent of the data.Datasource for evaluation:
--   <tt>{"splitting":{"percentBegin":0, "percentEnd":25}}</tt>Datasource
--   for training: <tt>{"splitting":{"percentBegin":0, "percentEnd":25,
--   "complement":"true"}}</tt></li>
--   <li><b><tt>strategy</tt></b>To change how Amazon ML splits the data
--   for a datasource, use the <tt>strategy</tt> parameter.The default
--   value for the <tt>strategy</tt> parameter is <tt>sequential</tt>,
--   meaning that Amazon ML takes all of the data records between the
--   <tt>percentBegin</tt> and <tt>percentEnd</tt> parameters for the
--   datasource, in the order that the records appear in the input data.The
--   following two <tt>DataRearrangement</tt> lines are examples of
--   sequentially ordered training and evaluation datasources:Datasource
--   for evaluation: <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"sequential"}}</tt>Datasource for training:
--   <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"sequential", "complement":"true"}}</tt>To randomly split
--   the input data into the proportions indicated by the percentBegin and
--   percentEnd parameters, set the <tt>strategy</tt> parameter to
--   <tt>random</tt> and provide a string that is used as the seed value
--   for the random data splitting (for example, you can use the S3 path to
--   your data as the random seed string). If you choose the random split
--   strategy, Amazon ML assigns each row of data a pseudo-random number
--   between 0 and 100, and then selects the rows that have an assigned
--   number between <tt>percentBegin</tt> and <tt>percentEnd</tt>.
--   Pseudo-random numbers are assigned using both the input seed string
--   value and the byte offset as a seed, so changing the data results in a
--   different split. Any existing ordering is preserved. The random
--   splitting strategy ensures that variables in the training and
--   evaluation data are distributed similarly. It is useful in the cases
--   where the input data may have an implicit sort order, which would
--   otherwise result in training and evaluation datasources containing
--   non-similar data records.The following two <tt>DataRearrangement</tt>
--   lines are examples of non-sequentially ordered training and evaluation
--   datasources:Datasource for evaluation:
--   <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"random",
--   "randomSeed"="s3://my_s3_path/bucket/file.csv"}}</tt>Datasource for
--   training: <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"random", "randomSeed"="s3://my_s3_path/bucket/file.csv",
--   "complement":"true"}}</tt></li>
--   </ul>
--   
--   <a>$sel:dataSchemaUri:RDSDataSpec'</a>,
--   <a>rDSDataSpec_dataSchemaUri</a> - The Amazon S3 location of the
--   <tt>DataSchema</tt>.
--   
--   <a>$sel:databaseInformation:RDSDataSpec'</a>,
--   <a>rDSDataSpec_databaseInformation</a> - Describes the
--   <tt>DatabaseName</tt> and <tt>InstanceIdentifier</tt> of an Amazon RDS
--   database.
--   
--   <a>$sel:selectSqlQuery:RDSDataSpec'</a>,
--   <a>rDSDataSpec_selectSqlQuery</a> - The query that is used to retrieve
--   the observation data for the <tt>DataSource</tt>.
--   
--   <a>$sel:databaseCredentials:RDSDataSpec'</a>,
--   <a>rDSDataSpec_databaseCredentials</a> - The AWS Identity and Access
--   Management (IAM) credentials that are used connect to the Amazon RDS
--   database.
--   
--   <a>$sel:s3StagingLocation:RDSDataSpec'</a>,
--   <a>rDSDataSpec_s3StagingLocation</a> - The Amazon S3 location for
--   staging Amazon RDS data. The data retrieved from Amazon RDS using
--   <tt>SelectSqlQuery</tt> is stored in this location.
--   
--   <a>$sel:resourceRole:RDSDataSpec'</a>, <a>rDSDataSpec_resourceRole</a>
--   - The role (DataPipelineDefaultResourceRole) assumed by an Amazon
--   Elastic Compute Cloud (Amazon EC2) instance to carry out the copy
--   operation from Amazon RDS to an Amazon S3 task. For more information,
--   see <a>Role templates</a> for data pipelines.
--   
--   <a>$sel:serviceRole:RDSDataSpec'</a>, <a>rDSDataSpec_serviceRole</a> -
--   The role (DataPipelineDefaultRole) assumed by AWS Data Pipeline
--   service to monitor the progress of the copy task from Amazon RDS to
--   Amazon S3. For more information, see <a>Role templates</a> for data
--   pipelines.
--   
--   <a>$sel:subnetId:RDSDataSpec'</a>, <a>rDSDataSpec_subnetId</a> - The
--   subnet ID to be used to access a VPC-based RDS DB instance. This
--   attribute is used by Data Pipeline to carry out the copy task from
--   Amazon RDS to Amazon S3.
--   
--   <a>$sel:securityGroupIds:RDSDataSpec'</a>,
--   <a>rDSDataSpec_securityGroupIds</a> - The security group IDs to be
--   used to access a VPC-based RDS DB instance. Ensure that there are
--   appropriate ingress rules set up to allow access to the RDS DB
--   instance. This attribute is used by Data Pipeline to carry out the
--   copy operation from Amazon RDS to an Amazon S3 task.
newRDSDataSpec :: RDSDatabase -> Text -> RDSDatabaseCredentials -> Text -> Text -> Text -> Text -> RDSDataSpec

-- | A JSON string that represents the schema for an Amazon RDS
--   <tt>DataSource</tt>. The <tt>DataSchema</tt> defines the structure of
--   the observation data in the data file(s) referenced in the
--   <tt>DataSource</tt>.
--   
--   A <tt>DataSchema</tt> is not required if you specify a
--   <tt>DataSchemaUri</tt>
--   
--   Define your <tt>DataSchema</tt> as a series of key-value pairs.
--   <tt>attributes</tt> and <tt>excludedVariableNames</tt> have an array
--   of key-value pairs for their value. Use the following format to define
--   your <tt>DataSchema</tt>.
--   
--   { "version": "1.0",
--   
--   "recordAnnotationFieldName": "F1",
--   
--   "recordWeightFieldName": "F2",
--   
--   "targetFieldName": "F3",
--   
--   "dataFormat": "CSV",
--   
--   "dataFileContainsHeader": true,
--   
--   "attributes": [
--   
--   { "fieldName": "F1", "fieldType": "TEXT" }, { "fieldName": "F2",
--   "fieldType": "NUMERIC" }, { "fieldName": "F3", "fieldType":
--   "CATEGORICAL" }, { "fieldName": "F4", "fieldType": "NUMERIC" }, {
--   "fieldName": "F5", "fieldType": "CATEGORICAL" }, { "fieldName": "F6",
--   "fieldType": "TEXT" }, { "fieldName": "F7", "fieldType":
--   "WEIGHTED_INT_SEQUENCE" }, { "fieldName": "F8", "fieldType":
--   "WEIGHTED_STRING_SEQUENCE" } ],
--   
--   "excludedVariableNames": [ "F6" ] }
rDSDataSpec_dataSchema :: Lens' RDSDataSpec (Maybe Text)

-- | A JSON string that represents the splitting and rearrangement
--   processing to be applied to a <tt>DataSource</tt>. If the
--   <tt>DataRearrangement</tt> parameter is not provided, all of the input
--   data is used to create the <tt>Datasource</tt>.
--   
--   There are multiple parameters that control what data is used to create
--   a datasource:
--   
--   <ul>
--   <li><b><tt>percentBegin</tt></b>Use <tt>percentBegin</tt> to indicate
--   the beginning of the range of the data used to create the Datasource.
--   If you do not include <tt>percentBegin</tt> and <tt>percentEnd</tt>,
--   Amazon ML includes all of the data when creating the datasource.</li>
--   <li><b><tt>percentEnd</tt></b>Use <tt>percentEnd</tt> to indicate the
--   end of the range of the data used to create the Datasource. If you do
--   not include <tt>percentBegin</tt> and <tt>percentEnd</tt>, Amazon ML
--   includes all of the data when creating the datasource.</li>
--   <li><b><tt>complement</tt></b>The <tt>complement</tt> parameter
--   instructs Amazon ML to use the data that is not included in the range
--   of <tt>percentBegin</tt> to <tt>percentEnd</tt> to create a
--   datasource. The <tt>complement</tt> parameter is useful if you need to
--   create complementary datasources for training and evaluation. To
--   create a complementary datasource, use the same values for
--   <tt>percentBegin</tt> and <tt>percentEnd</tt>, along with the
--   <tt>complement</tt> parameter.For example, the following two
--   datasources do not share any data, and can be used to train and
--   evaluate a model. The first datasource has 25 percent of the data, and
--   the second one has 75 percent of the data.Datasource for evaluation:
--   <tt>{"splitting":{"percentBegin":0, "percentEnd":25}}</tt>Datasource
--   for training: <tt>{"splitting":{"percentBegin":0, "percentEnd":25,
--   "complement":"true"}}</tt></li>
--   <li><b><tt>strategy</tt></b>To change how Amazon ML splits the data
--   for a datasource, use the <tt>strategy</tt> parameter.The default
--   value for the <tt>strategy</tt> parameter is <tt>sequential</tt>,
--   meaning that Amazon ML takes all of the data records between the
--   <tt>percentBegin</tt> and <tt>percentEnd</tt> parameters for the
--   datasource, in the order that the records appear in the input data.The
--   following two <tt>DataRearrangement</tt> lines are examples of
--   sequentially ordered training and evaluation datasources:Datasource
--   for evaluation: <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"sequential"}}</tt>Datasource for training:
--   <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"sequential", "complement":"true"}}</tt>To randomly split
--   the input data into the proportions indicated by the percentBegin and
--   percentEnd parameters, set the <tt>strategy</tt> parameter to
--   <tt>random</tt> and provide a string that is used as the seed value
--   for the random data splitting (for example, you can use the S3 path to
--   your data as the random seed string). If you choose the random split
--   strategy, Amazon ML assigns each row of data a pseudo-random number
--   between 0 and 100, and then selects the rows that have an assigned
--   number between <tt>percentBegin</tt> and <tt>percentEnd</tt>.
--   Pseudo-random numbers are assigned using both the input seed string
--   value and the byte offset as a seed, so changing the data results in a
--   different split. Any existing ordering is preserved. The random
--   splitting strategy ensures that variables in the training and
--   evaluation data are distributed similarly. It is useful in the cases
--   where the input data may have an implicit sort order, which would
--   otherwise result in training and evaluation datasources containing
--   non-similar data records.The following two <tt>DataRearrangement</tt>
--   lines are examples of non-sequentially ordered training and evaluation
--   datasources:Datasource for evaluation:
--   <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"random",
--   "randomSeed"="s3://my_s3_path/bucket/file.csv"}}</tt>Datasource for
--   training: <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"random", "randomSeed"="s3://my_s3_path/bucket/file.csv",
--   "complement":"true"}}</tt></li>
--   </ul>
rDSDataSpec_dataRearrangement :: Lens' RDSDataSpec (Maybe Text)

-- | The Amazon S3 location of the <tt>DataSchema</tt>.
rDSDataSpec_dataSchemaUri :: Lens' RDSDataSpec (Maybe Text)

-- | Describes the <tt>DatabaseName</tt> and <tt>InstanceIdentifier</tt> of
--   an Amazon RDS database.
rDSDataSpec_databaseInformation :: Lens' RDSDataSpec RDSDatabase

-- | The query that is used to retrieve the observation data for the
--   <tt>DataSource</tt>.
rDSDataSpec_selectSqlQuery :: Lens' RDSDataSpec Text

-- | The AWS Identity and Access Management (IAM) credentials that are used
--   connect to the Amazon RDS database.
rDSDataSpec_databaseCredentials :: Lens' RDSDataSpec RDSDatabaseCredentials

-- | The Amazon S3 location for staging Amazon RDS data. The data retrieved
--   from Amazon RDS using <tt>SelectSqlQuery</tt> is stored in this
--   location.
rDSDataSpec_s3StagingLocation :: Lens' RDSDataSpec Text

-- | The role (DataPipelineDefaultResourceRole) assumed by an Amazon
--   Elastic Compute Cloud (Amazon EC2) instance to carry out the copy
--   operation from Amazon RDS to an Amazon S3 task. For more information,
--   see <a>Role templates</a> for data pipelines.
rDSDataSpec_resourceRole :: Lens' RDSDataSpec Text

-- | The role (DataPipelineDefaultRole) assumed by AWS Data Pipeline
--   service to monitor the progress of the copy task from Amazon RDS to
--   Amazon S3. For more information, see <a>Role templates</a> for data
--   pipelines.
rDSDataSpec_serviceRole :: Lens' RDSDataSpec Text

-- | The subnet ID to be used to access a VPC-based RDS DB instance. This
--   attribute is used by Data Pipeline to carry out the copy task from
--   Amazon RDS to Amazon S3.
rDSDataSpec_subnetId :: Lens' RDSDataSpec Text

-- | The security group IDs to be used to access a VPC-based RDS DB
--   instance. Ensure that there are appropriate ingress rules set up to
--   allow access to the RDS DB instance. This attribute is used by Data
--   Pipeline to carry out the copy operation from Amazon RDS to an Amazon
--   S3 task.
rDSDataSpec_securityGroupIds :: Lens' RDSDataSpec [Text]
instance GHC.Generics.Generic Network.AWS.MachineLearning.Types.RDSDataSpec.RDSDataSpec
instance GHC.Show.Show Network.AWS.MachineLearning.Types.RDSDataSpec.RDSDataSpec
instance GHC.Read.Read Network.AWS.MachineLearning.Types.RDSDataSpec.RDSDataSpec
instance GHC.Classes.Eq Network.AWS.MachineLearning.Types.RDSDataSpec.RDSDataSpec
instance Data.Hashable.Class.Hashable Network.AWS.MachineLearning.Types.RDSDataSpec.RDSDataSpec
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.Types.RDSDataSpec.RDSDataSpec
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MachineLearning.Types.RDSDataSpec.RDSDataSpec


module Network.AWS.MachineLearning.Types.RDSMetadata

-- | The datasource details that are specific to Amazon RDS.
--   
--   <i>See:</i> <a>newRDSMetadata</a> smart constructor.
data RDSMetadata
RDSMetadata' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe RDSDatabase -> RDSMetadata

-- | The ID of the Data Pipeline instance that is used to carry to copy
--   data from Amazon RDS to Amazon S3. You can use the ID to find details
--   about the instance in the Data Pipeline console.
[$sel:dataPipelineId:RDSMetadata'] :: RDSMetadata -> Maybe Text

-- | The SQL query that is supplied during CreateDataSourceFromRDS. Returns
--   only if <tt>Verbose</tt> is true in <tt>GetDataSourceInput</tt>.
[$sel:selectSqlQuery:RDSMetadata'] :: RDSMetadata -> Maybe Text

-- | The role (DataPipelineDefaultRole) assumed by the Data Pipeline
--   service to monitor the progress of the copy task from Amazon RDS to
--   Amazon S3. For more information, see <a>Role templates</a> for data
--   pipelines.
[$sel:serviceRole:RDSMetadata'] :: RDSMetadata -> Maybe Text

-- | The role (DataPipelineDefaultResourceRole) assumed by an Amazon EC2
--   instance to carry out the copy task from Amazon RDS to Amazon S3. For
--   more information, see <a>Role templates</a> for data pipelines.
[$sel:resourceRole:RDSMetadata'] :: RDSMetadata -> Maybe Text
[$sel:databaseUserName:RDSMetadata'] :: RDSMetadata -> Maybe Text

-- | The database details required to connect to an Amazon RDS.
[$sel:database:RDSMetadata'] :: RDSMetadata -> Maybe RDSDatabase

-- | Create a value of <a>RDSMetadata</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataPipelineId:RDSMetadata'</a>,
--   <a>rDSMetadata_dataPipelineId</a> - The ID of the Data Pipeline
--   instance that is used to carry to copy data from Amazon RDS to Amazon
--   S3. You can use the ID to find details about the instance in the Data
--   Pipeline console.
--   
--   <a>$sel:selectSqlQuery:RDSMetadata'</a>,
--   <a>rDSMetadata_selectSqlQuery</a> - The SQL query that is supplied
--   during CreateDataSourceFromRDS. Returns only if <tt>Verbose</tt> is
--   true in <tt>GetDataSourceInput</tt>.
--   
--   <a>$sel:serviceRole:RDSMetadata'</a>, <a>rDSMetadata_serviceRole</a> -
--   The role (DataPipelineDefaultRole) assumed by the Data Pipeline
--   service to monitor the progress of the copy task from Amazon RDS to
--   Amazon S3. For more information, see <a>Role templates</a> for data
--   pipelines.
--   
--   <a>$sel:resourceRole:RDSMetadata'</a>, <a>rDSMetadata_resourceRole</a>
--   - The role (DataPipelineDefaultResourceRole) assumed by an Amazon EC2
--   instance to carry out the copy task from Amazon RDS to Amazon S3. For
--   more information, see <a>Role templates</a> for data pipelines.
--   
--   <a>$sel:databaseUserName:RDSMetadata'</a>,
--   <a>rDSMetadata_databaseUserName</a> - Undocumented member.
--   
--   <a>$sel:database:RDSMetadata'</a>, <a>rDSMetadata_database</a> - The
--   database details required to connect to an Amazon RDS.
newRDSMetadata :: RDSMetadata

-- | The ID of the Data Pipeline instance that is used to carry to copy
--   data from Amazon RDS to Amazon S3. You can use the ID to find details
--   about the instance in the Data Pipeline console.
rDSMetadata_dataPipelineId :: Lens' RDSMetadata (Maybe Text)

-- | The SQL query that is supplied during CreateDataSourceFromRDS. Returns
--   only if <tt>Verbose</tt> is true in <tt>GetDataSourceInput</tt>.
rDSMetadata_selectSqlQuery :: Lens' RDSMetadata (Maybe Text)

-- | The role (DataPipelineDefaultRole) assumed by the Data Pipeline
--   service to monitor the progress of the copy task from Amazon RDS to
--   Amazon S3. For more information, see <a>Role templates</a> for data
--   pipelines.
rDSMetadata_serviceRole :: Lens' RDSMetadata (Maybe Text)

-- | The role (DataPipelineDefaultResourceRole) assumed by an Amazon EC2
--   instance to carry out the copy task from Amazon RDS to Amazon S3. For
--   more information, see <a>Role templates</a> for data pipelines.
rDSMetadata_resourceRole :: Lens' RDSMetadata (Maybe Text)

-- | Undocumented member.
rDSMetadata_databaseUserName :: Lens' RDSMetadata (Maybe Text)

-- | The database details required to connect to an Amazon RDS.
rDSMetadata_database :: Lens' RDSMetadata (Maybe RDSDatabase)
instance GHC.Generics.Generic Network.AWS.MachineLearning.Types.RDSMetadata.RDSMetadata
instance GHC.Show.Show Network.AWS.MachineLearning.Types.RDSMetadata.RDSMetadata
instance GHC.Read.Read Network.AWS.MachineLearning.Types.RDSMetadata.RDSMetadata
instance GHC.Classes.Eq Network.AWS.MachineLearning.Types.RDSMetadata.RDSMetadata
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.MachineLearning.Types.RDSMetadata.RDSMetadata
instance Data.Hashable.Class.Hashable Network.AWS.MachineLearning.Types.RDSMetadata.RDSMetadata
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.Types.RDSMetadata.RDSMetadata


module Network.AWS.MachineLearning.Types.RealtimeEndpointStatus
newtype RealtimeEndpointStatus
RealtimeEndpointStatus' :: Text -> RealtimeEndpointStatus
[fromRealtimeEndpointStatus] :: RealtimeEndpointStatus -> Text
pattern RealtimeEndpointStatus_FAILED :: RealtimeEndpointStatus
pattern RealtimeEndpointStatus_NONE :: RealtimeEndpointStatus
pattern RealtimeEndpointStatus_READY :: RealtimeEndpointStatus
pattern RealtimeEndpointStatus_UPDATING :: RealtimeEndpointStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.MachineLearning.Types.RealtimeEndpointStatus.RealtimeEndpointStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.MachineLearning.Types.RealtimeEndpointStatus.RealtimeEndpointStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.MachineLearning.Types.RealtimeEndpointStatus.RealtimeEndpointStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MachineLearning.Types.RealtimeEndpointStatus.RealtimeEndpointStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.MachineLearning.Types.RealtimeEndpointStatus.RealtimeEndpointStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.MachineLearning.Types.RealtimeEndpointStatus.RealtimeEndpointStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.MachineLearning.Types.RealtimeEndpointStatus.RealtimeEndpointStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.MachineLearning.Types.RealtimeEndpointStatus.RealtimeEndpointStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.MachineLearning.Types.RealtimeEndpointStatus.RealtimeEndpointStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.MachineLearning.Types.RealtimeEndpointStatus.RealtimeEndpointStatus
instance Network.AWS.Data.Text.ToText Network.AWS.MachineLearning.Types.RealtimeEndpointStatus.RealtimeEndpointStatus
instance Network.AWS.Data.Text.FromText Network.AWS.MachineLearning.Types.RealtimeEndpointStatus.RealtimeEndpointStatus
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.Types.RealtimeEndpointStatus.RealtimeEndpointStatus
instance Data.Hashable.Class.Hashable Network.AWS.MachineLearning.Types.RealtimeEndpointStatus.RealtimeEndpointStatus
instance GHC.Generics.Generic Network.AWS.MachineLearning.Types.RealtimeEndpointStatus.RealtimeEndpointStatus
instance GHC.Classes.Ord Network.AWS.MachineLearning.Types.RealtimeEndpointStatus.RealtimeEndpointStatus
instance GHC.Classes.Eq Network.AWS.MachineLearning.Types.RealtimeEndpointStatus.RealtimeEndpointStatus
instance GHC.Read.Read Network.AWS.MachineLearning.Types.RealtimeEndpointStatus.RealtimeEndpointStatus
instance GHC.Show.Show Network.AWS.MachineLearning.Types.RealtimeEndpointStatus.RealtimeEndpointStatus


module Network.AWS.MachineLearning.Types.RealtimeEndpointInfo

-- | Describes the real-time endpoint information for an <tt>MLModel</tt>.
--   
--   <i>See:</i> <a>newRealtimeEndpointInfo</a> smart constructor.
data RealtimeEndpointInfo
RealtimeEndpointInfo' :: Maybe POSIX -> Maybe Int -> Maybe RealtimeEndpointStatus -> Maybe Text -> RealtimeEndpointInfo

-- | The time that the request to create the real-time endpoint for the
--   <tt>MLModel</tt> was received. The time is expressed in epoch time.
[$sel:createdAt:RealtimeEndpointInfo'] :: RealtimeEndpointInfo -> Maybe POSIX

-- | The maximum processing rate for the real-time endpoint for
--   <tt>MLModel</tt>, measured in incoming requests per second.
[$sel:peakRequestsPerSecond:RealtimeEndpointInfo'] :: RealtimeEndpointInfo -> Maybe Int

-- | The current status of the real-time endpoint for the <tt>MLModel</tt>.
--   This element can have one of the following values:
--   
--   <ul>
--   <li><tt>NONE</tt> - Endpoint does not exist or was previously
--   deleted.</li>
--   <li><tt>READY</tt> - Endpoint is ready to be used for real-time
--   predictions.</li>
--   <li><tt>UPDATING</tt> - Updating/creating the endpoint.</li>
--   </ul>
[$sel:endpointStatus:RealtimeEndpointInfo'] :: RealtimeEndpointInfo -> Maybe RealtimeEndpointStatus

-- | The URI that specifies where to send real-time prediction requests for
--   the <tt>MLModel</tt>.
--   
--   <b>Note:</b> The application must wait until the real-time endpoint is
--   ready before using this URI.
[$sel:endpointUrl:RealtimeEndpointInfo'] :: RealtimeEndpointInfo -> Maybe Text

-- | Create a value of <a>RealtimeEndpointInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdAt:RealtimeEndpointInfo'</a>,
--   <a>realtimeEndpointInfo_createdAt</a> - The time that the request to
--   create the real-time endpoint for the <tt>MLModel</tt> was received.
--   The time is expressed in epoch time.
--   
--   <a>$sel:peakRequestsPerSecond:RealtimeEndpointInfo'</a>,
--   <a>realtimeEndpointInfo_peakRequestsPerSecond</a> - The maximum
--   processing rate for the real-time endpoint for <tt>MLModel</tt>,
--   measured in incoming requests per second.
--   
--   <a>$sel:endpointStatus:RealtimeEndpointInfo'</a>,
--   <a>realtimeEndpointInfo_endpointStatus</a> - The current status of the
--   real-time endpoint for the <tt>MLModel</tt>. This element can have one
--   of the following values:
--   
--   <ul>
--   <li><tt>NONE</tt> - Endpoint does not exist or was previously
--   deleted.</li>
--   <li><tt>READY</tt> - Endpoint is ready to be used for real-time
--   predictions.</li>
--   <li><tt>UPDATING</tt> - Updating/creating the endpoint.</li>
--   </ul>
--   
--   <a>$sel:endpointUrl:RealtimeEndpointInfo'</a>,
--   <a>realtimeEndpointInfo_endpointUrl</a> - The URI that specifies where
--   to send real-time prediction requests for the <tt>MLModel</tt>.
--   
--   <b>Note:</b> The application must wait until the real-time endpoint is
--   ready before using this URI.
newRealtimeEndpointInfo :: RealtimeEndpointInfo

-- | The time that the request to create the real-time endpoint for the
--   <tt>MLModel</tt> was received. The time is expressed in epoch time.
realtimeEndpointInfo_createdAt :: Lens' RealtimeEndpointInfo (Maybe UTCTime)

-- | The maximum processing rate for the real-time endpoint for
--   <tt>MLModel</tt>, measured in incoming requests per second.
realtimeEndpointInfo_peakRequestsPerSecond :: Lens' RealtimeEndpointInfo (Maybe Int)

-- | The current status of the real-time endpoint for the <tt>MLModel</tt>.
--   This element can have one of the following values:
--   
--   <ul>
--   <li><tt>NONE</tt> - Endpoint does not exist or was previously
--   deleted.</li>
--   <li><tt>READY</tt> - Endpoint is ready to be used for real-time
--   predictions.</li>
--   <li><tt>UPDATING</tt> - Updating/creating the endpoint.</li>
--   </ul>
realtimeEndpointInfo_endpointStatus :: Lens' RealtimeEndpointInfo (Maybe RealtimeEndpointStatus)

-- | The URI that specifies where to send real-time prediction requests for
--   the <tt>MLModel</tt>.
--   
--   <b>Note:</b> The application must wait until the real-time endpoint is
--   ready before using this URI.
realtimeEndpointInfo_endpointUrl :: Lens' RealtimeEndpointInfo (Maybe Text)
instance GHC.Generics.Generic Network.AWS.MachineLearning.Types.RealtimeEndpointInfo.RealtimeEndpointInfo
instance GHC.Show.Show Network.AWS.MachineLearning.Types.RealtimeEndpointInfo.RealtimeEndpointInfo
instance GHC.Read.Read Network.AWS.MachineLearning.Types.RealtimeEndpointInfo.RealtimeEndpointInfo
instance GHC.Classes.Eq Network.AWS.MachineLearning.Types.RealtimeEndpointInfo.RealtimeEndpointInfo
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.MachineLearning.Types.RealtimeEndpointInfo.RealtimeEndpointInfo
instance Data.Hashable.Class.Hashable Network.AWS.MachineLearning.Types.RealtimeEndpointInfo.RealtimeEndpointInfo
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.Types.RealtimeEndpointInfo.RealtimeEndpointInfo


module Network.AWS.MachineLearning.Types.MLModel

-- | Represents the output of a <tt>GetMLModel</tt> operation.
--   
--   The content consists of the detailed metadata and the current status
--   of the <tt>MLModel</tt>.
--   
--   <i>See:</i> <a>newMLModel</a> smart constructor.
data MLModel
MLModel' :: Maybe Algorithm -> Maybe EntityStatus -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe RealtimeEndpointInfo -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Double -> Maybe MLModelType -> Maybe Integer -> Maybe Text -> Maybe Text -> Maybe Integer -> Maybe Text -> Maybe POSIX -> MLModel

-- | The algorithm used to train the <tt>MLModel</tt>. The following
--   algorithm is supported:
--   
--   <ul>
--   <li><tt>SGD</tt> -- Stochastic gradient descent. The goal of
--   <tt>SGD</tt> is to minimize the gradient of the loss function.</li>
--   </ul>
[$sel:algorithm:MLModel'] :: MLModel -> Maybe Algorithm

-- | The current status of an <tt>MLModel</tt>. This element can have one
--   of the following values:
--   
--   <ul>
--   <li><tt>PENDING</tt> - Amazon Machine Learning (Amazon ML) submitted a
--   request to create an <tt>MLModel</tt>.</li>
--   <li><tt>INPROGRESS</tt> - The creation process is underway.</li>
--   <li><tt>FAILED</tt> - The request to create an <tt>MLModel</tt> didn't
--   run to completion. The model isn't usable.</li>
--   <li><tt>COMPLETED</tt> - The creation process completed
--   successfully.</li>
--   <li><tt>DELETED</tt> - The <tt>MLModel</tt> is marked as deleted. It
--   isn't usable.</li>
--   </ul>
[$sel:status:MLModel'] :: MLModel -> Maybe EntityStatus
[$sel:startedAt:MLModel'] :: MLModel -> Maybe POSIX

-- | A description of the most recent details about accessing the
--   <tt>MLModel</tt>.
[$sel:message:MLModel'] :: MLModel -> Maybe Text

-- | The time that the <tt>MLModel</tt> was created. The time is expressed
--   in epoch time.
[$sel:createdAt:MLModel'] :: MLModel -> Maybe POSIX

-- | The time of the most recent edit to the <tt>ScoreThreshold</tt>. The
--   time is expressed in epoch time.
[$sel:scoreThresholdLastUpdatedAt:MLModel'] :: MLModel -> Maybe POSIX

-- | The current endpoint of the <tt>MLModel</tt>.
[$sel:endpointInfo:MLModel'] :: MLModel -> Maybe RealtimeEndpointInfo

-- | A list of the training parameters in the <tt>MLModel</tt>. The list is
--   implemented as a map of key-value pairs.
--   
--   The following is the current set of training parameters:
--   
--   <ul>
--   <li><tt>sgd.maxMLModelSizeInBytes</tt> - The maximum allowed size of
--   the model. Depending on the input data, the size of the model might
--   affect its performance.The value is an integer that ranges from
--   <tt>100000</tt> to <tt>2147483648</tt>. The default value is
--   <tt>33554432</tt>.</li>
--   <li><tt>sgd.maxPasses</tt> - The number of times that the training
--   process traverses the observations to build the <tt>MLModel</tt>. The
--   value is an integer that ranges from <tt>1</tt> to <tt>10000</tt>. The
--   default value is <tt>10</tt>.</li>
--   <li><tt>sgd.shuffleType</tt> - Whether Amazon ML shuffles the training
--   data. Shuffling the data improves a model's ability to find the
--   optimal solution for a variety of data types. The valid values are
--   <tt>auto</tt> and <tt>none</tt>. The default value is
--   <tt>none</tt>.</li>
--   <li><tt>sgd.l1RegularizationAmount</tt> - The coefficient
--   regularization L1 norm, which controls overfitting the data by
--   penalizing large coefficients. This parameter tends to drive
--   coefficients to zero, resulting in sparse feature set. If you use this
--   parameter, start by specifying a small value, such as
--   <tt>1.0E-08</tt>.The value is a double that ranges from <tt>0</tt> to
--   <tt>MAX_DOUBLE</tt>. The default is to not use L1 normalization. This
--   parameter can't be used when <tt>L2</tt> is specified. Use this
--   parameter sparingly.</li>
--   <li><tt>sgd.l2RegularizationAmount</tt> - The coefficient
--   regularization L2 norm, which controls overfitting the data by
--   penalizing large coefficients. This tends to drive coefficients to
--   small, nonzero values. If you use this parameter, start by specifying
--   a small value, such as <tt>1.0E-08</tt>.The value is a double that
--   ranges from <tt>0</tt> to <tt>MAX_DOUBLE</tt>. The default is to not
--   use L2 normalization. This parameter can't be used when <tt>L1</tt> is
--   specified. Use this parameter sparingly.</li>
--   </ul>
[$sel:trainingParameters:MLModel'] :: MLModel -> Maybe (HashMap Text Text)

-- | A user-supplied name or description of the <tt>MLModel</tt>.
[$sel:name:MLModel'] :: MLModel -> Maybe Text

-- | The AWS user account from which the <tt>MLModel</tt> was created. The
--   account type can be either an AWS root account or an AWS Identity and
--   Access Management (IAM) user account.
[$sel:createdByIamUser:MLModel'] :: MLModel -> Maybe Text
[$sel:finishedAt:MLModel'] :: MLModel -> Maybe POSIX
[$sel:scoreThreshold:MLModel'] :: MLModel -> Maybe Double

-- | Identifies the <tt>MLModel</tt> category. The following are the
--   available types:
--   
--   <ul>
--   <li><tt>REGRESSION</tt> - Produces a numeric result. For example,
--   "What price should a house be listed at?"</li>
--   <li><tt>BINARY</tt> - Produces one of two possible results. For
--   example, "Is this a child-friendly web site?".</li>
--   <li><tt>MULTICLASS</tt> - Produces one of several possible results.
--   For example, "Is this a HIGH-, LOW-, or MEDIUM-risk trade?".</li>
--   </ul>
[$sel:mLModelType:MLModel'] :: MLModel -> Maybe MLModelType
[$sel:sizeInBytes:MLModel'] :: MLModel -> Maybe Integer

-- | The ID assigned to the <tt>MLModel</tt> at creation.
[$sel:mLModelId:MLModel'] :: MLModel -> Maybe Text

-- | The location of the data file or directory in Amazon Simple Storage
--   Service (Amazon S3).
[$sel:inputDataLocationS3:MLModel'] :: MLModel -> Maybe Text
[$sel:computeTime:MLModel'] :: MLModel -> Maybe Integer

-- | The ID of the training <tt>DataSource</tt>. The <tt>CreateMLModel</tt>
--   operation uses the <tt>TrainingDataSourceId</tt>.
[$sel:trainingDataSourceId:MLModel'] :: MLModel -> Maybe Text

-- | The time of the most recent edit to the <tt>MLModel</tt>. The time is
--   expressed in epoch time.
[$sel:lastUpdatedAt:MLModel'] :: MLModel -> Maybe POSIX

-- | Create a value of <a>MLModel</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:algorithm:MLModel'</a>, <a>mLModel_algorithm</a> - The
--   algorithm used to train the <tt>MLModel</tt>. The following algorithm
--   is supported:
--   
--   <ul>
--   <li><tt>SGD</tt> -- Stochastic gradient descent. The goal of
--   <tt>SGD</tt> is to minimize the gradient of the loss function.</li>
--   </ul>
--   
--   <a>$sel:status:MLModel'</a>, <a>mLModel_status</a> - The current
--   status of an <tt>MLModel</tt>. This element can have one of the
--   following values:
--   
--   <ul>
--   <li><tt>PENDING</tt> - Amazon Machine Learning (Amazon ML) submitted a
--   request to create an <tt>MLModel</tt>.</li>
--   <li><tt>INPROGRESS</tt> - The creation process is underway.</li>
--   <li><tt>FAILED</tt> - The request to create an <tt>MLModel</tt> didn't
--   run to completion. The model isn't usable.</li>
--   <li><tt>COMPLETED</tt> - The creation process completed
--   successfully.</li>
--   <li><tt>DELETED</tt> - The <tt>MLModel</tt> is marked as deleted. It
--   isn't usable.</li>
--   </ul>
--   
--   <a>$sel:startedAt:MLModel'</a>, <a>mLModel_startedAt</a> -
--   Undocumented member.
--   
--   <a>$sel:message:MLModel'</a>, <a>mLModel_message</a> - A description
--   of the most recent details about accessing the <tt>MLModel</tt>.
--   
--   <a>$sel:createdAt:MLModel'</a>, <a>mLModel_createdAt</a> - The time
--   that the <tt>MLModel</tt> was created. The time is expressed in epoch
--   time.
--   
--   <a>$sel:scoreThresholdLastUpdatedAt:MLModel'</a>,
--   <a>mLModel_scoreThresholdLastUpdatedAt</a> - The time of the most
--   recent edit to the <tt>ScoreThreshold</tt>. The time is expressed in
--   epoch time.
--   
--   <a>$sel:endpointInfo:MLModel'</a>, <a>mLModel_endpointInfo</a> - The
--   current endpoint of the <tt>MLModel</tt>.
--   
--   <a>$sel:trainingParameters:MLModel'</a>,
--   <a>mLModel_trainingParameters</a> - A list of the training parameters
--   in the <tt>MLModel</tt>. The list is implemented as a map of key-value
--   pairs.
--   
--   The following is the current set of training parameters:
--   
--   <ul>
--   <li><tt>sgd.maxMLModelSizeInBytes</tt> - The maximum allowed size of
--   the model. Depending on the input data, the size of the model might
--   affect its performance.The value is an integer that ranges from
--   <tt>100000</tt> to <tt>2147483648</tt>. The default value is
--   <tt>33554432</tt>.</li>
--   <li><tt>sgd.maxPasses</tt> - The number of times that the training
--   process traverses the observations to build the <tt>MLModel</tt>. The
--   value is an integer that ranges from <tt>1</tt> to <tt>10000</tt>. The
--   default value is <tt>10</tt>.</li>
--   <li><tt>sgd.shuffleType</tt> - Whether Amazon ML shuffles the training
--   data. Shuffling the data improves a model's ability to find the
--   optimal solution for a variety of data types. The valid values are
--   <tt>auto</tt> and <tt>none</tt>. The default value is
--   <tt>none</tt>.</li>
--   <li><tt>sgd.l1RegularizationAmount</tt> - The coefficient
--   regularization L1 norm, which controls overfitting the data by
--   penalizing large coefficients. This parameter tends to drive
--   coefficients to zero, resulting in sparse feature set. If you use this
--   parameter, start by specifying a small value, such as
--   <tt>1.0E-08</tt>.The value is a double that ranges from <tt>0</tt> to
--   <tt>MAX_DOUBLE</tt>. The default is to not use L1 normalization. This
--   parameter can't be used when <tt>L2</tt> is specified. Use this
--   parameter sparingly.</li>
--   <li><tt>sgd.l2RegularizationAmount</tt> - The coefficient
--   regularization L2 norm, which controls overfitting the data by
--   penalizing large coefficients. This tends to drive coefficients to
--   small, nonzero values. If you use this parameter, start by specifying
--   a small value, such as <tt>1.0E-08</tt>.The value is a double that
--   ranges from <tt>0</tt> to <tt>MAX_DOUBLE</tt>. The default is to not
--   use L2 normalization. This parameter can't be used when <tt>L1</tt> is
--   specified. Use this parameter sparingly.</li>
--   </ul>
--   
--   <a>$sel:name:MLModel'</a>, <a>mLModel_name</a> - A user-supplied name
--   or description of the <tt>MLModel</tt>.
--   
--   <a>$sel:createdByIamUser:MLModel'</a>, <a>mLModel_createdByIamUser</a>
--   - The AWS user account from which the <tt>MLModel</tt> was created.
--   The account type can be either an AWS root account or an AWS Identity
--   and Access Management (IAM) user account.
--   
--   <a>$sel:finishedAt:MLModel'</a>, <a>mLModel_finishedAt</a> -
--   Undocumented member.
--   
--   <a>$sel:scoreThreshold:MLModel'</a>, <a>mLModel_scoreThreshold</a> -
--   Undocumented member.
--   
--   <a>$sel:mLModelType:MLModel'</a>, <a>mLModel_mLModelType</a> -
--   Identifies the <tt>MLModel</tt> category. The following are the
--   available types:
--   
--   <ul>
--   <li><tt>REGRESSION</tt> - Produces a numeric result. For example,
--   "What price should a house be listed at?"</li>
--   <li><tt>BINARY</tt> - Produces one of two possible results. For
--   example, "Is this a child-friendly web site?".</li>
--   <li><tt>MULTICLASS</tt> - Produces one of several possible results.
--   For example, "Is this a HIGH-, LOW-, or MEDIUM-risk trade?".</li>
--   </ul>
--   
--   <a>$sel:sizeInBytes:MLModel'</a>, <a>mLModel_sizeInBytes</a> -
--   Undocumented member.
--   
--   <a>$sel:mLModelId:MLModel'</a>, <a>mLModel_mLModelId</a> - The ID
--   assigned to the <tt>MLModel</tt> at creation.
--   
--   <a>$sel:inputDataLocationS3:MLModel'</a>,
--   <a>mLModel_inputDataLocationS3</a> - The location of the data file or
--   directory in Amazon Simple Storage Service (Amazon S3).
--   
--   <a>$sel:computeTime:MLModel'</a>, <a>mLModel_computeTime</a> -
--   Undocumented member.
--   
--   <a>$sel:trainingDataSourceId:MLModel'</a>,
--   <a>mLModel_trainingDataSourceId</a> - The ID of the training
--   <tt>DataSource</tt>. The <tt>CreateMLModel</tt> operation uses the
--   <tt>TrainingDataSourceId</tt>.
--   
--   <a>$sel:lastUpdatedAt:MLModel'</a>, <a>mLModel_lastUpdatedAt</a> - The
--   time of the most recent edit to the <tt>MLModel</tt>. The time is
--   expressed in epoch time.
newMLModel :: MLModel

-- | The algorithm used to train the <tt>MLModel</tt>. The following
--   algorithm is supported:
--   
--   <ul>
--   <li><tt>SGD</tt> -- Stochastic gradient descent. The goal of
--   <tt>SGD</tt> is to minimize the gradient of the loss function.</li>
--   </ul>
mLModel_algorithm :: Lens' MLModel (Maybe Algorithm)

-- | The current status of an <tt>MLModel</tt>. This element can have one
--   of the following values:
--   
--   <ul>
--   <li><tt>PENDING</tt> - Amazon Machine Learning (Amazon ML) submitted a
--   request to create an <tt>MLModel</tt>.</li>
--   <li><tt>INPROGRESS</tt> - The creation process is underway.</li>
--   <li><tt>FAILED</tt> - The request to create an <tt>MLModel</tt> didn't
--   run to completion. The model isn't usable.</li>
--   <li><tt>COMPLETED</tt> - The creation process completed
--   successfully.</li>
--   <li><tt>DELETED</tt> - The <tt>MLModel</tt> is marked as deleted. It
--   isn't usable.</li>
--   </ul>
mLModel_status :: Lens' MLModel (Maybe EntityStatus)

-- | Undocumented member.
mLModel_startedAt :: Lens' MLModel (Maybe UTCTime)

-- | A description of the most recent details about accessing the
--   <tt>MLModel</tt>.
mLModel_message :: Lens' MLModel (Maybe Text)

-- | The time that the <tt>MLModel</tt> was created. The time is expressed
--   in epoch time.
mLModel_createdAt :: Lens' MLModel (Maybe UTCTime)

-- | The time of the most recent edit to the <tt>ScoreThreshold</tt>. The
--   time is expressed in epoch time.
mLModel_scoreThresholdLastUpdatedAt :: Lens' MLModel (Maybe UTCTime)

-- | The current endpoint of the <tt>MLModel</tt>.
mLModel_endpointInfo :: Lens' MLModel (Maybe RealtimeEndpointInfo)

-- | A list of the training parameters in the <tt>MLModel</tt>. The list is
--   implemented as a map of key-value pairs.
--   
--   The following is the current set of training parameters:
--   
--   <ul>
--   <li><tt>sgd.maxMLModelSizeInBytes</tt> - The maximum allowed size of
--   the model. Depending on the input data, the size of the model might
--   affect its performance.The value is an integer that ranges from
--   <tt>100000</tt> to <tt>2147483648</tt>. The default value is
--   <tt>33554432</tt>.</li>
--   <li><tt>sgd.maxPasses</tt> - The number of times that the training
--   process traverses the observations to build the <tt>MLModel</tt>. The
--   value is an integer that ranges from <tt>1</tt> to <tt>10000</tt>. The
--   default value is <tt>10</tt>.</li>
--   <li><tt>sgd.shuffleType</tt> - Whether Amazon ML shuffles the training
--   data. Shuffling the data improves a model's ability to find the
--   optimal solution for a variety of data types. The valid values are
--   <tt>auto</tt> and <tt>none</tt>. The default value is
--   <tt>none</tt>.</li>
--   <li><tt>sgd.l1RegularizationAmount</tt> - The coefficient
--   regularization L1 norm, which controls overfitting the data by
--   penalizing large coefficients. This parameter tends to drive
--   coefficients to zero, resulting in sparse feature set. If you use this
--   parameter, start by specifying a small value, such as
--   <tt>1.0E-08</tt>.The value is a double that ranges from <tt>0</tt> to
--   <tt>MAX_DOUBLE</tt>. The default is to not use L1 normalization. This
--   parameter can't be used when <tt>L2</tt> is specified. Use this
--   parameter sparingly.</li>
--   <li><tt>sgd.l2RegularizationAmount</tt> - The coefficient
--   regularization L2 norm, which controls overfitting the data by
--   penalizing large coefficients. This tends to drive coefficients to
--   small, nonzero values. If you use this parameter, start by specifying
--   a small value, such as <tt>1.0E-08</tt>.The value is a double that
--   ranges from <tt>0</tt> to <tt>MAX_DOUBLE</tt>. The default is to not
--   use L2 normalization. This parameter can't be used when <tt>L1</tt> is
--   specified. Use this parameter sparingly.</li>
--   </ul>
mLModel_trainingParameters :: Lens' MLModel (Maybe (HashMap Text Text))

-- | A user-supplied name or description of the <tt>MLModel</tt>.
mLModel_name :: Lens' MLModel (Maybe Text)

-- | The AWS user account from which the <tt>MLModel</tt> was created. The
--   account type can be either an AWS root account or an AWS Identity and
--   Access Management (IAM) user account.
mLModel_createdByIamUser :: Lens' MLModel (Maybe Text)

-- | Undocumented member.
mLModel_finishedAt :: Lens' MLModel (Maybe UTCTime)

-- | Undocumented member.
mLModel_scoreThreshold :: Lens' MLModel (Maybe Double)

-- | Identifies the <tt>MLModel</tt> category. The following are the
--   available types:
--   
--   <ul>
--   <li><tt>REGRESSION</tt> - Produces a numeric result. For example,
--   "What price should a house be listed at?"</li>
--   <li><tt>BINARY</tt> - Produces one of two possible results. For
--   example, "Is this a child-friendly web site?".</li>
--   <li><tt>MULTICLASS</tt> - Produces one of several possible results.
--   For example, "Is this a HIGH-, LOW-, or MEDIUM-risk trade?".</li>
--   </ul>
mLModel_mLModelType :: Lens' MLModel (Maybe MLModelType)

-- | Undocumented member.
mLModel_sizeInBytes :: Lens' MLModel (Maybe Integer)

-- | The ID assigned to the <tt>MLModel</tt> at creation.
mLModel_mLModelId :: Lens' MLModel (Maybe Text)

-- | The location of the data file or directory in Amazon Simple Storage
--   Service (Amazon S3).
mLModel_inputDataLocationS3 :: Lens' MLModel (Maybe Text)

-- | Undocumented member.
mLModel_computeTime :: Lens' MLModel (Maybe Integer)

-- | The ID of the training <tt>DataSource</tt>. The <tt>CreateMLModel</tt>
--   operation uses the <tt>TrainingDataSourceId</tt>.
mLModel_trainingDataSourceId :: Lens' MLModel (Maybe Text)

-- | The time of the most recent edit to the <tt>MLModel</tt>. The time is
--   expressed in epoch time.
mLModel_lastUpdatedAt :: Lens' MLModel (Maybe UTCTime)
instance GHC.Generics.Generic Network.AWS.MachineLearning.Types.MLModel.MLModel
instance GHC.Show.Show Network.AWS.MachineLearning.Types.MLModel.MLModel
instance GHC.Read.Read Network.AWS.MachineLearning.Types.MLModel.MLModel
instance GHC.Classes.Eq Network.AWS.MachineLearning.Types.MLModel.MLModel
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.MachineLearning.Types.MLModel.MLModel
instance Data.Hashable.Class.Hashable Network.AWS.MachineLearning.Types.MLModel.MLModel
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.Types.MLModel.MLModel


module Network.AWS.MachineLearning.Types.RedshiftDatabase

-- | Describes the database details required to connect to an Amazon
--   Redshift database.
--   
--   <i>See:</i> <a>newRedshiftDatabase</a> smart constructor.
data RedshiftDatabase
RedshiftDatabase' :: Text -> Text -> RedshiftDatabase
[$sel:databaseName:RedshiftDatabase'] :: RedshiftDatabase -> Text
[$sel:clusterIdentifier:RedshiftDatabase'] :: RedshiftDatabase -> Text

-- | Create a value of <a>RedshiftDatabase</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:databaseName:RedshiftDatabase'</a>,
--   <a>redshiftDatabase_databaseName</a> - Undocumented member.
--   
--   <a>$sel:clusterIdentifier:RedshiftDatabase'</a>,
--   <a>redshiftDatabase_clusterIdentifier</a> - Undocumented member.
newRedshiftDatabase :: Text -> Text -> RedshiftDatabase

-- | Undocumented member.
redshiftDatabase_databaseName :: Lens' RedshiftDatabase Text

-- | Undocumented member.
redshiftDatabase_clusterIdentifier :: Lens' RedshiftDatabase Text
instance GHC.Generics.Generic Network.AWS.MachineLearning.Types.RedshiftDatabase.RedshiftDatabase
instance GHC.Show.Show Network.AWS.MachineLearning.Types.RedshiftDatabase.RedshiftDatabase
instance GHC.Read.Read Network.AWS.MachineLearning.Types.RedshiftDatabase.RedshiftDatabase
instance GHC.Classes.Eq Network.AWS.MachineLearning.Types.RedshiftDatabase.RedshiftDatabase
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.MachineLearning.Types.RedshiftDatabase.RedshiftDatabase
instance Data.Hashable.Class.Hashable Network.AWS.MachineLearning.Types.RedshiftDatabase.RedshiftDatabase
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.Types.RedshiftDatabase.RedshiftDatabase
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MachineLearning.Types.RedshiftDatabase.RedshiftDatabase


module Network.AWS.MachineLearning.Types.RedshiftDatabaseCredentials

-- | Describes the database credentials for connecting to a database on an
--   Amazon Redshift cluster.
--   
--   <i>See:</i> <a>newRedshiftDatabaseCredentials</a> smart constructor.
data RedshiftDatabaseCredentials
RedshiftDatabaseCredentials' :: Text -> Text -> RedshiftDatabaseCredentials
[$sel:username:RedshiftDatabaseCredentials'] :: RedshiftDatabaseCredentials -> Text
[$sel:password:RedshiftDatabaseCredentials'] :: RedshiftDatabaseCredentials -> Text

-- | Create a value of <a>RedshiftDatabaseCredentials</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:username:RedshiftDatabaseCredentials'</a>,
--   <a>redshiftDatabaseCredentials_username</a> - Undocumented member.
--   
--   <a>$sel:password:RedshiftDatabaseCredentials'</a>,
--   <a>redshiftDatabaseCredentials_password</a> - Undocumented member.
newRedshiftDatabaseCredentials :: Text -> Text -> RedshiftDatabaseCredentials

-- | Undocumented member.
redshiftDatabaseCredentials_username :: Lens' RedshiftDatabaseCredentials Text

-- | Undocumented member.
redshiftDatabaseCredentials_password :: Lens' RedshiftDatabaseCredentials Text
instance GHC.Generics.Generic Network.AWS.MachineLearning.Types.RedshiftDatabaseCredentials.RedshiftDatabaseCredentials
instance GHC.Show.Show Network.AWS.MachineLearning.Types.RedshiftDatabaseCredentials.RedshiftDatabaseCredentials
instance GHC.Read.Read Network.AWS.MachineLearning.Types.RedshiftDatabaseCredentials.RedshiftDatabaseCredentials
instance GHC.Classes.Eq Network.AWS.MachineLearning.Types.RedshiftDatabaseCredentials.RedshiftDatabaseCredentials
instance Data.Hashable.Class.Hashable Network.AWS.MachineLearning.Types.RedshiftDatabaseCredentials.RedshiftDatabaseCredentials
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.Types.RedshiftDatabaseCredentials.RedshiftDatabaseCredentials
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MachineLearning.Types.RedshiftDatabaseCredentials.RedshiftDatabaseCredentials


module Network.AWS.MachineLearning.Types.RedshiftDataSpec

-- | Describes the data specification of an Amazon Redshift
--   <tt>DataSource</tt>.
--   
--   <i>See:</i> <a>newRedshiftDataSpec</a> smart constructor.
data RedshiftDataSpec
RedshiftDataSpec' :: Maybe Text -> Maybe Text -> Maybe Text -> RedshiftDatabase -> Text -> RedshiftDatabaseCredentials -> Text -> RedshiftDataSpec

-- | A JSON string that represents the schema for an Amazon Redshift
--   <tt>DataSource</tt>. The <tt>DataSchema</tt> defines the structure of
--   the observation data in the data file(s) referenced in the
--   <tt>DataSource</tt>.
--   
--   A <tt>DataSchema</tt> is not required if you specify a
--   <tt>DataSchemaUri</tt>.
--   
--   Define your <tt>DataSchema</tt> as a series of key-value pairs.
--   <tt>attributes</tt> and <tt>excludedVariableNames</tt> have an array
--   of key-value pairs for their value. Use the following format to define
--   your <tt>DataSchema</tt>.
--   
--   { "version": "1.0",
--   
--   "recordAnnotationFieldName": "F1",
--   
--   "recordWeightFieldName": "F2",
--   
--   "targetFieldName": "F3",
--   
--   "dataFormat": "CSV",
--   
--   "dataFileContainsHeader": true,
--   
--   "attributes": [
--   
--   { "fieldName": "F1", "fieldType": "TEXT" }, { "fieldName": "F2",
--   "fieldType": "NUMERIC" }, { "fieldName": "F3", "fieldType":
--   "CATEGORICAL" }, { "fieldName": "F4", "fieldType": "NUMERIC" }, {
--   "fieldName": "F5", "fieldType": "CATEGORICAL" }, { "fieldName": "F6",
--   "fieldType": "TEXT" }, { "fieldName": "F7", "fieldType":
--   "WEIGHTED_INT_SEQUENCE" }, { "fieldName": "F8", "fieldType":
--   "WEIGHTED_STRING_SEQUENCE" } ],
--   
--   "excludedVariableNames": [ "F6" ] }
[$sel:dataSchema:RedshiftDataSpec'] :: RedshiftDataSpec -> Maybe Text

-- | A JSON string that represents the splitting and rearrangement
--   processing to be applied to a <tt>DataSource</tt>. If the
--   <tt>DataRearrangement</tt> parameter is not provided, all of the input
--   data is used to create the <tt>Datasource</tt>.
--   
--   There are multiple parameters that control what data is used to create
--   a datasource:
--   
--   <ul>
--   <li><b><tt>percentBegin</tt></b>Use <tt>percentBegin</tt> to indicate
--   the beginning of the range of the data used to create the Datasource.
--   If you do not include <tt>percentBegin</tt> and <tt>percentEnd</tt>,
--   Amazon ML includes all of the data when creating the datasource.</li>
--   <li><b><tt>percentEnd</tt></b>Use <tt>percentEnd</tt> to indicate the
--   end of the range of the data used to create the Datasource. If you do
--   not include <tt>percentBegin</tt> and <tt>percentEnd</tt>, Amazon ML
--   includes all of the data when creating the datasource.</li>
--   <li><b><tt>complement</tt></b>The <tt>complement</tt> parameter
--   instructs Amazon ML to use the data that is not included in the range
--   of <tt>percentBegin</tt> to <tt>percentEnd</tt> to create a
--   datasource. The <tt>complement</tt> parameter is useful if you need to
--   create complementary datasources for training and evaluation. To
--   create a complementary datasource, use the same values for
--   <tt>percentBegin</tt> and <tt>percentEnd</tt>, along with the
--   <tt>complement</tt> parameter.For example, the following two
--   datasources do not share any data, and can be used to train and
--   evaluate a model. The first datasource has 25 percent of the data, and
--   the second one has 75 percent of the data.Datasource for evaluation:
--   <tt>{"splitting":{"percentBegin":0, "percentEnd":25}}</tt>Datasource
--   for training: <tt>{"splitting":{"percentBegin":0, "percentEnd":25,
--   "complement":"true"}}</tt></li>
--   <li><b><tt>strategy</tt></b>To change how Amazon ML splits the data
--   for a datasource, use the <tt>strategy</tt> parameter.The default
--   value for the <tt>strategy</tt> parameter is <tt>sequential</tt>,
--   meaning that Amazon ML takes all of the data records between the
--   <tt>percentBegin</tt> and <tt>percentEnd</tt> parameters for the
--   datasource, in the order that the records appear in the input data.The
--   following two <tt>DataRearrangement</tt> lines are examples of
--   sequentially ordered training and evaluation datasources:Datasource
--   for evaluation: <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"sequential"}}</tt>Datasource for training:
--   <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"sequential", "complement":"true"}}</tt>To randomly split
--   the input data into the proportions indicated by the percentBegin and
--   percentEnd parameters, set the <tt>strategy</tt> parameter to
--   <tt>random</tt> and provide a string that is used as the seed value
--   for the random data splitting (for example, you can use the S3 path to
--   your data as the random seed string). If you choose the random split
--   strategy, Amazon ML assigns each row of data a pseudo-random number
--   between 0 and 100, and then selects the rows that have an assigned
--   number between <tt>percentBegin</tt> and <tt>percentEnd</tt>.
--   Pseudo-random numbers are assigned using both the input seed string
--   value and the byte offset as a seed, so changing the data results in a
--   different split. Any existing ordering is preserved. The random
--   splitting strategy ensures that variables in the training and
--   evaluation data are distributed similarly. It is useful in the cases
--   where the input data may have an implicit sort order, which would
--   otherwise result in training and evaluation datasources containing
--   non-similar data records.The following two <tt>DataRearrangement</tt>
--   lines are examples of non-sequentially ordered training and evaluation
--   datasources:Datasource for evaluation:
--   <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"random",
--   "randomSeed"="s3://my_s3_path/bucket/file.csv"}}</tt>Datasource for
--   training: <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"random", "randomSeed"="s3://my_s3_path/bucket/file.csv",
--   "complement":"true"}}</tt></li>
--   </ul>
[$sel:dataRearrangement:RedshiftDataSpec'] :: RedshiftDataSpec -> Maybe Text

-- | Describes the schema location for an Amazon Redshift
--   <tt>DataSource</tt>.
[$sel:dataSchemaUri:RedshiftDataSpec'] :: RedshiftDataSpec -> Maybe Text

-- | Describes the <tt>DatabaseName</tt> and <tt>ClusterIdentifier</tt> for
--   an Amazon Redshift <tt>DataSource</tt>.
[$sel:databaseInformation:RedshiftDataSpec'] :: RedshiftDataSpec -> RedshiftDatabase

-- | Describes the SQL Query to execute on an Amazon Redshift database for
--   an Amazon Redshift <tt>DataSource</tt>.
[$sel:selectSqlQuery:RedshiftDataSpec'] :: RedshiftDataSpec -> Text

-- | Describes AWS Identity and Access Management (IAM) credentials that
--   are used connect to the Amazon Redshift database.
[$sel:databaseCredentials:RedshiftDataSpec'] :: RedshiftDataSpec -> RedshiftDatabaseCredentials

-- | Describes an Amazon S3 location to store the result set of the
--   <tt>SelectSqlQuery</tt> query.
[$sel:s3StagingLocation:RedshiftDataSpec'] :: RedshiftDataSpec -> Text

-- | Create a value of <a>RedshiftDataSpec</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataSchema:RedshiftDataSpec'</a>,
--   <a>redshiftDataSpec_dataSchema</a> - A JSON string that represents the
--   schema for an Amazon Redshift <tt>DataSource</tt>. The
--   <tt>DataSchema</tt> defines the structure of the observation data in
--   the data file(s) referenced in the <tt>DataSource</tt>.
--   
--   A <tt>DataSchema</tt> is not required if you specify a
--   <tt>DataSchemaUri</tt>.
--   
--   Define your <tt>DataSchema</tt> as a series of key-value pairs.
--   <tt>attributes</tt> and <tt>excludedVariableNames</tt> have an array
--   of key-value pairs for their value. Use the following format to define
--   your <tt>DataSchema</tt>.
--   
--   { "version": "1.0",
--   
--   "recordAnnotationFieldName": "F1",
--   
--   "recordWeightFieldName": "F2",
--   
--   "targetFieldName": "F3",
--   
--   "dataFormat": "CSV",
--   
--   "dataFileContainsHeader": true,
--   
--   "attributes": [
--   
--   { "fieldName": "F1", "fieldType": "TEXT" }, { "fieldName": "F2",
--   "fieldType": "NUMERIC" }, { "fieldName": "F3", "fieldType":
--   "CATEGORICAL" }, { "fieldName": "F4", "fieldType": "NUMERIC" }, {
--   "fieldName": "F5", "fieldType": "CATEGORICAL" }, { "fieldName": "F6",
--   "fieldType": "TEXT" }, { "fieldName": "F7", "fieldType":
--   "WEIGHTED_INT_SEQUENCE" }, { "fieldName": "F8", "fieldType":
--   "WEIGHTED_STRING_SEQUENCE" } ],
--   
--   "excludedVariableNames": [ "F6" ] }
--   
--   <a>$sel:dataRearrangement:RedshiftDataSpec'</a>,
--   <a>redshiftDataSpec_dataRearrangement</a> - A JSON string that
--   represents the splitting and rearrangement processing to be applied to
--   a <tt>DataSource</tt>. If the <tt>DataRearrangement</tt> parameter is
--   not provided, all of the input data is used to create the
--   <tt>Datasource</tt>.
--   
--   There are multiple parameters that control what data is used to create
--   a datasource:
--   
--   <ul>
--   <li><b><tt>percentBegin</tt></b>Use <tt>percentBegin</tt> to indicate
--   the beginning of the range of the data used to create the Datasource.
--   If you do not include <tt>percentBegin</tt> and <tt>percentEnd</tt>,
--   Amazon ML includes all of the data when creating the datasource.</li>
--   <li><b><tt>percentEnd</tt></b>Use <tt>percentEnd</tt> to indicate the
--   end of the range of the data used to create the Datasource. If you do
--   not include <tt>percentBegin</tt> and <tt>percentEnd</tt>, Amazon ML
--   includes all of the data when creating the datasource.</li>
--   <li><b><tt>complement</tt></b>The <tt>complement</tt> parameter
--   instructs Amazon ML to use the data that is not included in the range
--   of <tt>percentBegin</tt> to <tt>percentEnd</tt> to create a
--   datasource. The <tt>complement</tt> parameter is useful if you need to
--   create complementary datasources for training and evaluation. To
--   create a complementary datasource, use the same values for
--   <tt>percentBegin</tt> and <tt>percentEnd</tt>, along with the
--   <tt>complement</tt> parameter.For example, the following two
--   datasources do not share any data, and can be used to train and
--   evaluate a model. The first datasource has 25 percent of the data, and
--   the second one has 75 percent of the data.Datasource for evaluation:
--   <tt>{"splitting":{"percentBegin":0, "percentEnd":25}}</tt>Datasource
--   for training: <tt>{"splitting":{"percentBegin":0, "percentEnd":25,
--   "complement":"true"}}</tt></li>
--   <li><b><tt>strategy</tt></b>To change how Amazon ML splits the data
--   for a datasource, use the <tt>strategy</tt> parameter.The default
--   value for the <tt>strategy</tt> parameter is <tt>sequential</tt>,
--   meaning that Amazon ML takes all of the data records between the
--   <tt>percentBegin</tt> and <tt>percentEnd</tt> parameters for the
--   datasource, in the order that the records appear in the input data.The
--   following two <tt>DataRearrangement</tt> lines are examples of
--   sequentially ordered training and evaluation datasources:Datasource
--   for evaluation: <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"sequential"}}</tt>Datasource for training:
--   <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"sequential", "complement":"true"}}</tt>To randomly split
--   the input data into the proportions indicated by the percentBegin and
--   percentEnd parameters, set the <tt>strategy</tt> parameter to
--   <tt>random</tt> and provide a string that is used as the seed value
--   for the random data splitting (for example, you can use the S3 path to
--   your data as the random seed string). If you choose the random split
--   strategy, Amazon ML assigns each row of data a pseudo-random number
--   between 0 and 100, and then selects the rows that have an assigned
--   number between <tt>percentBegin</tt> and <tt>percentEnd</tt>.
--   Pseudo-random numbers are assigned using both the input seed string
--   value and the byte offset as a seed, so changing the data results in a
--   different split. Any existing ordering is preserved. The random
--   splitting strategy ensures that variables in the training and
--   evaluation data are distributed similarly. It is useful in the cases
--   where the input data may have an implicit sort order, which would
--   otherwise result in training and evaluation datasources containing
--   non-similar data records.The following two <tt>DataRearrangement</tt>
--   lines are examples of non-sequentially ordered training and evaluation
--   datasources:Datasource for evaluation:
--   <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"random",
--   "randomSeed"="s3://my_s3_path/bucket/file.csv"}}</tt>Datasource for
--   training: <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"random", "randomSeed"="s3://my_s3_path/bucket/file.csv",
--   "complement":"true"}}</tt></li>
--   </ul>
--   
--   <a>$sel:dataSchemaUri:RedshiftDataSpec'</a>,
--   <a>redshiftDataSpec_dataSchemaUri</a> - Describes the schema location
--   for an Amazon Redshift <tt>DataSource</tt>.
--   
--   <a>$sel:databaseInformation:RedshiftDataSpec'</a>,
--   <a>redshiftDataSpec_databaseInformation</a> - Describes the
--   <tt>DatabaseName</tt> and <tt>ClusterIdentifier</tt> for an Amazon
--   Redshift <tt>DataSource</tt>.
--   
--   <a>$sel:selectSqlQuery:RedshiftDataSpec'</a>,
--   <a>redshiftDataSpec_selectSqlQuery</a> - Describes the SQL Query to
--   execute on an Amazon Redshift database for an Amazon Redshift
--   <tt>DataSource</tt>.
--   
--   <a>$sel:databaseCredentials:RedshiftDataSpec'</a>,
--   <a>redshiftDataSpec_databaseCredentials</a> - Describes AWS Identity
--   and Access Management (IAM) credentials that are used connect to the
--   Amazon Redshift database.
--   
--   <a>$sel:s3StagingLocation:RedshiftDataSpec'</a>,
--   <a>redshiftDataSpec_s3StagingLocation</a> - Describes an Amazon S3
--   location to store the result set of the <tt>SelectSqlQuery</tt> query.
newRedshiftDataSpec :: RedshiftDatabase -> Text -> RedshiftDatabaseCredentials -> Text -> RedshiftDataSpec

-- | A JSON string that represents the schema for an Amazon Redshift
--   <tt>DataSource</tt>. The <tt>DataSchema</tt> defines the structure of
--   the observation data in the data file(s) referenced in the
--   <tt>DataSource</tt>.
--   
--   A <tt>DataSchema</tt> is not required if you specify a
--   <tt>DataSchemaUri</tt>.
--   
--   Define your <tt>DataSchema</tt> as a series of key-value pairs.
--   <tt>attributes</tt> and <tt>excludedVariableNames</tt> have an array
--   of key-value pairs for their value. Use the following format to define
--   your <tt>DataSchema</tt>.
--   
--   { "version": "1.0",
--   
--   "recordAnnotationFieldName": "F1",
--   
--   "recordWeightFieldName": "F2",
--   
--   "targetFieldName": "F3",
--   
--   "dataFormat": "CSV",
--   
--   "dataFileContainsHeader": true,
--   
--   "attributes": [
--   
--   { "fieldName": "F1", "fieldType": "TEXT" }, { "fieldName": "F2",
--   "fieldType": "NUMERIC" }, { "fieldName": "F3", "fieldType":
--   "CATEGORICAL" }, { "fieldName": "F4", "fieldType": "NUMERIC" }, {
--   "fieldName": "F5", "fieldType": "CATEGORICAL" }, { "fieldName": "F6",
--   "fieldType": "TEXT" }, { "fieldName": "F7", "fieldType":
--   "WEIGHTED_INT_SEQUENCE" }, { "fieldName": "F8", "fieldType":
--   "WEIGHTED_STRING_SEQUENCE" } ],
--   
--   "excludedVariableNames": [ "F6" ] }
redshiftDataSpec_dataSchema :: Lens' RedshiftDataSpec (Maybe Text)

-- | A JSON string that represents the splitting and rearrangement
--   processing to be applied to a <tt>DataSource</tt>. If the
--   <tt>DataRearrangement</tt> parameter is not provided, all of the input
--   data is used to create the <tt>Datasource</tt>.
--   
--   There are multiple parameters that control what data is used to create
--   a datasource:
--   
--   <ul>
--   <li><b><tt>percentBegin</tt></b>Use <tt>percentBegin</tt> to indicate
--   the beginning of the range of the data used to create the Datasource.
--   If you do not include <tt>percentBegin</tt> and <tt>percentEnd</tt>,
--   Amazon ML includes all of the data when creating the datasource.</li>
--   <li><b><tt>percentEnd</tt></b>Use <tt>percentEnd</tt> to indicate the
--   end of the range of the data used to create the Datasource. If you do
--   not include <tt>percentBegin</tt> and <tt>percentEnd</tt>, Amazon ML
--   includes all of the data when creating the datasource.</li>
--   <li><b><tt>complement</tt></b>The <tt>complement</tt> parameter
--   instructs Amazon ML to use the data that is not included in the range
--   of <tt>percentBegin</tt> to <tt>percentEnd</tt> to create a
--   datasource. The <tt>complement</tt> parameter is useful if you need to
--   create complementary datasources for training and evaluation. To
--   create a complementary datasource, use the same values for
--   <tt>percentBegin</tt> and <tt>percentEnd</tt>, along with the
--   <tt>complement</tt> parameter.For example, the following two
--   datasources do not share any data, and can be used to train and
--   evaluate a model. The first datasource has 25 percent of the data, and
--   the second one has 75 percent of the data.Datasource for evaluation:
--   <tt>{"splitting":{"percentBegin":0, "percentEnd":25}}</tt>Datasource
--   for training: <tt>{"splitting":{"percentBegin":0, "percentEnd":25,
--   "complement":"true"}}</tt></li>
--   <li><b><tt>strategy</tt></b>To change how Amazon ML splits the data
--   for a datasource, use the <tt>strategy</tt> parameter.The default
--   value for the <tt>strategy</tt> parameter is <tt>sequential</tt>,
--   meaning that Amazon ML takes all of the data records between the
--   <tt>percentBegin</tt> and <tt>percentEnd</tt> parameters for the
--   datasource, in the order that the records appear in the input data.The
--   following two <tt>DataRearrangement</tt> lines are examples of
--   sequentially ordered training and evaluation datasources:Datasource
--   for evaluation: <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"sequential"}}</tt>Datasource for training:
--   <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"sequential", "complement":"true"}}</tt>To randomly split
--   the input data into the proportions indicated by the percentBegin and
--   percentEnd parameters, set the <tt>strategy</tt> parameter to
--   <tt>random</tt> and provide a string that is used as the seed value
--   for the random data splitting (for example, you can use the S3 path to
--   your data as the random seed string). If you choose the random split
--   strategy, Amazon ML assigns each row of data a pseudo-random number
--   between 0 and 100, and then selects the rows that have an assigned
--   number between <tt>percentBegin</tt> and <tt>percentEnd</tt>.
--   Pseudo-random numbers are assigned using both the input seed string
--   value and the byte offset as a seed, so changing the data results in a
--   different split. Any existing ordering is preserved. The random
--   splitting strategy ensures that variables in the training and
--   evaluation data are distributed similarly. It is useful in the cases
--   where the input data may have an implicit sort order, which would
--   otherwise result in training and evaluation datasources containing
--   non-similar data records.The following two <tt>DataRearrangement</tt>
--   lines are examples of non-sequentially ordered training and evaluation
--   datasources:Datasource for evaluation:
--   <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"random",
--   "randomSeed"="s3://my_s3_path/bucket/file.csv"}}</tt>Datasource for
--   training: <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"random", "randomSeed"="s3://my_s3_path/bucket/file.csv",
--   "complement":"true"}}</tt></li>
--   </ul>
redshiftDataSpec_dataRearrangement :: Lens' RedshiftDataSpec (Maybe Text)

-- | Describes the schema location for an Amazon Redshift
--   <tt>DataSource</tt>.
redshiftDataSpec_dataSchemaUri :: Lens' RedshiftDataSpec (Maybe Text)

-- | Describes the <tt>DatabaseName</tt> and <tt>ClusterIdentifier</tt> for
--   an Amazon Redshift <tt>DataSource</tt>.
redshiftDataSpec_databaseInformation :: Lens' RedshiftDataSpec RedshiftDatabase

-- | Describes the SQL Query to execute on an Amazon Redshift database for
--   an Amazon Redshift <tt>DataSource</tt>.
redshiftDataSpec_selectSqlQuery :: Lens' RedshiftDataSpec Text

-- | Describes AWS Identity and Access Management (IAM) credentials that
--   are used connect to the Amazon Redshift database.
redshiftDataSpec_databaseCredentials :: Lens' RedshiftDataSpec RedshiftDatabaseCredentials

-- | Describes an Amazon S3 location to store the result set of the
--   <tt>SelectSqlQuery</tt> query.
redshiftDataSpec_s3StagingLocation :: Lens' RedshiftDataSpec Text
instance GHC.Generics.Generic Network.AWS.MachineLearning.Types.RedshiftDataSpec.RedshiftDataSpec
instance GHC.Show.Show Network.AWS.MachineLearning.Types.RedshiftDataSpec.RedshiftDataSpec
instance GHC.Read.Read Network.AWS.MachineLearning.Types.RedshiftDataSpec.RedshiftDataSpec
instance GHC.Classes.Eq Network.AWS.MachineLearning.Types.RedshiftDataSpec.RedshiftDataSpec
instance Data.Hashable.Class.Hashable Network.AWS.MachineLearning.Types.RedshiftDataSpec.RedshiftDataSpec
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.Types.RedshiftDataSpec.RedshiftDataSpec
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MachineLearning.Types.RedshiftDataSpec.RedshiftDataSpec


module Network.AWS.MachineLearning.Types.RedshiftMetadata

-- | Describes the <tt>DataSource</tt> details specific to Amazon Redshift.
--   
--   <i>See:</i> <a>newRedshiftMetadata</a> smart constructor.
data RedshiftMetadata
RedshiftMetadata' :: Maybe Text -> Maybe RedshiftDatabase -> Maybe Text -> RedshiftMetadata

-- | The SQL query that is specified during CreateDataSourceFromRedshift.
--   Returns only if <tt>Verbose</tt> is true in GetDataSourceInput.
[$sel:selectSqlQuery:RedshiftMetadata'] :: RedshiftMetadata -> Maybe Text
[$sel:redshiftDatabase:RedshiftMetadata'] :: RedshiftMetadata -> Maybe RedshiftDatabase
[$sel:databaseUserName:RedshiftMetadata'] :: RedshiftMetadata -> Maybe Text

-- | Create a value of <a>RedshiftMetadata</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:selectSqlQuery:RedshiftMetadata'</a>,
--   <a>redshiftMetadata_selectSqlQuery</a> - The SQL query that is
--   specified during CreateDataSourceFromRedshift. Returns only if
--   <tt>Verbose</tt> is true in GetDataSourceInput.
--   
--   <a>$sel:redshiftDatabase:RedshiftMetadata'</a>,
--   <a>redshiftMetadata_redshiftDatabase</a> - Undocumented member.
--   
--   <a>$sel:databaseUserName:RedshiftMetadata'</a>,
--   <a>redshiftMetadata_databaseUserName</a> - Undocumented member.
newRedshiftMetadata :: RedshiftMetadata

-- | The SQL query that is specified during CreateDataSourceFromRedshift.
--   Returns only if <tt>Verbose</tt> is true in GetDataSourceInput.
redshiftMetadata_selectSqlQuery :: Lens' RedshiftMetadata (Maybe Text)

-- | Undocumented member.
redshiftMetadata_redshiftDatabase :: Lens' RedshiftMetadata (Maybe RedshiftDatabase)

-- | Undocumented member.
redshiftMetadata_databaseUserName :: Lens' RedshiftMetadata (Maybe Text)
instance GHC.Generics.Generic Network.AWS.MachineLearning.Types.RedshiftMetadata.RedshiftMetadata
instance GHC.Show.Show Network.AWS.MachineLearning.Types.RedshiftMetadata.RedshiftMetadata
instance GHC.Read.Read Network.AWS.MachineLearning.Types.RedshiftMetadata.RedshiftMetadata
instance GHC.Classes.Eq Network.AWS.MachineLearning.Types.RedshiftMetadata.RedshiftMetadata
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.MachineLearning.Types.RedshiftMetadata.RedshiftMetadata
instance Data.Hashable.Class.Hashable Network.AWS.MachineLearning.Types.RedshiftMetadata.RedshiftMetadata
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.Types.RedshiftMetadata.RedshiftMetadata


module Network.AWS.MachineLearning.Types.DataSource

-- | Represents the output of the <tt>GetDataSource</tt> operation.
--   
--   The content consists of the detailed metadata and data file
--   information and the current status of the <tt>DataSource</tt>.
--   
--   <i>See:</i> <a>newDataSource</a> smart constructor.
data DataSource
DataSource' :: Maybe EntityStatus -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe RedshiftMetadata -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Integer -> Maybe Text -> Maybe POSIX -> Maybe Integer -> Maybe Integer -> Maybe RDSMetadata -> Maybe POSIX -> DataSource

-- | The current status of the <tt>DataSource</tt>. This element can have
--   one of the following values:
--   
--   <ul>
--   <li>PENDING - Amazon Machine Learning (Amazon ML) submitted a request
--   to create a <tt>DataSource</tt>.</li>
--   <li>INPROGRESS - The creation process is underway.</li>
--   <li>FAILED - The request to create a <tt>DataSource</tt> did not run
--   to completion. It is not usable.</li>
--   <li>COMPLETED - The creation process completed successfully.</li>
--   <li>DELETED - The <tt>DataSource</tt> is marked as deleted. It is not
--   usable.</li>
--   </ul>
[$sel:status:DataSource'] :: DataSource -> Maybe EntityStatus
[$sel:startedAt:DataSource'] :: DataSource -> Maybe POSIX
[$sel:roleARN:DataSource'] :: DataSource -> Maybe Text

-- | A JSON string that represents the splitting and rearrangement
--   requirement used when this <tt>DataSource</tt> was created.
[$sel:dataRearrangement:DataSource'] :: DataSource -> Maybe Text
[$sel:redshiftMetadata:DataSource'] :: DataSource -> Maybe RedshiftMetadata

-- | A description of the most recent details about creating the
--   <tt>DataSource</tt>.
[$sel:message:DataSource'] :: DataSource -> Maybe Text

-- | The ID that is assigned to the <tt>DataSource</tt> during creation.
[$sel:dataSourceId:DataSource'] :: DataSource -> Maybe Text

-- | The parameter is <tt>true</tt> if statistics need to be generated from
--   the observation data.
[$sel:computeStatistics:DataSource'] :: DataSource -> Maybe Bool

-- | The time that the <tt>DataSource</tt> was created. The time is
--   expressed in epoch time.
[$sel:createdAt:DataSource'] :: DataSource -> Maybe POSIX

-- | The location and name of the data in Amazon Simple Storage Service
--   (Amazon S3) that is used by a <tt>DataSource</tt>.
[$sel:dataLocationS3:DataSource'] :: DataSource -> Maybe Text

-- | A user-supplied name or description of the <tt>DataSource</tt>.
[$sel:name:DataSource'] :: DataSource -> Maybe Text

-- | The number of data files referenced by the <tt>DataSource</tt>.
[$sel:numberOfFiles:DataSource'] :: DataSource -> Maybe Integer

-- | The AWS user account from which the <tt>DataSource</tt> was created.
--   The account type can be either an AWS root account or an AWS Identity
--   and Access Management (IAM) user account.
[$sel:createdByIamUser:DataSource'] :: DataSource -> Maybe Text
[$sel:finishedAt:DataSource'] :: DataSource -> Maybe POSIX

-- | The total number of observations contained in the data files that the
--   <tt>DataSource</tt> references.
[$sel:dataSizeInBytes:DataSource'] :: DataSource -> Maybe Integer
[$sel:computeTime:DataSource'] :: DataSource -> Maybe Integer
[$sel:rDSMetadata:DataSource'] :: DataSource -> Maybe RDSMetadata

-- | The time of the most recent edit to the <tt>BatchPrediction</tt>. The
--   time is expressed in epoch time.
[$sel:lastUpdatedAt:DataSource'] :: DataSource -> Maybe POSIX

-- | Create a value of <a>DataSource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:DataSource'</a>, <a>dataSource_status</a> - The current
--   status of the <tt>DataSource</tt>. This element can have one of the
--   following values:
--   
--   <ul>
--   <li>PENDING - Amazon Machine Learning (Amazon ML) submitted a request
--   to create a <tt>DataSource</tt>.</li>
--   <li>INPROGRESS - The creation process is underway.</li>
--   <li>FAILED - The request to create a <tt>DataSource</tt> did not run
--   to completion. It is not usable.</li>
--   <li>COMPLETED - The creation process completed successfully.</li>
--   <li>DELETED - The <tt>DataSource</tt> is marked as deleted. It is not
--   usable.</li>
--   </ul>
--   
--   <a>$sel:startedAt:DataSource'</a>, <a>dataSource_startedAt</a> -
--   Undocumented member.
--   
--   <a>$sel:roleARN:DataSource'</a>, <a>dataSource_roleARN</a> -
--   Undocumented member.
--   
--   <a>$sel:dataRearrangement:DataSource'</a>,
--   <a>dataSource_dataRearrangement</a> - A JSON string that represents
--   the splitting and rearrangement requirement used when this
--   <tt>DataSource</tt> was created.
--   
--   <a>$sel:redshiftMetadata:DataSource'</a>,
--   <a>dataSource_redshiftMetadata</a> - Undocumented member.
--   
--   <a>$sel:message:DataSource'</a>, <a>dataSource_message</a> - A
--   description of the most recent details about creating the
--   <tt>DataSource</tt>.
--   
--   <a>$sel:dataSourceId:DataSource'</a>, <a>dataSource_dataSourceId</a> -
--   The ID that is assigned to the <tt>DataSource</tt> during creation.
--   
--   <a>$sel:computeStatistics:DataSource'</a>,
--   <a>dataSource_computeStatistics</a> - The parameter is <tt>true</tt>
--   if statistics need to be generated from the observation data.
--   
--   <a>$sel:createdAt:DataSource'</a>, <a>dataSource_createdAt</a> - The
--   time that the <tt>DataSource</tt> was created. The time is expressed
--   in epoch time.
--   
--   <a>$sel:dataLocationS3:DataSource'</a>,
--   <a>dataSource_dataLocationS3</a> - The location and name of the data
--   in Amazon Simple Storage Service (Amazon S3) that is used by a
--   <tt>DataSource</tt>.
--   
--   <a>$sel:name:DataSource'</a>, <a>dataSource_name</a> - A user-supplied
--   name or description of the <tt>DataSource</tt>.
--   
--   <a>$sel:numberOfFiles:DataSource'</a>, <a>dataSource_numberOfFiles</a>
--   - The number of data files referenced by the <tt>DataSource</tt>.
--   
--   <a>$sel:createdByIamUser:DataSource'</a>,
--   <a>dataSource_createdByIamUser</a> - The AWS user account from which
--   the <tt>DataSource</tt> was created. The account type can be either an
--   AWS root account or an AWS Identity and Access Management (IAM) user
--   account.
--   
--   <a>$sel:finishedAt:DataSource'</a>, <a>dataSource_finishedAt</a> -
--   Undocumented member.
--   
--   <a>$sel:dataSizeInBytes:DataSource'</a>,
--   <a>dataSource_dataSizeInBytes</a> - The total number of observations
--   contained in the data files that the <tt>DataSource</tt> references.
--   
--   <a>$sel:computeTime:DataSource'</a>, <a>dataSource_computeTime</a> -
--   Undocumented member.
--   
--   <a>$sel:rDSMetadata:DataSource'</a>, <a>dataSource_rDSMetadata</a> -
--   Undocumented member.
--   
--   <a>$sel:lastUpdatedAt:DataSource'</a>, <a>dataSource_lastUpdatedAt</a>
--   - The time of the most recent edit to the <tt>BatchPrediction</tt>.
--   The time is expressed in epoch time.
newDataSource :: DataSource

-- | The current status of the <tt>DataSource</tt>. This element can have
--   one of the following values:
--   
--   <ul>
--   <li>PENDING - Amazon Machine Learning (Amazon ML) submitted a request
--   to create a <tt>DataSource</tt>.</li>
--   <li>INPROGRESS - The creation process is underway.</li>
--   <li>FAILED - The request to create a <tt>DataSource</tt> did not run
--   to completion. It is not usable.</li>
--   <li>COMPLETED - The creation process completed successfully.</li>
--   <li>DELETED - The <tt>DataSource</tt> is marked as deleted. It is not
--   usable.</li>
--   </ul>
dataSource_status :: Lens' DataSource (Maybe EntityStatus)

-- | Undocumented member.
dataSource_startedAt :: Lens' DataSource (Maybe UTCTime)

-- | Undocumented member.
dataSource_roleARN :: Lens' DataSource (Maybe Text)

-- | A JSON string that represents the splitting and rearrangement
--   requirement used when this <tt>DataSource</tt> was created.
dataSource_dataRearrangement :: Lens' DataSource (Maybe Text)

-- | Undocumented member.
dataSource_redshiftMetadata :: Lens' DataSource (Maybe RedshiftMetadata)

-- | A description of the most recent details about creating the
--   <tt>DataSource</tt>.
dataSource_message :: Lens' DataSource (Maybe Text)

-- | The ID that is assigned to the <tt>DataSource</tt> during creation.
dataSource_dataSourceId :: Lens' DataSource (Maybe Text)

-- | The parameter is <tt>true</tt> if statistics need to be generated from
--   the observation data.
dataSource_computeStatistics :: Lens' DataSource (Maybe Bool)

-- | The time that the <tt>DataSource</tt> was created. The time is
--   expressed in epoch time.
dataSource_createdAt :: Lens' DataSource (Maybe UTCTime)

-- | The location and name of the data in Amazon Simple Storage Service
--   (Amazon S3) that is used by a <tt>DataSource</tt>.
dataSource_dataLocationS3 :: Lens' DataSource (Maybe Text)

-- | A user-supplied name or description of the <tt>DataSource</tt>.
dataSource_name :: Lens' DataSource (Maybe Text)

-- | The number of data files referenced by the <tt>DataSource</tt>.
dataSource_numberOfFiles :: Lens' DataSource (Maybe Integer)

-- | The AWS user account from which the <tt>DataSource</tt> was created.
--   The account type can be either an AWS root account or an AWS Identity
--   and Access Management (IAM) user account.
dataSource_createdByIamUser :: Lens' DataSource (Maybe Text)

-- | Undocumented member.
dataSource_finishedAt :: Lens' DataSource (Maybe UTCTime)

-- | The total number of observations contained in the data files that the
--   <tt>DataSource</tt> references.
dataSource_dataSizeInBytes :: Lens' DataSource (Maybe Integer)

-- | Undocumented member.
dataSource_computeTime :: Lens' DataSource (Maybe Integer)

-- | Undocumented member.
dataSource_rDSMetadata :: Lens' DataSource (Maybe RDSMetadata)

-- | The time of the most recent edit to the <tt>BatchPrediction</tt>. The
--   time is expressed in epoch time.
dataSource_lastUpdatedAt :: Lens' DataSource (Maybe UTCTime)
instance GHC.Generics.Generic Network.AWS.MachineLearning.Types.DataSource.DataSource
instance GHC.Show.Show Network.AWS.MachineLearning.Types.DataSource.DataSource
instance GHC.Read.Read Network.AWS.MachineLearning.Types.DataSource.DataSource
instance GHC.Classes.Eq Network.AWS.MachineLearning.Types.DataSource.DataSource
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.MachineLearning.Types.DataSource.DataSource
instance Data.Hashable.Class.Hashable Network.AWS.MachineLearning.Types.DataSource.DataSource
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.Types.DataSource.DataSource


module Network.AWS.MachineLearning.Types.S3DataSpec

-- | Describes the data specification of a <tt>DataSource</tt>.
--   
--   <i>See:</i> <a>newS3DataSpec</a> smart constructor.
data S3DataSpec
S3DataSpec' :: Maybe Text -> Maybe Text -> Maybe Text -> Text -> S3DataSpec

-- | A JSON string that represents the schema for an Amazon S3
--   <tt>DataSource</tt>. The <tt>DataSchema</tt> defines the structure of
--   the observation data in the data file(s) referenced in the
--   <tt>DataSource</tt>.
--   
--   You must provide either the <tt>DataSchema</tt> or the
--   <tt>DataSchemaLocationS3</tt>.
--   
--   Define your <tt>DataSchema</tt> as a series of key-value pairs.
--   <tt>attributes</tt> and <tt>excludedVariableNames</tt> have an array
--   of key-value pairs for their value. Use the following format to define
--   your <tt>DataSchema</tt>.
--   
--   { "version": "1.0",
--   
--   "recordAnnotationFieldName": "F1",
--   
--   "recordWeightFieldName": "F2",
--   
--   "targetFieldName": "F3",
--   
--   "dataFormat": "CSV",
--   
--   "dataFileContainsHeader": true,
--   
--   "attributes": [
--   
--   { "fieldName": "F1", "fieldType": "TEXT" }, { "fieldName": "F2",
--   "fieldType": "NUMERIC" }, { "fieldName": "F3", "fieldType":
--   "CATEGORICAL" }, { "fieldName": "F4", "fieldType": "NUMERIC" }, {
--   "fieldName": "F5", "fieldType": "CATEGORICAL" }, { "fieldName": "F6",
--   "fieldType": "TEXT" }, { "fieldName": "F7", "fieldType":
--   "WEIGHTED_INT_SEQUENCE" }, { "fieldName": "F8", "fieldType":
--   "WEIGHTED_STRING_SEQUENCE" } ],
--   
--   "excludedVariableNames": [ "F6" ] }
[$sel:dataSchema:S3DataSpec'] :: S3DataSpec -> Maybe Text

-- | A JSON string that represents the splitting and rearrangement
--   processing to be applied to a <tt>DataSource</tt>. If the
--   <tt>DataRearrangement</tt> parameter is not provided, all of the input
--   data is used to create the <tt>Datasource</tt>.
--   
--   There are multiple parameters that control what data is used to create
--   a datasource:
--   
--   <ul>
--   <li><b><tt>percentBegin</tt></b>Use <tt>percentBegin</tt> to indicate
--   the beginning of the range of the data used to create the Datasource.
--   If you do not include <tt>percentBegin</tt> and <tt>percentEnd</tt>,
--   Amazon ML includes all of the data when creating the datasource.</li>
--   <li><b><tt>percentEnd</tt></b>Use <tt>percentEnd</tt> to indicate the
--   end of the range of the data used to create the Datasource. If you do
--   not include <tt>percentBegin</tt> and <tt>percentEnd</tt>, Amazon ML
--   includes all of the data when creating the datasource.</li>
--   <li><b><tt>complement</tt></b>The <tt>complement</tt> parameter
--   instructs Amazon ML to use the data that is not included in the range
--   of <tt>percentBegin</tt> to <tt>percentEnd</tt> to create a
--   datasource. The <tt>complement</tt> parameter is useful if you need to
--   create complementary datasources for training and evaluation. To
--   create a complementary datasource, use the same values for
--   <tt>percentBegin</tt> and <tt>percentEnd</tt>, along with the
--   <tt>complement</tt> parameter.For example, the following two
--   datasources do not share any data, and can be used to train and
--   evaluate a model. The first datasource has 25 percent of the data, and
--   the second one has 75 percent of the data.Datasource for evaluation:
--   <tt>{"splitting":{"percentBegin":0, "percentEnd":25}}</tt>Datasource
--   for training: <tt>{"splitting":{"percentBegin":0, "percentEnd":25,
--   "complement":"true"}}</tt></li>
--   <li><b><tt>strategy</tt></b>To change how Amazon ML splits the data
--   for a datasource, use the <tt>strategy</tt> parameter.The default
--   value for the <tt>strategy</tt> parameter is <tt>sequential</tt>,
--   meaning that Amazon ML takes all of the data records between the
--   <tt>percentBegin</tt> and <tt>percentEnd</tt> parameters for the
--   datasource, in the order that the records appear in the input data.The
--   following two <tt>DataRearrangement</tt> lines are examples of
--   sequentially ordered training and evaluation datasources:Datasource
--   for evaluation: <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"sequential"}}</tt>Datasource for training:
--   <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"sequential", "complement":"true"}}</tt>To randomly split
--   the input data into the proportions indicated by the percentBegin and
--   percentEnd parameters, set the <tt>strategy</tt> parameter to
--   <tt>random</tt> and provide a string that is used as the seed value
--   for the random data splitting (for example, you can use the S3 path to
--   your data as the random seed string). If you choose the random split
--   strategy, Amazon ML assigns each row of data a pseudo-random number
--   between 0 and 100, and then selects the rows that have an assigned
--   number between <tt>percentBegin</tt> and <tt>percentEnd</tt>.
--   Pseudo-random numbers are assigned using both the input seed string
--   value and the byte offset as a seed, so changing the data results in a
--   different split. Any existing ordering is preserved. The random
--   splitting strategy ensures that variables in the training and
--   evaluation data are distributed similarly. It is useful in the cases
--   where the input data may have an implicit sort order, which would
--   otherwise result in training and evaluation datasources containing
--   non-similar data records.The following two <tt>DataRearrangement</tt>
--   lines are examples of non-sequentially ordered training and evaluation
--   datasources:Datasource for evaluation:
--   <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"random",
--   "randomSeed"="s3://my_s3_path/bucket/file.csv"}}</tt>Datasource for
--   training: <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"random", "randomSeed"="s3://my_s3_path/bucket/file.csv",
--   "complement":"true"}}</tt></li>
--   </ul>
[$sel:dataRearrangement:S3DataSpec'] :: S3DataSpec -> Maybe Text

-- | Describes the schema location in Amazon S3. You must provide either
--   the <tt>DataSchema</tt> or the <tt>DataSchemaLocationS3</tt>.
[$sel:dataSchemaLocationS3:S3DataSpec'] :: S3DataSpec -> Maybe Text

-- | The location of the data file(s) used by a <tt>DataSource</tt>. The
--   URI specifies a data file or an Amazon Simple Storage Service (Amazon
--   S3) directory or bucket containing data files.
[$sel:dataLocationS3:S3DataSpec'] :: S3DataSpec -> Text

-- | Create a value of <a>S3DataSpec</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataSchema:S3DataSpec'</a>, <a>s3DataSpec_dataSchema</a> - A
--   JSON string that represents the schema for an Amazon S3
--   <tt>DataSource</tt>. The <tt>DataSchema</tt> defines the structure of
--   the observation data in the data file(s) referenced in the
--   <tt>DataSource</tt>.
--   
--   You must provide either the <tt>DataSchema</tt> or the
--   <tt>DataSchemaLocationS3</tt>.
--   
--   Define your <tt>DataSchema</tt> as a series of key-value pairs.
--   <tt>attributes</tt> and <tt>excludedVariableNames</tt> have an array
--   of key-value pairs for their value. Use the following format to define
--   your <tt>DataSchema</tt>.
--   
--   { "version": "1.0",
--   
--   "recordAnnotationFieldName": "F1",
--   
--   "recordWeightFieldName": "F2",
--   
--   "targetFieldName": "F3",
--   
--   "dataFormat": "CSV",
--   
--   "dataFileContainsHeader": true,
--   
--   "attributes": [
--   
--   { "fieldName": "F1", "fieldType": "TEXT" }, { "fieldName": "F2",
--   "fieldType": "NUMERIC" }, { "fieldName": "F3", "fieldType":
--   "CATEGORICAL" }, { "fieldName": "F4", "fieldType": "NUMERIC" }, {
--   "fieldName": "F5", "fieldType": "CATEGORICAL" }, { "fieldName": "F6",
--   "fieldType": "TEXT" }, { "fieldName": "F7", "fieldType":
--   "WEIGHTED_INT_SEQUENCE" }, { "fieldName": "F8", "fieldType":
--   "WEIGHTED_STRING_SEQUENCE" } ],
--   
--   "excludedVariableNames": [ "F6" ] }
--   
--   <a>$sel:dataRearrangement:S3DataSpec'</a>,
--   <a>s3DataSpec_dataRearrangement</a> - A JSON string that represents
--   the splitting and rearrangement processing to be applied to a
--   <tt>DataSource</tt>. If the <tt>DataRearrangement</tt> parameter is
--   not provided, all of the input data is used to create the
--   <tt>Datasource</tt>.
--   
--   There are multiple parameters that control what data is used to create
--   a datasource:
--   
--   <ul>
--   <li><b><tt>percentBegin</tt></b>Use <tt>percentBegin</tt> to indicate
--   the beginning of the range of the data used to create the Datasource.
--   If you do not include <tt>percentBegin</tt> and <tt>percentEnd</tt>,
--   Amazon ML includes all of the data when creating the datasource.</li>
--   <li><b><tt>percentEnd</tt></b>Use <tt>percentEnd</tt> to indicate the
--   end of the range of the data used to create the Datasource. If you do
--   not include <tt>percentBegin</tt> and <tt>percentEnd</tt>, Amazon ML
--   includes all of the data when creating the datasource.</li>
--   <li><b><tt>complement</tt></b>The <tt>complement</tt> parameter
--   instructs Amazon ML to use the data that is not included in the range
--   of <tt>percentBegin</tt> to <tt>percentEnd</tt> to create a
--   datasource. The <tt>complement</tt> parameter is useful if you need to
--   create complementary datasources for training and evaluation. To
--   create a complementary datasource, use the same values for
--   <tt>percentBegin</tt> and <tt>percentEnd</tt>, along with the
--   <tt>complement</tt> parameter.For example, the following two
--   datasources do not share any data, and can be used to train and
--   evaluate a model. The first datasource has 25 percent of the data, and
--   the second one has 75 percent of the data.Datasource for evaluation:
--   <tt>{"splitting":{"percentBegin":0, "percentEnd":25}}</tt>Datasource
--   for training: <tt>{"splitting":{"percentBegin":0, "percentEnd":25,
--   "complement":"true"}}</tt></li>
--   <li><b><tt>strategy</tt></b>To change how Amazon ML splits the data
--   for a datasource, use the <tt>strategy</tt> parameter.The default
--   value for the <tt>strategy</tt> parameter is <tt>sequential</tt>,
--   meaning that Amazon ML takes all of the data records between the
--   <tt>percentBegin</tt> and <tt>percentEnd</tt> parameters for the
--   datasource, in the order that the records appear in the input data.The
--   following two <tt>DataRearrangement</tt> lines are examples of
--   sequentially ordered training and evaluation datasources:Datasource
--   for evaluation: <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"sequential"}}</tt>Datasource for training:
--   <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"sequential", "complement":"true"}}</tt>To randomly split
--   the input data into the proportions indicated by the percentBegin and
--   percentEnd parameters, set the <tt>strategy</tt> parameter to
--   <tt>random</tt> and provide a string that is used as the seed value
--   for the random data splitting (for example, you can use the S3 path to
--   your data as the random seed string). If you choose the random split
--   strategy, Amazon ML assigns each row of data a pseudo-random number
--   between 0 and 100, and then selects the rows that have an assigned
--   number between <tt>percentBegin</tt> and <tt>percentEnd</tt>.
--   Pseudo-random numbers are assigned using both the input seed string
--   value and the byte offset as a seed, so changing the data results in a
--   different split. Any existing ordering is preserved. The random
--   splitting strategy ensures that variables in the training and
--   evaluation data are distributed similarly. It is useful in the cases
--   where the input data may have an implicit sort order, which would
--   otherwise result in training and evaluation datasources containing
--   non-similar data records.The following two <tt>DataRearrangement</tt>
--   lines are examples of non-sequentially ordered training and evaluation
--   datasources:Datasource for evaluation:
--   <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"random",
--   "randomSeed"="s3://my_s3_path/bucket/file.csv"}}</tt>Datasource for
--   training: <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"random", "randomSeed"="s3://my_s3_path/bucket/file.csv",
--   "complement":"true"}}</tt></li>
--   </ul>
--   
--   <a>$sel:dataSchemaLocationS3:S3DataSpec'</a>,
--   <a>s3DataSpec_dataSchemaLocationS3</a> - Describes the schema location
--   in Amazon S3. You must provide either the <tt>DataSchema</tt> or the
--   <tt>DataSchemaLocationS3</tt>.
--   
--   <a>$sel:dataLocationS3:S3DataSpec'</a>,
--   <a>s3DataSpec_dataLocationS3</a> - The location of the data file(s)
--   used by a <tt>DataSource</tt>. The URI specifies a data file or an
--   Amazon Simple Storage Service (Amazon S3) directory or bucket
--   containing data files.
newS3DataSpec :: Text -> S3DataSpec

-- | A JSON string that represents the schema for an Amazon S3
--   <tt>DataSource</tt>. The <tt>DataSchema</tt> defines the structure of
--   the observation data in the data file(s) referenced in the
--   <tt>DataSource</tt>.
--   
--   You must provide either the <tt>DataSchema</tt> or the
--   <tt>DataSchemaLocationS3</tt>.
--   
--   Define your <tt>DataSchema</tt> as a series of key-value pairs.
--   <tt>attributes</tt> and <tt>excludedVariableNames</tt> have an array
--   of key-value pairs for their value. Use the following format to define
--   your <tt>DataSchema</tt>.
--   
--   { "version": "1.0",
--   
--   "recordAnnotationFieldName": "F1",
--   
--   "recordWeightFieldName": "F2",
--   
--   "targetFieldName": "F3",
--   
--   "dataFormat": "CSV",
--   
--   "dataFileContainsHeader": true,
--   
--   "attributes": [
--   
--   { "fieldName": "F1", "fieldType": "TEXT" }, { "fieldName": "F2",
--   "fieldType": "NUMERIC" }, { "fieldName": "F3", "fieldType":
--   "CATEGORICAL" }, { "fieldName": "F4", "fieldType": "NUMERIC" }, {
--   "fieldName": "F5", "fieldType": "CATEGORICAL" }, { "fieldName": "F6",
--   "fieldType": "TEXT" }, { "fieldName": "F7", "fieldType":
--   "WEIGHTED_INT_SEQUENCE" }, { "fieldName": "F8", "fieldType":
--   "WEIGHTED_STRING_SEQUENCE" } ],
--   
--   "excludedVariableNames": [ "F6" ] }
s3DataSpec_dataSchema :: Lens' S3DataSpec (Maybe Text)

-- | A JSON string that represents the splitting and rearrangement
--   processing to be applied to a <tt>DataSource</tt>. If the
--   <tt>DataRearrangement</tt> parameter is not provided, all of the input
--   data is used to create the <tt>Datasource</tt>.
--   
--   There are multiple parameters that control what data is used to create
--   a datasource:
--   
--   <ul>
--   <li><b><tt>percentBegin</tt></b>Use <tt>percentBegin</tt> to indicate
--   the beginning of the range of the data used to create the Datasource.
--   If you do not include <tt>percentBegin</tt> and <tt>percentEnd</tt>,
--   Amazon ML includes all of the data when creating the datasource.</li>
--   <li><b><tt>percentEnd</tt></b>Use <tt>percentEnd</tt> to indicate the
--   end of the range of the data used to create the Datasource. If you do
--   not include <tt>percentBegin</tt> and <tt>percentEnd</tt>, Amazon ML
--   includes all of the data when creating the datasource.</li>
--   <li><b><tt>complement</tt></b>The <tt>complement</tt> parameter
--   instructs Amazon ML to use the data that is not included in the range
--   of <tt>percentBegin</tt> to <tt>percentEnd</tt> to create a
--   datasource. The <tt>complement</tt> parameter is useful if you need to
--   create complementary datasources for training and evaluation. To
--   create a complementary datasource, use the same values for
--   <tt>percentBegin</tt> and <tt>percentEnd</tt>, along with the
--   <tt>complement</tt> parameter.For example, the following two
--   datasources do not share any data, and can be used to train and
--   evaluate a model. The first datasource has 25 percent of the data, and
--   the second one has 75 percent of the data.Datasource for evaluation:
--   <tt>{"splitting":{"percentBegin":0, "percentEnd":25}}</tt>Datasource
--   for training: <tt>{"splitting":{"percentBegin":0, "percentEnd":25,
--   "complement":"true"}}</tt></li>
--   <li><b><tt>strategy</tt></b>To change how Amazon ML splits the data
--   for a datasource, use the <tt>strategy</tt> parameter.The default
--   value for the <tt>strategy</tt> parameter is <tt>sequential</tt>,
--   meaning that Amazon ML takes all of the data records between the
--   <tt>percentBegin</tt> and <tt>percentEnd</tt> parameters for the
--   datasource, in the order that the records appear in the input data.The
--   following two <tt>DataRearrangement</tt> lines are examples of
--   sequentially ordered training and evaluation datasources:Datasource
--   for evaluation: <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"sequential"}}</tt>Datasource for training:
--   <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"sequential", "complement":"true"}}</tt>To randomly split
--   the input data into the proportions indicated by the percentBegin and
--   percentEnd parameters, set the <tt>strategy</tt> parameter to
--   <tt>random</tt> and provide a string that is used as the seed value
--   for the random data splitting (for example, you can use the S3 path to
--   your data as the random seed string). If you choose the random split
--   strategy, Amazon ML assigns each row of data a pseudo-random number
--   between 0 and 100, and then selects the rows that have an assigned
--   number between <tt>percentBegin</tt> and <tt>percentEnd</tt>.
--   Pseudo-random numbers are assigned using both the input seed string
--   value and the byte offset as a seed, so changing the data results in a
--   different split. Any existing ordering is preserved. The random
--   splitting strategy ensures that variables in the training and
--   evaluation data are distributed similarly. It is useful in the cases
--   where the input data may have an implicit sort order, which would
--   otherwise result in training and evaluation datasources containing
--   non-similar data records.The following two <tt>DataRearrangement</tt>
--   lines are examples of non-sequentially ordered training and evaluation
--   datasources:Datasource for evaluation:
--   <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"random",
--   "randomSeed"="s3://my_s3_path/bucket/file.csv"}}</tt>Datasource for
--   training: <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"random", "randomSeed"="s3://my_s3_path/bucket/file.csv",
--   "complement":"true"}}</tt></li>
--   </ul>
s3DataSpec_dataRearrangement :: Lens' S3DataSpec (Maybe Text)

-- | Describes the schema location in Amazon S3. You must provide either
--   the <tt>DataSchema</tt> or the <tt>DataSchemaLocationS3</tt>.
s3DataSpec_dataSchemaLocationS3 :: Lens' S3DataSpec (Maybe Text)

-- | The location of the data file(s) used by a <tt>DataSource</tt>. The
--   URI specifies a data file or an Amazon Simple Storage Service (Amazon
--   S3) directory or bucket containing data files.
s3DataSpec_dataLocationS3 :: Lens' S3DataSpec Text
instance GHC.Generics.Generic Network.AWS.MachineLearning.Types.S3DataSpec.S3DataSpec
instance GHC.Show.Show Network.AWS.MachineLearning.Types.S3DataSpec.S3DataSpec
instance GHC.Read.Read Network.AWS.MachineLearning.Types.S3DataSpec.S3DataSpec
instance GHC.Classes.Eq Network.AWS.MachineLearning.Types.S3DataSpec.S3DataSpec
instance Data.Hashable.Class.Hashable Network.AWS.MachineLearning.Types.S3DataSpec.S3DataSpec
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.Types.S3DataSpec.S3DataSpec
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MachineLearning.Types.S3DataSpec.S3DataSpec


module Network.AWS.MachineLearning.Types.SortOrder

-- | The sort order specified in a listing condition. Possible values
--   include the following:
--   
--   <ul>
--   <li><tt>asc</tt> - Present the information in ascending order (from
--   A-Z).</li>
--   <li><tt>dsc</tt> - Present the information in descending order (from
--   Z-A).</li>
--   </ul>
newtype SortOrder
SortOrder' :: Text -> SortOrder
[fromSortOrder] :: SortOrder -> Text
pattern SortOrder_Asc :: SortOrder
pattern SortOrder_Dsc :: SortOrder
instance Network.AWS.Data.XML.ToXML Network.AWS.MachineLearning.Types.SortOrder.SortOrder
instance Network.AWS.Data.XML.FromXML Network.AWS.MachineLearning.Types.SortOrder.SortOrder
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.MachineLearning.Types.SortOrder.SortOrder
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MachineLearning.Types.SortOrder.SortOrder
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.MachineLearning.Types.SortOrder.SortOrder
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.MachineLearning.Types.SortOrder.SortOrder
instance Network.AWS.Data.Query.ToQuery Network.AWS.MachineLearning.Types.SortOrder.SortOrder
instance Network.AWS.Data.Headers.ToHeader Network.AWS.MachineLearning.Types.SortOrder.SortOrder
instance Network.AWS.Data.Log.ToLog Network.AWS.MachineLearning.Types.SortOrder.SortOrder
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.MachineLearning.Types.SortOrder.SortOrder
instance Network.AWS.Data.Text.ToText Network.AWS.MachineLearning.Types.SortOrder.SortOrder
instance Network.AWS.Data.Text.FromText Network.AWS.MachineLearning.Types.SortOrder.SortOrder
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.Types.SortOrder.SortOrder
instance Data.Hashable.Class.Hashable Network.AWS.MachineLearning.Types.SortOrder.SortOrder
instance GHC.Generics.Generic Network.AWS.MachineLearning.Types.SortOrder.SortOrder
instance GHC.Classes.Ord Network.AWS.MachineLearning.Types.SortOrder.SortOrder
instance GHC.Classes.Eq Network.AWS.MachineLearning.Types.SortOrder.SortOrder
instance GHC.Read.Read Network.AWS.MachineLearning.Types.SortOrder.SortOrder
instance GHC.Show.Show Network.AWS.MachineLearning.Types.SortOrder.SortOrder


module Network.AWS.MachineLearning.Types.Tag

-- | A custom key-value pair associated with an ML object, such as an ML
--   model.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Maybe Text -> Maybe Text -> Tag

-- | A unique identifier for the tag. Valid characters include Unicode
--   letters, digits, white space, _, ., /, =, +, -, %, and @.
[$sel:key:Tag'] :: Tag -> Maybe Text

-- | An optional string, typically used to describe or define the tag.
--   Valid characters include Unicode letters, digits, white space, _, .,
--   /, =, +, -, %, and @.
[$sel:value:Tag'] :: Tag -> Maybe Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - A unique identifier for the
--   tag. Valid characters include Unicode letters, digits, white space, _,
--   ., /, =, +, -, %, and @.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - An optional string,
--   typically used to describe or define the tag. Valid characters include
--   Unicode letters, digits, white space, _, ., /, =, +, -, %, and @.
newTag :: Tag

-- | A unique identifier for the tag. Valid characters include Unicode
--   letters, digits, white space, _, ., /, =, +, -, %, and @.
tag_key :: Lens' Tag (Maybe Text)

-- | An optional string, typically used to describe or define the tag.
--   Valid characters include Unicode letters, digits, white space, _, .,
--   /, =, +, -, %, and @.
tag_value :: Lens' Tag (Maybe Text)
instance GHC.Generics.Generic Network.AWS.MachineLearning.Types.Tag.Tag
instance GHC.Show.Show Network.AWS.MachineLearning.Types.Tag.Tag
instance GHC.Read.Read Network.AWS.MachineLearning.Types.Tag.Tag
instance GHC.Classes.Eq Network.AWS.MachineLearning.Types.Tag.Tag
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.MachineLearning.Types.Tag.Tag
instance Data.Hashable.Class.Hashable Network.AWS.MachineLearning.Types.Tag.Tag
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.Types.Tag.Tag
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MachineLearning.Types.Tag.Tag


module Network.AWS.MachineLearning.Types.TaggableResourceType
newtype TaggableResourceType
TaggableResourceType' :: Text -> TaggableResourceType
[fromTaggableResourceType] :: TaggableResourceType -> Text
pattern TaggableResourceType_BatchPrediction :: TaggableResourceType
pattern TaggableResourceType_DataSource :: TaggableResourceType
pattern TaggableResourceType_Evaluation :: TaggableResourceType
pattern TaggableResourceType_MLModel :: TaggableResourceType
instance Network.AWS.Data.XML.ToXML Network.AWS.MachineLearning.Types.TaggableResourceType.TaggableResourceType
instance Network.AWS.Data.XML.FromXML Network.AWS.MachineLearning.Types.TaggableResourceType.TaggableResourceType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.MachineLearning.Types.TaggableResourceType.TaggableResourceType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MachineLearning.Types.TaggableResourceType.TaggableResourceType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.MachineLearning.Types.TaggableResourceType.TaggableResourceType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.MachineLearning.Types.TaggableResourceType.TaggableResourceType
instance Network.AWS.Data.Query.ToQuery Network.AWS.MachineLearning.Types.TaggableResourceType.TaggableResourceType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.MachineLearning.Types.TaggableResourceType.TaggableResourceType
instance Network.AWS.Data.Log.ToLog Network.AWS.MachineLearning.Types.TaggableResourceType.TaggableResourceType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.MachineLearning.Types.TaggableResourceType.TaggableResourceType
instance Network.AWS.Data.Text.ToText Network.AWS.MachineLearning.Types.TaggableResourceType.TaggableResourceType
instance Network.AWS.Data.Text.FromText Network.AWS.MachineLearning.Types.TaggableResourceType.TaggableResourceType
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.Types.TaggableResourceType.TaggableResourceType
instance Data.Hashable.Class.Hashable Network.AWS.MachineLearning.Types.TaggableResourceType.TaggableResourceType
instance GHC.Generics.Generic Network.AWS.MachineLearning.Types.TaggableResourceType.TaggableResourceType
instance GHC.Classes.Ord Network.AWS.MachineLearning.Types.TaggableResourceType.TaggableResourceType
instance GHC.Classes.Eq Network.AWS.MachineLearning.Types.TaggableResourceType.TaggableResourceType
instance GHC.Read.Read Network.AWS.MachineLearning.Types.TaggableResourceType.TaggableResourceType
instance GHC.Show.Show Network.AWS.MachineLearning.Types.TaggableResourceType.TaggableResourceType


module Network.AWS.MachineLearning.Types

-- | API version <tt>2014-12-12</tt> of the Amazon Machine Learning SDK
--   configuration.
defaultService :: Service

-- | The exception is thrown when a predict request is made to an unmounted
--   <tt>MLModel</tt>.
_PredictorNotMountedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Prism for TagLimitExceededException' errors.
_TagLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An error on the client occurred. Typically, the cause is an invalid
--   input value.
_InvalidInputException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Prism for InvalidTagException' errors.
_InvalidTagException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The subscriber exceeded the maximum number of operations. This
--   exception can occur when listing objects such as <tt>DataSource</tt>.
_LimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A specified resource cannot be located.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A second request to use or change an object was not allowed. This can
--   result from retrying a request using a parameter that was not present
--   in the original request.
_IdempotentParameterMismatchException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An error on the server occurred when trying to process a request.
_InternalServerException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The function used to train an <tt>MLModel</tt>. Training choices
--   supported by Amazon ML include the following:
--   
--   <ul>
--   <li><tt>SGD</tt> - Stochastic Gradient Descent.</li>
--   <li><tt>RandomForest</tt> - Random forest of decision trees.</li>
--   </ul>
newtype Algorithm
Algorithm' :: Text -> Algorithm
[fromAlgorithm] :: Algorithm -> Text
pattern Algorithm_Sgd :: Algorithm

-- | A list of the variables to use in searching or filtering
--   <tt>BatchPrediction</tt>.
--   
--   <ul>
--   <li><tt>CreatedAt</tt> - Sets the search criteria to
--   <tt>BatchPrediction</tt> creation date.</li>
--   <li><tt>Status</tt> - Sets the search criteria to
--   <tt>BatchPrediction</tt> status.</li>
--   <li><tt>Name</tt> - Sets the search criteria to the contents of
--   <tt>BatchPrediction</tt> <tt>Name</tt>.</li>
--   <li><tt>IAMUser</tt> - Sets the search criteria to the user account
--   that invoked the <tt>BatchPrediction</tt> creation.</li>
--   <li><tt>MLModelId</tt> - Sets the search criteria to the
--   <tt>MLModel</tt> used in the <tt>BatchPrediction</tt>.</li>
--   <li><tt>DataSourceId</tt> - Sets the search criteria to the
--   <tt>DataSource</tt> used in the <tt>BatchPrediction</tt>.</li>
--   <li><tt>DataURI</tt> - Sets the search criteria to the data file(s)
--   used in the <tt>BatchPrediction</tt>. The URL can identify either a
--   file or an Amazon Simple Storage Service (Amazon S3) bucket or
--   directory.</li>
--   </ul>
newtype BatchPredictionFilterVariable
BatchPredictionFilterVariable' :: Text -> BatchPredictionFilterVariable
[fromBatchPredictionFilterVariable] :: BatchPredictionFilterVariable -> Text
pattern BatchPredictionFilterVariable_CreatedAt :: BatchPredictionFilterVariable
pattern BatchPredictionFilterVariable_DataSourceId :: BatchPredictionFilterVariable
pattern BatchPredictionFilterVariable_DataURI :: BatchPredictionFilterVariable
pattern BatchPredictionFilterVariable_IAMUser :: BatchPredictionFilterVariable
pattern BatchPredictionFilterVariable_LastUpdatedAt :: BatchPredictionFilterVariable
pattern BatchPredictionFilterVariable_MLModelId :: BatchPredictionFilterVariable
pattern BatchPredictionFilterVariable_Name :: BatchPredictionFilterVariable
pattern BatchPredictionFilterVariable_Status :: BatchPredictionFilterVariable

-- | A list of the variables to use in searching or filtering
--   <tt>DataSource</tt>.
--   
--   <ul>
--   <li><tt>CreatedAt</tt> - Sets the search criteria to
--   <tt>DataSource</tt> creation date.</li>
--   <li><tt>Status</tt> - Sets the search criteria to <tt>DataSource</tt>
--   status.</li>
--   <li><tt>Name</tt> - Sets the search criteria to the contents of
--   <tt>DataSource</tt> <tt>Name</tt>.</li>
--   <li><tt>DataUri</tt> - Sets the search criteria to the URI of data
--   files used to create the <tt>DataSource</tt>. The URI can identify
--   either a file or an Amazon Simple Storage Service (Amazon S3) bucket
--   or directory.</li>
--   <li><tt>IAMUser</tt> - Sets the search criteria to the user account
--   that invoked the <tt>DataSource</tt> creation.</li>
--   </ul>
--   
--   <b>Note:</b> The variable names should match the variable names in the
--   <tt>DataSource</tt>.
newtype DataSourceFilterVariable
DataSourceFilterVariable' :: Text -> DataSourceFilterVariable
[fromDataSourceFilterVariable] :: DataSourceFilterVariable -> Text
pattern DataSourceFilterVariable_CreatedAt :: DataSourceFilterVariable
pattern DataSourceFilterVariable_DataLocationS3 :: DataSourceFilterVariable
pattern DataSourceFilterVariable_IAMUser :: DataSourceFilterVariable
pattern DataSourceFilterVariable_LastUpdatedAt :: DataSourceFilterVariable
pattern DataSourceFilterVariable_Name :: DataSourceFilterVariable
pattern DataSourceFilterVariable_Status :: DataSourceFilterVariable

-- | Contains the key values of <tt>DetailsMap</tt>:
--   
--   <ul>
--   <li><tt>PredictiveModelType</tt> - Indicates the type of the
--   <tt>MLModel</tt>.</li>
--   <li><tt>Algorithm</tt> - Indicates the algorithm that was used for the
--   <tt>MLModel</tt>.</li>
--   </ul>
newtype DetailsAttributes
DetailsAttributes' :: Text -> DetailsAttributes
[fromDetailsAttributes] :: DetailsAttributes -> Text
pattern DetailsAttributes_Algorithm :: DetailsAttributes
pattern DetailsAttributes_PredictiveModelType :: DetailsAttributes

-- | Object status with the following possible values:
--   
--   <ul>
--   <li><pre>PENDING</pre></li>
--   <li><pre>INPROGRESS</pre></li>
--   <li><pre>FAILED</pre></li>
--   <li><pre>COMPLETED</pre></li>
--   <li><pre>DELETED</pre></li>
--   </ul>
newtype EntityStatus
EntityStatus' :: Text -> EntityStatus
[fromEntityStatus] :: EntityStatus -> Text
pattern EntityStatus_COMPLETED :: EntityStatus
pattern EntityStatus_DELETED :: EntityStatus
pattern EntityStatus_FAILED :: EntityStatus
pattern EntityStatus_INPROGRESS :: EntityStatus
pattern EntityStatus_PENDING :: EntityStatus

-- | A list of the variables to use in searching or filtering
--   <tt>Evaluation</tt>.
--   
--   <ul>
--   <li><tt>CreatedAt</tt> - Sets the search criteria to
--   <tt>Evaluation</tt> creation date.</li>
--   <li><tt>Status</tt> - Sets the search criteria to <tt>Evaluation</tt>
--   status.</li>
--   <li><tt>Name</tt> - Sets the search criteria to the contents of
--   <tt>Evaluation</tt> ____ <tt>Name</tt>.</li>
--   <li><tt>IAMUser</tt> - Sets the search criteria to the user account
--   that invoked an evaluation.</li>
--   <li><tt>MLModelId</tt> - Sets the search criteria to the
--   <tt>Predictor</tt> that was evaluated.</li>
--   <li><tt>DataSourceId</tt> - Sets the search criteria to the
--   <tt>DataSource</tt> used in evaluation.</li>
--   <li><tt>DataUri</tt> - Sets the search criteria to the data file(s)
--   used in evaluation. The URL can identify either a file or an Amazon
--   Simple Storage Service (Amazon S3) bucket or directory.</li>
--   </ul>
newtype EvaluationFilterVariable
EvaluationFilterVariable' :: Text -> EvaluationFilterVariable
[fromEvaluationFilterVariable] :: EvaluationFilterVariable -> Text
pattern EvaluationFilterVariable_CreatedAt :: EvaluationFilterVariable
pattern EvaluationFilterVariable_DataSourceId :: EvaluationFilterVariable
pattern EvaluationFilterVariable_DataURI :: EvaluationFilterVariable
pattern EvaluationFilterVariable_IAMUser :: EvaluationFilterVariable
pattern EvaluationFilterVariable_LastUpdatedAt :: EvaluationFilterVariable
pattern EvaluationFilterVariable_MLModelId :: EvaluationFilterVariable
pattern EvaluationFilterVariable_Name :: EvaluationFilterVariable
pattern EvaluationFilterVariable_Status :: EvaluationFilterVariable
newtype MLModelFilterVariable
MLModelFilterVariable' :: Text -> MLModelFilterVariable
[fromMLModelFilterVariable] :: MLModelFilterVariable -> Text
pattern MLModelFilterVariable_Algorithm :: MLModelFilterVariable
pattern MLModelFilterVariable_CreatedAt :: MLModelFilterVariable
pattern MLModelFilterVariable_IAMUser :: MLModelFilterVariable
pattern MLModelFilterVariable_LastUpdatedAt :: MLModelFilterVariable
pattern MLModelFilterVariable_MLModelType :: MLModelFilterVariable
pattern MLModelFilterVariable_Name :: MLModelFilterVariable
pattern MLModelFilterVariable_RealtimeEndpointStatus :: MLModelFilterVariable
pattern MLModelFilterVariable_Status :: MLModelFilterVariable
pattern MLModelFilterVariable_TrainingDataSourceId :: MLModelFilterVariable
pattern MLModelFilterVariable_TrainingDataURI :: MLModelFilterVariable
newtype MLModelType
MLModelType' :: Text -> MLModelType
[fromMLModelType] :: MLModelType -> Text
pattern MLModelType_BINARY :: MLModelType
pattern MLModelType_MULTICLASS :: MLModelType
pattern MLModelType_REGRESSION :: MLModelType
newtype RealtimeEndpointStatus
RealtimeEndpointStatus' :: Text -> RealtimeEndpointStatus
[fromRealtimeEndpointStatus] :: RealtimeEndpointStatus -> Text
pattern RealtimeEndpointStatus_FAILED :: RealtimeEndpointStatus
pattern RealtimeEndpointStatus_NONE :: RealtimeEndpointStatus
pattern RealtimeEndpointStatus_READY :: RealtimeEndpointStatus
pattern RealtimeEndpointStatus_UPDATING :: RealtimeEndpointStatus

-- | The sort order specified in a listing condition. Possible values
--   include the following:
--   
--   <ul>
--   <li><tt>asc</tt> - Present the information in ascending order (from
--   A-Z).</li>
--   <li><tt>dsc</tt> - Present the information in descending order (from
--   Z-A).</li>
--   </ul>
newtype SortOrder
SortOrder' :: Text -> SortOrder
[fromSortOrder] :: SortOrder -> Text
pattern SortOrder_Asc :: SortOrder
pattern SortOrder_Dsc :: SortOrder
newtype TaggableResourceType
TaggableResourceType' :: Text -> TaggableResourceType
[fromTaggableResourceType] :: TaggableResourceType -> Text
pattern TaggableResourceType_BatchPrediction :: TaggableResourceType
pattern TaggableResourceType_DataSource :: TaggableResourceType
pattern TaggableResourceType_Evaluation :: TaggableResourceType
pattern TaggableResourceType_MLModel :: TaggableResourceType

-- | Represents the output of a <tt>GetBatchPrediction</tt> operation.
--   
--   The content consists of the detailed metadata, the status, and the
--   data file information of a <tt>Batch Prediction</tt>.
--   
--   <i>See:</i> <a>newBatchPrediction</a> smart constructor.
data BatchPrediction
BatchPrediction' :: Maybe EntityStatus -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Integer -> Maybe Integer -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Integer -> Maybe POSIX -> BatchPrediction

-- | The status of the <tt>BatchPrediction</tt>. This element can have one
--   of the following values:
--   
--   <ul>
--   <li><tt>PENDING</tt> - Amazon Machine Learning (Amazon ML) submitted a
--   request to generate predictions for a batch of observations.</li>
--   <li><tt>INPROGRESS</tt> - The process is underway.</li>
--   <li><tt>FAILED</tt> - The request to perform a batch prediction did
--   not run to completion. It is not usable.</li>
--   <li><tt>COMPLETED</tt> - The batch prediction process completed
--   successfully.</li>
--   <li><tt>DELETED</tt> - The <tt>BatchPrediction</tt> is marked as
--   deleted. It is not usable.</li>
--   </ul>
[$sel:status:BatchPrediction'] :: BatchPrediction -> Maybe EntityStatus

-- | The ID assigned to the <tt>BatchPrediction</tt> at creation. This
--   value should be identical to the value of the
--   <tt>BatchPredictionID</tt> in the request.
[$sel:batchPredictionId:BatchPrediction'] :: BatchPrediction -> Maybe Text
[$sel:startedAt:BatchPrediction'] :: BatchPrediction -> Maybe POSIX

-- | The location of an Amazon S3 bucket or directory to receive the
--   operation results. The following substrings are not allowed in the
--   <tt>s3 key</tt> portion of the <tt>outputURI</tt> field: ':', '//',
--   '/./', '/../'.
[$sel:outputUri:BatchPrediction'] :: BatchPrediction -> Maybe Text

-- | A description of the most recent details about processing the batch
--   prediction request.
[$sel:message:BatchPrediction'] :: BatchPrediction -> Maybe Text

-- | The time that the <tt>BatchPrediction</tt> was created. The time is
--   expressed in epoch time.
[$sel:createdAt:BatchPrediction'] :: BatchPrediction -> Maybe POSIX

-- | A user-supplied name or description of the <tt>BatchPrediction</tt>.
[$sel:name:BatchPrediction'] :: BatchPrediction -> Maybe Text

-- | The AWS user account that invoked the <tt>BatchPrediction</tt>. The
--   account type can be either an AWS root account or an AWS Identity and
--   Access Management (IAM) user account.
[$sel:createdByIamUser:BatchPrediction'] :: BatchPrediction -> Maybe Text
[$sel:finishedAt:BatchPrediction'] :: BatchPrediction -> Maybe POSIX
[$sel:invalidRecordCount:BatchPrediction'] :: BatchPrediction -> Maybe Integer
[$sel:totalRecordCount:BatchPrediction'] :: BatchPrediction -> Maybe Integer

-- | The ID of the <tt>DataSource</tt> that points to the group of
--   observations to predict.
[$sel:batchPredictionDataSourceId:BatchPrediction'] :: BatchPrediction -> Maybe Text

-- | The ID of the <tt>MLModel</tt> that generated predictions for the
--   <tt>BatchPrediction</tt> request.
[$sel:mLModelId:BatchPrediction'] :: BatchPrediction -> Maybe Text

-- | The location of the data file or directory in Amazon Simple Storage
--   Service (Amazon S3).
[$sel:inputDataLocationS3:BatchPrediction'] :: BatchPrediction -> Maybe Text
[$sel:computeTime:BatchPrediction'] :: BatchPrediction -> Maybe Integer

-- | The time of the most recent edit to the <tt>BatchPrediction</tt>. The
--   time is expressed in epoch time.
[$sel:lastUpdatedAt:BatchPrediction'] :: BatchPrediction -> Maybe POSIX

-- | Create a value of <a>BatchPrediction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:BatchPrediction'</a>, <a>batchPrediction_status</a> -
--   The status of the <tt>BatchPrediction</tt>. This element can have one
--   of the following values:
--   
--   <ul>
--   <li><tt>PENDING</tt> - Amazon Machine Learning (Amazon ML) submitted a
--   request to generate predictions for a batch of observations.</li>
--   <li><tt>INPROGRESS</tt> - The process is underway.</li>
--   <li><tt>FAILED</tt> - The request to perform a batch prediction did
--   not run to completion. It is not usable.</li>
--   <li><tt>COMPLETED</tt> - The batch prediction process completed
--   successfully.</li>
--   <li><tt>DELETED</tt> - The <tt>BatchPrediction</tt> is marked as
--   deleted. It is not usable.</li>
--   </ul>
--   
--   <a>$sel:batchPredictionId:BatchPrediction'</a>,
--   <a>batchPrediction_batchPredictionId</a> - The ID assigned to the
--   <tt>BatchPrediction</tt> at creation. This value should be identical
--   to the value of the <tt>BatchPredictionID</tt> in the request.
--   
--   <a>$sel:startedAt:BatchPrediction'</a>,
--   <a>batchPrediction_startedAt</a> - Undocumented member.
--   
--   <a>$sel:outputUri:BatchPrediction'</a>,
--   <a>batchPrediction_outputUri</a> - The location of an Amazon S3 bucket
--   or directory to receive the operation results. The following
--   substrings are not allowed in the <tt>s3 key</tt> portion of the
--   <tt>outputURI</tt> field: ':', '//', '/./', '/../'.
--   
--   <a>$sel:message:BatchPrediction'</a>, <a>batchPrediction_message</a> -
--   A description of the most recent details about processing the batch
--   prediction request.
--   
--   <a>$sel:createdAt:BatchPrediction'</a>,
--   <a>batchPrediction_createdAt</a> - The time that the
--   <tt>BatchPrediction</tt> was created. The time is expressed in epoch
--   time.
--   
--   <a>$sel:name:BatchPrediction'</a>, <a>batchPrediction_name</a> - A
--   user-supplied name or description of the <tt>BatchPrediction</tt>.
--   
--   <a>$sel:createdByIamUser:BatchPrediction'</a>,
--   <a>batchPrediction_createdByIamUser</a> - The AWS user account that
--   invoked the <tt>BatchPrediction</tt>. The account type can be either
--   an AWS root account or an AWS Identity and Access Management (IAM)
--   user account.
--   
--   <a>$sel:finishedAt:BatchPrediction'</a>,
--   <a>batchPrediction_finishedAt</a> - Undocumented member.
--   
--   <a>$sel:invalidRecordCount:BatchPrediction'</a>,
--   <a>batchPrediction_invalidRecordCount</a> - Undocumented member.
--   
--   <a>$sel:totalRecordCount:BatchPrediction'</a>,
--   <a>batchPrediction_totalRecordCount</a> - Undocumented member.
--   
--   <a>$sel:batchPredictionDataSourceId:BatchPrediction'</a>,
--   <a>batchPrediction_batchPredictionDataSourceId</a> - The ID of the
--   <tt>DataSource</tt> that points to the group of observations to
--   predict.
--   
--   <a>$sel:mLModelId:BatchPrediction'</a>,
--   <a>batchPrediction_mLModelId</a> - The ID of the <tt>MLModel</tt> that
--   generated predictions for the <tt>BatchPrediction</tt> request.
--   
--   <a>$sel:inputDataLocationS3:BatchPrediction'</a>,
--   <a>batchPrediction_inputDataLocationS3</a> - The location of the data
--   file or directory in Amazon Simple Storage Service (Amazon S3).
--   
--   <a>$sel:computeTime:BatchPrediction'</a>,
--   <a>batchPrediction_computeTime</a> - Undocumented member.
--   
--   <a>$sel:lastUpdatedAt:BatchPrediction'</a>,
--   <a>batchPrediction_lastUpdatedAt</a> - The time of the most recent
--   edit to the <tt>BatchPrediction</tt>. The time is expressed in epoch
--   time.
newBatchPrediction :: BatchPrediction

-- | The status of the <tt>BatchPrediction</tt>. This element can have one
--   of the following values:
--   
--   <ul>
--   <li><tt>PENDING</tt> - Amazon Machine Learning (Amazon ML) submitted a
--   request to generate predictions for a batch of observations.</li>
--   <li><tt>INPROGRESS</tt> - The process is underway.</li>
--   <li><tt>FAILED</tt> - The request to perform a batch prediction did
--   not run to completion. It is not usable.</li>
--   <li><tt>COMPLETED</tt> - The batch prediction process completed
--   successfully.</li>
--   <li><tt>DELETED</tt> - The <tt>BatchPrediction</tt> is marked as
--   deleted. It is not usable.</li>
--   </ul>
batchPrediction_status :: Lens' BatchPrediction (Maybe EntityStatus)

-- | The ID assigned to the <tt>BatchPrediction</tt> at creation. This
--   value should be identical to the value of the
--   <tt>BatchPredictionID</tt> in the request.
batchPrediction_batchPredictionId :: Lens' BatchPrediction (Maybe Text)

-- | Undocumented member.
batchPrediction_startedAt :: Lens' BatchPrediction (Maybe UTCTime)

-- | The location of an Amazon S3 bucket or directory to receive the
--   operation results. The following substrings are not allowed in the
--   <tt>s3 key</tt> portion of the <tt>outputURI</tt> field: ':', '//',
--   '/./', '/../'.
batchPrediction_outputUri :: Lens' BatchPrediction (Maybe Text)

-- | A description of the most recent details about processing the batch
--   prediction request.
batchPrediction_message :: Lens' BatchPrediction (Maybe Text)

-- | The time that the <tt>BatchPrediction</tt> was created. The time is
--   expressed in epoch time.
batchPrediction_createdAt :: Lens' BatchPrediction (Maybe UTCTime)

-- | A user-supplied name or description of the <tt>BatchPrediction</tt>.
batchPrediction_name :: Lens' BatchPrediction (Maybe Text)

-- | The AWS user account that invoked the <tt>BatchPrediction</tt>. The
--   account type can be either an AWS root account or an AWS Identity and
--   Access Management (IAM) user account.
batchPrediction_createdByIamUser :: Lens' BatchPrediction (Maybe Text)

-- | Undocumented member.
batchPrediction_finishedAt :: Lens' BatchPrediction (Maybe UTCTime)

-- | Undocumented member.
batchPrediction_invalidRecordCount :: Lens' BatchPrediction (Maybe Integer)

-- | Undocumented member.
batchPrediction_totalRecordCount :: Lens' BatchPrediction (Maybe Integer)

-- | The ID of the <tt>DataSource</tt> that points to the group of
--   observations to predict.
batchPrediction_batchPredictionDataSourceId :: Lens' BatchPrediction (Maybe Text)

-- | The ID of the <tt>MLModel</tt> that generated predictions for the
--   <tt>BatchPrediction</tt> request.
batchPrediction_mLModelId :: Lens' BatchPrediction (Maybe Text)

-- | The location of the data file or directory in Amazon Simple Storage
--   Service (Amazon S3).
batchPrediction_inputDataLocationS3 :: Lens' BatchPrediction (Maybe Text)

-- | Undocumented member.
batchPrediction_computeTime :: Lens' BatchPrediction (Maybe Integer)

-- | The time of the most recent edit to the <tt>BatchPrediction</tt>. The
--   time is expressed in epoch time.
batchPrediction_lastUpdatedAt :: Lens' BatchPrediction (Maybe UTCTime)

-- | Represents the output of the <tt>GetDataSource</tt> operation.
--   
--   The content consists of the detailed metadata and data file
--   information and the current status of the <tt>DataSource</tt>.
--   
--   <i>See:</i> <a>newDataSource</a> smart constructor.
data DataSource
DataSource' :: Maybe EntityStatus -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe RedshiftMetadata -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Integer -> Maybe Text -> Maybe POSIX -> Maybe Integer -> Maybe Integer -> Maybe RDSMetadata -> Maybe POSIX -> DataSource

-- | The current status of the <tt>DataSource</tt>. This element can have
--   one of the following values:
--   
--   <ul>
--   <li>PENDING - Amazon Machine Learning (Amazon ML) submitted a request
--   to create a <tt>DataSource</tt>.</li>
--   <li>INPROGRESS - The creation process is underway.</li>
--   <li>FAILED - The request to create a <tt>DataSource</tt> did not run
--   to completion. It is not usable.</li>
--   <li>COMPLETED - The creation process completed successfully.</li>
--   <li>DELETED - The <tt>DataSource</tt> is marked as deleted. It is not
--   usable.</li>
--   </ul>
[$sel:status:DataSource'] :: DataSource -> Maybe EntityStatus
[$sel:startedAt:DataSource'] :: DataSource -> Maybe POSIX
[$sel:roleARN:DataSource'] :: DataSource -> Maybe Text

-- | A JSON string that represents the splitting and rearrangement
--   requirement used when this <tt>DataSource</tt> was created.
[$sel:dataRearrangement:DataSource'] :: DataSource -> Maybe Text
[$sel:redshiftMetadata:DataSource'] :: DataSource -> Maybe RedshiftMetadata

-- | A description of the most recent details about creating the
--   <tt>DataSource</tt>.
[$sel:message:DataSource'] :: DataSource -> Maybe Text

-- | The ID that is assigned to the <tt>DataSource</tt> during creation.
[$sel:dataSourceId:DataSource'] :: DataSource -> Maybe Text

-- | The parameter is <tt>true</tt> if statistics need to be generated from
--   the observation data.
[$sel:computeStatistics:DataSource'] :: DataSource -> Maybe Bool

-- | The time that the <tt>DataSource</tt> was created. The time is
--   expressed in epoch time.
[$sel:createdAt:DataSource'] :: DataSource -> Maybe POSIX

-- | The location and name of the data in Amazon Simple Storage Service
--   (Amazon S3) that is used by a <tt>DataSource</tt>.
[$sel:dataLocationS3:DataSource'] :: DataSource -> Maybe Text

-- | A user-supplied name or description of the <tt>DataSource</tt>.
[$sel:name:DataSource'] :: DataSource -> Maybe Text

-- | The number of data files referenced by the <tt>DataSource</tt>.
[$sel:numberOfFiles:DataSource'] :: DataSource -> Maybe Integer

-- | The AWS user account from which the <tt>DataSource</tt> was created.
--   The account type can be either an AWS root account or an AWS Identity
--   and Access Management (IAM) user account.
[$sel:createdByIamUser:DataSource'] :: DataSource -> Maybe Text
[$sel:finishedAt:DataSource'] :: DataSource -> Maybe POSIX

-- | The total number of observations contained in the data files that the
--   <tt>DataSource</tt> references.
[$sel:dataSizeInBytes:DataSource'] :: DataSource -> Maybe Integer
[$sel:computeTime:DataSource'] :: DataSource -> Maybe Integer
[$sel:rDSMetadata:DataSource'] :: DataSource -> Maybe RDSMetadata

-- | The time of the most recent edit to the <tt>BatchPrediction</tt>. The
--   time is expressed in epoch time.
[$sel:lastUpdatedAt:DataSource'] :: DataSource -> Maybe POSIX

-- | Create a value of <a>DataSource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:DataSource'</a>, <a>dataSource_status</a> - The current
--   status of the <tt>DataSource</tt>. This element can have one of the
--   following values:
--   
--   <ul>
--   <li>PENDING - Amazon Machine Learning (Amazon ML) submitted a request
--   to create a <tt>DataSource</tt>.</li>
--   <li>INPROGRESS - The creation process is underway.</li>
--   <li>FAILED - The request to create a <tt>DataSource</tt> did not run
--   to completion. It is not usable.</li>
--   <li>COMPLETED - The creation process completed successfully.</li>
--   <li>DELETED - The <tt>DataSource</tt> is marked as deleted. It is not
--   usable.</li>
--   </ul>
--   
--   <a>$sel:startedAt:DataSource'</a>, <a>dataSource_startedAt</a> -
--   Undocumented member.
--   
--   <a>$sel:roleARN:DataSource'</a>, <a>dataSource_roleARN</a> -
--   Undocumented member.
--   
--   <a>$sel:dataRearrangement:DataSource'</a>,
--   <a>dataSource_dataRearrangement</a> - A JSON string that represents
--   the splitting and rearrangement requirement used when this
--   <tt>DataSource</tt> was created.
--   
--   <a>$sel:redshiftMetadata:DataSource'</a>,
--   <a>dataSource_redshiftMetadata</a> - Undocumented member.
--   
--   <a>$sel:message:DataSource'</a>, <a>dataSource_message</a> - A
--   description of the most recent details about creating the
--   <tt>DataSource</tt>.
--   
--   <a>$sel:dataSourceId:DataSource'</a>, <a>dataSource_dataSourceId</a> -
--   The ID that is assigned to the <tt>DataSource</tt> during creation.
--   
--   <a>$sel:computeStatistics:DataSource'</a>,
--   <a>dataSource_computeStatistics</a> - The parameter is <tt>true</tt>
--   if statistics need to be generated from the observation data.
--   
--   <a>$sel:createdAt:DataSource'</a>, <a>dataSource_createdAt</a> - The
--   time that the <tt>DataSource</tt> was created. The time is expressed
--   in epoch time.
--   
--   <a>$sel:dataLocationS3:DataSource'</a>,
--   <a>dataSource_dataLocationS3</a> - The location and name of the data
--   in Amazon Simple Storage Service (Amazon S3) that is used by a
--   <tt>DataSource</tt>.
--   
--   <a>$sel:name:DataSource'</a>, <a>dataSource_name</a> - A user-supplied
--   name or description of the <tt>DataSource</tt>.
--   
--   <a>$sel:numberOfFiles:DataSource'</a>, <a>dataSource_numberOfFiles</a>
--   - The number of data files referenced by the <tt>DataSource</tt>.
--   
--   <a>$sel:createdByIamUser:DataSource'</a>,
--   <a>dataSource_createdByIamUser</a> - The AWS user account from which
--   the <tt>DataSource</tt> was created. The account type can be either an
--   AWS root account or an AWS Identity and Access Management (IAM) user
--   account.
--   
--   <a>$sel:finishedAt:DataSource'</a>, <a>dataSource_finishedAt</a> -
--   Undocumented member.
--   
--   <a>$sel:dataSizeInBytes:DataSource'</a>,
--   <a>dataSource_dataSizeInBytes</a> - The total number of observations
--   contained in the data files that the <tt>DataSource</tt> references.
--   
--   <a>$sel:computeTime:DataSource'</a>, <a>dataSource_computeTime</a> -
--   Undocumented member.
--   
--   <a>$sel:rDSMetadata:DataSource'</a>, <a>dataSource_rDSMetadata</a> -
--   Undocumented member.
--   
--   <a>$sel:lastUpdatedAt:DataSource'</a>, <a>dataSource_lastUpdatedAt</a>
--   - The time of the most recent edit to the <tt>BatchPrediction</tt>.
--   The time is expressed in epoch time.
newDataSource :: DataSource

-- | The current status of the <tt>DataSource</tt>. This element can have
--   one of the following values:
--   
--   <ul>
--   <li>PENDING - Amazon Machine Learning (Amazon ML) submitted a request
--   to create a <tt>DataSource</tt>.</li>
--   <li>INPROGRESS - The creation process is underway.</li>
--   <li>FAILED - The request to create a <tt>DataSource</tt> did not run
--   to completion. It is not usable.</li>
--   <li>COMPLETED - The creation process completed successfully.</li>
--   <li>DELETED - The <tt>DataSource</tt> is marked as deleted. It is not
--   usable.</li>
--   </ul>
dataSource_status :: Lens' DataSource (Maybe EntityStatus)

-- | Undocumented member.
dataSource_startedAt :: Lens' DataSource (Maybe UTCTime)

-- | Undocumented member.
dataSource_roleARN :: Lens' DataSource (Maybe Text)

-- | A JSON string that represents the splitting and rearrangement
--   requirement used when this <tt>DataSource</tt> was created.
dataSource_dataRearrangement :: Lens' DataSource (Maybe Text)

-- | Undocumented member.
dataSource_redshiftMetadata :: Lens' DataSource (Maybe RedshiftMetadata)

-- | A description of the most recent details about creating the
--   <tt>DataSource</tt>.
dataSource_message :: Lens' DataSource (Maybe Text)

-- | The ID that is assigned to the <tt>DataSource</tt> during creation.
dataSource_dataSourceId :: Lens' DataSource (Maybe Text)

-- | The parameter is <tt>true</tt> if statistics need to be generated from
--   the observation data.
dataSource_computeStatistics :: Lens' DataSource (Maybe Bool)

-- | The time that the <tt>DataSource</tt> was created. The time is
--   expressed in epoch time.
dataSource_createdAt :: Lens' DataSource (Maybe UTCTime)

-- | The location and name of the data in Amazon Simple Storage Service
--   (Amazon S3) that is used by a <tt>DataSource</tt>.
dataSource_dataLocationS3 :: Lens' DataSource (Maybe Text)

-- | A user-supplied name or description of the <tt>DataSource</tt>.
dataSource_name :: Lens' DataSource (Maybe Text)

-- | The number of data files referenced by the <tt>DataSource</tt>.
dataSource_numberOfFiles :: Lens' DataSource (Maybe Integer)

-- | The AWS user account from which the <tt>DataSource</tt> was created.
--   The account type can be either an AWS root account or an AWS Identity
--   and Access Management (IAM) user account.
dataSource_createdByIamUser :: Lens' DataSource (Maybe Text)

-- | Undocumented member.
dataSource_finishedAt :: Lens' DataSource (Maybe UTCTime)

-- | The total number of observations contained in the data files that the
--   <tt>DataSource</tt> references.
dataSource_dataSizeInBytes :: Lens' DataSource (Maybe Integer)

-- | Undocumented member.
dataSource_computeTime :: Lens' DataSource (Maybe Integer)

-- | Undocumented member.
dataSource_rDSMetadata :: Lens' DataSource (Maybe RDSMetadata)

-- | The time of the most recent edit to the <tt>BatchPrediction</tt>. The
--   time is expressed in epoch time.
dataSource_lastUpdatedAt :: Lens' DataSource (Maybe UTCTime)

-- | Represents the output of <tt>GetEvaluation</tt> operation.
--   
--   The content consists of the detailed metadata and data file
--   information and the current status of the <tt>Evaluation</tt>.
--   
--   <i>See:</i> <a>newEvaluation</a> smart constructor.
data Evaluation
Evaluation' :: Maybe PerformanceMetrics -> Maybe EntityStatus -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Integer -> Maybe POSIX -> Evaluation

-- | Measurements of how well the <tt>MLModel</tt> performed, using
--   observations referenced by the <tt>DataSource</tt>. One of the
--   following metrics is returned, based on the type of the
--   <tt>MLModel</tt>:
--   
--   <ul>
--   <li>BinaryAUC: A binary <tt>MLModel</tt> uses the Area Under the Curve
--   (AUC) technique to measure performance.</li>
--   <li>RegressionRMSE: A regression <tt>MLModel</tt> uses the Root Mean
--   Square Error (RMSE) technique to measure performance. RMSE measures
--   the difference between predicted and actual values for a single
--   variable.</li>
--   <li>MulticlassAvgFScore: A multiclass <tt>MLModel</tt> uses the F1
--   score technique to measure performance.</li>
--   </ul>
--   
--   For more information about performance metrics, please see the
--   <a>Amazon Machine Learning Developer Guide</a>.
[$sel:performanceMetrics:Evaluation'] :: Evaluation -> Maybe PerformanceMetrics

-- | The status of the evaluation. This element can have one of the
--   following values:
--   
--   <ul>
--   <li><tt>PENDING</tt> - Amazon Machine Learning (Amazon ML) submitted a
--   request to evaluate an <tt>MLModel</tt>.</li>
--   <li><tt>INPROGRESS</tt> - The evaluation is underway.</li>
--   <li><tt>FAILED</tt> - The request to evaluate an <tt>MLModel</tt> did
--   not run to completion. It is not usable.</li>
--   <li><tt>COMPLETED</tt> - The evaluation process completed
--   successfully.</li>
--   <li><tt>DELETED</tt> - The <tt>Evaluation</tt> is marked as deleted.
--   It is not usable.</li>
--   </ul>
[$sel:status:Evaluation'] :: Evaluation -> Maybe EntityStatus
[$sel:startedAt:Evaluation'] :: Evaluation -> Maybe POSIX

-- | The ID of the <tt>DataSource</tt> that is used to evaluate the
--   <tt>MLModel</tt>.
[$sel:evaluationDataSourceId:Evaluation'] :: Evaluation -> Maybe Text

-- | A description of the most recent details about evaluating the
--   <tt>MLModel</tt>.
[$sel:message:Evaluation'] :: Evaluation -> Maybe Text

-- | The time that the <tt>Evaluation</tt> was created. The time is
--   expressed in epoch time.
[$sel:createdAt:Evaluation'] :: Evaluation -> Maybe POSIX

-- | A user-supplied name or description of the <tt>Evaluation</tt>.
[$sel:name:Evaluation'] :: Evaluation -> Maybe Text

-- | The AWS user account that invoked the evaluation. The account type can
--   be either an AWS root account or an AWS Identity and Access Management
--   (IAM) user account.
[$sel:createdByIamUser:Evaluation'] :: Evaluation -> Maybe Text
[$sel:finishedAt:Evaluation'] :: Evaluation -> Maybe POSIX

-- | The ID of the <tt>MLModel</tt> that is the focus of the evaluation.
[$sel:mLModelId:Evaluation'] :: Evaluation -> Maybe Text

-- | The ID that is assigned to the <tt>Evaluation</tt> at creation.
[$sel:evaluationId:Evaluation'] :: Evaluation -> Maybe Text

-- | The location and name of the data in Amazon Simple Storage Server
--   (Amazon S3) that is used in the evaluation.
[$sel:inputDataLocationS3:Evaluation'] :: Evaluation -> Maybe Text
[$sel:computeTime:Evaluation'] :: Evaluation -> Maybe Integer

-- | The time of the most recent edit to the <tt>Evaluation</tt>. The time
--   is expressed in epoch time.
[$sel:lastUpdatedAt:Evaluation'] :: Evaluation -> Maybe POSIX

-- | Create a value of <a>Evaluation</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:performanceMetrics:Evaluation'</a>,
--   <a>evaluation_performanceMetrics</a> - Measurements of how well the
--   <tt>MLModel</tt> performed, using observations referenced by the
--   <tt>DataSource</tt>. One of the following metrics is returned, based
--   on the type of the <tt>MLModel</tt>:
--   
--   <ul>
--   <li>BinaryAUC: A binary <tt>MLModel</tt> uses the Area Under the Curve
--   (AUC) technique to measure performance.</li>
--   <li>RegressionRMSE: A regression <tt>MLModel</tt> uses the Root Mean
--   Square Error (RMSE) technique to measure performance. RMSE measures
--   the difference between predicted and actual values for a single
--   variable.</li>
--   <li>MulticlassAvgFScore: A multiclass <tt>MLModel</tt> uses the F1
--   score technique to measure performance.</li>
--   </ul>
--   
--   For more information about performance metrics, please see the
--   <a>Amazon Machine Learning Developer Guide</a>.
--   
--   <a>$sel:status:Evaluation'</a>, <a>evaluation_status</a> - The status
--   of the evaluation. This element can have one of the following values:
--   
--   <ul>
--   <li><tt>PENDING</tt> - Amazon Machine Learning (Amazon ML) submitted a
--   request to evaluate an <tt>MLModel</tt>.</li>
--   <li><tt>INPROGRESS</tt> - The evaluation is underway.</li>
--   <li><tt>FAILED</tt> - The request to evaluate an <tt>MLModel</tt> did
--   not run to completion. It is not usable.</li>
--   <li><tt>COMPLETED</tt> - The evaluation process completed
--   successfully.</li>
--   <li><tt>DELETED</tt> - The <tt>Evaluation</tt> is marked as deleted.
--   It is not usable.</li>
--   </ul>
--   
--   <a>$sel:startedAt:Evaluation'</a>, <a>evaluation_startedAt</a> -
--   Undocumented member.
--   
--   <a>$sel:evaluationDataSourceId:Evaluation'</a>,
--   <a>evaluation_evaluationDataSourceId</a> - The ID of the
--   <tt>DataSource</tt> that is used to evaluate the <tt>MLModel</tt>.
--   
--   <a>$sel:message:Evaluation'</a>, <a>evaluation_message</a> - A
--   description of the most recent details about evaluating the
--   <tt>MLModel</tt>.
--   
--   <a>$sel:createdAt:Evaluation'</a>, <a>evaluation_createdAt</a> - The
--   time that the <tt>Evaluation</tt> was created. The time is expressed
--   in epoch time.
--   
--   <a>$sel:name:Evaluation'</a>, <a>evaluation_name</a> - A user-supplied
--   name or description of the <tt>Evaluation</tt>.
--   
--   <a>$sel:createdByIamUser:Evaluation'</a>,
--   <a>evaluation_createdByIamUser</a> - The AWS user account that invoked
--   the evaluation. The account type can be either an AWS root account or
--   an AWS Identity and Access Management (IAM) user account.
--   
--   <a>$sel:finishedAt:Evaluation'</a>, <a>evaluation_finishedAt</a> -
--   Undocumented member.
--   
--   <a>$sel:mLModelId:Evaluation'</a>, <a>evaluation_mLModelId</a> - The
--   ID of the <tt>MLModel</tt> that is the focus of the evaluation.
--   
--   <a>$sel:evaluationId:Evaluation'</a>, <a>evaluation_evaluationId</a> -
--   The ID that is assigned to the <tt>Evaluation</tt> at creation.
--   
--   <a>$sel:inputDataLocationS3:Evaluation'</a>,
--   <a>evaluation_inputDataLocationS3</a> - The location and name of the
--   data in Amazon Simple Storage Server (Amazon S3) that is used in the
--   evaluation.
--   
--   <a>$sel:computeTime:Evaluation'</a>, <a>evaluation_computeTime</a> -
--   Undocumented member.
--   
--   <a>$sel:lastUpdatedAt:Evaluation'</a>, <a>evaluation_lastUpdatedAt</a>
--   - The time of the most recent edit to the <tt>Evaluation</tt>. The
--   time is expressed in epoch time.
newEvaluation :: Evaluation

-- | Measurements of how well the <tt>MLModel</tt> performed, using
--   observations referenced by the <tt>DataSource</tt>. One of the
--   following metrics is returned, based on the type of the
--   <tt>MLModel</tt>:
--   
--   <ul>
--   <li>BinaryAUC: A binary <tt>MLModel</tt> uses the Area Under the Curve
--   (AUC) technique to measure performance.</li>
--   <li>RegressionRMSE: A regression <tt>MLModel</tt> uses the Root Mean
--   Square Error (RMSE) technique to measure performance. RMSE measures
--   the difference between predicted and actual values for a single
--   variable.</li>
--   <li>MulticlassAvgFScore: A multiclass <tt>MLModel</tt> uses the F1
--   score technique to measure performance.</li>
--   </ul>
--   
--   For more information about performance metrics, please see the
--   <a>Amazon Machine Learning Developer Guide</a>.
evaluation_performanceMetrics :: Lens' Evaluation (Maybe PerformanceMetrics)

-- | The status of the evaluation. This element can have one of the
--   following values:
--   
--   <ul>
--   <li><tt>PENDING</tt> - Amazon Machine Learning (Amazon ML) submitted a
--   request to evaluate an <tt>MLModel</tt>.</li>
--   <li><tt>INPROGRESS</tt> - The evaluation is underway.</li>
--   <li><tt>FAILED</tt> - The request to evaluate an <tt>MLModel</tt> did
--   not run to completion. It is not usable.</li>
--   <li><tt>COMPLETED</tt> - The evaluation process completed
--   successfully.</li>
--   <li><tt>DELETED</tt> - The <tt>Evaluation</tt> is marked as deleted.
--   It is not usable.</li>
--   </ul>
evaluation_status :: Lens' Evaluation (Maybe EntityStatus)

-- | Undocumented member.
evaluation_startedAt :: Lens' Evaluation (Maybe UTCTime)

-- | The ID of the <tt>DataSource</tt> that is used to evaluate the
--   <tt>MLModel</tt>.
evaluation_evaluationDataSourceId :: Lens' Evaluation (Maybe Text)

-- | A description of the most recent details about evaluating the
--   <tt>MLModel</tt>.
evaluation_message :: Lens' Evaluation (Maybe Text)

-- | The time that the <tt>Evaluation</tt> was created. The time is
--   expressed in epoch time.
evaluation_createdAt :: Lens' Evaluation (Maybe UTCTime)

-- | A user-supplied name or description of the <tt>Evaluation</tt>.
evaluation_name :: Lens' Evaluation (Maybe Text)

-- | The AWS user account that invoked the evaluation. The account type can
--   be either an AWS root account or an AWS Identity and Access Management
--   (IAM) user account.
evaluation_createdByIamUser :: Lens' Evaluation (Maybe Text)

-- | Undocumented member.
evaluation_finishedAt :: Lens' Evaluation (Maybe UTCTime)

-- | The ID of the <tt>MLModel</tt> that is the focus of the evaluation.
evaluation_mLModelId :: Lens' Evaluation (Maybe Text)

-- | The ID that is assigned to the <tt>Evaluation</tt> at creation.
evaluation_evaluationId :: Lens' Evaluation (Maybe Text)

-- | The location and name of the data in Amazon Simple Storage Server
--   (Amazon S3) that is used in the evaluation.
evaluation_inputDataLocationS3 :: Lens' Evaluation (Maybe Text)

-- | Undocumented member.
evaluation_computeTime :: Lens' Evaluation (Maybe Integer)

-- | The time of the most recent edit to the <tt>Evaluation</tt>. The time
--   is expressed in epoch time.
evaluation_lastUpdatedAt :: Lens' Evaluation (Maybe UTCTime)

-- | Represents the output of a <tt>GetMLModel</tt> operation.
--   
--   The content consists of the detailed metadata and the current status
--   of the <tt>MLModel</tt>.
--   
--   <i>See:</i> <a>newMLModel</a> smart constructor.
data MLModel
MLModel' :: Maybe Algorithm -> Maybe EntityStatus -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe RealtimeEndpointInfo -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Double -> Maybe MLModelType -> Maybe Integer -> Maybe Text -> Maybe Text -> Maybe Integer -> Maybe Text -> Maybe POSIX -> MLModel

-- | The algorithm used to train the <tt>MLModel</tt>. The following
--   algorithm is supported:
--   
--   <ul>
--   <li><tt>SGD</tt> -- Stochastic gradient descent. The goal of
--   <tt>SGD</tt> is to minimize the gradient of the loss function.</li>
--   </ul>
[$sel:algorithm:MLModel'] :: MLModel -> Maybe Algorithm

-- | The current status of an <tt>MLModel</tt>. This element can have one
--   of the following values:
--   
--   <ul>
--   <li><tt>PENDING</tt> - Amazon Machine Learning (Amazon ML) submitted a
--   request to create an <tt>MLModel</tt>.</li>
--   <li><tt>INPROGRESS</tt> - The creation process is underway.</li>
--   <li><tt>FAILED</tt> - The request to create an <tt>MLModel</tt> didn't
--   run to completion. The model isn't usable.</li>
--   <li><tt>COMPLETED</tt> - The creation process completed
--   successfully.</li>
--   <li><tt>DELETED</tt> - The <tt>MLModel</tt> is marked as deleted. It
--   isn't usable.</li>
--   </ul>
[$sel:status:MLModel'] :: MLModel -> Maybe EntityStatus
[$sel:startedAt:MLModel'] :: MLModel -> Maybe POSIX

-- | A description of the most recent details about accessing the
--   <tt>MLModel</tt>.
[$sel:message:MLModel'] :: MLModel -> Maybe Text

-- | The time that the <tt>MLModel</tt> was created. The time is expressed
--   in epoch time.
[$sel:createdAt:MLModel'] :: MLModel -> Maybe POSIX

-- | The time of the most recent edit to the <tt>ScoreThreshold</tt>. The
--   time is expressed in epoch time.
[$sel:scoreThresholdLastUpdatedAt:MLModel'] :: MLModel -> Maybe POSIX

-- | The current endpoint of the <tt>MLModel</tt>.
[$sel:endpointInfo:MLModel'] :: MLModel -> Maybe RealtimeEndpointInfo

-- | A list of the training parameters in the <tt>MLModel</tt>. The list is
--   implemented as a map of key-value pairs.
--   
--   The following is the current set of training parameters:
--   
--   <ul>
--   <li><tt>sgd.maxMLModelSizeInBytes</tt> - The maximum allowed size of
--   the model. Depending on the input data, the size of the model might
--   affect its performance.The value is an integer that ranges from
--   <tt>100000</tt> to <tt>2147483648</tt>. The default value is
--   <tt>33554432</tt>.</li>
--   <li><tt>sgd.maxPasses</tt> - The number of times that the training
--   process traverses the observations to build the <tt>MLModel</tt>. The
--   value is an integer that ranges from <tt>1</tt> to <tt>10000</tt>. The
--   default value is <tt>10</tt>.</li>
--   <li><tt>sgd.shuffleType</tt> - Whether Amazon ML shuffles the training
--   data. Shuffling the data improves a model's ability to find the
--   optimal solution for a variety of data types. The valid values are
--   <tt>auto</tt> and <tt>none</tt>. The default value is
--   <tt>none</tt>.</li>
--   <li><tt>sgd.l1RegularizationAmount</tt> - The coefficient
--   regularization L1 norm, which controls overfitting the data by
--   penalizing large coefficients. This parameter tends to drive
--   coefficients to zero, resulting in sparse feature set. If you use this
--   parameter, start by specifying a small value, such as
--   <tt>1.0E-08</tt>.The value is a double that ranges from <tt>0</tt> to
--   <tt>MAX_DOUBLE</tt>. The default is to not use L1 normalization. This
--   parameter can't be used when <tt>L2</tt> is specified. Use this
--   parameter sparingly.</li>
--   <li><tt>sgd.l2RegularizationAmount</tt> - The coefficient
--   regularization L2 norm, which controls overfitting the data by
--   penalizing large coefficients. This tends to drive coefficients to
--   small, nonzero values. If you use this parameter, start by specifying
--   a small value, such as <tt>1.0E-08</tt>.The value is a double that
--   ranges from <tt>0</tt> to <tt>MAX_DOUBLE</tt>. The default is to not
--   use L2 normalization. This parameter can't be used when <tt>L1</tt> is
--   specified. Use this parameter sparingly.</li>
--   </ul>
[$sel:trainingParameters:MLModel'] :: MLModel -> Maybe (HashMap Text Text)

-- | A user-supplied name or description of the <tt>MLModel</tt>.
[$sel:name:MLModel'] :: MLModel -> Maybe Text

-- | The AWS user account from which the <tt>MLModel</tt> was created. The
--   account type can be either an AWS root account or an AWS Identity and
--   Access Management (IAM) user account.
[$sel:createdByIamUser:MLModel'] :: MLModel -> Maybe Text
[$sel:finishedAt:MLModel'] :: MLModel -> Maybe POSIX
[$sel:scoreThreshold:MLModel'] :: MLModel -> Maybe Double

-- | Identifies the <tt>MLModel</tt> category. The following are the
--   available types:
--   
--   <ul>
--   <li><tt>REGRESSION</tt> - Produces a numeric result. For example,
--   "What price should a house be listed at?"</li>
--   <li><tt>BINARY</tt> - Produces one of two possible results. For
--   example, "Is this a child-friendly web site?".</li>
--   <li><tt>MULTICLASS</tt> - Produces one of several possible results.
--   For example, "Is this a HIGH-, LOW-, or MEDIUM-risk trade?".</li>
--   </ul>
[$sel:mLModelType:MLModel'] :: MLModel -> Maybe MLModelType
[$sel:sizeInBytes:MLModel'] :: MLModel -> Maybe Integer

-- | The ID assigned to the <tt>MLModel</tt> at creation.
[$sel:mLModelId:MLModel'] :: MLModel -> Maybe Text

-- | The location of the data file or directory in Amazon Simple Storage
--   Service (Amazon S3).
[$sel:inputDataLocationS3:MLModel'] :: MLModel -> Maybe Text
[$sel:computeTime:MLModel'] :: MLModel -> Maybe Integer

-- | The ID of the training <tt>DataSource</tt>. The <tt>CreateMLModel</tt>
--   operation uses the <tt>TrainingDataSourceId</tt>.
[$sel:trainingDataSourceId:MLModel'] :: MLModel -> Maybe Text

-- | The time of the most recent edit to the <tt>MLModel</tt>. The time is
--   expressed in epoch time.
[$sel:lastUpdatedAt:MLModel'] :: MLModel -> Maybe POSIX

-- | Create a value of <a>MLModel</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:algorithm:MLModel'</a>, <a>mLModel_algorithm</a> - The
--   algorithm used to train the <tt>MLModel</tt>. The following algorithm
--   is supported:
--   
--   <ul>
--   <li><tt>SGD</tt> -- Stochastic gradient descent. The goal of
--   <tt>SGD</tt> is to minimize the gradient of the loss function.</li>
--   </ul>
--   
--   <a>$sel:status:MLModel'</a>, <a>mLModel_status</a> - The current
--   status of an <tt>MLModel</tt>. This element can have one of the
--   following values:
--   
--   <ul>
--   <li><tt>PENDING</tt> - Amazon Machine Learning (Amazon ML) submitted a
--   request to create an <tt>MLModel</tt>.</li>
--   <li><tt>INPROGRESS</tt> - The creation process is underway.</li>
--   <li><tt>FAILED</tt> - The request to create an <tt>MLModel</tt> didn't
--   run to completion. The model isn't usable.</li>
--   <li><tt>COMPLETED</tt> - The creation process completed
--   successfully.</li>
--   <li><tt>DELETED</tt> - The <tt>MLModel</tt> is marked as deleted. It
--   isn't usable.</li>
--   </ul>
--   
--   <a>$sel:startedAt:MLModel'</a>, <a>mLModel_startedAt</a> -
--   Undocumented member.
--   
--   <a>$sel:message:MLModel'</a>, <a>mLModel_message</a> - A description
--   of the most recent details about accessing the <tt>MLModel</tt>.
--   
--   <a>$sel:createdAt:MLModel'</a>, <a>mLModel_createdAt</a> - The time
--   that the <tt>MLModel</tt> was created. The time is expressed in epoch
--   time.
--   
--   <a>$sel:scoreThresholdLastUpdatedAt:MLModel'</a>,
--   <a>mLModel_scoreThresholdLastUpdatedAt</a> - The time of the most
--   recent edit to the <tt>ScoreThreshold</tt>. The time is expressed in
--   epoch time.
--   
--   <a>$sel:endpointInfo:MLModel'</a>, <a>mLModel_endpointInfo</a> - The
--   current endpoint of the <tt>MLModel</tt>.
--   
--   <a>$sel:trainingParameters:MLModel'</a>,
--   <a>mLModel_trainingParameters</a> - A list of the training parameters
--   in the <tt>MLModel</tt>. The list is implemented as a map of key-value
--   pairs.
--   
--   The following is the current set of training parameters:
--   
--   <ul>
--   <li><tt>sgd.maxMLModelSizeInBytes</tt> - The maximum allowed size of
--   the model. Depending on the input data, the size of the model might
--   affect its performance.The value is an integer that ranges from
--   <tt>100000</tt> to <tt>2147483648</tt>. The default value is
--   <tt>33554432</tt>.</li>
--   <li><tt>sgd.maxPasses</tt> - The number of times that the training
--   process traverses the observations to build the <tt>MLModel</tt>. The
--   value is an integer that ranges from <tt>1</tt> to <tt>10000</tt>. The
--   default value is <tt>10</tt>.</li>
--   <li><tt>sgd.shuffleType</tt> - Whether Amazon ML shuffles the training
--   data. Shuffling the data improves a model's ability to find the
--   optimal solution for a variety of data types. The valid values are
--   <tt>auto</tt> and <tt>none</tt>. The default value is
--   <tt>none</tt>.</li>
--   <li><tt>sgd.l1RegularizationAmount</tt> - The coefficient
--   regularization L1 norm, which controls overfitting the data by
--   penalizing large coefficients. This parameter tends to drive
--   coefficients to zero, resulting in sparse feature set. If you use this
--   parameter, start by specifying a small value, such as
--   <tt>1.0E-08</tt>.The value is a double that ranges from <tt>0</tt> to
--   <tt>MAX_DOUBLE</tt>. The default is to not use L1 normalization. This
--   parameter can't be used when <tt>L2</tt> is specified. Use this
--   parameter sparingly.</li>
--   <li><tt>sgd.l2RegularizationAmount</tt> - The coefficient
--   regularization L2 norm, which controls overfitting the data by
--   penalizing large coefficients. This tends to drive coefficients to
--   small, nonzero values. If you use this parameter, start by specifying
--   a small value, such as <tt>1.0E-08</tt>.The value is a double that
--   ranges from <tt>0</tt> to <tt>MAX_DOUBLE</tt>. The default is to not
--   use L2 normalization. This parameter can't be used when <tt>L1</tt> is
--   specified. Use this parameter sparingly.</li>
--   </ul>
--   
--   <a>$sel:name:MLModel'</a>, <a>mLModel_name</a> - A user-supplied name
--   or description of the <tt>MLModel</tt>.
--   
--   <a>$sel:createdByIamUser:MLModel'</a>, <a>mLModel_createdByIamUser</a>
--   - The AWS user account from which the <tt>MLModel</tt> was created.
--   The account type can be either an AWS root account or an AWS Identity
--   and Access Management (IAM) user account.
--   
--   <a>$sel:finishedAt:MLModel'</a>, <a>mLModel_finishedAt</a> -
--   Undocumented member.
--   
--   <a>$sel:scoreThreshold:MLModel'</a>, <a>mLModel_scoreThreshold</a> -
--   Undocumented member.
--   
--   <a>$sel:mLModelType:MLModel'</a>, <a>mLModel_mLModelType</a> -
--   Identifies the <tt>MLModel</tt> category. The following are the
--   available types:
--   
--   <ul>
--   <li><tt>REGRESSION</tt> - Produces a numeric result. For example,
--   "What price should a house be listed at?"</li>
--   <li><tt>BINARY</tt> - Produces one of two possible results. For
--   example, "Is this a child-friendly web site?".</li>
--   <li><tt>MULTICLASS</tt> - Produces one of several possible results.
--   For example, "Is this a HIGH-, LOW-, or MEDIUM-risk trade?".</li>
--   </ul>
--   
--   <a>$sel:sizeInBytes:MLModel'</a>, <a>mLModel_sizeInBytes</a> -
--   Undocumented member.
--   
--   <a>$sel:mLModelId:MLModel'</a>, <a>mLModel_mLModelId</a> - The ID
--   assigned to the <tt>MLModel</tt> at creation.
--   
--   <a>$sel:inputDataLocationS3:MLModel'</a>,
--   <a>mLModel_inputDataLocationS3</a> - The location of the data file or
--   directory in Amazon Simple Storage Service (Amazon S3).
--   
--   <a>$sel:computeTime:MLModel'</a>, <a>mLModel_computeTime</a> -
--   Undocumented member.
--   
--   <a>$sel:trainingDataSourceId:MLModel'</a>,
--   <a>mLModel_trainingDataSourceId</a> - The ID of the training
--   <tt>DataSource</tt>. The <tt>CreateMLModel</tt> operation uses the
--   <tt>TrainingDataSourceId</tt>.
--   
--   <a>$sel:lastUpdatedAt:MLModel'</a>, <a>mLModel_lastUpdatedAt</a> - The
--   time of the most recent edit to the <tt>MLModel</tt>. The time is
--   expressed in epoch time.
newMLModel :: MLModel

-- | The algorithm used to train the <tt>MLModel</tt>. The following
--   algorithm is supported:
--   
--   <ul>
--   <li><tt>SGD</tt> -- Stochastic gradient descent. The goal of
--   <tt>SGD</tt> is to minimize the gradient of the loss function.</li>
--   </ul>
mLModel_algorithm :: Lens' MLModel (Maybe Algorithm)

-- | The current status of an <tt>MLModel</tt>. This element can have one
--   of the following values:
--   
--   <ul>
--   <li><tt>PENDING</tt> - Amazon Machine Learning (Amazon ML) submitted a
--   request to create an <tt>MLModel</tt>.</li>
--   <li><tt>INPROGRESS</tt> - The creation process is underway.</li>
--   <li><tt>FAILED</tt> - The request to create an <tt>MLModel</tt> didn't
--   run to completion. The model isn't usable.</li>
--   <li><tt>COMPLETED</tt> - The creation process completed
--   successfully.</li>
--   <li><tt>DELETED</tt> - The <tt>MLModel</tt> is marked as deleted. It
--   isn't usable.</li>
--   </ul>
mLModel_status :: Lens' MLModel (Maybe EntityStatus)

-- | Undocumented member.
mLModel_startedAt :: Lens' MLModel (Maybe UTCTime)

-- | A description of the most recent details about accessing the
--   <tt>MLModel</tt>.
mLModel_message :: Lens' MLModel (Maybe Text)

-- | The time that the <tt>MLModel</tt> was created. The time is expressed
--   in epoch time.
mLModel_createdAt :: Lens' MLModel (Maybe UTCTime)

-- | The time of the most recent edit to the <tt>ScoreThreshold</tt>. The
--   time is expressed in epoch time.
mLModel_scoreThresholdLastUpdatedAt :: Lens' MLModel (Maybe UTCTime)

-- | The current endpoint of the <tt>MLModel</tt>.
mLModel_endpointInfo :: Lens' MLModel (Maybe RealtimeEndpointInfo)

-- | A list of the training parameters in the <tt>MLModel</tt>. The list is
--   implemented as a map of key-value pairs.
--   
--   The following is the current set of training parameters:
--   
--   <ul>
--   <li><tt>sgd.maxMLModelSizeInBytes</tt> - The maximum allowed size of
--   the model. Depending on the input data, the size of the model might
--   affect its performance.The value is an integer that ranges from
--   <tt>100000</tt> to <tt>2147483648</tt>. The default value is
--   <tt>33554432</tt>.</li>
--   <li><tt>sgd.maxPasses</tt> - The number of times that the training
--   process traverses the observations to build the <tt>MLModel</tt>. The
--   value is an integer that ranges from <tt>1</tt> to <tt>10000</tt>. The
--   default value is <tt>10</tt>.</li>
--   <li><tt>sgd.shuffleType</tt> - Whether Amazon ML shuffles the training
--   data. Shuffling the data improves a model's ability to find the
--   optimal solution for a variety of data types. The valid values are
--   <tt>auto</tt> and <tt>none</tt>. The default value is
--   <tt>none</tt>.</li>
--   <li><tt>sgd.l1RegularizationAmount</tt> - The coefficient
--   regularization L1 norm, which controls overfitting the data by
--   penalizing large coefficients. This parameter tends to drive
--   coefficients to zero, resulting in sparse feature set. If you use this
--   parameter, start by specifying a small value, such as
--   <tt>1.0E-08</tt>.The value is a double that ranges from <tt>0</tt> to
--   <tt>MAX_DOUBLE</tt>. The default is to not use L1 normalization. This
--   parameter can't be used when <tt>L2</tt> is specified. Use this
--   parameter sparingly.</li>
--   <li><tt>sgd.l2RegularizationAmount</tt> - The coefficient
--   regularization L2 norm, which controls overfitting the data by
--   penalizing large coefficients. This tends to drive coefficients to
--   small, nonzero values. If you use this parameter, start by specifying
--   a small value, such as <tt>1.0E-08</tt>.The value is a double that
--   ranges from <tt>0</tt> to <tt>MAX_DOUBLE</tt>. The default is to not
--   use L2 normalization. This parameter can't be used when <tt>L1</tt> is
--   specified. Use this parameter sparingly.</li>
--   </ul>
mLModel_trainingParameters :: Lens' MLModel (Maybe (HashMap Text Text))

-- | A user-supplied name or description of the <tt>MLModel</tt>.
mLModel_name :: Lens' MLModel (Maybe Text)

-- | The AWS user account from which the <tt>MLModel</tt> was created. The
--   account type can be either an AWS root account or an AWS Identity and
--   Access Management (IAM) user account.
mLModel_createdByIamUser :: Lens' MLModel (Maybe Text)

-- | Undocumented member.
mLModel_finishedAt :: Lens' MLModel (Maybe UTCTime)

-- | Undocumented member.
mLModel_scoreThreshold :: Lens' MLModel (Maybe Double)

-- | Identifies the <tt>MLModel</tt> category. The following are the
--   available types:
--   
--   <ul>
--   <li><tt>REGRESSION</tt> - Produces a numeric result. For example,
--   "What price should a house be listed at?"</li>
--   <li><tt>BINARY</tt> - Produces one of two possible results. For
--   example, "Is this a child-friendly web site?".</li>
--   <li><tt>MULTICLASS</tt> - Produces one of several possible results.
--   For example, "Is this a HIGH-, LOW-, or MEDIUM-risk trade?".</li>
--   </ul>
mLModel_mLModelType :: Lens' MLModel (Maybe MLModelType)

-- | Undocumented member.
mLModel_sizeInBytes :: Lens' MLModel (Maybe Integer)

-- | The ID assigned to the <tt>MLModel</tt> at creation.
mLModel_mLModelId :: Lens' MLModel (Maybe Text)

-- | The location of the data file or directory in Amazon Simple Storage
--   Service (Amazon S3).
mLModel_inputDataLocationS3 :: Lens' MLModel (Maybe Text)

-- | Undocumented member.
mLModel_computeTime :: Lens' MLModel (Maybe Integer)

-- | The ID of the training <tt>DataSource</tt>. The <tt>CreateMLModel</tt>
--   operation uses the <tt>TrainingDataSourceId</tt>.
mLModel_trainingDataSourceId :: Lens' MLModel (Maybe Text)

-- | The time of the most recent edit to the <tt>MLModel</tt>. The time is
--   expressed in epoch time.
mLModel_lastUpdatedAt :: Lens' MLModel (Maybe UTCTime)

-- | Measurements of how well the <tt>MLModel</tt> performed on known
--   observations. One of the following metrics is returned, based on the
--   type of the <tt>MLModel</tt>:
--   
--   <ul>
--   <li>BinaryAUC: The binary <tt>MLModel</tt> uses the Area Under the
--   Curve (AUC) technique to measure performance.</li>
--   <li>RegressionRMSE: The regression <tt>MLModel</tt> uses the Root Mean
--   Square Error (RMSE) technique to measure performance. RMSE measures
--   the difference between predicted and actual values for a single
--   variable.</li>
--   <li>MulticlassAvgFScore: The multiclass <tt>MLModel</tt> uses the F1
--   score technique to measure performance.</li>
--   </ul>
--   
--   For more information about performance metrics, please see the
--   <a>Amazon Machine Learning Developer Guide</a>.
--   
--   <i>See:</i> <a>newPerformanceMetrics</a> smart constructor.
data PerformanceMetrics
PerformanceMetrics' :: Maybe (HashMap Text Text) -> PerformanceMetrics
[$sel:properties:PerformanceMetrics'] :: PerformanceMetrics -> Maybe (HashMap Text Text)

-- | Create a value of <a>PerformanceMetrics</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:properties:PerformanceMetrics'</a>,
--   <a>performanceMetrics_properties</a> - Undocumented member.
newPerformanceMetrics :: PerformanceMetrics

-- | Undocumented member.
performanceMetrics_properties :: Lens' PerformanceMetrics (Maybe (HashMap Text Text))

-- | The output from a <tt>Predict</tt> operation:
--   
--   <ul>
--   <li><tt>Details</tt> - Contains the following attributes:
--   <tt>DetailsAttributes.PREDICTIVE_MODEL_TYPE - REGRESSION | BINARY |
--   MULTICLASS</tt> <tt>DetailsAttributes.ALGORITHM - SGD</tt></li>
--   <li><tt>PredictedLabel</tt> - Present for either a <tt>BINARY</tt> or
--   <tt>MULTICLASS</tt> <tt>MLModel</tt> request.</li>
--   <li><tt>PredictedScores</tt> - Contains the raw classification score
--   corresponding to each label.</li>
--   <li><tt>PredictedValue</tt> - Present for a <tt>REGRESSION</tt>
--   <tt>MLModel</tt> request.</li>
--   </ul>
--   
--   <i>See:</i> <a>newPrediction</a> smart constructor.
data Prediction
Prediction' :: Maybe Double -> Maybe (HashMap Text Double) -> Maybe Text -> Maybe (HashMap DetailsAttributes Text) -> Prediction

-- | The prediction value for <tt>REGRESSION</tt> <tt>MLModel</tt>.
[$sel:predictedValue:Prediction'] :: Prediction -> Maybe Double
[$sel:predictedScores:Prediction'] :: Prediction -> Maybe (HashMap Text Double)

-- | The prediction label for either a <tt>BINARY</tt> or
--   <tt>MULTICLASS</tt> <tt>MLModel</tt>.
[$sel:predictedLabel:Prediction'] :: Prediction -> Maybe Text
[$sel:details:Prediction'] :: Prediction -> Maybe (HashMap DetailsAttributes Text)

-- | Create a value of <a>Prediction</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:predictedValue:Prediction'</a>,
--   <a>prediction_predictedValue</a> - The prediction value for
--   <tt>REGRESSION</tt> <tt>MLModel</tt>.
--   
--   <a>$sel:predictedScores:Prediction'</a>,
--   <a>prediction_predictedScores</a> - Undocumented member.
--   
--   <a>$sel:predictedLabel:Prediction'</a>,
--   <a>prediction_predictedLabel</a> - The prediction label for either a
--   <tt>BINARY</tt> or <tt>MULTICLASS</tt> <tt>MLModel</tt>.
--   
--   <a>$sel:details:Prediction'</a>, <a>prediction_details</a> -
--   Undocumented member.
newPrediction :: Prediction

-- | The prediction value for <tt>REGRESSION</tt> <tt>MLModel</tt>.
prediction_predictedValue :: Lens' Prediction (Maybe Double)

-- | Undocumented member.
prediction_predictedScores :: Lens' Prediction (Maybe (HashMap Text Double))

-- | The prediction label for either a <tt>BINARY</tt> or
--   <tt>MULTICLASS</tt> <tt>MLModel</tt>.
prediction_predictedLabel :: Lens' Prediction (Maybe Text)

-- | Undocumented member.
prediction_details :: Lens' Prediction (Maybe (HashMap DetailsAttributes Text))

-- | The data specification of an Amazon Relational Database Service
--   (Amazon RDS) <tt>DataSource</tt>.
--   
--   <i>See:</i> <a>newRDSDataSpec</a> smart constructor.
data RDSDataSpec
RDSDataSpec' :: Maybe Text -> Maybe Text -> Maybe Text -> RDSDatabase -> Text -> RDSDatabaseCredentials -> Text -> Text -> Text -> Text -> [Text] -> RDSDataSpec

-- | A JSON string that represents the schema for an Amazon RDS
--   <tt>DataSource</tt>. The <tt>DataSchema</tt> defines the structure of
--   the observation data in the data file(s) referenced in the
--   <tt>DataSource</tt>.
--   
--   A <tt>DataSchema</tt> is not required if you specify a
--   <tt>DataSchemaUri</tt>
--   
--   Define your <tt>DataSchema</tt> as a series of key-value pairs.
--   <tt>attributes</tt> and <tt>excludedVariableNames</tt> have an array
--   of key-value pairs for their value. Use the following format to define
--   your <tt>DataSchema</tt>.
--   
--   { "version": "1.0",
--   
--   "recordAnnotationFieldName": "F1",
--   
--   "recordWeightFieldName": "F2",
--   
--   "targetFieldName": "F3",
--   
--   "dataFormat": "CSV",
--   
--   "dataFileContainsHeader": true,
--   
--   "attributes": [
--   
--   { "fieldName": "F1", "fieldType": "TEXT" }, { "fieldName": "F2",
--   "fieldType": "NUMERIC" }, { "fieldName": "F3", "fieldType":
--   "CATEGORICAL" }, { "fieldName": "F4", "fieldType": "NUMERIC" }, {
--   "fieldName": "F5", "fieldType": "CATEGORICAL" }, { "fieldName": "F6",
--   "fieldType": "TEXT" }, { "fieldName": "F7", "fieldType":
--   "WEIGHTED_INT_SEQUENCE" }, { "fieldName": "F8", "fieldType":
--   "WEIGHTED_STRING_SEQUENCE" } ],
--   
--   "excludedVariableNames": [ "F6" ] }
[$sel:dataSchema:RDSDataSpec'] :: RDSDataSpec -> Maybe Text

-- | A JSON string that represents the splitting and rearrangement
--   processing to be applied to a <tt>DataSource</tt>. If the
--   <tt>DataRearrangement</tt> parameter is not provided, all of the input
--   data is used to create the <tt>Datasource</tt>.
--   
--   There are multiple parameters that control what data is used to create
--   a datasource:
--   
--   <ul>
--   <li><b><tt>percentBegin</tt></b>Use <tt>percentBegin</tt> to indicate
--   the beginning of the range of the data used to create the Datasource.
--   If you do not include <tt>percentBegin</tt> and <tt>percentEnd</tt>,
--   Amazon ML includes all of the data when creating the datasource.</li>
--   <li><b><tt>percentEnd</tt></b>Use <tt>percentEnd</tt> to indicate the
--   end of the range of the data used to create the Datasource. If you do
--   not include <tt>percentBegin</tt> and <tt>percentEnd</tt>, Amazon ML
--   includes all of the data when creating the datasource.</li>
--   <li><b><tt>complement</tt></b>The <tt>complement</tt> parameter
--   instructs Amazon ML to use the data that is not included in the range
--   of <tt>percentBegin</tt> to <tt>percentEnd</tt> to create a
--   datasource. The <tt>complement</tt> parameter is useful if you need to
--   create complementary datasources for training and evaluation. To
--   create a complementary datasource, use the same values for
--   <tt>percentBegin</tt> and <tt>percentEnd</tt>, along with the
--   <tt>complement</tt> parameter.For example, the following two
--   datasources do not share any data, and can be used to train and
--   evaluate a model. The first datasource has 25 percent of the data, and
--   the second one has 75 percent of the data.Datasource for evaluation:
--   <tt>{"splitting":{"percentBegin":0, "percentEnd":25}}</tt>Datasource
--   for training: <tt>{"splitting":{"percentBegin":0, "percentEnd":25,
--   "complement":"true"}}</tt></li>
--   <li><b><tt>strategy</tt></b>To change how Amazon ML splits the data
--   for a datasource, use the <tt>strategy</tt> parameter.The default
--   value for the <tt>strategy</tt> parameter is <tt>sequential</tt>,
--   meaning that Amazon ML takes all of the data records between the
--   <tt>percentBegin</tt> and <tt>percentEnd</tt> parameters for the
--   datasource, in the order that the records appear in the input data.The
--   following two <tt>DataRearrangement</tt> lines are examples of
--   sequentially ordered training and evaluation datasources:Datasource
--   for evaluation: <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"sequential"}}</tt>Datasource for training:
--   <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"sequential", "complement":"true"}}</tt>To randomly split
--   the input data into the proportions indicated by the percentBegin and
--   percentEnd parameters, set the <tt>strategy</tt> parameter to
--   <tt>random</tt> and provide a string that is used as the seed value
--   for the random data splitting (for example, you can use the S3 path to
--   your data as the random seed string). If you choose the random split
--   strategy, Amazon ML assigns each row of data a pseudo-random number
--   between 0 and 100, and then selects the rows that have an assigned
--   number between <tt>percentBegin</tt> and <tt>percentEnd</tt>.
--   Pseudo-random numbers are assigned using both the input seed string
--   value and the byte offset as a seed, so changing the data results in a
--   different split. Any existing ordering is preserved. The random
--   splitting strategy ensures that variables in the training and
--   evaluation data are distributed similarly. It is useful in the cases
--   where the input data may have an implicit sort order, which would
--   otherwise result in training and evaluation datasources containing
--   non-similar data records.The following two <tt>DataRearrangement</tt>
--   lines are examples of non-sequentially ordered training and evaluation
--   datasources:Datasource for evaluation:
--   <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"random",
--   "randomSeed"="s3://my_s3_path/bucket/file.csv"}}</tt>Datasource for
--   training: <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"random", "randomSeed"="s3://my_s3_path/bucket/file.csv",
--   "complement":"true"}}</tt></li>
--   </ul>
[$sel:dataRearrangement:RDSDataSpec'] :: RDSDataSpec -> Maybe Text

-- | The Amazon S3 location of the <tt>DataSchema</tt>.
[$sel:dataSchemaUri:RDSDataSpec'] :: RDSDataSpec -> Maybe Text

-- | Describes the <tt>DatabaseName</tt> and <tt>InstanceIdentifier</tt> of
--   an Amazon RDS database.
[$sel:databaseInformation:RDSDataSpec'] :: RDSDataSpec -> RDSDatabase

-- | The query that is used to retrieve the observation data for the
--   <tt>DataSource</tt>.
[$sel:selectSqlQuery:RDSDataSpec'] :: RDSDataSpec -> Text

-- | The AWS Identity and Access Management (IAM) credentials that are used
--   connect to the Amazon RDS database.
[$sel:databaseCredentials:RDSDataSpec'] :: RDSDataSpec -> RDSDatabaseCredentials

-- | The Amazon S3 location for staging Amazon RDS data. The data retrieved
--   from Amazon RDS using <tt>SelectSqlQuery</tt> is stored in this
--   location.
[$sel:s3StagingLocation:RDSDataSpec'] :: RDSDataSpec -> Text

-- | The role (DataPipelineDefaultResourceRole) assumed by an Amazon
--   Elastic Compute Cloud (Amazon EC2) instance to carry out the copy
--   operation from Amazon RDS to an Amazon S3 task. For more information,
--   see <a>Role templates</a> for data pipelines.
[$sel:resourceRole:RDSDataSpec'] :: RDSDataSpec -> Text

-- | The role (DataPipelineDefaultRole) assumed by AWS Data Pipeline
--   service to monitor the progress of the copy task from Amazon RDS to
--   Amazon S3. For more information, see <a>Role templates</a> for data
--   pipelines.
[$sel:serviceRole:RDSDataSpec'] :: RDSDataSpec -> Text

-- | The subnet ID to be used to access a VPC-based RDS DB instance. This
--   attribute is used by Data Pipeline to carry out the copy task from
--   Amazon RDS to Amazon S3.
[$sel:subnetId:RDSDataSpec'] :: RDSDataSpec -> Text

-- | The security group IDs to be used to access a VPC-based RDS DB
--   instance. Ensure that there are appropriate ingress rules set up to
--   allow access to the RDS DB instance. This attribute is used by Data
--   Pipeline to carry out the copy operation from Amazon RDS to an Amazon
--   S3 task.
[$sel:securityGroupIds:RDSDataSpec'] :: RDSDataSpec -> [Text]

-- | Create a value of <a>RDSDataSpec</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataSchema:RDSDataSpec'</a>, <a>rDSDataSpec_dataSchema</a> - A
--   JSON string that represents the schema for an Amazon RDS
--   <tt>DataSource</tt>. The <tt>DataSchema</tt> defines the structure of
--   the observation data in the data file(s) referenced in the
--   <tt>DataSource</tt>.
--   
--   A <tt>DataSchema</tt> is not required if you specify a
--   <tt>DataSchemaUri</tt>
--   
--   Define your <tt>DataSchema</tt> as a series of key-value pairs.
--   <tt>attributes</tt> and <tt>excludedVariableNames</tt> have an array
--   of key-value pairs for their value. Use the following format to define
--   your <tt>DataSchema</tt>.
--   
--   { "version": "1.0",
--   
--   "recordAnnotationFieldName": "F1",
--   
--   "recordWeightFieldName": "F2",
--   
--   "targetFieldName": "F3",
--   
--   "dataFormat": "CSV",
--   
--   "dataFileContainsHeader": true,
--   
--   "attributes": [
--   
--   { "fieldName": "F1", "fieldType": "TEXT" }, { "fieldName": "F2",
--   "fieldType": "NUMERIC" }, { "fieldName": "F3", "fieldType":
--   "CATEGORICAL" }, { "fieldName": "F4", "fieldType": "NUMERIC" }, {
--   "fieldName": "F5", "fieldType": "CATEGORICAL" }, { "fieldName": "F6",
--   "fieldType": "TEXT" }, { "fieldName": "F7", "fieldType":
--   "WEIGHTED_INT_SEQUENCE" }, { "fieldName": "F8", "fieldType":
--   "WEIGHTED_STRING_SEQUENCE" } ],
--   
--   "excludedVariableNames": [ "F6" ] }
--   
--   <a>$sel:dataRearrangement:RDSDataSpec'</a>,
--   <a>rDSDataSpec_dataRearrangement</a> - A JSON string that represents
--   the splitting and rearrangement processing to be applied to a
--   <tt>DataSource</tt>. If the <tt>DataRearrangement</tt> parameter is
--   not provided, all of the input data is used to create the
--   <tt>Datasource</tt>.
--   
--   There are multiple parameters that control what data is used to create
--   a datasource:
--   
--   <ul>
--   <li><b><tt>percentBegin</tt></b>Use <tt>percentBegin</tt> to indicate
--   the beginning of the range of the data used to create the Datasource.
--   If you do not include <tt>percentBegin</tt> and <tt>percentEnd</tt>,
--   Amazon ML includes all of the data when creating the datasource.</li>
--   <li><b><tt>percentEnd</tt></b>Use <tt>percentEnd</tt> to indicate the
--   end of the range of the data used to create the Datasource. If you do
--   not include <tt>percentBegin</tt> and <tt>percentEnd</tt>, Amazon ML
--   includes all of the data when creating the datasource.</li>
--   <li><b><tt>complement</tt></b>The <tt>complement</tt> parameter
--   instructs Amazon ML to use the data that is not included in the range
--   of <tt>percentBegin</tt> to <tt>percentEnd</tt> to create a
--   datasource. The <tt>complement</tt> parameter is useful if you need to
--   create complementary datasources for training and evaluation. To
--   create a complementary datasource, use the same values for
--   <tt>percentBegin</tt> and <tt>percentEnd</tt>, along with the
--   <tt>complement</tt> parameter.For example, the following two
--   datasources do not share any data, and can be used to train and
--   evaluate a model. The first datasource has 25 percent of the data, and
--   the second one has 75 percent of the data.Datasource for evaluation:
--   <tt>{"splitting":{"percentBegin":0, "percentEnd":25}}</tt>Datasource
--   for training: <tt>{"splitting":{"percentBegin":0, "percentEnd":25,
--   "complement":"true"}}</tt></li>
--   <li><b><tt>strategy</tt></b>To change how Amazon ML splits the data
--   for a datasource, use the <tt>strategy</tt> parameter.The default
--   value for the <tt>strategy</tt> parameter is <tt>sequential</tt>,
--   meaning that Amazon ML takes all of the data records between the
--   <tt>percentBegin</tt> and <tt>percentEnd</tt> parameters for the
--   datasource, in the order that the records appear in the input data.The
--   following two <tt>DataRearrangement</tt> lines are examples of
--   sequentially ordered training and evaluation datasources:Datasource
--   for evaluation: <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"sequential"}}</tt>Datasource for training:
--   <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"sequential", "complement":"true"}}</tt>To randomly split
--   the input data into the proportions indicated by the percentBegin and
--   percentEnd parameters, set the <tt>strategy</tt> parameter to
--   <tt>random</tt> and provide a string that is used as the seed value
--   for the random data splitting (for example, you can use the S3 path to
--   your data as the random seed string). If you choose the random split
--   strategy, Amazon ML assigns each row of data a pseudo-random number
--   between 0 and 100, and then selects the rows that have an assigned
--   number between <tt>percentBegin</tt> and <tt>percentEnd</tt>.
--   Pseudo-random numbers are assigned using both the input seed string
--   value and the byte offset as a seed, so changing the data results in a
--   different split. Any existing ordering is preserved. The random
--   splitting strategy ensures that variables in the training and
--   evaluation data are distributed similarly. It is useful in the cases
--   where the input data may have an implicit sort order, which would
--   otherwise result in training and evaluation datasources containing
--   non-similar data records.The following two <tt>DataRearrangement</tt>
--   lines are examples of non-sequentially ordered training and evaluation
--   datasources:Datasource for evaluation:
--   <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"random",
--   "randomSeed"="s3://my_s3_path/bucket/file.csv"}}</tt>Datasource for
--   training: <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"random", "randomSeed"="s3://my_s3_path/bucket/file.csv",
--   "complement":"true"}}</tt></li>
--   </ul>
--   
--   <a>$sel:dataSchemaUri:RDSDataSpec'</a>,
--   <a>rDSDataSpec_dataSchemaUri</a> - The Amazon S3 location of the
--   <tt>DataSchema</tt>.
--   
--   <a>$sel:databaseInformation:RDSDataSpec'</a>,
--   <a>rDSDataSpec_databaseInformation</a> - Describes the
--   <tt>DatabaseName</tt> and <tt>InstanceIdentifier</tt> of an Amazon RDS
--   database.
--   
--   <a>$sel:selectSqlQuery:RDSDataSpec'</a>,
--   <a>rDSDataSpec_selectSqlQuery</a> - The query that is used to retrieve
--   the observation data for the <tt>DataSource</tt>.
--   
--   <a>$sel:databaseCredentials:RDSDataSpec'</a>,
--   <a>rDSDataSpec_databaseCredentials</a> - The AWS Identity and Access
--   Management (IAM) credentials that are used connect to the Amazon RDS
--   database.
--   
--   <a>$sel:s3StagingLocation:RDSDataSpec'</a>,
--   <a>rDSDataSpec_s3StagingLocation</a> - The Amazon S3 location for
--   staging Amazon RDS data. The data retrieved from Amazon RDS using
--   <tt>SelectSqlQuery</tt> is stored in this location.
--   
--   <a>$sel:resourceRole:RDSDataSpec'</a>, <a>rDSDataSpec_resourceRole</a>
--   - The role (DataPipelineDefaultResourceRole) assumed by an Amazon
--   Elastic Compute Cloud (Amazon EC2) instance to carry out the copy
--   operation from Amazon RDS to an Amazon S3 task. For more information,
--   see <a>Role templates</a> for data pipelines.
--   
--   <a>$sel:serviceRole:RDSDataSpec'</a>, <a>rDSDataSpec_serviceRole</a> -
--   The role (DataPipelineDefaultRole) assumed by AWS Data Pipeline
--   service to monitor the progress of the copy task from Amazon RDS to
--   Amazon S3. For more information, see <a>Role templates</a> for data
--   pipelines.
--   
--   <a>$sel:subnetId:RDSDataSpec'</a>, <a>rDSDataSpec_subnetId</a> - The
--   subnet ID to be used to access a VPC-based RDS DB instance. This
--   attribute is used by Data Pipeline to carry out the copy task from
--   Amazon RDS to Amazon S3.
--   
--   <a>$sel:securityGroupIds:RDSDataSpec'</a>,
--   <a>rDSDataSpec_securityGroupIds</a> - The security group IDs to be
--   used to access a VPC-based RDS DB instance. Ensure that there are
--   appropriate ingress rules set up to allow access to the RDS DB
--   instance. This attribute is used by Data Pipeline to carry out the
--   copy operation from Amazon RDS to an Amazon S3 task.
newRDSDataSpec :: RDSDatabase -> Text -> RDSDatabaseCredentials -> Text -> Text -> Text -> Text -> RDSDataSpec

-- | A JSON string that represents the schema for an Amazon RDS
--   <tt>DataSource</tt>. The <tt>DataSchema</tt> defines the structure of
--   the observation data in the data file(s) referenced in the
--   <tt>DataSource</tt>.
--   
--   A <tt>DataSchema</tt> is not required if you specify a
--   <tt>DataSchemaUri</tt>
--   
--   Define your <tt>DataSchema</tt> as a series of key-value pairs.
--   <tt>attributes</tt> and <tt>excludedVariableNames</tt> have an array
--   of key-value pairs for their value. Use the following format to define
--   your <tt>DataSchema</tt>.
--   
--   { "version": "1.0",
--   
--   "recordAnnotationFieldName": "F1",
--   
--   "recordWeightFieldName": "F2",
--   
--   "targetFieldName": "F3",
--   
--   "dataFormat": "CSV",
--   
--   "dataFileContainsHeader": true,
--   
--   "attributes": [
--   
--   { "fieldName": "F1", "fieldType": "TEXT" }, { "fieldName": "F2",
--   "fieldType": "NUMERIC" }, { "fieldName": "F3", "fieldType":
--   "CATEGORICAL" }, { "fieldName": "F4", "fieldType": "NUMERIC" }, {
--   "fieldName": "F5", "fieldType": "CATEGORICAL" }, { "fieldName": "F6",
--   "fieldType": "TEXT" }, { "fieldName": "F7", "fieldType":
--   "WEIGHTED_INT_SEQUENCE" }, { "fieldName": "F8", "fieldType":
--   "WEIGHTED_STRING_SEQUENCE" } ],
--   
--   "excludedVariableNames": [ "F6" ] }
rDSDataSpec_dataSchema :: Lens' RDSDataSpec (Maybe Text)

-- | A JSON string that represents the splitting and rearrangement
--   processing to be applied to a <tt>DataSource</tt>. If the
--   <tt>DataRearrangement</tt> parameter is not provided, all of the input
--   data is used to create the <tt>Datasource</tt>.
--   
--   There are multiple parameters that control what data is used to create
--   a datasource:
--   
--   <ul>
--   <li><b><tt>percentBegin</tt></b>Use <tt>percentBegin</tt> to indicate
--   the beginning of the range of the data used to create the Datasource.
--   If you do not include <tt>percentBegin</tt> and <tt>percentEnd</tt>,
--   Amazon ML includes all of the data when creating the datasource.</li>
--   <li><b><tt>percentEnd</tt></b>Use <tt>percentEnd</tt> to indicate the
--   end of the range of the data used to create the Datasource. If you do
--   not include <tt>percentBegin</tt> and <tt>percentEnd</tt>, Amazon ML
--   includes all of the data when creating the datasource.</li>
--   <li><b><tt>complement</tt></b>The <tt>complement</tt> parameter
--   instructs Amazon ML to use the data that is not included in the range
--   of <tt>percentBegin</tt> to <tt>percentEnd</tt> to create a
--   datasource. The <tt>complement</tt> parameter is useful if you need to
--   create complementary datasources for training and evaluation. To
--   create a complementary datasource, use the same values for
--   <tt>percentBegin</tt> and <tt>percentEnd</tt>, along with the
--   <tt>complement</tt> parameter.For example, the following two
--   datasources do not share any data, and can be used to train and
--   evaluate a model. The first datasource has 25 percent of the data, and
--   the second one has 75 percent of the data.Datasource for evaluation:
--   <tt>{"splitting":{"percentBegin":0, "percentEnd":25}}</tt>Datasource
--   for training: <tt>{"splitting":{"percentBegin":0, "percentEnd":25,
--   "complement":"true"}}</tt></li>
--   <li><b><tt>strategy</tt></b>To change how Amazon ML splits the data
--   for a datasource, use the <tt>strategy</tt> parameter.The default
--   value for the <tt>strategy</tt> parameter is <tt>sequential</tt>,
--   meaning that Amazon ML takes all of the data records between the
--   <tt>percentBegin</tt> and <tt>percentEnd</tt> parameters for the
--   datasource, in the order that the records appear in the input data.The
--   following two <tt>DataRearrangement</tt> lines are examples of
--   sequentially ordered training and evaluation datasources:Datasource
--   for evaluation: <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"sequential"}}</tt>Datasource for training:
--   <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"sequential", "complement":"true"}}</tt>To randomly split
--   the input data into the proportions indicated by the percentBegin and
--   percentEnd parameters, set the <tt>strategy</tt> parameter to
--   <tt>random</tt> and provide a string that is used as the seed value
--   for the random data splitting (for example, you can use the S3 path to
--   your data as the random seed string). If you choose the random split
--   strategy, Amazon ML assigns each row of data a pseudo-random number
--   between 0 and 100, and then selects the rows that have an assigned
--   number between <tt>percentBegin</tt> and <tt>percentEnd</tt>.
--   Pseudo-random numbers are assigned using both the input seed string
--   value and the byte offset as a seed, so changing the data results in a
--   different split. Any existing ordering is preserved. The random
--   splitting strategy ensures that variables in the training and
--   evaluation data are distributed similarly. It is useful in the cases
--   where the input data may have an implicit sort order, which would
--   otherwise result in training and evaluation datasources containing
--   non-similar data records.The following two <tt>DataRearrangement</tt>
--   lines are examples of non-sequentially ordered training and evaluation
--   datasources:Datasource for evaluation:
--   <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"random",
--   "randomSeed"="s3://my_s3_path/bucket/file.csv"}}</tt>Datasource for
--   training: <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"random", "randomSeed"="s3://my_s3_path/bucket/file.csv",
--   "complement":"true"}}</tt></li>
--   </ul>
rDSDataSpec_dataRearrangement :: Lens' RDSDataSpec (Maybe Text)

-- | The Amazon S3 location of the <tt>DataSchema</tt>.
rDSDataSpec_dataSchemaUri :: Lens' RDSDataSpec (Maybe Text)

-- | Describes the <tt>DatabaseName</tt> and <tt>InstanceIdentifier</tt> of
--   an Amazon RDS database.
rDSDataSpec_databaseInformation :: Lens' RDSDataSpec RDSDatabase

-- | The query that is used to retrieve the observation data for the
--   <tt>DataSource</tt>.
rDSDataSpec_selectSqlQuery :: Lens' RDSDataSpec Text

-- | The AWS Identity and Access Management (IAM) credentials that are used
--   connect to the Amazon RDS database.
rDSDataSpec_databaseCredentials :: Lens' RDSDataSpec RDSDatabaseCredentials

-- | The Amazon S3 location for staging Amazon RDS data. The data retrieved
--   from Amazon RDS using <tt>SelectSqlQuery</tt> is stored in this
--   location.
rDSDataSpec_s3StagingLocation :: Lens' RDSDataSpec Text

-- | The role (DataPipelineDefaultResourceRole) assumed by an Amazon
--   Elastic Compute Cloud (Amazon EC2) instance to carry out the copy
--   operation from Amazon RDS to an Amazon S3 task. For more information,
--   see <a>Role templates</a> for data pipelines.
rDSDataSpec_resourceRole :: Lens' RDSDataSpec Text

-- | The role (DataPipelineDefaultRole) assumed by AWS Data Pipeline
--   service to monitor the progress of the copy task from Amazon RDS to
--   Amazon S3. For more information, see <a>Role templates</a> for data
--   pipelines.
rDSDataSpec_serviceRole :: Lens' RDSDataSpec Text

-- | The subnet ID to be used to access a VPC-based RDS DB instance. This
--   attribute is used by Data Pipeline to carry out the copy task from
--   Amazon RDS to Amazon S3.
rDSDataSpec_subnetId :: Lens' RDSDataSpec Text

-- | The security group IDs to be used to access a VPC-based RDS DB
--   instance. Ensure that there are appropriate ingress rules set up to
--   allow access to the RDS DB instance. This attribute is used by Data
--   Pipeline to carry out the copy operation from Amazon RDS to an Amazon
--   S3 task.
rDSDataSpec_securityGroupIds :: Lens' RDSDataSpec [Text]

-- | The database details of an Amazon RDS database.
--   
--   <i>See:</i> <a>newRDSDatabase</a> smart constructor.
data RDSDatabase
RDSDatabase' :: Text -> Text -> RDSDatabase

-- | The ID of an RDS DB instance.
[$sel:instanceIdentifier:RDSDatabase'] :: RDSDatabase -> Text
[$sel:databaseName:RDSDatabase'] :: RDSDatabase -> Text

-- | Create a value of <a>RDSDatabase</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceIdentifier:RDSDatabase'</a>,
--   <a>rDSDatabase_instanceIdentifier</a> - The ID of an RDS DB instance.
--   
--   <a>$sel:databaseName:RDSDatabase'</a>, <a>rDSDatabase_databaseName</a>
--   - Undocumented member.
newRDSDatabase :: Text -> Text -> RDSDatabase

-- | The ID of an RDS DB instance.
rDSDatabase_instanceIdentifier :: Lens' RDSDatabase Text

-- | Undocumented member.
rDSDatabase_databaseName :: Lens' RDSDatabase Text

-- | The database credentials to connect to a database on an RDS DB
--   instance.
--   
--   <i>See:</i> <a>newRDSDatabaseCredentials</a> smart constructor.
data RDSDatabaseCredentials
RDSDatabaseCredentials' :: Text -> Text -> RDSDatabaseCredentials
[$sel:username:RDSDatabaseCredentials'] :: RDSDatabaseCredentials -> Text
[$sel:password:RDSDatabaseCredentials'] :: RDSDatabaseCredentials -> Text

-- | Create a value of <a>RDSDatabaseCredentials</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:username:RDSDatabaseCredentials'</a>,
--   <a>rDSDatabaseCredentials_username</a> - Undocumented member.
--   
--   <a>$sel:password:RDSDatabaseCredentials'</a>,
--   <a>rDSDatabaseCredentials_password</a> - Undocumented member.
newRDSDatabaseCredentials :: Text -> Text -> RDSDatabaseCredentials

-- | Undocumented member.
rDSDatabaseCredentials_username :: Lens' RDSDatabaseCredentials Text

-- | Undocumented member.
rDSDatabaseCredentials_password :: Lens' RDSDatabaseCredentials Text

-- | The datasource details that are specific to Amazon RDS.
--   
--   <i>See:</i> <a>newRDSMetadata</a> smart constructor.
data RDSMetadata
RDSMetadata' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe RDSDatabase -> RDSMetadata

-- | The ID of the Data Pipeline instance that is used to carry to copy
--   data from Amazon RDS to Amazon S3. You can use the ID to find details
--   about the instance in the Data Pipeline console.
[$sel:dataPipelineId:RDSMetadata'] :: RDSMetadata -> Maybe Text

-- | The SQL query that is supplied during CreateDataSourceFromRDS. Returns
--   only if <tt>Verbose</tt> is true in <tt>GetDataSourceInput</tt>.
[$sel:selectSqlQuery:RDSMetadata'] :: RDSMetadata -> Maybe Text

-- | The role (DataPipelineDefaultRole) assumed by the Data Pipeline
--   service to monitor the progress of the copy task from Amazon RDS to
--   Amazon S3. For more information, see <a>Role templates</a> for data
--   pipelines.
[$sel:serviceRole:RDSMetadata'] :: RDSMetadata -> Maybe Text

-- | The role (DataPipelineDefaultResourceRole) assumed by an Amazon EC2
--   instance to carry out the copy task from Amazon RDS to Amazon S3. For
--   more information, see <a>Role templates</a> for data pipelines.
[$sel:resourceRole:RDSMetadata'] :: RDSMetadata -> Maybe Text
[$sel:databaseUserName:RDSMetadata'] :: RDSMetadata -> Maybe Text

-- | The database details required to connect to an Amazon RDS.
[$sel:database:RDSMetadata'] :: RDSMetadata -> Maybe RDSDatabase

-- | Create a value of <a>RDSMetadata</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataPipelineId:RDSMetadata'</a>,
--   <a>rDSMetadata_dataPipelineId</a> - The ID of the Data Pipeline
--   instance that is used to carry to copy data from Amazon RDS to Amazon
--   S3. You can use the ID to find details about the instance in the Data
--   Pipeline console.
--   
--   <a>$sel:selectSqlQuery:RDSMetadata'</a>,
--   <a>rDSMetadata_selectSqlQuery</a> - The SQL query that is supplied
--   during CreateDataSourceFromRDS. Returns only if <tt>Verbose</tt> is
--   true in <tt>GetDataSourceInput</tt>.
--   
--   <a>$sel:serviceRole:RDSMetadata'</a>, <a>rDSMetadata_serviceRole</a> -
--   The role (DataPipelineDefaultRole) assumed by the Data Pipeline
--   service to monitor the progress of the copy task from Amazon RDS to
--   Amazon S3. For more information, see <a>Role templates</a> for data
--   pipelines.
--   
--   <a>$sel:resourceRole:RDSMetadata'</a>, <a>rDSMetadata_resourceRole</a>
--   - The role (DataPipelineDefaultResourceRole) assumed by an Amazon EC2
--   instance to carry out the copy task from Amazon RDS to Amazon S3. For
--   more information, see <a>Role templates</a> for data pipelines.
--   
--   <a>$sel:databaseUserName:RDSMetadata'</a>,
--   <a>rDSMetadata_databaseUserName</a> - Undocumented member.
--   
--   <a>$sel:database:RDSMetadata'</a>, <a>rDSMetadata_database</a> - The
--   database details required to connect to an Amazon RDS.
newRDSMetadata :: RDSMetadata

-- | The ID of the Data Pipeline instance that is used to carry to copy
--   data from Amazon RDS to Amazon S3. You can use the ID to find details
--   about the instance in the Data Pipeline console.
rDSMetadata_dataPipelineId :: Lens' RDSMetadata (Maybe Text)

-- | The SQL query that is supplied during CreateDataSourceFromRDS. Returns
--   only if <tt>Verbose</tt> is true in <tt>GetDataSourceInput</tt>.
rDSMetadata_selectSqlQuery :: Lens' RDSMetadata (Maybe Text)

-- | The role (DataPipelineDefaultRole) assumed by the Data Pipeline
--   service to monitor the progress of the copy task from Amazon RDS to
--   Amazon S3. For more information, see <a>Role templates</a> for data
--   pipelines.
rDSMetadata_serviceRole :: Lens' RDSMetadata (Maybe Text)

-- | The role (DataPipelineDefaultResourceRole) assumed by an Amazon EC2
--   instance to carry out the copy task from Amazon RDS to Amazon S3. For
--   more information, see <a>Role templates</a> for data pipelines.
rDSMetadata_resourceRole :: Lens' RDSMetadata (Maybe Text)

-- | Undocumented member.
rDSMetadata_databaseUserName :: Lens' RDSMetadata (Maybe Text)

-- | The database details required to connect to an Amazon RDS.
rDSMetadata_database :: Lens' RDSMetadata (Maybe RDSDatabase)

-- | Describes the real-time endpoint information for an <tt>MLModel</tt>.
--   
--   <i>See:</i> <a>newRealtimeEndpointInfo</a> smart constructor.
data RealtimeEndpointInfo
RealtimeEndpointInfo' :: Maybe POSIX -> Maybe Int -> Maybe RealtimeEndpointStatus -> Maybe Text -> RealtimeEndpointInfo

-- | The time that the request to create the real-time endpoint for the
--   <tt>MLModel</tt> was received. The time is expressed in epoch time.
[$sel:createdAt:RealtimeEndpointInfo'] :: RealtimeEndpointInfo -> Maybe POSIX

-- | The maximum processing rate for the real-time endpoint for
--   <tt>MLModel</tt>, measured in incoming requests per second.
[$sel:peakRequestsPerSecond:RealtimeEndpointInfo'] :: RealtimeEndpointInfo -> Maybe Int

-- | The current status of the real-time endpoint for the <tt>MLModel</tt>.
--   This element can have one of the following values:
--   
--   <ul>
--   <li><tt>NONE</tt> - Endpoint does not exist or was previously
--   deleted.</li>
--   <li><tt>READY</tt> - Endpoint is ready to be used for real-time
--   predictions.</li>
--   <li><tt>UPDATING</tt> - Updating/creating the endpoint.</li>
--   </ul>
[$sel:endpointStatus:RealtimeEndpointInfo'] :: RealtimeEndpointInfo -> Maybe RealtimeEndpointStatus

-- | The URI that specifies where to send real-time prediction requests for
--   the <tt>MLModel</tt>.
--   
--   <b>Note:</b> The application must wait until the real-time endpoint is
--   ready before using this URI.
[$sel:endpointUrl:RealtimeEndpointInfo'] :: RealtimeEndpointInfo -> Maybe Text

-- | Create a value of <a>RealtimeEndpointInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdAt:RealtimeEndpointInfo'</a>,
--   <a>realtimeEndpointInfo_createdAt</a> - The time that the request to
--   create the real-time endpoint for the <tt>MLModel</tt> was received.
--   The time is expressed in epoch time.
--   
--   <a>$sel:peakRequestsPerSecond:RealtimeEndpointInfo'</a>,
--   <a>realtimeEndpointInfo_peakRequestsPerSecond</a> - The maximum
--   processing rate for the real-time endpoint for <tt>MLModel</tt>,
--   measured in incoming requests per second.
--   
--   <a>$sel:endpointStatus:RealtimeEndpointInfo'</a>,
--   <a>realtimeEndpointInfo_endpointStatus</a> - The current status of the
--   real-time endpoint for the <tt>MLModel</tt>. This element can have one
--   of the following values:
--   
--   <ul>
--   <li><tt>NONE</tt> - Endpoint does not exist or was previously
--   deleted.</li>
--   <li><tt>READY</tt> - Endpoint is ready to be used for real-time
--   predictions.</li>
--   <li><tt>UPDATING</tt> - Updating/creating the endpoint.</li>
--   </ul>
--   
--   <a>$sel:endpointUrl:RealtimeEndpointInfo'</a>,
--   <a>realtimeEndpointInfo_endpointUrl</a> - The URI that specifies where
--   to send real-time prediction requests for the <tt>MLModel</tt>.
--   
--   <b>Note:</b> The application must wait until the real-time endpoint is
--   ready before using this URI.
newRealtimeEndpointInfo :: RealtimeEndpointInfo

-- | The time that the request to create the real-time endpoint for the
--   <tt>MLModel</tt> was received. The time is expressed in epoch time.
realtimeEndpointInfo_createdAt :: Lens' RealtimeEndpointInfo (Maybe UTCTime)

-- | The maximum processing rate for the real-time endpoint for
--   <tt>MLModel</tt>, measured in incoming requests per second.
realtimeEndpointInfo_peakRequestsPerSecond :: Lens' RealtimeEndpointInfo (Maybe Int)

-- | The current status of the real-time endpoint for the <tt>MLModel</tt>.
--   This element can have one of the following values:
--   
--   <ul>
--   <li><tt>NONE</tt> - Endpoint does not exist or was previously
--   deleted.</li>
--   <li><tt>READY</tt> - Endpoint is ready to be used for real-time
--   predictions.</li>
--   <li><tt>UPDATING</tt> - Updating/creating the endpoint.</li>
--   </ul>
realtimeEndpointInfo_endpointStatus :: Lens' RealtimeEndpointInfo (Maybe RealtimeEndpointStatus)

-- | The URI that specifies where to send real-time prediction requests for
--   the <tt>MLModel</tt>.
--   
--   <b>Note:</b> The application must wait until the real-time endpoint is
--   ready before using this URI.
realtimeEndpointInfo_endpointUrl :: Lens' RealtimeEndpointInfo (Maybe Text)

-- | Describes the data specification of an Amazon Redshift
--   <tt>DataSource</tt>.
--   
--   <i>See:</i> <a>newRedshiftDataSpec</a> smart constructor.
data RedshiftDataSpec
RedshiftDataSpec' :: Maybe Text -> Maybe Text -> Maybe Text -> RedshiftDatabase -> Text -> RedshiftDatabaseCredentials -> Text -> RedshiftDataSpec

-- | A JSON string that represents the schema for an Amazon Redshift
--   <tt>DataSource</tt>. The <tt>DataSchema</tt> defines the structure of
--   the observation data in the data file(s) referenced in the
--   <tt>DataSource</tt>.
--   
--   A <tt>DataSchema</tt> is not required if you specify a
--   <tt>DataSchemaUri</tt>.
--   
--   Define your <tt>DataSchema</tt> as a series of key-value pairs.
--   <tt>attributes</tt> and <tt>excludedVariableNames</tt> have an array
--   of key-value pairs for their value. Use the following format to define
--   your <tt>DataSchema</tt>.
--   
--   { "version": "1.0",
--   
--   "recordAnnotationFieldName": "F1",
--   
--   "recordWeightFieldName": "F2",
--   
--   "targetFieldName": "F3",
--   
--   "dataFormat": "CSV",
--   
--   "dataFileContainsHeader": true,
--   
--   "attributes": [
--   
--   { "fieldName": "F1", "fieldType": "TEXT" }, { "fieldName": "F2",
--   "fieldType": "NUMERIC" }, { "fieldName": "F3", "fieldType":
--   "CATEGORICAL" }, { "fieldName": "F4", "fieldType": "NUMERIC" }, {
--   "fieldName": "F5", "fieldType": "CATEGORICAL" }, { "fieldName": "F6",
--   "fieldType": "TEXT" }, { "fieldName": "F7", "fieldType":
--   "WEIGHTED_INT_SEQUENCE" }, { "fieldName": "F8", "fieldType":
--   "WEIGHTED_STRING_SEQUENCE" } ],
--   
--   "excludedVariableNames": [ "F6" ] }
[$sel:dataSchema:RedshiftDataSpec'] :: RedshiftDataSpec -> Maybe Text

-- | A JSON string that represents the splitting and rearrangement
--   processing to be applied to a <tt>DataSource</tt>. If the
--   <tt>DataRearrangement</tt> parameter is not provided, all of the input
--   data is used to create the <tt>Datasource</tt>.
--   
--   There are multiple parameters that control what data is used to create
--   a datasource:
--   
--   <ul>
--   <li><b><tt>percentBegin</tt></b>Use <tt>percentBegin</tt> to indicate
--   the beginning of the range of the data used to create the Datasource.
--   If you do not include <tt>percentBegin</tt> and <tt>percentEnd</tt>,
--   Amazon ML includes all of the data when creating the datasource.</li>
--   <li><b><tt>percentEnd</tt></b>Use <tt>percentEnd</tt> to indicate the
--   end of the range of the data used to create the Datasource. If you do
--   not include <tt>percentBegin</tt> and <tt>percentEnd</tt>, Amazon ML
--   includes all of the data when creating the datasource.</li>
--   <li><b><tt>complement</tt></b>The <tt>complement</tt> parameter
--   instructs Amazon ML to use the data that is not included in the range
--   of <tt>percentBegin</tt> to <tt>percentEnd</tt> to create a
--   datasource. The <tt>complement</tt> parameter is useful if you need to
--   create complementary datasources for training and evaluation. To
--   create a complementary datasource, use the same values for
--   <tt>percentBegin</tt> and <tt>percentEnd</tt>, along with the
--   <tt>complement</tt> parameter.For example, the following two
--   datasources do not share any data, and can be used to train and
--   evaluate a model. The first datasource has 25 percent of the data, and
--   the second one has 75 percent of the data.Datasource for evaluation:
--   <tt>{"splitting":{"percentBegin":0, "percentEnd":25}}</tt>Datasource
--   for training: <tt>{"splitting":{"percentBegin":0, "percentEnd":25,
--   "complement":"true"}}</tt></li>
--   <li><b><tt>strategy</tt></b>To change how Amazon ML splits the data
--   for a datasource, use the <tt>strategy</tt> parameter.The default
--   value for the <tt>strategy</tt> parameter is <tt>sequential</tt>,
--   meaning that Amazon ML takes all of the data records between the
--   <tt>percentBegin</tt> and <tt>percentEnd</tt> parameters for the
--   datasource, in the order that the records appear in the input data.The
--   following two <tt>DataRearrangement</tt> lines are examples of
--   sequentially ordered training and evaluation datasources:Datasource
--   for evaluation: <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"sequential"}}</tt>Datasource for training:
--   <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"sequential", "complement":"true"}}</tt>To randomly split
--   the input data into the proportions indicated by the percentBegin and
--   percentEnd parameters, set the <tt>strategy</tt> parameter to
--   <tt>random</tt> and provide a string that is used as the seed value
--   for the random data splitting (for example, you can use the S3 path to
--   your data as the random seed string). If you choose the random split
--   strategy, Amazon ML assigns each row of data a pseudo-random number
--   between 0 and 100, and then selects the rows that have an assigned
--   number between <tt>percentBegin</tt> and <tt>percentEnd</tt>.
--   Pseudo-random numbers are assigned using both the input seed string
--   value and the byte offset as a seed, so changing the data results in a
--   different split. Any existing ordering is preserved. The random
--   splitting strategy ensures that variables in the training and
--   evaluation data are distributed similarly. It is useful in the cases
--   where the input data may have an implicit sort order, which would
--   otherwise result in training and evaluation datasources containing
--   non-similar data records.The following two <tt>DataRearrangement</tt>
--   lines are examples of non-sequentially ordered training and evaluation
--   datasources:Datasource for evaluation:
--   <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"random",
--   "randomSeed"="s3://my_s3_path/bucket/file.csv"}}</tt>Datasource for
--   training: <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"random", "randomSeed"="s3://my_s3_path/bucket/file.csv",
--   "complement":"true"}}</tt></li>
--   </ul>
[$sel:dataRearrangement:RedshiftDataSpec'] :: RedshiftDataSpec -> Maybe Text

-- | Describes the schema location for an Amazon Redshift
--   <tt>DataSource</tt>.
[$sel:dataSchemaUri:RedshiftDataSpec'] :: RedshiftDataSpec -> Maybe Text

-- | Describes the <tt>DatabaseName</tt> and <tt>ClusterIdentifier</tt> for
--   an Amazon Redshift <tt>DataSource</tt>.
[$sel:databaseInformation:RedshiftDataSpec'] :: RedshiftDataSpec -> RedshiftDatabase

-- | Describes the SQL Query to execute on an Amazon Redshift database for
--   an Amazon Redshift <tt>DataSource</tt>.
[$sel:selectSqlQuery:RedshiftDataSpec'] :: RedshiftDataSpec -> Text

-- | Describes AWS Identity and Access Management (IAM) credentials that
--   are used connect to the Amazon Redshift database.
[$sel:databaseCredentials:RedshiftDataSpec'] :: RedshiftDataSpec -> RedshiftDatabaseCredentials

-- | Describes an Amazon S3 location to store the result set of the
--   <tt>SelectSqlQuery</tt> query.
[$sel:s3StagingLocation:RedshiftDataSpec'] :: RedshiftDataSpec -> Text

-- | Create a value of <a>RedshiftDataSpec</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataSchema:RedshiftDataSpec'</a>,
--   <a>redshiftDataSpec_dataSchema</a> - A JSON string that represents the
--   schema for an Amazon Redshift <tt>DataSource</tt>. The
--   <tt>DataSchema</tt> defines the structure of the observation data in
--   the data file(s) referenced in the <tt>DataSource</tt>.
--   
--   A <tt>DataSchema</tt> is not required if you specify a
--   <tt>DataSchemaUri</tt>.
--   
--   Define your <tt>DataSchema</tt> as a series of key-value pairs.
--   <tt>attributes</tt> and <tt>excludedVariableNames</tt> have an array
--   of key-value pairs for their value. Use the following format to define
--   your <tt>DataSchema</tt>.
--   
--   { "version": "1.0",
--   
--   "recordAnnotationFieldName": "F1",
--   
--   "recordWeightFieldName": "F2",
--   
--   "targetFieldName": "F3",
--   
--   "dataFormat": "CSV",
--   
--   "dataFileContainsHeader": true,
--   
--   "attributes": [
--   
--   { "fieldName": "F1", "fieldType": "TEXT" }, { "fieldName": "F2",
--   "fieldType": "NUMERIC" }, { "fieldName": "F3", "fieldType":
--   "CATEGORICAL" }, { "fieldName": "F4", "fieldType": "NUMERIC" }, {
--   "fieldName": "F5", "fieldType": "CATEGORICAL" }, { "fieldName": "F6",
--   "fieldType": "TEXT" }, { "fieldName": "F7", "fieldType":
--   "WEIGHTED_INT_SEQUENCE" }, { "fieldName": "F8", "fieldType":
--   "WEIGHTED_STRING_SEQUENCE" } ],
--   
--   "excludedVariableNames": [ "F6" ] }
--   
--   <a>$sel:dataRearrangement:RedshiftDataSpec'</a>,
--   <a>redshiftDataSpec_dataRearrangement</a> - A JSON string that
--   represents the splitting and rearrangement processing to be applied to
--   a <tt>DataSource</tt>. If the <tt>DataRearrangement</tt> parameter is
--   not provided, all of the input data is used to create the
--   <tt>Datasource</tt>.
--   
--   There are multiple parameters that control what data is used to create
--   a datasource:
--   
--   <ul>
--   <li><b><tt>percentBegin</tt></b>Use <tt>percentBegin</tt> to indicate
--   the beginning of the range of the data used to create the Datasource.
--   If you do not include <tt>percentBegin</tt> and <tt>percentEnd</tt>,
--   Amazon ML includes all of the data when creating the datasource.</li>
--   <li><b><tt>percentEnd</tt></b>Use <tt>percentEnd</tt> to indicate the
--   end of the range of the data used to create the Datasource. If you do
--   not include <tt>percentBegin</tt> and <tt>percentEnd</tt>, Amazon ML
--   includes all of the data when creating the datasource.</li>
--   <li><b><tt>complement</tt></b>The <tt>complement</tt> parameter
--   instructs Amazon ML to use the data that is not included in the range
--   of <tt>percentBegin</tt> to <tt>percentEnd</tt> to create a
--   datasource. The <tt>complement</tt> parameter is useful if you need to
--   create complementary datasources for training and evaluation. To
--   create a complementary datasource, use the same values for
--   <tt>percentBegin</tt> and <tt>percentEnd</tt>, along with the
--   <tt>complement</tt> parameter.For example, the following two
--   datasources do not share any data, and can be used to train and
--   evaluate a model. The first datasource has 25 percent of the data, and
--   the second one has 75 percent of the data.Datasource for evaluation:
--   <tt>{"splitting":{"percentBegin":0, "percentEnd":25}}</tt>Datasource
--   for training: <tt>{"splitting":{"percentBegin":0, "percentEnd":25,
--   "complement":"true"}}</tt></li>
--   <li><b><tt>strategy</tt></b>To change how Amazon ML splits the data
--   for a datasource, use the <tt>strategy</tt> parameter.The default
--   value for the <tt>strategy</tt> parameter is <tt>sequential</tt>,
--   meaning that Amazon ML takes all of the data records between the
--   <tt>percentBegin</tt> and <tt>percentEnd</tt> parameters for the
--   datasource, in the order that the records appear in the input data.The
--   following two <tt>DataRearrangement</tt> lines are examples of
--   sequentially ordered training and evaluation datasources:Datasource
--   for evaluation: <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"sequential"}}</tt>Datasource for training:
--   <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"sequential", "complement":"true"}}</tt>To randomly split
--   the input data into the proportions indicated by the percentBegin and
--   percentEnd parameters, set the <tt>strategy</tt> parameter to
--   <tt>random</tt> and provide a string that is used as the seed value
--   for the random data splitting (for example, you can use the S3 path to
--   your data as the random seed string). If you choose the random split
--   strategy, Amazon ML assigns each row of data a pseudo-random number
--   between 0 and 100, and then selects the rows that have an assigned
--   number between <tt>percentBegin</tt> and <tt>percentEnd</tt>.
--   Pseudo-random numbers are assigned using both the input seed string
--   value and the byte offset as a seed, so changing the data results in a
--   different split. Any existing ordering is preserved. The random
--   splitting strategy ensures that variables in the training and
--   evaluation data are distributed similarly. It is useful in the cases
--   where the input data may have an implicit sort order, which would
--   otherwise result in training and evaluation datasources containing
--   non-similar data records.The following two <tt>DataRearrangement</tt>
--   lines are examples of non-sequentially ordered training and evaluation
--   datasources:Datasource for evaluation:
--   <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"random",
--   "randomSeed"="s3://my_s3_path/bucket/file.csv"}}</tt>Datasource for
--   training: <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"random", "randomSeed"="s3://my_s3_path/bucket/file.csv",
--   "complement":"true"}}</tt></li>
--   </ul>
--   
--   <a>$sel:dataSchemaUri:RedshiftDataSpec'</a>,
--   <a>redshiftDataSpec_dataSchemaUri</a> - Describes the schema location
--   for an Amazon Redshift <tt>DataSource</tt>.
--   
--   <a>$sel:databaseInformation:RedshiftDataSpec'</a>,
--   <a>redshiftDataSpec_databaseInformation</a> - Describes the
--   <tt>DatabaseName</tt> and <tt>ClusterIdentifier</tt> for an Amazon
--   Redshift <tt>DataSource</tt>.
--   
--   <a>$sel:selectSqlQuery:RedshiftDataSpec'</a>,
--   <a>redshiftDataSpec_selectSqlQuery</a> - Describes the SQL Query to
--   execute on an Amazon Redshift database for an Amazon Redshift
--   <tt>DataSource</tt>.
--   
--   <a>$sel:databaseCredentials:RedshiftDataSpec'</a>,
--   <a>redshiftDataSpec_databaseCredentials</a> - Describes AWS Identity
--   and Access Management (IAM) credentials that are used connect to the
--   Amazon Redshift database.
--   
--   <a>$sel:s3StagingLocation:RedshiftDataSpec'</a>,
--   <a>redshiftDataSpec_s3StagingLocation</a> - Describes an Amazon S3
--   location to store the result set of the <tt>SelectSqlQuery</tt> query.
newRedshiftDataSpec :: RedshiftDatabase -> Text -> RedshiftDatabaseCredentials -> Text -> RedshiftDataSpec

-- | A JSON string that represents the schema for an Amazon Redshift
--   <tt>DataSource</tt>. The <tt>DataSchema</tt> defines the structure of
--   the observation data in the data file(s) referenced in the
--   <tt>DataSource</tt>.
--   
--   A <tt>DataSchema</tt> is not required if you specify a
--   <tt>DataSchemaUri</tt>.
--   
--   Define your <tt>DataSchema</tt> as a series of key-value pairs.
--   <tt>attributes</tt> and <tt>excludedVariableNames</tt> have an array
--   of key-value pairs for their value. Use the following format to define
--   your <tt>DataSchema</tt>.
--   
--   { "version": "1.0",
--   
--   "recordAnnotationFieldName": "F1",
--   
--   "recordWeightFieldName": "F2",
--   
--   "targetFieldName": "F3",
--   
--   "dataFormat": "CSV",
--   
--   "dataFileContainsHeader": true,
--   
--   "attributes": [
--   
--   { "fieldName": "F1", "fieldType": "TEXT" }, { "fieldName": "F2",
--   "fieldType": "NUMERIC" }, { "fieldName": "F3", "fieldType":
--   "CATEGORICAL" }, { "fieldName": "F4", "fieldType": "NUMERIC" }, {
--   "fieldName": "F5", "fieldType": "CATEGORICAL" }, { "fieldName": "F6",
--   "fieldType": "TEXT" }, { "fieldName": "F7", "fieldType":
--   "WEIGHTED_INT_SEQUENCE" }, { "fieldName": "F8", "fieldType":
--   "WEIGHTED_STRING_SEQUENCE" } ],
--   
--   "excludedVariableNames": [ "F6" ] }
redshiftDataSpec_dataSchema :: Lens' RedshiftDataSpec (Maybe Text)

-- | A JSON string that represents the splitting and rearrangement
--   processing to be applied to a <tt>DataSource</tt>. If the
--   <tt>DataRearrangement</tt> parameter is not provided, all of the input
--   data is used to create the <tt>Datasource</tt>.
--   
--   There are multiple parameters that control what data is used to create
--   a datasource:
--   
--   <ul>
--   <li><b><tt>percentBegin</tt></b>Use <tt>percentBegin</tt> to indicate
--   the beginning of the range of the data used to create the Datasource.
--   If you do not include <tt>percentBegin</tt> and <tt>percentEnd</tt>,
--   Amazon ML includes all of the data when creating the datasource.</li>
--   <li><b><tt>percentEnd</tt></b>Use <tt>percentEnd</tt> to indicate the
--   end of the range of the data used to create the Datasource. If you do
--   not include <tt>percentBegin</tt> and <tt>percentEnd</tt>, Amazon ML
--   includes all of the data when creating the datasource.</li>
--   <li><b><tt>complement</tt></b>The <tt>complement</tt> parameter
--   instructs Amazon ML to use the data that is not included in the range
--   of <tt>percentBegin</tt> to <tt>percentEnd</tt> to create a
--   datasource. The <tt>complement</tt> parameter is useful if you need to
--   create complementary datasources for training and evaluation. To
--   create a complementary datasource, use the same values for
--   <tt>percentBegin</tt> and <tt>percentEnd</tt>, along with the
--   <tt>complement</tt> parameter.For example, the following two
--   datasources do not share any data, and can be used to train and
--   evaluate a model. The first datasource has 25 percent of the data, and
--   the second one has 75 percent of the data.Datasource for evaluation:
--   <tt>{"splitting":{"percentBegin":0, "percentEnd":25}}</tt>Datasource
--   for training: <tt>{"splitting":{"percentBegin":0, "percentEnd":25,
--   "complement":"true"}}</tt></li>
--   <li><b><tt>strategy</tt></b>To change how Amazon ML splits the data
--   for a datasource, use the <tt>strategy</tt> parameter.The default
--   value for the <tt>strategy</tt> parameter is <tt>sequential</tt>,
--   meaning that Amazon ML takes all of the data records between the
--   <tt>percentBegin</tt> and <tt>percentEnd</tt> parameters for the
--   datasource, in the order that the records appear in the input data.The
--   following two <tt>DataRearrangement</tt> lines are examples of
--   sequentially ordered training and evaluation datasources:Datasource
--   for evaluation: <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"sequential"}}</tt>Datasource for training:
--   <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"sequential", "complement":"true"}}</tt>To randomly split
--   the input data into the proportions indicated by the percentBegin and
--   percentEnd parameters, set the <tt>strategy</tt> parameter to
--   <tt>random</tt> and provide a string that is used as the seed value
--   for the random data splitting (for example, you can use the S3 path to
--   your data as the random seed string). If you choose the random split
--   strategy, Amazon ML assigns each row of data a pseudo-random number
--   between 0 and 100, and then selects the rows that have an assigned
--   number between <tt>percentBegin</tt> and <tt>percentEnd</tt>.
--   Pseudo-random numbers are assigned using both the input seed string
--   value and the byte offset as a seed, so changing the data results in a
--   different split. Any existing ordering is preserved. The random
--   splitting strategy ensures that variables in the training and
--   evaluation data are distributed similarly. It is useful in the cases
--   where the input data may have an implicit sort order, which would
--   otherwise result in training and evaluation datasources containing
--   non-similar data records.The following two <tt>DataRearrangement</tt>
--   lines are examples of non-sequentially ordered training and evaluation
--   datasources:Datasource for evaluation:
--   <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"random",
--   "randomSeed"="s3://my_s3_path/bucket/file.csv"}}</tt>Datasource for
--   training: <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"random", "randomSeed"="s3://my_s3_path/bucket/file.csv",
--   "complement":"true"}}</tt></li>
--   </ul>
redshiftDataSpec_dataRearrangement :: Lens' RedshiftDataSpec (Maybe Text)

-- | Describes the schema location for an Amazon Redshift
--   <tt>DataSource</tt>.
redshiftDataSpec_dataSchemaUri :: Lens' RedshiftDataSpec (Maybe Text)

-- | Describes the <tt>DatabaseName</tt> and <tt>ClusterIdentifier</tt> for
--   an Amazon Redshift <tt>DataSource</tt>.
redshiftDataSpec_databaseInformation :: Lens' RedshiftDataSpec RedshiftDatabase

-- | Describes the SQL Query to execute on an Amazon Redshift database for
--   an Amazon Redshift <tt>DataSource</tt>.
redshiftDataSpec_selectSqlQuery :: Lens' RedshiftDataSpec Text

-- | Describes AWS Identity and Access Management (IAM) credentials that
--   are used connect to the Amazon Redshift database.
redshiftDataSpec_databaseCredentials :: Lens' RedshiftDataSpec RedshiftDatabaseCredentials

-- | Describes an Amazon S3 location to store the result set of the
--   <tt>SelectSqlQuery</tt> query.
redshiftDataSpec_s3StagingLocation :: Lens' RedshiftDataSpec Text

-- | Describes the database details required to connect to an Amazon
--   Redshift database.
--   
--   <i>See:</i> <a>newRedshiftDatabase</a> smart constructor.
data RedshiftDatabase
RedshiftDatabase' :: Text -> Text -> RedshiftDatabase
[$sel:databaseName:RedshiftDatabase'] :: RedshiftDatabase -> Text
[$sel:clusterIdentifier:RedshiftDatabase'] :: RedshiftDatabase -> Text

-- | Create a value of <a>RedshiftDatabase</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:databaseName:RedshiftDatabase'</a>,
--   <a>redshiftDatabase_databaseName</a> - Undocumented member.
--   
--   <a>$sel:clusterIdentifier:RedshiftDatabase'</a>,
--   <a>redshiftDatabase_clusterIdentifier</a> - Undocumented member.
newRedshiftDatabase :: Text -> Text -> RedshiftDatabase

-- | Undocumented member.
redshiftDatabase_databaseName :: Lens' RedshiftDatabase Text

-- | Undocumented member.
redshiftDatabase_clusterIdentifier :: Lens' RedshiftDatabase Text

-- | Describes the database credentials for connecting to a database on an
--   Amazon Redshift cluster.
--   
--   <i>See:</i> <a>newRedshiftDatabaseCredentials</a> smart constructor.
data RedshiftDatabaseCredentials
RedshiftDatabaseCredentials' :: Text -> Text -> RedshiftDatabaseCredentials
[$sel:username:RedshiftDatabaseCredentials'] :: RedshiftDatabaseCredentials -> Text
[$sel:password:RedshiftDatabaseCredentials'] :: RedshiftDatabaseCredentials -> Text

-- | Create a value of <a>RedshiftDatabaseCredentials</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:username:RedshiftDatabaseCredentials'</a>,
--   <a>redshiftDatabaseCredentials_username</a> - Undocumented member.
--   
--   <a>$sel:password:RedshiftDatabaseCredentials'</a>,
--   <a>redshiftDatabaseCredentials_password</a> - Undocumented member.
newRedshiftDatabaseCredentials :: Text -> Text -> RedshiftDatabaseCredentials

-- | Undocumented member.
redshiftDatabaseCredentials_username :: Lens' RedshiftDatabaseCredentials Text

-- | Undocumented member.
redshiftDatabaseCredentials_password :: Lens' RedshiftDatabaseCredentials Text

-- | Describes the <tt>DataSource</tt> details specific to Amazon Redshift.
--   
--   <i>See:</i> <a>newRedshiftMetadata</a> smart constructor.
data RedshiftMetadata
RedshiftMetadata' :: Maybe Text -> Maybe RedshiftDatabase -> Maybe Text -> RedshiftMetadata

-- | The SQL query that is specified during CreateDataSourceFromRedshift.
--   Returns only if <tt>Verbose</tt> is true in GetDataSourceInput.
[$sel:selectSqlQuery:RedshiftMetadata'] :: RedshiftMetadata -> Maybe Text
[$sel:redshiftDatabase:RedshiftMetadata'] :: RedshiftMetadata -> Maybe RedshiftDatabase
[$sel:databaseUserName:RedshiftMetadata'] :: RedshiftMetadata -> Maybe Text

-- | Create a value of <a>RedshiftMetadata</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:selectSqlQuery:RedshiftMetadata'</a>,
--   <a>redshiftMetadata_selectSqlQuery</a> - The SQL query that is
--   specified during CreateDataSourceFromRedshift. Returns only if
--   <tt>Verbose</tt> is true in GetDataSourceInput.
--   
--   <a>$sel:redshiftDatabase:RedshiftMetadata'</a>,
--   <a>redshiftMetadata_redshiftDatabase</a> - Undocumented member.
--   
--   <a>$sel:databaseUserName:RedshiftMetadata'</a>,
--   <a>redshiftMetadata_databaseUserName</a> - Undocumented member.
newRedshiftMetadata :: RedshiftMetadata

-- | The SQL query that is specified during CreateDataSourceFromRedshift.
--   Returns only if <tt>Verbose</tt> is true in GetDataSourceInput.
redshiftMetadata_selectSqlQuery :: Lens' RedshiftMetadata (Maybe Text)

-- | Undocumented member.
redshiftMetadata_redshiftDatabase :: Lens' RedshiftMetadata (Maybe RedshiftDatabase)

-- | Undocumented member.
redshiftMetadata_databaseUserName :: Lens' RedshiftMetadata (Maybe Text)

-- | Describes the data specification of a <tt>DataSource</tt>.
--   
--   <i>See:</i> <a>newS3DataSpec</a> smart constructor.
data S3DataSpec
S3DataSpec' :: Maybe Text -> Maybe Text -> Maybe Text -> Text -> S3DataSpec

-- | A JSON string that represents the schema for an Amazon S3
--   <tt>DataSource</tt>. The <tt>DataSchema</tt> defines the structure of
--   the observation data in the data file(s) referenced in the
--   <tt>DataSource</tt>.
--   
--   You must provide either the <tt>DataSchema</tt> or the
--   <tt>DataSchemaLocationS3</tt>.
--   
--   Define your <tt>DataSchema</tt> as a series of key-value pairs.
--   <tt>attributes</tt> and <tt>excludedVariableNames</tt> have an array
--   of key-value pairs for their value. Use the following format to define
--   your <tt>DataSchema</tt>.
--   
--   { "version": "1.0",
--   
--   "recordAnnotationFieldName": "F1",
--   
--   "recordWeightFieldName": "F2",
--   
--   "targetFieldName": "F3",
--   
--   "dataFormat": "CSV",
--   
--   "dataFileContainsHeader": true,
--   
--   "attributes": [
--   
--   { "fieldName": "F1", "fieldType": "TEXT" }, { "fieldName": "F2",
--   "fieldType": "NUMERIC" }, { "fieldName": "F3", "fieldType":
--   "CATEGORICAL" }, { "fieldName": "F4", "fieldType": "NUMERIC" }, {
--   "fieldName": "F5", "fieldType": "CATEGORICAL" }, { "fieldName": "F6",
--   "fieldType": "TEXT" }, { "fieldName": "F7", "fieldType":
--   "WEIGHTED_INT_SEQUENCE" }, { "fieldName": "F8", "fieldType":
--   "WEIGHTED_STRING_SEQUENCE" } ],
--   
--   "excludedVariableNames": [ "F6" ] }
[$sel:dataSchema:S3DataSpec'] :: S3DataSpec -> Maybe Text

-- | A JSON string that represents the splitting and rearrangement
--   processing to be applied to a <tt>DataSource</tt>. If the
--   <tt>DataRearrangement</tt> parameter is not provided, all of the input
--   data is used to create the <tt>Datasource</tt>.
--   
--   There are multiple parameters that control what data is used to create
--   a datasource:
--   
--   <ul>
--   <li><b><tt>percentBegin</tt></b>Use <tt>percentBegin</tt> to indicate
--   the beginning of the range of the data used to create the Datasource.
--   If you do not include <tt>percentBegin</tt> and <tt>percentEnd</tt>,
--   Amazon ML includes all of the data when creating the datasource.</li>
--   <li><b><tt>percentEnd</tt></b>Use <tt>percentEnd</tt> to indicate the
--   end of the range of the data used to create the Datasource. If you do
--   not include <tt>percentBegin</tt> and <tt>percentEnd</tt>, Amazon ML
--   includes all of the data when creating the datasource.</li>
--   <li><b><tt>complement</tt></b>The <tt>complement</tt> parameter
--   instructs Amazon ML to use the data that is not included in the range
--   of <tt>percentBegin</tt> to <tt>percentEnd</tt> to create a
--   datasource. The <tt>complement</tt> parameter is useful if you need to
--   create complementary datasources for training and evaluation. To
--   create a complementary datasource, use the same values for
--   <tt>percentBegin</tt> and <tt>percentEnd</tt>, along with the
--   <tt>complement</tt> parameter.For example, the following two
--   datasources do not share any data, and can be used to train and
--   evaluate a model. The first datasource has 25 percent of the data, and
--   the second one has 75 percent of the data.Datasource for evaluation:
--   <tt>{"splitting":{"percentBegin":0, "percentEnd":25}}</tt>Datasource
--   for training: <tt>{"splitting":{"percentBegin":0, "percentEnd":25,
--   "complement":"true"}}</tt></li>
--   <li><b><tt>strategy</tt></b>To change how Amazon ML splits the data
--   for a datasource, use the <tt>strategy</tt> parameter.The default
--   value for the <tt>strategy</tt> parameter is <tt>sequential</tt>,
--   meaning that Amazon ML takes all of the data records between the
--   <tt>percentBegin</tt> and <tt>percentEnd</tt> parameters for the
--   datasource, in the order that the records appear in the input data.The
--   following two <tt>DataRearrangement</tt> lines are examples of
--   sequentially ordered training and evaluation datasources:Datasource
--   for evaluation: <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"sequential"}}</tt>Datasource for training:
--   <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"sequential", "complement":"true"}}</tt>To randomly split
--   the input data into the proportions indicated by the percentBegin and
--   percentEnd parameters, set the <tt>strategy</tt> parameter to
--   <tt>random</tt> and provide a string that is used as the seed value
--   for the random data splitting (for example, you can use the S3 path to
--   your data as the random seed string). If you choose the random split
--   strategy, Amazon ML assigns each row of data a pseudo-random number
--   between 0 and 100, and then selects the rows that have an assigned
--   number between <tt>percentBegin</tt> and <tt>percentEnd</tt>.
--   Pseudo-random numbers are assigned using both the input seed string
--   value and the byte offset as a seed, so changing the data results in a
--   different split. Any existing ordering is preserved. The random
--   splitting strategy ensures that variables in the training and
--   evaluation data are distributed similarly. It is useful in the cases
--   where the input data may have an implicit sort order, which would
--   otherwise result in training and evaluation datasources containing
--   non-similar data records.The following two <tt>DataRearrangement</tt>
--   lines are examples of non-sequentially ordered training and evaluation
--   datasources:Datasource for evaluation:
--   <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"random",
--   "randomSeed"="s3://my_s3_path/bucket/file.csv"}}</tt>Datasource for
--   training: <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"random", "randomSeed"="s3://my_s3_path/bucket/file.csv",
--   "complement":"true"}}</tt></li>
--   </ul>
[$sel:dataRearrangement:S3DataSpec'] :: S3DataSpec -> Maybe Text

-- | Describes the schema location in Amazon S3. You must provide either
--   the <tt>DataSchema</tt> or the <tt>DataSchemaLocationS3</tt>.
[$sel:dataSchemaLocationS3:S3DataSpec'] :: S3DataSpec -> Maybe Text

-- | The location of the data file(s) used by a <tt>DataSource</tt>. The
--   URI specifies a data file or an Amazon Simple Storage Service (Amazon
--   S3) directory or bucket containing data files.
[$sel:dataLocationS3:S3DataSpec'] :: S3DataSpec -> Text

-- | Create a value of <a>S3DataSpec</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataSchema:S3DataSpec'</a>, <a>s3DataSpec_dataSchema</a> - A
--   JSON string that represents the schema for an Amazon S3
--   <tt>DataSource</tt>. The <tt>DataSchema</tt> defines the structure of
--   the observation data in the data file(s) referenced in the
--   <tt>DataSource</tt>.
--   
--   You must provide either the <tt>DataSchema</tt> or the
--   <tt>DataSchemaLocationS3</tt>.
--   
--   Define your <tt>DataSchema</tt> as a series of key-value pairs.
--   <tt>attributes</tt> and <tt>excludedVariableNames</tt> have an array
--   of key-value pairs for their value. Use the following format to define
--   your <tt>DataSchema</tt>.
--   
--   { "version": "1.0",
--   
--   "recordAnnotationFieldName": "F1",
--   
--   "recordWeightFieldName": "F2",
--   
--   "targetFieldName": "F3",
--   
--   "dataFormat": "CSV",
--   
--   "dataFileContainsHeader": true,
--   
--   "attributes": [
--   
--   { "fieldName": "F1", "fieldType": "TEXT" }, { "fieldName": "F2",
--   "fieldType": "NUMERIC" }, { "fieldName": "F3", "fieldType":
--   "CATEGORICAL" }, { "fieldName": "F4", "fieldType": "NUMERIC" }, {
--   "fieldName": "F5", "fieldType": "CATEGORICAL" }, { "fieldName": "F6",
--   "fieldType": "TEXT" }, { "fieldName": "F7", "fieldType":
--   "WEIGHTED_INT_SEQUENCE" }, { "fieldName": "F8", "fieldType":
--   "WEIGHTED_STRING_SEQUENCE" } ],
--   
--   "excludedVariableNames": [ "F6" ] }
--   
--   <a>$sel:dataRearrangement:S3DataSpec'</a>,
--   <a>s3DataSpec_dataRearrangement</a> - A JSON string that represents
--   the splitting and rearrangement processing to be applied to a
--   <tt>DataSource</tt>. If the <tt>DataRearrangement</tt> parameter is
--   not provided, all of the input data is used to create the
--   <tt>Datasource</tt>.
--   
--   There are multiple parameters that control what data is used to create
--   a datasource:
--   
--   <ul>
--   <li><b><tt>percentBegin</tt></b>Use <tt>percentBegin</tt> to indicate
--   the beginning of the range of the data used to create the Datasource.
--   If you do not include <tt>percentBegin</tt> and <tt>percentEnd</tt>,
--   Amazon ML includes all of the data when creating the datasource.</li>
--   <li><b><tt>percentEnd</tt></b>Use <tt>percentEnd</tt> to indicate the
--   end of the range of the data used to create the Datasource. If you do
--   not include <tt>percentBegin</tt> and <tt>percentEnd</tt>, Amazon ML
--   includes all of the data when creating the datasource.</li>
--   <li><b><tt>complement</tt></b>The <tt>complement</tt> parameter
--   instructs Amazon ML to use the data that is not included in the range
--   of <tt>percentBegin</tt> to <tt>percentEnd</tt> to create a
--   datasource. The <tt>complement</tt> parameter is useful if you need to
--   create complementary datasources for training and evaluation. To
--   create a complementary datasource, use the same values for
--   <tt>percentBegin</tt> and <tt>percentEnd</tt>, along with the
--   <tt>complement</tt> parameter.For example, the following two
--   datasources do not share any data, and can be used to train and
--   evaluate a model. The first datasource has 25 percent of the data, and
--   the second one has 75 percent of the data.Datasource for evaluation:
--   <tt>{"splitting":{"percentBegin":0, "percentEnd":25}}</tt>Datasource
--   for training: <tt>{"splitting":{"percentBegin":0, "percentEnd":25,
--   "complement":"true"}}</tt></li>
--   <li><b><tt>strategy</tt></b>To change how Amazon ML splits the data
--   for a datasource, use the <tt>strategy</tt> parameter.The default
--   value for the <tt>strategy</tt> parameter is <tt>sequential</tt>,
--   meaning that Amazon ML takes all of the data records between the
--   <tt>percentBegin</tt> and <tt>percentEnd</tt> parameters for the
--   datasource, in the order that the records appear in the input data.The
--   following two <tt>DataRearrangement</tt> lines are examples of
--   sequentially ordered training and evaluation datasources:Datasource
--   for evaluation: <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"sequential"}}</tt>Datasource for training:
--   <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"sequential", "complement":"true"}}</tt>To randomly split
--   the input data into the proportions indicated by the percentBegin and
--   percentEnd parameters, set the <tt>strategy</tt> parameter to
--   <tt>random</tt> and provide a string that is used as the seed value
--   for the random data splitting (for example, you can use the S3 path to
--   your data as the random seed string). If you choose the random split
--   strategy, Amazon ML assigns each row of data a pseudo-random number
--   between 0 and 100, and then selects the rows that have an assigned
--   number between <tt>percentBegin</tt> and <tt>percentEnd</tt>.
--   Pseudo-random numbers are assigned using both the input seed string
--   value and the byte offset as a seed, so changing the data results in a
--   different split. Any existing ordering is preserved. The random
--   splitting strategy ensures that variables in the training and
--   evaluation data are distributed similarly. It is useful in the cases
--   where the input data may have an implicit sort order, which would
--   otherwise result in training and evaluation datasources containing
--   non-similar data records.The following two <tt>DataRearrangement</tt>
--   lines are examples of non-sequentially ordered training and evaluation
--   datasources:Datasource for evaluation:
--   <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"random",
--   "randomSeed"="s3://my_s3_path/bucket/file.csv"}}</tt>Datasource for
--   training: <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"random", "randomSeed"="s3://my_s3_path/bucket/file.csv",
--   "complement":"true"}}</tt></li>
--   </ul>
--   
--   <a>$sel:dataSchemaLocationS3:S3DataSpec'</a>,
--   <a>s3DataSpec_dataSchemaLocationS3</a> - Describes the schema location
--   in Amazon S3. You must provide either the <tt>DataSchema</tt> or the
--   <tt>DataSchemaLocationS3</tt>.
--   
--   <a>$sel:dataLocationS3:S3DataSpec'</a>,
--   <a>s3DataSpec_dataLocationS3</a> - The location of the data file(s)
--   used by a <tt>DataSource</tt>. The URI specifies a data file or an
--   Amazon Simple Storage Service (Amazon S3) directory or bucket
--   containing data files.
newS3DataSpec :: Text -> S3DataSpec

-- | A JSON string that represents the schema for an Amazon S3
--   <tt>DataSource</tt>. The <tt>DataSchema</tt> defines the structure of
--   the observation data in the data file(s) referenced in the
--   <tt>DataSource</tt>.
--   
--   You must provide either the <tt>DataSchema</tt> or the
--   <tt>DataSchemaLocationS3</tt>.
--   
--   Define your <tt>DataSchema</tt> as a series of key-value pairs.
--   <tt>attributes</tt> and <tt>excludedVariableNames</tt> have an array
--   of key-value pairs for their value. Use the following format to define
--   your <tt>DataSchema</tt>.
--   
--   { "version": "1.0",
--   
--   "recordAnnotationFieldName": "F1",
--   
--   "recordWeightFieldName": "F2",
--   
--   "targetFieldName": "F3",
--   
--   "dataFormat": "CSV",
--   
--   "dataFileContainsHeader": true,
--   
--   "attributes": [
--   
--   { "fieldName": "F1", "fieldType": "TEXT" }, { "fieldName": "F2",
--   "fieldType": "NUMERIC" }, { "fieldName": "F3", "fieldType":
--   "CATEGORICAL" }, { "fieldName": "F4", "fieldType": "NUMERIC" }, {
--   "fieldName": "F5", "fieldType": "CATEGORICAL" }, { "fieldName": "F6",
--   "fieldType": "TEXT" }, { "fieldName": "F7", "fieldType":
--   "WEIGHTED_INT_SEQUENCE" }, { "fieldName": "F8", "fieldType":
--   "WEIGHTED_STRING_SEQUENCE" } ],
--   
--   "excludedVariableNames": [ "F6" ] }
s3DataSpec_dataSchema :: Lens' S3DataSpec (Maybe Text)

-- | A JSON string that represents the splitting and rearrangement
--   processing to be applied to a <tt>DataSource</tt>. If the
--   <tt>DataRearrangement</tt> parameter is not provided, all of the input
--   data is used to create the <tt>Datasource</tt>.
--   
--   There are multiple parameters that control what data is used to create
--   a datasource:
--   
--   <ul>
--   <li><b><tt>percentBegin</tt></b>Use <tt>percentBegin</tt> to indicate
--   the beginning of the range of the data used to create the Datasource.
--   If you do not include <tt>percentBegin</tt> and <tt>percentEnd</tt>,
--   Amazon ML includes all of the data when creating the datasource.</li>
--   <li><b><tt>percentEnd</tt></b>Use <tt>percentEnd</tt> to indicate the
--   end of the range of the data used to create the Datasource. If you do
--   not include <tt>percentBegin</tt> and <tt>percentEnd</tt>, Amazon ML
--   includes all of the data when creating the datasource.</li>
--   <li><b><tt>complement</tt></b>The <tt>complement</tt> parameter
--   instructs Amazon ML to use the data that is not included in the range
--   of <tt>percentBegin</tt> to <tt>percentEnd</tt> to create a
--   datasource. The <tt>complement</tt> parameter is useful if you need to
--   create complementary datasources for training and evaluation. To
--   create a complementary datasource, use the same values for
--   <tt>percentBegin</tt> and <tt>percentEnd</tt>, along with the
--   <tt>complement</tt> parameter.For example, the following two
--   datasources do not share any data, and can be used to train and
--   evaluate a model. The first datasource has 25 percent of the data, and
--   the second one has 75 percent of the data.Datasource for evaluation:
--   <tt>{"splitting":{"percentBegin":0, "percentEnd":25}}</tt>Datasource
--   for training: <tt>{"splitting":{"percentBegin":0, "percentEnd":25,
--   "complement":"true"}}</tt></li>
--   <li><b><tt>strategy</tt></b>To change how Amazon ML splits the data
--   for a datasource, use the <tt>strategy</tt> parameter.The default
--   value for the <tt>strategy</tt> parameter is <tt>sequential</tt>,
--   meaning that Amazon ML takes all of the data records between the
--   <tt>percentBegin</tt> and <tt>percentEnd</tt> parameters for the
--   datasource, in the order that the records appear in the input data.The
--   following two <tt>DataRearrangement</tt> lines are examples of
--   sequentially ordered training and evaluation datasources:Datasource
--   for evaluation: <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"sequential"}}</tt>Datasource for training:
--   <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"sequential", "complement":"true"}}</tt>To randomly split
--   the input data into the proportions indicated by the percentBegin and
--   percentEnd parameters, set the <tt>strategy</tt> parameter to
--   <tt>random</tt> and provide a string that is used as the seed value
--   for the random data splitting (for example, you can use the S3 path to
--   your data as the random seed string). If you choose the random split
--   strategy, Amazon ML assigns each row of data a pseudo-random number
--   between 0 and 100, and then selects the rows that have an assigned
--   number between <tt>percentBegin</tt> and <tt>percentEnd</tt>.
--   Pseudo-random numbers are assigned using both the input seed string
--   value and the byte offset as a seed, so changing the data results in a
--   different split. Any existing ordering is preserved. The random
--   splitting strategy ensures that variables in the training and
--   evaluation data are distributed similarly. It is useful in the cases
--   where the input data may have an implicit sort order, which would
--   otherwise result in training and evaluation datasources containing
--   non-similar data records.The following two <tt>DataRearrangement</tt>
--   lines are examples of non-sequentially ordered training and evaluation
--   datasources:Datasource for evaluation:
--   <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"random",
--   "randomSeed"="s3://my_s3_path/bucket/file.csv"}}</tt>Datasource for
--   training: <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"random", "randomSeed"="s3://my_s3_path/bucket/file.csv",
--   "complement":"true"}}</tt></li>
--   </ul>
s3DataSpec_dataRearrangement :: Lens' S3DataSpec (Maybe Text)

-- | Describes the schema location in Amazon S3. You must provide either
--   the <tt>DataSchema</tt> or the <tt>DataSchemaLocationS3</tt>.
s3DataSpec_dataSchemaLocationS3 :: Lens' S3DataSpec (Maybe Text)

-- | The location of the data file(s) used by a <tt>DataSource</tt>. The
--   URI specifies a data file or an Amazon Simple Storage Service (Amazon
--   S3) directory or bucket containing data files.
s3DataSpec_dataLocationS3 :: Lens' S3DataSpec Text

-- | A custom key-value pair associated with an ML object, such as an ML
--   model.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Maybe Text -> Maybe Text -> Tag

-- | A unique identifier for the tag. Valid characters include Unicode
--   letters, digits, white space, _, ., /, =, +, -, %, and @.
[$sel:key:Tag'] :: Tag -> Maybe Text

-- | An optional string, typically used to describe or define the tag.
--   Valid characters include Unicode letters, digits, white space, _, .,
--   /, =, +, -, %, and @.
[$sel:value:Tag'] :: Tag -> Maybe Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - A unique identifier for the
--   tag. Valid characters include Unicode letters, digits, white space, _,
--   ., /, =, +, -, %, and @.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - An optional string,
--   typically used to describe or define the tag. Valid characters include
--   Unicode letters, digits, white space, _, ., /, =, +, -, %, and @.
newTag :: Tag

-- | A unique identifier for the tag. Valid characters include Unicode
--   letters, digits, white space, _, ., /, =, +, -, %, and @.
tag_key :: Lens' Tag (Maybe Text)

-- | An optional string, typically used to describe or define the tag.
--   Valid characters include Unicode letters, digits, white space, _, .,
--   /, =, +, -, %, and @.
tag_value :: Lens' Tag (Maybe Text)


-- | Generates a prediction for the observation using the specified <tt>ML
--   Model</tt>.
--   
--   <b>Note:</b> Not all response parameters will be populated. Whether a
--   response parameter is populated depends on the type of model
--   requested.
module Network.AWS.MachineLearning.Predict

-- | <i>See:</i> <a>newPredict</a> smart constructor.
data Predict
Predict' :: Text -> HashMap Text Text -> Text -> Predict

-- | A unique identifier of the <tt>MLModel</tt>.
[$sel:mLModelId:Predict'] :: Predict -> Text
[$sel:record:Predict'] :: Predict -> HashMap Text Text
[$sel:predictEndpoint:Predict'] :: Predict -> Text

-- | Create a value of <a>Predict</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mLModelId:Predict'</a>, <a>predict_mLModelId</a> - A unique
--   identifier of the <tt>MLModel</tt>.
--   
--   <a>$sel:record:Predict'</a>, <a>predict_record</a> - Undocumented
--   member.
--   
--   <a>$sel:predictEndpoint:Predict'</a>, <a>predict_predictEndpoint</a> -
--   Undocumented member.
newPredict :: Text -> Text -> Predict

-- | A unique identifier of the <tt>MLModel</tt>.
predict_mLModelId :: Lens' Predict Text

-- | Undocumented member.
predict_record :: Lens' Predict (HashMap Text Text)

-- | Undocumented member.
predict_predictEndpoint :: Lens' Predict Text

-- | <i>See:</i> <a>newPredictResponse</a> smart constructor.
data PredictResponse
PredictResponse' :: Maybe Prediction -> Int -> PredictResponse
[$sel:prediction:PredictResponse'] :: PredictResponse -> Maybe Prediction

-- | The response's http status code.
[$sel:httpStatus:PredictResponse'] :: PredictResponse -> Int

-- | Create a value of <a>PredictResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:prediction:PredictResponse'</a>,
--   <a>predictResponse_prediction</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:PredictResponse'</a>,
--   <a>predictResponse_httpStatus</a> - The response's http status code.
newPredictResponse :: Int -> PredictResponse

-- | Undocumented member.
predictResponse_prediction :: Lens' PredictResponse (Maybe Prediction)

-- | The response's http status code.
predictResponse_httpStatus :: Lens' PredictResponse Int
instance GHC.Generics.Generic Network.AWS.MachineLearning.Predict.Predict
instance GHC.Show.Show Network.AWS.MachineLearning.Predict.Predict
instance GHC.Read.Read Network.AWS.MachineLearning.Predict.Predict
instance GHC.Classes.Eq Network.AWS.MachineLearning.Predict.Predict
instance GHC.Generics.Generic Network.AWS.MachineLearning.Predict.PredictResponse
instance GHC.Show.Show Network.AWS.MachineLearning.Predict.PredictResponse
instance GHC.Read.Read Network.AWS.MachineLearning.Predict.PredictResponse
instance GHC.Classes.Eq Network.AWS.MachineLearning.Predict.PredictResponse
instance Network.AWS.Types.AWSRequest Network.AWS.MachineLearning.Predict.Predict
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.Predict.PredictResponse
instance Data.Hashable.Class.Hashable Network.AWS.MachineLearning.Predict.Predict
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.Predict.Predict
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.MachineLearning.Predict.Predict
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MachineLearning.Predict.Predict
instance Network.AWS.Data.Path.ToPath Network.AWS.MachineLearning.Predict.Predict
instance Network.AWS.Data.Query.ToQuery Network.AWS.MachineLearning.Predict.Predict


-- | Returns an <tt>MLModel</tt> that includes detailed metadata, data
--   source information, and the current status of the <tt>MLModel</tt>.
--   
--   <tt>GetMLModel</tt> provides results in normal or verbose format.
module Network.AWS.MachineLearning.GetMLModel

-- | <i>See:</i> <a>newGetMLModel</a> smart constructor.
data GetMLModel
GetMLModel' :: Maybe Bool -> Text -> GetMLModel

-- | Specifies whether the <tt>GetMLModel</tt> operation should return
--   <tt>Recipe</tt>.
--   
--   If true, <tt>Recipe</tt> is returned.
--   
--   If false, <tt>Recipe</tt> is not returned.
[$sel:verbose:GetMLModel'] :: GetMLModel -> Maybe Bool

-- | The ID assigned to the <tt>MLModel</tt> at creation.
[$sel:mLModelId:GetMLModel'] :: GetMLModel -> Text

-- | Create a value of <a>GetMLModel</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:verbose:GetMLModel'</a>, <a>getMLModel_verbose</a> - Specifies
--   whether the <tt>GetMLModel</tt> operation should return
--   <tt>Recipe</tt>.
--   
--   If true, <tt>Recipe</tt> is returned.
--   
--   If false, <tt>Recipe</tt> is not returned.
--   
--   <a>$sel:mLModelId:GetMLModel'</a>, <a>getMLModel_mLModelId</a> - The
--   ID assigned to the <tt>MLModel</tt> at creation.
newGetMLModel :: Text -> GetMLModel

-- | Specifies whether the <tt>GetMLModel</tt> operation should return
--   <tt>Recipe</tt>.
--   
--   If true, <tt>Recipe</tt> is returned.
--   
--   If false, <tt>Recipe</tt> is not returned.
getMLModel_verbose :: Lens' GetMLModel (Maybe Bool)

-- | The ID assigned to the <tt>MLModel</tt> at creation.
getMLModel_mLModelId :: Lens' GetMLModel Text

-- | Represents the output of a <tt>GetMLModel</tt> operation, and provides
--   detailed information about a <tt>MLModel</tt>.
--   
--   <i>See:</i> <a>newGetMLModelResponse</a> smart constructor.
data GetMLModelResponse
GetMLModelResponse' :: Maybe EntityStatus -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe RealtimeEndpointInfo -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Double -> Maybe MLModelType -> Maybe Integer -> Maybe Text -> Maybe Text -> Maybe Integer -> Maybe Text -> Maybe POSIX -> Maybe Text -> Int -> GetMLModelResponse

-- | The current status of the <tt>MLModel</tt>. This element can have one
--   of the following values:
--   
--   <ul>
--   <li><tt>PENDING</tt> - Amazon Machine Learning (Amazon ML) submitted a
--   request to describe a <tt>MLModel</tt>.</li>
--   <li><tt>INPROGRESS</tt> - The request is processing.</li>
--   <li><tt>FAILED</tt> - The request did not run to completion. The ML
--   model isn't usable.</li>
--   <li><tt>COMPLETED</tt> - The request completed successfully.</li>
--   <li><tt>DELETED</tt> - The <tt>MLModel</tt> is marked as deleted. It
--   isn't usable.</li>
--   </ul>
[$sel:status:GetMLModelResponse'] :: GetMLModelResponse -> Maybe EntityStatus

-- | The epoch time when Amazon Machine Learning marked the
--   <tt>MLModel</tt> as <tt>INPROGRESS</tt>. <tt>StartedAt</tt> isn't
--   available if the <tt>MLModel</tt> is in the <tt>PENDING</tt> state.
[$sel:startedAt:GetMLModelResponse'] :: GetMLModelResponse -> Maybe POSIX

-- | The schema used by all of the data files referenced by the
--   <tt>DataSource</tt>.
--   
--   <b>Note:</b> This parameter is provided as part of the verbose format.
[$sel:schema:GetMLModelResponse'] :: GetMLModelResponse -> Maybe Text

-- | A description of the most recent details about accessing the
--   <tt>MLModel</tt>.
[$sel:message:GetMLModelResponse'] :: GetMLModelResponse -> Maybe Text

-- | The recipe to use when training the <tt>MLModel</tt>. The
--   <tt>Recipe</tt> provides detailed information about the observation
--   data to use during training, and manipulations to perform on the
--   observation data during training.
--   
--   <b>Note:</b> This parameter is provided as part of the verbose format.
[$sel:recipe:GetMLModelResponse'] :: GetMLModelResponse -> Maybe Text

-- | The time that the <tt>MLModel</tt> was created. The time is expressed
--   in epoch time.
[$sel:createdAt:GetMLModelResponse'] :: GetMLModelResponse -> Maybe POSIX

-- | The time of the most recent edit to the <tt>ScoreThreshold</tt>. The
--   time is expressed in epoch time.
[$sel:scoreThresholdLastUpdatedAt:GetMLModelResponse'] :: GetMLModelResponse -> Maybe POSIX

-- | The current endpoint of the <tt>MLModel</tt>
[$sel:endpointInfo:GetMLModelResponse'] :: GetMLModelResponse -> Maybe RealtimeEndpointInfo

-- | A list of the training parameters in the <tt>MLModel</tt>. The list is
--   implemented as a map of key-value pairs.
--   
--   The following is the current set of training parameters:
--   
--   <ul>
--   <li><tt>sgd.maxMLModelSizeInBytes</tt> - The maximum allowed size of
--   the model. Depending on the input data, the size of the model might
--   affect its performance.The value is an integer that ranges from
--   <tt>100000</tt> to <tt>2147483648</tt>. The default value is
--   <tt>33554432</tt>.</li>
--   <li><tt>sgd.maxPasses</tt> - The number of times that the training
--   process traverses the observations to build the <tt>MLModel</tt>. The
--   value is an integer that ranges from <tt>1</tt> to <tt>10000</tt>. The
--   default value is <tt>10</tt>.</li>
--   <li><tt>sgd.shuffleType</tt> - Whether Amazon ML shuffles the training
--   data. Shuffling data improves a model's ability to find the optimal
--   solution for a variety of data types. The valid values are
--   <tt>auto</tt> and <tt>none</tt>. The default value is <tt>none</tt>.
--   We strongly recommend that you shuffle your data.</li>
--   <li><tt>sgd.l1RegularizationAmount</tt> - The coefficient
--   regularization L1 norm. It controls overfitting the data by penalizing
--   large coefficients. This tends to drive coefficients to zero,
--   resulting in a sparse feature set. If you use this parameter, start by
--   specifying a small value, such as <tt>1.0E-08</tt>.The value is a
--   double that ranges from <tt>0</tt> to <tt>MAX_DOUBLE</tt>. The default
--   is to not use L1 normalization. This parameter can't be used when
--   <tt>L2</tt> is specified. Use this parameter sparingly.</li>
--   <li><tt>sgd.l2RegularizationAmount</tt> - The coefficient
--   regularization L2 norm. It controls overfitting the data by penalizing
--   large coefficients. This tends to drive coefficients to small, nonzero
--   values. If you use this parameter, start by specifying a small value,
--   such as <tt>1.0E-08</tt>.The value is a double that ranges from
--   <tt>0</tt> to <tt>MAX_DOUBLE</tt>. The default is to not use L2
--   normalization. This parameter can't be used when <tt>L1</tt> is
--   specified. Use this parameter sparingly.</li>
--   </ul>
[$sel:trainingParameters:GetMLModelResponse'] :: GetMLModelResponse -> Maybe (HashMap Text Text)

-- | A user-supplied name or description of the <tt>MLModel</tt>.
[$sel:name:GetMLModelResponse'] :: GetMLModelResponse -> Maybe Text

-- | The AWS user account from which the <tt>MLModel</tt> was created. The
--   account type can be either an AWS root account or an AWS Identity and
--   Access Management (IAM) user account.
[$sel:createdByIamUser:GetMLModelResponse'] :: GetMLModelResponse -> Maybe Text

-- | The epoch time when Amazon Machine Learning marked the
--   <tt>MLModel</tt> as <tt>COMPLETED</tt> or <tt>FAILED</tt>.
--   <tt>FinishedAt</tt> is only available when the <tt>MLModel</tt> is in
--   the <tt>COMPLETED</tt> or <tt>FAILED</tt> state.
[$sel:finishedAt:GetMLModelResponse'] :: GetMLModelResponse -> Maybe POSIX

-- | The scoring threshold is used in binary classification
--   <tt>MLModel</tt> models. It marks the boundary between a positive
--   prediction and a negative prediction.
--   
--   Output values greater than or equal to the threshold receive a
--   positive result from the MLModel, such as <tt>true</tt>. Output values
--   less than the threshold receive a negative response from the MLModel,
--   such as <tt>false</tt>.
[$sel:scoreThreshold:GetMLModelResponse'] :: GetMLModelResponse -> Maybe Double

-- | Identifies the <tt>MLModel</tt> category. The following are the
--   available types:
--   
--   <ul>
--   <li>REGRESSION -- Produces a numeric result. For example, "What price
--   should a house be listed at?"</li>
--   <li>BINARY -- Produces one of two possible results. For example, "Is
--   this an e-commerce website?"</li>
--   <li>MULTICLASS -- Produces one of several possible results. For
--   example, "Is this a HIGH, LOW or MEDIUM risk trade?"</li>
--   </ul>
[$sel:mLModelType:GetMLModelResponse'] :: GetMLModelResponse -> Maybe MLModelType
[$sel:sizeInBytes:GetMLModelResponse'] :: GetMLModelResponse -> Maybe Integer

-- | The MLModel ID, which is same as the <tt>MLModelId</tt> in the
--   request.
[$sel:mLModelId:GetMLModelResponse'] :: GetMLModelResponse -> Maybe Text

-- | The location of the data file or directory in Amazon Simple Storage
--   Service (Amazon S3).
[$sel:inputDataLocationS3:GetMLModelResponse'] :: GetMLModelResponse -> Maybe Text

-- | The approximate CPU time in milliseconds that Amazon Machine Learning
--   spent processing the <tt>MLModel</tt>, normalized and scaled on
--   computation resources. <tt>ComputeTime</tt> is only available if the
--   <tt>MLModel</tt> is in the <tt>COMPLETED</tt> state.
[$sel:computeTime:GetMLModelResponse'] :: GetMLModelResponse -> Maybe Integer

-- | The ID of the training <tt>DataSource</tt>.
[$sel:trainingDataSourceId:GetMLModelResponse'] :: GetMLModelResponse -> Maybe Text

-- | The time of the most recent edit to the <tt>MLModel</tt>. The time is
--   expressed in epoch time.
[$sel:lastUpdatedAt:GetMLModelResponse'] :: GetMLModelResponse -> Maybe POSIX

-- | A link to the file that contains logs of the <tt>CreateMLModel</tt>
--   operation.
[$sel:logUri:GetMLModelResponse'] :: GetMLModelResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetMLModelResponse'] :: GetMLModelResponse -> Int

-- | Create a value of <a>GetMLModelResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:GetMLModelResponse'</a>,
--   <a>getMLModelResponse_status</a> - The current status of the
--   <tt>MLModel</tt>. This element can have one of the following values:
--   
--   <ul>
--   <li><tt>PENDING</tt> - Amazon Machine Learning (Amazon ML) submitted a
--   request to describe a <tt>MLModel</tt>.</li>
--   <li><tt>INPROGRESS</tt> - The request is processing.</li>
--   <li><tt>FAILED</tt> - The request did not run to completion. The ML
--   model isn't usable.</li>
--   <li><tt>COMPLETED</tt> - The request completed successfully.</li>
--   <li><tt>DELETED</tt> - The <tt>MLModel</tt> is marked as deleted. It
--   isn't usable.</li>
--   </ul>
--   
--   <a>$sel:startedAt:GetMLModelResponse'</a>,
--   <a>getMLModelResponse_startedAt</a> - The epoch time when Amazon
--   Machine Learning marked the <tt>MLModel</tt> as <tt>INPROGRESS</tt>.
--   <tt>StartedAt</tt> isn't available if the <tt>MLModel</tt> is in the
--   <tt>PENDING</tt> state.
--   
--   <a>$sel:schema:GetMLModelResponse'</a>,
--   <a>getMLModelResponse_schema</a> - The schema used by all of the data
--   files referenced by the <tt>DataSource</tt>.
--   
--   <b>Note:</b> This parameter is provided as part of the verbose format.
--   
--   <a>$sel:message:GetMLModelResponse'</a>,
--   <a>getMLModelResponse_message</a> - A description of the most recent
--   details about accessing the <tt>MLModel</tt>.
--   
--   <a>$sel:recipe:GetMLModelResponse'</a>,
--   <a>getMLModelResponse_recipe</a> - The recipe to use when training the
--   <tt>MLModel</tt>. The <tt>Recipe</tt> provides detailed information
--   about the observation data to use during training, and manipulations
--   to perform on the observation data during training.
--   
--   <b>Note:</b> This parameter is provided as part of the verbose format.
--   
--   <a>$sel:createdAt:GetMLModelResponse'</a>,
--   <a>getMLModelResponse_createdAt</a> - The time that the
--   <tt>MLModel</tt> was created. The time is expressed in epoch time.
--   
--   <a>$sel:scoreThresholdLastUpdatedAt:GetMLModelResponse'</a>,
--   <a>getMLModelResponse_scoreThresholdLastUpdatedAt</a> - The time of
--   the most recent edit to the <tt>ScoreThreshold</tt>. The time is
--   expressed in epoch time.
--   
--   <a>$sel:endpointInfo:GetMLModelResponse'</a>,
--   <a>getMLModelResponse_endpointInfo</a> - The current endpoint of the
--   <tt>MLModel</tt>
--   
--   <a>$sel:trainingParameters:GetMLModelResponse'</a>,
--   <a>getMLModelResponse_trainingParameters</a> - A list of the training
--   parameters in the <tt>MLModel</tt>. The list is implemented as a map
--   of key-value pairs.
--   
--   The following is the current set of training parameters:
--   
--   <ul>
--   <li><tt>sgd.maxMLModelSizeInBytes</tt> - The maximum allowed size of
--   the model. Depending on the input data, the size of the model might
--   affect its performance.The value is an integer that ranges from
--   <tt>100000</tt> to <tt>2147483648</tt>. The default value is
--   <tt>33554432</tt>.</li>
--   <li><tt>sgd.maxPasses</tt> - The number of times that the training
--   process traverses the observations to build the <tt>MLModel</tt>. The
--   value is an integer that ranges from <tt>1</tt> to <tt>10000</tt>. The
--   default value is <tt>10</tt>.</li>
--   <li><tt>sgd.shuffleType</tt> - Whether Amazon ML shuffles the training
--   data. Shuffling data improves a model's ability to find the optimal
--   solution for a variety of data types. The valid values are
--   <tt>auto</tt> and <tt>none</tt>. The default value is <tt>none</tt>.
--   We strongly recommend that you shuffle your data.</li>
--   <li><tt>sgd.l1RegularizationAmount</tt> - The coefficient
--   regularization L1 norm. It controls overfitting the data by penalizing
--   large coefficients. This tends to drive coefficients to zero,
--   resulting in a sparse feature set. If you use this parameter, start by
--   specifying a small value, such as <tt>1.0E-08</tt>.The value is a
--   double that ranges from <tt>0</tt> to <tt>MAX_DOUBLE</tt>. The default
--   is to not use L1 normalization. This parameter can't be used when
--   <tt>L2</tt> is specified. Use this parameter sparingly.</li>
--   <li><tt>sgd.l2RegularizationAmount</tt> - The coefficient
--   regularization L2 norm. It controls overfitting the data by penalizing
--   large coefficients. This tends to drive coefficients to small, nonzero
--   values. If you use this parameter, start by specifying a small value,
--   such as <tt>1.0E-08</tt>.The value is a double that ranges from
--   <tt>0</tt> to <tt>MAX_DOUBLE</tt>. The default is to not use L2
--   normalization. This parameter can't be used when <tt>L1</tt> is
--   specified. Use this parameter sparingly.</li>
--   </ul>
--   
--   <a>$sel:name:GetMLModelResponse'</a>, <a>getMLModelResponse_name</a> -
--   A user-supplied name or description of the <tt>MLModel</tt>.
--   
--   <a>$sel:createdByIamUser:GetMLModelResponse'</a>,
--   <a>getMLModelResponse_createdByIamUser</a> - The AWS user account from
--   which the <tt>MLModel</tt> was created. The account type can be either
--   an AWS root account or an AWS Identity and Access Management (IAM)
--   user account.
--   
--   <a>$sel:finishedAt:GetMLModelResponse'</a>,
--   <a>getMLModelResponse_finishedAt</a> - The epoch time when Amazon
--   Machine Learning marked the <tt>MLModel</tt> as <tt>COMPLETED</tt> or
--   <tt>FAILED</tt>. <tt>FinishedAt</tt> is only available when the
--   <tt>MLModel</tt> is in the <tt>COMPLETED</tt> or <tt>FAILED</tt>
--   state.
--   
--   <a>$sel:scoreThreshold:GetMLModelResponse'</a>,
--   <a>getMLModelResponse_scoreThreshold</a> - The scoring threshold is
--   used in binary classification <tt>MLModel</tt> models. It marks the
--   boundary between a positive prediction and a negative prediction.
--   
--   Output values greater than or equal to the threshold receive a
--   positive result from the MLModel, such as <tt>true</tt>. Output values
--   less than the threshold receive a negative response from the MLModel,
--   such as <tt>false</tt>.
--   
--   <a>$sel:mLModelType:GetMLModelResponse'</a>,
--   <a>getMLModelResponse_mLModelType</a> - Identifies the
--   <tt>MLModel</tt> category. The following are the available types:
--   
--   <ul>
--   <li>REGRESSION -- Produces a numeric result. For example, "What price
--   should a house be listed at?"</li>
--   <li>BINARY -- Produces one of two possible results. For example, "Is
--   this an e-commerce website?"</li>
--   <li>MULTICLASS -- Produces one of several possible results. For
--   example, "Is this a HIGH, LOW or MEDIUM risk trade?"</li>
--   </ul>
--   
--   <a>$sel:sizeInBytes:GetMLModelResponse'</a>,
--   <a>getMLModelResponse_sizeInBytes</a> - Undocumented member.
--   
--   <a>$sel:mLModelId:GetMLModel'</a>, <a>getMLModelResponse_mLModelId</a>
--   - The MLModel ID, which is same as the <tt>MLModelId</tt> in the
--   request.
--   
--   <a>$sel:inputDataLocationS3:GetMLModelResponse'</a>,
--   <a>getMLModelResponse_inputDataLocationS3</a> - The location of the
--   data file or directory in Amazon Simple Storage Service (Amazon S3).
--   
--   <a>$sel:computeTime:GetMLModelResponse'</a>,
--   <a>getMLModelResponse_computeTime</a> - The approximate CPU time in
--   milliseconds that Amazon Machine Learning spent processing the
--   <tt>MLModel</tt>, normalized and scaled on computation resources.
--   <tt>ComputeTime</tt> is only available if the <tt>MLModel</tt> is in
--   the <tt>COMPLETED</tt> state.
--   
--   <a>$sel:trainingDataSourceId:GetMLModelResponse'</a>,
--   <a>getMLModelResponse_trainingDataSourceId</a> - The ID of the
--   training <tt>DataSource</tt>.
--   
--   <a>$sel:lastUpdatedAt:GetMLModelResponse'</a>,
--   <a>getMLModelResponse_lastUpdatedAt</a> - The time of the most recent
--   edit to the <tt>MLModel</tt>. The time is expressed in epoch time.
--   
--   <a>$sel:logUri:GetMLModelResponse'</a>,
--   <a>getMLModelResponse_logUri</a> - A link to the file that contains
--   logs of the <tt>CreateMLModel</tt> operation.
--   
--   <a>$sel:httpStatus:GetMLModelResponse'</a>,
--   <a>getMLModelResponse_httpStatus</a> - The response's http status
--   code.
newGetMLModelResponse :: Int -> GetMLModelResponse

-- | The current status of the <tt>MLModel</tt>. This element can have one
--   of the following values:
--   
--   <ul>
--   <li><tt>PENDING</tt> - Amazon Machine Learning (Amazon ML) submitted a
--   request to describe a <tt>MLModel</tt>.</li>
--   <li><tt>INPROGRESS</tt> - The request is processing.</li>
--   <li><tt>FAILED</tt> - The request did not run to completion. The ML
--   model isn't usable.</li>
--   <li><tt>COMPLETED</tt> - The request completed successfully.</li>
--   <li><tt>DELETED</tt> - The <tt>MLModel</tt> is marked as deleted. It
--   isn't usable.</li>
--   </ul>
getMLModelResponse_status :: Lens' GetMLModelResponse (Maybe EntityStatus)

-- | The epoch time when Amazon Machine Learning marked the
--   <tt>MLModel</tt> as <tt>INPROGRESS</tt>. <tt>StartedAt</tt> isn't
--   available if the <tt>MLModel</tt> is in the <tt>PENDING</tt> state.
getMLModelResponse_startedAt :: Lens' GetMLModelResponse (Maybe UTCTime)

-- | The schema used by all of the data files referenced by the
--   <tt>DataSource</tt>.
--   
--   <b>Note:</b> This parameter is provided as part of the verbose format.
getMLModelResponse_schema :: Lens' GetMLModelResponse (Maybe Text)

-- | A description of the most recent details about accessing the
--   <tt>MLModel</tt>.
getMLModelResponse_message :: Lens' GetMLModelResponse (Maybe Text)

-- | The recipe to use when training the <tt>MLModel</tt>. The
--   <tt>Recipe</tt> provides detailed information about the observation
--   data to use during training, and manipulations to perform on the
--   observation data during training.
--   
--   <b>Note:</b> This parameter is provided as part of the verbose format.
getMLModelResponse_recipe :: Lens' GetMLModelResponse (Maybe Text)

-- | The time that the <tt>MLModel</tt> was created. The time is expressed
--   in epoch time.
getMLModelResponse_createdAt :: Lens' GetMLModelResponse (Maybe UTCTime)

-- | The time of the most recent edit to the <tt>ScoreThreshold</tt>. The
--   time is expressed in epoch time.
getMLModelResponse_scoreThresholdLastUpdatedAt :: Lens' GetMLModelResponse (Maybe UTCTime)

-- | The current endpoint of the <tt>MLModel</tt>
getMLModelResponse_endpointInfo :: Lens' GetMLModelResponse (Maybe RealtimeEndpointInfo)

-- | A list of the training parameters in the <tt>MLModel</tt>. The list is
--   implemented as a map of key-value pairs.
--   
--   The following is the current set of training parameters:
--   
--   <ul>
--   <li><tt>sgd.maxMLModelSizeInBytes</tt> - The maximum allowed size of
--   the model. Depending on the input data, the size of the model might
--   affect its performance.The value is an integer that ranges from
--   <tt>100000</tt> to <tt>2147483648</tt>. The default value is
--   <tt>33554432</tt>.</li>
--   <li><tt>sgd.maxPasses</tt> - The number of times that the training
--   process traverses the observations to build the <tt>MLModel</tt>. The
--   value is an integer that ranges from <tt>1</tt> to <tt>10000</tt>. The
--   default value is <tt>10</tt>.</li>
--   <li><tt>sgd.shuffleType</tt> - Whether Amazon ML shuffles the training
--   data. Shuffling data improves a model's ability to find the optimal
--   solution for a variety of data types. The valid values are
--   <tt>auto</tt> and <tt>none</tt>. The default value is <tt>none</tt>.
--   We strongly recommend that you shuffle your data.</li>
--   <li><tt>sgd.l1RegularizationAmount</tt> - The coefficient
--   regularization L1 norm. It controls overfitting the data by penalizing
--   large coefficients. This tends to drive coefficients to zero,
--   resulting in a sparse feature set. If you use this parameter, start by
--   specifying a small value, such as <tt>1.0E-08</tt>.The value is a
--   double that ranges from <tt>0</tt> to <tt>MAX_DOUBLE</tt>. The default
--   is to not use L1 normalization. This parameter can't be used when
--   <tt>L2</tt> is specified. Use this parameter sparingly.</li>
--   <li><tt>sgd.l2RegularizationAmount</tt> - The coefficient
--   regularization L2 norm. It controls overfitting the data by penalizing
--   large coefficients. This tends to drive coefficients to small, nonzero
--   values. If you use this parameter, start by specifying a small value,
--   such as <tt>1.0E-08</tt>.The value is a double that ranges from
--   <tt>0</tt> to <tt>MAX_DOUBLE</tt>. The default is to not use L2
--   normalization. This parameter can't be used when <tt>L1</tt> is
--   specified. Use this parameter sparingly.</li>
--   </ul>
getMLModelResponse_trainingParameters :: Lens' GetMLModelResponse (Maybe (HashMap Text Text))

-- | A user-supplied name or description of the <tt>MLModel</tt>.
getMLModelResponse_name :: Lens' GetMLModelResponse (Maybe Text)

-- | The AWS user account from which the <tt>MLModel</tt> was created. The
--   account type can be either an AWS root account or an AWS Identity and
--   Access Management (IAM) user account.
getMLModelResponse_createdByIamUser :: Lens' GetMLModelResponse (Maybe Text)

-- | The epoch time when Amazon Machine Learning marked the
--   <tt>MLModel</tt> as <tt>COMPLETED</tt> or <tt>FAILED</tt>.
--   <tt>FinishedAt</tt> is only available when the <tt>MLModel</tt> is in
--   the <tt>COMPLETED</tt> or <tt>FAILED</tt> state.
getMLModelResponse_finishedAt :: Lens' GetMLModelResponse (Maybe UTCTime)

-- | The scoring threshold is used in binary classification
--   <tt>MLModel</tt> models. It marks the boundary between a positive
--   prediction and a negative prediction.
--   
--   Output values greater than or equal to the threshold receive a
--   positive result from the MLModel, such as <tt>true</tt>. Output values
--   less than the threshold receive a negative response from the MLModel,
--   such as <tt>false</tt>.
getMLModelResponse_scoreThreshold :: Lens' GetMLModelResponse (Maybe Double)

-- | Identifies the <tt>MLModel</tt> category. The following are the
--   available types:
--   
--   <ul>
--   <li>REGRESSION -- Produces a numeric result. For example, "What price
--   should a house be listed at?"</li>
--   <li>BINARY -- Produces one of two possible results. For example, "Is
--   this an e-commerce website?"</li>
--   <li>MULTICLASS -- Produces one of several possible results. For
--   example, "Is this a HIGH, LOW or MEDIUM risk trade?"</li>
--   </ul>
getMLModelResponse_mLModelType :: Lens' GetMLModelResponse (Maybe MLModelType)

-- | Undocumented member.
getMLModelResponse_sizeInBytes :: Lens' GetMLModelResponse (Maybe Integer)

-- | The MLModel ID, which is same as the <tt>MLModelId</tt> in the
--   request.
getMLModelResponse_mLModelId :: Lens' GetMLModelResponse (Maybe Text)

-- | The location of the data file or directory in Amazon Simple Storage
--   Service (Amazon S3).
getMLModelResponse_inputDataLocationS3 :: Lens' GetMLModelResponse (Maybe Text)

-- | The approximate CPU time in milliseconds that Amazon Machine Learning
--   spent processing the <tt>MLModel</tt>, normalized and scaled on
--   computation resources. <tt>ComputeTime</tt> is only available if the
--   <tt>MLModel</tt> is in the <tt>COMPLETED</tt> state.
getMLModelResponse_computeTime :: Lens' GetMLModelResponse (Maybe Integer)

-- | The ID of the training <tt>DataSource</tt>.
getMLModelResponse_trainingDataSourceId :: Lens' GetMLModelResponse (Maybe Text)

-- | The time of the most recent edit to the <tt>MLModel</tt>. The time is
--   expressed in epoch time.
getMLModelResponse_lastUpdatedAt :: Lens' GetMLModelResponse (Maybe UTCTime)

-- | A link to the file that contains logs of the <tt>CreateMLModel</tt>
--   operation.
getMLModelResponse_logUri :: Lens' GetMLModelResponse (Maybe Text)

-- | The response's http status code.
getMLModelResponse_httpStatus :: Lens' GetMLModelResponse Int
instance GHC.Generics.Generic Network.AWS.MachineLearning.GetMLModel.GetMLModel
instance GHC.Show.Show Network.AWS.MachineLearning.GetMLModel.GetMLModel
instance GHC.Read.Read Network.AWS.MachineLearning.GetMLModel.GetMLModel
instance GHC.Classes.Eq Network.AWS.MachineLearning.GetMLModel.GetMLModel
instance GHC.Generics.Generic Network.AWS.MachineLearning.GetMLModel.GetMLModelResponse
instance GHC.Show.Show Network.AWS.MachineLearning.GetMLModel.GetMLModelResponse
instance GHC.Read.Read Network.AWS.MachineLearning.GetMLModel.GetMLModelResponse
instance GHC.Classes.Eq Network.AWS.MachineLearning.GetMLModel.GetMLModelResponse
instance Network.AWS.Types.AWSRequest Network.AWS.MachineLearning.GetMLModel.GetMLModel
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.GetMLModel.GetMLModelResponse
instance Data.Hashable.Class.Hashable Network.AWS.MachineLearning.GetMLModel.GetMLModel
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.GetMLModel.GetMLModel
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.MachineLearning.GetMLModel.GetMLModel
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MachineLearning.GetMLModel.GetMLModel
instance Network.AWS.Data.Path.ToPath Network.AWS.MachineLearning.GetMLModel.GetMLModel
instance Network.AWS.Data.Query.ToQuery Network.AWS.MachineLearning.GetMLModel.GetMLModel


-- | Returns an <tt>Evaluation</tt> that includes metadata as well as the
--   current status of the <tt>Evaluation</tt>.
module Network.AWS.MachineLearning.GetEvaluation

-- | <i>See:</i> <a>newGetEvaluation</a> smart constructor.
data GetEvaluation
GetEvaluation' :: Text -> GetEvaluation

-- | The ID of the <tt>Evaluation</tt> to retrieve. The evaluation of each
--   <tt>MLModel</tt> is recorded and cataloged. The ID provides the means
--   to access the information.
[$sel:evaluationId:GetEvaluation'] :: GetEvaluation -> Text

-- | Create a value of <a>GetEvaluation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:evaluationId:GetEvaluation'</a>,
--   <a>getEvaluation_evaluationId</a> - The ID of the <tt>Evaluation</tt>
--   to retrieve. The evaluation of each <tt>MLModel</tt> is recorded and
--   cataloged. The ID provides the means to access the information.
newGetEvaluation :: Text -> GetEvaluation

-- | The ID of the <tt>Evaluation</tt> to retrieve. The evaluation of each
--   <tt>MLModel</tt> is recorded and cataloged. The ID provides the means
--   to access the information.
getEvaluation_evaluationId :: Lens' GetEvaluation Text

-- | Represents the output of a <tt>GetEvaluation</tt> operation and
--   describes an <tt>Evaluation</tt>.
--   
--   <i>See:</i> <a>newGetEvaluationResponse</a> smart constructor.
data GetEvaluationResponse
GetEvaluationResponse' :: Maybe PerformanceMetrics -> Maybe EntityStatus -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Integer -> Maybe POSIX -> Maybe Text -> Int -> GetEvaluationResponse

-- | Measurements of how well the <tt>MLModel</tt> performed using
--   observations referenced by the <tt>DataSource</tt>. One of the
--   following metric is returned based on the type of the
--   <tt>MLModel</tt>:
--   
--   <ul>
--   <li>BinaryAUC: A binary <tt>MLModel</tt> uses the Area Under the Curve
--   (AUC) technique to measure performance.</li>
--   <li>RegressionRMSE: A regression <tt>MLModel</tt> uses the Root Mean
--   Square Error (RMSE) technique to measure performance. RMSE measures
--   the difference between predicted and actual values for a single
--   variable.</li>
--   <li>MulticlassAvgFScore: A multiclass <tt>MLModel</tt> uses the F1
--   score technique to measure performance.</li>
--   </ul>
--   
--   For more information about performance metrics, please see the
--   <a>Amazon Machine Learning Developer Guide</a>.
[$sel:performanceMetrics:GetEvaluationResponse'] :: GetEvaluationResponse -> Maybe PerformanceMetrics

-- | The status of the evaluation. This element can have one of the
--   following values:
--   
--   <ul>
--   <li><tt>PENDING</tt> - Amazon Machine Language (Amazon ML) submitted a
--   request to evaluate an <tt>MLModel</tt>.</li>
--   <li><tt>INPROGRESS</tt> - The evaluation is underway.</li>
--   <li><tt>FAILED</tt> - The request to evaluate an <tt>MLModel</tt> did
--   not run to completion. It is not usable.</li>
--   <li><tt>COMPLETED</tt> - The evaluation process completed
--   successfully.</li>
--   <li><tt>DELETED</tt> - The <tt>Evaluation</tt> is marked as deleted.
--   It is not usable.</li>
--   </ul>
[$sel:status:GetEvaluationResponse'] :: GetEvaluationResponse -> Maybe EntityStatus

-- | The epoch time when Amazon Machine Learning marked the
--   <tt>Evaluation</tt> as <tt>INPROGRESS</tt>. <tt>StartedAt</tt> isn't
--   available if the <tt>Evaluation</tt> is in the <tt>PENDING</tt> state.
[$sel:startedAt:GetEvaluationResponse'] :: GetEvaluationResponse -> Maybe POSIX

-- | The <tt>DataSource</tt> used for this evaluation.
[$sel:evaluationDataSourceId:GetEvaluationResponse'] :: GetEvaluationResponse -> Maybe Text

-- | A description of the most recent details about evaluating the
--   <tt>MLModel</tt>.
[$sel:message:GetEvaluationResponse'] :: GetEvaluationResponse -> Maybe Text

-- | The time that the <tt>Evaluation</tt> was created. The time is
--   expressed in epoch time.
[$sel:createdAt:GetEvaluationResponse'] :: GetEvaluationResponse -> Maybe POSIX

-- | A user-supplied name or description of the <tt>Evaluation</tt>.
[$sel:name:GetEvaluationResponse'] :: GetEvaluationResponse -> Maybe Text

-- | The AWS user account that invoked the evaluation. The account type can
--   be either an AWS root account or an AWS Identity and Access Management
--   (IAM) user account.
[$sel:createdByIamUser:GetEvaluationResponse'] :: GetEvaluationResponse -> Maybe Text

-- | The epoch time when Amazon Machine Learning marked the
--   <tt>Evaluation</tt> as <tt>COMPLETED</tt> or <tt>FAILED</tt>.
--   <tt>FinishedAt</tt> is only available when the <tt>Evaluation</tt> is
--   in the <tt>COMPLETED</tt> or <tt>FAILED</tt> state.
[$sel:finishedAt:GetEvaluationResponse'] :: GetEvaluationResponse -> Maybe POSIX

-- | The ID of the <tt>MLModel</tt> that was the focus of the evaluation.
[$sel:mLModelId:GetEvaluationResponse'] :: GetEvaluationResponse -> Maybe Text

-- | The evaluation ID which is same as the <tt>EvaluationId</tt> in the
--   request.
[$sel:evaluationId:GetEvaluationResponse'] :: GetEvaluationResponse -> Maybe Text

-- | The location of the data file or directory in Amazon Simple Storage
--   Service (Amazon S3).
[$sel:inputDataLocationS3:GetEvaluationResponse'] :: GetEvaluationResponse -> Maybe Text

-- | The approximate CPU time in milliseconds that Amazon Machine Learning
--   spent processing the <tt>Evaluation</tt>, normalized and scaled on
--   computation resources. <tt>ComputeTime</tt> is only available if the
--   <tt>Evaluation</tt> is in the <tt>COMPLETED</tt> state.
[$sel:computeTime:GetEvaluationResponse'] :: GetEvaluationResponse -> Maybe Integer

-- | The time of the most recent edit to the <tt>Evaluation</tt>. The time
--   is expressed in epoch time.
[$sel:lastUpdatedAt:GetEvaluationResponse'] :: GetEvaluationResponse -> Maybe POSIX

-- | A link to the file that contains logs of the <tt>CreateEvaluation</tt>
--   operation.
[$sel:logUri:GetEvaluationResponse'] :: GetEvaluationResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetEvaluationResponse'] :: GetEvaluationResponse -> Int

-- | Create a value of <a>GetEvaluationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:performanceMetrics:GetEvaluationResponse'</a>,
--   <a>getEvaluationResponse_performanceMetrics</a> - Measurements of how
--   well the <tt>MLModel</tt> performed using observations referenced by
--   the <tt>DataSource</tt>. One of the following metric is returned based
--   on the type of the <tt>MLModel</tt>:
--   
--   <ul>
--   <li>BinaryAUC: A binary <tt>MLModel</tt> uses the Area Under the Curve
--   (AUC) technique to measure performance.</li>
--   <li>RegressionRMSE: A regression <tt>MLModel</tt> uses the Root Mean
--   Square Error (RMSE) technique to measure performance. RMSE measures
--   the difference between predicted and actual values for a single
--   variable.</li>
--   <li>MulticlassAvgFScore: A multiclass <tt>MLModel</tt> uses the F1
--   score technique to measure performance.</li>
--   </ul>
--   
--   For more information about performance metrics, please see the
--   <a>Amazon Machine Learning Developer Guide</a>.
--   
--   <a>$sel:status:GetEvaluationResponse'</a>,
--   <a>getEvaluationResponse_status</a> - The status of the evaluation.
--   This element can have one of the following values:
--   
--   <ul>
--   <li><tt>PENDING</tt> - Amazon Machine Language (Amazon ML) submitted a
--   request to evaluate an <tt>MLModel</tt>.</li>
--   <li><tt>INPROGRESS</tt> - The evaluation is underway.</li>
--   <li><tt>FAILED</tt> - The request to evaluate an <tt>MLModel</tt> did
--   not run to completion. It is not usable.</li>
--   <li><tt>COMPLETED</tt> - The evaluation process completed
--   successfully.</li>
--   <li><tt>DELETED</tt> - The <tt>Evaluation</tt> is marked as deleted.
--   It is not usable.</li>
--   </ul>
--   
--   <a>$sel:startedAt:GetEvaluationResponse'</a>,
--   <a>getEvaluationResponse_startedAt</a> - The epoch time when Amazon
--   Machine Learning marked the <tt>Evaluation</tt> as
--   <tt>INPROGRESS</tt>. <tt>StartedAt</tt> isn't available if the
--   <tt>Evaluation</tt> is in the <tt>PENDING</tt> state.
--   
--   <a>$sel:evaluationDataSourceId:GetEvaluationResponse'</a>,
--   <a>getEvaluationResponse_evaluationDataSourceId</a> - The
--   <tt>DataSource</tt> used for this evaluation.
--   
--   <a>$sel:message:GetEvaluationResponse'</a>,
--   <a>getEvaluationResponse_message</a> - A description of the most
--   recent details about evaluating the <tt>MLModel</tt>.
--   
--   <a>$sel:createdAt:GetEvaluationResponse'</a>,
--   <a>getEvaluationResponse_createdAt</a> - The time that the
--   <tt>Evaluation</tt> was created. The time is expressed in epoch time.
--   
--   <a>$sel:name:GetEvaluationResponse'</a>,
--   <a>getEvaluationResponse_name</a> - A user-supplied name or
--   description of the <tt>Evaluation</tt>.
--   
--   <a>$sel:createdByIamUser:GetEvaluationResponse'</a>,
--   <a>getEvaluationResponse_createdByIamUser</a> - The AWS user account
--   that invoked the evaluation. The account type can be either an AWS
--   root account or an AWS Identity and Access Management (IAM) user
--   account.
--   
--   <a>$sel:finishedAt:GetEvaluationResponse'</a>,
--   <a>getEvaluationResponse_finishedAt</a> - The epoch time when Amazon
--   Machine Learning marked the <tt>Evaluation</tt> as <tt>COMPLETED</tt>
--   or <tt>FAILED</tt>. <tt>FinishedAt</tt> is only available when the
--   <tt>Evaluation</tt> is in the <tt>COMPLETED</tt> or <tt>FAILED</tt>
--   state.
--   
--   <a>$sel:mLModelId:GetEvaluationResponse'</a>,
--   <a>getEvaluationResponse_mLModelId</a> - The ID of the
--   <tt>MLModel</tt> that was the focus of the evaluation.
--   
--   <a>$sel:evaluationId:GetEvaluation'</a>,
--   <a>getEvaluationResponse_evaluationId</a> - The evaluation ID which is
--   same as the <tt>EvaluationId</tt> in the request.
--   
--   <a>$sel:inputDataLocationS3:GetEvaluationResponse'</a>,
--   <a>getEvaluationResponse_inputDataLocationS3</a> - The location of the
--   data file or directory in Amazon Simple Storage Service (Amazon S3).
--   
--   <a>$sel:computeTime:GetEvaluationResponse'</a>,
--   <a>getEvaluationResponse_computeTime</a> - The approximate CPU time in
--   milliseconds that Amazon Machine Learning spent processing the
--   <tt>Evaluation</tt>, normalized and scaled on computation resources.
--   <tt>ComputeTime</tt> is only available if the <tt>Evaluation</tt> is
--   in the <tt>COMPLETED</tt> state.
--   
--   <a>$sel:lastUpdatedAt:GetEvaluationResponse'</a>,
--   <a>getEvaluationResponse_lastUpdatedAt</a> - The time of the most
--   recent edit to the <tt>Evaluation</tt>. The time is expressed in epoch
--   time.
--   
--   <a>$sel:logUri:GetEvaluationResponse'</a>,
--   <a>getEvaluationResponse_logUri</a> - A link to the file that contains
--   logs of the <tt>CreateEvaluation</tt> operation.
--   
--   <a>$sel:httpStatus:GetEvaluationResponse'</a>,
--   <a>getEvaluationResponse_httpStatus</a> - The response's http status
--   code.
newGetEvaluationResponse :: Int -> GetEvaluationResponse

-- | Measurements of how well the <tt>MLModel</tt> performed using
--   observations referenced by the <tt>DataSource</tt>. One of the
--   following metric is returned based on the type of the
--   <tt>MLModel</tt>:
--   
--   <ul>
--   <li>BinaryAUC: A binary <tt>MLModel</tt> uses the Area Under the Curve
--   (AUC) technique to measure performance.</li>
--   <li>RegressionRMSE: A regression <tt>MLModel</tt> uses the Root Mean
--   Square Error (RMSE) technique to measure performance. RMSE measures
--   the difference between predicted and actual values for a single
--   variable.</li>
--   <li>MulticlassAvgFScore: A multiclass <tt>MLModel</tt> uses the F1
--   score technique to measure performance.</li>
--   </ul>
--   
--   For more information about performance metrics, please see the
--   <a>Amazon Machine Learning Developer Guide</a>.
getEvaluationResponse_performanceMetrics :: Lens' GetEvaluationResponse (Maybe PerformanceMetrics)

-- | The status of the evaluation. This element can have one of the
--   following values:
--   
--   <ul>
--   <li><tt>PENDING</tt> - Amazon Machine Language (Amazon ML) submitted a
--   request to evaluate an <tt>MLModel</tt>.</li>
--   <li><tt>INPROGRESS</tt> - The evaluation is underway.</li>
--   <li><tt>FAILED</tt> - The request to evaluate an <tt>MLModel</tt> did
--   not run to completion. It is not usable.</li>
--   <li><tt>COMPLETED</tt> - The evaluation process completed
--   successfully.</li>
--   <li><tt>DELETED</tt> - The <tt>Evaluation</tt> is marked as deleted.
--   It is not usable.</li>
--   </ul>
getEvaluationResponse_status :: Lens' GetEvaluationResponse (Maybe EntityStatus)

-- | The epoch time when Amazon Machine Learning marked the
--   <tt>Evaluation</tt> as <tt>INPROGRESS</tt>. <tt>StartedAt</tt> isn't
--   available if the <tt>Evaluation</tt> is in the <tt>PENDING</tt> state.
getEvaluationResponse_startedAt :: Lens' GetEvaluationResponse (Maybe UTCTime)

-- | The <tt>DataSource</tt> used for this evaluation.
getEvaluationResponse_evaluationDataSourceId :: Lens' GetEvaluationResponse (Maybe Text)

-- | A description of the most recent details about evaluating the
--   <tt>MLModel</tt>.
getEvaluationResponse_message :: Lens' GetEvaluationResponse (Maybe Text)

-- | The time that the <tt>Evaluation</tt> was created. The time is
--   expressed in epoch time.
getEvaluationResponse_createdAt :: Lens' GetEvaluationResponse (Maybe UTCTime)

-- | A user-supplied name or description of the <tt>Evaluation</tt>.
getEvaluationResponse_name :: Lens' GetEvaluationResponse (Maybe Text)

-- | The AWS user account that invoked the evaluation. The account type can
--   be either an AWS root account or an AWS Identity and Access Management
--   (IAM) user account.
getEvaluationResponse_createdByIamUser :: Lens' GetEvaluationResponse (Maybe Text)

-- | The epoch time when Amazon Machine Learning marked the
--   <tt>Evaluation</tt> as <tt>COMPLETED</tt> or <tt>FAILED</tt>.
--   <tt>FinishedAt</tt> is only available when the <tt>Evaluation</tt> is
--   in the <tt>COMPLETED</tt> or <tt>FAILED</tt> state.
getEvaluationResponse_finishedAt :: Lens' GetEvaluationResponse (Maybe UTCTime)

-- | The ID of the <tt>MLModel</tt> that was the focus of the evaluation.
getEvaluationResponse_mLModelId :: Lens' GetEvaluationResponse (Maybe Text)

-- | The evaluation ID which is same as the <tt>EvaluationId</tt> in the
--   request.
getEvaluationResponse_evaluationId :: Lens' GetEvaluationResponse (Maybe Text)

-- | The location of the data file or directory in Amazon Simple Storage
--   Service (Amazon S3).
getEvaluationResponse_inputDataLocationS3 :: Lens' GetEvaluationResponse (Maybe Text)

-- | The approximate CPU time in milliseconds that Amazon Machine Learning
--   spent processing the <tt>Evaluation</tt>, normalized and scaled on
--   computation resources. <tt>ComputeTime</tt> is only available if the
--   <tt>Evaluation</tt> is in the <tt>COMPLETED</tt> state.
getEvaluationResponse_computeTime :: Lens' GetEvaluationResponse (Maybe Integer)

-- | The time of the most recent edit to the <tt>Evaluation</tt>. The time
--   is expressed in epoch time.
getEvaluationResponse_lastUpdatedAt :: Lens' GetEvaluationResponse (Maybe UTCTime)

-- | A link to the file that contains logs of the <tt>CreateEvaluation</tt>
--   operation.
getEvaluationResponse_logUri :: Lens' GetEvaluationResponse (Maybe Text)

-- | The response's http status code.
getEvaluationResponse_httpStatus :: Lens' GetEvaluationResponse Int
instance GHC.Generics.Generic Network.AWS.MachineLearning.GetEvaluation.GetEvaluation
instance GHC.Show.Show Network.AWS.MachineLearning.GetEvaluation.GetEvaluation
instance GHC.Read.Read Network.AWS.MachineLearning.GetEvaluation.GetEvaluation
instance GHC.Classes.Eq Network.AWS.MachineLearning.GetEvaluation.GetEvaluation
instance GHC.Generics.Generic Network.AWS.MachineLearning.GetEvaluation.GetEvaluationResponse
instance GHC.Show.Show Network.AWS.MachineLearning.GetEvaluation.GetEvaluationResponse
instance GHC.Read.Read Network.AWS.MachineLearning.GetEvaluation.GetEvaluationResponse
instance GHC.Classes.Eq Network.AWS.MachineLearning.GetEvaluation.GetEvaluationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.MachineLearning.GetEvaluation.GetEvaluation
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.GetEvaluation.GetEvaluationResponse
instance Data.Hashable.Class.Hashable Network.AWS.MachineLearning.GetEvaluation.GetEvaluation
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.GetEvaluation.GetEvaluation
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.MachineLearning.GetEvaluation.GetEvaluation
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MachineLearning.GetEvaluation.GetEvaluation
instance Network.AWS.Data.Path.ToPath Network.AWS.MachineLearning.GetEvaluation.GetEvaluation
instance Network.AWS.Data.Query.ToQuery Network.AWS.MachineLearning.GetEvaluation.GetEvaluation


-- | Returns a <tt>DataSource</tt> that includes metadata and data file
--   information, as well as the current status of the <tt>DataSource</tt>.
--   
--   <tt>GetDataSource</tt> provides results in normal or verbose format.
--   The verbose format adds the schema description and the list of files
--   pointed to by the DataSource to the normal format.
module Network.AWS.MachineLearning.GetDataSource

-- | <i>See:</i> <a>newGetDataSource</a> smart constructor.
data GetDataSource
GetDataSource' :: Maybe Bool -> Text -> GetDataSource

-- | Specifies whether the <tt>GetDataSource</tt> operation should return
--   <tt>DataSourceSchema</tt>.
--   
--   If true, <tt>DataSourceSchema</tt> is returned.
--   
--   If false, <tt>DataSourceSchema</tt> is not returned.
[$sel:verbose:GetDataSource'] :: GetDataSource -> Maybe Bool

-- | The ID assigned to the <tt>DataSource</tt> at creation.
[$sel:dataSourceId:GetDataSource'] :: GetDataSource -> Text

-- | Create a value of <a>GetDataSource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:verbose:GetDataSource'</a>, <a>getDataSource_verbose</a> -
--   Specifies whether the <tt>GetDataSource</tt> operation should return
--   <tt>DataSourceSchema</tt>.
--   
--   If true, <tt>DataSourceSchema</tt> is returned.
--   
--   If false, <tt>DataSourceSchema</tt> is not returned.
--   
--   <a>$sel:dataSourceId:GetDataSource'</a>,
--   <a>getDataSource_dataSourceId</a> - The ID assigned to the
--   <tt>DataSource</tt> at creation.
newGetDataSource :: Text -> GetDataSource

-- | Specifies whether the <tt>GetDataSource</tt> operation should return
--   <tt>DataSourceSchema</tt>.
--   
--   If true, <tt>DataSourceSchema</tt> is returned.
--   
--   If false, <tt>DataSourceSchema</tt> is not returned.
getDataSource_verbose :: Lens' GetDataSource (Maybe Bool)

-- | The ID assigned to the <tt>DataSource</tt> at creation.
getDataSource_dataSourceId :: Lens' GetDataSource Text

-- | Represents the output of a <tt>GetDataSource</tt> operation and
--   describes a <tt>DataSource</tt>.
--   
--   <i>See:</i> <a>newGetDataSourceResponse</a> smart constructor.
data GetDataSourceResponse
GetDataSourceResponse' :: Maybe EntityStatus -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe RedshiftMetadata -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Integer -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Integer -> Maybe Integer -> Maybe RDSMetadata -> Maybe POSIX -> Maybe Text -> Int -> GetDataSourceResponse

-- | The current status of the <tt>DataSource</tt>. This element can have
--   one of the following values:
--   
--   <ul>
--   <li><tt>PENDING</tt> - Amazon ML submitted a request to create a
--   <tt>DataSource</tt>.</li>
--   <li><tt>INPROGRESS</tt> - The creation process is underway.</li>
--   <li><tt>FAILED</tt> - The request to create a <tt>DataSource</tt> did
--   not run to completion. It is not usable.</li>
--   <li><tt>COMPLETED</tt> - The creation process completed
--   successfully.</li>
--   <li><tt>DELETED</tt> - The <tt>DataSource</tt> is marked as deleted.
--   It is not usable.</li>
--   </ul>
[$sel:status:GetDataSourceResponse'] :: GetDataSourceResponse -> Maybe EntityStatus

-- | The epoch time when Amazon Machine Learning marked the
--   <tt>DataSource</tt> as <tt>INPROGRESS</tt>. <tt>StartedAt</tt> isn't
--   available if the <tt>DataSource</tt> is in the <tt>PENDING</tt> state.
[$sel:startedAt:GetDataSourceResponse'] :: GetDataSourceResponse -> Maybe POSIX
[$sel:roleARN:GetDataSourceResponse'] :: GetDataSourceResponse -> Maybe Text

-- | A JSON string that represents the splitting and rearrangement
--   requirement used when this <tt>DataSource</tt> was created.
[$sel:dataRearrangement:GetDataSourceResponse'] :: GetDataSourceResponse -> Maybe Text
[$sel:redshiftMetadata:GetDataSourceResponse'] :: GetDataSourceResponse -> Maybe RedshiftMetadata

-- | The user-supplied description of the most recent details about
--   creating the <tt>DataSource</tt>.
[$sel:message:GetDataSourceResponse'] :: GetDataSourceResponse -> Maybe Text

-- | The ID assigned to the <tt>DataSource</tt> at creation. This value
--   should be identical to the value of the <tt>DataSourceId</tt> in the
--   request.
[$sel:dataSourceId:GetDataSourceResponse'] :: GetDataSourceResponse -> Maybe Text

-- | The parameter is <tt>true</tt> if statistics need to be generated from
--   the observation data.
[$sel:computeStatistics:GetDataSourceResponse'] :: GetDataSourceResponse -> Maybe Bool

-- | The time that the <tt>DataSource</tt> was created. The time is
--   expressed in epoch time.
[$sel:createdAt:GetDataSourceResponse'] :: GetDataSourceResponse -> Maybe POSIX

-- | The location of the data file or directory in Amazon Simple Storage
--   Service (Amazon S3).
[$sel:dataLocationS3:GetDataSourceResponse'] :: GetDataSourceResponse -> Maybe Text

-- | A user-supplied name or description of the <tt>DataSource</tt>.
[$sel:name:GetDataSourceResponse'] :: GetDataSourceResponse -> Maybe Text

-- | The number of data files referenced by the <tt>DataSource</tt>.
[$sel:numberOfFiles:GetDataSourceResponse'] :: GetDataSourceResponse -> Maybe Integer

-- | The AWS user account from which the <tt>DataSource</tt> was created.
--   The account type can be either an AWS root account or an AWS Identity
--   and Access Management (IAM) user account.
[$sel:createdByIamUser:GetDataSourceResponse'] :: GetDataSourceResponse -> Maybe Text

-- | The epoch time when Amazon Machine Learning marked the
--   <tt>DataSource</tt> as <tt>COMPLETED</tt> or <tt>FAILED</tt>.
--   <tt>FinishedAt</tt> is only available when the <tt>DataSource</tt> is
--   in the <tt>COMPLETED</tt> or <tt>FAILED</tt> state.
[$sel:finishedAt:GetDataSourceResponse'] :: GetDataSourceResponse -> Maybe POSIX

-- | The schema used by all of the data files of this <tt>DataSource</tt>.
--   
--   <b>Note:</b> This parameter is provided as part of the verbose format.
[$sel:dataSourceSchema:GetDataSourceResponse'] :: GetDataSourceResponse -> Maybe Text

-- | The total size of observations in the data files.
[$sel:dataSizeInBytes:GetDataSourceResponse'] :: GetDataSourceResponse -> Maybe Integer

-- | The approximate CPU time in milliseconds that Amazon Machine Learning
--   spent processing the <tt>DataSource</tt>, normalized and scaled on
--   computation resources. <tt>ComputeTime</tt> is only available if the
--   <tt>DataSource</tt> is in the <tt>COMPLETED</tt> state and the
--   <tt>ComputeStatistics</tt> is set to true.
[$sel:computeTime:GetDataSourceResponse'] :: GetDataSourceResponse -> Maybe Integer
[$sel:rDSMetadata:GetDataSourceResponse'] :: GetDataSourceResponse -> Maybe RDSMetadata

-- | The time of the most recent edit to the <tt>DataSource</tt>. The time
--   is expressed in epoch time.
[$sel:lastUpdatedAt:GetDataSourceResponse'] :: GetDataSourceResponse -> Maybe POSIX

-- | A link to the file containing logs of <tt>CreateDataSourceFrom*</tt>
--   operations.
[$sel:logUri:GetDataSourceResponse'] :: GetDataSourceResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetDataSourceResponse'] :: GetDataSourceResponse -> Int

-- | Create a value of <a>GetDataSourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:GetDataSourceResponse'</a>,
--   <a>getDataSourceResponse_status</a> - The current status of the
--   <tt>DataSource</tt>. This element can have one of the following
--   values:
--   
--   <ul>
--   <li><tt>PENDING</tt> - Amazon ML submitted a request to create a
--   <tt>DataSource</tt>.</li>
--   <li><tt>INPROGRESS</tt> - The creation process is underway.</li>
--   <li><tt>FAILED</tt> - The request to create a <tt>DataSource</tt> did
--   not run to completion. It is not usable.</li>
--   <li><tt>COMPLETED</tt> - The creation process completed
--   successfully.</li>
--   <li><tt>DELETED</tt> - The <tt>DataSource</tt> is marked as deleted.
--   It is not usable.</li>
--   </ul>
--   
--   <a>$sel:startedAt:GetDataSourceResponse'</a>,
--   <a>getDataSourceResponse_startedAt</a> - The epoch time when Amazon
--   Machine Learning marked the <tt>DataSource</tt> as
--   <tt>INPROGRESS</tt>. <tt>StartedAt</tt> isn't available if the
--   <tt>DataSource</tt> is in the <tt>PENDING</tt> state.
--   
--   <a>$sel:roleARN:GetDataSourceResponse'</a>,
--   <a>getDataSourceResponse_roleARN</a> - Undocumented member.
--   
--   <a>$sel:dataRearrangement:GetDataSourceResponse'</a>,
--   <a>getDataSourceResponse_dataRearrangement</a> - A JSON string that
--   represents the splitting and rearrangement requirement used when this
--   <tt>DataSource</tt> was created.
--   
--   <a>$sel:redshiftMetadata:GetDataSourceResponse'</a>,
--   <a>getDataSourceResponse_redshiftMetadata</a> - Undocumented member.
--   
--   <a>$sel:message:GetDataSourceResponse'</a>,
--   <a>getDataSourceResponse_message</a> - The user-supplied description
--   of the most recent details about creating the <tt>DataSource</tt>.
--   
--   <a>$sel:dataSourceId:GetDataSource'</a>,
--   <a>getDataSourceResponse_dataSourceId</a> - The ID assigned to the
--   <tt>DataSource</tt> at creation. This value should be identical to the
--   value of the <tt>DataSourceId</tt> in the request.
--   
--   <a>$sel:computeStatistics:GetDataSourceResponse'</a>,
--   <a>getDataSourceResponse_computeStatistics</a> - The parameter is
--   <tt>true</tt> if statistics need to be generated from the observation
--   data.
--   
--   <a>$sel:createdAt:GetDataSourceResponse'</a>,
--   <a>getDataSourceResponse_createdAt</a> - The time that the
--   <tt>DataSource</tt> was created. The time is expressed in epoch time.
--   
--   <a>$sel:dataLocationS3:GetDataSourceResponse'</a>,
--   <a>getDataSourceResponse_dataLocationS3</a> - The location of the data
--   file or directory in Amazon Simple Storage Service (Amazon S3).
--   
--   <a>$sel:name:GetDataSourceResponse'</a>,
--   <a>getDataSourceResponse_name</a> - A user-supplied name or
--   description of the <tt>DataSource</tt>.
--   
--   <a>$sel:numberOfFiles:GetDataSourceResponse'</a>,
--   <a>getDataSourceResponse_numberOfFiles</a> - The number of data files
--   referenced by the <tt>DataSource</tt>.
--   
--   <a>$sel:createdByIamUser:GetDataSourceResponse'</a>,
--   <a>getDataSourceResponse_createdByIamUser</a> - The AWS user account
--   from which the <tt>DataSource</tt> was created. The account type can
--   be either an AWS root account or an AWS Identity and Access Management
--   (IAM) user account.
--   
--   <a>$sel:finishedAt:GetDataSourceResponse'</a>,
--   <a>getDataSourceResponse_finishedAt</a> - The epoch time when Amazon
--   Machine Learning marked the <tt>DataSource</tt> as <tt>COMPLETED</tt>
--   or <tt>FAILED</tt>. <tt>FinishedAt</tt> is only available when the
--   <tt>DataSource</tt> is in the <tt>COMPLETED</tt> or <tt>FAILED</tt>
--   state.
--   
--   <a>$sel:dataSourceSchema:GetDataSourceResponse'</a>,
--   <a>getDataSourceResponse_dataSourceSchema</a> - The schema used by all
--   of the data files of this <tt>DataSource</tt>.
--   
--   <b>Note:</b> This parameter is provided as part of the verbose format.
--   
--   <a>$sel:dataSizeInBytes:GetDataSourceResponse'</a>,
--   <a>getDataSourceResponse_dataSizeInBytes</a> - The total size of
--   observations in the data files.
--   
--   <a>$sel:computeTime:GetDataSourceResponse'</a>,
--   <a>getDataSourceResponse_computeTime</a> - The approximate CPU time in
--   milliseconds that Amazon Machine Learning spent processing the
--   <tt>DataSource</tt>, normalized and scaled on computation resources.
--   <tt>ComputeTime</tt> is only available if the <tt>DataSource</tt> is
--   in the <tt>COMPLETED</tt> state and the <tt>ComputeStatistics</tt> is
--   set to true.
--   
--   <a>$sel:rDSMetadata:GetDataSourceResponse'</a>,
--   <a>getDataSourceResponse_rDSMetadata</a> - Undocumented member.
--   
--   <a>$sel:lastUpdatedAt:GetDataSourceResponse'</a>,
--   <a>getDataSourceResponse_lastUpdatedAt</a> - The time of the most
--   recent edit to the <tt>DataSource</tt>. The time is expressed in epoch
--   time.
--   
--   <a>$sel:logUri:GetDataSourceResponse'</a>,
--   <a>getDataSourceResponse_logUri</a> - A link to the file containing
--   logs of <tt>CreateDataSourceFrom*</tt> operations.
--   
--   <a>$sel:httpStatus:GetDataSourceResponse'</a>,
--   <a>getDataSourceResponse_httpStatus</a> - The response's http status
--   code.
newGetDataSourceResponse :: Int -> GetDataSourceResponse

-- | The current status of the <tt>DataSource</tt>. This element can have
--   one of the following values:
--   
--   <ul>
--   <li><tt>PENDING</tt> - Amazon ML submitted a request to create a
--   <tt>DataSource</tt>.</li>
--   <li><tt>INPROGRESS</tt> - The creation process is underway.</li>
--   <li><tt>FAILED</tt> - The request to create a <tt>DataSource</tt> did
--   not run to completion. It is not usable.</li>
--   <li><tt>COMPLETED</tt> - The creation process completed
--   successfully.</li>
--   <li><tt>DELETED</tt> - The <tt>DataSource</tt> is marked as deleted.
--   It is not usable.</li>
--   </ul>
getDataSourceResponse_status :: Lens' GetDataSourceResponse (Maybe EntityStatus)

-- | The epoch time when Amazon Machine Learning marked the
--   <tt>DataSource</tt> as <tt>INPROGRESS</tt>. <tt>StartedAt</tt> isn't
--   available if the <tt>DataSource</tt> is in the <tt>PENDING</tt> state.
getDataSourceResponse_startedAt :: Lens' GetDataSourceResponse (Maybe UTCTime)

-- | Undocumented member.
getDataSourceResponse_roleARN :: Lens' GetDataSourceResponse (Maybe Text)

-- | A JSON string that represents the splitting and rearrangement
--   requirement used when this <tt>DataSource</tt> was created.
getDataSourceResponse_dataRearrangement :: Lens' GetDataSourceResponse (Maybe Text)

-- | Undocumented member.
getDataSourceResponse_redshiftMetadata :: Lens' GetDataSourceResponse (Maybe RedshiftMetadata)

-- | The user-supplied description of the most recent details about
--   creating the <tt>DataSource</tt>.
getDataSourceResponse_message :: Lens' GetDataSourceResponse (Maybe Text)

-- | The ID assigned to the <tt>DataSource</tt> at creation. This value
--   should be identical to the value of the <tt>DataSourceId</tt> in the
--   request.
getDataSourceResponse_dataSourceId :: Lens' GetDataSourceResponse (Maybe Text)

-- | The parameter is <tt>true</tt> if statistics need to be generated from
--   the observation data.
getDataSourceResponse_computeStatistics :: Lens' GetDataSourceResponse (Maybe Bool)

-- | The time that the <tt>DataSource</tt> was created. The time is
--   expressed in epoch time.
getDataSourceResponse_createdAt :: Lens' GetDataSourceResponse (Maybe UTCTime)

-- | The location of the data file or directory in Amazon Simple Storage
--   Service (Amazon S3).
getDataSourceResponse_dataLocationS3 :: Lens' GetDataSourceResponse (Maybe Text)

-- | A user-supplied name or description of the <tt>DataSource</tt>.
getDataSourceResponse_name :: Lens' GetDataSourceResponse (Maybe Text)

-- | The number of data files referenced by the <tt>DataSource</tt>.
getDataSourceResponse_numberOfFiles :: Lens' GetDataSourceResponse (Maybe Integer)

-- | The AWS user account from which the <tt>DataSource</tt> was created.
--   The account type can be either an AWS root account or an AWS Identity
--   and Access Management (IAM) user account.
getDataSourceResponse_createdByIamUser :: Lens' GetDataSourceResponse (Maybe Text)

-- | The epoch time when Amazon Machine Learning marked the
--   <tt>DataSource</tt> as <tt>COMPLETED</tt> or <tt>FAILED</tt>.
--   <tt>FinishedAt</tt> is only available when the <tt>DataSource</tt> is
--   in the <tt>COMPLETED</tt> or <tt>FAILED</tt> state.
getDataSourceResponse_finishedAt :: Lens' GetDataSourceResponse (Maybe UTCTime)

-- | The schema used by all of the data files of this <tt>DataSource</tt>.
--   
--   <b>Note:</b> This parameter is provided as part of the verbose format.
getDataSourceResponse_dataSourceSchema :: Lens' GetDataSourceResponse (Maybe Text)

-- | The total size of observations in the data files.
getDataSourceResponse_dataSizeInBytes :: Lens' GetDataSourceResponse (Maybe Integer)

-- | The approximate CPU time in milliseconds that Amazon Machine Learning
--   spent processing the <tt>DataSource</tt>, normalized and scaled on
--   computation resources. <tt>ComputeTime</tt> is only available if the
--   <tt>DataSource</tt> is in the <tt>COMPLETED</tt> state and the
--   <tt>ComputeStatistics</tt> is set to true.
getDataSourceResponse_computeTime :: Lens' GetDataSourceResponse (Maybe Integer)

-- | Undocumented member.
getDataSourceResponse_rDSMetadata :: Lens' GetDataSourceResponse (Maybe RDSMetadata)

-- | The time of the most recent edit to the <tt>DataSource</tt>. The time
--   is expressed in epoch time.
getDataSourceResponse_lastUpdatedAt :: Lens' GetDataSourceResponse (Maybe UTCTime)

-- | A link to the file containing logs of <tt>CreateDataSourceFrom*</tt>
--   operations.
getDataSourceResponse_logUri :: Lens' GetDataSourceResponse (Maybe Text)

-- | The response's http status code.
getDataSourceResponse_httpStatus :: Lens' GetDataSourceResponse Int
instance GHC.Generics.Generic Network.AWS.MachineLearning.GetDataSource.GetDataSource
instance GHC.Show.Show Network.AWS.MachineLearning.GetDataSource.GetDataSource
instance GHC.Read.Read Network.AWS.MachineLearning.GetDataSource.GetDataSource
instance GHC.Classes.Eq Network.AWS.MachineLearning.GetDataSource.GetDataSource
instance GHC.Generics.Generic Network.AWS.MachineLearning.GetDataSource.GetDataSourceResponse
instance GHC.Show.Show Network.AWS.MachineLearning.GetDataSource.GetDataSourceResponse
instance GHC.Read.Read Network.AWS.MachineLearning.GetDataSource.GetDataSourceResponse
instance GHC.Classes.Eq Network.AWS.MachineLearning.GetDataSource.GetDataSourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.MachineLearning.GetDataSource.GetDataSource
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.GetDataSource.GetDataSourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.MachineLearning.GetDataSource.GetDataSource
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.GetDataSource.GetDataSource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.MachineLearning.GetDataSource.GetDataSource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MachineLearning.GetDataSource.GetDataSource
instance Network.AWS.Data.Path.ToPath Network.AWS.MachineLearning.GetDataSource.GetDataSource
instance Network.AWS.Data.Query.ToQuery Network.AWS.MachineLearning.GetDataSource.GetDataSource


-- | Returns a <tt>BatchPrediction</tt> that includes detailed metadata,
--   status, and data file information for a <tt>Batch Prediction</tt>
--   request.
module Network.AWS.MachineLearning.GetBatchPrediction

-- | <i>See:</i> <a>newGetBatchPrediction</a> smart constructor.
data GetBatchPrediction
GetBatchPrediction' :: Text -> GetBatchPrediction

-- | An ID assigned to the <tt>BatchPrediction</tt> at creation.
[$sel:batchPredictionId:GetBatchPrediction'] :: GetBatchPrediction -> Text

-- | Create a value of <a>GetBatchPrediction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:batchPredictionId:GetBatchPrediction'</a>,
--   <a>getBatchPrediction_batchPredictionId</a> - An ID assigned to the
--   <tt>BatchPrediction</tt> at creation.
newGetBatchPrediction :: Text -> GetBatchPrediction

-- | An ID assigned to the <tt>BatchPrediction</tt> at creation.
getBatchPrediction_batchPredictionId :: Lens' GetBatchPrediction Text

-- | Represents the output of a <tt>GetBatchPrediction</tt> operation and
--   describes a <tt>BatchPrediction</tt>.
--   
--   <i>See:</i> <a>newGetBatchPredictionResponse</a> smart constructor.
data GetBatchPredictionResponse
GetBatchPredictionResponse' :: Maybe EntityStatus -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Integer -> Maybe Integer -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Integer -> Maybe POSIX -> Maybe Text -> Int -> GetBatchPredictionResponse

-- | The status of the <tt>BatchPrediction</tt>, which can be one of the
--   following values:
--   
--   <ul>
--   <li><tt>PENDING</tt> - Amazon Machine Learning (Amazon ML) submitted a
--   request to generate batch predictions.</li>
--   <li><tt>INPROGRESS</tt> - The batch predictions are in progress.</li>
--   <li><tt>FAILED</tt> - The request to perform a batch prediction did
--   not run to completion. It is not usable.</li>
--   <li><tt>COMPLETED</tt> - The batch prediction process completed
--   successfully.</li>
--   <li><tt>DELETED</tt> - The <tt>BatchPrediction</tt> is marked as
--   deleted. It is not usable.</li>
--   </ul>
[$sel:status:GetBatchPredictionResponse'] :: GetBatchPredictionResponse -> Maybe EntityStatus

-- | An ID assigned to the <tt>BatchPrediction</tt> at creation. This value
--   should be identical to the value of the <tt>BatchPredictionID</tt> in
--   the request.
[$sel:batchPredictionId:GetBatchPredictionResponse'] :: GetBatchPredictionResponse -> Maybe Text

-- | The epoch time when Amazon Machine Learning marked the
--   <tt>BatchPrediction</tt> as <tt>INPROGRESS</tt>. <tt>StartedAt</tt>
--   isn't available if the <tt>BatchPrediction</tt> is in the
--   <tt>PENDING</tt> state.
[$sel:startedAt:GetBatchPredictionResponse'] :: GetBatchPredictionResponse -> Maybe POSIX

-- | The location of an Amazon S3 bucket or directory to receive the
--   operation results.
[$sel:outputUri:GetBatchPredictionResponse'] :: GetBatchPredictionResponse -> Maybe Text

-- | A description of the most recent details about processing the batch
--   prediction request.
[$sel:message:GetBatchPredictionResponse'] :: GetBatchPredictionResponse -> Maybe Text

-- | The time when the <tt>BatchPrediction</tt> was created. The time is
--   expressed in epoch time.
[$sel:createdAt:GetBatchPredictionResponse'] :: GetBatchPredictionResponse -> Maybe POSIX

-- | A user-supplied name or description of the <tt>BatchPrediction</tt>.
[$sel:name:GetBatchPredictionResponse'] :: GetBatchPredictionResponse -> Maybe Text

-- | The AWS user account that invoked the <tt>BatchPrediction</tt>. The
--   account type can be either an AWS root account or an AWS Identity and
--   Access Management (IAM) user account.
[$sel:createdByIamUser:GetBatchPredictionResponse'] :: GetBatchPredictionResponse -> Maybe Text

-- | The epoch time when Amazon Machine Learning marked the
--   <tt>BatchPrediction</tt> as <tt>COMPLETED</tt> or <tt>FAILED</tt>.
--   <tt>FinishedAt</tt> is only available when the
--   <tt>BatchPrediction</tt> is in the <tt>COMPLETED</tt> or
--   <tt>FAILED</tt> state.
[$sel:finishedAt:GetBatchPredictionResponse'] :: GetBatchPredictionResponse -> Maybe POSIX

-- | The number of invalid records that Amazon Machine Learning saw while
--   processing the <tt>BatchPrediction</tt>.
[$sel:invalidRecordCount:GetBatchPredictionResponse'] :: GetBatchPredictionResponse -> Maybe Integer

-- | The number of total records that Amazon Machine Learning saw while
--   processing the <tt>BatchPrediction</tt>.
[$sel:totalRecordCount:GetBatchPredictionResponse'] :: GetBatchPredictionResponse -> Maybe Integer

-- | The ID of the <tt>DataSource</tt> that was used to create the
--   <tt>BatchPrediction</tt>.
[$sel:batchPredictionDataSourceId:GetBatchPredictionResponse'] :: GetBatchPredictionResponse -> Maybe Text

-- | The ID of the <tt>MLModel</tt> that generated predictions for the
--   <tt>BatchPrediction</tt> request.
[$sel:mLModelId:GetBatchPredictionResponse'] :: GetBatchPredictionResponse -> Maybe Text

-- | The location of the data file or directory in Amazon Simple Storage
--   Service (Amazon S3).
[$sel:inputDataLocationS3:GetBatchPredictionResponse'] :: GetBatchPredictionResponse -> Maybe Text

-- | The approximate CPU time in milliseconds that Amazon Machine Learning
--   spent processing the <tt>BatchPrediction</tt>, normalized and scaled
--   on computation resources. <tt>ComputeTime</tt> is only available if
--   the <tt>BatchPrediction</tt> is in the <tt>COMPLETED</tt> state.
[$sel:computeTime:GetBatchPredictionResponse'] :: GetBatchPredictionResponse -> Maybe Integer

-- | The time of the most recent edit to <tt>BatchPrediction</tt>. The time
--   is expressed in epoch time.
[$sel:lastUpdatedAt:GetBatchPredictionResponse'] :: GetBatchPredictionResponse -> Maybe POSIX

-- | A link to the file that contains logs of the
--   <tt>CreateBatchPrediction</tt> operation.
[$sel:logUri:GetBatchPredictionResponse'] :: GetBatchPredictionResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetBatchPredictionResponse'] :: GetBatchPredictionResponse -> Int

-- | Create a value of <a>GetBatchPredictionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:GetBatchPredictionResponse'</a>,
--   <a>getBatchPredictionResponse_status</a> - The status of the
--   <tt>BatchPrediction</tt>, which can be one of the following values:
--   
--   <ul>
--   <li><tt>PENDING</tt> - Amazon Machine Learning (Amazon ML) submitted a
--   request to generate batch predictions.</li>
--   <li><tt>INPROGRESS</tt> - The batch predictions are in progress.</li>
--   <li><tt>FAILED</tt> - The request to perform a batch prediction did
--   not run to completion. It is not usable.</li>
--   <li><tt>COMPLETED</tt> - The batch prediction process completed
--   successfully.</li>
--   <li><tt>DELETED</tt> - The <tt>BatchPrediction</tt> is marked as
--   deleted. It is not usable.</li>
--   </ul>
--   
--   <a>$sel:batchPredictionId:GetBatchPrediction'</a>,
--   <a>getBatchPredictionResponse_batchPredictionId</a> - An ID assigned
--   to the <tt>BatchPrediction</tt> at creation. This value should be
--   identical to the value of the <tt>BatchPredictionID</tt> in the
--   request.
--   
--   <a>$sel:startedAt:GetBatchPredictionResponse'</a>,
--   <a>getBatchPredictionResponse_startedAt</a> - The epoch time when
--   Amazon Machine Learning marked the <tt>BatchPrediction</tt> as
--   <tt>INPROGRESS</tt>. <tt>StartedAt</tt> isn't available if the
--   <tt>BatchPrediction</tt> is in the <tt>PENDING</tt> state.
--   
--   <a>$sel:outputUri:GetBatchPredictionResponse'</a>,
--   <a>getBatchPredictionResponse_outputUri</a> - The location of an
--   Amazon S3 bucket or directory to receive the operation results.
--   
--   <a>$sel:message:GetBatchPredictionResponse'</a>,
--   <a>getBatchPredictionResponse_message</a> - A description of the most
--   recent details about processing the batch prediction request.
--   
--   <a>$sel:createdAt:GetBatchPredictionResponse'</a>,
--   <a>getBatchPredictionResponse_createdAt</a> - The time when the
--   <tt>BatchPrediction</tt> was created. The time is expressed in epoch
--   time.
--   
--   <a>$sel:name:GetBatchPredictionResponse'</a>,
--   <a>getBatchPredictionResponse_name</a> - A user-supplied name or
--   description of the <tt>BatchPrediction</tt>.
--   
--   <a>$sel:createdByIamUser:GetBatchPredictionResponse'</a>,
--   <a>getBatchPredictionResponse_createdByIamUser</a> - The AWS user
--   account that invoked the <tt>BatchPrediction</tt>. The account type
--   can be either an AWS root account or an AWS Identity and Access
--   Management (IAM) user account.
--   
--   <a>$sel:finishedAt:GetBatchPredictionResponse'</a>,
--   <a>getBatchPredictionResponse_finishedAt</a> - The epoch time when
--   Amazon Machine Learning marked the <tt>BatchPrediction</tt> as
--   <tt>COMPLETED</tt> or <tt>FAILED</tt>. <tt>FinishedAt</tt> is only
--   available when the <tt>BatchPrediction</tt> is in the
--   <tt>COMPLETED</tt> or <tt>FAILED</tt> state.
--   
--   <a>$sel:invalidRecordCount:GetBatchPredictionResponse'</a>,
--   <a>getBatchPredictionResponse_invalidRecordCount</a> - The number of
--   invalid records that Amazon Machine Learning saw while processing the
--   <tt>BatchPrediction</tt>.
--   
--   <a>$sel:totalRecordCount:GetBatchPredictionResponse'</a>,
--   <a>getBatchPredictionResponse_totalRecordCount</a> - The number of
--   total records that Amazon Machine Learning saw while processing the
--   <tt>BatchPrediction</tt>.
--   
--   <a>$sel:batchPredictionDataSourceId:GetBatchPredictionResponse'</a>,
--   <a>getBatchPredictionResponse_batchPredictionDataSourceId</a> - The ID
--   of the <tt>DataSource</tt> that was used to create the
--   <tt>BatchPrediction</tt>.
--   
--   <a>$sel:mLModelId:GetBatchPredictionResponse'</a>,
--   <a>getBatchPredictionResponse_mLModelId</a> - The ID of the
--   <tt>MLModel</tt> that generated predictions for the
--   <tt>BatchPrediction</tt> request.
--   
--   <a>$sel:inputDataLocationS3:GetBatchPredictionResponse'</a>,
--   <a>getBatchPredictionResponse_inputDataLocationS3</a> - The location
--   of the data file or directory in Amazon Simple Storage Service (Amazon
--   S3).
--   
--   <a>$sel:computeTime:GetBatchPredictionResponse'</a>,
--   <a>getBatchPredictionResponse_computeTime</a> - The approximate CPU
--   time in milliseconds that Amazon Machine Learning spent processing the
--   <tt>BatchPrediction</tt>, normalized and scaled on computation
--   resources. <tt>ComputeTime</tt> is only available if the
--   <tt>BatchPrediction</tt> is in the <tt>COMPLETED</tt> state.
--   
--   <a>$sel:lastUpdatedAt:GetBatchPredictionResponse'</a>,
--   <a>getBatchPredictionResponse_lastUpdatedAt</a> - The time of the most
--   recent edit to <tt>BatchPrediction</tt>. The time is expressed in
--   epoch time.
--   
--   <a>$sel:logUri:GetBatchPredictionResponse'</a>,
--   <a>getBatchPredictionResponse_logUri</a> - A link to the file that
--   contains logs of the <tt>CreateBatchPrediction</tt> operation.
--   
--   <a>$sel:httpStatus:GetBatchPredictionResponse'</a>,
--   <a>getBatchPredictionResponse_httpStatus</a> - The response's http
--   status code.
newGetBatchPredictionResponse :: Int -> GetBatchPredictionResponse

-- | The status of the <tt>BatchPrediction</tt>, which can be one of the
--   following values:
--   
--   <ul>
--   <li><tt>PENDING</tt> - Amazon Machine Learning (Amazon ML) submitted a
--   request to generate batch predictions.</li>
--   <li><tt>INPROGRESS</tt> - The batch predictions are in progress.</li>
--   <li><tt>FAILED</tt> - The request to perform a batch prediction did
--   not run to completion. It is not usable.</li>
--   <li><tt>COMPLETED</tt> - The batch prediction process completed
--   successfully.</li>
--   <li><tt>DELETED</tt> - The <tt>BatchPrediction</tt> is marked as
--   deleted. It is not usable.</li>
--   </ul>
getBatchPredictionResponse_status :: Lens' GetBatchPredictionResponse (Maybe EntityStatus)

-- | An ID assigned to the <tt>BatchPrediction</tt> at creation. This value
--   should be identical to the value of the <tt>BatchPredictionID</tt> in
--   the request.
getBatchPredictionResponse_batchPredictionId :: Lens' GetBatchPredictionResponse (Maybe Text)

-- | The epoch time when Amazon Machine Learning marked the
--   <tt>BatchPrediction</tt> as <tt>INPROGRESS</tt>. <tt>StartedAt</tt>
--   isn't available if the <tt>BatchPrediction</tt> is in the
--   <tt>PENDING</tt> state.
getBatchPredictionResponse_startedAt :: Lens' GetBatchPredictionResponse (Maybe UTCTime)

-- | The location of an Amazon S3 bucket or directory to receive the
--   operation results.
getBatchPredictionResponse_outputUri :: Lens' GetBatchPredictionResponse (Maybe Text)

-- | A description of the most recent details about processing the batch
--   prediction request.
getBatchPredictionResponse_message :: Lens' GetBatchPredictionResponse (Maybe Text)

-- | The time when the <tt>BatchPrediction</tt> was created. The time is
--   expressed in epoch time.
getBatchPredictionResponse_createdAt :: Lens' GetBatchPredictionResponse (Maybe UTCTime)

-- | A user-supplied name or description of the <tt>BatchPrediction</tt>.
getBatchPredictionResponse_name :: Lens' GetBatchPredictionResponse (Maybe Text)

-- | The AWS user account that invoked the <tt>BatchPrediction</tt>. The
--   account type can be either an AWS root account or an AWS Identity and
--   Access Management (IAM) user account.
getBatchPredictionResponse_createdByIamUser :: Lens' GetBatchPredictionResponse (Maybe Text)

-- | The epoch time when Amazon Machine Learning marked the
--   <tt>BatchPrediction</tt> as <tt>COMPLETED</tt> or <tt>FAILED</tt>.
--   <tt>FinishedAt</tt> is only available when the
--   <tt>BatchPrediction</tt> is in the <tt>COMPLETED</tt> or
--   <tt>FAILED</tt> state.
getBatchPredictionResponse_finishedAt :: Lens' GetBatchPredictionResponse (Maybe UTCTime)

-- | The number of invalid records that Amazon Machine Learning saw while
--   processing the <tt>BatchPrediction</tt>.
getBatchPredictionResponse_invalidRecordCount :: Lens' GetBatchPredictionResponse (Maybe Integer)

-- | The number of total records that Amazon Machine Learning saw while
--   processing the <tt>BatchPrediction</tt>.
getBatchPredictionResponse_totalRecordCount :: Lens' GetBatchPredictionResponse (Maybe Integer)

-- | The ID of the <tt>DataSource</tt> that was used to create the
--   <tt>BatchPrediction</tt>.
getBatchPredictionResponse_batchPredictionDataSourceId :: Lens' GetBatchPredictionResponse (Maybe Text)

-- | The ID of the <tt>MLModel</tt> that generated predictions for the
--   <tt>BatchPrediction</tt> request.
getBatchPredictionResponse_mLModelId :: Lens' GetBatchPredictionResponse (Maybe Text)

-- | The location of the data file or directory in Amazon Simple Storage
--   Service (Amazon S3).
getBatchPredictionResponse_inputDataLocationS3 :: Lens' GetBatchPredictionResponse (Maybe Text)

-- | The approximate CPU time in milliseconds that Amazon Machine Learning
--   spent processing the <tt>BatchPrediction</tt>, normalized and scaled
--   on computation resources. <tt>ComputeTime</tt> is only available if
--   the <tt>BatchPrediction</tt> is in the <tt>COMPLETED</tt> state.
getBatchPredictionResponse_computeTime :: Lens' GetBatchPredictionResponse (Maybe Integer)

-- | The time of the most recent edit to <tt>BatchPrediction</tt>. The time
--   is expressed in epoch time.
getBatchPredictionResponse_lastUpdatedAt :: Lens' GetBatchPredictionResponse (Maybe UTCTime)

-- | A link to the file that contains logs of the
--   <tt>CreateBatchPrediction</tt> operation.
getBatchPredictionResponse_logUri :: Lens' GetBatchPredictionResponse (Maybe Text)

-- | The response's http status code.
getBatchPredictionResponse_httpStatus :: Lens' GetBatchPredictionResponse Int
instance GHC.Generics.Generic Network.AWS.MachineLearning.GetBatchPrediction.GetBatchPrediction
instance GHC.Show.Show Network.AWS.MachineLearning.GetBatchPrediction.GetBatchPrediction
instance GHC.Read.Read Network.AWS.MachineLearning.GetBatchPrediction.GetBatchPrediction
instance GHC.Classes.Eq Network.AWS.MachineLearning.GetBatchPrediction.GetBatchPrediction
instance GHC.Generics.Generic Network.AWS.MachineLearning.GetBatchPrediction.GetBatchPredictionResponse
instance GHC.Show.Show Network.AWS.MachineLearning.GetBatchPrediction.GetBatchPredictionResponse
instance GHC.Read.Read Network.AWS.MachineLearning.GetBatchPrediction.GetBatchPredictionResponse
instance GHC.Classes.Eq Network.AWS.MachineLearning.GetBatchPrediction.GetBatchPredictionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.MachineLearning.GetBatchPrediction.GetBatchPrediction
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.GetBatchPrediction.GetBatchPredictionResponse
instance Data.Hashable.Class.Hashable Network.AWS.MachineLearning.GetBatchPrediction.GetBatchPrediction
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.GetBatchPrediction.GetBatchPrediction
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.MachineLearning.GetBatchPrediction.GetBatchPrediction
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MachineLearning.GetBatchPrediction.GetBatchPrediction
instance Network.AWS.Data.Path.ToPath Network.AWS.MachineLearning.GetBatchPrediction.GetBatchPrediction
instance Network.AWS.Data.Query.ToQuery Network.AWS.MachineLearning.GetBatchPrediction.GetBatchPrediction


-- | Describes one or more of the tags for your Amazon ML object.
module Network.AWS.MachineLearning.DescribeTags

-- | <i>See:</i> <a>newDescribeTags</a> smart constructor.
data DescribeTags
DescribeTags' :: Text -> TaggableResourceType -> DescribeTags

-- | The ID of the ML object. For example, <tt>exampleModelId</tt>.
[$sel:resourceId:DescribeTags'] :: DescribeTags -> Text

-- | The type of the ML object.
[$sel:resourceType:DescribeTags'] :: DescribeTags -> TaggableResourceType

-- | Create a value of <a>DescribeTags</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceId:DescribeTags'</a>, <a>describeTags_resourceId</a> -
--   The ID of the ML object. For example, <tt>exampleModelId</tt>.
--   
--   <a>$sel:resourceType:DescribeTags'</a>,
--   <a>describeTags_resourceType</a> - The type of the ML object.
newDescribeTags :: Text -> TaggableResourceType -> DescribeTags

-- | The ID of the ML object. For example, <tt>exampleModelId</tt>.
describeTags_resourceId :: Lens' DescribeTags Text

-- | The type of the ML object.
describeTags_resourceType :: Lens' DescribeTags TaggableResourceType

-- | Amazon ML returns the following elements.
--   
--   <i>See:</i> <a>newDescribeTagsResponse</a> smart constructor.
data DescribeTagsResponse
DescribeTagsResponse' :: Maybe Text -> Maybe TaggableResourceType -> Maybe [Tag] -> Int -> DescribeTagsResponse

-- | The ID of the tagged ML object.
[$sel:resourceId:DescribeTagsResponse'] :: DescribeTagsResponse -> Maybe Text

-- | The type of the tagged ML object.
[$sel:resourceType:DescribeTagsResponse'] :: DescribeTagsResponse -> Maybe TaggableResourceType

-- | A list of tags associated with the ML object.
[$sel:tags:DescribeTagsResponse'] :: DescribeTagsResponse -> Maybe [Tag]

-- | The response's http status code.
[$sel:httpStatus:DescribeTagsResponse'] :: DescribeTagsResponse -> Int

-- | Create a value of <a>DescribeTagsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceId:DescribeTags'</a>,
--   <a>describeTagsResponse_resourceId</a> - The ID of the tagged ML
--   object.
--   
--   <a>$sel:resourceType:DescribeTags'</a>,
--   <a>describeTagsResponse_resourceType</a> - The type of the tagged ML
--   object.
--   
--   <a>$sel:tags:DescribeTagsResponse'</a>,
--   <a>describeTagsResponse_tags</a> - A list of tags associated with the
--   ML object.
--   
--   <a>$sel:httpStatus:DescribeTagsResponse'</a>,
--   <a>describeTagsResponse_httpStatus</a> - The response's http status
--   code.
newDescribeTagsResponse :: Int -> DescribeTagsResponse

-- | The ID of the tagged ML object.
describeTagsResponse_resourceId :: Lens' DescribeTagsResponse (Maybe Text)

-- | The type of the tagged ML object.
describeTagsResponse_resourceType :: Lens' DescribeTagsResponse (Maybe TaggableResourceType)

-- | A list of tags associated with the ML object.
describeTagsResponse_tags :: Lens' DescribeTagsResponse (Maybe [Tag])

-- | The response's http status code.
describeTagsResponse_httpStatus :: Lens' DescribeTagsResponse Int
instance GHC.Generics.Generic Network.AWS.MachineLearning.DescribeTags.DescribeTags
instance GHC.Show.Show Network.AWS.MachineLearning.DescribeTags.DescribeTags
instance GHC.Read.Read Network.AWS.MachineLearning.DescribeTags.DescribeTags
instance GHC.Classes.Eq Network.AWS.MachineLearning.DescribeTags.DescribeTags
instance GHC.Generics.Generic Network.AWS.MachineLearning.DescribeTags.DescribeTagsResponse
instance GHC.Show.Show Network.AWS.MachineLearning.DescribeTags.DescribeTagsResponse
instance GHC.Read.Read Network.AWS.MachineLearning.DescribeTags.DescribeTagsResponse
instance GHC.Classes.Eq Network.AWS.MachineLearning.DescribeTags.DescribeTagsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.MachineLearning.DescribeTags.DescribeTags
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.DescribeTags.DescribeTagsResponse
instance Data.Hashable.Class.Hashable Network.AWS.MachineLearning.DescribeTags.DescribeTags
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.DescribeTags.DescribeTags
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.MachineLearning.DescribeTags.DescribeTags
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MachineLearning.DescribeTags.DescribeTags
instance Network.AWS.Data.Path.ToPath Network.AWS.MachineLearning.DescribeTags.DescribeTags
instance Network.AWS.Data.Query.ToQuery Network.AWS.MachineLearning.DescribeTags.DescribeTags


-- | Returns a list of <tt>MLModel</tt> that match the search criteria in
--   the request.
--   
--   This operation returns paginated results.
module Network.AWS.MachineLearning.DescribeMLModels

-- | <i>See:</i> <a>newDescribeMLModels</a> smart constructor.
data DescribeMLModels
DescribeMLModels' :: Maybe Text -> Maybe Text -> Maybe SortOrder -> Maybe MLModelFilterVariable -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> DescribeMLModels

-- | The equal to operator. The <tt>MLModel</tt> results will have
--   <tt>FilterVariable</tt> values that exactly match the value specified
--   with <tt>EQ</tt>.
[$sel:eq:DescribeMLModels'] :: DescribeMLModels -> Maybe Text

-- | The ID of the page in the paginated results.
[$sel:nextToken:DescribeMLModels'] :: DescribeMLModels -> Maybe Text

-- | A two-value parameter that determines the sequence of the resulting
--   list of <tt>MLModel</tt>.
--   
--   <ul>
--   <li><tt>asc</tt> - Arranges the list in ascending order (A-Z,
--   0-9).</li>
--   <li><tt>dsc</tt> - Arranges the list in descending order (Z-A,
--   9-0).</li>
--   </ul>
--   
--   Results are sorted by <tt>FilterVariable</tt>.
[$sel:sortOrder:DescribeMLModels'] :: DescribeMLModels -> Maybe SortOrder

-- | Use one of the following variables to filter a list of
--   <tt>MLModel</tt>:
--   
--   <ul>
--   <li><tt>CreatedAt</tt> - Sets the search criteria to <tt>MLModel</tt>
--   creation date.</li>
--   <li><tt>Status</tt> - Sets the search criteria to <tt>MLModel</tt>
--   status.</li>
--   <li><tt>Name</tt> - Sets the search criteria to the contents of
--   <tt>MLModel</tt> ____ <tt>Name</tt>.</li>
--   <li><tt>IAMUser</tt> - Sets the search criteria to the user account
--   that invoked the <tt>MLModel</tt> creation.</li>
--   <li><tt>TrainingDataSourceId</tt> - Sets the search criteria to the
--   <tt>DataSource</tt> used to train one or more <tt>MLModel</tt>.</li>
--   <li><tt>RealtimeEndpointStatus</tt> - Sets the search criteria to the
--   <tt>MLModel</tt> real-time endpoint status.</li>
--   <li><tt>MLModelType</tt> - Sets the search criteria to
--   <tt>MLModel</tt> type: binary, regression, or multi-class.</li>
--   <li><tt>Algorithm</tt> - Sets the search criteria to the algorithm
--   that the <tt>MLModel</tt> uses.</li>
--   <li><tt>TrainingDataURI</tt> - Sets the search criteria to the data
--   file(s) used in training a <tt>MLModel</tt>. The URL can identify
--   either a file or an Amazon Simple Storage Service (Amazon S3) bucket
--   or directory.</li>
--   </ul>
[$sel:filterVariable:DescribeMLModels'] :: DescribeMLModels -> Maybe MLModelFilterVariable

-- | The greater than operator. The <tt>MLModel</tt> results will have
--   <tt>FilterVariable</tt> values that are greater than the value
--   specified with <tt>GT</tt>.
[$sel:gt:DescribeMLModels'] :: DescribeMLModels -> Maybe Text

-- | The not equal to operator. The <tt>MLModel</tt> results will have
--   <tt>FilterVariable</tt> values not equal to the value specified with
--   <tt>NE</tt>.
[$sel:ne:DescribeMLModels'] :: DescribeMLModels -> Maybe Text

-- | A string that is found at the beginning of a variable, such as
--   <tt>Name</tt> or <tt>Id</tt>.
--   
--   For example, an <tt>MLModel</tt> could have the <tt>Name</tt>
--   <tt>2014-09-09-HolidayGiftMailer</tt>. To search for this
--   <tt>MLModel</tt>, select <tt>Name</tt> for the <tt>FilterVariable</tt>
--   and any of the following strings for the <tt>Prefix</tt>:
--   
--   <ul>
--   <li>2014-09</li>
--   <li>2014-09-09</li>
--   <li>2014-09-09-Holiday</li>
--   </ul>
[$sel:prefix:DescribeMLModels'] :: DescribeMLModels -> Maybe Text

-- | The greater than or equal to operator. The <tt>MLModel</tt> results
--   will have <tt>FilterVariable</tt> values that are greater than or
--   equal to the value specified with <tt>GE</tt>.
[$sel:ge:DescribeMLModels'] :: DescribeMLModels -> Maybe Text

-- | The less than or equal to operator. The <tt>MLModel</tt> results will
--   have <tt>FilterVariable</tt> values that are less than or equal to the
--   value specified with <tt>LE</tt>.
[$sel:le:DescribeMLModels'] :: DescribeMLModels -> Maybe Text

-- | The less than operator. The <tt>MLModel</tt> results will have
--   <tt>FilterVariable</tt> values that are less than the value specified
--   with <tt>LT</tt>.
[$sel:lt:DescribeMLModels'] :: DescribeMLModels -> Maybe Text

-- | The number of pages of information to include in the result. The range
--   of acceptable values is <tt>1</tt> through <tt>100</tt>. The default
--   value is <tt>100</tt>.
[$sel:limit:DescribeMLModels'] :: DescribeMLModels -> Maybe Natural

-- | Create a value of <a>DescribeMLModels</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eq:DescribeMLModels'</a>, <a>describeMLModels_eq</a> - The
--   equal to operator. The <tt>MLModel</tt> results will have
--   <tt>FilterVariable</tt> values that exactly match the value specified
--   with <tt>EQ</tt>.
--   
--   <a>$sel:nextToken:DescribeMLModels'</a>,
--   <a>describeMLModels_nextToken</a> - The ID of the page in the
--   paginated results.
--   
--   <a>$sel:sortOrder:DescribeMLModels'</a>,
--   <a>describeMLModels_sortOrder</a> - A two-value parameter that
--   determines the sequence of the resulting list of <tt>MLModel</tt>.
--   
--   <ul>
--   <li><tt>asc</tt> - Arranges the list in ascending order (A-Z,
--   0-9).</li>
--   <li><tt>dsc</tt> - Arranges the list in descending order (Z-A,
--   9-0).</li>
--   </ul>
--   
--   Results are sorted by <tt>FilterVariable</tt>.
--   
--   <a>$sel:filterVariable:DescribeMLModels'</a>,
--   <a>describeMLModels_filterVariable</a> - Use one of the following
--   variables to filter a list of <tt>MLModel</tt>:
--   
--   <ul>
--   <li><tt>CreatedAt</tt> - Sets the search criteria to <tt>MLModel</tt>
--   creation date.</li>
--   <li><tt>Status</tt> - Sets the search criteria to <tt>MLModel</tt>
--   status.</li>
--   <li><tt>Name</tt> - Sets the search criteria to the contents of
--   <tt>MLModel</tt> ____ <tt>Name</tt>.</li>
--   <li><tt>IAMUser</tt> - Sets the search criteria to the user account
--   that invoked the <tt>MLModel</tt> creation.</li>
--   <li><tt>TrainingDataSourceId</tt> - Sets the search criteria to the
--   <tt>DataSource</tt> used to train one or more <tt>MLModel</tt>.</li>
--   <li><tt>RealtimeEndpointStatus</tt> - Sets the search criteria to the
--   <tt>MLModel</tt> real-time endpoint status.</li>
--   <li><tt>MLModelType</tt> - Sets the search criteria to
--   <tt>MLModel</tt> type: binary, regression, or multi-class.</li>
--   <li><tt>Algorithm</tt> - Sets the search criteria to the algorithm
--   that the <tt>MLModel</tt> uses.</li>
--   <li><tt>TrainingDataURI</tt> - Sets the search criteria to the data
--   file(s) used in training a <tt>MLModel</tt>. The URL can identify
--   either a file or an Amazon Simple Storage Service (Amazon S3) bucket
--   or directory.</li>
--   </ul>
--   
--   <a>$sel:gt:DescribeMLModels'</a>, <a>describeMLModels_gt</a> - The
--   greater than operator. The <tt>MLModel</tt> results will have
--   <tt>FilterVariable</tt> values that are greater than the value
--   specified with <tt>GT</tt>.
--   
--   <a>$sel:ne:DescribeMLModels'</a>, <a>describeMLModels_ne</a> - The not
--   equal to operator. The <tt>MLModel</tt> results will have
--   <tt>FilterVariable</tt> values not equal to the value specified with
--   <tt>NE</tt>.
--   
--   <a>$sel:prefix:DescribeMLModels'</a>, <a>describeMLModels_prefix</a> -
--   A string that is found at the beginning of a variable, such as
--   <tt>Name</tt> or <tt>Id</tt>.
--   
--   For example, an <tt>MLModel</tt> could have the <tt>Name</tt>
--   <tt>2014-09-09-HolidayGiftMailer</tt>. To search for this
--   <tt>MLModel</tt>, select <tt>Name</tt> for the <tt>FilterVariable</tt>
--   and any of the following strings for the <tt>Prefix</tt>:
--   
--   <ul>
--   <li>2014-09</li>
--   <li>2014-09-09</li>
--   <li>2014-09-09-Holiday</li>
--   </ul>
--   
--   <a>$sel:ge:DescribeMLModels'</a>, <a>describeMLModels_ge</a> - The
--   greater than or equal to operator. The <tt>MLModel</tt> results will
--   have <tt>FilterVariable</tt> values that are greater than or equal to
--   the value specified with <tt>GE</tt>.
--   
--   <a>$sel:le:DescribeMLModels'</a>, <a>describeMLModels_le</a> - The
--   less than or equal to operator. The <tt>MLModel</tt> results will have
--   <tt>FilterVariable</tt> values that are less than or equal to the
--   value specified with <tt>LE</tt>.
--   
--   <a>$sel:lt:DescribeMLModels'</a>, <a>describeMLModels_lt</a> - The
--   less than operator. The <tt>MLModel</tt> results will have
--   <tt>FilterVariable</tt> values that are less than the value specified
--   with <tt>LT</tt>.
--   
--   <a>$sel:limit:DescribeMLModels'</a>, <a>describeMLModels_limit</a> -
--   The number of pages of information to include in the result. The range
--   of acceptable values is <tt>1</tt> through <tt>100</tt>. The default
--   value is <tt>100</tt>.
newDescribeMLModels :: DescribeMLModels

-- | The equal to operator. The <tt>MLModel</tt> results will have
--   <tt>FilterVariable</tt> values that exactly match the value specified
--   with <tt>EQ</tt>.
describeMLModels_eq :: Lens' DescribeMLModels (Maybe Text)

-- | The ID of the page in the paginated results.
describeMLModels_nextToken :: Lens' DescribeMLModels (Maybe Text)

-- | A two-value parameter that determines the sequence of the resulting
--   list of <tt>MLModel</tt>.
--   
--   <ul>
--   <li><tt>asc</tt> - Arranges the list in ascending order (A-Z,
--   0-9).</li>
--   <li><tt>dsc</tt> - Arranges the list in descending order (Z-A,
--   9-0).</li>
--   </ul>
--   
--   Results are sorted by <tt>FilterVariable</tt>.
describeMLModels_sortOrder :: Lens' DescribeMLModels (Maybe SortOrder)

-- | Use one of the following variables to filter a list of
--   <tt>MLModel</tt>:
--   
--   <ul>
--   <li><tt>CreatedAt</tt> - Sets the search criteria to <tt>MLModel</tt>
--   creation date.</li>
--   <li><tt>Status</tt> - Sets the search criteria to <tt>MLModel</tt>
--   status.</li>
--   <li><tt>Name</tt> - Sets the search criteria to the contents of
--   <tt>MLModel</tt> ____ <tt>Name</tt>.</li>
--   <li><tt>IAMUser</tt> - Sets the search criteria to the user account
--   that invoked the <tt>MLModel</tt> creation.</li>
--   <li><tt>TrainingDataSourceId</tt> - Sets the search criteria to the
--   <tt>DataSource</tt> used to train one or more <tt>MLModel</tt>.</li>
--   <li><tt>RealtimeEndpointStatus</tt> - Sets the search criteria to the
--   <tt>MLModel</tt> real-time endpoint status.</li>
--   <li><tt>MLModelType</tt> - Sets the search criteria to
--   <tt>MLModel</tt> type: binary, regression, or multi-class.</li>
--   <li><tt>Algorithm</tt> - Sets the search criteria to the algorithm
--   that the <tt>MLModel</tt> uses.</li>
--   <li><tt>TrainingDataURI</tt> - Sets the search criteria to the data
--   file(s) used in training a <tt>MLModel</tt>. The URL can identify
--   either a file or an Amazon Simple Storage Service (Amazon S3) bucket
--   or directory.</li>
--   </ul>
describeMLModels_filterVariable :: Lens' DescribeMLModels (Maybe MLModelFilterVariable)

-- | The greater than operator. The <tt>MLModel</tt> results will have
--   <tt>FilterVariable</tt> values that are greater than the value
--   specified with <tt>GT</tt>.
describeMLModels_gt :: Lens' DescribeMLModels (Maybe Text)

-- | The not equal to operator. The <tt>MLModel</tt> results will have
--   <tt>FilterVariable</tt> values not equal to the value specified with
--   <tt>NE</tt>.
describeMLModels_ne :: Lens' DescribeMLModels (Maybe Text)

-- | A string that is found at the beginning of a variable, such as
--   <tt>Name</tt> or <tt>Id</tt>.
--   
--   For example, an <tt>MLModel</tt> could have the <tt>Name</tt>
--   <tt>2014-09-09-HolidayGiftMailer</tt>. To search for this
--   <tt>MLModel</tt>, select <tt>Name</tt> for the <tt>FilterVariable</tt>
--   and any of the following strings for the <tt>Prefix</tt>:
--   
--   <ul>
--   <li>2014-09</li>
--   <li>2014-09-09</li>
--   <li>2014-09-09-Holiday</li>
--   </ul>
describeMLModels_prefix :: Lens' DescribeMLModels (Maybe Text)

-- | The greater than or equal to operator. The <tt>MLModel</tt> results
--   will have <tt>FilterVariable</tt> values that are greater than or
--   equal to the value specified with <tt>GE</tt>.
describeMLModels_ge :: Lens' DescribeMLModels (Maybe Text)

-- | The less than or equal to operator. The <tt>MLModel</tt> results will
--   have <tt>FilterVariable</tt> values that are less than or equal to the
--   value specified with <tt>LE</tt>.
describeMLModels_le :: Lens' DescribeMLModels (Maybe Text)

-- | The less than operator. The <tt>MLModel</tt> results will have
--   <tt>FilterVariable</tt> values that are less than the value specified
--   with <tt>LT</tt>.
describeMLModels_lt :: Lens' DescribeMLModels (Maybe Text)

-- | The number of pages of information to include in the result. The range
--   of acceptable values is <tt>1</tt> through <tt>100</tt>. The default
--   value is <tt>100</tt>.
describeMLModels_limit :: Lens' DescribeMLModels (Maybe Natural)

-- | Represents the output of a <tt>DescribeMLModels</tt> operation. The
--   content is essentially a list of <tt>MLModel</tt>.
--   
--   <i>See:</i> <a>newDescribeMLModelsResponse</a> smart constructor.
data DescribeMLModelsResponse
DescribeMLModelsResponse' :: Maybe Text -> Maybe [MLModel] -> Int -> DescribeMLModelsResponse

-- | The ID of the next page in the paginated results that indicates at
--   least one more page follows.
[$sel:nextToken:DescribeMLModelsResponse'] :: DescribeMLModelsResponse -> Maybe Text

-- | A list of <tt>MLModel</tt> that meet the search criteria.
[$sel:results:DescribeMLModelsResponse'] :: DescribeMLModelsResponse -> Maybe [MLModel]

-- | The response's http status code.
[$sel:httpStatus:DescribeMLModelsResponse'] :: DescribeMLModelsResponse -> Int

-- | Create a value of <a>DescribeMLModelsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeMLModels'</a>,
--   <a>describeMLModelsResponse_nextToken</a> - The ID of the next page in
--   the paginated results that indicates at least one more page follows.
--   
--   <a>$sel:results:DescribeMLModelsResponse'</a>,
--   <a>describeMLModelsResponse_results</a> - A list of <tt>MLModel</tt>
--   that meet the search criteria.
--   
--   <a>$sel:httpStatus:DescribeMLModelsResponse'</a>,
--   <a>describeMLModelsResponse_httpStatus</a> - The response's http
--   status code.
newDescribeMLModelsResponse :: Int -> DescribeMLModelsResponse

-- | The ID of the next page in the paginated results that indicates at
--   least one more page follows.
describeMLModelsResponse_nextToken :: Lens' DescribeMLModelsResponse (Maybe Text)

-- | A list of <tt>MLModel</tt> that meet the search criteria.
describeMLModelsResponse_results :: Lens' DescribeMLModelsResponse (Maybe [MLModel])

-- | The response's http status code.
describeMLModelsResponse_httpStatus :: Lens' DescribeMLModelsResponse Int
instance GHC.Generics.Generic Network.AWS.MachineLearning.DescribeMLModels.DescribeMLModels
instance GHC.Show.Show Network.AWS.MachineLearning.DescribeMLModels.DescribeMLModels
instance GHC.Read.Read Network.AWS.MachineLearning.DescribeMLModels.DescribeMLModels
instance GHC.Classes.Eq Network.AWS.MachineLearning.DescribeMLModels.DescribeMLModels
instance GHC.Generics.Generic Network.AWS.MachineLearning.DescribeMLModels.DescribeMLModelsResponse
instance GHC.Show.Show Network.AWS.MachineLearning.DescribeMLModels.DescribeMLModelsResponse
instance GHC.Read.Read Network.AWS.MachineLearning.DescribeMLModels.DescribeMLModelsResponse
instance GHC.Classes.Eq Network.AWS.MachineLearning.DescribeMLModels.DescribeMLModelsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.MachineLearning.DescribeMLModels.DescribeMLModels
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.DescribeMLModels.DescribeMLModelsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.MachineLearning.DescribeMLModels.DescribeMLModels
instance Data.Hashable.Class.Hashable Network.AWS.MachineLearning.DescribeMLModels.DescribeMLModels
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.DescribeMLModels.DescribeMLModels
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.MachineLearning.DescribeMLModels.DescribeMLModels
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MachineLearning.DescribeMLModels.DescribeMLModels
instance Network.AWS.Data.Path.ToPath Network.AWS.MachineLearning.DescribeMLModels.DescribeMLModels
instance Network.AWS.Data.Query.ToQuery Network.AWS.MachineLearning.DescribeMLModels.DescribeMLModels


-- | Returns a list of <tt>DescribeEvaluations</tt> that match the search
--   criteria in the request.
--   
--   This operation returns paginated results.
module Network.AWS.MachineLearning.DescribeEvaluations

-- | <i>See:</i> <a>newDescribeEvaluations</a> smart constructor.
data DescribeEvaluations
DescribeEvaluations' :: Maybe Text -> Maybe Text -> Maybe SortOrder -> Maybe EvaluationFilterVariable -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> DescribeEvaluations

-- | The equal to operator. The <tt>Evaluation</tt> results will have
--   <tt>FilterVariable</tt> values that exactly match the value specified
--   with <tt>EQ</tt>.
[$sel:eq:DescribeEvaluations'] :: DescribeEvaluations -> Maybe Text

-- | The ID of the page in the paginated results.
[$sel:nextToken:DescribeEvaluations'] :: DescribeEvaluations -> Maybe Text

-- | A two-value parameter that determines the sequence of the resulting
--   list of <tt>Evaluation</tt>.
--   
--   <ul>
--   <li><tt>asc</tt> - Arranges the list in ascending order (A-Z,
--   0-9).</li>
--   <li><tt>dsc</tt> - Arranges the list in descending order (Z-A,
--   9-0).</li>
--   </ul>
--   
--   Results are sorted by <tt>FilterVariable</tt>.
[$sel:sortOrder:DescribeEvaluations'] :: DescribeEvaluations -> Maybe SortOrder

-- | Use one of the following variable to filter a list of
--   <tt>Evaluation</tt> objects:
--   
--   <ul>
--   <li><tt>CreatedAt</tt> - Sets the search criteria to the
--   <tt>Evaluation</tt> creation date.</li>
--   <li><tt>Status</tt> - Sets the search criteria to the
--   <tt>Evaluation</tt> status.</li>
--   <li><tt>Name</tt> - Sets the search criteria to the contents of
--   <tt>Evaluation</tt> ____ <tt>Name</tt>.</li>
--   <li><tt>IAMUser</tt> - Sets the search criteria to the user account
--   that invoked an <tt>Evaluation</tt>.</li>
--   <li><tt>MLModelId</tt> - Sets the search criteria to the
--   <tt>MLModel</tt> that was evaluated.</li>
--   <li><tt>DataSourceId</tt> - Sets the search criteria to the
--   <tt>DataSource</tt> used in <tt>Evaluation</tt>.</li>
--   <li><tt>DataUri</tt> - Sets the search criteria to the data file(s)
--   used in <tt>Evaluation</tt>. The URL can identify either a file or an
--   Amazon Simple Storage Solution (Amazon S3) bucket or directory.</li>
--   </ul>
[$sel:filterVariable:DescribeEvaluations'] :: DescribeEvaluations -> Maybe EvaluationFilterVariable

-- | The greater than operator. The <tt>Evaluation</tt> results will have
--   <tt>FilterVariable</tt> values that are greater than the value
--   specified with <tt>GT</tt>.
[$sel:gt:DescribeEvaluations'] :: DescribeEvaluations -> Maybe Text

-- | The not equal to operator. The <tt>Evaluation</tt> results will have
--   <tt>FilterVariable</tt> values not equal to the value specified with
--   <tt>NE</tt>.
[$sel:ne:DescribeEvaluations'] :: DescribeEvaluations -> Maybe Text

-- | A string that is found at the beginning of a variable, such as
--   <tt>Name</tt> or <tt>Id</tt>.
--   
--   For example, an <tt>Evaluation</tt> could have the <tt>Name</tt>
--   <tt>2014-09-09-HolidayGiftMailer</tt>. To search for this
--   <tt>Evaluation</tt>, select <tt>Name</tt> for the
--   <tt>FilterVariable</tt> and any of the following strings for the
--   <tt>Prefix</tt>:
--   
--   <ul>
--   <li>2014-09</li>
--   <li>2014-09-09</li>
--   <li>2014-09-09-Holiday</li>
--   </ul>
[$sel:prefix:DescribeEvaluations'] :: DescribeEvaluations -> Maybe Text

-- | The greater than or equal to operator. The <tt>Evaluation</tt> results
--   will have <tt>FilterVariable</tt> values that are greater than or
--   equal to the value specified with <tt>GE</tt>.
[$sel:ge:DescribeEvaluations'] :: DescribeEvaluations -> Maybe Text

-- | The less than or equal to operator. The <tt>Evaluation</tt> results
--   will have <tt>FilterVariable</tt> values that are less than or equal
--   to the value specified with <tt>LE</tt>.
[$sel:le:DescribeEvaluations'] :: DescribeEvaluations -> Maybe Text

-- | The less than operator. The <tt>Evaluation</tt> results will have
--   <tt>FilterVariable</tt> values that are less than the value specified
--   with <tt>LT</tt>.
[$sel:lt:DescribeEvaluations'] :: DescribeEvaluations -> Maybe Text

-- | The maximum number of <tt>Evaluation</tt> to include in the result.
[$sel:limit:DescribeEvaluations'] :: DescribeEvaluations -> Maybe Natural

-- | Create a value of <a>DescribeEvaluations</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eq:DescribeEvaluations'</a>, <a>describeEvaluations_eq</a> -
--   The equal to operator. The <tt>Evaluation</tt> results will have
--   <tt>FilterVariable</tt> values that exactly match the value specified
--   with <tt>EQ</tt>.
--   
--   <a>$sel:nextToken:DescribeEvaluations'</a>,
--   <a>describeEvaluations_nextToken</a> - The ID of the page in the
--   paginated results.
--   
--   <a>$sel:sortOrder:DescribeEvaluations'</a>,
--   <a>describeEvaluations_sortOrder</a> - A two-value parameter that
--   determines the sequence of the resulting list of <tt>Evaluation</tt>.
--   
--   <ul>
--   <li><tt>asc</tt> - Arranges the list in ascending order (A-Z,
--   0-9).</li>
--   <li><tt>dsc</tt> - Arranges the list in descending order (Z-A,
--   9-0).</li>
--   </ul>
--   
--   Results are sorted by <tt>FilterVariable</tt>.
--   
--   <a>$sel:filterVariable:DescribeEvaluations'</a>,
--   <a>describeEvaluations_filterVariable</a> - Use one of the following
--   variable to filter a list of <tt>Evaluation</tt> objects:
--   
--   <ul>
--   <li><tt>CreatedAt</tt> - Sets the search criteria to the
--   <tt>Evaluation</tt> creation date.</li>
--   <li><tt>Status</tt> - Sets the search criteria to the
--   <tt>Evaluation</tt> status.</li>
--   <li><tt>Name</tt> - Sets the search criteria to the contents of
--   <tt>Evaluation</tt> ____ <tt>Name</tt>.</li>
--   <li><tt>IAMUser</tt> - Sets the search criteria to the user account
--   that invoked an <tt>Evaluation</tt>.</li>
--   <li><tt>MLModelId</tt> - Sets the search criteria to the
--   <tt>MLModel</tt> that was evaluated.</li>
--   <li><tt>DataSourceId</tt> - Sets the search criteria to the
--   <tt>DataSource</tt> used in <tt>Evaluation</tt>.</li>
--   <li><tt>DataUri</tt> - Sets the search criteria to the data file(s)
--   used in <tt>Evaluation</tt>. The URL can identify either a file or an
--   Amazon Simple Storage Solution (Amazon S3) bucket or directory.</li>
--   </ul>
--   
--   <a>$sel:gt:DescribeEvaluations'</a>, <a>describeEvaluations_gt</a> -
--   The greater than operator. The <tt>Evaluation</tt> results will have
--   <tt>FilterVariable</tt> values that are greater than the value
--   specified with <tt>GT</tt>.
--   
--   <a>$sel:ne:DescribeEvaluations'</a>, <a>describeEvaluations_ne</a> -
--   The not equal to operator. The <tt>Evaluation</tt> results will have
--   <tt>FilterVariable</tt> values not equal to the value specified with
--   <tt>NE</tt>.
--   
--   <a>$sel:prefix:DescribeEvaluations'</a>,
--   <a>describeEvaluations_prefix</a> - A string that is found at the
--   beginning of a variable, such as <tt>Name</tt> or <tt>Id</tt>.
--   
--   For example, an <tt>Evaluation</tt> could have the <tt>Name</tt>
--   <tt>2014-09-09-HolidayGiftMailer</tt>. To search for this
--   <tt>Evaluation</tt>, select <tt>Name</tt> for the
--   <tt>FilterVariable</tt> and any of the following strings for the
--   <tt>Prefix</tt>:
--   
--   <ul>
--   <li>2014-09</li>
--   <li>2014-09-09</li>
--   <li>2014-09-09-Holiday</li>
--   </ul>
--   
--   <a>$sel:ge:DescribeEvaluations'</a>, <a>describeEvaluations_ge</a> -
--   The greater than or equal to operator. The <tt>Evaluation</tt> results
--   will have <tt>FilterVariable</tt> values that are greater than or
--   equal to the value specified with <tt>GE</tt>.
--   
--   <a>$sel:le:DescribeEvaluations'</a>, <a>describeEvaluations_le</a> -
--   The less than or equal to operator. The <tt>Evaluation</tt> results
--   will have <tt>FilterVariable</tt> values that are less than or equal
--   to the value specified with <tt>LE</tt>.
--   
--   <a>$sel:lt:DescribeEvaluations'</a>, <a>describeEvaluations_lt</a> -
--   The less than operator. The <tt>Evaluation</tt> results will have
--   <tt>FilterVariable</tt> values that are less than the value specified
--   with <tt>LT</tt>.
--   
--   <a>$sel:limit:DescribeEvaluations'</a>,
--   <a>describeEvaluations_limit</a> - The maximum number of
--   <tt>Evaluation</tt> to include in the result.
newDescribeEvaluations :: DescribeEvaluations

-- | The equal to operator. The <tt>Evaluation</tt> results will have
--   <tt>FilterVariable</tt> values that exactly match the value specified
--   with <tt>EQ</tt>.
describeEvaluations_eq :: Lens' DescribeEvaluations (Maybe Text)

-- | The ID of the page in the paginated results.
describeEvaluations_nextToken :: Lens' DescribeEvaluations (Maybe Text)

-- | A two-value parameter that determines the sequence of the resulting
--   list of <tt>Evaluation</tt>.
--   
--   <ul>
--   <li><tt>asc</tt> - Arranges the list in ascending order (A-Z,
--   0-9).</li>
--   <li><tt>dsc</tt> - Arranges the list in descending order (Z-A,
--   9-0).</li>
--   </ul>
--   
--   Results are sorted by <tt>FilterVariable</tt>.
describeEvaluations_sortOrder :: Lens' DescribeEvaluations (Maybe SortOrder)

-- | Use one of the following variable to filter a list of
--   <tt>Evaluation</tt> objects:
--   
--   <ul>
--   <li><tt>CreatedAt</tt> - Sets the search criteria to the
--   <tt>Evaluation</tt> creation date.</li>
--   <li><tt>Status</tt> - Sets the search criteria to the
--   <tt>Evaluation</tt> status.</li>
--   <li><tt>Name</tt> - Sets the search criteria to the contents of
--   <tt>Evaluation</tt> ____ <tt>Name</tt>.</li>
--   <li><tt>IAMUser</tt> - Sets the search criteria to the user account
--   that invoked an <tt>Evaluation</tt>.</li>
--   <li><tt>MLModelId</tt> - Sets the search criteria to the
--   <tt>MLModel</tt> that was evaluated.</li>
--   <li><tt>DataSourceId</tt> - Sets the search criteria to the
--   <tt>DataSource</tt> used in <tt>Evaluation</tt>.</li>
--   <li><tt>DataUri</tt> - Sets the search criteria to the data file(s)
--   used in <tt>Evaluation</tt>. The URL can identify either a file or an
--   Amazon Simple Storage Solution (Amazon S3) bucket or directory.</li>
--   </ul>
describeEvaluations_filterVariable :: Lens' DescribeEvaluations (Maybe EvaluationFilterVariable)

-- | The greater than operator. The <tt>Evaluation</tt> results will have
--   <tt>FilterVariable</tt> values that are greater than the value
--   specified with <tt>GT</tt>.
describeEvaluations_gt :: Lens' DescribeEvaluations (Maybe Text)

-- | The not equal to operator. The <tt>Evaluation</tt> results will have
--   <tt>FilterVariable</tt> values not equal to the value specified with
--   <tt>NE</tt>.
describeEvaluations_ne :: Lens' DescribeEvaluations (Maybe Text)

-- | A string that is found at the beginning of a variable, such as
--   <tt>Name</tt> or <tt>Id</tt>.
--   
--   For example, an <tt>Evaluation</tt> could have the <tt>Name</tt>
--   <tt>2014-09-09-HolidayGiftMailer</tt>. To search for this
--   <tt>Evaluation</tt>, select <tt>Name</tt> for the
--   <tt>FilterVariable</tt> and any of the following strings for the
--   <tt>Prefix</tt>:
--   
--   <ul>
--   <li>2014-09</li>
--   <li>2014-09-09</li>
--   <li>2014-09-09-Holiday</li>
--   </ul>
describeEvaluations_prefix :: Lens' DescribeEvaluations (Maybe Text)

-- | The greater than or equal to operator. The <tt>Evaluation</tt> results
--   will have <tt>FilterVariable</tt> values that are greater than or
--   equal to the value specified with <tt>GE</tt>.
describeEvaluations_ge :: Lens' DescribeEvaluations (Maybe Text)

-- | The less than or equal to operator. The <tt>Evaluation</tt> results
--   will have <tt>FilterVariable</tt> values that are less than or equal
--   to the value specified with <tt>LE</tt>.
describeEvaluations_le :: Lens' DescribeEvaluations (Maybe Text)

-- | The less than operator. The <tt>Evaluation</tt> results will have
--   <tt>FilterVariable</tt> values that are less than the value specified
--   with <tt>LT</tt>.
describeEvaluations_lt :: Lens' DescribeEvaluations (Maybe Text)

-- | The maximum number of <tt>Evaluation</tt> to include in the result.
describeEvaluations_limit :: Lens' DescribeEvaluations (Maybe Natural)

-- | Represents the query results from a <tt>DescribeEvaluations</tt>
--   operation. The content is essentially a list of <tt>Evaluation</tt>.
--   
--   <i>See:</i> <a>newDescribeEvaluationsResponse</a> smart constructor.
data DescribeEvaluationsResponse
DescribeEvaluationsResponse' :: Maybe Text -> Maybe [Evaluation] -> Int -> DescribeEvaluationsResponse

-- | The ID of the next page in the paginated results that indicates at
--   least one more page follows.
[$sel:nextToken:DescribeEvaluationsResponse'] :: DescribeEvaluationsResponse -> Maybe Text

-- | A list of <tt>Evaluation</tt> that meet the search criteria.
[$sel:results:DescribeEvaluationsResponse'] :: DescribeEvaluationsResponse -> Maybe [Evaluation]

-- | The response's http status code.
[$sel:httpStatus:DescribeEvaluationsResponse'] :: DescribeEvaluationsResponse -> Int

-- | Create a value of <a>DescribeEvaluationsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeEvaluations'</a>,
--   <a>describeEvaluationsResponse_nextToken</a> - The ID of the next page
--   in the paginated results that indicates at least one more page
--   follows.
--   
--   <a>$sel:results:DescribeEvaluationsResponse'</a>,
--   <a>describeEvaluationsResponse_results</a> - A list of
--   <tt>Evaluation</tt> that meet the search criteria.
--   
--   <a>$sel:httpStatus:DescribeEvaluationsResponse'</a>,
--   <a>describeEvaluationsResponse_httpStatus</a> - The response's http
--   status code.
newDescribeEvaluationsResponse :: Int -> DescribeEvaluationsResponse

-- | The ID of the next page in the paginated results that indicates at
--   least one more page follows.
describeEvaluationsResponse_nextToken :: Lens' DescribeEvaluationsResponse (Maybe Text)

-- | A list of <tt>Evaluation</tt> that meet the search criteria.
describeEvaluationsResponse_results :: Lens' DescribeEvaluationsResponse (Maybe [Evaluation])

-- | The response's http status code.
describeEvaluationsResponse_httpStatus :: Lens' DescribeEvaluationsResponse Int
instance GHC.Generics.Generic Network.AWS.MachineLearning.DescribeEvaluations.DescribeEvaluations
instance GHC.Show.Show Network.AWS.MachineLearning.DescribeEvaluations.DescribeEvaluations
instance GHC.Read.Read Network.AWS.MachineLearning.DescribeEvaluations.DescribeEvaluations
instance GHC.Classes.Eq Network.AWS.MachineLearning.DescribeEvaluations.DescribeEvaluations
instance GHC.Generics.Generic Network.AWS.MachineLearning.DescribeEvaluations.DescribeEvaluationsResponse
instance GHC.Show.Show Network.AWS.MachineLearning.DescribeEvaluations.DescribeEvaluationsResponse
instance GHC.Read.Read Network.AWS.MachineLearning.DescribeEvaluations.DescribeEvaluationsResponse
instance GHC.Classes.Eq Network.AWS.MachineLearning.DescribeEvaluations.DescribeEvaluationsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.MachineLearning.DescribeEvaluations.DescribeEvaluations
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.DescribeEvaluations.DescribeEvaluationsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.MachineLearning.DescribeEvaluations.DescribeEvaluations
instance Data.Hashable.Class.Hashable Network.AWS.MachineLearning.DescribeEvaluations.DescribeEvaluations
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.DescribeEvaluations.DescribeEvaluations
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.MachineLearning.DescribeEvaluations.DescribeEvaluations
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MachineLearning.DescribeEvaluations.DescribeEvaluations
instance Network.AWS.Data.Path.ToPath Network.AWS.MachineLearning.DescribeEvaluations.DescribeEvaluations
instance Network.AWS.Data.Query.ToQuery Network.AWS.MachineLearning.DescribeEvaluations.DescribeEvaluations


-- | Returns a list of <tt>DataSource</tt> that match the search criteria
--   in the request.
--   
--   This operation returns paginated results.
module Network.AWS.MachineLearning.DescribeDataSources

-- | <i>See:</i> <a>newDescribeDataSources</a> smart constructor.
data DescribeDataSources
DescribeDataSources' :: Maybe Text -> Maybe Text -> Maybe SortOrder -> Maybe DataSourceFilterVariable -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> DescribeDataSources

-- | The equal to operator. The <tt>DataSource</tt> results will have
--   <tt>FilterVariable</tt> values that exactly match the value specified
--   with <tt>EQ</tt>.
[$sel:eq:DescribeDataSources'] :: DescribeDataSources -> Maybe Text

-- | The ID of the page in the paginated results.
[$sel:nextToken:DescribeDataSources'] :: DescribeDataSources -> Maybe Text

-- | A two-value parameter that determines the sequence of the resulting
--   list of <tt>DataSource</tt>.
--   
--   <ul>
--   <li><tt>asc</tt> - Arranges the list in ascending order (A-Z,
--   0-9).</li>
--   <li><tt>dsc</tt> - Arranges the list in descending order (Z-A,
--   9-0).</li>
--   </ul>
--   
--   Results are sorted by <tt>FilterVariable</tt>.
[$sel:sortOrder:DescribeDataSources'] :: DescribeDataSources -> Maybe SortOrder

-- | Use one of the following variables to filter a list of
--   <tt>DataSource</tt>:
--   
--   <ul>
--   <li><tt>CreatedAt</tt> - Sets the search criteria to
--   <tt>DataSource</tt> creation dates.</li>
--   <li><tt>Status</tt> - Sets the search criteria to <tt>DataSource</tt>
--   statuses.</li>
--   <li><tt>Name</tt> - Sets the search criteria to the contents of
--   <tt>DataSource</tt> <tt>Name</tt>.</li>
--   <li><tt>DataUri</tt> - Sets the search criteria to the URI of data
--   files used to create the <tt>DataSource</tt>. The URI can identify
--   either a file or an Amazon Simple Storage Service (Amazon S3) bucket
--   or directory.</li>
--   <li><tt>IAMUser</tt> - Sets the search criteria to the user account
--   that invoked the <tt>DataSource</tt> creation.</li>
--   </ul>
[$sel:filterVariable:DescribeDataSources'] :: DescribeDataSources -> Maybe DataSourceFilterVariable

-- | The greater than operator. The <tt>DataSource</tt> results will have
--   <tt>FilterVariable</tt> values that are greater than the value
--   specified with <tt>GT</tt>.
[$sel:gt:DescribeDataSources'] :: DescribeDataSources -> Maybe Text

-- | The not equal to operator. The <tt>DataSource</tt> results will have
--   <tt>FilterVariable</tt> values not equal to the value specified with
--   <tt>NE</tt>.
[$sel:ne:DescribeDataSources'] :: DescribeDataSources -> Maybe Text

-- | A string that is found at the beginning of a variable, such as
--   <tt>Name</tt> or <tt>Id</tt>.
--   
--   For example, a <tt>DataSource</tt> could have the <tt>Name</tt>
--   <tt>2014-09-09-HolidayGiftMailer</tt>. To search for this
--   <tt>DataSource</tt>, select <tt>Name</tt> for the
--   <tt>FilterVariable</tt> and any of the following strings for the
--   <tt>Prefix</tt>:
--   
--   <ul>
--   <li>2014-09</li>
--   <li>2014-09-09</li>
--   <li>2014-09-09-Holiday</li>
--   </ul>
[$sel:prefix:DescribeDataSources'] :: DescribeDataSources -> Maybe Text

-- | The greater than or equal to operator. The <tt>DataSource</tt> results
--   will have <tt>FilterVariable</tt> values that are greater than or
--   equal to the value specified with <tt>GE</tt>.
[$sel:ge:DescribeDataSources'] :: DescribeDataSources -> Maybe Text

-- | The less than or equal to operator. The <tt>DataSource</tt> results
--   will have <tt>FilterVariable</tt> values that are less than or equal
--   to the value specified with <tt>LE</tt>.
[$sel:le:DescribeDataSources'] :: DescribeDataSources -> Maybe Text

-- | The less than operator. The <tt>DataSource</tt> results will have
--   <tt>FilterVariable</tt> values that are less than the value specified
--   with <tt>LT</tt>.
[$sel:lt:DescribeDataSources'] :: DescribeDataSources -> Maybe Text

-- | The maximum number of <tt>DataSource</tt> to include in the result.
[$sel:limit:DescribeDataSources'] :: DescribeDataSources -> Maybe Natural

-- | Create a value of <a>DescribeDataSources</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eq:DescribeDataSources'</a>, <a>describeDataSources_eq</a> -
--   The equal to operator. The <tt>DataSource</tt> results will have
--   <tt>FilterVariable</tt> values that exactly match the value specified
--   with <tt>EQ</tt>.
--   
--   <a>$sel:nextToken:DescribeDataSources'</a>,
--   <a>describeDataSources_nextToken</a> - The ID of the page in the
--   paginated results.
--   
--   <a>$sel:sortOrder:DescribeDataSources'</a>,
--   <a>describeDataSources_sortOrder</a> - A two-value parameter that
--   determines the sequence of the resulting list of <tt>DataSource</tt>.
--   
--   <ul>
--   <li><tt>asc</tt> - Arranges the list in ascending order (A-Z,
--   0-9).</li>
--   <li><tt>dsc</tt> - Arranges the list in descending order (Z-A,
--   9-0).</li>
--   </ul>
--   
--   Results are sorted by <tt>FilterVariable</tt>.
--   
--   <a>$sel:filterVariable:DescribeDataSources'</a>,
--   <a>describeDataSources_filterVariable</a> - Use one of the following
--   variables to filter a list of <tt>DataSource</tt>:
--   
--   <ul>
--   <li><tt>CreatedAt</tt> - Sets the search criteria to
--   <tt>DataSource</tt> creation dates.</li>
--   <li><tt>Status</tt> - Sets the search criteria to <tt>DataSource</tt>
--   statuses.</li>
--   <li><tt>Name</tt> - Sets the search criteria to the contents of
--   <tt>DataSource</tt> <tt>Name</tt>.</li>
--   <li><tt>DataUri</tt> - Sets the search criteria to the URI of data
--   files used to create the <tt>DataSource</tt>. The URI can identify
--   either a file or an Amazon Simple Storage Service (Amazon S3) bucket
--   or directory.</li>
--   <li><tt>IAMUser</tt> - Sets the search criteria to the user account
--   that invoked the <tt>DataSource</tt> creation.</li>
--   </ul>
--   
--   <a>$sel:gt:DescribeDataSources'</a>, <a>describeDataSources_gt</a> -
--   The greater than operator. The <tt>DataSource</tt> results will have
--   <tt>FilterVariable</tt> values that are greater than the value
--   specified with <tt>GT</tt>.
--   
--   <a>$sel:ne:DescribeDataSources'</a>, <a>describeDataSources_ne</a> -
--   The not equal to operator. The <tt>DataSource</tt> results will have
--   <tt>FilterVariable</tt> values not equal to the value specified with
--   <tt>NE</tt>.
--   
--   <a>$sel:prefix:DescribeDataSources'</a>,
--   <a>describeDataSources_prefix</a> - A string that is found at the
--   beginning of a variable, such as <tt>Name</tt> or <tt>Id</tt>.
--   
--   For example, a <tt>DataSource</tt> could have the <tt>Name</tt>
--   <tt>2014-09-09-HolidayGiftMailer</tt>. To search for this
--   <tt>DataSource</tt>, select <tt>Name</tt> for the
--   <tt>FilterVariable</tt> and any of the following strings for the
--   <tt>Prefix</tt>:
--   
--   <ul>
--   <li>2014-09</li>
--   <li>2014-09-09</li>
--   <li>2014-09-09-Holiday</li>
--   </ul>
--   
--   <a>$sel:ge:DescribeDataSources'</a>, <a>describeDataSources_ge</a> -
--   The greater than or equal to operator. The <tt>DataSource</tt> results
--   will have <tt>FilterVariable</tt> values that are greater than or
--   equal to the value specified with <tt>GE</tt>.
--   
--   <a>$sel:le:DescribeDataSources'</a>, <a>describeDataSources_le</a> -
--   The less than or equal to operator. The <tt>DataSource</tt> results
--   will have <tt>FilterVariable</tt> values that are less than or equal
--   to the value specified with <tt>LE</tt>.
--   
--   <a>$sel:lt:DescribeDataSources'</a>, <a>describeDataSources_lt</a> -
--   The less than operator. The <tt>DataSource</tt> results will have
--   <tt>FilterVariable</tt> values that are less than the value specified
--   with <tt>LT</tt>.
--   
--   <a>$sel:limit:DescribeDataSources'</a>,
--   <a>describeDataSources_limit</a> - The maximum number of
--   <tt>DataSource</tt> to include in the result.
newDescribeDataSources :: DescribeDataSources

-- | The equal to operator. The <tt>DataSource</tt> results will have
--   <tt>FilterVariable</tt> values that exactly match the value specified
--   with <tt>EQ</tt>.
describeDataSources_eq :: Lens' DescribeDataSources (Maybe Text)

-- | The ID of the page in the paginated results.
describeDataSources_nextToken :: Lens' DescribeDataSources (Maybe Text)

-- | A two-value parameter that determines the sequence of the resulting
--   list of <tt>DataSource</tt>.
--   
--   <ul>
--   <li><tt>asc</tt> - Arranges the list in ascending order (A-Z,
--   0-9).</li>
--   <li><tt>dsc</tt> - Arranges the list in descending order (Z-A,
--   9-0).</li>
--   </ul>
--   
--   Results are sorted by <tt>FilterVariable</tt>.
describeDataSources_sortOrder :: Lens' DescribeDataSources (Maybe SortOrder)

-- | Use one of the following variables to filter a list of
--   <tt>DataSource</tt>:
--   
--   <ul>
--   <li><tt>CreatedAt</tt> - Sets the search criteria to
--   <tt>DataSource</tt> creation dates.</li>
--   <li><tt>Status</tt> - Sets the search criteria to <tt>DataSource</tt>
--   statuses.</li>
--   <li><tt>Name</tt> - Sets the search criteria to the contents of
--   <tt>DataSource</tt> <tt>Name</tt>.</li>
--   <li><tt>DataUri</tt> - Sets the search criteria to the URI of data
--   files used to create the <tt>DataSource</tt>. The URI can identify
--   either a file or an Amazon Simple Storage Service (Amazon S3) bucket
--   or directory.</li>
--   <li><tt>IAMUser</tt> - Sets the search criteria to the user account
--   that invoked the <tt>DataSource</tt> creation.</li>
--   </ul>
describeDataSources_filterVariable :: Lens' DescribeDataSources (Maybe DataSourceFilterVariable)

-- | The greater than operator. The <tt>DataSource</tt> results will have
--   <tt>FilterVariable</tt> values that are greater than the value
--   specified with <tt>GT</tt>.
describeDataSources_gt :: Lens' DescribeDataSources (Maybe Text)

-- | The not equal to operator. The <tt>DataSource</tt> results will have
--   <tt>FilterVariable</tt> values not equal to the value specified with
--   <tt>NE</tt>.
describeDataSources_ne :: Lens' DescribeDataSources (Maybe Text)

-- | A string that is found at the beginning of a variable, such as
--   <tt>Name</tt> or <tt>Id</tt>.
--   
--   For example, a <tt>DataSource</tt> could have the <tt>Name</tt>
--   <tt>2014-09-09-HolidayGiftMailer</tt>. To search for this
--   <tt>DataSource</tt>, select <tt>Name</tt> for the
--   <tt>FilterVariable</tt> and any of the following strings for the
--   <tt>Prefix</tt>:
--   
--   <ul>
--   <li>2014-09</li>
--   <li>2014-09-09</li>
--   <li>2014-09-09-Holiday</li>
--   </ul>
describeDataSources_prefix :: Lens' DescribeDataSources (Maybe Text)

-- | The greater than or equal to operator. The <tt>DataSource</tt> results
--   will have <tt>FilterVariable</tt> values that are greater than or
--   equal to the value specified with <tt>GE</tt>.
describeDataSources_ge :: Lens' DescribeDataSources (Maybe Text)

-- | The less than or equal to operator. The <tt>DataSource</tt> results
--   will have <tt>FilterVariable</tt> values that are less than or equal
--   to the value specified with <tt>LE</tt>.
describeDataSources_le :: Lens' DescribeDataSources (Maybe Text)

-- | The less than operator. The <tt>DataSource</tt> results will have
--   <tt>FilterVariable</tt> values that are less than the value specified
--   with <tt>LT</tt>.
describeDataSources_lt :: Lens' DescribeDataSources (Maybe Text)

-- | The maximum number of <tt>DataSource</tt> to include in the result.
describeDataSources_limit :: Lens' DescribeDataSources (Maybe Natural)

-- | Represents the query results from a DescribeDataSources operation. The
--   content is essentially a list of <tt>DataSource</tt>.
--   
--   <i>See:</i> <a>newDescribeDataSourcesResponse</a> smart constructor.
data DescribeDataSourcesResponse
DescribeDataSourcesResponse' :: Maybe Text -> Maybe [DataSource] -> Int -> DescribeDataSourcesResponse

-- | An ID of the next page in the paginated results that indicates at
--   least one more page follows.
[$sel:nextToken:DescribeDataSourcesResponse'] :: DescribeDataSourcesResponse -> Maybe Text

-- | A list of <tt>DataSource</tt> that meet the search criteria.
[$sel:results:DescribeDataSourcesResponse'] :: DescribeDataSourcesResponse -> Maybe [DataSource]

-- | The response's http status code.
[$sel:httpStatus:DescribeDataSourcesResponse'] :: DescribeDataSourcesResponse -> Int

-- | Create a value of <a>DescribeDataSourcesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeDataSources'</a>,
--   <a>describeDataSourcesResponse_nextToken</a> - An ID of the next page
--   in the paginated results that indicates at least one more page
--   follows.
--   
--   <a>$sel:results:DescribeDataSourcesResponse'</a>,
--   <a>describeDataSourcesResponse_results</a> - A list of
--   <tt>DataSource</tt> that meet the search criteria.
--   
--   <a>$sel:httpStatus:DescribeDataSourcesResponse'</a>,
--   <a>describeDataSourcesResponse_httpStatus</a> - The response's http
--   status code.
newDescribeDataSourcesResponse :: Int -> DescribeDataSourcesResponse

-- | An ID of the next page in the paginated results that indicates at
--   least one more page follows.
describeDataSourcesResponse_nextToken :: Lens' DescribeDataSourcesResponse (Maybe Text)

-- | A list of <tt>DataSource</tt> that meet the search criteria.
describeDataSourcesResponse_results :: Lens' DescribeDataSourcesResponse (Maybe [DataSource])

-- | The response's http status code.
describeDataSourcesResponse_httpStatus :: Lens' DescribeDataSourcesResponse Int
instance GHC.Generics.Generic Network.AWS.MachineLearning.DescribeDataSources.DescribeDataSources
instance GHC.Show.Show Network.AWS.MachineLearning.DescribeDataSources.DescribeDataSources
instance GHC.Read.Read Network.AWS.MachineLearning.DescribeDataSources.DescribeDataSources
instance GHC.Classes.Eq Network.AWS.MachineLearning.DescribeDataSources.DescribeDataSources
instance GHC.Generics.Generic Network.AWS.MachineLearning.DescribeDataSources.DescribeDataSourcesResponse
instance GHC.Show.Show Network.AWS.MachineLearning.DescribeDataSources.DescribeDataSourcesResponse
instance GHC.Read.Read Network.AWS.MachineLearning.DescribeDataSources.DescribeDataSourcesResponse
instance GHC.Classes.Eq Network.AWS.MachineLearning.DescribeDataSources.DescribeDataSourcesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.MachineLearning.DescribeDataSources.DescribeDataSources
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.DescribeDataSources.DescribeDataSourcesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.MachineLearning.DescribeDataSources.DescribeDataSources
instance Data.Hashable.Class.Hashable Network.AWS.MachineLearning.DescribeDataSources.DescribeDataSources
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.DescribeDataSources.DescribeDataSources
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.MachineLearning.DescribeDataSources.DescribeDataSources
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MachineLearning.DescribeDataSources.DescribeDataSources
instance Network.AWS.Data.Path.ToPath Network.AWS.MachineLearning.DescribeDataSources.DescribeDataSources
instance Network.AWS.Data.Query.ToQuery Network.AWS.MachineLearning.DescribeDataSources.DescribeDataSources


-- | Returns a list of <tt>BatchPrediction</tt> operations that match the
--   search criteria in the request.
--   
--   This operation returns paginated results.
module Network.AWS.MachineLearning.DescribeBatchPredictions

-- | <i>See:</i> <a>newDescribeBatchPredictions</a> smart constructor.
data DescribeBatchPredictions
DescribeBatchPredictions' :: Maybe Text -> Maybe Text -> Maybe SortOrder -> Maybe BatchPredictionFilterVariable -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> DescribeBatchPredictions

-- | The equal to operator. The <tt>BatchPrediction</tt> results will have
--   <tt>FilterVariable</tt> values that exactly match the value specified
--   with <tt>EQ</tt>.
[$sel:eq:DescribeBatchPredictions'] :: DescribeBatchPredictions -> Maybe Text

-- | An ID of the page in the paginated results.
[$sel:nextToken:DescribeBatchPredictions'] :: DescribeBatchPredictions -> Maybe Text

-- | A two-value parameter that determines the sequence of the resulting
--   list of <tt>MLModel</tt>s.
--   
--   <ul>
--   <li><tt>asc</tt> - Arranges the list in ascending order (A-Z,
--   0-9).</li>
--   <li><tt>dsc</tt> - Arranges the list in descending order (Z-A,
--   9-0).</li>
--   </ul>
--   
--   Results are sorted by <tt>FilterVariable</tt>.
[$sel:sortOrder:DescribeBatchPredictions'] :: DescribeBatchPredictions -> Maybe SortOrder

-- | Use one of the following variables to filter a list of
--   <tt>BatchPrediction</tt>:
--   
--   <ul>
--   <li><tt>CreatedAt</tt> - Sets the search criteria to the
--   <tt>BatchPrediction</tt> creation date.</li>
--   <li><tt>Status</tt> - Sets the search criteria to the
--   <tt>BatchPrediction</tt> status.</li>
--   <li><tt>Name</tt> - Sets the search criteria to the contents of the
--   <tt>BatchPrediction</tt> ____ <tt>Name</tt>.</li>
--   <li><tt>IAMUser</tt> - Sets the search criteria to the user account
--   that invoked the <tt>BatchPrediction</tt> creation.</li>
--   <li><tt>MLModelId</tt> - Sets the search criteria to the
--   <tt>MLModel</tt> used in the <tt>BatchPrediction</tt>.</li>
--   <li><tt>DataSourceId</tt> - Sets the search criteria to the
--   <tt>DataSource</tt> used in the <tt>BatchPrediction</tt>.</li>
--   <li><tt>DataURI</tt> - Sets the search criteria to the data file(s)
--   used in the <tt>BatchPrediction</tt>. The URL can identify either a
--   file or an Amazon Simple Storage Solution (Amazon S3) bucket or
--   directory.</li>
--   </ul>
[$sel:filterVariable:DescribeBatchPredictions'] :: DescribeBatchPredictions -> Maybe BatchPredictionFilterVariable

-- | The greater than operator. The <tt>BatchPrediction</tt> results will
--   have <tt>FilterVariable</tt> values that are greater than the value
--   specified with <tt>GT</tt>.
[$sel:gt:DescribeBatchPredictions'] :: DescribeBatchPredictions -> Maybe Text

-- | The not equal to operator. The <tt>BatchPrediction</tt> results will
--   have <tt>FilterVariable</tt> values not equal to the value specified
--   with <tt>NE</tt>.
[$sel:ne:DescribeBatchPredictions'] :: DescribeBatchPredictions -> Maybe Text

-- | A string that is found at the beginning of a variable, such as
--   <tt>Name</tt> or <tt>Id</tt>.
--   
--   For example, a <tt>Batch Prediction</tt> operation could have the
--   <tt>Name</tt> <tt>2014-09-09-HolidayGiftMailer</tt>. To search for
--   this <tt>BatchPrediction</tt>, select <tt>Name</tt> for the
--   <tt>FilterVariable</tt> and any of the following strings for the
--   <tt>Prefix</tt>:
--   
--   <ul>
--   <li>2014-09</li>
--   <li>2014-09-09</li>
--   <li>2014-09-09-Holiday</li>
--   </ul>
[$sel:prefix:DescribeBatchPredictions'] :: DescribeBatchPredictions -> Maybe Text

-- | The greater than or equal to operator. The <tt>BatchPrediction</tt>
--   results will have <tt>FilterVariable</tt> values that are greater than
--   or equal to the value specified with <tt>GE</tt>.
[$sel:ge:DescribeBatchPredictions'] :: DescribeBatchPredictions -> Maybe Text

-- | The less than or equal to operator. The <tt>BatchPrediction</tt>
--   results will have <tt>FilterVariable</tt> values that are less than or
--   equal to the value specified with <tt>LE</tt>.
[$sel:le:DescribeBatchPredictions'] :: DescribeBatchPredictions -> Maybe Text

-- | The less than operator. The <tt>BatchPrediction</tt> results will have
--   <tt>FilterVariable</tt> values that are less than the value specified
--   with <tt>LT</tt>.
[$sel:lt:DescribeBatchPredictions'] :: DescribeBatchPredictions -> Maybe Text

-- | The number of pages of information to include in the result. The range
--   of acceptable values is <tt>1</tt> through <tt>100</tt>. The default
--   value is <tt>100</tt>.
[$sel:limit:DescribeBatchPredictions'] :: DescribeBatchPredictions -> Maybe Natural

-- | Create a value of <a>DescribeBatchPredictions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eq:DescribeBatchPredictions'</a>,
--   <a>describeBatchPredictions_eq</a> - The equal to operator. The
--   <tt>BatchPrediction</tt> results will have <tt>FilterVariable</tt>
--   values that exactly match the value specified with <tt>EQ</tt>.
--   
--   <a>$sel:nextToken:DescribeBatchPredictions'</a>,
--   <a>describeBatchPredictions_nextToken</a> - An ID of the page in the
--   paginated results.
--   
--   <a>$sel:sortOrder:DescribeBatchPredictions'</a>,
--   <a>describeBatchPredictions_sortOrder</a> - A two-value parameter that
--   determines the sequence of the resulting list of <tt>MLModel</tt>s.
--   
--   <ul>
--   <li><tt>asc</tt> - Arranges the list in ascending order (A-Z,
--   0-9).</li>
--   <li><tt>dsc</tt> - Arranges the list in descending order (Z-A,
--   9-0).</li>
--   </ul>
--   
--   Results are sorted by <tt>FilterVariable</tt>.
--   
--   <a>$sel:filterVariable:DescribeBatchPredictions'</a>,
--   <a>describeBatchPredictions_filterVariable</a> - Use one of the
--   following variables to filter a list of <tt>BatchPrediction</tt>:
--   
--   <ul>
--   <li><tt>CreatedAt</tt> - Sets the search criteria to the
--   <tt>BatchPrediction</tt> creation date.</li>
--   <li><tt>Status</tt> - Sets the search criteria to the
--   <tt>BatchPrediction</tt> status.</li>
--   <li><tt>Name</tt> - Sets the search criteria to the contents of the
--   <tt>BatchPrediction</tt> ____ <tt>Name</tt>.</li>
--   <li><tt>IAMUser</tt> - Sets the search criteria to the user account
--   that invoked the <tt>BatchPrediction</tt> creation.</li>
--   <li><tt>MLModelId</tt> - Sets the search criteria to the
--   <tt>MLModel</tt> used in the <tt>BatchPrediction</tt>.</li>
--   <li><tt>DataSourceId</tt> - Sets the search criteria to the
--   <tt>DataSource</tt> used in the <tt>BatchPrediction</tt>.</li>
--   <li><tt>DataURI</tt> - Sets the search criteria to the data file(s)
--   used in the <tt>BatchPrediction</tt>. The URL can identify either a
--   file or an Amazon Simple Storage Solution (Amazon S3) bucket or
--   directory.</li>
--   </ul>
--   
--   <a>$sel:gt:DescribeBatchPredictions'</a>,
--   <a>describeBatchPredictions_gt</a> - The greater than operator. The
--   <tt>BatchPrediction</tt> results will have <tt>FilterVariable</tt>
--   values that are greater than the value specified with <tt>GT</tt>.
--   
--   <a>$sel:ne:DescribeBatchPredictions'</a>,
--   <a>describeBatchPredictions_ne</a> - The not equal to operator. The
--   <tt>BatchPrediction</tt> results will have <tt>FilterVariable</tt>
--   values not equal to the value specified with <tt>NE</tt>.
--   
--   <a>$sel:prefix:DescribeBatchPredictions'</a>,
--   <a>describeBatchPredictions_prefix</a> - A string that is found at the
--   beginning of a variable, such as <tt>Name</tt> or <tt>Id</tt>.
--   
--   For example, a <tt>Batch Prediction</tt> operation could have the
--   <tt>Name</tt> <tt>2014-09-09-HolidayGiftMailer</tt>. To search for
--   this <tt>BatchPrediction</tt>, select <tt>Name</tt> for the
--   <tt>FilterVariable</tt> and any of the following strings for the
--   <tt>Prefix</tt>:
--   
--   <ul>
--   <li>2014-09</li>
--   <li>2014-09-09</li>
--   <li>2014-09-09-Holiday</li>
--   </ul>
--   
--   <a>$sel:ge:DescribeBatchPredictions'</a>,
--   <a>describeBatchPredictions_ge</a> - The greater than or equal to
--   operator. The <tt>BatchPrediction</tt> results will have
--   <tt>FilterVariable</tt> values that are greater than or equal to the
--   value specified with <tt>GE</tt>.
--   
--   <a>$sel:le:DescribeBatchPredictions'</a>,
--   <a>describeBatchPredictions_le</a> - The less than or equal to
--   operator. The <tt>BatchPrediction</tt> results will have
--   <tt>FilterVariable</tt> values that are less than or equal to the
--   value specified with <tt>LE</tt>.
--   
--   <a>$sel:lt:DescribeBatchPredictions'</a>,
--   <a>describeBatchPredictions_lt</a> - The less than operator. The
--   <tt>BatchPrediction</tt> results will have <tt>FilterVariable</tt>
--   values that are less than the value specified with <tt>LT</tt>.
--   
--   <a>$sel:limit:DescribeBatchPredictions'</a>,
--   <a>describeBatchPredictions_limit</a> - The number of pages of
--   information to include in the result. The range of acceptable values
--   is <tt>1</tt> through <tt>100</tt>. The default value is <tt>100</tt>.
newDescribeBatchPredictions :: DescribeBatchPredictions

-- | The equal to operator. The <tt>BatchPrediction</tt> results will have
--   <tt>FilterVariable</tt> values that exactly match the value specified
--   with <tt>EQ</tt>.
describeBatchPredictions_eq :: Lens' DescribeBatchPredictions (Maybe Text)

-- | An ID of the page in the paginated results.
describeBatchPredictions_nextToken :: Lens' DescribeBatchPredictions (Maybe Text)

-- | A two-value parameter that determines the sequence of the resulting
--   list of <tt>MLModel</tt>s.
--   
--   <ul>
--   <li><tt>asc</tt> - Arranges the list in ascending order (A-Z,
--   0-9).</li>
--   <li><tt>dsc</tt> - Arranges the list in descending order (Z-A,
--   9-0).</li>
--   </ul>
--   
--   Results are sorted by <tt>FilterVariable</tt>.
describeBatchPredictions_sortOrder :: Lens' DescribeBatchPredictions (Maybe SortOrder)

-- | Use one of the following variables to filter a list of
--   <tt>BatchPrediction</tt>:
--   
--   <ul>
--   <li><tt>CreatedAt</tt> - Sets the search criteria to the
--   <tt>BatchPrediction</tt> creation date.</li>
--   <li><tt>Status</tt> - Sets the search criteria to the
--   <tt>BatchPrediction</tt> status.</li>
--   <li><tt>Name</tt> - Sets the search criteria to the contents of the
--   <tt>BatchPrediction</tt> ____ <tt>Name</tt>.</li>
--   <li><tt>IAMUser</tt> - Sets the search criteria to the user account
--   that invoked the <tt>BatchPrediction</tt> creation.</li>
--   <li><tt>MLModelId</tt> - Sets the search criteria to the
--   <tt>MLModel</tt> used in the <tt>BatchPrediction</tt>.</li>
--   <li><tt>DataSourceId</tt> - Sets the search criteria to the
--   <tt>DataSource</tt> used in the <tt>BatchPrediction</tt>.</li>
--   <li><tt>DataURI</tt> - Sets the search criteria to the data file(s)
--   used in the <tt>BatchPrediction</tt>. The URL can identify either a
--   file or an Amazon Simple Storage Solution (Amazon S3) bucket or
--   directory.</li>
--   </ul>
describeBatchPredictions_filterVariable :: Lens' DescribeBatchPredictions (Maybe BatchPredictionFilterVariable)

-- | The greater than operator. The <tt>BatchPrediction</tt> results will
--   have <tt>FilterVariable</tt> values that are greater than the value
--   specified with <tt>GT</tt>.
describeBatchPredictions_gt :: Lens' DescribeBatchPredictions (Maybe Text)

-- | The not equal to operator. The <tt>BatchPrediction</tt> results will
--   have <tt>FilterVariable</tt> values not equal to the value specified
--   with <tt>NE</tt>.
describeBatchPredictions_ne :: Lens' DescribeBatchPredictions (Maybe Text)

-- | A string that is found at the beginning of a variable, such as
--   <tt>Name</tt> or <tt>Id</tt>.
--   
--   For example, a <tt>Batch Prediction</tt> operation could have the
--   <tt>Name</tt> <tt>2014-09-09-HolidayGiftMailer</tt>. To search for
--   this <tt>BatchPrediction</tt>, select <tt>Name</tt> for the
--   <tt>FilterVariable</tt> and any of the following strings for the
--   <tt>Prefix</tt>:
--   
--   <ul>
--   <li>2014-09</li>
--   <li>2014-09-09</li>
--   <li>2014-09-09-Holiday</li>
--   </ul>
describeBatchPredictions_prefix :: Lens' DescribeBatchPredictions (Maybe Text)

-- | The greater than or equal to operator. The <tt>BatchPrediction</tt>
--   results will have <tt>FilterVariable</tt> values that are greater than
--   or equal to the value specified with <tt>GE</tt>.
describeBatchPredictions_ge :: Lens' DescribeBatchPredictions (Maybe Text)

-- | The less than or equal to operator. The <tt>BatchPrediction</tt>
--   results will have <tt>FilterVariable</tt> values that are less than or
--   equal to the value specified with <tt>LE</tt>.
describeBatchPredictions_le :: Lens' DescribeBatchPredictions (Maybe Text)

-- | The less than operator. The <tt>BatchPrediction</tt> results will have
--   <tt>FilterVariable</tt> values that are less than the value specified
--   with <tt>LT</tt>.
describeBatchPredictions_lt :: Lens' DescribeBatchPredictions (Maybe Text)

-- | The number of pages of information to include in the result. The range
--   of acceptable values is <tt>1</tt> through <tt>100</tt>. The default
--   value is <tt>100</tt>.
describeBatchPredictions_limit :: Lens' DescribeBatchPredictions (Maybe Natural)

-- | Represents the output of a <tt>DescribeBatchPredictions</tt>
--   operation. The content is essentially a list of
--   <tt>BatchPrediction</tt>s.
--   
--   <i>See:</i> <a>newDescribeBatchPredictionsResponse</a> smart
--   constructor.
data DescribeBatchPredictionsResponse
DescribeBatchPredictionsResponse' :: Maybe Text -> Maybe [BatchPrediction] -> Int -> DescribeBatchPredictionsResponse

-- | The ID of the next page in the paginated results that indicates at
--   least one more page follows.
[$sel:nextToken:DescribeBatchPredictionsResponse'] :: DescribeBatchPredictionsResponse -> Maybe Text

-- | A list of <tt>BatchPrediction</tt> objects that meet the search
--   criteria.
[$sel:results:DescribeBatchPredictionsResponse'] :: DescribeBatchPredictionsResponse -> Maybe [BatchPrediction]

-- | The response's http status code.
[$sel:httpStatus:DescribeBatchPredictionsResponse'] :: DescribeBatchPredictionsResponse -> Int

-- | Create a value of <a>DescribeBatchPredictionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeBatchPredictions'</a>,
--   <a>describeBatchPredictionsResponse_nextToken</a> - The ID of the next
--   page in the paginated results that indicates at least one more page
--   follows.
--   
--   <a>$sel:results:DescribeBatchPredictionsResponse'</a>,
--   <a>describeBatchPredictionsResponse_results</a> - A list of
--   <tt>BatchPrediction</tt> objects that meet the search criteria.
--   
--   <a>$sel:httpStatus:DescribeBatchPredictionsResponse'</a>,
--   <a>describeBatchPredictionsResponse_httpStatus</a> - The response's
--   http status code.
newDescribeBatchPredictionsResponse :: Int -> DescribeBatchPredictionsResponse

-- | The ID of the next page in the paginated results that indicates at
--   least one more page follows.
describeBatchPredictionsResponse_nextToken :: Lens' DescribeBatchPredictionsResponse (Maybe Text)

-- | A list of <tt>BatchPrediction</tt> objects that meet the search
--   criteria.
describeBatchPredictionsResponse_results :: Lens' DescribeBatchPredictionsResponse (Maybe [BatchPrediction])

-- | The response's http status code.
describeBatchPredictionsResponse_httpStatus :: Lens' DescribeBatchPredictionsResponse Int
instance GHC.Generics.Generic Network.AWS.MachineLearning.DescribeBatchPredictions.DescribeBatchPredictions
instance GHC.Show.Show Network.AWS.MachineLearning.DescribeBatchPredictions.DescribeBatchPredictions
instance GHC.Read.Read Network.AWS.MachineLearning.DescribeBatchPredictions.DescribeBatchPredictions
instance GHC.Classes.Eq Network.AWS.MachineLearning.DescribeBatchPredictions.DescribeBatchPredictions
instance GHC.Generics.Generic Network.AWS.MachineLearning.DescribeBatchPredictions.DescribeBatchPredictionsResponse
instance GHC.Show.Show Network.AWS.MachineLearning.DescribeBatchPredictions.DescribeBatchPredictionsResponse
instance GHC.Read.Read Network.AWS.MachineLearning.DescribeBatchPredictions.DescribeBatchPredictionsResponse
instance GHC.Classes.Eq Network.AWS.MachineLearning.DescribeBatchPredictions.DescribeBatchPredictionsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.MachineLearning.DescribeBatchPredictions.DescribeBatchPredictions
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.DescribeBatchPredictions.DescribeBatchPredictionsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.MachineLearning.DescribeBatchPredictions.DescribeBatchPredictions
instance Data.Hashable.Class.Hashable Network.AWS.MachineLearning.DescribeBatchPredictions.DescribeBatchPredictions
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.DescribeBatchPredictions.DescribeBatchPredictions
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.MachineLearning.DescribeBatchPredictions.DescribeBatchPredictions
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MachineLearning.DescribeBatchPredictions.DescribeBatchPredictions
instance Network.AWS.Data.Path.ToPath Network.AWS.MachineLearning.DescribeBatchPredictions.DescribeBatchPredictions
instance Network.AWS.Data.Query.ToQuery Network.AWS.MachineLearning.DescribeBatchPredictions.DescribeBatchPredictions


-- | Deletes the specified tags associated with an ML object. After this
--   operation is complete, you can't recover deleted tags.
--   
--   If you specify a tag that doesn't exist, Amazon ML ignores it.
module Network.AWS.MachineLearning.DeleteTags

-- | <i>See:</i> <a>newDeleteTags</a> smart constructor.
data DeleteTags
DeleteTags' :: [Text] -> Text -> TaggableResourceType -> DeleteTags

-- | One or more tags to delete.
[$sel:tagKeys:DeleteTags'] :: DeleteTags -> [Text]

-- | The ID of the tagged ML object. For example, <tt>exampleModelId</tt>.
[$sel:resourceId:DeleteTags'] :: DeleteTags -> Text

-- | The type of the tagged ML object.
[$sel:resourceType:DeleteTags'] :: DeleteTags -> TaggableResourceType

-- | Create a value of <a>DeleteTags</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tagKeys:DeleteTags'</a>, <a>deleteTags_tagKeys</a> - One or
--   more tags to delete.
--   
--   <a>$sel:resourceId:DeleteTags'</a>, <a>deleteTags_resourceId</a> - The
--   ID of the tagged ML object. For example, <tt>exampleModelId</tt>.
--   
--   <a>$sel:resourceType:DeleteTags'</a>, <a>deleteTags_resourceType</a> -
--   The type of the tagged ML object.
newDeleteTags :: Text -> TaggableResourceType -> DeleteTags

-- | One or more tags to delete.
deleteTags_tagKeys :: Lens' DeleteTags [Text]

-- | The ID of the tagged ML object. For example, <tt>exampleModelId</tt>.
deleteTags_resourceId :: Lens' DeleteTags Text

-- | The type of the tagged ML object.
deleteTags_resourceType :: Lens' DeleteTags TaggableResourceType

-- | Amazon ML returns the following elements.
--   
--   <i>See:</i> <a>newDeleteTagsResponse</a> smart constructor.
data DeleteTagsResponse
DeleteTagsResponse' :: Maybe Text -> Maybe TaggableResourceType -> Int -> DeleteTagsResponse

-- | The ID of the ML object from which tags were deleted.
[$sel:resourceId:DeleteTagsResponse'] :: DeleteTagsResponse -> Maybe Text

-- | The type of the ML object from which tags were deleted.
[$sel:resourceType:DeleteTagsResponse'] :: DeleteTagsResponse -> Maybe TaggableResourceType

-- | The response's http status code.
[$sel:httpStatus:DeleteTagsResponse'] :: DeleteTagsResponse -> Int

-- | Create a value of <a>DeleteTagsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceId:DeleteTags'</a>,
--   <a>deleteTagsResponse_resourceId</a> - The ID of the ML object from
--   which tags were deleted.
--   
--   <a>$sel:resourceType:DeleteTags'</a>,
--   <a>deleteTagsResponse_resourceType</a> - The type of the ML object
--   from which tags were deleted.
--   
--   <a>$sel:httpStatus:DeleteTagsResponse'</a>,
--   <a>deleteTagsResponse_httpStatus</a> - The response's http status
--   code.
newDeleteTagsResponse :: Int -> DeleteTagsResponse

-- | The ID of the ML object from which tags were deleted.
deleteTagsResponse_resourceId :: Lens' DeleteTagsResponse (Maybe Text)

-- | The type of the ML object from which tags were deleted.
deleteTagsResponse_resourceType :: Lens' DeleteTagsResponse (Maybe TaggableResourceType)

-- | The response's http status code.
deleteTagsResponse_httpStatus :: Lens' DeleteTagsResponse Int
instance GHC.Generics.Generic Network.AWS.MachineLearning.DeleteTags.DeleteTags
instance GHC.Show.Show Network.AWS.MachineLearning.DeleteTags.DeleteTags
instance GHC.Read.Read Network.AWS.MachineLearning.DeleteTags.DeleteTags
instance GHC.Classes.Eq Network.AWS.MachineLearning.DeleteTags.DeleteTags
instance GHC.Generics.Generic Network.AWS.MachineLearning.DeleteTags.DeleteTagsResponse
instance GHC.Show.Show Network.AWS.MachineLearning.DeleteTags.DeleteTagsResponse
instance GHC.Read.Read Network.AWS.MachineLearning.DeleteTags.DeleteTagsResponse
instance GHC.Classes.Eq Network.AWS.MachineLearning.DeleteTags.DeleteTagsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.MachineLearning.DeleteTags.DeleteTags
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.DeleteTags.DeleteTagsResponse
instance Data.Hashable.Class.Hashable Network.AWS.MachineLearning.DeleteTags.DeleteTags
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.DeleteTags.DeleteTags
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.MachineLearning.DeleteTags.DeleteTags
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MachineLearning.DeleteTags.DeleteTags
instance Network.AWS.Data.Path.ToPath Network.AWS.MachineLearning.DeleteTags.DeleteTags
instance Network.AWS.Data.Query.ToQuery Network.AWS.MachineLearning.DeleteTags.DeleteTags


-- | Deletes a real time endpoint of an <tt>MLModel</tt>.
module Network.AWS.MachineLearning.DeleteRealtimeEndpoint

-- | <i>See:</i> <a>newDeleteRealtimeEndpoint</a> smart constructor.
data DeleteRealtimeEndpoint
DeleteRealtimeEndpoint' :: Text -> DeleteRealtimeEndpoint

-- | The ID assigned to the <tt>MLModel</tt> during creation.
[$sel:mLModelId:DeleteRealtimeEndpoint'] :: DeleteRealtimeEndpoint -> Text

-- | Create a value of <a>DeleteRealtimeEndpoint</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mLModelId:DeleteRealtimeEndpoint'</a>,
--   <a>deleteRealtimeEndpoint_mLModelId</a> - The ID assigned to the
--   <tt>MLModel</tt> during creation.
newDeleteRealtimeEndpoint :: Text -> DeleteRealtimeEndpoint

-- | The ID assigned to the <tt>MLModel</tt> during creation.
deleteRealtimeEndpoint_mLModelId :: Lens' DeleteRealtimeEndpoint Text

-- | Represents the output of an <tt>DeleteRealtimeEndpoint</tt> operation.
--   
--   The result contains the <tt>MLModelId</tt> and the endpoint
--   information for the <tt>MLModel</tt>.
--   
--   <i>See:</i> <a>newDeleteRealtimeEndpointResponse</a> smart
--   constructor.
data DeleteRealtimeEndpointResponse
DeleteRealtimeEndpointResponse' :: Maybe RealtimeEndpointInfo -> Maybe Text -> Int -> DeleteRealtimeEndpointResponse

-- | The endpoint information of the <tt>MLModel</tt>
[$sel:realtimeEndpointInfo:DeleteRealtimeEndpointResponse'] :: DeleteRealtimeEndpointResponse -> Maybe RealtimeEndpointInfo

-- | A user-supplied ID that uniquely identifies the <tt>MLModel</tt>. This
--   value should be identical to the value of the <tt>MLModelId</tt> in
--   the request.
[$sel:mLModelId:DeleteRealtimeEndpointResponse'] :: DeleteRealtimeEndpointResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DeleteRealtimeEndpointResponse'] :: DeleteRealtimeEndpointResponse -> Int

-- | Create a value of <a>DeleteRealtimeEndpointResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:realtimeEndpointInfo:DeleteRealtimeEndpointResponse'</a>,
--   <a>deleteRealtimeEndpointResponse_realtimeEndpointInfo</a> - The
--   endpoint information of the <tt>MLModel</tt>
--   
--   <a>$sel:mLModelId:DeleteRealtimeEndpoint'</a>,
--   <a>deleteRealtimeEndpointResponse_mLModelId</a> - A user-supplied ID
--   that uniquely identifies the <tt>MLModel</tt>. This value should be
--   identical to the value of the <tt>MLModelId</tt> in the request.
--   
--   <a>$sel:httpStatus:DeleteRealtimeEndpointResponse'</a>,
--   <a>deleteRealtimeEndpointResponse_httpStatus</a> - The response's http
--   status code.
newDeleteRealtimeEndpointResponse :: Int -> DeleteRealtimeEndpointResponse

-- | The endpoint information of the <tt>MLModel</tt>
deleteRealtimeEndpointResponse_realtimeEndpointInfo :: Lens' DeleteRealtimeEndpointResponse (Maybe RealtimeEndpointInfo)

-- | A user-supplied ID that uniquely identifies the <tt>MLModel</tt>. This
--   value should be identical to the value of the <tt>MLModelId</tt> in
--   the request.
deleteRealtimeEndpointResponse_mLModelId :: Lens' DeleteRealtimeEndpointResponse (Maybe Text)

-- | The response's http status code.
deleteRealtimeEndpointResponse_httpStatus :: Lens' DeleteRealtimeEndpointResponse Int
instance GHC.Generics.Generic Network.AWS.MachineLearning.DeleteRealtimeEndpoint.DeleteRealtimeEndpoint
instance GHC.Show.Show Network.AWS.MachineLearning.DeleteRealtimeEndpoint.DeleteRealtimeEndpoint
instance GHC.Read.Read Network.AWS.MachineLearning.DeleteRealtimeEndpoint.DeleteRealtimeEndpoint
instance GHC.Classes.Eq Network.AWS.MachineLearning.DeleteRealtimeEndpoint.DeleteRealtimeEndpoint
instance GHC.Generics.Generic Network.AWS.MachineLearning.DeleteRealtimeEndpoint.DeleteRealtimeEndpointResponse
instance GHC.Show.Show Network.AWS.MachineLearning.DeleteRealtimeEndpoint.DeleteRealtimeEndpointResponse
instance GHC.Read.Read Network.AWS.MachineLearning.DeleteRealtimeEndpoint.DeleteRealtimeEndpointResponse
instance GHC.Classes.Eq Network.AWS.MachineLearning.DeleteRealtimeEndpoint.DeleteRealtimeEndpointResponse
instance Network.AWS.Types.AWSRequest Network.AWS.MachineLearning.DeleteRealtimeEndpoint.DeleteRealtimeEndpoint
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.DeleteRealtimeEndpoint.DeleteRealtimeEndpointResponse
instance Data.Hashable.Class.Hashable Network.AWS.MachineLearning.DeleteRealtimeEndpoint.DeleteRealtimeEndpoint
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.DeleteRealtimeEndpoint.DeleteRealtimeEndpoint
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.MachineLearning.DeleteRealtimeEndpoint.DeleteRealtimeEndpoint
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MachineLearning.DeleteRealtimeEndpoint.DeleteRealtimeEndpoint
instance Network.AWS.Data.Path.ToPath Network.AWS.MachineLearning.DeleteRealtimeEndpoint.DeleteRealtimeEndpoint
instance Network.AWS.Data.Query.ToQuery Network.AWS.MachineLearning.DeleteRealtimeEndpoint.DeleteRealtimeEndpoint


-- | Assigns the <tt>DELETED</tt> status to an <tt>MLModel</tt>, rendering
--   it unusable.
--   
--   After using the <tt>DeleteMLModel</tt> operation, you can use the
--   <tt>GetMLModel</tt> operation to verify that the status of the
--   <tt>MLModel</tt> changed to DELETED.
--   
--   <b>Caution:</b> The result of the <tt>DeleteMLModel</tt> operation is
--   irreversible.
module Network.AWS.MachineLearning.DeleteMLModel

-- | <i>See:</i> <a>newDeleteMLModel</a> smart constructor.
data DeleteMLModel
DeleteMLModel' :: Text -> DeleteMLModel

-- | A user-supplied ID that uniquely identifies the <tt>MLModel</tt>.
[$sel:mLModelId:DeleteMLModel'] :: DeleteMLModel -> Text

-- | Create a value of <a>DeleteMLModel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mLModelId:DeleteMLModel'</a>, <a>deleteMLModel_mLModelId</a> -
--   A user-supplied ID that uniquely identifies the <tt>MLModel</tt>.
newDeleteMLModel :: Text -> DeleteMLModel

-- | A user-supplied ID that uniquely identifies the <tt>MLModel</tt>.
deleteMLModel_mLModelId :: Lens' DeleteMLModel Text

-- | Represents the output of a <tt>DeleteMLModel</tt> operation.
--   
--   You can use the <tt>GetMLModel</tt> operation and check the value of
--   the <tt>Status</tt> parameter to see whether an <tt>MLModel</tt> is
--   marked as <tt>DELETED</tt>.
--   
--   <i>See:</i> <a>newDeleteMLModelResponse</a> smart constructor.
data DeleteMLModelResponse
DeleteMLModelResponse' :: Maybe Text -> Int -> DeleteMLModelResponse

-- | A user-supplied ID that uniquely identifies the <tt>MLModel</tt>. This
--   value should be identical to the value of the <tt>MLModelID</tt> in
--   the request.
[$sel:mLModelId:DeleteMLModelResponse'] :: DeleteMLModelResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DeleteMLModelResponse'] :: DeleteMLModelResponse -> Int

-- | Create a value of <a>DeleteMLModelResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mLModelId:DeleteMLModel'</a>,
--   <a>deleteMLModelResponse_mLModelId</a> - A user-supplied ID that
--   uniquely identifies the <tt>MLModel</tt>. This value should be
--   identical to the value of the <tt>MLModelID</tt> in the request.
--   
--   <a>$sel:httpStatus:DeleteMLModelResponse'</a>,
--   <a>deleteMLModelResponse_httpStatus</a> - The response's http status
--   code.
newDeleteMLModelResponse :: Int -> DeleteMLModelResponse

-- | A user-supplied ID that uniquely identifies the <tt>MLModel</tt>. This
--   value should be identical to the value of the <tt>MLModelID</tt> in
--   the request.
deleteMLModelResponse_mLModelId :: Lens' DeleteMLModelResponse (Maybe Text)

-- | The response's http status code.
deleteMLModelResponse_httpStatus :: Lens' DeleteMLModelResponse Int
instance GHC.Generics.Generic Network.AWS.MachineLearning.DeleteMLModel.DeleteMLModel
instance GHC.Show.Show Network.AWS.MachineLearning.DeleteMLModel.DeleteMLModel
instance GHC.Read.Read Network.AWS.MachineLearning.DeleteMLModel.DeleteMLModel
instance GHC.Classes.Eq Network.AWS.MachineLearning.DeleteMLModel.DeleteMLModel
instance GHC.Generics.Generic Network.AWS.MachineLearning.DeleteMLModel.DeleteMLModelResponse
instance GHC.Show.Show Network.AWS.MachineLearning.DeleteMLModel.DeleteMLModelResponse
instance GHC.Read.Read Network.AWS.MachineLearning.DeleteMLModel.DeleteMLModelResponse
instance GHC.Classes.Eq Network.AWS.MachineLearning.DeleteMLModel.DeleteMLModelResponse
instance Network.AWS.Types.AWSRequest Network.AWS.MachineLearning.DeleteMLModel.DeleteMLModel
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.DeleteMLModel.DeleteMLModelResponse
instance Data.Hashable.Class.Hashable Network.AWS.MachineLearning.DeleteMLModel.DeleteMLModel
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.DeleteMLModel.DeleteMLModel
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.MachineLearning.DeleteMLModel.DeleteMLModel
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MachineLearning.DeleteMLModel.DeleteMLModel
instance Network.AWS.Data.Path.ToPath Network.AWS.MachineLearning.DeleteMLModel.DeleteMLModel
instance Network.AWS.Data.Query.ToQuery Network.AWS.MachineLearning.DeleteMLModel.DeleteMLModel


-- | Assigns the <tt>DELETED</tt> status to an <tt>Evaluation</tt>,
--   rendering it unusable.
--   
--   After invoking the <tt>DeleteEvaluation</tt> operation, you can use
--   the <tt>GetEvaluation</tt> operation to verify that the status of the
--   <tt>Evaluation</tt> changed to <tt>DELETED</tt>.
--   
--   <b>Caution:</b> The results of the <tt>DeleteEvaluation</tt> operation
--   are irreversible.
module Network.AWS.MachineLearning.DeleteEvaluation

-- | <i>See:</i> <a>newDeleteEvaluation</a> smart constructor.
data DeleteEvaluation
DeleteEvaluation' :: Text -> DeleteEvaluation

-- | A user-supplied ID that uniquely identifies the <tt>Evaluation</tt> to
--   delete.
[$sel:evaluationId:DeleteEvaluation'] :: DeleteEvaluation -> Text

-- | Create a value of <a>DeleteEvaluation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:evaluationId:DeleteEvaluation'</a>,
--   <a>deleteEvaluation_evaluationId</a> - A user-supplied ID that
--   uniquely identifies the <tt>Evaluation</tt> to delete.
newDeleteEvaluation :: Text -> DeleteEvaluation

-- | A user-supplied ID that uniquely identifies the <tt>Evaluation</tt> to
--   delete.
deleteEvaluation_evaluationId :: Lens' DeleteEvaluation Text

-- | Represents the output of a <tt>DeleteEvaluation</tt> operation. The
--   output indicates that Amazon Machine Learning (Amazon ML) received the
--   request.
--   
--   You can use the <tt>GetEvaluation</tt> operation and check the value
--   of the <tt>Status</tt> parameter to see whether an <tt>Evaluation</tt>
--   is marked as <tt>DELETED</tt>.
--   
--   <i>See:</i> <a>newDeleteEvaluationResponse</a> smart constructor.
data DeleteEvaluationResponse
DeleteEvaluationResponse' :: Maybe Text -> Int -> DeleteEvaluationResponse

-- | A user-supplied ID that uniquely identifies the <tt>Evaluation</tt>.
--   This value should be identical to the value of the
--   <tt>EvaluationId</tt> in the request.
[$sel:evaluationId:DeleteEvaluationResponse'] :: DeleteEvaluationResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DeleteEvaluationResponse'] :: DeleteEvaluationResponse -> Int

-- | Create a value of <a>DeleteEvaluationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:evaluationId:DeleteEvaluation'</a>,
--   <a>deleteEvaluationResponse_evaluationId</a> - A user-supplied ID that
--   uniquely identifies the <tt>Evaluation</tt>. This value should be
--   identical to the value of the <tt>EvaluationId</tt> in the request.
--   
--   <a>$sel:httpStatus:DeleteEvaluationResponse'</a>,
--   <a>deleteEvaluationResponse_httpStatus</a> - The response's http
--   status code.
newDeleteEvaluationResponse :: Int -> DeleteEvaluationResponse

-- | A user-supplied ID that uniquely identifies the <tt>Evaluation</tt>.
--   This value should be identical to the value of the
--   <tt>EvaluationId</tt> in the request.
deleteEvaluationResponse_evaluationId :: Lens' DeleteEvaluationResponse (Maybe Text)

-- | The response's http status code.
deleteEvaluationResponse_httpStatus :: Lens' DeleteEvaluationResponse Int
instance GHC.Generics.Generic Network.AWS.MachineLearning.DeleteEvaluation.DeleteEvaluation
instance GHC.Show.Show Network.AWS.MachineLearning.DeleteEvaluation.DeleteEvaluation
instance GHC.Read.Read Network.AWS.MachineLearning.DeleteEvaluation.DeleteEvaluation
instance GHC.Classes.Eq Network.AWS.MachineLearning.DeleteEvaluation.DeleteEvaluation
instance GHC.Generics.Generic Network.AWS.MachineLearning.DeleteEvaluation.DeleteEvaluationResponse
instance GHC.Show.Show Network.AWS.MachineLearning.DeleteEvaluation.DeleteEvaluationResponse
instance GHC.Read.Read Network.AWS.MachineLearning.DeleteEvaluation.DeleteEvaluationResponse
instance GHC.Classes.Eq Network.AWS.MachineLearning.DeleteEvaluation.DeleteEvaluationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.MachineLearning.DeleteEvaluation.DeleteEvaluation
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.DeleteEvaluation.DeleteEvaluationResponse
instance Data.Hashable.Class.Hashable Network.AWS.MachineLearning.DeleteEvaluation.DeleteEvaluation
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.DeleteEvaluation.DeleteEvaluation
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.MachineLearning.DeleteEvaluation.DeleteEvaluation
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MachineLearning.DeleteEvaluation.DeleteEvaluation
instance Network.AWS.Data.Path.ToPath Network.AWS.MachineLearning.DeleteEvaluation.DeleteEvaluation
instance Network.AWS.Data.Query.ToQuery Network.AWS.MachineLearning.DeleteEvaluation.DeleteEvaluation


-- | Assigns the DELETED status to a <tt>DataSource</tt>, rendering it
--   unusable.
--   
--   After using the <tt>DeleteDataSource</tt> operation, you can use the
--   GetDataSource operation to verify that the status of the
--   <tt>DataSource</tt> changed to DELETED.
--   
--   <b>Caution:</b> The results of the <tt>DeleteDataSource</tt> operation
--   are irreversible.
module Network.AWS.MachineLearning.DeleteDataSource

-- | <i>See:</i> <a>newDeleteDataSource</a> smart constructor.
data DeleteDataSource
DeleteDataSource' :: Text -> DeleteDataSource

-- | A user-supplied ID that uniquely identifies the <tt>DataSource</tt>.
[$sel:dataSourceId:DeleteDataSource'] :: DeleteDataSource -> Text

-- | Create a value of <a>DeleteDataSource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataSourceId:DeleteDataSource'</a>,
--   <a>deleteDataSource_dataSourceId</a> - A user-supplied ID that
--   uniquely identifies the <tt>DataSource</tt>.
newDeleteDataSource :: Text -> DeleteDataSource

-- | A user-supplied ID that uniquely identifies the <tt>DataSource</tt>.
deleteDataSource_dataSourceId :: Lens' DeleteDataSource Text

-- | Represents the output of a <tt>DeleteDataSource</tt> operation.
--   
--   <i>See:</i> <a>newDeleteDataSourceResponse</a> smart constructor.
data DeleteDataSourceResponse
DeleteDataSourceResponse' :: Maybe Text -> Int -> DeleteDataSourceResponse

-- | A user-supplied ID that uniquely identifies the <tt>DataSource</tt>.
--   This value should be identical to the value of the
--   <tt>DataSourceID</tt> in the request.
[$sel:dataSourceId:DeleteDataSourceResponse'] :: DeleteDataSourceResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DeleteDataSourceResponse'] :: DeleteDataSourceResponse -> Int

-- | Create a value of <a>DeleteDataSourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataSourceId:DeleteDataSource'</a>,
--   <a>deleteDataSourceResponse_dataSourceId</a> - A user-supplied ID that
--   uniquely identifies the <tt>DataSource</tt>. This value should be
--   identical to the value of the <tt>DataSourceID</tt> in the request.
--   
--   <a>$sel:httpStatus:DeleteDataSourceResponse'</a>,
--   <a>deleteDataSourceResponse_httpStatus</a> - The response's http
--   status code.
newDeleteDataSourceResponse :: Int -> DeleteDataSourceResponse

-- | A user-supplied ID that uniquely identifies the <tt>DataSource</tt>.
--   This value should be identical to the value of the
--   <tt>DataSourceID</tt> in the request.
deleteDataSourceResponse_dataSourceId :: Lens' DeleteDataSourceResponse (Maybe Text)

-- | The response's http status code.
deleteDataSourceResponse_httpStatus :: Lens' DeleteDataSourceResponse Int
instance GHC.Generics.Generic Network.AWS.MachineLearning.DeleteDataSource.DeleteDataSource
instance GHC.Show.Show Network.AWS.MachineLearning.DeleteDataSource.DeleteDataSource
instance GHC.Read.Read Network.AWS.MachineLearning.DeleteDataSource.DeleteDataSource
instance GHC.Classes.Eq Network.AWS.MachineLearning.DeleteDataSource.DeleteDataSource
instance GHC.Generics.Generic Network.AWS.MachineLearning.DeleteDataSource.DeleteDataSourceResponse
instance GHC.Show.Show Network.AWS.MachineLearning.DeleteDataSource.DeleteDataSourceResponse
instance GHC.Read.Read Network.AWS.MachineLearning.DeleteDataSource.DeleteDataSourceResponse
instance GHC.Classes.Eq Network.AWS.MachineLearning.DeleteDataSource.DeleteDataSourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.MachineLearning.DeleteDataSource.DeleteDataSource
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.DeleteDataSource.DeleteDataSourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.MachineLearning.DeleteDataSource.DeleteDataSource
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.DeleteDataSource.DeleteDataSource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.MachineLearning.DeleteDataSource.DeleteDataSource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MachineLearning.DeleteDataSource.DeleteDataSource
instance Network.AWS.Data.Path.ToPath Network.AWS.MachineLearning.DeleteDataSource.DeleteDataSource
instance Network.AWS.Data.Query.ToQuery Network.AWS.MachineLearning.DeleteDataSource.DeleteDataSource


-- | Assigns the DELETED status to a <tt>BatchPrediction</tt>, rendering it
--   unusable.
--   
--   After using the <tt>DeleteBatchPrediction</tt> operation, you can use
--   the GetBatchPrediction operation to verify that the status of the
--   <tt>BatchPrediction</tt> changed to DELETED.
--   
--   <b>Caution:</b> The result of the <tt>DeleteBatchPrediction</tt>
--   operation is irreversible.
module Network.AWS.MachineLearning.DeleteBatchPrediction

-- | <i>See:</i> <a>newDeleteBatchPrediction</a> smart constructor.
data DeleteBatchPrediction
DeleteBatchPrediction' :: Text -> DeleteBatchPrediction

-- | A user-supplied ID that uniquely identifies the
--   <tt>BatchPrediction</tt>.
[$sel:batchPredictionId:DeleteBatchPrediction'] :: DeleteBatchPrediction -> Text

-- | Create a value of <a>DeleteBatchPrediction</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:batchPredictionId:DeleteBatchPrediction'</a>,
--   <a>deleteBatchPrediction_batchPredictionId</a> - A user-supplied ID
--   that uniquely identifies the <tt>BatchPrediction</tt>.
newDeleteBatchPrediction :: Text -> DeleteBatchPrediction

-- | A user-supplied ID that uniquely identifies the
--   <tt>BatchPrediction</tt>.
deleteBatchPrediction_batchPredictionId :: Lens' DeleteBatchPrediction Text

-- | Represents the output of a <tt>DeleteBatchPrediction</tt> operation.
--   
--   You can use the <tt>GetBatchPrediction</tt> operation and check the
--   value of the <tt>Status</tt> parameter to see whether a
--   <tt>BatchPrediction</tt> is marked as <tt>DELETED</tt>.
--   
--   <i>See:</i> <a>newDeleteBatchPredictionResponse</a> smart constructor.
data DeleteBatchPredictionResponse
DeleteBatchPredictionResponse' :: Maybe Text -> Int -> DeleteBatchPredictionResponse

-- | A user-supplied ID that uniquely identifies the
--   <tt>BatchPrediction</tt>. This value should be identical to the value
--   of the <tt>BatchPredictionID</tt> in the request.
[$sel:batchPredictionId:DeleteBatchPredictionResponse'] :: DeleteBatchPredictionResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DeleteBatchPredictionResponse'] :: DeleteBatchPredictionResponse -> Int

-- | Create a value of <a>DeleteBatchPredictionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:batchPredictionId:DeleteBatchPrediction'</a>,
--   <a>deleteBatchPredictionResponse_batchPredictionId</a> - A
--   user-supplied ID that uniquely identifies the
--   <tt>BatchPrediction</tt>. This value should be identical to the value
--   of the <tt>BatchPredictionID</tt> in the request.
--   
--   <a>$sel:httpStatus:DeleteBatchPredictionResponse'</a>,
--   <a>deleteBatchPredictionResponse_httpStatus</a> - The response's http
--   status code.
newDeleteBatchPredictionResponse :: Int -> DeleteBatchPredictionResponse

-- | A user-supplied ID that uniquely identifies the
--   <tt>BatchPrediction</tt>. This value should be identical to the value
--   of the <tt>BatchPredictionID</tt> in the request.
deleteBatchPredictionResponse_batchPredictionId :: Lens' DeleteBatchPredictionResponse (Maybe Text)

-- | The response's http status code.
deleteBatchPredictionResponse_httpStatus :: Lens' DeleteBatchPredictionResponse Int
instance GHC.Generics.Generic Network.AWS.MachineLearning.DeleteBatchPrediction.DeleteBatchPrediction
instance GHC.Show.Show Network.AWS.MachineLearning.DeleteBatchPrediction.DeleteBatchPrediction
instance GHC.Read.Read Network.AWS.MachineLearning.DeleteBatchPrediction.DeleteBatchPrediction
instance GHC.Classes.Eq Network.AWS.MachineLearning.DeleteBatchPrediction.DeleteBatchPrediction
instance GHC.Generics.Generic Network.AWS.MachineLearning.DeleteBatchPrediction.DeleteBatchPredictionResponse
instance GHC.Show.Show Network.AWS.MachineLearning.DeleteBatchPrediction.DeleteBatchPredictionResponse
instance GHC.Read.Read Network.AWS.MachineLearning.DeleteBatchPrediction.DeleteBatchPredictionResponse
instance GHC.Classes.Eq Network.AWS.MachineLearning.DeleteBatchPrediction.DeleteBatchPredictionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.MachineLearning.DeleteBatchPrediction.DeleteBatchPrediction
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.DeleteBatchPrediction.DeleteBatchPredictionResponse
instance Data.Hashable.Class.Hashable Network.AWS.MachineLearning.DeleteBatchPrediction.DeleteBatchPrediction
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.DeleteBatchPrediction.DeleteBatchPrediction
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.MachineLearning.DeleteBatchPrediction.DeleteBatchPrediction
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MachineLearning.DeleteBatchPrediction.DeleteBatchPrediction
instance Network.AWS.Data.Path.ToPath Network.AWS.MachineLearning.DeleteBatchPrediction.DeleteBatchPrediction
instance Network.AWS.Data.Query.ToQuery Network.AWS.MachineLearning.DeleteBatchPrediction.DeleteBatchPrediction


-- | Creates a real-time endpoint for the <tt>MLModel</tt>. The endpoint
--   contains the URI of the <tt>MLModel</tt>; that is, the location to
--   send real-time prediction requests for the specified <tt>MLModel</tt>.
module Network.AWS.MachineLearning.CreateRealtimeEndpoint

-- | <i>See:</i> <a>newCreateRealtimeEndpoint</a> smart constructor.
data CreateRealtimeEndpoint
CreateRealtimeEndpoint' :: Text -> CreateRealtimeEndpoint

-- | The ID assigned to the <tt>MLModel</tt> during creation.
[$sel:mLModelId:CreateRealtimeEndpoint'] :: CreateRealtimeEndpoint -> Text

-- | Create a value of <a>CreateRealtimeEndpoint</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mLModelId:CreateRealtimeEndpoint'</a>,
--   <a>createRealtimeEndpoint_mLModelId</a> - The ID assigned to the
--   <tt>MLModel</tt> during creation.
newCreateRealtimeEndpoint :: Text -> CreateRealtimeEndpoint

-- | The ID assigned to the <tt>MLModel</tt> during creation.
createRealtimeEndpoint_mLModelId :: Lens' CreateRealtimeEndpoint Text

-- | Represents the output of an <tt>CreateRealtimeEndpoint</tt> operation.
--   
--   The result contains the <tt>MLModelId</tt> and the endpoint
--   information for the <tt>MLModel</tt>.
--   
--   <b>Note:</b> The endpoint information includes the URI of the
--   <tt>MLModel</tt>; that is, the location to send online prediction
--   requests for the specified <tt>MLModel</tt>.
--   
--   <i>See:</i> <a>newCreateRealtimeEndpointResponse</a> smart
--   constructor.
data CreateRealtimeEndpointResponse
CreateRealtimeEndpointResponse' :: Maybe RealtimeEndpointInfo -> Maybe Text -> Int -> CreateRealtimeEndpointResponse

-- | The endpoint information of the <tt>MLModel</tt>
[$sel:realtimeEndpointInfo:CreateRealtimeEndpointResponse'] :: CreateRealtimeEndpointResponse -> Maybe RealtimeEndpointInfo

-- | A user-supplied ID that uniquely identifies the <tt>MLModel</tt>. This
--   value should be identical to the value of the <tt>MLModelId</tt> in
--   the request.
[$sel:mLModelId:CreateRealtimeEndpointResponse'] :: CreateRealtimeEndpointResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateRealtimeEndpointResponse'] :: CreateRealtimeEndpointResponse -> Int

-- | Create a value of <a>CreateRealtimeEndpointResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:realtimeEndpointInfo:CreateRealtimeEndpointResponse'</a>,
--   <a>createRealtimeEndpointResponse_realtimeEndpointInfo</a> - The
--   endpoint information of the <tt>MLModel</tt>
--   
--   <a>$sel:mLModelId:CreateRealtimeEndpoint'</a>,
--   <a>createRealtimeEndpointResponse_mLModelId</a> - A user-supplied ID
--   that uniquely identifies the <tt>MLModel</tt>. This value should be
--   identical to the value of the <tt>MLModelId</tt> in the request.
--   
--   <a>$sel:httpStatus:CreateRealtimeEndpointResponse'</a>,
--   <a>createRealtimeEndpointResponse_httpStatus</a> - The response's http
--   status code.
newCreateRealtimeEndpointResponse :: Int -> CreateRealtimeEndpointResponse

-- | The endpoint information of the <tt>MLModel</tt>
createRealtimeEndpointResponse_realtimeEndpointInfo :: Lens' CreateRealtimeEndpointResponse (Maybe RealtimeEndpointInfo)

-- | A user-supplied ID that uniquely identifies the <tt>MLModel</tt>. This
--   value should be identical to the value of the <tt>MLModelId</tt> in
--   the request.
createRealtimeEndpointResponse_mLModelId :: Lens' CreateRealtimeEndpointResponse (Maybe Text)

-- | The response's http status code.
createRealtimeEndpointResponse_httpStatus :: Lens' CreateRealtimeEndpointResponse Int
instance GHC.Generics.Generic Network.AWS.MachineLearning.CreateRealtimeEndpoint.CreateRealtimeEndpoint
instance GHC.Show.Show Network.AWS.MachineLearning.CreateRealtimeEndpoint.CreateRealtimeEndpoint
instance GHC.Read.Read Network.AWS.MachineLearning.CreateRealtimeEndpoint.CreateRealtimeEndpoint
instance GHC.Classes.Eq Network.AWS.MachineLearning.CreateRealtimeEndpoint.CreateRealtimeEndpoint
instance GHC.Generics.Generic Network.AWS.MachineLearning.CreateRealtimeEndpoint.CreateRealtimeEndpointResponse
instance GHC.Show.Show Network.AWS.MachineLearning.CreateRealtimeEndpoint.CreateRealtimeEndpointResponse
instance GHC.Read.Read Network.AWS.MachineLearning.CreateRealtimeEndpoint.CreateRealtimeEndpointResponse
instance GHC.Classes.Eq Network.AWS.MachineLearning.CreateRealtimeEndpoint.CreateRealtimeEndpointResponse
instance Network.AWS.Types.AWSRequest Network.AWS.MachineLearning.CreateRealtimeEndpoint.CreateRealtimeEndpoint
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.CreateRealtimeEndpoint.CreateRealtimeEndpointResponse
instance Data.Hashable.Class.Hashable Network.AWS.MachineLearning.CreateRealtimeEndpoint.CreateRealtimeEndpoint
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.CreateRealtimeEndpoint.CreateRealtimeEndpoint
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.MachineLearning.CreateRealtimeEndpoint.CreateRealtimeEndpoint
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MachineLearning.CreateRealtimeEndpoint.CreateRealtimeEndpoint
instance Network.AWS.Data.Path.ToPath Network.AWS.MachineLearning.CreateRealtimeEndpoint.CreateRealtimeEndpoint
instance Network.AWS.Data.Query.ToQuery Network.AWS.MachineLearning.CreateRealtimeEndpoint.CreateRealtimeEndpoint


-- | Creates a new <tt>MLModel</tt> using the <tt>DataSource</tt> and the
--   recipe as information sources.
--   
--   An <tt>MLModel</tt> is nearly immutable. Users can update only the
--   <tt>MLModelName</tt> and the <tt>ScoreThreshold</tt> in an
--   <tt>MLModel</tt> without creating a new <tt>MLModel</tt>.
--   
--   <tt>CreateMLModel</tt> is an asynchronous operation. In response to
--   <tt>CreateMLModel</tt>, Amazon Machine Learning (Amazon ML)
--   immediately returns and sets the <tt>MLModel</tt> status to
--   <tt>PENDING</tt>. After the <tt>MLModel</tt> has been created and
--   ready is for use, Amazon ML sets the status to <tt>COMPLETED</tt>.
--   
--   You can use the <tt>GetMLModel</tt> operation to check the progress of
--   the <tt>MLModel</tt> during the creation operation.
--   
--   <tt>CreateMLModel</tt> requires a <tt>DataSource</tt> with computed
--   statistics, which can be created by setting <tt>ComputeStatistics</tt>
--   to <tt>true</tt> in <tt>CreateDataSourceFromRDS</tt>,
--   <tt>CreateDataSourceFromS3</tt>, or
--   <tt>CreateDataSourceFromRedshift</tt> operations.
module Network.AWS.MachineLearning.CreateMLModel

-- | <i>See:</i> <a>newCreateMLModel</a> smart constructor.
data CreateMLModel
CreateMLModel' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> MLModelType -> Text -> CreateMLModel

-- | The Amazon Simple Storage Service (Amazon S3) location and file name
--   that contains the <tt>MLModel</tt> recipe. You must specify either the
--   recipe or its URI. If you don't specify a recipe or its URI, Amazon ML
--   creates a default.
[$sel:recipeUri:CreateMLModel'] :: CreateMLModel -> Maybe Text

-- | The data recipe for creating the <tt>MLModel</tt>. You must specify
--   either the recipe or its URI. If you don't specify a recipe or its
--   URI, Amazon ML creates a default.
[$sel:recipe:CreateMLModel'] :: CreateMLModel -> Maybe Text

-- | A user-supplied name or description of the <tt>MLModel</tt>.
[$sel:mLModelName:CreateMLModel'] :: CreateMLModel -> Maybe Text

-- | A list of the training parameters in the <tt>MLModel</tt>. The list is
--   implemented as a map of key-value pairs.
--   
--   The following is the current set of training parameters:
--   
--   <ul>
--   <li><tt>sgd.maxMLModelSizeInBytes</tt> - The maximum allowed size of
--   the model. Depending on the input data, the size of the model might
--   affect its performance.The value is an integer that ranges from
--   <tt>100000</tt> to <tt>2147483648</tt>. The default value is
--   <tt>33554432</tt>.</li>
--   <li><tt>sgd.maxPasses</tt> - The number of times that the training
--   process traverses the observations to build the <tt>MLModel</tt>. The
--   value is an integer that ranges from <tt>1</tt> to <tt>10000</tt>. The
--   default value is <tt>10</tt>.</li>
--   <li><tt>sgd.shuffleType</tt> - Whether Amazon ML shuffles the training
--   data. Shuffling the data improves a model's ability to find the
--   optimal solution for a variety of data types. The valid values are
--   <tt>auto</tt> and <tt>none</tt>. The default value is <tt>none</tt>.
--   We strongly recommend that you shuffle your data.</li>
--   <li><tt>sgd.l1RegularizationAmount</tt> - The coefficient
--   regularization L1 norm. It controls overfitting the data by penalizing
--   large coefficients. This tends to drive coefficients to zero,
--   resulting in a sparse feature set. If you use this parameter, start by
--   specifying a small value, such as <tt>1.0E-08</tt>.The value is a
--   double that ranges from <tt>0</tt> to <tt>MAX_DOUBLE</tt>. The default
--   is to not use L1 normalization. This parameter can't be used when
--   <tt>L2</tt> is specified. Use this parameter sparingly.</li>
--   <li><tt>sgd.l2RegularizationAmount</tt> - The coefficient
--   regularization L2 norm. It controls overfitting the data by penalizing
--   large coefficients. This tends to drive coefficients to small, nonzero
--   values. If you use this parameter, start by specifying a small value,
--   such as <tt>1.0E-08</tt>.The value is a double that ranges from
--   <tt>0</tt> to <tt>MAX_DOUBLE</tt>. The default is to not use L2
--   normalization. This parameter can't be used when <tt>L1</tt> is
--   specified. Use this parameter sparingly.</li>
--   </ul>
[$sel:parameters:CreateMLModel'] :: CreateMLModel -> Maybe (HashMap Text Text)

-- | A user-supplied ID that uniquely identifies the <tt>MLModel</tt>.
[$sel:mLModelId:CreateMLModel'] :: CreateMLModel -> Text

-- | The category of supervised learning that this <tt>MLModel</tt> will
--   address. Choose from the following types:
--   
--   <ul>
--   <li>Choose <tt>REGRESSION</tt> if the <tt>MLModel</tt> will be used to
--   predict a numeric value.</li>
--   <li>Choose <tt>BINARY</tt> if the <tt>MLModel</tt> result has two
--   possible values.</li>
--   <li>Choose <tt>MULTICLASS</tt> if the <tt>MLModel</tt> result has a
--   limited number of values.</li>
--   </ul>
--   
--   For more information, see the <a>Amazon Machine Learning Developer
--   Guide</a>.
[$sel:mLModelType:CreateMLModel'] :: CreateMLModel -> MLModelType

-- | The <tt>DataSource</tt> that points to the training data.
[$sel:trainingDataSourceId:CreateMLModel'] :: CreateMLModel -> Text

-- | Create a value of <a>CreateMLModel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:recipeUri:CreateMLModel'</a>, <a>createMLModel_recipeUri</a> -
--   The Amazon Simple Storage Service (Amazon S3) location and file name
--   that contains the <tt>MLModel</tt> recipe. You must specify either the
--   recipe or its URI. If you don't specify a recipe or its URI, Amazon ML
--   creates a default.
--   
--   <a>$sel:recipe:CreateMLModel'</a>, <a>createMLModel_recipe</a> - The
--   data recipe for creating the <tt>MLModel</tt>. You must specify either
--   the recipe or its URI. If you don't specify a recipe or its URI,
--   Amazon ML creates a default.
--   
--   <a>$sel:mLModelName:CreateMLModel'</a>,
--   <a>createMLModel_mLModelName</a> - A user-supplied name or description
--   of the <tt>MLModel</tt>.
--   
--   <a>$sel:parameters:CreateMLModel'</a>, <a>createMLModel_parameters</a>
--   - A list of the training parameters in the <tt>MLModel</tt>. The list
--   is implemented as a map of key-value pairs.
--   
--   The following is the current set of training parameters:
--   
--   <ul>
--   <li><tt>sgd.maxMLModelSizeInBytes</tt> - The maximum allowed size of
--   the model. Depending on the input data, the size of the model might
--   affect its performance.The value is an integer that ranges from
--   <tt>100000</tt> to <tt>2147483648</tt>. The default value is
--   <tt>33554432</tt>.</li>
--   <li><tt>sgd.maxPasses</tt> - The number of times that the training
--   process traverses the observations to build the <tt>MLModel</tt>. The
--   value is an integer that ranges from <tt>1</tt> to <tt>10000</tt>. The
--   default value is <tt>10</tt>.</li>
--   <li><tt>sgd.shuffleType</tt> - Whether Amazon ML shuffles the training
--   data. Shuffling the data improves a model's ability to find the
--   optimal solution for a variety of data types. The valid values are
--   <tt>auto</tt> and <tt>none</tt>. The default value is <tt>none</tt>.
--   We strongly recommend that you shuffle your data.</li>
--   <li><tt>sgd.l1RegularizationAmount</tt> - The coefficient
--   regularization L1 norm. It controls overfitting the data by penalizing
--   large coefficients. This tends to drive coefficients to zero,
--   resulting in a sparse feature set. If you use this parameter, start by
--   specifying a small value, such as <tt>1.0E-08</tt>.The value is a
--   double that ranges from <tt>0</tt> to <tt>MAX_DOUBLE</tt>. The default
--   is to not use L1 normalization. This parameter can't be used when
--   <tt>L2</tt> is specified. Use this parameter sparingly.</li>
--   <li><tt>sgd.l2RegularizationAmount</tt> - The coefficient
--   regularization L2 norm. It controls overfitting the data by penalizing
--   large coefficients. This tends to drive coefficients to small, nonzero
--   values. If you use this parameter, start by specifying a small value,
--   such as <tt>1.0E-08</tt>.The value is a double that ranges from
--   <tt>0</tt> to <tt>MAX_DOUBLE</tt>. The default is to not use L2
--   normalization. This parameter can't be used when <tt>L1</tt> is
--   specified. Use this parameter sparingly.</li>
--   </ul>
--   
--   <a>$sel:mLModelId:CreateMLModel'</a>, <a>createMLModel_mLModelId</a> -
--   A user-supplied ID that uniquely identifies the <tt>MLModel</tt>.
--   
--   <a>$sel:mLModelType:CreateMLModel'</a>,
--   <a>createMLModel_mLModelType</a> - The category of supervised learning
--   that this <tt>MLModel</tt> will address. Choose from the following
--   types:
--   
--   <ul>
--   <li>Choose <tt>REGRESSION</tt> if the <tt>MLModel</tt> will be used to
--   predict a numeric value.</li>
--   <li>Choose <tt>BINARY</tt> if the <tt>MLModel</tt> result has two
--   possible values.</li>
--   <li>Choose <tt>MULTICLASS</tt> if the <tt>MLModel</tt> result has a
--   limited number of values.</li>
--   </ul>
--   
--   For more information, see the <a>Amazon Machine Learning Developer
--   Guide</a>.
--   
--   <a>$sel:trainingDataSourceId:CreateMLModel'</a>,
--   <a>createMLModel_trainingDataSourceId</a> - The <tt>DataSource</tt>
--   that points to the training data.
newCreateMLModel :: Text -> MLModelType -> Text -> CreateMLModel

-- | The Amazon Simple Storage Service (Amazon S3) location and file name
--   that contains the <tt>MLModel</tt> recipe. You must specify either the
--   recipe or its URI. If you don't specify a recipe or its URI, Amazon ML
--   creates a default.
createMLModel_recipeUri :: Lens' CreateMLModel (Maybe Text)

-- | The data recipe for creating the <tt>MLModel</tt>. You must specify
--   either the recipe or its URI. If you don't specify a recipe or its
--   URI, Amazon ML creates a default.
createMLModel_recipe :: Lens' CreateMLModel (Maybe Text)

-- | A user-supplied name or description of the <tt>MLModel</tt>.
createMLModel_mLModelName :: Lens' CreateMLModel (Maybe Text)

-- | A list of the training parameters in the <tt>MLModel</tt>. The list is
--   implemented as a map of key-value pairs.
--   
--   The following is the current set of training parameters:
--   
--   <ul>
--   <li><tt>sgd.maxMLModelSizeInBytes</tt> - The maximum allowed size of
--   the model. Depending on the input data, the size of the model might
--   affect its performance.The value is an integer that ranges from
--   <tt>100000</tt> to <tt>2147483648</tt>. The default value is
--   <tt>33554432</tt>.</li>
--   <li><tt>sgd.maxPasses</tt> - The number of times that the training
--   process traverses the observations to build the <tt>MLModel</tt>. The
--   value is an integer that ranges from <tt>1</tt> to <tt>10000</tt>. The
--   default value is <tt>10</tt>.</li>
--   <li><tt>sgd.shuffleType</tt> - Whether Amazon ML shuffles the training
--   data. Shuffling the data improves a model's ability to find the
--   optimal solution for a variety of data types. The valid values are
--   <tt>auto</tt> and <tt>none</tt>. The default value is <tt>none</tt>.
--   We strongly recommend that you shuffle your data.</li>
--   <li><tt>sgd.l1RegularizationAmount</tt> - The coefficient
--   regularization L1 norm. It controls overfitting the data by penalizing
--   large coefficients. This tends to drive coefficients to zero,
--   resulting in a sparse feature set. If you use this parameter, start by
--   specifying a small value, such as <tt>1.0E-08</tt>.The value is a
--   double that ranges from <tt>0</tt> to <tt>MAX_DOUBLE</tt>. The default
--   is to not use L1 normalization. This parameter can't be used when
--   <tt>L2</tt> is specified. Use this parameter sparingly.</li>
--   <li><tt>sgd.l2RegularizationAmount</tt> - The coefficient
--   regularization L2 norm. It controls overfitting the data by penalizing
--   large coefficients. This tends to drive coefficients to small, nonzero
--   values. If you use this parameter, start by specifying a small value,
--   such as <tt>1.0E-08</tt>.The value is a double that ranges from
--   <tt>0</tt> to <tt>MAX_DOUBLE</tt>. The default is to not use L2
--   normalization. This parameter can't be used when <tt>L1</tt> is
--   specified. Use this parameter sparingly.</li>
--   </ul>
createMLModel_parameters :: Lens' CreateMLModel (Maybe (HashMap Text Text))

-- | A user-supplied ID that uniquely identifies the <tt>MLModel</tt>.
createMLModel_mLModelId :: Lens' CreateMLModel Text

-- | The category of supervised learning that this <tt>MLModel</tt> will
--   address. Choose from the following types:
--   
--   <ul>
--   <li>Choose <tt>REGRESSION</tt> if the <tt>MLModel</tt> will be used to
--   predict a numeric value.</li>
--   <li>Choose <tt>BINARY</tt> if the <tt>MLModel</tt> result has two
--   possible values.</li>
--   <li>Choose <tt>MULTICLASS</tt> if the <tt>MLModel</tt> result has a
--   limited number of values.</li>
--   </ul>
--   
--   For more information, see the <a>Amazon Machine Learning Developer
--   Guide</a>.
createMLModel_mLModelType :: Lens' CreateMLModel MLModelType

-- | The <tt>DataSource</tt> that points to the training data.
createMLModel_trainingDataSourceId :: Lens' CreateMLModel Text

-- | Represents the output of a <tt>CreateMLModel</tt> operation, and is an
--   acknowledgement that Amazon ML received the request.
--   
--   The <tt>CreateMLModel</tt> operation is asynchronous. You can poll for
--   status updates by using the <tt>GetMLModel</tt> operation and checking
--   the <tt>Status</tt> parameter.
--   
--   <i>See:</i> <a>newCreateMLModelResponse</a> smart constructor.
data CreateMLModelResponse
CreateMLModelResponse' :: Maybe Text -> Int -> CreateMLModelResponse

-- | A user-supplied ID that uniquely identifies the <tt>MLModel</tt>. This
--   value should be identical to the value of the <tt>MLModelId</tt> in
--   the request.
[$sel:mLModelId:CreateMLModelResponse'] :: CreateMLModelResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateMLModelResponse'] :: CreateMLModelResponse -> Int

-- | Create a value of <a>CreateMLModelResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mLModelId:CreateMLModel'</a>,
--   <a>createMLModelResponse_mLModelId</a> - A user-supplied ID that
--   uniquely identifies the <tt>MLModel</tt>. This value should be
--   identical to the value of the <tt>MLModelId</tt> in the request.
--   
--   <a>$sel:httpStatus:CreateMLModelResponse'</a>,
--   <a>createMLModelResponse_httpStatus</a> - The response's http status
--   code.
newCreateMLModelResponse :: Int -> CreateMLModelResponse

-- | A user-supplied ID that uniquely identifies the <tt>MLModel</tt>. This
--   value should be identical to the value of the <tt>MLModelId</tt> in
--   the request.
createMLModelResponse_mLModelId :: Lens' CreateMLModelResponse (Maybe Text)

-- | The response's http status code.
createMLModelResponse_httpStatus :: Lens' CreateMLModelResponse Int
instance GHC.Generics.Generic Network.AWS.MachineLearning.CreateMLModel.CreateMLModel
instance GHC.Show.Show Network.AWS.MachineLearning.CreateMLModel.CreateMLModel
instance GHC.Read.Read Network.AWS.MachineLearning.CreateMLModel.CreateMLModel
instance GHC.Classes.Eq Network.AWS.MachineLearning.CreateMLModel.CreateMLModel
instance GHC.Generics.Generic Network.AWS.MachineLearning.CreateMLModel.CreateMLModelResponse
instance GHC.Show.Show Network.AWS.MachineLearning.CreateMLModel.CreateMLModelResponse
instance GHC.Read.Read Network.AWS.MachineLearning.CreateMLModel.CreateMLModelResponse
instance GHC.Classes.Eq Network.AWS.MachineLearning.CreateMLModel.CreateMLModelResponse
instance Network.AWS.Types.AWSRequest Network.AWS.MachineLearning.CreateMLModel.CreateMLModel
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.CreateMLModel.CreateMLModelResponse
instance Data.Hashable.Class.Hashable Network.AWS.MachineLearning.CreateMLModel.CreateMLModel
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.CreateMLModel.CreateMLModel
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.MachineLearning.CreateMLModel.CreateMLModel
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MachineLearning.CreateMLModel.CreateMLModel
instance Network.AWS.Data.Path.ToPath Network.AWS.MachineLearning.CreateMLModel.CreateMLModel
instance Network.AWS.Data.Query.ToQuery Network.AWS.MachineLearning.CreateMLModel.CreateMLModel


-- | Creates a new <tt>Evaluation</tt> of an <tt>MLModel</tt>. An
--   <tt>MLModel</tt> is evaluated on a set of observations associated to a
--   <tt>DataSource</tt>. Like a <tt>DataSource</tt> for an
--   <tt>MLModel</tt>, the <tt>DataSource</tt> for an <tt>Evaluation</tt>
--   contains values for the <tt>Target Variable</tt>. The
--   <tt>Evaluation</tt> compares the predicted result for each observation
--   to the actual outcome and provides a summary so that you know how
--   effective the <tt>MLModel</tt> functions on the test data. Evaluation
--   generates a relevant performance metric, such as BinaryAUC,
--   RegressionRMSE or MulticlassAvgFScore based on the corresponding
--   <tt>MLModelType</tt>: <tt>BINARY</tt>, <tt>REGRESSION</tt> or
--   <tt>MULTICLASS</tt>.
--   
--   <tt>CreateEvaluation</tt> is an asynchronous operation. In response to
--   <tt>CreateEvaluation</tt>, Amazon Machine Learning (Amazon ML)
--   immediately returns and sets the evaluation status to
--   <tt>PENDING</tt>. After the <tt>Evaluation</tt> is created and ready
--   for use, Amazon ML sets the status to <tt>COMPLETED</tt>.
--   
--   You can use the <tt>GetEvaluation</tt> operation to check progress of
--   the evaluation during the creation operation.
module Network.AWS.MachineLearning.CreateEvaluation

-- | <i>See:</i> <a>newCreateEvaluation</a> smart constructor.
data CreateEvaluation
CreateEvaluation' :: Maybe Text -> Text -> Text -> Text -> CreateEvaluation

-- | A user-supplied name or description of the <tt>Evaluation</tt>.
[$sel:evaluationName:CreateEvaluation'] :: CreateEvaluation -> Maybe Text

-- | A user-supplied ID that uniquely identifies the <tt>Evaluation</tt>.
[$sel:evaluationId:CreateEvaluation'] :: CreateEvaluation -> Text

-- | The ID of the <tt>MLModel</tt> to evaluate.
--   
--   The schema used in creating the <tt>MLModel</tt> must match the schema
--   of the <tt>DataSource</tt> used in the <tt>Evaluation</tt>.
[$sel:mLModelId:CreateEvaluation'] :: CreateEvaluation -> Text

-- | The ID of the <tt>DataSource</tt> for the evaluation. The schema of
--   the <tt>DataSource</tt> must match the schema used to create the
--   <tt>MLModel</tt>.
[$sel:evaluationDataSourceId:CreateEvaluation'] :: CreateEvaluation -> Text

-- | Create a value of <a>CreateEvaluation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:evaluationName:CreateEvaluation'</a>,
--   <a>createEvaluation_evaluationName</a> - A user-supplied name or
--   description of the <tt>Evaluation</tt>.
--   
--   <a>$sel:evaluationId:CreateEvaluation'</a>,
--   <a>createEvaluation_evaluationId</a> - A user-supplied ID that
--   uniquely identifies the <tt>Evaluation</tt>.
--   
--   <a>$sel:mLModelId:CreateEvaluation'</a>,
--   <a>createEvaluation_mLModelId</a> - The ID of the <tt>MLModel</tt> to
--   evaluate.
--   
--   The schema used in creating the <tt>MLModel</tt> must match the schema
--   of the <tt>DataSource</tt> used in the <tt>Evaluation</tt>.
--   
--   <a>$sel:evaluationDataSourceId:CreateEvaluation'</a>,
--   <a>createEvaluation_evaluationDataSourceId</a> - The ID of the
--   <tt>DataSource</tt> for the evaluation. The schema of the
--   <tt>DataSource</tt> must match the schema used to create the
--   <tt>MLModel</tt>.
newCreateEvaluation :: Text -> Text -> Text -> CreateEvaluation

-- | A user-supplied name or description of the <tt>Evaluation</tt>.
createEvaluation_evaluationName :: Lens' CreateEvaluation (Maybe Text)

-- | A user-supplied ID that uniquely identifies the <tt>Evaluation</tt>.
createEvaluation_evaluationId :: Lens' CreateEvaluation Text

-- | The ID of the <tt>MLModel</tt> to evaluate.
--   
--   The schema used in creating the <tt>MLModel</tt> must match the schema
--   of the <tt>DataSource</tt> used in the <tt>Evaluation</tt>.
createEvaluation_mLModelId :: Lens' CreateEvaluation Text

-- | The ID of the <tt>DataSource</tt> for the evaluation. The schema of
--   the <tt>DataSource</tt> must match the schema used to create the
--   <tt>MLModel</tt>.
createEvaluation_evaluationDataSourceId :: Lens' CreateEvaluation Text

-- | Represents the output of a <tt>CreateEvaluation</tt> operation, and is
--   an acknowledgement that Amazon ML received the request.
--   
--   <tt>CreateEvaluation</tt> operation is asynchronous. You can poll for
--   status updates by using the <tt>GetEvcaluation</tt> operation and
--   checking the <tt>Status</tt> parameter.
--   
--   <i>See:</i> <a>newCreateEvaluationResponse</a> smart constructor.
data CreateEvaluationResponse
CreateEvaluationResponse' :: Maybe Text -> Int -> CreateEvaluationResponse

-- | The user-supplied ID that uniquely identifies the <tt>Evaluation</tt>.
--   This value should be identical to the value of the
--   <tt>EvaluationId</tt> in the request.
[$sel:evaluationId:CreateEvaluationResponse'] :: CreateEvaluationResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateEvaluationResponse'] :: CreateEvaluationResponse -> Int

-- | Create a value of <a>CreateEvaluationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:evaluationId:CreateEvaluation'</a>,
--   <a>createEvaluationResponse_evaluationId</a> - The user-supplied ID
--   that uniquely identifies the <tt>Evaluation</tt>. This value should be
--   identical to the value of the <tt>EvaluationId</tt> in the request.
--   
--   <a>$sel:httpStatus:CreateEvaluationResponse'</a>,
--   <a>createEvaluationResponse_httpStatus</a> - The response's http
--   status code.
newCreateEvaluationResponse :: Int -> CreateEvaluationResponse

-- | The user-supplied ID that uniquely identifies the <tt>Evaluation</tt>.
--   This value should be identical to the value of the
--   <tt>EvaluationId</tt> in the request.
createEvaluationResponse_evaluationId :: Lens' CreateEvaluationResponse (Maybe Text)

-- | The response's http status code.
createEvaluationResponse_httpStatus :: Lens' CreateEvaluationResponse Int
instance GHC.Generics.Generic Network.AWS.MachineLearning.CreateEvaluation.CreateEvaluation
instance GHC.Show.Show Network.AWS.MachineLearning.CreateEvaluation.CreateEvaluation
instance GHC.Read.Read Network.AWS.MachineLearning.CreateEvaluation.CreateEvaluation
instance GHC.Classes.Eq Network.AWS.MachineLearning.CreateEvaluation.CreateEvaluation
instance GHC.Generics.Generic Network.AWS.MachineLearning.CreateEvaluation.CreateEvaluationResponse
instance GHC.Show.Show Network.AWS.MachineLearning.CreateEvaluation.CreateEvaluationResponse
instance GHC.Read.Read Network.AWS.MachineLearning.CreateEvaluation.CreateEvaluationResponse
instance GHC.Classes.Eq Network.AWS.MachineLearning.CreateEvaluation.CreateEvaluationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.MachineLearning.CreateEvaluation.CreateEvaluation
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.CreateEvaluation.CreateEvaluationResponse
instance Data.Hashable.Class.Hashable Network.AWS.MachineLearning.CreateEvaluation.CreateEvaluation
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.CreateEvaluation.CreateEvaluation
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.MachineLearning.CreateEvaluation.CreateEvaluation
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MachineLearning.CreateEvaluation.CreateEvaluation
instance Network.AWS.Data.Path.ToPath Network.AWS.MachineLearning.CreateEvaluation.CreateEvaluation
instance Network.AWS.Data.Query.ToQuery Network.AWS.MachineLearning.CreateEvaluation.CreateEvaluation


-- | Creates a <tt>DataSource</tt> object. A <tt>DataSource</tt> references
--   data that can be used to perform <tt>CreateMLModel</tt>,
--   <tt>CreateEvaluation</tt>, or <tt>CreateBatchPrediction</tt>
--   operations.
--   
--   <tt>CreateDataSourceFromS3</tt> is an asynchronous operation. In
--   response to <tt>CreateDataSourceFromS3</tt>, Amazon Machine Learning
--   (Amazon ML) immediately returns and sets the <tt>DataSource</tt>
--   status to <tt>PENDING</tt>. After the <tt>DataSource</tt> has been
--   created and is ready for use, Amazon ML sets the <tt>Status</tt>
--   parameter to <tt>COMPLETED</tt>. <tt>DataSource</tt> in the
--   <tt>COMPLETED</tt> or <tt>PENDING</tt> state can be used to perform
--   only <tt>CreateMLModel</tt>, <tt>CreateEvaluation</tt> or
--   <tt>CreateBatchPrediction</tt> operations.
--   
--   If Amazon ML can't accept the input source, it sets the
--   <tt>Status</tt> parameter to <tt>FAILED</tt> and includes an error
--   message in the <tt>Message</tt> attribute of the
--   <tt>GetDataSource</tt> operation response.
--   
--   The observation data used in a <tt>DataSource</tt> should be ready to
--   use; that is, it should have a consistent structure, and missing data
--   values should be kept to a minimum. The observation data must reside
--   in one or more .csv files in an Amazon Simple Storage Service (Amazon
--   S3) location, along with a schema that describes the data items by
--   name and type. The same schema must be used for all of the data files
--   referenced by the <tt>DataSource</tt>.
--   
--   After the <tt>DataSource</tt> has been created, it's ready to use in
--   evaluations and batch predictions. If you plan to use the
--   <tt>DataSource</tt> to train an <tt>MLModel</tt>, the
--   <tt>DataSource</tt> also needs a recipe. A recipe describes how each
--   input variable will be used in training an <tt>MLModel</tt>. Will the
--   variable be included or excluded from training? Will the variable be
--   manipulated; for example, will it be combined with another variable or
--   will it be split apart into word combinations? The recipe provides
--   answers to these questions.
module Network.AWS.MachineLearning.CreateDataSourceFromS

-- | <i>See:</i> <a>newCreateDataSourceFromS</a> smart constructor.
data CreateDataSourceFromS
CreateDataSourceFromS' :: Maybe Bool -> Maybe Text -> Text -> S3DataSpec -> CreateDataSourceFromS

-- | The compute statistics for a <tt>DataSource</tt>. The statistics are
--   generated from the observation data referenced by a
--   <tt>DataSource</tt>. Amazon ML uses the statistics internally during
--   <tt>MLModel</tt> training. This parameter must be set to <tt>true</tt>
--   if the @<tt>DataSource</tt><tt> needs to be used for </tt>MLModel@
--   training.
[$sel:computeStatistics:CreateDataSourceFromS'] :: CreateDataSourceFromS -> Maybe Bool

-- | A user-supplied name or description of the <tt>DataSource</tt>.
[$sel:dataSourceName:CreateDataSourceFromS'] :: CreateDataSourceFromS -> Maybe Text

-- | A user-supplied identifier that uniquely identifies the
--   <tt>DataSource</tt>.
[$sel:dataSourceId:CreateDataSourceFromS'] :: CreateDataSourceFromS -> Text

-- | The data specification of a <tt>DataSource</tt>:
--   
--   <ul>
--   <li>DataLocationS3 - The Amazon S3 location of the observation
--   data.</li>
--   <li>DataSchemaLocationS3 - The Amazon S3 location of the
--   <tt>DataSchema</tt>.</li>
--   <li>DataSchema - A JSON string representing the schema. This is not
--   required if <tt>DataSchemaUri</tt> is specified.</li>
--   <li>DataRearrangement - A JSON string that represents the splitting
--   and rearrangement requirements for the <tt>Datasource</tt>.Sample -
--   <tt>
--   "{\"splitting\":{\"percentBegin\":10,\"percentEnd\":60}}"</tt></li>
--   </ul>
[$sel:dataSpec:CreateDataSourceFromS'] :: CreateDataSourceFromS -> S3DataSpec

-- | Create a value of <a>CreateDataSourceFromS</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:computeStatistics:CreateDataSourceFromS'</a>,
--   <a>createDataSourceFromS_computeStatistics</a> - The compute
--   statistics for a <tt>DataSource</tt>. The statistics are generated
--   from the observation data referenced by a <tt>DataSource</tt>. Amazon
--   ML uses the statistics internally during <tt>MLModel</tt> training.
--   This parameter must be set to <tt>true</tt> if the
--   @<tt>DataSource</tt><tt> needs to be used for </tt>MLModel@ training.
--   
--   <a>$sel:dataSourceName:CreateDataSourceFromS'</a>,
--   <a>createDataSourceFromS_dataSourceName</a> - A user-supplied name or
--   description of the <tt>DataSource</tt>.
--   
--   <a>$sel:dataSourceId:CreateDataSourceFromS'</a>,
--   <a>createDataSourceFromS_dataSourceId</a> - A user-supplied identifier
--   that uniquely identifies the <tt>DataSource</tt>.
--   
--   <a>$sel:dataSpec:CreateDataSourceFromS'</a>,
--   <a>createDataSourceFromS_dataSpec</a> - The data specification of a
--   <tt>DataSource</tt>:
--   
--   <ul>
--   <li>DataLocationS3 - The Amazon S3 location of the observation
--   data.</li>
--   <li>DataSchemaLocationS3 - The Amazon S3 location of the
--   <tt>DataSchema</tt>.</li>
--   <li>DataSchema - A JSON string representing the schema. This is not
--   required if <tt>DataSchemaUri</tt> is specified.</li>
--   <li>DataRearrangement - A JSON string that represents the splitting
--   and rearrangement requirements for the <tt>Datasource</tt>.Sample -
--   <tt>
--   "{\"splitting\":{\"percentBegin\":10,\"percentEnd\":60}}"</tt></li>
--   </ul>
newCreateDataSourceFromS :: Text -> S3DataSpec -> CreateDataSourceFromS

-- | The compute statistics for a <tt>DataSource</tt>. The statistics are
--   generated from the observation data referenced by a
--   <tt>DataSource</tt>. Amazon ML uses the statistics internally during
--   <tt>MLModel</tt> training. This parameter must be set to <tt>true</tt>
--   if the @<tt>DataSource</tt><tt> needs to be used for </tt>MLModel@
--   training.
createDataSourceFromS_computeStatistics :: Lens' CreateDataSourceFromS (Maybe Bool)

-- | A user-supplied name or description of the <tt>DataSource</tt>.
createDataSourceFromS_dataSourceName :: Lens' CreateDataSourceFromS (Maybe Text)

-- | A user-supplied identifier that uniquely identifies the
--   <tt>DataSource</tt>.
createDataSourceFromS_dataSourceId :: Lens' CreateDataSourceFromS Text

-- | The data specification of a <tt>DataSource</tt>:
--   
--   <ul>
--   <li>DataLocationS3 - The Amazon S3 location of the observation
--   data.</li>
--   <li>DataSchemaLocationS3 - The Amazon S3 location of the
--   <tt>DataSchema</tt>.</li>
--   <li>DataSchema - A JSON string representing the schema. This is not
--   required if <tt>DataSchemaUri</tt> is specified.</li>
--   <li>DataRearrangement - A JSON string that represents the splitting
--   and rearrangement requirements for the <tt>Datasource</tt>.Sample -
--   <tt>
--   "{\"splitting\":{\"percentBegin\":10,\"percentEnd\":60}}"</tt></li>
--   </ul>
createDataSourceFromS_dataSpec :: Lens' CreateDataSourceFromS S3DataSpec

-- | Represents the output of a <tt>CreateDataSourceFromS3</tt> operation,
--   and is an acknowledgement that Amazon ML received the request.
--   
--   The <tt>CreateDataSourceFromS3</tt> operation is asynchronous. You can
--   poll for updates by using the <tt>GetBatchPrediction</tt> operation
--   and checking the <tt>Status</tt> parameter.
--   
--   <i>See:</i> <a>newCreateDataSourceFromSResponse</a> smart constructor.
data CreateDataSourceFromSResponse
CreateDataSourceFromSResponse' :: Maybe Text -> Int -> CreateDataSourceFromSResponse

-- | A user-supplied ID that uniquely identifies the <tt>DataSource</tt>.
--   This value should be identical to the value of the
--   <tt>DataSourceID</tt> in the request.
[$sel:dataSourceId:CreateDataSourceFromSResponse'] :: CreateDataSourceFromSResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateDataSourceFromSResponse'] :: CreateDataSourceFromSResponse -> Int

-- | Create a value of <a>CreateDataSourceFromSResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataSourceId:CreateDataSourceFromS'</a>,
--   <a>createDataSourceFromSResponse_dataSourceId</a> - A user-supplied ID
--   that uniquely identifies the <tt>DataSource</tt>. This value should be
--   identical to the value of the <tt>DataSourceID</tt> in the request.
--   
--   <a>$sel:httpStatus:CreateDataSourceFromSResponse'</a>,
--   <a>createDataSourceFromSResponse_httpStatus</a> - The response's http
--   status code.
newCreateDataSourceFromSResponse :: Int -> CreateDataSourceFromSResponse

-- | A user-supplied ID that uniquely identifies the <tt>DataSource</tt>.
--   This value should be identical to the value of the
--   <tt>DataSourceID</tt> in the request.
createDataSourceFromSResponse_dataSourceId :: Lens' CreateDataSourceFromSResponse (Maybe Text)

-- | The response's http status code.
createDataSourceFromSResponse_httpStatus :: Lens' CreateDataSourceFromSResponse Int
instance GHC.Generics.Generic Network.AWS.MachineLearning.CreateDataSourceFromS.CreateDataSourceFromS
instance GHC.Show.Show Network.AWS.MachineLearning.CreateDataSourceFromS.CreateDataSourceFromS
instance GHC.Read.Read Network.AWS.MachineLearning.CreateDataSourceFromS.CreateDataSourceFromS
instance GHC.Classes.Eq Network.AWS.MachineLearning.CreateDataSourceFromS.CreateDataSourceFromS
instance GHC.Generics.Generic Network.AWS.MachineLearning.CreateDataSourceFromS.CreateDataSourceFromSResponse
instance GHC.Show.Show Network.AWS.MachineLearning.CreateDataSourceFromS.CreateDataSourceFromSResponse
instance GHC.Read.Read Network.AWS.MachineLearning.CreateDataSourceFromS.CreateDataSourceFromSResponse
instance GHC.Classes.Eq Network.AWS.MachineLearning.CreateDataSourceFromS.CreateDataSourceFromSResponse
instance Network.AWS.Types.AWSRequest Network.AWS.MachineLearning.CreateDataSourceFromS.CreateDataSourceFromS
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.CreateDataSourceFromS.CreateDataSourceFromSResponse
instance Data.Hashable.Class.Hashable Network.AWS.MachineLearning.CreateDataSourceFromS.CreateDataSourceFromS
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.CreateDataSourceFromS.CreateDataSourceFromS
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.MachineLearning.CreateDataSourceFromS.CreateDataSourceFromS
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MachineLearning.CreateDataSourceFromS.CreateDataSourceFromS
instance Network.AWS.Data.Path.ToPath Network.AWS.MachineLearning.CreateDataSourceFromS.CreateDataSourceFromS
instance Network.AWS.Data.Query.ToQuery Network.AWS.MachineLearning.CreateDataSourceFromS.CreateDataSourceFromS


-- | Creates a <tt>DataSource</tt> from a database hosted on an Amazon
--   Redshift cluster. A <tt>DataSource</tt> references data that can be
--   used to perform either <tt>CreateMLModel</tt>,
--   <tt>CreateEvaluation</tt>, or <tt>CreateBatchPrediction</tt>
--   operations.
--   
--   <tt>CreateDataSourceFromRedshift</tt> is an asynchronous operation. In
--   response to <tt>CreateDataSourceFromRedshift</tt>, Amazon Machine
--   Learning (Amazon ML) immediately returns and sets the
--   <tt>DataSource</tt> status to <tt>PENDING</tt>. After the
--   <tt>DataSource</tt> is created and ready for use, Amazon ML sets the
--   <tt>Status</tt> parameter to <tt>COMPLETED</tt>. <tt>DataSource</tt>
--   in <tt>COMPLETED</tt> or <tt>PENDING</tt> states can be used to
--   perform only <tt>CreateMLModel</tt>, <tt>CreateEvaluation</tt>, or
--   <tt>CreateBatchPrediction</tt> operations.
--   
--   If Amazon ML can't accept the input source, it sets the
--   <tt>Status</tt> parameter to <tt>FAILED</tt> and includes an error
--   message in the <tt>Message</tt> attribute of the
--   <tt>GetDataSource</tt> operation response.
--   
--   The observations should be contained in the database hosted on an
--   Amazon Redshift cluster and should be specified by a
--   <tt>SelectSqlQuery</tt> query. Amazon ML executes an <tt>Unload</tt>
--   command in Amazon Redshift to transfer the result set of the
--   <tt>SelectSqlQuery</tt> query to <tt>S3StagingLocation</tt>.
--   
--   After the <tt>DataSource</tt> has been created, it's ready for use in
--   evaluations and batch predictions. If you plan to use the
--   <tt>DataSource</tt> to train an <tt>MLModel</tt>, the
--   <tt>DataSource</tt> also requires a recipe. A recipe describes how
--   each input variable will be used in training an <tt>MLModel</tt>. Will
--   the variable be included or excluded from training? Will the variable
--   be manipulated; for example, will it be combined with another variable
--   or will it be split apart into word combinations? The recipe provides
--   answers to these questions.
--   
--   You can't change an existing datasource, but you can copy and modify
--   the settings from an existing Amazon Redshift datasource to create a
--   new datasource. To do so, call <tt>GetDataSource</tt> for an existing
--   datasource and copy the values to a <tt>CreateDataSource</tt> call.
--   Change the settings that you want to change and make sure that all
--   required fields have the appropriate values.
module Network.AWS.MachineLearning.CreateDataSourceFromRedshift

-- | <i>See:</i> <a>newCreateDataSourceFromRedshift</a> smart constructor.
data CreateDataSourceFromRedshift
CreateDataSourceFromRedshift' :: Maybe Bool -> Maybe Text -> Text -> RedshiftDataSpec -> Text -> CreateDataSourceFromRedshift

-- | The compute statistics for a <tt>DataSource</tt>. The statistics are
--   generated from the observation data referenced by a
--   <tt>DataSource</tt>. Amazon ML uses the statistics internally during
--   <tt>MLModel</tt> training. This parameter must be set to <tt>true</tt>
--   if the <tt>DataSource</tt> needs to be used for <tt>MLModel</tt>
--   training.
[$sel:computeStatistics:CreateDataSourceFromRedshift'] :: CreateDataSourceFromRedshift -> Maybe Bool

-- | A user-supplied name or description of the <tt>DataSource</tt>.
[$sel:dataSourceName:CreateDataSourceFromRedshift'] :: CreateDataSourceFromRedshift -> Maybe Text

-- | A user-supplied ID that uniquely identifies the <tt>DataSource</tt>.
[$sel:dataSourceId:CreateDataSourceFromRedshift'] :: CreateDataSourceFromRedshift -> Text

-- | The data specification of an Amazon Redshift <tt>DataSource</tt>:
--   
--   <ul>
--   <li>DatabaseInformation -<ul><li><tt>DatabaseName</tt> - The name of
--   the Amazon Redshift database.</li><li><tt> ClusterIdentifier</tt> -
--   The unique ID for the Amazon Redshift cluster.</li></ul></li>
--   <li>DatabaseCredentials - The AWS Identity and Access Management (IAM)
--   credentials that are used to connect to the Amazon Redshift
--   database.</li>
--   <li>SelectSqlQuery - The query that is used to retrieve the
--   observation data for the <tt>Datasource</tt>.</li>
--   <li>S3StagingLocation - The Amazon Simple Storage Service (Amazon S3)
--   location for staging Amazon Redshift data. The data retrieved from
--   Amazon Redshift using the <tt>SelectSqlQuery</tt> query is stored in
--   this location.</li>
--   <li>DataSchemaUri - The Amazon S3 location of the
--   <tt>DataSchema</tt>.</li>
--   <li>DataSchema - A JSON string representing the schema. This is not
--   required if <tt>DataSchemaUri</tt> is specified.</li>
--   <li>DataRearrangement - A JSON string that represents the splitting
--   and rearrangement requirements for the <tt>DataSource</tt>.Sample -
--   <tt>
--   "{\"splitting\":{\"percentBegin\":10,\"percentEnd\":60}}"</tt></li>
--   </ul>
[$sel:dataSpec:CreateDataSourceFromRedshift'] :: CreateDataSourceFromRedshift -> RedshiftDataSpec

-- | A fully specified role Amazon Resource Name (ARN). Amazon ML assumes
--   the role on behalf of the user to create the following:
--   
--   <ul>
--   <li>A security group to allow Amazon ML to execute the
--   <tt>SelectSqlQuery</tt> query on an Amazon Redshift cluster</li>
--   <li>An Amazon S3 bucket policy to grant Amazon ML read/write
--   permissions on the <tt>S3StagingLocation</tt></li>
--   </ul>
[$sel:roleARN:CreateDataSourceFromRedshift'] :: CreateDataSourceFromRedshift -> Text

-- | Create a value of <a>CreateDataSourceFromRedshift</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:computeStatistics:CreateDataSourceFromRedshift'</a>,
--   <a>createDataSourceFromRedshift_computeStatistics</a> - The compute
--   statistics for a <tt>DataSource</tt>. The statistics are generated
--   from the observation data referenced by a <tt>DataSource</tt>. Amazon
--   ML uses the statistics internally during <tt>MLModel</tt> training.
--   This parameter must be set to <tt>true</tt> if the <tt>DataSource</tt>
--   needs to be used for <tt>MLModel</tt> training.
--   
--   <a>$sel:dataSourceName:CreateDataSourceFromRedshift'</a>,
--   <a>createDataSourceFromRedshift_dataSourceName</a> - A user-supplied
--   name or description of the <tt>DataSource</tt>.
--   
--   <a>$sel:dataSourceId:CreateDataSourceFromRedshift'</a>,
--   <a>createDataSourceFromRedshift_dataSourceId</a> - A user-supplied ID
--   that uniquely identifies the <tt>DataSource</tt>.
--   
--   <a>$sel:dataSpec:CreateDataSourceFromRedshift'</a>,
--   <a>createDataSourceFromRedshift_dataSpec</a> - The data specification
--   of an Amazon Redshift <tt>DataSource</tt>:
--   
--   <ul>
--   <li>DatabaseInformation -<ul><li><tt>DatabaseName</tt> - The name of
--   the Amazon Redshift database.</li><li><tt> ClusterIdentifier</tt> -
--   The unique ID for the Amazon Redshift cluster.</li></ul></li>
--   <li>DatabaseCredentials - The AWS Identity and Access Management (IAM)
--   credentials that are used to connect to the Amazon Redshift
--   database.</li>
--   <li>SelectSqlQuery - The query that is used to retrieve the
--   observation data for the <tt>Datasource</tt>.</li>
--   <li>S3StagingLocation - The Amazon Simple Storage Service (Amazon S3)
--   location for staging Amazon Redshift data. The data retrieved from
--   Amazon Redshift using the <tt>SelectSqlQuery</tt> query is stored in
--   this location.</li>
--   <li>DataSchemaUri - The Amazon S3 location of the
--   <tt>DataSchema</tt>.</li>
--   <li>DataSchema - A JSON string representing the schema. This is not
--   required if <tt>DataSchemaUri</tt> is specified.</li>
--   <li>DataRearrangement - A JSON string that represents the splitting
--   and rearrangement requirements for the <tt>DataSource</tt>.Sample -
--   <tt>
--   "{\"splitting\":{\"percentBegin\":10,\"percentEnd\":60}}"</tt></li>
--   </ul>
--   
--   <a>$sel:roleARN:CreateDataSourceFromRedshift'</a>,
--   <a>createDataSourceFromRedshift_roleARN</a> - A fully specified role
--   Amazon Resource Name (ARN). Amazon ML assumes the role on behalf of
--   the user to create the following:
--   
--   <ul>
--   <li>A security group to allow Amazon ML to execute the
--   <tt>SelectSqlQuery</tt> query on an Amazon Redshift cluster</li>
--   <li>An Amazon S3 bucket policy to grant Amazon ML read/write
--   permissions on the <tt>S3StagingLocation</tt></li>
--   </ul>
newCreateDataSourceFromRedshift :: Text -> RedshiftDataSpec -> Text -> CreateDataSourceFromRedshift

-- | The compute statistics for a <tt>DataSource</tt>. The statistics are
--   generated from the observation data referenced by a
--   <tt>DataSource</tt>. Amazon ML uses the statistics internally during
--   <tt>MLModel</tt> training. This parameter must be set to <tt>true</tt>
--   if the <tt>DataSource</tt> needs to be used for <tt>MLModel</tt>
--   training.
createDataSourceFromRedshift_computeStatistics :: Lens' CreateDataSourceFromRedshift (Maybe Bool)

-- | A user-supplied name or description of the <tt>DataSource</tt>.
createDataSourceFromRedshift_dataSourceName :: Lens' CreateDataSourceFromRedshift (Maybe Text)

-- | A user-supplied ID that uniquely identifies the <tt>DataSource</tt>.
createDataSourceFromRedshift_dataSourceId :: Lens' CreateDataSourceFromRedshift Text

-- | The data specification of an Amazon Redshift <tt>DataSource</tt>:
--   
--   <ul>
--   <li>DatabaseInformation -<ul><li><tt>DatabaseName</tt> - The name of
--   the Amazon Redshift database.</li><li><tt> ClusterIdentifier</tt> -
--   The unique ID for the Amazon Redshift cluster.</li></ul></li>
--   <li>DatabaseCredentials - The AWS Identity and Access Management (IAM)
--   credentials that are used to connect to the Amazon Redshift
--   database.</li>
--   <li>SelectSqlQuery - The query that is used to retrieve the
--   observation data for the <tt>Datasource</tt>.</li>
--   <li>S3StagingLocation - The Amazon Simple Storage Service (Amazon S3)
--   location for staging Amazon Redshift data. The data retrieved from
--   Amazon Redshift using the <tt>SelectSqlQuery</tt> query is stored in
--   this location.</li>
--   <li>DataSchemaUri - The Amazon S3 location of the
--   <tt>DataSchema</tt>.</li>
--   <li>DataSchema - A JSON string representing the schema. This is not
--   required if <tt>DataSchemaUri</tt> is specified.</li>
--   <li>DataRearrangement - A JSON string that represents the splitting
--   and rearrangement requirements for the <tt>DataSource</tt>.Sample -
--   <tt>
--   "{\"splitting\":{\"percentBegin\":10,\"percentEnd\":60}}"</tt></li>
--   </ul>
createDataSourceFromRedshift_dataSpec :: Lens' CreateDataSourceFromRedshift RedshiftDataSpec

-- | A fully specified role Amazon Resource Name (ARN). Amazon ML assumes
--   the role on behalf of the user to create the following:
--   
--   <ul>
--   <li>A security group to allow Amazon ML to execute the
--   <tt>SelectSqlQuery</tt> query on an Amazon Redshift cluster</li>
--   <li>An Amazon S3 bucket policy to grant Amazon ML read/write
--   permissions on the <tt>S3StagingLocation</tt></li>
--   </ul>
createDataSourceFromRedshift_roleARN :: Lens' CreateDataSourceFromRedshift Text

-- | Represents the output of a <tt>CreateDataSourceFromRedshift</tt>
--   operation, and is an acknowledgement that Amazon ML received the
--   request.
--   
--   The <tt>CreateDataSourceFromRedshift</tt> operation is asynchronous.
--   You can poll for updates by using the <tt>GetBatchPrediction</tt>
--   operation and checking the <tt>Status</tt> parameter.
--   
--   <i>See:</i> <a>newCreateDataSourceFromRedshiftResponse</a> smart
--   constructor.
data CreateDataSourceFromRedshiftResponse
CreateDataSourceFromRedshiftResponse' :: Maybe Text -> Int -> CreateDataSourceFromRedshiftResponse

-- | A user-supplied ID that uniquely identifies the datasource. This value
--   should be identical to the value of the <tt>DataSourceID</tt> in the
--   request.
[$sel:dataSourceId:CreateDataSourceFromRedshiftResponse'] :: CreateDataSourceFromRedshiftResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateDataSourceFromRedshiftResponse'] :: CreateDataSourceFromRedshiftResponse -> Int

-- | Create a value of <a>CreateDataSourceFromRedshiftResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataSourceId:CreateDataSourceFromRedshift'</a>,
--   <a>createDataSourceFromRedshiftResponse_dataSourceId</a> - A
--   user-supplied ID that uniquely identifies the datasource. This value
--   should be identical to the value of the <tt>DataSourceID</tt> in the
--   request.
--   
--   <a>$sel:httpStatus:CreateDataSourceFromRedshiftResponse'</a>,
--   <a>createDataSourceFromRedshiftResponse_httpStatus</a> - The
--   response's http status code.
newCreateDataSourceFromRedshiftResponse :: Int -> CreateDataSourceFromRedshiftResponse

-- | A user-supplied ID that uniquely identifies the datasource. This value
--   should be identical to the value of the <tt>DataSourceID</tt> in the
--   request.
createDataSourceFromRedshiftResponse_dataSourceId :: Lens' CreateDataSourceFromRedshiftResponse (Maybe Text)

-- | The response's http status code.
createDataSourceFromRedshiftResponse_httpStatus :: Lens' CreateDataSourceFromRedshiftResponse Int
instance GHC.Generics.Generic Network.AWS.MachineLearning.CreateDataSourceFromRedshift.CreateDataSourceFromRedshift
instance GHC.Show.Show Network.AWS.MachineLearning.CreateDataSourceFromRedshift.CreateDataSourceFromRedshift
instance GHC.Read.Read Network.AWS.MachineLearning.CreateDataSourceFromRedshift.CreateDataSourceFromRedshift
instance GHC.Classes.Eq Network.AWS.MachineLearning.CreateDataSourceFromRedshift.CreateDataSourceFromRedshift
instance GHC.Generics.Generic Network.AWS.MachineLearning.CreateDataSourceFromRedshift.CreateDataSourceFromRedshiftResponse
instance GHC.Show.Show Network.AWS.MachineLearning.CreateDataSourceFromRedshift.CreateDataSourceFromRedshiftResponse
instance GHC.Read.Read Network.AWS.MachineLearning.CreateDataSourceFromRedshift.CreateDataSourceFromRedshiftResponse
instance GHC.Classes.Eq Network.AWS.MachineLearning.CreateDataSourceFromRedshift.CreateDataSourceFromRedshiftResponse
instance Network.AWS.Types.AWSRequest Network.AWS.MachineLearning.CreateDataSourceFromRedshift.CreateDataSourceFromRedshift
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.CreateDataSourceFromRedshift.CreateDataSourceFromRedshiftResponse
instance Data.Hashable.Class.Hashable Network.AWS.MachineLearning.CreateDataSourceFromRedshift.CreateDataSourceFromRedshift
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.CreateDataSourceFromRedshift.CreateDataSourceFromRedshift
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.MachineLearning.CreateDataSourceFromRedshift.CreateDataSourceFromRedshift
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MachineLearning.CreateDataSourceFromRedshift.CreateDataSourceFromRedshift
instance Network.AWS.Data.Path.ToPath Network.AWS.MachineLearning.CreateDataSourceFromRedshift.CreateDataSourceFromRedshift
instance Network.AWS.Data.Query.ToQuery Network.AWS.MachineLearning.CreateDataSourceFromRedshift.CreateDataSourceFromRedshift


-- | Creates a <tt>DataSource</tt> object from an <a>Amazon Relational
--   Database Service</a> (Amazon RDS). A <tt>DataSource</tt> references
--   data that can be used to perform <tt>CreateMLModel</tt>,
--   <tt>CreateEvaluation</tt>, or <tt>CreateBatchPrediction</tt>
--   operations.
--   
--   <tt>CreateDataSourceFromRDS</tt> is an asynchronous operation. In
--   response to <tt>CreateDataSourceFromRDS</tt>, Amazon Machine Learning
--   (Amazon ML) immediately returns and sets the <tt>DataSource</tt>
--   status to <tt>PENDING</tt>. After the <tt>DataSource</tt> is created
--   and ready for use, Amazon ML sets the <tt>Status</tt> parameter to
--   <tt>COMPLETED</tt>. <tt>DataSource</tt> in the <tt>COMPLETED</tt> or
--   <tt>PENDING</tt> state can be used only to perform
--   <tt>&gt;CreateMLModel</tt>&gt;, <tt>CreateEvaluation</tt>, or
--   <tt>CreateBatchPrediction</tt> operations.
--   
--   If Amazon ML cannot accept the input source, it sets the
--   <tt>Status</tt> parameter to <tt>FAILED</tt> and includes an error
--   message in the <tt>Message</tt> attribute of the
--   <tt>GetDataSource</tt> operation response.
module Network.AWS.MachineLearning.CreateDataSourceFromRDS

-- | <i>See:</i> <a>newCreateDataSourceFromRDS</a> smart constructor.
data CreateDataSourceFromRDS
CreateDataSourceFromRDS' :: Maybe Bool -> Maybe Text -> Text -> RDSDataSpec -> Text -> CreateDataSourceFromRDS

-- | The compute statistics for a <tt>DataSource</tt>. The statistics are
--   generated from the observation data referenced by a
--   <tt>DataSource</tt>. Amazon ML uses the statistics internally during
--   <tt>MLModel</tt> training. This parameter must be set to <tt>true</tt>
--   if the @<tt>DataSource</tt><tt> needs to be used for </tt>MLModel@
--   training.
[$sel:computeStatistics:CreateDataSourceFromRDS'] :: CreateDataSourceFromRDS -> Maybe Bool

-- | A user-supplied name or description of the <tt>DataSource</tt>.
[$sel:dataSourceName:CreateDataSourceFromRDS'] :: CreateDataSourceFromRDS -> Maybe Text

-- | A user-supplied ID that uniquely identifies the <tt>DataSource</tt>.
--   Typically, an Amazon Resource Number (ARN) becomes the ID for a
--   <tt>DataSource</tt>.
[$sel:dataSourceId:CreateDataSourceFromRDS'] :: CreateDataSourceFromRDS -> Text

-- | The data specification of an Amazon RDS <tt>DataSource</tt>:
--   
--   <ul>
--   <li>DatabaseInformation -<ul><li><tt>DatabaseName</tt> - The name of
--   the Amazon RDS database.</li><li><tt>InstanceIdentifier </tt> - A
--   unique identifier for the Amazon RDS database instance.</li></ul></li>
--   <li>DatabaseCredentials - AWS Identity and Access Management (IAM)
--   credentials that are used to connect to the Amazon RDS database.</li>
--   <li>ResourceRole - A role (DataPipelineDefaultResourceRole) assumed by
--   an EC2 instance to carry out the copy task from Amazon RDS to Amazon
--   Simple Storage Service (Amazon S3). For more information, see <a>Role
--   templates</a> for data pipelines.</li>
--   <li>ServiceRole - A role (DataPipelineDefaultRole) assumed by the AWS
--   Data Pipeline service to monitor the progress of the copy task from
--   Amazon RDS to Amazon S3. For more information, see <a>Role
--   templates</a> for data pipelines.</li>
--   <li>SecurityInfo - The security information to use to access an RDS DB
--   instance. You need to set up appropriate ingress rules for the
--   security entity IDs provided to allow access to the Amazon RDS
--   instance. Specify a [<tt>SubnetId</tt>, <tt>SecurityGroupIds</tt>]
--   pair for a VPC-based RDS DB instance.</li>
--   <li>SelectSqlQuery - A query that is used to retrieve the observation
--   data for the <tt>Datasource</tt>.</li>
--   <li>S3StagingLocation - The Amazon S3 location for staging Amazon RDS
--   data. The data retrieved from Amazon RDS using <tt>SelectSqlQuery</tt>
--   is stored in this location.</li>
--   <li>DataSchemaUri - The Amazon S3 location of the
--   <tt>DataSchema</tt>.</li>
--   <li>DataSchema - A JSON string representing the schema. This is not
--   required if <tt>DataSchemaUri</tt> is specified.</li>
--   <li>DataRearrangement - A JSON string that represents the splitting
--   and rearrangement requirements for the <tt>Datasource</tt>.Sample -
--   <tt>
--   "{\"splitting\":{\"percentBegin\":10,\"percentEnd\":60}}"</tt></li>
--   </ul>
[$sel:rDSData:CreateDataSourceFromRDS'] :: CreateDataSourceFromRDS -> RDSDataSpec

-- | The role that Amazon ML assumes on behalf of the user to create and
--   activate a data pipeline in the user's account and copy data using the
--   <tt>SelectSqlQuery</tt> query from Amazon RDS to Amazon S3.
[$sel:roleARN:CreateDataSourceFromRDS'] :: CreateDataSourceFromRDS -> Text

-- | Create a value of <a>CreateDataSourceFromRDS</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:computeStatistics:CreateDataSourceFromRDS'</a>,
--   <a>createDataSourceFromRDS_computeStatistics</a> - The compute
--   statistics for a <tt>DataSource</tt>. The statistics are generated
--   from the observation data referenced by a <tt>DataSource</tt>. Amazon
--   ML uses the statistics internally during <tt>MLModel</tt> training.
--   This parameter must be set to <tt>true</tt> if the
--   @<tt>DataSource</tt><tt> needs to be used for </tt>MLModel@ training.
--   
--   <a>$sel:dataSourceName:CreateDataSourceFromRDS'</a>,
--   <a>createDataSourceFromRDS_dataSourceName</a> - A user-supplied name
--   or description of the <tt>DataSource</tt>.
--   
--   <a>$sel:dataSourceId:CreateDataSourceFromRDS'</a>,
--   <a>createDataSourceFromRDS_dataSourceId</a> - A user-supplied ID that
--   uniquely identifies the <tt>DataSource</tt>. Typically, an Amazon
--   Resource Number (ARN) becomes the ID for a <tt>DataSource</tt>.
--   
--   <a>$sel:rDSData:CreateDataSourceFromRDS'</a>,
--   <a>createDataSourceFromRDS_rDSData</a> - The data specification of an
--   Amazon RDS <tt>DataSource</tt>:
--   
--   <ul>
--   <li>DatabaseInformation -<ul><li><tt>DatabaseName</tt> - The name of
--   the Amazon RDS database.</li><li><tt>InstanceIdentifier </tt> - A
--   unique identifier for the Amazon RDS database instance.</li></ul></li>
--   <li>DatabaseCredentials - AWS Identity and Access Management (IAM)
--   credentials that are used to connect to the Amazon RDS database.</li>
--   <li>ResourceRole - A role (DataPipelineDefaultResourceRole) assumed by
--   an EC2 instance to carry out the copy task from Amazon RDS to Amazon
--   Simple Storage Service (Amazon S3). For more information, see <a>Role
--   templates</a> for data pipelines.</li>
--   <li>ServiceRole - A role (DataPipelineDefaultRole) assumed by the AWS
--   Data Pipeline service to monitor the progress of the copy task from
--   Amazon RDS to Amazon S3. For more information, see <a>Role
--   templates</a> for data pipelines.</li>
--   <li>SecurityInfo - The security information to use to access an RDS DB
--   instance. You need to set up appropriate ingress rules for the
--   security entity IDs provided to allow access to the Amazon RDS
--   instance. Specify a [<tt>SubnetId</tt>, <tt>SecurityGroupIds</tt>]
--   pair for a VPC-based RDS DB instance.</li>
--   <li>SelectSqlQuery - A query that is used to retrieve the observation
--   data for the <tt>Datasource</tt>.</li>
--   <li>S3StagingLocation - The Amazon S3 location for staging Amazon RDS
--   data. The data retrieved from Amazon RDS using <tt>SelectSqlQuery</tt>
--   is stored in this location.</li>
--   <li>DataSchemaUri - The Amazon S3 location of the
--   <tt>DataSchema</tt>.</li>
--   <li>DataSchema - A JSON string representing the schema. This is not
--   required if <tt>DataSchemaUri</tt> is specified.</li>
--   <li>DataRearrangement - A JSON string that represents the splitting
--   and rearrangement requirements for the <tt>Datasource</tt>.Sample -
--   <tt>
--   "{\"splitting\":{\"percentBegin\":10,\"percentEnd\":60}}"</tt></li>
--   </ul>
--   
--   <a>$sel:roleARN:CreateDataSourceFromRDS'</a>,
--   <a>createDataSourceFromRDS_roleARN</a> - The role that Amazon ML
--   assumes on behalf of the user to create and activate a data pipeline
--   in the user's account and copy data using the <tt>SelectSqlQuery</tt>
--   query from Amazon RDS to Amazon S3.
newCreateDataSourceFromRDS :: Text -> RDSDataSpec -> Text -> CreateDataSourceFromRDS

-- | The compute statistics for a <tt>DataSource</tt>. The statistics are
--   generated from the observation data referenced by a
--   <tt>DataSource</tt>. Amazon ML uses the statistics internally during
--   <tt>MLModel</tt> training. This parameter must be set to <tt>true</tt>
--   if the @<tt>DataSource</tt><tt> needs to be used for </tt>MLModel@
--   training.
createDataSourceFromRDS_computeStatistics :: Lens' CreateDataSourceFromRDS (Maybe Bool)

-- | A user-supplied name or description of the <tt>DataSource</tt>.
createDataSourceFromRDS_dataSourceName :: Lens' CreateDataSourceFromRDS (Maybe Text)

-- | A user-supplied ID that uniquely identifies the <tt>DataSource</tt>.
--   Typically, an Amazon Resource Number (ARN) becomes the ID for a
--   <tt>DataSource</tt>.
createDataSourceFromRDS_dataSourceId :: Lens' CreateDataSourceFromRDS Text

-- | The data specification of an Amazon RDS <tt>DataSource</tt>:
--   
--   <ul>
--   <li>DatabaseInformation -<ul><li><tt>DatabaseName</tt> - The name of
--   the Amazon RDS database.</li><li><tt>InstanceIdentifier </tt> - A
--   unique identifier for the Amazon RDS database instance.</li></ul></li>
--   <li>DatabaseCredentials - AWS Identity and Access Management (IAM)
--   credentials that are used to connect to the Amazon RDS database.</li>
--   <li>ResourceRole - A role (DataPipelineDefaultResourceRole) assumed by
--   an EC2 instance to carry out the copy task from Amazon RDS to Amazon
--   Simple Storage Service (Amazon S3). For more information, see <a>Role
--   templates</a> for data pipelines.</li>
--   <li>ServiceRole - A role (DataPipelineDefaultRole) assumed by the AWS
--   Data Pipeline service to monitor the progress of the copy task from
--   Amazon RDS to Amazon S3. For more information, see <a>Role
--   templates</a> for data pipelines.</li>
--   <li>SecurityInfo - The security information to use to access an RDS DB
--   instance. You need to set up appropriate ingress rules for the
--   security entity IDs provided to allow access to the Amazon RDS
--   instance. Specify a [<tt>SubnetId</tt>, <tt>SecurityGroupIds</tt>]
--   pair for a VPC-based RDS DB instance.</li>
--   <li>SelectSqlQuery - A query that is used to retrieve the observation
--   data for the <tt>Datasource</tt>.</li>
--   <li>S3StagingLocation - The Amazon S3 location for staging Amazon RDS
--   data. The data retrieved from Amazon RDS using <tt>SelectSqlQuery</tt>
--   is stored in this location.</li>
--   <li>DataSchemaUri - The Amazon S3 location of the
--   <tt>DataSchema</tt>.</li>
--   <li>DataSchema - A JSON string representing the schema. This is not
--   required if <tt>DataSchemaUri</tt> is specified.</li>
--   <li>DataRearrangement - A JSON string that represents the splitting
--   and rearrangement requirements for the <tt>Datasource</tt>.Sample -
--   <tt>
--   "{\"splitting\":{\"percentBegin\":10,\"percentEnd\":60}}"</tt></li>
--   </ul>
createDataSourceFromRDS_rDSData :: Lens' CreateDataSourceFromRDS RDSDataSpec

-- | The role that Amazon ML assumes on behalf of the user to create and
--   activate a data pipeline in the user's account and copy data using the
--   <tt>SelectSqlQuery</tt> query from Amazon RDS to Amazon S3.
createDataSourceFromRDS_roleARN :: Lens' CreateDataSourceFromRDS Text

-- | Represents the output of a <tt>CreateDataSourceFromRDS</tt> operation,
--   and is an acknowledgement that Amazon ML received the request.
--   
--   The <tt>CreateDataSourceFromRDS</tt>&gt; operation is asynchronous.
--   You can poll for updates by using the <tt>GetBatchPrediction</tt>
--   operation and checking the <tt>Status</tt> parameter. You can inspect
--   the <tt>Message</tt> when <tt>Status</tt> shows up as <tt>FAILED</tt>.
--   You can also check the progress of the copy operation by going to the
--   <tt>DataPipeline</tt> console and looking up the pipeline using the
--   <tt>pipelineId </tt> from the describe call.
--   
--   <i>See:</i> <a>newCreateDataSourceFromRDSResponse</a> smart
--   constructor.
data CreateDataSourceFromRDSResponse
CreateDataSourceFromRDSResponse' :: Maybe Text -> Int -> CreateDataSourceFromRDSResponse

-- | A user-supplied ID that uniquely identifies the datasource. This value
--   should be identical to the value of the <tt>DataSourceID</tt> in the
--   request.
[$sel:dataSourceId:CreateDataSourceFromRDSResponse'] :: CreateDataSourceFromRDSResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateDataSourceFromRDSResponse'] :: CreateDataSourceFromRDSResponse -> Int

-- | Create a value of <a>CreateDataSourceFromRDSResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataSourceId:CreateDataSourceFromRDS'</a>,
--   <a>createDataSourceFromRDSResponse_dataSourceId</a> - A user-supplied
--   ID that uniquely identifies the datasource. This value should be
--   identical to the value of the <tt>DataSourceID</tt> in the request.
--   
--   <a>$sel:httpStatus:CreateDataSourceFromRDSResponse'</a>,
--   <a>createDataSourceFromRDSResponse_httpStatus</a> - The response's
--   http status code.
newCreateDataSourceFromRDSResponse :: Int -> CreateDataSourceFromRDSResponse

-- | A user-supplied ID that uniquely identifies the datasource. This value
--   should be identical to the value of the <tt>DataSourceID</tt> in the
--   request.
createDataSourceFromRDSResponse_dataSourceId :: Lens' CreateDataSourceFromRDSResponse (Maybe Text)

-- | The response's http status code.
createDataSourceFromRDSResponse_httpStatus :: Lens' CreateDataSourceFromRDSResponse Int
instance GHC.Generics.Generic Network.AWS.MachineLearning.CreateDataSourceFromRDS.CreateDataSourceFromRDS
instance GHC.Show.Show Network.AWS.MachineLearning.CreateDataSourceFromRDS.CreateDataSourceFromRDS
instance GHC.Read.Read Network.AWS.MachineLearning.CreateDataSourceFromRDS.CreateDataSourceFromRDS
instance GHC.Classes.Eq Network.AWS.MachineLearning.CreateDataSourceFromRDS.CreateDataSourceFromRDS
instance GHC.Generics.Generic Network.AWS.MachineLearning.CreateDataSourceFromRDS.CreateDataSourceFromRDSResponse
instance GHC.Show.Show Network.AWS.MachineLearning.CreateDataSourceFromRDS.CreateDataSourceFromRDSResponse
instance GHC.Read.Read Network.AWS.MachineLearning.CreateDataSourceFromRDS.CreateDataSourceFromRDSResponse
instance GHC.Classes.Eq Network.AWS.MachineLearning.CreateDataSourceFromRDS.CreateDataSourceFromRDSResponse
instance Network.AWS.Types.AWSRequest Network.AWS.MachineLearning.CreateDataSourceFromRDS.CreateDataSourceFromRDS
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.CreateDataSourceFromRDS.CreateDataSourceFromRDSResponse
instance Data.Hashable.Class.Hashable Network.AWS.MachineLearning.CreateDataSourceFromRDS.CreateDataSourceFromRDS
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.CreateDataSourceFromRDS.CreateDataSourceFromRDS
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.MachineLearning.CreateDataSourceFromRDS.CreateDataSourceFromRDS
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MachineLearning.CreateDataSourceFromRDS.CreateDataSourceFromRDS
instance Network.AWS.Data.Path.ToPath Network.AWS.MachineLearning.CreateDataSourceFromRDS.CreateDataSourceFromRDS
instance Network.AWS.Data.Query.ToQuery Network.AWS.MachineLearning.CreateDataSourceFromRDS.CreateDataSourceFromRDS


-- | Generates predictions for a group of observations. The observations to
--   process exist in one or more data files referenced by a
--   <tt>DataSource</tt>. This operation creates a new
--   <tt>BatchPrediction</tt>, and uses an <tt>MLModel</tt> and the data
--   files referenced by the <tt>DataSource</tt> as information sources.
--   
--   <tt>CreateBatchPrediction</tt> is an asynchronous operation. In
--   response to <tt>CreateBatchPrediction</tt>, Amazon Machine Learning
--   (Amazon ML) immediately returns and sets the <tt>BatchPrediction</tt>
--   status to <tt>PENDING</tt>. After the <tt>BatchPrediction</tt>
--   completes, Amazon ML sets the status to <tt>COMPLETED</tt>.
--   
--   You can poll for status updates by using the GetBatchPrediction
--   operation and checking the <tt>Status</tt> parameter of the result.
--   After the <tt>COMPLETED</tt> status appears, the results are available
--   in the location specified by the <tt>OutputUri</tt> parameter.
module Network.AWS.MachineLearning.CreateBatchPrediction

-- | <i>See:</i> <a>newCreateBatchPrediction</a> smart constructor.
data CreateBatchPrediction
CreateBatchPrediction' :: Maybe Text -> Text -> Text -> Text -> Text -> CreateBatchPrediction

-- | A user-supplied name or description of the <tt>BatchPrediction</tt>.
--   <tt>BatchPredictionName</tt> can only use the UTF-8 character set.
[$sel:batchPredictionName:CreateBatchPrediction'] :: CreateBatchPrediction -> Maybe Text

-- | A user-supplied ID that uniquely identifies the
--   <tt>BatchPrediction</tt>.
[$sel:batchPredictionId:CreateBatchPrediction'] :: CreateBatchPrediction -> Text

-- | The ID of the <tt>MLModel</tt> that will generate predictions for the
--   group of observations.
[$sel:mLModelId:CreateBatchPrediction'] :: CreateBatchPrediction -> Text

-- | The ID of the <tt>DataSource</tt> that points to the group of
--   observations to predict.
[$sel:batchPredictionDataSourceId:CreateBatchPrediction'] :: CreateBatchPrediction -> Text

-- | The location of an Amazon Simple Storage Service (Amazon S3) bucket or
--   directory to store the batch prediction results. The following
--   substrings are not allowed in the <tt>s3 key</tt> portion of the
--   <tt>outputURI</tt> field: ':', '//', '/./', '/../'.
--   
--   Amazon ML needs permissions to store and retrieve the logs on your
--   behalf. For information about how to set permissions, see the
--   <a>Amazon Machine Learning Developer Guide</a>.
[$sel:outputUri:CreateBatchPrediction'] :: CreateBatchPrediction -> Text

-- | Create a value of <a>CreateBatchPrediction</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:batchPredictionName:CreateBatchPrediction'</a>,
--   <a>createBatchPrediction_batchPredictionName</a> - A user-supplied
--   name or description of the <tt>BatchPrediction</tt>.
--   <tt>BatchPredictionName</tt> can only use the UTF-8 character set.
--   
--   <a>$sel:batchPredictionId:CreateBatchPrediction'</a>,
--   <a>createBatchPrediction_batchPredictionId</a> - A user-supplied ID
--   that uniquely identifies the <tt>BatchPrediction</tt>.
--   
--   <a>$sel:mLModelId:CreateBatchPrediction'</a>,
--   <a>createBatchPrediction_mLModelId</a> - The ID of the
--   <tt>MLModel</tt> that will generate predictions for the group of
--   observations.
--   
--   <a>$sel:batchPredictionDataSourceId:CreateBatchPrediction'</a>,
--   <a>createBatchPrediction_batchPredictionDataSourceId</a> - The ID of
--   the <tt>DataSource</tt> that points to the group of observations to
--   predict.
--   
--   <a>$sel:outputUri:CreateBatchPrediction'</a>,
--   <a>createBatchPrediction_outputUri</a> - The location of an Amazon
--   Simple Storage Service (Amazon S3) bucket or directory to store the
--   batch prediction results. The following substrings are not allowed in
--   the <tt>s3 key</tt> portion of the <tt>outputURI</tt> field: ':',
--   '//', '/./', '/../'.
--   
--   Amazon ML needs permissions to store and retrieve the logs on your
--   behalf. For information about how to set permissions, see the
--   <a>Amazon Machine Learning Developer Guide</a>.
newCreateBatchPrediction :: Text -> Text -> Text -> Text -> CreateBatchPrediction

-- | A user-supplied name or description of the <tt>BatchPrediction</tt>.
--   <tt>BatchPredictionName</tt> can only use the UTF-8 character set.
createBatchPrediction_batchPredictionName :: Lens' CreateBatchPrediction (Maybe Text)

-- | A user-supplied ID that uniquely identifies the
--   <tt>BatchPrediction</tt>.
createBatchPrediction_batchPredictionId :: Lens' CreateBatchPrediction Text

-- | The ID of the <tt>MLModel</tt> that will generate predictions for the
--   group of observations.
createBatchPrediction_mLModelId :: Lens' CreateBatchPrediction Text

-- | The ID of the <tt>DataSource</tt> that points to the group of
--   observations to predict.
createBatchPrediction_batchPredictionDataSourceId :: Lens' CreateBatchPrediction Text

-- | The location of an Amazon Simple Storage Service (Amazon S3) bucket or
--   directory to store the batch prediction results. The following
--   substrings are not allowed in the <tt>s3 key</tt> portion of the
--   <tt>outputURI</tt> field: ':', '//', '/./', '/../'.
--   
--   Amazon ML needs permissions to store and retrieve the logs on your
--   behalf. For information about how to set permissions, see the
--   <a>Amazon Machine Learning Developer Guide</a>.
createBatchPrediction_outputUri :: Lens' CreateBatchPrediction Text

-- | Represents the output of a <tt>CreateBatchPrediction</tt> operation,
--   and is an acknowledgement that Amazon ML received the request.
--   
--   The <tt>CreateBatchPrediction</tt> operation is asynchronous. You can
--   poll for status updates by using the <tt>&gt;GetBatchPrediction</tt>
--   operation and checking the <tt>Status</tt> parameter of the result.
--   
--   <i>See:</i> <a>newCreateBatchPredictionResponse</a> smart constructor.
data CreateBatchPredictionResponse
CreateBatchPredictionResponse' :: Maybe Text -> Int -> CreateBatchPredictionResponse

-- | A user-supplied ID that uniquely identifies the
--   <tt>BatchPrediction</tt>. This value is identical to the value of the
--   <tt>BatchPredictionId</tt> in the request.
[$sel:batchPredictionId:CreateBatchPredictionResponse'] :: CreateBatchPredictionResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateBatchPredictionResponse'] :: CreateBatchPredictionResponse -> Int

-- | Create a value of <a>CreateBatchPredictionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:batchPredictionId:CreateBatchPrediction'</a>,
--   <a>createBatchPredictionResponse_batchPredictionId</a> - A
--   user-supplied ID that uniquely identifies the
--   <tt>BatchPrediction</tt>. This value is identical to the value of the
--   <tt>BatchPredictionId</tt> in the request.
--   
--   <a>$sel:httpStatus:CreateBatchPredictionResponse'</a>,
--   <a>createBatchPredictionResponse_httpStatus</a> - The response's http
--   status code.
newCreateBatchPredictionResponse :: Int -> CreateBatchPredictionResponse

-- | A user-supplied ID that uniquely identifies the
--   <tt>BatchPrediction</tt>. This value is identical to the value of the
--   <tt>BatchPredictionId</tt> in the request.
createBatchPredictionResponse_batchPredictionId :: Lens' CreateBatchPredictionResponse (Maybe Text)

-- | The response's http status code.
createBatchPredictionResponse_httpStatus :: Lens' CreateBatchPredictionResponse Int
instance GHC.Generics.Generic Network.AWS.MachineLearning.CreateBatchPrediction.CreateBatchPrediction
instance GHC.Show.Show Network.AWS.MachineLearning.CreateBatchPrediction.CreateBatchPrediction
instance GHC.Read.Read Network.AWS.MachineLearning.CreateBatchPrediction.CreateBatchPrediction
instance GHC.Classes.Eq Network.AWS.MachineLearning.CreateBatchPrediction.CreateBatchPrediction
instance GHC.Generics.Generic Network.AWS.MachineLearning.CreateBatchPrediction.CreateBatchPredictionResponse
instance GHC.Show.Show Network.AWS.MachineLearning.CreateBatchPrediction.CreateBatchPredictionResponse
instance GHC.Read.Read Network.AWS.MachineLearning.CreateBatchPrediction.CreateBatchPredictionResponse
instance GHC.Classes.Eq Network.AWS.MachineLearning.CreateBatchPrediction.CreateBatchPredictionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.MachineLearning.CreateBatchPrediction.CreateBatchPrediction
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.CreateBatchPrediction.CreateBatchPredictionResponse
instance Data.Hashable.Class.Hashable Network.AWS.MachineLearning.CreateBatchPrediction.CreateBatchPrediction
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.CreateBatchPrediction.CreateBatchPrediction
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.MachineLearning.CreateBatchPrediction.CreateBatchPrediction
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MachineLearning.CreateBatchPrediction.CreateBatchPrediction
instance Network.AWS.Data.Path.ToPath Network.AWS.MachineLearning.CreateBatchPrediction.CreateBatchPrediction
instance Network.AWS.Data.Query.ToQuery Network.AWS.MachineLearning.CreateBatchPrediction.CreateBatchPrediction


-- | Adds one or more tags to an object, up to a limit of 10. Each tag
--   consists of a key and an optional value. If you add a tag using a key
--   that is already associated with the ML object, <tt>AddTags</tt>
--   updates the tag's value.
module Network.AWS.MachineLearning.AddTags

-- | <i>See:</i> <a>newAddTags</a> smart constructor.
data AddTags
AddTags' :: [Tag] -> Text -> TaggableResourceType -> AddTags

-- | The key-value pairs to use to create tags. If you specify a key
--   without specifying a value, Amazon ML creates a tag with the specified
--   key and a value of null.
[$sel:tags:AddTags'] :: AddTags -> [Tag]

-- | The ID of the ML object to tag. For example, <tt>exampleModelId</tt>.
[$sel:resourceId:AddTags'] :: AddTags -> Text

-- | The type of the ML object to tag.
[$sel:resourceType:AddTags'] :: AddTags -> TaggableResourceType

-- | Create a value of <a>AddTags</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:AddTags'</a>, <a>addTags_tags</a> - The key-value pairs
--   to use to create tags. If you specify a key without specifying a
--   value, Amazon ML creates a tag with the specified key and a value of
--   null.
--   
--   <a>$sel:resourceId:AddTags'</a>, <a>addTags_resourceId</a> - The ID of
--   the ML object to tag. For example, <tt>exampleModelId</tt>.
--   
--   <a>$sel:resourceType:AddTags'</a>, <a>addTags_resourceType</a> - The
--   type of the ML object to tag.
newAddTags :: Text -> TaggableResourceType -> AddTags

-- | The key-value pairs to use to create tags. If you specify a key
--   without specifying a value, Amazon ML creates a tag with the specified
--   key and a value of null.
addTags_tags :: Lens' AddTags [Tag]

-- | The ID of the ML object to tag. For example, <tt>exampleModelId</tt>.
addTags_resourceId :: Lens' AddTags Text

-- | The type of the ML object to tag.
addTags_resourceType :: Lens' AddTags TaggableResourceType

-- | Amazon ML returns the following elements.
--   
--   <i>See:</i> <a>newAddTagsResponse</a> smart constructor.
data AddTagsResponse
AddTagsResponse' :: Maybe Text -> Maybe TaggableResourceType -> Int -> AddTagsResponse

-- | The ID of the ML object that was tagged.
[$sel:resourceId:AddTagsResponse'] :: AddTagsResponse -> Maybe Text

-- | The type of the ML object that was tagged.
[$sel:resourceType:AddTagsResponse'] :: AddTagsResponse -> Maybe TaggableResourceType

-- | The response's http status code.
[$sel:httpStatus:AddTagsResponse'] :: AddTagsResponse -> Int

-- | Create a value of <a>AddTagsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceId:AddTags'</a>, <a>addTagsResponse_resourceId</a> -
--   The ID of the ML object that was tagged.
--   
--   <a>$sel:resourceType:AddTags'</a>, <a>addTagsResponse_resourceType</a>
--   - The type of the ML object that was tagged.
--   
--   <a>$sel:httpStatus:AddTagsResponse'</a>,
--   <a>addTagsResponse_httpStatus</a> - The response's http status code.
newAddTagsResponse :: Int -> AddTagsResponse

-- | The ID of the ML object that was tagged.
addTagsResponse_resourceId :: Lens' AddTagsResponse (Maybe Text)

-- | The type of the ML object that was tagged.
addTagsResponse_resourceType :: Lens' AddTagsResponse (Maybe TaggableResourceType)

-- | The response's http status code.
addTagsResponse_httpStatus :: Lens' AddTagsResponse Int
instance GHC.Generics.Generic Network.AWS.MachineLearning.AddTags.AddTags
instance GHC.Show.Show Network.AWS.MachineLearning.AddTags.AddTags
instance GHC.Read.Read Network.AWS.MachineLearning.AddTags.AddTags
instance GHC.Classes.Eq Network.AWS.MachineLearning.AddTags.AddTags
instance GHC.Generics.Generic Network.AWS.MachineLearning.AddTags.AddTagsResponse
instance GHC.Show.Show Network.AWS.MachineLearning.AddTags.AddTagsResponse
instance GHC.Read.Read Network.AWS.MachineLearning.AddTags.AddTagsResponse
instance GHC.Classes.Eq Network.AWS.MachineLearning.AddTags.AddTagsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.MachineLearning.AddTags.AddTags
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.AddTags.AddTagsResponse
instance Data.Hashable.Class.Hashable Network.AWS.MachineLearning.AddTags.AddTags
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.AddTags.AddTags
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.MachineLearning.AddTags.AddTags
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MachineLearning.AddTags.AddTags
instance Network.AWS.Data.Path.ToPath Network.AWS.MachineLearning.AddTags.AddTags
instance Network.AWS.Data.Query.ToQuery Network.AWS.MachineLearning.AddTags.AddTags


-- | Updates the <tt>BatchPredictionName</tt> of a
--   <tt>BatchPrediction</tt>.
--   
--   You can use the <tt>GetBatchPrediction</tt> operation to view the
--   contents of the updated data element.
module Network.AWS.MachineLearning.UpdateBatchPrediction

-- | <i>See:</i> <a>newUpdateBatchPrediction</a> smart constructor.
data UpdateBatchPrediction
UpdateBatchPrediction' :: Text -> Text -> UpdateBatchPrediction

-- | The ID assigned to the <tt>BatchPrediction</tt> during creation.
[$sel:batchPredictionId:UpdateBatchPrediction'] :: UpdateBatchPrediction -> Text

-- | A new user-supplied name or description of the
--   <tt>BatchPrediction</tt>.
[$sel:batchPredictionName:UpdateBatchPrediction'] :: UpdateBatchPrediction -> Text

-- | Create a value of <a>UpdateBatchPrediction</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:batchPredictionId:UpdateBatchPrediction'</a>,
--   <a>updateBatchPrediction_batchPredictionId</a> - The ID assigned to
--   the <tt>BatchPrediction</tt> during creation.
--   
--   <a>$sel:batchPredictionName:UpdateBatchPrediction'</a>,
--   <a>updateBatchPrediction_batchPredictionName</a> - A new user-supplied
--   name or description of the <tt>BatchPrediction</tt>.
newUpdateBatchPrediction :: Text -> Text -> UpdateBatchPrediction

-- | The ID assigned to the <tt>BatchPrediction</tt> during creation.
updateBatchPrediction_batchPredictionId :: Lens' UpdateBatchPrediction Text

-- | A new user-supplied name or description of the
--   <tt>BatchPrediction</tt>.
updateBatchPrediction_batchPredictionName :: Lens' UpdateBatchPrediction Text

-- | Represents the output of an <tt>UpdateBatchPrediction</tt> operation.
--   
--   You can see the updated content by using the
--   <tt>GetBatchPrediction</tt> operation.
--   
--   <i>See:</i> <a>newUpdateBatchPredictionResponse</a> smart constructor.
data UpdateBatchPredictionResponse
UpdateBatchPredictionResponse' :: Maybe Text -> Int -> UpdateBatchPredictionResponse

-- | The ID assigned to the <tt>BatchPrediction</tt> during creation. This
--   value should be identical to the value of the
--   <tt>BatchPredictionId</tt> in the request.
[$sel:batchPredictionId:UpdateBatchPredictionResponse'] :: UpdateBatchPredictionResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:UpdateBatchPredictionResponse'] :: UpdateBatchPredictionResponse -> Int

-- | Create a value of <a>UpdateBatchPredictionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:batchPredictionId:UpdateBatchPrediction'</a>,
--   <a>updateBatchPredictionResponse_batchPredictionId</a> - The ID
--   assigned to the <tt>BatchPrediction</tt> during creation. This value
--   should be identical to the value of the <tt>BatchPredictionId</tt> in
--   the request.
--   
--   <a>$sel:httpStatus:UpdateBatchPredictionResponse'</a>,
--   <a>updateBatchPredictionResponse_httpStatus</a> - The response's http
--   status code.
newUpdateBatchPredictionResponse :: Int -> UpdateBatchPredictionResponse

-- | The ID assigned to the <tt>BatchPrediction</tt> during creation. This
--   value should be identical to the value of the
--   <tt>BatchPredictionId</tt> in the request.
updateBatchPredictionResponse_batchPredictionId :: Lens' UpdateBatchPredictionResponse (Maybe Text)

-- | The response's http status code.
updateBatchPredictionResponse_httpStatus :: Lens' UpdateBatchPredictionResponse Int
instance GHC.Generics.Generic Network.AWS.MachineLearning.UpdateBatchPrediction.UpdateBatchPrediction
instance GHC.Show.Show Network.AWS.MachineLearning.UpdateBatchPrediction.UpdateBatchPrediction
instance GHC.Read.Read Network.AWS.MachineLearning.UpdateBatchPrediction.UpdateBatchPrediction
instance GHC.Classes.Eq Network.AWS.MachineLearning.UpdateBatchPrediction.UpdateBatchPrediction
instance GHC.Generics.Generic Network.AWS.MachineLearning.UpdateBatchPrediction.UpdateBatchPredictionResponse
instance GHC.Show.Show Network.AWS.MachineLearning.UpdateBatchPrediction.UpdateBatchPredictionResponse
instance GHC.Read.Read Network.AWS.MachineLearning.UpdateBatchPrediction.UpdateBatchPredictionResponse
instance GHC.Classes.Eq Network.AWS.MachineLearning.UpdateBatchPrediction.UpdateBatchPredictionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.MachineLearning.UpdateBatchPrediction.UpdateBatchPrediction
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.UpdateBatchPrediction.UpdateBatchPredictionResponse
instance Data.Hashable.Class.Hashable Network.AWS.MachineLearning.UpdateBatchPrediction.UpdateBatchPrediction
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.UpdateBatchPrediction.UpdateBatchPrediction
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.MachineLearning.UpdateBatchPrediction.UpdateBatchPrediction
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MachineLearning.UpdateBatchPrediction.UpdateBatchPrediction
instance Network.AWS.Data.Path.ToPath Network.AWS.MachineLearning.UpdateBatchPrediction.UpdateBatchPrediction
instance Network.AWS.Data.Query.ToQuery Network.AWS.MachineLearning.UpdateBatchPrediction.UpdateBatchPrediction


-- | Updates the <tt>DataSourceName</tt> of a <tt>DataSource</tt>.
--   
--   You can use the <tt>GetDataSource</tt> operation to view the contents
--   of the updated data element.
module Network.AWS.MachineLearning.UpdateDataSource

-- | <i>See:</i> <a>newUpdateDataSource</a> smart constructor.
data UpdateDataSource
UpdateDataSource' :: Text -> Text -> UpdateDataSource

-- | The ID assigned to the <tt>DataSource</tt> during creation.
[$sel:dataSourceId:UpdateDataSource'] :: UpdateDataSource -> Text

-- | A new user-supplied name or description of the <tt>DataSource</tt>
--   that will replace the current description.
[$sel:dataSourceName:UpdateDataSource'] :: UpdateDataSource -> Text

-- | Create a value of <a>UpdateDataSource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataSourceId:UpdateDataSource'</a>,
--   <a>updateDataSource_dataSourceId</a> - The ID assigned to the
--   <tt>DataSource</tt> during creation.
--   
--   <a>$sel:dataSourceName:UpdateDataSource'</a>,
--   <a>updateDataSource_dataSourceName</a> - A new user-supplied name or
--   description of the <tt>DataSource</tt> that will replace the current
--   description.
newUpdateDataSource :: Text -> Text -> UpdateDataSource

-- | The ID assigned to the <tt>DataSource</tt> during creation.
updateDataSource_dataSourceId :: Lens' UpdateDataSource Text

-- | A new user-supplied name or description of the <tt>DataSource</tt>
--   that will replace the current description.
updateDataSource_dataSourceName :: Lens' UpdateDataSource Text

-- | Represents the output of an <tt>UpdateDataSource</tt> operation.
--   
--   You can see the updated content by using the
--   <tt>GetBatchPrediction</tt> operation.
--   
--   <i>See:</i> <a>newUpdateDataSourceResponse</a> smart constructor.
data UpdateDataSourceResponse
UpdateDataSourceResponse' :: Maybe Text -> Int -> UpdateDataSourceResponse

-- | The ID assigned to the <tt>DataSource</tt> during creation. This value
--   should be identical to the value of the <tt>DataSourceID</tt> in the
--   request.
[$sel:dataSourceId:UpdateDataSourceResponse'] :: UpdateDataSourceResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:UpdateDataSourceResponse'] :: UpdateDataSourceResponse -> Int

-- | Create a value of <a>UpdateDataSourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataSourceId:UpdateDataSource'</a>,
--   <a>updateDataSourceResponse_dataSourceId</a> - The ID assigned to the
--   <tt>DataSource</tt> during creation. This value should be identical to
--   the value of the <tt>DataSourceID</tt> in the request.
--   
--   <a>$sel:httpStatus:UpdateDataSourceResponse'</a>,
--   <a>updateDataSourceResponse_httpStatus</a> - The response's http
--   status code.
newUpdateDataSourceResponse :: Int -> UpdateDataSourceResponse

-- | The ID assigned to the <tt>DataSource</tt> during creation. This value
--   should be identical to the value of the <tt>DataSourceID</tt> in the
--   request.
updateDataSourceResponse_dataSourceId :: Lens' UpdateDataSourceResponse (Maybe Text)

-- | The response's http status code.
updateDataSourceResponse_httpStatus :: Lens' UpdateDataSourceResponse Int
instance GHC.Generics.Generic Network.AWS.MachineLearning.UpdateDataSource.UpdateDataSource
instance GHC.Show.Show Network.AWS.MachineLearning.UpdateDataSource.UpdateDataSource
instance GHC.Read.Read Network.AWS.MachineLearning.UpdateDataSource.UpdateDataSource
instance GHC.Classes.Eq Network.AWS.MachineLearning.UpdateDataSource.UpdateDataSource
instance GHC.Generics.Generic Network.AWS.MachineLearning.UpdateDataSource.UpdateDataSourceResponse
instance GHC.Show.Show Network.AWS.MachineLearning.UpdateDataSource.UpdateDataSourceResponse
instance GHC.Read.Read Network.AWS.MachineLearning.UpdateDataSource.UpdateDataSourceResponse
instance GHC.Classes.Eq Network.AWS.MachineLearning.UpdateDataSource.UpdateDataSourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.MachineLearning.UpdateDataSource.UpdateDataSource
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.UpdateDataSource.UpdateDataSourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.MachineLearning.UpdateDataSource.UpdateDataSource
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.UpdateDataSource.UpdateDataSource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.MachineLearning.UpdateDataSource.UpdateDataSource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MachineLearning.UpdateDataSource.UpdateDataSource
instance Network.AWS.Data.Path.ToPath Network.AWS.MachineLearning.UpdateDataSource.UpdateDataSource
instance Network.AWS.Data.Query.ToQuery Network.AWS.MachineLearning.UpdateDataSource.UpdateDataSource


-- | Updates the <tt>EvaluationName</tt> of an <tt>Evaluation</tt>.
--   
--   You can use the <tt>GetEvaluation</tt> operation to view the contents
--   of the updated data element.
module Network.AWS.MachineLearning.UpdateEvaluation

-- | <i>See:</i> <a>newUpdateEvaluation</a> smart constructor.
data UpdateEvaluation
UpdateEvaluation' :: Text -> Text -> UpdateEvaluation

-- | The ID assigned to the <tt>Evaluation</tt> during creation.
[$sel:evaluationId:UpdateEvaluation'] :: UpdateEvaluation -> Text

-- | A new user-supplied name or description of the <tt>Evaluation</tt>
--   that will replace the current content.
[$sel:evaluationName:UpdateEvaluation'] :: UpdateEvaluation -> Text

-- | Create a value of <a>UpdateEvaluation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:evaluationId:UpdateEvaluation'</a>,
--   <a>updateEvaluation_evaluationId</a> - The ID assigned to the
--   <tt>Evaluation</tt> during creation.
--   
--   <a>$sel:evaluationName:UpdateEvaluation'</a>,
--   <a>updateEvaluation_evaluationName</a> - A new user-supplied name or
--   description of the <tt>Evaluation</tt> that will replace the current
--   content.
newUpdateEvaluation :: Text -> Text -> UpdateEvaluation

-- | The ID assigned to the <tt>Evaluation</tt> during creation.
updateEvaluation_evaluationId :: Lens' UpdateEvaluation Text

-- | A new user-supplied name or description of the <tt>Evaluation</tt>
--   that will replace the current content.
updateEvaluation_evaluationName :: Lens' UpdateEvaluation Text

-- | Represents the output of an <tt>UpdateEvaluation</tt> operation.
--   
--   You can see the updated content by using the <tt>GetEvaluation</tt>
--   operation.
--   
--   <i>See:</i> <a>newUpdateEvaluationResponse</a> smart constructor.
data UpdateEvaluationResponse
UpdateEvaluationResponse' :: Maybe Text -> Int -> UpdateEvaluationResponse

-- | The ID assigned to the <tt>Evaluation</tt> during creation. This value
--   should be identical to the value of the <tt>Evaluation</tt> in the
--   request.
[$sel:evaluationId:UpdateEvaluationResponse'] :: UpdateEvaluationResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:UpdateEvaluationResponse'] :: UpdateEvaluationResponse -> Int

-- | Create a value of <a>UpdateEvaluationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:evaluationId:UpdateEvaluation'</a>,
--   <a>updateEvaluationResponse_evaluationId</a> - The ID assigned to the
--   <tt>Evaluation</tt> during creation. This value should be identical to
--   the value of the <tt>Evaluation</tt> in the request.
--   
--   <a>$sel:httpStatus:UpdateEvaluationResponse'</a>,
--   <a>updateEvaluationResponse_httpStatus</a> - The response's http
--   status code.
newUpdateEvaluationResponse :: Int -> UpdateEvaluationResponse

-- | The ID assigned to the <tt>Evaluation</tt> during creation. This value
--   should be identical to the value of the <tt>Evaluation</tt> in the
--   request.
updateEvaluationResponse_evaluationId :: Lens' UpdateEvaluationResponse (Maybe Text)

-- | The response's http status code.
updateEvaluationResponse_httpStatus :: Lens' UpdateEvaluationResponse Int
instance GHC.Generics.Generic Network.AWS.MachineLearning.UpdateEvaluation.UpdateEvaluation
instance GHC.Show.Show Network.AWS.MachineLearning.UpdateEvaluation.UpdateEvaluation
instance GHC.Read.Read Network.AWS.MachineLearning.UpdateEvaluation.UpdateEvaluation
instance GHC.Classes.Eq Network.AWS.MachineLearning.UpdateEvaluation.UpdateEvaluation
instance GHC.Generics.Generic Network.AWS.MachineLearning.UpdateEvaluation.UpdateEvaluationResponse
instance GHC.Show.Show Network.AWS.MachineLearning.UpdateEvaluation.UpdateEvaluationResponse
instance GHC.Read.Read Network.AWS.MachineLearning.UpdateEvaluation.UpdateEvaluationResponse
instance GHC.Classes.Eq Network.AWS.MachineLearning.UpdateEvaluation.UpdateEvaluationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.MachineLearning.UpdateEvaluation.UpdateEvaluation
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.UpdateEvaluation.UpdateEvaluationResponse
instance Data.Hashable.Class.Hashable Network.AWS.MachineLearning.UpdateEvaluation.UpdateEvaluation
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.UpdateEvaluation.UpdateEvaluation
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.MachineLearning.UpdateEvaluation.UpdateEvaluation
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MachineLearning.UpdateEvaluation.UpdateEvaluation
instance Network.AWS.Data.Path.ToPath Network.AWS.MachineLearning.UpdateEvaluation.UpdateEvaluation
instance Network.AWS.Data.Query.ToQuery Network.AWS.MachineLearning.UpdateEvaluation.UpdateEvaluation


-- | Updates the <tt>MLModelName</tt> and the <tt>ScoreThreshold</tt> of an
--   <tt>MLModel</tt>.
--   
--   You can use the <tt>GetMLModel</tt> operation to view the contents of
--   the updated data element.
module Network.AWS.MachineLearning.UpdateMLModel

-- | <i>See:</i> <a>newUpdateMLModel</a> smart constructor.
data UpdateMLModel
UpdateMLModel' :: Maybe Double -> Maybe Text -> Text -> UpdateMLModel

-- | The <tt>ScoreThreshold</tt> used in binary classification
--   <tt>MLModel</tt> that marks the boundary between a positive prediction
--   and a negative prediction.
--   
--   Output values greater than or equal to the <tt>ScoreThreshold</tt>
--   receive a positive result from the <tt>MLModel</tt>, such as
--   <tt>true</tt>. Output values less than the <tt>ScoreThreshold</tt>
--   receive a negative response from the <tt>MLModel</tt>, such as
--   <tt>false</tt>.
[$sel:scoreThreshold:UpdateMLModel'] :: UpdateMLModel -> Maybe Double

-- | A user-supplied name or description of the <tt>MLModel</tt>.
[$sel:mLModelName:UpdateMLModel'] :: UpdateMLModel -> Maybe Text

-- | The ID assigned to the <tt>MLModel</tt> during creation.
[$sel:mLModelId:UpdateMLModel'] :: UpdateMLModel -> Text

-- | Create a value of <a>UpdateMLModel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:scoreThreshold:UpdateMLModel'</a>,
--   <a>updateMLModel_scoreThreshold</a> - The <tt>ScoreThreshold</tt> used
--   in binary classification <tt>MLModel</tt> that marks the boundary
--   between a positive prediction and a negative prediction.
--   
--   Output values greater than or equal to the <tt>ScoreThreshold</tt>
--   receive a positive result from the <tt>MLModel</tt>, such as
--   <tt>true</tt>. Output values less than the <tt>ScoreThreshold</tt>
--   receive a negative response from the <tt>MLModel</tt>, such as
--   <tt>false</tt>.
--   
--   <a>$sel:mLModelName:UpdateMLModel'</a>,
--   <a>updateMLModel_mLModelName</a> - A user-supplied name or description
--   of the <tt>MLModel</tt>.
--   
--   <a>$sel:mLModelId:UpdateMLModel'</a>, <a>updateMLModel_mLModelId</a> -
--   The ID assigned to the <tt>MLModel</tt> during creation.
newUpdateMLModel :: Text -> UpdateMLModel

-- | The <tt>ScoreThreshold</tt> used in binary classification
--   <tt>MLModel</tt> that marks the boundary between a positive prediction
--   and a negative prediction.
--   
--   Output values greater than or equal to the <tt>ScoreThreshold</tt>
--   receive a positive result from the <tt>MLModel</tt>, such as
--   <tt>true</tt>. Output values less than the <tt>ScoreThreshold</tt>
--   receive a negative response from the <tt>MLModel</tt>, such as
--   <tt>false</tt>.
updateMLModel_scoreThreshold :: Lens' UpdateMLModel (Maybe Double)

-- | A user-supplied name or description of the <tt>MLModel</tt>.
updateMLModel_mLModelName :: Lens' UpdateMLModel (Maybe Text)

-- | The ID assigned to the <tt>MLModel</tt> during creation.
updateMLModel_mLModelId :: Lens' UpdateMLModel Text

-- | Represents the output of an <tt>UpdateMLModel</tt> operation.
--   
--   You can see the updated content by using the <tt>GetMLModel</tt>
--   operation.
--   
--   <i>See:</i> <a>newUpdateMLModelResponse</a> smart constructor.
data UpdateMLModelResponse
UpdateMLModelResponse' :: Maybe Text -> Int -> UpdateMLModelResponse

-- | The ID assigned to the <tt>MLModel</tt> during creation. This value
--   should be identical to the value of the <tt>MLModelID</tt> in the
--   request.
[$sel:mLModelId:UpdateMLModelResponse'] :: UpdateMLModelResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:UpdateMLModelResponse'] :: UpdateMLModelResponse -> Int

-- | Create a value of <a>UpdateMLModelResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mLModelId:UpdateMLModel'</a>,
--   <a>updateMLModelResponse_mLModelId</a> - The ID assigned to the
--   <tt>MLModel</tt> during creation. This value should be identical to
--   the value of the <tt>MLModelID</tt> in the request.
--   
--   <a>$sel:httpStatus:UpdateMLModelResponse'</a>,
--   <a>updateMLModelResponse_httpStatus</a> - The response's http status
--   code.
newUpdateMLModelResponse :: Int -> UpdateMLModelResponse

-- | The ID assigned to the <tt>MLModel</tt> during creation. This value
--   should be identical to the value of the <tt>MLModelID</tt> in the
--   request.
updateMLModelResponse_mLModelId :: Lens' UpdateMLModelResponse (Maybe Text)

-- | The response's http status code.
updateMLModelResponse_httpStatus :: Lens' UpdateMLModelResponse Int
instance GHC.Generics.Generic Network.AWS.MachineLearning.UpdateMLModel.UpdateMLModel
instance GHC.Show.Show Network.AWS.MachineLearning.UpdateMLModel.UpdateMLModel
instance GHC.Read.Read Network.AWS.MachineLearning.UpdateMLModel.UpdateMLModel
instance GHC.Classes.Eq Network.AWS.MachineLearning.UpdateMLModel.UpdateMLModel
instance GHC.Generics.Generic Network.AWS.MachineLearning.UpdateMLModel.UpdateMLModelResponse
instance GHC.Show.Show Network.AWS.MachineLearning.UpdateMLModel.UpdateMLModelResponse
instance GHC.Read.Read Network.AWS.MachineLearning.UpdateMLModel.UpdateMLModelResponse
instance GHC.Classes.Eq Network.AWS.MachineLearning.UpdateMLModel.UpdateMLModelResponse
instance Network.AWS.Types.AWSRequest Network.AWS.MachineLearning.UpdateMLModel.UpdateMLModel
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.UpdateMLModel.UpdateMLModelResponse
instance Data.Hashable.Class.Hashable Network.AWS.MachineLearning.UpdateMLModel.UpdateMLModel
instance Control.DeepSeq.NFData Network.AWS.MachineLearning.UpdateMLModel.UpdateMLModel
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.MachineLearning.UpdateMLModel.UpdateMLModel
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MachineLearning.UpdateMLModel.UpdateMLModel
instance Network.AWS.Data.Path.ToPath Network.AWS.MachineLearning.UpdateMLModel.UpdateMLModel
instance Network.AWS.Data.Query.ToQuery Network.AWS.MachineLearning.UpdateMLModel.UpdateMLModel


module Network.AWS.MachineLearning.Lens

-- | The <tt>ScoreThreshold</tt> used in binary classification
--   <tt>MLModel</tt> that marks the boundary between a positive prediction
--   and a negative prediction.
--   
--   Output values greater than or equal to the <tt>ScoreThreshold</tt>
--   receive a positive result from the <tt>MLModel</tt>, such as
--   <tt>true</tt>. Output values less than the <tt>ScoreThreshold</tt>
--   receive a negative response from the <tt>MLModel</tt>, such as
--   <tt>false</tt>.
updateMLModel_scoreThreshold :: Lens' UpdateMLModel (Maybe Double)

-- | A user-supplied name or description of the <tt>MLModel</tt>.
updateMLModel_mLModelName :: Lens' UpdateMLModel (Maybe Text)

-- | The ID assigned to the <tt>MLModel</tt> during creation.
updateMLModel_mLModelId :: Lens' UpdateMLModel Text

-- | The ID assigned to the <tt>MLModel</tt> during creation. This value
--   should be identical to the value of the <tt>MLModelID</tt> in the
--   request.
updateMLModelResponse_mLModelId :: Lens' UpdateMLModelResponse (Maybe Text)

-- | The response's http status code.
updateMLModelResponse_httpStatus :: Lens' UpdateMLModelResponse Int

-- | The compute statistics for a <tt>DataSource</tt>. The statistics are
--   generated from the observation data referenced by a
--   <tt>DataSource</tt>. Amazon ML uses the statistics internally during
--   <tt>MLModel</tt> training. This parameter must be set to <tt>true</tt>
--   if the @<tt>DataSource</tt><tt> needs to be used for </tt>MLModel@
--   training.
createDataSourceFromS_computeStatistics :: Lens' CreateDataSourceFromS (Maybe Bool)

-- | A user-supplied name or description of the <tt>DataSource</tt>.
createDataSourceFromS_dataSourceName :: Lens' CreateDataSourceFromS (Maybe Text)

-- | A user-supplied identifier that uniquely identifies the
--   <tt>DataSource</tt>.
createDataSourceFromS_dataSourceId :: Lens' CreateDataSourceFromS Text

-- | The data specification of a <tt>DataSource</tt>:
--   
--   <ul>
--   <li>DataLocationS3 - The Amazon S3 location of the observation
--   data.</li>
--   <li>DataSchemaLocationS3 - The Amazon S3 location of the
--   <tt>DataSchema</tt>.</li>
--   <li>DataSchema - A JSON string representing the schema. This is not
--   required if <tt>DataSchemaUri</tt> is specified.</li>
--   <li>DataRearrangement - A JSON string that represents the splitting
--   and rearrangement requirements for the <tt>Datasource</tt>.Sample -
--   <tt>
--   "{\"splitting\":{\"percentBegin\":10,\"percentEnd\":60}}"</tt></li>
--   </ul>
createDataSourceFromS_dataSpec :: Lens' CreateDataSourceFromS S3DataSpec

-- | A user-supplied ID that uniquely identifies the <tt>DataSource</tt>.
--   This value should be identical to the value of the
--   <tt>DataSourceID</tt> in the request.
createDataSourceFromSResponse_dataSourceId :: Lens' CreateDataSourceFromSResponse (Maybe Text)

-- | The response's http status code.
createDataSourceFromSResponse_httpStatus :: Lens' CreateDataSourceFromSResponse Int

-- | A user-supplied ID that uniquely identifies the <tt>MLModel</tt>.
deleteMLModel_mLModelId :: Lens' DeleteMLModel Text

-- | A user-supplied ID that uniquely identifies the <tt>MLModel</tt>. This
--   value should be identical to the value of the <tt>MLModelID</tt> in
--   the request.
deleteMLModelResponse_mLModelId :: Lens' DeleteMLModelResponse (Maybe Text)

-- | The response's http status code.
deleteMLModelResponse_httpStatus :: Lens' DeleteMLModelResponse Int

-- | The ID assigned to the <tt>DataSource</tt> during creation.
updateDataSource_dataSourceId :: Lens' UpdateDataSource Text

-- | A new user-supplied name or description of the <tt>DataSource</tt>
--   that will replace the current description.
updateDataSource_dataSourceName :: Lens' UpdateDataSource Text

-- | The ID assigned to the <tt>DataSource</tt> during creation. This value
--   should be identical to the value of the <tt>DataSourceID</tt> in the
--   request.
updateDataSourceResponse_dataSourceId :: Lens' UpdateDataSourceResponse (Maybe Text)

-- | The response's http status code.
updateDataSourceResponse_httpStatus :: Lens' UpdateDataSourceResponse Int

-- | The compute statistics for a <tt>DataSource</tt>. The statistics are
--   generated from the observation data referenced by a
--   <tt>DataSource</tt>. Amazon ML uses the statistics internally during
--   <tt>MLModel</tt> training. This parameter must be set to <tt>true</tt>
--   if the <tt>DataSource</tt> needs to be used for <tt>MLModel</tt>
--   training.
createDataSourceFromRedshift_computeStatistics :: Lens' CreateDataSourceFromRedshift (Maybe Bool)

-- | A user-supplied name or description of the <tt>DataSource</tt>.
createDataSourceFromRedshift_dataSourceName :: Lens' CreateDataSourceFromRedshift (Maybe Text)

-- | A user-supplied ID that uniquely identifies the <tt>DataSource</tt>.
createDataSourceFromRedshift_dataSourceId :: Lens' CreateDataSourceFromRedshift Text

-- | The data specification of an Amazon Redshift <tt>DataSource</tt>:
--   
--   <ul>
--   <li>DatabaseInformation -<ul><li><tt>DatabaseName</tt> - The name of
--   the Amazon Redshift database.</li><li><tt> ClusterIdentifier</tt> -
--   The unique ID for the Amazon Redshift cluster.</li></ul></li>
--   <li>DatabaseCredentials - The AWS Identity and Access Management (IAM)
--   credentials that are used to connect to the Amazon Redshift
--   database.</li>
--   <li>SelectSqlQuery - The query that is used to retrieve the
--   observation data for the <tt>Datasource</tt>.</li>
--   <li>S3StagingLocation - The Amazon Simple Storage Service (Amazon S3)
--   location for staging Amazon Redshift data. The data retrieved from
--   Amazon Redshift using the <tt>SelectSqlQuery</tt> query is stored in
--   this location.</li>
--   <li>DataSchemaUri - The Amazon S3 location of the
--   <tt>DataSchema</tt>.</li>
--   <li>DataSchema - A JSON string representing the schema. This is not
--   required if <tt>DataSchemaUri</tt> is specified.</li>
--   <li>DataRearrangement - A JSON string that represents the splitting
--   and rearrangement requirements for the <tt>DataSource</tt>.Sample -
--   <tt>
--   "{\"splitting\":{\"percentBegin\":10,\"percentEnd\":60}}"</tt></li>
--   </ul>
createDataSourceFromRedshift_dataSpec :: Lens' CreateDataSourceFromRedshift RedshiftDataSpec

-- | A fully specified role Amazon Resource Name (ARN). Amazon ML assumes
--   the role on behalf of the user to create the following:
--   
--   <ul>
--   <li>A security group to allow Amazon ML to execute the
--   <tt>SelectSqlQuery</tt> query on an Amazon Redshift cluster</li>
--   <li>An Amazon S3 bucket policy to grant Amazon ML read/write
--   permissions on the <tt>S3StagingLocation</tt></li>
--   </ul>
createDataSourceFromRedshift_roleARN :: Lens' CreateDataSourceFromRedshift Text

-- | A user-supplied ID that uniquely identifies the datasource. This value
--   should be identical to the value of the <tt>DataSourceID</tt> in the
--   request.
createDataSourceFromRedshiftResponse_dataSourceId :: Lens' CreateDataSourceFromRedshiftResponse (Maybe Text)

-- | The response's http status code.
createDataSourceFromRedshiftResponse_httpStatus :: Lens' CreateDataSourceFromRedshiftResponse Int

-- | The ID of the ML object. For example, <tt>exampleModelId</tt>.
describeTags_resourceId :: Lens' DescribeTags Text

-- | The type of the ML object.
describeTags_resourceType :: Lens' DescribeTags TaggableResourceType

-- | The ID of the tagged ML object.
describeTagsResponse_resourceId :: Lens' DescribeTagsResponse (Maybe Text)

-- | The type of the tagged ML object.
describeTagsResponse_resourceType :: Lens' DescribeTagsResponse (Maybe TaggableResourceType)

-- | A list of tags associated with the ML object.
describeTagsResponse_tags :: Lens' DescribeTagsResponse (Maybe [Tag])

-- | The response's http status code.
describeTagsResponse_httpStatus :: Lens' DescribeTagsResponse Int

-- | A user-supplied ID that uniquely identifies the <tt>DataSource</tt>.
deleteDataSource_dataSourceId :: Lens' DeleteDataSource Text

-- | A user-supplied ID that uniquely identifies the <tt>DataSource</tt>.
--   This value should be identical to the value of the
--   <tt>DataSourceID</tt> in the request.
deleteDataSourceResponse_dataSourceId :: Lens' DeleteDataSourceResponse (Maybe Text)

-- | The response's http status code.
deleteDataSourceResponse_httpStatus :: Lens' DeleteDataSourceResponse Int

-- | The equal to operator. The <tt>DataSource</tt> results will have
--   <tt>FilterVariable</tt> values that exactly match the value specified
--   with <tt>EQ</tt>.
describeDataSources_eq :: Lens' DescribeDataSources (Maybe Text)

-- | The ID of the page in the paginated results.
describeDataSources_nextToken :: Lens' DescribeDataSources (Maybe Text)

-- | A two-value parameter that determines the sequence of the resulting
--   list of <tt>DataSource</tt>.
--   
--   <ul>
--   <li><tt>asc</tt> - Arranges the list in ascending order (A-Z,
--   0-9).</li>
--   <li><tt>dsc</tt> - Arranges the list in descending order (Z-A,
--   9-0).</li>
--   </ul>
--   
--   Results are sorted by <tt>FilterVariable</tt>.
describeDataSources_sortOrder :: Lens' DescribeDataSources (Maybe SortOrder)

-- | Use one of the following variables to filter a list of
--   <tt>DataSource</tt>:
--   
--   <ul>
--   <li><tt>CreatedAt</tt> - Sets the search criteria to
--   <tt>DataSource</tt> creation dates.</li>
--   <li><tt>Status</tt> - Sets the search criteria to <tt>DataSource</tt>
--   statuses.</li>
--   <li><tt>Name</tt> - Sets the search criteria to the contents of
--   <tt>DataSource</tt> <tt>Name</tt>.</li>
--   <li><tt>DataUri</tt> - Sets the search criteria to the URI of data
--   files used to create the <tt>DataSource</tt>. The URI can identify
--   either a file or an Amazon Simple Storage Service (Amazon S3) bucket
--   or directory.</li>
--   <li><tt>IAMUser</tt> - Sets the search criteria to the user account
--   that invoked the <tt>DataSource</tt> creation.</li>
--   </ul>
describeDataSources_filterVariable :: Lens' DescribeDataSources (Maybe DataSourceFilterVariable)

-- | The greater than operator. The <tt>DataSource</tt> results will have
--   <tt>FilterVariable</tt> values that are greater than the value
--   specified with <tt>GT</tt>.
describeDataSources_gt :: Lens' DescribeDataSources (Maybe Text)

-- | The not equal to operator. The <tt>DataSource</tt> results will have
--   <tt>FilterVariable</tt> values not equal to the value specified with
--   <tt>NE</tt>.
describeDataSources_ne :: Lens' DescribeDataSources (Maybe Text)

-- | A string that is found at the beginning of a variable, such as
--   <tt>Name</tt> or <tt>Id</tt>.
--   
--   For example, a <tt>DataSource</tt> could have the <tt>Name</tt>
--   <tt>2014-09-09-HolidayGiftMailer</tt>. To search for this
--   <tt>DataSource</tt>, select <tt>Name</tt> for the
--   <tt>FilterVariable</tt> and any of the following strings for the
--   <tt>Prefix</tt>:
--   
--   <ul>
--   <li>2014-09</li>
--   <li>2014-09-09</li>
--   <li>2014-09-09-Holiday</li>
--   </ul>
describeDataSources_prefix :: Lens' DescribeDataSources (Maybe Text)

-- | The greater than or equal to operator. The <tt>DataSource</tt> results
--   will have <tt>FilterVariable</tt> values that are greater than or
--   equal to the value specified with <tt>GE</tt>.
describeDataSources_ge :: Lens' DescribeDataSources (Maybe Text)

-- | The less than or equal to operator. The <tt>DataSource</tt> results
--   will have <tt>FilterVariable</tt> values that are less than or equal
--   to the value specified with <tt>LE</tt>.
describeDataSources_le :: Lens' DescribeDataSources (Maybe Text)

-- | The less than operator. The <tt>DataSource</tt> results will have
--   <tt>FilterVariable</tt> values that are less than the value specified
--   with <tt>LT</tt>.
describeDataSources_lt :: Lens' DescribeDataSources (Maybe Text)

-- | The maximum number of <tt>DataSource</tt> to include in the result.
describeDataSources_limit :: Lens' DescribeDataSources (Maybe Natural)

-- | An ID of the next page in the paginated results that indicates at
--   least one more page follows.
describeDataSourcesResponse_nextToken :: Lens' DescribeDataSourcesResponse (Maybe Text)

-- | A list of <tt>DataSource</tt> that meet the search criteria.
describeDataSourcesResponse_results :: Lens' DescribeDataSourcesResponse (Maybe [DataSource])

-- | The response's http status code.
describeDataSourcesResponse_httpStatus :: Lens' DescribeDataSourcesResponse Int

-- | One or more tags to delete.
deleteTags_tagKeys :: Lens' DeleteTags [Text]

-- | The ID of the tagged ML object. For example, <tt>exampleModelId</tt>.
deleteTags_resourceId :: Lens' DeleteTags Text

-- | The type of the tagged ML object.
deleteTags_resourceType :: Lens' DeleteTags TaggableResourceType

-- | The ID of the ML object from which tags were deleted.
deleteTagsResponse_resourceId :: Lens' DeleteTagsResponse (Maybe Text)

-- | The type of the ML object from which tags were deleted.
deleteTagsResponse_resourceType :: Lens' DeleteTagsResponse (Maybe TaggableResourceType)

-- | The response's http status code.
deleteTagsResponse_httpStatus :: Lens' DeleteTagsResponse Int

-- | The equal to operator. The <tt>Evaluation</tt> results will have
--   <tt>FilterVariable</tt> values that exactly match the value specified
--   with <tt>EQ</tt>.
describeEvaluations_eq :: Lens' DescribeEvaluations (Maybe Text)

-- | The ID of the page in the paginated results.
describeEvaluations_nextToken :: Lens' DescribeEvaluations (Maybe Text)

-- | A two-value parameter that determines the sequence of the resulting
--   list of <tt>Evaluation</tt>.
--   
--   <ul>
--   <li><tt>asc</tt> - Arranges the list in ascending order (A-Z,
--   0-9).</li>
--   <li><tt>dsc</tt> - Arranges the list in descending order (Z-A,
--   9-0).</li>
--   </ul>
--   
--   Results are sorted by <tt>FilterVariable</tt>.
describeEvaluations_sortOrder :: Lens' DescribeEvaluations (Maybe SortOrder)

-- | Use one of the following variable to filter a list of
--   <tt>Evaluation</tt> objects:
--   
--   <ul>
--   <li><tt>CreatedAt</tt> - Sets the search criteria to the
--   <tt>Evaluation</tt> creation date.</li>
--   <li><tt>Status</tt> - Sets the search criteria to the
--   <tt>Evaluation</tt> status.</li>
--   <li><tt>Name</tt> - Sets the search criteria to the contents of
--   <tt>Evaluation</tt> ____ <tt>Name</tt>.</li>
--   <li><tt>IAMUser</tt> - Sets the search criteria to the user account
--   that invoked an <tt>Evaluation</tt>.</li>
--   <li><tt>MLModelId</tt> - Sets the search criteria to the
--   <tt>MLModel</tt> that was evaluated.</li>
--   <li><tt>DataSourceId</tt> - Sets the search criteria to the
--   <tt>DataSource</tt> used in <tt>Evaluation</tt>.</li>
--   <li><tt>DataUri</tt> - Sets the search criteria to the data file(s)
--   used in <tt>Evaluation</tt>. The URL can identify either a file or an
--   Amazon Simple Storage Solution (Amazon S3) bucket or directory.</li>
--   </ul>
describeEvaluations_filterVariable :: Lens' DescribeEvaluations (Maybe EvaluationFilterVariable)

-- | The greater than operator. The <tt>Evaluation</tt> results will have
--   <tt>FilterVariable</tt> values that are greater than the value
--   specified with <tt>GT</tt>.
describeEvaluations_gt :: Lens' DescribeEvaluations (Maybe Text)

-- | The not equal to operator. The <tt>Evaluation</tt> results will have
--   <tt>FilterVariable</tt> values not equal to the value specified with
--   <tt>NE</tt>.
describeEvaluations_ne :: Lens' DescribeEvaluations (Maybe Text)

-- | A string that is found at the beginning of a variable, such as
--   <tt>Name</tt> or <tt>Id</tt>.
--   
--   For example, an <tt>Evaluation</tt> could have the <tt>Name</tt>
--   <tt>2014-09-09-HolidayGiftMailer</tt>. To search for this
--   <tt>Evaluation</tt>, select <tt>Name</tt> for the
--   <tt>FilterVariable</tt> and any of the following strings for the
--   <tt>Prefix</tt>:
--   
--   <ul>
--   <li>2014-09</li>
--   <li>2014-09-09</li>
--   <li>2014-09-09-Holiday</li>
--   </ul>
describeEvaluations_prefix :: Lens' DescribeEvaluations (Maybe Text)

-- | The greater than or equal to operator. The <tt>Evaluation</tt> results
--   will have <tt>FilterVariable</tt> values that are greater than or
--   equal to the value specified with <tt>GE</tt>.
describeEvaluations_ge :: Lens' DescribeEvaluations (Maybe Text)

-- | The less than or equal to operator. The <tt>Evaluation</tt> results
--   will have <tt>FilterVariable</tt> values that are less than or equal
--   to the value specified with <tt>LE</tt>.
describeEvaluations_le :: Lens' DescribeEvaluations (Maybe Text)

-- | The less than operator. The <tt>Evaluation</tt> results will have
--   <tt>FilterVariable</tt> values that are less than the value specified
--   with <tt>LT</tt>.
describeEvaluations_lt :: Lens' DescribeEvaluations (Maybe Text)

-- | The maximum number of <tt>Evaluation</tt> to include in the result.
describeEvaluations_limit :: Lens' DescribeEvaluations (Maybe Natural)

-- | The ID of the next page in the paginated results that indicates at
--   least one more page follows.
describeEvaluationsResponse_nextToken :: Lens' DescribeEvaluationsResponse (Maybe Text)

-- | A list of <tt>Evaluation</tt> that meet the search criteria.
describeEvaluationsResponse_results :: Lens' DescribeEvaluationsResponse (Maybe [Evaluation])

-- | The response's http status code.
describeEvaluationsResponse_httpStatus :: Lens' DescribeEvaluationsResponse Int

-- | Specifies whether the <tt>GetMLModel</tt> operation should return
--   <tt>Recipe</tt>.
--   
--   If true, <tt>Recipe</tt> is returned.
--   
--   If false, <tt>Recipe</tt> is not returned.
getMLModel_verbose :: Lens' GetMLModel (Maybe Bool)

-- | The ID assigned to the <tt>MLModel</tt> at creation.
getMLModel_mLModelId :: Lens' GetMLModel Text

-- | The current status of the <tt>MLModel</tt>. This element can have one
--   of the following values:
--   
--   <ul>
--   <li><tt>PENDING</tt> - Amazon Machine Learning (Amazon ML) submitted a
--   request to describe a <tt>MLModel</tt>.</li>
--   <li><tt>INPROGRESS</tt> - The request is processing.</li>
--   <li><tt>FAILED</tt> - The request did not run to completion. The ML
--   model isn't usable.</li>
--   <li><tt>COMPLETED</tt> - The request completed successfully.</li>
--   <li><tt>DELETED</tt> - The <tt>MLModel</tt> is marked as deleted. It
--   isn't usable.</li>
--   </ul>
getMLModelResponse_status :: Lens' GetMLModelResponse (Maybe EntityStatus)

-- | The epoch time when Amazon Machine Learning marked the
--   <tt>MLModel</tt> as <tt>INPROGRESS</tt>. <tt>StartedAt</tt> isn't
--   available if the <tt>MLModel</tt> is in the <tt>PENDING</tt> state.
getMLModelResponse_startedAt :: Lens' GetMLModelResponse (Maybe UTCTime)

-- | The schema used by all of the data files referenced by the
--   <tt>DataSource</tt>.
--   
--   <b>Note:</b> This parameter is provided as part of the verbose format.
getMLModelResponse_schema :: Lens' GetMLModelResponse (Maybe Text)

-- | A description of the most recent details about accessing the
--   <tt>MLModel</tt>.
getMLModelResponse_message :: Lens' GetMLModelResponse (Maybe Text)

-- | The recipe to use when training the <tt>MLModel</tt>. The
--   <tt>Recipe</tt> provides detailed information about the observation
--   data to use during training, and manipulations to perform on the
--   observation data during training.
--   
--   <b>Note:</b> This parameter is provided as part of the verbose format.
getMLModelResponse_recipe :: Lens' GetMLModelResponse (Maybe Text)

-- | The time that the <tt>MLModel</tt> was created. The time is expressed
--   in epoch time.
getMLModelResponse_createdAt :: Lens' GetMLModelResponse (Maybe UTCTime)

-- | The time of the most recent edit to the <tt>ScoreThreshold</tt>. The
--   time is expressed in epoch time.
getMLModelResponse_scoreThresholdLastUpdatedAt :: Lens' GetMLModelResponse (Maybe UTCTime)

-- | The current endpoint of the <tt>MLModel</tt>
getMLModelResponse_endpointInfo :: Lens' GetMLModelResponse (Maybe RealtimeEndpointInfo)

-- | A list of the training parameters in the <tt>MLModel</tt>. The list is
--   implemented as a map of key-value pairs.
--   
--   The following is the current set of training parameters:
--   
--   <ul>
--   <li><tt>sgd.maxMLModelSizeInBytes</tt> - The maximum allowed size of
--   the model. Depending on the input data, the size of the model might
--   affect its performance.The value is an integer that ranges from
--   <tt>100000</tt> to <tt>2147483648</tt>. The default value is
--   <tt>33554432</tt>.</li>
--   <li><tt>sgd.maxPasses</tt> - The number of times that the training
--   process traverses the observations to build the <tt>MLModel</tt>. The
--   value is an integer that ranges from <tt>1</tt> to <tt>10000</tt>. The
--   default value is <tt>10</tt>.</li>
--   <li><tt>sgd.shuffleType</tt> - Whether Amazon ML shuffles the training
--   data. Shuffling data improves a model's ability to find the optimal
--   solution for a variety of data types. The valid values are
--   <tt>auto</tt> and <tt>none</tt>. The default value is <tt>none</tt>.
--   We strongly recommend that you shuffle your data.</li>
--   <li><tt>sgd.l1RegularizationAmount</tt> - The coefficient
--   regularization L1 norm. It controls overfitting the data by penalizing
--   large coefficients. This tends to drive coefficients to zero,
--   resulting in a sparse feature set. If you use this parameter, start by
--   specifying a small value, such as <tt>1.0E-08</tt>.The value is a
--   double that ranges from <tt>0</tt> to <tt>MAX_DOUBLE</tt>. The default
--   is to not use L1 normalization. This parameter can't be used when
--   <tt>L2</tt> is specified. Use this parameter sparingly.</li>
--   <li><tt>sgd.l2RegularizationAmount</tt> - The coefficient
--   regularization L2 norm. It controls overfitting the data by penalizing
--   large coefficients. This tends to drive coefficients to small, nonzero
--   values. If you use this parameter, start by specifying a small value,
--   such as <tt>1.0E-08</tt>.The value is a double that ranges from
--   <tt>0</tt> to <tt>MAX_DOUBLE</tt>. The default is to not use L2
--   normalization. This parameter can't be used when <tt>L1</tt> is
--   specified. Use this parameter sparingly.</li>
--   </ul>
getMLModelResponse_trainingParameters :: Lens' GetMLModelResponse (Maybe (HashMap Text Text))

-- | A user-supplied name or description of the <tt>MLModel</tt>.
getMLModelResponse_name :: Lens' GetMLModelResponse (Maybe Text)

-- | The AWS user account from which the <tt>MLModel</tt> was created. The
--   account type can be either an AWS root account or an AWS Identity and
--   Access Management (IAM) user account.
getMLModelResponse_createdByIamUser :: Lens' GetMLModelResponse (Maybe Text)

-- | The epoch time when Amazon Machine Learning marked the
--   <tt>MLModel</tt> as <tt>COMPLETED</tt> or <tt>FAILED</tt>.
--   <tt>FinishedAt</tt> is only available when the <tt>MLModel</tt> is in
--   the <tt>COMPLETED</tt> or <tt>FAILED</tt> state.
getMLModelResponse_finishedAt :: Lens' GetMLModelResponse (Maybe UTCTime)

-- | The scoring threshold is used in binary classification
--   <tt>MLModel</tt> models. It marks the boundary between a positive
--   prediction and a negative prediction.
--   
--   Output values greater than or equal to the threshold receive a
--   positive result from the MLModel, such as <tt>true</tt>. Output values
--   less than the threshold receive a negative response from the MLModel,
--   such as <tt>false</tt>.
getMLModelResponse_scoreThreshold :: Lens' GetMLModelResponse (Maybe Double)

-- | Identifies the <tt>MLModel</tt> category. The following are the
--   available types:
--   
--   <ul>
--   <li>REGRESSION -- Produces a numeric result. For example, "What price
--   should a house be listed at?"</li>
--   <li>BINARY -- Produces one of two possible results. For example, "Is
--   this an e-commerce website?"</li>
--   <li>MULTICLASS -- Produces one of several possible results. For
--   example, "Is this a HIGH, LOW or MEDIUM risk trade?"</li>
--   </ul>
getMLModelResponse_mLModelType :: Lens' GetMLModelResponse (Maybe MLModelType)

-- | Undocumented member.
getMLModelResponse_sizeInBytes :: Lens' GetMLModelResponse (Maybe Integer)

-- | The MLModel ID, which is same as the <tt>MLModelId</tt> in the
--   request.
getMLModelResponse_mLModelId :: Lens' GetMLModelResponse (Maybe Text)

-- | The location of the data file or directory in Amazon Simple Storage
--   Service (Amazon S3).
getMLModelResponse_inputDataLocationS3 :: Lens' GetMLModelResponse (Maybe Text)

-- | The approximate CPU time in milliseconds that Amazon Machine Learning
--   spent processing the <tt>MLModel</tt>, normalized and scaled on
--   computation resources. <tt>ComputeTime</tt> is only available if the
--   <tt>MLModel</tt> is in the <tt>COMPLETED</tt> state.
getMLModelResponse_computeTime :: Lens' GetMLModelResponse (Maybe Integer)

-- | The ID of the training <tt>DataSource</tt>.
getMLModelResponse_trainingDataSourceId :: Lens' GetMLModelResponse (Maybe Text)

-- | The time of the most recent edit to the <tt>MLModel</tt>. The time is
--   expressed in epoch time.
getMLModelResponse_lastUpdatedAt :: Lens' GetMLModelResponse (Maybe UTCTime)

-- | A link to the file that contains logs of the <tt>CreateMLModel</tt>
--   operation.
getMLModelResponse_logUri :: Lens' GetMLModelResponse (Maybe Text)

-- | The response's http status code.
getMLModelResponse_httpStatus :: Lens' GetMLModelResponse Int

-- | The ID of the <tt>Evaluation</tt> to retrieve. The evaluation of each
--   <tt>MLModel</tt> is recorded and cataloged. The ID provides the means
--   to access the information.
getEvaluation_evaluationId :: Lens' GetEvaluation Text

-- | Measurements of how well the <tt>MLModel</tt> performed using
--   observations referenced by the <tt>DataSource</tt>. One of the
--   following metric is returned based on the type of the
--   <tt>MLModel</tt>:
--   
--   <ul>
--   <li>BinaryAUC: A binary <tt>MLModel</tt> uses the Area Under the Curve
--   (AUC) technique to measure performance.</li>
--   <li>RegressionRMSE: A regression <tt>MLModel</tt> uses the Root Mean
--   Square Error (RMSE) technique to measure performance. RMSE measures
--   the difference between predicted and actual values for a single
--   variable.</li>
--   <li>MulticlassAvgFScore: A multiclass <tt>MLModel</tt> uses the F1
--   score technique to measure performance.</li>
--   </ul>
--   
--   For more information about performance metrics, please see the
--   <a>Amazon Machine Learning Developer Guide</a>.
getEvaluationResponse_performanceMetrics :: Lens' GetEvaluationResponse (Maybe PerformanceMetrics)

-- | The status of the evaluation. This element can have one of the
--   following values:
--   
--   <ul>
--   <li><tt>PENDING</tt> - Amazon Machine Language (Amazon ML) submitted a
--   request to evaluate an <tt>MLModel</tt>.</li>
--   <li><tt>INPROGRESS</tt> - The evaluation is underway.</li>
--   <li><tt>FAILED</tt> - The request to evaluate an <tt>MLModel</tt> did
--   not run to completion. It is not usable.</li>
--   <li><tt>COMPLETED</tt> - The evaluation process completed
--   successfully.</li>
--   <li><tt>DELETED</tt> - The <tt>Evaluation</tt> is marked as deleted.
--   It is not usable.</li>
--   </ul>
getEvaluationResponse_status :: Lens' GetEvaluationResponse (Maybe EntityStatus)

-- | The epoch time when Amazon Machine Learning marked the
--   <tt>Evaluation</tt> as <tt>INPROGRESS</tt>. <tt>StartedAt</tt> isn't
--   available if the <tt>Evaluation</tt> is in the <tt>PENDING</tt> state.
getEvaluationResponse_startedAt :: Lens' GetEvaluationResponse (Maybe UTCTime)

-- | The <tt>DataSource</tt> used for this evaluation.
getEvaluationResponse_evaluationDataSourceId :: Lens' GetEvaluationResponse (Maybe Text)

-- | A description of the most recent details about evaluating the
--   <tt>MLModel</tt>.
getEvaluationResponse_message :: Lens' GetEvaluationResponse (Maybe Text)

-- | The time that the <tt>Evaluation</tt> was created. The time is
--   expressed in epoch time.
getEvaluationResponse_createdAt :: Lens' GetEvaluationResponse (Maybe UTCTime)

-- | A user-supplied name or description of the <tt>Evaluation</tt>.
getEvaluationResponse_name :: Lens' GetEvaluationResponse (Maybe Text)

-- | The AWS user account that invoked the evaluation. The account type can
--   be either an AWS root account or an AWS Identity and Access Management
--   (IAM) user account.
getEvaluationResponse_createdByIamUser :: Lens' GetEvaluationResponse (Maybe Text)

-- | The epoch time when Amazon Machine Learning marked the
--   <tt>Evaluation</tt> as <tt>COMPLETED</tt> or <tt>FAILED</tt>.
--   <tt>FinishedAt</tt> is only available when the <tt>Evaluation</tt> is
--   in the <tt>COMPLETED</tt> or <tt>FAILED</tt> state.
getEvaluationResponse_finishedAt :: Lens' GetEvaluationResponse (Maybe UTCTime)

-- | The ID of the <tt>MLModel</tt> that was the focus of the evaluation.
getEvaluationResponse_mLModelId :: Lens' GetEvaluationResponse (Maybe Text)

-- | The evaluation ID which is same as the <tt>EvaluationId</tt> in the
--   request.
getEvaluationResponse_evaluationId :: Lens' GetEvaluationResponse (Maybe Text)

-- | The location of the data file or directory in Amazon Simple Storage
--   Service (Amazon S3).
getEvaluationResponse_inputDataLocationS3 :: Lens' GetEvaluationResponse (Maybe Text)

-- | The approximate CPU time in milliseconds that Amazon Machine Learning
--   spent processing the <tt>Evaluation</tt>, normalized and scaled on
--   computation resources. <tt>ComputeTime</tt> is only available if the
--   <tt>Evaluation</tt> is in the <tt>COMPLETED</tt> state.
getEvaluationResponse_computeTime :: Lens' GetEvaluationResponse (Maybe Integer)

-- | The time of the most recent edit to the <tt>Evaluation</tt>. The time
--   is expressed in epoch time.
getEvaluationResponse_lastUpdatedAt :: Lens' GetEvaluationResponse (Maybe UTCTime)

-- | A link to the file that contains logs of the <tt>CreateEvaluation</tt>
--   operation.
getEvaluationResponse_logUri :: Lens' GetEvaluationResponse (Maybe Text)

-- | The response's http status code.
getEvaluationResponse_httpStatus :: Lens' GetEvaluationResponse Int

-- | The key-value pairs to use to create tags. If you specify a key
--   without specifying a value, Amazon ML creates a tag with the specified
--   key and a value of null.
addTags_tags :: Lens' AddTags [Tag]

-- | The ID of the ML object to tag. For example, <tt>exampleModelId</tt>.
addTags_resourceId :: Lens' AddTags Text

-- | The type of the ML object to tag.
addTags_resourceType :: Lens' AddTags TaggableResourceType

-- | The ID of the ML object that was tagged.
addTagsResponse_resourceId :: Lens' AddTagsResponse (Maybe Text)

-- | The type of the ML object that was tagged.
addTagsResponse_resourceType :: Lens' AddTagsResponse (Maybe TaggableResourceType)

-- | The response's http status code.
addTagsResponse_httpStatus :: Lens' AddTagsResponse Int

-- | The ID assigned to the <tt>MLModel</tt> during creation.
deleteRealtimeEndpoint_mLModelId :: Lens' DeleteRealtimeEndpoint Text

-- | The endpoint information of the <tt>MLModel</tt>
deleteRealtimeEndpointResponse_realtimeEndpointInfo :: Lens' DeleteRealtimeEndpointResponse (Maybe RealtimeEndpointInfo)

-- | A user-supplied ID that uniquely identifies the <tt>MLModel</tt>. This
--   value should be identical to the value of the <tt>MLModelId</tt> in
--   the request.
deleteRealtimeEndpointResponse_mLModelId :: Lens' DeleteRealtimeEndpointResponse (Maybe Text)

-- | The response's http status code.
deleteRealtimeEndpointResponse_httpStatus :: Lens' DeleteRealtimeEndpointResponse Int

-- | The compute statistics for a <tt>DataSource</tt>. The statistics are
--   generated from the observation data referenced by a
--   <tt>DataSource</tt>. Amazon ML uses the statistics internally during
--   <tt>MLModel</tt> training. This parameter must be set to <tt>true</tt>
--   if the @<tt>DataSource</tt><tt> needs to be used for </tt>MLModel@
--   training.
createDataSourceFromRDS_computeStatistics :: Lens' CreateDataSourceFromRDS (Maybe Bool)

-- | A user-supplied name or description of the <tt>DataSource</tt>.
createDataSourceFromRDS_dataSourceName :: Lens' CreateDataSourceFromRDS (Maybe Text)

-- | A user-supplied ID that uniquely identifies the <tt>DataSource</tt>.
--   Typically, an Amazon Resource Number (ARN) becomes the ID for a
--   <tt>DataSource</tt>.
createDataSourceFromRDS_dataSourceId :: Lens' CreateDataSourceFromRDS Text

-- | The data specification of an Amazon RDS <tt>DataSource</tt>:
--   
--   <ul>
--   <li>DatabaseInformation -<ul><li><tt>DatabaseName</tt> - The name of
--   the Amazon RDS database.</li><li><tt>InstanceIdentifier </tt> - A
--   unique identifier for the Amazon RDS database instance.</li></ul></li>
--   <li>DatabaseCredentials - AWS Identity and Access Management (IAM)
--   credentials that are used to connect to the Amazon RDS database.</li>
--   <li>ResourceRole - A role (DataPipelineDefaultResourceRole) assumed by
--   an EC2 instance to carry out the copy task from Amazon RDS to Amazon
--   Simple Storage Service (Amazon S3). For more information, see <a>Role
--   templates</a> for data pipelines.</li>
--   <li>ServiceRole - A role (DataPipelineDefaultRole) assumed by the AWS
--   Data Pipeline service to monitor the progress of the copy task from
--   Amazon RDS to Amazon S3. For more information, see <a>Role
--   templates</a> for data pipelines.</li>
--   <li>SecurityInfo - The security information to use to access an RDS DB
--   instance. You need to set up appropriate ingress rules for the
--   security entity IDs provided to allow access to the Amazon RDS
--   instance. Specify a [<tt>SubnetId</tt>, <tt>SecurityGroupIds</tt>]
--   pair for a VPC-based RDS DB instance.</li>
--   <li>SelectSqlQuery - A query that is used to retrieve the observation
--   data for the <tt>Datasource</tt>.</li>
--   <li>S3StagingLocation - The Amazon S3 location for staging Amazon RDS
--   data. The data retrieved from Amazon RDS using <tt>SelectSqlQuery</tt>
--   is stored in this location.</li>
--   <li>DataSchemaUri - The Amazon S3 location of the
--   <tt>DataSchema</tt>.</li>
--   <li>DataSchema - A JSON string representing the schema. This is not
--   required if <tt>DataSchemaUri</tt> is specified.</li>
--   <li>DataRearrangement - A JSON string that represents the splitting
--   and rearrangement requirements for the <tt>Datasource</tt>.Sample -
--   <tt>
--   "{\"splitting\":{\"percentBegin\":10,\"percentEnd\":60}}"</tt></li>
--   </ul>
createDataSourceFromRDS_rDSData :: Lens' CreateDataSourceFromRDS RDSDataSpec

-- | The role that Amazon ML assumes on behalf of the user to create and
--   activate a data pipeline in the user's account and copy data using the
--   <tt>SelectSqlQuery</tt> query from Amazon RDS to Amazon S3.
createDataSourceFromRDS_roleARN :: Lens' CreateDataSourceFromRDS Text

-- | A user-supplied ID that uniquely identifies the datasource. This value
--   should be identical to the value of the <tt>DataSourceID</tt> in the
--   request.
createDataSourceFromRDSResponse_dataSourceId :: Lens' CreateDataSourceFromRDSResponse (Maybe Text)

-- | The response's http status code.
createDataSourceFromRDSResponse_httpStatus :: Lens' CreateDataSourceFromRDSResponse Int

-- | The equal to operator. The <tt>BatchPrediction</tt> results will have
--   <tt>FilterVariable</tt> values that exactly match the value specified
--   with <tt>EQ</tt>.
describeBatchPredictions_eq :: Lens' DescribeBatchPredictions (Maybe Text)

-- | An ID of the page in the paginated results.
describeBatchPredictions_nextToken :: Lens' DescribeBatchPredictions (Maybe Text)

-- | A two-value parameter that determines the sequence of the resulting
--   list of <tt>MLModel</tt>s.
--   
--   <ul>
--   <li><tt>asc</tt> - Arranges the list in ascending order (A-Z,
--   0-9).</li>
--   <li><tt>dsc</tt> - Arranges the list in descending order (Z-A,
--   9-0).</li>
--   </ul>
--   
--   Results are sorted by <tt>FilterVariable</tt>.
describeBatchPredictions_sortOrder :: Lens' DescribeBatchPredictions (Maybe SortOrder)

-- | Use one of the following variables to filter a list of
--   <tt>BatchPrediction</tt>:
--   
--   <ul>
--   <li><tt>CreatedAt</tt> - Sets the search criteria to the
--   <tt>BatchPrediction</tt> creation date.</li>
--   <li><tt>Status</tt> - Sets the search criteria to the
--   <tt>BatchPrediction</tt> status.</li>
--   <li><tt>Name</tt> - Sets the search criteria to the contents of the
--   <tt>BatchPrediction</tt> ____ <tt>Name</tt>.</li>
--   <li><tt>IAMUser</tt> - Sets the search criteria to the user account
--   that invoked the <tt>BatchPrediction</tt> creation.</li>
--   <li><tt>MLModelId</tt> - Sets the search criteria to the
--   <tt>MLModel</tt> used in the <tt>BatchPrediction</tt>.</li>
--   <li><tt>DataSourceId</tt> - Sets the search criteria to the
--   <tt>DataSource</tt> used in the <tt>BatchPrediction</tt>.</li>
--   <li><tt>DataURI</tt> - Sets the search criteria to the data file(s)
--   used in the <tt>BatchPrediction</tt>. The URL can identify either a
--   file or an Amazon Simple Storage Solution (Amazon S3) bucket or
--   directory.</li>
--   </ul>
describeBatchPredictions_filterVariable :: Lens' DescribeBatchPredictions (Maybe BatchPredictionFilterVariable)

-- | The greater than operator. The <tt>BatchPrediction</tt> results will
--   have <tt>FilterVariable</tt> values that are greater than the value
--   specified with <tt>GT</tt>.
describeBatchPredictions_gt :: Lens' DescribeBatchPredictions (Maybe Text)

-- | The not equal to operator. The <tt>BatchPrediction</tt> results will
--   have <tt>FilterVariable</tt> values not equal to the value specified
--   with <tt>NE</tt>.
describeBatchPredictions_ne :: Lens' DescribeBatchPredictions (Maybe Text)

-- | A string that is found at the beginning of a variable, such as
--   <tt>Name</tt> or <tt>Id</tt>.
--   
--   For example, a <tt>Batch Prediction</tt> operation could have the
--   <tt>Name</tt> <tt>2014-09-09-HolidayGiftMailer</tt>. To search for
--   this <tt>BatchPrediction</tt>, select <tt>Name</tt> for the
--   <tt>FilterVariable</tt> and any of the following strings for the
--   <tt>Prefix</tt>:
--   
--   <ul>
--   <li>2014-09</li>
--   <li>2014-09-09</li>
--   <li>2014-09-09-Holiday</li>
--   </ul>
describeBatchPredictions_prefix :: Lens' DescribeBatchPredictions (Maybe Text)

-- | The greater than or equal to operator. The <tt>BatchPrediction</tt>
--   results will have <tt>FilterVariable</tt> values that are greater than
--   or equal to the value specified with <tt>GE</tt>.
describeBatchPredictions_ge :: Lens' DescribeBatchPredictions (Maybe Text)

-- | The less than or equal to operator. The <tt>BatchPrediction</tt>
--   results will have <tt>FilterVariable</tt> values that are less than or
--   equal to the value specified with <tt>LE</tt>.
describeBatchPredictions_le :: Lens' DescribeBatchPredictions (Maybe Text)

-- | The less than operator. The <tt>BatchPrediction</tt> results will have
--   <tt>FilterVariable</tt> values that are less than the value specified
--   with <tt>LT</tt>.
describeBatchPredictions_lt :: Lens' DescribeBatchPredictions (Maybe Text)

-- | The number of pages of information to include in the result. The range
--   of acceptable values is <tt>1</tt> through <tt>100</tt>. The default
--   value is <tt>100</tt>.
describeBatchPredictions_limit :: Lens' DescribeBatchPredictions (Maybe Natural)

-- | The ID of the next page in the paginated results that indicates at
--   least one more page follows.
describeBatchPredictionsResponse_nextToken :: Lens' DescribeBatchPredictionsResponse (Maybe Text)

-- | A list of <tt>BatchPrediction</tt> objects that meet the search
--   criteria.
describeBatchPredictionsResponse_results :: Lens' DescribeBatchPredictionsResponse (Maybe [BatchPrediction])

-- | The response's http status code.
describeBatchPredictionsResponse_httpStatus :: Lens' DescribeBatchPredictionsResponse Int

-- | A user-supplied ID that uniquely identifies the <tt>Evaluation</tt> to
--   delete.
deleteEvaluation_evaluationId :: Lens' DeleteEvaluation Text

-- | A user-supplied ID that uniquely identifies the <tt>Evaluation</tt>.
--   This value should be identical to the value of the
--   <tt>EvaluationId</tt> in the request.
deleteEvaluationResponse_evaluationId :: Lens' DeleteEvaluationResponse (Maybe Text)

-- | The response's http status code.
deleteEvaluationResponse_httpStatus :: Lens' DeleteEvaluationResponse Int

-- | The ID assigned to the <tt>Evaluation</tt> during creation.
updateEvaluation_evaluationId :: Lens' UpdateEvaluation Text

-- | A new user-supplied name or description of the <tt>Evaluation</tt>
--   that will replace the current content.
updateEvaluation_evaluationName :: Lens' UpdateEvaluation Text

-- | The ID assigned to the <tt>Evaluation</tt> during creation. This value
--   should be identical to the value of the <tt>Evaluation</tt> in the
--   request.
updateEvaluationResponse_evaluationId :: Lens' UpdateEvaluationResponse (Maybe Text)

-- | The response's http status code.
updateEvaluationResponse_httpStatus :: Lens' UpdateEvaluationResponse Int

-- | An ID assigned to the <tt>BatchPrediction</tt> at creation.
getBatchPrediction_batchPredictionId :: Lens' GetBatchPrediction Text

-- | The status of the <tt>BatchPrediction</tt>, which can be one of the
--   following values:
--   
--   <ul>
--   <li><tt>PENDING</tt> - Amazon Machine Learning (Amazon ML) submitted a
--   request to generate batch predictions.</li>
--   <li><tt>INPROGRESS</tt> - The batch predictions are in progress.</li>
--   <li><tt>FAILED</tt> - The request to perform a batch prediction did
--   not run to completion. It is not usable.</li>
--   <li><tt>COMPLETED</tt> - The batch prediction process completed
--   successfully.</li>
--   <li><tt>DELETED</tt> - The <tt>BatchPrediction</tt> is marked as
--   deleted. It is not usable.</li>
--   </ul>
getBatchPredictionResponse_status :: Lens' GetBatchPredictionResponse (Maybe EntityStatus)

-- | An ID assigned to the <tt>BatchPrediction</tt> at creation. This value
--   should be identical to the value of the <tt>BatchPredictionID</tt> in
--   the request.
getBatchPredictionResponse_batchPredictionId :: Lens' GetBatchPredictionResponse (Maybe Text)

-- | The epoch time when Amazon Machine Learning marked the
--   <tt>BatchPrediction</tt> as <tt>INPROGRESS</tt>. <tt>StartedAt</tt>
--   isn't available if the <tt>BatchPrediction</tt> is in the
--   <tt>PENDING</tt> state.
getBatchPredictionResponse_startedAt :: Lens' GetBatchPredictionResponse (Maybe UTCTime)

-- | The location of an Amazon S3 bucket or directory to receive the
--   operation results.
getBatchPredictionResponse_outputUri :: Lens' GetBatchPredictionResponse (Maybe Text)

-- | A description of the most recent details about processing the batch
--   prediction request.
getBatchPredictionResponse_message :: Lens' GetBatchPredictionResponse (Maybe Text)

-- | The time when the <tt>BatchPrediction</tt> was created. The time is
--   expressed in epoch time.
getBatchPredictionResponse_createdAt :: Lens' GetBatchPredictionResponse (Maybe UTCTime)

-- | A user-supplied name or description of the <tt>BatchPrediction</tt>.
getBatchPredictionResponse_name :: Lens' GetBatchPredictionResponse (Maybe Text)

-- | The AWS user account that invoked the <tt>BatchPrediction</tt>. The
--   account type can be either an AWS root account or an AWS Identity and
--   Access Management (IAM) user account.
getBatchPredictionResponse_createdByIamUser :: Lens' GetBatchPredictionResponse (Maybe Text)

-- | The epoch time when Amazon Machine Learning marked the
--   <tt>BatchPrediction</tt> as <tt>COMPLETED</tt> or <tt>FAILED</tt>.
--   <tt>FinishedAt</tt> is only available when the
--   <tt>BatchPrediction</tt> is in the <tt>COMPLETED</tt> or
--   <tt>FAILED</tt> state.
getBatchPredictionResponse_finishedAt :: Lens' GetBatchPredictionResponse (Maybe UTCTime)

-- | The number of invalid records that Amazon Machine Learning saw while
--   processing the <tt>BatchPrediction</tt>.
getBatchPredictionResponse_invalidRecordCount :: Lens' GetBatchPredictionResponse (Maybe Integer)

-- | The number of total records that Amazon Machine Learning saw while
--   processing the <tt>BatchPrediction</tt>.
getBatchPredictionResponse_totalRecordCount :: Lens' GetBatchPredictionResponse (Maybe Integer)

-- | The ID of the <tt>DataSource</tt> that was used to create the
--   <tt>BatchPrediction</tt>.
getBatchPredictionResponse_batchPredictionDataSourceId :: Lens' GetBatchPredictionResponse (Maybe Text)

-- | The ID of the <tt>MLModel</tt> that generated predictions for the
--   <tt>BatchPrediction</tt> request.
getBatchPredictionResponse_mLModelId :: Lens' GetBatchPredictionResponse (Maybe Text)

-- | The location of the data file or directory in Amazon Simple Storage
--   Service (Amazon S3).
getBatchPredictionResponse_inputDataLocationS3 :: Lens' GetBatchPredictionResponse (Maybe Text)

-- | The approximate CPU time in milliseconds that Amazon Machine Learning
--   spent processing the <tt>BatchPrediction</tt>, normalized and scaled
--   on computation resources. <tt>ComputeTime</tt> is only available if
--   the <tt>BatchPrediction</tt> is in the <tt>COMPLETED</tt> state.
getBatchPredictionResponse_computeTime :: Lens' GetBatchPredictionResponse (Maybe Integer)

-- | The time of the most recent edit to <tt>BatchPrediction</tt>. The time
--   is expressed in epoch time.
getBatchPredictionResponse_lastUpdatedAt :: Lens' GetBatchPredictionResponse (Maybe UTCTime)

-- | A link to the file that contains logs of the
--   <tt>CreateBatchPrediction</tt> operation.
getBatchPredictionResponse_logUri :: Lens' GetBatchPredictionResponse (Maybe Text)

-- | The response's http status code.
getBatchPredictionResponse_httpStatus :: Lens' GetBatchPredictionResponse Int

-- | Specifies whether the <tt>GetDataSource</tt> operation should return
--   <tt>DataSourceSchema</tt>.
--   
--   If true, <tt>DataSourceSchema</tt> is returned.
--   
--   If false, <tt>DataSourceSchema</tt> is not returned.
getDataSource_verbose :: Lens' GetDataSource (Maybe Bool)

-- | The ID assigned to the <tt>DataSource</tt> at creation.
getDataSource_dataSourceId :: Lens' GetDataSource Text

-- | The current status of the <tt>DataSource</tt>. This element can have
--   one of the following values:
--   
--   <ul>
--   <li><tt>PENDING</tt> - Amazon ML submitted a request to create a
--   <tt>DataSource</tt>.</li>
--   <li><tt>INPROGRESS</tt> - The creation process is underway.</li>
--   <li><tt>FAILED</tt> - The request to create a <tt>DataSource</tt> did
--   not run to completion. It is not usable.</li>
--   <li><tt>COMPLETED</tt> - The creation process completed
--   successfully.</li>
--   <li><tt>DELETED</tt> - The <tt>DataSource</tt> is marked as deleted.
--   It is not usable.</li>
--   </ul>
getDataSourceResponse_status :: Lens' GetDataSourceResponse (Maybe EntityStatus)

-- | The epoch time when Amazon Machine Learning marked the
--   <tt>DataSource</tt> as <tt>INPROGRESS</tt>. <tt>StartedAt</tt> isn't
--   available if the <tt>DataSource</tt> is in the <tt>PENDING</tt> state.
getDataSourceResponse_startedAt :: Lens' GetDataSourceResponse (Maybe UTCTime)

-- | Undocumented member.
getDataSourceResponse_roleARN :: Lens' GetDataSourceResponse (Maybe Text)

-- | A JSON string that represents the splitting and rearrangement
--   requirement used when this <tt>DataSource</tt> was created.
getDataSourceResponse_dataRearrangement :: Lens' GetDataSourceResponse (Maybe Text)

-- | Undocumented member.
getDataSourceResponse_redshiftMetadata :: Lens' GetDataSourceResponse (Maybe RedshiftMetadata)

-- | The user-supplied description of the most recent details about
--   creating the <tt>DataSource</tt>.
getDataSourceResponse_message :: Lens' GetDataSourceResponse (Maybe Text)

-- | The ID assigned to the <tt>DataSource</tt> at creation. This value
--   should be identical to the value of the <tt>DataSourceId</tt> in the
--   request.
getDataSourceResponse_dataSourceId :: Lens' GetDataSourceResponse (Maybe Text)

-- | The parameter is <tt>true</tt> if statistics need to be generated from
--   the observation data.
getDataSourceResponse_computeStatistics :: Lens' GetDataSourceResponse (Maybe Bool)

-- | The time that the <tt>DataSource</tt> was created. The time is
--   expressed in epoch time.
getDataSourceResponse_createdAt :: Lens' GetDataSourceResponse (Maybe UTCTime)

-- | The location of the data file or directory in Amazon Simple Storage
--   Service (Amazon S3).
getDataSourceResponse_dataLocationS3 :: Lens' GetDataSourceResponse (Maybe Text)

-- | A user-supplied name or description of the <tt>DataSource</tt>.
getDataSourceResponse_name :: Lens' GetDataSourceResponse (Maybe Text)

-- | The number of data files referenced by the <tt>DataSource</tt>.
getDataSourceResponse_numberOfFiles :: Lens' GetDataSourceResponse (Maybe Integer)

-- | The AWS user account from which the <tt>DataSource</tt> was created.
--   The account type can be either an AWS root account or an AWS Identity
--   and Access Management (IAM) user account.
getDataSourceResponse_createdByIamUser :: Lens' GetDataSourceResponse (Maybe Text)

-- | The epoch time when Amazon Machine Learning marked the
--   <tt>DataSource</tt> as <tt>COMPLETED</tt> or <tt>FAILED</tt>.
--   <tt>FinishedAt</tt> is only available when the <tt>DataSource</tt> is
--   in the <tt>COMPLETED</tt> or <tt>FAILED</tt> state.
getDataSourceResponse_finishedAt :: Lens' GetDataSourceResponse (Maybe UTCTime)

-- | The schema used by all of the data files of this <tt>DataSource</tt>.
--   
--   <b>Note:</b> This parameter is provided as part of the verbose format.
getDataSourceResponse_dataSourceSchema :: Lens' GetDataSourceResponse (Maybe Text)

-- | The total size of observations in the data files.
getDataSourceResponse_dataSizeInBytes :: Lens' GetDataSourceResponse (Maybe Integer)

-- | The approximate CPU time in milliseconds that Amazon Machine Learning
--   spent processing the <tt>DataSource</tt>, normalized and scaled on
--   computation resources. <tt>ComputeTime</tt> is only available if the
--   <tt>DataSource</tt> is in the <tt>COMPLETED</tt> state and the
--   <tt>ComputeStatistics</tt> is set to true.
getDataSourceResponse_computeTime :: Lens' GetDataSourceResponse (Maybe Integer)

-- | Undocumented member.
getDataSourceResponse_rDSMetadata :: Lens' GetDataSourceResponse (Maybe RDSMetadata)

-- | The time of the most recent edit to the <tt>DataSource</tt>. The time
--   is expressed in epoch time.
getDataSourceResponse_lastUpdatedAt :: Lens' GetDataSourceResponse (Maybe UTCTime)

-- | A link to the file containing logs of <tt>CreateDataSourceFrom*</tt>
--   operations.
getDataSourceResponse_logUri :: Lens' GetDataSourceResponse (Maybe Text)

-- | The response's http status code.
getDataSourceResponse_httpStatus :: Lens' GetDataSourceResponse Int

-- | A user-supplied ID that uniquely identifies the
--   <tt>BatchPrediction</tt>.
deleteBatchPrediction_batchPredictionId :: Lens' DeleteBatchPrediction Text

-- | A user-supplied ID that uniquely identifies the
--   <tt>BatchPrediction</tt>. This value should be identical to the value
--   of the <tt>BatchPredictionID</tt> in the request.
deleteBatchPredictionResponse_batchPredictionId :: Lens' DeleteBatchPredictionResponse (Maybe Text)

-- | The response's http status code.
deleteBatchPredictionResponse_httpStatus :: Lens' DeleteBatchPredictionResponse Int

-- | The ID assigned to the <tt>MLModel</tt> during creation.
createRealtimeEndpoint_mLModelId :: Lens' CreateRealtimeEndpoint Text

-- | The endpoint information of the <tt>MLModel</tt>
createRealtimeEndpointResponse_realtimeEndpointInfo :: Lens' CreateRealtimeEndpointResponse (Maybe RealtimeEndpointInfo)

-- | A user-supplied ID that uniquely identifies the <tt>MLModel</tt>. This
--   value should be identical to the value of the <tt>MLModelId</tt> in
--   the request.
createRealtimeEndpointResponse_mLModelId :: Lens' CreateRealtimeEndpointResponse (Maybe Text)

-- | The response's http status code.
createRealtimeEndpointResponse_httpStatus :: Lens' CreateRealtimeEndpointResponse Int

-- | The ID assigned to the <tt>BatchPrediction</tt> during creation.
updateBatchPrediction_batchPredictionId :: Lens' UpdateBatchPrediction Text

-- | A new user-supplied name or description of the
--   <tt>BatchPrediction</tt>.
updateBatchPrediction_batchPredictionName :: Lens' UpdateBatchPrediction Text

-- | The ID assigned to the <tt>BatchPrediction</tt> during creation. This
--   value should be identical to the value of the
--   <tt>BatchPredictionId</tt> in the request.
updateBatchPredictionResponse_batchPredictionId :: Lens' UpdateBatchPredictionResponse (Maybe Text)

-- | The response's http status code.
updateBatchPredictionResponse_httpStatus :: Lens' UpdateBatchPredictionResponse Int

-- | The equal to operator. The <tt>MLModel</tt> results will have
--   <tt>FilterVariable</tt> values that exactly match the value specified
--   with <tt>EQ</tt>.
describeMLModels_eq :: Lens' DescribeMLModels (Maybe Text)

-- | The ID of the page in the paginated results.
describeMLModels_nextToken :: Lens' DescribeMLModels (Maybe Text)

-- | A two-value parameter that determines the sequence of the resulting
--   list of <tt>MLModel</tt>.
--   
--   <ul>
--   <li><tt>asc</tt> - Arranges the list in ascending order (A-Z,
--   0-9).</li>
--   <li><tt>dsc</tt> - Arranges the list in descending order (Z-A,
--   9-0).</li>
--   </ul>
--   
--   Results are sorted by <tt>FilterVariable</tt>.
describeMLModels_sortOrder :: Lens' DescribeMLModels (Maybe SortOrder)

-- | Use one of the following variables to filter a list of
--   <tt>MLModel</tt>:
--   
--   <ul>
--   <li><tt>CreatedAt</tt> - Sets the search criteria to <tt>MLModel</tt>
--   creation date.</li>
--   <li><tt>Status</tt> - Sets the search criteria to <tt>MLModel</tt>
--   status.</li>
--   <li><tt>Name</tt> - Sets the search criteria to the contents of
--   <tt>MLModel</tt> ____ <tt>Name</tt>.</li>
--   <li><tt>IAMUser</tt> - Sets the search criteria to the user account
--   that invoked the <tt>MLModel</tt> creation.</li>
--   <li><tt>TrainingDataSourceId</tt> - Sets the search criteria to the
--   <tt>DataSource</tt> used to train one or more <tt>MLModel</tt>.</li>
--   <li><tt>RealtimeEndpointStatus</tt> - Sets the search criteria to the
--   <tt>MLModel</tt> real-time endpoint status.</li>
--   <li><tt>MLModelType</tt> - Sets the search criteria to
--   <tt>MLModel</tt> type: binary, regression, or multi-class.</li>
--   <li><tt>Algorithm</tt> - Sets the search criteria to the algorithm
--   that the <tt>MLModel</tt> uses.</li>
--   <li><tt>TrainingDataURI</tt> - Sets the search criteria to the data
--   file(s) used in training a <tt>MLModel</tt>. The URL can identify
--   either a file or an Amazon Simple Storage Service (Amazon S3) bucket
--   or directory.</li>
--   </ul>
describeMLModels_filterVariable :: Lens' DescribeMLModels (Maybe MLModelFilterVariable)

-- | The greater than operator. The <tt>MLModel</tt> results will have
--   <tt>FilterVariable</tt> values that are greater than the value
--   specified with <tt>GT</tt>.
describeMLModels_gt :: Lens' DescribeMLModels (Maybe Text)

-- | The not equal to operator. The <tt>MLModel</tt> results will have
--   <tt>FilterVariable</tt> values not equal to the value specified with
--   <tt>NE</tt>.
describeMLModels_ne :: Lens' DescribeMLModels (Maybe Text)

-- | A string that is found at the beginning of a variable, such as
--   <tt>Name</tt> or <tt>Id</tt>.
--   
--   For example, an <tt>MLModel</tt> could have the <tt>Name</tt>
--   <tt>2014-09-09-HolidayGiftMailer</tt>. To search for this
--   <tt>MLModel</tt>, select <tt>Name</tt> for the <tt>FilterVariable</tt>
--   and any of the following strings for the <tt>Prefix</tt>:
--   
--   <ul>
--   <li>2014-09</li>
--   <li>2014-09-09</li>
--   <li>2014-09-09-Holiday</li>
--   </ul>
describeMLModels_prefix :: Lens' DescribeMLModels (Maybe Text)

-- | The greater than or equal to operator. The <tt>MLModel</tt> results
--   will have <tt>FilterVariable</tt> values that are greater than or
--   equal to the value specified with <tt>GE</tt>.
describeMLModels_ge :: Lens' DescribeMLModels (Maybe Text)

-- | The less than or equal to operator. The <tt>MLModel</tt> results will
--   have <tt>FilterVariable</tt> values that are less than or equal to the
--   value specified with <tt>LE</tt>.
describeMLModels_le :: Lens' DescribeMLModels (Maybe Text)

-- | The less than operator. The <tt>MLModel</tt> results will have
--   <tt>FilterVariable</tt> values that are less than the value specified
--   with <tt>LT</tt>.
describeMLModels_lt :: Lens' DescribeMLModels (Maybe Text)

-- | The number of pages of information to include in the result. The range
--   of acceptable values is <tt>1</tt> through <tt>100</tt>. The default
--   value is <tt>100</tt>.
describeMLModels_limit :: Lens' DescribeMLModels (Maybe Natural)

-- | The ID of the next page in the paginated results that indicates at
--   least one more page follows.
describeMLModelsResponse_nextToken :: Lens' DescribeMLModelsResponse (Maybe Text)

-- | A list of <tt>MLModel</tt> that meet the search criteria.
describeMLModelsResponse_results :: Lens' DescribeMLModelsResponse (Maybe [MLModel])

-- | The response's http status code.
describeMLModelsResponse_httpStatus :: Lens' DescribeMLModelsResponse Int

-- | A unique identifier of the <tt>MLModel</tt>.
predict_mLModelId :: Lens' Predict Text

-- | Undocumented member.
predict_record :: Lens' Predict (HashMap Text Text)

-- | Undocumented member.
predict_predictEndpoint :: Lens' Predict Text

-- | Undocumented member.
predictResponse_prediction :: Lens' PredictResponse (Maybe Prediction)

-- | The response's http status code.
predictResponse_httpStatus :: Lens' PredictResponse Int

-- | A user-supplied name or description of the <tt>BatchPrediction</tt>.
--   <tt>BatchPredictionName</tt> can only use the UTF-8 character set.
createBatchPrediction_batchPredictionName :: Lens' CreateBatchPrediction (Maybe Text)

-- | A user-supplied ID that uniquely identifies the
--   <tt>BatchPrediction</tt>.
createBatchPrediction_batchPredictionId :: Lens' CreateBatchPrediction Text

-- | The ID of the <tt>MLModel</tt> that will generate predictions for the
--   group of observations.
createBatchPrediction_mLModelId :: Lens' CreateBatchPrediction Text

-- | The ID of the <tt>DataSource</tt> that points to the group of
--   observations to predict.
createBatchPrediction_batchPredictionDataSourceId :: Lens' CreateBatchPrediction Text

-- | The location of an Amazon Simple Storage Service (Amazon S3) bucket or
--   directory to store the batch prediction results. The following
--   substrings are not allowed in the <tt>s3 key</tt> portion of the
--   <tt>outputURI</tt> field: ':', '//', '/./', '/../'.
--   
--   Amazon ML needs permissions to store and retrieve the logs on your
--   behalf. For information about how to set permissions, see the
--   <a>Amazon Machine Learning Developer Guide</a>.
createBatchPrediction_outputUri :: Lens' CreateBatchPrediction Text

-- | A user-supplied ID that uniquely identifies the
--   <tt>BatchPrediction</tt>. This value is identical to the value of the
--   <tt>BatchPredictionId</tt> in the request.
createBatchPredictionResponse_batchPredictionId :: Lens' CreateBatchPredictionResponse (Maybe Text)

-- | The response's http status code.
createBatchPredictionResponse_httpStatus :: Lens' CreateBatchPredictionResponse Int

-- | A user-supplied name or description of the <tt>Evaluation</tt>.
createEvaluation_evaluationName :: Lens' CreateEvaluation (Maybe Text)

-- | A user-supplied ID that uniquely identifies the <tt>Evaluation</tt>.
createEvaluation_evaluationId :: Lens' CreateEvaluation Text

-- | The ID of the <tt>MLModel</tt> to evaluate.
--   
--   The schema used in creating the <tt>MLModel</tt> must match the schema
--   of the <tt>DataSource</tt> used in the <tt>Evaluation</tt>.
createEvaluation_mLModelId :: Lens' CreateEvaluation Text

-- | The ID of the <tt>DataSource</tt> for the evaluation. The schema of
--   the <tt>DataSource</tt> must match the schema used to create the
--   <tt>MLModel</tt>.
createEvaluation_evaluationDataSourceId :: Lens' CreateEvaluation Text

-- | The user-supplied ID that uniquely identifies the <tt>Evaluation</tt>.
--   This value should be identical to the value of the
--   <tt>EvaluationId</tt> in the request.
createEvaluationResponse_evaluationId :: Lens' CreateEvaluationResponse (Maybe Text)

-- | The response's http status code.
createEvaluationResponse_httpStatus :: Lens' CreateEvaluationResponse Int

-- | The Amazon Simple Storage Service (Amazon S3) location and file name
--   that contains the <tt>MLModel</tt> recipe. You must specify either the
--   recipe or its URI. If you don't specify a recipe or its URI, Amazon ML
--   creates a default.
createMLModel_recipeUri :: Lens' CreateMLModel (Maybe Text)

-- | The data recipe for creating the <tt>MLModel</tt>. You must specify
--   either the recipe or its URI. If you don't specify a recipe or its
--   URI, Amazon ML creates a default.
createMLModel_recipe :: Lens' CreateMLModel (Maybe Text)

-- | A user-supplied name or description of the <tt>MLModel</tt>.
createMLModel_mLModelName :: Lens' CreateMLModel (Maybe Text)

-- | A list of the training parameters in the <tt>MLModel</tt>. The list is
--   implemented as a map of key-value pairs.
--   
--   The following is the current set of training parameters:
--   
--   <ul>
--   <li><tt>sgd.maxMLModelSizeInBytes</tt> - The maximum allowed size of
--   the model. Depending on the input data, the size of the model might
--   affect its performance.The value is an integer that ranges from
--   <tt>100000</tt> to <tt>2147483648</tt>. The default value is
--   <tt>33554432</tt>.</li>
--   <li><tt>sgd.maxPasses</tt> - The number of times that the training
--   process traverses the observations to build the <tt>MLModel</tt>. The
--   value is an integer that ranges from <tt>1</tt> to <tt>10000</tt>. The
--   default value is <tt>10</tt>.</li>
--   <li><tt>sgd.shuffleType</tt> - Whether Amazon ML shuffles the training
--   data. Shuffling the data improves a model's ability to find the
--   optimal solution for a variety of data types. The valid values are
--   <tt>auto</tt> and <tt>none</tt>. The default value is <tt>none</tt>.
--   We strongly recommend that you shuffle your data.</li>
--   <li><tt>sgd.l1RegularizationAmount</tt> - The coefficient
--   regularization L1 norm. It controls overfitting the data by penalizing
--   large coefficients. This tends to drive coefficients to zero,
--   resulting in a sparse feature set. If you use this parameter, start by
--   specifying a small value, such as <tt>1.0E-08</tt>.The value is a
--   double that ranges from <tt>0</tt> to <tt>MAX_DOUBLE</tt>. The default
--   is to not use L1 normalization. This parameter can't be used when
--   <tt>L2</tt> is specified. Use this parameter sparingly.</li>
--   <li><tt>sgd.l2RegularizationAmount</tt> - The coefficient
--   regularization L2 norm. It controls overfitting the data by penalizing
--   large coefficients. This tends to drive coefficients to small, nonzero
--   values. If you use this parameter, start by specifying a small value,
--   such as <tt>1.0E-08</tt>.The value is a double that ranges from
--   <tt>0</tt> to <tt>MAX_DOUBLE</tt>. The default is to not use L2
--   normalization. This parameter can't be used when <tt>L1</tt> is
--   specified. Use this parameter sparingly.</li>
--   </ul>
createMLModel_parameters :: Lens' CreateMLModel (Maybe (HashMap Text Text))

-- | A user-supplied ID that uniquely identifies the <tt>MLModel</tt>.
createMLModel_mLModelId :: Lens' CreateMLModel Text

-- | The category of supervised learning that this <tt>MLModel</tt> will
--   address. Choose from the following types:
--   
--   <ul>
--   <li>Choose <tt>REGRESSION</tt> if the <tt>MLModel</tt> will be used to
--   predict a numeric value.</li>
--   <li>Choose <tt>BINARY</tt> if the <tt>MLModel</tt> result has two
--   possible values.</li>
--   <li>Choose <tt>MULTICLASS</tt> if the <tt>MLModel</tt> result has a
--   limited number of values.</li>
--   </ul>
--   
--   For more information, see the <a>Amazon Machine Learning Developer
--   Guide</a>.
createMLModel_mLModelType :: Lens' CreateMLModel MLModelType

-- | The <tt>DataSource</tt> that points to the training data.
createMLModel_trainingDataSourceId :: Lens' CreateMLModel Text

-- | A user-supplied ID that uniquely identifies the <tt>MLModel</tt>. This
--   value should be identical to the value of the <tt>MLModelId</tt> in
--   the request.
createMLModelResponse_mLModelId :: Lens' CreateMLModelResponse (Maybe Text)

-- | The response's http status code.
createMLModelResponse_httpStatus :: Lens' CreateMLModelResponse Int

-- | The status of the <tt>BatchPrediction</tt>. This element can have one
--   of the following values:
--   
--   <ul>
--   <li><tt>PENDING</tt> - Amazon Machine Learning (Amazon ML) submitted a
--   request to generate predictions for a batch of observations.</li>
--   <li><tt>INPROGRESS</tt> - The process is underway.</li>
--   <li><tt>FAILED</tt> - The request to perform a batch prediction did
--   not run to completion. It is not usable.</li>
--   <li><tt>COMPLETED</tt> - The batch prediction process completed
--   successfully.</li>
--   <li><tt>DELETED</tt> - The <tt>BatchPrediction</tt> is marked as
--   deleted. It is not usable.</li>
--   </ul>
batchPrediction_status :: Lens' BatchPrediction (Maybe EntityStatus)

-- | The ID assigned to the <tt>BatchPrediction</tt> at creation. This
--   value should be identical to the value of the
--   <tt>BatchPredictionID</tt> in the request.
batchPrediction_batchPredictionId :: Lens' BatchPrediction (Maybe Text)

-- | Undocumented member.
batchPrediction_startedAt :: Lens' BatchPrediction (Maybe UTCTime)

-- | The location of an Amazon S3 bucket or directory to receive the
--   operation results. The following substrings are not allowed in the
--   <tt>s3 key</tt> portion of the <tt>outputURI</tt> field: ':', '//',
--   '/./', '/../'.
batchPrediction_outputUri :: Lens' BatchPrediction (Maybe Text)

-- | A description of the most recent details about processing the batch
--   prediction request.
batchPrediction_message :: Lens' BatchPrediction (Maybe Text)

-- | The time that the <tt>BatchPrediction</tt> was created. The time is
--   expressed in epoch time.
batchPrediction_createdAt :: Lens' BatchPrediction (Maybe UTCTime)

-- | A user-supplied name or description of the <tt>BatchPrediction</tt>.
batchPrediction_name :: Lens' BatchPrediction (Maybe Text)

-- | The AWS user account that invoked the <tt>BatchPrediction</tt>. The
--   account type can be either an AWS root account or an AWS Identity and
--   Access Management (IAM) user account.
batchPrediction_createdByIamUser :: Lens' BatchPrediction (Maybe Text)

-- | Undocumented member.
batchPrediction_finishedAt :: Lens' BatchPrediction (Maybe UTCTime)

-- | Undocumented member.
batchPrediction_invalidRecordCount :: Lens' BatchPrediction (Maybe Integer)

-- | Undocumented member.
batchPrediction_totalRecordCount :: Lens' BatchPrediction (Maybe Integer)

-- | The ID of the <tt>DataSource</tt> that points to the group of
--   observations to predict.
batchPrediction_batchPredictionDataSourceId :: Lens' BatchPrediction (Maybe Text)

-- | The ID of the <tt>MLModel</tt> that generated predictions for the
--   <tt>BatchPrediction</tt> request.
batchPrediction_mLModelId :: Lens' BatchPrediction (Maybe Text)

-- | The location of the data file or directory in Amazon Simple Storage
--   Service (Amazon S3).
batchPrediction_inputDataLocationS3 :: Lens' BatchPrediction (Maybe Text)

-- | Undocumented member.
batchPrediction_computeTime :: Lens' BatchPrediction (Maybe Integer)

-- | The time of the most recent edit to the <tt>BatchPrediction</tt>. The
--   time is expressed in epoch time.
batchPrediction_lastUpdatedAt :: Lens' BatchPrediction (Maybe UTCTime)

-- | The current status of the <tt>DataSource</tt>. This element can have
--   one of the following values:
--   
--   <ul>
--   <li>PENDING - Amazon Machine Learning (Amazon ML) submitted a request
--   to create a <tt>DataSource</tt>.</li>
--   <li>INPROGRESS - The creation process is underway.</li>
--   <li>FAILED - The request to create a <tt>DataSource</tt> did not run
--   to completion. It is not usable.</li>
--   <li>COMPLETED - The creation process completed successfully.</li>
--   <li>DELETED - The <tt>DataSource</tt> is marked as deleted. It is not
--   usable.</li>
--   </ul>
dataSource_status :: Lens' DataSource (Maybe EntityStatus)

-- | Undocumented member.
dataSource_startedAt :: Lens' DataSource (Maybe UTCTime)

-- | Undocumented member.
dataSource_roleARN :: Lens' DataSource (Maybe Text)

-- | A JSON string that represents the splitting and rearrangement
--   requirement used when this <tt>DataSource</tt> was created.
dataSource_dataRearrangement :: Lens' DataSource (Maybe Text)

-- | Undocumented member.
dataSource_redshiftMetadata :: Lens' DataSource (Maybe RedshiftMetadata)

-- | A description of the most recent details about creating the
--   <tt>DataSource</tt>.
dataSource_message :: Lens' DataSource (Maybe Text)

-- | The ID that is assigned to the <tt>DataSource</tt> during creation.
dataSource_dataSourceId :: Lens' DataSource (Maybe Text)

-- | The parameter is <tt>true</tt> if statistics need to be generated from
--   the observation data.
dataSource_computeStatistics :: Lens' DataSource (Maybe Bool)

-- | The time that the <tt>DataSource</tt> was created. The time is
--   expressed in epoch time.
dataSource_createdAt :: Lens' DataSource (Maybe UTCTime)

-- | The location and name of the data in Amazon Simple Storage Service
--   (Amazon S3) that is used by a <tt>DataSource</tt>.
dataSource_dataLocationS3 :: Lens' DataSource (Maybe Text)

-- | A user-supplied name or description of the <tt>DataSource</tt>.
dataSource_name :: Lens' DataSource (Maybe Text)

-- | The number of data files referenced by the <tt>DataSource</tt>.
dataSource_numberOfFiles :: Lens' DataSource (Maybe Integer)

-- | The AWS user account from which the <tt>DataSource</tt> was created.
--   The account type can be either an AWS root account or an AWS Identity
--   and Access Management (IAM) user account.
dataSource_createdByIamUser :: Lens' DataSource (Maybe Text)

-- | Undocumented member.
dataSource_finishedAt :: Lens' DataSource (Maybe UTCTime)

-- | The total number of observations contained in the data files that the
--   <tt>DataSource</tt> references.
dataSource_dataSizeInBytes :: Lens' DataSource (Maybe Integer)

-- | Undocumented member.
dataSource_computeTime :: Lens' DataSource (Maybe Integer)

-- | Undocumented member.
dataSource_rDSMetadata :: Lens' DataSource (Maybe RDSMetadata)

-- | The time of the most recent edit to the <tt>BatchPrediction</tt>. The
--   time is expressed in epoch time.
dataSource_lastUpdatedAt :: Lens' DataSource (Maybe UTCTime)

-- | Measurements of how well the <tt>MLModel</tt> performed, using
--   observations referenced by the <tt>DataSource</tt>. One of the
--   following metrics is returned, based on the type of the
--   <tt>MLModel</tt>:
--   
--   <ul>
--   <li>BinaryAUC: A binary <tt>MLModel</tt> uses the Area Under the Curve
--   (AUC) technique to measure performance.</li>
--   <li>RegressionRMSE: A regression <tt>MLModel</tt> uses the Root Mean
--   Square Error (RMSE) technique to measure performance. RMSE measures
--   the difference between predicted and actual values for a single
--   variable.</li>
--   <li>MulticlassAvgFScore: A multiclass <tt>MLModel</tt> uses the F1
--   score technique to measure performance.</li>
--   </ul>
--   
--   For more information about performance metrics, please see the
--   <a>Amazon Machine Learning Developer Guide</a>.
evaluation_performanceMetrics :: Lens' Evaluation (Maybe PerformanceMetrics)

-- | The status of the evaluation. This element can have one of the
--   following values:
--   
--   <ul>
--   <li><tt>PENDING</tt> - Amazon Machine Learning (Amazon ML) submitted a
--   request to evaluate an <tt>MLModel</tt>.</li>
--   <li><tt>INPROGRESS</tt> - The evaluation is underway.</li>
--   <li><tt>FAILED</tt> - The request to evaluate an <tt>MLModel</tt> did
--   not run to completion. It is not usable.</li>
--   <li><tt>COMPLETED</tt> - The evaluation process completed
--   successfully.</li>
--   <li><tt>DELETED</tt> - The <tt>Evaluation</tt> is marked as deleted.
--   It is not usable.</li>
--   </ul>
evaluation_status :: Lens' Evaluation (Maybe EntityStatus)

-- | Undocumented member.
evaluation_startedAt :: Lens' Evaluation (Maybe UTCTime)

-- | The ID of the <tt>DataSource</tt> that is used to evaluate the
--   <tt>MLModel</tt>.
evaluation_evaluationDataSourceId :: Lens' Evaluation (Maybe Text)

-- | A description of the most recent details about evaluating the
--   <tt>MLModel</tt>.
evaluation_message :: Lens' Evaluation (Maybe Text)

-- | The time that the <tt>Evaluation</tt> was created. The time is
--   expressed in epoch time.
evaluation_createdAt :: Lens' Evaluation (Maybe UTCTime)

-- | A user-supplied name or description of the <tt>Evaluation</tt>.
evaluation_name :: Lens' Evaluation (Maybe Text)

-- | The AWS user account that invoked the evaluation. The account type can
--   be either an AWS root account or an AWS Identity and Access Management
--   (IAM) user account.
evaluation_createdByIamUser :: Lens' Evaluation (Maybe Text)

-- | Undocumented member.
evaluation_finishedAt :: Lens' Evaluation (Maybe UTCTime)

-- | The ID of the <tt>MLModel</tt> that is the focus of the evaluation.
evaluation_mLModelId :: Lens' Evaluation (Maybe Text)

-- | The ID that is assigned to the <tt>Evaluation</tt> at creation.
evaluation_evaluationId :: Lens' Evaluation (Maybe Text)

-- | The location and name of the data in Amazon Simple Storage Server
--   (Amazon S3) that is used in the evaluation.
evaluation_inputDataLocationS3 :: Lens' Evaluation (Maybe Text)

-- | Undocumented member.
evaluation_computeTime :: Lens' Evaluation (Maybe Integer)

-- | The time of the most recent edit to the <tt>Evaluation</tt>. The time
--   is expressed in epoch time.
evaluation_lastUpdatedAt :: Lens' Evaluation (Maybe UTCTime)

-- | The algorithm used to train the <tt>MLModel</tt>. The following
--   algorithm is supported:
--   
--   <ul>
--   <li><tt>SGD</tt> -- Stochastic gradient descent. The goal of
--   <tt>SGD</tt> is to minimize the gradient of the loss function.</li>
--   </ul>
mLModel_algorithm :: Lens' MLModel (Maybe Algorithm)

-- | The current status of an <tt>MLModel</tt>. This element can have one
--   of the following values:
--   
--   <ul>
--   <li><tt>PENDING</tt> - Amazon Machine Learning (Amazon ML) submitted a
--   request to create an <tt>MLModel</tt>.</li>
--   <li><tt>INPROGRESS</tt> - The creation process is underway.</li>
--   <li><tt>FAILED</tt> - The request to create an <tt>MLModel</tt> didn't
--   run to completion. The model isn't usable.</li>
--   <li><tt>COMPLETED</tt> - The creation process completed
--   successfully.</li>
--   <li><tt>DELETED</tt> - The <tt>MLModel</tt> is marked as deleted. It
--   isn't usable.</li>
--   </ul>
mLModel_status :: Lens' MLModel (Maybe EntityStatus)

-- | Undocumented member.
mLModel_startedAt :: Lens' MLModel (Maybe UTCTime)

-- | A description of the most recent details about accessing the
--   <tt>MLModel</tt>.
mLModel_message :: Lens' MLModel (Maybe Text)

-- | The time that the <tt>MLModel</tt> was created. The time is expressed
--   in epoch time.
mLModel_createdAt :: Lens' MLModel (Maybe UTCTime)

-- | The time of the most recent edit to the <tt>ScoreThreshold</tt>. The
--   time is expressed in epoch time.
mLModel_scoreThresholdLastUpdatedAt :: Lens' MLModel (Maybe UTCTime)

-- | The current endpoint of the <tt>MLModel</tt>.
mLModel_endpointInfo :: Lens' MLModel (Maybe RealtimeEndpointInfo)

-- | A list of the training parameters in the <tt>MLModel</tt>. The list is
--   implemented as a map of key-value pairs.
--   
--   The following is the current set of training parameters:
--   
--   <ul>
--   <li><tt>sgd.maxMLModelSizeInBytes</tt> - The maximum allowed size of
--   the model. Depending on the input data, the size of the model might
--   affect its performance.The value is an integer that ranges from
--   <tt>100000</tt> to <tt>2147483648</tt>. The default value is
--   <tt>33554432</tt>.</li>
--   <li><tt>sgd.maxPasses</tt> - The number of times that the training
--   process traverses the observations to build the <tt>MLModel</tt>. The
--   value is an integer that ranges from <tt>1</tt> to <tt>10000</tt>. The
--   default value is <tt>10</tt>.</li>
--   <li><tt>sgd.shuffleType</tt> - Whether Amazon ML shuffles the training
--   data. Shuffling the data improves a model's ability to find the
--   optimal solution for a variety of data types. The valid values are
--   <tt>auto</tt> and <tt>none</tt>. The default value is
--   <tt>none</tt>.</li>
--   <li><tt>sgd.l1RegularizationAmount</tt> - The coefficient
--   regularization L1 norm, which controls overfitting the data by
--   penalizing large coefficients. This parameter tends to drive
--   coefficients to zero, resulting in sparse feature set. If you use this
--   parameter, start by specifying a small value, such as
--   <tt>1.0E-08</tt>.The value is a double that ranges from <tt>0</tt> to
--   <tt>MAX_DOUBLE</tt>. The default is to not use L1 normalization. This
--   parameter can't be used when <tt>L2</tt> is specified. Use this
--   parameter sparingly.</li>
--   <li><tt>sgd.l2RegularizationAmount</tt> - The coefficient
--   regularization L2 norm, which controls overfitting the data by
--   penalizing large coefficients. This tends to drive coefficients to
--   small, nonzero values. If you use this parameter, start by specifying
--   a small value, such as <tt>1.0E-08</tt>.The value is a double that
--   ranges from <tt>0</tt> to <tt>MAX_DOUBLE</tt>. The default is to not
--   use L2 normalization. This parameter can't be used when <tt>L1</tt> is
--   specified. Use this parameter sparingly.</li>
--   </ul>
mLModel_trainingParameters :: Lens' MLModel (Maybe (HashMap Text Text))

-- | A user-supplied name or description of the <tt>MLModel</tt>.
mLModel_name :: Lens' MLModel (Maybe Text)

-- | The AWS user account from which the <tt>MLModel</tt> was created. The
--   account type can be either an AWS root account or an AWS Identity and
--   Access Management (IAM) user account.
mLModel_createdByIamUser :: Lens' MLModel (Maybe Text)

-- | Undocumented member.
mLModel_finishedAt :: Lens' MLModel (Maybe UTCTime)

-- | Undocumented member.
mLModel_scoreThreshold :: Lens' MLModel (Maybe Double)

-- | Identifies the <tt>MLModel</tt> category. The following are the
--   available types:
--   
--   <ul>
--   <li><tt>REGRESSION</tt> - Produces a numeric result. For example,
--   "What price should a house be listed at?"</li>
--   <li><tt>BINARY</tt> - Produces one of two possible results. For
--   example, "Is this a child-friendly web site?".</li>
--   <li><tt>MULTICLASS</tt> - Produces one of several possible results.
--   For example, "Is this a HIGH-, LOW-, or MEDIUM-risk trade?".</li>
--   </ul>
mLModel_mLModelType :: Lens' MLModel (Maybe MLModelType)

-- | Undocumented member.
mLModel_sizeInBytes :: Lens' MLModel (Maybe Integer)

-- | The ID assigned to the <tt>MLModel</tt> at creation.
mLModel_mLModelId :: Lens' MLModel (Maybe Text)

-- | The location of the data file or directory in Amazon Simple Storage
--   Service (Amazon S3).
mLModel_inputDataLocationS3 :: Lens' MLModel (Maybe Text)

-- | Undocumented member.
mLModel_computeTime :: Lens' MLModel (Maybe Integer)

-- | The ID of the training <tt>DataSource</tt>. The <tt>CreateMLModel</tt>
--   operation uses the <tt>TrainingDataSourceId</tt>.
mLModel_trainingDataSourceId :: Lens' MLModel (Maybe Text)

-- | The time of the most recent edit to the <tt>MLModel</tt>. The time is
--   expressed in epoch time.
mLModel_lastUpdatedAt :: Lens' MLModel (Maybe UTCTime)

-- | Undocumented member.
performanceMetrics_properties :: Lens' PerformanceMetrics (Maybe (HashMap Text Text))

-- | The prediction value for <tt>REGRESSION</tt> <tt>MLModel</tt>.
prediction_predictedValue :: Lens' Prediction (Maybe Double)

-- | Undocumented member.
prediction_predictedScores :: Lens' Prediction (Maybe (HashMap Text Double))

-- | The prediction label for either a <tt>BINARY</tt> or
--   <tt>MULTICLASS</tt> <tt>MLModel</tt>.
prediction_predictedLabel :: Lens' Prediction (Maybe Text)

-- | Undocumented member.
prediction_details :: Lens' Prediction (Maybe (HashMap DetailsAttributes Text))

-- | A JSON string that represents the schema for an Amazon RDS
--   <tt>DataSource</tt>. The <tt>DataSchema</tt> defines the structure of
--   the observation data in the data file(s) referenced in the
--   <tt>DataSource</tt>.
--   
--   A <tt>DataSchema</tt> is not required if you specify a
--   <tt>DataSchemaUri</tt>
--   
--   Define your <tt>DataSchema</tt> as a series of key-value pairs.
--   <tt>attributes</tt> and <tt>excludedVariableNames</tt> have an array
--   of key-value pairs for their value. Use the following format to define
--   your <tt>DataSchema</tt>.
--   
--   { "version": "1.0",
--   
--   "recordAnnotationFieldName": "F1",
--   
--   "recordWeightFieldName": "F2",
--   
--   "targetFieldName": "F3",
--   
--   "dataFormat": "CSV",
--   
--   "dataFileContainsHeader": true,
--   
--   "attributes": [
--   
--   { "fieldName": "F1", "fieldType": "TEXT" }, { "fieldName": "F2",
--   "fieldType": "NUMERIC" }, { "fieldName": "F3", "fieldType":
--   "CATEGORICAL" }, { "fieldName": "F4", "fieldType": "NUMERIC" }, {
--   "fieldName": "F5", "fieldType": "CATEGORICAL" }, { "fieldName": "F6",
--   "fieldType": "TEXT" }, { "fieldName": "F7", "fieldType":
--   "WEIGHTED_INT_SEQUENCE" }, { "fieldName": "F8", "fieldType":
--   "WEIGHTED_STRING_SEQUENCE" } ],
--   
--   "excludedVariableNames": [ "F6" ] }
rDSDataSpec_dataSchema :: Lens' RDSDataSpec (Maybe Text)

-- | A JSON string that represents the splitting and rearrangement
--   processing to be applied to a <tt>DataSource</tt>. If the
--   <tt>DataRearrangement</tt> parameter is not provided, all of the input
--   data is used to create the <tt>Datasource</tt>.
--   
--   There are multiple parameters that control what data is used to create
--   a datasource:
--   
--   <ul>
--   <li><b><tt>percentBegin</tt></b>Use <tt>percentBegin</tt> to indicate
--   the beginning of the range of the data used to create the Datasource.
--   If you do not include <tt>percentBegin</tt> and <tt>percentEnd</tt>,
--   Amazon ML includes all of the data when creating the datasource.</li>
--   <li><b><tt>percentEnd</tt></b>Use <tt>percentEnd</tt> to indicate the
--   end of the range of the data used to create the Datasource. If you do
--   not include <tt>percentBegin</tt> and <tt>percentEnd</tt>, Amazon ML
--   includes all of the data when creating the datasource.</li>
--   <li><b><tt>complement</tt></b>The <tt>complement</tt> parameter
--   instructs Amazon ML to use the data that is not included in the range
--   of <tt>percentBegin</tt> to <tt>percentEnd</tt> to create a
--   datasource. The <tt>complement</tt> parameter is useful if you need to
--   create complementary datasources for training and evaluation. To
--   create a complementary datasource, use the same values for
--   <tt>percentBegin</tt> and <tt>percentEnd</tt>, along with the
--   <tt>complement</tt> parameter.For example, the following two
--   datasources do not share any data, and can be used to train and
--   evaluate a model. The first datasource has 25 percent of the data, and
--   the second one has 75 percent of the data.Datasource for evaluation:
--   <tt>{"splitting":{"percentBegin":0, "percentEnd":25}}</tt>Datasource
--   for training: <tt>{"splitting":{"percentBegin":0, "percentEnd":25,
--   "complement":"true"}}</tt></li>
--   <li><b><tt>strategy</tt></b>To change how Amazon ML splits the data
--   for a datasource, use the <tt>strategy</tt> parameter.The default
--   value for the <tt>strategy</tt> parameter is <tt>sequential</tt>,
--   meaning that Amazon ML takes all of the data records between the
--   <tt>percentBegin</tt> and <tt>percentEnd</tt> parameters for the
--   datasource, in the order that the records appear in the input data.The
--   following two <tt>DataRearrangement</tt> lines are examples of
--   sequentially ordered training and evaluation datasources:Datasource
--   for evaluation: <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"sequential"}}</tt>Datasource for training:
--   <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"sequential", "complement":"true"}}</tt>To randomly split
--   the input data into the proportions indicated by the percentBegin and
--   percentEnd parameters, set the <tt>strategy</tt> parameter to
--   <tt>random</tt> and provide a string that is used as the seed value
--   for the random data splitting (for example, you can use the S3 path to
--   your data as the random seed string). If you choose the random split
--   strategy, Amazon ML assigns each row of data a pseudo-random number
--   between 0 and 100, and then selects the rows that have an assigned
--   number between <tt>percentBegin</tt> and <tt>percentEnd</tt>.
--   Pseudo-random numbers are assigned using both the input seed string
--   value and the byte offset as a seed, so changing the data results in a
--   different split. Any existing ordering is preserved. The random
--   splitting strategy ensures that variables in the training and
--   evaluation data are distributed similarly. It is useful in the cases
--   where the input data may have an implicit sort order, which would
--   otherwise result in training and evaluation datasources containing
--   non-similar data records.The following two <tt>DataRearrangement</tt>
--   lines are examples of non-sequentially ordered training and evaluation
--   datasources:Datasource for evaluation:
--   <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"random",
--   "randomSeed"="s3://my_s3_path/bucket/file.csv"}}</tt>Datasource for
--   training: <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"random", "randomSeed"="s3://my_s3_path/bucket/file.csv",
--   "complement":"true"}}</tt></li>
--   </ul>
rDSDataSpec_dataRearrangement :: Lens' RDSDataSpec (Maybe Text)

-- | The Amazon S3 location of the <tt>DataSchema</tt>.
rDSDataSpec_dataSchemaUri :: Lens' RDSDataSpec (Maybe Text)

-- | Describes the <tt>DatabaseName</tt> and <tt>InstanceIdentifier</tt> of
--   an Amazon RDS database.
rDSDataSpec_databaseInformation :: Lens' RDSDataSpec RDSDatabase

-- | The query that is used to retrieve the observation data for the
--   <tt>DataSource</tt>.
rDSDataSpec_selectSqlQuery :: Lens' RDSDataSpec Text

-- | The AWS Identity and Access Management (IAM) credentials that are used
--   connect to the Amazon RDS database.
rDSDataSpec_databaseCredentials :: Lens' RDSDataSpec RDSDatabaseCredentials

-- | The Amazon S3 location for staging Amazon RDS data. The data retrieved
--   from Amazon RDS using <tt>SelectSqlQuery</tt> is stored in this
--   location.
rDSDataSpec_s3StagingLocation :: Lens' RDSDataSpec Text

-- | The role (DataPipelineDefaultResourceRole) assumed by an Amazon
--   Elastic Compute Cloud (Amazon EC2) instance to carry out the copy
--   operation from Amazon RDS to an Amazon S3 task. For more information,
--   see <a>Role templates</a> for data pipelines.
rDSDataSpec_resourceRole :: Lens' RDSDataSpec Text

-- | The role (DataPipelineDefaultRole) assumed by AWS Data Pipeline
--   service to monitor the progress of the copy task from Amazon RDS to
--   Amazon S3. For more information, see <a>Role templates</a> for data
--   pipelines.
rDSDataSpec_serviceRole :: Lens' RDSDataSpec Text

-- | The subnet ID to be used to access a VPC-based RDS DB instance. This
--   attribute is used by Data Pipeline to carry out the copy task from
--   Amazon RDS to Amazon S3.
rDSDataSpec_subnetId :: Lens' RDSDataSpec Text

-- | The security group IDs to be used to access a VPC-based RDS DB
--   instance. Ensure that there are appropriate ingress rules set up to
--   allow access to the RDS DB instance. This attribute is used by Data
--   Pipeline to carry out the copy operation from Amazon RDS to an Amazon
--   S3 task.
rDSDataSpec_securityGroupIds :: Lens' RDSDataSpec [Text]

-- | The ID of an RDS DB instance.
rDSDatabase_instanceIdentifier :: Lens' RDSDatabase Text

-- | Undocumented member.
rDSDatabase_databaseName :: Lens' RDSDatabase Text

-- | Undocumented member.
rDSDatabaseCredentials_username :: Lens' RDSDatabaseCredentials Text

-- | Undocumented member.
rDSDatabaseCredentials_password :: Lens' RDSDatabaseCredentials Text

-- | The ID of the Data Pipeline instance that is used to carry to copy
--   data from Amazon RDS to Amazon S3. You can use the ID to find details
--   about the instance in the Data Pipeline console.
rDSMetadata_dataPipelineId :: Lens' RDSMetadata (Maybe Text)

-- | The SQL query that is supplied during CreateDataSourceFromRDS. Returns
--   only if <tt>Verbose</tt> is true in <tt>GetDataSourceInput</tt>.
rDSMetadata_selectSqlQuery :: Lens' RDSMetadata (Maybe Text)

-- | The role (DataPipelineDefaultRole) assumed by the Data Pipeline
--   service to monitor the progress of the copy task from Amazon RDS to
--   Amazon S3. For more information, see <a>Role templates</a> for data
--   pipelines.
rDSMetadata_serviceRole :: Lens' RDSMetadata (Maybe Text)

-- | The role (DataPipelineDefaultResourceRole) assumed by an Amazon EC2
--   instance to carry out the copy task from Amazon RDS to Amazon S3. For
--   more information, see <a>Role templates</a> for data pipelines.
rDSMetadata_resourceRole :: Lens' RDSMetadata (Maybe Text)

-- | Undocumented member.
rDSMetadata_databaseUserName :: Lens' RDSMetadata (Maybe Text)

-- | The database details required to connect to an Amazon RDS.
rDSMetadata_database :: Lens' RDSMetadata (Maybe RDSDatabase)

-- | The time that the request to create the real-time endpoint for the
--   <tt>MLModel</tt> was received. The time is expressed in epoch time.
realtimeEndpointInfo_createdAt :: Lens' RealtimeEndpointInfo (Maybe UTCTime)

-- | The maximum processing rate for the real-time endpoint for
--   <tt>MLModel</tt>, measured in incoming requests per second.
realtimeEndpointInfo_peakRequestsPerSecond :: Lens' RealtimeEndpointInfo (Maybe Int)

-- | The current status of the real-time endpoint for the <tt>MLModel</tt>.
--   This element can have one of the following values:
--   
--   <ul>
--   <li><tt>NONE</tt> - Endpoint does not exist or was previously
--   deleted.</li>
--   <li><tt>READY</tt> - Endpoint is ready to be used for real-time
--   predictions.</li>
--   <li><tt>UPDATING</tt> - Updating/creating the endpoint.</li>
--   </ul>
realtimeEndpointInfo_endpointStatus :: Lens' RealtimeEndpointInfo (Maybe RealtimeEndpointStatus)

-- | The URI that specifies where to send real-time prediction requests for
--   the <tt>MLModel</tt>.
--   
--   <b>Note:</b> The application must wait until the real-time endpoint is
--   ready before using this URI.
realtimeEndpointInfo_endpointUrl :: Lens' RealtimeEndpointInfo (Maybe Text)

-- | A JSON string that represents the schema for an Amazon Redshift
--   <tt>DataSource</tt>. The <tt>DataSchema</tt> defines the structure of
--   the observation data in the data file(s) referenced in the
--   <tt>DataSource</tt>.
--   
--   A <tt>DataSchema</tt> is not required if you specify a
--   <tt>DataSchemaUri</tt>.
--   
--   Define your <tt>DataSchema</tt> as a series of key-value pairs.
--   <tt>attributes</tt> and <tt>excludedVariableNames</tt> have an array
--   of key-value pairs for their value. Use the following format to define
--   your <tt>DataSchema</tt>.
--   
--   { "version": "1.0",
--   
--   "recordAnnotationFieldName": "F1",
--   
--   "recordWeightFieldName": "F2",
--   
--   "targetFieldName": "F3",
--   
--   "dataFormat": "CSV",
--   
--   "dataFileContainsHeader": true,
--   
--   "attributes": [
--   
--   { "fieldName": "F1", "fieldType": "TEXT" }, { "fieldName": "F2",
--   "fieldType": "NUMERIC" }, { "fieldName": "F3", "fieldType":
--   "CATEGORICAL" }, { "fieldName": "F4", "fieldType": "NUMERIC" }, {
--   "fieldName": "F5", "fieldType": "CATEGORICAL" }, { "fieldName": "F6",
--   "fieldType": "TEXT" }, { "fieldName": "F7", "fieldType":
--   "WEIGHTED_INT_SEQUENCE" }, { "fieldName": "F8", "fieldType":
--   "WEIGHTED_STRING_SEQUENCE" } ],
--   
--   "excludedVariableNames": [ "F6" ] }
redshiftDataSpec_dataSchema :: Lens' RedshiftDataSpec (Maybe Text)

-- | A JSON string that represents the splitting and rearrangement
--   processing to be applied to a <tt>DataSource</tt>. If the
--   <tt>DataRearrangement</tt> parameter is not provided, all of the input
--   data is used to create the <tt>Datasource</tt>.
--   
--   There are multiple parameters that control what data is used to create
--   a datasource:
--   
--   <ul>
--   <li><b><tt>percentBegin</tt></b>Use <tt>percentBegin</tt> to indicate
--   the beginning of the range of the data used to create the Datasource.
--   If you do not include <tt>percentBegin</tt> and <tt>percentEnd</tt>,
--   Amazon ML includes all of the data when creating the datasource.</li>
--   <li><b><tt>percentEnd</tt></b>Use <tt>percentEnd</tt> to indicate the
--   end of the range of the data used to create the Datasource. If you do
--   not include <tt>percentBegin</tt> and <tt>percentEnd</tt>, Amazon ML
--   includes all of the data when creating the datasource.</li>
--   <li><b><tt>complement</tt></b>The <tt>complement</tt> parameter
--   instructs Amazon ML to use the data that is not included in the range
--   of <tt>percentBegin</tt> to <tt>percentEnd</tt> to create a
--   datasource. The <tt>complement</tt> parameter is useful if you need to
--   create complementary datasources for training and evaluation. To
--   create a complementary datasource, use the same values for
--   <tt>percentBegin</tt> and <tt>percentEnd</tt>, along with the
--   <tt>complement</tt> parameter.For example, the following two
--   datasources do not share any data, and can be used to train and
--   evaluate a model. The first datasource has 25 percent of the data, and
--   the second one has 75 percent of the data.Datasource for evaluation:
--   <tt>{"splitting":{"percentBegin":0, "percentEnd":25}}</tt>Datasource
--   for training: <tt>{"splitting":{"percentBegin":0, "percentEnd":25,
--   "complement":"true"}}</tt></li>
--   <li><b><tt>strategy</tt></b>To change how Amazon ML splits the data
--   for a datasource, use the <tt>strategy</tt> parameter.The default
--   value for the <tt>strategy</tt> parameter is <tt>sequential</tt>,
--   meaning that Amazon ML takes all of the data records between the
--   <tt>percentBegin</tt> and <tt>percentEnd</tt> parameters for the
--   datasource, in the order that the records appear in the input data.The
--   following two <tt>DataRearrangement</tt> lines are examples of
--   sequentially ordered training and evaluation datasources:Datasource
--   for evaluation: <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"sequential"}}</tt>Datasource for training:
--   <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"sequential", "complement":"true"}}</tt>To randomly split
--   the input data into the proportions indicated by the percentBegin and
--   percentEnd parameters, set the <tt>strategy</tt> parameter to
--   <tt>random</tt> and provide a string that is used as the seed value
--   for the random data splitting (for example, you can use the S3 path to
--   your data as the random seed string). If you choose the random split
--   strategy, Amazon ML assigns each row of data a pseudo-random number
--   between 0 and 100, and then selects the rows that have an assigned
--   number between <tt>percentBegin</tt> and <tt>percentEnd</tt>.
--   Pseudo-random numbers are assigned using both the input seed string
--   value and the byte offset as a seed, so changing the data results in a
--   different split. Any existing ordering is preserved. The random
--   splitting strategy ensures that variables in the training and
--   evaluation data are distributed similarly. It is useful in the cases
--   where the input data may have an implicit sort order, which would
--   otherwise result in training and evaluation datasources containing
--   non-similar data records.The following two <tt>DataRearrangement</tt>
--   lines are examples of non-sequentially ordered training and evaluation
--   datasources:Datasource for evaluation:
--   <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"random",
--   "randomSeed"="s3://my_s3_path/bucket/file.csv"}}</tt>Datasource for
--   training: <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"random", "randomSeed"="s3://my_s3_path/bucket/file.csv",
--   "complement":"true"}}</tt></li>
--   </ul>
redshiftDataSpec_dataRearrangement :: Lens' RedshiftDataSpec (Maybe Text)

-- | Describes the schema location for an Amazon Redshift
--   <tt>DataSource</tt>.
redshiftDataSpec_dataSchemaUri :: Lens' RedshiftDataSpec (Maybe Text)

-- | Describes the <tt>DatabaseName</tt> and <tt>ClusterIdentifier</tt> for
--   an Amazon Redshift <tt>DataSource</tt>.
redshiftDataSpec_databaseInformation :: Lens' RedshiftDataSpec RedshiftDatabase

-- | Describes the SQL Query to execute on an Amazon Redshift database for
--   an Amazon Redshift <tt>DataSource</tt>.
redshiftDataSpec_selectSqlQuery :: Lens' RedshiftDataSpec Text

-- | Describes AWS Identity and Access Management (IAM) credentials that
--   are used connect to the Amazon Redshift database.
redshiftDataSpec_databaseCredentials :: Lens' RedshiftDataSpec RedshiftDatabaseCredentials

-- | Describes an Amazon S3 location to store the result set of the
--   <tt>SelectSqlQuery</tt> query.
redshiftDataSpec_s3StagingLocation :: Lens' RedshiftDataSpec Text

-- | Undocumented member.
redshiftDatabase_databaseName :: Lens' RedshiftDatabase Text

-- | Undocumented member.
redshiftDatabase_clusterIdentifier :: Lens' RedshiftDatabase Text

-- | Undocumented member.
redshiftDatabaseCredentials_username :: Lens' RedshiftDatabaseCredentials Text

-- | Undocumented member.
redshiftDatabaseCredentials_password :: Lens' RedshiftDatabaseCredentials Text

-- | The SQL query that is specified during CreateDataSourceFromRedshift.
--   Returns only if <tt>Verbose</tt> is true in GetDataSourceInput.
redshiftMetadata_selectSqlQuery :: Lens' RedshiftMetadata (Maybe Text)

-- | Undocumented member.
redshiftMetadata_redshiftDatabase :: Lens' RedshiftMetadata (Maybe RedshiftDatabase)

-- | Undocumented member.
redshiftMetadata_databaseUserName :: Lens' RedshiftMetadata (Maybe Text)

-- | A JSON string that represents the schema for an Amazon S3
--   <tt>DataSource</tt>. The <tt>DataSchema</tt> defines the structure of
--   the observation data in the data file(s) referenced in the
--   <tt>DataSource</tt>.
--   
--   You must provide either the <tt>DataSchema</tt> or the
--   <tt>DataSchemaLocationS3</tt>.
--   
--   Define your <tt>DataSchema</tt> as a series of key-value pairs.
--   <tt>attributes</tt> and <tt>excludedVariableNames</tt> have an array
--   of key-value pairs for their value. Use the following format to define
--   your <tt>DataSchema</tt>.
--   
--   { "version": "1.0",
--   
--   "recordAnnotationFieldName": "F1",
--   
--   "recordWeightFieldName": "F2",
--   
--   "targetFieldName": "F3",
--   
--   "dataFormat": "CSV",
--   
--   "dataFileContainsHeader": true,
--   
--   "attributes": [
--   
--   { "fieldName": "F1", "fieldType": "TEXT" }, { "fieldName": "F2",
--   "fieldType": "NUMERIC" }, { "fieldName": "F3", "fieldType":
--   "CATEGORICAL" }, { "fieldName": "F4", "fieldType": "NUMERIC" }, {
--   "fieldName": "F5", "fieldType": "CATEGORICAL" }, { "fieldName": "F6",
--   "fieldType": "TEXT" }, { "fieldName": "F7", "fieldType":
--   "WEIGHTED_INT_SEQUENCE" }, { "fieldName": "F8", "fieldType":
--   "WEIGHTED_STRING_SEQUENCE" } ],
--   
--   "excludedVariableNames": [ "F6" ] }
s3DataSpec_dataSchema :: Lens' S3DataSpec (Maybe Text)

-- | A JSON string that represents the splitting and rearrangement
--   processing to be applied to a <tt>DataSource</tt>. If the
--   <tt>DataRearrangement</tt> parameter is not provided, all of the input
--   data is used to create the <tt>Datasource</tt>.
--   
--   There are multiple parameters that control what data is used to create
--   a datasource:
--   
--   <ul>
--   <li><b><tt>percentBegin</tt></b>Use <tt>percentBegin</tt> to indicate
--   the beginning of the range of the data used to create the Datasource.
--   If you do not include <tt>percentBegin</tt> and <tt>percentEnd</tt>,
--   Amazon ML includes all of the data when creating the datasource.</li>
--   <li><b><tt>percentEnd</tt></b>Use <tt>percentEnd</tt> to indicate the
--   end of the range of the data used to create the Datasource. If you do
--   not include <tt>percentBegin</tt> and <tt>percentEnd</tt>, Amazon ML
--   includes all of the data when creating the datasource.</li>
--   <li><b><tt>complement</tt></b>The <tt>complement</tt> parameter
--   instructs Amazon ML to use the data that is not included in the range
--   of <tt>percentBegin</tt> to <tt>percentEnd</tt> to create a
--   datasource. The <tt>complement</tt> parameter is useful if you need to
--   create complementary datasources for training and evaluation. To
--   create a complementary datasource, use the same values for
--   <tt>percentBegin</tt> and <tt>percentEnd</tt>, along with the
--   <tt>complement</tt> parameter.For example, the following two
--   datasources do not share any data, and can be used to train and
--   evaluate a model. The first datasource has 25 percent of the data, and
--   the second one has 75 percent of the data.Datasource for evaluation:
--   <tt>{"splitting":{"percentBegin":0, "percentEnd":25}}</tt>Datasource
--   for training: <tt>{"splitting":{"percentBegin":0, "percentEnd":25,
--   "complement":"true"}}</tt></li>
--   <li><b><tt>strategy</tt></b>To change how Amazon ML splits the data
--   for a datasource, use the <tt>strategy</tt> parameter.The default
--   value for the <tt>strategy</tt> parameter is <tt>sequential</tt>,
--   meaning that Amazon ML takes all of the data records between the
--   <tt>percentBegin</tt> and <tt>percentEnd</tt> parameters for the
--   datasource, in the order that the records appear in the input data.The
--   following two <tt>DataRearrangement</tt> lines are examples of
--   sequentially ordered training and evaluation datasources:Datasource
--   for evaluation: <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"sequential"}}</tt>Datasource for training:
--   <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"sequential", "complement":"true"}}</tt>To randomly split
--   the input data into the proportions indicated by the percentBegin and
--   percentEnd parameters, set the <tt>strategy</tt> parameter to
--   <tt>random</tt> and provide a string that is used as the seed value
--   for the random data splitting (for example, you can use the S3 path to
--   your data as the random seed string). If you choose the random split
--   strategy, Amazon ML assigns each row of data a pseudo-random number
--   between 0 and 100, and then selects the rows that have an assigned
--   number between <tt>percentBegin</tt> and <tt>percentEnd</tt>.
--   Pseudo-random numbers are assigned using both the input seed string
--   value and the byte offset as a seed, so changing the data results in a
--   different split. Any existing ordering is preserved. The random
--   splitting strategy ensures that variables in the training and
--   evaluation data are distributed similarly. It is useful in the cases
--   where the input data may have an implicit sort order, which would
--   otherwise result in training and evaluation datasources containing
--   non-similar data records.The following two <tt>DataRearrangement</tt>
--   lines are examples of non-sequentially ordered training and evaluation
--   datasources:Datasource for evaluation:
--   <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"random",
--   "randomSeed"="s3://my_s3_path/bucket/file.csv"}}</tt>Datasource for
--   training: <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"random", "randomSeed"="s3://my_s3_path/bucket/file.csv",
--   "complement":"true"}}</tt></li>
--   </ul>
s3DataSpec_dataRearrangement :: Lens' S3DataSpec (Maybe Text)

-- | Describes the schema location in Amazon S3. You must provide either
--   the <tt>DataSchema</tt> or the <tt>DataSchemaLocationS3</tt>.
s3DataSpec_dataSchemaLocationS3 :: Lens' S3DataSpec (Maybe Text)

-- | The location of the data file(s) used by a <tt>DataSource</tt>. The
--   URI specifies a data file or an Amazon Simple Storage Service (Amazon
--   S3) directory or bucket containing data files.
s3DataSpec_dataLocationS3 :: Lens' S3DataSpec Text

-- | A unique identifier for the tag. Valid characters include Unicode
--   letters, digits, white space, _, ., /, =, +, -, %, and @.
tag_key :: Lens' Tag (Maybe Text)

-- | An optional string, typically used to describe or define the tag.
--   Valid characters include Unicode letters, digits, white space, _, .,
--   /, =, +, -, %, and @.
tag_value :: Lens' Tag (Maybe Text)


module Network.AWS.MachineLearning.Waiters

-- | Polls <a>DescribeEvaluations</a> every 30 seconds until a successful
--   state is reached. An error is returned after 60 failed checks.
newEvaluationAvailable :: Wait DescribeEvaluations

-- | Polls <a>DescribeMLModels</a> every 30 seconds until a successful
--   state is reached. An error is returned after 60 failed checks.
newMLModelAvailable :: Wait DescribeMLModels

-- | Polls <a>DescribeDataSources</a> every 30 seconds until a successful
--   state is reached. An error is returned after 60 failed checks.
newDataSourceAvailable :: Wait DescribeDataSources

-- | Polls <a>DescribeBatchPredictions</a> every 30 seconds until a
--   successful state is reached. An error is returned after 60 failed
--   checks.
newBatchPredictionAvailable :: Wait DescribeBatchPredictions


-- | Derived from API version <tt>2014-12-12</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   Definition of the public APIs exposed by Amazon Machine Learning
module Network.AWS.MachineLearning

-- | API version <tt>2014-12-12</tt> of the Amazon Machine Learning SDK
--   configuration.
defaultService :: Service

-- | The exception is thrown when a predict request is made to an unmounted
--   <tt>MLModel</tt>.
_PredictorNotMountedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Prism for TagLimitExceededException' errors.
_TagLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An error on the client occurred. Typically, the cause is an invalid
--   input value.
_InvalidInputException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Prism for InvalidTagException' errors.
_InvalidTagException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The subscriber exceeded the maximum number of operations. This
--   exception can occur when listing objects such as <tt>DataSource</tt>.
_LimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A specified resource cannot be located.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A second request to use or change an object was not allowed. This can
--   result from retrying a request using a parameter that was not present
--   in the original request.
_IdempotentParameterMismatchException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An error on the server occurred when trying to process a request.
_InternalServerException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Polls <a>DescribeEvaluations</a> every 30 seconds until a successful
--   state is reached. An error is returned after 60 failed checks.
newEvaluationAvailable :: Wait DescribeEvaluations

-- | Polls <a>DescribeMLModels</a> every 30 seconds until a successful
--   state is reached. An error is returned after 60 failed checks.
newMLModelAvailable :: Wait DescribeMLModels

-- | Polls <a>DescribeDataSources</a> every 30 seconds until a successful
--   state is reached. An error is returned after 60 failed checks.
newDataSourceAvailable :: Wait DescribeDataSources

-- | Polls <a>DescribeBatchPredictions</a> every 30 seconds until a
--   successful state is reached. An error is returned after 60 failed
--   checks.
newBatchPredictionAvailable :: Wait DescribeBatchPredictions

-- | <i>See:</i> <a>newUpdateMLModel</a> smart constructor.
data UpdateMLModel
UpdateMLModel' :: Maybe Double -> Maybe Text -> Text -> UpdateMLModel

-- | Create a value of <a>UpdateMLModel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:scoreThreshold:UpdateMLModel'</a>,
--   <a>updateMLModel_scoreThreshold</a> - The <tt>ScoreThreshold</tt> used
--   in binary classification <tt>MLModel</tt> that marks the boundary
--   between a positive prediction and a negative prediction.
--   
--   Output values greater than or equal to the <tt>ScoreThreshold</tt>
--   receive a positive result from the <tt>MLModel</tt>, such as
--   <tt>true</tt>. Output values less than the <tt>ScoreThreshold</tt>
--   receive a negative response from the <tt>MLModel</tt>, such as
--   <tt>false</tt>.
--   
--   <a>$sel:mLModelName:UpdateMLModel'</a>,
--   <a>updateMLModel_mLModelName</a> - A user-supplied name or description
--   of the <tt>MLModel</tt>.
--   
--   <a>$sel:mLModelId:UpdateMLModel'</a>, <a>updateMLModel_mLModelId</a> -
--   The ID assigned to the <tt>MLModel</tt> during creation.
newUpdateMLModel :: Text -> UpdateMLModel

-- | Represents the output of an <tt>UpdateMLModel</tt> operation.
--   
--   You can see the updated content by using the <tt>GetMLModel</tt>
--   operation.
--   
--   <i>See:</i> <a>newUpdateMLModelResponse</a> smart constructor.
data UpdateMLModelResponse
UpdateMLModelResponse' :: Maybe Text -> Int -> UpdateMLModelResponse

-- | Create a value of <a>UpdateMLModelResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mLModelId:UpdateMLModel'</a>,
--   <a>updateMLModelResponse_mLModelId</a> - The ID assigned to the
--   <tt>MLModel</tt> during creation. This value should be identical to
--   the value of the <tt>MLModelID</tt> in the request.
--   
--   <a>$sel:httpStatus:UpdateMLModelResponse'</a>,
--   <a>updateMLModelResponse_httpStatus</a> - The response's http status
--   code.
newUpdateMLModelResponse :: Int -> UpdateMLModelResponse

-- | <i>See:</i> <a>newCreateDataSourceFromS</a> smart constructor.
data CreateDataSourceFromS
CreateDataSourceFromS' :: Maybe Bool -> Maybe Text -> Text -> S3DataSpec -> CreateDataSourceFromS

-- | Create a value of <a>CreateDataSourceFromS</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:computeStatistics:CreateDataSourceFromS'</a>,
--   <a>createDataSourceFromS_computeStatistics</a> - The compute
--   statistics for a <tt>DataSource</tt>. The statistics are generated
--   from the observation data referenced by a <tt>DataSource</tt>. Amazon
--   ML uses the statistics internally during <tt>MLModel</tt> training.
--   This parameter must be set to <tt>true</tt> if the
--   @<tt>DataSource</tt><tt> needs to be used for </tt>MLModel@ training.
--   
--   <a>$sel:dataSourceName:CreateDataSourceFromS'</a>,
--   <a>createDataSourceFromS_dataSourceName</a> - A user-supplied name or
--   description of the <tt>DataSource</tt>.
--   
--   <a>$sel:dataSourceId:CreateDataSourceFromS'</a>,
--   <a>createDataSourceFromS_dataSourceId</a> - A user-supplied identifier
--   that uniquely identifies the <tt>DataSource</tt>.
--   
--   <a>$sel:dataSpec:CreateDataSourceFromS'</a>,
--   <a>createDataSourceFromS_dataSpec</a> - The data specification of a
--   <tt>DataSource</tt>:
--   
--   <ul>
--   <li>DataLocationS3 - The Amazon S3 location of the observation
--   data.</li>
--   <li>DataSchemaLocationS3 - The Amazon S3 location of the
--   <tt>DataSchema</tt>.</li>
--   <li>DataSchema - A JSON string representing the schema. This is not
--   required if <tt>DataSchemaUri</tt> is specified.</li>
--   <li>DataRearrangement - A JSON string that represents the splitting
--   and rearrangement requirements for the <tt>Datasource</tt>.Sample -
--   <tt>
--   "{\"splitting\":{\"percentBegin\":10,\"percentEnd\":60}}"</tt></li>
--   </ul>
newCreateDataSourceFromS :: Text -> S3DataSpec -> CreateDataSourceFromS

-- | Represents the output of a <tt>CreateDataSourceFromS3</tt> operation,
--   and is an acknowledgement that Amazon ML received the request.
--   
--   The <tt>CreateDataSourceFromS3</tt> operation is asynchronous. You can
--   poll for updates by using the <tt>GetBatchPrediction</tt> operation
--   and checking the <tt>Status</tt> parameter.
--   
--   <i>See:</i> <a>newCreateDataSourceFromSResponse</a> smart constructor.
data CreateDataSourceFromSResponse
CreateDataSourceFromSResponse' :: Maybe Text -> Int -> CreateDataSourceFromSResponse

-- | Create a value of <a>CreateDataSourceFromSResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataSourceId:CreateDataSourceFromS'</a>,
--   <a>createDataSourceFromSResponse_dataSourceId</a> - A user-supplied ID
--   that uniquely identifies the <tt>DataSource</tt>. This value should be
--   identical to the value of the <tt>DataSourceID</tt> in the request.
--   
--   <a>$sel:httpStatus:CreateDataSourceFromSResponse'</a>,
--   <a>createDataSourceFromSResponse_httpStatus</a> - The response's http
--   status code.
newCreateDataSourceFromSResponse :: Int -> CreateDataSourceFromSResponse

-- | <i>See:</i> <a>newDeleteMLModel</a> smart constructor.
data DeleteMLModel
DeleteMLModel' :: Text -> DeleteMLModel

-- | Create a value of <a>DeleteMLModel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mLModelId:DeleteMLModel'</a>, <a>deleteMLModel_mLModelId</a> -
--   A user-supplied ID that uniquely identifies the <tt>MLModel</tt>.
newDeleteMLModel :: Text -> DeleteMLModel

-- | Represents the output of a <tt>DeleteMLModel</tt> operation.
--   
--   You can use the <tt>GetMLModel</tt> operation and check the value of
--   the <tt>Status</tt> parameter to see whether an <tt>MLModel</tt> is
--   marked as <tt>DELETED</tt>.
--   
--   <i>See:</i> <a>newDeleteMLModelResponse</a> smart constructor.
data DeleteMLModelResponse
DeleteMLModelResponse' :: Maybe Text -> Int -> DeleteMLModelResponse

-- | Create a value of <a>DeleteMLModelResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mLModelId:DeleteMLModel'</a>,
--   <a>deleteMLModelResponse_mLModelId</a> - A user-supplied ID that
--   uniquely identifies the <tt>MLModel</tt>. This value should be
--   identical to the value of the <tt>MLModelID</tt> in the request.
--   
--   <a>$sel:httpStatus:DeleteMLModelResponse'</a>,
--   <a>deleteMLModelResponse_httpStatus</a> - The response's http status
--   code.
newDeleteMLModelResponse :: Int -> DeleteMLModelResponse

-- | <i>See:</i> <a>newUpdateDataSource</a> smart constructor.
data UpdateDataSource
UpdateDataSource' :: Text -> Text -> UpdateDataSource

-- | Create a value of <a>UpdateDataSource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataSourceId:UpdateDataSource'</a>,
--   <a>updateDataSource_dataSourceId</a> - The ID assigned to the
--   <tt>DataSource</tt> during creation.
--   
--   <a>$sel:dataSourceName:UpdateDataSource'</a>,
--   <a>updateDataSource_dataSourceName</a> - A new user-supplied name or
--   description of the <tt>DataSource</tt> that will replace the current
--   description.
newUpdateDataSource :: Text -> Text -> UpdateDataSource

-- | Represents the output of an <tt>UpdateDataSource</tt> operation.
--   
--   You can see the updated content by using the
--   <tt>GetBatchPrediction</tt> operation.
--   
--   <i>See:</i> <a>newUpdateDataSourceResponse</a> smart constructor.
data UpdateDataSourceResponse
UpdateDataSourceResponse' :: Maybe Text -> Int -> UpdateDataSourceResponse

-- | Create a value of <a>UpdateDataSourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataSourceId:UpdateDataSource'</a>,
--   <a>updateDataSourceResponse_dataSourceId</a> - The ID assigned to the
--   <tt>DataSource</tt> during creation. This value should be identical to
--   the value of the <tt>DataSourceID</tt> in the request.
--   
--   <a>$sel:httpStatus:UpdateDataSourceResponse'</a>,
--   <a>updateDataSourceResponse_httpStatus</a> - The response's http
--   status code.
newUpdateDataSourceResponse :: Int -> UpdateDataSourceResponse

-- | <i>See:</i> <a>newCreateDataSourceFromRedshift</a> smart constructor.
data CreateDataSourceFromRedshift
CreateDataSourceFromRedshift' :: Maybe Bool -> Maybe Text -> Text -> RedshiftDataSpec -> Text -> CreateDataSourceFromRedshift

-- | Create a value of <a>CreateDataSourceFromRedshift</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:computeStatistics:CreateDataSourceFromRedshift'</a>,
--   <a>createDataSourceFromRedshift_computeStatistics</a> - The compute
--   statistics for a <tt>DataSource</tt>. The statistics are generated
--   from the observation data referenced by a <tt>DataSource</tt>. Amazon
--   ML uses the statistics internally during <tt>MLModel</tt> training.
--   This parameter must be set to <tt>true</tt> if the <tt>DataSource</tt>
--   needs to be used for <tt>MLModel</tt> training.
--   
--   <a>$sel:dataSourceName:CreateDataSourceFromRedshift'</a>,
--   <a>createDataSourceFromRedshift_dataSourceName</a> - A user-supplied
--   name or description of the <tt>DataSource</tt>.
--   
--   <a>$sel:dataSourceId:CreateDataSourceFromRedshift'</a>,
--   <a>createDataSourceFromRedshift_dataSourceId</a> - A user-supplied ID
--   that uniquely identifies the <tt>DataSource</tt>.
--   
--   <a>$sel:dataSpec:CreateDataSourceFromRedshift'</a>,
--   <a>createDataSourceFromRedshift_dataSpec</a> - The data specification
--   of an Amazon Redshift <tt>DataSource</tt>:
--   
--   <ul>
--   <li>DatabaseInformation -<ul><li><tt>DatabaseName</tt> - The name of
--   the Amazon Redshift database.</li><li><tt> ClusterIdentifier</tt> -
--   The unique ID for the Amazon Redshift cluster.</li></ul></li>
--   <li>DatabaseCredentials - The AWS Identity and Access Management (IAM)
--   credentials that are used to connect to the Amazon Redshift
--   database.</li>
--   <li>SelectSqlQuery - The query that is used to retrieve the
--   observation data for the <tt>Datasource</tt>.</li>
--   <li>S3StagingLocation - The Amazon Simple Storage Service (Amazon S3)
--   location for staging Amazon Redshift data. The data retrieved from
--   Amazon Redshift using the <tt>SelectSqlQuery</tt> query is stored in
--   this location.</li>
--   <li>DataSchemaUri - The Amazon S3 location of the
--   <tt>DataSchema</tt>.</li>
--   <li>DataSchema - A JSON string representing the schema. This is not
--   required if <tt>DataSchemaUri</tt> is specified.</li>
--   <li>DataRearrangement - A JSON string that represents the splitting
--   and rearrangement requirements for the <tt>DataSource</tt>.Sample -
--   <tt>
--   "{\"splitting\":{\"percentBegin\":10,\"percentEnd\":60}}"</tt></li>
--   </ul>
--   
--   <a>$sel:roleARN:CreateDataSourceFromRedshift'</a>,
--   <a>createDataSourceFromRedshift_roleARN</a> - A fully specified role
--   Amazon Resource Name (ARN). Amazon ML assumes the role on behalf of
--   the user to create the following:
--   
--   <ul>
--   <li>A security group to allow Amazon ML to execute the
--   <tt>SelectSqlQuery</tt> query on an Amazon Redshift cluster</li>
--   <li>An Amazon S3 bucket policy to grant Amazon ML read/write
--   permissions on the <tt>S3StagingLocation</tt></li>
--   </ul>
newCreateDataSourceFromRedshift :: Text -> RedshiftDataSpec -> Text -> CreateDataSourceFromRedshift

-- | Represents the output of a <tt>CreateDataSourceFromRedshift</tt>
--   operation, and is an acknowledgement that Amazon ML received the
--   request.
--   
--   The <tt>CreateDataSourceFromRedshift</tt> operation is asynchronous.
--   You can poll for updates by using the <tt>GetBatchPrediction</tt>
--   operation and checking the <tt>Status</tt> parameter.
--   
--   <i>See:</i> <a>newCreateDataSourceFromRedshiftResponse</a> smart
--   constructor.
data CreateDataSourceFromRedshiftResponse
CreateDataSourceFromRedshiftResponse' :: Maybe Text -> Int -> CreateDataSourceFromRedshiftResponse

-- | Create a value of <a>CreateDataSourceFromRedshiftResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataSourceId:CreateDataSourceFromRedshift'</a>,
--   <a>createDataSourceFromRedshiftResponse_dataSourceId</a> - A
--   user-supplied ID that uniquely identifies the datasource. This value
--   should be identical to the value of the <tt>DataSourceID</tt> in the
--   request.
--   
--   <a>$sel:httpStatus:CreateDataSourceFromRedshiftResponse'</a>,
--   <a>createDataSourceFromRedshiftResponse_httpStatus</a> - The
--   response's http status code.
newCreateDataSourceFromRedshiftResponse :: Int -> CreateDataSourceFromRedshiftResponse

-- | <i>See:</i> <a>newDescribeTags</a> smart constructor.
data DescribeTags
DescribeTags' :: Text -> TaggableResourceType -> DescribeTags

-- | Create a value of <a>DescribeTags</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceId:DescribeTags'</a>, <a>describeTags_resourceId</a> -
--   The ID of the ML object. For example, <tt>exampleModelId</tt>.
--   
--   <a>$sel:resourceType:DescribeTags'</a>,
--   <a>describeTags_resourceType</a> - The type of the ML object.
newDescribeTags :: Text -> TaggableResourceType -> DescribeTags

-- | Amazon ML returns the following elements.
--   
--   <i>See:</i> <a>newDescribeTagsResponse</a> smart constructor.
data DescribeTagsResponse
DescribeTagsResponse' :: Maybe Text -> Maybe TaggableResourceType -> Maybe [Tag] -> Int -> DescribeTagsResponse

-- | Create a value of <a>DescribeTagsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceId:DescribeTags'</a>,
--   <a>describeTagsResponse_resourceId</a> - The ID of the tagged ML
--   object.
--   
--   <a>$sel:resourceType:DescribeTags'</a>,
--   <a>describeTagsResponse_resourceType</a> - The type of the tagged ML
--   object.
--   
--   <a>$sel:tags:DescribeTagsResponse'</a>,
--   <a>describeTagsResponse_tags</a> - A list of tags associated with the
--   ML object.
--   
--   <a>$sel:httpStatus:DescribeTagsResponse'</a>,
--   <a>describeTagsResponse_httpStatus</a> - The response's http status
--   code.
newDescribeTagsResponse :: Int -> DescribeTagsResponse

-- | <i>See:</i> <a>newDeleteDataSource</a> smart constructor.
data DeleteDataSource
DeleteDataSource' :: Text -> DeleteDataSource

-- | Create a value of <a>DeleteDataSource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataSourceId:DeleteDataSource'</a>,
--   <a>deleteDataSource_dataSourceId</a> - A user-supplied ID that
--   uniquely identifies the <tt>DataSource</tt>.
newDeleteDataSource :: Text -> DeleteDataSource

-- | Represents the output of a <tt>DeleteDataSource</tt> operation.
--   
--   <i>See:</i> <a>newDeleteDataSourceResponse</a> smart constructor.
data DeleteDataSourceResponse
DeleteDataSourceResponse' :: Maybe Text -> Int -> DeleteDataSourceResponse

-- | Create a value of <a>DeleteDataSourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataSourceId:DeleteDataSource'</a>,
--   <a>deleteDataSourceResponse_dataSourceId</a> - A user-supplied ID that
--   uniquely identifies the <tt>DataSource</tt>. This value should be
--   identical to the value of the <tt>DataSourceID</tt> in the request.
--   
--   <a>$sel:httpStatus:DeleteDataSourceResponse'</a>,
--   <a>deleteDataSourceResponse_httpStatus</a> - The response's http
--   status code.
newDeleteDataSourceResponse :: Int -> DeleteDataSourceResponse

-- | <i>See:</i> <a>newDescribeDataSources</a> smart constructor.
data DescribeDataSources
DescribeDataSources' :: Maybe Text -> Maybe Text -> Maybe SortOrder -> Maybe DataSourceFilterVariable -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> DescribeDataSources

-- | Create a value of <a>DescribeDataSources</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eq:DescribeDataSources'</a>, <a>describeDataSources_eq</a> -
--   The equal to operator. The <tt>DataSource</tt> results will have
--   <tt>FilterVariable</tt> values that exactly match the value specified
--   with <tt>EQ</tt>.
--   
--   <a>$sel:nextToken:DescribeDataSources'</a>,
--   <a>describeDataSources_nextToken</a> - The ID of the page in the
--   paginated results.
--   
--   <a>$sel:sortOrder:DescribeDataSources'</a>,
--   <a>describeDataSources_sortOrder</a> - A two-value parameter that
--   determines the sequence of the resulting list of <tt>DataSource</tt>.
--   
--   <ul>
--   <li><tt>asc</tt> - Arranges the list in ascending order (A-Z,
--   0-9).</li>
--   <li><tt>dsc</tt> - Arranges the list in descending order (Z-A,
--   9-0).</li>
--   </ul>
--   
--   Results are sorted by <tt>FilterVariable</tt>.
--   
--   <a>$sel:filterVariable:DescribeDataSources'</a>,
--   <a>describeDataSources_filterVariable</a> - Use one of the following
--   variables to filter a list of <tt>DataSource</tt>:
--   
--   <ul>
--   <li><tt>CreatedAt</tt> - Sets the search criteria to
--   <tt>DataSource</tt> creation dates.</li>
--   <li><tt>Status</tt> - Sets the search criteria to <tt>DataSource</tt>
--   statuses.</li>
--   <li><tt>Name</tt> - Sets the search criteria to the contents of
--   <tt>DataSource</tt> <tt>Name</tt>.</li>
--   <li><tt>DataUri</tt> - Sets the search criteria to the URI of data
--   files used to create the <tt>DataSource</tt>. The URI can identify
--   either a file or an Amazon Simple Storage Service (Amazon S3) bucket
--   or directory.</li>
--   <li><tt>IAMUser</tt> - Sets the search criteria to the user account
--   that invoked the <tt>DataSource</tt> creation.</li>
--   </ul>
--   
--   <a>$sel:gt:DescribeDataSources'</a>, <a>describeDataSources_gt</a> -
--   The greater than operator. The <tt>DataSource</tt> results will have
--   <tt>FilterVariable</tt> values that are greater than the value
--   specified with <tt>GT</tt>.
--   
--   <a>$sel:ne:DescribeDataSources'</a>, <a>describeDataSources_ne</a> -
--   The not equal to operator. The <tt>DataSource</tt> results will have
--   <tt>FilterVariable</tt> values not equal to the value specified with
--   <tt>NE</tt>.
--   
--   <a>$sel:prefix:DescribeDataSources'</a>,
--   <a>describeDataSources_prefix</a> - A string that is found at the
--   beginning of a variable, such as <tt>Name</tt> or <tt>Id</tt>.
--   
--   For example, a <tt>DataSource</tt> could have the <tt>Name</tt>
--   <tt>2014-09-09-HolidayGiftMailer</tt>. To search for this
--   <tt>DataSource</tt>, select <tt>Name</tt> for the
--   <tt>FilterVariable</tt> and any of the following strings for the
--   <tt>Prefix</tt>:
--   
--   <ul>
--   <li>2014-09</li>
--   <li>2014-09-09</li>
--   <li>2014-09-09-Holiday</li>
--   </ul>
--   
--   <a>$sel:ge:DescribeDataSources'</a>, <a>describeDataSources_ge</a> -
--   The greater than or equal to operator. The <tt>DataSource</tt> results
--   will have <tt>FilterVariable</tt> values that are greater than or
--   equal to the value specified with <tt>GE</tt>.
--   
--   <a>$sel:le:DescribeDataSources'</a>, <a>describeDataSources_le</a> -
--   The less than or equal to operator. The <tt>DataSource</tt> results
--   will have <tt>FilterVariable</tt> values that are less than or equal
--   to the value specified with <tt>LE</tt>.
--   
--   <a>$sel:lt:DescribeDataSources'</a>, <a>describeDataSources_lt</a> -
--   The less than operator. The <tt>DataSource</tt> results will have
--   <tt>FilterVariable</tt> values that are less than the value specified
--   with <tt>LT</tt>.
--   
--   <a>$sel:limit:DescribeDataSources'</a>,
--   <a>describeDataSources_limit</a> - The maximum number of
--   <tt>DataSource</tt> to include in the result.
newDescribeDataSources :: DescribeDataSources

-- | Represents the query results from a DescribeDataSources operation. The
--   content is essentially a list of <tt>DataSource</tt>.
--   
--   <i>See:</i> <a>newDescribeDataSourcesResponse</a> smart constructor.
data DescribeDataSourcesResponse
DescribeDataSourcesResponse' :: Maybe Text -> Maybe [DataSource] -> Int -> DescribeDataSourcesResponse

-- | Create a value of <a>DescribeDataSourcesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeDataSources'</a>,
--   <a>describeDataSourcesResponse_nextToken</a> - An ID of the next page
--   in the paginated results that indicates at least one more page
--   follows.
--   
--   <a>$sel:results:DescribeDataSourcesResponse'</a>,
--   <a>describeDataSourcesResponse_results</a> - A list of
--   <tt>DataSource</tt> that meet the search criteria.
--   
--   <a>$sel:httpStatus:DescribeDataSourcesResponse'</a>,
--   <a>describeDataSourcesResponse_httpStatus</a> - The response's http
--   status code.
newDescribeDataSourcesResponse :: Int -> DescribeDataSourcesResponse

-- | <i>See:</i> <a>newDeleteTags</a> smart constructor.
data DeleteTags
DeleteTags' :: [Text] -> Text -> TaggableResourceType -> DeleteTags

-- | Create a value of <a>DeleteTags</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tagKeys:DeleteTags'</a>, <a>deleteTags_tagKeys</a> - One or
--   more tags to delete.
--   
--   <a>$sel:resourceId:DeleteTags'</a>, <a>deleteTags_resourceId</a> - The
--   ID of the tagged ML object. For example, <tt>exampleModelId</tt>.
--   
--   <a>$sel:resourceType:DeleteTags'</a>, <a>deleteTags_resourceType</a> -
--   The type of the tagged ML object.
newDeleteTags :: Text -> TaggableResourceType -> DeleteTags

-- | Amazon ML returns the following elements.
--   
--   <i>See:</i> <a>newDeleteTagsResponse</a> smart constructor.
data DeleteTagsResponse
DeleteTagsResponse' :: Maybe Text -> Maybe TaggableResourceType -> Int -> DeleteTagsResponse

-- | Create a value of <a>DeleteTagsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceId:DeleteTags'</a>,
--   <a>deleteTagsResponse_resourceId</a> - The ID of the ML object from
--   which tags were deleted.
--   
--   <a>$sel:resourceType:DeleteTags'</a>,
--   <a>deleteTagsResponse_resourceType</a> - The type of the ML object
--   from which tags were deleted.
--   
--   <a>$sel:httpStatus:DeleteTagsResponse'</a>,
--   <a>deleteTagsResponse_httpStatus</a> - The response's http status
--   code.
newDeleteTagsResponse :: Int -> DeleteTagsResponse

-- | <i>See:</i> <a>newDescribeEvaluations</a> smart constructor.
data DescribeEvaluations
DescribeEvaluations' :: Maybe Text -> Maybe Text -> Maybe SortOrder -> Maybe EvaluationFilterVariable -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> DescribeEvaluations

-- | Create a value of <a>DescribeEvaluations</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eq:DescribeEvaluations'</a>, <a>describeEvaluations_eq</a> -
--   The equal to operator. The <tt>Evaluation</tt> results will have
--   <tt>FilterVariable</tt> values that exactly match the value specified
--   with <tt>EQ</tt>.
--   
--   <a>$sel:nextToken:DescribeEvaluations'</a>,
--   <a>describeEvaluations_nextToken</a> - The ID of the page in the
--   paginated results.
--   
--   <a>$sel:sortOrder:DescribeEvaluations'</a>,
--   <a>describeEvaluations_sortOrder</a> - A two-value parameter that
--   determines the sequence of the resulting list of <tt>Evaluation</tt>.
--   
--   <ul>
--   <li><tt>asc</tt> - Arranges the list in ascending order (A-Z,
--   0-9).</li>
--   <li><tt>dsc</tt> - Arranges the list in descending order (Z-A,
--   9-0).</li>
--   </ul>
--   
--   Results are sorted by <tt>FilterVariable</tt>.
--   
--   <a>$sel:filterVariable:DescribeEvaluations'</a>,
--   <a>describeEvaluations_filterVariable</a> - Use one of the following
--   variable to filter a list of <tt>Evaluation</tt> objects:
--   
--   <ul>
--   <li><tt>CreatedAt</tt> - Sets the search criteria to the
--   <tt>Evaluation</tt> creation date.</li>
--   <li><tt>Status</tt> - Sets the search criteria to the
--   <tt>Evaluation</tt> status.</li>
--   <li><tt>Name</tt> - Sets the search criteria to the contents of
--   <tt>Evaluation</tt> ____ <tt>Name</tt>.</li>
--   <li><tt>IAMUser</tt> - Sets the search criteria to the user account
--   that invoked an <tt>Evaluation</tt>.</li>
--   <li><tt>MLModelId</tt> - Sets the search criteria to the
--   <tt>MLModel</tt> that was evaluated.</li>
--   <li><tt>DataSourceId</tt> - Sets the search criteria to the
--   <tt>DataSource</tt> used in <tt>Evaluation</tt>.</li>
--   <li><tt>DataUri</tt> - Sets the search criteria to the data file(s)
--   used in <tt>Evaluation</tt>. The URL can identify either a file or an
--   Amazon Simple Storage Solution (Amazon S3) bucket or directory.</li>
--   </ul>
--   
--   <a>$sel:gt:DescribeEvaluations'</a>, <a>describeEvaluations_gt</a> -
--   The greater than operator. The <tt>Evaluation</tt> results will have
--   <tt>FilterVariable</tt> values that are greater than the value
--   specified with <tt>GT</tt>.
--   
--   <a>$sel:ne:DescribeEvaluations'</a>, <a>describeEvaluations_ne</a> -
--   The not equal to operator. The <tt>Evaluation</tt> results will have
--   <tt>FilterVariable</tt> values not equal to the value specified with
--   <tt>NE</tt>.
--   
--   <a>$sel:prefix:DescribeEvaluations'</a>,
--   <a>describeEvaluations_prefix</a> - A string that is found at the
--   beginning of a variable, such as <tt>Name</tt> or <tt>Id</tt>.
--   
--   For example, an <tt>Evaluation</tt> could have the <tt>Name</tt>
--   <tt>2014-09-09-HolidayGiftMailer</tt>. To search for this
--   <tt>Evaluation</tt>, select <tt>Name</tt> for the
--   <tt>FilterVariable</tt> and any of the following strings for the
--   <tt>Prefix</tt>:
--   
--   <ul>
--   <li>2014-09</li>
--   <li>2014-09-09</li>
--   <li>2014-09-09-Holiday</li>
--   </ul>
--   
--   <a>$sel:ge:DescribeEvaluations'</a>, <a>describeEvaluations_ge</a> -
--   The greater than or equal to operator. The <tt>Evaluation</tt> results
--   will have <tt>FilterVariable</tt> values that are greater than or
--   equal to the value specified with <tt>GE</tt>.
--   
--   <a>$sel:le:DescribeEvaluations'</a>, <a>describeEvaluations_le</a> -
--   The less than or equal to operator. The <tt>Evaluation</tt> results
--   will have <tt>FilterVariable</tt> values that are less than or equal
--   to the value specified with <tt>LE</tt>.
--   
--   <a>$sel:lt:DescribeEvaluations'</a>, <a>describeEvaluations_lt</a> -
--   The less than operator. The <tt>Evaluation</tt> results will have
--   <tt>FilterVariable</tt> values that are less than the value specified
--   with <tt>LT</tt>.
--   
--   <a>$sel:limit:DescribeEvaluations'</a>,
--   <a>describeEvaluations_limit</a> - The maximum number of
--   <tt>Evaluation</tt> to include in the result.
newDescribeEvaluations :: DescribeEvaluations

-- | Represents the query results from a <tt>DescribeEvaluations</tt>
--   operation. The content is essentially a list of <tt>Evaluation</tt>.
--   
--   <i>See:</i> <a>newDescribeEvaluationsResponse</a> smart constructor.
data DescribeEvaluationsResponse
DescribeEvaluationsResponse' :: Maybe Text -> Maybe [Evaluation] -> Int -> DescribeEvaluationsResponse

-- | Create a value of <a>DescribeEvaluationsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeEvaluations'</a>,
--   <a>describeEvaluationsResponse_nextToken</a> - The ID of the next page
--   in the paginated results that indicates at least one more page
--   follows.
--   
--   <a>$sel:results:DescribeEvaluationsResponse'</a>,
--   <a>describeEvaluationsResponse_results</a> - A list of
--   <tt>Evaluation</tt> that meet the search criteria.
--   
--   <a>$sel:httpStatus:DescribeEvaluationsResponse'</a>,
--   <a>describeEvaluationsResponse_httpStatus</a> - The response's http
--   status code.
newDescribeEvaluationsResponse :: Int -> DescribeEvaluationsResponse

-- | <i>See:</i> <a>newGetMLModel</a> smart constructor.
data GetMLModel
GetMLModel' :: Maybe Bool -> Text -> GetMLModel

-- | Create a value of <a>GetMLModel</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:verbose:GetMLModel'</a>, <a>getMLModel_verbose</a> - Specifies
--   whether the <tt>GetMLModel</tt> operation should return
--   <tt>Recipe</tt>.
--   
--   If true, <tt>Recipe</tt> is returned.
--   
--   If false, <tt>Recipe</tt> is not returned.
--   
--   <a>$sel:mLModelId:GetMLModel'</a>, <a>getMLModel_mLModelId</a> - The
--   ID assigned to the <tt>MLModel</tt> at creation.
newGetMLModel :: Text -> GetMLModel

-- | Represents the output of a <tt>GetMLModel</tt> operation, and provides
--   detailed information about a <tt>MLModel</tt>.
--   
--   <i>See:</i> <a>newGetMLModelResponse</a> smart constructor.
data GetMLModelResponse
GetMLModelResponse' :: Maybe EntityStatus -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe RealtimeEndpointInfo -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Double -> Maybe MLModelType -> Maybe Integer -> Maybe Text -> Maybe Text -> Maybe Integer -> Maybe Text -> Maybe POSIX -> Maybe Text -> Int -> GetMLModelResponse

-- | Create a value of <a>GetMLModelResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:GetMLModelResponse'</a>,
--   <a>getMLModelResponse_status</a> - The current status of the
--   <tt>MLModel</tt>. This element can have one of the following values:
--   
--   <ul>
--   <li><tt>PENDING</tt> - Amazon Machine Learning (Amazon ML) submitted a
--   request to describe a <tt>MLModel</tt>.</li>
--   <li><tt>INPROGRESS</tt> - The request is processing.</li>
--   <li><tt>FAILED</tt> - The request did not run to completion. The ML
--   model isn't usable.</li>
--   <li><tt>COMPLETED</tt> - The request completed successfully.</li>
--   <li><tt>DELETED</tt> - The <tt>MLModel</tt> is marked as deleted. It
--   isn't usable.</li>
--   </ul>
--   
--   <a>$sel:startedAt:GetMLModelResponse'</a>,
--   <a>getMLModelResponse_startedAt</a> - The epoch time when Amazon
--   Machine Learning marked the <tt>MLModel</tt> as <tt>INPROGRESS</tt>.
--   <tt>StartedAt</tt> isn't available if the <tt>MLModel</tt> is in the
--   <tt>PENDING</tt> state.
--   
--   <a>$sel:schema:GetMLModelResponse'</a>,
--   <a>getMLModelResponse_schema</a> - The schema used by all of the data
--   files referenced by the <tt>DataSource</tt>.
--   
--   <b>Note:</b> This parameter is provided as part of the verbose format.
--   
--   <a>$sel:message:GetMLModelResponse'</a>,
--   <a>getMLModelResponse_message</a> - A description of the most recent
--   details about accessing the <tt>MLModel</tt>.
--   
--   <a>$sel:recipe:GetMLModelResponse'</a>,
--   <a>getMLModelResponse_recipe</a> - The recipe to use when training the
--   <tt>MLModel</tt>. The <tt>Recipe</tt> provides detailed information
--   about the observation data to use during training, and manipulations
--   to perform on the observation data during training.
--   
--   <b>Note:</b> This parameter is provided as part of the verbose format.
--   
--   <a>$sel:createdAt:GetMLModelResponse'</a>,
--   <a>getMLModelResponse_createdAt</a> - The time that the
--   <tt>MLModel</tt> was created. The time is expressed in epoch time.
--   
--   <a>$sel:scoreThresholdLastUpdatedAt:GetMLModelResponse'</a>,
--   <a>getMLModelResponse_scoreThresholdLastUpdatedAt</a> - The time of
--   the most recent edit to the <tt>ScoreThreshold</tt>. The time is
--   expressed in epoch time.
--   
--   <a>$sel:endpointInfo:GetMLModelResponse'</a>,
--   <a>getMLModelResponse_endpointInfo</a> - The current endpoint of the
--   <tt>MLModel</tt>
--   
--   <a>$sel:trainingParameters:GetMLModelResponse'</a>,
--   <a>getMLModelResponse_trainingParameters</a> - A list of the training
--   parameters in the <tt>MLModel</tt>. The list is implemented as a map
--   of key-value pairs.
--   
--   The following is the current set of training parameters:
--   
--   <ul>
--   <li><tt>sgd.maxMLModelSizeInBytes</tt> - The maximum allowed size of
--   the model. Depending on the input data, the size of the model might
--   affect its performance.The value is an integer that ranges from
--   <tt>100000</tt> to <tt>2147483648</tt>. The default value is
--   <tt>33554432</tt>.</li>
--   <li><tt>sgd.maxPasses</tt> - The number of times that the training
--   process traverses the observations to build the <tt>MLModel</tt>. The
--   value is an integer that ranges from <tt>1</tt> to <tt>10000</tt>. The
--   default value is <tt>10</tt>.</li>
--   <li><tt>sgd.shuffleType</tt> - Whether Amazon ML shuffles the training
--   data. Shuffling data improves a model's ability to find the optimal
--   solution for a variety of data types. The valid values are
--   <tt>auto</tt> and <tt>none</tt>. The default value is <tt>none</tt>.
--   We strongly recommend that you shuffle your data.</li>
--   <li><tt>sgd.l1RegularizationAmount</tt> - The coefficient
--   regularization L1 norm. It controls overfitting the data by penalizing
--   large coefficients. This tends to drive coefficients to zero,
--   resulting in a sparse feature set. If you use this parameter, start by
--   specifying a small value, such as <tt>1.0E-08</tt>.The value is a
--   double that ranges from <tt>0</tt> to <tt>MAX_DOUBLE</tt>. The default
--   is to not use L1 normalization. This parameter can't be used when
--   <tt>L2</tt> is specified. Use this parameter sparingly.</li>
--   <li><tt>sgd.l2RegularizationAmount</tt> - The coefficient
--   regularization L2 norm. It controls overfitting the data by penalizing
--   large coefficients. This tends to drive coefficients to small, nonzero
--   values. If you use this parameter, start by specifying a small value,
--   such as <tt>1.0E-08</tt>.The value is a double that ranges from
--   <tt>0</tt> to <tt>MAX_DOUBLE</tt>. The default is to not use L2
--   normalization. This parameter can't be used when <tt>L1</tt> is
--   specified. Use this parameter sparingly.</li>
--   </ul>
--   
--   <a>$sel:name:GetMLModelResponse'</a>, <a>getMLModelResponse_name</a> -
--   A user-supplied name or description of the <tt>MLModel</tt>.
--   
--   <a>$sel:createdByIamUser:GetMLModelResponse'</a>,
--   <a>getMLModelResponse_createdByIamUser</a> - The AWS user account from
--   which the <tt>MLModel</tt> was created. The account type can be either
--   an AWS root account or an AWS Identity and Access Management (IAM)
--   user account.
--   
--   <a>$sel:finishedAt:GetMLModelResponse'</a>,
--   <a>getMLModelResponse_finishedAt</a> - The epoch time when Amazon
--   Machine Learning marked the <tt>MLModel</tt> as <tt>COMPLETED</tt> or
--   <tt>FAILED</tt>. <tt>FinishedAt</tt> is only available when the
--   <tt>MLModel</tt> is in the <tt>COMPLETED</tt> or <tt>FAILED</tt>
--   state.
--   
--   <a>$sel:scoreThreshold:GetMLModelResponse'</a>,
--   <a>getMLModelResponse_scoreThreshold</a> - The scoring threshold is
--   used in binary classification <tt>MLModel</tt> models. It marks the
--   boundary between a positive prediction and a negative prediction.
--   
--   Output values greater than or equal to the threshold receive a
--   positive result from the MLModel, such as <tt>true</tt>. Output values
--   less than the threshold receive a negative response from the MLModel,
--   such as <tt>false</tt>.
--   
--   <a>$sel:mLModelType:GetMLModelResponse'</a>,
--   <a>getMLModelResponse_mLModelType</a> - Identifies the
--   <tt>MLModel</tt> category. The following are the available types:
--   
--   <ul>
--   <li>REGRESSION -- Produces a numeric result. For example, "What price
--   should a house be listed at?"</li>
--   <li>BINARY -- Produces one of two possible results. For example, "Is
--   this an e-commerce website?"</li>
--   <li>MULTICLASS -- Produces one of several possible results. For
--   example, "Is this a HIGH, LOW or MEDIUM risk trade?"</li>
--   </ul>
--   
--   <a>$sel:sizeInBytes:GetMLModelResponse'</a>,
--   <a>getMLModelResponse_sizeInBytes</a> - Undocumented member.
--   
--   <a>$sel:mLModelId:GetMLModel'</a>, <a>getMLModelResponse_mLModelId</a>
--   - The MLModel ID, which is same as the <tt>MLModelId</tt> in the
--   request.
--   
--   <a>$sel:inputDataLocationS3:GetMLModelResponse'</a>,
--   <a>getMLModelResponse_inputDataLocationS3</a> - The location of the
--   data file or directory in Amazon Simple Storage Service (Amazon S3).
--   
--   <a>$sel:computeTime:GetMLModelResponse'</a>,
--   <a>getMLModelResponse_computeTime</a> - The approximate CPU time in
--   milliseconds that Amazon Machine Learning spent processing the
--   <tt>MLModel</tt>, normalized and scaled on computation resources.
--   <tt>ComputeTime</tt> is only available if the <tt>MLModel</tt> is in
--   the <tt>COMPLETED</tt> state.
--   
--   <a>$sel:trainingDataSourceId:GetMLModelResponse'</a>,
--   <a>getMLModelResponse_trainingDataSourceId</a> - The ID of the
--   training <tt>DataSource</tt>.
--   
--   <a>$sel:lastUpdatedAt:GetMLModelResponse'</a>,
--   <a>getMLModelResponse_lastUpdatedAt</a> - The time of the most recent
--   edit to the <tt>MLModel</tt>. The time is expressed in epoch time.
--   
--   <a>$sel:logUri:GetMLModelResponse'</a>,
--   <a>getMLModelResponse_logUri</a> - A link to the file that contains
--   logs of the <tt>CreateMLModel</tt> operation.
--   
--   <a>$sel:httpStatus:GetMLModelResponse'</a>,
--   <a>getMLModelResponse_httpStatus</a> - The response's http status
--   code.
newGetMLModelResponse :: Int -> GetMLModelResponse

-- | <i>See:</i> <a>newGetEvaluation</a> smart constructor.
data GetEvaluation
GetEvaluation' :: Text -> GetEvaluation

-- | Create a value of <a>GetEvaluation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:evaluationId:GetEvaluation'</a>,
--   <a>getEvaluation_evaluationId</a> - The ID of the <tt>Evaluation</tt>
--   to retrieve. The evaluation of each <tt>MLModel</tt> is recorded and
--   cataloged. The ID provides the means to access the information.
newGetEvaluation :: Text -> GetEvaluation

-- | Represents the output of a <tt>GetEvaluation</tt> operation and
--   describes an <tt>Evaluation</tt>.
--   
--   <i>See:</i> <a>newGetEvaluationResponse</a> smart constructor.
data GetEvaluationResponse
GetEvaluationResponse' :: Maybe PerformanceMetrics -> Maybe EntityStatus -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Integer -> Maybe POSIX -> Maybe Text -> Int -> GetEvaluationResponse

-- | Create a value of <a>GetEvaluationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:performanceMetrics:GetEvaluationResponse'</a>,
--   <a>getEvaluationResponse_performanceMetrics</a> - Measurements of how
--   well the <tt>MLModel</tt> performed using observations referenced by
--   the <tt>DataSource</tt>. One of the following metric is returned based
--   on the type of the <tt>MLModel</tt>:
--   
--   <ul>
--   <li>BinaryAUC: A binary <tt>MLModel</tt> uses the Area Under the Curve
--   (AUC) technique to measure performance.</li>
--   <li>RegressionRMSE: A regression <tt>MLModel</tt> uses the Root Mean
--   Square Error (RMSE) technique to measure performance. RMSE measures
--   the difference between predicted and actual values for a single
--   variable.</li>
--   <li>MulticlassAvgFScore: A multiclass <tt>MLModel</tt> uses the F1
--   score technique to measure performance.</li>
--   </ul>
--   
--   For more information about performance metrics, please see the
--   <a>Amazon Machine Learning Developer Guide</a>.
--   
--   <a>$sel:status:GetEvaluationResponse'</a>,
--   <a>getEvaluationResponse_status</a> - The status of the evaluation.
--   This element can have one of the following values:
--   
--   <ul>
--   <li><tt>PENDING</tt> - Amazon Machine Language (Amazon ML) submitted a
--   request to evaluate an <tt>MLModel</tt>.</li>
--   <li><tt>INPROGRESS</tt> - The evaluation is underway.</li>
--   <li><tt>FAILED</tt> - The request to evaluate an <tt>MLModel</tt> did
--   not run to completion. It is not usable.</li>
--   <li><tt>COMPLETED</tt> - The evaluation process completed
--   successfully.</li>
--   <li><tt>DELETED</tt> - The <tt>Evaluation</tt> is marked as deleted.
--   It is not usable.</li>
--   </ul>
--   
--   <a>$sel:startedAt:GetEvaluationResponse'</a>,
--   <a>getEvaluationResponse_startedAt</a> - The epoch time when Amazon
--   Machine Learning marked the <tt>Evaluation</tt> as
--   <tt>INPROGRESS</tt>. <tt>StartedAt</tt> isn't available if the
--   <tt>Evaluation</tt> is in the <tt>PENDING</tt> state.
--   
--   <a>$sel:evaluationDataSourceId:GetEvaluationResponse'</a>,
--   <a>getEvaluationResponse_evaluationDataSourceId</a> - The
--   <tt>DataSource</tt> used for this evaluation.
--   
--   <a>$sel:message:GetEvaluationResponse'</a>,
--   <a>getEvaluationResponse_message</a> - A description of the most
--   recent details about evaluating the <tt>MLModel</tt>.
--   
--   <a>$sel:createdAt:GetEvaluationResponse'</a>,
--   <a>getEvaluationResponse_createdAt</a> - The time that the
--   <tt>Evaluation</tt> was created. The time is expressed in epoch time.
--   
--   <a>$sel:name:GetEvaluationResponse'</a>,
--   <a>getEvaluationResponse_name</a> - A user-supplied name or
--   description of the <tt>Evaluation</tt>.
--   
--   <a>$sel:createdByIamUser:GetEvaluationResponse'</a>,
--   <a>getEvaluationResponse_createdByIamUser</a> - The AWS user account
--   that invoked the evaluation. The account type can be either an AWS
--   root account or an AWS Identity and Access Management (IAM) user
--   account.
--   
--   <a>$sel:finishedAt:GetEvaluationResponse'</a>,
--   <a>getEvaluationResponse_finishedAt</a> - The epoch time when Amazon
--   Machine Learning marked the <tt>Evaluation</tt> as <tt>COMPLETED</tt>
--   or <tt>FAILED</tt>. <tt>FinishedAt</tt> is only available when the
--   <tt>Evaluation</tt> is in the <tt>COMPLETED</tt> or <tt>FAILED</tt>
--   state.
--   
--   <a>$sel:mLModelId:GetEvaluationResponse'</a>,
--   <a>getEvaluationResponse_mLModelId</a> - The ID of the
--   <tt>MLModel</tt> that was the focus of the evaluation.
--   
--   <a>$sel:evaluationId:GetEvaluation'</a>,
--   <a>getEvaluationResponse_evaluationId</a> - The evaluation ID which is
--   same as the <tt>EvaluationId</tt> in the request.
--   
--   <a>$sel:inputDataLocationS3:GetEvaluationResponse'</a>,
--   <a>getEvaluationResponse_inputDataLocationS3</a> - The location of the
--   data file or directory in Amazon Simple Storage Service (Amazon S3).
--   
--   <a>$sel:computeTime:GetEvaluationResponse'</a>,
--   <a>getEvaluationResponse_computeTime</a> - The approximate CPU time in
--   milliseconds that Amazon Machine Learning spent processing the
--   <tt>Evaluation</tt>, normalized and scaled on computation resources.
--   <tt>ComputeTime</tt> is only available if the <tt>Evaluation</tt> is
--   in the <tt>COMPLETED</tt> state.
--   
--   <a>$sel:lastUpdatedAt:GetEvaluationResponse'</a>,
--   <a>getEvaluationResponse_lastUpdatedAt</a> - The time of the most
--   recent edit to the <tt>Evaluation</tt>. The time is expressed in epoch
--   time.
--   
--   <a>$sel:logUri:GetEvaluationResponse'</a>,
--   <a>getEvaluationResponse_logUri</a> - A link to the file that contains
--   logs of the <tt>CreateEvaluation</tt> operation.
--   
--   <a>$sel:httpStatus:GetEvaluationResponse'</a>,
--   <a>getEvaluationResponse_httpStatus</a> - The response's http status
--   code.
newGetEvaluationResponse :: Int -> GetEvaluationResponse

-- | <i>See:</i> <a>newAddTags</a> smart constructor.
data AddTags
AddTags' :: [Tag] -> Text -> TaggableResourceType -> AddTags

-- | Create a value of <a>AddTags</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:AddTags'</a>, <a>addTags_tags</a> - The key-value pairs
--   to use to create tags. If you specify a key without specifying a
--   value, Amazon ML creates a tag with the specified key and a value of
--   null.
--   
--   <a>$sel:resourceId:AddTags'</a>, <a>addTags_resourceId</a> - The ID of
--   the ML object to tag. For example, <tt>exampleModelId</tt>.
--   
--   <a>$sel:resourceType:AddTags'</a>, <a>addTags_resourceType</a> - The
--   type of the ML object to tag.
newAddTags :: Text -> TaggableResourceType -> AddTags

-- | Amazon ML returns the following elements.
--   
--   <i>See:</i> <a>newAddTagsResponse</a> smart constructor.
data AddTagsResponse
AddTagsResponse' :: Maybe Text -> Maybe TaggableResourceType -> Int -> AddTagsResponse

-- | Create a value of <a>AddTagsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceId:AddTags'</a>, <a>addTagsResponse_resourceId</a> -
--   The ID of the ML object that was tagged.
--   
--   <a>$sel:resourceType:AddTags'</a>, <a>addTagsResponse_resourceType</a>
--   - The type of the ML object that was tagged.
--   
--   <a>$sel:httpStatus:AddTagsResponse'</a>,
--   <a>addTagsResponse_httpStatus</a> - The response's http status code.
newAddTagsResponse :: Int -> AddTagsResponse

-- | <i>See:</i> <a>newDeleteRealtimeEndpoint</a> smart constructor.
data DeleteRealtimeEndpoint
DeleteRealtimeEndpoint' :: Text -> DeleteRealtimeEndpoint

-- | Create a value of <a>DeleteRealtimeEndpoint</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mLModelId:DeleteRealtimeEndpoint'</a>,
--   <a>deleteRealtimeEndpoint_mLModelId</a> - The ID assigned to the
--   <tt>MLModel</tt> during creation.
newDeleteRealtimeEndpoint :: Text -> DeleteRealtimeEndpoint

-- | Represents the output of an <tt>DeleteRealtimeEndpoint</tt> operation.
--   
--   The result contains the <tt>MLModelId</tt> and the endpoint
--   information for the <tt>MLModel</tt>.
--   
--   <i>See:</i> <a>newDeleteRealtimeEndpointResponse</a> smart
--   constructor.
data DeleteRealtimeEndpointResponse
DeleteRealtimeEndpointResponse' :: Maybe RealtimeEndpointInfo -> Maybe Text -> Int -> DeleteRealtimeEndpointResponse

-- | Create a value of <a>DeleteRealtimeEndpointResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:realtimeEndpointInfo:DeleteRealtimeEndpointResponse'</a>,
--   <a>deleteRealtimeEndpointResponse_realtimeEndpointInfo</a> - The
--   endpoint information of the <tt>MLModel</tt>
--   
--   <a>$sel:mLModelId:DeleteRealtimeEndpoint'</a>,
--   <a>deleteRealtimeEndpointResponse_mLModelId</a> - A user-supplied ID
--   that uniquely identifies the <tt>MLModel</tt>. This value should be
--   identical to the value of the <tt>MLModelId</tt> in the request.
--   
--   <a>$sel:httpStatus:DeleteRealtimeEndpointResponse'</a>,
--   <a>deleteRealtimeEndpointResponse_httpStatus</a> - The response's http
--   status code.
newDeleteRealtimeEndpointResponse :: Int -> DeleteRealtimeEndpointResponse

-- | <i>See:</i> <a>newCreateDataSourceFromRDS</a> smart constructor.
data CreateDataSourceFromRDS
CreateDataSourceFromRDS' :: Maybe Bool -> Maybe Text -> Text -> RDSDataSpec -> Text -> CreateDataSourceFromRDS

-- | Create a value of <a>CreateDataSourceFromRDS</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:computeStatistics:CreateDataSourceFromRDS'</a>,
--   <a>createDataSourceFromRDS_computeStatistics</a> - The compute
--   statistics for a <tt>DataSource</tt>. The statistics are generated
--   from the observation data referenced by a <tt>DataSource</tt>. Amazon
--   ML uses the statistics internally during <tt>MLModel</tt> training.
--   This parameter must be set to <tt>true</tt> if the
--   @<tt>DataSource</tt><tt> needs to be used for </tt>MLModel@ training.
--   
--   <a>$sel:dataSourceName:CreateDataSourceFromRDS'</a>,
--   <a>createDataSourceFromRDS_dataSourceName</a> - A user-supplied name
--   or description of the <tt>DataSource</tt>.
--   
--   <a>$sel:dataSourceId:CreateDataSourceFromRDS'</a>,
--   <a>createDataSourceFromRDS_dataSourceId</a> - A user-supplied ID that
--   uniquely identifies the <tt>DataSource</tt>. Typically, an Amazon
--   Resource Number (ARN) becomes the ID for a <tt>DataSource</tt>.
--   
--   <a>$sel:rDSData:CreateDataSourceFromRDS'</a>,
--   <a>createDataSourceFromRDS_rDSData</a> - The data specification of an
--   Amazon RDS <tt>DataSource</tt>:
--   
--   <ul>
--   <li>DatabaseInformation -<ul><li><tt>DatabaseName</tt> - The name of
--   the Amazon RDS database.</li><li><tt>InstanceIdentifier </tt> - A
--   unique identifier for the Amazon RDS database instance.</li></ul></li>
--   <li>DatabaseCredentials - AWS Identity and Access Management (IAM)
--   credentials that are used to connect to the Amazon RDS database.</li>
--   <li>ResourceRole - A role (DataPipelineDefaultResourceRole) assumed by
--   an EC2 instance to carry out the copy task from Amazon RDS to Amazon
--   Simple Storage Service (Amazon S3). For more information, see <a>Role
--   templates</a> for data pipelines.</li>
--   <li>ServiceRole - A role (DataPipelineDefaultRole) assumed by the AWS
--   Data Pipeline service to monitor the progress of the copy task from
--   Amazon RDS to Amazon S3. For more information, see <a>Role
--   templates</a> for data pipelines.</li>
--   <li>SecurityInfo - The security information to use to access an RDS DB
--   instance. You need to set up appropriate ingress rules for the
--   security entity IDs provided to allow access to the Amazon RDS
--   instance. Specify a [<tt>SubnetId</tt>, <tt>SecurityGroupIds</tt>]
--   pair for a VPC-based RDS DB instance.</li>
--   <li>SelectSqlQuery - A query that is used to retrieve the observation
--   data for the <tt>Datasource</tt>.</li>
--   <li>S3StagingLocation - The Amazon S3 location for staging Amazon RDS
--   data. The data retrieved from Amazon RDS using <tt>SelectSqlQuery</tt>
--   is stored in this location.</li>
--   <li>DataSchemaUri - The Amazon S3 location of the
--   <tt>DataSchema</tt>.</li>
--   <li>DataSchema - A JSON string representing the schema. This is not
--   required if <tt>DataSchemaUri</tt> is specified.</li>
--   <li>DataRearrangement - A JSON string that represents the splitting
--   and rearrangement requirements for the <tt>Datasource</tt>.Sample -
--   <tt>
--   "{\"splitting\":{\"percentBegin\":10,\"percentEnd\":60}}"</tt></li>
--   </ul>
--   
--   <a>$sel:roleARN:CreateDataSourceFromRDS'</a>,
--   <a>createDataSourceFromRDS_roleARN</a> - The role that Amazon ML
--   assumes on behalf of the user to create and activate a data pipeline
--   in the user's account and copy data using the <tt>SelectSqlQuery</tt>
--   query from Amazon RDS to Amazon S3.
newCreateDataSourceFromRDS :: Text -> RDSDataSpec -> Text -> CreateDataSourceFromRDS

-- | Represents the output of a <tt>CreateDataSourceFromRDS</tt> operation,
--   and is an acknowledgement that Amazon ML received the request.
--   
--   The <tt>CreateDataSourceFromRDS</tt>&gt; operation is asynchronous.
--   You can poll for updates by using the <tt>GetBatchPrediction</tt>
--   operation and checking the <tt>Status</tt> parameter. You can inspect
--   the <tt>Message</tt> when <tt>Status</tt> shows up as <tt>FAILED</tt>.
--   You can also check the progress of the copy operation by going to the
--   <tt>DataPipeline</tt> console and looking up the pipeline using the
--   <tt>pipelineId </tt> from the describe call.
--   
--   <i>See:</i> <a>newCreateDataSourceFromRDSResponse</a> smart
--   constructor.
data CreateDataSourceFromRDSResponse
CreateDataSourceFromRDSResponse' :: Maybe Text -> Int -> CreateDataSourceFromRDSResponse

-- | Create a value of <a>CreateDataSourceFromRDSResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataSourceId:CreateDataSourceFromRDS'</a>,
--   <a>createDataSourceFromRDSResponse_dataSourceId</a> - A user-supplied
--   ID that uniquely identifies the datasource. This value should be
--   identical to the value of the <tt>DataSourceID</tt> in the request.
--   
--   <a>$sel:httpStatus:CreateDataSourceFromRDSResponse'</a>,
--   <a>createDataSourceFromRDSResponse_httpStatus</a> - The response's
--   http status code.
newCreateDataSourceFromRDSResponse :: Int -> CreateDataSourceFromRDSResponse

-- | <i>See:</i> <a>newDescribeBatchPredictions</a> smart constructor.
data DescribeBatchPredictions
DescribeBatchPredictions' :: Maybe Text -> Maybe Text -> Maybe SortOrder -> Maybe BatchPredictionFilterVariable -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> DescribeBatchPredictions

-- | Create a value of <a>DescribeBatchPredictions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eq:DescribeBatchPredictions'</a>,
--   <a>describeBatchPredictions_eq</a> - The equal to operator. The
--   <tt>BatchPrediction</tt> results will have <tt>FilterVariable</tt>
--   values that exactly match the value specified with <tt>EQ</tt>.
--   
--   <a>$sel:nextToken:DescribeBatchPredictions'</a>,
--   <a>describeBatchPredictions_nextToken</a> - An ID of the page in the
--   paginated results.
--   
--   <a>$sel:sortOrder:DescribeBatchPredictions'</a>,
--   <a>describeBatchPredictions_sortOrder</a> - A two-value parameter that
--   determines the sequence of the resulting list of <tt>MLModel</tt>s.
--   
--   <ul>
--   <li><tt>asc</tt> - Arranges the list in ascending order (A-Z,
--   0-9).</li>
--   <li><tt>dsc</tt> - Arranges the list in descending order (Z-A,
--   9-0).</li>
--   </ul>
--   
--   Results are sorted by <tt>FilterVariable</tt>.
--   
--   <a>$sel:filterVariable:DescribeBatchPredictions'</a>,
--   <a>describeBatchPredictions_filterVariable</a> - Use one of the
--   following variables to filter a list of <tt>BatchPrediction</tt>:
--   
--   <ul>
--   <li><tt>CreatedAt</tt> - Sets the search criteria to the
--   <tt>BatchPrediction</tt> creation date.</li>
--   <li><tt>Status</tt> - Sets the search criteria to the
--   <tt>BatchPrediction</tt> status.</li>
--   <li><tt>Name</tt> - Sets the search criteria to the contents of the
--   <tt>BatchPrediction</tt> ____ <tt>Name</tt>.</li>
--   <li><tt>IAMUser</tt> - Sets the search criteria to the user account
--   that invoked the <tt>BatchPrediction</tt> creation.</li>
--   <li><tt>MLModelId</tt> - Sets the search criteria to the
--   <tt>MLModel</tt> used in the <tt>BatchPrediction</tt>.</li>
--   <li><tt>DataSourceId</tt> - Sets the search criteria to the
--   <tt>DataSource</tt> used in the <tt>BatchPrediction</tt>.</li>
--   <li><tt>DataURI</tt> - Sets the search criteria to the data file(s)
--   used in the <tt>BatchPrediction</tt>. The URL can identify either a
--   file or an Amazon Simple Storage Solution (Amazon S3) bucket or
--   directory.</li>
--   </ul>
--   
--   <a>$sel:gt:DescribeBatchPredictions'</a>,
--   <a>describeBatchPredictions_gt</a> - The greater than operator. The
--   <tt>BatchPrediction</tt> results will have <tt>FilterVariable</tt>
--   values that are greater than the value specified with <tt>GT</tt>.
--   
--   <a>$sel:ne:DescribeBatchPredictions'</a>,
--   <a>describeBatchPredictions_ne</a> - The not equal to operator. The
--   <tt>BatchPrediction</tt> results will have <tt>FilterVariable</tt>
--   values not equal to the value specified with <tt>NE</tt>.
--   
--   <a>$sel:prefix:DescribeBatchPredictions'</a>,
--   <a>describeBatchPredictions_prefix</a> - A string that is found at the
--   beginning of a variable, such as <tt>Name</tt> or <tt>Id</tt>.
--   
--   For example, a <tt>Batch Prediction</tt> operation could have the
--   <tt>Name</tt> <tt>2014-09-09-HolidayGiftMailer</tt>. To search for
--   this <tt>BatchPrediction</tt>, select <tt>Name</tt> for the
--   <tt>FilterVariable</tt> and any of the following strings for the
--   <tt>Prefix</tt>:
--   
--   <ul>
--   <li>2014-09</li>
--   <li>2014-09-09</li>
--   <li>2014-09-09-Holiday</li>
--   </ul>
--   
--   <a>$sel:ge:DescribeBatchPredictions'</a>,
--   <a>describeBatchPredictions_ge</a> - The greater than or equal to
--   operator. The <tt>BatchPrediction</tt> results will have
--   <tt>FilterVariable</tt> values that are greater than or equal to the
--   value specified with <tt>GE</tt>.
--   
--   <a>$sel:le:DescribeBatchPredictions'</a>,
--   <a>describeBatchPredictions_le</a> - The less than or equal to
--   operator. The <tt>BatchPrediction</tt> results will have
--   <tt>FilterVariable</tt> values that are less than or equal to the
--   value specified with <tt>LE</tt>.
--   
--   <a>$sel:lt:DescribeBatchPredictions'</a>,
--   <a>describeBatchPredictions_lt</a> - The less than operator. The
--   <tt>BatchPrediction</tt> results will have <tt>FilterVariable</tt>
--   values that are less than the value specified with <tt>LT</tt>.
--   
--   <a>$sel:limit:DescribeBatchPredictions'</a>,
--   <a>describeBatchPredictions_limit</a> - The number of pages of
--   information to include in the result. The range of acceptable values
--   is <tt>1</tt> through <tt>100</tt>. The default value is <tt>100</tt>.
newDescribeBatchPredictions :: DescribeBatchPredictions

-- | Represents the output of a <tt>DescribeBatchPredictions</tt>
--   operation. The content is essentially a list of
--   <tt>BatchPrediction</tt>s.
--   
--   <i>See:</i> <a>newDescribeBatchPredictionsResponse</a> smart
--   constructor.
data DescribeBatchPredictionsResponse
DescribeBatchPredictionsResponse' :: Maybe Text -> Maybe [BatchPrediction] -> Int -> DescribeBatchPredictionsResponse

-- | Create a value of <a>DescribeBatchPredictionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeBatchPredictions'</a>,
--   <a>describeBatchPredictionsResponse_nextToken</a> - The ID of the next
--   page in the paginated results that indicates at least one more page
--   follows.
--   
--   <a>$sel:results:DescribeBatchPredictionsResponse'</a>,
--   <a>describeBatchPredictionsResponse_results</a> - A list of
--   <tt>BatchPrediction</tt> objects that meet the search criteria.
--   
--   <a>$sel:httpStatus:DescribeBatchPredictionsResponse'</a>,
--   <a>describeBatchPredictionsResponse_httpStatus</a> - The response's
--   http status code.
newDescribeBatchPredictionsResponse :: Int -> DescribeBatchPredictionsResponse

-- | <i>See:</i> <a>newDeleteEvaluation</a> smart constructor.
data DeleteEvaluation
DeleteEvaluation' :: Text -> DeleteEvaluation

-- | Create a value of <a>DeleteEvaluation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:evaluationId:DeleteEvaluation'</a>,
--   <a>deleteEvaluation_evaluationId</a> - A user-supplied ID that
--   uniquely identifies the <tt>Evaluation</tt> to delete.
newDeleteEvaluation :: Text -> DeleteEvaluation

-- | Represents the output of a <tt>DeleteEvaluation</tt> operation. The
--   output indicates that Amazon Machine Learning (Amazon ML) received the
--   request.
--   
--   You can use the <tt>GetEvaluation</tt> operation and check the value
--   of the <tt>Status</tt> parameter to see whether an <tt>Evaluation</tt>
--   is marked as <tt>DELETED</tt>.
--   
--   <i>See:</i> <a>newDeleteEvaluationResponse</a> smart constructor.
data DeleteEvaluationResponse
DeleteEvaluationResponse' :: Maybe Text -> Int -> DeleteEvaluationResponse

-- | Create a value of <a>DeleteEvaluationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:evaluationId:DeleteEvaluation'</a>,
--   <a>deleteEvaluationResponse_evaluationId</a> - A user-supplied ID that
--   uniquely identifies the <tt>Evaluation</tt>. This value should be
--   identical to the value of the <tt>EvaluationId</tt> in the request.
--   
--   <a>$sel:httpStatus:DeleteEvaluationResponse'</a>,
--   <a>deleteEvaluationResponse_httpStatus</a> - The response's http
--   status code.
newDeleteEvaluationResponse :: Int -> DeleteEvaluationResponse

-- | <i>See:</i> <a>newUpdateEvaluation</a> smart constructor.
data UpdateEvaluation
UpdateEvaluation' :: Text -> Text -> UpdateEvaluation

-- | Create a value of <a>UpdateEvaluation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:evaluationId:UpdateEvaluation'</a>,
--   <a>updateEvaluation_evaluationId</a> - The ID assigned to the
--   <tt>Evaluation</tt> during creation.
--   
--   <a>$sel:evaluationName:UpdateEvaluation'</a>,
--   <a>updateEvaluation_evaluationName</a> - A new user-supplied name or
--   description of the <tt>Evaluation</tt> that will replace the current
--   content.
newUpdateEvaluation :: Text -> Text -> UpdateEvaluation

-- | Represents the output of an <tt>UpdateEvaluation</tt> operation.
--   
--   You can see the updated content by using the <tt>GetEvaluation</tt>
--   operation.
--   
--   <i>See:</i> <a>newUpdateEvaluationResponse</a> smart constructor.
data UpdateEvaluationResponse
UpdateEvaluationResponse' :: Maybe Text -> Int -> UpdateEvaluationResponse

-- | Create a value of <a>UpdateEvaluationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:evaluationId:UpdateEvaluation'</a>,
--   <a>updateEvaluationResponse_evaluationId</a> - The ID assigned to the
--   <tt>Evaluation</tt> during creation. This value should be identical to
--   the value of the <tt>Evaluation</tt> in the request.
--   
--   <a>$sel:httpStatus:UpdateEvaluationResponse'</a>,
--   <a>updateEvaluationResponse_httpStatus</a> - The response's http
--   status code.
newUpdateEvaluationResponse :: Int -> UpdateEvaluationResponse

-- | <i>See:</i> <a>newGetBatchPrediction</a> smart constructor.
data GetBatchPrediction
GetBatchPrediction' :: Text -> GetBatchPrediction

-- | Create a value of <a>GetBatchPrediction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:batchPredictionId:GetBatchPrediction'</a>,
--   <a>getBatchPrediction_batchPredictionId</a> - An ID assigned to the
--   <tt>BatchPrediction</tt> at creation.
newGetBatchPrediction :: Text -> GetBatchPrediction

-- | Represents the output of a <tt>GetBatchPrediction</tt> operation and
--   describes a <tt>BatchPrediction</tt>.
--   
--   <i>See:</i> <a>newGetBatchPredictionResponse</a> smart constructor.
data GetBatchPredictionResponse
GetBatchPredictionResponse' :: Maybe EntityStatus -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Integer -> Maybe Integer -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Integer -> Maybe POSIX -> Maybe Text -> Int -> GetBatchPredictionResponse

-- | Create a value of <a>GetBatchPredictionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:GetBatchPredictionResponse'</a>,
--   <a>getBatchPredictionResponse_status</a> - The status of the
--   <tt>BatchPrediction</tt>, which can be one of the following values:
--   
--   <ul>
--   <li><tt>PENDING</tt> - Amazon Machine Learning (Amazon ML) submitted a
--   request to generate batch predictions.</li>
--   <li><tt>INPROGRESS</tt> - The batch predictions are in progress.</li>
--   <li><tt>FAILED</tt> - The request to perform a batch prediction did
--   not run to completion. It is not usable.</li>
--   <li><tt>COMPLETED</tt> - The batch prediction process completed
--   successfully.</li>
--   <li><tt>DELETED</tt> - The <tt>BatchPrediction</tt> is marked as
--   deleted. It is not usable.</li>
--   </ul>
--   
--   <a>$sel:batchPredictionId:GetBatchPrediction'</a>,
--   <a>getBatchPredictionResponse_batchPredictionId</a> - An ID assigned
--   to the <tt>BatchPrediction</tt> at creation. This value should be
--   identical to the value of the <tt>BatchPredictionID</tt> in the
--   request.
--   
--   <a>$sel:startedAt:GetBatchPredictionResponse'</a>,
--   <a>getBatchPredictionResponse_startedAt</a> - The epoch time when
--   Amazon Machine Learning marked the <tt>BatchPrediction</tt> as
--   <tt>INPROGRESS</tt>. <tt>StartedAt</tt> isn't available if the
--   <tt>BatchPrediction</tt> is in the <tt>PENDING</tt> state.
--   
--   <a>$sel:outputUri:GetBatchPredictionResponse'</a>,
--   <a>getBatchPredictionResponse_outputUri</a> - The location of an
--   Amazon S3 bucket or directory to receive the operation results.
--   
--   <a>$sel:message:GetBatchPredictionResponse'</a>,
--   <a>getBatchPredictionResponse_message</a> - A description of the most
--   recent details about processing the batch prediction request.
--   
--   <a>$sel:createdAt:GetBatchPredictionResponse'</a>,
--   <a>getBatchPredictionResponse_createdAt</a> - The time when the
--   <tt>BatchPrediction</tt> was created. The time is expressed in epoch
--   time.
--   
--   <a>$sel:name:GetBatchPredictionResponse'</a>,
--   <a>getBatchPredictionResponse_name</a> - A user-supplied name or
--   description of the <tt>BatchPrediction</tt>.
--   
--   <a>$sel:createdByIamUser:GetBatchPredictionResponse'</a>,
--   <a>getBatchPredictionResponse_createdByIamUser</a> - The AWS user
--   account that invoked the <tt>BatchPrediction</tt>. The account type
--   can be either an AWS root account or an AWS Identity and Access
--   Management (IAM) user account.
--   
--   <a>$sel:finishedAt:GetBatchPredictionResponse'</a>,
--   <a>getBatchPredictionResponse_finishedAt</a> - The epoch time when
--   Amazon Machine Learning marked the <tt>BatchPrediction</tt> as
--   <tt>COMPLETED</tt> or <tt>FAILED</tt>. <tt>FinishedAt</tt> is only
--   available when the <tt>BatchPrediction</tt> is in the
--   <tt>COMPLETED</tt> or <tt>FAILED</tt> state.
--   
--   <a>$sel:invalidRecordCount:GetBatchPredictionResponse'</a>,
--   <a>getBatchPredictionResponse_invalidRecordCount</a> - The number of
--   invalid records that Amazon Machine Learning saw while processing the
--   <tt>BatchPrediction</tt>.
--   
--   <a>$sel:totalRecordCount:GetBatchPredictionResponse'</a>,
--   <a>getBatchPredictionResponse_totalRecordCount</a> - The number of
--   total records that Amazon Machine Learning saw while processing the
--   <tt>BatchPrediction</tt>.
--   
--   <a>$sel:batchPredictionDataSourceId:GetBatchPredictionResponse'</a>,
--   <a>getBatchPredictionResponse_batchPredictionDataSourceId</a> - The ID
--   of the <tt>DataSource</tt> that was used to create the
--   <tt>BatchPrediction</tt>.
--   
--   <a>$sel:mLModelId:GetBatchPredictionResponse'</a>,
--   <a>getBatchPredictionResponse_mLModelId</a> - The ID of the
--   <tt>MLModel</tt> that generated predictions for the
--   <tt>BatchPrediction</tt> request.
--   
--   <a>$sel:inputDataLocationS3:GetBatchPredictionResponse'</a>,
--   <a>getBatchPredictionResponse_inputDataLocationS3</a> - The location
--   of the data file or directory in Amazon Simple Storage Service (Amazon
--   S3).
--   
--   <a>$sel:computeTime:GetBatchPredictionResponse'</a>,
--   <a>getBatchPredictionResponse_computeTime</a> - The approximate CPU
--   time in milliseconds that Amazon Machine Learning spent processing the
--   <tt>BatchPrediction</tt>, normalized and scaled on computation
--   resources. <tt>ComputeTime</tt> is only available if the
--   <tt>BatchPrediction</tt> is in the <tt>COMPLETED</tt> state.
--   
--   <a>$sel:lastUpdatedAt:GetBatchPredictionResponse'</a>,
--   <a>getBatchPredictionResponse_lastUpdatedAt</a> - The time of the most
--   recent edit to <tt>BatchPrediction</tt>. The time is expressed in
--   epoch time.
--   
--   <a>$sel:logUri:GetBatchPredictionResponse'</a>,
--   <a>getBatchPredictionResponse_logUri</a> - A link to the file that
--   contains logs of the <tt>CreateBatchPrediction</tt> operation.
--   
--   <a>$sel:httpStatus:GetBatchPredictionResponse'</a>,
--   <a>getBatchPredictionResponse_httpStatus</a> - The response's http
--   status code.
newGetBatchPredictionResponse :: Int -> GetBatchPredictionResponse

-- | <i>See:</i> <a>newGetDataSource</a> smart constructor.
data GetDataSource
GetDataSource' :: Maybe Bool -> Text -> GetDataSource

-- | Create a value of <a>GetDataSource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:verbose:GetDataSource'</a>, <a>getDataSource_verbose</a> -
--   Specifies whether the <tt>GetDataSource</tt> operation should return
--   <tt>DataSourceSchema</tt>.
--   
--   If true, <tt>DataSourceSchema</tt> is returned.
--   
--   If false, <tt>DataSourceSchema</tt> is not returned.
--   
--   <a>$sel:dataSourceId:GetDataSource'</a>,
--   <a>getDataSource_dataSourceId</a> - The ID assigned to the
--   <tt>DataSource</tt> at creation.
newGetDataSource :: Text -> GetDataSource

-- | Represents the output of a <tt>GetDataSource</tt> operation and
--   describes a <tt>DataSource</tt>.
--   
--   <i>See:</i> <a>newGetDataSourceResponse</a> smart constructor.
data GetDataSourceResponse
GetDataSourceResponse' :: Maybe EntityStatus -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe RedshiftMetadata -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Integer -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Integer -> Maybe Integer -> Maybe RDSMetadata -> Maybe POSIX -> Maybe Text -> Int -> GetDataSourceResponse

-- | Create a value of <a>GetDataSourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:GetDataSourceResponse'</a>,
--   <a>getDataSourceResponse_status</a> - The current status of the
--   <tt>DataSource</tt>. This element can have one of the following
--   values:
--   
--   <ul>
--   <li><tt>PENDING</tt> - Amazon ML submitted a request to create a
--   <tt>DataSource</tt>.</li>
--   <li><tt>INPROGRESS</tt> - The creation process is underway.</li>
--   <li><tt>FAILED</tt> - The request to create a <tt>DataSource</tt> did
--   not run to completion. It is not usable.</li>
--   <li><tt>COMPLETED</tt> - The creation process completed
--   successfully.</li>
--   <li><tt>DELETED</tt> - The <tt>DataSource</tt> is marked as deleted.
--   It is not usable.</li>
--   </ul>
--   
--   <a>$sel:startedAt:GetDataSourceResponse'</a>,
--   <a>getDataSourceResponse_startedAt</a> - The epoch time when Amazon
--   Machine Learning marked the <tt>DataSource</tt> as
--   <tt>INPROGRESS</tt>. <tt>StartedAt</tt> isn't available if the
--   <tt>DataSource</tt> is in the <tt>PENDING</tt> state.
--   
--   <a>$sel:roleARN:GetDataSourceResponse'</a>,
--   <a>getDataSourceResponse_roleARN</a> - Undocumented member.
--   
--   <a>$sel:dataRearrangement:GetDataSourceResponse'</a>,
--   <a>getDataSourceResponse_dataRearrangement</a> - A JSON string that
--   represents the splitting and rearrangement requirement used when this
--   <tt>DataSource</tt> was created.
--   
--   <a>$sel:redshiftMetadata:GetDataSourceResponse'</a>,
--   <a>getDataSourceResponse_redshiftMetadata</a> - Undocumented member.
--   
--   <a>$sel:message:GetDataSourceResponse'</a>,
--   <a>getDataSourceResponse_message</a> - The user-supplied description
--   of the most recent details about creating the <tt>DataSource</tt>.
--   
--   <a>$sel:dataSourceId:GetDataSource'</a>,
--   <a>getDataSourceResponse_dataSourceId</a> - The ID assigned to the
--   <tt>DataSource</tt> at creation. This value should be identical to the
--   value of the <tt>DataSourceId</tt> in the request.
--   
--   <a>$sel:computeStatistics:GetDataSourceResponse'</a>,
--   <a>getDataSourceResponse_computeStatistics</a> - The parameter is
--   <tt>true</tt> if statistics need to be generated from the observation
--   data.
--   
--   <a>$sel:createdAt:GetDataSourceResponse'</a>,
--   <a>getDataSourceResponse_createdAt</a> - The time that the
--   <tt>DataSource</tt> was created. The time is expressed in epoch time.
--   
--   <a>$sel:dataLocationS3:GetDataSourceResponse'</a>,
--   <a>getDataSourceResponse_dataLocationS3</a> - The location of the data
--   file or directory in Amazon Simple Storage Service (Amazon S3).
--   
--   <a>$sel:name:GetDataSourceResponse'</a>,
--   <a>getDataSourceResponse_name</a> - A user-supplied name or
--   description of the <tt>DataSource</tt>.
--   
--   <a>$sel:numberOfFiles:GetDataSourceResponse'</a>,
--   <a>getDataSourceResponse_numberOfFiles</a> - The number of data files
--   referenced by the <tt>DataSource</tt>.
--   
--   <a>$sel:createdByIamUser:GetDataSourceResponse'</a>,
--   <a>getDataSourceResponse_createdByIamUser</a> - The AWS user account
--   from which the <tt>DataSource</tt> was created. The account type can
--   be either an AWS root account or an AWS Identity and Access Management
--   (IAM) user account.
--   
--   <a>$sel:finishedAt:GetDataSourceResponse'</a>,
--   <a>getDataSourceResponse_finishedAt</a> - The epoch time when Amazon
--   Machine Learning marked the <tt>DataSource</tt> as <tt>COMPLETED</tt>
--   or <tt>FAILED</tt>. <tt>FinishedAt</tt> is only available when the
--   <tt>DataSource</tt> is in the <tt>COMPLETED</tt> or <tt>FAILED</tt>
--   state.
--   
--   <a>$sel:dataSourceSchema:GetDataSourceResponse'</a>,
--   <a>getDataSourceResponse_dataSourceSchema</a> - The schema used by all
--   of the data files of this <tt>DataSource</tt>.
--   
--   <b>Note:</b> This parameter is provided as part of the verbose format.
--   
--   <a>$sel:dataSizeInBytes:GetDataSourceResponse'</a>,
--   <a>getDataSourceResponse_dataSizeInBytes</a> - The total size of
--   observations in the data files.
--   
--   <a>$sel:computeTime:GetDataSourceResponse'</a>,
--   <a>getDataSourceResponse_computeTime</a> - The approximate CPU time in
--   milliseconds that Amazon Machine Learning spent processing the
--   <tt>DataSource</tt>, normalized and scaled on computation resources.
--   <tt>ComputeTime</tt> is only available if the <tt>DataSource</tt> is
--   in the <tt>COMPLETED</tt> state and the <tt>ComputeStatistics</tt> is
--   set to true.
--   
--   <a>$sel:rDSMetadata:GetDataSourceResponse'</a>,
--   <a>getDataSourceResponse_rDSMetadata</a> - Undocumented member.
--   
--   <a>$sel:lastUpdatedAt:GetDataSourceResponse'</a>,
--   <a>getDataSourceResponse_lastUpdatedAt</a> - The time of the most
--   recent edit to the <tt>DataSource</tt>. The time is expressed in epoch
--   time.
--   
--   <a>$sel:logUri:GetDataSourceResponse'</a>,
--   <a>getDataSourceResponse_logUri</a> - A link to the file containing
--   logs of <tt>CreateDataSourceFrom*</tt> operations.
--   
--   <a>$sel:httpStatus:GetDataSourceResponse'</a>,
--   <a>getDataSourceResponse_httpStatus</a> - The response's http status
--   code.
newGetDataSourceResponse :: Int -> GetDataSourceResponse

-- | <i>See:</i> <a>newDeleteBatchPrediction</a> smart constructor.
data DeleteBatchPrediction
DeleteBatchPrediction' :: Text -> DeleteBatchPrediction

-- | Create a value of <a>DeleteBatchPrediction</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:batchPredictionId:DeleteBatchPrediction'</a>,
--   <a>deleteBatchPrediction_batchPredictionId</a> - A user-supplied ID
--   that uniquely identifies the <tt>BatchPrediction</tt>.
newDeleteBatchPrediction :: Text -> DeleteBatchPrediction

-- | Represents the output of a <tt>DeleteBatchPrediction</tt> operation.
--   
--   You can use the <tt>GetBatchPrediction</tt> operation and check the
--   value of the <tt>Status</tt> parameter to see whether a
--   <tt>BatchPrediction</tt> is marked as <tt>DELETED</tt>.
--   
--   <i>See:</i> <a>newDeleteBatchPredictionResponse</a> smart constructor.
data DeleteBatchPredictionResponse
DeleteBatchPredictionResponse' :: Maybe Text -> Int -> DeleteBatchPredictionResponse

-- | Create a value of <a>DeleteBatchPredictionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:batchPredictionId:DeleteBatchPrediction'</a>,
--   <a>deleteBatchPredictionResponse_batchPredictionId</a> - A
--   user-supplied ID that uniquely identifies the
--   <tt>BatchPrediction</tt>. This value should be identical to the value
--   of the <tt>BatchPredictionID</tt> in the request.
--   
--   <a>$sel:httpStatus:DeleteBatchPredictionResponse'</a>,
--   <a>deleteBatchPredictionResponse_httpStatus</a> - The response's http
--   status code.
newDeleteBatchPredictionResponse :: Int -> DeleteBatchPredictionResponse

-- | <i>See:</i> <a>newCreateRealtimeEndpoint</a> smart constructor.
data CreateRealtimeEndpoint
CreateRealtimeEndpoint' :: Text -> CreateRealtimeEndpoint

-- | Create a value of <a>CreateRealtimeEndpoint</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mLModelId:CreateRealtimeEndpoint'</a>,
--   <a>createRealtimeEndpoint_mLModelId</a> - The ID assigned to the
--   <tt>MLModel</tt> during creation.
newCreateRealtimeEndpoint :: Text -> CreateRealtimeEndpoint

-- | Represents the output of an <tt>CreateRealtimeEndpoint</tt> operation.
--   
--   The result contains the <tt>MLModelId</tt> and the endpoint
--   information for the <tt>MLModel</tt>.
--   
--   <b>Note:</b> The endpoint information includes the URI of the
--   <tt>MLModel</tt>; that is, the location to send online prediction
--   requests for the specified <tt>MLModel</tt>.
--   
--   <i>See:</i> <a>newCreateRealtimeEndpointResponse</a> smart
--   constructor.
data CreateRealtimeEndpointResponse
CreateRealtimeEndpointResponse' :: Maybe RealtimeEndpointInfo -> Maybe Text -> Int -> CreateRealtimeEndpointResponse

-- | Create a value of <a>CreateRealtimeEndpointResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:realtimeEndpointInfo:CreateRealtimeEndpointResponse'</a>,
--   <a>createRealtimeEndpointResponse_realtimeEndpointInfo</a> - The
--   endpoint information of the <tt>MLModel</tt>
--   
--   <a>$sel:mLModelId:CreateRealtimeEndpoint'</a>,
--   <a>createRealtimeEndpointResponse_mLModelId</a> - A user-supplied ID
--   that uniquely identifies the <tt>MLModel</tt>. This value should be
--   identical to the value of the <tt>MLModelId</tt> in the request.
--   
--   <a>$sel:httpStatus:CreateRealtimeEndpointResponse'</a>,
--   <a>createRealtimeEndpointResponse_httpStatus</a> - The response's http
--   status code.
newCreateRealtimeEndpointResponse :: Int -> CreateRealtimeEndpointResponse

-- | <i>See:</i> <a>newUpdateBatchPrediction</a> smart constructor.
data UpdateBatchPrediction
UpdateBatchPrediction' :: Text -> Text -> UpdateBatchPrediction

-- | Create a value of <a>UpdateBatchPrediction</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:batchPredictionId:UpdateBatchPrediction'</a>,
--   <a>updateBatchPrediction_batchPredictionId</a> - The ID assigned to
--   the <tt>BatchPrediction</tt> during creation.
--   
--   <a>$sel:batchPredictionName:UpdateBatchPrediction'</a>,
--   <a>updateBatchPrediction_batchPredictionName</a> - A new user-supplied
--   name or description of the <tt>BatchPrediction</tt>.
newUpdateBatchPrediction :: Text -> Text -> UpdateBatchPrediction

-- | Represents the output of an <tt>UpdateBatchPrediction</tt> operation.
--   
--   You can see the updated content by using the
--   <tt>GetBatchPrediction</tt> operation.
--   
--   <i>See:</i> <a>newUpdateBatchPredictionResponse</a> smart constructor.
data UpdateBatchPredictionResponse
UpdateBatchPredictionResponse' :: Maybe Text -> Int -> UpdateBatchPredictionResponse

-- | Create a value of <a>UpdateBatchPredictionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:batchPredictionId:UpdateBatchPrediction'</a>,
--   <a>updateBatchPredictionResponse_batchPredictionId</a> - The ID
--   assigned to the <tt>BatchPrediction</tt> during creation. This value
--   should be identical to the value of the <tt>BatchPredictionId</tt> in
--   the request.
--   
--   <a>$sel:httpStatus:UpdateBatchPredictionResponse'</a>,
--   <a>updateBatchPredictionResponse_httpStatus</a> - The response's http
--   status code.
newUpdateBatchPredictionResponse :: Int -> UpdateBatchPredictionResponse

-- | <i>See:</i> <a>newDescribeMLModels</a> smart constructor.
data DescribeMLModels
DescribeMLModels' :: Maybe Text -> Maybe Text -> Maybe SortOrder -> Maybe MLModelFilterVariable -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> DescribeMLModels

-- | Create a value of <a>DescribeMLModels</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eq:DescribeMLModels'</a>, <a>describeMLModels_eq</a> - The
--   equal to operator. The <tt>MLModel</tt> results will have
--   <tt>FilterVariable</tt> values that exactly match the value specified
--   with <tt>EQ</tt>.
--   
--   <a>$sel:nextToken:DescribeMLModels'</a>,
--   <a>describeMLModels_nextToken</a> - The ID of the page in the
--   paginated results.
--   
--   <a>$sel:sortOrder:DescribeMLModels'</a>,
--   <a>describeMLModels_sortOrder</a> - A two-value parameter that
--   determines the sequence of the resulting list of <tt>MLModel</tt>.
--   
--   <ul>
--   <li><tt>asc</tt> - Arranges the list in ascending order (A-Z,
--   0-9).</li>
--   <li><tt>dsc</tt> - Arranges the list in descending order (Z-A,
--   9-0).</li>
--   </ul>
--   
--   Results are sorted by <tt>FilterVariable</tt>.
--   
--   <a>$sel:filterVariable:DescribeMLModels'</a>,
--   <a>describeMLModels_filterVariable</a> - Use one of the following
--   variables to filter a list of <tt>MLModel</tt>:
--   
--   <ul>
--   <li><tt>CreatedAt</tt> - Sets the search criteria to <tt>MLModel</tt>
--   creation date.</li>
--   <li><tt>Status</tt> - Sets the search criteria to <tt>MLModel</tt>
--   status.</li>
--   <li><tt>Name</tt> - Sets the search criteria to the contents of
--   <tt>MLModel</tt> ____ <tt>Name</tt>.</li>
--   <li><tt>IAMUser</tt> - Sets the search criteria to the user account
--   that invoked the <tt>MLModel</tt> creation.</li>
--   <li><tt>TrainingDataSourceId</tt> - Sets the search criteria to the
--   <tt>DataSource</tt> used to train one or more <tt>MLModel</tt>.</li>
--   <li><tt>RealtimeEndpointStatus</tt> - Sets the search criteria to the
--   <tt>MLModel</tt> real-time endpoint status.</li>
--   <li><tt>MLModelType</tt> - Sets the search criteria to
--   <tt>MLModel</tt> type: binary, regression, or multi-class.</li>
--   <li><tt>Algorithm</tt> - Sets the search criteria to the algorithm
--   that the <tt>MLModel</tt> uses.</li>
--   <li><tt>TrainingDataURI</tt> - Sets the search criteria to the data
--   file(s) used in training a <tt>MLModel</tt>. The URL can identify
--   either a file or an Amazon Simple Storage Service (Amazon S3) bucket
--   or directory.</li>
--   </ul>
--   
--   <a>$sel:gt:DescribeMLModels'</a>, <a>describeMLModels_gt</a> - The
--   greater than operator. The <tt>MLModel</tt> results will have
--   <tt>FilterVariable</tt> values that are greater than the value
--   specified with <tt>GT</tt>.
--   
--   <a>$sel:ne:DescribeMLModels'</a>, <a>describeMLModels_ne</a> - The not
--   equal to operator. The <tt>MLModel</tt> results will have
--   <tt>FilterVariable</tt> values not equal to the value specified with
--   <tt>NE</tt>.
--   
--   <a>$sel:prefix:DescribeMLModels'</a>, <a>describeMLModels_prefix</a> -
--   A string that is found at the beginning of a variable, such as
--   <tt>Name</tt> or <tt>Id</tt>.
--   
--   For example, an <tt>MLModel</tt> could have the <tt>Name</tt>
--   <tt>2014-09-09-HolidayGiftMailer</tt>. To search for this
--   <tt>MLModel</tt>, select <tt>Name</tt> for the <tt>FilterVariable</tt>
--   and any of the following strings for the <tt>Prefix</tt>:
--   
--   <ul>
--   <li>2014-09</li>
--   <li>2014-09-09</li>
--   <li>2014-09-09-Holiday</li>
--   </ul>
--   
--   <a>$sel:ge:DescribeMLModels'</a>, <a>describeMLModels_ge</a> - The
--   greater than or equal to operator. The <tt>MLModel</tt> results will
--   have <tt>FilterVariable</tt> values that are greater than or equal to
--   the value specified with <tt>GE</tt>.
--   
--   <a>$sel:le:DescribeMLModels'</a>, <a>describeMLModels_le</a> - The
--   less than or equal to operator. The <tt>MLModel</tt> results will have
--   <tt>FilterVariable</tt> values that are less than or equal to the
--   value specified with <tt>LE</tt>.
--   
--   <a>$sel:lt:DescribeMLModels'</a>, <a>describeMLModels_lt</a> - The
--   less than operator. The <tt>MLModel</tt> results will have
--   <tt>FilterVariable</tt> values that are less than the value specified
--   with <tt>LT</tt>.
--   
--   <a>$sel:limit:DescribeMLModels'</a>, <a>describeMLModels_limit</a> -
--   The number of pages of information to include in the result. The range
--   of acceptable values is <tt>1</tt> through <tt>100</tt>. The default
--   value is <tt>100</tt>.
newDescribeMLModels :: DescribeMLModels

-- | Represents the output of a <tt>DescribeMLModels</tt> operation. The
--   content is essentially a list of <tt>MLModel</tt>.
--   
--   <i>See:</i> <a>newDescribeMLModelsResponse</a> smart constructor.
data DescribeMLModelsResponse
DescribeMLModelsResponse' :: Maybe Text -> Maybe [MLModel] -> Int -> DescribeMLModelsResponse

-- | Create a value of <a>DescribeMLModelsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeMLModels'</a>,
--   <a>describeMLModelsResponse_nextToken</a> - The ID of the next page in
--   the paginated results that indicates at least one more page follows.
--   
--   <a>$sel:results:DescribeMLModelsResponse'</a>,
--   <a>describeMLModelsResponse_results</a> - A list of <tt>MLModel</tt>
--   that meet the search criteria.
--   
--   <a>$sel:httpStatus:DescribeMLModelsResponse'</a>,
--   <a>describeMLModelsResponse_httpStatus</a> - The response's http
--   status code.
newDescribeMLModelsResponse :: Int -> DescribeMLModelsResponse

-- | <i>See:</i> <a>newPredict</a> smart constructor.
data Predict
Predict' :: Text -> HashMap Text Text -> Text -> Predict

-- | Create a value of <a>Predict</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mLModelId:Predict'</a>, <a>predict_mLModelId</a> - A unique
--   identifier of the <tt>MLModel</tt>.
--   
--   <a>$sel:record:Predict'</a>, <a>predict_record</a> - Undocumented
--   member.
--   
--   <a>$sel:predictEndpoint:Predict'</a>, <a>predict_predictEndpoint</a> -
--   Undocumented member.
newPredict :: Text -> Text -> Predict

-- | <i>See:</i> <a>newPredictResponse</a> smart constructor.
data PredictResponse
PredictResponse' :: Maybe Prediction -> Int -> PredictResponse

-- | Create a value of <a>PredictResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:prediction:PredictResponse'</a>,
--   <a>predictResponse_prediction</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:PredictResponse'</a>,
--   <a>predictResponse_httpStatus</a> - The response's http status code.
newPredictResponse :: Int -> PredictResponse

-- | <i>See:</i> <a>newCreateBatchPrediction</a> smart constructor.
data CreateBatchPrediction
CreateBatchPrediction' :: Maybe Text -> Text -> Text -> Text -> Text -> CreateBatchPrediction

-- | Create a value of <a>CreateBatchPrediction</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:batchPredictionName:CreateBatchPrediction'</a>,
--   <a>createBatchPrediction_batchPredictionName</a> - A user-supplied
--   name or description of the <tt>BatchPrediction</tt>.
--   <tt>BatchPredictionName</tt> can only use the UTF-8 character set.
--   
--   <a>$sel:batchPredictionId:CreateBatchPrediction'</a>,
--   <a>createBatchPrediction_batchPredictionId</a> - A user-supplied ID
--   that uniquely identifies the <tt>BatchPrediction</tt>.
--   
--   <a>$sel:mLModelId:CreateBatchPrediction'</a>,
--   <a>createBatchPrediction_mLModelId</a> - The ID of the
--   <tt>MLModel</tt> that will generate predictions for the group of
--   observations.
--   
--   <a>$sel:batchPredictionDataSourceId:CreateBatchPrediction'</a>,
--   <a>createBatchPrediction_batchPredictionDataSourceId</a> - The ID of
--   the <tt>DataSource</tt> that points to the group of observations to
--   predict.
--   
--   <a>$sel:outputUri:CreateBatchPrediction'</a>,
--   <a>createBatchPrediction_outputUri</a> - The location of an Amazon
--   Simple Storage Service (Amazon S3) bucket or directory to store the
--   batch prediction results. The following substrings are not allowed in
--   the <tt>s3 key</tt> portion of the <tt>outputURI</tt> field: ':',
--   '//', '/./', '/../'.
--   
--   Amazon ML needs permissions to store and retrieve the logs on your
--   behalf. For information about how to set permissions, see the
--   <a>Amazon Machine Learning Developer Guide</a>.
newCreateBatchPrediction :: Text -> Text -> Text -> Text -> CreateBatchPrediction

-- | Represents the output of a <tt>CreateBatchPrediction</tt> operation,
--   and is an acknowledgement that Amazon ML received the request.
--   
--   The <tt>CreateBatchPrediction</tt> operation is asynchronous. You can
--   poll for status updates by using the <tt>&gt;GetBatchPrediction</tt>
--   operation and checking the <tt>Status</tt> parameter of the result.
--   
--   <i>See:</i> <a>newCreateBatchPredictionResponse</a> smart constructor.
data CreateBatchPredictionResponse
CreateBatchPredictionResponse' :: Maybe Text -> Int -> CreateBatchPredictionResponse

-- | Create a value of <a>CreateBatchPredictionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:batchPredictionId:CreateBatchPrediction'</a>,
--   <a>createBatchPredictionResponse_batchPredictionId</a> - A
--   user-supplied ID that uniquely identifies the
--   <tt>BatchPrediction</tt>. This value is identical to the value of the
--   <tt>BatchPredictionId</tt> in the request.
--   
--   <a>$sel:httpStatus:CreateBatchPredictionResponse'</a>,
--   <a>createBatchPredictionResponse_httpStatus</a> - The response's http
--   status code.
newCreateBatchPredictionResponse :: Int -> CreateBatchPredictionResponse

-- | <i>See:</i> <a>newCreateEvaluation</a> smart constructor.
data CreateEvaluation
CreateEvaluation' :: Maybe Text -> Text -> Text -> Text -> CreateEvaluation

-- | Create a value of <a>CreateEvaluation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:evaluationName:CreateEvaluation'</a>,
--   <a>createEvaluation_evaluationName</a> - A user-supplied name or
--   description of the <tt>Evaluation</tt>.
--   
--   <a>$sel:evaluationId:CreateEvaluation'</a>,
--   <a>createEvaluation_evaluationId</a> - A user-supplied ID that
--   uniquely identifies the <tt>Evaluation</tt>.
--   
--   <a>$sel:mLModelId:CreateEvaluation'</a>,
--   <a>createEvaluation_mLModelId</a> - The ID of the <tt>MLModel</tt> to
--   evaluate.
--   
--   The schema used in creating the <tt>MLModel</tt> must match the schema
--   of the <tt>DataSource</tt> used in the <tt>Evaluation</tt>.
--   
--   <a>$sel:evaluationDataSourceId:CreateEvaluation'</a>,
--   <a>createEvaluation_evaluationDataSourceId</a> - The ID of the
--   <tt>DataSource</tt> for the evaluation. The schema of the
--   <tt>DataSource</tt> must match the schema used to create the
--   <tt>MLModel</tt>.
newCreateEvaluation :: Text -> Text -> Text -> CreateEvaluation

-- | Represents the output of a <tt>CreateEvaluation</tt> operation, and is
--   an acknowledgement that Amazon ML received the request.
--   
--   <tt>CreateEvaluation</tt> operation is asynchronous. You can poll for
--   status updates by using the <tt>GetEvcaluation</tt> operation and
--   checking the <tt>Status</tt> parameter.
--   
--   <i>See:</i> <a>newCreateEvaluationResponse</a> smart constructor.
data CreateEvaluationResponse
CreateEvaluationResponse' :: Maybe Text -> Int -> CreateEvaluationResponse

-- | Create a value of <a>CreateEvaluationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:evaluationId:CreateEvaluation'</a>,
--   <a>createEvaluationResponse_evaluationId</a> - The user-supplied ID
--   that uniquely identifies the <tt>Evaluation</tt>. This value should be
--   identical to the value of the <tt>EvaluationId</tt> in the request.
--   
--   <a>$sel:httpStatus:CreateEvaluationResponse'</a>,
--   <a>createEvaluationResponse_httpStatus</a> - The response's http
--   status code.
newCreateEvaluationResponse :: Int -> CreateEvaluationResponse

-- | <i>See:</i> <a>newCreateMLModel</a> smart constructor.
data CreateMLModel
CreateMLModel' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> MLModelType -> Text -> CreateMLModel

-- | Create a value of <a>CreateMLModel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:recipeUri:CreateMLModel'</a>, <a>createMLModel_recipeUri</a> -
--   The Amazon Simple Storage Service (Amazon S3) location and file name
--   that contains the <tt>MLModel</tt> recipe. You must specify either the
--   recipe or its URI. If you don't specify a recipe or its URI, Amazon ML
--   creates a default.
--   
--   <a>$sel:recipe:CreateMLModel'</a>, <a>createMLModel_recipe</a> - The
--   data recipe for creating the <tt>MLModel</tt>. You must specify either
--   the recipe or its URI. If you don't specify a recipe or its URI,
--   Amazon ML creates a default.
--   
--   <a>$sel:mLModelName:CreateMLModel'</a>,
--   <a>createMLModel_mLModelName</a> - A user-supplied name or description
--   of the <tt>MLModel</tt>.
--   
--   <a>$sel:parameters:CreateMLModel'</a>, <a>createMLModel_parameters</a>
--   - A list of the training parameters in the <tt>MLModel</tt>. The list
--   is implemented as a map of key-value pairs.
--   
--   The following is the current set of training parameters:
--   
--   <ul>
--   <li><tt>sgd.maxMLModelSizeInBytes</tt> - The maximum allowed size of
--   the model. Depending on the input data, the size of the model might
--   affect its performance.The value is an integer that ranges from
--   <tt>100000</tt> to <tt>2147483648</tt>. The default value is
--   <tt>33554432</tt>.</li>
--   <li><tt>sgd.maxPasses</tt> - The number of times that the training
--   process traverses the observations to build the <tt>MLModel</tt>. The
--   value is an integer that ranges from <tt>1</tt> to <tt>10000</tt>. The
--   default value is <tt>10</tt>.</li>
--   <li><tt>sgd.shuffleType</tt> - Whether Amazon ML shuffles the training
--   data. Shuffling the data improves a model's ability to find the
--   optimal solution for a variety of data types. The valid values are
--   <tt>auto</tt> and <tt>none</tt>. The default value is <tt>none</tt>.
--   We strongly recommend that you shuffle your data.</li>
--   <li><tt>sgd.l1RegularizationAmount</tt> - The coefficient
--   regularization L1 norm. It controls overfitting the data by penalizing
--   large coefficients. This tends to drive coefficients to zero,
--   resulting in a sparse feature set. If you use this parameter, start by
--   specifying a small value, such as <tt>1.0E-08</tt>.The value is a
--   double that ranges from <tt>0</tt> to <tt>MAX_DOUBLE</tt>. The default
--   is to not use L1 normalization. This parameter can't be used when
--   <tt>L2</tt> is specified. Use this parameter sparingly.</li>
--   <li><tt>sgd.l2RegularizationAmount</tt> - The coefficient
--   regularization L2 norm. It controls overfitting the data by penalizing
--   large coefficients. This tends to drive coefficients to small, nonzero
--   values. If you use this parameter, start by specifying a small value,
--   such as <tt>1.0E-08</tt>.The value is a double that ranges from
--   <tt>0</tt> to <tt>MAX_DOUBLE</tt>. The default is to not use L2
--   normalization. This parameter can't be used when <tt>L1</tt> is
--   specified. Use this parameter sparingly.</li>
--   </ul>
--   
--   <a>$sel:mLModelId:CreateMLModel'</a>, <a>createMLModel_mLModelId</a> -
--   A user-supplied ID that uniquely identifies the <tt>MLModel</tt>.
--   
--   <a>$sel:mLModelType:CreateMLModel'</a>,
--   <a>createMLModel_mLModelType</a> - The category of supervised learning
--   that this <tt>MLModel</tt> will address. Choose from the following
--   types:
--   
--   <ul>
--   <li>Choose <tt>REGRESSION</tt> if the <tt>MLModel</tt> will be used to
--   predict a numeric value.</li>
--   <li>Choose <tt>BINARY</tt> if the <tt>MLModel</tt> result has two
--   possible values.</li>
--   <li>Choose <tt>MULTICLASS</tt> if the <tt>MLModel</tt> result has a
--   limited number of values.</li>
--   </ul>
--   
--   For more information, see the <a>Amazon Machine Learning Developer
--   Guide</a>.
--   
--   <a>$sel:trainingDataSourceId:CreateMLModel'</a>,
--   <a>createMLModel_trainingDataSourceId</a> - The <tt>DataSource</tt>
--   that points to the training data.
newCreateMLModel :: Text -> MLModelType -> Text -> CreateMLModel

-- | Represents the output of a <tt>CreateMLModel</tt> operation, and is an
--   acknowledgement that Amazon ML received the request.
--   
--   The <tt>CreateMLModel</tt> operation is asynchronous. You can poll for
--   status updates by using the <tt>GetMLModel</tt> operation and checking
--   the <tt>Status</tt> parameter.
--   
--   <i>See:</i> <a>newCreateMLModelResponse</a> smart constructor.
data CreateMLModelResponse
CreateMLModelResponse' :: Maybe Text -> Int -> CreateMLModelResponse

-- | Create a value of <a>CreateMLModelResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mLModelId:CreateMLModel'</a>,
--   <a>createMLModelResponse_mLModelId</a> - A user-supplied ID that
--   uniquely identifies the <tt>MLModel</tt>. This value should be
--   identical to the value of the <tt>MLModelId</tt> in the request.
--   
--   <a>$sel:httpStatus:CreateMLModelResponse'</a>,
--   <a>createMLModelResponse_httpStatus</a> - The response's http status
--   code.
newCreateMLModelResponse :: Int -> CreateMLModelResponse

-- | The function used to train an <tt>MLModel</tt>. Training choices
--   supported by Amazon ML include the following:
--   
--   <ul>
--   <li><tt>SGD</tt> - Stochastic Gradient Descent.</li>
--   <li><tt>RandomForest</tt> - Random forest of decision trees.</li>
--   </ul>
newtype Algorithm
Algorithm' :: Text -> Algorithm
[fromAlgorithm] :: Algorithm -> Text
pattern Algorithm_Sgd :: Algorithm

-- | A list of the variables to use in searching or filtering
--   <tt>BatchPrediction</tt>.
--   
--   <ul>
--   <li><tt>CreatedAt</tt> - Sets the search criteria to
--   <tt>BatchPrediction</tt> creation date.</li>
--   <li><tt>Status</tt> - Sets the search criteria to
--   <tt>BatchPrediction</tt> status.</li>
--   <li><tt>Name</tt> - Sets the search criteria to the contents of
--   <tt>BatchPrediction</tt> <tt>Name</tt>.</li>
--   <li><tt>IAMUser</tt> - Sets the search criteria to the user account
--   that invoked the <tt>BatchPrediction</tt> creation.</li>
--   <li><tt>MLModelId</tt> - Sets the search criteria to the
--   <tt>MLModel</tt> used in the <tt>BatchPrediction</tt>.</li>
--   <li><tt>DataSourceId</tt> - Sets the search criteria to the
--   <tt>DataSource</tt> used in the <tt>BatchPrediction</tt>.</li>
--   <li><tt>DataURI</tt> - Sets the search criteria to the data file(s)
--   used in the <tt>BatchPrediction</tt>. The URL can identify either a
--   file or an Amazon Simple Storage Service (Amazon S3) bucket or
--   directory.</li>
--   </ul>
newtype BatchPredictionFilterVariable
BatchPredictionFilterVariable' :: Text -> BatchPredictionFilterVariable
[fromBatchPredictionFilterVariable] :: BatchPredictionFilterVariable -> Text
pattern BatchPredictionFilterVariable_CreatedAt :: BatchPredictionFilterVariable
pattern BatchPredictionFilterVariable_DataSourceId :: BatchPredictionFilterVariable
pattern BatchPredictionFilterVariable_DataURI :: BatchPredictionFilterVariable
pattern BatchPredictionFilterVariable_IAMUser :: BatchPredictionFilterVariable
pattern BatchPredictionFilterVariable_LastUpdatedAt :: BatchPredictionFilterVariable
pattern BatchPredictionFilterVariable_MLModelId :: BatchPredictionFilterVariable
pattern BatchPredictionFilterVariable_Name :: BatchPredictionFilterVariable
pattern BatchPredictionFilterVariable_Status :: BatchPredictionFilterVariable

-- | A list of the variables to use in searching or filtering
--   <tt>DataSource</tt>.
--   
--   <ul>
--   <li><tt>CreatedAt</tt> - Sets the search criteria to
--   <tt>DataSource</tt> creation date.</li>
--   <li><tt>Status</tt> - Sets the search criteria to <tt>DataSource</tt>
--   status.</li>
--   <li><tt>Name</tt> - Sets the search criteria to the contents of
--   <tt>DataSource</tt> <tt>Name</tt>.</li>
--   <li><tt>DataUri</tt> - Sets the search criteria to the URI of data
--   files used to create the <tt>DataSource</tt>. The URI can identify
--   either a file or an Amazon Simple Storage Service (Amazon S3) bucket
--   or directory.</li>
--   <li><tt>IAMUser</tt> - Sets the search criteria to the user account
--   that invoked the <tt>DataSource</tt> creation.</li>
--   </ul>
--   
--   <b>Note:</b> The variable names should match the variable names in the
--   <tt>DataSource</tt>.
newtype DataSourceFilterVariable
DataSourceFilterVariable' :: Text -> DataSourceFilterVariable
[fromDataSourceFilterVariable] :: DataSourceFilterVariable -> Text
pattern DataSourceFilterVariable_CreatedAt :: DataSourceFilterVariable
pattern DataSourceFilterVariable_DataLocationS3 :: DataSourceFilterVariable
pattern DataSourceFilterVariable_IAMUser :: DataSourceFilterVariable
pattern DataSourceFilterVariable_LastUpdatedAt :: DataSourceFilterVariable
pattern DataSourceFilterVariable_Name :: DataSourceFilterVariable
pattern DataSourceFilterVariable_Status :: DataSourceFilterVariable

-- | Contains the key values of <tt>DetailsMap</tt>:
--   
--   <ul>
--   <li><tt>PredictiveModelType</tt> - Indicates the type of the
--   <tt>MLModel</tt>.</li>
--   <li><tt>Algorithm</tt> - Indicates the algorithm that was used for the
--   <tt>MLModel</tt>.</li>
--   </ul>
newtype DetailsAttributes
DetailsAttributes' :: Text -> DetailsAttributes
[fromDetailsAttributes] :: DetailsAttributes -> Text
pattern DetailsAttributes_Algorithm :: DetailsAttributes
pattern DetailsAttributes_PredictiveModelType :: DetailsAttributes

-- | Object status with the following possible values:
--   
--   <ul>
--   <li><pre>PENDING</pre></li>
--   <li><pre>INPROGRESS</pre></li>
--   <li><pre>FAILED</pre></li>
--   <li><pre>COMPLETED</pre></li>
--   <li><pre>DELETED</pre></li>
--   </ul>
newtype EntityStatus
EntityStatus' :: Text -> EntityStatus
[fromEntityStatus] :: EntityStatus -> Text
pattern EntityStatus_COMPLETED :: EntityStatus
pattern EntityStatus_DELETED :: EntityStatus
pattern EntityStatus_FAILED :: EntityStatus
pattern EntityStatus_INPROGRESS :: EntityStatus
pattern EntityStatus_PENDING :: EntityStatus

-- | A list of the variables to use in searching or filtering
--   <tt>Evaluation</tt>.
--   
--   <ul>
--   <li><tt>CreatedAt</tt> - Sets the search criteria to
--   <tt>Evaluation</tt> creation date.</li>
--   <li><tt>Status</tt> - Sets the search criteria to <tt>Evaluation</tt>
--   status.</li>
--   <li><tt>Name</tt> - Sets the search criteria to the contents of
--   <tt>Evaluation</tt> ____ <tt>Name</tt>.</li>
--   <li><tt>IAMUser</tt> - Sets the search criteria to the user account
--   that invoked an evaluation.</li>
--   <li><tt>MLModelId</tt> - Sets the search criteria to the
--   <tt>Predictor</tt> that was evaluated.</li>
--   <li><tt>DataSourceId</tt> - Sets the search criteria to the
--   <tt>DataSource</tt> used in evaluation.</li>
--   <li><tt>DataUri</tt> - Sets the search criteria to the data file(s)
--   used in evaluation. The URL can identify either a file or an Amazon
--   Simple Storage Service (Amazon S3) bucket or directory.</li>
--   </ul>
newtype EvaluationFilterVariable
EvaluationFilterVariable' :: Text -> EvaluationFilterVariable
[fromEvaluationFilterVariable] :: EvaluationFilterVariable -> Text
pattern EvaluationFilterVariable_CreatedAt :: EvaluationFilterVariable
pattern EvaluationFilterVariable_DataSourceId :: EvaluationFilterVariable
pattern EvaluationFilterVariable_DataURI :: EvaluationFilterVariable
pattern EvaluationFilterVariable_IAMUser :: EvaluationFilterVariable
pattern EvaluationFilterVariable_LastUpdatedAt :: EvaluationFilterVariable
pattern EvaluationFilterVariable_MLModelId :: EvaluationFilterVariable
pattern EvaluationFilterVariable_Name :: EvaluationFilterVariable
pattern EvaluationFilterVariable_Status :: EvaluationFilterVariable
newtype MLModelFilterVariable
MLModelFilterVariable' :: Text -> MLModelFilterVariable
[fromMLModelFilterVariable] :: MLModelFilterVariable -> Text
pattern MLModelFilterVariable_Algorithm :: MLModelFilterVariable
pattern MLModelFilterVariable_CreatedAt :: MLModelFilterVariable
pattern MLModelFilterVariable_IAMUser :: MLModelFilterVariable
pattern MLModelFilterVariable_LastUpdatedAt :: MLModelFilterVariable
pattern MLModelFilterVariable_MLModelType :: MLModelFilterVariable
pattern MLModelFilterVariable_Name :: MLModelFilterVariable
pattern MLModelFilterVariable_RealtimeEndpointStatus :: MLModelFilterVariable
pattern MLModelFilterVariable_Status :: MLModelFilterVariable
pattern MLModelFilterVariable_TrainingDataSourceId :: MLModelFilterVariable
pattern MLModelFilterVariable_TrainingDataURI :: MLModelFilterVariable
newtype MLModelType
MLModelType' :: Text -> MLModelType
[fromMLModelType] :: MLModelType -> Text
pattern MLModelType_BINARY :: MLModelType
pattern MLModelType_MULTICLASS :: MLModelType
pattern MLModelType_REGRESSION :: MLModelType
newtype RealtimeEndpointStatus
RealtimeEndpointStatus' :: Text -> RealtimeEndpointStatus
[fromRealtimeEndpointStatus] :: RealtimeEndpointStatus -> Text
pattern RealtimeEndpointStatus_FAILED :: RealtimeEndpointStatus
pattern RealtimeEndpointStatus_NONE :: RealtimeEndpointStatus
pattern RealtimeEndpointStatus_READY :: RealtimeEndpointStatus
pattern RealtimeEndpointStatus_UPDATING :: RealtimeEndpointStatus

-- | The sort order specified in a listing condition. Possible values
--   include the following:
--   
--   <ul>
--   <li><tt>asc</tt> - Present the information in ascending order (from
--   A-Z).</li>
--   <li><tt>dsc</tt> - Present the information in descending order (from
--   Z-A).</li>
--   </ul>
newtype SortOrder
SortOrder' :: Text -> SortOrder
[fromSortOrder] :: SortOrder -> Text
pattern SortOrder_Asc :: SortOrder
pattern SortOrder_Dsc :: SortOrder
newtype TaggableResourceType
TaggableResourceType' :: Text -> TaggableResourceType
[fromTaggableResourceType] :: TaggableResourceType -> Text
pattern TaggableResourceType_BatchPrediction :: TaggableResourceType
pattern TaggableResourceType_DataSource :: TaggableResourceType
pattern TaggableResourceType_Evaluation :: TaggableResourceType
pattern TaggableResourceType_MLModel :: TaggableResourceType

-- | Represents the output of a <tt>GetBatchPrediction</tt> operation.
--   
--   The content consists of the detailed metadata, the status, and the
--   data file information of a <tt>Batch Prediction</tt>.
--   
--   <i>See:</i> <a>newBatchPrediction</a> smart constructor.
data BatchPrediction
BatchPrediction' :: Maybe EntityStatus -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Integer -> Maybe Integer -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Integer -> Maybe POSIX -> BatchPrediction

-- | Create a value of <a>BatchPrediction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:BatchPrediction'</a>, <a>batchPrediction_status</a> -
--   The status of the <tt>BatchPrediction</tt>. This element can have one
--   of the following values:
--   
--   <ul>
--   <li><tt>PENDING</tt> - Amazon Machine Learning (Amazon ML) submitted a
--   request to generate predictions for a batch of observations.</li>
--   <li><tt>INPROGRESS</tt> - The process is underway.</li>
--   <li><tt>FAILED</tt> - The request to perform a batch prediction did
--   not run to completion. It is not usable.</li>
--   <li><tt>COMPLETED</tt> - The batch prediction process completed
--   successfully.</li>
--   <li><tt>DELETED</tt> - The <tt>BatchPrediction</tt> is marked as
--   deleted. It is not usable.</li>
--   </ul>
--   
--   <a>$sel:batchPredictionId:BatchPrediction'</a>,
--   <a>batchPrediction_batchPredictionId</a> - The ID assigned to the
--   <tt>BatchPrediction</tt> at creation. This value should be identical
--   to the value of the <tt>BatchPredictionID</tt> in the request.
--   
--   <a>$sel:startedAt:BatchPrediction'</a>,
--   <a>batchPrediction_startedAt</a> - Undocumented member.
--   
--   <a>$sel:outputUri:BatchPrediction'</a>,
--   <a>batchPrediction_outputUri</a> - The location of an Amazon S3 bucket
--   or directory to receive the operation results. The following
--   substrings are not allowed in the <tt>s3 key</tt> portion of the
--   <tt>outputURI</tt> field: ':', '//', '/./', '/../'.
--   
--   <a>$sel:message:BatchPrediction'</a>, <a>batchPrediction_message</a> -
--   A description of the most recent details about processing the batch
--   prediction request.
--   
--   <a>$sel:createdAt:BatchPrediction'</a>,
--   <a>batchPrediction_createdAt</a> - The time that the
--   <tt>BatchPrediction</tt> was created. The time is expressed in epoch
--   time.
--   
--   <a>$sel:name:BatchPrediction'</a>, <a>batchPrediction_name</a> - A
--   user-supplied name or description of the <tt>BatchPrediction</tt>.
--   
--   <a>$sel:createdByIamUser:BatchPrediction'</a>,
--   <a>batchPrediction_createdByIamUser</a> - The AWS user account that
--   invoked the <tt>BatchPrediction</tt>. The account type can be either
--   an AWS root account or an AWS Identity and Access Management (IAM)
--   user account.
--   
--   <a>$sel:finishedAt:BatchPrediction'</a>,
--   <a>batchPrediction_finishedAt</a> - Undocumented member.
--   
--   <a>$sel:invalidRecordCount:BatchPrediction'</a>,
--   <a>batchPrediction_invalidRecordCount</a> - Undocumented member.
--   
--   <a>$sel:totalRecordCount:BatchPrediction'</a>,
--   <a>batchPrediction_totalRecordCount</a> - Undocumented member.
--   
--   <a>$sel:batchPredictionDataSourceId:BatchPrediction'</a>,
--   <a>batchPrediction_batchPredictionDataSourceId</a> - The ID of the
--   <tt>DataSource</tt> that points to the group of observations to
--   predict.
--   
--   <a>$sel:mLModelId:BatchPrediction'</a>,
--   <a>batchPrediction_mLModelId</a> - The ID of the <tt>MLModel</tt> that
--   generated predictions for the <tt>BatchPrediction</tt> request.
--   
--   <a>$sel:inputDataLocationS3:BatchPrediction'</a>,
--   <a>batchPrediction_inputDataLocationS3</a> - The location of the data
--   file or directory in Amazon Simple Storage Service (Amazon S3).
--   
--   <a>$sel:computeTime:BatchPrediction'</a>,
--   <a>batchPrediction_computeTime</a> - Undocumented member.
--   
--   <a>$sel:lastUpdatedAt:BatchPrediction'</a>,
--   <a>batchPrediction_lastUpdatedAt</a> - The time of the most recent
--   edit to the <tt>BatchPrediction</tt>. The time is expressed in epoch
--   time.
newBatchPrediction :: BatchPrediction

-- | Represents the output of the <tt>GetDataSource</tt> operation.
--   
--   The content consists of the detailed metadata and data file
--   information and the current status of the <tt>DataSource</tt>.
--   
--   <i>See:</i> <a>newDataSource</a> smart constructor.
data DataSource
DataSource' :: Maybe EntityStatus -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe RedshiftMetadata -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Integer -> Maybe Text -> Maybe POSIX -> Maybe Integer -> Maybe Integer -> Maybe RDSMetadata -> Maybe POSIX -> DataSource

-- | Create a value of <a>DataSource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:DataSource'</a>, <a>dataSource_status</a> - The current
--   status of the <tt>DataSource</tt>. This element can have one of the
--   following values:
--   
--   <ul>
--   <li>PENDING - Amazon Machine Learning (Amazon ML) submitted a request
--   to create a <tt>DataSource</tt>.</li>
--   <li>INPROGRESS - The creation process is underway.</li>
--   <li>FAILED - The request to create a <tt>DataSource</tt> did not run
--   to completion. It is not usable.</li>
--   <li>COMPLETED - The creation process completed successfully.</li>
--   <li>DELETED - The <tt>DataSource</tt> is marked as deleted. It is not
--   usable.</li>
--   </ul>
--   
--   <a>$sel:startedAt:DataSource'</a>, <a>dataSource_startedAt</a> -
--   Undocumented member.
--   
--   <a>$sel:roleARN:DataSource'</a>, <a>dataSource_roleARN</a> -
--   Undocumented member.
--   
--   <a>$sel:dataRearrangement:DataSource'</a>,
--   <a>dataSource_dataRearrangement</a> - A JSON string that represents
--   the splitting and rearrangement requirement used when this
--   <tt>DataSource</tt> was created.
--   
--   <a>$sel:redshiftMetadata:DataSource'</a>,
--   <a>dataSource_redshiftMetadata</a> - Undocumented member.
--   
--   <a>$sel:message:DataSource'</a>, <a>dataSource_message</a> - A
--   description of the most recent details about creating the
--   <tt>DataSource</tt>.
--   
--   <a>$sel:dataSourceId:DataSource'</a>, <a>dataSource_dataSourceId</a> -
--   The ID that is assigned to the <tt>DataSource</tt> during creation.
--   
--   <a>$sel:computeStatistics:DataSource'</a>,
--   <a>dataSource_computeStatistics</a> - The parameter is <tt>true</tt>
--   if statistics need to be generated from the observation data.
--   
--   <a>$sel:createdAt:DataSource'</a>, <a>dataSource_createdAt</a> - The
--   time that the <tt>DataSource</tt> was created. The time is expressed
--   in epoch time.
--   
--   <a>$sel:dataLocationS3:DataSource'</a>,
--   <a>dataSource_dataLocationS3</a> - The location and name of the data
--   in Amazon Simple Storage Service (Amazon S3) that is used by a
--   <tt>DataSource</tt>.
--   
--   <a>$sel:name:DataSource'</a>, <a>dataSource_name</a> - A user-supplied
--   name or description of the <tt>DataSource</tt>.
--   
--   <a>$sel:numberOfFiles:DataSource'</a>, <a>dataSource_numberOfFiles</a>
--   - The number of data files referenced by the <tt>DataSource</tt>.
--   
--   <a>$sel:createdByIamUser:DataSource'</a>,
--   <a>dataSource_createdByIamUser</a> - The AWS user account from which
--   the <tt>DataSource</tt> was created. The account type can be either an
--   AWS root account or an AWS Identity and Access Management (IAM) user
--   account.
--   
--   <a>$sel:finishedAt:DataSource'</a>, <a>dataSource_finishedAt</a> -
--   Undocumented member.
--   
--   <a>$sel:dataSizeInBytes:DataSource'</a>,
--   <a>dataSource_dataSizeInBytes</a> - The total number of observations
--   contained in the data files that the <tt>DataSource</tt> references.
--   
--   <a>$sel:computeTime:DataSource'</a>, <a>dataSource_computeTime</a> -
--   Undocumented member.
--   
--   <a>$sel:rDSMetadata:DataSource'</a>, <a>dataSource_rDSMetadata</a> -
--   Undocumented member.
--   
--   <a>$sel:lastUpdatedAt:DataSource'</a>, <a>dataSource_lastUpdatedAt</a>
--   - The time of the most recent edit to the <tt>BatchPrediction</tt>.
--   The time is expressed in epoch time.
newDataSource :: DataSource

-- | Represents the output of <tt>GetEvaluation</tt> operation.
--   
--   The content consists of the detailed metadata and data file
--   information and the current status of the <tt>Evaluation</tt>.
--   
--   <i>See:</i> <a>newEvaluation</a> smart constructor.
data Evaluation
Evaluation' :: Maybe PerformanceMetrics -> Maybe EntityStatus -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Integer -> Maybe POSIX -> Evaluation

-- | Create a value of <a>Evaluation</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:performanceMetrics:Evaluation'</a>,
--   <a>evaluation_performanceMetrics</a> - Measurements of how well the
--   <tt>MLModel</tt> performed, using observations referenced by the
--   <tt>DataSource</tt>. One of the following metrics is returned, based
--   on the type of the <tt>MLModel</tt>:
--   
--   <ul>
--   <li>BinaryAUC: A binary <tt>MLModel</tt> uses the Area Under the Curve
--   (AUC) technique to measure performance.</li>
--   <li>RegressionRMSE: A regression <tt>MLModel</tt> uses the Root Mean
--   Square Error (RMSE) technique to measure performance. RMSE measures
--   the difference between predicted and actual values for a single
--   variable.</li>
--   <li>MulticlassAvgFScore: A multiclass <tt>MLModel</tt> uses the F1
--   score technique to measure performance.</li>
--   </ul>
--   
--   For more information about performance metrics, please see the
--   <a>Amazon Machine Learning Developer Guide</a>.
--   
--   <a>$sel:status:Evaluation'</a>, <a>evaluation_status</a> - The status
--   of the evaluation. This element can have one of the following values:
--   
--   <ul>
--   <li><tt>PENDING</tt> - Amazon Machine Learning (Amazon ML) submitted a
--   request to evaluate an <tt>MLModel</tt>.</li>
--   <li><tt>INPROGRESS</tt> - The evaluation is underway.</li>
--   <li><tt>FAILED</tt> - The request to evaluate an <tt>MLModel</tt> did
--   not run to completion. It is not usable.</li>
--   <li><tt>COMPLETED</tt> - The evaluation process completed
--   successfully.</li>
--   <li><tt>DELETED</tt> - The <tt>Evaluation</tt> is marked as deleted.
--   It is not usable.</li>
--   </ul>
--   
--   <a>$sel:startedAt:Evaluation'</a>, <a>evaluation_startedAt</a> -
--   Undocumented member.
--   
--   <a>$sel:evaluationDataSourceId:Evaluation'</a>,
--   <a>evaluation_evaluationDataSourceId</a> - The ID of the
--   <tt>DataSource</tt> that is used to evaluate the <tt>MLModel</tt>.
--   
--   <a>$sel:message:Evaluation'</a>, <a>evaluation_message</a> - A
--   description of the most recent details about evaluating the
--   <tt>MLModel</tt>.
--   
--   <a>$sel:createdAt:Evaluation'</a>, <a>evaluation_createdAt</a> - The
--   time that the <tt>Evaluation</tt> was created. The time is expressed
--   in epoch time.
--   
--   <a>$sel:name:Evaluation'</a>, <a>evaluation_name</a> - A user-supplied
--   name or description of the <tt>Evaluation</tt>.
--   
--   <a>$sel:createdByIamUser:Evaluation'</a>,
--   <a>evaluation_createdByIamUser</a> - The AWS user account that invoked
--   the evaluation. The account type can be either an AWS root account or
--   an AWS Identity and Access Management (IAM) user account.
--   
--   <a>$sel:finishedAt:Evaluation'</a>, <a>evaluation_finishedAt</a> -
--   Undocumented member.
--   
--   <a>$sel:mLModelId:Evaluation'</a>, <a>evaluation_mLModelId</a> - The
--   ID of the <tt>MLModel</tt> that is the focus of the evaluation.
--   
--   <a>$sel:evaluationId:Evaluation'</a>, <a>evaluation_evaluationId</a> -
--   The ID that is assigned to the <tt>Evaluation</tt> at creation.
--   
--   <a>$sel:inputDataLocationS3:Evaluation'</a>,
--   <a>evaluation_inputDataLocationS3</a> - The location and name of the
--   data in Amazon Simple Storage Server (Amazon S3) that is used in the
--   evaluation.
--   
--   <a>$sel:computeTime:Evaluation'</a>, <a>evaluation_computeTime</a> -
--   Undocumented member.
--   
--   <a>$sel:lastUpdatedAt:Evaluation'</a>, <a>evaluation_lastUpdatedAt</a>
--   - The time of the most recent edit to the <tt>Evaluation</tt>. The
--   time is expressed in epoch time.
newEvaluation :: Evaluation

-- | Represents the output of a <tt>GetMLModel</tt> operation.
--   
--   The content consists of the detailed metadata and the current status
--   of the <tt>MLModel</tt>.
--   
--   <i>See:</i> <a>newMLModel</a> smart constructor.
data MLModel
MLModel' :: Maybe Algorithm -> Maybe EntityStatus -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe RealtimeEndpointInfo -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Double -> Maybe MLModelType -> Maybe Integer -> Maybe Text -> Maybe Text -> Maybe Integer -> Maybe Text -> Maybe POSIX -> MLModel

-- | Create a value of <a>MLModel</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:algorithm:MLModel'</a>, <a>mLModel_algorithm</a> - The
--   algorithm used to train the <tt>MLModel</tt>. The following algorithm
--   is supported:
--   
--   <ul>
--   <li><tt>SGD</tt> -- Stochastic gradient descent. The goal of
--   <tt>SGD</tt> is to minimize the gradient of the loss function.</li>
--   </ul>
--   
--   <a>$sel:status:MLModel'</a>, <a>mLModel_status</a> - The current
--   status of an <tt>MLModel</tt>. This element can have one of the
--   following values:
--   
--   <ul>
--   <li><tt>PENDING</tt> - Amazon Machine Learning (Amazon ML) submitted a
--   request to create an <tt>MLModel</tt>.</li>
--   <li><tt>INPROGRESS</tt> - The creation process is underway.</li>
--   <li><tt>FAILED</tt> - The request to create an <tt>MLModel</tt> didn't
--   run to completion. The model isn't usable.</li>
--   <li><tt>COMPLETED</tt> - The creation process completed
--   successfully.</li>
--   <li><tt>DELETED</tt> - The <tt>MLModel</tt> is marked as deleted. It
--   isn't usable.</li>
--   </ul>
--   
--   <a>$sel:startedAt:MLModel'</a>, <a>mLModel_startedAt</a> -
--   Undocumented member.
--   
--   <a>$sel:message:MLModel'</a>, <a>mLModel_message</a> - A description
--   of the most recent details about accessing the <tt>MLModel</tt>.
--   
--   <a>$sel:createdAt:MLModel'</a>, <a>mLModel_createdAt</a> - The time
--   that the <tt>MLModel</tt> was created. The time is expressed in epoch
--   time.
--   
--   <a>$sel:scoreThresholdLastUpdatedAt:MLModel'</a>,
--   <a>mLModel_scoreThresholdLastUpdatedAt</a> - The time of the most
--   recent edit to the <tt>ScoreThreshold</tt>. The time is expressed in
--   epoch time.
--   
--   <a>$sel:endpointInfo:MLModel'</a>, <a>mLModel_endpointInfo</a> - The
--   current endpoint of the <tt>MLModel</tt>.
--   
--   <a>$sel:trainingParameters:MLModel'</a>,
--   <a>mLModel_trainingParameters</a> - A list of the training parameters
--   in the <tt>MLModel</tt>. The list is implemented as a map of key-value
--   pairs.
--   
--   The following is the current set of training parameters:
--   
--   <ul>
--   <li><tt>sgd.maxMLModelSizeInBytes</tt> - The maximum allowed size of
--   the model. Depending on the input data, the size of the model might
--   affect its performance.The value is an integer that ranges from
--   <tt>100000</tt> to <tt>2147483648</tt>. The default value is
--   <tt>33554432</tt>.</li>
--   <li><tt>sgd.maxPasses</tt> - The number of times that the training
--   process traverses the observations to build the <tt>MLModel</tt>. The
--   value is an integer that ranges from <tt>1</tt> to <tt>10000</tt>. The
--   default value is <tt>10</tt>.</li>
--   <li><tt>sgd.shuffleType</tt> - Whether Amazon ML shuffles the training
--   data. Shuffling the data improves a model's ability to find the
--   optimal solution for a variety of data types. The valid values are
--   <tt>auto</tt> and <tt>none</tt>. The default value is
--   <tt>none</tt>.</li>
--   <li><tt>sgd.l1RegularizationAmount</tt> - The coefficient
--   regularization L1 norm, which controls overfitting the data by
--   penalizing large coefficients. This parameter tends to drive
--   coefficients to zero, resulting in sparse feature set. If you use this
--   parameter, start by specifying a small value, such as
--   <tt>1.0E-08</tt>.The value is a double that ranges from <tt>0</tt> to
--   <tt>MAX_DOUBLE</tt>. The default is to not use L1 normalization. This
--   parameter can't be used when <tt>L2</tt> is specified. Use this
--   parameter sparingly.</li>
--   <li><tt>sgd.l2RegularizationAmount</tt> - The coefficient
--   regularization L2 norm, which controls overfitting the data by
--   penalizing large coefficients. This tends to drive coefficients to
--   small, nonzero values. If you use this parameter, start by specifying
--   a small value, such as <tt>1.0E-08</tt>.The value is a double that
--   ranges from <tt>0</tt> to <tt>MAX_DOUBLE</tt>. The default is to not
--   use L2 normalization. This parameter can't be used when <tt>L1</tt> is
--   specified. Use this parameter sparingly.</li>
--   </ul>
--   
--   <a>$sel:name:MLModel'</a>, <a>mLModel_name</a> - A user-supplied name
--   or description of the <tt>MLModel</tt>.
--   
--   <a>$sel:createdByIamUser:MLModel'</a>, <a>mLModel_createdByIamUser</a>
--   - The AWS user account from which the <tt>MLModel</tt> was created.
--   The account type can be either an AWS root account or an AWS Identity
--   and Access Management (IAM) user account.
--   
--   <a>$sel:finishedAt:MLModel'</a>, <a>mLModel_finishedAt</a> -
--   Undocumented member.
--   
--   <a>$sel:scoreThreshold:MLModel'</a>, <a>mLModel_scoreThreshold</a> -
--   Undocumented member.
--   
--   <a>$sel:mLModelType:MLModel'</a>, <a>mLModel_mLModelType</a> -
--   Identifies the <tt>MLModel</tt> category. The following are the
--   available types:
--   
--   <ul>
--   <li><tt>REGRESSION</tt> - Produces a numeric result. For example,
--   "What price should a house be listed at?"</li>
--   <li><tt>BINARY</tt> - Produces one of two possible results. For
--   example, "Is this a child-friendly web site?".</li>
--   <li><tt>MULTICLASS</tt> - Produces one of several possible results.
--   For example, "Is this a HIGH-, LOW-, or MEDIUM-risk trade?".</li>
--   </ul>
--   
--   <a>$sel:sizeInBytes:MLModel'</a>, <a>mLModel_sizeInBytes</a> -
--   Undocumented member.
--   
--   <a>$sel:mLModelId:MLModel'</a>, <a>mLModel_mLModelId</a> - The ID
--   assigned to the <tt>MLModel</tt> at creation.
--   
--   <a>$sel:inputDataLocationS3:MLModel'</a>,
--   <a>mLModel_inputDataLocationS3</a> - The location of the data file or
--   directory in Amazon Simple Storage Service (Amazon S3).
--   
--   <a>$sel:computeTime:MLModel'</a>, <a>mLModel_computeTime</a> -
--   Undocumented member.
--   
--   <a>$sel:trainingDataSourceId:MLModel'</a>,
--   <a>mLModel_trainingDataSourceId</a> - The ID of the training
--   <tt>DataSource</tt>. The <tt>CreateMLModel</tt> operation uses the
--   <tt>TrainingDataSourceId</tt>.
--   
--   <a>$sel:lastUpdatedAt:MLModel'</a>, <a>mLModel_lastUpdatedAt</a> - The
--   time of the most recent edit to the <tt>MLModel</tt>. The time is
--   expressed in epoch time.
newMLModel :: MLModel

-- | Measurements of how well the <tt>MLModel</tt> performed on known
--   observations. One of the following metrics is returned, based on the
--   type of the <tt>MLModel</tt>:
--   
--   <ul>
--   <li>BinaryAUC: The binary <tt>MLModel</tt> uses the Area Under the
--   Curve (AUC) technique to measure performance.</li>
--   <li>RegressionRMSE: The regression <tt>MLModel</tt> uses the Root Mean
--   Square Error (RMSE) technique to measure performance. RMSE measures
--   the difference between predicted and actual values for a single
--   variable.</li>
--   <li>MulticlassAvgFScore: The multiclass <tt>MLModel</tt> uses the F1
--   score technique to measure performance.</li>
--   </ul>
--   
--   For more information about performance metrics, please see the
--   <a>Amazon Machine Learning Developer Guide</a>.
--   
--   <i>See:</i> <a>newPerformanceMetrics</a> smart constructor.
data PerformanceMetrics
PerformanceMetrics' :: Maybe (HashMap Text Text) -> PerformanceMetrics

-- | Create a value of <a>PerformanceMetrics</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:properties:PerformanceMetrics'</a>,
--   <a>performanceMetrics_properties</a> - Undocumented member.
newPerformanceMetrics :: PerformanceMetrics

-- | The output from a <tt>Predict</tt> operation:
--   
--   <ul>
--   <li><tt>Details</tt> - Contains the following attributes:
--   <tt>DetailsAttributes.PREDICTIVE_MODEL_TYPE - REGRESSION | BINARY |
--   MULTICLASS</tt> <tt>DetailsAttributes.ALGORITHM - SGD</tt></li>
--   <li><tt>PredictedLabel</tt> - Present for either a <tt>BINARY</tt> or
--   <tt>MULTICLASS</tt> <tt>MLModel</tt> request.</li>
--   <li><tt>PredictedScores</tt> - Contains the raw classification score
--   corresponding to each label.</li>
--   <li><tt>PredictedValue</tt> - Present for a <tt>REGRESSION</tt>
--   <tt>MLModel</tt> request.</li>
--   </ul>
--   
--   <i>See:</i> <a>newPrediction</a> smart constructor.
data Prediction
Prediction' :: Maybe Double -> Maybe (HashMap Text Double) -> Maybe Text -> Maybe (HashMap DetailsAttributes Text) -> Prediction

-- | Create a value of <a>Prediction</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:predictedValue:Prediction'</a>,
--   <a>prediction_predictedValue</a> - The prediction value for
--   <tt>REGRESSION</tt> <tt>MLModel</tt>.
--   
--   <a>$sel:predictedScores:Prediction'</a>,
--   <a>prediction_predictedScores</a> - Undocumented member.
--   
--   <a>$sel:predictedLabel:Prediction'</a>,
--   <a>prediction_predictedLabel</a> - The prediction label for either a
--   <tt>BINARY</tt> or <tt>MULTICLASS</tt> <tt>MLModel</tt>.
--   
--   <a>$sel:details:Prediction'</a>, <a>prediction_details</a> -
--   Undocumented member.
newPrediction :: Prediction

-- | The data specification of an Amazon Relational Database Service
--   (Amazon RDS) <tt>DataSource</tt>.
--   
--   <i>See:</i> <a>newRDSDataSpec</a> smart constructor.
data RDSDataSpec
RDSDataSpec' :: Maybe Text -> Maybe Text -> Maybe Text -> RDSDatabase -> Text -> RDSDatabaseCredentials -> Text -> Text -> Text -> Text -> [Text] -> RDSDataSpec

-- | Create a value of <a>RDSDataSpec</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataSchema:RDSDataSpec'</a>, <a>rDSDataSpec_dataSchema</a> - A
--   JSON string that represents the schema for an Amazon RDS
--   <tt>DataSource</tt>. The <tt>DataSchema</tt> defines the structure of
--   the observation data in the data file(s) referenced in the
--   <tt>DataSource</tt>.
--   
--   A <tt>DataSchema</tt> is not required if you specify a
--   <tt>DataSchemaUri</tt>
--   
--   Define your <tt>DataSchema</tt> as a series of key-value pairs.
--   <tt>attributes</tt> and <tt>excludedVariableNames</tt> have an array
--   of key-value pairs for their value. Use the following format to define
--   your <tt>DataSchema</tt>.
--   
--   { "version": "1.0",
--   
--   "recordAnnotationFieldName": "F1",
--   
--   "recordWeightFieldName": "F2",
--   
--   "targetFieldName": "F3",
--   
--   "dataFormat": "CSV",
--   
--   "dataFileContainsHeader": true,
--   
--   "attributes": [
--   
--   { "fieldName": "F1", "fieldType": "TEXT" }, { "fieldName": "F2",
--   "fieldType": "NUMERIC" }, { "fieldName": "F3", "fieldType":
--   "CATEGORICAL" }, { "fieldName": "F4", "fieldType": "NUMERIC" }, {
--   "fieldName": "F5", "fieldType": "CATEGORICAL" }, { "fieldName": "F6",
--   "fieldType": "TEXT" }, { "fieldName": "F7", "fieldType":
--   "WEIGHTED_INT_SEQUENCE" }, { "fieldName": "F8", "fieldType":
--   "WEIGHTED_STRING_SEQUENCE" } ],
--   
--   "excludedVariableNames": [ "F6" ] }
--   
--   <a>$sel:dataRearrangement:RDSDataSpec'</a>,
--   <a>rDSDataSpec_dataRearrangement</a> - A JSON string that represents
--   the splitting and rearrangement processing to be applied to a
--   <tt>DataSource</tt>. If the <tt>DataRearrangement</tt> parameter is
--   not provided, all of the input data is used to create the
--   <tt>Datasource</tt>.
--   
--   There are multiple parameters that control what data is used to create
--   a datasource:
--   
--   <ul>
--   <li><b><tt>percentBegin</tt></b>Use <tt>percentBegin</tt> to indicate
--   the beginning of the range of the data used to create the Datasource.
--   If you do not include <tt>percentBegin</tt> and <tt>percentEnd</tt>,
--   Amazon ML includes all of the data when creating the datasource.</li>
--   <li><b><tt>percentEnd</tt></b>Use <tt>percentEnd</tt> to indicate the
--   end of the range of the data used to create the Datasource. If you do
--   not include <tt>percentBegin</tt> and <tt>percentEnd</tt>, Amazon ML
--   includes all of the data when creating the datasource.</li>
--   <li><b><tt>complement</tt></b>The <tt>complement</tt> parameter
--   instructs Amazon ML to use the data that is not included in the range
--   of <tt>percentBegin</tt> to <tt>percentEnd</tt> to create a
--   datasource. The <tt>complement</tt> parameter is useful if you need to
--   create complementary datasources for training and evaluation. To
--   create a complementary datasource, use the same values for
--   <tt>percentBegin</tt> and <tt>percentEnd</tt>, along with the
--   <tt>complement</tt> parameter.For example, the following two
--   datasources do not share any data, and can be used to train and
--   evaluate a model. The first datasource has 25 percent of the data, and
--   the second one has 75 percent of the data.Datasource for evaluation:
--   <tt>{"splitting":{"percentBegin":0, "percentEnd":25}}</tt>Datasource
--   for training: <tt>{"splitting":{"percentBegin":0, "percentEnd":25,
--   "complement":"true"}}</tt></li>
--   <li><b><tt>strategy</tt></b>To change how Amazon ML splits the data
--   for a datasource, use the <tt>strategy</tt> parameter.The default
--   value for the <tt>strategy</tt> parameter is <tt>sequential</tt>,
--   meaning that Amazon ML takes all of the data records between the
--   <tt>percentBegin</tt> and <tt>percentEnd</tt> parameters for the
--   datasource, in the order that the records appear in the input data.The
--   following two <tt>DataRearrangement</tt> lines are examples of
--   sequentially ordered training and evaluation datasources:Datasource
--   for evaluation: <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"sequential"}}</tt>Datasource for training:
--   <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"sequential", "complement":"true"}}</tt>To randomly split
--   the input data into the proportions indicated by the percentBegin and
--   percentEnd parameters, set the <tt>strategy</tt> parameter to
--   <tt>random</tt> and provide a string that is used as the seed value
--   for the random data splitting (for example, you can use the S3 path to
--   your data as the random seed string). If you choose the random split
--   strategy, Amazon ML assigns each row of data a pseudo-random number
--   between 0 and 100, and then selects the rows that have an assigned
--   number between <tt>percentBegin</tt> and <tt>percentEnd</tt>.
--   Pseudo-random numbers are assigned using both the input seed string
--   value and the byte offset as a seed, so changing the data results in a
--   different split. Any existing ordering is preserved. The random
--   splitting strategy ensures that variables in the training and
--   evaluation data are distributed similarly. It is useful in the cases
--   where the input data may have an implicit sort order, which would
--   otherwise result in training and evaluation datasources containing
--   non-similar data records.The following two <tt>DataRearrangement</tt>
--   lines are examples of non-sequentially ordered training and evaluation
--   datasources:Datasource for evaluation:
--   <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"random",
--   "randomSeed"="s3://my_s3_path/bucket/file.csv"}}</tt>Datasource for
--   training: <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"random", "randomSeed"="s3://my_s3_path/bucket/file.csv",
--   "complement":"true"}}</tt></li>
--   </ul>
--   
--   <a>$sel:dataSchemaUri:RDSDataSpec'</a>,
--   <a>rDSDataSpec_dataSchemaUri</a> - The Amazon S3 location of the
--   <tt>DataSchema</tt>.
--   
--   <a>$sel:databaseInformation:RDSDataSpec'</a>,
--   <a>rDSDataSpec_databaseInformation</a> - Describes the
--   <tt>DatabaseName</tt> and <tt>InstanceIdentifier</tt> of an Amazon RDS
--   database.
--   
--   <a>$sel:selectSqlQuery:RDSDataSpec'</a>,
--   <a>rDSDataSpec_selectSqlQuery</a> - The query that is used to retrieve
--   the observation data for the <tt>DataSource</tt>.
--   
--   <a>$sel:databaseCredentials:RDSDataSpec'</a>,
--   <a>rDSDataSpec_databaseCredentials</a> - The AWS Identity and Access
--   Management (IAM) credentials that are used connect to the Amazon RDS
--   database.
--   
--   <a>$sel:s3StagingLocation:RDSDataSpec'</a>,
--   <a>rDSDataSpec_s3StagingLocation</a> - The Amazon S3 location for
--   staging Amazon RDS data. The data retrieved from Amazon RDS using
--   <tt>SelectSqlQuery</tt> is stored in this location.
--   
--   <a>$sel:resourceRole:RDSDataSpec'</a>, <a>rDSDataSpec_resourceRole</a>
--   - The role (DataPipelineDefaultResourceRole) assumed by an Amazon
--   Elastic Compute Cloud (Amazon EC2) instance to carry out the copy
--   operation from Amazon RDS to an Amazon S3 task. For more information,
--   see <a>Role templates</a> for data pipelines.
--   
--   <a>$sel:serviceRole:RDSDataSpec'</a>, <a>rDSDataSpec_serviceRole</a> -
--   The role (DataPipelineDefaultRole) assumed by AWS Data Pipeline
--   service to monitor the progress of the copy task from Amazon RDS to
--   Amazon S3. For more information, see <a>Role templates</a> for data
--   pipelines.
--   
--   <a>$sel:subnetId:RDSDataSpec'</a>, <a>rDSDataSpec_subnetId</a> - The
--   subnet ID to be used to access a VPC-based RDS DB instance. This
--   attribute is used by Data Pipeline to carry out the copy task from
--   Amazon RDS to Amazon S3.
--   
--   <a>$sel:securityGroupIds:RDSDataSpec'</a>,
--   <a>rDSDataSpec_securityGroupIds</a> - The security group IDs to be
--   used to access a VPC-based RDS DB instance. Ensure that there are
--   appropriate ingress rules set up to allow access to the RDS DB
--   instance. This attribute is used by Data Pipeline to carry out the
--   copy operation from Amazon RDS to an Amazon S3 task.
newRDSDataSpec :: RDSDatabase -> Text -> RDSDatabaseCredentials -> Text -> Text -> Text -> Text -> RDSDataSpec

-- | The database details of an Amazon RDS database.
--   
--   <i>See:</i> <a>newRDSDatabase</a> smart constructor.
data RDSDatabase
RDSDatabase' :: Text -> Text -> RDSDatabase

-- | Create a value of <a>RDSDatabase</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceIdentifier:RDSDatabase'</a>,
--   <a>rDSDatabase_instanceIdentifier</a> - The ID of an RDS DB instance.
--   
--   <a>$sel:databaseName:RDSDatabase'</a>, <a>rDSDatabase_databaseName</a>
--   - Undocumented member.
newRDSDatabase :: Text -> Text -> RDSDatabase

-- | The database credentials to connect to a database on an RDS DB
--   instance.
--   
--   <i>See:</i> <a>newRDSDatabaseCredentials</a> smart constructor.
data RDSDatabaseCredentials
RDSDatabaseCredentials' :: Text -> Text -> RDSDatabaseCredentials

-- | Create a value of <a>RDSDatabaseCredentials</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:username:RDSDatabaseCredentials'</a>,
--   <a>rDSDatabaseCredentials_username</a> - Undocumented member.
--   
--   <a>$sel:password:RDSDatabaseCredentials'</a>,
--   <a>rDSDatabaseCredentials_password</a> - Undocumented member.
newRDSDatabaseCredentials :: Text -> Text -> RDSDatabaseCredentials

-- | The datasource details that are specific to Amazon RDS.
--   
--   <i>See:</i> <a>newRDSMetadata</a> smart constructor.
data RDSMetadata
RDSMetadata' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe RDSDatabase -> RDSMetadata

-- | Create a value of <a>RDSMetadata</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataPipelineId:RDSMetadata'</a>,
--   <a>rDSMetadata_dataPipelineId</a> - The ID of the Data Pipeline
--   instance that is used to carry to copy data from Amazon RDS to Amazon
--   S3. You can use the ID to find details about the instance in the Data
--   Pipeline console.
--   
--   <a>$sel:selectSqlQuery:RDSMetadata'</a>,
--   <a>rDSMetadata_selectSqlQuery</a> - The SQL query that is supplied
--   during CreateDataSourceFromRDS. Returns only if <tt>Verbose</tt> is
--   true in <tt>GetDataSourceInput</tt>.
--   
--   <a>$sel:serviceRole:RDSMetadata'</a>, <a>rDSMetadata_serviceRole</a> -
--   The role (DataPipelineDefaultRole) assumed by the Data Pipeline
--   service to monitor the progress of the copy task from Amazon RDS to
--   Amazon S3. For more information, see <a>Role templates</a> for data
--   pipelines.
--   
--   <a>$sel:resourceRole:RDSMetadata'</a>, <a>rDSMetadata_resourceRole</a>
--   - The role (DataPipelineDefaultResourceRole) assumed by an Amazon EC2
--   instance to carry out the copy task from Amazon RDS to Amazon S3. For
--   more information, see <a>Role templates</a> for data pipelines.
--   
--   <a>$sel:databaseUserName:RDSMetadata'</a>,
--   <a>rDSMetadata_databaseUserName</a> - Undocumented member.
--   
--   <a>$sel:database:RDSMetadata'</a>, <a>rDSMetadata_database</a> - The
--   database details required to connect to an Amazon RDS.
newRDSMetadata :: RDSMetadata

-- | Describes the real-time endpoint information for an <tt>MLModel</tt>.
--   
--   <i>See:</i> <a>newRealtimeEndpointInfo</a> smart constructor.
data RealtimeEndpointInfo
RealtimeEndpointInfo' :: Maybe POSIX -> Maybe Int -> Maybe RealtimeEndpointStatus -> Maybe Text -> RealtimeEndpointInfo

-- | Create a value of <a>RealtimeEndpointInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdAt:RealtimeEndpointInfo'</a>,
--   <a>realtimeEndpointInfo_createdAt</a> - The time that the request to
--   create the real-time endpoint for the <tt>MLModel</tt> was received.
--   The time is expressed in epoch time.
--   
--   <a>$sel:peakRequestsPerSecond:RealtimeEndpointInfo'</a>,
--   <a>realtimeEndpointInfo_peakRequestsPerSecond</a> - The maximum
--   processing rate for the real-time endpoint for <tt>MLModel</tt>,
--   measured in incoming requests per second.
--   
--   <a>$sel:endpointStatus:RealtimeEndpointInfo'</a>,
--   <a>realtimeEndpointInfo_endpointStatus</a> - The current status of the
--   real-time endpoint for the <tt>MLModel</tt>. This element can have one
--   of the following values:
--   
--   <ul>
--   <li><tt>NONE</tt> - Endpoint does not exist or was previously
--   deleted.</li>
--   <li><tt>READY</tt> - Endpoint is ready to be used for real-time
--   predictions.</li>
--   <li><tt>UPDATING</tt> - Updating/creating the endpoint.</li>
--   </ul>
--   
--   <a>$sel:endpointUrl:RealtimeEndpointInfo'</a>,
--   <a>realtimeEndpointInfo_endpointUrl</a> - The URI that specifies where
--   to send real-time prediction requests for the <tt>MLModel</tt>.
--   
--   <b>Note:</b> The application must wait until the real-time endpoint is
--   ready before using this URI.
newRealtimeEndpointInfo :: RealtimeEndpointInfo

-- | Describes the data specification of an Amazon Redshift
--   <tt>DataSource</tt>.
--   
--   <i>See:</i> <a>newRedshiftDataSpec</a> smart constructor.
data RedshiftDataSpec
RedshiftDataSpec' :: Maybe Text -> Maybe Text -> Maybe Text -> RedshiftDatabase -> Text -> RedshiftDatabaseCredentials -> Text -> RedshiftDataSpec

-- | Create a value of <a>RedshiftDataSpec</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataSchema:RedshiftDataSpec'</a>,
--   <a>redshiftDataSpec_dataSchema</a> - A JSON string that represents the
--   schema for an Amazon Redshift <tt>DataSource</tt>. The
--   <tt>DataSchema</tt> defines the structure of the observation data in
--   the data file(s) referenced in the <tt>DataSource</tt>.
--   
--   A <tt>DataSchema</tt> is not required if you specify a
--   <tt>DataSchemaUri</tt>.
--   
--   Define your <tt>DataSchema</tt> as a series of key-value pairs.
--   <tt>attributes</tt> and <tt>excludedVariableNames</tt> have an array
--   of key-value pairs for their value. Use the following format to define
--   your <tt>DataSchema</tt>.
--   
--   { "version": "1.0",
--   
--   "recordAnnotationFieldName": "F1",
--   
--   "recordWeightFieldName": "F2",
--   
--   "targetFieldName": "F3",
--   
--   "dataFormat": "CSV",
--   
--   "dataFileContainsHeader": true,
--   
--   "attributes": [
--   
--   { "fieldName": "F1", "fieldType": "TEXT" }, { "fieldName": "F2",
--   "fieldType": "NUMERIC" }, { "fieldName": "F3", "fieldType":
--   "CATEGORICAL" }, { "fieldName": "F4", "fieldType": "NUMERIC" }, {
--   "fieldName": "F5", "fieldType": "CATEGORICAL" }, { "fieldName": "F6",
--   "fieldType": "TEXT" }, { "fieldName": "F7", "fieldType":
--   "WEIGHTED_INT_SEQUENCE" }, { "fieldName": "F8", "fieldType":
--   "WEIGHTED_STRING_SEQUENCE" } ],
--   
--   "excludedVariableNames": [ "F6" ] }
--   
--   <a>$sel:dataRearrangement:RedshiftDataSpec'</a>,
--   <a>redshiftDataSpec_dataRearrangement</a> - A JSON string that
--   represents the splitting and rearrangement processing to be applied to
--   a <tt>DataSource</tt>. If the <tt>DataRearrangement</tt> parameter is
--   not provided, all of the input data is used to create the
--   <tt>Datasource</tt>.
--   
--   There are multiple parameters that control what data is used to create
--   a datasource:
--   
--   <ul>
--   <li><b><tt>percentBegin</tt></b>Use <tt>percentBegin</tt> to indicate
--   the beginning of the range of the data used to create the Datasource.
--   If you do not include <tt>percentBegin</tt> and <tt>percentEnd</tt>,
--   Amazon ML includes all of the data when creating the datasource.</li>
--   <li><b><tt>percentEnd</tt></b>Use <tt>percentEnd</tt> to indicate the
--   end of the range of the data used to create the Datasource. If you do
--   not include <tt>percentBegin</tt> and <tt>percentEnd</tt>, Amazon ML
--   includes all of the data when creating the datasource.</li>
--   <li><b><tt>complement</tt></b>The <tt>complement</tt> parameter
--   instructs Amazon ML to use the data that is not included in the range
--   of <tt>percentBegin</tt> to <tt>percentEnd</tt> to create a
--   datasource. The <tt>complement</tt> parameter is useful if you need to
--   create complementary datasources for training and evaluation. To
--   create a complementary datasource, use the same values for
--   <tt>percentBegin</tt> and <tt>percentEnd</tt>, along with the
--   <tt>complement</tt> parameter.For example, the following two
--   datasources do not share any data, and can be used to train and
--   evaluate a model. The first datasource has 25 percent of the data, and
--   the second one has 75 percent of the data.Datasource for evaluation:
--   <tt>{"splitting":{"percentBegin":0, "percentEnd":25}}</tt>Datasource
--   for training: <tt>{"splitting":{"percentBegin":0, "percentEnd":25,
--   "complement":"true"}}</tt></li>
--   <li><b><tt>strategy</tt></b>To change how Amazon ML splits the data
--   for a datasource, use the <tt>strategy</tt> parameter.The default
--   value for the <tt>strategy</tt> parameter is <tt>sequential</tt>,
--   meaning that Amazon ML takes all of the data records between the
--   <tt>percentBegin</tt> and <tt>percentEnd</tt> parameters for the
--   datasource, in the order that the records appear in the input data.The
--   following two <tt>DataRearrangement</tt> lines are examples of
--   sequentially ordered training and evaluation datasources:Datasource
--   for evaluation: <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"sequential"}}</tt>Datasource for training:
--   <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"sequential", "complement":"true"}}</tt>To randomly split
--   the input data into the proportions indicated by the percentBegin and
--   percentEnd parameters, set the <tt>strategy</tt> parameter to
--   <tt>random</tt> and provide a string that is used as the seed value
--   for the random data splitting (for example, you can use the S3 path to
--   your data as the random seed string). If you choose the random split
--   strategy, Amazon ML assigns each row of data a pseudo-random number
--   between 0 and 100, and then selects the rows that have an assigned
--   number between <tt>percentBegin</tt> and <tt>percentEnd</tt>.
--   Pseudo-random numbers are assigned using both the input seed string
--   value and the byte offset as a seed, so changing the data results in a
--   different split. Any existing ordering is preserved. The random
--   splitting strategy ensures that variables in the training and
--   evaluation data are distributed similarly. It is useful in the cases
--   where the input data may have an implicit sort order, which would
--   otherwise result in training and evaluation datasources containing
--   non-similar data records.The following two <tt>DataRearrangement</tt>
--   lines are examples of non-sequentially ordered training and evaluation
--   datasources:Datasource for evaluation:
--   <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"random",
--   "randomSeed"="s3://my_s3_path/bucket/file.csv"}}</tt>Datasource for
--   training: <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"random", "randomSeed"="s3://my_s3_path/bucket/file.csv",
--   "complement":"true"}}</tt></li>
--   </ul>
--   
--   <a>$sel:dataSchemaUri:RedshiftDataSpec'</a>,
--   <a>redshiftDataSpec_dataSchemaUri</a> - Describes the schema location
--   for an Amazon Redshift <tt>DataSource</tt>.
--   
--   <a>$sel:databaseInformation:RedshiftDataSpec'</a>,
--   <a>redshiftDataSpec_databaseInformation</a> - Describes the
--   <tt>DatabaseName</tt> and <tt>ClusterIdentifier</tt> for an Amazon
--   Redshift <tt>DataSource</tt>.
--   
--   <a>$sel:selectSqlQuery:RedshiftDataSpec'</a>,
--   <a>redshiftDataSpec_selectSqlQuery</a> - Describes the SQL Query to
--   execute on an Amazon Redshift database for an Amazon Redshift
--   <tt>DataSource</tt>.
--   
--   <a>$sel:databaseCredentials:RedshiftDataSpec'</a>,
--   <a>redshiftDataSpec_databaseCredentials</a> - Describes AWS Identity
--   and Access Management (IAM) credentials that are used connect to the
--   Amazon Redshift database.
--   
--   <a>$sel:s3StagingLocation:RedshiftDataSpec'</a>,
--   <a>redshiftDataSpec_s3StagingLocation</a> - Describes an Amazon S3
--   location to store the result set of the <tt>SelectSqlQuery</tt> query.
newRedshiftDataSpec :: RedshiftDatabase -> Text -> RedshiftDatabaseCredentials -> Text -> RedshiftDataSpec

-- | Describes the database details required to connect to an Amazon
--   Redshift database.
--   
--   <i>See:</i> <a>newRedshiftDatabase</a> smart constructor.
data RedshiftDatabase
RedshiftDatabase' :: Text -> Text -> RedshiftDatabase

-- | Create a value of <a>RedshiftDatabase</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:databaseName:RedshiftDatabase'</a>,
--   <a>redshiftDatabase_databaseName</a> - Undocumented member.
--   
--   <a>$sel:clusterIdentifier:RedshiftDatabase'</a>,
--   <a>redshiftDatabase_clusterIdentifier</a> - Undocumented member.
newRedshiftDatabase :: Text -> Text -> RedshiftDatabase

-- | Describes the database credentials for connecting to a database on an
--   Amazon Redshift cluster.
--   
--   <i>See:</i> <a>newRedshiftDatabaseCredentials</a> smart constructor.
data RedshiftDatabaseCredentials
RedshiftDatabaseCredentials' :: Text -> Text -> RedshiftDatabaseCredentials

-- | Create a value of <a>RedshiftDatabaseCredentials</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:username:RedshiftDatabaseCredentials'</a>,
--   <a>redshiftDatabaseCredentials_username</a> - Undocumented member.
--   
--   <a>$sel:password:RedshiftDatabaseCredentials'</a>,
--   <a>redshiftDatabaseCredentials_password</a> - Undocumented member.
newRedshiftDatabaseCredentials :: Text -> Text -> RedshiftDatabaseCredentials

-- | Describes the <tt>DataSource</tt> details specific to Amazon Redshift.
--   
--   <i>See:</i> <a>newRedshiftMetadata</a> smart constructor.
data RedshiftMetadata
RedshiftMetadata' :: Maybe Text -> Maybe RedshiftDatabase -> Maybe Text -> RedshiftMetadata

-- | Create a value of <a>RedshiftMetadata</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:selectSqlQuery:RedshiftMetadata'</a>,
--   <a>redshiftMetadata_selectSqlQuery</a> - The SQL query that is
--   specified during CreateDataSourceFromRedshift. Returns only if
--   <tt>Verbose</tt> is true in GetDataSourceInput.
--   
--   <a>$sel:redshiftDatabase:RedshiftMetadata'</a>,
--   <a>redshiftMetadata_redshiftDatabase</a> - Undocumented member.
--   
--   <a>$sel:databaseUserName:RedshiftMetadata'</a>,
--   <a>redshiftMetadata_databaseUserName</a> - Undocumented member.
newRedshiftMetadata :: RedshiftMetadata

-- | Describes the data specification of a <tt>DataSource</tt>.
--   
--   <i>See:</i> <a>newS3DataSpec</a> smart constructor.
data S3DataSpec
S3DataSpec' :: Maybe Text -> Maybe Text -> Maybe Text -> Text -> S3DataSpec

-- | Create a value of <a>S3DataSpec</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataSchema:S3DataSpec'</a>, <a>s3DataSpec_dataSchema</a> - A
--   JSON string that represents the schema for an Amazon S3
--   <tt>DataSource</tt>. The <tt>DataSchema</tt> defines the structure of
--   the observation data in the data file(s) referenced in the
--   <tt>DataSource</tt>.
--   
--   You must provide either the <tt>DataSchema</tt> or the
--   <tt>DataSchemaLocationS3</tt>.
--   
--   Define your <tt>DataSchema</tt> as a series of key-value pairs.
--   <tt>attributes</tt> and <tt>excludedVariableNames</tt> have an array
--   of key-value pairs for their value. Use the following format to define
--   your <tt>DataSchema</tt>.
--   
--   { "version": "1.0",
--   
--   "recordAnnotationFieldName": "F1",
--   
--   "recordWeightFieldName": "F2",
--   
--   "targetFieldName": "F3",
--   
--   "dataFormat": "CSV",
--   
--   "dataFileContainsHeader": true,
--   
--   "attributes": [
--   
--   { "fieldName": "F1", "fieldType": "TEXT" }, { "fieldName": "F2",
--   "fieldType": "NUMERIC" }, { "fieldName": "F3", "fieldType":
--   "CATEGORICAL" }, { "fieldName": "F4", "fieldType": "NUMERIC" }, {
--   "fieldName": "F5", "fieldType": "CATEGORICAL" }, { "fieldName": "F6",
--   "fieldType": "TEXT" }, { "fieldName": "F7", "fieldType":
--   "WEIGHTED_INT_SEQUENCE" }, { "fieldName": "F8", "fieldType":
--   "WEIGHTED_STRING_SEQUENCE" } ],
--   
--   "excludedVariableNames": [ "F6" ] }
--   
--   <a>$sel:dataRearrangement:S3DataSpec'</a>,
--   <a>s3DataSpec_dataRearrangement</a> - A JSON string that represents
--   the splitting and rearrangement processing to be applied to a
--   <tt>DataSource</tt>. If the <tt>DataRearrangement</tt> parameter is
--   not provided, all of the input data is used to create the
--   <tt>Datasource</tt>.
--   
--   There are multiple parameters that control what data is used to create
--   a datasource:
--   
--   <ul>
--   <li><b><tt>percentBegin</tt></b>Use <tt>percentBegin</tt> to indicate
--   the beginning of the range of the data used to create the Datasource.
--   If you do not include <tt>percentBegin</tt> and <tt>percentEnd</tt>,
--   Amazon ML includes all of the data when creating the datasource.</li>
--   <li><b><tt>percentEnd</tt></b>Use <tt>percentEnd</tt> to indicate the
--   end of the range of the data used to create the Datasource. If you do
--   not include <tt>percentBegin</tt> and <tt>percentEnd</tt>, Amazon ML
--   includes all of the data when creating the datasource.</li>
--   <li><b><tt>complement</tt></b>The <tt>complement</tt> parameter
--   instructs Amazon ML to use the data that is not included in the range
--   of <tt>percentBegin</tt> to <tt>percentEnd</tt> to create a
--   datasource. The <tt>complement</tt> parameter is useful if you need to
--   create complementary datasources for training and evaluation. To
--   create a complementary datasource, use the same values for
--   <tt>percentBegin</tt> and <tt>percentEnd</tt>, along with the
--   <tt>complement</tt> parameter.For example, the following two
--   datasources do not share any data, and can be used to train and
--   evaluate a model. The first datasource has 25 percent of the data, and
--   the second one has 75 percent of the data.Datasource for evaluation:
--   <tt>{"splitting":{"percentBegin":0, "percentEnd":25}}</tt>Datasource
--   for training: <tt>{"splitting":{"percentBegin":0, "percentEnd":25,
--   "complement":"true"}}</tt></li>
--   <li><b><tt>strategy</tt></b>To change how Amazon ML splits the data
--   for a datasource, use the <tt>strategy</tt> parameter.The default
--   value for the <tt>strategy</tt> parameter is <tt>sequential</tt>,
--   meaning that Amazon ML takes all of the data records between the
--   <tt>percentBegin</tt> and <tt>percentEnd</tt> parameters for the
--   datasource, in the order that the records appear in the input data.The
--   following two <tt>DataRearrangement</tt> lines are examples of
--   sequentially ordered training and evaluation datasources:Datasource
--   for evaluation: <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"sequential"}}</tt>Datasource for training:
--   <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"sequential", "complement":"true"}}</tt>To randomly split
--   the input data into the proportions indicated by the percentBegin and
--   percentEnd parameters, set the <tt>strategy</tt> parameter to
--   <tt>random</tt> and provide a string that is used as the seed value
--   for the random data splitting (for example, you can use the S3 path to
--   your data as the random seed string). If you choose the random split
--   strategy, Amazon ML assigns each row of data a pseudo-random number
--   between 0 and 100, and then selects the rows that have an assigned
--   number between <tt>percentBegin</tt> and <tt>percentEnd</tt>.
--   Pseudo-random numbers are assigned using both the input seed string
--   value and the byte offset as a seed, so changing the data results in a
--   different split. Any existing ordering is preserved. The random
--   splitting strategy ensures that variables in the training and
--   evaluation data are distributed similarly. It is useful in the cases
--   where the input data may have an implicit sort order, which would
--   otherwise result in training and evaluation datasources containing
--   non-similar data records.The following two <tt>DataRearrangement</tt>
--   lines are examples of non-sequentially ordered training and evaluation
--   datasources:Datasource for evaluation:
--   <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"random",
--   "randomSeed"="s3://my_s3_path/bucket/file.csv"}}</tt>Datasource for
--   training: <tt>{"splitting":{"percentBegin":70, "percentEnd":100,
--   "strategy":"random", "randomSeed"="s3://my_s3_path/bucket/file.csv",
--   "complement":"true"}}</tt></li>
--   </ul>
--   
--   <a>$sel:dataSchemaLocationS3:S3DataSpec'</a>,
--   <a>s3DataSpec_dataSchemaLocationS3</a> - Describes the schema location
--   in Amazon S3. You must provide either the <tt>DataSchema</tt> or the
--   <tt>DataSchemaLocationS3</tt>.
--   
--   <a>$sel:dataLocationS3:S3DataSpec'</a>,
--   <a>s3DataSpec_dataLocationS3</a> - The location of the data file(s)
--   used by a <tt>DataSource</tt>. The URI specifies a data file or an
--   Amazon Simple Storage Service (Amazon S3) directory or bucket
--   containing data files.
newS3DataSpec :: Text -> S3DataSpec

-- | A custom key-value pair associated with an ML object, such as an ML
--   model.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Maybe Text -> Maybe Text -> Tag

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - A unique identifier for the
--   tag. Valid characters include Unicode letters, digits, white space, _,
--   ., /, =, +, -, %, and @.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - An optional string,
--   typically used to describe or define the tag. Valid characters include
--   Unicode letters, digits, white space, _, ., /, =, +, -, %, and @.
newTag :: Tag
