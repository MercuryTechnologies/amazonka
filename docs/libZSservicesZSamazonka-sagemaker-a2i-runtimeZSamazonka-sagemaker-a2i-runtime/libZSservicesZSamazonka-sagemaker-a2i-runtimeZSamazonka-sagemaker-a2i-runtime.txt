-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-sagemaker-a2i-runtimeZSamazonka-sagemaker-a2i-runtime
@version 2.0


module Amazonka.SageMakerA2IRuntime.Types.ContentClassifier
newtype ContentClassifier
ContentClassifier' :: Text -> ContentClassifier
[fromContentClassifier] :: ContentClassifier -> Text
pattern ContentClassifier_FreeOfAdultContent :: ContentClassifier
pattern ContentClassifier_FreeOfPersonallyIdentifiableInformation :: ContentClassifier
instance Amazonka.Data.XML.ToXML Amazonka.SageMakerA2IRuntime.Types.ContentClassifier.ContentClassifier
instance Amazonka.Data.XML.FromXML Amazonka.SageMakerA2IRuntime.Types.ContentClassifier.ContentClassifier
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.SageMakerA2IRuntime.Types.ContentClassifier.ContentClassifier
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.SageMakerA2IRuntime.Types.ContentClassifier.ContentClassifier
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.SageMakerA2IRuntime.Types.ContentClassifier.ContentClassifier
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.SageMakerA2IRuntime.Types.ContentClassifier.ContentClassifier
instance Amazonka.Data.Query.ToQuery Amazonka.SageMakerA2IRuntime.Types.ContentClassifier.ContentClassifier
instance Amazonka.Data.Headers.ToHeader Amazonka.SageMakerA2IRuntime.Types.ContentClassifier.ContentClassifier
instance Amazonka.Data.Log.ToLog Amazonka.SageMakerA2IRuntime.Types.ContentClassifier.ContentClassifier
instance Amazonka.Data.ByteString.ToByteString Amazonka.SageMakerA2IRuntime.Types.ContentClassifier.ContentClassifier
instance Amazonka.Data.Text.ToText Amazonka.SageMakerA2IRuntime.Types.ContentClassifier.ContentClassifier
instance Amazonka.Data.Text.FromText Amazonka.SageMakerA2IRuntime.Types.ContentClassifier.ContentClassifier
instance Control.DeepSeq.NFData Amazonka.SageMakerA2IRuntime.Types.ContentClassifier.ContentClassifier
instance Data.Hashable.Class.Hashable Amazonka.SageMakerA2IRuntime.Types.ContentClassifier.ContentClassifier
instance GHC.Generics.Generic Amazonka.SageMakerA2IRuntime.Types.ContentClassifier.ContentClassifier
instance GHC.Classes.Ord Amazonka.SageMakerA2IRuntime.Types.ContentClassifier.ContentClassifier
instance GHC.Classes.Eq Amazonka.SageMakerA2IRuntime.Types.ContentClassifier.ContentClassifier
instance GHC.Read.Read Amazonka.SageMakerA2IRuntime.Types.ContentClassifier.ContentClassifier
instance GHC.Show.Show Amazonka.SageMakerA2IRuntime.Types.ContentClassifier.ContentClassifier


module Amazonka.SageMakerA2IRuntime.Types.HumanLoopDataAttributes

-- | Attributes of the data specified by the customer. Use these to
--   describe the data to be labeled.
--   
--   <i>See:</i> <a>newHumanLoopDataAttributes</a> smart constructor.
data HumanLoopDataAttributes
HumanLoopDataAttributes' :: [ContentClassifier] -> HumanLoopDataAttributes

-- | Declares that your content is free of personally identifiable
--   information or adult content.
--   
--   Amazon SageMaker can restrict the Amazon Mechanical Turk workers who
--   can view your task based on this information.
[$sel:contentClassifiers:HumanLoopDataAttributes'] :: HumanLoopDataAttributes -> [ContentClassifier]

-- | Create a value of <a>HumanLoopDataAttributes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:contentClassifiers:HumanLoopDataAttributes'</a>,
--   <a>humanLoopDataAttributes_contentClassifiers</a> - Declares that your
--   content is free of personally identifiable information or adult
--   content.
--   
--   Amazon SageMaker can restrict the Amazon Mechanical Turk workers who
--   can view your task based on this information.
newHumanLoopDataAttributes :: HumanLoopDataAttributes

-- | Declares that your content is free of personally identifiable
--   information or adult content.
--   
--   Amazon SageMaker can restrict the Amazon Mechanical Turk workers who
--   can view your task based on this information.
humanLoopDataAttributes_contentClassifiers :: Lens' HumanLoopDataAttributes [ContentClassifier]
instance GHC.Generics.Generic Amazonka.SageMakerA2IRuntime.Types.HumanLoopDataAttributes.HumanLoopDataAttributes
instance GHC.Show.Show Amazonka.SageMakerA2IRuntime.Types.HumanLoopDataAttributes.HumanLoopDataAttributes
instance GHC.Read.Read Amazonka.SageMakerA2IRuntime.Types.HumanLoopDataAttributes.HumanLoopDataAttributes
instance GHC.Classes.Eq Amazonka.SageMakerA2IRuntime.Types.HumanLoopDataAttributes.HumanLoopDataAttributes
instance Data.Hashable.Class.Hashable Amazonka.SageMakerA2IRuntime.Types.HumanLoopDataAttributes.HumanLoopDataAttributes
instance Control.DeepSeq.NFData Amazonka.SageMakerA2IRuntime.Types.HumanLoopDataAttributes.HumanLoopDataAttributes
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.SageMakerA2IRuntime.Types.HumanLoopDataAttributes.HumanLoopDataAttributes


module Amazonka.SageMakerA2IRuntime.Types.HumanLoopInput

-- | An object containing the human loop input in JSON format.
--   
--   <i>See:</i> <a>newHumanLoopInput</a> smart constructor.
data HumanLoopInput
HumanLoopInput' :: Text -> HumanLoopInput

-- | Serialized input from the human loop. The input must be a string
--   representation of a file in JSON format.
[$sel:inputContent:HumanLoopInput'] :: HumanLoopInput -> Text

-- | Create a value of <a>HumanLoopInput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputContent:HumanLoopInput'</a>,
--   <a>humanLoopInput_inputContent</a> - Serialized input from the human
--   loop. The input must be a string representation of a file in JSON
--   format.
newHumanLoopInput :: Text -> HumanLoopInput

-- | Serialized input from the human loop. The input must be a string
--   representation of a file in JSON format.
humanLoopInput_inputContent :: Lens' HumanLoopInput Text
instance GHC.Generics.Generic Amazonka.SageMakerA2IRuntime.Types.HumanLoopInput.HumanLoopInput
instance GHC.Show.Show Amazonka.SageMakerA2IRuntime.Types.HumanLoopInput.HumanLoopInput
instance GHC.Read.Read Amazonka.SageMakerA2IRuntime.Types.HumanLoopInput.HumanLoopInput
instance GHC.Classes.Eq Amazonka.SageMakerA2IRuntime.Types.HumanLoopInput.HumanLoopInput
instance Data.Hashable.Class.Hashable Amazonka.SageMakerA2IRuntime.Types.HumanLoopInput.HumanLoopInput
instance Control.DeepSeq.NFData Amazonka.SageMakerA2IRuntime.Types.HumanLoopInput.HumanLoopInput
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.SageMakerA2IRuntime.Types.HumanLoopInput.HumanLoopInput


module Amazonka.SageMakerA2IRuntime.Types.HumanLoopOutput

-- | Information about where the human output will be stored.
--   
--   <i>See:</i> <a>newHumanLoopOutput</a> smart constructor.
data HumanLoopOutput
HumanLoopOutput' :: Text -> HumanLoopOutput

-- | The location of the Amazon S3 object where Amazon Augmented AI stores
--   your human loop output.
[$sel:outputS3Uri:HumanLoopOutput'] :: HumanLoopOutput -> Text

-- | Create a value of <a>HumanLoopOutput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:outputS3Uri:HumanLoopOutput'</a>,
--   <a>humanLoopOutput_outputS3Uri</a> - The location of the Amazon S3
--   object where Amazon Augmented AI stores your human loop output.
newHumanLoopOutput :: Text -> HumanLoopOutput

-- | The location of the Amazon S3 object where Amazon Augmented AI stores
--   your human loop output.
humanLoopOutput_outputS3Uri :: Lens' HumanLoopOutput Text
instance GHC.Generics.Generic Amazonka.SageMakerA2IRuntime.Types.HumanLoopOutput.HumanLoopOutput
instance GHC.Show.Show Amazonka.SageMakerA2IRuntime.Types.HumanLoopOutput.HumanLoopOutput
instance GHC.Read.Read Amazonka.SageMakerA2IRuntime.Types.HumanLoopOutput.HumanLoopOutput
instance GHC.Classes.Eq Amazonka.SageMakerA2IRuntime.Types.HumanLoopOutput.HumanLoopOutput
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.SageMakerA2IRuntime.Types.HumanLoopOutput.HumanLoopOutput
instance Data.Hashable.Class.Hashable Amazonka.SageMakerA2IRuntime.Types.HumanLoopOutput.HumanLoopOutput
instance Control.DeepSeq.NFData Amazonka.SageMakerA2IRuntime.Types.HumanLoopOutput.HumanLoopOutput


module Amazonka.SageMakerA2IRuntime.Types.HumanLoopStatus
newtype HumanLoopStatus
HumanLoopStatus' :: Text -> HumanLoopStatus
[fromHumanLoopStatus] :: HumanLoopStatus -> Text
pattern HumanLoopStatus_Completed :: HumanLoopStatus
pattern HumanLoopStatus_Failed :: HumanLoopStatus
pattern HumanLoopStatus_InProgress :: HumanLoopStatus
pattern HumanLoopStatus_Stopped :: HumanLoopStatus
pattern HumanLoopStatus_Stopping :: HumanLoopStatus
instance Amazonka.Data.XML.ToXML Amazonka.SageMakerA2IRuntime.Types.HumanLoopStatus.HumanLoopStatus
instance Amazonka.Data.XML.FromXML Amazonka.SageMakerA2IRuntime.Types.HumanLoopStatus.HumanLoopStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.SageMakerA2IRuntime.Types.HumanLoopStatus.HumanLoopStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.SageMakerA2IRuntime.Types.HumanLoopStatus.HumanLoopStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.SageMakerA2IRuntime.Types.HumanLoopStatus.HumanLoopStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.SageMakerA2IRuntime.Types.HumanLoopStatus.HumanLoopStatus
instance Amazonka.Data.Query.ToQuery Amazonka.SageMakerA2IRuntime.Types.HumanLoopStatus.HumanLoopStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.SageMakerA2IRuntime.Types.HumanLoopStatus.HumanLoopStatus
instance Amazonka.Data.Log.ToLog Amazonka.SageMakerA2IRuntime.Types.HumanLoopStatus.HumanLoopStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.SageMakerA2IRuntime.Types.HumanLoopStatus.HumanLoopStatus
instance Amazonka.Data.Text.ToText Amazonka.SageMakerA2IRuntime.Types.HumanLoopStatus.HumanLoopStatus
instance Amazonka.Data.Text.FromText Amazonka.SageMakerA2IRuntime.Types.HumanLoopStatus.HumanLoopStatus
instance Control.DeepSeq.NFData Amazonka.SageMakerA2IRuntime.Types.HumanLoopStatus.HumanLoopStatus
instance Data.Hashable.Class.Hashable Amazonka.SageMakerA2IRuntime.Types.HumanLoopStatus.HumanLoopStatus
instance GHC.Generics.Generic Amazonka.SageMakerA2IRuntime.Types.HumanLoopStatus.HumanLoopStatus
instance GHC.Classes.Ord Amazonka.SageMakerA2IRuntime.Types.HumanLoopStatus.HumanLoopStatus
instance GHC.Classes.Eq Amazonka.SageMakerA2IRuntime.Types.HumanLoopStatus.HumanLoopStatus
instance GHC.Read.Read Amazonka.SageMakerA2IRuntime.Types.HumanLoopStatus.HumanLoopStatus
instance GHC.Show.Show Amazonka.SageMakerA2IRuntime.Types.HumanLoopStatus.HumanLoopStatus


module Amazonka.SageMakerA2IRuntime.Types.HumanLoopSummary

-- | Summary information about the human loop.
--   
--   <i>See:</i> <a>newHumanLoopSummary</a> smart constructor.
data HumanLoopSummary
HumanLoopSummary' :: Maybe POSIX -> Maybe Text -> Maybe HumanLoopStatus -> Maybe Text -> Maybe Text -> HumanLoopSummary

-- | When Amazon Augmented AI created the human loop.
[$sel:creationTime:HumanLoopSummary'] :: HumanLoopSummary -> Maybe POSIX

-- | The reason why the human loop failed. A failure reason is returned
--   when the status of the human loop is <tt>Failed</tt>.
[$sel:failureReason:HumanLoopSummary'] :: HumanLoopSummary -> Maybe Text

-- | The status of the human loop.
[$sel:humanLoopStatus:HumanLoopSummary'] :: HumanLoopSummary -> Maybe HumanLoopStatus

-- | The name of the human loop.
[$sel:humanLoopName:HumanLoopSummary'] :: HumanLoopSummary -> Maybe Text

-- | The Amazon Resource Name (ARN) of the flow definition used to
--   configure the human loop.
[$sel:flowDefinitionArn:HumanLoopSummary'] :: HumanLoopSummary -> Maybe Text

-- | Create a value of <a>HumanLoopSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:HumanLoopSummary'</a>,
--   <a>humanLoopSummary_creationTime</a> - When Amazon Augmented AI
--   created the human loop.
--   
--   <a>$sel:failureReason:HumanLoopSummary'</a>,
--   <a>humanLoopSummary_failureReason</a> - The reason why the human loop
--   failed. A failure reason is returned when the status of the human loop
--   is <tt>Failed</tt>.
--   
--   <a>$sel:humanLoopStatus:HumanLoopSummary'</a>,
--   <a>humanLoopSummary_humanLoopStatus</a> - The status of the human
--   loop.
--   
--   <a>$sel:humanLoopName:HumanLoopSummary'</a>,
--   <a>humanLoopSummary_humanLoopName</a> - The name of the human loop.
--   
--   <a>$sel:flowDefinitionArn:HumanLoopSummary'</a>,
--   <a>humanLoopSummary_flowDefinitionArn</a> - The Amazon Resource Name
--   (ARN) of the flow definition used to configure the human loop.
newHumanLoopSummary :: HumanLoopSummary

-- | When Amazon Augmented AI created the human loop.
humanLoopSummary_creationTime :: Lens' HumanLoopSummary (Maybe UTCTime)

-- | The reason why the human loop failed. A failure reason is returned
--   when the status of the human loop is <tt>Failed</tt>.
humanLoopSummary_failureReason :: Lens' HumanLoopSummary (Maybe Text)

-- | The status of the human loop.
humanLoopSummary_humanLoopStatus :: Lens' HumanLoopSummary (Maybe HumanLoopStatus)

-- | The name of the human loop.
humanLoopSummary_humanLoopName :: Lens' HumanLoopSummary (Maybe Text)

-- | The Amazon Resource Name (ARN) of the flow definition used to
--   configure the human loop.
humanLoopSummary_flowDefinitionArn :: Lens' HumanLoopSummary (Maybe Text)
instance GHC.Generics.Generic Amazonka.SageMakerA2IRuntime.Types.HumanLoopSummary.HumanLoopSummary
instance GHC.Show.Show Amazonka.SageMakerA2IRuntime.Types.HumanLoopSummary.HumanLoopSummary
instance GHC.Read.Read Amazonka.SageMakerA2IRuntime.Types.HumanLoopSummary.HumanLoopSummary
instance GHC.Classes.Eq Amazonka.SageMakerA2IRuntime.Types.HumanLoopSummary.HumanLoopSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.SageMakerA2IRuntime.Types.HumanLoopSummary.HumanLoopSummary
instance Data.Hashable.Class.Hashable Amazonka.SageMakerA2IRuntime.Types.HumanLoopSummary.HumanLoopSummary
instance Control.DeepSeq.NFData Amazonka.SageMakerA2IRuntime.Types.HumanLoopSummary.HumanLoopSummary


module Amazonka.SageMakerA2IRuntime.Types.SortOrder
newtype SortOrder
SortOrder' :: Text -> SortOrder
[fromSortOrder] :: SortOrder -> Text
pattern SortOrder_Ascending :: SortOrder
pattern SortOrder_Descending :: SortOrder
instance Amazonka.Data.XML.ToXML Amazonka.SageMakerA2IRuntime.Types.SortOrder.SortOrder
instance Amazonka.Data.XML.FromXML Amazonka.SageMakerA2IRuntime.Types.SortOrder.SortOrder
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.SageMakerA2IRuntime.Types.SortOrder.SortOrder
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.SageMakerA2IRuntime.Types.SortOrder.SortOrder
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.SageMakerA2IRuntime.Types.SortOrder.SortOrder
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.SageMakerA2IRuntime.Types.SortOrder.SortOrder
instance Amazonka.Data.Query.ToQuery Amazonka.SageMakerA2IRuntime.Types.SortOrder.SortOrder
instance Amazonka.Data.Headers.ToHeader Amazonka.SageMakerA2IRuntime.Types.SortOrder.SortOrder
instance Amazonka.Data.Log.ToLog Amazonka.SageMakerA2IRuntime.Types.SortOrder.SortOrder
instance Amazonka.Data.ByteString.ToByteString Amazonka.SageMakerA2IRuntime.Types.SortOrder.SortOrder
instance Amazonka.Data.Text.ToText Amazonka.SageMakerA2IRuntime.Types.SortOrder.SortOrder
instance Amazonka.Data.Text.FromText Amazonka.SageMakerA2IRuntime.Types.SortOrder.SortOrder
instance Control.DeepSeq.NFData Amazonka.SageMakerA2IRuntime.Types.SortOrder.SortOrder
instance Data.Hashable.Class.Hashable Amazonka.SageMakerA2IRuntime.Types.SortOrder.SortOrder
instance GHC.Generics.Generic Amazonka.SageMakerA2IRuntime.Types.SortOrder.SortOrder
instance GHC.Classes.Ord Amazonka.SageMakerA2IRuntime.Types.SortOrder.SortOrder
instance GHC.Classes.Eq Amazonka.SageMakerA2IRuntime.Types.SortOrder.SortOrder
instance GHC.Read.Read Amazonka.SageMakerA2IRuntime.Types.SortOrder.SortOrder
instance GHC.Show.Show Amazonka.SageMakerA2IRuntime.Types.SortOrder.SortOrder


module Amazonka.SageMakerA2IRuntime.Types

-- | API version <tt>2019-11-07</tt> of the Amazon Augmented AI Runtime SDK
--   configuration.
defaultService :: Service

-- | The request isn't valid. Check the syntax and try again.
_ValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Your request has the same name as another active human loop but has
--   different input data. You cannot start two human loops with the same
--   name and different input data.
_ConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You exceeded your service quota. Service quotas, also referred to as
--   limits, are the maximum number of service resources or operations for
--   your AWS account. For a list of Amazon A2I service quotes, see
--   <a>Amazon Augmented AI Service Quotes</a>. Delete some resources or
--   request an increase in your service quota. You can request a quota
--   increase using Service Quotas or the AWS Support Center. To request an
--   increase, see <a>AWS Service Quotas</a> in the <i>AWS General
--   Reference</i>.
_ServiceQuotaExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You exceeded the maximum number of requests.
_ThrottlingException :: AsError a => Getting (First ServiceError) a ServiceError

-- | We couldn't process your request because of an issue with the server.
--   Try again later.
_InternalServerException :: AsError a => Getting (First ServiceError) a ServiceError

-- | We couldn't find the requested resource. Check that your resources
--   exists and were created in the same AWS Region as your request, and
--   try your request again.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError
newtype ContentClassifier
ContentClassifier' :: Text -> ContentClassifier
[fromContentClassifier] :: ContentClassifier -> Text
pattern ContentClassifier_FreeOfAdultContent :: ContentClassifier
pattern ContentClassifier_FreeOfPersonallyIdentifiableInformation :: ContentClassifier
newtype HumanLoopStatus
HumanLoopStatus' :: Text -> HumanLoopStatus
[fromHumanLoopStatus] :: HumanLoopStatus -> Text
pattern HumanLoopStatus_Completed :: HumanLoopStatus
pattern HumanLoopStatus_Failed :: HumanLoopStatus
pattern HumanLoopStatus_InProgress :: HumanLoopStatus
pattern HumanLoopStatus_Stopped :: HumanLoopStatus
pattern HumanLoopStatus_Stopping :: HumanLoopStatus
newtype SortOrder
SortOrder' :: Text -> SortOrder
[fromSortOrder] :: SortOrder -> Text
pattern SortOrder_Ascending :: SortOrder
pattern SortOrder_Descending :: SortOrder

-- | Attributes of the data specified by the customer. Use these to
--   describe the data to be labeled.
--   
--   <i>See:</i> <a>newHumanLoopDataAttributes</a> smart constructor.
data HumanLoopDataAttributes
HumanLoopDataAttributes' :: [ContentClassifier] -> HumanLoopDataAttributes

-- | Declares that your content is free of personally identifiable
--   information or adult content.
--   
--   Amazon SageMaker can restrict the Amazon Mechanical Turk workers who
--   can view your task based on this information.
[$sel:contentClassifiers:HumanLoopDataAttributes'] :: HumanLoopDataAttributes -> [ContentClassifier]

-- | Create a value of <a>HumanLoopDataAttributes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:contentClassifiers:HumanLoopDataAttributes'</a>,
--   <a>humanLoopDataAttributes_contentClassifiers</a> - Declares that your
--   content is free of personally identifiable information or adult
--   content.
--   
--   Amazon SageMaker can restrict the Amazon Mechanical Turk workers who
--   can view your task based on this information.
newHumanLoopDataAttributes :: HumanLoopDataAttributes

-- | Declares that your content is free of personally identifiable
--   information or adult content.
--   
--   Amazon SageMaker can restrict the Amazon Mechanical Turk workers who
--   can view your task based on this information.
humanLoopDataAttributes_contentClassifiers :: Lens' HumanLoopDataAttributes [ContentClassifier]

-- | An object containing the human loop input in JSON format.
--   
--   <i>See:</i> <a>newHumanLoopInput</a> smart constructor.
data HumanLoopInput
HumanLoopInput' :: Text -> HumanLoopInput

-- | Serialized input from the human loop. The input must be a string
--   representation of a file in JSON format.
[$sel:inputContent:HumanLoopInput'] :: HumanLoopInput -> Text

-- | Create a value of <a>HumanLoopInput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputContent:HumanLoopInput'</a>,
--   <a>humanLoopInput_inputContent</a> - Serialized input from the human
--   loop. The input must be a string representation of a file in JSON
--   format.
newHumanLoopInput :: Text -> HumanLoopInput

-- | Serialized input from the human loop. The input must be a string
--   representation of a file in JSON format.
humanLoopInput_inputContent :: Lens' HumanLoopInput Text

-- | Information about where the human output will be stored.
--   
--   <i>See:</i> <a>newHumanLoopOutput</a> smart constructor.
data HumanLoopOutput
HumanLoopOutput' :: Text -> HumanLoopOutput

-- | The location of the Amazon S3 object where Amazon Augmented AI stores
--   your human loop output.
[$sel:outputS3Uri:HumanLoopOutput'] :: HumanLoopOutput -> Text

-- | Create a value of <a>HumanLoopOutput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:outputS3Uri:HumanLoopOutput'</a>,
--   <a>humanLoopOutput_outputS3Uri</a> - The location of the Amazon S3
--   object where Amazon Augmented AI stores your human loop output.
newHumanLoopOutput :: Text -> HumanLoopOutput

-- | The location of the Amazon S3 object where Amazon Augmented AI stores
--   your human loop output.
humanLoopOutput_outputS3Uri :: Lens' HumanLoopOutput Text

-- | Summary information about the human loop.
--   
--   <i>See:</i> <a>newHumanLoopSummary</a> smart constructor.
data HumanLoopSummary
HumanLoopSummary' :: Maybe POSIX -> Maybe Text -> Maybe HumanLoopStatus -> Maybe Text -> Maybe Text -> HumanLoopSummary

-- | When Amazon Augmented AI created the human loop.
[$sel:creationTime:HumanLoopSummary'] :: HumanLoopSummary -> Maybe POSIX

-- | The reason why the human loop failed. A failure reason is returned
--   when the status of the human loop is <tt>Failed</tt>.
[$sel:failureReason:HumanLoopSummary'] :: HumanLoopSummary -> Maybe Text

-- | The status of the human loop.
[$sel:humanLoopStatus:HumanLoopSummary'] :: HumanLoopSummary -> Maybe HumanLoopStatus

-- | The name of the human loop.
[$sel:humanLoopName:HumanLoopSummary'] :: HumanLoopSummary -> Maybe Text

-- | The Amazon Resource Name (ARN) of the flow definition used to
--   configure the human loop.
[$sel:flowDefinitionArn:HumanLoopSummary'] :: HumanLoopSummary -> Maybe Text

-- | Create a value of <a>HumanLoopSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:HumanLoopSummary'</a>,
--   <a>humanLoopSummary_creationTime</a> - When Amazon Augmented AI
--   created the human loop.
--   
--   <a>$sel:failureReason:HumanLoopSummary'</a>,
--   <a>humanLoopSummary_failureReason</a> - The reason why the human loop
--   failed. A failure reason is returned when the status of the human loop
--   is <tt>Failed</tt>.
--   
--   <a>$sel:humanLoopStatus:HumanLoopSummary'</a>,
--   <a>humanLoopSummary_humanLoopStatus</a> - The status of the human
--   loop.
--   
--   <a>$sel:humanLoopName:HumanLoopSummary'</a>,
--   <a>humanLoopSummary_humanLoopName</a> - The name of the human loop.
--   
--   <a>$sel:flowDefinitionArn:HumanLoopSummary'</a>,
--   <a>humanLoopSummary_flowDefinitionArn</a> - The Amazon Resource Name
--   (ARN) of the flow definition used to configure the human loop.
newHumanLoopSummary :: HumanLoopSummary

-- | When Amazon Augmented AI created the human loop.
humanLoopSummary_creationTime :: Lens' HumanLoopSummary (Maybe UTCTime)

-- | The reason why the human loop failed. A failure reason is returned
--   when the status of the human loop is <tt>Failed</tt>.
humanLoopSummary_failureReason :: Lens' HumanLoopSummary (Maybe Text)

-- | The status of the human loop.
humanLoopSummary_humanLoopStatus :: Lens' HumanLoopSummary (Maybe HumanLoopStatus)

-- | The name of the human loop.
humanLoopSummary_humanLoopName :: Lens' HumanLoopSummary (Maybe Text)

-- | The Amazon Resource Name (ARN) of the flow definition used to
--   configure the human loop.
humanLoopSummary_flowDefinitionArn :: Lens' HumanLoopSummary (Maybe Text)


-- | Stops the specified human loop.
module Amazonka.SageMakerA2IRuntime.StopHumanLoop

-- | <i>See:</i> <a>newStopHumanLoop</a> smart constructor.
data StopHumanLoop
StopHumanLoop' :: Text -> StopHumanLoop

-- | The name of the human loop that you want to stop.
[$sel:humanLoopName:StopHumanLoop'] :: StopHumanLoop -> Text

-- | Create a value of <a>StopHumanLoop</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:humanLoopName:StopHumanLoop'</a>,
--   <a>stopHumanLoop_humanLoopName</a> - The name of the human loop that
--   you want to stop.
newStopHumanLoop :: Text -> StopHumanLoop

-- | The name of the human loop that you want to stop.
stopHumanLoop_humanLoopName :: Lens' StopHumanLoop Text

-- | <i>See:</i> <a>newStopHumanLoopResponse</a> smart constructor.
data StopHumanLoopResponse
StopHumanLoopResponse' :: Int -> StopHumanLoopResponse

-- | The response's http status code.
[$sel:httpStatus:StopHumanLoopResponse'] :: StopHumanLoopResponse -> Int

-- | Create a value of <a>StopHumanLoopResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:StopHumanLoopResponse'</a>,
--   <a>stopHumanLoopResponse_httpStatus</a> - The response's http status
--   code.
newStopHumanLoopResponse :: Int -> StopHumanLoopResponse

-- | The response's http status code.
stopHumanLoopResponse_httpStatus :: Lens' StopHumanLoopResponse Int
instance GHC.Generics.Generic Amazonka.SageMakerA2IRuntime.StopHumanLoop.StopHumanLoop
instance GHC.Show.Show Amazonka.SageMakerA2IRuntime.StopHumanLoop.StopHumanLoop
instance GHC.Read.Read Amazonka.SageMakerA2IRuntime.StopHumanLoop.StopHumanLoop
instance GHC.Classes.Eq Amazonka.SageMakerA2IRuntime.StopHumanLoop.StopHumanLoop
instance GHC.Generics.Generic Amazonka.SageMakerA2IRuntime.StopHumanLoop.StopHumanLoopResponse
instance GHC.Show.Show Amazonka.SageMakerA2IRuntime.StopHumanLoop.StopHumanLoopResponse
instance GHC.Read.Read Amazonka.SageMakerA2IRuntime.StopHumanLoop.StopHumanLoopResponse
instance GHC.Classes.Eq Amazonka.SageMakerA2IRuntime.StopHumanLoop.StopHumanLoopResponse
instance Amazonka.Types.AWSRequest Amazonka.SageMakerA2IRuntime.StopHumanLoop.StopHumanLoop
instance Control.DeepSeq.NFData Amazonka.SageMakerA2IRuntime.StopHumanLoop.StopHumanLoopResponse
instance Data.Hashable.Class.Hashable Amazonka.SageMakerA2IRuntime.StopHumanLoop.StopHumanLoop
instance Control.DeepSeq.NFData Amazonka.SageMakerA2IRuntime.StopHumanLoop.StopHumanLoop
instance Amazonka.Data.Headers.ToHeaders Amazonka.SageMakerA2IRuntime.StopHumanLoop.StopHumanLoop
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.SageMakerA2IRuntime.StopHumanLoop.StopHumanLoop
instance Amazonka.Data.Path.ToPath Amazonka.SageMakerA2IRuntime.StopHumanLoop.StopHumanLoop
instance Amazonka.Data.Query.ToQuery Amazonka.SageMakerA2IRuntime.StopHumanLoop.StopHumanLoop


-- | Starts a human loop, provided that at least one activation condition
--   is met.
module Amazonka.SageMakerA2IRuntime.StartHumanLoop

-- | <i>See:</i> <a>newStartHumanLoop</a> smart constructor.
data StartHumanLoop
StartHumanLoop' :: Maybe HumanLoopDataAttributes -> Text -> Text -> HumanLoopInput -> StartHumanLoop

-- | Attributes of the specified data. Use <tt>DataAttributes</tt> to
--   specify if your data is free of personally identifiable information
--   and/or free of adult content.
[$sel:dataAttributes:StartHumanLoop'] :: StartHumanLoop -> Maybe HumanLoopDataAttributes

-- | The name of the human loop.
[$sel:humanLoopName:StartHumanLoop'] :: StartHumanLoop -> Text

-- | The Amazon Resource Name (ARN) of the flow definition associated with
--   this human loop.
[$sel:flowDefinitionArn:StartHumanLoop'] :: StartHumanLoop -> Text

-- | An object that contains information about the human loop.
[$sel:humanLoopInput:StartHumanLoop'] :: StartHumanLoop -> HumanLoopInput

-- | Create a value of <a>StartHumanLoop</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataAttributes:StartHumanLoop'</a>,
--   <a>startHumanLoop_dataAttributes</a> - Attributes of the specified
--   data. Use <tt>DataAttributes</tt> to specify if your data is free of
--   personally identifiable information and/or free of adult content.
--   
--   <a>$sel:humanLoopName:StartHumanLoop'</a>,
--   <a>startHumanLoop_humanLoopName</a> - The name of the human loop.
--   
--   <a>$sel:flowDefinitionArn:StartHumanLoop'</a>,
--   <a>startHumanLoop_flowDefinitionArn</a> - The Amazon Resource Name
--   (ARN) of the flow definition associated with this human loop.
--   
--   <a>$sel:humanLoopInput:StartHumanLoop'</a>,
--   <a>startHumanLoop_humanLoopInput</a> - An object that contains
--   information about the human loop.
newStartHumanLoop :: Text -> Text -> HumanLoopInput -> StartHumanLoop

-- | Attributes of the specified data. Use <tt>DataAttributes</tt> to
--   specify if your data is free of personally identifiable information
--   and/or free of adult content.
startHumanLoop_dataAttributes :: Lens' StartHumanLoop (Maybe HumanLoopDataAttributes)

-- | The name of the human loop.
startHumanLoop_humanLoopName :: Lens' StartHumanLoop Text

-- | The Amazon Resource Name (ARN) of the flow definition associated with
--   this human loop.
startHumanLoop_flowDefinitionArn :: Lens' StartHumanLoop Text

-- | An object that contains information about the human loop.
startHumanLoop_humanLoopInput :: Lens' StartHumanLoop HumanLoopInput

-- | <i>See:</i> <a>newStartHumanLoopResponse</a> smart constructor.
data StartHumanLoopResponse
StartHumanLoopResponse' :: Maybe Text -> Int -> StartHumanLoopResponse

-- | The Amazon Resource Name (ARN) of the human loop.
[$sel:humanLoopArn:StartHumanLoopResponse'] :: StartHumanLoopResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:StartHumanLoopResponse'] :: StartHumanLoopResponse -> Int

-- | Create a value of <a>StartHumanLoopResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:humanLoopArn:StartHumanLoopResponse'</a>,
--   <a>startHumanLoopResponse_humanLoopArn</a> - The Amazon Resource Name
--   (ARN) of the human loop.
--   
--   <a>$sel:httpStatus:StartHumanLoopResponse'</a>,
--   <a>startHumanLoopResponse_httpStatus</a> - The response's http status
--   code.
newStartHumanLoopResponse :: Int -> StartHumanLoopResponse

-- | The Amazon Resource Name (ARN) of the human loop.
startHumanLoopResponse_humanLoopArn :: Lens' StartHumanLoopResponse (Maybe Text)

-- | The response's http status code.
startHumanLoopResponse_httpStatus :: Lens' StartHumanLoopResponse Int
instance GHC.Generics.Generic Amazonka.SageMakerA2IRuntime.StartHumanLoop.StartHumanLoop
instance GHC.Show.Show Amazonka.SageMakerA2IRuntime.StartHumanLoop.StartHumanLoop
instance GHC.Read.Read Amazonka.SageMakerA2IRuntime.StartHumanLoop.StartHumanLoop
instance GHC.Classes.Eq Amazonka.SageMakerA2IRuntime.StartHumanLoop.StartHumanLoop
instance GHC.Generics.Generic Amazonka.SageMakerA2IRuntime.StartHumanLoop.StartHumanLoopResponse
instance GHC.Show.Show Amazonka.SageMakerA2IRuntime.StartHumanLoop.StartHumanLoopResponse
instance GHC.Read.Read Amazonka.SageMakerA2IRuntime.StartHumanLoop.StartHumanLoopResponse
instance GHC.Classes.Eq Amazonka.SageMakerA2IRuntime.StartHumanLoop.StartHumanLoopResponse
instance Amazonka.Types.AWSRequest Amazonka.SageMakerA2IRuntime.StartHumanLoop.StartHumanLoop
instance Control.DeepSeq.NFData Amazonka.SageMakerA2IRuntime.StartHumanLoop.StartHumanLoopResponse
instance Data.Hashable.Class.Hashable Amazonka.SageMakerA2IRuntime.StartHumanLoop.StartHumanLoop
instance Control.DeepSeq.NFData Amazonka.SageMakerA2IRuntime.StartHumanLoop.StartHumanLoop
instance Amazonka.Data.Headers.ToHeaders Amazonka.SageMakerA2IRuntime.StartHumanLoop.StartHumanLoop
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.SageMakerA2IRuntime.StartHumanLoop.StartHumanLoop
instance Amazonka.Data.Path.ToPath Amazonka.SageMakerA2IRuntime.StartHumanLoop.StartHumanLoop
instance Amazonka.Data.Query.ToQuery Amazonka.SageMakerA2IRuntime.StartHumanLoop.StartHumanLoop


-- | Returns information about human loops, given the specified parameters.
--   If a human loop was deleted, it will not be included.
--   
--   This operation returns paginated results.
module Amazonka.SageMakerA2IRuntime.ListHumanLoops

-- | <i>See:</i> <a>newListHumanLoops</a> smart constructor.
data ListHumanLoops
ListHumanLoops' :: Maybe POSIX -> Maybe Text -> Maybe SortOrder -> Maybe POSIX -> Maybe Natural -> Text -> ListHumanLoops

-- | (Optional) The timestamp of the date when you want the human loops to
--   begin in ISO 8601 format. For example, <tt>2020-02-24</tt>.
[$sel:creationTimeAfter:ListHumanLoops'] :: ListHumanLoops -> Maybe POSIX

-- | A token to display the next page of results.
[$sel:nextToken:ListHumanLoops'] :: ListHumanLoops -> Maybe Text

-- | Optional. The order for displaying results. Valid values:
--   <tt>Ascending</tt> and <tt>Descending</tt>.
[$sel:sortOrder:ListHumanLoops'] :: ListHumanLoops -> Maybe SortOrder

-- | (Optional) The timestamp of the date before which you want the human
--   loops to begin in ISO 8601 format. For example, <tt>2020-02-24</tt>.
[$sel:creationTimeBefore:ListHumanLoops'] :: ListHumanLoops -> Maybe POSIX

-- | The total number of items to return. If the total number of available
--   items is more than the value specified in <tt>MaxResults</tt>, then a
--   <tt>NextToken</tt> is returned in the output. You can use this token
--   to display the next page of results.
[$sel:maxResults:ListHumanLoops'] :: ListHumanLoops -> Maybe Natural

-- | The Amazon Resource Name (ARN) of a flow definition.
[$sel:flowDefinitionArn:ListHumanLoops'] :: ListHumanLoops -> Text

-- | Create a value of <a>ListHumanLoops</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTimeAfter:ListHumanLoops'</a>,
--   <a>listHumanLoops_creationTimeAfter</a> - (Optional) The timestamp of
--   the date when you want the human loops to begin in ISO 8601 format.
--   For example, <tt>2020-02-24</tt>.
--   
--   <a>$sel:nextToken:ListHumanLoops'</a>, <a>listHumanLoops_nextToken</a>
--   - A token to display the next page of results.
--   
--   <a>$sel:sortOrder:ListHumanLoops'</a>, <a>listHumanLoops_sortOrder</a>
--   - Optional. The order for displaying results. Valid values:
--   <tt>Ascending</tt> and <tt>Descending</tt>.
--   
--   <a>$sel:creationTimeBefore:ListHumanLoops'</a>,
--   <a>listHumanLoops_creationTimeBefore</a> - (Optional) The timestamp of
--   the date before which you want the human loops to begin in ISO 8601
--   format. For example, <tt>2020-02-24</tt>.
--   
--   <a>$sel:maxResults:ListHumanLoops'</a>,
--   <a>listHumanLoops_maxResults</a> - The total number of items to
--   return. If the total number of available items is more than the value
--   specified in <tt>MaxResults</tt>, then a <tt>NextToken</tt> is
--   returned in the output. You can use this token to display the next
--   page of results.
--   
--   <a>$sel:flowDefinitionArn:ListHumanLoops'</a>,
--   <a>listHumanLoops_flowDefinitionArn</a> - The Amazon Resource Name
--   (ARN) of a flow definition.
newListHumanLoops :: Text -> ListHumanLoops

-- | (Optional) The timestamp of the date when you want the human loops to
--   begin in ISO 8601 format. For example, <tt>2020-02-24</tt>.
listHumanLoops_creationTimeAfter :: Lens' ListHumanLoops (Maybe UTCTime)

-- | A token to display the next page of results.
listHumanLoops_nextToken :: Lens' ListHumanLoops (Maybe Text)

-- | Optional. The order for displaying results. Valid values:
--   <tt>Ascending</tt> and <tt>Descending</tt>.
listHumanLoops_sortOrder :: Lens' ListHumanLoops (Maybe SortOrder)

-- | (Optional) The timestamp of the date before which you want the human
--   loops to begin in ISO 8601 format. For example, <tt>2020-02-24</tt>.
listHumanLoops_creationTimeBefore :: Lens' ListHumanLoops (Maybe UTCTime)

-- | The total number of items to return. If the total number of available
--   items is more than the value specified in <tt>MaxResults</tt>, then a
--   <tt>NextToken</tt> is returned in the output. You can use this token
--   to display the next page of results.
listHumanLoops_maxResults :: Lens' ListHumanLoops (Maybe Natural)

-- | The Amazon Resource Name (ARN) of a flow definition.
listHumanLoops_flowDefinitionArn :: Lens' ListHumanLoops Text

-- | <i>See:</i> <a>newListHumanLoopsResponse</a> smart constructor.
data ListHumanLoopsResponse
ListHumanLoopsResponse' :: Maybe Text -> Int -> [HumanLoopSummary] -> ListHumanLoopsResponse

-- | A token to display the next page of results.
[$sel:nextToken:ListHumanLoopsResponse'] :: ListHumanLoopsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListHumanLoopsResponse'] :: ListHumanLoopsResponse -> Int

-- | An array of objects that contain information about the human loops.
[$sel:humanLoopSummaries:ListHumanLoopsResponse'] :: ListHumanLoopsResponse -> [HumanLoopSummary]

-- | Create a value of <a>ListHumanLoopsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListHumanLoops'</a>,
--   <a>listHumanLoopsResponse_nextToken</a> - A token to display the next
--   page of results.
--   
--   <a>$sel:httpStatus:ListHumanLoopsResponse'</a>,
--   <a>listHumanLoopsResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:humanLoopSummaries:ListHumanLoopsResponse'</a>,
--   <a>listHumanLoopsResponse_humanLoopSummaries</a> - An array of objects
--   that contain information about the human loops.
newListHumanLoopsResponse :: Int -> ListHumanLoopsResponse

-- | A token to display the next page of results.
listHumanLoopsResponse_nextToken :: Lens' ListHumanLoopsResponse (Maybe Text)

-- | The response's http status code.
listHumanLoopsResponse_httpStatus :: Lens' ListHumanLoopsResponse Int

-- | An array of objects that contain information about the human loops.
listHumanLoopsResponse_humanLoopSummaries :: Lens' ListHumanLoopsResponse [HumanLoopSummary]
instance GHC.Generics.Generic Amazonka.SageMakerA2IRuntime.ListHumanLoops.ListHumanLoops
instance GHC.Show.Show Amazonka.SageMakerA2IRuntime.ListHumanLoops.ListHumanLoops
instance GHC.Read.Read Amazonka.SageMakerA2IRuntime.ListHumanLoops.ListHumanLoops
instance GHC.Classes.Eq Amazonka.SageMakerA2IRuntime.ListHumanLoops.ListHumanLoops
instance GHC.Generics.Generic Amazonka.SageMakerA2IRuntime.ListHumanLoops.ListHumanLoopsResponse
instance GHC.Show.Show Amazonka.SageMakerA2IRuntime.ListHumanLoops.ListHumanLoopsResponse
instance GHC.Read.Read Amazonka.SageMakerA2IRuntime.ListHumanLoops.ListHumanLoopsResponse
instance GHC.Classes.Eq Amazonka.SageMakerA2IRuntime.ListHumanLoops.ListHumanLoopsResponse
instance Amazonka.Types.AWSRequest Amazonka.SageMakerA2IRuntime.ListHumanLoops.ListHumanLoops
instance Control.DeepSeq.NFData Amazonka.SageMakerA2IRuntime.ListHumanLoops.ListHumanLoopsResponse
instance Amazonka.Pager.AWSPager Amazonka.SageMakerA2IRuntime.ListHumanLoops.ListHumanLoops
instance Data.Hashable.Class.Hashable Amazonka.SageMakerA2IRuntime.ListHumanLoops.ListHumanLoops
instance Control.DeepSeq.NFData Amazonka.SageMakerA2IRuntime.ListHumanLoops.ListHumanLoops
instance Amazonka.Data.Headers.ToHeaders Amazonka.SageMakerA2IRuntime.ListHumanLoops.ListHumanLoops
instance Amazonka.Data.Path.ToPath Amazonka.SageMakerA2IRuntime.ListHumanLoops.ListHumanLoops
instance Amazonka.Data.Query.ToQuery Amazonka.SageMakerA2IRuntime.ListHumanLoops.ListHumanLoops


-- | Returns information about the specified human loop. If the human loop
--   was deleted, this operation will return a
--   <tt>ResourceNotFoundException</tt> error.
module Amazonka.SageMakerA2IRuntime.DescribeHumanLoop

-- | <i>See:</i> <a>newDescribeHumanLoop</a> smart constructor.
data DescribeHumanLoop
DescribeHumanLoop' :: Text -> DescribeHumanLoop

-- | The name of the human loop that you want information about.
[$sel:humanLoopName:DescribeHumanLoop'] :: DescribeHumanLoop -> Text

-- | Create a value of <a>DescribeHumanLoop</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:humanLoopName:DescribeHumanLoop'</a>,
--   <a>describeHumanLoop_humanLoopName</a> - The name of the human loop
--   that you want information about.
newDescribeHumanLoop :: Text -> DescribeHumanLoop

-- | The name of the human loop that you want information about.
describeHumanLoop_humanLoopName :: Lens' DescribeHumanLoop Text

-- | <i>See:</i> <a>newDescribeHumanLoopResponse</a> smart constructor.
data DescribeHumanLoopResponse
DescribeHumanLoopResponse' :: Maybe Text -> Maybe Text -> Maybe HumanLoopOutput -> Int -> POSIX -> HumanLoopStatus -> Text -> Text -> Text -> DescribeHumanLoopResponse

-- | The reason why a human loop failed. The failure reason is returned
--   when the status of the human loop is <tt>Failed</tt>.
[$sel:failureReason:DescribeHumanLoopResponse'] :: DescribeHumanLoopResponse -> Maybe Text

-- | A failure code that identifies the type of failure.
--   
--   Possible values: <tt>ValidationError</tt>, <tt>Expired</tt>,
--   <tt>InternalError</tt>
[$sel:failureCode:DescribeHumanLoopResponse'] :: DescribeHumanLoopResponse -> Maybe Text

-- | An object that contains information about the output of the human
--   loop.
[$sel:humanLoopOutput:DescribeHumanLoopResponse'] :: DescribeHumanLoopResponse -> Maybe HumanLoopOutput

-- | The response's http status code.
[$sel:httpStatus:DescribeHumanLoopResponse'] :: DescribeHumanLoopResponse -> Int

-- | The creation time when Amazon Augmented AI created the human loop.
[$sel:creationTime:DescribeHumanLoopResponse'] :: DescribeHumanLoopResponse -> POSIX

-- | The status of the human loop.
[$sel:humanLoopStatus:DescribeHumanLoopResponse'] :: DescribeHumanLoopResponse -> HumanLoopStatus

-- | The name of the human loop. The name must be lowercase, unique within
--   the Region in your account, and can have up to 63 characters. Valid
--   characters: a-z, 0-9, and - (hyphen).
[$sel:humanLoopName:DescribeHumanLoopResponse'] :: DescribeHumanLoopResponse -> Text

-- | The Amazon Resource Name (ARN) of the human loop.
[$sel:humanLoopArn:DescribeHumanLoopResponse'] :: DescribeHumanLoopResponse -> Text

-- | The Amazon Resource Name (ARN) of the flow definition.
[$sel:flowDefinitionArn:DescribeHumanLoopResponse'] :: DescribeHumanLoopResponse -> Text

-- | Create a value of <a>DescribeHumanLoopResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:DescribeHumanLoopResponse'</a>,
--   <a>describeHumanLoopResponse_failureReason</a> - The reason why a
--   human loop failed. The failure reason is returned when the status of
--   the human loop is <tt>Failed</tt>.
--   
--   <a>$sel:failureCode:DescribeHumanLoopResponse'</a>,
--   <a>describeHumanLoopResponse_failureCode</a> - A failure code that
--   identifies the type of failure.
--   
--   Possible values: <tt>ValidationError</tt>, <tt>Expired</tt>,
--   <tt>InternalError</tt>
--   
--   <a>$sel:humanLoopOutput:DescribeHumanLoopResponse'</a>,
--   <a>describeHumanLoopResponse_humanLoopOutput</a> - An object that
--   contains information about the output of the human loop.
--   
--   <a>$sel:httpStatus:DescribeHumanLoopResponse'</a>,
--   <a>describeHumanLoopResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:creationTime:DescribeHumanLoopResponse'</a>,
--   <a>describeHumanLoopResponse_creationTime</a> - The creation time when
--   Amazon Augmented AI created the human loop.
--   
--   <a>$sel:humanLoopStatus:DescribeHumanLoopResponse'</a>,
--   <a>describeHumanLoopResponse_humanLoopStatus</a> - The status of the
--   human loop.
--   
--   <a>$sel:humanLoopName:DescribeHumanLoop'</a>,
--   <a>describeHumanLoopResponse_humanLoopName</a> - The name of the human
--   loop. The name must be lowercase, unique within the Region in your
--   account, and can have up to 63 characters. Valid characters: a-z, 0-9,
--   and - (hyphen).
--   
--   <a>$sel:humanLoopArn:DescribeHumanLoopResponse'</a>,
--   <a>describeHumanLoopResponse_humanLoopArn</a> - The Amazon Resource
--   Name (ARN) of the human loop.
--   
--   <a>$sel:flowDefinitionArn:DescribeHumanLoopResponse'</a>,
--   <a>describeHumanLoopResponse_flowDefinitionArn</a> - The Amazon
--   Resource Name (ARN) of the flow definition.
newDescribeHumanLoopResponse :: Int -> UTCTime -> HumanLoopStatus -> Text -> Text -> Text -> DescribeHumanLoopResponse

-- | The reason why a human loop failed. The failure reason is returned
--   when the status of the human loop is <tt>Failed</tt>.
describeHumanLoopResponse_failureReason :: Lens' DescribeHumanLoopResponse (Maybe Text)

-- | A failure code that identifies the type of failure.
--   
--   Possible values: <tt>ValidationError</tt>, <tt>Expired</tt>,
--   <tt>InternalError</tt>
describeHumanLoopResponse_failureCode :: Lens' DescribeHumanLoopResponse (Maybe Text)

-- | An object that contains information about the output of the human
--   loop.
describeHumanLoopResponse_humanLoopOutput :: Lens' DescribeHumanLoopResponse (Maybe HumanLoopOutput)

-- | The response's http status code.
describeHumanLoopResponse_httpStatus :: Lens' DescribeHumanLoopResponse Int

-- | The creation time when Amazon Augmented AI created the human loop.
describeHumanLoopResponse_creationTime :: Lens' DescribeHumanLoopResponse UTCTime

-- | The status of the human loop.
describeHumanLoopResponse_humanLoopStatus :: Lens' DescribeHumanLoopResponse HumanLoopStatus

-- | The name of the human loop. The name must be lowercase, unique within
--   the Region in your account, and can have up to 63 characters. Valid
--   characters: a-z, 0-9, and - (hyphen).
describeHumanLoopResponse_humanLoopName :: Lens' DescribeHumanLoopResponse Text

-- | The Amazon Resource Name (ARN) of the human loop.
describeHumanLoopResponse_humanLoopArn :: Lens' DescribeHumanLoopResponse Text

-- | The Amazon Resource Name (ARN) of the flow definition.
describeHumanLoopResponse_flowDefinitionArn :: Lens' DescribeHumanLoopResponse Text
instance GHC.Generics.Generic Amazonka.SageMakerA2IRuntime.DescribeHumanLoop.DescribeHumanLoop
instance GHC.Show.Show Amazonka.SageMakerA2IRuntime.DescribeHumanLoop.DescribeHumanLoop
instance GHC.Read.Read Amazonka.SageMakerA2IRuntime.DescribeHumanLoop.DescribeHumanLoop
instance GHC.Classes.Eq Amazonka.SageMakerA2IRuntime.DescribeHumanLoop.DescribeHumanLoop
instance GHC.Generics.Generic Amazonka.SageMakerA2IRuntime.DescribeHumanLoop.DescribeHumanLoopResponse
instance GHC.Show.Show Amazonka.SageMakerA2IRuntime.DescribeHumanLoop.DescribeHumanLoopResponse
instance GHC.Read.Read Amazonka.SageMakerA2IRuntime.DescribeHumanLoop.DescribeHumanLoopResponse
instance GHC.Classes.Eq Amazonka.SageMakerA2IRuntime.DescribeHumanLoop.DescribeHumanLoopResponse
instance Amazonka.Types.AWSRequest Amazonka.SageMakerA2IRuntime.DescribeHumanLoop.DescribeHumanLoop
instance Control.DeepSeq.NFData Amazonka.SageMakerA2IRuntime.DescribeHumanLoop.DescribeHumanLoopResponse
instance Data.Hashable.Class.Hashable Amazonka.SageMakerA2IRuntime.DescribeHumanLoop.DescribeHumanLoop
instance Control.DeepSeq.NFData Amazonka.SageMakerA2IRuntime.DescribeHumanLoop.DescribeHumanLoop
instance Amazonka.Data.Headers.ToHeaders Amazonka.SageMakerA2IRuntime.DescribeHumanLoop.DescribeHumanLoop
instance Amazonka.Data.Path.ToPath Amazonka.SageMakerA2IRuntime.DescribeHumanLoop.DescribeHumanLoop
instance Amazonka.Data.Query.ToQuery Amazonka.SageMakerA2IRuntime.DescribeHumanLoop.DescribeHumanLoop


-- | Deletes the specified human loop for a flow definition.
--   
--   If the human loop was deleted, this operation will return a
--   <tt>ResourceNotFoundException</tt>.
module Amazonka.SageMakerA2IRuntime.DeleteHumanLoop

-- | <i>See:</i> <a>newDeleteHumanLoop</a> smart constructor.
data DeleteHumanLoop
DeleteHumanLoop' :: Text -> DeleteHumanLoop

-- | The name of the human loop that you want to delete.
[$sel:humanLoopName:DeleteHumanLoop'] :: DeleteHumanLoop -> Text

-- | Create a value of <a>DeleteHumanLoop</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:humanLoopName:DeleteHumanLoop'</a>,
--   <a>deleteHumanLoop_humanLoopName</a> - The name of the human loop that
--   you want to delete.
newDeleteHumanLoop :: Text -> DeleteHumanLoop

-- | The name of the human loop that you want to delete.
deleteHumanLoop_humanLoopName :: Lens' DeleteHumanLoop Text

-- | <i>See:</i> <a>newDeleteHumanLoopResponse</a> smart constructor.
data DeleteHumanLoopResponse
DeleteHumanLoopResponse' :: Int -> DeleteHumanLoopResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteHumanLoopResponse'] :: DeleteHumanLoopResponse -> Int

-- | Create a value of <a>DeleteHumanLoopResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteHumanLoopResponse'</a>,
--   <a>deleteHumanLoopResponse_httpStatus</a> - The response's http status
--   code.
newDeleteHumanLoopResponse :: Int -> DeleteHumanLoopResponse

-- | The response's http status code.
deleteHumanLoopResponse_httpStatus :: Lens' DeleteHumanLoopResponse Int
instance GHC.Generics.Generic Amazonka.SageMakerA2IRuntime.DeleteHumanLoop.DeleteHumanLoop
instance GHC.Show.Show Amazonka.SageMakerA2IRuntime.DeleteHumanLoop.DeleteHumanLoop
instance GHC.Read.Read Amazonka.SageMakerA2IRuntime.DeleteHumanLoop.DeleteHumanLoop
instance GHC.Classes.Eq Amazonka.SageMakerA2IRuntime.DeleteHumanLoop.DeleteHumanLoop
instance GHC.Generics.Generic Amazonka.SageMakerA2IRuntime.DeleteHumanLoop.DeleteHumanLoopResponse
instance GHC.Show.Show Amazonka.SageMakerA2IRuntime.DeleteHumanLoop.DeleteHumanLoopResponse
instance GHC.Read.Read Amazonka.SageMakerA2IRuntime.DeleteHumanLoop.DeleteHumanLoopResponse
instance GHC.Classes.Eq Amazonka.SageMakerA2IRuntime.DeleteHumanLoop.DeleteHumanLoopResponse
instance Amazonka.Types.AWSRequest Amazonka.SageMakerA2IRuntime.DeleteHumanLoop.DeleteHumanLoop
instance Control.DeepSeq.NFData Amazonka.SageMakerA2IRuntime.DeleteHumanLoop.DeleteHumanLoopResponse
instance Data.Hashable.Class.Hashable Amazonka.SageMakerA2IRuntime.DeleteHumanLoop.DeleteHumanLoop
instance Control.DeepSeq.NFData Amazonka.SageMakerA2IRuntime.DeleteHumanLoop.DeleteHumanLoop
instance Amazonka.Data.Headers.ToHeaders Amazonka.SageMakerA2IRuntime.DeleteHumanLoop.DeleteHumanLoop
instance Amazonka.Data.Path.ToPath Amazonka.SageMakerA2IRuntime.DeleteHumanLoop.DeleteHumanLoop
instance Amazonka.Data.Query.ToQuery Amazonka.SageMakerA2IRuntime.DeleteHumanLoop.DeleteHumanLoop


module Amazonka.SageMakerA2IRuntime.Lens

-- | (Optional) The timestamp of the date when you want the human loops to
--   begin in ISO 8601 format. For example, <tt>2020-02-24</tt>.
listHumanLoops_creationTimeAfter :: Lens' ListHumanLoops (Maybe UTCTime)

-- | A token to display the next page of results.
listHumanLoops_nextToken :: Lens' ListHumanLoops (Maybe Text)

-- | Optional. The order for displaying results. Valid values:
--   <tt>Ascending</tt> and <tt>Descending</tt>.
listHumanLoops_sortOrder :: Lens' ListHumanLoops (Maybe SortOrder)

-- | (Optional) The timestamp of the date before which you want the human
--   loops to begin in ISO 8601 format. For example, <tt>2020-02-24</tt>.
listHumanLoops_creationTimeBefore :: Lens' ListHumanLoops (Maybe UTCTime)

-- | The total number of items to return. If the total number of available
--   items is more than the value specified in <tt>MaxResults</tt>, then a
--   <tt>NextToken</tt> is returned in the output. You can use this token
--   to display the next page of results.
listHumanLoops_maxResults :: Lens' ListHumanLoops (Maybe Natural)

-- | The Amazon Resource Name (ARN) of a flow definition.
listHumanLoops_flowDefinitionArn :: Lens' ListHumanLoops Text

-- | A token to display the next page of results.
listHumanLoopsResponse_nextToken :: Lens' ListHumanLoopsResponse (Maybe Text)

-- | The response's http status code.
listHumanLoopsResponse_httpStatus :: Lens' ListHumanLoopsResponse Int

-- | An array of objects that contain information about the human loops.
listHumanLoopsResponse_humanLoopSummaries :: Lens' ListHumanLoopsResponse [HumanLoopSummary]

-- | The name of the human loop that you want to delete.
deleteHumanLoop_humanLoopName :: Lens' DeleteHumanLoop Text

-- | The response's http status code.
deleteHumanLoopResponse_httpStatus :: Lens' DeleteHumanLoopResponse Int

-- | Attributes of the specified data. Use <tt>DataAttributes</tt> to
--   specify if your data is free of personally identifiable information
--   and/or free of adult content.
startHumanLoop_dataAttributes :: Lens' StartHumanLoop (Maybe HumanLoopDataAttributes)

-- | The name of the human loop.
startHumanLoop_humanLoopName :: Lens' StartHumanLoop Text

-- | The Amazon Resource Name (ARN) of the flow definition associated with
--   this human loop.
startHumanLoop_flowDefinitionArn :: Lens' StartHumanLoop Text

-- | An object that contains information about the human loop.
startHumanLoop_humanLoopInput :: Lens' StartHumanLoop HumanLoopInput

-- | The Amazon Resource Name (ARN) of the human loop.
startHumanLoopResponse_humanLoopArn :: Lens' StartHumanLoopResponse (Maybe Text)

-- | The response's http status code.
startHumanLoopResponse_httpStatus :: Lens' StartHumanLoopResponse Int

-- | The name of the human loop that you want to stop.
stopHumanLoop_humanLoopName :: Lens' StopHumanLoop Text

-- | The response's http status code.
stopHumanLoopResponse_httpStatus :: Lens' StopHumanLoopResponse Int

-- | The name of the human loop that you want information about.
describeHumanLoop_humanLoopName :: Lens' DescribeHumanLoop Text

-- | The reason why a human loop failed. The failure reason is returned
--   when the status of the human loop is <tt>Failed</tt>.
describeHumanLoopResponse_failureReason :: Lens' DescribeHumanLoopResponse (Maybe Text)

-- | A failure code that identifies the type of failure.
--   
--   Possible values: <tt>ValidationError</tt>, <tt>Expired</tt>,
--   <tt>InternalError</tt>
describeHumanLoopResponse_failureCode :: Lens' DescribeHumanLoopResponse (Maybe Text)

-- | An object that contains information about the output of the human
--   loop.
describeHumanLoopResponse_humanLoopOutput :: Lens' DescribeHumanLoopResponse (Maybe HumanLoopOutput)

-- | The response's http status code.
describeHumanLoopResponse_httpStatus :: Lens' DescribeHumanLoopResponse Int

-- | The creation time when Amazon Augmented AI created the human loop.
describeHumanLoopResponse_creationTime :: Lens' DescribeHumanLoopResponse UTCTime

-- | The status of the human loop.
describeHumanLoopResponse_humanLoopStatus :: Lens' DescribeHumanLoopResponse HumanLoopStatus

-- | The name of the human loop. The name must be lowercase, unique within
--   the Region in your account, and can have up to 63 characters. Valid
--   characters: a-z, 0-9, and - (hyphen).
describeHumanLoopResponse_humanLoopName :: Lens' DescribeHumanLoopResponse Text

-- | The Amazon Resource Name (ARN) of the human loop.
describeHumanLoopResponse_humanLoopArn :: Lens' DescribeHumanLoopResponse Text

-- | The Amazon Resource Name (ARN) of the flow definition.
describeHumanLoopResponse_flowDefinitionArn :: Lens' DescribeHumanLoopResponse Text

-- | Declares that your content is free of personally identifiable
--   information or adult content.
--   
--   Amazon SageMaker can restrict the Amazon Mechanical Turk workers who
--   can view your task based on this information.
humanLoopDataAttributes_contentClassifiers :: Lens' HumanLoopDataAttributes [ContentClassifier]

-- | Serialized input from the human loop. The input must be a string
--   representation of a file in JSON format.
humanLoopInput_inputContent :: Lens' HumanLoopInput Text

-- | The location of the Amazon S3 object where Amazon Augmented AI stores
--   your human loop output.
humanLoopOutput_outputS3Uri :: Lens' HumanLoopOutput Text

-- | When Amazon Augmented AI created the human loop.
humanLoopSummary_creationTime :: Lens' HumanLoopSummary (Maybe UTCTime)

-- | The reason why the human loop failed. A failure reason is returned
--   when the status of the human loop is <tt>Failed</tt>.
humanLoopSummary_failureReason :: Lens' HumanLoopSummary (Maybe Text)

-- | The status of the human loop.
humanLoopSummary_humanLoopStatus :: Lens' HumanLoopSummary (Maybe HumanLoopStatus)

-- | The name of the human loop.
humanLoopSummary_humanLoopName :: Lens' HumanLoopSummary (Maybe Text)

-- | The Amazon Resource Name (ARN) of the flow definition used to
--   configure the human loop.
humanLoopSummary_flowDefinitionArn :: Lens' HumanLoopSummary (Maybe Text)


module Amazonka.SageMakerA2IRuntime.Waiters


-- | Derived from API version <tt>2019-11-07</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   Amazon Augmented AI (Amazon A2I) adds the benefit of human judgment to
--   any machine learning application. When an AI application can't
--   evaluate data with a high degree of confidence, human reviewers can
--   take over. This human review is called a human review workflow. To
--   create and start a human review workflow, you need three resources: a
--   /worker task template<i>, a </i>flow definition<i>, and a </i>human
--   loop/.
--   
--   For information about these resources and prerequisites for using
--   Amazon A2I, see <a>Get Started with Amazon Augmented AI</a> in the
--   Amazon SageMaker Developer Guide.
--   
--   This API reference includes information about API actions and data
--   types that you can use to interact with Amazon A2I programmatically.
--   Use this guide to:
--   
--   <ul>
--   <li>Start a human loop with the <tt>StartHumanLoop</tt> operation when
--   using Amazon A2I with a <i>custom task type</i>. To learn more about
--   the difference between custom and built-in task types, see <a>Use Task
--   Types</a> . To learn how to start a human loop using this API, see
--   <a>Create and Start a Human Loop for a Custom Task Type</a> in the
--   Amazon SageMaker Developer Guide.</li>
--   <li>Manage your human loops. You can list all human loops that you
--   have created, describe individual human loops, and stop and delete
--   human loops. To learn more, see <a>Monitor and Manage Your Human
--   Loop</a> in the Amazon SageMaker Developer Guide.</li>
--   </ul>
--   
--   Amazon A2I integrates APIs from various AWS services to create and
--   start human review workflows for those services. To learn how Amazon
--   A2I uses these APIs, see <a>Use APIs in Amazon A2I</a> in the Amazon
--   SageMaker Developer Guide.
module Amazonka.SageMakerA2IRuntime

-- | API version <tt>2019-11-07</tt> of the Amazon Augmented AI Runtime SDK
--   configuration.
defaultService :: Service

-- | The request isn't valid. Check the syntax and try again.
_ValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Your request has the same name as another active human loop but has
--   different input data. You cannot start two human loops with the same
--   name and different input data.
_ConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You exceeded your service quota. Service quotas, also referred to as
--   limits, are the maximum number of service resources or operations for
--   your AWS account. For a list of Amazon A2I service quotes, see
--   <a>Amazon Augmented AI Service Quotes</a>. Delete some resources or
--   request an increase in your service quota. You can request a quota
--   increase using Service Quotas or the AWS Support Center. To request an
--   increase, see <a>AWS Service Quotas</a> in the <i>AWS General
--   Reference</i>.
_ServiceQuotaExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You exceeded the maximum number of requests.
_ThrottlingException :: AsError a => Getting (First ServiceError) a ServiceError

-- | We couldn't process your request because of an issue with the server.
--   Try again later.
_InternalServerException :: AsError a => Getting (First ServiceError) a ServiceError

-- | We couldn't find the requested resource. Check that your resources
--   exists and were created in the same AWS Region as your request, and
--   try your request again.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newListHumanLoops</a> smart constructor.
data ListHumanLoops
ListHumanLoops' :: Maybe POSIX -> Maybe Text -> Maybe SortOrder -> Maybe POSIX -> Maybe Natural -> Text -> ListHumanLoops

-- | Create a value of <a>ListHumanLoops</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTimeAfter:ListHumanLoops'</a>,
--   <a>listHumanLoops_creationTimeAfter</a> - (Optional) The timestamp of
--   the date when you want the human loops to begin in ISO 8601 format.
--   For example, <tt>2020-02-24</tt>.
--   
--   <a>$sel:nextToken:ListHumanLoops'</a>, <a>listHumanLoops_nextToken</a>
--   - A token to display the next page of results.
--   
--   <a>$sel:sortOrder:ListHumanLoops'</a>, <a>listHumanLoops_sortOrder</a>
--   - Optional. The order for displaying results. Valid values:
--   <tt>Ascending</tt> and <tt>Descending</tt>.
--   
--   <a>$sel:creationTimeBefore:ListHumanLoops'</a>,
--   <a>listHumanLoops_creationTimeBefore</a> - (Optional) The timestamp of
--   the date before which you want the human loops to begin in ISO 8601
--   format. For example, <tt>2020-02-24</tt>.
--   
--   <a>$sel:maxResults:ListHumanLoops'</a>,
--   <a>listHumanLoops_maxResults</a> - The total number of items to
--   return. If the total number of available items is more than the value
--   specified in <tt>MaxResults</tt>, then a <tt>NextToken</tt> is
--   returned in the output. You can use this token to display the next
--   page of results.
--   
--   <a>$sel:flowDefinitionArn:ListHumanLoops'</a>,
--   <a>listHumanLoops_flowDefinitionArn</a> - The Amazon Resource Name
--   (ARN) of a flow definition.
newListHumanLoops :: Text -> ListHumanLoops

-- | <i>See:</i> <a>newListHumanLoopsResponse</a> smart constructor.
data ListHumanLoopsResponse
ListHumanLoopsResponse' :: Maybe Text -> Int -> [HumanLoopSummary] -> ListHumanLoopsResponse

-- | Create a value of <a>ListHumanLoopsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListHumanLoops'</a>,
--   <a>listHumanLoopsResponse_nextToken</a> - A token to display the next
--   page of results.
--   
--   <a>$sel:httpStatus:ListHumanLoopsResponse'</a>,
--   <a>listHumanLoopsResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:humanLoopSummaries:ListHumanLoopsResponse'</a>,
--   <a>listHumanLoopsResponse_humanLoopSummaries</a> - An array of objects
--   that contain information about the human loops.
newListHumanLoopsResponse :: Int -> ListHumanLoopsResponse

-- | <i>See:</i> <a>newDeleteHumanLoop</a> smart constructor.
data DeleteHumanLoop
DeleteHumanLoop' :: Text -> DeleteHumanLoop

-- | Create a value of <a>DeleteHumanLoop</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:humanLoopName:DeleteHumanLoop'</a>,
--   <a>deleteHumanLoop_humanLoopName</a> - The name of the human loop that
--   you want to delete.
newDeleteHumanLoop :: Text -> DeleteHumanLoop

-- | <i>See:</i> <a>newDeleteHumanLoopResponse</a> smart constructor.
data DeleteHumanLoopResponse
DeleteHumanLoopResponse' :: Int -> DeleteHumanLoopResponse

-- | Create a value of <a>DeleteHumanLoopResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteHumanLoopResponse'</a>,
--   <a>deleteHumanLoopResponse_httpStatus</a> - The response's http status
--   code.
newDeleteHumanLoopResponse :: Int -> DeleteHumanLoopResponse

-- | <i>See:</i> <a>newStartHumanLoop</a> smart constructor.
data StartHumanLoop
StartHumanLoop' :: Maybe HumanLoopDataAttributes -> Text -> Text -> HumanLoopInput -> StartHumanLoop

-- | Create a value of <a>StartHumanLoop</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataAttributes:StartHumanLoop'</a>,
--   <a>startHumanLoop_dataAttributes</a> - Attributes of the specified
--   data. Use <tt>DataAttributes</tt> to specify if your data is free of
--   personally identifiable information and/or free of adult content.
--   
--   <a>$sel:humanLoopName:StartHumanLoop'</a>,
--   <a>startHumanLoop_humanLoopName</a> - The name of the human loop.
--   
--   <a>$sel:flowDefinitionArn:StartHumanLoop'</a>,
--   <a>startHumanLoop_flowDefinitionArn</a> - The Amazon Resource Name
--   (ARN) of the flow definition associated with this human loop.
--   
--   <a>$sel:humanLoopInput:StartHumanLoop'</a>,
--   <a>startHumanLoop_humanLoopInput</a> - An object that contains
--   information about the human loop.
newStartHumanLoop :: Text -> Text -> HumanLoopInput -> StartHumanLoop

-- | <i>See:</i> <a>newStartHumanLoopResponse</a> smart constructor.
data StartHumanLoopResponse
StartHumanLoopResponse' :: Maybe Text -> Int -> StartHumanLoopResponse

-- | Create a value of <a>StartHumanLoopResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:humanLoopArn:StartHumanLoopResponse'</a>,
--   <a>startHumanLoopResponse_humanLoopArn</a> - The Amazon Resource Name
--   (ARN) of the human loop.
--   
--   <a>$sel:httpStatus:StartHumanLoopResponse'</a>,
--   <a>startHumanLoopResponse_httpStatus</a> - The response's http status
--   code.
newStartHumanLoopResponse :: Int -> StartHumanLoopResponse

-- | <i>See:</i> <a>newStopHumanLoop</a> smart constructor.
data StopHumanLoop
StopHumanLoop' :: Text -> StopHumanLoop

-- | Create a value of <a>StopHumanLoop</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:humanLoopName:StopHumanLoop'</a>,
--   <a>stopHumanLoop_humanLoopName</a> - The name of the human loop that
--   you want to stop.
newStopHumanLoop :: Text -> StopHumanLoop

-- | <i>See:</i> <a>newStopHumanLoopResponse</a> smart constructor.
data StopHumanLoopResponse
StopHumanLoopResponse' :: Int -> StopHumanLoopResponse

-- | Create a value of <a>StopHumanLoopResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:StopHumanLoopResponse'</a>,
--   <a>stopHumanLoopResponse_httpStatus</a> - The response's http status
--   code.
newStopHumanLoopResponse :: Int -> StopHumanLoopResponse

-- | <i>See:</i> <a>newDescribeHumanLoop</a> smart constructor.
data DescribeHumanLoop
DescribeHumanLoop' :: Text -> DescribeHumanLoop

-- | Create a value of <a>DescribeHumanLoop</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:humanLoopName:DescribeHumanLoop'</a>,
--   <a>describeHumanLoop_humanLoopName</a> - The name of the human loop
--   that you want information about.
newDescribeHumanLoop :: Text -> DescribeHumanLoop

-- | <i>See:</i> <a>newDescribeHumanLoopResponse</a> smart constructor.
data DescribeHumanLoopResponse
DescribeHumanLoopResponse' :: Maybe Text -> Maybe Text -> Maybe HumanLoopOutput -> Int -> POSIX -> HumanLoopStatus -> Text -> Text -> Text -> DescribeHumanLoopResponse

-- | Create a value of <a>DescribeHumanLoopResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:DescribeHumanLoopResponse'</a>,
--   <a>describeHumanLoopResponse_failureReason</a> - The reason why a
--   human loop failed. The failure reason is returned when the status of
--   the human loop is <tt>Failed</tt>.
--   
--   <a>$sel:failureCode:DescribeHumanLoopResponse'</a>,
--   <a>describeHumanLoopResponse_failureCode</a> - A failure code that
--   identifies the type of failure.
--   
--   Possible values: <tt>ValidationError</tt>, <tt>Expired</tt>,
--   <tt>InternalError</tt>
--   
--   <a>$sel:humanLoopOutput:DescribeHumanLoopResponse'</a>,
--   <a>describeHumanLoopResponse_humanLoopOutput</a> - An object that
--   contains information about the output of the human loop.
--   
--   <a>$sel:httpStatus:DescribeHumanLoopResponse'</a>,
--   <a>describeHumanLoopResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:creationTime:DescribeHumanLoopResponse'</a>,
--   <a>describeHumanLoopResponse_creationTime</a> - The creation time when
--   Amazon Augmented AI created the human loop.
--   
--   <a>$sel:humanLoopStatus:DescribeHumanLoopResponse'</a>,
--   <a>describeHumanLoopResponse_humanLoopStatus</a> - The status of the
--   human loop.
--   
--   <a>$sel:humanLoopName:DescribeHumanLoop'</a>,
--   <a>describeHumanLoopResponse_humanLoopName</a> - The name of the human
--   loop. The name must be lowercase, unique within the Region in your
--   account, and can have up to 63 characters. Valid characters: a-z, 0-9,
--   and - (hyphen).
--   
--   <a>$sel:humanLoopArn:DescribeHumanLoopResponse'</a>,
--   <a>describeHumanLoopResponse_humanLoopArn</a> - The Amazon Resource
--   Name (ARN) of the human loop.
--   
--   <a>$sel:flowDefinitionArn:DescribeHumanLoopResponse'</a>,
--   <a>describeHumanLoopResponse_flowDefinitionArn</a> - The Amazon
--   Resource Name (ARN) of the flow definition.
newDescribeHumanLoopResponse :: Int -> UTCTime -> HumanLoopStatus -> Text -> Text -> Text -> DescribeHumanLoopResponse
newtype ContentClassifier
ContentClassifier' :: Text -> ContentClassifier
[fromContentClassifier] :: ContentClassifier -> Text
pattern ContentClassifier_FreeOfAdultContent :: ContentClassifier
pattern ContentClassifier_FreeOfPersonallyIdentifiableInformation :: ContentClassifier
newtype HumanLoopStatus
HumanLoopStatus' :: Text -> HumanLoopStatus
[fromHumanLoopStatus] :: HumanLoopStatus -> Text
pattern HumanLoopStatus_Completed :: HumanLoopStatus
pattern HumanLoopStatus_Failed :: HumanLoopStatus
pattern HumanLoopStatus_InProgress :: HumanLoopStatus
pattern HumanLoopStatus_Stopped :: HumanLoopStatus
pattern HumanLoopStatus_Stopping :: HumanLoopStatus
newtype SortOrder
SortOrder' :: Text -> SortOrder
[fromSortOrder] :: SortOrder -> Text
pattern SortOrder_Ascending :: SortOrder
pattern SortOrder_Descending :: SortOrder

-- | Attributes of the data specified by the customer. Use these to
--   describe the data to be labeled.
--   
--   <i>See:</i> <a>newHumanLoopDataAttributes</a> smart constructor.
data HumanLoopDataAttributes
HumanLoopDataAttributes' :: [ContentClassifier] -> HumanLoopDataAttributes

-- | Create a value of <a>HumanLoopDataAttributes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:contentClassifiers:HumanLoopDataAttributes'</a>,
--   <a>humanLoopDataAttributes_contentClassifiers</a> - Declares that your
--   content is free of personally identifiable information or adult
--   content.
--   
--   Amazon SageMaker can restrict the Amazon Mechanical Turk workers who
--   can view your task based on this information.
newHumanLoopDataAttributes :: HumanLoopDataAttributes

-- | An object containing the human loop input in JSON format.
--   
--   <i>See:</i> <a>newHumanLoopInput</a> smart constructor.
data HumanLoopInput
HumanLoopInput' :: Text -> HumanLoopInput

-- | Create a value of <a>HumanLoopInput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputContent:HumanLoopInput'</a>,
--   <a>humanLoopInput_inputContent</a> - Serialized input from the human
--   loop. The input must be a string representation of a file in JSON
--   format.
newHumanLoopInput :: Text -> HumanLoopInput

-- | Information about where the human output will be stored.
--   
--   <i>See:</i> <a>newHumanLoopOutput</a> smart constructor.
data HumanLoopOutput
HumanLoopOutput' :: Text -> HumanLoopOutput

-- | Create a value of <a>HumanLoopOutput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:outputS3Uri:HumanLoopOutput'</a>,
--   <a>humanLoopOutput_outputS3Uri</a> - The location of the Amazon S3
--   object where Amazon Augmented AI stores your human loop output.
newHumanLoopOutput :: Text -> HumanLoopOutput

-- | Summary information about the human loop.
--   
--   <i>See:</i> <a>newHumanLoopSummary</a> smart constructor.
data HumanLoopSummary
HumanLoopSummary' :: Maybe POSIX -> Maybe Text -> Maybe HumanLoopStatus -> Maybe Text -> Maybe Text -> HumanLoopSummary

-- | Create a value of <a>HumanLoopSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:HumanLoopSummary'</a>,
--   <a>humanLoopSummary_creationTime</a> - When Amazon Augmented AI
--   created the human loop.
--   
--   <a>$sel:failureReason:HumanLoopSummary'</a>,
--   <a>humanLoopSummary_failureReason</a> - The reason why the human loop
--   failed. A failure reason is returned when the status of the human loop
--   is <tt>Failed</tt>.
--   
--   <a>$sel:humanLoopStatus:HumanLoopSummary'</a>,
--   <a>humanLoopSummary_humanLoopStatus</a> - The status of the human
--   loop.
--   
--   <a>$sel:humanLoopName:HumanLoopSummary'</a>,
--   <a>humanLoopSummary_humanLoopName</a> - The name of the human loop.
--   
--   <a>$sel:flowDefinitionArn:HumanLoopSummary'</a>,
--   <a>humanLoopSummary_flowDefinitionArn</a> - The Amazon Resource Name
--   (ARN) of the flow definition used to configure the human loop.
newHumanLoopSummary :: HumanLoopSummary
