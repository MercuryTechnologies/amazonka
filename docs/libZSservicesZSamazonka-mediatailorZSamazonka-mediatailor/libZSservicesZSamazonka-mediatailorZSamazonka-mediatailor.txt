-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-mediatailorZSamazonka-mediatailor
@version 2.0


module Network.AWS.MediaTailor.Types.AccessType
newtype AccessType
AccessType' :: Text -> AccessType
[fromAccessType] :: AccessType -> Text
pattern AccessType_S3_SIGV4 :: AccessType
pattern AccessType_SECRETS_MANAGER_ACCESS_TOKEN :: AccessType
instance Network.AWS.Data.XML.ToXML Network.AWS.MediaTailor.Types.AccessType.AccessType
instance Network.AWS.Data.XML.FromXML Network.AWS.MediaTailor.Types.AccessType.AccessType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.MediaTailor.Types.AccessType.AccessType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MediaTailor.Types.AccessType.AccessType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.MediaTailor.Types.AccessType.AccessType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.MediaTailor.Types.AccessType.AccessType
instance Network.AWS.Data.Query.ToQuery Network.AWS.MediaTailor.Types.AccessType.AccessType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.MediaTailor.Types.AccessType.AccessType
instance Network.AWS.Data.Log.ToLog Network.AWS.MediaTailor.Types.AccessType.AccessType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.MediaTailor.Types.AccessType.AccessType
instance Network.AWS.Data.Text.ToText Network.AWS.MediaTailor.Types.AccessType.AccessType
instance Network.AWS.Data.Text.FromText Network.AWS.MediaTailor.Types.AccessType.AccessType
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.Types.AccessType.AccessType
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.Types.AccessType.AccessType
instance GHC.Generics.Generic Network.AWS.MediaTailor.Types.AccessType.AccessType
instance GHC.Classes.Ord Network.AWS.MediaTailor.Types.AccessType.AccessType
instance GHC.Classes.Eq Network.AWS.MediaTailor.Types.AccessType.AccessType
instance GHC.Read.Read Network.AWS.MediaTailor.Types.AccessType.AccessType
instance GHC.Show.Show Network.AWS.MediaTailor.Types.AccessType.AccessType


module Network.AWS.MediaTailor.Types.AdMarkerPassthrough

-- | For HLS, when set to true, MediaTailor passes through EXT-X-CUE-IN,
--   EXT-X-CUE-OUT, and EXT-X-SPLICEPOINT-SCTE35 ad markers from the origin
--   manifest to the MediaTailor personalized manifest.
--   
--   No logic is applied to these ad markers. For example, if EXT-X-CUE-OUT
--   has a value of 60, but no ads are filled for that ad break,
--   MediaTailor will not set the value to 0.
--   
--   <i>See:</i> <a>newAdMarkerPassthrough</a> smart constructor.
data AdMarkerPassthrough
AdMarkerPassthrough' :: Maybe Bool -> AdMarkerPassthrough

-- | Enables ad marker passthrough for your configuration.
[$sel:enabled:AdMarkerPassthrough'] :: AdMarkerPassthrough -> Maybe Bool

-- | Create a value of <a>AdMarkerPassthrough</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabled:AdMarkerPassthrough'</a>,
--   <a>adMarkerPassthrough_enabled</a> - Enables ad marker passthrough for
--   your configuration.
newAdMarkerPassthrough :: AdMarkerPassthrough

-- | Enables ad marker passthrough for your configuration.
adMarkerPassthrough_enabled :: Lens' AdMarkerPassthrough (Maybe Bool)
instance GHC.Generics.Generic Network.AWS.MediaTailor.Types.AdMarkerPassthrough.AdMarkerPassthrough
instance GHC.Show.Show Network.AWS.MediaTailor.Types.AdMarkerPassthrough.AdMarkerPassthrough
instance GHC.Read.Read Network.AWS.MediaTailor.Types.AdMarkerPassthrough.AdMarkerPassthrough
instance GHC.Classes.Eq Network.AWS.MediaTailor.Types.AdMarkerPassthrough.AdMarkerPassthrough
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.MediaTailor.Types.AdMarkerPassthrough.AdMarkerPassthrough
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.Types.AdMarkerPassthrough.AdMarkerPassthrough
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.Types.AdMarkerPassthrough.AdMarkerPassthrough
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MediaTailor.Types.AdMarkerPassthrough.AdMarkerPassthrough


module Network.AWS.MediaTailor.Types.Alert

-- | Alert configuration parameters.
--   
--   <i>See:</i> <a>newAlert</a> smart constructor.
data Alert
Alert' :: Text -> Text -> POSIX -> [Text] -> Text -> Alert

-- | The Amazon Resource Name (ARN) of the resource.
[$sel:resourceArn:Alert'] :: Alert -> Text

-- | The code for the alert. For example, NOT_PROCESSED.
[$sel:alertCode:Alert'] :: Alert -> Text

-- | The timestamp when the alert was last modified.
[$sel:lastModifiedTime:Alert'] :: Alert -> POSIX

-- | The Amazon Resource Names (ARNs) related to this alert.
[$sel:relatedResourceArns:Alert'] :: Alert -> [Text]

-- | If an alert is generated for a resource, an explanation of the reason
--   for the alert.
[$sel:alertMessage:Alert'] :: Alert -> Text

-- | Create a value of <a>Alert</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:Alert'</a>, <a>alert_resourceArn</a> - The Amazon
--   Resource Name (ARN) of the resource.
--   
--   <a>$sel:alertCode:Alert'</a>, <a>alert_alertCode</a> - The code for
--   the alert. For example, NOT_PROCESSED.
--   
--   <a>$sel:lastModifiedTime:Alert'</a>, <a>alert_lastModifiedTime</a> -
--   The timestamp when the alert was last modified.
--   
--   <a>$sel:relatedResourceArns:Alert'</a>,
--   <a>alert_relatedResourceArns</a> - The Amazon Resource Names (ARNs)
--   related to this alert.
--   
--   <a>$sel:alertMessage:Alert'</a>, <a>alert_alertMessage</a> - If an
--   alert is generated for a resource, an explanation of the reason for
--   the alert.
newAlert :: Text -> Text -> UTCTime -> Text -> Alert

-- | The Amazon Resource Name (ARN) of the resource.
alert_resourceArn :: Lens' Alert Text

-- | The code for the alert. For example, NOT_PROCESSED.
alert_alertCode :: Lens' Alert Text

-- | The timestamp when the alert was last modified.
alert_lastModifiedTime :: Lens' Alert UTCTime

-- | The Amazon Resource Names (ARNs) related to this alert.
alert_relatedResourceArns :: Lens' Alert [Text]

-- | If an alert is generated for a resource, an explanation of the reason
--   for the alert.
alert_alertMessage :: Lens' Alert Text
instance GHC.Generics.Generic Network.AWS.MediaTailor.Types.Alert.Alert
instance GHC.Show.Show Network.AWS.MediaTailor.Types.Alert.Alert
instance GHC.Read.Read Network.AWS.MediaTailor.Types.Alert.Alert
instance GHC.Classes.Eq Network.AWS.MediaTailor.Types.Alert.Alert
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.MediaTailor.Types.Alert.Alert
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.Types.Alert.Alert
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.Types.Alert.Alert


module Network.AWS.MediaTailor.Types.Bumper

-- | The configuration for bumpers. Bumpers are short audio or video clips
--   that play at the start or before the end of an ad break. To learn more
--   about bumpers, see <a>Bumpers</a>.
--   
--   <i>See:</i> <a>newBumper</a> smart constructor.
data Bumper
Bumper' :: Maybe Text -> Maybe Text -> Bumper

-- | The URL for the end bumper asset.
[$sel:endUrl:Bumper'] :: Bumper -> Maybe Text

-- | The URL for the start bumper asset.
[$sel:startUrl:Bumper'] :: Bumper -> Maybe Text

-- | Create a value of <a>Bumper</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:endUrl:Bumper'</a>, <a>bumper_endUrl</a> - The URL for the end
--   bumper asset.
--   
--   <a>$sel:startUrl:Bumper'</a>, <a>bumper_startUrl</a> - The URL for the
--   start bumper asset.
newBumper :: Bumper

-- | The URL for the end bumper asset.
bumper_endUrl :: Lens' Bumper (Maybe Text)

-- | The URL for the start bumper asset.
bumper_startUrl :: Lens' Bumper (Maybe Text)
instance GHC.Generics.Generic Network.AWS.MediaTailor.Types.Bumper.Bumper
instance GHC.Show.Show Network.AWS.MediaTailor.Types.Bumper.Bumper
instance GHC.Read.Read Network.AWS.MediaTailor.Types.Bumper.Bumper
instance GHC.Classes.Eq Network.AWS.MediaTailor.Types.Bumper.Bumper
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.MediaTailor.Types.Bumper.Bumper
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.Types.Bumper.Bumper
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.Types.Bumper.Bumper
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MediaTailor.Types.Bumper.Bumper


module Network.AWS.MediaTailor.Types.CdnConfiguration

-- | The configuration for using a content delivery network (CDN), like
--   Amazon CloudFront, for content and ad segment management.
--   
--   <i>See:</i> <a>newCdnConfiguration</a> smart constructor.
data CdnConfiguration
CdnConfiguration' :: Maybe Text -> Maybe Text -> CdnConfiguration

-- | A non-default content delivery network (CDN) to serve ad segments. By
--   default, AWS Elemental MediaTailor uses Amazon CloudFront with default
--   cache settings as its CDN for ad segments. To set up an alternate CDN,
--   create a rule in your CDN for the origin
--   ads.mediatailor.&amp;lt;region&gt;.amazonaws.com. Then specify the
--   rule's name in this AdSegmentUrlPrefix. When AWS Elemental MediaTailor
--   serves a manifest, it reports your CDN as the source for ad segments.
[$sel:adSegmentUrlPrefix:CdnConfiguration'] :: CdnConfiguration -> Maybe Text

-- | A content delivery network (CDN) to cache content segments, so that
--   content requests donâ€™t always have to go to the origin server. First,
--   create a rule in your CDN for the content segment origin server. Then
--   specify the rule's name in this ContentSegmentUrlPrefix. When AWS
--   Elemental MediaTailor serves a manifest, it reports your CDN as the
--   source for content segments.
[$sel:contentSegmentUrlPrefix:CdnConfiguration'] :: CdnConfiguration -> Maybe Text

-- | Create a value of <a>CdnConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:adSegmentUrlPrefix:CdnConfiguration'</a>,
--   <a>cdnConfiguration_adSegmentUrlPrefix</a> - A non-default content
--   delivery network (CDN) to serve ad segments. By default, AWS Elemental
--   MediaTailor uses Amazon CloudFront with default cache settings as its
--   CDN for ad segments. To set up an alternate CDN, create a rule in your
--   CDN for the origin ads.mediatailor.&amp;lt;region&gt;.amazonaws.com.
--   Then specify the rule's name in this AdSegmentUrlPrefix. When AWS
--   Elemental MediaTailor serves a manifest, it reports your CDN as the
--   source for ad segments.
--   
--   <a>$sel:contentSegmentUrlPrefix:CdnConfiguration'</a>,
--   <a>cdnConfiguration_contentSegmentUrlPrefix</a> - A content delivery
--   network (CDN) to cache content segments, so that content requests
--   donâ€™t always have to go to the origin server. First, create a rule in
--   your CDN for the content segment origin server. Then specify the
--   rule's name in this ContentSegmentUrlPrefix. When AWS Elemental
--   MediaTailor serves a manifest, it reports your CDN as the source for
--   content segments.
newCdnConfiguration :: CdnConfiguration

-- | A non-default content delivery network (CDN) to serve ad segments. By
--   default, AWS Elemental MediaTailor uses Amazon CloudFront with default
--   cache settings as its CDN for ad segments. To set up an alternate CDN,
--   create a rule in your CDN for the origin
--   ads.mediatailor.&amp;lt;region&gt;.amazonaws.com. Then specify the
--   rule's name in this AdSegmentUrlPrefix. When AWS Elemental MediaTailor
--   serves a manifest, it reports your CDN as the source for ad segments.
cdnConfiguration_adSegmentUrlPrefix :: Lens' CdnConfiguration (Maybe Text)

-- | A content delivery network (CDN) to cache content segments, so that
--   content requests donâ€™t always have to go to the origin server. First,
--   create a rule in your CDN for the content segment origin server. Then
--   specify the rule's name in this ContentSegmentUrlPrefix. When AWS
--   Elemental MediaTailor serves a manifest, it reports your CDN as the
--   source for content segments.
cdnConfiguration_contentSegmentUrlPrefix :: Lens' CdnConfiguration (Maybe Text)
instance GHC.Generics.Generic Network.AWS.MediaTailor.Types.CdnConfiguration.CdnConfiguration
instance GHC.Show.Show Network.AWS.MediaTailor.Types.CdnConfiguration.CdnConfiguration
instance GHC.Read.Read Network.AWS.MediaTailor.Types.CdnConfiguration.CdnConfiguration
instance GHC.Classes.Eq Network.AWS.MediaTailor.Types.CdnConfiguration.CdnConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.MediaTailor.Types.CdnConfiguration.CdnConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.Types.CdnConfiguration.CdnConfiguration
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.Types.CdnConfiguration.CdnConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MediaTailor.Types.CdnConfiguration.CdnConfiguration


module Network.AWS.MediaTailor.Types.ChannelState
newtype ChannelState
ChannelState' :: Text -> ChannelState
[fromChannelState] :: ChannelState -> Text
pattern ChannelState_RUNNING :: ChannelState
pattern ChannelState_STOPPED :: ChannelState
instance Network.AWS.Data.XML.ToXML Network.AWS.MediaTailor.Types.ChannelState.ChannelState
instance Network.AWS.Data.XML.FromXML Network.AWS.MediaTailor.Types.ChannelState.ChannelState
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.MediaTailor.Types.ChannelState.ChannelState
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MediaTailor.Types.ChannelState.ChannelState
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.MediaTailor.Types.ChannelState.ChannelState
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.MediaTailor.Types.ChannelState.ChannelState
instance Network.AWS.Data.Query.ToQuery Network.AWS.MediaTailor.Types.ChannelState.ChannelState
instance Network.AWS.Data.Headers.ToHeader Network.AWS.MediaTailor.Types.ChannelState.ChannelState
instance Network.AWS.Data.Log.ToLog Network.AWS.MediaTailor.Types.ChannelState.ChannelState
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.MediaTailor.Types.ChannelState.ChannelState
instance Network.AWS.Data.Text.ToText Network.AWS.MediaTailor.Types.ChannelState.ChannelState
instance Network.AWS.Data.Text.FromText Network.AWS.MediaTailor.Types.ChannelState.ChannelState
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.Types.ChannelState.ChannelState
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.Types.ChannelState.ChannelState
instance GHC.Generics.Generic Network.AWS.MediaTailor.Types.ChannelState.ChannelState
instance GHC.Classes.Ord Network.AWS.MediaTailor.Types.ChannelState.ChannelState
instance GHC.Classes.Eq Network.AWS.MediaTailor.Types.ChannelState.ChannelState
instance GHC.Read.Read Network.AWS.MediaTailor.Types.ChannelState.ChannelState
instance GHC.Show.Show Network.AWS.MediaTailor.Types.ChannelState.ChannelState


module Network.AWS.MediaTailor.Types.DashPlaylistSettings

-- | Dash manifest configuration parameters.
--   
--   <i>See:</i> <a>newDashPlaylistSettings</a> smart constructor.
data DashPlaylistSettings
DashPlaylistSettings' :: Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> DashPlaylistSettings

-- | Minimum amount of content (measured in seconds) that a player must
--   keep available in the buffer. Minimum value: 2 seconds. Maximum value:
--   60 seconds.
[$sel:minBufferTimeSeconds:DashPlaylistSettings'] :: DashPlaylistSettings -> Maybe Int

-- | Minimum amount of time (in seconds) that the player should wait before
--   requesting updates to the manifest. Minimum value: 2 seconds. Maximum
--   value: 60 seconds.
[$sel:minUpdatePeriodSeconds:DashPlaylistSettings'] :: DashPlaylistSettings -> Maybe Int

-- | Amount of time (in seconds) that the player should be from the live
--   point at the end of the manifest. Minimum value: 2 seconds. Maximum
--   value: 60 seconds.
[$sel:suggestedPresentationDelaySeconds:DashPlaylistSettings'] :: DashPlaylistSettings -> Maybe Int

-- | The total duration (in seconds) of each manifest. Minimum value: 30
--   seconds. Maximum value: 3600 seconds.
[$sel:manifestWindowSeconds:DashPlaylistSettings'] :: DashPlaylistSettings -> Maybe Int

-- | Create a value of <a>DashPlaylistSettings</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:minBufferTimeSeconds:DashPlaylistSettings'</a>,
--   <a>dashPlaylistSettings_minBufferTimeSeconds</a> - Minimum amount of
--   content (measured in seconds) that a player must keep available in the
--   buffer. Minimum value: 2 seconds. Maximum value: 60 seconds.
--   
--   <a>$sel:minUpdatePeriodSeconds:DashPlaylistSettings'</a>,
--   <a>dashPlaylistSettings_minUpdatePeriodSeconds</a> - Minimum amount of
--   time (in seconds) that the player should wait before requesting
--   updates to the manifest. Minimum value: 2 seconds. Maximum value: 60
--   seconds.
--   
--   <a>$sel:suggestedPresentationDelaySeconds:DashPlaylistSettings'</a>,
--   <a>dashPlaylistSettings_suggestedPresentationDelaySeconds</a> - Amount
--   of time (in seconds) that the player should be from the live point at
--   the end of the manifest. Minimum value: 2 seconds. Maximum value: 60
--   seconds.
--   
--   <a>$sel:manifestWindowSeconds:DashPlaylistSettings'</a>,
--   <a>dashPlaylistSettings_manifestWindowSeconds</a> - The total duration
--   (in seconds) of each manifest. Minimum value: 30 seconds. Maximum
--   value: 3600 seconds.
newDashPlaylistSettings :: DashPlaylistSettings

-- | Minimum amount of content (measured in seconds) that a player must
--   keep available in the buffer. Minimum value: 2 seconds. Maximum value:
--   60 seconds.
dashPlaylistSettings_minBufferTimeSeconds :: Lens' DashPlaylistSettings (Maybe Int)

-- | Minimum amount of time (in seconds) that the player should wait before
--   requesting updates to the manifest. Minimum value: 2 seconds. Maximum
--   value: 60 seconds.
dashPlaylistSettings_minUpdatePeriodSeconds :: Lens' DashPlaylistSettings (Maybe Int)

-- | Amount of time (in seconds) that the player should be from the live
--   point at the end of the manifest. Minimum value: 2 seconds. Maximum
--   value: 60 seconds.
dashPlaylistSettings_suggestedPresentationDelaySeconds :: Lens' DashPlaylistSettings (Maybe Int)

-- | The total duration (in seconds) of each manifest. Minimum value: 30
--   seconds. Maximum value: 3600 seconds.
dashPlaylistSettings_manifestWindowSeconds :: Lens' DashPlaylistSettings (Maybe Int)
instance GHC.Generics.Generic Network.AWS.MediaTailor.Types.DashPlaylistSettings.DashPlaylistSettings
instance GHC.Show.Show Network.AWS.MediaTailor.Types.DashPlaylistSettings.DashPlaylistSettings
instance GHC.Read.Read Network.AWS.MediaTailor.Types.DashPlaylistSettings.DashPlaylistSettings
instance GHC.Classes.Eq Network.AWS.MediaTailor.Types.DashPlaylistSettings.DashPlaylistSettings
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.MediaTailor.Types.DashPlaylistSettings.DashPlaylistSettings
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.Types.DashPlaylistSettings.DashPlaylistSettings
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.Types.DashPlaylistSettings.DashPlaylistSettings
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MediaTailor.Types.DashPlaylistSettings.DashPlaylistSettings


module Network.AWS.MediaTailor.Types.DefaultSegmentDeliveryConfiguration

-- | The optional configuration for a server that serves segments. Use this
--   if you want the segment delivery server to be different from the
--   source location server. For example, you can configure your source
--   location server to be an origination server, such as MediaPackage, and
--   the segment delivery server to be a content delivery network (CDN),
--   such as CloudFront. If you don't specify a segment delivery server,
--   then the source location server is used.
--   
--   <i>See:</i> <a>newDefaultSegmentDeliveryConfiguration</a> smart
--   constructor.
data DefaultSegmentDeliveryConfiguration
DefaultSegmentDeliveryConfiguration' :: Maybe Text -> DefaultSegmentDeliveryConfiguration

-- | The hostname of the server that will be used to serve segments. This
--   string must include the protocol, such as <b>https://</b>.
[$sel:baseUrl:DefaultSegmentDeliveryConfiguration'] :: DefaultSegmentDeliveryConfiguration -> Maybe Text

-- | Create a value of <a>DefaultSegmentDeliveryConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:baseUrl:DefaultSegmentDeliveryConfiguration'</a>,
--   <a>defaultSegmentDeliveryConfiguration_baseUrl</a> - The hostname of
--   the server that will be used to serve segments. This string must
--   include the protocol, such as <b>https://</b>.
newDefaultSegmentDeliveryConfiguration :: DefaultSegmentDeliveryConfiguration

-- | The hostname of the server that will be used to serve segments. This
--   string must include the protocol, such as <b>https://</b>.
defaultSegmentDeliveryConfiguration_baseUrl :: Lens' DefaultSegmentDeliveryConfiguration (Maybe Text)
instance GHC.Generics.Generic Network.AWS.MediaTailor.Types.DefaultSegmentDeliveryConfiguration.DefaultSegmentDeliveryConfiguration
instance GHC.Show.Show Network.AWS.MediaTailor.Types.DefaultSegmentDeliveryConfiguration.DefaultSegmentDeliveryConfiguration
instance GHC.Read.Read Network.AWS.MediaTailor.Types.DefaultSegmentDeliveryConfiguration.DefaultSegmentDeliveryConfiguration
instance GHC.Classes.Eq Network.AWS.MediaTailor.Types.DefaultSegmentDeliveryConfiguration.DefaultSegmentDeliveryConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.MediaTailor.Types.DefaultSegmentDeliveryConfiguration.DefaultSegmentDeliveryConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.Types.DefaultSegmentDeliveryConfiguration.DefaultSegmentDeliveryConfiguration
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.Types.DefaultSegmentDeliveryConfiguration.DefaultSegmentDeliveryConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MediaTailor.Types.DefaultSegmentDeliveryConfiguration.DefaultSegmentDeliveryConfiguration


module Network.AWS.MediaTailor.Types.HlsConfiguration

-- | The configuration for HLS content.
--   
--   <i>See:</i> <a>newHlsConfiguration</a> smart constructor.
data HlsConfiguration
HlsConfiguration' :: Maybe Text -> HlsConfiguration

-- | The URL that is used to initiate a playback session for devices that
--   support Apple HLS. The session uses server-side reporting.
[$sel:manifestEndpointPrefix:HlsConfiguration'] :: HlsConfiguration -> Maybe Text

-- | Create a value of <a>HlsConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:manifestEndpointPrefix:HlsConfiguration'</a>,
--   <a>hlsConfiguration_manifestEndpointPrefix</a> - The URL that is used
--   to initiate a playback session for devices that support Apple HLS. The
--   session uses server-side reporting.
newHlsConfiguration :: HlsConfiguration

-- | The URL that is used to initiate a playback session for devices that
--   support Apple HLS. The session uses server-side reporting.
hlsConfiguration_manifestEndpointPrefix :: Lens' HlsConfiguration (Maybe Text)
instance GHC.Generics.Generic Network.AWS.MediaTailor.Types.HlsConfiguration.HlsConfiguration
instance GHC.Show.Show Network.AWS.MediaTailor.Types.HlsConfiguration.HlsConfiguration
instance GHC.Read.Read Network.AWS.MediaTailor.Types.HlsConfiguration.HlsConfiguration
instance GHC.Classes.Eq Network.AWS.MediaTailor.Types.HlsConfiguration.HlsConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.MediaTailor.Types.HlsConfiguration.HlsConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.Types.HlsConfiguration.HlsConfiguration
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.Types.HlsConfiguration.HlsConfiguration


module Network.AWS.MediaTailor.Types.HlsPlaylistSettings

-- | HLS playlist configuration parameters.
--   
--   <i>See:</i> <a>newHlsPlaylistSettings</a> smart constructor.
data HlsPlaylistSettings
HlsPlaylistSettings' :: Maybe Int -> HlsPlaylistSettings

-- | The total duration (in seconds) of each manifest. Minimum value: 30
--   seconds. Maximum value: 3600 seconds.
[$sel:manifestWindowSeconds:HlsPlaylistSettings'] :: HlsPlaylistSettings -> Maybe Int

-- | Create a value of <a>HlsPlaylistSettings</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:manifestWindowSeconds:HlsPlaylistSettings'</a>,
--   <a>hlsPlaylistSettings_manifestWindowSeconds</a> - The total duration
--   (in seconds) of each manifest. Minimum value: 30 seconds. Maximum
--   value: 3600 seconds.
newHlsPlaylistSettings :: HlsPlaylistSettings

-- | The total duration (in seconds) of each manifest. Minimum value: 30
--   seconds. Maximum value: 3600 seconds.
hlsPlaylistSettings_manifestWindowSeconds :: Lens' HlsPlaylistSettings (Maybe Int)
instance GHC.Generics.Generic Network.AWS.MediaTailor.Types.HlsPlaylistSettings.HlsPlaylistSettings
instance GHC.Show.Show Network.AWS.MediaTailor.Types.HlsPlaylistSettings.HlsPlaylistSettings
instance GHC.Read.Read Network.AWS.MediaTailor.Types.HlsPlaylistSettings.HlsPlaylistSettings
instance GHC.Classes.Eq Network.AWS.MediaTailor.Types.HlsPlaylistSettings.HlsPlaylistSettings
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.MediaTailor.Types.HlsPlaylistSettings.HlsPlaylistSettings
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.Types.HlsPlaylistSettings.HlsPlaylistSettings
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.Types.HlsPlaylistSettings.HlsPlaylistSettings
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MediaTailor.Types.HlsPlaylistSettings.HlsPlaylistSettings


module Network.AWS.MediaTailor.Types.HttpConfiguration

-- | The HTTP configuration for the source location.
--   
--   <i>See:</i> <a>newHttpConfiguration</a> smart constructor.
data HttpConfiguration
HttpConfiguration' :: Text -> HttpConfiguration

-- | The base URL for the source location host server. This string must
--   include the protocol, such as <b>https://</b>.
[$sel:baseUrl:HttpConfiguration'] :: HttpConfiguration -> Text

-- | Create a value of <a>HttpConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:baseUrl:HttpConfiguration'</a>,
--   <a>httpConfiguration_baseUrl</a> - The base URL for the source
--   location host server. This string must include the protocol, such as
--   <b>https://</b>.
newHttpConfiguration :: Text -> HttpConfiguration

-- | The base URL for the source location host server. This string must
--   include the protocol, such as <b>https://</b>.
httpConfiguration_baseUrl :: Lens' HttpConfiguration Text
instance GHC.Generics.Generic Network.AWS.MediaTailor.Types.HttpConfiguration.HttpConfiguration
instance GHC.Show.Show Network.AWS.MediaTailor.Types.HttpConfiguration.HttpConfiguration
instance GHC.Read.Read Network.AWS.MediaTailor.Types.HttpConfiguration.HttpConfiguration
instance GHC.Classes.Eq Network.AWS.MediaTailor.Types.HttpConfiguration.HttpConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.MediaTailor.Types.HttpConfiguration.HttpConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.Types.HttpConfiguration.HttpConfiguration
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.Types.HttpConfiguration.HttpConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MediaTailor.Types.HttpConfiguration.HttpConfiguration


module Network.AWS.MediaTailor.Types.LivePreRollConfiguration

-- | The configuration for pre-roll ad insertion.
--   
--   <i>See:</i> <a>newLivePreRollConfiguration</a> smart constructor.
data LivePreRollConfiguration
LivePreRollConfiguration' :: Maybe Text -> Maybe Int -> LivePreRollConfiguration

-- | The URL for the ad decision server (ADS) for pre-roll ads. This
--   includes the specification of static parameters and placeholders for
--   dynamic parameters. AWS Elemental MediaTailor substitutes
--   player-specific and session-specific parameters as needed when calling
--   the ADS. Alternately, for testing, you can provide a static VAST URL.
--   The maximum length is 25,000 characters.
[$sel:adDecisionServerUrl:LivePreRollConfiguration'] :: LivePreRollConfiguration -> Maybe Text

-- | The maximum allowed duration for the pre-roll ad avail. AWS Elemental
--   MediaTailor won't play pre-roll ads to exceed this duration,
--   regardless of the total duration of ads that the ADS returns.
[$sel:maxDurationSeconds:LivePreRollConfiguration'] :: LivePreRollConfiguration -> Maybe Int

-- | Create a value of <a>LivePreRollConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:adDecisionServerUrl:LivePreRollConfiguration'</a>,
--   <a>livePreRollConfiguration_adDecisionServerUrl</a> - The URL for the
--   ad decision server (ADS) for pre-roll ads. This includes the
--   specification of static parameters and placeholders for dynamic
--   parameters. AWS Elemental MediaTailor substitutes player-specific and
--   session-specific parameters as needed when calling the ADS.
--   Alternately, for testing, you can provide a static VAST URL. The
--   maximum length is 25,000 characters.
--   
--   <a>$sel:maxDurationSeconds:LivePreRollConfiguration'</a>,
--   <a>livePreRollConfiguration_maxDurationSeconds</a> - The maximum
--   allowed duration for the pre-roll ad avail. AWS Elemental MediaTailor
--   won't play pre-roll ads to exceed this duration, regardless of the
--   total duration of ads that the ADS returns.
newLivePreRollConfiguration :: LivePreRollConfiguration

-- | The URL for the ad decision server (ADS) for pre-roll ads. This
--   includes the specification of static parameters and placeholders for
--   dynamic parameters. AWS Elemental MediaTailor substitutes
--   player-specific and session-specific parameters as needed when calling
--   the ADS. Alternately, for testing, you can provide a static VAST URL.
--   The maximum length is 25,000 characters.
livePreRollConfiguration_adDecisionServerUrl :: Lens' LivePreRollConfiguration (Maybe Text)

-- | The maximum allowed duration for the pre-roll ad avail. AWS Elemental
--   MediaTailor won't play pre-roll ads to exceed this duration,
--   regardless of the total duration of ads that the ADS returns.
livePreRollConfiguration_maxDurationSeconds :: Lens' LivePreRollConfiguration (Maybe Int)
instance GHC.Generics.Generic Network.AWS.MediaTailor.Types.LivePreRollConfiguration.LivePreRollConfiguration
instance GHC.Show.Show Network.AWS.MediaTailor.Types.LivePreRollConfiguration.LivePreRollConfiguration
instance GHC.Read.Read Network.AWS.MediaTailor.Types.LivePreRollConfiguration.LivePreRollConfiguration
instance GHC.Classes.Eq Network.AWS.MediaTailor.Types.LivePreRollConfiguration.LivePreRollConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.MediaTailor.Types.LivePreRollConfiguration.LivePreRollConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.Types.LivePreRollConfiguration.LivePreRollConfiguration
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.Types.LivePreRollConfiguration.LivePreRollConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MediaTailor.Types.LivePreRollConfiguration.LivePreRollConfiguration


module Network.AWS.MediaTailor.Types.LogConfiguration

-- | Returns Amazon CloudWatch log settings for a playback configuration.
--   
--   <i>See:</i> <a>newLogConfiguration</a> smart constructor.
data LogConfiguration
LogConfiguration' :: Int -> LogConfiguration

-- | The percentage of session logs that MediaTailor sends to your
--   Cloudwatch Logs account. For example, if your playback configuration
--   has 1000 sessions and percentEnabled is set to 60, MediaTailor sends
--   logs for 600 of the sessions to CloudWatch Logs. MediaTailor decides
--   at random which of the playback configuration sessions to send logs
--   for. If you want to view logs for a specific session, you can use the
--   <a>debug log mode</a>.
--   
--   Valid values: 0 - 100
[$sel:percentEnabled:LogConfiguration'] :: LogConfiguration -> Int

-- | Create a value of <a>LogConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:percentEnabled:LogConfiguration'</a>,
--   <a>logConfiguration_percentEnabled</a> - The percentage of session
--   logs that MediaTailor sends to your Cloudwatch Logs account. For
--   example, if your playback configuration has 1000 sessions and
--   percentEnabled is set to 60, MediaTailor sends logs for 600 of the
--   sessions to CloudWatch Logs. MediaTailor decides at random which of
--   the playback configuration sessions to send logs for. If you want to
--   view logs for a specific session, you can use the <a>debug log
--   mode</a>.
--   
--   Valid values: 0 - 100
newLogConfiguration :: Int -> LogConfiguration

-- | The percentage of session logs that MediaTailor sends to your
--   Cloudwatch Logs account. For example, if your playback configuration
--   has 1000 sessions and percentEnabled is set to 60, MediaTailor sends
--   logs for 600 of the sessions to CloudWatch Logs. MediaTailor decides
--   at random which of the playback configuration sessions to send logs
--   for. If you want to view logs for a specific session, you can use the
--   <a>debug log mode</a>.
--   
--   Valid values: 0 - 100
logConfiguration_percentEnabled :: Lens' LogConfiguration Int
instance GHC.Generics.Generic Network.AWS.MediaTailor.Types.LogConfiguration.LogConfiguration
instance GHC.Show.Show Network.AWS.MediaTailor.Types.LogConfiguration.LogConfiguration
instance GHC.Read.Read Network.AWS.MediaTailor.Types.LogConfiguration.LogConfiguration
instance GHC.Classes.Eq Network.AWS.MediaTailor.Types.LogConfiguration.LogConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.MediaTailor.Types.LogConfiguration.LogConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.Types.LogConfiguration.LogConfiguration
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.Types.LogConfiguration.LogConfiguration


module Network.AWS.MediaTailor.Types.ManifestProcessingRules

-- | The configuration for manifest processing rules. Manifest processing
--   rules enable customization of the personalized manifests created by
--   MediaTailor.
--   
--   <i>See:</i> <a>newManifestProcessingRules</a> smart constructor.
data ManifestProcessingRules
ManifestProcessingRules' :: Maybe AdMarkerPassthrough -> ManifestProcessingRules

-- | For HLS, when set to true, MediaTailor passes through EXT-X-CUE-IN,
--   EXT-X-CUE-OUT, and EXT-X-SPLICEPOINT-SCTE35 ad markers from the origin
--   manifest to the MediaTailor personalized manifest.
--   
--   No logic is applied to these ad markers. For example, if EXT-X-CUE-OUT
--   has a value of 60, but no ads are filled for that ad break,
--   MediaTailor will not set the value to 0.
[$sel:adMarkerPassthrough:ManifestProcessingRules'] :: ManifestProcessingRules -> Maybe AdMarkerPassthrough

-- | Create a value of <a>ManifestProcessingRules</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:adMarkerPassthrough:ManifestProcessingRules'</a>,
--   <a>manifestProcessingRules_adMarkerPassthrough</a> - For HLS, when set
--   to true, MediaTailor passes through EXT-X-CUE-IN, EXT-X-CUE-OUT, and
--   EXT-X-SPLICEPOINT-SCTE35 ad markers from the origin manifest to the
--   MediaTailor personalized manifest.
--   
--   No logic is applied to these ad markers. For example, if EXT-X-CUE-OUT
--   has a value of 60, but no ads are filled for that ad break,
--   MediaTailor will not set the value to 0.
newManifestProcessingRules :: ManifestProcessingRules

-- | For HLS, when set to true, MediaTailor passes through EXT-X-CUE-IN,
--   EXT-X-CUE-OUT, and EXT-X-SPLICEPOINT-SCTE35 ad markers from the origin
--   manifest to the MediaTailor personalized manifest.
--   
--   No logic is applied to these ad markers. For example, if EXT-X-CUE-OUT
--   has a value of 60, but no ads are filled for that ad break,
--   MediaTailor will not set the value to 0.
manifestProcessingRules_adMarkerPassthrough :: Lens' ManifestProcessingRules (Maybe AdMarkerPassthrough)
instance GHC.Generics.Generic Network.AWS.MediaTailor.Types.ManifestProcessingRules.ManifestProcessingRules
instance GHC.Show.Show Network.AWS.MediaTailor.Types.ManifestProcessingRules.ManifestProcessingRules
instance GHC.Read.Read Network.AWS.MediaTailor.Types.ManifestProcessingRules.ManifestProcessingRules
instance GHC.Classes.Eq Network.AWS.MediaTailor.Types.ManifestProcessingRules.ManifestProcessingRules
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.MediaTailor.Types.ManifestProcessingRules.ManifestProcessingRules
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.Types.ManifestProcessingRules.ManifestProcessingRules
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.Types.ManifestProcessingRules.ManifestProcessingRules
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MediaTailor.Types.ManifestProcessingRules.ManifestProcessingRules


module Network.AWS.MediaTailor.Types.MessageType
newtype MessageType
MessageType' :: Text -> MessageType
[fromMessageType] :: MessageType -> Text
pattern MessageType_SPLICE_INSERT :: MessageType
instance Network.AWS.Data.XML.ToXML Network.AWS.MediaTailor.Types.MessageType.MessageType
instance Network.AWS.Data.XML.FromXML Network.AWS.MediaTailor.Types.MessageType.MessageType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.MediaTailor.Types.MessageType.MessageType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MediaTailor.Types.MessageType.MessageType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.MediaTailor.Types.MessageType.MessageType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.MediaTailor.Types.MessageType.MessageType
instance Network.AWS.Data.Query.ToQuery Network.AWS.MediaTailor.Types.MessageType.MessageType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.MediaTailor.Types.MessageType.MessageType
instance Network.AWS.Data.Log.ToLog Network.AWS.MediaTailor.Types.MessageType.MessageType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.MediaTailor.Types.MessageType.MessageType
instance Network.AWS.Data.Text.ToText Network.AWS.MediaTailor.Types.MessageType.MessageType
instance Network.AWS.Data.Text.FromText Network.AWS.MediaTailor.Types.MessageType.MessageType
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.Types.MessageType.MessageType
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.Types.MessageType.MessageType
instance GHC.Generics.Generic Network.AWS.MediaTailor.Types.MessageType.MessageType
instance GHC.Classes.Ord Network.AWS.MediaTailor.Types.MessageType.MessageType
instance GHC.Classes.Eq Network.AWS.MediaTailor.Types.MessageType.MessageType
instance GHC.Read.Read Network.AWS.MediaTailor.Types.MessageType.MessageType
instance GHC.Show.Show Network.AWS.MediaTailor.Types.MessageType.MessageType


module Network.AWS.MediaTailor.Types.Mode
newtype Mode
Mode' :: Text -> Mode
[fromMode] :: Mode -> Text
pattern Mode_BEHIND_LIVE_EDGE :: Mode
pattern Mode_OFF :: Mode
instance Network.AWS.Data.XML.ToXML Network.AWS.MediaTailor.Types.Mode.Mode
instance Network.AWS.Data.XML.FromXML Network.AWS.MediaTailor.Types.Mode.Mode
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.MediaTailor.Types.Mode.Mode
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MediaTailor.Types.Mode.Mode
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.MediaTailor.Types.Mode.Mode
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.MediaTailor.Types.Mode.Mode
instance Network.AWS.Data.Query.ToQuery Network.AWS.MediaTailor.Types.Mode.Mode
instance Network.AWS.Data.Headers.ToHeader Network.AWS.MediaTailor.Types.Mode.Mode
instance Network.AWS.Data.Log.ToLog Network.AWS.MediaTailor.Types.Mode.Mode
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.MediaTailor.Types.Mode.Mode
instance Network.AWS.Data.Text.ToText Network.AWS.MediaTailor.Types.Mode.Mode
instance Network.AWS.Data.Text.FromText Network.AWS.MediaTailor.Types.Mode.Mode
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.Types.Mode.Mode
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.Types.Mode.Mode
instance GHC.Generics.Generic Network.AWS.MediaTailor.Types.Mode.Mode
instance GHC.Classes.Ord Network.AWS.MediaTailor.Types.Mode.Mode
instance GHC.Classes.Eq Network.AWS.MediaTailor.Types.Mode.Mode
instance GHC.Read.Read Network.AWS.MediaTailor.Types.Mode.Mode
instance GHC.Show.Show Network.AWS.MediaTailor.Types.Mode.Mode


module Network.AWS.MediaTailor.Types.AvailSuppression

-- | The configuration for avail suppression, also known as ad suppression.
--   For more information about ad suppression, see <a>Ad Suppression</a>.
--   
--   <i>See:</i> <a>newAvailSuppression</a> smart constructor.
data AvailSuppression
AvailSuppression' :: Maybe Text -> Maybe Mode -> AvailSuppression

-- | A live edge offset time in HH:MM:SS. MediaTailor won't fill ad breaks
--   on or behind this time in the manifest lookback window. If Value is
--   set to 00:00:00, it is in sync with the live edge, and MediaTailor
--   won't fill any ad breaks on or behind the live edge. If you set a
--   Value time, MediaTailor won't fill any ad breaks on or behind this
--   time in the manifest lookback window. For example, if you set
--   00:45:00, then MediaTailor will fill ad breaks that occur within 45
--   minutes behind the live edge, but won't fill ad breaks on or behind 45
--   minutes behind the live edge.
[$sel:value:AvailSuppression'] :: AvailSuppression -> Maybe Text

-- | Sets the ad suppression mode. By default, ad suppression is off and
--   all ad breaks are filled with ads or slate. When Mode is set to
--   BEHIND_LIVE_EDGE, ad suppression is active and MediaTailor won't fill
--   ad breaks on or behind the ad suppression Value time in the manifest
--   lookback window.
[$sel:mode:AvailSuppression'] :: AvailSuppression -> Maybe Mode

-- | Create a value of <a>AvailSuppression</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:AvailSuppression'</a>, <a>availSuppression_value</a> - A
--   live edge offset time in HH:MM:SS. MediaTailor won't fill ad breaks on
--   or behind this time in the manifest lookback window. If Value is set
--   to 00:00:00, it is in sync with the live edge, and MediaTailor won't
--   fill any ad breaks on or behind the live edge. If you set a Value
--   time, MediaTailor won't fill any ad breaks on or behind this time in
--   the manifest lookback window. For example, if you set 00:45:00, then
--   MediaTailor will fill ad breaks that occur within 45 minutes behind
--   the live edge, but won't fill ad breaks on or behind 45 minutes behind
--   the live edge.
--   
--   <a>$sel:mode:AvailSuppression'</a>, <a>availSuppression_mode</a> -
--   Sets the ad suppression mode. By default, ad suppression is off and
--   all ad breaks are filled with ads or slate. When Mode is set to
--   BEHIND_LIVE_EDGE, ad suppression is active and MediaTailor won't fill
--   ad breaks on or behind the ad suppression Value time in the manifest
--   lookback window.
newAvailSuppression :: AvailSuppression

-- | A live edge offset time in HH:MM:SS. MediaTailor won't fill ad breaks
--   on or behind this time in the manifest lookback window. If Value is
--   set to 00:00:00, it is in sync with the live edge, and MediaTailor
--   won't fill any ad breaks on or behind the live edge. If you set a
--   Value time, MediaTailor won't fill any ad breaks on or behind this
--   time in the manifest lookback window. For example, if you set
--   00:45:00, then MediaTailor will fill ad breaks that occur within 45
--   minutes behind the live edge, but won't fill ad breaks on or behind 45
--   minutes behind the live edge.
availSuppression_value :: Lens' AvailSuppression (Maybe Text)

-- | Sets the ad suppression mode. By default, ad suppression is off and
--   all ad breaks are filled with ads or slate. When Mode is set to
--   BEHIND_LIVE_EDGE, ad suppression is active and MediaTailor won't fill
--   ad breaks on or behind the ad suppression Value time in the manifest
--   lookback window.
availSuppression_mode :: Lens' AvailSuppression (Maybe Mode)
instance GHC.Generics.Generic Network.AWS.MediaTailor.Types.AvailSuppression.AvailSuppression
instance GHC.Show.Show Network.AWS.MediaTailor.Types.AvailSuppression.AvailSuppression
instance GHC.Read.Read Network.AWS.MediaTailor.Types.AvailSuppression.AvailSuppression
instance GHC.Classes.Eq Network.AWS.MediaTailor.Types.AvailSuppression.AvailSuppression
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.MediaTailor.Types.AvailSuppression.AvailSuppression
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.Types.AvailSuppression.AvailSuppression
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.Types.AvailSuppression.AvailSuppression
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MediaTailor.Types.AvailSuppression.AvailSuppression


module Network.AWS.MediaTailor.Types.Operator
newtype Operator
Operator' :: Text -> Operator
[fromOperator] :: Operator -> Text
pattern Operator_EQUALS :: Operator
instance Network.AWS.Data.XML.ToXML Network.AWS.MediaTailor.Types.Operator.Operator
instance Network.AWS.Data.XML.FromXML Network.AWS.MediaTailor.Types.Operator.Operator
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.MediaTailor.Types.Operator.Operator
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MediaTailor.Types.Operator.Operator
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.MediaTailor.Types.Operator.Operator
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.MediaTailor.Types.Operator.Operator
instance Network.AWS.Data.Query.ToQuery Network.AWS.MediaTailor.Types.Operator.Operator
instance Network.AWS.Data.Headers.ToHeader Network.AWS.MediaTailor.Types.Operator.Operator
instance Network.AWS.Data.Log.ToLog Network.AWS.MediaTailor.Types.Operator.Operator
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.MediaTailor.Types.Operator.Operator
instance Network.AWS.Data.Text.ToText Network.AWS.MediaTailor.Types.Operator.Operator
instance Network.AWS.Data.Text.FromText Network.AWS.MediaTailor.Types.Operator.Operator
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.Types.Operator.Operator
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.Types.Operator.Operator
instance GHC.Generics.Generic Network.AWS.MediaTailor.Types.Operator.Operator
instance GHC.Classes.Ord Network.AWS.MediaTailor.Types.Operator.Operator
instance GHC.Classes.Eq Network.AWS.MediaTailor.Types.Operator.Operator
instance GHC.Read.Read Network.AWS.MediaTailor.Types.Operator.Operator
instance GHC.Show.Show Network.AWS.MediaTailor.Types.Operator.Operator


module Network.AWS.MediaTailor.Types.AvailMatchingCriteria

-- | MediaTailor only places (consumes) prefetched ads if the ad break
--   meets the criteria defined by the dynamic variables. This gives you
--   granular control over which ad break to place the prefetched ads into.
--   
--   As an example, let's say that you set DynamicVariable to scte.event_id
--   and Operator to EQUALS, and your playback configuration has an ADS URL
--   of
--   https://my.ads.server.com/path?&amp;podId=[scte.avail_num]&amp;event=[scte.event_id]&amp;duration=[session.avail_duration_secs].
--   And the prefetch request to the ADS contains these values
--   https://my.ads.server.com/path?&amp;podId=3&amp;event=my-awesome-event&amp;duration=30.
--   MediaTailor will only insert the prefetched ads into the ad break if
--   has a SCTE marker with an event id of my-awesome-event, since it must
--   match the event id that MediaTailor uses to query the ADS.
--   
--   You can specify up to five AvailMatchingCriteria. If you specify
--   multiple AvailMatchingCriteria, MediaTailor combines them to match
--   using a logical AND. You can model logical OR combinations by creating
--   multiple prefetch schedules.
--   
--   <i>See:</i> <a>newAvailMatchingCriteria</a> smart constructor.
data AvailMatchingCriteria
AvailMatchingCriteria' :: Operator -> Text -> AvailMatchingCriteria

-- | For the DynamicVariable specified in AvailMatchingCriteria, the
--   Operator that is used for the comparison.
[$sel:operator:AvailMatchingCriteria'] :: AvailMatchingCriteria -> Operator

-- | The dynamic variable(s) that MediaTailor should use as avail matching
--   criteria. MediaTailor only places the prefetched ads into the avail if
--   the avail matches the criteria defined by the dynamic variable. For
--   information about dynamic variables, see <a>Using dynamic ad
--   variables</a> in the <i>MediaTailor User Guide</i>.
--   
--   You can include up to 100 dynamic variables.
[$sel:dynamicVariable:AvailMatchingCriteria'] :: AvailMatchingCriteria -> Text

-- | Create a value of <a>AvailMatchingCriteria</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:operator:AvailMatchingCriteria'</a>,
--   <a>availMatchingCriteria_operator</a> - For the DynamicVariable
--   specified in AvailMatchingCriteria, the Operator that is used for the
--   comparison.
--   
--   <a>$sel:dynamicVariable:AvailMatchingCriteria'</a>,
--   <a>availMatchingCriteria_dynamicVariable</a> - The dynamic variable(s)
--   that MediaTailor should use as avail matching criteria. MediaTailor
--   only places the prefetched ads into the avail if the avail matches the
--   criteria defined by the dynamic variable. For information about
--   dynamic variables, see <a>Using dynamic ad variables</a> in the
--   <i>MediaTailor User Guide</i>.
--   
--   You can include up to 100 dynamic variables.
newAvailMatchingCriteria :: Operator -> Text -> AvailMatchingCriteria

-- | For the DynamicVariable specified in AvailMatchingCriteria, the
--   Operator that is used for the comparison.
availMatchingCriteria_operator :: Lens' AvailMatchingCriteria Operator

-- | The dynamic variable(s) that MediaTailor should use as avail matching
--   criteria. MediaTailor only places the prefetched ads into the avail if
--   the avail matches the criteria defined by the dynamic variable. For
--   information about dynamic variables, see <a>Using dynamic ad
--   variables</a> in the <i>MediaTailor User Guide</i>.
--   
--   You can include up to 100 dynamic variables.
availMatchingCriteria_dynamicVariable :: Lens' AvailMatchingCriteria Text
instance GHC.Generics.Generic Network.AWS.MediaTailor.Types.AvailMatchingCriteria.AvailMatchingCriteria
instance GHC.Show.Show Network.AWS.MediaTailor.Types.AvailMatchingCriteria.AvailMatchingCriteria
instance GHC.Read.Read Network.AWS.MediaTailor.Types.AvailMatchingCriteria.AvailMatchingCriteria
instance GHC.Classes.Eq Network.AWS.MediaTailor.Types.AvailMatchingCriteria.AvailMatchingCriteria
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.MediaTailor.Types.AvailMatchingCriteria.AvailMatchingCriteria
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.Types.AvailMatchingCriteria.AvailMatchingCriteria
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.Types.AvailMatchingCriteria.AvailMatchingCriteria
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MediaTailor.Types.AvailMatchingCriteria.AvailMatchingCriteria


module Network.AWS.MediaTailor.Types.OriginManifestType
newtype OriginManifestType
OriginManifestType' :: Text -> OriginManifestType
[fromOriginManifestType] :: OriginManifestType -> Text
pattern OriginManifestType_MULTI_PERIOD :: OriginManifestType
pattern OriginManifestType_SINGLE_PERIOD :: OriginManifestType
instance Network.AWS.Data.XML.ToXML Network.AWS.MediaTailor.Types.OriginManifestType.OriginManifestType
instance Network.AWS.Data.XML.FromXML Network.AWS.MediaTailor.Types.OriginManifestType.OriginManifestType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.MediaTailor.Types.OriginManifestType.OriginManifestType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MediaTailor.Types.OriginManifestType.OriginManifestType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.MediaTailor.Types.OriginManifestType.OriginManifestType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.MediaTailor.Types.OriginManifestType.OriginManifestType
instance Network.AWS.Data.Query.ToQuery Network.AWS.MediaTailor.Types.OriginManifestType.OriginManifestType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.MediaTailor.Types.OriginManifestType.OriginManifestType
instance Network.AWS.Data.Log.ToLog Network.AWS.MediaTailor.Types.OriginManifestType.OriginManifestType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.MediaTailor.Types.OriginManifestType.OriginManifestType
instance Network.AWS.Data.Text.ToText Network.AWS.MediaTailor.Types.OriginManifestType.OriginManifestType
instance Network.AWS.Data.Text.FromText Network.AWS.MediaTailor.Types.OriginManifestType.OriginManifestType
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.Types.OriginManifestType.OriginManifestType
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.Types.OriginManifestType.OriginManifestType
instance GHC.Generics.Generic Network.AWS.MediaTailor.Types.OriginManifestType.OriginManifestType
instance GHC.Classes.Ord Network.AWS.MediaTailor.Types.OriginManifestType.OriginManifestType
instance GHC.Classes.Eq Network.AWS.MediaTailor.Types.OriginManifestType.OriginManifestType
instance GHC.Read.Read Network.AWS.MediaTailor.Types.OriginManifestType.OriginManifestType
instance GHC.Show.Show Network.AWS.MediaTailor.Types.OriginManifestType.OriginManifestType


module Network.AWS.MediaTailor.Types.DashConfigurationForPut

-- | The configuration for DASH PUT operations.
--   
--   <i>See:</i> <a>newDashConfigurationForPut</a> smart constructor.
data DashConfigurationForPut
DashConfigurationForPut' :: Maybe OriginManifestType -> Maybe Text -> DashConfigurationForPut

-- | The setting that controls whether MediaTailor handles manifests from
--   the origin server as multi-period manifests or single-period
--   manifests. If your origin server produces single-period manifests, set
--   this to SINGLE_PERIOD. The default setting is MULTI_PERIOD. For
--   multi-period manifests, omit this setting or set it to MULTI_PERIOD.
[$sel:originManifestType:DashConfigurationForPut'] :: DashConfigurationForPut -> Maybe OriginManifestType

-- | The setting that controls whether MediaTailor includes the Location
--   tag in DASH manifests. MediaTailor populates the Location tag with the
--   URL for manifest update requests, to be used by players that don't
--   support sticky redirects. Disable this if you have CDN routing rules
--   set up for accessing MediaTailor manifests, and you are either using
--   client-side reporting or your players support sticky HTTP redirects.
--   Valid values are DISABLED and EMT_DEFAULT. The EMT_DEFAULT setting
--   enables the inclusion of the tag and is the default value.
[$sel:mpdLocation:DashConfigurationForPut'] :: DashConfigurationForPut -> Maybe Text

-- | Create a value of <a>DashConfigurationForPut</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:originManifestType:DashConfigurationForPut'</a>,
--   <a>dashConfigurationForPut_originManifestType</a> - The setting that
--   controls whether MediaTailor handles manifests from the origin server
--   as multi-period manifests or single-period manifests. If your origin
--   server produces single-period manifests, set this to SINGLE_PERIOD.
--   The default setting is MULTI_PERIOD. For multi-period manifests, omit
--   this setting or set it to MULTI_PERIOD.
--   
--   <a>$sel:mpdLocation:DashConfigurationForPut'</a>,
--   <a>dashConfigurationForPut_mpdLocation</a> - The setting that controls
--   whether MediaTailor includes the Location tag in DASH manifests.
--   MediaTailor populates the Location tag with the URL for manifest
--   update requests, to be used by players that don't support sticky
--   redirects. Disable this if you have CDN routing rules set up for
--   accessing MediaTailor manifests, and you are either using client-side
--   reporting or your players support sticky HTTP redirects. Valid values
--   are DISABLED and EMT_DEFAULT. The EMT_DEFAULT setting enables the
--   inclusion of the tag and is the default value.
newDashConfigurationForPut :: DashConfigurationForPut

-- | The setting that controls whether MediaTailor handles manifests from
--   the origin server as multi-period manifests or single-period
--   manifests. If your origin server produces single-period manifests, set
--   this to SINGLE_PERIOD. The default setting is MULTI_PERIOD. For
--   multi-period manifests, omit this setting or set it to MULTI_PERIOD.
dashConfigurationForPut_originManifestType :: Lens' DashConfigurationForPut (Maybe OriginManifestType)

-- | The setting that controls whether MediaTailor includes the Location
--   tag in DASH manifests. MediaTailor populates the Location tag with the
--   URL for manifest update requests, to be used by players that don't
--   support sticky redirects. Disable this if you have CDN routing rules
--   set up for accessing MediaTailor manifests, and you are either using
--   client-side reporting or your players support sticky HTTP redirects.
--   Valid values are DISABLED and EMT_DEFAULT. The EMT_DEFAULT setting
--   enables the inclusion of the tag and is the default value.
dashConfigurationForPut_mpdLocation :: Lens' DashConfigurationForPut (Maybe Text)
instance GHC.Generics.Generic Network.AWS.MediaTailor.Types.DashConfigurationForPut.DashConfigurationForPut
instance GHC.Show.Show Network.AWS.MediaTailor.Types.DashConfigurationForPut.DashConfigurationForPut
instance GHC.Read.Read Network.AWS.MediaTailor.Types.DashConfigurationForPut.DashConfigurationForPut
instance GHC.Classes.Eq Network.AWS.MediaTailor.Types.DashConfigurationForPut.DashConfigurationForPut
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.Types.DashConfigurationForPut.DashConfigurationForPut
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.Types.DashConfigurationForPut.DashConfigurationForPut
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MediaTailor.Types.DashConfigurationForPut.DashConfigurationForPut


module Network.AWS.MediaTailor.Types.DashConfiguration

-- | The configuration for DASH content.
--   
--   <i>See:</i> <a>newDashConfiguration</a> smart constructor.
data DashConfiguration
DashConfiguration' :: Maybe Text -> Maybe OriginManifestType -> Maybe Text -> DashConfiguration

-- | The URL generated by MediaTailor to initiate a playback session. The
--   session uses server-side reporting. This setting is ignored in PUT
--   operations.
[$sel:manifestEndpointPrefix:DashConfiguration'] :: DashConfiguration -> Maybe Text

-- | The setting that controls whether MediaTailor handles manifests from
--   the origin server as multi-period manifests or single-period
--   manifests. If your origin server produces single-period manifests, set
--   this to SINGLE_PERIOD. The default setting is MULTI_PERIOD. For
--   multi-period manifests, omit this setting or set it to MULTI_PERIOD.
[$sel:originManifestType:DashConfiguration'] :: DashConfiguration -> Maybe OriginManifestType

-- | The setting that controls whether MediaTailor includes the Location
--   tag in DASH manifests. MediaTailor populates the Location tag with the
--   URL for manifest update requests, to be used by players that don't
--   support sticky redirects. Disable this if you have CDN routing rules
--   set up for accessing MediaTailor manifests, and you are either using
--   client-side reporting or your players support sticky HTTP redirects.
--   Valid values are DISABLED and EMT_DEFAULT. The EMT_DEFAULT setting
--   enables the inclusion of the tag and is the default value.
[$sel:mpdLocation:DashConfiguration'] :: DashConfiguration -> Maybe Text

-- | Create a value of <a>DashConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:manifestEndpointPrefix:DashConfiguration'</a>,
--   <a>dashConfiguration_manifestEndpointPrefix</a> - The URL generated by
--   MediaTailor to initiate a playback session. The session uses
--   server-side reporting. This setting is ignored in PUT operations.
--   
--   <a>$sel:originManifestType:DashConfiguration'</a>,
--   <a>dashConfiguration_originManifestType</a> - The setting that
--   controls whether MediaTailor handles manifests from the origin server
--   as multi-period manifests or single-period manifests. If your origin
--   server produces single-period manifests, set this to SINGLE_PERIOD.
--   The default setting is MULTI_PERIOD. For multi-period manifests, omit
--   this setting or set it to MULTI_PERIOD.
--   
--   <a>$sel:mpdLocation:DashConfiguration'</a>,
--   <a>dashConfiguration_mpdLocation</a> - The setting that controls
--   whether MediaTailor includes the Location tag in DASH manifests.
--   MediaTailor populates the Location tag with the URL for manifest
--   update requests, to be used by players that don't support sticky
--   redirects. Disable this if you have CDN routing rules set up for
--   accessing MediaTailor manifests, and you are either using client-side
--   reporting or your players support sticky HTTP redirects. Valid values
--   are DISABLED and EMT_DEFAULT. The EMT_DEFAULT setting enables the
--   inclusion of the tag and is the default value.
newDashConfiguration :: DashConfiguration

-- | The URL generated by MediaTailor to initiate a playback session. The
--   session uses server-side reporting. This setting is ignored in PUT
--   operations.
dashConfiguration_manifestEndpointPrefix :: Lens' DashConfiguration (Maybe Text)

-- | The setting that controls whether MediaTailor handles manifests from
--   the origin server as multi-period manifests or single-period
--   manifests. If your origin server produces single-period manifests, set
--   this to SINGLE_PERIOD. The default setting is MULTI_PERIOD. For
--   multi-period manifests, omit this setting or set it to MULTI_PERIOD.
dashConfiguration_originManifestType :: Lens' DashConfiguration (Maybe OriginManifestType)

-- | The setting that controls whether MediaTailor includes the Location
--   tag in DASH manifests. MediaTailor populates the Location tag with the
--   URL for manifest update requests, to be used by players that don't
--   support sticky redirects. Disable this if you have CDN routing rules
--   set up for accessing MediaTailor manifests, and you are either using
--   client-side reporting or your players support sticky HTTP redirects.
--   Valid values are DISABLED and EMT_DEFAULT. The EMT_DEFAULT setting
--   enables the inclusion of the tag and is the default value.
dashConfiguration_mpdLocation :: Lens' DashConfiguration (Maybe Text)
instance GHC.Generics.Generic Network.AWS.MediaTailor.Types.DashConfiguration.DashConfiguration
instance GHC.Show.Show Network.AWS.MediaTailor.Types.DashConfiguration.DashConfiguration
instance GHC.Read.Read Network.AWS.MediaTailor.Types.DashConfiguration.DashConfiguration
instance GHC.Classes.Eq Network.AWS.MediaTailor.Types.DashConfiguration.DashConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.MediaTailor.Types.DashConfiguration.DashConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.Types.DashConfiguration.DashConfiguration
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.Types.DashConfiguration.DashConfiguration


module Network.AWS.MediaTailor.Types.PlaybackConfiguration

-- | Creates a playback configuration. For information about MediaTailor
--   configurations, see <a>Working with configurations in AWS Elemental
--   MediaTailor</a>.
--   
--   <i>See:</i> <a>newPlaybackConfiguration</a> smart constructor.
data PlaybackConfiguration
PlaybackConfiguration' :: Maybe Text -> Maybe HlsConfiguration -> Maybe Natural -> Maybe Text -> Maybe AvailSuppression -> Maybe Bumper -> Maybe Text -> Maybe Text -> Maybe DashConfiguration -> Maybe ManifestProcessingRules -> Maybe LogConfiguration -> Maybe LivePreRollConfiguration -> Maybe Text -> Maybe Text -> Maybe (HashMap Text (HashMap Text Text)) -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe CdnConfiguration -> PlaybackConfiguration

-- | The URL that the player accesses to get a manifest from AWS Elemental
--   MediaTailor.
[$sel:playbackEndpointPrefix:PlaybackConfiguration'] :: PlaybackConfiguration -> Maybe Text

-- | The configuration for HLS content.
[$sel:hlsConfiguration:PlaybackConfiguration'] :: PlaybackConfiguration -> Maybe HlsConfiguration

-- | Defines the maximum duration of underfilled ad time (in seconds)
--   allowed in an ad break. If the duration of underfilled ad time exceeds
--   the personalization threshold, then the personalization of the ad
--   break is abandoned and the underlying content is shown. This feature
--   applies to <i>ad replacement</i> in live and VOD streams, rather than
--   ad insertion, because it relies on an underlying content stream. For
--   more information about ad break behavior, including ad replacement and
--   insertion, see <a>Ad Behavior in AWS Elemental MediaTailor</a>.
[$sel:personalizationThresholdSeconds:PlaybackConfiguration'] :: PlaybackConfiguration -> Maybe Natural

-- | The Amazon Resource Name (ARN) for the playback configuration.
[$sel:playbackConfigurationArn:PlaybackConfiguration'] :: PlaybackConfiguration -> Maybe Text

-- | The configuration for avail suppression, also known as ad suppression.
--   For more information about ad suppression, see <a>Ad Suppression</a>.
[$sel:availSuppression:PlaybackConfiguration'] :: PlaybackConfiguration -> Maybe AvailSuppression

-- | The configuration for bumpers. Bumpers are short audio or video clips
--   that play at the start or before the end of an ad break. To learn more
--   about bumpers, see <a>Bumpers</a>.
[$sel:bumper:PlaybackConfiguration'] :: PlaybackConfiguration -> Maybe Bumper

-- | The URL for the ad decision server (ADS). This includes the
--   specification of static parameters and placeholders for dynamic
--   parameters. AWS Elemental MediaTailor substitutes player-specific and
--   session-specific parameters as needed when calling the ADS.
--   Alternately, for testing you can provide a static VAST URL. The
--   maximum length is 25,000 characters.
[$sel:adDecisionServerUrl:PlaybackConfiguration'] :: PlaybackConfiguration -> Maybe Text

-- | The URL prefix for the parent manifest for the stream, minus the asset
--   ID. The maximum length is 512 characters.
[$sel:videoContentSourceUrl:PlaybackConfiguration'] :: PlaybackConfiguration -> Maybe Text

-- | The configuration for a DASH source.
[$sel:dashConfiguration:PlaybackConfiguration'] :: PlaybackConfiguration -> Maybe DashConfiguration

-- | The configuration for manifest processing rules. Manifest processing
--   rules enable customization of the personalized manifests created by
--   MediaTailor.
[$sel:manifestProcessingRules:PlaybackConfiguration'] :: PlaybackConfiguration -> Maybe ManifestProcessingRules

-- | The Amazon CloudWatch log settings for a playback configuration.
[$sel:logConfiguration:PlaybackConfiguration'] :: PlaybackConfiguration -> Maybe LogConfiguration

-- | The configuration for pre-roll ad insertion.
[$sel:livePreRollConfiguration:PlaybackConfiguration'] :: PlaybackConfiguration -> Maybe LivePreRollConfiguration

-- | The identifier for the playback configuration.
[$sel:name:PlaybackConfiguration'] :: PlaybackConfiguration -> Maybe Text

-- | The URL that the player uses to initialize a session that uses
--   client-side reporting.
[$sel:sessionInitializationEndpointPrefix:PlaybackConfiguration'] :: PlaybackConfiguration -> Maybe Text

-- | The player parameters and aliases used as dynamic variables during
--   session initialization. For more information, see <a>Domain
--   Variables</a>.
[$sel:configurationAliases:PlaybackConfiguration'] :: PlaybackConfiguration -> Maybe (HashMap Text (HashMap Text Text))

-- | The name that is used to associate this playback configuration with a
--   custom transcode profile. This overrides the dynamic transcoding
--   defaults of MediaTailor. Use this only if you have already set up
--   custom profiles with the help of AWS Support.
[$sel:transcodeProfileName:PlaybackConfiguration'] :: PlaybackConfiguration -> Maybe Text

-- | The tags to assign to the playback configuration.
[$sel:tags:PlaybackConfiguration'] :: PlaybackConfiguration -> Maybe (HashMap Text Text)

-- | The URL for a video asset to transcode and use to fill in time that's
--   not used by ads. AWS Elemental MediaTailor shows the slate to fill in
--   gaps in media content. Configuring the slate is optional for non-VPAID
--   playback configurations. For VPAID, the slate is required because
--   MediaTailor provides it in the slots designated for dynamic ad
--   content. The slate must be a high-quality asset that contains both
--   audio and video.
[$sel:slateAdUrl:PlaybackConfiguration'] :: PlaybackConfiguration -> Maybe Text

-- | The configuration for using a content delivery network (CDN), like
--   Amazon CloudFront, for content and ad segment management.
[$sel:cdnConfiguration:PlaybackConfiguration'] :: PlaybackConfiguration -> Maybe CdnConfiguration

-- | Create a value of <a>PlaybackConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:playbackEndpointPrefix:PlaybackConfiguration'</a>,
--   <a>playbackConfiguration_playbackEndpointPrefix</a> - The URL that the
--   player accesses to get a manifest from AWS Elemental MediaTailor.
--   
--   <a>$sel:hlsConfiguration:PlaybackConfiguration'</a>,
--   <a>playbackConfiguration_hlsConfiguration</a> - The configuration for
--   HLS content.
--   
--   <a>$sel:personalizationThresholdSeconds:PlaybackConfiguration'</a>,
--   <a>playbackConfiguration_personalizationThresholdSeconds</a> - Defines
--   the maximum duration of underfilled ad time (in seconds) allowed in an
--   ad break. If the duration of underfilled ad time exceeds the
--   personalization threshold, then the personalization of the ad break is
--   abandoned and the underlying content is shown. This feature applies to
--   <i>ad replacement</i> in live and VOD streams, rather than ad
--   insertion, because it relies on an underlying content stream. For more
--   information about ad break behavior, including ad replacement and
--   insertion, see <a>Ad Behavior in AWS Elemental MediaTailor</a>.
--   
--   <a>$sel:playbackConfigurationArn:PlaybackConfiguration'</a>,
--   <a>playbackConfiguration_playbackConfigurationArn</a> - The Amazon
--   Resource Name (ARN) for the playback configuration.
--   
--   <a>$sel:availSuppression:PlaybackConfiguration'</a>,
--   <a>playbackConfiguration_availSuppression</a> - The configuration for
--   avail suppression, also known as ad suppression. For more information
--   about ad suppression, see <a>Ad Suppression</a>.
--   
--   <a>$sel:bumper:PlaybackConfiguration'</a>,
--   <a>playbackConfiguration_bumper</a> - The configuration for bumpers.
--   Bumpers are short audio or video clips that play at the start or
--   before the end of an ad break. To learn more about bumpers, see
--   <a>Bumpers</a>.
--   
--   <a>$sel:adDecisionServerUrl:PlaybackConfiguration'</a>,
--   <a>playbackConfiguration_adDecisionServerUrl</a> - The URL for the ad
--   decision server (ADS). This includes the specification of static
--   parameters and placeholders for dynamic parameters. AWS Elemental
--   MediaTailor substitutes player-specific and session-specific
--   parameters as needed when calling the ADS. Alternately, for testing
--   you can provide a static VAST URL. The maximum length is 25,000
--   characters.
--   
--   <a>$sel:videoContentSourceUrl:PlaybackConfiguration'</a>,
--   <a>playbackConfiguration_videoContentSourceUrl</a> - The URL prefix
--   for the parent manifest for the stream, minus the asset ID. The
--   maximum length is 512 characters.
--   
--   <a>$sel:dashConfiguration:PlaybackConfiguration'</a>,
--   <a>playbackConfiguration_dashConfiguration</a> - The configuration for
--   a DASH source.
--   
--   <a>$sel:manifestProcessingRules:PlaybackConfiguration'</a>,
--   <a>playbackConfiguration_manifestProcessingRules</a> - The
--   configuration for manifest processing rules. Manifest processing rules
--   enable customization of the personalized manifests created by
--   MediaTailor.
--   
--   <a>$sel:logConfiguration:PlaybackConfiguration'</a>,
--   <a>playbackConfiguration_logConfiguration</a> - The Amazon CloudWatch
--   log settings for a playback configuration.
--   
--   <a>$sel:livePreRollConfiguration:PlaybackConfiguration'</a>,
--   <a>playbackConfiguration_livePreRollConfiguration</a> - The
--   configuration for pre-roll ad insertion.
--   
--   <a>$sel:name:PlaybackConfiguration'</a>,
--   <a>playbackConfiguration_name</a> - The identifier for the playback
--   configuration.
--   
--   
--   <a>$sel:sessionInitializationEndpointPrefix:PlaybackConfiguration'</a>,
--   <a>playbackConfiguration_sessionInitializationEndpointPrefix</a> - The
--   URL that the player uses to initialize a session that uses client-side
--   reporting.
--   
--   <a>$sel:configurationAliases:PlaybackConfiguration'</a>,
--   <a>playbackConfiguration_configurationAliases</a> - The player
--   parameters and aliases used as dynamic variables during session
--   initialization. For more information, see <a>Domain Variables</a>.
--   
--   <a>$sel:transcodeProfileName:PlaybackConfiguration'</a>,
--   <a>playbackConfiguration_transcodeProfileName</a> - The name that is
--   used to associate this playback configuration with a custom transcode
--   profile. This overrides the dynamic transcoding defaults of
--   MediaTailor. Use this only if you have already set up custom profiles
--   with the help of AWS Support.
--   
--   <a>$sel:tags:PlaybackConfiguration'</a>,
--   <a>playbackConfiguration_tags</a> - The tags to assign to the playback
--   configuration.
--   
--   <a>$sel:slateAdUrl:PlaybackConfiguration'</a>,
--   <a>playbackConfiguration_slateAdUrl</a> - The URL for a video asset to
--   transcode and use to fill in time that's not used by ads. AWS
--   Elemental MediaTailor shows the slate to fill in gaps in media
--   content. Configuring the slate is optional for non-VPAID playback
--   configurations. For VPAID, the slate is required because MediaTailor
--   provides it in the slots designated for dynamic ad content. The slate
--   must be a high-quality asset that contains both audio and video.
--   
--   <a>$sel:cdnConfiguration:PlaybackConfiguration'</a>,
--   <a>playbackConfiguration_cdnConfiguration</a> - The configuration for
--   using a content delivery network (CDN), like Amazon CloudFront, for
--   content and ad segment management.
newPlaybackConfiguration :: PlaybackConfiguration

-- | The URL that the player accesses to get a manifest from AWS Elemental
--   MediaTailor.
playbackConfiguration_playbackEndpointPrefix :: Lens' PlaybackConfiguration (Maybe Text)

-- | The configuration for HLS content.
playbackConfiguration_hlsConfiguration :: Lens' PlaybackConfiguration (Maybe HlsConfiguration)

-- | Defines the maximum duration of underfilled ad time (in seconds)
--   allowed in an ad break. If the duration of underfilled ad time exceeds
--   the personalization threshold, then the personalization of the ad
--   break is abandoned and the underlying content is shown. This feature
--   applies to <i>ad replacement</i> in live and VOD streams, rather than
--   ad insertion, because it relies on an underlying content stream. For
--   more information about ad break behavior, including ad replacement and
--   insertion, see <a>Ad Behavior in AWS Elemental MediaTailor</a>.
playbackConfiguration_personalizationThresholdSeconds :: Lens' PlaybackConfiguration (Maybe Natural)

-- | The Amazon Resource Name (ARN) for the playback configuration.
playbackConfiguration_playbackConfigurationArn :: Lens' PlaybackConfiguration (Maybe Text)

-- | The configuration for avail suppression, also known as ad suppression.
--   For more information about ad suppression, see <a>Ad Suppression</a>.
playbackConfiguration_availSuppression :: Lens' PlaybackConfiguration (Maybe AvailSuppression)

-- | The configuration for bumpers. Bumpers are short audio or video clips
--   that play at the start or before the end of an ad break. To learn more
--   about bumpers, see <a>Bumpers</a>.
playbackConfiguration_bumper :: Lens' PlaybackConfiguration (Maybe Bumper)

-- | The URL for the ad decision server (ADS). This includes the
--   specification of static parameters and placeholders for dynamic
--   parameters. AWS Elemental MediaTailor substitutes player-specific and
--   session-specific parameters as needed when calling the ADS.
--   Alternately, for testing you can provide a static VAST URL. The
--   maximum length is 25,000 characters.
playbackConfiguration_adDecisionServerUrl :: Lens' PlaybackConfiguration (Maybe Text)

-- | The URL prefix for the parent manifest for the stream, minus the asset
--   ID. The maximum length is 512 characters.
playbackConfiguration_videoContentSourceUrl :: Lens' PlaybackConfiguration (Maybe Text)

-- | The configuration for a DASH source.
playbackConfiguration_dashConfiguration :: Lens' PlaybackConfiguration (Maybe DashConfiguration)

-- | The configuration for manifest processing rules. Manifest processing
--   rules enable customization of the personalized manifests created by
--   MediaTailor.
playbackConfiguration_manifestProcessingRules :: Lens' PlaybackConfiguration (Maybe ManifestProcessingRules)

-- | The Amazon CloudWatch log settings for a playback configuration.
playbackConfiguration_logConfiguration :: Lens' PlaybackConfiguration (Maybe LogConfiguration)

-- | The configuration for pre-roll ad insertion.
playbackConfiguration_livePreRollConfiguration :: Lens' PlaybackConfiguration (Maybe LivePreRollConfiguration)

-- | The identifier for the playback configuration.
playbackConfiguration_name :: Lens' PlaybackConfiguration (Maybe Text)

-- | The URL that the player uses to initialize a session that uses
--   client-side reporting.
playbackConfiguration_sessionInitializationEndpointPrefix :: Lens' PlaybackConfiguration (Maybe Text)

-- | The player parameters and aliases used as dynamic variables during
--   session initialization. For more information, see <a>Domain
--   Variables</a>.
playbackConfiguration_configurationAliases :: Lens' PlaybackConfiguration (Maybe (HashMap Text (HashMap Text Text)))

-- | The name that is used to associate this playback configuration with a
--   custom transcode profile. This overrides the dynamic transcoding
--   defaults of MediaTailor. Use this only if you have already set up
--   custom profiles with the help of AWS Support.
playbackConfiguration_transcodeProfileName :: Lens' PlaybackConfiguration (Maybe Text)

-- | The tags to assign to the playback configuration.
playbackConfiguration_tags :: Lens' PlaybackConfiguration (Maybe (HashMap Text Text))

-- | The URL for a video asset to transcode and use to fill in time that's
--   not used by ads. AWS Elemental MediaTailor shows the slate to fill in
--   gaps in media content. Configuring the slate is optional for non-VPAID
--   playback configurations. For VPAID, the slate is required because
--   MediaTailor provides it in the slots designated for dynamic ad
--   content. The slate must be a high-quality asset that contains both
--   audio and video.
playbackConfiguration_slateAdUrl :: Lens' PlaybackConfiguration (Maybe Text)

-- | The configuration for using a content delivery network (CDN), like
--   Amazon CloudFront, for content and ad segment management.
playbackConfiguration_cdnConfiguration :: Lens' PlaybackConfiguration (Maybe CdnConfiguration)
instance GHC.Generics.Generic Network.AWS.MediaTailor.Types.PlaybackConfiguration.PlaybackConfiguration
instance GHC.Show.Show Network.AWS.MediaTailor.Types.PlaybackConfiguration.PlaybackConfiguration
instance GHC.Read.Read Network.AWS.MediaTailor.Types.PlaybackConfiguration.PlaybackConfiguration
instance GHC.Classes.Eq Network.AWS.MediaTailor.Types.PlaybackConfiguration.PlaybackConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.MediaTailor.Types.PlaybackConfiguration.PlaybackConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.Types.PlaybackConfiguration.PlaybackConfiguration
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.Types.PlaybackConfiguration.PlaybackConfiguration


module Network.AWS.MediaTailor.Types.PlaybackMode
newtype PlaybackMode
PlaybackMode' :: Text -> PlaybackMode
[fromPlaybackMode] :: PlaybackMode -> Text
pattern PlaybackMode_LINEAR :: PlaybackMode
pattern PlaybackMode_LOOP :: PlaybackMode
instance Network.AWS.Data.XML.ToXML Network.AWS.MediaTailor.Types.PlaybackMode.PlaybackMode
instance Network.AWS.Data.XML.FromXML Network.AWS.MediaTailor.Types.PlaybackMode.PlaybackMode
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.MediaTailor.Types.PlaybackMode.PlaybackMode
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MediaTailor.Types.PlaybackMode.PlaybackMode
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.MediaTailor.Types.PlaybackMode.PlaybackMode
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.MediaTailor.Types.PlaybackMode.PlaybackMode
instance Network.AWS.Data.Query.ToQuery Network.AWS.MediaTailor.Types.PlaybackMode.PlaybackMode
instance Network.AWS.Data.Headers.ToHeader Network.AWS.MediaTailor.Types.PlaybackMode.PlaybackMode
instance Network.AWS.Data.Log.ToLog Network.AWS.MediaTailor.Types.PlaybackMode.PlaybackMode
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.MediaTailor.Types.PlaybackMode.PlaybackMode
instance Network.AWS.Data.Text.ToText Network.AWS.MediaTailor.Types.PlaybackMode.PlaybackMode
instance Network.AWS.Data.Text.FromText Network.AWS.MediaTailor.Types.PlaybackMode.PlaybackMode
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.Types.PlaybackMode.PlaybackMode
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.Types.PlaybackMode.PlaybackMode
instance GHC.Generics.Generic Network.AWS.MediaTailor.Types.PlaybackMode.PlaybackMode
instance GHC.Classes.Ord Network.AWS.MediaTailor.Types.PlaybackMode.PlaybackMode
instance GHC.Classes.Eq Network.AWS.MediaTailor.Types.PlaybackMode.PlaybackMode
instance GHC.Read.Read Network.AWS.MediaTailor.Types.PlaybackMode.PlaybackMode
instance GHC.Show.Show Network.AWS.MediaTailor.Types.PlaybackMode.PlaybackMode


module Network.AWS.MediaTailor.Types.PrefetchConsumption

-- | A complex type that contains settings that determine how and when that
--   MediaTailor places prefetched ads into upcoming ad breaks.
--   
--   <i>See:</i> <a>newPrefetchConsumption</a> smart constructor.
data PrefetchConsumption
PrefetchConsumption' :: Maybe POSIX -> Maybe [AvailMatchingCriteria] -> POSIX -> PrefetchConsumption

-- | The time when prefetched ads are considered for use in an ad break. If
--   you don't specify StartTime, the prefetched ads are available after
--   MediaTailor retrives them from the ad decision server.
[$sel:startTime:PrefetchConsumption'] :: PrefetchConsumption -> Maybe POSIX

-- | If you only want MediaTailor to insert prefetched ads into avails (ad
--   breaks) that match specific dynamic variables, such as scte.event_id,
--   set the avail matching criteria.
[$sel:availMatchingCriteria:PrefetchConsumption'] :: PrefetchConsumption -> Maybe [AvailMatchingCriteria]

-- | The time when MediaTailor no longer considers the prefetched ads for
--   use in an ad break. MediaTailor automatically deletes prefetch
--   schedules no less than seven days after the end time. If you'd like to
--   manually delete the prefetch schedule, you can call
--   DeletePrefetchSchedule.
[$sel:endTime:PrefetchConsumption'] :: PrefetchConsumption -> POSIX

-- | Create a value of <a>PrefetchConsumption</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:startTime:PrefetchConsumption'</a>,
--   <a>prefetchConsumption_startTime</a> - The time when prefetched ads
--   are considered for use in an ad break. If you don't specify StartTime,
--   the prefetched ads are available after MediaTailor retrives them from
--   the ad decision server.
--   
--   <a>$sel:availMatchingCriteria:PrefetchConsumption'</a>,
--   <a>prefetchConsumption_availMatchingCriteria</a> - If you only want
--   MediaTailor to insert prefetched ads into avails (ad breaks) that
--   match specific dynamic variables, such as scte.event_id, set the avail
--   matching criteria.
--   
--   <a>$sel:endTime:PrefetchConsumption'</a>,
--   <a>prefetchConsumption_endTime</a> - The time when MediaTailor no
--   longer considers the prefetched ads for use in an ad break.
--   MediaTailor automatically deletes prefetch schedules no less than
--   seven days after the end time. If you'd like to manually delete the
--   prefetch schedule, you can call DeletePrefetchSchedule.
newPrefetchConsumption :: UTCTime -> PrefetchConsumption

-- | The time when prefetched ads are considered for use in an ad break. If
--   you don't specify StartTime, the prefetched ads are available after
--   MediaTailor retrives them from the ad decision server.
prefetchConsumption_startTime :: Lens' PrefetchConsumption (Maybe UTCTime)

-- | If you only want MediaTailor to insert prefetched ads into avails (ad
--   breaks) that match specific dynamic variables, such as scte.event_id,
--   set the avail matching criteria.
prefetchConsumption_availMatchingCriteria :: Lens' PrefetchConsumption (Maybe [AvailMatchingCriteria])

-- | The time when MediaTailor no longer considers the prefetched ads for
--   use in an ad break. MediaTailor automatically deletes prefetch
--   schedules no less than seven days after the end time. If you'd like to
--   manually delete the prefetch schedule, you can call
--   DeletePrefetchSchedule.
prefetchConsumption_endTime :: Lens' PrefetchConsumption UTCTime
instance GHC.Generics.Generic Network.AWS.MediaTailor.Types.PrefetchConsumption.PrefetchConsumption
instance GHC.Show.Show Network.AWS.MediaTailor.Types.PrefetchConsumption.PrefetchConsumption
instance GHC.Read.Read Network.AWS.MediaTailor.Types.PrefetchConsumption.PrefetchConsumption
instance GHC.Classes.Eq Network.AWS.MediaTailor.Types.PrefetchConsumption.PrefetchConsumption
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.MediaTailor.Types.PrefetchConsumption.PrefetchConsumption
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.Types.PrefetchConsumption.PrefetchConsumption
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.Types.PrefetchConsumption.PrefetchConsumption
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MediaTailor.Types.PrefetchConsumption.PrefetchConsumption


module Network.AWS.MediaTailor.Types.PrefetchRetrieval

-- | A complex type that contains settings governing when MediaTailor
--   prefetches ads, and which dynamic variables that MediaTailor includes
--   in the request to the ad decision server.
--   
--   <i>See:</i> <a>newPrefetchRetrieval</a> smart constructor.
data PrefetchRetrieval
PrefetchRetrieval' :: Maybe POSIX -> Maybe (HashMap Text Text) -> POSIX -> PrefetchRetrieval

-- | The time when prefetch retrievals can start for this break. Ad
--   prefetching will be attempted for manifest requests that occur at or
--   after this time. Defaults to the current time. If not specified, the
--   prefetch retrieval starts as soon as possible.
[$sel:startTime:PrefetchRetrieval'] :: PrefetchRetrieval -> Maybe POSIX

-- | The dynamic variables to use for substitution during prefetch requests
--   to the ad decision server (ADS).
--   
--   You intially configure <a>dynamic variables</a> for the ADS URL when
--   you set up your playback configuration. When you specify
--   DynamicVariables for prefetch retrieval, MediaTailor includes the
--   dynamic variables in the request to the ADS.
[$sel:dynamicVariables:PrefetchRetrieval'] :: PrefetchRetrieval -> Maybe (HashMap Text Text)

-- | The time when prefetch retrieval ends for the ad break. Prefetching
--   will be attempted for manifest requests that occur at or before this
--   time.
[$sel:endTime:PrefetchRetrieval'] :: PrefetchRetrieval -> POSIX

-- | Create a value of <a>PrefetchRetrieval</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:startTime:PrefetchRetrieval'</a>,
--   <a>prefetchRetrieval_startTime</a> - The time when prefetch retrievals
--   can start for this break. Ad prefetching will be attempted for
--   manifest requests that occur at or after this time. Defaults to the
--   current time. If not specified, the prefetch retrieval starts as soon
--   as possible.
--   
--   <a>$sel:dynamicVariables:PrefetchRetrieval'</a>,
--   <a>prefetchRetrieval_dynamicVariables</a> - The dynamic variables to
--   use for substitution during prefetch requests to the ad decision
--   server (ADS).
--   
--   You intially configure <a>dynamic variables</a> for the ADS URL when
--   you set up your playback configuration. When you specify
--   DynamicVariables for prefetch retrieval, MediaTailor includes the
--   dynamic variables in the request to the ADS.
--   
--   <a>$sel:endTime:PrefetchRetrieval'</a>,
--   <a>prefetchRetrieval_endTime</a> - The time when prefetch retrieval
--   ends for the ad break. Prefetching will be attempted for manifest
--   requests that occur at or before this time.
newPrefetchRetrieval :: UTCTime -> PrefetchRetrieval

-- | The time when prefetch retrievals can start for this break. Ad
--   prefetching will be attempted for manifest requests that occur at or
--   after this time. Defaults to the current time. If not specified, the
--   prefetch retrieval starts as soon as possible.
prefetchRetrieval_startTime :: Lens' PrefetchRetrieval (Maybe UTCTime)

-- | The dynamic variables to use for substitution during prefetch requests
--   to the ad decision server (ADS).
--   
--   You intially configure <a>dynamic variables</a> for the ADS URL when
--   you set up your playback configuration. When you specify
--   DynamicVariables for prefetch retrieval, MediaTailor includes the
--   dynamic variables in the request to the ADS.
prefetchRetrieval_dynamicVariables :: Lens' PrefetchRetrieval (Maybe (HashMap Text Text))

-- | The time when prefetch retrieval ends for the ad break. Prefetching
--   will be attempted for manifest requests that occur at or before this
--   time.
prefetchRetrieval_endTime :: Lens' PrefetchRetrieval UTCTime
instance GHC.Generics.Generic Network.AWS.MediaTailor.Types.PrefetchRetrieval.PrefetchRetrieval
instance GHC.Show.Show Network.AWS.MediaTailor.Types.PrefetchRetrieval.PrefetchRetrieval
instance GHC.Read.Read Network.AWS.MediaTailor.Types.PrefetchRetrieval.PrefetchRetrieval
instance GHC.Classes.Eq Network.AWS.MediaTailor.Types.PrefetchRetrieval.PrefetchRetrieval
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.MediaTailor.Types.PrefetchRetrieval.PrefetchRetrieval
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.Types.PrefetchRetrieval.PrefetchRetrieval
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.Types.PrefetchRetrieval.PrefetchRetrieval
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MediaTailor.Types.PrefetchRetrieval.PrefetchRetrieval


module Network.AWS.MediaTailor.Types.PrefetchSchedule

-- | A complex type that contains prefetch schedule information.
--   
--   <i>See:</i> <a>newPrefetchSchedule</a> smart constructor.
data PrefetchSchedule
PrefetchSchedule' :: Maybe Text -> PrefetchRetrieval -> PrefetchConsumption -> Text -> Text -> Text -> PrefetchSchedule

-- | An optional stream identifier that you can specify in order to
--   prefetch for multiple streams that use the same playback
--   configuration.
[$sel:streamId:PrefetchSchedule'] :: PrefetchSchedule -> Maybe Text

-- | A complex type that contains settings for prefetch retrieval from the
--   ad decision server (ADS).
[$sel:retrieval:PrefetchSchedule'] :: PrefetchSchedule -> PrefetchRetrieval

-- | Consumption settings determine how, and when, MediaTailor places the
--   prefetched ads into ad breaks. Ad consumption occurs within a span of
--   time that you define, called a <i>consumption window</i>. You can
--   designate which ad breaks that MediaTailor fills with prefetch ads by
--   setting avail matching criteria.
[$sel:consumption:PrefetchSchedule'] :: PrefetchSchedule -> PrefetchConsumption

-- | The Amazon Resource Name (ARN) of the prefetch schedule.
[$sel:arn:PrefetchSchedule'] :: PrefetchSchedule -> Text

-- | The name of the playback configuration to create the prefetch schedule
--   for.
[$sel:playbackConfigurationName:PrefetchSchedule'] :: PrefetchSchedule -> Text

-- | The name of the prefetch schedule. The name must be unique among all
--   prefetch schedules that are associated with the specified playback
--   configuration.
[$sel:name:PrefetchSchedule'] :: PrefetchSchedule -> Text

-- | Create a value of <a>PrefetchSchedule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:streamId:PrefetchSchedule'</a>,
--   <a>prefetchSchedule_streamId</a> - An optional stream identifier that
--   you can specify in order to prefetch for multiple streams that use the
--   same playback configuration.
--   
--   <a>$sel:retrieval:PrefetchSchedule'</a>,
--   <a>prefetchSchedule_retrieval</a> - A complex type that contains
--   settings for prefetch retrieval from the ad decision server (ADS).
--   
--   <a>$sel:consumption:PrefetchSchedule'</a>,
--   <a>prefetchSchedule_consumption</a> - Consumption settings determine
--   how, and when, MediaTailor places the prefetched ads into ad breaks.
--   Ad consumption occurs within a span of time that you define, called a
--   <i>consumption window</i>. You can designate which ad breaks that
--   MediaTailor fills with prefetch ads by setting avail matching
--   criteria.
--   
--   <a>$sel:arn:PrefetchSchedule'</a>, <a>prefetchSchedule_arn</a> - The
--   Amazon Resource Name (ARN) of the prefetch schedule.
--   
--   <a>$sel:playbackConfigurationName:PrefetchSchedule'</a>,
--   <a>prefetchSchedule_playbackConfigurationName</a> - The name of the
--   playback configuration to create the prefetch schedule for.
--   
--   <a>$sel:name:PrefetchSchedule'</a>, <a>prefetchSchedule_name</a> - The
--   name of the prefetch schedule. The name must be unique among all
--   prefetch schedules that are associated with the specified playback
--   configuration.
newPrefetchSchedule :: PrefetchRetrieval -> PrefetchConsumption -> Text -> Text -> Text -> PrefetchSchedule

-- | An optional stream identifier that you can specify in order to
--   prefetch for multiple streams that use the same playback
--   configuration.
prefetchSchedule_streamId :: Lens' PrefetchSchedule (Maybe Text)

-- | A complex type that contains settings for prefetch retrieval from the
--   ad decision server (ADS).
prefetchSchedule_retrieval :: Lens' PrefetchSchedule PrefetchRetrieval

-- | Consumption settings determine how, and when, MediaTailor places the
--   prefetched ads into ad breaks. Ad consumption occurs within a span of
--   time that you define, called a <i>consumption window</i>. You can
--   designate which ad breaks that MediaTailor fills with prefetch ads by
--   setting avail matching criteria.
prefetchSchedule_consumption :: Lens' PrefetchSchedule PrefetchConsumption

-- | The Amazon Resource Name (ARN) of the prefetch schedule.
prefetchSchedule_arn :: Lens' PrefetchSchedule Text

-- | The name of the playback configuration to create the prefetch schedule
--   for.
prefetchSchedule_playbackConfigurationName :: Lens' PrefetchSchedule Text

-- | The name of the prefetch schedule. The name must be unique among all
--   prefetch schedules that are associated with the specified playback
--   configuration.
prefetchSchedule_name :: Lens' PrefetchSchedule Text
instance GHC.Generics.Generic Network.AWS.MediaTailor.Types.PrefetchSchedule.PrefetchSchedule
instance GHC.Show.Show Network.AWS.MediaTailor.Types.PrefetchSchedule.PrefetchSchedule
instance GHC.Read.Read Network.AWS.MediaTailor.Types.PrefetchSchedule.PrefetchSchedule
instance GHC.Classes.Eq Network.AWS.MediaTailor.Types.PrefetchSchedule.PrefetchSchedule
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.MediaTailor.Types.PrefetchSchedule.PrefetchSchedule
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.Types.PrefetchSchedule.PrefetchSchedule
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.Types.PrefetchSchedule.PrefetchSchedule


module Network.AWS.MediaTailor.Types.RelativePosition
newtype RelativePosition
RelativePosition' :: Text -> RelativePosition
[fromRelativePosition] :: RelativePosition -> Text
pattern RelativePosition_AFTER_PROGRAM :: RelativePosition
pattern RelativePosition_BEFORE_PROGRAM :: RelativePosition
instance Network.AWS.Data.XML.ToXML Network.AWS.MediaTailor.Types.RelativePosition.RelativePosition
instance Network.AWS.Data.XML.FromXML Network.AWS.MediaTailor.Types.RelativePosition.RelativePosition
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.MediaTailor.Types.RelativePosition.RelativePosition
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MediaTailor.Types.RelativePosition.RelativePosition
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.MediaTailor.Types.RelativePosition.RelativePosition
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.MediaTailor.Types.RelativePosition.RelativePosition
instance Network.AWS.Data.Query.ToQuery Network.AWS.MediaTailor.Types.RelativePosition.RelativePosition
instance Network.AWS.Data.Headers.ToHeader Network.AWS.MediaTailor.Types.RelativePosition.RelativePosition
instance Network.AWS.Data.Log.ToLog Network.AWS.MediaTailor.Types.RelativePosition.RelativePosition
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.MediaTailor.Types.RelativePosition.RelativePosition
instance Network.AWS.Data.Text.ToText Network.AWS.MediaTailor.Types.RelativePosition.RelativePosition
instance Network.AWS.Data.Text.FromText Network.AWS.MediaTailor.Types.RelativePosition.RelativePosition
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.Types.RelativePosition.RelativePosition
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.Types.RelativePosition.RelativePosition
instance GHC.Generics.Generic Network.AWS.MediaTailor.Types.RelativePosition.RelativePosition
instance GHC.Classes.Ord Network.AWS.MediaTailor.Types.RelativePosition.RelativePosition
instance GHC.Classes.Eq Network.AWS.MediaTailor.Types.RelativePosition.RelativePosition
instance GHC.Read.Read Network.AWS.MediaTailor.Types.RelativePosition.RelativePosition
instance GHC.Show.Show Network.AWS.MediaTailor.Types.RelativePosition.RelativePosition


module Network.AWS.MediaTailor.Types.RequestOutputItem

-- | The output configuration for this channel.
--   
--   <i>See:</i> <a>newRequestOutputItem</a> smart constructor.
data RequestOutputItem
RequestOutputItem' :: Maybe HlsPlaylistSettings -> Maybe DashPlaylistSettings -> Text -> Text -> RequestOutputItem

-- | HLS playlist configuration parameters.
[$sel:hlsPlaylistSettings:RequestOutputItem'] :: RequestOutputItem -> Maybe HlsPlaylistSettings

-- | DASH manifest configuration parameters.
[$sel:dashPlaylistSettings:RequestOutputItem'] :: RequestOutputItem -> Maybe DashPlaylistSettings

-- | The name of the manifest for the channel. The name appears in the
--   PlaybackUrl.
[$sel:manifestName:RequestOutputItem'] :: RequestOutputItem -> Text

-- | A string used to match which HttpPackageConfiguration is used for each
--   VodSource.
[$sel:sourceGroup:RequestOutputItem'] :: RequestOutputItem -> Text

-- | Create a value of <a>RequestOutputItem</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hlsPlaylistSettings:RequestOutputItem'</a>,
--   <a>requestOutputItem_hlsPlaylistSettings</a> - HLS playlist
--   configuration parameters.
--   
--   <a>$sel:dashPlaylistSettings:RequestOutputItem'</a>,
--   <a>requestOutputItem_dashPlaylistSettings</a> - DASH manifest
--   configuration parameters.
--   
--   <a>$sel:manifestName:RequestOutputItem'</a>,
--   <a>requestOutputItem_manifestName</a> - The name of the manifest for
--   the channel. The name appears in the PlaybackUrl.
--   
--   <a>$sel:sourceGroup:RequestOutputItem'</a>,
--   <a>requestOutputItem_sourceGroup</a> - A string used to match which
--   HttpPackageConfiguration is used for each VodSource.
newRequestOutputItem :: Text -> Text -> RequestOutputItem

-- | HLS playlist configuration parameters.
requestOutputItem_hlsPlaylistSettings :: Lens' RequestOutputItem (Maybe HlsPlaylistSettings)

-- | DASH manifest configuration parameters.
requestOutputItem_dashPlaylistSettings :: Lens' RequestOutputItem (Maybe DashPlaylistSettings)

-- | The name of the manifest for the channel. The name appears in the
--   PlaybackUrl.
requestOutputItem_manifestName :: Lens' RequestOutputItem Text

-- | A string used to match which HttpPackageConfiguration is used for each
--   VodSource.
requestOutputItem_sourceGroup :: Lens' RequestOutputItem Text
instance GHC.Generics.Generic Network.AWS.MediaTailor.Types.RequestOutputItem.RequestOutputItem
instance GHC.Show.Show Network.AWS.MediaTailor.Types.RequestOutputItem.RequestOutputItem
instance GHC.Read.Read Network.AWS.MediaTailor.Types.RequestOutputItem.RequestOutputItem
instance GHC.Classes.Eq Network.AWS.MediaTailor.Types.RequestOutputItem.RequestOutputItem
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.Types.RequestOutputItem.RequestOutputItem
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.Types.RequestOutputItem.RequestOutputItem
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MediaTailor.Types.RequestOutputItem.RequestOutputItem


module Network.AWS.MediaTailor.Types.ResponseOutputItem

-- | This response includes only the "property" : "type" property.
--   
--   <i>See:</i> <a>newResponseOutputItem</a> smart constructor.
data ResponseOutputItem
ResponseOutputItem' :: Maybe HlsPlaylistSettings -> Maybe DashPlaylistSettings -> Text -> Text -> Text -> ResponseOutputItem

-- | HLS manifest configuration settings.
[$sel:hlsPlaylistSettings:ResponseOutputItem'] :: ResponseOutputItem -> Maybe HlsPlaylistSettings

-- | DASH manifest configuration settings.
[$sel:dashPlaylistSettings:ResponseOutputItem'] :: ResponseOutputItem -> Maybe DashPlaylistSettings

-- | The name of the manifest for the channel that will appear in the
--   channel output's playback URL.
[$sel:manifestName:ResponseOutputItem'] :: ResponseOutputItem -> Text

-- | The URL used for playback by content players.
[$sel:playbackUrl:ResponseOutputItem'] :: ResponseOutputItem -> Text

-- | A string used to associate a package configuration source group with a
--   channel output.
[$sel:sourceGroup:ResponseOutputItem'] :: ResponseOutputItem -> Text

-- | Create a value of <a>ResponseOutputItem</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hlsPlaylistSettings:ResponseOutputItem'</a>,
--   <a>responseOutputItem_hlsPlaylistSettings</a> - HLS manifest
--   configuration settings.
--   
--   <a>$sel:dashPlaylistSettings:ResponseOutputItem'</a>,
--   <a>responseOutputItem_dashPlaylistSettings</a> - DASH manifest
--   configuration settings.
--   
--   <a>$sel:manifestName:ResponseOutputItem'</a>,
--   <a>responseOutputItem_manifestName</a> - The name of the manifest for
--   the channel that will appear in the channel output's playback URL.
--   
--   <a>$sel:playbackUrl:ResponseOutputItem'</a>,
--   <a>responseOutputItem_playbackUrl</a> - The URL used for playback by
--   content players.
--   
--   <a>$sel:sourceGroup:ResponseOutputItem'</a>,
--   <a>responseOutputItem_sourceGroup</a> - A string used to associate a
--   package configuration source group with a channel output.
newResponseOutputItem :: Text -> Text -> Text -> ResponseOutputItem

-- | HLS manifest configuration settings.
responseOutputItem_hlsPlaylistSettings :: Lens' ResponseOutputItem (Maybe HlsPlaylistSettings)

-- | DASH manifest configuration settings.
responseOutputItem_dashPlaylistSettings :: Lens' ResponseOutputItem (Maybe DashPlaylistSettings)

-- | The name of the manifest for the channel that will appear in the
--   channel output's playback URL.
responseOutputItem_manifestName :: Lens' ResponseOutputItem Text

-- | The URL used for playback by content players.
responseOutputItem_playbackUrl :: Lens' ResponseOutputItem Text

-- | A string used to associate a package configuration source group with a
--   channel output.
responseOutputItem_sourceGroup :: Lens' ResponseOutputItem Text
instance GHC.Generics.Generic Network.AWS.MediaTailor.Types.ResponseOutputItem.ResponseOutputItem
instance GHC.Show.Show Network.AWS.MediaTailor.Types.ResponseOutputItem.ResponseOutputItem
instance GHC.Read.Read Network.AWS.MediaTailor.Types.ResponseOutputItem.ResponseOutputItem
instance GHC.Classes.Eq Network.AWS.MediaTailor.Types.ResponseOutputItem.ResponseOutputItem
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.MediaTailor.Types.ResponseOutputItem.ResponseOutputItem
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.Types.ResponseOutputItem.ResponseOutputItem
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.Types.ResponseOutputItem.ResponseOutputItem


module Network.AWS.MediaTailor.Types.ScheduleAdBreak

-- | The schedule's ad break properties.
--   
--   <i>See:</i> <a>newScheduleAdBreak</a> smart constructor.
data ScheduleAdBreak
ScheduleAdBreak' :: Maybe Text -> Maybe Integer -> Maybe Text -> Maybe POSIX -> ScheduleAdBreak

-- | The name of the source location containing the VOD source used for the
--   ad break.
[$sel:sourceLocationName:ScheduleAdBreak'] :: ScheduleAdBreak -> Maybe Text

-- | The approximate duration of the ad break, in seconds.
[$sel:approximateDurationSeconds:ScheduleAdBreak'] :: ScheduleAdBreak -> Maybe Integer

-- | The name of the VOD source used for the ad break.
[$sel:vodSourceName:ScheduleAdBreak'] :: ScheduleAdBreak -> Maybe Text

-- | The approximate time that the ad will start playing.
[$sel:approximateStartTime:ScheduleAdBreak'] :: ScheduleAdBreak -> Maybe POSIX

-- | Create a value of <a>ScheduleAdBreak</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceLocationName:ScheduleAdBreak'</a>,
--   <a>scheduleAdBreak_sourceLocationName</a> - The name of the source
--   location containing the VOD source used for the ad break.
--   
--   <a>$sel:approximateDurationSeconds:ScheduleAdBreak'</a>,
--   <a>scheduleAdBreak_approximateDurationSeconds</a> - The approximate
--   duration of the ad break, in seconds.
--   
--   <a>$sel:vodSourceName:ScheduleAdBreak'</a>,
--   <a>scheduleAdBreak_vodSourceName</a> - The name of the VOD source used
--   for the ad break.
--   
--   <a>$sel:approximateStartTime:ScheduleAdBreak'</a>,
--   <a>scheduleAdBreak_approximateStartTime</a> - The approximate time
--   that the ad will start playing.
newScheduleAdBreak :: ScheduleAdBreak

-- | The name of the source location containing the VOD source used for the
--   ad break.
scheduleAdBreak_sourceLocationName :: Lens' ScheduleAdBreak (Maybe Text)

-- | The approximate duration of the ad break, in seconds.
scheduleAdBreak_approximateDurationSeconds :: Lens' ScheduleAdBreak (Maybe Integer)

-- | The name of the VOD source used for the ad break.
scheduleAdBreak_vodSourceName :: Lens' ScheduleAdBreak (Maybe Text)

-- | The approximate time that the ad will start playing.
scheduleAdBreak_approximateStartTime :: Lens' ScheduleAdBreak (Maybe UTCTime)
instance GHC.Generics.Generic Network.AWS.MediaTailor.Types.ScheduleAdBreak.ScheduleAdBreak
instance GHC.Show.Show Network.AWS.MediaTailor.Types.ScheduleAdBreak.ScheduleAdBreak
instance GHC.Read.Read Network.AWS.MediaTailor.Types.ScheduleAdBreak.ScheduleAdBreak
instance GHC.Classes.Eq Network.AWS.MediaTailor.Types.ScheduleAdBreak.ScheduleAdBreak
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.MediaTailor.Types.ScheduleAdBreak.ScheduleAdBreak
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.Types.ScheduleAdBreak.ScheduleAdBreak
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.Types.ScheduleAdBreak.ScheduleAdBreak


module Network.AWS.MediaTailor.Types.ScheduleEntryType
newtype ScheduleEntryType
ScheduleEntryType' :: Text -> ScheduleEntryType
[fromScheduleEntryType] :: ScheduleEntryType -> Text
pattern ScheduleEntryType_FILLER_SLATE :: ScheduleEntryType
pattern ScheduleEntryType_PROGRAM :: ScheduleEntryType
instance Network.AWS.Data.XML.ToXML Network.AWS.MediaTailor.Types.ScheduleEntryType.ScheduleEntryType
instance Network.AWS.Data.XML.FromXML Network.AWS.MediaTailor.Types.ScheduleEntryType.ScheduleEntryType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.MediaTailor.Types.ScheduleEntryType.ScheduleEntryType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MediaTailor.Types.ScheduleEntryType.ScheduleEntryType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.MediaTailor.Types.ScheduleEntryType.ScheduleEntryType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.MediaTailor.Types.ScheduleEntryType.ScheduleEntryType
instance Network.AWS.Data.Query.ToQuery Network.AWS.MediaTailor.Types.ScheduleEntryType.ScheduleEntryType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.MediaTailor.Types.ScheduleEntryType.ScheduleEntryType
instance Network.AWS.Data.Log.ToLog Network.AWS.MediaTailor.Types.ScheduleEntryType.ScheduleEntryType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.MediaTailor.Types.ScheduleEntryType.ScheduleEntryType
instance Network.AWS.Data.Text.ToText Network.AWS.MediaTailor.Types.ScheduleEntryType.ScheduleEntryType
instance Network.AWS.Data.Text.FromText Network.AWS.MediaTailor.Types.ScheduleEntryType.ScheduleEntryType
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.Types.ScheduleEntryType.ScheduleEntryType
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.Types.ScheduleEntryType.ScheduleEntryType
instance GHC.Generics.Generic Network.AWS.MediaTailor.Types.ScheduleEntryType.ScheduleEntryType
instance GHC.Classes.Ord Network.AWS.MediaTailor.Types.ScheduleEntryType.ScheduleEntryType
instance GHC.Classes.Eq Network.AWS.MediaTailor.Types.ScheduleEntryType.ScheduleEntryType
instance GHC.Read.Read Network.AWS.MediaTailor.Types.ScheduleEntryType.ScheduleEntryType
instance GHC.Show.Show Network.AWS.MediaTailor.Types.ScheduleEntryType.ScheduleEntryType


module Network.AWS.MediaTailor.Types.ScheduleEntry

-- | The properties for a schedule.
--   
--   <i>See:</i> <a>newScheduleEntry</a> smart constructor.
data ScheduleEntry
ScheduleEntry' :: Maybe [ScheduleAdBreak] -> Maybe Integer -> Maybe POSIX -> Maybe ScheduleEntryType -> Text -> Text -> Text -> Text -> Text -> ScheduleEntry

-- | The schedule's ad break properties.
[$sel:scheduleAdBreaks:ScheduleEntry'] :: ScheduleEntry -> Maybe [ScheduleAdBreak]

-- | The approximate duration of this program, in seconds.
[$sel:approximateDurationSeconds:ScheduleEntry'] :: ScheduleEntry -> Maybe Integer

-- | The approximate time that the program will start playing.
[$sel:approximateStartTime:ScheduleEntry'] :: ScheduleEntry -> Maybe POSIX

-- | The type of schedule entry.
--   
--   Valid values: PROGRAM or FILLER_SLATE.
[$sel:scheduleEntryType:ScheduleEntry'] :: ScheduleEntry -> Maybe ScheduleEntryType

-- | The name of the VOD source.
[$sel:vodSourceName:ScheduleEntry'] :: ScheduleEntry -> Text

-- | The name of the channel that uses this schedule.
[$sel:channelName:ScheduleEntry'] :: ScheduleEntry -> Text

-- | The name of the source location.
[$sel:sourceLocationName:ScheduleEntry'] :: ScheduleEntry -> Text

-- | The ARN of the program.
[$sel:arn:ScheduleEntry'] :: ScheduleEntry -> Text

-- | The name of the program.
[$sel:programName:ScheduleEntry'] :: ScheduleEntry -> Text

-- | Create a value of <a>ScheduleEntry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:scheduleAdBreaks:ScheduleEntry'</a>,
--   <a>scheduleEntry_scheduleAdBreaks</a> - The schedule's ad break
--   properties.
--   
--   <a>$sel:approximateDurationSeconds:ScheduleEntry'</a>,
--   <a>scheduleEntry_approximateDurationSeconds</a> - The approximate
--   duration of this program, in seconds.
--   
--   <a>$sel:approximateStartTime:ScheduleEntry'</a>,
--   <a>scheduleEntry_approximateStartTime</a> - The approximate time that
--   the program will start playing.
--   
--   <a>$sel:scheduleEntryType:ScheduleEntry'</a>,
--   <a>scheduleEntry_scheduleEntryType</a> - The type of schedule entry.
--   
--   Valid values: PROGRAM or FILLER_SLATE.
--   
--   <a>$sel:vodSourceName:ScheduleEntry'</a>,
--   <a>scheduleEntry_vodSourceName</a> - The name of the VOD source.
--   
--   <a>$sel:channelName:ScheduleEntry'</a>,
--   <a>scheduleEntry_channelName</a> - The name of the channel that uses
--   this schedule.
--   
--   <a>$sel:sourceLocationName:ScheduleEntry'</a>,
--   <a>scheduleEntry_sourceLocationName</a> - The name of the source
--   location.
--   
--   <a>$sel:arn:ScheduleEntry'</a>, <a>scheduleEntry_arn</a> - The ARN of
--   the program.
--   
--   <a>$sel:programName:ScheduleEntry'</a>,
--   <a>scheduleEntry_programName</a> - The name of the program.
newScheduleEntry :: Text -> Text -> Text -> Text -> Text -> ScheduleEntry

-- | The schedule's ad break properties.
scheduleEntry_scheduleAdBreaks :: Lens' ScheduleEntry (Maybe [ScheduleAdBreak])

-- | The approximate duration of this program, in seconds.
scheduleEntry_approximateDurationSeconds :: Lens' ScheduleEntry (Maybe Integer)

-- | The approximate time that the program will start playing.
scheduleEntry_approximateStartTime :: Lens' ScheduleEntry (Maybe UTCTime)

-- | The type of schedule entry.
--   
--   Valid values: PROGRAM or FILLER_SLATE.
scheduleEntry_scheduleEntryType :: Lens' ScheduleEntry (Maybe ScheduleEntryType)

-- | The name of the VOD source.
scheduleEntry_vodSourceName :: Lens' ScheduleEntry Text

-- | The name of the channel that uses this schedule.
scheduleEntry_channelName :: Lens' ScheduleEntry Text

-- | The name of the source location.
scheduleEntry_sourceLocationName :: Lens' ScheduleEntry Text

-- | The ARN of the program.
scheduleEntry_arn :: Lens' ScheduleEntry Text

-- | The name of the program.
scheduleEntry_programName :: Lens' ScheduleEntry Text
instance GHC.Generics.Generic Network.AWS.MediaTailor.Types.ScheduleEntry.ScheduleEntry
instance GHC.Show.Show Network.AWS.MediaTailor.Types.ScheduleEntry.ScheduleEntry
instance GHC.Read.Read Network.AWS.MediaTailor.Types.ScheduleEntry.ScheduleEntry
instance GHC.Classes.Eq Network.AWS.MediaTailor.Types.ScheduleEntry.ScheduleEntry
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.MediaTailor.Types.ScheduleEntry.ScheduleEntry
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.Types.ScheduleEntry.ScheduleEntry
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.Types.ScheduleEntry.ScheduleEntry


module Network.AWS.MediaTailor.Types.SecretsManagerAccessTokenConfiguration

-- | AWS Secrets Manager access token configuration parameters. For
--   information about Secrets Manager access token authentication, see
--   <a>Working with AWS Secrets Manager access token authentication</a>.
--   
--   <i>See:</i> <a>newSecretsManagerAccessTokenConfiguration</a> smart
--   constructor.
data SecretsManagerAccessTokenConfiguration
SecretsManagerAccessTokenConfiguration' :: Maybe Text -> Maybe Text -> Maybe Text -> SecretsManagerAccessTokenConfiguration

-- | The name of the HTTP header used to supply the access token in
--   requests to the source location.
[$sel:headerName:SecretsManagerAccessTokenConfiguration'] :: SecretsManagerAccessTokenConfiguration -> Maybe Text

-- | The AWS Secrets Manager <a>SecretString</a> key associated with the
--   access token. MediaTailor uses the key to look up SecretString key and
--   value pair containing the access token.
[$sel:secretStringKey:SecretsManagerAccessTokenConfiguration'] :: SecretsManagerAccessTokenConfiguration -> Maybe Text

-- | The Amazon Resource Name (ARN) of the AWS Secrets Manager secret that
--   contains the access token.
[$sel:secretArn:SecretsManagerAccessTokenConfiguration'] :: SecretsManagerAccessTokenConfiguration -> Maybe Text

-- | Create a value of <a>SecretsManagerAccessTokenConfiguration</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:headerName:SecretsManagerAccessTokenConfiguration'</a>,
--   <a>secretsManagerAccessTokenConfiguration_headerName</a> - The name of
--   the HTTP header used to supply the access token in requests to the
--   source location.
--   
--   <a>$sel:secretStringKey:SecretsManagerAccessTokenConfiguration'</a>,
--   <a>secretsManagerAccessTokenConfiguration_secretStringKey</a> - The
--   AWS Secrets Manager <a>SecretString</a> key associated with the access
--   token. MediaTailor uses the key to look up SecretString key and value
--   pair containing the access token.
--   
--   <a>$sel:secretArn:SecretsManagerAccessTokenConfiguration'</a>,
--   <a>secretsManagerAccessTokenConfiguration_secretArn</a> - The Amazon
--   Resource Name (ARN) of the AWS Secrets Manager secret that contains
--   the access token.
newSecretsManagerAccessTokenConfiguration :: SecretsManagerAccessTokenConfiguration

-- | The name of the HTTP header used to supply the access token in
--   requests to the source location.
secretsManagerAccessTokenConfiguration_headerName :: Lens' SecretsManagerAccessTokenConfiguration (Maybe Text)

-- | The AWS Secrets Manager <a>SecretString</a> key associated with the
--   access token. MediaTailor uses the key to look up SecretString key and
--   value pair containing the access token.
secretsManagerAccessTokenConfiguration_secretStringKey :: Lens' SecretsManagerAccessTokenConfiguration (Maybe Text)

-- | The Amazon Resource Name (ARN) of the AWS Secrets Manager secret that
--   contains the access token.
secretsManagerAccessTokenConfiguration_secretArn :: Lens' SecretsManagerAccessTokenConfiguration (Maybe Text)
instance GHC.Generics.Generic Network.AWS.MediaTailor.Types.SecretsManagerAccessTokenConfiguration.SecretsManagerAccessTokenConfiguration
instance GHC.Show.Show Network.AWS.MediaTailor.Types.SecretsManagerAccessTokenConfiguration.SecretsManagerAccessTokenConfiguration
instance GHC.Read.Read Network.AWS.MediaTailor.Types.SecretsManagerAccessTokenConfiguration.SecretsManagerAccessTokenConfiguration
instance GHC.Classes.Eq Network.AWS.MediaTailor.Types.SecretsManagerAccessTokenConfiguration.SecretsManagerAccessTokenConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.MediaTailor.Types.SecretsManagerAccessTokenConfiguration.SecretsManagerAccessTokenConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.Types.SecretsManagerAccessTokenConfiguration.SecretsManagerAccessTokenConfiguration
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.Types.SecretsManagerAccessTokenConfiguration.SecretsManagerAccessTokenConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MediaTailor.Types.SecretsManagerAccessTokenConfiguration.SecretsManagerAccessTokenConfiguration


module Network.AWS.MediaTailor.Types.AccessConfiguration

-- | Access configuration parameters.
--   
--   <i>See:</i> <a>newAccessConfiguration</a> smart constructor.
data AccessConfiguration
AccessConfiguration' :: Maybe AccessType -> Maybe SecretsManagerAccessTokenConfiguration -> AccessConfiguration

-- | The type of authentication used to access content from
--   HttpConfiguration::BaseUrl on your source location. Accepted value:
--   S3_SIGV4.
--   
--   S3_SIGV4 - AWS Signature Version 4 authentication for Amazon S3 hosted
--   virtual-style access. If your source location base URL is an Amazon S3
--   bucket, MediaTailor can use AWS Signature Version 4 (SigV4)
--   authentication to access the bucket where your source content is
--   stored. Your MediaTailor source location baseURL must follow the S3
--   virtual hosted-style request URL format. For example,
--   https://bucket-name.s3.Region.amazonaws.com/key-name.
--   
--   Before you can use S3_SIGV4, you must meet these requirements:
--   
--   â€¢ You must allow MediaTailor to access your S3 bucket by granting
--   mediatailor.amazonaws.com principal access in IAM. For information
--   about configuring access in IAM, see Access management in the IAM User
--   Guide.
--   
--   â€¢ The mediatailor.amazonaws.com service principal must have
--   permissions to read all top level manifests referenced by the
--   VodSource packaging configurations.
--   
--   â€¢ The caller of the API must have s3:GetObject IAM permissions to read
--   all top level manifests referenced by your MediaTailor VodSource
--   packaging configurations.
[$sel:accessType:AccessConfiguration'] :: AccessConfiguration -> Maybe AccessType

-- | AWS Secrets Manager access token configuration parameters.
[$sel:secretsManagerAccessTokenConfiguration:AccessConfiguration'] :: AccessConfiguration -> Maybe SecretsManagerAccessTokenConfiguration

-- | Create a value of <a>AccessConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accessType:AccessConfiguration'</a>,
--   <a>accessConfiguration_accessType</a> - The type of authentication
--   used to access content from HttpConfiguration::BaseUrl on your source
--   location. Accepted value: S3_SIGV4.
--   
--   S3_SIGV4 - AWS Signature Version 4 authentication for Amazon S3 hosted
--   virtual-style access. If your source location base URL is an Amazon S3
--   bucket, MediaTailor can use AWS Signature Version 4 (SigV4)
--   authentication to access the bucket where your source content is
--   stored. Your MediaTailor source location baseURL must follow the S3
--   virtual hosted-style request URL format. For example,
--   https://bucket-name.s3.Region.amazonaws.com/key-name.
--   
--   Before you can use S3_SIGV4, you must meet these requirements:
--   
--   â€¢ You must allow MediaTailor to access your S3 bucket by granting
--   mediatailor.amazonaws.com principal access in IAM. For information
--   about configuring access in IAM, see Access management in the IAM User
--   Guide.
--   
--   â€¢ The mediatailor.amazonaws.com service principal must have
--   permissions to read all top level manifests referenced by the
--   VodSource packaging configurations.
--   
--   â€¢ The caller of the API must have s3:GetObject IAM permissions to read
--   all top level manifests referenced by your MediaTailor VodSource
--   packaging configurations.
--   
--   
--   <a>$sel:secretsManagerAccessTokenConfiguration:AccessConfiguration'</a>,
--   <a>accessConfiguration_secretsManagerAccessTokenConfiguration</a> -
--   AWS Secrets Manager access token configuration parameters.
newAccessConfiguration :: AccessConfiguration

-- | The type of authentication used to access content from
--   HttpConfiguration::BaseUrl on your source location. Accepted value:
--   S3_SIGV4.
--   
--   S3_SIGV4 - AWS Signature Version 4 authentication for Amazon S3 hosted
--   virtual-style access. If your source location base URL is an Amazon S3
--   bucket, MediaTailor can use AWS Signature Version 4 (SigV4)
--   authentication to access the bucket where your source content is
--   stored. Your MediaTailor source location baseURL must follow the S3
--   virtual hosted-style request URL format. For example,
--   https://bucket-name.s3.Region.amazonaws.com/key-name.
--   
--   Before you can use S3_SIGV4, you must meet these requirements:
--   
--   â€¢ You must allow MediaTailor to access your S3 bucket by granting
--   mediatailor.amazonaws.com principal access in IAM. For information
--   about configuring access in IAM, see Access management in the IAM User
--   Guide.
--   
--   â€¢ The mediatailor.amazonaws.com service principal must have
--   permissions to read all top level manifests referenced by the
--   VodSource packaging configurations.
--   
--   â€¢ The caller of the API must have s3:GetObject IAM permissions to read
--   all top level manifests referenced by your MediaTailor VodSource
--   packaging configurations.
accessConfiguration_accessType :: Lens' AccessConfiguration (Maybe AccessType)

-- | AWS Secrets Manager access token configuration parameters.
accessConfiguration_secretsManagerAccessTokenConfiguration :: Lens' AccessConfiguration (Maybe SecretsManagerAccessTokenConfiguration)
instance GHC.Generics.Generic Network.AWS.MediaTailor.Types.AccessConfiguration.AccessConfiguration
instance GHC.Show.Show Network.AWS.MediaTailor.Types.AccessConfiguration.AccessConfiguration
instance GHC.Read.Read Network.AWS.MediaTailor.Types.AccessConfiguration.AccessConfiguration
instance GHC.Classes.Eq Network.AWS.MediaTailor.Types.AccessConfiguration.AccessConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.MediaTailor.Types.AccessConfiguration.AccessConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.Types.AccessConfiguration.AccessConfiguration
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.Types.AccessConfiguration.AccessConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MediaTailor.Types.AccessConfiguration.AccessConfiguration


module Network.AWS.MediaTailor.Types.SlateSource

-- | Slate VOD source configuration.
--   
--   <i>See:</i> <a>newSlateSource</a> smart constructor.
data SlateSource
SlateSource' :: Maybe Text -> Maybe Text -> SlateSource

-- | The name of the source location where the slate VOD source is stored.
[$sel:sourceLocationName:SlateSource'] :: SlateSource -> Maybe Text

-- | The slate VOD source name. The VOD source must already exist in a
--   source location before it can be used for slate.
[$sel:vodSourceName:SlateSource'] :: SlateSource -> Maybe Text

-- | Create a value of <a>SlateSource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceLocationName:SlateSource'</a>,
--   <a>slateSource_sourceLocationName</a> - The name of the source
--   location where the slate VOD source is stored.
--   
--   <a>$sel:vodSourceName:SlateSource'</a>,
--   <a>slateSource_vodSourceName</a> - The slate VOD source name. The VOD
--   source must already exist in a source location before it can be used
--   for slate.
newSlateSource :: SlateSource

-- | The name of the source location where the slate VOD source is stored.
slateSource_sourceLocationName :: Lens' SlateSource (Maybe Text)

-- | The slate VOD source name. The VOD source must already exist in a
--   source location before it can be used for slate.
slateSource_vodSourceName :: Lens' SlateSource (Maybe Text)
instance GHC.Generics.Generic Network.AWS.MediaTailor.Types.SlateSource.SlateSource
instance GHC.Show.Show Network.AWS.MediaTailor.Types.SlateSource.SlateSource
instance GHC.Read.Read Network.AWS.MediaTailor.Types.SlateSource.SlateSource
instance GHC.Classes.Eq Network.AWS.MediaTailor.Types.SlateSource.SlateSource
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.MediaTailor.Types.SlateSource.SlateSource
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.Types.SlateSource.SlateSource
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.Types.SlateSource.SlateSource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MediaTailor.Types.SlateSource.SlateSource


module Network.AWS.MediaTailor.Types.Channel

-- | The configuration parameters for a channel.
--   
--   <i>See:</i> <a>newChannel</a> smart constructor.
data Channel
Channel' :: Maybe POSIX -> Maybe POSIX -> Maybe SlateSource -> Maybe (HashMap Text Text) -> Text -> Text -> [ResponseOutputItem] -> Text -> Text -> Channel

-- | The timestamp of when the channel was created.
[$sel:creationTime:Channel'] :: Channel -> Maybe POSIX

-- | The timestamp of when the channel was last modified.
[$sel:lastModifiedTime:Channel'] :: Channel -> Maybe POSIX

-- | Contains information about the slate used to fill gaps between
--   programs in the schedule. You must configure FillerSlate if your
--   channel uses an LINEAR PlaybackMode.
[$sel:fillerSlate:Channel'] :: Channel -> Maybe SlateSource

-- | The tags to assign to the channel.
[$sel:tags:Channel'] :: Channel -> Maybe (HashMap Text Text)

-- | Returns the state whether the channel is running or not.
[$sel:channelState:Channel'] :: Channel -> Text

-- | The name of the channel.
[$sel:channelName:Channel'] :: Channel -> Text

-- | The channel's output properties.
[$sel:outputs:Channel'] :: Channel -> [ResponseOutputItem]

-- | The ARN of the channel.
[$sel:arn:Channel'] :: Channel -> Text

-- | The type of playback mode for this channel.
--   
--   LINEAR - Programs play back-to-back only once.
--   
--   LOOP - Programs play back-to-back in an endless loop. When the last
--   program in the schedule plays, playback loops back to the first
--   program in the schedule.
[$sel:playbackMode:Channel'] :: Channel -> Text

-- | Create a value of <a>Channel</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:Channel'</a>, <a>channel_creationTime</a> - The
--   timestamp of when the channel was created.
--   
--   <a>$sel:lastModifiedTime:Channel'</a>, <a>channel_lastModifiedTime</a>
--   - The timestamp of when the channel was last modified.
--   
--   <a>$sel:fillerSlate:Channel'</a>, <a>channel_fillerSlate</a> -
--   Contains information about the slate used to fill gaps between
--   programs in the schedule. You must configure FillerSlate if your
--   channel uses an LINEAR PlaybackMode.
--   
--   <a>$sel:tags:Channel'</a>, <a>channel_tags</a> - The tags to assign to
--   the channel.
--   
--   <a>$sel:channelState:Channel'</a>, <a>channel_channelState</a> -
--   Returns the state whether the channel is running or not.
--   
--   <a>$sel:channelName:Channel'</a>, <a>channel_channelName</a> - The
--   name of the channel.
--   
--   <a>$sel:outputs:Channel'</a>, <a>channel_outputs</a> - The channel's
--   output properties.
--   
--   <a>$sel:arn:Channel'</a>, <a>channel_arn</a> - The ARN of the channel.
--   
--   <a>$sel:playbackMode:Channel'</a>, <a>channel_playbackMode</a> - The
--   type of playback mode for this channel.
--   
--   LINEAR - Programs play back-to-back only once.
--   
--   LOOP - Programs play back-to-back in an endless loop. When the last
--   program in the schedule plays, playback loops back to the first
--   program in the schedule.
newChannel :: Text -> Text -> Text -> Text -> Channel

-- | The timestamp of when the channel was created.
channel_creationTime :: Lens' Channel (Maybe UTCTime)

-- | The timestamp of when the channel was last modified.
channel_lastModifiedTime :: Lens' Channel (Maybe UTCTime)

-- | Contains information about the slate used to fill gaps between
--   programs in the schedule. You must configure FillerSlate if your
--   channel uses an LINEAR PlaybackMode.
channel_fillerSlate :: Lens' Channel (Maybe SlateSource)

-- | The tags to assign to the channel.
channel_tags :: Lens' Channel (Maybe (HashMap Text Text))

-- | Returns the state whether the channel is running or not.
channel_channelState :: Lens' Channel Text

-- | The name of the channel.
channel_channelName :: Lens' Channel Text

-- | The channel's output properties.
channel_outputs :: Lens' Channel [ResponseOutputItem]

-- | The ARN of the channel.
channel_arn :: Lens' Channel Text

-- | The type of playback mode for this channel.
--   
--   LINEAR - Programs play back-to-back only once.
--   
--   LOOP - Programs play back-to-back in an endless loop. When the last
--   program in the schedule plays, playback loops back to the first
--   program in the schedule.
channel_playbackMode :: Lens' Channel Text
instance GHC.Generics.Generic Network.AWS.MediaTailor.Types.Channel.Channel
instance GHC.Show.Show Network.AWS.MediaTailor.Types.Channel.Channel
instance GHC.Read.Read Network.AWS.MediaTailor.Types.Channel.Channel
instance GHC.Classes.Eq Network.AWS.MediaTailor.Types.Channel.Channel
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.MediaTailor.Types.Channel.Channel
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.Types.Channel.Channel
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.Types.Channel.Channel


module Network.AWS.MediaTailor.Types.SourceLocation

-- | This response includes only the "type" : "object" property.
--   
--   <i>See:</i> <a>newSourceLocation</a> smart constructor.
data SourceLocation
SourceLocation' :: Maybe POSIX -> Maybe POSIX -> Maybe AccessConfiguration -> Maybe DefaultSegmentDeliveryConfiguration -> Maybe (HashMap Text Text) -> Text -> HttpConfiguration -> Text -> SourceLocation

-- | The timestamp that indicates when the source location was created.
[$sel:creationTime:SourceLocation'] :: SourceLocation -> Maybe POSIX

-- | The timestamp that indicates when the source location was last
--   modified.
[$sel:lastModifiedTime:SourceLocation'] :: SourceLocation -> Maybe POSIX

-- | The access configuration for the source location.
[$sel:accessConfiguration:SourceLocation'] :: SourceLocation -> Maybe AccessConfiguration

-- | The default segment delivery configuration.
[$sel:defaultSegmentDeliveryConfiguration:SourceLocation'] :: SourceLocation -> Maybe DefaultSegmentDeliveryConfiguration

-- | The tags assigned to the source location.
[$sel:tags:SourceLocation'] :: SourceLocation -> Maybe (HashMap Text Text)

-- | The name of the source location.
[$sel:sourceLocationName:SourceLocation'] :: SourceLocation -> Text

-- | The HTTP configuration for the source location.
[$sel:httpConfiguration:SourceLocation'] :: SourceLocation -> HttpConfiguration

-- | The ARN of the SourceLocation.
[$sel:arn:SourceLocation'] :: SourceLocation -> Text

-- | Create a value of <a>SourceLocation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:SourceLocation'</a>,
--   <a>sourceLocation_creationTime</a> - The timestamp that indicates when
--   the source location was created.
--   
--   <a>$sel:lastModifiedTime:SourceLocation'</a>,
--   <a>sourceLocation_lastModifiedTime</a> - The timestamp that indicates
--   when the source location was last modified.
--   
--   <a>$sel:accessConfiguration:SourceLocation'</a>,
--   <a>sourceLocation_accessConfiguration</a> - The access configuration
--   for the source location.
--   
--   <a>$sel:defaultSegmentDeliveryConfiguration:SourceLocation'</a>,
--   <a>sourceLocation_defaultSegmentDeliveryConfiguration</a> - The
--   default segment delivery configuration.
--   
--   <a>$sel:tags:SourceLocation'</a>, <a>sourceLocation_tags</a> - The
--   tags assigned to the source location.
--   
--   <a>$sel:sourceLocationName:SourceLocation'</a>,
--   <a>sourceLocation_sourceLocationName</a> - The name of the source
--   location.
--   
--   <a>$sel:httpConfiguration:SourceLocation'</a>,
--   <a>sourceLocation_httpConfiguration</a> - The HTTP configuration for
--   the source location.
--   
--   <a>$sel:arn:SourceLocation'</a>, <a>sourceLocation_arn</a> - The ARN
--   of the SourceLocation.
newSourceLocation :: Text -> HttpConfiguration -> Text -> SourceLocation

-- | The timestamp that indicates when the source location was created.
sourceLocation_creationTime :: Lens' SourceLocation (Maybe UTCTime)

-- | The timestamp that indicates when the source location was last
--   modified.
sourceLocation_lastModifiedTime :: Lens' SourceLocation (Maybe UTCTime)

-- | The access configuration for the source location.
sourceLocation_accessConfiguration :: Lens' SourceLocation (Maybe AccessConfiguration)

-- | The default segment delivery configuration.
sourceLocation_defaultSegmentDeliveryConfiguration :: Lens' SourceLocation (Maybe DefaultSegmentDeliveryConfiguration)

-- | The tags assigned to the source location.
sourceLocation_tags :: Lens' SourceLocation (Maybe (HashMap Text Text))

-- | The name of the source location.
sourceLocation_sourceLocationName :: Lens' SourceLocation Text

-- | The HTTP configuration for the source location.
sourceLocation_httpConfiguration :: Lens' SourceLocation HttpConfiguration

-- | The ARN of the SourceLocation.
sourceLocation_arn :: Lens' SourceLocation Text
instance GHC.Generics.Generic Network.AWS.MediaTailor.Types.SourceLocation.SourceLocation
instance GHC.Show.Show Network.AWS.MediaTailor.Types.SourceLocation.SourceLocation
instance GHC.Read.Read Network.AWS.MediaTailor.Types.SourceLocation.SourceLocation
instance GHC.Classes.Eq Network.AWS.MediaTailor.Types.SourceLocation.SourceLocation
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.MediaTailor.Types.SourceLocation.SourceLocation
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.Types.SourceLocation.SourceLocation
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.Types.SourceLocation.SourceLocation


module Network.AWS.MediaTailor.Types.SpliceInsertMessage

-- | Splice insert message configuration.
--   
--   <i>See:</i> <a>newSpliceInsertMessage</a> smart constructor.
data SpliceInsertMessage
SpliceInsertMessage' :: Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> SpliceInsertMessage

-- | This is written to splice_insert.avail_num, as defined in section
--   9.7.3.1 of the SCTE-35 specification. The default value is 0. Values
--   must be between 0 and 256, inclusive.
[$sel:availNum:SpliceInsertMessage'] :: SpliceInsertMessage -> Maybe Int

-- | This is written to splice_insert.unique_program_id, as defined in
--   section 9.7.3.1 of the SCTE-35 specification. The default value is 0.
--   Values must be between 0 and 256, inclusive.
[$sel:uniqueProgramId:SpliceInsertMessage'] :: SpliceInsertMessage -> Maybe Int

-- | This is written to splice_insert.avails_expected, as defined in
--   section 9.7.3.1 of the SCTE-35 specification. The default value is 0.
--   Values must be between 0 and 256, inclusive.
[$sel:availsExpected:SpliceInsertMessage'] :: SpliceInsertMessage -> Maybe Int

-- | This is written to splice_insert.splice_event_id, as defined in
--   section 9.7.3.1 of the SCTE-35 specification. The default value is 1.
[$sel:spliceEventId:SpliceInsertMessage'] :: SpliceInsertMessage -> Maybe Int

-- | Create a value of <a>SpliceInsertMessage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:availNum:SpliceInsertMessage'</a>,
--   <a>spliceInsertMessage_availNum</a> - This is written to
--   splice_insert.avail_num, as defined in section 9.7.3.1 of the SCTE-35
--   specification. The default value is 0. Values must be between 0 and
--   256, inclusive.
--   
--   <a>$sel:uniqueProgramId:SpliceInsertMessage'</a>,
--   <a>spliceInsertMessage_uniqueProgramId</a> - This is written to
--   splice_insert.unique_program_id, as defined in section 9.7.3.1 of the
--   SCTE-35 specification. The default value is 0. Values must be between
--   0 and 256, inclusive.
--   
--   <a>$sel:availsExpected:SpliceInsertMessage'</a>,
--   <a>spliceInsertMessage_availsExpected</a> - This is written to
--   splice_insert.avails_expected, as defined in section 9.7.3.1 of the
--   SCTE-35 specification. The default value is 0. Values must be between
--   0 and 256, inclusive.
--   
--   <a>$sel:spliceEventId:SpliceInsertMessage'</a>,
--   <a>spliceInsertMessage_spliceEventId</a> - This is written to
--   splice_insert.splice_event_id, as defined in section 9.7.3.1 of the
--   SCTE-35 specification. The default value is 1.
newSpliceInsertMessage :: SpliceInsertMessage

-- | This is written to splice_insert.avail_num, as defined in section
--   9.7.3.1 of the SCTE-35 specification. The default value is 0. Values
--   must be between 0 and 256, inclusive.
spliceInsertMessage_availNum :: Lens' SpliceInsertMessage (Maybe Int)

-- | This is written to splice_insert.unique_program_id, as defined in
--   section 9.7.3.1 of the SCTE-35 specification. The default value is 0.
--   Values must be between 0 and 256, inclusive.
spliceInsertMessage_uniqueProgramId :: Lens' SpliceInsertMessage (Maybe Int)

-- | This is written to splice_insert.avails_expected, as defined in
--   section 9.7.3.1 of the SCTE-35 specification. The default value is 0.
--   Values must be between 0 and 256, inclusive.
spliceInsertMessage_availsExpected :: Lens' SpliceInsertMessage (Maybe Int)

-- | This is written to splice_insert.splice_event_id, as defined in
--   section 9.7.3.1 of the SCTE-35 specification. The default value is 1.
spliceInsertMessage_spliceEventId :: Lens' SpliceInsertMessage (Maybe Int)
instance GHC.Generics.Generic Network.AWS.MediaTailor.Types.SpliceInsertMessage.SpliceInsertMessage
instance GHC.Show.Show Network.AWS.MediaTailor.Types.SpliceInsertMessage.SpliceInsertMessage
instance GHC.Read.Read Network.AWS.MediaTailor.Types.SpliceInsertMessage.SpliceInsertMessage
instance GHC.Classes.Eq Network.AWS.MediaTailor.Types.SpliceInsertMessage.SpliceInsertMessage
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.MediaTailor.Types.SpliceInsertMessage.SpliceInsertMessage
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.Types.SpliceInsertMessage.SpliceInsertMessage
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.Types.SpliceInsertMessage.SpliceInsertMessage
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MediaTailor.Types.SpliceInsertMessage.SpliceInsertMessage


module Network.AWS.MediaTailor.Types.AdBreak

-- | Ad break configuration parameters.
--   
--   <i>See:</i> <a>newAdBreak</a> smart constructor.
data AdBreak
AdBreak' :: Maybe SpliceInsertMessage -> Maybe MessageType -> Maybe SlateSource -> Maybe Integer -> AdBreak

-- | This defines the SCTE-35 splice_insert() message inserted around the
--   ad. For information about using splice_insert(), see the SCTE-35
--   specficiaiton, section 9.7.3.1.
[$sel:spliceInsertMessage:AdBreak'] :: AdBreak -> Maybe SpliceInsertMessage

-- | The SCTE-35 ad insertion type. Accepted value: SPLICE_INSERT.
[$sel:messageType:AdBreak'] :: AdBreak -> Maybe MessageType

-- | Ad break slate configuration.
[$sel:slate:AdBreak'] :: AdBreak -> Maybe SlateSource

-- | How long (in milliseconds) after the beginning of the program that an
--   ad starts. This value must fall within 100ms of a segment boundary,
--   otherwise the ad break will be skipped.
[$sel:offsetMillis:AdBreak'] :: AdBreak -> Maybe Integer

-- | Create a value of <a>AdBreak</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:spliceInsertMessage:AdBreak'</a>,
--   <a>adBreak_spliceInsertMessage</a> - This defines the SCTE-35
--   splice_insert() message inserted around the ad. For information about
--   using splice_insert(), see the SCTE-35 specficiaiton, section 9.7.3.1.
--   
--   <a>$sel:messageType:AdBreak'</a>, <a>adBreak_messageType</a> - The
--   SCTE-35 ad insertion type. Accepted value: SPLICE_INSERT.
--   
--   <a>$sel:slate:AdBreak'</a>, <a>adBreak_slate</a> - Ad break slate
--   configuration.
--   
--   <a>$sel:offsetMillis:AdBreak'</a>, <a>adBreak_offsetMillis</a> - How
--   long (in milliseconds) after the beginning of the program that an ad
--   starts. This value must fall within 100ms of a segment boundary,
--   otherwise the ad break will be skipped.
newAdBreak :: AdBreak

-- | This defines the SCTE-35 splice_insert() message inserted around the
--   ad. For information about using splice_insert(), see the SCTE-35
--   specficiaiton, section 9.7.3.1.
adBreak_spliceInsertMessage :: Lens' AdBreak (Maybe SpliceInsertMessage)

-- | The SCTE-35 ad insertion type. Accepted value: SPLICE_INSERT.
adBreak_messageType :: Lens' AdBreak (Maybe MessageType)

-- | Ad break slate configuration.
adBreak_slate :: Lens' AdBreak (Maybe SlateSource)

-- | How long (in milliseconds) after the beginning of the program that an
--   ad starts. This value must fall within 100ms of a segment boundary,
--   otherwise the ad break will be skipped.
adBreak_offsetMillis :: Lens' AdBreak (Maybe Integer)
instance GHC.Generics.Generic Network.AWS.MediaTailor.Types.AdBreak.AdBreak
instance GHC.Show.Show Network.AWS.MediaTailor.Types.AdBreak.AdBreak
instance GHC.Read.Read Network.AWS.MediaTailor.Types.AdBreak.AdBreak
instance GHC.Classes.Eq Network.AWS.MediaTailor.Types.AdBreak.AdBreak
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.MediaTailor.Types.AdBreak.AdBreak
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.Types.AdBreak.AdBreak
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.Types.AdBreak.AdBreak
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MediaTailor.Types.AdBreak.AdBreak


module Network.AWS.MediaTailor.Types.Transition

-- | Program transition configuration.
--   
--   <i>See:</i> <a>newTransition</a> smart constructor.
data Transition
Transition' :: Maybe Integer -> Maybe Text -> Text -> RelativePosition -> Transition

-- | The date and time that the program is scheduled to start, in epoch
--   milliseconds.
[$sel:scheduledStartTimeMillis:Transition'] :: Transition -> Maybe Integer

-- | The name of the program that this program will be inserted next to, as
--   defined by RelativePosition.
[$sel:relativeProgram:Transition'] :: Transition -> Maybe Text

-- | Defines when the program plays in the schedule. You can set the value
--   to ABSOLUTE or RELATIVE.
--   
--   ABSOLUTE - The program plays at a specific wall clock time. This
--   setting can only be used for channels using the LINEAR PlaybackMode.
--   
--   Note the following considerations when using ABSOLUTE transitions:
--   
--   If the preceding program in the schedule has a duration that extends
--   past the wall clock time, MediaTailor truncates the preceding program
--   on a common segment boundary.
--   
--   If there are gaps in playback, MediaTailor plays the FillerSlate you
--   configured for your linear channel.
--   
--   RELATIVE - The program is inserted into the schedule either before or
--   after a program that you specify via RelativePosition.
[$sel:type':Transition'] :: Transition -> Text

-- | The position where this program will be inserted relative to the
--   RelativePosition.
[$sel:relativePosition:Transition'] :: Transition -> RelativePosition

-- | Create a value of <a>Transition</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:scheduledStartTimeMillis:Transition'</a>,
--   <a>transition_scheduledStartTimeMillis</a> - The date and time that
--   the program is scheduled to start, in epoch milliseconds.
--   
--   <a>$sel:relativeProgram:Transition'</a>,
--   <a>transition_relativeProgram</a> - The name of the program that this
--   program will be inserted next to, as defined by RelativePosition.
--   
--   <a>$sel:type':Transition'</a>, <a>transition_type</a> - Defines when
--   the program plays in the schedule. You can set the value to ABSOLUTE
--   or RELATIVE.
--   
--   ABSOLUTE - The program plays at a specific wall clock time. This
--   setting can only be used for channels using the LINEAR PlaybackMode.
--   
--   Note the following considerations when using ABSOLUTE transitions:
--   
--   If the preceding program in the schedule has a duration that extends
--   past the wall clock time, MediaTailor truncates the preceding program
--   on a common segment boundary.
--   
--   If there are gaps in playback, MediaTailor plays the FillerSlate you
--   configured for your linear channel.
--   
--   RELATIVE - The program is inserted into the schedule either before or
--   after a program that you specify via RelativePosition.
--   
--   <a>$sel:relativePosition:Transition'</a>,
--   <a>transition_relativePosition</a> - The position where this program
--   will be inserted relative to the RelativePosition.
newTransition :: Text -> RelativePosition -> Transition

-- | The date and time that the program is scheduled to start, in epoch
--   milliseconds.
transition_scheduledStartTimeMillis :: Lens' Transition (Maybe Integer)

-- | The name of the program that this program will be inserted next to, as
--   defined by RelativePosition.
transition_relativeProgram :: Lens' Transition (Maybe Text)

-- | Defines when the program plays in the schedule. You can set the value
--   to ABSOLUTE or RELATIVE.
--   
--   ABSOLUTE - The program plays at a specific wall clock time. This
--   setting can only be used for channels using the LINEAR PlaybackMode.
--   
--   Note the following considerations when using ABSOLUTE transitions:
--   
--   If the preceding program in the schedule has a duration that extends
--   past the wall clock time, MediaTailor truncates the preceding program
--   on a common segment boundary.
--   
--   If there are gaps in playback, MediaTailor plays the FillerSlate you
--   configured for your linear channel.
--   
--   RELATIVE - The program is inserted into the schedule either before or
--   after a program that you specify via RelativePosition.
transition_type :: Lens' Transition Text

-- | The position where this program will be inserted relative to the
--   RelativePosition.
transition_relativePosition :: Lens' Transition RelativePosition
instance GHC.Generics.Generic Network.AWS.MediaTailor.Types.Transition.Transition
instance GHC.Show.Show Network.AWS.MediaTailor.Types.Transition.Transition
instance GHC.Read.Read Network.AWS.MediaTailor.Types.Transition.Transition
instance GHC.Classes.Eq Network.AWS.MediaTailor.Types.Transition.Transition
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.Types.Transition.Transition
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.Types.Transition.Transition
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MediaTailor.Types.Transition.Transition


module Network.AWS.MediaTailor.Types.ScheduleConfiguration

-- | Schedule configuration parameters. A channel must be stopped before
--   changes can be made to the schedule.
--   
--   <i>See:</i> <a>newScheduleConfiguration</a> smart constructor.
data ScheduleConfiguration
ScheduleConfiguration' :: Transition -> ScheduleConfiguration

-- | Program transition configurations.
[$sel:transition:ScheduleConfiguration'] :: ScheduleConfiguration -> Transition

-- | Create a value of <a>ScheduleConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:transition:ScheduleConfiguration'</a>,
--   <a>scheduleConfiguration_transition</a> - Program transition
--   configurations.
newScheduleConfiguration :: Transition -> ScheduleConfiguration

-- | Program transition configurations.
scheduleConfiguration_transition :: Lens' ScheduleConfiguration Transition
instance GHC.Generics.Generic Network.AWS.MediaTailor.Types.ScheduleConfiguration.ScheduleConfiguration
instance GHC.Show.Show Network.AWS.MediaTailor.Types.ScheduleConfiguration.ScheduleConfiguration
instance GHC.Read.Read Network.AWS.MediaTailor.Types.ScheduleConfiguration.ScheduleConfiguration
instance GHC.Classes.Eq Network.AWS.MediaTailor.Types.ScheduleConfiguration.ScheduleConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.Types.ScheduleConfiguration.ScheduleConfiguration
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.Types.ScheduleConfiguration.ScheduleConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MediaTailor.Types.ScheduleConfiguration.ScheduleConfiguration


module Network.AWS.MediaTailor.Types.Type
newtype Type
Type' :: Text -> Type
[fromType] :: Type -> Text
pattern Type_DASH :: Type
pattern Type_HLS :: Type
instance Network.AWS.Data.XML.ToXML Network.AWS.MediaTailor.Types.Type.Type
instance Network.AWS.Data.XML.FromXML Network.AWS.MediaTailor.Types.Type.Type
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.MediaTailor.Types.Type.Type
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MediaTailor.Types.Type.Type
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.MediaTailor.Types.Type.Type
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.MediaTailor.Types.Type.Type
instance Network.AWS.Data.Query.ToQuery Network.AWS.MediaTailor.Types.Type.Type
instance Network.AWS.Data.Headers.ToHeader Network.AWS.MediaTailor.Types.Type.Type
instance Network.AWS.Data.Log.ToLog Network.AWS.MediaTailor.Types.Type.Type
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.MediaTailor.Types.Type.Type
instance Network.AWS.Data.Text.ToText Network.AWS.MediaTailor.Types.Type.Type
instance Network.AWS.Data.Text.FromText Network.AWS.MediaTailor.Types.Type.Type
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.Types.Type.Type
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.Types.Type.Type
instance GHC.Generics.Generic Network.AWS.MediaTailor.Types.Type.Type
instance GHC.Classes.Ord Network.AWS.MediaTailor.Types.Type.Type
instance GHC.Classes.Eq Network.AWS.MediaTailor.Types.Type.Type
instance GHC.Read.Read Network.AWS.MediaTailor.Types.Type.Type
instance GHC.Show.Show Network.AWS.MediaTailor.Types.Type.Type


module Network.AWS.MediaTailor.Types.HttpPackageConfiguration

-- | The HTTP package configuration properties for the requested VOD
--   source.
--   
--   <i>See:</i> <a>newHttpPackageConfiguration</a> smart constructor.
data HttpPackageConfiguration
HttpPackageConfiguration' :: Text -> Type -> Text -> HttpPackageConfiguration

-- | The relative path to the URL for this VOD source. This is combined
--   with SourceLocation::HttpConfiguration::BaseUrl to form a valid URL.
[$sel:path:HttpPackageConfiguration'] :: HttpPackageConfiguration -> Text

-- | The streaming protocol for this package configuration. Supported
--   values are HLS and DASH.
[$sel:type':HttpPackageConfiguration'] :: HttpPackageConfiguration -> Type

-- | The name of the source group. This has to match one of the
--   Channel::Outputs::SourceGroup.
[$sel:sourceGroup:HttpPackageConfiguration'] :: HttpPackageConfiguration -> Text

-- | Create a value of <a>HttpPackageConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:path:HttpPackageConfiguration'</a>,
--   <a>httpPackageConfiguration_path</a> - The relative path to the URL
--   for this VOD source. This is combined with
--   SourceLocation::HttpConfiguration::BaseUrl to form a valid URL.
--   
--   <a>$sel:type':HttpPackageConfiguration'</a>,
--   <a>httpPackageConfiguration_type</a> - The streaming protocol for this
--   package configuration. Supported values are HLS and DASH.
--   
--   <a>$sel:sourceGroup:HttpPackageConfiguration'</a>,
--   <a>httpPackageConfiguration_sourceGroup</a> - The name of the source
--   group. This has to match one of the Channel::Outputs::SourceGroup.
newHttpPackageConfiguration :: Text -> Type -> Text -> HttpPackageConfiguration

-- | The relative path to the URL for this VOD source. This is combined
--   with SourceLocation::HttpConfiguration::BaseUrl to form a valid URL.
httpPackageConfiguration_path :: Lens' HttpPackageConfiguration Text

-- | The streaming protocol for this package configuration. Supported
--   values are HLS and DASH.
httpPackageConfiguration_type :: Lens' HttpPackageConfiguration Type

-- | The name of the source group. This has to match one of the
--   Channel::Outputs::SourceGroup.
httpPackageConfiguration_sourceGroup :: Lens' HttpPackageConfiguration Text
instance GHC.Generics.Generic Network.AWS.MediaTailor.Types.HttpPackageConfiguration.HttpPackageConfiguration
instance GHC.Show.Show Network.AWS.MediaTailor.Types.HttpPackageConfiguration.HttpPackageConfiguration
instance GHC.Read.Read Network.AWS.MediaTailor.Types.HttpPackageConfiguration.HttpPackageConfiguration
instance GHC.Classes.Eq Network.AWS.MediaTailor.Types.HttpPackageConfiguration.HttpPackageConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.MediaTailor.Types.HttpPackageConfiguration.HttpPackageConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.Types.HttpPackageConfiguration.HttpPackageConfiguration
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.Types.HttpPackageConfiguration.HttpPackageConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MediaTailor.Types.HttpPackageConfiguration.HttpPackageConfiguration


module Network.AWS.MediaTailor.Types.VodSource

-- | VOD source configuration parameters.
--   
--   <i>See:</i> <a>newVodSource</a> smart constructor.
data VodSource
VodSource' :: Maybe POSIX -> Maybe POSIX -> Maybe (HashMap Text Text) -> Text -> Text -> [HttpPackageConfiguration] -> Text -> VodSource

-- | The timestamp that indicates when the VOD source was created.
[$sel:creationTime:VodSource'] :: VodSource -> Maybe POSIX

-- | The timestamp that indicates when the VOD source was last modified.
[$sel:lastModifiedTime:VodSource'] :: VodSource -> Maybe POSIX

-- | The tags assigned to the VOD source.
[$sel:tags:VodSource'] :: VodSource -> Maybe (HashMap Text Text)

-- | The name of the VOD source.
[$sel:vodSourceName:VodSource'] :: VodSource -> Text

-- | The name of the source location that the VOD source is associated
--   with.
[$sel:sourceLocationName:VodSource'] :: VodSource -> Text

-- | The HTTP package configurations for the VOD source.
[$sel:httpPackageConfigurations:VodSource'] :: VodSource -> [HttpPackageConfiguration]

-- | The ARN for the VOD source.
[$sel:arn:VodSource'] :: VodSource -> Text

-- | Create a value of <a>VodSource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:VodSource'</a>, <a>vodSource_creationTime</a> -
--   The timestamp that indicates when the VOD source was created.
--   
--   <a>$sel:lastModifiedTime:VodSource'</a>,
--   <a>vodSource_lastModifiedTime</a> - The timestamp that indicates when
--   the VOD source was last modified.
--   
--   <a>$sel:tags:VodSource'</a>, <a>vodSource_tags</a> - The tags assigned
--   to the VOD source.
--   
--   <a>$sel:vodSourceName:VodSource'</a>, <a>vodSource_vodSourceName</a> -
--   The name of the VOD source.
--   
--   <a>$sel:sourceLocationName:VodSource'</a>,
--   <a>vodSource_sourceLocationName</a> - The name of the source location
--   that the VOD source is associated with.
--   
--   <a>$sel:httpPackageConfigurations:VodSource'</a>,
--   <a>vodSource_httpPackageConfigurations</a> - The HTTP package
--   configurations for the VOD source.
--   
--   <a>$sel:arn:VodSource'</a>, <a>vodSource_arn</a> - The ARN for the VOD
--   source.
newVodSource :: Text -> Text -> Text -> VodSource

-- | The timestamp that indicates when the VOD source was created.
vodSource_creationTime :: Lens' VodSource (Maybe UTCTime)

-- | The timestamp that indicates when the VOD source was last modified.
vodSource_lastModifiedTime :: Lens' VodSource (Maybe UTCTime)

-- | The tags assigned to the VOD source.
vodSource_tags :: Lens' VodSource (Maybe (HashMap Text Text))

-- | The name of the VOD source.
vodSource_vodSourceName :: Lens' VodSource Text

-- | The name of the source location that the VOD source is associated
--   with.
vodSource_sourceLocationName :: Lens' VodSource Text

-- | The HTTP package configurations for the VOD source.
vodSource_httpPackageConfigurations :: Lens' VodSource [HttpPackageConfiguration]

-- | The ARN for the VOD source.
vodSource_arn :: Lens' VodSource Text
instance GHC.Generics.Generic Network.AWS.MediaTailor.Types.VodSource.VodSource
instance GHC.Show.Show Network.AWS.MediaTailor.Types.VodSource.VodSource
instance GHC.Read.Read Network.AWS.MediaTailor.Types.VodSource.VodSource
instance GHC.Classes.Eq Network.AWS.MediaTailor.Types.VodSource.VodSource
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.MediaTailor.Types.VodSource.VodSource
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.Types.VodSource.VodSource
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.Types.VodSource.VodSource


module Network.AWS.MediaTailor.Types

-- | API version <tt>2018-04-23</tt> of the Amazon MediaTailor SDK
--   configuration.
defaultService :: Service

-- | Invalid request parameters.
_BadRequestException :: AsError a => Getting (First ServiceError) a ServiceError
newtype AccessType
AccessType' :: Text -> AccessType
[fromAccessType] :: AccessType -> Text
pattern AccessType_S3_SIGV4 :: AccessType
pattern AccessType_SECRETS_MANAGER_ACCESS_TOKEN :: AccessType
newtype ChannelState
ChannelState' :: Text -> ChannelState
[fromChannelState] :: ChannelState -> Text
pattern ChannelState_RUNNING :: ChannelState
pattern ChannelState_STOPPED :: ChannelState
newtype MessageType
MessageType' :: Text -> MessageType
[fromMessageType] :: MessageType -> Text
pattern MessageType_SPLICE_INSERT :: MessageType
newtype Mode
Mode' :: Text -> Mode
[fromMode] :: Mode -> Text
pattern Mode_BEHIND_LIVE_EDGE :: Mode
pattern Mode_OFF :: Mode
newtype Operator
Operator' :: Text -> Operator
[fromOperator] :: Operator -> Text
pattern Operator_EQUALS :: Operator
newtype OriginManifestType
OriginManifestType' :: Text -> OriginManifestType
[fromOriginManifestType] :: OriginManifestType -> Text
pattern OriginManifestType_MULTI_PERIOD :: OriginManifestType
pattern OriginManifestType_SINGLE_PERIOD :: OriginManifestType
newtype PlaybackMode
PlaybackMode' :: Text -> PlaybackMode
[fromPlaybackMode] :: PlaybackMode -> Text
pattern PlaybackMode_LINEAR :: PlaybackMode
pattern PlaybackMode_LOOP :: PlaybackMode
newtype RelativePosition
RelativePosition' :: Text -> RelativePosition
[fromRelativePosition] :: RelativePosition -> Text
pattern RelativePosition_AFTER_PROGRAM :: RelativePosition
pattern RelativePosition_BEFORE_PROGRAM :: RelativePosition
newtype ScheduleEntryType
ScheduleEntryType' :: Text -> ScheduleEntryType
[fromScheduleEntryType] :: ScheduleEntryType -> Text
pattern ScheduleEntryType_FILLER_SLATE :: ScheduleEntryType
pattern ScheduleEntryType_PROGRAM :: ScheduleEntryType
newtype Type
Type' :: Text -> Type
[fromType] :: Type -> Text
pattern Type_DASH :: Type
pattern Type_HLS :: Type

-- | Access configuration parameters.
--   
--   <i>See:</i> <a>newAccessConfiguration</a> smart constructor.
data AccessConfiguration
AccessConfiguration' :: Maybe AccessType -> Maybe SecretsManagerAccessTokenConfiguration -> AccessConfiguration

-- | The type of authentication used to access content from
--   HttpConfiguration::BaseUrl on your source location. Accepted value:
--   S3_SIGV4.
--   
--   S3_SIGV4 - AWS Signature Version 4 authentication for Amazon S3 hosted
--   virtual-style access. If your source location base URL is an Amazon S3
--   bucket, MediaTailor can use AWS Signature Version 4 (SigV4)
--   authentication to access the bucket where your source content is
--   stored. Your MediaTailor source location baseURL must follow the S3
--   virtual hosted-style request URL format. For example,
--   https://bucket-name.s3.Region.amazonaws.com/key-name.
--   
--   Before you can use S3_SIGV4, you must meet these requirements:
--   
--   â€¢ You must allow MediaTailor to access your S3 bucket by granting
--   mediatailor.amazonaws.com principal access in IAM. For information
--   about configuring access in IAM, see Access management in the IAM User
--   Guide.
--   
--   â€¢ The mediatailor.amazonaws.com service principal must have
--   permissions to read all top level manifests referenced by the
--   VodSource packaging configurations.
--   
--   â€¢ The caller of the API must have s3:GetObject IAM permissions to read
--   all top level manifests referenced by your MediaTailor VodSource
--   packaging configurations.
[$sel:accessType:AccessConfiguration'] :: AccessConfiguration -> Maybe AccessType

-- | AWS Secrets Manager access token configuration parameters.
[$sel:secretsManagerAccessTokenConfiguration:AccessConfiguration'] :: AccessConfiguration -> Maybe SecretsManagerAccessTokenConfiguration

-- | Create a value of <a>AccessConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accessType:AccessConfiguration'</a>,
--   <a>accessConfiguration_accessType</a> - The type of authentication
--   used to access content from HttpConfiguration::BaseUrl on your source
--   location. Accepted value: S3_SIGV4.
--   
--   S3_SIGV4 - AWS Signature Version 4 authentication for Amazon S3 hosted
--   virtual-style access. If your source location base URL is an Amazon S3
--   bucket, MediaTailor can use AWS Signature Version 4 (SigV4)
--   authentication to access the bucket where your source content is
--   stored. Your MediaTailor source location baseURL must follow the S3
--   virtual hosted-style request URL format. For example,
--   https://bucket-name.s3.Region.amazonaws.com/key-name.
--   
--   Before you can use S3_SIGV4, you must meet these requirements:
--   
--   â€¢ You must allow MediaTailor to access your S3 bucket by granting
--   mediatailor.amazonaws.com principal access in IAM. For information
--   about configuring access in IAM, see Access management in the IAM User
--   Guide.
--   
--   â€¢ The mediatailor.amazonaws.com service principal must have
--   permissions to read all top level manifests referenced by the
--   VodSource packaging configurations.
--   
--   â€¢ The caller of the API must have s3:GetObject IAM permissions to read
--   all top level manifests referenced by your MediaTailor VodSource
--   packaging configurations.
--   
--   
--   <a>$sel:secretsManagerAccessTokenConfiguration:AccessConfiguration'</a>,
--   <a>accessConfiguration_secretsManagerAccessTokenConfiguration</a> -
--   AWS Secrets Manager access token configuration parameters.
newAccessConfiguration :: AccessConfiguration

-- | The type of authentication used to access content from
--   HttpConfiguration::BaseUrl on your source location. Accepted value:
--   S3_SIGV4.
--   
--   S3_SIGV4 - AWS Signature Version 4 authentication for Amazon S3 hosted
--   virtual-style access. If your source location base URL is an Amazon S3
--   bucket, MediaTailor can use AWS Signature Version 4 (SigV4)
--   authentication to access the bucket where your source content is
--   stored. Your MediaTailor source location baseURL must follow the S3
--   virtual hosted-style request URL format. For example,
--   https://bucket-name.s3.Region.amazonaws.com/key-name.
--   
--   Before you can use S3_SIGV4, you must meet these requirements:
--   
--   â€¢ You must allow MediaTailor to access your S3 bucket by granting
--   mediatailor.amazonaws.com principal access in IAM. For information
--   about configuring access in IAM, see Access management in the IAM User
--   Guide.
--   
--   â€¢ The mediatailor.amazonaws.com service principal must have
--   permissions to read all top level manifests referenced by the
--   VodSource packaging configurations.
--   
--   â€¢ The caller of the API must have s3:GetObject IAM permissions to read
--   all top level manifests referenced by your MediaTailor VodSource
--   packaging configurations.
accessConfiguration_accessType :: Lens' AccessConfiguration (Maybe AccessType)

-- | AWS Secrets Manager access token configuration parameters.
accessConfiguration_secretsManagerAccessTokenConfiguration :: Lens' AccessConfiguration (Maybe SecretsManagerAccessTokenConfiguration)

-- | Ad break configuration parameters.
--   
--   <i>See:</i> <a>newAdBreak</a> smart constructor.
data AdBreak
AdBreak' :: Maybe SpliceInsertMessage -> Maybe MessageType -> Maybe SlateSource -> Maybe Integer -> AdBreak

-- | This defines the SCTE-35 splice_insert() message inserted around the
--   ad. For information about using splice_insert(), see the SCTE-35
--   specficiaiton, section 9.7.3.1.
[$sel:spliceInsertMessage:AdBreak'] :: AdBreak -> Maybe SpliceInsertMessage

-- | The SCTE-35 ad insertion type. Accepted value: SPLICE_INSERT.
[$sel:messageType:AdBreak'] :: AdBreak -> Maybe MessageType

-- | Ad break slate configuration.
[$sel:slate:AdBreak'] :: AdBreak -> Maybe SlateSource

-- | How long (in milliseconds) after the beginning of the program that an
--   ad starts. This value must fall within 100ms of a segment boundary,
--   otherwise the ad break will be skipped.
[$sel:offsetMillis:AdBreak'] :: AdBreak -> Maybe Integer

-- | Create a value of <a>AdBreak</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:spliceInsertMessage:AdBreak'</a>,
--   <a>adBreak_spliceInsertMessage</a> - This defines the SCTE-35
--   splice_insert() message inserted around the ad. For information about
--   using splice_insert(), see the SCTE-35 specficiaiton, section 9.7.3.1.
--   
--   <a>$sel:messageType:AdBreak'</a>, <a>adBreak_messageType</a> - The
--   SCTE-35 ad insertion type. Accepted value: SPLICE_INSERT.
--   
--   <a>$sel:slate:AdBreak'</a>, <a>adBreak_slate</a> - Ad break slate
--   configuration.
--   
--   <a>$sel:offsetMillis:AdBreak'</a>, <a>adBreak_offsetMillis</a> - How
--   long (in milliseconds) after the beginning of the program that an ad
--   starts. This value must fall within 100ms of a segment boundary,
--   otherwise the ad break will be skipped.
newAdBreak :: AdBreak

-- | This defines the SCTE-35 splice_insert() message inserted around the
--   ad. For information about using splice_insert(), see the SCTE-35
--   specficiaiton, section 9.7.3.1.
adBreak_spliceInsertMessage :: Lens' AdBreak (Maybe SpliceInsertMessage)

-- | The SCTE-35 ad insertion type. Accepted value: SPLICE_INSERT.
adBreak_messageType :: Lens' AdBreak (Maybe MessageType)

-- | Ad break slate configuration.
adBreak_slate :: Lens' AdBreak (Maybe SlateSource)

-- | How long (in milliseconds) after the beginning of the program that an
--   ad starts. This value must fall within 100ms of a segment boundary,
--   otherwise the ad break will be skipped.
adBreak_offsetMillis :: Lens' AdBreak (Maybe Integer)

-- | For HLS, when set to true, MediaTailor passes through EXT-X-CUE-IN,
--   EXT-X-CUE-OUT, and EXT-X-SPLICEPOINT-SCTE35 ad markers from the origin
--   manifest to the MediaTailor personalized manifest.
--   
--   No logic is applied to these ad markers. For example, if EXT-X-CUE-OUT
--   has a value of 60, but no ads are filled for that ad break,
--   MediaTailor will not set the value to 0.
--   
--   <i>See:</i> <a>newAdMarkerPassthrough</a> smart constructor.
data AdMarkerPassthrough
AdMarkerPassthrough' :: Maybe Bool -> AdMarkerPassthrough

-- | Enables ad marker passthrough for your configuration.
[$sel:enabled:AdMarkerPassthrough'] :: AdMarkerPassthrough -> Maybe Bool

-- | Create a value of <a>AdMarkerPassthrough</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabled:AdMarkerPassthrough'</a>,
--   <a>adMarkerPassthrough_enabled</a> - Enables ad marker passthrough for
--   your configuration.
newAdMarkerPassthrough :: AdMarkerPassthrough

-- | Enables ad marker passthrough for your configuration.
adMarkerPassthrough_enabled :: Lens' AdMarkerPassthrough (Maybe Bool)

-- | Alert configuration parameters.
--   
--   <i>See:</i> <a>newAlert</a> smart constructor.
data Alert
Alert' :: Text -> Text -> POSIX -> [Text] -> Text -> Alert

-- | The Amazon Resource Name (ARN) of the resource.
[$sel:resourceArn:Alert'] :: Alert -> Text

-- | The code for the alert. For example, NOT_PROCESSED.
[$sel:alertCode:Alert'] :: Alert -> Text

-- | The timestamp when the alert was last modified.
[$sel:lastModifiedTime:Alert'] :: Alert -> POSIX

-- | The Amazon Resource Names (ARNs) related to this alert.
[$sel:relatedResourceArns:Alert'] :: Alert -> [Text]

-- | If an alert is generated for a resource, an explanation of the reason
--   for the alert.
[$sel:alertMessage:Alert'] :: Alert -> Text

-- | Create a value of <a>Alert</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:Alert'</a>, <a>alert_resourceArn</a> - The Amazon
--   Resource Name (ARN) of the resource.
--   
--   <a>$sel:alertCode:Alert'</a>, <a>alert_alertCode</a> - The code for
--   the alert. For example, NOT_PROCESSED.
--   
--   <a>$sel:lastModifiedTime:Alert'</a>, <a>alert_lastModifiedTime</a> -
--   The timestamp when the alert was last modified.
--   
--   <a>$sel:relatedResourceArns:Alert'</a>,
--   <a>alert_relatedResourceArns</a> - The Amazon Resource Names (ARNs)
--   related to this alert.
--   
--   <a>$sel:alertMessage:Alert'</a>, <a>alert_alertMessage</a> - If an
--   alert is generated for a resource, an explanation of the reason for
--   the alert.
newAlert :: Text -> Text -> UTCTime -> Text -> Alert

-- | The Amazon Resource Name (ARN) of the resource.
alert_resourceArn :: Lens' Alert Text

-- | The code for the alert. For example, NOT_PROCESSED.
alert_alertCode :: Lens' Alert Text

-- | The timestamp when the alert was last modified.
alert_lastModifiedTime :: Lens' Alert UTCTime

-- | The Amazon Resource Names (ARNs) related to this alert.
alert_relatedResourceArns :: Lens' Alert [Text]

-- | If an alert is generated for a resource, an explanation of the reason
--   for the alert.
alert_alertMessage :: Lens' Alert Text

-- | MediaTailor only places (consumes) prefetched ads if the ad break
--   meets the criteria defined by the dynamic variables. This gives you
--   granular control over which ad break to place the prefetched ads into.
--   
--   As an example, let's say that you set DynamicVariable to scte.event_id
--   and Operator to EQUALS, and your playback configuration has an ADS URL
--   of
--   https://my.ads.server.com/path?&amp;podId=[scte.avail_num]&amp;event=[scte.event_id]&amp;duration=[session.avail_duration_secs].
--   And the prefetch request to the ADS contains these values
--   https://my.ads.server.com/path?&amp;podId=3&amp;event=my-awesome-event&amp;duration=30.
--   MediaTailor will only insert the prefetched ads into the ad break if
--   has a SCTE marker with an event id of my-awesome-event, since it must
--   match the event id that MediaTailor uses to query the ADS.
--   
--   You can specify up to five AvailMatchingCriteria. If you specify
--   multiple AvailMatchingCriteria, MediaTailor combines them to match
--   using a logical AND. You can model logical OR combinations by creating
--   multiple prefetch schedules.
--   
--   <i>See:</i> <a>newAvailMatchingCriteria</a> smart constructor.
data AvailMatchingCriteria
AvailMatchingCriteria' :: Operator -> Text -> AvailMatchingCriteria

-- | For the DynamicVariable specified in AvailMatchingCriteria, the
--   Operator that is used for the comparison.
[$sel:operator:AvailMatchingCriteria'] :: AvailMatchingCriteria -> Operator

-- | The dynamic variable(s) that MediaTailor should use as avail matching
--   criteria. MediaTailor only places the prefetched ads into the avail if
--   the avail matches the criteria defined by the dynamic variable. For
--   information about dynamic variables, see <a>Using dynamic ad
--   variables</a> in the <i>MediaTailor User Guide</i>.
--   
--   You can include up to 100 dynamic variables.
[$sel:dynamicVariable:AvailMatchingCriteria'] :: AvailMatchingCriteria -> Text

-- | Create a value of <a>AvailMatchingCriteria</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:operator:AvailMatchingCriteria'</a>,
--   <a>availMatchingCriteria_operator</a> - For the DynamicVariable
--   specified in AvailMatchingCriteria, the Operator that is used for the
--   comparison.
--   
--   <a>$sel:dynamicVariable:AvailMatchingCriteria'</a>,
--   <a>availMatchingCriteria_dynamicVariable</a> - The dynamic variable(s)
--   that MediaTailor should use as avail matching criteria. MediaTailor
--   only places the prefetched ads into the avail if the avail matches the
--   criteria defined by the dynamic variable. For information about
--   dynamic variables, see <a>Using dynamic ad variables</a> in the
--   <i>MediaTailor User Guide</i>.
--   
--   You can include up to 100 dynamic variables.
newAvailMatchingCriteria :: Operator -> Text -> AvailMatchingCriteria

-- | For the DynamicVariable specified in AvailMatchingCriteria, the
--   Operator that is used for the comparison.
availMatchingCriteria_operator :: Lens' AvailMatchingCriteria Operator

-- | The dynamic variable(s) that MediaTailor should use as avail matching
--   criteria. MediaTailor only places the prefetched ads into the avail if
--   the avail matches the criteria defined by the dynamic variable. For
--   information about dynamic variables, see <a>Using dynamic ad
--   variables</a> in the <i>MediaTailor User Guide</i>.
--   
--   You can include up to 100 dynamic variables.
availMatchingCriteria_dynamicVariable :: Lens' AvailMatchingCriteria Text

-- | The configuration for avail suppression, also known as ad suppression.
--   For more information about ad suppression, see <a>Ad Suppression</a>.
--   
--   <i>See:</i> <a>newAvailSuppression</a> smart constructor.
data AvailSuppression
AvailSuppression' :: Maybe Text -> Maybe Mode -> AvailSuppression

-- | A live edge offset time in HH:MM:SS. MediaTailor won't fill ad breaks
--   on or behind this time in the manifest lookback window. If Value is
--   set to 00:00:00, it is in sync with the live edge, and MediaTailor
--   won't fill any ad breaks on or behind the live edge. If you set a
--   Value time, MediaTailor won't fill any ad breaks on or behind this
--   time in the manifest lookback window. For example, if you set
--   00:45:00, then MediaTailor will fill ad breaks that occur within 45
--   minutes behind the live edge, but won't fill ad breaks on or behind 45
--   minutes behind the live edge.
[$sel:value:AvailSuppression'] :: AvailSuppression -> Maybe Text

-- | Sets the ad suppression mode. By default, ad suppression is off and
--   all ad breaks are filled with ads or slate. When Mode is set to
--   BEHIND_LIVE_EDGE, ad suppression is active and MediaTailor won't fill
--   ad breaks on or behind the ad suppression Value time in the manifest
--   lookback window.
[$sel:mode:AvailSuppression'] :: AvailSuppression -> Maybe Mode

-- | Create a value of <a>AvailSuppression</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:AvailSuppression'</a>, <a>availSuppression_value</a> - A
--   live edge offset time in HH:MM:SS. MediaTailor won't fill ad breaks on
--   or behind this time in the manifest lookback window. If Value is set
--   to 00:00:00, it is in sync with the live edge, and MediaTailor won't
--   fill any ad breaks on or behind the live edge. If you set a Value
--   time, MediaTailor won't fill any ad breaks on or behind this time in
--   the manifest lookback window. For example, if you set 00:45:00, then
--   MediaTailor will fill ad breaks that occur within 45 minutes behind
--   the live edge, but won't fill ad breaks on or behind 45 minutes behind
--   the live edge.
--   
--   <a>$sel:mode:AvailSuppression'</a>, <a>availSuppression_mode</a> -
--   Sets the ad suppression mode. By default, ad suppression is off and
--   all ad breaks are filled with ads or slate. When Mode is set to
--   BEHIND_LIVE_EDGE, ad suppression is active and MediaTailor won't fill
--   ad breaks on or behind the ad suppression Value time in the manifest
--   lookback window.
newAvailSuppression :: AvailSuppression

-- | A live edge offset time in HH:MM:SS. MediaTailor won't fill ad breaks
--   on or behind this time in the manifest lookback window. If Value is
--   set to 00:00:00, it is in sync with the live edge, and MediaTailor
--   won't fill any ad breaks on or behind the live edge. If you set a
--   Value time, MediaTailor won't fill any ad breaks on or behind this
--   time in the manifest lookback window. For example, if you set
--   00:45:00, then MediaTailor will fill ad breaks that occur within 45
--   minutes behind the live edge, but won't fill ad breaks on or behind 45
--   minutes behind the live edge.
availSuppression_value :: Lens' AvailSuppression (Maybe Text)

-- | Sets the ad suppression mode. By default, ad suppression is off and
--   all ad breaks are filled with ads or slate. When Mode is set to
--   BEHIND_LIVE_EDGE, ad suppression is active and MediaTailor won't fill
--   ad breaks on or behind the ad suppression Value time in the manifest
--   lookback window.
availSuppression_mode :: Lens' AvailSuppression (Maybe Mode)

-- | The configuration for bumpers. Bumpers are short audio or video clips
--   that play at the start or before the end of an ad break. To learn more
--   about bumpers, see <a>Bumpers</a>.
--   
--   <i>See:</i> <a>newBumper</a> smart constructor.
data Bumper
Bumper' :: Maybe Text -> Maybe Text -> Bumper

-- | The URL for the end bumper asset.
[$sel:endUrl:Bumper'] :: Bumper -> Maybe Text

-- | The URL for the start bumper asset.
[$sel:startUrl:Bumper'] :: Bumper -> Maybe Text

-- | Create a value of <a>Bumper</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:endUrl:Bumper'</a>, <a>bumper_endUrl</a> - The URL for the end
--   bumper asset.
--   
--   <a>$sel:startUrl:Bumper'</a>, <a>bumper_startUrl</a> - The URL for the
--   start bumper asset.
newBumper :: Bumper

-- | The URL for the end bumper asset.
bumper_endUrl :: Lens' Bumper (Maybe Text)

-- | The URL for the start bumper asset.
bumper_startUrl :: Lens' Bumper (Maybe Text)

-- | The configuration for using a content delivery network (CDN), like
--   Amazon CloudFront, for content and ad segment management.
--   
--   <i>See:</i> <a>newCdnConfiguration</a> smart constructor.
data CdnConfiguration
CdnConfiguration' :: Maybe Text -> Maybe Text -> CdnConfiguration

-- | A non-default content delivery network (CDN) to serve ad segments. By
--   default, AWS Elemental MediaTailor uses Amazon CloudFront with default
--   cache settings as its CDN for ad segments. To set up an alternate CDN,
--   create a rule in your CDN for the origin
--   ads.mediatailor.&amp;lt;region&gt;.amazonaws.com. Then specify the
--   rule's name in this AdSegmentUrlPrefix. When AWS Elemental MediaTailor
--   serves a manifest, it reports your CDN as the source for ad segments.
[$sel:adSegmentUrlPrefix:CdnConfiguration'] :: CdnConfiguration -> Maybe Text

-- | A content delivery network (CDN) to cache content segments, so that
--   content requests donâ€™t always have to go to the origin server. First,
--   create a rule in your CDN for the content segment origin server. Then
--   specify the rule's name in this ContentSegmentUrlPrefix. When AWS
--   Elemental MediaTailor serves a manifest, it reports your CDN as the
--   source for content segments.
[$sel:contentSegmentUrlPrefix:CdnConfiguration'] :: CdnConfiguration -> Maybe Text

-- | Create a value of <a>CdnConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:adSegmentUrlPrefix:CdnConfiguration'</a>,
--   <a>cdnConfiguration_adSegmentUrlPrefix</a> - A non-default content
--   delivery network (CDN) to serve ad segments. By default, AWS Elemental
--   MediaTailor uses Amazon CloudFront with default cache settings as its
--   CDN for ad segments. To set up an alternate CDN, create a rule in your
--   CDN for the origin ads.mediatailor.&amp;lt;region&gt;.amazonaws.com.
--   Then specify the rule's name in this AdSegmentUrlPrefix. When AWS
--   Elemental MediaTailor serves a manifest, it reports your CDN as the
--   source for ad segments.
--   
--   <a>$sel:contentSegmentUrlPrefix:CdnConfiguration'</a>,
--   <a>cdnConfiguration_contentSegmentUrlPrefix</a> - A content delivery
--   network (CDN) to cache content segments, so that content requests
--   donâ€™t always have to go to the origin server. First, create a rule in
--   your CDN for the content segment origin server. Then specify the
--   rule's name in this ContentSegmentUrlPrefix. When AWS Elemental
--   MediaTailor serves a manifest, it reports your CDN as the source for
--   content segments.
newCdnConfiguration :: CdnConfiguration

-- | A non-default content delivery network (CDN) to serve ad segments. By
--   default, AWS Elemental MediaTailor uses Amazon CloudFront with default
--   cache settings as its CDN for ad segments. To set up an alternate CDN,
--   create a rule in your CDN for the origin
--   ads.mediatailor.&amp;lt;region&gt;.amazonaws.com. Then specify the
--   rule's name in this AdSegmentUrlPrefix. When AWS Elemental MediaTailor
--   serves a manifest, it reports your CDN as the source for ad segments.
cdnConfiguration_adSegmentUrlPrefix :: Lens' CdnConfiguration (Maybe Text)

-- | A content delivery network (CDN) to cache content segments, so that
--   content requests donâ€™t always have to go to the origin server. First,
--   create a rule in your CDN for the content segment origin server. Then
--   specify the rule's name in this ContentSegmentUrlPrefix. When AWS
--   Elemental MediaTailor serves a manifest, it reports your CDN as the
--   source for content segments.
cdnConfiguration_contentSegmentUrlPrefix :: Lens' CdnConfiguration (Maybe Text)

-- | The configuration parameters for a channel.
--   
--   <i>See:</i> <a>newChannel</a> smart constructor.
data Channel
Channel' :: Maybe POSIX -> Maybe POSIX -> Maybe SlateSource -> Maybe (HashMap Text Text) -> Text -> Text -> [ResponseOutputItem] -> Text -> Text -> Channel

-- | The timestamp of when the channel was created.
[$sel:creationTime:Channel'] :: Channel -> Maybe POSIX

-- | The timestamp of when the channel was last modified.
[$sel:lastModifiedTime:Channel'] :: Channel -> Maybe POSIX

-- | Contains information about the slate used to fill gaps between
--   programs in the schedule. You must configure FillerSlate if your
--   channel uses an LINEAR PlaybackMode.
[$sel:fillerSlate:Channel'] :: Channel -> Maybe SlateSource

-- | The tags to assign to the channel.
[$sel:tags:Channel'] :: Channel -> Maybe (HashMap Text Text)

-- | Returns the state whether the channel is running or not.
[$sel:channelState:Channel'] :: Channel -> Text

-- | The name of the channel.
[$sel:channelName:Channel'] :: Channel -> Text

-- | The channel's output properties.
[$sel:outputs:Channel'] :: Channel -> [ResponseOutputItem]

-- | The ARN of the channel.
[$sel:arn:Channel'] :: Channel -> Text

-- | The type of playback mode for this channel.
--   
--   LINEAR - Programs play back-to-back only once.
--   
--   LOOP - Programs play back-to-back in an endless loop. When the last
--   program in the schedule plays, playback loops back to the first
--   program in the schedule.
[$sel:playbackMode:Channel'] :: Channel -> Text

-- | Create a value of <a>Channel</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:Channel'</a>, <a>channel_creationTime</a> - The
--   timestamp of when the channel was created.
--   
--   <a>$sel:lastModifiedTime:Channel'</a>, <a>channel_lastModifiedTime</a>
--   - The timestamp of when the channel was last modified.
--   
--   <a>$sel:fillerSlate:Channel'</a>, <a>channel_fillerSlate</a> -
--   Contains information about the slate used to fill gaps between
--   programs in the schedule. You must configure FillerSlate if your
--   channel uses an LINEAR PlaybackMode.
--   
--   <a>$sel:tags:Channel'</a>, <a>channel_tags</a> - The tags to assign to
--   the channel.
--   
--   <a>$sel:channelState:Channel'</a>, <a>channel_channelState</a> -
--   Returns the state whether the channel is running or not.
--   
--   <a>$sel:channelName:Channel'</a>, <a>channel_channelName</a> - The
--   name of the channel.
--   
--   <a>$sel:outputs:Channel'</a>, <a>channel_outputs</a> - The channel's
--   output properties.
--   
--   <a>$sel:arn:Channel'</a>, <a>channel_arn</a> - The ARN of the channel.
--   
--   <a>$sel:playbackMode:Channel'</a>, <a>channel_playbackMode</a> - The
--   type of playback mode for this channel.
--   
--   LINEAR - Programs play back-to-back only once.
--   
--   LOOP - Programs play back-to-back in an endless loop. When the last
--   program in the schedule plays, playback loops back to the first
--   program in the schedule.
newChannel :: Text -> Text -> Text -> Text -> Channel

-- | The timestamp of when the channel was created.
channel_creationTime :: Lens' Channel (Maybe UTCTime)

-- | The timestamp of when the channel was last modified.
channel_lastModifiedTime :: Lens' Channel (Maybe UTCTime)

-- | Contains information about the slate used to fill gaps between
--   programs in the schedule. You must configure FillerSlate if your
--   channel uses an LINEAR PlaybackMode.
channel_fillerSlate :: Lens' Channel (Maybe SlateSource)

-- | The tags to assign to the channel.
channel_tags :: Lens' Channel (Maybe (HashMap Text Text))

-- | Returns the state whether the channel is running or not.
channel_channelState :: Lens' Channel Text

-- | The name of the channel.
channel_channelName :: Lens' Channel Text

-- | The channel's output properties.
channel_outputs :: Lens' Channel [ResponseOutputItem]

-- | The ARN of the channel.
channel_arn :: Lens' Channel Text

-- | The type of playback mode for this channel.
--   
--   LINEAR - Programs play back-to-back only once.
--   
--   LOOP - Programs play back-to-back in an endless loop. When the last
--   program in the schedule plays, playback loops back to the first
--   program in the schedule.
channel_playbackMode :: Lens' Channel Text

-- | The configuration for DASH content.
--   
--   <i>See:</i> <a>newDashConfiguration</a> smart constructor.
data DashConfiguration
DashConfiguration' :: Maybe Text -> Maybe OriginManifestType -> Maybe Text -> DashConfiguration

-- | The URL generated by MediaTailor to initiate a playback session. The
--   session uses server-side reporting. This setting is ignored in PUT
--   operations.
[$sel:manifestEndpointPrefix:DashConfiguration'] :: DashConfiguration -> Maybe Text

-- | The setting that controls whether MediaTailor handles manifests from
--   the origin server as multi-period manifests or single-period
--   manifests. If your origin server produces single-period manifests, set
--   this to SINGLE_PERIOD. The default setting is MULTI_PERIOD. For
--   multi-period manifests, omit this setting or set it to MULTI_PERIOD.
[$sel:originManifestType:DashConfiguration'] :: DashConfiguration -> Maybe OriginManifestType

-- | The setting that controls whether MediaTailor includes the Location
--   tag in DASH manifests. MediaTailor populates the Location tag with the
--   URL for manifest update requests, to be used by players that don't
--   support sticky redirects. Disable this if you have CDN routing rules
--   set up for accessing MediaTailor manifests, and you are either using
--   client-side reporting or your players support sticky HTTP redirects.
--   Valid values are DISABLED and EMT_DEFAULT. The EMT_DEFAULT setting
--   enables the inclusion of the tag and is the default value.
[$sel:mpdLocation:DashConfiguration'] :: DashConfiguration -> Maybe Text

-- | Create a value of <a>DashConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:manifestEndpointPrefix:DashConfiguration'</a>,
--   <a>dashConfiguration_manifestEndpointPrefix</a> - The URL generated by
--   MediaTailor to initiate a playback session. The session uses
--   server-side reporting. This setting is ignored in PUT operations.
--   
--   <a>$sel:originManifestType:DashConfiguration'</a>,
--   <a>dashConfiguration_originManifestType</a> - The setting that
--   controls whether MediaTailor handles manifests from the origin server
--   as multi-period manifests or single-period manifests. If your origin
--   server produces single-period manifests, set this to SINGLE_PERIOD.
--   The default setting is MULTI_PERIOD. For multi-period manifests, omit
--   this setting or set it to MULTI_PERIOD.
--   
--   <a>$sel:mpdLocation:DashConfiguration'</a>,
--   <a>dashConfiguration_mpdLocation</a> - The setting that controls
--   whether MediaTailor includes the Location tag in DASH manifests.
--   MediaTailor populates the Location tag with the URL for manifest
--   update requests, to be used by players that don't support sticky
--   redirects. Disable this if you have CDN routing rules set up for
--   accessing MediaTailor manifests, and you are either using client-side
--   reporting or your players support sticky HTTP redirects. Valid values
--   are DISABLED and EMT_DEFAULT. The EMT_DEFAULT setting enables the
--   inclusion of the tag and is the default value.
newDashConfiguration :: DashConfiguration

-- | The URL generated by MediaTailor to initiate a playback session. The
--   session uses server-side reporting. This setting is ignored in PUT
--   operations.
dashConfiguration_manifestEndpointPrefix :: Lens' DashConfiguration (Maybe Text)

-- | The setting that controls whether MediaTailor handles manifests from
--   the origin server as multi-period manifests or single-period
--   manifests. If your origin server produces single-period manifests, set
--   this to SINGLE_PERIOD. The default setting is MULTI_PERIOD. For
--   multi-period manifests, omit this setting or set it to MULTI_PERIOD.
dashConfiguration_originManifestType :: Lens' DashConfiguration (Maybe OriginManifestType)

-- | The setting that controls whether MediaTailor includes the Location
--   tag in DASH manifests. MediaTailor populates the Location tag with the
--   URL for manifest update requests, to be used by players that don't
--   support sticky redirects. Disable this if you have CDN routing rules
--   set up for accessing MediaTailor manifests, and you are either using
--   client-side reporting or your players support sticky HTTP redirects.
--   Valid values are DISABLED and EMT_DEFAULT. The EMT_DEFAULT setting
--   enables the inclusion of the tag and is the default value.
dashConfiguration_mpdLocation :: Lens' DashConfiguration (Maybe Text)

-- | The configuration for DASH PUT operations.
--   
--   <i>See:</i> <a>newDashConfigurationForPut</a> smart constructor.
data DashConfigurationForPut
DashConfigurationForPut' :: Maybe OriginManifestType -> Maybe Text -> DashConfigurationForPut

-- | The setting that controls whether MediaTailor handles manifests from
--   the origin server as multi-period manifests or single-period
--   manifests. If your origin server produces single-period manifests, set
--   this to SINGLE_PERIOD. The default setting is MULTI_PERIOD. For
--   multi-period manifests, omit this setting or set it to MULTI_PERIOD.
[$sel:originManifestType:DashConfigurationForPut'] :: DashConfigurationForPut -> Maybe OriginManifestType

-- | The setting that controls whether MediaTailor includes the Location
--   tag in DASH manifests. MediaTailor populates the Location tag with the
--   URL for manifest update requests, to be used by players that don't
--   support sticky redirects. Disable this if you have CDN routing rules
--   set up for accessing MediaTailor manifests, and you are either using
--   client-side reporting or your players support sticky HTTP redirects.
--   Valid values are DISABLED and EMT_DEFAULT. The EMT_DEFAULT setting
--   enables the inclusion of the tag and is the default value.
[$sel:mpdLocation:DashConfigurationForPut'] :: DashConfigurationForPut -> Maybe Text

-- | Create a value of <a>DashConfigurationForPut</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:originManifestType:DashConfigurationForPut'</a>,
--   <a>dashConfigurationForPut_originManifestType</a> - The setting that
--   controls whether MediaTailor handles manifests from the origin server
--   as multi-period manifests or single-period manifests. If your origin
--   server produces single-period manifests, set this to SINGLE_PERIOD.
--   The default setting is MULTI_PERIOD. For multi-period manifests, omit
--   this setting or set it to MULTI_PERIOD.
--   
--   <a>$sel:mpdLocation:DashConfigurationForPut'</a>,
--   <a>dashConfigurationForPut_mpdLocation</a> - The setting that controls
--   whether MediaTailor includes the Location tag in DASH manifests.
--   MediaTailor populates the Location tag with the URL for manifest
--   update requests, to be used by players that don't support sticky
--   redirects. Disable this if you have CDN routing rules set up for
--   accessing MediaTailor manifests, and you are either using client-side
--   reporting or your players support sticky HTTP redirects. Valid values
--   are DISABLED and EMT_DEFAULT. The EMT_DEFAULT setting enables the
--   inclusion of the tag and is the default value.
newDashConfigurationForPut :: DashConfigurationForPut

-- | The setting that controls whether MediaTailor handles manifests from
--   the origin server as multi-period manifests or single-period
--   manifests. If your origin server produces single-period manifests, set
--   this to SINGLE_PERIOD. The default setting is MULTI_PERIOD. For
--   multi-period manifests, omit this setting or set it to MULTI_PERIOD.
dashConfigurationForPut_originManifestType :: Lens' DashConfigurationForPut (Maybe OriginManifestType)

-- | The setting that controls whether MediaTailor includes the Location
--   tag in DASH manifests. MediaTailor populates the Location tag with the
--   URL for manifest update requests, to be used by players that don't
--   support sticky redirects. Disable this if you have CDN routing rules
--   set up for accessing MediaTailor manifests, and you are either using
--   client-side reporting or your players support sticky HTTP redirects.
--   Valid values are DISABLED and EMT_DEFAULT. The EMT_DEFAULT setting
--   enables the inclusion of the tag and is the default value.
dashConfigurationForPut_mpdLocation :: Lens' DashConfigurationForPut (Maybe Text)

-- | Dash manifest configuration parameters.
--   
--   <i>See:</i> <a>newDashPlaylistSettings</a> smart constructor.
data DashPlaylistSettings
DashPlaylistSettings' :: Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> DashPlaylistSettings

-- | Minimum amount of content (measured in seconds) that a player must
--   keep available in the buffer. Minimum value: 2 seconds. Maximum value:
--   60 seconds.
[$sel:minBufferTimeSeconds:DashPlaylistSettings'] :: DashPlaylistSettings -> Maybe Int

-- | Minimum amount of time (in seconds) that the player should wait before
--   requesting updates to the manifest. Minimum value: 2 seconds. Maximum
--   value: 60 seconds.
[$sel:minUpdatePeriodSeconds:DashPlaylistSettings'] :: DashPlaylistSettings -> Maybe Int

-- | Amount of time (in seconds) that the player should be from the live
--   point at the end of the manifest. Minimum value: 2 seconds. Maximum
--   value: 60 seconds.
[$sel:suggestedPresentationDelaySeconds:DashPlaylistSettings'] :: DashPlaylistSettings -> Maybe Int

-- | The total duration (in seconds) of each manifest. Minimum value: 30
--   seconds. Maximum value: 3600 seconds.
[$sel:manifestWindowSeconds:DashPlaylistSettings'] :: DashPlaylistSettings -> Maybe Int

-- | Create a value of <a>DashPlaylistSettings</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:minBufferTimeSeconds:DashPlaylistSettings'</a>,
--   <a>dashPlaylistSettings_minBufferTimeSeconds</a> - Minimum amount of
--   content (measured in seconds) that a player must keep available in the
--   buffer. Minimum value: 2 seconds. Maximum value: 60 seconds.
--   
--   <a>$sel:minUpdatePeriodSeconds:DashPlaylistSettings'</a>,
--   <a>dashPlaylistSettings_minUpdatePeriodSeconds</a> - Minimum amount of
--   time (in seconds) that the player should wait before requesting
--   updates to the manifest. Minimum value: 2 seconds. Maximum value: 60
--   seconds.
--   
--   <a>$sel:suggestedPresentationDelaySeconds:DashPlaylistSettings'</a>,
--   <a>dashPlaylistSettings_suggestedPresentationDelaySeconds</a> - Amount
--   of time (in seconds) that the player should be from the live point at
--   the end of the manifest. Minimum value: 2 seconds. Maximum value: 60
--   seconds.
--   
--   <a>$sel:manifestWindowSeconds:DashPlaylistSettings'</a>,
--   <a>dashPlaylistSettings_manifestWindowSeconds</a> - The total duration
--   (in seconds) of each manifest. Minimum value: 30 seconds. Maximum
--   value: 3600 seconds.
newDashPlaylistSettings :: DashPlaylistSettings

-- | Minimum amount of content (measured in seconds) that a player must
--   keep available in the buffer. Minimum value: 2 seconds. Maximum value:
--   60 seconds.
dashPlaylistSettings_minBufferTimeSeconds :: Lens' DashPlaylistSettings (Maybe Int)

-- | Minimum amount of time (in seconds) that the player should wait before
--   requesting updates to the manifest. Minimum value: 2 seconds. Maximum
--   value: 60 seconds.
dashPlaylistSettings_minUpdatePeriodSeconds :: Lens' DashPlaylistSettings (Maybe Int)

-- | Amount of time (in seconds) that the player should be from the live
--   point at the end of the manifest. Minimum value: 2 seconds. Maximum
--   value: 60 seconds.
dashPlaylistSettings_suggestedPresentationDelaySeconds :: Lens' DashPlaylistSettings (Maybe Int)

-- | The total duration (in seconds) of each manifest. Minimum value: 30
--   seconds. Maximum value: 3600 seconds.
dashPlaylistSettings_manifestWindowSeconds :: Lens' DashPlaylistSettings (Maybe Int)

-- | The optional configuration for a server that serves segments. Use this
--   if you want the segment delivery server to be different from the
--   source location server. For example, you can configure your source
--   location server to be an origination server, such as MediaPackage, and
--   the segment delivery server to be a content delivery network (CDN),
--   such as CloudFront. If you don't specify a segment delivery server,
--   then the source location server is used.
--   
--   <i>See:</i> <a>newDefaultSegmentDeliveryConfiguration</a> smart
--   constructor.
data DefaultSegmentDeliveryConfiguration
DefaultSegmentDeliveryConfiguration' :: Maybe Text -> DefaultSegmentDeliveryConfiguration

-- | The hostname of the server that will be used to serve segments. This
--   string must include the protocol, such as <b>https://</b>.
[$sel:baseUrl:DefaultSegmentDeliveryConfiguration'] :: DefaultSegmentDeliveryConfiguration -> Maybe Text

-- | Create a value of <a>DefaultSegmentDeliveryConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:baseUrl:DefaultSegmentDeliveryConfiguration'</a>,
--   <a>defaultSegmentDeliveryConfiguration_baseUrl</a> - The hostname of
--   the server that will be used to serve segments. This string must
--   include the protocol, such as <b>https://</b>.
newDefaultSegmentDeliveryConfiguration :: DefaultSegmentDeliveryConfiguration

-- | The hostname of the server that will be used to serve segments. This
--   string must include the protocol, such as <b>https://</b>.
defaultSegmentDeliveryConfiguration_baseUrl :: Lens' DefaultSegmentDeliveryConfiguration (Maybe Text)

-- | The configuration for HLS content.
--   
--   <i>See:</i> <a>newHlsConfiguration</a> smart constructor.
data HlsConfiguration
HlsConfiguration' :: Maybe Text -> HlsConfiguration

-- | The URL that is used to initiate a playback session for devices that
--   support Apple HLS. The session uses server-side reporting.
[$sel:manifestEndpointPrefix:HlsConfiguration'] :: HlsConfiguration -> Maybe Text

-- | Create a value of <a>HlsConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:manifestEndpointPrefix:HlsConfiguration'</a>,
--   <a>hlsConfiguration_manifestEndpointPrefix</a> - The URL that is used
--   to initiate a playback session for devices that support Apple HLS. The
--   session uses server-side reporting.
newHlsConfiguration :: HlsConfiguration

-- | The URL that is used to initiate a playback session for devices that
--   support Apple HLS. The session uses server-side reporting.
hlsConfiguration_manifestEndpointPrefix :: Lens' HlsConfiguration (Maybe Text)

-- | HLS playlist configuration parameters.
--   
--   <i>See:</i> <a>newHlsPlaylistSettings</a> smart constructor.
data HlsPlaylistSettings
HlsPlaylistSettings' :: Maybe Int -> HlsPlaylistSettings

-- | The total duration (in seconds) of each manifest. Minimum value: 30
--   seconds. Maximum value: 3600 seconds.
[$sel:manifestWindowSeconds:HlsPlaylistSettings'] :: HlsPlaylistSettings -> Maybe Int

-- | Create a value of <a>HlsPlaylistSettings</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:manifestWindowSeconds:HlsPlaylistSettings'</a>,
--   <a>hlsPlaylistSettings_manifestWindowSeconds</a> - The total duration
--   (in seconds) of each manifest. Minimum value: 30 seconds. Maximum
--   value: 3600 seconds.
newHlsPlaylistSettings :: HlsPlaylistSettings

-- | The total duration (in seconds) of each manifest. Minimum value: 30
--   seconds. Maximum value: 3600 seconds.
hlsPlaylistSettings_manifestWindowSeconds :: Lens' HlsPlaylistSettings (Maybe Int)

-- | The HTTP configuration for the source location.
--   
--   <i>See:</i> <a>newHttpConfiguration</a> smart constructor.
data HttpConfiguration
HttpConfiguration' :: Text -> HttpConfiguration

-- | The base URL for the source location host server. This string must
--   include the protocol, such as <b>https://</b>.
[$sel:baseUrl:HttpConfiguration'] :: HttpConfiguration -> Text

-- | Create a value of <a>HttpConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:baseUrl:HttpConfiguration'</a>,
--   <a>httpConfiguration_baseUrl</a> - The base URL for the source
--   location host server. This string must include the protocol, such as
--   <b>https://</b>.
newHttpConfiguration :: Text -> HttpConfiguration

-- | The base URL for the source location host server. This string must
--   include the protocol, such as <b>https://</b>.
httpConfiguration_baseUrl :: Lens' HttpConfiguration Text

-- | The HTTP package configuration properties for the requested VOD
--   source.
--   
--   <i>See:</i> <a>newHttpPackageConfiguration</a> smart constructor.
data HttpPackageConfiguration
HttpPackageConfiguration' :: Text -> Type -> Text -> HttpPackageConfiguration

-- | The relative path to the URL for this VOD source. This is combined
--   with SourceLocation::HttpConfiguration::BaseUrl to form a valid URL.
[$sel:path:HttpPackageConfiguration'] :: HttpPackageConfiguration -> Text

-- | The streaming protocol for this package configuration. Supported
--   values are HLS and DASH.
[$sel:type':HttpPackageConfiguration'] :: HttpPackageConfiguration -> Type

-- | The name of the source group. This has to match one of the
--   Channel::Outputs::SourceGroup.
[$sel:sourceGroup:HttpPackageConfiguration'] :: HttpPackageConfiguration -> Text

-- | Create a value of <a>HttpPackageConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:path:HttpPackageConfiguration'</a>,
--   <a>httpPackageConfiguration_path</a> - The relative path to the URL
--   for this VOD source. This is combined with
--   SourceLocation::HttpConfiguration::BaseUrl to form a valid URL.
--   
--   <a>$sel:type':HttpPackageConfiguration'</a>,
--   <a>httpPackageConfiguration_type</a> - The streaming protocol for this
--   package configuration. Supported values are HLS and DASH.
--   
--   <a>$sel:sourceGroup:HttpPackageConfiguration'</a>,
--   <a>httpPackageConfiguration_sourceGroup</a> - The name of the source
--   group. This has to match one of the Channel::Outputs::SourceGroup.
newHttpPackageConfiguration :: Text -> Type -> Text -> HttpPackageConfiguration

-- | The relative path to the URL for this VOD source. This is combined
--   with SourceLocation::HttpConfiguration::BaseUrl to form a valid URL.
httpPackageConfiguration_path :: Lens' HttpPackageConfiguration Text

-- | The streaming protocol for this package configuration. Supported
--   values are HLS and DASH.
httpPackageConfiguration_type :: Lens' HttpPackageConfiguration Type

-- | The name of the source group. This has to match one of the
--   Channel::Outputs::SourceGroup.
httpPackageConfiguration_sourceGroup :: Lens' HttpPackageConfiguration Text

-- | The configuration for pre-roll ad insertion.
--   
--   <i>See:</i> <a>newLivePreRollConfiguration</a> smart constructor.
data LivePreRollConfiguration
LivePreRollConfiguration' :: Maybe Text -> Maybe Int -> LivePreRollConfiguration

-- | The URL for the ad decision server (ADS) for pre-roll ads. This
--   includes the specification of static parameters and placeholders for
--   dynamic parameters. AWS Elemental MediaTailor substitutes
--   player-specific and session-specific parameters as needed when calling
--   the ADS. Alternately, for testing, you can provide a static VAST URL.
--   The maximum length is 25,000 characters.
[$sel:adDecisionServerUrl:LivePreRollConfiguration'] :: LivePreRollConfiguration -> Maybe Text

-- | The maximum allowed duration for the pre-roll ad avail. AWS Elemental
--   MediaTailor won't play pre-roll ads to exceed this duration,
--   regardless of the total duration of ads that the ADS returns.
[$sel:maxDurationSeconds:LivePreRollConfiguration'] :: LivePreRollConfiguration -> Maybe Int

-- | Create a value of <a>LivePreRollConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:adDecisionServerUrl:LivePreRollConfiguration'</a>,
--   <a>livePreRollConfiguration_adDecisionServerUrl</a> - The URL for the
--   ad decision server (ADS) for pre-roll ads. This includes the
--   specification of static parameters and placeholders for dynamic
--   parameters. AWS Elemental MediaTailor substitutes player-specific and
--   session-specific parameters as needed when calling the ADS.
--   Alternately, for testing, you can provide a static VAST URL. The
--   maximum length is 25,000 characters.
--   
--   <a>$sel:maxDurationSeconds:LivePreRollConfiguration'</a>,
--   <a>livePreRollConfiguration_maxDurationSeconds</a> - The maximum
--   allowed duration for the pre-roll ad avail. AWS Elemental MediaTailor
--   won't play pre-roll ads to exceed this duration, regardless of the
--   total duration of ads that the ADS returns.
newLivePreRollConfiguration :: LivePreRollConfiguration

-- | The URL for the ad decision server (ADS) for pre-roll ads. This
--   includes the specification of static parameters and placeholders for
--   dynamic parameters. AWS Elemental MediaTailor substitutes
--   player-specific and session-specific parameters as needed when calling
--   the ADS. Alternately, for testing, you can provide a static VAST URL.
--   The maximum length is 25,000 characters.
livePreRollConfiguration_adDecisionServerUrl :: Lens' LivePreRollConfiguration (Maybe Text)

-- | The maximum allowed duration for the pre-roll ad avail. AWS Elemental
--   MediaTailor won't play pre-roll ads to exceed this duration,
--   regardless of the total duration of ads that the ADS returns.
livePreRollConfiguration_maxDurationSeconds :: Lens' LivePreRollConfiguration (Maybe Int)

-- | Returns Amazon CloudWatch log settings for a playback configuration.
--   
--   <i>See:</i> <a>newLogConfiguration</a> smart constructor.
data LogConfiguration
LogConfiguration' :: Int -> LogConfiguration

-- | The percentage of session logs that MediaTailor sends to your
--   Cloudwatch Logs account. For example, if your playback configuration
--   has 1000 sessions and percentEnabled is set to 60, MediaTailor sends
--   logs for 600 of the sessions to CloudWatch Logs. MediaTailor decides
--   at random which of the playback configuration sessions to send logs
--   for. If you want to view logs for a specific session, you can use the
--   <a>debug log mode</a>.
--   
--   Valid values: 0 - 100
[$sel:percentEnabled:LogConfiguration'] :: LogConfiguration -> Int

-- | Create a value of <a>LogConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:percentEnabled:LogConfiguration'</a>,
--   <a>logConfiguration_percentEnabled</a> - The percentage of session
--   logs that MediaTailor sends to your Cloudwatch Logs account. For
--   example, if your playback configuration has 1000 sessions and
--   percentEnabled is set to 60, MediaTailor sends logs for 600 of the
--   sessions to CloudWatch Logs. MediaTailor decides at random which of
--   the playback configuration sessions to send logs for. If you want to
--   view logs for a specific session, you can use the <a>debug log
--   mode</a>.
--   
--   Valid values: 0 - 100
newLogConfiguration :: Int -> LogConfiguration

-- | The percentage of session logs that MediaTailor sends to your
--   Cloudwatch Logs account. For example, if your playback configuration
--   has 1000 sessions and percentEnabled is set to 60, MediaTailor sends
--   logs for 600 of the sessions to CloudWatch Logs. MediaTailor decides
--   at random which of the playback configuration sessions to send logs
--   for. If you want to view logs for a specific session, you can use the
--   <a>debug log mode</a>.
--   
--   Valid values: 0 - 100
logConfiguration_percentEnabled :: Lens' LogConfiguration Int

-- | The configuration for manifest processing rules. Manifest processing
--   rules enable customization of the personalized manifests created by
--   MediaTailor.
--   
--   <i>See:</i> <a>newManifestProcessingRules</a> smart constructor.
data ManifestProcessingRules
ManifestProcessingRules' :: Maybe AdMarkerPassthrough -> ManifestProcessingRules

-- | For HLS, when set to true, MediaTailor passes through EXT-X-CUE-IN,
--   EXT-X-CUE-OUT, and EXT-X-SPLICEPOINT-SCTE35 ad markers from the origin
--   manifest to the MediaTailor personalized manifest.
--   
--   No logic is applied to these ad markers. For example, if EXT-X-CUE-OUT
--   has a value of 60, but no ads are filled for that ad break,
--   MediaTailor will not set the value to 0.
[$sel:adMarkerPassthrough:ManifestProcessingRules'] :: ManifestProcessingRules -> Maybe AdMarkerPassthrough

-- | Create a value of <a>ManifestProcessingRules</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:adMarkerPassthrough:ManifestProcessingRules'</a>,
--   <a>manifestProcessingRules_adMarkerPassthrough</a> - For HLS, when set
--   to true, MediaTailor passes through EXT-X-CUE-IN, EXT-X-CUE-OUT, and
--   EXT-X-SPLICEPOINT-SCTE35 ad markers from the origin manifest to the
--   MediaTailor personalized manifest.
--   
--   No logic is applied to these ad markers. For example, if EXT-X-CUE-OUT
--   has a value of 60, but no ads are filled for that ad break,
--   MediaTailor will not set the value to 0.
newManifestProcessingRules :: ManifestProcessingRules

-- | For HLS, when set to true, MediaTailor passes through EXT-X-CUE-IN,
--   EXT-X-CUE-OUT, and EXT-X-SPLICEPOINT-SCTE35 ad markers from the origin
--   manifest to the MediaTailor personalized manifest.
--   
--   No logic is applied to these ad markers. For example, if EXT-X-CUE-OUT
--   has a value of 60, but no ads are filled for that ad break,
--   MediaTailor will not set the value to 0.
manifestProcessingRules_adMarkerPassthrough :: Lens' ManifestProcessingRules (Maybe AdMarkerPassthrough)

-- | Creates a playback configuration. For information about MediaTailor
--   configurations, see <a>Working with configurations in AWS Elemental
--   MediaTailor</a>.
--   
--   <i>See:</i> <a>newPlaybackConfiguration</a> smart constructor.
data PlaybackConfiguration
PlaybackConfiguration' :: Maybe Text -> Maybe HlsConfiguration -> Maybe Natural -> Maybe Text -> Maybe AvailSuppression -> Maybe Bumper -> Maybe Text -> Maybe Text -> Maybe DashConfiguration -> Maybe ManifestProcessingRules -> Maybe LogConfiguration -> Maybe LivePreRollConfiguration -> Maybe Text -> Maybe Text -> Maybe (HashMap Text (HashMap Text Text)) -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe CdnConfiguration -> PlaybackConfiguration

-- | The URL that the player accesses to get a manifest from AWS Elemental
--   MediaTailor.
[$sel:playbackEndpointPrefix:PlaybackConfiguration'] :: PlaybackConfiguration -> Maybe Text

-- | The configuration for HLS content.
[$sel:hlsConfiguration:PlaybackConfiguration'] :: PlaybackConfiguration -> Maybe HlsConfiguration

-- | Defines the maximum duration of underfilled ad time (in seconds)
--   allowed in an ad break. If the duration of underfilled ad time exceeds
--   the personalization threshold, then the personalization of the ad
--   break is abandoned and the underlying content is shown. This feature
--   applies to <i>ad replacement</i> in live and VOD streams, rather than
--   ad insertion, because it relies on an underlying content stream. For
--   more information about ad break behavior, including ad replacement and
--   insertion, see <a>Ad Behavior in AWS Elemental MediaTailor</a>.
[$sel:personalizationThresholdSeconds:PlaybackConfiguration'] :: PlaybackConfiguration -> Maybe Natural

-- | The Amazon Resource Name (ARN) for the playback configuration.
[$sel:playbackConfigurationArn:PlaybackConfiguration'] :: PlaybackConfiguration -> Maybe Text

-- | The configuration for avail suppression, also known as ad suppression.
--   For more information about ad suppression, see <a>Ad Suppression</a>.
[$sel:availSuppression:PlaybackConfiguration'] :: PlaybackConfiguration -> Maybe AvailSuppression

-- | The configuration for bumpers. Bumpers are short audio or video clips
--   that play at the start or before the end of an ad break. To learn more
--   about bumpers, see <a>Bumpers</a>.
[$sel:bumper:PlaybackConfiguration'] :: PlaybackConfiguration -> Maybe Bumper

-- | The URL for the ad decision server (ADS). This includes the
--   specification of static parameters and placeholders for dynamic
--   parameters. AWS Elemental MediaTailor substitutes player-specific and
--   session-specific parameters as needed when calling the ADS.
--   Alternately, for testing you can provide a static VAST URL. The
--   maximum length is 25,000 characters.
[$sel:adDecisionServerUrl:PlaybackConfiguration'] :: PlaybackConfiguration -> Maybe Text

-- | The URL prefix for the parent manifest for the stream, minus the asset
--   ID. The maximum length is 512 characters.
[$sel:videoContentSourceUrl:PlaybackConfiguration'] :: PlaybackConfiguration -> Maybe Text

-- | The configuration for a DASH source.
[$sel:dashConfiguration:PlaybackConfiguration'] :: PlaybackConfiguration -> Maybe DashConfiguration

-- | The configuration for manifest processing rules. Manifest processing
--   rules enable customization of the personalized manifests created by
--   MediaTailor.
[$sel:manifestProcessingRules:PlaybackConfiguration'] :: PlaybackConfiguration -> Maybe ManifestProcessingRules

-- | The Amazon CloudWatch log settings for a playback configuration.
[$sel:logConfiguration:PlaybackConfiguration'] :: PlaybackConfiguration -> Maybe LogConfiguration

-- | The configuration for pre-roll ad insertion.
[$sel:livePreRollConfiguration:PlaybackConfiguration'] :: PlaybackConfiguration -> Maybe LivePreRollConfiguration

-- | The identifier for the playback configuration.
[$sel:name:PlaybackConfiguration'] :: PlaybackConfiguration -> Maybe Text

-- | The URL that the player uses to initialize a session that uses
--   client-side reporting.
[$sel:sessionInitializationEndpointPrefix:PlaybackConfiguration'] :: PlaybackConfiguration -> Maybe Text

-- | The player parameters and aliases used as dynamic variables during
--   session initialization. For more information, see <a>Domain
--   Variables</a>.
[$sel:configurationAliases:PlaybackConfiguration'] :: PlaybackConfiguration -> Maybe (HashMap Text (HashMap Text Text))

-- | The name that is used to associate this playback configuration with a
--   custom transcode profile. This overrides the dynamic transcoding
--   defaults of MediaTailor. Use this only if you have already set up
--   custom profiles with the help of AWS Support.
[$sel:transcodeProfileName:PlaybackConfiguration'] :: PlaybackConfiguration -> Maybe Text

-- | The tags to assign to the playback configuration.
[$sel:tags:PlaybackConfiguration'] :: PlaybackConfiguration -> Maybe (HashMap Text Text)

-- | The URL for a video asset to transcode and use to fill in time that's
--   not used by ads. AWS Elemental MediaTailor shows the slate to fill in
--   gaps in media content. Configuring the slate is optional for non-VPAID
--   playback configurations. For VPAID, the slate is required because
--   MediaTailor provides it in the slots designated for dynamic ad
--   content. The slate must be a high-quality asset that contains both
--   audio and video.
[$sel:slateAdUrl:PlaybackConfiguration'] :: PlaybackConfiguration -> Maybe Text

-- | The configuration for using a content delivery network (CDN), like
--   Amazon CloudFront, for content and ad segment management.
[$sel:cdnConfiguration:PlaybackConfiguration'] :: PlaybackConfiguration -> Maybe CdnConfiguration

-- | Create a value of <a>PlaybackConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:playbackEndpointPrefix:PlaybackConfiguration'</a>,
--   <a>playbackConfiguration_playbackEndpointPrefix</a> - The URL that the
--   player accesses to get a manifest from AWS Elemental MediaTailor.
--   
--   <a>$sel:hlsConfiguration:PlaybackConfiguration'</a>,
--   <a>playbackConfiguration_hlsConfiguration</a> - The configuration for
--   HLS content.
--   
--   <a>$sel:personalizationThresholdSeconds:PlaybackConfiguration'</a>,
--   <a>playbackConfiguration_personalizationThresholdSeconds</a> - Defines
--   the maximum duration of underfilled ad time (in seconds) allowed in an
--   ad break. If the duration of underfilled ad time exceeds the
--   personalization threshold, then the personalization of the ad break is
--   abandoned and the underlying content is shown. This feature applies to
--   <i>ad replacement</i> in live and VOD streams, rather than ad
--   insertion, because it relies on an underlying content stream. For more
--   information about ad break behavior, including ad replacement and
--   insertion, see <a>Ad Behavior in AWS Elemental MediaTailor</a>.
--   
--   <a>$sel:playbackConfigurationArn:PlaybackConfiguration'</a>,
--   <a>playbackConfiguration_playbackConfigurationArn</a> - The Amazon
--   Resource Name (ARN) for the playback configuration.
--   
--   <a>$sel:availSuppression:PlaybackConfiguration'</a>,
--   <a>playbackConfiguration_availSuppression</a> - The configuration for
--   avail suppression, also known as ad suppression. For more information
--   about ad suppression, see <a>Ad Suppression</a>.
--   
--   <a>$sel:bumper:PlaybackConfiguration'</a>,
--   <a>playbackConfiguration_bumper</a> - The configuration for bumpers.
--   Bumpers are short audio or video clips that play at the start or
--   before the end of an ad break. To learn more about bumpers, see
--   <a>Bumpers</a>.
--   
--   <a>$sel:adDecisionServerUrl:PlaybackConfiguration'</a>,
--   <a>playbackConfiguration_adDecisionServerUrl</a> - The URL for the ad
--   decision server (ADS). This includes the specification of static
--   parameters and placeholders for dynamic parameters. AWS Elemental
--   MediaTailor substitutes player-specific and session-specific
--   parameters as needed when calling the ADS. Alternately, for testing
--   you can provide a static VAST URL. The maximum length is 25,000
--   characters.
--   
--   <a>$sel:videoContentSourceUrl:PlaybackConfiguration'</a>,
--   <a>playbackConfiguration_videoContentSourceUrl</a> - The URL prefix
--   for the parent manifest for the stream, minus the asset ID. The
--   maximum length is 512 characters.
--   
--   <a>$sel:dashConfiguration:PlaybackConfiguration'</a>,
--   <a>playbackConfiguration_dashConfiguration</a> - The configuration for
--   a DASH source.
--   
--   <a>$sel:manifestProcessingRules:PlaybackConfiguration'</a>,
--   <a>playbackConfiguration_manifestProcessingRules</a> - The
--   configuration for manifest processing rules. Manifest processing rules
--   enable customization of the personalized manifests created by
--   MediaTailor.
--   
--   <a>$sel:logConfiguration:PlaybackConfiguration'</a>,
--   <a>playbackConfiguration_logConfiguration</a> - The Amazon CloudWatch
--   log settings for a playback configuration.
--   
--   <a>$sel:livePreRollConfiguration:PlaybackConfiguration'</a>,
--   <a>playbackConfiguration_livePreRollConfiguration</a> - The
--   configuration for pre-roll ad insertion.
--   
--   <a>$sel:name:PlaybackConfiguration'</a>,
--   <a>playbackConfiguration_name</a> - The identifier for the playback
--   configuration.
--   
--   
--   <a>$sel:sessionInitializationEndpointPrefix:PlaybackConfiguration'</a>,
--   <a>playbackConfiguration_sessionInitializationEndpointPrefix</a> - The
--   URL that the player uses to initialize a session that uses client-side
--   reporting.
--   
--   <a>$sel:configurationAliases:PlaybackConfiguration'</a>,
--   <a>playbackConfiguration_configurationAliases</a> - The player
--   parameters and aliases used as dynamic variables during session
--   initialization. For more information, see <a>Domain Variables</a>.
--   
--   <a>$sel:transcodeProfileName:PlaybackConfiguration'</a>,
--   <a>playbackConfiguration_transcodeProfileName</a> - The name that is
--   used to associate this playback configuration with a custom transcode
--   profile. This overrides the dynamic transcoding defaults of
--   MediaTailor. Use this only if you have already set up custom profiles
--   with the help of AWS Support.
--   
--   <a>$sel:tags:PlaybackConfiguration'</a>,
--   <a>playbackConfiguration_tags</a> - The tags to assign to the playback
--   configuration.
--   
--   <a>$sel:slateAdUrl:PlaybackConfiguration'</a>,
--   <a>playbackConfiguration_slateAdUrl</a> - The URL for a video asset to
--   transcode and use to fill in time that's not used by ads. AWS
--   Elemental MediaTailor shows the slate to fill in gaps in media
--   content. Configuring the slate is optional for non-VPAID playback
--   configurations. For VPAID, the slate is required because MediaTailor
--   provides it in the slots designated for dynamic ad content. The slate
--   must be a high-quality asset that contains both audio and video.
--   
--   <a>$sel:cdnConfiguration:PlaybackConfiguration'</a>,
--   <a>playbackConfiguration_cdnConfiguration</a> - The configuration for
--   using a content delivery network (CDN), like Amazon CloudFront, for
--   content and ad segment management.
newPlaybackConfiguration :: PlaybackConfiguration

-- | The URL that the player accesses to get a manifest from AWS Elemental
--   MediaTailor.
playbackConfiguration_playbackEndpointPrefix :: Lens' PlaybackConfiguration (Maybe Text)

-- | The configuration for HLS content.
playbackConfiguration_hlsConfiguration :: Lens' PlaybackConfiguration (Maybe HlsConfiguration)

-- | Defines the maximum duration of underfilled ad time (in seconds)
--   allowed in an ad break. If the duration of underfilled ad time exceeds
--   the personalization threshold, then the personalization of the ad
--   break is abandoned and the underlying content is shown. This feature
--   applies to <i>ad replacement</i> in live and VOD streams, rather than
--   ad insertion, because it relies on an underlying content stream. For
--   more information about ad break behavior, including ad replacement and
--   insertion, see <a>Ad Behavior in AWS Elemental MediaTailor</a>.
playbackConfiguration_personalizationThresholdSeconds :: Lens' PlaybackConfiguration (Maybe Natural)

-- | The Amazon Resource Name (ARN) for the playback configuration.
playbackConfiguration_playbackConfigurationArn :: Lens' PlaybackConfiguration (Maybe Text)

-- | The configuration for avail suppression, also known as ad suppression.
--   For more information about ad suppression, see <a>Ad Suppression</a>.
playbackConfiguration_availSuppression :: Lens' PlaybackConfiguration (Maybe AvailSuppression)

-- | The configuration for bumpers. Bumpers are short audio or video clips
--   that play at the start or before the end of an ad break. To learn more
--   about bumpers, see <a>Bumpers</a>.
playbackConfiguration_bumper :: Lens' PlaybackConfiguration (Maybe Bumper)

-- | The URL for the ad decision server (ADS). This includes the
--   specification of static parameters and placeholders for dynamic
--   parameters. AWS Elemental MediaTailor substitutes player-specific and
--   session-specific parameters as needed when calling the ADS.
--   Alternately, for testing you can provide a static VAST URL. The
--   maximum length is 25,000 characters.
playbackConfiguration_adDecisionServerUrl :: Lens' PlaybackConfiguration (Maybe Text)

-- | The URL prefix for the parent manifest for the stream, minus the asset
--   ID. The maximum length is 512 characters.
playbackConfiguration_videoContentSourceUrl :: Lens' PlaybackConfiguration (Maybe Text)

-- | The configuration for a DASH source.
playbackConfiguration_dashConfiguration :: Lens' PlaybackConfiguration (Maybe DashConfiguration)

-- | The configuration for manifest processing rules. Manifest processing
--   rules enable customization of the personalized manifests created by
--   MediaTailor.
playbackConfiguration_manifestProcessingRules :: Lens' PlaybackConfiguration (Maybe ManifestProcessingRules)

-- | The Amazon CloudWatch log settings for a playback configuration.
playbackConfiguration_logConfiguration :: Lens' PlaybackConfiguration (Maybe LogConfiguration)

-- | The configuration for pre-roll ad insertion.
playbackConfiguration_livePreRollConfiguration :: Lens' PlaybackConfiguration (Maybe LivePreRollConfiguration)

-- | The identifier for the playback configuration.
playbackConfiguration_name :: Lens' PlaybackConfiguration (Maybe Text)

-- | The URL that the player uses to initialize a session that uses
--   client-side reporting.
playbackConfiguration_sessionInitializationEndpointPrefix :: Lens' PlaybackConfiguration (Maybe Text)

-- | The player parameters and aliases used as dynamic variables during
--   session initialization. For more information, see <a>Domain
--   Variables</a>.
playbackConfiguration_configurationAliases :: Lens' PlaybackConfiguration (Maybe (HashMap Text (HashMap Text Text)))

-- | The name that is used to associate this playback configuration with a
--   custom transcode profile. This overrides the dynamic transcoding
--   defaults of MediaTailor. Use this only if you have already set up
--   custom profiles with the help of AWS Support.
playbackConfiguration_transcodeProfileName :: Lens' PlaybackConfiguration (Maybe Text)

-- | The tags to assign to the playback configuration.
playbackConfiguration_tags :: Lens' PlaybackConfiguration (Maybe (HashMap Text Text))

-- | The URL for a video asset to transcode and use to fill in time that's
--   not used by ads. AWS Elemental MediaTailor shows the slate to fill in
--   gaps in media content. Configuring the slate is optional for non-VPAID
--   playback configurations. For VPAID, the slate is required because
--   MediaTailor provides it in the slots designated for dynamic ad
--   content. The slate must be a high-quality asset that contains both
--   audio and video.
playbackConfiguration_slateAdUrl :: Lens' PlaybackConfiguration (Maybe Text)

-- | The configuration for using a content delivery network (CDN), like
--   Amazon CloudFront, for content and ad segment management.
playbackConfiguration_cdnConfiguration :: Lens' PlaybackConfiguration (Maybe CdnConfiguration)

-- | A complex type that contains settings that determine how and when that
--   MediaTailor places prefetched ads into upcoming ad breaks.
--   
--   <i>See:</i> <a>newPrefetchConsumption</a> smart constructor.
data PrefetchConsumption
PrefetchConsumption' :: Maybe POSIX -> Maybe [AvailMatchingCriteria] -> POSIX -> PrefetchConsumption

-- | The time when prefetched ads are considered for use in an ad break. If
--   you don't specify StartTime, the prefetched ads are available after
--   MediaTailor retrives them from the ad decision server.
[$sel:startTime:PrefetchConsumption'] :: PrefetchConsumption -> Maybe POSIX

-- | If you only want MediaTailor to insert prefetched ads into avails (ad
--   breaks) that match specific dynamic variables, such as scte.event_id,
--   set the avail matching criteria.
[$sel:availMatchingCriteria:PrefetchConsumption'] :: PrefetchConsumption -> Maybe [AvailMatchingCriteria]

-- | The time when MediaTailor no longer considers the prefetched ads for
--   use in an ad break. MediaTailor automatically deletes prefetch
--   schedules no less than seven days after the end time. If you'd like to
--   manually delete the prefetch schedule, you can call
--   DeletePrefetchSchedule.
[$sel:endTime:PrefetchConsumption'] :: PrefetchConsumption -> POSIX

-- | Create a value of <a>PrefetchConsumption</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:startTime:PrefetchConsumption'</a>,
--   <a>prefetchConsumption_startTime</a> - The time when prefetched ads
--   are considered for use in an ad break. If you don't specify StartTime,
--   the prefetched ads are available after MediaTailor retrives them from
--   the ad decision server.
--   
--   <a>$sel:availMatchingCriteria:PrefetchConsumption'</a>,
--   <a>prefetchConsumption_availMatchingCriteria</a> - If you only want
--   MediaTailor to insert prefetched ads into avails (ad breaks) that
--   match specific dynamic variables, such as scte.event_id, set the avail
--   matching criteria.
--   
--   <a>$sel:endTime:PrefetchConsumption'</a>,
--   <a>prefetchConsumption_endTime</a> - The time when MediaTailor no
--   longer considers the prefetched ads for use in an ad break.
--   MediaTailor automatically deletes prefetch schedules no less than
--   seven days after the end time. If you'd like to manually delete the
--   prefetch schedule, you can call DeletePrefetchSchedule.
newPrefetchConsumption :: UTCTime -> PrefetchConsumption

-- | The time when prefetched ads are considered for use in an ad break. If
--   you don't specify StartTime, the prefetched ads are available after
--   MediaTailor retrives them from the ad decision server.
prefetchConsumption_startTime :: Lens' PrefetchConsumption (Maybe UTCTime)

-- | If you only want MediaTailor to insert prefetched ads into avails (ad
--   breaks) that match specific dynamic variables, such as scte.event_id,
--   set the avail matching criteria.
prefetchConsumption_availMatchingCriteria :: Lens' PrefetchConsumption (Maybe [AvailMatchingCriteria])

-- | The time when MediaTailor no longer considers the prefetched ads for
--   use in an ad break. MediaTailor automatically deletes prefetch
--   schedules no less than seven days after the end time. If you'd like to
--   manually delete the prefetch schedule, you can call
--   DeletePrefetchSchedule.
prefetchConsumption_endTime :: Lens' PrefetchConsumption UTCTime

-- | A complex type that contains settings governing when MediaTailor
--   prefetches ads, and which dynamic variables that MediaTailor includes
--   in the request to the ad decision server.
--   
--   <i>See:</i> <a>newPrefetchRetrieval</a> smart constructor.
data PrefetchRetrieval
PrefetchRetrieval' :: Maybe POSIX -> Maybe (HashMap Text Text) -> POSIX -> PrefetchRetrieval

-- | The time when prefetch retrievals can start for this break. Ad
--   prefetching will be attempted for manifest requests that occur at or
--   after this time. Defaults to the current time. If not specified, the
--   prefetch retrieval starts as soon as possible.
[$sel:startTime:PrefetchRetrieval'] :: PrefetchRetrieval -> Maybe POSIX

-- | The dynamic variables to use for substitution during prefetch requests
--   to the ad decision server (ADS).
--   
--   You intially configure <a>dynamic variables</a> for the ADS URL when
--   you set up your playback configuration. When you specify
--   DynamicVariables for prefetch retrieval, MediaTailor includes the
--   dynamic variables in the request to the ADS.
[$sel:dynamicVariables:PrefetchRetrieval'] :: PrefetchRetrieval -> Maybe (HashMap Text Text)

-- | The time when prefetch retrieval ends for the ad break. Prefetching
--   will be attempted for manifest requests that occur at or before this
--   time.
[$sel:endTime:PrefetchRetrieval'] :: PrefetchRetrieval -> POSIX

-- | Create a value of <a>PrefetchRetrieval</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:startTime:PrefetchRetrieval'</a>,
--   <a>prefetchRetrieval_startTime</a> - The time when prefetch retrievals
--   can start for this break. Ad prefetching will be attempted for
--   manifest requests that occur at or after this time. Defaults to the
--   current time. If not specified, the prefetch retrieval starts as soon
--   as possible.
--   
--   <a>$sel:dynamicVariables:PrefetchRetrieval'</a>,
--   <a>prefetchRetrieval_dynamicVariables</a> - The dynamic variables to
--   use for substitution during prefetch requests to the ad decision
--   server (ADS).
--   
--   You intially configure <a>dynamic variables</a> for the ADS URL when
--   you set up your playback configuration. When you specify
--   DynamicVariables for prefetch retrieval, MediaTailor includes the
--   dynamic variables in the request to the ADS.
--   
--   <a>$sel:endTime:PrefetchRetrieval'</a>,
--   <a>prefetchRetrieval_endTime</a> - The time when prefetch retrieval
--   ends for the ad break. Prefetching will be attempted for manifest
--   requests that occur at or before this time.
newPrefetchRetrieval :: UTCTime -> PrefetchRetrieval

-- | The time when prefetch retrievals can start for this break. Ad
--   prefetching will be attempted for manifest requests that occur at or
--   after this time. Defaults to the current time. If not specified, the
--   prefetch retrieval starts as soon as possible.
prefetchRetrieval_startTime :: Lens' PrefetchRetrieval (Maybe UTCTime)

-- | The dynamic variables to use for substitution during prefetch requests
--   to the ad decision server (ADS).
--   
--   You intially configure <a>dynamic variables</a> for the ADS URL when
--   you set up your playback configuration. When you specify
--   DynamicVariables for prefetch retrieval, MediaTailor includes the
--   dynamic variables in the request to the ADS.
prefetchRetrieval_dynamicVariables :: Lens' PrefetchRetrieval (Maybe (HashMap Text Text))

-- | The time when prefetch retrieval ends for the ad break. Prefetching
--   will be attempted for manifest requests that occur at or before this
--   time.
prefetchRetrieval_endTime :: Lens' PrefetchRetrieval UTCTime

-- | A complex type that contains prefetch schedule information.
--   
--   <i>See:</i> <a>newPrefetchSchedule</a> smart constructor.
data PrefetchSchedule
PrefetchSchedule' :: Maybe Text -> PrefetchRetrieval -> PrefetchConsumption -> Text -> Text -> Text -> PrefetchSchedule

-- | An optional stream identifier that you can specify in order to
--   prefetch for multiple streams that use the same playback
--   configuration.
[$sel:streamId:PrefetchSchedule'] :: PrefetchSchedule -> Maybe Text

-- | A complex type that contains settings for prefetch retrieval from the
--   ad decision server (ADS).
[$sel:retrieval:PrefetchSchedule'] :: PrefetchSchedule -> PrefetchRetrieval

-- | Consumption settings determine how, and when, MediaTailor places the
--   prefetched ads into ad breaks. Ad consumption occurs within a span of
--   time that you define, called a <i>consumption window</i>. You can
--   designate which ad breaks that MediaTailor fills with prefetch ads by
--   setting avail matching criteria.
[$sel:consumption:PrefetchSchedule'] :: PrefetchSchedule -> PrefetchConsumption

-- | The Amazon Resource Name (ARN) of the prefetch schedule.
[$sel:arn:PrefetchSchedule'] :: PrefetchSchedule -> Text

-- | The name of the playback configuration to create the prefetch schedule
--   for.
[$sel:playbackConfigurationName:PrefetchSchedule'] :: PrefetchSchedule -> Text

-- | The name of the prefetch schedule. The name must be unique among all
--   prefetch schedules that are associated with the specified playback
--   configuration.
[$sel:name:PrefetchSchedule'] :: PrefetchSchedule -> Text

-- | Create a value of <a>PrefetchSchedule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:streamId:PrefetchSchedule'</a>,
--   <a>prefetchSchedule_streamId</a> - An optional stream identifier that
--   you can specify in order to prefetch for multiple streams that use the
--   same playback configuration.
--   
--   <a>$sel:retrieval:PrefetchSchedule'</a>,
--   <a>prefetchSchedule_retrieval</a> - A complex type that contains
--   settings for prefetch retrieval from the ad decision server (ADS).
--   
--   <a>$sel:consumption:PrefetchSchedule'</a>,
--   <a>prefetchSchedule_consumption</a> - Consumption settings determine
--   how, and when, MediaTailor places the prefetched ads into ad breaks.
--   Ad consumption occurs within a span of time that you define, called a
--   <i>consumption window</i>. You can designate which ad breaks that
--   MediaTailor fills with prefetch ads by setting avail matching
--   criteria.
--   
--   <a>$sel:arn:PrefetchSchedule'</a>, <a>prefetchSchedule_arn</a> - The
--   Amazon Resource Name (ARN) of the prefetch schedule.
--   
--   <a>$sel:playbackConfigurationName:PrefetchSchedule'</a>,
--   <a>prefetchSchedule_playbackConfigurationName</a> - The name of the
--   playback configuration to create the prefetch schedule for.
--   
--   <a>$sel:name:PrefetchSchedule'</a>, <a>prefetchSchedule_name</a> - The
--   name of the prefetch schedule. The name must be unique among all
--   prefetch schedules that are associated with the specified playback
--   configuration.
newPrefetchSchedule :: PrefetchRetrieval -> PrefetchConsumption -> Text -> Text -> Text -> PrefetchSchedule

-- | An optional stream identifier that you can specify in order to
--   prefetch for multiple streams that use the same playback
--   configuration.
prefetchSchedule_streamId :: Lens' PrefetchSchedule (Maybe Text)

-- | A complex type that contains settings for prefetch retrieval from the
--   ad decision server (ADS).
prefetchSchedule_retrieval :: Lens' PrefetchSchedule PrefetchRetrieval

-- | Consumption settings determine how, and when, MediaTailor places the
--   prefetched ads into ad breaks. Ad consumption occurs within a span of
--   time that you define, called a <i>consumption window</i>. You can
--   designate which ad breaks that MediaTailor fills with prefetch ads by
--   setting avail matching criteria.
prefetchSchedule_consumption :: Lens' PrefetchSchedule PrefetchConsumption

-- | The Amazon Resource Name (ARN) of the prefetch schedule.
prefetchSchedule_arn :: Lens' PrefetchSchedule Text

-- | The name of the playback configuration to create the prefetch schedule
--   for.
prefetchSchedule_playbackConfigurationName :: Lens' PrefetchSchedule Text

-- | The name of the prefetch schedule. The name must be unique among all
--   prefetch schedules that are associated with the specified playback
--   configuration.
prefetchSchedule_name :: Lens' PrefetchSchedule Text

-- | The output configuration for this channel.
--   
--   <i>See:</i> <a>newRequestOutputItem</a> smart constructor.
data RequestOutputItem
RequestOutputItem' :: Maybe HlsPlaylistSettings -> Maybe DashPlaylistSettings -> Text -> Text -> RequestOutputItem

-- | HLS playlist configuration parameters.
[$sel:hlsPlaylistSettings:RequestOutputItem'] :: RequestOutputItem -> Maybe HlsPlaylistSettings

-- | DASH manifest configuration parameters.
[$sel:dashPlaylistSettings:RequestOutputItem'] :: RequestOutputItem -> Maybe DashPlaylistSettings

-- | The name of the manifest for the channel. The name appears in the
--   PlaybackUrl.
[$sel:manifestName:RequestOutputItem'] :: RequestOutputItem -> Text

-- | A string used to match which HttpPackageConfiguration is used for each
--   VodSource.
[$sel:sourceGroup:RequestOutputItem'] :: RequestOutputItem -> Text

-- | Create a value of <a>RequestOutputItem</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hlsPlaylistSettings:RequestOutputItem'</a>,
--   <a>requestOutputItem_hlsPlaylistSettings</a> - HLS playlist
--   configuration parameters.
--   
--   <a>$sel:dashPlaylistSettings:RequestOutputItem'</a>,
--   <a>requestOutputItem_dashPlaylistSettings</a> - DASH manifest
--   configuration parameters.
--   
--   <a>$sel:manifestName:RequestOutputItem'</a>,
--   <a>requestOutputItem_manifestName</a> - The name of the manifest for
--   the channel. The name appears in the PlaybackUrl.
--   
--   <a>$sel:sourceGroup:RequestOutputItem'</a>,
--   <a>requestOutputItem_sourceGroup</a> - A string used to match which
--   HttpPackageConfiguration is used for each VodSource.
newRequestOutputItem :: Text -> Text -> RequestOutputItem

-- | HLS playlist configuration parameters.
requestOutputItem_hlsPlaylistSettings :: Lens' RequestOutputItem (Maybe HlsPlaylistSettings)

-- | DASH manifest configuration parameters.
requestOutputItem_dashPlaylistSettings :: Lens' RequestOutputItem (Maybe DashPlaylistSettings)

-- | The name of the manifest for the channel. The name appears in the
--   PlaybackUrl.
requestOutputItem_manifestName :: Lens' RequestOutputItem Text

-- | A string used to match which HttpPackageConfiguration is used for each
--   VodSource.
requestOutputItem_sourceGroup :: Lens' RequestOutputItem Text

-- | This response includes only the "property" : "type" property.
--   
--   <i>See:</i> <a>newResponseOutputItem</a> smart constructor.
data ResponseOutputItem
ResponseOutputItem' :: Maybe HlsPlaylistSettings -> Maybe DashPlaylistSettings -> Text -> Text -> Text -> ResponseOutputItem

-- | HLS manifest configuration settings.
[$sel:hlsPlaylistSettings:ResponseOutputItem'] :: ResponseOutputItem -> Maybe HlsPlaylistSettings

-- | DASH manifest configuration settings.
[$sel:dashPlaylistSettings:ResponseOutputItem'] :: ResponseOutputItem -> Maybe DashPlaylistSettings

-- | The name of the manifest for the channel that will appear in the
--   channel output's playback URL.
[$sel:manifestName:ResponseOutputItem'] :: ResponseOutputItem -> Text

-- | The URL used for playback by content players.
[$sel:playbackUrl:ResponseOutputItem'] :: ResponseOutputItem -> Text

-- | A string used to associate a package configuration source group with a
--   channel output.
[$sel:sourceGroup:ResponseOutputItem'] :: ResponseOutputItem -> Text

-- | Create a value of <a>ResponseOutputItem</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hlsPlaylistSettings:ResponseOutputItem'</a>,
--   <a>responseOutputItem_hlsPlaylistSettings</a> - HLS manifest
--   configuration settings.
--   
--   <a>$sel:dashPlaylistSettings:ResponseOutputItem'</a>,
--   <a>responseOutputItem_dashPlaylistSettings</a> - DASH manifest
--   configuration settings.
--   
--   <a>$sel:manifestName:ResponseOutputItem'</a>,
--   <a>responseOutputItem_manifestName</a> - The name of the manifest for
--   the channel that will appear in the channel output's playback URL.
--   
--   <a>$sel:playbackUrl:ResponseOutputItem'</a>,
--   <a>responseOutputItem_playbackUrl</a> - The URL used for playback by
--   content players.
--   
--   <a>$sel:sourceGroup:ResponseOutputItem'</a>,
--   <a>responseOutputItem_sourceGroup</a> - A string used to associate a
--   package configuration source group with a channel output.
newResponseOutputItem :: Text -> Text -> Text -> ResponseOutputItem

-- | HLS manifest configuration settings.
responseOutputItem_hlsPlaylistSettings :: Lens' ResponseOutputItem (Maybe HlsPlaylistSettings)

-- | DASH manifest configuration settings.
responseOutputItem_dashPlaylistSettings :: Lens' ResponseOutputItem (Maybe DashPlaylistSettings)

-- | The name of the manifest for the channel that will appear in the
--   channel output's playback URL.
responseOutputItem_manifestName :: Lens' ResponseOutputItem Text

-- | The URL used for playback by content players.
responseOutputItem_playbackUrl :: Lens' ResponseOutputItem Text

-- | A string used to associate a package configuration source group with a
--   channel output.
responseOutputItem_sourceGroup :: Lens' ResponseOutputItem Text

-- | The schedule's ad break properties.
--   
--   <i>See:</i> <a>newScheduleAdBreak</a> smart constructor.
data ScheduleAdBreak
ScheduleAdBreak' :: Maybe Text -> Maybe Integer -> Maybe Text -> Maybe POSIX -> ScheduleAdBreak

-- | The name of the source location containing the VOD source used for the
--   ad break.
[$sel:sourceLocationName:ScheduleAdBreak'] :: ScheduleAdBreak -> Maybe Text

-- | The approximate duration of the ad break, in seconds.
[$sel:approximateDurationSeconds:ScheduleAdBreak'] :: ScheduleAdBreak -> Maybe Integer

-- | The name of the VOD source used for the ad break.
[$sel:vodSourceName:ScheduleAdBreak'] :: ScheduleAdBreak -> Maybe Text

-- | The approximate time that the ad will start playing.
[$sel:approximateStartTime:ScheduleAdBreak'] :: ScheduleAdBreak -> Maybe POSIX

-- | Create a value of <a>ScheduleAdBreak</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceLocationName:ScheduleAdBreak'</a>,
--   <a>scheduleAdBreak_sourceLocationName</a> - The name of the source
--   location containing the VOD source used for the ad break.
--   
--   <a>$sel:approximateDurationSeconds:ScheduleAdBreak'</a>,
--   <a>scheduleAdBreak_approximateDurationSeconds</a> - The approximate
--   duration of the ad break, in seconds.
--   
--   <a>$sel:vodSourceName:ScheduleAdBreak'</a>,
--   <a>scheduleAdBreak_vodSourceName</a> - The name of the VOD source used
--   for the ad break.
--   
--   <a>$sel:approximateStartTime:ScheduleAdBreak'</a>,
--   <a>scheduleAdBreak_approximateStartTime</a> - The approximate time
--   that the ad will start playing.
newScheduleAdBreak :: ScheduleAdBreak

-- | The name of the source location containing the VOD source used for the
--   ad break.
scheduleAdBreak_sourceLocationName :: Lens' ScheduleAdBreak (Maybe Text)

-- | The approximate duration of the ad break, in seconds.
scheduleAdBreak_approximateDurationSeconds :: Lens' ScheduleAdBreak (Maybe Integer)

-- | The name of the VOD source used for the ad break.
scheduleAdBreak_vodSourceName :: Lens' ScheduleAdBreak (Maybe Text)

-- | The approximate time that the ad will start playing.
scheduleAdBreak_approximateStartTime :: Lens' ScheduleAdBreak (Maybe UTCTime)

-- | Schedule configuration parameters. A channel must be stopped before
--   changes can be made to the schedule.
--   
--   <i>See:</i> <a>newScheduleConfiguration</a> smart constructor.
data ScheduleConfiguration
ScheduleConfiguration' :: Transition -> ScheduleConfiguration

-- | Program transition configurations.
[$sel:transition:ScheduleConfiguration'] :: ScheduleConfiguration -> Transition

-- | Create a value of <a>ScheduleConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:transition:ScheduleConfiguration'</a>,
--   <a>scheduleConfiguration_transition</a> - Program transition
--   configurations.
newScheduleConfiguration :: Transition -> ScheduleConfiguration

-- | Program transition configurations.
scheduleConfiguration_transition :: Lens' ScheduleConfiguration Transition

-- | The properties for a schedule.
--   
--   <i>See:</i> <a>newScheduleEntry</a> smart constructor.
data ScheduleEntry
ScheduleEntry' :: Maybe [ScheduleAdBreak] -> Maybe Integer -> Maybe POSIX -> Maybe ScheduleEntryType -> Text -> Text -> Text -> Text -> Text -> ScheduleEntry

-- | The schedule's ad break properties.
[$sel:scheduleAdBreaks:ScheduleEntry'] :: ScheduleEntry -> Maybe [ScheduleAdBreak]

-- | The approximate duration of this program, in seconds.
[$sel:approximateDurationSeconds:ScheduleEntry'] :: ScheduleEntry -> Maybe Integer

-- | The approximate time that the program will start playing.
[$sel:approximateStartTime:ScheduleEntry'] :: ScheduleEntry -> Maybe POSIX

-- | The type of schedule entry.
--   
--   Valid values: PROGRAM or FILLER_SLATE.
[$sel:scheduleEntryType:ScheduleEntry'] :: ScheduleEntry -> Maybe ScheduleEntryType

-- | The name of the VOD source.
[$sel:vodSourceName:ScheduleEntry'] :: ScheduleEntry -> Text

-- | The name of the channel that uses this schedule.
[$sel:channelName:ScheduleEntry'] :: ScheduleEntry -> Text

-- | The name of the source location.
[$sel:sourceLocationName:ScheduleEntry'] :: ScheduleEntry -> Text

-- | The ARN of the program.
[$sel:arn:ScheduleEntry'] :: ScheduleEntry -> Text

-- | The name of the program.
[$sel:programName:ScheduleEntry'] :: ScheduleEntry -> Text

-- | Create a value of <a>ScheduleEntry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:scheduleAdBreaks:ScheduleEntry'</a>,
--   <a>scheduleEntry_scheduleAdBreaks</a> - The schedule's ad break
--   properties.
--   
--   <a>$sel:approximateDurationSeconds:ScheduleEntry'</a>,
--   <a>scheduleEntry_approximateDurationSeconds</a> - The approximate
--   duration of this program, in seconds.
--   
--   <a>$sel:approximateStartTime:ScheduleEntry'</a>,
--   <a>scheduleEntry_approximateStartTime</a> - The approximate time that
--   the program will start playing.
--   
--   <a>$sel:scheduleEntryType:ScheduleEntry'</a>,
--   <a>scheduleEntry_scheduleEntryType</a> - The type of schedule entry.
--   
--   Valid values: PROGRAM or FILLER_SLATE.
--   
--   <a>$sel:vodSourceName:ScheduleEntry'</a>,
--   <a>scheduleEntry_vodSourceName</a> - The name of the VOD source.
--   
--   <a>$sel:channelName:ScheduleEntry'</a>,
--   <a>scheduleEntry_channelName</a> - The name of the channel that uses
--   this schedule.
--   
--   <a>$sel:sourceLocationName:ScheduleEntry'</a>,
--   <a>scheduleEntry_sourceLocationName</a> - The name of the source
--   location.
--   
--   <a>$sel:arn:ScheduleEntry'</a>, <a>scheduleEntry_arn</a> - The ARN of
--   the program.
--   
--   <a>$sel:programName:ScheduleEntry'</a>,
--   <a>scheduleEntry_programName</a> - The name of the program.
newScheduleEntry :: Text -> Text -> Text -> Text -> Text -> ScheduleEntry

-- | The schedule's ad break properties.
scheduleEntry_scheduleAdBreaks :: Lens' ScheduleEntry (Maybe [ScheduleAdBreak])

-- | The approximate duration of this program, in seconds.
scheduleEntry_approximateDurationSeconds :: Lens' ScheduleEntry (Maybe Integer)

-- | The approximate time that the program will start playing.
scheduleEntry_approximateStartTime :: Lens' ScheduleEntry (Maybe UTCTime)

-- | The type of schedule entry.
--   
--   Valid values: PROGRAM or FILLER_SLATE.
scheduleEntry_scheduleEntryType :: Lens' ScheduleEntry (Maybe ScheduleEntryType)

-- | The name of the VOD source.
scheduleEntry_vodSourceName :: Lens' ScheduleEntry Text

-- | The name of the channel that uses this schedule.
scheduleEntry_channelName :: Lens' ScheduleEntry Text

-- | The name of the source location.
scheduleEntry_sourceLocationName :: Lens' ScheduleEntry Text

-- | The ARN of the program.
scheduleEntry_arn :: Lens' ScheduleEntry Text

-- | The name of the program.
scheduleEntry_programName :: Lens' ScheduleEntry Text

-- | AWS Secrets Manager access token configuration parameters. For
--   information about Secrets Manager access token authentication, see
--   <a>Working with AWS Secrets Manager access token authentication</a>.
--   
--   <i>See:</i> <a>newSecretsManagerAccessTokenConfiguration</a> smart
--   constructor.
data SecretsManagerAccessTokenConfiguration
SecretsManagerAccessTokenConfiguration' :: Maybe Text -> Maybe Text -> Maybe Text -> SecretsManagerAccessTokenConfiguration

-- | The name of the HTTP header used to supply the access token in
--   requests to the source location.
[$sel:headerName:SecretsManagerAccessTokenConfiguration'] :: SecretsManagerAccessTokenConfiguration -> Maybe Text

-- | The AWS Secrets Manager <a>SecretString</a> key associated with the
--   access token. MediaTailor uses the key to look up SecretString key and
--   value pair containing the access token.
[$sel:secretStringKey:SecretsManagerAccessTokenConfiguration'] :: SecretsManagerAccessTokenConfiguration -> Maybe Text

-- | The Amazon Resource Name (ARN) of the AWS Secrets Manager secret that
--   contains the access token.
[$sel:secretArn:SecretsManagerAccessTokenConfiguration'] :: SecretsManagerAccessTokenConfiguration -> Maybe Text

-- | Create a value of <a>SecretsManagerAccessTokenConfiguration</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:headerName:SecretsManagerAccessTokenConfiguration'</a>,
--   <a>secretsManagerAccessTokenConfiguration_headerName</a> - The name of
--   the HTTP header used to supply the access token in requests to the
--   source location.
--   
--   <a>$sel:secretStringKey:SecretsManagerAccessTokenConfiguration'</a>,
--   <a>secretsManagerAccessTokenConfiguration_secretStringKey</a> - The
--   AWS Secrets Manager <a>SecretString</a> key associated with the access
--   token. MediaTailor uses the key to look up SecretString key and value
--   pair containing the access token.
--   
--   <a>$sel:secretArn:SecretsManagerAccessTokenConfiguration'</a>,
--   <a>secretsManagerAccessTokenConfiguration_secretArn</a> - The Amazon
--   Resource Name (ARN) of the AWS Secrets Manager secret that contains
--   the access token.
newSecretsManagerAccessTokenConfiguration :: SecretsManagerAccessTokenConfiguration

-- | The name of the HTTP header used to supply the access token in
--   requests to the source location.
secretsManagerAccessTokenConfiguration_headerName :: Lens' SecretsManagerAccessTokenConfiguration (Maybe Text)

-- | The AWS Secrets Manager <a>SecretString</a> key associated with the
--   access token. MediaTailor uses the key to look up SecretString key and
--   value pair containing the access token.
secretsManagerAccessTokenConfiguration_secretStringKey :: Lens' SecretsManagerAccessTokenConfiguration (Maybe Text)

-- | The Amazon Resource Name (ARN) of the AWS Secrets Manager secret that
--   contains the access token.
secretsManagerAccessTokenConfiguration_secretArn :: Lens' SecretsManagerAccessTokenConfiguration (Maybe Text)

-- | Slate VOD source configuration.
--   
--   <i>See:</i> <a>newSlateSource</a> smart constructor.
data SlateSource
SlateSource' :: Maybe Text -> Maybe Text -> SlateSource

-- | The name of the source location where the slate VOD source is stored.
[$sel:sourceLocationName:SlateSource'] :: SlateSource -> Maybe Text

-- | The slate VOD source name. The VOD source must already exist in a
--   source location before it can be used for slate.
[$sel:vodSourceName:SlateSource'] :: SlateSource -> Maybe Text

-- | Create a value of <a>SlateSource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceLocationName:SlateSource'</a>,
--   <a>slateSource_sourceLocationName</a> - The name of the source
--   location where the slate VOD source is stored.
--   
--   <a>$sel:vodSourceName:SlateSource'</a>,
--   <a>slateSource_vodSourceName</a> - The slate VOD source name. The VOD
--   source must already exist in a source location before it can be used
--   for slate.
newSlateSource :: SlateSource

-- | The name of the source location where the slate VOD source is stored.
slateSource_sourceLocationName :: Lens' SlateSource (Maybe Text)

-- | The slate VOD source name. The VOD source must already exist in a
--   source location before it can be used for slate.
slateSource_vodSourceName :: Lens' SlateSource (Maybe Text)

-- | This response includes only the "type" : "object" property.
--   
--   <i>See:</i> <a>newSourceLocation</a> smart constructor.
data SourceLocation
SourceLocation' :: Maybe POSIX -> Maybe POSIX -> Maybe AccessConfiguration -> Maybe DefaultSegmentDeliveryConfiguration -> Maybe (HashMap Text Text) -> Text -> HttpConfiguration -> Text -> SourceLocation

-- | The timestamp that indicates when the source location was created.
[$sel:creationTime:SourceLocation'] :: SourceLocation -> Maybe POSIX

-- | The timestamp that indicates when the source location was last
--   modified.
[$sel:lastModifiedTime:SourceLocation'] :: SourceLocation -> Maybe POSIX

-- | The access configuration for the source location.
[$sel:accessConfiguration:SourceLocation'] :: SourceLocation -> Maybe AccessConfiguration

-- | The default segment delivery configuration.
[$sel:defaultSegmentDeliveryConfiguration:SourceLocation'] :: SourceLocation -> Maybe DefaultSegmentDeliveryConfiguration

-- | The tags assigned to the source location.
[$sel:tags:SourceLocation'] :: SourceLocation -> Maybe (HashMap Text Text)

-- | The name of the source location.
[$sel:sourceLocationName:SourceLocation'] :: SourceLocation -> Text

-- | The HTTP configuration for the source location.
[$sel:httpConfiguration:SourceLocation'] :: SourceLocation -> HttpConfiguration

-- | The ARN of the SourceLocation.
[$sel:arn:SourceLocation'] :: SourceLocation -> Text

-- | Create a value of <a>SourceLocation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:SourceLocation'</a>,
--   <a>sourceLocation_creationTime</a> - The timestamp that indicates when
--   the source location was created.
--   
--   <a>$sel:lastModifiedTime:SourceLocation'</a>,
--   <a>sourceLocation_lastModifiedTime</a> - The timestamp that indicates
--   when the source location was last modified.
--   
--   <a>$sel:accessConfiguration:SourceLocation'</a>,
--   <a>sourceLocation_accessConfiguration</a> - The access configuration
--   for the source location.
--   
--   <a>$sel:defaultSegmentDeliveryConfiguration:SourceLocation'</a>,
--   <a>sourceLocation_defaultSegmentDeliveryConfiguration</a> - The
--   default segment delivery configuration.
--   
--   <a>$sel:tags:SourceLocation'</a>, <a>sourceLocation_tags</a> - The
--   tags assigned to the source location.
--   
--   <a>$sel:sourceLocationName:SourceLocation'</a>,
--   <a>sourceLocation_sourceLocationName</a> - The name of the source
--   location.
--   
--   <a>$sel:httpConfiguration:SourceLocation'</a>,
--   <a>sourceLocation_httpConfiguration</a> - The HTTP configuration for
--   the source location.
--   
--   <a>$sel:arn:SourceLocation'</a>, <a>sourceLocation_arn</a> - The ARN
--   of the SourceLocation.
newSourceLocation :: Text -> HttpConfiguration -> Text -> SourceLocation

-- | The timestamp that indicates when the source location was created.
sourceLocation_creationTime :: Lens' SourceLocation (Maybe UTCTime)

-- | The timestamp that indicates when the source location was last
--   modified.
sourceLocation_lastModifiedTime :: Lens' SourceLocation (Maybe UTCTime)

-- | The access configuration for the source location.
sourceLocation_accessConfiguration :: Lens' SourceLocation (Maybe AccessConfiguration)

-- | The default segment delivery configuration.
sourceLocation_defaultSegmentDeliveryConfiguration :: Lens' SourceLocation (Maybe DefaultSegmentDeliveryConfiguration)

-- | The tags assigned to the source location.
sourceLocation_tags :: Lens' SourceLocation (Maybe (HashMap Text Text))

-- | The name of the source location.
sourceLocation_sourceLocationName :: Lens' SourceLocation Text

-- | The HTTP configuration for the source location.
sourceLocation_httpConfiguration :: Lens' SourceLocation HttpConfiguration

-- | The ARN of the SourceLocation.
sourceLocation_arn :: Lens' SourceLocation Text

-- | Splice insert message configuration.
--   
--   <i>See:</i> <a>newSpliceInsertMessage</a> smart constructor.
data SpliceInsertMessage
SpliceInsertMessage' :: Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> SpliceInsertMessage

-- | This is written to splice_insert.avail_num, as defined in section
--   9.7.3.1 of the SCTE-35 specification. The default value is 0. Values
--   must be between 0 and 256, inclusive.
[$sel:availNum:SpliceInsertMessage'] :: SpliceInsertMessage -> Maybe Int

-- | This is written to splice_insert.unique_program_id, as defined in
--   section 9.7.3.1 of the SCTE-35 specification. The default value is 0.
--   Values must be between 0 and 256, inclusive.
[$sel:uniqueProgramId:SpliceInsertMessage'] :: SpliceInsertMessage -> Maybe Int

-- | This is written to splice_insert.avails_expected, as defined in
--   section 9.7.3.1 of the SCTE-35 specification. The default value is 0.
--   Values must be between 0 and 256, inclusive.
[$sel:availsExpected:SpliceInsertMessage'] :: SpliceInsertMessage -> Maybe Int

-- | This is written to splice_insert.splice_event_id, as defined in
--   section 9.7.3.1 of the SCTE-35 specification. The default value is 1.
[$sel:spliceEventId:SpliceInsertMessage'] :: SpliceInsertMessage -> Maybe Int

-- | Create a value of <a>SpliceInsertMessage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:availNum:SpliceInsertMessage'</a>,
--   <a>spliceInsertMessage_availNum</a> - This is written to
--   splice_insert.avail_num, as defined in section 9.7.3.1 of the SCTE-35
--   specification. The default value is 0. Values must be between 0 and
--   256, inclusive.
--   
--   <a>$sel:uniqueProgramId:SpliceInsertMessage'</a>,
--   <a>spliceInsertMessage_uniqueProgramId</a> - This is written to
--   splice_insert.unique_program_id, as defined in section 9.7.3.1 of the
--   SCTE-35 specification. The default value is 0. Values must be between
--   0 and 256, inclusive.
--   
--   <a>$sel:availsExpected:SpliceInsertMessage'</a>,
--   <a>spliceInsertMessage_availsExpected</a> - This is written to
--   splice_insert.avails_expected, as defined in section 9.7.3.1 of the
--   SCTE-35 specification. The default value is 0. Values must be between
--   0 and 256, inclusive.
--   
--   <a>$sel:spliceEventId:SpliceInsertMessage'</a>,
--   <a>spliceInsertMessage_spliceEventId</a> - This is written to
--   splice_insert.splice_event_id, as defined in section 9.7.3.1 of the
--   SCTE-35 specification. The default value is 1.
newSpliceInsertMessage :: SpliceInsertMessage

-- | This is written to splice_insert.avail_num, as defined in section
--   9.7.3.1 of the SCTE-35 specification. The default value is 0. Values
--   must be between 0 and 256, inclusive.
spliceInsertMessage_availNum :: Lens' SpliceInsertMessage (Maybe Int)

-- | This is written to splice_insert.unique_program_id, as defined in
--   section 9.7.3.1 of the SCTE-35 specification. The default value is 0.
--   Values must be between 0 and 256, inclusive.
spliceInsertMessage_uniqueProgramId :: Lens' SpliceInsertMessage (Maybe Int)

-- | This is written to splice_insert.avails_expected, as defined in
--   section 9.7.3.1 of the SCTE-35 specification. The default value is 0.
--   Values must be between 0 and 256, inclusive.
spliceInsertMessage_availsExpected :: Lens' SpliceInsertMessage (Maybe Int)

-- | This is written to splice_insert.splice_event_id, as defined in
--   section 9.7.3.1 of the SCTE-35 specification. The default value is 1.
spliceInsertMessage_spliceEventId :: Lens' SpliceInsertMessage (Maybe Int)

-- | Program transition configuration.
--   
--   <i>See:</i> <a>newTransition</a> smart constructor.
data Transition
Transition' :: Maybe Integer -> Maybe Text -> Text -> RelativePosition -> Transition

-- | The date and time that the program is scheduled to start, in epoch
--   milliseconds.
[$sel:scheduledStartTimeMillis:Transition'] :: Transition -> Maybe Integer

-- | The name of the program that this program will be inserted next to, as
--   defined by RelativePosition.
[$sel:relativeProgram:Transition'] :: Transition -> Maybe Text

-- | Defines when the program plays in the schedule. You can set the value
--   to ABSOLUTE or RELATIVE.
--   
--   ABSOLUTE - The program plays at a specific wall clock time. This
--   setting can only be used for channels using the LINEAR PlaybackMode.
--   
--   Note the following considerations when using ABSOLUTE transitions:
--   
--   If the preceding program in the schedule has a duration that extends
--   past the wall clock time, MediaTailor truncates the preceding program
--   on a common segment boundary.
--   
--   If there are gaps in playback, MediaTailor plays the FillerSlate you
--   configured for your linear channel.
--   
--   RELATIVE - The program is inserted into the schedule either before or
--   after a program that you specify via RelativePosition.
[$sel:type':Transition'] :: Transition -> Text

-- | The position where this program will be inserted relative to the
--   RelativePosition.
[$sel:relativePosition:Transition'] :: Transition -> RelativePosition

-- | Create a value of <a>Transition</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:scheduledStartTimeMillis:Transition'</a>,
--   <a>transition_scheduledStartTimeMillis</a> - The date and time that
--   the program is scheduled to start, in epoch milliseconds.
--   
--   <a>$sel:relativeProgram:Transition'</a>,
--   <a>transition_relativeProgram</a> - The name of the program that this
--   program will be inserted next to, as defined by RelativePosition.
--   
--   <a>$sel:type':Transition'</a>, <a>transition_type</a> - Defines when
--   the program plays in the schedule. You can set the value to ABSOLUTE
--   or RELATIVE.
--   
--   ABSOLUTE - The program plays at a specific wall clock time. This
--   setting can only be used for channels using the LINEAR PlaybackMode.
--   
--   Note the following considerations when using ABSOLUTE transitions:
--   
--   If the preceding program in the schedule has a duration that extends
--   past the wall clock time, MediaTailor truncates the preceding program
--   on a common segment boundary.
--   
--   If there are gaps in playback, MediaTailor plays the FillerSlate you
--   configured for your linear channel.
--   
--   RELATIVE - The program is inserted into the schedule either before or
--   after a program that you specify via RelativePosition.
--   
--   <a>$sel:relativePosition:Transition'</a>,
--   <a>transition_relativePosition</a> - The position where this program
--   will be inserted relative to the RelativePosition.
newTransition :: Text -> RelativePosition -> Transition

-- | The date and time that the program is scheduled to start, in epoch
--   milliseconds.
transition_scheduledStartTimeMillis :: Lens' Transition (Maybe Integer)

-- | The name of the program that this program will be inserted next to, as
--   defined by RelativePosition.
transition_relativeProgram :: Lens' Transition (Maybe Text)

-- | Defines when the program plays in the schedule. You can set the value
--   to ABSOLUTE or RELATIVE.
--   
--   ABSOLUTE - The program plays at a specific wall clock time. This
--   setting can only be used for channels using the LINEAR PlaybackMode.
--   
--   Note the following considerations when using ABSOLUTE transitions:
--   
--   If the preceding program in the schedule has a duration that extends
--   past the wall clock time, MediaTailor truncates the preceding program
--   on a common segment boundary.
--   
--   If there are gaps in playback, MediaTailor plays the FillerSlate you
--   configured for your linear channel.
--   
--   RELATIVE - The program is inserted into the schedule either before or
--   after a program that you specify via RelativePosition.
transition_type :: Lens' Transition Text

-- | The position where this program will be inserted relative to the
--   RelativePosition.
transition_relativePosition :: Lens' Transition RelativePosition

-- | VOD source configuration parameters.
--   
--   <i>See:</i> <a>newVodSource</a> smart constructor.
data VodSource
VodSource' :: Maybe POSIX -> Maybe POSIX -> Maybe (HashMap Text Text) -> Text -> Text -> [HttpPackageConfiguration] -> Text -> VodSource

-- | The timestamp that indicates when the VOD source was created.
[$sel:creationTime:VodSource'] :: VodSource -> Maybe POSIX

-- | The timestamp that indicates when the VOD source was last modified.
[$sel:lastModifiedTime:VodSource'] :: VodSource -> Maybe POSIX

-- | The tags assigned to the VOD source.
[$sel:tags:VodSource'] :: VodSource -> Maybe (HashMap Text Text)

-- | The name of the VOD source.
[$sel:vodSourceName:VodSource'] :: VodSource -> Text

-- | The name of the source location that the VOD source is associated
--   with.
[$sel:sourceLocationName:VodSource'] :: VodSource -> Text

-- | The HTTP package configurations for the VOD source.
[$sel:httpPackageConfigurations:VodSource'] :: VodSource -> [HttpPackageConfiguration]

-- | The ARN for the VOD source.
[$sel:arn:VodSource'] :: VodSource -> Text

-- | Create a value of <a>VodSource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:VodSource'</a>, <a>vodSource_creationTime</a> -
--   The timestamp that indicates when the VOD source was created.
--   
--   <a>$sel:lastModifiedTime:VodSource'</a>,
--   <a>vodSource_lastModifiedTime</a> - The timestamp that indicates when
--   the VOD source was last modified.
--   
--   <a>$sel:tags:VodSource'</a>, <a>vodSource_tags</a> - The tags assigned
--   to the VOD source.
--   
--   <a>$sel:vodSourceName:VodSource'</a>, <a>vodSource_vodSourceName</a> -
--   The name of the VOD source.
--   
--   <a>$sel:sourceLocationName:VodSource'</a>,
--   <a>vodSource_sourceLocationName</a> - The name of the source location
--   that the VOD source is associated with.
--   
--   <a>$sel:httpPackageConfigurations:VodSource'</a>,
--   <a>vodSource_httpPackageConfigurations</a> - The HTTP package
--   configurations for the VOD source.
--   
--   <a>$sel:arn:VodSource'</a>, <a>vodSource_arn</a> - The ARN for the VOD
--   source.
newVodSource :: Text -> Text -> Text -> VodSource

-- | The timestamp that indicates when the VOD source was created.
vodSource_creationTime :: Lens' VodSource (Maybe UTCTime)

-- | The timestamp that indicates when the VOD source was last modified.
vodSource_lastModifiedTime :: Lens' VodSource (Maybe UTCTime)

-- | The tags assigned to the VOD source.
vodSource_tags :: Lens' VodSource (Maybe (HashMap Text Text))

-- | The name of the VOD source.
vodSource_vodSourceName :: Lens' VodSource Text

-- | The name of the source location that the VOD source is associated
--   with.
vodSource_sourceLocationName :: Lens' VodSource Text

-- | The HTTP package configurations for the VOD source.
vodSource_httpPackageConfigurations :: Lens' VodSource [HttpPackageConfiguration]

-- | The ARN for the VOD source.
vodSource_arn :: Lens' VodSource Text


-- | Adds tags to the specified playback configuration resource. You can
--   specify one or more tags to add.
module Network.AWS.MediaTailor.TagResource

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> HashMap Text Text -> TagResource

-- | The Amazon Resource Name (ARN) for the playback configuration. You can
--   get this from the response to any playback configuration request.
[$sel:resourceArn:TagResource'] :: TagResource -> Text

-- | A comma-separated list of tag key:value pairs.
[$sel:tags:TagResource'] :: TagResource -> HashMap Text Text

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The Amazon Resource Name (ARN) for the playback configuration. You can
--   get this from the response to any playback configuration request.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - A
--   comma-separated list of tag key:value pairs.
newTagResource :: Text -> TagResource

-- | The Amazon Resource Name (ARN) for the playback configuration. You can
--   get this from the response to any playback configuration request.
tagResource_resourceArn :: Lens' TagResource Text

-- | A comma-separated list of tag key:value pairs.
tagResource_tags :: Lens' TagResource (HashMap Text Text)

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newTagResourceResponse :: TagResourceResponse
instance GHC.Generics.Generic Network.AWS.MediaTailor.TagResource.TagResource
instance GHC.Show.Show Network.AWS.MediaTailor.TagResource.TagResource
instance GHC.Read.Read Network.AWS.MediaTailor.TagResource.TagResource
instance GHC.Classes.Eq Network.AWS.MediaTailor.TagResource.TagResource
instance GHC.Generics.Generic Network.AWS.MediaTailor.TagResource.TagResourceResponse
instance GHC.Show.Show Network.AWS.MediaTailor.TagResource.TagResourceResponse
instance GHC.Read.Read Network.AWS.MediaTailor.TagResource.TagResourceResponse
instance GHC.Classes.Eq Network.AWS.MediaTailor.TagResource.TagResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.MediaTailor.TagResource.TagResource
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.TagResource.TagResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.TagResource.TagResource
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.TagResource.TagResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.MediaTailor.TagResource.TagResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MediaTailor.TagResource.TagResource
instance Network.AWS.Data.Path.ToPath Network.AWS.MediaTailor.TagResource.TagResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.MediaTailor.TagResource.TagResource


-- | Stops a specific channel.
module Network.AWS.MediaTailor.StopChannel

-- | <i>See:</i> <a>newStopChannel</a> smart constructor.
data StopChannel
StopChannel' :: Text -> StopChannel

-- | The identifier for the channel you are working on.
[$sel:channelName:StopChannel'] :: StopChannel -> Text

-- | Create a value of <a>StopChannel</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelName:StopChannel'</a>, <a>stopChannel_channelName</a> -
--   The identifier for the channel you are working on.
newStopChannel :: Text -> StopChannel

-- | The identifier for the channel you are working on.
stopChannel_channelName :: Lens' StopChannel Text

-- | <i>See:</i> <a>newStopChannelResponse</a> smart constructor.
data StopChannelResponse
StopChannelResponse' :: Int -> StopChannelResponse

-- | The response's http status code.
[$sel:httpStatus:StopChannelResponse'] :: StopChannelResponse -> Int

-- | Create a value of <a>StopChannelResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:StopChannelResponse'</a>,
--   <a>stopChannelResponse_httpStatus</a> - The response's http status
--   code.
newStopChannelResponse :: Int -> StopChannelResponse

-- | The response's http status code.
stopChannelResponse_httpStatus :: Lens' StopChannelResponse Int
instance GHC.Generics.Generic Network.AWS.MediaTailor.StopChannel.StopChannel
instance GHC.Show.Show Network.AWS.MediaTailor.StopChannel.StopChannel
instance GHC.Read.Read Network.AWS.MediaTailor.StopChannel.StopChannel
instance GHC.Classes.Eq Network.AWS.MediaTailor.StopChannel.StopChannel
instance GHC.Generics.Generic Network.AWS.MediaTailor.StopChannel.StopChannelResponse
instance GHC.Show.Show Network.AWS.MediaTailor.StopChannel.StopChannelResponse
instance GHC.Read.Read Network.AWS.MediaTailor.StopChannel.StopChannelResponse
instance GHC.Classes.Eq Network.AWS.MediaTailor.StopChannel.StopChannelResponse
instance Network.AWS.Types.AWSRequest Network.AWS.MediaTailor.StopChannel.StopChannel
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.StopChannel.StopChannelResponse
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.StopChannel.StopChannel
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.StopChannel.StopChannel
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.MediaTailor.StopChannel.StopChannel
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MediaTailor.StopChannel.StopChannel
instance Network.AWS.Data.Path.ToPath Network.AWS.MediaTailor.StopChannel.StopChannel
instance Network.AWS.Data.Query.ToQuery Network.AWS.MediaTailor.StopChannel.StopChannel


-- | Starts a specific channel.
module Network.AWS.MediaTailor.StartChannel

-- | <i>See:</i> <a>newStartChannel</a> smart constructor.
data StartChannel
StartChannel' :: Text -> StartChannel

-- | The identifier for the channel you are working on.
[$sel:channelName:StartChannel'] :: StartChannel -> Text

-- | Create a value of <a>StartChannel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelName:StartChannel'</a>, <a>startChannel_channelName</a>
--   - The identifier for the channel you are working on.
newStartChannel :: Text -> StartChannel

-- | The identifier for the channel you are working on.
startChannel_channelName :: Lens' StartChannel Text

-- | <i>See:</i> <a>newStartChannelResponse</a> smart constructor.
data StartChannelResponse
StartChannelResponse' :: Int -> StartChannelResponse

-- | The response's http status code.
[$sel:httpStatus:StartChannelResponse'] :: StartChannelResponse -> Int

-- | Create a value of <a>StartChannelResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:StartChannelResponse'</a>,
--   <a>startChannelResponse_httpStatus</a> - The response's http status
--   code.
newStartChannelResponse :: Int -> StartChannelResponse

-- | The response's http status code.
startChannelResponse_httpStatus :: Lens' StartChannelResponse Int
instance GHC.Generics.Generic Network.AWS.MediaTailor.StartChannel.StartChannel
instance GHC.Show.Show Network.AWS.MediaTailor.StartChannel.StartChannel
instance GHC.Read.Read Network.AWS.MediaTailor.StartChannel.StartChannel
instance GHC.Classes.Eq Network.AWS.MediaTailor.StartChannel.StartChannel
instance GHC.Generics.Generic Network.AWS.MediaTailor.StartChannel.StartChannelResponse
instance GHC.Show.Show Network.AWS.MediaTailor.StartChannel.StartChannelResponse
instance GHC.Read.Read Network.AWS.MediaTailor.StartChannel.StartChannelResponse
instance GHC.Classes.Eq Network.AWS.MediaTailor.StartChannel.StartChannelResponse
instance Network.AWS.Types.AWSRequest Network.AWS.MediaTailor.StartChannel.StartChannel
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.StartChannel.StartChannelResponse
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.StartChannel.StartChannel
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.StartChannel.StartChannel
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.MediaTailor.StartChannel.StartChannel
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MediaTailor.StartChannel.StartChannel
instance Network.AWS.Data.Path.ToPath Network.AWS.MediaTailor.StartChannel.StartChannel
instance Network.AWS.Data.Query.ToQuery Network.AWS.MediaTailor.StartChannel.StartChannel


-- | Adds a new playback configuration to AWS Elemental MediaTailor.
module Network.AWS.MediaTailor.PutPlaybackConfiguration

-- | <i>See:</i> <a>newPutPlaybackConfiguration</a> smart constructor.
data PutPlaybackConfiguration
PutPlaybackConfiguration' :: Maybe Natural -> Maybe AvailSuppression -> Maybe Bumper -> Maybe Text -> Maybe Text -> Maybe DashConfigurationForPut -> Maybe ManifestProcessingRules -> Maybe LivePreRollConfiguration -> Maybe Text -> Maybe (HashMap Text (HashMap Text Text)) -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe CdnConfiguration -> PutPlaybackConfiguration

-- | Defines the maximum duration of underfilled ad time (in seconds)
--   allowed in an ad break. If the duration of underfilled ad time exceeds
--   the personalization threshold, then the personalization of the ad
--   break is abandoned and the underlying content is shown. This feature
--   applies to <i>ad replacement</i> in live and VOD streams, rather than
--   ad insertion, because it relies on an underlying content stream. For
--   more information about ad break behavior, including ad replacement and
--   insertion, see <a>Ad Behavior in AWS Elemental MediaTailor</a>.
[$sel:personalizationThresholdSeconds:PutPlaybackConfiguration'] :: PutPlaybackConfiguration -> Maybe Natural

-- | The configuration for avail suppression, also known as ad suppression.
--   For more information about ad suppression, see <a>Ad Suppression</a>.
[$sel:availSuppression:PutPlaybackConfiguration'] :: PutPlaybackConfiguration -> Maybe AvailSuppression

-- | The configuration for bumpers. Bumpers are short audio or video clips
--   that play at the start or before the end of an ad break. To learn more
--   about bumpers, see <a>Bumpers</a>.
[$sel:bumper:PutPlaybackConfiguration'] :: PutPlaybackConfiguration -> Maybe Bumper

-- | The URL for the ad decision server (ADS). This includes the
--   specification of static parameters and placeholders for dynamic
--   parameters. AWS Elemental MediaTailor substitutes player-specific and
--   session-specific parameters as needed when calling the ADS.
--   Alternately, for testing you can provide a static VAST URL. The
--   maximum length is 25,000 characters.
[$sel:adDecisionServerUrl:PutPlaybackConfiguration'] :: PutPlaybackConfiguration -> Maybe Text

-- | The URL prefix for the parent manifest for the stream, minus the asset
--   ID. The maximum length is 512 characters.
[$sel:videoContentSourceUrl:PutPlaybackConfiguration'] :: PutPlaybackConfiguration -> Maybe Text

-- | The configuration for DASH content.
[$sel:dashConfiguration:PutPlaybackConfiguration'] :: PutPlaybackConfiguration -> Maybe DashConfigurationForPut

-- | The configuration for manifest processing rules. Manifest processing
--   rules enable customization of the personalized manifests created by
--   MediaTailor.
[$sel:manifestProcessingRules:PutPlaybackConfiguration'] :: PutPlaybackConfiguration -> Maybe ManifestProcessingRules

-- | The configuration for pre-roll ad insertion.
[$sel:livePreRollConfiguration:PutPlaybackConfiguration'] :: PutPlaybackConfiguration -> Maybe LivePreRollConfiguration

-- | The identifier for the playback configuration.
[$sel:name:PutPlaybackConfiguration'] :: PutPlaybackConfiguration -> Maybe Text

-- | The player parameters and aliases used as dynamic variables during
--   session initialization. For more information, see <a>Domain
--   Variables</a>.
[$sel:configurationAliases:PutPlaybackConfiguration'] :: PutPlaybackConfiguration -> Maybe (HashMap Text (HashMap Text Text))

-- | The name that is used to associate this playback configuration with a
--   custom transcode profile. This overrides the dynamic transcoding
--   defaults of MediaTailor. Use this only if you have already set up
--   custom profiles with the help of AWS Support.
[$sel:transcodeProfileName:PutPlaybackConfiguration'] :: PutPlaybackConfiguration -> Maybe Text

-- | The tags to assign to the playback configuration.
[$sel:tags:PutPlaybackConfiguration'] :: PutPlaybackConfiguration -> Maybe (HashMap Text Text)

-- | The URL for a high-quality video asset to transcode and use to fill in
--   time that's not used by ads. AWS Elemental MediaTailor shows the slate
--   to fill in gaps in media content. Configuring the slate is optional
--   for non-VPAID configurations. For VPAID, the slate is required because
--   MediaTailor provides it in the slots that are designated for dynamic
--   ad content. The slate must be a high-quality asset that contains both
--   audio and video.
[$sel:slateAdUrl:PutPlaybackConfiguration'] :: PutPlaybackConfiguration -> Maybe Text

-- | The configuration for using a content delivery network (CDN), like
--   Amazon CloudFront, for content and ad segment management.
[$sel:cdnConfiguration:PutPlaybackConfiguration'] :: PutPlaybackConfiguration -> Maybe CdnConfiguration

-- | Create a value of <a>PutPlaybackConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:personalizationThresholdSeconds:PutPlaybackConfiguration'</a>,
--   <a>putPlaybackConfiguration_personalizationThresholdSeconds</a> -
--   Defines the maximum duration of underfilled ad time (in seconds)
--   allowed in an ad break. If the duration of underfilled ad time exceeds
--   the personalization threshold, then the personalization of the ad
--   break is abandoned and the underlying content is shown. This feature
--   applies to <i>ad replacement</i> in live and VOD streams, rather than
--   ad insertion, because it relies on an underlying content stream. For
--   more information about ad break behavior, including ad replacement and
--   insertion, see <a>Ad Behavior in AWS Elemental MediaTailor</a>.
--   
--   <a>$sel:availSuppression:PutPlaybackConfiguration'</a>,
--   <a>putPlaybackConfiguration_availSuppression</a> - The configuration
--   for avail suppression, also known as ad suppression. For more
--   information about ad suppression, see <a>Ad Suppression</a>.
--   
--   <a>$sel:bumper:PutPlaybackConfiguration'</a>,
--   <a>putPlaybackConfiguration_bumper</a> - The configuration for
--   bumpers. Bumpers are short audio or video clips that play at the start
--   or before the end of an ad break. To learn more about bumpers, see
--   <a>Bumpers</a>.
--   
--   <a>$sel:adDecisionServerUrl:PutPlaybackConfiguration'</a>,
--   <a>putPlaybackConfiguration_adDecisionServerUrl</a> - The URL for the
--   ad decision server (ADS). This includes the specification of static
--   parameters and placeholders for dynamic parameters. AWS Elemental
--   MediaTailor substitutes player-specific and session-specific
--   parameters as needed when calling the ADS. Alternately, for testing
--   you can provide a static VAST URL. The maximum length is 25,000
--   characters.
--   
--   <a>$sel:videoContentSourceUrl:PutPlaybackConfiguration'</a>,
--   <a>putPlaybackConfiguration_videoContentSourceUrl</a> - The URL prefix
--   for the parent manifest for the stream, minus the asset ID. The
--   maximum length is 512 characters.
--   
--   <a>$sel:dashConfiguration:PutPlaybackConfiguration'</a>,
--   <a>putPlaybackConfiguration_dashConfiguration</a> - The configuration
--   for DASH content.
--   
--   <a>$sel:manifestProcessingRules:PutPlaybackConfiguration'</a>,
--   <a>putPlaybackConfiguration_manifestProcessingRules</a> - The
--   configuration for manifest processing rules. Manifest processing rules
--   enable customization of the personalized manifests created by
--   MediaTailor.
--   
--   <a>$sel:livePreRollConfiguration:PutPlaybackConfiguration'</a>,
--   <a>putPlaybackConfiguration_livePreRollConfiguration</a> - The
--   configuration for pre-roll ad insertion.
--   
--   <a>$sel:name:PutPlaybackConfiguration'</a>,
--   <a>putPlaybackConfiguration_name</a> - The identifier for the playback
--   configuration.
--   
--   <a>$sel:configurationAliases:PutPlaybackConfiguration'</a>,
--   <a>putPlaybackConfiguration_configurationAliases</a> - The player
--   parameters and aliases used as dynamic variables during session
--   initialization. For more information, see <a>Domain Variables</a>.
--   
--   <a>$sel:transcodeProfileName:PutPlaybackConfiguration'</a>,
--   <a>putPlaybackConfiguration_transcodeProfileName</a> - The name that
--   is used to associate this playback configuration with a custom
--   transcode profile. This overrides the dynamic transcoding defaults of
--   MediaTailor. Use this only if you have already set up custom profiles
--   with the help of AWS Support.
--   
--   <a>$sel:tags:PutPlaybackConfiguration'</a>,
--   <a>putPlaybackConfiguration_tags</a> - The tags to assign to the
--   playback configuration.
--   
--   <a>$sel:slateAdUrl:PutPlaybackConfiguration'</a>,
--   <a>putPlaybackConfiguration_slateAdUrl</a> - The URL for a
--   high-quality video asset to transcode and use to fill in time that's
--   not used by ads. AWS Elemental MediaTailor shows the slate to fill in
--   gaps in media content. Configuring the slate is optional for non-VPAID
--   configurations. For VPAID, the slate is required because MediaTailor
--   provides it in the slots that are designated for dynamic ad content.
--   The slate must be a high-quality asset that contains both audio and
--   video.
--   
--   <a>$sel:cdnConfiguration:PutPlaybackConfiguration'</a>,
--   <a>putPlaybackConfiguration_cdnConfiguration</a> - The configuration
--   for using a content delivery network (CDN), like Amazon CloudFront,
--   for content and ad segment management.
newPutPlaybackConfiguration :: PutPlaybackConfiguration

-- | Defines the maximum duration of underfilled ad time (in seconds)
--   allowed in an ad break. If the duration of underfilled ad time exceeds
--   the personalization threshold, then the personalization of the ad
--   break is abandoned and the underlying content is shown. This feature
--   applies to <i>ad replacement</i> in live and VOD streams, rather than
--   ad insertion, because it relies on an underlying content stream. For
--   more information about ad break behavior, including ad replacement and
--   insertion, see <a>Ad Behavior in AWS Elemental MediaTailor</a>.
putPlaybackConfiguration_personalizationThresholdSeconds :: Lens' PutPlaybackConfiguration (Maybe Natural)

-- | The configuration for avail suppression, also known as ad suppression.
--   For more information about ad suppression, see <a>Ad Suppression</a>.
putPlaybackConfiguration_availSuppression :: Lens' PutPlaybackConfiguration (Maybe AvailSuppression)

-- | The configuration for bumpers. Bumpers are short audio or video clips
--   that play at the start or before the end of an ad break. To learn more
--   about bumpers, see <a>Bumpers</a>.
putPlaybackConfiguration_bumper :: Lens' PutPlaybackConfiguration (Maybe Bumper)

-- | The URL for the ad decision server (ADS). This includes the
--   specification of static parameters and placeholders for dynamic
--   parameters. AWS Elemental MediaTailor substitutes player-specific and
--   session-specific parameters as needed when calling the ADS.
--   Alternately, for testing you can provide a static VAST URL. The
--   maximum length is 25,000 characters.
putPlaybackConfiguration_adDecisionServerUrl :: Lens' PutPlaybackConfiguration (Maybe Text)

-- | The URL prefix for the parent manifest for the stream, minus the asset
--   ID. The maximum length is 512 characters.
putPlaybackConfiguration_videoContentSourceUrl :: Lens' PutPlaybackConfiguration (Maybe Text)

-- | The configuration for DASH content.
putPlaybackConfiguration_dashConfiguration :: Lens' PutPlaybackConfiguration (Maybe DashConfigurationForPut)

-- | The configuration for manifest processing rules. Manifest processing
--   rules enable customization of the personalized manifests created by
--   MediaTailor.
putPlaybackConfiguration_manifestProcessingRules :: Lens' PutPlaybackConfiguration (Maybe ManifestProcessingRules)

-- | The configuration for pre-roll ad insertion.
putPlaybackConfiguration_livePreRollConfiguration :: Lens' PutPlaybackConfiguration (Maybe LivePreRollConfiguration)

-- | The identifier for the playback configuration.
putPlaybackConfiguration_name :: Lens' PutPlaybackConfiguration (Maybe Text)

-- | The player parameters and aliases used as dynamic variables during
--   session initialization. For more information, see <a>Domain
--   Variables</a>.
putPlaybackConfiguration_configurationAliases :: Lens' PutPlaybackConfiguration (Maybe (HashMap Text (HashMap Text Text)))

-- | The name that is used to associate this playback configuration with a
--   custom transcode profile. This overrides the dynamic transcoding
--   defaults of MediaTailor. Use this only if you have already set up
--   custom profiles with the help of AWS Support.
putPlaybackConfiguration_transcodeProfileName :: Lens' PutPlaybackConfiguration (Maybe Text)

-- | The tags to assign to the playback configuration.
putPlaybackConfiguration_tags :: Lens' PutPlaybackConfiguration (Maybe (HashMap Text Text))

-- | The URL for a high-quality video asset to transcode and use to fill in
--   time that's not used by ads. AWS Elemental MediaTailor shows the slate
--   to fill in gaps in media content. Configuring the slate is optional
--   for non-VPAID configurations. For VPAID, the slate is required because
--   MediaTailor provides it in the slots that are designated for dynamic
--   ad content. The slate must be a high-quality asset that contains both
--   audio and video.
putPlaybackConfiguration_slateAdUrl :: Lens' PutPlaybackConfiguration (Maybe Text)

-- | The configuration for using a content delivery network (CDN), like
--   Amazon CloudFront, for content and ad segment management.
putPlaybackConfiguration_cdnConfiguration :: Lens' PutPlaybackConfiguration (Maybe CdnConfiguration)

-- | <i>See:</i> <a>newPutPlaybackConfigurationResponse</a> smart
--   constructor.
data PutPlaybackConfigurationResponse
PutPlaybackConfigurationResponse' :: Maybe Text -> Maybe HlsConfiguration -> Maybe Natural -> Maybe Text -> Maybe AvailSuppression -> Maybe Bumper -> Maybe Text -> Maybe Text -> Maybe DashConfiguration -> Maybe ManifestProcessingRules -> Maybe LogConfiguration -> Maybe LivePreRollConfiguration -> Maybe Text -> Maybe Text -> Maybe (HashMap Text (HashMap Text Text)) -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe CdnConfiguration -> Int -> PutPlaybackConfigurationResponse

-- | The URL that the player accesses to get a manifest from AWS Elemental
--   MediaTailor. This session will use server-side reporting.
[$sel:playbackEndpointPrefix:PutPlaybackConfigurationResponse'] :: PutPlaybackConfigurationResponse -> Maybe Text

-- | The configuration for HLS content.
[$sel:hlsConfiguration:PutPlaybackConfigurationResponse'] :: PutPlaybackConfigurationResponse -> Maybe HlsConfiguration

-- | Defines the maximum duration of underfilled ad time (in seconds)
--   allowed in an ad break. If the duration of underfilled ad time exceeds
--   the personalization threshold, then the personalization of the ad
--   break is abandoned and the underlying content is shown. This feature
--   applies to <i>ad replacement</i> in live and VOD streams, rather than
--   ad insertion, because it relies on an underlying content stream. For
--   more information about ad break behavior, including ad replacement and
--   insertion, see <a>Ad Behavior in AWS Elemental MediaTailor</a>.
[$sel:personalizationThresholdSeconds:PutPlaybackConfigurationResponse'] :: PutPlaybackConfigurationResponse -> Maybe Natural

-- | The Amazon Resource Name (ARN) for the playback configuration.
[$sel:playbackConfigurationArn:PutPlaybackConfigurationResponse'] :: PutPlaybackConfigurationResponse -> Maybe Text

-- | The configuration for avail suppression, also known as ad suppression.
--   For more information about ad suppression, see <a>Ad Suppression</a>.
[$sel:availSuppression:PutPlaybackConfigurationResponse'] :: PutPlaybackConfigurationResponse -> Maybe AvailSuppression

-- | The configuration for bumpers. Bumpers are short audio or video clips
--   that play at the start or before the end of an ad break. To learn more
--   about bumpers, see <a>Bumpers</a>.
[$sel:bumper:PutPlaybackConfigurationResponse'] :: PutPlaybackConfigurationResponse -> Maybe Bumper

-- | The URL for the ad decision server (ADS). This includes the
--   specification of static parameters and placeholders for dynamic
--   parameters. AWS Elemental MediaTailor substitutes player-specific and
--   session-specific parameters as needed when calling the ADS.
--   Alternately, for testing, you can provide a static VAST URL. The
--   maximum length is 25,000 characters.
[$sel:adDecisionServerUrl:PutPlaybackConfigurationResponse'] :: PutPlaybackConfigurationResponse -> Maybe Text

-- | The URL prefix for the parent manifest for the stream, minus the asset
--   ID. The maximum length is 512 characters.
[$sel:videoContentSourceUrl:PutPlaybackConfigurationResponse'] :: PutPlaybackConfigurationResponse -> Maybe Text

-- | The configuration for DASH content.
[$sel:dashConfiguration:PutPlaybackConfigurationResponse'] :: PutPlaybackConfigurationResponse -> Maybe DashConfiguration

-- | The configuration for manifest processing rules. Manifest processing
--   rules enable customization of the personalized manifests created by
--   MediaTailor.
[$sel:manifestProcessingRules:PutPlaybackConfigurationResponse'] :: PutPlaybackConfigurationResponse -> Maybe ManifestProcessingRules

-- | The Amazon CloudWatch log settings for a playback configuration.
[$sel:logConfiguration:PutPlaybackConfigurationResponse'] :: PutPlaybackConfigurationResponse -> Maybe LogConfiguration

-- | The configuration for pre-roll ad insertion.
[$sel:livePreRollConfiguration:PutPlaybackConfigurationResponse'] :: PutPlaybackConfigurationResponse -> Maybe LivePreRollConfiguration

-- | The identifier for the playback configuration.
[$sel:name:PutPlaybackConfigurationResponse'] :: PutPlaybackConfigurationResponse -> Maybe Text

-- | The URL that the player uses to initialize a session that uses
--   client-side reporting.
[$sel:sessionInitializationEndpointPrefix:PutPlaybackConfigurationResponse'] :: PutPlaybackConfigurationResponse -> Maybe Text

-- | The player parameters and aliases used as dynamic variables during
--   session initialization. For more information, see <a>Domain
--   Variables</a>.
[$sel:configurationAliases:PutPlaybackConfigurationResponse'] :: PutPlaybackConfigurationResponse -> Maybe (HashMap Text (HashMap Text Text))

-- | The name that is used to associate this playback configuration with a
--   custom transcode profile. This overrides the dynamic transcoding
--   defaults of MediaTailor. Use this only if you have already set up
--   custom profiles with the help of AWS Support.
[$sel:transcodeProfileName:PutPlaybackConfigurationResponse'] :: PutPlaybackConfigurationResponse -> Maybe Text

-- | The tags assigned to the playback configuration.
[$sel:tags:PutPlaybackConfigurationResponse'] :: PutPlaybackConfigurationResponse -> Maybe (HashMap Text Text)

-- | The URL for a high-quality video asset to transcode and use to fill in
--   time that's not used by ads. AWS Elemental MediaTailor shows the slate
--   to fill in gaps in media content. Configuring the slate is optional
--   for non-VPAID playback configurations. For VPAID, the slate is
--   required because MediaTailor provides it in the slots designated for
--   dynamic ad content. The slate must be a high-quality asset that
--   contains both audio and video.
[$sel:slateAdUrl:PutPlaybackConfigurationResponse'] :: PutPlaybackConfigurationResponse -> Maybe Text

-- | The configuration for using a content delivery network (CDN), like
--   Amazon CloudFront, for content and ad segment management.
[$sel:cdnConfiguration:PutPlaybackConfigurationResponse'] :: PutPlaybackConfigurationResponse -> Maybe CdnConfiguration

-- | The response's http status code.
[$sel:httpStatus:PutPlaybackConfigurationResponse'] :: PutPlaybackConfigurationResponse -> Int

-- | Create a value of <a>PutPlaybackConfigurationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:playbackEndpointPrefix:PutPlaybackConfigurationResponse'</a>,
--   <a>putPlaybackConfigurationResponse_playbackEndpointPrefix</a> - The
--   URL that the player accesses to get a manifest from AWS Elemental
--   MediaTailor. This session will use server-side reporting.
--   
--   <a>$sel:hlsConfiguration:PutPlaybackConfigurationResponse'</a>,
--   <a>putPlaybackConfigurationResponse_hlsConfiguration</a> - The
--   configuration for HLS content.
--   
--   <a>$sel:personalizationThresholdSeconds:PutPlaybackConfiguration'</a>,
--   <a>putPlaybackConfigurationResponse_personalizationThresholdSeconds</a>
--   - Defines the maximum duration of underfilled ad time (in seconds)
--   allowed in an ad break. If the duration of underfilled ad time exceeds
--   the personalization threshold, then the personalization of the ad
--   break is abandoned and the underlying content is shown. This feature
--   applies to <i>ad replacement</i> in live and VOD streams, rather than
--   ad insertion, because it relies on an underlying content stream. For
--   more information about ad break behavior, including ad replacement and
--   insertion, see <a>Ad Behavior in AWS Elemental MediaTailor</a>.
--   
--   
--   <a>$sel:playbackConfigurationArn:PutPlaybackConfigurationResponse'</a>,
--   <a>putPlaybackConfigurationResponse_playbackConfigurationArn</a> - The
--   Amazon Resource Name (ARN) for the playback configuration.
--   
--   <a>$sel:availSuppression:PutPlaybackConfiguration'</a>,
--   <a>putPlaybackConfigurationResponse_availSuppression</a> - The
--   configuration for avail suppression, also known as ad suppression. For
--   more information about ad suppression, see <a>Ad Suppression</a>.
--   
--   <a>$sel:bumper:PutPlaybackConfiguration'</a>,
--   <a>putPlaybackConfigurationResponse_bumper</a> - The configuration for
--   bumpers. Bumpers are short audio or video clips that play at the start
--   or before the end of an ad break. To learn more about bumpers, see
--   <a>Bumpers</a>.
--   
--   <a>$sel:adDecisionServerUrl:PutPlaybackConfiguration'</a>,
--   <a>putPlaybackConfigurationResponse_adDecisionServerUrl</a> - The URL
--   for the ad decision server (ADS). This includes the specification of
--   static parameters and placeholders for dynamic parameters. AWS
--   Elemental MediaTailor substitutes player-specific and session-specific
--   parameters as needed when calling the ADS. Alternately, for testing,
--   you can provide a static VAST URL. The maximum length is 25,000
--   characters.
--   
--   <a>$sel:videoContentSourceUrl:PutPlaybackConfiguration'</a>,
--   <a>putPlaybackConfigurationResponse_videoContentSourceUrl</a> - The
--   URL prefix for the parent manifest for the stream, minus the asset ID.
--   The maximum length is 512 characters.
--   
--   <a>$sel:dashConfiguration:PutPlaybackConfiguration'</a>,
--   <a>putPlaybackConfigurationResponse_dashConfiguration</a> - The
--   configuration for DASH content.
--   
--   <a>$sel:manifestProcessingRules:PutPlaybackConfiguration'</a>,
--   <a>putPlaybackConfigurationResponse_manifestProcessingRules</a> - The
--   configuration for manifest processing rules. Manifest processing rules
--   enable customization of the personalized manifests created by
--   MediaTailor.
--   
--   <a>$sel:logConfiguration:PutPlaybackConfigurationResponse'</a>,
--   <a>putPlaybackConfigurationResponse_logConfiguration</a> - The Amazon
--   CloudWatch log settings for a playback configuration.
--   
--   <a>$sel:livePreRollConfiguration:PutPlaybackConfiguration'</a>,
--   <a>putPlaybackConfigurationResponse_livePreRollConfiguration</a> - The
--   configuration for pre-roll ad insertion.
--   
--   <a>$sel:name:PutPlaybackConfiguration'</a>,
--   <a>putPlaybackConfigurationResponse_name</a> - The identifier for the
--   playback configuration.
--   
--   
--   <a>$sel:sessionInitializationEndpointPrefix:PutPlaybackConfigurationResponse'</a>,
--   <a>putPlaybackConfigurationResponse_sessionInitializationEndpointPrefix</a>
--   - The URL that the player uses to initialize a session that uses
--   client-side reporting.
--   
--   <a>$sel:configurationAliases:PutPlaybackConfiguration'</a>,
--   <a>putPlaybackConfigurationResponse_configurationAliases</a> - The
--   player parameters and aliases used as dynamic variables during session
--   initialization. For more information, see <a>Domain Variables</a>.
--   
--   <a>$sel:transcodeProfileName:PutPlaybackConfiguration'</a>,
--   <a>putPlaybackConfigurationResponse_transcodeProfileName</a> - The
--   name that is used to associate this playback configuration with a
--   custom transcode profile. This overrides the dynamic transcoding
--   defaults of MediaTailor. Use this only if you have already set up
--   custom profiles with the help of AWS Support.
--   
--   <a>$sel:tags:PutPlaybackConfiguration'</a>,
--   <a>putPlaybackConfigurationResponse_tags</a> - The tags assigned to
--   the playback configuration.
--   
--   <a>$sel:slateAdUrl:PutPlaybackConfiguration'</a>,
--   <a>putPlaybackConfigurationResponse_slateAdUrl</a> - The URL for a
--   high-quality video asset to transcode and use to fill in time that's
--   not used by ads. AWS Elemental MediaTailor shows the slate to fill in
--   gaps in media content. Configuring the slate is optional for non-VPAID
--   playback configurations. For VPAID, the slate is required because
--   MediaTailor provides it in the slots designated for dynamic ad
--   content. The slate must be a high-quality asset that contains both
--   audio and video.
--   
--   <a>$sel:cdnConfiguration:PutPlaybackConfiguration'</a>,
--   <a>putPlaybackConfigurationResponse_cdnConfiguration</a> - The
--   configuration for using a content delivery network (CDN), like Amazon
--   CloudFront, for content and ad segment management.
--   
--   <a>$sel:httpStatus:PutPlaybackConfigurationResponse'</a>,
--   <a>putPlaybackConfigurationResponse_httpStatus</a> - The response's
--   http status code.
newPutPlaybackConfigurationResponse :: Int -> PutPlaybackConfigurationResponse

-- | The URL that the player accesses to get a manifest from AWS Elemental
--   MediaTailor. This session will use server-side reporting.
putPlaybackConfigurationResponse_playbackEndpointPrefix :: Lens' PutPlaybackConfigurationResponse (Maybe Text)

-- | The configuration for HLS content.
putPlaybackConfigurationResponse_hlsConfiguration :: Lens' PutPlaybackConfigurationResponse (Maybe HlsConfiguration)

-- | Defines the maximum duration of underfilled ad time (in seconds)
--   allowed in an ad break. If the duration of underfilled ad time exceeds
--   the personalization threshold, then the personalization of the ad
--   break is abandoned and the underlying content is shown. This feature
--   applies to <i>ad replacement</i> in live and VOD streams, rather than
--   ad insertion, because it relies on an underlying content stream. For
--   more information about ad break behavior, including ad replacement and
--   insertion, see <a>Ad Behavior in AWS Elemental MediaTailor</a>.
putPlaybackConfigurationResponse_personalizationThresholdSeconds :: Lens' PutPlaybackConfigurationResponse (Maybe Natural)

-- | The Amazon Resource Name (ARN) for the playback configuration.
putPlaybackConfigurationResponse_playbackConfigurationArn :: Lens' PutPlaybackConfigurationResponse (Maybe Text)

-- | The configuration for avail suppression, also known as ad suppression.
--   For more information about ad suppression, see <a>Ad Suppression</a>.
putPlaybackConfigurationResponse_availSuppression :: Lens' PutPlaybackConfigurationResponse (Maybe AvailSuppression)

-- | The configuration for bumpers. Bumpers are short audio or video clips
--   that play at the start or before the end of an ad break. To learn more
--   about bumpers, see <a>Bumpers</a>.
putPlaybackConfigurationResponse_bumper :: Lens' PutPlaybackConfigurationResponse (Maybe Bumper)

-- | The URL for the ad decision server (ADS). This includes the
--   specification of static parameters and placeholders for dynamic
--   parameters. AWS Elemental MediaTailor substitutes player-specific and
--   session-specific parameters as needed when calling the ADS.
--   Alternately, for testing, you can provide a static VAST URL. The
--   maximum length is 25,000 characters.
putPlaybackConfigurationResponse_adDecisionServerUrl :: Lens' PutPlaybackConfigurationResponse (Maybe Text)

-- | The URL prefix for the parent manifest for the stream, minus the asset
--   ID. The maximum length is 512 characters.
putPlaybackConfigurationResponse_videoContentSourceUrl :: Lens' PutPlaybackConfigurationResponse (Maybe Text)

-- | The configuration for DASH content.
putPlaybackConfigurationResponse_dashConfiguration :: Lens' PutPlaybackConfigurationResponse (Maybe DashConfiguration)

-- | The configuration for manifest processing rules. Manifest processing
--   rules enable customization of the personalized manifests created by
--   MediaTailor.
putPlaybackConfigurationResponse_manifestProcessingRules :: Lens' PutPlaybackConfigurationResponse (Maybe ManifestProcessingRules)

-- | The Amazon CloudWatch log settings for a playback configuration.
putPlaybackConfigurationResponse_logConfiguration :: Lens' PutPlaybackConfigurationResponse (Maybe LogConfiguration)

-- | The configuration for pre-roll ad insertion.
putPlaybackConfigurationResponse_livePreRollConfiguration :: Lens' PutPlaybackConfigurationResponse (Maybe LivePreRollConfiguration)

-- | The identifier for the playback configuration.
putPlaybackConfigurationResponse_name :: Lens' PutPlaybackConfigurationResponse (Maybe Text)

-- | The URL that the player uses to initialize a session that uses
--   client-side reporting.
putPlaybackConfigurationResponse_sessionInitializationEndpointPrefix :: Lens' PutPlaybackConfigurationResponse (Maybe Text)

-- | The player parameters and aliases used as dynamic variables during
--   session initialization. For more information, see <a>Domain
--   Variables</a>.
putPlaybackConfigurationResponse_configurationAliases :: Lens' PutPlaybackConfigurationResponse (Maybe (HashMap Text (HashMap Text Text)))

-- | The name that is used to associate this playback configuration with a
--   custom transcode profile. This overrides the dynamic transcoding
--   defaults of MediaTailor. Use this only if you have already set up
--   custom profiles with the help of AWS Support.
putPlaybackConfigurationResponse_transcodeProfileName :: Lens' PutPlaybackConfigurationResponse (Maybe Text)

-- | The tags assigned to the playback configuration.
putPlaybackConfigurationResponse_tags :: Lens' PutPlaybackConfigurationResponse (Maybe (HashMap Text Text))

-- | The URL for a high-quality video asset to transcode and use to fill in
--   time that's not used by ads. AWS Elemental MediaTailor shows the slate
--   to fill in gaps in media content. Configuring the slate is optional
--   for non-VPAID playback configurations. For VPAID, the slate is
--   required because MediaTailor provides it in the slots designated for
--   dynamic ad content. The slate must be a high-quality asset that
--   contains both audio and video.
putPlaybackConfigurationResponse_slateAdUrl :: Lens' PutPlaybackConfigurationResponse (Maybe Text)

-- | The configuration for using a content delivery network (CDN), like
--   Amazon CloudFront, for content and ad segment management.
putPlaybackConfigurationResponse_cdnConfiguration :: Lens' PutPlaybackConfigurationResponse (Maybe CdnConfiguration)

-- | The response's http status code.
putPlaybackConfigurationResponse_httpStatus :: Lens' PutPlaybackConfigurationResponse Int
instance GHC.Generics.Generic Network.AWS.MediaTailor.PutPlaybackConfiguration.PutPlaybackConfiguration
instance GHC.Show.Show Network.AWS.MediaTailor.PutPlaybackConfiguration.PutPlaybackConfiguration
instance GHC.Read.Read Network.AWS.MediaTailor.PutPlaybackConfiguration.PutPlaybackConfiguration
instance GHC.Classes.Eq Network.AWS.MediaTailor.PutPlaybackConfiguration.PutPlaybackConfiguration
instance GHC.Generics.Generic Network.AWS.MediaTailor.PutPlaybackConfiguration.PutPlaybackConfigurationResponse
instance GHC.Show.Show Network.AWS.MediaTailor.PutPlaybackConfiguration.PutPlaybackConfigurationResponse
instance GHC.Read.Read Network.AWS.MediaTailor.PutPlaybackConfiguration.PutPlaybackConfigurationResponse
instance GHC.Classes.Eq Network.AWS.MediaTailor.PutPlaybackConfiguration.PutPlaybackConfigurationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.MediaTailor.PutPlaybackConfiguration.PutPlaybackConfiguration
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.PutPlaybackConfiguration.PutPlaybackConfigurationResponse
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.PutPlaybackConfiguration.PutPlaybackConfiguration
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.PutPlaybackConfiguration.PutPlaybackConfiguration
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.MediaTailor.PutPlaybackConfiguration.PutPlaybackConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MediaTailor.PutPlaybackConfiguration.PutPlaybackConfiguration
instance Network.AWS.Data.Path.ToPath Network.AWS.MediaTailor.PutPlaybackConfiguration.PutPlaybackConfiguration
instance Network.AWS.Data.Query.ToQuery Network.AWS.MediaTailor.PutPlaybackConfiguration.PutPlaybackConfiguration


-- | Creates an IAM policy for the channel.
module Network.AWS.MediaTailor.PutChannelPolicy

-- | <i>See:</i> <a>newPutChannelPolicy</a> smart constructor.
data PutChannelPolicy
PutChannelPolicy' :: Text -> Text -> PutChannelPolicy

-- | The identifier for the channel you are working on.
[$sel:channelName:PutChannelPolicy'] :: PutChannelPolicy -> Text

-- | Adds an IAM role that determines the permissions of your channel.
[$sel:policy:PutChannelPolicy'] :: PutChannelPolicy -> Text

-- | Create a value of <a>PutChannelPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelName:PutChannelPolicy'</a>,
--   <a>putChannelPolicy_channelName</a> - The identifier for the channel
--   you are working on.
--   
--   <a>$sel:policy:PutChannelPolicy'</a>, <a>putChannelPolicy_policy</a> -
--   Adds an IAM role that determines the permissions of your channel.
newPutChannelPolicy :: Text -> Text -> PutChannelPolicy

-- | The identifier for the channel you are working on.
putChannelPolicy_channelName :: Lens' PutChannelPolicy Text

-- | Adds an IAM role that determines the permissions of your channel.
putChannelPolicy_policy :: Lens' PutChannelPolicy Text

-- | <i>See:</i> <a>newPutChannelPolicyResponse</a> smart constructor.
data PutChannelPolicyResponse
PutChannelPolicyResponse' :: Int -> PutChannelPolicyResponse

-- | The response's http status code.
[$sel:httpStatus:PutChannelPolicyResponse'] :: PutChannelPolicyResponse -> Int

-- | Create a value of <a>PutChannelPolicyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:PutChannelPolicyResponse'</a>,
--   <a>putChannelPolicyResponse_httpStatus</a> - The response's http
--   status code.
newPutChannelPolicyResponse :: Int -> PutChannelPolicyResponse

-- | The response's http status code.
putChannelPolicyResponse_httpStatus :: Lens' PutChannelPolicyResponse Int
instance GHC.Generics.Generic Network.AWS.MediaTailor.PutChannelPolicy.PutChannelPolicy
instance GHC.Show.Show Network.AWS.MediaTailor.PutChannelPolicy.PutChannelPolicy
instance GHC.Read.Read Network.AWS.MediaTailor.PutChannelPolicy.PutChannelPolicy
instance GHC.Classes.Eq Network.AWS.MediaTailor.PutChannelPolicy.PutChannelPolicy
instance GHC.Generics.Generic Network.AWS.MediaTailor.PutChannelPolicy.PutChannelPolicyResponse
instance GHC.Show.Show Network.AWS.MediaTailor.PutChannelPolicy.PutChannelPolicyResponse
instance GHC.Read.Read Network.AWS.MediaTailor.PutChannelPolicy.PutChannelPolicyResponse
instance GHC.Classes.Eq Network.AWS.MediaTailor.PutChannelPolicy.PutChannelPolicyResponse
instance Network.AWS.Types.AWSRequest Network.AWS.MediaTailor.PutChannelPolicy.PutChannelPolicy
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.PutChannelPolicy.PutChannelPolicyResponse
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.PutChannelPolicy.PutChannelPolicy
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.PutChannelPolicy.PutChannelPolicy
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.MediaTailor.PutChannelPolicy.PutChannelPolicy
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MediaTailor.PutChannelPolicy.PutChannelPolicy
instance Network.AWS.Data.Path.ToPath Network.AWS.MediaTailor.PutChannelPolicy.PutChannelPolicy
instance Network.AWS.Data.Query.ToQuery Network.AWS.MediaTailor.PutChannelPolicy.PutChannelPolicy


-- | Lists all the VOD sources in a source location.
--   
--   This operation returns paginated results.
module Network.AWS.MediaTailor.ListVodSources

-- | <i>See:</i> <a>newListVodSources</a> smart constructor.
data ListVodSources
ListVodSources' :: Maybe Text -> Maybe Natural -> Text -> ListVodSources

-- | Pagination token from the GET list request. Use the token to fetch the
--   next page of results.
[$sel:nextToken:ListVodSources'] :: ListVodSources -> Maybe Text

-- | Upper bound on number of records to return. The maximum number of
--   results is 100.
[$sel:maxResults:ListVodSources'] :: ListVodSources -> Maybe Natural

-- | The identifier for the source location you are working on.
[$sel:sourceLocationName:ListVodSources'] :: ListVodSources -> Text

-- | Create a value of <a>ListVodSources</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListVodSources'</a>, <a>listVodSources_nextToken</a>
--   - Pagination token from the GET list request. Use the token to fetch
--   the next page of results.
--   
--   <a>$sel:maxResults:ListVodSources'</a>,
--   <a>listVodSources_maxResults</a> - Upper bound on number of records to
--   return. The maximum number of results is 100.
--   
--   <a>$sel:sourceLocationName:ListVodSources'</a>,
--   <a>listVodSources_sourceLocationName</a> - The identifier for the
--   source location you are working on.
newListVodSources :: Text -> ListVodSources

-- | Pagination token from the GET list request. Use the token to fetch the
--   next page of results.
listVodSources_nextToken :: Lens' ListVodSources (Maybe Text)

-- | Upper bound on number of records to return. The maximum number of
--   results is 100.
listVodSources_maxResults :: Lens' ListVodSources (Maybe Natural)

-- | The identifier for the source location you are working on.
listVodSources_sourceLocationName :: Lens' ListVodSources Text

-- | <i>See:</i> <a>newListVodSourcesResponse</a> smart constructor.
data ListVodSourcesResponse
ListVodSourcesResponse' :: Maybe [VodSource] -> Maybe Text -> Int -> ListVodSourcesResponse

-- | Lists the VOD sources.
[$sel:items:ListVodSourcesResponse'] :: ListVodSourcesResponse -> Maybe [VodSource]

-- | Pagination token from the list request. Use the token to fetch the
--   next page of results.
[$sel:nextToken:ListVodSourcesResponse'] :: ListVodSourcesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListVodSourcesResponse'] :: ListVodSourcesResponse -> Int

-- | Create a value of <a>ListVodSourcesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:ListVodSourcesResponse'</a>,
--   <a>listVodSourcesResponse_items</a> - Lists the VOD sources.
--   
--   <a>$sel:nextToken:ListVodSources'</a>,
--   <a>listVodSourcesResponse_nextToken</a> - Pagination token from the
--   list request. Use the token to fetch the next page of results.
--   
--   <a>$sel:httpStatus:ListVodSourcesResponse'</a>,
--   <a>listVodSourcesResponse_httpStatus</a> - The response's http status
--   code.
newListVodSourcesResponse :: Int -> ListVodSourcesResponse

-- | Lists the VOD sources.
listVodSourcesResponse_items :: Lens' ListVodSourcesResponse (Maybe [VodSource])

-- | Pagination token from the list request. Use the token to fetch the
--   next page of results.
listVodSourcesResponse_nextToken :: Lens' ListVodSourcesResponse (Maybe Text)

-- | The response's http status code.
listVodSourcesResponse_httpStatus :: Lens' ListVodSourcesResponse Int
instance GHC.Generics.Generic Network.AWS.MediaTailor.ListVodSources.ListVodSources
instance GHC.Show.Show Network.AWS.MediaTailor.ListVodSources.ListVodSources
instance GHC.Read.Read Network.AWS.MediaTailor.ListVodSources.ListVodSources
instance GHC.Classes.Eq Network.AWS.MediaTailor.ListVodSources.ListVodSources
instance GHC.Generics.Generic Network.AWS.MediaTailor.ListVodSources.ListVodSourcesResponse
instance GHC.Show.Show Network.AWS.MediaTailor.ListVodSources.ListVodSourcesResponse
instance GHC.Read.Read Network.AWS.MediaTailor.ListVodSources.ListVodSourcesResponse
instance GHC.Classes.Eq Network.AWS.MediaTailor.ListVodSources.ListVodSourcesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.MediaTailor.ListVodSources.ListVodSources
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.ListVodSources.ListVodSourcesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.MediaTailor.ListVodSources.ListVodSources
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.ListVodSources.ListVodSources
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.ListVodSources.ListVodSources
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.MediaTailor.ListVodSources.ListVodSources
instance Network.AWS.Data.Path.ToPath Network.AWS.MediaTailor.ListVodSources.ListVodSources
instance Network.AWS.Data.Query.ToQuery Network.AWS.MediaTailor.ListVodSources.ListVodSources


-- | Returns a list of the tags assigned to the specified playback
--   configuration resource.
module Network.AWS.MediaTailor.ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | The Amazon Resource Name (ARN) for the playback configuration. You can
--   get this from the response to any playback configuration request.
[$sel:resourceArn:ListTagsForResource'] :: ListTagsForResource -> Text

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The Amazon Resource Name
--   (ARN) for the playback configuration. You can get this from the
--   response to any playback configuration request.
newListTagsForResource :: Text -> ListTagsForResource

-- | The Amazon Resource Name (ARN) for the playback configuration. You can
--   get this from the response to any playback configuration request.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe (HashMap Text Text) -> Int -> ListTagsForResourceResponse

-- | A comma-separated list of tag key:value pairs.
[$sel:tags:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Int

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - A comma-separated list of
--   tag key:value pairs.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | A comma-separated list of tag key:value pairs.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int
instance GHC.Generics.Generic Network.AWS.MediaTailor.ListTagsForResource.ListTagsForResource
instance GHC.Show.Show Network.AWS.MediaTailor.ListTagsForResource.ListTagsForResource
instance GHC.Read.Read Network.AWS.MediaTailor.ListTagsForResource.ListTagsForResource
instance GHC.Classes.Eq Network.AWS.MediaTailor.ListTagsForResource.ListTagsForResource
instance GHC.Generics.Generic Network.AWS.MediaTailor.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Show.Show Network.AWS.MediaTailor.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Read.Read Network.AWS.MediaTailor.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Classes.Eq Network.AWS.MediaTailor.ListTagsForResource.ListTagsForResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.MediaTailor.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.ListTagsForResource.ListTagsForResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.MediaTailor.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Path.ToPath Network.AWS.MediaTailor.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.MediaTailor.ListTagsForResource.ListTagsForResource


-- | Retrieves a list of source locations.
--   
--   This operation returns paginated results.
module Network.AWS.MediaTailor.ListSourceLocations

-- | <i>See:</i> <a>newListSourceLocations</a> smart constructor.
data ListSourceLocations
ListSourceLocations' :: Maybe Text -> Maybe Natural -> ListSourceLocations

-- | Pagination token from the GET list request. Use the token to fetch the
--   next page of results.
[$sel:nextToken:ListSourceLocations'] :: ListSourceLocations -> Maybe Text

-- | Upper bound on number of records to return. The maximum number of
--   results is 100.
[$sel:maxResults:ListSourceLocations'] :: ListSourceLocations -> Maybe Natural

-- | Create a value of <a>ListSourceLocations</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSourceLocations'</a>,
--   <a>listSourceLocations_nextToken</a> - Pagination token from the GET
--   list request. Use the token to fetch the next page of results.
--   
--   <a>$sel:maxResults:ListSourceLocations'</a>,
--   <a>listSourceLocations_maxResults</a> - Upper bound on number of
--   records to return. The maximum number of results is 100.
newListSourceLocations :: ListSourceLocations

-- | Pagination token from the GET list request. Use the token to fetch the
--   next page of results.
listSourceLocations_nextToken :: Lens' ListSourceLocations (Maybe Text)

-- | Upper bound on number of records to return. The maximum number of
--   results is 100.
listSourceLocations_maxResults :: Lens' ListSourceLocations (Maybe Natural)

-- | <i>See:</i> <a>newListSourceLocationsResponse</a> smart constructor.
data ListSourceLocationsResponse
ListSourceLocationsResponse' :: Maybe [SourceLocation] -> Maybe Text -> Int -> ListSourceLocationsResponse

-- | An array of source locations.
[$sel:items:ListSourceLocationsResponse'] :: ListSourceLocationsResponse -> Maybe [SourceLocation]

-- | Pagination token from the list request. Use the token to fetch the
--   next page of results.
[$sel:nextToken:ListSourceLocationsResponse'] :: ListSourceLocationsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListSourceLocationsResponse'] :: ListSourceLocationsResponse -> Int

-- | Create a value of <a>ListSourceLocationsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:ListSourceLocationsResponse'</a>,
--   <a>listSourceLocationsResponse_items</a> - An array of source
--   locations.
--   
--   <a>$sel:nextToken:ListSourceLocations'</a>,
--   <a>listSourceLocationsResponse_nextToken</a> - Pagination token from
--   the list request. Use the token to fetch the next page of results.
--   
--   <a>$sel:httpStatus:ListSourceLocationsResponse'</a>,
--   <a>listSourceLocationsResponse_httpStatus</a> - The response's http
--   status code.
newListSourceLocationsResponse :: Int -> ListSourceLocationsResponse

-- | An array of source locations.
listSourceLocationsResponse_items :: Lens' ListSourceLocationsResponse (Maybe [SourceLocation])

-- | Pagination token from the list request. Use the token to fetch the
--   next page of results.
listSourceLocationsResponse_nextToken :: Lens' ListSourceLocationsResponse (Maybe Text)

-- | The response's http status code.
listSourceLocationsResponse_httpStatus :: Lens' ListSourceLocationsResponse Int
instance GHC.Generics.Generic Network.AWS.MediaTailor.ListSourceLocations.ListSourceLocations
instance GHC.Show.Show Network.AWS.MediaTailor.ListSourceLocations.ListSourceLocations
instance GHC.Read.Read Network.AWS.MediaTailor.ListSourceLocations.ListSourceLocations
instance GHC.Classes.Eq Network.AWS.MediaTailor.ListSourceLocations.ListSourceLocations
instance GHC.Generics.Generic Network.AWS.MediaTailor.ListSourceLocations.ListSourceLocationsResponse
instance GHC.Show.Show Network.AWS.MediaTailor.ListSourceLocations.ListSourceLocationsResponse
instance GHC.Read.Read Network.AWS.MediaTailor.ListSourceLocations.ListSourceLocationsResponse
instance GHC.Classes.Eq Network.AWS.MediaTailor.ListSourceLocations.ListSourceLocationsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.MediaTailor.ListSourceLocations.ListSourceLocations
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.ListSourceLocations.ListSourceLocationsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.MediaTailor.ListSourceLocations.ListSourceLocations
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.ListSourceLocations.ListSourceLocations
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.ListSourceLocations.ListSourceLocations
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.MediaTailor.ListSourceLocations.ListSourceLocations
instance Network.AWS.Data.Path.ToPath Network.AWS.MediaTailor.ListSourceLocations.ListSourceLocations
instance Network.AWS.Data.Query.ToQuery Network.AWS.MediaTailor.ListSourceLocations.ListSourceLocations


-- | Creates a new prefetch schedule.
--   
--   This operation returns paginated results.
module Network.AWS.MediaTailor.ListPrefetchSchedules

-- | <i>See:</i> <a>newListPrefetchSchedules</a> smart constructor.
data ListPrefetchSchedules
ListPrefetchSchedules' :: Maybe Text -> Maybe Natural -> Maybe Text -> Text -> ListPrefetchSchedules

-- | (Optional) If the playback configuration has more than MaxResults
--   prefetch schedules, use NextToken to get the second and subsequent
--   pages of results.
--   
--   For the first ListPrefetchSchedulesRequest request, omit this value.
--   
--   For the second and subsequent requests, get the value of NextToken
--   from the previous response and specify that value for NextToken in the
--   request.
--   
--   If the previous response didn't include a NextToken element, there are
--   no more prefetch schedules to get.
[$sel:nextToken:ListPrefetchSchedules'] :: ListPrefetchSchedules -> Maybe Text

-- | The maximum number of prefetch schedules that you want MediaTailor to
--   return in response to the current request. If the playback
--   configuration has more than MaxResults prefetch schedules, use the
--   value of NextToken in the response to get the next page of results.
[$sel:maxResults:ListPrefetchSchedules'] :: ListPrefetchSchedules -> Maybe Natural

-- | An optional filtering parameter whereby MediaTailor filters the
--   prefetch schedules to include only specific streams.
[$sel:streamId:ListPrefetchSchedules'] :: ListPrefetchSchedules -> Maybe Text

-- | The name of the playback configuration.
[$sel:playbackConfigurationName:ListPrefetchSchedules'] :: ListPrefetchSchedules -> Text

-- | Create a value of <a>ListPrefetchSchedules</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListPrefetchSchedules'</a>,
--   <a>listPrefetchSchedules_nextToken</a> - (Optional) If the playback
--   configuration has more than MaxResults prefetch schedules, use
--   NextToken to get the second and subsequent pages of results.
--   
--   For the first ListPrefetchSchedulesRequest request, omit this value.
--   
--   For the second and subsequent requests, get the value of NextToken
--   from the previous response and specify that value for NextToken in the
--   request.
--   
--   If the previous response didn't include a NextToken element, there are
--   no more prefetch schedules to get.
--   
--   <a>$sel:maxResults:ListPrefetchSchedules'</a>,
--   <a>listPrefetchSchedules_maxResults</a> - The maximum number of
--   prefetch schedules that you want MediaTailor to return in response to
--   the current request. If the playback configuration has more than
--   MaxResults prefetch schedules, use the value of NextToken in the
--   response to get the next page of results.
--   
--   <a>$sel:streamId:ListPrefetchSchedules'</a>,
--   <a>listPrefetchSchedules_streamId</a> - An optional filtering
--   parameter whereby MediaTailor filters the prefetch schedules to
--   include only specific streams.
--   
--   <a>$sel:playbackConfigurationName:ListPrefetchSchedules'</a>,
--   <a>listPrefetchSchedules_playbackConfigurationName</a> - The name of
--   the playback configuration.
newListPrefetchSchedules :: Text -> ListPrefetchSchedules

-- | (Optional) If the playback configuration has more than MaxResults
--   prefetch schedules, use NextToken to get the second and subsequent
--   pages of results.
--   
--   For the first ListPrefetchSchedulesRequest request, omit this value.
--   
--   For the second and subsequent requests, get the value of NextToken
--   from the previous response and specify that value for NextToken in the
--   request.
--   
--   If the previous response didn't include a NextToken element, there are
--   no more prefetch schedules to get.
listPrefetchSchedules_nextToken :: Lens' ListPrefetchSchedules (Maybe Text)

-- | The maximum number of prefetch schedules that you want MediaTailor to
--   return in response to the current request. If the playback
--   configuration has more than MaxResults prefetch schedules, use the
--   value of NextToken in the response to get the next page of results.
listPrefetchSchedules_maxResults :: Lens' ListPrefetchSchedules (Maybe Natural)

-- | An optional filtering parameter whereby MediaTailor filters the
--   prefetch schedules to include only specific streams.
listPrefetchSchedules_streamId :: Lens' ListPrefetchSchedules (Maybe Text)

-- | The name of the playback configuration.
listPrefetchSchedules_playbackConfigurationName :: Lens' ListPrefetchSchedules Text

-- | <i>See:</i> <a>newListPrefetchSchedulesResponse</a> smart constructor.
data ListPrefetchSchedulesResponse
ListPrefetchSchedulesResponse' :: Maybe [PrefetchSchedule] -> Maybe Text -> Int -> ListPrefetchSchedulesResponse

-- | Lists the prefetch schedules. An empty Items list doesn't mean there
--   aren't more items to fetch, just that that page was empty.
[$sel:items:ListPrefetchSchedulesResponse'] :: ListPrefetchSchedulesResponse -> Maybe [PrefetchSchedule]

-- | The value that you will use forNextToken in the next
--   ListPrefetchSchedulesRequest request.
[$sel:nextToken:ListPrefetchSchedulesResponse'] :: ListPrefetchSchedulesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListPrefetchSchedulesResponse'] :: ListPrefetchSchedulesResponse -> Int

-- | Create a value of <a>ListPrefetchSchedulesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:ListPrefetchSchedulesResponse'</a>,
--   <a>listPrefetchSchedulesResponse_items</a> - Lists the prefetch
--   schedules. An empty Items list doesn't mean there aren't more items to
--   fetch, just that that page was empty.
--   
--   <a>$sel:nextToken:ListPrefetchSchedules'</a>,
--   <a>listPrefetchSchedulesResponse_nextToken</a> - The value that you
--   will use forNextToken in the next ListPrefetchSchedulesRequest
--   request.
--   
--   <a>$sel:httpStatus:ListPrefetchSchedulesResponse'</a>,
--   <a>listPrefetchSchedulesResponse_httpStatus</a> - The response's http
--   status code.
newListPrefetchSchedulesResponse :: Int -> ListPrefetchSchedulesResponse

-- | Lists the prefetch schedules. An empty Items list doesn't mean there
--   aren't more items to fetch, just that that page was empty.
listPrefetchSchedulesResponse_items :: Lens' ListPrefetchSchedulesResponse (Maybe [PrefetchSchedule])

-- | The value that you will use forNextToken in the next
--   ListPrefetchSchedulesRequest request.
listPrefetchSchedulesResponse_nextToken :: Lens' ListPrefetchSchedulesResponse (Maybe Text)

-- | The response's http status code.
listPrefetchSchedulesResponse_httpStatus :: Lens' ListPrefetchSchedulesResponse Int
instance GHC.Generics.Generic Network.AWS.MediaTailor.ListPrefetchSchedules.ListPrefetchSchedules
instance GHC.Show.Show Network.AWS.MediaTailor.ListPrefetchSchedules.ListPrefetchSchedules
instance GHC.Read.Read Network.AWS.MediaTailor.ListPrefetchSchedules.ListPrefetchSchedules
instance GHC.Classes.Eq Network.AWS.MediaTailor.ListPrefetchSchedules.ListPrefetchSchedules
instance GHC.Generics.Generic Network.AWS.MediaTailor.ListPrefetchSchedules.ListPrefetchSchedulesResponse
instance GHC.Show.Show Network.AWS.MediaTailor.ListPrefetchSchedules.ListPrefetchSchedulesResponse
instance GHC.Read.Read Network.AWS.MediaTailor.ListPrefetchSchedules.ListPrefetchSchedulesResponse
instance GHC.Classes.Eq Network.AWS.MediaTailor.ListPrefetchSchedules.ListPrefetchSchedulesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.MediaTailor.ListPrefetchSchedules.ListPrefetchSchedules
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.ListPrefetchSchedules.ListPrefetchSchedulesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.MediaTailor.ListPrefetchSchedules.ListPrefetchSchedules
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.ListPrefetchSchedules.ListPrefetchSchedules
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.ListPrefetchSchedules.ListPrefetchSchedules
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.MediaTailor.ListPrefetchSchedules.ListPrefetchSchedules
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MediaTailor.ListPrefetchSchedules.ListPrefetchSchedules
instance Network.AWS.Data.Path.ToPath Network.AWS.MediaTailor.ListPrefetchSchedules.ListPrefetchSchedules
instance Network.AWS.Data.Query.ToQuery Network.AWS.MediaTailor.ListPrefetchSchedules.ListPrefetchSchedules


-- | Returns a list of the playback configurations defined in AWS Elemental
--   MediaTailor. You can specify a maximum number of configurations to
--   return at a time. The default maximum is 50. Results are returned in
--   pagefuls. If MediaTailor has more configurations than the specified
--   maximum, it provides parameters in the response that you can use to
--   retrieve the next pageful.
--   
--   This operation returns paginated results.
module Network.AWS.MediaTailor.ListPlaybackConfigurations

-- | <i>See:</i> <a>newListPlaybackConfigurations</a> smart constructor.
data ListPlaybackConfigurations
ListPlaybackConfigurations' :: Maybe Text -> Maybe Natural -> ListPlaybackConfigurations

-- | Pagination token returned by the GET list request when results exceed
--   the maximum allowed. Use the token to fetch the next page of results.
[$sel:nextToken:ListPlaybackConfigurations'] :: ListPlaybackConfigurations -> Maybe Text

-- | Maximum number of records to return.
[$sel:maxResults:ListPlaybackConfigurations'] :: ListPlaybackConfigurations -> Maybe Natural

-- | Create a value of <a>ListPlaybackConfigurations</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListPlaybackConfigurations'</a>,
--   <a>listPlaybackConfigurations_nextToken</a> - Pagination token
--   returned by the GET list request when results exceed the maximum
--   allowed. Use the token to fetch the next page of results.
--   
--   <a>$sel:maxResults:ListPlaybackConfigurations'</a>,
--   <a>listPlaybackConfigurations_maxResults</a> - Maximum number of
--   records to return.
newListPlaybackConfigurations :: ListPlaybackConfigurations

-- | Pagination token returned by the GET list request when results exceed
--   the maximum allowed. Use the token to fetch the next page of results.
listPlaybackConfigurations_nextToken :: Lens' ListPlaybackConfigurations (Maybe Text)

-- | Maximum number of records to return.
listPlaybackConfigurations_maxResults :: Lens' ListPlaybackConfigurations (Maybe Natural)

-- | <i>See:</i> <a>newListPlaybackConfigurationsResponse</a> smart
--   constructor.
data ListPlaybackConfigurationsResponse
ListPlaybackConfigurationsResponse' :: Maybe [PlaybackConfiguration] -> Maybe Text -> Int -> ListPlaybackConfigurationsResponse

-- | Array of playback configurations. This might be all the available
--   configurations or a subset, depending on the settings that you provide
--   and the total number of configurations stored.
[$sel:items:ListPlaybackConfigurationsResponse'] :: ListPlaybackConfigurationsResponse -> Maybe [PlaybackConfiguration]

-- | Pagination token returned by the GET list request when results exceed
--   the maximum allowed. Use the token to fetch the next page of results.
[$sel:nextToken:ListPlaybackConfigurationsResponse'] :: ListPlaybackConfigurationsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListPlaybackConfigurationsResponse'] :: ListPlaybackConfigurationsResponse -> Int

-- | Create a value of <a>ListPlaybackConfigurationsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:ListPlaybackConfigurationsResponse'</a>,
--   <a>listPlaybackConfigurationsResponse_items</a> - Array of playback
--   configurations. This might be all the available configurations or a
--   subset, depending on the settings that you provide and the total
--   number of configurations stored.
--   
--   <a>$sel:nextToken:ListPlaybackConfigurations'</a>,
--   <a>listPlaybackConfigurationsResponse_nextToken</a> - Pagination token
--   returned by the GET list request when results exceed the maximum
--   allowed. Use the token to fetch the next page of results.
--   
--   <a>$sel:httpStatus:ListPlaybackConfigurationsResponse'</a>,
--   <a>listPlaybackConfigurationsResponse_httpStatus</a> - The response's
--   http status code.
newListPlaybackConfigurationsResponse :: Int -> ListPlaybackConfigurationsResponse

-- | Array of playback configurations. This might be all the available
--   configurations or a subset, depending on the settings that you provide
--   and the total number of configurations stored.
listPlaybackConfigurationsResponse_items :: Lens' ListPlaybackConfigurationsResponse (Maybe [PlaybackConfiguration])

-- | Pagination token returned by the GET list request when results exceed
--   the maximum allowed. Use the token to fetch the next page of results.
listPlaybackConfigurationsResponse_nextToken :: Lens' ListPlaybackConfigurationsResponse (Maybe Text)

-- | The response's http status code.
listPlaybackConfigurationsResponse_httpStatus :: Lens' ListPlaybackConfigurationsResponse Int
instance GHC.Generics.Generic Network.AWS.MediaTailor.ListPlaybackConfigurations.ListPlaybackConfigurations
instance GHC.Show.Show Network.AWS.MediaTailor.ListPlaybackConfigurations.ListPlaybackConfigurations
instance GHC.Read.Read Network.AWS.MediaTailor.ListPlaybackConfigurations.ListPlaybackConfigurations
instance GHC.Classes.Eq Network.AWS.MediaTailor.ListPlaybackConfigurations.ListPlaybackConfigurations
instance GHC.Generics.Generic Network.AWS.MediaTailor.ListPlaybackConfigurations.ListPlaybackConfigurationsResponse
instance GHC.Show.Show Network.AWS.MediaTailor.ListPlaybackConfigurations.ListPlaybackConfigurationsResponse
instance GHC.Read.Read Network.AWS.MediaTailor.ListPlaybackConfigurations.ListPlaybackConfigurationsResponse
instance GHC.Classes.Eq Network.AWS.MediaTailor.ListPlaybackConfigurations.ListPlaybackConfigurationsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.MediaTailor.ListPlaybackConfigurations.ListPlaybackConfigurations
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.ListPlaybackConfigurations.ListPlaybackConfigurationsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.MediaTailor.ListPlaybackConfigurations.ListPlaybackConfigurations
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.ListPlaybackConfigurations.ListPlaybackConfigurations
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.ListPlaybackConfigurations.ListPlaybackConfigurations
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.MediaTailor.ListPlaybackConfigurations.ListPlaybackConfigurations
instance Network.AWS.Data.Path.ToPath Network.AWS.MediaTailor.ListPlaybackConfigurations.ListPlaybackConfigurations
instance Network.AWS.Data.Query.ToQuery Network.AWS.MediaTailor.ListPlaybackConfigurations.ListPlaybackConfigurations


-- | Retrieves a list of channels that are associated with this account.
--   
--   This operation returns paginated results.
module Network.AWS.MediaTailor.ListChannels

-- | <i>See:</i> <a>newListChannels</a> smart constructor.
data ListChannels
ListChannels' :: Maybe Text -> Maybe Natural -> ListChannels

-- | Pagination token from the GET list request. Use the token to fetch the
--   next page of results.
[$sel:nextToken:ListChannels'] :: ListChannels -> Maybe Text

-- | Upper bound on number of records to return. The maximum number of
--   results is 100.
[$sel:maxResults:ListChannels'] :: ListChannels -> Maybe Natural

-- | Create a value of <a>ListChannels</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListChannels'</a>, <a>listChannels_nextToken</a> -
--   Pagination token from the GET list request. Use the token to fetch the
--   next page of results.
--   
--   <a>$sel:maxResults:ListChannels'</a>, <a>listChannels_maxResults</a> -
--   Upper bound on number of records to return. The maximum number of
--   results is 100.
newListChannels :: ListChannels

-- | Pagination token from the GET list request. Use the token to fetch the
--   next page of results.
listChannels_nextToken :: Lens' ListChannels (Maybe Text)

-- | Upper bound on number of records to return. The maximum number of
--   results is 100.
listChannels_maxResults :: Lens' ListChannels (Maybe Natural)

-- | <i>See:</i> <a>newListChannelsResponse</a> smart constructor.
data ListChannelsResponse
ListChannelsResponse' :: Maybe [Channel] -> Maybe Text -> Int -> ListChannelsResponse

-- | An array of channels that are associated with this account.
[$sel:items:ListChannelsResponse'] :: ListChannelsResponse -> Maybe [Channel]

-- | Pagination token returned by the list request when results exceed the
--   maximum allowed. Use the token to fetch the next page of results.
[$sel:nextToken:ListChannelsResponse'] :: ListChannelsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListChannelsResponse'] :: ListChannelsResponse -> Int

-- | Create a value of <a>ListChannelsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:ListChannelsResponse'</a>,
--   <a>listChannelsResponse_items</a> - An array of channels that are
--   associated with this account.
--   
--   <a>$sel:nextToken:ListChannels'</a>,
--   <a>listChannelsResponse_nextToken</a> - Pagination token returned by
--   the list request when results exceed the maximum allowed. Use the
--   token to fetch the next page of results.
--   
--   <a>$sel:httpStatus:ListChannelsResponse'</a>,
--   <a>listChannelsResponse_httpStatus</a> - The response's http status
--   code.
newListChannelsResponse :: Int -> ListChannelsResponse

-- | An array of channels that are associated with this account.
listChannelsResponse_items :: Lens' ListChannelsResponse (Maybe [Channel])

-- | Pagination token returned by the list request when results exceed the
--   maximum allowed. Use the token to fetch the next page of results.
listChannelsResponse_nextToken :: Lens' ListChannelsResponse (Maybe Text)

-- | The response's http status code.
listChannelsResponse_httpStatus :: Lens' ListChannelsResponse Int
instance GHC.Generics.Generic Network.AWS.MediaTailor.ListChannels.ListChannels
instance GHC.Show.Show Network.AWS.MediaTailor.ListChannels.ListChannels
instance GHC.Read.Read Network.AWS.MediaTailor.ListChannels.ListChannels
instance GHC.Classes.Eq Network.AWS.MediaTailor.ListChannels.ListChannels
instance GHC.Generics.Generic Network.AWS.MediaTailor.ListChannels.ListChannelsResponse
instance GHC.Show.Show Network.AWS.MediaTailor.ListChannels.ListChannelsResponse
instance GHC.Read.Read Network.AWS.MediaTailor.ListChannels.ListChannelsResponse
instance GHC.Classes.Eq Network.AWS.MediaTailor.ListChannels.ListChannelsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.MediaTailor.ListChannels.ListChannels
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.ListChannels.ListChannelsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.MediaTailor.ListChannels.ListChannels
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.ListChannels.ListChannels
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.ListChannels.ListChannels
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.MediaTailor.ListChannels.ListChannels
instance Network.AWS.Data.Path.ToPath Network.AWS.MediaTailor.ListChannels.ListChannels
instance Network.AWS.Data.Query.ToQuery Network.AWS.MediaTailor.ListChannels.ListChannels


-- | Returns a list of alerts for the given resource.
--   
--   This operation returns paginated results.
module Network.AWS.MediaTailor.ListAlerts

-- | <i>See:</i> <a>newListAlerts</a> smart constructor.
data ListAlerts
ListAlerts' :: Maybe Text -> Maybe Natural -> Text -> ListAlerts

-- | Pagination token from the GET list request. Use the token to fetch the
--   next page of results.
[$sel:nextToken:ListAlerts'] :: ListAlerts -> Maybe Text

-- | Upper bound on number of records to return. The maximum number of
--   results is 100.
[$sel:maxResults:ListAlerts'] :: ListAlerts -> Maybe Natural

-- | The Amazon Resource Name (ARN) of the resource.
[$sel:resourceArn:ListAlerts'] :: ListAlerts -> Text

-- | Create a value of <a>ListAlerts</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListAlerts'</a>, <a>listAlerts_nextToken</a> -
--   Pagination token from the GET list request. Use the token to fetch the
--   next page of results.
--   
--   <a>$sel:maxResults:ListAlerts'</a>, <a>listAlerts_maxResults</a> -
--   Upper bound on number of records to return. The maximum number of
--   results is 100.
--   
--   <a>$sel:resourceArn:ListAlerts'</a>, <a>listAlerts_resourceArn</a> -
--   The Amazon Resource Name (ARN) of the resource.
newListAlerts :: Text -> ListAlerts

-- | Pagination token from the GET list request. Use the token to fetch the
--   next page of results.
listAlerts_nextToken :: Lens' ListAlerts (Maybe Text)

-- | Upper bound on number of records to return. The maximum number of
--   results is 100.
listAlerts_maxResults :: Lens' ListAlerts (Maybe Natural)

-- | The Amazon Resource Name (ARN) of the resource.
listAlerts_resourceArn :: Lens' ListAlerts Text

-- | <i>See:</i> <a>newListAlertsResponse</a> smart constructor.
data ListAlertsResponse
ListAlertsResponse' :: Maybe [Alert] -> Maybe Text -> Int -> ListAlertsResponse

-- | An array of alerts that are associated with this resource.
[$sel:items:ListAlertsResponse'] :: ListAlertsResponse -> Maybe [Alert]

-- | Pagination token from the list request. Use the token to fetch the
--   next page of results.
[$sel:nextToken:ListAlertsResponse'] :: ListAlertsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListAlertsResponse'] :: ListAlertsResponse -> Int

-- | Create a value of <a>ListAlertsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:ListAlertsResponse'</a>, <a>listAlertsResponse_items</a>
--   - An array of alerts that are associated with this resource.
--   
--   <a>$sel:nextToken:ListAlerts'</a>, <a>listAlertsResponse_nextToken</a>
--   - Pagination token from the list request. Use the token to fetch the
--   next page of results.
--   
--   <a>$sel:httpStatus:ListAlertsResponse'</a>,
--   <a>listAlertsResponse_httpStatus</a> - The response's http status
--   code.
newListAlertsResponse :: Int -> ListAlertsResponse

-- | An array of alerts that are associated with this resource.
listAlertsResponse_items :: Lens' ListAlertsResponse (Maybe [Alert])

-- | Pagination token from the list request. Use the token to fetch the
--   next page of results.
listAlertsResponse_nextToken :: Lens' ListAlertsResponse (Maybe Text)

-- | The response's http status code.
listAlertsResponse_httpStatus :: Lens' ListAlertsResponse Int
instance GHC.Generics.Generic Network.AWS.MediaTailor.ListAlerts.ListAlerts
instance GHC.Show.Show Network.AWS.MediaTailor.ListAlerts.ListAlerts
instance GHC.Read.Read Network.AWS.MediaTailor.ListAlerts.ListAlerts
instance GHC.Classes.Eq Network.AWS.MediaTailor.ListAlerts.ListAlerts
instance GHC.Generics.Generic Network.AWS.MediaTailor.ListAlerts.ListAlertsResponse
instance GHC.Show.Show Network.AWS.MediaTailor.ListAlerts.ListAlertsResponse
instance GHC.Read.Read Network.AWS.MediaTailor.ListAlerts.ListAlertsResponse
instance GHC.Classes.Eq Network.AWS.MediaTailor.ListAlerts.ListAlertsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.MediaTailor.ListAlerts.ListAlerts
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.ListAlerts.ListAlertsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.MediaTailor.ListAlerts.ListAlerts
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.ListAlerts.ListAlerts
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.ListAlerts.ListAlerts
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.MediaTailor.ListAlerts.ListAlerts
instance Network.AWS.Data.Path.ToPath Network.AWS.MediaTailor.ListAlerts.ListAlerts
instance Network.AWS.Data.Query.ToQuery Network.AWS.MediaTailor.ListAlerts.ListAlerts


-- | Returns information about the prefetch schedule for a specific
--   playback configuration. If you call GetPrefetchSchedule on an expired
--   prefetch schedule, MediaTailor returns an HTTP 404 status code.
module Network.AWS.MediaTailor.GetPrefetchSchedule

-- | <i>See:</i> <a>newGetPrefetchSchedule</a> smart constructor.
data GetPrefetchSchedule
GetPrefetchSchedule' :: Text -> Text -> GetPrefetchSchedule

-- | The identifier for the playback configuration.
[$sel:name:GetPrefetchSchedule'] :: GetPrefetchSchedule -> Text

-- | The name of the playback configuration.
[$sel:playbackConfigurationName:GetPrefetchSchedule'] :: GetPrefetchSchedule -> Text

-- | Create a value of <a>GetPrefetchSchedule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:GetPrefetchSchedule'</a>, <a>getPrefetchSchedule_name</a>
--   - The identifier for the playback configuration.
--   
--   <a>$sel:playbackConfigurationName:GetPrefetchSchedule'</a>,
--   <a>getPrefetchSchedule_playbackConfigurationName</a> - The name of the
--   playback configuration.
newGetPrefetchSchedule :: Text -> Text -> GetPrefetchSchedule

-- | The identifier for the playback configuration.
getPrefetchSchedule_name :: Lens' GetPrefetchSchedule Text

-- | The name of the playback configuration.
getPrefetchSchedule_playbackConfigurationName :: Lens' GetPrefetchSchedule Text

-- | <i>See:</i> <a>newGetPrefetchScheduleResponse</a> smart constructor.
data GetPrefetchScheduleResponse
GetPrefetchScheduleResponse' :: Maybe Text -> Maybe Text -> Maybe PrefetchRetrieval -> Maybe Text -> Maybe PrefetchConsumption -> Maybe Text -> Int -> GetPrefetchScheduleResponse

-- | The Amazon Resource Name (ARN) of the prefetch schedule.
[$sel:arn:GetPrefetchScheduleResponse'] :: GetPrefetchScheduleResponse -> Maybe Text

-- | The name of the playback configuration to create the prefetch schedule
--   for.
[$sel:playbackConfigurationName:GetPrefetchScheduleResponse'] :: GetPrefetchScheduleResponse -> Maybe Text

-- | A complex type that contains settings for prefetch retrieval from the
--   ad decision server (ADS).
[$sel:retrieval:GetPrefetchScheduleResponse'] :: GetPrefetchScheduleResponse -> Maybe PrefetchRetrieval

-- | The name of the prefetch schedule. The name must be unique among all
--   prefetch schedules that are associated with the specified playback
--   configuration.
[$sel:name:GetPrefetchScheduleResponse'] :: GetPrefetchScheduleResponse -> Maybe Text

-- | Consumption settings determine how, and when, MediaTailor places the
--   prefetched ads into ad breaks. Ad consumption occurs within a span of
--   time that you define, called a <i>consumption window</i>. You can
--   designate which ad breaks that MediaTailor fills with prefetch ads by
--   setting avail matching criteria.
[$sel:consumption:GetPrefetchScheduleResponse'] :: GetPrefetchScheduleResponse -> Maybe PrefetchConsumption

-- | An optional stream identifier that you can specify in order to
--   prefetch for multiple streams that use the same playback
--   configuration.
[$sel:streamId:GetPrefetchScheduleResponse'] :: GetPrefetchScheduleResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetPrefetchScheduleResponse'] :: GetPrefetchScheduleResponse -> Int

-- | Create a value of <a>GetPrefetchScheduleResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:GetPrefetchScheduleResponse'</a>,
--   <a>getPrefetchScheduleResponse_arn</a> - The Amazon Resource Name
--   (ARN) of the prefetch schedule.
--   
--   <a>$sel:playbackConfigurationName:GetPrefetchSchedule'</a>,
--   <a>getPrefetchScheduleResponse_playbackConfigurationName</a> - The
--   name of the playback configuration to create the prefetch schedule
--   for.
--   
--   <a>$sel:retrieval:GetPrefetchScheduleResponse'</a>,
--   <a>getPrefetchScheduleResponse_retrieval</a> - A complex type that
--   contains settings for prefetch retrieval from the ad decision server
--   (ADS).
--   
--   <a>$sel:name:GetPrefetchSchedule'</a>,
--   <a>getPrefetchScheduleResponse_name</a> - The name of the prefetch
--   schedule. The name must be unique among all prefetch schedules that
--   are associated with the specified playback configuration.
--   
--   <a>$sel:consumption:GetPrefetchScheduleResponse'</a>,
--   <a>getPrefetchScheduleResponse_consumption</a> - Consumption settings
--   determine how, and when, MediaTailor places the prefetched ads into ad
--   breaks. Ad consumption occurs within a span of time that you define,
--   called a <i>consumption window</i>. You can designate which ad breaks
--   that MediaTailor fills with prefetch ads by setting avail matching
--   criteria.
--   
--   <a>$sel:streamId:GetPrefetchScheduleResponse'</a>,
--   <a>getPrefetchScheduleResponse_streamId</a> - An optional stream
--   identifier that you can specify in order to prefetch for multiple
--   streams that use the same playback configuration.
--   
--   <a>$sel:httpStatus:GetPrefetchScheduleResponse'</a>,
--   <a>getPrefetchScheduleResponse_httpStatus</a> - The response's http
--   status code.
newGetPrefetchScheduleResponse :: Int -> GetPrefetchScheduleResponse

-- | The Amazon Resource Name (ARN) of the prefetch schedule.
getPrefetchScheduleResponse_arn :: Lens' GetPrefetchScheduleResponse (Maybe Text)

-- | The name of the playback configuration to create the prefetch schedule
--   for.
getPrefetchScheduleResponse_playbackConfigurationName :: Lens' GetPrefetchScheduleResponse (Maybe Text)

-- | A complex type that contains settings for prefetch retrieval from the
--   ad decision server (ADS).
getPrefetchScheduleResponse_retrieval :: Lens' GetPrefetchScheduleResponse (Maybe PrefetchRetrieval)

-- | The name of the prefetch schedule. The name must be unique among all
--   prefetch schedules that are associated with the specified playback
--   configuration.
getPrefetchScheduleResponse_name :: Lens' GetPrefetchScheduleResponse (Maybe Text)

-- | Consumption settings determine how, and when, MediaTailor places the
--   prefetched ads into ad breaks. Ad consumption occurs within a span of
--   time that you define, called a <i>consumption window</i>. You can
--   designate which ad breaks that MediaTailor fills with prefetch ads by
--   setting avail matching criteria.
getPrefetchScheduleResponse_consumption :: Lens' GetPrefetchScheduleResponse (Maybe PrefetchConsumption)

-- | An optional stream identifier that you can specify in order to
--   prefetch for multiple streams that use the same playback
--   configuration.
getPrefetchScheduleResponse_streamId :: Lens' GetPrefetchScheduleResponse (Maybe Text)

-- | The response's http status code.
getPrefetchScheduleResponse_httpStatus :: Lens' GetPrefetchScheduleResponse Int
instance GHC.Generics.Generic Network.AWS.MediaTailor.GetPrefetchSchedule.GetPrefetchSchedule
instance GHC.Show.Show Network.AWS.MediaTailor.GetPrefetchSchedule.GetPrefetchSchedule
instance GHC.Read.Read Network.AWS.MediaTailor.GetPrefetchSchedule.GetPrefetchSchedule
instance GHC.Classes.Eq Network.AWS.MediaTailor.GetPrefetchSchedule.GetPrefetchSchedule
instance GHC.Generics.Generic Network.AWS.MediaTailor.GetPrefetchSchedule.GetPrefetchScheduleResponse
instance GHC.Show.Show Network.AWS.MediaTailor.GetPrefetchSchedule.GetPrefetchScheduleResponse
instance GHC.Read.Read Network.AWS.MediaTailor.GetPrefetchSchedule.GetPrefetchScheduleResponse
instance GHC.Classes.Eq Network.AWS.MediaTailor.GetPrefetchSchedule.GetPrefetchScheduleResponse
instance Network.AWS.Types.AWSRequest Network.AWS.MediaTailor.GetPrefetchSchedule.GetPrefetchSchedule
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.GetPrefetchSchedule.GetPrefetchScheduleResponse
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.GetPrefetchSchedule.GetPrefetchSchedule
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.GetPrefetchSchedule.GetPrefetchSchedule
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.MediaTailor.GetPrefetchSchedule.GetPrefetchSchedule
instance Network.AWS.Data.Path.ToPath Network.AWS.MediaTailor.GetPrefetchSchedule.GetPrefetchSchedule
instance Network.AWS.Data.Query.ToQuery Network.AWS.MediaTailor.GetPrefetchSchedule.GetPrefetchSchedule


-- | Returns the playback configuration for the specified name.
module Network.AWS.MediaTailor.GetPlaybackConfiguration

-- | <i>See:</i> <a>newGetPlaybackConfiguration</a> smart constructor.
data GetPlaybackConfiguration
GetPlaybackConfiguration' :: Text -> GetPlaybackConfiguration

-- | The identifier for the playback configuration.
[$sel:name:GetPlaybackConfiguration'] :: GetPlaybackConfiguration -> Text

-- | Create a value of <a>GetPlaybackConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:GetPlaybackConfiguration'</a>,
--   <a>getPlaybackConfiguration_name</a> - The identifier for the playback
--   configuration.
newGetPlaybackConfiguration :: Text -> GetPlaybackConfiguration

-- | The identifier for the playback configuration.
getPlaybackConfiguration_name :: Lens' GetPlaybackConfiguration Text

-- | <i>See:</i> <a>newGetPlaybackConfigurationResponse</a> smart
--   constructor.
data GetPlaybackConfigurationResponse
GetPlaybackConfigurationResponse' :: Maybe Text -> Maybe HlsConfiguration -> Maybe Natural -> Maybe Text -> Maybe AvailSuppression -> Maybe Bumper -> Maybe Text -> Maybe Text -> Maybe DashConfiguration -> Maybe ManifestProcessingRules -> Maybe LogConfiguration -> Maybe LivePreRollConfiguration -> Maybe Text -> Maybe Text -> Maybe (HashMap Text (HashMap Text Text)) -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe CdnConfiguration -> Int -> GetPlaybackConfigurationResponse

-- | The URL that the player accesses to get a manifest from AWS Elemental
--   MediaTailor. This session will use server-side reporting.
[$sel:playbackEndpointPrefix:GetPlaybackConfigurationResponse'] :: GetPlaybackConfigurationResponse -> Maybe Text

-- | The configuration for HLS content.
[$sel:hlsConfiguration:GetPlaybackConfigurationResponse'] :: GetPlaybackConfigurationResponse -> Maybe HlsConfiguration

-- | Defines the maximum duration of underfilled ad time (in seconds)
--   allowed in an ad break. If the duration of underfilled ad time exceeds
--   the personalization threshold, then the personalization of the ad
--   break is abandoned and the underlying content is shown. This feature
--   applies to <i>ad replacement</i> in live and VOD streams, rather than
--   ad insertion, because it relies on an underlying content stream. For
--   more information about ad break behavior, including ad replacement and
--   insertion, see <a>Ad Behavior in AWS Elemental MediaTailor</a>.
[$sel:personalizationThresholdSeconds:GetPlaybackConfigurationResponse'] :: GetPlaybackConfigurationResponse -> Maybe Natural

-- | The Amazon Resource Name (ARN) for the playback configuration.
[$sel:playbackConfigurationArn:GetPlaybackConfigurationResponse'] :: GetPlaybackConfigurationResponse -> Maybe Text

-- | The configuration for avail suppression, also known as ad suppression.
--   For more information about ad suppression, see <a>Ad Suppression</a>.
[$sel:availSuppression:GetPlaybackConfigurationResponse'] :: GetPlaybackConfigurationResponse -> Maybe AvailSuppression

-- | The configuration for bumpers. Bumpers are short audio or video clips
--   that play at the start or before the end of an ad break. To learn more
--   about bumpers, see <a>Bumpers</a>.
[$sel:bumper:GetPlaybackConfigurationResponse'] :: GetPlaybackConfigurationResponse -> Maybe Bumper

-- | The URL for the ad decision server (ADS). This includes the
--   specification of static parameters and placeholders for dynamic
--   parameters. AWS Elemental MediaTailor substitutes player-specific and
--   session-specific parameters as needed when calling the ADS.
--   Alternately, for testing, you can provide a static VAST URL. The
--   maximum length is 25,000 characters.
[$sel:adDecisionServerUrl:GetPlaybackConfigurationResponse'] :: GetPlaybackConfigurationResponse -> Maybe Text

-- | The URL prefix for the parent manifest for the stream, minus the asset
--   ID. The maximum length is 512 characters.
[$sel:videoContentSourceUrl:GetPlaybackConfigurationResponse'] :: GetPlaybackConfigurationResponse -> Maybe Text

-- | The configuration for DASH content.
[$sel:dashConfiguration:GetPlaybackConfigurationResponse'] :: GetPlaybackConfigurationResponse -> Maybe DashConfiguration

-- | The configuration for manifest processing rules. Manifest processing
--   rules enable customization of the personalized manifests created by
--   MediaTailor.
[$sel:manifestProcessingRules:GetPlaybackConfigurationResponse'] :: GetPlaybackConfigurationResponse -> Maybe ManifestProcessingRules

-- | The Amazon CloudWatch log settings for a playback configuration.
[$sel:logConfiguration:GetPlaybackConfigurationResponse'] :: GetPlaybackConfigurationResponse -> Maybe LogConfiguration

-- | The configuration for pre-roll ad insertion.
[$sel:livePreRollConfiguration:GetPlaybackConfigurationResponse'] :: GetPlaybackConfigurationResponse -> Maybe LivePreRollConfiguration

-- | The identifier for the playback configuration.
[$sel:name:GetPlaybackConfigurationResponse'] :: GetPlaybackConfigurationResponse -> Maybe Text

-- | The URL that the player uses to initialize a session that uses
--   client-side reporting.
[$sel:sessionInitializationEndpointPrefix:GetPlaybackConfigurationResponse'] :: GetPlaybackConfigurationResponse -> Maybe Text

-- | The player parameters and aliases used as dynamic variables during
--   session initialization. For more information, see <a>Domain
--   Variables</a>.
[$sel:configurationAliases:GetPlaybackConfigurationResponse'] :: GetPlaybackConfigurationResponse -> Maybe (HashMap Text (HashMap Text Text))

-- | The name that is used to associate this playback configuration with a
--   custom transcode profile. This overrides the dynamic transcoding
--   defaults of MediaTailor. Use this only if you have already set up
--   custom profiles with the help of AWS Support.
[$sel:transcodeProfileName:GetPlaybackConfigurationResponse'] :: GetPlaybackConfigurationResponse -> Maybe Text

-- | The tags assigned to the playback configuration.
[$sel:tags:GetPlaybackConfigurationResponse'] :: GetPlaybackConfigurationResponse -> Maybe (HashMap Text Text)

-- | The URL for a high-quality video asset to transcode and use to fill in
--   time that's not used by ads. AWS Elemental MediaTailor shows the slate
--   to fill in gaps in media content. Configuring the slate is optional
--   for non-VPAID playback configurations. For VPAID, the slate is
--   required because MediaTailor provides it in the slots designated for
--   dynamic ad content. The slate must be a high-quality asset that
--   contains both audio and video.
[$sel:slateAdUrl:GetPlaybackConfigurationResponse'] :: GetPlaybackConfigurationResponse -> Maybe Text

-- | The configuration for using a content delivery network (CDN), like
--   Amazon CloudFront, for content and ad segment management.
[$sel:cdnConfiguration:GetPlaybackConfigurationResponse'] :: GetPlaybackConfigurationResponse -> Maybe CdnConfiguration

-- | The response's http status code.
[$sel:httpStatus:GetPlaybackConfigurationResponse'] :: GetPlaybackConfigurationResponse -> Int

-- | Create a value of <a>GetPlaybackConfigurationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:playbackEndpointPrefix:GetPlaybackConfigurationResponse'</a>,
--   <a>getPlaybackConfigurationResponse_playbackEndpointPrefix</a> - The
--   URL that the player accesses to get a manifest from AWS Elemental
--   MediaTailor. This session will use server-side reporting.
--   
--   <a>$sel:hlsConfiguration:GetPlaybackConfigurationResponse'</a>,
--   <a>getPlaybackConfigurationResponse_hlsConfiguration</a> - The
--   configuration for HLS content.
--   
--   
--   <a>$sel:personalizationThresholdSeconds:GetPlaybackConfigurationResponse'</a>,
--   <a>getPlaybackConfigurationResponse_personalizationThresholdSeconds</a>
--   - Defines the maximum duration of underfilled ad time (in seconds)
--   allowed in an ad break. If the duration of underfilled ad time exceeds
--   the personalization threshold, then the personalization of the ad
--   break is abandoned and the underlying content is shown. This feature
--   applies to <i>ad replacement</i> in live and VOD streams, rather than
--   ad insertion, because it relies on an underlying content stream. For
--   more information about ad break behavior, including ad replacement and
--   insertion, see <a>Ad Behavior in AWS Elemental MediaTailor</a>.
--   
--   
--   <a>$sel:playbackConfigurationArn:GetPlaybackConfigurationResponse'</a>,
--   <a>getPlaybackConfigurationResponse_playbackConfigurationArn</a> - The
--   Amazon Resource Name (ARN) for the playback configuration.
--   
--   <a>$sel:availSuppression:GetPlaybackConfigurationResponse'</a>,
--   <a>getPlaybackConfigurationResponse_availSuppression</a> - The
--   configuration for avail suppression, also known as ad suppression. For
--   more information about ad suppression, see <a>Ad Suppression</a>.
--   
--   <a>$sel:bumper:GetPlaybackConfigurationResponse'</a>,
--   <a>getPlaybackConfigurationResponse_bumper</a> - The configuration for
--   bumpers. Bumpers are short audio or video clips that play at the start
--   or before the end of an ad break. To learn more about bumpers, see
--   <a>Bumpers</a>.
--   
--   <a>$sel:adDecisionServerUrl:GetPlaybackConfigurationResponse'</a>,
--   <a>getPlaybackConfigurationResponse_adDecisionServerUrl</a> - The URL
--   for the ad decision server (ADS). This includes the specification of
--   static parameters and placeholders for dynamic parameters. AWS
--   Elemental MediaTailor substitutes player-specific and session-specific
--   parameters as needed when calling the ADS. Alternately, for testing,
--   you can provide a static VAST URL. The maximum length is 25,000
--   characters.
--   
--   <a>$sel:videoContentSourceUrl:GetPlaybackConfigurationResponse'</a>,
--   <a>getPlaybackConfigurationResponse_videoContentSourceUrl</a> - The
--   URL prefix for the parent manifest for the stream, minus the asset ID.
--   The maximum length is 512 characters.
--   
--   <a>$sel:dashConfiguration:GetPlaybackConfigurationResponse'</a>,
--   <a>getPlaybackConfigurationResponse_dashConfiguration</a> - The
--   configuration for DASH content.
--   
--   <a>$sel:manifestProcessingRules:GetPlaybackConfigurationResponse'</a>,
--   <a>getPlaybackConfigurationResponse_manifestProcessingRules</a> - The
--   configuration for manifest processing rules. Manifest processing rules
--   enable customization of the personalized manifests created by
--   MediaTailor.
--   
--   <a>$sel:logConfiguration:GetPlaybackConfigurationResponse'</a>,
--   <a>getPlaybackConfigurationResponse_logConfiguration</a> - The Amazon
--   CloudWatch log settings for a playback configuration.
--   
--   
--   <a>$sel:livePreRollConfiguration:GetPlaybackConfigurationResponse'</a>,
--   <a>getPlaybackConfigurationResponse_livePreRollConfiguration</a> - The
--   configuration for pre-roll ad insertion.
--   
--   <a>$sel:name:GetPlaybackConfiguration'</a>,
--   <a>getPlaybackConfigurationResponse_name</a> - The identifier for the
--   playback configuration.
--   
--   
--   <a>$sel:sessionInitializationEndpointPrefix:GetPlaybackConfigurationResponse'</a>,
--   <a>getPlaybackConfigurationResponse_sessionInitializationEndpointPrefix</a>
--   - The URL that the player uses to initialize a session that uses
--   client-side reporting.
--   
--   <a>$sel:configurationAliases:GetPlaybackConfigurationResponse'</a>,
--   <a>getPlaybackConfigurationResponse_configurationAliases</a> - The
--   player parameters and aliases used as dynamic variables during session
--   initialization. For more information, see <a>Domain Variables</a>.
--   
--   <a>$sel:transcodeProfileName:GetPlaybackConfigurationResponse'</a>,
--   <a>getPlaybackConfigurationResponse_transcodeProfileName</a> - The
--   name that is used to associate this playback configuration with a
--   custom transcode profile. This overrides the dynamic transcoding
--   defaults of MediaTailor. Use this only if you have already set up
--   custom profiles with the help of AWS Support.
--   
--   <a>$sel:tags:GetPlaybackConfigurationResponse'</a>,
--   <a>getPlaybackConfigurationResponse_tags</a> - The tags assigned to
--   the playback configuration.
--   
--   <a>$sel:slateAdUrl:GetPlaybackConfigurationResponse'</a>,
--   <a>getPlaybackConfigurationResponse_slateAdUrl</a> - The URL for a
--   high-quality video asset to transcode and use to fill in time that's
--   not used by ads. AWS Elemental MediaTailor shows the slate to fill in
--   gaps in media content. Configuring the slate is optional for non-VPAID
--   playback configurations. For VPAID, the slate is required because
--   MediaTailor provides it in the slots designated for dynamic ad
--   content. The slate must be a high-quality asset that contains both
--   audio and video.
--   
--   <a>$sel:cdnConfiguration:GetPlaybackConfigurationResponse'</a>,
--   <a>getPlaybackConfigurationResponse_cdnConfiguration</a> - The
--   configuration for using a content delivery network (CDN), like Amazon
--   CloudFront, for content and ad segment management.
--   
--   <a>$sel:httpStatus:GetPlaybackConfigurationResponse'</a>,
--   <a>getPlaybackConfigurationResponse_httpStatus</a> - The response's
--   http status code.
newGetPlaybackConfigurationResponse :: Int -> GetPlaybackConfigurationResponse

-- | The URL that the player accesses to get a manifest from AWS Elemental
--   MediaTailor. This session will use server-side reporting.
getPlaybackConfigurationResponse_playbackEndpointPrefix :: Lens' GetPlaybackConfigurationResponse (Maybe Text)

-- | The configuration for HLS content.
getPlaybackConfigurationResponse_hlsConfiguration :: Lens' GetPlaybackConfigurationResponse (Maybe HlsConfiguration)

-- | Defines the maximum duration of underfilled ad time (in seconds)
--   allowed in an ad break. If the duration of underfilled ad time exceeds
--   the personalization threshold, then the personalization of the ad
--   break is abandoned and the underlying content is shown. This feature
--   applies to <i>ad replacement</i> in live and VOD streams, rather than
--   ad insertion, because it relies on an underlying content stream. For
--   more information about ad break behavior, including ad replacement and
--   insertion, see <a>Ad Behavior in AWS Elemental MediaTailor</a>.
getPlaybackConfigurationResponse_personalizationThresholdSeconds :: Lens' GetPlaybackConfigurationResponse (Maybe Natural)

-- | The Amazon Resource Name (ARN) for the playback configuration.
getPlaybackConfigurationResponse_playbackConfigurationArn :: Lens' GetPlaybackConfigurationResponse (Maybe Text)

-- | The configuration for avail suppression, also known as ad suppression.
--   For more information about ad suppression, see <a>Ad Suppression</a>.
getPlaybackConfigurationResponse_availSuppression :: Lens' GetPlaybackConfigurationResponse (Maybe AvailSuppression)

-- | The configuration for bumpers. Bumpers are short audio or video clips
--   that play at the start or before the end of an ad break. To learn more
--   about bumpers, see <a>Bumpers</a>.
getPlaybackConfigurationResponse_bumper :: Lens' GetPlaybackConfigurationResponse (Maybe Bumper)

-- | The URL for the ad decision server (ADS). This includes the
--   specification of static parameters and placeholders for dynamic
--   parameters. AWS Elemental MediaTailor substitutes player-specific and
--   session-specific parameters as needed when calling the ADS.
--   Alternately, for testing, you can provide a static VAST URL. The
--   maximum length is 25,000 characters.
getPlaybackConfigurationResponse_adDecisionServerUrl :: Lens' GetPlaybackConfigurationResponse (Maybe Text)

-- | The URL prefix for the parent manifest for the stream, minus the asset
--   ID. The maximum length is 512 characters.
getPlaybackConfigurationResponse_videoContentSourceUrl :: Lens' GetPlaybackConfigurationResponse (Maybe Text)

-- | The configuration for DASH content.
getPlaybackConfigurationResponse_dashConfiguration :: Lens' GetPlaybackConfigurationResponse (Maybe DashConfiguration)

-- | The configuration for manifest processing rules. Manifest processing
--   rules enable customization of the personalized manifests created by
--   MediaTailor.
getPlaybackConfigurationResponse_manifestProcessingRules :: Lens' GetPlaybackConfigurationResponse (Maybe ManifestProcessingRules)

-- | The Amazon CloudWatch log settings for a playback configuration.
getPlaybackConfigurationResponse_logConfiguration :: Lens' GetPlaybackConfigurationResponse (Maybe LogConfiguration)

-- | The configuration for pre-roll ad insertion.
getPlaybackConfigurationResponse_livePreRollConfiguration :: Lens' GetPlaybackConfigurationResponse (Maybe LivePreRollConfiguration)

-- | The identifier for the playback configuration.
getPlaybackConfigurationResponse_name :: Lens' GetPlaybackConfigurationResponse (Maybe Text)

-- | The URL that the player uses to initialize a session that uses
--   client-side reporting.
getPlaybackConfigurationResponse_sessionInitializationEndpointPrefix :: Lens' GetPlaybackConfigurationResponse (Maybe Text)

-- | The player parameters and aliases used as dynamic variables during
--   session initialization. For more information, see <a>Domain
--   Variables</a>.
getPlaybackConfigurationResponse_configurationAliases :: Lens' GetPlaybackConfigurationResponse (Maybe (HashMap Text (HashMap Text Text)))

-- | The name that is used to associate this playback configuration with a
--   custom transcode profile. This overrides the dynamic transcoding
--   defaults of MediaTailor. Use this only if you have already set up
--   custom profiles with the help of AWS Support.
getPlaybackConfigurationResponse_transcodeProfileName :: Lens' GetPlaybackConfigurationResponse (Maybe Text)

-- | The tags assigned to the playback configuration.
getPlaybackConfigurationResponse_tags :: Lens' GetPlaybackConfigurationResponse (Maybe (HashMap Text Text))

-- | The URL for a high-quality video asset to transcode and use to fill in
--   time that's not used by ads. AWS Elemental MediaTailor shows the slate
--   to fill in gaps in media content. Configuring the slate is optional
--   for non-VPAID playback configurations. For VPAID, the slate is
--   required because MediaTailor provides it in the slots designated for
--   dynamic ad content. The slate must be a high-quality asset that
--   contains both audio and video.
getPlaybackConfigurationResponse_slateAdUrl :: Lens' GetPlaybackConfigurationResponse (Maybe Text)

-- | The configuration for using a content delivery network (CDN), like
--   Amazon CloudFront, for content and ad segment management.
getPlaybackConfigurationResponse_cdnConfiguration :: Lens' GetPlaybackConfigurationResponse (Maybe CdnConfiguration)

-- | The response's http status code.
getPlaybackConfigurationResponse_httpStatus :: Lens' GetPlaybackConfigurationResponse Int
instance GHC.Generics.Generic Network.AWS.MediaTailor.GetPlaybackConfiguration.GetPlaybackConfiguration
instance GHC.Show.Show Network.AWS.MediaTailor.GetPlaybackConfiguration.GetPlaybackConfiguration
instance GHC.Read.Read Network.AWS.MediaTailor.GetPlaybackConfiguration.GetPlaybackConfiguration
instance GHC.Classes.Eq Network.AWS.MediaTailor.GetPlaybackConfiguration.GetPlaybackConfiguration
instance GHC.Generics.Generic Network.AWS.MediaTailor.GetPlaybackConfiguration.GetPlaybackConfigurationResponse
instance GHC.Show.Show Network.AWS.MediaTailor.GetPlaybackConfiguration.GetPlaybackConfigurationResponse
instance GHC.Read.Read Network.AWS.MediaTailor.GetPlaybackConfiguration.GetPlaybackConfigurationResponse
instance GHC.Classes.Eq Network.AWS.MediaTailor.GetPlaybackConfiguration.GetPlaybackConfigurationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.MediaTailor.GetPlaybackConfiguration.GetPlaybackConfiguration
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.GetPlaybackConfiguration.GetPlaybackConfigurationResponse
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.GetPlaybackConfiguration.GetPlaybackConfiguration
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.GetPlaybackConfiguration.GetPlaybackConfiguration
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.MediaTailor.GetPlaybackConfiguration.GetPlaybackConfiguration
instance Network.AWS.Data.Path.ToPath Network.AWS.MediaTailor.GetPlaybackConfiguration.GetPlaybackConfiguration
instance Network.AWS.Data.Query.ToQuery Network.AWS.MediaTailor.GetPlaybackConfiguration.GetPlaybackConfiguration


-- | Retrieves information about your channel's schedule.
--   
--   This operation returns paginated results.
module Network.AWS.MediaTailor.GetChannelSchedule

-- | <i>See:</i> <a>newGetChannelSchedule</a> smart constructor.
data GetChannelSchedule
GetChannelSchedule' :: Maybe Text -> Maybe Text -> Maybe Natural -> Text -> GetChannelSchedule

-- | Pagination token from the GET list request. Use the token to fetch the
--   next page of results.
[$sel:nextToken:GetChannelSchedule'] :: GetChannelSchedule -> Maybe Text

-- | The schedule duration in minutes. The maximum duration is 4320 minutes
--   (three days).
[$sel:durationMinutes:GetChannelSchedule'] :: GetChannelSchedule -> Maybe Text

-- | Upper bound on number of records to return. The maximum number of
--   results is 100.
[$sel:maxResults:GetChannelSchedule'] :: GetChannelSchedule -> Maybe Natural

-- | The identifier for the channel you are working on.
[$sel:channelName:GetChannelSchedule'] :: GetChannelSchedule -> Text

-- | Create a value of <a>GetChannelSchedule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetChannelSchedule'</a>,
--   <a>getChannelSchedule_nextToken</a> - Pagination token from the GET
--   list request. Use the token to fetch the next page of results.
--   
--   <a>$sel:durationMinutes:GetChannelSchedule'</a>,
--   <a>getChannelSchedule_durationMinutes</a> - The schedule duration in
--   minutes. The maximum duration is 4320 minutes (three days).
--   
--   <a>$sel:maxResults:GetChannelSchedule'</a>,
--   <a>getChannelSchedule_maxResults</a> - Upper bound on number of
--   records to return. The maximum number of results is 100.
--   
--   <a>$sel:channelName:GetChannelSchedule'</a>,
--   <a>getChannelSchedule_channelName</a> - The identifier for the channel
--   you are working on.
newGetChannelSchedule :: Text -> GetChannelSchedule

-- | Pagination token from the GET list request. Use the token to fetch the
--   next page of results.
getChannelSchedule_nextToken :: Lens' GetChannelSchedule (Maybe Text)

-- | The schedule duration in minutes. The maximum duration is 4320 minutes
--   (three days).
getChannelSchedule_durationMinutes :: Lens' GetChannelSchedule (Maybe Text)

-- | Upper bound on number of records to return. The maximum number of
--   results is 100.
getChannelSchedule_maxResults :: Lens' GetChannelSchedule (Maybe Natural)

-- | The identifier for the channel you are working on.
getChannelSchedule_channelName :: Lens' GetChannelSchedule Text

-- | <i>See:</i> <a>newGetChannelScheduleResponse</a> smart constructor.
data GetChannelScheduleResponse
GetChannelScheduleResponse' :: Maybe [ScheduleEntry] -> Maybe Text -> Int -> GetChannelScheduleResponse

-- | An array of schedule entries for the channel.
[$sel:items:GetChannelScheduleResponse'] :: GetChannelScheduleResponse -> Maybe [ScheduleEntry]

-- | Pagination token from the GET list request. Use the token to fetch the
--   next page of results.
[$sel:nextToken:GetChannelScheduleResponse'] :: GetChannelScheduleResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetChannelScheduleResponse'] :: GetChannelScheduleResponse -> Int

-- | Create a value of <a>GetChannelScheduleResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:GetChannelScheduleResponse'</a>,
--   <a>getChannelScheduleResponse_items</a> - An array of schedule entries
--   for the channel.
--   
--   <a>$sel:nextToken:GetChannelSchedule'</a>,
--   <a>getChannelScheduleResponse_nextToken</a> - Pagination token from
--   the GET list request. Use the token to fetch the next page of results.
--   
--   <a>$sel:httpStatus:GetChannelScheduleResponse'</a>,
--   <a>getChannelScheduleResponse_httpStatus</a> - The response's http
--   status code.
newGetChannelScheduleResponse :: Int -> GetChannelScheduleResponse

-- | An array of schedule entries for the channel.
getChannelScheduleResponse_items :: Lens' GetChannelScheduleResponse (Maybe [ScheduleEntry])

-- | Pagination token from the GET list request. Use the token to fetch the
--   next page of results.
getChannelScheduleResponse_nextToken :: Lens' GetChannelScheduleResponse (Maybe Text)

-- | The response's http status code.
getChannelScheduleResponse_httpStatus :: Lens' GetChannelScheduleResponse Int
instance GHC.Generics.Generic Network.AWS.MediaTailor.GetChannelSchedule.GetChannelSchedule
instance GHC.Show.Show Network.AWS.MediaTailor.GetChannelSchedule.GetChannelSchedule
instance GHC.Read.Read Network.AWS.MediaTailor.GetChannelSchedule.GetChannelSchedule
instance GHC.Classes.Eq Network.AWS.MediaTailor.GetChannelSchedule.GetChannelSchedule
instance GHC.Generics.Generic Network.AWS.MediaTailor.GetChannelSchedule.GetChannelScheduleResponse
instance GHC.Show.Show Network.AWS.MediaTailor.GetChannelSchedule.GetChannelScheduleResponse
instance GHC.Read.Read Network.AWS.MediaTailor.GetChannelSchedule.GetChannelScheduleResponse
instance GHC.Classes.Eq Network.AWS.MediaTailor.GetChannelSchedule.GetChannelScheduleResponse
instance Network.AWS.Types.AWSRequest Network.AWS.MediaTailor.GetChannelSchedule.GetChannelSchedule
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.GetChannelSchedule.GetChannelScheduleResponse
instance Network.AWS.Pager.AWSPager Network.AWS.MediaTailor.GetChannelSchedule.GetChannelSchedule
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.GetChannelSchedule.GetChannelSchedule
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.GetChannelSchedule.GetChannelSchedule
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.MediaTailor.GetChannelSchedule.GetChannelSchedule
instance Network.AWS.Data.Path.ToPath Network.AWS.MediaTailor.GetChannelSchedule.GetChannelSchedule
instance Network.AWS.Data.Query.ToQuery Network.AWS.MediaTailor.GetChannelSchedule.GetChannelSchedule


-- | Retrieves information about a channel's IAM policy.
module Network.AWS.MediaTailor.GetChannelPolicy

-- | <i>See:</i> <a>newGetChannelPolicy</a> smart constructor.
data GetChannelPolicy
GetChannelPolicy' :: Text -> GetChannelPolicy

-- | The identifier for the channel you are working on.
[$sel:channelName:GetChannelPolicy'] :: GetChannelPolicy -> Text

-- | Create a value of <a>GetChannelPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelName:GetChannelPolicy'</a>,
--   <a>getChannelPolicy_channelName</a> - The identifier for the channel
--   you are working on.
newGetChannelPolicy :: Text -> GetChannelPolicy

-- | The identifier for the channel you are working on.
getChannelPolicy_channelName :: Lens' GetChannelPolicy Text

-- | <i>See:</i> <a>newGetChannelPolicyResponse</a> smart constructor.
data GetChannelPolicyResponse
GetChannelPolicyResponse' :: Maybe Text -> Int -> GetChannelPolicyResponse

-- | The IAM policy for the channel.
[$sel:policy:GetChannelPolicyResponse'] :: GetChannelPolicyResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetChannelPolicyResponse'] :: GetChannelPolicyResponse -> Int

-- | Create a value of <a>GetChannelPolicyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policy:GetChannelPolicyResponse'</a>,
--   <a>getChannelPolicyResponse_policy</a> - The IAM policy for the
--   channel.
--   
--   <a>$sel:httpStatus:GetChannelPolicyResponse'</a>,
--   <a>getChannelPolicyResponse_httpStatus</a> - The response's http
--   status code.
newGetChannelPolicyResponse :: Int -> GetChannelPolicyResponse

-- | The IAM policy for the channel.
getChannelPolicyResponse_policy :: Lens' GetChannelPolicyResponse (Maybe Text)

-- | The response's http status code.
getChannelPolicyResponse_httpStatus :: Lens' GetChannelPolicyResponse Int
instance GHC.Generics.Generic Network.AWS.MediaTailor.GetChannelPolicy.GetChannelPolicy
instance GHC.Show.Show Network.AWS.MediaTailor.GetChannelPolicy.GetChannelPolicy
instance GHC.Read.Read Network.AWS.MediaTailor.GetChannelPolicy.GetChannelPolicy
instance GHC.Classes.Eq Network.AWS.MediaTailor.GetChannelPolicy.GetChannelPolicy
instance GHC.Generics.Generic Network.AWS.MediaTailor.GetChannelPolicy.GetChannelPolicyResponse
instance GHC.Show.Show Network.AWS.MediaTailor.GetChannelPolicy.GetChannelPolicyResponse
instance GHC.Read.Read Network.AWS.MediaTailor.GetChannelPolicy.GetChannelPolicyResponse
instance GHC.Classes.Eq Network.AWS.MediaTailor.GetChannelPolicy.GetChannelPolicyResponse
instance Network.AWS.Types.AWSRequest Network.AWS.MediaTailor.GetChannelPolicy.GetChannelPolicy
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.GetChannelPolicy.GetChannelPolicyResponse
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.GetChannelPolicy.GetChannelPolicy
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.GetChannelPolicy.GetChannelPolicy
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.MediaTailor.GetChannelPolicy.GetChannelPolicy
instance Network.AWS.Data.Path.ToPath Network.AWS.MediaTailor.GetChannelPolicy.GetChannelPolicy
instance Network.AWS.Data.Query.ToQuery Network.AWS.MediaTailor.GetChannelPolicy.GetChannelPolicy


-- | Provides details about a specific VOD source in a specific source
--   location.
module Network.AWS.MediaTailor.DescribeVodSource

-- | <i>See:</i> <a>newDescribeVodSource</a> smart constructor.
data DescribeVodSource
DescribeVodSource' :: Text -> Text -> DescribeVodSource

-- | The identifier for the source location you are working on.
[$sel:sourceLocationName:DescribeVodSource'] :: DescribeVodSource -> Text

-- | The identifier for the VOD source you are working on.
[$sel:vodSourceName:DescribeVodSource'] :: DescribeVodSource -> Text

-- | Create a value of <a>DescribeVodSource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceLocationName:DescribeVodSource'</a>,
--   <a>describeVodSource_sourceLocationName</a> - The identifier for the
--   source location you are working on.
--   
--   <a>$sel:vodSourceName:DescribeVodSource'</a>,
--   <a>describeVodSource_vodSourceName</a> - The identifier for the VOD
--   source you are working on.
newDescribeVodSource :: Text -> Text -> DescribeVodSource

-- | The identifier for the source location you are working on.
describeVodSource_sourceLocationName :: Lens' DescribeVodSource Text

-- | The identifier for the VOD source you are working on.
describeVodSource_vodSourceName :: Lens' DescribeVodSource Text

-- | <i>See:</i> <a>newDescribeVodSourceResponse</a> smart constructor.
data DescribeVodSourceResponse
DescribeVodSourceResponse' :: Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe [HttpPackageConfiguration] -> Maybe Text -> Maybe (HashMap Text Text) -> Int -> DescribeVodSourceResponse

-- | The timestamp that indicates when the VOD source was created.
[$sel:creationTime:DescribeVodSourceResponse'] :: DescribeVodSourceResponse -> Maybe POSIX

-- | The name of the source location associated with the VOD source.
[$sel:sourceLocationName:DescribeVodSourceResponse'] :: DescribeVodSourceResponse -> Maybe Text

-- | The ARN of the VOD source.
[$sel:arn:DescribeVodSourceResponse'] :: DescribeVodSourceResponse -> Maybe Text

-- | The ARN for the VOD source.
[$sel:lastModifiedTime:DescribeVodSourceResponse'] :: DescribeVodSourceResponse -> Maybe POSIX

-- | The HTTP package configurations.
[$sel:httpPackageConfigurations:DescribeVodSourceResponse'] :: DescribeVodSourceResponse -> Maybe [HttpPackageConfiguration]

-- | The name of the VOD source.
[$sel:vodSourceName:DescribeVodSourceResponse'] :: DescribeVodSourceResponse -> Maybe Text

-- | The tags assigned to the VOD source.
[$sel:tags:DescribeVodSourceResponse'] :: DescribeVodSourceResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:DescribeVodSourceResponse'] :: DescribeVodSourceResponse -> Int

-- | Create a value of <a>DescribeVodSourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:DescribeVodSourceResponse'</a>,
--   <a>describeVodSourceResponse_creationTime</a> - The timestamp that
--   indicates when the VOD source was created.
--   
--   <a>$sel:sourceLocationName:DescribeVodSource'</a>,
--   <a>describeVodSourceResponse_sourceLocationName</a> - The name of the
--   source location associated with the VOD source.
--   
--   <a>$sel:arn:DescribeVodSourceResponse'</a>,
--   <a>describeVodSourceResponse_arn</a> - The ARN of the VOD source.
--   
--   <a>$sel:lastModifiedTime:DescribeVodSourceResponse'</a>,
--   <a>describeVodSourceResponse_lastModifiedTime</a> - The ARN for the
--   VOD source.
--   
--   <a>$sel:httpPackageConfigurations:DescribeVodSourceResponse'</a>,
--   <a>describeVodSourceResponse_httpPackageConfigurations</a> - The HTTP
--   package configurations.
--   
--   <a>$sel:vodSourceName:DescribeVodSource'</a>,
--   <a>describeVodSourceResponse_vodSourceName</a> - The name of the VOD
--   source.
--   
--   <a>$sel:tags:DescribeVodSourceResponse'</a>,
--   <a>describeVodSourceResponse_tags</a> - The tags assigned to the VOD
--   source.
--   
--   <a>$sel:httpStatus:DescribeVodSourceResponse'</a>,
--   <a>describeVodSourceResponse_httpStatus</a> - The response's http
--   status code.
newDescribeVodSourceResponse :: Int -> DescribeVodSourceResponse

-- | The timestamp that indicates when the VOD source was created.
describeVodSourceResponse_creationTime :: Lens' DescribeVodSourceResponse (Maybe UTCTime)

-- | The name of the source location associated with the VOD source.
describeVodSourceResponse_sourceLocationName :: Lens' DescribeVodSourceResponse (Maybe Text)

-- | The ARN of the VOD source.
describeVodSourceResponse_arn :: Lens' DescribeVodSourceResponse (Maybe Text)

-- | The ARN for the VOD source.
describeVodSourceResponse_lastModifiedTime :: Lens' DescribeVodSourceResponse (Maybe UTCTime)

-- | The HTTP package configurations.
describeVodSourceResponse_httpPackageConfigurations :: Lens' DescribeVodSourceResponse (Maybe [HttpPackageConfiguration])

-- | The name of the VOD source.
describeVodSourceResponse_vodSourceName :: Lens' DescribeVodSourceResponse (Maybe Text)

-- | The tags assigned to the VOD source.
describeVodSourceResponse_tags :: Lens' DescribeVodSourceResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
describeVodSourceResponse_httpStatus :: Lens' DescribeVodSourceResponse Int
instance GHC.Generics.Generic Network.AWS.MediaTailor.DescribeVodSource.DescribeVodSource
instance GHC.Show.Show Network.AWS.MediaTailor.DescribeVodSource.DescribeVodSource
instance GHC.Read.Read Network.AWS.MediaTailor.DescribeVodSource.DescribeVodSource
instance GHC.Classes.Eq Network.AWS.MediaTailor.DescribeVodSource.DescribeVodSource
instance GHC.Generics.Generic Network.AWS.MediaTailor.DescribeVodSource.DescribeVodSourceResponse
instance GHC.Show.Show Network.AWS.MediaTailor.DescribeVodSource.DescribeVodSourceResponse
instance GHC.Read.Read Network.AWS.MediaTailor.DescribeVodSource.DescribeVodSourceResponse
instance GHC.Classes.Eq Network.AWS.MediaTailor.DescribeVodSource.DescribeVodSourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.MediaTailor.DescribeVodSource.DescribeVodSource
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.DescribeVodSource.DescribeVodSourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.DescribeVodSource.DescribeVodSource
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.DescribeVodSource.DescribeVodSource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.MediaTailor.DescribeVodSource.DescribeVodSource
instance Network.AWS.Data.Path.ToPath Network.AWS.MediaTailor.DescribeVodSource.DescribeVodSource
instance Network.AWS.Data.Query.ToQuery Network.AWS.MediaTailor.DescribeVodSource.DescribeVodSource


-- | Retrieves the properties of the requested source location.
module Network.AWS.MediaTailor.DescribeSourceLocation

-- | <i>See:</i> <a>newDescribeSourceLocation</a> smart constructor.
data DescribeSourceLocation
DescribeSourceLocation' :: Text -> DescribeSourceLocation

-- | The identifier for the source location you are working on.
[$sel:sourceLocationName:DescribeSourceLocation'] :: DescribeSourceLocation -> Text

-- | Create a value of <a>DescribeSourceLocation</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceLocationName:DescribeSourceLocation'</a>,
--   <a>describeSourceLocation_sourceLocationName</a> - The identifier for
--   the source location you are working on.
newDescribeSourceLocation :: Text -> DescribeSourceLocation

-- | The identifier for the source location you are working on.
describeSourceLocation_sourceLocationName :: Lens' DescribeSourceLocation Text

-- | <i>See:</i> <a>newDescribeSourceLocationResponse</a> smart
--   constructor.
data DescribeSourceLocationResponse
DescribeSourceLocationResponse' :: Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe HttpConfiguration -> Maybe POSIX -> Maybe AccessConfiguration -> Maybe DefaultSegmentDeliveryConfiguration -> Maybe (HashMap Text Text) -> Int -> DescribeSourceLocationResponse

-- | The timestamp that indicates when the source location was created.
[$sel:creationTime:DescribeSourceLocationResponse'] :: DescribeSourceLocationResponse -> Maybe POSIX

-- | The name of the source location.
[$sel:sourceLocationName:DescribeSourceLocationResponse'] :: DescribeSourceLocationResponse -> Maybe Text

-- | The ARN of the source location.
[$sel:arn:DescribeSourceLocationResponse'] :: DescribeSourceLocationResponse -> Maybe Text

-- | The HTTP package configuration settings for the source location.
[$sel:httpConfiguration:DescribeSourceLocationResponse'] :: DescribeSourceLocationResponse -> Maybe HttpConfiguration

-- | The timestamp that indicates when the source location was last
--   modified.
[$sel:lastModifiedTime:DescribeSourceLocationResponse'] :: DescribeSourceLocationResponse -> Maybe POSIX

-- | The access configuration for the source location.
[$sel:accessConfiguration:DescribeSourceLocationResponse'] :: DescribeSourceLocationResponse -> Maybe AccessConfiguration

-- | The default segment delivery configuration settings.
[$sel:defaultSegmentDeliveryConfiguration:DescribeSourceLocationResponse'] :: DescribeSourceLocationResponse -> Maybe DefaultSegmentDeliveryConfiguration

-- | The tags assigned to the source location.
[$sel:tags:DescribeSourceLocationResponse'] :: DescribeSourceLocationResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:DescribeSourceLocationResponse'] :: DescribeSourceLocationResponse -> Int

-- | Create a value of <a>DescribeSourceLocationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:DescribeSourceLocationResponse'</a>,
--   <a>describeSourceLocationResponse_creationTime</a> - The timestamp
--   that indicates when the source location was created.
--   
--   <a>$sel:sourceLocationName:DescribeSourceLocation'</a>,
--   <a>describeSourceLocationResponse_sourceLocationName</a> - The name of
--   the source location.
--   
--   <a>$sel:arn:DescribeSourceLocationResponse'</a>,
--   <a>describeSourceLocationResponse_arn</a> - The ARN of the source
--   location.
--   
--   <a>$sel:httpConfiguration:DescribeSourceLocationResponse'</a>,
--   <a>describeSourceLocationResponse_httpConfiguration</a> - The HTTP
--   package configuration settings for the source location.
--   
--   <a>$sel:lastModifiedTime:DescribeSourceLocationResponse'</a>,
--   <a>describeSourceLocationResponse_lastModifiedTime</a> - The timestamp
--   that indicates when the source location was last modified.
--   
--   <a>$sel:accessConfiguration:DescribeSourceLocationResponse'</a>,
--   <a>describeSourceLocationResponse_accessConfiguration</a> - The access
--   configuration for the source location.
--   
--   
--   <a>$sel:defaultSegmentDeliveryConfiguration:DescribeSourceLocationResponse'</a>,
--   <a>describeSourceLocationResponse_defaultSegmentDeliveryConfiguration</a>
--   - The default segment delivery configuration settings.
--   
--   <a>$sel:tags:DescribeSourceLocationResponse'</a>,
--   <a>describeSourceLocationResponse_tags</a> - The tags assigned to the
--   source location.
--   
--   <a>$sel:httpStatus:DescribeSourceLocationResponse'</a>,
--   <a>describeSourceLocationResponse_httpStatus</a> - The response's http
--   status code.
newDescribeSourceLocationResponse :: Int -> DescribeSourceLocationResponse

-- | The timestamp that indicates when the source location was created.
describeSourceLocationResponse_creationTime :: Lens' DescribeSourceLocationResponse (Maybe UTCTime)

-- | The name of the source location.
describeSourceLocationResponse_sourceLocationName :: Lens' DescribeSourceLocationResponse (Maybe Text)

-- | The ARN of the source location.
describeSourceLocationResponse_arn :: Lens' DescribeSourceLocationResponse (Maybe Text)

-- | The HTTP package configuration settings for the source location.
describeSourceLocationResponse_httpConfiguration :: Lens' DescribeSourceLocationResponse (Maybe HttpConfiguration)

-- | The timestamp that indicates when the source location was last
--   modified.
describeSourceLocationResponse_lastModifiedTime :: Lens' DescribeSourceLocationResponse (Maybe UTCTime)

-- | The access configuration for the source location.
describeSourceLocationResponse_accessConfiguration :: Lens' DescribeSourceLocationResponse (Maybe AccessConfiguration)

-- | The default segment delivery configuration settings.
describeSourceLocationResponse_defaultSegmentDeliveryConfiguration :: Lens' DescribeSourceLocationResponse (Maybe DefaultSegmentDeliveryConfiguration)

-- | The tags assigned to the source location.
describeSourceLocationResponse_tags :: Lens' DescribeSourceLocationResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
describeSourceLocationResponse_httpStatus :: Lens' DescribeSourceLocationResponse Int
instance GHC.Generics.Generic Network.AWS.MediaTailor.DescribeSourceLocation.DescribeSourceLocation
instance GHC.Show.Show Network.AWS.MediaTailor.DescribeSourceLocation.DescribeSourceLocation
instance GHC.Read.Read Network.AWS.MediaTailor.DescribeSourceLocation.DescribeSourceLocation
instance GHC.Classes.Eq Network.AWS.MediaTailor.DescribeSourceLocation.DescribeSourceLocation
instance GHC.Generics.Generic Network.AWS.MediaTailor.DescribeSourceLocation.DescribeSourceLocationResponse
instance GHC.Show.Show Network.AWS.MediaTailor.DescribeSourceLocation.DescribeSourceLocationResponse
instance GHC.Read.Read Network.AWS.MediaTailor.DescribeSourceLocation.DescribeSourceLocationResponse
instance GHC.Classes.Eq Network.AWS.MediaTailor.DescribeSourceLocation.DescribeSourceLocationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.MediaTailor.DescribeSourceLocation.DescribeSourceLocation
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.DescribeSourceLocation.DescribeSourceLocationResponse
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.DescribeSourceLocation.DescribeSourceLocation
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.DescribeSourceLocation.DescribeSourceLocation
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.MediaTailor.DescribeSourceLocation.DescribeSourceLocation
instance Network.AWS.Data.Path.ToPath Network.AWS.MediaTailor.DescribeSourceLocation.DescribeSourceLocation
instance Network.AWS.Data.Query.ToQuery Network.AWS.MediaTailor.DescribeSourceLocation.DescribeSourceLocation


-- | Retrieves the properties of the requested program.
module Network.AWS.MediaTailor.DescribeProgram

-- | <i>See:</i> <a>newDescribeProgram</a> smart constructor.
data DescribeProgram
DescribeProgram' :: Text -> Text -> DescribeProgram

-- | The identifier for the channel you are working on.
[$sel:channelName:DescribeProgram'] :: DescribeProgram -> Text

-- | The identifier for the program you are working on.
[$sel:programName:DescribeProgram'] :: DescribeProgram -> Text

-- | Create a value of <a>DescribeProgram</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelName:DescribeProgram'</a>,
--   <a>describeProgram_channelName</a> - The identifier for the channel
--   you are working on.
--   
--   <a>$sel:programName:DescribeProgram'</a>,
--   <a>describeProgram_programName</a> - The identifier for the program
--   you are working on.
newDescribeProgram :: Text -> Text -> DescribeProgram

-- | The identifier for the channel you are working on.
describeProgram_channelName :: Lens' DescribeProgram Text

-- | The identifier for the program you are working on.
describeProgram_programName :: Lens' DescribeProgram Text

-- | <i>See:</i> <a>newDescribeProgramResponse</a> smart constructor.
data DescribeProgramResponse
DescribeProgramResponse' :: Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [AdBreak] -> Maybe Text -> Maybe POSIX -> Maybe Text -> Int -> DescribeProgramResponse

-- | The timestamp of when the program was created.
[$sel:creationTime:DescribeProgramResponse'] :: DescribeProgramResponse -> Maybe POSIX

-- | The source location name.
[$sel:sourceLocationName:DescribeProgramResponse'] :: DescribeProgramResponse -> Maybe Text

-- | The ARN of the program.
[$sel:arn:DescribeProgramResponse'] :: DescribeProgramResponse -> Maybe Text

-- | The name of the program.
[$sel:programName:DescribeProgramResponse'] :: DescribeProgramResponse -> Maybe Text

-- | The ad break configuration settings.
[$sel:adBreaks:DescribeProgramResponse'] :: DescribeProgramResponse -> Maybe [AdBreak]

-- | The name of the channel that the program belongs to.
[$sel:channelName:DescribeProgramResponse'] :: DescribeProgramResponse -> Maybe Text

-- | The date and time that the program is scheduled to start in ISO 8601
--   format and Coordinated Universal Time (UTC). For example, the value
--   2021-03-27T17:48:16.751Z represents March 27, 2021 at 17:48:16.751
--   UTC.
[$sel:scheduledStartTime:DescribeProgramResponse'] :: DescribeProgramResponse -> Maybe POSIX

-- | The name that's used to refer to a VOD source.
[$sel:vodSourceName:DescribeProgramResponse'] :: DescribeProgramResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeProgramResponse'] :: DescribeProgramResponse -> Int

-- | Create a value of <a>DescribeProgramResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:DescribeProgramResponse'</a>,
--   <a>describeProgramResponse_creationTime</a> - The timestamp of when
--   the program was created.
--   
--   <a>$sel:sourceLocationName:DescribeProgramResponse'</a>,
--   <a>describeProgramResponse_sourceLocationName</a> - The source
--   location name.
--   
--   <a>$sel:arn:DescribeProgramResponse'</a>,
--   <a>describeProgramResponse_arn</a> - The ARN of the program.
--   
--   <a>$sel:programName:DescribeProgram'</a>,
--   <a>describeProgramResponse_programName</a> - The name of the program.
--   
--   <a>$sel:adBreaks:DescribeProgramResponse'</a>,
--   <a>describeProgramResponse_adBreaks</a> - The ad break configuration
--   settings.
--   
--   <a>$sel:channelName:DescribeProgram'</a>,
--   <a>describeProgramResponse_channelName</a> - The name of the channel
--   that the program belongs to.
--   
--   <a>$sel:scheduledStartTime:DescribeProgramResponse'</a>,
--   <a>describeProgramResponse_scheduledStartTime</a> - The date and time
--   that the program is scheduled to start in ISO 8601 format and
--   Coordinated Universal Time (UTC). For example, the value
--   2021-03-27T17:48:16.751Z represents March 27, 2021 at 17:48:16.751
--   UTC.
--   
--   <a>$sel:vodSourceName:DescribeProgramResponse'</a>,
--   <a>describeProgramResponse_vodSourceName</a> - The name that's used to
--   refer to a VOD source.
--   
--   <a>$sel:httpStatus:DescribeProgramResponse'</a>,
--   <a>describeProgramResponse_httpStatus</a> - The response's http status
--   code.
newDescribeProgramResponse :: Int -> DescribeProgramResponse

-- | The timestamp of when the program was created.
describeProgramResponse_creationTime :: Lens' DescribeProgramResponse (Maybe UTCTime)

-- | The source location name.
describeProgramResponse_sourceLocationName :: Lens' DescribeProgramResponse (Maybe Text)

-- | The ARN of the program.
describeProgramResponse_arn :: Lens' DescribeProgramResponse (Maybe Text)

-- | The name of the program.
describeProgramResponse_programName :: Lens' DescribeProgramResponse (Maybe Text)

-- | The ad break configuration settings.
describeProgramResponse_adBreaks :: Lens' DescribeProgramResponse (Maybe [AdBreak])

-- | The name of the channel that the program belongs to.
describeProgramResponse_channelName :: Lens' DescribeProgramResponse (Maybe Text)

-- | The date and time that the program is scheduled to start in ISO 8601
--   format and Coordinated Universal Time (UTC). For example, the value
--   2021-03-27T17:48:16.751Z represents March 27, 2021 at 17:48:16.751
--   UTC.
describeProgramResponse_scheduledStartTime :: Lens' DescribeProgramResponse (Maybe UTCTime)

-- | The name that's used to refer to a VOD source.
describeProgramResponse_vodSourceName :: Lens' DescribeProgramResponse (Maybe Text)

-- | The response's http status code.
describeProgramResponse_httpStatus :: Lens' DescribeProgramResponse Int
instance GHC.Generics.Generic Network.AWS.MediaTailor.DescribeProgram.DescribeProgram
instance GHC.Show.Show Network.AWS.MediaTailor.DescribeProgram.DescribeProgram
instance GHC.Read.Read Network.AWS.MediaTailor.DescribeProgram.DescribeProgram
instance GHC.Classes.Eq Network.AWS.MediaTailor.DescribeProgram.DescribeProgram
instance GHC.Generics.Generic Network.AWS.MediaTailor.DescribeProgram.DescribeProgramResponse
instance GHC.Show.Show Network.AWS.MediaTailor.DescribeProgram.DescribeProgramResponse
instance GHC.Read.Read Network.AWS.MediaTailor.DescribeProgram.DescribeProgramResponse
instance GHC.Classes.Eq Network.AWS.MediaTailor.DescribeProgram.DescribeProgramResponse
instance Network.AWS.Types.AWSRequest Network.AWS.MediaTailor.DescribeProgram.DescribeProgram
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.DescribeProgram.DescribeProgramResponse
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.DescribeProgram.DescribeProgram
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.DescribeProgram.DescribeProgram
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.MediaTailor.DescribeProgram.DescribeProgram
instance Network.AWS.Data.Path.ToPath Network.AWS.MediaTailor.DescribeProgram.DescribeProgram
instance Network.AWS.Data.Query.ToQuery Network.AWS.MediaTailor.DescribeProgram.DescribeProgram


-- | Describes the properties of a specific channel.
module Network.AWS.MediaTailor.DescribeChannel

-- | <i>See:</i> <a>newDescribeChannel</a> smart constructor.
data DescribeChannel
DescribeChannel' :: Text -> DescribeChannel

-- | The identifier for the channel you are working on.
[$sel:channelName:DescribeChannel'] :: DescribeChannel -> Text

-- | Create a value of <a>DescribeChannel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelName:DescribeChannel'</a>,
--   <a>describeChannel_channelName</a> - The identifier for the channel
--   you are working on.
newDescribeChannel :: Text -> DescribeChannel

-- | The identifier for the channel you are working on.
describeChannel_channelName :: Lens' DescribeChannel Text

-- | <i>See:</i> <a>newDescribeChannelResponse</a> smart constructor.
data DescribeChannelResponse
DescribeChannelResponse' :: Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe [ResponseOutputItem] -> Maybe ChannelState -> Maybe SlateSource -> Maybe (HashMap Text Text) -> Int -> DescribeChannelResponse

-- | The timestamp of when the channel was created.
[$sel:creationTime:DescribeChannelResponse'] :: DescribeChannelResponse -> Maybe POSIX

-- | The ARN of the channel.
[$sel:arn:DescribeChannelResponse'] :: DescribeChannelResponse -> Maybe Text

-- | The timestamp of when the channel was last modified.
[$sel:lastModifiedTime:DescribeChannelResponse'] :: DescribeChannelResponse -> Maybe POSIX

-- | The channel's playback mode.
[$sel:playbackMode:DescribeChannelResponse'] :: DescribeChannelResponse -> Maybe Text

-- | The name of the channel.
[$sel:channelName:DescribeChannelResponse'] :: DescribeChannelResponse -> Maybe Text

-- | The channel's output properties.
[$sel:outputs:DescribeChannelResponse'] :: DescribeChannelResponse -> Maybe [ResponseOutputItem]

-- | Indicates whether the channel is in a running state or not.
[$sel:channelState:DescribeChannelResponse'] :: DescribeChannelResponse -> Maybe ChannelState

-- | Contains information about the slate used to fill gaps between
--   programs in the schedule.
[$sel:fillerSlate:DescribeChannelResponse'] :: DescribeChannelResponse -> Maybe SlateSource

-- | The tags assigned to the channel.
[$sel:tags:DescribeChannelResponse'] :: DescribeChannelResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:DescribeChannelResponse'] :: DescribeChannelResponse -> Int

-- | Create a value of <a>DescribeChannelResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:DescribeChannelResponse'</a>,
--   <a>describeChannelResponse_creationTime</a> - The timestamp of when
--   the channel was created.
--   
--   <a>$sel:arn:DescribeChannelResponse'</a>,
--   <a>describeChannelResponse_arn</a> - The ARN of the channel.
--   
--   <a>$sel:lastModifiedTime:DescribeChannelResponse'</a>,
--   <a>describeChannelResponse_lastModifiedTime</a> - The timestamp of
--   when the channel was last modified.
--   
--   <a>$sel:playbackMode:DescribeChannelResponse'</a>,
--   <a>describeChannelResponse_playbackMode</a> - The channel's playback
--   mode.
--   
--   <a>$sel:channelName:DescribeChannel'</a>,
--   <a>describeChannelResponse_channelName</a> - The name of the channel.
--   
--   <a>$sel:outputs:DescribeChannelResponse'</a>,
--   <a>describeChannelResponse_outputs</a> - The channel's output
--   properties.
--   
--   <a>$sel:channelState:DescribeChannelResponse'</a>,
--   <a>describeChannelResponse_channelState</a> - Indicates whether the
--   channel is in a running state or not.
--   
--   <a>$sel:fillerSlate:DescribeChannelResponse'</a>,
--   <a>describeChannelResponse_fillerSlate</a> - Contains information
--   about the slate used to fill gaps between programs in the schedule.
--   
--   <a>$sel:tags:DescribeChannelResponse'</a>,
--   <a>describeChannelResponse_tags</a> - The tags assigned to the
--   channel.
--   
--   <a>$sel:httpStatus:DescribeChannelResponse'</a>,
--   <a>describeChannelResponse_httpStatus</a> - The response's http status
--   code.
newDescribeChannelResponse :: Int -> DescribeChannelResponse

-- | The timestamp of when the channel was created.
describeChannelResponse_creationTime :: Lens' DescribeChannelResponse (Maybe UTCTime)

-- | The ARN of the channel.
describeChannelResponse_arn :: Lens' DescribeChannelResponse (Maybe Text)

-- | The timestamp of when the channel was last modified.
describeChannelResponse_lastModifiedTime :: Lens' DescribeChannelResponse (Maybe UTCTime)

-- | The channel's playback mode.
describeChannelResponse_playbackMode :: Lens' DescribeChannelResponse (Maybe Text)

-- | The name of the channel.
describeChannelResponse_channelName :: Lens' DescribeChannelResponse (Maybe Text)

-- | The channel's output properties.
describeChannelResponse_outputs :: Lens' DescribeChannelResponse (Maybe [ResponseOutputItem])

-- | Indicates whether the channel is in a running state or not.
describeChannelResponse_channelState :: Lens' DescribeChannelResponse (Maybe ChannelState)

-- | Contains information about the slate used to fill gaps between
--   programs in the schedule.
describeChannelResponse_fillerSlate :: Lens' DescribeChannelResponse (Maybe SlateSource)

-- | The tags assigned to the channel.
describeChannelResponse_tags :: Lens' DescribeChannelResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
describeChannelResponse_httpStatus :: Lens' DescribeChannelResponse Int
instance GHC.Generics.Generic Network.AWS.MediaTailor.DescribeChannel.DescribeChannel
instance GHC.Show.Show Network.AWS.MediaTailor.DescribeChannel.DescribeChannel
instance GHC.Read.Read Network.AWS.MediaTailor.DescribeChannel.DescribeChannel
instance GHC.Classes.Eq Network.AWS.MediaTailor.DescribeChannel.DescribeChannel
instance GHC.Generics.Generic Network.AWS.MediaTailor.DescribeChannel.DescribeChannelResponse
instance GHC.Show.Show Network.AWS.MediaTailor.DescribeChannel.DescribeChannelResponse
instance GHC.Read.Read Network.AWS.MediaTailor.DescribeChannel.DescribeChannelResponse
instance GHC.Classes.Eq Network.AWS.MediaTailor.DescribeChannel.DescribeChannelResponse
instance Network.AWS.Types.AWSRequest Network.AWS.MediaTailor.DescribeChannel.DescribeChannel
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.DescribeChannel.DescribeChannelResponse
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.DescribeChannel.DescribeChannel
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.DescribeChannel.DescribeChannel
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.MediaTailor.DescribeChannel.DescribeChannel
instance Network.AWS.Data.Path.ToPath Network.AWS.MediaTailor.DescribeChannel.DescribeChannel
instance Network.AWS.Data.Query.ToQuery Network.AWS.MediaTailor.DescribeChannel.DescribeChannel


-- | Deletes a specific VOD source in a specific source location.
module Network.AWS.MediaTailor.DeleteVodSource

-- | <i>See:</i> <a>newDeleteVodSource</a> smart constructor.
data DeleteVodSource
DeleteVodSource' :: Text -> Text -> DeleteVodSource

-- | The identifier for the source location you are working on.
[$sel:sourceLocationName:DeleteVodSource'] :: DeleteVodSource -> Text

-- | The identifier for the VOD source you are working on.
[$sel:vodSourceName:DeleteVodSource'] :: DeleteVodSource -> Text

-- | Create a value of <a>DeleteVodSource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceLocationName:DeleteVodSource'</a>,
--   <a>deleteVodSource_sourceLocationName</a> - The identifier for the
--   source location you are working on.
--   
--   <a>$sel:vodSourceName:DeleteVodSource'</a>,
--   <a>deleteVodSource_vodSourceName</a> - The identifier for the VOD
--   source you are working on.
newDeleteVodSource :: Text -> Text -> DeleteVodSource

-- | The identifier for the source location you are working on.
deleteVodSource_sourceLocationName :: Lens' DeleteVodSource Text

-- | The identifier for the VOD source you are working on.
deleteVodSource_vodSourceName :: Lens' DeleteVodSource Text

-- | <i>See:</i> <a>newDeleteVodSourceResponse</a> smart constructor.
data DeleteVodSourceResponse
DeleteVodSourceResponse' :: Int -> DeleteVodSourceResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteVodSourceResponse'] :: DeleteVodSourceResponse -> Int

-- | Create a value of <a>DeleteVodSourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteVodSourceResponse'</a>,
--   <a>deleteVodSourceResponse_httpStatus</a> - The response's http status
--   code.
newDeleteVodSourceResponse :: Int -> DeleteVodSourceResponse

-- | The response's http status code.
deleteVodSourceResponse_httpStatus :: Lens' DeleteVodSourceResponse Int
instance GHC.Generics.Generic Network.AWS.MediaTailor.DeleteVodSource.DeleteVodSource
instance GHC.Show.Show Network.AWS.MediaTailor.DeleteVodSource.DeleteVodSource
instance GHC.Read.Read Network.AWS.MediaTailor.DeleteVodSource.DeleteVodSource
instance GHC.Classes.Eq Network.AWS.MediaTailor.DeleteVodSource.DeleteVodSource
instance GHC.Generics.Generic Network.AWS.MediaTailor.DeleteVodSource.DeleteVodSourceResponse
instance GHC.Show.Show Network.AWS.MediaTailor.DeleteVodSource.DeleteVodSourceResponse
instance GHC.Read.Read Network.AWS.MediaTailor.DeleteVodSource.DeleteVodSourceResponse
instance GHC.Classes.Eq Network.AWS.MediaTailor.DeleteVodSource.DeleteVodSourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.MediaTailor.DeleteVodSource.DeleteVodSource
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.DeleteVodSource.DeleteVodSourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.DeleteVodSource.DeleteVodSource
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.DeleteVodSource.DeleteVodSource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.MediaTailor.DeleteVodSource.DeleteVodSource
instance Network.AWS.Data.Path.ToPath Network.AWS.MediaTailor.DeleteVodSource.DeleteVodSource
instance Network.AWS.Data.Query.ToQuery Network.AWS.MediaTailor.DeleteVodSource.DeleteVodSource


-- | Deletes a source location on a specific channel.
module Network.AWS.MediaTailor.DeleteSourceLocation

-- | <i>See:</i> <a>newDeleteSourceLocation</a> smart constructor.
data DeleteSourceLocation
DeleteSourceLocation' :: Text -> DeleteSourceLocation

-- | The identifier for the source location you are working on.
[$sel:sourceLocationName:DeleteSourceLocation'] :: DeleteSourceLocation -> Text

-- | Create a value of <a>DeleteSourceLocation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceLocationName:DeleteSourceLocation'</a>,
--   <a>deleteSourceLocation_sourceLocationName</a> - The identifier for
--   the source location you are working on.
newDeleteSourceLocation :: Text -> DeleteSourceLocation

-- | The identifier for the source location you are working on.
deleteSourceLocation_sourceLocationName :: Lens' DeleteSourceLocation Text

-- | <i>See:</i> <a>newDeleteSourceLocationResponse</a> smart constructor.
data DeleteSourceLocationResponse
DeleteSourceLocationResponse' :: Int -> DeleteSourceLocationResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteSourceLocationResponse'] :: DeleteSourceLocationResponse -> Int

-- | Create a value of <a>DeleteSourceLocationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteSourceLocationResponse'</a>,
--   <a>deleteSourceLocationResponse_httpStatus</a> - The response's http
--   status code.
newDeleteSourceLocationResponse :: Int -> DeleteSourceLocationResponse

-- | The response's http status code.
deleteSourceLocationResponse_httpStatus :: Lens' DeleteSourceLocationResponse Int
instance GHC.Generics.Generic Network.AWS.MediaTailor.DeleteSourceLocation.DeleteSourceLocation
instance GHC.Show.Show Network.AWS.MediaTailor.DeleteSourceLocation.DeleteSourceLocation
instance GHC.Read.Read Network.AWS.MediaTailor.DeleteSourceLocation.DeleteSourceLocation
instance GHC.Classes.Eq Network.AWS.MediaTailor.DeleteSourceLocation.DeleteSourceLocation
instance GHC.Generics.Generic Network.AWS.MediaTailor.DeleteSourceLocation.DeleteSourceLocationResponse
instance GHC.Show.Show Network.AWS.MediaTailor.DeleteSourceLocation.DeleteSourceLocationResponse
instance GHC.Read.Read Network.AWS.MediaTailor.DeleteSourceLocation.DeleteSourceLocationResponse
instance GHC.Classes.Eq Network.AWS.MediaTailor.DeleteSourceLocation.DeleteSourceLocationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.MediaTailor.DeleteSourceLocation.DeleteSourceLocation
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.DeleteSourceLocation.DeleteSourceLocationResponse
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.DeleteSourceLocation.DeleteSourceLocation
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.DeleteSourceLocation.DeleteSourceLocation
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.MediaTailor.DeleteSourceLocation.DeleteSourceLocation
instance Network.AWS.Data.Path.ToPath Network.AWS.MediaTailor.DeleteSourceLocation.DeleteSourceLocation
instance Network.AWS.Data.Query.ToQuery Network.AWS.MediaTailor.DeleteSourceLocation.DeleteSourceLocation


-- | Deletes a specific program on a specific channel.
module Network.AWS.MediaTailor.DeleteProgram

-- | <i>See:</i> <a>newDeleteProgram</a> smart constructor.
data DeleteProgram
DeleteProgram' :: Text -> Text -> DeleteProgram

-- | The identifier for the channel you are working on.
[$sel:channelName:DeleteProgram'] :: DeleteProgram -> Text

-- | The identifier for the program you are working on.
[$sel:programName:DeleteProgram'] :: DeleteProgram -> Text

-- | Create a value of <a>DeleteProgram</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelName:DeleteProgram'</a>,
--   <a>deleteProgram_channelName</a> - The identifier for the channel you
--   are working on.
--   
--   <a>$sel:programName:DeleteProgram'</a>,
--   <a>deleteProgram_programName</a> - The identifier for the program you
--   are working on.
newDeleteProgram :: Text -> Text -> DeleteProgram

-- | The identifier for the channel you are working on.
deleteProgram_channelName :: Lens' DeleteProgram Text

-- | The identifier for the program you are working on.
deleteProgram_programName :: Lens' DeleteProgram Text

-- | <i>See:</i> <a>newDeleteProgramResponse</a> smart constructor.
data DeleteProgramResponse
DeleteProgramResponse' :: Int -> DeleteProgramResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteProgramResponse'] :: DeleteProgramResponse -> Int

-- | Create a value of <a>DeleteProgramResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteProgramResponse'</a>,
--   <a>deleteProgramResponse_httpStatus</a> - The response's http status
--   code.
newDeleteProgramResponse :: Int -> DeleteProgramResponse

-- | The response's http status code.
deleteProgramResponse_httpStatus :: Lens' DeleteProgramResponse Int
instance GHC.Generics.Generic Network.AWS.MediaTailor.DeleteProgram.DeleteProgram
instance GHC.Show.Show Network.AWS.MediaTailor.DeleteProgram.DeleteProgram
instance GHC.Read.Read Network.AWS.MediaTailor.DeleteProgram.DeleteProgram
instance GHC.Classes.Eq Network.AWS.MediaTailor.DeleteProgram.DeleteProgram
instance GHC.Generics.Generic Network.AWS.MediaTailor.DeleteProgram.DeleteProgramResponse
instance GHC.Show.Show Network.AWS.MediaTailor.DeleteProgram.DeleteProgramResponse
instance GHC.Read.Read Network.AWS.MediaTailor.DeleteProgram.DeleteProgramResponse
instance GHC.Classes.Eq Network.AWS.MediaTailor.DeleteProgram.DeleteProgramResponse
instance Network.AWS.Types.AWSRequest Network.AWS.MediaTailor.DeleteProgram.DeleteProgram
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.DeleteProgram.DeleteProgramResponse
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.DeleteProgram.DeleteProgram
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.DeleteProgram.DeleteProgram
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.MediaTailor.DeleteProgram.DeleteProgram
instance Network.AWS.Data.Path.ToPath Network.AWS.MediaTailor.DeleteProgram.DeleteProgram
instance Network.AWS.Data.Query.ToQuery Network.AWS.MediaTailor.DeleteProgram.DeleteProgram


-- | Deletes a prefetch schedule for a specific playback configuration. If
--   you call DeletePrefetchSchedule on an expired prefetch schedule,
--   MediaTailor returns an HTTP 404 status code.
module Network.AWS.MediaTailor.DeletePrefetchSchedule

-- | <i>See:</i> <a>newDeletePrefetchSchedule</a> smart constructor.
data DeletePrefetchSchedule
DeletePrefetchSchedule' :: Text -> Text -> DeletePrefetchSchedule

-- | The identifier for the playback configuration.
[$sel:name:DeletePrefetchSchedule'] :: DeletePrefetchSchedule -> Text

-- | The name of the playback configuration.
[$sel:playbackConfigurationName:DeletePrefetchSchedule'] :: DeletePrefetchSchedule -> Text

-- | Create a value of <a>DeletePrefetchSchedule</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeletePrefetchSchedule'</a>,
--   <a>deletePrefetchSchedule_name</a> - The identifier for the playback
--   configuration.
--   
--   <a>$sel:playbackConfigurationName:DeletePrefetchSchedule'</a>,
--   <a>deletePrefetchSchedule_playbackConfigurationName</a> - The name of
--   the playback configuration.
newDeletePrefetchSchedule :: Text -> Text -> DeletePrefetchSchedule

-- | The identifier for the playback configuration.
deletePrefetchSchedule_name :: Lens' DeletePrefetchSchedule Text

-- | The name of the playback configuration.
deletePrefetchSchedule_playbackConfigurationName :: Lens' DeletePrefetchSchedule Text

-- | <i>See:</i> <a>newDeletePrefetchScheduleResponse</a> smart
--   constructor.
data DeletePrefetchScheduleResponse
DeletePrefetchScheduleResponse' :: Int -> DeletePrefetchScheduleResponse

-- | The response's http status code.
[$sel:httpStatus:DeletePrefetchScheduleResponse'] :: DeletePrefetchScheduleResponse -> Int

-- | Create a value of <a>DeletePrefetchScheduleResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeletePrefetchScheduleResponse'</a>,
--   <a>deletePrefetchScheduleResponse_httpStatus</a> - The response's http
--   status code.
newDeletePrefetchScheduleResponse :: Int -> DeletePrefetchScheduleResponse

-- | The response's http status code.
deletePrefetchScheduleResponse_httpStatus :: Lens' DeletePrefetchScheduleResponse Int
instance GHC.Generics.Generic Network.AWS.MediaTailor.DeletePrefetchSchedule.DeletePrefetchSchedule
instance GHC.Show.Show Network.AWS.MediaTailor.DeletePrefetchSchedule.DeletePrefetchSchedule
instance GHC.Read.Read Network.AWS.MediaTailor.DeletePrefetchSchedule.DeletePrefetchSchedule
instance GHC.Classes.Eq Network.AWS.MediaTailor.DeletePrefetchSchedule.DeletePrefetchSchedule
instance GHC.Generics.Generic Network.AWS.MediaTailor.DeletePrefetchSchedule.DeletePrefetchScheduleResponse
instance GHC.Show.Show Network.AWS.MediaTailor.DeletePrefetchSchedule.DeletePrefetchScheduleResponse
instance GHC.Read.Read Network.AWS.MediaTailor.DeletePrefetchSchedule.DeletePrefetchScheduleResponse
instance GHC.Classes.Eq Network.AWS.MediaTailor.DeletePrefetchSchedule.DeletePrefetchScheduleResponse
instance Network.AWS.Types.AWSRequest Network.AWS.MediaTailor.DeletePrefetchSchedule.DeletePrefetchSchedule
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.DeletePrefetchSchedule.DeletePrefetchScheduleResponse
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.DeletePrefetchSchedule.DeletePrefetchSchedule
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.DeletePrefetchSchedule.DeletePrefetchSchedule
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.MediaTailor.DeletePrefetchSchedule.DeletePrefetchSchedule
instance Network.AWS.Data.Path.ToPath Network.AWS.MediaTailor.DeletePrefetchSchedule.DeletePrefetchSchedule
instance Network.AWS.Data.Query.ToQuery Network.AWS.MediaTailor.DeletePrefetchSchedule.DeletePrefetchSchedule


-- | Deletes the playback configuration for the specified name.
module Network.AWS.MediaTailor.DeletePlaybackConfiguration

-- | <i>See:</i> <a>newDeletePlaybackConfiguration</a> smart constructor.
data DeletePlaybackConfiguration
DeletePlaybackConfiguration' :: Text -> DeletePlaybackConfiguration

-- | The identifier for the playback configuration.
[$sel:name:DeletePlaybackConfiguration'] :: DeletePlaybackConfiguration -> Text

-- | Create a value of <a>DeletePlaybackConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeletePlaybackConfiguration'</a>,
--   <a>deletePlaybackConfiguration_name</a> - The identifier for the
--   playback configuration.
newDeletePlaybackConfiguration :: Text -> DeletePlaybackConfiguration

-- | The identifier for the playback configuration.
deletePlaybackConfiguration_name :: Lens' DeletePlaybackConfiguration Text

-- | <i>See:</i> <a>newDeletePlaybackConfigurationResponse</a> smart
--   constructor.
data DeletePlaybackConfigurationResponse
DeletePlaybackConfigurationResponse' :: Int -> DeletePlaybackConfigurationResponse

-- | The response's http status code.
[$sel:httpStatus:DeletePlaybackConfigurationResponse'] :: DeletePlaybackConfigurationResponse -> Int

-- | Create a value of <a>DeletePlaybackConfigurationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeletePlaybackConfigurationResponse'</a>,
--   <a>deletePlaybackConfigurationResponse_httpStatus</a> - The response's
--   http status code.
newDeletePlaybackConfigurationResponse :: Int -> DeletePlaybackConfigurationResponse

-- | The response's http status code.
deletePlaybackConfigurationResponse_httpStatus :: Lens' DeletePlaybackConfigurationResponse Int
instance GHC.Generics.Generic Network.AWS.MediaTailor.DeletePlaybackConfiguration.DeletePlaybackConfiguration
instance GHC.Show.Show Network.AWS.MediaTailor.DeletePlaybackConfiguration.DeletePlaybackConfiguration
instance GHC.Read.Read Network.AWS.MediaTailor.DeletePlaybackConfiguration.DeletePlaybackConfiguration
instance GHC.Classes.Eq Network.AWS.MediaTailor.DeletePlaybackConfiguration.DeletePlaybackConfiguration
instance GHC.Generics.Generic Network.AWS.MediaTailor.DeletePlaybackConfiguration.DeletePlaybackConfigurationResponse
instance GHC.Show.Show Network.AWS.MediaTailor.DeletePlaybackConfiguration.DeletePlaybackConfigurationResponse
instance GHC.Read.Read Network.AWS.MediaTailor.DeletePlaybackConfiguration.DeletePlaybackConfigurationResponse
instance GHC.Classes.Eq Network.AWS.MediaTailor.DeletePlaybackConfiguration.DeletePlaybackConfigurationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.MediaTailor.DeletePlaybackConfiguration.DeletePlaybackConfiguration
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.DeletePlaybackConfiguration.DeletePlaybackConfigurationResponse
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.DeletePlaybackConfiguration.DeletePlaybackConfiguration
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.DeletePlaybackConfiguration.DeletePlaybackConfiguration
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.MediaTailor.DeletePlaybackConfiguration.DeletePlaybackConfiguration
instance Network.AWS.Data.Path.ToPath Network.AWS.MediaTailor.DeletePlaybackConfiguration.DeletePlaybackConfiguration
instance Network.AWS.Data.Query.ToQuery Network.AWS.MediaTailor.DeletePlaybackConfiguration.DeletePlaybackConfiguration


-- | Deletes a channel's IAM policy.
module Network.AWS.MediaTailor.DeleteChannelPolicy

-- | <i>See:</i> <a>newDeleteChannelPolicy</a> smart constructor.
data DeleteChannelPolicy
DeleteChannelPolicy' :: Text -> DeleteChannelPolicy

-- | The identifier for the channel you are working on.
[$sel:channelName:DeleteChannelPolicy'] :: DeleteChannelPolicy -> Text

-- | Create a value of <a>DeleteChannelPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelName:DeleteChannelPolicy'</a>,
--   <a>deleteChannelPolicy_channelName</a> - The identifier for the
--   channel you are working on.
newDeleteChannelPolicy :: Text -> DeleteChannelPolicy

-- | The identifier for the channel you are working on.
deleteChannelPolicy_channelName :: Lens' DeleteChannelPolicy Text

-- | <i>See:</i> <a>newDeleteChannelPolicyResponse</a> smart constructor.
data DeleteChannelPolicyResponse
DeleteChannelPolicyResponse' :: Int -> DeleteChannelPolicyResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteChannelPolicyResponse'] :: DeleteChannelPolicyResponse -> Int

-- | Create a value of <a>DeleteChannelPolicyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteChannelPolicyResponse'</a>,
--   <a>deleteChannelPolicyResponse_httpStatus</a> - The response's http
--   status code.
newDeleteChannelPolicyResponse :: Int -> DeleteChannelPolicyResponse

-- | The response's http status code.
deleteChannelPolicyResponse_httpStatus :: Lens' DeleteChannelPolicyResponse Int
instance GHC.Generics.Generic Network.AWS.MediaTailor.DeleteChannelPolicy.DeleteChannelPolicy
instance GHC.Show.Show Network.AWS.MediaTailor.DeleteChannelPolicy.DeleteChannelPolicy
instance GHC.Read.Read Network.AWS.MediaTailor.DeleteChannelPolicy.DeleteChannelPolicy
instance GHC.Classes.Eq Network.AWS.MediaTailor.DeleteChannelPolicy.DeleteChannelPolicy
instance GHC.Generics.Generic Network.AWS.MediaTailor.DeleteChannelPolicy.DeleteChannelPolicyResponse
instance GHC.Show.Show Network.AWS.MediaTailor.DeleteChannelPolicy.DeleteChannelPolicyResponse
instance GHC.Read.Read Network.AWS.MediaTailor.DeleteChannelPolicy.DeleteChannelPolicyResponse
instance GHC.Classes.Eq Network.AWS.MediaTailor.DeleteChannelPolicy.DeleteChannelPolicyResponse
instance Network.AWS.Types.AWSRequest Network.AWS.MediaTailor.DeleteChannelPolicy.DeleteChannelPolicy
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.DeleteChannelPolicy.DeleteChannelPolicyResponse
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.DeleteChannelPolicy.DeleteChannelPolicy
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.DeleteChannelPolicy.DeleteChannelPolicy
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.MediaTailor.DeleteChannelPolicy.DeleteChannelPolicy
instance Network.AWS.Data.Path.ToPath Network.AWS.MediaTailor.DeleteChannelPolicy.DeleteChannelPolicy
instance Network.AWS.Data.Query.ToQuery Network.AWS.MediaTailor.DeleteChannelPolicy.DeleteChannelPolicy


-- | Deletes a channel. You must stop the channel before it can be deleted.
module Network.AWS.MediaTailor.DeleteChannel

-- | <i>See:</i> <a>newDeleteChannel</a> smart constructor.
data DeleteChannel
DeleteChannel' :: Text -> DeleteChannel

-- | The identifier for the channel you are working on.
[$sel:channelName:DeleteChannel'] :: DeleteChannel -> Text

-- | Create a value of <a>DeleteChannel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelName:DeleteChannel'</a>,
--   <a>deleteChannel_channelName</a> - The identifier for the channel you
--   are working on.
newDeleteChannel :: Text -> DeleteChannel

-- | The identifier for the channel you are working on.
deleteChannel_channelName :: Lens' DeleteChannel Text

-- | <i>See:</i> <a>newDeleteChannelResponse</a> smart constructor.
data DeleteChannelResponse
DeleteChannelResponse' :: Int -> DeleteChannelResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteChannelResponse'] :: DeleteChannelResponse -> Int

-- | Create a value of <a>DeleteChannelResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteChannelResponse'</a>,
--   <a>deleteChannelResponse_httpStatus</a> - The response's http status
--   code.
newDeleteChannelResponse :: Int -> DeleteChannelResponse

-- | The response's http status code.
deleteChannelResponse_httpStatus :: Lens' DeleteChannelResponse Int
instance GHC.Generics.Generic Network.AWS.MediaTailor.DeleteChannel.DeleteChannel
instance GHC.Show.Show Network.AWS.MediaTailor.DeleteChannel.DeleteChannel
instance GHC.Read.Read Network.AWS.MediaTailor.DeleteChannel.DeleteChannel
instance GHC.Classes.Eq Network.AWS.MediaTailor.DeleteChannel.DeleteChannel
instance GHC.Generics.Generic Network.AWS.MediaTailor.DeleteChannel.DeleteChannelResponse
instance GHC.Show.Show Network.AWS.MediaTailor.DeleteChannel.DeleteChannelResponse
instance GHC.Read.Read Network.AWS.MediaTailor.DeleteChannel.DeleteChannelResponse
instance GHC.Classes.Eq Network.AWS.MediaTailor.DeleteChannel.DeleteChannelResponse
instance Network.AWS.Types.AWSRequest Network.AWS.MediaTailor.DeleteChannel.DeleteChannel
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.DeleteChannel.DeleteChannelResponse
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.DeleteChannel.DeleteChannel
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.DeleteChannel.DeleteChannel
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.MediaTailor.DeleteChannel.DeleteChannel
instance Network.AWS.Data.Path.ToPath Network.AWS.MediaTailor.DeleteChannel.DeleteChannel
instance Network.AWS.Data.Query.ToQuery Network.AWS.MediaTailor.DeleteChannel.DeleteChannel


-- | Creates name for a specific VOD source in a source location.
module Network.AWS.MediaTailor.CreateVodSource

-- | <i>See:</i> <a>newCreateVodSource</a> smart constructor.
data CreateVodSource
CreateVodSource' :: Maybe (HashMap Text Text) -> Text -> Text -> [HttpPackageConfiguration] -> CreateVodSource

-- | The tags to assign to the VOD source.
[$sel:tags:CreateVodSource'] :: CreateVodSource -> Maybe (HashMap Text Text)

-- | The identifier for the source location you are working on.
[$sel:sourceLocationName:CreateVodSource'] :: CreateVodSource -> Text

-- | The identifier for the VOD source you are working on.
[$sel:vodSourceName:CreateVodSource'] :: CreateVodSource -> Text

-- | An array of HTTP package configuration parameters for this VOD source.
[$sel:httpPackageConfigurations:CreateVodSource'] :: CreateVodSource -> [HttpPackageConfiguration]

-- | Create a value of <a>CreateVodSource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:CreateVodSource'</a>, <a>createVodSource_tags</a> - The
--   tags to assign to the VOD source.
--   
--   <a>$sel:sourceLocationName:CreateVodSource'</a>,
--   <a>createVodSource_sourceLocationName</a> - The identifier for the
--   source location you are working on.
--   
--   <a>$sel:vodSourceName:CreateVodSource'</a>,
--   <a>createVodSource_vodSourceName</a> - The identifier for the VOD
--   source you are working on.
--   
--   <a>$sel:httpPackageConfigurations:CreateVodSource'</a>,
--   <a>createVodSource_httpPackageConfigurations</a> - An array of HTTP
--   package configuration parameters for this VOD source.
newCreateVodSource :: Text -> Text -> CreateVodSource

-- | The tags to assign to the VOD source.
createVodSource_tags :: Lens' CreateVodSource (Maybe (HashMap Text Text))

-- | The identifier for the source location you are working on.
createVodSource_sourceLocationName :: Lens' CreateVodSource Text

-- | The identifier for the VOD source you are working on.
createVodSource_vodSourceName :: Lens' CreateVodSource Text

-- | An array of HTTP package configuration parameters for this VOD source.
createVodSource_httpPackageConfigurations :: Lens' CreateVodSource [HttpPackageConfiguration]

-- | <i>See:</i> <a>newCreateVodSourceResponse</a> smart constructor.
data CreateVodSourceResponse
CreateVodSourceResponse' :: Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe [HttpPackageConfiguration] -> Maybe Text -> Maybe (HashMap Text Text) -> Int -> CreateVodSourceResponse

-- | The timestamp that indicates when the VOD source was created.
[$sel:creationTime:CreateVodSourceResponse'] :: CreateVodSourceResponse -> Maybe POSIX

-- | The name of the source location associated with the VOD source.
[$sel:sourceLocationName:CreateVodSourceResponse'] :: CreateVodSourceResponse -> Maybe Text

-- | The ARN of the VOD source.
[$sel:arn:CreateVodSourceResponse'] :: CreateVodSourceResponse -> Maybe Text

-- | The ARN for the VOD source.
[$sel:lastModifiedTime:CreateVodSourceResponse'] :: CreateVodSourceResponse -> Maybe POSIX

-- | The HTTP package configurations.
[$sel:httpPackageConfigurations:CreateVodSourceResponse'] :: CreateVodSourceResponse -> Maybe [HttpPackageConfiguration]

-- | The name of the VOD source.
[$sel:vodSourceName:CreateVodSourceResponse'] :: CreateVodSourceResponse -> Maybe Text

-- | The tags assigned to the VOD source.
[$sel:tags:CreateVodSourceResponse'] :: CreateVodSourceResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:CreateVodSourceResponse'] :: CreateVodSourceResponse -> Int

-- | Create a value of <a>CreateVodSourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:CreateVodSourceResponse'</a>,
--   <a>createVodSourceResponse_creationTime</a> - The timestamp that
--   indicates when the VOD source was created.
--   
--   <a>$sel:sourceLocationName:CreateVodSource'</a>,
--   <a>createVodSourceResponse_sourceLocationName</a> - The name of the
--   source location associated with the VOD source.
--   
--   <a>$sel:arn:CreateVodSourceResponse'</a>,
--   <a>createVodSourceResponse_arn</a> - The ARN of the VOD source.
--   
--   <a>$sel:lastModifiedTime:CreateVodSourceResponse'</a>,
--   <a>createVodSourceResponse_lastModifiedTime</a> - The ARN for the VOD
--   source.
--   
--   <a>$sel:httpPackageConfigurations:CreateVodSource'</a>,
--   <a>createVodSourceResponse_httpPackageConfigurations</a> - The HTTP
--   package configurations.
--   
--   <a>$sel:vodSourceName:CreateVodSource'</a>,
--   <a>createVodSourceResponse_vodSourceName</a> - The name of the VOD
--   source.
--   
--   <a>$sel:tags:CreateVodSource'</a>, <a>createVodSourceResponse_tags</a>
--   - The tags assigned to the VOD source.
--   
--   <a>$sel:httpStatus:CreateVodSourceResponse'</a>,
--   <a>createVodSourceResponse_httpStatus</a> - The response's http status
--   code.
newCreateVodSourceResponse :: Int -> CreateVodSourceResponse

-- | The timestamp that indicates when the VOD source was created.
createVodSourceResponse_creationTime :: Lens' CreateVodSourceResponse (Maybe UTCTime)

-- | The name of the source location associated with the VOD source.
createVodSourceResponse_sourceLocationName :: Lens' CreateVodSourceResponse (Maybe Text)

-- | The ARN of the VOD source.
createVodSourceResponse_arn :: Lens' CreateVodSourceResponse (Maybe Text)

-- | The ARN for the VOD source.
createVodSourceResponse_lastModifiedTime :: Lens' CreateVodSourceResponse (Maybe UTCTime)

-- | The HTTP package configurations.
createVodSourceResponse_httpPackageConfigurations :: Lens' CreateVodSourceResponse (Maybe [HttpPackageConfiguration])

-- | The name of the VOD source.
createVodSourceResponse_vodSourceName :: Lens' CreateVodSourceResponse (Maybe Text)

-- | The tags assigned to the VOD source.
createVodSourceResponse_tags :: Lens' CreateVodSourceResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
createVodSourceResponse_httpStatus :: Lens' CreateVodSourceResponse Int
instance GHC.Generics.Generic Network.AWS.MediaTailor.CreateVodSource.CreateVodSource
instance GHC.Show.Show Network.AWS.MediaTailor.CreateVodSource.CreateVodSource
instance GHC.Read.Read Network.AWS.MediaTailor.CreateVodSource.CreateVodSource
instance GHC.Classes.Eq Network.AWS.MediaTailor.CreateVodSource.CreateVodSource
instance GHC.Generics.Generic Network.AWS.MediaTailor.CreateVodSource.CreateVodSourceResponse
instance GHC.Show.Show Network.AWS.MediaTailor.CreateVodSource.CreateVodSourceResponse
instance GHC.Read.Read Network.AWS.MediaTailor.CreateVodSource.CreateVodSourceResponse
instance GHC.Classes.Eq Network.AWS.MediaTailor.CreateVodSource.CreateVodSourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.MediaTailor.CreateVodSource.CreateVodSource
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.CreateVodSource.CreateVodSourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.CreateVodSource.CreateVodSource
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.CreateVodSource.CreateVodSource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.MediaTailor.CreateVodSource.CreateVodSource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MediaTailor.CreateVodSource.CreateVodSource
instance Network.AWS.Data.Path.ToPath Network.AWS.MediaTailor.CreateVodSource.CreateVodSource
instance Network.AWS.Data.Query.ToQuery Network.AWS.MediaTailor.CreateVodSource.CreateVodSource


-- | Creates a source location on a specific channel.
module Network.AWS.MediaTailor.CreateSourceLocation

-- | <i>See:</i> <a>newCreateSourceLocation</a> smart constructor.
data CreateSourceLocation
CreateSourceLocation' :: Maybe AccessConfiguration -> Maybe DefaultSegmentDeliveryConfiguration -> Maybe (HashMap Text Text) -> Text -> HttpConfiguration -> CreateSourceLocation

-- | Access configuration parameters. Configures the type of authentication
--   used to access content from your source location.
[$sel:accessConfiguration:CreateSourceLocation'] :: CreateSourceLocation -> Maybe AccessConfiguration

-- | The optional configuration for the server that serves segments.
[$sel:defaultSegmentDeliveryConfiguration:CreateSourceLocation'] :: CreateSourceLocation -> Maybe DefaultSegmentDeliveryConfiguration

-- | The tags to assign to the source location.
[$sel:tags:CreateSourceLocation'] :: CreateSourceLocation -> Maybe (HashMap Text Text)

-- | The identifier for the source location you are working on.
[$sel:sourceLocationName:CreateSourceLocation'] :: CreateSourceLocation -> Text

-- | The source's HTTP package configurations.
[$sel:httpConfiguration:CreateSourceLocation'] :: CreateSourceLocation -> HttpConfiguration

-- | Create a value of <a>CreateSourceLocation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accessConfiguration:CreateSourceLocation'</a>,
--   <a>createSourceLocation_accessConfiguration</a> - Access configuration
--   parameters. Configures the type of authentication used to access
--   content from your source location.
--   
--   <a>$sel:defaultSegmentDeliveryConfiguration:CreateSourceLocation'</a>,
--   <a>createSourceLocation_defaultSegmentDeliveryConfiguration</a> - The
--   optional configuration for the server that serves segments.
--   
--   <a>$sel:tags:CreateSourceLocation'</a>,
--   <a>createSourceLocation_tags</a> - The tags to assign to the source
--   location.
--   
--   <a>$sel:sourceLocationName:CreateSourceLocation'</a>,
--   <a>createSourceLocation_sourceLocationName</a> - The identifier for
--   the source location you are working on.
--   
--   <a>$sel:httpConfiguration:CreateSourceLocation'</a>,
--   <a>createSourceLocation_httpConfiguration</a> - The source's HTTP
--   package configurations.
newCreateSourceLocation :: Text -> HttpConfiguration -> CreateSourceLocation

-- | Access configuration parameters. Configures the type of authentication
--   used to access content from your source location.
createSourceLocation_accessConfiguration :: Lens' CreateSourceLocation (Maybe AccessConfiguration)

-- | The optional configuration for the server that serves segments.
createSourceLocation_defaultSegmentDeliveryConfiguration :: Lens' CreateSourceLocation (Maybe DefaultSegmentDeliveryConfiguration)

-- | The tags to assign to the source location.
createSourceLocation_tags :: Lens' CreateSourceLocation (Maybe (HashMap Text Text))

-- | The identifier for the source location you are working on.
createSourceLocation_sourceLocationName :: Lens' CreateSourceLocation Text

-- | The source's HTTP package configurations.
createSourceLocation_httpConfiguration :: Lens' CreateSourceLocation HttpConfiguration

-- | <i>See:</i> <a>newCreateSourceLocationResponse</a> smart constructor.
data CreateSourceLocationResponse
CreateSourceLocationResponse' :: Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe HttpConfiguration -> Maybe POSIX -> Maybe AccessConfiguration -> Maybe DefaultSegmentDeliveryConfiguration -> Maybe (HashMap Text Text) -> Int -> CreateSourceLocationResponse

-- | The timestamp that indicates when the source location was created.
[$sel:creationTime:CreateSourceLocationResponse'] :: CreateSourceLocationResponse -> Maybe POSIX

-- | The name of the source location.
[$sel:sourceLocationName:CreateSourceLocationResponse'] :: CreateSourceLocationResponse -> Maybe Text

-- | The ARN of the source location.
[$sel:arn:CreateSourceLocationResponse'] :: CreateSourceLocationResponse -> Maybe Text

-- | The HTTP package configuration settings for the source location.
[$sel:httpConfiguration:CreateSourceLocationResponse'] :: CreateSourceLocationResponse -> Maybe HttpConfiguration

-- | The timestamp that indicates when the source location was last
--   modified.
[$sel:lastModifiedTime:CreateSourceLocationResponse'] :: CreateSourceLocationResponse -> Maybe POSIX

-- | The access configuration for the source location.
[$sel:accessConfiguration:CreateSourceLocationResponse'] :: CreateSourceLocationResponse -> Maybe AccessConfiguration

-- | The default segment delivery configuration settings.
[$sel:defaultSegmentDeliveryConfiguration:CreateSourceLocationResponse'] :: CreateSourceLocationResponse -> Maybe DefaultSegmentDeliveryConfiguration

-- | The tags assigned to the source location.
[$sel:tags:CreateSourceLocationResponse'] :: CreateSourceLocationResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:CreateSourceLocationResponse'] :: CreateSourceLocationResponse -> Int

-- | Create a value of <a>CreateSourceLocationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:CreateSourceLocationResponse'</a>,
--   <a>createSourceLocationResponse_creationTime</a> - The timestamp that
--   indicates when the source location was created.
--   
--   <a>$sel:sourceLocationName:CreateSourceLocation'</a>,
--   <a>createSourceLocationResponse_sourceLocationName</a> - The name of
--   the source location.
--   
--   <a>$sel:arn:CreateSourceLocationResponse'</a>,
--   <a>createSourceLocationResponse_arn</a> - The ARN of the source
--   location.
--   
--   <a>$sel:httpConfiguration:CreateSourceLocation'</a>,
--   <a>createSourceLocationResponse_httpConfiguration</a> - The HTTP
--   package configuration settings for the source location.
--   
--   <a>$sel:lastModifiedTime:CreateSourceLocationResponse'</a>,
--   <a>createSourceLocationResponse_lastModifiedTime</a> - The timestamp
--   that indicates when the source location was last modified.
--   
--   <a>$sel:accessConfiguration:CreateSourceLocation'</a>,
--   <a>createSourceLocationResponse_accessConfiguration</a> - The access
--   configuration for the source location.
--   
--   <a>$sel:defaultSegmentDeliveryConfiguration:CreateSourceLocation'</a>,
--   <a>createSourceLocationResponse_defaultSegmentDeliveryConfiguration</a>
--   - The default segment delivery configuration settings.
--   
--   <a>$sel:tags:CreateSourceLocation'</a>,
--   <a>createSourceLocationResponse_tags</a> - The tags assigned to the
--   source location.
--   
--   <a>$sel:httpStatus:CreateSourceLocationResponse'</a>,
--   <a>createSourceLocationResponse_httpStatus</a> - The response's http
--   status code.
newCreateSourceLocationResponse :: Int -> CreateSourceLocationResponse

-- | The timestamp that indicates when the source location was created.
createSourceLocationResponse_creationTime :: Lens' CreateSourceLocationResponse (Maybe UTCTime)

-- | The name of the source location.
createSourceLocationResponse_sourceLocationName :: Lens' CreateSourceLocationResponse (Maybe Text)

-- | The ARN of the source location.
createSourceLocationResponse_arn :: Lens' CreateSourceLocationResponse (Maybe Text)

-- | The HTTP package configuration settings for the source location.
createSourceLocationResponse_httpConfiguration :: Lens' CreateSourceLocationResponse (Maybe HttpConfiguration)

-- | The timestamp that indicates when the source location was last
--   modified.
createSourceLocationResponse_lastModifiedTime :: Lens' CreateSourceLocationResponse (Maybe UTCTime)

-- | The access configuration for the source location.
createSourceLocationResponse_accessConfiguration :: Lens' CreateSourceLocationResponse (Maybe AccessConfiguration)

-- | The default segment delivery configuration settings.
createSourceLocationResponse_defaultSegmentDeliveryConfiguration :: Lens' CreateSourceLocationResponse (Maybe DefaultSegmentDeliveryConfiguration)

-- | The tags assigned to the source location.
createSourceLocationResponse_tags :: Lens' CreateSourceLocationResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
createSourceLocationResponse_httpStatus :: Lens' CreateSourceLocationResponse Int
instance GHC.Generics.Generic Network.AWS.MediaTailor.CreateSourceLocation.CreateSourceLocation
instance GHC.Show.Show Network.AWS.MediaTailor.CreateSourceLocation.CreateSourceLocation
instance GHC.Read.Read Network.AWS.MediaTailor.CreateSourceLocation.CreateSourceLocation
instance GHC.Classes.Eq Network.AWS.MediaTailor.CreateSourceLocation.CreateSourceLocation
instance GHC.Generics.Generic Network.AWS.MediaTailor.CreateSourceLocation.CreateSourceLocationResponse
instance GHC.Show.Show Network.AWS.MediaTailor.CreateSourceLocation.CreateSourceLocationResponse
instance GHC.Read.Read Network.AWS.MediaTailor.CreateSourceLocation.CreateSourceLocationResponse
instance GHC.Classes.Eq Network.AWS.MediaTailor.CreateSourceLocation.CreateSourceLocationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.MediaTailor.CreateSourceLocation.CreateSourceLocation
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.CreateSourceLocation.CreateSourceLocationResponse
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.CreateSourceLocation.CreateSourceLocation
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.CreateSourceLocation.CreateSourceLocation
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.MediaTailor.CreateSourceLocation.CreateSourceLocation
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MediaTailor.CreateSourceLocation.CreateSourceLocation
instance Network.AWS.Data.Path.ToPath Network.AWS.MediaTailor.CreateSourceLocation.CreateSourceLocation
instance Network.AWS.Data.Query.ToQuery Network.AWS.MediaTailor.CreateSourceLocation.CreateSourceLocation


-- | Creates a program.
module Network.AWS.MediaTailor.CreateProgram

-- | <i>See:</i> <a>newCreateProgram</a> smart constructor.
data CreateProgram
CreateProgram' :: Maybe [AdBreak] -> Text -> Text -> Text -> ScheduleConfiguration -> Text -> CreateProgram

-- | The ad break configuration settings.
[$sel:adBreaks:CreateProgram'] :: CreateProgram -> Maybe [AdBreak]

-- | The identifier for the channel you are working on.
[$sel:channelName:CreateProgram'] :: CreateProgram -> Text

-- | The identifier for the program you are working on.
[$sel:programName:CreateProgram'] :: CreateProgram -> Text

-- | The name that's used to refer to a VOD source.
[$sel:vodSourceName:CreateProgram'] :: CreateProgram -> Text

-- | The schedule configuration settings.
[$sel:scheduleConfiguration:CreateProgram'] :: CreateProgram -> ScheduleConfiguration

-- | The name of the source location.
[$sel:sourceLocationName:CreateProgram'] :: CreateProgram -> Text

-- | Create a value of <a>CreateProgram</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:adBreaks:CreateProgram'</a>, <a>createProgram_adBreaks</a> -
--   The ad break configuration settings.
--   
--   <a>$sel:channelName:CreateProgram'</a>,
--   <a>createProgram_channelName</a> - The identifier for the channel you
--   are working on.
--   
--   <a>$sel:programName:CreateProgram'</a>,
--   <a>createProgram_programName</a> - The identifier for the program you
--   are working on.
--   
--   <a>$sel:vodSourceName:CreateProgram'</a>,
--   <a>createProgram_vodSourceName</a> - The name that's used to refer to
--   a VOD source.
--   
--   <a>$sel:scheduleConfiguration:CreateProgram'</a>,
--   <a>createProgram_scheduleConfiguration</a> - The schedule
--   configuration settings.
--   
--   <a>$sel:sourceLocationName:CreateProgram'</a>,
--   <a>createProgram_sourceLocationName</a> - The name of the source
--   location.
newCreateProgram :: Text -> Text -> Text -> ScheduleConfiguration -> Text -> CreateProgram

-- | The ad break configuration settings.
createProgram_adBreaks :: Lens' CreateProgram (Maybe [AdBreak])

-- | The identifier for the channel you are working on.
createProgram_channelName :: Lens' CreateProgram Text

-- | The identifier for the program you are working on.
createProgram_programName :: Lens' CreateProgram Text

-- | The name that's used to refer to a VOD source.
createProgram_vodSourceName :: Lens' CreateProgram Text

-- | The schedule configuration settings.
createProgram_scheduleConfiguration :: Lens' CreateProgram ScheduleConfiguration

-- | The name of the source location.
createProgram_sourceLocationName :: Lens' CreateProgram Text

-- | <i>See:</i> <a>newCreateProgramResponse</a> smart constructor.
data CreateProgramResponse
CreateProgramResponse' :: Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [AdBreak] -> Maybe Text -> Maybe POSIX -> Maybe Text -> Int -> CreateProgramResponse

-- | The timestamp of when the program was created.
[$sel:creationTime:CreateProgramResponse'] :: CreateProgramResponse -> Maybe POSIX

-- | The source location name.
[$sel:sourceLocationName:CreateProgramResponse'] :: CreateProgramResponse -> Maybe Text

-- | The ARN of the program.
[$sel:arn:CreateProgramResponse'] :: CreateProgramResponse -> Maybe Text

-- | The name of the program.
[$sel:programName:CreateProgramResponse'] :: CreateProgramResponse -> Maybe Text

-- | The ad break configuration settings.
[$sel:adBreaks:CreateProgramResponse'] :: CreateProgramResponse -> Maybe [AdBreak]

-- | The name of the channel that the program belongs to.
[$sel:channelName:CreateProgramResponse'] :: CreateProgramResponse -> Maybe Text

-- | The date and time that the program is scheduled to start in ISO 8601
--   format and Coordinated Universal Time (UTC). For example, the value
--   2021-03-27T17:48:16.751Z represents March 27, 2021 at 17:48:16.751
--   UTC.
[$sel:scheduledStartTime:CreateProgramResponse'] :: CreateProgramResponse -> Maybe POSIX

-- | The name that's used to refer to a VOD source.
[$sel:vodSourceName:CreateProgramResponse'] :: CreateProgramResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateProgramResponse'] :: CreateProgramResponse -> Int

-- | Create a value of <a>CreateProgramResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:CreateProgramResponse'</a>,
--   <a>createProgramResponse_creationTime</a> - The timestamp of when the
--   program was created.
--   
--   <a>$sel:sourceLocationName:CreateProgram'</a>,
--   <a>createProgramResponse_sourceLocationName</a> - The source location
--   name.
--   
--   <a>$sel:arn:CreateProgramResponse'</a>,
--   <a>createProgramResponse_arn</a> - The ARN of the program.
--   
--   <a>$sel:programName:CreateProgram'</a>,
--   <a>createProgramResponse_programName</a> - The name of the program.
--   
--   <a>$sel:adBreaks:CreateProgram'</a>,
--   <a>createProgramResponse_adBreaks</a> - The ad break configuration
--   settings.
--   
--   <a>$sel:channelName:CreateProgram'</a>,
--   <a>createProgramResponse_channelName</a> - The name of the channel
--   that the program belongs to.
--   
--   <a>$sel:scheduledStartTime:CreateProgramResponse'</a>,
--   <a>createProgramResponse_scheduledStartTime</a> - The date and time
--   that the program is scheduled to start in ISO 8601 format and
--   Coordinated Universal Time (UTC). For example, the value
--   2021-03-27T17:48:16.751Z represents March 27, 2021 at 17:48:16.751
--   UTC.
--   
--   <a>$sel:vodSourceName:CreateProgram'</a>,
--   <a>createProgramResponse_vodSourceName</a> - The name that's used to
--   refer to a VOD source.
--   
--   <a>$sel:httpStatus:CreateProgramResponse'</a>,
--   <a>createProgramResponse_httpStatus</a> - The response's http status
--   code.
newCreateProgramResponse :: Int -> CreateProgramResponse

-- | The timestamp of when the program was created.
createProgramResponse_creationTime :: Lens' CreateProgramResponse (Maybe UTCTime)

-- | The source location name.
createProgramResponse_sourceLocationName :: Lens' CreateProgramResponse (Maybe Text)

-- | The ARN of the program.
createProgramResponse_arn :: Lens' CreateProgramResponse (Maybe Text)

-- | The name of the program.
createProgramResponse_programName :: Lens' CreateProgramResponse (Maybe Text)

-- | The ad break configuration settings.
createProgramResponse_adBreaks :: Lens' CreateProgramResponse (Maybe [AdBreak])

-- | The name of the channel that the program belongs to.
createProgramResponse_channelName :: Lens' CreateProgramResponse (Maybe Text)

-- | The date and time that the program is scheduled to start in ISO 8601
--   format and Coordinated Universal Time (UTC). For example, the value
--   2021-03-27T17:48:16.751Z represents March 27, 2021 at 17:48:16.751
--   UTC.
createProgramResponse_scheduledStartTime :: Lens' CreateProgramResponse (Maybe UTCTime)

-- | The name that's used to refer to a VOD source.
createProgramResponse_vodSourceName :: Lens' CreateProgramResponse (Maybe Text)

-- | The response's http status code.
createProgramResponse_httpStatus :: Lens' CreateProgramResponse Int
instance GHC.Generics.Generic Network.AWS.MediaTailor.CreateProgram.CreateProgram
instance GHC.Show.Show Network.AWS.MediaTailor.CreateProgram.CreateProgram
instance GHC.Read.Read Network.AWS.MediaTailor.CreateProgram.CreateProgram
instance GHC.Classes.Eq Network.AWS.MediaTailor.CreateProgram.CreateProgram
instance GHC.Generics.Generic Network.AWS.MediaTailor.CreateProgram.CreateProgramResponse
instance GHC.Show.Show Network.AWS.MediaTailor.CreateProgram.CreateProgramResponse
instance GHC.Read.Read Network.AWS.MediaTailor.CreateProgram.CreateProgramResponse
instance GHC.Classes.Eq Network.AWS.MediaTailor.CreateProgram.CreateProgramResponse
instance Network.AWS.Types.AWSRequest Network.AWS.MediaTailor.CreateProgram.CreateProgram
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.CreateProgram.CreateProgramResponse
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.CreateProgram.CreateProgram
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.CreateProgram.CreateProgram
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.MediaTailor.CreateProgram.CreateProgram
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MediaTailor.CreateProgram.CreateProgram
instance Network.AWS.Data.Path.ToPath Network.AWS.MediaTailor.CreateProgram.CreateProgram
instance Network.AWS.Data.Query.ToQuery Network.AWS.MediaTailor.CreateProgram.CreateProgram


-- | Creates a new prefetch schedule for the specified playback
--   configuration.
module Network.AWS.MediaTailor.CreatePrefetchSchedule

-- | <i>See:</i> <a>newCreatePrefetchSchedule</a> smart constructor.
data CreatePrefetchSchedule
CreatePrefetchSchedule' :: Maybe Text -> Text -> Text -> PrefetchConsumption -> PrefetchRetrieval -> CreatePrefetchSchedule

-- | An optional stream identifier that MediaTailor uses to prefetch ads
--   for multiple streams that use the same playback configuration. If
--   StreamId is specified, MediaTailor returns all of the prefetch
--   schedules with an exact match on StreamId. If not specified,
--   MediaTailor returns all of the prefetch schedules for the playback
--   configuration, regardless of StreamId.
[$sel:streamId:CreatePrefetchSchedule'] :: CreatePrefetchSchedule -> Maybe Text

-- | The identifier for the playback configuration.
[$sel:name:CreatePrefetchSchedule'] :: CreatePrefetchSchedule -> Text

-- | The name of the playback configuration.
[$sel:playbackConfigurationName:CreatePrefetchSchedule'] :: CreatePrefetchSchedule -> Text

-- | The configuration settings for MediaTailor's <i>consumption</i> of the
--   prefetched ads from the ad decision server. Each consumption
--   configuration contains an end time and an optional start time that
--   define the <i>consumption window</i>. Prefetch schedules automatically
--   expire no earlier than seven days after the end time.
[$sel:consumption:CreatePrefetchSchedule'] :: CreatePrefetchSchedule -> PrefetchConsumption

-- | The configuration settings for retrieval of prefetched ads from the ad
--   decision server. Only one set of prefetched ads will be retrieved and
--   subsequently consumed for each ad break.
[$sel:retrieval:CreatePrefetchSchedule'] :: CreatePrefetchSchedule -> PrefetchRetrieval

-- | Create a value of <a>CreatePrefetchSchedule</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:streamId:CreatePrefetchSchedule'</a>,
--   <a>createPrefetchSchedule_streamId</a> - An optional stream identifier
--   that MediaTailor uses to prefetch ads for multiple streams that use
--   the same playback configuration. If StreamId is specified, MediaTailor
--   returns all of the prefetch schedules with an exact match on StreamId.
--   If not specified, MediaTailor returns all of the prefetch schedules
--   for the playback configuration, regardless of StreamId.
--   
--   <a>$sel:name:CreatePrefetchSchedule'</a>,
--   <a>createPrefetchSchedule_name</a> - The identifier for the playback
--   configuration.
--   
--   <a>$sel:playbackConfigurationName:CreatePrefetchSchedule'</a>,
--   <a>createPrefetchSchedule_playbackConfigurationName</a> - The name of
--   the playback configuration.
--   
--   <a>$sel:consumption:CreatePrefetchSchedule'</a>,
--   <a>createPrefetchSchedule_consumption</a> - The configuration settings
--   for MediaTailor's <i>consumption</i> of the prefetched ads from the ad
--   decision server. Each consumption configuration contains an end time
--   and an optional start time that define the <i>consumption window</i>.
--   Prefetch schedules automatically expire no earlier than seven days
--   after the end time.
--   
--   <a>$sel:retrieval:CreatePrefetchSchedule'</a>,
--   <a>createPrefetchSchedule_retrieval</a> - The configuration settings
--   for retrieval of prefetched ads from the ad decision server. Only one
--   set of prefetched ads will be retrieved and subsequently consumed for
--   each ad break.
newCreatePrefetchSchedule :: Text -> Text -> PrefetchConsumption -> PrefetchRetrieval -> CreatePrefetchSchedule

-- | An optional stream identifier that MediaTailor uses to prefetch ads
--   for multiple streams that use the same playback configuration. If
--   StreamId is specified, MediaTailor returns all of the prefetch
--   schedules with an exact match on StreamId. If not specified,
--   MediaTailor returns all of the prefetch schedules for the playback
--   configuration, regardless of StreamId.
createPrefetchSchedule_streamId :: Lens' CreatePrefetchSchedule (Maybe Text)

-- | The identifier for the playback configuration.
createPrefetchSchedule_name :: Lens' CreatePrefetchSchedule Text

-- | The name of the playback configuration.
createPrefetchSchedule_playbackConfigurationName :: Lens' CreatePrefetchSchedule Text

-- | The configuration settings for MediaTailor's <i>consumption</i> of the
--   prefetched ads from the ad decision server. Each consumption
--   configuration contains an end time and an optional start time that
--   define the <i>consumption window</i>. Prefetch schedules automatically
--   expire no earlier than seven days after the end time.
createPrefetchSchedule_consumption :: Lens' CreatePrefetchSchedule PrefetchConsumption

-- | The configuration settings for retrieval of prefetched ads from the ad
--   decision server. Only one set of prefetched ads will be retrieved and
--   subsequently consumed for each ad break.
createPrefetchSchedule_retrieval :: Lens' CreatePrefetchSchedule PrefetchRetrieval

-- | <i>See:</i> <a>newCreatePrefetchScheduleResponse</a> smart
--   constructor.
data CreatePrefetchScheduleResponse
CreatePrefetchScheduleResponse' :: Maybe Text -> Maybe Text -> Maybe PrefetchRetrieval -> Maybe Text -> Maybe PrefetchConsumption -> Maybe Text -> Int -> CreatePrefetchScheduleResponse

-- | The Amazon Resource Name (ARN) of the prefetch schedule.
[$sel:arn:CreatePrefetchScheduleResponse'] :: CreatePrefetchScheduleResponse -> Maybe Text

-- | The name of the playback configuration to create the prefetch schedule
--   for.
[$sel:playbackConfigurationName:CreatePrefetchScheduleResponse'] :: CreatePrefetchScheduleResponse -> Maybe Text

-- | A complex type that contains settings for prefetch retrieval from the
--   ad decision server (ADS).
[$sel:retrieval:CreatePrefetchScheduleResponse'] :: CreatePrefetchScheduleResponse -> Maybe PrefetchRetrieval

-- | The name of the prefetch schedule. The name must be unique among all
--   prefetch schedules that are associated with the specified playback
--   configuration.
[$sel:name:CreatePrefetchScheduleResponse'] :: CreatePrefetchScheduleResponse -> Maybe Text

-- | Consumption settings determine how, and when, MediaTailor places the
--   prefetched ads into ad breaks. Ad consumption occurs within a span of
--   time that you define, called a <i>consumption window</i>. You can
--   designate which ad breaks that MediaTailor fills with prefetch ads by
--   setting avail matching criteria.
[$sel:consumption:CreatePrefetchScheduleResponse'] :: CreatePrefetchScheduleResponse -> Maybe PrefetchConsumption

-- | An optional stream identifier that you can specify in order to
--   prefetch for multiple streams that use the same playback
--   configuration.
[$sel:streamId:CreatePrefetchScheduleResponse'] :: CreatePrefetchScheduleResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreatePrefetchScheduleResponse'] :: CreatePrefetchScheduleResponse -> Int

-- | Create a value of <a>CreatePrefetchScheduleResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:CreatePrefetchScheduleResponse'</a>,
--   <a>createPrefetchScheduleResponse_arn</a> - The Amazon Resource Name
--   (ARN) of the prefetch schedule.
--   
--   <a>$sel:playbackConfigurationName:CreatePrefetchSchedule'</a>,
--   <a>createPrefetchScheduleResponse_playbackConfigurationName</a> - The
--   name of the playback configuration to create the prefetch schedule
--   for.
--   
--   <a>$sel:retrieval:CreatePrefetchSchedule'</a>,
--   <a>createPrefetchScheduleResponse_retrieval</a> - A complex type that
--   contains settings for prefetch retrieval from the ad decision server
--   (ADS).
--   
--   <a>$sel:name:CreatePrefetchSchedule'</a>,
--   <a>createPrefetchScheduleResponse_name</a> - The name of the prefetch
--   schedule. The name must be unique among all prefetch schedules that
--   are associated with the specified playback configuration.
--   
--   <a>$sel:consumption:CreatePrefetchSchedule'</a>,
--   <a>createPrefetchScheduleResponse_consumption</a> - Consumption
--   settings determine how, and when, MediaTailor places the prefetched
--   ads into ad breaks. Ad consumption occurs within a span of time that
--   you define, called a <i>consumption window</i>. You can designate
--   which ad breaks that MediaTailor fills with prefetch ads by setting
--   avail matching criteria.
--   
--   <a>$sel:streamId:CreatePrefetchSchedule'</a>,
--   <a>createPrefetchScheduleResponse_streamId</a> - An optional stream
--   identifier that you can specify in order to prefetch for multiple
--   streams that use the same playback configuration.
--   
--   <a>$sel:httpStatus:CreatePrefetchScheduleResponse'</a>,
--   <a>createPrefetchScheduleResponse_httpStatus</a> - The response's http
--   status code.
newCreatePrefetchScheduleResponse :: Int -> CreatePrefetchScheduleResponse

-- | The Amazon Resource Name (ARN) of the prefetch schedule.
createPrefetchScheduleResponse_arn :: Lens' CreatePrefetchScheduleResponse (Maybe Text)

-- | The name of the playback configuration to create the prefetch schedule
--   for.
createPrefetchScheduleResponse_playbackConfigurationName :: Lens' CreatePrefetchScheduleResponse (Maybe Text)

-- | A complex type that contains settings for prefetch retrieval from the
--   ad decision server (ADS).
createPrefetchScheduleResponse_retrieval :: Lens' CreatePrefetchScheduleResponse (Maybe PrefetchRetrieval)

-- | The name of the prefetch schedule. The name must be unique among all
--   prefetch schedules that are associated with the specified playback
--   configuration.
createPrefetchScheduleResponse_name :: Lens' CreatePrefetchScheduleResponse (Maybe Text)

-- | Consumption settings determine how, and when, MediaTailor places the
--   prefetched ads into ad breaks. Ad consumption occurs within a span of
--   time that you define, called a <i>consumption window</i>. You can
--   designate which ad breaks that MediaTailor fills with prefetch ads by
--   setting avail matching criteria.
createPrefetchScheduleResponse_consumption :: Lens' CreatePrefetchScheduleResponse (Maybe PrefetchConsumption)

-- | An optional stream identifier that you can specify in order to
--   prefetch for multiple streams that use the same playback
--   configuration.
createPrefetchScheduleResponse_streamId :: Lens' CreatePrefetchScheduleResponse (Maybe Text)

-- | The response's http status code.
createPrefetchScheduleResponse_httpStatus :: Lens' CreatePrefetchScheduleResponse Int
instance GHC.Generics.Generic Network.AWS.MediaTailor.CreatePrefetchSchedule.CreatePrefetchSchedule
instance GHC.Show.Show Network.AWS.MediaTailor.CreatePrefetchSchedule.CreatePrefetchSchedule
instance GHC.Read.Read Network.AWS.MediaTailor.CreatePrefetchSchedule.CreatePrefetchSchedule
instance GHC.Classes.Eq Network.AWS.MediaTailor.CreatePrefetchSchedule.CreatePrefetchSchedule
instance GHC.Generics.Generic Network.AWS.MediaTailor.CreatePrefetchSchedule.CreatePrefetchScheduleResponse
instance GHC.Show.Show Network.AWS.MediaTailor.CreatePrefetchSchedule.CreatePrefetchScheduleResponse
instance GHC.Read.Read Network.AWS.MediaTailor.CreatePrefetchSchedule.CreatePrefetchScheduleResponse
instance GHC.Classes.Eq Network.AWS.MediaTailor.CreatePrefetchSchedule.CreatePrefetchScheduleResponse
instance Network.AWS.Types.AWSRequest Network.AWS.MediaTailor.CreatePrefetchSchedule.CreatePrefetchSchedule
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.CreatePrefetchSchedule.CreatePrefetchScheduleResponse
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.CreatePrefetchSchedule.CreatePrefetchSchedule
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.CreatePrefetchSchedule.CreatePrefetchSchedule
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.MediaTailor.CreatePrefetchSchedule.CreatePrefetchSchedule
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MediaTailor.CreatePrefetchSchedule.CreatePrefetchSchedule
instance Network.AWS.Data.Path.ToPath Network.AWS.MediaTailor.CreatePrefetchSchedule.CreatePrefetchSchedule
instance Network.AWS.Data.Query.ToQuery Network.AWS.MediaTailor.CreatePrefetchSchedule.CreatePrefetchSchedule


-- | Creates a channel.
module Network.AWS.MediaTailor.CreateChannel

-- | <i>See:</i> <a>newCreateChannel</a> smart constructor.
data CreateChannel
CreateChannel' :: Maybe SlateSource -> Maybe (HashMap Text Text) -> Text -> [RequestOutputItem] -> PlaybackMode -> CreateChannel

-- | The slate used to fill gaps between programs in the schedule. You must
--   configure filler slate if your channel uses a LINEAR PlaybackMode.
[$sel:fillerSlate:CreateChannel'] :: CreateChannel -> Maybe SlateSource

-- | The tags to assign to the channel.
[$sel:tags:CreateChannel'] :: CreateChannel -> Maybe (HashMap Text Text)

-- | The identifier for the channel you are working on.
[$sel:channelName:CreateChannel'] :: CreateChannel -> Text

-- | The channel's output properties.
[$sel:outputs:CreateChannel'] :: CreateChannel -> [RequestOutputItem]

-- | The type of playback mode to use for this channel.
--   
--   LINEAR - The programs in the schedule play once back-to-back in the
--   schedule.
--   
--   LOOP - The programs in the schedule play back-to-back in an endless
--   loop. When the last program in the schedule stops playing, playback
--   loops back to the first program in the schedule.
[$sel:playbackMode:CreateChannel'] :: CreateChannel -> PlaybackMode

-- | Create a value of <a>CreateChannel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fillerSlate:CreateChannel'</a>,
--   <a>createChannel_fillerSlate</a> - The slate used to fill gaps between
--   programs in the schedule. You must configure filler slate if your
--   channel uses a LINEAR PlaybackMode.
--   
--   <a>$sel:tags:CreateChannel'</a>, <a>createChannel_tags</a> - The tags
--   to assign to the channel.
--   
--   <a>$sel:channelName:CreateChannel'</a>,
--   <a>createChannel_channelName</a> - The identifier for the channel you
--   are working on.
--   
--   <a>$sel:outputs:CreateChannel'</a>, <a>createChannel_outputs</a> - The
--   channel's output properties.
--   
--   <a>$sel:playbackMode:CreateChannel'</a>,
--   <a>createChannel_playbackMode</a> - The type of playback mode to use
--   for this channel.
--   
--   LINEAR - The programs in the schedule play once back-to-back in the
--   schedule.
--   
--   LOOP - The programs in the schedule play back-to-back in an endless
--   loop. When the last program in the schedule stops playing, playback
--   loops back to the first program in the schedule.
newCreateChannel :: Text -> PlaybackMode -> CreateChannel

-- | The slate used to fill gaps between programs in the schedule. You must
--   configure filler slate if your channel uses a LINEAR PlaybackMode.
createChannel_fillerSlate :: Lens' CreateChannel (Maybe SlateSource)

-- | The tags to assign to the channel.
createChannel_tags :: Lens' CreateChannel (Maybe (HashMap Text Text))

-- | The identifier for the channel you are working on.
createChannel_channelName :: Lens' CreateChannel Text

-- | The channel's output properties.
createChannel_outputs :: Lens' CreateChannel [RequestOutputItem]

-- | The type of playback mode to use for this channel.
--   
--   LINEAR - The programs in the schedule play once back-to-back in the
--   schedule.
--   
--   LOOP - The programs in the schedule play back-to-back in an endless
--   loop. When the last program in the schedule stops playing, playback
--   loops back to the first program in the schedule.
createChannel_playbackMode :: Lens' CreateChannel PlaybackMode

-- | <i>See:</i> <a>newCreateChannelResponse</a> smart constructor.
data CreateChannelResponse
CreateChannelResponse' :: Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe [ResponseOutputItem] -> Maybe ChannelState -> Maybe SlateSource -> Maybe (HashMap Text Text) -> Int -> CreateChannelResponse

-- | The timestamp of when the channel was created.
[$sel:creationTime:CreateChannelResponse'] :: CreateChannelResponse -> Maybe POSIX

-- | The ARN of the channel.
[$sel:arn:CreateChannelResponse'] :: CreateChannelResponse -> Maybe Text

-- | The timestamp of when the channel was last modified.
[$sel:lastModifiedTime:CreateChannelResponse'] :: CreateChannelResponse -> Maybe POSIX

-- | The channel's playback mode.
[$sel:playbackMode:CreateChannelResponse'] :: CreateChannelResponse -> Maybe Text

-- | The name of the channel.
[$sel:channelName:CreateChannelResponse'] :: CreateChannelResponse -> Maybe Text

-- | The channel's output properties.
[$sel:outputs:CreateChannelResponse'] :: CreateChannelResponse -> Maybe [ResponseOutputItem]

-- | Indicates whether the channel is in a running state or not.
[$sel:channelState:CreateChannelResponse'] :: CreateChannelResponse -> Maybe ChannelState

-- | Contains information about the slate used to fill gaps between
--   programs in the schedule.
[$sel:fillerSlate:CreateChannelResponse'] :: CreateChannelResponse -> Maybe SlateSource

-- | The tags assigned to the channel.
[$sel:tags:CreateChannelResponse'] :: CreateChannelResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:CreateChannelResponse'] :: CreateChannelResponse -> Int

-- | Create a value of <a>CreateChannelResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:CreateChannelResponse'</a>,
--   <a>createChannelResponse_creationTime</a> - The timestamp of when the
--   channel was created.
--   
--   <a>$sel:arn:CreateChannelResponse'</a>,
--   <a>createChannelResponse_arn</a> - The ARN of the channel.
--   
--   <a>$sel:lastModifiedTime:CreateChannelResponse'</a>,
--   <a>createChannelResponse_lastModifiedTime</a> - The timestamp of when
--   the channel was last modified.
--   
--   <a>$sel:playbackMode:CreateChannel'</a>,
--   <a>createChannelResponse_playbackMode</a> - The channel's playback
--   mode.
--   
--   <a>$sel:channelName:CreateChannel'</a>,
--   <a>createChannelResponse_channelName</a> - The name of the channel.
--   
--   <a>$sel:outputs:CreateChannel'</a>,
--   <a>createChannelResponse_outputs</a> - The channel's output
--   properties.
--   
--   <a>$sel:channelState:CreateChannelResponse'</a>,
--   <a>createChannelResponse_channelState</a> - Indicates whether the
--   channel is in a running state or not.
--   
--   <a>$sel:fillerSlate:CreateChannel'</a>,
--   <a>createChannelResponse_fillerSlate</a> - Contains information about
--   the slate used to fill gaps between programs in the schedule.
--   
--   <a>$sel:tags:CreateChannel'</a>, <a>createChannelResponse_tags</a> -
--   The tags assigned to the channel.
--   
--   <a>$sel:httpStatus:CreateChannelResponse'</a>,
--   <a>createChannelResponse_httpStatus</a> - The response's http status
--   code.
newCreateChannelResponse :: Int -> CreateChannelResponse

-- | The timestamp of when the channel was created.
createChannelResponse_creationTime :: Lens' CreateChannelResponse (Maybe UTCTime)

-- | The ARN of the channel.
createChannelResponse_arn :: Lens' CreateChannelResponse (Maybe Text)

-- | The timestamp of when the channel was last modified.
createChannelResponse_lastModifiedTime :: Lens' CreateChannelResponse (Maybe UTCTime)

-- | The channel's playback mode.
createChannelResponse_playbackMode :: Lens' CreateChannelResponse (Maybe Text)

-- | The name of the channel.
createChannelResponse_channelName :: Lens' CreateChannelResponse (Maybe Text)

-- | The channel's output properties.
createChannelResponse_outputs :: Lens' CreateChannelResponse (Maybe [ResponseOutputItem])

-- | Indicates whether the channel is in a running state or not.
createChannelResponse_channelState :: Lens' CreateChannelResponse (Maybe ChannelState)

-- | Contains information about the slate used to fill gaps between
--   programs in the schedule.
createChannelResponse_fillerSlate :: Lens' CreateChannelResponse (Maybe SlateSource)

-- | The tags assigned to the channel.
createChannelResponse_tags :: Lens' CreateChannelResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
createChannelResponse_httpStatus :: Lens' CreateChannelResponse Int
instance GHC.Generics.Generic Network.AWS.MediaTailor.CreateChannel.CreateChannel
instance GHC.Show.Show Network.AWS.MediaTailor.CreateChannel.CreateChannel
instance GHC.Read.Read Network.AWS.MediaTailor.CreateChannel.CreateChannel
instance GHC.Classes.Eq Network.AWS.MediaTailor.CreateChannel.CreateChannel
instance GHC.Generics.Generic Network.AWS.MediaTailor.CreateChannel.CreateChannelResponse
instance GHC.Show.Show Network.AWS.MediaTailor.CreateChannel.CreateChannelResponse
instance GHC.Read.Read Network.AWS.MediaTailor.CreateChannel.CreateChannelResponse
instance GHC.Classes.Eq Network.AWS.MediaTailor.CreateChannel.CreateChannelResponse
instance Network.AWS.Types.AWSRequest Network.AWS.MediaTailor.CreateChannel.CreateChannel
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.CreateChannel.CreateChannelResponse
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.CreateChannel.CreateChannel
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.CreateChannel.CreateChannel
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.MediaTailor.CreateChannel.CreateChannel
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MediaTailor.CreateChannel.CreateChannel
instance Network.AWS.Data.Path.ToPath Network.AWS.MediaTailor.CreateChannel.CreateChannel
instance Network.AWS.Data.Query.ToQuery Network.AWS.MediaTailor.CreateChannel.CreateChannel


-- | Configures Amazon CloudWatch log settings for a playback
--   configuration.
module Network.AWS.MediaTailor.ConfigureLogsForPlaybackConfiguration

-- | Configures Amazon CloudWatch log settings for a playback
--   configuration.
--   
--   <i>See:</i> <a>newConfigureLogsForPlaybackConfiguration</a> smart
--   constructor.
data ConfigureLogsForPlaybackConfiguration
ConfigureLogsForPlaybackConfiguration' :: Int -> Text -> ConfigureLogsForPlaybackConfiguration

-- | The percentage of session logs that MediaTailor sends to your
--   Cloudwatch Logs account. For example, if your playback configuration
--   has 1000 sessions and percentEnabled is set to 60, MediaTailor sends
--   logs for 600 of the sessions to CloudWatch Logs. MediaTailor decides
--   at random which of the playback configuration sessions to send logs
--   for. If you want to view logs for a specific session, you can use the
--   <a>debug log mode</a>.
--   
--   Valid values: 0 - 100
[$sel:percentEnabled:ConfigureLogsForPlaybackConfiguration'] :: ConfigureLogsForPlaybackConfiguration -> Int

-- | The name of the playback configuration.
[$sel:playbackConfigurationName:ConfigureLogsForPlaybackConfiguration'] :: ConfigureLogsForPlaybackConfiguration -> Text

-- | Create a value of <a>ConfigureLogsForPlaybackConfiguration</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:percentEnabled:ConfigureLogsForPlaybackConfiguration'</a>,
--   <a>configureLogsForPlaybackConfiguration_percentEnabled</a> - The
--   percentage of session logs that MediaTailor sends to your Cloudwatch
--   Logs account. For example, if your playback configuration has 1000
--   sessions and percentEnabled is set to 60, MediaTailor sends logs for
--   600 of the sessions to CloudWatch Logs. MediaTailor decides at random
--   which of the playback configuration sessions to send logs for. If you
--   want to view logs for a specific session, you can use the <a>debug log
--   mode</a>.
--   
--   Valid values: 0 - 100
--   
--   
--   <a>$sel:playbackConfigurationName:ConfigureLogsForPlaybackConfiguration'</a>,
--   <a>configureLogsForPlaybackConfiguration_playbackConfigurationName</a>
--   - The name of the playback configuration.
newConfigureLogsForPlaybackConfiguration :: Int -> Text -> ConfigureLogsForPlaybackConfiguration

-- | The percentage of session logs that MediaTailor sends to your
--   Cloudwatch Logs account. For example, if your playback configuration
--   has 1000 sessions and percentEnabled is set to 60, MediaTailor sends
--   logs for 600 of the sessions to CloudWatch Logs. MediaTailor decides
--   at random which of the playback configuration sessions to send logs
--   for. If you want to view logs for a specific session, you can use the
--   <a>debug log mode</a>.
--   
--   Valid values: 0 - 100
configureLogsForPlaybackConfiguration_percentEnabled :: Lens' ConfigureLogsForPlaybackConfiguration Int

-- | The name of the playback configuration.
configureLogsForPlaybackConfiguration_playbackConfigurationName :: Lens' ConfigureLogsForPlaybackConfiguration Text

-- | <i>See:</i> <a>newConfigureLogsForPlaybackConfigurationResponse</a>
--   smart constructor.
data ConfigureLogsForPlaybackConfigurationResponse
ConfigureLogsForPlaybackConfigurationResponse' :: Maybe Text -> Maybe Int -> Int -> ConfigureLogsForPlaybackConfigurationResponse

-- | The name of the playback configuration.
[$sel:playbackConfigurationName:ConfigureLogsForPlaybackConfigurationResponse'] :: ConfigureLogsForPlaybackConfigurationResponse -> Maybe Text

-- | The percentage of session logs that MediaTailor sends to your
--   Cloudwatch Logs account.
[$sel:percentEnabled:ConfigureLogsForPlaybackConfigurationResponse'] :: ConfigureLogsForPlaybackConfigurationResponse -> Maybe Int

-- | The response's http status code.
[$sel:httpStatus:ConfigureLogsForPlaybackConfigurationResponse'] :: ConfigureLogsForPlaybackConfigurationResponse -> Int

-- | Create a value of <a>ConfigureLogsForPlaybackConfigurationResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:playbackConfigurationName:ConfigureLogsForPlaybackConfiguration'</a>,
--   <a>configureLogsForPlaybackConfigurationResponse_playbackConfigurationName</a>
--   - The name of the playback configuration.
--   
--   <a>$sel:percentEnabled:ConfigureLogsForPlaybackConfiguration'</a>,
--   <a>configureLogsForPlaybackConfigurationResponse_percentEnabled</a> -
--   The percentage of session logs that MediaTailor sends to your
--   Cloudwatch Logs account.
--   
--   <a>$sel:httpStatus:ConfigureLogsForPlaybackConfigurationResponse'</a>,
--   <a>configureLogsForPlaybackConfigurationResponse_httpStatus</a> - The
--   response's http status code.
newConfigureLogsForPlaybackConfigurationResponse :: Int -> ConfigureLogsForPlaybackConfigurationResponse

-- | The name of the playback configuration.
configureLogsForPlaybackConfigurationResponse_playbackConfigurationName :: Lens' ConfigureLogsForPlaybackConfigurationResponse (Maybe Text)

-- | The percentage of session logs that MediaTailor sends to your
--   Cloudwatch Logs account.
configureLogsForPlaybackConfigurationResponse_percentEnabled :: Lens' ConfigureLogsForPlaybackConfigurationResponse (Maybe Int)

-- | The response's http status code.
configureLogsForPlaybackConfigurationResponse_httpStatus :: Lens' ConfigureLogsForPlaybackConfigurationResponse Int
instance GHC.Generics.Generic Network.AWS.MediaTailor.ConfigureLogsForPlaybackConfiguration.ConfigureLogsForPlaybackConfiguration
instance GHC.Show.Show Network.AWS.MediaTailor.ConfigureLogsForPlaybackConfiguration.ConfigureLogsForPlaybackConfiguration
instance GHC.Read.Read Network.AWS.MediaTailor.ConfigureLogsForPlaybackConfiguration.ConfigureLogsForPlaybackConfiguration
instance GHC.Classes.Eq Network.AWS.MediaTailor.ConfigureLogsForPlaybackConfiguration.ConfigureLogsForPlaybackConfiguration
instance GHC.Generics.Generic Network.AWS.MediaTailor.ConfigureLogsForPlaybackConfiguration.ConfigureLogsForPlaybackConfigurationResponse
instance GHC.Show.Show Network.AWS.MediaTailor.ConfigureLogsForPlaybackConfiguration.ConfigureLogsForPlaybackConfigurationResponse
instance GHC.Read.Read Network.AWS.MediaTailor.ConfigureLogsForPlaybackConfiguration.ConfigureLogsForPlaybackConfigurationResponse
instance GHC.Classes.Eq Network.AWS.MediaTailor.ConfigureLogsForPlaybackConfiguration.ConfigureLogsForPlaybackConfigurationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.MediaTailor.ConfigureLogsForPlaybackConfiguration.ConfigureLogsForPlaybackConfiguration
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.ConfigureLogsForPlaybackConfiguration.ConfigureLogsForPlaybackConfigurationResponse
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.ConfigureLogsForPlaybackConfiguration.ConfigureLogsForPlaybackConfiguration
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.ConfigureLogsForPlaybackConfiguration.ConfigureLogsForPlaybackConfiguration
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.MediaTailor.ConfigureLogsForPlaybackConfiguration.ConfigureLogsForPlaybackConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MediaTailor.ConfigureLogsForPlaybackConfiguration.ConfigureLogsForPlaybackConfiguration
instance Network.AWS.Data.Path.ToPath Network.AWS.MediaTailor.ConfigureLogsForPlaybackConfiguration.ConfigureLogsForPlaybackConfiguration
instance Network.AWS.Data.Query.ToQuery Network.AWS.MediaTailor.ConfigureLogsForPlaybackConfiguration.ConfigureLogsForPlaybackConfiguration


-- | Removes tags from the specified playback configuration resource. You
--   can specify one or more tags to remove.
module Network.AWS.MediaTailor.UntagResource

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | The Amazon Resource Name (ARN) for the playback configuration. You can
--   get this from the response to any playback configuration request.
[$sel:resourceArn:UntagResource'] :: UntagResource -> Text

-- | A comma-separated list of the tag keys to remove from the playback
--   configuration.
[$sel:tagKeys:UntagResource'] :: UntagResource -> [Text]

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The Amazon Resource Name (ARN) for
--   the playback configuration. You can get this from the response to any
--   playback configuration request.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - A
--   comma-separated list of the tag keys to remove from the playback
--   configuration.
newUntagResource :: Text -> UntagResource

-- | The Amazon Resource Name (ARN) for the playback configuration. You can
--   get this from the response to any playback configuration request.
untagResource_resourceArn :: Lens' UntagResource Text

-- | A comma-separated list of the tag keys to remove from the playback
--   configuration.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUntagResourceResponse :: UntagResourceResponse
instance GHC.Generics.Generic Network.AWS.MediaTailor.UntagResource.UntagResource
instance GHC.Show.Show Network.AWS.MediaTailor.UntagResource.UntagResource
instance GHC.Read.Read Network.AWS.MediaTailor.UntagResource.UntagResource
instance GHC.Classes.Eq Network.AWS.MediaTailor.UntagResource.UntagResource
instance GHC.Generics.Generic Network.AWS.MediaTailor.UntagResource.UntagResourceResponse
instance GHC.Show.Show Network.AWS.MediaTailor.UntagResource.UntagResourceResponse
instance GHC.Read.Read Network.AWS.MediaTailor.UntagResource.UntagResourceResponse
instance GHC.Classes.Eq Network.AWS.MediaTailor.UntagResource.UntagResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.MediaTailor.UntagResource.UntagResource
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.UntagResource.UntagResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.UntagResource.UntagResource
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.UntagResource.UntagResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.MediaTailor.UntagResource.UntagResource
instance Network.AWS.Data.Path.ToPath Network.AWS.MediaTailor.UntagResource.UntagResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.MediaTailor.UntagResource.UntagResource


-- | Updates an existing channel.
module Network.AWS.MediaTailor.UpdateChannel

-- | <i>See:</i> <a>newUpdateChannel</a> smart constructor.
data UpdateChannel
UpdateChannel' :: Text -> [RequestOutputItem] -> UpdateChannel

-- | The identifier for the channel you are working on.
[$sel:channelName:UpdateChannel'] :: UpdateChannel -> Text

-- | The channel's output properties.
[$sel:outputs:UpdateChannel'] :: UpdateChannel -> [RequestOutputItem]

-- | Create a value of <a>UpdateChannel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelName:UpdateChannel'</a>,
--   <a>updateChannel_channelName</a> - The identifier for the channel you
--   are working on.
--   
--   <a>$sel:outputs:UpdateChannel'</a>, <a>updateChannel_outputs</a> - The
--   channel's output properties.
newUpdateChannel :: Text -> UpdateChannel

-- | The identifier for the channel you are working on.
updateChannel_channelName :: Lens' UpdateChannel Text

-- | The channel's output properties.
updateChannel_outputs :: Lens' UpdateChannel [RequestOutputItem]

-- | <i>See:</i> <a>newUpdateChannelResponse</a> smart constructor.
data UpdateChannelResponse
UpdateChannelResponse' :: Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe [ResponseOutputItem] -> Maybe ChannelState -> Maybe SlateSource -> Maybe (HashMap Text Text) -> Int -> UpdateChannelResponse

-- | The timestamp of when the channel was created.
[$sel:creationTime:UpdateChannelResponse'] :: UpdateChannelResponse -> Maybe POSIX

-- | The ARN of the channel.
[$sel:arn:UpdateChannelResponse'] :: UpdateChannelResponse -> Maybe Text

-- | The timestamp of when the channel was last modified.
[$sel:lastModifiedTime:UpdateChannelResponse'] :: UpdateChannelResponse -> Maybe POSIX

-- | The channel's playback mode.
[$sel:playbackMode:UpdateChannelResponse'] :: UpdateChannelResponse -> Maybe Text

-- | The name of the channel.
[$sel:channelName:UpdateChannelResponse'] :: UpdateChannelResponse -> Maybe Text

-- | The channel's output properties.
[$sel:outputs:UpdateChannelResponse'] :: UpdateChannelResponse -> Maybe [ResponseOutputItem]

-- | Indicates whether the channel is in a running state or not.
[$sel:channelState:UpdateChannelResponse'] :: UpdateChannelResponse -> Maybe ChannelState

-- | Contains information about the slate used to fill gaps between
--   programs in the schedule.
[$sel:fillerSlate:UpdateChannelResponse'] :: UpdateChannelResponse -> Maybe SlateSource

-- | The tags assigned to the channel.
[$sel:tags:UpdateChannelResponse'] :: UpdateChannelResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:UpdateChannelResponse'] :: UpdateChannelResponse -> Int

-- | Create a value of <a>UpdateChannelResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:UpdateChannelResponse'</a>,
--   <a>updateChannelResponse_creationTime</a> - The timestamp of when the
--   channel was created.
--   
--   <a>$sel:arn:UpdateChannelResponse'</a>,
--   <a>updateChannelResponse_arn</a> - The ARN of the channel.
--   
--   <a>$sel:lastModifiedTime:UpdateChannelResponse'</a>,
--   <a>updateChannelResponse_lastModifiedTime</a> - The timestamp of when
--   the channel was last modified.
--   
--   <a>$sel:playbackMode:UpdateChannelResponse'</a>,
--   <a>updateChannelResponse_playbackMode</a> - The channel's playback
--   mode.
--   
--   <a>$sel:channelName:UpdateChannel'</a>,
--   <a>updateChannelResponse_channelName</a> - The name of the channel.
--   
--   <a>$sel:outputs:UpdateChannel'</a>,
--   <a>updateChannelResponse_outputs</a> - The channel's output
--   properties.
--   
--   <a>$sel:channelState:UpdateChannelResponse'</a>,
--   <a>updateChannelResponse_channelState</a> - Indicates whether the
--   channel is in a running state or not.
--   
--   <a>$sel:fillerSlate:UpdateChannelResponse'</a>,
--   <a>updateChannelResponse_fillerSlate</a> - Contains information about
--   the slate used to fill gaps between programs in the schedule.
--   
--   <a>$sel:tags:UpdateChannelResponse'</a>,
--   <a>updateChannelResponse_tags</a> - The tags assigned to the channel.
--   
--   <a>$sel:httpStatus:UpdateChannelResponse'</a>,
--   <a>updateChannelResponse_httpStatus</a> - The response's http status
--   code.
newUpdateChannelResponse :: Int -> UpdateChannelResponse

-- | The timestamp of when the channel was created.
updateChannelResponse_creationTime :: Lens' UpdateChannelResponse (Maybe UTCTime)

-- | The ARN of the channel.
updateChannelResponse_arn :: Lens' UpdateChannelResponse (Maybe Text)

-- | The timestamp of when the channel was last modified.
updateChannelResponse_lastModifiedTime :: Lens' UpdateChannelResponse (Maybe UTCTime)

-- | The channel's playback mode.
updateChannelResponse_playbackMode :: Lens' UpdateChannelResponse (Maybe Text)

-- | The name of the channel.
updateChannelResponse_channelName :: Lens' UpdateChannelResponse (Maybe Text)

-- | The channel's output properties.
updateChannelResponse_outputs :: Lens' UpdateChannelResponse (Maybe [ResponseOutputItem])

-- | Indicates whether the channel is in a running state or not.
updateChannelResponse_channelState :: Lens' UpdateChannelResponse (Maybe ChannelState)

-- | Contains information about the slate used to fill gaps between
--   programs in the schedule.
updateChannelResponse_fillerSlate :: Lens' UpdateChannelResponse (Maybe SlateSource)

-- | The tags assigned to the channel.
updateChannelResponse_tags :: Lens' UpdateChannelResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
updateChannelResponse_httpStatus :: Lens' UpdateChannelResponse Int
instance GHC.Generics.Generic Network.AWS.MediaTailor.UpdateChannel.UpdateChannel
instance GHC.Show.Show Network.AWS.MediaTailor.UpdateChannel.UpdateChannel
instance GHC.Read.Read Network.AWS.MediaTailor.UpdateChannel.UpdateChannel
instance GHC.Classes.Eq Network.AWS.MediaTailor.UpdateChannel.UpdateChannel
instance GHC.Generics.Generic Network.AWS.MediaTailor.UpdateChannel.UpdateChannelResponse
instance GHC.Show.Show Network.AWS.MediaTailor.UpdateChannel.UpdateChannelResponse
instance GHC.Read.Read Network.AWS.MediaTailor.UpdateChannel.UpdateChannelResponse
instance GHC.Classes.Eq Network.AWS.MediaTailor.UpdateChannel.UpdateChannelResponse
instance Network.AWS.Types.AWSRequest Network.AWS.MediaTailor.UpdateChannel.UpdateChannel
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.UpdateChannel.UpdateChannelResponse
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.UpdateChannel.UpdateChannel
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.UpdateChannel.UpdateChannel
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.MediaTailor.UpdateChannel.UpdateChannel
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MediaTailor.UpdateChannel.UpdateChannel
instance Network.AWS.Data.Path.ToPath Network.AWS.MediaTailor.UpdateChannel.UpdateChannel
instance Network.AWS.Data.Query.ToQuery Network.AWS.MediaTailor.UpdateChannel.UpdateChannel


-- | Updates a source location on a specific channel.
module Network.AWS.MediaTailor.UpdateSourceLocation

-- | <i>See:</i> <a>newUpdateSourceLocation</a> smart constructor.
data UpdateSourceLocation
UpdateSourceLocation' :: Maybe AccessConfiguration -> Maybe DefaultSegmentDeliveryConfiguration -> Text -> HttpConfiguration -> UpdateSourceLocation

-- | Access configuration parameters. Configures the type of authentication
--   used to access content from your source location.
[$sel:accessConfiguration:UpdateSourceLocation'] :: UpdateSourceLocation -> Maybe AccessConfiguration

-- | The optional configuration for the host server that serves segments.
[$sel:defaultSegmentDeliveryConfiguration:UpdateSourceLocation'] :: UpdateSourceLocation -> Maybe DefaultSegmentDeliveryConfiguration

-- | The identifier for the source location you are working on.
[$sel:sourceLocationName:UpdateSourceLocation'] :: UpdateSourceLocation -> Text

-- | The HTTP configuration for the source location.
[$sel:httpConfiguration:UpdateSourceLocation'] :: UpdateSourceLocation -> HttpConfiguration

-- | Create a value of <a>UpdateSourceLocation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accessConfiguration:UpdateSourceLocation'</a>,
--   <a>updateSourceLocation_accessConfiguration</a> - Access configuration
--   parameters. Configures the type of authentication used to access
--   content from your source location.
--   
--   <a>$sel:defaultSegmentDeliveryConfiguration:UpdateSourceLocation'</a>,
--   <a>updateSourceLocation_defaultSegmentDeliveryConfiguration</a> - The
--   optional configuration for the host server that serves segments.
--   
--   <a>$sel:sourceLocationName:UpdateSourceLocation'</a>,
--   <a>updateSourceLocation_sourceLocationName</a> - The identifier for
--   the source location you are working on.
--   
--   <a>$sel:httpConfiguration:UpdateSourceLocation'</a>,
--   <a>updateSourceLocation_httpConfiguration</a> - The HTTP configuration
--   for the source location.
newUpdateSourceLocation :: Text -> HttpConfiguration -> UpdateSourceLocation

-- | Access configuration parameters. Configures the type of authentication
--   used to access content from your source location.
updateSourceLocation_accessConfiguration :: Lens' UpdateSourceLocation (Maybe AccessConfiguration)

-- | The optional configuration for the host server that serves segments.
updateSourceLocation_defaultSegmentDeliveryConfiguration :: Lens' UpdateSourceLocation (Maybe DefaultSegmentDeliveryConfiguration)

-- | The identifier for the source location you are working on.
updateSourceLocation_sourceLocationName :: Lens' UpdateSourceLocation Text

-- | The HTTP configuration for the source location.
updateSourceLocation_httpConfiguration :: Lens' UpdateSourceLocation HttpConfiguration

-- | <i>See:</i> <a>newUpdateSourceLocationResponse</a> smart constructor.
data UpdateSourceLocationResponse
UpdateSourceLocationResponse' :: Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe HttpConfiguration -> Maybe POSIX -> Maybe AccessConfiguration -> Maybe DefaultSegmentDeliveryConfiguration -> Maybe (HashMap Text Text) -> Int -> UpdateSourceLocationResponse

-- | The timestamp that indicates when the source location was created.
[$sel:creationTime:UpdateSourceLocationResponse'] :: UpdateSourceLocationResponse -> Maybe POSIX

-- | The name of the source location.
[$sel:sourceLocationName:UpdateSourceLocationResponse'] :: UpdateSourceLocationResponse -> Maybe Text

-- | The ARN of the source location.
[$sel:arn:UpdateSourceLocationResponse'] :: UpdateSourceLocationResponse -> Maybe Text

-- | The HTTP package configuration settings for the source location.
[$sel:httpConfiguration:UpdateSourceLocationResponse'] :: UpdateSourceLocationResponse -> Maybe HttpConfiguration

-- | The timestamp that indicates when the source location was last
--   modified.
[$sel:lastModifiedTime:UpdateSourceLocationResponse'] :: UpdateSourceLocationResponse -> Maybe POSIX

-- | The access configuration for the source location.
[$sel:accessConfiguration:UpdateSourceLocationResponse'] :: UpdateSourceLocationResponse -> Maybe AccessConfiguration

-- | The default segment delivery configuration settings.
[$sel:defaultSegmentDeliveryConfiguration:UpdateSourceLocationResponse'] :: UpdateSourceLocationResponse -> Maybe DefaultSegmentDeliveryConfiguration

-- | The tags assigned to the source location.
[$sel:tags:UpdateSourceLocationResponse'] :: UpdateSourceLocationResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:UpdateSourceLocationResponse'] :: UpdateSourceLocationResponse -> Int

-- | Create a value of <a>UpdateSourceLocationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:UpdateSourceLocationResponse'</a>,
--   <a>updateSourceLocationResponse_creationTime</a> - The timestamp that
--   indicates when the source location was created.
--   
--   <a>$sel:sourceLocationName:UpdateSourceLocation'</a>,
--   <a>updateSourceLocationResponse_sourceLocationName</a> - The name of
--   the source location.
--   
--   <a>$sel:arn:UpdateSourceLocationResponse'</a>,
--   <a>updateSourceLocationResponse_arn</a> - The ARN of the source
--   location.
--   
--   <a>$sel:httpConfiguration:UpdateSourceLocation'</a>,
--   <a>updateSourceLocationResponse_httpConfiguration</a> - The HTTP
--   package configuration settings for the source location.
--   
--   <a>$sel:lastModifiedTime:UpdateSourceLocationResponse'</a>,
--   <a>updateSourceLocationResponse_lastModifiedTime</a> - The timestamp
--   that indicates when the source location was last modified.
--   
--   <a>$sel:accessConfiguration:UpdateSourceLocation'</a>,
--   <a>updateSourceLocationResponse_accessConfiguration</a> - The access
--   configuration for the source location.
--   
--   <a>$sel:defaultSegmentDeliveryConfiguration:UpdateSourceLocation'</a>,
--   <a>updateSourceLocationResponse_defaultSegmentDeliveryConfiguration</a>
--   - The default segment delivery configuration settings.
--   
--   <a>$sel:tags:UpdateSourceLocationResponse'</a>,
--   <a>updateSourceLocationResponse_tags</a> - The tags assigned to the
--   source location.
--   
--   <a>$sel:httpStatus:UpdateSourceLocationResponse'</a>,
--   <a>updateSourceLocationResponse_httpStatus</a> - The response's http
--   status code.
newUpdateSourceLocationResponse :: Int -> UpdateSourceLocationResponse

-- | The timestamp that indicates when the source location was created.
updateSourceLocationResponse_creationTime :: Lens' UpdateSourceLocationResponse (Maybe UTCTime)

-- | The name of the source location.
updateSourceLocationResponse_sourceLocationName :: Lens' UpdateSourceLocationResponse (Maybe Text)

-- | The ARN of the source location.
updateSourceLocationResponse_arn :: Lens' UpdateSourceLocationResponse (Maybe Text)

-- | The HTTP package configuration settings for the source location.
updateSourceLocationResponse_httpConfiguration :: Lens' UpdateSourceLocationResponse (Maybe HttpConfiguration)

-- | The timestamp that indicates when the source location was last
--   modified.
updateSourceLocationResponse_lastModifiedTime :: Lens' UpdateSourceLocationResponse (Maybe UTCTime)

-- | The access configuration for the source location.
updateSourceLocationResponse_accessConfiguration :: Lens' UpdateSourceLocationResponse (Maybe AccessConfiguration)

-- | The default segment delivery configuration settings.
updateSourceLocationResponse_defaultSegmentDeliveryConfiguration :: Lens' UpdateSourceLocationResponse (Maybe DefaultSegmentDeliveryConfiguration)

-- | The tags assigned to the source location.
updateSourceLocationResponse_tags :: Lens' UpdateSourceLocationResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
updateSourceLocationResponse_httpStatus :: Lens' UpdateSourceLocationResponse Int
instance GHC.Generics.Generic Network.AWS.MediaTailor.UpdateSourceLocation.UpdateSourceLocation
instance GHC.Show.Show Network.AWS.MediaTailor.UpdateSourceLocation.UpdateSourceLocation
instance GHC.Read.Read Network.AWS.MediaTailor.UpdateSourceLocation.UpdateSourceLocation
instance GHC.Classes.Eq Network.AWS.MediaTailor.UpdateSourceLocation.UpdateSourceLocation
instance GHC.Generics.Generic Network.AWS.MediaTailor.UpdateSourceLocation.UpdateSourceLocationResponse
instance GHC.Show.Show Network.AWS.MediaTailor.UpdateSourceLocation.UpdateSourceLocationResponse
instance GHC.Read.Read Network.AWS.MediaTailor.UpdateSourceLocation.UpdateSourceLocationResponse
instance GHC.Classes.Eq Network.AWS.MediaTailor.UpdateSourceLocation.UpdateSourceLocationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.MediaTailor.UpdateSourceLocation.UpdateSourceLocation
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.UpdateSourceLocation.UpdateSourceLocationResponse
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.UpdateSourceLocation.UpdateSourceLocation
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.UpdateSourceLocation.UpdateSourceLocation
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.MediaTailor.UpdateSourceLocation.UpdateSourceLocation
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MediaTailor.UpdateSourceLocation.UpdateSourceLocation
instance Network.AWS.Data.Path.ToPath Network.AWS.MediaTailor.UpdateSourceLocation.UpdateSourceLocation
instance Network.AWS.Data.Query.ToQuery Network.AWS.MediaTailor.UpdateSourceLocation.UpdateSourceLocation


-- | Updates a specific VOD source in a specific source location.
module Network.AWS.MediaTailor.UpdateVodSource

-- | <i>See:</i> <a>newUpdateVodSource</a> smart constructor.
data UpdateVodSource
UpdateVodSource' :: Text -> Text -> [HttpPackageConfiguration] -> UpdateVodSource

-- | The identifier for the source location you are working on.
[$sel:sourceLocationName:UpdateVodSource'] :: UpdateVodSource -> Text

-- | The identifier for the VOD source you are working on.
[$sel:vodSourceName:UpdateVodSource'] :: UpdateVodSource -> Text

-- | An array of HTTP package configurations for the VOD source on this
--   account.
[$sel:httpPackageConfigurations:UpdateVodSource'] :: UpdateVodSource -> [HttpPackageConfiguration]

-- | Create a value of <a>UpdateVodSource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceLocationName:UpdateVodSource'</a>,
--   <a>updateVodSource_sourceLocationName</a> - The identifier for the
--   source location you are working on.
--   
--   <a>$sel:vodSourceName:UpdateVodSource'</a>,
--   <a>updateVodSource_vodSourceName</a> - The identifier for the VOD
--   source you are working on.
--   
--   <a>$sel:httpPackageConfigurations:UpdateVodSource'</a>,
--   <a>updateVodSource_httpPackageConfigurations</a> - An array of HTTP
--   package configurations for the VOD source on this account.
newUpdateVodSource :: Text -> Text -> UpdateVodSource

-- | The identifier for the source location you are working on.
updateVodSource_sourceLocationName :: Lens' UpdateVodSource Text

-- | The identifier for the VOD source you are working on.
updateVodSource_vodSourceName :: Lens' UpdateVodSource Text

-- | An array of HTTP package configurations for the VOD source on this
--   account.
updateVodSource_httpPackageConfigurations :: Lens' UpdateVodSource [HttpPackageConfiguration]

-- | <i>See:</i> <a>newUpdateVodSourceResponse</a> smart constructor.
data UpdateVodSourceResponse
UpdateVodSourceResponse' :: Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe [HttpPackageConfiguration] -> Maybe Text -> Maybe (HashMap Text Text) -> Int -> UpdateVodSourceResponse

-- | The timestamp that indicates when the VOD source was created.
[$sel:creationTime:UpdateVodSourceResponse'] :: UpdateVodSourceResponse -> Maybe POSIX

-- | The name of the source location associated with the VOD source.
[$sel:sourceLocationName:UpdateVodSourceResponse'] :: UpdateVodSourceResponse -> Maybe Text

-- | The ARN of the VOD source.
[$sel:arn:UpdateVodSourceResponse'] :: UpdateVodSourceResponse -> Maybe Text

-- | The ARN for the VOD source.
[$sel:lastModifiedTime:UpdateVodSourceResponse'] :: UpdateVodSourceResponse -> Maybe POSIX

-- | The HTTP package configurations.
[$sel:httpPackageConfigurations:UpdateVodSourceResponse'] :: UpdateVodSourceResponse -> Maybe [HttpPackageConfiguration]

-- | The name of the VOD source.
[$sel:vodSourceName:UpdateVodSourceResponse'] :: UpdateVodSourceResponse -> Maybe Text

-- | The tags assigned to the VOD source.
[$sel:tags:UpdateVodSourceResponse'] :: UpdateVodSourceResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:UpdateVodSourceResponse'] :: UpdateVodSourceResponse -> Int

-- | Create a value of <a>UpdateVodSourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:UpdateVodSourceResponse'</a>,
--   <a>updateVodSourceResponse_creationTime</a> - The timestamp that
--   indicates when the VOD source was created.
--   
--   <a>$sel:sourceLocationName:UpdateVodSource'</a>,
--   <a>updateVodSourceResponse_sourceLocationName</a> - The name of the
--   source location associated with the VOD source.
--   
--   <a>$sel:arn:UpdateVodSourceResponse'</a>,
--   <a>updateVodSourceResponse_arn</a> - The ARN of the VOD source.
--   
--   <a>$sel:lastModifiedTime:UpdateVodSourceResponse'</a>,
--   <a>updateVodSourceResponse_lastModifiedTime</a> - The ARN for the VOD
--   source.
--   
--   <a>$sel:httpPackageConfigurations:UpdateVodSource'</a>,
--   <a>updateVodSourceResponse_httpPackageConfigurations</a> - The HTTP
--   package configurations.
--   
--   <a>$sel:vodSourceName:UpdateVodSource'</a>,
--   <a>updateVodSourceResponse_vodSourceName</a> - The name of the VOD
--   source.
--   
--   <a>$sel:tags:UpdateVodSourceResponse'</a>,
--   <a>updateVodSourceResponse_tags</a> - The tags assigned to the VOD
--   source.
--   
--   <a>$sel:httpStatus:UpdateVodSourceResponse'</a>,
--   <a>updateVodSourceResponse_httpStatus</a> - The response's http status
--   code.
newUpdateVodSourceResponse :: Int -> UpdateVodSourceResponse

-- | The timestamp that indicates when the VOD source was created.
updateVodSourceResponse_creationTime :: Lens' UpdateVodSourceResponse (Maybe UTCTime)

-- | The name of the source location associated with the VOD source.
updateVodSourceResponse_sourceLocationName :: Lens' UpdateVodSourceResponse (Maybe Text)

-- | The ARN of the VOD source.
updateVodSourceResponse_arn :: Lens' UpdateVodSourceResponse (Maybe Text)

-- | The ARN for the VOD source.
updateVodSourceResponse_lastModifiedTime :: Lens' UpdateVodSourceResponse (Maybe UTCTime)

-- | The HTTP package configurations.
updateVodSourceResponse_httpPackageConfigurations :: Lens' UpdateVodSourceResponse (Maybe [HttpPackageConfiguration])

-- | The name of the VOD source.
updateVodSourceResponse_vodSourceName :: Lens' UpdateVodSourceResponse (Maybe Text)

-- | The tags assigned to the VOD source.
updateVodSourceResponse_tags :: Lens' UpdateVodSourceResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
updateVodSourceResponse_httpStatus :: Lens' UpdateVodSourceResponse Int
instance GHC.Generics.Generic Network.AWS.MediaTailor.UpdateVodSource.UpdateVodSource
instance GHC.Show.Show Network.AWS.MediaTailor.UpdateVodSource.UpdateVodSource
instance GHC.Read.Read Network.AWS.MediaTailor.UpdateVodSource.UpdateVodSource
instance GHC.Classes.Eq Network.AWS.MediaTailor.UpdateVodSource.UpdateVodSource
instance GHC.Generics.Generic Network.AWS.MediaTailor.UpdateVodSource.UpdateVodSourceResponse
instance GHC.Show.Show Network.AWS.MediaTailor.UpdateVodSource.UpdateVodSourceResponse
instance GHC.Read.Read Network.AWS.MediaTailor.UpdateVodSource.UpdateVodSourceResponse
instance GHC.Classes.Eq Network.AWS.MediaTailor.UpdateVodSource.UpdateVodSourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.MediaTailor.UpdateVodSource.UpdateVodSource
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.UpdateVodSource.UpdateVodSourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.MediaTailor.UpdateVodSource.UpdateVodSource
instance Control.DeepSeq.NFData Network.AWS.MediaTailor.UpdateVodSource.UpdateVodSource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.MediaTailor.UpdateVodSource.UpdateVodSource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MediaTailor.UpdateVodSource.UpdateVodSource
instance Network.AWS.Data.Path.ToPath Network.AWS.MediaTailor.UpdateVodSource.UpdateVodSource
instance Network.AWS.Data.Query.ToQuery Network.AWS.MediaTailor.UpdateVodSource.UpdateVodSource


module Network.AWS.MediaTailor.Lens

-- | Access configuration parameters. Configures the type of authentication
--   used to access content from your source location.
createSourceLocation_accessConfiguration :: Lens' CreateSourceLocation (Maybe AccessConfiguration)

-- | The optional configuration for the server that serves segments.
createSourceLocation_defaultSegmentDeliveryConfiguration :: Lens' CreateSourceLocation (Maybe DefaultSegmentDeliveryConfiguration)

-- | The tags to assign to the source location.
createSourceLocation_tags :: Lens' CreateSourceLocation (Maybe (HashMap Text Text))

-- | The identifier for the source location you are working on.
createSourceLocation_sourceLocationName :: Lens' CreateSourceLocation Text

-- | The source's HTTP package configurations.
createSourceLocation_httpConfiguration :: Lens' CreateSourceLocation HttpConfiguration

-- | The timestamp that indicates when the source location was created.
createSourceLocationResponse_creationTime :: Lens' CreateSourceLocationResponse (Maybe UTCTime)

-- | The name of the source location.
createSourceLocationResponse_sourceLocationName :: Lens' CreateSourceLocationResponse (Maybe Text)

-- | The ARN of the source location.
createSourceLocationResponse_arn :: Lens' CreateSourceLocationResponse (Maybe Text)

-- | The HTTP package configuration settings for the source location.
createSourceLocationResponse_httpConfiguration :: Lens' CreateSourceLocationResponse (Maybe HttpConfiguration)

-- | The timestamp that indicates when the source location was last
--   modified.
createSourceLocationResponse_lastModifiedTime :: Lens' CreateSourceLocationResponse (Maybe UTCTime)

-- | The access configuration for the source location.
createSourceLocationResponse_accessConfiguration :: Lens' CreateSourceLocationResponse (Maybe AccessConfiguration)

-- | The default segment delivery configuration settings.
createSourceLocationResponse_defaultSegmentDeliveryConfiguration :: Lens' CreateSourceLocationResponse (Maybe DefaultSegmentDeliveryConfiguration)

-- | The tags assigned to the source location.
createSourceLocationResponse_tags :: Lens' CreateSourceLocationResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
createSourceLocationResponse_httpStatus :: Lens' CreateSourceLocationResponse Int

-- | (Optional) If the playback configuration has more than MaxResults
--   prefetch schedules, use NextToken to get the second and subsequent
--   pages of results.
--   
--   For the first ListPrefetchSchedulesRequest request, omit this value.
--   
--   For the second and subsequent requests, get the value of NextToken
--   from the previous response and specify that value for NextToken in the
--   request.
--   
--   If the previous response didn't include a NextToken element, there are
--   no more prefetch schedules to get.
listPrefetchSchedules_nextToken :: Lens' ListPrefetchSchedules (Maybe Text)

-- | The maximum number of prefetch schedules that you want MediaTailor to
--   return in response to the current request. If the playback
--   configuration has more than MaxResults prefetch schedules, use the
--   value of NextToken in the response to get the next page of results.
listPrefetchSchedules_maxResults :: Lens' ListPrefetchSchedules (Maybe Natural)

-- | An optional filtering parameter whereby MediaTailor filters the
--   prefetch schedules to include only specific streams.
listPrefetchSchedules_streamId :: Lens' ListPrefetchSchedules (Maybe Text)

-- | The name of the playback configuration.
listPrefetchSchedules_playbackConfigurationName :: Lens' ListPrefetchSchedules Text

-- | Lists the prefetch schedules. An empty Items list doesn't mean there
--   aren't more items to fetch, just that that page was empty.
listPrefetchSchedulesResponse_items :: Lens' ListPrefetchSchedulesResponse (Maybe [PrefetchSchedule])

-- | The value that you will use forNextToken in the next
--   ListPrefetchSchedulesRequest request.
listPrefetchSchedulesResponse_nextToken :: Lens' ListPrefetchSchedulesResponse (Maybe Text)

-- | The response's http status code.
listPrefetchSchedulesResponse_httpStatus :: Lens' ListPrefetchSchedulesResponse Int

-- | The identifier for the playback configuration.
deletePrefetchSchedule_name :: Lens' DeletePrefetchSchedule Text

-- | The name of the playback configuration.
deletePrefetchSchedule_playbackConfigurationName :: Lens' DeletePrefetchSchedule Text

-- | The response's http status code.
deletePrefetchScheduleResponse_httpStatus :: Lens' DeletePrefetchScheduleResponse Int

-- | Pagination token from the GET list request. Use the token to fetch the
--   next page of results.
listAlerts_nextToken :: Lens' ListAlerts (Maybe Text)

-- | Upper bound on number of records to return. The maximum number of
--   results is 100.
listAlerts_maxResults :: Lens' ListAlerts (Maybe Natural)

-- | The Amazon Resource Name (ARN) of the resource.
listAlerts_resourceArn :: Lens' ListAlerts Text

-- | An array of alerts that are associated with this resource.
listAlertsResponse_items :: Lens' ListAlertsResponse (Maybe [Alert])

-- | Pagination token from the list request. Use the token to fetch the
--   next page of results.
listAlertsResponse_nextToken :: Lens' ListAlertsResponse (Maybe Text)

-- | The response's http status code.
listAlertsResponse_httpStatus :: Lens' ListAlertsResponse Int

-- | Pagination token from the GET list request. Use the token to fetch the
--   next page of results.
listChannels_nextToken :: Lens' ListChannels (Maybe Text)

-- | Upper bound on number of records to return. The maximum number of
--   results is 100.
listChannels_maxResults :: Lens' ListChannels (Maybe Natural)

-- | An array of channels that are associated with this account.
listChannelsResponse_items :: Lens' ListChannelsResponse (Maybe [Channel])

-- | Pagination token returned by the list request when results exceed the
--   maximum allowed. Use the token to fetch the next page of results.
listChannelsResponse_nextToken :: Lens' ListChannelsResponse (Maybe Text)

-- | The response's http status code.
listChannelsResponse_httpStatus :: Lens' ListChannelsResponse Int

-- | An optional stream identifier that MediaTailor uses to prefetch ads
--   for multiple streams that use the same playback configuration. If
--   StreamId is specified, MediaTailor returns all of the prefetch
--   schedules with an exact match on StreamId. If not specified,
--   MediaTailor returns all of the prefetch schedules for the playback
--   configuration, regardless of StreamId.
createPrefetchSchedule_streamId :: Lens' CreatePrefetchSchedule (Maybe Text)

-- | The identifier for the playback configuration.
createPrefetchSchedule_name :: Lens' CreatePrefetchSchedule Text

-- | The name of the playback configuration.
createPrefetchSchedule_playbackConfigurationName :: Lens' CreatePrefetchSchedule Text

-- | The configuration settings for MediaTailor's <i>consumption</i> of the
--   prefetched ads from the ad decision server. Each consumption
--   configuration contains an end time and an optional start time that
--   define the <i>consumption window</i>. Prefetch schedules automatically
--   expire no earlier than seven days after the end time.
createPrefetchSchedule_consumption :: Lens' CreatePrefetchSchedule PrefetchConsumption

-- | The configuration settings for retrieval of prefetched ads from the ad
--   decision server. Only one set of prefetched ads will be retrieved and
--   subsequently consumed for each ad break.
createPrefetchSchedule_retrieval :: Lens' CreatePrefetchSchedule PrefetchRetrieval

-- | The Amazon Resource Name (ARN) of the prefetch schedule.
createPrefetchScheduleResponse_arn :: Lens' CreatePrefetchScheduleResponse (Maybe Text)

-- | The name of the playback configuration to create the prefetch schedule
--   for.
createPrefetchScheduleResponse_playbackConfigurationName :: Lens' CreatePrefetchScheduleResponse (Maybe Text)

-- | A complex type that contains settings for prefetch retrieval from the
--   ad decision server (ADS).
createPrefetchScheduleResponse_retrieval :: Lens' CreatePrefetchScheduleResponse (Maybe PrefetchRetrieval)

-- | The name of the prefetch schedule. The name must be unique among all
--   prefetch schedules that are associated with the specified playback
--   configuration.
createPrefetchScheduleResponse_name :: Lens' CreatePrefetchScheduleResponse (Maybe Text)

-- | Consumption settings determine how, and when, MediaTailor places the
--   prefetched ads into ad breaks. Ad consumption occurs within a span of
--   time that you define, called a <i>consumption window</i>. You can
--   designate which ad breaks that MediaTailor fills with prefetch ads by
--   setting avail matching criteria.
createPrefetchScheduleResponse_consumption :: Lens' CreatePrefetchScheduleResponse (Maybe PrefetchConsumption)

-- | An optional stream identifier that you can specify in order to
--   prefetch for multiple streams that use the same playback
--   configuration.
createPrefetchScheduleResponse_streamId :: Lens' CreatePrefetchScheduleResponse (Maybe Text)

-- | The response's http status code.
createPrefetchScheduleResponse_httpStatus :: Lens' CreatePrefetchScheduleResponse Int

-- | The Amazon Resource Name (ARN) for the playback configuration. You can
--   get this from the response to any playback configuration request.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | A comma-separated list of tag key:value pairs.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int

-- | The identifier for the channel you are working on.
deleteChannel_channelName :: Lens' DeleteChannel Text

-- | The response's http status code.
deleteChannelResponse_httpStatus :: Lens' DeleteChannelResponse Int

-- | The identifier for the channel you are working on.
updateChannel_channelName :: Lens' UpdateChannel Text

-- | The channel's output properties.
updateChannel_outputs :: Lens' UpdateChannel [RequestOutputItem]

-- | The timestamp of when the channel was created.
updateChannelResponse_creationTime :: Lens' UpdateChannelResponse (Maybe UTCTime)

-- | The ARN of the channel.
updateChannelResponse_arn :: Lens' UpdateChannelResponse (Maybe Text)

-- | The timestamp of when the channel was last modified.
updateChannelResponse_lastModifiedTime :: Lens' UpdateChannelResponse (Maybe UTCTime)

-- | The channel's playback mode.
updateChannelResponse_playbackMode :: Lens' UpdateChannelResponse (Maybe Text)

-- | The name of the channel.
updateChannelResponse_channelName :: Lens' UpdateChannelResponse (Maybe Text)

-- | The channel's output properties.
updateChannelResponse_outputs :: Lens' UpdateChannelResponse (Maybe [ResponseOutputItem])

-- | Indicates whether the channel is in a running state or not.
updateChannelResponse_channelState :: Lens' UpdateChannelResponse (Maybe ChannelState)

-- | Contains information about the slate used to fill gaps between
--   programs in the schedule.
updateChannelResponse_fillerSlate :: Lens' UpdateChannelResponse (Maybe SlateSource)

-- | The tags assigned to the channel.
updateChannelResponse_tags :: Lens' UpdateChannelResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
updateChannelResponse_httpStatus :: Lens' UpdateChannelResponse Int

-- | The identifier for the channel you are working on.
getChannelPolicy_channelName :: Lens' GetChannelPolicy Text

-- | The IAM policy for the channel.
getChannelPolicyResponse_policy :: Lens' GetChannelPolicyResponse (Maybe Text)

-- | The response's http status code.
getChannelPolicyResponse_httpStatus :: Lens' GetChannelPolicyResponse Int

-- | The identifier for the source location you are working on.
describeVodSource_sourceLocationName :: Lens' DescribeVodSource Text

-- | The identifier for the VOD source you are working on.
describeVodSource_vodSourceName :: Lens' DescribeVodSource Text

-- | The timestamp that indicates when the VOD source was created.
describeVodSourceResponse_creationTime :: Lens' DescribeVodSourceResponse (Maybe UTCTime)

-- | The name of the source location associated with the VOD source.
describeVodSourceResponse_sourceLocationName :: Lens' DescribeVodSourceResponse (Maybe Text)

-- | The ARN of the VOD source.
describeVodSourceResponse_arn :: Lens' DescribeVodSourceResponse (Maybe Text)

-- | The ARN for the VOD source.
describeVodSourceResponse_lastModifiedTime :: Lens' DescribeVodSourceResponse (Maybe UTCTime)

-- | The HTTP package configurations.
describeVodSourceResponse_httpPackageConfigurations :: Lens' DescribeVodSourceResponse (Maybe [HttpPackageConfiguration])

-- | The name of the VOD source.
describeVodSourceResponse_vodSourceName :: Lens' DescribeVodSourceResponse (Maybe Text)

-- | The tags assigned to the VOD source.
describeVodSourceResponse_tags :: Lens' DescribeVodSourceResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
describeVodSourceResponse_httpStatus :: Lens' DescribeVodSourceResponse Int

-- | The identifier for the source location you are working on.
describeSourceLocation_sourceLocationName :: Lens' DescribeSourceLocation Text

-- | The timestamp that indicates when the source location was created.
describeSourceLocationResponse_creationTime :: Lens' DescribeSourceLocationResponse (Maybe UTCTime)

-- | The name of the source location.
describeSourceLocationResponse_sourceLocationName :: Lens' DescribeSourceLocationResponse (Maybe Text)

-- | The ARN of the source location.
describeSourceLocationResponse_arn :: Lens' DescribeSourceLocationResponse (Maybe Text)

-- | The HTTP package configuration settings for the source location.
describeSourceLocationResponse_httpConfiguration :: Lens' DescribeSourceLocationResponse (Maybe HttpConfiguration)

-- | The timestamp that indicates when the source location was last
--   modified.
describeSourceLocationResponse_lastModifiedTime :: Lens' DescribeSourceLocationResponse (Maybe UTCTime)

-- | The access configuration for the source location.
describeSourceLocationResponse_accessConfiguration :: Lens' DescribeSourceLocationResponse (Maybe AccessConfiguration)

-- | The default segment delivery configuration settings.
describeSourceLocationResponse_defaultSegmentDeliveryConfiguration :: Lens' DescribeSourceLocationResponse (Maybe DefaultSegmentDeliveryConfiguration)

-- | The tags assigned to the source location.
describeSourceLocationResponse_tags :: Lens' DescribeSourceLocationResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
describeSourceLocationResponse_httpStatus :: Lens' DescribeSourceLocationResponse Int

-- | The identifier for the playback configuration.
getPrefetchSchedule_name :: Lens' GetPrefetchSchedule Text

-- | The name of the playback configuration.
getPrefetchSchedule_playbackConfigurationName :: Lens' GetPrefetchSchedule Text

-- | The Amazon Resource Name (ARN) of the prefetch schedule.
getPrefetchScheduleResponse_arn :: Lens' GetPrefetchScheduleResponse (Maybe Text)

-- | The name of the playback configuration to create the prefetch schedule
--   for.
getPrefetchScheduleResponse_playbackConfigurationName :: Lens' GetPrefetchScheduleResponse (Maybe Text)

-- | A complex type that contains settings for prefetch retrieval from the
--   ad decision server (ADS).
getPrefetchScheduleResponse_retrieval :: Lens' GetPrefetchScheduleResponse (Maybe PrefetchRetrieval)

-- | The name of the prefetch schedule. The name must be unique among all
--   prefetch schedules that are associated with the specified playback
--   configuration.
getPrefetchScheduleResponse_name :: Lens' GetPrefetchScheduleResponse (Maybe Text)

-- | Consumption settings determine how, and when, MediaTailor places the
--   prefetched ads into ad breaks. Ad consumption occurs within a span of
--   time that you define, called a <i>consumption window</i>. You can
--   designate which ad breaks that MediaTailor fills with prefetch ads by
--   setting avail matching criteria.
getPrefetchScheduleResponse_consumption :: Lens' GetPrefetchScheduleResponse (Maybe PrefetchConsumption)

-- | An optional stream identifier that you can specify in order to
--   prefetch for multiple streams that use the same playback
--   configuration.
getPrefetchScheduleResponse_streamId :: Lens' GetPrefetchScheduleResponse (Maybe Text)

-- | The response's http status code.
getPrefetchScheduleResponse_httpStatus :: Lens' GetPrefetchScheduleResponse Int

-- | The ad break configuration settings.
createProgram_adBreaks :: Lens' CreateProgram (Maybe [AdBreak])

-- | The identifier for the channel you are working on.
createProgram_channelName :: Lens' CreateProgram Text

-- | The identifier for the program you are working on.
createProgram_programName :: Lens' CreateProgram Text

-- | The name that's used to refer to a VOD source.
createProgram_vodSourceName :: Lens' CreateProgram Text

-- | The schedule configuration settings.
createProgram_scheduleConfiguration :: Lens' CreateProgram ScheduleConfiguration

-- | The name of the source location.
createProgram_sourceLocationName :: Lens' CreateProgram Text

-- | The timestamp of when the program was created.
createProgramResponse_creationTime :: Lens' CreateProgramResponse (Maybe UTCTime)

-- | The source location name.
createProgramResponse_sourceLocationName :: Lens' CreateProgramResponse (Maybe Text)

-- | The ARN of the program.
createProgramResponse_arn :: Lens' CreateProgramResponse (Maybe Text)

-- | The name of the program.
createProgramResponse_programName :: Lens' CreateProgramResponse (Maybe Text)

-- | The ad break configuration settings.
createProgramResponse_adBreaks :: Lens' CreateProgramResponse (Maybe [AdBreak])

-- | The name of the channel that the program belongs to.
createProgramResponse_channelName :: Lens' CreateProgramResponse (Maybe Text)

-- | The date and time that the program is scheduled to start in ISO 8601
--   format and Coordinated Universal Time (UTC). For example, the value
--   2021-03-27T17:48:16.751Z represents March 27, 2021 at 17:48:16.751
--   UTC.
createProgramResponse_scheduledStartTime :: Lens' CreateProgramResponse (Maybe UTCTime)

-- | The name that's used to refer to a VOD source.
createProgramResponse_vodSourceName :: Lens' CreateProgramResponse (Maybe Text)

-- | The response's http status code.
createProgramResponse_httpStatus :: Lens' CreateProgramResponse Int

-- | The identifier for the channel you are working on.
startChannel_channelName :: Lens' StartChannel Text

-- | The response's http status code.
startChannelResponse_httpStatus :: Lens' StartChannelResponse Int

-- | Pagination token returned by the GET list request when results exceed
--   the maximum allowed. Use the token to fetch the next page of results.
listPlaybackConfigurations_nextToken :: Lens' ListPlaybackConfigurations (Maybe Text)

-- | Maximum number of records to return.
listPlaybackConfigurations_maxResults :: Lens' ListPlaybackConfigurations (Maybe Natural)

-- | Array of playback configurations. This might be all the available
--   configurations or a subset, depending on the settings that you provide
--   and the total number of configurations stored.
listPlaybackConfigurationsResponse_items :: Lens' ListPlaybackConfigurationsResponse (Maybe [PlaybackConfiguration])

-- | Pagination token returned by the GET list request when results exceed
--   the maximum allowed. Use the token to fetch the next page of results.
listPlaybackConfigurationsResponse_nextToken :: Lens' ListPlaybackConfigurationsResponse (Maybe Text)

-- | The response's http status code.
listPlaybackConfigurationsResponse_httpStatus :: Lens' ListPlaybackConfigurationsResponse Int

-- | The identifier for the playback configuration.
deletePlaybackConfiguration_name :: Lens' DeletePlaybackConfiguration Text

-- | The response's http status code.
deletePlaybackConfigurationResponse_httpStatus :: Lens' DeletePlaybackConfigurationResponse Int

-- | Defines the maximum duration of underfilled ad time (in seconds)
--   allowed in an ad break. If the duration of underfilled ad time exceeds
--   the personalization threshold, then the personalization of the ad
--   break is abandoned and the underlying content is shown. This feature
--   applies to <i>ad replacement</i> in live and VOD streams, rather than
--   ad insertion, because it relies on an underlying content stream. For
--   more information about ad break behavior, including ad replacement and
--   insertion, see <a>Ad Behavior in AWS Elemental MediaTailor</a>.
putPlaybackConfiguration_personalizationThresholdSeconds :: Lens' PutPlaybackConfiguration (Maybe Natural)

-- | The configuration for avail suppression, also known as ad suppression.
--   For more information about ad suppression, see <a>Ad Suppression</a>.
putPlaybackConfiguration_availSuppression :: Lens' PutPlaybackConfiguration (Maybe AvailSuppression)

-- | The configuration for bumpers. Bumpers are short audio or video clips
--   that play at the start or before the end of an ad break. To learn more
--   about bumpers, see <a>Bumpers</a>.
putPlaybackConfiguration_bumper :: Lens' PutPlaybackConfiguration (Maybe Bumper)

-- | The URL for the ad decision server (ADS). This includes the
--   specification of static parameters and placeholders for dynamic
--   parameters. AWS Elemental MediaTailor substitutes player-specific and
--   session-specific parameters as needed when calling the ADS.
--   Alternately, for testing you can provide a static VAST URL. The
--   maximum length is 25,000 characters.
putPlaybackConfiguration_adDecisionServerUrl :: Lens' PutPlaybackConfiguration (Maybe Text)

-- | The URL prefix for the parent manifest for the stream, minus the asset
--   ID. The maximum length is 512 characters.
putPlaybackConfiguration_videoContentSourceUrl :: Lens' PutPlaybackConfiguration (Maybe Text)

-- | The configuration for DASH content.
putPlaybackConfiguration_dashConfiguration :: Lens' PutPlaybackConfiguration (Maybe DashConfigurationForPut)

-- | The configuration for manifest processing rules. Manifest processing
--   rules enable customization of the personalized manifests created by
--   MediaTailor.
putPlaybackConfiguration_manifestProcessingRules :: Lens' PutPlaybackConfiguration (Maybe ManifestProcessingRules)

-- | The configuration for pre-roll ad insertion.
putPlaybackConfiguration_livePreRollConfiguration :: Lens' PutPlaybackConfiguration (Maybe LivePreRollConfiguration)

-- | The identifier for the playback configuration.
putPlaybackConfiguration_name :: Lens' PutPlaybackConfiguration (Maybe Text)

-- | The player parameters and aliases used as dynamic variables during
--   session initialization. For more information, see <a>Domain
--   Variables</a>.
putPlaybackConfiguration_configurationAliases :: Lens' PutPlaybackConfiguration (Maybe (HashMap Text (HashMap Text Text)))

-- | The name that is used to associate this playback configuration with a
--   custom transcode profile. This overrides the dynamic transcoding
--   defaults of MediaTailor. Use this only if you have already set up
--   custom profiles with the help of AWS Support.
putPlaybackConfiguration_transcodeProfileName :: Lens' PutPlaybackConfiguration (Maybe Text)

-- | The tags to assign to the playback configuration.
putPlaybackConfiguration_tags :: Lens' PutPlaybackConfiguration (Maybe (HashMap Text Text))

-- | The URL for a high-quality video asset to transcode and use to fill in
--   time that's not used by ads. AWS Elemental MediaTailor shows the slate
--   to fill in gaps in media content. Configuring the slate is optional
--   for non-VPAID configurations. For VPAID, the slate is required because
--   MediaTailor provides it in the slots that are designated for dynamic
--   ad content. The slate must be a high-quality asset that contains both
--   audio and video.
putPlaybackConfiguration_slateAdUrl :: Lens' PutPlaybackConfiguration (Maybe Text)

-- | The configuration for using a content delivery network (CDN), like
--   Amazon CloudFront, for content and ad segment management.
putPlaybackConfiguration_cdnConfiguration :: Lens' PutPlaybackConfiguration (Maybe CdnConfiguration)

-- | The URL that the player accesses to get a manifest from AWS Elemental
--   MediaTailor. This session will use server-side reporting.
putPlaybackConfigurationResponse_playbackEndpointPrefix :: Lens' PutPlaybackConfigurationResponse (Maybe Text)

-- | The configuration for HLS content.
putPlaybackConfigurationResponse_hlsConfiguration :: Lens' PutPlaybackConfigurationResponse (Maybe HlsConfiguration)

-- | Defines the maximum duration of underfilled ad time (in seconds)
--   allowed in an ad break. If the duration of underfilled ad time exceeds
--   the personalization threshold, then the personalization of the ad
--   break is abandoned and the underlying content is shown. This feature
--   applies to <i>ad replacement</i> in live and VOD streams, rather than
--   ad insertion, because it relies on an underlying content stream. For
--   more information about ad break behavior, including ad replacement and
--   insertion, see <a>Ad Behavior in AWS Elemental MediaTailor</a>.
putPlaybackConfigurationResponse_personalizationThresholdSeconds :: Lens' PutPlaybackConfigurationResponse (Maybe Natural)

-- | The Amazon Resource Name (ARN) for the playback configuration.
putPlaybackConfigurationResponse_playbackConfigurationArn :: Lens' PutPlaybackConfigurationResponse (Maybe Text)

-- | The configuration for avail suppression, also known as ad suppression.
--   For more information about ad suppression, see <a>Ad Suppression</a>.
putPlaybackConfigurationResponse_availSuppression :: Lens' PutPlaybackConfigurationResponse (Maybe AvailSuppression)

-- | The configuration for bumpers. Bumpers are short audio or video clips
--   that play at the start or before the end of an ad break. To learn more
--   about bumpers, see <a>Bumpers</a>.
putPlaybackConfigurationResponse_bumper :: Lens' PutPlaybackConfigurationResponse (Maybe Bumper)

-- | The URL for the ad decision server (ADS). This includes the
--   specification of static parameters and placeholders for dynamic
--   parameters. AWS Elemental MediaTailor substitutes player-specific and
--   session-specific parameters as needed when calling the ADS.
--   Alternately, for testing, you can provide a static VAST URL. The
--   maximum length is 25,000 characters.
putPlaybackConfigurationResponse_adDecisionServerUrl :: Lens' PutPlaybackConfigurationResponse (Maybe Text)

-- | The URL prefix for the parent manifest for the stream, minus the asset
--   ID. The maximum length is 512 characters.
putPlaybackConfigurationResponse_videoContentSourceUrl :: Lens' PutPlaybackConfigurationResponse (Maybe Text)

-- | The configuration for DASH content.
putPlaybackConfigurationResponse_dashConfiguration :: Lens' PutPlaybackConfigurationResponse (Maybe DashConfiguration)

-- | The configuration for manifest processing rules. Manifest processing
--   rules enable customization of the personalized manifests created by
--   MediaTailor.
putPlaybackConfigurationResponse_manifestProcessingRules :: Lens' PutPlaybackConfigurationResponse (Maybe ManifestProcessingRules)

-- | The Amazon CloudWatch log settings for a playback configuration.
putPlaybackConfigurationResponse_logConfiguration :: Lens' PutPlaybackConfigurationResponse (Maybe LogConfiguration)

-- | The configuration for pre-roll ad insertion.
putPlaybackConfigurationResponse_livePreRollConfiguration :: Lens' PutPlaybackConfigurationResponse (Maybe LivePreRollConfiguration)

-- | The identifier for the playback configuration.
putPlaybackConfigurationResponse_name :: Lens' PutPlaybackConfigurationResponse (Maybe Text)

-- | The URL that the player uses to initialize a session that uses
--   client-side reporting.
putPlaybackConfigurationResponse_sessionInitializationEndpointPrefix :: Lens' PutPlaybackConfigurationResponse (Maybe Text)

-- | The player parameters and aliases used as dynamic variables during
--   session initialization. For more information, see <a>Domain
--   Variables</a>.
putPlaybackConfigurationResponse_configurationAliases :: Lens' PutPlaybackConfigurationResponse (Maybe (HashMap Text (HashMap Text Text)))

-- | The name that is used to associate this playback configuration with a
--   custom transcode profile. This overrides the dynamic transcoding
--   defaults of MediaTailor. Use this only if you have already set up
--   custom profiles with the help of AWS Support.
putPlaybackConfigurationResponse_transcodeProfileName :: Lens' PutPlaybackConfigurationResponse (Maybe Text)

-- | The tags assigned to the playback configuration.
putPlaybackConfigurationResponse_tags :: Lens' PutPlaybackConfigurationResponse (Maybe (HashMap Text Text))

-- | The URL for a high-quality video asset to transcode and use to fill in
--   time that's not used by ads. AWS Elemental MediaTailor shows the slate
--   to fill in gaps in media content. Configuring the slate is optional
--   for non-VPAID playback configurations. For VPAID, the slate is
--   required because MediaTailor provides it in the slots designated for
--   dynamic ad content. The slate must be a high-quality asset that
--   contains both audio and video.
putPlaybackConfigurationResponse_slateAdUrl :: Lens' PutPlaybackConfigurationResponse (Maybe Text)

-- | The configuration for using a content delivery network (CDN), like
--   Amazon CloudFront, for content and ad segment management.
putPlaybackConfigurationResponse_cdnConfiguration :: Lens' PutPlaybackConfigurationResponse (Maybe CdnConfiguration)

-- | The response's http status code.
putPlaybackConfigurationResponse_httpStatus :: Lens' PutPlaybackConfigurationResponse Int

-- | Pagination token from the GET list request. Use the token to fetch the
--   next page of results.
listSourceLocations_nextToken :: Lens' ListSourceLocations (Maybe Text)

-- | Upper bound on number of records to return. The maximum number of
--   results is 100.
listSourceLocations_maxResults :: Lens' ListSourceLocations (Maybe Natural)

-- | An array of source locations.
listSourceLocationsResponse_items :: Lens' ListSourceLocationsResponse (Maybe [SourceLocation])

-- | Pagination token from the list request. Use the token to fetch the
--   next page of results.
listSourceLocationsResponse_nextToken :: Lens' ListSourceLocationsResponse (Maybe Text)

-- | The response's http status code.
listSourceLocationsResponse_httpStatus :: Lens' ListSourceLocationsResponse Int

-- | Access configuration parameters. Configures the type of authentication
--   used to access content from your source location.
updateSourceLocation_accessConfiguration :: Lens' UpdateSourceLocation (Maybe AccessConfiguration)

-- | The optional configuration for the host server that serves segments.
updateSourceLocation_defaultSegmentDeliveryConfiguration :: Lens' UpdateSourceLocation (Maybe DefaultSegmentDeliveryConfiguration)

-- | The identifier for the source location you are working on.
updateSourceLocation_sourceLocationName :: Lens' UpdateSourceLocation Text

-- | The HTTP configuration for the source location.
updateSourceLocation_httpConfiguration :: Lens' UpdateSourceLocation HttpConfiguration

-- | The timestamp that indicates when the source location was created.
updateSourceLocationResponse_creationTime :: Lens' UpdateSourceLocationResponse (Maybe UTCTime)

-- | The name of the source location.
updateSourceLocationResponse_sourceLocationName :: Lens' UpdateSourceLocationResponse (Maybe Text)

-- | The ARN of the source location.
updateSourceLocationResponse_arn :: Lens' UpdateSourceLocationResponse (Maybe Text)

-- | The HTTP package configuration settings for the source location.
updateSourceLocationResponse_httpConfiguration :: Lens' UpdateSourceLocationResponse (Maybe HttpConfiguration)

-- | The timestamp that indicates when the source location was last
--   modified.
updateSourceLocationResponse_lastModifiedTime :: Lens' UpdateSourceLocationResponse (Maybe UTCTime)

-- | The access configuration for the source location.
updateSourceLocationResponse_accessConfiguration :: Lens' UpdateSourceLocationResponse (Maybe AccessConfiguration)

-- | The default segment delivery configuration settings.
updateSourceLocationResponse_defaultSegmentDeliveryConfiguration :: Lens' UpdateSourceLocationResponse (Maybe DefaultSegmentDeliveryConfiguration)

-- | The tags assigned to the source location.
updateSourceLocationResponse_tags :: Lens' UpdateSourceLocationResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
updateSourceLocationResponse_httpStatus :: Lens' UpdateSourceLocationResponse Int

-- | The identifier for the source location you are working on.
deleteSourceLocation_sourceLocationName :: Lens' DeleteSourceLocation Text

-- | The response's http status code.
deleteSourceLocationResponse_httpStatus :: Lens' DeleteSourceLocationResponse Int

-- | The identifier for the playback configuration.
getPlaybackConfiguration_name :: Lens' GetPlaybackConfiguration Text

-- | The URL that the player accesses to get a manifest from AWS Elemental
--   MediaTailor. This session will use server-side reporting.
getPlaybackConfigurationResponse_playbackEndpointPrefix :: Lens' GetPlaybackConfigurationResponse (Maybe Text)

-- | The configuration for HLS content.
getPlaybackConfigurationResponse_hlsConfiguration :: Lens' GetPlaybackConfigurationResponse (Maybe HlsConfiguration)

-- | Defines the maximum duration of underfilled ad time (in seconds)
--   allowed in an ad break. If the duration of underfilled ad time exceeds
--   the personalization threshold, then the personalization of the ad
--   break is abandoned and the underlying content is shown. This feature
--   applies to <i>ad replacement</i> in live and VOD streams, rather than
--   ad insertion, because it relies on an underlying content stream. For
--   more information about ad break behavior, including ad replacement and
--   insertion, see <a>Ad Behavior in AWS Elemental MediaTailor</a>.
getPlaybackConfigurationResponse_personalizationThresholdSeconds :: Lens' GetPlaybackConfigurationResponse (Maybe Natural)

-- | The Amazon Resource Name (ARN) for the playback configuration.
getPlaybackConfigurationResponse_playbackConfigurationArn :: Lens' GetPlaybackConfigurationResponse (Maybe Text)

-- | The configuration for avail suppression, also known as ad suppression.
--   For more information about ad suppression, see <a>Ad Suppression</a>.
getPlaybackConfigurationResponse_availSuppression :: Lens' GetPlaybackConfigurationResponse (Maybe AvailSuppression)

-- | The configuration for bumpers. Bumpers are short audio or video clips
--   that play at the start or before the end of an ad break. To learn more
--   about bumpers, see <a>Bumpers</a>.
getPlaybackConfigurationResponse_bumper :: Lens' GetPlaybackConfigurationResponse (Maybe Bumper)

-- | The URL for the ad decision server (ADS). This includes the
--   specification of static parameters and placeholders for dynamic
--   parameters. AWS Elemental MediaTailor substitutes player-specific and
--   session-specific parameters as needed when calling the ADS.
--   Alternately, for testing, you can provide a static VAST URL. The
--   maximum length is 25,000 characters.
getPlaybackConfigurationResponse_adDecisionServerUrl :: Lens' GetPlaybackConfigurationResponse (Maybe Text)

-- | The URL prefix for the parent manifest for the stream, minus the asset
--   ID. The maximum length is 512 characters.
getPlaybackConfigurationResponse_videoContentSourceUrl :: Lens' GetPlaybackConfigurationResponse (Maybe Text)

-- | The configuration for DASH content.
getPlaybackConfigurationResponse_dashConfiguration :: Lens' GetPlaybackConfigurationResponse (Maybe DashConfiguration)

-- | The configuration for manifest processing rules. Manifest processing
--   rules enable customization of the personalized manifests created by
--   MediaTailor.
getPlaybackConfigurationResponse_manifestProcessingRules :: Lens' GetPlaybackConfigurationResponse (Maybe ManifestProcessingRules)

-- | The Amazon CloudWatch log settings for a playback configuration.
getPlaybackConfigurationResponse_logConfiguration :: Lens' GetPlaybackConfigurationResponse (Maybe LogConfiguration)

-- | The configuration for pre-roll ad insertion.
getPlaybackConfigurationResponse_livePreRollConfiguration :: Lens' GetPlaybackConfigurationResponse (Maybe LivePreRollConfiguration)

-- | The identifier for the playback configuration.
getPlaybackConfigurationResponse_name :: Lens' GetPlaybackConfigurationResponse (Maybe Text)

-- | The URL that the player uses to initialize a session that uses
--   client-side reporting.
getPlaybackConfigurationResponse_sessionInitializationEndpointPrefix :: Lens' GetPlaybackConfigurationResponse (Maybe Text)

-- | The player parameters and aliases used as dynamic variables during
--   session initialization. For more information, see <a>Domain
--   Variables</a>.
getPlaybackConfigurationResponse_configurationAliases :: Lens' GetPlaybackConfigurationResponse (Maybe (HashMap Text (HashMap Text Text)))

-- | The name that is used to associate this playback configuration with a
--   custom transcode profile. This overrides the dynamic transcoding
--   defaults of MediaTailor. Use this only if you have already set up
--   custom profiles with the help of AWS Support.
getPlaybackConfigurationResponse_transcodeProfileName :: Lens' GetPlaybackConfigurationResponse (Maybe Text)

-- | The tags assigned to the playback configuration.
getPlaybackConfigurationResponse_tags :: Lens' GetPlaybackConfigurationResponse (Maybe (HashMap Text Text))

-- | The URL for a high-quality video asset to transcode and use to fill in
--   time that's not used by ads. AWS Elemental MediaTailor shows the slate
--   to fill in gaps in media content. Configuring the slate is optional
--   for non-VPAID playback configurations. For VPAID, the slate is
--   required because MediaTailor provides it in the slots designated for
--   dynamic ad content. The slate must be a high-quality asset that
--   contains both audio and video.
getPlaybackConfigurationResponse_slateAdUrl :: Lens' GetPlaybackConfigurationResponse (Maybe Text)

-- | The configuration for using a content delivery network (CDN), like
--   Amazon CloudFront, for content and ad segment management.
getPlaybackConfigurationResponse_cdnConfiguration :: Lens' GetPlaybackConfigurationResponse (Maybe CdnConfiguration)

-- | The response's http status code.
getPlaybackConfigurationResponse_httpStatus :: Lens' GetPlaybackConfigurationResponse Int

-- | The identifier for the source location you are working on.
deleteVodSource_sourceLocationName :: Lens' DeleteVodSource Text

-- | The identifier for the VOD source you are working on.
deleteVodSource_vodSourceName :: Lens' DeleteVodSource Text

-- | The response's http status code.
deleteVodSourceResponse_httpStatus :: Lens' DeleteVodSourceResponse Int

-- | The identifier for the source location you are working on.
updateVodSource_sourceLocationName :: Lens' UpdateVodSource Text

-- | The identifier for the VOD source you are working on.
updateVodSource_vodSourceName :: Lens' UpdateVodSource Text

-- | An array of HTTP package configurations for the VOD source on this
--   account.
updateVodSource_httpPackageConfigurations :: Lens' UpdateVodSource [HttpPackageConfiguration]

-- | The timestamp that indicates when the VOD source was created.
updateVodSourceResponse_creationTime :: Lens' UpdateVodSourceResponse (Maybe UTCTime)

-- | The name of the source location associated with the VOD source.
updateVodSourceResponse_sourceLocationName :: Lens' UpdateVodSourceResponse (Maybe Text)

-- | The ARN of the VOD source.
updateVodSourceResponse_arn :: Lens' UpdateVodSourceResponse (Maybe Text)

-- | The ARN for the VOD source.
updateVodSourceResponse_lastModifiedTime :: Lens' UpdateVodSourceResponse (Maybe UTCTime)

-- | The HTTP package configurations.
updateVodSourceResponse_httpPackageConfigurations :: Lens' UpdateVodSourceResponse (Maybe [HttpPackageConfiguration])

-- | The name of the VOD source.
updateVodSourceResponse_vodSourceName :: Lens' UpdateVodSourceResponse (Maybe Text)

-- | The tags assigned to the VOD source.
updateVodSourceResponse_tags :: Lens' UpdateVodSourceResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
updateVodSourceResponse_httpStatus :: Lens' UpdateVodSourceResponse Int

-- | The tags to assign to the VOD source.
createVodSource_tags :: Lens' CreateVodSource (Maybe (HashMap Text Text))

-- | The identifier for the source location you are working on.
createVodSource_sourceLocationName :: Lens' CreateVodSource Text

-- | The identifier for the VOD source you are working on.
createVodSource_vodSourceName :: Lens' CreateVodSource Text

-- | An array of HTTP package configuration parameters for this VOD source.
createVodSource_httpPackageConfigurations :: Lens' CreateVodSource [HttpPackageConfiguration]

-- | The timestamp that indicates when the VOD source was created.
createVodSourceResponse_creationTime :: Lens' CreateVodSourceResponse (Maybe UTCTime)

-- | The name of the source location associated with the VOD source.
createVodSourceResponse_sourceLocationName :: Lens' CreateVodSourceResponse (Maybe Text)

-- | The ARN of the VOD source.
createVodSourceResponse_arn :: Lens' CreateVodSourceResponse (Maybe Text)

-- | The ARN for the VOD source.
createVodSourceResponse_lastModifiedTime :: Lens' CreateVodSourceResponse (Maybe UTCTime)

-- | The HTTP package configurations.
createVodSourceResponse_httpPackageConfigurations :: Lens' CreateVodSourceResponse (Maybe [HttpPackageConfiguration])

-- | The name of the VOD source.
createVodSourceResponse_vodSourceName :: Lens' CreateVodSourceResponse (Maybe Text)

-- | The tags assigned to the VOD source.
createVodSourceResponse_tags :: Lens' CreateVodSourceResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
createVodSourceResponse_httpStatus :: Lens' CreateVodSourceResponse Int

-- | The slate used to fill gaps between programs in the schedule. You must
--   configure filler slate if your channel uses a LINEAR PlaybackMode.
createChannel_fillerSlate :: Lens' CreateChannel (Maybe SlateSource)

-- | The tags to assign to the channel.
createChannel_tags :: Lens' CreateChannel (Maybe (HashMap Text Text))

-- | The identifier for the channel you are working on.
createChannel_channelName :: Lens' CreateChannel Text

-- | The channel's output properties.
createChannel_outputs :: Lens' CreateChannel [RequestOutputItem]

-- | The type of playback mode to use for this channel.
--   
--   LINEAR - The programs in the schedule play once back-to-back in the
--   schedule.
--   
--   LOOP - The programs in the schedule play back-to-back in an endless
--   loop. When the last program in the schedule stops playing, playback
--   loops back to the first program in the schedule.
createChannel_playbackMode :: Lens' CreateChannel PlaybackMode

-- | The timestamp of when the channel was created.
createChannelResponse_creationTime :: Lens' CreateChannelResponse (Maybe UTCTime)

-- | The ARN of the channel.
createChannelResponse_arn :: Lens' CreateChannelResponse (Maybe Text)

-- | The timestamp of when the channel was last modified.
createChannelResponse_lastModifiedTime :: Lens' CreateChannelResponse (Maybe UTCTime)

-- | The channel's playback mode.
createChannelResponse_playbackMode :: Lens' CreateChannelResponse (Maybe Text)

-- | The name of the channel.
createChannelResponse_channelName :: Lens' CreateChannelResponse (Maybe Text)

-- | The channel's output properties.
createChannelResponse_outputs :: Lens' CreateChannelResponse (Maybe [ResponseOutputItem])

-- | Indicates whether the channel is in a running state or not.
createChannelResponse_channelState :: Lens' CreateChannelResponse (Maybe ChannelState)

-- | Contains information about the slate used to fill gaps between
--   programs in the schedule.
createChannelResponse_fillerSlate :: Lens' CreateChannelResponse (Maybe SlateSource)

-- | The tags assigned to the channel.
createChannelResponse_tags :: Lens' CreateChannelResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
createChannelResponse_httpStatus :: Lens' CreateChannelResponse Int

-- | The identifier for the channel you are working on.
deleteChannelPolicy_channelName :: Lens' DeleteChannelPolicy Text

-- | The response's http status code.
deleteChannelPolicyResponse_httpStatus :: Lens' DeleteChannelPolicyResponse Int

-- | The identifier for the channel you are working on.
putChannelPolicy_channelName :: Lens' PutChannelPolicy Text

-- | Adds an IAM role that determines the permissions of your channel.
putChannelPolicy_policy :: Lens' PutChannelPolicy Text

-- | The response's http status code.
putChannelPolicyResponse_httpStatus :: Lens' PutChannelPolicyResponse Int

-- | The identifier for the channel you are working on.
deleteProgram_channelName :: Lens' DeleteProgram Text

-- | The identifier for the program you are working on.
deleteProgram_programName :: Lens' DeleteProgram Text

-- | The response's http status code.
deleteProgramResponse_httpStatus :: Lens' DeleteProgramResponse Int

-- | Pagination token from the GET list request. Use the token to fetch the
--   next page of results.
getChannelSchedule_nextToken :: Lens' GetChannelSchedule (Maybe Text)

-- | The schedule duration in minutes. The maximum duration is 4320 minutes
--   (three days).
getChannelSchedule_durationMinutes :: Lens' GetChannelSchedule (Maybe Text)

-- | Upper bound on number of records to return. The maximum number of
--   results is 100.
getChannelSchedule_maxResults :: Lens' GetChannelSchedule (Maybe Natural)

-- | The identifier for the channel you are working on.
getChannelSchedule_channelName :: Lens' GetChannelSchedule Text

-- | An array of schedule entries for the channel.
getChannelScheduleResponse_items :: Lens' GetChannelScheduleResponse (Maybe [ScheduleEntry])

-- | Pagination token from the GET list request. Use the token to fetch the
--   next page of results.
getChannelScheduleResponse_nextToken :: Lens' GetChannelScheduleResponse (Maybe Text)

-- | The response's http status code.
getChannelScheduleResponse_httpStatus :: Lens' GetChannelScheduleResponse Int

-- | The Amazon Resource Name (ARN) for the playback configuration. You can
--   get this from the response to any playback configuration request.
tagResource_resourceArn :: Lens' TagResource Text

-- | A comma-separated list of tag key:value pairs.
tagResource_tags :: Lens' TagResource (HashMap Text Text)

-- | The percentage of session logs that MediaTailor sends to your
--   Cloudwatch Logs account. For example, if your playback configuration
--   has 1000 sessions and percentEnabled is set to 60, MediaTailor sends
--   logs for 600 of the sessions to CloudWatch Logs. MediaTailor decides
--   at random which of the playback configuration sessions to send logs
--   for. If you want to view logs for a specific session, you can use the
--   <a>debug log mode</a>.
--   
--   Valid values: 0 - 100
configureLogsForPlaybackConfiguration_percentEnabled :: Lens' ConfigureLogsForPlaybackConfiguration Int

-- | The name of the playback configuration.
configureLogsForPlaybackConfiguration_playbackConfigurationName :: Lens' ConfigureLogsForPlaybackConfiguration Text

-- | The name of the playback configuration.
configureLogsForPlaybackConfigurationResponse_playbackConfigurationName :: Lens' ConfigureLogsForPlaybackConfigurationResponse (Maybe Text)

-- | The percentage of session logs that MediaTailor sends to your
--   Cloudwatch Logs account.
configureLogsForPlaybackConfigurationResponse_percentEnabled :: Lens' ConfigureLogsForPlaybackConfigurationResponse (Maybe Int)

-- | The response's http status code.
configureLogsForPlaybackConfigurationResponse_httpStatus :: Lens' ConfigureLogsForPlaybackConfigurationResponse Int

-- | The identifier for the channel you are working on.
stopChannel_channelName :: Lens' StopChannel Text

-- | The response's http status code.
stopChannelResponse_httpStatus :: Lens' StopChannelResponse Int

-- | The Amazon Resource Name (ARN) for the playback configuration. You can
--   get this from the response to any playback configuration request.
untagResource_resourceArn :: Lens' UntagResource Text

-- | A comma-separated list of the tag keys to remove from the playback
--   configuration.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | The identifier for the channel you are working on.
describeChannel_channelName :: Lens' DescribeChannel Text

-- | The timestamp of when the channel was created.
describeChannelResponse_creationTime :: Lens' DescribeChannelResponse (Maybe UTCTime)

-- | The ARN of the channel.
describeChannelResponse_arn :: Lens' DescribeChannelResponse (Maybe Text)

-- | The timestamp of when the channel was last modified.
describeChannelResponse_lastModifiedTime :: Lens' DescribeChannelResponse (Maybe UTCTime)

-- | The channel's playback mode.
describeChannelResponse_playbackMode :: Lens' DescribeChannelResponse (Maybe Text)

-- | The name of the channel.
describeChannelResponse_channelName :: Lens' DescribeChannelResponse (Maybe Text)

-- | The channel's output properties.
describeChannelResponse_outputs :: Lens' DescribeChannelResponse (Maybe [ResponseOutputItem])

-- | Indicates whether the channel is in a running state or not.
describeChannelResponse_channelState :: Lens' DescribeChannelResponse (Maybe ChannelState)

-- | Contains information about the slate used to fill gaps between
--   programs in the schedule.
describeChannelResponse_fillerSlate :: Lens' DescribeChannelResponse (Maybe SlateSource)

-- | The tags assigned to the channel.
describeChannelResponse_tags :: Lens' DescribeChannelResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
describeChannelResponse_httpStatus :: Lens' DescribeChannelResponse Int

-- | Pagination token from the GET list request. Use the token to fetch the
--   next page of results.
listVodSources_nextToken :: Lens' ListVodSources (Maybe Text)

-- | Upper bound on number of records to return. The maximum number of
--   results is 100.
listVodSources_maxResults :: Lens' ListVodSources (Maybe Natural)

-- | The identifier for the source location you are working on.
listVodSources_sourceLocationName :: Lens' ListVodSources Text

-- | Lists the VOD sources.
listVodSourcesResponse_items :: Lens' ListVodSourcesResponse (Maybe [VodSource])

-- | Pagination token from the list request. Use the token to fetch the
--   next page of results.
listVodSourcesResponse_nextToken :: Lens' ListVodSourcesResponse (Maybe Text)

-- | The response's http status code.
listVodSourcesResponse_httpStatus :: Lens' ListVodSourcesResponse Int

-- | The identifier for the channel you are working on.
describeProgram_channelName :: Lens' DescribeProgram Text

-- | The identifier for the program you are working on.
describeProgram_programName :: Lens' DescribeProgram Text

-- | The timestamp of when the program was created.
describeProgramResponse_creationTime :: Lens' DescribeProgramResponse (Maybe UTCTime)

-- | The source location name.
describeProgramResponse_sourceLocationName :: Lens' DescribeProgramResponse (Maybe Text)

-- | The ARN of the program.
describeProgramResponse_arn :: Lens' DescribeProgramResponse (Maybe Text)

-- | The name of the program.
describeProgramResponse_programName :: Lens' DescribeProgramResponse (Maybe Text)

-- | The ad break configuration settings.
describeProgramResponse_adBreaks :: Lens' DescribeProgramResponse (Maybe [AdBreak])

-- | The name of the channel that the program belongs to.
describeProgramResponse_channelName :: Lens' DescribeProgramResponse (Maybe Text)

-- | The date and time that the program is scheduled to start in ISO 8601
--   format and Coordinated Universal Time (UTC). For example, the value
--   2021-03-27T17:48:16.751Z represents March 27, 2021 at 17:48:16.751
--   UTC.
describeProgramResponse_scheduledStartTime :: Lens' DescribeProgramResponse (Maybe UTCTime)

-- | The name that's used to refer to a VOD source.
describeProgramResponse_vodSourceName :: Lens' DescribeProgramResponse (Maybe Text)

-- | The response's http status code.
describeProgramResponse_httpStatus :: Lens' DescribeProgramResponse Int

-- | The type of authentication used to access content from
--   HttpConfiguration::BaseUrl on your source location. Accepted value:
--   S3_SIGV4.
--   
--   S3_SIGV4 - AWS Signature Version 4 authentication for Amazon S3 hosted
--   virtual-style access. If your source location base URL is an Amazon S3
--   bucket, MediaTailor can use AWS Signature Version 4 (SigV4)
--   authentication to access the bucket where your source content is
--   stored. Your MediaTailor source location baseURL must follow the S3
--   virtual hosted-style request URL format. For example,
--   https://bucket-name.s3.Region.amazonaws.com/key-name.
--   
--   Before you can use S3_SIGV4, you must meet these requirements:
--   
--   â€¢ You must allow MediaTailor to access your S3 bucket by granting
--   mediatailor.amazonaws.com principal access in IAM. For information
--   about configuring access in IAM, see Access management in the IAM User
--   Guide.
--   
--   â€¢ The mediatailor.amazonaws.com service principal must have
--   permissions to read all top level manifests referenced by the
--   VodSource packaging configurations.
--   
--   â€¢ The caller of the API must have s3:GetObject IAM permissions to read
--   all top level manifests referenced by your MediaTailor VodSource
--   packaging configurations.
accessConfiguration_accessType :: Lens' AccessConfiguration (Maybe AccessType)

-- | AWS Secrets Manager access token configuration parameters.
accessConfiguration_secretsManagerAccessTokenConfiguration :: Lens' AccessConfiguration (Maybe SecretsManagerAccessTokenConfiguration)

-- | This defines the SCTE-35 splice_insert() message inserted around the
--   ad. For information about using splice_insert(), see the SCTE-35
--   specficiaiton, section 9.7.3.1.
adBreak_spliceInsertMessage :: Lens' AdBreak (Maybe SpliceInsertMessage)

-- | The SCTE-35 ad insertion type. Accepted value: SPLICE_INSERT.
adBreak_messageType :: Lens' AdBreak (Maybe MessageType)

-- | Ad break slate configuration.
adBreak_slate :: Lens' AdBreak (Maybe SlateSource)

-- | How long (in milliseconds) after the beginning of the program that an
--   ad starts. This value must fall within 100ms of a segment boundary,
--   otherwise the ad break will be skipped.
adBreak_offsetMillis :: Lens' AdBreak (Maybe Integer)

-- | Enables ad marker passthrough for your configuration.
adMarkerPassthrough_enabled :: Lens' AdMarkerPassthrough (Maybe Bool)

-- | The Amazon Resource Name (ARN) of the resource.
alert_resourceArn :: Lens' Alert Text

-- | The code for the alert. For example, NOT_PROCESSED.
alert_alertCode :: Lens' Alert Text

-- | The timestamp when the alert was last modified.
alert_lastModifiedTime :: Lens' Alert UTCTime

-- | The Amazon Resource Names (ARNs) related to this alert.
alert_relatedResourceArns :: Lens' Alert [Text]

-- | If an alert is generated for a resource, an explanation of the reason
--   for the alert.
alert_alertMessage :: Lens' Alert Text

-- | For the DynamicVariable specified in AvailMatchingCriteria, the
--   Operator that is used for the comparison.
availMatchingCriteria_operator :: Lens' AvailMatchingCriteria Operator

-- | The dynamic variable(s) that MediaTailor should use as avail matching
--   criteria. MediaTailor only places the prefetched ads into the avail if
--   the avail matches the criteria defined by the dynamic variable. For
--   information about dynamic variables, see <a>Using dynamic ad
--   variables</a> in the <i>MediaTailor User Guide</i>.
--   
--   You can include up to 100 dynamic variables.
availMatchingCriteria_dynamicVariable :: Lens' AvailMatchingCriteria Text

-- | A live edge offset time in HH:MM:SS. MediaTailor won't fill ad breaks
--   on or behind this time in the manifest lookback window. If Value is
--   set to 00:00:00, it is in sync with the live edge, and MediaTailor
--   won't fill any ad breaks on or behind the live edge. If you set a
--   Value time, MediaTailor won't fill any ad breaks on or behind this
--   time in the manifest lookback window. For example, if you set
--   00:45:00, then MediaTailor will fill ad breaks that occur within 45
--   minutes behind the live edge, but won't fill ad breaks on or behind 45
--   minutes behind the live edge.
availSuppression_value :: Lens' AvailSuppression (Maybe Text)

-- | Sets the ad suppression mode. By default, ad suppression is off and
--   all ad breaks are filled with ads or slate. When Mode is set to
--   BEHIND_LIVE_EDGE, ad suppression is active and MediaTailor won't fill
--   ad breaks on or behind the ad suppression Value time in the manifest
--   lookback window.
availSuppression_mode :: Lens' AvailSuppression (Maybe Mode)

-- | The URL for the end bumper asset.
bumper_endUrl :: Lens' Bumper (Maybe Text)

-- | The URL for the start bumper asset.
bumper_startUrl :: Lens' Bumper (Maybe Text)

-- | A non-default content delivery network (CDN) to serve ad segments. By
--   default, AWS Elemental MediaTailor uses Amazon CloudFront with default
--   cache settings as its CDN for ad segments. To set up an alternate CDN,
--   create a rule in your CDN for the origin
--   ads.mediatailor.&amp;lt;region&gt;.amazonaws.com. Then specify the
--   rule's name in this AdSegmentUrlPrefix. When AWS Elemental MediaTailor
--   serves a manifest, it reports your CDN as the source for ad segments.
cdnConfiguration_adSegmentUrlPrefix :: Lens' CdnConfiguration (Maybe Text)

-- | A content delivery network (CDN) to cache content segments, so that
--   content requests donâ€™t always have to go to the origin server. First,
--   create a rule in your CDN for the content segment origin server. Then
--   specify the rule's name in this ContentSegmentUrlPrefix. When AWS
--   Elemental MediaTailor serves a manifest, it reports your CDN as the
--   source for content segments.
cdnConfiguration_contentSegmentUrlPrefix :: Lens' CdnConfiguration (Maybe Text)

-- | The timestamp of when the channel was created.
channel_creationTime :: Lens' Channel (Maybe UTCTime)

-- | The timestamp of when the channel was last modified.
channel_lastModifiedTime :: Lens' Channel (Maybe UTCTime)

-- | Contains information about the slate used to fill gaps between
--   programs in the schedule. You must configure FillerSlate if your
--   channel uses an LINEAR PlaybackMode.
channel_fillerSlate :: Lens' Channel (Maybe SlateSource)

-- | The tags to assign to the channel.
channel_tags :: Lens' Channel (Maybe (HashMap Text Text))

-- | Returns the state whether the channel is running or not.
channel_channelState :: Lens' Channel Text

-- | The name of the channel.
channel_channelName :: Lens' Channel Text

-- | The channel's output properties.
channel_outputs :: Lens' Channel [ResponseOutputItem]

-- | The ARN of the channel.
channel_arn :: Lens' Channel Text

-- | The type of playback mode for this channel.
--   
--   LINEAR - Programs play back-to-back only once.
--   
--   LOOP - Programs play back-to-back in an endless loop. When the last
--   program in the schedule plays, playback loops back to the first
--   program in the schedule.
channel_playbackMode :: Lens' Channel Text

-- | The URL generated by MediaTailor to initiate a playback session. The
--   session uses server-side reporting. This setting is ignored in PUT
--   operations.
dashConfiguration_manifestEndpointPrefix :: Lens' DashConfiguration (Maybe Text)

-- | The setting that controls whether MediaTailor handles manifests from
--   the origin server as multi-period manifests or single-period
--   manifests. If your origin server produces single-period manifests, set
--   this to SINGLE_PERIOD. The default setting is MULTI_PERIOD. For
--   multi-period manifests, omit this setting or set it to MULTI_PERIOD.
dashConfiguration_originManifestType :: Lens' DashConfiguration (Maybe OriginManifestType)

-- | The setting that controls whether MediaTailor includes the Location
--   tag in DASH manifests. MediaTailor populates the Location tag with the
--   URL for manifest update requests, to be used by players that don't
--   support sticky redirects. Disable this if you have CDN routing rules
--   set up for accessing MediaTailor manifests, and you are either using
--   client-side reporting or your players support sticky HTTP redirects.
--   Valid values are DISABLED and EMT_DEFAULT. The EMT_DEFAULT setting
--   enables the inclusion of the tag and is the default value.
dashConfiguration_mpdLocation :: Lens' DashConfiguration (Maybe Text)

-- | The setting that controls whether MediaTailor handles manifests from
--   the origin server as multi-period manifests or single-period
--   manifests. If your origin server produces single-period manifests, set
--   this to SINGLE_PERIOD. The default setting is MULTI_PERIOD. For
--   multi-period manifests, omit this setting or set it to MULTI_PERIOD.
dashConfigurationForPut_originManifestType :: Lens' DashConfigurationForPut (Maybe OriginManifestType)

-- | The setting that controls whether MediaTailor includes the Location
--   tag in DASH manifests. MediaTailor populates the Location tag with the
--   URL for manifest update requests, to be used by players that don't
--   support sticky redirects. Disable this if you have CDN routing rules
--   set up for accessing MediaTailor manifests, and you are either using
--   client-side reporting or your players support sticky HTTP redirects.
--   Valid values are DISABLED and EMT_DEFAULT. The EMT_DEFAULT setting
--   enables the inclusion of the tag and is the default value.
dashConfigurationForPut_mpdLocation :: Lens' DashConfigurationForPut (Maybe Text)

-- | Minimum amount of content (measured in seconds) that a player must
--   keep available in the buffer. Minimum value: 2 seconds. Maximum value:
--   60 seconds.
dashPlaylistSettings_minBufferTimeSeconds :: Lens' DashPlaylistSettings (Maybe Int)

-- | Minimum amount of time (in seconds) that the player should wait before
--   requesting updates to the manifest. Minimum value: 2 seconds. Maximum
--   value: 60 seconds.
dashPlaylistSettings_minUpdatePeriodSeconds :: Lens' DashPlaylistSettings (Maybe Int)

-- | Amount of time (in seconds) that the player should be from the live
--   point at the end of the manifest. Minimum value: 2 seconds. Maximum
--   value: 60 seconds.
dashPlaylistSettings_suggestedPresentationDelaySeconds :: Lens' DashPlaylistSettings (Maybe Int)

-- | The total duration (in seconds) of each manifest. Minimum value: 30
--   seconds. Maximum value: 3600 seconds.
dashPlaylistSettings_manifestWindowSeconds :: Lens' DashPlaylistSettings (Maybe Int)

-- | The hostname of the server that will be used to serve segments. This
--   string must include the protocol, such as <b>https://</b>.
defaultSegmentDeliveryConfiguration_baseUrl :: Lens' DefaultSegmentDeliveryConfiguration (Maybe Text)

-- | The URL that is used to initiate a playback session for devices that
--   support Apple HLS. The session uses server-side reporting.
hlsConfiguration_manifestEndpointPrefix :: Lens' HlsConfiguration (Maybe Text)

-- | The total duration (in seconds) of each manifest. Minimum value: 30
--   seconds. Maximum value: 3600 seconds.
hlsPlaylistSettings_manifestWindowSeconds :: Lens' HlsPlaylistSettings (Maybe Int)

-- | The base URL for the source location host server. This string must
--   include the protocol, such as <b>https://</b>.
httpConfiguration_baseUrl :: Lens' HttpConfiguration Text

-- | The relative path to the URL for this VOD source. This is combined
--   with SourceLocation::HttpConfiguration::BaseUrl to form a valid URL.
httpPackageConfiguration_path :: Lens' HttpPackageConfiguration Text

-- | The streaming protocol for this package configuration. Supported
--   values are HLS and DASH.
httpPackageConfiguration_type :: Lens' HttpPackageConfiguration Type

-- | The name of the source group. This has to match one of the
--   Channel::Outputs::SourceGroup.
httpPackageConfiguration_sourceGroup :: Lens' HttpPackageConfiguration Text

-- | The URL for the ad decision server (ADS) for pre-roll ads. This
--   includes the specification of static parameters and placeholders for
--   dynamic parameters. AWS Elemental MediaTailor substitutes
--   player-specific and session-specific parameters as needed when calling
--   the ADS. Alternately, for testing, you can provide a static VAST URL.
--   The maximum length is 25,000 characters.
livePreRollConfiguration_adDecisionServerUrl :: Lens' LivePreRollConfiguration (Maybe Text)

-- | The maximum allowed duration for the pre-roll ad avail. AWS Elemental
--   MediaTailor won't play pre-roll ads to exceed this duration,
--   regardless of the total duration of ads that the ADS returns.
livePreRollConfiguration_maxDurationSeconds :: Lens' LivePreRollConfiguration (Maybe Int)

-- | The percentage of session logs that MediaTailor sends to your
--   Cloudwatch Logs account. For example, if your playback configuration
--   has 1000 sessions and percentEnabled is set to 60, MediaTailor sends
--   logs for 600 of the sessions to CloudWatch Logs. MediaTailor decides
--   at random which of the playback configuration sessions to send logs
--   for. If you want to view logs for a specific session, you can use the
--   <a>debug log mode</a>.
--   
--   Valid values: 0 - 100
logConfiguration_percentEnabled :: Lens' LogConfiguration Int

-- | For HLS, when set to true, MediaTailor passes through EXT-X-CUE-IN,
--   EXT-X-CUE-OUT, and EXT-X-SPLICEPOINT-SCTE35 ad markers from the origin
--   manifest to the MediaTailor personalized manifest.
--   
--   No logic is applied to these ad markers. For example, if EXT-X-CUE-OUT
--   has a value of 60, but no ads are filled for that ad break,
--   MediaTailor will not set the value to 0.
manifestProcessingRules_adMarkerPassthrough :: Lens' ManifestProcessingRules (Maybe AdMarkerPassthrough)

-- | The URL that the player accesses to get a manifest from AWS Elemental
--   MediaTailor.
playbackConfiguration_playbackEndpointPrefix :: Lens' PlaybackConfiguration (Maybe Text)

-- | The configuration for HLS content.
playbackConfiguration_hlsConfiguration :: Lens' PlaybackConfiguration (Maybe HlsConfiguration)

-- | Defines the maximum duration of underfilled ad time (in seconds)
--   allowed in an ad break. If the duration of underfilled ad time exceeds
--   the personalization threshold, then the personalization of the ad
--   break is abandoned and the underlying content is shown. This feature
--   applies to <i>ad replacement</i> in live and VOD streams, rather than
--   ad insertion, because it relies on an underlying content stream. For
--   more information about ad break behavior, including ad replacement and
--   insertion, see <a>Ad Behavior in AWS Elemental MediaTailor</a>.
playbackConfiguration_personalizationThresholdSeconds :: Lens' PlaybackConfiguration (Maybe Natural)

-- | The Amazon Resource Name (ARN) for the playback configuration.
playbackConfiguration_playbackConfigurationArn :: Lens' PlaybackConfiguration (Maybe Text)

-- | The configuration for avail suppression, also known as ad suppression.
--   For more information about ad suppression, see <a>Ad Suppression</a>.
playbackConfiguration_availSuppression :: Lens' PlaybackConfiguration (Maybe AvailSuppression)

-- | The configuration for bumpers. Bumpers are short audio or video clips
--   that play at the start or before the end of an ad break. To learn more
--   about bumpers, see <a>Bumpers</a>.
playbackConfiguration_bumper :: Lens' PlaybackConfiguration (Maybe Bumper)

-- | The URL for the ad decision server (ADS). This includes the
--   specification of static parameters and placeholders for dynamic
--   parameters. AWS Elemental MediaTailor substitutes player-specific and
--   session-specific parameters as needed when calling the ADS.
--   Alternately, for testing you can provide a static VAST URL. The
--   maximum length is 25,000 characters.
playbackConfiguration_adDecisionServerUrl :: Lens' PlaybackConfiguration (Maybe Text)

-- | The URL prefix for the parent manifest for the stream, minus the asset
--   ID. The maximum length is 512 characters.
playbackConfiguration_videoContentSourceUrl :: Lens' PlaybackConfiguration (Maybe Text)

-- | The configuration for a DASH source.
playbackConfiguration_dashConfiguration :: Lens' PlaybackConfiguration (Maybe DashConfiguration)

-- | The configuration for manifest processing rules. Manifest processing
--   rules enable customization of the personalized manifests created by
--   MediaTailor.
playbackConfiguration_manifestProcessingRules :: Lens' PlaybackConfiguration (Maybe ManifestProcessingRules)

-- | The Amazon CloudWatch log settings for a playback configuration.
playbackConfiguration_logConfiguration :: Lens' PlaybackConfiguration (Maybe LogConfiguration)

-- | The configuration for pre-roll ad insertion.
playbackConfiguration_livePreRollConfiguration :: Lens' PlaybackConfiguration (Maybe LivePreRollConfiguration)

-- | The identifier for the playback configuration.
playbackConfiguration_name :: Lens' PlaybackConfiguration (Maybe Text)

-- | The URL that the player uses to initialize a session that uses
--   client-side reporting.
playbackConfiguration_sessionInitializationEndpointPrefix :: Lens' PlaybackConfiguration (Maybe Text)

-- | The player parameters and aliases used as dynamic variables during
--   session initialization. For more information, see <a>Domain
--   Variables</a>.
playbackConfiguration_configurationAliases :: Lens' PlaybackConfiguration (Maybe (HashMap Text (HashMap Text Text)))

-- | The name that is used to associate this playback configuration with a
--   custom transcode profile. This overrides the dynamic transcoding
--   defaults of MediaTailor. Use this only if you have already set up
--   custom profiles with the help of AWS Support.
playbackConfiguration_transcodeProfileName :: Lens' PlaybackConfiguration (Maybe Text)

-- | The tags to assign to the playback configuration.
playbackConfiguration_tags :: Lens' PlaybackConfiguration (Maybe (HashMap Text Text))

-- | The URL for a video asset to transcode and use to fill in time that's
--   not used by ads. AWS Elemental MediaTailor shows the slate to fill in
--   gaps in media content. Configuring the slate is optional for non-VPAID
--   playback configurations. For VPAID, the slate is required because
--   MediaTailor provides it in the slots designated for dynamic ad
--   content. The slate must be a high-quality asset that contains both
--   audio and video.
playbackConfiguration_slateAdUrl :: Lens' PlaybackConfiguration (Maybe Text)

-- | The configuration for using a content delivery network (CDN), like
--   Amazon CloudFront, for content and ad segment management.
playbackConfiguration_cdnConfiguration :: Lens' PlaybackConfiguration (Maybe CdnConfiguration)

-- | The time when prefetched ads are considered for use in an ad break. If
--   you don't specify StartTime, the prefetched ads are available after
--   MediaTailor retrives them from the ad decision server.
prefetchConsumption_startTime :: Lens' PrefetchConsumption (Maybe UTCTime)

-- | If you only want MediaTailor to insert prefetched ads into avails (ad
--   breaks) that match specific dynamic variables, such as scte.event_id,
--   set the avail matching criteria.
prefetchConsumption_availMatchingCriteria :: Lens' PrefetchConsumption (Maybe [AvailMatchingCriteria])

-- | The time when MediaTailor no longer considers the prefetched ads for
--   use in an ad break. MediaTailor automatically deletes prefetch
--   schedules no less than seven days after the end time. If you'd like to
--   manually delete the prefetch schedule, you can call
--   DeletePrefetchSchedule.
prefetchConsumption_endTime :: Lens' PrefetchConsumption UTCTime

-- | The time when prefetch retrievals can start for this break. Ad
--   prefetching will be attempted for manifest requests that occur at or
--   after this time. Defaults to the current time. If not specified, the
--   prefetch retrieval starts as soon as possible.
prefetchRetrieval_startTime :: Lens' PrefetchRetrieval (Maybe UTCTime)

-- | The dynamic variables to use for substitution during prefetch requests
--   to the ad decision server (ADS).
--   
--   You intially configure <a>dynamic variables</a> for the ADS URL when
--   you set up your playback configuration. When you specify
--   DynamicVariables for prefetch retrieval, MediaTailor includes the
--   dynamic variables in the request to the ADS.
prefetchRetrieval_dynamicVariables :: Lens' PrefetchRetrieval (Maybe (HashMap Text Text))

-- | The time when prefetch retrieval ends for the ad break. Prefetching
--   will be attempted for manifest requests that occur at or before this
--   time.
prefetchRetrieval_endTime :: Lens' PrefetchRetrieval UTCTime

-- | An optional stream identifier that you can specify in order to
--   prefetch for multiple streams that use the same playback
--   configuration.
prefetchSchedule_streamId :: Lens' PrefetchSchedule (Maybe Text)

-- | A complex type that contains settings for prefetch retrieval from the
--   ad decision server (ADS).
prefetchSchedule_retrieval :: Lens' PrefetchSchedule PrefetchRetrieval

-- | Consumption settings determine how, and when, MediaTailor places the
--   prefetched ads into ad breaks. Ad consumption occurs within a span of
--   time that you define, called a <i>consumption window</i>. You can
--   designate which ad breaks that MediaTailor fills with prefetch ads by
--   setting avail matching criteria.
prefetchSchedule_consumption :: Lens' PrefetchSchedule PrefetchConsumption

-- | The Amazon Resource Name (ARN) of the prefetch schedule.
prefetchSchedule_arn :: Lens' PrefetchSchedule Text

-- | The name of the playback configuration to create the prefetch schedule
--   for.
prefetchSchedule_playbackConfigurationName :: Lens' PrefetchSchedule Text

-- | The name of the prefetch schedule. The name must be unique among all
--   prefetch schedules that are associated with the specified playback
--   configuration.
prefetchSchedule_name :: Lens' PrefetchSchedule Text

-- | HLS playlist configuration parameters.
requestOutputItem_hlsPlaylistSettings :: Lens' RequestOutputItem (Maybe HlsPlaylistSettings)

-- | DASH manifest configuration parameters.
requestOutputItem_dashPlaylistSettings :: Lens' RequestOutputItem (Maybe DashPlaylistSettings)

-- | The name of the manifest for the channel. The name appears in the
--   PlaybackUrl.
requestOutputItem_manifestName :: Lens' RequestOutputItem Text

-- | A string used to match which HttpPackageConfiguration is used for each
--   VodSource.
requestOutputItem_sourceGroup :: Lens' RequestOutputItem Text

-- | HLS manifest configuration settings.
responseOutputItem_hlsPlaylistSettings :: Lens' ResponseOutputItem (Maybe HlsPlaylistSettings)

-- | DASH manifest configuration settings.
responseOutputItem_dashPlaylistSettings :: Lens' ResponseOutputItem (Maybe DashPlaylistSettings)

-- | The name of the manifest for the channel that will appear in the
--   channel output's playback URL.
responseOutputItem_manifestName :: Lens' ResponseOutputItem Text

-- | The URL used for playback by content players.
responseOutputItem_playbackUrl :: Lens' ResponseOutputItem Text

-- | A string used to associate a package configuration source group with a
--   channel output.
responseOutputItem_sourceGroup :: Lens' ResponseOutputItem Text

-- | The name of the source location containing the VOD source used for the
--   ad break.
scheduleAdBreak_sourceLocationName :: Lens' ScheduleAdBreak (Maybe Text)

-- | The approximate duration of the ad break, in seconds.
scheduleAdBreak_approximateDurationSeconds :: Lens' ScheduleAdBreak (Maybe Integer)

-- | The name of the VOD source used for the ad break.
scheduleAdBreak_vodSourceName :: Lens' ScheduleAdBreak (Maybe Text)

-- | The approximate time that the ad will start playing.
scheduleAdBreak_approximateStartTime :: Lens' ScheduleAdBreak (Maybe UTCTime)

-- | Program transition configurations.
scheduleConfiguration_transition :: Lens' ScheduleConfiguration Transition

-- | The schedule's ad break properties.
scheduleEntry_scheduleAdBreaks :: Lens' ScheduleEntry (Maybe [ScheduleAdBreak])

-- | The approximate duration of this program, in seconds.
scheduleEntry_approximateDurationSeconds :: Lens' ScheduleEntry (Maybe Integer)

-- | The approximate time that the program will start playing.
scheduleEntry_approximateStartTime :: Lens' ScheduleEntry (Maybe UTCTime)

-- | The type of schedule entry.
--   
--   Valid values: PROGRAM or FILLER_SLATE.
scheduleEntry_scheduleEntryType :: Lens' ScheduleEntry (Maybe ScheduleEntryType)

-- | The name of the VOD source.
scheduleEntry_vodSourceName :: Lens' ScheduleEntry Text

-- | The name of the channel that uses this schedule.
scheduleEntry_channelName :: Lens' ScheduleEntry Text

-- | The name of the source location.
scheduleEntry_sourceLocationName :: Lens' ScheduleEntry Text

-- | The ARN of the program.
scheduleEntry_arn :: Lens' ScheduleEntry Text

-- | The name of the program.
scheduleEntry_programName :: Lens' ScheduleEntry Text

-- | The name of the HTTP header used to supply the access token in
--   requests to the source location.
secretsManagerAccessTokenConfiguration_headerName :: Lens' SecretsManagerAccessTokenConfiguration (Maybe Text)

-- | The AWS Secrets Manager <a>SecretString</a> key associated with the
--   access token. MediaTailor uses the key to look up SecretString key and
--   value pair containing the access token.
secretsManagerAccessTokenConfiguration_secretStringKey :: Lens' SecretsManagerAccessTokenConfiguration (Maybe Text)

-- | The Amazon Resource Name (ARN) of the AWS Secrets Manager secret that
--   contains the access token.
secretsManagerAccessTokenConfiguration_secretArn :: Lens' SecretsManagerAccessTokenConfiguration (Maybe Text)

-- | The name of the source location where the slate VOD source is stored.
slateSource_sourceLocationName :: Lens' SlateSource (Maybe Text)

-- | The slate VOD source name. The VOD source must already exist in a
--   source location before it can be used for slate.
slateSource_vodSourceName :: Lens' SlateSource (Maybe Text)

-- | The timestamp that indicates when the source location was created.
sourceLocation_creationTime :: Lens' SourceLocation (Maybe UTCTime)

-- | The timestamp that indicates when the source location was last
--   modified.
sourceLocation_lastModifiedTime :: Lens' SourceLocation (Maybe UTCTime)

-- | The access configuration for the source location.
sourceLocation_accessConfiguration :: Lens' SourceLocation (Maybe AccessConfiguration)

-- | The default segment delivery configuration.
sourceLocation_defaultSegmentDeliveryConfiguration :: Lens' SourceLocation (Maybe DefaultSegmentDeliveryConfiguration)

-- | The tags assigned to the source location.
sourceLocation_tags :: Lens' SourceLocation (Maybe (HashMap Text Text))

-- | The name of the source location.
sourceLocation_sourceLocationName :: Lens' SourceLocation Text

-- | The HTTP configuration for the source location.
sourceLocation_httpConfiguration :: Lens' SourceLocation HttpConfiguration

-- | The ARN of the SourceLocation.
sourceLocation_arn :: Lens' SourceLocation Text

-- | This is written to splice_insert.avail_num, as defined in section
--   9.7.3.1 of the SCTE-35 specification. The default value is 0. Values
--   must be between 0 and 256, inclusive.
spliceInsertMessage_availNum :: Lens' SpliceInsertMessage (Maybe Int)

-- | This is written to splice_insert.unique_program_id, as defined in
--   section 9.7.3.1 of the SCTE-35 specification. The default value is 0.
--   Values must be between 0 and 256, inclusive.
spliceInsertMessage_uniqueProgramId :: Lens' SpliceInsertMessage (Maybe Int)

-- | This is written to splice_insert.avails_expected, as defined in
--   section 9.7.3.1 of the SCTE-35 specification. The default value is 0.
--   Values must be between 0 and 256, inclusive.
spliceInsertMessage_availsExpected :: Lens' SpliceInsertMessage (Maybe Int)

-- | This is written to splice_insert.splice_event_id, as defined in
--   section 9.7.3.1 of the SCTE-35 specification. The default value is 1.
spliceInsertMessage_spliceEventId :: Lens' SpliceInsertMessage (Maybe Int)

-- | The date and time that the program is scheduled to start, in epoch
--   milliseconds.
transition_scheduledStartTimeMillis :: Lens' Transition (Maybe Integer)

-- | The name of the program that this program will be inserted next to, as
--   defined by RelativePosition.
transition_relativeProgram :: Lens' Transition (Maybe Text)

-- | Defines when the program plays in the schedule. You can set the value
--   to ABSOLUTE or RELATIVE.
--   
--   ABSOLUTE - The program plays at a specific wall clock time. This
--   setting can only be used for channels using the LINEAR PlaybackMode.
--   
--   Note the following considerations when using ABSOLUTE transitions:
--   
--   If the preceding program in the schedule has a duration that extends
--   past the wall clock time, MediaTailor truncates the preceding program
--   on a common segment boundary.
--   
--   If there are gaps in playback, MediaTailor plays the FillerSlate you
--   configured for your linear channel.
--   
--   RELATIVE - The program is inserted into the schedule either before or
--   after a program that you specify via RelativePosition.
transition_type :: Lens' Transition Text

-- | The position where this program will be inserted relative to the
--   RelativePosition.
transition_relativePosition :: Lens' Transition RelativePosition

-- | The timestamp that indicates when the VOD source was created.
vodSource_creationTime :: Lens' VodSource (Maybe UTCTime)

-- | The timestamp that indicates when the VOD source was last modified.
vodSource_lastModifiedTime :: Lens' VodSource (Maybe UTCTime)

-- | The tags assigned to the VOD source.
vodSource_tags :: Lens' VodSource (Maybe (HashMap Text Text))

-- | The name of the VOD source.
vodSource_vodSourceName :: Lens' VodSource Text

-- | The name of the source location that the VOD source is associated
--   with.
vodSource_sourceLocationName :: Lens' VodSource Text

-- | The HTTP package configurations for the VOD source.
vodSource_httpPackageConfigurations :: Lens' VodSource [HttpPackageConfiguration]

-- | The ARN for the VOD source.
vodSource_arn :: Lens' VodSource Text


module Network.AWS.MediaTailor.Waiters


-- | Derived from API version <tt>2018-04-23</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   Use the AWS Elemental MediaTailor SDKs and CLI to configure scalable
--   ad insertion and linear channels. With MediaTailor, you can assemble
--   existing content into a linear stream and serve targeted ads to
--   viewers while maintaining broadcast quality in over-the-top (OTT)
--   video applications. For information about using the service, including
--   detailed information about the settings covered in this guide, see the
--   <a>AWS Elemental MediaTailor User Guide</a>.
--   
--   Through the SDKs and the CLI you manage AWS Elemental MediaTailor
--   configurations and channels the same as you do through the console.
--   For example, you specify ad insertion behavior and mapping information
--   for the origin server and the ad decision server (ADS).
module Network.AWS.MediaTailor

-- | API version <tt>2018-04-23</tt> of the Amazon MediaTailor SDK
--   configuration.
defaultService :: Service

-- | Invalid request parameters.
_BadRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newCreateSourceLocation</a> smart constructor.
data CreateSourceLocation
CreateSourceLocation' :: Maybe AccessConfiguration -> Maybe DefaultSegmentDeliveryConfiguration -> Maybe (HashMap Text Text) -> Text -> HttpConfiguration -> CreateSourceLocation

-- | Create a value of <a>CreateSourceLocation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accessConfiguration:CreateSourceLocation'</a>,
--   <a>createSourceLocation_accessConfiguration</a> - Access configuration
--   parameters. Configures the type of authentication used to access
--   content from your source location.
--   
--   <a>$sel:defaultSegmentDeliveryConfiguration:CreateSourceLocation'</a>,
--   <a>createSourceLocation_defaultSegmentDeliveryConfiguration</a> - The
--   optional configuration for the server that serves segments.
--   
--   <a>$sel:tags:CreateSourceLocation'</a>,
--   <a>createSourceLocation_tags</a> - The tags to assign to the source
--   location.
--   
--   <a>$sel:sourceLocationName:CreateSourceLocation'</a>,
--   <a>createSourceLocation_sourceLocationName</a> - The identifier for
--   the source location you are working on.
--   
--   <a>$sel:httpConfiguration:CreateSourceLocation'</a>,
--   <a>createSourceLocation_httpConfiguration</a> - The source's HTTP
--   package configurations.
newCreateSourceLocation :: Text -> HttpConfiguration -> CreateSourceLocation

-- | <i>See:</i> <a>newCreateSourceLocationResponse</a> smart constructor.
data CreateSourceLocationResponse
CreateSourceLocationResponse' :: Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe HttpConfiguration -> Maybe POSIX -> Maybe AccessConfiguration -> Maybe DefaultSegmentDeliveryConfiguration -> Maybe (HashMap Text Text) -> Int -> CreateSourceLocationResponse

-- | Create a value of <a>CreateSourceLocationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:CreateSourceLocationResponse'</a>,
--   <a>createSourceLocationResponse_creationTime</a> - The timestamp that
--   indicates when the source location was created.
--   
--   <a>$sel:sourceLocationName:CreateSourceLocation'</a>,
--   <a>createSourceLocationResponse_sourceLocationName</a> - The name of
--   the source location.
--   
--   <a>$sel:arn:CreateSourceLocationResponse'</a>,
--   <a>createSourceLocationResponse_arn</a> - The ARN of the source
--   location.
--   
--   <a>$sel:httpConfiguration:CreateSourceLocation'</a>,
--   <a>createSourceLocationResponse_httpConfiguration</a> - The HTTP
--   package configuration settings for the source location.
--   
--   <a>$sel:lastModifiedTime:CreateSourceLocationResponse'</a>,
--   <a>createSourceLocationResponse_lastModifiedTime</a> - The timestamp
--   that indicates when the source location was last modified.
--   
--   <a>$sel:accessConfiguration:CreateSourceLocation'</a>,
--   <a>createSourceLocationResponse_accessConfiguration</a> - The access
--   configuration for the source location.
--   
--   <a>$sel:defaultSegmentDeliveryConfiguration:CreateSourceLocation'</a>,
--   <a>createSourceLocationResponse_defaultSegmentDeliveryConfiguration</a>
--   - The default segment delivery configuration settings.
--   
--   <a>$sel:tags:CreateSourceLocation'</a>,
--   <a>createSourceLocationResponse_tags</a> - The tags assigned to the
--   source location.
--   
--   <a>$sel:httpStatus:CreateSourceLocationResponse'</a>,
--   <a>createSourceLocationResponse_httpStatus</a> - The response's http
--   status code.
newCreateSourceLocationResponse :: Int -> CreateSourceLocationResponse

-- | <i>See:</i> <a>newListPrefetchSchedules</a> smart constructor.
data ListPrefetchSchedules
ListPrefetchSchedules' :: Maybe Text -> Maybe Natural -> Maybe Text -> Text -> ListPrefetchSchedules

-- | Create a value of <a>ListPrefetchSchedules</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListPrefetchSchedules'</a>,
--   <a>listPrefetchSchedules_nextToken</a> - (Optional) If the playback
--   configuration has more than MaxResults prefetch schedules, use
--   NextToken to get the second and subsequent pages of results.
--   
--   For the first ListPrefetchSchedulesRequest request, omit this value.
--   
--   For the second and subsequent requests, get the value of NextToken
--   from the previous response and specify that value for NextToken in the
--   request.
--   
--   If the previous response didn't include a NextToken element, there are
--   no more prefetch schedules to get.
--   
--   <a>$sel:maxResults:ListPrefetchSchedules'</a>,
--   <a>listPrefetchSchedules_maxResults</a> - The maximum number of
--   prefetch schedules that you want MediaTailor to return in response to
--   the current request. If the playback configuration has more than
--   MaxResults prefetch schedules, use the value of NextToken in the
--   response to get the next page of results.
--   
--   <a>$sel:streamId:ListPrefetchSchedules'</a>,
--   <a>listPrefetchSchedules_streamId</a> - An optional filtering
--   parameter whereby MediaTailor filters the prefetch schedules to
--   include only specific streams.
--   
--   <a>$sel:playbackConfigurationName:ListPrefetchSchedules'</a>,
--   <a>listPrefetchSchedules_playbackConfigurationName</a> - The name of
--   the playback configuration.
newListPrefetchSchedules :: Text -> ListPrefetchSchedules

-- | <i>See:</i> <a>newListPrefetchSchedulesResponse</a> smart constructor.
data ListPrefetchSchedulesResponse
ListPrefetchSchedulesResponse' :: Maybe [PrefetchSchedule] -> Maybe Text -> Int -> ListPrefetchSchedulesResponse

-- | Create a value of <a>ListPrefetchSchedulesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:ListPrefetchSchedulesResponse'</a>,
--   <a>listPrefetchSchedulesResponse_items</a> - Lists the prefetch
--   schedules. An empty Items list doesn't mean there aren't more items to
--   fetch, just that that page was empty.
--   
--   <a>$sel:nextToken:ListPrefetchSchedules'</a>,
--   <a>listPrefetchSchedulesResponse_nextToken</a> - The value that you
--   will use forNextToken in the next ListPrefetchSchedulesRequest
--   request.
--   
--   <a>$sel:httpStatus:ListPrefetchSchedulesResponse'</a>,
--   <a>listPrefetchSchedulesResponse_httpStatus</a> - The response's http
--   status code.
newListPrefetchSchedulesResponse :: Int -> ListPrefetchSchedulesResponse

-- | <i>See:</i> <a>newDeletePrefetchSchedule</a> smart constructor.
data DeletePrefetchSchedule
DeletePrefetchSchedule' :: Text -> Text -> DeletePrefetchSchedule

-- | Create a value of <a>DeletePrefetchSchedule</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeletePrefetchSchedule'</a>,
--   <a>deletePrefetchSchedule_name</a> - The identifier for the playback
--   configuration.
--   
--   <a>$sel:playbackConfigurationName:DeletePrefetchSchedule'</a>,
--   <a>deletePrefetchSchedule_playbackConfigurationName</a> - The name of
--   the playback configuration.
newDeletePrefetchSchedule :: Text -> Text -> DeletePrefetchSchedule

-- | <i>See:</i> <a>newDeletePrefetchScheduleResponse</a> smart
--   constructor.
data DeletePrefetchScheduleResponse
DeletePrefetchScheduleResponse' :: Int -> DeletePrefetchScheduleResponse

-- | Create a value of <a>DeletePrefetchScheduleResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeletePrefetchScheduleResponse'</a>,
--   <a>deletePrefetchScheduleResponse_httpStatus</a> - The response's http
--   status code.
newDeletePrefetchScheduleResponse :: Int -> DeletePrefetchScheduleResponse

-- | <i>See:</i> <a>newListAlerts</a> smart constructor.
data ListAlerts
ListAlerts' :: Maybe Text -> Maybe Natural -> Text -> ListAlerts

-- | Create a value of <a>ListAlerts</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListAlerts'</a>, <a>listAlerts_nextToken</a> -
--   Pagination token from the GET list request. Use the token to fetch the
--   next page of results.
--   
--   <a>$sel:maxResults:ListAlerts'</a>, <a>listAlerts_maxResults</a> -
--   Upper bound on number of records to return. The maximum number of
--   results is 100.
--   
--   <a>$sel:resourceArn:ListAlerts'</a>, <a>listAlerts_resourceArn</a> -
--   The Amazon Resource Name (ARN) of the resource.
newListAlerts :: Text -> ListAlerts

-- | <i>See:</i> <a>newListAlertsResponse</a> smart constructor.
data ListAlertsResponse
ListAlertsResponse' :: Maybe [Alert] -> Maybe Text -> Int -> ListAlertsResponse

-- | Create a value of <a>ListAlertsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:ListAlertsResponse'</a>, <a>listAlertsResponse_items</a>
--   - An array of alerts that are associated with this resource.
--   
--   <a>$sel:nextToken:ListAlerts'</a>, <a>listAlertsResponse_nextToken</a>
--   - Pagination token from the list request. Use the token to fetch the
--   next page of results.
--   
--   <a>$sel:httpStatus:ListAlertsResponse'</a>,
--   <a>listAlertsResponse_httpStatus</a> - The response's http status
--   code.
newListAlertsResponse :: Int -> ListAlertsResponse

-- | <i>See:</i> <a>newListChannels</a> smart constructor.
data ListChannels
ListChannels' :: Maybe Text -> Maybe Natural -> ListChannels

-- | Create a value of <a>ListChannels</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListChannels'</a>, <a>listChannels_nextToken</a> -
--   Pagination token from the GET list request. Use the token to fetch the
--   next page of results.
--   
--   <a>$sel:maxResults:ListChannels'</a>, <a>listChannels_maxResults</a> -
--   Upper bound on number of records to return. The maximum number of
--   results is 100.
newListChannels :: ListChannels

-- | <i>See:</i> <a>newListChannelsResponse</a> smart constructor.
data ListChannelsResponse
ListChannelsResponse' :: Maybe [Channel] -> Maybe Text -> Int -> ListChannelsResponse

-- | Create a value of <a>ListChannelsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:ListChannelsResponse'</a>,
--   <a>listChannelsResponse_items</a> - An array of channels that are
--   associated with this account.
--   
--   <a>$sel:nextToken:ListChannels'</a>,
--   <a>listChannelsResponse_nextToken</a> - Pagination token returned by
--   the list request when results exceed the maximum allowed. Use the
--   token to fetch the next page of results.
--   
--   <a>$sel:httpStatus:ListChannelsResponse'</a>,
--   <a>listChannelsResponse_httpStatus</a> - The response's http status
--   code.
newListChannelsResponse :: Int -> ListChannelsResponse

-- | <i>See:</i> <a>newCreatePrefetchSchedule</a> smart constructor.
data CreatePrefetchSchedule
CreatePrefetchSchedule' :: Maybe Text -> Text -> Text -> PrefetchConsumption -> PrefetchRetrieval -> CreatePrefetchSchedule

-- | Create a value of <a>CreatePrefetchSchedule</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:streamId:CreatePrefetchSchedule'</a>,
--   <a>createPrefetchSchedule_streamId</a> - An optional stream identifier
--   that MediaTailor uses to prefetch ads for multiple streams that use
--   the same playback configuration. If StreamId is specified, MediaTailor
--   returns all of the prefetch schedules with an exact match on StreamId.
--   If not specified, MediaTailor returns all of the prefetch schedules
--   for the playback configuration, regardless of StreamId.
--   
--   <a>$sel:name:CreatePrefetchSchedule'</a>,
--   <a>createPrefetchSchedule_name</a> - The identifier for the playback
--   configuration.
--   
--   <a>$sel:playbackConfigurationName:CreatePrefetchSchedule'</a>,
--   <a>createPrefetchSchedule_playbackConfigurationName</a> - The name of
--   the playback configuration.
--   
--   <a>$sel:consumption:CreatePrefetchSchedule'</a>,
--   <a>createPrefetchSchedule_consumption</a> - The configuration settings
--   for MediaTailor's <i>consumption</i> of the prefetched ads from the ad
--   decision server. Each consumption configuration contains an end time
--   and an optional start time that define the <i>consumption window</i>.
--   Prefetch schedules automatically expire no earlier than seven days
--   after the end time.
--   
--   <a>$sel:retrieval:CreatePrefetchSchedule'</a>,
--   <a>createPrefetchSchedule_retrieval</a> - The configuration settings
--   for retrieval of prefetched ads from the ad decision server. Only one
--   set of prefetched ads will be retrieved and subsequently consumed for
--   each ad break.
newCreatePrefetchSchedule :: Text -> Text -> PrefetchConsumption -> PrefetchRetrieval -> CreatePrefetchSchedule

-- | <i>See:</i> <a>newCreatePrefetchScheduleResponse</a> smart
--   constructor.
data CreatePrefetchScheduleResponse
CreatePrefetchScheduleResponse' :: Maybe Text -> Maybe Text -> Maybe PrefetchRetrieval -> Maybe Text -> Maybe PrefetchConsumption -> Maybe Text -> Int -> CreatePrefetchScheduleResponse

-- | Create a value of <a>CreatePrefetchScheduleResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:CreatePrefetchScheduleResponse'</a>,
--   <a>createPrefetchScheduleResponse_arn</a> - The Amazon Resource Name
--   (ARN) of the prefetch schedule.
--   
--   <a>$sel:playbackConfigurationName:CreatePrefetchSchedule'</a>,
--   <a>createPrefetchScheduleResponse_playbackConfigurationName</a> - The
--   name of the playback configuration to create the prefetch schedule
--   for.
--   
--   <a>$sel:retrieval:CreatePrefetchSchedule'</a>,
--   <a>createPrefetchScheduleResponse_retrieval</a> - A complex type that
--   contains settings for prefetch retrieval from the ad decision server
--   (ADS).
--   
--   <a>$sel:name:CreatePrefetchSchedule'</a>,
--   <a>createPrefetchScheduleResponse_name</a> - The name of the prefetch
--   schedule. The name must be unique among all prefetch schedules that
--   are associated with the specified playback configuration.
--   
--   <a>$sel:consumption:CreatePrefetchSchedule'</a>,
--   <a>createPrefetchScheduleResponse_consumption</a> - Consumption
--   settings determine how, and when, MediaTailor places the prefetched
--   ads into ad breaks. Ad consumption occurs within a span of time that
--   you define, called a <i>consumption window</i>. You can designate
--   which ad breaks that MediaTailor fills with prefetch ads by setting
--   avail matching criteria.
--   
--   <a>$sel:streamId:CreatePrefetchSchedule'</a>,
--   <a>createPrefetchScheduleResponse_streamId</a> - An optional stream
--   identifier that you can specify in order to prefetch for multiple
--   streams that use the same playback configuration.
--   
--   <a>$sel:httpStatus:CreatePrefetchScheduleResponse'</a>,
--   <a>createPrefetchScheduleResponse_httpStatus</a> - The response's http
--   status code.
newCreatePrefetchScheduleResponse :: Int -> CreatePrefetchScheduleResponse

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The Amazon Resource Name
--   (ARN) for the playback configuration. You can get this from the
--   response to any playback configuration request.
newListTagsForResource :: Text -> ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe (HashMap Text Text) -> Int -> ListTagsForResourceResponse

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - A comma-separated list of
--   tag key:value pairs.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | <i>See:</i> <a>newDeleteChannel</a> smart constructor.
data DeleteChannel
DeleteChannel' :: Text -> DeleteChannel

-- | Create a value of <a>DeleteChannel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelName:DeleteChannel'</a>,
--   <a>deleteChannel_channelName</a> - The identifier for the channel you
--   are working on.
newDeleteChannel :: Text -> DeleteChannel

-- | <i>See:</i> <a>newDeleteChannelResponse</a> smart constructor.
data DeleteChannelResponse
DeleteChannelResponse' :: Int -> DeleteChannelResponse

-- | Create a value of <a>DeleteChannelResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteChannelResponse'</a>,
--   <a>deleteChannelResponse_httpStatus</a> - The response's http status
--   code.
newDeleteChannelResponse :: Int -> DeleteChannelResponse

-- | <i>See:</i> <a>newUpdateChannel</a> smart constructor.
data UpdateChannel
UpdateChannel' :: Text -> [RequestOutputItem] -> UpdateChannel

-- | Create a value of <a>UpdateChannel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelName:UpdateChannel'</a>,
--   <a>updateChannel_channelName</a> - The identifier for the channel you
--   are working on.
--   
--   <a>$sel:outputs:UpdateChannel'</a>, <a>updateChannel_outputs</a> - The
--   channel's output properties.
newUpdateChannel :: Text -> UpdateChannel

-- | <i>See:</i> <a>newUpdateChannelResponse</a> smart constructor.
data UpdateChannelResponse
UpdateChannelResponse' :: Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe [ResponseOutputItem] -> Maybe ChannelState -> Maybe SlateSource -> Maybe (HashMap Text Text) -> Int -> UpdateChannelResponse

-- | Create a value of <a>UpdateChannelResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:UpdateChannelResponse'</a>,
--   <a>updateChannelResponse_creationTime</a> - The timestamp of when the
--   channel was created.
--   
--   <a>$sel:arn:UpdateChannelResponse'</a>,
--   <a>updateChannelResponse_arn</a> - The ARN of the channel.
--   
--   <a>$sel:lastModifiedTime:UpdateChannelResponse'</a>,
--   <a>updateChannelResponse_lastModifiedTime</a> - The timestamp of when
--   the channel was last modified.
--   
--   <a>$sel:playbackMode:UpdateChannelResponse'</a>,
--   <a>updateChannelResponse_playbackMode</a> - The channel's playback
--   mode.
--   
--   <a>$sel:channelName:UpdateChannel'</a>,
--   <a>updateChannelResponse_channelName</a> - The name of the channel.
--   
--   <a>$sel:outputs:UpdateChannel'</a>,
--   <a>updateChannelResponse_outputs</a> - The channel's output
--   properties.
--   
--   <a>$sel:channelState:UpdateChannelResponse'</a>,
--   <a>updateChannelResponse_channelState</a> - Indicates whether the
--   channel is in a running state or not.
--   
--   <a>$sel:fillerSlate:UpdateChannelResponse'</a>,
--   <a>updateChannelResponse_fillerSlate</a> - Contains information about
--   the slate used to fill gaps between programs in the schedule.
--   
--   <a>$sel:tags:UpdateChannelResponse'</a>,
--   <a>updateChannelResponse_tags</a> - The tags assigned to the channel.
--   
--   <a>$sel:httpStatus:UpdateChannelResponse'</a>,
--   <a>updateChannelResponse_httpStatus</a> - The response's http status
--   code.
newUpdateChannelResponse :: Int -> UpdateChannelResponse

-- | <i>See:</i> <a>newGetChannelPolicy</a> smart constructor.
data GetChannelPolicy
GetChannelPolicy' :: Text -> GetChannelPolicy

-- | Create a value of <a>GetChannelPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelName:GetChannelPolicy'</a>,
--   <a>getChannelPolicy_channelName</a> - The identifier for the channel
--   you are working on.
newGetChannelPolicy :: Text -> GetChannelPolicy

-- | <i>See:</i> <a>newGetChannelPolicyResponse</a> smart constructor.
data GetChannelPolicyResponse
GetChannelPolicyResponse' :: Maybe Text -> Int -> GetChannelPolicyResponse

-- | Create a value of <a>GetChannelPolicyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policy:GetChannelPolicyResponse'</a>,
--   <a>getChannelPolicyResponse_policy</a> - The IAM policy for the
--   channel.
--   
--   <a>$sel:httpStatus:GetChannelPolicyResponse'</a>,
--   <a>getChannelPolicyResponse_httpStatus</a> - The response's http
--   status code.
newGetChannelPolicyResponse :: Int -> GetChannelPolicyResponse

-- | <i>See:</i> <a>newDescribeVodSource</a> smart constructor.
data DescribeVodSource
DescribeVodSource' :: Text -> Text -> DescribeVodSource

-- | Create a value of <a>DescribeVodSource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceLocationName:DescribeVodSource'</a>,
--   <a>describeVodSource_sourceLocationName</a> - The identifier for the
--   source location you are working on.
--   
--   <a>$sel:vodSourceName:DescribeVodSource'</a>,
--   <a>describeVodSource_vodSourceName</a> - The identifier for the VOD
--   source you are working on.
newDescribeVodSource :: Text -> Text -> DescribeVodSource

-- | <i>See:</i> <a>newDescribeVodSourceResponse</a> smart constructor.
data DescribeVodSourceResponse
DescribeVodSourceResponse' :: Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe [HttpPackageConfiguration] -> Maybe Text -> Maybe (HashMap Text Text) -> Int -> DescribeVodSourceResponse

-- | Create a value of <a>DescribeVodSourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:DescribeVodSourceResponse'</a>,
--   <a>describeVodSourceResponse_creationTime</a> - The timestamp that
--   indicates when the VOD source was created.
--   
--   <a>$sel:sourceLocationName:DescribeVodSource'</a>,
--   <a>describeVodSourceResponse_sourceLocationName</a> - The name of the
--   source location associated with the VOD source.
--   
--   <a>$sel:arn:DescribeVodSourceResponse'</a>,
--   <a>describeVodSourceResponse_arn</a> - The ARN of the VOD source.
--   
--   <a>$sel:lastModifiedTime:DescribeVodSourceResponse'</a>,
--   <a>describeVodSourceResponse_lastModifiedTime</a> - The ARN for the
--   VOD source.
--   
--   <a>$sel:httpPackageConfigurations:DescribeVodSourceResponse'</a>,
--   <a>describeVodSourceResponse_httpPackageConfigurations</a> - The HTTP
--   package configurations.
--   
--   <a>$sel:vodSourceName:DescribeVodSource'</a>,
--   <a>describeVodSourceResponse_vodSourceName</a> - The name of the VOD
--   source.
--   
--   <a>$sel:tags:DescribeVodSourceResponse'</a>,
--   <a>describeVodSourceResponse_tags</a> - The tags assigned to the VOD
--   source.
--   
--   <a>$sel:httpStatus:DescribeVodSourceResponse'</a>,
--   <a>describeVodSourceResponse_httpStatus</a> - The response's http
--   status code.
newDescribeVodSourceResponse :: Int -> DescribeVodSourceResponse

-- | <i>See:</i> <a>newDescribeSourceLocation</a> smart constructor.
data DescribeSourceLocation
DescribeSourceLocation' :: Text -> DescribeSourceLocation

-- | Create a value of <a>DescribeSourceLocation</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceLocationName:DescribeSourceLocation'</a>,
--   <a>describeSourceLocation_sourceLocationName</a> - The identifier for
--   the source location you are working on.
newDescribeSourceLocation :: Text -> DescribeSourceLocation

-- | <i>See:</i> <a>newDescribeSourceLocationResponse</a> smart
--   constructor.
data DescribeSourceLocationResponse
DescribeSourceLocationResponse' :: Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe HttpConfiguration -> Maybe POSIX -> Maybe AccessConfiguration -> Maybe DefaultSegmentDeliveryConfiguration -> Maybe (HashMap Text Text) -> Int -> DescribeSourceLocationResponse

-- | Create a value of <a>DescribeSourceLocationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:DescribeSourceLocationResponse'</a>,
--   <a>describeSourceLocationResponse_creationTime</a> - The timestamp
--   that indicates when the source location was created.
--   
--   <a>$sel:sourceLocationName:DescribeSourceLocation'</a>,
--   <a>describeSourceLocationResponse_sourceLocationName</a> - The name of
--   the source location.
--   
--   <a>$sel:arn:DescribeSourceLocationResponse'</a>,
--   <a>describeSourceLocationResponse_arn</a> - The ARN of the source
--   location.
--   
--   <a>$sel:httpConfiguration:DescribeSourceLocationResponse'</a>,
--   <a>describeSourceLocationResponse_httpConfiguration</a> - The HTTP
--   package configuration settings for the source location.
--   
--   <a>$sel:lastModifiedTime:DescribeSourceLocationResponse'</a>,
--   <a>describeSourceLocationResponse_lastModifiedTime</a> - The timestamp
--   that indicates when the source location was last modified.
--   
--   <a>$sel:accessConfiguration:DescribeSourceLocationResponse'</a>,
--   <a>describeSourceLocationResponse_accessConfiguration</a> - The access
--   configuration for the source location.
--   
--   
--   <a>$sel:defaultSegmentDeliveryConfiguration:DescribeSourceLocationResponse'</a>,
--   <a>describeSourceLocationResponse_defaultSegmentDeliveryConfiguration</a>
--   - The default segment delivery configuration settings.
--   
--   <a>$sel:tags:DescribeSourceLocationResponse'</a>,
--   <a>describeSourceLocationResponse_tags</a> - The tags assigned to the
--   source location.
--   
--   <a>$sel:httpStatus:DescribeSourceLocationResponse'</a>,
--   <a>describeSourceLocationResponse_httpStatus</a> - The response's http
--   status code.
newDescribeSourceLocationResponse :: Int -> DescribeSourceLocationResponse

-- | <i>See:</i> <a>newGetPrefetchSchedule</a> smart constructor.
data GetPrefetchSchedule
GetPrefetchSchedule' :: Text -> Text -> GetPrefetchSchedule

-- | Create a value of <a>GetPrefetchSchedule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:GetPrefetchSchedule'</a>, <a>getPrefetchSchedule_name</a>
--   - The identifier for the playback configuration.
--   
--   <a>$sel:playbackConfigurationName:GetPrefetchSchedule'</a>,
--   <a>getPrefetchSchedule_playbackConfigurationName</a> - The name of the
--   playback configuration.
newGetPrefetchSchedule :: Text -> Text -> GetPrefetchSchedule

-- | <i>See:</i> <a>newGetPrefetchScheduleResponse</a> smart constructor.
data GetPrefetchScheduleResponse
GetPrefetchScheduleResponse' :: Maybe Text -> Maybe Text -> Maybe PrefetchRetrieval -> Maybe Text -> Maybe PrefetchConsumption -> Maybe Text -> Int -> GetPrefetchScheduleResponse

-- | Create a value of <a>GetPrefetchScheduleResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:GetPrefetchScheduleResponse'</a>,
--   <a>getPrefetchScheduleResponse_arn</a> - The Amazon Resource Name
--   (ARN) of the prefetch schedule.
--   
--   <a>$sel:playbackConfigurationName:GetPrefetchSchedule'</a>,
--   <a>getPrefetchScheduleResponse_playbackConfigurationName</a> - The
--   name of the playback configuration to create the prefetch schedule
--   for.
--   
--   <a>$sel:retrieval:GetPrefetchScheduleResponse'</a>,
--   <a>getPrefetchScheduleResponse_retrieval</a> - A complex type that
--   contains settings for prefetch retrieval from the ad decision server
--   (ADS).
--   
--   <a>$sel:name:GetPrefetchSchedule'</a>,
--   <a>getPrefetchScheduleResponse_name</a> - The name of the prefetch
--   schedule. The name must be unique among all prefetch schedules that
--   are associated with the specified playback configuration.
--   
--   <a>$sel:consumption:GetPrefetchScheduleResponse'</a>,
--   <a>getPrefetchScheduleResponse_consumption</a> - Consumption settings
--   determine how, and when, MediaTailor places the prefetched ads into ad
--   breaks. Ad consumption occurs within a span of time that you define,
--   called a <i>consumption window</i>. You can designate which ad breaks
--   that MediaTailor fills with prefetch ads by setting avail matching
--   criteria.
--   
--   <a>$sel:streamId:GetPrefetchScheduleResponse'</a>,
--   <a>getPrefetchScheduleResponse_streamId</a> - An optional stream
--   identifier that you can specify in order to prefetch for multiple
--   streams that use the same playback configuration.
--   
--   <a>$sel:httpStatus:GetPrefetchScheduleResponse'</a>,
--   <a>getPrefetchScheduleResponse_httpStatus</a> - The response's http
--   status code.
newGetPrefetchScheduleResponse :: Int -> GetPrefetchScheduleResponse

-- | <i>See:</i> <a>newCreateProgram</a> smart constructor.
data CreateProgram
CreateProgram' :: Maybe [AdBreak] -> Text -> Text -> Text -> ScheduleConfiguration -> Text -> CreateProgram

-- | Create a value of <a>CreateProgram</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:adBreaks:CreateProgram'</a>, <a>createProgram_adBreaks</a> -
--   The ad break configuration settings.
--   
--   <a>$sel:channelName:CreateProgram'</a>,
--   <a>createProgram_channelName</a> - The identifier for the channel you
--   are working on.
--   
--   <a>$sel:programName:CreateProgram'</a>,
--   <a>createProgram_programName</a> - The identifier for the program you
--   are working on.
--   
--   <a>$sel:vodSourceName:CreateProgram'</a>,
--   <a>createProgram_vodSourceName</a> - The name that's used to refer to
--   a VOD source.
--   
--   <a>$sel:scheduleConfiguration:CreateProgram'</a>,
--   <a>createProgram_scheduleConfiguration</a> - The schedule
--   configuration settings.
--   
--   <a>$sel:sourceLocationName:CreateProgram'</a>,
--   <a>createProgram_sourceLocationName</a> - The name of the source
--   location.
newCreateProgram :: Text -> Text -> Text -> ScheduleConfiguration -> Text -> CreateProgram

-- | <i>See:</i> <a>newCreateProgramResponse</a> smart constructor.
data CreateProgramResponse
CreateProgramResponse' :: Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [AdBreak] -> Maybe Text -> Maybe POSIX -> Maybe Text -> Int -> CreateProgramResponse

-- | Create a value of <a>CreateProgramResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:CreateProgramResponse'</a>,
--   <a>createProgramResponse_creationTime</a> - The timestamp of when the
--   program was created.
--   
--   <a>$sel:sourceLocationName:CreateProgram'</a>,
--   <a>createProgramResponse_sourceLocationName</a> - The source location
--   name.
--   
--   <a>$sel:arn:CreateProgramResponse'</a>,
--   <a>createProgramResponse_arn</a> - The ARN of the program.
--   
--   <a>$sel:programName:CreateProgram'</a>,
--   <a>createProgramResponse_programName</a> - The name of the program.
--   
--   <a>$sel:adBreaks:CreateProgram'</a>,
--   <a>createProgramResponse_adBreaks</a> - The ad break configuration
--   settings.
--   
--   <a>$sel:channelName:CreateProgram'</a>,
--   <a>createProgramResponse_channelName</a> - The name of the channel
--   that the program belongs to.
--   
--   <a>$sel:scheduledStartTime:CreateProgramResponse'</a>,
--   <a>createProgramResponse_scheduledStartTime</a> - The date and time
--   that the program is scheduled to start in ISO 8601 format and
--   Coordinated Universal Time (UTC). For example, the value
--   2021-03-27T17:48:16.751Z represents March 27, 2021 at 17:48:16.751
--   UTC.
--   
--   <a>$sel:vodSourceName:CreateProgram'</a>,
--   <a>createProgramResponse_vodSourceName</a> - The name that's used to
--   refer to a VOD source.
--   
--   <a>$sel:httpStatus:CreateProgramResponse'</a>,
--   <a>createProgramResponse_httpStatus</a> - The response's http status
--   code.
newCreateProgramResponse :: Int -> CreateProgramResponse

-- | <i>See:</i> <a>newStartChannel</a> smart constructor.
data StartChannel
StartChannel' :: Text -> StartChannel

-- | Create a value of <a>StartChannel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelName:StartChannel'</a>, <a>startChannel_channelName</a>
--   - The identifier for the channel you are working on.
newStartChannel :: Text -> StartChannel

-- | <i>See:</i> <a>newStartChannelResponse</a> smart constructor.
data StartChannelResponse
StartChannelResponse' :: Int -> StartChannelResponse

-- | Create a value of <a>StartChannelResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:StartChannelResponse'</a>,
--   <a>startChannelResponse_httpStatus</a> - The response's http status
--   code.
newStartChannelResponse :: Int -> StartChannelResponse

-- | <i>See:</i> <a>newListPlaybackConfigurations</a> smart constructor.
data ListPlaybackConfigurations
ListPlaybackConfigurations' :: Maybe Text -> Maybe Natural -> ListPlaybackConfigurations

-- | Create a value of <a>ListPlaybackConfigurations</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListPlaybackConfigurations'</a>,
--   <a>listPlaybackConfigurations_nextToken</a> - Pagination token
--   returned by the GET list request when results exceed the maximum
--   allowed. Use the token to fetch the next page of results.
--   
--   <a>$sel:maxResults:ListPlaybackConfigurations'</a>,
--   <a>listPlaybackConfigurations_maxResults</a> - Maximum number of
--   records to return.
newListPlaybackConfigurations :: ListPlaybackConfigurations

-- | <i>See:</i> <a>newListPlaybackConfigurationsResponse</a> smart
--   constructor.
data ListPlaybackConfigurationsResponse
ListPlaybackConfigurationsResponse' :: Maybe [PlaybackConfiguration] -> Maybe Text -> Int -> ListPlaybackConfigurationsResponse

-- | Create a value of <a>ListPlaybackConfigurationsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:ListPlaybackConfigurationsResponse'</a>,
--   <a>listPlaybackConfigurationsResponse_items</a> - Array of playback
--   configurations. This might be all the available configurations or a
--   subset, depending on the settings that you provide and the total
--   number of configurations stored.
--   
--   <a>$sel:nextToken:ListPlaybackConfigurations'</a>,
--   <a>listPlaybackConfigurationsResponse_nextToken</a> - Pagination token
--   returned by the GET list request when results exceed the maximum
--   allowed. Use the token to fetch the next page of results.
--   
--   <a>$sel:httpStatus:ListPlaybackConfigurationsResponse'</a>,
--   <a>listPlaybackConfigurationsResponse_httpStatus</a> - The response's
--   http status code.
newListPlaybackConfigurationsResponse :: Int -> ListPlaybackConfigurationsResponse

-- | <i>See:</i> <a>newDeletePlaybackConfiguration</a> smart constructor.
data DeletePlaybackConfiguration
DeletePlaybackConfiguration' :: Text -> DeletePlaybackConfiguration

-- | Create a value of <a>DeletePlaybackConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeletePlaybackConfiguration'</a>,
--   <a>deletePlaybackConfiguration_name</a> - The identifier for the
--   playback configuration.
newDeletePlaybackConfiguration :: Text -> DeletePlaybackConfiguration

-- | <i>See:</i> <a>newDeletePlaybackConfigurationResponse</a> smart
--   constructor.
data DeletePlaybackConfigurationResponse
DeletePlaybackConfigurationResponse' :: Int -> DeletePlaybackConfigurationResponse

-- | Create a value of <a>DeletePlaybackConfigurationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeletePlaybackConfigurationResponse'</a>,
--   <a>deletePlaybackConfigurationResponse_httpStatus</a> - The response's
--   http status code.
newDeletePlaybackConfigurationResponse :: Int -> DeletePlaybackConfigurationResponse

-- | <i>See:</i> <a>newPutPlaybackConfiguration</a> smart constructor.
data PutPlaybackConfiguration
PutPlaybackConfiguration' :: Maybe Natural -> Maybe AvailSuppression -> Maybe Bumper -> Maybe Text -> Maybe Text -> Maybe DashConfigurationForPut -> Maybe ManifestProcessingRules -> Maybe LivePreRollConfiguration -> Maybe Text -> Maybe (HashMap Text (HashMap Text Text)) -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe CdnConfiguration -> PutPlaybackConfiguration

-- | Create a value of <a>PutPlaybackConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:personalizationThresholdSeconds:PutPlaybackConfiguration'</a>,
--   <a>putPlaybackConfiguration_personalizationThresholdSeconds</a> -
--   Defines the maximum duration of underfilled ad time (in seconds)
--   allowed in an ad break. If the duration of underfilled ad time exceeds
--   the personalization threshold, then the personalization of the ad
--   break is abandoned and the underlying content is shown. This feature
--   applies to <i>ad replacement</i> in live and VOD streams, rather than
--   ad insertion, because it relies on an underlying content stream. For
--   more information about ad break behavior, including ad replacement and
--   insertion, see <a>Ad Behavior in AWS Elemental MediaTailor</a>.
--   
--   <a>$sel:availSuppression:PutPlaybackConfiguration'</a>,
--   <a>putPlaybackConfiguration_availSuppression</a> - The configuration
--   for avail suppression, also known as ad suppression. For more
--   information about ad suppression, see <a>Ad Suppression</a>.
--   
--   <a>$sel:bumper:PutPlaybackConfiguration'</a>,
--   <a>putPlaybackConfiguration_bumper</a> - The configuration for
--   bumpers. Bumpers are short audio or video clips that play at the start
--   or before the end of an ad break. To learn more about bumpers, see
--   <a>Bumpers</a>.
--   
--   <a>$sel:adDecisionServerUrl:PutPlaybackConfiguration'</a>,
--   <a>putPlaybackConfiguration_adDecisionServerUrl</a> - The URL for the
--   ad decision server (ADS). This includes the specification of static
--   parameters and placeholders for dynamic parameters. AWS Elemental
--   MediaTailor substitutes player-specific and session-specific
--   parameters as needed when calling the ADS. Alternately, for testing
--   you can provide a static VAST URL. The maximum length is 25,000
--   characters.
--   
--   <a>$sel:videoContentSourceUrl:PutPlaybackConfiguration'</a>,
--   <a>putPlaybackConfiguration_videoContentSourceUrl</a> - The URL prefix
--   for the parent manifest for the stream, minus the asset ID. The
--   maximum length is 512 characters.
--   
--   <a>$sel:dashConfiguration:PutPlaybackConfiguration'</a>,
--   <a>putPlaybackConfiguration_dashConfiguration</a> - The configuration
--   for DASH content.
--   
--   <a>$sel:manifestProcessingRules:PutPlaybackConfiguration'</a>,
--   <a>putPlaybackConfiguration_manifestProcessingRules</a> - The
--   configuration for manifest processing rules. Manifest processing rules
--   enable customization of the personalized manifests created by
--   MediaTailor.
--   
--   <a>$sel:livePreRollConfiguration:PutPlaybackConfiguration'</a>,
--   <a>putPlaybackConfiguration_livePreRollConfiguration</a> - The
--   configuration for pre-roll ad insertion.
--   
--   <a>$sel:name:PutPlaybackConfiguration'</a>,
--   <a>putPlaybackConfiguration_name</a> - The identifier for the playback
--   configuration.
--   
--   <a>$sel:configurationAliases:PutPlaybackConfiguration'</a>,
--   <a>putPlaybackConfiguration_configurationAliases</a> - The player
--   parameters and aliases used as dynamic variables during session
--   initialization. For more information, see <a>Domain Variables</a>.
--   
--   <a>$sel:transcodeProfileName:PutPlaybackConfiguration'</a>,
--   <a>putPlaybackConfiguration_transcodeProfileName</a> - The name that
--   is used to associate this playback configuration with a custom
--   transcode profile. This overrides the dynamic transcoding defaults of
--   MediaTailor. Use this only if you have already set up custom profiles
--   with the help of AWS Support.
--   
--   <a>$sel:tags:PutPlaybackConfiguration'</a>,
--   <a>putPlaybackConfiguration_tags</a> - The tags to assign to the
--   playback configuration.
--   
--   <a>$sel:slateAdUrl:PutPlaybackConfiguration'</a>,
--   <a>putPlaybackConfiguration_slateAdUrl</a> - The URL for a
--   high-quality video asset to transcode and use to fill in time that's
--   not used by ads. AWS Elemental MediaTailor shows the slate to fill in
--   gaps in media content. Configuring the slate is optional for non-VPAID
--   configurations. For VPAID, the slate is required because MediaTailor
--   provides it in the slots that are designated for dynamic ad content.
--   The slate must be a high-quality asset that contains both audio and
--   video.
--   
--   <a>$sel:cdnConfiguration:PutPlaybackConfiguration'</a>,
--   <a>putPlaybackConfiguration_cdnConfiguration</a> - The configuration
--   for using a content delivery network (CDN), like Amazon CloudFront,
--   for content and ad segment management.
newPutPlaybackConfiguration :: PutPlaybackConfiguration

-- | <i>See:</i> <a>newPutPlaybackConfigurationResponse</a> smart
--   constructor.
data PutPlaybackConfigurationResponse
PutPlaybackConfigurationResponse' :: Maybe Text -> Maybe HlsConfiguration -> Maybe Natural -> Maybe Text -> Maybe AvailSuppression -> Maybe Bumper -> Maybe Text -> Maybe Text -> Maybe DashConfiguration -> Maybe ManifestProcessingRules -> Maybe LogConfiguration -> Maybe LivePreRollConfiguration -> Maybe Text -> Maybe Text -> Maybe (HashMap Text (HashMap Text Text)) -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe CdnConfiguration -> Int -> PutPlaybackConfigurationResponse

-- | Create a value of <a>PutPlaybackConfigurationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:playbackEndpointPrefix:PutPlaybackConfigurationResponse'</a>,
--   <a>putPlaybackConfigurationResponse_playbackEndpointPrefix</a> - The
--   URL that the player accesses to get a manifest from AWS Elemental
--   MediaTailor. This session will use server-side reporting.
--   
--   <a>$sel:hlsConfiguration:PutPlaybackConfigurationResponse'</a>,
--   <a>putPlaybackConfigurationResponse_hlsConfiguration</a> - The
--   configuration for HLS content.
--   
--   <a>$sel:personalizationThresholdSeconds:PutPlaybackConfiguration'</a>,
--   <a>putPlaybackConfigurationResponse_personalizationThresholdSeconds</a>
--   - Defines the maximum duration of underfilled ad time (in seconds)
--   allowed in an ad break. If the duration of underfilled ad time exceeds
--   the personalization threshold, then the personalization of the ad
--   break is abandoned and the underlying content is shown. This feature
--   applies to <i>ad replacement</i> in live and VOD streams, rather than
--   ad insertion, because it relies on an underlying content stream. For
--   more information about ad break behavior, including ad replacement and
--   insertion, see <a>Ad Behavior in AWS Elemental MediaTailor</a>.
--   
--   
--   <a>$sel:playbackConfigurationArn:PutPlaybackConfigurationResponse'</a>,
--   <a>putPlaybackConfigurationResponse_playbackConfigurationArn</a> - The
--   Amazon Resource Name (ARN) for the playback configuration.
--   
--   <a>$sel:availSuppression:PutPlaybackConfiguration'</a>,
--   <a>putPlaybackConfigurationResponse_availSuppression</a> - The
--   configuration for avail suppression, also known as ad suppression. For
--   more information about ad suppression, see <a>Ad Suppression</a>.
--   
--   <a>$sel:bumper:PutPlaybackConfiguration'</a>,
--   <a>putPlaybackConfigurationResponse_bumper</a> - The configuration for
--   bumpers. Bumpers are short audio or video clips that play at the start
--   or before the end of an ad break. To learn more about bumpers, see
--   <a>Bumpers</a>.
--   
--   <a>$sel:adDecisionServerUrl:PutPlaybackConfiguration'</a>,
--   <a>putPlaybackConfigurationResponse_adDecisionServerUrl</a> - The URL
--   for the ad decision server (ADS). This includes the specification of
--   static parameters and placeholders for dynamic parameters. AWS
--   Elemental MediaTailor substitutes player-specific and session-specific
--   parameters as needed when calling the ADS. Alternately, for testing,
--   you can provide a static VAST URL. The maximum length is 25,000
--   characters.
--   
--   <a>$sel:videoContentSourceUrl:PutPlaybackConfiguration'</a>,
--   <a>putPlaybackConfigurationResponse_videoContentSourceUrl</a> - The
--   URL prefix for the parent manifest for the stream, minus the asset ID.
--   The maximum length is 512 characters.
--   
--   <a>$sel:dashConfiguration:PutPlaybackConfiguration'</a>,
--   <a>putPlaybackConfigurationResponse_dashConfiguration</a> - The
--   configuration for DASH content.
--   
--   <a>$sel:manifestProcessingRules:PutPlaybackConfiguration'</a>,
--   <a>putPlaybackConfigurationResponse_manifestProcessingRules</a> - The
--   configuration for manifest processing rules. Manifest processing rules
--   enable customization of the personalized manifests created by
--   MediaTailor.
--   
--   <a>$sel:logConfiguration:PutPlaybackConfigurationResponse'</a>,
--   <a>putPlaybackConfigurationResponse_logConfiguration</a> - The Amazon
--   CloudWatch log settings for a playback configuration.
--   
--   <a>$sel:livePreRollConfiguration:PutPlaybackConfiguration'</a>,
--   <a>putPlaybackConfigurationResponse_livePreRollConfiguration</a> - The
--   configuration for pre-roll ad insertion.
--   
--   <a>$sel:name:PutPlaybackConfiguration'</a>,
--   <a>putPlaybackConfigurationResponse_name</a> - The identifier for the
--   playback configuration.
--   
--   
--   <a>$sel:sessionInitializationEndpointPrefix:PutPlaybackConfigurationResponse'</a>,
--   <a>putPlaybackConfigurationResponse_sessionInitializationEndpointPrefix</a>
--   - The URL that the player uses to initialize a session that uses
--   client-side reporting.
--   
--   <a>$sel:configurationAliases:PutPlaybackConfiguration'</a>,
--   <a>putPlaybackConfigurationResponse_configurationAliases</a> - The
--   player parameters and aliases used as dynamic variables during session
--   initialization. For more information, see <a>Domain Variables</a>.
--   
--   <a>$sel:transcodeProfileName:PutPlaybackConfiguration'</a>,
--   <a>putPlaybackConfigurationResponse_transcodeProfileName</a> - The
--   name that is used to associate this playback configuration with a
--   custom transcode profile. This overrides the dynamic transcoding
--   defaults of MediaTailor. Use this only if you have already set up
--   custom profiles with the help of AWS Support.
--   
--   <a>$sel:tags:PutPlaybackConfiguration'</a>,
--   <a>putPlaybackConfigurationResponse_tags</a> - The tags assigned to
--   the playback configuration.
--   
--   <a>$sel:slateAdUrl:PutPlaybackConfiguration'</a>,
--   <a>putPlaybackConfigurationResponse_slateAdUrl</a> - The URL for a
--   high-quality video asset to transcode and use to fill in time that's
--   not used by ads. AWS Elemental MediaTailor shows the slate to fill in
--   gaps in media content. Configuring the slate is optional for non-VPAID
--   playback configurations. For VPAID, the slate is required because
--   MediaTailor provides it in the slots designated for dynamic ad
--   content. The slate must be a high-quality asset that contains both
--   audio and video.
--   
--   <a>$sel:cdnConfiguration:PutPlaybackConfiguration'</a>,
--   <a>putPlaybackConfigurationResponse_cdnConfiguration</a> - The
--   configuration for using a content delivery network (CDN), like Amazon
--   CloudFront, for content and ad segment management.
--   
--   <a>$sel:httpStatus:PutPlaybackConfigurationResponse'</a>,
--   <a>putPlaybackConfigurationResponse_httpStatus</a> - The response's
--   http status code.
newPutPlaybackConfigurationResponse :: Int -> PutPlaybackConfigurationResponse

-- | <i>See:</i> <a>newListSourceLocations</a> smart constructor.
data ListSourceLocations
ListSourceLocations' :: Maybe Text -> Maybe Natural -> ListSourceLocations

-- | Create a value of <a>ListSourceLocations</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSourceLocations'</a>,
--   <a>listSourceLocations_nextToken</a> - Pagination token from the GET
--   list request. Use the token to fetch the next page of results.
--   
--   <a>$sel:maxResults:ListSourceLocations'</a>,
--   <a>listSourceLocations_maxResults</a> - Upper bound on number of
--   records to return. The maximum number of results is 100.
newListSourceLocations :: ListSourceLocations

-- | <i>See:</i> <a>newListSourceLocationsResponse</a> smart constructor.
data ListSourceLocationsResponse
ListSourceLocationsResponse' :: Maybe [SourceLocation] -> Maybe Text -> Int -> ListSourceLocationsResponse

-- | Create a value of <a>ListSourceLocationsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:ListSourceLocationsResponse'</a>,
--   <a>listSourceLocationsResponse_items</a> - An array of source
--   locations.
--   
--   <a>$sel:nextToken:ListSourceLocations'</a>,
--   <a>listSourceLocationsResponse_nextToken</a> - Pagination token from
--   the list request. Use the token to fetch the next page of results.
--   
--   <a>$sel:httpStatus:ListSourceLocationsResponse'</a>,
--   <a>listSourceLocationsResponse_httpStatus</a> - The response's http
--   status code.
newListSourceLocationsResponse :: Int -> ListSourceLocationsResponse

-- | <i>See:</i> <a>newUpdateSourceLocation</a> smart constructor.
data UpdateSourceLocation
UpdateSourceLocation' :: Maybe AccessConfiguration -> Maybe DefaultSegmentDeliveryConfiguration -> Text -> HttpConfiguration -> UpdateSourceLocation

-- | Create a value of <a>UpdateSourceLocation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accessConfiguration:UpdateSourceLocation'</a>,
--   <a>updateSourceLocation_accessConfiguration</a> - Access configuration
--   parameters. Configures the type of authentication used to access
--   content from your source location.
--   
--   <a>$sel:defaultSegmentDeliveryConfiguration:UpdateSourceLocation'</a>,
--   <a>updateSourceLocation_defaultSegmentDeliveryConfiguration</a> - The
--   optional configuration for the host server that serves segments.
--   
--   <a>$sel:sourceLocationName:UpdateSourceLocation'</a>,
--   <a>updateSourceLocation_sourceLocationName</a> - The identifier for
--   the source location you are working on.
--   
--   <a>$sel:httpConfiguration:UpdateSourceLocation'</a>,
--   <a>updateSourceLocation_httpConfiguration</a> - The HTTP configuration
--   for the source location.
newUpdateSourceLocation :: Text -> HttpConfiguration -> UpdateSourceLocation

-- | <i>See:</i> <a>newUpdateSourceLocationResponse</a> smart constructor.
data UpdateSourceLocationResponse
UpdateSourceLocationResponse' :: Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe HttpConfiguration -> Maybe POSIX -> Maybe AccessConfiguration -> Maybe DefaultSegmentDeliveryConfiguration -> Maybe (HashMap Text Text) -> Int -> UpdateSourceLocationResponse

-- | Create a value of <a>UpdateSourceLocationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:UpdateSourceLocationResponse'</a>,
--   <a>updateSourceLocationResponse_creationTime</a> - The timestamp that
--   indicates when the source location was created.
--   
--   <a>$sel:sourceLocationName:UpdateSourceLocation'</a>,
--   <a>updateSourceLocationResponse_sourceLocationName</a> - The name of
--   the source location.
--   
--   <a>$sel:arn:UpdateSourceLocationResponse'</a>,
--   <a>updateSourceLocationResponse_arn</a> - The ARN of the source
--   location.
--   
--   <a>$sel:httpConfiguration:UpdateSourceLocation'</a>,
--   <a>updateSourceLocationResponse_httpConfiguration</a> - The HTTP
--   package configuration settings for the source location.
--   
--   <a>$sel:lastModifiedTime:UpdateSourceLocationResponse'</a>,
--   <a>updateSourceLocationResponse_lastModifiedTime</a> - The timestamp
--   that indicates when the source location was last modified.
--   
--   <a>$sel:accessConfiguration:UpdateSourceLocation'</a>,
--   <a>updateSourceLocationResponse_accessConfiguration</a> - The access
--   configuration for the source location.
--   
--   <a>$sel:defaultSegmentDeliveryConfiguration:UpdateSourceLocation'</a>,
--   <a>updateSourceLocationResponse_defaultSegmentDeliveryConfiguration</a>
--   - The default segment delivery configuration settings.
--   
--   <a>$sel:tags:UpdateSourceLocationResponse'</a>,
--   <a>updateSourceLocationResponse_tags</a> - The tags assigned to the
--   source location.
--   
--   <a>$sel:httpStatus:UpdateSourceLocationResponse'</a>,
--   <a>updateSourceLocationResponse_httpStatus</a> - The response's http
--   status code.
newUpdateSourceLocationResponse :: Int -> UpdateSourceLocationResponse

-- | <i>See:</i> <a>newDeleteSourceLocation</a> smart constructor.
data DeleteSourceLocation
DeleteSourceLocation' :: Text -> DeleteSourceLocation

-- | Create a value of <a>DeleteSourceLocation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceLocationName:DeleteSourceLocation'</a>,
--   <a>deleteSourceLocation_sourceLocationName</a> - The identifier for
--   the source location you are working on.
newDeleteSourceLocation :: Text -> DeleteSourceLocation

-- | <i>See:</i> <a>newDeleteSourceLocationResponse</a> smart constructor.
data DeleteSourceLocationResponse
DeleteSourceLocationResponse' :: Int -> DeleteSourceLocationResponse

-- | Create a value of <a>DeleteSourceLocationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteSourceLocationResponse'</a>,
--   <a>deleteSourceLocationResponse_httpStatus</a> - The response's http
--   status code.
newDeleteSourceLocationResponse :: Int -> DeleteSourceLocationResponse

-- | <i>See:</i> <a>newGetPlaybackConfiguration</a> smart constructor.
data GetPlaybackConfiguration
GetPlaybackConfiguration' :: Text -> GetPlaybackConfiguration

-- | Create a value of <a>GetPlaybackConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:GetPlaybackConfiguration'</a>,
--   <a>getPlaybackConfiguration_name</a> - The identifier for the playback
--   configuration.
newGetPlaybackConfiguration :: Text -> GetPlaybackConfiguration

-- | <i>See:</i> <a>newGetPlaybackConfigurationResponse</a> smart
--   constructor.
data GetPlaybackConfigurationResponse
GetPlaybackConfigurationResponse' :: Maybe Text -> Maybe HlsConfiguration -> Maybe Natural -> Maybe Text -> Maybe AvailSuppression -> Maybe Bumper -> Maybe Text -> Maybe Text -> Maybe DashConfiguration -> Maybe ManifestProcessingRules -> Maybe LogConfiguration -> Maybe LivePreRollConfiguration -> Maybe Text -> Maybe Text -> Maybe (HashMap Text (HashMap Text Text)) -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe CdnConfiguration -> Int -> GetPlaybackConfigurationResponse

-- | Create a value of <a>GetPlaybackConfigurationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:playbackEndpointPrefix:GetPlaybackConfigurationResponse'</a>,
--   <a>getPlaybackConfigurationResponse_playbackEndpointPrefix</a> - The
--   URL that the player accesses to get a manifest from AWS Elemental
--   MediaTailor. This session will use server-side reporting.
--   
--   <a>$sel:hlsConfiguration:GetPlaybackConfigurationResponse'</a>,
--   <a>getPlaybackConfigurationResponse_hlsConfiguration</a> - The
--   configuration for HLS content.
--   
--   
--   <a>$sel:personalizationThresholdSeconds:GetPlaybackConfigurationResponse'</a>,
--   <a>getPlaybackConfigurationResponse_personalizationThresholdSeconds</a>
--   - Defines the maximum duration of underfilled ad time (in seconds)
--   allowed in an ad break. If the duration of underfilled ad time exceeds
--   the personalization threshold, then the personalization of the ad
--   break is abandoned and the underlying content is shown. This feature
--   applies to <i>ad replacement</i> in live and VOD streams, rather than
--   ad insertion, because it relies on an underlying content stream. For
--   more information about ad break behavior, including ad replacement and
--   insertion, see <a>Ad Behavior in AWS Elemental MediaTailor</a>.
--   
--   
--   <a>$sel:playbackConfigurationArn:GetPlaybackConfigurationResponse'</a>,
--   <a>getPlaybackConfigurationResponse_playbackConfigurationArn</a> - The
--   Amazon Resource Name (ARN) for the playback configuration.
--   
--   <a>$sel:availSuppression:GetPlaybackConfigurationResponse'</a>,
--   <a>getPlaybackConfigurationResponse_availSuppression</a> - The
--   configuration for avail suppression, also known as ad suppression. For
--   more information about ad suppression, see <a>Ad Suppression</a>.
--   
--   <a>$sel:bumper:GetPlaybackConfigurationResponse'</a>,
--   <a>getPlaybackConfigurationResponse_bumper</a> - The configuration for
--   bumpers. Bumpers are short audio or video clips that play at the start
--   or before the end of an ad break. To learn more about bumpers, see
--   <a>Bumpers</a>.
--   
--   <a>$sel:adDecisionServerUrl:GetPlaybackConfigurationResponse'</a>,
--   <a>getPlaybackConfigurationResponse_adDecisionServerUrl</a> - The URL
--   for the ad decision server (ADS). This includes the specification of
--   static parameters and placeholders for dynamic parameters. AWS
--   Elemental MediaTailor substitutes player-specific and session-specific
--   parameters as needed when calling the ADS. Alternately, for testing,
--   you can provide a static VAST URL. The maximum length is 25,000
--   characters.
--   
--   <a>$sel:videoContentSourceUrl:GetPlaybackConfigurationResponse'</a>,
--   <a>getPlaybackConfigurationResponse_videoContentSourceUrl</a> - The
--   URL prefix for the parent manifest for the stream, minus the asset ID.
--   The maximum length is 512 characters.
--   
--   <a>$sel:dashConfiguration:GetPlaybackConfigurationResponse'</a>,
--   <a>getPlaybackConfigurationResponse_dashConfiguration</a> - The
--   configuration for DASH content.
--   
--   <a>$sel:manifestProcessingRules:GetPlaybackConfigurationResponse'</a>,
--   <a>getPlaybackConfigurationResponse_manifestProcessingRules</a> - The
--   configuration for manifest processing rules. Manifest processing rules
--   enable customization of the personalized manifests created by
--   MediaTailor.
--   
--   <a>$sel:logConfiguration:GetPlaybackConfigurationResponse'</a>,
--   <a>getPlaybackConfigurationResponse_logConfiguration</a> - The Amazon
--   CloudWatch log settings for a playback configuration.
--   
--   
--   <a>$sel:livePreRollConfiguration:GetPlaybackConfigurationResponse'</a>,
--   <a>getPlaybackConfigurationResponse_livePreRollConfiguration</a> - The
--   configuration for pre-roll ad insertion.
--   
--   <a>$sel:name:GetPlaybackConfiguration'</a>,
--   <a>getPlaybackConfigurationResponse_name</a> - The identifier for the
--   playback configuration.
--   
--   
--   <a>$sel:sessionInitializationEndpointPrefix:GetPlaybackConfigurationResponse'</a>,
--   <a>getPlaybackConfigurationResponse_sessionInitializationEndpointPrefix</a>
--   - The URL that the player uses to initialize a session that uses
--   client-side reporting.
--   
--   <a>$sel:configurationAliases:GetPlaybackConfigurationResponse'</a>,
--   <a>getPlaybackConfigurationResponse_configurationAliases</a> - The
--   player parameters and aliases used as dynamic variables during session
--   initialization. For more information, see <a>Domain Variables</a>.
--   
--   <a>$sel:transcodeProfileName:GetPlaybackConfigurationResponse'</a>,
--   <a>getPlaybackConfigurationResponse_transcodeProfileName</a> - The
--   name that is used to associate this playback configuration with a
--   custom transcode profile. This overrides the dynamic transcoding
--   defaults of MediaTailor. Use this only if you have already set up
--   custom profiles with the help of AWS Support.
--   
--   <a>$sel:tags:GetPlaybackConfigurationResponse'</a>,
--   <a>getPlaybackConfigurationResponse_tags</a> - The tags assigned to
--   the playback configuration.
--   
--   <a>$sel:slateAdUrl:GetPlaybackConfigurationResponse'</a>,
--   <a>getPlaybackConfigurationResponse_slateAdUrl</a> - The URL for a
--   high-quality video asset to transcode and use to fill in time that's
--   not used by ads. AWS Elemental MediaTailor shows the slate to fill in
--   gaps in media content. Configuring the slate is optional for non-VPAID
--   playback configurations. For VPAID, the slate is required because
--   MediaTailor provides it in the slots designated for dynamic ad
--   content. The slate must be a high-quality asset that contains both
--   audio and video.
--   
--   <a>$sel:cdnConfiguration:GetPlaybackConfigurationResponse'</a>,
--   <a>getPlaybackConfigurationResponse_cdnConfiguration</a> - The
--   configuration for using a content delivery network (CDN), like Amazon
--   CloudFront, for content and ad segment management.
--   
--   <a>$sel:httpStatus:GetPlaybackConfigurationResponse'</a>,
--   <a>getPlaybackConfigurationResponse_httpStatus</a> - The response's
--   http status code.
newGetPlaybackConfigurationResponse :: Int -> GetPlaybackConfigurationResponse

-- | <i>See:</i> <a>newDeleteVodSource</a> smart constructor.
data DeleteVodSource
DeleteVodSource' :: Text -> Text -> DeleteVodSource

-- | Create a value of <a>DeleteVodSource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceLocationName:DeleteVodSource'</a>,
--   <a>deleteVodSource_sourceLocationName</a> - The identifier for the
--   source location you are working on.
--   
--   <a>$sel:vodSourceName:DeleteVodSource'</a>,
--   <a>deleteVodSource_vodSourceName</a> - The identifier for the VOD
--   source you are working on.
newDeleteVodSource :: Text -> Text -> DeleteVodSource

-- | <i>See:</i> <a>newDeleteVodSourceResponse</a> smart constructor.
data DeleteVodSourceResponse
DeleteVodSourceResponse' :: Int -> DeleteVodSourceResponse

-- | Create a value of <a>DeleteVodSourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteVodSourceResponse'</a>,
--   <a>deleteVodSourceResponse_httpStatus</a> - The response's http status
--   code.
newDeleteVodSourceResponse :: Int -> DeleteVodSourceResponse

-- | <i>See:</i> <a>newUpdateVodSource</a> smart constructor.
data UpdateVodSource
UpdateVodSource' :: Text -> Text -> [HttpPackageConfiguration] -> UpdateVodSource

-- | Create a value of <a>UpdateVodSource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceLocationName:UpdateVodSource'</a>,
--   <a>updateVodSource_sourceLocationName</a> - The identifier for the
--   source location you are working on.
--   
--   <a>$sel:vodSourceName:UpdateVodSource'</a>,
--   <a>updateVodSource_vodSourceName</a> - The identifier for the VOD
--   source you are working on.
--   
--   <a>$sel:httpPackageConfigurations:UpdateVodSource'</a>,
--   <a>updateVodSource_httpPackageConfigurations</a> - An array of HTTP
--   package configurations for the VOD source on this account.
newUpdateVodSource :: Text -> Text -> UpdateVodSource

-- | <i>See:</i> <a>newUpdateVodSourceResponse</a> smart constructor.
data UpdateVodSourceResponse
UpdateVodSourceResponse' :: Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe [HttpPackageConfiguration] -> Maybe Text -> Maybe (HashMap Text Text) -> Int -> UpdateVodSourceResponse

-- | Create a value of <a>UpdateVodSourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:UpdateVodSourceResponse'</a>,
--   <a>updateVodSourceResponse_creationTime</a> - The timestamp that
--   indicates when the VOD source was created.
--   
--   <a>$sel:sourceLocationName:UpdateVodSource'</a>,
--   <a>updateVodSourceResponse_sourceLocationName</a> - The name of the
--   source location associated with the VOD source.
--   
--   <a>$sel:arn:UpdateVodSourceResponse'</a>,
--   <a>updateVodSourceResponse_arn</a> - The ARN of the VOD source.
--   
--   <a>$sel:lastModifiedTime:UpdateVodSourceResponse'</a>,
--   <a>updateVodSourceResponse_lastModifiedTime</a> - The ARN for the VOD
--   source.
--   
--   <a>$sel:httpPackageConfigurations:UpdateVodSource'</a>,
--   <a>updateVodSourceResponse_httpPackageConfigurations</a> - The HTTP
--   package configurations.
--   
--   <a>$sel:vodSourceName:UpdateVodSource'</a>,
--   <a>updateVodSourceResponse_vodSourceName</a> - The name of the VOD
--   source.
--   
--   <a>$sel:tags:UpdateVodSourceResponse'</a>,
--   <a>updateVodSourceResponse_tags</a> - The tags assigned to the VOD
--   source.
--   
--   <a>$sel:httpStatus:UpdateVodSourceResponse'</a>,
--   <a>updateVodSourceResponse_httpStatus</a> - The response's http status
--   code.
newUpdateVodSourceResponse :: Int -> UpdateVodSourceResponse

-- | <i>See:</i> <a>newCreateVodSource</a> smart constructor.
data CreateVodSource
CreateVodSource' :: Maybe (HashMap Text Text) -> Text -> Text -> [HttpPackageConfiguration] -> CreateVodSource

-- | Create a value of <a>CreateVodSource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:CreateVodSource'</a>, <a>createVodSource_tags</a> - The
--   tags to assign to the VOD source.
--   
--   <a>$sel:sourceLocationName:CreateVodSource'</a>,
--   <a>createVodSource_sourceLocationName</a> - The identifier for the
--   source location you are working on.
--   
--   <a>$sel:vodSourceName:CreateVodSource'</a>,
--   <a>createVodSource_vodSourceName</a> - The identifier for the VOD
--   source you are working on.
--   
--   <a>$sel:httpPackageConfigurations:CreateVodSource'</a>,
--   <a>createVodSource_httpPackageConfigurations</a> - An array of HTTP
--   package configuration parameters for this VOD source.
newCreateVodSource :: Text -> Text -> CreateVodSource

-- | <i>See:</i> <a>newCreateVodSourceResponse</a> smart constructor.
data CreateVodSourceResponse
CreateVodSourceResponse' :: Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe [HttpPackageConfiguration] -> Maybe Text -> Maybe (HashMap Text Text) -> Int -> CreateVodSourceResponse

-- | Create a value of <a>CreateVodSourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:CreateVodSourceResponse'</a>,
--   <a>createVodSourceResponse_creationTime</a> - The timestamp that
--   indicates when the VOD source was created.
--   
--   <a>$sel:sourceLocationName:CreateVodSource'</a>,
--   <a>createVodSourceResponse_sourceLocationName</a> - The name of the
--   source location associated with the VOD source.
--   
--   <a>$sel:arn:CreateVodSourceResponse'</a>,
--   <a>createVodSourceResponse_arn</a> - The ARN of the VOD source.
--   
--   <a>$sel:lastModifiedTime:CreateVodSourceResponse'</a>,
--   <a>createVodSourceResponse_lastModifiedTime</a> - The ARN for the VOD
--   source.
--   
--   <a>$sel:httpPackageConfigurations:CreateVodSource'</a>,
--   <a>createVodSourceResponse_httpPackageConfigurations</a> - The HTTP
--   package configurations.
--   
--   <a>$sel:vodSourceName:CreateVodSource'</a>,
--   <a>createVodSourceResponse_vodSourceName</a> - The name of the VOD
--   source.
--   
--   <a>$sel:tags:CreateVodSource'</a>, <a>createVodSourceResponse_tags</a>
--   - The tags assigned to the VOD source.
--   
--   <a>$sel:httpStatus:CreateVodSourceResponse'</a>,
--   <a>createVodSourceResponse_httpStatus</a> - The response's http status
--   code.
newCreateVodSourceResponse :: Int -> CreateVodSourceResponse

-- | <i>See:</i> <a>newCreateChannel</a> smart constructor.
data CreateChannel
CreateChannel' :: Maybe SlateSource -> Maybe (HashMap Text Text) -> Text -> [RequestOutputItem] -> PlaybackMode -> CreateChannel

-- | Create a value of <a>CreateChannel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fillerSlate:CreateChannel'</a>,
--   <a>createChannel_fillerSlate</a> - The slate used to fill gaps between
--   programs in the schedule. You must configure filler slate if your
--   channel uses a LINEAR PlaybackMode.
--   
--   <a>$sel:tags:CreateChannel'</a>, <a>createChannel_tags</a> - The tags
--   to assign to the channel.
--   
--   <a>$sel:channelName:CreateChannel'</a>,
--   <a>createChannel_channelName</a> - The identifier for the channel you
--   are working on.
--   
--   <a>$sel:outputs:CreateChannel'</a>, <a>createChannel_outputs</a> - The
--   channel's output properties.
--   
--   <a>$sel:playbackMode:CreateChannel'</a>,
--   <a>createChannel_playbackMode</a> - The type of playback mode to use
--   for this channel.
--   
--   LINEAR - The programs in the schedule play once back-to-back in the
--   schedule.
--   
--   LOOP - The programs in the schedule play back-to-back in an endless
--   loop. When the last program in the schedule stops playing, playback
--   loops back to the first program in the schedule.
newCreateChannel :: Text -> PlaybackMode -> CreateChannel

-- | <i>See:</i> <a>newCreateChannelResponse</a> smart constructor.
data CreateChannelResponse
CreateChannelResponse' :: Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe [ResponseOutputItem] -> Maybe ChannelState -> Maybe SlateSource -> Maybe (HashMap Text Text) -> Int -> CreateChannelResponse

-- | Create a value of <a>CreateChannelResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:CreateChannelResponse'</a>,
--   <a>createChannelResponse_creationTime</a> - The timestamp of when the
--   channel was created.
--   
--   <a>$sel:arn:CreateChannelResponse'</a>,
--   <a>createChannelResponse_arn</a> - The ARN of the channel.
--   
--   <a>$sel:lastModifiedTime:CreateChannelResponse'</a>,
--   <a>createChannelResponse_lastModifiedTime</a> - The timestamp of when
--   the channel was last modified.
--   
--   <a>$sel:playbackMode:CreateChannel'</a>,
--   <a>createChannelResponse_playbackMode</a> - The channel's playback
--   mode.
--   
--   <a>$sel:channelName:CreateChannel'</a>,
--   <a>createChannelResponse_channelName</a> - The name of the channel.
--   
--   <a>$sel:outputs:CreateChannel'</a>,
--   <a>createChannelResponse_outputs</a> - The channel's output
--   properties.
--   
--   <a>$sel:channelState:CreateChannelResponse'</a>,
--   <a>createChannelResponse_channelState</a> - Indicates whether the
--   channel is in a running state or not.
--   
--   <a>$sel:fillerSlate:CreateChannel'</a>,
--   <a>createChannelResponse_fillerSlate</a> - Contains information about
--   the slate used to fill gaps between programs in the schedule.
--   
--   <a>$sel:tags:CreateChannel'</a>, <a>createChannelResponse_tags</a> -
--   The tags assigned to the channel.
--   
--   <a>$sel:httpStatus:CreateChannelResponse'</a>,
--   <a>createChannelResponse_httpStatus</a> - The response's http status
--   code.
newCreateChannelResponse :: Int -> CreateChannelResponse

-- | <i>See:</i> <a>newDeleteChannelPolicy</a> smart constructor.
data DeleteChannelPolicy
DeleteChannelPolicy' :: Text -> DeleteChannelPolicy

-- | Create a value of <a>DeleteChannelPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelName:DeleteChannelPolicy'</a>,
--   <a>deleteChannelPolicy_channelName</a> - The identifier for the
--   channel you are working on.
newDeleteChannelPolicy :: Text -> DeleteChannelPolicy

-- | <i>See:</i> <a>newDeleteChannelPolicyResponse</a> smart constructor.
data DeleteChannelPolicyResponse
DeleteChannelPolicyResponse' :: Int -> DeleteChannelPolicyResponse

-- | Create a value of <a>DeleteChannelPolicyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteChannelPolicyResponse'</a>,
--   <a>deleteChannelPolicyResponse_httpStatus</a> - The response's http
--   status code.
newDeleteChannelPolicyResponse :: Int -> DeleteChannelPolicyResponse

-- | <i>See:</i> <a>newPutChannelPolicy</a> smart constructor.
data PutChannelPolicy
PutChannelPolicy' :: Text -> Text -> PutChannelPolicy

-- | Create a value of <a>PutChannelPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelName:PutChannelPolicy'</a>,
--   <a>putChannelPolicy_channelName</a> - The identifier for the channel
--   you are working on.
--   
--   <a>$sel:policy:PutChannelPolicy'</a>, <a>putChannelPolicy_policy</a> -
--   Adds an IAM role that determines the permissions of your channel.
newPutChannelPolicy :: Text -> Text -> PutChannelPolicy

-- | <i>See:</i> <a>newPutChannelPolicyResponse</a> smart constructor.
data PutChannelPolicyResponse
PutChannelPolicyResponse' :: Int -> PutChannelPolicyResponse

-- | Create a value of <a>PutChannelPolicyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:PutChannelPolicyResponse'</a>,
--   <a>putChannelPolicyResponse_httpStatus</a> - The response's http
--   status code.
newPutChannelPolicyResponse :: Int -> PutChannelPolicyResponse

-- | <i>See:</i> <a>newDeleteProgram</a> smart constructor.
data DeleteProgram
DeleteProgram' :: Text -> Text -> DeleteProgram

-- | Create a value of <a>DeleteProgram</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelName:DeleteProgram'</a>,
--   <a>deleteProgram_channelName</a> - The identifier for the channel you
--   are working on.
--   
--   <a>$sel:programName:DeleteProgram'</a>,
--   <a>deleteProgram_programName</a> - The identifier for the program you
--   are working on.
newDeleteProgram :: Text -> Text -> DeleteProgram

-- | <i>See:</i> <a>newDeleteProgramResponse</a> smart constructor.
data DeleteProgramResponse
DeleteProgramResponse' :: Int -> DeleteProgramResponse

-- | Create a value of <a>DeleteProgramResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteProgramResponse'</a>,
--   <a>deleteProgramResponse_httpStatus</a> - The response's http status
--   code.
newDeleteProgramResponse :: Int -> DeleteProgramResponse

-- | <i>See:</i> <a>newGetChannelSchedule</a> smart constructor.
data GetChannelSchedule
GetChannelSchedule' :: Maybe Text -> Maybe Text -> Maybe Natural -> Text -> GetChannelSchedule

-- | Create a value of <a>GetChannelSchedule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetChannelSchedule'</a>,
--   <a>getChannelSchedule_nextToken</a> - Pagination token from the GET
--   list request. Use the token to fetch the next page of results.
--   
--   <a>$sel:durationMinutes:GetChannelSchedule'</a>,
--   <a>getChannelSchedule_durationMinutes</a> - The schedule duration in
--   minutes. The maximum duration is 4320 minutes (three days).
--   
--   <a>$sel:maxResults:GetChannelSchedule'</a>,
--   <a>getChannelSchedule_maxResults</a> - Upper bound on number of
--   records to return. The maximum number of results is 100.
--   
--   <a>$sel:channelName:GetChannelSchedule'</a>,
--   <a>getChannelSchedule_channelName</a> - The identifier for the channel
--   you are working on.
newGetChannelSchedule :: Text -> GetChannelSchedule

-- | <i>See:</i> <a>newGetChannelScheduleResponse</a> smart constructor.
data GetChannelScheduleResponse
GetChannelScheduleResponse' :: Maybe [ScheduleEntry] -> Maybe Text -> Int -> GetChannelScheduleResponse

-- | Create a value of <a>GetChannelScheduleResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:GetChannelScheduleResponse'</a>,
--   <a>getChannelScheduleResponse_items</a> - An array of schedule entries
--   for the channel.
--   
--   <a>$sel:nextToken:GetChannelSchedule'</a>,
--   <a>getChannelScheduleResponse_nextToken</a> - Pagination token from
--   the GET list request. Use the token to fetch the next page of results.
--   
--   <a>$sel:httpStatus:GetChannelScheduleResponse'</a>,
--   <a>getChannelScheduleResponse_httpStatus</a> - The response's http
--   status code.
newGetChannelScheduleResponse :: Int -> GetChannelScheduleResponse

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> HashMap Text Text -> TagResource

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The Amazon Resource Name (ARN) for the playback configuration. You can
--   get this from the response to any playback configuration request.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - A
--   comma-separated list of tag key:value pairs.
newTagResource :: Text -> TagResource

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newTagResourceResponse :: TagResourceResponse

-- | Configures Amazon CloudWatch log settings for a playback
--   configuration.
--   
--   <i>See:</i> <a>newConfigureLogsForPlaybackConfiguration</a> smart
--   constructor.
data ConfigureLogsForPlaybackConfiguration
ConfigureLogsForPlaybackConfiguration' :: Int -> Text -> ConfigureLogsForPlaybackConfiguration

-- | Create a value of <a>ConfigureLogsForPlaybackConfiguration</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:percentEnabled:ConfigureLogsForPlaybackConfiguration'</a>,
--   <a>configureLogsForPlaybackConfiguration_percentEnabled</a> - The
--   percentage of session logs that MediaTailor sends to your Cloudwatch
--   Logs account. For example, if your playback configuration has 1000
--   sessions and percentEnabled is set to 60, MediaTailor sends logs for
--   600 of the sessions to CloudWatch Logs. MediaTailor decides at random
--   which of the playback configuration sessions to send logs for. If you
--   want to view logs for a specific session, you can use the <a>debug log
--   mode</a>.
--   
--   Valid values: 0 - 100
--   
--   
--   <a>$sel:playbackConfigurationName:ConfigureLogsForPlaybackConfiguration'</a>,
--   <a>configureLogsForPlaybackConfiguration_playbackConfigurationName</a>
--   - The name of the playback configuration.
newConfigureLogsForPlaybackConfiguration :: Int -> Text -> ConfigureLogsForPlaybackConfiguration

-- | <i>See:</i> <a>newConfigureLogsForPlaybackConfigurationResponse</a>
--   smart constructor.
data ConfigureLogsForPlaybackConfigurationResponse
ConfigureLogsForPlaybackConfigurationResponse' :: Maybe Text -> Maybe Int -> Int -> ConfigureLogsForPlaybackConfigurationResponse

-- | Create a value of <a>ConfigureLogsForPlaybackConfigurationResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:playbackConfigurationName:ConfigureLogsForPlaybackConfiguration'</a>,
--   <a>configureLogsForPlaybackConfigurationResponse_playbackConfigurationName</a>
--   - The name of the playback configuration.
--   
--   <a>$sel:percentEnabled:ConfigureLogsForPlaybackConfiguration'</a>,
--   <a>configureLogsForPlaybackConfigurationResponse_percentEnabled</a> -
--   The percentage of session logs that MediaTailor sends to your
--   Cloudwatch Logs account.
--   
--   <a>$sel:httpStatus:ConfigureLogsForPlaybackConfigurationResponse'</a>,
--   <a>configureLogsForPlaybackConfigurationResponse_httpStatus</a> - The
--   response's http status code.
newConfigureLogsForPlaybackConfigurationResponse :: Int -> ConfigureLogsForPlaybackConfigurationResponse

-- | <i>See:</i> <a>newStopChannel</a> smart constructor.
data StopChannel
StopChannel' :: Text -> StopChannel

-- | Create a value of <a>StopChannel</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelName:StopChannel'</a>, <a>stopChannel_channelName</a> -
--   The identifier for the channel you are working on.
newStopChannel :: Text -> StopChannel

-- | <i>See:</i> <a>newStopChannelResponse</a> smart constructor.
data StopChannelResponse
StopChannelResponse' :: Int -> StopChannelResponse

-- | Create a value of <a>StopChannelResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:StopChannelResponse'</a>,
--   <a>stopChannelResponse_httpStatus</a> - The response's http status
--   code.
newStopChannelResponse :: Int -> StopChannelResponse

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The Amazon Resource Name (ARN) for
--   the playback configuration. You can get this from the response to any
--   playback configuration request.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - A
--   comma-separated list of the tag keys to remove from the playback
--   configuration.
newUntagResource :: Text -> UntagResource

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUntagResourceResponse :: UntagResourceResponse

-- | <i>See:</i> <a>newDescribeChannel</a> smart constructor.
data DescribeChannel
DescribeChannel' :: Text -> DescribeChannel

-- | Create a value of <a>DescribeChannel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelName:DescribeChannel'</a>,
--   <a>describeChannel_channelName</a> - The identifier for the channel
--   you are working on.
newDescribeChannel :: Text -> DescribeChannel

-- | <i>See:</i> <a>newDescribeChannelResponse</a> smart constructor.
data DescribeChannelResponse
DescribeChannelResponse' :: Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe [ResponseOutputItem] -> Maybe ChannelState -> Maybe SlateSource -> Maybe (HashMap Text Text) -> Int -> DescribeChannelResponse

-- | Create a value of <a>DescribeChannelResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:DescribeChannelResponse'</a>,
--   <a>describeChannelResponse_creationTime</a> - The timestamp of when
--   the channel was created.
--   
--   <a>$sel:arn:DescribeChannelResponse'</a>,
--   <a>describeChannelResponse_arn</a> - The ARN of the channel.
--   
--   <a>$sel:lastModifiedTime:DescribeChannelResponse'</a>,
--   <a>describeChannelResponse_lastModifiedTime</a> - The timestamp of
--   when the channel was last modified.
--   
--   <a>$sel:playbackMode:DescribeChannelResponse'</a>,
--   <a>describeChannelResponse_playbackMode</a> - The channel's playback
--   mode.
--   
--   <a>$sel:channelName:DescribeChannel'</a>,
--   <a>describeChannelResponse_channelName</a> - The name of the channel.
--   
--   <a>$sel:outputs:DescribeChannelResponse'</a>,
--   <a>describeChannelResponse_outputs</a> - The channel's output
--   properties.
--   
--   <a>$sel:channelState:DescribeChannelResponse'</a>,
--   <a>describeChannelResponse_channelState</a> - Indicates whether the
--   channel is in a running state or not.
--   
--   <a>$sel:fillerSlate:DescribeChannelResponse'</a>,
--   <a>describeChannelResponse_fillerSlate</a> - Contains information
--   about the slate used to fill gaps between programs in the schedule.
--   
--   <a>$sel:tags:DescribeChannelResponse'</a>,
--   <a>describeChannelResponse_tags</a> - The tags assigned to the
--   channel.
--   
--   <a>$sel:httpStatus:DescribeChannelResponse'</a>,
--   <a>describeChannelResponse_httpStatus</a> - The response's http status
--   code.
newDescribeChannelResponse :: Int -> DescribeChannelResponse

-- | <i>See:</i> <a>newListVodSources</a> smart constructor.
data ListVodSources
ListVodSources' :: Maybe Text -> Maybe Natural -> Text -> ListVodSources

-- | Create a value of <a>ListVodSources</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListVodSources'</a>, <a>listVodSources_nextToken</a>
--   - Pagination token from the GET list request. Use the token to fetch
--   the next page of results.
--   
--   <a>$sel:maxResults:ListVodSources'</a>,
--   <a>listVodSources_maxResults</a> - Upper bound on number of records to
--   return. The maximum number of results is 100.
--   
--   <a>$sel:sourceLocationName:ListVodSources'</a>,
--   <a>listVodSources_sourceLocationName</a> - The identifier for the
--   source location you are working on.
newListVodSources :: Text -> ListVodSources

-- | <i>See:</i> <a>newListVodSourcesResponse</a> smart constructor.
data ListVodSourcesResponse
ListVodSourcesResponse' :: Maybe [VodSource] -> Maybe Text -> Int -> ListVodSourcesResponse

-- | Create a value of <a>ListVodSourcesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:ListVodSourcesResponse'</a>,
--   <a>listVodSourcesResponse_items</a> - Lists the VOD sources.
--   
--   <a>$sel:nextToken:ListVodSources'</a>,
--   <a>listVodSourcesResponse_nextToken</a> - Pagination token from the
--   list request. Use the token to fetch the next page of results.
--   
--   <a>$sel:httpStatus:ListVodSourcesResponse'</a>,
--   <a>listVodSourcesResponse_httpStatus</a> - The response's http status
--   code.
newListVodSourcesResponse :: Int -> ListVodSourcesResponse

-- | <i>See:</i> <a>newDescribeProgram</a> smart constructor.
data DescribeProgram
DescribeProgram' :: Text -> Text -> DescribeProgram

-- | Create a value of <a>DescribeProgram</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelName:DescribeProgram'</a>,
--   <a>describeProgram_channelName</a> - The identifier for the channel
--   you are working on.
--   
--   <a>$sel:programName:DescribeProgram'</a>,
--   <a>describeProgram_programName</a> - The identifier for the program
--   you are working on.
newDescribeProgram :: Text -> Text -> DescribeProgram

-- | <i>See:</i> <a>newDescribeProgramResponse</a> smart constructor.
data DescribeProgramResponse
DescribeProgramResponse' :: Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [AdBreak] -> Maybe Text -> Maybe POSIX -> Maybe Text -> Int -> DescribeProgramResponse

-- | Create a value of <a>DescribeProgramResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:DescribeProgramResponse'</a>,
--   <a>describeProgramResponse_creationTime</a> - The timestamp of when
--   the program was created.
--   
--   <a>$sel:sourceLocationName:DescribeProgramResponse'</a>,
--   <a>describeProgramResponse_sourceLocationName</a> - The source
--   location name.
--   
--   <a>$sel:arn:DescribeProgramResponse'</a>,
--   <a>describeProgramResponse_arn</a> - The ARN of the program.
--   
--   <a>$sel:programName:DescribeProgram'</a>,
--   <a>describeProgramResponse_programName</a> - The name of the program.
--   
--   <a>$sel:adBreaks:DescribeProgramResponse'</a>,
--   <a>describeProgramResponse_adBreaks</a> - The ad break configuration
--   settings.
--   
--   <a>$sel:channelName:DescribeProgram'</a>,
--   <a>describeProgramResponse_channelName</a> - The name of the channel
--   that the program belongs to.
--   
--   <a>$sel:scheduledStartTime:DescribeProgramResponse'</a>,
--   <a>describeProgramResponse_scheduledStartTime</a> - The date and time
--   that the program is scheduled to start in ISO 8601 format and
--   Coordinated Universal Time (UTC). For example, the value
--   2021-03-27T17:48:16.751Z represents March 27, 2021 at 17:48:16.751
--   UTC.
--   
--   <a>$sel:vodSourceName:DescribeProgramResponse'</a>,
--   <a>describeProgramResponse_vodSourceName</a> - The name that's used to
--   refer to a VOD source.
--   
--   <a>$sel:httpStatus:DescribeProgramResponse'</a>,
--   <a>describeProgramResponse_httpStatus</a> - The response's http status
--   code.
newDescribeProgramResponse :: Int -> DescribeProgramResponse
newtype AccessType
AccessType' :: Text -> AccessType
[fromAccessType] :: AccessType -> Text
pattern AccessType_S3_SIGV4 :: AccessType
pattern AccessType_SECRETS_MANAGER_ACCESS_TOKEN :: AccessType
newtype ChannelState
ChannelState' :: Text -> ChannelState
[fromChannelState] :: ChannelState -> Text
pattern ChannelState_RUNNING :: ChannelState
pattern ChannelState_STOPPED :: ChannelState
newtype MessageType
MessageType' :: Text -> MessageType
[fromMessageType] :: MessageType -> Text
pattern MessageType_SPLICE_INSERT :: MessageType
newtype Mode
Mode' :: Text -> Mode
[fromMode] :: Mode -> Text
pattern Mode_BEHIND_LIVE_EDGE :: Mode
pattern Mode_OFF :: Mode
newtype Operator
Operator' :: Text -> Operator
[fromOperator] :: Operator -> Text
pattern Operator_EQUALS :: Operator
newtype OriginManifestType
OriginManifestType' :: Text -> OriginManifestType
[fromOriginManifestType] :: OriginManifestType -> Text
pattern OriginManifestType_MULTI_PERIOD :: OriginManifestType
pattern OriginManifestType_SINGLE_PERIOD :: OriginManifestType
newtype PlaybackMode
PlaybackMode' :: Text -> PlaybackMode
[fromPlaybackMode] :: PlaybackMode -> Text
pattern PlaybackMode_LINEAR :: PlaybackMode
pattern PlaybackMode_LOOP :: PlaybackMode
newtype RelativePosition
RelativePosition' :: Text -> RelativePosition
[fromRelativePosition] :: RelativePosition -> Text
pattern RelativePosition_AFTER_PROGRAM :: RelativePosition
pattern RelativePosition_BEFORE_PROGRAM :: RelativePosition
newtype ScheduleEntryType
ScheduleEntryType' :: Text -> ScheduleEntryType
[fromScheduleEntryType] :: ScheduleEntryType -> Text
pattern ScheduleEntryType_FILLER_SLATE :: ScheduleEntryType
pattern ScheduleEntryType_PROGRAM :: ScheduleEntryType
newtype Type
Type' :: Text -> Type
[fromType] :: Type -> Text
pattern Type_DASH :: Type
pattern Type_HLS :: Type

-- | Access configuration parameters.
--   
--   <i>See:</i> <a>newAccessConfiguration</a> smart constructor.
data AccessConfiguration
AccessConfiguration' :: Maybe AccessType -> Maybe SecretsManagerAccessTokenConfiguration -> AccessConfiguration

-- | Create a value of <a>AccessConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accessType:AccessConfiguration'</a>,
--   <a>accessConfiguration_accessType</a> - The type of authentication
--   used to access content from HttpConfiguration::BaseUrl on your source
--   location. Accepted value: S3_SIGV4.
--   
--   S3_SIGV4 - AWS Signature Version 4 authentication for Amazon S3 hosted
--   virtual-style access. If your source location base URL is an Amazon S3
--   bucket, MediaTailor can use AWS Signature Version 4 (SigV4)
--   authentication to access the bucket where your source content is
--   stored. Your MediaTailor source location baseURL must follow the S3
--   virtual hosted-style request URL format. For example,
--   https://bucket-name.s3.Region.amazonaws.com/key-name.
--   
--   Before you can use S3_SIGV4, you must meet these requirements:
--   
--   â€¢ You must allow MediaTailor to access your S3 bucket by granting
--   mediatailor.amazonaws.com principal access in IAM. For information
--   about configuring access in IAM, see Access management in the IAM User
--   Guide.
--   
--   â€¢ The mediatailor.amazonaws.com service principal must have
--   permissions to read all top level manifests referenced by the
--   VodSource packaging configurations.
--   
--   â€¢ The caller of the API must have s3:GetObject IAM permissions to read
--   all top level manifests referenced by your MediaTailor VodSource
--   packaging configurations.
--   
--   
--   <a>$sel:secretsManagerAccessTokenConfiguration:AccessConfiguration'</a>,
--   <a>accessConfiguration_secretsManagerAccessTokenConfiguration</a> -
--   AWS Secrets Manager access token configuration parameters.
newAccessConfiguration :: AccessConfiguration

-- | Ad break configuration parameters.
--   
--   <i>See:</i> <a>newAdBreak</a> smart constructor.
data AdBreak
AdBreak' :: Maybe SpliceInsertMessage -> Maybe MessageType -> Maybe SlateSource -> Maybe Integer -> AdBreak

-- | Create a value of <a>AdBreak</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:spliceInsertMessage:AdBreak'</a>,
--   <a>adBreak_spliceInsertMessage</a> - This defines the SCTE-35
--   splice_insert() message inserted around the ad. For information about
--   using splice_insert(), see the SCTE-35 specficiaiton, section 9.7.3.1.
--   
--   <a>$sel:messageType:AdBreak'</a>, <a>adBreak_messageType</a> - The
--   SCTE-35 ad insertion type. Accepted value: SPLICE_INSERT.
--   
--   <a>$sel:slate:AdBreak'</a>, <a>adBreak_slate</a> - Ad break slate
--   configuration.
--   
--   <a>$sel:offsetMillis:AdBreak'</a>, <a>adBreak_offsetMillis</a> - How
--   long (in milliseconds) after the beginning of the program that an ad
--   starts. This value must fall within 100ms of a segment boundary,
--   otherwise the ad break will be skipped.
newAdBreak :: AdBreak

-- | For HLS, when set to true, MediaTailor passes through EXT-X-CUE-IN,
--   EXT-X-CUE-OUT, and EXT-X-SPLICEPOINT-SCTE35 ad markers from the origin
--   manifest to the MediaTailor personalized manifest.
--   
--   No logic is applied to these ad markers. For example, if EXT-X-CUE-OUT
--   has a value of 60, but no ads are filled for that ad break,
--   MediaTailor will not set the value to 0.
--   
--   <i>See:</i> <a>newAdMarkerPassthrough</a> smart constructor.
data AdMarkerPassthrough
AdMarkerPassthrough' :: Maybe Bool -> AdMarkerPassthrough

-- | Create a value of <a>AdMarkerPassthrough</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabled:AdMarkerPassthrough'</a>,
--   <a>adMarkerPassthrough_enabled</a> - Enables ad marker passthrough for
--   your configuration.
newAdMarkerPassthrough :: AdMarkerPassthrough

-- | Alert configuration parameters.
--   
--   <i>See:</i> <a>newAlert</a> smart constructor.
data Alert
Alert' :: Text -> Text -> POSIX -> [Text] -> Text -> Alert

-- | Create a value of <a>Alert</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:Alert'</a>, <a>alert_resourceArn</a> - The Amazon
--   Resource Name (ARN) of the resource.
--   
--   <a>$sel:alertCode:Alert'</a>, <a>alert_alertCode</a> - The code for
--   the alert. For example, NOT_PROCESSED.
--   
--   <a>$sel:lastModifiedTime:Alert'</a>, <a>alert_lastModifiedTime</a> -
--   The timestamp when the alert was last modified.
--   
--   <a>$sel:relatedResourceArns:Alert'</a>,
--   <a>alert_relatedResourceArns</a> - The Amazon Resource Names (ARNs)
--   related to this alert.
--   
--   <a>$sel:alertMessage:Alert'</a>, <a>alert_alertMessage</a> - If an
--   alert is generated for a resource, an explanation of the reason for
--   the alert.
newAlert :: Text -> Text -> UTCTime -> Text -> Alert

-- | MediaTailor only places (consumes) prefetched ads if the ad break
--   meets the criteria defined by the dynamic variables. This gives you
--   granular control over which ad break to place the prefetched ads into.
--   
--   As an example, let's say that you set DynamicVariable to scte.event_id
--   and Operator to EQUALS, and your playback configuration has an ADS URL
--   of
--   https://my.ads.server.com/path?&amp;podId=[scte.avail_num]&amp;event=[scte.event_id]&amp;duration=[session.avail_duration_secs].
--   And the prefetch request to the ADS contains these values
--   https://my.ads.server.com/path?&amp;podId=3&amp;event=my-awesome-event&amp;duration=30.
--   MediaTailor will only insert the prefetched ads into the ad break if
--   has a SCTE marker with an event id of my-awesome-event, since it must
--   match the event id that MediaTailor uses to query the ADS.
--   
--   You can specify up to five AvailMatchingCriteria. If you specify
--   multiple AvailMatchingCriteria, MediaTailor combines them to match
--   using a logical AND. You can model logical OR combinations by creating
--   multiple prefetch schedules.
--   
--   <i>See:</i> <a>newAvailMatchingCriteria</a> smart constructor.
data AvailMatchingCriteria
AvailMatchingCriteria' :: Operator -> Text -> AvailMatchingCriteria

-- | Create a value of <a>AvailMatchingCriteria</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:operator:AvailMatchingCriteria'</a>,
--   <a>availMatchingCriteria_operator</a> - For the DynamicVariable
--   specified in AvailMatchingCriteria, the Operator that is used for the
--   comparison.
--   
--   <a>$sel:dynamicVariable:AvailMatchingCriteria'</a>,
--   <a>availMatchingCriteria_dynamicVariable</a> - The dynamic variable(s)
--   that MediaTailor should use as avail matching criteria. MediaTailor
--   only places the prefetched ads into the avail if the avail matches the
--   criteria defined by the dynamic variable. For information about
--   dynamic variables, see <a>Using dynamic ad variables</a> in the
--   <i>MediaTailor User Guide</i>.
--   
--   You can include up to 100 dynamic variables.
newAvailMatchingCriteria :: Operator -> Text -> AvailMatchingCriteria

-- | The configuration for avail suppression, also known as ad suppression.
--   For more information about ad suppression, see <a>Ad Suppression</a>.
--   
--   <i>See:</i> <a>newAvailSuppression</a> smart constructor.
data AvailSuppression
AvailSuppression' :: Maybe Text -> Maybe Mode -> AvailSuppression

-- | Create a value of <a>AvailSuppression</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:AvailSuppression'</a>, <a>availSuppression_value</a> - A
--   live edge offset time in HH:MM:SS. MediaTailor won't fill ad breaks on
--   or behind this time in the manifest lookback window. If Value is set
--   to 00:00:00, it is in sync with the live edge, and MediaTailor won't
--   fill any ad breaks on or behind the live edge. If you set a Value
--   time, MediaTailor won't fill any ad breaks on or behind this time in
--   the manifest lookback window. For example, if you set 00:45:00, then
--   MediaTailor will fill ad breaks that occur within 45 minutes behind
--   the live edge, but won't fill ad breaks on or behind 45 minutes behind
--   the live edge.
--   
--   <a>$sel:mode:AvailSuppression'</a>, <a>availSuppression_mode</a> -
--   Sets the ad suppression mode. By default, ad suppression is off and
--   all ad breaks are filled with ads or slate. When Mode is set to
--   BEHIND_LIVE_EDGE, ad suppression is active and MediaTailor won't fill
--   ad breaks on or behind the ad suppression Value time in the manifest
--   lookback window.
newAvailSuppression :: AvailSuppression

-- | The configuration for bumpers. Bumpers are short audio or video clips
--   that play at the start or before the end of an ad break. To learn more
--   about bumpers, see <a>Bumpers</a>.
--   
--   <i>See:</i> <a>newBumper</a> smart constructor.
data Bumper
Bumper' :: Maybe Text -> Maybe Text -> Bumper

-- | Create a value of <a>Bumper</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:endUrl:Bumper'</a>, <a>bumper_endUrl</a> - The URL for the end
--   bumper asset.
--   
--   <a>$sel:startUrl:Bumper'</a>, <a>bumper_startUrl</a> - The URL for the
--   start bumper asset.
newBumper :: Bumper

-- | The configuration for using a content delivery network (CDN), like
--   Amazon CloudFront, for content and ad segment management.
--   
--   <i>See:</i> <a>newCdnConfiguration</a> smart constructor.
data CdnConfiguration
CdnConfiguration' :: Maybe Text -> Maybe Text -> CdnConfiguration

-- | Create a value of <a>CdnConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:adSegmentUrlPrefix:CdnConfiguration'</a>,
--   <a>cdnConfiguration_adSegmentUrlPrefix</a> - A non-default content
--   delivery network (CDN) to serve ad segments. By default, AWS Elemental
--   MediaTailor uses Amazon CloudFront with default cache settings as its
--   CDN for ad segments. To set up an alternate CDN, create a rule in your
--   CDN for the origin ads.mediatailor.&amp;lt;region&gt;.amazonaws.com.
--   Then specify the rule's name in this AdSegmentUrlPrefix. When AWS
--   Elemental MediaTailor serves a manifest, it reports your CDN as the
--   source for ad segments.
--   
--   <a>$sel:contentSegmentUrlPrefix:CdnConfiguration'</a>,
--   <a>cdnConfiguration_contentSegmentUrlPrefix</a> - A content delivery
--   network (CDN) to cache content segments, so that content requests
--   donâ€™t always have to go to the origin server. First, create a rule in
--   your CDN for the content segment origin server. Then specify the
--   rule's name in this ContentSegmentUrlPrefix. When AWS Elemental
--   MediaTailor serves a manifest, it reports your CDN as the source for
--   content segments.
newCdnConfiguration :: CdnConfiguration

-- | The configuration parameters for a channel.
--   
--   <i>See:</i> <a>newChannel</a> smart constructor.
data Channel
Channel' :: Maybe POSIX -> Maybe POSIX -> Maybe SlateSource -> Maybe (HashMap Text Text) -> Text -> Text -> [ResponseOutputItem] -> Text -> Text -> Channel

-- | Create a value of <a>Channel</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:Channel'</a>, <a>channel_creationTime</a> - The
--   timestamp of when the channel was created.
--   
--   <a>$sel:lastModifiedTime:Channel'</a>, <a>channel_lastModifiedTime</a>
--   - The timestamp of when the channel was last modified.
--   
--   <a>$sel:fillerSlate:Channel'</a>, <a>channel_fillerSlate</a> -
--   Contains information about the slate used to fill gaps between
--   programs in the schedule. You must configure FillerSlate if your
--   channel uses an LINEAR PlaybackMode.
--   
--   <a>$sel:tags:Channel'</a>, <a>channel_tags</a> - The tags to assign to
--   the channel.
--   
--   <a>$sel:channelState:Channel'</a>, <a>channel_channelState</a> -
--   Returns the state whether the channel is running or not.
--   
--   <a>$sel:channelName:Channel'</a>, <a>channel_channelName</a> - The
--   name of the channel.
--   
--   <a>$sel:outputs:Channel'</a>, <a>channel_outputs</a> - The channel's
--   output properties.
--   
--   <a>$sel:arn:Channel'</a>, <a>channel_arn</a> - The ARN of the channel.
--   
--   <a>$sel:playbackMode:Channel'</a>, <a>channel_playbackMode</a> - The
--   type of playback mode for this channel.
--   
--   LINEAR - Programs play back-to-back only once.
--   
--   LOOP - Programs play back-to-back in an endless loop. When the last
--   program in the schedule plays, playback loops back to the first
--   program in the schedule.
newChannel :: Text -> Text -> Text -> Text -> Channel

-- | The configuration for DASH content.
--   
--   <i>See:</i> <a>newDashConfiguration</a> smart constructor.
data DashConfiguration
DashConfiguration' :: Maybe Text -> Maybe OriginManifestType -> Maybe Text -> DashConfiguration

-- | Create a value of <a>DashConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:manifestEndpointPrefix:DashConfiguration'</a>,
--   <a>dashConfiguration_manifestEndpointPrefix</a> - The URL generated by
--   MediaTailor to initiate a playback session. The session uses
--   server-side reporting. This setting is ignored in PUT operations.
--   
--   <a>$sel:originManifestType:DashConfiguration'</a>,
--   <a>dashConfiguration_originManifestType</a> - The setting that
--   controls whether MediaTailor handles manifests from the origin server
--   as multi-period manifests or single-period manifests. If your origin
--   server produces single-period manifests, set this to SINGLE_PERIOD.
--   The default setting is MULTI_PERIOD. For multi-period manifests, omit
--   this setting or set it to MULTI_PERIOD.
--   
--   <a>$sel:mpdLocation:DashConfiguration'</a>,
--   <a>dashConfiguration_mpdLocation</a> - The setting that controls
--   whether MediaTailor includes the Location tag in DASH manifests.
--   MediaTailor populates the Location tag with the URL for manifest
--   update requests, to be used by players that don't support sticky
--   redirects. Disable this if you have CDN routing rules set up for
--   accessing MediaTailor manifests, and you are either using client-side
--   reporting or your players support sticky HTTP redirects. Valid values
--   are DISABLED and EMT_DEFAULT. The EMT_DEFAULT setting enables the
--   inclusion of the tag and is the default value.
newDashConfiguration :: DashConfiguration

-- | The configuration for DASH PUT operations.
--   
--   <i>See:</i> <a>newDashConfigurationForPut</a> smart constructor.
data DashConfigurationForPut
DashConfigurationForPut' :: Maybe OriginManifestType -> Maybe Text -> DashConfigurationForPut

-- | Create a value of <a>DashConfigurationForPut</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:originManifestType:DashConfigurationForPut'</a>,
--   <a>dashConfigurationForPut_originManifestType</a> - The setting that
--   controls whether MediaTailor handles manifests from the origin server
--   as multi-period manifests or single-period manifests. If your origin
--   server produces single-period manifests, set this to SINGLE_PERIOD.
--   The default setting is MULTI_PERIOD. For multi-period manifests, omit
--   this setting or set it to MULTI_PERIOD.
--   
--   <a>$sel:mpdLocation:DashConfigurationForPut'</a>,
--   <a>dashConfigurationForPut_mpdLocation</a> - The setting that controls
--   whether MediaTailor includes the Location tag in DASH manifests.
--   MediaTailor populates the Location tag with the URL for manifest
--   update requests, to be used by players that don't support sticky
--   redirects. Disable this if you have CDN routing rules set up for
--   accessing MediaTailor manifests, and you are either using client-side
--   reporting or your players support sticky HTTP redirects. Valid values
--   are DISABLED and EMT_DEFAULT. The EMT_DEFAULT setting enables the
--   inclusion of the tag and is the default value.
newDashConfigurationForPut :: DashConfigurationForPut

-- | Dash manifest configuration parameters.
--   
--   <i>See:</i> <a>newDashPlaylistSettings</a> smart constructor.
data DashPlaylistSettings
DashPlaylistSettings' :: Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> DashPlaylistSettings

-- | Create a value of <a>DashPlaylistSettings</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:minBufferTimeSeconds:DashPlaylistSettings'</a>,
--   <a>dashPlaylistSettings_minBufferTimeSeconds</a> - Minimum amount of
--   content (measured in seconds) that a player must keep available in the
--   buffer. Minimum value: 2 seconds. Maximum value: 60 seconds.
--   
--   <a>$sel:minUpdatePeriodSeconds:DashPlaylistSettings'</a>,
--   <a>dashPlaylistSettings_minUpdatePeriodSeconds</a> - Minimum amount of
--   time (in seconds) that the player should wait before requesting
--   updates to the manifest. Minimum value: 2 seconds. Maximum value: 60
--   seconds.
--   
--   <a>$sel:suggestedPresentationDelaySeconds:DashPlaylistSettings'</a>,
--   <a>dashPlaylistSettings_suggestedPresentationDelaySeconds</a> - Amount
--   of time (in seconds) that the player should be from the live point at
--   the end of the manifest. Minimum value: 2 seconds. Maximum value: 60
--   seconds.
--   
--   <a>$sel:manifestWindowSeconds:DashPlaylistSettings'</a>,
--   <a>dashPlaylistSettings_manifestWindowSeconds</a> - The total duration
--   (in seconds) of each manifest. Minimum value: 30 seconds. Maximum
--   value: 3600 seconds.
newDashPlaylistSettings :: DashPlaylistSettings

-- | The optional configuration for a server that serves segments. Use this
--   if you want the segment delivery server to be different from the
--   source location server. For example, you can configure your source
--   location server to be an origination server, such as MediaPackage, and
--   the segment delivery server to be a content delivery network (CDN),
--   such as CloudFront. If you don't specify a segment delivery server,
--   then the source location server is used.
--   
--   <i>See:</i> <a>newDefaultSegmentDeliveryConfiguration</a> smart
--   constructor.
data DefaultSegmentDeliveryConfiguration
DefaultSegmentDeliveryConfiguration' :: Maybe Text -> DefaultSegmentDeliveryConfiguration

-- | Create a value of <a>DefaultSegmentDeliveryConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:baseUrl:DefaultSegmentDeliveryConfiguration'</a>,
--   <a>defaultSegmentDeliveryConfiguration_baseUrl</a> - The hostname of
--   the server that will be used to serve segments. This string must
--   include the protocol, such as <b>https://</b>.
newDefaultSegmentDeliveryConfiguration :: DefaultSegmentDeliveryConfiguration

-- | The configuration for HLS content.
--   
--   <i>See:</i> <a>newHlsConfiguration</a> smart constructor.
data HlsConfiguration
HlsConfiguration' :: Maybe Text -> HlsConfiguration

-- | Create a value of <a>HlsConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:manifestEndpointPrefix:HlsConfiguration'</a>,
--   <a>hlsConfiguration_manifestEndpointPrefix</a> - The URL that is used
--   to initiate a playback session for devices that support Apple HLS. The
--   session uses server-side reporting.
newHlsConfiguration :: HlsConfiguration

-- | HLS playlist configuration parameters.
--   
--   <i>See:</i> <a>newHlsPlaylistSettings</a> smart constructor.
data HlsPlaylistSettings
HlsPlaylistSettings' :: Maybe Int -> HlsPlaylistSettings

-- | Create a value of <a>HlsPlaylistSettings</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:manifestWindowSeconds:HlsPlaylistSettings'</a>,
--   <a>hlsPlaylistSettings_manifestWindowSeconds</a> - The total duration
--   (in seconds) of each manifest. Minimum value: 30 seconds. Maximum
--   value: 3600 seconds.
newHlsPlaylistSettings :: HlsPlaylistSettings

-- | The HTTP configuration for the source location.
--   
--   <i>See:</i> <a>newHttpConfiguration</a> smart constructor.
data HttpConfiguration
HttpConfiguration' :: Text -> HttpConfiguration

-- | Create a value of <a>HttpConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:baseUrl:HttpConfiguration'</a>,
--   <a>httpConfiguration_baseUrl</a> - The base URL for the source
--   location host server. This string must include the protocol, such as
--   <b>https://</b>.
newHttpConfiguration :: Text -> HttpConfiguration

-- | The HTTP package configuration properties for the requested VOD
--   source.
--   
--   <i>See:</i> <a>newHttpPackageConfiguration</a> smart constructor.
data HttpPackageConfiguration
HttpPackageConfiguration' :: Text -> Type -> Text -> HttpPackageConfiguration

-- | Create a value of <a>HttpPackageConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:path:HttpPackageConfiguration'</a>,
--   <a>httpPackageConfiguration_path</a> - The relative path to the URL
--   for this VOD source. This is combined with
--   SourceLocation::HttpConfiguration::BaseUrl to form a valid URL.
--   
--   <a>$sel:type':HttpPackageConfiguration'</a>,
--   <a>httpPackageConfiguration_type</a> - The streaming protocol for this
--   package configuration. Supported values are HLS and DASH.
--   
--   <a>$sel:sourceGroup:HttpPackageConfiguration'</a>,
--   <a>httpPackageConfiguration_sourceGroup</a> - The name of the source
--   group. This has to match one of the Channel::Outputs::SourceGroup.
newHttpPackageConfiguration :: Text -> Type -> Text -> HttpPackageConfiguration

-- | The configuration for pre-roll ad insertion.
--   
--   <i>See:</i> <a>newLivePreRollConfiguration</a> smart constructor.
data LivePreRollConfiguration
LivePreRollConfiguration' :: Maybe Text -> Maybe Int -> LivePreRollConfiguration

-- | Create a value of <a>LivePreRollConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:adDecisionServerUrl:LivePreRollConfiguration'</a>,
--   <a>livePreRollConfiguration_adDecisionServerUrl</a> - The URL for the
--   ad decision server (ADS) for pre-roll ads. This includes the
--   specification of static parameters and placeholders for dynamic
--   parameters. AWS Elemental MediaTailor substitutes player-specific and
--   session-specific parameters as needed when calling the ADS.
--   Alternately, for testing, you can provide a static VAST URL. The
--   maximum length is 25,000 characters.
--   
--   <a>$sel:maxDurationSeconds:LivePreRollConfiguration'</a>,
--   <a>livePreRollConfiguration_maxDurationSeconds</a> - The maximum
--   allowed duration for the pre-roll ad avail. AWS Elemental MediaTailor
--   won't play pre-roll ads to exceed this duration, regardless of the
--   total duration of ads that the ADS returns.
newLivePreRollConfiguration :: LivePreRollConfiguration

-- | Returns Amazon CloudWatch log settings for a playback configuration.
--   
--   <i>See:</i> <a>newLogConfiguration</a> smart constructor.
data LogConfiguration
LogConfiguration' :: Int -> LogConfiguration

-- | Create a value of <a>LogConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:percentEnabled:LogConfiguration'</a>,
--   <a>logConfiguration_percentEnabled</a> - The percentage of session
--   logs that MediaTailor sends to your Cloudwatch Logs account. For
--   example, if your playback configuration has 1000 sessions and
--   percentEnabled is set to 60, MediaTailor sends logs for 600 of the
--   sessions to CloudWatch Logs. MediaTailor decides at random which of
--   the playback configuration sessions to send logs for. If you want to
--   view logs for a specific session, you can use the <a>debug log
--   mode</a>.
--   
--   Valid values: 0 - 100
newLogConfiguration :: Int -> LogConfiguration

-- | The configuration for manifest processing rules. Manifest processing
--   rules enable customization of the personalized manifests created by
--   MediaTailor.
--   
--   <i>See:</i> <a>newManifestProcessingRules</a> smart constructor.
data ManifestProcessingRules
ManifestProcessingRules' :: Maybe AdMarkerPassthrough -> ManifestProcessingRules

-- | Create a value of <a>ManifestProcessingRules</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:adMarkerPassthrough:ManifestProcessingRules'</a>,
--   <a>manifestProcessingRules_adMarkerPassthrough</a> - For HLS, when set
--   to true, MediaTailor passes through EXT-X-CUE-IN, EXT-X-CUE-OUT, and
--   EXT-X-SPLICEPOINT-SCTE35 ad markers from the origin manifest to the
--   MediaTailor personalized manifest.
--   
--   No logic is applied to these ad markers. For example, if EXT-X-CUE-OUT
--   has a value of 60, but no ads are filled for that ad break,
--   MediaTailor will not set the value to 0.
newManifestProcessingRules :: ManifestProcessingRules

-- | Creates a playback configuration. For information about MediaTailor
--   configurations, see <a>Working with configurations in AWS Elemental
--   MediaTailor</a>.
--   
--   <i>See:</i> <a>newPlaybackConfiguration</a> smart constructor.
data PlaybackConfiguration
PlaybackConfiguration' :: Maybe Text -> Maybe HlsConfiguration -> Maybe Natural -> Maybe Text -> Maybe AvailSuppression -> Maybe Bumper -> Maybe Text -> Maybe Text -> Maybe DashConfiguration -> Maybe ManifestProcessingRules -> Maybe LogConfiguration -> Maybe LivePreRollConfiguration -> Maybe Text -> Maybe Text -> Maybe (HashMap Text (HashMap Text Text)) -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe CdnConfiguration -> PlaybackConfiguration

-- | Create a value of <a>PlaybackConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:playbackEndpointPrefix:PlaybackConfiguration'</a>,
--   <a>playbackConfiguration_playbackEndpointPrefix</a> - The URL that the
--   player accesses to get a manifest from AWS Elemental MediaTailor.
--   
--   <a>$sel:hlsConfiguration:PlaybackConfiguration'</a>,
--   <a>playbackConfiguration_hlsConfiguration</a> - The configuration for
--   HLS content.
--   
--   <a>$sel:personalizationThresholdSeconds:PlaybackConfiguration'</a>,
--   <a>playbackConfiguration_personalizationThresholdSeconds</a> - Defines
--   the maximum duration of underfilled ad time (in seconds) allowed in an
--   ad break. If the duration of underfilled ad time exceeds the
--   personalization threshold, then the personalization of the ad break is
--   abandoned and the underlying content is shown. This feature applies to
--   <i>ad replacement</i> in live and VOD streams, rather than ad
--   insertion, because it relies on an underlying content stream. For more
--   information about ad break behavior, including ad replacement and
--   insertion, see <a>Ad Behavior in AWS Elemental MediaTailor</a>.
--   
--   <a>$sel:playbackConfigurationArn:PlaybackConfiguration'</a>,
--   <a>playbackConfiguration_playbackConfigurationArn</a> - The Amazon
--   Resource Name (ARN) for the playback configuration.
--   
--   <a>$sel:availSuppression:PlaybackConfiguration'</a>,
--   <a>playbackConfiguration_availSuppression</a> - The configuration for
--   avail suppression, also known as ad suppression. For more information
--   about ad suppression, see <a>Ad Suppression</a>.
--   
--   <a>$sel:bumper:PlaybackConfiguration'</a>,
--   <a>playbackConfiguration_bumper</a> - The configuration for bumpers.
--   Bumpers are short audio or video clips that play at the start or
--   before the end of an ad break. To learn more about bumpers, see
--   <a>Bumpers</a>.
--   
--   <a>$sel:adDecisionServerUrl:PlaybackConfiguration'</a>,
--   <a>playbackConfiguration_adDecisionServerUrl</a> - The URL for the ad
--   decision server (ADS). This includes the specification of static
--   parameters and placeholders for dynamic parameters. AWS Elemental
--   MediaTailor substitutes player-specific and session-specific
--   parameters as needed when calling the ADS. Alternately, for testing
--   you can provide a static VAST URL. The maximum length is 25,000
--   characters.
--   
--   <a>$sel:videoContentSourceUrl:PlaybackConfiguration'</a>,
--   <a>playbackConfiguration_videoContentSourceUrl</a> - The URL prefix
--   for the parent manifest for the stream, minus the asset ID. The
--   maximum length is 512 characters.
--   
--   <a>$sel:dashConfiguration:PlaybackConfiguration'</a>,
--   <a>playbackConfiguration_dashConfiguration</a> - The configuration for
--   a DASH source.
--   
--   <a>$sel:manifestProcessingRules:PlaybackConfiguration'</a>,
--   <a>playbackConfiguration_manifestProcessingRules</a> - The
--   configuration for manifest processing rules. Manifest processing rules
--   enable customization of the personalized manifests created by
--   MediaTailor.
--   
--   <a>$sel:logConfiguration:PlaybackConfiguration'</a>,
--   <a>playbackConfiguration_logConfiguration</a> - The Amazon CloudWatch
--   log settings for a playback configuration.
--   
--   <a>$sel:livePreRollConfiguration:PlaybackConfiguration'</a>,
--   <a>playbackConfiguration_livePreRollConfiguration</a> - The
--   configuration for pre-roll ad insertion.
--   
--   <a>$sel:name:PlaybackConfiguration'</a>,
--   <a>playbackConfiguration_name</a> - The identifier for the playback
--   configuration.
--   
--   
--   <a>$sel:sessionInitializationEndpointPrefix:PlaybackConfiguration'</a>,
--   <a>playbackConfiguration_sessionInitializationEndpointPrefix</a> - The
--   URL that the player uses to initialize a session that uses client-side
--   reporting.
--   
--   <a>$sel:configurationAliases:PlaybackConfiguration'</a>,
--   <a>playbackConfiguration_configurationAliases</a> - The player
--   parameters and aliases used as dynamic variables during session
--   initialization. For more information, see <a>Domain Variables</a>.
--   
--   <a>$sel:transcodeProfileName:PlaybackConfiguration'</a>,
--   <a>playbackConfiguration_transcodeProfileName</a> - The name that is
--   used to associate this playback configuration with a custom transcode
--   profile. This overrides the dynamic transcoding defaults of
--   MediaTailor. Use this only if you have already set up custom profiles
--   with the help of AWS Support.
--   
--   <a>$sel:tags:PlaybackConfiguration'</a>,
--   <a>playbackConfiguration_tags</a> - The tags to assign to the playback
--   configuration.
--   
--   <a>$sel:slateAdUrl:PlaybackConfiguration'</a>,
--   <a>playbackConfiguration_slateAdUrl</a> - The URL for a video asset to
--   transcode and use to fill in time that's not used by ads. AWS
--   Elemental MediaTailor shows the slate to fill in gaps in media
--   content. Configuring the slate is optional for non-VPAID playback
--   configurations. For VPAID, the slate is required because MediaTailor
--   provides it in the slots designated for dynamic ad content. The slate
--   must be a high-quality asset that contains both audio and video.
--   
--   <a>$sel:cdnConfiguration:PlaybackConfiguration'</a>,
--   <a>playbackConfiguration_cdnConfiguration</a> - The configuration for
--   using a content delivery network (CDN), like Amazon CloudFront, for
--   content and ad segment management.
newPlaybackConfiguration :: PlaybackConfiguration

-- | A complex type that contains settings that determine how and when that
--   MediaTailor places prefetched ads into upcoming ad breaks.
--   
--   <i>See:</i> <a>newPrefetchConsumption</a> smart constructor.
data PrefetchConsumption
PrefetchConsumption' :: Maybe POSIX -> Maybe [AvailMatchingCriteria] -> POSIX -> PrefetchConsumption

-- | Create a value of <a>PrefetchConsumption</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:startTime:PrefetchConsumption'</a>,
--   <a>prefetchConsumption_startTime</a> - The time when prefetched ads
--   are considered for use in an ad break. If you don't specify StartTime,
--   the prefetched ads are available after MediaTailor retrives them from
--   the ad decision server.
--   
--   <a>$sel:availMatchingCriteria:PrefetchConsumption'</a>,
--   <a>prefetchConsumption_availMatchingCriteria</a> - If you only want
--   MediaTailor to insert prefetched ads into avails (ad breaks) that
--   match specific dynamic variables, such as scte.event_id, set the avail
--   matching criteria.
--   
--   <a>$sel:endTime:PrefetchConsumption'</a>,
--   <a>prefetchConsumption_endTime</a> - The time when MediaTailor no
--   longer considers the prefetched ads for use in an ad break.
--   MediaTailor automatically deletes prefetch schedules no less than
--   seven days after the end time. If you'd like to manually delete the
--   prefetch schedule, you can call DeletePrefetchSchedule.
newPrefetchConsumption :: UTCTime -> PrefetchConsumption

-- | A complex type that contains settings governing when MediaTailor
--   prefetches ads, and which dynamic variables that MediaTailor includes
--   in the request to the ad decision server.
--   
--   <i>See:</i> <a>newPrefetchRetrieval</a> smart constructor.
data PrefetchRetrieval
PrefetchRetrieval' :: Maybe POSIX -> Maybe (HashMap Text Text) -> POSIX -> PrefetchRetrieval

-- | Create a value of <a>PrefetchRetrieval</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:startTime:PrefetchRetrieval'</a>,
--   <a>prefetchRetrieval_startTime</a> - The time when prefetch retrievals
--   can start for this break. Ad prefetching will be attempted for
--   manifest requests that occur at or after this time. Defaults to the
--   current time. If not specified, the prefetch retrieval starts as soon
--   as possible.
--   
--   <a>$sel:dynamicVariables:PrefetchRetrieval'</a>,
--   <a>prefetchRetrieval_dynamicVariables</a> - The dynamic variables to
--   use for substitution during prefetch requests to the ad decision
--   server (ADS).
--   
--   You intially configure <a>dynamic variables</a> for the ADS URL when
--   you set up your playback configuration. When you specify
--   DynamicVariables for prefetch retrieval, MediaTailor includes the
--   dynamic variables in the request to the ADS.
--   
--   <a>$sel:endTime:PrefetchRetrieval'</a>,
--   <a>prefetchRetrieval_endTime</a> - The time when prefetch retrieval
--   ends for the ad break. Prefetching will be attempted for manifest
--   requests that occur at or before this time.
newPrefetchRetrieval :: UTCTime -> PrefetchRetrieval

-- | A complex type that contains prefetch schedule information.
--   
--   <i>See:</i> <a>newPrefetchSchedule</a> smart constructor.
data PrefetchSchedule
PrefetchSchedule' :: Maybe Text -> PrefetchRetrieval -> PrefetchConsumption -> Text -> Text -> Text -> PrefetchSchedule

-- | Create a value of <a>PrefetchSchedule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:streamId:PrefetchSchedule'</a>,
--   <a>prefetchSchedule_streamId</a> - An optional stream identifier that
--   you can specify in order to prefetch for multiple streams that use the
--   same playback configuration.
--   
--   <a>$sel:retrieval:PrefetchSchedule'</a>,
--   <a>prefetchSchedule_retrieval</a> - A complex type that contains
--   settings for prefetch retrieval from the ad decision server (ADS).
--   
--   <a>$sel:consumption:PrefetchSchedule'</a>,
--   <a>prefetchSchedule_consumption</a> - Consumption settings determine
--   how, and when, MediaTailor places the prefetched ads into ad breaks.
--   Ad consumption occurs within a span of time that you define, called a
--   <i>consumption window</i>. You can designate which ad breaks that
--   MediaTailor fills with prefetch ads by setting avail matching
--   criteria.
--   
--   <a>$sel:arn:PrefetchSchedule'</a>, <a>prefetchSchedule_arn</a> - The
--   Amazon Resource Name (ARN) of the prefetch schedule.
--   
--   <a>$sel:playbackConfigurationName:PrefetchSchedule'</a>,
--   <a>prefetchSchedule_playbackConfigurationName</a> - The name of the
--   playback configuration to create the prefetch schedule for.
--   
--   <a>$sel:name:PrefetchSchedule'</a>, <a>prefetchSchedule_name</a> - The
--   name of the prefetch schedule. The name must be unique among all
--   prefetch schedules that are associated with the specified playback
--   configuration.
newPrefetchSchedule :: PrefetchRetrieval -> PrefetchConsumption -> Text -> Text -> Text -> PrefetchSchedule

-- | The output configuration for this channel.
--   
--   <i>See:</i> <a>newRequestOutputItem</a> smart constructor.
data RequestOutputItem
RequestOutputItem' :: Maybe HlsPlaylistSettings -> Maybe DashPlaylistSettings -> Text -> Text -> RequestOutputItem

-- | Create a value of <a>RequestOutputItem</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hlsPlaylistSettings:RequestOutputItem'</a>,
--   <a>requestOutputItem_hlsPlaylistSettings</a> - HLS playlist
--   configuration parameters.
--   
--   <a>$sel:dashPlaylistSettings:RequestOutputItem'</a>,
--   <a>requestOutputItem_dashPlaylistSettings</a> - DASH manifest
--   configuration parameters.
--   
--   <a>$sel:manifestName:RequestOutputItem'</a>,
--   <a>requestOutputItem_manifestName</a> - The name of the manifest for
--   the channel. The name appears in the PlaybackUrl.
--   
--   <a>$sel:sourceGroup:RequestOutputItem'</a>,
--   <a>requestOutputItem_sourceGroup</a> - A string used to match which
--   HttpPackageConfiguration is used for each VodSource.
newRequestOutputItem :: Text -> Text -> RequestOutputItem

-- | This response includes only the "property" : "type" property.
--   
--   <i>See:</i> <a>newResponseOutputItem</a> smart constructor.
data ResponseOutputItem
ResponseOutputItem' :: Maybe HlsPlaylistSettings -> Maybe DashPlaylistSettings -> Text -> Text -> Text -> ResponseOutputItem

-- | Create a value of <a>ResponseOutputItem</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hlsPlaylistSettings:ResponseOutputItem'</a>,
--   <a>responseOutputItem_hlsPlaylistSettings</a> - HLS manifest
--   configuration settings.
--   
--   <a>$sel:dashPlaylistSettings:ResponseOutputItem'</a>,
--   <a>responseOutputItem_dashPlaylistSettings</a> - DASH manifest
--   configuration settings.
--   
--   <a>$sel:manifestName:ResponseOutputItem'</a>,
--   <a>responseOutputItem_manifestName</a> - The name of the manifest for
--   the channel that will appear in the channel output's playback URL.
--   
--   <a>$sel:playbackUrl:ResponseOutputItem'</a>,
--   <a>responseOutputItem_playbackUrl</a> - The URL used for playback by
--   content players.
--   
--   <a>$sel:sourceGroup:ResponseOutputItem'</a>,
--   <a>responseOutputItem_sourceGroup</a> - A string used to associate a
--   package configuration source group with a channel output.
newResponseOutputItem :: Text -> Text -> Text -> ResponseOutputItem

-- | The schedule's ad break properties.
--   
--   <i>See:</i> <a>newScheduleAdBreak</a> smart constructor.
data ScheduleAdBreak
ScheduleAdBreak' :: Maybe Text -> Maybe Integer -> Maybe Text -> Maybe POSIX -> ScheduleAdBreak

-- | Create a value of <a>ScheduleAdBreak</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceLocationName:ScheduleAdBreak'</a>,
--   <a>scheduleAdBreak_sourceLocationName</a> - The name of the source
--   location containing the VOD source used for the ad break.
--   
--   <a>$sel:approximateDurationSeconds:ScheduleAdBreak'</a>,
--   <a>scheduleAdBreak_approximateDurationSeconds</a> - The approximate
--   duration of the ad break, in seconds.
--   
--   <a>$sel:vodSourceName:ScheduleAdBreak'</a>,
--   <a>scheduleAdBreak_vodSourceName</a> - The name of the VOD source used
--   for the ad break.
--   
--   <a>$sel:approximateStartTime:ScheduleAdBreak'</a>,
--   <a>scheduleAdBreak_approximateStartTime</a> - The approximate time
--   that the ad will start playing.
newScheduleAdBreak :: ScheduleAdBreak

-- | Schedule configuration parameters. A channel must be stopped before
--   changes can be made to the schedule.
--   
--   <i>See:</i> <a>newScheduleConfiguration</a> smart constructor.
data ScheduleConfiguration
ScheduleConfiguration' :: Transition -> ScheduleConfiguration

-- | Create a value of <a>ScheduleConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:transition:ScheduleConfiguration'</a>,
--   <a>scheduleConfiguration_transition</a> - Program transition
--   configurations.
newScheduleConfiguration :: Transition -> ScheduleConfiguration

-- | The properties for a schedule.
--   
--   <i>See:</i> <a>newScheduleEntry</a> smart constructor.
data ScheduleEntry
ScheduleEntry' :: Maybe [ScheduleAdBreak] -> Maybe Integer -> Maybe POSIX -> Maybe ScheduleEntryType -> Text -> Text -> Text -> Text -> Text -> ScheduleEntry

-- | Create a value of <a>ScheduleEntry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:scheduleAdBreaks:ScheduleEntry'</a>,
--   <a>scheduleEntry_scheduleAdBreaks</a> - The schedule's ad break
--   properties.
--   
--   <a>$sel:approximateDurationSeconds:ScheduleEntry'</a>,
--   <a>scheduleEntry_approximateDurationSeconds</a> - The approximate
--   duration of this program, in seconds.
--   
--   <a>$sel:approximateStartTime:ScheduleEntry'</a>,
--   <a>scheduleEntry_approximateStartTime</a> - The approximate time that
--   the program will start playing.
--   
--   <a>$sel:scheduleEntryType:ScheduleEntry'</a>,
--   <a>scheduleEntry_scheduleEntryType</a> - The type of schedule entry.
--   
--   Valid values: PROGRAM or FILLER_SLATE.
--   
--   <a>$sel:vodSourceName:ScheduleEntry'</a>,
--   <a>scheduleEntry_vodSourceName</a> - The name of the VOD source.
--   
--   <a>$sel:channelName:ScheduleEntry'</a>,
--   <a>scheduleEntry_channelName</a> - The name of the channel that uses
--   this schedule.
--   
--   <a>$sel:sourceLocationName:ScheduleEntry'</a>,
--   <a>scheduleEntry_sourceLocationName</a> - The name of the source
--   location.
--   
--   <a>$sel:arn:ScheduleEntry'</a>, <a>scheduleEntry_arn</a> - The ARN of
--   the program.
--   
--   <a>$sel:programName:ScheduleEntry'</a>,
--   <a>scheduleEntry_programName</a> - The name of the program.
newScheduleEntry :: Text -> Text -> Text -> Text -> Text -> ScheduleEntry

-- | AWS Secrets Manager access token configuration parameters. For
--   information about Secrets Manager access token authentication, see
--   <a>Working with AWS Secrets Manager access token authentication</a>.
--   
--   <i>See:</i> <a>newSecretsManagerAccessTokenConfiguration</a> smart
--   constructor.
data SecretsManagerAccessTokenConfiguration
SecretsManagerAccessTokenConfiguration' :: Maybe Text -> Maybe Text -> Maybe Text -> SecretsManagerAccessTokenConfiguration

-- | Create a value of <a>SecretsManagerAccessTokenConfiguration</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:headerName:SecretsManagerAccessTokenConfiguration'</a>,
--   <a>secretsManagerAccessTokenConfiguration_headerName</a> - The name of
--   the HTTP header used to supply the access token in requests to the
--   source location.
--   
--   <a>$sel:secretStringKey:SecretsManagerAccessTokenConfiguration'</a>,
--   <a>secretsManagerAccessTokenConfiguration_secretStringKey</a> - The
--   AWS Secrets Manager <a>SecretString</a> key associated with the access
--   token. MediaTailor uses the key to look up SecretString key and value
--   pair containing the access token.
--   
--   <a>$sel:secretArn:SecretsManagerAccessTokenConfiguration'</a>,
--   <a>secretsManagerAccessTokenConfiguration_secretArn</a> - The Amazon
--   Resource Name (ARN) of the AWS Secrets Manager secret that contains
--   the access token.
newSecretsManagerAccessTokenConfiguration :: SecretsManagerAccessTokenConfiguration

-- | Slate VOD source configuration.
--   
--   <i>See:</i> <a>newSlateSource</a> smart constructor.
data SlateSource
SlateSource' :: Maybe Text -> Maybe Text -> SlateSource

-- | Create a value of <a>SlateSource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceLocationName:SlateSource'</a>,
--   <a>slateSource_sourceLocationName</a> - The name of the source
--   location where the slate VOD source is stored.
--   
--   <a>$sel:vodSourceName:SlateSource'</a>,
--   <a>slateSource_vodSourceName</a> - The slate VOD source name. The VOD
--   source must already exist in a source location before it can be used
--   for slate.
newSlateSource :: SlateSource

-- | This response includes only the "type" : "object" property.
--   
--   <i>See:</i> <a>newSourceLocation</a> smart constructor.
data SourceLocation
SourceLocation' :: Maybe POSIX -> Maybe POSIX -> Maybe AccessConfiguration -> Maybe DefaultSegmentDeliveryConfiguration -> Maybe (HashMap Text Text) -> Text -> HttpConfiguration -> Text -> SourceLocation

-- | Create a value of <a>SourceLocation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:SourceLocation'</a>,
--   <a>sourceLocation_creationTime</a> - The timestamp that indicates when
--   the source location was created.
--   
--   <a>$sel:lastModifiedTime:SourceLocation'</a>,
--   <a>sourceLocation_lastModifiedTime</a> - The timestamp that indicates
--   when the source location was last modified.
--   
--   <a>$sel:accessConfiguration:SourceLocation'</a>,
--   <a>sourceLocation_accessConfiguration</a> - The access configuration
--   for the source location.
--   
--   <a>$sel:defaultSegmentDeliveryConfiguration:SourceLocation'</a>,
--   <a>sourceLocation_defaultSegmentDeliveryConfiguration</a> - The
--   default segment delivery configuration.
--   
--   <a>$sel:tags:SourceLocation'</a>, <a>sourceLocation_tags</a> - The
--   tags assigned to the source location.
--   
--   <a>$sel:sourceLocationName:SourceLocation'</a>,
--   <a>sourceLocation_sourceLocationName</a> - The name of the source
--   location.
--   
--   <a>$sel:httpConfiguration:SourceLocation'</a>,
--   <a>sourceLocation_httpConfiguration</a> - The HTTP configuration for
--   the source location.
--   
--   <a>$sel:arn:SourceLocation'</a>, <a>sourceLocation_arn</a> - The ARN
--   of the SourceLocation.
newSourceLocation :: Text -> HttpConfiguration -> Text -> SourceLocation

-- | Splice insert message configuration.
--   
--   <i>See:</i> <a>newSpliceInsertMessage</a> smart constructor.
data SpliceInsertMessage
SpliceInsertMessage' :: Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> SpliceInsertMessage

-- | Create a value of <a>SpliceInsertMessage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:availNum:SpliceInsertMessage'</a>,
--   <a>spliceInsertMessage_availNum</a> - This is written to
--   splice_insert.avail_num, as defined in section 9.7.3.1 of the SCTE-35
--   specification. The default value is 0. Values must be between 0 and
--   256, inclusive.
--   
--   <a>$sel:uniqueProgramId:SpliceInsertMessage'</a>,
--   <a>spliceInsertMessage_uniqueProgramId</a> - This is written to
--   splice_insert.unique_program_id, as defined in section 9.7.3.1 of the
--   SCTE-35 specification. The default value is 0. Values must be between
--   0 and 256, inclusive.
--   
--   <a>$sel:availsExpected:SpliceInsertMessage'</a>,
--   <a>spliceInsertMessage_availsExpected</a> - This is written to
--   splice_insert.avails_expected, as defined in section 9.7.3.1 of the
--   SCTE-35 specification. The default value is 0. Values must be between
--   0 and 256, inclusive.
--   
--   <a>$sel:spliceEventId:SpliceInsertMessage'</a>,
--   <a>spliceInsertMessage_spliceEventId</a> - This is written to
--   splice_insert.splice_event_id, as defined in section 9.7.3.1 of the
--   SCTE-35 specification. The default value is 1.
newSpliceInsertMessage :: SpliceInsertMessage

-- | Program transition configuration.
--   
--   <i>See:</i> <a>newTransition</a> smart constructor.
data Transition
Transition' :: Maybe Integer -> Maybe Text -> Text -> RelativePosition -> Transition

-- | Create a value of <a>Transition</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:scheduledStartTimeMillis:Transition'</a>,
--   <a>transition_scheduledStartTimeMillis</a> - The date and time that
--   the program is scheduled to start, in epoch milliseconds.
--   
--   <a>$sel:relativeProgram:Transition'</a>,
--   <a>transition_relativeProgram</a> - The name of the program that this
--   program will be inserted next to, as defined by RelativePosition.
--   
--   <a>$sel:type':Transition'</a>, <a>transition_type</a> - Defines when
--   the program plays in the schedule. You can set the value to ABSOLUTE
--   or RELATIVE.
--   
--   ABSOLUTE - The program plays at a specific wall clock time. This
--   setting can only be used for channels using the LINEAR PlaybackMode.
--   
--   Note the following considerations when using ABSOLUTE transitions:
--   
--   If the preceding program in the schedule has a duration that extends
--   past the wall clock time, MediaTailor truncates the preceding program
--   on a common segment boundary.
--   
--   If there are gaps in playback, MediaTailor plays the FillerSlate you
--   configured for your linear channel.
--   
--   RELATIVE - The program is inserted into the schedule either before or
--   after a program that you specify via RelativePosition.
--   
--   <a>$sel:relativePosition:Transition'</a>,
--   <a>transition_relativePosition</a> - The position where this program
--   will be inserted relative to the RelativePosition.
newTransition :: Text -> RelativePosition -> Transition

-- | VOD source configuration parameters.
--   
--   <i>See:</i> <a>newVodSource</a> smart constructor.
data VodSource
VodSource' :: Maybe POSIX -> Maybe POSIX -> Maybe (HashMap Text Text) -> Text -> Text -> [HttpPackageConfiguration] -> Text -> VodSource

-- | Create a value of <a>VodSource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:VodSource'</a>, <a>vodSource_creationTime</a> -
--   The timestamp that indicates when the VOD source was created.
--   
--   <a>$sel:lastModifiedTime:VodSource'</a>,
--   <a>vodSource_lastModifiedTime</a> - The timestamp that indicates when
--   the VOD source was last modified.
--   
--   <a>$sel:tags:VodSource'</a>, <a>vodSource_tags</a> - The tags assigned
--   to the VOD source.
--   
--   <a>$sel:vodSourceName:VodSource'</a>, <a>vodSource_vodSourceName</a> -
--   The name of the VOD source.
--   
--   <a>$sel:sourceLocationName:VodSource'</a>,
--   <a>vodSource_sourceLocationName</a> - The name of the source location
--   that the VOD source is associated with.
--   
--   <a>$sel:httpPackageConfigurations:VodSource'</a>,
--   <a>vodSource_httpPackageConfigurations</a> - The HTTP package
--   configurations for the VOD source.
--   
--   <a>$sel:arn:VodSource'</a>, <a>vodSource_arn</a> - The ARN for the VOD
--   source.
newVodSource :: Text -> Text -> Text -> VodSource
