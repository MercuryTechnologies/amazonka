-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-directconnectZSamazonka-directconnect
@version 1.6.1


module Network.AWS.DirectConnect.Types.AddressFamily
newtype AddressFamily
AddressFamily' :: Text -> AddressFamily
[fromAddressFamily] :: AddressFamily -> Text
pattern AddressFamily_Ipv4 :: AddressFamily
pattern AddressFamily_Ipv6 :: AddressFamily
instance Network.AWS.Data.XML.ToXML Network.AWS.DirectConnect.Types.AddressFamily.AddressFamily
instance Network.AWS.Data.XML.FromXML Network.AWS.DirectConnect.Types.AddressFamily.AddressFamily
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.DirectConnect.Types.AddressFamily.AddressFamily
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.Types.AddressFamily.AddressFamily
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.DirectConnect.Types.AddressFamily.AddressFamily
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DirectConnect.Types.AddressFamily.AddressFamily
instance Network.AWS.Data.Query.ToQuery Network.AWS.DirectConnect.Types.AddressFamily.AddressFamily
instance Network.AWS.Data.Headers.ToHeader Network.AWS.DirectConnect.Types.AddressFamily.AddressFamily
instance Network.AWS.Data.Log.ToLog Network.AWS.DirectConnect.Types.AddressFamily.AddressFamily
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.DirectConnect.Types.AddressFamily.AddressFamily
instance Network.AWS.Data.Text.ToText Network.AWS.DirectConnect.Types.AddressFamily.AddressFamily
instance Network.AWS.Data.Text.FromText Network.AWS.DirectConnect.Types.AddressFamily.AddressFamily
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.Types.AddressFamily.AddressFamily
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.Types.AddressFamily.AddressFamily
instance GHC.Generics.Generic Network.AWS.DirectConnect.Types.AddressFamily.AddressFamily
instance GHC.Classes.Ord Network.AWS.DirectConnect.Types.AddressFamily.AddressFamily
instance GHC.Classes.Eq Network.AWS.DirectConnect.Types.AddressFamily.AddressFamily
instance GHC.Read.Read Network.AWS.DirectConnect.Types.AddressFamily.AddressFamily
instance GHC.Show.Show Network.AWS.DirectConnect.Types.AddressFamily.AddressFamily


module Network.AWS.DirectConnect.Types.BGPPeerState
newtype BGPPeerState
BGPPeerState' :: Text -> BGPPeerState
[fromBGPPeerState] :: BGPPeerState -> Text
pattern BGPPeerState_Available :: BGPPeerState
pattern BGPPeerState_Deleted :: BGPPeerState
pattern BGPPeerState_Deleting :: BGPPeerState
pattern BGPPeerState_Pending :: BGPPeerState
pattern BGPPeerState_Verifying :: BGPPeerState
instance Network.AWS.Data.XML.ToXML Network.AWS.DirectConnect.Types.BGPPeerState.BGPPeerState
instance Network.AWS.Data.XML.FromXML Network.AWS.DirectConnect.Types.BGPPeerState.BGPPeerState
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.DirectConnect.Types.BGPPeerState.BGPPeerState
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.Types.BGPPeerState.BGPPeerState
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.DirectConnect.Types.BGPPeerState.BGPPeerState
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DirectConnect.Types.BGPPeerState.BGPPeerState
instance Network.AWS.Data.Query.ToQuery Network.AWS.DirectConnect.Types.BGPPeerState.BGPPeerState
instance Network.AWS.Data.Headers.ToHeader Network.AWS.DirectConnect.Types.BGPPeerState.BGPPeerState
instance Network.AWS.Data.Log.ToLog Network.AWS.DirectConnect.Types.BGPPeerState.BGPPeerState
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.DirectConnect.Types.BGPPeerState.BGPPeerState
instance Network.AWS.Data.Text.ToText Network.AWS.DirectConnect.Types.BGPPeerState.BGPPeerState
instance Network.AWS.Data.Text.FromText Network.AWS.DirectConnect.Types.BGPPeerState.BGPPeerState
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.Types.BGPPeerState.BGPPeerState
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.Types.BGPPeerState.BGPPeerState
instance GHC.Generics.Generic Network.AWS.DirectConnect.Types.BGPPeerState.BGPPeerState
instance GHC.Classes.Ord Network.AWS.DirectConnect.Types.BGPPeerState.BGPPeerState
instance GHC.Classes.Eq Network.AWS.DirectConnect.Types.BGPPeerState.BGPPeerState
instance GHC.Read.Read Network.AWS.DirectConnect.Types.BGPPeerState.BGPPeerState
instance GHC.Show.Show Network.AWS.DirectConnect.Types.BGPPeerState.BGPPeerState


module Network.AWS.DirectConnect.Types.BGPStatus
newtype BGPStatus
BGPStatus' :: Text -> BGPStatus
[fromBGPStatus] :: BGPStatus -> Text
pattern BGPStatus_Down :: BGPStatus
pattern BGPStatus_Unknown :: BGPStatus
pattern BGPStatus_Up :: BGPStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.DirectConnect.Types.BGPStatus.BGPStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.DirectConnect.Types.BGPStatus.BGPStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.DirectConnect.Types.BGPStatus.BGPStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.Types.BGPStatus.BGPStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.DirectConnect.Types.BGPStatus.BGPStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DirectConnect.Types.BGPStatus.BGPStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.DirectConnect.Types.BGPStatus.BGPStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.DirectConnect.Types.BGPStatus.BGPStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.DirectConnect.Types.BGPStatus.BGPStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.DirectConnect.Types.BGPStatus.BGPStatus
instance Network.AWS.Data.Text.ToText Network.AWS.DirectConnect.Types.BGPStatus.BGPStatus
instance Network.AWS.Data.Text.FromText Network.AWS.DirectConnect.Types.BGPStatus.BGPStatus
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.Types.BGPStatus.BGPStatus
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.Types.BGPStatus.BGPStatus
instance GHC.Generics.Generic Network.AWS.DirectConnect.Types.BGPStatus.BGPStatus
instance GHC.Classes.Ord Network.AWS.DirectConnect.Types.BGPStatus.BGPStatus
instance GHC.Classes.Eq Network.AWS.DirectConnect.Types.BGPStatus.BGPStatus
instance GHC.Read.Read Network.AWS.DirectConnect.Types.BGPStatus.BGPStatus
instance GHC.Show.Show Network.AWS.DirectConnect.Types.BGPStatus.BGPStatus


module Network.AWS.DirectConnect.Types.BGPPeer

-- | Information about a BGP peer.
--   
--   <i>See:</i> <a>newBGPPeer</a> smart constructor.
data BGPPeer
BGPPeer' :: Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe BGPStatus -> Maybe BGPPeerState -> Maybe Text -> Maybe AddressFamily -> Maybe Text -> BGPPeer

-- | The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
[$sel:authKey:BGPPeer'] :: BGPPeer -> Maybe Text

-- | The autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
[$sel:asn:BGPPeer'] :: BGPPeer -> Maybe Int

-- | The Direct Connect endpoint that terminates the BGP peer.
[$sel:awsDeviceV2:BGPPeer'] :: BGPPeer -> Maybe Text

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
[$sel:awsLogicalDeviceId:BGPPeer'] :: BGPPeer -> Maybe Text

-- | The ID of the BGP peer.
[$sel:bgpPeerId:BGPPeer'] :: BGPPeer -> Maybe Text

-- | The status of the BGP peer. The following are the possible values:
--   
--   <ul>
--   <li><tt>up</tt>: The BGP peer is established. This state does not
--   indicate the state of the routing function. Ensure that you are
--   receiving routes over the BGP session.</li>
--   <li><tt>down</tt>: The BGP peer is down.</li>
--   <li><tt>unknown</tt>: The BGP peer status is not available.</li>
--   </ul>
[$sel:bgpStatus:BGPPeer'] :: BGPPeer -> Maybe BGPStatus

-- | The state of the BGP peer. The following are the possible values:
--   
--   <ul>
--   <li><tt>verifying</tt>: The BGP peering addresses or ASN require
--   validation before the BGP peer can be created. This state applies only
--   to public virtual interfaces.</li>
--   <li><tt>pending</tt>: The BGP peer is created, and remains in this
--   state until it is ready to be established.</li>
--   <li><tt>available</tt>: The BGP peer is ready to be established.</li>
--   <li><tt>deleting</tt>: The BGP peer is being deleted.</li>
--   <li><tt>deleted</tt>: The BGP peer is deleted and cannot be
--   established.</li>
--   </ul>
[$sel:bgpPeerState:BGPPeer'] :: BGPPeer -> Maybe BGPPeerState

-- | The IP address assigned to the Amazon interface.
[$sel:amazonAddress:BGPPeer'] :: BGPPeer -> Maybe Text

-- | The address family for the BGP peer.
[$sel:addressFamily:BGPPeer'] :: BGPPeer -> Maybe AddressFamily

-- | The IP address assigned to the customer interface.
[$sel:customerAddress:BGPPeer'] :: BGPPeer -> Maybe Text

-- | Create a value of <a>BGPPeer</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authKey:BGPPeer'</a>, <a>bGPPeer_authKey</a> - The
--   authentication key for BGP configuration. This string has a minimum
--   length of 6 characters and and a maximun lenth of 80 characters.
--   
--   <a>$sel:asn:BGPPeer'</a>, <a>bGPPeer_asn</a> - The autonomous system
--   (AS) number for Border Gateway Protocol (BGP) configuration.
--   
--   <a>$sel:awsDeviceV2:BGPPeer'</a>, <a>bGPPeer_awsDeviceV2</a> - The
--   Direct Connect endpoint that terminates the BGP peer.
--   
--   <a>$sel:awsLogicalDeviceId:BGPPeer'</a>,
--   <a>bGPPeer_awsLogicalDeviceId</a> - The Direct Connect endpoint that
--   terminates the logical connection. This device might be different than
--   the device that terminates the physical connection.
--   
--   <a>$sel:bgpPeerId:BGPPeer'</a>, <a>bGPPeer_bgpPeerId</a> - The ID of
--   the BGP peer.
--   
--   <a>$sel:bgpStatus:BGPPeer'</a>, <a>bGPPeer_bgpStatus</a> - The status
--   of the BGP peer. The following are the possible values:
--   
--   <ul>
--   <li><tt>up</tt>: The BGP peer is established. This state does not
--   indicate the state of the routing function. Ensure that you are
--   receiving routes over the BGP session.</li>
--   <li><tt>down</tt>: The BGP peer is down.</li>
--   <li><tt>unknown</tt>: The BGP peer status is not available.</li>
--   </ul>
--   
--   <a>$sel:bgpPeerState:BGPPeer'</a>, <a>bGPPeer_bgpPeerState</a> - The
--   state of the BGP peer. The following are the possible values:
--   
--   <ul>
--   <li><tt>verifying</tt>: The BGP peering addresses or ASN require
--   validation before the BGP peer can be created. This state applies only
--   to public virtual interfaces.</li>
--   <li><tt>pending</tt>: The BGP peer is created, and remains in this
--   state until it is ready to be established.</li>
--   <li><tt>available</tt>: The BGP peer is ready to be established.</li>
--   <li><tt>deleting</tt>: The BGP peer is being deleted.</li>
--   <li><tt>deleted</tt>: The BGP peer is deleted and cannot be
--   established.</li>
--   </ul>
--   
--   <a>$sel:amazonAddress:BGPPeer'</a>, <a>bGPPeer_amazonAddress</a> - The
--   IP address assigned to the Amazon interface.
--   
--   <a>$sel:addressFamily:BGPPeer'</a>, <a>bGPPeer_addressFamily</a> - The
--   address family for the BGP peer.
--   
--   <a>$sel:customerAddress:BGPPeer'</a>, <a>bGPPeer_customerAddress</a> -
--   The IP address assigned to the customer interface.
newBGPPeer :: BGPPeer

-- | The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
bGPPeer_authKey :: Lens' BGPPeer (Maybe Text)

-- | The autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
bGPPeer_asn :: Lens' BGPPeer (Maybe Int)

-- | The Direct Connect endpoint that terminates the BGP peer.
bGPPeer_awsDeviceV2 :: Lens' BGPPeer (Maybe Text)

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
bGPPeer_awsLogicalDeviceId :: Lens' BGPPeer (Maybe Text)

-- | The ID of the BGP peer.
bGPPeer_bgpPeerId :: Lens' BGPPeer (Maybe Text)

-- | The status of the BGP peer. The following are the possible values:
--   
--   <ul>
--   <li><tt>up</tt>: The BGP peer is established. This state does not
--   indicate the state of the routing function. Ensure that you are
--   receiving routes over the BGP session.</li>
--   <li><tt>down</tt>: The BGP peer is down.</li>
--   <li><tt>unknown</tt>: The BGP peer status is not available.</li>
--   </ul>
bGPPeer_bgpStatus :: Lens' BGPPeer (Maybe BGPStatus)

-- | The state of the BGP peer. The following are the possible values:
--   
--   <ul>
--   <li><tt>verifying</tt>: The BGP peering addresses or ASN require
--   validation before the BGP peer can be created. This state applies only
--   to public virtual interfaces.</li>
--   <li><tt>pending</tt>: The BGP peer is created, and remains in this
--   state until it is ready to be established.</li>
--   <li><tt>available</tt>: The BGP peer is ready to be established.</li>
--   <li><tt>deleting</tt>: The BGP peer is being deleted.</li>
--   <li><tt>deleted</tt>: The BGP peer is deleted and cannot be
--   established.</li>
--   </ul>
bGPPeer_bgpPeerState :: Lens' BGPPeer (Maybe BGPPeerState)

-- | The IP address assigned to the Amazon interface.
bGPPeer_amazonAddress :: Lens' BGPPeer (Maybe Text)

-- | The address family for the BGP peer.
bGPPeer_addressFamily :: Lens' BGPPeer (Maybe AddressFamily)

-- | The IP address assigned to the customer interface.
bGPPeer_customerAddress :: Lens' BGPPeer (Maybe Text)
instance GHC.Generics.Generic Network.AWS.DirectConnect.Types.BGPPeer.BGPPeer
instance GHC.Show.Show Network.AWS.DirectConnect.Types.BGPPeer.BGPPeer
instance GHC.Read.Read Network.AWS.DirectConnect.Types.BGPPeer.BGPPeer
instance GHC.Classes.Eq Network.AWS.DirectConnect.Types.BGPPeer.BGPPeer
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DirectConnect.Types.BGPPeer.BGPPeer
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.Types.BGPPeer.BGPPeer
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.Types.BGPPeer.BGPPeer


module Network.AWS.DirectConnect.Types.ConnectionState
newtype ConnectionState
ConnectionState' :: Text -> ConnectionState
[fromConnectionState] :: ConnectionState -> Text
pattern ConnectionState_Available :: ConnectionState
pattern ConnectionState_Deleted :: ConnectionState
pattern ConnectionState_Deleting :: ConnectionState
pattern ConnectionState_Down :: ConnectionState
pattern ConnectionState_Ordering :: ConnectionState
pattern ConnectionState_Pending :: ConnectionState
pattern ConnectionState_Rejected :: ConnectionState
pattern ConnectionState_Requested :: ConnectionState
pattern ConnectionState_Unknown :: ConnectionState
instance Network.AWS.Data.XML.ToXML Network.AWS.DirectConnect.Types.ConnectionState.ConnectionState
instance Network.AWS.Data.XML.FromXML Network.AWS.DirectConnect.Types.ConnectionState.ConnectionState
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.DirectConnect.Types.ConnectionState.ConnectionState
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.Types.ConnectionState.ConnectionState
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.DirectConnect.Types.ConnectionState.ConnectionState
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DirectConnect.Types.ConnectionState.ConnectionState
instance Network.AWS.Data.Query.ToQuery Network.AWS.DirectConnect.Types.ConnectionState.ConnectionState
instance Network.AWS.Data.Headers.ToHeader Network.AWS.DirectConnect.Types.ConnectionState.ConnectionState
instance Network.AWS.Data.Log.ToLog Network.AWS.DirectConnect.Types.ConnectionState.ConnectionState
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.DirectConnect.Types.ConnectionState.ConnectionState
instance Network.AWS.Data.Text.ToText Network.AWS.DirectConnect.Types.ConnectionState.ConnectionState
instance Network.AWS.Data.Text.FromText Network.AWS.DirectConnect.Types.ConnectionState.ConnectionState
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.Types.ConnectionState.ConnectionState
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.Types.ConnectionState.ConnectionState
instance GHC.Generics.Generic Network.AWS.DirectConnect.Types.ConnectionState.ConnectionState
instance GHC.Classes.Ord Network.AWS.DirectConnect.Types.ConnectionState.ConnectionState
instance GHC.Classes.Eq Network.AWS.DirectConnect.Types.ConnectionState.ConnectionState
instance GHC.Read.Read Network.AWS.DirectConnect.Types.ConnectionState.ConnectionState
instance GHC.Show.Show Network.AWS.DirectConnect.Types.ConnectionState.ConnectionState


module Network.AWS.DirectConnect.Types.DirectConnectGatewayAssociationProposalState
newtype DirectConnectGatewayAssociationProposalState
DirectConnectGatewayAssociationProposalState' :: Text -> DirectConnectGatewayAssociationProposalState
[fromDirectConnectGatewayAssociationProposalState] :: DirectConnectGatewayAssociationProposalState -> Text
pattern DirectConnectGatewayAssociationProposalState_Accepted :: DirectConnectGatewayAssociationProposalState
pattern DirectConnectGatewayAssociationProposalState_Deleted :: DirectConnectGatewayAssociationProposalState
pattern DirectConnectGatewayAssociationProposalState_Requested :: DirectConnectGatewayAssociationProposalState
instance Network.AWS.Data.XML.ToXML Network.AWS.DirectConnect.Types.DirectConnectGatewayAssociationProposalState.DirectConnectGatewayAssociationProposalState
instance Network.AWS.Data.XML.FromXML Network.AWS.DirectConnect.Types.DirectConnectGatewayAssociationProposalState.DirectConnectGatewayAssociationProposalState
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.DirectConnect.Types.DirectConnectGatewayAssociationProposalState.DirectConnectGatewayAssociationProposalState
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.Types.DirectConnectGatewayAssociationProposalState.DirectConnectGatewayAssociationProposalState
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.DirectConnect.Types.DirectConnectGatewayAssociationProposalState.DirectConnectGatewayAssociationProposalState
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DirectConnect.Types.DirectConnectGatewayAssociationProposalState.DirectConnectGatewayAssociationProposalState
instance Network.AWS.Data.Query.ToQuery Network.AWS.DirectConnect.Types.DirectConnectGatewayAssociationProposalState.DirectConnectGatewayAssociationProposalState
instance Network.AWS.Data.Headers.ToHeader Network.AWS.DirectConnect.Types.DirectConnectGatewayAssociationProposalState.DirectConnectGatewayAssociationProposalState
instance Network.AWS.Data.Log.ToLog Network.AWS.DirectConnect.Types.DirectConnectGatewayAssociationProposalState.DirectConnectGatewayAssociationProposalState
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.DirectConnect.Types.DirectConnectGatewayAssociationProposalState.DirectConnectGatewayAssociationProposalState
instance Network.AWS.Data.Text.ToText Network.AWS.DirectConnect.Types.DirectConnectGatewayAssociationProposalState.DirectConnectGatewayAssociationProposalState
instance Network.AWS.Data.Text.FromText Network.AWS.DirectConnect.Types.DirectConnectGatewayAssociationProposalState.DirectConnectGatewayAssociationProposalState
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.Types.DirectConnectGatewayAssociationProposalState.DirectConnectGatewayAssociationProposalState
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.Types.DirectConnectGatewayAssociationProposalState.DirectConnectGatewayAssociationProposalState
instance GHC.Generics.Generic Network.AWS.DirectConnect.Types.DirectConnectGatewayAssociationProposalState.DirectConnectGatewayAssociationProposalState
instance GHC.Classes.Ord Network.AWS.DirectConnect.Types.DirectConnectGatewayAssociationProposalState.DirectConnectGatewayAssociationProposalState
instance GHC.Classes.Eq Network.AWS.DirectConnect.Types.DirectConnectGatewayAssociationProposalState.DirectConnectGatewayAssociationProposalState
instance GHC.Read.Read Network.AWS.DirectConnect.Types.DirectConnectGatewayAssociationProposalState.DirectConnectGatewayAssociationProposalState
instance GHC.Show.Show Network.AWS.DirectConnect.Types.DirectConnectGatewayAssociationProposalState.DirectConnectGatewayAssociationProposalState


module Network.AWS.DirectConnect.Types.DirectConnectGatewayAssociationState
newtype DirectConnectGatewayAssociationState
DirectConnectGatewayAssociationState' :: Text -> DirectConnectGatewayAssociationState
[fromDirectConnectGatewayAssociationState] :: DirectConnectGatewayAssociationState -> Text
pattern DirectConnectGatewayAssociationState_Associated :: DirectConnectGatewayAssociationState
pattern DirectConnectGatewayAssociationState_Associating :: DirectConnectGatewayAssociationState
pattern DirectConnectGatewayAssociationState_Disassociated :: DirectConnectGatewayAssociationState
pattern DirectConnectGatewayAssociationState_Disassociating :: DirectConnectGatewayAssociationState
pattern DirectConnectGatewayAssociationState_Updating :: DirectConnectGatewayAssociationState
instance Network.AWS.Data.XML.ToXML Network.AWS.DirectConnect.Types.DirectConnectGatewayAssociationState.DirectConnectGatewayAssociationState
instance Network.AWS.Data.XML.FromXML Network.AWS.DirectConnect.Types.DirectConnectGatewayAssociationState.DirectConnectGatewayAssociationState
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.DirectConnect.Types.DirectConnectGatewayAssociationState.DirectConnectGatewayAssociationState
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.Types.DirectConnectGatewayAssociationState.DirectConnectGatewayAssociationState
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.DirectConnect.Types.DirectConnectGatewayAssociationState.DirectConnectGatewayAssociationState
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DirectConnect.Types.DirectConnectGatewayAssociationState.DirectConnectGatewayAssociationState
instance Network.AWS.Data.Query.ToQuery Network.AWS.DirectConnect.Types.DirectConnectGatewayAssociationState.DirectConnectGatewayAssociationState
instance Network.AWS.Data.Headers.ToHeader Network.AWS.DirectConnect.Types.DirectConnectGatewayAssociationState.DirectConnectGatewayAssociationState
instance Network.AWS.Data.Log.ToLog Network.AWS.DirectConnect.Types.DirectConnectGatewayAssociationState.DirectConnectGatewayAssociationState
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.DirectConnect.Types.DirectConnectGatewayAssociationState.DirectConnectGatewayAssociationState
instance Network.AWS.Data.Text.ToText Network.AWS.DirectConnect.Types.DirectConnectGatewayAssociationState.DirectConnectGatewayAssociationState
instance Network.AWS.Data.Text.FromText Network.AWS.DirectConnect.Types.DirectConnectGatewayAssociationState.DirectConnectGatewayAssociationState
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.Types.DirectConnectGatewayAssociationState.DirectConnectGatewayAssociationState
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.Types.DirectConnectGatewayAssociationState.DirectConnectGatewayAssociationState
instance GHC.Generics.Generic Network.AWS.DirectConnect.Types.DirectConnectGatewayAssociationState.DirectConnectGatewayAssociationState
instance GHC.Classes.Ord Network.AWS.DirectConnect.Types.DirectConnectGatewayAssociationState.DirectConnectGatewayAssociationState
instance GHC.Classes.Eq Network.AWS.DirectConnect.Types.DirectConnectGatewayAssociationState.DirectConnectGatewayAssociationState
instance GHC.Read.Read Network.AWS.DirectConnect.Types.DirectConnectGatewayAssociationState.DirectConnectGatewayAssociationState
instance GHC.Show.Show Network.AWS.DirectConnect.Types.DirectConnectGatewayAssociationState.DirectConnectGatewayAssociationState


module Network.AWS.DirectConnect.Types.DirectConnectGatewayAttachmentState
newtype DirectConnectGatewayAttachmentState
DirectConnectGatewayAttachmentState' :: Text -> DirectConnectGatewayAttachmentState
[fromDirectConnectGatewayAttachmentState] :: DirectConnectGatewayAttachmentState -> Text
pattern DirectConnectGatewayAttachmentState_Attached :: DirectConnectGatewayAttachmentState
pattern DirectConnectGatewayAttachmentState_Attaching :: DirectConnectGatewayAttachmentState
pattern DirectConnectGatewayAttachmentState_Detached :: DirectConnectGatewayAttachmentState
pattern DirectConnectGatewayAttachmentState_Detaching :: DirectConnectGatewayAttachmentState
instance Network.AWS.Data.XML.ToXML Network.AWS.DirectConnect.Types.DirectConnectGatewayAttachmentState.DirectConnectGatewayAttachmentState
instance Network.AWS.Data.XML.FromXML Network.AWS.DirectConnect.Types.DirectConnectGatewayAttachmentState.DirectConnectGatewayAttachmentState
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.DirectConnect.Types.DirectConnectGatewayAttachmentState.DirectConnectGatewayAttachmentState
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.Types.DirectConnectGatewayAttachmentState.DirectConnectGatewayAttachmentState
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.DirectConnect.Types.DirectConnectGatewayAttachmentState.DirectConnectGatewayAttachmentState
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DirectConnect.Types.DirectConnectGatewayAttachmentState.DirectConnectGatewayAttachmentState
instance Network.AWS.Data.Query.ToQuery Network.AWS.DirectConnect.Types.DirectConnectGatewayAttachmentState.DirectConnectGatewayAttachmentState
instance Network.AWS.Data.Headers.ToHeader Network.AWS.DirectConnect.Types.DirectConnectGatewayAttachmentState.DirectConnectGatewayAttachmentState
instance Network.AWS.Data.Log.ToLog Network.AWS.DirectConnect.Types.DirectConnectGatewayAttachmentState.DirectConnectGatewayAttachmentState
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.DirectConnect.Types.DirectConnectGatewayAttachmentState.DirectConnectGatewayAttachmentState
instance Network.AWS.Data.Text.ToText Network.AWS.DirectConnect.Types.DirectConnectGatewayAttachmentState.DirectConnectGatewayAttachmentState
instance Network.AWS.Data.Text.FromText Network.AWS.DirectConnect.Types.DirectConnectGatewayAttachmentState.DirectConnectGatewayAttachmentState
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.Types.DirectConnectGatewayAttachmentState.DirectConnectGatewayAttachmentState
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.Types.DirectConnectGatewayAttachmentState.DirectConnectGatewayAttachmentState
instance GHC.Generics.Generic Network.AWS.DirectConnect.Types.DirectConnectGatewayAttachmentState.DirectConnectGatewayAttachmentState
instance GHC.Classes.Ord Network.AWS.DirectConnect.Types.DirectConnectGatewayAttachmentState.DirectConnectGatewayAttachmentState
instance GHC.Classes.Eq Network.AWS.DirectConnect.Types.DirectConnectGatewayAttachmentState.DirectConnectGatewayAttachmentState
instance GHC.Read.Read Network.AWS.DirectConnect.Types.DirectConnectGatewayAttachmentState.DirectConnectGatewayAttachmentState
instance GHC.Show.Show Network.AWS.DirectConnect.Types.DirectConnectGatewayAttachmentState.DirectConnectGatewayAttachmentState


module Network.AWS.DirectConnect.Types.DirectConnectGatewayAttachmentType
newtype DirectConnectGatewayAttachmentType
DirectConnectGatewayAttachmentType' :: Text -> DirectConnectGatewayAttachmentType
[fromDirectConnectGatewayAttachmentType] :: DirectConnectGatewayAttachmentType -> Text
pattern DirectConnectGatewayAttachmentType_PrivateVirtualInterface :: DirectConnectGatewayAttachmentType
pattern DirectConnectGatewayAttachmentType_TransitVirtualInterface :: DirectConnectGatewayAttachmentType
instance Network.AWS.Data.XML.ToXML Network.AWS.DirectConnect.Types.DirectConnectGatewayAttachmentType.DirectConnectGatewayAttachmentType
instance Network.AWS.Data.XML.FromXML Network.AWS.DirectConnect.Types.DirectConnectGatewayAttachmentType.DirectConnectGatewayAttachmentType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.DirectConnect.Types.DirectConnectGatewayAttachmentType.DirectConnectGatewayAttachmentType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.Types.DirectConnectGatewayAttachmentType.DirectConnectGatewayAttachmentType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.DirectConnect.Types.DirectConnectGatewayAttachmentType.DirectConnectGatewayAttachmentType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DirectConnect.Types.DirectConnectGatewayAttachmentType.DirectConnectGatewayAttachmentType
instance Network.AWS.Data.Query.ToQuery Network.AWS.DirectConnect.Types.DirectConnectGatewayAttachmentType.DirectConnectGatewayAttachmentType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.DirectConnect.Types.DirectConnectGatewayAttachmentType.DirectConnectGatewayAttachmentType
instance Network.AWS.Data.Log.ToLog Network.AWS.DirectConnect.Types.DirectConnectGatewayAttachmentType.DirectConnectGatewayAttachmentType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.DirectConnect.Types.DirectConnectGatewayAttachmentType.DirectConnectGatewayAttachmentType
instance Network.AWS.Data.Text.ToText Network.AWS.DirectConnect.Types.DirectConnectGatewayAttachmentType.DirectConnectGatewayAttachmentType
instance Network.AWS.Data.Text.FromText Network.AWS.DirectConnect.Types.DirectConnectGatewayAttachmentType.DirectConnectGatewayAttachmentType
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.Types.DirectConnectGatewayAttachmentType.DirectConnectGatewayAttachmentType
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.Types.DirectConnectGatewayAttachmentType.DirectConnectGatewayAttachmentType
instance GHC.Generics.Generic Network.AWS.DirectConnect.Types.DirectConnectGatewayAttachmentType.DirectConnectGatewayAttachmentType
instance GHC.Classes.Ord Network.AWS.DirectConnect.Types.DirectConnectGatewayAttachmentType.DirectConnectGatewayAttachmentType
instance GHC.Classes.Eq Network.AWS.DirectConnect.Types.DirectConnectGatewayAttachmentType.DirectConnectGatewayAttachmentType
instance GHC.Read.Read Network.AWS.DirectConnect.Types.DirectConnectGatewayAttachmentType.DirectConnectGatewayAttachmentType
instance GHC.Show.Show Network.AWS.DirectConnect.Types.DirectConnectGatewayAttachmentType.DirectConnectGatewayAttachmentType


module Network.AWS.DirectConnect.Types.DirectConnectGatewayAttachment

-- | Information about an attachment between a Direct Connect gateway and a
--   virtual interface.
--   
--   <i>See:</i> <a>newDirectConnectGatewayAttachment</a> smart
--   constructor.
data DirectConnectGatewayAttachment
DirectConnectGatewayAttachment' :: Maybe Text -> Maybe DirectConnectGatewayAttachmentState -> Maybe Text -> Maybe Text -> Maybe DirectConnectGatewayAttachmentType -> Maybe Text -> Maybe Text -> DirectConnectGatewayAttachment

-- | The error message if the state of an object failed to advance.
[$sel:stateChangeError:DirectConnectGatewayAttachment'] :: DirectConnectGatewayAttachment -> Maybe Text

-- | The state of the attachment. The following are the possible values:
--   
--   <ul>
--   <li><tt>attaching</tt>: The initial state after a virtual interface is
--   created using the Direct Connect gateway.</li>
--   <li><tt>attached</tt>: The Direct Connect gateway and virtual
--   interface are attached and ready to pass traffic.</li>
--   <li><tt>detaching</tt>: The initial state after calling
--   DeleteVirtualInterface.</li>
--   <li><tt>detached</tt>: The virtual interface is detached from the
--   Direct Connect gateway. Traffic flow between the Direct Connect
--   gateway and virtual interface is stopped.</li>
--   </ul>
[$sel:attachmentState:DirectConnectGatewayAttachment'] :: DirectConnectGatewayAttachment -> Maybe DirectConnectGatewayAttachmentState

-- | The ID of the account that owns the virtual interface.
[$sel:virtualInterfaceOwnerAccount:DirectConnectGatewayAttachment'] :: DirectConnectGatewayAttachment -> Maybe Text

-- | The Region where the virtual interface is located.
[$sel:virtualInterfaceRegion:DirectConnectGatewayAttachment'] :: DirectConnectGatewayAttachment -> Maybe Text

-- | The type of attachment.
[$sel:attachmentType:DirectConnectGatewayAttachment'] :: DirectConnectGatewayAttachment -> Maybe DirectConnectGatewayAttachmentType

-- | The ID of the virtual interface.
[$sel:virtualInterfaceId:DirectConnectGatewayAttachment'] :: DirectConnectGatewayAttachment -> Maybe Text

-- | The ID of the Direct Connect gateway.
[$sel:directConnectGatewayId:DirectConnectGatewayAttachment'] :: DirectConnectGatewayAttachment -> Maybe Text

-- | Create a value of <a>DirectConnectGatewayAttachment</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stateChangeError:DirectConnectGatewayAttachment'</a>,
--   <a>directConnectGatewayAttachment_stateChangeError</a> - The error
--   message if the state of an object failed to advance.
--   
--   <a>$sel:attachmentState:DirectConnectGatewayAttachment'</a>,
--   <a>directConnectGatewayAttachment_attachmentState</a> - The state of
--   the attachment. The following are the possible values:
--   
--   <ul>
--   <li><tt>attaching</tt>: The initial state after a virtual interface is
--   created using the Direct Connect gateway.</li>
--   <li><tt>attached</tt>: The Direct Connect gateway and virtual
--   interface are attached and ready to pass traffic.</li>
--   <li><tt>detaching</tt>: The initial state after calling
--   DeleteVirtualInterface.</li>
--   <li><tt>detached</tt>: The virtual interface is detached from the
--   Direct Connect gateway. Traffic flow between the Direct Connect
--   gateway and virtual interface is stopped.</li>
--   </ul>
--   
--   
--   <a>$sel:virtualInterfaceOwnerAccount:DirectConnectGatewayAttachment'</a>,
--   <a>directConnectGatewayAttachment_virtualInterfaceOwnerAccount</a> -
--   The ID of the account that owns the virtual interface.
--   
--   <a>$sel:virtualInterfaceRegion:DirectConnectGatewayAttachment'</a>,
--   <a>directConnectGatewayAttachment_virtualInterfaceRegion</a> - The
--   Region where the virtual interface is located.
--   
--   <a>$sel:attachmentType:DirectConnectGatewayAttachment'</a>,
--   <a>directConnectGatewayAttachment_attachmentType</a> - The type of
--   attachment.
--   
--   <a>$sel:virtualInterfaceId:DirectConnectGatewayAttachment'</a>,
--   <a>directConnectGatewayAttachment_virtualInterfaceId</a> - The ID of
--   the virtual interface.
--   
--   <a>$sel:directConnectGatewayId:DirectConnectGatewayAttachment'</a>,
--   <a>directConnectGatewayAttachment_directConnectGatewayId</a> - The ID
--   of the Direct Connect gateway.
newDirectConnectGatewayAttachment :: DirectConnectGatewayAttachment

-- | The error message if the state of an object failed to advance.
directConnectGatewayAttachment_stateChangeError :: Lens' DirectConnectGatewayAttachment (Maybe Text)

-- | The state of the attachment. The following are the possible values:
--   
--   <ul>
--   <li><tt>attaching</tt>: The initial state after a virtual interface is
--   created using the Direct Connect gateway.</li>
--   <li><tt>attached</tt>: The Direct Connect gateway and virtual
--   interface are attached and ready to pass traffic.</li>
--   <li><tt>detaching</tt>: The initial state after calling
--   DeleteVirtualInterface.</li>
--   <li><tt>detached</tt>: The virtual interface is detached from the
--   Direct Connect gateway. Traffic flow between the Direct Connect
--   gateway and virtual interface is stopped.</li>
--   </ul>
directConnectGatewayAttachment_attachmentState :: Lens' DirectConnectGatewayAttachment (Maybe DirectConnectGatewayAttachmentState)

-- | The ID of the account that owns the virtual interface.
directConnectGatewayAttachment_virtualInterfaceOwnerAccount :: Lens' DirectConnectGatewayAttachment (Maybe Text)

-- | The Region where the virtual interface is located.
directConnectGatewayAttachment_virtualInterfaceRegion :: Lens' DirectConnectGatewayAttachment (Maybe Text)

-- | The type of attachment.
directConnectGatewayAttachment_attachmentType :: Lens' DirectConnectGatewayAttachment (Maybe DirectConnectGatewayAttachmentType)

-- | The ID of the virtual interface.
directConnectGatewayAttachment_virtualInterfaceId :: Lens' DirectConnectGatewayAttachment (Maybe Text)

-- | The ID of the Direct Connect gateway.
directConnectGatewayAttachment_directConnectGatewayId :: Lens' DirectConnectGatewayAttachment (Maybe Text)
instance GHC.Generics.Generic Network.AWS.DirectConnect.Types.DirectConnectGatewayAttachment.DirectConnectGatewayAttachment
instance GHC.Show.Show Network.AWS.DirectConnect.Types.DirectConnectGatewayAttachment.DirectConnectGatewayAttachment
instance GHC.Read.Read Network.AWS.DirectConnect.Types.DirectConnectGatewayAttachment.DirectConnectGatewayAttachment
instance GHC.Classes.Eq Network.AWS.DirectConnect.Types.DirectConnectGatewayAttachment.DirectConnectGatewayAttachment
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DirectConnect.Types.DirectConnectGatewayAttachment.DirectConnectGatewayAttachment
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.Types.DirectConnectGatewayAttachment.DirectConnectGatewayAttachment
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.Types.DirectConnectGatewayAttachment.DirectConnectGatewayAttachment


module Network.AWS.DirectConnect.Types.DirectConnectGatewayState
newtype DirectConnectGatewayState
DirectConnectGatewayState' :: Text -> DirectConnectGatewayState
[fromDirectConnectGatewayState] :: DirectConnectGatewayState -> Text
pattern DirectConnectGatewayState_Available :: DirectConnectGatewayState
pattern DirectConnectGatewayState_Deleted :: DirectConnectGatewayState
pattern DirectConnectGatewayState_Deleting :: DirectConnectGatewayState
pattern DirectConnectGatewayState_Pending :: DirectConnectGatewayState
instance Network.AWS.Data.XML.ToXML Network.AWS.DirectConnect.Types.DirectConnectGatewayState.DirectConnectGatewayState
instance Network.AWS.Data.XML.FromXML Network.AWS.DirectConnect.Types.DirectConnectGatewayState.DirectConnectGatewayState
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.DirectConnect.Types.DirectConnectGatewayState.DirectConnectGatewayState
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.Types.DirectConnectGatewayState.DirectConnectGatewayState
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.DirectConnect.Types.DirectConnectGatewayState.DirectConnectGatewayState
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DirectConnect.Types.DirectConnectGatewayState.DirectConnectGatewayState
instance Network.AWS.Data.Query.ToQuery Network.AWS.DirectConnect.Types.DirectConnectGatewayState.DirectConnectGatewayState
instance Network.AWS.Data.Headers.ToHeader Network.AWS.DirectConnect.Types.DirectConnectGatewayState.DirectConnectGatewayState
instance Network.AWS.Data.Log.ToLog Network.AWS.DirectConnect.Types.DirectConnectGatewayState.DirectConnectGatewayState
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.DirectConnect.Types.DirectConnectGatewayState.DirectConnectGatewayState
instance Network.AWS.Data.Text.ToText Network.AWS.DirectConnect.Types.DirectConnectGatewayState.DirectConnectGatewayState
instance Network.AWS.Data.Text.FromText Network.AWS.DirectConnect.Types.DirectConnectGatewayState.DirectConnectGatewayState
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.Types.DirectConnectGatewayState.DirectConnectGatewayState
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.Types.DirectConnectGatewayState.DirectConnectGatewayState
instance GHC.Generics.Generic Network.AWS.DirectConnect.Types.DirectConnectGatewayState.DirectConnectGatewayState
instance GHC.Classes.Ord Network.AWS.DirectConnect.Types.DirectConnectGatewayState.DirectConnectGatewayState
instance GHC.Classes.Eq Network.AWS.DirectConnect.Types.DirectConnectGatewayState.DirectConnectGatewayState
instance GHC.Read.Read Network.AWS.DirectConnect.Types.DirectConnectGatewayState.DirectConnectGatewayState
instance GHC.Show.Show Network.AWS.DirectConnect.Types.DirectConnectGatewayState.DirectConnectGatewayState


module Network.AWS.DirectConnect.Types.DirectConnectGateway

-- | Information about a Direct Connect gateway, which enables you to
--   connect virtual interfaces and virtual private gateway or transit
--   gateways.
--   
--   <i>See:</i> <a>newDirectConnectGateway</a> smart constructor.
data DirectConnectGateway
DirectConnectGateway' :: Maybe DirectConnectGatewayState -> Maybe Text -> Maybe Text -> Maybe Integer -> Maybe Text -> Maybe Text -> DirectConnectGateway

-- | The state of the Direct Connect gateway. The following are the
--   possible values:
--   
--   <ul>
--   <li><tt>pending</tt>: The initial state after calling
--   CreateDirectConnectGateway.</li>
--   <li><tt>available</tt>: The Direct Connect gateway is ready for
--   use.</li>
--   <li><tt>deleting</tt>: The initial state after calling
--   DeleteDirectConnectGateway.</li>
--   <li><tt>deleted</tt>: The Direct Connect gateway is deleted and cannot
--   pass traffic.</li>
--   </ul>
[$sel:directConnectGatewayState:DirectConnectGateway'] :: DirectConnectGateway -> Maybe DirectConnectGatewayState

-- | The error message if the state of an object failed to advance.
[$sel:stateChangeError:DirectConnectGateway'] :: DirectConnectGateway -> Maybe Text

-- | The name of the Direct Connect gateway.
[$sel:directConnectGatewayName:DirectConnectGateway'] :: DirectConnectGateway -> Maybe Text

-- | The autonomous system number (ASN) for the Amazon side of the
--   connection.
[$sel:amazonSideAsn:DirectConnectGateway'] :: DirectConnectGateway -> Maybe Integer

-- | The ID of the Direct Connect gateway.
[$sel:directConnectGatewayId:DirectConnectGateway'] :: DirectConnectGateway -> Maybe Text

-- | The ID of the account that owns the Direct Connect gateway.
[$sel:ownerAccount:DirectConnectGateway'] :: DirectConnectGateway -> Maybe Text

-- | Create a value of <a>DirectConnectGateway</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:directConnectGatewayState:DirectConnectGateway'</a>,
--   <a>directConnectGateway_directConnectGatewayState</a> - The state of
--   the Direct Connect gateway. The following are the possible values:
--   
--   <ul>
--   <li><tt>pending</tt>: The initial state after calling
--   CreateDirectConnectGateway.</li>
--   <li><tt>available</tt>: The Direct Connect gateway is ready for
--   use.</li>
--   <li><tt>deleting</tt>: The initial state after calling
--   DeleteDirectConnectGateway.</li>
--   <li><tt>deleted</tt>: The Direct Connect gateway is deleted and cannot
--   pass traffic.</li>
--   </ul>
--   
--   <a>$sel:stateChangeError:DirectConnectGateway'</a>,
--   <a>directConnectGateway_stateChangeError</a> - The error message if
--   the state of an object failed to advance.
--   
--   <a>$sel:directConnectGatewayName:DirectConnectGateway'</a>,
--   <a>directConnectGateway_directConnectGatewayName</a> - The name of the
--   Direct Connect gateway.
--   
--   <a>$sel:amazonSideAsn:DirectConnectGateway'</a>,
--   <a>directConnectGateway_amazonSideAsn</a> - The autonomous system
--   number (ASN) for the Amazon side of the connection.
--   
--   <a>$sel:directConnectGatewayId:DirectConnectGateway'</a>,
--   <a>directConnectGateway_directConnectGatewayId</a> - The ID of the
--   Direct Connect gateway.
--   
--   <a>$sel:ownerAccount:DirectConnectGateway'</a>,
--   <a>directConnectGateway_ownerAccount</a> - The ID of the account that
--   owns the Direct Connect gateway.
newDirectConnectGateway :: DirectConnectGateway

-- | The state of the Direct Connect gateway. The following are the
--   possible values:
--   
--   <ul>
--   <li><tt>pending</tt>: The initial state after calling
--   CreateDirectConnectGateway.</li>
--   <li><tt>available</tt>: The Direct Connect gateway is ready for
--   use.</li>
--   <li><tt>deleting</tt>: The initial state after calling
--   DeleteDirectConnectGateway.</li>
--   <li><tt>deleted</tt>: The Direct Connect gateway is deleted and cannot
--   pass traffic.</li>
--   </ul>
directConnectGateway_directConnectGatewayState :: Lens' DirectConnectGateway (Maybe DirectConnectGatewayState)

-- | The error message if the state of an object failed to advance.
directConnectGateway_stateChangeError :: Lens' DirectConnectGateway (Maybe Text)

-- | The name of the Direct Connect gateway.
directConnectGateway_directConnectGatewayName :: Lens' DirectConnectGateway (Maybe Text)

-- | The autonomous system number (ASN) for the Amazon side of the
--   connection.
directConnectGateway_amazonSideAsn :: Lens' DirectConnectGateway (Maybe Integer)

-- | The ID of the Direct Connect gateway.
directConnectGateway_directConnectGatewayId :: Lens' DirectConnectGateway (Maybe Text)

-- | The ID of the account that owns the Direct Connect gateway.
directConnectGateway_ownerAccount :: Lens' DirectConnectGateway (Maybe Text)
instance GHC.Generics.Generic Network.AWS.DirectConnect.Types.DirectConnectGateway.DirectConnectGateway
instance GHC.Show.Show Network.AWS.DirectConnect.Types.DirectConnectGateway.DirectConnectGateway
instance GHC.Read.Read Network.AWS.DirectConnect.Types.DirectConnectGateway.DirectConnectGateway
instance GHC.Classes.Eq Network.AWS.DirectConnect.Types.DirectConnectGateway.DirectConnectGateway
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DirectConnect.Types.DirectConnectGateway.DirectConnectGateway
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.Types.DirectConnectGateway.DirectConnectGateway
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.Types.DirectConnectGateway.DirectConnectGateway


module Network.AWS.DirectConnect.Types.GatewayType
newtype GatewayType
GatewayType' :: Text -> GatewayType
[fromGatewayType] :: GatewayType -> Text
pattern GatewayType_TransitGateway :: GatewayType
pattern GatewayType_VirtualPrivateGateway :: GatewayType
instance Network.AWS.Data.XML.ToXML Network.AWS.DirectConnect.Types.GatewayType.GatewayType
instance Network.AWS.Data.XML.FromXML Network.AWS.DirectConnect.Types.GatewayType.GatewayType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.DirectConnect.Types.GatewayType.GatewayType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.Types.GatewayType.GatewayType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.DirectConnect.Types.GatewayType.GatewayType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DirectConnect.Types.GatewayType.GatewayType
instance Network.AWS.Data.Query.ToQuery Network.AWS.DirectConnect.Types.GatewayType.GatewayType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.DirectConnect.Types.GatewayType.GatewayType
instance Network.AWS.Data.Log.ToLog Network.AWS.DirectConnect.Types.GatewayType.GatewayType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.DirectConnect.Types.GatewayType.GatewayType
instance Network.AWS.Data.Text.ToText Network.AWS.DirectConnect.Types.GatewayType.GatewayType
instance Network.AWS.Data.Text.FromText Network.AWS.DirectConnect.Types.GatewayType.GatewayType
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.Types.GatewayType.GatewayType
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.Types.GatewayType.GatewayType
instance GHC.Generics.Generic Network.AWS.DirectConnect.Types.GatewayType.GatewayType
instance GHC.Classes.Ord Network.AWS.DirectConnect.Types.GatewayType.GatewayType
instance GHC.Classes.Eq Network.AWS.DirectConnect.Types.GatewayType.GatewayType
instance GHC.Read.Read Network.AWS.DirectConnect.Types.GatewayType.GatewayType
instance GHC.Show.Show Network.AWS.DirectConnect.Types.GatewayType.GatewayType


module Network.AWS.DirectConnect.Types.AssociatedGateway

-- | Information about the associated gateway.
--   
--   <i>See:</i> <a>newAssociatedGateway</a> smart constructor.
data AssociatedGateway
AssociatedGateway' :: Maybe Text -> Maybe GatewayType -> Maybe Text -> Maybe Text -> AssociatedGateway

-- | The ID of the associated gateway.
[$sel:id:AssociatedGateway'] :: AssociatedGateway -> Maybe Text

-- | The type of associated gateway.
[$sel:type':AssociatedGateway'] :: AssociatedGateway -> Maybe GatewayType

-- | The ID of the account that owns the associated virtual private gateway
--   or transit gateway.
[$sel:ownerAccount:AssociatedGateway'] :: AssociatedGateway -> Maybe Text

-- | The Region where the associated gateway is located.
[$sel:region:AssociatedGateway'] :: AssociatedGateway -> Maybe Text

-- | Create a value of <a>AssociatedGateway</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:AssociatedGateway'</a>, <a>associatedGateway_id</a> - The
--   ID of the associated gateway.
--   
--   <a>$sel:type':AssociatedGateway'</a>, <a>associatedGateway_type</a> -
--   The type of associated gateway.
--   
--   <a>$sel:ownerAccount:AssociatedGateway'</a>,
--   <a>associatedGateway_ownerAccount</a> - The ID of the account that
--   owns the associated virtual private gateway or transit gateway.
--   
--   <a>$sel:region:AssociatedGateway'</a>, <a>associatedGateway_region</a>
--   - The Region where the associated gateway is located.
newAssociatedGateway :: AssociatedGateway

-- | The ID of the associated gateway.
associatedGateway_id :: Lens' AssociatedGateway (Maybe Text)

-- | The type of associated gateway.
associatedGateway_type :: Lens' AssociatedGateway (Maybe GatewayType)

-- | The ID of the account that owns the associated virtual private gateway
--   or transit gateway.
associatedGateway_ownerAccount :: Lens' AssociatedGateway (Maybe Text)

-- | The Region where the associated gateway is located.
associatedGateway_region :: Lens' AssociatedGateway (Maybe Text)
instance GHC.Generics.Generic Network.AWS.DirectConnect.Types.AssociatedGateway.AssociatedGateway
instance GHC.Show.Show Network.AWS.DirectConnect.Types.AssociatedGateway.AssociatedGateway
instance GHC.Read.Read Network.AWS.DirectConnect.Types.AssociatedGateway.AssociatedGateway
instance GHC.Classes.Eq Network.AWS.DirectConnect.Types.AssociatedGateway.AssociatedGateway
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DirectConnect.Types.AssociatedGateway.AssociatedGateway
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.Types.AssociatedGateway.AssociatedGateway
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.Types.AssociatedGateway.AssociatedGateway


module Network.AWS.DirectConnect.Types.HasLogicalRedundancy
newtype HasLogicalRedundancy
HasLogicalRedundancy' :: Text -> HasLogicalRedundancy
[fromHasLogicalRedundancy] :: HasLogicalRedundancy -> Text
pattern HasLogicalRedundancy_No :: HasLogicalRedundancy
pattern HasLogicalRedundancy_Unknown :: HasLogicalRedundancy
pattern HasLogicalRedundancy_Yes :: HasLogicalRedundancy
instance Network.AWS.Data.XML.ToXML Network.AWS.DirectConnect.Types.HasLogicalRedundancy.HasLogicalRedundancy
instance Network.AWS.Data.XML.FromXML Network.AWS.DirectConnect.Types.HasLogicalRedundancy.HasLogicalRedundancy
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.DirectConnect.Types.HasLogicalRedundancy.HasLogicalRedundancy
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.Types.HasLogicalRedundancy.HasLogicalRedundancy
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.DirectConnect.Types.HasLogicalRedundancy.HasLogicalRedundancy
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DirectConnect.Types.HasLogicalRedundancy.HasLogicalRedundancy
instance Network.AWS.Data.Query.ToQuery Network.AWS.DirectConnect.Types.HasLogicalRedundancy.HasLogicalRedundancy
instance Network.AWS.Data.Headers.ToHeader Network.AWS.DirectConnect.Types.HasLogicalRedundancy.HasLogicalRedundancy
instance Network.AWS.Data.Log.ToLog Network.AWS.DirectConnect.Types.HasLogicalRedundancy.HasLogicalRedundancy
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.DirectConnect.Types.HasLogicalRedundancy.HasLogicalRedundancy
instance Network.AWS.Data.Text.ToText Network.AWS.DirectConnect.Types.HasLogicalRedundancy.HasLogicalRedundancy
instance Network.AWS.Data.Text.FromText Network.AWS.DirectConnect.Types.HasLogicalRedundancy.HasLogicalRedundancy
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.Types.HasLogicalRedundancy.HasLogicalRedundancy
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.Types.HasLogicalRedundancy.HasLogicalRedundancy
instance GHC.Generics.Generic Network.AWS.DirectConnect.Types.HasLogicalRedundancy.HasLogicalRedundancy
instance GHC.Classes.Ord Network.AWS.DirectConnect.Types.HasLogicalRedundancy.HasLogicalRedundancy
instance GHC.Classes.Eq Network.AWS.DirectConnect.Types.HasLogicalRedundancy.HasLogicalRedundancy
instance GHC.Read.Read Network.AWS.DirectConnect.Types.HasLogicalRedundancy.HasLogicalRedundancy
instance GHC.Show.Show Network.AWS.DirectConnect.Types.HasLogicalRedundancy.HasLogicalRedundancy


module Network.AWS.DirectConnect.Types.InterconnectState
newtype InterconnectState
InterconnectState' :: Text -> InterconnectState
[fromInterconnectState] :: InterconnectState -> Text
pattern InterconnectState_Available :: InterconnectState
pattern InterconnectState_Deleted :: InterconnectState
pattern InterconnectState_Deleting :: InterconnectState
pattern InterconnectState_Down :: InterconnectState
pattern InterconnectState_Pending :: InterconnectState
pattern InterconnectState_Requested :: InterconnectState
pattern InterconnectState_Unknown :: InterconnectState
instance Network.AWS.Data.XML.ToXML Network.AWS.DirectConnect.Types.InterconnectState.InterconnectState
instance Network.AWS.Data.XML.FromXML Network.AWS.DirectConnect.Types.InterconnectState.InterconnectState
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.DirectConnect.Types.InterconnectState.InterconnectState
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.Types.InterconnectState.InterconnectState
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.DirectConnect.Types.InterconnectState.InterconnectState
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DirectConnect.Types.InterconnectState.InterconnectState
instance Network.AWS.Data.Query.ToQuery Network.AWS.DirectConnect.Types.InterconnectState.InterconnectState
instance Network.AWS.Data.Headers.ToHeader Network.AWS.DirectConnect.Types.InterconnectState.InterconnectState
instance Network.AWS.Data.Log.ToLog Network.AWS.DirectConnect.Types.InterconnectState.InterconnectState
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.DirectConnect.Types.InterconnectState.InterconnectState
instance Network.AWS.Data.Text.ToText Network.AWS.DirectConnect.Types.InterconnectState.InterconnectState
instance Network.AWS.Data.Text.FromText Network.AWS.DirectConnect.Types.InterconnectState.InterconnectState
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.Types.InterconnectState.InterconnectState
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.Types.InterconnectState.InterconnectState
instance GHC.Generics.Generic Network.AWS.DirectConnect.Types.InterconnectState.InterconnectState
instance GHC.Classes.Ord Network.AWS.DirectConnect.Types.InterconnectState.InterconnectState
instance GHC.Classes.Eq Network.AWS.DirectConnect.Types.InterconnectState.InterconnectState
instance GHC.Read.Read Network.AWS.DirectConnect.Types.InterconnectState.InterconnectState
instance GHC.Show.Show Network.AWS.DirectConnect.Types.InterconnectState.InterconnectState


module Network.AWS.DirectConnect.Types.LagState
newtype LagState
LagState' :: Text -> LagState
[fromLagState] :: LagState -> Text
pattern LagState_Available :: LagState
pattern LagState_Deleted :: LagState
pattern LagState_Deleting :: LagState
pattern LagState_Down :: LagState
pattern LagState_Pending :: LagState
pattern LagState_Requested :: LagState
pattern LagState_Unknown :: LagState
instance Network.AWS.Data.XML.ToXML Network.AWS.DirectConnect.Types.LagState.LagState
instance Network.AWS.Data.XML.FromXML Network.AWS.DirectConnect.Types.LagState.LagState
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.DirectConnect.Types.LagState.LagState
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.Types.LagState.LagState
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.DirectConnect.Types.LagState.LagState
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DirectConnect.Types.LagState.LagState
instance Network.AWS.Data.Query.ToQuery Network.AWS.DirectConnect.Types.LagState.LagState
instance Network.AWS.Data.Headers.ToHeader Network.AWS.DirectConnect.Types.LagState.LagState
instance Network.AWS.Data.Log.ToLog Network.AWS.DirectConnect.Types.LagState.LagState
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.DirectConnect.Types.LagState.LagState
instance Network.AWS.Data.Text.ToText Network.AWS.DirectConnect.Types.LagState.LagState
instance Network.AWS.Data.Text.FromText Network.AWS.DirectConnect.Types.LagState.LagState
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.Types.LagState.LagState
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.Types.LagState.LagState
instance GHC.Generics.Generic Network.AWS.DirectConnect.Types.LagState.LagState
instance GHC.Classes.Ord Network.AWS.DirectConnect.Types.LagState.LagState
instance GHC.Classes.Eq Network.AWS.DirectConnect.Types.LagState.LagState
instance GHC.Read.Read Network.AWS.DirectConnect.Types.LagState.LagState
instance GHC.Show.Show Network.AWS.DirectConnect.Types.LagState.LagState


module Network.AWS.DirectConnect.Types.LoaContentType
newtype LoaContentType
LoaContentType' :: Text -> LoaContentType
[fromLoaContentType] :: LoaContentType -> Text
pattern LoaContentType_Application_pdf :: LoaContentType
instance Network.AWS.Data.XML.ToXML Network.AWS.DirectConnect.Types.LoaContentType.LoaContentType
instance Network.AWS.Data.XML.FromXML Network.AWS.DirectConnect.Types.LoaContentType.LoaContentType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.DirectConnect.Types.LoaContentType.LoaContentType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.Types.LoaContentType.LoaContentType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.DirectConnect.Types.LoaContentType.LoaContentType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DirectConnect.Types.LoaContentType.LoaContentType
instance Network.AWS.Data.Query.ToQuery Network.AWS.DirectConnect.Types.LoaContentType.LoaContentType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.DirectConnect.Types.LoaContentType.LoaContentType
instance Network.AWS.Data.Log.ToLog Network.AWS.DirectConnect.Types.LoaContentType.LoaContentType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.DirectConnect.Types.LoaContentType.LoaContentType
instance Network.AWS.Data.Text.ToText Network.AWS.DirectConnect.Types.LoaContentType.LoaContentType
instance Network.AWS.Data.Text.FromText Network.AWS.DirectConnect.Types.LoaContentType.LoaContentType
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.Types.LoaContentType.LoaContentType
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.Types.LoaContentType.LoaContentType
instance GHC.Generics.Generic Network.AWS.DirectConnect.Types.LoaContentType.LoaContentType
instance GHC.Classes.Ord Network.AWS.DirectConnect.Types.LoaContentType.LoaContentType
instance GHC.Classes.Eq Network.AWS.DirectConnect.Types.LoaContentType.LoaContentType
instance GHC.Read.Read Network.AWS.DirectConnect.Types.LoaContentType.LoaContentType
instance GHC.Show.Show Network.AWS.DirectConnect.Types.LoaContentType.LoaContentType


module Network.AWS.DirectConnect.Types.Location

-- | Information about an Direct Connect location.
--   
--   <i>See:</i> <a>newLocation</a> smart constructor.
data Location
Location' :: Maybe [Text] -> Maybe [Text] -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Text -> Location

-- | The available port speeds for the location.
[$sel:availablePortSpeeds:Location'] :: Location -> Maybe [Text]

-- | The available MAC Security (MACsec) port speeds for the location.
[$sel:availableMacSecPortSpeeds:Location'] :: Location -> Maybe [Text]

-- | The name of the service provider for the location.
[$sel:availableProviders:Location'] :: Location -> Maybe [Text]

-- | The code for the location.
[$sel:locationCode:Location'] :: Location -> Maybe Text

-- | The Region for the location.
[$sel:region:Location'] :: Location -> Maybe Text

-- | The name of the location. This includes the name of the colocation
--   partner and the physical site of the building.
[$sel:locationName:Location'] :: Location -> Maybe Text

-- | Create a value of <a>Location</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:availablePortSpeeds:Location'</a>,
--   <a>location_availablePortSpeeds</a> - The available port speeds for
--   the location.
--   
--   <a>$sel:availableMacSecPortSpeeds:Location'</a>,
--   <a>location_availableMacSecPortSpeeds</a> - The available MAC Security
--   (MACsec) port speeds for the location.
--   
--   <a>$sel:availableProviders:Location'</a>,
--   <a>location_availableProviders</a> - The name of the service provider
--   for the location.
--   
--   <a>$sel:locationCode:Location'</a>, <a>location_locationCode</a> - The
--   code for the location.
--   
--   <a>$sel:region:Location'</a>, <a>location_region</a> - The Region for
--   the location.
--   
--   <a>$sel:locationName:Location'</a>, <a>location_locationName</a> - The
--   name of the location. This includes the name of the colocation partner
--   and the physical site of the building.
newLocation :: Location

-- | The available port speeds for the location.
location_availablePortSpeeds :: Lens' Location (Maybe [Text])

-- | The available MAC Security (MACsec) port speeds for the location.
location_availableMacSecPortSpeeds :: Lens' Location (Maybe [Text])

-- | The name of the service provider for the location.
location_availableProviders :: Lens' Location (Maybe [Text])

-- | The code for the location.
location_locationCode :: Lens' Location (Maybe Text)

-- | The Region for the location.
location_region :: Lens' Location (Maybe Text)

-- | The name of the location. This includes the name of the colocation
--   partner and the physical site of the building.
location_locationName :: Lens' Location (Maybe Text)
instance GHC.Generics.Generic Network.AWS.DirectConnect.Types.Location.Location
instance GHC.Show.Show Network.AWS.DirectConnect.Types.Location.Location
instance GHC.Read.Read Network.AWS.DirectConnect.Types.Location.Location
instance GHC.Classes.Eq Network.AWS.DirectConnect.Types.Location.Location
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DirectConnect.Types.Location.Location
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.Types.Location.Location
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.Types.Location.Location


module Network.AWS.DirectConnect.Types.MacSecKey

-- | Information about the MAC Security (MACsec) secret key.
--   
--   <i>See:</i> <a>newMacSecKey</a> smart constructor.
data MacSecKey
MacSecKey' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> MacSecKey

-- | The date that the MAC Security (MACsec) secret key takes effect. The
--   value is displayed in UTC format.
[$sel:startOn:MacSecKey'] :: MacSecKey -> Maybe Text

-- | The Connection Key Name (CKN) for the MAC Security secret key.
[$sel:ckn:MacSecKey'] :: MacSecKey -> Maybe Text

-- | The Amazon Resource Name (ARN) of the MAC Security (MACsec) secret
--   key.
[$sel:secretARN:MacSecKey'] :: MacSecKey -> Maybe Text

-- | The state of the MAC Security (MACsec) secret key.
--   
--   The possible values are:
--   
--   <ul>
--   <li><tt>associating</tt>: The MAC Security (MACsec) secret key is
--   being validated and not yet associated with the connection or
--   LAG.</li>
--   <li><tt>associated</tt>: The MAC Security (MACsec) secret key is
--   validated and associated with the connection or LAG.</li>
--   <li><tt>disassociating</tt>: The MAC Security (MACsec) secret key is
--   being disassociated from the connection or LAG</li>
--   <li><tt>disassociated</tt>: The MAC Security (MACsec) secret key is no
--   longer associated with the connection or LAG.</li>
--   </ul>
[$sel:state:MacSecKey'] :: MacSecKey -> Maybe Text

-- | Create a value of <a>MacSecKey</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:startOn:MacSecKey'</a>, <a>macSecKey_startOn</a> - The date
--   that the MAC Security (MACsec) secret key takes effect. The value is
--   displayed in UTC format.
--   
--   <a>$sel:ckn:MacSecKey'</a>, <a>macSecKey_ckn</a> - The Connection Key
--   Name (CKN) for the MAC Security secret key.
--   
--   <a>$sel:secretARN:MacSecKey'</a>, <a>macSecKey_secretARN</a> - The
--   Amazon Resource Name (ARN) of the MAC Security (MACsec) secret key.
--   
--   <a>$sel:state:MacSecKey'</a>, <a>macSecKey_state</a> - The state of
--   the MAC Security (MACsec) secret key.
--   
--   The possible values are:
--   
--   <ul>
--   <li><tt>associating</tt>: The MAC Security (MACsec) secret key is
--   being validated and not yet associated with the connection or
--   LAG.</li>
--   <li><tt>associated</tt>: The MAC Security (MACsec) secret key is
--   validated and associated with the connection or LAG.</li>
--   <li><tt>disassociating</tt>: The MAC Security (MACsec) secret key is
--   being disassociated from the connection or LAG</li>
--   <li><tt>disassociated</tt>: The MAC Security (MACsec) secret key is no
--   longer associated with the connection or LAG.</li>
--   </ul>
newMacSecKey :: MacSecKey

-- | The date that the MAC Security (MACsec) secret key takes effect. The
--   value is displayed in UTC format.
macSecKey_startOn :: Lens' MacSecKey (Maybe Text)

-- | The Connection Key Name (CKN) for the MAC Security secret key.
macSecKey_ckn :: Lens' MacSecKey (Maybe Text)

-- | The Amazon Resource Name (ARN) of the MAC Security (MACsec) secret
--   key.
macSecKey_secretARN :: Lens' MacSecKey (Maybe Text)

-- | The state of the MAC Security (MACsec) secret key.
--   
--   The possible values are:
--   
--   <ul>
--   <li><tt>associating</tt>: The MAC Security (MACsec) secret key is
--   being validated and not yet associated with the connection or
--   LAG.</li>
--   <li><tt>associated</tt>: The MAC Security (MACsec) secret key is
--   validated and associated with the connection or LAG.</li>
--   <li><tt>disassociating</tt>: The MAC Security (MACsec) secret key is
--   being disassociated from the connection or LAG</li>
--   <li><tt>disassociated</tt>: The MAC Security (MACsec) secret key is no
--   longer associated with the connection or LAG.</li>
--   </ul>
macSecKey_state :: Lens' MacSecKey (Maybe Text)
instance GHC.Generics.Generic Network.AWS.DirectConnect.Types.MacSecKey.MacSecKey
instance GHC.Show.Show Network.AWS.DirectConnect.Types.MacSecKey.MacSecKey
instance GHC.Read.Read Network.AWS.DirectConnect.Types.MacSecKey.MacSecKey
instance GHC.Classes.Eq Network.AWS.DirectConnect.Types.MacSecKey.MacSecKey
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DirectConnect.Types.MacSecKey.MacSecKey
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.Types.MacSecKey.MacSecKey
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.Types.MacSecKey.MacSecKey


module Network.AWS.DirectConnect.Types.NewBGPPeer

-- | Information about a new BGP peer.
--   
--   <i>See:</i> <a>newNewBGPPeer</a> smart constructor.
data NewBGPPeer
NewBGPPeer' :: Maybe Text -> Maybe Int -> Maybe Text -> Maybe AddressFamily -> Maybe Text -> NewBGPPeer

-- | The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
[$sel:authKey:NewBGPPeer'] :: NewBGPPeer -> Maybe Text

-- | The autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
[$sel:asn:NewBGPPeer'] :: NewBGPPeer -> Maybe Int

-- | The IP address assigned to the Amazon interface.
[$sel:amazonAddress:NewBGPPeer'] :: NewBGPPeer -> Maybe Text

-- | The address family for the BGP peer.
[$sel:addressFamily:NewBGPPeer'] :: NewBGPPeer -> Maybe AddressFamily

-- | The IP address assigned to the customer interface.
[$sel:customerAddress:NewBGPPeer'] :: NewBGPPeer -> Maybe Text

-- | Create a value of <a>NewBGPPeer</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authKey:NewBGPPeer'</a>, <a>newBGPPeer_authKey</a> - The
--   authentication key for BGP configuration. This string has a minimum
--   length of 6 characters and and a maximun lenth of 80 characters.
--   
--   <a>$sel:asn:NewBGPPeer'</a>, <a>newBGPPeer_asn</a> - The autonomous
--   system (AS) number for Border Gateway Protocol (BGP) configuration.
--   
--   <a>$sel:amazonAddress:NewBGPPeer'</a>, <a>newBGPPeer_amazonAddress</a>
--   - The IP address assigned to the Amazon interface.
--   
--   <a>$sel:addressFamily:NewBGPPeer'</a>, <a>newBGPPeer_addressFamily</a>
--   - The address family for the BGP peer.
--   
--   <a>$sel:customerAddress:NewBGPPeer'</a>,
--   <a>newBGPPeer_customerAddress</a> - The IP address assigned to the
--   customer interface.
newNewBGPPeer :: NewBGPPeer

-- | The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
newBGPPeer_authKey :: Lens' NewBGPPeer (Maybe Text)

-- | The autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
newBGPPeer_asn :: Lens' NewBGPPeer (Maybe Int)

-- | The IP address assigned to the Amazon interface.
newBGPPeer_amazonAddress :: Lens' NewBGPPeer (Maybe Text)

-- | The address family for the BGP peer.
newBGPPeer_addressFamily :: Lens' NewBGPPeer (Maybe AddressFamily)

-- | The IP address assigned to the customer interface.
newBGPPeer_customerAddress :: Lens' NewBGPPeer (Maybe Text)
instance GHC.Generics.Generic Network.AWS.DirectConnect.Types.NewBGPPeer.NewBGPPeer
instance GHC.Show.Show Network.AWS.DirectConnect.Types.NewBGPPeer.NewBGPPeer
instance GHC.Read.Read Network.AWS.DirectConnect.Types.NewBGPPeer.NewBGPPeer
instance GHC.Classes.Eq Network.AWS.DirectConnect.Types.NewBGPPeer.NewBGPPeer
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.Types.NewBGPPeer.NewBGPPeer
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.Types.NewBGPPeer.NewBGPPeer
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.Types.NewBGPPeer.NewBGPPeer


module Network.AWS.DirectConnect.Types.RouteFilterPrefix

-- | Information about a route filter prefix that a customer can advertise
--   through Border Gateway Protocol (BGP) over a public virtual interface.
--   
--   <i>See:</i> <a>newRouteFilterPrefix</a> smart constructor.
data RouteFilterPrefix
RouteFilterPrefix' :: Maybe Text -> RouteFilterPrefix

-- | The CIDR block for the advertised route. Separate multiple routes
--   using commas. An IPv6 CIDR must use /64 or shorter.
[$sel:cidr:RouteFilterPrefix'] :: RouteFilterPrefix -> Maybe Text

-- | Create a value of <a>RouteFilterPrefix</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cidr:RouteFilterPrefix'</a>, <a>routeFilterPrefix_cidr</a> -
--   The CIDR block for the advertised route. Separate multiple routes
--   using commas. An IPv6 CIDR must use /64 or shorter.
newRouteFilterPrefix :: RouteFilterPrefix

-- | The CIDR block for the advertised route. Separate multiple routes
--   using commas. An IPv6 CIDR must use /64 or shorter.
routeFilterPrefix_cidr :: Lens' RouteFilterPrefix (Maybe Text)
instance GHC.Generics.Generic Network.AWS.DirectConnect.Types.RouteFilterPrefix.RouteFilterPrefix
instance GHC.Show.Show Network.AWS.DirectConnect.Types.RouteFilterPrefix.RouteFilterPrefix
instance GHC.Read.Read Network.AWS.DirectConnect.Types.RouteFilterPrefix.RouteFilterPrefix
instance GHC.Classes.Eq Network.AWS.DirectConnect.Types.RouteFilterPrefix.RouteFilterPrefix
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DirectConnect.Types.RouteFilterPrefix.RouteFilterPrefix
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.Types.RouteFilterPrefix.RouteFilterPrefix
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.Types.RouteFilterPrefix.RouteFilterPrefix
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.Types.RouteFilterPrefix.RouteFilterPrefix


module Network.AWS.DirectConnect.Types.DirectConnectGatewayAssociationProposal

-- | Information about the proposal request to attach a virtual private
--   gateway to a Direct Connect gateway.
--   
--   <i>See:</i> <a>newDirectConnectGatewayAssociationProposal</a> smart
--   constructor.
data DirectConnectGatewayAssociationProposal
DirectConnectGatewayAssociationProposal' :: Maybe Text -> Maybe [RouteFilterPrefix] -> Maybe DirectConnectGatewayAssociationProposalState -> Maybe AssociatedGateway -> Maybe [RouteFilterPrefix] -> Maybe Text -> Maybe Text -> DirectConnectGatewayAssociationProposal

-- | The ID of the association proposal.
[$sel:proposalId:DirectConnectGatewayAssociationProposal'] :: DirectConnectGatewayAssociationProposal -> Maybe Text

-- | The Amazon VPC prefixes to advertise to the Direct Connect gateway.
[$sel:requestedAllowedPrefixesToDirectConnectGateway:DirectConnectGatewayAssociationProposal'] :: DirectConnectGatewayAssociationProposal -> Maybe [RouteFilterPrefix]

-- | The state of the proposal. The following are possible values:
--   
--   <ul>
--   <li><tt>accepted</tt>: The proposal has been accepted. The Direct
--   Connect gateway association is available to use in this state.</li>
--   <li><tt>deleted</tt>: The proposal has been deleted by the owner that
--   made the proposal. The Direct Connect gateway association cannot be
--   used in this state.</li>
--   <li><tt>requested</tt>: The proposal has been requested. The Direct
--   Connect gateway association cannot be used in this state.</li>
--   </ul>
[$sel:proposalState:DirectConnectGatewayAssociationProposal'] :: DirectConnectGatewayAssociationProposal -> Maybe DirectConnectGatewayAssociationProposalState

-- | Information about the associated gateway.
[$sel:associatedGateway:DirectConnectGatewayAssociationProposal'] :: DirectConnectGatewayAssociationProposal -> Maybe AssociatedGateway

-- | The existing Amazon VPC prefixes advertised to the Direct Connect
--   gateway.
[$sel:existingAllowedPrefixesToDirectConnectGateway:DirectConnectGatewayAssociationProposal'] :: DirectConnectGatewayAssociationProposal -> Maybe [RouteFilterPrefix]

-- | The ID of the Direct Connect gateway.
[$sel:directConnectGatewayId:DirectConnectGatewayAssociationProposal'] :: DirectConnectGatewayAssociationProposal -> Maybe Text

-- | The ID of the account that owns the Direct Connect gateway.
[$sel:directConnectGatewayOwnerAccount:DirectConnectGatewayAssociationProposal'] :: DirectConnectGatewayAssociationProposal -> Maybe Text

-- | Create a value of <a>DirectConnectGatewayAssociationProposal</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:proposalId:DirectConnectGatewayAssociationProposal'</a>,
--   <a>directConnectGatewayAssociationProposal_proposalId</a> - The ID of
--   the association proposal.
--   
--   
--   <a>$sel:requestedAllowedPrefixesToDirectConnectGateway:DirectConnectGatewayAssociationProposal'</a>,
--   <a>directConnectGatewayAssociationProposal_requestedAllowedPrefixesToDirectConnectGateway</a>
--   - The Amazon VPC prefixes to advertise to the Direct Connect gateway.
--   
--   <a>$sel:proposalState:DirectConnectGatewayAssociationProposal'</a>,
--   <a>directConnectGatewayAssociationProposal_proposalState</a> - The
--   state of the proposal. The following are possible values:
--   
--   <ul>
--   <li><tt>accepted</tt>: The proposal has been accepted. The Direct
--   Connect gateway association is available to use in this state.</li>
--   <li><tt>deleted</tt>: The proposal has been deleted by the owner that
--   made the proposal. The Direct Connect gateway association cannot be
--   used in this state.</li>
--   <li><tt>requested</tt>: The proposal has been requested. The Direct
--   Connect gateway association cannot be used in this state.</li>
--   </ul>
--   
--   
--   <a>$sel:associatedGateway:DirectConnectGatewayAssociationProposal'</a>,
--   <a>directConnectGatewayAssociationProposal_associatedGateway</a> -
--   Information about the associated gateway.
--   
--   
--   <a>$sel:existingAllowedPrefixesToDirectConnectGateway:DirectConnectGatewayAssociationProposal'</a>,
--   <a>directConnectGatewayAssociationProposal_existingAllowedPrefixesToDirectConnectGateway</a>
--   - The existing Amazon VPC prefixes advertised to the Direct Connect
--   gateway.
--   
--   
--   <a>$sel:directConnectGatewayId:DirectConnectGatewayAssociationProposal'</a>,
--   <a>directConnectGatewayAssociationProposal_directConnectGatewayId</a>
--   - The ID of the Direct Connect gateway.
--   
--   
--   <a>$sel:directConnectGatewayOwnerAccount:DirectConnectGatewayAssociationProposal'</a>,
--   <a>directConnectGatewayAssociationProposal_directConnectGatewayOwnerAccount</a>
--   - The ID of the account that owns the Direct Connect gateway.
newDirectConnectGatewayAssociationProposal :: DirectConnectGatewayAssociationProposal

-- | The ID of the association proposal.
directConnectGatewayAssociationProposal_proposalId :: Lens' DirectConnectGatewayAssociationProposal (Maybe Text)

-- | The Amazon VPC prefixes to advertise to the Direct Connect gateway.
directConnectGatewayAssociationProposal_requestedAllowedPrefixesToDirectConnectGateway :: Lens' DirectConnectGatewayAssociationProposal (Maybe [RouteFilterPrefix])

-- | The state of the proposal. The following are possible values:
--   
--   <ul>
--   <li><tt>accepted</tt>: The proposal has been accepted. The Direct
--   Connect gateway association is available to use in this state.</li>
--   <li><tt>deleted</tt>: The proposal has been deleted by the owner that
--   made the proposal. The Direct Connect gateway association cannot be
--   used in this state.</li>
--   <li><tt>requested</tt>: The proposal has been requested. The Direct
--   Connect gateway association cannot be used in this state.</li>
--   </ul>
directConnectGatewayAssociationProposal_proposalState :: Lens' DirectConnectGatewayAssociationProposal (Maybe DirectConnectGatewayAssociationProposalState)

-- | Information about the associated gateway.
directConnectGatewayAssociationProposal_associatedGateway :: Lens' DirectConnectGatewayAssociationProposal (Maybe AssociatedGateway)

-- | The existing Amazon VPC prefixes advertised to the Direct Connect
--   gateway.
directConnectGatewayAssociationProposal_existingAllowedPrefixesToDirectConnectGateway :: Lens' DirectConnectGatewayAssociationProposal (Maybe [RouteFilterPrefix])

-- | The ID of the Direct Connect gateway.
directConnectGatewayAssociationProposal_directConnectGatewayId :: Lens' DirectConnectGatewayAssociationProposal (Maybe Text)

-- | The ID of the account that owns the Direct Connect gateway.
directConnectGatewayAssociationProposal_directConnectGatewayOwnerAccount :: Lens' DirectConnectGatewayAssociationProposal (Maybe Text)
instance GHC.Generics.Generic Network.AWS.DirectConnect.Types.DirectConnectGatewayAssociationProposal.DirectConnectGatewayAssociationProposal
instance GHC.Show.Show Network.AWS.DirectConnect.Types.DirectConnectGatewayAssociationProposal.DirectConnectGatewayAssociationProposal
instance GHC.Read.Read Network.AWS.DirectConnect.Types.DirectConnectGatewayAssociationProposal.DirectConnectGatewayAssociationProposal
instance GHC.Classes.Eq Network.AWS.DirectConnect.Types.DirectConnectGatewayAssociationProposal.DirectConnectGatewayAssociationProposal
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DirectConnect.Types.DirectConnectGatewayAssociationProposal.DirectConnectGatewayAssociationProposal
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.Types.DirectConnectGatewayAssociationProposal.DirectConnectGatewayAssociationProposal
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.Types.DirectConnectGatewayAssociationProposal.DirectConnectGatewayAssociationProposal


module Network.AWS.DirectConnect.Types.DirectConnectGatewayAssociation

-- | Information about an association between a Direct Connect gateway and
--   a virtual private gateway or transit gateway.
--   
--   <i>See:</i> <a>newDirectConnectGatewayAssociation</a> smart
--   constructor.
data DirectConnectGatewayAssociation
DirectConnectGatewayAssociation' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe DirectConnectGatewayAssociationState -> Maybe AssociatedGateway -> Maybe Text -> Maybe Text -> Maybe [RouteFilterPrefix] -> Maybe Text -> DirectConnectGatewayAssociation

-- | The ID of the virtual private gateway. Applies only to private virtual
--   interfaces.
[$sel:virtualGatewayId:DirectConnectGatewayAssociation'] :: DirectConnectGatewayAssociation -> Maybe Text

-- | The Region where the virtual private gateway is located.
[$sel:virtualGatewayRegion:DirectConnectGatewayAssociation'] :: DirectConnectGatewayAssociation -> Maybe Text

-- | The ID of the account that owns the virtual private gateway.
[$sel:virtualGatewayOwnerAccount:DirectConnectGatewayAssociation'] :: DirectConnectGatewayAssociation -> Maybe Text

-- | The error message if the state of an object failed to advance.
[$sel:stateChangeError:DirectConnectGatewayAssociation'] :: DirectConnectGatewayAssociation -> Maybe Text

-- | The state of the association. The following are the possible values:
--   
--   <ul>
--   <li><tt>associating</tt>: The initial state after calling
--   CreateDirectConnectGatewayAssociation.</li>
--   <li><tt>associated</tt>: The Direct Connect gateway and virtual
--   private gateway or transit gateway are successfully associated and
--   ready to pass traffic.</li>
--   <li><tt>disassociating</tt>: The initial state after calling
--   DeleteDirectConnectGatewayAssociation.</li>
--   <li><tt>disassociated</tt>: The virtual private gateway or transit
--   gateway is disassociated from the Direct Connect gateway. Traffic flow
--   between the Direct Connect gateway and virtual private gateway or
--   transit gateway is stopped.</li>
--   </ul>
[$sel:associationState:DirectConnectGatewayAssociation'] :: DirectConnectGatewayAssociation -> Maybe DirectConnectGatewayAssociationState

-- | Information about the associated gateway.
[$sel:associatedGateway:DirectConnectGatewayAssociation'] :: DirectConnectGatewayAssociation -> Maybe AssociatedGateway

-- | The ID of the Direct Connect gateway association.
[$sel:associationId:DirectConnectGatewayAssociation'] :: DirectConnectGatewayAssociation -> Maybe Text

-- | The ID of the Direct Connect gateway.
[$sel:directConnectGatewayId:DirectConnectGatewayAssociation'] :: DirectConnectGatewayAssociation -> Maybe Text

-- | The Amazon VPC prefixes to advertise to the Direct Connect gateway.
[$sel:allowedPrefixesToDirectConnectGateway:DirectConnectGatewayAssociation'] :: DirectConnectGatewayAssociation -> Maybe [RouteFilterPrefix]

-- | The ID of the account that owns the associated gateway.
[$sel:directConnectGatewayOwnerAccount:DirectConnectGatewayAssociation'] :: DirectConnectGatewayAssociation -> Maybe Text

-- | Create a value of <a>DirectConnectGatewayAssociation</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:virtualGatewayId:DirectConnectGatewayAssociation'</a>,
--   <a>directConnectGatewayAssociation_virtualGatewayId</a> - The ID of
--   the virtual private gateway. Applies only to private virtual
--   interfaces.
--   
--   <a>$sel:virtualGatewayRegion:DirectConnectGatewayAssociation'</a>,
--   <a>directConnectGatewayAssociation_virtualGatewayRegion</a> - The
--   Region where the virtual private gateway is located.
--   
--   
--   <a>$sel:virtualGatewayOwnerAccount:DirectConnectGatewayAssociation'</a>,
--   <a>directConnectGatewayAssociation_virtualGatewayOwnerAccount</a> -
--   The ID of the account that owns the virtual private gateway.
--   
--   <a>$sel:stateChangeError:DirectConnectGatewayAssociation'</a>,
--   <a>directConnectGatewayAssociation_stateChangeError</a> - The error
--   message if the state of an object failed to advance.
--   
--   <a>$sel:associationState:DirectConnectGatewayAssociation'</a>,
--   <a>directConnectGatewayAssociation_associationState</a> - The state of
--   the association. The following are the possible values:
--   
--   <ul>
--   <li><tt>associating</tt>: The initial state after calling
--   CreateDirectConnectGatewayAssociation.</li>
--   <li><tt>associated</tt>: The Direct Connect gateway and virtual
--   private gateway or transit gateway are successfully associated and
--   ready to pass traffic.</li>
--   <li><tt>disassociating</tt>: The initial state after calling
--   DeleteDirectConnectGatewayAssociation.</li>
--   <li><tt>disassociated</tt>: The virtual private gateway or transit
--   gateway is disassociated from the Direct Connect gateway. Traffic flow
--   between the Direct Connect gateway and virtual private gateway or
--   transit gateway is stopped.</li>
--   </ul>
--   
--   <a>$sel:associatedGateway:DirectConnectGatewayAssociation'</a>,
--   <a>directConnectGatewayAssociation_associatedGateway</a> - Information
--   about the associated gateway.
--   
--   <a>$sel:associationId:DirectConnectGatewayAssociation'</a>,
--   <a>directConnectGatewayAssociation_associationId</a> - The ID of the
--   Direct Connect gateway association.
--   
--   <a>$sel:directConnectGatewayId:DirectConnectGatewayAssociation'</a>,
--   <a>directConnectGatewayAssociation_directConnectGatewayId</a> - The ID
--   of the Direct Connect gateway.
--   
--   
--   <a>$sel:allowedPrefixesToDirectConnectGateway:DirectConnectGatewayAssociation'</a>,
--   <a>directConnectGatewayAssociation_allowedPrefixesToDirectConnectGateway</a>
--   - The Amazon VPC prefixes to advertise to the Direct Connect gateway.
--   
--   
--   <a>$sel:directConnectGatewayOwnerAccount:DirectConnectGatewayAssociation'</a>,
--   <a>directConnectGatewayAssociation_directConnectGatewayOwnerAccount</a>
--   - The ID of the account that owns the associated gateway.
newDirectConnectGatewayAssociation :: DirectConnectGatewayAssociation

-- | The ID of the virtual private gateway. Applies only to private virtual
--   interfaces.
directConnectGatewayAssociation_virtualGatewayId :: Lens' DirectConnectGatewayAssociation (Maybe Text)

-- | The Region where the virtual private gateway is located.
directConnectGatewayAssociation_virtualGatewayRegion :: Lens' DirectConnectGatewayAssociation (Maybe Text)

-- | The ID of the account that owns the virtual private gateway.
directConnectGatewayAssociation_virtualGatewayOwnerAccount :: Lens' DirectConnectGatewayAssociation (Maybe Text)

-- | The error message if the state of an object failed to advance.
directConnectGatewayAssociation_stateChangeError :: Lens' DirectConnectGatewayAssociation (Maybe Text)

-- | The state of the association. The following are the possible values:
--   
--   <ul>
--   <li><tt>associating</tt>: The initial state after calling
--   CreateDirectConnectGatewayAssociation.</li>
--   <li><tt>associated</tt>: The Direct Connect gateway and virtual
--   private gateway or transit gateway are successfully associated and
--   ready to pass traffic.</li>
--   <li><tt>disassociating</tt>: The initial state after calling
--   DeleteDirectConnectGatewayAssociation.</li>
--   <li><tt>disassociated</tt>: The virtual private gateway or transit
--   gateway is disassociated from the Direct Connect gateway. Traffic flow
--   between the Direct Connect gateway and virtual private gateway or
--   transit gateway is stopped.</li>
--   </ul>
directConnectGatewayAssociation_associationState :: Lens' DirectConnectGatewayAssociation (Maybe DirectConnectGatewayAssociationState)

-- | Information about the associated gateway.
directConnectGatewayAssociation_associatedGateway :: Lens' DirectConnectGatewayAssociation (Maybe AssociatedGateway)

-- | The ID of the Direct Connect gateway association.
directConnectGatewayAssociation_associationId :: Lens' DirectConnectGatewayAssociation (Maybe Text)

-- | The ID of the Direct Connect gateway.
directConnectGatewayAssociation_directConnectGatewayId :: Lens' DirectConnectGatewayAssociation (Maybe Text)

-- | The Amazon VPC prefixes to advertise to the Direct Connect gateway.
directConnectGatewayAssociation_allowedPrefixesToDirectConnectGateway :: Lens' DirectConnectGatewayAssociation (Maybe [RouteFilterPrefix])

-- | The ID of the account that owns the associated gateway.
directConnectGatewayAssociation_directConnectGatewayOwnerAccount :: Lens' DirectConnectGatewayAssociation (Maybe Text)
instance GHC.Generics.Generic Network.AWS.DirectConnect.Types.DirectConnectGatewayAssociation.DirectConnectGatewayAssociation
instance GHC.Show.Show Network.AWS.DirectConnect.Types.DirectConnectGatewayAssociation.DirectConnectGatewayAssociation
instance GHC.Read.Read Network.AWS.DirectConnect.Types.DirectConnectGatewayAssociation.DirectConnectGatewayAssociation
instance GHC.Classes.Eq Network.AWS.DirectConnect.Types.DirectConnectGatewayAssociation.DirectConnectGatewayAssociation
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DirectConnect.Types.DirectConnectGatewayAssociation.DirectConnectGatewayAssociation
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.Types.DirectConnectGatewayAssociation.DirectConnectGatewayAssociation
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.Types.DirectConnectGatewayAssociation.DirectConnectGatewayAssociation


module Network.AWS.DirectConnect.Types.Tag

-- | Information about a tag.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Maybe Text -> Text -> Tag

-- | The value.
[$sel:value:Tag'] :: Tag -> Maybe Text

-- | The key.
[$sel:key:Tag'] :: Tag -> Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The value.
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The key.
newTag :: Text -> Tag

-- | The value.
tag_value :: Lens' Tag (Maybe Text)

-- | The key.
tag_key :: Lens' Tag Text
instance GHC.Generics.Generic Network.AWS.DirectConnect.Types.Tag.Tag
instance GHC.Show.Show Network.AWS.DirectConnect.Types.Tag.Tag
instance GHC.Read.Read Network.AWS.DirectConnect.Types.Tag.Tag
instance GHC.Classes.Eq Network.AWS.DirectConnect.Types.Tag.Tag
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DirectConnect.Types.Tag.Tag
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.Types.Tag.Tag
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.Types.Tag.Tag
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.Types.Tag.Tag


module Network.AWS.DirectConnect.Types.ResourceTag

-- | Information about a tag associated with an Direct Connect resource.
--   
--   <i>See:</i> <a>newResourceTag</a> smart constructor.
data ResourceTag
ResourceTag' :: Maybe Text -> Maybe (NonEmpty Tag) -> ResourceTag

-- | The Amazon Resource Name (ARN) of the resource.
[$sel:resourceArn:ResourceTag'] :: ResourceTag -> Maybe Text

-- | The tags.
[$sel:tags:ResourceTag'] :: ResourceTag -> Maybe (NonEmpty Tag)

-- | Create a value of <a>ResourceTag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ResourceTag'</a>, <a>resourceTag_resourceArn</a> -
--   The Amazon Resource Name (ARN) of the resource.
--   
--   <a>$sel:tags:ResourceTag'</a>, <a>resourceTag_tags</a> - The tags.
newResourceTag :: ResourceTag

-- | The Amazon Resource Name (ARN) of the resource.
resourceTag_resourceArn :: Lens' ResourceTag (Maybe Text)

-- | The tags.
resourceTag_tags :: Lens' ResourceTag (Maybe (NonEmpty Tag))
instance GHC.Generics.Generic Network.AWS.DirectConnect.Types.ResourceTag.ResourceTag
instance GHC.Show.Show Network.AWS.DirectConnect.Types.ResourceTag.ResourceTag
instance GHC.Read.Read Network.AWS.DirectConnect.Types.ResourceTag.ResourceTag
instance GHC.Classes.Eq Network.AWS.DirectConnect.Types.ResourceTag.ResourceTag
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DirectConnect.Types.ResourceTag.ResourceTag
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.Types.ResourceTag.ResourceTag
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.Types.ResourceTag.ResourceTag


module Network.AWS.DirectConnect.Types.NewTransitVirtualInterfaceAllocation

-- | Information about a transit virtual interface to be provisioned on a
--   connection.
--   
--   <i>See:</i> <a>newNewTransitVirtualInterfaceAllocation</a> smart
--   constructor.
data NewTransitVirtualInterfaceAllocation
NewTransitVirtualInterfaceAllocation' :: Maybe Text -> Maybe Int -> Maybe Int -> Maybe (NonEmpty Tag) -> Maybe Text -> Maybe Text -> Maybe AddressFamily -> Maybe Int -> Maybe Text -> NewTransitVirtualInterfaceAllocation

-- | The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
[$sel:authKey:NewTransitVirtualInterfaceAllocation'] :: NewTransitVirtualInterfaceAllocation -> Maybe Text

-- | The autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
--   
--   The valid values are 1-2147483647.
[$sel:asn:NewTransitVirtualInterfaceAllocation'] :: NewTransitVirtualInterfaceAllocation -> Maybe Int

-- | The maximum transmission unit (MTU), in bytes. The supported values
--   are 1500 and 9001. The default value is 1500.
[$sel:mtu:NewTransitVirtualInterfaceAllocation'] :: NewTransitVirtualInterfaceAllocation -> Maybe Int

-- | The tags associated with the transitive virtual interface.
[$sel:tags:NewTransitVirtualInterfaceAllocation'] :: NewTransitVirtualInterfaceAllocation -> Maybe (NonEmpty Tag)

-- | The name of the virtual interface assigned by the customer network.
--   The name has a maximum of 100 characters. The following are valid
--   characters: a-z, 0-9 and a hyphen (-).
[$sel:virtualInterfaceName:NewTransitVirtualInterfaceAllocation'] :: NewTransitVirtualInterfaceAllocation -> Maybe Text

-- | The IP address assigned to the Amazon interface.
[$sel:amazonAddress:NewTransitVirtualInterfaceAllocation'] :: NewTransitVirtualInterfaceAllocation -> Maybe Text

-- | The address family for the BGP peer.
[$sel:addressFamily:NewTransitVirtualInterfaceAllocation'] :: NewTransitVirtualInterfaceAllocation -> Maybe AddressFamily

-- | The ID of the VLAN.
[$sel:vlan:NewTransitVirtualInterfaceAllocation'] :: NewTransitVirtualInterfaceAllocation -> Maybe Int

-- | The IP address assigned to the customer interface.
[$sel:customerAddress:NewTransitVirtualInterfaceAllocation'] :: NewTransitVirtualInterfaceAllocation -> Maybe Text

-- | Create a value of <a>NewTransitVirtualInterfaceAllocation</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authKey:NewTransitVirtualInterfaceAllocation'</a>,
--   <a>newTransitVirtualInterfaceAllocation_authKey</a> - The
--   authentication key for BGP configuration. This string has a minimum
--   length of 6 characters and and a maximun lenth of 80 characters.
--   
--   <a>$sel:asn:NewTransitVirtualInterfaceAllocation'</a>,
--   <a>newTransitVirtualInterfaceAllocation_asn</a> - The autonomous
--   system (AS) number for Border Gateway Protocol (BGP) configuration.
--   
--   The valid values are 1-2147483647.
--   
--   <a>$sel:mtu:NewTransitVirtualInterfaceAllocation'</a>,
--   <a>newTransitVirtualInterfaceAllocation_mtu</a> - The maximum
--   transmission unit (MTU), in bytes. The supported values are 1500 and
--   9001. The default value is 1500.
--   
--   <a>$sel:tags:NewTransitVirtualInterfaceAllocation'</a>,
--   <a>newTransitVirtualInterfaceAllocation_tags</a> - The tags associated
--   with the transitive virtual interface.
--   
--   
--   <a>$sel:virtualInterfaceName:NewTransitVirtualInterfaceAllocation'</a>,
--   <a>newTransitVirtualInterfaceAllocation_virtualInterfaceName</a> - The
--   name of the virtual interface assigned by the customer network. The
--   name has a maximum of 100 characters. The following are valid
--   characters: a-z, 0-9 and a hyphen (-).
--   
--   <a>$sel:amazonAddress:NewTransitVirtualInterfaceAllocation'</a>,
--   <a>newTransitVirtualInterfaceAllocation_amazonAddress</a> - The IP
--   address assigned to the Amazon interface.
--   
--   <a>$sel:addressFamily:NewTransitVirtualInterfaceAllocation'</a>,
--   <a>newTransitVirtualInterfaceAllocation_addressFamily</a> - The
--   address family for the BGP peer.
--   
--   <a>$sel:vlan:NewTransitVirtualInterfaceAllocation'</a>,
--   <a>newTransitVirtualInterfaceAllocation_vlan</a> - The ID of the VLAN.
--   
--   <a>$sel:customerAddress:NewTransitVirtualInterfaceAllocation'</a>,
--   <a>newTransitVirtualInterfaceAllocation_customerAddress</a> - The IP
--   address assigned to the customer interface.
newNewTransitVirtualInterfaceAllocation :: NewTransitVirtualInterfaceAllocation

-- | The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
newTransitVirtualInterfaceAllocation_authKey :: Lens' NewTransitVirtualInterfaceAllocation (Maybe Text)

-- | The autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
--   
--   The valid values are 1-2147483647.
newTransitVirtualInterfaceAllocation_asn :: Lens' NewTransitVirtualInterfaceAllocation (Maybe Int)

-- | The maximum transmission unit (MTU), in bytes. The supported values
--   are 1500 and 9001. The default value is 1500.
newTransitVirtualInterfaceAllocation_mtu :: Lens' NewTransitVirtualInterfaceAllocation (Maybe Int)

-- | The tags associated with the transitive virtual interface.
newTransitVirtualInterfaceAllocation_tags :: Lens' NewTransitVirtualInterfaceAllocation (Maybe (NonEmpty Tag))

-- | The name of the virtual interface assigned by the customer network.
--   The name has a maximum of 100 characters. The following are valid
--   characters: a-z, 0-9 and a hyphen (-).
newTransitVirtualInterfaceAllocation_virtualInterfaceName :: Lens' NewTransitVirtualInterfaceAllocation (Maybe Text)

-- | The IP address assigned to the Amazon interface.
newTransitVirtualInterfaceAllocation_amazonAddress :: Lens' NewTransitVirtualInterfaceAllocation (Maybe Text)

-- | The address family for the BGP peer.
newTransitVirtualInterfaceAllocation_addressFamily :: Lens' NewTransitVirtualInterfaceAllocation (Maybe AddressFamily)

-- | The ID of the VLAN.
newTransitVirtualInterfaceAllocation_vlan :: Lens' NewTransitVirtualInterfaceAllocation (Maybe Int)

-- | The IP address assigned to the customer interface.
newTransitVirtualInterfaceAllocation_customerAddress :: Lens' NewTransitVirtualInterfaceAllocation (Maybe Text)
instance GHC.Generics.Generic Network.AWS.DirectConnect.Types.NewTransitVirtualInterfaceAllocation.NewTransitVirtualInterfaceAllocation
instance GHC.Show.Show Network.AWS.DirectConnect.Types.NewTransitVirtualInterfaceAllocation.NewTransitVirtualInterfaceAllocation
instance GHC.Read.Read Network.AWS.DirectConnect.Types.NewTransitVirtualInterfaceAllocation.NewTransitVirtualInterfaceAllocation
instance GHC.Classes.Eq Network.AWS.DirectConnect.Types.NewTransitVirtualInterfaceAllocation.NewTransitVirtualInterfaceAllocation
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.Types.NewTransitVirtualInterfaceAllocation.NewTransitVirtualInterfaceAllocation
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.Types.NewTransitVirtualInterfaceAllocation.NewTransitVirtualInterfaceAllocation
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.Types.NewTransitVirtualInterfaceAllocation.NewTransitVirtualInterfaceAllocation


module Network.AWS.DirectConnect.Types.NewTransitVirtualInterface

-- | Information about a transit virtual interface.
--   
--   <i>See:</i> <a>newNewTransitVirtualInterface</a> smart constructor.
data NewTransitVirtualInterface
NewTransitVirtualInterface' :: Maybe Text -> Maybe Int -> Maybe Int -> Maybe (NonEmpty Tag) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe AddressFamily -> Maybe Int -> Maybe Text -> NewTransitVirtualInterface

-- | The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
[$sel:authKey:NewTransitVirtualInterface'] :: NewTransitVirtualInterface -> Maybe Text

-- | The autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
--   
--   The valid values are 1-2147483647.
[$sel:asn:NewTransitVirtualInterface'] :: NewTransitVirtualInterface -> Maybe Int

-- | The maximum transmission unit (MTU), in bytes. The supported values
--   are 1500 and 9001. The default value is 1500.
[$sel:mtu:NewTransitVirtualInterface'] :: NewTransitVirtualInterface -> Maybe Int

-- | The tags associated with the transitive virtual interface.
[$sel:tags:NewTransitVirtualInterface'] :: NewTransitVirtualInterface -> Maybe (NonEmpty Tag)

-- | The ID of the Direct Connect gateway.
[$sel:directConnectGatewayId:NewTransitVirtualInterface'] :: NewTransitVirtualInterface -> Maybe Text

-- | The name of the virtual interface assigned by the customer network.
--   The name has a maximum of 100 characters. The following are valid
--   characters: a-z, 0-9 and a hyphen (-).
[$sel:virtualInterfaceName:NewTransitVirtualInterface'] :: NewTransitVirtualInterface -> Maybe Text

-- | The IP address assigned to the Amazon interface.
[$sel:amazonAddress:NewTransitVirtualInterface'] :: NewTransitVirtualInterface -> Maybe Text

-- | The address family for the BGP peer.
[$sel:addressFamily:NewTransitVirtualInterface'] :: NewTransitVirtualInterface -> Maybe AddressFamily

-- | The ID of the VLAN.
[$sel:vlan:NewTransitVirtualInterface'] :: NewTransitVirtualInterface -> Maybe Int

-- | The IP address assigned to the customer interface.
[$sel:customerAddress:NewTransitVirtualInterface'] :: NewTransitVirtualInterface -> Maybe Text

-- | Create a value of <a>NewTransitVirtualInterface</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authKey:NewTransitVirtualInterface'</a>,
--   <a>newTransitVirtualInterface_authKey</a> - The authentication key for
--   BGP configuration. This string has a minimum length of 6 characters
--   and and a maximun lenth of 80 characters.
--   
--   <a>$sel:asn:NewTransitVirtualInterface'</a>,
--   <a>newTransitVirtualInterface_asn</a> - The autonomous system (AS)
--   number for Border Gateway Protocol (BGP) configuration.
--   
--   The valid values are 1-2147483647.
--   
--   <a>$sel:mtu:NewTransitVirtualInterface'</a>,
--   <a>newTransitVirtualInterface_mtu</a> - The maximum transmission unit
--   (MTU), in bytes. The supported values are 1500 and 9001. The default
--   value is 1500.
--   
--   <a>$sel:tags:NewTransitVirtualInterface'</a>,
--   <a>newTransitVirtualInterface_tags</a> - The tags associated with the
--   transitive virtual interface.
--   
--   <a>$sel:directConnectGatewayId:NewTransitVirtualInterface'</a>,
--   <a>newTransitVirtualInterface_directConnectGatewayId</a> - The ID of
--   the Direct Connect gateway.
--   
--   <a>$sel:virtualInterfaceName:NewTransitVirtualInterface'</a>,
--   <a>newTransitVirtualInterface_virtualInterfaceName</a> - The name of
--   the virtual interface assigned by the customer network. The name has a
--   maximum of 100 characters. The following are valid characters: a-z,
--   0-9 and a hyphen (-).
--   
--   <a>$sel:amazonAddress:NewTransitVirtualInterface'</a>,
--   <a>newTransitVirtualInterface_amazonAddress</a> - The IP address
--   assigned to the Amazon interface.
--   
--   <a>$sel:addressFamily:NewTransitVirtualInterface'</a>,
--   <a>newTransitVirtualInterface_addressFamily</a> - The address family
--   for the BGP peer.
--   
--   <a>$sel:vlan:NewTransitVirtualInterface'</a>,
--   <a>newTransitVirtualInterface_vlan</a> - The ID of the VLAN.
--   
--   <a>$sel:customerAddress:NewTransitVirtualInterface'</a>,
--   <a>newTransitVirtualInterface_customerAddress</a> - The IP address
--   assigned to the customer interface.
newNewTransitVirtualInterface :: NewTransitVirtualInterface

-- | The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
newTransitVirtualInterface_authKey :: Lens' NewTransitVirtualInterface (Maybe Text)

-- | The autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
--   
--   The valid values are 1-2147483647.
newTransitVirtualInterface_asn :: Lens' NewTransitVirtualInterface (Maybe Int)

-- | The maximum transmission unit (MTU), in bytes. The supported values
--   are 1500 and 9001. The default value is 1500.
newTransitVirtualInterface_mtu :: Lens' NewTransitVirtualInterface (Maybe Int)

-- | The tags associated with the transitive virtual interface.
newTransitVirtualInterface_tags :: Lens' NewTransitVirtualInterface (Maybe (NonEmpty Tag))

-- | The ID of the Direct Connect gateway.
newTransitVirtualInterface_directConnectGatewayId :: Lens' NewTransitVirtualInterface (Maybe Text)

-- | The name of the virtual interface assigned by the customer network.
--   The name has a maximum of 100 characters. The following are valid
--   characters: a-z, 0-9 and a hyphen (-).
newTransitVirtualInterface_virtualInterfaceName :: Lens' NewTransitVirtualInterface (Maybe Text)

-- | The IP address assigned to the Amazon interface.
newTransitVirtualInterface_amazonAddress :: Lens' NewTransitVirtualInterface (Maybe Text)

-- | The address family for the BGP peer.
newTransitVirtualInterface_addressFamily :: Lens' NewTransitVirtualInterface (Maybe AddressFamily)

-- | The ID of the VLAN.
newTransitVirtualInterface_vlan :: Lens' NewTransitVirtualInterface (Maybe Int)

-- | The IP address assigned to the customer interface.
newTransitVirtualInterface_customerAddress :: Lens' NewTransitVirtualInterface (Maybe Text)
instance GHC.Generics.Generic Network.AWS.DirectConnect.Types.NewTransitVirtualInterface.NewTransitVirtualInterface
instance GHC.Show.Show Network.AWS.DirectConnect.Types.NewTransitVirtualInterface.NewTransitVirtualInterface
instance GHC.Read.Read Network.AWS.DirectConnect.Types.NewTransitVirtualInterface.NewTransitVirtualInterface
instance GHC.Classes.Eq Network.AWS.DirectConnect.Types.NewTransitVirtualInterface.NewTransitVirtualInterface
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.Types.NewTransitVirtualInterface.NewTransitVirtualInterface
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.Types.NewTransitVirtualInterface.NewTransitVirtualInterface
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.Types.NewTransitVirtualInterface.NewTransitVirtualInterface


module Network.AWS.DirectConnect.Types.NewPublicVirtualInterfaceAllocation

-- | Information about a public virtual interface to be provisioned on a
--   connection.
--   
--   <i>See:</i> <a>newNewPublicVirtualInterfaceAllocation</a> smart
--   constructor.
data NewPublicVirtualInterfaceAllocation
NewPublicVirtualInterfaceAllocation' :: Maybe Text -> Maybe [RouteFilterPrefix] -> Maybe (NonEmpty Tag) -> Maybe Text -> Maybe AddressFamily -> Maybe Text -> Text -> Int -> Int -> NewPublicVirtualInterfaceAllocation

-- | The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
[$sel:authKey:NewPublicVirtualInterfaceAllocation'] :: NewPublicVirtualInterfaceAllocation -> Maybe Text

-- | The routes to be advertised to the Amazon Web Services network in this
--   Region. Applies to public virtual interfaces.
[$sel:routeFilterPrefixes:NewPublicVirtualInterfaceAllocation'] :: NewPublicVirtualInterfaceAllocation -> Maybe [RouteFilterPrefix]

-- | The tags associated with the public virtual interface.
[$sel:tags:NewPublicVirtualInterfaceAllocation'] :: NewPublicVirtualInterfaceAllocation -> Maybe (NonEmpty Tag)

-- | The IP address assigned to the Amazon interface.
[$sel:amazonAddress:NewPublicVirtualInterfaceAllocation'] :: NewPublicVirtualInterfaceAllocation -> Maybe Text

-- | The address family for the BGP peer.
[$sel:addressFamily:NewPublicVirtualInterfaceAllocation'] :: NewPublicVirtualInterfaceAllocation -> Maybe AddressFamily

-- | The IP address assigned to the customer interface.
[$sel:customerAddress:NewPublicVirtualInterfaceAllocation'] :: NewPublicVirtualInterfaceAllocation -> Maybe Text

-- | The name of the virtual interface assigned by the customer network.
--   The name has a maximum of 100 characters. The following are valid
--   characters: a-z, 0-9 and a hyphen (-).
[$sel:virtualInterfaceName:NewPublicVirtualInterfaceAllocation'] :: NewPublicVirtualInterfaceAllocation -> Text

-- | The ID of the VLAN.
[$sel:vlan:NewPublicVirtualInterfaceAllocation'] :: NewPublicVirtualInterfaceAllocation -> Int

-- | The autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
--   
--   The valid values are 1-2147483647.
[$sel:asn:NewPublicVirtualInterfaceAllocation'] :: NewPublicVirtualInterfaceAllocation -> Int

-- | Create a value of <a>NewPublicVirtualInterfaceAllocation</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authKey:NewPublicVirtualInterfaceAllocation'</a>,
--   <a>newPublicVirtualInterfaceAllocation_authKey</a> - The
--   authentication key for BGP configuration. This string has a minimum
--   length of 6 characters and and a maximun lenth of 80 characters.
--   
--   <a>$sel:routeFilterPrefixes:NewPublicVirtualInterfaceAllocation'</a>,
--   <a>newPublicVirtualInterfaceAllocation_routeFilterPrefixes</a> - The
--   routes to be advertised to the Amazon Web Services network in this
--   Region. Applies to public virtual interfaces.
--   
--   <a>$sel:tags:NewPublicVirtualInterfaceAllocation'</a>,
--   <a>newPublicVirtualInterfaceAllocation_tags</a> - The tags associated
--   with the public virtual interface.
--   
--   <a>$sel:amazonAddress:NewPublicVirtualInterfaceAllocation'</a>,
--   <a>newPublicVirtualInterfaceAllocation_amazonAddress</a> - The IP
--   address assigned to the Amazon interface.
--   
--   <a>$sel:addressFamily:NewPublicVirtualInterfaceAllocation'</a>,
--   <a>newPublicVirtualInterfaceAllocation_addressFamily</a> - The address
--   family for the BGP peer.
--   
--   <a>$sel:customerAddress:NewPublicVirtualInterfaceAllocation'</a>,
--   <a>newPublicVirtualInterfaceAllocation_customerAddress</a> - The IP
--   address assigned to the customer interface.
--   
--   <a>$sel:virtualInterfaceName:NewPublicVirtualInterfaceAllocation'</a>,
--   <a>newPublicVirtualInterfaceAllocation_virtualInterfaceName</a> - The
--   name of the virtual interface assigned by the customer network. The
--   name has a maximum of 100 characters. The following are valid
--   characters: a-z, 0-9 and a hyphen (-).
--   
--   <a>$sel:vlan:NewPublicVirtualInterfaceAllocation'</a>,
--   <a>newPublicVirtualInterfaceAllocation_vlan</a> - The ID of the VLAN.
--   
--   <a>$sel:asn:NewPublicVirtualInterfaceAllocation'</a>,
--   <a>newPublicVirtualInterfaceAllocation_asn</a> - The autonomous system
--   (AS) number for Border Gateway Protocol (BGP) configuration.
--   
--   The valid values are 1-2147483647.
newNewPublicVirtualInterfaceAllocation :: Text -> Int -> Int -> NewPublicVirtualInterfaceAllocation

-- | The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
newPublicVirtualInterfaceAllocation_authKey :: Lens' NewPublicVirtualInterfaceAllocation (Maybe Text)

-- | The routes to be advertised to the Amazon Web Services network in this
--   Region. Applies to public virtual interfaces.
newPublicVirtualInterfaceAllocation_routeFilterPrefixes :: Lens' NewPublicVirtualInterfaceAllocation (Maybe [RouteFilterPrefix])

-- | The tags associated with the public virtual interface.
newPublicVirtualInterfaceAllocation_tags :: Lens' NewPublicVirtualInterfaceAllocation (Maybe (NonEmpty Tag))

-- | The IP address assigned to the Amazon interface.
newPublicVirtualInterfaceAllocation_amazonAddress :: Lens' NewPublicVirtualInterfaceAllocation (Maybe Text)

-- | The address family for the BGP peer.
newPublicVirtualInterfaceAllocation_addressFamily :: Lens' NewPublicVirtualInterfaceAllocation (Maybe AddressFamily)

-- | The IP address assigned to the customer interface.
newPublicVirtualInterfaceAllocation_customerAddress :: Lens' NewPublicVirtualInterfaceAllocation (Maybe Text)

-- | The name of the virtual interface assigned by the customer network.
--   The name has a maximum of 100 characters. The following are valid
--   characters: a-z, 0-9 and a hyphen (-).
newPublicVirtualInterfaceAllocation_virtualInterfaceName :: Lens' NewPublicVirtualInterfaceAllocation Text

-- | The ID of the VLAN.
newPublicVirtualInterfaceAllocation_vlan :: Lens' NewPublicVirtualInterfaceAllocation Int

-- | The autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
--   
--   The valid values are 1-2147483647.
newPublicVirtualInterfaceAllocation_asn :: Lens' NewPublicVirtualInterfaceAllocation Int
instance GHC.Generics.Generic Network.AWS.DirectConnect.Types.NewPublicVirtualInterfaceAllocation.NewPublicVirtualInterfaceAllocation
instance GHC.Show.Show Network.AWS.DirectConnect.Types.NewPublicVirtualInterfaceAllocation.NewPublicVirtualInterfaceAllocation
instance GHC.Read.Read Network.AWS.DirectConnect.Types.NewPublicVirtualInterfaceAllocation.NewPublicVirtualInterfaceAllocation
instance GHC.Classes.Eq Network.AWS.DirectConnect.Types.NewPublicVirtualInterfaceAllocation.NewPublicVirtualInterfaceAllocation
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.Types.NewPublicVirtualInterfaceAllocation.NewPublicVirtualInterfaceAllocation
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.Types.NewPublicVirtualInterfaceAllocation.NewPublicVirtualInterfaceAllocation
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.Types.NewPublicVirtualInterfaceAllocation.NewPublicVirtualInterfaceAllocation


module Network.AWS.DirectConnect.Types.NewPublicVirtualInterface

-- | Information about a public virtual interface.
--   
--   <i>See:</i> <a>newNewPublicVirtualInterface</a> smart constructor.
data NewPublicVirtualInterface
NewPublicVirtualInterface' :: Maybe Text -> Maybe [RouteFilterPrefix] -> Maybe (NonEmpty Tag) -> Maybe Text -> Maybe AddressFamily -> Maybe Text -> Text -> Int -> Int -> NewPublicVirtualInterface

-- | The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
[$sel:authKey:NewPublicVirtualInterface'] :: NewPublicVirtualInterface -> Maybe Text

-- | The routes to be advertised to the Amazon Web Services network in this
--   Region. Applies to public virtual interfaces.
[$sel:routeFilterPrefixes:NewPublicVirtualInterface'] :: NewPublicVirtualInterface -> Maybe [RouteFilterPrefix]

-- | The tags associated with the public virtual interface.
[$sel:tags:NewPublicVirtualInterface'] :: NewPublicVirtualInterface -> Maybe (NonEmpty Tag)

-- | The IP address assigned to the Amazon interface.
[$sel:amazonAddress:NewPublicVirtualInterface'] :: NewPublicVirtualInterface -> Maybe Text

-- | The address family for the BGP peer.
[$sel:addressFamily:NewPublicVirtualInterface'] :: NewPublicVirtualInterface -> Maybe AddressFamily

-- | The IP address assigned to the customer interface.
[$sel:customerAddress:NewPublicVirtualInterface'] :: NewPublicVirtualInterface -> Maybe Text

-- | The name of the virtual interface assigned by the customer network.
--   The name has a maximum of 100 characters. The following are valid
--   characters: a-z, 0-9 and a hyphen (-).
[$sel:virtualInterfaceName:NewPublicVirtualInterface'] :: NewPublicVirtualInterface -> Text

-- | The ID of the VLAN.
[$sel:vlan:NewPublicVirtualInterface'] :: NewPublicVirtualInterface -> Int

-- | The autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
--   
--   The valid values are 1-2147483647.
[$sel:asn:NewPublicVirtualInterface'] :: NewPublicVirtualInterface -> Int

-- | Create a value of <a>NewPublicVirtualInterface</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authKey:NewPublicVirtualInterface'</a>,
--   <a>newPublicVirtualInterface_authKey</a> - The authentication key for
--   BGP configuration. This string has a minimum length of 6 characters
--   and and a maximun lenth of 80 characters.
--   
--   <a>$sel:routeFilterPrefixes:NewPublicVirtualInterface'</a>,
--   <a>newPublicVirtualInterface_routeFilterPrefixes</a> - The routes to
--   be advertised to the Amazon Web Services network in this Region.
--   Applies to public virtual interfaces.
--   
--   <a>$sel:tags:NewPublicVirtualInterface'</a>,
--   <a>newPublicVirtualInterface_tags</a> - The tags associated with the
--   public virtual interface.
--   
--   <a>$sel:amazonAddress:NewPublicVirtualInterface'</a>,
--   <a>newPublicVirtualInterface_amazonAddress</a> - The IP address
--   assigned to the Amazon interface.
--   
--   <a>$sel:addressFamily:NewPublicVirtualInterface'</a>,
--   <a>newPublicVirtualInterface_addressFamily</a> - The address family
--   for the BGP peer.
--   
--   <a>$sel:customerAddress:NewPublicVirtualInterface'</a>,
--   <a>newPublicVirtualInterface_customerAddress</a> - The IP address
--   assigned to the customer interface.
--   
--   <a>$sel:virtualInterfaceName:NewPublicVirtualInterface'</a>,
--   <a>newPublicVirtualInterface_virtualInterfaceName</a> - The name of
--   the virtual interface assigned by the customer network. The name has a
--   maximum of 100 characters. The following are valid characters: a-z,
--   0-9 and a hyphen (-).
--   
--   <a>$sel:vlan:NewPublicVirtualInterface'</a>,
--   <a>newPublicVirtualInterface_vlan</a> - The ID of the VLAN.
--   
--   <a>$sel:asn:NewPublicVirtualInterface'</a>,
--   <a>newPublicVirtualInterface_asn</a> - The autonomous system (AS)
--   number for Border Gateway Protocol (BGP) configuration.
--   
--   The valid values are 1-2147483647.
newNewPublicVirtualInterface :: Text -> Int -> Int -> NewPublicVirtualInterface

-- | The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
newPublicVirtualInterface_authKey :: Lens' NewPublicVirtualInterface (Maybe Text)

-- | The routes to be advertised to the Amazon Web Services network in this
--   Region. Applies to public virtual interfaces.
newPublicVirtualInterface_routeFilterPrefixes :: Lens' NewPublicVirtualInterface (Maybe [RouteFilterPrefix])

-- | The tags associated with the public virtual interface.
newPublicVirtualInterface_tags :: Lens' NewPublicVirtualInterface (Maybe (NonEmpty Tag))

-- | The IP address assigned to the Amazon interface.
newPublicVirtualInterface_amazonAddress :: Lens' NewPublicVirtualInterface (Maybe Text)

-- | The address family for the BGP peer.
newPublicVirtualInterface_addressFamily :: Lens' NewPublicVirtualInterface (Maybe AddressFamily)

-- | The IP address assigned to the customer interface.
newPublicVirtualInterface_customerAddress :: Lens' NewPublicVirtualInterface (Maybe Text)

-- | The name of the virtual interface assigned by the customer network.
--   The name has a maximum of 100 characters. The following are valid
--   characters: a-z, 0-9 and a hyphen (-).
newPublicVirtualInterface_virtualInterfaceName :: Lens' NewPublicVirtualInterface Text

-- | The ID of the VLAN.
newPublicVirtualInterface_vlan :: Lens' NewPublicVirtualInterface Int

-- | The autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
--   
--   The valid values are 1-2147483647.
newPublicVirtualInterface_asn :: Lens' NewPublicVirtualInterface Int
instance GHC.Generics.Generic Network.AWS.DirectConnect.Types.NewPublicVirtualInterface.NewPublicVirtualInterface
instance GHC.Show.Show Network.AWS.DirectConnect.Types.NewPublicVirtualInterface.NewPublicVirtualInterface
instance GHC.Read.Read Network.AWS.DirectConnect.Types.NewPublicVirtualInterface.NewPublicVirtualInterface
instance GHC.Classes.Eq Network.AWS.DirectConnect.Types.NewPublicVirtualInterface.NewPublicVirtualInterface
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.Types.NewPublicVirtualInterface.NewPublicVirtualInterface
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.Types.NewPublicVirtualInterface.NewPublicVirtualInterface
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.Types.NewPublicVirtualInterface.NewPublicVirtualInterface


module Network.AWS.DirectConnect.Types.NewPrivateVirtualInterfaceAllocation

-- | Information about a private virtual interface to be provisioned on a
--   connection.
--   
--   <i>See:</i> <a>newNewPrivateVirtualInterfaceAllocation</a> smart
--   constructor.
data NewPrivateVirtualInterfaceAllocation
NewPrivateVirtualInterfaceAllocation' :: Maybe Text -> Maybe Int -> Maybe (NonEmpty Tag) -> Maybe Text -> Maybe AddressFamily -> Maybe Text -> Text -> Int -> Int -> NewPrivateVirtualInterfaceAllocation

-- | The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
[$sel:authKey:NewPrivateVirtualInterfaceAllocation'] :: NewPrivateVirtualInterfaceAllocation -> Maybe Text

-- | The maximum transmission unit (MTU), in bytes. The supported values
--   are 1500 and 9001. The default value is 1500.
[$sel:mtu:NewPrivateVirtualInterfaceAllocation'] :: NewPrivateVirtualInterfaceAllocation -> Maybe Int

-- | The tags associated with the private virtual interface.
[$sel:tags:NewPrivateVirtualInterfaceAllocation'] :: NewPrivateVirtualInterfaceAllocation -> Maybe (NonEmpty Tag)

-- | The IP address assigned to the Amazon interface.
[$sel:amazonAddress:NewPrivateVirtualInterfaceAllocation'] :: NewPrivateVirtualInterfaceAllocation -> Maybe Text

-- | The address family for the BGP peer.
[$sel:addressFamily:NewPrivateVirtualInterfaceAllocation'] :: NewPrivateVirtualInterfaceAllocation -> Maybe AddressFamily

-- | The IP address assigned to the customer interface.
[$sel:customerAddress:NewPrivateVirtualInterfaceAllocation'] :: NewPrivateVirtualInterfaceAllocation -> Maybe Text

-- | The name of the virtual interface assigned by the customer network.
--   The name has a maximum of 100 characters. The following are valid
--   characters: a-z, 0-9 and a hyphen (-).
[$sel:virtualInterfaceName:NewPrivateVirtualInterfaceAllocation'] :: NewPrivateVirtualInterfaceAllocation -> Text

-- | The ID of the VLAN.
[$sel:vlan:NewPrivateVirtualInterfaceAllocation'] :: NewPrivateVirtualInterfaceAllocation -> Int

-- | The autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
--   
--   The valid values are 1-2147483647.
[$sel:asn:NewPrivateVirtualInterfaceAllocation'] :: NewPrivateVirtualInterfaceAllocation -> Int

-- | Create a value of <a>NewPrivateVirtualInterfaceAllocation</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authKey:NewPrivateVirtualInterfaceAllocation'</a>,
--   <a>newPrivateVirtualInterfaceAllocation_authKey</a> - The
--   authentication key for BGP configuration. This string has a minimum
--   length of 6 characters and and a maximun lenth of 80 characters.
--   
--   <a>$sel:mtu:NewPrivateVirtualInterfaceAllocation'</a>,
--   <a>newPrivateVirtualInterfaceAllocation_mtu</a> - The maximum
--   transmission unit (MTU), in bytes. The supported values are 1500 and
--   9001. The default value is 1500.
--   
--   <a>$sel:tags:NewPrivateVirtualInterfaceAllocation'</a>,
--   <a>newPrivateVirtualInterfaceAllocation_tags</a> - The tags associated
--   with the private virtual interface.
--   
--   <a>$sel:amazonAddress:NewPrivateVirtualInterfaceAllocation'</a>,
--   <a>newPrivateVirtualInterfaceAllocation_amazonAddress</a> - The IP
--   address assigned to the Amazon interface.
--   
--   <a>$sel:addressFamily:NewPrivateVirtualInterfaceAllocation'</a>,
--   <a>newPrivateVirtualInterfaceAllocation_addressFamily</a> - The
--   address family for the BGP peer.
--   
--   <a>$sel:customerAddress:NewPrivateVirtualInterfaceAllocation'</a>,
--   <a>newPrivateVirtualInterfaceAllocation_customerAddress</a> - The IP
--   address assigned to the customer interface.
--   
--   
--   <a>$sel:virtualInterfaceName:NewPrivateVirtualInterfaceAllocation'</a>,
--   <a>newPrivateVirtualInterfaceAllocation_virtualInterfaceName</a> - The
--   name of the virtual interface assigned by the customer network. The
--   name has a maximum of 100 characters. The following are valid
--   characters: a-z, 0-9 and a hyphen (-).
--   
--   <a>$sel:vlan:NewPrivateVirtualInterfaceAllocation'</a>,
--   <a>newPrivateVirtualInterfaceAllocation_vlan</a> - The ID of the VLAN.
--   
--   <a>$sel:asn:NewPrivateVirtualInterfaceAllocation'</a>,
--   <a>newPrivateVirtualInterfaceAllocation_asn</a> - The autonomous
--   system (AS) number for Border Gateway Protocol (BGP) configuration.
--   
--   The valid values are 1-2147483647.
newNewPrivateVirtualInterfaceAllocation :: Text -> Int -> Int -> NewPrivateVirtualInterfaceAllocation

-- | The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
newPrivateVirtualInterfaceAllocation_authKey :: Lens' NewPrivateVirtualInterfaceAllocation (Maybe Text)

-- | The maximum transmission unit (MTU), in bytes. The supported values
--   are 1500 and 9001. The default value is 1500.
newPrivateVirtualInterfaceAllocation_mtu :: Lens' NewPrivateVirtualInterfaceAllocation (Maybe Int)

-- | The tags associated with the private virtual interface.
newPrivateVirtualInterfaceAllocation_tags :: Lens' NewPrivateVirtualInterfaceAllocation (Maybe (NonEmpty Tag))

-- | The IP address assigned to the Amazon interface.
newPrivateVirtualInterfaceAllocation_amazonAddress :: Lens' NewPrivateVirtualInterfaceAllocation (Maybe Text)

-- | The address family for the BGP peer.
newPrivateVirtualInterfaceAllocation_addressFamily :: Lens' NewPrivateVirtualInterfaceAllocation (Maybe AddressFamily)

-- | The IP address assigned to the customer interface.
newPrivateVirtualInterfaceAllocation_customerAddress :: Lens' NewPrivateVirtualInterfaceAllocation (Maybe Text)

-- | The name of the virtual interface assigned by the customer network.
--   The name has a maximum of 100 characters. The following are valid
--   characters: a-z, 0-9 and a hyphen (-).
newPrivateVirtualInterfaceAllocation_virtualInterfaceName :: Lens' NewPrivateVirtualInterfaceAllocation Text

-- | The ID of the VLAN.
newPrivateVirtualInterfaceAllocation_vlan :: Lens' NewPrivateVirtualInterfaceAllocation Int

-- | The autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
--   
--   The valid values are 1-2147483647.
newPrivateVirtualInterfaceAllocation_asn :: Lens' NewPrivateVirtualInterfaceAllocation Int
instance GHC.Generics.Generic Network.AWS.DirectConnect.Types.NewPrivateVirtualInterfaceAllocation.NewPrivateVirtualInterfaceAllocation
instance GHC.Show.Show Network.AWS.DirectConnect.Types.NewPrivateVirtualInterfaceAllocation.NewPrivateVirtualInterfaceAllocation
instance GHC.Read.Read Network.AWS.DirectConnect.Types.NewPrivateVirtualInterfaceAllocation.NewPrivateVirtualInterfaceAllocation
instance GHC.Classes.Eq Network.AWS.DirectConnect.Types.NewPrivateVirtualInterfaceAllocation.NewPrivateVirtualInterfaceAllocation
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.Types.NewPrivateVirtualInterfaceAllocation.NewPrivateVirtualInterfaceAllocation
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.Types.NewPrivateVirtualInterfaceAllocation.NewPrivateVirtualInterfaceAllocation
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.Types.NewPrivateVirtualInterfaceAllocation.NewPrivateVirtualInterfaceAllocation


module Network.AWS.DirectConnect.Types.NewPrivateVirtualInterface

-- | Information about a private virtual interface.
--   
--   <i>See:</i> <a>newNewPrivateVirtualInterface</a> smart constructor.
data NewPrivateVirtualInterface
NewPrivateVirtualInterface' :: Maybe Text -> Maybe Text -> Maybe Int -> Maybe (NonEmpty Tag) -> Maybe Text -> Maybe Text -> Maybe AddressFamily -> Maybe Text -> Text -> Int -> Int -> NewPrivateVirtualInterface

-- | The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
[$sel:authKey:NewPrivateVirtualInterface'] :: NewPrivateVirtualInterface -> Maybe Text

-- | The ID of the virtual private gateway.
[$sel:virtualGatewayId:NewPrivateVirtualInterface'] :: NewPrivateVirtualInterface -> Maybe Text

-- | The maximum transmission unit (MTU), in bytes. The supported values
--   are 1500 and 9001. The default value is 1500.
[$sel:mtu:NewPrivateVirtualInterface'] :: NewPrivateVirtualInterface -> Maybe Int

-- | The tags associated with the private virtual interface.
[$sel:tags:NewPrivateVirtualInterface'] :: NewPrivateVirtualInterface -> Maybe (NonEmpty Tag)

-- | The ID of the Direct Connect gateway.
[$sel:directConnectGatewayId:NewPrivateVirtualInterface'] :: NewPrivateVirtualInterface -> Maybe Text

-- | The IP address assigned to the Amazon interface.
[$sel:amazonAddress:NewPrivateVirtualInterface'] :: NewPrivateVirtualInterface -> Maybe Text

-- | The address family for the BGP peer.
[$sel:addressFamily:NewPrivateVirtualInterface'] :: NewPrivateVirtualInterface -> Maybe AddressFamily

-- | The IP address assigned to the customer interface.
[$sel:customerAddress:NewPrivateVirtualInterface'] :: NewPrivateVirtualInterface -> Maybe Text

-- | The name of the virtual interface assigned by the customer network.
--   The name has a maximum of 100 characters. The following are valid
--   characters: a-z, 0-9 and a hyphen (-).
[$sel:virtualInterfaceName:NewPrivateVirtualInterface'] :: NewPrivateVirtualInterface -> Text

-- | The ID of the VLAN.
[$sel:vlan:NewPrivateVirtualInterface'] :: NewPrivateVirtualInterface -> Int

-- | The autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
--   
--   The valid values are 1-2147483647.
[$sel:asn:NewPrivateVirtualInterface'] :: NewPrivateVirtualInterface -> Int

-- | Create a value of <a>NewPrivateVirtualInterface</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authKey:NewPrivateVirtualInterface'</a>,
--   <a>newPrivateVirtualInterface_authKey</a> - The authentication key for
--   BGP configuration. This string has a minimum length of 6 characters
--   and and a maximun lenth of 80 characters.
--   
--   <a>$sel:virtualGatewayId:NewPrivateVirtualInterface'</a>,
--   <a>newPrivateVirtualInterface_virtualGatewayId</a> - The ID of the
--   virtual private gateway.
--   
--   <a>$sel:mtu:NewPrivateVirtualInterface'</a>,
--   <a>newPrivateVirtualInterface_mtu</a> - The maximum transmission unit
--   (MTU), in bytes. The supported values are 1500 and 9001. The default
--   value is 1500.
--   
--   <a>$sel:tags:NewPrivateVirtualInterface'</a>,
--   <a>newPrivateVirtualInterface_tags</a> - The tags associated with the
--   private virtual interface.
--   
--   <a>$sel:directConnectGatewayId:NewPrivateVirtualInterface'</a>,
--   <a>newPrivateVirtualInterface_directConnectGatewayId</a> - The ID of
--   the Direct Connect gateway.
--   
--   <a>$sel:amazonAddress:NewPrivateVirtualInterface'</a>,
--   <a>newPrivateVirtualInterface_amazonAddress</a> - The IP address
--   assigned to the Amazon interface.
--   
--   <a>$sel:addressFamily:NewPrivateVirtualInterface'</a>,
--   <a>newPrivateVirtualInterface_addressFamily</a> - The address family
--   for the BGP peer.
--   
--   <a>$sel:customerAddress:NewPrivateVirtualInterface'</a>,
--   <a>newPrivateVirtualInterface_customerAddress</a> - The IP address
--   assigned to the customer interface.
--   
--   <a>$sel:virtualInterfaceName:NewPrivateVirtualInterface'</a>,
--   <a>newPrivateVirtualInterface_virtualInterfaceName</a> - The name of
--   the virtual interface assigned by the customer network. The name has a
--   maximum of 100 characters. The following are valid characters: a-z,
--   0-9 and a hyphen (-).
--   
--   <a>$sel:vlan:NewPrivateVirtualInterface'</a>,
--   <a>newPrivateVirtualInterface_vlan</a> - The ID of the VLAN.
--   
--   <a>$sel:asn:NewPrivateVirtualInterface'</a>,
--   <a>newPrivateVirtualInterface_asn</a> - The autonomous system (AS)
--   number for Border Gateway Protocol (BGP) configuration.
--   
--   The valid values are 1-2147483647.
newNewPrivateVirtualInterface :: Text -> Int -> Int -> NewPrivateVirtualInterface

-- | The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
newPrivateVirtualInterface_authKey :: Lens' NewPrivateVirtualInterface (Maybe Text)

-- | The ID of the virtual private gateway.
newPrivateVirtualInterface_virtualGatewayId :: Lens' NewPrivateVirtualInterface (Maybe Text)

-- | The maximum transmission unit (MTU), in bytes. The supported values
--   are 1500 and 9001. The default value is 1500.
newPrivateVirtualInterface_mtu :: Lens' NewPrivateVirtualInterface (Maybe Int)

-- | The tags associated with the private virtual interface.
newPrivateVirtualInterface_tags :: Lens' NewPrivateVirtualInterface (Maybe (NonEmpty Tag))

-- | The ID of the Direct Connect gateway.
newPrivateVirtualInterface_directConnectGatewayId :: Lens' NewPrivateVirtualInterface (Maybe Text)

-- | The IP address assigned to the Amazon interface.
newPrivateVirtualInterface_amazonAddress :: Lens' NewPrivateVirtualInterface (Maybe Text)

-- | The address family for the BGP peer.
newPrivateVirtualInterface_addressFamily :: Lens' NewPrivateVirtualInterface (Maybe AddressFamily)

-- | The IP address assigned to the customer interface.
newPrivateVirtualInterface_customerAddress :: Lens' NewPrivateVirtualInterface (Maybe Text)

-- | The name of the virtual interface assigned by the customer network.
--   The name has a maximum of 100 characters. The following are valid
--   characters: a-z, 0-9 and a hyphen (-).
newPrivateVirtualInterface_virtualInterfaceName :: Lens' NewPrivateVirtualInterface Text

-- | The ID of the VLAN.
newPrivateVirtualInterface_vlan :: Lens' NewPrivateVirtualInterface Int

-- | The autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
--   
--   The valid values are 1-2147483647.
newPrivateVirtualInterface_asn :: Lens' NewPrivateVirtualInterface Int
instance GHC.Generics.Generic Network.AWS.DirectConnect.Types.NewPrivateVirtualInterface.NewPrivateVirtualInterface
instance GHC.Show.Show Network.AWS.DirectConnect.Types.NewPrivateVirtualInterface.NewPrivateVirtualInterface
instance GHC.Read.Read Network.AWS.DirectConnect.Types.NewPrivateVirtualInterface.NewPrivateVirtualInterface
instance GHC.Classes.Eq Network.AWS.DirectConnect.Types.NewPrivateVirtualInterface.NewPrivateVirtualInterface
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.Types.NewPrivateVirtualInterface.NewPrivateVirtualInterface
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.Types.NewPrivateVirtualInterface.NewPrivateVirtualInterface
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.Types.NewPrivateVirtualInterface.NewPrivateVirtualInterface


module Network.AWS.DirectConnect.Types.Interconnect

-- | Information about an interconnect.
--   
--   <i>See:</i> <a>newInterconnect</a> smart constructor.
data Interconnect
Interconnect' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe HasLogicalRedundancy -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe (NonEmpty Tag) -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe InterconnectState -> Maybe Text -> Interconnect

-- | The ID of the interconnect.
[$sel:interconnectId:Interconnect'] :: Interconnect -> Maybe Text

-- | The bandwidth of the connection.
[$sel:bandwidth:Interconnect'] :: Interconnect -> Maybe Text

-- | The Direct Connect endpoint that terminates the physical connection.
[$sel:awsDeviceV2:Interconnect'] :: Interconnect -> Maybe Text

-- | The name of the service provider associated with the interconnect.
[$sel:providerName:Interconnect'] :: Interconnect -> Maybe Text

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
[$sel:awsLogicalDeviceId:Interconnect'] :: Interconnect -> Maybe Text

-- | Indicates whether the interconnect supports a secondary BGP in the
--   same address family (IPv4/IPv6).
[$sel:hasLogicalRedundancy:Interconnect'] :: Interconnect -> Maybe HasLogicalRedundancy

-- | The Direct Connect endpoint on which the physical connection
--   terminates.
[$sel:awsDevice:Interconnect'] :: Interconnect -> Maybe Text

-- | Indicates whether jumbo frames (9001 MTU) are supported.
[$sel:jumboFrameCapable:Interconnect'] :: Interconnect -> Maybe Bool

-- | The ID of the LAG.
[$sel:lagId:Interconnect'] :: Interconnect -> Maybe Text

-- | The tags associated with the interconnect.
[$sel:tags:Interconnect'] :: Interconnect -> Maybe (NonEmpty Tag)

-- | The time of the most recent call to DescribeLoa for this connection.
[$sel:loaIssueTime:Interconnect'] :: Interconnect -> Maybe POSIX

-- | The Region where the connection is located.
[$sel:region:Interconnect'] :: Interconnect -> Maybe Text

-- | The name of the interconnect.
[$sel:interconnectName:Interconnect'] :: Interconnect -> Maybe Text

-- | The state of the interconnect. The following are the possible values:
--   
--   <ul>
--   <li><tt>requested</tt>: The initial state of an interconnect. The
--   interconnect stays in the requested state until the Letter of
--   Authorization (LOA) is sent to the customer.</li>
--   <li><tt>pending</tt>: The interconnect is approved, and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is up, and the interconnect
--   is ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The interconnect is being deleted.</li>
--   <li><tt>deleted</tt>: The interconnect is deleted.</li>
--   <li><tt>unknown</tt>: The state of the interconnect is not
--   available.</li>
--   </ul>
[$sel:interconnectState:Interconnect'] :: Interconnect -> Maybe InterconnectState

-- | The location of the connection.
[$sel:location:Interconnect'] :: Interconnect -> Maybe Text

-- | Create a value of <a>Interconnect</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:interconnectId:Interconnect'</a>,
--   <a>interconnect_interconnectId</a> - The ID of the interconnect.
--   
--   <a>$sel:bandwidth:Interconnect'</a>, <a>interconnect_bandwidth</a> -
--   The bandwidth of the connection.
--   
--   <a>$sel:awsDeviceV2:Interconnect'</a>, <a>interconnect_awsDeviceV2</a>
--   - The Direct Connect endpoint that terminates the physical connection.
--   
--   <a>$sel:providerName:Interconnect'</a>,
--   <a>interconnect_providerName</a> - The name of the service provider
--   associated with the interconnect.
--   
--   <a>$sel:awsLogicalDeviceId:Interconnect'</a>,
--   <a>interconnect_awsLogicalDeviceId</a> - The Direct Connect endpoint
--   that terminates the logical connection. This device might be different
--   than the device that terminates the physical connection.
--   
--   <a>$sel:hasLogicalRedundancy:Interconnect'</a>,
--   <a>interconnect_hasLogicalRedundancy</a> - Indicates whether the
--   interconnect supports a secondary BGP in the same address family
--   (IPv4/IPv6).
--   
--   <a>$sel:awsDevice:Interconnect'</a>, <a>interconnect_awsDevice</a> -
--   The Direct Connect endpoint on which the physical connection
--   terminates.
--   
--   <a>$sel:jumboFrameCapable:Interconnect'</a>,
--   <a>interconnect_jumboFrameCapable</a> - Indicates whether jumbo frames
--   (9001 MTU) are supported.
--   
--   <a>$sel:lagId:Interconnect'</a>, <a>interconnect_lagId</a> - The ID of
--   the LAG.
--   
--   <a>$sel:tags:Interconnect'</a>, <a>interconnect_tags</a> - The tags
--   associated with the interconnect.
--   
--   <a>$sel:loaIssueTime:Interconnect'</a>,
--   <a>interconnect_loaIssueTime</a> - The time of the most recent call to
--   DescribeLoa for this connection.
--   
--   <a>$sel:region:Interconnect'</a>, <a>interconnect_region</a> - The
--   Region where the connection is located.
--   
--   <a>$sel:interconnectName:Interconnect'</a>,
--   <a>interconnect_interconnectName</a> - The name of the interconnect.
--   
--   <a>$sel:interconnectState:Interconnect'</a>,
--   <a>interconnect_interconnectState</a> - The state of the interconnect.
--   The following are the possible values:
--   
--   <ul>
--   <li><tt>requested</tt>: The initial state of an interconnect. The
--   interconnect stays in the requested state until the Letter of
--   Authorization (LOA) is sent to the customer.</li>
--   <li><tt>pending</tt>: The interconnect is approved, and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is up, and the interconnect
--   is ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The interconnect is being deleted.</li>
--   <li><tt>deleted</tt>: The interconnect is deleted.</li>
--   <li><tt>unknown</tt>: The state of the interconnect is not
--   available.</li>
--   </ul>
--   
--   <a>$sel:location:Interconnect'</a>, <a>interconnect_location</a> - The
--   location of the connection.
newInterconnect :: Interconnect

-- | The ID of the interconnect.
interconnect_interconnectId :: Lens' Interconnect (Maybe Text)

-- | The bandwidth of the connection.
interconnect_bandwidth :: Lens' Interconnect (Maybe Text)

-- | The Direct Connect endpoint that terminates the physical connection.
interconnect_awsDeviceV2 :: Lens' Interconnect (Maybe Text)

-- | The name of the service provider associated with the interconnect.
interconnect_providerName :: Lens' Interconnect (Maybe Text)

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
interconnect_awsLogicalDeviceId :: Lens' Interconnect (Maybe Text)

-- | Indicates whether the interconnect supports a secondary BGP in the
--   same address family (IPv4/IPv6).
interconnect_hasLogicalRedundancy :: Lens' Interconnect (Maybe HasLogicalRedundancy)

-- | The Direct Connect endpoint on which the physical connection
--   terminates.
interconnect_awsDevice :: Lens' Interconnect (Maybe Text)

-- | Indicates whether jumbo frames (9001 MTU) are supported.
interconnect_jumboFrameCapable :: Lens' Interconnect (Maybe Bool)

-- | The ID of the LAG.
interconnect_lagId :: Lens' Interconnect (Maybe Text)

-- | The tags associated with the interconnect.
interconnect_tags :: Lens' Interconnect (Maybe (NonEmpty Tag))

-- | The time of the most recent call to DescribeLoa for this connection.
interconnect_loaIssueTime :: Lens' Interconnect (Maybe UTCTime)

-- | The Region where the connection is located.
interconnect_region :: Lens' Interconnect (Maybe Text)

-- | The name of the interconnect.
interconnect_interconnectName :: Lens' Interconnect (Maybe Text)

-- | The state of the interconnect. The following are the possible values:
--   
--   <ul>
--   <li><tt>requested</tt>: The initial state of an interconnect. The
--   interconnect stays in the requested state until the Letter of
--   Authorization (LOA) is sent to the customer.</li>
--   <li><tt>pending</tt>: The interconnect is approved, and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is up, and the interconnect
--   is ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The interconnect is being deleted.</li>
--   <li><tt>deleted</tt>: The interconnect is deleted.</li>
--   <li><tt>unknown</tt>: The state of the interconnect is not
--   available.</li>
--   </ul>
interconnect_interconnectState :: Lens' Interconnect (Maybe InterconnectState)

-- | The location of the connection.
interconnect_location :: Lens' Interconnect (Maybe Text)
instance GHC.Generics.Generic Network.AWS.DirectConnect.Types.Interconnect.Interconnect
instance GHC.Show.Show Network.AWS.DirectConnect.Types.Interconnect.Interconnect
instance GHC.Read.Read Network.AWS.DirectConnect.Types.Interconnect.Interconnect
instance GHC.Classes.Eq Network.AWS.DirectConnect.Types.Interconnect.Interconnect
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DirectConnect.Types.Interconnect.Interconnect
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.Types.Interconnect.Interconnect
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.Types.Interconnect.Interconnect


module Network.AWS.DirectConnect.Types.Connection

-- | Information about an Direct Connect connection.
--   
--   <i>See:</i> <a>newConnection</a> smart constructor.
data Connection
Connection' :: Maybe Text -> Maybe Text -> Maybe ConnectionState -> Maybe Text -> Maybe [MacSecKey] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe HasLogicalRedundancy -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (NonEmpty Tag) -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Bool -> Connection

-- | The bandwidth of the connection.
[$sel:bandwidth:Connection'] :: Connection -> Maybe Text

-- | The Direct Connect endpoint that terminates the physical connection.
[$sel:awsDeviceV2:Connection'] :: Connection -> Maybe Text

-- | The state of the connection. The following are the possible values:
--   
--   <ul>
--   <li><tt>ordering</tt>: The initial state of a hosted connection
--   provisioned on an interconnect. The connection stays in the ordering
--   state until the owner of the hosted connection confirms or declines
--   the connection order.</li>
--   <li><tt>requested</tt>: The initial state of a standard connection.
--   The connection stays in the requested state until the Letter of
--   Authorization (LOA) is sent to the customer.</li>
--   <li><tt>pending</tt>: The connection has been approved and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is up and the connection is
--   ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The connection is being deleted.</li>
--   <li><tt>deleted</tt>: The connection has been deleted.</li>
--   <li><tt>rejected</tt>: A hosted connection in the <tt>ordering</tt>
--   state enters the <tt>rejected</tt> state if it is deleted by the
--   customer.</li>
--   <li><tt>unknown</tt>: The state of the connection is not
--   available.</li>
--   </ul>
[$sel:connectionState:Connection'] :: Connection -> Maybe ConnectionState

-- | The name of the connection.
[$sel:connectionName:Connection'] :: Connection -> Maybe Text

-- | The MAC Security (MACsec) security keys associated with the
--   connection.
[$sel:macSecKeys:Connection'] :: Connection -> Maybe [MacSecKey]

-- | The name of the service provider associated with the connection.
[$sel:providerName:Connection'] :: Connection -> Maybe Text

-- | The ID of the connection.
[$sel:connectionId:Connection'] :: Connection -> Maybe Text

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
[$sel:awsLogicalDeviceId:Connection'] :: Connection -> Maybe Text

-- | Indicates whether the connection supports a secondary BGP peer in the
--   same address family (IPv4/IPv6).
[$sel:hasLogicalRedundancy:Connection'] :: Connection -> Maybe HasLogicalRedundancy

-- | The Direct Connect endpoint on which the physical connection
--   terminates.
[$sel:awsDevice:Connection'] :: Connection -> Maybe Text

-- | Indicates whether jumbo frames (9001 MTU) are supported.
[$sel:jumboFrameCapable:Connection'] :: Connection -> Maybe Bool

-- | The MAC Security (MACsec) port link status of the connection.
--   
--   The valid values are <tt>Encryption Up</tt>, which means that there is
--   an active Connection Key Name, or <tt>Encryption Down</tt>.
[$sel:portEncryptionStatus:Connection'] :: Connection -> Maybe Text

-- | The ID of the LAG.
[$sel:lagId:Connection'] :: Connection -> Maybe Text

-- | The MAC Security (MACsec) connection encryption mode.
--   
--   The valid values are <tt>no_encrypt</tt>, <tt>should_encrypt</tt>, and
--   <tt>must_encrypt</tt>.
[$sel:encryptionMode:Connection'] :: Connection -> Maybe Text

-- | The name of the Direct Connect service provider associated with the
--   connection.
[$sel:partnerName:Connection'] :: Connection -> Maybe Text

-- | The tags associated with the connection.
[$sel:tags:Connection'] :: Connection -> Maybe (NonEmpty Tag)

-- | The time of the most recent call to DescribeLoa for this connection.
[$sel:loaIssueTime:Connection'] :: Connection -> Maybe POSIX

-- | The ID of the account that owns the connection.
[$sel:ownerAccount:Connection'] :: Connection -> Maybe Text

-- | The Region where the connection is located.
[$sel:region:Connection'] :: Connection -> Maybe Text

-- | The ID of the VLAN.
[$sel:vlan:Connection'] :: Connection -> Maybe Int

-- | The location of the connection.
[$sel:location:Connection'] :: Connection -> Maybe Text

-- | Indicates whether the connection supports MAC Security (MACsec).
[$sel:macSecCapable:Connection'] :: Connection -> Maybe Bool

-- | Create a value of <a>Connection</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bandwidth:Connection'</a>, <a>connection_bandwidth</a> - The
--   bandwidth of the connection.
--   
--   <a>$sel:awsDeviceV2:Connection'</a>, <a>connection_awsDeviceV2</a> -
--   The Direct Connect endpoint that terminates the physical connection.
--   
--   <a>$sel:connectionState:Connection'</a>,
--   <a>connection_connectionState</a> - The state of the connection. The
--   following are the possible values:
--   
--   <ul>
--   <li><tt>ordering</tt>: The initial state of a hosted connection
--   provisioned on an interconnect. The connection stays in the ordering
--   state until the owner of the hosted connection confirms or declines
--   the connection order.</li>
--   <li><tt>requested</tt>: The initial state of a standard connection.
--   The connection stays in the requested state until the Letter of
--   Authorization (LOA) is sent to the customer.</li>
--   <li><tt>pending</tt>: The connection has been approved and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is up and the connection is
--   ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The connection is being deleted.</li>
--   <li><tt>deleted</tt>: The connection has been deleted.</li>
--   <li><tt>rejected</tt>: A hosted connection in the <tt>ordering</tt>
--   state enters the <tt>rejected</tt> state if it is deleted by the
--   customer.</li>
--   <li><tt>unknown</tt>: The state of the connection is not
--   available.</li>
--   </ul>
--   
--   <a>$sel:connectionName:Connection'</a>,
--   <a>connection_connectionName</a> - The name of the connection.
--   
--   <a>$sel:macSecKeys:Connection'</a>, <a>connection_macSecKeys</a> - The
--   MAC Security (MACsec) security keys associated with the connection.
--   
--   <a>$sel:providerName:Connection'</a>, <a>connection_providerName</a> -
--   The name of the service provider associated with the connection.
--   
--   <a>$sel:connectionId:Connection'</a>, <a>connection_connectionId</a> -
--   The ID of the connection.
--   
--   <a>$sel:awsLogicalDeviceId:Connection'</a>,
--   <a>connection_awsLogicalDeviceId</a> - The Direct Connect endpoint
--   that terminates the logical connection. This device might be different
--   than the device that terminates the physical connection.
--   
--   <a>$sel:hasLogicalRedundancy:Connection'</a>,
--   <a>connection_hasLogicalRedundancy</a> - Indicates whether the
--   connection supports a secondary BGP peer in the same address family
--   (IPv4/IPv6).
--   
--   <a>$sel:awsDevice:Connection'</a>, <a>connection_awsDevice</a> - The
--   Direct Connect endpoint on which the physical connection terminates.
--   
--   <a>$sel:jumboFrameCapable:Connection'</a>,
--   <a>connection_jumboFrameCapable</a> - Indicates whether jumbo frames
--   (9001 MTU) are supported.
--   
--   <a>$sel:portEncryptionStatus:Connection'</a>,
--   <a>connection_portEncryptionStatus</a> - The MAC Security (MACsec)
--   port link status of the connection.
--   
--   The valid values are <tt>Encryption Up</tt>, which means that there is
--   an active Connection Key Name, or <tt>Encryption Down</tt>.
--   
--   <a>$sel:lagId:Connection'</a>, <a>connection_lagId</a> - The ID of the
--   LAG.
--   
--   <a>$sel:encryptionMode:Connection'</a>,
--   <a>connection_encryptionMode</a> - The MAC Security (MACsec)
--   connection encryption mode.
--   
--   The valid values are <tt>no_encrypt</tt>, <tt>should_encrypt</tt>, and
--   <tt>must_encrypt</tt>.
--   
--   <a>$sel:partnerName:Connection'</a>, <a>connection_partnerName</a> -
--   The name of the Direct Connect service provider associated with the
--   connection.
--   
--   <a>$sel:tags:Connection'</a>, <a>connection_tags</a> - The tags
--   associated with the connection.
--   
--   <a>$sel:loaIssueTime:Connection'</a>, <a>connection_loaIssueTime</a> -
--   The time of the most recent call to DescribeLoa for this connection.
--   
--   <a>$sel:ownerAccount:Connection'</a>, <a>connection_ownerAccount</a> -
--   The ID of the account that owns the connection.
--   
--   <a>$sel:region:Connection'</a>, <a>connection_region</a> - The Region
--   where the connection is located.
--   
--   <a>$sel:vlan:Connection'</a>, <a>connection_vlan</a> - The ID of the
--   VLAN.
--   
--   <a>$sel:location:Connection'</a>, <a>connection_location</a> - The
--   location of the connection.
--   
--   <a>$sel:macSecCapable:Connection'</a>, <a>connection_macSecCapable</a>
--   - Indicates whether the connection supports MAC Security (MACsec).
newConnection :: Connection

-- | The bandwidth of the connection.
connection_bandwidth :: Lens' Connection (Maybe Text)

-- | The Direct Connect endpoint that terminates the physical connection.
connection_awsDeviceV2 :: Lens' Connection (Maybe Text)

-- | The state of the connection. The following are the possible values:
--   
--   <ul>
--   <li><tt>ordering</tt>: The initial state of a hosted connection
--   provisioned on an interconnect. The connection stays in the ordering
--   state until the owner of the hosted connection confirms or declines
--   the connection order.</li>
--   <li><tt>requested</tt>: The initial state of a standard connection.
--   The connection stays in the requested state until the Letter of
--   Authorization (LOA) is sent to the customer.</li>
--   <li><tt>pending</tt>: The connection has been approved and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is up and the connection is
--   ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The connection is being deleted.</li>
--   <li><tt>deleted</tt>: The connection has been deleted.</li>
--   <li><tt>rejected</tt>: A hosted connection in the <tt>ordering</tt>
--   state enters the <tt>rejected</tt> state if it is deleted by the
--   customer.</li>
--   <li><tt>unknown</tt>: The state of the connection is not
--   available.</li>
--   </ul>
connection_connectionState :: Lens' Connection (Maybe ConnectionState)

-- | The name of the connection.
connection_connectionName :: Lens' Connection (Maybe Text)

-- | The MAC Security (MACsec) security keys associated with the
--   connection.
connection_macSecKeys :: Lens' Connection (Maybe [MacSecKey])

-- | The name of the service provider associated with the connection.
connection_providerName :: Lens' Connection (Maybe Text)

-- | The ID of the connection.
connection_connectionId :: Lens' Connection (Maybe Text)

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
connection_awsLogicalDeviceId :: Lens' Connection (Maybe Text)

-- | Indicates whether the connection supports a secondary BGP peer in the
--   same address family (IPv4/IPv6).
connection_hasLogicalRedundancy :: Lens' Connection (Maybe HasLogicalRedundancy)

-- | The Direct Connect endpoint on which the physical connection
--   terminates.
connection_awsDevice :: Lens' Connection (Maybe Text)

-- | Indicates whether jumbo frames (9001 MTU) are supported.
connection_jumboFrameCapable :: Lens' Connection (Maybe Bool)

-- | The MAC Security (MACsec) port link status of the connection.
--   
--   The valid values are <tt>Encryption Up</tt>, which means that there is
--   an active Connection Key Name, or <tt>Encryption Down</tt>.
connection_portEncryptionStatus :: Lens' Connection (Maybe Text)

-- | The ID of the LAG.
connection_lagId :: Lens' Connection (Maybe Text)

-- | The MAC Security (MACsec) connection encryption mode.
--   
--   The valid values are <tt>no_encrypt</tt>, <tt>should_encrypt</tt>, and
--   <tt>must_encrypt</tt>.
connection_encryptionMode :: Lens' Connection (Maybe Text)

-- | The name of the Direct Connect service provider associated with the
--   connection.
connection_partnerName :: Lens' Connection (Maybe Text)

-- | The tags associated with the connection.
connection_tags :: Lens' Connection (Maybe (NonEmpty Tag))

-- | The time of the most recent call to DescribeLoa for this connection.
connection_loaIssueTime :: Lens' Connection (Maybe UTCTime)

-- | The ID of the account that owns the connection.
connection_ownerAccount :: Lens' Connection (Maybe Text)

-- | The Region where the connection is located.
connection_region :: Lens' Connection (Maybe Text)

-- | The ID of the VLAN.
connection_vlan :: Lens' Connection (Maybe Int)

-- | The location of the connection.
connection_location :: Lens' Connection (Maybe Text)

-- | Indicates whether the connection supports MAC Security (MACsec).
connection_macSecCapable :: Lens' Connection (Maybe Bool)
instance GHC.Generics.Generic Network.AWS.DirectConnect.Types.Connection.Connection
instance GHC.Show.Show Network.AWS.DirectConnect.Types.Connection.Connection
instance GHC.Read.Read Network.AWS.DirectConnect.Types.Connection.Connection
instance GHC.Classes.Eq Network.AWS.DirectConnect.Types.Connection.Connection
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DirectConnect.Types.Connection.Connection
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.Types.Connection.Connection
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.Types.Connection.Connection


module Network.AWS.DirectConnect.Types.Lag

-- | Information about a link aggregation group (LAG).
--   
--   <i>See:</i> <a>newLag</a> smart constructor.
data Lag
Lag' :: Maybe Int -> Maybe Text -> Maybe Bool -> Maybe [MacSecKey] -> Maybe Text -> Maybe Text -> Maybe HasLogicalRedundancy -> Maybe Text -> Maybe [Connection] -> Maybe Text -> Maybe LagState -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (NonEmpty Tag) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Bool -> Lag

-- | The number of physical dedicated connections bundled by the LAG, up to
--   a maximum of 10.
[$sel:numberOfConnections:Lag'] :: Lag -> Maybe Int

-- | The Direct Connect endpoint that hosts the LAG.
[$sel:awsDeviceV2:Lag'] :: Lag -> Maybe Text

-- | Indicates whether the LAG can host other connections.
[$sel:allowsHostedConnections:Lag'] :: Lag -> Maybe Bool

-- | The MAC Security (MACsec) security keys associated with the LAG.
[$sel:macSecKeys:Lag'] :: Lag -> Maybe [MacSecKey]

-- | The name of the service provider associated with the LAG.
[$sel:providerName:Lag'] :: Lag -> Maybe Text

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
[$sel:awsLogicalDeviceId:Lag'] :: Lag -> Maybe Text

-- | Indicates whether the LAG supports a secondary BGP peer in the same
--   address family (IPv4/IPv6).
[$sel:hasLogicalRedundancy:Lag'] :: Lag -> Maybe HasLogicalRedundancy

-- | The name of the LAG.
[$sel:lagName:Lag'] :: Lag -> Maybe Text

-- | The connections bundled by the LAG.
[$sel:connections:Lag'] :: Lag -> Maybe [Connection]

-- | The Direct Connect endpoint that hosts the LAG.
[$sel:awsDevice:Lag'] :: Lag -> Maybe Text

-- | The state of the LAG. The following are the possible values:
--   
--   <ul>
--   <li><tt>requested</tt>: The initial state of a LAG. The LAG stays in
--   the requested state until the Letter of Authorization (LOA) is
--   available.</li>
--   <li><tt>pending</tt>: The LAG has been approved and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is established and the LAG is
--   ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The LAG is being deleted.</li>
--   <li><tt>deleted</tt>: The LAG is deleted.</li>
--   <li><tt>unknown</tt>: The state of the LAG is not available.</li>
--   </ul>
[$sel:lagState:Lag'] :: Lag -> Maybe LagState

-- | Indicates whether jumbo frames (9001 MTU) are supported.
[$sel:jumboFrameCapable:Lag'] :: Lag -> Maybe Bool

-- | The individual bandwidth of the physical connections bundled by the
--   LAG. The possible values are 1Gbps and 10Gbps.
[$sel:connectionsBandwidth:Lag'] :: Lag -> Maybe Text

-- | The ID of the LAG.
[$sel:lagId:Lag'] :: Lag -> Maybe Text

-- | The LAG MAC Security (MACsec) encryption mode.
--   
--   The valid values are <tt>no_encrypt</tt>, <tt>should_encrypt</tt>, and
--   <tt>must_encrypt</tt>.
[$sel:encryptionMode:Lag'] :: Lag -> Maybe Text

-- | The tags associated with the LAG.
[$sel:tags:Lag'] :: Lag -> Maybe (NonEmpty Tag)

-- | The ID of the account that owns the LAG.
[$sel:ownerAccount:Lag'] :: Lag -> Maybe Text

-- | The Region where the connection is located.
[$sel:region:Lag'] :: Lag -> Maybe Text

-- | The location of the LAG.
[$sel:location:Lag'] :: Lag -> Maybe Text

-- | The minimum number of physical dedicated connections that must be
--   operational for the LAG itself to be operational.
[$sel:minimumLinks:Lag'] :: Lag -> Maybe Int

-- | Indicates whether the LAG supports MAC Security (MACsec).
[$sel:macSecCapable:Lag'] :: Lag -> Maybe Bool

-- | Create a value of <a>Lag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:numberOfConnections:Lag'</a>, <a>lag_numberOfConnections</a> -
--   The number of physical dedicated connections bundled by the LAG, up to
--   a maximum of 10.
--   
--   <a>$sel:awsDeviceV2:Lag'</a>, <a>lag_awsDeviceV2</a> - The Direct
--   Connect endpoint that hosts the LAG.
--   
--   <a>$sel:allowsHostedConnections:Lag'</a>,
--   <a>lag_allowsHostedConnections</a> - Indicates whether the LAG can
--   host other connections.
--   
--   <a>$sel:macSecKeys:Lag'</a>, <a>lag_macSecKeys</a> - The MAC Security
--   (MACsec) security keys associated with the LAG.
--   
--   <a>$sel:providerName:Lag'</a>, <a>lag_providerName</a> - The name of
--   the service provider associated with the LAG.
--   
--   <a>$sel:awsLogicalDeviceId:Lag'</a>, <a>lag_awsLogicalDeviceId</a> -
--   The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
--   
--   <a>$sel:hasLogicalRedundancy:Lag'</a>, <a>lag_hasLogicalRedundancy</a>
--   - Indicates whether the LAG supports a secondary BGP peer in the same
--   address family (IPv4/IPv6).
--   
--   <a>$sel:lagName:Lag'</a>, <a>lag_lagName</a> - The name of the LAG.
--   
--   <a>$sel:connections:Lag'</a>, <a>lag_connections</a> - The connections
--   bundled by the LAG.
--   
--   <a>$sel:awsDevice:Lag'</a>, <a>lag_awsDevice</a> - The Direct Connect
--   endpoint that hosts the LAG.
--   
--   <a>$sel:lagState:Lag'</a>, <a>lag_lagState</a> - The state of the LAG.
--   The following are the possible values:
--   
--   <ul>
--   <li><tt>requested</tt>: The initial state of a LAG. The LAG stays in
--   the requested state until the Letter of Authorization (LOA) is
--   available.</li>
--   <li><tt>pending</tt>: The LAG has been approved and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is established and the LAG is
--   ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The LAG is being deleted.</li>
--   <li><tt>deleted</tt>: The LAG is deleted.</li>
--   <li><tt>unknown</tt>: The state of the LAG is not available.</li>
--   </ul>
--   
--   <a>$sel:jumboFrameCapable:Lag'</a>, <a>lag_jumboFrameCapable</a> -
--   Indicates whether jumbo frames (9001 MTU) are supported.
--   
--   <a>$sel:connectionsBandwidth:Lag'</a>, <a>lag_connectionsBandwidth</a>
--   - The individual bandwidth of the physical connections bundled by the
--   LAG. The possible values are 1Gbps and 10Gbps.
--   
--   <a>$sel:lagId:Lag'</a>, <a>lag_lagId</a> - The ID of the LAG.
--   
--   <a>$sel:encryptionMode:Lag'</a>, <a>lag_encryptionMode</a> - The LAG
--   MAC Security (MACsec) encryption mode.
--   
--   The valid values are <tt>no_encrypt</tt>, <tt>should_encrypt</tt>, and
--   <tt>must_encrypt</tt>.
--   
--   <a>$sel:tags:Lag'</a>, <a>lag_tags</a> - The tags associated with the
--   LAG.
--   
--   <a>$sel:ownerAccount:Lag'</a>, <a>lag_ownerAccount</a> - The ID of the
--   account that owns the LAG.
--   
--   <a>$sel:region:Lag'</a>, <a>lag_region</a> - The Region where the
--   connection is located.
--   
--   <a>$sel:location:Lag'</a>, <a>lag_location</a> - The location of the
--   LAG.
--   
--   <a>$sel:minimumLinks:Lag'</a>, <a>lag_minimumLinks</a> - The minimum
--   number of physical dedicated connections that must be operational for
--   the LAG itself to be operational.
--   
--   <a>$sel:macSecCapable:Lag'</a>, <a>lag_macSecCapable</a> - Indicates
--   whether the LAG supports MAC Security (MACsec).
newLag :: Lag

-- | The number of physical dedicated connections bundled by the LAG, up to
--   a maximum of 10.
lag_numberOfConnections :: Lens' Lag (Maybe Int)

-- | The Direct Connect endpoint that hosts the LAG.
lag_awsDeviceV2 :: Lens' Lag (Maybe Text)

-- | Indicates whether the LAG can host other connections.
lag_allowsHostedConnections :: Lens' Lag (Maybe Bool)

-- | The MAC Security (MACsec) security keys associated with the LAG.
lag_macSecKeys :: Lens' Lag (Maybe [MacSecKey])

-- | The name of the service provider associated with the LAG.
lag_providerName :: Lens' Lag (Maybe Text)

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
lag_awsLogicalDeviceId :: Lens' Lag (Maybe Text)

-- | Indicates whether the LAG supports a secondary BGP peer in the same
--   address family (IPv4/IPv6).
lag_hasLogicalRedundancy :: Lens' Lag (Maybe HasLogicalRedundancy)

-- | The name of the LAG.
lag_lagName :: Lens' Lag (Maybe Text)

-- | The connections bundled by the LAG.
lag_connections :: Lens' Lag (Maybe [Connection])

-- | The Direct Connect endpoint that hosts the LAG.
lag_awsDevice :: Lens' Lag (Maybe Text)

-- | The state of the LAG. The following are the possible values:
--   
--   <ul>
--   <li><tt>requested</tt>: The initial state of a LAG. The LAG stays in
--   the requested state until the Letter of Authorization (LOA) is
--   available.</li>
--   <li><tt>pending</tt>: The LAG has been approved and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is established and the LAG is
--   ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The LAG is being deleted.</li>
--   <li><tt>deleted</tt>: The LAG is deleted.</li>
--   <li><tt>unknown</tt>: The state of the LAG is not available.</li>
--   </ul>
lag_lagState :: Lens' Lag (Maybe LagState)

-- | Indicates whether jumbo frames (9001 MTU) are supported.
lag_jumboFrameCapable :: Lens' Lag (Maybe Bool)

-- | The individual bandwidth of the physical connections bundled by the
--   LAG. The possible values are 1Gbps and 10Gbps.
lag_connectionsBandwidth :: Lens' Lag (Maybe Text)

-- | The ID of the LAG.
lag_lagId :: Lens' Lag (Maybe Text)

-- | The LAG MAC Security (MACsec) encryption mode.
--   
--   The valid values are <tt>no_encrypt</tt>, <tt>should_encrypt</tt>, and
--   <tt>must_encrypt</tt>.
lag_encryptionMode :: Lens' Lag (Maybe Text)

-- | The tags associated with the LAG.
lag_tags :: Lens' Lag (Maybe (NonEmpty Tag))

-- | The ID of the account that owns the LAG.
lag_ownerAccount :: Lens' Lag (Maybe Text)

-- | The Region where the connection is located.
lag_region :: Lens' Lag (Maybe Text)

-- | The location of the LAG.
lag_location :: Lens' Lag (Maybe Text)

-- | The minimum number of physical dedicated connections that must be
--   operational for the LAG itself to be operational.
lag_minimumLinks :: Lens' Lag (Maybe Int)

-- | Indicates whether the LAG supports MAC Security (MACsec).
lag_macSecCapable :: Lens' Lag (Maybe Bool)
instance GHC.Generics.Generic Network.AWS.DirectConnect.Types.Lag.Lag
instance GHC.Show.Show Network.AWS.DirectConnect.Types.Lag.Lag
instance GHC.Read.Read Network.AWS.DirectConnect.Types.Lag.Lag
instance GHC.Classes.Eq Network.AWS.DirectConnect.Types.Lag.Lag
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DirectConnect.Types.Lag.Lag
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.Types.Lag.Lag
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.Types.Lag.Lag


module Network.AWS.DirectConnect.Types.Connections

-- | <i>See:</i> <a>newConnections</a> smart constructor.
data Connections
Connections' :: Maybe [Connection] -> Connections

-- | The connections.
[$sel:connections:Connections'] :: Connections -> Maybe [Connection]

-- | Create a value of <a>Connections</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connections:Connections'</a>, <a>connections_connections</a> -
--   The connections.
newConnections :: Connections

-- | The connections.
connections_connections :: Lens' Connections (Maybe [Connection])
instance GHC.Generics.Generic Network.AWS.DirectConnect.Types.Connections.Connections
instance GHC.Show.Show Network.AWS.DirectConnect.Types.Connections.Connections
instance GHC.Read.Read Network.AWS.DirectConnect.Types.Connections.Connections
instance GHC.Classes.Eq Network.AWS.DirectConnect.Types.Connections.Connections
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DirectConnect.Types.Connections.Connections
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.Types.Connections.Connections
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.Types.Connections.Connections


module Network.AWS.DirectConnect.Types.VirtualGateway

-- | Information about a virtual private gateway for a private virtual
--   interface.
--   
--   <i>See:</i> <a>newVirtualGateway</a> smart constructor.
data VirtualGateway
VirtualGateway' :: Maybe Text -> Maybe Text -> VirtualGateway

-- | The ID of the virtual private gateway.
[$sel:virtualGatewayId:VirtualGateway'] :: VirtualGateway -> Maybe Text

-- | The state of the virtual private gateway. The following are the
--   possible values:
--   
--   <ul>
--   <li><tt>pending</tt>: Initial state after creating the virtual private
--   gateway.</li>
--   <li><tt>available</tt>: Ready for use by a private virtual
--   interface.</li>
--   <li><tt>deleting</tt>: Initial state after deleting the virtual
--   private gateway.</li>
--   <li><tt>deleted</tt>: The virtual private gateway is deleted. The
--   private virtual interface is unable to send traffic over this
--   gateway.</li>
--   </ul>
[$sel:virtualGatewayState:VirtualGateway'] :: VirtualGateway -> Maybe Text

-- | Create a value of <a>VirtualGateway</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:virtualGatewayId:VirtualGateway'</a>,
--   <a>virtualGateway_virtualGatewayId</a> - The ID of the virtual private
--   gateway.
--   
--   <a>$sel:virtualGatewayState:VirtualGateway'</a>,
--   <a>virtualGateway_virtualGatewayState</a> - The state of the virtual
--   private gateway. The following are the possible values:
--   
--   <ul>
--   <li><tt>pending</tt>: Initial state after creating the virtual private
--   gateway.</li>
--   <li><tt>available</tt>: Ready for use by a private virtual
--   interface.</li>
--   <li><tt>deleting</tt>: Initial state after deleting the virtual
--   private gateway.</li>
--   <li><tt>deleted</tt>: The virtual private gateway is deleted. The
--   private virtual interface is unable to send traffic over this
--   gateway.</li>
--   </ul>
newVirtualGateway :: VirtualGateway

-- | The ID of the virtual private gateway.
virtualGateway_virtualGatewayId :: Lens' VirtualGateway (Maybe Text)

-- | The state of the virtual private gateway. The following are the
--   possible values:
--   
--   <ul>
--   <li><tt>pending</tt>: Initial state after creating the virtual private
--   gateway.</li>
--   <li><tt>available</tt>: Ready for use by a private virtual
--   interface.</li>
--   <li><tt>deleting</tt>: Initial state after deleting the virtual
--   private gateway.</li>
--   <li><tt>deleted</tt>: The virtual private gateway is deleted. The
--   private virtual interface is unable to send traffic over this
--   gateway.</li>
--   </ul>
virtualGateway_virtualGatewayState :: Lens' VirtualGateway (Maybe Text)
instance GHC.Generics.Generic Network.AWS.DirectConnect.Types.VirtualGateway.VirtualGateway
instance GHC.Show.Show Network.AWS.DirectConnect.Types.VirtualGateway.VirtualGateway
instance GHC.Read.Read Network.AWS.DirectConnect.Types.VirtualGateway.VirtualGateway
instance GHC.Classes.Eq Network.AWS.DirectConnect.Types.VirtualGateway.VirtualGateway
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DirectConnect.Types.VirtualGateway.VirtualGateway
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.Types.VirtualGateway.VirtualGateway
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.Types.VirtualGateway.VirtualGateway


module Network.AWS.DirectConnect.Types.VirtualInterfaceState
newtype VirtualInterfaceState
VirtualInterfaceState' :: Text -> VirtualInterfaceState
[fromVirtualInterfaceState] :: VirtualInterfaceState -> Text
pattern VirtualInterfaceState_Available :: VirtualInterfaceState
pattern VirtualInterfaceState_Confirming :: VirtualInterfaceState
pattern VirtualInterfaceState_Deleted :: VirtualInterfaceState
pattern VirtualInterfaceState_Deleting :: VirtualInterfaceState
pattern VirtualInterfaceState_Down :: VirtualInterfaceState
pattern VirtualInterfaceState_Pending :: VirtualInterfaceState
pattern VirtualInterfaceState_Rejected :: VirtualInterfaceState
pattern VirtualInterfaceState_Unknown :: VirtualInterfaceState
pattern VirtualInterfaceState_Verifying :: VirtualInterfaceState
instance Network.AWS.Data.XML.ToXML Network.AWS.DirectConnect.Types.VirtualInterfaceState.VirtualInterfaceState
instance Network.AWS.Data.XML.FromXML Network.AWS.DirectConnect.Types.VirtualInterfaceState.VirtualInterfaceState
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.DirectConnect.Types.VirtualInterfaceState.VirtualInterfaceState
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.Types.VirtualInterfaceState.VirtualInterfaceState
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.DirectConnect.Types.VirtualInterfaceState.VirtualInterfaceState
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DirectConnect.Types.VirtualInterfaceState.VirtualInterfaceState
instance Network.AWS.Data.Query.ToQuery Network.AWS.DirectConnect.Types.VirtualInterfaceState.VirtualInterfaceState
instance Network.AWS.Data.Headers.ToHeader Network.AWS.DirectConnect.Types.VirtualInterfaceState.VirtualInterfaceState
instance Network.AWS.Data.Log.ToLog Network.AWS.DirectConnect.Types.VirtualInterfaceState.VirtualInterfaceState
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.DirectConnect.Types.VirtualInterfaceState.VirtualInterfaceState
instance Network.AWS.Data.Text.ToText Network.AWS.DirectConnect.Types.VirtualInterfaceState.VirtualInterfaceState
instance Network.AWS.Data.Text.FromText Network.AWS.DirectConnect.Types.VirtualInterfaceState.VirtualInterfaceState
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.Types.VirtualInterfaceState.VirtualInterfaceState
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.Types.VirtualInterfaceState.VirtualInterfaceState
instance GHC.Generics.Generic Network.AWS.DirectConnect.Types.VirtualInterfaceState.VirtualInterfaceState
instance GHC.Classes.Ord Network.AWS.DirectConnect.Types.VirtualInterfaceState.VirtualInterfaceState
instance GHC.Classes.Eq Network.AWS.DirectConnect.Types.VirtualInterfaceState.VirtualInterfaceState
instance GHC.Read.Read Network.AWS.DirectConnect.Types.VirtualInterfaceState.VirtualInterfaceState
instance GHC.Show.Show Network.AWS.DirectConnect.Types.VirtualInterfaceState.VirtualInterfaceState


module Network.AWS.DirectConnect.Types.VirtualInterface

-- | Information about a virtual interface.
--   
--   <i>See:</i> <a>newVirtualInterface</a> smart constructor.
data VirtualInterface
VirtualInterface' :: Maybe Text -> Maybe [BGPPeer] -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe [RouteFilterPrefix] -> Maybe Int -> Maybe Text -> Maybe Integer -> Maybe Text -> Maybe (NonEmpty Tag) -> Maybe Text -> Maybe Text -> Maybe VirtualInterfaceState -> Maybe Text -> Maybe AddressFamily -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> VirtualInterface

-- | The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
[$sel:authKey:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The BGP peers configured on this virtual interface.
[$sel:bgpPeers:VirtualInterface'] :: VirtualInterface -> Maybe [BGPPeer]

-- | The ID of the virtual private gateway. Applies only to private virtual
--   interfaces.
[$sel:virtualGatewayId:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
--   
--   The valid values are 1-2147483647.
[$sel:asn:VirtualInterface'] :: VirtualInterface -> Maybe Int

-- | The Direct Connect endpoint that terminates the physical connection.
[$sel:awsDeviceV2:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The ID of the connection.
[$sel:connectionId:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
[$sel:awsLogicalDeviceId:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The customer router configuration.
[$sel:customerRouterConfig:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | Indicates whether jumbo frames (9001 MTU) are supported.
[$sel:jumboFrameCapable:VirtualInterface'] :: VirtualInterface -> Maybe Bool

-- | The routes to be advertised to the Amazon Web Services network in this
--   Region. Applies to public virtual interfaces.
[$sel:routeFilterPrefixes:VirtualInterface'] :: VirtualInterface -> Maybe [RouteFilterPrefix]

-- | The maximum transmission unit (MTU), in bytes. The supported values
--   are 1500 and 9001. The default value is 1500.
[$sel:mtu:VirtualInterface'] :: VirtualInterface -> Maybe Int

-- | The type of virtual interface. The possible values are
--   <tt>private</tt> and <tt>public</tt>.
[$sel:virtualInterfaceType:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The autonomous system number (ASN) for the Amazon side of the
--   connection.
[$sel:amazonSideAsn:VirtualInterface'] :: VirtualInterface -> Maybe Integer

-- | The ID of the virtual interface.
[$sel:virtualInterfaceId:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The tags associated with the virtual interface.
[$sel:tags:VirtualInterface'] :: VirtualInterface -> Maybe (NonEmpty Tag)

-- | The ID of the Direct Connect gateway.
[$sel:directConnectGatewayId:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The name of the virtual interface assigned by the customer network.
--   The name has a maximum of 100 characters. The following are valid
--   characters: a-z, 0-9 and a hyphen (-).
[$sel:virtualInterfaceName:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The state of the virtual interface. The following are the possible
--   values:
--   
--   <ul>
--   <li><tt>confirming</tt>: The creation of the virtual interface is
--   pending confirmation from the virtual interface owner. If the owner of
--   the virtual interface is different from the owner of the connection on
--   which it is provisioned, then the virtual interface will remain in
--   this state until it is confirmed by the virtual interface owner.</li>
--   <li><tt>verifying</tt>: This state only applies to public virtual
--   interfaces. Each public virtual interface needs validation before the
--   virtual interface can be created.</li>
--   <li><tt>pending</tt>: A virtual interface is in this state from the
--   time that it is created until the virtual interface is ready to
--   forward traffic.</li>
--   <li><tt>available</tt>: A virtual interface that is able to forward
--   traffic.</li>
--   <li><tt>down</tt>: A virtual interface that is BGP down.</li>
--   <li><tt>deleting</tt>: A virtual interface is in this state
--   immediately after calling DeleteVirtualInterface until it can no
--   longer forward traffic.</li>
--   <li><tt>deleted</tt>: A virtual interface that cannot forward
--   traffic.</li>
--   <li><tt>rejected</tt>: The virtual interface owner has declined
--   creation of the virtual interface. If a virtual interface in the
--   <tt>Confirming</tt> state is deleted by the virtual interface owner,
--   the virtual interface enters the <tt>Rejected</tt> state.</li>
--   <li><tt>unknown</tt>: The state of the virtual interface is not
--   available.</li>
--   </ul>
[$sel:virtualInterfaceState:VirtualInterface'] :: VirtualInterface -> Maybe VirtualInterfaceState

-- | The IP address assigned to the Amazon interface.
[$sel:amazonAddress:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The address family for the BGP peer.
[$sel:addressFamily:VirtualInterface'] :: VirtualInterface -> Maybe AddressFamily

-- | The ID of the account that owns the virtual interface.
[$sel:ownerAccount:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The Region where the virtual interface is located.
[$sel:region:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The ID of the VLAN.
[$sel:vlan:VirtualInterface'] :: VirtualInterface -> Maybe Int

-- | The location of the connection.
[$sel:location:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The IP address assigned to the customer interface.
[$sel:customerAddress:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | Create a value of <a>VirtualInterface</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authKey:VirtualInterface'</a>, <a>virtualInterface_authKey</a>
--   - The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
--   
--   <a>$sel:bgpPeers:VirtualInterface'</a>,
--   <a>virtualInterface_bgpPeers</a> - The BGP peers configured on this
--   virtual interface.
--   
--   <a>$sel:virtualGatewayId:VirtualInterface'</a>,
--   <a>virtualInterface_virtualGatewayId</a> - The ID of the virtual
--   private gateway. Applies only to private virtual interfaces.
--   
--   <a>$sel:asn:VirtualInterface'</a>, <a>virtualInterface_asn</a> - The
--   autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
--   
--   The valid values are 1-2147483647.
--   
--   <a>$sel:awsDeviceV2:VirtualInterface'</a>,
--   <a>virtualInterface_awsDeviceV2</a> - The Direct Connect endpoint that
--   terminates the physical connection.
--   
--   <a>$sel:connectionId:VirtualInterface'</a>,
--   <a>virtualInterface_connectionId</a> - The ID of the connection.
--   
--   <a>$sel:awsLogicalDeviceId:VirtualInterface'</a>,
--   <a>virtualInterface_awsLogicalDeviceId</a> - The Direct Connect
--   endpoint that terminates the logical connection. This device might be
--   different than the device that terminates the physical connection.
--   
--   <a>$sel:customerRouterConfig:VirtualInterface'</a>,
--   <a>virtualInterface_customerRouterConfig</a> - The customer router
--   configuration.
--   
--   <a>$sel:jumboFrameCapable:VirtualInterface'</a>,
--   <a>virtualInterface_jumboFrameCapable</a> - Indicates whether jumbo
--   frames (9001 MTU) are supported.
--   
--   <a>$sel:routeFilterPrefixes:VirtualInterface'</a>,
--   <a>virtualInterface_routeFilterPrefixes</a> - The routes to be
--   advertised to the Amazon Web Services network in this Region. Applies
--   to public virtual interfaces.
--   
--   <a>$sel:mtu:VirtualInterface'</a>, <a>virtualInterface_mtu</a> - The
--   maximum transmission unit (MTU), in bytes. The supported values are
--   1500 and 9001. The default value is 1500.
--   
--   <a>$sel:virtualInterfaceType:VirtualInterface'</a>,
--   <a>virtualInterface_virtualInterfaceType</a> - The type of virtual
--   interface. The possible values are <tt>private</tt> and
--   <tt>public</tt>.
--   
--   <a>$sel:amazonSideAsn:VirtualInterface'</a>,
--   <a>virtualInterface_amazonSideAsn</a> - The autonomous system number
--   (ASN) for the Amazon side of the connection.
--   
--   <a>$sel:virtualInterfaceId:VirtualInterface'</a>,
--   <a>virtualInterface_virtualInterfaceId</a> - The ID of the virtual
--   interface.
--   
--   <a>$sel:tags:VirtualInterface'</a>, <a>virtualInterface_tags</a> - The
--   tags associated with the virtual interface.
--   
--   <a>$sel:directConnectGatewayId:VirtualInterface'</a>,
--   <a>virtualInterface_directConnectGatewayId</a> - The ID of the Direct
--   Connect gateway.
--   
--   <a>$sel:virtualInterfaceName:VirtualInterface'</a>,
--   <a>virtualInterface_virtualInterfaceName</a> - The name of the virtual
--   interface assigned by the customer network. The name has a maximum of
--   100 characters. The following are valid characters: a-z, 0-9 and a
--   hyphen (-).
--   
--   <a>$sel:virtualInterfaceState:VirtualInterface'</a>,
--   <a>virtualInterface_virtualInterfaceState</a> - The state of the
--   virtual interface. The following are the possible values:
--   
--   <ul>
--   <li><tt>confirming</tt>: The creation of the virtual interface is
--   pending confirmation from the virtual interface owner. If the owner of
--   the virtual interface is different from the owner of the connection on
--   which it is provisioned, then the virtual interface will remain in
--   this state until it is confirmed by the virtual interface owner.</li>
--   <li><tt>verifying</tt>: This state only applies to public virtual
--   interfaces. Each public virtual interface needs validation before the
--   virtual interface can be created.</li>
--   <li><tt>pending</tt>: A virtual interface is in this state from the
--   time that it is created until the virtual interface is ready to
--   forward traffic.</li>
--   <li><tt>available</tt>: A virtual interface that is able to forward
--   traffic.</li>
--   <li><tt>down</tt>: A virtual interface that is BGP down.</li>
--   <li><tt>deleting</tt>: A virtual interface is in this state
--   immediately after calling DeleteVirtualInterface until it can no
--   longer forward traffic.</li>
--   <li><tt>deleted</tt>: A virtual interface that cannot forward
--   traffic.</li>
--   <li><tt>rejected</tt>: The virtual interface owner has declined
--   creation of the virtual interface. If a virtual interface in the
--   <tt>Confirming</tt> state is deleted by the virtual interface owner,
--   the virtual interface enters the <tt>Rejected</tt> state.</li>
--   <li><tt>unknown</tt>: The state of the virtual interface is not
--   available.</li>
--   </ul>
--   
--   <a>$sel:amazonAddress:VirtualInterface'</a>,
--   <a>virtualInterface_amazonAddress</a> - The IP address assigned to the
--   Amazon interface.
--   
--   <a>$sel:addressFamily:VirtualInterface'</a>,
--   <a>virtualInterface_addressFamily</a> - The address family for the BGP
--   peer.
--   
--   <a>$sel:ownerAccount:VirtualInterface'</a>,
--   <a>virtualInterface_ownerAccount</a> - The ID of the account that owns
--   the virtual interface.
--   
--   <a>$sel:region:VirtualInterface'</a>, <a>virtualInterface_region</a> -
--   The Region where the virtual interface is located.
--   
--   <a>$sel:vlan:VirtualInterface'</a>, <a>virtualInterface_vlan</a> - The
--   ID of the VLAN.
--   
--   <a>$sel:location:VirtualInterface'</a>,
--   <a>virtualInterface_location</a> - The location of the connection.
--   
--   <a>$sel:customerAddress:VirtualInterface'</a>,
--   <a>virtualInterface_customerAddress</a> - The IP address assigned to
--   the customer interface.
newVirtualInterface :: VirtualInterface

-- | The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
virtualInterface_authKey :: Lens' VirtualInterface (Maybe Text)

-- | The BGP peers configured on this virtual interface.
virtualInterface_bgpPeers :: Lens' VirtualInterface (Maybe [BGPPeer])

-- | The ID of the virtual private gateway. Applies only to private virtual
--   interfaces.
virtualInterface_virtualGatewayId :: Lens' VirtualInterface (Maybe Text)

-- | The autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
--   
--   The valid values are 1-2147483647.
virtualInterface_asn :: Lens' VirtualInterface (Maybe Int)

-- | The Direct Connect endpoint that terminates the physical connection.
virtualInterface_awsDeviceV2 :: Lens' VirtualInterface (Maybe Text)

-- | The ID of the connection.
virtualInterface_connectionId :: Lens' VirtualInterface (Maybe Text)

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
virtualInterface_awsLogicalDeviceId :: Lens' VirtualInterface (Maybe Text)

-- | The customer router configuration.
virtualInterface_customerRouterConfig :: Lens' VirtualInterface (Maybe Text)

-- | Indicates whether jumbo frames (9001 MTU) are supported.
virtualInterface_jumboFrameCapable :: Lens' VirtualInterface (Maybe Bool)

-- | The routes to be advertised to the Amazon Web Services network in this
--   Region. Applies to public virtual interfaces.
virtualInterface_routeFilterPrefixes :: Lens' VirtualInterface (Maybe [RouteFilterPrefix])

-- | The maximum transmission unit (MTU), in bytes. The supported values
--   are 1500 and 9001. The default value is 1500.
virtualInterface_mtu :: Lens' VirtualInterface (Maybe Int)

-- | The type of virtual interface. The possible values are
--   <tt>private</tt> and <tt>public</tt>.
virtualInterface_virtualInterfaceType :: Lens' VirtualInterface (Maybe Text)

-- | The autonomous system number (ASN) for the Amazon side of the
--   connection.
virtualInterface_amazonSideAsn :: Lens' VirtualInterface (Maybe Integer)

-- | The ID of the virtual interface.
virtualInterface_virtualInterfaceId :: Lens' VirtualInterface (Maybe Text)

-- | The tags associated with the virtual interface.
virtualInterface_tags :: Lens' VirtualInterface (Maybe (NonEmpty Tag))

-- | The ID of the Direct Connect gateway.
virtualInterface_directConnectGatewayId :: Lens' VirtualInterface (Maybe Text)

-- | The name of the virtual interface assigned by the customer network.
--   The name has a maximum of 100 characters. The following are valid
--   characters: a-z, 0-9 and a hyphen (-).
virtualInterface_virtualInterfaceName :: Lens' VirtualInterface (Maybe Text)

-- | The state of the virtual interface. The following are the possible
--   values:
--   
--   <ul>
--   <li><tt>confirming</tt>: The creation of the virtual interface is
--   pending confirmation from the virtual interface owner. If the owner of
--   the virtual interface is different from the owner of the connection on
--   which it is provisioned, then the virtual interface will remain in
--   this state until it is confirmed by the virtual interface owner.</li>
--   <li><tt>verifying</tt>: This state only applies to public virtual
--   interfaces. Each public virtual interface needs validation before the
--   virtual interface can be created.</li>
--   <li><tt>pending</tt>: A virtual interface is in this state from the
--   time that it is created until the virtual interface is ready to
--   forward traffic.</li>
--   <li><tt>available</tt>: A virtual interface that is able to forward
--   traffic.</li>
--   <li><tt>down</tt>: A virtual interface that is BGP down.</li>
--   <li><tt>deleting</tt>: A virtual interface is in this state
--   immediately after calling DeleteVirtualInterface until it can no
--   longer forward traffic.</li>
--   <li><tt>deleted</tt>: A virtual interface that cannot forward
--   traffic.</li>
--   <li><tt>rejected</tt>: The virtual interface owner has declined
--   creation of the virtual interface. If a virtual interface in the
--   <tt>Confirming</tt> state is deleted by the virtual interface owner,
--   the virtual interface enters the <tt>Rejected</tt> state.</li>
--   <li><tt>unknown</tt>: The state of the virtual interface is not
--   available.</li>
--   </ul>
virtualInterface_virtualInterfaceState :: Lens' VirtualInterface (Maybe VirtualInterfaceState)

-- | The IP address assigned to the Amazon interface.
virtualInterface_amazonAddress :: Lens' VirtualInterface (Maybe Text)

-- | The address family for the BGP peer.
virtualInterface_addressFamily :: Lens' VirtualInterface (Maybe AddressFamily)

-- | The ID of the account that owns the virtual interface.
virtualInterface_ownerAccount :: Lens' VirtualInterface (Maybe Text)

-- | The Region where the virtual interface is located.
virtualInterface_region :: Lens' VirtualInterface (Maybe Text)

-- | The ID of the VLAN.
virtualInterface_vlan :: Lens' VirtualInterface (Maybe Int)

-- | The location of the connection.
virtualInterface_location :: Lens' VirtualInterface (Maybe Text)

-- | The IP address assigned to the customer interface.
virtualInterface_customerAddress :: Lens' VirtualInterface (Maybe Text)
instance GHC.Generics.Generic Network.AWS.DirectConnect.Types.VirtualInterface.VirtualInterface
instance GHC.Show.Show Network.AWS.DirectConnect.Types.VirtualInterface.VirtualInterface
instance GHC.Read.Read Network.AWS.DirectConnect.Types.VirtualInterface.VirtualInterface
instance GHC.Classes.Eq Network.AWS.DirectConnect.Types.VirtualInterface.VirtualInterface
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DirectConnect.Types.VirtualInterface.VirtualInterface
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.Types.VirtualInterface.VirtualInterface
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.Types.VirtualInterface.VirtualInterface


module Network.AWS.DirectConnect.Types.VirtualInterfaceTestHistory

-- | Information about the virtual interface failover test.
--   
--   <i>See:</i> <a>newVirtualInterfaceTestHistory</a> smart constructor.
data VirtualInterfaceTestHistory
VirtualInterfaceTestHistory' :: Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Int -> VirtualInterfaceTestHistory

-- | The BGP peers that were put in the DOWN state as part of the virtual
--   interface failover test.
[$sel:bgpPeers:VirtualInterfaceTestHistory'] :: VirtualInterfaceTestHistory -> Maybe [Text]

-- | The status of the virtual interface failover test.
[$sel:status:VirtualInterfaceTestHistory'] :: VirtualInterfaceTestHistory -> Maybe Text

-- | The ID of the virtual interface failover test.
[$sel:testId:VirtualInterfaceTestHistory'] :: VirtualInterfaceTestHistory -> Maybe Text

-- | The time that the virtual interface moves to the DOWN state.
[$sel:startTime:VirtualInterfaceTestHistory'] :: VirtualInterfaceTestHistory -> Maybe POSIX

-- | The time that the virtual interface moves out of the DOWN state.
[$sel:endTime:VirtualInterfaceTestHistory'] :: VirtualInterfaceTestHistory -> Maybe POSIX

-- | The ID of the tested virtual interface.
[$sel:virtualInterfaceId:VirtualInterfaceTestHistory'] :: VirtualInterfaceTestHistory -> Maybe Text

-- | The owner ID of the tested virtual interface.
[$sel:ownerAccount:VirtualInterfaceTestHistory'] :: VirtualInterfaceTestHistory -> Maybe Text

-- | The time that the virtual interface failover test ran in minutes.
[$sel:testDurationInMinutes:VirtualInterfaceTestHistory'] :: VirtualInterfaceTestHistory -> Maybe Int

-- | Create a value of <a>VirtualInterfaceTestHistory</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bgpPeers:VirtualInterfaceTestHistory'</a>,
--   <a>virtualInterfaceTestHistory_bgpPeers</a> - The BGP peers that were
--   put in the DOWN state as part of the virtual interface failover test.
--   
--   <a>$sel:status:VirtualInterfaceTestHistory'</a>,
--   <a>virtualInterfaceTestHistory_status</a> - The status of the virtual
--   interface failover test.
--   
--   <a>$sel:testId:VirtualInterfaceTestHistory'</a>,
--   <a>virtualInterfaceTestHistory_testId</a> - The ID of the virtual
--   interface failover test.
--   
--   <a>$sel:startTime:VirtualInterfaceTestHistory'</a>,
--   <a>virtualInterfaceTestHistory_startTime</a> - The time that the
--   virtual interface moves to the DOWN state.
--   
--   <a>$sel:endTime:VirtualInterfaceTestHistory'</a>,
--   <a>virtualInterfaceTestHistory_endTime</a> - The time that the virtual
--   interface moves out of the DOWN state.
--   
--   <a>$sel:virtualInterfaceId:VirtualInterfaceTestHistory'</a>,
--   <a>virtualInterfaceTestHistory_virtualInterfaceId</a> - The ID of the
--   tested virtual interface.
--   
--   <a>$sel:ownerAccount:VirtualInterfaceTestHistory'</a>,
--   <a>virtualInterfaceTestHistory_ownerAccount</a> - The owner ID of the
--   tested virtual interface.
--   
--   <a>$sel:testDurationInMinutes:VirtualInterfaceTestHistory'</a>,
--   <a>virtualInterfaceTestHistory_testDurationInMinutes</a> - The time
--   that the virtual interface failover test ran in minutes.
newVirtualInterfaceTestHistory :: VirtualInterfaceTestHistory

-- | The BGP peers that were put in the DOWN state as part of the virtual
--   interface failover test.
virtualInterfaceTestHistory_bgpPeers :: Lens' VirtualInterfaceTestHistory (Maybe [Text])

-- | The status of the virtual interface failover test.
virtualInterfaceTestHistory_status :: Lens' VirtualInterfaceTestHistory (Maybe Text)

-- | The ID of the virtual interface failover test.
virtualInterfaceTestHistory_testId :: Lens' VirtualInterfaceTestHistory (Maybe Text)

-- | The time that the virtual interface moves to the DOWN state.
virtualInterfaceTestHistory_startTime :: Lens' VirtualInterfaceTestHistory (Maybe UTCTime)

-- | The time that the virtual interface moves out of the DOWN state.
virtualInterfaceTestHistory_endTime :: Lens' VirtualInterfaceTestHistory (Maybe UTCTime)

-- | The ID of the tested virtual interface.
virtualInterfaceTestHistory_virtualInterfaceId :: Lens' VirtualInterfaceTestHistory (Maybe Text)

-- | The owner ID of the tested virtual interface.
virtualInterfaceTestHistory_ownerAccount :: Lens' VirtualInterfaceTestHistory (Maybe Text)

-- | The time that the virtual interface failover test ran in minutes.
virtualInterfaceTestHistory_testDurationInMinutes :: Lens' VirtualInterfaceTestHistory (Maybe Int)
instance GHC.Generics.Generic Network.AWS.DirectConnect.Types.VirtualInterfaceTestHistory.VirtualInterfaceTestHistory
instance GHC.Show.Show Network.AWS.DirectConnect.Types.VirtualInterfaceTestHistory.VirtualInterfaceTestHistory
instance GHC.Read.Read Network.AWS.DirectConnect.Types.VirtualInterfaceTestHistory.VirtualInterfaceTestHistory
instance GHC.Classes.Eq Network.AWS.DirectConnect.Types.VirtualInterfaceTestHistory.VirtualInterfaceTestHistory
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DirectConnect.Types.VirtualInterfaceTestHistory.VirtualInterfaceTestHistory
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.Types.VirtualInterfaceTestHistory.VirtualInterfaceTestHistory
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.Types.VirtualInterfaceTestHistory.VirtualInterfaceTestHistory


module Network.AWS.DirectConnect.Types

-- | API version <tt>2012-10-25</tt> of the Amazon Direct Connect SDK
--   configuration.
defaultService :: Service

-- | A server-side error occurred.
_DirectConnectServerException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have reached the limit on the number of tags that can be assigned.
_TooManyTagsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A tag key was specified more than once.
_DuplicateTagKeysException :: AsError a => Getting (First ServiceError) a ServiceError

-- | One or more parameters are not valid.
_DirectConnectClientException :: AsError a => Getting (First ServiceError) a ServiceError
newtype AddressFamily
AddressFamily' :: Text -> AddressFamily
[fromAddressFamily] :: AddressFamily -> Text
pattern AddressFamily_Ipv4 :: AddressFamily
pattern AddressFamily_Ipv6 :: AddressFamily
newtype BGPPeerState
BGPPeerState' :: Text -> BGPPeerState
[fromBGPPeerState] :: BGPPeerState -> Text
pattern BGPPeerState_Available :: BGPPeerState
pattern BGPPeerState_Deleted :: BGPPeerState
pattern BGPPeerState_Deleting :: BGPPeerState
pattern BGPPeerState_Pending :: BGPPeerState
pattern BGPPeerState_Verifying :: BGPPeerState
newtype BGPStatus
BGPStatus' :: Text -> BGPStatus
[fromBGPStatus] :: BGPStatus -> Text
pattern BGPStatus_Down :: BGPStatus
pattern BGPStatus_Unknown :: BGPStatus
pattern BGPStatus_Up :: BGPStatus
newtype ConnectionState
ConnectionState' :: Text -> ConnectionState
[fromConnectionState] :: ConnectionState -> Text
pattern ConnectionState_Available :: ConnectionState
pattern ConnectionState_Deleted :: ConnectionState
pattern ConnectionState_Deleting :: ConnectionState
pattern ConnectionState_Down :: ConnectionState
pattern ConnectionState_Ordering :: ConnectionState
pattern ConnectionState_Pending :: ConnectionState
pattern ConnectionState_Rejected :: ConnectionState
pattern ConnectionState_Requested :: ConnectionState
pattern ConnectionState_Unknown :: ConnectionState
newtype DirectConnectGatewayAssociationProposalState
DirectConnectGatewayAssociationProposalState' :: Text -> DirectConnectGatewayAssociationProposalState
[fromDirectConnectGatewayAssociationProposalState] :: DirectConnectGatewayAssociationProposalState -> Text
pattern DirectConnectGatewayAssociationProposalState_Accepted :: DirectConnectGatewayAssociationProposalState
pattern DirectConnectGatewayAssociationProposalState_Deleted :: DirectConnectGatewayAssociationProposalState
pattern DirectConnectGatewayAssociationProposalState_Requested :: DirectConnectGatewayAssociationProposalState
newtype DirectConnectGatewayAssociationState
DirectConnectGatewayAssociationState' :: Text -> DirectConnectGatewayAssociationState
[fromDirectConnectGatewayAssociationState] :: DirectConnectGatewayAssociationState -> Text
pattern DirectConnectGatewayAssociationState_Associated :: DirectConnectGatewayAssociationState
pattern DirectConnectGatewayAssociationState_Associating :: DirectConnectGatewayAssociationState
pattern DirectConnectGatewayAssociationState_Disassociated :: DirectConnectGatewayAssociationState
pattern DirectConnectGatewayAssociationState_Disassociating :: DirectConnectGatewayAssociationState
pattern DirectConnectGatewayAssociationState_Updating :: DirectConnectGatewayAssociationState
newtype DirectConnectGatewayAttachmentState
DirectConnectGatewayAttachmentState' :: Text -> DirectConnectGatewayAttachmentState
[fromDirectConnectGatewayAttachmentState] :: DirectConnectGatewayAttachmentState -> Text
pattern DirectConnectGatewayAttachmentState_Attached :: DirectConnectGatewayAttachmentState
pattern DirectConnectGatewayAttachmentState_Attaching :: DirectConnectGatewayAttachmentState
pattern DirectConnectGatewayAttachmentState_Detached :: DirectConnectGatewayAttachmentState
pattern DirectConnectGatewayAttachmentState_Detaching :: DirectConnectGatewayAttachmentState
newtype DirectConnectGatewayAttachmentType
DirectConnectGatewayAttachmentType' :: Text -> DirectConnectGatewayAttachmentType
[fromDirectConnectGatewayAttachmentType] :: DirectConnectGatewayAttachmentType -> Text
pattern DirectConnectGatewayAttachmentType_PrivateVirtualInterface :: DirectConnectGatewayAttachmentType
pattern DirectConnectGatewayAttachmentType_TransitVirtualInterface :: DirectConnectGatewayAttachmentType
newtype DirectConnectGatewayState
DirectConnectGatewayState' :: Text -> DirectConnectGatewayState
[fromDirectConnectGatewayState] :: DirectConnectGatewayState -> Text
pattern DirectConnectGatewayState_Available :: DirectConnectGatewayState
pattern DirectConnectGatewayState_Deleted :: DirectConnectGatewayState
pattern DirectConnectGatewayState_Deleting :: DirectConnectGatewayState
pattern DirectConnectGatewayState_Pending :: DirectConnectGatewayState
newtype GatewayType
GatewayType' :: Text -> GatewayType
[fromGatewayType] :: GatewayType -> Text
pattern GatewayType_TransitGateway :: GatewayType
pattern GatewayType_VirtualPrivateGateway :: GatewayType
newtype HasLogicalRedundancy
HasLogicalRedundancy' :: Text -> HasLogicalRedundancy
[fromHasLogicalRedundancy] :: HasLogicalRedundancy -> Text
pattern HasLogicalRedundancy_No :: HasLogicalRedundancy
pattern HasLogicalRedundancy_Unknown :: HasLogicalRedundancy
pattern HasLogicalRedundancy_Yes :: HasLogicalRedundancy
newtype InterconnectState
InterconnectState' :: Text -> InterconnectState
[fromInterconnectState] :: InterconnectState -> Text
pattern InterconnectState_Available :: InterconnectState
pattern InterconnectState_Deleted :: InterconnectState
pattern InterconnectState_Deleting :: InterconnectState
pattern InterconnectState_Down :: InterconnectState
pattern InterconnectState_Pending :: InterconnectState
pattern InterconnectState_Requested :: InterconnectState
pattern InterconnectState_Unknown :: InterconnectState
newtype LagState
LagState' :: Text -> LagState
[fromLagState] :: LagState -> Text
pattern LagState_Available :: LagState
pattern LagState_Deleted :: LagState
pattern LagState_Deleting :: LagState
pattern LagState_Down :: LagState
pattern LagState_Pending :: LagState
pattern LagState_Requested :: LagState
pattern LagState_Unknown :: LagState
newtype LoaContentType
LoaContentType' :: Text -> LoaContentType
[fromLoaContentType] :: LoaContentType -> Text
pattern LoaContentType_Application_pdf :: LoaContentType
newtype VirtualInterfaceState
VirtualInterfaceState' :: Text -> VirtualInterfaceState
[fromVirtualInterfaceState] :: VirtualInterfaceState -> Text
pattern VirtualInterfaceState_Available :: VirtualInterfaceState
pattern VirtualInterfaceState_Confirming :: VirtualInterfaceState
pattern VirtualInterfaceState_Deleted :: VirtualInterfaceState
pattern VirtualInterfaceState_Deleting :: VirtualInterfaceState
pattern VirtualInterfaceState_Down :: VirtualInterfaceState
pattern VirtualInterfaceState_Pending :: VirtualInterfaceState
pattern VirtualInterfaceState_Rejected :: VirtualInterfaceState
pattern VirtualInterfaceState_Unknown :: VirtualInterfaceState
pattern VirtualInterfaceState_Verifying :: VirtualInterfaceState

-- | Information about the associated gateway.
--   
--   <i>See:</i> <a>newAssociatedGateway</a> smart constructor.
data AssociatedGateway
AssociatedGateway' :: Maybe Text -> Maybe GatewayType -> Maybe Text -> Maybe Text -> AssociatedGateway

-- | The ID of the associated gateway.
[$sel:id:AssociatedGateway'] :: AssociatedGateway -> Maybe Text

-- | The type of associated gateway.
[$sel:type':AssociatedGateway'] :: AssociatedGateway -> Maybe GatewayType

-- | The ID of the account that owns the associated virtual private gateway
--   or transit gateway.
[$sel:ownerAccount:AssociatedGateway'] :: AssociatedGateway -> Maybe Text

-- | The Region where the associated gateway is located.
[$sel:region:AssociatedGateway'] :: AssociatedGateway -> Maybe Text

-- | Create a value of <a>AssociatedGateway</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:AssociatedGateway'</a>, <a>associatedGateway_id</a> - The
--   ID of the associated gateway.
--   
--   <a>$sel:type':AssociatedGateway'</a>, <a>associatedGateway_type</a> -
--   The type of associated gateway.
--   
--   <a>$sel:ownerAccount:AssociatedGateway'</a>,
--   <a>associatedGateway_ownerAccount</a> - The ID of the account that
--   owns the associated virtual private gateway or transit gateway.
--   
--   <a>$sel:region:AssociatedGateway'</a>, <a>associatedGateway_region</a>
--   - The Region where the associated gateway is located.
newAssociatedGateway :: AssociatedGateway

-- | The ID of the associated gateway.
associatedGateway_id :: Lens' AssociatedGateway (Maybe Text)

-- | The type of associated gateway.
associatedGateway_type :: Lens' AssociatedGateway (Maybe GatewayType)

-- | The ID of the account that owns the associated virtual private gateway
--   or transit gateway.
associatedGateway_ownerAccount :: Lens' AssociatedGateway (Maybe Text)

-- | The Region where the associated gateway is located.
associatedGateway_region :: Lens' AssociatedGateway (Maybe Text)

-- | Information about a BGP peer.
--   
--   <i>See:</i> <a>newBGPPeer</a> smart constructor.
data BGPPeer
BGPPeer' :: Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe BGPStatus -> Maybe BGPPeerState -> Maybe Text -> Maybe AddressFamily -> Maybe Text -> BGPPeer

-- | The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
[$sel:authKey:BGPPeer'] :: BGPPeer -> Maybe Text

-- | The autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
[$sel:asn:BGPPeer'] :: BGPPeer -> Maybe Int

-- | The Direct Connect endpoint that terminates the BGP peer.
[$sel:awsDeviceV2:BGPPeer'] :: BGPPeer -> Maybe Text

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
[$sel:awsLogicalDeviceId:BGPPeer'] :: BGPPeer -> Maybe Text

-- | The ID of the BGP peer.
[$sel:bgpPeerId:BGPPeer'] :: BGPPeer -> Maybe Text

-- | The status of the BGP peer. The following are the possible values:
--   
--   <ul>
--   <li><tt>up</tt>: The BGP peer is established. This state does not
--   indicate the state of the routing function. Ensure that you are
--   receiving routes over the BGP session.</li>
--   <li><tt>down</tt>: The BGP peer is down.</li>
--   <li><tt>unknown</tt>: The BGP peer status is not available.</li>
--   </ul>
[$sel:bgpStatus:BGPPeer'] :: BGPPeer -> Maybe BGPStatus

-- | The state of the BGP peer. The following are the possible values:
--   
--   <ul>
--   <li><tt>verifying</tt>: The BGP peering addresses or ASN require
--   validation before the BGP peer can be created. This state applies only
--   to public virtual interfaces.</li>
--   <li><tt>pending</tt>: The BGP peer is created, and remains in this
--   state until it is ready to be established.</li>
--   <li><tt>available</tt>: The BGP peer is ready to be established.</li>
--   <li><tt>deleting</tt>: The BGP peer is being deleted.</li>
--   <li><tt>deleted</tt>: The BGP peer is deleted and cannot be
--   established.</li>
--   </ul>
[$sel:bgpPeerState:BGPPeer'] :: BGPPeer -> Maybe BGPPeerState

-- | The IP address assigned to the Amazon interface.
[$sel:amazonAddress:BGPPeer'] :: BGPPeer -> Maybe Text

-- | The address family for the BGP peer.
[$sel:addressFamily:BGPPeer'] :: BGPPeer -> Maybe AddressFamily

-- | The IP address assigned to the customer interface.
[$sel:customerAddress:BGPPeer'] :: BGPPeer -> Maybe Text

-- | Create a value of <a>BGPPeer</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authKey:BGPPeer'</a>, <a>bGPPeer_authKey</a> - The
--   authentication key for BGP configuration. This string has a minimum
--   length of 6 characters and and a maximun lenth of 80 characters.
--   
--   <a>$sel:asn:BGPPeer'</a>, <a>bGPPeer_asn</a> - The autonomous system
--   (AS) number for Border Gateway Protocol (BGP) configuration.
--   
--   <a>$sel:awsDeviceV2:BGPPeer'</a>, <a>bGPPeer_awsDeviceV2</a> - The
--   Direct Connect endpoint that terminates the BGP peer.
--   
--   <a>$sel:awsLogicalDeviceId:BGPPeer'</a>,
--   <a>bGPPeer_awsLogicalDeviceId</a> - The Direct Connect endpoint that
--   terminates the logical connection. This device might be different than
--   the device that terminates the physical connection.
--   
--   <a>$sel:bgpPeerId:BGPPeer'</a>, <a>bGPPeer_bgpPeerId</a> - The ID of
--   the BGP peer.
--   
--   <a>$sel:bgpStatus:BGPPeer'</a>, <a>bGPPeer_bgpStatus</a> - The status
--   of the BGP peer. The following are the possible values:
--   
--   <ul>
--   <li><tt>up</tt>: The BGP peer is established. This state does not
--   indicate the state of the routing function. Ensure that you are
--   receiving routes over the BGP session.</li>
--   <li><tt>down</tt>: The BGP peer is down.</li>
--   <li><tt>unknown</tt>: The BGP peer status is not available.</li>
--   </ul>
--   
--   <a>$sel:bgpPeerState:BGPPeer'</a>, <a>bGPPeer_bgpPeerState</a> - The
--   state of the BGP peer. The following are the possible values:
--   
--   <ul>
--   <li><tt>verifying</tt>: The BGP peering addresses or ASN require
--   validation before the BGP peer can be created. This state applies only
--   to public virtual interfaces.</li>
--   <li><tt>pending</tt>: The BGP peer is created, and remains in this
--   state until it is ready to be established.</li>
--   <li><tt>available</tt>: The BGP peer is ready to be established.</li>
--   <li><tt>deleting</tt>: The BGP peer is being deleted.</li>
--   <li><tt>deleted</tt>: The BGP peer is deleted and cannot be
--   established.</li>
--   </ul>
--   
--   <a>$sel:amazonAddress:BGPPeer'</a>, <a>bGPPeer_amazonAddress</a> - The
--   IP address assigned to the Amazon interface.
--   
--   <a>$sel:addressFamily:BGPPeer'</a>, <a>bGPPeer_addressFamily</a> - The
--   address family for the BGP peer.
--   
--   <a>$sel:customerAddress:BGPPeer'</a>, <a>bGPPeer_customerAddress</a> -
--   The IP address assigned to the customer interface.
newBGPPeer :: BGPPeer

-- | The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
bGPPeer_authKey :: Lens' BGPPeer (Maybe Text)

-- | The autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
bGPPeer_asn :: Lens' BGPPeer (Maybe Int)

-- | The Direct Connect endpoint that terminates the BGP peer.
bGPPeer_awsDeviceV2 :: Lens' BGPPeer (Maybe Text)

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
bGPPeer_awsLogicalDeviceId :: Lens' BGPPeer (Maybe Text)

-- | The ID of the BGP peer.
bGPPeer_bgpPeerId :: Lens' BGPPeer (Maybe Text)

-- | The status of the BGP peer. The following are the possible values:
--   
--   <ul>
--   <li><tt>up</tt>: The BGP peer is established. This state does not
--   indicate the state of the routing function. Ensure that you are
--   receiving routes over the BGP session.</li>
--   <li><tt>down</tt>: The BGP peer is down.</li>
--   <li><tt>unknown</tt>: The BGP peer status is not available.</li>
--   </ul>
bGPPeer_bgpStatus :: Lens' BGPPeer (Maybe BGPStatus)

-- | The state of the BGP peer. The following are the possible values:
--   
--   <ul>
--   <li><tt>verifying</tt>: The BGP peering addresses or ASN require
--   validation before the BGP peer can be created. This state applies only
--   to public virtual interfaces.</li>
--   <li><tt>pending</tt>: The BGP peer is created, and remains in this
--   state until it is ready to be established.</li>
--   <li><tt>available</tt>: The BGP peer is ready to be established.</li>
--   <li><tt>deleting</tt>: The BGP peer is being deleted.</li>
--   <li><tt>deleted</tt>: The BGP peer is deleted and cannot be
--   established.</li>
--   </ul>
bGPPeer_bgpPeerState :: Lens' BGPPeer (Maybe BGPPeerState)

-- | The IP address assigned to the Amazon interface.
bGPPeer_amazonAddress :: Lens' BGPPeer (Maybe Text)

-- | The address family for the BGP peer.
bGPPeer_addressFamily :: Lens' BGPPeer (Maybe AddressFamily)

-- | The IP address assigned to the customer interface.
bGPPeer_customerAddress :: Lens' BGPPeer (Maybe Text)

-- | Information about an Direct Connect connection.
--   
--   <i>See:</i> <a>newConnection</a> smart constructor.
data Connection
Connection' :: Maybe Text -> Maybe Text -> Maybe ConnectionState -> Maybe Text -> Maybe [MacSecKey] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe HasLogicalRedundancy -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (NonEmpty Tag) -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Bool -> Connection

-- | The bandwidth of the connection.
[$sel:bandwidth:Connection'] :: Connection -> Maybe Text

-- | The Direct Connect endpoint that terminates the physical connection.
[$sel:awsDeviceV2:Connection'] :: Connection -> Maybe Text

-- | The state of the connection. The following are the possible values:
--   
--   <ul>
--   <li><tt>ordering</tt>: The initial state of a hosted connection
--   provisioned on an interconnect. The connection stays in the ordering
--   state until the owner of the hosted connection confirms or declines
--   the connection order.</li>
--   <li><tt>requested</tt>: The initial state of a standard connection.
--   The connection stays in the requested state until the Letter of
--   Authorization (LOA) is sent to the customer.</li>
--   <li><tt>pending</tt>: The connection has been approved and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is up and the connection is
--   ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The connection is being deleted.</li>
--   <li><tt>deleted</tt>: The connection has been deleted.</li>
--   <li><tt>rejected</tt>: A hosted connection in the <tt>ordering</tt>
--   state enters the <tt>rejected</tt> state if it is deleted by the
--   customer.</li>
--   <li><tt>unknown</tt>: The state of the connection is not
--   available.</li>
--   </ul>
[$sel:connectionState:Connection'] :: Connection -> Maybe ConnectionState

-- | The name of the connection.
[$sel:connectionName:Connection'] :: Connection -> Maybe Text

-- | The MAC Security (MACsec) security keys associated with the
--   connection.
[$sel:macSecKeys:Connection'] :: Connection -> Maybe [MacSecKey]

-- | The name of the service provider associated with the connection.
[$sel:providerName:Connection'] :: Connection -> Maybe Text

-- | The ID of the connection.
[$sel:connectionId:Connection'] :: Connection -> Maybe Text

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
[$sel:awsLogicalDeviceId:Connection'] :: Connection -> Maybe Text

-- | Indicates whether the connection supports a secondary BGP peer in the
--   same address family (IPv4/IPv6).
[$sel:hasLogicalRedundancy:Connection'] :: Connection -> Maybe HasLogicalRedundancy

-- | The Direct Connect endpoint on which the physical connection
--   terminates.
[$sel:awsDevice:Connection'] :: Connection -> Maybe Text

-- | Indicates whether jumbo frames (9001 MTU) are supported.
[$sel:jumboFrameCapable:Connection'] :: Connection -> Maybe Bool

-- | The MAC Security (MACsec) port link status of the connection.
--   
--   The valid values are <tt>Encryption Up</tt>, which means that there is
--   an active Connection Key Name, or <tt>Encryption Down</tt>.
[$sel:portEncryptionStatus:Connection'] :: Connection -> Maybe Text

-- | The ID of the LAG.
[$sel:lagId:Connection'] :: Connection -> Maybe Text

-- | The MAC Security (MACsec) connection encryption mode.
--   
--   The valid values are <tt>no_encrypt</tt>, <tt>should_encrypt</tt>, and
--   <tt>must_encrypt</tt>.
[$sel:encryptionMode:Connection'] :: Connection -> Maybe Text

-- | The name of the Direct Connect service provider associated with the
--   connection.
[$sel:partnerName:Connection'] :: Connection -> Maybe Text

-- | The tags associated with the connection.
[$sel:tags:Connection'] :: Connection -> Maybe (NonEmpty Tag)

-- | The time of the most recent call to DescribeLoa for this connection.
[$sel:loaIssueTime:Connection'] :: Connection -> Maybe POSIX

-- | The ID of the account that owns the connection.
[$sel:ownerAccount:Connection'] :: Connection -> Maybe Text

-- | The Region where the connection is located.
[$sel:region:Connection'] :: Connection -> Maybe Text

-- | The ID of the VLAN.
[$sel:vlan:Connection'] :: Connection -> Maybe Int

-- | The location of the connection.
[$sel:location:Connection'] :: Connection -> Maybe Text

-- | Indicates whether the connection supports MAC Security (MACsec).
[$sel:macSecCapable:Connection'] :: Connection -> Maybe Bool

-- | Create a value of <a>Connection</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bandwidth:Connection'</a>, <a>connection_bandwidth</a> - The
--   bandwidth of the connection.
--   
--   <a>$sel:awsDeviceV2:Connection'</a>, <a>connection_awsDeviceV2</a> -
--   The Direct Connect endpoint that terminates the physical connection.
--   
--   <a>$sel:connectionState:Connection'</a>,
--   <a>connection_connectionState</a> - The state of the connection. The
--   following are the possible values:
--   
--   <ul>
--   <li><tt>ordering</tt>: The initial state of a hosted connection
--   provisioned on an interconnect. The connection stays in the ordering
--   state until the owner of the hosted connection confirms or declines
--   the connection order.</li>
--   <li><tt>requested</tt>: The initial state of a standard connection.
--   The connection stays in the requested state until the Letter of
--   Authorization (LOA) is sent to the customer.</li>
--   <li><tt>pending</tt>: The connection has been approved and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is up and the connection is
--   ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The connection is being deleted.</li>
--   <li><tt>deleted</tt>: The connection has been deleted.</li>
--   <li><tt>rejected</tt>: A hosted connection in the <tt>ordering</tt>
--   state enters the <tt>rejected</tt> state if it is deleted by the
--   customer.</li>
--   <li><tt>unknown</tt>: The state of the connection is not
--   available.</li>
--   </ul>
--   
--   <a>$sel:connectionName:Connection'</a>,
--   <a>connection_connectionName</a> - The name of the connection.
--   
--   <a>$sel:macSecKeys:Connection'</a>, <a>connection_macSecKeys</a> - The
--   MAC Security (MACsec) security keys associated with the connection.
--   
--   <a>$sel:providerName:Connection'</a>, <a>connection_providerName</a> -
--   The name of the service provider associated with the connection.
--   
--   <a>$sel:connectionId:Connection'</a>, <a>connection_connectionId</a> -
--   The ID of the connection.
--   
--   <a>$sel:awsLogicalDeviceId:Connection'</a>,
--   <a>connection_awsLogicalDeviceId</a> - The Direct Connect endpoint
--   that terminates the logical connection. This device might be different
--   than the device that terminates the physical connection.
--   
--   <a>$sel:hasLogicalRedundancy:Connection'</a>,
--   <a>connection_hasLogicalRedundancy</a> - Indicates whether the
--   connection supports a secondary BGP peer in the same address family
--   (IPv4/IPv6).
--   
--   <a>$sel:awsDevice:Connection'</a>, <a>connection_awsDevice</a> - The
--   Direct Connect endpoint on which the physical connection terminates.
--   
--   <a>$sel:jumboFrameCapable:Connection'</a>,
--   <a>connection_jumboFrameCapable</a> - Indicates whether jumbo frames
--   (9001 MTU) are supported.
--   
--   <a>$sel:portEncryptionStatus:Connection'</a>,
--   <a>connection_portEncryptionStatus</a> - The MAC Security (MACsec)
--   port link status of the connection.
--   
--   The valid values are <tt>Encryption Up</tt>, which means that there is
--   an active Connection Key Name, or <tt>Encryption Down</tt>.
--   
--   <a>$sel:lagId:Connection'</a>, <a>connection_lagId</a> - The ID of the
--   LAG.
--   
--   <a>$sel:encryptionMode:Connection'</a>,
--   <a>connection_encryptionMode</a> - The MAC Security (MACsec)
--   connection encryption mode.
--   
--   The valid values are <tt>no_encrypt</tt>, <tt>should_encrypt</tt>, and
--   <tt>must_encrypt</tt>.
--   
--   <a>$sel:partnerName:Connection'</a>, <a>connection_partnerName</a> -
--   The name of the Direct Connect service provider associated with the
--   connection.
--   
--   <a>$sel:tags:Connection'</a>, <a>connection_tags</a> - The tags
--   associated with the connection.
--   
--   <a>$sel:loaIssueTime:Connection'</a>, <a>connection_loaIssueTime</a> -
--   The time of the most recent call to DescribeLoa for this connection.
--   
--   <a>$sel:ownerAccount:Connection'</a>, <a>connection_ownerAccount</a> -
--   The ID of the account that owns the connection.
--   
--   <a>$sel:region:Connection'</a>, <a>connection_region</a> - The Region
--   where the connection is located.
--   
--   <a>$sel:vlan:Connection'</a>, <a>connection_vlan</a> - The ID of the
--   VLAN.
--   
--   <a>$sel:location:Connection'</a>, <a>connection_location</a> - The
--   location of the connection.
--   
--   <a>$sel:macSecCapable:Connection'</a>, <a>connection_macSecCapable</a>
--   - Indicates whether the connection supports MAC Security (MACsec).
newConnection :: Connection

-- | The bandwidth of the connection.
connection_bandwidth :: Lens' Connection (Maybe Text)

-- | The Direct Connect endpoint that terminates the physical connection.
connection_awsDeviceV2 :: Lens' Connection (Maybe Text)

-- | The state of the connection. The following are the possible values:
--   
--   <ul>
--   <li><tt>ordering</tt>: The initial state of a hosted connection
--   provisioned on an interconnect. The connection stays in the ordering
--   state until the owner of the hosted connection confirms or declines
--   the connection order.</li>
--   <li><tt>requested</tt>: The initial state of a standard connection.
--   The connection stays in the requested state until the Letter of
--   Authorization (LOA) is sent to the customer.</li>
--   <li><tt>pending</tt>: The connection has been approved and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is up and the connection is
--   ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The connection is being deleted.</li>
--   <li><tt>deleted</tt>: The connection has been deleted.</li>
--   <li><tt>rejected</tt>: A hosted connection in the <tt>ordering</tt>
--   state enters the <tt>rejected</tt> state if it is deleted by the
--   customer.</li>
--   <li><tt>unknown</tt>: The state of the connection is not
--   available.</li>
--   </ul>
connection_connectionState :: Lens' Connection (Maybe ConnectionState)

-- | The name of the connection.
connection_connectionName :: Lens' Connection (Maybe Text)

-- | The MAC Security (MACsec) security keys associated with the
--   connection.
connection_macSecKeys :: Lens' Connection (Maybe [MacSecKey])

-- | The name of the service provider associated with the connection.
connection_providerName :: Lens' Connection (Maybe Text)

-- | The ID of the connection.
connection_connectionId :: Lens' Connection (Maybe Text)

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
connection_awsLogicalDeviceId :: Lens' Connection (Maybe Text)

-- | Indicates whether the connection supports a secondary BGP peer in the
--   same address family (IPv4/IPv6).
connection_hasLogicalRedundancy :: Lens' Connection (Maybe HasLogicalRedundancy)

-- | The Direct Connect endpoint on which the physical connection
--   terminates.
connection_awsDevice :: Lens' Connection (Maybe Text)

-- | Indicates whether jumbo frames (9001 MTU) are supported.
connection_jumboFrameCapable :: Lens' Connection (Maybe Bool)

-- | The MAC Security (MACsec) port link status of the connection.
--   
--   The valid values are <tt>Encryption Up</tt>, which means that there is
--   an active Connection Key Name, or <tt>Encryption Down</tt>.
connection_portEncryptionStatus :: Lens' Connection (Maybe Text)

-- | The ID of the LAG.
connection_lagId :: Lens' Connection (Maybe Text)

-- | The MAC Security (MACsec) connection encryption mode.
--   
--   The valid values are <tt>no_encrypt</tt>, <tt>should_encrypt</tt>, and
--   <tt>must_encrypt</tt>.
connection_encryptionMode :: Lens' Connection (Maybe Text)

-- | The name of the Direct Connect service provider associated with the
--   connection.
connection_partnerName :: Lens' Connection (Maybe Text)

-- | The tags associated with the connection.
connection_tags :: Lens' Connection (Maybe (NonEmpty Tag))

-- | The time of the most recent call to DescribeLoa for this connection.
connection_loaIssueTime :: Lens' Connection (Maybe UTCTime)

-- | The ID of the account that owns the connection.
connection_ownerAccount :: Lens' Connection (Maybe Text)

-- | The Region where the connection is located.
connection_region :: Lens' Connection (Maybe Text)

-- | The ID of the VLAN.
connection_vlan :: Lens' Connection (Maybe Int)

-- | The location of the connection.
connection_location :: Lens' Connection (Maybe Text)

-- | Indicates whether the connection supports MAC Security (MACsec).
connection_macSecCapable :: Lens' Connection (Maybe Bool)

-- | <i>See:</i> <a>newConnections</a> smart constructor.
data Connections
Connections' :: Maybe [Connection] -> Connections

-- | The connections.
[$sel:connections:Connections'] :: Connections -> Maybe [Connection]

-- | Create a value of <a>Connections</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connections:Connections'</a>, <a>connections_connections</a> -
--   The connections.
newConnections :: Connections

-- | The connections.
connections_connections :: Lens' Connections (Maybe [Connection])

-- | Information about a Direct Connect gateway, which enables you to
--   connect virtual interfaces and virtual private gateway or transit
--   gateways.
--   
--   <i>See:</i> <a>newDirectConnectGateway</a> smart constructor.
data DirectConnectGateway
DirectConnectGateway' :: Maybe DirectConnectGatewayState -> Maybe Text -> Maybe Text -> Maybe Integer -> Maybe Text -> Maybe Text -> DirectConnectGateway

-- | The state of the Direct Connect gateway. The following are the
--   possible values:
--   
--   <ul>
--   <li><tt>pending</tt>: The initial state after calling
--   CreateDirectConnectGateway.</li>
--   <li><tt>available</tt>: The Direct Connect gateway is ready for
--   use.</li>
--   <li><tt>deleting</tt>: The initial state after calling
--   DeleteDirectConnectGateway.</li>
--   <li><tt>deleted</tt>: The Direct Connect gateway is deleted and cannot
--   pass traffic.</li>
--   </ul>
[$sel:directConnectGatewayState:DirectConnectGateway'] :: DirectConnectGateway -> Maybe DirectConnectGatewayState

-- | The error message if the state of an object failed to advance.
[$sel:stateChangeError:DirectConnectGateway'] :: DirectConnectGateway -> Maybe Text

-- | The name of the Direct Connect gateway.
[$sel:directConnectGatewayName:DirectConnectGateway'] :: DirectConnectGateway -> Maybe Text

-- | The autonomous system number (ASN) for the Amazon side of the
--   connection.
[$sel:amazonSideAsn:DirectConnectGateway'] :: DirectConnectGateway -> Maybe Integer

-- | The ID of the Direct Connect gateway.
[$sel:directConnectGatewayId:DirectConnectGateway'] :: DirectConnectGateway -> Maybe Text

-- | The ID of the account that owns the Direct Connect gateway.
[$sel:ownerAccount:DirectConnectGateway'] :: DirectConnectGateway -> Maybe Text

-- | Create a value of <a>DirectConnectGateway</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:directConnectGatewayState:DirectConnectGateway'</a>,
--   <a>directConnectGateway_directConnectGatewayState</a> - The state of
--   the Direct Connect gateway. The following are the possible values:
--   
--   <ul>
--   <li><tt>pending</tt>: The initial state after calling
--   CreateDirectConnectGateway.</li>
--   <li><tt>available</tt>: The Direct Connect gateway is ready for
--   use.</li>
--   <li><tt>deleting</tt>: The initial state after calling
--   DeleteDirectConnectGateway.</li>
--   <li><tt>deleted</tt>: The Direct Connect gateway is deleted and cannot
--   pass traffic.</li>
--   </ul>
--   
--   <a>$sel:stateChangeError:DirectConnectGateway'</a>,
--   <a>directConnectGateway_stateChangeError</a> - The error message if
--   the state of an object failed to advance.
--   
--   <a>$sel:directConnectGatewayName:DirectConnectGateway'</a>,
--   <a>directConnectGateway_directConnectGatewayName</a> - The name of the
--   Direct Connect gateway.
--   
--   <a>$sel:amazonSideAsn:DirectConnectGateway'</a>,
--   <a>directConnectGateway_amazonSideAsn</a> - The autonomous system
--   number (ASN) for the Amazon side of the connection.
--   
--   <a>$sel:directConnectGatewayId:DirectConnectGateway'</a>,
--   <a>directConnectGateway_directConnectGatewayId</a> - The ID of the
--   Direct Connect gateway.
--   
--   <a>$sel:ownerAccount:DirectConnectGateway'</a>,
--   <a>directConnectGateway_ownerAccount</a> - The ID of the account that
--   owns the Direct Connect gateway.
newDirectConnectGateway :: DirectConnectGateway

-- | The state of the Direct Connect gateway. The following are the
--   possible values:
--   
--   <ul>
--   <li><tt>pending</tt>: The initial state after calling
--   CreateDirectConnectGateway.</li>
--   <li><tt>available</tt>: The Direct Connect gateway is ready for
--   use.</li>
--   <li><tt>deleting</tt>: The initial state after calling
--   DeleteDirectConnectGateway.</li>
--   <li><tt>deleted</tt>: The Direct Connect gateway is deleted and cannot
--   pass traffic.</li>
--   </ul>
directConnectGateway_directConnectGatewayState :: Lens' DirectConnectGateway (Maybe DirectConnectGatewayState)

-- | The error message if the state of an object failed to advance.
directConnectGateway_stateChangeError :: Lens' DirectConnectGateway (Maybe Text)

-- | The name of the Direct Connect gateway.
directConnectGateway_directConnectGatewayName :: Lens' DirectConnectGateway (Maybe Text)

-- | The autonomous system number (ASN) for the Amazon side of the
--   connection.
directConnectGateway_amazonSideAsn :: Lens' DirectConnectGateway (Maybe Integer)

-- | The ID of the Direct Connect gateway.
directConnectGateway_directConnectGatewayId :: Lens' DirectConnectGateway (Maybe Text)

-- | The ID of the account that owns the Direct Connect gateway.
directConnectGateway_ownerAccount :: Lens' DirectConnectGateway (Maybe Text)

-- | Information about an association between a Direct Connect gateway and
--   a virtual private gateway or transit gateway.
--   
--   <i>See:</i> <a>newDirectConnectGatewayAssociation</a> smart
--   constructor.
data DirectConnectGatewayAssociation
DirectConnectGatewayAssociation' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe DirectConnectGatewayAssociationState -> Maybe AssociatedGateway -> Maybe Text -> Maybe Text -> Maybe [RouteFilterPrefix] -> Maybe Text -> DirectConnectGatewayAssociation

-- | The ID of the virtual private gateway. Applies only to private virtual
--   interfaces.
[$sel:virtualGatewayId:DirectConnectGatewayAssociation'] :: DirectConnectGatewayAssociation -> Maybe Text

-- | The Region where the virtual private gateway is located.
[$sel:virtualGatewayRegion:DirectConnectGatewayAssociation'] :: DirectConnectGatewayAssociation -> Maybe Text

-- | The ID of the account that owns the virtual private gateway.
[$sel:virtualGatewayOwnerAccount:DirectConnectGatewayAssociation'] :: DirectConnectGatewayAssociation -> Maybe Text

-- | The error message if the state of an object failed to advance.
[$sel:stateChangeError:DirectConnectGatewayAssociation'] :: DirectConnectGatewayAssociation -> Maybe Text

-- | The state of the association. The following are the possible values:
--   
--   <ul>
--   <li><tt>associating</tt>: The initial state after calling
--   CreateDirectConnectGatewayAssociation.</li>
--   <li><tt>associated</tt>: The Direct Connect gateway and virtual
--   private gateway or transit gateway are successfully associated and
--   ready to pass traffic.</li>
--   <li><tt>disassociating</tt>: The initial state after calling
--   DeleteDirectConnectGatewayAssociation.</li>
--   <li><tt>disassociated</tt>: The virtual private gateway or transit
--   gateway is disassociated from the Direct Connect gateway. Traffic flow
--   between the Direct Connect gateway and virtual private gateway or
--   transit gateway is stopped.</li>
--   </ul>
[$sel:associationState:DirectConnectGatewayAssociation'] :: DirectConnectGatewayAssociation -> Maybe DirectConnectGatewayAssociationState

-- | Information about the associated gateway.
[$sel:associatedGateway:DirectConnectGatewayAssociation'] :: DirectConnectGatewayAssociation -> Maybe AssociatedGateway

-- | The ID of the Direct Connect gateway association.
[$sel:associationId:DirectConnectGatewayAssociation'] :: DirectConnectGatewayAssociation -> Maybe Text

-- | The ID of the Direct Connect gateway.
[$sel:directConnectGatewayId:DirectConnectGatewayAssociation'] :: DirectConnectGatewayAssociation -> Maybe Text

-- | The Amazon VPC prefixes to advertise to the Direct Connect gateway.
[$sel:allowedPrefixesToDirectConnectGateway:DirectConnectGatewayAssociation'] :: DirectConnectGatewayAssociation -> Maybe [RouteFilterPrefix]

-- | The ID of the account that owns the associated gateway.
[$sel:directConnectGatewayOwnerAccount:DirectConnectGatewayAssociation'] :: DirectConnectGatewayAssociation -> Maybe Text

-- | Create a value of <a>DirectConnectGatewayAssociation</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:virtualGatewayId:DirectConnectGatewayAssociation'</a>,
--   <a>directConnectGatewayAssociation_virtualGatewayId</a> - The ID of
--   the virtual private gateway. Applies only to private virtual
--   interfaces.
--   
--   <a>$sel:virtualGatewayRegion:DirectConnectGatewayAssociation'</a>,
--   <a>directConnectGatewayAssociation_virtualGatewayRegion</a> - The
--   Region where the virtual private gateway is located.
--   
--   
--   <a>$sel:virtualGatewayOwnerAccount:DirectConnectGatewayAssociation'</a>,
--   <a>directConnectGatewayAssociation_virtualGatewayOwnerAccount</a> -
--   The ID of the account that owns the virtual private gateway.
--   
--   <a>$sel:stateChangeError:DirectConnectGatewayAssociation'</a>,
--   <a>directConnectGatewayAssociation_stateChangeError</a> - The error
--   message if the state of an object failed to advance.
--   
--   <a>$sel:associationState:DirectConnectGatewayAssociation'</a>,
--   <a>directConnectGatewayAssociation_associationState</a> - The state of
--   the association. The following are the possible values:
--   
--   <ul>
--   <li><tt>associating</tt>: The initial state after calling
--   CreateDirectConnectGatewayAssociation.</li>
--   <li><tt>associated</tt>: The Direct Connect gateway and virtual
--   private gateway or transit gateway are successfully associated and
--   ready to pass traffic.</li>
--   <li><tt>disassociating</tt>: The initial state after calling
--   DeleteDirectConnectGatewayAssociation.</li>
--   <li><tt>disassociated</tt>: The virtual private gateway or transit
--   gateway is disassociated from the Direct Connect gateway. Traffic flow
--   between the Direct Connect gateway and virtual private gateway or
--   transit gateway is stopped.</li>
--   </ul>
--   
--   <a>$sel:associatedGateway:DirectConnectGatewayAssociation'</a>,
--   <a>directConnectGatewayAssociation_associatedGateway</a> - Information
--   about the associated gateway.
--   
--   <a>$sel:associationId:DirectConnectGatewayAssociation'</a>,
--   <a>directConnectGatewayAssociation_associationId</a> - The ID of the
--   Direct Connect gateway association.
--   
--   <a>$sel:directConnectGatewayId:DirectConnectGatewayAssociation'</a>,
--   <a>directConnectGatewayAssociation_directConnectGatewayId</a> - The ID
--   of the Direct Connect gateway.
--   
--   
--   <a>$sel:allowedPrefixesToDirectConnectGateway:DirectConnectGatewayAssociation'</a>,
--   <a>directConnectGatewayAssociation_allowedPrefixesToDirectConnectGateway</a>
--   - The Amazon VPC prefixes to advertise to the Direct Connect gateway.
--   
--   
--   <a>$sel:directConnectGatewayOwnerAccount:DirectConnectGatewayAssociation'</a>,
--   <a>directConnectGatewayAssociation_directConnectGatewayOwnerAccount</a>
--   - The ID of the account that owns the associated gateway.
newDirectConnectGatewayAssociation :: DirectConnectGatewayAssociation

-- | The ID of the virtual private gateway. Applies only to private virtual
--   interfaces.
directConnectGatewayAssociation_virtualGatewayId :: Lens' DirectConnectGatewayAssociation (Maybe Text)

-- | The Region where the virtual private gateway is located.
directConnectGatewayAssociation_virtualGatewayRegion :: Lens' DirectConnectGatewayAssociation (Maybe Text)

-- | The ID of the account that owns the virtual private gateway.
directConnectGatewayAssociation_virtualGatewayOwnerAccount :: Lens' DirectConnectGatewayAssociation (Maybe Text)

-- | The error message if the state of an object failed to advance.
directConnectGatewayAssociation_stateChangeError :: Lens' DirectConnectGatewayAssociation (Maybe Text)

-- | The state of the association. The following are the possible values:
--   
--   <ul>
--   <li><tt>associating</tt>: The initial state after calling
--   CreateDirectConnectGatewayAssociation.</li>
--   <li><tt>associated</tt>: The Direct Connect gateway and virtual
--   private gateway or transit gateway are successfully associated and
--   ready to pass traffic.</li>
--   <li><tt>disassociating</tt>: The initial state after calling
--   DeleteDirectConnectGatewayAssociation.</li>
--   <li><tt>disassociated</tt>: The virtual private gateway or transit
--   gateway is disassociated from the Direct Connect gateway. Traffic flow
--   between the Direct Connect gateway and virtual private gateway or
--   transit gateway is stopped.</li>
--   </ul>
directConnectGatewayAssociation_associationState :: Lens' DirectConnectGatewayAssociation (Maybe DirectConnectGatewayAssociationState)

-- | Information about the associated gateway.
directConnectGatewayAssociation_associatedGateway :: Lens' DirectConnectGatewayAssociation (Maybe AssociatedGateway)

-- | The ID of the Direct Connect gateway association.
directConnectGatewayAssociation_associationId :: Lens' DirectConnectGatewayAssociation (Maybe Text)

-- | The ID of the Direct Connect gateway.
directConnectGatewayAssociation_directConnectGatewayId :: Lens' DirectConnectGatewayAssociation (Maybe Text)

-- | The Amazon VPC prefixes to advertise to the Direct Connect gateway.
directConnectGatewayAssociation_allowedPrefixesToDirectConnectGateway :: Lens' DirectConnectGatewayAssociation (Maybe [RouteFilterPrefix])

-- | The ID of the account that owns the associated gateway.
directConnectGatewayAssociation_directConnectGatewayOwnerAccount :: Lens' DirectConnectGatewayAssociation (Maybe Text)

-- | Information about the proposal request to attach a virtual private
--   gateway to a Direct Connect gateway.
--   
--   <i>See:</i> <a>newDirectConnectGatewayAssociationProposal</a> smart
--   constructor.
data DirectConnectGatewayAssociationProposal
DirectConnectGatewayAssociationProposal' :: Maybe Text -> Maybe [RouteFilterPrefix] -> Maybe DirectConnectGatewayAssociationProposalState -> Maybe AssociatedGateway -> Maybe [RouteFilterPrefix] -> Maybe Text -> Maybe Text -> DirectConnectGatewayAssociationProposal

-- | The ID of the association proposal.
[$sel:proposalId:DirectConnectGatewayAssociationProposal'] :: DirectConnectGatewayAssociationProposal -> Maybe Text

-- | The Amazon VPC prefixes to advertise to the Direct Connect gateway.
[$sel:requestedAllowedPrefixesToDirectConnectGateway:DirectConnectGatewayAssociationProposal'] :: DirectConnectGatewayAssociationProposal -> Maybe [RouteFilterPrefix]

-- | The state of the proposal. The following are possible values:
--   
--   <ul>
--   <li><tt>accepted</tt>: The proposal has been accepted. The Direct
--   Connect gateway association is available to use in this state.</li>
--   <li><tt>deleted</tt>: The proposal has been deleted by the owner that
--   made the proposal. The Direct Connect gateway association cannot be
--   used in this state.</li>
--   <li><tt>requested</tt>: The proposal has been requested. The Direct
--   Connect gateway association cannot be used in this state.</li>
--   </ul>
[$sel:proposalState:DirectConnectGatewayAssociationProposal'] :: DirectConnectGatewayAssociationProposal -> Maybe DirectConnectGatewayAssociationProposalState

-- | Information about the associated gateway.
[$sel:associatedGateway:DirectConnectGatewayAssociationProposal'] :: DirectConnectGatewayAssociationProposal -> Maybe AssociatedGateway

-- | The existing Amazon VPC prefixes advertised to the Direct Connect
--   gateway.
[$sel:existingAllowedPrefixesToDirectConnectGateway:DirectConnectGatewayAssociationProposal'] :: DirectConnectGatewayAssociationProposal -> Maybe [RouteFilterPrefix]

-- | The ID of the Direct Connect gateway.
[$sel:directConnectGatewayId:DirectConnectGatewayAssociationProposal'] :: DirectConnectGatewayAssociationProposal -> Maybe Text

-- | The ID of the account that owns the Direct Connect gateway.
[$sel:directConnectGatewayOwnerAccount:DirectConnectGatewayAssociationProposal'] :: DirectConnectGatewayAssociationProposal -> Maybe Text

-- | Create a value of <a>DirectConnectGatewayAssociationProposal</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:proposalId:DirectConnectGatewayAssociationProposal'</a>,
--   <a>directConnectGatewayAssociationProposal_proposalId</a> - The ID of
--   the association proposal.
--   
--   
--   <a>$sel:requestedAllowedPrefixesToDirectConnectGateway:DirectConnectGatewayAssociationProposal'</a>,
--   <a>directConnectGatewayAssociationProposal_requestedAllowedPrefixesToDirectConnectGateway</a>
--   - The Amazon VPC prefixes to advertise to the Direct Connect gateway.
--   
--   <a>$sel:proposalState:DirectConnectGatewayAssociationProposal'</a>,
--   <a>directConnectGatewayAssociationProposal_proposalState</a> - The
--   state of the proposal. The following are possible values:
--   
--   <ul>
--   <li><tt>accepted</tt>: The proposal has been accepted. The Direct
--   Connect gateway association is available to use in this state.</li>
--   <li><tt>deleted</tt>: The proposal has been deleted by the owner that
--   made the proposal. The Direct Connect gateway association cannot be
--   used in this state.</li>
--   <li><tt>requested</tt>: The proposal has been requested. The Direct
--   Connect gateway association cannot be used in this state.</li>
--   </ul>
--   
--   
--   <a>$sel:associatedGateway:DirectConnectGatewayAssociationProposal'</a>,
--   <a>directConnectGatewayAssociationProposal_associatedGateway</a> -
--   Information about the associated gateway.
--   
--   
--   <a>$sel:existingAllowedPrefixesToDirectConnectGateway:DirectConnectGatewayAssociationProposal'</a>,
--   <a>directConnectGatewayAssociationProposal_existingAllowedPrefixesToDirectConnectGateway</a>
--   - The existing Amazon VPC prefixes advertised to the Direct Connect
--   gateway.
--   
--   
--   <a>$sel:directConnectGatewayId:DirectConnectGatewayAssociationProposal'</a>,
--   <a>directConnectGatewayAssociationProposal_directConnectGatewayId</a>
--   - The ID of the Direct Connect gateway.
--   
--   
--   <a>$sel:directConnectGatewayOwnerAccount:DirectConnectGatewayAssociationProposal'</a>,
--   <a>directConnectGatewayAssociationProposal_directConnectGatewayOwnerAccount</a>
--   - The ID of the account that owns the Direct Connect gateway.
newDirectConnectGatewayAssociationProposal :: DirectConnectGatewayAssociationProposal

-- | The ID of the association proposal.
directConnectGatewayAssociationProposal_proposalId :: Lens' DirectConnectGatewayAssociationProposal (Maybe Text)

-- | The Amazon VPC prefixes to advertise to the Direct Connect gateway.
directConnectGatewayAssociationProposal_requestedAllowedPrefixesToDirectConnectGateway :: Lens' DirectConnectGatewayAssociationProposal (Maybe [RouteFilterPrefix])

-- | The state of the proposal. The following are possible values:
--   
--   <ul>
--   <li><tt>accepted</tt>: The proposal has been accepted. The Direct
--   Connect gateway association is available to use in this state.</li>
--   <li><tt>deleted</tt>: The proposal has been deleted by the owner that
--   made the proposal. The Direct Connect gateway association cannot be
--   used in this state.</li>
--   <li><tt>requested</tt>: The proposal has been requested. The Direct
--   Connect gateway association cannot be used in this state.</li>
--   </ul>
directConnectGatewayAssociationProposal_proposalState :: Lens' DirectConnectGatewayAssociationProposal (Maybe DirectConnectGatewayAssociationProposalState)

-- | Information about the associated gateway.
directConnectGatewayAssociationProposal_associatedGateway :: Lens' DirectConnectGatewayAssociationProposal (Maybe AssociatedGateway)

-- | The existing Amazon VPC prefixes advertised to the Direct Connect
--   gateway.
directConnectGatewayAssociationProposal_existingAllowedPrefixesToDirectConnectGateway :: Lens' DirectConnectGatewayAssociationProposal (Maybe [RouteFilterPrefix])

-- | The ID of the Direct Connect gateway.
directConnectGatewayAssociationProposal_directConnectGatewayId :: Lens' DirectConnectGatewayAssociationProposal (Maybe Text)

-- | The ID of the account that owns the Direct Connect gateway.
directConnectGatewayAssociationProposal_directConnectGatewayOwnerAccount :: Lens' DirectConnectGatewayAssociationProposal (Maybe Text)

-- | Information about an attachment between a Direct Connect gateway and a
--   virtual interface.
--   
--   <i>See:</i> <a>newDirectConnectGatewayAttachment</a> smart
--   constructor.
data DirectConnectGatewayAttachment
DirectConnectGatewayAttachment' :: Maybe Text -> Maybe DirectConnectGatewayAttachmentState -> Maybe Text -> Maybe Text -> Maybe DirectConnectGatewayAttachmentType -> Maybe Text -> Maybe Text -> DirectConnectGatewayAttachment

-- | The error message if the state of an object failed to advance.
[$sel:stateChangeError:DirectConnectGatewayAttachment'] :: DirectConnectGatewayAttachment -> Maybe Text

-- | The state of the attachment. The following are the possible values:
--   
--   <ul>
--   <li><tt>attaching</tt>: The initial state after a virtual interface is
--   created using the Direct Connect gateway.</li>
--   <li><tt>attached</tt>: The Direct Connect gateway and virtual
--   interface are attached and ready to pass traffic.</li>
--   <li><tt>detaching</tt>: The initial state after calling
--   DeleteVirtualInterface.</li>
--   <li><tt>detached</tt>: The virtual interface is detached from the
--   Direct Connect gateway. Traffic flow between the Direct Connect
--   gateway and virtual interface is stopped.</li>
--   </ul>
[$sel:attachmentState:DirectConnectGatewayAttachment'] :: DirectConnectGatewayAttachment -> Maybe DirectConnectGatewayAttachmentState

-- | The ID of the account that owns the virtual interface.
[$sel:virtualInterfaceOwnerAccount:DirectConnectGatewayAttachment'] :: DirectConnectGatewayAttachment -> Maybe Text

-- | The Region where the virtual interface is located.
[$sel:virtualInterfaceRegion:DirectConnectGatewayAttachment'] :: DirectConnectGatewayAttachment -> Maybe Text

-- | The type of attachment.
[$sel:attachmentType:DirectConnectGatewayAttachment'] :: DirectConnectGatewayAttachment -> Maybe DirectConnectGatewayAttachmentType

-- | The ID of the virtual interface.
[$sel:virtualInterfaceId:DirectConnectGatewayAttachment'] :: DirectConnectGatewayAttachment -> Maybe Text

-- | The ID of the Direct Connect gateway.
[$sel:directConnectGatewayId:DirectConnectGatewayAttachment'] :: DirectConnectGatewayAttachment -> Maybe Text

-- | Create a value of <a>DirectConnectGatewayAttachment</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stateChangeError:DirectConnectGatewayAttachment'</a>,
--   <a>directConnectGatewayAttachment_stateChangeError</a> - The error
--   message if the state of an object failed to advance.
--   
--   <a>$sel:attachmentState:DirectConnectGatewayAttachment'</a>,
--   <a>directConnectGatewayAttachment_attachmentState</a> - The state of
--   the attachment. The following are the possible values:
--   
--   <ul>
--   <li><tt>attaching</tt>: The initial state after a virtual interface is
--   created using the Direct Connect gateway.</li>
--   <li><tt>attached</tt>: The Direct Connect gateway and virtual
--   interface are attached and ready to pass traffic.</li>
--   <li><tt>detaching</tt>: The initial state after calling
--   DeleteVirtualInterface.</li>
--   <li><tt>detached</tt>: The virtual interface is detached from the
--   Direct Connect gateway. Traffic flow between the Direct Connect
--   gateway and virtual interface is stopped.</li>
--   </ul>
--   
--   
--   <a>$sel:virtualInterfaceOwnerAccount:DirectConnectGatewayAttachment'</a>,
--   <a>directConnectGatewayAttachment_virtualInterfaceOwnerAccount</a> -
--   The ID of the account that owns the virtual interface.
--   
--   <a>$sel:virtualInterfaceRegion:DirectConnectGatewayAttachment'</a>,
--   <a>directConnectGatewayAttachment_virtualInterfaceRegion</a> - The
--   Region where the virtual interface is located.
--   
--   <a>$sel:attachmentType:DirectConnectGatewayAttachment'</a>,
--   <a>directConnectGatewayAttachment_attachmentType</a> - The type of
--   attachment.
--   
--   <a>$sel:virtualInterfaceId:DirectConnectGatewayAttachment'</a>,
--   <a>directConnectGatewayAttachment_virtualInterfaceId</a> - The ID of
--   the virtual interface.
--   
--   <a>$sel:directConnectGatewayId:DirectConnectGatewayAttachment'</a>,
--   <a>directConnectGatewayAttachment_directConnectGatewayId</a> - The ID
--   of the Direct Connect gateway.
newDirectConnectGatewayAttachment :: DirectConnectGatewayAttachment

-- | The error message if the state of an object failed to advance.
directConnectGatewayAttachment_stateChangeError :: Lens' DirectConnectGatewayAttachment (Maybe Text)

-- | The state of the attachment. The following are the possible values:
--   
--   <ul>
--   <li><tt>attaching</tt>: The initial state after a virtual interface is
--   created using the Direct Connect gateway.</li>
--   <li><tt>attached</tt>: The Direct Connect gateway and virtual
--   interface are attached and ready to pass traffic.</li>
--   <li><tt>detaching</tt>: The initial state after calling
--   DeleteVirtualInterface.</li>
--   <li><tt>detached</tt>: The virtual interface is detached from the
--   Direct Connect gateway. Traffic flow between the Direct Connect
--   gateway and virtual interface is stopped.</li>
--   </ul>
directConnectGatewayAttachment_attachmentState :: Lens' DirectConnectGatewayAttachment (Maybe DirectConnectGatewayAttachmentState)

-- | The ID of the account that owns the virtual interface.
directConnectGatewayAttachment_virtualInterfaceOwnerAccount :: Lens' DirectConnectGatewayAttachment (Maybe Text)

-- | The Region where the virtual interface is located.
directConnectGatewayAttachment_virtualInterfaceRegion :: Lens' DirectConnectGatewayAttachment (Maybe Text)

-- | The type of attachment.
directConnectGatewayAttachment_attachmentType :: Lens' DirectConnectGatewayAttachment (Maybe DirectConnectGatewayAttachmentType)

-- | The ID of the virtual interface.
directConnectGatewayAttachment_virtualInterfaceId :: Lens' DirectConnectGatewayAttachment (Maybe Text)

-- | The ID of the Direct Connect gateway.
directConnectGatewayAttachment_directConnectGatewayId :: Lens' DirectConnectGatewayAttachment (Maybe Text)

-- | Information about an interconnect.
--   
--   <i>See:</i> <a>newInterconnect</a> smart constructor.
data Interconnect
Interconnect' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe HasLogicalRedundancy -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe (NonEmpty Tag) -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe InterconnectState -> Maybe Text -> Interconnect

-- | The ID of the interconnect.
[$sel:interconnectId:Interconnect'] :: Interconnect -> Maybe Text

-- | The bandwidth of the connection.
[$sel:bandwidth:Interconnect'] :: Interconnect -> Maybe Text

-- | The Direct Connect endpoint that terminates the physical connection.
[$sel:awsDeviceV2:Interconnect'] :: Interconnect -> Maybe Text

-- | The name of the service provider associated with the interconnect.
[$sel:providerName:Interconnect'] :: Interconnect -> Maybe Text

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
[$sel:awsLogicalDeviceId:Interconnect'] :: Interconnect -> Maybe Text

-- | Indicates whether the interconnect supports a secondary BGP in the
--   same address family (IPv4/IPv6).
[$sel:hasLogicalRedundancy:Interconnect'] :: Interconnect -> Maybe HasLogicalRedundancy

-- | The Direct Connect endpoint on which the physical connection
--   terminates.
[$sel:awsDevice:Interconnect'] :: Interconnect -> Maybe Text

-- | Indicates whether jumbo frames (9001 MTU) are supported.
[$sel:jumboFrameCapable:Interconnect'] :: Interconnect -> Maybe Bool

-- | The ID of the LAG.
[$sel:lagId:Interconnect'] :: Interconnect -> Maybe Text

-- | The tags associated with the interconnect.
[$sel:tags:Interconnect'] :: Interconnect -> Maybe (NonEmpty Tag)

-- | The time of the most recent call to DescribeLoa for this connection.
[$sel:loaIssueTime:Interconnect'] :: Interconnect -> Maybe POSIX

-- | The Region where the connection is located.
[$sel:region:Interconnect'] :: Interconnect -> Maybe Text

-- | The name of the interconnect.
[$sel:interconnectName:Interconnect'] :: Interconnect -> Maybe Text

-- | The state of the interconnect. The following are the possible values:
--   
--   <ul>
--   <li><tt>requested</tt>: The initial state of an interconnect. The
--   interconnect stays in the requested state until the Letter of
--   Authorization (LOA) is sent to the customer.</li>
--   <li><tt>pending</tt>: The interconnect is approved, and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is up, and the interconnect
--   is ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The interconnect is being deleted.</li>
--   <li><tt>deleted</tt>: The interconnect is deleted.</li>
--   <li><tt>unknown</tt>: The state of the interconnect is not
--   available.</li>
--   </ul>
[$sel:interconnectState:Interconnect'] :: Interconnect -> Maybe InterconnectState

-- | The location of the connection.
[$sel:location:Interconnect'] :: Interconnect -> Maybe Text

-- | Create a value of <a>Interconnect</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:interconnectId:Interconnect'</a>,
--   <a>interconnect_interconnectId</a> - The ID of the interconnect.
--   
--   <a>$sel:bandwidth:Interconnect'</a>, <a>interconnect_bandwidth</a> -
--   The bandwidth of the connection.
--   
--   <a>$sel:awsDeviceV2:Interconnect'</a>, <a>interconnect_awsDeviceV2</a>
--   - The Direct Connect endpoint that terminates the physical connection.
--   
--   <a>$sel:providerName:Interconnect'</a>,
--   <a>interconnect_providerName</a> - The name of the service provider
--   associated with the interconnect.
--   
--   <a>$sel:awsLogicalDeviceId:Interconnect'</a>,
--   <a>interconnect_awsLogicalDeviceId</a> - The Direct Connect endpoint
--   that terminates the logical connection. This device might be different
--   than the device that terminates the physical connection.
--   
--   <a>$sel:hasLogicalRedundancy:Interconnect'</a>,
--   <a>interconnect_hasLogicalRedundancy</a> - Indicates whether the
--   interconnect supports a secondary BGP in the same address family
--   (IPv4/IPv6).
--   
--   <a>$sel:awsDevice:Interconnect'</a>, <a>interconnect_awsDevice</a> -
--   The Direct Connect endpoint on which the physical connection
--   terminates.
--   
--   <a>$sel:jumboFrameCapable:Interconnect'</a>,
--   <a>interconnect_jumboFrameCapable</a> - Indicates whether jumbo frames
--   (9001 MTU) are supported.
--   
--   <a>$sel:lagId:Interconnect'</a>, <a>interconnect_lagId</a> - The ID of
--   the LAG.
--   
--   <a>$sel:tags:Interconnect'</a>, <a>interconnect_tags</a> - The tags
--   associated with the interconnect.
--   
--   <a>$sel:loaIssueTime:Interconnect'</a>,
--   <a>interconnect_loaIssueTime</a> - The time of the most recent call to
--   DescribeLoa for this connection.
--   
--   <a>$sel:region:Interconnect'</a>, <a>interconnect_region</a> - The
--   Region where the connection is located.
--   
--   <a>$sel:interconnectName:Interconnect'</a>,
--   <a>interconnect_interconnectName</a> - The name of the interconnect.
--   
--   <a>$sel:interconnectState:Interconnect'</a>,
--   <a>interconnect_interconnectState</a> - The state of the interconnect.
--   The following are the possible values:
--   
--   <ul>
--   <li><tt>requested</tt>: The initial state of an interconnect. The
--   interconnect stays in the requested state until the Letter of
--   Authorization (LOA) is sent to the customer.</li>
--   <li><tt>pending</tt>: The interconnect is approved, and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is up, and the interconnect
--   is ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The interconnect is being deleted.</li>
--   <li><tt>deleted</tt>: The interconnect is deleted.</li>
--   <li><tt>unknown</tt>: The state of the interconnect is not
--   available.</li>
--   </ul>
--   
--   <a>$sel:location:Interconnect'</a>, <a>interconnect_location</a> - The
--   location of the connection.
newInterconnect :: Interconnect

-- | The ID of the interconnect.
interconnect_interconnectId :: Lens' Interconnect (Maybe Text)

-- | The bandwidth of the connection.
interconnect_bandwidth :: Lens' Interconnect (Maybe Text)

-- | The Direct Connect endpoint that terminates the physical connection.
interconnect_awsDeviceV2 :: Lens' Interconnect (Maybe Text)

-- | The name of the service provider associated with the interconnect.
interconnect_providerName :: Lens' Interconnect (Maybe Text)

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
interconnect_awsLogicalDeviceId :: Lens' Interconnect (Maybe Text)

-- | Indicates whether the interconnect supports a secondary BGP in the
--   same address family (IPv4/IPv6).
interconnect_hasLogicalRedundancy :: Lens' Interconnect (Maybe HasLogicalRedundancy)

-- | The Direct Connect endpoint on which the physical connection
--   terminates.
interconnect_awsDevice :: Lens' Interconnect (Maybe Text)

-- | Indicates whether jumbo frames (9001 MTU) are supported.
interconnect_jumboFrameCapable :: Lens' Interconnect (Maybe Bool)

-- | The ID of the LAG.
interconnect_lagId :: Lens' Interconnect (Maybe Text)

-- | The tags associated with the interconnect.
interconnect_tags :: Lens' Interconnect (Maybe (NonEmpty Tag))

-- | The time of the most recent call to DescribeLoa for this connection.
interconnect_loaIssueTime :: Lens' Interconnect (Maybe UTCTime)

-- | The Region where the connection is located.
interconnect_region :: Lens' Interconnect (Maybe Text)

-- | The name of the interconnect.
interconnect_interconnectName :: Lens' Interconnect (Maybe Text)

-- | The state of the interconnect. The following are the possible values:
--   
--   <ul>
--   <li><tt>requested</tt>: The initial state of an interconnect. The
--   interconnect stays in the requested state until the Letter of
--   Authorization (LOA) is sent to the customer.</li>
--   <li><tt>pending</tt>: The interconnect is approved, and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is up, and the interconnect
--   is ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The interconnect is being deleted.</li>
--   <li><tt>deleted</tt>: The interconnect is deleted.</li>
--   <li><tt>unknown</tt>: The state of the interconnect is not
--   available.</li>
--   </ul>
interconnect_interconnectState :: Lens' Interconnect (Maybe InterconnectState)

-- | The location of the connection.
interconnect_location :: Lens' Interconnect (Maybe Text)

-- | Information about a link aggregation group (LAG).
--   
--   <i>See:</i> <a>newLag</a> smart constructor.
data Lag
Lag' :: Maybe Int -> Maybe Text -> Maybe Bool -> Maybe [MacSecKey] -> Maybe Text -> Maybe Text -> Maybe HasLogicalRedundancy -> Maybe Text -> Maybe [Connection] -> Maybe Text -> Maybe LagState -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (NonEmpty Tag) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Bool -> Lag

-- | The number of physical dedicated connections bundled by the LAG, up to
--   a maximum of 10.
[$sel:numberOfConnections:Lag'] :: Lag -> Maybe Int

-- | The Direct Connect endpoint that hosts the LAG.
[$sel:awsDeviceV2:Lag'] :: Lag -> Maybe Text

-- | Indicates whether the LAG can host other connections.
[$sel:allowsHostedConnections:Lag'] :: Lag -> Maybe Bool

-- | The MAC Security (MACsec) security keys associated with the LAG.
[$sel:macSecKeys:Lag'] :: Lag -> Maybe [MacSecKey]

-- | The name of the service provider associated with the LAG.
[$sel:providerName:Lag'] :: Lag -> Maybe Text

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
[$sel:awsLogicalDeviceId:Lag'] :: Lag -> Maybe Text

-- | Indicates whether the LAG supports a secondary BGP peer in the same
--   address family (IPv4/IPv6).
[$sel:hasLogicalRedundancy:Lag'] :: Lag -> Maybe HasLogicalRedundancy

-- | The name of the LAG.
[$sel:lagName:Lag'] :: Lag -> Maybe Text

-- | The connections bundled by the LAG.
[$sel:connections:Lag'] :: Lag -> Maybe [Connection]

-- | The Direct Connect endpoint that hosts the LAG.
[$sel:awsDevice:Lag'] :: Lag -> Maybe Text

-- | The state of the LAG. The following are the possible values:
--   
--   <ul>
--   <li><tt>requested</tt>: The initial state of a LAG. The LAG stays in
--   the requested state until the Letter of Authorization (LOA) is
--   available.</li>
--   <li><tt>pending</tt>: The LAG has been approved and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is established and the LAG is
--   ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The LAG is being deleted.</li>
--   <li><tt>deleted</tt>: The LAG is deleted.</li>
--   <li><tt>unknown</tt>: The state of the LAG is not available.</li>
--   </ul>
[$sel:lagState:Lag'] :: Lag -> Maybe LagState

-- | Indicates whether jumbo frames (9001 MTU) are supported.
[$sel:jumboFrameCapable:Lag'] :: Lag -> Maybe Bool

-- | The individual bandwidth of the physical connections bundled by the
--   LAG. The possible values are 1Gbps and 10Gbps.
[$sel:connectionsBandwidth:Lag'] :: Lag -> Maybe Text

-- | The ID of the LAG.
[$sel:lagId:Lag'] :: Lag -> Maybe Text

-- | The LAG MAC Security (MACsec) encryption mode.
--   
--   The valid values are <tt>no_encrypt</tt>, <tt>should_encrypt</tt>, and
--   <tt>must_encrypt</tt>.
[$sel:encryptionMode:Lag'] :: Lag -> Maybe Text

-- | The tags associated with the LAG.
[$sel:tags:Lag'] :: Lag -> Maybe (NonEmpty Tag)

-- | The ID of the account that owns the LAG.
[$sel:ownerAccount:Lag'] :: Lag -> Maybe Text

-- | The Region where the connection is located.
[$sel:region:Lag'] :: Lag -> Maybe Text

-- | The location of the LAG.
[$sel:location:Lag'] :: Lag -> Maybe Text

-- | The minimum number of physical dedicated connections that must be
--   operational for the LAG itself to be operational.
[$sel:minimumLinks:Lag'] :: Lag -> Maybe Int

-- | Indicates whether the LAG supports MAC Security (MACsec).
[$sel:macSecCapable:Lag'] :: Lag -> Maybe Bool

-- | Create a value of <a>Lag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:numberOfConnections:Lag'</a>, <a>lag_numberOfConnections</a> -
--   The number of physical dedicated connections bundled by the LAG, up to
--   a maximum of 10.
--   
--   <a>$sel:awsDeviceV2:Lag'</a>, <a>lag_awsDeviceV2</a> - The Direct
--   Connect endpoint that hosts the LAG.
--   
--   <a>$sel:allowsHostedConnections:Lag'</a>,
--   <a>lag_allowsHostedConnections</a> - Indicates whether the LAG can
--   host other connections.
--   
--   <a>$sel:macSecKeys:Lag'</a>, <a>lag_macSecKeys</a> - The MAC Security
--   (MACsec) security keys associated with the LAG.
--   
--   <a>$sel:providerName:Lag'</a>, <a>lag_providerName</a> - The name of
--   the service provider associated with the LAG.
--   
--   <a>$sel:awsLogicalDeviceId:Lag'</a>, <a>lag_awsLogicalDeviceId</a> -
--   The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
--   
--   <a>$sel:hasLogicalRedundancy:Lag'</a>, <a>lag_hasLogicalRedundancy</a>
--   - Indicates whether the LAG supports a secondary BGP peer in the same
--   address family (IPv4/IPv6).
--   
--   <a>$sel:lagName:Lag'</a>, <a>lag_lagName</a> - The name of the LAG.
--   
--   <a>$sel:connections:Lag'</a>, <a>lag_connections</a> - The connections
--   bundled by the LAG.
--   
--   <a>$sel:awsDevice:Lag'</a>, <a>lag_awsDevice</a> - The Direct Connect
--   endpoint that hosts the LAG.
--   
--   <a>$sel:lagState:Lag'</a>, <a>lag_lagState</a> - The state of the LAG.
--   The following are the possible values:
--   
--   <ul>
--   <li><tt>requested</tt>: The initial state of a LAG. The LAG stays in
--   the requested state until the Letter of Authorization (LOA) is
--   available.</li>
--   <li><tt>pending</tt>: The LAG has been approved and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is established and the LAG is
--   ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The LAG is being deleted.</li>
--   <li><tt>deleted</tt>: The LAG is deleted.</li>
--   <li><tt>unknown</tt>: The state of the LAG is not available.</li>
--   </ul>
--   
--   <a>$sel:jumboFrameCapable:Lag'</a>, <a>lag_jumboFrameCapable</a> -
--   Indicates whether jumbo frames (9001 MTU) are supported.
--   
--   <a>$sel:connectionsBandwidth:Lag'</a>, <a>lag_connectionsBandwidth</a>
--   - The individual bandwidth of the physical connections bundled by the
--   LAG. The possible values are 1Gbps and 10Gbps.
--   
--   <a>$sel:lagId:Lag'</a>, <a>lag_lagId</a> - The ID of the LAG.
--   
--   <a>$sel:encryptionMode:Lag'</a>, <a>lag_encryptionMode</a> - The LAG
--   MAC Security (MACsec) encryption mode.
--   
--   The valid values are <tt>no_encrypt</tt>, <tt>should_encrypt</tt>, and
--   <tt>must_encrypt</tt>.
--   
--   <a>$sel:tags:Lag'</a>, <a>lag_tags</a> - The tags associated with the
--   LAG.
--   
--   <a>$sel:ownerAccount:Lag'</a>, <a>lag_ownerAccount</a> - The ID of the
--   account that owns the LAG.
--   
--   <a>$sel:region:Lag'</a>, <a>lag_region</a> - The Region where the
--   connection is located.
--   
--   <a>$sel:location:Lag'</a>, <a>lag_location</a> - The location of the
--   LAG.
--   
--   <a>$sel:minimumLinks:Lag'</a>, <a>lag_minimumLinks</a> - The minimum
--   number of physical dedicated connections that must be operational for
--   the LAG itself to be operational.
--   
--   <a>$sel:macSecCapable:Lag'</a>, <a>lag_macSecCapable</a> - Indicates
--   whether the LAG supports MAC Security (MACsec).
newLag :: Lag

-- | The number of physical dedicated connections bundled by the LAG, up to
--   a maximum of 10.
lag_numberOfConnections :: Lens' Lag (Maybe Int)

-- | The Direct Connect endpoint that hosts the LAG.
lag_awsDeviceV2 :: Lens' Lag (Maybe Text)

-- | Indicates whether the LAG can host other connections.
lag_allowsHostedConnections :: Lens' Lag (Maybe Bool)

-- | The MAC Security (MACsec) security keys associated with the LAG.
lag_macSecKeys :: Lens' Lag (Maybe [MacSecKey])

-- | The name of the service provider associated with the LAG.
lag_providerName :: Lens' Lag (Maybe Text)

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
lag_awsLogicalDeviceId :: Lens' Lag (Maybe Text)

-- | Indicates whether the LAG supports a secondary BGP peer in the same
--   address family (IPv4/IPv6).
lag_hasLogicalRedundancy :: Lens' Lag (Maybe HasLogicalRedundancy)

-- | The name of the LAG.
lag_lagName :: Lens' Lag (Maybe Text)

-- | The connections bundled by the LAG.
lag_connections :: Lens' Lag (Maybe [Connection])

-- | The Direct Connect endpoint that hosts the LAG.
lag_awsDevice :: Lens' Lag (Maybe Text)

-- | The state of the LAG. The following are the possible values:
--   
--   <ul>
--   <li><tt>requested</tt>: The initial state of a LAG. The LAG stays in
--   the requested state until the Letter of Authorization (LOA) is
--   available.</li>
--   <li><tt>pending</tt>: The LAG has been approved and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is established and the LAG is
--   ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The LAG is being deleted.</li>
--   <li><tt>deleted</tt>: The LAG is deleted.</li>
--   <li><tt>unknown</tt>: The state of the LAG is not available.</li>
--   </ul>
lag_lagState :: Lens' Lag (Maybe LagState)

-- | Indicates whether jumbo frames (9001 MTU) are supported.
lag_jumboFrameCapable :: Lens' Lag (Maybe Bool)

-- | The individual bandwidth of the physical connections bundled by the
--   LAG. The possible values are 1Gbps and 10Gbps.
lag_connectionsBandwidth :: Lens' Lag (Maybe Text)

-- | The ID of the LAG.
lag_lagId :: Lens' Lag (Maybe Text)

-- | The LAG MAC Security (MACsec) encryption mode.
--   
--   The valid values are <tt>no_encrypt</tt>, <tt>should_encrypt</tt>, and
--   <tt>must_encrypt</tt>.
lag_encryptionMode :: Lens' Lag (Maybe Text)

-- | The tags associated with the LAG.
lag_tags :: Lens' Lag (Maybe (NonEmpty Tag))

-- | The ID of the account that owns the LAG.
lag_ownerAccount :: Lens' Lag (Maybe Text)

-- | The Region where the connection is located.
lag_region :: Lens' Lag (Maybe Text)

-- | The location of the LAG.
lag_location :: Lens' Lag (Maybe Text)

-- | The minimum number of physical dedicated connections that must be
--   operational for the LAG itself to be operational.
lag_minimumLinks :: Lens' Lag (Maybe Int)

-- | Indicates whether the LAG supports MAC Security (MACsec).
lag_macSecCapable :: Lens' Lag (Maybe Bool)

-- | Information about an Direct Connect location.
--   
--   <i>See:</i> <a>newLocation</a> smart constructor.
data Location
Location' :: Maybe [Text] -> Maybe [Text] -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Text -> Location

-- | The available port speeds for the location.
[$sel:availablePortSpeeds:Location'] :: Location -> Maybe [Text]

-- | The available MAC Security (MACsec) port speeds for the location.
[$sel:availableMacSecPortSpeeds:Location'] :: Location -> Maybe [Text]

-- | The name of the service provider for the location.
[$sel:availableProviders:Location'] :: Location -> Maybe [Text]

-- | The code for the location.
[$sel:locationCode:Location'] :: Location -> Maybe Text

-- | The Region for the location.
[$sel:region:Location'] :: Location -> Maybe Text

-- | The name of the location. This includes the name of the colocation
--   partner and the physical site of the building.
[$sel:locationName:Location'] :: Location -> Maybe Text

-- | Create a value of <a>Location</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:availablePortSpeeds:Location'</a>,
--   <a>location_availablePortSpeeds</a> - The available port speeds for
--   the location.
--   
--   <a>$sel:availableMacSecPortSpeeds:Location'</a>,
--   <a>location_availableMacSecPortSpeeds</a> - The available MAC Security
--   (MACsec) port speeds for the location.
--   
--   <a>$sel:availableProviders:Location'</a>,
--   <a>location_availableProviders</a> - The name of the service provider
--   for the location.
--   
--   <a>$sel:locationCode:Location'</a>, <a>location_locationCode</a> - The
--   code for the location.
--   
--   <a>$sel:region:Location'</a>, <a>location_region</a> - The Region for
--   the location.
--   
--   <a>$sel:locationName:Location'</a>, <a>location_locationName</a> - The
--   name of the location. This includes the name of the colocation partner
--   and the physical site of the building.
newLocation :: Location

-- | The available port speeds for the location.
location_availablePortSpeeds :: Lens' Location (Maybe [Text])

-- | The available MAC Security (MACsec) port speeds for the location.
location_availableMacSecPortSpeeds :: Lens' Location (Maybe [Text])

-- | The name of the service provider for the location.
location_availableProviders :: Lens' Location (Maybe [Text])

-- | The code for the location.
location_locationCode :: Lens' Location (Maybe Text)

-- | The Region for the location.
location_region :: Lens' Location (Maybe Text)

-- | The name of the location. This includes the name of the colocation
--   partner and the physical site of the building.
location_locationName :: Lens' Location (Maybe Text)

-- | Information about the MAC Security (MACsec) secret key.
--   
--   <i>See:</i> <a>newMacSecKey</a> smart constructor.
data MacSecKey
MacSecKey' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> MacSecKey

-- | The date that the MAC Security (MACsec) secret key takes effect. The
--   value is displayed in UTC format.
[$sel:startOn:MacSecKey'] :: MacSecKey -> Maybe Text

-- | The Connection Key Name (CKN) for the MAC Security secret key.
[$sel:ckn:MacSecKey'] :: MacSecKey -> Maybe Text

-- | The Amazon Resource Name (ARN) of the MAC Security (MACsec) secret
--   key.
[$sel:secretARN:MacSecKey'] :: MacSecKey -> Maybe Text

-- | The state of the MAC Security (MACsec) secret key.
--   
--   The possible values are:
--   
--   <ul>
--   <li><tt>associating</tt>: The MAC Security (MACsec) secret key is
--   being validated and not yet associated with the connection or
--   LAG.</li>
--   <li><tt>associated</tt>: The MAC Security (MACsec) secret key is
--   validated and associated with the connection or LAG.</li>
--   <li><tt>disassociating</tt>: The MAC Security (MACsec) secret key is
--   being disassociated from the connection or LAG</li>
--   <li><tt>disassociated</tt>: The MAC Security (MACsec) secret key is no
--   longer associated with the connection or LAG.</li>
--   </ul>
[$sel:state:MacSecKey'] :: MacSecKey -> Maybe Text

-- | Create a value of <a>MacSecKey</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:startOn:MacSecKey'</a>, <a>macSecKey_startOn</a> - The date
--   that the MAC Security (MACsec) secret key takes effect. The value is
--   displayed in UTC format.
--   
--   <a>$sel:ckn:MacSecKey'</a>, <a>macSecKey_ckn</a> - The Connection Key
--   Name (CKN) for the MAC Security secret key.
--   
--   <a>$sel:secretARN:MacSecKey'</a>, <a>macSecKey_secretARN</a> - The
--   Amazon Resource Name (ARN) of the MAC Security (MACsec) secret key.
--   
--   <a>$sel:state:MacSecKey'</a>, <a>macSecKey_state</a> - The state of
--   the MAC Security (MACsec) secret key.
--   
--   The possible values are:
--   
--   <ul>
--   <li><tt>associating</tt>: The MAC Security (MACsec) secret key is
--   being validated and not yet associated with the connection or
--   LAG.</li>
--   <li><tt>associated</tt>: The MAC Security (MACsec) secret key is
--   validated and associated with the connection or LAG.</li>
--   <li><tt>disassociating</tt>: The MAC Security (MACsec) secret key is
--   being disassociated from the connection or LAG</li>
--   <li><tt>disassociated</tt>: The MAC Security (MACsec) secret key is no
--   longer associated with the connection or LAG.</li>
--   </ul>
newMacSecKey :: MacSecKey

-- | The date that the MAC Security (MACsec) secret key takes effect. The
--   value is displayed in UTC format.
macSecKey_startOn :: Lens' MacSecKey (Maybe Text)

-- | The Connection Key Name (CKN) for the MAC Security secret key.
macSecKey_ckn :: Lens' MacSecKey (Maybe Text)

-- | The Amazon Resource Name (ARN) of the MAC Security (MACsec) secret
--   key.
macSecKey_secretARN :: Lens' MacSecKey (Maybe Text)

-- | The state of the MAC Security (MACsec) secret key.
--   
--   The possible values are:
--   
--   <ul>
--   <li><tt>associating</tt>: The MAC Security (MACsec) secret key is
--   being validated and not yet associated with the connection or
--   LAG.</li>
--   <li><tt>associated</tt>: The MAC Security (MACsec) secret key is
--   validated and associated with the connection or LAG.</li>
--   <li><tt>disassociating</tt>: The MAC Security (MACsec) secret key is
--   being disassociated from the connection or LAG</li>
--   <li><tt>disassociated</tt>: The MAC Security (MACsec) secret key is no
--   longer associated with the connection or LAG.</li>
--   </ul>
macSecKey_state :: Lens' MacSecKey (Maybe Text)

-- | Information about a new BGP peer.
--   
--   <i>See:</i> <a>newNewBGPPeer</a> smart constructor.
data NewBGPPeer
NewBGPPeer' :: Maybe Text -> Maybe Int -> Maybe Text -> Maybe AddressFamily -> Maybe Text -> NewBGPPeer

-- | The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
[$sel:authKey:NewBGPPeer'] :: NewBGPPeer -> Maybe Text

-- | The autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
[$sel:asn:NewBGPPeer'] :: NewBGPPeer -> Maybe Int

-- | The IP address assigned to the Amazon interface.
[$sel:amazonAddress:NewBGPPeer'] :: NewBGPPeer -> Maybe Text

-- | The address family for the BGP peer.
[$sel:addressFamily:NewBGPPeer'] :: NewBGPPeer -> Maybe AddressFamily

-- | The IP address assigned to the customer interface.
[$sel:customerAddress:NewBGPPeer'] :: NewBGPPeer -> Maybe Text

-- | Create a value of <a>NewBGPPeer</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authKey:NewBGPPeer'</a>, <a>newBGPPeer_authKey</a> - The
--   authentication key for BGP configuration. This string has a minimum
--   length of 6 characters and and a maximun lenth of 80 characters.
--   
--   <a>$sel:asn:NewBGPPeer'</a>, <a>newBGPPeer_asn</a> - The autonomous
--   system (AS) number for Border Gateway Protocol (BGP) configuration.
--   
--   <a>$sel:amazonAddress:NewBGPPeer'</a>, <a>newBGPPeer_amazonAddress</a>
--   - The IP address assigned to the Amazon interface.
--   
--   <a>$sel:addressFamily:NewBGPPeer'</a>, <a>newBGPPeer_addressFamily</a>
--   - The address family for the BGP peer.
--   
--   <a>$sel:customerAddress:NewBGPPeer'</a>,
--   <a>newBGPPeer_customerAddress</a> - The IP address assigned to the
--   customer interface.
newNewBGPPeer :: NewBGPPeer

-- | The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
newBGPPeer_authKey :: Lens' NewBGPPeer (Maybe Text)

-- | The autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
newBGPPeer_asn :: Lens' NewBGPPeer (Maybe Int)

-- | The IP address assigned to the Amazon interface.
newBGPPeer_amazonAddress :: Lens' NewBGPPeer (Maybe Text)

-- | The address family for the BGP peer.
newBGPPeer_addressFamily :: Lens' NewBGPPeer (Maybe AddressFamily)

-- | The IP address assigned to the customer interface.
newBGPPeer_customerAddress :: Lens' NewBGPPeer (Maybe Text)

-- | Information about a private virtual interface.
--   
--   <i>See:</i> <a>newNewPrivateVirtualInterface</a> smart constructor.
data NewPrivateVirtualInterface
NewPrivateVirtualInterface' :: Maybe Text -> Maybe Text -> Maybe Int -> Maybe (NonEmpty Tag) -> Maybe Text -> Maybe Text -> Maybe AddressFamily -> Maybe Text -> Text -> Int -> Int -> NewPrivateVirtualInterface

-- | The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
[$sel:authKey:NewPrivateVirtualInterface'] :: NewPrivateVirtualInterface -> Maybe Text

-- | The ID of the virtual private gateway.
[$sel:virtualGatewayId:NewPrivateVirtualInterface'] :: NewPrivateVirtualInterface -> Maybe Text

-- | The maximum transmission unit (MTU), in bytes. The supported values
--   are 1500 and 9001. The default value is 1500.
[$sel:mtu:NewPrivateVirtualInterface'] :: NewPrivateVirtualInterface -> Maybe Int

-- | The tags associated with the private virtual interface.
[$sel:tags:NewPrivateVirtualInterface'] :: NewPrivateVirtualInterface -> Maybe (NonEmpty Tag)

-- | The ID of the Direct Connect gateway.
[$sel:directConnectGatewayId:NewPrivateVirtualInterface'] :: NewPrivateVirtualInterface -> Maybe Text

-- | The IP address assigned to the Amazon interface.
[$sel:amazonAddress:NewPrivateVirtualInterface'] :: NewPrivateVirtualInterface -> Maybe Text

-- | The address family for the BGP peer.
[$sel:addressFamily:NewPrivateVirtualInterface'] :: NewPrivateVirtualInterface -> Maybe AddressFamily

-- | The IP address assigned to the customer interface.
[$sel:customerAddress:NewPrivateVirtualInterface'] :: NewPrivateVirtualInterface -> Maybe Text

-- | The name of the virtual interface assigned by the customer network.
--   The name has a maximum of 100 characters. The following are valid
--   characters: a-z, 0-9 and a hyphen (-).
[$sel:virtualInterfaceName:NewPrivateVirtualInterface'] :: NewPrivateVirtualInterface -> Text

-- | The ID of the VLAN.
[$sel:vlan:NewPrivateVirtualInterface'] :: NewPrivateVirtualInterface -> Int

-- | The autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
--   
--   The valid values are 1-2147483647.
[$sel:asn:NewPrivateVirtualInterface'] :: NewPrivateVirtualInterface -> Int

-- | Create a value of <a>NewPrivateVirtualInterface</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authKey:NewPrivateVirtualInterface'</a>,
--   <a>newPrivateVirtualInterface_authKey</a> - The authentication key for
--   BGP configuration. This string has a minimum length of 6 characters
--   and and a maximun lenth of 80 characters.
--   
--   <a>$sel:virtualGatewayId:NewPrivateVirtualInterface'</a>,
--   <a>newPrivateVirtualInterface_virtualGatewayId</a> - The ID of the
--   virtual private gateway.
--   
--   <a>$sel:mtu:NewPrivateVirtualInterface'</a>,
--   <a>newPrivateVirtualInterface_mtu</a> - The maximum transmission unit
--   (MTU), in bytes. The supported values are 1500 and 9001. The default
--   value is 1500.
--   
--   <a>$sel:tags:NewPrivateVirtualInterface'</a>,
--   <a>newPrivateVirtualInterface_tags</a> - The tags associated with the
--   private virtual interface.
--   
--   <a>$sel:directConnectGatewayId:NewPrivateVirtualInterface'</a>,
--   <a>newPrivateVirtualInterface_directConnectGatewayId</a> - The ID of
--   the Direct Connect gateway.
--   
--   <a>$sel:amazonAddress:NewPrivateVirtualInterface'</a>,
--   <a>newPrivateVirtualInterface_amazonAddress</a> - The IP address
--   assigned to the Amazon interface.
--   
--   <a>$sel:addressFamily:NewPrivateVirtualInterface'</a>,
--   <a>newPrivateVirtualInterface_addressFamily</a> - The address family
--   for the BGP peer.
--   
--   <a>$sel:customerAddress:NewPrivateVirtualInterface'</a>,
--   <a>newPrivateVirtualInterface_customerAddress</a> - The IP address
--   assigned to the customer interface.
--   
--   <a>$sel:virtualInterfaceName:NewPrivateVirtualInterface'</a>,
--   <a>newPrivateVirtualInterface_virtualInterfaceName</a> - The name of
--   the virtual interface assigned by the customer network. The name has a
--   maximum of 100 characters. The following are valid characters: a-z,
--   0-9 and a hyphen (-).
--   
--   <a>$sel:vlan:NewPrivateVirtualInterface'</a>,
--   <a>newPrivateVirtualInterface_vlan</a> - The ID of the VLAN.
--   
--   <a>$sel:asn:NewPrivateVirtualInterface'</a>,
--   <a>newPrivateVirtualInterface_asn</a> - The autonomous system (AS)
--   number for Border Gateway Protocol (BGP) configuration.
--   
--   The valid values are 1-2147483647.
newNewPrivateVirtualInterface :: Text -> Int -> Int -> NewPrivateVirtualInterface

-- | The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
newPrivateVirtualInterface_authKey :: Lens' NewPrivateVirtualInterface (Maybe Text)

-- | The ID of the virtual private gateway.
newPrivateVirtualInterface_virtualGatewayId :: Lens' NewPrivateVirtualInterface (Maybe Text)

-- | The maximum transmission unit (MTU), in bytes. The supported values
--   are 1500 and 9001. The default value is 1500.
newPrivateVirtualInterface_mtu :: Lens' NewPrivateVirtualInterface (Maybe Int)

-- | The tags associated with the private virtual interface.
newPrivateVirtualInterface_tags :: Lens' NewPrivateVirtualInterface (Maybe (NonEmpty Tag))

-- | The ID of the Direct Connect gateway.
newPrivateVirtualInterface_directConnectGatewayId :: Lens' NewPrivateVirtualInterface (Maybe Text)

-- | The IP address assigned to the Amazon interface.
newPrivateVirtualInterface_amazonAddress :: Lens' NewPrivateVirtualInterface (Maybe Text)

-- | The address family for the BGP peer.
newPrivateVirtualInterface_addressFamily :: Lens' NewPrivateVirtualInterface (Maybe AddressFamily)

-- | The IP address assigned to the customer interface.
newPrivateVirtualInterface_customerAddress :: Lens' NewPrivateVirtualInterface (Maybe Text)

-- | The name of the virtual interface assigned by the customer network.
--   The name has a maximum of 100 characters. The following are valid
--   characters: a-z, 0-9 and a hyphen (-).
newPrivateVirtualInterface_virtualInterfaceName :: Lens' NewPrivateVirtualInterface Text

-- | The ID of the VLAN.
newPrivateVirtualInterface_vlan :: Lens' NewPrivateVirtualInterface Int

-- | The autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
--   
--   The valid values are 1-2147483647.
newPrivateVirtualInterface_asn :: Lens' NewPrivateVirtualInterface Int

-- | Information about a private virtual interface to be provisioned on a
--   connection.
--   
--   <i>See:</i> <a>newNewPrivateVirtualInterfaceAllocation</a> smart
--   constructor.
data NewPrivateVirtualInterfaceAllocation
NewPrivateVirtualInterfaceAllocation' :: Maybe Text -> Maybe Int -> Maybe (NonEmpty Tag) -> Maybe Text -> Maybe AddressFamily -> Maybe Text -> Text -> Int -> Int -> NewPrivateVirtualInterfaceAllocation

-- | The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
[$sel:authKey:NewPrivateVirtualInterfaceAllocation'] :: NewPrivateVirtualInterfaceAllocation -> Maybe Text

-- | The maximum transmission unit (MTU), in bytes. The supported values
--   are 1500 and 9001. The default value is 1500.
[$sel:mtu:NewPrivateVirtualInterfaceAllocation'] :: NewPrivateVirtualInterfaceAllocation -> Maybe Int

-- | The tags associated with the private virtual interface.
[$sel:tags:NewPrivateVirtualInterfaceAllocation'] :: NewPrivateVirtualInterfaceAllocation -> Maybe (NonEmpty Tag)

-- | The IP address assigned to the Amazon interface.
[$sel:amazonAddress:NewPrivateVirtualInterfaceAllocation'] :: NewPrivateVirtualInterfaceAllocation -> Maybe Text

-- | The address family for the BGP peer.
[$sel:addressFamily:NewPrivateVirtualInterfaceAllocation'] :: NewPrivateVirtualInterfaceAllocation -> Maybe AddressFamily

-- | The IP address assigned to the customer interface.
[$sel:customerAddress:NewPrivateVirtualInterfaceAllocation'] :: NewPrivateVirtualInterfaceAllocation -> Maybe Text

-- | The name of the virtual interface assigned by the customer network.
--   The name has a maximum of 100 characters. The following are valid
--   characters: a-z, 0-9 and a hyphen (-).
[$sel:virtualInterfaceName:NewPrivateVirtualInterfaceAllocation'] :: NewPrivateVirtualInterfaceAllocation -> Text

-- | The ID of the VLAN.
[$sel:vlan:NewPrivateVirtualInterfaceAllocation'] :: NewPrivateVirtualInterfaceAllocation -> Int

-- | The autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
--   
--   The valid values are 1-2147483647.
[$sel:asn:NewPrivateVirtualInterfaceAllocation'] :: NewPrivateVirtualInterfaceAllocation -> Int

-- | Create a value of <a>NewPrivateVirtualInterfaceAllocation</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authKey:NewPrivateVirtualInterfaceAllocation'</a>,
--   <a>newPrivateVirtualInterfaceAllocation_authKey</a> - The
--   authentication key for BGP configuration. This string has a minimum
--   length of 6 characters and and a maximun lenth of 80 characters.
--   
--   <a>$sel:mtu:NewPrivateVirtualInterfaceAllocation'</a>,
--   <a>newPrivateVirtualInterfaceAllocation_mtu</a> - The maximum
--   transmission unit (MTU), in bytes. The supported values are 1500 and
--   9001. The default value is 1500.
--   
--   <a>$sel:tags:NewPrivateVirtualInterfaceAllocation'</a>,
--   <a>newPrivateVirtualInterfaceAllocation_tags</a> - The tags associated
--   with the private virtual interface.
--   
--   <a>$sel:amazonAddress:NewPrivateVirtualInterfaceAllocation'</a>,
--   <a>newPrivateVirtualInterfaceAllocation_amazonAddress</a> - The IP
--   address assigned to the Amazon interface.
--   
--   <a>$sel:addressFamily:NewPrivateVirtualInterfaceAllocation'</a>,
--   <a>newPrivateVirtualInterfaceAllocation_addressFamily</a> - The
--   address family for the BGP peer.
--   
--   <a>$sel:customerAddress:NewPrivateVirtualInterfaceAllocation'</a>,
--   <a>newPrivateVirtualInterfaceAllocation_customerAddress</a> - The IP
--   address assigned to the customer interface.
--   
--   
--   <a>$sel:virtualInterfaceName:NewPrivateVirtualInterfaceAllocation'</a>,
--   <a>newPrivateVirtualInterfaceAllocation_virtualInterfaceName</a> - The
--   name of the virtual interface assigned by the customer network. The
--   name has a maximum of 100 characters. The following are valid
--   characters: a-z, 0-9 and a hyphen (-).
--   
--   <a>$sel:vlan:NewPrivateVirtualInterfaceAllocation'</a>,
--   <a>newPrivateVirtualInterfaceAllocation_vlan</a> - The ID of the VLAN.
--   
--   <a>$sel:asn:NewPrivateVirtualInterfaceAllocation'</a>,
--   <a>newPrivateVirtualInterfaceAllocation_asn</a> - The autonomous
--   system (AS) number for Border Gateway Protocol (BGP) configuration.
--   
--   The valid values are 1-2147483647.
newNewPrivateVirtualInterfaceAllocation :: Text -> Int -> Int -> NewPrivateVirtualInterfaceAllocation

-- | The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
newPrivateVirtualInterfaceAllocation_authKey :: Lens' NewPrivateVirtualInterfaceAllocation (Maybe Text)

-- | The maximum transmission unit (MTU), in bytes. The supported values
--   are 1500 and 9001. The default value is 1500.
newPrivateVirtualInterfaceAllocation_mtu :: Lens' NewPrivateVirtualInterfaceAllocation (Maybe Int)

-- | The tags associated with the private virtual interface.
newPrivateVirtualInterfaceAllocation_tags :: Lens' NewPrivateVirtualInterfaceAllocation (Maybe (NonEmpty Tag))

-- | The IP address assigned to the Amazon interface.
newPrivateVirtualInterfaceAllocation_amazonAddress :: Lens' NewPrivateVirtualInterfaceAllocation (Maybe Text)

-- | The address family for the BGP peer.
newPrivateVirtualInterfaceAllocation_addressFamily :: Lens' NewPrivateVirtualInterfaceAllocation (Maybe AddressFamily)

-- | The IP address assigned to the customer interface.
newPrivateVirtualInterfaceAllocation_customerAddress :: Lens' NewPrivateVirtualInterfaceAllocation (Maybe Text)

-- | The name of the virtual interface assigned by the customer network.
--   The name has a maximum of 100 characters. The following are valid
--   characters: a-z, 0-9 and a hyphen (-).
newPrivateVirtualInterfaceAllocation_virtualInterfaceName :: Lens' NewPrivateVirtualInterfaceAllocation Text

-- | The ID of the VLAN.
newPrivateVirtualInterfaceAllocation_vlan :: Lens' NewPrivateVirtualInterfaceAllocation Int

-- | The autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
--   
--   The valid values are 1-2147483647.
newPrivateVirtualInterfaceAllocation_asn :: Lens' NewPrivateVirtualInterfaceAllocation Int

-- | Information about a public virtual interface.
--   
--   <i>See:</i> <a>newNewPublicVirtualInterface</a> smart constructor.
data NewPublicVirtualInterface
NewPublicVirtualInterface' :: Maybe Text -> Maybe [RouteFilterPrefix] -> Maybe (NonEmpty Tag) -> Maybe Text -> Maybe AddressFamily -> Maybe Text -> Text -> Int -> Int -> NewPublicVirtualInterface

-- | The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
[$sel:authKey:NewPublicVirtualInterface'] :: NewPublicVirtualInterface -> Maybe Text

-- | The routes to be advertised to the Amazon Web Services network in this
--   Region. Applies to public virtual interfaces.
[$sel:routeFilterPrefixes:NewPublicVirtualInterface'] :: NewPublicVirtualInterface -> Maybe [RouteFilterPrefix]

-- | The tags associated with the public virtual interface.
[$sel:tags:NewPublicVirtualInterface'] :: NewPublicVirtualInterface -> Maybe (NonEmpty Tag)

-- | The IP address assigned to the Amazon interface.
[$sel:amazonAddress:NewPublicVirtualInterface'] :: NewPublicVirtualInterface -> Maybe Text

-- | The address family for the BGP peer.
[$sel:addressFamily:NewPublicVirtualInterface'] :: NewPublicVirtualInterface -> Maybe AddressFamily

-- | The IP address assigned to the customer interface.
[$sel:customerAddress:NewPublicVirtualInterface'] :: NewPublicVirtualInterface -> Maybe Text

-- | The name of the virtual interface assigned by the customer network.
--   The name has a maximum of 100 characters. The following are valid
--   characters: a-z, 0-9 and a hyphen (-).
[$sel:virtualInterfaceName:NewPublicVirtualInterface'] :: NewPublicVirtualInterface -> Text

-- | The ID of the VLAN.
[$sel:vlan:NewPublicVirtualInterface'] :: NewPublicVirtualInterface -> Int

-- | The autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
--   
--   The valid values are 1-2147483647.
[$sel:asn:NewPublicVirtualInterface'] :: NewPublicVirtualInterface -> Int

-- | Create a value of <a>NewPublicVirtualInterface</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authKey:NewPublicVirtualInterface'</a>,
--   <a>newPublicVirtualInterface_authKey</a> - The authentication key for
--   BGP configuration. This string has a minimum length of 6 characters
--   and and a maximun lenth of 80 characters.
--   
--   <a>$sel:routeFilterPrefixes:NewPublicVirtualInterface'</a>,
--   <a>newPublicVirtualInterface_routeFilterPrefixes</a> - The routes to
--   be advertised to the Amazon Web Services network in this Region.
--   Applies to public virtual interfaces.
--   
--   <a>$sel:tags:NewPublicVirtualInterface'</a>,
--   <a>newPublicVirtualInterface_tags</a> - The tags associated with the
--   public virtual interface.
--   
--   <a>$sel:amazonAddress:NewPublicVirtualInterface'</a>,
--   <a>newPublicVirtualInterface_amazonAddress</a> - The IP address
--   assigned to the Amazon interface.
--   
--   <a>$sel:addressFamily:NewPublicVirtualInterface'</a>,
--   <a>newPublicVirtualInterface_addressFamily</a> - The address family
--   for the BGP peer.
--   
--   <a>$sel:customerAddress:NewPublicVirtualInterface'</a>,
--   <a>newPublicVirtualInterface_customerAddress</a> - The IP address
--   assigned to the customer interface.
--   
--   <a>$sel:virtualInterfaceName:NewPublicVirtualInterface'</a>,
--   <a>newPublicVirtualInterface_virtualInterfaceName</a> - The name of
--   the virtual interface assigned by the customer network. The name has a
--   maximum of 100 characters. The following are valid characters: a-z,
--   0-9 and a hyphen (-).
--   
--   <a>$sel:vlan:NewPublicVirtualInterface'</a>,
--   <a>newPublicVirtualInterface_vlan</a> - The ID of the VLAN.
--   
--   <a>$sel:asn:NewPublicVirtualInterface'</a>,
--   <a>newPublicVirtualInterface_asn</a> - The autonomous system (AS)
--   number for Border Gateway Protocol (BGP) configuration.
--   
--   The valid values are 1-2147483647.
newNewPublicVirtualInterface :: Text -> Int -> Int -> NewPublicVirtualInterface

-- | The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
newPublicVirtualInterface_authKey :: Lens' NewPublicVirtualInterface (Maybe Text)

-- | The routes to be advertised to the Amazon Web Services network in this
--   Region. Applies to public virtual interfaces.
newPublicVirtualInterface_routeFilterPrefixes :: Lens' NewPublicVirtualInterface (Maybe [RouteFilterPrefix])

-- | The tags associated with the public virtual interface.
newPublicVirtualInterface_tags :: Lens' NewPublicVirtualInterface (Maybe (NonEmpty Tag))

-- | The IP address assigned to the Amazon interface.
newPublicVirtualInterface_amazonAddress :: Lens' NewPublicVirtualInterface (Maybe Text)

-- | The address family for the BGP peer.
newPublicVirtualInterface_addressFamily :: Lens' NewPublicVirtualInterface (Maybe AddressFamily)

-- | The IP address assigned to the customer interface.
newPublicVirtualInterface_customerAddress :: Lens' NewPublicVirtualInterface (Maybe Text)

-- | The name of the virtual interface assigned by the customer network.
--   The name has a maximum of 100 characters. The following are valid
--   characters: a-z, 0-9 and a hyphen (-).
newPublicVirtualInterface_virtualInterfaceName :: Lens' NewPublicVirtualInterface Text

-- | The ID of the VLAN.
newPublicVirtualInterface_vlan :: Lens' NewPublicVirtualInterface Int

-- | The autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
--   
--   The valid values are 1-2147483647.
newPublicVirtualInterface_asn :: Lens' NewPublicVirtualInterface Int

-- | Information about a public virtual interface to be provisioned on a
--   connection.
--   
--   <i>See:</i> <a>newNewPublicVirtualInterfaceAllocation</a> smart
--   constructor.
data NewPublicVirtualInterfaceAllocation
NewPublicVirtualInterfaceAllocation' :: Maybe Text -> Maybe [RouteFilterPrefix] -> Maybe (NonEmpty Tag) -> Maybe Text -> Maybe AddressFamily -> Maybe Text -> Text -> Int -> Int -> NewPublicVirtualInterfaceAllocation

-- | The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
[$sel:authKey:NewPublicVirtualInterfaceAllocation'] :: NewPublicVirtualInterfaceAllocation -> Maybe Text

-- | The routes to be advertised to the Amazon Web Services network in this
--   Region. Applies to public virtual interfaces.
[$sel:routeFilterPrefixes:NewPublicVirtualInterfaceAllocation'] :: NewPublicVirtualInterfaceAllocation -> Maybe [RouteFilterPrefix]

-- | The tags associated with the public virtual interface.
[$sel:tags:NewPublicVirtualInterfaceAllocation'] :: NewPublicVirtualInterfaceAllocation -> Maybe (NonEmpty Tag)

-- | The IP address assigned to the Amazon interface.
[$sel:amazonAddress:NewPublicVirtualInterfaceAllocation'] :: NewPublicVirtualInterfaceAllocation -> Maybe Text

-- | The address family for the BGP peer.
[$sel:addressFamily:NewPublicVirtualInterfaceAllocation'] :: NewPublicVirtualInterfaceAllocation -> Maybe AddressFamily

-- | The IP address assigned to the customer interface.
[$sel:customerAddress:NewPublicVirtualInterfaceAllocation'] :: NewPublicVirtualInterfaceAllocation -> Maybe Text

-- | The name of the virtual interface assigned by the customer network.
--   The name has a maximum of 100 characters. The following are valid
--   characters: a-z, 0-9 and a hyphen (-).
[$sel:virtualInterfaceName:NewPublicVirtualInterfaceAllocation'] :: NewPublicVirtualInterfaceAllocation -> Text

-- | The ID of the VLAN.
[$sel:vlan:NewPublicVirtualInterfaceAllocation'] :: NewPublicVirtualInterfaceAllocation -> Int

-- | The autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
--   
--   The valid values are 1-2147483647.
[$sel:asn:NewPublicVirtualInterfaceAllocation'] :: NewPublicVirtualInterfaceAllocation -> Int

-- | Create a value of <a>NewPublicVirtualInterfaceAllocation</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authKey:NewPublicVirtualInterfaceAllocation'</a>,
--   <a>newPublicVirtualInterfaceAllocation_authKey</a> - The
--   authentication key for BGP configuration. This string has a minimum
--   length of 6 characters and and a maximun lenth of 80 characters.
--   
--   <a>$sel:routeFilterPrefixes:NewPublicVirtualInterfaceAllocation'</a>,
--   <a>newPublicVirtualInterfaceAllocation_routeFilterPrefixes</a> - The
--   routes to be advertised to the Amazon Web Services network in this
--   Region. Applies to public virtual interfaces.
--   
--   <a>$sel:tags:NewPublicVirtualInterfaceAllocation'</a>,
--   <a>newPublicVirtualInterfaceAllocation_tags</a> - The tags associated
--   with the public virtual interface.
--   
--   <a>$sel:amazonAddress:NewPublicVirtualInterfaceAllocation'</a>,
--   <a>newPublicVirtualInterfaceAllocation_amazonAddress</a> - The IP
--   address assigned to the Amazon interface.
--   
--   <a>$sel:addressFamily:NewPublicVirtualInterfaceAllocation'</a>,
--   <a>newPublicVirtualInterfaceAllocation_addressFamily</a> - The address
--   family for the BGP peer.
--   
--   <a>$sel:customerAddress:NewPublicVirtualInterfaceAllocation'</a>,
--   <a>newPublicVirtualInterfaceAllocation_customerAddress</a> - The IP
--   address assigned to the customer interface.
--   
--   <a>$sel:virtualInterfaceName:NewPublicVirtualInterfaceAllocation'</a>,
--   <a>newPublicVirtualInterfaceAllocation_virtualInterfaceName</a> - The
--   name of the virtual interface assigned by the customer network. The
--   name has a maximum of 100 characters. The following are valid
--   characters: a-z, 0-9 and a hyphen (-).
--   
--   <a>$sel:vlan:NewPublicVirtualInterfaceAllocation'</a>,
--   <a>newPublicVirtualInterfaceAllocation_vlan</a> - The ID of the VLAN.
--   
--   <a>$sel:asn:NewPublicVirtualInterfaceAllocation'</a>,
--   <a>newPublicVirtualInterfaceAllocation_asn</a> - The autonomous system
--   (AS) number for Border Gateway Protocol (BGP) configuration.
--   
--   The valid values are 1-2147483647.
newNewPublicVirtualInterfaceAllocation :: Text -> Int -> Int -> NewPublicVirtualInterfaceAllocation

-- | The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
newPublicVirtualInterfaceAllocation_authKey :: Lens' NewPublicVirtualInterfaceAllocation (Maybe Text)

-- | The routes to be advertised to the Amazon Web Services network in this
--   Region. Applies to public virtual interfaces.
newPublicVirtualInterfaceAllocation_routeFilterPrefixes :: Lens' NewPublicVirtualInterfaceAllocation (Maybe [RouteFilterPrefix])

-- | The tags associated with the public virtual interface.
newPublicVirtualInterfaceAllocation_tags :: Lens' NewPublicVirtualInterfaceAllocation (Maybe (NonEmpty Tag))

-- | The IP address assigned to the Amazon interface.
newPublicVirtualInterfaceAllocation_amazonAddress :: Lens' NewPublicVirtualInterfaceAllocation (Maybe Text)

-- | The address family for the BGP peer.
newPublicVirtualInterfaceAllocation_addressFamily :: Lens' NewPublicVirtualInterfaceAllocation (Maybe AddressFamily)

-- | The IP address assigned to the customer interface.
newPublicVirtualInterfaceAllocation_customerAddress :: Lens' NewPublicVirtualInterfaceAllocation (Maybe Text)

-- | The name of the virtual interface assigned by the customer network.
--   The name has a maximum of 100 characters. The following are valid
--   characters: a-z, 0-9 and a hyphen (-).
newPublicVirtualInterfaceAllocation_virtualInterfaceName :: Lens' NewPublicVirtualInterfaceAllocation Text

-- | The ID of the VLAN.
newPublicVirtualInterfaceAllocation_vlan :: Lens' NewPublicVirtualInterfaceAllocation Int

-- | The autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
--   
--   The valid values are 1-2147483647.
newPublicVirtualInterfaceAllocation_asn :: Lens' NewPublicVirtualInterfaceAllocation Int

-- | Information about a transit virtual interface.
--   
--   <i>See:</i> <a>newNewTransitVirtualInterface</a> smart constructor.
data NewTransitVirtualInterface
NewTransitVirtualInterface' :: Maybe Text -> Maybe Int -> Maybe Int -> Maybe (NonEmpty Tag) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe AddressFamily -> Maybe Int -> Maybe Text -> NewTransitVirtualInterface

-- | The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
[$sel:authKey:NewTransitVirtualInterface'] :: NewTransitVirtualInterface -> Maybe Text

-- | The autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
--   
--   The valid values are 1-2147483647.
[$sel:asn:NewTransitVirtualInterface'] :: NewTransitVirtualInterface -> Maybe Int

-- | The maximum transmission unit (MTU), in bytes. The supported values
--   are 1500 and 9001. The default value is 1500.
[$sel:mtu:NewTransitVirtualInterface'] :: NewTransitVirtualInterface -> Maybe Int

-- | The tags associated with the transitive virtual interface.
[$sel:tags:NewTransitVirtualInterface'] :: NewTransitVirtualInterface -> Maybe (NonEmpty Tag)

-- | The ID of the Direct Connect gateway.
[$sel:directConnectGatewayId:NewTransitVirtualInterface'] :: NewTransitVirtualInterface -> Maybe Text

-- | The name of the virtual interface assigned by the customer network.
--   The name has a maximum of 100 characters. The following are valid
--   characters: a-z, 0-9 and a hyphen (-).
[$sel:virtualInterfaceName:NewTransitVirtualInterface'] :: NewTransitVirtualInterface -> Maybe Text

-- | The IP address assigned to the Amazon interface.
[$sel:amazonAddress:NewTransitVirtualInterface'] :: NewTransitVirtualInterface -> Maybe Text

-- | The address family for the BGP peer.
[$sel:addressFamily:NewTransitVirtualInterface'] :: NewTransitVirtualInterface -> Maybe AddressFamily

-- | The ID of the VLAN.
[$sel:vlan:NewTransitVirtualInterface'] :: NewTransitVirtualInterface -> Maybe Int

-- | The IP address assigned to the customer interface.
[$sel:customerAddress:NewTransitVirtualInterface'] :: NewTransitVirtualInterface -> Maybe Text

-- | Create a value of <a>NewTransitVirtualInterface</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authKey:NewTransitVirtualInterface'</a>,
--   <a>newTransitVirtualInterface_authKey</a> - The authentication key for
--   BGP configuration. This string has a minimum length of 6 characters
--   and and a maximun lenth of 80 characters.
--   
--   <a>$sel:asn:NewTransitVirtualInterface'</a>,
--   <a>newTransitVirtualInterface_asn</a> - The autonomous system (AS)
--   number for Border Gateway Protocol (BGP) configuration.
--   
--   The valid values are 1-2147483647.
--   
--   <a>$sel:mtu:NewTransitVirtualInterface'</a>,
--   <a>newTransitVirtualInterface_mtu</a> - The maximum transmission unit
--   (MTU), in bytes. The supported values are 1500 and 9001. The default
--   value is 1500.
--   
--   <a>$sel:tags:NewTransitVirtualInterface'</a>,
--   <a>newTransitVirtualInterface_tags</a> - The tags associated with the
--   transitive virtual interface.
--   
--   <a>$sel:directConnectGatewayId:NewTransitVirtualInterface'</a>,
--   <a>newTransitVirtualInterface_directConnectGatewayId</a> - The ID of
--   the Direct Connect gateway.
--   
--   <a>$sel:virtualInterfaceName:NewTransitVirtualInterface'</a>,
--   <a>newTransitVirtualInterface_virtualInterfaceName</a> - The name of
--   the virtual interface assigned by the customer network. The name has a
--   maximum of 100 characters. The following are valid characters: a-z,
--   0-9 and a hyphen (-).
--   
--   <a>$sel:amazonAddress:NewTransitVirtualInterface'</a>,
--   <a>newTransitVirtualInterface_amazonAddress</a> - The IP address
--   assigned to the Amazon interface.
--   
--   <a>$sel:addressFamily:NewTransitVirtualInterface'</a>,
--   <a>newTransitVirtualInterface_addressFamily</a> - The address family
--   for the BGP peer.
--   
--   <a>$sel:vlan:NewTransitVirtualInterface'</a>,
--   <a>newTransitVirtualInterface_vlan</a> - The ID of the VLAN.
--   
--   <a>$sel:customerAddress:NewTransitVirtualInterface'</a>,
--   <a>newTransitVirtualInterface_customerAddress</a> - The IP address
--   assigned to the customer interface.
newNewTransitVirtualInterface :: NewTransitVirtualInterface

-- | The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
newTransitVirtualInterface_authKey :: Lens' NewTransitVirtualInterface (Maybe Text)

-- | The autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
--   
--   The valid values are 1-2147483647.
newTransitVirtualInterface_asn :: Lens' NewTransitVirtualInterface (Maybe Int)

-- | The maximum transmission unit (MTU), in bytes. The supported values
--   are 1500 and 9001. The default value is 1500.
newTransitVirtualInterface_mtu :: Lens' NewTransitVirtualInterface (Maybe Int)

-- | The tags associated with the transitive virtual interface.
newTransitVirtualInterface_tags :: Lens' NewTransitVirtualInterface (Maybe (NonEmpty Tag))

-- | The ID of the Direct Connect gateway.
newTransitVirtualInterface_directConnectGatewayId :: Lens' NewTransitVirtualInterface (Maybe Text)

-- | The name of the virtual interface assigned by the customer network.
--   The name has a maximum of 100 characters. The following are valid
--   characters: a-z, 0-9 and a hyphen (-).
newTransitVirtualInterface_virtualInterfaceName :: Lens' NewTransitVirtualInterface (Maybe Text)

-- | The IP address assigned to the Amazon interface.
newTransitVirtualInterface_amazonAddress :: Lens' NewTransitVirtualInterface (Maybe Text)

-- | The address family for the BGP peer.
newTransitVirtualInterface_addressFamily :: Lens' NewTransitVirtualInterface (Maybe AddressFamily)

-- | The ID of the VLAN.
newTransitVirtualInterface_vlan :: Lens' NewTransitVirtualInterface (Maybe Int)

-- | The IP address assigned to the customer interface.
newTransitVirtualInterface_customerAddress :: Lens' NewTransitVirtualInterface (Maybe Text)

-- | Information about a transit virtual interface to be provisioned on a
--   connection.
--   
--   <i>See:</i> <a>newNewTransitVirtualInterfaceAllocation</a> smart
--   constructor.
data NewTransitVirtualInterfaceAllocation
NewTransitVirtualInterfaceAllocation' :: Maybe Text -> Maybe Int -> Maybe Int -> Maybe (NonEmpty Tag) -> Maybe Text -> Maybe Text -> Maybe AddressFamily -> Maybe Int -> Maybe Text -> NewTransitVirtualInterfaceAllocation

-- | The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
[$sel:authKey:NewTransitVirtualInterfaceAllocation'] :: NewTransitVirtualInterfaceAllocation -> Maybe Text

-- | The autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
--   
--   The valid values are 1-2147483647.
[$sel:asn:NewTransitVirtualInterfaceAllocation'] :: NewTransitVirtualInterfaceAllocation -> Maybe Int

-- | The maximum transmission unit (MTU), in bytes. The supported values
--   are 1500 and 9001. The default value is 1500.
[$sel:mtu:NewTransitVirtualInterfaceAllocation'] :: NewTransitVirtualInterfaceAllocation -> Maybe Int

-- | The tags associated with the transitive virtual interface.
[$sel:tags:NewTransitVirtualInterfaceAllocation'] :: NewTransitVirtualInterfaceAllocation -> Maybe (NonEmpty Tag)

-- | The name of the virtual interface assigned by the customer network.
--   The name has a maximum of 100 characters. The following are valid
--   characters: a-z, 0-9 and a hyphen (-).
[$sel:virtualInterfaceName:NewTransitVirtualInterfaceAllocation'] :: NewTransitVirtualInterfaceAllocation -> Maybe Text

-- | The IP address assigned to the Amazon interface.
[$sel:amazonAddress:NewTransitVirtualInterfaceAllocation'] :: NewTransitVirtualInterfaceAllocation -> Maybe Text

-- | The address family for the BGP peer.
[$sel:addressFamily:NewTransitVirtualInterfaceAllocation'] :: NewTransitVirtualInterfaceAllocation -> Maybe AddressFamily

-- | The ID of the VLAN.
[$sel:vlan:NewTransitVirtualInterfaceAllocation'] :: NewTransitVirtualInterfaceAllocation -> Maybe Int

-- | The IP address assigned to the customer interface.
[$sel:customerAddress:NewTransitVirtualInterfaceAllocation'] :: NewTransitVirtualInterfaceAllocation -> Maybe Text

-- | Create a value of <a>NewTransitVirtualInterfaceAllocation</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authKey:NewTransitVirtualInterfaceAllocation'</a>,
--   <a>newTransitVirtualInterfaceAllocation_authKey</a> - The
--   authentication key for BGP configuration. This string has a minimum
--   length of 6 characters and and a maximun lenth of 80 characters.
--   
--   <a>$sel:asn:NewTransitVirtualInterfaceAllocation'</a>,
--   <a>newTransitVirtualInterfaceAllocation_asn</a> - The autonomous
--   system (AS) number for Border Gateway Protocol (BGP) configuration.
--   
--   The valid values are 1-2147483647.
--   
--   <a>$sel:mtu:NewTransitVirtualInterfaceAllocation'</a>,
--   <a>newTransitVirtualInterfaceAllocation_mtu</a> - The maximum
--   transmission unit (MTU), in bytes. The supported values are 1500 and
--   9001. The default value is 1500.
--   
--   <a>$sel:tags:NewTransitVirtualInterfaceAllocation'</a>,
--   <a>newTransitVirtualInterfaceAllocation_tags</a> - The tags associated
--   with the transitive virtual interface.
--   
--   
--   <a>$sel:virtualInterfaceName:NewTransitVirtualInterfaceAllocation'</a>,
--   <a>newTransitVirtualInterfaceAllocation_virtualInterfaceName</a> - The
--   name of the virtual interface assigned by the customer network. The
--   name has a maximum of 100 characters. The following are valid
--   characters: a-z, 0-9 and a hyphen (-).
--   
--   <a>$sel:amazonAddress:NewTransitVirtualInterfaceAllocation'</a>,
--   <a>newTransitVirtualInterfaceAllocation_amazonAddress</a> - The IP
--   address assigned to the Amazon interface.
--   
--   <a>$sel:addressFamily:NewTransitVirtualInterfaceAllocation'</a>,
--   <a>newTransitVirtualInterfaceAllocation_addressFamily</a> - The
--   address family for the BGP peer.
--   
--   <a>$sel:vlan:NewTransitVirtualInterfaceAllocation'</a>,
--   <a>newTransitVirtualInterfaceAllocation_vlan</a> - The ID of the VLAN.
--   
--   <a>$sel:customerAddress:NewTransitVirtualInterfaceAllocation'</a>,
--   <a>newTransitVirtualInterfaceAllocation_customerAddress</a> - The IP
--   address assigned to the customer interface.
newNewTransitVirtualInterfaceAllocation :: NewTransitVirtualInterfaceAllocation

-- | The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
newTransitVirtualInterfaceAllocation_authKey :: Lens' NewTransitVirtualInterfaceAllocation (Maybe Text)

-- | The autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
--   
--   The valid values are 1-2147483647.
newTransitVirtualInterfaceAllocation_asn :: Lens' NewTransitVirtualInterfaceAllocation (Maybe Int)

-- | The maximum transmission unit (MTU), in bytes. The supported values
--   are 1500 and 9001. The default value is 1500.
newTransitVirtualInterfaceAllocation_mtu :: Lens' NewTransitVirtualInterfaceAllocation (Maybe Int)

-- | The tags associated with the transitive virtual interface.
newTransitVirtualInterfaceAllocation_tags :: Lens' NewTransitVirtualInterfaceAllocation (Maybe (NonEmpty Tag))

-- | The name of the virtual interface assigned by the customer network.
--   The name has a maximum of 100 characters. The following are valid
--   characters: a-z, 0-9 and a hyphen (-).
newTransitVirtualInterfaceAllocation_virtualInterfaceName :: Lens' NewTransitVirtualInterfaceAllocation (Maybe Text)

-- | The IP address assigned to the Amazon interface.
newTransitVirtualInterfaceAllocation_amazonAddress :: Lens' NewTransitVirtualInterfaceAllocation (Maybe Text)

-- | The address family for the BGP peer.
newTransitVirtualInterfaceAllocation_addressFamily :: Lens' NewTransitVirtualInterfaceAllocation (Maybe AddressFamily)

-- | The ID of the VLAN.
newTransitVirtualInterfaceAllocation_vlan :: Lens' NewTransitVirtualInterfaceAllocation (Maybe Int)

-- | The IP address assigned to the customer interface.
newTransitVirtualInterfaceAllocation_customerAddress :: Lens' NewTransitVirtualInterfaceAllocation (Maybe Text)

-- | Information about a tag associated with an Direct Connect resource.
--   
--   <i>See:</i> <a>newResourceTag</a> smart constructor.
data ResourceTag
ResourceTag' :: Maybe Text -> Maybe (NonEmpty Tag) -> ResourceTag

-- | The Amazon Resource Name (ARN) of the resource.
[$sel:resourceArn:ResourceTag'] :: ResourceTag -> Maybe Text

-- | The tags.
[$sel:tags:ResourceTag'] :: ResourceTag -> Maybe (NonEmpty Tag)

-- | Create a value of <a>ResourceTag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ResourceTag'</a>, <a>resourceTag_resourceArn</a> -
--   The Amazon Resource Name (ARN) of the resource.
--   
--   <a>$sel:tags:ResourceTag'</a>, <a>resourceTag_tags</a> - The tags.
newResourceTag :: ResourceTag

-- | The Amazon Resource Name (ARN) of the resource.
resourceTag_resourceArn :: Lens' ResourceTag (Maybe Text)

-- | The tags.
resourceTag_tags :: Lens' ResourceTag (Maybe (NonEmpty Tag))

-- | Information about a route filter prefix that a customer can advertise
--   through Border Gateway Protocol (BGP) over a public virtual interface.
--   
--   <i>See:</i> <a>newRouteFilterPrefix</a> smart constructor.
data RouteFilterPrefix
RouteFilterPrefix' :: Maybe Text -> RouteFilterPrefix

-- | The CIDR block for the advertised route. Separate multiple routes
--   using commas. An IPv6 CIDR must use /64 or shorter.
[$sel:cidr:RouteFilterPrefix'] :: RouteFilterPrefix -> Maybe Text

-- | Create a value of <a>RouteFilterPrefix</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cidr:RouteFilterPrefix'</a>, <a>routeFilterPrefix_cidr</a> -
--   The CIDR block for the advertised route. Separate multiple routes
--   using commas. An IPv6 CIDR must use /64 or shorter.
newRouteFilterPrefix :: RouteFilterPrefix

-- | The CIDR block for the advertised route. Separate multiple routes
--   using commas. An IPv6 CIDR must use /64 or shorter.
routeFilterPrefix_cidr :: Lens' RouteFilterPrefix (Maybe Text)

-- | Information about a tag.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Maybe Text -> Text -> Tag

-- | The value.
[$sel:value:Tag'] :: Tag -> Maybe Text

-- | The key.
[$sel:key:Tag'] :: Tag -> Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The value.
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The key.
newTag :: Text -> Tag

-- | The value.
tag_value :: Lens' Tag (Maybe Text)

-- | The key.
tag_key :: Lens' Tag Text

-- | Information about a virtual private gateway for a private virtual
--   interface.
--   
--   <i>See:</i> <a>newVirtualGateway</a> smart constructor.
data VirtualGateway
VirtualGateway' :: Maybe Text -> Maybe Text -> VirtualGateway

-- | The ID of the virtual private gateway.
[$sel:virtualGatewayId:VirtualGateway'] :: VirtualGateway -> Maybe Text

-- | The state of the virtual private gateway. The following are the
--   possible values:
--   
--   <ul>
--   <li><tt>pending</tt>: Initial state after creating the virtual private
--   gateway.</li>
--   <li><tt>available</tt>: Ready for use by a private virtual
--   interface.</li>
--   <li><tt>deleting</tt>: Initial state after deleting the virtual
--   private gateway.</li>
--   <li><tt>deleted</tt>: The virtual private gateway is deleted. The
--   private virtual interface is unable to send traffic over this
--   gateway.</li>
--   </ul>
[$sel:virtualGatewayState:VirtualGateway'] :: VirtualGateway -> Maybe Text

-- | Create a value of <a>VirtualGateway</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:virtualGatewayId:VirtualGateway'</a>,
--   <a>virtualGateway_virtualGatewayId</a> - The ID of the virtual private
--   gateway.
--   
--   <a>$sel:virtualGatewayState:VirtualGateway'</a>,
--   <a>virtualGateway_virtualGatewayState</a> - The state of the virtual
--   private gateway. The following are the possible values:
--   
--   <ul>
--   <li><tt>pending</tt>: Initial state after creating the virtual private
--   gateway.</li>
--   <li><tt>available</tt>: Ready for use by a private virtual
--   interface.</li>
--   <li><tt>deleting</tt>: Initial state after deleting the virtual
--   private gateway.</li>
--   <li><tt>deleted</tt>: The virtual private gateway is deleted. The
--   private virtual interface is unable to send traffic over this
--   gateway.</li>
--   </ul>
newVirtualGateway :: VirtualGateway

-- | The ID of the virtual private gateway.
virtualGateway_virtualGatewayId :: Lens' VirtualGateway (Maybe Text)

-- | The state of the virtual private gateway. The following are the
--   possible values:
--   
--   <ul>
--   <li><tt>pending</tt>: Initial state after creating the virtual private
--   gateway.</li>
--   <li><tt>available</tt>: Ready for use by a private virtual
--   interface.</li>
--   <li><tt>deleting</tt>: Initial state after deleting the virtual
--   private gateway.</li>
--   <li><tt>deleted</tt>: The virtual private gateway is deleted. The
--   private virtual interface is unable to send traffic over this
--   gateway.</li>
--   </ul>
virtualGateway_virtualGatewayState :: Lens' VirtualGateway (Maybe Text)

-- | Information about a virtual interface.
--   
--   <i>See:</i> <a>newVirtualInterface</a> smart constructor.
data VirtualInterface
VirtualInterface' :: Maybe Text -> Maybe [BGPPeer] -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe [RouteFilterPrefix] -> Maybe Int -> Maybe Text -> Maybe Integer -> Maybe Text -> Maybe (NonEmpty Tag) -> Maybe Text -> Maybe Text -> Maybe VirtualInterfaceState -> Maybe Text -> Maybe AddressFamily -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> VirtualInterface

-- | The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
[$sel:authKey:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The BGP peers configured on this virtual interface.
[$sel:bgpPeers:VirtualInterface'] :: VirtualInterface -> Maybe [BGPPeer]

-- | The ID of the virtual private gateway. Applies only to private virtual
--   interfaces.
[$sel:virtualGatewayId:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
--   
--   The valid values are 1-2147483647.
[$sel:asn:VirtualInterface'] :: VirtualInterface -> Maybe Int

-- | The Direct Connect endpoint that terminates the physical connection.
[$sel:awsDeviceV2:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The ID of the connection.
[$sel:connectionId:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
[$sel:awsLogicalDeviceId:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The customer router configuration.
[$sel:customerRouterConfig:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | Indicates whether jumbo frames (9001 MTU) are supported.
[$sel:jumboFrameCapable:VirtualInterface'] :: VirtualInterface -> Maybe Bool

-- | The routes to be advertised to the Amazon Web Services network in this
--   Region. Applies to public virtual interfaces.
[$sel:routeFilterPrefixes:VirtualInterface'] :: VirtualInterface -> Maybe [RouteFilterPrefix]

-- | The maximum transmission unit (MTU), in bytes. The supported values
--   are 1500 and 9001. The default value is 1500.
[$sel:mtu:VirtualInterface'] :: VirtualInterface -> Maybe Int

-- | The type of virtual interface. The possible values are
--   <tt>private</tt> and <tt>public</tt>.
[$sel:virtualInterfaceType:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The autonomous system number (ASN) for the Amazon side of the
--   connection.
[$sel:amazonSideAsn:VirtualInterface'] :: VirtualInterface -> Maybe Integer

-- | The ID of the virtual interface.
[$sel:virtualInterfaceId:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The tags associated with the virtual interface.
[$sel:tags:VirtualInterface'] :: VirtualInterface -> Maybe (NonEmpty Tag)

-- | The ID of the Direct Connect gateway.
[$sel:directConnectGatewayId:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The name of the virtual interface assigned by the customer network.
--   The name has a maximum of 100 characters. The following are valid
--   characters: a-z, 0-9 and a hyphen (-).
[$sel:virtualInterfaceName:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The state of the virtual interface. The following are the possible
--   values:
--   
--   <ul>
--   <li><tt>confirming</tt>: The creation of the virtual interface is
--   pending confirmation from the virtual interface owner. If the owner of
--   the virtual interface is different from the owner of the connection on
--   which it is provisioned, then the virtual interface will remain in
--   this state until it is confirmed by the virtual interface owner.</li>
--   <li><tt>verifying</tt>: This state only applies to public virtual
--   interfaces. Each public virtual interface needs validation before the
--   virtual interface can be created.</li>
--   <li><tt>pending</tt>: A virtual interface is in this state from the
--   time that it is created until the virtual interface is ready to
--   forward traffic.</li>
--   <li><tt>available</tt>: A virtual interface that is able to forward
--   traffic.</li>
--   <li><tt>down</tt>: A virtual interface that is BGP down.</li>
--   <li><tt>deleting</tt>: A virtual interface is in this state
--   immediately after calling DeleteVirtualInterface until it can no
--   longer forward traffic.</li>
--   <li><tt>deleted</tt>: A virtual interface that cannot forward
--   traffic.</li>
--   <li><tt>rejected</tt>: The virtual interface owner has declined
--   creation of the virtual interface. If a virtual interface in the
--   <tt>Confirming</tt> state is deleted by the virtual interface owner,
--   the virtual interface enters the <tt>Rejected</tt> state.</li>
--   <li><tt>unknown</tt>: The state of the virtual interface is not
--   available.</li>
--   </ul>
[$sel:virtualInterfaceState:VirtualInterface'] :: VirtualInterface -> Maybe VirtualInterfaceState

-- | The IP address assigned to the Amazon interface.
[$sel:amazonAddress:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The address family for the BGP peer.
[$sel:addressFamily:VirtualInterface'] :: VirtualInterface -> Maybe AddressFamily

-- | The ID of the account that owns the virtual interface.
[$sel:ownerAccount:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The Region where the virtual interface is located.
[$sel:region:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The ID of the VLAN.
[$sel:vlan:VirtualInterface'] :: VirtualInterface -> Maybe Int

-- | The location of the connection.
[$sel:location:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The IP address assigned to the customer interface.
[$sel:customerAddress:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | Create a value of <a>VirtualInterface</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authKey:VirtualInterface'</a>, <a>virtualInterface_authKey</a>
--   - The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
--   
--   <a>$sel:bgpPeers:VirtualInterface'</a>,
--   <a>virtualInterface_bgpPeers</a> - The BGP peers configured on this
--   virtual interface.
--   
--   <a>$sel:virtualGatewayId:VirtualInterface'</a>,
--   <a>virtualInterface_virtualGatewayId</a> - The ID of the virtual
--   private gateway. Applies only to private virtual interfaces.
--   
--   <a>$sel:asn:VirtualInterface'</a>, <a>virtualInterface_asn</a> - The
--   autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
--   
--   The valid values are 1-2147483647.
--   
--   <a>$sel:awsDeviceV2:VirtualInterface'</a>,
--   <a>virtualInterface_awsDeviceV2</a> - The Direct Connect endpoint that
--   terminates the physical connection.
--   
--   <a>$sel:connectionId:VirtualInterface'</a>,
--   <a>virtualInterface_connectionId</a> - The ID of the connection.
--   
--   <a>$sel:awsLogicalDeviceId:VirtualInterface'</a>,
--   <a>virtualInterface_awsLogicalDeviceId</a> - The Direct Connect
--   endpoint that terminates the logical connection. This device might be
--   different than the device that terminates the physical connection.
--   
--   <a>$sel:customerRouterConfig:VirtualInterface'</a>,
--   <a>virtualInterface_customerRouterConfig</a> - The customer router
--   configuration.
--   
--   <a>$sel:jumboFrameCapable:VirtualInterface'</a>,
--   <a>virtualInterface_jumboFrameCapable</a> - Indicates whether jumbo
--   frames (9001 MTU) are supported.
--   
--   <a>$sel:routeFilterPrefixes:VirtualInterface'</a>,
--   <a>virtualInterface_routeFilterPrefixes</a> - The routes to be
--   advertised to the Amazon Web Services network in this Region. Applies
--   to public virtual interfaces.
--   
--   <a>$sel:mtu:VirtualInterface'</a>, <a>virtualInterface_mtu</a> - The
--   maximum transmission unit (MTU), in bytes. The supported values are
--   1500 and 9001. The default value is 1500.
--   
--   <a>$sel:virtualInterfaceType:VirtualInterface'</a>,
--   <a>virtualInterface_virtualInterfaceType</a> - The type of virtual
--   interface. The possible values are <tt>private</tt> and
--   <tt>public</tt>.
--   
--   <a>$sel:amazonSideAsn:VirtualInterface'</a>,
--   <a>virtualInterface_amazonSideAsn</a> - The autonomous system number
--   (ASN) for the Amazon side of the connection.
--   
--   <a>$sel:virtualInterfaceId:VirtualInterface'</a>,
--   <a>virtualInterface_virtualInterfaceId</a> - The ID of the virtual
--   interface.
--   
--   <a>$sel:tags:VirtualInterface'</a>, <a>virtualInterface_tags</a> - The
--   tags associated with the virtual interface.
--   
--   <a>$sel:directConnectGatewayId:VirtualInterface'</a>,
--   <a>virtualInterface_directConnectGatewayId</a> - The ID of the Direct
--   Connect gateway.
--   
--   <a>$sel:virtualInterfaceName:VirtualInterface'</a>,
--   <a>virtualInterface_virtualInterfaceName</a> - The name of the virtual
--   interface assigned by the customer network. The name has a maximum of
--   100 characters. The following are valid characters: a-z, 0-9 and a
--   hyphen (-).
--   
--   <a>$sel:virtualInterfaceState:VirtualInterface'</a>,
--   <a>virtualInterface_virtualInterfaceState</a> - The state of the
--   virtual interface. The following are the possible values:
--   
--   <ul>
--   <li><tt>confirming</tt>: The creation of the virtual interface is
--   pending confirmation from the virtual interface owner. If the owner of
--   the virtual interface is different from the owner of the connection on
--   which it is provisioned, then the virtual interface will remain in
--   this state until it is confirmed by the virtual interface owner.</li>
--   <li><tt>verifying</tt>: This state only applies to public virtual
--   interfaces. Each public virtual interface needs validation before the
--   virtual interface can be created.</li>
--   <li><tt>pending</tt>: A virtual interface is in this state from the
--   time that it is created until the virtual interface is ready to
--   forward traffic.</li>
--   <li><tt>available</tt>: A virtual interface that is able to forward
--   traffic.</li>
--   <li><tt>down</tt>: A virtual interface that is BGP down.</li>
--   <li><tt>deleting</tt>: A virtual interface is in this state
--   immediately after calling DeleteVirtualInterface until it can no
--   longer forward traffic.</li>
--   <li><tt>deleted</tt>: A virtual interface that cannot forward
--   traffic.</li>
--   <li><tt>rejected</tt>: The virtual interface owner has declined
--   creation of the virtual interface. If a virtual interface in the
--   <tt>Confirming</tt> state is deleted by the virtual interface owner,
--   the virtual interface enters the <tt>Rejected</tt> state.</li>
--   <li><tt>unknown</tt>: The state of the virtual interface is not
--   available.</li>
--   </ul>
--   
--   <a>$sel:amazonAddress:VirtualInterface'</a>,
--   <a>virtualInterface_amazonAddress</a> - The IP address assigned to the
--   Amazon interface.
--   
--   <a>$sel:addressFamily:VirtualInterface'</a>,
--   <a>virtualInterface_addressFamily</a> - The address family for the BGP
--   peer.
--   
--   <a>$sel:ownerAccount:VirtualInterface'</a>,
--   <a>virtualInterface_ownerAccount</a> - The ID of the account that owns
--   the virtual interface.
--   
--   <a>$sel:region:VirtualInterface'</a>, <a>virtualInterface_region</a> -
--   The Region where the virtual interface is located.
--   
--   <a>$sel:vlan:VirtualInterface'</a>, <a>virtualInterface_vlan</a> - The
--   ID of the VLAN.
--   
--   <a>$sel:location:VirtualInterface'</a>,
--   <a>virtualInterface_location</a> - The location of the connection.
--   
--   <a>$sel:customerAddress:VirtualInterface'</a>,
--   <a>virtualInterface_customerAddress</a> - The IP address assigned to
--   the customer interface.
newVirtualInterface :: VirtualInterface

-- | The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
virtualInterface_authKey :: Lens' VirtualInterface (Maybe Text)

-- | The BGP peers configured on this virtual interface.
virtualInterface_bgpPeers :: Lens' VirtualInterface (Maybe [BGPPeer])

-- | The ID of the virtual private gateway. Applies only to private virtual
--   interfaces.
virtualInterface_virtualGatewayId :: Lens' VirtualInterface (Maybe Text)

-- | The autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
--   
--   The valid values are 1-2147483647.
virtualInterface_asn :: Lens' VirtualInterface (Maybe Int)

-- | The Direct Connect endpoint that terminates the physical connection.
virtualInterface_awsDeviceV2 :: Lens' VirtualInterface (Maybe Text)

-- | The ID of the connection.
virtualInterface_connectionId :: Lens' VirtualInterface (Maybe Text)

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
virtualInterface_awsLogicalDeviceId :: Lens' VirtualInterface (Maybe Text)

-- | The customer router configuration.
virtualInterface_customerRouterConfig :: Lens' VirtualInterface (Maybe Text)

-- | Indicates whether jumbo frames (9001 MTU) are supported.
virtualInterface_jumboFrameCapable :: Lens' VirtualInterface (Maybe Bool)

-- | The routes to be advertised to the Amazon Web Services network in this
--   Region. Applies to public virtual interfaces.
virtualInterface_routeFilterPrefixes :: Lens' VirtualInterface (Maybe [RouteFilterPrefix])

-- | The maximum transmission unit (MTU), in bytes. The supported values
--   are 1500 and 9001. The default value is 1500.
virtualInterface_mtu :: Lens' VirtualInterface (Maybe Int)

-- | The type of virtual interface. The possible values are
--   <tt>private</tt> and <tt>public</tt>.
virtualInterface_virtualInterfaceType :: Lens' VirtualInterface (Maybe Text)

-- | The autonomous system number (ASN) for the Amazon side of the
--   connection.
virtualInterface_amazonSideAsn :: Lens' VirtualInterface (Maybe Integer)

-- | The ID of the virtual interface.
virtualInterface_virtualInterfaceId :: Lens' VirtualInterface (Maybe Text)

-- | The tags associated with the virtual interface.
virtualInterface_tags :: Lens' VirtualInterface (Maybe (NonEmpty Tag))

-- | The ID of the Direct Connect gateway.
virtualInterface_directConnectGatewayId :: Lens' VirtualInterface (Maybe Text)

-- | The name of the virtual interface assigned by the customer network.
--   The name has a maximum of 100 characters. The following are valid
--   characters: a-z, 0-9 and a hyphen (-).
virtualInterface_virtualInterfaceName :: Lens' VirtualInterface (Maybe Text)

-- | The state of the virtual interface. The following are the possible
--   values:
--   
--   <ul>
--   <li><tt>confirming</tt>: The creation of the virtual interface is
--   pending confirmation from the virtual interface owner. If the owner of
--   the virtual interface is different from the owner of the connection on
--   which it is provisioned, then the virtual interface will remain in
--   this state until it is confirmed by the virtual interface owner.</li>
--   <li><tt>verifying</tt>: This state only applies to public virtual
--   interfaces. Each public virtual interface needs validation before the
--   virtual interface can be created.</li>
--   <li><tt>pending</tt>: A virtual interface is in this state from the
--   time that it is created until the virtual interface is ready to
--   forward traffic.</li>
--   <li><tt>available</tt>: A virtual interface that is able to forward
--   traffic.</li>
--   <li><tt>down</tt>: A virtual interface that is BGP down.</li>
--   <li><tt>deleting</tt>: A virtual interface is in this state
--   immediately after calling DeleteVirtualInterface until it can no
--   longer forward traffic.</li>
--   <li><tt>deleted</tt>: A virtual interface that cannot forward
--   traffic.</li>
--   <li><tt>rejected</tt>: The virtual interface owner has declined
--   creation of the virtual interface. If a virtual interface in the
--   <tt>Confirming</tt> state is deleted by the virtual interface owner,
--   the virtual interface enters the <tt>Rejected</tt> state.</li>
--   <li><tt>unknown</tt>: The state of the virtual interface is not
--   available.</li>
--   </ul>
virtualInterface_virtualInterfaceState :: Lens' VirtualInterface (Maybe VirtualInterfaceState)

-- | The IP address assigned to the Amazon interface.
virtualInterface_amazonAddress :: Lens' VirtualInterface (Maybe Text)

-- | The address family for the BGP peer.
virtualInterface_addressFamily :: Lens' VirtualInterface (Maybe AddressFamily)

-- | The ID of the account that owns the virtual interface.
virtualInterface_ownerAccount :: Lens' VirtualInterface (Maybe Text)

-- | The Region where the virtual interface is located.
virtualInterface_region :: Lens' VirtualInterface (Maybe Text)

-- | The ID of the VLAN.
virtualInterface_vlan :: Lens' VirtualInterface (Maybe Int)

-- | The location of the connection.
virtualInterface_location :: Lens' VirtualInterface (Maybe Text)

-- | The IP address assigned to the customer interface.
virtualInterface_customerAddress :: Lens' VirtualInterface (Maybe Text)

-- | Information about the virtual interface failover test.
--   
--   <i>See:</i> <a>newVirtualInterfaceTestHistory</a> smart constructor.
data VirtualInterfaceTestHistory
VirtualInterfaceTestHistory' :: Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Int -> VirtualInterfaceTestHistory

-- | The BGP peers that were put in the DOWN state as part of the virtual
--   interface failover test.
[$sel:bgpPeers:VirtualInterfaceTestHistory'] :: VirtualInterfaceTestHistory -> Maybe [Text]

-- | The status of the virtual interface failover test.
[$sel:status:VirtualInterfaceTestHistory'] :: VirtualInterfaceTestHistory -> Maybe Text

-- | The ID of the virtual interface failover test.
[$sel:testId:VirtualInterfaceTestHistory'] :: VirtualInterfaceTestHistory -> Maybe Text

-- | The time that the virtual interface moves to the DOWN state.
[$sel:startTime:VirtualInterfaceTestHistory'] :: VirtualInterfaceTestHistory -> Maybe POSIX

-- | The time that the virtual interface moves out of the DOWN state.
[$sel:endTime:VirtualInterfaceTestHistory'] :: VirtualInterfaceTestHistory -> Maybe POSIX

-- | The ID of the tested virtual interface.
[$sel:virtualInterfaceId:VirtualInterfaceTestHistory'] :: VirtualInterfaceTestHistory -> Maybe Text

-- | The owner ID of the tested virtual interface.
[$sel:ownerAccount:VirtualInterfaceTestHistory'] :: VirtualInterfaceTestHistory -> Maybe Text

-- | The time that the virtual interface failover test ran in minutes.
[$sel:testDurationInMinutes:VirtualInterfaceTestHistory'] :: VirtualInterfaceTestHistory -> Maybe Int

-- | Create a value of <a>VirtualInterfaceTestHistory</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bgpPeers:VirtualInterfaceTestHistory'</a>,
--   <a>virtualInterfaceTestHistory_bgpPeers</a> - The BGP peers that were
--   put in the DOWN state as part of the virtual interface failover test.
--   
--   <a>$sel:status:VirtualInterfaceTestHistory'</a>,
--   <a>virtualInterfaceTestHistory_status</a> - The status of the virtual
--   interface failover test.
--   
--   <a>$sel:testId:VirtualInterfaceTestHistory'</a>,
--   <a>virtualInterfaceTestHistory_testId</a> - The ID of the virtual
--   interface failover test.
--   
--   <a>$sel:startTime:VirtualInterfaceTestHistory'</a>,
--   <a>virtualInterfaceTestHistory_startTime</a> - The time that the
--   virtual interface moves to the DOWN state.
--   
--   <a>$sel:endTime:VirtualInterfaceTestHistory'</a>,
--   <a>virtualInterfaceTestHistory_endTime</a> - The time that the virtual
--   interface moves out of the DOWN state.
--   
--   <a>$sel:virtualInterfaceId:VirtualInterfaceTestHistory'</a>,
--   <a>virtualInterfaceTestHistory_virtualInterfaceId</a> - The ID of the
--   tested virtual interface.
--   
--   <a>$sel:ownerAccount:VirtualInterfaceTestHistory'</a>,
--   <a>virtualInterfaceTestHistory_ownerAccount</a> - The owner ID of the
--   tested virtual interface.
--   
--   <a>$sel:testDurationInMinutes:VirtualInterfaceTestHistory'</a>,
--   <a>virtualInterfaceTestHistory_testDurationInMinutes</a> - The time
--   that the virtual interface failover test ran in minutes.
newVirtualInterfaceTestHistory :: VirtualInterfaceTestHistory

-- | The BGP peers that were put in the DOWN state as part of the virtual
--   interface failover test.
virtualInterfaceTestHistory_bgpPeers :: Lens' VirtualInterfaceTestHistory (Maybe [Text])

-- | The status of the virtual interface failover test.
virtualInterfaceTestHistory_status :: Lens' VirtualInterfaceTestHistory (Maybe Text)

-- | The ID of the virtual interface failover test.
virtualInterfaceTestHistory_testId :: Lens' VirtualInterfaceTestHistory (Maybe Text)

-- | The time that the virtual interface moves to the DOWN state.
virtualInterfaceTestHistory_startTime :: Lens' VirtualInterfaceTestHistory (Maybe UTCTime)

-- | The time that the virtual interface moves out of the DOWN state.
virtualInterfaceTestHistory_endTime :: Lens' VirtualInterfaceTestHistory (Maybe UTCTime)

-- | The ID of the tested virtual interface.
virtualInterfaceTestHistory_virtualInterfaceId :: Lens' VirtualInterfaceTestHistory (Maybe Text)

-- | The owner ID of the tested virtual interface.
virtualInterfaceTestHistory_ownerAccount :: Lens' VirtualInterfaceTestHistory (Maybe Text)

-- | The time that the virtual interface failover test ran in minutes.
virtualInterfaceTestHistory_testDurationInMinutes :: Lens' VirtualInterfaceTestHistory (Maybe Int)


-- | Adds the specified tags to the specified Direct Connect resource. Each
--   resource can have a maximum of 50 tags.
--   
--   Each tag consists of a key and an optional value. If a tag with the
--   same key is already associated with the resource, this action updates
--   its value.
module Network.AWS.DirectConnect.TagResource

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> NonEmpty Tag -> TagResource

-- | The Amazon Resource Name (ARN) of the resource.
[$sel:resourceArn:TagResource'] :: TagResource -> Text

-- | The tags to add.
[$sel:tags:TagResource'] :: TagResource -> NonEmpty Tag

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The Amazon Resource Name (ARN) of the resource.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - The tags to
--   add.
newTagResource :: Text -> NonEmpty Tag -> TagResource

-- | The Amazon Resource Name (ARN) of the resource.
tagResource_resourceArn :: Lens' TagResource Text

-- | The tags to add.
tagResource_tags :: Lens' TagResource (NonEmpty Tag)

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:TagResourceResponse'] :: TagResourceResponse -> Int

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int
instance GHC.Generics.Generic Network.AWS.DirectConnect.TagResource.TagResource
instance GHC.Show.Show Network.AWS.DirectConnect.TagResource.TagResource
instance GHC.Read.Read Network.AWS.DirectConnect.TagResource.TagResource
instance GHC.Classes.Eq Network.AWS.DirectConnect.TagResource.TagResource
instance GHC.Generics.Generic Network.AWS.DirectConnect.TagResource.TagResourceResponse
instance GHC.Show.Show Network.AWS.DirectConnect.TagResource.TagResourceResponse
instance GHC.Read.Read Network.AWS.DirectConnect.TagResource.TagResourceResponse
instance GHC.Classes.Eq Network.AWS.DirectConnect.TagResource.TagResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DirectConnect.TagResource.TagResource
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.TagResource.TagResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.TagResource.TagResource
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.TagResource.TagResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DirectConnect.TagResource.TagResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.TagResource.TagResource
instance Network.AWS.Data.Path.ToPath Network.AWS.DirectConnect.TagResource.TagResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.DirectConnect.TagResource.TagResource


-- | Stops the virtual interface failover test.
module Network.AWS.DirectConnect.StopBgpFailoverTest

-- | <i>See:</i> <a>newStopBgpFailoverTest</a> smart constructor.
data StopBgpFailoverTest
StopBgpFailoverTest' :: Text -> StopBgpFailoverTest

-- | The ID of the virtual interface you no longer want to test.
[$sel:virtualInterfaceId:StopBgpFailoverTest'] :: StopBgpFailoverTest -> Text

-- | Create a value of <a>StopBgpFailoverTest</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:virtualInterfaceId:StopBgpFailoverTest'</a>,
--   <a>stopBgpFailoverTest_virtualInterfaceId</a> - The ID of the virtual
--   interface you no longer want to test.
newStopBgpFailoverTest :: Text -> StopBgpFailoverTest

-- | The ID of the virtual interface you no longer want to test.
stopBgpFailoverTest_virtualInterfaceId :: Lens' StopBgpFailoverTest Text

-- | <i>See:</i> <a>newStopBgpFailoverTestResponse</a> smart constructor.
data StopBgpFailoverTestResponse
StopBgpFailoverTestResponse' :: Maybe VirtualInterfaceTestHistory -> Int -> StopBgpFailoverTestResponse

-- | Information about the virtual interface failover test.
[$sel:virtualInterfaceTest:StopBgpFailoverTestResponse'] :: StopBgpFailoverTestResponse -> Maybe VirtualInterfaceTestHistory

-- | The response's http status code.
[$sel:httpStatus:StopBgpFailoverTestResponse'] :: StopBgpFailoverTestResponse -> Int

-- | Create a value of <a>StopBgpFailoverTestResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:virtualInterfaceTest:StopBgpFailoverTestResponse'</a>,
--   <a>stopBgpFailoverTestResponse_virtualInterfaceTest</a> - Information
--   about the virtual interface failover test.
--   
--   <a>$sel:httpStatus:StopBgpFailoverTestResponse'</a>,
--   <a>stopBgpFailoverTestResponse_httpStatus</a> - The response's http
--   status code.
newStopBgpFailoverTestResponse :: Int -> StopBgpFailoverTestResponse

-- | Information about the virtual interface failover test.
stopBgpFailoverTestResponse_virtualInterfaceTest :: Lens' StopBgpFailoverTestResponse (Maybe VirtualInterfaceTestHistory)

-- | The response's http status code.
stopBgpFailoverTestResponse_httpStatus :: Lens' StopBgpFailoverTestResponse Int
instance GHC.Generics.Generic Network.AWS.DirectConnect.StopBgpFailoverTest.StopBgpFailoverTest
instance GHC.Show.Show Network.AWS.DirectConnect.StopBgpFailoverTest.StopBgpFailoverTest
instance GHC.Read.Read Network.AWS.DirectConnect.StopBgpFailoverTest.StopBgpFailoverTest
instance GHC.Classes.Eq Network.AWS.DirectConnect.StopBgpFailoverTest.StopBgpFailoverTest
instance GHC.Generics.Generic Network.AWS.DirectConnect.StopBgpFailoverTest.StopBgpFailoverTestResponse
instance GHC.Show.Show Network.AWS.DirectConnect.StopBgpFailoverTest.StopBgpFailoverTestResponse
instance GHC.Read.Read Network.AWS.DirectConnect.StopBgpFailoverTest.StopBgpFailoverTestResponse
instance GHC.Classes.Eq Network.AWS.DirectConnect.StopBgpFailoverTest.StopBgpFailoverTestResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DirectConnect.StopBgpFailoverTest.StopBgpFailoverTest
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.StopBgpFailoverTest.StopBgpFailoverTestResponse
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.StopBgpFailoverTest.StopBgpFailoverTest
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.StopBgpFailoverTest.StopBgpFailoverTest
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DirectConnect.StopBgpFailoverTest.StopBgpFailoverTest
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.StopBgpFailoverTest.StopBgpFailoverTest
instance Network.AWS.Data.Path.ToPath Network.AWS.DirectConnect.StopBgpFailoverTest.StopBgpFailoverTest
instance Network.AWS.Data.Query.ToQuery Network.AWS.DirectConnect.StopBgpFailoverTest.StopBgpFailoverTest


-- | Starts the virtual interface failover test that verifies your
--   configuration meets your resiliency requirements by placing the BGP
--   peering session in the DOWN state. You can then send traffic to verify
--   that there are no outages.
--   
--   You can run the test on public, private, transit, and hosted virtual
--   interfaces.
--   
--   You can use <a>ListVirtualInterfaceTestHistory</a> to view the virtual
--   interface test history.
--   
--   If you need to stop the test before the test interval completes, use
--   <a>StopBgpFailoverTest</a>.
module Network.AWS.DirectConnect.StartBgpFailoverTest

-- | <i>See:</i> <a>newStartBgpFailoverTest</a> smart constructor.
data StartBgpFailoverTest
StartBgpFailoverTest' :: Maybe [Text] -> Maybe Int -> Text -> StartBgpFailoverTest

-- | The BGP peers to place in the DOWN state.
[$sel:bgpPeers:StartBgpFailoverTest'] :: StartBgpFailoverTest -> Maybe [Text]

-- | The time in minutes that the virtual interface failover test will
--   last.
--   
--   Maximum value: 180 minutes (3 hours).
--   
--   Default: 180 minutes (3 hours).
[$sel:testDurationInMinutes:StartBgpFailoverTest'] :: StartBgpFailoverTest -> Maybe Int

-- | The ID of the virtual interface you want to test.
[$sel:virtualInterfaceId:StartBgpFailoverTest'] :: StartBgpFailoverTest -> Text

-- | Create a value of <a>StartBgpFailoverTest</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bgpPeers:StartBgpFailoverTest'</a>,
--   <a>startBgpFailoverTest_bgpPeers</a> - The BGP peers to place in the
--   DOWN state.
--   
--   <a>$sel:testDurationInMinutes:StartBgpFailoverTest'</a>,
--   <a>startBgpFailoverTest_testDurationInMinutes</a> - The time in
--   minutes that the virtual interface failover test will last.
--   
--   Maximum value: 180 minutes (3 hours).
--   
--   Default: 180 minutes (3 hours).
--   
--   <a>$sel:virtualInterfaceId:StartBgpFailoverTest'</a>,
--   <a>startBgpFailoverTest_virtualInterfaceId</a> - The ID of the virtual
--   interface you want to test.
newStartBgpFailoverTest :: Text -> StartBgpFailoverTest

-- | The BGP peers to place in the DOWN state.
startBgpFailoverTest_bgpPeers :: Lens' StartBgpFailoverTest (Maybe [Text])

-- | The time in minutes that the virtual interface failover test will
--   last.
--   
--   Maximum value: 180 minutes (3 hours).
--   
--   Default: 180 minutes (3 hours).
startBgpFailoverTest_testDurationInMinutes :: Lens' StartBgpFailoverTest (Maybe Int)

-- | The ID of the virtual interface you want to test.
startBgpFailoverTest_virtualInterfaceId :: Lens' StartBgpFailoverTest Text

-- | <i>See:</i> <a>newStartBgpFailoverTestResponse</a> smart constructor.
data StartBgpFailoverTestResponse
StartBgpFailoverTestResponse' :: Maybe VirtualInterfaceTestHistory -> Int -> StartBgpFailoverTestResponse

-- | Information about the virtual interface failover test.
[$sel:virtualInterfaceTest:StartBgpFailoverTestResponse'] :: StartBgpFailoverTestResponse -> Maybe VirtualInterfaceTestHistory

-- | The response's http status code.
[$sel:httpStatus:StartBgpFailoverTestResponse'] :: StartBgpFailoverTestResponse -> Int

-- | Create a value of <a>StartBgpFailoverTestResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:virtualInterfaceTest:StartBgpFailoverTestResponse'</a>,
--   <a>startBgpFailoverTestResponse_virtualInterfaceTest</a> - Information
--   about the virtual interface failover test.
--   
--   <a>$sel:httpStatus:StartBgpFailoverTestResponse'</a>,
--   <a>startBgpFailoverTestResponse_httpStatus</a> - The response's http
--   status code.
newStartBgpFailoverTestResponse :: Int -> StartBgpFailoverTestResponse

-- | Information about the virtual interface failover test.
startBgpFailoverTestResponse_virtualInterfaceTest :: Lens' StartBgpFailoverTestResponse (Maybe VirtualInterfaceTestHistory)

-- | The response's http status code.
startBgpFailoverTestResponse_httpStatus :: Lens' StartBgpFailoverTestResponse Int
instance GHC.Generics.Generic Network.AWS.DirectConnect.StartBgpFailoverTest.StartBgpFailoverTest
instance GHC.Show.Show Network.AWS.DirectConnect.StartBgpFailoverTest.StartBgpFailoverTest
instance GHC.Read.Read Network.AWS.DirectConnect.StartBgpFailoverTest.StartBgpFailoverTest
instance GHC.Classes.Eq Network.AWS.DirectConnect.StartBgpFailoverTest.StartBgpFailoverTest
instance GHC.Generics.Generic Network.AWS.DirectConnect.StartBgpFailoverTest.StartBgpFailoverTestResponse
instance GHC.Show.Show Network.AWS.DirectConnect.StartBgpFailoverTest.StartBgpFailoverTestResponse
instance GHC.Read.Read Network.AWS.DirectConnect.StartBgpFailoverTest.StartBgpFailoverTestResponse
instance GHC.Classes.Eq Network.AWS.DirectConnect.StartBgpFailoverTest.StartBgpFailoverTestResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DirectConnect.StartBgpFailoverTest.StartBgpFailoverTest
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.StartBgpFailoverTest.StartBgpFailoverTestResponse
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.StartBgpFailoverTest.StartBgpFailoverTest
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.StartBgpFailoverTest.StartBgpFailoverTest
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DirectConnect.StartBgpFailoverTest.StartBgpFailoverTest
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.StartBgpFailoverTest.StartBgpFailoverTest
instance Network.AWS.Data.Path.ToPath Network.AWS.DirectConnect.StartBgpFailoverTest.StartBgpFailoverTest
instance Network.AWS.Data.Query.ToQuery Network.AWS.DirectConnect.StartBgpFailoverTest.StartBgpFailoverTest


-- | Lists the virtual interface failover test history.
module Network.AWS.DirectConnect.ListVirtualInterfaceTestHistory

-- | <i>See:</i> <a>newListVirtualInterfaceTestHistory</a> smart
--   constructor.
data ListVirtualInterfaceTestHistory
ListVirtualInterfaceTestHistory' :: Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> ListVirtualInterfaceTestHistory

-- | The BGP peers that were placed in the DOWN state during the virtual
--   interface failover test.
[$sel:bgpPeers:ListVirtualInterfaceTestHistory'] :: ListVirtualInterfaceTestHistory -> Maybe [Text]

-- | The token for the next page of results.
[$sel:nextToken:ListVirtualInterfaceTestHistory'] :: ListVirtualInterfaceTestHistory -> Maybe Text

-- | The status of the virtual interface failover test.
[$sel:status:ListVirtualInterfaceTestHistory'] :: ListVirtualInterfaceTestHistory -> Maybe Text

-- | The maximum number of results to return with a single call. To
--   retrieve the remaining results, make another call with the returned
--   <tt>nextToken</tt> value.
--   
--   If <tt>MaxResults</tt> is given a value larger than 100, only 100
--   results are returned.
[$sel:maxResults:ListVirtualInterfaceTestHistory'] :: ListVirtualInterfaceTestHistory -> Maybe Int

-- | The ID of the virtual interface failover test.
[$sel:testId:ListVirtualInterfaceTestHistory'] :: ListVirtualInterfaceTestHistory -> Maybe Text

-- | The ID of the virtual interface that was tested.
[$sel:virtualInterfaceId:ListVirtualInterfaceTestHistory'] :: ListVirtualInterfaceTestHistory -> Maybe Text

-- | Create a value of <a>ListVirtualInterfaceTestHistory</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bgpPeers:ListVirtualInterfaceTestHistory'</a>,
--   <a>listVirtualInterfaceTestHistory_bgpPeers</a> - The BGP peers that
--   were placed in the DOWN state during the virtual interface failover
--   test.
--   
--   <a>$sel:nextToken:ListVirtualInterfaceTestHistory'</a>,
--   <a>listVirtualInterfaceTestHistory_nextToken</a> - The token for the
--   next page of results.
--   
--   <a>$sel:status:ListVirtualInterfaceTestHistory'</a>,
--   <a>listVirtualInterfaceTestHistory_status</a> - The status of the
--   virtual interface failover test.
--   
--   <a>$sel:maxResults:ListVirtualInterfaceTestHistory'</a>,
--   <a>listVirtualInterfaceTestHistory_maxResults</a> - The maximum number
--   of results to return with a single call. To retrieve the remaining
--   results, make another call with the returned <tt>nextToken</tt> value.
--   
--   If <tt>MaxResults</tt> is given a value larger than 100, only 100
--   results are returned.
--   
--   <a>$sel:testId:ListVirtualInterfaceTestHistory'</a>,
--   <a>listVirtualInterfaceTestHistory_testId</a> - The ID of the virtual
--   interface failover test.
--   
--   <a>$sel:virtualInterfaceId:ListVirtualInterfaceTestHistory'</a>,
--   <a>listVirtualInterfaceTestHistory_virtualInterfaceId</a> - The ID of
--   the virtual interface that was tested.
newListVirtualInterfaceTestHistory :: ListVirtualInterfaceTestHistory

-- | The BGP peers that were placed in the DOWN state during the virtual
--   interface failover test.
listVirtualInterfaceTestHistory_bgpPeers :: Lens' ListVirtualInterfaceTestHistory (Maybe [Text])

-- | The token for the next page of results.
listVirtualInterfaceTestHistory_nextToken :: Lens' ListVirtualInterfaceTestHistory (Maybe Text)

-- | The status of the virtual interface failover test.
listVirtualInterfaceTestHistory_status :: Lens' ListVirtualInterfaceTestHistory (Maybe Text)

-- | The maximum number of results to return with a single call. To
--   retrieve the remaining results, make another call with the returned
--   <tt>nextToken</tt> value.
--   
--   If <tt>MaxResults</tt> is given a value larger than 100, only 100
--   results are returned.
listVirtualInterfaceTestHistory_maxResults :: Lens' ListVirtualInterfaceTestHistory (Maybe Int)

-- | The ID of the virtual interface failover test.
listVirtualInterfaceTestHistory_testId :: Lens' ListVirtualInterfaceTestHistory (Maybe Text)

-- | The ID of the virtual interface that was tested.
listVirtualInterfaceTestHistory_virtualInterfaceId :: Lens' ListVirtualInterfaceTestHistory (Maybe Text)

-- | <i>See:</i> <a>newListVirtualInterfaceTestHistoryResponse</a> smart
--   constructor.
data ListVirtualInterfaceTestHistoryResponse
ListVirtualInterfaceTestHistoryResponse' :: Maybe Text -> Maybe [VirtualInterfaceTestHistory] -> Int -> ListVirtualInterfaceTestHistoryResponse

-- | The token to use to retrieve the next page of results. This value is
--   <tt>null</tt> when there are no more results to return.
[$sel:nextToken:ListVirtualInterfaceTestHistoryResponse'] :: ListVirtualInterfaceTestHistoryResponse -> Maybe Text

-- | The ID of the tested virtual interface.
[$sel:virtualInterfaceTestHistory:ListVirtualInterfaceTestHistoryResponse'] :: ListVirtualInterfaceTestHistoryResponse -> Maybe [VirtualInterfaceTestHistory]

-- | The response's http status code.
[$sel:httpStatus:ListVirtualInterfaceTestHistoryResponse'] :: ListVirtualInterfaceTestHistoryResponse -> Int

-- | Create a value of <a>ListVirtualInterfaceTestHistoryResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListVirtualInterfaceTestHistory'</a>,
--   <a>listVirtualInterfaceTestHistoryResponse_nextToken</a> - The token
--   to use to retrieve the next page of results. This value is
--   <tt>null</tt> when there are no more results to return.
--   
--   
--   <a>$sel:virtualInterfaceTestHistory:ListVirtualInterfaceTestHistoryResponse'</a>,
--   <a>listVirtualInterfaceTestHistoryResponse_virtualInterfaceTestHistory</a>
--   - The ID of the tested virtual interface.
--   
--   <a>$sel:httpStatus:ListVirtualInterfaceTestHistoryResponse'</a>,
--   <a>listVirtualInterfaceTestHistoryResponse_httpStatus</a> - The
--   response's http status code.
newListVirtualInterfaceTestHistoryResponse :: Int -> ListVirtualInterfaceTestHistoryResponse

-- | The token to use to retrieve the next page of results. This value is
--   <tt>null</tt> when there are no more results to return.
listVirtualInterfaceTestHistoryResponse_nextToken :: Lens' ListVirtualInterfaceTestHistoryResponse (Maybe Text)

-- | The ID of the tested virtual interface.
listVirtualInterfaceTestHistoryResponse_virtualInterfaceTestHistory :: Lens' ListVirtualInterfaceTestHistoryResponse (Maybe [VirtualInterfaceTestHistory])

-- | The response's http status code.
listVirtualInterfaceTestHistoryResponse_httpStatus :: Lens' ListVirtualInterfaceTestHistoryResponse Int
instance GHC.Generics.Generic Network.AWS.DirectConnect.ListVirtualInterfaceTestHistory.ListVirtualInterfaceTestHistory
instance GHC.Show.Show Network.AWS.DirectConnect.ListVirtualInterfaceTestHistory.ListVirtualInterfaceTestHistory
instance GHC.Read.Read Network.AWS.DirectConnect.ListVirtualInterfaceTestHistory.ListVirtualInterfaceTestHistory
instance GHC.Classes.Eq Network.AWS.DirectConnect.ListVirtualInterfaceTestHistory.ListVirtualInterfaceTestHistory
instance GHC.Generics.Generic Network.AWS.DirectConnect.ListVirtualInterfaceTestHistory.ListVirtualInterfaceTestHistoryResponse
instance GHC.Show.Show Network.AWS.DirectConnect.ListVirtualInterfaceTestHistory.ListVirtualInterfaceTestHistoryResponse
instance GHC.Read.Read Network.AWS.DirectConnect.ListVirtualInterfaceTestHistory.ListVirtualInterfaceTestHistoryResponse
instance GHC.Classes.Eq Network.AWS.DirectConnect.ListVirtualInterfaceTestHistory.ListVirtualInterfaceTestHistoryResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DirectConnect.ListVirtualInterfaceTestHistory.ListVirtualInterfaceTestHistory
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.ListVirtualInterfaceTestHistory.ListVirtualInterfaceTestHistoryResponse
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.ListVirtualInterfaceTestHistory.ListVirtualInterfaceTestHistory
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.ListVirtualInterfaceTestHistory.ListVirtualInterfaceTestHistory
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DirectConnect.ListVirtualInterfaceTestHistory.ListVirtualInterfaceTestHistory
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.ListVirtualInterfaceTestHistory.ListVirtualInterfaceTestHistory
instance Network.AWS.Data.Path.ToPath Network.AWS.DirectConnect.ListVirtualInterfaceTestHistory.ListVirtualInterfaceTestHistory
instance Network.AWS.Data.Query.ToQuery Network.AWS.DirectConnect.ListVirtualInterfaceTestHistory.ListVirtualInterfaceTestHistory


-- | Removes the association between a MAC Security (MACsec) security key
--   and an Direct Connect dedicated connection.
module Network.AWS.DirectConnect.DisassociateMacSecKey

-- | <i>See:</i> <a>newDisassociateMacSecKey</a> smart constructor.
data DisassociateMacSecKey
DisassociateMacSecKey' :: Text -> Text -> DisassociateMacSecKey

-- | The ID of the dedicated connection (dxcon-xxxx), or the ID of the LAG
--   (dxlag-xxxx).
--   
--   You can use DescribeConnections or DescribeLags to retrieve connection
--   ID.
[$sel:connectionId:DisassociateMacSecKey'] :: DisassociateMacSecKey -> Text

-- | The Amazon Resource Name (ARN) of the MAC Security (MACsec) secret
--   key.
--   
--   You can use DescribeConnections to retrieve the ARN of the MAC
--   Security (MACsec) secret key.
[$sel:secretARN:DisassociateMacSecKey'] :: DisassociateMacSecKey -> Text

-- | Create a value of <a>DisassociateMacSecKey</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connectionId:DisassociateMacSecKey'</a>,
--   <a>disassociateMacSecKey_connectionId</a> - The ID of the dedicated
--   connection (dxcon-xxxx), or the ID of the LAG (dxlag-xxxx).
--   
--   You can use DescribeConnections or DescribeLags to retrieve connection
--   ID.
--   
--   <a>$sel:secretARN:DisassociateMacSecKey'</a>,
--   <a>disassociateMacSecKey_secretARN</a> - The Amazon Resource Name
--   (ARN) of the MAC Security (MACsec) secret key.
--   
--   You can use DescribeConnections to retrieve the ARN of the MAC
--   Security (MACsec) secret key.
newDisassociateMacSecKey :: Text -> Text -> DisassociateMacSecKey

-- | The ID of the dedicated connection (dxcon-xxxx), or the ID of the LAG
--   (dxlag-xxxx).
--   
--   You can use DescribeConnections or DescribeLags to retrieve connection
--   ID.
disassociateMacSecKey_connectionId :: Lens' DisassociateMacSecKey Text

-- | The Amazon Resource Name (ARN) of the MAC Security (MACsec) secret
--   key.
--   
--   You can use DescribeConnections to retrieve the ARN of the MAC
--   Security (MACsec) secret key.
disassociateMacSecKey_secretARN :: Lens' DisassociateMacSecKey Text

-- | <i>See:</i> <a>newDisassociateMacSecKeyResponse</a> smart constructor.
data DisassociateMacSecKeyResponse
DisassociateMacSecKeyResponse' :: Maybe [MacSecKey] -> Maybe Text -> Int -> DisassociateMacSecKeyResponse

-- | The MAC Security (MACsec) security keys no longer associated with the
--   dedicated connection.
[$sel:macSecKeys:DisassociateMacSecKeyResponse'] :: DisassociateMacSecKeyResponse -> Maybe [MacSecKey]

-- | The ID of the dedicated connection (dxcon-xxxx), or the ID of the LAG
--   (dxlag-xxxx).
[$sel:connectionId:DisassociateMacSecKeyResponse'] :: DisassociateMacSecKeyResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DisassociateMacSecKeyResponse'] :: DisassociateMacSecKeyResponse -> Int

-- | Create a value of <a>DisassociateMacSecKeyResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:macSecKeys:DisassociateMacSecKeyResponse'</a>,
--   <a>disassociateMacSecKeyResponse_macSecKeys</a> - The MAC Security
--   (MACsec) security keys no longer associated with the dedicated
--   connection.
--   
--   <a>$sel:connectionId:DisassociateMacSecKey'</a>,
--   <a>disassociateMacSecKeyResponse_connectionId</a> - The ID of the
--   dedicated connection (dxcon-xxxx), or the ID of the LAG (dxlag-xxxx).
--   
--   <a>$sel:httpStatus:DisassociateMacSecKeyResponse'</a>,
--   <a>disassociateMacSecKeyResponse_httpStatus</a> - The response's http
--   status code.
newDisassociateMacSecKeyResponse :: Int -> DisassociateMacSecKeyResponse

-- | The MAC Security (MACsec) security keys no longer associated with the
--   dedicated connection.
disassociateMacSecKeyResponse_macSecKeys :: Lens' DisassociateMacSecKeyResponse (Maybe [MacSecKey])

-- | The ID of the dedicated connection (dxcon-xxxx), or the ID of the LAG
--   (dxlag-xxxx).
disassociateMacSecKeyResponse_connectionId :: Lens' DisassociateMacSecKeyResponse (Maybe Text)

-- | The response's http status code.
disassociateMacSecKeyResponse_httpStatus :: Lens' DisassociateMacSecKeyResponse Int
instance GHC.Generics.Generic Network.AWS.DirectConnect.DisassociateMacSecKey.DisassociateMacSecKey
instance GHC.Show.Show Network.AWS.DirectConnect.DisassociateMacSecKey.DisassociateMacSecKey
instance GHC.Read.Read Network.AWS.DirectConnect.DisassociateMacSecKey.DisassociateMacSecKey
instance GHC.Classes.Eq Network.AWS.DirectConnect.DisassociateMacSecKey.DisassociateMacSecKey
instance GHC.Generics.Generic Network.AWS.DirectConnect.DisassociateMacSecKey.DisassociateMacSecKeyResponse
instance GHC.Show.Show Network.AWS.DirectConnect.DisassociateMacSecKey.DisassociateMacSecKeyResponse
instance GHC.Read.Read Network.AWS.DirectConnect.DisassociateMacSecKey.DisassociateMacSecKeyResponse
instance GHC.Classes.Eq Network.AWS.DirectConnect.DisassociateMacSecKey.DisassociateMacSecKeyResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DirectConnect.DisassociateMacSecKey.DisassociateMacSecKey
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.DisassociateMacSecKey.DisassociateMacSecKeyResponse
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.DisassociateMacSecKey.DisassociateMacSecKey
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.DisassociateMacSecKey.DisassociateMacSecKey
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DirectConnect.DisassociateMacSecKey.DisassociateMacSecKey
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.DisassociateMacSecKey.DisassociateMacSecKey
instance Network.AWS.Data.Path.ToPath Network.AWS.DirectConnect.DisassociateMacSecKey.DisassociateMacSecKey
instance Network.AWS.Data.Query.ToQuery Network.AWS.DirectConnect.DisassociateMacSecKey.DisassociateMacSecKey


-- | Disassociates a connection from a link aggregation group (LAG). The
--   connection is interrupted and re-established as a standalone
--   connection (the connection is not deleted; to delete the connection,
--   use the DeleteConnection request). If the LAG has associated virtual
--   interfaces or hosted connections, they remain associated with the LAG.
--   A disassociated connection owned by an Direct Connect Partner is
--   automatically converted to an interconnect.
--   
--   If disassociating the connection would cause the LAG to fall below its
--   setting for minimum number of operational connections, the request
--   fails, except when it's the last member of the LAG. If all connections
--   are disassociated, the LAG continues to exist as an empty LAG with no
--   physical connections.
module Network.AWS.DirectConnect.DisassociateConnectionFromLag

-- | <i>See:</i> <a>newDisassociateConnectionFromLag</a> smart constructor.
data DisassociateConnectionFromLag
DisassociateConnectionFromLag' :: Text -> Text -> DisassociateConnectionFromLag

-- | The ID of the connection.
[$sel:connectionId:DisassociateConnectionFromLag'] :: DisassociateConnectionFromLag -> Text

-- | The ID of the LAG.
[$sel:lagId:DisassociateConnectionFromLag'] :: DisassociateConnectionFromLag -> Text

-- | Create a value of <a>DisassociateConnectionFromLag</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connectionId:DisassociateConnectionFromLag'</a>,
--   <a>disassociateConnectionFromLag_connectionId</a> - The ID of the
--   connection.
--   
--   <a>$sel:lagId:DisassociateConnectionFromLag'</a>,
--   <a>disassociateConnectionFromLag_lagId</a> - The ID of the LAG.
newDisassociateConnectionFromLag :: Text -> Text -> DisassociateConnectionFromLag

-- | The ID of the connection.
disassociateConnectionFromLag_connectionId :: Lens' DisassociateConnectionFromLag Text

-- | The ID of the LAG.
disassociateConnectionFromLag_lagId :: Lens' DisassociateConnectionFromLag Text

-- | Information about an Direct Connect connection.
--   
--   <i>See:</i> <a>newConnection</a> smart constructor.
data Connection
Connection' :: Maybe Text -> Maybe Text -> Maybe ConnectionState -> Maybe Text -> Maybe [MacSecKey] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe HasLogicalRedundancy -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (NonEmpty Tag) -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Bool -> Connection

-- | The bandwidth of the connection.
[$sel:bandwidth:Connection'] :: Connection -> Maybe Text

-- | The Direct Connect endpoint that terminates the physical connection.
[$sel:awsDeviceV2:Connection'] :: Connection -> Maybe Text

-- | The state of the connection. The following are the possible values:
--   
--   <ul>
--   <li><tt>ordering</tt>: The initial state of a hosted connection
--   provisioned on an interconnect. The connection stays in the ordering
--   state until the owner of the hosted connection confirms or declines
--   the connection order.</li>
--   <li><tt>requested</tt>: The initial state of a standard connection.
--   The connection stays in the requested state until the Letter of
--   Authorization (LOA) is sent to the customer.</li>
--   <li><tt>pending</tt>: The connection has been approved and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is up and the connection is
--   ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The connection is being deleted.</li>
--   <li><tt>deleted</tt>: The connection has been deleted.</li>
--   <li><tt>rejected</tt>: A hosted connection in the <tt>ordering</tt>
--   state enters the <tt>rejected</tt> state if it is deleted by the
--   customer.</li>
--   <li><tt>unknown</tt>: The state of the connection is not
--   available.</li>
--   </ul>
[$sel:connectionState:Connection'] :: Connection -> Maybe ConnectionState

-- | The name of the connection.
[$sel:connectionName:Connection'] :: Connection -> Maybe Text

-- | The MAC Security (MACsec) security keys associated with the
--   connection.
[$sel:macSecKeys:Connection'] :: Connection -> Maybe [MacSecKey]

-- | The name of the service provider associated with the connection.
[$sel:providerName:Connection'] :: Connection -> Maybe Text

-- | The ID of the connection.
[$sel:connectionId:Connection'] :: Connection -> Maybe Text

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
[$sel:awsLogicalDeviceId:Connection'] :: Connection -> Maybe Text

-- | Indicates whether the connection supports a secondary BGP peer in the
--   same address family (IPv4/IPv6).
[$sel:hasLogicalRedundancy:Connection'] :: Connection -> Maybe HasLogicalRedundancy

-- | The Direct Connect endpoint on which the physical connection
--   terminates.
[$sel:awsDevice:Connection'] :: Connection -> Maybe Text

-- | Indicates whether jumbo frames (9001 MTU) are supported.
[$sel:jumboFrameCapable:Connection'] :: Connection -> Maybe Bool

-- | The MAC Security (MACsec) port link status of the connection.
--   
--   The valid values are <tt>Encryption Up</tt>, which means that there is
--   an active Connection Key Name, or <tt>Encryption Down</tt>.
[$sel:portEncryptionStatus:Connection'] :: Connection -> Maybe Text

-- | The ID of the LAG.
[$sel:lagId:Connection'] :: Connection -> Maybe Text

-- | The MAC Security (MACsec) connection encryption mode.
--   
--   The valid values are <tt>no_encrypt</tt>, <tt>should_encrypt</tt>, and
--   <tt>must_encrypt</tt>.
[$sel:encryptionMode:Connection'] :: Connection -> Maybe Text

-- | The name of the Direct Connect service provider associated with the
--   connection.
[$sel:partnerName:Connection'] :: Connection -> Maybe Text

-- | The tags associated with the connection.
[$sel:tags:Connection'] :: Connection -> Maybe (NonEmpty Tag)

-- | The time of the most recent call to DescribeLoa for this connection.
[$sel:loaIssueTime:Connection'] :: Connection -> Maybe POSIX

-- | The ID of the account that owns the connection.
[$sel:ownerAccount:Connection'] :: Connection -> Maybe Text

-- | The Region where the connection is located.
[$sel:region:Connection'] :: Connection -> Maybe Text

-- | The ID of the VLAN.
[$sel:vlan:Connection'] :: Connection -> Maybe Int

-- | The location of the connection.
[$sel:location:Connection'] :: Connection -> Maybe Text

-- | Indicates whether the connection supports MAC Security (MACsec).
[$sel:macSecCapable:Connection'] :: Connection -> Maybe Bool

-- | Create a value of <a>Connection</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bandwidth:Connection'</a>, <a>connection_bandwidth</a> - The
--   bandwidth of the connection.
--   
--   <a>$sel:awsDeviceV2:Connection'</a>, <a>connection_awsDeviceV2</a> -
--   The Direct Connect endpoint that terminates the physical connection.
--   
--   <a>$sel:connectionState:Connection'</a>,
--   <a>connection_connectionState</a> - The state of the connection. The
--   following are the possible values:
--   
--   <ul>
--   <li><tt>ordering</tt>: The initial state of a hosted connection
--   provisioned on an interconnect. The connection stays in the ordering
--   state until the owner of the hosted connection confirms or declines
--   the connection order.</li>
--   <li><tt>requested</tt>: The initial state of a standard connection.
--   The connection stays in the requested state until the Letter of
--   Authorization (LOA) is sent to the customer.</li>
--   <li><tt>pending</tt>: The connection has been approved and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is up and the connection is
--   ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The connection is being deleted.</li>
--   <li><tt>deleted</tt>: The connection has been deleted.</li>
--   <li><tt>rejected</tt>: A hosted connection in the <tt>ordering</tt>
--   state enters the <tt>rejected</tt> state if it is deleted by the
--   customer.</li>
--   <li><tt>unknown</tt>: The state of the connection is not
--   available.</li>
--   </ul>
--   
--   <a>$sel:connectionName:Connection'</a>,
--   <a>connection_connectionName</a> - The name of the connection.
--   
--   <a>$sel:macSecKeys:Connection'</a>, <a>connection_macSecKeys</a> - The
--   MAC Security (MACsec) security keys associated with the connection.
--   
--   <a>$sel:providerName:Connection'</a>, <a>connection_providerName</a> -
--   The name of the service provider associated with the connection.
--   
--   <a>$sel:connectionId:Connection'</a>, <a>connection_connectionId</a> -
--   The ID of the connection.
--   
--   <a>$sel:awsLogicalDeviceId:Connection'</a>,
--   <a>connection_awsLogicalDeviceId</a> - The Direct Connect endpoint
--   that terminates the logical connection. This device might be different
--   than the device that terminates the physical connection.
--   
--   <a>$sel:hasLogicalRedundancy:Connection'</a>,
--   <a>connection_hasLogicalRedundancy</a> - Indicates whether the
--   connection supports a secondary BGP peer in the same address family
--   (IPv4/IPv6).
--   
--   <a>$sel:awsDevice:Connection'</a>, <a>connection_awsDevice</a> - The
--   Direct Connect endpoint on which the physical connection terminates.
--   
--   <a>$sel:jumboFrameCapable:Connection'</a>,
--   <a>connection_jumboFrameCapable</a> - Indicates whether jumbo frames
--   (9001 MTU) are supported.
--   
--   <a>$sel:portEncryptionStatus:Connection'</a>,
--   <a>connection_portEncryptionStatus</a> - The MAC Security (MACsec)
--   port link status of the connection.
--   
--   The valid values are <tt>Encryption Up</tt>, which means that there is
--   an active Connection Key Name, or <tt>Encryption Down</tt>.
--   
--   <a>$sel:lagId:Connection'</a>, <a>connection_lagId</a> - The ID of the
--   LAG.
--   
--   <a>$sel:encryptionMode:Connection'</a>,
--   <a>connection_encryptionMode</a> - The MAC Security (MACsec)
--   connection encryption mode.
--   
--   The valid values are <tt>no_encrypt</tt>, <tt>should_encrypt</tt>, and
--   <tt>must_encrypt</tt>.
--   
--   <a>$sel:partnerName:Connection'</a>, <a>connection_partnerName</a> -
--   The name of the Direct Connect service provider associated with the
--   connection.
--   
--   <a>$sel:tags:Connection'</a>, <a>connection_tags</a> - The tags
--   associated with the connection.
--   
--   <a>$sel:loaIssueTime:Connection'</a>, <a>connection_loaIssueTime</a> -
--   The time of the most recent call to DescribeLoa for this connection.
--   
--   <a>$sel:ownerAccount:Connection'</a>, <a>connection_ownerAccount</a> -
--   The ID of the account that owns the connection.
--   
--   <a>$sel:region:Connection'</a>, <a>connection_region</a> - The Region
--   where the connection is located.
--   
--   <a>$sel:vlan:Connection'</a>, <a>connection_vlan</a> - The ID of the
--   VLAN.
--   
--   <a>$sel:location:Connection'</a>, <a>connection_location</a> - The
--   location of the connection.
--   
--   <a>$sel:macSecCapable:Connection'</a>, <a>connection_macSecCapable</a>
--   - Indicates whether the connection supports MAC Security (MACsec).
newConnection :: Connection

-- | The bandwidth of the connection.
connection_bandwidth :: Lens' Connection (Maybe Text)

-- | The Direct Connect endpoint that terminates the physical connection.
connection_awsDeviceV2 :: Lens' Connection (Maybe Text)

-- | The state of the connection. The following are the possible values:
--   
--   <ul>
--   <li><tt>ordering</tt>: The initial state of a hosted connection
--   provisioned on an interconnect. The connection stays in the ordering
--   state until the owner of the hosted connection confirms or declines
--   the connection order.</li>
--   <li><tt>requested</tt>: The initial state of a standard connection.
--   The connection stays in the requested state until the Letter of
--   Authorization (LOA) is sent to the customer.</li>
--   <li><tt>pending</tt>: The connection has been approved and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is up and the connection is
--   ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The connection is being deleted.</li>
--   <li><tt>deleted</tt>: The connection has been deleted.</li>
--   <li><tt>rejected</tt>: A hosted connection in the <tt>ordering</tt>
--   state enters the <tt>rejected</tt> state if it is deleted by the
--   customer.</li>
--   <li><tt>unknown</tt>: The state of the connection is not
--   available.</li>
--   </ul>
connection_connectionState :: Lens' Connection (Maybe ConnectionState)

-- | The name of the connection.
connection_connectionName :: Lens' Connection (Maybe Text)

-- | The MAC Security (MACsec) security keys associated with the
--   connection.
connection_macSecKeys :: Lens' Connection (Maybe [MacSecKey])

-- | The name of the service provider associated with the connection.
connection_providerName :: Lens' Connection (Maybe Text)

-- | The ID of the connection.
connection_connectionId :: Lens' Connection (Maybe Text)

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
connection_awsLogicalDeviceId :: Lens' Connection (Maybe Text)

-- | Indicates whether the connection supports a secondary BGP peer in the
--   same address family (IPv4/IPv6).
connection_hasLogicalRedundancy :: Lens' Connection (Maybe HasLogicalRedundancy)

-- | The Direct Connect endpoint on which the physical connection
--   terminates.
connection_awsDevice :: Lens' Connection (Maybe Text)

-- | Indicates whether jumbo frames (9001 MTU) are supported.
connection_jumboFrameCapable :: Lens' Connection (Maybe Bool)

-- | The MAC Security (MACsec) port link status of the connection.
--   
--   The valid values are <tt>Encryption Up</tt>, which means that there is
--   an active Connection Key Name, or <tt>Encryption Down</tt>.
connection_portEncryptionStatus :: Lens' Connection (Maybe Text)

-- | The ID of the LAG.
connection_lagId :: Lens' Connection (Maybe Text)

-- | The MAC Security (MACsec) connection encryption mode.
--   
--   The valid values are <tt>no_encrypt</tt>, <tt>should_encrypt</tt>, and
--   <tt>must_encrypt</tt>.
connection_encryptionMode :: Lens' Connection (Maybe Text)

-- | The name of the Direct Connect service provider associated with the
--   connection.
connection_partnerName :: Lens' Connection (Maybe Text)

-- | The tags associated with the connection.
connection_tags :: Lens' Connection (Maybe (NonEmpty Tag))

-- | The time of the most recent call to DescribeLoa for this connection.
connection_loaIssueTime :: Lens' Connection (Maybe UTCTime)

-- | The ID of the account that owns the connection.
connection_ownerAccount :: Lens' Connection (Maybe Text)

-- | The Region where the connection is located.
connection_region :: Lens' Connection (Maybe Text)

-- | The ID of the VLAN.
connection_vlan :: Lens' Connection (Maybe Int)

-- | The location of the connection.
connection_location :: Lens' Connection (Maybe Text)

-- | Indicates whether the connection supports MAC Security (MACsec).
connection_macSecCapable :: Lens' Connection (Maybe Bool)
instance GHC.Generics.Generic Network.AWS.DirectConnect.DisassociateConnectionFromLag.DisassociateConnectionFromLag
instance GHC.Show.Show Network.AWS.DirectConnect.DisassociateConnectionFromLag.DisassociateConnectionFromLag
instance GHC.Read.Read Network.AWS.DirectConnect.DisassociateConnectionFromLag.DisassociateConnectionFromLag
instance GHC.Classes.Eq Network.AWS.DirectConnect.DisassociateConnectionFromLag.DisassociateConnectionFromLag
instance Network.AWS.Types.AWSRequest Network.AWS.DirectConnect.DisassociateConnectionFromLag.DisassociateConnectionFromLag
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.DisassociateConnectionFromLag.DisassociateConnectionFromLag
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.DisassociateConnectionFromLag.DisassociateConnectionFromLag
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DirectConnect.DisassociateConnectionFromLag.DisassociateConnectionFromLag
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.DisassociateConnectionFromLag.DisassociateConnectionFromLag
instance Network.AWS.Data.Path.ToPath Network.AWS.DirectConnect.DisassociateConnectionFromLag.DisassociateConnectionFromLag
instance Network.AWS.Data.Query.ToQuery Network.AWS.DirectConnect.DisassociateConnectionFromLag.DisassociateConnectionFromLag


-- | Displays all virtual interfaces for an account. Virtual interfaces
--   deleted fewer than 15 minutes before you make the request are also
--   returned. If you specify a connection ID, only the virtual interfaces
--   associated with the connection are returned. If you specify a virtual
--   interface ID, then only a single virtual interface is returned.
--   
--   A virtual interface (VLAN) transmits the traffic between the Direct
--   Connect location and the customer network.
module Network.AWS.DirectConnect.DescribeVirtualInterfaces

-- | <i>See:</i> <a>newDescribeVirtualInterfaces</a> smart constructor.
data DescribeVirtualInterfaces
DescribeVirtualInterfaces' :: Maybe Text -> Maybe Text -> DescribeVirtualInterfaces

-- | The ID of the connection.
[$sel:connectionId:DescribeVirtualInterfaces'] :: DescribeVirtualInterfaces -> Maybe Text

-- | The ID of the virtual interface.
[$sel:virtualInterfaceId:DescribeVirtualInterfaces'] :: DescribeVirtualInterfaces -> Maybe Text

-- | Create a value of <a>DescribeVirtualInterfaces</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connectionId:DescribeVirtualInterfaces'</a>,
--   <a>describeVirtualInterfaces_connectionId</a> - The ID of the
--   connection.
--   
--   <a>$sel:virtualInterfaceId:DescribeVirtualInterfaces'</a>,
--   <a>describeVirtualInterfaces_virtualInterfaceId</a> - The ID of the
--   virtual interface.
newDescribeVirtualInterfaces :: DescribeVirtualInterfaces

-- | The ID of the connection.
describeVirtualInterfaces_connectionId :: Lens' DescribeVirtualInterfaces (Maybe Text)

-- | The ID of the virtual interface.
describeVirtualInterfaces_virtualInterfaceId :: Lens' DescribeVirtualInterfaces (Maybe Text)

-- | <i>See:</i> <a>newDescribeVirtualInterfacesResponse</a> smart
--   constructor.
data DescribeVirtualInterfacesResponse
DescribeVirtualInterfacesResponse' :: Maybe [VirtualInterface] -> Int -> DescribeVirtualInterfacesResponse

-- | The virtual interfaces
[$sel:virtualInterfaces:DescribeVirtualInterfacesResponse'] :: DescribeVirtualInterfacesResponse -> Maybe [VirtualInterface]

-- | The response's http status code.
[$sel:httpStatus:DescribeVirtualInterfacesResponse'] :: DescribeVirtualInterfacesResponse -> Int

-- | Create a value of <a>DescribeVirtualInterfacesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:virtualInterfaces:DescribeVirtualInterfacesResponse'</a>,
--   <a>describeVirtualInterfacesResponse_virtualInterfaces</a> - The
--   virtual interfaces
--   
--   <a>$sel:httpStatus:DescribeVirtualInterfacesResponse'</a>,
--   <a>describeVirtualInterfacesResponse_httpStatus</a> - The response's
--   http status code.
newDescribeVirtualInterfacesResponse :: Int -> DescribeVirtualInterfacesResponse

-- | The virtual interfaces
describeVirtualInterfacesResponse_virtualInterfaces :: Lens' DescribeVirtualInterfacesResponse (Maybe [VirtualInterface])

-- | The response's http status code.
describeVirtualInterfacesResponse_httpStatus :: Lens' DescribeVirtualInterfacesResponse Int
instance GHC.Generics.Generic Network.AWS.DirectConnect.DescribeVirtualInterfaces.DescribeVirtualInterfaces
instance GHC.Show.Show Network.AWS.DirectConnect.DescribeVirtualInterfaces.DescribeVirtualInterfaces
instance GHC.Read.Read Network.AWS.DirectConnect.DescribeVirtualInterfaces.DescribeVirtualInterfaces
instance GHC.Classes.Eq Network.AWS.DirectConnect.DescribeVirtualInterfaces.DescribeVirtualInterfaces
instance GHC.Generics.Generic Network.AWS.DirectConnect.DescribeVirtualInterfaces.DescribeVirtualInterfacesResponse
instance GHC.Show.Show Network.AWS.DirectConnect.DescribeVirtualInterfaces.DescribeVirtualInterfacesResponse
instance GHC.Read.Read Network.AWS.DirectConnect.DescribeVirtualInterfaces.DescribeVirtualInterfacesResponse
instance GHC.Classes.Eq Network.AWS.DirectConnect.DescribeVirtualInterfaces.DescribeVirtualInterfacesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DirectConnect.DescribeVirtualInterfaces.DescribeVirtualInterfaces
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.DescribeVirtualInterfaces.DescribeVirtualInterfacesResponse
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.DescribeVirtualInterfaces.DescribeVirtualInterfaces
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.DescribeVirtualInterfaces.DescribeVirtualInterfaces
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DirectConnect.DescribeVirtualInterfaces.DescribeVirtualInterfaces
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.DescribeVirtualInterfaces.DescribeVirtualInterfaces
instance Network.AWS.Data.Path.ToPath Network.AWS.DirectConnect.DescribeVirtualInterfaces.DescribeVirtualInterfaces
instance Network.AWS.Data.Query.ToQuery Network.AWS.DirectConnect.DescribeVirtualInterfaces.DescribeVirtualInterfaces


-- | Lists the virtual private gateways owned by the account.
--   
--   You can create one or more Direct Connect private virtual interfaces
--   linked to a virtual private gateway.
module Network.AWS.DirectConnect.DescribeVirtualGateways

-- | <i>See:</i> <a>newDescribeVirtualGateways</a> smart constructor.
data DescribeVirtualGateways
DescribeVirtualGateways' :: DescribeVirtualGateways

-- | Create a value of <a>DescribeVirtualGateways</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDescribeVirtualGateways :: DescribeVirtualGateways

-- | <i>See:</i> <a>newDescribeVirtualGatewaysResponse</a> smart
--   constructor.
data DescribeVirtualGatewaysResponse
DescribeVirtualGatewaysResponse' :: Maybe [VirtualGateway] -> Int -> DescribeVirtualGatewaysResponse

-- | The virtual private gateways.
[$sel:virtualGateways:DescribeVirtualGatewaysResponse'] :: DescribeVirtualGatewaysResponse -> Maybe [VirtualGateway]

-- | The response's http status code.
[$sel:httpStatus:DescribeVirtualGatewaysResponse'] :: DescribeVirtualGatewaysResponse -> Int

-- | Create a value of <a>DescribeVirtualGatewaysResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:virtualGateways:DescribeVirtualGatewaysResponse'</a>,
--   <a>describeVirtualGatewaysResponse_virtualGateways</a> - The virtual
--   private gateways.
--   
--   <a>$sel:httpStatus:DescribeVirtualGatewaysResponse'</a>,
--   <a>describeVirtualGatewaysResponse_httpStatus</a> - The response's
--   http status code.
newDescribeVirtualGatewaysResponse :: Int -> DescribeVirtualGatewaysResponse

-- | The virtual private gateways.
describeVirtualGatewaysResponse_virtualGateways :: Lens' DescribeVirtualGatewaysResponse (Maybe [VirtualGateway])

-- | The response's http status code.
describeVirtualGatewaysResponse_httpStatus :: Lens' DescribeVirtualGatewaysResponse Int
instance GHC.Generics.Generic Network.AWS.DirectConnect.DescribeVirtualGateways.DescribeVirtualGateways
instance GHC.Show.Show Network.AWS.DirectConnect.DescribeVirtualGateways.DescribeVirtualGateways
instance GHC.Read.Read Network.AWS.DirectConnect.DescribeVirtualGateways.DescribeVirtualGateways
instance GHC.Classes.Eq Network.AWS.DirectConnect.DescribeVirtualGateways.DescribeVirtualGateways
instance GHC.Generics.Generic Network.AWS.DirectConnect.DescribeVirtualGateways.DescribeVirtualGatewaysResponse
instance GHC.Show.Show Network.AWS.DirectConnect.DescribeVirtualGateways.DescribeVirtualGatewaysResponse
instance GHC.Read.Read Network.AWS.DirectConnect.DescribeVirtualGateways.DescribeVirtualGatewaysResponse
instance GHC.Classes.Eq Network.AWS.DirectConnect.DescribeVirtualGateways.DescribeVirtualGatewaysResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DirectConnect.DescribeVirtualGateways.DescribeVirtualGateways
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.DescribeVirtualGateways.DescribeVirtualGatewaysResponse
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.DescribeVirtualGateways.DescribeVirtualGateways
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.DescribeVirtualGateways.DescribeVirtualGateways
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DirectConnect.DescribeVirtualGateways.DescribeVirtualGateways
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.DescribeVirtualGateways.DescribeVirtualGateways
instance Network.AWS.Data.Path.ToPath Network.AWS.DirectConnect.DescribeVirtualGateways.DescribeVirtualGateways
instance Network.AWS.Data.Query.ToQuery Network.AWS.DirectConnect.DescribeVirtualGateways.DescribeVirtualGateways


-- | Describes the tags associated with the specified Direct Connect
--   resources.
module Network.AWS.DirectConnect.DescribeTags

-- | <i>See:</i> <a>newDescribeTags</a> smart constructor.
data DescribeTags
DescribeTags' :: [Text] -> DescribeTags

-- | The Amazon Resource Names (ARNs) of the resources.
[$sel:resourceArns:DescribeTags'] :: DescribeTags -> [Text]

-- | Create a value of <a>DescribeTags</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArns:DescribeTags'</a>,
--   <a>describeTags_resourceArns</a> - The Amazon Resource Names (ARNs) of
--   the resources.
newDescribeTags :: DescribeTags

-- | The Amazon Resource Names (ARNs) of the resources.
describeTags_resourceArns :: Lens' DescribeTags [Text]

-- | <i>See:</i> <a>newDescribeTagsResponse</a> smart constructor.
data DescribeTagsResponse
DescribeTagsResponse' :: Maybe [ResourceTag] -> Int -> DescribeTagsResponse

-- | Information about the tags.
[$sel:resourceTags:DescribeTagsResponse'] :: DescribeTagsResponse -> Maybe [ResourceTag]

-- | The response's http status code.
[$sel:httpStatus:DescribeTagsResponse'] :: DescribeTagsResponse -> Int

-- | Create a value of <a>DescribeTagsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceTags:DescribeTagsResponse'</a>,
--   <a>describeTagsResponse_resourceTags</a> - Information about the tags.
--   
--   <a>$sel:httpStatus:DescribeTagsResponse'</a>,
--   <a>describeTagsResponse_httpStatus</a> - The response's http status
--   code.
newDescribeTagsResponse :: Int -> DescribeTagsResponse

-- | Information about the tags.
describeTagsResponse_resourceTags :: Lens' DescribeTagsResponse (Maybe [ResourceTag])

-- | The response's http status code.
describeTagsResponse_httpStatus :: Lens' DescribeTagsResponse Int
instance GHC.Generics.Generic Network.AWS.DirectConnect.DescribeTags.DescribeTags
instance GHC.Show.Show Network.AWS.DirectConnect.DescribeTags.DescribeTags
instance GHC.Read.Read Network.AWS.DirectConnect.DescribeTags.DescribeTags
instance GHC.Classes.Eq Network.AWS.DirectConnect.DescribeTags.DescribeTags
instance GHC.Generics.Generic Network.AWS.DirectConnect.DescribeTags.DescribeTagsResponse
instance GHC.Show.Show Network.AWS.DirectConnect.DescribeTags.DescribeTagsResponse
instance GHC.Read.Read Network.AWS.DirectConnect.DescribeTags.DescribeTagsResponse
instance GHC.Classes.Eq Network.AWS.DirectConnect.DescribeTags.DescribeTagsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DirectConnect.DescribeTags.DescribeTags
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.DescribeTags.DescribeTagsResponse
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.DescribeTags.DescribeTags
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.DescribeTags.DescribeTags
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DirectConnect.DescribeTags.DescribeTags
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.DescribeTags.DescribeTags
instance Network.AWS.Data.Path.ToPath Network.AWS.DirectConnect.DescribeTags.DescribeTags
instance Network.AWS.Data.Query.ToQuery Network.AWS.DirectConnect.DescribeTags.DescribeTags


-- | Lists the Direct Connect locations in the current Region. These are
--   the locations that can be selected when calling CreateConnection or
--   CreateInterconnect.
module Network.AWS.DirectConnect.DescribeLocations

-- | <i>See:</i> <a>newDescribeLocations</a> smart constructor.
data DescribeLocations
DescribeLocations' :: DescribeLocations

-- | Create a value of <a>DescribeLocations</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDescribeLocations :: DescribeLocations

-- | <i>See:</i> <a>newDescribeLocationsResponse</a> smart constructor.
data DescribeLocationsResponse
DescribeLocationsResponse' :: Maybe [Location] -> Int -> DescribeLocationsResponse

-- | The locations.
[$sel:locations:DescribeLocationsResponse'] :: DescribeLocationsResponse -> Maybe [Location]

-- | The response's http status code.
[$sel:httpStatus:DescribeLocationsResponse'] :: DescribeLocationsResponse -> Int

-- | Create a value of <a>DescribeLocationsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:locations:DescribeLocationsResponse'</a>,
--   <a>describeLocationsResponse_locations</a> - The locations.
--   
--   <a>$sel:httpStatus:DescribeLocationsResponse'</a>,
--   <a>describeLocationsResponse_httpStatus</a> - The response's http
--   status code.
newDescribeLocationsResponse :: Int -> DescribeLocationsResponse

-- | The locations.
describeLocationsResponse_locations :: Lens' DescribeLocationsResponse (Maybe [Location])

-- | The response's http status code.
describeLocationsResponse_httpStatus :: Lens' DescribeLocationsResponse Int
instance GHC.Generics.Generic Network.AWS.DirectConnect.DescribeLocations.DescribeLocations
instance GHC.Show.Show Network.AWS.DirectConnect.DescribeLocations.DescribeLocations
instance GHC.Read.Read Network.AWS.DirectConnect.DescribeLocations.DescribeLocations
instance GHC.Classes.Eq Network.AWS.DirectConnect.DescribeLocations.DescribeLocations
instance GHC.Generics.Generic Network.AWS.DirectConnect.DescribeLocations.DescribeLocationsResponse
instance GHC.Show.Show Network.AWS.DirectConnect.DescribeLocations.DescribeLocationsResponse
instance GHC.Read.Read Network.AWS.DirectConnect.DescribeLocations.DescribeLocationsResponse
instance GHC.Classes.Eq Network.AWS.DirectConnect.DescribeLocations.DescribeLocationsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DirectConnect.DescribeLocations.DescribeLocations
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.DescribeLocations.DescribeLocationsResponse
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.DescribeLocations.DescribeLocations
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.DescribeLocations.DescribeLocations
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DirectConnect.DescribeLocations.DescribeLocations
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.DescribeLocations.DescribeLocations
instance Network.AWS.Data.Path.ToPath Network.AWS.DirectConnect.DescribeLocations.DescribeLocations
instance Network.AWS.Data.Query.ToQuery Network.AWS.DirectConnect.DescribeLocations.DescribeLocations


-- | Gets the LOA-CFA for a connection, interconnect, or link aggregation
--   group (LAG).
--   
--   The Letter of Authorization - Connecting Facility Assignment (LOA-CFA)
--   is a document that is used when establishing your cross connect to
--   Amazon Web Services at the colocation facility. For more information,
--   see <a>Requesting Cross Connects at Direct Connect Locations</a> in
--   the <i>Direct Connect User Guide</i>.
module Network.AWS.DirectConnect.DescribeLoa

-- | <i>See:</i> <a>newDescribeLoa</a> smart constructor.
data DescribeLoa
DescribeLoa' :: Maybe Text -> Maybe LoaContentType -> Text -> DescribeLoa

-- | The name of the service provider who establishes connectivity on your
--   behalf. If you specify this parameter, the LOA-CFA lists the provider
--   name alongside your company name as the requester of the cross
--   connect.
[$sel:providerName:DescribeLoa'] :: DescribeLoa -> Maybe Text

-- | The standard media type for the LOA-CFA document. The only supported
--   value is application/pdf.
[$sel:loaContentType:DescribeLoa'] :: DescribeLoa -> Maybe LoaContentType

-- | The ID of a connection, LAG, or interconnect.
[$sel:connectionId:DescribeLoa'] :: DescribeLoa -> Text

-- | Create a value of <a>DescribeLoa</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:providerName:DescribeLoa'</a>, <a>describeLoa_providerName</a>
--   - The name of the service provider who establishes connectivity on
--   your behalf. If you specify this parameter, the LOA-CFA lists the
--   provider name alongside your company name as the requester of the
--   cross connect.
--   
--   <a>$sel:loaContentType:DescribeLoa'</a>,
--   <a>describeLoa_loaContentType</a> - The standard media type for the
--   LOA-CFA document. The only supported value is application/pdf.
--   
--   <a>$sel:connectionId:DescribeLoa'</a>, <a>describeLoa_connectionId</a>
--   - The ID of a connection, LAG, or interconnect.
newDescribeLoa :: Text -> DescribeLoa

-- | The name of the service provider who establishes connectivity on your
--   behalf. If you specify this parameter, the LOA-CFA lists the provider
--   name alongside your company name as the requester of the cross
--   connect.
describeLoa_providerName :: Lens' DescribeLoa (Maybe Text)

-- | The standard media type for the LOA-CFA document. The only supported
--   value is application/pdf.
describeLoa_loaContentType :: Lens' DescribeLoa (Maybe LoaContentType)

-- | The ID of a connection, LAG, or interconnect.
describeLoa_connectionId :: Lens' DescribeLoa Text

-- | Information about a Letter of Authorization - Connecting Facility
--   Assignment (LOA-CFA) for a connection.
--   
--   <i>See:</i> <a>newDescribeLoaResponse</a> smart constructor.
data DescribeLoaResponse
DescribeLoaResponse' :: Maybe Base64 -> Maybe LoaContentType -> Int -> DescribeLoaResponse

-- | The binary contents of the LOA-CFA document.
[$sel:loaContent:DescribeLoaResponse'] :: DescribeLoaResponse -> Maybe Base64

-- | The standard media type for the LOA-CFA document. The only supported
--   value is application/pdf.
[$sel:loaContentType:DescribeLoaResponse'] :: DescribeLoaResponse -> Maybe LoaContentType

-- | The response's http status code.
[$sel:httpStatus:DescribeLoaResponse'] :: DescribeLoaResponse -> Int

-- | Create a value of <a>DescribeLoaResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:loaContent:DescribeLoaResponse'</a>,
--   <a>describeLoaResponse_loaContent</a> - The binary contents of the
--   LOA-CFA document.-- -- <i>Note:</i> This <tt>Lens</tt> automatically
--   encodes and decodes Base64 data. -- The underlying isomorphism will
--   encode to Base64 representation during -- serialisation, and decode
--   from Base64 representation during deserialisation. -- This
--   <tt>Lens</tt> accepts and returns only raw unencoded data.
--   
--   <a>$sel:loaContentType:DescribeLoa'</a>,
--   <a>describeLoaResponse_loaContentType</a> - The standard media type
--   for the LOA-CFA document. The only supported value is application/pdf.
--   
--   <a>$sel:httpStatus:DescribeLoaResponse'</a>,
--   <a>describeLoaResponse_httpStatus</a> - The response's http status
--   code.
newDescribeLoaResponse :: Int -> DescribeLoaResponse

-- | The binary contents of the LOA-CFA document.-- -- <i>Note:</i> This
--   <tt>Lens</tt> automatically encodes and decodes Base64 data. -- The
--   underlying isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
describeLoaResponse_loaContent :: Lens' DescribeLoaResponse (Maybe ByteString)

-- | The standard media type for the LOA-CFA document. The only supported
--   value is application/pdf.
describeLoaResponse_loaContentType :: Lens' DescribeLoaResponse (Maybe LoaContentType)

-- | The response's http status code.
describeLoaResponse_httpStatus :: Lens' DescribeLoaResponse Int
instance GHC.Generics.Generic Network.AWS.DirectConnect.DescribeLoa.DescribeLoa
instance GHC.Show.Show Network.AWS.DirectConnect.DescribeLoa.DescribeLoa
instance GHC.Read.Read Network.AWS.DirectConnect.DescribeLoa.DescribeLoa
instance GHC.Classes.Eq Network.AWS.DirectConnect.DescribeLoa.DescribeLoa
instance GHC.Generics.Generic Network.AWS.DirectConnect.DescribeLoa.DescribeLoaResponse
instance GHC.Show.Show Network.AWS.DirectConnect.DescribeLoa.DescribeLoaResponse
instance GHC.Read.Read Network.AWS.DirectConnect.DescribeLoa.DescribeLoaResponse
instance GHC.Classes.Eq Network.AWS.DirectConnect.DescribeLoa.DescribeLoaResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DirectConnect.DescribeLoa.DescribeLoa
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.DescribeLoa.DescribeLoaResponse
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.DescribeLoa.DescribeLoa
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.DescribeLoa.DescribeLoa
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DirectConnect.DescribeLoa.DescribeLoa
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.DescribeLoa.DescribeLoa
instance Network.AWS.Data.Path.ToPath Network.AWS.DirectConnect.DescribeLoa.DescribeLoa
instance Network.AWS.Data.Query.ToQuery Network.AWS.DirectConnect.DescribeLoa.DescribeLoa


-- | Describes all your link aggregation groups (LAG) or the specified LAG.
module Network.AWS.DirectConnect.DescribeLags

-- | <i>See:</i> <a>newDescribeLags</a> smart constructor.
data DescribeLags
DescribeLags' :: Maybe Text -> DescribeLags

-- | The ID of the LAG.
[$sel:lagId:DescribeLags'] :: DescribeLags -> Maybe Text

-- | Create a value of <a>DescribeLags</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lagId:DescribeLags'</a>, <a>describeLags_lagId</a> - The ID of
--   the LAG.
newDescribeLags :: DescribeLags

-- | The ID of the LAG.
describeLags_lagId :: Lens' DescribeLags (Maybe Text)

-- | <i>See:</i> <a>newDescribeLagsResponse</a> smart constructor.
data DescribeLagsResponse
DescribeLagsResponse' :: Maybe [Lag] -> Int -> DescribeLagsResponse

-- | The LAGs.
[$sel:lags:DescribeLagsResponse'] :: DescribeLagsResponse -> Maybe [Lag]

-- | The response's http status code.
[$sel:httpStatus:DescribeLagsResponse'] :: DescribeLagsResponse -> Int

-- | Create a value of <a>DescribeLagsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lags:DescribeLagsResponse'</a>,
--   <a>describeLagsResponse_lags</a> - The LAGs.
--   
--   <a>$sel:httpStatus:DescribeLagsResponse'</a>,
--   <a>describeLagsResponse_httpStatus</a> - The response's http status
--   code.
newDescribeLagsResponse :: Int -> DescribeLagsResponse

-- | The LAGs.
describeLagsResponse_lags :: Lens' DescribeLagsResponse (Maybe [Lag])

-- | The response's http status code.
describeLagsResponse_httpStatus :: Lens' DescribeLagsResponse Int
instance GHC.Generics.Generic Network.AWS.DirectConnect.DescribeLags.DescribeLags
instance GHC.Show.Show Network.AWS.DirectConnect.DescribeLags.DescribeLags
instance GHC.Read.Read Network.AWS.DirectConnect.DescribeLags.DescribeLags
instance GHC.Classes.Eq Network.AWS.DirectConnect.DescribeLags.DescribeLags
instance GHC.Generics.Generic Network.AWS.DirectConnect.DescribeLags.DescribeLagsResponse
instance GHC.Show.Show Network.AWS.DirectConnect.DescribeLags.DescribeLagsResponse
instance GHC.Read.Read Network.AWS.DirectConnect.DescribeLags.DescribeLagsResponse
instance GHC.Classes.Eq Network.AWS.DirectConnect.DescribeLags.DescribeLagsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DirectConnect.DescribeLags.DescribeLags
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.DescribeLags.DescribeLagsResponse
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.DescribeLags.DescribeLags
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.DescribeLags.DescribeLags
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DirectConnect.DescribeLags.DescribeLags
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.DescribeLags.DescribeLags
instance Network.AWS.Data.Path.ToPath Network.AWS.DirectConnect.DescribeLags.DescribeLags
instance Network.AWS.Data.Query.ToQuery Network.AWS.DirectConnect.DescribeLags.DescribeLags


-- | Lists the interconnects owned by the account or only the specified
--   interconnect.
module Network.AWS.DirectConnect.DescribeInterconnects

-- | <i>See:</i> <a>newDescribeInterconnects</a> smart constructor.
data DescribeInterconnects
DescribeInterconnects' :: Maybe Text -> DescribeInterconnects

-- | The ID of the interconnect.
[$sel:interconnectId:DescribeInterconnects'] :: DescribeInterconnects -> Maybe Text

-- | Create a value of <a>DescribeInterconnects</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:interconnectId:DescribeInterconnects'</a>,
--   <a>describeInterconnects_interconnectId</a> - The ID of the
--   interconnect.
newDescribeInterconnects :: DescribeInterconnects

-- | The ID of the interconnect.
describeInterconnects_interconnectId :: Lens' DescribeInterconnects (Maybe Text)

-- | <i>See:</i> <a>newDescribeInterconnectsResponse</a> smart constructor.
data DescribeInterconnectsResponse
DescribeInterconnectsResponse' :: Maybe [Interconnect] -> Int -> DescribeInterconnectsResponse

-- | The interconnects.
[$sel:interconnects:DescribeInterconnectsResponse'] :: DescribeInterconnectsResponse -> Maybe [Interconnect]

-- | The response's http status code.
[$sel:httpStatus:DescribeInterconnectsResponse'] :: DescribeInterconnectsResponse -> Int

-- | Create a value of <a>DescribeInterconnectsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:interconnects:DescribeInterconnectsResponse'</a>,
--   <a>describeInterconnectsResponse_interconnects</a> - The
--   interconnects.
--   
--   <a>$sel:httpStatus:DescribeInterconnectsResponse'</a>,
--   <a>describeInterconnectsResponse_httpStatus</a> - The response's http
--   status code.
newDescribeInterconnectsResponse :: Int -> DescribeInterconnectsResponse

-- | The interconnects.
describeInterconnectsResponse_interconnects :: Lens' DescribeInterconnectsResponse (Maybe [Interconnect])

-- | The response's http status code.
describeInterconnectsResponse_httpStatus :: Lens' DescribeInterconnectsResponse Int
instance GHC.Generics.Generic Network.AWS.DirectConnect.DescribeInterconnects.DescribeInterconnects
instance GHC.Show.Show Network.AWS.DirectConnect.DescribeInterconnects.DescribeInterconnects
instance GHC.Read.Read Network.AWS.DirectConnect.DescribeInterconnects.DescribeInterconnects
instance GHC.Classes.Eq Network.AWS.DirectConnect.DescribeInterconnects.DescribeInterconnects
instance GHC.Generics.Generic Network.AWS.DirectConnect.DescribeInterconnects.DescribeInterconnectsResponse
instance GHC.Show.Show Network.AWS.DirectConnect.DescribeInterconnects.DescribeInterconnectsResponse
instance GHC.Read.Read Network.AWS.DirectConnect.DescribeInterconnects.DescribeInterconnectsResponse
instance GHC.Classes.Eq Network.AWS.DirectConnect.DescribeInterconnects.DescribeInterconnectsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DirectConnect.DescribeInterconnects.DescribeInterconnects
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.DescribeInterconnects.DescribeInterconnectsResponse
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.DescribeInterconnects.DescribeInterconnects
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.DescribeInterconnects.DescribeInterconnects
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DirectConnect.DescribeInterconnects.DescribeInterconnects
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.DescribeInterconnects.DescribeInterconnects
instance Network.AWS.Data.Path.ToPath Network.AWS.DirectConnect.DescribeInterconnects.DescribeInterconnects
instance Network.AWS.Data.Query.ToQuery Network.AWS.DirectConnect.DescribeInterconnects.DescribeInterconnects


-- | Lists the hosted connections that have been provisioned on the
--   specified interconnect or link aggregation group (LAG).
--   
--   Intended for use by Direct Connect Partners only.
module Network.AWS.DirectConnect.DescribeHostedConnections

-- | <i>See:</i> <a>newDescribeHostedConnections</a> smart constructor.
data DescribeHostedConnections
DescribeHostedConnections' :: Text -> DescribeHostedConnections

-- | The ID of the interconnect or LAG.
[$sel:connectionId:DescribeHostedConnections'] :: DescribeHostedConnections -> Text

-- | Create a value of <a>DescribeHostedConnections</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connectionId:DescribeHostedConnections'</a>,
--   <a>describeHostedConnections_connectionId</a> - The ID of the
--   interconnect or LAG.
newDescribeHostedConnections :: Text -> DescribeHostedConnections

-- | The ID of the interconnect or LAG.
describeHostedConnections_connectionId :: Lens' DescribeHostedConnections Text

-- | <i>See:</i> <a>newConnections</a> smart constructor.
data Connections
Connections' :: Maybe [Connection] -> Connections

-- | The connections.
[$sel:connections:Connections'] :: Connections -> Maybe [Connection]

-- | Create a value of <a>Connections</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connections:Connections'</a>, <a>connections_connections</a> -
--   The connections.
newConnections :: Connections

-- | The connections.
connections_connections :: Lens' Connections (Maybe [Connection])
instance GHC.Generics.Generic Network.AWS.DirectConnect.DescribeHostedConnections.DescribeHostedConnections
instance GHC.Show.Show Network.AWS.DirectConnect.DescribeHostedConnections.DescribeHostedConnections
instance GHC.Read.Read Network.AWS.DirectConnect.DescribeHostedConnections.DescribeHostedConnections
instance GHC.Classes.Eq Network.AWS.DirectConnect.DescribeHostedConnections.DescribeHostedConnections
instance Network.AWS.Types.AWSRequest Network.AWS.DirectConnect.DescribeHostedConnections.DescribeHostedConnections
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.DescribeHostedConnections.DescribeHostedConnections
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.DescribeHostedConnections.DescribeHostedConnections
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DirectConnect.DescribeHostedConnections.DescribeHostedConnections
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.DescribeHostedConnections.DescribeHostedConnections
instance Network.AWS.Data.Path.ToPath Network.AWS.DirectConnect.DescribeHostedConnections.DescribeHostedConnections
instance Network.AWS.Data.Query.ToQuery Network.AWS.DirectConnect.DescribeHostedConnections.DescribeHostedConnections


-- | Lists all your Direct Connect gateways or only the specified Direct
--   Connect gateway. Deleted Direct Connect gateways are not returned.
--   
--   This operation returns paginated results.
module Network.AWS.DirectConnect.DescribeDirectConnectGateways

-- | <i>See:</i> <a>newDescribeDirectConnectGateways</a> smart constructor.
data DescribeDirectConnectGateways
DescribeDirectConnectGateways' :: Maybe Text -> Maybe Int -> Maybe Text -> DescribeDirectConnectGateways

-- | The token provided in the previous call to retrieve the next page.
[$sel:nextToken:DescribeDirectConnectGateways'] :: DescribeDirectConnectGateways -> Maybe Text

-- | The maximum number of results to return with a single call. To
--   retrieve the remaining results, make another call with the returned
--   <tt>nextToken</tt> value.
--   
--   If <tt>MaxResults</tt> is given a value larger than 100, only 100
--   results are returned.
[$sel:maxResults:DescribeDirectConnectGateways'] :: DescribeDirectConnectGateways -> Maybe Int

-- | The ID of the Direct Connect gateway.
[$sel:directConnectGatewayId:DescribeDirectConnectGateways'] :: DescribeDirectConnectGateways -> Maybe Text

-- | Create a value of <a>DescribeDirectConnectGateways</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeDirectConnectGateways'</a>,
--   <a>describeDirectConnectGateways_nextToken</a> - The token provided in
--   the previous call to retrieve the next page.
--   
--   <a>$sel:maxResults:DescribeDirectConnectGateways'</a>,
--   <a>describeDirectConnectGateways_maxResults</a> - The maximum number
--   of results to return with a single call. To retrieve the remaining
--   results, make another call with the returned <tt>nextToken</tt> value.
--   
--   If <tt>MaxResults</tt> is given a value larger than 100, only 100
--   results are returned.
--   
--   <a>$sel:directConnectGatewayId:DescribeDirectConnectGateways'</a>,
--   <a>describeDirectConnectGateways_directConnectGatewayId</a> - The ID
--   of the Direct Connect gateway.
newDescribeDirectConnectGateways :: DescribeDirectConnectGateways

-- | The token provided in the previous call to retrieve the next page.
describeDirectConnectGateways_nextToken :: Lens' DescribeDirectConnectGateways (Maybe Text)

-- | The maximum number of results to return with a single call. To
--   retrieve the remaining results, make another call with the returned
--   <tt>nextToken</tt> value.
--   
--   If <tt>MaxResults</tt> is given a value larger than 100, only 100
--   results are returned.
describeDirectConnectGateways_maxResults :: Lens' DescribeDirectConnectGateways (Maybe Int)

-- | The ID of the Direct Connect gateway.
describeDirectConnectGateways_directConnectGatewayId :: Lens' DescribeDirectConnectGateways (Maybe Text)

-- | <i>See:</i> <a>newDescribeDirectConnectGatewaysResponse</a> smart
--   constructor.
data DescribeDirectConnectGatewaysResponse
DescribeDirectConnectGatewaysResponse' :: Maybe Text -> Maybe [DirectConnectGateway] -> Int -> DescribeDirectConnectGatewaysResponse

-- | The token to retrieve the next page.
[$sel:nextToken:DescribeDirectConnectGatewaysResponse'] :: DescribeDirectConnectGatewaysResponse -> Maybe Text

-- | The Direct Connect gateways.
[$sel:directConnectGateways:DescribeDirectConnectGatewaysResponse'] :: DescribeDirectConnectGatewaysResponse -> Maybe [DirectConnectGateway]

-- | The response's http status code.
[$sel:httpStatus:DescribeDirectConnectGatewaysResponse'] :: DescribeDirectConnectGatewaysResponse -> Int

-- | Create a value of <a>DescribeDirectConnectGatewaysResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeDirectConnectGateways'</a>,
--   <a>describeDirectConnectGatewaysResponse_nextToken</a> - The token to
--   retrieve the next page.
--   
--   
--   <a>$sel:directConnectGateways:DescribeDirectConnectGatewaysResponse'</a>,
--   <a>describeDirectConnectGatewaysResponse_directConnectGateways</a> -
--   The Direct Connect gateways.
--   
--   <a>$sel:httpStatus:DescribeDirectConnectGatewaysResponse'</a>,
--   <a>describeDirectConnectGatewaysResponse_httpStatus</a> - The
--   response's http status code.
newDescribeDirectConnectGatewaysResponse :: Int -> DescribeDirectConnectGatewaysResponse

-- | The token to retrieve the next page.
describeDirectConnectGatewaysResponse_nextToken :: Lens' DescribeDirectConnectGatewaysResponse (Maybe Text)

-- | The Direct Connect gateways.
describeDirectConnectGatewaysResponse_directConnectGateways :: Lens' DescribeDirectConnectGatewaysResponse (Maybe [DirectConnectGateway])

-- | The response's http status code.
describeDirectConnectGatewaysResponse_httpStatus :: Lens' DescribeDirectConnectGatewaysResponse Int
instance GHC.Generics.Generic Network.AWS.DirectConnect.DescribeDirectConnectGateways.DescribeDirectConnectGateways
instance GHC.Show.Show Network.AWS.DirectConnect.DescribeDirectConnectGateways.DescribeDirectConnectGateways
instance GHC.Read.Read Network.AWS.DirectConnect.DescribeDirectConnectGateways.DescribeDirectConnectGateways
instance GHC.Classes.Eq Network.AWS.DirectConnect.DescribeDirectConnectGateways.DescribeDirectConnectGateways
instance GHC.Generics.Generic Network.AWS.DirectConnect.DescribeDirectConnectGateways.DescribeDirectConnectGatewaysResponse
instance GHC.Show.Show Network.AWS.DirectConnect.DescribeDirectConnectGateways.DescribeDirectConnectGatewaysResponse
instance GHC.Read.Read Network.AWS.DirectConnect.DescribeDirectConnectGateways.DescribeDirectConnectGatewaysResponse
instance GHC.Classes.Eq Network.AWS.DirectConnect.DescribeDirectConnectGateways.DescribeDirectConnectGatewaysResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DirectConnect.DescribeDirectConnectGateways.DescribeDirectConnectGateways
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.DescribeDirectConnectGateways.DescribeDirectConnectGatewaysResponse
instance Network.AWS.Pager.AWSPager Network.AWS.DirectConnect.DescribeDirectConnectGateways.DescribeDirectConnectGateways
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.DescribeDirectConnectGateways.DescribeDirectConnectGateways
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.DescribeDirectConnectGateways.DescribeDirectConnectGateways
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DirectConnect.DescribeDirectConnectGateways.DescribeDirectConnectGateways
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.DescribeDirectConnectGateways.DescribeDirectConnectGateways
instance Network.AWS.Data.Path.ToPath Network.AWS.DirectConnect.DescribeDirectConnectGateways.DescribeDirectConnectGateways
instance Network.AWS.Data.Query.ToQuery Network.AWS.DirectConnect.DescribeDirectConnectGateways.DescribeDirectConnectGateways


-- | Lists the attachments between your Direct Connect gateways and virtual
--   interfaces. You must specify a Direct Connect gateway, a virtual
--   interface, or both. If you specify a Direct Connect gateway, the
--   response contains all virtual interfaces attached to the Direct
--   Connect gateway. If you specify a virtual interface, the response
--   contains all Direct Connect gateways attached to the virtual
--   interface. If you specify both, the response contains the attachment
--   between the Direct Connect gateway and the virtual interface.
--   
--   This operation returns paginated results.
module Network.AWS.DirectConnect.DescribeDirectConnectGatewayAttachments

-- | <i>See:</i> <a>newDescribeDirectConnectGatewayAttachments</a> smart
--   constructor.
data DescribeDirectConnectGatewayAttachments
DescribeDirectConnectGatewayAttachments' :: Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> DescribeDirectConnectGatewayAttachments

-- | The token provided in the previous call to retrieve the next page.
[$sel:nextToken:DescribeDirectConnectGatewayAttachments'] :: DescribeDirectConnectGatewayAttachments -> Maybe Text

-- | The maximum number of results to return with a single call. To
--   retrieve the remaining results, make another call with the returned
--   <tt>nextToken</tt> value.
--   
--   If <tt>MaxResults</tt> is given a value larger than 100, only 100
--   results are returned.
[$sel:maxResults:DescribeDirectConnectGatewayAttachments'] :: DescribeDirectConnectGatewayAttachments -> Maybe Int

-- | The ID of the virtual interface.
[$sel:virtualInterfaceId:DescribeDirectConnectGatewayAttachments'] :: DescribeDirectConnectGatewayAttachments -> Maybe Text

-- | The ID of the Direct Connect gateway.
[$sel:directConnectGatewayId:DescribeDirectConnectGatewayAttachments'] :: DescribeDirectConnectGatewayAttachments -> Maybe Text

-- | Create a value of <a>DescribeDirectConnectGatewayAttachments</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeDirectConnectGatewayAttachments'</a>,
--   <a>describeDirectConnectGatewayAttachments_nextToken</a> - The token
--   provided in the previous call to retrieve the next page.
--   
--   <a>$sel:maxResults:DescribeDirectConnectGatewayAttachments'</a>,
--   <a>describeDirectConnectGatewayAttachments_maxResults</a> - The
--   maximum number of results to return with a single call. To retrieve
--   the remaining results, make another call with the returned
--   <tt>nextToken</tt> value.
--   
--   If <tt>MaxResults</tt> is given a value larger than 100, only 100
--   results are returned.
--   
--   
--   <a>$sel:virtualInterfaceId:DescribeDirectConnectGatewayAttachments'</a>,
--   <a>describeDirectConnectGatewayAttachments_virtualInterfaceId</a> -
--   The ID of the virtual interface.
--   
--   
--   <a>$sel:directConnectGatewayId:DescribeDirectConnectGatewayAttachments'</a>,
--   <a>describeDirectConnectGatewayAttachments_directConnectGatewayId</a>
--   - The ID of the Direct Connect gateway.
newDescribeDirectConnectGatewayAttachments :: DescribeDirectConnectGatewayAttachments

-- | The token provided in the previous call to retrieve the next page.
describeDirectConnectGatewayAttachments_nextToken :: Lens' DescribeDirectConnectGatewayAttachments (Maybe Text)

-- | The maximum number of results to return with a single call. To
--   retrieve the remaining results, make another call with the returned
--   <tt>nextToken</tt> value.
--   
--   If <tt>MaxResults</tt> is given a value larger than 100, only 100
--   results are returned.
describeDirectConnectGatewayAttachments_maxResults :: Lens' DescribeDirectConnectGatewayAttachments (Maybe Int)

-- | The ID of the virtual interface.
describeDirectConnectGatewayAttachments_virtualInterfaceId :: Lens' DescribeDirectConnectGatewayAttachments (Maybe Text)

-- | The ID of the Direct Connect gateway.
describeDirectConnectGatewayAttachments_directConnectGatewayId :: Lens' DescribeDirectConnectGatewayAttachments (Maybe Text)

-- | <i>See:</i> <a>newDescribeDirectConnectGatewayAttachmentsResponse</a>
--   smart constructor.
data DescribeDirectConnectGatewayAttachmentsResponse
DescribeDirectConnectGatewayAttachmentsResponse' :: Maybe Text -> Maybe [DirectConnectGatewayAttachment] -> Int -> DescribeDirectConnectGatewayAttachmentsResponse

-- | The token to retrieve the next page.
[$sel:nextToken:DescribeDirectConnectGatewayAttachmentsResponse'] :: DescribeDirectConnectGatewayAttachmentsResponse -> Maybe Text

-- | The attachments.
[$sel:directConnectGatewayAttachments:DescribeDirectConnectGatewayAttachmentsResponse'] :: DescribeDirectConnectGatewayAttachmentsResponse -> Maybe [DirectConnectGatewayAttachment]

-- | The response's http status code.
[$sel:httpStatus:DescribeDirectConnectGatewayAttachmentsResponse'] :: DescribeDirectConnectGatewayAttachmentsResponse -> Int

-- | Create a value of
--   <a>DescribeDirectConnectGatewayAttachmentsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeDirectConnectGatewayAttachments'</a>,
--   <a>describeDirectConnectGatewayAttachmentsResponse_nextToken</a> - The
--   token to retrieve the next page.
--   
--   
--   <a>$sel:directConnectGatewayAttachments:DescribeDirectConnectGatewayAttachmentsResponse'</a>,
--   <a>describeDirectConnectGatewayAttachmentsResponse_directConnectGatewayAttachments</a>
--   - The attachments.
--   
--   
--   <a>$sel:httpStatus:DescribeDirectConnectGatewayAttachmentsResponse'</a>,
--   <a>describeDirectConnectGatewayAttachmentsResponse_httpStatus</a> -
--   The response's http status code.
newDescribeDirectConnectGatewayAttachmentsResponse :: Int -> DescribeDirectConnectGatewayAttachmentsResponse

-- | The token to retrieve the next page.
describeDirectConnectGatewayAttachmentsResponse_nextToken :: Lens' DescribeDirectConnectGatewayAttachmentsResponse (Maybe Text)

-- | The attachments.
describeDirectConnectGatewayAttachmentsResponse_directConnectGatewayAttachments :: Lens' DescribeDirectConnectGatewayAttachmentsResponse (Maybe [DirectConnectGatewayAttachment])

-- | The response's http status code.
describeDirectConnectGatewayAttachmentsResponse_httpStatus :: Lens' DescribeDirectConnectGatewayAttachmentsResponse Int
instance GHC.Generics.Generic Network.AWS.DirectConnect.DescribeDirectConnectGatewayAttachments.DescribeDirectConnectGatewayAttachments
instance GHC.Show.Show Network.AWS.DirectConnect.DescribeDirectConnectGatewayAttachments.DescribeDirectConnectGatewayAttachments
instance GHC.Read.Read Network.AWS.DirectConnect.DescribeDirectConnectGatewayAttachments.DescribeDirectConnectGatewayAttachments
instance GHC.Classes.Eq Network.AWS.DirectConnect.DescribeDirectConnectGatewayAttachments.DescribeDirectConnectGatewayAttachments
instance GHC.Generics.Generic Network.AWS.DirectConnect.DescribeDirectConnectGatewayAttachments.DescribeDirectConnectGatewayAttachmentsResponse
instance GHC.Show.Show Network.AWS.DirectConnect.DescribeDirectConnectGatewayAttachments.DescribeDirectConnectGatewayAttachmentsResponse
instance GHC.Read.Read Network.AWS.DirectConnect.DescribeDirectConnectGatewayAttachments.DescribeDirectConnectGatewayAttachmentsResponse
instance GHC.Classes.Eq Network.AWS.DirectConnect.DescribeDirectConnectGatewayAttachments.DescribeDirectConnectGatewayAttachmentsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DirectConnect.DescribeDirectConnectGatewayAttachments.DescribeDirectConnectGatewayAttachments
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.DescribeDirectConnectGatewayAttachments.DescribeDirectConnectGatewayAttachmentsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.DirectConnect.DescribeDirectConnectGatewayAttachments.DescribeDirectConnectGatewayAttachments
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.DescribeDirectConnectGatewayAttachments.DescribeDirectConnectGatewayAttachments
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.DescribeDirectConnectGatewayAttachments.DescribeDirectConnectGatewayAttachments
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DirectConnect.DescribeDirectConnectGatewayAttachments.DescribeDirectConnectGatewayAttachments
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.DescribeDirectConnectGatewayAttachments.DescribeDirectConnectGatewayAttachments
instance Network.AWS.Data.Path.ToPath Network.AWS.DirectConnect.DescribeDirectConnectGatewayAttachments.DescribeDirectConnectGatewayAttachments
instance Network.AWS.Data.Query.ToQuery Network.AWS.DirectConnect.DescribeDirectConnectGatewayAttachments.DescribeDirectConnectGatewayAttachments


-- | Lists the associations between your Direct Connect gateways and
--   virtual private gateways and transit gateways. You must specify one of
--   the following:
--   
--   <ul>
--   <li>A Direct Connect gatewayThe response contains all virtual private
--   gateways and transit gateways associated with the Direct Connect
--   gateway.</li>
--   <li>A virtual private gatewayThe response contains the Direct Connect
--   gateway.</li>
--   <li>A transit gatewayThe response contains the Direct Connect
--   gateway.</li>
--   <li>A Direct Connect gateway and a virtual private gatewayThe response
--   contains the association between the Direct Connect gateway and
--   virtual private gateway.</li>
--   <li>A Direct Connect gateway and a transit gatewayThe response
--   contains the association between the Direct Connect gateway and
--   transit gateway.</li>
--   </ul>
--   
--   This operation returns paginated results.
module Network.AWS.DirectConnect.DescribeDirectConnectGatewayAssociations

-- | <i>See:</i> <a>newDescribeDirectConnectGatewayAssociations</a> smart
--   constructor.
data DescribeDirectConnectGatewayAssociations
DescribeDirectConnectGatewayAssociations' :: Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> DescribeDirectConnectGatewayAssociations

-- | The token provided in the previous call to retrieve the next page.
[$sel:nextToken:DescribeDirectConnectGatewayAssociations'] :: DescribeDirectConnectGatewayAssociations -> Maybe Text

-- | The ID of the virtual private gateway or transit gateway.
[$sel:virtualGatewayId:DescribeDirectConnectGatewayAssociations'] :: DescribeDirectConnectGatewayAssociations -> Maybe Text

-- | The maximum number of results to return with a single call. To
--   retrieve the remaining results, make another call with the returned
--   <tt>nextToken</tt> value.
--   
--   If <tt>MaxResults</tt> is given a value larger than 100, only 100
--   results are returned.
[$sel:maxResults:DescribeDirectConnectGatewayAssociations'] :: DescribeDirectConnectGatewayAssociations -> Maybe Int

-- | The ID of the associated gateway.
[$sel:associatedGatewayId:DescribeDirectConnectGatewayAssociations'] :: DescribeDirectConnectGatewayAssociations -> Maybe Text

-- | The ID of the Direct Connect gateway association.
[$sel:associationId:DescribeDirectConnectGatewayAssociations'] :: DescribeDirectConnectGatewayAssociations -> Maybe Text

-- | The ID of the Direct Connect gateway.
[$sel:directConnectGatewayId:DescribeDirectConnectGatewayAssociations'] :: DescribeDirectConnectGatewayAssociations -> Maybe Text

-- | Create a value of <a>DescribeDirectConnectGatewayAssociations</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeDirectConnectGatewayAssociations'</a>,
--   <a>describeDirectConnectGatewayAssociations_nextToken</a> - The token
--   provided in the previous call to retrieve the next page.
--   
--   
--   <a>$sel:virtualGatewayId:DescribeDirectConnectGatewayAssociations'</a>,
--   <a>describeDirectConnectGatewayAssociations_virtualGatewayId</a> - The
--   ID of the virtual private gateway or transit gateway.
--   
--   <a>$sel:maxResults:DescribeDirectConnectGatewayAssociations'</a>,
--   <a>describeDirectConnectGatewayAssociations_maxResults</a> - The
--   maximum number of results to return with a single call. To retrieve
--   the remaining results, make another call with the returned
--   <tt>nextToken</tt> value.
--   
--   If <tt>MaxResults</tt> is given a value larger than 100, only 100
--   results are returned.
--   
--   
--   <a>$sel:associatedGatewayId:DescribeDirectConnectGatewayAssociations'</a>,
--   <a>describeDirectConnectGatewayAssociations_associatedGatewayId</a> -
--   The ID of the associated gateway.
--   
--   <a>$sel:associationId:DescribeDirectConnectGatewayAssociations'</a>,
--   <a>describeDirectConnectGatewayAssociations_associationId</a> - The ID
--   of the Direct Connect gateway association.
--   
--   
--   <a>$sel:directConnectGatewayId:DescribeDirectConnectGatewayAssociations'</a>,
--   <a>describeDirectConnectGatewayAssociations_directConnectGatewayId</a>
--   - The ID of the Direct Connect gateway.
newDescribeDirectConnectGatewayAssociations :: DescribeDirectConnectGatewayAssociations

-- | The token provided in the previous call to retrieve the next page.
describeDirectConnectGatewayAssociations_nextToken :: Lens' DescribeDirectConnectGatewayAssociations (Maybe Text)

-- | The ID of the virtual private gateway or transit gateway.
describeDirectConnectGatewayAssociations_virtualGatewayId :: Lens' DescribeDirectConnectGatewayAssociations (Maybe Text)

-- | The maximum number of results to return with a single call. To
--   retrieve the remaining results, make another call with the returned
--   <tt>nextToken</tt> value.
--   
--   If <tt>MaxResults</tt> is given a value larger than 100, only 100
--   results are returned.
describeDirectConnectGatewayAssociations_maxResults :: Lens' DescribeDirectConnectGatewayAssociations (Maybe Int)

-- | The ID of the associated gateway.
describeDirectConnectGatewayAssociations_associatedGatewayId :: Lens' DescribeDirectConnectGatewayAssociations (Maybe Text)

-- | The ID of the Direct Connect gateway association.
describeDirectConnectGatewayAssociations_associationId :: Lens' DescribeDirectConnectGatewayAssociations (Maybe Text)

-- | The ID of the Direct Connect gateway.
describeDirectConnectGatewayAssociations_directConnectGatewayId :: Lens' DescribeDirectConnectGatewayAssociations (Maybe Text)

-- | <i>See:</i> <a>newDescribeDirectConnectGatewayAssociationsResponse</a>
--   smart constructor.
data DescribeDirectConnectGatewayAssociationsResponse
DescribeDirectConnectGatewayAssociationsResponse' :: Maybe Text -> Maybe [DirectConnectGatewayAssociation] -> Int -> DescribeDirectConnectGatewayAssociationsResponse

-- | The token to retrieve the next page.
[$sel:nextToken:DescribeDirectConnectGatewayAssociationsResponse'] :: DescribeDirectConnectGatewayAssociationsResponse -> Maybe Text

-- | Information about the associations.
[$sel:directConnectGatewayAssociations:DescribeDirectConnectGatewayAssociationsResponse'] :: DescribeDirectConnectGatewayAssociationsResponse -> Maybe [DirectConnectGatewayAssociation]

-- | The response's http status code.
[$sel:httpStatus:DescribeDirectConnectGatewayAssociationsResponse'] :: DescribeDirectConnectGatewayAssociationsResponse -> Int

-- | Create a value of
--   <a>DescribeDirectConnectGatewayAssociationsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeDirectConnectGatewayAssociations'</a>,
--   <a>describeDirectConnectGatewayAssociationsResponse_nextToken</a> -
--   The token to retrieve the next page.
--   
--   
--   <a>$sel:directConnectGatewayAssociations:DescribeDirectConnectGatewayAssociationsResponse'</a>,
--   <a>describeDirectConnectGatewayAssociationsResponse_directConnectGatewayAssociations</a>
--   - Information about the associations.
--   
--   
--   <a>$sel:httpStatus:DescribeDirectConnectGatewayAssociationsResponse'</a>,
--   <a>describeDirectConnectGatewayAssociationsResponse_httpStatus</a> -
--   The response's http status code.
newDescribeDirectConnectGatewayAssociationsResponse :: Int -> DescribeDirectConnectGatewayAssociationsResponse

-- | The token to retrieve the next page.
describeDirectConnectGatewayAssociationsResponse_nextToken :: Lens' DescribeDirectConnectGatewayAssociationsResponse (Maybe Text)

-- | Information about the associations.
describeDirectConnectGatewayAssociationsResponse_directConnectGatewayAssociations :: Lens' DescribeDirectConnectGatewayAssociationsResponse (Maybe [DirectConnectGatewayAssociation])

-- | The response's http status code.
describeDirectConnectGatewayAssociationsResponse_httpStatus :: Lens' DescribeDirectConnectGatewayAssociationsResponse Int
instance GHC.Generics.Generic Network.AWS.DirectConnect.DescribeDirectConnectGatewayAssociations.DescribeDirectConnectGatewayAssociations
instance GHC.Show.Show Network.AWS.DirectConnect.DescribeDirectConnectGatewayAssociations.DescribeDirectConnectGatewayAssociations
instance GHC.Read.Read Network.AWS.DirectConnect.DescribeDirectConnectGatewayAssociations.DescribeDirectConnectGatewayAssociations
instance GHC.Classes.Eq Network.AWS.DirectConnect.DescribeDirectConnectGatewayAssociations.DescribeDirectConnectGatewayAssociations
instance GHC.Generics.Generic Network.AWS.DirectConnect.DescribeDirectConnectGatewayAssociations.DescribeDirectConnectGatewayAssociationsResponse
instance GHC.Show.Show Network.AWS.DirectConnect.DescribeDirectConnectGatewayAssociations.DescribeDirectConnectGatewayAssociationsResponse
instance GHC.Read.Read Network.AWS.DirectConnect.DescribeDirectConnectGatewayAssociations.DescribeDirectConnectGatewayAssociationsResponse
instance GHC.Classes.Eq Network.AWS.DirectConnect.DescribeDirectConnectGatewayAssociations.DescribeDirectConnectGatewayAssociationsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DirectConnect.DescribeDirectConnectGatewayAssociations.DescribeDirectConnectGatewayAssociations
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.DescribeDirectConnectGatewayAssociations.DescribeDirectConnectGatewayAssociationsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.DirectConnect.DescribeDirectConnectGatewayAssociations.DescribeDirectConnectGatewayAssociations
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.DescribeDirectConnectGatewayAssociations.DescribeDirectConnectGatewayAssociations
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.DescribeDirectConnectGatewayAssociations.DescribeDirectConnectGatewayAssociations
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DirectConnect.DescribeDirectConnectGatewayAssociations.DescribeDirectConnectGatewayAssociations
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.DescribeDirectConnectGatewayAssociations.DescribeDirectConnectGatewayAssociations
instance Network.AWS.Data.Path.ToPath Network.AWS.DirectConnect.DescribeDirectConnectGatewayAssociations.DescribeDirectConnectGatewayAssociations
instance Network.AWS.Data.Query.ToQuery Network.AWS.DirectConnect.DescribeDirectConnectGatewayAssociations.DescribeDirectConnectGatewayAssociations


-- | Describes one or more association proposals for connection between a
--   virtual private gateway or transit gateway and a Direct Connect
--   gateway.
module Network.AWS.DirectConnect.DescribeDirectConnectGatewayAssociationProposals

-- | <i>See:</i> <a>newDescribeDirectConnectGatewayAssociationProposals</a>
--   smart constructor.
data DescribeDirectConnectGatewayAssociationProposals
DescribeDirectConnectGatewayAssociationProposals' :: Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> DescribeDirectConnectGatewayAssociationProposals

-- | The token for the next page of results.
[$sel:nextToken:DescribeDirectConnectGatewayAssociationProposals'] :: DescribeDirectConnectGatewayAssociationProposals -> Maybe Text

-- | The ID of the proposal.
[$sel:proposalId:DescribeDirectConnectGatewayAssociationProposals'] :: DescribeDirectConnectGatewayAssociationProposals -> Maybe Text

-- | The maximum number of results to return with a single call. To
--   retrieve the remaining results, make another call with the returned
--   <tt>nextToken</tt> value.
--   
--   If <tt>MaxResults</tt> is given a value larger than 100, only 100
--   results are returned.
[$sel:maxResults:DescribeDirectConnectGatewayAssociationProposals'] :: DescribeDirectConnectGatewayAssociationProposals -> Maybe Int

-- | The ID of the associated gateway.
[$sel:associatedGatewayId:DescribeDirectConnectGatewayAssociationProposals'] :: DescribeDirectConnectGatewayAssociationProposals -> Maybe Text

-- | The ID of the Direct Connect gateway.
[$sel:directConnectGatewayId:DescribeDirectConnectGatewayAssociationProposals'] :: DescribeDirectConnectGatewayAssociationProposals -> Maybe Text

-- | Create a value of
--   <a>DescribeDirectConnectGatewayAssociationProposals</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:nextToken:DescribeDirectConnectGatewayAssociationProposals'</a>,
--   <a>describeDirectConnectGatewayAssociationProposals_nextToken</a> -
--   The token for the next page of results.
--   
--   
--   <a>$sel:proposalId:DescribeDirectConnectGatewayAssociationProposals'</a>,
--   <a>describeDirectConnectGatewayAssociationProposals_proposalId</a> -
--   The ID of the proposal.
--   
--   
--   <a>$sel:maxResults:DescribeDirectConnectGatewayAssociationProposals'</a>,
--   <a>describeDirectConnectGatewayAssociationProposals_maxResults</a> -
--   The maximum number of results to return with a single call. To
--   retrieve the remaining results, make another call with the returned
--   <tt>nextToken</tt> value.
--   
--   If <tt>MaxResults</tt> is given a value larger than 100, only 100
--   results are returned.
--   
--   
--   <a>$sel:associatedGatewayId:DescribeDirectConnectGatewayAssociationProposals'</a>,
--   <a>describeDirectConnectGatewayAssociationProposals_associatedGatewayId</a>
--   - The ID of the associated gateway.
--   
--   
--   <a>$sel:directConnectGatewayId:DescribeDirectConnectGatewayAssociationProposals'</a>,
--   <a>describeDirectConnectGatewayAssociationProposals_directConnectGatewayId</a>
--   - The ID of the Direct Connect gateway.
newDescribeDirectConnectGatewayAssociationProposals :: DescribeDirectConnectGatewayAssociationProposals

-- | The token for the next page of results.
describeDirectConnectGatewayAssociationProposals_nextToken :: Lens' DescribeDirectConnectGatewayAssociationProposals (Maybe Text)

-- | The ID of the proposal.
describeDirectConnectGatewayAssociationProposals_proposalId :: Lens' DescribeDirectConnectGatewayAssociationProposals (Maybe Text)

-- | The maximum number of results to return with a single call. To
--   retrieve the remaining results, make another call with the returned
--   <tt>nextToken</tt> value.
--   
--   If <tt>MaxResults</tt> is given a value larger than 100, only 100
--   results are returned.
describeDirectConnectGatewayAssociationProposals_maxResults :: Lens' DescribeDirectConnectGatewayAssociationProposals (Maybe Int)

-- | The ID of the associated gateway.
describeDirectConnectGatewayAssociationProposals_associatedGatewayId :: Lens' DescribeDirectConnectGatewayAssociationProposals (Maybe Text)

-- | The ID of the Direct Connect gateway.
describeDirectConnectGatewayAssociationProposals_directConnectGatewayId :: Lens' DescribeDirectConnectGatewayAssociationProposals (Maybe Text)

-- | <i>See:</i>
--   <a>newDescribeDirectConnectGatewayAssociationProposalsResponse</a>
--   smart constructor.
data DescribeDirectConnectGatewayAssociationProposalsResponse
DescribeDirectConnectGatewayAssociationProposalsResponse' :: Maybe Text -> Maybe [DirectConnectGatewayAssociationProposal] -> Int -> DescribeDirectConnectGatewayAssociationProposalsResponse

-- | The token to use to retrieve the next page of results. This value is
--   <tt>null</tt> when there are no more results to return.
[$sel:nextToken:DescribeDirectConnectGatewayAssociationProposalsResponse'] :: DescribeDirectConnectGatewayAssociationProposalsResponse -> Maybe Text

-- | Describes the Direct Connect gateway association proposals.
[$sel:directConnectGatewayAssociationProposals:DescribeDirectConnectGatewayAssociationProposalsResponse'] :: DescribeDirectConnectGatewayAssociationProposalsResponse -> Maybe [DirectConnectGatewayAssociationProposal]

-- | The response's http status code.
[$sel:httpStatus:DescribeDirectConnectGatewayAssociationProposalsResponse'] :: DescribeDirectConnectGatewayAssociationProposalsResponse -> Int

-- | Create a value of
--   <a>DescribeDirectConnectGatewayAssociationProposalsResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:nextToken:DescribeDirectConnectGatewayAssociationProposals'</a>,
--   <a>describeDirectConnectGatewayAssociationProposalsResponse_nextToken</a>
--   - The token to use to retrieve the next page of results. This value is
--   <tt>null</tt> when there are no more results to return.
--   
--   
--   <a>$sel:directConnectGatewayAssociationProposals:DescribeDirectConnectGatewayAssociationProposalsResponse'</a>,
--   <a>describeDirectConnectGatewayAssociationProposalsResponse_directConnectGatewayAssociationProposals</a>
--   - Describes the Direct Connect gateway association proposals.
--   
--   
--   <a>$sel:httpStatus:DescribeDirectConnectGatewayAssociationProposalsResponse'</a>,
--   <a>describeDirectConnectGatewayAssociationProposalsResponse_httpStatus</a>
--   - The response's http status code.
newDescribeDirectConnectGatewayAssociationProposalsResponse :: Int -> DescribeDirectConnectGatewayAssociationProposalsResponse

-- | The token to use to retrieve the next page of results. This value is
--   <tt>null</tt> when there are no more results to return.
describeDirectConnectGatewayAssociationProposalsResponse_nextToken :: Lens' DescribeDirectConnectGatewayAssociationProposalsResponse (Maybe Text)

-- | Describes the Direct Connect gateway association proposals.
describeDirectConnectGatewayAssociationProposalsResponse_directConnectGatewayAssociationProposals :: Lens' DescribeDirectConnectGatewayAssociationProposalsResponse (Maybe [DirectConnectGatewayAssociationProposal])

-- | The response's http status code.
describeDirectConnectGatewayAssociationProposalsResponse_httpStatus :: Lens' DescribeDirectConnectGatewayAssociationProposalsResponse Int
instance GHC.Generics.Generic Network.AWS.DirectConnect.DescribeDirectConnectGatewayAssociationProposals.DescribeDirectConnectGatewayAssociationProposals
instance GHC.Show.Show Network.AWS.DirectConnect.DescribeDirectConnectGatewayAssociationProposals.DescribeDirectConnectGatewayAssociationProposals
instance GHC.Read.Read Network.AWS.DirectConnect.DescribeDirectConnectGatewayAssociationProposals.DescribeDirectConnectGatewayAssociationProposals
instance GHC.Classes.Eq Network.AWS.DirectConnect.DescribeDirectConnectGatewayAssociationProposals.DescribeDirectConnectGatewayAssociationProposals
instance GHC.Generics.Generic Network.AWS.DirectConnect.DescribeDirectConnectGatewayAssociationProposals.DescribeDirectConnectGatewayAssociationProposalsResponse
instance GHC.Show.Show Network.AWS.DirectConnect.DescribeDirectConnectGatewayAssociationProposals.DescribeDirectConnectGatewayAssociationProposalsResponse
instance GHC.Read.Read Network.AWS.DirectConnect.DescribeDirectConnectGatewayAssociationProposals.DescribeDirectConnectGatewayAssociationProposalsResponse
instance GHC.Classes.Eq Network.AWS.DirectConnect.DescribeDirectConnectGatewayAssociationProposals.DescribeDirectConnectGatewayAssociationProposalsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DirectConnect.DescribeDirectConnectGatewayAssociationProposals.DescribeDirectConnectGatewayAssociationProposals
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.DescribeDirectConnectGatewayAssociationProposals.DescribeDirectConnectGatewayAssociationProposalsResponse
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.DescribeDirectConnectGatewayAssociationProposals.DescribeDirectConnectGatewayAssociationProposals
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.DescribeDirectConnectGatewayAssociationProposals.DescribeDirectConnectGatewayAssociationProposals
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DirectConnect.DescribeDirectConnectGatewayAssociationProposals.DescribeDirectConnectGatewayAssociationProposals
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.DescribeDirectConnectGatewayAssociationProposals.DescribeDirectConnectGatewayAssociationProposals
instance Network.AWS.Data.Path.ToPath Network.AWS.DirectConnect.DescribeDirectConnectGatewayAssociationProposals.DescribeDirectConnectGatewayAssociationProposals
instance Network.AWS.Data.Query.ToQuery Network.AWS.DirectConnect.DescribeDirectConnectGatewayAssociationProposals.DescribeDirectConnectGatewayAssociationProposals


-- | Displays the specified connection or all connections in this Region.
module Network.AWS.DirectConnect.DescribeConnections

-- | <i>See:</i> <a>newDescribeConnections</a> smart constructor.
data DescribeConnections
DescribeConnections' :: Maybe Text -> DescribeConnections

-- | The ID of the connection.
[$sel:connectionId:DescribeConnections'] :: DescribeConnections -> Maybe Text

-- | Create a value of <a>DescribeConnections</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connectionId:DescribeConnections'</a>,
--   <a>describeConnections_connectionId</a> - The ID of the connection.
newDescribeConnections :: DescribeConnections

-- | The ID of the connection.
describeConnections_connectionId :: Lens' DescribeConnections (Maybe Text)

-- | <i>See:</i> <a>newConnections</a> smart constructor.
data Connections
Connections' :: Maybe [Connection] -> Connections

-- | The connections.
[$sel:connections:Connections'] :: Connections -> Maybe [Connection]

-- | Create a value of <a>Connections</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connections:Connections'</a>, <a>connections_connections</a> -
--   The connections.
newConnections :: Connections

-- | The connections.
connections_connections :: Lens' Connections (Maybe [Connection])
instance GHC.Generics.Generic Network.AWS.DirectConnect.DescribeConnections.DescribeConnections
instance GHC.Show.Show Network.AWS.DirectConnect.DescribeConnections.DescribeConnections
instance GHC.Read.Read Network.AWS.DirectConnect.DescribeConnections.DescribeConnections
instance GHC.Classes.Eq Network.AWS.DirectConnect.DescribeConnections.DescribeConnections
instance Network.AWS.Types.AWSRequest Network.AWS.DirectConnect.DescribeConnections.DescribeConnections
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.DescribeConnections.DescribeConnections
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.DescribeConnections.DescribeConnections
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DirectConnect.DescribeConnections.DescribeConnections
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.DescribeConnections.DescribeConnections
instance Network.AWS.Data.Path.ToPath Network.AWS.DirectConnect.DescribeConnections.DescribeConnections
instance Network.AWS.Data.Query.ToQuery Network.AWS.DirectConnect.DescribeConnections.DescribeConnections


-- | Deletes a virtual interface.
module Network.AWS.DirectConnect.DeleteVirtualInterface

-- | <i>See:</i> <a>newDeleteVirtualInterface</a> smart constructor.
data DeleteVirtualInterface
DeleteVirtualInterface' :: Text -> DeleteVirtualInterface

-- | The ID of the virtual interface.
[$sel:virtualInterfaceId:DeleteVirtualInterface'] :: DeleteVirtualInterface -> Text

-- | Create a value of <a>DeleteVirtualInterface</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:virtualInterfaceId:DeleteVirtualInterface'</a>,
--   <a>deleteVirtualInterface_virtualInterfaceId</a> - The ID of the
--   virtual interface.
newDeleteVirtualInterface :: Text -> DeleteVirtualInterface

-- | The ID of the virtual interface.
deleteVirtualInterface_virtualInterfaceId :: Lens' DeleteVirtualInterface Text

-- | <i>See:</i> <a>newDeleteVirtualInterfaceResponse</a> smart
--   constructor.
data DeleteVirtualInterfaceResponse
DeleteVirtualInterfaceResponse' :: Maybe VirtualInterfaceState -> Int -> DeleteVirtualInterfaceResponse

-- | The state of the virtual interface. The following are the possible
--   values:
--   
--   <ul>
--   <li><tt>confirming</tt>: The creation of the virtual interface is
--   pending confirmation from the virtual interface owner. If the owner of
--   the virtual interface is different from the owner of the connection on
--   which it is provisioned, then the virtual interface will remain in
--   this state until it is confirmed by the virtual interface owner.</li>
--   <li><tt>verifying</tt>: This state only applies to public virtual
--   interfaces. Each public virtual interface needs validation before the
--   virtual interface can be created.</li>
--   <li><tt>pending</tt>: A virtual interface is in this state from the
--   time that it is created until the virtual interface is ready to
--   forward traffic.</li>
--   <li><tt>available</tt>: A virtual interface that is able to forward
--   traffic.</li>
--   <li><tt>down</tt>: A virtual interface that is BGP down.</li>
--   <li><tt>deleting</tt>: A virtual interface is in this state
--   immediately after calling DeleteVirtualInterface until it can no
--   longer forward traffic.</li>
--   <li><tt>deleted</tt>: A virtual interface that cannot forward
--   traffic.</li>
--   <li><tt>rejected</tt>: The virtual interface owner has declined
--   creation of the virtual interface. If a virtual interface in the
--   <tt>Confirming</tt> state is deleted by the virtual interface owner,
--   the virtual interface enters the <tt>Rejected</tt> state.</li>
--   <li><tt>unknown</tt>: The state of the virtual interface is not
--   available.</li>
--   </ul>
[$sel:virtualInterfaceState:DeleteVirtualInterfaceResponse'] :: DeleteVirtualInterfaceResponse -> Maybe VirtualInterfaceState

-- | The response's http status code.
[$sel:httpStatus:DeleteVirtualInterfaceResponse'] :: DeleteVirtualInterfaceResponse -> Int

-- | Create a value of <a>DeleteVirtualInterfaceResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:virtualInterfaceState:DeleteVirtualInterfaceResponse'</a>,
--   <a>deleteVirtualInterfaceResponse_virtualInterfaceState</a> - The
--   state of the virtual interface. The following are the possible values:
--   
--   <ul>
--   <li><tt>confirming</tt>: The creation of the virtual interface is
--   pending confirmation from the virtual interface owner. If the owner of
--   the virtual interface is different from the owner of the connection on
--   which it is provisioned, then the virtual interface will remain in
--   this state until it is confirmed by the virtual interface owner.</li>
--   <li><tt>verifying</tt>: This state only applies to public virtual
--   interfaces. Each public virtual interface needs validation before the
--   virtual interface can be created.</li>
--   <li><tt>pending</tt>: A virtual interface is in this state from the
--   time that it is created until the virtual interface is ready to
--   forward traffic.</li>
--   <li><tt>available</tt>: A virtual interface that is able to forward
--   traffic.</li>
--   <li><tt>down</tt>: A virtual interface that is BGP down.</li>
--   <li><tt>deleting</tt>: A virtual interface is in this state
--   immediately after calling DeleteVirtualInterface until it can no
--   longer forward traffic.</li>
--   <li><tt>deleted</tt>: A virtual interface that cannot forward
--   traffic.</li>
--   <li><tt>rejected</tt>: The virtual interface owner has declined
--   creation of the virtual interface. If a virtual interface in the
--   <tt>Confirming</tt> state is deleted by the virtual interface owner,
--   the virtual interface enters the <tt>Rejected</tt> state.</li>
--   <li><tt>unknown</tt>: The state of the virtual interface is not
--   available.</li>
--   </ul>
--   
--   <a>$sel:httpStatus:DeleteVirtualInterfaceResponse'</a>,
--   <a>deleteVirtualInterfaceResponse_httpStatus</a> - The response's http
--   status code.
newDeleteVirtualInterfaceResponse :: Int -> DeleteVirtualInterfaceResponse

-- | The state of the virtual interface. The following are the possible
--   values:
--   
--   <ul>
--   <li><tt>confirming</tt>: The creation of the virtual interface is
--   pending confirmation from the virtual interface owner. If the owner of
--   the virtual interface is different from the owner of the connection on
--   which it is provisioned, then the virtual interface will remain in
--   this state until it is confirmed by the virtual interface owner.</li>
--   <li><tt>verifying</tt>: This state only applies to public virtual
--   interfaces. Each public virtual interface needs validation before the
--   virtual interface can be created.</li>
--   <li><tt>pending</tt>: A virtual interface is in this state from the
--   time that it is created until the virtual interface is ready to
--   forward traffic.</li>
--   <li><tt>available</tt>: A virtual interface that is able to forward
--   traffic.</li>
--   <li><tt>down</tt>: A virtual interface that is BGP down.</li>
--   <li><tt>deleting</tt>: A virtual interface is in this state
--   immediately after calling DeleteVirtualInterface until it can no
--   longer forward traffic.</li>
--   <li><tt>deleted</tt>: A virtual interface that cannot forward
--   traffic.</li>
--   <li><tt>rejected</tt>: The virtual interface owner has declined
--   creation of the virtual interface. If a virtual interface in the
--   <tt>Confirming</tt> state is deleted by the virtual interface owner,
--   the virtual interface enters the <tt>Rejected</tt> state.</li>
--   <li><tt>unknown</tt>: The state of the virtual interface is not
--   available.</li>
--   </ul>
deleteVirtualInterfaceResponse_virtualInterfaceState :: Lens' DeleteVirtualInterfaceResponse (Maybe VirtualInterfaceState)

-- | The response's http status code.
deleteVirtualInterfaceResponse_httpStatus :: Lens' DeleteVirtualInterfaceResponse Int
instance GHC.Generics.Generic Network.AWS.DirectConnect.DeleteVirtualInterface.DeleteVirtualInterface
instance GHC.Show.Show Network.AWS.DirectConnect.DeleteVirtualInterface.DeleteVirtualInterface
instance GHC.Read.Read Network.AWS.DirectConnect.DeleteVirtualInterface.DeleteVirtualInterface
instance GHC.Classes.Eq Network.AWS.DirectConnect.DeleteVirtualInterface.DeleteVirtualInterface
instance GHC.Generics.Generic Network.AWS.DirectConnect.DeleteVirtualInterface.DeleteVirtualInterfaceResponse
instance GHC.Show.Show Network.AWS.DirectConnect.DeleteVirtualInterface.DeleteVirtualInterfaceResponse
instance GHC.Read.Read Network.AWS.DirectConnect.DeleteVirtualInterface.DeleteVirtualInterfaceResponse
instance GHC.Classes.Eq Network.AWS.DirectConnect.DeleteVirtualInterface.DeleteVirtualInterfaceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DirectConnect.DeleteVirtualInterface.DeleteVirtualInterface
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.DeleteVirtualInterface.DeleteVirtualInterfaceResponse
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.DeleteVirtualInterface.DeleteVirtualInterface
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.DeleteVirtualInterface.DeleteVirtualInterface
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DirectConnect.DeleteVirtualInterface.DeleteVirtualInterface
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.DeleteVirtualInterface.DeleteVirtualInterface
instance Network.AWS.Data.Path.ToPath Network.AWS.DirectConnect.DeleteVirtualInterface.DeleteVirtualInterface
instance Network.AWS.Data.Query.ToQuery Network.AWS.DirectConnect.DeleteVirtualInterface.DeleteVirtualInterface


-- | Deletes the specified link aggregation group (LAG). You cannot delete
--   a LAG if it has active virtual interfaces or hosted connections.
module Network.AWS.DirectConnect.DeleteLag

-- | <i>See:</i> <a>newDeleteLag</a> smart constructor.
data DeleteLag
DeleteLag' :: Text -> DeleteLag

-- | The ID of the LAG.
[$sel:lagId:DeleteLag'] :: DeleteLag -> Text

-- | Create a value of <a>DeleteLag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lagId:DeleteLag'</a>, <a>deleteLag_lagId</a> - The ID of the
--   LAG.
newDeleteLag :: Text -> DeleteLag

-- | The ID of the LAG.
deleteLag_lagId :: Lens' DeleteLag Text

-- | Information about a link aggregation group (LAG).
--   
--   <i>See:</i> <a>newLag</a> smart constructor.
data Lag
Lag' :: Maybe Int -> Maybe Text -> Maybe Bool -> Maybe [MacSecKey] -> Maybe Text -> Maybe Text -> Maybe HasLogicalRedundancy -> Maybe Text -> Maybe [Connection] -> Maybe Text -> Maybe LagState -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (NonEmpty Tag) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Bool -> Lag

-- | The number of physical dedicated connections bundled by the LAG, up to
--   a maximum of 10.
[$sel:numberOfConnections:Lag'] :: Lag -> Maybe Int

-- | The Direct Connect endpoint that hosts the LAG.
[$sel:awsDeviceV2:Lag'] :: Lag -> Maybe Text

-- | Indicates whether the LAG can host other connections.
[$sel:allowsHostedConnections:Lag'] :: Lag -> Maybe Bool

-- | The MAC Security (MACsec) security keys associated with the LAG.
[$sel:macSecKeys:Lag'] :: Lag -> Maybe [MacSecKey]

-- | The name of the service provider associated with the LAG.
[$sel:providerName:Lag'] :: Lag -> Maybe Text

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
[$sel:awsLogicalDeviceId:Lag'] :: Lag -> Maybe Text

-- | Indicates whether the LAG supports a secondary BGP peer in the same
--   address family (IPv4/IPv6).
[$sel:hasLogicalRedundancy:Lag'] :: Lag -> Maybe HasLogicalRedundancy

-- | The name of the LAG.
[$sel:lagName:Lag'] :: Lag -> Maybe Text

-- | The connections bundled by the LAG.
[$sel:connections:Lag'] :: Lag -> Maybe [Connection]

-- | The Direct Connect endpoint that hosts the LAG.
[$sel:awsDevice:Lag'] :: Lag -> Maybe Text

-- | The state of the LAG. The following are the possible values:
--   
--   <ul>
--   <li><tt>requested</tt>: The initial state of a LAG. The LAG stays in
--   the requested state until the Letter of Authorization (LOA) is
--   available.</li>
--   <li><tt>pending</tt>: The LAG has been approved and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is established and the LAG is
--   ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The LAG is being deleted.</li>
--   <li><tt>deleted</tt>: The LAG is deleted.</li>
--   <li><tt>unknown</tt>: The state of the LAG is not available.</li>
--   </ul>
[$sel:lagState:Lag'] :: Lag -> Maybe LagState

-- | Indicates whether jumbo frames (9001 MTU) are supported.
[$sel:jumboFrameCapable:Lag'] :: Lag -> Maybe Bool

-- | The individual bandwidth of the physical connections bundled by the
--   LAG. The possible values are 1Gbps and 10Gbps.
[$sel:connectionsBandwidth:Lag'] :: Lag -> Maybe Text

-- | The ID of the LAG.
[$sel:lagId:Lag'] :: Lag -> Maybe Text

-- | The LAG MAC Security (MACsec) encryption mode.
--   
--   The valid values are <tt>no_encrypt</tt>, <tt>should_encrypt</tt>, and
--   <tt>must_encrypt</tt>.
[$sel:encryptionMode:Lag'] :: Lag -> Maybe Text

-- | The tags associated with the LAG.
[$sel:tags:Lag'] :: Lag -> Maybe (NonEmpty Tag)

-- | The ID of the account that owns the LAG.
[$sel:ownerAccount:Lag'] :: Lag -> Maybe Text

-- | The Region where the connection is located.
[$sel:region:Lag'] :: Lag -> Maybe Text

-- | The location of the LAG.
[$sel:location:Lag'] :: Lag -> Maybe Text

-- | The minimum number of physical dedicated connections that must be
--   operational for the LAG itself to be operational.
[$sel:minimumLinks:Lag'] :: Lag -> Maybe Int

-- | Indicates whether the LAG supports MAC Security (MACsec).
[$sel:macSecCapable:Lag'] :: Lag -> Maybe Bool

-- | Create a value of <a>Lag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:numberOfConnections:Lag'</a>, <a>lag_numberOfConnections</a> -
--   The number of physical dedicated connections bundled by the LAG, up to
--   a maximum of 10.
--   
--   <a>$sel:awsDeviceV2:Lag'</a>, <a>lag_awsDeviceV2</a> - The Direct
--   Connect endpoint that hosts the LAG.
--   
--   <a>$sel:allowsHostedConnections:Lag'</a>,
--   <a>lag_allowsHostedConnections</a> - Indicates whether the LAG can
--   host other connections.
--   
--   <a>$sel:macSecKeys:Lag'</a>, <a>lag_macSecKeys</a> - The MAC Security
--   (MACsec) security keys associated with the LAG.
--   
--   <a>$sel:providerName:Lag'</a>, <a>lag_providerName</a> - The name of
--   the service provider associated with the LAG.
--   
--   <a>$sel:awsLogicalDeviceId:Lag'</a>, <a>lag_awsLogicalDeviceId</a> -
--   The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
--   
--   <a>$sel:hasLogicalRedundancy:Lag'</a>, <a>lag_hasLogicalRedundancy</a>
--   - Indicates whether the LAG supports a secondary BGP peer in the same
--   address family (IPv4/IPv6).
--   
--   <a>$sel:lagName:Lag'</a>, <a>lag_lagName</a> - The name of the LAG.
--   
--   <a>$sel:connections:Lag'</a>, <a>lag_connections</a> - The connections
--   bundled by the LAG.
--   
--   <a>$sel:awsDevice:Lag'</a>, <a>lag_awsDevice</a> - The Direct Connect
--   endpoint that hosts the LAG.
--   
--   <a>$sel:lagState:Lag'</a>, <a>lag_lagState</a> - The state of the LAG.
--   The following are the possible values:
--   
--   <ul>
--   <li><tt>requested</tt>: The initial state of a LAG. The LAG stays in
--   the requested state until the Letter of Authorization (LOA) is
--   available.</li>
--   <li><tt>pending</tt>: The LAG has been approved and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is established and the LAG is
--   ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The LAG is being deleted.</li>
--   <li><tt>deleted</tt>: The LAG is deleted.</li>
--   <li><tt>unknown</tt>: The state of the LAG is not available.</li>
--   </ul>
--   
--   <a>$sel:jumboFrameCapable:Lag'</a>, <a>lag_jumboFrameCapable</a> -
--   Indicates whether jumbo frames (9001 MTU) are supported.
--   
--   <a>$sel:connectionsBandwidth:Lag'</a>, <a>lag_connectionsBandwidth</a>
--   - The individual bandwidth of the physical connections bundled by the
--   LAG. The possible values are 1Gbps and 10Gbps.
--   
--   <a>$sel:lagId:Lag'</a>, <a>lag_lagId</a> - The ID of the LAG.
--   
--   <a>$sel:encryptionMode:Lag'</a>, <a>lag_encryptionMode</a> - The LAG
--   MAC Security (MACsec) encryption mode.
--   
--   The valid values are <tt>no_encrypt</tt>, <tt>should_encrypt</tt>, and
--   <tt>must_encrypt</tt>.
--   
--   <a>$sel:tags:Lag'</a>, <a>lag_tags</a> - The tags associated with the
--   LAG.
--   
--   <a>$sel:ownerAccount:Lag'</a>, <a>lag_ownerAccount</a> - The ID of the
--   account that owns the LAG.
--   
--   <a>$sel:region:Lag'</a>, <a>lag_region</a> - The Region where the
--   connection is located.
--   
--   <a>$sel:location:Lag'</a>, <a>lag_location</a> - The location of the
--   LAG.
--   
--   <a>$sel:minimumLinks:Lag'</a>, <a>lag_minimumLinks</a> - The minimum
--   number of physical dedicated connections that must be operational for
--   the LAG itself to be operational.
--   
--   <a>$sel:macSecCapable:Lag'</a>, <a>lag_macSecCapable</a> - Indicates
--   whether the LAG supports MAC Security (MACsec).
newLag :: Lag

-- | The number of physical dedicated connections bundled by the LAG, up to
--   a maximum of 10.
lag_numberOfConnections :: Lens' Lag (Maybe Int)

-- | The Direct Connect endpoint that hosts the LAG.
lag_awsDeviceV2 :: Lens' Lag (Maybe Text)

-- | Indicates whether the LAG can host other connections.
lag_allowsHostedConnections :: Lens' Lag (Maybe Bool)

-- | The MAC Security (MACsec) security keys associated with the LAG.
lag_macSecKeys :: Lens' Lag (Maybe [MacSecKey])

-- | The name of the service provider associated with the LAG.
lag_providerName :: Lens' Lag (Maybe Text)

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
lag_awsLogicalDeviceId :: Lens' Lag (Maybe Text)

-- | Indicates whether the LAG supports a secondary BGP peer in the same
--   address family (IPv4/IPv6).
lag_hasLogicalRedundancy :: Lens' Lag (Maybe HasLogicalRedundancy)

-- | The name of the LAG.
lag_lagName :: Lens' Lag (Maybe Text)

-- | The connections bundled by the LAG.
lag_connections :: Lens' Lag (Maybe [Connection])

-- | The Direct Connect endpoint that hosts the LAG.
lag_awsDevice :: Lens' Lag (Maybe Text)

-- | The state of the LAG. The following are the possible values:
--   
--   <ul>
--   <li><tt>requested</tt>: The initial state of a LAG. The LAG stays in
--   the requested state until the Letter of Authorization (LOA) is
--   available.</li>
--   <li><tt>pending</tt>: The LAG has been approved and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is established and the LAG is
--   ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The LAG is being deleted.</li>
--   <li><tt>deleted</tt>: The LAG is deleted.</li>
--   <li><tt>unknown</tt>: The state of the LAG is not available.</li>
--   </ul>
lag_lagState :: Lens' Lag (Maybe LagState)

-- | Indicates whether jumbo frames (9001 MTU) are supported.
lag_jumboFrameCapable :: Lens' Lag (Maybe Bool)

-- | The individual bandwidth of the physical connections bundled by the
--   LAG. The possible values are 1Gbps and 10Gbps.
lag_connectionsBandwidth :: Lens' Lag (Maybe Text)

-- | The ID of the LAG.
lag_lagId :: Lens' Lag (Maybe Text)

-- | The LAG MAC Security (MACsec) encryption mode.
--   
--   The valid values are <tt>no_encrypt</tt>, <tt>should_encrypt</tt>, and
--   <tt>must_encrypt</tt>.
lag_encryptionMode :: Lens' Lag (Maybe Text)

-- | The tags associated with the LAG.
lag_tags :: Lens' Lag (Maybe (NonEmpty Tag))

-- | The ID of the account that owns the LAG.
lag_ownerAccount :: Lens' Lag (Maybe Text)

-- | The Region where the connection is located.
lag_region :: Lens' Lag (Maybe Text)

-- | The location of the LAG.
lag_location :: Lens' Lag (Maybe Text)

-- | The minimum number of physical dedicated connections that must be
--   operational for the LAG itself to be operational.
lag_minimumLinks :: Lens' Lag (Maybe Int)

-- | Indicates whether the LAG supports MAC Security (MACsec).
lag_macSecCapable :: Lens' Lag (Maybe Bool)
instance GHC.Generics.Generic Network.AWS.DirectConnect.DeleteLag.DeleteLag
instance GHC.Show.Show Network.AWS.DirectConnect.DeleteLag.DeleteLag
instance GHC.Read.Read Network.AWS.DirectConnect.DeleteLag.DeleteLag
instance GHC.Classes.Eq Network.AWS.DirectConnect.DeleteLag.DeleteLag
instance Network.AWS.Types.AWSRequest Network.AWS.DirectConnect.DeleteLag.DeleteLag
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.DeleteLag.DeleteLag
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.DeleteLag.DeleteLag
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DirectConnect.DeleteLag.DeleteLag
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.DeleteLag.DeleteLag
instance Network.AWS.Data.Path.ToPath Network.AWS.DirectConnect.DeleteLag.DeleteLag
instance Network.AWS.Data.Query.ToQuery Network.AWS.DirectConnect.DeleteLag.DeleteLag


-- | Deletes the specified interconnect.
--   
--   Intended for use by Direct Connect Partners only.
module Network.AWS.DirectConnect.DeleteInterconnect

-- | <i>See:</i> <a>newDeleteInterconnect</a> smart constructor.
data DeleteInterconnect
DeleteInterconnect' :: Text -> DeleteInterconnect

-- | The ID of the interconnect.
[$sel:interconnectId:DeleteInterconnect'] :: DeleteInterconnect -> Text

-- | Create a value of <a>DeleteInterconnect</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:interconnectId:DeleteInterconnect'</a>,
--   <a>deleteInterconnect_interconnectId</a> - The ID of the interconnect.
newDeleteInterconnect :: Text -> DeleteInterconnect

-- | The ID of the interconnect.
deleteInterconnect_interconnectId :: Lens' DeleteInterconnect Text

-- | <i>See:</i> <a>newDeleteInterconnectResponse</a> smart constructor.
data DeleteInterconnectResponse
DeleteInterconnectResponse' :: Maybe InterconnectState -> Int -> DeleteInterconnectResponse

-- | The state of the interconnect. The following are the possible values:
--   
--   <ul>
--   <li><tt>requested</tt>: The initial state of an interconnect. The
--   interconnect stays in the requested state until the Letter of
--   Authorization (LOA) is sent to the customer.</li>
--   <li><tt>pending</tt>: The interconnect is approved, and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is up, and the interconnect
--   is ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The interconnect is being deleted.</li>
--   <li><tt>deleted</tt>: The interconnect is deleted.</li>
--   <li><tt>unknown</tt>: The state of the interconnect is not
--   available.</li>
--   </ul>
[$sel:interconnectState:DeleteInterconnectResponse'] :: DeleteInterconnectResponse -> Maybe InterconnectState

-- | The response's http status code.
[$sel:httpStatus:DeleteInterconnectResponse'] :: DeleteInterconnectResponse -> Int

-- | Create a value of <a>DeleteInterconnectResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:interconnectState:DeleteInterconnectResponse'</a>,
--   <a>deleteInterconnectResponse_interconnectState</a> - The state of the
--   interconnect. The following are the possible values:
--   
--   <ul>
--   <li><tt>requested</tt>: The initial state of an interconnect. The
--   interconnect stays in the requested state until the Letter of
--   Authorization (LOA) is sent to the customer.</li>
--   <li><tt>pending</tt>: The interconnect is approved, and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is up, and the interconnect
--   is ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The interconnect is being deleted.</li>
--   <li><tt>deleted</tt>: The interconnect is deleted.</li>
--   <li><tt>unknown</tt>: The state of the interconnect is not
--   available.</li>
--   </ul>
--   
--   <a>$sel:httpStatus:DeleteInterconnectResponse'</a>,
--   <a>deleteInterconnectResponse_httpStatus</a> - The response's http
--   status code.
newDeleteInterconnectResponse :: Int -> DeleteInterconnectResponse

-- | The state of the interconnect. The following are the possible values:
--   
--   <ul>
--   <li><tt>requested</tt>: The initial state of an interconnect. The
--   interconnect stays in the requested state until the Letter of
--   Authorization (LOA) is sent to the customer.</li>
--   <li><tt>pending</tt>: The interconnect is approved, and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is up, and the interconnect
--   is ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The interconnect is being deleted.</li>
--   <li><tt>deleted</tt>: The interconnect is deleted.</li>
--   <li><tt>unknown</tt>: The state of the interconnect is not
--   available.</li>
--   </ul>
deleteInterconnectResponse_interconnectState :: Lens' DeleteInterconnectResponse (Maybe InterconnectState)

-- | The response's http status code.
deleteInterconnectResponse_httpStatus :: Lens' DeleteInterconnectResponse Int
instance GHC.Generics.Generic Network.AWS.DirectConnect.DeleteInterconnect.DeleteInterconnect
instance GHC.Show.Show Network.AWS.DirectConnect.DeleteInterconnect.DeleteInterconnect
instance GHC.Read.Read Network.AWS.DirectConnect.DeleteInterconnect.DeleteInterconnect
instance GHC.Classes.Eq Network.AWS.DirectConnect.DeleteInterconnect.DeleteInterconnect
instance GHC.Generics.Generic Network.AWS.DirectConnect.DeleteInterconnect.DeleteInterconnectResponse
instance GHC.Show.Show Network.AWS.DirectConnect.DeleteInterconnect.DeleteInterconnectResponse
instance GHC.Read.Read Network.AWS.DirectConnect.DeleteInterconnect.DeleteInterconnectResponse
instance GHC.Classes.Eq Network.AWS.DirectConnect.DeleteInterconnect.DeleteInterconnectResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DirectConnect.DeleteInterconnect.DeleteInterconnect
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.DeleteInterconnect.DeleteInterconnectResponse
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.DeleteInterconnect.DeleteInterconnect
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.DeleteInterconnect.DeleteInterconnect
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DirectConnect.DeleteInterconnect.DeleteInterconnect
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.DeleteInterconnect.DeleteInterconnect
instance Network.AWS.Data.Path.ToPath Network.AWS.DirectConnect.DeleteInterconnect.DeleteInterconnect
instance Network.AWS.Data.Query.ToQuery Network.AWS.DirectConnect.DeleteInterconnect.DeleteInterconnect


-- | Deletes the association proposal request between the specified Direct
--   Connect gateway and virtual private gateway or transit gateway.
module Network.AWS.DirectConnect.DeleteDirectConnectGatewayAssociationProposal

-- | <i>See:</i> <a>newDeleteDirectConnectGatewayAssociationProposal</a>
--   smart constructor.
data DeleteDirectConnectGatewayAssociationProposal
DeleteDirectConnectGatewayAssociationProposal' :: Text -> DeleteDirectConnectGatewayAssociationProposal

-- | The ID of the proposal.
[$sel:proposalId:DeleteDirectConnectGatewayAssociationProposal'] :: DeleteDirectConnectGatewayAssociationProposal -> Text

-- | Create a value of <a>DeleteDirectConnectGatewayAssociationProposal</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:proposalId:DeleteDirectConnectGatewayAssociationProposal'</a>,
--   <a>deleteDirectConnectGatewayAssociationProposal_proposalId</a> - The
--   ID of the proposal.
newDeleteDirectConnectGatewayAssociationProposal :: Text -> DeleteDirectConnectGatewayAssociationProposal

-- | The ID of the proposal.
deleteDirectConnectGatewayAssociationProposal_proposalId :: Lens' DeleteDirectConnectGatewayAssociationProposal Text

-- | <i>See:</i>
--   <a>newDeleteDirectConnectGatewayAssociationProposalResponse</a> smart
--   constructor.
data DeleteDirectConnectGatewayAssociationProposalResponse
DeleteDirectConnectGatewayAssociationProposalResponse' :: Maybe DirectConnectGatewayAssociationProposal -> Int -> DeleteDirectConnectGatewayAssociationProposalResponse

-- | The ID of the associated gateway.
[$sel:directConnectGatewayAssociationProposal:DeleteDirectConnectGatewayAssociationProposalResponse'] :: DeleteDirectConnectGatewayAssociationProposalResponse -> Maybe DirectConnectGatewayAssociationProposal

-- | The response's http status code.
[$sel:httpStatus:DeleteDirectConnectGatewayAssociationProposalResponse'] :: DeleteDirectConnectGatewayAssociationProposalResponse -> Int

-- | Create a value of
--   <a>DeleteDirectConnectGatewayAssociationProposalResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:directConnectGatewayAssociationProposal:DeleteDirectConnectGatewayAssociationProposalResponse'</a>,
--   <a>deleteDirectConnectGatewayAssociationProposalResponse_directConnectGatewayAssociationProposal</a>
--   - The ID of the associated gateway.
--   
--   
--   <a>$sel:httpStatus:DeleteDirectConnectGatewayAssociationProposalResponse'</a>,
--   <a>deleteDirectConnectGatewayAssociationProposalResponse_httpStatus</a>
--   - The response's http status code.
newDeleteDirectConnectGatewayAssociationProposalResponse :: Int -> DeleteDirectConnectGatewayAssociationProposalResponse

-- | The ID of the associated gateway.
deleteDirectConnectGatewayAssociationProposalResponse_directConnectGatewayAssociationProposal :: Lens' DeleteDirectConnectGatewayAssociationProposalResponse (Maybe DirectConnectGatewayAssociationProposal)

-- | The response's http status code.
deleteDirectConnectGatewayAssociationProposalResponse_httpStatus :: Lens' DeleteDirectConnectGatewayAssociationProposalResponse Int
instance GHC.Generics.Generic Network.AWS.DirectConnect.DeleteDirectConnectGatewayAssociationProposal.DeleteDirectConnectGatewayAssociationProposal
instance GHC.Show.Show Network.AWS.DirectConnect.DeleteDirectConnectGatewayAssociationProposal.DeleteDirectConnectGatewayAssociationProposal
instance GHC.Read.Read Network.AWS.DirectConnect.DeleteDirectConnectGatewayAssociationProposal.DeleteDirectConnectGatewayAssociationProposal
instance GHC.Classes.Eq Network.AWS.DirectConnect.DeleteDirectConnectGatewayAssociationProposal.DeleteDirectConnectGatewayAssociationProposal
instance GHC.Generics.Generic Network.AWS.DirectConnect.DeleteDirectConnectGatewayAssociationProposal.DeleteDirectConnectGatewayAssociationProposalResponse
instance GHC.Show.Show Network.AWS.DirectConnect.DeleteDirectConnectGatewayAssociationProposal.DeleteDirectConnectGatewayAssociationProposalResponse
instance GHC.Read.Read Network.AWS.DirectConnect.DeleteDirectConnectGatewayAssociationProposal.DeleteDirectConnectGatewayAssociationProposalResponse
instance GHC.Classes.Eq Network.AWS.DirectConnect.DeleteDirectConnectGatewayAssociationProposal.DeleteDirectConnectGatewayAssociationProposalResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DirectConnect.DeleteDirectConnectGatewayAssociationProposal.DeleteDirectConnectGatewayAssociationProposal
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.DeleteDirectConnectGatewayAssociationProposal.DeleteDirectConnectGatewayAssociationProposalResponse
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.DeleteDirectConnectGatewayAssociationProposal.DeleteDirectConnectGatewayAssociationProposal
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.DeleteDirectConnectGatewayAssociationProposal.DeleteDirectConnectGatewayAssociationProposal
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DirectConnect.DeleteDirectConnectGatewayAssociationProposal.DeleteDirectConnectGatewayAssociationProposal
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.DeleteDirectConnectGatewayAssociationProposal.DeleteDirectConnectGatewayAssociationProposal
instance Network.AWS.Data.Path.ToPath Network.AWS.DirectConnect.DeleteDirectConnectGatewayAssociationProposal.DeleteDirectConnectGatewayAssociationProposal
instance Network.AWS.Data.Query.ToQuery Network.AWS.DirectConnect.DeleteDirectConnectGatewayAssociationProposal.DeleteDirectConnectGatewayAssociationProposal


-- | Deletes the association between the specified Direct Connect gateway
--   and virtual private gateway.
--   
--   We recommend that you specify the <tt>associationID</tt> to delete the
--   association. Alternatively, if you own virtual gateway and a Direct
--   Connect gateway association, you can specify the
--   <tt>virtualGatewayId</tt> and <tt>directConnectGatewayId</tt> to
--   delete an association.
module Network.AWS.DirectConnect.DeleteDirectConnectGatewayAssociation

-- | <i>See:</i> <a>newDeleteDirectConnectGatewayAssociation</a> smart
--   constructor.
data DeleteDirectConnectGatewayAssociation
DeleteDirectConnectGatewayAssociation' :: Maybe Text -> Maybe Text -> Maybe Text -> DeleteDirectConnectGatewayAssociation

-- | The ID of the virtual private gateway.
[$sel:virtualGatewayId:DeleteDirectConnectGatewayAssociation'] :: DeleteDirectConnectGatewayAssociation -> Maybe Text

-- | The ID of the Direct Connect gateway association.
[$sel:associationId:DeleteDirectConnectGatewayAssociation'] :: DeleteDirectConnectGatewayAssociation -> Maybe Text

-- | The ID of the Direct Connect gateway.
[$sel:directConnectGatewayId:DeleteDirectConnectGatewayAssociation'] :: DeleteDirectConnectGatewayAssociation -> Maybe Text

-- | Create a value of <a>DeleteDirectConnectGatewayAssociation</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:virtualGatewayId:DeleteDirectConnectGatewayAssociation'</a>,
--   <a>deleteDirectConnectGatewayAssociation_virtualGatewayId</a> - The ID
--   of the virtual private gateway.
--   
--   <a>$sel:associationId:DeleteDirectConnectGatewayAssociation'</a>,
--   <a>deleteDirectConnectGatewayAssociation_associationId</a> - The ID of
--   the Direct Connect gateway association.
--   
--   
--   <a>$sel:directConnectGatewayId:DeleteDirectConnectGatewayAssociation'</a>,
--   <a>deleteDirectConnectGatewayAssociation_directConnectGatewayId</a> -
--   The ID of the Direct Connect gateway.
newDeleteDirectConnectGatewayAssociation :: DeleteDirectConnectGatewayAssociation

-- | The ID of the virtual private gateway.
deleteDirectConnectGatewayAssociation_virtualGatewayId :: Lens' DeleteDirectConnectGatewayAssociation (Maybe Text)

-- | The ID of the Direct Connect gateway association.
deleteDirectConnectGatewayAssociation_associationId :: Lens' DeleteDirectConnectGatewayAssociation (Maybe Text)

-- | The ID of the Direct Connect gateway.
deleteDirectConnectGatewayAssociation_directConnectGatewayId :: Lens' DeleteDirectConnectGatewayAssociation (Maybe Text)

-- | <i>See:</i> <a>newDeleteDirectConnectGatewayAssociationResponse</a>
--   smart constructor.
data DeleteDirectConnectGatewayAssociationResponse
DeleteDirectConnectGatewayAssociationResponse' :: Maybe DirectConnectGatewayAssociation -> Int -> DeleteDirectConnectGatewayAssociationResponse

-- | Information about the deleted association.
[$sel:directConnectGatewayAssociation:DeleteDirectConnectGatewayAssociationResponse'] :: DeleteDirectConnectGatewayAssociationResponse -> Maybe DirectConnectGatewayAssociation

-- | The response's http status code.
[$sel:httpStatus:DeleteDirectConnectGatewayAssociationResponse'] :: DeleteDirectConnectGatewayAssociationResponse -> Int

-- | Create a value of <a>DeleteDirectConnectGatewayAssociationResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:directConnectGatewayAssociation:DeleteDirectConnectGatewayAssociationResponse'</a>,
--   <a>deleteDirectConnectGatewayAssociationResponse_directConnectGatewayAssociation</a>
--   - Information about the deleted association.
--   
--   <a>$sel:httpStatus:DeleteDirectConnectGatewayAssociationResponse'</a>,
--   <a>deleteDirectConnectGatewayAssociationResponse_httpStatus</a> - The
--   response's http status code.
newDeleteDirectConnectGatewayAssociationResponse :: Int -> DeleteDirectConnectGatewayAssociationResponse

-- | Information about the deleted association.
deleteDirectConnectGatewayAssociationResponse_directConnectGatewayAssociation :: Lens' DeleteDirectConnectGatewayAssociationResponse (Maybe DirectConnectGatewayAssociation)

-- | The response's http status code.
deleteDirectConnectGatewayAssociationResponse_httpStatus :: Lens' DeleteDirectConnectGatewayAssociationResponse Int
instance GHC.Generics.Generic Network.AWS.DirectConnect.DeleteDirectConnectGatewayAssociation.DeleteDirectConnectGatewayAssociation
instance GHC.Show.Show Network.AWS.DirectConnect.DeleteDirectConnectGatewayAssociation.DeleteDirectConnectGatewayAssociation
instance GHC.Read.Read Network.AWS.DirectConnect.DeleteDirectConnectGatewayAssociation.DeleteDirectConnectGatewayAssociation
instance GHC.Classes.Eq Network.AWS.DirectConnect.DeleteDirectConnectGatewayAssociation.DeleteDirectConnectGatewayAssociation
instance GHC.Generics.Generic Network.AWS.DirectConnect.DeleteDirectConnectGatewayAssociation.DeleteDirectConnectGatewayAssociationResponse
instance GHC.Show.Show Network.AWS.DirectConnect.DeleteDirectConnectGatewayAssociation.DeleteDirectConnectGatewayAssociationResponse
instance GHC.Read.Read Network.AWS.DirectConnect.DeleteDirectConnectGatewayAssociation.DeleteDirectConnectGatewayAssociationResponse
instance GHC.Classes.Eq Network.AWS.DirectConnect.DeleteDirectConnectGatewayAssociation.DeleteDirectConnectGatewayAssociationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DirectConnect.DeleteDirectConnectGatewayAssociation.DeleteDirectConnectGatewayAssociation
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.DeleteDirectConnectGatewayAssociation.DeleteDirectConnectGatewayAssociationResponse
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.DeleteDirectConnectGatewayAssociation.DeleteDirectConnectGatewayAssociation
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.DeleteDirectConnectGatewayAssociation.DeleteDirectConnectGatewayAssociation
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DirectConnect.DeleteDirectConnectGatewayAssociation.DeleteDirectConnectGatewayAssociation
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.DeleteDirectConnectGatewayAssociation.DeleteDirectConnectGatewayAssociation
instance Network.AWS.Data.Path.ToPath Network.AWS.DirectConnect.DeleteDirectConnectGatewayAssociation.DeleteDirectConnectGatewayAssociation
instance Network.AWS.Data.Query.ToQuery Network.AWS.DirectConnect.DeleteDirectConnectGatewayAssociation.DeleteDirectConnectGatewayAssociation


-- | Deletes the specified Direct Connect gateway. You must first delete
--   all virtual interfaces that are attached to the Direct Connect gateway
--   and disassociate all virtual private gateways associated with the
--   Direct Connect gateway.
module Network.AWS.DirectConnect.DeleteDirectConnectGateway

-- | <i>See:</i> <a>newDeleteDirectConnectGateway</a> smart constructor.
data DeleteDirectConnectGateway
DeleteDirectConnectGateway' :: Text -> DeleteDirectConnectGateway

-- | The ID of the Direct Connect gateway.
[$sel:directConnectGatewayId:DeleteDirectConnectGateway'] :: DeleteDirectConnectGateway -> Text

-- | Create a value of <a>DeleteDirectConnectGateway</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:directConnectGatewayId:DeleteDirectConnectGateway'</a>,
--   <a>deleteDirectConnectGateway_directConnectGatewayId</a> - The ID of
--   the Direct Connect gateway.
newDeleteDirectConnectGateway :: Text -> DeleteDirectConnectGateway

-- | The ID of the Direct Connect gateway.
deleteDirectConnectGateway_directConnectGatewayId :: Lens' DeleteDirectConnectGateway Text

-- | <i>See:</i> <a>newDeleteDirectConnectGatewayResponse</a> smart
--   constructor.
data DeleteDirectConnectGatewayResponse
DeleteDirectConnectGatewayResponse' :: Maybe DirectConnectGateway -> Int -> DeleteDirectConnectGatewayResponse

-- | The Direct Connect gateway.
[$sel:directConnectGateway:DeleteDirectConnectGatewayResponse'] :: DeleteDirectConnectGatewayResponse -> Maybe DirectConnectGateway

-- | The response's http status code.
[$sel:httpStatus:DeleteDirectConnectGatewayResponse'] :: DeleteDirectConnectGatewayResponse -> Int

-- | Create a value of <a>DeleteDirectConnectGatewayResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:directConnectGateway:DeleteDirectConnectGatewayResponse'</a>,
--   <a>deleteDirectConnectGatewayResponse_directConnectGateway</a> - The
--   Direct Connect gateway.
--   
--   <a>$sel:httpStatus:DeleteDirectConnectGatewayResponse'</a>,
--   <a>deleteDirectConnectGatewayResponse_httpStatus</a> - The response's
--   http status code.
newDeleteDirectConnectGatewayResponse :: Int -> DeleteDirectConnectGatewayResponse

-- | The Direct Connect gateway.
deleteDirectConnectGatewayResponse_directConnectGateway :: Lens' DeleteDirectConnectGatewayResponse (Maybe DirectConnectGateway)

-- | The response's http status code.
deleteDirectConnectGatewayResponse_httpStatus :: Lens' DeleteDirectConnectGatewayResponse Int
instance GHC.Generics.Generic Network.AWS.DirectConnect.DeleteDirectConnectGateway.DeleteDirectConnectGateway
instance GHC.Show.Show Network.AWS.DirectConnect.DeleteDirectConnectGateway.DeleteDirectConnectGateway
instance GHC.Read.Read Network.AWS.DirectConnect.DeleteDirectConnectGateway.DeleteDirectConnectGateway
instance GHC.Classes.Eq Network.AWS.DirectConnect.DeleteDirectConnectGateway.DeleteDirectConnectGateway
instance GHC.Generics.Generic Network.AWS.DirectConnect.DeleteDirectConnectGateway.DeleteDirectConnectGatewayResponse
instance GHC.Show.Show Network.AWS.DirectConnect.DeleteDirectConnectGateway.DeleteDirectConnectGatewayResponse
instance GHC.Read.Read Network.AWS.DirectConnect.DeleteDirectConnectGateway.DeleteDirectConnectGatewayResponse
instance GHC.Classes.Eq Network.AWS.DirectConnect.DeleteDirectConnectGateway.DeleteDirectConnectGatewayResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DirectConnect.DeleteDirectConnectGateway.DeleteDirectConnectGateway
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.DeleteDirectConnectGateway.DeleteDirectConnectGatewayResponse
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.DeleteDirectConnectGateway.DeleteDirectConnectGateway
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.DeleteDirectConnectGateway.DeleteDirectConnectGateway
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DirectConnect.DeleteDirectConnectGateway.DeleteDirectConnectGateway
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.DeleteDirectConnectGateway.DeleteDirectConnectGateway
instance Network.AWS.Data.Path.ToPath Network.AWS.DirectConnect.DeleteDirectConnectGateway.DeleteDirectConnectGateway
instance Network.AWS.Data.Query.ToQuery Network.AWS.DirectConnect.DeleteDirectConnectGateway.DeleteDirectConnectGateway


-- | Deletes the specified connection.
--   
--   Deleting a connection only stops the Direct Connect port hour and data
--   transfer charges. If you are partnering with any third parties to
--   connect with the Direct Connect location, you must cancel your service
--   with them separately.
module Network.AWS.DirectConnect.DeleteConnection

-- | <i>See:</i> <a>newDeleteConnection</a> smart constructor.
data DeleteConnection
DeleteConnection' :: Text -> DeleteConnection

-- | The ID of the connection.
[$sel:connectionId:DeleteConnection'] :: DeleteConnection -> Text

-- | Create a value of <a>DeleteConnection</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connectionId:DeleteConnection'</a>,
--   <a>deleteConnection_connectionId</a> - The ID of the connection.
newDeleteConnection :: Text -> DeleteConnection

-- | The ID of the connection.
deleteConnection_connectionId :: Lens' DeleteConnection Text

-- | Information about an Direct Connect connection.
--   
--   <i>See:</i> <a>newConnection</a> smart constructor.
data Connection
Connection' :: Maybe Text -> Maybe Text -> Maybe ConnectionState -> Maybe Text -> Maybe [MacSecKey] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe HasLogicalRedundancy -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (NonEmpty Tag) -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Bool -> Connection

-- | The bandwidth of the connection.
[$sel:bandwidth:Connection'] :: Connection -> Maybe Text

-- | The Direct Connect endpoint that terminates the physical connection.
[$sel:awsDeviceV2:Connection'] :: Connection -> Maybe Text

-- | The state of the connection. The following are the possible values:
--   
--   <ul>
--   <li><tt>ordering</tt>: The initial state of a hosted connection
--   provisioned on an interconnect. The connection stays in the ordering
--   state until the owner of the hosted connection confirms or declines
--   the connection order.</li>
--   <li><tt>requested</tt>: The initial state of a standard connection.
--   The connection stays in the requested state until the Letter of
--   Authorization (LOA) is sent to the customer.</li>
--   <li><tt>pending</tt>: The connection has been approved and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is up and the connection is
--   ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The connection is being deleted.</li>
--   <li><tt>deleted</tt>: The connection has been deleted.</li>
--   <li><tt>rejected</tt>: A hosted connection in the <tt>ordering</tt>
--   state enters the <tt>rejected</tt> state if it is deleted by the
--   customer.</li>
--   <li><tt>unknown</tt>: The state of the connection is not
--   available.</li>
--   </ul>
[$sel:connectionState:Connection'] :: Connection -> Maybe ConnectionState

-- | The name of the connection.
[$sel:connectionName:Connection'] :: Connection -> Maybe Text

-- | The MAC Security (MACsec) security keys associated with the
--   connection.
[$sel:macSecKeys:Connection'] :: Connection -> Maybe [MacSecKey]

-- | The name of the service provider associated with the connection.
[$sel:providerName:Connection'] :: Connection -> Maybe Text

-- | The ID of the connection.
[$sel:connectionId:Connection'] :: Connection -> Maybe Text

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
[$sel:awsLogicalDeviceId:Connection'] :: Connection -> Maybe Text

-- | Indicates whether the connection supports a secondary BGP peer in the
--   same address family (IPv4/IPv6).
[$sel:hasLogicalRedundancy:Connection'] :: Connection -> Maybe HasLogicalRedundancy

-- | The Direct Connect endpoint on which the physical connection
--   terminates.
[$sel:awsDevice:Connection'] :: Connection -> Maybe Text

-- | Indicates whether jumbo frames (9001 MTU) are supported.
[$sel:jumboFrameCapable:Connection'] :: Connection -> Maybe Bool

-- | The MAC Security (MACsec) port link status of the connection.
--   
--   The valid values are <tt>Encryption Up</tt>, which means that there is
--   an active Connection Key Name, or <tt>Encryption Down</tt>.
[$sel:portEncryptionStatus:Connection'] :: Connection -> Maybe Text

-- | The ID of the LAG.
[$sel:lagId:Connection'] :: Connection -> Maybe Text

-- | The MAC Security (MACsec) connection encryption mode.
--   
--   The valid values are <tt>no_encrypt</tt>, <tt>should_encrypt</tt>, and
--   <tt>must_encrypt</tt>.
[$sel:encryptionMode:Connection'] :: Connection -> Maybe Text

-- | The name of the Direct Connect service provider associated with the
--   connection.
[$sel:partnerName:Connection'] :: Connection -> Maybe Text

-- | The tags associated with the connection.
[$sel:tags:Connection'] :: Connection -> Maybe (NonEmpty Tag)

-- | The time of the most recent call to DescribeLoa for this connection.
[$sel:loaIssueTime:Connection'] :: Connection -> Maybe POSIX

-- | The ID of the account that owns the connection.
[$sel:ownerAccount:Connection'] :: Connection -> Maybe Text

-- | The Region where the connection is located.
[$sel:region:Connection'] :: Connection -> Maybe Text

-- | The ID of the VLAN.
[$sel:vlan:Connection'] :: Connection -> Maybe Int

-- | The location of the connection.
[$sel:location:Connection'] :: Connection -> Maybe Text

-- | Indicates whether the connection supports MAC Security (MACsec).
[$sel:macSecCapable:Connection'] :: Connection -> Maybe Bool

-- | Create a value of <a>Connection</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bandwidth:Connection'</a>, <a>connection_bandwidth</a> - The
--   bandwidth of the connection.
--   
--   <a>$sel:awsDeviceV2:Connection'</a>, <a>connection_awsDeviceV2</a> -
--   The Direct Connect endpoint that terminates the physical connection.
--   
--   <a>$sel:connectionState:Connection'</a>,
--   <a>connection_connectionState</a> - The state of the connection. The
--   following are the possible values:
--   
--   <ul>
--   <li><tt>ordering</tt>: The initial state of a hosted connection
--   provisioned on an interconnect. The connection stays in the ordering
--   state until the owner of the hosted connection confirms or declines
--   the connection order.</li>
--   <li><tt>requested</tt>: The initial state of a standard connection.
--   The connection stays in the requested state until the Letter of
--   Authorization (LOA) is sent to the customer.</li>
--   <li><tt>pending</tt>: The connection has been approved and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is up and the connection is
--   ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The connection is being deleted.</li>
--   <li><tt>deleted</tt>: The connection has been deleted.</li>
--   <li><tt>rejected</tt>: A hosted connection in the <tt>ordering</tt>
--   state enters the <tt>rejected</tt> state if it is deleted by the
--   customer.</li>
--   <li><tt>unknown</tt>: The state of the connection is not
--   available.</li>
--   </ul>
--   
--   <a>$sel:connectionName:Connection'</a>,
--   <a>connection_connectionName</a> - The name of the connection.
--   
--   <a>$sel:macSecKeys:Connection'</a>, <a>connection_macSecKeys</a> - The
--   MAC Security (MACsec) security keys associated with the connection.
--   
--   <a>$sel:providerName:Connection'</a>, <a>connection_providerName</a> -
--   The name of the service provider associated with the connection.
--   
--   <a>$sel:connectionId:Connection'</a>, <a>connection_connectionId</a> -
--   The ID of the connection.
--   
--   <a>$sel:awsLogicalDeviceId:Connection'</a>,
--   <a>connection_awsLogicalDeviceId</a> - The Direct Connect endpoint
--   that terminates the logical connection. This device might be different
--   than the device that terminates the physical connection.
--   
--   <a>$sel:hasLogicalRedundancy:Connection'</a>,
--   <a>connection_hasLogicalRedundancy</a> - Indicates whether the
--   connection supports a secondary BGP peer in the same address family
--   (IPv4/IPv6).
--   
--   <a>$sel:awsDevice:Connection'</a>, <a>connection_awsDevice</a> - The
--   Direct Connect endpoint on which the physical connection terminates.
--   
--   <a>$sel:jumboFrameCapable:Connection'</a>,
--   <a>connection_jumboFrameCapable</a> - Indicates whether jumbo frames
--   (9001 MTU) are supported.
--   
--   <a>$sel:portEncryptionStatus:Connection'</a>,
--   <a>connection_portEncryptionStatus</a> - The MAC Security (MACsec)
--   port link status of the connection.
--   
--   The valid values are <tt>Encryption Up</tt>, which means that there is
--   an active Connection Key Name, or <tt>Encryption Down</tt>.
--   
--   <a>$sel:lagId:Connection'</a>, <a>connection_lagId</a> - The ID of the
--   LAG.
--   
--   <a>$sel:encryptionMode:Connection'</a>,
--   <a>connection_encryptionMode</a> - The MAC Security (MACsec)
--   connection encryption mode.
--   
--   The valid values are <tt>no_encrypt</tt>, <tt>should_encrypt</tt>, and
--   <tt>must_encrypt</tt>.
--   
--   <a>$sel:partnerName:Connection'</a>, <a>connection_partnerName</a> -
--   The name of the Direct Connect service provider associated with the
--   connection.
--   
--   <a>$sel:tags:Connection'</a>, <a>connection_tags</a> - The tags
--   associated with the connection.
--   
--   <a>$sel:loaIssueTime:Connection'</a>, <a>connection_loaIssueTime</a> -
--   The time of the most recent call to DescribeLoa for this connection.
--   
--   <a>$sel:ownerAccount:Connection'</a>, <a>connection_ownerAccount</a> -
--   The ID of the account that owns the connection.
--   
--   <a>$sel:region:Connection'</a>, <a>connection_region</a> - The Region
--   where the connection is located.
--   
--   <a>$sel:vlan:Connection'</a>, <a>connection_vlan</a> - The ID of the
--   VLAN.
--   
--   <a>$sel:location:Connection'</a>, <a>connection_location</a> - The
--   location of the connection.
--   
--   <a>$sel:macSecCapable:Connection'</a>, <a>connection_macSecCapable</a>
--   - Indicates whether the connection supports MAC Security (MACsec).
newConnection :: Connection

-- | The bandwidth of the connection.
connection_bandwidth :: Lens' Connection (Maybe Text)

-- | The Direct Connect endpoint that terminates the physical connection.
connection_awsDeviceV2 :: Lens' Connection (Maybe Text)

-- | The state of the connection. The following are the possible values:
--   
--   <ul>
--   <li><tt>ordering</tt>: The initial state of a hosted connection
--   provisioned on an interconnect. The connection stays in the ordering
--   state until the owner of the hosted connection confirms or declines
--   the connection order.</li>
--   <li><tt>requested</tt>: The initial state of a standard connection.
--   The connection stays in the requested state until the Letter of
--   Authorization (LOA) is sent to the customer.</li>
--   <li><tt>pending</tt>: The connection has been approved and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is up and the connection is
--   ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The connection is being deleted.</li>
--   <li><tt>deleted</tt>: The connection has been deleted.</li>
--   <li><tt>rejected</tt>: A hosted connection in the <tt>ordering</tt>
--   state enters the <tt>rejected</tt> state if it is deleted by the
--   customer.</li>
--   <li><tt>unknown</tt>: The state of the connection is not
--   available.</li>
--   </ul>
connection_connectionState :: Lens' Connection (Maybe ConnectionState)

-- | The name of the connection.
connection_connectionName :: Lens' Connection (Maybe Text)

-- | The MAC Security (MACsec) security keys associated with the
--   connection.
connection_macSecKeys :: Lens' Connection (Maybe [MacSecKey])

-- | The name of the service provider associated with the connection.
connection_providerName :: Lens' Connection (Maybe Text)

-- | The ID of the connection.
connection_connectionId :: Lens' Connection (Maybe Text)

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
connection_awsLogicalDeviceId :: Lens' Connection (Maybe Text)

-- | Indicates whether the connection supports a secondary BGP peer in the
--   same address family (IPv4/IPv6).
connection_hasLogicalRedundancy :: Lens' Connection (Maybe HasLogicalRedundancy)

-- | The Direct Connect endpoint on which the physical connection
--   terminates.
connection_awsDevice :: Lens' Connection (Maybe Text)

-- | Indicates whether jumbo frames (9001 MTU) are supported.
connection_jumboFrameCapable :: Lens' Connection (Maybe Bool)

-- | The MAC Security (MACsec) port link status of the connection.
--   
--   The valid values are <tt>Encryption Up</tt>, which means that there is
--   an active Connection Key Name, or <tt>Encryption Down</tt>.
connection_portEncryptionStatus :: Lens' Connection (Maybe Text)

-- | The ID of the LAG.
connection_lagId :: Lens' Connection (Maybe Text)

-- | The MAC Security (MACsec) connection encryption mode.
--   
--   The valid values are <tt>no_encrypt</tt>, <tt>should_encrypt</tt>, and
--   <tt>must_encrypt</tt>.
connection_encryptionMode :: Lens' Connection (Maybe Text)

-- | The name of the Direct Connect service provider associated with the
--   connection.
connection_partnerName :: Lens' Connection (Maybe Text)

-- | The tags associated with the connection.
connection_tags :: Lens' Connection (Maybe (NonEmpty Tag))

-- | The time of the most recent call to DescribeLoa for this connection.
connection_loaIssueTime :: Lens' Connection (Maybe UTCTime)

-- | The ID of the account that owns the connection.
connection_ownerAccount :: Lens' Connection (Maybe Text)

-- | The Region where the connection is located.
connection_region :: Lens' Connection (Maybe Text)

-- | The ID of the VLAN.
connection_vlan :: Lens' Connection (Maybe Int)

-- | The location of the connection.
connection_location :: Lens' Connection (Maybe Text)

-- | Indicates whether the connection supports MAC Security (MACsec).
connection_macSecCapable :: Lens' Connection (Maybe Bool)
instance GHC.Generics.Generic Network.AWS.DirectConnect.DeleteConnection.DeleteConnection
instance GHC.Show.Show Network.AWS.DirectConnect.DeleteConnection.DeleteConnection
instance GHC.Read.Read Network.AWS.DirectConnect.DeleteConnection.DeleteConnection
instance GHC.Classes.Eq Network.AWS.DirectConnect.DeleteConnection.DeleteConnection
instance Network.AWS.Types.AWSRequest Network.AWS.DirectConnect.DeleteConnection.DeleteConnection
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.DeleteConnection.DeleteConnection
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.DeleteConnection.DeleteConnection
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DirectConnect.DeleteConnection.DeleteConnection
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.DeleteConnection.DeleteConnection
instance Network.AWS.Data.Path.ToPath Network.AWS.DirectConnect.DeleteConnection.DeleteConnection
instance Network.AWS.Data.Query.ToQuery Network.AWS.DirectConnect.DeleteConnection.DeleteConnection


-- | Deletes the specified BGP peer on the specified virtual interface with
--   the specified customer address and ASN.
--   
--   You cannot delete the last BGP peer from a virtual interface.
module Network.AWS.DirectConnect.DeleteBGPPeer

-- | <i>See:</i> <a>newDeleteBGPPeer</a> smart constructor.
data DeleteBGPPeer
DeleteBGPPeer' :: Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> DeleteBGPPeer

-- | The autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
[$sel:asn:DeleteBGPPeer'] :: DeleteBGPPeer -> Maybe Int

-- | The ID of the BGP peer.
[$sel:bgpPeerId:DeleteBGPPeer'] :: DeleteBGPPeer -> Maybe Text

-- | The ID of the virtual interface.
[$sel:virtualInterfaceId:DeleteBGPPeer'] :: DeleteBGPPeer -> Maybe Text

-- | The IP address assigned to the customer interface.
[$sel:customerAddress:DeleteBGPPeer'] :: DeleteBGPPeer -> Maybe Text

-- | Create a value of <a>DeleteBGPPeer</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:asn:DeleteBGPPeer'</a>, <a>deleteBGPPeer_asn</a> - The
--   autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
--   
--   <a>$sel:bgpPeerId:DeleteBGPPeer'</a>, <a>deleteBGPPeer_bgpPeerId</a> -
--   The ID of the BGP peer.
--   
--   <a>$sel:virtualInterfaceId:DeleteBGPPeer'</a>,
--   <a>deleteBGPPeer_virtualInterfaceId</a> - The ID of the virtual
--   interface.
--   
--   <a>$sel:customerAddress:DeleteBGPPeer'</a>,
--   <a>deleteBGPPeer_customerAddress</a> - The IP address assigned to the
--   customer interface.
newDeleteBGPPeer :: DeleteBGPPeer

-- | The autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
deleteBGPPeer_asn :: Lens' DeleteBGPPeer (Maybe Int)

-- | The ID of the BGP peer.
deleteBGPPeer_bgpPeerId :: Lens' DeleteBGPPeer (Maybe Text)

-- | The ID of the virtual interface.
deleteBGPPeer_virtualInterfaceId :: Lens' DeleteBGPPeer (Maybe Text)

-- | The IP address assigned to the customer interface.
deleteBGPPeer_customerAddress :: Lens' DeleteBGPPeer (Maybe Text)

-- | <i>See:</i> <a>newDeleteBGPPeerResponse</a> smart constructor.
data DeleteBGPPeerResponse
DeleteBGPPeerResponse' :: Maybe VirtualInterface -> Int -> DeleteBGPPeerResponse

-- | The virtual interface.
[$sel:virtualInterface:DeleteBGPPeerResponse'] :: DeleteBGPPeerResponse -> Maybe VirtualInterface

-- | The response's http status code.
[$sel:httpStatus:DeleteBGPPeerResponse'] :: DeleteBGPPeerResponse -> Int

-- | Create a value of <a>DeleteBGPPeerResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:virtualInterface:DeleteBGPPeerResponse'</a>,
--   <a>deleteBGPPeerResponse_virtualInterface</a> - The virtual interface.
--   
--   <a>$sel:httpStatus:DeleteBGPPeerResponse'</a>,
--   <a>deleteBGPPeerResponse_httpStatus</a> - The response's http status
--   code.
newDeleteBGPPeerResponse :: Int -> DeleteBGPPeerResponse

-- | The virtual interface.
deleteBGPPeerResponse_virtualInterface :: Lens' DeleteBGPPeerResponse (Maybe VirtualInterface)

-- | The response's http status code.
deleteBGPPeerResponse_httpStatus :: Lens' DeleteBGPPeerResponse Int
instance GHC.Generics.Generic Network.AWS.DirectConnect.DeleteBGPPeer.DeleteBGPPeer
instance GHC.Show.Show Network.AWS.DirectConnect.DeleteBGPPeer.DeleteBGPPeer
instance GHC.Read.Read Network.AWS.DirectConnect.DeleteBGPPeer.DeleteBGPPeer
instance GHC.Classes.Eq Network.AWS.DirectConnect.DeleteBGPPeer.DeleteBGPPeer
instance GHC.Generics.Generic Network.AWS.DirectConnect.DeleteBGPPeer.DeleteBGPPeerResponse
instance GHC.Show.Show Network.AWS.DirectConnect.DeleteBGPPeer.DeleteBGPPeerResponse
instance GHC.Read.Read Network.AWS.DirectConnect.DeleteBGPPeer.DeleteBGPPeerResponse
instance GHC.Classes.Eq Network.AWS.DirectConnect.DeleteBGPPeer.DeleteBGPPeerResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DirectConnect.DeleteBGPPeer.DeleteBGPPeer
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.DeleteBGPPeer.DeleteBGPPeerResponse
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.DeleteBGPPeer.DeleteBGPPeer
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.DeleteBGPPeer.DeleteBGPPeer
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DirectConnect.DeleteBGPPeer.DeleteBGPPeer
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.DeleteBGPPeer.DeleteBGPPeer
instance Network.AWS.Data.Path.ToPath Network.AWS.DirectConnect.DeleteBGPPeer.DeleteBGPPeer
instance Network.AWS.Data.Query.ToQuery Network.AWS.DirectConnect.DeleteBGPPeer.DeleteBGPPeer


-- | Creates a transit virtual interface. A transit virtual interface
--   should be used to access one or more transit gateways associated with
--   Direct Connect gateways. A transit virtual interface enables the
--   connection of multiple VPCs attached to a transit gateway to a Direct
--   Connect gateway.
--   
--   If you associate your transit gateway with one or more Direct Connect
--   gateways, the Autonomous System Number (ASN) used by the transit
--   gateway and the Direct Connect gateway must be different. For example,
--   if you use the default ASN 64512 for both your the transit gateway and
--   Direct Connect gateway, the association request fails.
--   
--   Setting the MTU of a virtual interface to 8500 (jumbo frames) can
--   cause an update to the underlying physical connection if it wasn't
--   updated to support jumbo frames. Updating the connection disrupts
--   network connectivity for all virtual interfaces associated with the
--   connection for up to 30 seconds. To check whether your connection
--   supports jumbo frames, call DescribeConnections. To check whether your
--   virtual interface supports jumbo frames, call
--   DescribeVirtualInterfaces.
module Network.AWS.DirectConnect.CreateTransitVirtualInterface

-- | <i>See:</i> <a>newCreateTransitVirtualInterface</a> smart constructor.
data CreateTransitVirtualInterface
CreateTransitVirtualInterface' :: Text -> NewTransitVirtualInterface -> CreateTransitVirtualInterface

-- | The ID of the connection.
[$sel:connectionId:CreateTransitVirtualInterface'] :: CreateTransitVirtualInterface -> Text

-- | Information about the transit virtual interface.
[$sel:newTransitVirtualInterface':CreateTransitVirtualInterface'] :: CreateTransitVirtualInterface -> NewTransitVirtualInterface

-- | Create a value of <a>CreateTransitVirtualInterface</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connectionId:CreateTransitVirtualInterface'</a>,
--   <a>createTransitVirtualInterface_connectionId</a> - The ID of the
--   connection.
--   
--   
--   <a>$sel:newTransitVirtualInterface':CreateTransitVirtualInterface'</a>,
--   <a>createTransitVirtualInterface_newTransitVirtualInterface</a> -
--   Information about the transit virtual interface.
newCreateTransitVirtualInterface :: Text -> NewTransitVirtualInterface -> CreateTransitVirtualInterface

-- | The ID of the connection.
createTransitVirtualInterface_connectionId :: Lens' CreateTransitVirtualInterface Text

-- | Information about the transit virtual interface.
createTransitVirtualInterface_newTransitVirtualInterface :: Lens' CreateTransitVirtualInterface NewTransitVirtualInterface

-- | <i>See:</i> <a>newCreateTransitVirtualInterfaceResponse</a> smart
--   constructor.
data CreateTransitVirtualInterfaceResponse
CreateTransitVirtualInterfaceResponse' :: Maybe VirtualInterface -> Int -> CreateTransitVirtualInterfaceResponse
[$sel:virtualInterface:CreateTransitVirtualInterfaceResponse'] :: CreateTransitVirtualInterfaceResponse -> Maybe VirtualInterface

-- | The response's http status code.
[$sel:httpStatus:CreateTransitVirtualInterfaceResponse'] :: CreateTransitVirtualInterfaceResponse -> Int

-- | Create a value of <a>CreateTransitVirtualInterfaceResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:virtualInterface:CreateTransitVirtualInterfaceResponse'</a>,
--   <a>createTransitVirtualInterfaceResponse_virtualInterface</a> -
--   Undocumented member.
--   
--   <a>$sel:httpStatus:CreateTransitVirtualInterfaceResponse'</a>,
--   <a>createTransitVirtualInterfaceResponse_httpStatus</a> - The
--   response's http status code.
newCreateTransitVirtualInterfaceResponse :: Int -> CreateTransitVirtualInterfaceResponse

-- | Undocumented member.
createTransitVirtualInterfaceResponse_virtualInterface :: Lens' CreateTransitVirtualInterfaceResponse (Maybe VirtualInterface)

-- | The response's http status code.
createTransitVirtualInterfaceResponse_httpStatus :: Lens' CreateTransitVirtualInterfaceResponse Int
instance GHC.Generics.Generic Network.AWS.DirectConnect.CreateTransitVirtualInterface.CreateTransitVirtualInterface
instance GHC.Show.Show Network.AWS.DirectConnect.CreateTransitVirtualInterface.CreateTransitVirtualInterface
instance GHC.Read.Read Network.AWS.DirectConnect.CreateTransitVirtualInterface.CreateTransitVirtualInterface
instance GHC.Classes.Eq Network.AWS.DirectConnect.CreateTransitVirtualInterface.CreateTransitVirtualInterface
instance GHC.Generics.Generic Network.AWS.DirectConnect.CreateTransitVirtualInterface.CreateTransitVirtualInterfaceResponse
instance GHC.Show.Show Network.AWS.DirectConnect.CreateTransitVirtualInterface.CreateTransitVirtualInterfaceResponse
instance GHC.Read.Read Network.AWS.DirectConnect.CreateTransitVirtualInterface.CreateTransitVirtualInterfaceResponse
instance GHC.Classes.Eq Network.AWS.DirectConnect.CreateTransitVirtualInterface.CreateTransitVirtualInterfaceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DirectConnect.CreateTransitVirtualInterface.CreateTransitVirtualInterface
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.CreateTransitVirtualInterface.CreateTransitVirtualInterfaceResponse
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.CreateTransitVirtualInterface.CreateTransitVirtualInterface
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.CreateTransitVirtualInterface.CreateTransitVirtualInterface
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DirectConnect.CreateTransitVirtualInterface.CreateTransitVirtualInterface
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.CreateTransitVirtualInterface.CreateTransitVirtualInterface
instance Network.AWS.Data.Path.ToPath Network.AWS.DirectConnect.CreateTransitVirtualInterface.CreateTransitVirtualInterface
instance Network.AWS.Data.Query.ToQuery Network.AWS.DirectConnect.CreateTransitVirtualInterface.CreateTransitVirtualInterface


-- | Creates a public virtual interface. A virtual interface is the VLAN
--   that transports Direct Connect traffic. A public virtual interface
--   supports sending traffic to public services of Amazon Web Services
--   such as Amazon S3.
--   
--   When creating an IPv6 public virtual interface (<tt>addressFamily</tt>
--   is <tt>ipv6</tt>), leave the <tt>customer</tt> and <tt>amazon</tt>
--   address fields blank to use auto-assigned IPv6 space. Custom IPv6
--   addresses are not supported.
module Network.AWS.DirectConnect.CreatePublicVirtualInterface

-- | <i>See:</i> <a>newCreatePublicVirtualInterface</a> smart constructor.
data CreatePublicVirtualInterface
CreatePublicVirtualInterface' :: Text -> NewPublicVirtualInterface -> CreatePublicVirtualInterface

-- | The ID of the connection.
[$sel:connectionId:CreatePublicVirtualInterface'] :: CreatePublicVirtualInterface -> Text

-- | Information about the public virtual interface.
[$sel:newPublicVirtualInterface':CreatePublicVirtualInterface'] :: CreatePublicVirtualInterface -> NewPublicVirtualInterface

-- | Create a value of <a>CreatePublicVirtualInterface</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connectionId:CreatePublicVirtualInterface'</a>,
--   <a>createPublicVirtualInterface_connectionId</a> - The ID of the
--   connection.
--   
--   <a>$sel:newPublicVirtualInterface':CreatePublicVirtualInterface'</a>,
--   <a>createPublicVirtualInterface_newPublicVirtualInterface</a> -
--   Information about the public virtual interface.
newCreatePublicVirtualInterface :: Text -> NewPublicVirtualInterface -> CreatePublicVirtualInterface

-- | The ID of the connection.
createPublicVirtualInterface_connectionId :: Lens' CreatePublicVirtualInterface Text

-- | Information about the public virtual interface.
createPublicVirtualInterface_newPublicVirtualInterface :: Lens' CreatePublicVirtualInterface NewPublicVirtualInterface

-- | Information about a virtual interface.
--   
--   <i>See:</i> <a>newVirtualInterface</a> smart constructor.
data VirtualInterface
VirtualInterface' :: Maybe Text -> Maybe [BGPPeer] -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe [RouteFilterPrefix] -> Maybe Int -> Maybe Text -> Maybe Integer -> Maybe Text -> Maybe (NonEmpty Tag) -> Maybe Text -> Maybe Text -> Maybe VirtualInterfaceState -> Maybe Text -> Maybe AddressFamily -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> VirtualInterface

-- | The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
[$sel:authKey:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The BGP peers configured on this virtual interface.
[$sel:bgpPeers:VirtualInterface'] :: VirtualInterface -> Maybe [BGPPeer]

-- | The ID of the virtual private gateway. Applies only to private virtual
--   interfaces.
[$sel:virtualGatewayId:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
--   
--   The valid values are 1-2147483647.
[$sel:asn:VirtualInterface'] :: VirtualInterface -> Maybe Int

-- | The Direct Connect endpoint that terminates the physical connection.
[$sel:awsDeviceV2:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The ID of the connection.
[$sel:connectionId:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
[$sel:awsLogicalDeviceId:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The customer router configuration.
[$sel:customerRouterConfig:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | Indicates whether jumbo frames (9001 MTU) are supported.
[$sel:jumboFrameCapable:VirtualInterface'] :: VirtualInterface -> Maybe Bool

-- | The routes to be advertised to the Amazon Web Services network in this
--   Region. Applies to public virtual interfaces.
[$sel:routeFilterPrefixes:VirtualInterface'] :: VirtualInterface -> Maybe [RouteFilterPrefix]

-- | The maximum transmission unit (MTU), in bytes. The supported values
--   are 1500 and 9001. The default value is 1500.
[$sel:mtu:VirtualInterface'] :: VirtualInterface -> Maybe Int

-- | The type of virtual interface. The possible values are
--   <tt>private</tt> and <tt>public</tt>.
[$sel:virtualInterfaceType:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The autonomous system number (ASN) for the Amazon side of the
--   connection.
[$sel:amazonSideAsn:VirtualInterface'] :: VirtualInterface -> Maybe Integer

-- | The ID of the virtual interface.
[$sel:virtualInterfaceId:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The tags associated with the virtual interface.
[$sel:tags:VirtualInterface'] :: VirtualInterface -> Maybe (NonEmpty Tag)

-- | The ID of the Direct Connect gateway.
[$sel:directConnectGatewayId:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The name of the virtual interface assigned by the customer network.
--   The name has a maximum of 100 characters. The following are valid
--   characters: a-z, 0-9 and a hyphen (-).
[$sel:virtualInterfaceName:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The state of the virtual interface. The following are the possible
--   values:
--   
--   <ul>
--   <li><tt>confirming</tt>: The creation of the virtual interface is
--   pending confirmation from the virtual interface owner. If the owner of
--   the virtual interface is different from the owner of the connection on
--   which it is provisioned, then the virtual interface will remain in
--   this state until it is confirmed by the virtual interface owner.</li>
--   <li><tt>verifying</tt>: This state only applies to public virtual
--   interfaces. Each public virtual interface needs validation before the
--   virtual interface can be created.</li>
--   <li><tt>pending</tt>: A virtual interface is in this state from the
--   time that it is created until the virtual interface is ready to
--   forward traffic.</li>
--   <li><tt>available</tt>: A virtual interface that is able to forward
--   traffic.</li>
--   <li><tt>down</tt>: A virtual interface that is BGP down.</li>
--   <li><tt>deleting</tt>: A virtual interface is in this state
--   immediately after calling DeleteVirtualInterface until it can no
--   longer forward traffic.</li>
--   <li><tt>deleted</tt>: A virtual interface that cannot forward
--   traffic.</li>
--   <li><tt>rejected</tt>: The virtual interface owner has declined
--   creation of the virtual interface. If a virtual interface in the
--   <tt>Confirming</tt> state is deleted by the virtual interface owner,
--   the virtual interface enters the <tt>Rejected</tt> state.</li>
--   <li><tt>unknown</tt>: The state of the virtual interface is not
--   available.</li>
--   </ul>
[$sel:virtualInterfaceState:VirtualInterface'] :: VirtualInterface -> Maybe VirtualInterfaceState

-- | The IP address assigned to the Amazon interface.
[$sel:amazonAddress:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The address family for the BGP peer.
[$sel:addressFamily:VirtualInterface'] :: VirtualInterface -> Maybe AddressFamily

-- | The ID of the account that owns the virtual interface.
[$sel:ownerAccount:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The Region where the virtual interface is located.
[$sel:region:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The ID of the VLAN.
[$sel:vlan:VirtualInterface'] :: VirtualInterface -> Maybe Int

-- | The location of the connection.
[$sel:location:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The IP address assigned to the customer interface.
[$sel:customerAddress:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | Create a value of <a>VirtualInterface</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authKey:VirtualInterface'</a>, <a>virtualInterface_authKey</a>
--   - The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
--   
--   <a>$sel:bgpPeers:VirtualInterface'</a>,
--   <a>virtualInterface_bgpPeers</a> - The BGP peers configured on this
--   virtual interface.
--   
--   <a>$sel:virtualGatewayId:VirtualInterface'</a>,
--   <a>virtualInterface_virtualGatewayId</a> - The ID of the virtual
--   private gateway. Applies only to private virtual interfaces.
--   
--   <a>$sel:asn:VirtualInterface'</a>, <a>virtualInterface_asn</a> - The
--   autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
--   
--   The valid values are 1-2147483647.
--   
--   <a>$sel:awsDeviceV2:VirtualInterface'</a>,
--   <a>virtualInterface_awsDeviceV2</a> - The Direct Connect endpoint that
--   terminates the physical connection.
--   
--   <a>$sel:connectionId:VirtualInterface'</a>,
--   <a>virtualInterface_connectionId</a> - The ID of the connection.
--   
--   <a>$sel:awsLogicalDeviceId:VirtualInterface'</a>,
--   <a>virtualInterface_awsLogicalDeviceId</a> - The Direct Connect
--   endpoint that terminates the logical connection. This device might be
--   different than the device that terminates the physical connection.
--   
--   <a>$sel:customerRouterConfig:VirtualInterface'</a>,
--   <a>virtualInterface_customerRouterConfig</a> - The customer router
--   configuration.
--   
--   <a>$sel:jumboFrameCapable:VirtualInterface'</a>,
--   <a>virtualInterface_jumboFrameCapable</a> - Indicates whether jumbo
--   frames (9001 MTU) are supported.
--   
--   <a>$sel:routeFilterPrefixes:VirtualInterface'</a>,
--   <a>virtualInterface_routeFilterPrefixes</a> - The routes to be
--   advertised to the Amazon Web Services network in this Region. Applies
--   to public virtual interfaces.
--   
--   <a>$sel:mtu:VirtualInterface'</a>, <a>virtualInterface_mtu</a> - The
--   maximum transmission unit (MTU), in bytes. The supported values are
--   1500 and 9001. The default value is 1500.
--   
--   <a>$sel:virtualInterfaceType:VirtualInterface'</a>,
--   <a>virtualInterface_virtualInterfaceType</a> - The type of virtual
--   interface. The possible values are <tt>private</tt> and
--   <tt>public</tt>.
--   
--   <a>$sel:amazonSideAsn:VirtualInterface'</a>,
--   <a>virtualInterface_amazonSideAsn</a> - The autonomous system number
--   (ASN) for the Amazon side of the connection.
--   
--   <a>$sel:virtualInterfaceId:VirtualInterface'</a>,
--   <a>virtualInterface_virtualInterfaceId</a> - The ID of the virtual
--   interface.
--   
--   <a>$sel:tags:VirtualInterface'</a>, <a>virtualInterface_tags</a> - The
--   tags associated with the virtual interface.
--   
--   <a>$sel:directConnectGatewayId:VirtualInterface'</a>,
--   <a>virtualInterface_directConnectGatewayId</a> - The ID of the Direct
--   Connect gateway.
--   
--   <a>$sel:virtualInterfaceName:VirtualInterface'</a>,
--   <a>virtualInterface_virtualInterfaceName</a> - The name of the virtual
--   interface assigned by the customer network. The name has a maximum of
--   100 characters. The following are valid characters: a-z, 0-9 and a
--   hyphen (-).
--   
--   <a>$sel:virtualInterfaceState:VirtualInterface'</a>,
--   <a>virtualInterface_virtualInterfaceState</a> - The state of the
--   virtual interface. The following are the possible values:
--   
--   <ul>
--   <li><tt>confirming</tt>: The creation of the virtual interface is
--   pending confirmation from the virtual interface owner. If the owner of
--   the virtual interface is different from the owner of the connection on
--   which it is provisioned, then the virtual interface will remain in
--   this state until it is confirmed by the virtual interface owner.</li>
--   <li><tt>verifying</tt>: This state only applies to public virtual
--   interfaces. Each public virtual interface needs validation before the
--   virtual interface can be created.</li>
--   <li><tt>pending</tt>: A virtual interface is in this state from the
--   time that it is created until the virtual interface is ready to
--   forward traffic.</li>
--   <li><tt>available</tt>: A virtual interface that is able to forward
--   traffic.</li>
--   <li><tt>down</tt>: A virtual interface that is BGP down.</li>
--   <li><tt>deleting</tt>: A virtual interface is in this state
--   immediately after calling DeleteVirtualInterface until it can no
--   longer forward traffic.</li>
--   <li><tt>deleted</tt>: A virtual interface that cannot forward
--   traffic.</li>
--   <li><tt>rejected</tt>: The virtual interface owner has declined
--   creation of the virtual interface. If a virtual interface in the
--   <tt>Confirming</tt> state is deleted by the virtual interface owner,
--   the virtual interface enters the <tt>Rejected</tt> state.</li>
--   <li><tt>unknown</tt>: The state of the virtual interface is not
--   available.</li>
--   </ul>
--   
--   <a>$sel:amazonAddress:VirtualInterface'</a>,
--   <a>virtualInterface_amazonAddress</a> - The IP address assigned to the
--   Amazon interface.
--   
--   <a>$sel:addressFamily:VirtualInterface'</a>,
--   <a>virtualInterface_addressFamily</a> - The address family for the BGP
--   peer.
--   
--   <a>$sel:ownerAccount:VirtualInterface'</a>,
--   <a>virtualInterface_ownerAccount</a> - The ID of the account that owns
--   the virtual interface.
--   
--   <a>$sel:region:VirtualInterface'</a>, <a>virtualInterface_region</a> -
--   The Region where the virtual interface is located.
--   
--   <a>$sel:vlan:VirtualInterface'</a>, <a>virtualInterface_vlan</a> - The
--   ID of the VLAN.
--   
--   <a>$sel:location:VirtualInterface'</a>,
--   <a>virtualInterface_location</a> - The location of the connection.
--   
--   <a>$sel:customerAddress:VirtualInterface'</a>,
--   <a>virtualInterface_customerAddress</a> - The IP address assigned to
--   the customer interface.
newVirtualInterface :: VirtualInterface

-- | The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
virtualInterface_authKey :: Lens' VirtualInterface (Maybe Text)

-- | The BGP peers configured on this virtual interface.
virtualInterface_bgpPeers :: Lens' VirtualInterface (Maybe [BGPPeer])

-- | The ID of the virtual private gateway. Applies only to private virtual
--   interfaces.
virtualInterface_virtualGatewayId :: Lens' VirtualInterface (Maybe Text)

-- | The autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
--   
--   The valid values are 1-2147483647.
virtualInterface_asn :: Lens' VirtualInterface (Maybe Int)

-- | The Direct Connect endpoint that terminates the physical connection.
virtualInterface_awsDeviceV2 :: Lens' VirtualInterface (Maybe Text)

-- | The ID of the connection.
virtualInterface_connectionId :: Lens' VirtualInterface (Maybe Text)

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
virtualInterface_awsLogicalDeviceId :: Lens' VirtualInterface (Maybe Text)

-- | The customer router configuration.
virtualInterface_customerRouterConfig :: Lens' VirtualInterface (Maybe Text)

-- | Indicates whether jumbo frames (9001 MTU) are supported.
virtualInterface_jumboFrameCapable :: Lens' VirtualInterface (Maybe Bool)

-- | The routes to be advertised to the Amazon Web Services network in this
--   Region. Applies to public virtual interfaces.
virtualInterface_routeFilterPrefixes :: Lens' VirtualInterface (Maybe [RouteFilterPrefix])

-- | The maximum transmission unit (MTU), in bytes. The supported values
--   are 1500 and 9001. The default value is 1500.
virtualInterface_mtu :: Lens' VirtualInterface (Maybe Int)

-- | The type of virtual interface. The possible values are
--   <tt>private</tt> and <tt>public</tt>.
virtualInterface_virtualInterfaceType :: Lens' VirtualInterface (Maybe Text)

-- | The autonomous system number (ASN) for the Amazon side of the
--   connection.
virtualInterface_amazonSideAsn :: Lens' VirtualInterface (Maybe Integer)

-- | The ID of the virtual interface.
virtualInterface_virtualInterfaceId :: Lens' VirtualInterface (Maybe Text)

-- | The tags associated with the virtual interface.
virtualInterface_tags :: Lens' VirtualInterface (Maybe (NonEmpty Tag))

-- | The ID of the Direct Connect gateway.
virtualInterface_directConnectGatewayId :: Lens' VirtualInterface (Maybe Text)

-- | The name of the virtual interface assigned by the customer network.
--   The name has a maximum of 100 characters. The following are valid
--   characters: a-z, 0-9 and a hyphen (-).
virtualInterface_virtualInterfaceName :: Lens' VirtualInterface (Maybe Text)

-- | The state of the virtual interface. The following are the possible
--   values:
--   
--   <ul>
--   <li><tt>confirming</tt>: The creation of the virtual interface is
--   pending confirmation from the virtual interface owner. If the owner of
--   the virtual interface is different from the owner of the connection on
--   which it is provisioned, then the virtual interface will remain in
--   this state until it is confirmed by the virtual interface owner.</li>
--   <li><tt>verifying</tt>: This state only applies to public virtual
--   interfaces. Each public virtual interface needs validation before the
--   virtual interface can be created.</li>
--   <li><tt>pending</tt>: A virtual interface is in this state from the
--   time that it is created until the virtual interface is ready to
--   forward traffic.</li>
--   <li><tt>available</tt>: A virtual interface that is able to forward
--   traffic.</li>
--   <li><tt>down</tt>: A virtual interface that is BGP down.</li>
--   <li><tt>deleting</tt>: A virtual interface is in this state
--   immediately after calling DeleteVirtualInterface until it can no
--   longer forward traffic.</li>
--   <li><tt>deleted</tt>: A virtual interface that cannot forward
--   traffic.</li>
--   <li><tt>rejected</tt>: The virtual interface owner has declined
--   creation of the virtual interface. If a virtual interface in the
--   <tt>Confirming</tt> state is deleted by the virtual interface owner,
--   the virtual interface enters the <tt>Rejected</tt> state.</li>
--   <li><tt>unknown</tt>: The state of the virtual interface is not
--   available.</li>
--   </ul>
virtualInterface_virtualInterfaceState :: Lens' VirtualInterface (Maybe VirtualInterfaceState)

-- | The IP address assigned to the Amazon interface.
virtualInterface_amazonAddress :: Lens' VirtualInterface (Maybe Text)

-- | The address family for the BGP peer.
virtualInterface_addressFamily :: Lens' VirtualInterface (Maybe AddressFamily)

-- | The ID of the account that owns the virtual interface.
virtualInterface_ownerAccount :: Lens' VirtualInterface (Maybe Text)

-- | The Region where the virtual interface is located.
virtualInterface_region :: Lens' VirtualInterface (Maybe Text)

-- | The ID of the VLAN.
virtualInterface_vlan :: Lens' VirtualInterface (Maybe Int)

-- | The location of the connection.
virtualInterface_location :: Lens' VirtualInterface (Maybe Text)

-- | The IP address assigned to the customer interface.
virtualInterface_customerAddress :: Lens' VirtualInterface (Maybe Text)
instance GHC.Generics.Generic Network.AWS.DirectConnect.CreatePublicVirtualInterface.CreatePublicVirtualInterface
instance GHC.Show.Show Network.AWS.DirectConnect.CreatePublicVirtualInterface.CreatePublicVirtualInterface
instance GHC.Read.Read Network.AWS.DirectConnect.CreatePublicVirtualInterface.CreatePublicVirtualInterface
instance GHC.Classes.Eq Network.AWS.DirectConnect.CreatePublicVirtualInterface.CreatePublicVirtualInterface
instance Network.AWS.Types.AWSRequest Network.AWS.DirectConnect.CreatePublicVirtualInterface.CreatePublicVirtualInterface
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.CreatePublicVirtualInterface.CreatePublicVirtualInterface
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.CreatePublicVirtualInterface.CreatePublicVirtualInterface
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DirectConnect.CreatePublicVirtualInterface.CreatePublicVirtualInterface
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.CreatePublicVirtualInterface.CreatePublicVirtualInterface
instance Network.AWS.Data.Path.ToPath Network.AWS.DirectConnect.CreatePublicVirtualInterface.CreatePublicVirtualInterface
instance Network.AWS.Data.Query.ToQuery Network.AWS.DirectConnect.CreatePublicVirtualInterface.CreatePublicVirtualInterface


-- | Creates a private virtual interface. A virtual interface is the VLAN
--   that transports Direct Connect traffic. A private virtual interface
--   can be connected to either a Direct Connect gateway or a Virtual
--   Private Gateway (VGW). Connecting the private virtual interface to a
--   Direct Connect gateway enables the possibility for connecting to
--   multiple VPCs, including VPCs in different Regions. Connecting the
--   private virtual interface to a VGW only provides access to a single
--   VPC within the same Region.
--   
--   Setting the MTU of a virtual interface to 9001 (jumbo frames) can
--   cause an update to the underlying physical connection if it wasn't
--   updated to support jumbo frames. Updating the connection disrupts
--   network connectivity for all virtual interfaces associated with the
--   connection for up to 30 seconds. To check whether your connection
--   supports jumbo frames, call DescribeConnections. To check whether your
--   virtual interface supports jumbo frames, call
--   DescribeVirtualInterfaces.
module Network.AWS.DirectConnect.CreatePrivateVirtualInterface

-- | <i>See:</i> <a>newCreatePrivateVirtualInterface</a> smart constructor.
data CreatePrivateVirtualInterface
CreatePrivateVirtualInterface' :: Text -> NewPrivateVirtualInterface -> CreatePrivateVirtualInterface

-- | The ID of the connection.
[$sel:connectionId:CreatePrivateVirtualInterface'] :: CreatePrivateVirtualInterface -> Text

-- | Information about the private virtual interface.
[$sel:newPrivateVirtualInterface':CreatePrivateVirtualInterface'] :: CreatePrivateVirtualInterface -> NewPrivateVirtualInterface

-- | Create a value of <a>CreatePrivateVirtualInterface</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connectionId:CreatePrivateVirtualInterface'</a>,
--   <a>createPrivateVirtualInterface_connectionId</a> - The ID of the
--   connection.
--   
--   
--   <a>$sel:newPrivateVirtualInterface':CreatePrivateVirtualInterface'</a>,
--   <a>createPrivateVirtualInterface_newPrivateVirtualInterface</a> -
--   Information about the private virtual interface.
newCreatePrivateVirtualInterface :: Text -> NewPrivateVirtualInterface -> CreatePrivateVirtualInterface

-- | The ID of the connection.
createPrivateVirtualInterface_connectionId :: Lens' CreatePrivateVirtualInterface Text

-- | Information about the private virtual interface.
createPrivateVirtualInterface_newPrivateVirtualInterface :: Lens' CreatePrivateVirtualInterface NewPrivateVirtualInterface

-- | Information about a virtual interface.
--   
--   <i>See:</i> <a>newVirtualInterface</a> smart constructor.
data VirtualInterface
VirtualInterface' :: Maybe Text -> Maybe [BGPPeer] -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe [RouteFilterPrefix] -> Maybe Int -> Maybe Text -> Maybe Integer -> Maybe Text -> Maybe (NonEmpty Tag) -> Maybe Text -> Maybe Text -> Maybe VirtualInterfaceState -> Maybe Text -> Maybe AddressFamily -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> VirtualInterface

-- | The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
[$sel:authKey:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The BGP peers configured on this virtual interface.
[$sel:bgpPeers:VirtualInterface'] :: VirtualInterface -> Maybe [BGPPeer]

-- | The ID of the virtual private gateway. Applies only to private virtual
--   interfaces.
[$sel:virtualGatewayId:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
--   
--   The valid values are 1-2147483647.
[$sel:asn:VirtualInterface'] :: VirtualInterface -> Maybe Int

-- | The Direct Connect endpoint that terminates the physical connection.
[$sel:awsDeviceV2:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The ID of the connection.
[$sel:connectionId:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
[$sel:awsLogicalDeviceId:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The customer router configuration.
[$sel:customerRouterConfig:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | Indicates whether jumbo frames (9001 MTU) are supported.
[$sel:jumboFrameCapable:VirtualInterface'] :: VirtualInterface -> Maybe Bool

-- | The routes to be advertised to the Amazon Web Services network in this
--   Region. Applies to public virtual interfaces.
[$sel:routeFilterPrefixes:VirtualInterface'] :: VirtualInterface -> Maybe [RouteFilterPrefix]

-- | The maximum transmission unit (MTU), in bytes. The supported values
--   are 1500 and 9001. The default value is 1500.
[$sel:mtu:VirtualInterface'] :: VirtualInterface -> Maybe Int

-- | The type of virtual interface. The possible values are
--   <tt>private</tt> and <tt>public</tt>.
[$sel:virtualInterfaceType:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The autonomous system number (ASN) for the Amazon side of the
--   connection.
[$sel:amazonSideAsn:VirtualInterface'] :: VirtualInterface -> Maybe Integer

-- | The ID of the virtual interface.
[$sel:virtualInterfaceId:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The tags associated with the virtual interface.
[$sel:tags:VirtualInterface'] :: VirtualInterface -> Maybe (NonEmpty Tag)

-- | The ID of the Direct Connect gateway.
[$sel:directConnectGatewayId:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The name of the virtual interface assigned by the customer network.
--   The name has a maximum of 100 characters. The following are valid
--   characters: a-z, 0-9 and a hyphen (-).
[$sel:virtualInterfaceName:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The state of the virtual interface. The following are the possible
--   values:
--   
--   <ul>
--   <li><tt>confirming</tt>: The creation of the virtual interface is
--   pending confirmation from the virtual interface owner. If the owner of
--   the virtual interface is different from the owner of the connection on
--   which it is provisioned, then the virtual interface will remain in
--   this state until it is confirmed by the virtual interface owner.</li>
--   <li><tt>verifying</tt>: This state only applies to public virtual
--   interfaces. Each public virtual interface needs validation before the
--   virtual interface can be created.</li>
--   <li><tt>pending</tt>: A virtual interface is in this state from the
--   time that it is created until the virtual interface is ready to
--   forward traffic.</li>
--   <li><tt>available</tt>: A virtual interface that is able to forward
--   traffic.</li>
--   <li><tt>down</tt>: A virtual interface that is BGP down.</li>
--   <li><tt>deleting</tt>: A virtual interface is in this state
--   immediately after calling DeleteVirtualInterface until it can no
--   longer forward traffic.</li>
--   <li><tt>deleted</tt>: A virtual interface that cannot forward
--   traffic.</li>
--   <li><tt>rejected</tt>: The virtual interface owner has declined
--   creation of the virtual interface. If a virtual interface in the
--   <tt>Confirming</tt> state is deleted by the virtual interface owner,
--   the virtual interface enters the <tt>Rejected</tt> state.</li>
--   <li><tt>unknown</tt>: The state of the virtual interface is not
--   available.</li>
--   </ul>
[$sel:virtualInterfaceState:VirtualInterface'] :: VirtualInterface -> Maybe VirtualInterfaceState

-- | The IP address assigned to the Amazon interface.
[$sel:amazonAddress:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The address family for the BGP peer.
[$sel:addressFamily:VirtualInterface'] :: VirtualInterface -> Maybe AddressFamily

-- | The ID of the account that owns the virtual interface.
[$sel:ownerAccount:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The Region where the virtual interface is located.
[$sel:region:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The ID of the VLAN.
[$sel:vlan:VirtualInterface'] :: VirtualInterface -> Maybe Int

-- | The location of the connection.
[$sel:location:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The IP address assigned to the customer interface.
[$sel:customerAddress:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | Create a value of <a>VirtualInterface</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authKey:VirtualInterface'</a>, <a>virtualInterface_authKey</a>
--   - The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
--   
--   <a>$sel:bgpPeers:VirtualInterface'</a>,
--   <a>virtualInterface_bgpPeers</a> - The BGP peers configured on this
--   virtual interface.
--   
--   <a>$sel:virtualGatewayId:VirtualInterface'</a>,
--   <a>virtualInterface_virtualGatewayId</a> - The ID of the virtual
--   private gateway. Applies only to private virtual interfaces.
--   
--   <a>$sel:asn:VirtualInterface'</a>, <a>virtualInterface_asn</a> - The
--   autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
--   
--   The valid values are 1-2147483647.
--   
--   <a>$sel:awsDeviceV2:VirtualInterface'</a>,
--   <a>virtualInterface_awsDeviceV2</a> - The Direct Connect endpoint that
--   terminates the physical connection.
--   
--   <a>$sel:connectionId:VirtualInterface'</a>,
--   <a>virtualInterface_connectionId</a> - The ID of the connection.
--   
--   <a>$sel:awsLogicalDeviceId:VirtualInterface'</a>,
--   <a>virtualInterface_awsLogicalDeviceId</a> - The Direct Connect
--   endpoint that terminates the logical connection. This device might be
--   different than the device that terminates the physical connection.
--   
--   <a>$sel:customerRouterConfig:VirtualInterface'</a>,
--   <a>virtualInterface_customerRouterConfig</a> - The customer router
--   configuration.
--   
--   <a>$sel:jumboFrameCapable:VirtualInterface'</a>,
--   <a>virtualInterface_jumboFrameCapable</a> - Indicates whether jumbo
--   frames (9001 MTU) are supported.
--   
--   <a>$sel:routeFilterPrefixes:VirtualInterface'</a>,
--   <a>virtualInterface_routeFilterPrefixes</a> - The routes to be
--   advertised to the Amazon Web Services network in this Region. Applies
--   to public virtual interfaces.
--   
--   <a>$sel:mtu:VirtualInterface'</a>, <a>virtualInterface_mtu</a> - The
--   maximum transmission unit (MTU), in bytes. The supported values are
--   1500 and 9001. The default value is 1500.
--   
--   <a>$sel:virtualInterfaceType:VirtualInterface'</a>,
--   <a>virtualInterface_virtualInterfaceType</a> - The type of virtual
--   interface. The possible values are <tt>private</tt> and
--   <tt>public</tt>.
--   
--   <a>$sel:amazonSideAsn:VirtualInterface'</a>,
--   <a>virtualInterface_amazonSideAsn</a> - The autonomous system number
--   (ASN) for the Amazon side of the connection.
--   
--   <a>$sel:virtualInterfaceId:VirtualInterface'</a>,
--   <a>virtualInterface_virtualInterfaceId</a> - The ID of the virtual
--   interface.
--   
--   <a>$sel:tags:VirtualInterface'</a>, <a>virtualInterface_tags</a> - The
--   tags associated with the virtual interface.
--   
--   <a>$sel:directConnectGatewayId:VirtualInterface'</a>,
--   <a>virtualInterface_directConnectGatewayId</a> - The ID of the Direct
--   Connect gateway.
--   
--   <a>$sel:virtualInterfaceName:VirtualInterface'</a>,
--   <a>virtualInterface_virtualInterfaceName</a> - The name of the virtual
--   interface assigned by the customer network. The name has a maximum of
--   100 characters. The following are valid characters: a-z, 0-9 and a
--   hyphen (-).
--   
--   <a>$sel:virtualInterfaceState:VirtualInterface'</a>,
--   <a>virtualInterface_virtualInterfaceState</a> - The state of the
--   virtual interface. The following are the possible values:
--   
--   <ul>
--   <li><tt>confirming</tt>: The creation of the virtual interface is
--   pending confirmation from the virtual interface owner. If the owner of
--   the virtual interface is different from the owner of the connection on
--   which it is provisioned, then the virtual interface will remain in
--   this state until it is confirmed by the virtual interface owner.</li>
--   <li><tt>verifying</tt>: This state only applies to public virtual
--   interfaces. Each public virtual interface needs validation before the
--   virtual interface can be created.</li>
--   <li><tt>pending</tt>: A virtual interface is in this state from the
--   time that it is created until the virtual interface is ready to
--   forward traffic.</li>
--   <li><tt>available</tt>: A virtual interface that is able to forward
--   traffic.</li>
--   <li><tt>down</tt>: A virtual interface that is BGP down.</li>
--   <li><tt>deleting</tt>: A virtual interface is in this state
--   immediately after calling DeleteVirtualInterface until it can no
--   longer forward traffic.</li>
--   <li><tt>deleted</tt>: A virtual interface that cannot forward
--   traffic.</li>
--   <li><tt>rejected</tt>: The virtual interface owner has declined
--   creation of the virtual interface. If a virtual interface in the
--   <tt>Confirming</tt> state is deleted by the virtual interface owner,
--   the virtual interface enters the <tt>Rejected</tt> state.</li>
--   <li><tt>unknown</tt>: The state of the virtual interface is not
--   available.</li>
--   </ul>
--   
--   <a>$sel:amazonAddress:VirtualInterface'</a>,
--   <a>virtualInterface_amazonAddress</a> - The IP address assigned to the
--   Amazon interface.
--   
--   <a>$sel:addressFamily:VirtualInterface'</a>,
--   <a>virtualInterface_addressFamily</a> - The address family for the BGP
--   peer.
--   
--   <a>$sel:ownerAccount:VirtualInterface'</a>,
--   <a>virtualInterface_ownerAccount</a> - The ID of the account that owns
--   the virtual interface.
--   
--   <a>$sel:region:VirtualInterface'</a>, <a>virtualInterface_region</a> -
--   The Region where the virtual interface is located.
--   
--   <a>$sel:vlan:VirtualInterface'</a>, <a>virtualInterface_vlan</a> - The
--   ID of the VLAN.
--   
--   <a>$sel:location:VirtualInterface'</a>,
--   <a>virtualInterface_location</a> - The location of the connection.
--   
--   <a>$sel:customerAddress:VirtualInterface'</a>,
--   <a>virtualInterface_customerAddress</a> - The IP address assigned to
--   the customer interface.
newVirtualInterface :: VirtualInterface

-- | The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
virtualInterface_authKey :: Lens' VirtualInterface (Maybe Text)

-- | The BGP peers configured on this virtual interface.
virtualInterface_bgpPeers :: Lens' VirtualInterface (Maybe [BGPPeer])

-- | The ID of the virtual private gateway. Applies only to private virtual
--   interfaces.
virtualInterface_virtualGatewayId :: Lens' VirtualInterface (Maybe Text)

-- | The autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
--   
--   The valid values are 1-2147483647.
virtualInterface_asn :: Lens' VirtualInterface (Maybe Int)

-- | The Direct Connect endpoint that terminates the physical connection.
virtualInterface_awsDeviceV2 :: Lens' VirtualInterface (Maybe Text)

-- | The ID of the connection.
virtualInterface_connectionId :: Lens' VirtualInterface (Maybe Text)

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
virtualInterface_awsLogicalDeviceId :: Lens' VirtualInterface (Maybe Text)

-- | The customer router configuration.
virtualInterface_customerRouterConfig :: Lens' VirtualInterface (Maybe Text)

-- | Indicates whether jumbo frames (9001 MTU) are supported.
virtualInterface_jumboFrameCapable :: Lens' VirtualInterface (Maybe Bool)

-- | The routes to be advertised to the Amazon Web Services network in this
--   Region. Applies to public virtual interfaces.
virtualInterface_routeFilterPrefixes :: Lens' VirtualInterface (Maybe [RouteFilterPrefix])

-- | The maximum transmission unit (MTU), in bytes. The supported values
--   are 1500 and 9001. The default value is 1500.
virtualInterface_mtu :: Lens' VirtualInterface (Maybe Int)

-- | The type of virtual interface. The possible values are
--   <tt>private</tt> and <tt>public</tt>.
virtualInterface_virtualInterfaceType :: Lens' VirtualInterface (Maybe Text)

-- | The autonomous system number (ASN) for the Amazon side of the
--   connection.
virtualInterface_amazonSideAsn :: Lens' VirtualInterface (Maybe Integer)

-- | The ID of the virtual interface.
virtualInterface_virtualInterfaceId :: Lens' VirtualInterface (Maybe Text)

-- | The tags associated with the virtual interface.
virtualInterface_tags :: Lens' VirtualInterface (Maybe (NonEmpty Tag))

-- | The ID of the Direct Connect gateway.
virtualInterface_directConnectGatewayId :: Lens' VirtualInterface (Maybe Text)

-- | The name of the virtual interface assigned by the customer network.
--   The name has a maximum of 100 characters. The following are valid
--   characters: a-z, 0-9 and a hyphen (-).
virtualInterface_virtualInterfaceName :: Lens' VirtualInterface (Maybe Text)

-- | The state of the virtual interface. The following are the possible
--   values:
--   
--   <ul>
--   <li><tt>confirming</tt>: The creation of the virtual interface is
--   pending confirmation from the virtual interface owner. If the owner of
--   the virtual interface is different from the owner of the connection on
--   which it is provisioned, then the virtual interface will remain in
--   this state until it is confirmed by the virtual interface owner.</li>
--   <li><tt>verifying</tt>: This state only applies to public virtual
--   interfaces. Each public virtual interface needs validation before the
--   virtual interface can be created.</li>
--   <li><tt>pending</tt>: A virtual interface is in this state from the
--   time that it is created until the virtual interface is ready to
--   forward traffic.</li>
--   <li><tt>available</tt>: A virtual interface that is able to forward
--   traffic.</li>
--   <li><tt>down</tt>: A virtual interface that is BGP down.</li>
--   <li><tt>deleting</tt>: A virtual interface is in this state
--   immediately after calling DeleteVirtualInterface until it can no
--   longer forward traffic.</li>
--   <li><tt>deleted</tt>: A virtual interface that cannot forward
--   traffic.</li>
--   <li><tt>rejected</tt>: The virtual interface owner has declined
--   creation of the virtual interface. If a virtual interface in the
--   <tt>Confirming</tt> state is deleted by the virtual interface owner,
--   the virtual interface enters the <tt>Rejected</tt> state.</li>
--   <li><tt>unknown</tt>: The state of the virtual interface is not
--   available.</li>
--   </ul>
virtualInterface_virtualInterfaceState :: Lens' VirtualInterface (Maybe VirtualInterfaceState)

-- | The IP address assigned to the Amazon interface.
virtualInterface_amazonAddress :: Lens' VirtualInterface (Maybe Text)

-- | The address family for the BGP peer.
virtualInterface_addressFamily :: Lens' VirtualInterface (Maybe AddressFamily)

-- | The ID of the account that owns the virtual interface.
virtualInterface_ownerAccount :: Lens' VirtualInterface (Maybe Text)

-- | The Region where the virtual interface is located.
virtualInterface_region :: Lens' VirtualInterface (Maybe Text)

-- | The ID of the VLAN.
virtualInterface_vlan :: Lens' VirtualInterface (Maybe Int)

-- | The location of the connection.
virtualInterface_location :: Lens' VirtualInterface (Maybe Text)

-- | The IP address assigned to the customer interface.
virtualInterface_customerAddress :: Lens' VirtualInterface (Maybe Text)
instance GHC.Generics.Generic Network.AWS.DirectConnect.CreatePrivateVirtualInterface.CreatePrivateVirtualInterface
instance GHC.Show.Show Network.AWS.DirectConnect.CreatePrivateVirtualInterface.CreatePrivateVirtualInterface
instance GHC.Read.Read Network.AWS.DirectConnect.CreatePrivateVirtualInterface.CreatePrivateVirtualInterface
instance GHC.Classes.Eq Network.AWS.DirectConnect.CreatePrivateVirtualInterface.CreatePrivateVirtualInterface
instance Network.AWS.Types.AWSRequest Network.AWS.DirectConnect.CreatePrivateVirtualInterface.CreatePrivateVirtualInterface
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.CreatePrivateVirtualInterface.CreatePrivateVirtualInterface
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.CreatePrivateVirtualInterface.CreatePrivateVirtualInterface
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DirectConnect.CreatePrivateVirtualInterface.CreatePrivateVirtualInterface
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.CreatePrivateVirtualInterface.CreatePrivateVirtualInterface
instance Network.AWS.Data.Path.ToPath Network.AWS.DirectConnect.CreatePrivateVirtualInterface.CreatePrivateVirtualInterface
instance Network.AWS.Data.Query.ToQuery Network.AWS.DirectConnect.CreatePrivateVirtualInterface.CreatePrivateVirtualInterface


-- | Creates a link aggregation group (LAG) with the specified number of
--   bundled physical dedicated connections between the customer network
--   and a specific Direct Connect location. A LAG is a logical interface
--   that uses the Link Aggregation Control Protocol (LACP) to aggregate
--   multiple interfaces, enabling you to treat them as a single interface.
--   
--   All connections in a LAG must use the same bandwidth (either 1Gbps or
--   10Gbps) and must terminate at the same Direct Connect endpoint.
--   
--   You can have up to 10 dedicated connections per LAG. Regardless of
--   this limit, if you request more connections for the LAG than Direct
--   Connect can allocate on a single endpoint, no LAG is created.
--   
--   You can specify an existing physical dedicated connection or
--   interconnect to include in the LAG (which counts towards the total
--   number of connections). Doing so interrupts the current physical
--   dedicated connection, and re-establishes them as a member of the LAG.
--   The LAG will be created on the same Direct Connect endpoint to which
--   the dedicated connection terminates. Any virtual interfaces associated
--   with the dedicated connection are automatically disassociated and
--   re-associated with the LAG. The connection ID does not change.
--   
--   If the account used to create a LAG is a registered Direct Connect
--   Partner, the LAG is automatically enabled to host sub-connections. For
--   a LAG owned by a partner, any associated virtual interfaces cannot be
--   directly configured.
module Network.AWS.DirectConnect.CreateLag

-- | <i>See:</i> <a>newCreateLag</a> smart constructor.
data CreateLag
CreateLag' :: Maybe Text -> Maybe Text -> Maybe (NonEmpty Tag) -> Maybe (NonEmpty Tag) -> Maybe Bool -> Int -> Text -> Text -> Text -> CreateLag

-- | The name of the service provider associated with the LAG.
[$sel:providerName:CreateLag'] :: CreateLag -> Maybe Text

-- | The ID of an existing dedicated connection to migrate to the LAG.
[$sel:connectionId:CreateLag'] :: CreateLag -> Maybe Text

-- | The tags to associate with the automtically created LAGs.
[$sel:childConnectionTags:CreateLag'] :: CreateLag -> Maybe (NonEmpty Tag)

-- | The tags to associate with the LAG.
[$sel:tags:CreateLag'] :: CreateLag -> Maybe (NonEmpty Tag)

-- | Indicates whether the connection will support MAC Security (MACsec).
--   
--   All connections in the LAG must be capable of supporting MAC Security
--   (MACsec). For information about MAC Security (MACsec) prerequisties,
--   see <a>MACsec prerequisties</a> in the <i>Direct Connect User
--   Guide</i>.
[$sel:requestMACSec:CreateLag'] :: CreateLag -> Maybe Bool

-- | The number of physical dedicated connections initially provisioned and
--   bundled by the LAG.
[$sel:numberOfConnections:CreateLag'] :: CreateLag -> Int

-- | The location for the LAG.
[$sel:location:CreateLag'] :: CreateLag -> Text

-- | The bandwidth of the individual physical dedicated connections bundled
--   by the LAG. The possible values are 1Gbps and 10Gbps.
[$sel:connectionsBandwidth:CreateLag'] :: CreateLag -> Text

-- | The name of the LAG.
[$sel:lagName:CreateLag'] :: CreateLag -> Text

-- | Create a value of <a>CreateLag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:providerName:CreateLag'</a>, <a>createLag_providerName</a> -
--   The name of the service provider associated with the LAG.
--   
--   <a>$sel:connectionId:CreateLag'</a>, <a>createLag_connectionId</a> -
--   The ID of an existing dedicated connection to migrate to the LAG.
--   
--   <a>$sel:childConnectionTags:CreateLag'</a>,
--   <a>createLag_childConnectionTags</a> - The tags to associate with the
--   automtically created LAGs.
--   
--   <a>$sel:tags:CreateLag'</a>, <a>createLag_tags</a> - The tags to
--   associate with the LAG.
--   
--   <a>$sel:requestMACSec:CreateLag'</a>, <a>createLag_requestMACSec</a> -
--   Indicates whether the connection will support MAC Security (MACsec).
--   
--   All connections in the LAG must be capable of supporting MAC Security
--   (MACsec). For information about MAC Security (MACsec) prerequisties,
--   see <a>MACsec prerequisties</a> in the <i>Direct Connect User
--   Guide</i>.
--   
--   <a>$sel:numberOfConnections:CreateLag'</a>,
--   <a>createLag_numberOfConnections</a> - The number of physical
--   dedicated connections initially provisioned and bundled by the LAG.
--   
--   <a>$sel:location:CreateLag'</a>, <a>createLag_location</a> - The
--   location for the LAG.
--   
--   <a>$sel:connectionsBandwidth:CreateLag'</a>,
--   <a>createLag_connectionsBandwidth</a> - The bandwidth of the
--   individual physical dedicated connections bundled by the LAG. The
--   possible values are 1Gbps and 10Gbps.
--   
--   <a>$sel:lagName:CreateLag'</a>, <a>createLag_lagName</a> - The name of
--   the LAG.
newCreateLag :: Int -> Text -> Text -> Text -> CreateLag

-- | The name of the service provider associated with the LAG.
createLag_providerName :: Lens' CreateLag (Maybe Text)

-- | The ID of an existing dedicated connection to migrate to the LAG.
createLag_connectionId :: Lens' CreateLag (Maybe Text)

-- | The tags to associate with the automtically created LAGs.
createLag_childConnectionTags :: Lens' CreateLag (Maybe (NonEmpty Tag))

-- | The tags to associate with the LAG.
createLag_tags :: Lens' CreateLag (Maybe (NonEmpty Tag))

-- | Indicates whether the connection will support MAC Security (MACsec).
--   
--   All connections in the LAG must be capable of supporting MAC Security
--   (MACsec). For information about MAC Security (MACsec) prerequisties,
--   see <a>MACsec prerequisties</a> in the <i>Direct Connect User
--   Guide</i>.
createLag_requestMACSec :: Lens' CreateLag (Maybe Bool)

-- | The number of physical dedicated connections initially provisioned and
--   bundled by the LAG.
createLag_numberOfConnections :: Lens' CreateLag Int

-- | The location for the LAG.
createLag_location :: Lens' CreateLag Text

-- | The bandwidth of the individual physical dedicated connections bundled
--   by the LAG. The possible values are 1Gbps and 10Gbps.
createLag_connectionsBandwidth :: Lens' CreateLag Text

-- | The name of the LAG.
createLag_lagName :: Lens' CreateLag Text

-- | Information about a link aggregation group (LAG).
--   
--   <i>See:</i> <a>newLag</a> smart constructor.
data Lag
Lag' :: Maybe Int -> Maybe Text -> Maybe Bool -> Maybe [MacSecKey] -> Maybe Text -> Maybe Text -> Maybe HasLogicalRedundancy -> Maybe Text -> Maybe [Connection] -> Maybe Text -> Maybe LagState -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (NonEmpty Tag) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Bool -> Lag

-- | The number of physical dedicated connections bundled by the LAG, up to
--   a maximum of 10.
[$sel:numberOfConnections:Lag'] :: Lag -> Maybe Int

-- | The Direct Connect endpoint that hosts the LAG.
[$sel:awsDeviceV2:Lag'] :: Lag -> Maybe Text

-- | Indicates whether the LAG can host other connections.
[$sel:allowsHostedConnections:Lag'] :: Lag -> Maybe Bool

-- | The MAC Security (MACsec) security keys associated with the LAG.
[$sel:macSecKeys:Lag'] :: Lag -> Maybe [MacSecKey]

-- | The name of the service provider associated with the LAG.
[$sel:providerName:Lag'] :: Lag -> Maybe Text

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
[$sel:awsLogicalDeviceId:Lag'] :: Lag -> Maybe Text

-- | Indicates whether the LAG supports a secondary BGP peer in the same
--   address family (IPv4/IPv6).
[$sel:hasLogicalRedundancy:Lag'] :: Lag -> Maybe HasLogicalRedundancy

-- | The name of the LAG.
[$sel:lagName:Lag'] :: Lag -> Maybe Text

-- | The connections bundled by the LAG.
[$sel:connections:Lag'] :: Lag -> Maybe [Connection]

-- | The Direct Connect endpoint that hosts the LAG.
[$sel:awsDevice:Lag'] :: Lag -> Maybe Text

-- | The state of the LAG. The following are the possible values:
--   
--   <ul>
--   <li><tt>requested</tt>: The initial state of a LAG. The LAG stays in
--   the requested state until the Letter of Authorization (LOA) is
--   available.</li>
--   <li><tt>pending</tt>: The LAG has been approved and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is established and the LAG is
--   ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The LAG is being deleted.</li>
--   <li><tt>deleted</tt>: The LAG is deleted.</li>
--   <li><tt>unknown</tt>: The state of the LAG is not available.</li>
--   </ul>
[$sel:lagState:Lag'] :: Lag -> Maybe LagState

-- | Indicates whether jumbo frames (9001 MTU) are supported.
[$sel:jumboFrameCapable:Lag'] :: Lag -> Maybe Bool

-- | The individual bandwidth of the physical connections bundled by the
--   LAG. The possible values are 1Gbps and 10Gbps.
[$sel:connectionsBandwidth:Lag'] :: Lag -> Maybe Text

-- | The ID of the LAG.
[$sel:lagId:Lag'] :: Lag -> Maybe Text

-- | The LAG MAC Security (MACsec) encryption mode.
--   
--   The valid values are <tt>no_encrypt</tt>, <tt>should_encrypt</tt>, and
--   <tt>must_encrypt</tt>.
[$sel:encryptionMode:Lag'] :: Lag -> Maybe Text

-- | The tags associated with the LAG.
[$sel:tags:Lag'] :: Lag -> Maybe (NonEmpty Tag)

-- | The ID of the account that owns the LAG.
[$sel:ownerAccount:Lag'] :: Lag -> Maybe Text

-- | The Region where the connection is located.
[$sel:region:Lag'] :: Lag -> Maybe Text

-- | The location of the LAG.
[$sel:location:Lag'] :: Lag -> Maybe Text

-- | The minimum number of physical dedicated connections that must be
--   operational for the LAG itself to be operational.
[$sel:minimumLinks:Lag'] :: Lag -> Maybe Int

-- | Indicates whether the LAG supports MAC Security (MACsec).
[$sel:macSecCapable:Lag'] :: Lag -> Maybe Bool

-- | Create a value of <a>Lag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:numberOfConnections:Lag'</a>, <a>lag_numberOfConnections</a> -
--   The number of physical dedicated connections bundled by the LAG, up to
--   a maximum of 10.
--   
--   <a>$sel:awsDeviceV2:Lag'</a>, <a>lag_awsDeviceV2</a> - The Direct
--   Connect endpoint that hosts the LAG.
--   
--   <a>$sel:allowsHostedConnections:Lag'</a>,
--   <a>lag_allowsHostedConnections</a> - Indicates whether the LAG can
--   host other connections.
--   
--   <a>$sel:macSecKeys:Lag'</a>, <a>lag_macSecKeys</a> - The MAC Security
--   (MACsec) security keys associated with the LAG.
--   
--   <a>$sel:providerName:Lag'</a>, <a>lag_providerName</a> - The name of
--   the service provider associated with the LAG.
--   
--   <a>$sel:awsLogicalDeviceId:Lag'</a>, <a>lag_awsLogicalDeviceId</a> -
--   The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
--   
--   <a>$sel:hasLogicalRedundancy:Lag'</a>, <a>lag_hasLogicalRedundancy</a>
--   - Indicates whether the LAG supports a secondary BGP peer in the same
--   address family (IPv4/IPv6).
--   
--   <a>$sel:lagName:Lag'</a>, <a>lag_lagName</a> - The name of the LAG.
--   
--   <a>$sel:connections:Lag'</a>, <a>lag_connections</a> - The connections
--   bundled by the LAG.
--   
--   <a>$sel:awsDevice:Lag'</a>, <a>lag_awsDevice</a> - The Direct Connect
--   endpoint that hosts the LAG.
--   
--   <a>$sel:lagState:Lag'</a>, <a>lag_lagState</a> - The state of the LAG.
--   The following are the possible values:
--   
--   <ul>
--   <li><tt>requested</tt>: The initial state of a LAG. The LAG stays in
--   the requested state until the Letter of Authorization (LOA) is
--   available.</li>
--   <li><tt>pending</tt>: The LAG has been approved and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is established and the LAG is
--   ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The LAG is being deleted.</li>
--   <li><tt>deleted</tt>: The LAG is deleted.</li>
--   <li><tt>unknown</tt>: The state of the LAG is not available.</li>
--   </ul>
--   
--   <a>$sel:jumboFrameCapable:Lag'</a>, <a>lag_jumboFrameCapable</a> -
--   Indicates whether jumbo frames (9001 MTU) are supported.
--   
--   <a>$sel:connectionsBandwidth:Lag'</a>, <a>lag_connectionsBandwidth</a>
--   - The individual bandwidth of the physical connections bundled by the
--   LAG. The possible values are 1Gbps and 10Gbps.
--   
--   <a>$sel:lagId:Lag'</a>, <a>lag_lagId</a> - The ID of the LAG.
--   
--   <a>$sel:encryptionMode:Lag'</a>, <a>lag_encryptionMode</a> - The LAG
--   MAC Security (MACsec) encryption mode.
--   
--   The valid values are <tt>no_encrypt</tt>, <tt>should_encrypt</tt>, and
--   <tt>must_encrypt</tt>.
--   
--   <a>$sel:tags:Lag'</a>, <a>lag_tags</a> - The tags associated with the
--   LAG.
--   
--   <a>$sel:ownerAccount:Lag'</a>, <a>lag_ownerAccount</a> - The ID of the
--   account that owns the LAG.
--   
--   <a>$sel:region:Lag'</a>, <a>lag_region</a> - The Region where the
--   connection is located.
--   
--   <a>$sel:location:Lag'</a>, <a>lag_location</a> - The location of the
--   LAG.
--   
--   <a>$sel:minimumLinks:Lag'</a>, <a>lag_minimumLinks</a> - The minimum
--   number of physical dedicated connections that must be operational for
--   the LAG itself to be operational.
--   
--   <a>$sel:macSecCapable:Lag'</a>, <a>lag_macSecCapable</a> - Indicates
--   whether the LAG supports MAC Security (MACsec).
newLag :: Lag

-- | The number of physical dedicated connections bundled by the LAG, up to
--   a maximum of 10.
lag_numberOfConnections :: Lens' Lag (Maybe Int)

-- | The Direct Connect endpoint that hosts the LAG.
lag_awsDeviceV2 :: Lens' Lag (Maybe Text)

-- | Indicates whether the LAG can host other connections.
lag_allowsHostedConnections :: Lens' Lag (Maybe Bool)

-- | The MAC Security (MACsec) security keys associated with the LAG.
lag_macSecKeys :: Lens' Lag (Maybe [MacSecKey])

-- | The name of the service provider associated with the LAG.
lag_providerName :: Lens' Lag (Maybe Text)

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
lag_awsLogicalDeviceId :: Lens' Lag (Maybe Text)

-- | Indicates whether the LAG supports a secondary BGP peer in the same
--   address family (IPv4/IPv6).
lag_hasLogicalRedundancy :: Lens' Lag (Maybe HasLogicalRedundancy)

-- | The name of the LAG.
lag_lagName :: Lens' Lag (Maybe Text)

-- | The connections bundled by the LAG.
lag_connections :: Lens' Lag (Maybe [Connection])

-- | The Direct Connect endpoint that hosts the LAG.
lag_awsDevice :: Lens' Lag (Maybe Text)

-- | The state of the LAG. The following are the possible values:
--   
--   <ul>
--   <li><tt>requested</tt>: The initial state of a LAG. The LAG stays in
--   the requested state until the Letter of Authorization (LOA) is
--   available.</li>
--   <li><tt>pending</tt>: The LAG has been approved and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is established and the LAG is
--   ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The LAG is being deleted.</li>
--   <li><tt>deleted</tt>: The LAG is deleted.</li>
--   <li><tt>unknown</tt>: The state of the LAG is not available.</li>
--   </ul>
lag_lagState :: Lens' Lag (Maybe LagState)

-- | Indicates whether jumbo frames (9001 MTU) are supported.
lag_jumboFrameCapable :: Lens' Lag (Maybe Bool)

-- | The individual bandwidth of the physical connections bundled by the
--   LAG. The possible values are 1Gbps and 10Gbps.
lag_connectionsBandwidth :: Lens' Lag (Maybe Text)

-- | The ID of the LAG.
lag_lagId :: Lens' Lag (Maybe Text)

-- | The LAG MAC Security (MACsec) encryption mode.
--   
--   The valid values are <tt>no_encrypt</tt>, <tt>should_encrypt</tt>, and
--   <tt>must_encrypt</tt>.
lag_encryptionMode :: Lens' Lag (Maybe Text)

-- | The tags associated with the LAG.
lag_tags :: Lens' Lag (Maybe (NonEmpty Tag))

-- | The ID of the account that owns the LAG.
lag_ownerAccount :: Lens' Lag (Maybe Text)

-- | The Region where the connection is located.
lag_region :: Lens' Lag (Maybe Text)

-- | The location of the LAG.
lag_location :: Lens' Lag (Maybe Text)

-- | The minimum number of physical dedicated connections that must be
--   operational for the LAG itself to be operational.
lag_minimumLinks :: Lens' Lag (Maybe Int)

-- | Indicates whether the LAG supports MAC Security (MACsec).
lag_macSecCapable :: Lens' Lag (Maybe Bool)
instance GHC.Generics.Generic Network.AWS.DirectConnect.CreateLag.CreateLag
instance GHC.Show.Show Network.AWS.DirectConnect.CreateLag.CreateLag
instance GHC.Read.Read Network.AWS.DirectConnect.CreateLag.CreateLag
instance GHC.Classes.Eq Network.AWS.DirectConnect.CreateLag.CreateLag
instance Network.AWS.Types.AWSRequest Network.AWS.DirectConnect.CreateLag.CreateLag
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.CreateLag.CreateLag
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.CreateLag.CreateLag
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DirectConnect.CreateLag.CreateLag
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.CreateLag.CreateLag
instance Network.AWS.Data.Path.ToPath Network.AWS.DirectConnect.CreateLag.CreateLag
instance Network.AWS.Data.Query.ToQuery Network.AWS.DirectConnect.CreateLag.CreateLag


-- | Creates an interconnect between an Direct Connect Partner's network
--   and a specific Direct Connect location.
--   
--   An interconnect is a connection that is capable of hosting other
--   connections. The Direct Connect Partner can use an interconnect to
--   provide Direct Connect hosted connections to customers through their
--   own network services. Like a standard connection, an interconnect
--   links the partner's network to an Direct Connect location over a
--   standard Ethernet fiber-optic cable. One end is connected to the
--   partner's router, the other to an Direct Connect router.
--   
--   You can automatically add the new interconnect to a link aggregation
--   group (LAG) by specifying a LAG ID in the request. This ensures that
--   the new interconnect is allocated on the same Direct Connect endpoint
--   that hosts the specified LAG. If there are no available ports on the
--   endpoint, the request fails and no interconnect is created.
--   
--   For each end customer, the Direct Connect Partner provisions a
--   connection on their interconnect by calling AllocateHostedConnection.
--   The end customer can then connect to Amazon Web Services resources by
--   creating a virtual interface on their connection, using the VLAN
--   assigned to them by the Direct Connect Partner.
--   
--   Intended for use by Direct Connect Partners only.
module Network.AWS.DirectConnect.CreateInterconnect

-- | <i>See:</i> <a>newCreateInterconnect</a> smart constructor.
data CreateInterconnect
CreateInterconnect' :: Maybe Text -> Maybe Text -> Maybe (NonEmpty Tag) -> Text -> Text -> Text -> CreateInterconnect

-- | The name of the service provider associated with the interconnect.
[$sel:providerName:CreateInterconnect'] :: CreateInterconnect -> Maybe Text

-- | The ID of the LAG.
[$sel:lagId:CreateInterconnect'] :: CreateInterconnect -> Maybe Text

-- | The tags to associate with the interconnect.
[$sel:tags:CreateInterconnect'] :: CreateInterconnect -> Maybe (NonEmpty Tag)

-- | The name of the interconnect.
[$sel:interconnectName:CreateInterconnect'] :: CreateInterconnect -> Text

-- | The port bandwidth, in Gbps. The possible values are 1 and 10.
[$sel:bandwidth:CreateInterconnect'] :: CreateInterconnect -> Text

-- | The location of the interconnect.
[$sel:location:CreateInterconnect'] :: CreateInterconnect -> Text

-- | Create a value of <a>CreateInterconnect</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:providerName:CreateInterconnect'</a>,
--   <a>createInterconnect_providerName</a> - The name of the service
--   provider associated with the interconnect.
--   
--   <a>$sel:lagId:CreateInterconnect'</a>, <a>createInterconnect_lagId</a>
--   - The ID of the LAG.
--   
--   <a>$sel:tags:CreateInterconnect'</a>, <a>createInterconnect_tags</a> -
--   The tags to associate with the interconnect.
--   
--   <a>$sel:interconnectName:CreateInterconnect'</a>,
--   <a>createInterconnect_interconnectName</a> - The name of the
--   interconnect.
--   
--   <a>$sel:bandwidth:CreateInterconnect'</a>,
--   <a>createInterconnect_bandwidth</a> - The port bandwidth, in Gbps. The
--   possible values are 1 and 10.
--   
--   <a>$sel:location:CreateInterconnect'</a>,
--   <a>createInterconnect_location</a> - The location of the interconnect.
newCreateInterconnect :: Text -> Text -> Text -> CreateInterconnect

-- | The name of the service provider associated with the interconnect.
createInterconnect_providerName :: Lens' CreateInterconnect (Maybe Text)

-- | The ID of the LAG.
createInterconnect_lagId :: Lens' CreateInterconnect (Maybe Text)

-- | The tags to associate with the interconnect.
createInterconnect_tags :: Lens' CreateInterconnect (Maybe (NonEmpty Tag))

-- | The name of the interconnect.
createInterconnect_interconnectName :: Lens' CreateInterconnect Text

-- | The port bandwidth, in Gbps. The possible values are 1 and 10.
createInterconnect_bandwidth :: Lens' CreateInterconnect Text

-- | The location of the interconnect.
createInterconnect_location :: Lens' CreateInterconnect Text

-- | Information about an interconnect.
--   
--   <i>See:</i> <a>newInterconnect</a> smart constructor.
data Interconnect
Interconnect' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe HasLogicalRedundancy -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe (NonEmpty Tag) -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe InterconnectState -> Maybe Text -> Interconnect

-- | The ID of the interconnect.
[$sel:interconnectId:Interconnect'] :: Interconnect -> Maybe Text

-- | The bandwidth of the connection.
[$sel:bandwidth:Interconnect'] :: Interconnect -> Maybe Text

-- | The Direct Connect endpoint that terminates the physical connection.
[$sel:awsDeviceV2:Interconnect'] :: Interconnect -> Maybe Text

-- | The name of the service provider associated with the interconnect.
[$sel:providerName:Interconnect'] :: Interconnect -> Maybe Text

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
[$sel:awsLogicalDeviceId:Interconnect'] :: Interconnect -> Maybe Text

-- | Indicates whether the interconnect supports a secondary BGP in the
--   same address family (IPv4/IPv6).
[$sel:hasLogicalRedundancy:Interconnect'] :: Interconnect -> Maybe HasLogicalRedundancy

-- | The Direct Connect endpoint on which the physical connection
--   terminates.
[$sel:awsDevice:Interconnect'] :: Interconnect -> Maybe Text

-- | Indicates whether jumbo frames (9001 MTU) are supported.
[$sel:jumboFrameCapable:Interconnect'] :: Interconnect -> Maybe Bool

-- | The ID of the LAG.
[$sel:lagId:Interconnect'] :: Interconnect -> Maybe Text

-- | The tags associated with the interconnect.
[$sel:tags:Interconnect'] :: Interconnect -> Maybe (NonEmpty Tag)

-- | The time of the most recent call to DescribeLoa for this connection.
[$sel:loaIssueTime:Interconnect'] :: Interconnect -> Maybe POSIX

-- | The Region where the connection is located.
[$sel:region:Interconnect'] :: Interconnect -> Maybe Text

-- | The name of the interconnect.
[$sel:interconnectName:Interconnect'] :: Interconnect -> Maybe Text

-- | The state of the interconnect. The following are the possible values:
--   
--   <ul>
--   <li><tt>requested</tt>: The initial state of an interconnect. The
--   interconnect stays in the requested state until the Letter of
--   Authorization (LOA) is sent to the customer.</li>
--   <li><tt>pending</tt>: The interconnect is approved, and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is up, and the interconnect
--   is ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The interconnect is being deleted.</li>
--   <li><tt>deleted</tt>: The interconnect is deleted.</li>
--   <li><tt>unknown</tt>: The state of the interconnect is not
--   available.</li>
--   </ul>
[$sel:interconnectState:Interconnect'] :: Interconnect -> Maybe InterconnectState

-- | The location of the connection.
[$sel:location:Interconnect'] :: Interconnect -> Maybe Text

-- | Create a value of <a>Interconnect</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:interconnectId:Interconnect'</a>,
--   <a>interconnect_interconnectId</a> - The ID of the interconnect.
--   
--   <a>$sel:bandwidth:Interconnect'</a>, <a>interconnect_bandwidth</a> -
--   The bandwidth of the connection.
--   
--   <a>$sel:awsDeviceV2:Interconnect'</a>, <a>interconnect_awsDeviceV2</a>
--   - The Direct Connect endpoint that terminates the physical connection.
--   
--   <a>$sel:providerName:Interconnect'</a>,
--   <a>interconnect_providerName</a> - The name of the service provider
--   associated with the interconnect.
--   
--   <a>$sel:awsLogicalDeviceId:Interconnect'</a>,
--   <a>interconnect_awsLogicalDeviceId</a> - The Direct Connect endpoint
--   that terminates the logical connection. This device might be different
--   than the device that terminates the physical connection.
--   
--   <a>$sel:hasLogicalRedundancy:Interconnect'</a>,
--   <a>interconnect_hasLogicalRedundancy</a> - Indicates whether the
--   interconnect supports a secondary BGP in the same address family
--   (IPv4/IPv6).
--   
--   <a>$sel:awsDevice:Interconnect'</a>, <a>interconnect_awsDevice</a> -
--   The Direct Connect endpoint on which the physical connection
--   terminates.
--   
--   <a>$sel:jumboFrameCapable:Interconnect'</a>,
--   <a>interconnect_jumboFrameCapable</a> - Indicates whether jumbo frames
--   (9001 MTU) are supported.
--   
--   <a>$sel:lagId:Interconnect'</a>, <a>interconnect_lagId</a> - The ID of
--   the LAG.
--   
--   <a>$sel:tags:Interconnect'</a>, <a>interconnect_tags</a> - The tags
--   associated with the interconnect.
--   
--   <a>$sel:loaIssueTime:Interconnect'</a>,
--   <a>interconnect_loaIssueTime</a> - The time of the most recent call to
--   DescribeLoa for this connection.
--   
--   <a>$sel:region:Interconnect'</a>, <a>interconnect_region</a> - The
--   Region where the connection is located.
--   
--   <a>$sel:interconnectName:Interconnect'</a>,
--   <a>interconnect_interconnectName</a> - The name of the interconnect.
--   
--   <a>$sel:interconnectState:Interconnect'</a>,
--   <a>interconnect_interconnectState</a> - The state of the interconnect.
--   The following are the possible values:
--   
--   <ul>
--   <li><tt>requested</tt>: The initial state of an interconnect. The
--   interconnect stays in the requested state until the Letter of
--   Authorization (LOA) is sent to the customer.</li>
--   <li><tt>pending</tt>: The interconnect is approved, and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is up, and the interconnect
--   is ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The interconnect is being deleted.</li>
--   <li><tt>deleted</tt>: The interconnect is deleted.</li>
--   <li><tt>unknown</tt>: The state of the interconnect is not
--   available.</li>
--   </ul>
--   
--   <a>$sel:location:Interconnect'</a>, <a>interconnect_location</a> - The
--   location of the connection.
newInterconnect :: Interconnect

-- | The ID of the interconnect.
interconnect_interconnectId :: Lens' Interconnect (Maybe Text)

-- | The bandwidth of the connection.
interconnect_bandwidth :: Lens' Interconnect (Maybe Text)

-- | The Direct Connect endpoint that terminates the physical connection.
interconnect_awsDeviceV2 :: Lens' Interconnect (Maybe Text)

-- | The name of the service provider associated with the interconnect.
interconnect_providerName :: Lens' Interconnect (Maybe Text)

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
interconnect_awsLogicalDeviceId :: Lens' Interconnect (Maybe Text)

-- | Indicates whether the interconnect supports a secondary BGP in the
--   same address family (IPv4/IPv6).
interconnect_hasLogicalRedundancy :: Lens' Interconnect (Maybe HasLogicalRedundancy)

-- | The Direct Connect endpoint on which the physical connection
--   terminates.
interconnect_awsDevice :: Lens' Interconnect (Maybe Text)

-- | Indicates whether jumbo frames (9001 MTU) are supported.
interconnect_jumboFrameCapable :: Lens' Interconnect (Maybe Bool)

-- | The ID of the LAG.
interconnect_lagId :: Lens' Interconnect (Maybe Text)

-- | The tags associated with the interconnect.
interconnect_tags :: Lens' Interconnect (Maybe (NonEmpty Tag))

-- | The time of the most recent call to DescribeLoa for this connection.
interconnect_loaIssueTime :: Lens' Interconnect (Maybe UTCTime)

-- | The Region where the connection is located.
interconnect_region :: Lens' Interconnect (Maybe Text)

-- | The name of the interconnect.
interconnect_interconnectName :: Lens' Interconnect (Maybe Text)

-- | The state of the interconnect. The following are the possible values:
--   
--   <ul>
--   <li><tt>requested</tt>: The initial state of an interconnect. The
--   interconnect stays in the requested state until the Letter of
--   Authorization (LOA) is sent to the customer.</li>
--   <li><tt>pending</tt>: The interconnect is approved, and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is up, and the interconnect
--   is ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The interconnect is being deleted.</li>
--   <li><tt>deleted</tt>: The interconnect is deleted.</li>
--   <li><tt>unknown</tt>: The state of the interconnect is not
--   available.</li>
--   </ul>
interconnect_interconnectState :: Lens' Interconnect (Maybe InterconnectState)

-- | The location of the connection.
interconnect_location :: Lens' Interconnect (Maybe Text)
instance GHC.Generics.Generic Network.AWS.DirectConnect.CreateInterconnect.CreateInterconnect
instance GHC.Show.Show Network.AWS.DirectConnect.CreateInterconnect.CreateInterconnect
instance GHC.Read.Read Network.AWS.DirectConnect.CreateInterconnect.CreateInterconnect
instance GHC.Classes.Eq Network.AWS.DirectConnect.CreateInterconnect.CreateInterconnect
instance Network.AWS.Types.AWSRequest Network.AWS.DirectConnect.CreateInterconnect.CreateInterconnect
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.CreateInterconnect.CreateInterconnect
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.CreateInterconnect.CreateInterconnect
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DirectConnect.CreateInterconnect.CreateInterconnect
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.CreateInterconnect.CreateInterconnect
instance Network.AWS.Data.Path.ToPath Network.AWS.DirectConnect.CreateInterconnect.CreateInterconnect
instance Network.AWS.Data.Query.ToQuery Network.AWS.DirectConnect.CreateInterconnect.CreateInterconnect


-- | Creates a proposal to associate the specified virtual private gateway
--   or transit gateway with the specified Direct Connect gateway.
--   
--   You can associate a Direct Connect gateway and virtual private gateway
--   or transit gateway that is owned by any account.
module Network.AWS.DirectConnect.CreateDirectConnectGatewayAssociationProposal

-- | <i>See:</i> <a>newCreateDirectConnectGatewayAssociationProposal</a>
--   smart constructor.
data CreateDirectConnectGatewayAssociationProposal
CreateDirectConnectGatewayAssociationProposal' :: Maybe [RouteFilterPrefix] -> Maybe [RouteFilterPrefix] -> Text -> Text -> Text -> CreateDirectConnectGatewayAssociationProposal

-- | The Amazon VPC prefixes to no longer advertise to the Direct Connect
--   gateway.
[$sel:removeAllowedPrefixesToDirectConnectGateway:CreateDirectConnectGatewayAssociationProposal'] :: CreateDirectConnectGatewayAssociationProposal -> Maybe [RouteFilterPrefix]

-- | The Amazon VPC prefixes to advertise to the Direct Connect gateway.
[$sel:addAllowedPrefixesToDirectConnectGateway:CreateDirectConnectGatewayAssociationProposal'] :: CreateDirectConnectGatewayAssociationProposal -> Maybe [RouteFilterPrefix]

-- | The ID of the Direct Connect gateway.
[$sel:directConnectGatewayId:CreateDirectConnectGatewayAssociationProposal'] :: CreateDirectConnectGatewayAssociationProposal -> Text

-- | The ID of the account that owns the Direct Connect gateway.
[$sel:directConnectGatewayOwnerAccount:CreateDirectConnectGatewayAssociationProposal'] :: CreateDirectConnectGatewayAssociationProposal -> Text

-- | The ID of the virtual private gateway or transit gateway.
[$sel:gatewayId:CreateDirectConnectGatewayAssociationProposal'] :: CreateDirectConnectGatewayAssociationProposal -> Text

-- | Create a value of <a>CreateDirectConnectGatewayAssociationProposal</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:removeAllowedPrefixesToDirectConnectGateway:CreateDirectConnectGatewayAssociationProposal'</a>,
--   <a>createDirectConnectGatewayAssociationProposal_removeAllowedPrefixesToDirectConnectGateway</a>
--   - The Amazon VPC prefixes to no longer advertise to the Direct Connect
--   gateway.
--   
--   
--   <a>$sel:addAllowedPrefixesToDirectConnectGateway:CreateDirectConnectGatewayAssociationProposal'</a>,
--   <a>createDirectConnectGatewayAssociationProposal_addAllowedPrefixesToDirectConnectGateway</a>
--   - The Amazon VPC prefixes to advertise to the Direct Connect gateway.
--   
--   
--   <a>$sel:directConnectGatewayId:CreateDirectConnectGatewayAssociationProposal'</a>,
--   <a>createDirectConnectGatewayAssociationProposal_directConnectGatewayId</a>
--   - The ID of the Direct Connect gateway.
--   
--   
--   <a>$sel:directConnectGatewayOwnerAccount:CreateDirectConnectGatewayAssociationProposal'</a>,
--   <a>createDirectConnectGatewayAssociationProposal_directConnectGatewayOwnerAccount</a>
--   - The ID of the account that owns the Direct Connect gateway.
--   
--   <a>$sel:gatewayId:CreateDirectConnectGatewayAssociationProposal'</a>,
--   <a>createDirectConnectGatewayAssociationProposal_gatewayId</a> - The
--   ID of the virtual private gateway or transit gateway.
newCreateDirectConnectGatewayAssociationProposal :: Text -> Text -> Text -> CreateDirectConnectGatewayAssociationProposal

-- | The Amazon VPC prefixes to no longer advertise to the Direct Connect
--   gateway.
createDirectConnectGatewayAssociationProposal_removeAllowedPrefixesToDirectConnectGateway :: Lens' CreateDirectConnectGatewayAssociationProposal (Maybe [RouteFilterPrefix])

-- | The Amazon VPC prefixes to advertise to the Direct Connect gateway.
createDirectConnectGatewayAssociationProposal_addAllowedPrefixesToDirectConnectGateway :: Lens' CreateDirectConnectGatewayAssociationProposal (Maybe [RouteFilterPrefix])

-- | The ID of the Direct Connect gateway.
createDirectConnectGatewayAssociationProposal_directConnectGatewayId :: Lens' CreateDirectConnectGatewayAssociationProposal Text

-- | The ID of the account that owns the Direct Connect gateway.
createDirectConnectGatewayAssociationProposal_directConnectGatewayOwnerAccount :: Lens' CreateDirectConnectGatewayAssociationProposal Text

-- | The ID of the virtual private gateway or transit gateway.
createDirectConnectGatewayAssociationProposal_gatewayId :: Lens' CreateDirectConnectGatewayAssociationProposal Text

-- | <i>See:</i>
--   <a>newCreateDirectConnectGatewayAssociationProposalResponse</a> smart
--   constructor.
data CreateDirectConnectGatewayAssociationProposalResponse
CreateDirectConnectGatewayAssociationProposalResponse' :: Maybe DirectConnectGatewayAssociationProposal -> Int -> CreateDirectConnectGatewayAssociationProposalResponse

-- | Information about the Direct Connect gateway proposal.
[$sel:directConnectGatewayAssociationProposal:CreateDirectConnectGatewayAssociationProposalResponse'] :: CreateDirectConnectGatewayAssociationProposalResponse -> Maybe DirectConnectGatewayAssociationProposal

-- | The response's http status code.
[$sel:httpStatus:CreateDirectConnectGatewayAssociationProposalResponse'] :: CreateDirectConnectGatewayAssociationProposalResponse -> Int

-- | Create a value of
--   <a>CreateDirectConnectGatewayAssociationProposalResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:directConnectGatewayAssociationProposal:CreateDirectConnectGatewayAssociationProposalResponse'</a>,
--   <a>createDirectConnectGatewayAssociationProposalResponse_directConnectGatewayAssociationProposal</a>
--   - Information about the Direct Connect gateway proposal.
--   
--   
--   <a>$sel:httpStatus:CreateDirectConnectGatewayAssociationProposalResponse'</a>,
--   <a>createDirectConnectGatewayAssociationProposalResponse_httpStatus</a>
--   - The response's http status code.
newCreateDirectConnectGatewayAssociationProposalResponse :: Int -> CreateDirectConnectGatewayAssociationProposalResponse

-- | Information about the Direct Connect gateway proposal.
createDirectConnectGatewayAssociationProposalResponse_directConnectGatewayAssociationProposal :: Lens' CreateDirectConnectGatewayAssociationProposalResponse (Maybe DirectConnectGatewayAssociationProposal)

-- | The response's http status code.
createDirectConnectGatewayAssociationProposalResponse_httpStatus :: Lens' CreateDirectConnectGatewayAssociationProposalResponse Int
instance GHC.Generics.Generic Network.AWS.DirectConnect.CreateDirectConnectGatewayAssociationProposal.CreateDirectConnectGatewayAssociationProposal
instance GHC.Show.Show Network.AWS.DirectConnect.CreateDirectConnectGatewayAssociationProposal.CreateDirectConnectGatewayAssociationProposal
instance GHC.Read.Read Network.AWS.DirectConnect.CreateDirectConnectGatewayAssociationProposal.CreateDirectConnectGatewayAssociationProposal
instance GHC.Classes.Eq Network.AWS.DirectConnect.CreateDirectConnectGatewayAssociationProposal.CreateDirectConnectGatewayAssociationProposal
instance GHC.Generics.Generic Network.AWS.DirectConnect.CreateDirectConnectGatewayAssociationProposal.CreateDirectConnectGatewayAssociationProposalResponse
instance GHC.Show.Show Network.AWS.DirectConnect.CreateDirectConnectGatewayAssociationProposal.CreateDirectConnectGatewayAssociationProposalResponse
instance GHC.Read.Read Network.AWS.DirectConnect.CreateDirectConnectGatewayAssociationProposal.CreateDirectConnectGatewayAssociationProposalResponse
instance GHC.Classes.Eq Network.AWS.DirectConnect.CreateDirectConnectGatewayAssociationProposal.CreateDirectConnectGatewayAssociationProposalResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DirectConnect.CreateDirectConnectGatewayAssociationProposal.CreateDirectConnectGatewayAssociationProposal
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.CreateDirectConnectGatewayAssociationProposal.CreateDirectConnectGatewayAssociationProposalResponse
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.CreateDirectConnectGatewayAssociationProposal.CreateDirectConnectGatewayAssociationProposal
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.CreateDirectConnectGatewayAssociationProposal.CreateDirectConnectGatewayAssociationProposal
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DirectConnect.CreateDirectConnectGatewayAssociationProposal.CreateDirectConnectGatewayAssociationProposal
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.CreateDirectConnectGatewayAssociationProposal.CreateDirectConnectGatewayAssociationProposal
instance Network.AWS.Data.Path.ToPath Network.AWS.DirectConnect.CreateDirectConnectGatewayAssociationProposal.CreateDirectConnectGatewayAssociationProposal
instance Network.AWS.Data.Query.ToQuery Network.AWS.DirectConnect.CreateDirectConnectGatewayAssociationProposal.CreateDirectConnectGatewayAssociationProposal


-- | Creates an association between a Direct Connect gateway and a virtual
--   private gateway. The virtual private gateway must be attached to a VPC
--   and must not be associated with another Direct Connect gateway.
module Network.AWS.DirectConnect.CreateDirectConnectGatewayAssociation

-- | <i>See:</i> <a>newCreateDirectConnectGatewayAssociation</a> smart
--   constructor.
data CreateDirectConnectGatewayAssociation
CreateDirectConnectGatewayAssociation' :: Maybe Text -> Maybe [RouteFilterPrefix] -> Maybe Text -> Text -> CreateDirectConnectGatewayAssociation

-- | The ID of the virtual private gateway.
[$sel:virtualGatewayId:CreateDirectConnectGatewayAssociation'] :: CreateDirectConnectGatewayAssociation -> Maybe Text

-- | The Amazon VPC prefixes to advertise to the Direct Connect gateway
--   
--   This parameter is required when you create an association to a transit
--   gateway.
--   
--   For information about how to set the prefixes, see <a>Allowed
--   Prefixes</a> in the <i>Direct Connect User Guide</i>.
[$sel:addAllowedPrefixesToDirectConnectGateway:CreateDirectConnectGatewayAssociation'] :: CreateDirectConnectGatewayAssociation -> Maybe [RouteFilterPrefix]

-- | The ID of the virtual private gateway or transit gateway.
[$sel:gatewayId:CreateDirectConnectGatewayAssociation'] :: CreateDirectConnectGatewayAssociation -> Maybe Text

-- | The ID of the Direct Connect gateway.
[$sel:directConnectGatewayId:CreateDirectConnectGatewayAssociation'] :: CreateDirectConnectGatewayAssociation -> Text

-- | Create a value of <a>CreateDirectConnectGatewayAssociation</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:virtualGatewayId:CreateDirectConnectGatewayAssociation'</a>,
--   <a>createDirectConnectGatewayAssociation_virtualGatewayId</a> - The ID
--   of the virtual private gateway.
--   
--   
--   <a>$sel:addAllowedPrefixesToDirectConnectGateway:CreateDirectConnectGatewayAssociation'</a>,
--   <a>createDirectConnectGatewayAssociation_addAllowedPrefixesToDirectConnectGateway</a>
--   - The Amazon VPC prefixes to advertise to the Direct Connect gateway
--   
--   This parameter is required when you create an association to a transit
--   gateway.
--   
--   For information about how to set the prefixes, see <a>Allowed
--   Prefixes</a> in the <i>Direct Connect User Guide</i>.
--   
--   <a>$sel:gatewayId:CreateDirectConnectGatewayAssociation'</a>,
--   <a>createDirectConnectGatewayAssociation_gatewayId</a> - The ID of the
--   virtual private gateway or transit gateway.
--   
--   
--   <a>$sel:directConnectGatewayId:CreateDirectConnectGatewayAssociation'</a>,
--   <a>createDirectConnectGatewayAssociation_directConnectGatewayId</a> -
--   The ID of the Direct Connect gateway.
newCreateDirectConnectGatewayAssociation :: Text -> CreateDirectConnectGatewayAssociation

-- | The ID of the virtual private gateway.
createDirectConnectGatewayAssociation_virtualGatewayId :: Lens' CreateDirectConnectGatewayAssociation (Maybe Text)

-- | The Amazon VPC prefixes to advertise to the Direct Connect gateway
--   
--   This parameter is required when you create an association to a transit
--   gateway.
--   
--   For information about how to set the prefixes, see <a>Allowed
--   Prefixes</a> in the <i>Direct Connect User Guide</i>.
createDirectConnectGatewayAssociation_addAllowedPrefixesToDirectConnectGateway :: Lens' CreateDirectConnectGatewayAssociation (Maybe [RouteFilterPrefix])

-- | The ID of the virtual private gateway or transit gateway.
createDirectConnectGatewayAssociation_gatewayId :: Lens' CreateDirectConnectGatewayAssociation (Maybe Text)

-- | The ID of the Direct Connect gateway.
createDirectConnectGatewayAssociation_directConnectGatewayId :: Lens' CreateDirectConnectGatewayAssociation Text

-- | <i>See:</i> <a>newCreateDirectConnectGatewayAssociationResponse</a>
--   smart constructor.
data CreateDirectConnectGatewayAssociationResponse
CreateDirectConnectGatewayAssociationResponse' :: Maybe DirectConnectGatewayAssociation -> Int -> CreateDirectConnectGatewayAssociationResponse

-- | The association to be created.
[$sel:directConnectGatewayAssociation:CreateDirectConnectGatewayAssociationResponse'] :: CreateDirectConnectGatewayAssociationResponse -> Maybe DirectConnectGatewayAssociation

-- | The response's http status code.
[$sel:httpStatus:CreateDirectConnectGatewayAssociationResponse'] :: CreateDirectConnectGatewayAssociationResponse -> Int

-- | Create a value of <a>CreateDirectConnectGatewayAssociationResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:directConnectGatewayAssociation:CreateDirectConnectGatewayAssociationResponse'</a>,
--   <a>createDirectConnectGatewayAssociationResponse_directConnectGatewayAssociation</a>
--   - The association to be created.
--   
--   <a>$sel:httpStatus:CreateDirectConnectGatewayAssociationResponse'</a>,
--   <a>createDirectConnectGatewayAssociationResponse_httpStatus</a> - The
--   response's http status code.
newCreateDirectConnectGatewayAssociationResponse :: Int -> CreateDirectConnectGatewayAssociationResponse

-- | The association to be created.
createDirectConnectGatewayAssociationResponse_directConnectGatewayAssociation :: Lens' CreateDirectConnectGatewayAssociationResponse (Maybe DirectConnectGatewayAssociation)

-- | The response's http status code.
createDirectConnectGatewayAssociationResponse_httpStatus :: Lens' CreateDirectConnectGatewayAssociationResponse Int
instance GHC.Generics.Generic Network.AWS.DirectConnect.CreateDirectConnectGatewayAssociation.CreateDirectConnectGatewayAssociation
instance GHC.Show.Show Network.AWS.DirectConnect.CreateDirectConnectGatewayAssociation.CreateDirectConnectGatewayAssociation
instance GHC.Read.Read Network.AWS.DirectConnect.CreateDirectConnectGatewayAssociation.CreateDirectConnectGatewayAssociation
instance GHC.Classes.Eq Network.AWS.DirectConnect.CreateDirectConnectGatewayAssociation.CreateDirectConnectGatewayAssociation
instance GHC.Generics.Generic Network.AWS.DirectConnect.CreateDirectConnectGatewayAssociation.CreateDirectConnectGatewayAssociationResponse
instance GHC.Show.Show Network.AWS.DirectConnect.CreateDirectConnectGatewayAssociation.CreateDirectConnectGatewayAssociationResponse
instance GHC.Read.Read Network.AWS.DirectConnect.CreateDirectConnectGatewayAssociation.CreateDirectConnectGatewayAssociationResponse
instance GHC.Classes.Eq Network.AWS.DirectConnect.CreateDirectConnectGatewayAssociation.CreateDirectConnectGatewayAssociationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DirectConnect.CreateDirectConnectGatewayAssociation.CreateDirectConnectGatewayAssociation
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.CreateDirectConnectGatewayAssociation.CreateDirectConnectGatewayAssociationResponse
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.CreateDirectConnectGatewayAssociation.CreateDirectConnectGatewayAssociation
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.CreateDirectConnectGatewayAssociation.CreateDirectConnectGatewayAssociation
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DirectConnect.CreateDirectConnectGatewayAssociation.CreateDirectConnectGatewayAssociation
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.CreateDirectConnectGatewayAssociation.CreateDirectConnectGatewayAssociation
instance Network.AWS.Data.Path.ToPath Network.AWS.DirectConnect.CreateDirectConnectGatewayAssociation.CreateDirectConnectGatewayAssociation
instance Network.AWS.Data.Query.ToQuery Network.AWS.DirectConnect.CreateDirectConnectGatewayAssociation.CreateDirectConnectGatewayAssociation


-- | Creates a Direct Connect gateway, which is an intermediate object that
--   enables you to connect a set of virtual interfaces and virtual private
--   gateways. A Direct Connect gateway is global and visible in any Region
--   after it is created. The virtual interfaces and virtual private
--   gateways that are connected through a Direct Connect gateway can be in
--   different Regions. This enables you to connect to a VPC in any Region,
--   regardless of the Region in which the virtual interfaces are located,
--   and pass traffic between them.
module Network.AWS.DirectConnect.CreateDirectConnectGateway

-- | <i>See:</i> <a>newCreateDirectConnectGateway</a> smart constructor.
data CreateDirectConnectGateway
CreateDirectConnectGateway' :: Maybe Integer -> Text -> CreateDirectConnectGateway

-- | The autonomous system number (ASN) for Border Gateway Protocol (BGP)
--   to be configured on the Amazon side of the connection. The ASN must be
--   in the private range of 64,512 to 65,534 or 4,200,000,000 to
--   4,294,967,294. The default is 64512.
[$sel:amazonSideAsn:CreateDirectConnectGateway'] :: CreateDirectConnectGateway -> Maybe Integer

-- | The name of the Direct Connect gateway.
[$sel:directConnectGatewayName:CreateDirectConnectGateway'] :: CreateDirectConnectGateway -> Text

-- | Create a value of <a>CreateDirectConnectGateway</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:amazonSideAsn:CreateDirectConnectGateway'</a>,
--   <a>createDirectConnectGateway_amazonSideAsn</a> - The autonomous
--   system number (ASN) for Border Gateway Protocol (BGP) to be configured
--   on the Amazon side of the connection. The ASN must be in the private
--   range of 64,512 to 65,534 or 4,200,000,000 to 4,294,967,294. The
--   default is 64512.
--   
--   <a>$sel:directConnectGatewayName:CreateDirectConnectGateway'</a>,
--   <a>createDirectConnectGateway_directConnectGatewayName</a> - The name
--   of the Direct Connect gateway.
newCreateDirectConnectGateway :: Text -> CreateDirectConnectGateway

-- | The autonomous system number (ASN) for Border Gateway Protocol (BGP)
--   to be configured on the Amazon side of the connection. The ASN must be
--   in the private range of 64,512 to 65,534 or 4,200,000,000 to
--   4,294,967,294. The default is 64512.
createDirectConnectGateway_amazonSideAsn :: Lens' CreateDirectConnectGateway (Maybe Integer)

-- | The name of the Direct Connect gateway.
createDirectConnectGateway_directConnectGatewayName :: Lens' CreateDirectConnectGateway Text

-- | <i>See:</i> <a>newCreateDirectConnectGatewayResponse</a> smart
--   constructor.
data CreateDirectConnectGatewayResponse
CreateDirectConnectGatewayResponse' :: Maybe DirectConnectGateway -> Int -> CreateDirectConnectGatewayResponse

-- | The Direct Connect gateway.
[$sel:directConnectGateway:CreateDirectConnectGatewayResponse'] :: CreateDirectConnectGatewayResponse -> Maybe DirectConnectGateway

-- | The response's http status code.
[$sel:httpStatus:CreateDirectConnectGatewayResponse'] :: CreateDirectConnectGatewayResponse -> Int

-- | Create a value of <a>CreateDirectConnectGatewayResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:directConnectGateway:CreateDirectConnectGatewayResponse'</a>,
--   <a>createDirectConnectGatewayResponse_directConnectGateway</a> - The
--   Direct Connect gateway.
--   
--   <a>$sel:httpStatus:CreateDirectConnectGatewayResponse'</a>,
--   <a>createDirectConnectGatewayResponse_httpStatus</a> - The response's
--   http status code.
newCreateDirectConnectGatewayResponse :: Int -> CreateDirectConnectGatewayResponse

-- | The Direct Connect gateway.
createDirectConnectGatewayResponse_directConnectGateway :: Lens' CreateDirectConnectGatewayResponse (Maybe DirectConnectGateway)

-- | The response's http status code.
createDirectConnectGatewayResponse_httpStatus :: Lens' CreateDirectConnectGatewayResponse Int
instance GHC.Generics.Generic Network.AWS.DirectConnect.CreateDirectConnectGateway.CreateDirectConnectGateway
instance GHC.Show.Show Network.AWS.DirectConnect.CreateDirectConnectGateway.CreateDirectConnectGateway
instance GHC.Read.Read Network.AWS.DirectConnect.CreateDirectConnectGateway.CreateDirectConnectGateway
instance GHC.Classes.Eq Network.AWS.DirectConnect.CreateDirectConnectGateway.CreateDirectConnectGateway
instance GHC.Generics.Generic Network.AWS.DirectConnect.CreateDirectConnectGateway.CreateDirectConnectGatewayResponse
instance GHC.Show.Show Network.AWS.DirectConnect.CreateDirectConnectGateway.CreateDirectConnectGatewayResponse
instance GHC.Read.Read Network.AWS.DirectConnect.CreateDirectConnectGateway.CreateDirectConnectGatewayResponse
instance GHC.Classes.Eq Network.AWS.DirectConnect.CreateDirectConnectGateway.CreateDirectConnectGatewayResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DirectConnect.CreateDirectConnectGateway.CreateDirectConnectGateway
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.CreateDirectConnectGateway.CreateDirectConnectGatewayResponse
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.CreateDirectConnectGateway.CreateDirectConnectGateway
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.CreateDirectConnectGateway.CreateDirectConnectGateway
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DirectConnect.CreateDirectConnectGateway.CreateDirectConnectGateway
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.CreateDirectConnectGateway.CreateDirectConnectGateway
instance Network.AWS.Data.Path.ToPath Network.AWS.DirectConnect.CreateDirectConnectGateway.CreateDirectConnectGateway
instance Network.AWS.Data.Query.ToQuery Network.AWS.DirectConnect.CreateDirectConnectGateway.CreateDirectConnectGateway


-- | Creates a connection between a customer network and a specific Direct
--   Connect location.
--   
--   A connection links your internal network to an Direct Connect location
--   over a standard Ethernet fiber-optic cable. One end of the cable is
--   connected to your router, the other to an Direct Connect router.
--   
--   To find the locations for your Region, use DescribeLocations.
--   
--   You can automatically add the new connection to a link aggregation
--   group (LAG) by specifying a LAG ID in the request. This ensures that
--   the new connection is allocated on the same Direct Connect endpoint
--   that hosts the specified LAG. If there are no available ports on the
--   endpoint, the request fails and no connection is created.
module Network.AWS.DirectConnect.CreateConnection

-- | <i>See:</i> <a>newCreateConnection</a> smart constructor.
data CreateConnection
CreateConnection' :: Maybe Text -> Maybe Text -> Maybe (NonEmpty Tag) -> Maybe Bool -> Text -> Text -> Text -> CreateConnection

-- | The name of the service provider associated with the requested
--   connection.
[$sel:providerName:CreateConnection'] :: CreateConnection -> Maybe Text

-- | The ID of the LAG.
[$sel:lagId:CreateConnection'] :: CreateConnection -> Maybe Text

-- | The tags to associate with the lag.
[$sel:tags:CreateConnection'] :: CreateConnection -> Maybe (NonEmpty Tag)

-- | Indicates whether you want the connection to support MAC Security
--   (MACsec).
--   
--   MAC Security (MACsec) is only available on dedicated connections. For
--   information about MAC Security (MACsec) prerequisties, see <a>MACsec
--   prerequisties</a> in the <i>Direct Connect User Guide</i>.
[$sel:requestMACSec:CreateConnection'] :: CreateConnection -> Maybe Bool

-- | The location of the connection.
[$sel:location:CreateConnection'] :: CreateConnection -> Text

-- | The bandwidth of the connection.
[$sel:bandwidth:CreateConnection'] :: CreateConnection -> Text

-- | The name of the connection.
[$sel:connectionName:CreateConnection'] :: CreateConnection -> Text

-- | Create a value of <a>CreateConnection</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:providerName:CreateConnection'</a>,
--   <a>createConnection_providerName</a> - The name of the service
--   provider associated with the requested connection.
--   
--   <a>$sel:lagId:CreateConnection'</a>, <a>createConnection_lagId</a> -
--   The ID of the LAG.
--   
--   <a>$sel:tags:CreateConnection'</a>, <a>createConnection_tags</a> - The
--   tags to associate with the lag.
--   
--   <a>$sel:requestMACSec:CreateConnection'</a>,
--   <a>createConnection_requestMACSec</a> - Indicates whether you want the
--   connection to support MAC Security (MACsec).
--   
--   MAC Security (MACsec) is only available on dedicated connections. For
--   information about MAC Security (MACsec) prerequisties, see <a>MACsec
--   prerequisties</a> in the <i>Direct Connect User Guide</i>.
--   
--   <a>$sel:location:CreateConnection'</a>,
--   <a>createConnection_location</a> - The location of the connection.
--   
--   <a>$sel:bandwidth:CreateConnection'</a>,
--   <a>createConnection_bandwidth</a> - The bandwidth of the connection.
--   
--   <a>$sel:connectionName:CreateConnection'</a>,
--   <a>createConnection_connectionName</a> - The name of the connection.
newCreateConnection :: Text -> Text -> Text -> CreateConnection

-- | The name of the service provider associated with the requested
--   connection.
createConnection_providerName :: Lens' CreateConnection (Maybe Text)

-- | The ID of the LAG.
createConnection_lagId :: Lens' CreateConnection (Maybe Text)

-- | The tags to associate with the lag.
createConnection_tags :: Lens' CreateConnection (Maybe (NonEmpty Tag))

-- | Indicates whether you want the connection to support MAC Security
--   (MACsec).
--   
--   MAC Security (MACsec) is only available on dedicated connections. For
--   information about MAC Security (MACsec) prerequisties, see <a>MACsec
--   prerequisties</a> in the <i>Direct Connect User Guide</i>.
createConnection_requestMACSec :: Lens' CreateConnection (Maybe Bool)

-- | The location of the connection.
createConnection_location :: Lens' CreateConnection Text

-- | The bandwidth of the connection.
createConnection_bandwidth :: Lens' CreateConnection Text

-- | The name of the connection.
createConnection_connectionName :: Lens' CreateConnection Text

-- | Information about an Direct Connect connection.
--   
--   <i>See:</i> <a>newConnection</a> smart constructor.
data Connection
Connection' :: Maybe Text -> Maybe Text -> Maybe ConnectionState -> Maybe Text -> Maybe [MacSecKey] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe HasLogicalRedundancy -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (NonEmpty Tag) -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Bool -> Connection

-- | The bandwidth of the connection.
[$sel:bandwidth:Connection'] :: Connection -> Maybe Text

-- | The Direct Connect endpoint that terminates the physical connection.
[$sel:awsDeviceV2:Connection'] :: Connection -> Maybe Text

-- | The state of the connection. The following are the possible values:
--   
--   <ul>
--   <li><tt>ordering</tt>: The initial state of a hosted connection
--   provisioned on an interconnect. The connection stays in the ordering
--   state until the owner of the hosted connection confirms or declines
--   the connection order.</li>
--   <li><tt>requested</tt>: The initial state of a standard connection.
--   The connection stays in the requested state until the Letter of
--   Authorization (LOA) is sent to the customer.</li>
--   <li><tt>pending</tt>: The connection has been approved and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is up and the connection is
--   ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The connection is being deleted.</li>
--   <li><tt>deleted</tt>: The connection has been deleted.</li>
--   <li><tt>rejected</tt>: A hosted connection in the <tt>ordering</tt>
--   state enters the <tt>rejected</tt> state if it is deleted by the
--   customer.</li>
--   <li><tt>unknown</tt>: The state of the connection is not
--   available.</li>
--   </ul>
[$sel:connectionState:Connection'] :: Connection -> Maybe ConnectionState

-- | The name of the connection.
[$sel:connectionName:Connection'] :: Connection -> Maybe Text

-- | The MAC Security (MACsec) security keys associated with the
--   connection.
[$sel:macSecKeys:Connection'] :: Connection -> Maybe [MacSecKey]

-- | The name of the service provider associated with the connection.
[$sel:providerName:Connection'] :: Connection -> Maybe Text

-- | The ID of the connection.
[$sel:connectionId:Connection'] :: Connection -> Maybe Text

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
[$sel:awsLogicalDeviceId:Connection'] :: Connection -> Maybe Text

-- | Indicates whether the connection supports a secondary BGP peer in the
--   same address family (IPv4/IPv6).
[$sel:hasLogicalRedundancy:Connection'] :: Connection -> Maybe HasLogicalRedundancy

-- | The Direct Connect endpoint on which the physical connection
--   terminates.
[$sel:awsDevice:Connection'] :: Connection -> Maybe Text

-- | Indicates whether jumbo frames (9001 MTU) are supported.
[$sel:jumboFrameCapable:Connection'] :: Connection -> Maybe Bool

-- | The MAC Security (MACsec) port link status of the connection.
--   
--   The valid values are <tt>Encryption Up</tt>, which means that there is
--   an active Connection Key Name, or <tt>Encryption Down</tt>.
[$sel:portEncryptionStatus:Connection'] :: Connection -> Maybe Text

-- | The ID of the LAG.
[$sel:lagId:Connection'] :: Connection -> Maybe Text

-- | The MAC Security (MACsec) connection encryption mode.
--   
--   The valid values are <tt>no_encrypt</tt>, <tt>should_encrypt</tt>, and
--   <tt>must_encrypt</tt>.
[$sel:encryptionMode:Connection'] :: Connection -> Maybe Text

-- | The name of the Direct Connect service provider associated with the
--   connection.
[$sel:partnerName:Connection'] :: Connection -> Maybe Text

-- | The tags associated with the connection.
[$sel:tags:Connection'] :: Connection -> Maybe (NonEmpty Tag)

-- | The time of the most recent call to DescribeLoa for this connection.
[$sel:loaIssueTime:Connection'] :: Connection -> Maybe POSIX

-- | The ID of the account that owns the connection.
[$sel:ownerAccount:Connection'] :: Connection -> Maybe Text

-- | The Region where the connection is located.
[$sel:region:Connection'] :: Connection -> Maybe Text

-- | The ID of the VLAN.
[$sel:vlan:Connection'] :: Connection -> Maybe Int

-- | The location of the connection.
[$sel:location:Connection'] :: Connection -> Maybe Text

-- | Indicates whether the connection supports MAC Security (MACsec).
[$sel:macSecCapable:Connection'] :: Connection -> Maybe Bool

-- | Create a value of <a>Connection</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bandwidth:Connection'</a>, <a>connection_bandwidth</a> - The
--   bandwidth of the connection.
--   
--   <a>$sel:awsDeviceV2:Connection'</a>, <a>connection_awsDeviceV2</a> -
--   The Direct Connect endpoint that terminates the physical connection.
--   
--   <a>$sel:connectionState:Connection'</a>,
--   <a>connection_connectionState</a> - The state of the connection. The
--   following are the possible values:
--   
--   <ul>
--   <li><tt>ordering</tt>: The initial state of a hosted connection
--   provisioned on an interconnect. The connection stays in the ordering
--   state until the owner of the hosted connection confirms or declines
--   the connection order.</li>
--   <li><tt>requested</tt>: The initial state of a standard connection.
--   The connection stays in the requested state until the Letter of
--   Authorization (LOA) is sent to the customer.</li>
--   <li><tt>pending</tt>: The connection has been approved and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is up and the connection is
--   ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The connection is being deleted.</li>
--   <li><tt>deleted</tt>: The connection has been deleted.</li>
--   <li><tt>rejected</tt>: A hosted connection in the <tt>ordering</tt>
--   state enters the <tt>rejected</tt> state if it is deleted by the
--   customer.</li>
--   <li><tt>unknown</tt>: The state of the connection is not
--   available.</li>
--   </ul>
--   
--   <a>$sel:connectionName:Connection'</a>,
--   <a>connection_connectionName</a> - The name of the connection.
--   
--   <a>$sel:macSecKeys:Connection'</a>, <a>connection_macSecKeys</a> - The
--   MAC Security (MACsec) security keys associated with the connection.
--   
--   <a>$sel:providerName:Connection'</a>, <a>connection_providerName</a> -
--   The name of the service provider associated with the connection.
--   
--   <a>$sel:connectionId:Connection'</a>, <a>connection_connectionId</a> -
--   The ID of the connection.
--   
--   <a>$sel:awsLogicalDeviceId:Connection'</a>,
--   <a>connection_awsLogicalDeviceId</a> - The Direct Connect endpoint
--   that terminates the logical connection. This device might be different
--   than the device that terminates the physical connection.
--   
--   <a>$sel:hasLogicalRedundancy:Connection'</a>,
--   <a>connection_hasLogicalRedundancy</a> - Indicates whether the
--   connection supports a secondary BGP peer in the same address family
--   (IPv4/IPv6).
--   
--   <a>$sel:awsDevice:Connection'</a>, <a>connection_awsDevice</a> - The
--   Direct Connect endpoint on which the physical connection terminates.
--   
--   <a>$sel:jumboFrameCapable:Connection'</a>,
--   <a>connection_jumboFrameCapable</a> - Indicates whether jumbo frames
--   (9001 MTU) are supported.
--   
--   <a>$sel:portEncryptionStatus:Connection'</a>,
--   <a>connection_portEncryptionStatus</a> - The MAC Security (MACsec)
--   port link status of the connection.
--   
--   The valid values are <tt>Encryption Up</tt>, which means that there is
--   an active Connection Key Name, or <tt>Encryption Down</tt>.
--   
--   <a>$sel:lagId:Connection'</a>, <a>connection_lagId</a> - The ID of the
--   LAG.
--   
--   <a>$sel:encryptionMode:Connection'</a>,
--   <a>connection_encryptionMode</a> - The MAC Security (MACsec)
--   connection encryption mode.
--   
--   The valid values are <tt>no_encrypt</tt>, <tt>should_encrypt</tt>, and
--   <tt>must_encrypt</tt>.
--   
--   <a>$sel:partnerName:Connection'</a>, <a>connection_partnerName</a> -
--   The name of the Direct Connect service provider associated with the
--   connection.
--   
--   <a>$sel:tags:Connection'</a>, <a>connection_tags</a> - The tags
--   associated with the connection.
--   
--   <a>$sel:loaIssueTime:Connection'</a>, <a>connection_loaIssueTime</a> -
--   The time of the most recent call to DescribeLoa for this connection.
--   
--   <a>$sel:ownerAccount:Connection'</a>, <a>connection_ownerAccount</a> -
--   The ID of the account that owns the connection.
--   
--   <a>$sel:region:Connection'</a>, <a>connection_region</a> - The Region
--   where the connection is located.
--   
--   <a>$sel:vlan:Connection'</a>, <a>connection_vlan</a> - The ID of the
--   VLAN.
--   
--   <a>$sel:location:Connection'</a>, <a>connection_location</a> - The
--   location of the connection.
--   
--   <a>$sel:macSecCapable:Connection'</a>, <a>connection_macSecCapable</a>
--   - Indicates whether the connection supports MAC Security (MACsec).
newConnection :: Connection

-- | The bandwidth of the connection.
connection_bandwidth :: Lens' Connection (Maybe Text)

-- | The Direct Connect endpoint that terminates the physical connection.
connection_awsDeviceV2 :: Lens' Connection (Maybe Text)

-- | The state of the connection. The following are the possible values:
--   
--   <ul>
--   <li><tt>ordering</tt>: The initial state of a hosted connection
--   provisioned on an interconnect. The connection stays in the ordering
--   state until the owner of the hosted connection confirms or declines
--   the connection order.</li>
--   <li><tt>requested</tt>: The initial state of a standard connection.
--   The connection stays in the requested state until the Letter of
--   Authorization (LOA) is sent to the customer.</li>
--   <li><tt>pending</tt>: The connection has been approved and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is up and the connection is
--   ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The connection is being deleted.</li>
--   <li><tt>deleted</tt>: The connection has been deleted.</li>
--   <li><tt>rejected</tt>: A hosted connection in the <tt>ordering</tt>
--   state enters the <tt>rejected</tt> state if it is deleted by the
--   customer.</li>
--   <li><tt>unknown</tt>: The state of the connection is not
--   available.</li>
--   </ul>
connection_connectionState :: Lens' Connection (Maybe ConnectionState)

-- | The name of the connection.
connection_connectionName :: Lens' Connection (Maybe Text)

-- | The MAC Security (MACsec) security keys associated with the
--   connection.
connection_macSecKeys :: Lens' Connection (Maybe [MacSecKey])

-- | The name of the service provider associated with the connection.
connection_providerName :: Lens' Connection (Maybe Text)

-- | The ID of the connection.
connection_connectionId :: Lens' Connection (Maybe Text)

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
connection_awsLogicalDeviceId :: Lens' Connection (Maybe Text)

-- | Indicates whether the connection supports a secondary BGP peer in the
--   same address family (IPv4/IPv6).
connection_hasLogicalRedundancy :: Lens' Connection (Maybe HasLogicalRedundancy)

-- | The Direct Connect endpoint on which the physical connection
--   terminates.
connection_awsDevice :: Lens' Connection (Maybe Text)

-- | Indicates whether jumbo frames (9001 MTU) are supported.
connection_jumboFrameCapable :: Lens' Connection (Maybe Bool)

-- | The MAC Security (MACsec) port link status of the connection.
--   
--   The valid values are <tt>Encryption Up</tt>, which means that there is
--   an active Connection Key Name, or <tt>Encryption Down</tt>.
connection_portEncryptionStatus :: Lens' Connection (Maybe Text)

-- | The ID of the LAG.
connection_lagId :: Lens' Connection (Maybe Text)

-- | The MAC Security (MACsec) connection encryption mode.
--   
--   The valid values are <tt>no_encrypt</tt>, <tt>should_encrypt</tt>, and
--   <tt>must_encrypt</tt>.
connection_encryptionMode :: Lens' Connection (Maybe Text)

-- | The name of the Direct Connect service provider associated with the
--   connection.
connection_partnerName :: Lens' Connection (Maybe Text)

-- | The tags associated with the connection.
connection_tags :: Lens' Connection (Maybe (NonEmpty Tag))

-- | The time of the most recent call to DescribeLoa for this connection.
connection_loaIssueTime :: Lens' Connection (Maybe UTCTime)

-- | The ID of the account that owns the connection.
connection_ownerAccount :: Lens' Connection (Maybe Text)

-- | The Region where the connection is located.
connection_region :: Lens' Connection (Maybe Text)

-- | The ID of the VLAN.
connection_vlan :: Lens' Connection (Maybe Int)

-- | The location of the connection.
connection_location :: Lens' Connection (Maybe Text)

-- | Indicates whether the connection supports MAC Security (MACsec).
connection_macSecCapable :: Lens' Connection (Maybe Bool)
instance GHC.Generics.Generic Network.AWS.DirectConnect.CreateConnection.CreateConnection
instance GHC.Show.Show Network.AWS.DirectConnect.CreateConnection.CreateConnection
instance GHC.Read.Read Network.AWS.DirectConnect.CreateConnection.CreateConnection
instance GHC.Classes.Eq Network.AWS.DirectConnect.CreateConnection.CreateConnection
instance Network.AWS.Types.AWSRequest Network.AWS.DirectConnect.CreateConnection.CreateConnection
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.CreateConnection.CreateConnection
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.CreateConnection.CreateConnection
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DirectConnect.CreateConnection.CreateConnection
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.CreateConnection.CreateConnection
instance Network.AWS.Data.Path.ToPath Network.AWS.DirectConnect.CreateConnection.CreateConnection
instance Network.AWS.Data.Query.ToQuery Network.AWS.DirectConnect.CreateConnection.CreateConnection


-- | Creates a BGP peer on the specified virtual interface.
--   
--   You must create a BGP peer for the corresponding address family
--   (IPv4/IPv6) in order to access Amazon Web Services resources that also
--   use that address family.
--   
--   If logical redundancy is not supported by the connection,
--   interconnect, or LAG, the BGP peer cannot be in the same address
--   family as an existing BGP peer on the virtual interface.
--   
--   When creating a IPv6 BGP peer, omit the Amazon address and customer
--   address. IPv6 addresses are automatically assigned from the Amazon
--   pool of IPv6 addresses; you cannot specify custom IPv6 addresses.
--   
--   For a public virtual interface, the Autonomous System Number (ASN)
--   must be private or already on the allow list for the virtual
--   interface.
module Network.AWS.DirectConnect.CreateBGPPeer

-- | <i>See:</i> <a>newCreateBGPPeer</a> smart constructor.
data CreateBGPPeer
CreateBGPPeer' :: Maybe Text -> Maybe NewBGPPeer -> CreateBGPPeer

-- | The ID of the virtual interface.
[$sel:virtualInterfaceId:CreateBGPPeer'] :: CreateBGPPeer -> Maybe Text

-- | Information about the BGP peer.
[$sel:newBGPPeer':CreateBGPPeer'] :: CreateBGPPeer -> Maybe NewBGPPeer

-- | Create a value of <a>CreateBGPPeer</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:virtualInterfaceId:CreateBGPPeer'</a>,
--   <a>createBGPPeer_virtualInterfaceId</a> - The ID of the virtual
--   interface.
--   
--   <a>$sel:newBGPPeer':CreateBGPPeer'</a>,
--   <a>createBGPPeer_newBGPPeer</a> - Information about the BGP peer.
newCreateBGPPeer :: CreateBGPPeer

-- | The ID of the virtual interface.
createBGPPeer_virtualInterfaceId :: Lens' CreateBGPPeer (Maybe Text)

-- | Information about the BGP peer.
createBGPPeer_newBGPPeer :: Lens' CreateBGPPeer (Maybe NewBGPPeer)

-- | <i>See:</i> <a>newCreateBGPPeerResponse</a> smart constructor.
data CreateBGPPeerResponse
CreateBGPPeerResponse' :: Maybe VirtualInterface -> Int -> CreateBGPPeerResponse

-- | The virtual interface.
[$sel:virtualInterface:CreateBGPPeerResponse'] :: CreateBGPPeerResponse -> Maybe VirtualInterface

-- | The response's http status code.
[$sel:httpStatus:CreateBGPPeerResponse'] :: CreateBGPPeerResponse -> Int

-- | Create a value of <a>CreateBGPPeerResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:virtualInterface:CreateBGPPeerResponse'</a>,
--   <a>createBGPPeerResponse_virtualInterface</a> - The virtual interface.
--   
--   <a>$sel:httpStatus:CreateBGPPeerResponse'</a>,
--   <a>createBGPPeerResponse_httpStatus</a> - The response's http status
--   code.
newCreateBGPPeerResponse :: Int -> CreateBGPPeerResponse

-- | The virtual interface.
createBGPPeerResponse_virtualInterface :: Lens' CreateBGPPeerResponse (Maybe VirtualInterface)

-- | The response's http status code.
createBGPPeerResponse_httpStatus :: Lens' CreateBGPPeerResponse Int
instance GHC.Generics.Generic Network.AWS.DirectConnect.CreateBGPPeer.CreateBGPPeer
instance GHC.Show.Show Network.AWS.DirectConnect.CreateBGPPeer.CreateBGPPeer
instance GHC.Read.Read Network.AWS.DirectConnect.CreateBGPPeer.CreateBGPPeer
instance GHC.Classes.Eq Network.AWS.DirectConnect.CreateBGPPeer.CreateBGPPeer
instance GHC.Generics.Generic Network.AWS.DirectConnect.CreateBGPPeer.CreateBGPPeerResponse
instance GHC.Show.Show Network.AWS.DirectConnect.CreateBGPPeer.CreateBGPPeerResponse
instance GHC.Read.Read Network.AWS.DirectConnect.CreateBGPPeer.CreateBGPPeerResponse
instance GHC.Classes.Eq Network.AWS.DirectConnect.CreateBGPPeer.CreateBGPPeerResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DirectConnect.CreateBGPPeer.CreateBGPPeer
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.CreateBGPPeer.CreateBGPPeerResponse
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.CreateBGPPeer.CreateBGPPeer
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.CreateBGPPeer.CreateBGPPeer
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DirectConnect.CreateBGPPeer.CreateBGPPeer
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.CreateBGPPeer.CreateBGPPeer
instance Network.AWS.Data.Path.ToPath Network.AWS.DirectConnect.CreateBGPPeer.CreateBGPPeer
instance Network.AWS.Data.Query.ToQuery Network.AWS.DirectConnect.CreateBGPPeer.CreateBGPPeer


-- | Accepts ownership of a transit virtual interface created by another
--   account.
--   
--   After the owner of the transit virtual interface makes this call, the
--   specified transit virtual interface is created and made available to
--   handle traffic.
module Network.AWS.DirectConnect.ConfirmTransitVirtualInterface

-- | <i>See:</i> <a>newConfirmTransitVirtualInterface</a> smart
--   constructor.
data ConfirmTransitVirtualInterface
ConfirmTransitVirtualInterface' :: Text -> Text -> ConfirmTransitVirtualInterface

-- | The ID of the virtual interface.
[$sel:virtualInterfaceId:ConfirmTransitVirtualInterface'] :: ConfirmTransitVirtualInterface -> Text

-- | The ID of the Direct Connect gateway.
[$sel:directConnectGatewayId:ConfirmTransitVirtualInterface'] :: ConfirmTransitVirtualInterface -> Text

-- | Create a value of <a>ConfirmTransitVirtualInterface</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:virtualInterfaceId:ConfirmTransitVirtualInterface'</a>,
--   <a>confirmTransitVirtualInterface_virtualInterfaceId</a> - The ID of
--   the virtual interface.
--   
--   <a>$sel:directConnectGatewayId:ConfirmTransitVirtualInterface'</a>,
--   <a>confirmTransitVirtualInterface_directConnectGatewayId</a> - The ID
--   of the Direct Connect gateway.
newConfirmTransitVirtualInterface :: Text -> Text -> ConfirmTransitVirtualInterface

-- | The ID of the virtual interface.
confirmTransitVirtualInterface_virtualInterfaceId :: Lens' ConfirmTransitVirtualInterface Text

-- | The ID of the Direct Connect gateway.
confirmTransitVirtualInterface_directConnectGatewayId :: Lens' ConfirmTransitVirtualInterface Text

-- | <i>See:</i> <a>newConfirmTransitVirtualInterfaceResponse</a> smart
--   constructor.
data ConfirmTransitVirtualInterfaceResponse
ConfirmTransitVirtualInterfaceResponse' :: Maybe VirtualInterfaceState -> Int -> ConfirmTransitVirtualInterfaceResponse

-- | The state of the virtual interface. The following are the possible
--   values:
--   
--   <ul>
--   <li><tt>confirming</tt>: The creation of the virtual interface is
--   pending confirmation from the virtual interface owner. If the owner of
--   the virtual interface is different from the owner of the connection on
--   which it is provisioned, then the virtual interface will remain in
--   this state until it is confirmed by the virtual interface owner.</li>
--   <li><tt>verifying</tt>: This state only applies to public virtual
--   interfaces. Each public virtual interface needs validation before the
--   virtual interface can be created.</li>
--   <li><tt>pending</tt>: A virtual interface is in this state from the
--   time that it is created until the virtual interface is ready to
--   forward traffic.</li>
--   <li><tt>available</tt>: A virtual interface that is able to forward
--   traffic.</li>
--   <li><tt>down</tt>: A virtual interface that is BGP down.</li>
--   <li><tt>deleting</tt>: A virtual interface is in this state
--   immediately after calling DeleteVirtualInterface until it can no
--   longer forward traffic.</li>
--   <li><tt>deleted</tt>: A virtual interface that cannot forward
--   traffic.</li>
--   <li><tt>rejected</tt>: The virtual interface owner has declined
--   creation of the virtual interface. If a virtual interface in the
--   <tt>Confirming</tt> state is deleted by the virtual interface owner,
--   the virtual interface enters the <tt>Rejected</tt> state.</li>
--   <li><tt>unknown</tt>: The state of the virtual interface is not
--   available.</li>
--   </ul>
[$sel:virtualInterfaceState:ConfirmTransitVirtualInterfaceResponse'] :: ConfirmTransitVirtualInterfaceResponse -> Maybe VirtualInterfaceState

-- | The response's http status code.
[$sel:httpStatus:ConfirmTransitVirtualInterfaceResponse'] :: ConfirmTransitVirtualInterfaceResponse -> Int

-- | Create a value of <a>ConfirmTransitVirtualInterfaceResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:virtualInterfaceState:ConfirmTransitVirtualInterfaceResponse'</a>,
--   <a>confirmTransitVirtualInterfaceResponse_virtualInterfaceState</a> -
--   The state of the virtual interface. The following are the possible
--   values:
--   
--   <ul>
--   <li><tt>confirming</tt>: The creation of the virtual interface is
--   pending confirmation from the virtual interface owner. If the owner of
--   the virtual interface is different from the owner of the connection on
--   which it is provisioned, then the virtual interface will remain in
--   this state until it is confirmed by the virtual interface owner.</li>
--   <li><tt>verifying</tt>: This state only applies to public virtual
--   interfaces. Each public virtual interface needs validation before the
--   virtual interface can be created.</li>
--   <li><tt>pending</tt>: A virtual interface is in this state from the
--   time that it is created until the virtual interface is ready to
--   forward traffic.</li>
--   <li><tt>available</tt>: A virtual interface that is able to forward
--   traffic.</li>
--   <li><tt>down</tt>: A virtual interface that is BGP down.</li>
--   <li><tt>deleting</tt>: A virtual interface is in this state
--   immediately after calling DeleteVirtualInterface until it can no
--   longer forward traffic.</li>
--   <li><tt>deleted</tt>: A virtual interface that cannot forward
--   traffic.</li>
--   <li><tt>rejected</tt>: The virtual interface owner has declined
--   creation of the virtual interface. If a virtual interface in the
--   <tt>Confirming</tt> state is deleted by the virtual interface owner,
--   the virtual interface enters the <tt>Rejected</tt> state.</li>
--   <li><tt>unknown</tt>: The state of the virtual interface is not
--   available.</li>
--   </ul>
--   
--   <a>$sel:httpStatus:ConfirmTransitVirtualInterfaceResponse'</a>,
--   <a>confirmTransitVirtualInterfaceResponse_httpStatus</a> - The
--   response's http status code.
newConfirmTransitVirtualInterfaceResponse :: Int -> ConfirmTransitVirtualInterfaceResponse

-- | The state of the virtual interface. The following are the possible
--   values:
--   
--   <ul>
--   <li><tt>confirming</tt>: The creation of the virtual interface is
--   pending confirmation from the virtual interface owner. If the owner of
--   the virtual interface is different from the owner of the connection on
--   which it is provisioned, then the virtual interface will remain in
--   this state until it is confirmed by the virtual interface owner.</li>
--   <li><tt>verifying</tt>: This state only applies to public virtual
--   interfaces. Each public virtual interface needs validation before the
--   virtual interface can be created.</li>
--   <li><tt>pending</tt>: A virtual interface is in this state from the
--   time that it is created until the virtual interface is ready to
--   forward traffic.</li>
--   <li><tt>available</tt>: A virtual interface that is able to forward
--   traffic.</li>
--   <li><tt>down</tt>: A virtual interface that is BGP down.</li>
--   <li><tt>deleting</tt>: A virtual interface is in this state
--   immediately after calling DeleteVirtualInterface until it can no
--   longer forward traffic.</li>
--   <li><tt>deleted</tt>: A virtual interface that cannot forward
--   traffic.</li>
--   <li><tt>rejected</tt>: The virtual interface owner has declined
--   creation of the virtual interface. If a virtual interface in the
--   <tt>Confirming</tt> state is deleted by the virtual interface owner,
--   the virtual interface enters the <tt>Rejected</tt> state.</li>
--   <li><tt>unknown</tt>: The state of the virtual interface is not
--   available.</li>
--   </ul>
confirmTransitVirtualInterfaceResponse_virtualInterfaceState :: Lens' ConfirmTransitVirtualInterfaceResponse (Maybe VirtualInterfaceState)

-- | The response's http status code.
confirmTransitVirtualInterfaceResponse_httpStatus :: Lens' ConfirmTransitVirtualInterfaceResponse Int
instance GHC.Generics.Generic Network.AWS.DirectConnect.ConfirmTransitVirtualInterface.ConfirmTransitVirtualInterface
instance GHC.Show.Show Network.AWS.DirectConnect.ConfirmTransitVirtualInterface.ConfirmTransitVirtualInterface
instance GHC.Read.Read Network.AWS.DirectConnect.ConfirmTransitVirtualInterface.ConfirmTransitVirtualInterface
instance GHC.Classes.Eq Network.AWS.DirectConnect.ConfirmTransitVirtualInterface.ConfirmTransitVirtualInterface
instance GHC.Generics.Generic Network.AWS.DirectConnect.ConfirmTransitVirtualInterface.ConfirmTransitVirtualInterfaceResponse
instance GHC.Show.Show Network.AWS.DirectConnect.ConfirmTransitVirtualInterface.ConfirmTransitVirtualInterfaceResponse
instance GHC.Read.Read Network.AWS.DirectConnect.ConfirmTransitVirtualInterface.ConfirmTransitVirtualInterfaceResponse
instance GHC.Classes.Eq Network.AWS.DirectConnect.ConfirmTransitVirtualInterface.ConfirmTransitVirtualInterfaceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DirectConnect.ConfirmTransitVirtualInterface.ConfirmTransitVirtualInterface
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.ConfirmTransitVirtualInterface.ConfirmTransitVirtualInterfaceResponse
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.ConfirmTransitVirtualInterface.ConfirmTransitVirtualInterface
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.ConfirmTransitVirtualInterface.ConfirmTransitVirtualInterface
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DirectConnect.ConfirmTransitVirtualInterface.ConfirmTransitVirtualInterface
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.ConfirmTransitVirtualInterface.ConfirmTransitVirtualInterface
instance Network.AWS.Data.Path.ToPath Network.AWS.DirectConnect.ConfirmTransitVirtualInterface.ConfirmTransitVirtualInterface
instance Network.AWS.Data.Query.ToQuery Network.AWS.DirectConnect.ConfirmTransitVirtualInterface.ConfirmTransitVirtualInterface


-- | Accepts ownership of a public virtual interface created by another
--   account.
--   
--   After the virtual interface owner makes this call, the specified
--   virtual interface is created and made available to handle traffic.
module Network.AWS.DirectConnect.ConfirmPublicVirtualInterface

-- | <i>See:</i> <a>newConfirmPublicVirtualInterface</a> smart constructor.
data ConfirmPublicVirtualInterface
ConfirmPublicVirtualInterface' :: Text -> ConfirmPublicVirtualInterface

-- | The ID of the virtual interface.
[$sel:virtualInterfaceId:ConfirmPublicVirtualInterface'] :: ConfirmPublicVirtualInterface -> Text

-- | Create a value of <a>ConfirmPublicVirtualInterface</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:virtualInterfaceId:ConfirmPublicVirtualInterface'</a>,
--   <a>confirmPublicVirtualInterface_virtualInterfaceId</a> - The ID of
--   the virtual interface.
newConfirmPublicVirtualInterface :: Text -> ConfirmPublicVirtualInterface

-- | The ID of the virtual interface.
confirmPublicVirtualInterface_virtualInterfaceId :: Lens' ConfirmPublicVirtualInterface Text

-- | <i>See:</i> <a>newConfirmPublicVirtualInterfaceResponse</a> smart
--   constructor.
data ConfirmPublicVirtualInterfaceResponse
ConfirmPublicVirtualInterfaceResponse' :: Maybe VirtualInterfaceState -> Int -> ConfirmPublicVirtualInterfaceResponse

-- | The state of the virtual interface. The following are the possible
--   values:
--   
--   <ul>
--   <li><tt>confirming</tt>: The creation of the virtual interface is
--   pending confirmation from the virtual interface owner. If the owner of
--   the virtual interface is different from the owner of the connection on
--   which it is provisioned, then the virtual interface will remain in
--   this state until it is confirmed by the virtual interface owner.</li>
--   <li><tt>verifying</tt>: This state only applies to public virtual
--   interfaces. Each public virtual interface needs validation before the
--   virtual interface can be created.</li>
--   <li><tt>pending</tt>: A virtual interface is in this state from the
--   time that it is created until the virtual interface is ready to
--   forward traffic.</li>
--   <li><tt>available</tt>: A virtual interface that is able to forward
--   traffic.</li>
--   <li><tt>down</tt>: A virtual interface that is BGP down.</li>
--   <li><tt>deleting</tt>: A virtual interface is in this state
--   immediately after calling DeleteVirtualInterface until it can no
--   longer forward traffic.</li>
--   <li><tt>deleted</tt>: A virtual interface that cannot forward
--   traffic.</li>
--   <li><tt>rejected</tt>: The virtual interface owner has declined
--   creation of the virtual interface. If a virtual interface in the
--   <tt>Confirming</tt> state is deleted by the virtual interface owner,
--   the virtual interface enters the <tt>Rejected</tt> state.</li>
--   <li><tt>unknown</tt>: The state of the virtual interface is not
--   available.</li>
--   </ul>
[$sel:virtualInterfaceState:ConfirmPublicVirtualInterfaceResponse'] :: ConfirmPublicVirtualInterfaceResponse -> Maybe VirtualInterfaceState

-- | The response's http status code.
[$sel:httpStatus:ConfirmPublicVirtualInterfaceResponse'] :: ConfirmPublicVirtualInterfaceResponse -> Int

-- | Create a value of <a>ConfirmPublicVirtualInterfaceResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:virtualInterfaceState:ConfirmPublicVirtualInterfaceResponse'</a>,
--   <a>confirmPublicVirtualInterfaceResponse_virtualInterfaceState</a> -
--   The state of the virtual interface. The following are the possible
--   values:
--   
--   <ul>
--   <li><tt>confirming</tt>: The creation of the virtual interface is
--   pending confirmation from the virtual interface owner. If the owner of
--   the virtual interface is different from the owner of the connection on
--   which it is provisioned, then the virtual interface will remain in
--   this state until it is confirmed by the virtual interface owner.</li>
--   <li><tt>verifying</tt>: This state only applies to public virtual
--   interfaces. Each public virtual interface needs validation before the
--   virtual interface can be created.</li>
--   <li><tt>pending</tt>: A virtual interface is in this state from the
--   time that it is created until the virtual interface is ready to
--   forward traffic.</li>
--   <li><tt>available</tt>: A virtual interface that is able to forward
--   traffic.</li>
--   <li><tt>down</tt>: A virtual interface that is BGP down.</li>
--   <li><tt>deleting</tt>: A virtual interface is in this state
--   immediately after calling DeleteVirtualInterface until it can no
--   longer forward traffic.</li>
--   <li><tt>deleted</tt>: A virtual interface that cannot forward
--   traffic.</li>
--   <li><tt>rejected</tt>: The virtual interface owner has declined
--   creation of the virtual interface. If a virtual interface in the
--   <tt>Confirming</tt> state is deleted by the virtual interface owner,
--   the virtual interface enters the <tt>Rejected</tt> state.</li>
--   <li><tt>unknown</tt>: The state of the virtual interface is not
--   available.</li>
--   </ul>
--   
--   <a>$sel:httpStatus:ConfirmPublicVirtualInterfaceResponse'</a>,
--   <a>confirmPublicVirtualInterfaceResponse_httpStatus</a> - The
--   response's http status code.
newConfirmPublicVirtualInterfaceResponse :: Int -> ConfirmPublicVirtualInterfaceResponse

-- | The state of the virtual interface. The following are the possible
--   values:
--   
--   <ul>
--   <li><tt>confirming</tt>: The creation of the virtual interface is
--   pending confirmation from the virtual interface owner. If the owner of
--   the virtual interface is different from the owner of the connection on
--   which it is provisioned, then the virtual interface will remain in
--   this state until it is confirmed by the virtual interface owner.</li>
--   <li><tt>verifying</tt>: This state only applies to public virtual
--   interfaces. Each public virtual interface needs validation before the
--   virtual interface can be created.</li>
--   <li><tt>pending</tt>: A virtual interface is in this state from the
--   time that it is created until the virtual interface is ready to
--   forward traffic.</li>
--   <li><tt>available</tt>: A virtual interface that is able to forward
--   traffic.</li>
--   <li><tt>down</tt>: A virtual interface that is BGP down.</li>
--   <li><tt>deleting</tt>: A virtual interface is in this state
--   immediately after calling DeleteVirtualInterface until it can no
--   longer forward traffic.</li>
--   <li><tt>deleted</tt>: A virtual interface that cannot forward
--   traffic.</li>
--   <li><tt>rejected</tt>: The virtual interface owner has declined
--   creation of the virtual interface. If a virtual interface in the
--   <tt>Confirming</tt> state is deleted by the virtual interface owner,
--   the virtual interface enters the <tt>Rejected</tt> state.</li>
--   <li><tt>unknown</tt>: The state of the virtual interface is not
--   available.</li>
--   </ul>
confirmPublicVirtualInterfaceResponse_virtualInterfaceState :: Lens' ConfirmPublicVirtualInterfaceResponse (Maybe VirtualInterfaceState)

-- | The response's http status code.
confirmPublicVirtualInterfaceResponse_httpStatus :: Lens' ConfirmPublicVirtualInterfaceResponse Int
instance GHC.Generics.Generic Network.AWS.DirectConnect.ConfirmPublicVirtualInterface.ConfirmPublicVirtualInterface
instance GHC.Show.Show Network.AWS.DirectConnect.ConfirmPublicVirtualInterface.ConfirmPublicVirtualInterface
instance GHC.Read.Read Network.AWS.DirectConnect.ConfirmPublicVirtualInterface.ConfirmPublicVirtualInterface
instance GHC.Classes.Eq Network.AWS.DirectConnect.ConfirmPublicVirtualInterface.ConfirmPublicVirtualInterface
instance GHC.Generics.Generic Network.AWS.DirectConnect.ConfirmPublicVirtualInterface.ConfirmPublicVirtualInterfaceResponse
instance GHC.Show.Show Network.AWS.DirectConnect.ConfirmPublicVirtualInterface.ConfirmPublicVirtualInterfaceResponse
instance GHC.Read.Read Network.AWS.DirectConnect.ConfirmPublicVirtualInterface.ConfirmPublicVirtualInterfaceResponse
instance GHC.Classes.Eq Network.AWS.DirectConnect.ConfirmPublicVirtualInterface.ConfirmPublicVirtualInterfaceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DirectConnect.ConfirmPublicVirtualInterface.ConfirmPublicVirtualInterface
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.ConfirmPublicVirtualInterface.ConfirmPublicVirtualInterfaceResponse
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.ConfirmPublicVirtualInterface.ConfirmPublicVirtualInterface
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.ConfirmPublicVirtualInterface.ConfirmPublicVirtualInterface
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DirectConnect.ConfirmPublicVirtualInterface.ConfirmPublicVirtualInterface
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.ConfirmPublicVirtualInterface.ConfirmPublicVirtualInterface
instance Network.AWS.Data.Path.ToPath Network.AWS.DirectConnect.ConfirmPublicVirtualInterface.ConfirmPublicVirtualInterface
instance Network.AWS.Data.Query.ToQuery Network.AWS.DirectConnect.ConfirmPublicVirtualInterface.ConfirmPublicVirtualInterface


-- | Accepts ownership of a private virtual interface created by another
--   account.
--   
--   After the virtual interface owner makes this call, the virtual
--   interface is created and attached to the specified virtual private
--   gateway or Direct Connect gateway, and is made available to handle
--   traffic.
module Network.AWS.DirectConnect.ConfirmPrivateVirtualInterface

-- | <i>See:</i> <a>newConfirmPrivateVirtualInterface</a> smart
--   constructor.
data ConfirmPrivateVirtualInterface
ConfirmPrivateVirtualInterface' :: Maybe Text -> Maybe Text -> Text -> ConfirmPrivateVirtualInterface

-- | The ID of the virtual private gateway.
[$sel:virtualGatewayId:ConfirmPrivateVirtualInterface'] :: ConfirmPrivateVirtualInterface -> Maybe Text

-- | The ID of the Direct Connect gateway.
[$sel:directConnectGatewayId:ConfirmPrivateVirtualInterface'] :: ConfirmPrivateVirtualInterface -> Maybe Text

-- | The ID of the virtual interface.
[$sel:virtualInterfaceId:ConfirmPrivateVirtualInterface'] :: ConfirmPrivateVirtualInterface -> Text

-- | Create a value of <a>ConfirmPrivateVirtualInterface</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:virtualGatewayId:ConfirmPrivateVirtualInterface'</a>,
--   <a>confirmPrivateVirtualInterface_virtualGatewayId</a> - The ID of the
--   virtual private gateway.
--   
--   <a>$sel:directConnectGatewayId:ConfirmPrivateVirtualInterface'</a>,
--   <a>confirmPrivateVirtualInterface_directConnectGatewayId</a> - The ID
--   of the Direct Connect gateway.
--   
--   <a>$sel:virtualInterfaceId:ConfirmPrivateVirtualInterface'</a>,
--   <a>confirmPrivateVirtualInterface_virtualInterfaceId</a> - The ID of
--   the virtual interface.
newConfirmPrivateVirtualInterface :: Text -> ConfirmPrivateVirtualInterface

-- | The ID of the virtual private gateway.
confirmPrivateVirtualInterface_virtualGatewayId :: Lens' ConfirmPrivateVirtualInterface (Maybe Text)

-- | The ID of the Direct Connect gateway.
confirmPrivateVirtualInterface_directConnectGatewayId :: Lens' ConfirmPrivateVirtualInterface (Maybe Text)

-- | The ID of the virtual interface.
confirmPrivateVirtualInterface_virtualInterfaceId :: Lens' ConfirmPrivateVirtualInterface Text

-- | <i>See:</i> <a>newConfirmPrivateVirtualInterfaceResponse</a> smart
--   constructor.
data ConfirmPrivateVirtualInterfaceResponse
ConfirmPrivateVirtualInterfaceResponse' :: Maybe VirtualInterfaceState -> Int -> ConfirmPrivateVirtualInterfaceResponse

-- | The state of the virtual interface. The following are the possible
--   values:
--   
--   <ul>
--   <li><tt>confirming</tt>: The creation of the virtual interface is
--   pending confirmation from the virtual interface owner. If the owner of
--   the virtual interface is different from the owner of the connection on
--   which it is provisioned, then the virtual interface will remain in
--   this state until it is confirmed by the virtual interface owner.</li>
--   <li><tt>verifying</tt>: This state only applies to public virtual
--   interfaces. Each public virtual interface needs validation before the
--   virtual interface can be created.</li>
--   <li><tt>pending</tt>: A virtual interface is in this state from the
--   time that it is created until the virtual interface is ready to
--   forward traffic.</li>
--   <li><tt>available</tt>: A virtual interface that is able to forward
--   traffic.</li>
--   <li><tt>down</tt>: A virtual interface that is BGP down.</li>
--   <li><tt>deleting</tt>: A virtual interface is in this state
--   immediately after calling DeleteVirtualInterface until it can no
--   longer forward traffic.</li>
--   <li><tt>deleted</tt>: A virtual interface that cannot forward
--   traffic.</li>
--   <li><tt>rejected</tt>: The virtual interface owner has declined
--   creation of the virtual interface. If a virtual interface in the
--   <tt>Confirming</tt> state is deleted by the virtual interface owner,
--   the virtual interface enters the <tt>Rejected</tt> state.</li>
--   <li><tt>unknown</tt>: The state of the virtual interface is not
--   available.</li>
--   </ul>
[$sel:virtualInterfaceState:ConfirmPrivateVirtualInterfaceResponse'] :: ConfirmPrivateVirtualInterfaceResponse -> Maybe VirtualInterfaceState

-- | The response's http status code.
[$sel:httpStatus:ConfirmPrivateVirtualInterfaceResponse'] :: ConfirmPrivateVirtualInterfaceResponse -> Int

-- | Create a value of <a>ConfirmPrivateVirtualInterfaceResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:virtualInterfaceState:ConfirmPrivateVirtualInterfaceResponse'</a>,
--   <a>confirmPrivateVirtualInterfaceResponse_virtualInterfaceState</a> -
--   The state of the virtual interface. The following are the possible
--   values:
--   
--   <ul>
--   <li><tt>confirming</tt>: The creation of the virtual interface is
--   pending confirmation from the virtual interface owner. If the owner of
--   the virtual interface is different from the owner of the connection on
--   which it is provisioned, then the virtual interface will remain in
--   this state until it is confirmed by the virtual interface owner.</li>
--   <li><tt>verifying</tt>: This state only applies to public virtual
--   interfaces. Each public virtual interface needs validation before the
--   virtual interface can be created.</li>
--   <li><tt>pending</tt>: A virtual interface is in this state from the
--   time that it is created until the virtual interface is ready to
--   forward traffic.</li>
--   <li><tt>available</tt>: A virtual interface that is able to forward
--   traffic.</li>
--   <li><tt>down</tt>: A virtual interface that is BGP down.</li>
--   <li><tt>deleting</tt>: A virtual interface is in this state
--   immediately after calling DeleteVirtualInterface until it can no
--   longer forward traffic.</li>
--   <li><tt>deleted</tt>: A virtual interface that cannot forward
--   traffic.</li>
--   <li><tt>rejected</tt>: The virtual interface owner has declined
--   creation of the virtual interface. If a virtual interface in the
--   <tt>Confirming</tt> state is deleted by the virtual interface owner,
--   the virtual interface enters the <tt>Rejected</tt> state.</li>
--   <li><tt>unknown</tt>: The state of the virtual interface is not
--   available.</li>
--   </ul>
--   
--   <a>$sel:httpStatus:ConfirmPrivateVirtualInterfaceResponse'</a>,
--   <a>confirmPrivateVirtualInterfaceResponse_httpStatus</a> - The
--   response's http status code.
newConfirmPrivateVirtualInterfaceResponse :: Int -> ConfirmPrivateVirtualInterfaceResponse

-- | The state of the virtual interface. The following are the possible
--   values:
--   
--   <ul>
--   <li><tt>confirming</tt>: The creation of the virtual interface is
--   pending confirmation from the virtual interface owner. If the owner of
--   the virtual interface is different from the owner of the connection on
--   which it is provisioned, then the virtual interface will remain in
--   this state until it is confirmed by the virtual interface owner.</li>
--   <li><tt>verifying</tt>: This state only applies to public virtual
--   interfaces. Each public virtual interface needs validation before the
--   virtual interface can be created.</li>
--   <li><tt>pending</tt>: A virtual interface is in this state from the
--   time that it is created until the virtual interface is ready to
--   forward traffic.</li>
--   <li><tt>available</tt>: A virtual interface that is able to forward
--   traffic.</li>
--   <li><tt>down</tt>: A virtual interface that is BGP down.</li>
--   <li><tt>deleting</tt>: A virtual interface is in this state
--   immediately after calling DeleteVirtualInterface until it can no
--   longer forward traffic.</li>
--   <li><tt>deleted</tt>: A virtual interface that cannot forward
--   traffic.</li>
--   <li><tt>rejected</tt>: The virtual interface owner has declined
--   creation of the virtual interface. If a virtual interface in the
--   <tt>Confirming</tt> state is deleted by the virtual interface owner,
--   the virtual interface enters the <tt>Rejected</tt> state.</li>
--   <li><tt>unknown</tt>: The state of the virtual interface is not
--   available.</li>
--   </ul>
confirmPrivateVirtualInterfaceResponse_virtualInterfaceState :: Lens' ConfirmPrivateVirtualInterfaceResponse (Maybe VirtualInterfaceState)

-- | The response's http status code.
confirmPrivateVirtualInterfaceResponse_httpStatus :: Lens' ConfirmPrivateVirtualInterfaceResponse Int
instance GHC.Generics.Generic Network.AWS.DirectConnect.ConfirmPrivateVirtualInterface.ConfirmPrivateVirtualInterface
instance GHC.Show.Show Network.AWS.DirectConnect.ConfirmPrivateVirtualInterface.ConfirmPrivateVirtualInterface
instance GHC.Read.Read Network.AWS.DirectConnect.ConfirmPrivateVirtualInterface.ConfirmPrivateVirtualInterface
instance GHC.Classes.Eq Network.AWS.DirectConnect.ConfirmPrivateVirtualInterface.ConfirmPrivateVirtualInterface
instance GHC.Generics.Generic Network.AWS.DirectConnect.ConfirmPrivateVirtualInterface.ConfirmPrivateVirtualInterfaceResponse
instance GHC.Show.Show Network.AWS.DirectConnect.ConfirmPrivateVirtualInterface.ConfirmPrivateVirtualInterfaceResponse
instance GHC.Read.Read Network.AWS.DirectConnect.ConfirmPrivateVirtualInterface.ConfirmPrivateVirtualInterfaceResponse
instance GHC.Classes.Eq Network.AWS.DirectConnect.ConfirmPrivateVirtualInterface.ConfirmPrivateVirtualInterfaceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DirectConnect.ConfirmPrivateVirtualInterface.ConfirmPrivateVirtualInterface
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.ConfirmPrivateVirtualInterface.ConfirmPrivateVirtualInterfaceResponse
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.ConfirmPrivateVirtualInterface.ConfirmPrivateVirtualInterface
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.ConfirmPrivateVirtualInterface.ConfirmPrivateVirtualInterface
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DirectConnect.ConfirmPrivateVirtualInterface.ConfirmPrivateVirtualInterface
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.ConfirmPrivateVirtualInterface.ConfirmPrivateVirtualInterface
instance Network.AWS.Data.Path.ToPath Network.AWS.DirectConnect.ConfirmPrivateVirtualInterface.ConfirmPrivateVirtualInterface
instance Network.AWS.Data.Query.ToQuery Network.AWS.DirectConnect.ConfirmPrivateVirtualInterface.ConfirmPrivateVirtualInterface


-- | Confirms the creation of the specified hosted connection on an
--   interconnect.
--   
--   Upon creation, the hosted connection is initially in the
--   <tt>Ordering</tt> state, and remains in this state until the owner
--   confirms creation of the hosted connection.
module Network.AWS.DirectConnect.ConfirmConnection

-- | <i>See:</i> <a>newConfirmConnection</a> smart constructor.
data ConfirmConnection
ConfirmConnection' :: Text -> ConfirmConnection

-- | The ID of the hosted connection.
[$sel:connectionId:ConfirmConnection'] :: ConfirmConnection -> Text

-- | Create a value of <a>ConfirmConnection</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connectionId:ConfirmConnection'</a>,
--   <a>confirmConnection_connectionId</a> - The ID of the hosted
--   connection.
newConfirmConnection :: Text -> ConfirmConnection

-- | The ID of the hosted connection.
confirmConnection_connectionId :: Lens' ConfirmConnection Text

-- | <i>See:</i> <a>newConfirmConnectionResponse</a> smart constructor.
data ConfirmConnectionResponse
ConfirmConnectionResponse' :: Maybe ConnectionState -> Int -> ConfirmConnectionResponse

-- | The state of the connection. The following are the possible values:
--   
--   <ul>
--   <li><tt>ordering</tt>: The initial state of a hosted connection
--   provisioned on an interconnect. The connection stays in the ordering
--   state until the owner of the hosted connection confirms or declines
--   the connection order.</li>
--   <li><tt>requested</tt>: The initial state of a standard connection.
--   The connection stays in the requested state until the Letter of
--   Authorization (LOA) is sent to the customer.</li>
--   <li><tt>pending</tt>: The connection has been approved and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is up and the connection is
--   ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The connection is being deleted.</li>
--   <li><tt>deleted</tt>: The connection has been deleted.</li>
--   <li><tt>rejected</tt>: A hosted connection in the <tt>ordering</tt>
--   state enters the <tt>rejected</tt> state if it is deleted by the
--   customer.</li>
--   <li><tt>unknown</tt>: The state of the connection is not
--   available.</li>
--   </ul>
[$sel:connectionState:ConfirmConnectionResponse'] :: ConfirmConnectionResponse -> Maybe ConnectionState

-- | The response's http status code.
[$sel:httpStatus:ConfirmConnectionResponse'] :: ConfirmConnectionResponse -> Int

-- | Create a value of <a>ConfirmConnectionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connectionState:ConfirmConnectionResponse'</a>,
--   <a>confirmConnectionResponse_connectionState</a> - The state of the
--   connection. The following are the possible values:
--   
--   <ul>
--   <li><tt>ordering</tt>: The initial state of a hosted connection
--   provisioned on an interconnect. The connection stays in the ordering
--   state until the owner of the hosted connection confirms or declines
--   the connection order.</li>
--   <li><tt>requested</tt>: The initial state of a standard connection.
--   The connection stays in the requested state until the Letter of
--   Authorization (LOA) is sent to the customer.</li>
--   <li><tt>pending</tt>: The connection has been approved and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is up and the connection is
--   ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The connection is being deleted.</li>
--   <li><tt>deleted</tt>: The connection has been deleted.</li>
--   <li><tt>rejected</tt>: A hosted connection in the <tt>ordering</tt>
--   state enters the <tt>rejected</tt> state if it is deleted by the
--   customer.</li>
--   <li><tt>unknown</tt>: The state of the connection is not
--   available.</li>
--   </ul>
--   
--   <a>$sel:httpStatus:ConfirmConnectionResponse'</a>,
--   <a>confirmConnectionResponse_httpStatus</a> - The response's http
--   status code.
newConfirmConnectionResponse :: Int -> ConfirmConnectionResponse

-- | The state of the connection. The following are the possible values:
--   
--   <ul>
--   <li><tt>ordering</tt>: The initial state of a hosted connection
--   provisioned on an interconnect. The connection stays in the ordering
--   state until the owner of the hosted connection confirms or declines
--   the connection order.</li>
--   <li><tt>requested</tt>: The initial state of a standard connection.
--   The connection stays in the requested state until the Letter of
--   Authorization (LOA) is sent to the customer.</li>
--   <li><tt>pending</tt>: The connection has been approved and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is up and the connection is
--   ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The connection is being deleted.</li>
--   <li><tt>deleted</tt>: The connection has been deleted.</li>
--   <li><tt>rejected</tt>: A hosted connection in the <tt>ordering</tt>
--   state enters the <tt>rejected</tt> state if it is deleted by the
--   customer.</li>
--   <li><tt>unknown</tt>: The state of the connection is not
--   available.</li>
--   </ul>
confirmConnectionResponse_connectionState :: Lens' ConfirmConnectionResponse (Maybe ConnectionState)

-- | The response's http status code.
confirmConnectionResponse_httpStatus :: Lens' ConfirmConnectionResponse Int
instance GHC.Generics.Generic Network.AWS.DirectConnect.ConfirmConnection.ConfirmConnection
instance GHC.Show.Show Network.AWS.DirectConnect.ConfirmConnection.ConfirmConnection
instance GHC.Read.Read Network.AWS.DirectConnect.ConfirmConnection.ConfirmConnection
instance GHC.Classes.Eq Network.AWS.DirectConnect.ConfirmConnection.ConfirmConnection
instance GHC.Generics.Generic Network.AWS.DirectConnect.ConfirmConnection.ConfirmConnectionResponse
instance GHC.Show.Show Network.AWS.DirectConnect.ConfirmConnection.ConfirmConnectionResponse
instance GHC.Read.Read Network.AWS.DirectConnect.ConfirmConnection.ConfirmConnectionResponse
instance GHC.Classes.Eq Network.AWS.DirectConnect.ConfirmConnection.ConfirmConnectionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DirectConnect.ConfirmConnection.ConfirmConnection
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.ConfirmConnection.ConfirmConnectionResponse
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.ConfirmConnection.ConfirmConnection
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.ConfirmConnection.ConfirmConnection
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DirectConnect.ConfirmConnection.ConfirmConnection
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.ConfirmConnection.ConfirmConnection
instance Network.AWS.Data.Path.ToPath Network.AWS.DirectConnect.ConfirmConnection.ConfirmConnection
instance Network.AWS.Data.Query.ToQuery Network.AWS.DirectConnect.ConfirmConnection.ConfirmConnection


-- | Associates a virtual interface with a specified link aggregation group
--   (LAG) or connection. Connectivity to Amazon Web Services is
--   temporarily interrupted as the virtual interface is being migrated. If
--   the target connection or LAG has an associated virtual interface with
--   a conflicting VLAN number or a conflicting IP address, the operation
--   fails.
--   
--   Virtual interfaces associated with a hosted connection cannot be
--   associated with a LAG; hosted connections must be migrated along with
--   their virtual interfaces using AssociateHostedConnection.
--   
--   To reassociate a virtual interface to a new connection or LAG, the
--   requester must own either the virtual interface itself or the
--   connection to which the virtual interface is currently associated.
--   Additionally, the requester must own the connection or LAG for the
--   association.
module Network.AWS.DirectConnect.AssociateVirtualInterface

-- | <i>See:</i> <a>newAssociateVirtualInterface</a> smart constructor.
data AssociateVirtualInterface
AssociateVirtualInterface' :: Text -> Text -> AssociateVirtualInterface

-- | The ID of the virtual interface.
[$sel:virtualInterfaceId:AssociateVirtualInterface'] :: AssociateVirtualInterface -> Text

-- | The ID of the LAG or connection.
[$sel:connectionId:AssociateVirtualInterface'] :: AssociateVirtualInterface -> Text

-- | Create a value of <a>AssociateVirtualInterface</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:virtualInterfaceId:AssociateVirtualInterface'</a>,
--   <a>associateVirtualInterface_virtualInterfaceId</a> - The ID of the
--   virtual interface.
--   
--   <a>$sel:connectionId:AssociateVirtualInterface'</a>,
--   <a>associateVirtualInterface_connectionId</a> - The ID of the LAG or
--   connection.
newAssociateVirtualInterface :: Text -> Text -> AssociateVirtualInterface

-- | The ID of the virtual interface.
associateVirtualInterface_virtualInterfaceId :: Lens' AssociateVirtualInterface Text

-- | The ID of the LAG or connection.
associateVirtualInterface_connectionId :: Lens' AssociateVirtualInterface Text

-- | Information about a virtual interface.
--   
--   <i>See:</i> <a>newVirtualInterface</a> smart constructor.
data VirtualInterface
VirtualInterface' :: Maybe Text -> Maybe [BGPPeer] -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe [RouteFilterPrefix] -> Maybe Int -> Maybe Text -> Maybe Integer -> Maybe Text -> Maybe (NonEmpty Tag) -> Maybe Text -> Maybe Text -> Maybe VirtualInterfaceState -> Maybe Text -> Maybe AddressFamily -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> VirtualInterface

-- | The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
[$sel:authKey:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The BGP peers configured on this virtual interface.
[$sel:bgpPeers:VirtualInterface'] :: VirtualInterface -> Maybe [BGPPeer]

-- | The ID of the virtual private gateway. Applies only to private virtual
--   interfaces.
[$sel:virtualGatewayId:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
--   
--   The valid values are 1-2147483647.
[$sel:asn:VirtualInterface'] :: VirtualInterface -> Maybe Int

-- | The Direct Connect endpoint that terminates the physical connection.
[$sel:awsDeviceV2:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The ID of the connection.
[$sel:connectionId:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
[$sel:awsLogicalDeviceId:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The customer router configuration.
[$sel:customerRouterConfig:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | Indicates whether jumbo frames (9001 MTU) are supported.
[$sel:jumboFrameCapable:VirtualInterface'] :: VirtualInterface -> Maybe Bool

-- | The routes to be advertised to the Amazon Web Services network in this
--   Region. Applies to public virtual interfaces.
[$sel:routeFilterPrefixes:VirtualInterface'] :: VirtualInterface -> Maybe [RouteFilterPrefix]

-- | The maximum transmission unit (MTU), in bytes. The supported values
--   are 1500 and 9001. The default value is 1500.
[$sel:mtu:VirtualInterface'] :: VirtualInterface -> Maybe Int

-- | The type of virtual interface. The possible values are
--   <tt>private</tt> and <tt>public</tt>.
[$sel:virtualInterfaceType:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The autonomous system number (ASN) for the Amazon side of the
--   connection.
[$sel:amazonSideAsn:VirtualInterface'] :: VirtualInterface -> Maybe Integer

-- | The ID of the virtual interface.
[$sel:virtualInterfaceId:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The tags associated with the virtual interface.
[$sel:tags:VirtualInterface'] :: VirtualInterface -> Maybe (NonEmpty Tag)

-- | The ID of the Direct Connect gateway.
[$sel:directConnectGatewayId:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The name of the virtual interface assigned by the customer network.
--   The name has a maximum of 100 characters. The following are valid
--   characters: a-z, 0-9 and a hyphen (-).
[$sel:virtualInterfaceName:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The state of the virtual interface. The following are the possible
--   values:
--   
--   <ul>
--   <li><tt>confirming</tt>: The creation of the virtual interface is
--   pending confirmation from the virtual interface owner. If the owner of
--   the virtual interface is different from the owner of the connection on
--   which it is provisioned, then the virtual interface will remain in
--   this state until it is confirmed by the virtual interface owner.</li>
--   <li><tt>verifying</tt>: This state only applies to public virtual
--   interfaces. Each public virtual interface needs validation before the
--   virtual interface can be created.</li>
--   <li><tt>pending</tt>: A virtual interface is in this state from the
--   time that it is created until the virtual interface is ready to
--   forward traffic.</li>
--   <li><tt>available</tt>: A virtual interface that is able to forward
--   traffic.</li>
--   <li><tt>down</tt>: A virtual interface that is BGP down.</li>
--   <li><tt>deleting</tt>: A virtual interface is in this state
--   immediately after calling DeleteVirtualInterface until it can no
--   longer forward traffic.</li>
--   <li><tt>deleted</tt>: A virtual interface that cannot forward
--   traffic.</li>
--   <li><tt>rejected</tt>: The virtual interface owner has declined
--   creation of the virtual interface. If a virtual interface in the
--   <tt>Confirming</tt> state is deleted by the virtual interface owner,
--   the virtual interface enters the <tt>Rejected</tt> state.</li>
--   <li><tt>unknown</tt>: The state of the virtual interface is not
--   available.</li>
--   </ul>
[$sel:virtualInterfaceState:VirtualInterface'] :: VirtualInterface -> Maybe VirtualInterfaceState

-- | The IP address assigned to the Amazon interface.
[$sel:amazonAddress:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The address family for the BGP peer.
[$sel:addressFamily:VirtualInterface'] :: VirtualInterface -> Maybe AddressFamily

-- | The ID of the account that owns the virtual interface.
[$sel:ownerAccount:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The Region where the virtual interface is located.
[$sel:region:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The ID of the VLAN.
[$sel:vlan:VirtualInterface'] :: VirtualInterface -> Maybe Int

-- | The location of the connection.
[$sel:location:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The IP address assigned to the customer interface.
[$sel:customerAddress:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | Create a value of <a>VirtualInterface</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authKey:VirtualInterface'</a>, <a>virtualInterface_authKey</a>
--   - The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
--   
--   <a>$sel:bgpPeers:VirtualInterface'</a>,
--   <a>virtualInterface_bgpPeers</a> - The BGP peers configured on this
--   virtual interface.
--   
--   <a>$sel:virtualGatewayId:VirtualInterface'</a>,
--   <a>virtualInterface_virtualGatewayId</a> - The ID of the virtual
--   private gateway. Applies only to private virtual interfaces.
--   
--   <a>$sel:asn:VirtualInterface'</a>, <a>virtualInterface_asn</a> - The
--   autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
--   
--   The valid values are 1-2147483647.
--   
--   <a>$sel:awsDeviceV2:VirtualInterface'</a>,
--   <a>virtualInterface_awsDeviceV2</a> - The Direct Connect endpoint that
--   terminates the physical connection.
--   
--   <a>$sel:connectionId:VirtualInterface'</a>,
--   <a>virtualInterface_connectionId</a> - The ID of the connection.
--   
--   <a>$sel:awsLogicalDeviceId:VirtualInterface'</a>,
--   <a>virtualInterface_awsLogicalDeviceId</a> - The Direct Connect
--   endpoint that terminates the logical connection. This device might be
--   different than the device that terminates the physical connection.
--   
--   <a>$sel:customerRouterConfig:VirtualInterface'</a>,
--   <a>virtualInterface_customerRouterConfig</a> - The customer router
--   configuration.
--   
--   <a>$sel:jumboFrameCapable:VirtualInterface'</a>,
--   <a>virtualInterface_jumboFrameCapable</a> - Indicates whether jumbo
--   frames (9001 MTU) are supported.
--   
--   <a>$sel:routeFilterPrefixes:VirtualInterface'</a>,
--   <a>virtualInterface_routeFilterPrefixes</a> - The routes to be
--   advertised to the Amazon Web Services network in this Region. Applies
--   to public virtual interfaces.
--   
--   <a>$sel:mtu:VirtualInterface'</a>, <a>virtualInterface_mtu</a> - The
--   maximum transmission unit (MTU), in bytes. The supported values are
--   1500 and 9001. The default value is 1500.
--   
--   <a>$sel:virtualInterfaceType:VirtualInterface'</a>,
--   <a>virtualInterface_virtualInterfaceType</a> - The type of virtual
--   interface. The possible values are <tt>private</tt> and
--   <tt>public</tt>.
--   
--   <a>$sel:amazonSideAsn:VirtualInterface'</a>,
--   <a>virtualInterface_amazonSideAsn</a> - The autonomous system number
--   (ASN) for the Amazon side of the connection.
--   
--   <a>$sel:virtualInterfaceId:VirtualInterface'</a>,
--   <a>virtualInterface_virtualInterfaceId</a> - The ID of the virtual
--   interface.
--   
--   <a>$sel:tags:VirtualInterface'</a>, <a>virtualInterface_tags</a> - The
--   tags associated with the virtual interface.
--   
--   <a>$sel:directConnectGatewayId:VirtualInterface'</a>,
--   <a>virtualInterface_directConnectGatewayId</a> - The ID of the Direct
--   Connect gateway.
--   
--   <a>$sel:virtualInterfaceName:VirtualInterface'</a>,
--   <a>virtualInterface_virtualInterfaceName</a> - The name of the virtual
--   interface assigned by the customer network. The name has a maximum of
--   100 characters. The following are valid characters: a-z, 0-9 and a
--   hyphen (-).
--   
--   <a>$sel:virtualInterfaceState:VirtualInterface'</a>,
--   <a>virtualInterface_virtualInterfaceState</a> - The state of the
--   virtual interface. The following are the possible values:
--   
--   <ul>
--   <li><tt>confirming</tt>: The creation of the virtual interface is
--   pending confirmation from the virtual interface owner. If the owner of
--   the virtual interface is different from the owner of the connection on
--   which it is provisioned, then the virtual interface will remain in
--   this state until it is confirmed by the virtual interface owner.</li>
--   <li><tt>verifying</tt>: This state only applies to public virtual
--   interfaces. Each public virtual interface needs validation before the
--   virtual interface can be created.</li>
--   <li><tt>pending</tt>: A virtual interface is in this state from the
--   time that it is created until the virtual interface is ready to
--   forward traffic.</li>
--   <li><tt>available</tt>: A virtual interface that is able to forward
--   traffic.</li>
--   <li><tt>down</tt>: A virtual interface that is BGP down.</li>
--   <li><tt>deleting</tt>: A virtual interface is in this state
--   immediately after calling DeleteVirtualInterface until it can no
--   longer forward traffic.</li>
--   <li><tt>deleted</tt>: A virtual interface that cannot forward
--   traffic.</li>
--   <li><tt>rejected</tt>: The virtual interface owner has declined
--   creation of the virtual interface. If a virtual interface in the
--   <tt>Confirming</tt> state is deleted by the virtual interface owner,
--   the virtual interface enters the <tt>Rejected</tt> state.</li>
--   <li><tt>unknown</tt>: The state of the virtual interface is not
--   available.</li>
--   </ul>
--   
--   <a>$sel:amazonAddress:VirtualInterface'</a>,
--   <a>virtualInterface_amazonAddress</a> - The IP address assigned to the
--   Amazon interface.
--   
--   <a>$sel:addressFamily:VirtualInterface'</a>,
--   <a>virtualInterface_addressFamily</a> - The address family for the BGP
--   peer.
--   
--   <a>$sel:ownerAccount:VirtualInterface'</a>,
--   <a>virtualInterface_ownerAccount</a> - The ID of the account that owns
--   the virtual interface.
--   
--   <a>$sel:region:VirtualInterface'</a>, <a>virtualInterface_region</a> -
--   The Region where the virtual interface is located.
--   
--   <a>$sel:vlan:VirtualInterface'</a>, <a>virtualInterface_vlan</a> - The
--   ID of the VLAN.
--   
--   <a>$sel:location:VirtualInterface'</a>,
--   <a>virtualInterface_location</a> - The location of the connection.
--   
--   <a>$sel:customerAddress:VirtualInterface'</a>,
--   <a>virtualInterface_customerAddress</a> - The IP address assigned to
--   the customer interface.
newVirtualInterface :: VirtualInterface

-- | The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
virtualInterface_authKey :: Lens' VirtualInterface (Maybe Text)

-- | The BGP peers configured on this virtual interface.
virtualInterface_bgpPeers :: Lens' VirtualInterface (Maybe [BGPPeer])

-- | The ID of the virtual private gateway. Applies only to private virtual
--   interfaces.
virtualInterface_virtualGatewayId :: Lens' VirtualInterface (Maybe Text)

-- | The autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
--   
--   The valid values are 1-2147483647.
virtualInterface_asn :: Lens' VirtualInterface (Maybe Int)

-- | The Direct Connect endpoint that terminates the physical connection.
virtualInterface_awsDeviceV2 :: Lens' VirtualInterface (Maybe Text)

-- | The ID of the connection.
virtualInterface_connectionId :: Lens' VirtualInterface (Maybe Text)

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
virtualInterface_awsLogicalDeviceId :: Lens' VirtualInterface (Maybe Text)

-- | The customer router configuration.
virtualInterface_customerRouterConfig :: Lens' VirtualInterface (Maybe Text)

-- | Indicates whether jumbo frames (9001 MTU) are supported.
virtualInterface_jumboFrameCapable :: Lens' VirtualInterface (Maybe Bool)

-- | The routes to be advertised to the Amazon Web Services network in this
--   Region. Applies to public virtual interfaces.
virtualInterface_routeFilterPrefixes :: Lens' VirtualInterface (Maybe [RouteFilterPrefix])

-- | The maximum transmission unit (MTU), in bytes. The supported values
--   are 1500 and 9001. The default value is 1500.
virtualInterface_mtu :: Lens' VirtualInterface (Maybe Int)

-- | The type of virtual interface. The possible values are
--   <tt>private</tt> and <tt>public</tt>.
virtualInterface_virtualInterfaceType :: Lens' VirtualInterface (Maybe Text)

-- | The autonomous system number (ASN) for the Amazon side of the
--   connection.
virtualInterface_amazonSideAsn :: Lens' VirtualInterface (Maybe Integer)

-- | The ID of the virtual interface.
virtualInterface_virtualInterfaceId :: Lens' VirtualInterface (Maybe Text)

-- | The tags associated with the virtual interface.
virtualInterface_tags :: Lens' VirtualInterface (Maybe (NonEmpty Tag))

-- | The ID of the Direct Connect gateway.
virtualInterface_directConnectGatewayId :: Lens' VirtualInterface (Maybe Text)

-- | The name of the virtual interface assigned by the customer network.
--   The name has a maximum of 100 characters. The following are valid
--   characters: a-z, 0-9 and a hyphen (-).
virtualInterface_virtualInterfaceName :: Lens' VirtualInterface (Maybe Text)

-- | The state of the virtual interface. The following are the possible
--   values:
--   
--   <ul>
--   <li><tt>confirming</tt>: The creation of the virtual interface is
--   pending confirmation from the virtual interface owner. If the owner of
--   the virtual interface is different from the owner of the connection on
--   which it is provisioned, then the virtual interface will remain in
--   this state until it is confirmed by the virtual interface owner.</li>
--   <li><tt>verifying</tt>: This state only applies to public virtual
--   interfaces. Each public virtual interface needs validation before the
--   virtual interface can be created.</li>
--   <li><tt>pending</tt>: A virtual interface is in this state from the
--   time that it is created until the virtual interface is ready to
--   forward traffic.</li>
--   <li><tt>available</tt>: A virtual interface that is able to forward
--   traffic.</li>
--   <li><tt>down</tt>: A virtual interface that is BGP down.</li>
--   <li><tt>deleting</tt>: A virtual interface is in this state
--   immediately after calling DeleteVirtualInterface until it can no
--   longer forward traffic.</li>
--   <li><tt>deleted</tt>: A virtual interface that cannot forward
--   traffic.</li>
--   <li><tt>rejected</tt>: The virtual interface owner has declined
--   creation of the virtual interface. If a virtual interface in the
--   <tt>Confirming</tt> state is deleted by the virtual interface owner,
--   the virtual interface enters the <tt>Rejected</tt> state.</li>
--   <li><tt>unknown</tt>: The state of the virtual interface is not
--   available.</li>
--   </ul>
virtualInterface_virtualInterfaceState :: Lens' VirtualInterface (Maybe VirtualInterfaceState)

-- | The IP address assigned to the Amazon interface.
virtualInterface_amazonAddress :: Lens' VirtualInterface (Maybe Text)

-- | The address family for the BGP peer.
virtualInterface_addressFamily :: Lens' VirtualInterface (Maybe AddressFamily)

-- | The ID of the account that owns the virtual interface.
virtualInterface_ownerAccount :: Lens' VirtualInterface (Maybe Text)

-- | The Region where the virtual interface is located.
virtualInterface_region :: Lens' VirtualInterface (Maybe Text)

-- | The ID of the VLAN.
virtualInterface_vlan :: Lens' VirtualInterface (Maybe Int)

-- | The location of the connection.
virtualInterface_location :: Lens' VirtualInterface (Maybe Text)

-- | The IP address assigned to the customer interface.
virtualInterface_customerAddress :: Lens' VirtualInterface (Maybe Text)
instance GHC.Generics.Generic Network.AWS.DirectConnect.AssociateVirtualInterface.AssociateVirtualInterface
instance GHC.Show.Show Network.AWS.DirectConnect.AssociateVirtualInterface.AssociateVirtualInterface
instance GHC.Read.Read Network.AWS.DirectConnect.AssociateVirtualInterface.AssociateVirtualInterface
instance GHC.Classes.Eq Network.AWS.DirectConnect.AssociateVirtualInterface.AssociateVirtualInterface
instance Network.AWS.Types.AWSRequest Network.AWS.DirectConnect.AssociateVirtualInterface.AssociateVirtualInterface
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.AssociateVirtualInterface.AssociateVirtualInterface
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.AssociateVirtualInterface.AssociateVirtualInterface
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DirectConnect.AssociateVirtualInterface.AssociateVirtualInterface
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.AssociateVirtualInterface.AssociateVirtualInterface
instance Network.AWS.Data.Path.ToPath Network.AWS.DirectConnect.AssociateVirtualInterface.AssociateVirtualInterface
instance Network.AWS.Data.Query.ToQuery Network.AWS.DirectConnect.AssociateVirtualInterface.AssociateVirtualInterface


-- | Associates a MAC Security (MACsec) Connection Key Name (CKN)/
--   Connectivity Association Key (CAK) pair with an Direct Connect
--   dedicated connection.
--   
--   You must supply either the <tt>secretARN,</tt> or the CKN/CAK
--   (<tt>ckn</tt> and <tt>cak</tt>) pair in the request.
--   
--   For information about MAC Security (MACsec) key considerations, see
--   <a>MACsec pre-shared CKN/CAK key considerations</a> in the <i>Direct
--   Connect User Guide</i>.
module Network.AWS.DirectConnect.AssociateMacSecKey

-- | <i>See:</i> <a>newAssociateMacSecKey</a> smart constructor.
data AssociateMacSecKey
AssociateMacSecKey' :: Maybe Text -> Maybe Text -> Maybe Text -> Text -> AssociateMacSecKey

-- | The MAC Security (MACsec) CKN to associate with the dedicated
--   connection.
--   
--   You can create the CKN/CAK pair using an industry standard tool.
--   
--   The valid values are 64 hexadecimal characters (0-9, A-E).
--   
--   If you use this request parameter, you must use the <tt>cak</tt>
--   request parameter and not use the <tt>secretARN</tt> request
--   parameter.
[$sel:ckn:AssociateMacSecKey'] :: AssociateMacSecKey -> Maybe Text

-- | The Amazon Resource Name (ARN) of the MAC Security (MACsec) secret key
--   to associate with the dedicated connection.
--   
--   You can use DescribeConnections or DescribeLags to retrieve the MAC
--   Security (MACsec) secret key.
--   
--   If you use this request parameter, you do not use the <tt>ckn</tt> and
--   <tt>cak</tt> request parameters.
[$sel:secretARN:AssociateMacSecKey'] :: AssociateMacSecKey -> Maybe Text

-- | The MAC Security (MACsec) CAK to associate with the dedicated
--   connection.
--   
--   You can create the CKN/CAK pair using an industry standard tool.
--   
--   The valid values are 64 hexadecimal characters (0-9, A-E).
--   
--   If you use this request parameter, you must use the <tt>ckn</tt>
--   request parameter and not use the <tt>secretARN</tt> request
--   parameter.
[$sel:cak:AssociateMacSecKey'] :: AssociateMacSecKey -> Maybe Text

-- | The ID of the dedicated connection (dxcon-xxxx), or the ID of the LAG
--   (dxlag-xxxx).
--   
--   You can use DescribeConnections or DescribeLags to retrieve connection
--   ID.
[$sel:connectionId:AssociateMacSecKey'] :: AssociateMacSecKey -> Text

-- | Create a value of <a>AssociateMacSecKey</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ckn:AssociateMacSecKey'</a>, <a>associateMacSecKey_ckn</a> -
--   The MAC Security (MACsec) CKN to associate with the dedicated
--   connection.
--   
--   You can create the CKN/CAK pair using an industry standard tool.
--   
--   The valid values are 64 hexadecimal characters (0-9, A-E).
--   
--   If you use this request parameter, you must use the <tt>cak</tt>
--   request parameter and not use the <tt>secretARN</tt> request
--   parameter.
--   
--   <a>$sel:secretARN:AssociateMacSecKey'</a>,
--   <a>associateMacSecKey_secretARN</a> - The Amazon Resource Name (ARN)
--   of the MAC Security (MACsec) secret key to associate with the
--   dedicated connection.
--   
--   You can use DescribeConnections or DescribeLags to retrieve the MAC
--   Security (MACsec) secret key.
--   
--   If you use this request parameter, you do not use the <tt>ckn</tt> and
--   <tt>cak</tt> request parameters.
--   
--   <a>$sel:cak:AssociateMacSecKey'</a>, <a>associateMacSecKey_cak</a> -
--   The MAC Security (MACsec) CAK to associate with the dedicated
--   connection.
--   
--   You can create the CKN/CAK pair using an industry standard tool.
--   
--   The valid values are 64 hexadecimal characters (0-9, A-E).
--   
--   If you use this request parameter, you must use the <tt>ckn</tt>
--   request parameter and not use the <tt>secretARN</tt> request
--   parameter.
--   
--   <a>$sel:connectionId:AssociateMacSecKey'</a>,
--   <a>associateMacSecKey_connectionId</a> - The ID of the dedicated
--   connection (dxcon-xxxx), or the ID of the LAG (dxlag-xxxx).
--   
--   You can use DescribeConnections or DescribeLags to retrieve connection
--   ID.
newAssociateMacSecKey :: Text -> AssociateMacSecKey

-- | The MAC Security (MACsec) CKN to associate with the dedicated
--   connection.
--   
--   You can create the CKN/CAK pair using an industry standard tool.
--   
--   The valid values are 64 hexadecimal characters (0-9, A-E).
--   
--   If you use this request parameter, you must use the <tt>cak</tt>
--   request parameter and not use the <tt>secretARN</tt> request
--   parameter.
associateMacSecKey_ckn :: Lens' AssociateMacSecKey (Maybe Text)

-- | The Amazon Resource Name (ARN) of the MAC Security (MACsec) secret key
--   to associate with the dedicated connection.
--   
--   You can use DescribeConnections or DescribeLags to retrieve the MAC
--   Security (MACsec) secret key.
--   
--   If you use this request parameter, you do not use the <tt>ckn</tt> and
--   <tt>cak</tt> request parameters.
associateMacSecKey_secretARN :: Lens' AssociateMacSecKey (Maybe Text)

-- | The MAC Security (MACsec) CAK to associate with the dedicated
--   connection.
--   
--   You can create the CKN/CAK pair using an industry standard tool.
--   
--   The valid values are 64 hexadecimal characters (0-9, A-E).
--   
--   If you use this request parameter, you must use the <tt>ckn</tt>
--   request parameter and not use the <tt>secretARN</tt> request
--   parameter.
associateMacSecKey_cak :: Lens' AssociateMacSecKey (Maybe Text)

-- | The ID of the dedicated connection (dxcon-xxxx), or the ID of the LAG
--   (dxlag-xxxx).
--   
--   You can use DescribeConnections or DescribeLags to retrieve connection
--   ID.
associateMacSecKey_connectionId :: Lens' AssociateMacSecKey Text

-- | <i>See:</i> <a>newAssociateMacSecKeyResponse</a> smart constructor.
data AssociateMacSecKeyResponse
AssociateMacSecKeyResponse' :: Maybe [MacSecKey] -> Maybe Text -> Int -> AssociateMacSecKeyResponse

-- | The MAC Security (MACsec) security keys associated with the dedicated
--   connection.
[$sel:macSecKeys:AssociateMacSecKeyResponse'] :: AssociateMacSecKeyResponse -> Maybe [MacSecKey]

-- | The ID of the dedicated connection (dxcon-xxxx), or the ID of the LAG
--   (dxlag-xxxx).
[$sel:connectionId:AssociateMacSecKeyResponse'] :: AssociateMacSecKeyResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:AssociateMacSecKeyResponse'] :: AssociateMacSecKeyResponse -> Int

-- | Create a value of <a>AssociateMacSecKeyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:macSecKeys:AssociateMacSecKeyResponse'</a>,
--   <a>associateMacSecKeyResponse_macSecKeys</a> - The MAC Security
--   (MACsec) security keys associated with the dedicated connection.
--   
--   <a>$sel:connectionId:AssociateMacSecKey'</a>,
--   <a>associateMacSecKeyResponse_connectionId</a> - The ID of the
--   dedicated connection (dxcon-xxxx), or the ID of the LAG (dxlag-xxxx).
--   
--   <a>$sel:httpStatus:AssociateMacSecKeyResponse'</a>,
--   <a>associateMacSecKeyResponse_httpStatus</a> - The response's http
--   status code.
newAssociateMacSecKeyResponse :: Int -> AssociateMacSecKeyResponse

-- | The MAC Security (MACsec) security keys associated with the dedicated
--   connection.
associateMacSecKeyResponse_macSecKeys :: Lens' AssociateMacSecKeyResponse (Maybe [MacSecKey])

-- | The ID of the dedicated connection (dxcon-xxxx), or the ID of the LAG
--   (dxlag-xxxx).
associateMacSecKeyResponse_connectionId :: Lens' AssociateMacSecKeyResponse (Maybe Text)

-- | The response's http status code.
associateMacSecKeyResponse_httpStatus :: Lens' AssociateMacSecKeyResponse Int
instance GHC.Generics.Generic Network.AWS.DirectConnect.AssociateMacSecKey.AssociateMacSecKey
instance GHC.Show.Show Network.AWS.DirectConnect.AssociateMacSecKey.AssociateMacSecKey
instance GHC.Read.Read Network.AWS.DirectConnect.AssociateMacSecKey.AssociateMacSecKey
instance GHC.Classes.Eq Network.AWS.DirectConnect.AssociateMacSecKey.AssociateMacSecKey
instance GHC.Generics.Generic Network.AWS.DirectConnect.AssociateMacSecKey.AssociateMacSecKeyResponse
instance GHC.Show.Show Network.AWS.DirectConnect.AssociateMacSecKey.AssociateMacSecKeyResponse
instance GHC.Read.Read Network.AWS.DirectConnect.AssociateMacSecKey.AssociateMacSecKeyResponse
instance GHC.Classes.Eq Network.AWS.DirectConnect.AssociateMacSecKey.AssociateMacSecKeyResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DirectConnect.AssociateMacSecKey.AssociateMacSecKey
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.AssociateMacSecKey.AssociateMacSecKeyResponse
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.AssociateMacSecKey.AssociateMacSecKey
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.AssociateMacSecKey.AssociateMacSecKey
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DirectConnect.AssociateMacSecKey.AssociateMacSecKey
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.AssociateMacSecKey.AssociateMacSecKey
instance Network.AWS.Data.Path.ToPath Network.AWS.DirectConnect.AssociateMacSecKey.AssociateMacSecKey
instance Network.AWS.Data.Query.ToQuery Network.AWS.DirectConnect.AssociateMacSecKey.AssociateMacSecKey


-- | Associates a hosted connection and its virtual interfaces with a link
--   aggregation group (LAG) or interconnect. If the target interconnect or
--   LAG has an existing hosted connection with a conflicting VLAN number
--   or IP address, the operation fails. This action temporarily interrupts
--   the hosted connection's connectivity to Amazon Web Services as it is
--   being migrated.
--   
--   Intended for use by Direct Connect Partners only.
module Network.AWS.DirectConnect.AssociateHostedConnection

-- | <i>See:</i> <a>newAssociateHostedConnection</a> smart constructor.
data AssociateHostedConnection
AssociateHostedConnection' :: Text -> Text -> AssociateHostedConnection

-- | The ID of the hosted connection.
[$sel:connectionId:AssociateHostedConnection'] :: AssociateHostedConnection -> Text

-- | The ID of the interconnect or the LAG.
[$sel:parentConnectionId:AssociateHostedConnection'] :: AssociateHostedConnection -> Text

-- | Create a value of <a>AssociateHostedConnection</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connectionId:AssociateHostedConnection'</a>,
--   <a>associateHostedConnection_connectionId</a> - The ID of the hosted
--   connection.
--   
--   <a>$sel:parentConnectionId:AssociateHostedConnection'</a>,
--   <a>associateHostedConnection_parentConnectionId</a> - The ID of the
--   interconnect or the LAG.
newAssociateHostedConnection :: Text -> Text -> AssociateHostedConnection

-- | The ID of the hosted connection.
associateHostedConnection_connectionId :: Lens' AssociateHostedConnection Text

-- | The ID of the interconnect or the LAG.
associateHostedConnection_parentConnectionId :: Lens' AssociateHostedConnection Text

-- | Information about an Direct Connect connection.
--   
--   <i>See:</i> <a>newConnection</a> smart constructor.
data Connection
Connection' :: Maybe Text -> Maybe Text -> Maybe ConnectionState -> Maybe Text -> Maybe [MacSecKey] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe HasLogicalRedundancy -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (NonEmpty Tag) -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Bool -> Connection

-- | The bandwidth of the connection.
[$sel:bandwidth:Connection'] :: Connection -> Maybe Text

-- | The Direct Connect endpoint that terminates the physical connection.
[$sel:awsDeviceV2:Connection'] :: Connection -> Maybe Text

-- | The state of the connection. The following are the possible values:
--   
--   <ul>
--   <li><tt>ordering</tt>: The initial state of a hosted connection
--   provisioned on an interconnect. The connection stays in the ordering
--   state until the owner of the hosted connection confirms or declines
--   the connection order.</li>
--   <li><tt>requested</tt>: The initial state of a standard connection.
--   The connection stays in the requested state until the Letter of
--   Authorization (LOA) is sent to the customer.</li>
--   <li><tt>pending</tt>: The connection has been approved and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is up and the connection is
--   ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The connection is being deleted.</li>
--   <li><tt>deleted</tt>: The connection has been deleted.</li>
--   <li><tt>rejected</tt>: A hosted connection in the <tt>ordering</tt>
--   state enters the <tt>rejected</tt> state if it is deleted by the
--   customer.</li>
--   <li><tt>unknown</tt>: The state of the connection is not
--   available.</li>
--   </ul>
[$sel:connectionState:Connection'] :: Connection -> Maybe ConnectionState

-- | The name of the connection.
[$sel:connectionName:Connection'] :: Connection -> Maybe Text

-- | The MAC Security (MACsec) security keys associated with the
--   connection.
[$sel:macSecKeys:Connection'] :: Connection -> Maybe [MacSecKey]

-- | The name of the service provider associated with the connection.
[$sel:providerName:Connection'] :: Connection -> Maybe Text

-- | The ID of the connection.
[$sel:connectionId:Connection'] :: Connection -> Maybe Text

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
[$sel:awsLogicalDeviceId:Connection'] :: Connection -> Maybe Text

-- | Indicates whether the connection supports a secondary BGP peer in the
--   same address family (IPv4/IPv6).
[$sel:hasLogicalRedundancy:Connection'] :: Connection -> Maybe HasLogicalRedundancy

-- | The Direct Connect endpoint on which the physical connection
--   terminates.
[$sel:awsDevice:Connection'] :: Connection -> Maybe Text

-- | Indicates whether jumbo frames (9001 MTU) are supported.
[$sel:jumboFrameCapable:Connection'] :: Connection -> Maybe Bool

-- | The MAC Security (MACsec) port link status of the connection.
--   
--   The valid values are <tt>Encryption Up</tt>, which means that there is
--   an active Connection Key Name, or <tt>Encryption Down</tt>.
[$sel:portEncryptionStatus:Connection'] :: Connection -> Maybe Text

-- | The ID of the LAG.
[$sel:lagId:Connection'] :: Connection -> Maybe Text

-- | The MAC Security (MACsec) connection encryption mode.
--   
--   The valid values are <tt>no_encrypt</tt>, <tt>should_encrypt</tt>, and
--   <tt>must_encrypt</tt>.
[$sel:encryptionMode:Connection'] :: Connection -> Maybe Text

-- | The name of the Direct Connect service provider associated with the
--   connection.
[$sel:partnerName:Connection'] :: Connection -> Maybe Text

-- | The tags associated with the connection.
[$sel:tags:Connection'] :: Connection -> Maybe (NonEmpty Tag)

-- | The time of the most recent call to DescribeLoa for this connection.
[$sel:loaIssueTime:Connection'] :: Connection -> Maybe POSIX

-- | The ID of the account that owns the connection.
[$sel:ownerAccount:Connection'] :: Connection -> Maybe Text

-- | The Region where the connection is located.
[$sel:region:Connection'] :: Connection -> Maybe Text

-- | The ID of the VLAN.
[$sel:vlan:Connection'] :: Connection -> Maybe Int

-- | The location of the connection.
[$sel:location:Connection'] :: Connection -> Maybe Text

-- | Indicates whether the connection supports MAC Security (MACsec).
[$sel:macSecCapable:Connection'] :: Connection -> Maybe Bool

-- | Create a value of <a>Connection</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bandwidth:Connection'</a>, <a>connection_bandwidth</a> - The
--   bandwidth of the connection.
--   
--   <a>$sel:awsDeviceV2:Connection'</a>, <a>connection_awsDeviceV2</a> -
--   The Direct Connect endpoint that terminates the physical connection.
--   
--   <a>$sel:connectionState:Connection'</a>,
--   <a>connection_connectionState</a> - The state of the connection. The
--   following are the possible values:
--   
--   <ul>
--   <li><tt>ordering</tt>: The initial state of a hosted connection
--   provisioned on an interconnect. The connection stays in the ordering
--   state until the owner of the hosted connection confirms or declines
--   the connection order.</li>
--   <li><tt>requested</tt>: The initial state of a standard connection.
--   The connection stays in the requested state until the Letter of
--   Authorization (LOA) is sent to the customer.</li>
--   <li><tt>pending</tt>: The connection has been approved and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is up and the connection is
--   ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The connection is being deleted.</li>
--   <li><tt>deleted</tt>: The connection has been deleted.</li>
--   <li><tt>rejected</tt>: A hosted connection in the <tt>ordering</tt>
--   state enters the <tt>rejected</tt> state if it is deleted by the
--   customer.</li>
--   <li><tt>unknown</tt>: The state of the connection is not
--   available.</li>
--   </ul>
--   
--   <a>$sel:connectionName:Connection'</a>,
--   <a>connection_connectionName</a> - The name of the connection.
--   
--   <a>$sel:macSecKeys:Connection'</a>, <a>connection_macSecKeys</a> - The
--   MAC Security (MACsec) security keys associated with the connection.
--   
--   <a>$sel:providerName:Connection'</a>, <a>connection_providerName</a> -
--   The name of the service provider associated with the connection.
--   
--   <a>$sel:connectionId:Connection'</a>, <a>connection_connectionId</a> -
--   The ID of the connection.
--   
--   <a>$sel:awsLogicalDeviceId:Connection'</a>,
--   <a>connection_awsLogicalDeviceId</a> - The Direct Connect endpoint
--   that terminates the logical connection. This device might be different
--   than the device that terminates the physical connection.
--   
--   <a>$sel:hasLogicalRedundancy:Connection'</a>,
--   <a>connection_hasLogicalRedundancy</a> - Indicates whether the
--   connection supports a secondary BGP peer in the same address family
--   (IPv4/IPv6).
--   
--   <a>$sel:awsDevice:Connection'</a>, <a>connection_awsDevice</a> - The
--   Direct Connect endpoint on which the physical connection terminates.
--   
--   <a>$sel:jumboFrameCapable:Connection'</a>,
--   <a>connection_jumboFrameCapable</a> - Indicates whether jumbo frames
--   (9001 MTU) are supported.
--   
--   <a>$sel:portEncryptionStatus:Connection'</a>,
--   <a>connection_portEncryptionStatus</a> - The MAC Security (MACsec)
--   port link status of the connection.
--   
--   The valid values are <tt>Encryption Up</tt>, which means that there is
--   an active Connection Key Name, or <tt>Encryption Down</tt>.
--   
--   <a>$sel:lagId:Connection'</a>, <a>connection_lagId</a> - The ID of the
--   LAG.
--   
--   <a>$sel:encryptionMode:Connection'</a>,
--   <a>connection_encryptionMode</a> - The MAC Security (MACsec)
--   connection encryption mode.
--   
--   The valid values are <tt>no_encrypt</tt>, <tt>should_encrypt</tt>, and
--   <tt>must_encrypt</tt>.
--   
--   <a>$sel:partnerName:Connection'</a>, <a>connection_partnerName</a> -
--   The name of the Direct Connect service provider associated with the
--   connection.
--   
--   <a>$sel:tags:Connection'</a>, <a>connection_tags</a> - The tags
--   associated with the connection.
--   
--   <a>$sel:loaIssueTime:Connection'</a>, <a>connection_loaIssueTime</a> -
--   The time of the most recent call to DescribeLoa for this connection.
--   
--   <a>$sel:ownerAccount:Connection'</a>, <a>connection_ownerAccount</a> -
--   The ID of the account that owns the connection.
--   
--   <a>$sel:region:Connection'</a>, <a>connection_region</a> - The Region
--   where the connection is located.
--   
--   <a>$sel:vlan:Connection'</a>, <a>connection_vlan</a> - The ID of the
--   VLAN.
--   
--   <a>$sel:location:Connection'</a>, <a>connection_location</a> - The
--   location of the connection.
--   
--   <a>$sel:macSecCapable:Connection'</a>, <a>connection_macSecCapable</a>
--   - Indicates whether the connection supports MAC Security (MACsec).
newConnection :: Connection

-- | The bandwidth of the connection.
connection_bandwidth :: Lens' Connection (Maybe Text)

-- | The Direct Connect endpoint that terminates the physical connection.
connection_awsDeviceV2 :: Lens' Connection (Maybe Text)

-- | The state of the connection. The following are the possible values:
--   
--   <ul>
--   <li><tt>ordering</tt>: The initial state of a hosted connection
--   provisioned on an interconnect. The connection stays in the ordering
--   state until the owner of the hosted connection confirms or declines
--   the connection order.</li>
--   <li><tt>requested</tt>: The initial state of a standard connection.
--   The connection stays in the requested state until the Letter of
--   Authorization (LOA) is sent to the customer.</li>
--   <li><tt>pending</tt>: The connection has been approved and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is up and the connection is
--   ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The connection is being deleted.</li>
--   <li><tt>deleted</tt>: The connection has been deleted.</li>
--   <li><tt>rejected</tt>: A hosted connection in the <tt>ordering</tt>
--   state enters the <tt>rejected</tt> state if it is deleted by the
--   customer.</li>
--   <li><tt>unknown</tt>: The state of the connection is not
--   available.</li>
--   </ul>
connection_connectionState :: Lens' Connection (Maybe ConnectionState)

-- | The name of the connection.
connection_connectionName :: Lens' Connection (Maybe Text)

-- | The MAC Security (MACsec) security keys associated with the
--   connection.
connection_macSecKeys :: Lens' Connection (Maybe [MacSecKey])

-- | The name of the service provider associated with the connection.
connection_providerName :: Lens' Connection (Maybe Text)

-- | The ID of the connection.
connection_connectionId :: Lens' Connection (Maybe Text)

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
connection_awsLogicalDeviceId :: Lens' Connection (Maybe Text)

-- | Indicates whether the connection supports a secondary BGP peer in the
--   same address family (IPv4/IPv6).
connection_hasLogicalRedundancy :: Lens' Connection (Maybe HasLogicalRedundancy)

-- | The Direct Connect endpoint on which the physical connection
--   terminates.
connection_awsDevice :: Lens' Connection (Maybe Text)

-- | Indicates whether jumbo frames (9001 MTU) are supported.
connection_jumboFrameCapable :: Lens' Connection (Maybe Bool)

-- | The MAC Security (MACsec) port link status of the connection.
--   
--   The valid values are <tt>Encryption Up</tt>, which means that there is
--   an active Connection Key Name, or <tt>Encryption Down</tt>.
connection_portEncryptionStatus :: Lens' Connection (Maybe Text)

-- | The ID of the LAG.
connection_lagId :: Lens' Connection (Maybe Text)

-- | The MAC Security (MACsec) connection encryption mode.
--   
--   The valid values are <tt>no_encrypt</tt>, <tt>should_encrypt</tt>, and
--   <tt>must_encrypt</tt>.
connection_encryptionMode :: Lens' Connection (Maybe Text)

-- | The name of the Direct Connect service provider associated with the
--   connection.
connection_partnerName :: Lens' Connection (Maybe Text)

-- | The tags associated with the connection.
connection_tags :: Lens' Connection (Maybe (NonEmpty Tag))

-- | The time of the most recent call to DescribeLoa for this connection.
connection_loaIssueTime :: Lens' Connection (Maybe UTCTime)

-- | The ID of the account that owns the connection.
connection_ownerAccount :: Lens' Connection (Maybe Text)

-- | The Region where the connection is located.
connection_region :: Lens' Connection (Maybe Text)

-- | The ID of the VLAN.
connection_vlan :: Lens' Connection (Maybe Int)

-- | The location of the connection.
connection_location :: Lens' Connection (Maybe Text)

-- | Indicates whether the connection supports MAC Security (MACsec).
connection_macSecCapable :: Lens' Connection (Maybe Bool)
instance GHC.Generics.Generic Network.AWS.DirectConnect.AssociateHostedConnection.AssociateHostedConnection
instance GHC.Show.Show Network.AWS.DirectConnect.AssociateHostedConnection.AssociateHostedConnection
instance GHC.Read.Read Network.AWS.DirectConnect.AssociateHostedConnection.AssociateHostedConnection
instance GHC.Classes.Eq Network.AWS.DirectConnect.AssociateHostedConnection.AssociateHostedConnection
instance Network.AWS.Types.AWSRequest Network.AWS.DirectConnect.AssociateHostedConnection.AssociateHostedConnection
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.AssociateHostedConnection.AssociateHostedConnection
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.AssociateHostedConnection.AssociateHostedConnection
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DirectConnect.AssociateHostedConnection.AssociateHostedConnection
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.AssociateHostedConnection.AssociateHostedConnection
instance Network.AWS.Data.Path.ToPath Network.AWS.DirectConnect.AssociateHostedConnection.AssociateHostedConnection
instance Network.AWS.Data.Query.ToQuery Network.AWS.DirectConnect.AssociateHostedConnection.AssociateHostedConnection


-- | Associates an existing connection with a link aggregation group (LAG).
--   The connection is interrupted and re-established as a member of the
--   LAG (connectivity to Amazon Web Services is interrupted). The
--   connection must be hosted on the same Direct Connect endpoint as the
--   LAG, and its bandwidth must match the bandwidth for the LAG. You can
--   re-associate a connection that's currently associated with a different
--   LAG; however, if removing the connection would cause the original LAG
--   to fall below its setting for minimum number of operational
--   connections, the request fails.
--   
--   Any virtual interfaces that are directly associated with the
--   connection are automatically re-associated with the LAG. If the
--   connection was originally associated with a different LAG, the virtual
--   interfaces remain associated with the original LAG.
--   
--   For interconnects, any hosted connections are automatically
--   re-associated with the LAG. If the interconnect was originally
--   associated with a different LAG, the hosted connections remain
--   associated with the original LAG.
module Network.AWS.DirectConnect.AssociateConnectionWithLag

-- | <i>See:</i> <a>newAssociateConnectionWithLag</a> smart constructor.
data AssociateConnectionWithLag
AssociateConnectionWithLag' :: Text -> Text -> AssociateConnectionWithLag

-- | The ID of the connection.
[$sel:connectionId:AssociateConnectionWithLag'] :: AssociateConnectionWithLag -> Text

-- | The ID of the LAG with which to associate the connection.
[$sel:lagId:AssociateConnectionWithLag'] :: AssociateConnectionWithLag -> Text

-- | Create a value of <a>AssociateConnectionWithLag</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connectionId:AssociateConnectionWithLag'</a>,
--   <a>associateConnectionWithLag_connectionId</a> - The ID of the
--   connection.
--   
--   <a>$sel:lagId:AssociateConnectionWithLag'</a>,
--   <a>associateConnectionWithLag_lagId</a> - The ID of the LAG with which
--   to associate the connection.
newAssociateConnectionWithLag :: Text -> Text -> AssociateConnectionWithLag

-- | The ID of the connection.
associateConnectionWithLag_connectionId :: Lens' AssociateConnectionWithLag Text

-- | The ID of the LAG with which to associate the connection.
associateConnectionWithLag_lagId :: Lens' AssociateConnectionWithLag Text

-- | Information about an Direct Connect connection.
--   
--   <i>See:</i> <a>newConnection</a> smart constructor.
data Connection
Connection' :: Maybe Text -> Maybe Text -> Maybe ConnectionState -> Maybe Text -> Maybe [MacSecKey] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe HasLogicalRedundancy -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (NonEmpty Tag) -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Bool -> Connection

-- | The bandwidth of the connection.
[$sel:bandwidth:Connection'] :: Connection -> Maybe Text

-- | The Direct Connect endpoint that terminates the physical connection.
[$sel:awsDeviceV2:Connection'] :: Connection -> Maybe Text

-- | The state of the connection. The following are the possible values:
--   
--   <ul>
--   <li><tt>ordering</tt>: The initial state of a hosted connection
--   provisioned on an interconnect. The connection stays in the ordering
--   state until the owner of the hosted connection confirms or declines
--   the connection order.</li>
--   <li><tt>requested</tt>: The initial state of a standard connection.
--   The connection stays in the requested state until the Letter of
--   Authorization (LOA) is sent to the customer.</li>
--   <li><tt>pending</tt>: The connection has been approved and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is up and the connection is
--   ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The connection is being deleted.</li>
--   <li><tt>deleted</tt>: The connection has been deleted.</li>
--   <li><tt>rejected</tt>: A hosted connection in the <tt>ordering</tt>
--   state enters the <tt>rejected</tt> state if it is deleted by the
--   customer.</li>
--   <li><tt>unknown</tt>: The state of the connection is not
--   available.</li>
--   </ul>
[$sel:connectionState:Connection'] :: Connection -> Maybe ConnectionState

-- | The name of the connection.
[$sel:connectionName:Connection'] :: Connection -> Maybe Text

-- | The MAC Security (MACsec) security keys associated with the
--   connection.
[$sel:macSecKeys:Connection'] :: Connection -> Maybe [MacSecKey]

-- | The name of the service provider associated with the connection.
[$sel:providerName:Connection'] :: Connection -> Maybe Text

-- | The ID of the connection.
[$sel:connectionId:Connection'] :: Connection -> Maybe Text

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
[$sel:awsLogicalDeviceId:Connection'] :: Connection -> Maybe Text

-- | Indicates whether the connection supports a secondary BGP peer in the
--   same address family (IPv4/IPv6).
[$sel:hasLogicalRedundancy:Connection'] :: Connection -> Maybe HasLogicalRedundancy

-- | The Direct Connect endpoint on which the physical connection
--   terminates.
[$sel:awsDevice:Connection'] :: Connection -> Maybe Text

-- | Indicates whether jumbo frames (9001 MTU) are supported.
[$sel:jumboFrameCapable:Connection'] :: Connection -> Maybe Bool

-- | The MAC Security (MACsec) port link status of the connection.
--   
--   The valid values are <tt>Encryption Up</tt>, which means that there is
--   an active Connection Key Name, or <tt>Encryption Down</tt>.
[$sel:portEncryptionStatus:Connection'] :: Connection -> Maybe Text

-- | The ID of the LAG.
[$sel:lagId:Connection'] :: Connection -> Maybe Text

-- | The MAC Security (MACsec) connection encryption mode.
--   
--   The valid values are <tt>no_encrypt</tt>, <tt>should_encrypt</tt>, and
--   <tt>must_encrypt</tt>.
[$sel:encryptionMode:Connection'] :: Connection -> Maybe Text

-- | The name of the Direct Connect service provider associated with the
--   connection.
[$sel:partnerName:Connection'] :: Connection -> Maybe Text

-- | The tags associated with the connection.
[$sel:tags:Connection'] :: Connection -> Maybe (NonEmpty Tag)

-- | The time of the most recent call to DescribeLoa for this connection.
[$sel:loaIssueTime:Connection'] :: Connection -> Maybe POSIX

-- | The ID of the account that owns the connection.
[$sel:ownerAccount:Connection'] :: Connection -> Maybe Text

-- | The Region where the connection is located.
[$sel:region:Connection'] :: Connection -> Maybe Text

-- | The ID of the VLAN.
[$sel:vlan:Connection'] :: Connection -> Maybe Int

-- | The location of the connection.
[$sel:location:Connection'] :: Connection -> Maybe Text

-- | Indicates whether the connection supports MAC Security (MACsec).
[$sel:macSecCapable:Connection'] :: Connection -> Maybe Bool

-- | Create a value of <a>Connection</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bandwidth:Connection'</a>, <a>connection_bandwidth</a> - The
--   bandwidth of the connection.
--   
--   <a>$sel:awsDeviceV2:Connection'</a>, <a>connection_awsDeviceV2</a> -
--   The Direct Connect endpoint that terminates the physical connection.
--   
--   <a>$sel:connectionState:Connection'</a>,
--   <a>connection_connectionState</a> - The state of the connection. The
--   following are the possible values:
--   
--   <ul>
--   <li><tt>ordering</tt>: The initial state of a hosted connection
--   provisioned on an interconnect. The connection stays in the ordering
--   state until the owner of the hosted connection confirms or declines
--   the connection order.</li>
--   <li><tt>requested</tt>: The initial state of a standard connection.
--   The connection stays in the requested state until the Letter of
--   Authorization (LOA) is sent to the customer.</li>
--   <li><tt>pending</tt>: The connection has been approved and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is up and the connection is
--   ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The connection is being deleted.</li>
--   <li><tt>deleted</tt>: The connection has been deleted.</li>
--   <li><tt>rejected</tt>: A hosted connection in the <tt>ordering</tt>
--   state enters the <tt>rejected</tt> state if it is deleted by the
--   customer.</li>
--   <li><tt>unknown</tt>: The state of the connection is not
--   available.</li>
--   </ul>
--   
--   <a>$sel:connectionName:Connection'</a>,
--   <a>connection_connectionName</a> - The name of the connection.
--   
--   <a>$sel:macSecKeys:Connection'</a>, <a>connection_macSecKeys</a> - The
--   MAC Security (MACsec) security keys associated with the connection.
--   
--   <a>$sel:providerName:Connection'</a>, <a>connection_providerName</a> -
--   The name of the service provider associated with the connection.
--   
--   <a>$sel:connectionId:Connection'</a>, <a>connection_connectionId</a> -
--   The ID of the connection.
--   
--   <a>$sel:awsLogicalDeviceId:Connection'</a>,
--   <a>connection_awsLogicalDeviceId</a> - The Direct Connect endpoint
--   that terminates the logical connection. This device might be different
--   than the device that terminates the physical connection.
--   
--   <a>$sel:hasLogicalRedundancy:Connection'</a>,
--   <a>connection_hasLogicalRedundancy</a> - Indicates whether the
--   connection supports a secondary BGP peer in the same address family
--   (IPv4/IPv6).
--   
--   <a>$sel:awsDevice:Connection'</a>, <a>connection_awsDevice</a> - The
--   Direct Connect endpoint on which the physical connection terminates.
--   
--   <a>$sel:jumboFrameCapable:Connection'</a>,
--   <a>connection_jumboFrameCapable</a> - Indicates whether jumbo frames
--   (9001 MTU) are supported.
--   
--   <a>$sel:portEncryptionStatus:Connection'</a>,
--   <a>connection_portEncryptionStatus</a> - The MAC Security (MACsec)
--   port link status of the connection.
--   
--   The valid values are <tt>Encryption Up</tt>, which means that there is
--   an active Connection Key Name, or <tt>Encryption Down</tt>.
--   
--   <a>$sel:lagId:Connection'</a>, <a>connection_lagId</a> - The ID of the
--   LAG.
--   
--   <a>$sel:encryptionMode:Connection'</a>,
--   <a>connection_encryptionMode</a> - The MAC Security (MACsec)
--   connection encryption mode.
--   
--   The valid values are <tt>no_encrypt</tt>, <tt>should_encrypt</tt>, and
--   <tt>must_encrypt</tt>.
--   
--   <a>$sel:partnerName:Connection'</a>, <a>connection_partnerName</a> -
--   The name of the Direct Connect service provider associated with the
--   connection.
--   
--   <a>$sel:tags:Connection'</a>, <a>connection_tags</a> - The tags
--   associated with the connection.
--   
--   <a>$sel:loaIssueTime:Connection'</a>, <a>connection_loaIssueTime</a> -
--   The time of the most recent call to DescribeLoa for this connection.
--   
--   <a>$sel:ownerAccount:Connection'</a>, <a>connection_ownerAccount</a> -
--   The ID of the account that owns the connection.
--   
--   <a>$sel:region:Connection'</a>, <a>connection_region</a> - The Region
--   where the connection is located.
--   
--   <a>$sel:vlan:Connection'</a>, <a>connection_vlan</a> - The ID of the
--   VLAN.
--   
--   <a>$sel:location:Connection'</a>, <a>connection_location</a> - The
--   location of the connection.
--   
--   <a>$sel:macSecCapable:Connection'</a>, <a>connection_macSecCapable</a>
--   - Indicates whether the connection supports MAC Security (MACsec).
newConnection :: Connection

-- | The bandwidth of the connection.
connection_bandwidth :: Lens' Connection (Maybe Text)

-- | The Direct Connect endpoint that terminates the physical connection.
connection_awsDeviceV2 :: Lens' Connection (Maybe Text)

-- | The state of the connection. The following are the possible values:
--   
--   <ul>
--   <li><tt>ordering</tt>: The initial state of a hosted connection
--   provisioned on an interconnect. The connection stays in the ordering
--   state until the owner of the hosted connection confirms or declines
--   the connection order.</li>
--   <li><tt>requested</tt>: The initial state of a standard connection.
--   The connection stays in the requested state until the Letter of
--   Authorization (LOA) is sent to the customer.</li>
--   <li><tt>pending</tt>: The connection has been approved and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is up and the connection is
--   ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The connection is being deleted.</li>
--   <li><tt>deleted</tt>: The connection has been deleted.</li>
--   <li><tt>rejected</tt>: A hosted connection in the <tt>ordering</tt>
--   state enters the <tt>rejected</tt> state if it is deleted by the
--   customer.</li>
--   <li><tt>unknown</tt>: The state of the connection is not
--   available.</li>
--   </ul>
connection_connectionState :: Lens' Connection (Maybe ConnectionState)

-- | The name of the connection.
connection_connectionName :: Lens' Connection (Maybe Text)

-- | The MAC Security (MACsec) security keys associated with the
--   connection.
connection_macSecKeys :: Lens' Connection (Maybe [MacSecKey])

-- | The name of the service provider associated with the connection.
connection_providerName :: Lens' Connection (Maybe Text)

-- | The ID of the connection.
connection_connectionId :: Lens' Connection (Maybe Text)

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
connection_awsLogicalDeviceId :: Lens' Connection (Maybe Text)

-- | Indicates whether the connection supports a secondary BGP peer in the
--   same address family (IPv4/IPv6).
connection_hasLogicalRedundancy :: Lens' Connection (Maybe HasLogicalRedundancy)

-- | The Direct Connect endpoint on which the physical connection
--   terminates.
connection_awsDevice :: Lens' Connection (Maybe Text)

-- | Indicates whether jumbo frames (9001 MTU) are supported.
connection_jumboFrameCapable :: Lens' Connection (Maybe Bool)

-- | The MAC Security (MACsec) port link status of the connection.
--   
--   The valid values are <tt>Encryption Up</tt>, which means that there is
--   an active Connection Key Name, or <tt>Encryption Down</tt>.
connection_portEncryptionStatus :: Lens' Connection (Maybe Text)

-- | The ID of the LAG.
connection_lagId :: Lens' Connection (Maybe Text)

-- | The MAC Security (MACsec) connection encryption mode.
--   
--   The valid values are <tt>no_encrypt</tt>, <tt>should_encrypt</tt>, and
--   <tt>must_encrypt</tt>.
connection_encryptionMode :: Lens' Connection (Maybe Text)

-- | The name of the Direct Connect service provider associated with the
--   connection.
connection_partnerName :: Lens' Connection (Maybe Text)

-- | The tags associated with the connection.
connection_tags :: Lens' Connection (Maybe (NonEmpty Tag))

-- | The time of the most recent call to DescribeLoa for this connection.
connection_loaIssueTime :: Lens' Connection (Maybe UTCTime)

-- | The ID of the account that owns the connection.
connection_ownerAccount :: Lens' Connection (Maybe Text)

-- | The Region where the connection is located.
connection_region :: Lens' Connection (Maybe Text)

-- | The ID of the VLAN.
connection_vlan :: Lens' Connection (Maybe Int)

-- | The location of the connection.
connection_location :: Lens' Connection (Maybe Text)

-- | Indicates whether the connection supports MAC Security (MACsec).
connection_macSecCapable :: Lens' Connection (Maybe Bool)
instance GHC.Generics.Generic Network.AWS.DirectConnect.AssociateConnectionWithLag.AssociateConnectionWithLag
instance GHC.Show.Show Network.AWS.DirectConnect.AssociateConnectionWithLag.AssociateConnectionWithLag
instance GHC.Read.Read Network.AWS.DirectConnect.AssociateConnectionWithLag.AssociateConnectionWithLag
instance GHC.Classes.Eq Network.AWS.DirectConnect.AssociateConnectionWithLag.AssociateConnectionWithLag
instance Network.AWS.Types.AWSRequest Network.AWS.DirectConnect.AssociateConnectionWithLag.AssociateConnectionWithLag
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.AssociateConnectionWithLag.AssociateConnectionWithLag
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.AssociateConnectionWithLag.AssociateConnectionWithLag
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DirectConnect.AssociateConnectionWithLag.AssociateConnectionWithLag
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.AssociateConnectionWithLag.AssociateConnectionWithLag
instance Network.AWS.Data.Path.ToPath Network.AWS.DirectConnect.AssociateConnectionWithLag.AssociateConnectionWithLag
instance Network.AWS.Data.Query.ToQuery Network.AWS.DirectConnect.AssociateConnectionWithLag.AssociateConnectionWithLag


-- | Provisions a transit virtual interface to be owned by the specified
--   account. Use this type of interface to connect a transit gateway to
--   your Direct Connect gateway.
--   
--   The owner of a connection provisions a transit virtual interface to be
--   owned by the specified account.
--   
--   After you create a transit virtual interface, it must be confirmed by
--   the owner using ConfirmTransitVirtualInterface. Until this step has
--   been completed, the transit virtual interface is in the
--   <tt>requested</tt> state and is not available to handle traffic.
module Network.AWS.DirectConnect.AllocateTransitVirtualInterface

-- | <i>See:</i> <a>newAllocateTransitVirtualInterface</a> smart
--   constructor.
data AllocateTransitVirtualInterface
AllocateTransitVirtualInterface' :: Text -> Text -> NewTransitVirtualInterfaceAllocation -> AllocateTransitVirtualInterface

-- | The ID of the connection on which the transit virtual interface is
--   provisioned.
[$sel:connectionId:AllocateTransitVirtualInterface'] :: AllocateTransitVirtualInterface -> Text

-- | The ID of the account that owns the transit virtual interface.
[$sel:ownerAccount:AllocateTransitVirtualInterface'] :: AllocateTransitVirtualInterface -> Text

-- | Information about the transit virtual interface.
[$sel:newTransitVirtualInterfaceAllocation':AllocateTransitVirtualInterface'] :: AllocateTransitVirtualInterface -> NewTransitVirtualInterfaceAllocation

-- | Create a value of <a>AllocateTransitVirtualInterface</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connectionId:AllocateTransitVirtualInterface'</a>,
--   <a>allocateTransitVirtualInterface_connectionId</a> - The ID of the
--   connection on which the transit virtual interface is provisioned.
--   
--   <a>$sel:ownerAccount:AllocateTransitVirtualInterface'</a>,
--   <a>allocateTransitVirtualInterface_ownerAccount</a> - The ID of the
--   account that owns the transit virtual interface.
--   
--   
--   <a>$sel:newTransitVirtualInterfaceAllocation':AllocateTransitVirtualInterface'</a>,
--   <a>allocateTransitVirtualInterface_newTransitVirtualInterfaceAllocation</a>
--   - Information about the transit virtual interface.
newAllocateTransitVirtualInterface :: Text -> Text -> NewTransitVirtualInterfaceAllocation -> AllocateTransitVirtualInterface

-- | The ID of the connection on which the transit virtual interface is
--   provisioned.
allocateTransitVirtualInterface_connectionId :: Lens' AllocateTransitVirtualInterface Text

-- | The ID of the account that owns the transit virtual interface.
allocateTransitVirtualInterface_ownerAccount :: Lens' AllocateTransitVirtualInterface Text

-- | Information about the transit virtual interface.
allocateTransitVirtualInterface_newTransitVirtualInterfaceAllocation :: Lens' AllocateTransitVirtualInterface NewTransitVirtualInterfaceAllocation

-- | <i>See:</i> <a>newAllocateTransitVirtualInterfaceResponse</a> smart
--   constructor.
data AllocateTransitVirtualInterfaceResponse
AllocateTransitVirtualInterfaceResponse' :: Maybe VirtualInterface -> Int -> AllocateTransitVirtualInterfaceResponse
[$sel:virtualInterface:AllocateTransitVirtualInterfaceResponse'] :: AllocateTransitVirtualInterfaceResponse -> Maybe VirtualInterface

-- | The response's http status code.
[$sel:httpStatus:AllocateTransitVirtualInterfaceResponse'] :: AllocateTransitVirtualInterfaceResponse -> Int

-- | Create a value of <a>AllocateTransitVirtualInterfaceResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:virtualInterface:AllocateTransitVirtualInterfaceResponse'</a>,
--   <a>allocateTransitVirtualInterfaceResponse_virtualInterface</a> -
--   Undocumented member.
--   
--   <a>$sel:httpStatus:AllocateTransitVirtualInterfaceResponse'</a>,
--   <a>allocateTransitVirtualInterfaceResponse_httpStatus</a> - The
--   response's http status code.
newAllocateTransitVirtualInterfaceResponse :: Int -> AllocateTransitVirtualInterfaceResponse

-- | Undocumented member.
allocateTransitVirtualInterfaceResponse_virtualInterface :: Lens' AllocateTransitVirtualInterfaceResponse (Maybe VirtualInterface)

-- | The response's http status code.
allocateTransitVirtualInterfaceResponse_httpStatus :: Lens' AllocateTransitVirtualInterfaceResponse Int
instance GHC.Generics.Generic Network.AWS.DirectConnect.AllocateTransitVirtualInterface.AllocateTransitVirtualInterface
instance GHC.Show.Show Network.AWS.DirectConnect.AllocateTransitVirtualInterface.AllocateTransitVirtualInterface
instance GHC.Read.Read Network.AWS.DirectConnect.AllocateTransitVirtualInterface.AllocateTransitVirtualInterface
instance GHC.Classes.Eq Network.AWS.DirectConnect.AllocateTransitVirtualInterface.AllocateTransitVirtualInterface
instance GHC.Generics.Generic Network.AWS.DirectConnect.AllocateTransitVirtualInterface.AllocateTransitVirtualInterfaceResponse
instance GHC.Show.Show Network.AWS.DirectConnect.AllocateTransitVirtualInterface.AllocateTransitVirtualInterfaceResponse
instance GHC.Read.Read Network.AWS.DirectConnect.AllocateTransitVirtualInterface.AllocateTransitVirtualInterfaceResponse
instance GHC.Classes.Eq Network.AWS.DirectConnect.AllocateTransitVirtualInterface.AllocateTransitVirtualInterfaceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DirectConnect.AllocateTransitVirtualInterface.AllocateTransitVirtualInterface
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.AllocateTransitVirtualInterface.AllocateTransitVirtualInterfaceResponse
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.AllocateTransitVirtualInterface.AllocateTransitVirtualInterface
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.AllocateTransitVirtualInterface.AllocateTransitVirtualInterface
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DirectConnect.AllocateTransitVirtualInterface.AllocateTransitVirtualInterface
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.AllocateTransitVirtualInterface.AllocateTransitVirtualInterface
instance Network.AWS.Data.Path.ToPath Network.AWS.DirectConnect.AllocateTransitVirtualInterface.AllocateTransitVirtualInterface
instance Network.AWS.Data.Query.ToQuery Network.AWS.DirectConnect.AllocateTransitVirtualInterface.AllocateTransitVirtualInterface


-- | Provisions a public virtual interface to be owned by the specified
--   account.
--   
--   The owner of a connection calls this function to provision a public
--   virtual interface to be owned by the specified account.
--   
--   Virtual interfaces created using this function must be confirmed by
--   the owner using ConfirmPublicVirtualInterface. Until this step has
--   been completed, the virtual interface is in the <tt>confirming</tt>
--   state and is not available to handle traffic.
--   
--   When creating an IPv6 public virtual interface, omit the Amazon
--   address and customer address. IPv6 addresses are automatically
--   assigned from the Amazon pool of IPv6 addresses; you cannot specify
--   custom IPv6 addresses.
module Network.AWS.DirectConnect.AllocatePublicVirtualInterface

-- | <i>See:</i> <a>newAllocatePublicVirtualInterface</a> smart
--   constructor.
data AllocatePublicVirtualInterface
AllocatePublicVirtualInterface' :: Text -> Text -> NewPublicVirtualInterfaceAllocation -> AllocatePublicVirtualInterface

-- | The ID of the connection on which the public virtual interface is
--   provisioned.
[$sel:connectionId:AllocatePublicVirtualInterface'] :: AllocatePublicVirtualInterface -> Text

-- | The ID of the account that owns the public virtual interface.
[$sel:ownerAccount:AllocatePublicVirtualInterface'] :: AllocatePublicVirtualInterface -> Text

-- | Information about the public virtual interface.
[$sel:newPublicVirtualInterfaceAllocation':AllocatePublicVirtualInterface'] :: AllocatePublicVirtualInterface -> NewPublicVirtualInterfaceAllocation

-- | Create a value of <a>AllocatePublicVirtualInterface</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connectionId:AllocatePublicVirtualInterface'</a>,
--   <a>allocatePublicVirtualInterface_connectionId</a> - The ID of the
--   connection on which the public virtual interface is provisioned.
--   
--   <a>$sel:ownerAccount:AllocatePublicVirtualInterface'</a>,
--   <a>allocatePublicVirtualInterface_ownerAccount</a> - The ID of the
--   account that owns the public virtual interface.
--   
--   
--   <a>$sel:newPublicVirtualInterfaceAllocation':AllocatePublicVirtualInterface'</a>,
--   <a>allocatePublicVirtualInterface_newPublicVirtualInterfaceAllocation</a>
--   - Information about the public virtual interface.
newAllocatePublicVirtualInterface :: Text -> Text -> NewPublicVirtualInterfaceAllocation -> AllocatePublicVirtualInterface

-- | The ID of the connection on which the public virtual interface is
--   provisioned.
allocatePublicVirtualInterface_connectionId :: Lens' AllocatePublicVirtualInterface Text

-- | The ID of the account that owns the public virtual interface.
allocatePublicVirtualInterface_ownerAccount :: Lens' AllocatePublicVirtualInterface Text

-- | Information about the public virtual interface.
allocatePublicVirtualInterface_newPublicVirtualInterfaceAllocation :: Lens' AllocatePublicVirtualInterface NewPublicVirtualInterfaceAllocation

-- | Information about a virtual interface.
--   
--   <i>See:</i> <a>newVirtualInterface</a> smart constructor.
data VirtualInterface
VirtualInterface' :: Maybe Text -> Maybe [BGPPeer] -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe [RouteFilterPrefix] -> Maybe Int -> Maybe Text -> Maybe Integer -> Maybe Text -> Maybe (NonEmpty Tag) -> Maybe Text -> Maybe Text -> Maybe VirtualInterfaceState -> Maybe Text -> Maybe AddressFamily -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> VirtualInterface

-- | The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
[$sel:authKey:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The BGP peers configured on this virtual interface.
[$sel:bgpPeers:VirtualInterface'] :: VirtualInterface -> Maybe [BGPPeer]

-- | The ID of the virtual private gateway. Applies only to private virtual
--   interfaces.
[$sel:virtualGatewayId:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
--   
--   The valid values are 1-2147483647.
[$sel:asn:VirtualInterface'] :: VirtualInterface -> Maybe Int

-- | The Direct Connect endpoint that terminates the physical connection.
[$sel:awsDeviceV2:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The ID of the connection.
[$sel:connectionId:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
[$sel:awsLogicalDeviceId:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The customer router configuration.
[$sel:customerRouterConfig:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | Indicates whether jumbo frames (9001 MTU) are supported.
[$sel:jumboFrameCapable:VirtualInterface'] :: VirtualInterface -> Maybe Bool

-- | The routes to be advertised to the Amazon Web Services network in this
--   Region. Applies to public virtual interfaces.
[$sel:routeFilterPrefixes:VirtualInterface'] :: VirtualInterface -> Maybe [RouteFilterPrefix]

-- | The maximum transmission unit (MTU), in bytes. The supported values
--   are 1500 and 9001. The default value is 1500.
[$sel:mtu:VirtualInterface'] :: VirtualInterface -> Maybe Int

-- | The type of virtual interface. The possible values are
--   <tt>private</tt> and <tt>public</tt>.
[$sel:virtualInterfaceType:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The autonomous system number (ASN) for the Amazon side of the
--   connection.
[$sel:amazonSideAsn:VirtualInterface'] :: VirtualInterface -> Maybe Integer

-- | The ID of the virtual interface.
[$sel:virtualInterfaceId:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The tags associated with the virtual interface.
[$sel:tags:VirtualInterface'] :: VirtualInterface -> Maybe (NonEmpty Tag)

-- | The ID of the Direct Connect gateway.
[$sel:directConnectGatewayId:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The name of the virtual interface assigned by the customer network.
--   The name has a maximum of 100 characters. The following are valid
--   characters: a-z, 0-9 and a hyphen (-).
[$sel:virtualInterfaceName:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The state of the virtual interface. The following are the possible
--   values:
--   
--   <ul>
--   <li><tt>confirming</tt>: The creation of the virtual interface is
--   pending confirmation from the virtual interface owner. If the owner of
--   the virtual interface is different from the owner of the connection on
--   which it is provisioned, then the virtual interface will remain in
--   this state until it is confirmed by the virtual interface owner.</li>
--   <li><tt>verifying</tt>: This state only applies to public virtual
--   interfaces. Each public virtual interface needs validation before the
--   virtual interface can be created.</li>
--   <li><tt>pending</tt>: A virtual interface is in this state from the
--   time that it is created until the virtual interface is ready to
--   forward traffic.</li>
--   <li><tt>available</tt>: A virtual interface that is able to forward
--   traffic.</li>
--   <li><tt>down</tt>: A virtual interface that is BGP down.</li>
--   <li><tt>deleting</tt>: A virtual interface is in this state
--   immediately after calling DeleteVirtualInterface until it can no
--   longer forward traffic.</li>
--   <li><tt>deleted</tt>: A virtual interface that cannot forward
--   traffic.</li>
--   <li><tt>rejected</tt>: The virtual interface owner has declined
--   creation of the virtual interface. If a virtual interface in the
--   <tt>Confirming</tt> state is deleted by the virtual interface owner,
--   the virtual interface enters the <tt>Rejected</tt> state.</li>
--   <li><tt>unknown</tt>: The state of the virtual interface is not
--   available.</li>
--   </ul>
[$sel:virtualInterfaceState:VirtualInterface'] :: VirtualInterface -> Maybe VirtualInterfaceState

-- | The IP address assigned to the Amazon interface.
[$sel:amazonAddress:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The address family for the BGP peer.
[$sel:addressFamily:VirtualInterface'] :: VirtualInterface -> Maybe AddressFamily

-- | The ID of the account that owns the virtual interface.
[$sel:ownerAccount:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The Region where the virtual interface is located.
[$sel:region:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The ID of the VLAN.
[$sel:vlan:VirtualInterface'] :: VirtualInterface -> Maybe Int

-- | The location of the connection.
[$sel:location:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The IP address assigned to the customer interface.
[$sel:customerAddress:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | Create a value of <a>VirtualInterface</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authKey:VirtualInterface'</a>, <a>virtualInterface_authKey</a>
--   - The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
--   
--   <a>$sel:bgpPeers:VirtualInterface'</a>,
--   <a>virtualInterface_bgpPeers</a> - The BGP peers configured on this
--   virtual interface.
--   
--   <a>$sel:virtualGatewayId:VirtualInterface'</a>,
--   <a>virtualInterface_virtualGatewayId</a> - The ID of the virtual
--   private gateway. Applies only to private virtual interfaces.
--   
--   <a>$sel:asn:VirtualInterface'</a>, <a>virtualInterface_asn</a> - The
--   autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
--   
--   The valid values are 1-2147483647.
--   
--   <a>$sel:awsDeviceV2:VirtualInterface'</a>,
--   <a>virtualInterface_awsDeviceV2</a> - The Direct Connect endpoint that
--   terminates the physical connection.
--   
--   <a>$sel:connectionId:VirtualInterface'</a>,
--   <a>virtualInterface_connectionId</a> - The ID of the connection.
--   
--   <a>$sel:awsLogicalDeviceId:VirtualInterface'</a>,
--   <a>virtualInterface_awsLogicalDeviceId</a> - The Direct Connect
--   endpoint that terminates the logical connection. This device might be
--   different than the device that terminates the physical connection.
--   
--   <a>$sel:customerRouterConfig:VirtualInterface'</a>,
--   <a>virtualInterface_customerRouterConfig</a> - The customer router
--   configuration.
--   
--   <a>$sel:jumboFrameCapable:VirtualInterface'</a>,
--   <a>virtualInterface_jumboFrameCapable</a> - Indicates whether jumbo
--   frames (9001 MTU) are supported.
--   
--   <a>$sel:routeFilterPrefixes:VirtualInterface'</a>,
--   <a>virtualInterface_routeFilterPrefixes</a> - The routes to be
--   advertised to the Amazon Web Services network in this Region. Applies
--   to public virtual interfaces.
--   
--   <a>$sel:mtu:VirtualInterface'</a>, <a>virtualInterface_mtu</a> - The
--   maximum transmission unit (MTU), in bytes. The supported values are
--   1500 and 9001. The default value is 1500.
--   
--   <a>$sel:virtualInterfaceType:VirtualInterface'</a>,
--   <a>virtualInterface_virtualInterfaceType</a> - The type of virtual
--   interface. The possible values are <tt>private</tt> and
--   <tt>public</tt>.
--   
--   <a>$sel:amazonSideAsn:VirtualInterface'</a>,
--   <a>virtualInterface_amazonSideAsn</a> - The autonomous system number
--   (ASN) for the Amazon side of the connection.
--   
--   <a>$sel:virtualInterfaceId:VirtualInterface'</a>,
--   <a>virtualInterface_virtualInterfaceId</a> - The ID of the virtual
--   interface.
--   
--   <a>$sel:tags:VirtualInterface'</a>, <a>virtualInterface_tags</a> - The
--   tags associated with the virtual interface.
--   
--   <a>$sel:directConnectGatewayId:VirtualInterface'</a>,
--   <a>virtualInterface_directConnectGatewayId</a> - The ID of the Direct
--   Connect gateway.
--   
--   <a>$sel:virtualInterfaceName:VirtualInterface'</a>,
--   <a>virtualInterface_virtualInterfaceName</a> - The name of the virtual
--   interface assigned by the customer network. The name has a maximum of
--   100 characters. The following are valid characters: a-z, 0-9 and a
--   hyphen (-).
--   
--   <a>$sel:virtualInterfaceState:VirtualInterface'</a>,
--   <a>virtualInterface_virtualInterfaceState</a> - The state of the
--   virtual interface. The following are the possible values:
--   
--   <ul>
--   <li><tt>confirming</tt>: The creation of the virtual interface is
--   pending confirmation from the virtual interface owner. If the owner of
--   the virtual interface is different from the owner of the connection on
--   which it is provisioned, then the virtual interface will remain in
--   this state until it is confirmed by the virtual interface owner.</li>
--   <li><tt>verifying</tt>: This state only applies to public virtual
--   interfaces. Each public virtual interface needs validation before the
--   virtual interface can be created.</li>
--   <li><tt>pending</tt>: A virtual interface is in this state from the
--   time that it is created until the virtual interface is ready to
--   forward traffic.</li>
--   <li><tt>available</tt>: A virtual interface that is able to forward
--   traffic.</li>
--   <li><tt>down</tt>: A virtual interface that is BGP down.</li>
--   <li><tt>deleting</tt>: A virtual interface is in this state
--   immediately after calling DeleteVirtualInterface until it can no
--   longer forward traffic.</li>
--   <li><tt>deleted</tt>: A virtual interface that cannot forward
--   traffic.</li>
--   <li><tt>rejected</tt>: The virtual interface owner has declined
--   creation of the virtual interface. If a virtual interface in the
--   <tt>Confirming</tt> state is deleted by the virtual interface owner,
--   the virtual interface enters the <tt>Rejected</tt> state.</li>
--   <li><tt>unknown</tt>: The state of the virtual interface is not
--   available.</li>
--   </ul>
--   
--   <a>$sel:amazonAddress:VirtualInterface'</a>,
--   <a>virtualInterface_amazonAddress</a> - The IP address assigned to the
--   Amazon interface.
--   
--   <a>$sel:addressFamily:VirtualInterface'</a>,
--   <a>virtualInterface_addressFamily</a> - The address family for the BGP
--   peer.
--   
--   <a>$sel:ownerAccount:VirtualInterface'</a>,
--   <a>virtualInterface_ownerAccount</a> - The ID of the account that owns
--   the virtual interface.
--   
--   <a>$sel:region:VirtualInterface'</a>, <a>virtualInterface_region</a> -
--   The Region where the virtual interface is located.
--   
--   <a>$sel:vlan:VirtualInterface'</a>, <a>virtualInterface_vlan</a> - The
--   ID of the VLAN.
--   
--   <a>$sel:location:VirtualInterface'</a>,
--   <a>virtualInterface_location</a> - The location of the connection.
--   
--   <a>$sel:customerAddress:VirtualInterface'</a>,
--   <a>virtualInterface_customerAddress</a> - The IP address assigned to
--   the customer interface.
newVirtualInterface :: VirtualInterface

-- | The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
virtualInterface_authKey :: Lens' VirtualInterface (Maybe Text)

-- | The BGP peers configured on this virtual interface.
virtualInterface_bgpPeers :: Lens' VirtualInterface (Maybe [BGPPeer])

-- | The ID of the virtual private gateway. Applies only to private virtual
--   interfaces.
virtualInterface_virtualGatewayId :: Lens' VirtualInterface (Maybe Text)

-- | The autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
--   
--   The valid values are 1-2147483647.
virtualInterface_asn :: Lens' VirtualInterface (Maybe Int)

-- | The Direct Connect endpoint that terminates the physical connection.
virtualInterface_awsDeviceV2 :: Lens' VirtualInterface (Maybe Text)

-- | The ID of the connection.
virtualInterface_connectionId :: Lens' VirtualInterface (Maybe Text)

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
virtualInterface_awsLogicalDeviceId :: Lens' VirtualInterface (Maybe Text)

-- | The customer router configuration.
virtualInterface_customerRouterConfig :: Lens' VirtualInterface (Maybe Text)

-- | Indicates whether jumbo frames (9001 MTU) are supported.
virtualInterface_jumboFrameCapable :: Lens' VirtualInterface (Maybe Bool)

-- | The routes to be advertised to the Amazon Web Services network in this
--   Region. Applies to public virtual interfaces.
virtualInterface_routeFilterPrefixes :: Lens' VirtualInterface (Maybe [RouteFilterPrefix])

-- | The maximum transmission unit (MTU), in bytes. The supported values
--   are 1500 and 9001. The default value is 1500.
virtualInterface_mtu :: Lens' VirtualInterface (Maybe Int)

-- | The type of virtual interface. The possible values are
--   <tt>private</tt> and <tt>public</tt>.
virtualInterface_virtualInterfaceType :: Lens' VirtualInterface (Maybe Text)

-- | The autonomous system number (ASN) for the Amazon side of the
--   connection.
virtualInterface_amazonSideAsn :: Lens' VirtualInterface (Maybe Integer)

-- | The ID of the virtual interface.
virtualInterface_virtualInterfaceId :: Lens' VirtualInterface (Maybe Text)

-- | The tags associated with the virtual interface.
virtualInterface_tags :: Lens' VirtualInterface (Maybe (NonEmpty Tag))

-- | The ID of the Direct Connect gateway.
virtualInterface_directConnectGatewayId :: Lens' VirtualInterface (Maybe Text)

-- | The name of the virtual interface assigned by the customer network.
--   The name has a maximum of 100 characters. The following are valid
--   characters: a-z, 0-9 and a hyphen (-).
virtualInterface_virtualInterfaceName :: Lens' VirtualInterface (Maybe Text)

-- | The state of the virtual interface. The following are the possible
--   values:
--   
--   <ul>
--   <li><tt>confirming</tt>: The creation of the virtual interface is
--   pending confirmation from the virtual interface owner. If the owner of
--   the virtual interface is different from the owner of the connection on
--   which it is provisioned, then the virtual interface will remain in
--   this state until it is confirmed by the virtual interface owner.</li>
--   <li><tt>verifying</tt>: This state only applies to public virtual
--   interfaces. Each public virtual interface needs validation before the
--   virtual interface can be created.</li>
--   <li><tt>pending</tt>: A virtual interface is in this state from the
--   time that it is created until the virtual interface is ready to
--   forward traffic.</li>
--   <li><tt>available</tt>: A virtual interface that is able to forward
--   traffic.</li>
--   <li><tt>down</tt>: A virtual interface that is BGP down.</li>
--   <li><tt>deleting</tt>: A virtual interface is in this state
--   immediately after calling DeleteVirtualInterface until it can no
--   longer forward traffic.</li>
--   <li><tt>deleted</tt>: A virtual interface that cannot forward
--   traffic.</li>
--   <li><tt>rejected</tt>: The virtual interface owner has declined
--   creation of the virtual interface. If a virtual interface in the
--   <tt>Confirming</tt> state is deleted by the virtual interface owner,
--   the virtual interface enters the <tt>Rejected</tt> state.</li>
--   <li><tt>unknown</tt>: The state of the virtual interface is not
--   available.</li>
--   </ul>
virtualInterface_virtualInterfaceState :: Lens' VirtualInterface (Maybe VirtualInterfaceState)

-- | The IP address assigned to the Amazon interface.
virtualInterface_amazonAddress :: Lens' VirtualInterface (Maybe Text)

-- | The address family for the BGP peer.
virtualInterface_addressFamily :: Lens' VirtualInterface (Maybe AddressFamily)

-- | The ID of the account that owns the virtual interface.
virtualInterface_ownerAccount :: Lens' VirtualInterface (Maybe Text)

-- | The Region where the virtual interface is located.
virtualInterface_region :: Lens' VirtualInterface (Maybe Text)

-- | The ID of the VLAN.
virtualInterface_vlan :: Lens' VirtualInterface (Maybe Int)

-- | The location of the connection.
virtualInterface_location :: Lens' VirtualInterface (Maybe Text)

-- | The IP address assigned to the customer interface.
virtualInterface_customerAddress :: Lens' VirtualInterface (Maybe Text)
instance GHC.Generics.Generic Network.AWS.DirectConnect.AllocatePublicVirtualInterface.AllocatePublicVirtualInterface
instance GHC.Show.Show Network.AWS.DirectConnect.AllocatePublicVirtualInterface.AllocatePublicVirtualInterface
instance GHC.Read.Read Network.AWS.DirectConnect.AllocatePublicVirtualInterface.AllocatePublicVirtualInterface
instance GHC.Classes.Eq Network.AWS.DirectConnect.AllocatePublicVirtualInterface.AllocatePublicVirtualInterface
instance Network.AWS.Types.AWSRequest Network.AWS.DirectConnect.AllocatePublicVirtualInterface.AllocatePublicVirtualInterface
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.AllocatePublicVirtualInterface.AllocatePublicVirtualInterface
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.AllocatePublicVirtualInterface.AllocatePublicVirtualInterface
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DirectConnect.AllocatePublicVirtualInterface.AllocatePublicVirtualInterface
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.AllocatePublicVirtualInterface.AllocatePublicVirtualInterface
instance Network.AWS.Data.Path.ToPath Network.AWS.DirectConnect.AllocatePublicVirtualInterface.AllocatePublicVirtualInterface
instance Network.AWS.Data.Query.ToQuery Network.AWS.DirectConnect.AllocatePublicVirtualInterface.AllocatePublicVirtualInterface


-- | Provisions a private virtual interface to be owned by the specified
--   account.
--   
--   Virtual interfaces created using this action must be confirmed by the
--   owner using ConfirmPrivateVirtualInterface. Until then, the virtual
--   interface is in the <tt>Confirming</tt> state and is not available to
--   handle traffic.
module Network.AWS.DirectConnect.AllocatePrivateVirtualInterface

-- | <i>See:</i> <a>newAllocatePrivateVirtualInterface</a> smart
--   constructor.
data AllocatePrivateVirtualInterface
AllocatePrivateVirtualInterface' :: Text -> Text -> NewPrivateVirtualInterfaceAllocation -> AllocatePrivateVirtualInterface

-- | The ID of the connection on which the private virtual interface is
--   provisioned.
[$sel:connectionId:AllocatePrivateVirtualInterface'] :: AllocatePrivateVirtualInterface -> Text

-- | The ID of the account that owns the virtual private interface.
[$sel:ownerAccount:AllocatePrivateVirtualInterface'] :: AllocatePrivateVirtualInterface -> Text

-- | Information about the private virtual interface.
[$sel:newPrivateVirtualInterfaceAllocation':AllocatePrivateVirtualInterface'] :: AllocatePrivateVirtualInterface -> NewPrivateVirtualInterfaceAllocation

-- | Create a value of <a>AllocatePrivateVirtualInterface</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connectionId:AllocatePrivateVirtualInterface'</a>,
--   <a>allocatePrivateVirtualInterface_connectionId</a> - The ID of the
--   connection on which the private virtual interface is provisioned.
--   
--   <a>$sel:ownerAccount:AllocatePrivateVirtualInterface'</a>,
--   <a>allocatePrivateVirtualInterface_ownerAccount</a> - The ID of the
--   account that owns the virtual private interface.
--   
--   
--   <a>$sel:newPrivateVirtualInterfaceAllocation':AllocatePrivateVirtualInterface'</a>,
--   <a>allocatePrivateVirtualInterface_newPrivateVirtualInterfaceAllocation</a>
--   - Information about the private virtual interface.
newAllocatePrivateVirtualInterface :: Text -> Text -> NewPrivateVirtualInterfaceAllocation -> AllocatePrivateVirtualInterface

-- | The ID of the connection on which the private virtual interface is
--   provisioned.
allocatePrivateVirtualInterface_connectionId :: Lens' AllocatePrivateVirtualInterface Text

-- | The ID of the account that owns the virtual private interface.
allocatePrivateVirtualInterface_ownerAccount :: Lens' AllocatePrivateVirtualInterface Text

-- | Information about the private virtual interface.
allocatePrivateVirtualInterface_newPrivateVirtualInterfaceAllocation :: Lens' AllocatePrivateVirtualInterface NewPrivateVirtualInterfaceAllocation

-- | Information about a virtual interface.
--   
--   <i>See:</i> <a>newVirtualInterface</a> smart constructor.
data VirtualInterface
VirtualInterface' :: Maybe Text -> Maybe [BGPPeer] -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe [RouteFilterPrefix] -> Maybe Int -> Maybe Text -> Maybe Integer -> Maybe Text -> Maybe (NonEmpty Tag) -> Maybe Text -> Maybe Text -> Maybe VirtualInterfaceState -> Maybe Text -> Maybe AddressFamily -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> VirtualInterface

-- | The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
[$sel:authKey:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The BGP peers configured on this virtual interface.
[$sel:bgpPeers:VirtualInterface'] :: VirtualInterface -> Maybe [BGPPeer]

-- | The ID of the virtual private gateway. Applies only to private virtual
--   interfaces.
[$sel:virtualGatewayId:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
--   
--   The valid values are 1-2147483647.
[$sel:asn:VirtualInterface'] :: VirtualInterface -> Maybe Int

-- | The Direct Connect endpoint that terminates the physical connection.
[$sel:awsDeviceV2:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The ID of the connection.
[$sel:connectionId:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
[$sel:awsLogicalDeviceId:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The customer router configuration.
[$sel:customerRouterConfig:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | Indicates whether jumbo frames (9001 MTU) are supported.
[$sel:jumboFrameCapable:VirtualInterface'] :: VirtualInterface -> Maybe Bool

-- | The routes to be advertised to the Amazon Web Services network in this
--   Region. Applies to public virtual interfaces.
[$sel:routeFilterPrefixes:VirtualInterface'] :: VirtualInterface -> Maybe [RouteFilterPrefix]

-- | The maximum transmission unit (MTU), in bytes. The supported values
--   are 1500 and 9001. The default value is 1500.
[$sel:mtu:VirtualInterface'] :: VirtualInterface -> Maybe Int

-- | The type of virtual interface. The possible values are
--   <tt>private</tt> and <tt>public</tt>.
[$sel:virtualInterfaceType:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The autonomous system number (ASN) for the Amazon side of the
--   connection.
[$sel:amazonSideAsn:VirtualInterface'] :: VirtualInterface -> Maybe Integer

-- | The ID of the virtual interface.
[$sel:virtualInterfaceId:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The tags associated with the virtual interface.
[$sel:tags:VirtualInterface'] :: VirtualInterface -> Maybe (NonEmpty Tag)

-- | The ID of the Direct Connect gateway.
[$sel:directConnectGatewayId:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The name of the virtual interface assigned by the customer network.
--   The name has a maximum of 100 characters. The following are valid
--   characters: a-z, 0-9 and a hyphen (-).
[$sel:virtualInterfaceName:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The state of the virtual interface. The following are the possible
--   values:
--   
--   <ul>
--   <li><tt>confirming</tt>: The creation of the virtual interface is
--   pending confirmation from the virtual interface owner. If the owner of
--   the virtual interface is different from the owner of the connection on
--   which it is provisioned, then the virtual interface will remain in
--   this state until it is confirmed by the virtual interface owner.</li>
--   <li><tt>verifying</tt>: This state only applies to public virtual
--   interfaces. Each public virtual interface needs validation before the
--   virtual interface can be created.</li>
--   <li><tt>pending</tt>: A virtual interface is in this state from the
--   time that it is created until the virtual interface is ready to
--   forward traffic.</li>
--   <li><tt>available</tt>: A virtual interface that is able to forward
--   traffic.</li>
--   <li><tt>down</tt>: A virtual interface that is BGP down.</li>
--   <li><tt>deleting</tt>: A virtual interface is in this state
--   immediately after calling DeleteVirtualInterface until it can no
--   longer forward traffic.</li>
--   <li><tt>deleted</tt>: A virtual interface that cannot forward
--   traffic.</li>
--   <li><tt>rejected</tt>: The virtual interface owner has declined
--   creation of the virtual interface. If a virtual interface in the
--   <tt>Confirming</tt> state is deleted by the virtual interface owner,
--   the virtual interface enters the <tt>Rejected</tt> state.</li>
--   <li><tt>unknown</tt>: The state of the virtual interface is not
--   available.</li>
--   </ul>
[$sel:virtualInterfaceState:VirtualInterface'] :: VirtualInterface -> Maybe VirtualInterfaceState

-- | The IP address assigned to the Amazon interface.
[$sel:amazonAddress:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The address family for the BGP peer.
[$sel:addressFamily:VirtualInterface'] :: VirtualInterface -> Maybe AddressFamily

-- | The ID of the account that owns the virtual interface.
[$sel:ownerAccount:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The Region where the virtual interface is located.
[$sel:region:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The ID of the VLAN.
[$sel:vlan:VirtualInterface'] :: VirtualInterface -> Maybe Int

-- | The location of the connection.
[$sel:location:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The IP address assigned to the customer interface.
[$sel:customerAddress:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | Create a value of <a>VirtualInterface</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authKey:VirtualInterface'</a>, <a>virtualInterface_authKey</a>
--   - The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
--   
--   <a>$sel:bgpPeers:VirtualInterface'</a>,
--   <a>virtualInterface_bgpPeers</a> - The BGP peers configured on this
--   virtual interface.
--   
--   <a>$sel:virtualGatewayId:VirtualInterface'</a>,
--   <a>virtualInterface_virtualGatewayId</a> - The ID of the virtual
--   private gateway. Applies only to private virtual interfaces.
--   
--   <a>$sel:asn:VirtualInterface'</a>, <a>virtualInterface_asn</a> - The
--   autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
--   
--   The valid values are 1-2147483647.
--   
--   <a>$sel:awsDeviceV2:VirtualInterface'</a>,
--   <a>virtualInterface_awsDeviceV2</a> - The Direct Connect endpoint that
--   terminates the physical connection.
--   
--   <a>$sel:connectionId:VirtualInterface'</a>,
--   <a>virtualInterface_connectionId</a> - The ID of the connection.
--   
--   <a>$sel:awsLogicalDeviceId:VirtualInterface'</a>,
--   <a>virtualInterface_awsLogicalDeviceId</a> - The Direct Connect
--   endpoint that terminates the logical connection. This device might be
--   different than the device that terminates the physical connection.
--   
--   <a>$sel:customerRouterConfig:VirtualInterface'</a>,
--   <a>virtualInterface_customerRouterConfig</a> - The customer router
--   configuration.
--   
--   <a>$sel:jumboFrameCapable:VirtualInterface'</a>,
--   <a>virtualInterface_jumboFrameCapable</a> - Indicates whether jumbo
--   frames (9001 MTU) are supported.
--   
--   <a>$sel:routeFilterPrefixes:VirtualInterface'</a>,
--   <a>virtualInterface_routeFilterPrefixes</a> - The routes to be
--   advertised to the Amazon Web Services network in this Region. Applies
--   to public virtual interfaces.
--   
--   <a>$sel:mtu:VirtualInterface'</a>, <a>virtualInterface_mtu</a> - The
--   maximum transmission unit (MTU), in bytes. The supported values are
--   1500 and 9001. The default value is 1500.
--   
--   <a>$sel:virtualInterfaceType:VirtualInterface'</a>,
--   <a>virtualInterface_virtualInterfaceType</a> - The type of virtual
--   interface. The possible values are <tt>private</tt> and
--   <tt>public</tt>.
--   
--   <a>$sel:amazonSideAsn:VirtualInterface'</a>,
--   <a>virtualInterface_amazonSideAsn</a> - The autonomous system number
--   (ASN) for the Amazon side of the connection.
--   
--   <a>$sel:virtualInterfaceId:VirtualInterface'</a>,
--   <a>virtualInterface_virtualInterfaceId</a> - The ID of the virtual
--   interface.
--   
--   <a>$sel:tags:VirtualInterface'</a>, <a>virtualInterface_tags</a> - The
--   tags associated with the virtual interface.
--   
--   <a>$sel:directConnectGatewayId:VirtualInterface'</a>,
--   <a>virtualInterface_directConnectGatewayId</a> - The ID of the Direct
--   Connect gateway.
--   
--   <a>$sel:virtualInterfaceName:VirtualInterface'</a>,
--   <a>virtualInterface_virtualInterfaceName</a> - The name of the virtual
--   interface assigned by the customer network. The name has a maximum of
--   100 characters. The following are valid characters: a-z, 0-9 and a
--   hyphen (-).
--   
--   <a>$sel:virtualInterfaceState:VirtualInterface'</a>,
--   <a>virtualInterface_virtualInterfaceState</a> - The state of the
--   virtual interface. The following are the possible values:
--   
--   <ul>
--   <li><tt>confirming</tt>: The creation of the virtual interface is
--   pending confirmation from the virtual interface owner. If the owner of
--   the virtual interface is different from the owner of the connection on
--   which it is provisioned, then the virtual interface will remain in
--   this state until it is confirmed by the virtual interface owner.</li>
--   <li><tt>verifying</tt>: This state only applies to public virtual
--   interfaces. Each public virtual interface needs validation before the
--   virtual interface can be created.</li>
--   <li><tt>pending</tt>: A virtual interface is in this state from the
--   time that it is created until the virtual interface is ready to
--   forward traffic.</li>
--   <li><tt>available</tt>: A virtual interface that is able to forward
--   traffic.</li>
--   <li><tt>down</tt>: A virtual interface that is BGP down.</li>
--   <li><tt>deleting</tt>: A virtual interface is in this state
--   immediately after calling DeleteVirtualInterface until it can no
--   longer forward traffic.</li>
--   <li><tt>deleted</tt>: A virtual interface that cannot forward
--   traffic.</li>
--   <li><tt>rejected</tt>: The virtual interface owner has declined
--   creation of the virtual interface. If a virtual interface in the
--   <tt>Confirming</tt> state is deleted by the virtual interface owner,
--   the virtual interface enters the <tt>Rejected</tt> state.</li>
--   <li><tt>unknown</tt>: The state of the virtual interface is not
--   available.</li>
--   </ul>
--   
--   <a>$sel:amazonAddress:VirtualInterface'</a>,
--   <a>virtualInterface_amazonAddress</a> - The IP address assigned to the
--   Amazon interface.
--   
--   <a>$sel:addressFamily:VirtualInterface'</a>,
--   <a>virtualInterface_addressFamily</a> - The address family for the BGP
--   peer.
--   
--   <a>$sel:ownerAccount:VirtualInterface'</a>,
--   <a>virtualInterface_ownerAccount</a> - The ID of the account that owns
--   the virtual interface.
--   
--   <a>$sel:region:VirtualInterface'</a>, <a>virtualInterface_region</a> -
--   The Region where the virtual interface is located.
--   
--   <a>$sel:vlan:VirtualInterface'</a>, <a>virtualInterface_vlan</a> - The
--   ID of the VLAN.
--   
--   <a>$sel:location:VirtualInterface'</a>,
--   <a>virtualInterface_location</a> - The location of the connection.
--   
--   <a>$sel:customerAddress:VirtualInterface'</a>,
--   <a>virtualInterface_customerAddress</a> - The IP address assigned to
--   the customer interface.
newVirtualInterface :: VirtualInterface

-- | The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
virtualInterface_authKey :: Lens' VirtualInterface (Maybe Text)

-- | The BGP peers configured on this virtual interface.
virtualInterface_bgpPeers :: Lens' VirtualInterface (Maybe [BGPPeer])

-- | The ID of the virtual private gateway. Applies only to private virtual
--   interfaces.
virtualInterface_virtualGatewayId :: Lens' VirtualInterface (Maybe Text)

-- | The autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
--   
--   The valid values are 1-2147483647.
virtualInterface_asn :: Lens' VirtualInterface (Maybe Int)

-- | The Direct Connect endpoint that terminates the physical connection.
virtualInterface_awsDeviceV2 :: Lens' VirtualInterface (Maybe Text)

-- | The ID of the connection.
virtualInterface_connectionId :: Lens' VirtualInterface (Maybe Text)

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
virtualInterface_awsLogicalDeviceId :: Lens' VirtualInterface (Maybe Text)

-- | The customer router configuration.
virtualInterface_customerRouterConfig :: Lens' VirtualInterface (Maybe Text)

-- | Indicates whether jumbo frames (9001 MTU) are supported.
virtualInterface_jumboFrameCapable :: Lens' VirtualInterface (Maybe Bool)

-- | The routes to be advertised to the Amazon Web Services network in this
--   Region. Applies to public virtual interfaces.
virtualInterface_routeFilterPrefixes :: Lens' VirtualInterface (Maybe [RouteFilterPrefix])

-- | The maximum transmission unit (MTU), in bytes. The supported values
--   are 1500 and 9001. The default value is 1500.
virtualInterface_mtu :: Lens' VirtualInterface (Maybe Int)

-- | The type of virtual interface. The possible values are
--   <tt>private</tt> and <tt>public</tt>.
virtualInterface_virtualInterfaceType :: Lens' VirtualInterface (Maybe Text)

-- | The autonomous system number (ASN) for the Amazon side of the
--   connection.
virtualInterface_amazonSideAsn :: Lens' VirtualInterface (Maybe Integer)

-- | The ID of the virtual interface.
virtualInterface_virtualInterfaceId :: Lens' VirtualInterface (Maybe Text)

-- | The tags associated with the virtual interface.
virtualInterface_tags :: Lens' VirtualInterface (Maybe (NonEmpty Tag))

-- | The ID of the Direct Connect gateway.
virtualInterface_directConnectGatewayId :: Lens' VirtualInterface (Maybe Text)

-- | The name of the virtual interface assigned by the customer network.
--   The name has a maximum of 100 characters. The following are valid
--   characters: a-z, 0-9 and a hyphen (-).
virtualInterface_virtualInterfaceName :: Lens' VirtualInterface (Maybe Text)

-- | The state of the virtual interface. The following are the possible
--   values:
--   
--   <ul>
--   <li><tt>confirming</tt>: The creation of the virtual interface is
--   pending confirmation from the virtual interface owner. If the owner of
--   the virtual interface is different from the owner of the connection on
--   which it is provisioned, then the virtual interface will remain in
--   this state until it is confirmed by the virtual interface owner.</li>
--   <li><tt>verifying</tt>: This state only applies to public virtual
--   interfaces. Each public virtual interface needs validation before the
--   virtual interface can be created.</li>
--   <li><tt>pending</tt>: A virtual interface is in this state from the
--   time that it is created until the virtual interface is ready to
--   forward traffic.</li>
--   <li><tt>available</tt>: A virtual interface that is able to forward
--   traffic.</li>
--   <li><tt>down</tt>: A virtual interface that is BGP down.</li>
--   <li><tt>deleting</tt>: A virtual interface is in this state
--   immediately after calling DeleteVirtualInterface until it can no
--   longer forward traffic.</li>
--   <li><tt>deleted</tt>: A virtual interface that cannot forward
--   traffic.</li>
--   <li><tt>rejected</tt>: The virtual interface owner has declined
--   creation of the virtual interface. If a virtual interface in the
--   <tt>Confirming</tt> state is deleted by the virtual interface owner,
--   the virtual interface enters the <tt>Rejected</tt> state.</li>
--   <li><tt>unknown</tt>: The state of the virtual interface is not
--   available.</li>
--   </ul>
virtualInterface_virtualInterfaceState :: Lens' VirtualInterface (Maybe VirtualInterfaceState)

-- | The IP address assigned to the Amazon interface.
virtualInterface_amazonAddress :: Lens' VirtualInterface (Maybe Text)

-- | The address family for the BGP peer.
virtualInterface_addressFamily :: Lens' VirtualInterface (Maybe AddressFamily)

-- | The ID of the account that owns the virtual interface.
virtualInterface_ownerAccount :: Lens' VirtualInterface (Maybe Text)

-- | The Region where the virtual interface is located.
virtualInterface_region :: Lens' VirtualInterface (Maybe Text)

-- | The ID of the VLAN.
virtualInterface_vlan :: Lens' VirtualInterface (Maybe Int)

-- | The location of the connection.
virtualInterface_location :: Lens' VirtualInterface (Maybe Text)

-- | The IP address assigned to the customer interface.
virtualInterface_customerAddress :: Lens' VirtualInterface (Maybe Text)
instance GHC.Generics.Generic Network.AWS.DirectConnect.AllocatePrivateVirtualInterface.AllocatePrivateVirtualInterface
instance GHC.Show.Show Network.AWS.DirectConnect.AllocatePrivateVirtualInterface.AllocatePrivateVirtualInterface
instance GHC.Read.Read Network.AWS.DirectConnect.AllocatePrivateVirtualInterface.AllocatePrivateVirtualInterface
instance GHC.Classes.Eq Network.AWS.DirectConnect.AllocatePrivateVirtualInterface.AllocatePrivateVirtualInterface
instance Network.AWS.Types.AWSRequest Network.AWS.DirectConnect.AllocatePrivateVirtualInterface.AllocatePrivateVirtualInterface
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.AllocatePrivateVirtualInterface.AllocatePrivateVirtualInterface
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.AllocatePrivateVirtualInterface.AllocatePrivateVirtualInterface
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DirectConnect.AllocatePrivateVirtualInterface.AllocatePrivateVirtualInterface
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.AllocatePrivateVirtualInterface.AllocatePrivateVirtualInterface
instance Network.AWS.Data.Path.ToPath Network.AWS.DirectConnect.AllocatePrivateVirtualInterface.AllocatePrivateVirtualInterface
instance Network.AWS.Data.Query.ToQuery Network.AWS.DirectConnect.AllocatePrivateVirtualInterface.AllocatePrivateVirtualInterface


-- | Creates a hosted connection on the specified interconnect or a link
--   aggregation group (LAG) of interconnects.
--   
--   Allocates a VLAN number and a specified amount of capacity (bandwidth)
--   for use by a hosted connection on the specified interconnect or LAG of
--   interconnects. Amazon Web Services polices the hosted connection for
--   the specified capacity and the Direct Connect Partner must also police
--   the hosted connection for the specified capacity.
--   
--   Intended for use by Direct Connect Partners only.
module Network.AWS.DirectConnect.AllocateHostedConnection

-- | <i>See:</i> <a>newAllocateHostedConnection</a> smart constructor.
data AllocateHostedConnection
AllocateHostedConnection' :: Maybe (NonEmpty Tag) -> Text -> Text -> Text -> Text -> Int -> AllocateHostedConnection

-- | The tags associated with the connection.
[$sel:tags:AllocateHostedConnection'] :: AllocateHostedConnection -> Maybe (NonEmpty Tag)

-- | The ID of the interconnect or LAG.
[$sel:connectionId:AllocateHostedConnection'] :: AllocateHostedConnection -> Text

-- | The ID of the account ID of the customer for the connection.
[$sel:ownerAccount:AllocateHostedConnection'] :: AllocateHostedConnection -> Text

-- | The bandwidth of the connection. The possible values are 50Mbps,
--   100Mbps, 200Mbps, 300Mbps, 400Mbps, 500Mbps, 1Gbps, 2Gbps, 5Gbps, and
--   10Gbps. Note that only those Direct Connect Partners who have met
--   specific requirements are allowed to create a 1Gbps, 2Gbps, 5Gbps or
--   10Gbps hosted connection.
[$sel:bandwidth:AllocateHostedConnection'] :: AllocateHostedConnection -> Text

-- | The name of the hosted connection.
[$sel:connectionName:AllocateHostedConnection'] :: AllocateHostedConnection -> Text

-- | The dedicated VLAN provisioned to the hosted connection.
[$sel:vlan:AllocateHostedConnection'] :: AllocateHostedConnection -> Int

-- | Create a value of <a>AllocateHostedConnection</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:AllocateHostedConnection'</a>,
--   <a>allocateHostedConnection_tags</a> - The tags associated with the
--   connection.
--   
--   <a>$sel:connectionId:AllocateHostedConnection'</a>,
--   <a>allocateHostedConnection_connectionId</a> - The ID of the
--   interconnect or LAG.
--   
--   <a>$sel:ownerAccount:AllocateHostedConnection'</a>,
--   <a>allocateHostedConnection_ownerAccount</a> - The ID of the account
--   ID of the customer for the connection.
--   
--   <a>$sel:bandwidth:AllocateHostedConnection'</a>,
--   <a>allocateHostedConnection_bandwidth</a> - The bandwidth of the
--   connection. The possible values are 50Mbps, 100Mbps, 200Mbps, 300Mbps,
--   400Mbps, 500Mbps, 1Gbps, 2Gbps, 5Gbps, and 10Gbps. Note that only
--   those Direct Connect Partners who have met specific requirements are
--   allowed to create a 1Gbps, 2Gbps, 5Gbps or 10Gbps hosted connection.
--   
--   <a>$sel:connectionName:AllocateHostedConnection'</a>,
--   <a>allocateHostedConnection_connectionName</a> - The name of the
--   hosted connection.
--   
--   <a>$sel:vlan:AllocateHostedConnection'</a>,
--   <a>allocateHostedConnection_vlan</a> - The dedicated VLAN provisioned
--   to the hosted connection.
newAllocateHostedConnection :: Text -> Text -> Text -> Text -> Int -> AllocateHostedConnection

-- | The tags associated with the connection.
allocateHostedConnection_tags :: Lens' AllocateHostedConnection (Maybe (NonEmpty Tag))

-- | The ID of the interconnect or LAG.
allocateHostedConnection_connectionId :: Lens' AllocateHostedConnection Text

-- | The ID of the account ID of the customer for the connection.
allocateHostedConnection_ownerAccount :: Lens' AllocateHostedConnection Text

-- | The bandwidth of the connection. The possible values are 50Mbps,
--   100Mbps, 200Mbps, 300Mbps, 400Mbps, 500Mbps, 1Gbps, 2Gbps, 5Gbps, and
--   10Gbps. Note that only those Direct Connect Partners who have met
--   specific requirements are allowed to create a 1Gbps, 2Gbps, 5Gbps or
--   10Gbps hosted connection.
allocateHostedConnection_bandwidth :: Lens' AllocateHostedConnection Text

-- | The name of the hosted connection.
allocateHostedConnection_connectionName :: Lens' AllocateHostedConnection Text

-- | The dedicated VLAN provisioned to the hosted connection.
allocateHostedConnection_vlan :: Lens' AllocateHostedConnection Int

-- | Information about an Direct Connect connection.
--   
--   <i>See:</i> <a>newConnection</a> smart constructor.
data Connection
Connection' :: Maybe Text -> Maybe Text -> Maybe ConnectionState -> Maybe Text -> Maybe [MacSecKey] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe HasLogicalRedundancy -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (NonEmpty Tag) -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Bool -> Connection

-- | The bandwidth of the connection.
[$sel:bandwidth:Connection'] :: Connection -> Maybe Text

-- | The Direct Connect endpoint that terminates the physical connection.
[$sel:awsDeviceV2:Connection'] :: Connection -> Maybe Text

-- | The state of the connection. The following are the possible values:
--   
--   <ul>
--   <li><tt>ordering</tt>: The initial state of a hosted connection
--   provisioned on an interconnect. The connection stays in the ordering
--   state until the owner of the hosted connection confirms or declines
--   the connection order.</li>
--   <li><tt>requested</tt>: The initial state of a standard connection.
--   The connection stays in the requested state until the Letter of
--   Authorization (LOA) is sent to the customer.</li>
--   <li><tt>pending</tt>: The connection has been approved and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is up and the connection is
--   ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The connection is being deleted.</li>
--   <li><tt>deleted</tt>: The connection has been deleted.</li>
--   <li><tt>rejected</tt>: A hosted connection in the <tt>ordering</tt>
--   state enters the <tt>rejected</tt> state if it is deleted by the
--   customer.</li>
--   <li><tt>unknown</tt>: The state of the connection is not
--   available.</li>
--   </ul>
[$sel:connectionState:Connection'] :: Connection -> Maybe ConnectionState

-- | The name of the connection.
[$sel:connectionName:Connection'] :: Connection -> Maybe Text

-- | The MAC Security (MACsec) security keys associated with the
--   connection.
[$sel:macSecKeys:Connection'] :: Connection -> Maybe [MacSecKey]

-- | The name of the service provider associated with the connection.
[$sel:providerName:Connection'] :: Connection -> Maybe Text

-- | The ID of the connection.
[$sel:connectionId:Connection'] :: Connection -> Maybe Text

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
[$sel:awsLogicalDeviceId:Connection'] :: Connection -> Maybe Text

-- | Indicates whether the connection supports a secondary BGP peer in the
--   same address family (IPv4/IPv6).
[$sel:hasLogicalRedundancy:Connection'] :: Connection -> Maybe HasLogicalRedundancy

-- | The Direct Connect endpoint on which the physical connection
--   terminates.
[$sel:awsDevice:Connection'] :: Connection -> Maybe Text

-- | Indicates whether jumbo frames (9001 MTU) are supported.
[$sel:jumboFrameCapable:Connection'] :: Connection -> Maybe Bool

-- | The MAC Security (MACsec) port link status of the connection.
--   
--   The valid values are <tt>Encryption Up</tt>, which means that there is
--   an active Connection Key Name, or <tt>Encryption Down</tt>.
[$sel:portEncryptionStatus:Connection'] :: Connection -> Maybe Text

-- | The ID of the LAG.
[$sel:lagId:Connection'] :: Connection -> Maybe Text

-- | The MAC Security (MACsec) connection encryption mode.
--   
--   The valid values are <tt>no_encrypt</tt>, <tt>should_encrypt</tt>, and
--   <tt>must_encrypt</tt>.
[$sel:encryptionMode:Connection'] :: Connection -> Maybe Text

-- | The name of the Direct Connect service provider associated with the
--   connection.
[$sel:partnerName:Connection'] :: Connection -> Maybe Text

-- | The tags associated with the connection.
[$sel:tags:Connection'] :: Connection -> Maybe (NonEmpty Tag)

-- | The time of the most recent call to DescribeLoa for this connection.
[$sel:loaIssueTime:Connection'] :: Connection -> Maybe POSIX

-- | The ID of the account that owns the connection.
[$sel:ownerAccount:Connection'] :: Connection -> Maybe Text

-- | The Region where the connection is located.
[$sel:region:Connection'] :: Connection -> Maybe Text

-- | The ID of the VLAN.
[$sel:vlan:Connection'] :: Connection -> Maybe Int

-- | The location of the connection.
[$sel:location:Connection'] :: Connection -> Maybe Text

-- | Indicates whether the connection supports MAC Security (MACsec).
[$sel:macSecCapable:Connection'] :: Connection -> Maybe Bool

-- | Create a value of <a>Connection</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bandwidth:Connection'</a>, <a>connection_bandwidth</a> - The
--   bandwidth of the connection.
--   
--   <a>$sel:awsDeviceV2:Connection'</a>, <a>connection_awsDeviceV2</a> -
--   The Direct Connect endpoint that terminates the physical connection.
--   
--   <a>$sel:connectionState:Connection'</a>,
--   <a>connection_connectionState</a> - The state of the connection. The
--   following are the possible values:
--   
--   <ul>
--   <li><tt>ordering</tt>: The initial state of a hosted connection
--   provisioned on an interconnect. The connection stays in the ordering
--   state until the owner of the hosted connection confirms or declines
--   the connection order.</li>
--   <li><tt>requested</tt>: The initial state of a standard connection.
--   The connection stays in the requested state until the Letter of
--   Authorization (LOA) is sent to the customer.</li>
--   <li><tt>pending</tt>: The connection has been approved and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is up and the connection is
--   ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The connection is being deleted.</li>
--   <li><tt>deleted</tt>: The connection has been deleted.</li>
--   <li><tt>rejected</tt>: A hosted connection in the <tt>ordering</tt>
--   state enters the <tt>rejected</tt> state if it is deleted by the
--   customer.</li>
--   <li><tt>unknown</tt>: The state of the connection is not
--   available.</li>
--   </ul>
--   
--   <a>$sel:connectionName:Connection'</a>,
--   <a>connection_connectionName</a> - The name of the connection.
--   
--   <a>$sel:macSecKeys:Connection'</a>, <a>connection_macSecKeys</a> - The
--   MAC Security (MACsec) security keys associated with the connection.
--   
--   <a>$sel:providerName:Connection'</a>, <a>connection_providerName</a> -
--   The name of the service provider associated with the connection.
--   
--   <a>$sel:connectionId:Connection'</a>, <a>connection_connectionId</a> -
--   The ID of the connection.
--   
--   <a>$sel:awsLogicalDeviceId:Connection'</a>,
--   <a>connection_awsLogicalDeviceId</a> - The Direct Connect endpoint
--   that terminates the logical connection. This device might be different
--   than the device that terminates the physical connection.
--   
--   <a>$sel:hasLogicalRedundancy:Connection'</a>,
--   <a>connection_hasLogicalRedundancy</a> - Indicates whether the
--   connection supports a secondary BGP peer in the same address family
--   (IPv4/IPv6).
--   
--   <a>$sel:awsDevice:Connection'</a>, <a>connection_awsDevice</a> - The
--   Direct Connect endpoint on which the physical connection terminates.
--   
--   <a>$sel:jumboFrameCapable:Connection'</a>,
--   <a>connection_jumboFrameCapable</a> - Indicates whether jumbo frames
--   (9001 MTU) are supported.
--   
--   <a>$sel:portEncryptionStatus:Connection'</a>,
--   <a>connection_portEncryptionStatus</a> - The MAC Security (MACsec)
--   port link status of the connection.
--   
--   The valid values are <tt>Encryption Up</tt>, which means that there is
--   an active Connection Key Name, or <tt>Encryption Down</tt>.
--   
--   <a>$sel:lagId:Connection'</a>, <a>connection_lagId</a> - The ID of the
--   LAG.
--   
--   <a>$sel:encryptionMode:Connection'</a>,
--   <a>connection_encryptionMode</a> - The MAC Security (MACsec)
--   connection encryption mode.
--   
--   The valid values are <tt>no_encrypt</tt>, <tt>should_encrypt</tt>, and
--   <tt>must_encrypt</tt>.
--   
--   <a>$sel:partnerName:Connection'</a>, <a>connection_partnerName</a> -
--   The name of the Direct Connect service provider associated with the
--   connection.
--   
--   <a>$sel:tags:Connection'</a>, <a>connection_tags</a> - The tags
--   associated with the connection.
--   
--   <a>$sel:loaIssueTime:Connection'</a>, <a>connection_loaIssueTime</a> -
--   The time of the most recent call to DescribeLoa for this connection.
--   
--   <a>$sel:ownerAccount:Connection'</a>, <a>connection_ownerAccount</a> -
--   The ID of the account that owns the connection.
--   
--   <a>$sel:region:Connection'</a>, <a>connection_region</a> - The Region
--   where the connection is located.
--   
--   <a>$sel:vlan:Connection'</a>, <a>connection_vlan</a> - The ID of the
--   VLAN.
--   
--   <a>$sel:location:Connection'</a>, <a>connection_location</a> - The
--   location of the connection.
--   
--   <a>$sel:macSecCapable:Connection'</a>, <a>connection_macSecCapable</a>
--   - Indicates whether the connection supports MAC Security (MACsec).
newConnection :: Connection

-- | The bandwidth of the connection.
connection_bandwidth :: Lens' Connection (Maybe Text)

-- | The Direct Connect endpoint that terminates the physical connection.
connection_awsDeviceV2 :: Lens' Connection (Maybe Text)

-- | The state of the connection. The following are the possible values:
--   
--   <ul>
--   <li><tt>ordering</tt>: The initial state of a hosted connection
--   provisioned on an interconnect. The connection stays in the ordering
--   state until the owner of the hosted connection confirms or declines
--   the connection order.</li>
--   <li><tt>requested</tt>: The initial state of a standard connection.
--   The connection stays in the requested state until the Letter of
--   Authorization (LOA) is sent to the customer.</li>
--   <li><tt>pending</tt>: The connection has been approved and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is up and the connection is
--   ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The connection is being deleted.</li>
--   <li><tt>deleted</tt>: The connection has been deleted.</li>
--   <li><tt>rejected</tt>: A hosted connection in the <tt>ordering</tt>
--   state enters the <tt>rejected</tt> state if it is deleted by the
--   customer.</li>
--   <li><tt>unknown</tt>: The state of the connection is not
--   available.</li>
--   </ul>
connection_connectionState :: Lens' Connection (Maybe ConnectionState)

-- | The name of the connection.
connection_connectionName :: Lens' Connection (Maybe Text)

-- | The MAC Security (MACsec) security keys associated with the
--   connection.
connection_macSecKeys :: Lens' Connection (Maybe [MacSecKey])

-- | The name of the service provider associated with the connection.
connection_providerName :: Lens' Connection (Maybe Text)

-- | The ID of the connection.
connection_connectionId :: Lens' Connection (Maybe Text)

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
connection_awsLogicalDeviceId :: Lens' Connection (Maybe Text)

-- | Indicates whether the connection supports a secondary BGP peer in the
--   same address family (IPv4/IPv6).
connection_hasLogicalRedundancy :: Lens' Connection (Maybe HasLogicalRedundancy)

-- | The Direct Connect endpoint on which the physical connection
--   terminates.
connection_awsDevice :: Lens' Connection (Maybe Text)

-- | Indicates whether jumbo frames (9001 MTU) are supported.
connection_jumboFrameCapable :: Lens' Connection (Maybe Bool)

-- | The MAC Security (MACsec) port link status of the connection.
--   
--   The valid values are <tt>Encryption Up</tt>, which means that there is
--   an active Connection Key Name, or <tt>Encryption Down</tt>.
connection_portEncryptionStatus :: Lens' Connection (Maybe Text)

-- | The ID of the LAG.
connection_lagId :: Lens' Connection (Maybe Text)

-- | The MAC Security (MACsec) connection encryption mode.
--   
--   The valid values are <tt>no_encrypt</tt>, <tt>should_encrypt</tt>, and
--   <tt>must_encrypt</tt>.
connection_encryptionMode :: Lens' Connection (Maybe Text)

-- | The name of the Direct Connect service provider associated with the
--   connection.
connection_partnerName :: Lens' Connection (Maybe Text)

-- | The tags associated with the connection.
connection_tags :: Lens' Connection (Maybe (NonEmpty Tag))

-- | The time of the most recent call to DescribeLoa for this connection.
connection_loaIssueTime :: Lens' Connection (Maybe UTCTime)

-- | The ID of the account that owns the connection.
connection_ownerAccount :: Lens' Connection (Maybe Text)

-- | The Region where the connection is located.
connection_region :: Lens' Connection (Maybe Text)

-- | The ID of the VLAN.
connection_vlan :: Lens' Connection (Maybe Int)

-- | The location of the connection.
connection_location :: Lens' Connection (Maybe Text)

-- | Indicates whether the connection supports MAC Security (MACsec).
connection_macSecCapable :: Lens' Connection (Maybe Bool)
instance GHC.Generics.Generic Network.AWS.DirectConnect.AllocateHostedConnection.AllocateHostedConnection
instance GHC.Show.Show Network.AWS.DirectConnect.AllocateHostedConnection.AllocateHostedConnection
instance GHC.Read.Read Network.AWS.DirectConnect.AllocateHostedConnection.AllocateHostedConnection
instance GHC.Classes.Eq Network.AWS.DirectConnect.AllocateHostedConnection.AllocateHostedConnection
instance Network.AWS.Types.AWSRequest Network.AWS.DirectConnect.AllocateHostedConnection.AllocateHostedConnection
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.AllocateHostedConnection.AllocateHostedConnection
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.AllocateHostedConnection.AllocateHostedConnection
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DirectConnect.AllocateHostedConnection.AllocateHostedConnection
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.AllocateHostedConnection.AllocateHostedConnection
instance Network.AWS.Data.Path.ToPath Network.AWS.DirectConnect.AllocateHostedConnection.AllocateHostedConnection
instance Network.AWS.Data.Query.ToQuery Network.AWS.DirectConnect.AllocateHostedConnection.AllocateHostedConnection


-- | Accepts a proposal request to attach a virtual private gateway or
--   transit gateway to a Direct Connect gateway.
module Network.AWS.DirectConnect.AcceptDirectConnectGatewayAssociationProposal

-- | <i>See:</i> <a>newAcceptDirectConnectGatewayAssociationProposal</a>
--   smart constructor.
data AcceptDirectConnectGatewayAssociationProposal
AcceptDirectConnectGatewayAssociationProposal' :: Maybe [RouteFilterPrefix] -> Text -> Text -> Text -> AcceptDirectConnectGatewayAssociationProposal

-- | Overrides the Amazon VPC prefixes advertised to the Direct Connect
--   gateway.
--   
--   For information about how to set the prefixes, see <a>Allowed
--   Prefixes</a> in the <i>Direct Connect User Guide</i>.
[$sel:overrideAllowedPrefixesToDirectConnectGateway:AcceptDirectConnectGatewayAssociationProposal'] :: AcceptDirectConnectGatewayAssociationProposal -> Maybe [RouteFilterPrefix]

-- | The ID of the Direct Connect gateway.
[$sel:directConnectGatewayId:AcceptDirectConnectGatewayAssociationProposal'] :: AcceptDirectConnectGatewayAssociationProposal -> Text

-- | The ID of the request proposal.
[$sel:proposalId:AcceptDirectConnectGatewayAssociationProposal'] :: AcceptDirectConnectGatewayAssociationProposal -> Text

-- | The ID of the account that owns the virtual private gateway or transit
--   gateway.
[$sel:associatedGatewayOwnerAccount:AcceptDirectConnectGatewayAssociationProposal'] :: AcceptDirectConnectGatewayAssociationProposal -> Text

-- | Create a value of <a>AcceptDirectConnectGatewayAssociationProposal</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:overrideAllowedPrefixesToDirectConnectGateway:AcceptDirectConnectGatewayAssociationProposal'</a>,
--   <a>acceptDirectConnectGatewayAssociationProposal_overrideAllowedPrefixesToDirectConnectGateway</a>
--   - Overrides the Amazon VPC prefixes advertised to the Direct Connect
--   gateway.
--   
--   For information about how to set the prefixes, see <a>Allowed
--   Prefixes</a> in the <i>Direct Connect User Guide</i>.
--   
--   
--   <a>$sel:directConnectGatewayId:AcceptDirectConnectGatewayAssociationProposal'</a>,
--   <a>acceptDirectConnectGatewayAssociationProposal_directConnectGatewayId</a>
--   - The ID of the Direct Connect gateway.
--   
--   <a>$sel:proposalId:AcceptDirectConnectGatewayAssociationProposal'</a>,
--   <a>acceptDirectConnectGatewayAssociationProposal_proposalId</a> - The
--   ID of the request proposal.
--   
--   
--   <a>$sel:associatedGatewayOwnerAccount:AcceptDirectConnectGatewayAssociationProposal'</a>,
--   <a>acceptDirectConnectGatewayAssociationProposal_associatedGatewayOwnerAccount</a>
--   - The ID of the account that owns the virtual private gateway or
--   transit gateway.
newAcceptDirectConnectGatewayAssociationProposal :: Text -> Text -> Text -> AcceptDirectConnectGatewayAssociationProposal

-- | Overrides the Amazon VPC prefixes advertised to the Direct Connect
--   gateway.
--   
--   For information about how to set the prefixes, see <a>Allowed
--   Prefixes</a> in the <i>Direct Connect User Guide</i>.
acceptDirectConnectGatewayAssociationProposal_overrideAllowedPrefixesToDirectConnectGateway :: Lens' AcceptDirectConnectGatewayAssociationProposal (Maybe [RouteFilterPrefix])

-- | The ID of the Direct Connect gateway.
acceptDirectConnectGatewayAssociationProposal_directConnectGatewayId :: Lens' AcceptDirectConnectGatewayAssociationProposal Text

-- | The ID of the request proposal.
acceptDirectConnectGatewayAssociationProposal_proposalId :: Lens' AcceptDirectConnectGatewayAssociationProposal Text

-- | The ID of the account that owns the virtual private gateway or transit
--   gateway.
acceptDirectConnectGatewayAssociationProposal_associatedGatewayOwnerAccount :: Lens' AcceptDirectConnectGatewayAssociationProposal Text

-- | <i>See:</i>
--   <a>newAcceptDirectConnectGatewayAssociationProposalResponse</a> smart
--   constructor.
data AcceptDirectConnectGatewayAssociationProposalResponse
AcceptDirectConnectGatewayAssociationProposalResponse' :: Maybe DirectConnectGatewayAssociation -> Int -> AcceptDirectConnectGatewayAssociationProposalResponse
[$sel:directConnectGatewayAssociation:AcceptDirectConnectGatewayAssociationProposalResponse'] :: AcceptDirectConnectGatewayAssociationProposalResponse -> Maybe DirectConnectGatewayAssociation

-- | The response's http status code.
[$sel:httpStatus:AcceptDirectConnectGatewayAssociationProposalResponse'] :: AcceptDirectConnectGatewayAssociationProposalResponse -> Int

-- | Create a value of
--   <a>AcceptDirectConnectGatewayAssociationProposalResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:directConnectGatewayAssociation:AcceptDirectConnectGatewayAssociationProposalResponse'</a>,
--   <a>acceptDirectConnectGatewayAssociationProposalResponse_directConnectGatewayAssociation</a>
--   - Undocumented member.
--   
--   
--   <a>$sel:httpStatus:AcceptDirectConnectGatewayAssociationProposalResponse'</a>,
--   <a>acceptDirectConnectGatewayAssociationProposalResponse_httpStatus</a>
--   - The response's http status code.
newAcceptDirectConnectGatewayAssociationProposalResponse :: Int -> AcceptDirectConnectGatewayAssociationProposalResponse

-- | Undocumented member.
acceptDirectConnectGatewayAssociationProposalResponse_directConnectGatewayAssociation :: Lens' AcceptDirectConnectGatewayAssociationProposalResponse (Maybe DirectConnectGatewayAssociation)

-- | The response's http status code.
acceptDirectConnectGatewayAssociationProposalResponse_httpStatus :: Lens' AcceptDirectConnectGatewayAssociationProposalResponse Int
instance GHC.Generics.Generic Network.AWS.DirectConnect.AcceptDirectConnectGatewayAssociationProposal.AcceptDirectConnectGatewayAssociationProposal
instance GHC.Show.Show Network.AWS.DirectConnect.AcceptDirectConnectGatewayAssociationProposal.AcceptDirectConnectGatewayAssociationProposal
instance GHC.Read.Read Network.AWS.DirectConnect.AcceptDirectConnectGatewayAssociationProposal.AcceptDirectConnectGatewayAssociationProposal
instance GHC.Classes.Eq Network.AWS.DirectConnect.AcceptDirectConnectGatewayAssociationProposal.AcceptDirectConnectGatewayAssociationProposal
instance GHC.Generics.Generic Network.AWS.DirectConnect.AcceptDirectConnectGatewayAssociationProposal.AcceptDirectConnectGatewayAssociationProposalResponse
instance GHC.Show.Show Network.AWS.DirectConnect.AcceptDirectConnectGatewayAssociationProposal.AcceptDirectConnectGatewayAssociationProposalResponse
instance GHC.Read.Read Network.AWS.DirectConnect.AcceptDirectConnectGatewayAssociationProposal.AcceptDirectConnectGatewayAssociationProposalResponse
instance GHC.Classes.Eq Network.AWS.DirectConnect.AcceptDirectConnectGatewayAssociationProposal.AcceptDirectConnectGatewayAssociationProposalResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DirectConnect.AcceptDirectConnectGatewayAssociationProposal.AcceptDirectConnectGatewayAssociationProposal
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.AcceptDirectConnectGatewayAssociationProposal.AcceptDirectConnectGatewayAssociationProposalResponse
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.AcceptDirectConnectGatewayAssociationProposal.AcceptDirectConnectGatewayAssociationProposal
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.AcceptDirectConnectGatewayAssociationProposal.AcceptDirectConnectGatewayAssociationProposal
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DirectConnect.AcceptDirectConnectGatewayAssociationProposal.AcceptDirectConnectGatewayAssociationProposal
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.AcceptDirectConnectGatewayAssociationProposal.AcceptDirectConnectGatewayAssociationProposal
instance Network.AWS.Data.Path.ToPath Network.AWS.DirectConnect.AcceptDirectConnectGatewayAssociationProposal.AcceptDirectConnectGatewayAssociationProposal
instance Network.AWS.Data.Query.ToQuery Network.AWS.DirectConnect.AcceptDirectConnectGatewayAssociationProposal.AcceptDirectConnectGatewayAssociationProposal


-- | Removes one or more tags from the specified Direct Connect resource.
module Network.AWS.DirectConnect.UntagResource

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | The Amazon Resource Name (ARN) of the resource.
[$sel:resourceArn:UntagResource'] :: UntagResource -> Text

-- | The tag keys of the tags to remove.
[$sel:tagKeys:UntagResource'] :: UntagResource -> [Text]

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The Amazon Resource Name (ARN) of
--   the resource.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   tag keys of the tags to remove.
newUntagResource :: Text -> UntagResource

-- | The Amazon Resource Name (ARN) of the resource.
untagResource_resourceArn :: Lens' UntagResource Text

-- | The tag keys of the tags to remove.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:UntagResourceResponse'] :: UntagResourceResponse -> Int

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int
instance GHC.Generics.Generic Network.AWS.DirectConnect.UntagResource.UntagResource
instance GHC.Show.Show Network.AWS.DirectConnect.UntagResource.UntagResource
instance GHC.Read.Read Network.AWS.DirectConnect.UntagResource.UntagResource
instance GHC.Classes.Eq Network.AWS.DirectConnect.UntagResource.UntagResource
instance GHC.Generics.Generic Network.AWS.DirectConnect.UntagResource.UntagResourceResponse
instance GHC.Show.Show Network.AWS.DirectConnect.UntagResource.UntagResourceResponse
instance GHC.Read.Read Network.AWS.DirectConnect.UntagResource.UntagResourceResponse
instance GHC.Classes.Eq Network.AWS.DirectConnect.UntagResource.UntagResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DirectConnect.UntagResource.UntagResource
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.UntagResource.UntagResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.UntagResource.UntagResource
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.UntagResource.UntagResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DirectConnect.UntagResource.UntagResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.UntagResource.UntagResource
instance Network.AWS.Data.Path.ToPath Network.AWS.DirectConnect.UntagResource.UntagResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.DirectConnect.UntagResource.UntagResource


-- | Updates the Direct Connect dedicated connection configuration.
--   
--   You can update the following parameters for a connection:
--   
--   <ul>
--   <li>The connection name</li>
--   <li>The connection's MAC Security (MACsec) encryption mode.</li>
--   </ul>
module Network.AWS.DirectConnect.UpdateConnection

-- | <i>See:</i> <a>newUpdateConnection</a> smart constructor.
data UpdateConnection
UpdateConnection' :: Maybe Text -> Maybe Text -> Text -> UpdateConnection

-- | The name of the connection.
[$sel:connectionName:UpdateConnection'] :: UpdateConnection -> Maybe Text

-- | The connection MAC Security (MACsec) encryption mode.
--   
--   The valid values are <tt>no_encrypt</tt>, <tt>should_encrypt</tt>, and
--   <tt>must_encrypt</tt>.
[$sel:encryptionMode:UpdateConnection'] :: UpdateConnection -> Maybe Text

-- | The ID of the dedicated connection.
--   
--   You can use DescribeConnections to retrieve the connection ID.
[$sel:connectionId:UpdateConnection'] :: UpdateConnection -> Text

-- | Create a value of <a>UpdateConnection</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connectionName:UpdateConnection'</a>,
--   <a>updateConnection_connectionName</a> - The name of the connection.
--   
--   <a>$sel:encryptionMode:UpdateConnection'</a>,
--   <a>updateConnection_encryptionMode</a> - The connection MAC Security
--   (MACsec) encryption mode.
--   
--   The valid values are <tt>no_encrypt</tt>, <tt>should_encrypt</tt>, and
--   <tt>must_encrypt</tt>.
--   
--   <a>$sel:connectionId:UpdateConnection'</a>,
--   <a>updateConnection_connectionId</a> - The ID of the dedicated
--   connection.
--   
--   You can use DescribeConnections to retrieve the connection ID.
newUpdateConnection :: Text -> UpdateConnection

-- | The name of the connection.
updateConnection_connectionName :: Lens' UpdateConnection (Maybe Text)

-- | The connection MAC Security (MACsec) encryption mode.
--   
--   The valid values are <tt>no_encrypt</tt>, <tt>should_encrypt</tt>, and
--   <tt>must_encrypt</tt>.
updateConnection_encryptionMode :: Lens' UpdateConnection (Maybe Text)

-- | The ID of the dedicated connection.
--   
--   You can use DescribeConnections to retrieve the connection ID.
updateConnection_connectionId :: Lens' UpdateConnection Text

-- | Information about an Direct Connect connection.
--   
--   <i>See:</i> <a>newConnection</a> smart constructor.
data Connection
Connection' :: Maybe Text -> Maybe Text -> Maybe ConnectionState -> Maybe Text -> Maybe [MacSecKey] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe HasLogicalRedundancy -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (NonEmpty Tag) -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Bool -> Connection

-- | The bandwidth of the connection.
[$sel:bandwidth:Connection'] :: Connection -> Maybe Text

-- | The Direct Connect endpoint that terminates the physical connection.
[$sel:awsDeviceV2:Connection'] :: Connection -> Maybe Text

-- | The state of the connection. The following are the possible values:
--   
--   <ul>
--   <li><tt>ordering</tt>: The initial state of a hosted connection
--   provisioned on an interconnect. The connection stays in the ordering
--   state until the owner of the hosted connection confirms or declines
--   the connection order.</li>
--   <li><tt>requested</tt>: The initial state of a standard connection.
--   The connection stays in the requested state until the Letter of
--   Authorization (LOA) is sent to the customer.</li>
--   <li><tt>pending</tt>: The connection has been approved and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is up and the connection is
--   ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The connection is being deleted.</li>
--   <li><tt>deleted</tt>: The connection has been deleted.</li>
--   <li><tt>rejected</tt>: A hosted connection in the <tt>ordering</tt>
--   state enters the <tt>rejected</tt> state if it is deleted by the
--   customer.</li>
--   <li><tt>unknown</tt>: The state of the connection is not
--   available.</li>
--   </ul>
[$sel:connectionState:Connection'] :: Connection -> Maybe ConnectionState

-- | The name of the connection.
[$sel:connectionName:Connection'] :: Connection -> Maybe Text

-- | The MAC Security (MACsec) security keys associated with the
--   connection.
[$sel:macSecKeys:Connection'] :: Connection -> Maybe [MacSecKey]

-- | The name of the service provider associated with the connection.
[$sel:providerName:Connection'] :: Connection -> Maybe Text

-- | The ID of the connection.
[$sel:connectionId:Connection'] :: Connection -> Maybe Text

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
[$sel:awsLogicalDeviceId:Connection'] :: Connection -> Maybe Text

-- | Indicates whether the connection supports a secondary BGP peer in the
--   same address family (IPv4/IPv6).
[$sel:hasLogicalRedundancy:Connection'] :: Connection -> Maybe HasLogicalRedundancy

-- | The Direct Connect endpoint on which the physical connection
--   terminates.
[$sel:awsDevice:Connection'] :: Connection -> Maybe Text

-- | Indicates whether jumbo frames (9001 MTU) are supported.
[$sel:jumboFrameCapable:Connection'] :: Connection -> Maybe Bool

-- | The MAC Security (MACsec) port link status of the connection.
--   
--   The valid values are <tt>Encryption Up</tt>, which means that there is
--   an active Connection Key Name, or <tt>Encryption Down</tt>.
[$sel:portEncryptionStatus:Connection'] :: Connection -> Maybe Text

-- | The ID of the LAG.
[$sel:lagId:Connection'] :: Connection -> Maybe Text

-- | The MAC Security (MACsec) connection encryption mode.
--   
--   The valid values are <tt>no_encrypt</tt>, <tt>should_encrypt</tt>, and
--   <tt>must_encrypt</tt>.
[$sel:encryptionMode:Connection'] :: Connection -> Maybe Text

-- | The name of the Direct Connect service provider associated with the
--   connection.
[$sel:partnerName:Connection'] :: Connection -> Maybe Text

-- | The tags associated with the connection.
[$sel:tags:Connection'] :: Connection -> Maybe (NonEmpty Tag)

-- | The time of the most recent call to DescribeLoa for this connection.
[$sel:loaIssueTime:Connection'] :: Connection -> Maybe POSIX

-- | The ID of the account that owns the connection.
[$sel:ownerAccount:Connection'] :: Connection -> Maybe Text

-- | The Region where the connection is located.
[$sel:region:Connection'] :: Connection -> Maybe Text

-- | The ID of the VLAN.
[$sel:vlan:Connection'] :: Connection -> Maybe Int

-- | The location of the connection.
[$sel:location:Connection'] :: Connection -> Maybe Text

-- | Indicates whether the connection supports MAC Security (MACsec).
[$sel:macSecCapable:Connection'] :: Connection -> Maybe Bool

-- | Create a value of <a>Connection</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bandwidth:Connection'</a>, <a>connection_bandwidth</a> - The
--   bandwidth of the connection.
--   
--   <a>$sel:awsDeviceV2:Connection'</a>, <a>connection_awsDeviceV2</a> -
--   The Direct Connect endpoint that terminates the physical connection.
--   
--   <a>$sel:connectionState:Connection'</a>,
--   <a>connection_connectionState</a> - The state of the connection. The
--   following are the possible values:
--   
--   <ul>
--   <li><tt>ordering</tt>: The initial state of a hosted connection
--   provisioned on an interconnect. The connection stays in the ordering
--   state until the owner of the hosted connection confirms or declines
--   the connection order.</li>
--   <li><tt>requested</tt>: The initial state of a standard connection.
--   The connection stays in the requested state until the Letter of
--   Authorization (LOA) is sent to the customer.</li>
--   <li><tt>pending</tt>: The connection has been approved and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is up and the connection is
--   ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The connection is being deleted.</li>
--   <li><tt>deleted</tt>: The connection has been deleted.</li>
--   <li><tt>rejected</tt>: A hosted connection in the <tt>ordering</tt>
--   state enters the <tt>rejected</tt> state if it is deleted by the
--   customer.</li>
--   <li><tt>unknown</tt>: The state of the connection is not
--   available.</li>
--   </ul>
--   
--   <a>$sel:connectionName:Connection'</a>,
--   <a>connection_connectionName</a> - The name of the connection.
--   
--   <a>$sel:macSecKeys:Connection'</a>, <a>connection_macSecKeys</a> - The
--   MAC Security (MACsec) security keys associated with the connection.
--   
--   <a>$sel:providerName:Connection'</a>, <a>connection_providerName</a> -
--   The name of the service provider associated with the connection.
--   
--   <a>$sel:connectionId:Connection'</a>, <a>connection_connectionId</a> -
--   The ID of the connection.
--   
--   <a>$sel:awsLogicalDeviceId:Connection'</a>,
--   <a>connection_awsLogicalDeviceId</a> - The Direct Connect endpoint
--   that terminates the logical connection. This device might be different
--   than the device that terminates the physical connection.
--   
--   <a>$sel:hasLogicalRedundancy:Connection'</a>,
--   <a>connection_hasLogicalRedundancy</a> - Indicates whether the
--   connection supports a secondary BGP peer in the same address family
--   (IPv4/IPv6).
--   
--   <a>$sel:awsDevice:Connection'</a>, <a>connection_awsDevice</a> - The
--   Direct Connect endpoint on which the physical connection terminates.
--   
--   <a>$sel:jumboFrameCapable:Connection'</a>,
--   <a>connection_jumboFrameCapable</a> - Indicates whether jumbo frames
--   (9001 MTU) are supported.
--   
--   <a>$sel:portEncryptionStatus:Connection'</a>,
--   <a>connection_portEncryptionStatus</a> - The MAC Security (MACsec)
--   port link status of the connection.
--   
--   The valid values are <tt>Encryption Up</tt>, which means that there is
--   an active Connection Key Name, or <tt>Encryption Down</tt>.
--   
--   <a>$sel:lagId:Connection'</a>, <a>connection_lagId</a> - The ID of the
--   LAG.
--   
--   <a>$sel:encryptionMode:Connection'</a>,
--   <a>connection_encryptionMode</a> - The MAC Security (MACsec)
--   connection encryption mode.
--   
--   The valid values are <tt>no_encrypt</tt>, <tt>should_encrypt</tt>, and
--   <tt>must_encrypt</tt>.
--   
--   <a>$sel:partnerName:Connection'</a>, <a>connection_partnerName</a> -
--   The name of the Direct Connect service provider associated with the
--   connection.
--   
--   <a>$sel:tags:Connection'</a>, <a>connection_tags</a> - The tags
--   associated with the connection.
--   
--   <a>$sel:loaIssueTime:Connection'</a>, <a>connection_loaIssueTime</a> -
--   The time of the most recent call to DescribeLoa for this connection.
--   
--   <a>$sel:ownerAccount:Connection'</a>, <a>connection_ownerAccount</a> -
--   The ID of the account that owns the connection.
--   
--   <a>$sel:region:Connection'</a>, <a>connection_region</a> - The Region
--   where the connection is located.
--   
--   <a>$sel:vlan:Connection'</a>, <a>connection_vlan</a> - The ID of the
--   VLAN.
--   
--   <a>$sel:location:Connection'</a>, <a>connection_location</a> - The
--   location of the connection.
--   
--   <a>$sel:macSecCapable:Connection'</a>, <a>connection_macSecCapable</a>
--   - Indicates whether the connection supports MAC Security (MACsec).
newConnection :: Connection

-- | The bandwidth of the connection.
connection_bandwidth :: Lens' Connection (Maybe Text)

-- | The Direct Connect endpoint that terminates the physical connection.
connection_awsDeviceV2 :: Lens' Connection (Maybe Text)

-- | The state of the connection. The following are the possible values:
--   
--   <ul>
--   <li><tt>ordering</tt>: The initial state of a hosted connection
--   provisioned on an interconnect. The connection stays in the ordering
--   state until the owner of the hosted connection confirms or declines
--   the connection order.</li>
--   <li><tt>requested</tt>: The initial state of a standard connection.
--   The connection stays in the requested state until the Letter of
--   Authorization (LOA) is sent to the customer.</li>
--   <li><tt>pending</tt>: The connection has been approved and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is up and the connection is
--   ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The connection is being deleted.</li>
--   <li><tt>deleted</tt>: The connection has been deleted.</li>
--   <li><tt>rejected</tt>: A hosted connection in the <tt>ordering</tt>
--   state enters the <tt>rejected</tt> state if it is deleted by the
--   customer.</li>
--   <li><tt>unknown</tt>: The state of the connection is not
--   available.</li>
--   </ul>
connection_connectionState :: Lens' Connection (Maybe ConnectionState)

-- | The name of the connection.
connection_connectionName :: Lens' Connection (Maybe Text)

-- | The MAC Security (MACsec) security keys associated with the
--   connection.
connection_macSecKeys :: Lens' Connection (Maybe [MacSecKey])

-- | The name of the service provider associated with the connection.
connection_providerName :: Lens' Connection (Maybe Text)

-- | The ID of the connection.
connection_connectionId :: Lens' Connection (Maybe Text)

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
connection_awsLogicalDeviceId :: Lens' Connection (Maybe Text)

-- | Indicates whether the connection supports a secondary BGP peer in the
--   same address family (IPv4/IPv6).
connection_hasLogicalRedundancy :: Lens' Connection (Maybe HasLogicalRedundancy)

-- | The Direct Connect endpoint on which the physical connection
--   terminates.
connection_awsDevice :: Lens' Connection (Maybe Text)

-- | Indicates whether jumbo frames (9001 MTU) are supported.
connection_jumboFrameCapable :: Lens' Connection (Maybe Bool)

-- | The MAC Security (MACsec) port link status of the connection.
--   
--   The valid values are <tt>Encryption Up</tt>, which means that there is
--   an active Connection Key Name, or <tt>Encryption Down</tt>.
connection_portEncryptionStatus :: Lens' Connection (Maybe Text)

-- | The ID of the LAG.
connection_lagId :: Lens' Connection (Maybe Text)

-- | The MAC Security (MACsec) connection encryption mode.
--   
--   The valid values are <tt>no_encrypt</tt>, <tt>should_encrypt</tt>, and
--   <tt>must_encrypt</tt>.
connection_encryptionMode :: Lens' Connection (Maybe Text)

-- | The name of the Direct Connect service provider associated with the
--   connection.
connection_partnerName :: Lens' Connection (Maybe Text)

-- | The tags associated with the connection.
connection_tags :: Lens' Connection (Maybe (NonEmpty Tag))

-- | The time of the most recent call to DescribeLoa for this connection.
connection_loaIssueTime :: Lens' Connection (Maybe UTCTime)

-- | The ID of the account that owns the connection.
connection_ownerAccount :: Lens' Connection (Maybe Text)

-- | The Region where the connection is located.
connection_region :: Lens' Connection (Maybe Text)

-- | The ID of the VLAN.
connection_vlan :: Lens' Connection (Maybe Int)

-- | The location of the connection.
connection_location :: Lens' Connection (Maybe Text)

-- | Indicates whether the connection supports MAC Security (MACsec).
connection_macSecCapable :: Lens' Connection (Maybe Bool)
instance GHC.Generics.Generic Network.AWS.DirectConnect.UpdateConnection.UpdateConnection
instance GHC.Show.Show Network.AWS.DirectConnect.UpdateConnection.UpdateConnection
instance GHC.Read.Read Network.AWS.DirectConnect.UpdateConnection.UpdateConnection
instance GHC.Classes.Eq Network.AWS.DirectConnect.UpdateConnection.UpdateConnection
instance Network.AWS.Types.AWSRequest Network.AWS.DirectConnect.UpdateConnection.UpdateConnection
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.UpdateConnection.UpdateConnection
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.UpdateConnection.UpdateConnection
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DirectConnect.UpdateConnection.UpdateConnection
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.UpdateConnection.UpdateConnection
instance Network.AWS.Data.Path.ToPath Network.AWS.DirectConnect.UpdateConnection.UpdateConnection
instance Network.AWS.Data.Query.ToQuery Network.AWS.DirectConnect.UpdateConnection.UpdateConnection


-- | Updates the specified attributes of the Direct Connect gateway
--   association.
--   
--   Add or remove prefixes from the association.
module Network.AWS.DirectConnect.UpdateDirectConnectGatewayAssociation

-- | <i>See:</i> <a>newUpdateDirectConnectGatewayAssociation</a> smart
--   constructor.
data UpdateDirectConnectGatewayAssociation
UpdateDirectConnectGatewayAssociation' :: Maybe [RouteFilterPrefix] -> Maybe [RouteFilterPrefix] -> Maybe Text -> UpdateDirectConnectGatewayAssociation

-- | The Amazon VPC prefixes to no longer advertise to the Direct Connect
--   gateway.
[$sel:removeAllowedPrefixesToDirectConnectGateway:UpdateDirectConnectGatewayAssociation'] :: UpdateDirectConnectGatewayAssociation -> Maybe [RouteFilterPrefix]

-- | The Amazon VPC prefixes to advertise to the Direct Connect gateway.
[$sel:addAllowedPrefixesToDirectConnectGateway:UpdateDirectConnectGatewayAssociation'] :: UpdateDirectConnectGatewayAssociation -> Maybe [RouteFilterPrefix]

-- | The ID of the Direct Connect gateway association.
[$sel:associationId:UpdateDirectConnectGatewayAssociation'] :: UpdateDirectConnectGatewayAssociation -> Maybe Text

-- | Create a value of <a>UpdateDirectConnectGatewayAssociation</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:removeAllowedPrefixesToDirectConnectGateway:UpdateDirectConnectGatewayAssociation'</a>,
--   <a>updateDirectConnectGatewayAssociation_removeAllowedPrefixesToDirectConnectGateway</a>
--   - The Amazon VPC prefixes to no longer advertise to the Direct Connect
--   gateway.
--   
--   
--   <a>$sel:addAllowedPrefixesToDirectConnectGateway:UpdateDirectConnectGatewayAssociation'</a>,
--   <a>updateDirectConnectGatewayAssociation_addAllowedPrefixesToDirectConnectGateway</a>
--   - The Amazon VPC prefixes to advertise to the Direct Connect gateway.
--   
--   <a>$sel:associationId:UpdateDirectConnectGatewayAssociation'</a>,
--   <a>updateDirectConnectGatewayAssociation_associationId</a> - The ID of
--   the Direct Connect gateway association.
newUpdateDirectConnectGatewayAssociation :: UpdateDirectConnectGatewayAssociation

-- | The Amazon VPC prefixes to no longer advertise to the Direct Connect
--   gateway.
updateDirectConnectGatewayAssociation_removeAllowedPrefixesToDirectConnectGateway :: Lens' UpdateDirectConnectGatewayAssociation (Maybe [RouteFilterPrefix])

-- | The Amazon VPC prefixes to advertise to the Direct Connect gateway.
updateDirectConnectGatewayAssociation_addAllowedPrefixesToDirectConnectGateway :: Lens' UpdateDirectConnectGatewayAssociation (Maybe [RouteFilterPrefix])

-- | The ID of the Direct Connect gateway association.
updateDirectConnectGatewayAssociation_associationId :: Lens' UpdateDirectConnectGatewayAssociation (Maybe Text)

-- | <i>See:</i> <a>newUpdateDirectConnectGatewayAssociationResponse</a>
--   smart constructor.
data UpdateDirectConnectGatewayAssociationResponse
UpdateDirectConnectGatewayAssociationResponse' :: Maybe DirectConnectGatewayAssociation -> Int -> UpdateDirectConnectGatewayAssociationResponse
[$sel:directConnectGatewayAssociation:UpdateDirectConnectGatewayAssociationResponse'] :: UpdateDirectConnectGatewayAssociationResponse -> Maybe DirectConnectGatewayAssociation

-- | The response's http status code.
[$sel:httpStatus:UpdateDirectConnectGatewayAssociationResponse'] :: UpdateDirectConnectGatewayAssociationResponse -> Int

-- | Create a value of <a>UpdateDirectConnectGatewayAssociationResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:directConnectGatewayAssociation:UpdateDirectConnectGatewayAssociationResponse'</a>,
--   <a>updateDirectConnectGatewayAssociationResponse_directConnectGatewayAssociation</a>
--   - Undocumented member.
--   
--   <a>$sel:httpStatus:UpdateDirectConnectGatewayAssociationResponse'</a>,
--   <a>updateDirectConnectGatewayAssociationResponse_httpStatus</a> - The
--   response's http status code.
newUpdateDirectConnectGatewayAssociationResponse :: Int -> UpdateDirectConnectGatewayAssociationResponse

-- | Undocumented member.
updateDirectConnectGatewayAssociationResponse_directConnectGatewayAssociation :: Lens' UpdateDirectConnectGatewayAssociationResponse (Maybe DirectConnectGatewayAssociation)

-- | The response's http status code.
updateDirectConnectGatewayAssociationResponse_httpStatus :: Lens' UpdateDirectConnectGatewayAssociationResponse Int
instance GHC.Generics.Generic Network.AWS.DirectConnect.UpdateDirectConnectGatewayAssociation.UpdateDirectConnectGatewayAssociation
instance GHC.Show.Show Network.AWS.DirectConnect.UpdateDirectConnectGatewayAssociation.UpdateDirectConnectGatewayAssociation
instance GHC.Read.Read Network.AWS.DirectConnect.UpdateDirectConnectGatewayAssociation.UpdateDirectConnectGatewayAssociation
instance GHC.Classes.Eq Network.AWS.DirectConnect.UpdateDirectConnectGatewayAssociation.UpdateDirectConnectGatewayAssociation
instance GHC.Generics.Generic Network.AWS.DirectConnect.UpdateDirectConnectGatewayAssociation.UpdateDirectConnectGatewayAssociationResponse
instance GHC.Show.Show Network.AWS.DirectConnect.UpdateDirectConnectGatewayAssociation.UpdateDirectConnectGatewayAssociationResponse
instance GHC.Read.Read Network.AWS.DirectConnect.UpdateDirectConnectGatewayAssociation.UpdateDirectConnectGatewayAssociationResponse
instance GHC.Classes.Eq Network.AWS.DirectConnect.UpdateDirectConnectGatewayAssociation.UpdateDirectConnectGatewayAssociationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DirectConnect.UpdateDirectConnectGatewayAssociation.UpdateDirectConnectGatewayAssociation
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.UpdateDirectConnectGatewayAssociation.UpdateDirectConnectGatewayAssociationResponse
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.UpdateDirectConnectGatewayAssociation.UpdateDirectConnectGatewayAssociation
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.UpdateDirectConnectGatewayAssociation.UpdateDirectConnectGatewayAssociation
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DirectConnect.UpdateDirectConnectGatewayAssociation.UpdateDirectConnectGatewayAssociation
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.UpdateDirectConnectGatewayAssociation.UpdateDirectConnectGatewayAssociation
instance Network.AWS.Data.Path.ToPath Network.AWS.DirectConnect.UpdateDirectConnectGatewayAssociation.UpdateDirectConnectGatewayAssociation
instance Network.AWS.Data.Query.ToQuery Network.AWS.DirectConnect.UpdateDirectConnectGatewayAssociation.UpdateDirectConnectGatewayAssociation


-- | Updates the attributes of the specified link aggregation group (LAG).
--   
--   You can update the following LAG attributes:
--   
--   <ul>
--   <li>The name of the LAG.</li>
--   <li>The value for the minimum number of connections that must be
--   operational for the LAG itself to be operational.</li>
--   <li>The LAG's MACsec encryption mode.Amazon Web Services assigns this
--   value to each connection which is part of the LAG.</li>
--   <li>The tags</li>
--   </ul>
--   
--   If you adjust the threshold value for the minimum number of
--   operational connections, ensure that the new value does not cause the
--   LAG to fall below the threshold and become non-operational.
module Network.AWS.DirectConnect.UpdateLag

-- | <i>See:</i> <a>newUpdateLag</a> smart constructor.
data UpdateLag
UpdateLag' :: Maybe Text -> Maybe Text -> Maybe Int -> Text -> UpdateLag

-- | The name of the LAG.
[$sel:lagName:UpdateLag'] :: UpdateLag -> Maybe Text

-- | The LAG MAC Security (MACsec) encryption mode.
--   
--   Amazon Web Services applies the value to all connections which are
--   part of the LAG.
[$sel:encryptionMode:UpdateLag'] :: UpdateLag -> Maybe Text

-- | The minimum number of physical connections that must be operational
--   for the LAG itself to be operational.
[$sel:minimumLinks:UpdateLag'] :: UpdateLag -> Maybe Int

-- | The ID of the LAG.
[$sel:lagId:UpdateLag'] :: UpdateLag -> Text

-- | Create a value of <a>UpdateLag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lagName:UpdateLag'</a>, <a>updateLag_lagName</a> - The name of
--   the LAG.
--   
--   <a>$sel:encryptionMode:UpdateLag'</a>, <a>updateLag_encryptionMode</a>
--   - The LAG MAC Security (MACsec) encryption mode.
--   
--   Amazon Web Services applies the value to all connections which are
--   part of the LAG.
--   
--   <a>$sel:minimumLinks:UpdateLag'</a>, <a>updateLag_minimumLinks</a> -
--   The minimum number of physical connections that must be operational
--   for the LAG itself to be operational.
--   
--   <a>$sel:lagId:UpdateLag'</a>, <a>updateLag_lagId</a> - The ID of the
--   LAG.
newUpdateLag :: Text -> UpdateLag

-- | The name of the LAG.
updateLag_lagName :: Lens' UpdateLag (Maybe Text)

-- | The LAG MAC Security (MACsec) encryption mode.
--   
--   Amazon Web Services applies the value to all connections which are
--   part of the LAG.
updateLag_encryptionMode :: Lens' UpdateLag (Maybe Text)

-- | The minimum number of physical connections that must be operational
--   for the LAG itself to be operational.
updateLag_minimumLinks :: Lens' UpdateLag (Maybe Int)

-- | The ID of the LAG.
updateLag_lagId :: Lens' UpdateLag Text

-- | Information about a link aggregation group (LAG).
--   
--   <i>See:</i> <a>newLag</a> smart constructor.
data Lag
Lag' :: Maybe Int -> Maybe Text -> Maybe Bool -> Maybe [MacSecKey] -> Maybe Text -> Maybe Text -> Maybe HasLogicalRedundancy -> Maybe Text -> Maybe [Connection] -> Maybe Text -> Maybe LagState -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (NonEmpty Tag) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Bool -> Lag

-- | The number of physical dedicated connections bundled by the LAG, up to
--   a maximum of 10.
[$sel:numberOfConnections:Lag'] :: Lag -> Maybe Int

-- | The Direct Connect endpoint that hosts the LAG.
[$sel:awsDeviceV2:Lag'] :: Lag -> Maybe Text

-- | Indicates whether the LAG can host other connections.
[$sel:allowsHostedConnections:Lag'] :: Lag -> Maybe Bool

-- | The MAC Security (MACsec) security keys associated with the LAG.
[$sel:macSecKeys:Lag'] :: Lag -> Maybe [MacSecKey]

-- | The name of the service provider associated with the LAG.
[$sel:providerName:Lag'] :: Lag -> Maybe Text

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
[$sel:awsLogicalDeviceId:Lag'] :: Lag -> Maybe Text

-- | Indicates whether the LAG supports a secondary BGP peer in the same
--   address family (IPv4/IPv6).
[$sel:hasLogicalRedundancy:Lag'] :: Lag -> Maybe HasLogicalRedundancy

-- | The name of the LAG.
[$sel:lagName:Lag'] :: Lag -> Maybe Text

-- | The connections bundled by the LAG.
[$sel:connections:Lag'] :: Lag -> Maybe [Connection]

-- | The Direct Connect endpoint that hosts the LAG.
[$sel:awsDevice:Lag'] :: Lag -> Maybe Text

-- | The state of the LAG. The following are the possible values:
--   
--   <ul>
--   <li><tt>requested</tt>: The initial state of a LAG. The LAG stays in
--   the requested state until the Letter of Authorization (LOA) is
--   available.</li>
--   <li><tt>pending</tt>: The LAG has been approved and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is established and the LAG is
--   ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The LAG is being deleted.</li>
--   <li><tt>deleted</tt>: The LAG is deleted.</li>
--   <li><tt>unknown</tt>: The state of the LAG is not available.</li>
--   </ul>
[$sel:lagState:Lag'] :: Lag -> Maybe LagState

-- | Indicates whether jumbo frames (9001 MTU) are supported.
[$sel:jumboFrameCapable:Lag'] :: Lag -> Maybe Bool

-- | The individual bandwidth of the physical connections bundled by the
--   LAG. The possible values are 1Gbps and 10Gbps.
[$sel:connectionsBandwidth:Lag'] :: Lag -> Maybe Text

-- | The ID of the LAG.
[$sel:lagId:Lag'] :: Lag -> Maybe Text

-- | The LAG MAC Security (MACsec) encryption mode.
--   
--   The valid values are <tt>no_encrypt</tt>, <tt>should_encrypt</tt>, and
--   <tt>must_encrypt</tt>.
[$sel:encryptionMode:Lag'] :: Lag -> Maybe Text

-- | The tags associated with the LAG.
[$sel:tags:Lag'] :: Lag -> Maybe (NonEmpty Tag)

-- | The ID of the account that owns the LAG.
[$sel:ownerAccount:Lag'] :: Lag -> Maybe Text

-- | The Region where the connection is located.
[$sel:region:Lag'] :: Lag -> Maybe Text

-- | The location of the LAG.
[$sel:location:Lag'] :: Lag -> Maybe Text

-- | The minimum number of physical dedicated connections that must be
--   operational for the LAG itself to be operational.
[$sel:minimumLinks:Lag'] :: Lag -> Maybe Int

-- | Indicates whether the LAG supports MAC Security (MACsec).
[$sel:macSecCapable:Lag'] :: Lag -> Maybe Bool

-- | Create a value of <a>Lag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:numberOfConnections:Lag'</a>, <a>lag_numberOfConnections</a> -
--   The number of physical dedicated connections bundled by the LAG, up to
--   a maximum of 10.
--   
--   <a>$sel:awsDeviceV2:Lag'</a>, <a>lag_awsDeviceV2</a> - The Direct
--   Connect endpoint that hosts the LAG.
--   
--   <a>$sel:allowsHostedConnections:Lag'</a>,
--   <a>lag_allowsHostedConnections</a> - Indicates whether the LAG can
--   host other connections.
--   
--   <a>$sel:macSecKeys:Lag'</a>, <a>lag_macSecKeys</a> - The MAC Security
--   (MACsec) security keys associated with the LAG.
--   
--   <a>$sel:providerName:Lag'</a>, <a>lag_providerName</a> - The name of
--   the service provider associated with the LAG.
--   
--   <a>$sel:awsLogicalDeviceId:Lag'</a>, <a>lag_awsLogicalDeviceId</a> -
--   The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
--   
--   <a>$sel:hasLogicalRedundancy:Lag'</a>, <a>lag_hasLogicalRedundancy</a>
--   - Indicates whether the LAG supports a secondary BGP peer in the same
--   address family (IPv4/IPv6).
--   
--   <a>$sel:lagName:Lag'</a>, <a>lag_lagName</a> - The name of the LAG.
--   
--   <a>$sel:connections:Lag'</a>, <a>lag_connections</a> - The connections
--   bundled by the LAG.
--   
--   <a>$sel:awsDevice:Lag'</a>, <a>lag_awsDevice</a> - The Direct Connect
--   endpoint that hosts the LAG.
--   
--   <a>$sel:lagState:Lag'</a>, <a>lag_lagState</a> - The state of the LAG.
--   The following are the possible values:
--   
--   <ul>
--   <li><tt>requested</tt>: The initial state of a LAG. The LAG stays in
--   the requested state until the Letter of Authorization (LOA) is
--   available.</li>
--   <li><tt>pending</tt>: The LAG has been approved and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is established and the LAG is
--   ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The LAG is being deleted.</li>
--   <li><tt>deleted</tt>: The LAG is deleted.</li>
--   <li><tt>unknown</tt>: The state of the LAG is not available.</li>
--   </ul>
--   
--   <a>$sel:jumboFrameCapable:Lag'</a>, <a>lag_jumboFrameCapable</a> -
--   Indicates whether jumbo frames (9001 MTU) are supported.
--   
--   <a>$sel:connectionsBandwidth:Lag'</a>, <a>lag_connectionsBandwidth</a>
--   - The individual bandwidth of the physical connections bundled by the
--   LAG. The possible values are 1Gbps and 10Gbps.
--   
--   <a>$sel:lagId:Lag'</a>, <a>lag_lagId</a> - The ID of the LAG.
--   
--   <a>$sel:encryptionMode:Lag'</a>, <a>lag_encryptionMode</a> - The LAG
--   MAC Security (MACsec) encryption mode.
--   
--   The valid values are <tt>no_encrypt</tt>, <tt>should_encrypt</tt>, and
--   <tt>must_encrypt</tt>.
--   
--   <a>$sel:tags:Lag'</a>, <a>lag_tags</a> - The tags associated with the
--   LAG.
--   
--   <a>$sel:ownerAccount:Lag'</a>, <a>lag_ownerAccount</a> - The ID of the
--   account that owns the LAG.
--   
--   <a>$sel:region:Lag'</a>, <a>lag_region</a> - The Region where the
--   connection is located.
--   
--   <a>$sel:location:Lag'</a>, <a>lag_location</a> - The location of the
--   LAG.
--   
--   <a>$sel:minimumLinks:Lag'</a>, <a>lag_minimumLinks</a> - The minimum
--   number of physical dedicated connections that must be operational for
--   the LAG itself to be operational.
--   
--   <a>$sel:macSecCapable:Lag'</a>, <a>lag_macSecCapable</a> - Indicates
--   whether the LAG supports MAC Security (MACsec).
newLag :: Lag

-- | The number of physical dedicated connections bundled by the LAG, up to
--   a maximum of 10.
lag_numberOfConnections :: Lens' Lag (Maybe Int)

-- | The Direct Connect endpoint that hosts the LAG.
lag_awsDeviceV2 :: Lens' Lag (Maybe Text)

-- | Indicates whether the LAG can host other connections.
lag_allowsHostedConnections :: Lens' Lag (Maybe Bool)

-- | The MAC Security (MACsec) security keys associated with the LAG.
lag_macSecKeys :: Lens' Lag (Maybe [MacSecKey])

-- | The name of the service provider associated with the LAG.
lag_providerName :: Lens' Lag (Maybe Text)

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
lag_awsLogicalDeviceId :: Lens' Lag (Maybe Text)

-- | Indicates whether the LAG supports a secondary BGP peer in the same
--   address family (IPv4/IPv6).
lag_hasLogicalRedundancy :: Lens' Lag (Maybe HasLogicalRedundancy)

-- | The name of the LAG.
lag_lagName :: Lens' Lag (Maybe Text)

-- | The connections bundled by the LAG.
lag_connections :: Lens' Lag (Maybe [Connection])

-- | The Direct Connect endpoint that hosts the LAG.
lag_awsDevice :: Lens' Lag (Maybe Text)

-- | The state of the LAG. The following are the possible values:
--   
--   <ul>
--   <li><tt>requested</tt>: The initial state of a LAG. The LAG stays in
--   the requested state until the Letter of Authorization (LOA) is
--   available.</li>
--   <li><tt>pending</tt>: The LAG has been approved and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is established and the LAG is
--   ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The LAG is being deleted.</li>
--   <li><tt>deleted</tt>: The LAG is deleted.</li>
--   <li><tt>unknown</tt>: The state of the LAG is not available.</li>
--   </ul>
lag_lagState :: Lens' Lag (Maybe LagState)

-- | Indicates whether jumbo frames (9001 MTU) are supported.
lag_jumboFrameCapable :: Lens' Lag (Maybe Bool)

-- | The individual bandwidth of the physical connections bundled by the
--   LAG. The possible values are 1Gbps and 10Gbps.
lag_connectionsBandwidth :: Lens' Lag (Maybe Text)

-- | The ID of the LAG.
lag_lagId :: Lens' Lag (Maybe Text)

-- | The LAG MAC Security (MACsec) encryption mode.
--   
--   The valid values are <tt>no_encrypt</tt>, <tt>should_encrypt</tt>, and
--   <tt>must_encrypt</tt>.
lag_encryptionMode :: Lens' Lag (Maybe Text)

-- | The tags associated with the LAG.
lag_tags :: Lens' Lag (Maybe (NonEmpty Tag))

-- | The ID of the account that owns the LAG.
lag_ownerAccount :: Lens' Lag (Maybe Text)

-- | The Region where the connection is located.
lag_region :: Lens' Lag (Maybe Text)

-- | The location of the LAG.
lag_location :: Lens' Lag (Maybe Text)

-- | The minimum number of physical dedicated connections that must be
--   operational for the LAG itself to be operational.
lag_minimumLinks :: Lens' Lag (Maybe Int)

-- | Indicates whether the LAG supports MAC Security (MACsec).
lag_macSecCapable :: Lens' Lag (Maybe Bool)
instance GHC.Generics.Generic Network.AWS.DirectConnect.UpdateLag.UpdateLag
instance GHC.Show.Show Network.AWS.DirectConnect.UpdateLag.UpdateLag
instance GHC.Read.Read Network.AWS.DirectConnect.UpdateLag.UpdateLag
instance GHC.Classes.Eq Network.AWS.DirectConnect.UpdateLag.UpdateLag
instance Network.AWS.Types.AWSRequest Network.AWS.DirectConnect.UpdateLag.UpdateLag
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.UpdateLag.UpdateLag
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.UpdateLag.UpdateLag
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DirectConnect.UpdateLag.UpdateLag
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.UpdateLag.UpdateLag
instance Network.AWS.Data.Path.ToPath Network.AWS.DirectConnect.UpdateLag.UpdateLag
instance Network.AWS.Data.Query.ToQuery Network.AWS.DirectConnect.UpdateLag.UpdateLag


-- | Updates the specified attributes of the specified virtual private
--   interface.
--   
--   Setting the MTU of a virtual interface to 9001 (jumbo frames) can
--   cause an update to the underlying physical connection if it wasn't
--   updated to support jumbo frames. Updating the connection disrupts
--   network connectivity for all virtual interfaces associated with the
--   connection for up to 30 seconds. To check whether your connection
--   supports jumbo frames, call DescribeConnections. To check whether your
--   virtual q interface supports jumbo frames, call
--   DescribeVirtualInterfaces.
module Network.AWS.DirectConnect.UpdateVirtualInterfaceAttributes

-- | <i>See:</i> <a>newUpdateVirtualInterfaceAttributes</a> smart
--   constructor.
data UpdateVirtualInterfaceAttributes
UpdateVirtualInterfaceAttributes' :: Maybe Int -> Text -> UpdateVirtualInterfaceAttributes

-- | The maximum transmission unit (MTU), in bytes. The supported values
--   are 1500 and 9001. The default value is 1500.
[$sel:mtu:UpdateVirtualInterfaceAttributes'] :: UpdateVirtualInterfaceAttributes -> Maybe Int

-- | The ID of the virtual private interface.
[$sel:virtualInterfaceId:UpdateVirtualInterfaceAttributes'] :: UpdateVirtualInterfaceAttributes -> Text

-- | Create a value of <a>UpdateVirtualInterfaceAttributes</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mtu:UpdateVirtualInterfaceAttributes'</a>,
--   <a>updateVirtualInterfaceAttributes_mtu</a> - The maximum transmission
--   unit (MTU), in bytes. The supported values are 1500 and 9001. The
--   default value is 1500.
--   
--   <a>$sel:virtualInterfaceId:UpdateVirtualInterfaceAttributes'</a>,
--   <a>updateVirtualInterfaceAttributes_virtualInterfaceId</a> - The ID of
--   the virtual private interface.
newUpdateVirtualInterfaceAttributes :: Text -> UpdateVirtualInterfaceAttributes

-- | The maximum transmission unit (MTU), in bytes. The supported values
--   are 1500 and 9001. The default value is 1500.
updateVirtualInterfaceAttributes_mtu :: Lens' UpdateVirtualInterfaceAttributes (Maybe Int)

-- | The ID of the virtual private interface.
updateVirtualInterfaceAttributes_virtualInterfaceId :: Lens' UpdateVirtualInterfaceAttributes Text

-- | Information about a virtual interface.
--   
--   <i>See:</i> <a>newVirtualInterface</a> smart constructor.
data VirtualInterface
VirtualInterface' :: Maybe Text -> Maybe [BGPPeer] -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe [RouteFilterPrefix] -> Maybe Int -> Maybe Text -> Maybe Integer -> Maybe Text -> Maybe (NonEmpty Tag) -> Maybe Text -> Maybe Text -> Maybe VirtualInterfaceState -> Maybe Text -> Maybe AddressFamily -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> VirtualInterface

-- | The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
[$sel:authKey:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The BGP peers configured on this virtual interface.
[$sel:bgpPeers:VirtualInterface'] :: VirtualInterface -> Maybe [BGPPeer]

-- | The ID of the virtual private gateway. Applies only to private virtual
--   interfaces.
[$sel:virtualGatewayId:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
--   
--   The valid values are 1-2147483647.
[$sel:asn:VirtualInterface'] :: VirtualInterface -> Maybe Int

-- | The Direct Connect endpoint that terminates the physical connection.
[$sel:awsDeviceV2:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The ID of the connection.
[$sel:connectionId:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
[$sel:awsLogicalDeviceId:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The customer router configuration.
[$sel:customerRouterConfig:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | Indicates whether jumbo frames (9001 MTU) are supported.
[$sel:jumboFrameCapable:VirtualInterface'] :: VirtualInterface -> Maybe Bool

-- | The routes to be advertised to the Amazon Web Services network in this
--   Region. Applies to public virtual interfaces.
[$sel:routeFilterPrefixes:VirtualInterface'] :: VirtualInterface -> Maybe [RouteFilterPrefix]

-- | The maximum transmission unit (MTU), in bytes. The supported values
--   are 1500 and 9001. The default value is 1500.
[$sel:mtu:VirtualInterface'] :: VirtualInterface -> Maybe Int

-- | The type of virtual interface. The possible values are
--   <tt>private</tt> and <tt>public</tt>.
[$sel:virtualInterfaceType:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The autonomous system number (ASN) for the Amazon side of the
--   connection.
[$sel:amazonSideAsn:VirtualInterface'] :: VirtualInterface -> Maybe Integer

-- | The ID of the virtual interface.
[$sel:virtualInterfaceId:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The tags associated with the virtual interface.
[$sel:tags:VirtualInterface'] :: VirtualInterface -> Maybe (NonEmpty Tag)

-- | The ID of the Direct Connect gateway.
[$sel:directConnectGatewayId:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The name of the virtual interface assigned by the customer network.
--   The name has a maximum of 100 characters. The following are valid
--   characters: a-z, 0-9 and a hyphen (-).
[$sel:virtualInterfaceName:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The state of the virtual interface. The following are the possible
--   values:
--   
--   <ul>
--   <li><tt>confirming</tt>: The creation of the virtual interface is
--   pending confirmation from the virtual interface owner. If the owner of
--   the virtual interface is different from the owner of the connection on
--   which it is provisioned, then the virtual interface will remain in
--   this state until it is confirmed by the virtual interface owner.</li>
--   <li><tt>verifying</tt>: This state only applies to public virtual
--   interfaces. Each public virtual interface needs validation before the
--   virtual interface can be created.</li>
--   <li><tt>pending</tt>: A virtual interface is in this state from the
--   time that it is created until the virtual interface is ready to
--   forward traffic.</li>
--   <li><tt>available</tt>: A virtual interface that is able to forward
--   traffic.</li>
--   <li><tt>down</tt>: A virtual interface that is BGP down.</li>
--   <li><tt>deleting</tt>: A virtual interface is in this state
--   immediately after calling DeleteVirtualInterface until it can no
--   longer forward traffic.</li>
--   <li><tt>deleted</tt>: A virtual interface that cannot forward
--   traffic.</li>
--   <li><tt>rejected</tt>: The virtual interface owner has declined
--   creation of the virtual interface. If a virtual interface in the
--   <tt>Confirming</tt> state is deleted by the virtual interface owner,
--   the virtual interface enters the <tt>Rejected</tt> state.</li>
--   <li><tt>unknown</tt>: The state of the virtual interface is not
--   available.</li>
--   </ul>
[$sel:virtualInterfaceState:VirtualInterface'] :: VirtualInterface -> Maybe VirtualInterfaceState

-- | The IP address assigned to the Amazon interface.
[$sel:amazonAddress:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The address family for the BGP peer.
[$sel:addressFamily:VirtualInterface'] :: VirtualInterface -> Maybe AddressFamily

-- | The ID of the account that owns the virtual interface.
[$sel:ownerAccount:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The Region where the virtual interface is located.
[$sel:region:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The ID of the VLAN.
[$sel:vlan:VirtualInterface'] :: VirtualInterface -> Maybe Int

-- | The location of the connection.
[$sel:location:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | The IP address assigned to the customer interface.
[$sel:customerAddress:VirtualInterface'] :: VirtualInterface -> Maybe Text

-- | Create a value of <a>VirtualInterface</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authKey:VirtualInterface'</a>, <a>virtualInterface_authKey</a>
--   - The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
--   
--   <a>$sel:bgpPeers:VirtualInterface'</a>,
--   <a>virtualInterface_bgpPeers</a> - The BGP peers configured on this
--   virtual interface.
--   
--   <a>$sel:virtualGatewayId:VirtualInterface'</a>,
--   <a>virtualInterface_virtualGatewayId</a> - The ID of the virtual
--   private gateway. Applies only to private virtual interfaces.
--   
--   <a>$sel:asn:VirtualInterface'</a>, <a>virtualInterface_asn</a> - The
--   autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
--   
--   The valid values are 1-2147483647.
--   
--   <a>$sel:awsDeviceV2:VirtualInterface'</a>,
--   <a>virtualInterface_awsDeviceV2</a> - The Direct Connect endpoint that
--   terminates the physical connection.
--   
--   <a>$sel:connectionId:VirtualInterface'</a>,
--   <a>virtualInterface_connectionId</a> - The ID of the connection.
--   
--   <a>$sel:awsLogicalDeviceId:VirtualInterface'</a>,
--   <a>virtualInterface_awsLogicalDeviceId</a> - The Direct Connect
--   endpoint that terminates the logical connection. This device might be
--   different than the device that terminates the physical connection.
--   
--   <a>$sel:customerRouterConfig:VirtualInterface'</a>,
--   <a>virtualInterface_customerRouterConfig</a> - The customer router
--   configuration.
--   
--   <a>$sel:jumboFrameCapable:VirtualInterface'</a>,
--   <a>virtualInterface_jumboFrameCapable</a> - Indicates whether jumbo
--   frames (9001 MTU) are supported.
--   
--   <a>$sel:routeFilterPrefixes:VirtualInterface'</a>,
--   <a>virtualInterface_routeFilterPrefixes</a> - The routes to be
--   advertised to the Amazon Web Services network in this Region. Applies
--   to public virtual interfaces.
--   
--   <a>$sel:mtu:VirtualInterface'</a>, <a>virtualInterface_mtu</a> - The
--   maximum transmission unit (MTU), in bytes. The supported values are
--   1500 and 9001. The default value is 1500.
--   
--   <a>$sel:virtualInterfaceType:VirtualInterface'</a>,
--   <a>virtualInterface_virtualInterfaceType</a> - The type of virtual
--   interface. The possible values are <tt>private</tt> and
--   <tt>public</tt>.
--   
--   <a>$sel:amazonSideAsn:VirtualInterface'</a>,
--   <a>virtualInterface_amazonSideAsn</a> - The autonomous system number
--   (ASN) for the Amazon side of the connection.
--   
--   <a>$sel:virtualInterfaceId:VirtualInterface'</a>,
--   <a>virtualInterface_virtualInterfaceId</a> - The ID of the virtual
--   interface.
--   
--   <a>$sel:tags:VirtualInterface'</a>, <a>virtualInterface_tags</a> - The
--   tags associated with the virtual interface.
--   
--   <a>$sel:directConnectGatewayId:VirtualInterface'</a>,
--   <a>virtualInterface_directConnectGatewayId</a> - The ID of the Direct
--   Connect gateway.
--   
--   <a>$sel:virtualInterfaceName:VirtualInterface'</a>,
--   <a>virtualInterface_virtualInterfaceName</a> - The name of the virtual
--   interface assigned by the customer network. The name has a maximum of
--   100 characters. The following are valid characters: a-z, 0-9 and a
--   hyphen (-).
--   
--   <a>$sel:virtualInterfaceState:VirtualInterface'</a>,
--   <a>virtualInterface_virtualInterfaceState</a> - The state of the
--   virtual interface. The following are the possible values:
--   
--   <ul>
--   <li><tt>confirming</tt>: The creation of the virtual interface is
--   pending confirmation from the virtual interface owner. If the owner of
--   the virtual interface is different from the owner of the connection on
--   which it is provisioned, then the virtual interface will remain in
--   this state until it is confirmed by the virtual interface owner.</li>
--   <li><tt>verifying</tt>: This state only applies to public virtual
--   interfaces. Each public virtual interface needs validation before the
--   virtual interface can be created.</li>
--   <li><tt>pending</tt>: A virtual interface is in this state from the
--   time that it is created until the virtual interface is ready to
--   forward traffic.</li>
--   <li><tt>available</tt>: A virtual interface that is able to forward
--   traffic.</li>
--   <li><tt>down</tt>: A virtual interface that is BGP down.</li>
--   <li><tt>deleting</tt>: A virtual interface is in this state
--   immediately after calling DeleteVirtualInterface until it can no
--   longer forward traffic.</li>
--   <li><tt>deleted</tt>: A virtual interface that cannot forward
--   traffic.</li>
--   <li><tt>rejected</tt>: The virtual interface owner has declined
--   creation of the virtual interface. If a virtual interface in the
--   <tt>Confirming</tt> state is deleted by the virtual interface owner,
--   the virtual interface enters the <tt>Rejected</tt> state.</li>
--   <li><tt>unknown</tt>: The state of the virtual interface is not
--   available.</li>
--   </ul>
--   
--   <a>$sel:amazonAddress:VirtualInterface'</a>,
--   <a>virtualInterface_amazonAddress</a> - The IP address assigned to the
--   Amazon interface.
--   
--   <a>$sel:addressFamily:VirtualInterface'</a>,
--   <a>virtualInterface_addressFamily</a> - The address family for the BGP
--   peer.
--   
--   <a>$sel:ownerAccount:VirtualInterface'</a>,
--   <a>virtualInterface_ownerAccount</a> - The ID of the account that owns
--   the virtual interface.
--   
--   <a>$sel:region:VirtualInterface'</a>, <a>virtualInterface_region</a> -
--   The Region where the virtual interface is located.
--   
--   <a>$sel:vlan:VirtualInterface'</a>, <a>virtualInterface_vlan</a> - The
--   ID of the VLAN.
--   
--   <a>$sel:location:VirtualInterface'</a>,
--   <a>virtualInterface_location</a> - The location of the connection.
--   
--   <a>$sel:customerAddress:VirtualInterface'</a>,
--   <a>virtualInterface_customerAddress</a> - The IP address assigned to
--   the customer interface.
newVirtualInterface :: VirtualInterface

-- | The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
virtualInterface_authKey :: Lens' VirtualInterface (Maybe Text)

-- | The BGP peers configured on this virtual interface.
virtualInterface_bgpPeers :: Lens' VirtualInterface (Maybe [BGPPeer])

-- | The ID of the virtual private gateway. Applies only to private virtual
--   interfaces.
virtualInterface_virtualGatewayId :: Lens' VirtualInterface (Maybe Text)

-- | The autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
--   
--   The valid values are 1-2147483647.
virtualInterface_asn :: Lens' VirtualInterface (Maybe Int)

-- | The Direct Connect endpoint that terminates the physical connection.
virtualInterface_awsDeviceV2 :: Lens' VirtualInterface (Maybe Text)

-- | The ID of the connection.
virtualInterface_connectionId :: Lens' VirtualInterface (Maybe Text)

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
virtualInterface_awsLogicalDeviceId :: Lens' VirtualInterface (Maybe Text)

-- | The customer router configuration.
virtualInterface_customerRouterConfig :: Lens' VirtualInterface (Maybe Text)

-- | Indicates whether jumbo frames (9001 MTU) are supported.
virtualInterface_jumboFrameCapable :: Lens' VirtualInterface (Maybe Bool)

-- | The routes to be advertised to the Amazon Web Services network in this
--   Region. Applies to public virtual interfaces.
virtualInterface_routeFilterPrefixes :: Lens' VirtualInterface (Maybe [RouteFilterPrefix])

-- | The maximum transmission unit (MTU), in bytes. The supported values
--   are 1500 and 9001. The default value is 1500.
virtualInterface_mtu :: Lens' VirtualInterface (Maybe Int)

-- | The type of virtual interface. The possible values are
--   <tt>private</tt> and <tt>public</tt>.
virtualInterface_virtualInterfaceType :: Lens' VirtualInterface (Maybe Text)

-- | The autonomous system number (ASN) for the Amazon side of the
--   connection.
virtualInterface_amazonSideAsn :: Lens' VirtualInterface (Maybe Integer)

-- | The ID of the virtual interface.
virtualInterface_virtualInterfaceId :: Lens' VirtualInterface (Maybe Text)

-- | The tags associated with the virtual interface.
virtualInterface_tags :: Lens' VirtualInterface (Maybe (NonEmpty Tag))

-- | The ID of the Direct Connect gateway.
virtualInterface_directConnectGatewayId :: Lens' VirtualInterface (Maybe Text)

-- | The name of the virtual interface assigned by the customer network.
--   The name has a maximum of 100 characters. The following are valid
--   characters: a-z, 0-9 and a hyphen (-).
virtualInterface_virtualInterfaceName :: Lens' VirtualInterface (Maybe Text)

-- | The state of the virtual interface. The following are the possible
--   values:
--   
--   <ul>
--   <li><tt>confirming</tt>: The creation of the virtual interface is
--   pending confirmation from the virtual interface owner. If the owner of
--   the virtual interface is different from the owner of the connection on
--   which it is provisioned, then the virtual interface will remain in
--   this state until it is confirmed by the virtual interface owner.</li>
--   <li><tt>verifying</tt>: This state only applies to public virtual
--   interfaces. Each public virtual interface needs validation before the
--   virtual interface can be created.</li>
--   <li><tt>pending</tt>: A virtual interface is in this state from the
--   time that it is created until the virtual interface is ready to
--   forward traffic.</li>
--   <li><tt>available</tt>: A virtual interface that is able to forward
--   traffic.</li>
--   <li><tt>down</tt>: A virtual interface that is BGP down.</li>
--   <li><tt>deleting</tt>: A virtual interface is in this state
--   immediately after calling DeleteVirtualInterface until it can no
--   longer forward traffic.</li>
--   <li><tt>deleted</tt>: A virtual interface that cannot forward
--   traffic.</li>
--   <li><tt>rejected</tt>: The virtual interface owner has declined
--   creation of the virtual interface. If a virtual interface in the
--   <tt>Confirming</tt> state is deleted by the virtual interface owner,
--   the virtual interface enters the <tt>Rejected</tt> state.</li>
--   <li><tt>unknown</tt>: The state of the virtual interface is not
--   available.</li>
--   </ul>
virtualInterface_virtualInterfaceState :: Lens' VirtualInterface (Maybe VirtualInterfaceState)

-- | The IP address assigned to the Amazon interface.
virtualInterface_amazonAddress :: Lens' VirtualInterface (Maybe Text)

-- | The address family for the BGP peer.
virtualInterface_addressFamily :: Lens' VirtualInterface (Maybe AddressFamily)

-- | The ID of the account that owns the virtual interface.
virtualInterface_ownerAccount :: Lens' VirtualInterface (Maybe Text)

-- | The Region where the virtual interface is located.
virtualInterface_region :: Lens' VirtualInterface (Maybe Text)

-- | The ID of the VLAN.
virtualInterface_vlan :: Lens' VirtualInterface (Maybe Int)

-- | The location of the connection.
virtualInterface_location :: Lens' VirtualInterface (Maybe Text)

-- | The IP address assigned to the customer interface.
virtualInterface_customerAddress :: Lens' VirtualInterface (Maybe Text)
instance GHC.Generics.Generic Network.AWS.DirectConnect.UpdateVirtualInterfaceAttributes.UpdateVirtualInterfaceAttributes
instance GHC.Show.Show Network.AWS.DirectConnect.UpdateVirtualInterfaceAttributes.UpdateVirtualInterfaceAttributes
instance GHC.Read.Read Network.AWS.DirectConnect.UpdateVirtualInterfaceAttributes.UpdateVirtualInterfaceAttributes
instance GHC.Classes.Eq Network.AWS.DirectConnect.UpdateVirtualInterfaceAttributes.UpdateVirtualInterfaceAttributes
instance Network.AWS.Types.AWSRequest Network.AWS.DirectConnect.UpdateVirtualInterfaceAttributes.UpdateVirtualInterfaceAttributes
instance Data.Hashable.Class.Hashable Network.AWS.DirectConnect.UpdateVirtualInterfaceAttributes.UpdateVirtualInterfaceAttributes
instance Control.DeepSeq.NFData Network.AWS.DirectConnect.UpdateVirtualInterfaceAttributes.UpdateVirtualInterfaceAttributes
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DirectConnect.UpdateVirtualInterfaceAttributes.UpdateVirtualInterfaceAttributes
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DirectConnect.UpdateVirtualInterfaceAttributes.UpdateVirtualInterfaceAttributes
instance Network.AWS.Data.Path.ToPath Network.AWS.DirectConnect.UpdateVirtualInterfaceAttributes.UpdateVirtualInterfaceAttributes
instance Network.AWS.Data.Query.ToQuery Network.AWS.DirectConnect.UpdateVirtualInterfaceAttributes.UpdateVirtualInterfaceAttributes


module Network.AWS.DirectConnect.Lens

-- | The name of the connection.
updateConnection_connectionName :: Lens' UpdateConnection (Maybe Text)

-- | The connection MAC Security (MACsec) encryption mode.
--   
--   The valid values are <tt>no_encrypt</tt>, <tt>should_encrypt</tt>, and
--   <tt>must_encrypt</tt>.
updateConnection_encryptionMode :: Lens' UpdateConnection (Maybe Text)

-- | The ID of the dedicated connection.
--   
--   You can use DescribeConnections to retrieve the connection ID.
updateConnection_connectionId :: Lens' UpdateConnection Text

-- | The bandwidth of the connection.
connection_bandwidth :: Lens' Connection (Maybe Text)

-- | The Direct Connect endpoint that terminates the physical connection.
connection_awsDeviceV2 :: Lens' Connection (Maybe Text)

-- | The state of the connection. The following are the possible values:
--   
--   <ul>
--   <li><tt>ordering</tt>: The initial state of a hosted connection
--   provisioned on an interconnect. The connection stays in the ordering
--   state until the owner of the hosted connection confirms or declines
--   the connection order.</li>
--   <li><tt>requested</tt>: The initial state of a standard connection.
--   The connection stays in the requested state until the Letter of
--   Authorization (LOA) is sent to the customer.</li>
--   <li><tt>pending</tt>: The connection has been approved and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is up and the connection is
--   ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The connection is being deleted.</li>
--   <li><tt>deleted</tt>: The connection has been deleted.</li>
--   <li><tt>rejected</tt>: A hosted connection in the <tt>ordering</tt>
--   state enters the <tt>rejected</tt> state if it is deleted by the
--   customer.</li>
--   <li><tt>unknown</tt>: The state of the connection is not
--   available.</li>
--   </ul>
connection_connectionState :: Lens' Connection (Maybe ConnectionState)

-- | The name of the connection.
connection_connectionName :: Lens' Connection (Maybe Text)

-- | The MAC Security (MACsec) security keys associated with the
--   connection.
connection_macSecKeys :: Lens' Connection (Maybe [MacSecKey])

-- | The name of the service provider associated with the connection.
connection_providerName :: Lens' Connection (Maybe Text)

-- | The ID of the connection.
connection_connectionId :: Lens' Connection (Maybe Text)

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
connection_awsLogicalDeviceId :: Lens' Connection (Maybe Text)

-- | Indicates whether the connection supports a secondary BGP peer in the
--   same address family (IPv4/IPv6).
connection_hasLogicalRedundancy :: Lens' Connection (Maybe HasLogicalRedundancy)

-- | The Direct Connect endpoint on which the physical connection
--   terminates.
connection_awsDevice :: Lens' Connection (Maybe Text)

-- | Indicates whether jumbo frames (9001 MTU) are supported.
connection_jumboFrameCapable :: Lens' Connection (Maybe Bool)

-- | The MAC Security (MACsec) port link status of the connection.
--   
--   The valid values are <tt>Encryption Up</tt>, which means that there is
--   an active Connection Key Name, or <tt>Encryption Down</tt>.
connection_portEncryptionStatus :: Lens' Connection (Maybe Text)

-- | The ID of the LAG.
connection_lagId :: Lens' Connection (Maybe Text)

-- | The MAC Security (MACsec) connection encryption mode.
--   
--   The valid values are <tt>no_encrypt</tt>, <tt>should_encrypt</tt>, and
--   <tt>must_encrypt</tt>.
connection_encryptionMode :: Lens' Connection (Maybe Text)

-- | The name of the Direct Connect service provider associated with the
--   connection.
connection_partnerName :: Lens' Connection (Maybe Text)

-- | The tags associated with the connection.
connection_tags :: Lens' Connection (Maybe (NonEmpty Tag))

-- | The time of the most recent call to DescribeLoa for this connection.
connection_loaIssueTime :: Lens' Connection (Maybe UTCTime)

-- | The ID of the account that owns the connection.
connection_ownerAccount :: Lens' Connection (Maybe Text)

-- | The Region where the connection is located.
connection_region :: Lens' Connection (Maybe Text)

-- | The ID of the VLAN.
connection_vlan :: Lens' Connection (Maybe Int)

-- | The location of the connection.
connection_location :: Lens' Connection (Maybe Text)

-- | Indicates whether the connection supports MAC Security (MACsec).
connection_macSecCapable :: Lens' Connection (Maybe Bool)

-- | The BGP peers to place in the DOWN state.
startBgpFailoverTest_bgpPeers :: Lens' StartBgpFailoverTest (Maybe [Text])

-- | The time in minutes that the virtual interface failover test will
--   last.
--   
--   Maximum value: 180 minutes (3 hours).
--   
--   Default: 180 minutes (3 hours).
startBgpFailoverTest_testDurationInMinutes :: Lens' StartBgpFailoverTest (Maybe Int)

-- | The ID of the virtual interface you want to test.
startBgpFailoverTest_virtualInterfaceId :: Lens' StartBgpFailoverTest Text

-- | Information about the virtual interface failover test.
startBgpFailoverTestResponse_virtualInterfaceTest :: Lens' StartBgpFailoverTestResponse (Maybe VirtualInterfaceTestHistory)

-- | The response's http status code.
startBgpFailoverTestResponse_httpStatus :: Lens' StartBgpFailoverTestResponse Int

-- | The ID of the proposal.
deleteDirectConnectGatewayAssociationProposal_proposalId :: Lens' DeleteDirectConnectGatewayAssociationProposal Text

-- | The ID of the associated gateway.
deleteDirectConnectGatewayAssociationProposalResponse_directConnectGatewayAssociationProposal :: Lens' DeleteDirectConnectGatewayAssociationProposalResponse (Maybe DirectConnectGatewayAssociationProposal)

-- | The response's http status code.
deleteDirectConnectGatewayAssociationProposalResponse_httpStatus :: Lens' DeleteDirectConnectGatewayAssociationProposalResponse Int

-- | The virtual private gateways.
describeVirtualGatewaysResponse_virtualGateways :: Lens' DescribeVirtualGatewaysResponse (Maybe [VirtualGateway])

-- | The response's http status code.
describeVirtualGatewaysResponse_httpStatus :: Lens' DescribeVirtualGatewaysResponse Int

-- | The ID of the virtual interface you no longer want to test.
stopBgpFailoverTest_virtualInterfaceId :: Lens' StopBgpFailoverTest Text

-- | Information about the virtual interface failover test.
stopBgpFailoverTestResponse_virtualInterfaceTest :: Lens' StopBgpFailoverTestResponse (Maybe VirtualInterfaceTestHistory)

-- | The response's http status code.
stopBgpFailoverTestResponse_httpStatus :: Lens' StopBgpFailoverTestResponse Int

-- | The ID of the connection.
deleteConnection_connectionId :: Lens' DeleteConnection Text

-- | The bandwidth of the connection.
connection_bandwidth :: Lens' Connection (Maybe Text)

-- | The Direct Connect endpoint that terminates the physical connection.
connection_awsDeviceV2 :: Lens' Connection (Maybe Text)

-- | The state of the connection. The following are the possible values:
--   
--   <ul>
--   <li><tt>ordering</tt>: The initial state of a hosted connection
--   provisioned on an interconnect. The connection stays in the ordering
--   state until the owner of the hosted connection confirms or declines
--   the connection order.</li>
--   <li><tt>requested</tt>: The initial state of a standard connection.
--   The connection stays in the requested state until the Letter of
--   Authorization (LOA) is sent to the customer.</li>
--   <li><tt>pending</tt>: The connection has been approved and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is up and the connection is
--   ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The connection is being deleted.</li>
--   <li><tt>deleted</tt>: The connection has been deleted.</li>
--   <li><tt>rejected</tt>: A hosted connection in the <tt>ordering</tt>
--   state enters the <tt>rejected</tt> state if it is deleted by the
--   customer.</li>
--   <li><tt>unknown</tt>: The state of the connection is not
--   available.</li>
--   </ul>
connection_connectionState :: Lens' Connection (Maybe ConnectionState)

-- | The name of the connection.
connection_connectionName :: Lens' Connection (Maybe Text)

-- | The MAC Security (MACsec) security keys associated with the
--   connection.
connection_macSecKeys :: Lens' Connection (Maybe [MacSecKey])

-- | The name of the service provider associated with the connection.
connection_providerName :: Lens' Connection (Maybe Text)

-- | The ID of the connection.
connection_connectionId :: Lens' Connection (Maybe Text)

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
connection_awsLogicalDeviceId :: Lens' Connection (Maybe Text)

-- | Indicates whether the connection supports a secondary BGP peer in the
--   same address family (IPv4/IPv6).
connection_hasLogicalRedundancy :: Lens' Connection (Maybe HasLogicalRedundancy)

-- | The Direct Connect endpoint on which the physical connection
--   terminates.
connection_awsDevice :: Lens' Connection (Maybe Text)

-- | Indicates whether jumbo frames (9001 MTU) are supported.
connection_jumboFrameCapable :: Lens' Connection (Maybe Bool)

-- | The MAC Security (MACsec) port link status of the connection.
--   
--   The valid values are <tt>Encryption Up</tt>, which means that there is
--   an active Connection Key Name, or <tt>Encryption Down</tt>.
connection_portEncryptionStatus :: Lens' Connection (Maybe Text)

-- | The ID of the LAG.
connection_lagId :: Lens' Connection (Maybe Text)

-- | The MAC Security (MACsec) connection encryption mode.
--   
--   The valid values are <tt>no_encrypt</tt>, <tt>should_encrypt</tt>, and
--   <tt>must_encrypt</tt>.
connection_encryptionMode :: Lens' Connection (Maybe Text)

-- | The name of the Direct Connect service provider associated with the
--   connection.
connection_partnerName :: Lens' Connection (Maybe Text)

-- | The tags associated with the connection.
connection_tags :: Lens' Connection (Maybe (NonEmpty Tag))

-- | The time of the most recent call to DescribeLoa for this connection.
connection_loaIssueTime :: Lens' Connection (Maybe UTCTime)

-- | The ID of the account that owns the connection.
connection_ownerAccount :: Lens' Connection (Maybe Text)

-- | The Region where the connection is located.
connection_region :: Lens' Connection (Maybe Text)

-- | The ID of the VLAN.
connection_vlan :: Lens' Connection (Maybe Int)

-- | The location of the connection.
connection_location :: Lens' Connection (Maybe Text)

-- | Indicates whether the connection supports MAC Security (MACsec).
connection_macSecCapable :: Lens' Connection (Maybe Bool)

-- | The ID of the virtual interface.
confirmPublicVirtualInterface_virtualInterfaceId :: Lens' ConfirmPublicVirtualInterface Text

-- | The state of the virtual interface. The following are the possible
--   values:
--   
--   <ul>
--   <li><tt>confirming</tt>: The creation of the virtual interface is
--   pending confirmation from the virtual interface owner. If the owner of
--   the virtual interface is different from the owner of the connection on
--   which it is provisioned, then the virtual interface will remain in
--   this state until it is confirmed by the virtual interface owner.</li>
--   <li><tt>verifying</tt>: This state only applies to public virtual
--   interfaces. Each public virtual interface needs validation before the
--   virtual interface can be created.</li>
--   <li><tt>pending</tt>: A virtual interface is in this state from the
--   time that it is created until the virtual interface is ready to
--   forward traffic.</li>
--   <li><tt>available</tt>: A virtual interface that is able to forward
--   traffic.</li>
--   <li><tt>down</tt>: A virtual interface that is BGP down.</li>
--   <li><tt>deleting</tt>: A virtual interface is in this state
--   immediately after calling DeleteVirtualInterface until it can no
--   longer forward traffic.</li>
--   <li><tt>deleted</tt>: A virtual interface that cannot forward
--   traffic.</li>
--   <li><tt>rejected</tt>: The virtual interface owner has declined
--   creation of the virtual interface. If a virtual interface in the
--   <tt>Confirming</tt> state is deleted by the virtual interface owner,
--   the virtual interface enters the <tt>Rejected</tt> state.</li>
--   <li><tt>unknown</tt>: The state of the virtual interface is not
--   available.</li>
--   </ul>
confirmPublicVirtualInterfaceResponse_virtualInterfaceState :: Lens' ConfirmPublicVirtualInterfaceResponse (Maybe VirtualInterfaceState)

-- | The response's http status code.
confirmPublicVirtualInterfaceResponse_httpStatus :: Lens' ConfirmPublicVirtualInterfaceResponse Int

-- | The ID of the connection on which the private virtual interface is
--   provisioned.
allocatePrivateVirtualInterface_connectionId :: Lens' AllocatePrivateVirtualInterface Text

-- | The ID of the account that owns the virtual private interface.
allocatePrivateVirtualInterface_ownerAccount :: Lens' AllocatePrivateVirtualInterface Text

-- | Information about the private virtual interface.
allocatePrivateVirtualInterface_newPrivateVirtualInterfaceAllocation :: Lens' AllocatePrivateVirtualInterface NewPrivateVirtualInterfaceAllocation

-- | The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
virtualInterface_authKey :: Lens' VirtualInterface (Maybe Text)

-- | The BGP peers configured on this virtual interface.
virtualInterface_bgpPeers :: Lens' VirtualInterface (Maybe [BGPPeer])

-- | The ID of the virtual private gateway. Applies only to private virtual
--   interfaces.
virtualInterface_virtualGatewayId :: Lens' VirtualInterface (Maybe Text)

-- | The autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
--   
--   The valid values are 1-2147483647.
virtualInterface_asn :: Lens' VirtualInterface (Maybe Int)

-- | The Direct Connect endpoint that terminates the physical connection.
virtualInterface_awsDeviceV2 :: Lens' VirtualInterface (Maybe Text)

-- | The ID of the connection.
virtualInterface_connectionId :: Lens' VirtualInterface (Maybe Text)

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
virtualInterface_awsLogicalDeviceId :: Lens' VirtualInterface (Maybe Text)

-- | The customer router configuration.
virtualInterface_customerRouterConfig :: Lens' VirtualInterface (Maybe Text)

-- | Indicates whether jumbo frames (9001 MTU) are supported.
virtualInterface_jumboFrameCapable :: Lens' VirtualInterface (Maybe Bool)

-- | The routes to be advertised to the Amazon Web Services network in this
--   Region. Applies to public virtual interfaces.
virtualInterface_routeFilterPrefixes :: Lens' VirtualInterface (Maybe [RouteFilterPrefix])

-- | The maximum transmission unit (MTU), in bytes. The supported values
--   are 1500 and 9001. The default value is 1500.
virtualInterface_mtu :: Lens' VirtualInterface (Maybe Int)

-- | The type of virtual interface. The possible values are
--   <tt>private</tt> and <tt>public</tt>.
virtualInterface_virtualInterfaceType :: Lens' VirtualInterface (Maybe Text)

-- | The autonomous system number (ASN) for the Amazon side of the
--   connection.
virtualInterface_amazonSideAsn :: Lens' VirtualInterface (Maybe Integer)

-- | The ID of the virtual interface.
virtualInterface_virtualInterfaceId :: Lens' VirtualInterface (Maybe Text)

-- | The tags associated with the virtual interface.
virtualInterface_tags :: Lens' VirtualInterface (Maybe (NonEmpty Tag))

-- | The ID of the Direct Connect gateway.
virtualInterface_directConnectGatewayId :: Lens' VirtualInterface (Maybe Text)

-- | The name of the virtual interface assigned by the customer network.
--   The name has a maximum of 100 characters. The following are valid
--   characters: a-z, 0-9 and a hyphen (-).
virtualInterface_virtualInterfaceName :: Lens' VirtualInterface (Maybe Text)

-- | The state of the virtual interface. The following are the possible
--   values:
--   
--   <ul>
--   <li><tt>confirming</tt>: The creation of the virtual interface is
--   pending confirmation from the virtual interface owner. If the owner of
--   the virtual interface is different from the owner of the connection on
--   which it is provisioned, then the virtual interface will remain in
--   this state until it is confirmed by the virtual interface owner.</li>
--   <li><tt>verifying</tt>: This state only applies to public virtual
--   interfaces. Each public virtual interface needs validation before the
--   virtual interface can be created.</li>
--   <li><tt>pending</tt>: A virtual interface is in this state from the
--   time that it is created until the virtual interface is ready to
--   forward traffic.</li>
--   <li><tt>available</tt>: A virtual interface that is able to forward
--   traffic.</li>
--   <li><tt>down</tt>: A virtual interface that is BGP down.</li>
--   <li><tt>deleting</tt>: A virtual interface is in this state
--   immediately after calling DeleteVirtualInterface until it can no
--   longer forward traffic.</li>
--   <li><tt>deleted</tt>: A virtual interface that cannot forward
--   traffic.</li>
--   <li><tt>rejected</tt>: The virtual interface owner has declined
--   creation of the virtual interface. If a virtual interface in the
--   <tt>Confirming</tt> state is deleted by the virtual interface owner,
--   the virtual interface enters the <tt>Rejected</tt> state.</li>
--   <li><tt>unknown</tt>: The state of the virtual interface is not
--   available.</li>
--   </ul>
virtualInterface_virtualInterfaceState :: Lens' VirtualInterface (Maybe VirtualInterfaceState)

-- | The IP address assigned to the Amazon interface.
virtualInterface_amazonAddress :: Lens' VirtualInterface (Maybe Text)

-- | The address family for the BGP peer.
virtualInterface_addressFamily :: Lens' VirtualInterface (Maybe AddressFamily)

-- | The ID of the account that owns the virtual interface.
virtualInterface_ownerAccount :: Lens' VirtualInterface (Maybe Text)

-- | The Region where the virtual interface is located.
virtualInterface_region :: Lens' VirtualInterface (Maybe Text)

-- | The ID of the VLAN.
virtualInterface_vlan :: Lens' VirtualInterface (Maybe Int)

-- | The location of the connection.
virtualInterface_location :: Lens' VirtualInterface (Maybe Text)

-- | The IP address assigned to the customer interface.
virtualInterface_customerAddress :: Lens' VirtualInterface (Maybe Text)

-- | The token provided in the previous call to retrieve the next page.
describeDirectConnectGatewayAssociations_nextToken :: Lens' DescribeDirectConnectGatewayAssociations (Maybe Text)

-- | The ID of the virtual private gateway or transit gateway.
describeDirectConnectGatewayAssociations_virtualGatewayId :: Lens' DescribeDirectConnectGatewayAssociations (Maybe Text)

-- | The maximum number of results to return with a single call. To
--   retrieve the remaining results, make another call with the returned
--   <tt>nextToken</tt> value.
--   
--   If <tt>MaxResults</tt> is given a value larger than 100, only 100
--   results are returned.
describeDirectConnectGatewayAssociations_maxResults :: Lens' DescribeDirectConnectGatewayAssociations (Maybe Int)

-- | The ID of the associated gateway.
describeDirectConnectGatewayAssociations_associatedGatewayId :: Lens' DescribeDirectConnectGatewayAssociations (Maybe Text)

-- | The ID of the Direct Connect gateway association.
describeDirectConnectGatewayAssociations_associationId :: Lens' DescribeDirectConnectGatewayAssociations (Maybe Text)

-- | The ID of the Direct Connect gateway.
describeDirectConnectGatewayAssociations_directConnectGatewayId :: Lens' DescribeDirectConnectGatewayAssociations (Maybe Text)

-- | The token to retrieve the next page.
describeDirectConnectGatewayAssociationsResponse_nextToken :: Lens' DescribeDirectConnectGatewayAssociationsResponse (Maybe Text)

-- | Information about the associations.
describeDirectConnectGatewayAssociationsResponse_directConnectGatewayAssociations :: Lens' DescribeDirectConnectGatewayAssociationsResponse (Maybe [DirectConnectGatewayAssociation])

-- | The response's http status code.
describeDirectConnectGatewayAssociationsResponse_httpStatus :: Lens' DescribeDirectConnectGatewayAssociationsResponse Int

-- | The ID of the hosted connection.
confirmConnection_connectionId :: Lens' ConfirmConnection Text

-- | The state of the connection. The following are the possible values:
--   
--   <ul>
--   <li><tt>ordering</tt>: The initial state of a hosted connection
--   provisioned on an interconnect. The connection stays in the ordering
--   state until the owner of the hosted connection confirms or declines
--   the connection order.</li>
--   <li><tt>requested</tt>: The initial state of a standard connection.
--   The connection stays in the requested state until the Letter of
--   Authorization (LOA) is sent to the customer.</li>
--   <li><tt>pending</tt>: The connection has been approved and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is up and the connection is
--   ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The connection is being deleted.</li>
--   <li><tt>deleted</tt>: The connection has been deleted.</li>
--   <li><tt>rejected</tt>: A hosted connection in the <tt>ordering</tt>
--   state enters the <tt>rejected</tt> state if it is deleted by the
--   customer.</li>
--   <li><tt>unknown</tt>: The state of the connection is not
--   available.</li>
--   </ul>
confirmConnectionResponse_connectionState :: Lens' ConfirmConnectionResponse (Maybe ConnectionState)

-- | The response's http status code.
confirmConnectionResponse_httpStatus :: Lens' ConfirmConnectionResponse Int

-- | The Amazon Resource Names (ARNs) of the resources.
describeTags_resourceArns :: Lens' DescribeTags [Text]

-- | Information about the tags.
describeTagsResponse_resourceTags :: Lens' DescribeTagsResponse (Maybe [ResourceTag])

-- | The response's http status code.
describeTagsResponse_httpStatus :: Lens' DescribeTagsResponse Int

-- | The token provided in the previous call to retrieve the next page.
describeDirectConnectGatewayAttachments_nextToken :: Lens' DescribeDirectConnectGatewayAttachments (Maybe Text)

-- | The maximum number of results to return with a single call. To
--   retrieve the remaining results, make another call with the returned
--   <tt>nextToken</tt> value.
--   
--   If <tt>MaxResults</tt> is given a value larger than 100, only 100
--   results are returned.
describeDirectConnectGatewayAttachments_maxResults :: Lens' DescribeDirectConnectGatewayAttachments (Maybe Int)

-- | The ID of the virtual interface.
describeDirectConnectGatewayAttachments_virtualInterfaceId :: Lens' DescribeDirectConnectGatewayAttachments (Maybe Text)

-- | The ID of the Direct Connect gateway.
describeDirectConnectGatewayAttachments_directConnectGatewayId :: Lens' DescribeDirectConnectGatewayAttachments (Maybe Text)

-- | The token to retrieve the next page.
describeDirectConnectGatewayAttachmentsResponse_nextToken :: Lens' DescribeDirectConnectGatewayAttachmentsResponse (Maybe Text)

-- | The attachments.
describeDirectConnectGatewayAttachmentsResponse_directConnectGatewayAttachments :: Lens' DescribeDirectConnectGatewayAttachmentsResponse (Maybe [DirectConnectGatewayAttachment])

-- | The response's http status code.
describeDirectConnectGatewayAttachmentsResponse_httpStatus :: Lens' DescribeDirectConnectGatewayAttachmentsResponse Int

-- | The ID of the connection.
createPublicVirtualInterface_connectionId :: Lens' CreatePublicVirtualInterface Text

-- | Information about the public virtual interface.
createPublicVirtualInterface_newPublicVirtualInterface :: Lens' CreatePublicVirtualInterface NewPublicVirtualInterface

-- | The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
virtualInterface_authKey :: Lens' VirtualInterface (Maybe Text)

-- | The BGP peers configured on this virtual interface.
virtualInterface_bgpPeers :: Lens' VirtualInterface (Maybe [BGPPeer])

-- | The ID of the virtual private gateway. Applies only to private virtual
--   interfaces.
virtualInterface_virtualGatewayId :: Lens' VirtualInterface (Maybe Text)

-- | The autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
--   
--   The valid values are 1-2147483647.
virtualInterface_asn :: Lens' VirtualInterface (Maybe Int)

-- | The Direct Connect endpoint that terminates the physical connection.
virtualInterface_awsDeviceV2 :: Lens' VirtualInterface (Maybe Text)

-- | The ID of the connection.
virtualInterface_connectionId :: Lens' VirtualInterface (Maybe Text)

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
virtualInterface_awsLogicalDeviceId :: Lens' VirtualInterface (Maybe Text)

-- | The customer router configuration.
virtualInterface_customerRouterConfig :: Lens' VirtualInterface (Maybe Text)

-- | Indicates whether jumbo frames (9001 MTU) are supported.
virtualInterface_jumboFrameCapable :: Lens' VirtualInterface (Maybe Bool)

-- | The routes to be advertised to the Amazon Web Services network in this
--   Region. Applies to public virtual interfaces.
virtualInterface_routeFilterPrefixes :: Lens' VirtualInterface (Maybe [RouteFilterPrefix])

-- | The maximum transmission unit (MTU), in bytes. The supported values
--   are 1500 and 9001. The default value is 1500.
virtualInterface_mtu :: Lens' VirtualInterface (Maybe Int)

-- | The type of virtual interface. The possible values are
--   <tt>private</tt> and <tt>public</tt>.
virtualInterface_virtualInterfaceType :: Lens' VirtualInterface (Maybe Text)

-- | The autonomous system number (ASN) for the Amazon side of the
--   connection.
virtualInterface_amazonSideAsn :: Lens' VirtualInterface (Maybe Integer)

-- | The ID of the virtual interface.
virtualInterface_virtualInterfaceId :: Lens' VirtualInterface (Maybe Text)

-- | The tags associated with the virtual interface.
virtualInterface_tags :: Lens' VirtualInterface (Maybe (NonEmpty Tag))

-- | The ID of the Direct Connect gateway.
virtualInterface_directConnectGatewayId :: Lens' VirtualInterface (Maybe Text)

-- | The name of the virtual interface assigned by the customer network.
--   The name has a maximum of 100 characters. The following are valid
--   characters: a-z, 0-9 and a hyphen (-).
virtualInterface_virtualInterfaceName :: Lens' VirtualInterface (Maybe Text)

-- | The state of the virtual interface. The following are the possible
--   values:
--   
--   <ul>
--   <li><tt>confirming</tt>: The creation of the virtual interface is
--   pending confirmation from the virtual interface owner. If the owner of
--   the virtual interface is different from the owner of the connection on
--   which it is provisioned, then the virtual interface will remain in
--   this state until it is confirmed by the virtual interface owner.</li>
--   <li><tt>verifying</tt>: This state only applies to public virtual
--   interfaces. Each public virtual interface needs validation before the
--   virtual interface can be created.</li>
--   <li><tt>pending</tt>: A virtual interface is in this state from the
--   time that it is created until the virtual interface is ready to
--   forward traffic.</li>
--   <li><tt>available</tt>: A virtual interface that is able to forward
--   traffic.</li>
--   <li><tt>down</tt>: A virtual interface that is BGP down.</li>
--   <li><tt>deleting</tt>: A virtual interface is in this state
--   immediately after calling DeleteVirtualInterface until it can no
--   longer forward traffic.</li>
--   <li><tt>deleted</tt>: A virtual interface that cannot forward
--   traffic.</li>
--   <li><tt>rejected</tt>: The virtual interface owner has declined
--   creation of the virtual interface. If a virtual interface in the
--   <tt>Confirming</tt> state is deleted by the virtual interface owner,
--   the virtual interface enters the <tt>Rejected</tt> state.</li>
--   <li><tt>unknown</tt>: The state of the virtual interface is not
--   available.</li>
--   </ul>
virtualInterface_virtualInterfaceState :: Lens' VirtualInterface (Maybe VirtualInterfaceState)

-- | The IP address assigned to the Amazon interface.
virtualInterface_amazonAddress :: Lens' VirtualInterface (Maybe Text)

-- | The address family for the BGP peer.
virtualInterface_addressFamily :: Lens' VirtualInterface (Maybe AddressFamily)

-- | The ID of the account that owns the virtual interface.
virtualInterface_ownerAccount :: Lens' VirtualInterface (Maybe Text)

-- | The Region where the virtual interface is located.
virtualInterface_region :: Lens' VirtualInterface (Maybe Text)

-- | The ID of the VLAN.
virtualInterface_vlan :: Lens' VirtualInterface (Maybe Int)

-- | The location of the connection.
virtualInterface_location :: Lens' VirtualInterface (Maybe Text)

-- | The IP address assigned to the customer interface.
virtualInterface_customerAddress :: Lens' VirtualInterface (Maybe Text)

-- | The MAC Security (MACsec) CKN to associate with the dedicated
--   connection.
--   
--   You can create the CKN/CAK pair using an industry standard tool.
--   
--   The valid values are 64 hexadecimal characters (0-9, A-E).
--   
--   If you use this request parameter, you must use the <tt>cak</tt>
--   request parameter and not use the <tt>secretARN</tt> request
--   parameter.
associateMacSecKey_ckn :: Lens' AssociateMacSecKey (Maybe Text)

-- | The Amazon Resource Name (ARN) of the MAC Security (MACsec) secret key
--   to associate with the dedicated connection.
--   
--   You can use DescribeConnections or DescribeLags to retrieve the MAC
--   Security (MACsec) secret key.
--   
--   If you use this request parameter, you do not use the <tt>ckn</tt> and
--   <tt>cak</tt> request parameters.
associateMacSecKey_secretARN :: Lens' AssociateMacSecKey (Maybe Text)

-- | The MAC Security (MACsec) CAK to associate with the dedicated
--   connection.
--   
--   You can create the CKN/CAK pair using an industry standard tool.
--   
--   The valid values are 64 hexadecimal characters (0-9, A-E).
--   
--   If you use this request parameter, you must use the <tt>ckn</tt>
--   request parameter and not use the <tt>secretARN</tt> request
--   parameter.
associateMacSecKey_cak :: Lens' AssociateMacSecKey (Maybe Text)

-- | The ID of the dedicated connection (dxcon-xxxx), or the ID of the LAG
--   (dxlag-xxxx).
--   
--   You can use DescribeConnections or DescribeLags to retrieve connection
--   ID.
associateMacSecKey_connectionId :: Lens' AssociateMacSecKey Text

-- | The MAC Security (MACsec) security keys associated with the dedicated
--   connection.
associateMacSecKeyResponse_macSecKeys :: Lens' AssociateMacSecKeyResponse (Maybe [MacSecKey])

-- | The ID of the dedicated connection (dxcon-xxxx), or the ID of the LAG
--   (dxlag-xxxx).
associateMacSecKeyResponse_connectionId :: Lens' AssociateMacSecKeyResponse (Maybe Text)

-- | The response's http status code.
associateMacSecKeyResponse_httpStatus :: Lens' AssociateMacSecKeyResponse Int

-- | The ID of the interconnect or LAG.
describeHostedConnections_connectionId :: Lens' DescribeHostedConnections Text

-- | The connections.
connections_connections :: Lens' Connections (Maybe [Connection])

-- | Overrides the Amazon VPC prefixes advertised to the Direct Connect
--   gateway.
--   
--   For information about how to set the prefixes, see <a>Allowed
--   Prefixes</a> in the <i>Direct Connect User Guide</i>.
acceptDirectConnectGatewayAssociationProposal_overrideAllowedPrefixesToDirectConnectGateway :: Lens' AcceptDirectConnectGatewayAssociationProposal (Maybe [RouteFilterPrefix])

-- | The ID of the Direct Connect gateway.
acceptDirectConnectGatewayAssociationProposal_directConnectGatewayId :: Lens' AcceptDirectConnectGatewayAssociationProposal Text

-- | The ID of the request proposal.
acceptDirectConnectGatewayAssociationProposal_proposalId :: Lens' AcceptDirectConnectGatewayAssociationProposal Text

-- | The ID of the account that owns the virtual private gateway or transit
--   gateway.
acceptDirectConnectGatewayAssociationProposal_associatedGatewayOwnerAccount :: Lens' AcceptDirectConnectGatewayAssociationProposal Text

-- | Undocumented member.
acceptDirectConnectGatewayAssociationProposalResponse_directConnectGatewayAssociation :: Lens' AcceptDirectConnectGatewayAssociationProposalResponse (Maybe DirectConnectGatewayAssociation)

-- | The response's http status code.
acceptDirectConnectGatewayAssociationProposalResponse_httpStatus :: Lens' AcceptDirectConnectGatewayAssociationProposalResponse Int

-- | The name of the service provider associated with the interconnect.
createInterconnect_providerName :: Lens' CreateInterconnect (Maybe Text)

-- | The ID of the LAG.
createInterconnect_lagId :: Lens' CreateInterconnect (Maybe Text)

-- | The tags to associate with the interconnect.
createInterconnect_tags :: Lens' CreateInterconnect (Maybe (NonEmpty Tag))

-- | The name of the interconnect.
createInterconnect_interconnectName :: Lens' CreateInterconnect Text

-- | The port bandwidth, in Gbps. The possible values are 1 and 10.
createInterconnect_bandwidth :: Lens' CreateInterconnect Text

-- | The location of the interconnect.
createInterconnect_location :: Lens' CreateInterconnect Text

-- | The ID of the interconnect.
interconnect_interconnectId :: Lens' Interconnect (Maybe Text)

-- | The bandwidth of the connection.
interconnect_bandwidth :: Lens' Interconnect (Maybe Text)

-- | The Direct Connect endpoint that terminates the physical connection.
interconnect_awsDeviceV2 :: Lens' Interconnect (Maybe Text)

-- | The name of the service provider associated with the interconnect.
interconnect_providerName :: Lens' Interconnect (Maybe Text)

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
interconnect_awsLogicalDeviceId :: Lens' Interconnect (Maybe Text)

-- | Indicates whether the interconnect supports a secondary BGP in the
--   same address family (IPv4/IPv6).
interconnect_hasLogicalRedundancy :: Lens' Interconnect (Maybe HasLogicalRedundancy)

-- | The Direct Connect endpoint on which the physical connection
--   terminates.
interconnect_awsDevice :: Lens' Interconnect (Maybe Text)

-- | Indicates whether jumbo frames (9001 MTU) are supported.
interconnect_jumboFrameCapable :: Lens' Interconnect (Maybe Bool)

-- | The ID of the LAG.
interconnect_lagId :: Lens' Interconnect (Maybe Text)

-- | The tags associated with the interconnect.
interconnect_tags :: Lens' Interconnect (Maybe (NonEmpty Tag))

-- | The time of the most recent call to DescribeLoa for this connection.
interconnect_loaIssueTime :: Lens' Interconnect (Maybe UTCTime)

-- | The Region where the connection is located.
interconnect_region :: Lens' Interconnect (Maybe Text)

-- | The name of the interconnect.
interconnect_interconnectName :: Lens' Interconnect (Maybe Text)

-- | The state of the interconnect. The following are the possible values:
--   
--   <ul>
--   <li><tt>requested</tt>: The initial state of an interconnect. The
--   interconnect stays in the requested state until the Letter of
--   Authorization (LOA) is sent to the customer.</li>
--   <li><tt>pending</tt>: The interconnect is approved, and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is up, and the interconnect
--   is ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The interconnect is being deleted.</li>
--   <li><tt>deleted</tt>: The interconnect is deleted.</li>
--   <li><tt>unknown</tt>: The state of the interconnect is not
--   available.</li>
--   </ul>
interconnect_interconnectState :: Lens' Interconnect (Maybe InterconnectState)

-- | The location of the connection.
interconnect_location :: Lens' Interconnect (Maybe Text)

-- | The ID of the virtual private gateway.
createDirectConnectGatewayAssociation_virtualGatewayId :: Lens' CreateDirectConnectGatewayAssociation (Maybe Text)

-- | The Amazon VPC prefixes to advertise to the Direct Connect gateway
--   
--   This parameter is required when you create an association to a transit
--   gateway.
--   
--   For information about how to set the prefixes, see <a>Allowed
--   Prefixes</a> in the <i>Direct Connect User Guide</i>.
createDirectConnectGatewayAssociation_addAllowedPrefixesToDirectConnectGateway :: Lens' CreateDirectConnectGatewayAssociation (Maybe [RouteFilterPrefix])

-- | The ID of the virtual private gateway or transit gateway.
createDirectConnectGatewayAssociation_gatewayId :: Lens' CreateDirectConnectGatewayAssociation (Maybe Text)

-- | The ID of the Direct Connect gateway.
createDirectConnectGatewayAssociation_directConnectGatewayId :: Lens' CreateDirectConnectGatewayAssociation Text

-- | The association to be created.
createDirectConnectGatewayAssociationResponse_directConnectGatewayAssociation :: Lens' CreateDirectConnectGatewayAssociationResponse (Maybe DirectConnectGatewayAssociation)

-- | The response's http status code.
createDirectConnectGatewayAssociationResponse_httpStatus :: Lens' CreateDirectConnectGatewayAssociationResponse Int

-- | The ID of the LAG.
deleteLag_lagId :: Lens' DeleteLag Text

-- | The number of physical dedicated connections bundled by the LAG, up to
--   a maximum of 10.
lag_numberOfConnections :: Lens' Lag (Maybe Int)

-- | The Direct Connect endpoint that hosts the LAG.
lag_awsDeviceV2 :: Lens' Lag (Maybe Text)

-- | Indicates whether the LAG can host other connections.
lag_allowsHostedConnections :: Lens' Lag (Maybe Bool)

-- | The MAC Security (MACsec) security keys associated with the LAG.
lag_macSecKeys :: Lens' Lag (Maybe [MacSecKey])

-- | The name of the service provider associated with the LAG.
lag_providerName :: Lens' Lag (Maybe Text)

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
lag_awsLogicalDeviceId :: Lens' Lag (Maybe Text)

-- | Indicates whether the LAG supports a secondary BGP peer in the same
--   address family (IPv4/IPv6).
lag_hasLogicalRedundancy :: Lens' Lag (Maybe HasLogicalRedundancy)

-- | The name of the LAG.
lag_lagName :: Lens' Lag (Maybe Text)

-- | The connections bundled by the LAG.
lag_connections :: Lens' Lag (Maybe [Connection])

-- | The Direct Connect endpoint that hosts the LAG.
lag_awsDevice :: Lens' Lag (Maybe Text)

-- | The state of the LAG. The following are the possible values:
--   
--   <ul>
--   <li><tt>requested</tt>: The initial state of a LAG. The LAG stays in
--   the requested state until the Letter of Authorization (LOA) is
--   available.</li>
--   <li><tt>pending</tt>: The LAG has been approved and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is established and the LAG is
--   ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The LAG is being deleted.</li>
--   <li><tt>deleted</tt>: The LAG is deleted.</li>
--   <li><tt>unknown</tt>: The state of the LAG is not available.</li>
--   </ul>
lag_lagState :: Lens' Lag (Maybe LagState)

-- | Indicates whether jumbo frames (9001 MTU) are supported.
lag_jumboFrameCapable :: Lens' Lag (Maybe Bool)

-- | The individual bandwidth of the physical connections bundled by the
--   LAG. The possible values are 1Gbps and 10Gbps.
lag_connectionsBandwidth :: Lens' Lag (Maybe Text)

-- | The ID of the LAG.
lag_lagId :: Lens' Lag (Maybe Text)

-- | The LAG MAC Security (MACsec) encryption mode.
--   
--   The valid values are <tt>no_encrypt</tt>, <tt>should_encrypt</tt>, and
--   <tt>must_encrypt</tt>.
lag_encryptionMode :: Lens' Lag (Maybe Text)

-- | The tags associated with the LAG.
lag_tags :: Lens' Lag (Maybe (NonEmpty Tag))

-- | The ID of the account that owns the LAG.
lag_ownerAccount :: Lens' Lag (Maybe Text)

-- | The Region where the connection is located.
lag_region :: Lens' Lag (Maybe Text)

-- | The location of the LAG.
lag_location :: Lens' Lag (Maybe Text)

-- | The minimum number of physical dedicated connections that must be
--   operational for the LAG itself to be operational.
lag_minimumLinks :: Lens' Lag (Maybe Int)

-- | Indicates whether the LAG supports MAC Security (MACsec).
lag_macSecCapable :: Lens' Lag (Maybe Bool)

-- | The ID of the interconnect.
deleteInterconnect_interconnectId :: Lens' DeleteInterconnect Text

-- | The state of the interconnect. The following are the possible values:
--   
--   <ul>
--   <li><tt>requested</tt>: The initial state of an interconnect. The
--   interconnect stays in the requested state until the Letter of
--   Authorization (LOA) is sent to the customer.</li>
--   <li><tt>pending</tt>: The interconnect is approved, and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is up, and the interconnect
--   is ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The interconnect is being deleted.</li>
--   <li><tt>deleted</tt>: The interconnect is deleted.</li>
--   <li><tt>unknown</tt>: The state of the interconnect is not
--   available.</li>
--   </ul>
deleteInterconnectResponse_interconnectState :: Lens' DeleteInterconnectResponse (Maybe InterconnectState)

-- | The response's http status code.
deleteInterconnectResponse_httpStatus :: Lens' DeleteInterconnectResponse Int

-- | The ID of the hosted connection.
associateHostedConnection_connectionId :: Lens' AssociateHostedConnection Text

-- | The ID of the interconnect or the LAG.
associateHostedConnection_parentConnectionId :: Lens' AssociateHostedConnection Text

-- | The bandwidth of the connection.
connection_bandwidth :: Lens' Connection (Maybe Text)

-- | The Direct Connect endpoint that terminates the physical connection.
connection_awsDeviceV2 :: Lens' Connection (Maybe Text)

-- | The state of the connection. The following are the possible values:
--   
--   <ul>
--   <li><tt>ordering</tt>: The initial state of a hosted connection
--   provisioned on an interconnect. The connection stays in the ordering
--   state until the owner of the hosted connection confirms or declines
--   the connection order.</li>
--   <li><tt>requested</tt>: The initial state of a standard connection.
--   The connection stays in the requested state until the Letter of
--   Authorization (LOA) is sent to the customer.</li>
--   <li><tt>pending</tt>: The connection has been approved and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is up and the connection is
--   ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The connection is being deleted.</li>
--   <li><tt>deleted</tt>: The connection has been deleted.</li>
--   <li><tt>rejected</tt>: A hosted connection in the <tt>ordering</tt>
--   state enters the <tt>rejected</tt> state if it is deleted by the
--   customer.</li>
--   <li><tt>unknown</tt>: The state of the connection is not
--   available.</li>
--   </ul>
connection_connectionState :: Lens' Connection (Maybe ConnectionState)

-- | The name of the connection.
connection_connectionName :: Lens' Connection (Maybe Text)

-- | The MAC Security (MACsec) security keys associated with the
--   connection.
connection_macSecKeys :: Lens' Connection (Maybe [MacSecKey])

-- | The name of the service provider associated with the connection.
connection_providerName :: Lens' Connection (Maybe Text)

-- | The ID of the connection.
connection_connectionId :: Lens' Connection (Maybe Text)

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
connection_awsLogicalDeviceId :: Lens' Connection (Maybe Text)

-- | Indicates whether the connection supports a secondary BGP peer in the
--   same address family (IPv4/IPv6).
connection_hasLogicalRedundancy :: Lens' Connection (Maybe HasLogicalRedundancy)

-- | The Direct Connect endpoint on which the physical connection
--   terminates.
connection_awsDevice :: Lens' Connection (Maybe Text)

-- | Indicates whether jumbo frames (9001 MTU) are supported.
connection_jumboFrameCapable :: Lens' Connection (Maybe Bool)

-- | The MAC Security (MACsec) port link status of the connection.
--   
--   The valid values are <tt>Encryption Up</tt>, which means that there is
--   an active Connection Key Name, or <tt>Encryption Down</tt>.
connection_portEncryptionStatus :: Lens' Connection (Maybe Text)

-- | The ID of the LAG.
connection_lagId :: Lens' Connection (Maybe Text)

-- | The MAC Security (MACsec) connection encryption mode.
--   
--   The valid values are <tt>no_encrypt</tt>, <tt>should_encrypt</tt>, and
--   <tt>must_encrypt</tt>.
connection_encryptionMode :: Lens' Connection (Maybe Text)

-- | The name of the Direct Connect service provider associated with the
--   connection.
connection_partnerName :: Lens' Connection (Maybe Text)

-- | The tags associated with the connection.
connection_tags :: Lens' Connection (Maybe (NonEmpty Tag))

-- | The time of the most recent call to DescribeLoa for this connection.
connection_loaIssueTime :: Lens' Connection (Maybe UTCTime)

-- | The ID of the account that owns the connection.
connection_ownerAccount :: Lens' Connection (Maybe Text)

-- | The Region where the connection is located.
connection_region :: Lens' Connection (Maybe Text)

-- | The ID of the VLAN.
connection_vlan :: Lens' Connection (Maybe Int)

-- | The location of the connection.
connection_location :: Lens' Connection (Maybe Text)

-- | Indicates whether the connection supports MAC Security (MACsec).
connection_macSecCapable :: Lens' Connection (Maybe Bool)

-- | The ID of the virtual interface.
createBGPPeer_virtualInterfaceId :: Lens' CreateBGPPeer (Maybe Text)

-- | Information about the BGP peer.
createBGPPeer_newBGPPeer :: Lens' CreateBGPPeer (Maybe NewBGPPeer)

-- | The virtual interface.
createBGPPeerResponse_virtualInterface :: Lens' CreateBGPPeerResponse (Maybe VirtualInterface)

-- | The response's http status code.
createBGPPeerResponse_httpStatus :: Lens' CreateBGPPeerResponse Int

-- | The name of the LAG.
updateLag_lagName :: Lens' UpdateLag (Maybe Text)

-- | The LAG MAC Security (MACsec) encryption mode.
--   
--   Amazon Web Services applies the value to all connections which are
--   part of the LAG.
updateLag_encryptionMode :: Lens' UpdateLag (Maybe Text)

-- | The minimum number of physical connections that must be operational
--   for the LAG itself to be operational.
updateLag_minimumLinks :: Lens' UpdateLag (Maybe Int)

-- | The ID of the LAG.
updateLag_lagId :: Lens' UpdateLag Text

-- | The number of physical dedicated connections bundled by the LAG, up to
--   a maximum of 10.
lag_numberOfConnections :: Lens' Lag (Maybe Int)

-- | The Direct Connect endpoint that hosts the LAG.
lag_awsDeviceV2 :: Lens' Lag (Maybe Text)

-- | Indicates whether the LAG can host other connections.
lag_allowsHostedConnections :: Lens' Lag (Maybe Bool)

-- | The MAC Security (MACsec) security keys associated with the LAG.
lag_macSecKeys :: Lens' Lag (Maybe [MacSecKey])

-- | The name of the service provider associated with the LAG.
lag_providerName :: Lens' Lag (Maybe Text)

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
lag_awsLogicalDeviceId :: Lens' Lag (Maybe Text)

-- | Indicates whether the LAG supports a secondary BGP peer in the same
--   address family (IPv4/IPv6).
lag_hasLogicalRedundancy :: Lens' Lag (Maybe HasLogicalRedundancy)

-- | The name of the LAG.
lag_lagName :: Lens' Lag (Maybe Text)

-- | The connections bundled by the LAG.
lag_connections :: Lens' Lag (Maybe [Connection])

-- | The Direct Connect endpoint that hosts the LAG.
lag_awsDevice :: Lens' Lag (Maybe Text)

-- | The state of the LAG. The following are the possible values:
--   
--   <ul>
--   <li><tt>requested</tt>: The initial state of a LAG. The LAG stays in
--   the requested state until the Letter of Authorization (LOA) is
--   available.</li>
--   <li><tt>pending</tt>: The LAG has been approved and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is established and the LAG is
--   ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The LAG is being deleted.</li>
--   <li><tt>deleted</tt>: The LAG is deleted.</li>
--   <li><tt>unknown</tt>: The state of the LAG is not available.</li>
--   </ul>
lag_lagState :: Lens' Lag (Maybe LagState)

-- | Indicates whether jumbo frames (9001 MTU) are supported.
lag_jumboFrameCapable :: Lens' Lag (Maybe Bool)

-- | The individual bandwidth of the physical connections bundled by the
--   LAG. The possible values are 1Gbps and 10Gbps.
lag_connectionsBandwidth :: Lens' Lag (Maybe Text)

-- | The ID of the LAG.
lag_lagId :: Lens' Lag (Maybe Text)

-- | The LAG MAC Security (MACsec) encryption mode.
--   
--   The valid values are <tt>no_encrypt</tt>, <tt>should_encrypt</tt>, and
--   <tt>must_encrypt</tt>.
lag_encryptionMode :: Lens' Lag (Maybe Text)

-- | The tags associated with the LAG.
lag_tags :: Lens' Lag (Maybe (NonEmpty Tag))

-- | The ID of the account that owns the LAG.
lag_ownerAccount :: Lens' Lag (Maybe Text)

-- | The Region where the connection is located.
lag_region :: Lens' Lag (Maybe Text)

-- | The location of the LAG.
lag_location :: Lens' Lag (Maybe Text)

-- | The minimum number of physical dedicated connections that must be
--   operational for the LAG itself to be operational.
lag_minimumLinks :: Lens' Lag (Maybe Int)

-- | Indicates whether the LAG supports MAC Security (MACsec).
lag_macSecCapable :: Lens' Lag (Maybe Bool)

-- | The Amazon Resource Name (ARN) of the resource.
untagResource_resourceArn :: Lens' UntagResource Text

-- | The tag keys of the tags to remove.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int

-- | The ID of the virtual private gateway.
confirmPrivateVirtualInterface_virtualGatewayId :: Lens' ConfirmPrivateVirtualInterface (Maybe Text)

-- | The ID of the Direct Connect gateway.
confirmPrivateVirtualInterface_directConnectGatewayId :: Lens' ConfirmPrivateVirtualInterface (Maybe Text)

-- | The ID of the virtual interface.
confirmPrivateVirtualInterface_virtualInterfaceId :: Lens' ConfirmPrivateVirtualInterface Text

-- | The state of the virtual interface. The following are the possible
--   values:
--   
--   <ul>
--   <li><tt>confirming</tt>: The creation of the virtual interface is
--   pending confirmation from the virtual interface owner. If the owner of
--   the virtual interface is different from the owner of the connection on
--   which it is provisioned, then the virtual interface will remain in
--   this state until it is confirmed by the virtual interface owner.</li>
--   <li><tt>verifying</tt>: This state only applies to public virtual
--   interfaces. Each public virtual interface needs validation before the
--   virtual interface can be created.</li>
--   <li><tt>pending</tt>: A virtual interface is in this state from the
--   time that it is created until the virtual interface is ready to
--   forward traffic.</li>
--   <li><tt>available</tt>: A virtual interface that is able to forward
--   traffic.</li>
--   <li><tt>down</tt>: A virtual interface that is BGP down.</li>
--   <li><tt>deleting</tt>: A virtual interface is in this state
--   immediately after calling DeleteVirtualInterface until it can no
--   longer forward traffic.</li>
--   <li><tt>deleted</tt>: A virtual interface that cannot forward
--   traffic.</li>
--   <li><tt>rejected</tt>: The virtual interface owner has declined
--   creation of the virtual interface. If a virtual interface in the
--   <tt>Confirming</tt> state is deleted by the virtual interface owner,
--   the virtual interface enters the <tt>Rejected</tt> state.</li>
--   <li><tt>unknown</tt>: The state of the virtual interface is not
--   available.</li>
--   </ul>
confirmPrivateVirtualInterfaceResponse_virtualInterfaceState :: Lens' ConfirmPrivateVirtualInterfaceResponse (Maybe VirtualInterfaceState)

-- | The response's http status code.
confirmPrivateVirtualInterfaceResponse_httpStatus :: Lens' ConfirmPrivateVirtualInterfaceResponse Int

-- | The ID of the connection.
disassociateConnectionFromLag_connectionId :: Lens' DisassociateConnectionFromLag Text

-- | The ID of the LAG.
disassociateConnectionFromLag_lagId :: Lens' DisassociateConnectionFromLag Text

-- | The bandwidth of the connection.
connection_bandwidth :: Lens' Connection (Maybe Text)

-- | The Direct Connect endpoint that terminates the physical connection.
connection_awsDeviceV2 :: Lens' Connection (Maybe Text)

-- | The state of the connection. The following are the possible values:
--   
--   <ul>
--   <li><tt>ordering</tt>: The initial state of a hosted connection
--   provisioned on an interconnect. The connection stays in the ordering
--   state until the owner of the hosted connection confirms or declines
--   the connection order.</li>
--   <li><tt>requested</tt>: The initial state of a standard connection.
--   The connection stays in the requested state until the Letter of
--   Authorization (LOA) is sent to the customer.</li>
--   <li><tt>pending</tt>: The connection has been approved and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is up and the connection is
--   ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The connection is being deleted.</li>
--   <li><tt>deleted</tt>: The connection has been deleted.</li>
--   <li><tt>rejected</tt>: A hosted connection in the <tt>ordering</tt>
--   state enters the <tt>rejected</tt> state if it is deleted by the
--   customer.</li>
--   <li><tt>unknown</tt>: The state of the connection is not
--   available.</li>
--   </ul>
connection_connectionState :: Lens' Connection (Maybe ConnectionState)

-- | The name of the connection.
connection_connectionName :: Lens' Connection (Maybe Text)

-- | The MAC Security (MACsec) security keys associated with the
--   connection.
connection_macSecKeys :: Lens' Connection (Maybe [MacSecKey])

-- | The name of the service provider associated with the connection.
connection_providerName :: Lens' Connection (Maybe Text)

-- | The ID of the connection.
connection_connectionId :: Lens' Connection (Maybe Text)

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
connection_awsLogicalDeviceId :: Lens' Connection (Maybe Text)

-- | Indicates whether the connection supports a secondary BGP peer in the
--   same address family (IPv4/IPv6).
connection_hasLogicalRedundancy :: Lens' Connection (Maybe HasLogicalRedundancy)

-- | The Direct Connect endpoint on which the physical connection
--   terminates.
connection_awsDevice :: Lens' Connection (Maybe Text)

-- | Indicates whether jumbo frames (9001 MTU) are supported.
connection_jumboFrameCapable :: Lens' Connection (Maybe Bool)

-- | The MAC Security (MACsec) port link status of the connection.
--   
--   The valid values are <tt>Encryption Up</tt>, which means that there is
--   an active Connection Key Name, or <tt>Encryption Down</tt>.
connection_portEncryptionStatus :: Lens' Connection (Maybe Text)

-- | The ID of the LAG.
connection_lagId :: Lens' Connection (Maybe Text)

-- | The MAC Security (MACsec) connection encryption mode.
--   
--   The valid values are <tt>no_encrypt</tt>, <tt>should_encrypt</tt>, and
--   <tt>must_encrypt</tt>.
connection_encryptionMode :: Lens' Connection (Maybe Text)

-- | The name of the Direct Connect service provider associated with the
--   connection.
connection_partnerName :: Lens' Connection (Maybe Text)

-- | The tags associated with the connection.
connection_tags :: Lens' Connection (Maybe (NonEmpty Tag))

-- | The time of the most recent call to DescribeLoa for this connection.
connection_loaIssueTime :: Lens' Connection (Maybe UTCTime)

-- | The ID of the account that owns the connection.
connection_ownerAccount :: Lens' Connection (Maybe Text)

-- | The Region where the connection is located.
connection_region :: Lens' Connection (Maybe Text)

-- | The ID of the VLAN.
connection_vlan :: Lens' Connection (Maybe Int)

-- | The location of the connection.
connection_location :: Lens' Connection (Maybe Text)

-- | Indicates whether the connection supports MAC Security (MACsec).
connection_macSecCapable :: Lens' Connection (Maybe Bool)

-- | The Amazon Resource Name (ARN) of the resource.
tagResource_resourceArn :: Lens' TagResource Text

-- | The tags to add.
tagResource_tags :: Lens' TagResource (NonEmpty Tag)

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int

-- | The ID of the virtual interface.
deleteVirtualInterface_virtualInterfaceId :: Lens' DeleteVirtualInterface Text

-- | The state of the virtual interface. The following are the possible
--   values:
--   
--   <ul>
--   <li><tt>confirming</tt>: The creation of the virtual interface is
--   pending confirmation from the virtual interface owner. If the owner of
--   the virtual interface is different from the owner of the connection on
--   which it is provisioned, then the virtual interface will remain in
--   this state until it is confirmed by the virtual interface owner.</li>
--   <li><tt>verifying</tt>: This state only applies to public virtual
--   interfaces. Each public virtual interface needs validation before the
--   virtual interface can be created.</li>
--   <li><tt>pending</tt>: A virtual interface is in this state from the
--   time that it is created until the virtual interface is ready to
--   forward traffic.</li>
--   <li><tt>available</tt>: A virtual interface that is able to forward
--   traffic.</li>
--   <li><tt>down</tt>: A virtual interface that is BGP down.</li>
--   <li><tt>deleting</tt>: A virtual interface is in this state
--   immediately after calling DeleteVirtualInterface until it can no
--   longer forward traffic.</li>
--   <li><tt>deleted</tt>: A virtual interface that cannot forward
--   traffic.</li>
--   <li><tt>rejected</tt>: The virtual interface owner has declined
--   creation of the virtual interface. If a virtual interface in the
--   <tt>Confirming</tt> state is deleted by the virtual interface owner,
--   the virtual interface enters the <tt>Rejected</tt> state.</li>
--   <li><tt>unknown</tt>: The state of the virtual interface is not
--   available.</li>
--   </ul>
deleteVirtualInterfaceResponse_virtualInterfaceState :: Lens' DeleteVirtualInterfaceResponse (Maybe VirtualInterfaceState)

-- | The response's http status code.
deleteVirtualInterfaceResponse_httpStatus :: Lens' DeleteVirtualInterfaceResponse Int

-- | The token provided in the previous call to retrieve the next page.
describeDirectConnectGateways_nextToken :: Lens' DescribeDirectConnectGateways (Maybe Text)

-- | The maximum number of results to return with a single call. To
--   retrieve the remaining results, make another call with the returned
--   <tt>nextToken</tt> value.
--   
--   If <tt>MaxResults</tt> is given a value larger than 100, only 100
--   results are returned.
describeDirectConnectGateways_maxResults :: Lens' DescribeDirectConnectGateways (Maybe Int)

-- | The ID of the Direct Connect gateway.
describeDirectConnectGateways_directConnectGatewayId :: Lens' DescribeDirectConnectGateways (Maybe Text)

-- | The token to retrieve the next page.
describeDirectConnectGatewaysResponse_nextToken :: Lens' DescribeDirectConnectGatewaysResponse (Maybe Text)

-- | The Direct Connect gateways.
describeDirectConnectGatewaysResponse_directConnectGateways :: Lens' DescribeDirectConnectGatewaysResponse (Maybe [DirectConnectGateway])

-- | The response's http status code.
describeDirectConnectGatewaysResponse_httpStatus :: Lens' DescribeDirectConnectGatewaysResponse Int

-- | The ID of the connection.
describeVirtualInterfaces_connectionId :: Lens' DescribeVirtualInterfaces (Maybe Text)

-- | The ID of the virtual interface.
describeVirtualInterfaces_virtualInterfaceId :: Lens' DescribeVirtualInterfaces (Maybe Text)

-- | The virtual interfaces
describeVirtualInterfacesResponse_virtualInterfaces :: Lens' DescribeVirtualInterfacesResponse (Maybe [VirtualInterface])

-- | The response's http status code.
describeVirtualInterfacesResponse_httpStatus :: Lens' DescribeVirtualInterfacesResponse Int

-- | The maximum transmission unit (MTU), in bytes. The supported values
--   are 1500 and 9001. The default value is 1500.
updateVirtualInterfaceAttributes_mtu :: Lens' UpdateVirtualInterfaceAttributes (Maybe Int)

-- | The ID of the virtual private interface.
updateVirtualInterfaceAttributes_virtualInterfaceId :: Lens' UpdateVirtualInterfaceAttributes Text

-- | The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
virtualInterface_authKey :: Lens' VirtualInterface (Maybe Text)

-- | The BGP peers configured on this virtual interface.
virtualInterface_bgpPeers :: Lens' VirtualInterface (Maybe [BGPPeer])

-- | The ID of the virtual private gateway. Applies only to private virtual
--   interfaces.
virtualInterface_virtualGatewayId :: Lens' VirtualInterface (Maybe Text)

-- | The autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
--   
--   The valid values are 1-2147483647.
virtualInterface_asn :: Lens' VirtualInterface (Maybe Int)

-- | The Direct Connect endpoint that terminates the physical connection.
virtualInterface_awsDeviceV2 :: Lens' VirtualInterface (Maybe Text)

-- | The ID of the connection.
virtualInterface_connectionId :: Lens' VirtualInterface (Maybe Text)

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
virtualInterface_awsLogicalDeviceId :: Lens' VirtualInterface (Maybe Text)

-- | The customer router configuration.
virtualInterface_customerRouterConfig :: Lens' VirtualInterface (Maybe Text)

-- | Indicates whether jumbo frames (9001 MTU) are supported.
virtualInterface_jumboFrameCapable :: Lens' VirtualInterface (Maybe Bool)

-- | The routes to be advertised to the Amazon Web Services network in this
--   Region. Applies to public virtual interfaces.
virtualInterface_routeFilterPrefixes :: Lens' VirtualInterface (Maybe [RouteFilterPrefix])

-- | The maximum transmission unit (MTU), in bytes. The supported values
--   are 1500 and 9001. The default value is 1500.
virtualInterface_mtu :: Lens' VirtualInterface (Maybe Int)

-- | The type of virtual interface. The possible values are
--   <tt>private</tt> and <tt>public</tt>.
virtualInterface_virtualInterfaceType :: Lens' VirtualInterface (Maybe Text)

-- | The autonomous system number (ASN) for the Amazon side of the
--   connection.
virtualInterface_amazonSideAsn :: Lens' VirtualInterface (Maybe Integer)

-- | The ID of the virtual interface.
virtualInterface_virtualInterfaceId :: Lens' VirtualInterface (Maybe Text)

-- | The tags associated with the virtual interface.
virtualInterface_tags :: Lens' VirtualInterface (Maybe (NonEmpty Tag))

-- | The ID of the Direct Connect gateway.
virtualInterface_directConnectGatewayId :: Lens' VirtualInterface (Maybe Text)

-- | The name of the virtual interface assigned by the customer network.
--   The name has a maximum of 100 characters. The following are valid
--   characters: a-z, 0-9 and a hyphen (-).
virtualInterface_virtualInterfaceName :: Lens' VirtualInterface (Maybe Text)

-- | The state of the virtual interface. The following are the possible
--   values:
--   
--   <ul>
--   <li><tt>confirming</tt>: The creation of the virtual interface is
--   pending confirmation from the virtual interface owner. If the owner of
--   the virtual interface is different from the owner of the connection on
--   which it is provisioned, then the virtual interface will remain in
--   this state until it is confirmed by the virtual interface owner.</li>
--   <li><tt>verifying</tt>: This state only applies to public virtual
--   interfaces. Each public virtual interface needs validation before the
--   virtual interface can be created.</li>
--   <li><tt>pending</tt>: A virtual interface is in this state from the
--   time that it is created until the virtual interface is ready to
--   forward traffic.</li>
--   <li><tt>available</tt>: A virtual interface that is able to forward
--   traffic.</li>
--   <li><tt>down</tt>: A virtual interface that is BGP down.</li>
--   <li><tt>deleting</tt>: A virtual interface is in this state
--   immediately after calling DeleteVirtualInterface until it can no
--   longer forward traffic.</li>
--   <li><tt>deleted</tt>: A virtual interface that cannot forward
--   traffic.</li>
--   <li><tt>rejected</tt>: The virtual interface owner has declined
--   creation of the virtual interface. If a virtual interface in the
--   <tt>Confirming</tt> state is deleted by the virtual interface owner,
--   the virtual interface enters the <tt>Rejected</tt> state.</li>
--   <li><tt>unknown</tt>: The state of the virtual interface is not
--   available.</li>
--   </ul>
virtualInterface_virtualInterfaceState :: Lens' VirtualInterface (Maybe VirtualInterfaceState)

-- | The IP address assigned to the Amazon interface.
virtualInterface_amazonAddress :: Lens' VirtualInterface (Maybe Text)

-- | The address family for the BGP peer.
virtualInterface_addressFamily :: Lens' VirtualInterface (Maybe AddressFamily)

-- | The ID of the account that owns the virtual interface.
virtualInterface_ownerAccount :: Lens' VirtualInterface (Maybe Text)

-- | The Region where the virtual interface is located.
virtualInterface_region :: Lens' VirtualInterface (Maybe Text)

-- | The ID of the VLAN.
virtualInterface_vlan :: Lens' VirtualInterface (Maybe Int)

-- | The location of the connection.
virtualInterface_location :: Lens' VirtualInterface (Maybe Text)

-- | The IP address assigned to the customer interface.
virtualInterface_customerAddress :: Lens' VirtualInterface (Maybe Text)

-- | The name of the service provider associated with the requested
--   connection.
createConnection_providerName :: Lens' CreateConnection (Maybe Text)

-- | The ID of the LAG.
createConnection_lagId :: Lens' CreateConnection (Maybe Text)

-- | The tags to associate with the lag.
createConnection_tags :: Lens' CreateConnection (Maybe (NonEmpty Tag))

-- | Indicates whether you want the connection to support MAC Security
--   (MACsec).
--   
--   MAC Security (MACsec) is only available on dedicated connections. For
--   information about MAC Security (MACsec) prerequisties, see <a>MACsec
--   prerequisties</a> in the <i>Direct Connect User Guide</i>.
createConnection_requestMACSec :: Lens' CreateConnection (Maybe Bool)

-- | The location of the connection.
createConnection_location :: Lens' CreateConnection Text

-- | The bandwidth of the connection.
createConnection_bandwidth :: Lens' CreateConnection Text

-- | The name of the connection.
createConnection_connectionName :: Lens' CreateConnection Text

-- | The bandwidth of the connection.
connection_bandwidth :: Lens' Connection (Maybe Text)

-- | The Direct Connect endpoint that terminates the physical connection.
connection_awsDeviceV2 :: Lens' Connection (Maybe Text)

-- | The state of the connection. The following are the possible values:
--   
--   <ul>
--   <li><tt>ordering</tt>: The initial state of a hosted connection
--   provisioned on an interconnect. The connection stays in the ordering
--   state until the owner of the hosted connection confirms or declines
--   the connection order.</li>
--   <li><tt>requested</tt>: The initial state of a standard connection.
--   The connection stays in the requested state until the Letter of
--   Authorization (LOA) is sent to the customer.</li>
--   <li><tt>pending</tt>: The connection has been approved and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is up and the connection is
--   ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The connection is being deleted.</li>
--   <li><tt>deleted</tt>: The connection has been deleted.</li>
--   <li><tt>rejected</tt>: A hosted connection in the <tt>ordering</tt>
--   state enters the <tt>rejected</tt> state if it is deleted by the
--   customer.</li>
--   <li><tt>unknown</tt>: The state of the connection is not
--   available.</li>
--   </ul>
connection_connectionState :: Lens' Connection (Maybe ConnectionState)

-- | The name of the connection.
connection_connectionName :: Lens' Connection (Maybe Text)

-- | The MAC Security (MACsec) security keys associated with the
--   connection.
connection_macSecKeys :: Lens' Connection (Maybe [MacSecKey])

-- | The name of the service provider associated with the connection.
connection_providerName :: Lens' Connection (Maybe Text)

-- | The ID of the connection.
connection_connectionId :: Lens' Connection (Maybe Text)

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
connection_awsLogicalDeviceId :: Lens' Connection (Maybe Text)

-- | Indicates whether the connection supports a secondary BGP peer in the
--   same address family (IPv4/IPv6).
connection_hasLogicalRedundancy :: Lens' Connection (Maybe HasLogicalRedundancy)

-- | The Direct Connect endpoint on which the physical connection
--   terminates.
connection_awsDevice :: Lens' Connection (Maybe Text)

-- | Indicates whether jumbo frames (9001 MTU) are supported.
connection_jumboFrameCapable :: Lens' Connection (Maybe Bool)

-- | The MAC Security (MACsec) port link status of the connection.
--   
--   The valid values are <tt>Encryption Up</tt>, which means that there is
--   an active Connection Key Name, or <tt>Encryption Down</tt>.
connection_portEncryptionStatus :: Lens' Connection (Maybe Text)

-- | The ID of the LAG.
connection_lagId :: Lens' Connection (Maybe Text)

-- | The MAC Security (MACsec) connection encryption mode.
--   
--   The valid values are <tt>no_encrypt</tt>, <tt>should_encrypt</tt>, and
--   <tt>must_encrypt</tt>.
connection_encryptionMode :: Lens' Connection (Maybe Text)

-- | The name of the Direct Connect service provider associated with the
--   connection.
connection_partnerName :: Lens' Connection (Maybe Text)

-- | The tags associated with the connection.
connection_tags :: Lens' Connection (Maybe (NonEmpty Tag))

-- | The time of the most recent call to DescribeLoa for this connection.
connection_loaIssueTime :: Lens' Connection (Maybe UTCTime)

-- | The ID of the account that owns the connection.
connection_ownerAccount :: Lens' Connection (Maybe Text)

-- | The Region where the connection is located.
connection_region :: Lens' Connection (Maybe Text)

-- | The ID of the VLAN.
connection_vlan :: Lens' Connection (Maybe Int)

-- | The location of the connection.
connection_location :: Lens' Connection (Maybe Text)

-- | Indicates whether the connection supports MAC Security (MACsec).
connection_macSecCapable :: Lens' Connection (Maybe Bool)

-- | The ID of the connection.
associateConnectionWithLag_connectionId :: Lens' AssociateConnectionWithLag Text

-- | The ID of the LAG with which to associate the connection.
associateConnectionWithLag_lagId :: Lens' AssociateConnectionWithLag Text

-- | The bandwidth of the connection.
connection_bandwidth :: Lens' Connection (Maybe Text)

-- | The Direct Connect endpoint that terminates the physical connection.
connection_awsDeviceV2 :: Lens' Connection (Maybe Text)

-- | The state of the connection. The following are the possible values:
--   
--   <ul>
--   <li><tt>ordering</tt>: The initial state of a hosted connection
--   provisioned on an interconnect. The connection stays in the ordering
--   state until the owner of the hosted connection confirms or declines
--   the connection order.</li>
--   <li><tt>requested</tt>: The initial state of a standard connection.
--   The connection stays in the requested state until the Letter of
--   Authorization (LOA) is sent to the customer.</li>
--   <li><tt>pending</tt>: The connection has been approved and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is up and the connection is
--   ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The connection is being deleted.</li>
--   <li><tt>deleted</tt>: The connection has been deleted.</li>
--   <li><tt>rejected</tt>: A hosted connection in the <tt>ordering</tt>
--   state enters the <tt>rejected</tt> state if it is deleted by the
--   customer.</li>
--   <li><tt>unknown</tt>: The state of the connection is not
--   available.</li>
--   </ul>
connection_connectionState :: Lens' Connection (Maybe ConnectionState)

-- | The name of the connection.
connection_connectionName :: Lens' Connection (Maybe Text)

-- | The MAC Security (MACsec) security keys associated with the
--   connection.
connection_macSecKeys :: Lens' Connection (Maybe [MacSecKey])

-- | The name of the service provider associated with the connection.
connection_providerName :: Lens' Connection (Maybe Text)

-- | The ID of the connection.
connection_connectionId :: Lens' Connection (Maybe Text)

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
connection_awsLogicalDeviceId :: Lens' Connection (Maybe Text)

-- | Indicates whether the connection supports a secondary BGP peer in the
--   same address family (IPv4/IPv6).
connection_hasLogicalRedundancy :: Lens' Connection (Maybe HasLogicalRedundancy)

-- | The Direct Connect endpoint on which the physical connection
--   terminates.
connection_awsDevice :: Lens' Connection (Maybe Text)

-- | Indicates whether jumbo frames (9001 MTU) are supported.
connection_jumboFrameCapable :: Lens' Connection (Maybe Bool)

-- | The MAC Security (MACsec) port link status of the connection.
--   
--   The valid values are <tt>Encryption Up</tt>, which means that there is
--   an active Connection Key Name, or <tt>Encryption Down</tt>.
connection_portEncryptionStatus :: Lens' Connection (Maybe Text)

-- | The ID of the LAG.
connection_lagId :: Lens' Connection (Maybe Text)

-- | The MAC Security (MACsec) connection encryption mode.
--   
--   The valid values are <tt>no_encrypt</tt>, <tt>should_encrypt</tt>, and
--   <tt>must_encrypt</tt>.
connection_encryptionMode :: Lens' Connection (Maybe Text)

-- | The name of the Direct Connect service provider associated with the
--   connection.
connection_partnerName :: Lens' Connection (Maybe Text)

-- | The tags associated with the connection.
connection_tags :: Lens' Connection (Maybe (NonEmpty Tag))

-- | The time of the most recent call to DescribeLoa for this connection.
connection_loaIssueTime :: Lens' Connection (Maybe UTCTime)

-- | The ID of the account that owns the connection.
connection_ownerAccount :: Lens' Connection (Maybe Text)

-- | The Region where the connection is located.
connection_region :: Lens' Connection (Maybe Text)

-- | The ID of the VLAN.
connection_vlan :: Lens' Connection (Maybe Int)

-- | The location of the connection.
connection_location :: Lens' Connection (Maybe Text)

-- | Indicates whether the connection supports MAC Security (MACsec).
connection_macSecCapable :: Lens' Connection (Maybe Bool)

-- | The BGP peers that were placed in the DOWN state during the virtual
--   interface failover test.
listVirtualInterfaceTestHistory_bgpPeers :: Lens' ListVirtualInterfaceTestHistory (Maybe [Text])

-- | The token for the next page of results.
listVirtualInterfaceTestHistory_nextToken :: Lens' ListVirtualInterfaceTestHistory (Maybe Text)

-- | The status of the virtual interface failover test.
listVirtualInterfaceTestHistory_status :: Lens' ListVirtualInterfaceTestHistory (Maybe Text)

-- | The maximum number of results to return with a single call. To
--   retrieve the remaining results, make another call with the returned
--   <tt>nextToken</tt> value.
--   
--   If <tt>MaxResults</tt> is given a value larger than 100, only 100
--   results are returned.
listVirtualInterfaceTestHistory_maxResults :: Lens' ListVirtualInterfaceTestHistory (Maybe Int)

-- | The ID of the virtual interface failover test.
listVirtualInterfaceTestHistory_testId :: Lens' ListVirtualInterfaceTestHistory (Maybe Text)

-- | The ID of the virtual interface that was tested.
listVirtualInterfaceTestHistory_virtualInterfaceId :: Lens' ListVirtualInterfaceTestHistory (Maybe Text)

-- | The token to use to retrieve the next page of results. This value is
--   <tt>null</tt> when there are no more results to return.
listVirtualInterfaceTestHistoryResponse_nextToken :: Lens' ListVirtualInterfaceTestHistoryResponse (Maybe Text)

-- | The ID of the tested virtual interface.
listVirtualInterfaceTestHistoryResponse_virtualInterfaceTestHistory :: Lens' ListVirtualInterfaceTestHistoryResponse (Maybe [VirtualInterfaceTestHistory])

-- | The response's http status code.
listVirtualInterfaceTestHistoryResponse_httpStatus :: Lens' ListVirtualInterfaceTestHistoryResponse Int

-- | The ID of the dedicated connection (dxcon-xxxx), or the ID of the LAG
--   (dxlag-xxxx).
--   
--   You can use DescribeConnections or DescribeLags to retrieve connection
--   ID.
disassociateMacSecKey_connectionId :: Lens' DisassociateMacSecKey Text

-- | The Amazon Resource Name (ARN) of the MAC Security (MACsec) secret
--   key.
--   
--   You can use DescribeConnections to retrieve the ARN of the MAC
--   Security (MACsec) secret key.
disassociateMacSecKey_secretARN :: Lens' DisassociateMacSecKey Text

-- | The MAC Security (MACsec) security keys no longer associated with the
--   dedicated connection.
disassociateMacSecKeyResponse_macSecKeys :: Lens' DisassociateMacSecKeyResponse (Maybe [MacSecKey])

-- | The ID of the dedicated connection (dxcon-xxxx), or the ID of the LAG
--   (dxlag-xxxx).
disassociateMacSecKeyResponse_connectionId :: Lens' DisassociateMacSecKeyResponse (Maybe Text)

-- | The response's http status code.
disassociateMacSecKeyResponse_httpStatus :: Lens' DisassociateMacSecKeyResponse Int

-- | The name of the service provider who establishes connectivity on your
--   behalf. If you specify this parameter, the LOA-CFA lists the provider
--   name alongside your company name as the requester of the cross
--   connect.
describeLoa_providerName :: Lens' DescribeLoa (Maybe Text)

-- | The standard media type for the LOA-CFA document. The only supported
--   value is application/pdf.
describeLoa_loaContentType :: Lens' DescribeLoa (Maybe LoaContentType)

-- | The ID of a connection, LAG, or interconnect.
describeLoa_connectionId :: Lens' DescribeLoa Text

-- | The binary contents of the LOA-CFA document.-- -- <i>Note:</i> This
--   <tt>Lens</tt> automatically encodes and decodes Base64 data. -- The
--   underlying isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
describeLoaResponse_loaContent :: Lens' DescribeLoaResponse (Maybe ByteString)

-- | The standard media type for the LOA-CFA document. The only supported
--   value is application/pdf.
describeLoaResponse_loaContentType :: Lens' DescribeLoaResponse (Maybe LoaContentType)

-- | The response's http status code.
describeLoaResponse_httpStatus :: Lens' DescribeLoaResponse Int

-- | The ID of the connection.
createTransitVirtualInterface_connectionId :: Lens' CreateTransitVirtualInterface Text

-- | Information about the transit virtual interface.
createTransitVirtualInterface_newTransitVirtualInterface :: Lens' CreateTransitVirtualInterface NewTransitVirtualInterface

-- | Undocumented member.
createTransitVirtualInterfaceResponse_virtualInterface :: Lens' CreateTransitVirtualInterfaceResponse (Maybe VirtualInterface)

-- | The response's http status code.
createTransitVirtualInterfaceResponse_httpStatus :: Lens' CreateTransitVirtualInterfaceResponse Int

-- | The autonomous system number (ASN) for Border Gateway Protocol (BGP)
--   to be configured on the Amazon side of the connection. The ASN must be
--   in the private range of 64,512 to 65,534 or 4,200,000,000 to
--   4,294,967,294. The default is 64512.
createDirectConnectGateway_amazonSideAsn :: Lens' CreateDirectConnectGateway (Maybe Integer)

-- | The name of the Direct Connect gateway.
createDirectConnectGateway_directConnectGatewayName :: Lens' CreateDirectConnectGateway Text

-- | The Direct Connect gateway.
createDirectConnectGatewayResponse_directConnectGateway :: Lens' CreateDirectConnectGatewayResponse (Maybe DirectConnectGateway)

-- | The response's http status code.
createDirectConnectGatewayResponse_httpStatus :: Lens' CreateDirectConnectGatewayResponse Int

-- | The ID of the interconnect.
describeInterconnects_interconnectId :: Lens' DescribeInterconnects (Maybe Text)

-- | The interconnects.
describeInterconnectsResponse_interconnects :: Lens' DescribeInterconnectsResponse (Maybe [Interconnect])

-- | The response's http status code.
describeInterconnectsResponse_httpStatus :: Lens' DescribeInterconnectsResponse Int

-- | The ID of the LAG.
describeLags_lagId :: Lens' DescribeLags (Maybe Text)

-- | The LAGs.
describeLagsResponse_lags :: Lens' DescribeLagsResponse (Maybe [Lag])

-- | The response's http status code.
describeLagsResponse_httpStatus :: Lens' DescribeLagsResponse Int

-- | The ID of the virtual interface.
confirmTransitVirtualInterface_virtualInterfaceId :: Lens' ConfirmTransitVirtualInterface Text

-- | The ID of the Direct Connect gateway.
confirmTransitVirtualInterface_directConnectGatewayId :: Lens' ConfirmTransitVirtualInterface Text

-- | The state of the virtual interface. The following are the possible
--   values:
--   
--   <ul>
--   <li><tt>confirming</tt>: The creation of the virtual interface is
--   pending confirmation from the virtual interface owner. If the owner of
--   the virtual interface is different from the owner of the connection on
--   which it is provisioned, then the virtual interface will remain in
--   this state until it is confirmed by the virtual interface owner.</li>
--   <li><tt>verifying</tt>: This state only applies to public virtual
--   interfaces. Each public virtual interface needs validation before the
--   virtual interface can be created.</li>
--   <li><tt>pending</tt>: A virtual interface is in this state from the
--   time that it is created until the virtual interface is ready to
--   forward traffic.</li>
--   <li><tt>available</tt>: A virtual interface that is able to forward
--   traffic.</li>
--   <li><tt>down</tt>: A virtual interface that is BGP down.</li>
--   <li><tt>deleting</tt>: A virtual interface is in this state
--   immediately after calling DeleteVirtualInterface until it can no
--   longer forward traffic.</li>
--   <li><tt>deleted</tt>: A virtual interface that cannot forward
--   traffic.</li>
--   <li><tt>rejected</tt>: The virtual interface owner has declined
--   creation of the virtual interface. If a virtual interface in the
--   <tt>Confirming</tt> state is deleted by the virtual interface owner,
--   the virtual interface enters the <tt>Rejected</tt> state.</li>
--   <li><tt>unknown</tt>: The state of the virtual interface is not
--   available.</li>
--   </ul>
confirmTransitVirtualInterfaceResponse_virtualInterfaceState :: Lens' ConfirmTransitVirtualInterfaceResponse (Maybe VirtualInterfaceState)

-- | The response's http status code.
confirmTransitVirtualInterfaceResponse_httpStatus :: Lens' ConfirmTransitVirtualInterfaceResponse Int

-- | The name of the service provider associated with the LAG.
createLag_providerName :: Lens' CreateLag (Maybe Text)

-- | The ID of an existing dedicated connection to migrate to the LAG.
createLag_connectionId :: Lens' CreateLag (Maybe Text)

-- | The tags to associate with the automtically created LAGs.
createLag_childConnectionTags :: Lens' CreateLag (Maybe (NonEmpty Tag))

-- | The tags to associate with the LAG.
createLag_tags :: Lens' CreateLag (Maybe (NonEmpty Tag))

-- | Indicates whether the connection will support MAC Security (MACsec).
--   
--   All connections in the LAG must be capable of supporting MAC Security
--   (MACsec). For information about MAC Security (MACsec) prerequisties,
--   see <a>MACsec prerequisties</a> in the <i>Direct Connect User
--   Guide</i>.
createLag_requestMACSec :: Lens' CreateLag (Maybe Bool)

-- | The number of physical dedicated connections initially provisioned and
--   bundled by the LAG.
createLag_numberOfConnections :: Lens' CreateLag Int

-- | The location for the LAG.
createLag_location :: Lens' CreateLag Text

-- | The bandwidth of the individual physical dedicated connections bundled
--   by the LAG. The possible values are 1Gbps and 10Gbps.
createLag_connectionsBandwidth :: Lens' CreateLag Text

-- | The name of the LAG.
createLag_lagName :: Lens' CreateLag Text

-- | The number of physical dedicated connections bundled by the LAG, up to
--   a maximum of 10.
lag_numberOfConnections :: Lens' Lag (Maybe Int)

-- | The Direct Connect endpoint that hosts the LAG.
lag_awsDeviceV2 :: Lens' Lag (Maybe Text)

-- | Indicates whether the LAG can host other connections.
lag_allowsHostedConnections :: Lens' Lag (Maybe Bool)

-- | The MAC Security (MACsec) security keys associated with the LAG.
lag_macSecKeys :: Lens' Lag (Maybe [MacSecKey])

-- | The name of the service provider associated with the LAG.
lag_providerName :: Lens' Lag (Maybe Text)

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
lag_awsLogicalDeviceId :: Lens' Lag (Maybe Text)

-- | Indicates whether the LAG supports a secondary BGP peer in the same
--   address family (IPv4/IPv6).
lag_hasLogicalRedundancy :: Lens' Lag (Maybe HasLogicalRedundancy)

-- | The name of the LAG.
lag_lagName :: Lens' Lag (Maybe Text)

-- | The connections bundled by the LAG.
lag_connections :: Lens' Lag (Maybe [Connection])

-- | The Direct Connect endpoint that hosts the LAG.
lag_awsDevice :: Lens' Lag (Maybe Text)

-- | The state of the LAG. The following are the possible values:
--   
--   <ul>
--   <li><tt>requested</tt>: The initial state of a LAG. The LAG stays in
--   the requested state until the Letter of Authorization (LOA) is
--   available.</li>
--   <li><tt>pending</tt>: The LAG has been approved and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is established and the LAG is
--   ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The LAG is being deleted.</li>
--   <li><tt>deleted</tt>: The LAG is deleted.</li>
--   <li><tt>unknown</tt>: The state of the LAG is not available.</li>
--   </ul>
lag_lagState :: Lens' Lag (Maybe LagState)

-- | Indicates whether jumbo frames (9001 MTU) are supported.
lag_jumboFrameCapable :: Lens' Lag (Maybe Bool)

-- | The individual bandwidth of the physical connections bundled by the
--   LAG. The possible values are 1Gbps and 10Gbps.
lag_connectionsBandwidth :: Lens' Lag (Maybe Text)

-- | The ID of the LAG.
lag_lagId :: Lens' Lag (Maybe Text)

-- | The LAG MAC Security (MACsec) encryption mode.
--   
--   The valid values are <tt>no_encrypt</tt>, <tt>should_encrypt</tt>, and
--   <tt>must_encrypt</tt>.
lag_encryptionMode :: Lens' Lag (Maybe Text)

-- | The tags associated with the LAG.
lag_tags :: Lens' Lag (Maybe (NonEmpty Tag))

-- | The ID of the account that owns the LAG.
lag_ownerAccount :: Lens' Lag (Maybe Text)

-- | The Region where the connection is located.
lag_region :: Lens' Lag (Maybe Text)

-- | The location of the LAG.
lag_location :: Lens' Lag (Maybe Text)

-- | The minimum number of physical dedicated connections that must be
--   operational for the LAG itself to be operational.
lag_minimumLinks :: Lens' Lag (Maybe Int)

-- | Indicates whether the LAG supports MAC Security (MACsec).
lag_macSecCapable :: Lens' Lag (Maybe Bool)

-- | The autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
deleteBGPPeer_asn :: Lens' DeleteBGPPeer (Maybe Int)

-- | The ID of the BGP peer.
deleteBGPPeer_bgpPeerId :: Lens' DeleteBGPPeer (Maybe Text)

-- | The ID of the virtual interface.
deleteBGPPeer_virtualInterfaceId :: Lens' DeleteBGPPeer (Maybe Text)

-- | The IP address assigned to the customer interface.
deleteBGPPeer_customerAddress :: Lens' DeleteBGPPeer (Maybe Text)

-- | The virtual interface.
deleteBGPPeerResponse_virtualInterface :: Lens' DeleteBGPPeerResponse (Maybe VirtualInterface)

-- | The response's http status code.
deleteBGPPeerResponse_httpStatus :: Lens' DeleteBGPPeerResponse Int

-- | The ID of the connection on which the transit virtual interface is
--   provisioned.
allocateTransitVirtualInterface_connectionId :: Lens' AllocateTransitVirtualInterface Text

-- | The ID of the account that owns the transit virtual interface.
allocateTransitVirtualInterface_ownerAccount :: Lens' AllocateTransitVirtualInterface Text

-- | Information about the transit virtual interface.
allocateTransitVirtualInterface_newTransitVirtualInterfaceAllocation :: Lens' AllocateTransitVirtualInterface NewTransitVirtualInterfaceAllocation

-- | Undocumented member.
allocateTransitVirtualInterfaceResponse_virtualInterface :: Lens' AllocateTransitVirtualInterfaceResponse (Maybe VirtualInterface)

-- | The response's http status code.
allocateTransitVirtualInterfaceResponse_httpStatus :: Lens' AllocateTransitVirtualInterfaceResponse Int

-- | The ID of the virtual private gateway.
deleteDirectConnectGatewayAssociation_virtualGatewayId :: Lens' DeleteDirectConnectGatewayAssociation (Maybe Text)

-- | The ID of the Direct Connect gateway association.
deleteDirectConnectGatewayAssociation_associationId :: Lens' DeleteDirectConnectGatewayAssociation (Maybe Text)

-- | The ID of the Direct Connect gateway.
deleteDirectConnectGatewayAssociation_directConnectGatewayId :: Lens' DeleteDirectConnectGatewayAssociation (Maybe Text)

-- | Information about the deleted association.
deleteDirectConnectGatewayAssociationResponse_directConnectGatewayAssociation :: Lens' DeleteDirectConnectGatewayAssociationResponse (Maybe DirectConnectGatewayAssociation)

-- | The response's http status code.
deleteDirectConnectGatewayAssociationResponse_httpStatus :: Lens' DeleteDirectConnectGatewayAssociationResponse Int

-- | The Amazon VPC prefixes to no longer advertise to the Direct Connect
--   gateway.
updateDirectConnectGatewayAssociation_removeAllowedPrefixesToDirectConnectGateway :: Lens' UpdateDirectConnectGatewayAssociation (Maybe [RouteFilterPrefix])

-- | The Amazon VPC prefixes to advertise to the Direct Connect gateway.
updateDirectConnectGatewayAssociation_addAllowedPrefixesToDirectConnectGateway :: Lens' UpdateDirectConnectGatewayAssociation (Maybe [RouteFilterPrefix])

-- | The ID of the Direct Connect gateway association.
updateDirectConnectGatewayAssociation_associationId :: Lens' UpdateDirectConnectGatewayAssociation (Maybe Text)

-- | Undocumented member.
updateDirectConnectGatewayAssociationResponse_directConnectGatewayAssociation :: Lens' UpdateDirectConnectGatewayAssociationResponse (Maybe DirectConnectGatewayAssociation)

-- | The response's http status code.
updateDirectConnectGatewayAssociationResponse_httpStatus :: Lens' UpdateDirectConnectGatewayAssociationResponse Int

-- | The locations.
describeLocationsResponse_locations :: Lens' DescribeLocationsResponse (Maybe [Location])

-- | The response's http status code.
describeLocationsResponse_httpStatus :: Lens' DescribeLocationsResponse Int

-- | The ID of the connection.
describeConnections_connectionId :: Lens' DescribeConnections (Maybe Text)

-- | The connections.
connections_connections :: Lens' Connections (Maybe [Connection])

-- | The ID of the connection on which the public virtual interface is
--   provisioned.
allocatePublicVirtualInterface_connectionId :: Lens' AllocatePublicVirtualInterface Text

-- | The ID of the account that owns the public virtual interface.
allocatePublicVirtualInterface_ownerAccount :: Lens' AllocatePublicVirtualInterface Text

-- | Information about the public virtual interface.
allocatePublicVirtualInterface_newPublicVirtualInterfaceAllocation :: Lens' AllocatePublicVirtualInterface NewPublicVirtualInterfaceAllocation

-- | The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
virtualInterface_authKey :: Lens' VirtualInterface (Maybe Text)

-- | The BGP peers configured on this virtual interface.
virtualInterface_bgpPeers :: Lens' VirtualInterface (Maybe [BGPPeer])

-- | The ID of the virtual private gateway. Applies only to private virtual
--   interfaces.
virtualInterface_virtualGatewayId :: Lens' VirtualInterface (Maybe Text)

-- | The autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
--   
--   The valid values are 1-2147483647.
virtualInterface_asn :: Lens' VirtualInterface (Maybe Int)

-- | The Direct Connect endpoint that terminates the physical connection.
virtualInterface_awsDeviceV2 :: Lens' VirtualInterface (Maybe Text)

-- | The ID of the connection.
virtualInterface_connectionId :: Lens' VirtualInterface (Maybe Text)

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
virtualInterface_awsLogicalDeviceId :: Lens' VirtualInterface (Maybe Text)

-- | The customer router configuration.
virtualInterface_customerRouterConfig :: Lens' VirtualInterface (Maybe Text)

-- | Indicates whether jumbo frames (9001 MTU) are supported.
virtualInterface_jumboFrameCapable :: Lens' VirtualInterface (Maybe Bool)

-- | The routes to be advertised to the Amazon Web Services network in this
--   Region. Applies to public virtual interfaces.
virtualInterface_routeFilterPrefixes :: Lens' VirtualInterface (Maybe [RouteFilterPrefix])

-- | The maximum transmission unit (MTU), in bytes. The supported values
--   are 1500 and 9001. The default value is 1500.
virtualInterface_mtu :: Lens' VirtualInterface (Maybe Int)

-- | The type of virtual interface. The possible values are
--   <tt>private</tt> and <tt>public</tt>.
virtualInterface_virtualInterfaceType :: Lens' VirtualInterface (Maybe Text)

-- | The autonomous system number (ASN) for the Amazon side of the
--   connection.
virtualInterface_amazonSideAsn :: Lens' VirtualInterface (Maybe Integer)

-- | The ID of the virtual interface.
virtualInterface_virtualInterfaceId :: Lens' VirtualInterface (Maybe Text)

-- | The tags associated with the virtual interface.
virtualInterface_tags :: Lens' VirtualInterface (Maybe (NonEmpty Tag))

-- | The ID of the Direct Connect gateway.
virtualInterface_directConnectGatewayId :: Lens' VirtualInterface (Maybe Text)

-- | The name of the virtual interface assigned by the customer network.
--   The name has a maximum of 100 characters. The following are valid
--   characters: a-z, 0-9 and a hyphen (-).
virtualInterface_virtualInterfaceName :: Lens' VirtualInterface (Maybe Text)

-- | The state of the virtual interface. The following are the possible
--   values:
--   
--   <ul>
--   <li><tt>confirming</tt>: The creation of the virtual interface is
--   pending confirmation from the virtual interface owner. If the owner of
--   the virtual interface is different from the owner of the connection on
--   which it is provisioned, then the virtual interface will remain in
--   this state until it is confirmed by the virtual interface owner.</li>
--   <li><tt>verifying</tt>: This state only applies to public virtual
--   interfaces. Each public virtual interface needs validation before the
--   virtual interface can be created.</li>
--   <li><tt>pending</tt>: A virtual interface is in this state from the
--   time that it is created until the virtual interface is ready to
--   forward traffic.</li>
--   <li><tt>available</tt>: A virtual interface that is able to forward
--   traffic.</li>
--   <li><tt>down</tt>: A virtual interface that is BGP down.</li>
--   <li><tt>deleting</tt>: A virtual interface is in this state
--   immediately after calling DeleteVirtualInterface until it can no
--   longer forward traffic.</li>
--   <li><tt>deleted</tt>: A virtual interface that cannot forward
--   traffic.</li>
--   <li><tt>rejected</tt>: The virtual interface owner has declined
--   creation of the virtual interface. If a virtual interface in the
--   <tt>Confirming</tt> state is deleted by the virtual interface owner,
--   the virtual interface enters the <tt>Rejected</tt> state.</li>
--   <li><tt>unknown</tt>: The state of the virtual interface is not
--   available.</li>
--   </ul>
virtualInterface_virtualInterfaceState :: Lens' VirtualInterface (Maybe VirtualInterfaceState)

-- | The IP address assigned to the Amazon interface.
virtualInterface_amazonAddress :: Lens' VirtualInterface (Maybe Text)

-- | The address family for the BGP peer.
virtualInterface_addressFamily :: Lens' VirtualInterface (Maybe AddressFamily)

-- | The ID of the account that owns the virtual interface.
virtualInterface_ownerAccount :: Lens' VirtualInterface (Maybe Text)

-- | The Region where the virtual interface is located.
virtualInterface_region :: Lens' VirtualInterface (Maybe Text)

-- | The ID of the VLAN.
virtualInterface_vlan :: Lens' VirtualInterface (Maybe Int)

-- | The location of the connection.
virtualInterface_location :: Lens' VirtualInterface (Maybe Text)

-- | The IP address assigned to the customer interface.
virtualInterface_customerAddress :: Lens' VirtualInterface (Maybe Text)

-- | The ID of the virtual interface.
associateVirtualInterface_virtualInterfaceId :: Lens' AssociateVirtualInterface Text

-- | The ID of the LAG or connection.
associateVirtualInterface_connectionId :: Lens' AssociateVirtualInterface Text

-- | The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
virtualInterface_authKey :: Lens' VirtualInterface (Maybe Text)

-- | The BGP peers configured on this virtual interface.
virtualInterface_bgpPeers :: Lens' VirtualInterface (Maybe [BGPPeer])

-- | The ID of the virtual private gateway. Applies only to private virtual
--   interfaces.
virtualInterface_virtualGatewayId :: Lens' VirtualInterface (Maybe Text)

-- | The autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
--   
--   The valid values are 1-2147483647.
virtualInterface_asn :: Lens' VirtualInterface (Maybe Int)

-- | The Direct Connect endpoint that terminates the physical connection.
virtualInterface_awsDeviceV2 :: Lens' VirtualInterface (Maybe Text)

-- | The ID of the connection.
virtualInterface_connectionId :: Lens' VirtualInterface (Maybe Text)

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
virtualInterface_awsLogicalDeviceId :: Lens' VirtualInterface (Maybe Text)

-- | The customer router configuration.
virtualInterface_customerRouterConfig :: Lens' VirtualInterface (Maybe Text)

-- | Indicates whether jumbo frames (9001 MTU) are supported.
virtualInterface_jumboFrameCapable :: Lens' VirtualInterface (Maybe Bool)

-- | The routes to be advertised to the Amazon Web Services network in this
--   Region. Applies to public virtual interfaces.
virtualInterface_routeFilterPrefixes :: Lens' VirtualInterface (Maybe [RouteFilterPrefix])

-- | The maximum transmission unit (MTU), in bytes. The supported values
--   are 1500 and 9001. The default value is 1500.
virtualInterface_mtu :: Lens' VirtualInterface (Maybe Int)

-- | The type of virtual interface. The possible values are
--   <tt>private</tt> and <tt>public</tt>.
virtualInterface_virtualInterfaceType :: Lens' VirtualInterface (Maybe Text)

-- | The autonomous system number (ASN) for the Amazon side of the
--   connection.
virtualInterface_amazonSideAsn :: Lens' VirtualInterface (Maybe Integer)

-- | The ID of the virtual interface.
virtualInterface_virtualInterfaceId :: Lens' VirtualInterface (Maybe Text)

-- | The tags associated with the virtual interface.
virtualInterface_tags :: Lens' VirtualInterface (Maybe (NonEmpty Tag))

-- | The ID of the Direct Connect gateway.
virtualInterface_directConnectGatewayId :: Lens' VirtualInterface (Maybe Text)

-- | The name of the virtual interface assigned by the customer network.
--   The name has a maximum of 100 characters. The following are valid
--   characters: a-z, 0-9 and a hyphen (-).
virtualInterface_virtualInterfaceName :: Lens' VirtualInterface (Maybe Text)

-- | The state of the virtual interface. The following are the possible
--   values:
--   
--   <ul>
--   <li><tt>confirming</tt>: The creation of the virtual interface is
--   pending confirmation from the virtual interface owner. If the owner of
--   the virtual interface is different from the owner of the connection on
--   which it is provisioned, then the virtual interface will remain in
--   this state until it is confirmed by the virtual interface owner.</li>
--   <li><tt>verifying</tt>: This state only applies to public virtual
--   interfaces. Each public virtual interface needs validation before the
--   virtual interface can be created.</li>
--   <li><tt>pending</tt>: A virtual interface is in this state from the
--   time that it is created until the virtual interface is ready to
--   forward traffic.</li>
--   <li><tt>available</tt>: A virtual interface that is able to forward
--   traffic.</li>
--   <li><tt>down</tt>: A virtual interface that is BGP down.</li>
--   <li><tt>deleting</tt>: A virtual interface is in this state
--   immediately after calling DeleteVirtualInterface until it can no
--   longer forward traffic.</li>
--   <li><tt>deleted</tt>: A virtual interface that cannot forward
--   traffic.</li>
--   <li><tt>rejected</tt>: The virtual interface owner has declined
--   creation of the virtual interface. If a virtual interface in the
--   <tt>Confirming</tt> state is deleted by the virtual interface owner,
--   the virtual interface enters the <tt>Rejected</tt> state.</li>
--   <li><tt>unknown</tt>: The state of the virtual interface is not
--   available.</li>
--   </ul>
virtualInterface_virtualInterfaceState :: Lens' VirtualInterface (Maybe VirtualInterfaceState)

-- | The IP address assigned to the Amazon interface.
virtualInterface_amazonAddress :: Lens' VirtualInterface (Maybe Text)

-- | The address family for the BGP peer.
virtualInterface_addressFamily :: Lens' VirtualInterface (Maybe AddressFamily)

-- | The ID of the account that owns the virtual interface.
virtualInterface_ownerAccount :: Lens' VirtualInterface (Maybe Text)

-- | The Region where the virtual interface is located.
virtualInterface_region :: Lens' VirtualInterface (Maybe Text)

-- | The ID of the VLAN.
virtualInterface_vlan :: Lens' VirtualInterface (Maybe Int)

-- | The location of the connection.
virtualInterface_location :: Lens' VirtualInterface (Maybe Text)

-- | The IP address assigned to the customer interface.
virtualInterface_customerAddress :: Lens' VirtualInterface (Maybe Text)

-- | The token for the next page of results.
describeDirectConnectGatewayAssociationProposals_nextToken :: Lens' DescribeDirectConnectGatewayAssociationProposals (Maybe Text)

-- | The ID of the proposal.
describeDirectConnectGatewayAssociationProposals_proposalId :: Lens' DescribeDirectConnectGatewayAssociationProposals (Maybe Text)

-- | The maximum number of results to return with a single call. To
--   retrieve the remaining results, make another call with the returned
--   <tt>nextToken</tt> value.
--   
--   If <tt>MaxResults</tt> is given a value larger than 100, only 100
--   results are returned.
describeDirectConnectGatewayAssociationProposals_maxResults :: Lens' DescribeDirectConnectGatewayAssociationProposals (Maybe Int)

-- | The ID of the associated gateway.
describeDirectConnectGatewayAssociationProposals_associatedGatewayId :: Lens' DescribeDirectConnectGatewayAssociationProposals (Maybe Text)

-- | The ID of the Direct Connect gateway.
describeDirectConnectGatewayAssociationProposals_directConnectGatewayId :: Lens' DescribeDirectConnectGatewayAssociationProposals (Maybe Text)

-- | The token to use to retrieve the next page of results. This value is
--   <tt>null</tt> when there are no more results to return.
describeDirectConnectGatewayAssociationProposalsResponse_nextToken :: Lens' DescribeDirectConnectGatewayAssociationProposalsResponse (Maybe Text)

-- | Describes the Direct Connect gateway association proposals.
describeDirectConnectGatewayAssociationProposalsResponse_directConnectGatewayAssociationProposals :: Lens' DescribeDirectConnectGatewayAssociationProposalsResponse (Maybe [DirectConnectGatewayAssociationProposal])

-- | The response's http status code.
describeDirectConnectGatewayAssociationProposalsResponse_httpStatus :: Lens' DescribeDirectConnectGatewayAssociationProposalsResponse Int

-- | The ID of the connection.
createPrivateVirtualInterface_connectionId :: Lens' CreatePrivateVirtualInterface Text

-- | Information about the private virtual interface.
createPrivateVirtualInterface_newPrivateVirtualInterface :: Lens' CreatePrivateVirtualInterface NewPrivateVirtualInterface

-- | The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
virtualInterface_authKey :: Lens' VirtualInterface (Maybe Text)

-- | The BGP peers configured on this virtual interface.
virtualInterface_bgpPeers :: Lens' VirtualInterface (Maybe [BGPPeer])

-- | The ID of the virtual private gateway. Applies only to private virtual
--   interfaces.
virtualInterface_virtualGatewayId :: Lens' VirtualInterface (Maybe Text)

-- | The autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
--   
--   The valid values are 1-2147483647.
virtualInterface_asn :: Lens' VirtualInterface (Maybe Int)

-- | The Direct Connect endpoint that terminates the physical connection.
virtualInterface_awsDeviceV2 :: Lens' VirtualInterface (Maybe Text)

-- | The ID of the connection.
virtualInterface_connectionId :: Lens' VirtualInterface (Maybe Text)

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
virtualInterface_awsLogicalDeviceId :: Lens' VirtualInterface (Maybe Text)

-- | The customer router configuration.
virtualInterface_customerRouterConfig :: Lens' VirtualInterface (Maybe Text)

-- | Indicates whether jumbo frames (9001 MTU) are supported.
virtualInterface_jumboFrameCapable :: Lens' VirtualInterface (Maybe Bool)

-- | The routes to be advertised to the Amazon Web Services network in this
--   Region. Applies to public virtual interfaces.
virtualInterface_routeFilterPrefixes :: Lens' VirtualInterface (Maybe [RouteFilterPrefix])

-- | The maximum transmission unit (MTU), in bytes. The supported values
--   are 1500 and 9001. The default value is 1500.
virtualInterface_mtu :: Lens' VirtualInterface (Maybe Int)

-- | The type of virtual interface. The possible values are
--   <tt>private</tt> and <tt>public</tt>.
virtualInterface_virtualInterfaceType :: Lens' VirtualInterface (Maybe Text)

-- | The autonomous system number (ASN) for the Amazon side of the
--   connection.
virtualInterface_amazonSideAsn :: Lens' VirtualInterface (Maybe Integer)

-- | The ID of the virtual interface.
virtualInterface_virtualInterfaceId :: Lens' VirtualInterface (Maybe Text)

-- | The tags associated with the virtual interface.
virtualInterface_tags :: Lens' VirtualInterface (Maybe (NonEmpty Tag))

-- | The ID of the Direct Connect gateway.
virtualInterface_directConnectGatewayId :: Lens' VirtualInterface (Maybe Text)

-- | The name of the virtual interface assigned by the customer network.
--   The name has a maximum of 100 characters. The following are valid
--   characters: a-z, 0-9 and a hyphen (-).
virtualInterface_virtualInterfaceName :: Lens' VirtualInterface (Maybe Text)

-- | The state of the virtual interface. The following are the possible
--   values:
--   
--   <ul>
--   <li><tt>confirming</tt>: The creation of the virtual interface is
--   pending confirmation from the virtual interface owner. If the owner of
--   the virtual interface is different from the owner of the connection on
--   which it is provisioned, then the virtual interface will remain in
--   this state until it is confirmed by the virtual interface owner.</li>
--   <li><tt>verifying</tt>: This state only applies to public virtual
--   interfaces. Each public virtual interface needs validation before the
--   virtual interface can be created.</li>
--   <li><tt>pending</tt>: A virtual interface is in this state from the
--   time that it is created until the virtual interface is ready to
--   forward traffic.</li>
--   <li><tt>available</tt>: A virtual interface that is able to forward
--   traffic.</li>
--   <li><tt>down</tt>: A virtual interface that is BGP down.</li>
--   <li><tt>deleting</tt>: A virtual interface is in this state
--   immediately after calling DeleteVirtualInterface until it can no
--   longer forward traffic.</li>
--   <li><tt>deleted</tt>: A virtual interface that cannot forward
--   traffic.</li>
--   <li><tt>rejected</tt>: The virtual interface owner has declined
--   creation of the virtual interface. If a virtual interface in the
--   <tt>Confirming</tt> state is deleted by the virtual interface owner,
--   the virtual interface enters the <tt>Rejected</tt> state.</li>
--   <li><tt>unknown</tt>: The state of the virtual interface is not
--   available.</li>
--   </ul>
virtualInterface_virtualInterfaceState :: Lens' VirtualInterface (Maybe VirtualInterfaceState)

-- | The IP address assigned to the Amazon interface.
virtualInterface_amazonAddress :: Lens' VirtualInterface (Maybe Text)

-- | The address family for the BGP peer.
virtualInterface_addressFamily :: Lens' VirtualInterface (Maybe AddressFamily)

-- | The ID of the account that owns the virtual interface.
virtualInterface_ownerAccount :: Lens' VirtualInterface (Maybe Text)

-- | The Region where the virtual interface is located.
virtualInterface_region :: Lens' VirtualInterface (Maybe Text)

-- | The ID of the VLAN.
virtualInterface_vlan :: Lens' VirtualInterface (Maybe Int)

-- | The location of the connection.
virtualInterface_location :: Lens' VirtualInterface (Maybe Text)

-- | The IP address assigned to the customer interface.
virtualInterface_customerAddress :: Lens' VirtualInterface (Maybe Text)

-- | The Amazon VPC prefixes to no longer advertise to the Direct Connect
--   gateway.
createDirectConnectGatewayAssociationProposal_removeAllowedPrefixesToDirectConnectGateway :: Lens' CreateDirectConnectGatewayAssociationProposal (Maybe [RouteFilterPrefix])

-- | The Amazon VPC prefixes to advertise to the Direct Connect gateway.
createDirectConnectGatewayAssociationProposal_addAllowedPrefixesToDirectConnectGateway :: Lens' CreateDirectConnectGatewayAssociationProposal (Maybe [RouteFilterPrefix])

-- | The ID of the Direct Connect gateway.
createDirectConnectGatewayAssociationProposal_directConnectGatewayId :: Lens' CreateDirectConnectGatewayAssociationProposal Text

-- | The ID of the account that owns the Direct Connect gateway.
createDirectConnectGatewayAssociationProposal_directConnectGatewayOwnerAccount :: Lens' CreateDirectConnectGatewayAssociationProposal Text

-- | The ID of the virtual private gateway or transit gateway.
createDirectConnectGatewayAssociationProposal_gatewayId :: Lens' CreateDirectConnectGatewayAssociationProposal Text

-- | Information about the Direct Connect gateway proposal.
createDirectConnectGatewayAssociationProposalResponse_directConnectGatewayAssociationProposal :: Lens' CreateDirectConnectGatewayAssociationProposalResponse (Maybe DirectConnectGatewayAssociationProposal)

-- | The response's http status code.
createDirectConnectGatewayAssociationProposalResponse_httpStatus :: Lens' CreateDirectConnectGatewayAssociationProposalResponse Int

-- | The ID of the Direct Connect gateway.
deleteDirectConnectGateway_directConnectGatewayId :: Lens' DeleteDirectConnectGateway Text

-- | The Direct Connect gateway.
deleteDirectConnectGatewayResponse_directConnectGateway :: Lens' DeleteDirectConnectGatewayResponse (Maybe DirectConnectGateway)

-- | The response's http status code.
deleteDirectConnectGatewayResponse_httpStatus :: Lens' DeleteDirectConnectGatewayResponse Int

-- | The tags associated with the connection.
allocateHostedConnection_tags :: Lens' AllocateHostedConnection (Maybe (NonEmpty Tag))

-- | The ID of the interconnect or LAG.
allocateHostedConnection_connectionId :: Lens' AllocateHostedConnection Text

-- | The ID of the account ID of the customer for the connection.
allocateHostedConnection_ownerAccount :: Lens' AllocateHostedConnection Text

-- | The bandwidth of the connection. The possible values are 50Mbps,
--   100Mbps, 200Mbps, 300Mbps, 400Mbps, 500Mbps, 1Gbps, 2Gbps, 5Gbps, and
--   10Gbps. Note that only those Direct Connect Partners who have met
--   specific requirements are allowed to create a 1Gbps, 2Gbps, 5Gbps or
--   10Gbps hosted connection.
allocateHostedConnection_bandwidth :: Lens' AllocateHostedConnection Text

-- | The name of the hosted connection.
allocateHostedConnection_connectionName :: Lens' AllocateHostedConnection Text

-- | The dedicated VLAN provisioned to the hosted connection.
allocateHostedConnection_vlan :: Lens' AllocateHostedConnection Int

-- | The bandwidth of the connection.
connection_bandwidth :: Lens' Connection (Maybe Text)

-- | The Direct Connect endpoint that terminates the physical connection.
connection_awsDeviceV2 :: Lens' Connection (Maybe Text)

-- | The state of the connection. The following are the possible values:
--   
--   <ul>
--   <li><tt>ordering</tt>: The initial state of a hosted connection
--   provisioned on an interconnect. The connection stays in the ordering
--   state until the owner of the hosted connection confirms or declines
--   the connection order.</li>
--   <li><tt>requested</tt>: The initial state of a standard connection.
--   The connection stays in the requested state until the Letter of
--   Authorization (LOA) is sent to the customer.</li>
--   <li><tt>pending</tt>: The connection has been approved and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is up and the connection is
--   ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The connection is being deleted.</li>
--   <li><tt>deleted</tt>: The connection has been deleted.</li>
--   <li><tt>rejected</tt>: A hosted connection in the <tt>ordering</tt>
--   state enters the <tt>rejected</tt> state if it is deleted by the
--   customer.</li>
--   <li><tt>unknown</tt>: The state of the connection is not
--   available.</li>
--   </ul>
connection_connectionState :: Lens' Connection (Maybe ConnectionState)

-- | The name of the connection.
connection_connectionName :: Lens' Connection (Maybe Text)

-- | The MAC Security (MACsec) security keys associated with the
--   connection.
connection_macSecKeys :: Lens' Connection (Maybe [MacSecKey])

-- | The name of the service provider associated with the connection.
connection_providerName :: Lens' Connection (Maybe Text)

-- | The ID of the connection.
connection_connectionId :: Lens' Connection (Maybe Text)

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
connection_awsLogicalDeviceId :: Lens' Connection (Maybe Text)

-- | Indicates whether the connection supports a secondary BGP peer in the
--   same address family (IPv4/IPv6).
connection_hasLogicalRedundancy :: Lens' Connection (Maybe HasLogicalRedundancy)

-- | The Direct Connect endpoint on which the physical connection
--   terminates.
connection_awsDevice :: Lens' Connection (Maybe Text)

-- | Indicates whether jumbo frames (9001 MTU) are supported.
connection_jumboFrameCapable :: Lens' Connection (Maybe Bool)

-- | The MAC Security (MACsec) port link status of the connection.
--   
--   The valid values are <tt>Encryption Up</tt>, which means that there is
--   an active Connection Key Name, or <tt>Encryption Down</tt>.
connection_portEncryptionStatus :: Lens' Connection (Maybe Text)

-- | The ID of the LAG.
connection_lagId :: Lens' Connection (Maybe Text)

-- | The MAC Security (MACsec) connection encryption mode.
--   
--   The valid values are <tt>no_encrypt</tt>, <tt>should_encrypt</tt>, and
--   <tt>must_encrypt</tt>.
connection_encryptionMode :: Lens' Connection (Maybe Text)

-- | The name of the Direct Connect service provider associated with the
--   connection.
connection_partnerName :: Lens' Connection (Maybe Text)

-- | The tags associated with the connection.
connection_tags :: Lens' Connection (Maybe (NonEmpty Tag))

-- | The time of the most recent call to DescribeLoa for this connection.
connection_loaIssueTime :: Lens' Connection (Maybe UTCTime)

-- | The ID of the account that owns the connection.
connection_ownerAccount :: Lens' Connection (Maybe Text)

-- | The Region where the connection is located.
connection_region :: Lens' Connection (Maybe Text)

-- | The ID of the VLAN.
connection_vlan :: Lens' Connection (Maybe Int)

-- | The location of the connection.
connection_location :: Lens' Connection (Maybe Text)

-- | Indicates whether the connection supports MAC Security (MACsec).
connection_macSecCapable :: Lens' Connection (Maybe Bool)

-- | The ID of the associated gateway.
associatedGateway_id :: Lens' AssociatedGateway (Maybe Text)

-- | The type of associated gateway.
associatedGateway_type :: Lens' AssociatedGateway (Maybe GatewayType)

-- | The ID of the account that owns the associated virtual private gateway
--   or transit gateway.
associatedGateway_ownerAccount :: Lens' AssociatedGateway (Maybe Text)

-- | The Region where the associated gateway is located.
associatedGateway_region :: Lens' AssociatedGateway (Maybe Text)

-- | The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
bGPPeer_authKey :: Lens' BGPPeer (Maybe Text)

-- | The autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
bGPPeer_asn :: Lens' BGPPeer (Maybe Int)

-- | The Direct Connect endpoint that terminates the BGP peer.
bGPPeer_awsDeviceV2 :: Lens' BGPPeer (Maybe Text)

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
bGPPeer_awsLogicalDeviceId :: Lens' BGPPeer (Maybe Text)

-- | The ID of the BGP peer.
bGPPeer_bgpPeerId :: Lens' BGPPeer (Maybe Text)

-- | The status of the BGP peer. The following are the possible values:
--   
--   <ul>
--   <li><tt>up</tt>: The BGP peer is established. This state does not
--   indicate the state of the routing function. Ensure that you are
--   receiving routes over the BGP session.</li>
--   <li><tt>down</tt>: The BGP peer is down.</li>
--   <li><tt>unknown</tt>: The BGP peer status is not available.</li>
--   </ul>
bGPPeer_bgpStatus :: Lens' BGPPeer (Maybe BGPStatus)

-- | The state of the BGP peer. The following are the possible values:
--   
--   <ul>
--   <li><tt>verifying</tt>: The BGP peering addresses or ASN require
--   validation before the BGP peer can be created. This state applies only
--   to public virtual interfaces.</li>
--   <li><tt>pending</tt>: The BGP peer is created, and remains in this
--   state until it is ready to be established.</li>
--   <li><tt>available</tt>: The BGP peer is ready to be established.</li>
--   <li><tt>deleting</tt>: The BGP peer is being deleted.</li>
--   <li><tt>deleted</tt>: The BGP peer is deleted and cannot be
--   established.</li>
--   </ul>
bGPPeer_bgpPeerState :: Lens' BGPPeer (Maybe BGPPeerState)

-- | The IP address assigned to the Amazon interface.
bGPPeer_amazonAddress :: Lens' BGPPeer (Maybe Text)

-- | The address family for the BGP peer.
bGPPeer_addressFamily :: Lens' BGPPeer (Maybe AddressFamily)

-- | The IP address assigned to the customer interface.
bGPPeer_customerAddress :: Lens' BGPPeer (Maybe Text)

-- | The bandwidth of the connection.
connection_bandwidth :: Lens' Connection (Maybe Text)

-- | The Direct Connect endpoint that terminates the physical connection.
connection_awsDeviceV2 :: Lens' Connection (Maybe Text)

-- | The state of the connection. The following are the possible values:
--   
--   <ul>
--   <li><tt>ordering</tt>: The initial state of a hosted connection
--   provisioned on an interconnect. The connection stays in the ordering
--   state until the owner of the hosted connection confirms or declines
--   the connection order.</li>
--   <li><tt>requested</tt>: The initial state of a standard connection.
--   The connection stays in the requested state until the Letter of
--   Authorization (LOA) is sent to the customer.</li>
--   <li><tt>pending</tt>: The connection has been approved and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is up and the connection is
--   ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The connection is being deleted.</li>
--   <li><tt>deleted</tt>: The connection has been deleted.</li>
--   <li><tt>rejected</tt>: A hosted connection in the <tt>ordering</tt>
--   state enters the <tt>rejected</tt> state if it is deleted by the
--   customer.</li>
--   <li><tt>unknown</tt>: The state of the connection is not
--   available.</li>
--   </ul>
connection_connectionState :: Lens' Connection (Maybe ConnectionState)

-- | The name of the connection.
connection_connectionName :: Lens' Connection (Maybe Text)

-- | The MAC Security (MACsec) security keys associated with the
--   connection.
connection_macSecKeys :: Lens' Connection (Maybe [MacSecKey])

-- | The name of the service provider associated with the connection.
connection_providerName :: Lens' Connection (Maybe Text)

-- | The ID of the connection.
connection_connectionId :: Lens' Connection (Maybe Text)

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
connection_awsLogicalDeviceId :: Lens' Connection (Maybe Text)

-- | Indicates whether the connection supports a secondary BGP peer in the
--   same address family (IPv4/IPv6).
connection_hasLogicalRedundancy :: Lens' Connection (Maybe HasLogicalRedundancy)

-- | The Direct Connect endpoint on which the physical connection
--   terminates.
connection_awsDevice :: Lens' Connection (Maybe Text)

-- | Indicates whether jumbo frames (9001 MTU) are supported.
connection_jumboFrameCapable :: Lens' Connection (Maybe Bool)

-- | The MAC Security (MACsec) port link status of the connection.
--   
--   The valid values are <tt>Encryption Up</tt>, which means that there is
--   an active Connection Key Name, or <tt>Encryption Down</tt>.
connection_portEncryptionStatus :: Lens' Connection (Maybe Text)

-- | The ID of the LAG.
connection_lagId :: Lens' Connection (Maybe Text)

-- | The MAC Security (MACsec) connection encryption mode.
--   
--   The valid values are <tt>no_encrypt</tt>, <tt>should_encrypt</tt>, and
--   <tt>must_encrypt</tt>.
connection_encryptionMode :: Lens' Connection (Maybe Text)

-- | The name of the Direct Connect service provider associated with the
--   connection.
connection_partnerName :: Lens' Connection (Maybe Text)

-- | The tags associated with the connection.
connection_tags :: Lens' Connection (Maybe (NonEmpty Tag))

-- | The time of the most recent call to DescribeLoa for this connection.
connection_loaIssueTime :: Lens' Connection (Maybe UTCTime)

-- | The ID of the account that owns the connection.
connection_ownerAccount :: Lens' Connection (Maybe Text)

-- | The Region where the connection is located.
connection_region :: Lens' Connection (Maybe Text)

-- | The ID of the VLAN.
connection_vlan :: Lens' Connection (Maybe Int)

-- | The location of the connection.
connection_location :: Lens' Connection (Maybe Text)

-- | Indicates whether the connection supports MAC Security (MACsec).
connection_macSecCapable :: Lens' Connection (Maybe Bool)

-- | The connections.
connections_connections :: Lens' Connections (Maybe [Connection])

-- | The state of the Direct Connect gateway. The following are the
--   possible values:
--   
--   <ul>
--   <li><tt>pending</tt>: The initial state after calling
--   CreateDirectConnectGateway.</li>
--   <li><tt>available</tt>: The Direct Connect gateway is ready for
--   use.</li>
--   <li><tt>deleting</tt>: The initial state after calling
--   DeleteDirectConnectGateway.</li>
--   <li><tt>deleted</tt>: The Direct Connect gateway is deleted and cannot
--   pass traffic.</li>
--   </ul>
directConnectGateway_directConnectGatewayState :: Lens' DirectConnectGateway (Maybe DirectConnectGatewayState)

-- | The error message if the state of an object failed to advance.
directConnectGateway_stateChangeError :: Lens' DirectConnectGateway (Maybe Text)

-- | The name of the Direct Connect gateway.
directConnectGateway_directConnectGatewayName :: Lens' DirectConnectGateway (Maybe Text)

-- | The autonomous system number (ASN) for the Amazon side of the
--   connection.
directConnectGateway_amazonSideAsn :: Lens' DirectConnectGateway (Maybe Integer)

-- | The ID of the Direct Connect gateway.
directConnectGateway_directConnectGatewayId :: Lens' DirectConnectGateway (Maybe Text)

-- | The ID of the account that owns the Direct Connect gateway.
directConnectGateway_ownerAccount :: Lens' DirectConnectGateway (Maybe Text)

-- | The ID of the virtual private gateway. Applies only to private virtual
--   interfaces.
directConnectGatewayAssociation_virtualGatewayId :: Lens' DirectConnectGatewayAssociation (Maybe Text)

-- | The Region where the virtual private gateway is located.
directConnectGatewayAssociation_virtualGatewayRegion :: Lens' DirectConnectGatewayAssociation (Maybe Text)

-- | The ID of the account that owns the virtual private gateway.
directConnectGatewayAssociation_virtualGatewayOwnerAccount :: Lens' DirectConnectGatewayAssociation (Maybe Text)

-- | The error message if the state of an object failed to advance.
directConnectGatewayAssociation_stateChangeError :: Lens' DirectConnectGatewayAssociation (Maybe Text)

-- | The state of the association. The following are the possible values:
--   
--   <ul>
--   <li><tt>associating</tt>: The initial state after calling
--   CreateDirectConnectGatewayAssociation.</li>
--   <li><tt>associated</tt>: The Direct Connect gateway and virtual
--   private gateway or transit gateway are successfully associated and
--   ready to pass traffic.</li>
--   <li><tt>disassociating</tt>: The initial state after calling
--   DeleteDirectConnectGatewayAssociation.</li>
--   <li><tt>disassociated</tt>: The virtual private gateway or transit
--   gateway is disassociated from the Direct Connect gateway. Traffic flow
--   between the Direct Connect gateway and virtual private gateway or
--   transit gateway is stopped.</li>
--   </ul>
directConnectGatewayAssociation_associationState :: Lens' DirectConnectGatewayAssociation (Maybe DirectConnectGatewayAssociationState)

-- | Information about the associated gateway.
directConnectGatewayAssociation_associatedGateway :: Lens' DirectConnectGatewayAssociation (Maybe AssociatedGateway)

-- | The ID of the Direct Connect gateway association.
directConnectGatewayAssociation_associationId :: Lens' DirectConnectGatewayAssociation (Maybe Text)

-- | The ID of the Direct Connect gateway.
directConnectGatewayAssociation_directConnectGatewayId :: Lens' DirectConnectGatewayAssociation (Maybe Text)

-- | The Amazon VPC prefixes to advertise to the Direct Connect gateway.
directConnectGatewayAssociation_allowedPrefixesToDirectConnectGateway :: Lens' DirectConnectGatewayAssociation (Maybe [RouteFilterPrefix])

-- | The ID of the account that owns the associated gateway.
directConnectGatewayAssociation_directConnectGatewayOwnerAccount :: Lens' DirectConnectGatewayAssociation (Maybe Text)

-- | The ID of the association proposal.
directConnectGatewayAssociationProposal_proposalId :: Lens' DirectConnectGatewayAssociationProposal (Maybe Text)

-- | The Amazon VPC prefixes to advertise to the Direct Connect gateway.
directConnectGatewayAssociationProposal_requestedAllowedPrefixesToDirectConnectGateway :: Lens' DirectConnectGatewayAssociationProposal (Maybe [RouteFilterPrefix])

-- | The state of the proposal. The following are possible values:
--   
--   <ul>
--   <li><tt>accepted</tt>: The proposal has been accepted. The Direct
--   Connect gateway association is available to use in this state.</li>
--   <li><tt>deleted</tt>: The proposal has been deleted by the owner that
--   made the proposal. The Direct Connect gateway association cannot be
--   used in this state.</li>
--   <li><tt>requested</tt>: The proposal has been requested. The Direct
--   Connect gateway association cannot be used in this state.</li>
--   </ul>
directConnectGatewayAssociationProposal_proposalState :: Lens' DirectConnectGatewayAssociationProposal (Maybe DirectConnectGatewayAssociationProposalState)

-- | Information about the associated gateway.
directConnectGatewayAssociationProposal_associatedGateway :: Lens' DirectConnectGatewayAssociationProposal (Maybe AssociatedGateway)

-- | The existing Amazon VPC prefixes advertised to the Direct Connect
--   gateway.
directConnectGatewayAssociationProposal_existingAllowedPrefixesToDirectConnectGateway :: Lens' DirectConnectGatewayAssociationProposal (Maybe [RouteFilterPrefix])

-- | The ID of the Direct Connect gateway.
directConnectGatewayAssociationProposal_directConnectGatewayId :: Lens' DirectConnectGatewayAssociationProposal (Maybe Text)

-- | The ID of the account that owns the Direct Connect gateway.
directConnectGatewayAssociationProposal_directConnectGatewayOwnerAccount :: Lens' DirectConnectGatewayAssociationProposal (Maybe Text)

-- | The error message if the state of an object failed to advance.
directConnectGatewayAttachment_stateChangeError :: Lens' DirectConnectGatewayAttachment (Maybe Text)

-- | The state of the attachment. The following are the possible values:
--   
--   <ul>
--   <li><tt>attaching</tt>: The initial state after a virtual interface is
--   created using the Direct Connect gateway.</li>
--   <li><tt>attached</tt>: The Direct Connect gateway and virtual
--   interface are attached and ready to pass traffic.</li>
--   <li><tt>detaching</tt>: The initial state after calling
--   DeleteVirtualInterface.</li>
--   <li><tt>detached</tt>: The virtual interface is detached from the
--   Direct Connect gateway. Traffic flow between the Direct Connect
--   gateway and virtual interface is stopped.</li>
--   </ul>
directConnectGatewayAttachment_attachmentState :: Lens' DirectConnectGatewayAttachment (Maybe DirectConnectGatewayAttachmentState)

-- | The ID of the account that owns the virtual interface.
directConnectGatewayAttachment_virtualInterfaceOwnerAccount :: Lens' DirectConnectGatewayAttachment (Maybe Text)

-- | The Region where the virtual interface is located.
directConnectGatewayAttachment_virtualInterfaceRegion :: Lens' DirectConnectGatewayAttachment (Maybe Text)

-- | The type of attachment.
directConnectGatewayAttachment_attachmentType :: Lens' DirectConnectGatewayAttachment (Maybe DirectConnectGatewayAttachmentType)

-- | The ID of the virtual interface.
directConnectGatewayAttachment_virtualInterfaceId :: Lens' DirectConnectGatewayAttachment (Maybe Text)

-- | The ID of the Direct Connect gateway.
directConnectGatewayAttachment_directConnectGatewayId :: Lens' DirectConnectGatewayAttachment (Maybe Text)

-- | The ID of the interconnect.
interconnect_interconnectId :: Lens' Interconnect (Maybe Text)

-- | The bandwidth of the connection.
interconnect_bandwidth :: Lens' Interconnect (Maybe Text)

-- | The Direct Connect endpoint that terminates the physical connection.
interconnect_awsDeviceV2 :: Lens' Interconnect (Maybe Text)

-- | The name of the service provider associated with the interconnect.
interconnect_providerName :: Lens' Interconnect (Maybe Text)

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
interconnect_awsLogicalDeviceId :: Lens' Interconnect (Maybe Text)

-- | Indicates whether the interconnect supports a secondary BGP in the
--   same address family (IPv4/IPv6).
interconnect_hasLogicalRedundancy :: Lens' Interconnect (Maybe HasLogicalRedundancy)

-- | The Direct Connect endpoint on which the physical connection
--   terminates.
interconnect_awsDevice :: Lens' Interconnect (Maybe Text)

-- | Indicates whether jumbo frames (9001 MTU) are supported.
interconnect_jumboFrameCapable :: Lens' Interconnect (Maybe Bool)

-- | The ID of the LAG.
interconnect_lagId :: Lens' Interconnect (Maybe Text)

-- | The tags associated with the interconnect.
interconnect_tags :: Lens' Interconnect (Maybe (NonEmpty Tag))

-- | The time of the most recent call to DescribeLoa for this connection.
interconnect_loaIssueTime :: Lens' Interconnect (Maybe UTCTime)

-- | The Region where the connection is located.
interconnect_region :: Lens' Interconnect (Maybe Text)

-- | The name of the interconnect.
interconnect_interconnectName :: Lens' Interconnect (Maybe Text)

-- | The state of the interconnect. The following are the possible values:
--   
--   <ul>
--   <li><tt>requested</tt>: The initial state of an interconnect. The
--   interconnect stays in the requested state until the Letter of
--   Authorization (LOA) is sent to the customer.</li>
--   <li><tt>pending</tt>: The interconnect is approved, and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is up, and the interconnect
--   is ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The interconnect is being deleted.</li>
--   <li><tt>deleted</tt>: The interconnect is deleted.</li>
--   <li><tt>unknown</tt>: The state of the interconnect is not
--   available.</li>
--   </ul>
interconnect_interconnectState :: Lens' Interconnect (Maybe InterconnectState)

-- | The location of the connection.
interconnect_location :: Lens' Interconnect (Maybe Text)

-- | The number of physical dedicated connections bundled by the LAG, up to
--   a maximum of 10.
lag_numberOfConnections :: Lens' Lag (Maybe Int)

-- | The Direct Connect endpoint that hosts the LAG.
lag_awsDeviceV2 :: Lens' Lag (Maybe Text)

-- | Indicates whether the LAG can host other connections.
lag_allowsHostedConnections :: Lens' Lag (Maybe Bool)

-- | The MAC Security (MACsec) security keys associated with the LAG.
lag_macSecKeys :: Lens' Lag (Maybe [MacSecKey])

-- | The name of the service provider associated with the LAG.
lag_providerName :: Lens' Lag (Maybe Text)

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
lag_awsLogicalDeviceId :: Lens' Lag (Maybe Text)

-- | Indicates whether the LAG supports a secondary BGP peer in the same
--   address family (IPv4/IPv6).
lag_hasLogicalRedundancy :: Lens' Lag (Maybe HasLogicalRedundancy)

-- | The name of the LAG.
lag_lagName :: Lens' Lag (Maybe Text)

-- | The connections bundled by the LAG.
lag_connections :: Lens' Lag (Maybe [Connection])

-- | The Direct Connect endpoint that hosts the LAG.
lag_awsDevice :: Lens' Lag (Maybe Text)

-- | The state of the LAG. The following are the possible values:
--   
--   <ul>
--   <li><tt>requested</tt>: The initial state of a LAG. The LAG stays in
--   the requested state until the Letter of Authorization (LOA) is
--   available.</li>
--   <li><tt>pending</tt>: The LAG has been approved and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is established and the LAG is
--   ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The LAG is being deleted.</li>
--   <li><tt>deleted</tt>: The LAG is deleted.</li>
--   <li><tt>unknown</tt>: The state of the LAG is not available.</li>
--   </ul>
lag_lagState :: Lens' Lag (Maybe LagState)

-- | Indicates whether jumbo frames (9001 MTU) are supported.
lag_jumboFrameCapable :: Lens' Lag (Maybe Bool)

-- | The individual bandwidth of the physical connections bundled by the
--   LAG. The possible values are 1Gbps and 10Gbps.
lag_connectionsBandwidth :: Lens' Lag (Maybe Text)

-- | The ID of the LAG.
lag_lagId :: Lens' Lag (Maybe Text)

-- | The LAG MAC Security (MACsec) encryption mode.
--   
--   The valid values are <tt>no_encrypt</tt>, <tt>should_encrypt</tt>, and
--   <tt>must_encrypt</tt>.
lag_encryptionMode :: Lens' Lag (Maybe Text)

-- | The tags associated with the LAG.
lag_tags :: Lens' Lag (Maybe (NonEmpty Tag))

-- | The ID of the account that owns the LAG.
lag_ownerAccount :: Lens' Lag (Maybe Text)

-- | The Region where the connection is located.
lag_region :: Lens' Lag (Maybe Text)

-- | The location of the LAG.
lag_location :: Lens' Lag (Maybe Text)

-- | The minimum number of physical dedicated connections that must be
--   operational for the LAG itself to be operational.
lag_minimumLinks :: Lens' Lag (Maybe Int)

-- | Indicates whether the LAG supports MAC Security (MACsec).
lag_macSecCapable :: Lens' Lag (Maybe Bool)

-- | The available port speeds for the location.
location_availablePortSpeeds :: Lens' Location (Maybe [Text])

-- | The available MAC Security (MACsec) port speeds for the location.
location_availableMacSecPortSpeeds :: Lens' Location (Maybe [Text])

-- | The name of the service provider for the location.
location_availableProviders :: Lens' Location (Maybe [Text])

-- | The code for the location.
location_locationCode :: Lens' Location (Maybe Text)

-- | The Region for the location.
location_region :: Lens' Location (Maybe Text)

-- | The name of the location. This includes the name of the colocation
--   partner and the physical site of the building.
location_locationName :: Lens' Location (Maybe Text)

-- | The date that the MAC Security (MACsec) secret key takes effect. The
--   value is displayed in UTC format.
macSecKey_startOn :: Lens' MacSecKey (Maybe Text)

-- | The Connection Key Name (CKN) for the MAC Security secret key.
macSecKey_ckn :: Lens' MacSecKey (Maybe Text)

-- | The Amazon Resource Name (ARN) of the MAC Security (MACsec) secret
--   key.
macSecKey_secretARN :: Lens' MacSecKey (Maybe Text)

-- | The state of the MAC Security (MACsec) secret key.
--   
--   The possible values are:
--   
--   <ul>
--   <li><tt>associating</tt>: The MAC Security (MACsec) secret key is
--   being validated and not yet associated with the connection or
--   LAG.</li>
--   <li><tt>associated</tt>: The MAC Security (MACsec) secret key is
--   validated and associated with the connection or LAG.</li>
--   <li><tt>disassociating</tt>: The MAC Security (MACsec) secret key is
--   being disassociated from the connection or LAG</li>
--   <li><tt>disassociated</tt>: The MAC Security (MACsec) secret key is no
--   longer associated with the connection or LAG.</li>
--   </ul>
macSecKey_state :: Lens' MacSecKey (Maybe Text)

-- | The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
newBGPPeer_authKey :: Lens' NewBGPPeer (Maybe Text)

-- | The autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
newBGPPeer_asn :: Lens' NewBGPPeer (Maybe Int)

-- | The IP address assigned to the Amazon interface.
newBGPPeer_amazonAddress :: Lens' NewBGPPeer (Maybe Text)

-- | The address family for the BGP peer.
newBGPPeer_addressFamily :: Lens' NewBGPPeer (Maybe AddressFamily)

-- | The IP address assigned to the customer interface.
newBGPPeer_customerAddress :: Lens' NewBGPPeer (Maybe Text)

-- | The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
newPrivateVirtualInterface_authKey :: Lens' NewPrivateVirtualInterface (Maybe Text)

-- | The ID of the virtual private gateway.
newPrivateVirtualInterface_virtualGatewayId :: Lens' NewPrivateVirtualInterface (Maybe Text)

-- | The maximum transmission unit (MTU), in bytes. The supported values
--   are 1500 and 9001. The default value is 1500.
newPrivateVirtualInterface_mtu :: Lens' NewPrivateVirtualInterface (Maybe Int)

-- | The tags associated with the private virtual interface.
newPrivateVirtualInterface_tags :: Lens' NewPrivateVirtualInterface (Maybe (NonEmpty Tag))

-- | The ID of the Direct Connect gateway.
newPrivateVirtualInterface_directConnectGatewayId :: Lens' NewPrivateVirtualInterface (Maybe Text)

-- | The IP address assigned to the Amazon interface.
newPrivateVirtualInterface_amazonAddress :: Lens' NewPrivateVirtualInterface (Maybe Text)

-- | The address family for the BGP peer.
newPrivateVirtualInterface_addressFamily :: Lens' NewPrivateVirtualInterface (Maybe AddressFamily)

-- | The IP address assigned to the customer interface.
newPrivateVirtualInterface_customerAddress :: Lens' NewPrivateVirtualInterface (Maybe Text)

-- | The name of the virtual interface assigned by the customer network.
--   The name has a maximum of 100 characters. The following are valid
--   characters: a-z, 0-9 and a hyphen (-).
newPrivateVirtualInterface_virtualInterfaceName :: Lens' NewPrivateVirtualInterface Text

-- | The ID of the VLAN.
newPrivateVirtualInterface_vlan :: Lens' NewPrivateVirtualInterface Int

-- | The autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
--   
--   The valid values are 1-2147483647.
newPrivateVirtualInterface_asn :: Lens' NewPrivateVirtualInterface Int

-- | The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
newPrivateVirtualInterfaceAllocation_authKey :: Lens' NewPrivateVirtualInterfaceAllocation (Maybe Text)

-- | The maximum transmission unit (MTU), in bytes. The supported values
--   are 1500 and 9001. The default value is 1500.
newPrivateVirtualInterfaceAllocation_mtu :: Lens' NewPrivateVirtualInterfaceAllocation (Maybe Int)

-- | The tags associated with the private virtual interface.
newPrivateVirtualInterfaceAllocation_tags :: Lens' NewPrivateVirtualInterfaceAllocation (Maybe (NonEmpty Tag))

-- | The IP address assigned to the Amazon interface.
newPrivateVirtualInterfaceAllocation_amazonAddress :: Lens' NewPrivateVirtualInterfaceAllocation (Maybe Text)

-- | The address family for the BGP peer.
newPrivateVirtualInterfaceAllocation_addressFamily :: Lens' NewPrivateVirtualInterfaceAllocation (Maybe AddressFamily)

-- | The IP address assigned to the customer interface.
newPrivateVirtualInterfaceAllocation_customerAddress :: Lens' NewPrivateVirtualInterfaceAllocation (Maybe Text)

-- | The name of the virtual interface assigned by the customer network.
--   The name has a maximum of 100 characters. The following are valid
--   characters: a-z, 0-9 and a hyphen (-).
newPrivateVirtualInterfaceAllocation_virtualInterfaceName :: Lens' NewPrivateVirtualInterfaceAllocation Text

-- | The ID of the VLAN.
newPrivateVirtualInterfaceAllocation_vlan :: Lens' NewPrivateVirtualInterfaceAllocation Int

-- | The autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
--   
--   The valid values are 1-2147483647.
newPrivateVirtualInterfaceAllocation_asn :: Lens' NewPrivateVirtualInterfaceAllocation Int

-- | The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
newPublicVirtualInterface_authKey :: Lens' NewPublicVirtualInterface (Maybe Text)

-- | The routes to be advertised to the Amazon Web Services network in this
--   Region. Applies to public virtual interfaces.
newPublicVirtualInterface_routeFilterPrefixes :: Lens' NewPublicVirtualInterface (Maybe [RouteFilterPrefix])

-- | The tags associated with the public virtual interface.
newPublicVirtualInterface_tags :: Lens' NewPublicVirtualInterface (Maybe (NonEmpty Tag))

-- | The IP address assigned to the Amazon interface.
newPublicVirtualInterface_amazonAddress :: Lens' NewPublicVirtualInterface (Maybe Text)

-- | The address family for the BGP peer.
newPublicVirtualInterface_addressFamily :: Lens' NewPublicVirtualInterface (Maybe AddressFamily)

-- | The IP address assigned to the customer interface.
newPublicVirtualInterface_customerAddress :: Lens' NewPublicVirtualInterface (Maybe Text)

-- | The name of the virtual interface assigned by the customer network.
--   The name has a maximum of 100 characters. The following are valid
--   characters: a-z, 0-9 and a hyphen (-).
newPublicVirtualInterface_virtualInterfaceName :: Lens' NewPublicVirtualInterface Text

-- | The ID of the VLAN.
newPublicVirtualInterface_vlan :: Lens' NewPublicVirtualInterface Int

-- | The autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
--   
--   The valid values are 1-2147483647.
newPublicVirtualInterface_asn :: Lens' NewPublicVirtualInterface Int

-- | The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
newPublicVirtualInterfaceAllocation_authKey :: Lens' NewPublicVirtualInterfaceAllocation (Maybe Text)

-- | The routes to be advertised to the Amazon Web Services network in this
--   Region. Applies to public virtual interfaces.
newPublicVirtualInterfaceAllocation_routeFilterPrefixes :: Lens' NewPublicVirtualInterfaceAllocation (Maybe [RouteFilterPrefix])

-- | The tags associated with the public virtual interface.
newPublicVirtualInterfaceAllocation_tags :: Lens' NewPublicVirtualInterfaceAllocation (Maybe (NonEmpty Tag))

-- | The IP address assigned to the Amazon interface.
newPublicVirtualInterfaceAllocation_amazonAddress :: Lens' NewPublicVirtualInterfaceAllocation (Maybe Text)

-- | The address family for the BGP peer.
newPublicVirtualInterfaceAllocation_addressFamily :: Lens' NewPublicVirtualInterfaceAllocation (Maybe AddressFamily)

-- | The IP address assigned to the customer interface.
newPublicVirtualInterfaceAllocation_customerAddress :: Lens' NewPublicVirtualInterfaceAllocation (Maybe Text)

-- | The name of the virtual interface assigned by the customer network.
--   The name has a maximum of 100 characters. The following are valid
--   characters: a-z, 0-9 and a hyphen (-).
newPublicVirtualInterfaceAllocation_virtualInterfaceName :: Lens' NewPublicVirtualInterfaceAllocation Text

-- | The ID of the VLAN.
newPublicVirtualInterfaceAllocation_vlan :: Lens' NewPublicVirtualInterfaceAllocation Int

-- | The autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
--   
--   The valid values are 1-2147483647.
newPublicVirtualInterfaceAllocation_asn :: Lens' NewPublicVirtualInterfaceAllocation Int

-- | The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
newTransitVirtualInterface_authKey :: Lens' NewTransitVirtualInterface (Maybe Text)

-- | The autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
--   
--   The valid values are 1-2147483647.
newTransitVirtualInterface_asn :: Lens' NewTransitVirtualInterface (Maybe Int)

-- | The maximum transmission unit (MTU), in bytes. The supported values
--   are 1500 and 9001. The default value is 1500.
newTransitVirtualInterface_mtu :: Lens' NewTransitVirtualInterface (Maybe Int)

-- | The tags associated with the transitive virtual interface.
newTransitVirtualInterface_tags :: Lens' NewTransitVirtualInterface (Maybe (NonEmpty Tag))

-- | The ID of the Direct Connect gateway.
newTransitVirtualInterface_directConnectGatewayId :: Lens' NewTransitVirtualInterface (Maybe Text)

-- | The name of the virtual interface assigned by the customer network.
--   The name has a maximum of 100 characters. The following are valid
--   characters: a-z, 0-9 and a hyphen (-).
newTransitVirtualInterface_virtualInterfaceName :: Lens' NewTransitVirtualInterface (Maybe Text)

-- | The IP address assigned to the Amazon interface.
newTransitVirtualInterface_amazonAddress :: Lens' NewTransitVirtualInterface (Maybe Text)

-- | The address family for the BGP peer.
newTransitVirtualInterface_addressFamily :: Lens' NewTransitVirtualInterface (Maybe AddressFamily)

-- | The ID of the VLAN.
newTransitVirtualInterface_vlan :: Lens' NewTransitVirtualInterface (Maybe Int)

-- | The IP address assigned to the customer interface.
newTransitVirtualInterface_customerAddress :: Lens' NewTransitVirtualInterface (Maybe Text)

-- | The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
newTransitVirtualInterfaceAllocation_authKey :: Lens' NewTransitVirtualInterfaceAllocation (Maybe Text)

-- | The autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
--   
--   The valid values are 1-2147483647.
newTransitVirtualInterfaceAllocation_asn :: Lens' NewTransitVirtualInterfaceAllocation (Maybe Int)

-- | The maximum transmission unit (MTU), in bytes. The supported values
--   are 1500 and 9001. The default value is 1500.
newTransitVirtualInterfaceAllocation_mtu :: Lens' NewTransitVirtualInterfaceAllocation (Maybe Int)

-- | The tags associated with the transitive virtual interface.
newTransitVirtualInterfaceAllocation_tags :: Lens' NewTransitVirtualInterfaceAllocation (Maybe (NonEmpty Tag))

-- | The name of the virtual interface assigned by the customer network.
--   The name has a maximum of 100 characters. The following are valid
--   characters: a-z, 0-9 and a hyphen (-).
newTransitVirtualInterfaceAllocation_virtualInterfaceName :: Lens' NewTransitVirtualInterfaceAllocation (Maybe Text)

-- | The IP address assigned to the Amazon interface.
newTransitVirtualInterfaceAllocation_amazonAddress :: Lens' NewTransitVirtualInterfaceAllocation (Maybe Text)

-- | The address family for the BGP peer.
newTransitVirtualInterfaceAllocation_addressFamily :: Lens' NewTransitVirtualInterfaceAllocation (Maybe AddressFamily)

-- | The ID of the VLAN.
newTransitVirtualInterfaceAllocation_vlan :: Lens' NewTransitVirtualInterfaceAllocation (Maybe Int)

-- | The IP address assigned to the customer interface.
newTransitVirtualInterfaceAllocation_customerAddress :: Lens' NewTransitVirtualInterfaceAllocation (Maybe Text)

-- | The Amazon Resource Name (ARN) of the resource.
resourceTag_resourceArn :: Lens' ResourceTag (Maybe Text)

-- | The tags.
resourceTag_tags :: Lens' ResourceTag (Maybe (NonEmpty Tag))

-- | The CIDR block for the advertised route. Separate multiple routes
--   using commas. An IPv6 CIDR must use /64 or shorter.
routeFilterPrefix_cidr :: Lens' RouteFilterPrefix (Maybe Text)

-- | The value.
tag_value :: Lens' Tag (Maybe Text)

-- | The key.
tag_key :: Lens' Tag Text

-- | The ID of the virtual private gateway.
virtualGateway_virtualGatewayId :: Lens' VirtualGateway (Maybe Text)

-- | The state of the virtual private gateway. The following are the
--   possible values:
--   
--   <ul>
--   <li><tt>pending</tt>: Initial state after creating the virtual private
--   gateway.</li>
--   <li><tt>available</tt>: Ready for use by a private virtual
--   interface.</li>
--   <li><tt>deleting</tt>: Initial state after deleting the virtual
--   private gateway.</li>
--   <li><tt>deleted</tt>: The virtual private gateway is deleted. The
--   private virtual interface is unable to send traffic over this
--   gateway.</li>
--   </ul>
virtualGateway_virtualGatewayState :: Lens' VirtualGateway (Maybe Text)

-- | The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
virtualInterface_authKey :: Lens' VirtualInterface (Maybe Text)

-- | The BGP peers configured on this virtual interface.
virtualInterface_bgpPeers :: Lens' VirtualInterface (Maybe [BGPPeer])

-- | The ID of the virtual private gateway. Applies only to private virtual
--   interfaces.
virtualInterface_virtualGatewayId :: Lens' VirtualInterface (Maybe Text)

-- | The autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
--   
--   The valid values are 1-2147483647.
virtualInterface_asn :: Lens' VirtualInterface (Maybe Int)

-- | The Direct Connect endpoint that terminates the physical connection.
virtualInterface_awsDeviceV2 :: Lens' VirtualInterface (Maybe Text)

-- | The ID of the connection.
virtualInterface_connectionId :: Lens' VirtualInterface (Maybe Text)

-- | The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
virtualInterface_awsLogicalDeviceId :: Lens' VirtualInterface (Maybe Text)

-- | The customer router configuration.
virtualInterface_customerRouterConfig :: Lens' VirtualInterface (Maybe Text)

-- | Indicates whether jumbo frames (9001 MTU) are supported.
virtualInterface_jumboFrameCapable :: Lens' VirtualInterface (Maybe Bool)

-- | The routes to be advertised to the Amazon Web Services network in this
--   Region. Applies to public virtual interfaces.
virtualInterface_routeFilterPrefixes :: Lens' VirtualInterface (Maybe [RouteFilterPrefix])

-- | The maximum transmission unit (MTU), in bytes. The supported values
--   are 1500 and 9001. The default value is 1500.
virtualInterface_mtu :: Lens' VirtualInterface (Maybe Int)

-- | The type of virtual interface. The possible values are
--   <tt>private</tt> and <tt>public</tt>.
virtualInterface_virtualInterfaceType :: Lens' VirtualInterface (Maybe Text)

-- | The autonomous system number (ASN) for the Amazon side of the
--   connection.
virtualInterface_amazonSideAsn :: Lens' VirtualInterface (Maybe Integer)

-- | The ID of the virtual interface.
virtualInterface_virtualInterfaceId :: Lens' VirtualInterface (Maybe Text)

-- | The tags associated with the virtual interface.
virtualInterface_tags :: Lens' VirtualInterface (Maybe (NonEmpty Tag))

-- | The ID of the Direct Connect gateway.
virtualInterface_directConnectGatewayId :: Lens' VirtualInterface (Maybe Text)

-- | The name of the virtual interface assigned by the customer network.
--   The name has a maximum of 100 characters. The following are valid
--   characters: a-z, 0-9 and a hyphen (-).
virtualInterface_virtualInterfaceName :: Lens' VirtualInterface (Maybe Text)

-- | The state of the virtual interface. The following are the possible
--   values:
--   
--   <ul>
--   <li><tt>confirming</tt>: The creation of the virtual interface is
--   pending confirmation from the virtual interface owner. If the owner of
--   the virtual interface is different from the owner of the connection on
--   which it is provisioned, then the virtual interface will remain in
--   this state until it is confirmed by the virtual interface owner.</li>
--   <li><tt>verifying</tt>: This state only applies to public virtual
--   interfaces. Each public virtual interface needs validation before the
--   virtual interface can be created.</li>
--   <li><tt>pending</tt>: A virtual interface is in this state from the
--   time that it is created until the virtual interface is ready to
--   forward traffic.</li>
--   <li><tt>available</tt>: A virtual interface that is able to forward
--   traffic.</li>
--   <li><tt>down</tt>: A virtual interface that is BGP down.</li>
--   <li><tt>deleting</tt>: A virtual interface is in this state
--   immediately after calling DeleteVirtualInterface until it can no
--   longer forward traffic.</li>
--   <li><tt>deleted</tt>: A virtual interface that cannot forward
--   traffic.</li>
--   <li><tt>rejected</tt>: The virtual interface owner has declined
--   creation of the virtual interface. If a virtual interface in the
--   <tt>Confirming</tt> state is deleted by the virtual interface owner,
--   the virtual interface enters the <tt>Rejected</tt> state.</li>
--   <li><tt>unknown</tt>: The state of the virtual interface is not
--   available.</li>
--   </ul>
virtualInterface_virtualInterfaceState :: Lens' VirtualInterface (Maybe VirtualInterfaceState)

-- | The IP address assigned to the Amazon interface.
virtualInterface_amazonAddress :: Lens' VirtualInterface (Maybe Text)

-- | The address family for the BGP peer.
virtualInterface_addressFamily :: Lens' VirtualInterface (Maybe AddressFamily)

-- | The ID of the account that owns the virtual interface.
virtualInterface_ownerAccount :: Lens' VirtualInterface (Maybe Text)

-- | The Region where the virtual interface is located.
virtualInterface_region :: Lens' VirtualInterface (Maybe Text)

-- | The ID of the VLAN.
virtualInterface_vlan :: Lens' VirtualInterface (Maybe Int)

-- | The location of the connection.
virtualInterface_location :: Lens' VirtualInterface (Maybe Text)

-- | The IP address assigned to the customer interface.
virtualInterface_customerAddress :: Lens' VirtualInterface (Maybe Text)

-- | The BGP peers that were put in the DOWN state as part of the virtual
--   interface failover test.
virtualInterfaceTestHistory_bgpPeers :: Lens' VirtualInterfaceTestHistory (Maybe [Text])

-- | The status of the virtual interface failover test.
virtualInterfaceTestHistory_status :: Lens' VirtualInterfaceTestHistory (Maybe Text)

-- | The ID of the virtual interface failover test.
virtualInterfaceTestHistory_testId :: Lens' VirtualInterfaceTestHistory (Maybe Text)

-- | The time that the virtual interface moves to the DOWN state.
virtualInterfaceTestHistory_startTime :: Lens' VirtualInterfaceTestHistory (Maybe UTCTime)

-- | The time that the virtual interface moves out of the DOWN state.
virtualInterfaceTestHistory_endTime :: Lens' VirtualInterfaceTestHistory (Maybe UTCTime)

-- | The ID of the tested virtual interface.
virtualInterfaceTestHistory_virtualInterfaceId :: Lens' VirtualInterfaceTestHistory (Maybe Text)

-- | The owner ID of the tested virtual interface.
virtualInterfaceTestHistory_ownerAccount :: Lens' VirtualInterfaceTestHistory (Maybe Text)

-- | The time that the virtual interface failover test ran in minutes.
virtualInterfaceTestHistory_testDurationInMinutes :: Lens' VirtualInterfaceTestHistory (Maybe Int)


module Network.AWS.DirectConnect.Waiters


-- | Derived from API version <tt>2012-10-25</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   Direct Connect links your internal network to an Direct Connect
--   location over a standard Ethernet fiber-optic cable. One end of the
--   cable is connected to your router, the other to an Direct Connect
--   router. With this connection in place, you can create virtual
--   interfaces directly to the Cloud (for example, to Amazon EC2 and
--   Amazon S3) and to Amazon VPC, bypassing Internet service providers in
--   your network path. A connection provides access to all Regions except
--   the China (Beijing) and (China) Ningxia Regions. Amazon Web Services
--   resources in the China Regions can only be accessed through locations
--   associated with those Regions.
module Network.AWS.DirectConnect

-- | API version <tt>2012-10-25</tt> of the Amazon Direct Connect SDK
--   configuration.
defaultService :: Service

-- | A server-side error occurred.
_DirectConnectServerException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have reached the limit on the number of tags that can be assigned.
_TooManyTagsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A tag key was specified more than once.
_DuplicateTagKeysException :: AsError a => Getting (First ServiceError) a ServiceError

-- | One or more parameters are not valid.
_DirectConnectClientException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newUpdateConnection</a> smart constructor.
data UpdateConnection
UpdateConnection' :: Maybe Text -> Maybe Text -> Text -> UpdateConnection

-- | Create a value of <a>UpdateConnection</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connectionName:UpdateConnection'</a>,
--   <a>updateConnection_connectionName</a> - The name of the connection.
--   
--   <a>$sel:encryptionMode:UpdateConnection'</a>,
--   <a>updateConnection_encryptionMode</a> - The connection MAC Security
--   (MACsec) encryption mode.
--   
--   The valid values are <tt>no_encrypt</tt>, <tt>should_encrypt</tt>, and
--   <tt>must_encrypt</tt>.
--   
--   <a>$sel:connectionId:UpdateConnection'</a>,
--   <a>updateConnection_connectionId</a> - The ID of the dedicated
--   connection.
--   
--   You can use DescribeConnections to retrieve the connection ID.
newUpdateConnection :: Text -> UpdateConnection

-- | Information about an Direct Connect connection.
--   
--   <i>See:</i> <a>newConnection</a> smart constructor.
data Connection
Connection' :: Maybe Text -> Maybe Text -> Maybe ConnectionState -> Maybe Text -> Maybe [MacSecKey] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe HasLogicalRedundancy -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (NonEmpty Tag) -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Bool -> Connection

-- | Create a value of <a>Connection</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bandwidth:Connection'</a>, <a>connection_bandwidth</a> - The
--   bandwidth of the connection.
--   
--   <a>$sel:awsDeviceV2:Connection'</a>, <a>connection_awsDeviceV2</a> -
--   The Direct Connect endpoint that terminates the physical connection.
--   
--   <a>$sel:connectionState:Connection'</a>,
--   <a>connection_connectionState</a> - The state of the connection. The
--   following are the possible values:
--   
--   <ul>
--   <li><tt>ordering</tt>: The initial state of a hosted connection
--   provisioned on an interconnect. The connection stays in the ordering
--   state until the owner of the hosted connection confirms or declines
--   the connection order.</li>
--   <li><tt>requested</tt>: The initial state of a standard connection.
--   The connection stays in the requested state until the Letter of
--   Authorization (LOA) is sent to the customer.</li>
--   <li><tt>pending</tt>: The connection has been approved and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is up and the connection is
--   ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The connection is being deleted.</li>
--   <li><tt>deleted</tt>: The connection has been deleted.</li>
--   <li><tt>rejected</tt>: A hosted connection in the <tt>ordering</tt>
--   state enters the <tt>rejected</tt> state if it is deleted by the
--   customer.</li>
--   <li><tt>unknown</tt>: The state of the connection is not
--   available.</li>
--   </ul>
--   
--   <a>$sel:connectionName:Connection'</a>,
--   <a>connection_connectionName</a> - The name of the connection.
--   
--   <a>$sel:macSecKeys:Connection'</a>, <a>connection_macSecKeys</a> - The
--   MAC Security (MACsec) security keys associated with the connection.
--   
--   <a>$sel:providerName:Connection'</a>, <a>connection_providerName</a> -
--   The name of the service provider associated with the connection.
--   
--   <a>$sel:connectionId:Connection'</a>, <a>connection_connectionId</a> -
--   The ID of the connection.
--   
--   <a>$sel:awsLogicalDeviceId:Connection'</a>,
--   <a>connection_awsLogicalDeviceId</a> - The Direct Connect endpoint
--   that terminates the logical connection. This device might be different
--   than the device that terminates the physical connection.
--   
--   <a>$sel:hasLogicalRedundancy:Connection'</a>,
--   <a>connection_hasLogicalRedundancy</a> - Indicates whether the
--   connection supports a secondary BGP peer in the same address family
--   (IPv4/IPv6).
--   
--   <a>$sel:awsDevice:Connection'</a>, <a>connection_awsDevice</a> - The
--   Direct Connect endpoint on which the physical connection terminates.
--   
--   <a>$sel:jumboFrameCapable:Connection'</a>,
--   <a>connection_jumboFrameCapable</a> - Indicates whether jumbo frames
--   (9001 MTU) are supported.
--   
--   <a>$sel:portEncryptionStatus:Connection'</a>,
--   <a>connection_portEncryptionStatus</a> - The MAC Security (MACsec)
--   port link status of the connection.
--   
--   The valid values are <tt>Encryption Up</tt>, which means that there is
--   an active Connection Key Name, or <tt>Encryption Down</tt>.
--   
--   <a>$sel:lagId:Connection'</a>, <a>connection_lagId</a> - The ID of the
--   LAG.
--   
--   <a>$sel:encryptionMode:Connection'</a>,
--   <a>connection_encryptionMode</a> - The MAC Security (MACsec)
--   connection encryption mode.
--   
--   The valid values are <tt>no_encrypt</tt>, <tt>should_encrypt</tt>, and
--   <tt>must_encrypt</tt>.
--   
--   <a>$sel:partnerName:Connection'</a>, <a>connection_partnerName</a> -
--   The name of the Direct Connect service provider associated with the
--   connection.
--   
--   <a>$sel:tags:Connection'</a>, <a>connection_tags</a> - The tags
--   associated with the connection.
--   
--   <a>$sel:loaIssueTime:Connection'</a>, <a>connection_loaIssueTime</a> -
--   The time of the most recent call to DescribeLoa for this connection.
--   
--   <a>$sel:ownerAccount:Connection'</a>, <a>connection_ownerAccount</a> -
--   The ID of the account that owns the connection.
--   
--   <a>$sel:region:Connection'</a>, <a>connection_region</a> - The Region
--   where the connection is located.
--   
--   <a>$sel:vlan:Connection'</a>, <a>connection_vlan</a> - The ID of the
--   VLAN.
--   
--   <a>$sel:location:Connection'</a>, <a>connection_location</a> - The
--   location of the connection.
--   
--   <a>$sel:macSecCapable:Connection'</a>, <a>connection_macSecCapable</a>
--   - Indicates whether the connection supports MAC Security (MACsec).
newConnection :: Connection

-- | <i>See:</i> <a>newStartBgpFailoverTest</a> smart constructor.
data StartBgpFailoverTest
StartBgpFailoverTest' :: Maybe [Text] -> Maybe Int -> Text -> StartBgpFailoverTest

-- | Create a value of <a>StartBgpFailoverTest</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bgpPeers:StartBgpFailoverTest'</a>,
--   <a>startBgpFailoverTest_bgpPeers</a> - The BGP peers to place in the
--   DOWN state.
--   
--   <a>$sel:testDurationInMinutes:StartBgpFailoverTest'</a>,
--   <a>startBgpFailoverTest_testDurationInMinutes</a> - The time in
--   minutes that the virtual interface failover test will last.
--   
--   Maximum value: 180 minutes (3 hours).
--   
--   Default: 180 minutes (3 hours).
--   
--   <a>$sel:virtualInterfaceId:StartBgpFailoverTest'</a>,
--   <a>startBgpFailoverTest_virtualInterfaceId</a> - The ID of the virtual
--   interface you want to test.
newStartBgpFailoverTest :: Text -> StartBgpFailoverTest

-- | <i>See:</i> <a>newStartBgpFailoverTestResponse</a> smart constructor.
data StartBgpFailoverTestResponse
StartBgpFailoverTestResponse' :: Maybe VirtualInterfaceTestHistory -> Int -> StartBgpFailoverTestResponse

-- | Create a value of <a>StartBgpFailoverTestResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:virtualInterfaceTest:StartBgpFailoverTestResponse'</a>,
--   <a>startBgpFailoverTestResponse_virtualInterfaceTest</a> - Information
--   about the virtual interface failover test.
--   
--   <a>$sel:httpStatus:StartBgpFailoverTestResponse'</a>,
--   <a>startBgpFailoverTestResponse_httpStatus</a> - The response's http
--   status code.
newStartBgpFailoverTestResponse :: Int -> StartBgpFailoverTestResponse

-- | <i>See:</i> <a>newDeleteDirectConnectGatewayAssociationProposal</a>
--   smart constructor.
data DeleteDirectConnectGatewayAssociationProposal
DeleteDirectConnectGatewayAssociationProposal' :: Text -> DeleteDirectConnectGatewayAssociationProposal

-- | Create a value of <a>DeleteDirectConnectGatewayAssociationProposal</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:proposalId:DeleteDirectConnectGatewayAssociationProposal'</a>,
--   <a>deleteDirectConnectGatewayAssociationProposal_proposalId</a> - The
--   ID of the proposal.
newDeleteDirectConnectGatewayAssociationProposal :: Text -> DeleteDirectConnectGatewayAssociationProposal

-- | <i>See:</i>
--   <a>newDeleteDirectConnectGatewayAssociationProposalResponse</a> smart
--   constructor.
data DeleteDirectConnectGatewayAssociationProposalResponse
DeleteDirectConnectGatewayAssociationProposalResponse' :: Maybe DirectConnectGatewayAssociationProposal -> Int -> DeleteDirectConnectGatewayAssociationProposalResponse

-- | Create a value of
--   <a>DeleteDirectConnectGatewayAssociationProposalResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:directConnectGatewayAssociationProposal:DeleteDirectConnectGatewayAssociationProposalResponse'</a>,
--   <a>deleteDirectConnectGatewayAssociationProposalResponse_directConnectGatewayAssociationProposal</a>
--   - The ID of the associated gateway.
--   
--   
--   <a>$sel:httpStatus:DeleteDirectConnectGatewayAssociationProposalResponse'</a>,
--   <a>deleteDirectConnectGatewayAssociationProposalResponse_httpStatus</a>
--   - The response's http status code.
newDeleteDirectConnectGatewayAssociationProposalResponse :: Int -> DeleteDirectConnectGatewayAssociationProposalResponse

-- | <i>See:</i> <a>newDescribeVirtualGateways</a> smart constructor.
data DescribeVirtualGateways
DescribeVirtualGateways' :: DescribeVirtualGateways

-- | Create a value of <a>DescribeVirtualGateways</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDescribeVirtualGateways :: DescribeVirtualGateways

-- | <i>See:</i> <a>newDescribeVirtualGatewaysResponse</a> smart
--   constructor.
data DescribeVirtualGatewaysResponse
DescribeVirtualGatewaysResponse' :: Maybe [VirtualGateway] -> Int -> DescribeVirtualGatewaysResponse

-- | Create a value of <a>DescribeVirtualGatewaysResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:virtualGateways:DescribeVirtualGatewaysResponse'</a>,
--   <a>describeVirtualGatewaysResponse_virtualGateways</a> - The virtual
--   private gateways.
--   
--   <a>$sel:httpStatus:DescribeVirtualGatewaysResponse'</a>,
--   <a>describeVirtualGatewaysResponse_httpStatus</a> - The response's
--   http status code.
newDescribeVirtualGatewaysResponse :: Int -> DescribeVirtualGatewaysResponse

-- | <i>See:</i> <a>newStopBgpFailoverTest</a> smart constructor.
data StopBgpFailoverTest
StopBgpFailoverTest' :: Text -> StopBgpFailoverTest

-- | Create a value of <a>StopBgpFailoverTest</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:virtualInterfaceId:StopBgpFailoverTest'</a>,
--   <a>stopBgpFailoverTest_virtualInterfaceId</a> - The ID of the virtual
--   interface you no longer want to test.
newStopBgpFailoverTest :: Text -> StopBgpFailoverTest

-- | <i>See:</i> <a>newStopBgpFailoverTestResponse</a> smart constructor.
data StopBgpFailoverTestResponse
StopBgpFailoverTestResponse' :: Maybe VirtualInterfaceTestHistory -> Int -> StopBgpFailoverTestResponse

-- | Create a value of <a>StopBgpFailoverTestResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:virtualInterfaceTest:StopBgpFailoverTestResponse'</a>,
--   <a>stopBgpFailoverTestResponse_virtualInterfaceTest</a> - Information
--   about the virtual interface failover test.
--   
--   <a>$sel:httpStatus:StopBgpFailoverTestResponse'</a>,
--   <a>stopBgpFailoverTestResponse_httpStatus</a> - The response's http
--   status code.
newStopBgpFailoverTestResponse :: Int -> StopBgpFailoverTestResponse

-- | <i>See:</i> <a>newDeleteConnection</a> smart constructor.
data DeleteConnection
DeleteConnection' :: Text -> DeleteConnection

-- | Create a value of <a>DeleteConnection</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connectionId:DeleteConnection'</a>,
--   <a>deleteConnection_connectionId</a> - The ID of the connection.
newDeleteConnection :: Text -> DeleteConnection

-- | Information about an Direct Connect connection.
--   
--   <i>See:</i> <a>newConnection</a> smart constructor.
data Connection
Connection' :: Maybe Text -> Maybe Text -> Maybe ConnectionState -> Maybe Text -> Maybe [MacSecKey] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe HasLogicalRedundancy -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (NonEmpty Tag) -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Bool -> Connection

-- | Create a value of <a>Connection</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bandwidth:Connection'</a>, <a>connection_bandwidth</a> - The
--   bandwidth of the connection.
--   
--   <a>$sel:awsDeviceV2:Connection'</a>, <a>connection_awsDeviceV2</a> -
--   The Direct Connect endpoint that terminates the physical connection.
--   
--   <a>$sel:connectionState:Connection'</a>,
--   <a>connection_connectionState</a> - The state of the connection. The
--   following are the possible values:
--   
--   <ul>
--   <li><tt>ordering</tt>: The initial state of a hosted connection
--   provisioned on an interconnect. The connection stays in the ordering
--   state until the owner of the hosted connection confirms or declines
--   the connection order.</li>
--   <li><tt>requested</tt>: The initial state of a standard connection.
--   The connection stays in the requested state until the Letter of
--   Authorization (LOA) is sent to the customer.</li>
--   <li><tt>pending</tt>: The connection has been approved and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is up and the connection is
--   ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The connection is being deleted.</li>
--   <li><tt>deleted</tt>: The connection has been deleted.</li>
--   <li><tt>rejected</tt>: A hosted connection in the <tt>ordering</tt>
--   state enters the <tt>rejected</tt> state if it is deleted by the
--   customer.</li>
--   <li><tt>unknown</tt>: The state of the connection is not
--   available.</li>
--   </ul>
--   
--   <a>$sel:connectionName:Connection'</a>,
--   <a>connection_connectionName</a> - The name of the connection.
--   
--   <a>$sel:macSecKeys:Connection'</a>, <a>connection_macSecKeys</a> - The
--   MAC Security (MACsec) security keys associated with the connection.
--   
--   <a>$sel:providerName:Connection'</a>, <a>connection_providerName</a> -
--   The name of the service provider associated with the connection.
--   
--   <a>$sel:connectionId:Connection'</a>, <a>connection_connectionId</a> -
--   The ID of the connection.
--   
--   <a>$sel:awsLogicalDeviceId:Connection'</a>,
--   <a>connection_awsLogicalDeviceId</a> - The Direct Connect endpoint
--   that terminates the logical connection. This device might be different
--   than the device that terminates the physical connection.
--   
--   <a>$sel:hasLogicalRedundancy:Connection'</a>,
--   <a>connection_hasLogicalRedundancy</a> - Indicates whether the
--   connection supports a secondary BGP peer in the same address family
--   (IPv4/IPv6).
--   
--   <a>$sel:awsDevice:Connection'</a>, <a>connection_awsDevice</a> - The
--   Direct Connect endpoint on which the physical connection terminates.
--   
--   <a>$sel:jumboFrameCapable:Connection'</a>,
--   <a>connection_jumboFrameCapable</a> - Indicates whether jumbo frames
--   (9001 MTU) are supported.
--   
--   <a>$sel:portEncryptionStatus:Connection'</a>,
--   <a>connection_portEncryptionStatus</a> - The MAC Security (MACsec)
--   port link status of the connection.
--   
--   The valid values are <tt>Encryption Up</tt>, which means that there is
--   an active Connection Key Name, or <tt>Encryption Down</tt>.
--   
--   <a>$sel:lagId:Connection'</a>, <a>connection_lagId</a> - The ID of the
--   LAG.
--   
--   <a>$sel:encryptionMode:Connection'</a>,
--   <a>connection_encryptionMode</a> - The MAC Security (MACsec)
--   connection encryption mode.
--   
--   The valid values are <tt>no_encrypt</tt>, <tt>should_encrypt</tt>, and
--   <tt>must_encrypt</tt>.
--   
--   <a>$sel:partnerName:Connection'</a>, <a>connection_partnerName</a> -
--   The name of the Direct Connect service provider associated with the
--   connection.
--   
--   <a>$sel:tags:Connection'</a>, <a>connection_tags</a> - The tags
--   associated with the connection.
--   
--   <a>$sel:loaIssueTime:Connection'</a>, <a>connection_loaIssueTime</a> -
--   The time of the most recent call to DescribeLoa for this connection.
--   
--   <a>$sel:ownerAccount:Connection'</a>, <a>connection_ownerAccount</a> -
--   The ID of the account that owns the connection.
--   
--   <a>$sel:region:Connection'</a>, <a>connection_region</a> - The Region
--   where the connection is located.
--   
--   <a>$sel:vlan:Connection'</a>, <a>connection_vlan</a> - The ID of the
--   VLAN.
--   
--   <a>$sel:location:Connection'</a>, <a>connection_location</a> - The
--   location of the connection.
--   
--   <a>$sel:macSecCapable:Connection'</a>, <a>connection_macSecCapable</a>
--   - Indicates whether the connection supports MAC Security (MACsec).
newConnection :: Connection

-- | <i>See:</i> <a>newConfirmPublicVirtualInterface</a> smart constructor.
data ConfirmPublicVirtualInterface
ConfirmPublicVirtualInterface' :: Text -> ConfirmPublicVirtualInterface

-- | Create a value of <a>ConfirmPublicVirtualInterface</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:virtualInterfaceId:ConfirmPublicVirtualInterface'</a>,
--   <a>confirmPublicVirtualInterface_virtualInterfaceId</a> - The ID of
--   the virtual interface.
newConfirmPublicVirtualInterface :: Text -> ConfirmPublicVirtualInterface

-- | <i>See:</i> <a>newConfirmPublicVirtualInterfaceResponse</a> smart
--   constructor.
data ConfirmPublicVirtualInterfaceResponse
ConfirmPublicVirtualInterfaceResponse' :: Maybe VirtualInterfaceState -> Int -> ConfirmPublicVirtualInterfaceResponse

-- | Create a value of <a>ConfirmPublicVirtualInterfaceResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:virtualInterfaceState:ConfirmPublicVirtualInterfaceResponse'</a>,
--   <a>confirmPublicVirtualInterfaceResponse_virtualInterfaceState</a> -
--   The state of the virtual interface. The following are the possible
--   values:
--   
--   <ul>
--   <li><tt>confirming</tt>: The creation of the virtual interface is
--   pending confirmation from the virtual interface owner. If the owner of
--   the virtual interface is different from the owner of the connection on
--   which it is provisioned, then the virtual interface will remain in
--   this state until it is confirmed by the virtual interface owner.</li>
--   <li><tt>verifying</tt>: This state only applies to public virtual
--   interfaces. Each public virtual interface needs validation before the
--   virtual interface can be created.</li>
--   <li><tt>pending</tt>: A virtual interface is in this state from the
--   time that it is created until the virtual interface is ready to
--   forward traffic.</li>
--   <li><tt>available</tt>: A virtual interface that is able to forward
--   traffic.</li>
--   <li><tt>down</tt>: A virtual interface that is BGP down.</li>
--   <li><tt>deleting</tt>: A virtual interface is in this state
--   immediately after calling DeleteVirtualInterface until it can no
--   longer forward traffic.</li>
--   <li><tt>deleted</tt>: A virtual interface that cannot forward
--   traffic.</li>
--   <li><tt>rejected</tt>: The virtual interface owner has declined
--   creation of the virtual interface. If a virtual interface in the
--   <tt>Confirming</tt> state is deleted by the virtual interface owner,
--   the virtual interface enters the <tt>Rejected</tt> state.</li>
--   <li><tt>unknown</tt>: The state of the virtual interface is not
--   available.</li>
--   </ul>
--   
--   <a>$sel:httpStatus:ConfirmPublicVirtualInterfaceResponse'</a>,
--   <a>confirmPublicVirtualInterfaceResponse_httpStatus</a> - The
--   response's http status code.
newConfirmPublicVirtualInterfaceResponse :: Int -> ConfirmPublicVirtualInterfaceResponse

-- | <i>See:</i> <a>newAllocatePrivateVirtualInterface</a> smart
--   constructor.
data AllocatePrivateVirtualInterface
AllocatePrivateVirtualInterface' :: Text -> Text -> NewPrivateVirtualInterfaceAllocation -> AllocatePrivateVirtualInterface

-- | Create a value of <a>AllocatePrivateVirtualInterface</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connectionId:AllocatePrivateVirtualInterface'</a>,
--   <a>allocatePrivateVirtualInterface_connectionId</a> - The ID of the
--   connection on which the private virtual interface is provisioned.
--   
--   <a>$sel:ownerAccount:AllocatePrivateVirtualInterface'</a>,
--   <a>allocatePrivateVirtualInterface_ownerAccount</a> - The ID of the
--   account that owns the virtual private interface.
--   
--   
--   <a>$sel:newPrivateVirtualInterfaceAllocation':AllocatePrivateVirtualInterface'</a>,
--   <a>allocatePrivateVirtualInterface_newPrivateVirtualInterfaceAllocation</a>
--   - Information about the private virtual interface.
newAllocatePrivateVirtualInterface :: Text -> Text -> NewPrivateVirtualInterfaceAllocation -> AllocatePrivateVirtualInterface

-- | Information about a virtual interface.
--   
--   <i>See:</i> <a>newVirtualInterface</a> smart constructor.
data VirtualInterface
VirtualInterface' :: Maybe Text -> Maybe [BGPPeer] -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe [RouteFilterPrefix] -> Maybe Int -> Maybe Text -> Maybe Integer -> Maybe Text -> Maybe (NonEmpty Tag) -> Maybe Text -> Maybe Text -> Maybe VirtualInterfaceState -> Maybe Text -> Maybe AddressFamily -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> VirtualInterface

-- | Create a value of <a>VirtualInterface</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authKey:VirtualInterface'</a>, <a>virtualInterface_authKey</a>
--   - The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
--   
--   <a>$sel:bgpPeers:VirtualInterface'</a>,
--   <a>virtualInterface_bgpPeers</a> - The BGP peers configured on this
--   virtual interface.
--   
--   <a>$sel:virtualGatewayId:VirtualInterface'</a>,
--   <a>virtualInterface_virtualGatewayId</a> - The ID of the virtual
--   private gateway. Applies only to private virtual interfaces.
--   
--   <a>$sel:asn:VirtualInterface'</a>, <a>virtualInterface_asn</a> - The
--   autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
--   
--   The valid values are 1-2147483647.
--   
--   <a>$sel:awsDeviceV2:VirtualInterface'</a>,
--   <a>virtualInterface_awsDeviceV2</a> - The Direct Connect endpoint that
--   terminates the physical connection.
--   
--   <a>$sel:connectionId:VirtualInterface'</a>,
--   <a>virtualInterface_connectionId</a> - The ID of the connection.
--   
--   <a>$sel:awsLogicalDeviceId:VirtualInterface'</a>,
--   <a>virtualInterface_awsLogicalDeviceId</a> - The Direct Connect
--   endpoint that terminates the logical connection. This device might be
--   different than the device that terminates the physical connection.
--   
--   <a>$sel:customerRouterConfig:VirtualInterface'</a>,
--   <a>virtualInterface_customerRouterConfig</a> - The customer router
--   configuration.
--   
--   <a>$sel:jumboFrameCapable:VirtualInterface'</a>,
--   <a>virtualInterface_jumboFrameCapable</a> - Indicates whether jumbo
--   frames (9001 MTU) are supported.
--   
--   <a>$sel:routeFilterPrefixes:VirtualInterface'</a>,
--   <a>virtualInterface_routeFilterPrefixes</a> - The routes to be
--   advertised to the Amazon Web Services network in this Region. Applies
--   to public virtual interfaces.
--   
--   <a>$sel:mtu:VirtualInterface'</a>, <a>virtualInterface_mtu</a> - The
--   maximum transmission unit (MTU), in bytes. The supported values are
--   1500 and 9001. The default value is 1500.
--   
--   <a>$sel:virtualInterfaceType:VirtualInterface'</a>,
--   <a>virtualInterface_virtualInterfaceType</a> - The type of virtual
--   interface. The possible values are <tt>private</tt> and
--   <tt>public</tt>.
--   
--   <a>$sel:amazonSideAsn:VirtualInterface'</a>,
--   <a>virtualInterface_amazonSideAsn</a> - The autonomous system number
--   (ASN) for the Amazon side of the connection.
--   
--   <a>$sel:virtualInterfaceId:VirtualInterface'</a>,
--   <a>virtualInterface_virtualInterfaceId</a> - The ID of the virtual
--   interface.
--   
--   <a>$sel:tags:VirtualInterface'</a>, <a>virtualInterface_tags</a> - The
--   tags associated with the virtual interface.
--   
--   <a>$sel:directConnectGatewayId:VirtualInterface'</a>,
--   <a>virtualInterface_directConnectGatewayId</a> - The ID of the Direct
--   Connect gateway.
--   
--   <a>$sel:virtualInterfaceName:VirtualInterface'</a>,
--   <a>virtualInterface_virtualInterfaceName</a> - The name of the virtual
--   interface assigned by the customer network. The name has a maximum of
--   100 characters. The following are valid characters: a-z, 0-9 and a
--   hyphen (-).
--   
--   <a>$sel:virtualInterfaceState:VirtualInterface'</a>,
--   <a>virtualInterface_virtualInterfaceState</a> - The state of the
--   virtual interface. The following are the possible values:
--   
--   <ul>
--   <li><tt>confirming</tt>: The creation of the virtual interface is
--   pending confirmation from the virtual interface owner. If the owner of
--   the virtual interface is different from the owner of the connection on
--   which it is provisioned, then the virtual interface will remain in
--   this state until it is confirmed by the virtual interface owner.</li>
--   <li><tt>verifying</tt>: This state only applies to public virtual
--   interfaces. Each public virtual interface needs validation before the
--   virtual interface can be created.</li>
--   <li><tt>pending</tt>: A virtual interface is in this state from the
--   time that it is created until the virtual interface is ready to
--   forward traffic.</li>
--   <li><tt>available</tt>: A virtual interface that is able to forward
--   traffic.</li>
--   <li><tt>down</tt>: A virtual interface that is BGP down.</li>
--   <li><tt>deleting</tt>: A virtual interface is in this state
--   immediately after calling DeleteVirtualInterface until it can no
--   longer forward traffic.</li>
--   <li><tt>deleted</tt>: A virtual interface that cannot forward
--   traffic.</li>
--   <li><tt>rejected</tt>: The virtual interface owner has declined
--   creation of the virtual interface. If a virtual interface in the
--   <tt>Confirming</tt> state is deleted by the virtual interface owner,
--   the virtual interface enters the <tt>Rejected</tt> state.</li>
--   <li><tt>unknown</tt>: The state of the virtual interface is not
--   available.</li>
--   </ul>
--   
--   <a>$sel:amazonAddress:VirtualInterface'</a>,
--   <a>virtualInterface_amazonAddress</a> - The IP address assigned to the
--   Amazon interface.
--   
--   <a>$sel:addressFamily:VirtualInterface'</a>,
--   <a>virtualInterface_addressFamily</a> - The address family for the BGP
--   peer.
--   
--   <a>$sel:ownerAccount:VirtualInterface'</a>,
--   <a>virtualInterface_ownerAccount</a> - The ID of the account that owns
--   the virtual interface.
--   
--   <a>$sel:region:VirtualInterface'</a>, <a>virtualInterface_region</a> -
--   The Region where the virtual interface is located.
--   
--   <a>$sel:vlan:VirtualInterface'</a>, <a>virtualInterface_vlan</a> - The
--   ID of the VLAN.
--   
--   <a>$sel:location:VirtualInterface'</a>,
--   <a>virtualInterface_location</a> - The location of the connection.
--   
--   <a>$sel:customerAddress:VirtualInterface'</a>,
--   <a>virtualInterface_customerAddress</a> - The IP address assigned to
--   the customer interface.
newVirtualInterface :: VirtualInterface

-- | <i>See:</i> <a>newDescribeDirectConnectGatewayAssociations</a> smart
--   constructor.
data DescribeDirectConnectGatewayAssociations
DescribeDirectConnectGatewayAssociations' :: Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> DescribeDirectConnectGatewayAssociations

-- | Create a value of <a>DescribeDirectConnectGatewayAssociations</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeDirectConnectGatewayAssociations'</a>,
--   <a>describeDirectConnectGatewayAssociations_nextToken</a> - The token
--   provided in the previous call to retrieve the next page.
--   
--   
--   <a>$sel:virtualGatewayId:DescribeDirectConnectGatewayAssociations'</a>,
--   <a>describeDirectConnectGatewayAssociations_virtualGatewayId</a> - The
--   ID of the virtual private gateway or transit gateway.
--   
--   <a>$sel:maxResults:DescribeDirectConnectGatewayAssociations'</a>,
--   <a>describeDirectConnectGatewayAssociations_maxResults</a> - The
--   maximum number of results to return with a single call. To retrieve
--   the remaining results, make another call with the returned
--   <tt>nextToken</tt> value.
--   
--   If <tt>MaxResults</tt> is given a value larger than 100, only 100
--   results are returned.
--   
--   
--   <a>$sel:associatedGatewayId:DescribeDirectConnectGatewayAssociations'</a>,
--   <a>describeDirectConnectGatewayAssociations_associatedGatewayId</a> -
--   The ID of the associated gateway.
--   
--   <a>$sel:associationId:DescribeDirectConnectGatewayAssociations'</a>,
--   <a>describeDirectConnectGatewayAssociations_associationId</a> - The ID
--   of the Direct Connect gateway association.
--   
--   
--   <a>$sel:directConnectGatewayId:DescribeDirectConnectGatewayAssociations'</a>,
--   <a>describeDirectConnectGatewayAssociations_directConnectGatewayId</a>
--   - The ID of the Direct Connect gateway.
newDescribeDirectConnectGatewayAssociations :: DescribeDirectConnectGatewayAssociations

-- | <i>See:</i> <a>newDescribeDirectConnectGatewayAssociationsResponse</a>
--   smart constructor.
data DescribeDirectConnectGatewayAssociationsResponse
DescribeDirectConnectGatewayAssociationsResponse' :: Maybe Text -> Maybe [DirectConnectGatewayAssociation] -> Int -> DescribeDirectConnectGatewayAssociationsResponse

-- | Create a value of
--   <a>DescribeDirectConnectGatewayAssociationsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeDirectConnectGatewayAssociations'</a>,
--   <a>describeDirectConnectGatewayAssociationsResponse_nextToken</a> -
--   The token to retrieve the next page.
--   
--   
--   <a>$sel:directConnectGatewayAssociations:DescribeDirectConnectGatewayAssociationsResponse'</a>,
--   <a>describeDirectConnectGatewayAssociationsResponse_directConnectGatewayAssociations</a>
--   - Information about the associations.
--   
--   
--   <a>$sel:httpStatus:DescribeDirectConnectGatewayAssociationsResponse'</a>,
--   <a>describeDirectConnectGatewayAssociationsResponse_httpStatus</a> -
--   The response's http status code.
newDescribeDirectConnectGatewayAssociationsResponse :: Int -> DescribeDirectConnectGatewayAssociationsResponse

-- | <i>See:</i> <a>newConfirmConnection</a> smart constructor.
data ConfirmConnection
ConfirmConnection' :: Text -> ConfirmConnection

-- | Create a value of <a>ConfirmConnection</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connectionId:ConfirmConnection'</a>,
--   <a>confirmConnection_connectionId</a> - The ID of the hosted
--   connection.
newConfirmConnection :: Text -> ConfirmConnection

-- | <i>See:</i> <a>newConfirmConnectionResponse</a> smart constructor.
data ConfirmConnectionResponse
ConfirmConnectionResponse' :: Maybe ConnectionState -> Int -> ConfirmConnectionResponse

-- | Create a value of <a>ConfirmConnectionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connectionState:ConfirmConnectionResponse'</a>,
--   <a>confirmConnectionResponse_connectionState</a> - The state of the
--   connection. The following are the possible values:
--   
--   <ul>
--   <li><tt>ordering</tt>: The initial state of a hosted connection
--   provisioned on an interconnect. The connection stays in the ordering
--   state until the owner of the hosted connection confirms or declines
--   the connection order.</li>
--   <li><tt>requested</tt>: The initial state of a standard connection.
--   The connection stays in the requested state until the Letter of
--   Authorization (LOA) is sent to the customer.</li>
--   <li><tt>pending</tt>: The connection has been approved and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is up and the connection is
--   ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The connection is being deleted.</li>
--   <li><tt>deleted</tt>: The connection has been deleted.</li>
--   <li><tt>rejected</tt>: A hosted connection in the <tt>ordering</tt>
--   state enters the <tt>rejected</tt> state if it is deleted by the
--   customer.</li>
--   <li><tt>unknown</tt>: The state of the connection is not
--   available.</li>
--   </ul>
--   
--   <a>$sel:httpStatus:ConfirmConnectionResponse'</a>,
--   <a>confirmConnectionResponse_httpStatus</a> - The response's http
--   status code.
newConfirmConnectionResponse :: Int -> ConfirmConnectionResponse

-- | <i>See:</i> <a>newDescribeTags</a> smart constructor.
data DescribeTags
DescribeTags' :: [Text] -> DescribeTags

-- | Create a value of <a>DescribeTags</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArns:DescribeTags'</a>,
--   <a>describeTags_resourceArns</a> - The Amazon Resource Names (ARNs) of
--   the resources.
newDescribeTags :: DescribeTags

-- | <i>See:</i> <a>newDescribeTagsResponse</a> smart constructor.
data DescribeTagsResponse
DescribeTagsResponse' :: Maybe [ResourceTag] -> Int -> DescribeTagsResponse

-- | Create a value of <a>DescribeTagsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceTags:DescribeTagsResponse'</a>,
--   <a>describeTagsResponse_resourceTags</a> - Information about the tags.
--   
--   <a>$sel:httpStatus:DescribeTagsResponse'</a>,
--   <a>describeTagsResponse_httpStatus</a> - The response's http status
--   code.
newDescribeTagsResponse :: Int -> DescribeTagsResponse

-- | <i>See:</i> <a>newDescribeDirectConnectGatewayAttachments</a> smart
--   constructor.
data DescribeDirectConnectGatewayAttachments
DescribeDirectConnectGatewayAttachments' :: Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> DescribeDirectConnectGatewayAttachments

-- | Create a value of <a>DescribeDirectConnectGatewayAttachments</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeDirectConnectGatewayAttachments'</a>,
--   <a>describeDirectConnectGatewayAttachments_nextToken</a> - The token
--   provided in the previous call to retrieve the next page.
--   
--   <a>$sel:maxResults:DescribeDirectConnectGatewayAttachments'</a>,
--   <a>describeDirectConnectGatewayAttachments_maxResults</a> - The
--   maximum number of results to return with a single call. To retrieve
--   the remaining results, make another call with the returned
--   <tt>nextToken</tt> value.
--   
--   If <tt>MaxResults</tt> is given a value larger than 100, only 100
--   results are returned.
--   
--   
--   <a>$sel:virtualInterfaceId:DescribeDirectConnectGatewayAttachments'</a>,
--   <a>describeDirectConnectGatewayAttachments_virtualInterfaceId</a> -
--   The ID of the virtual interface.
--   
--   
--   <a>$sel:directConnectGatewayId:DescribeDirectConnectGatewayAttachments'</a>,
--   <a>describeDirectConnectGatewayAttachments_directConnectGatewayId</a>
--   - The ID of the Direct Connect gateway.
newDescribeDirectConnectGatewayAttachments :: DescribeDirectConnectGatewayAttachments

-- | <i>See:</i> <a>newDescribeDirectConnectGatewayAttachmentsResponse</a>
--   smart constructor.
data DescribeDirectConnectGatewayAttachmentsResponse
DescribeDirectConnectGatewayAttachmentsResponse' :: Maybe Text -> Maybe [DirectConnectGatewayAttachment] -> Int -> DescribeDirectConnectGatewayAttachmentsResponse

-- | Create a value of
--   <a>DescribeDirectConnectGatewayAttachmentsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeDirectConnectGatewayAttachments'</a>,
--   <a>describeDirectConnectGatewayAttachmentsResponse_nextToken</a> - The
--   token to retrieve the next page.
--   
--   
--   <a>$sel:directConnectGatewayAttachments:DescribeDirectConnectGatewayAttachmentsResponse'</a>,
--   <a>describeDirectConnectGatewayAttachmentsResponse_directConnectGatewayAttachments</a>
--   - The attachments.
--   
--   
--   <a>$sel:httpStatus:DescribeDirectConnectGatewayAttachmentsResponse'</a>,
--   <a>describeDirectConnectGatewayAttachmentsResponse_httpStatus</a> -
--   The response's http status code.
newDescribeDirectConnectGatewayAttachmentsResponse :: Int -> DescribeDirectConnectGatewayAttachmentsResponse

-- | <i>See:</i> <a>newCreatePublicVirtualInterface</a> smart constructor.
data CreatePublicVirtualInterface
CreatePublicVirtualInterface' :: Text -> NewPublicVirtualInterface -> CreatePublicVirtualInterface

-- | Create a value of <a>CreatePublicVirtualInterface</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connectionId:CreatePublicVirtualInterface'</a>,
--   <a>createPublicVirtualInterface_connectionId</a> - The ID of the
--   connection.
--   
--   <a>$sel:newPublicVirtualInterface':CreatePublicVirtualInterface'</a>,
--   <a>createPublicVirtualInterface_newPublicVirtualInterface</a> -
--   Information about the public virtual interface.
newCreatePublicVirtualInterface :: Text -> NewPublicVirtualInterface -> CreatePublicVirtualInterface

-- | Information about a virtual interface.
--   
--   <i>See:</i> <a>newVirtualInterface</a> smart constructor.
data VirtualInterface
VirtualInterface' :: Maybe Text -> Maybe [BGPPeer] -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe [RouteFilterPrefix] -> Maybe Int -> Maybe Text -> Maybe Integer -> Maybe Text -> Maybe (NonEmpty Tag) -> Maybe Text -> Maybe Text -> Maybe VirtualInterfaceState -> Maybe Text -> Maybe AddressFamily -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> VirtualInterface

-- | Create a value of <a>VirtualInterface</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authKey:VirtualInterface'</a>, <a>virtualInterface_authKey</a>
--   - The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
--   
--   <a>$sel:bgpPeers:VirtualInterface'</a>,
--   <a>virtualInterface_bgpPeers</a> - The BGP peers configured on this
--   virtual interface.
--   
--   <a>$sel:virtualGatewayId:VirtualInterface'</a>,
--   <a>virtualInterface_virtualGatewayId</a> - The ID of the virtual
--   private gateway. Applies only to private virtual interfaces.
--   
--   <a>$sel:asn:VirtualInterface'</a>, <a>virtualInterface_asn</a> - The
--   autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
--   
--   The valid values are 1-2147483647.
--   
--   <a>$sel:awsDeviceV2:VirtualInterface'</a>,
--   <a>virtualInterface_awsDeviceV2</a> - The Direct Connect endpoint that
--   terminates the physical connection.
--   
--   <a>$sel:connectionId:VirtualInterface'</a>,
--   <a>virtualInterface_connectionId</a> - The ID of the connection.
--   
--   <a>$sel:awsLogicalDeviceId:VirtualInterface'</a>,
--   <a>virtualInterface_awsLogicalDeviceId</a> - The Direct Connect
--   endpoint that terminates the logical connection. This device might be
--   different than the device that terminates the physical connection.
--   
--   <a>$sel:customerRouterConfig:VirtualInterface'</a>,
--   <a>virtualInterface_customerRouterConfig</a> - The customer router
--   configuration.
--   
--   <a>$sel:jumboFrameCapable:VirtualInterface'</a>,
--   <a>virtualInterface_jumboFrameCapable</a> - Indicates whether jumbo
--   frames (9001 MTU) are supported.
--   
--   <a>$sel:routeFilterPrefixes:VirtualInterface'</a>,
--   <a>virtualInterface_routeFilterPrefixes</a> - The routes to be
--   advertised to the Amazon Web Services network in this Region. Applies
--   to public virtual interfaces.
--   
--   <a>$sel:mtu:VirtualInterface'</a>, <a>virtualInterface_mtu</a> - The
--   maximum transmission unit (MTU), in bytes. The supported values are
--   1500 and 9001. The default value is 1500.
--   
--   <a>$sel:virtualInterfaceType:VirtualInterface'</a>,
--   <a>virtualInterface_virtualInterfaceType</a> - The type of virtual
--   interface. The possible values are <tt>private</tt> and
--   <tt>public</tt>.
--   
--   <a>$sel:amazonSideAsn:VirtualInterface'</a>,
--   <a>virtualInterface_amazonSideAsn</a> - The autonomous system number
--   (ASN) for the Amazon side of the connection.
--   
--   <a>$sel:virtualInterfaceId:VirtualInterface'</a>,
--   <a>virtualInterface_virtualInterfaceId</a> - The ID of the virtual
--   interface.
--   
--   <a>$sel:tags:VirtualInterface'</a>, <a>virtualInterface_tags</a> - The
--   tags associated with the virtual interface.
--   
--   <a>$sel:directConnectGatewayId:VirtualInterface'</a>,
--   <a>virtualInterface_directConnectGatewayId</a> - The ID of the Direct
--   Connect gateway.
--   
--   <a>$sel:virtualInterfaceName:VirtualInterface'</a>,
--   <a>virtualInterface_virtualInterfaceName</a> - The name of the virtual
--   interface assigned by the customer network. The name has a maximum of
--   100 characters. The following are valid characters: a-z, 0-9 and a
--   hyphen (-).
--   
--   <a>$sel:virtualInterfaceState:VirtualInterface'</a>,
--   <a>virtualInterface_virtualInterfaceState</a> - The state of the
--   virtual interface. The following are the possible values:
--   
--   <ul>
--   <li><tt>confirming</tt>: The creation of the virtual interface is
--   pending confirmation from the virtual interface owner. If the owner of
--   the virtual interface is different from the owner of the connection on
--   which it is provisioned, then the virtual interface will remain in
--   this state until it is confirmed by the virtual interface owner.</li>
--   <li><tt>verifying</tt>: This state only applies to public virtual
--   interfaces. Each public virtual interface needs validation before the
--   virtual interface can be created.</li>
--   <li><tt>pending</tt>: A virtual interface is in this state from the
--   time that it is created until the virtual interface is ready to
--   forward traffic.</li>
--   <li><tt>available</tt>: A virtual interface that is able to forward
--   traffic.</li>
--   <li><tt>down</tt>: A virtual interface that is BGP down.</li>
--   <li><tt>deleting</tt>: A virtual interface is in this state
--   immediately after calling DeleteVirtualInterface until it can no
--   longer forward traffic.</li>
--   <li><tt>deleted</tt>: A virtual interface that cannot forward
--   traffic.</li>
--   <li><tt>rejected</tt>: The virtual interface owner has declined
--   creation of the virtual interface. If a virtual interface in the
--   <tt>Confirming</tt> state is deleted by the virtual interface owner,
--   the virtual interface enters the <tt>Rejected</tt> state.</li>
--   <li><tt>unknown</tt>: The state of the virtual interface is not
--   available.</li>
--   </ul>
--   
--   <a>$sel:amazonAddress:VirtualInterface'</a>,
--   <a>virtualInterface_amazonAddress</a> - The IP address assigned to the
--   Amazon interface.
--   
--   <a>$sel:addressFamily:VirtualInterface'</a>,
--   <a>virtualInterface_addressFamily</a> - The address family for the BGP
--   peer.
--   
--   <a>$sel:ownerAccount:VirtualInterface'</a>,
--   <a>virtualInterface_ownerAccount</a> - The ID of the account that owns
--   the virtual interface.
--   
--   <a>$sel:region:VirtualInterface'</a>, <a>virtualInterface_region</a> -
--   The Region where the virtual interface is located.
--   
--   <a>$sel:vlan:VirtualInterface'</a>, <a>virtualInterface_vlan</a> - The
--   ID of the VLAN.
--   
--   <a>$sel:location:VirtualInterface'</a>,
--   <a>virtualInterface_location</a> - The location of the connection.
--   
--   <a>$sel:customerAddress:VirtualInterface'</a>,
--   <a>virtualInterface_customerAddress</a> - The IP address assigned to
--   the customer interface.
newVirtualInterface :: VirtualInterface

-- | <i>See:</i> <a>newAssociateMacSecKey</a> smart constructor.
data AssociateMacSecKey
AssociateMacSecKey' :: Maybe Text -> Maybe Text -> Maybe Text -> Text -> AssociateMacSecKey

-- | Create a value of <a>AssociateMacSecKey</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ckn:AssociateMacSecKey'</a>, <a>associateMacSecKey_ckn</a> -
--   The MAC Security (MACsec) CKN to associate with the dedicated
--   connection.
--   
--   You can create the CKN/CAK pair using an industry standard tool.
--   
--   The valid values are 64 hexadecimal characters (0-9, A-E).
--   
--   If you use this request parameter, you must use the <tt>cak</tt>
--   request parameter and not use the <tt>secretARN</tt> request
--   parameter.
--   
--   <a>$sel:secretARN:AssociateMacSecKey'</a>,
--   <a>associateMacSecKey_secretARN</a> - The Amazon Resource Name (ARN)
--   of the MAC Security (MACsec) secret key to associate with the
--   dedicated connection.
--   
--   You can use DescribeConnections or DescribeLags to retrieve the MAC
--   Security (MACsec) secret key.
--   
--   If you use this request parameter, you do not use the <tt>ckn</tt> and
--   <tt>cak</tt> request parameters.
--   
--   <a>$sel:cak:AssociateMacSecKey'</a>, <a>associateMacSecKey_cak</a> -
--   The MAC Security (MACsec) CAK to associate with the dedicated
--   connection.
--   
--   You can create the CKN/CAK pair using an industry standard tool.
--   
--   The valid values are 64 hexadecimal characters (0-9, A-E).
--   
--   If you use this request parameter, you must use the <tt>ckn</tt>
--   request parameter and not use the <tt>secretARN</tt> request
--   parameter.
--   
--   <a>$sel:connectionId:AssociateMacSecKey'</a>,
--   <a>associateMacSecKey_connectionId</a> - The ID of the dedicated
--   connection (dxcon-xxxx), or the ID of the LAG (dxlag-xxxx).
--   
--   You can use DescribeConnections or DescribeLags to retrieve connection
--   ID.
newAssociateMacSecKey :: Text -> AssociateMacSecKey

-- | <i>See:</i> <a>newAssociateMacSecKeyResponse</a> smart constructor.
data AssociateMacSecKeyResponse
AssociateMacSecKeyResponse' :: Maybe [MacSecKey] -> Maybe Text -> Int -> AssociateMacSecKeyResponse

-- | Create a value of <a>AssociateMacSecKeyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:macSecKeys:AssociateMacSecKeyResponse'</a>,
--   <a>associateMacSecKeyResponse_macSecKeys</a> - The MAC Security
--   (MACsec) security keys associated with the dedicated connection.
--   
--   <a>$sel:connectionId:AssociateMacSecKey'</a>,
--   <a>associateMacSecKeyResponse_connectionId</a> - The ID of the
--   dedicated connection (dxcon-xxxx), or the ID of the LAG (dxlag-xxxx).
--   
--   <a>$sel:httpStatus:AssociateMacSecKeyResponse'</a>,
--   <a>associateMacSecKeyResponse_httpStatus</a> - The response's http
--   status code.
newAssociateMacSecKeyResponse :: Int -> AssociateMacSecKeyResponse

-- | <i>See:</i> <a>newDescribeHostedConnections</a> smart constructor.
data DescribeHostedConnections
DescribeHostedConnections' :: Text -> DescribeHostedConnections

-- | Create a value of <a>DescribeHostedConnections</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connectionId:DescribeHostedConnections'</a>,
--   <a>describeHostedConnections_connectionId</a> - The ID of the
--   interconnect or LAG.
newDescribeHostedConnections :: Text -> DescribeHostedConnections

-- | <i>See:</i> <a>newConnections</a> smart constructor.
data Connections
Connections' :: Maybe [Connection] -> Connections

-- | Create a value of <a>Connections</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connections:Connections'</a>, <a>connections_connections</a> -
--   The connections.
newConnections :: Connections

-- | <i>See:</i> <a>newAcceptDirectConnectGatewayAssociationProposal</a>
--   smart constructor.
data AcceptDirectConnectGatewayAssociationProposal
AcceptDirectConnectGatewayAssociationProposal' :: Maybe [RouteFilterPrefix] -> Text -> Text -> Text -> AcceptDirectConnectGatewayAssociationProposal

-- | Create a value of <a>AcceptDirectConnectGatewayAssociationProposal</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:overrideAllowedPrefixesToDirectConnectGateway:AcceptDirectConnectGatewayAssociationProposal'</a>,
--   <a>acceptDirectConnectGatewayAssociationProposal_overrideAllowedPrefixesToDirectConnectGateway</a>
--   - Overrides the Amazon VPC prefixes advertised to the Direct Connect
--   gateway.
--   
--   For information about how to set the prefixes, see <a>Allowed
--   Prefixes</a> in the <i>Direct Connect User Guide</i>.
--   
--   
--   <a>$sel:directConnectGatewayId:AcceptDirectConnectGatewayAssociationProposal'</a>,
--   <a>acceptDirectConnectGatewayAssociationProposal_directConnectGatewayId</a>
--   - The ID of the Direct Connect gateway.
--   
--   <a>$sel:proposalId:AcceptDirectConnectGatewayAssociationProposal'</a>,
--   <a>acceptDirectConnectGatewayAssociationProposal_proposalId</a> - The
--   ID of the request proposal.
--   
--   
--   <a>$sel:associatedGatewayOwnerAccount:AcceptDirectConnectGatewayAssociationProposal'</a>,
--   <a>acceptDirectConnectGatewayAssociationProposal_associatedGatewayOwnerAccount</a>
--   - The ID of the account that owns the virtual private gateway or
--   transit gateway.
newAcceptDirectConnectGatewayAssociationProposal :: Text -> Text -> Text -> AcceptDirectConnectGatewayAssociationProposal

-- | <i>See:</i>
--   <a>newAcceptDirectConnectGatewayAssociationProposalResponse</a> smart
--   constructor.
data AcceptDirectConnectGatewayAssociationProposalResponse
AcceptDirectConnectGatewayAssociationProposalResponse' :: Maybe DirectConnectGatewayAssociation -> Int -> AcceptDirectConnectGatewayAssociationProposalResponse

-- | Create a value of
--   <a>AcceptDirectConnectGatewayAssociationProposalResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:directConnectGatewayAssociation:AcceptDirectConnectGatewayAssociationProposalResponse'</a>,
--   <a>acceptDirectConnectGatewayAssociationProposalResponse_directConnectGatewayAssociation</a>
--   - Undocumented member.
--   
--   
--   <a>$sel:httpStatus:AcceptDirectConnectGatewayAssociationProposalResponse'</a>,
--   <a>acceptDirectConnectGatewayAssociationProposalResponse_httpStatus</a>
--   - The response's http status code.
newAcceptDirectConnectGatewayAssociationProposalResponse :: Int -> AcceptDirectConnectGatewayAssociationProposalResponse

-- | <i>See:</i> <a>newCreateInterconnect</a> smart constructor.
data CreateInterconnect
CreateInterconnect' :: Maybe Text -> Maybe Text -> Maybe (NonEmpty Tag) -> Text -> Text -> Text -> CreateInterconnect

-- | Create a value of <a>CreateInterconnect</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:providerName:CreateInterconnect'</a>,
--   <a>createInterconnect_providerName</a> - The name of the service
--   provider associated with the interconnect.
--   
--   <a>$sel:lagId:CreateInterconnect'</a>, <a>createInterconnect_lagId</a>
--   - The ID of the LAG.
--   
--   <a>$sel:tags:CreateInterconnect'</a>, <a>createInterconnect_tags</a> -
--   The tags to associate with the interconnect.
--   
--   <a>$sel:interconnectName:CreateInterconnect'</a>,
--   <a>createInterconnect_interconnectName</a> - The name of the
--   interconnect.
--   
--   <a>$sel:bandwidth:CreateInterconnect'</a>,
--   <a>createInterconnect_bandwidth</a> - The port bandwidth, in Gbps. The
--   possible values are 1 and 10.
--   
--   <a>$sel:location:CreateInterconnect'</a>,
--   <a>createInterconnect_location</a> - The location of the interconnect.
newCreateInterconnect :: Text -> Text -> Text -> CreateInterconnect

-- | Information about an interconnect.
--   
--   <i>See:</i> <a>newInterconnect</a> smart constructor.
data Interconnect
Interconnect' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe HasLogicalRedundancy -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe (NonEmpty Tag) -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe InterconnectState -> Maybe Text -> Interconnect

-- | Create a value of <a>Interconnect</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:interconnectId:Interconnect'</a>,
--   <a>interconnect_interconnectId</a> - The ID of the interconnect.
--   
--   <a>$sel:bandwidth:Interconnect'</a>, <a>interconnect_bandwidth</a> -
--   The bandwidth of the connection.
--   
--   <a>$sel:awsDeviceV2:Interconnect'</a>, <a>interconnect_awsDeviceV2</a>
--   - The Direct Connect endpoint that terminates the physical connection.
--   
--   <a>$sel:providerName:Interconnect'</a>,
--   <a>interconnect_providerName</a> - The name of the service provider
--   associated with the interconnect.
--   
--   <a>$sel:awsLogicalDeviceId:Interconnect'</a>,
--   <a>interconnect_awsLogicalDeviceId</a> - The Direct Connect endpoint
--   that terminates the logical connection. This device might be different
--   than the device that terminates the physical connection.
--   
--   <a>$sel:hasLogicalRedundancy:Interconnect'</a>,
--   <a>interconnect_hasLogicalRedundancy</a> - Indicates whether the
--   interconnect supports a secondary BGP in the same address family
--   (IPv4/IPv6).
--   
--   <a>$sel:awsDevice:Interconnect'</a>, <a>interconnect_awsDevice</a> -
--   The Direct Connect endpoint on which the physical connection
--   terminates.
--   
--   <a>$sel:jumboFrameCapable:Interconnect'</a>,
--   <a>interconnect_jumboFrameCapable</a> - Indicates whether jumbo frames
--   (9001 MTU) are supported.
--   
--   <a>$sel:lagId:Interconnect'</a>, <a>interconnect_lagId</a> - The ID of
--   the LAG.
--   
--   <a>$sel:tags:Interconnect'</a>, <a>interconnect_tags</a> - The tags
--   associated with the interconnect.
--   
--   <a>$sel:loaIssueTime:Interconnect'</a>,
--   <a>interconnect_loaIssueTime</a> - The time of the most recent call to
--   DescribeLoa for this connection.
--   
--   <a>$sel:region:Interconnect'</a>, <a>interconnect_region</a> - The
--   Region where the connection is located.
--   
--   <a>$sel:interconnectName:Interconnect'</a>,
--   <a>interconnect_interconnectName</a> - The name of the interconnect.
--   
--   <a>$sel:interconnectState:Interconnect'</a>,
--   <a>interconnect_interconnectState</a> - The state of the interconnect.
--   The following are the possible values:
--   
--   <ul>
--   <li><tt>requested</tt>: The initial state of an interconnect. The
--   interconnect stays in the requested state until the Letter of
--   Authorization (LOA) is sent to the customer.</li>
--   <li><tt>pending</tt>: The interconnect is approved, and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is up, and the interconnect
--   is ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The interconnect is being deleted.</li>
--   <li><tt>deleted</tt>: The interconnect is deleted.</li>
--   <li><tt>unknown</tt>: The state of the interconnect is not
--   available.</li>
--   </ul>
--   
--   <a>$sel:location:Interconnect'</a>, <a>interconnect_location</a> - The
--   location of the connection.
newInterconnect :: Interconnect

-- | <i>See:</i> <a>newCreateDirectConnectGatewayAssociation</a> smart
--   constructor.
data CreateDirectConnectGatewayAssociation
CreateDirectConnectGatewayAssociation' :: Maybe Text -> Maybe [RouteFilterPrefix] -> Maybe Text -> Text -> CreateDirectConnectGatewayAssociation

-- | Create a value of <a>CreateDirectConnectGatewayAssociation</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:virtualGatewayId:CreateDirectConnectGatewayAssociation'</a>,
--   <a>createDirectConnectGatewayAssociation_virtualGatewayId</a> - The ID
--   of the virtual private gateway.
--   
--   
--   <a>$sel:addAllowedPrefixesToDirectConnectGateway:CreateDirectConnectGatewayAssociation'</a>,
--   <a>createDirectConnectGatewayAssociation_addAllowedPrefixesToDirectConnectGateway</a>
--   - The Amazon VPC prefixes to advertise to the Direct Connect gateway
--   
--   This parameter is required when you create an association to a transit
--   gateway.
--   
--   For information about how to set the prefixes, see <a>Allowed
--   Prefixes</a> in the <i>Direct Connect User Guide</i>.
--   
--   <a>$sel:gatewayId:CreateDirectConnectGatewayAssociation'</a>,
--   <a>createDirectConnectGatewayAssociation_gatewayId</a> - The ID of the
--   virtual private gateway or transit gateway.
--   
--   
--   <a>$sel:directConnectGatewayId:CreateDirectConnectGatewayAssociation'</a>,
--   <a>createDirectConnectGatewayAssociation_directConnectGatewayId</a> -
--   The ID of the Direct Connect gateway.
newCreateDirectConnectGatewayAssociation :: Text -> CreateDirectConnectGatewayAssociation

-- | <i>See:</i> <a>newCreateDirectConnectGatewayAssociationResponse</a>
--   smart constructor.
data CreateDirectConnectGatewayAssociationResponse
CreateDirectConnectGatewayAssociationResponse' :: Maybe DirectConnectGatewayAssociation -> Int -> CreateDirectConnectGatewayAssociationResponse

-- | Create a value of <a>CreateDirectConnectGatewayAssociationResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:directConnectGatewayAssociation:CreateDirectConnectGatewayAssociationResponse'</a>,
--   <a>createDirectConnectGatewayAssociationResponse_directConnectGatewayAssociation</a>
--   - The association to be created.
--   
--   <a>$sel:httpStatus:CreateDirectConnectGatewayAssociationResponse'</a>,
--   <a>createDirectConnectGatewayAssociationResponse_httpStatus</a> - The
--   response's http status code.
newCreateDirectConnectGatewayAssociationResponse :: Int -> CreateDirectConnectGatewayAssociationResponse

-- | <i>See:</i> <a>newDeleteLag</a> smart constructor.
data DeleteLag
DeleteLag' :: Text -> DeleteLag

-- | Create a value of <a>DeleteLag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lagId:DeleteLag'</a>, <a>deleteLag_lagId</a> - The ID of the
--   LAG.
newDeleteLag :: Text -> DeleteLag

-- | Information about a link aggregation group (LAG).
--   
--   <i>See:</i> <a>newLag</a> smart constructor.
data Lag
Lag' :: Maybe Int -> Maybe Text -> Maybe Bool -> Maybe [MacSecKey] -> Maybe Text -> Maybe Text -> Maybe HasLogicalRedundancy -> Maybe Text -> Maybe [Connection] -> Maybe Text -> Maybe LagState -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (NonEmpty Tag) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Bool -> Lag

-- | Create a value of <a>Lag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:numberOfConnections:Lag'</a>, <a>lag_numberOfConnections</a> -
--   The number of physical dedicated connections bundled by the LAG, up to
--   a maximum of 10.
--   
--   <a>$sel:awsDeviceV2:Lag'</a>, <a>lag_awsDeviceV2</a> - The Direct
--   Connect endpoint that hosts the LAG.
--   
--   <a>$sel:allowsHostedConnections:Lag'</a>,
--   <a>lag_allowsHostedConnections</a> - Indicates whether the LAG can
--   host other connections.
--   
--   <a>$sel:macSecKeys:Lag'</a>, <a>lag_macSecKeys</a> - The MAC Security
--   (MACsec) security keys associated with the LAG.
--   
--   <a>$sel:providerName:Lag'</a>, <a>lag_providerName</a> - The name of
--   the service provider associated with the LAG.
--   
--   <a>$sel:awsLogicalDeviceId:Lag'</a>, <a>lag_awsLogicalDeviceId</a> -
--   The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
--   
--   <a>$sel:hasLogicalRedundancy:Lag'</a>, <a>lag_hasLogicalRedundancy</a>
--   - Indicates whether the LAG supports a secondary BGP peer in the same
--   address family (IPv4/IPv6).
--   
--   <a>$sel:lagName:Lag'</a>, <a>lag_lagName</a> - The name of the LAG.
--   
--   <a>$sel:connections:Lag'</a>, <a>lag_connections</a> - The connections
--   bundled by the LAG.
--   
--   <a>$sel:awsDevice:Lag'</a>, <a>lag_awsDevice</a> - The Direct Connect
--   endpoint that hosts the LAG.
--   
--   <a>$sel:lagState:Lag'</a>, <a>lag_lagState</a> - The state of the LAG.
--   The following are the possible values:
--   
--   <ul>
--   <li><tt>requested</tt>: The initial state of a LAG. The LAG stays in
--   the requested state until the Letter of Authorization (LOA) is
--   available.</li>
--   <li><tt>pending</tt>: The LAG has been approved and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is established and the LAG is
--   ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The LAG is being deleted.</li>
--   <li><tt>deleted</tt>: The LAG is deleted.</li>
--   <li><tt>unknown</tt>: The state of the LAG is not available.</li>
--   </ul>
--   
--   <a>$sel:jumboFrameCapable:Lag'</a>, <a>lag_jumboFrameCapable</a> -
--   Indicates whether jumbo frames (9001 MTU) are supported.
--   
--   <a>$sel:connectionsBandwidth:Lag'</a>, <a>lag_connectionsBandwidth</a>
--   - The individual bandwidth of the physical connections bundled by the
--   LAG. The possible values are 1Gbps and 10Gbps.
--   
--   <a>$sel:lagId:Lag'</a>, <a>lag_lagId</a> - The ID of the LAG.
--   
--   <a>$sel:encryptionMode:Lag'</a>, <a>lag_encryptionMode</a> - The LAG
--   MAC Security (MACsec) encryption mode.
--   
--   The valid values are <tt>no_encrypt</tt>, <tt>should_encrypt</tt>, and
--   <tt>must_encrypt</tt>.
--   
--   <a>$sel:tags:Lag'</a>, <a>lag_tags</a> - The tags associated with the
--   LAG.
--   
--   <a>$sel:ownerAccount:Lag'</a>, <a>lag_ownerAccount</a> - The ID of the
--   account that owns the LAG.
--   
--   <a>$sel:region:Lag'</a>, <a>lag_region</a> - The Region where the
--   connection is located.
--   
--   <a>$sel:location:Lag'</a>, <a>lag_location</a> - The location of the
--   LAG.
--   
--   <a>$sel:minimumLinks:Lag'</a>, <a>lag_minimumLinks</a> - The minimum
--   number of physical dedicated connections that must be operational for
--   the LAG itself to be operational.
--   
--   <a>$sel:macSecCapable:Lag'</a>, <a>lag_macSecCapable</a> - Indicates
--   whether the LAG supports MAC Security (MACsec).
newLag :: Lag

-- | <i>See:</i> <a>newDeleteInterconnect</a> smart constructor.
data DeleteInterconnect
DeleteInterconnect' :: Text -> DeleteInterconnect

-- | Create a value of <a>DeleteInterconnect</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:interconnectId:DeleteInterconnect'</a>,
--   <a>deleteInterconnect_interconnectId</a> - The ID of the interconnect.
newDeleteInterconnect :: Text -> DeleteInterconnect

-- | <i>See:</i> <a>newDeleteInterconnectResponse</a> smart constructor.
data DeleteInterconnectResponse
DeleteInterconnectResponse' :: Maybe InterconnectState -> Int -> DeleteInterconnectResponse

-- | Create a value of <a>DeleteInterconnectResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:interconnectState:DeleteInterconnectResponse'</a>,
--   <a>deleteInterconnectResponse_interconnectState</a> - The state of the
--   interconnect. The following are the possible values:
--   
--   <ul>
--   <li><tt>requested</tt>: The initial state of an interconnect. The
--   interconnect stays in the requested state until the Letter of
--   Authorization (LOA) is sent to the customer.</li>
--   <li><tt>pending</tt>: The interconnect is approved, and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is up, and the interconnect
--   is ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The interconnect is being deleted.</li>
--   <li><tt>deleted</tt>: The interconnect is deleted.</li>
--   <li><tt>unknown</tt>: The state of the interconnect is not
--   available.</li>
--   </ul>
--   
--   <a>$sel:httpStatus:DeleteInterconnectResponse'</a>,
--   <a>deleteInterconnectResponse_httpStatus</a> - The response's http
--   status code.
newDeleteInterconnectResponse :: Int -> DeleteInterconnectResponse

-- | <i>See:</i> <a>newAssociateHostedConnection</a> smart constructor.
data AssociateHostedConnection
AssociateHostedConnection' :: Text -> Text -> AssociateHostedConnection

-- | Create a value of <a>AssociateHostedConnection</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connectionId:AssociateHostedConnection'</a>,
--   <a>associateHostedConnection_connectionId</a> - The ID of the hosted
--   connection.
--   
--   <a>$sel:parentConnectionId:AssociateHostedConnection'</a>,
--   <a>associateHostedConnection_parentConnectionId</a> - The ID of the
--   interconnect or the LAG.
newAssociateHostedConnection :: Text -> Text -> AssociateHostedConnection

-- | Information about an Direct Connect connection.
--   
--   <i>See:</i> <a>newConnection</a> smart constructor.
data Connection
Connection' :: Maybe Text -> Maybe Text -> Maybe ConnectionState -> Maybe Text -> Maybe [MacSecKey] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe HasLogicalRedundancy -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (NonEmpty Tag) -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Bool -> Connection

-- | Create a value of <a>Connection</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bandwidth:Connection'</a>, <a>connection_bandwidth</a> - The
--   bandwidth of the connection.
--   
--   <a>$sel:awsDeviceV2:Connection'</a>, <a>connection_awsDeviceV2</a> -
--   The Direct Connect endpoint that terminates the physical connection.
--   
--   <a>$sel:connectionState:Connection'</a>,
--   <a>connection_connectionState</a> - The state of the connection. The
--   following are the possible values:
--   
--   <ul>
--   <li><tt>ordering</tt>: The initial state of a hosted connection
--   provisioned on an interconnect. The connection stays in the ordering
--   state until the owner of the hosted connection confirms or declines
--   the connection order.</li>
--   <li><tt>requested</tt>: The initial state of a standard connection.
--   The connection stays in the requested state until the Letter of
--   Authorization (LOA) is sent to the customer.</li>
--   <li><tt>pending</tt>: The connection has been approved and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is up and the connection is
--   ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The connection is being deleted.</li>
--   <li><tt>deleted</tt>: The connection has been deleted.</li>
--   <li><tt>rejected</tt>: A hosted connection in the <tt>ordering</tt>
--   state enters the <tt>rejected</tt> state if it is deleted by the
--   customer.</li>
--   <li><tt>unknown</tt>: The state of the connection is not
--   available.</li>
--   </ul>
--   
--   <a>$sel:connectionName:Connection'</a>,
--   <a>connection_connectionName</a> - The name of the connection.
--   
--   <a>$sel:macSecKeys:Connection'</a>, <a>connection_macSecKeys</a> - The
--   MAC Security (MACsec) security keys associated with the connection.
--   
--   <a>$sel:providerName:Connection'</a>, <a>connection_providerName</a> -
--   The name of the service provider associated with the connection.
--   
--   <a>$sel:connectionId:Connection'</a>, <a>connection_connectionId</a> -
--   The ID of the connection.
--   
--   <a>$sel:awsLogicalDeviceId:Connection'</a>,
--   <a>connection_awsLogicalDeviceId</a> - The Direct Connect endpoint
--   that terminates the logical connection. This device might be different
--   than the device that terminates the physical connection.
--   
--   <a>$sel:hasLogicalRedundancy:Connection'</a>,
--   <a>connection_hasLogicalRedundancy</a> - Indicates whether the
--   connection supports a secondary BGP peer in the same address family
--   (IPv4/IPv6).
--   
--   <a>$sel:awsDevice:Connection'</a>, <a>connection_awsDevice</a> - The
--   Direct Connect endpoint on which the physical connection terminates.
--   
--   <a>$sel:jumboFrameCapable:Connection'</a>,
--   <a>connection_jumboFrameCapable</a> - Indicates whether jumbo frames
--   (9001 MTU) are supported.
--   
--   <a>$sel:portEncryptionStatus:Connection'</a>,
--   <a>connection_portEncryptionStatus</a> - The MAC Security (MACsec)
--   port link status of the connection.
--   
--   The valid values are <tt>Encryption Up</tt>, which means that there is
--   an active Connection Key Name, or <tt>Encryption Down</tt>.
--   
--   <a>$sel:lagId:Connection'</a>, <a>connection_lagId</a> - The ID of the
--   LAG.
--   
--   <a>$sel:encryptionMode:Connection'</a>,
--   <a>connection_encryptionMode</a> - The MAC Security (MACsec)
--   connection encryption mode.
--   
--   The valid values are <tt>no_encrypt</tt>, <tt>should_encrypt</tt>, and
--   <tt>must_encrypt</tt>.
--   
--   <a>$sel:partnerName:Connection'</a>, <a>connection_partnerName</a> -
--   The name of the Direct Connect service provider associated with the
--   connection.
--   
--   <a>$sel:tags:Connection'</a>, <a>connection_tags</a> - The tags
--   associated with the connection.
--   
--   <a>$sel:loaIssueTime:Connection'</a>, <a>connection_loaIssueTime</a> -
--   The time of the most recent call to DescribeLoa for this connection.
--   
--   <a>$sel:ownerAccount:Connection'</a>, <a>connection_ownerAccount</a> -
--   The ID of the account that owns the connection.
--   
--   <a>$sel:region:Connection'</a>, <a>connection_region</a> - The Region
--   where the connection is located.
--   
--   <a>$sel:vlan:Connection'</a>, <a>connection_vlan</a> - The ID of the
--   VLAN.
--   
--   <a>$sel:location:Connection'</a>, <a>connection_location</a> - The
--   location of the connection.
--   
--   <a>$sel:macSecCapable:Connection'</a>, <a>connection_macSecCapable</a>
--   - Indicates whether the connection supports MAC Security (MACsec).
newConnection :: Connection

-- | <i>See:</i> <a>newCreateBGPPeer</a> smart constructor.
data CreateBGPPeer
CreateBGPPeer' :: Maybe Text -> Maybe NewBGPPeer -> CreateBGPPeer

-- | Create a value of <a>CreateBGPPeer</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:virtualInterfaceId:CreateBGPPeer'</a>,
--   <a>createBGPPeer_virtualInterfaceId</a> - The ID of the virtual
--   interface.
--   
--   <a>$sel:newBGPPeer':CreateBGPPeer'</a>,
--   <a>createBGPPeer_newBGPPeer</a> - Information about the BGP peer.
newCreateBGPPeer :: CreateBGPPeer

-- | <i>See:</i> <a>newCreateBGPPeerResponse</a> smart constructor.
data CreateBGPPeerResponse
CreateBGPPeerResponse' :: Maybe VirtualInterface -> Int -> CreateBGPPeerResponse

-- | Create a value of <a>CreateBGPPeerResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:virtualInterface:CreateBGPPeerResponse'</a>,
--   <a>createBGPPeerResponse_virtualInterface</a> - The virtual interface.
--   
--   <a>$sel:httpStatus:CreateBGPPeerResponse'</a>,
--   <a>createBGPPeerResponse_httpStatus</a> - The response's http status
--   code.
newCreateBGPPeerResponse :: Int -> CreateBGPPeerResponse

-- | <i>See:</i> <a>newUpdateLag</a> smart constructor.
data UpdateLag
UpdateLag' :: Maybe Text -> Maybe Text -> Maybe Int -> Text -> UpdateLag

-- | Create a value of <a>UpdateLag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lagName:UpdateLag'</a>, <a>updateLag_lagName</a> - The name of
--   the LAG.
--   
--   <a>$sel:encryptionMode:UpdateLag'</a>, <a>updateLag_encryptionMode</a>
--   - The LAG MAC Security (MACsec) encryption mode.
--   
--   Amazon Web Services applies the value to all connections which are
--   part of the LAG.
--   
--   <a>$sel:minimumLinks:UpdateLag'</a>, <a>updateLag_minimumLinks</a> -
--   The minimum number of physical connections that must be operational
--   for the LAG itself to be operational.
--   
--   <a>$sel:lagId:UpdateLag'</a>, <a>updateLag_lagId</a> - The ID of the
--   LAG.
newUpdateLag :: Text -> UpdateLag

-- | Information about a link aggregation group (LAG).
--   
--   <i>See:</i> <a>newLag</a> smart constructor.
data Lag
Lag' :: Maybe Int -> Maybe Text -> Maybe Bool -> Maybe [MacSecKey] -> Maybe Text -> Maybe Text -> Maybe HasLogicalRedundancy -> Maybe Text -> Maybe [Connection] -> Maybe Text -> Maybe LagState -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (NonEmpty Tag) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Bool -> Lag

-- | Create a value of <a>Lag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:numberOfConnections:Lag'</a>, <a>lag_numberOfConnections</a> -
--   The number of physical dedicated connections bundled by the LAG, up to
--   a maximum of 10.
--   
--   <a>$sel:awsDeviceV2:Lag'</a>, <a>lag_awsDeviceV2</a> - The Direct
--   Connect endpoint that hosts the LAG.
--   
--   <a>$sel:allowsHostedConnections:Lag'</a>,
--   <a>lag_allowsHostedConnections</a> - Indicates whether the LAG can
--   host other connections.
--   
--   <a>$sel:macSecKeys:Lag'</a>, <a>lag_macSecKeys</a> - The MAC Security
--   (MACsec) security keys associated with the LAG.
--   
--   <a>$sel:providerName:Lag'</a>, <a>lag_providerName</a> - The name of
--   the service provider associated with the LAG.
--   
--   <a>$sel:awsLogicalDeviceId:Lag'</a>, <a>lag_awsLogicalDeviceId</a> -
--   The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
--   
--   <a>$sel:hasLogicalRedundancy:Lag'</a>, <a>lag_hasLogicalRedundancy</a>
--   - Indicates whether the LAG supports a secondary BGP peer in the same
--   address family (IPv4/IPv6).
--   
--   <a>$sel:lagName:Lag'</a>, <a>lag_lagName</a> - The name of the LAG.
--   
--   <a>$sel:connections:Lag'</a>, <a>lag_connections</a> - The connections
--   bundled by the LAG.
--   
--   <a>$sel:awsDevice:Lag'</a>, <a>lag_awsDevice</a> - The Direct Connect
--   endpoint that hosts the LAG.
--   
--   <a>$sel:lagState:Lag'</a>, <a>lag_lagState</a> - The state of the LAG.
--   The following are the possible values:
--   
--   <ul>
--   <li><tt>requested</tt>: The initial state of a LAG. The LAG stays in
--   the requested state until the Letter of Authorization (LOA) is
--   available.</li>
--   <li><tt>pending</tt>: The LAG has been approved and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is established and the LAG is
--   ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The LAG is being deleted.</li>
--   <li><tt>deleted</tt>: The LAG is deleted.</li>
--   <li><tt>unknown</tt>: The state of the LAG is not available.</li>
--   </ul>
--   
--   <a>$sel:jumboFrameCapable:Lag'</a>, <a>lag_jumboFrameCapable</a> -
--   Indicates whether jumbo frames (9001 MTU) are supported.
--   
--   <a>$sel:connectionsBandwidth:Lag'</a>, <a>lag_connectionsBandwidth</a>
--   - The individual bandwidth of the physical connections bundled by the
--   LAG. The possible values are 1Gbps and 10Gbps.
--   
--   <a>$sel:lagId:Lag'</a>, <a>lag_lagId</a> - The ID of the LAG.
--   
--   <a>$sel:encryptionMode:Lag'</a>, <a>lag_encryptionMode</a> - The LAG
--   MAC Security (MACsec) encryption mode.
--   
--   The valid values are <tt>no_encrypt</tt>, <tt>should_encrypt</tt>, and
--   <tt>must_encrypt</tt>.
--   
--   <a>$sel:tags:Lag'</a>, <a>lag_tags</a> - The tags associated with the
--   LAG.
--   
--   <a>$sel:ownerAccount:Lag'</a>, <a>lag_ownerAccount</a> - The ID of the
--   account that owns the LAG.
--   
--   <a>$sel:region:Lag'</a>, <a>lag_region</a> - The Region where the
--   connection is located.
--   
--   <a>$sel:location:Lag'</a>, <a>lag_location</a> - The location of the
--   LAG.
--   
--   <a>$sel:minimumLinks:Lag'</a>, <a>lag_minimumLinks</a> - The minimum
--   number of physical dedicated connections that must be operational for
--   the LAG itself to be operational.
--   
--   <a>$sel:macSecCapable:Lag'</a>, <a>lag_macSecCapable</a> - Indicates
--   whether the LAG supports MAC Security (MACsec).
newLag :: Lag

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The Amazon Resource Name (ARN) of
--   the resource.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   tag keys of the tags to remove.
newUntagResource :: Text -> UntagResource

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | <i>See:</i> <a>newConfirmPrivateVirtualInterface</a> smart
--   constructor.
data ConfirmPrivateVirtualInterface
ConfirmPrivateVirtualInterface' :: Maybe Text -> Maybe Text -> Text -> ConfirmPrivateVirtualInterface

-- | Create a value of <a>ConfirmPrivateVirtualInterface</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:virtualGatewayId:ConfirmPrivateVirtualInterface'</a>,
--   <a>confirmPrivateVirtualInterface_virtualGatewayId</a> - The ID of the
--   virtual private gateway.
--   
--   <a>$sel:directConnectGatewayId:ConfirmPrivateVirtualInterface'</a>,
--   <a>confirmPrivateVirtualInterface_directConnectGatewayId</a> - The ID
--   of the Direct Connect gateway.
--   
--   <a>$sel:virtualInterfaceId:ConfirmPrivateVirtualInterface'</a>,
--   <a>confirmPrivateVirtualInterface_virtualInterfaceId</a> - The ID of
--   the virtual interface.
newConfirmPrivateVirtualInterface :: Text -> ConfirmPrivateVirtualInterface

-- | <i>See:</i> <a>newConfirmPrivateVirtualInterfaceResponse</a> smart
--   constructor.
data ConfirmPrivateVirtualInterfaceResponse
ConfirmPrivateVirtualInterfaceResponse' :: Maybe VirtualInterfaceState -> Int -> ConfirmPrivateVirtualInterfaceResponse

-- | Create a value of <a>ConfirmPrivateVirtualInterfaceResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:virtualInterfaceState:ConfirmPrivateVirtualInterfaceResponse'</a>,
--   <a>confirmPrivateVirtualInterfaceResponse_virtualInterfaceState</a> -
--   The state of the virtual interface. The following are the possible
--   values:
--   
--   <ul>
--   <li><tt>confirming</tt>: The creation of the virtual interface is
--   pending confirmation from the virtual interface owner. If the owner of
--   the virtual interface is different from the owner of the connection on
--   which it is provisioned, then the virtual interface will remain in
--   this state until it is confirmed by the virtual interface owner.</li>
--   <li><tt>verifying</tt>: This state only applies to public virtual
--   interfaces. Each public virtual interface needs validation before the
--   virtual interface can be created.</li>
--   <li><tt>pending</tt>: A virtual interface is in this state from the
--   time that it is created until the virtual interface is ready to
--   forward traffic.</li>
--   <li><tt>available</tt>: A virtual interface that is able to forward
--   traffic.</li>
--   <li><tt>down</tt>: A virtual interface that is BGP down.</li>
--   <li><tt>deleting</tt>: A virtual interface is in this state
--   immediately after calling DeleteVirtualInterface until it can no
--   longer forward traffic.</li>
--   <li><tt>deleted</tt>: A virtual interface that cannot forward
--   traffic.</li>
--   <li><tt>rejected</tt>: The virtual interface owner has declined
--   creation of the virtual interface. If a virtual interface in the
--   <tt>Confirming</tt> state is deleted by the virtual interface owner,
--   the virtual interface enters the <tt>Rejected</tt> state.</li>
--   <li><tt>unknown</tt>: The state of the virtual interface is not
--   available.</li>
--   </ul>
--   
--   <a>$sel:httpStatus:ConfirmPrivateVirtualInterfaceResponse'</a>,
--   <a>confirmPrivateVirtualInterfaceResponse_httpStatus</a> - The
--   response's http status code.
newConfirmPrivateVirtualInterfaceResponse :: Int -> ConfirmPrivateVirtualInterfaceResponse

-- | <i>See:</i> <a>newDisassociateConnectionFromLag</a> smart constructor.
data DisassociateConnectionFromLag
DisassociateConnectionFromLag' :: Text -> Text -> DisassociateConnectionFromLag

-- | Create a value of <a>DisassociateConnectionFromLag</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connectionId:DisassociateConnectionFromLag'</a>,
--   <a>disassociateConnectionFromLag_connectionId</a> - The ID of the
--   connection.
--   
--   <a>$sel:lagId:DisassociateConnectionFromLag'</a>,
--   <a>disassociateConnectionFromLag_lagId</a> - The ID of the LAG.
newDisassociateConnectionFromLag :: Text -> Text -> DisassociateConnectionFromLag

-- | Information about an Direct Connect connection.
--   
--   <i>See:</i> <a>newConnection</a> smart constructor.
data Connection
Connection' :: Maybe Text -> Maybe Text -> Maybe ConnectionState -> Maybe Text -> Maybe [MacSecKey] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe HasLogicalRedundancy -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (NonEmpty Tag) -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Bool -> Connection

-- | Create a value of <a>Connection</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bandwidth:Connection'</a>, <a>connection_bandwidth</a> - The
--   bandwidth of the connection.
--   
--   <a>$sel:awsDeviceV2:Connection'</a>, <a>connection_awsDeviceV2</a> -
--   The Direct Connect endpoint that terminates the physical connection.
--   
--   <a>$sel:connectionState:Connection'</a>,
--   <a>connection_connectionState</a> - The state of the connection. The
--   following are the possible values:
--   
--   <ul>
--   <li><tt>ordering</tt>: The initial state of a hosted connection
--   provisioned on an interconnect. The connection stays in the ordering
--   state until the owner of the hosted connection confirms or declines
--   the connection order.</li>
--   <li><tt>requested</tt>: The initial state of a standard connection.
--   The connection stays in the requested state until the Letter of
--   Authorization (LOA) is sent to the customer.</li>
--   <li><tt>pending</tt>: The connection has been approved and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is up and the connection is
--   ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The connection is being deleted.</li>
--   <li><tt>deleted</tt>: The connection has been deleted.</li>
--   <li><tt>rejected</tt>: A hosted connection in the <tt>ordering</tt>
--   state enters the <tt>rejected</tt> state if it is deleted by the
--   customer.</li>
--   <li><tt>unknown</tt>: The state of the connection is not
--   available.</li>
--   </ul>
--   
--   <a>$sel:connectionName:Connection'</a>,
--   <a>connection_connectionName</a> - The name of the connection.
--   
--   <a>$sel:macSecKeys:Connection'</a>, <a>connection_macSecKeys</a> - The
--   MAC Security (MACsec) security keys associated with the connection.
--   
--   <a>$sel:providerName:Connection'</a>, <a>connection_providerName</a> -
--   The name of the service provider associated with the connection.
--   
--   <a>$sel:connectionId:Connection'</a>, <a>connection_connectionId</a> -
--   The ID of the connection.
--   
--   <a>$sel:awsLogicalDeviceId:Connection'</a>,
--   <a>connection_awsLogicalDeviceId</a> - The Direct Connect endpoint
--   that terminates the logical connection. This device might be different
--   than the device that terminates the physical connection.
--   
--   <a>$sel:hasLogicalRedundancy:Connection'</a>,
--   <a>connection_hasLogicalRedundancy</a> - Indicates whether the
--   connection supports a secondary BGP peer in the same address family
--   (IPv4/IPv6).
--   
--   <a>$sel:awsDevice:Connection'</a>, <a>connection_awsDevice</a> - The
--   Direct Connect endpoint on which the physical connection terminates.
--   
--   <a>$sel:jumboFrameCapable:Connection'</a>,
--   <a>connection_jumboFrameCapable</a> - Indicates whether jumbo frames
--   (9001 MTU) are supported.
--   
--   <a>$sel:portEncryptionStatus:Connection'</a>,
--   <a>connection_portEncryptionStatus</a> - The MAC Security (MACsec)
--   port link status of the connection.
--   
--   The valid values are <tt>Encryption Up</tt>, which means that there is
--   an active Connection Key Name, or <tt>Encryption Down</tt>.
--   
--   <a>$sel:lagId:Connection'</a>, <a>connection_lagId</a> - The ID of the
--   LAG.
--   
--   <a>$sel:encryptionMode:Connection'</a>,
--   <a>connection_encryptionMode</a> - The MAC Security (MACsec)
--   connection encryption mode.
--   
--   The valid values are <tt>no_encrypt</tt>, <tt>should_encrypt</tt>, and
--   <tt>must_encrypt</tt>.
--   
--   <a>$sel:partnerName:Connection'</a>, <a>connection_partnerName</a> -
--   The name of the Direct Connect service provider associated with the
--   connection.
--   
--   <a>$sel:tags:Connection'</a>, <a>connection_tags</a> - The tags
--   associated with the connection.
--   
--   <a>$sel:loaIssueTime:Connection'</a>, <a>connection_loaIssueTime</a> -
--   The time of the most recent call to DescribeLoa for this connection.
--   
--   <a>$sel:ownerAccount:Connection'</a>, <a>connection_ownerAccount</a> -
--   The ID of the account that owns the connection.
--   
--   <a>$sel:region:Connection'</a>, <a>connection_region</a> - The Region
--   where the connection is located.
--   
--   <a>$sel:vlan:Connection'</a>, <a>connection_vlan</a> - The ID of the
--   VLAN.
--   
--   <a>$sel:location:Connection'</a>, <a>connection_location</a> - The
--   location of the connection.
--   
--   <a>$sel:macSecCapable:Connection'</a>, <a>connection_macSecCapable</a>
--   - Indicates whether the connection supports MAC Security (MACsec).
newConnection :: Connection

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> NonEmpty Tag -> TagResource

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The Amazon Resource Name (ARN) of the resource.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - The tags to
--   add.
newTagResource :: Text -> NonEmpty Tag -> TagResource

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | <i>See:</i> <a>newDeleteVirtualInterface</a> smart constructor.
data DeleteVirtualInterface
DeleteVirtualInterface' :: Text -> DeleteVirtualInterface

-- | Create a value of <a>DeleteVirtualInterface</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:virtualInterfaceId:DeleteVirtualInterface'</a>,
--   <a>deleteVirtualInterface_virtualInterfaceId</a> - The ID of the
--   virtual interface.
newDeleteVirtualInterface :: Text -> DeleteVirtualInterface

-- | <i>See:</i> <a>newDeleteVirtualInterfaceResponse</a> smart
--   constructor.
data DeleteVirtualInterfaceResponse
DeleteVirtualInterfaceResponse' :: Maybe VirtualInterfaceState -> Int -> DeleteVirtualInterfaceResponse

-- | Create a value of <a>DeleteVirtualInterfaceResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:virtualInterfaceState:DeleteVirtualInterfaceResponse'</a>,
--   <a>deleteVirtualInterfaceResponse_virtualInterfaceState</a> - The
--   state of the virtual interface. The following are the possible values:
--   
--   <ul>
--   <li><tt>confirming</tt>: The creation of the virtual interface is
--   pending confirmation from the virtual interface owner. If the owner of
--   the virtual interface is different from the owner of the connection on
--   which it is provisioned, then the virtual interface will remain in
--   this state until it is confirmed by the virtual interface owner.</li>
--   <li><tt>verifying</tt>: This state only applies to public virtual
--   interfaces. Each public virtual interface needs validation before the
--   virtual interface can be created.</li>
--   <li><tt>pending</tt>: A virtual interface is in this state from the
--   time that it is created until the virtual interface is ready to
--   forward traffic.</li>
--   <li><tt>available</tt>: A virtual interface that is able to forward
--   traffic.</li>
--   <li><tt>down</tt>: A virtual interface that is BGP down.</li>
--   <li><tt>deleting</tt>: A virtual interface is in this state
--   immediately after calling DeleteVirtualInterface until it can no
--   longer forward traffic.</li>
--   <li><tt>deleted</tt>: A virtual interface that cannot forward
--   traffic.</li>
--   <li><tt>rejected</tt>: The virtual interface owner has declined
--   creation of the virtual interface. If a virtual interface in the
--   <tt>Confirming</tt> state is deleted by the virtual interface owner,
--   the virtual interface enters the <tt>Rejected</tt> state.</li>
--   <li><tt>unknown</tt>: The state of the virtual interface is not
--   available.</li>
--   </ul>
--   
--   <a>$sel:httpStatus:DeleteVirtualInterfaceResponse'</a>,
--   <a>deleteVirtualInterfaceResponse_httpStatus</a> - The response's http
--   status code.
newDeleteVirtualInterfaceResponse :: Int -> DeleteVirtualInterfaceResponse

-- | <i>See:</i> <a>newDescribeDirectConnectGateways</a> smart constructor.
data DescribeDirectConnectGateways
DescribeDirectConnectGateways' :: Maybe Text -> Maybe Int -> Maybe Text -> DescribeDirectConnectGateways

-- | Create a value of <a>DescribeDirectConnectGateways</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeDirectConnectGateways'</a>,
--   <a>describeDirectConnectGateways_nextToken</a> - The token provided in
--   the previous call to retrieve the next page.
--   
--   <a>$sel:maxResults:DescribeDirectConnectGateways'</a>,
--   <a>describeDirectConnectGateways_maxResults</a> - The maximum number
--   of results to return with a single call. To retrieve the remaining
--   results, make another call with the returned <tt>nextToken</tt> value.
--   
--   If <tt>MaxResults</tt> is given a value larger than 100, only 100
--   results are returned.
--   
--   <a>$sel:directConnectGatewayId:DescribeDirectConnectGateways'</a>,
--   <a>describeDirectConnectGateways_directConnectGatewayId</a> - The ID
--   of the Direct Connect gateway.
newDescribeDirectConnectGateways :: DescribeDirectConnectGateways

-- | <i>See:</i> <a>newDescribeDirectConnectGatewaysResponse</a> smart
--   constructor.
data DescribeDirectConnectGatewaysResponse
DescribeDirectConnectGatewaysResponse' :: Maybe Text -> Maybe [DirectConnectGateway] -> Int -> DescribeDirectConnectGatewaysResponse

-- | Create a value of <a>DescribeDirectConnectGatewaysResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeDirectConnectGateways'</a>,
--   <a>describeDirectConnectGatewaysResponse_nextToken</a> - The token to
--   retrieve the next page.
--   
--   
--   <a>$sel:directConnectGateways:DescribeDirectConnectGatewaysResponse'</a>,
--   <a>describeDirectConnectGatewaysResponse_directConnectGateways</a> -
--   The Direct Connect gateways.
--   
--   <a>$sel:httpStatus:DescribeDirectConnectGatewaysResponse'</a>,
--   <a>describeDirectConnectGatewaysResponse_httpStatus</a> - The
--   response's http status code.
newDescribeDirectConnectGatewaysResponse :: Int -> DescribeDirectConnectGatewaysResponse

-- | <i>See:</i> <a>newDescribeVirtualInterfaces</a> smart constructor.
data DescribeVirtualInterfaces
DescribeVirtualInterfaces' :: Maybe Text -> Maybe Text -> DescribeVirtualInterfaces

-- | Create a value of <a>DescribeVirtualInterfaces</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connectionId:DescribeVirtualInterfaces'</a>,
--   <a>describeVirtualInterfaces_connectionId</a> - The ID of the
--   connection.
--   
--   <a>$sel:virtualInterfaceId:DescribeVirtualInterfaces'</a>,
--   <a>describeVirtualInterfaces_virtualInterfaceId</a> - The ID of the
--   virtual interface.
newDescribeVirtualInterfaces :: DescribeVirtualInterfaces

-- | <i>See:</i> <a>newDescribeVirtualInterfacesResponse</a> smart
--   constructor.
data DescribeVirtualInterfacesResponse
DescribeVirtualInterfacesResponse' :: Maybe [VirtualInterface] -> Int -> DescribeVirtualInterfacesResponse

-- | Create a value of <a>DescribeVirtualInterfacesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:virtualInterfaces:DescribeVirtualInterfacesResponse'</a>,
--   <a>describeVirtualInterfacesResponse_virtualInterfaces</a> - The
--   virtual interfaces
--   
--   <a>$sel:httpStatus:DescribeVirtualInterfacesResponse'</a>,
--   <a>describeVirtualInterfacesResponse_httpStatus</a> - The response's
--   http status code.
newDescribeVirtualInterfacesResponse :: Int -> DescribeVirtualInterfacesResponse

-- | <i>See:</i> <a>newUpdateVirtualInterfaceAttributes</a> smart
--   constructor.
data UpdateVirtualInterfaceAttributes
UpdateVirtualInterfaceAttributes' :: Maybe Int -> Text -> UpdateVirtualInterfaceAttributes

-- | Create a value of <a>UpdateVirtualInterfaceAttributes</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mtu:UpdateVirtualInterfaceAttributes'</a>,
--   <a>updateVirtualInterfaceAttributes_mtu</a> - The maximum transmission
--   unit (MTU), in bytes. The supported values are 1500 and 9001. The
--   default value is 1500.
--   
--   <a>$sel:virtualInterfaceId:UpdateVirtualInterfaceAttributes'</a>,
--   <a>updateVirtualInterfaceAttributes_virtualInterfaceId</a> - The ID of
--   the virtual private interface.
newUpdateVirtualInterfaceAttributes :: Text -> UpdateVirtualInterfaceAttributes

-- | Information about a virtual interface.
--   
--   <i>See:</i> <a>newVirtualInterface</a> smart constructor.
data VirtualInterface
VirtualInterface' :: Maybe Text -> Maybe [BGPPeer] -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe [RouteFilterPrefix] -> Maybe Int -> Maybe Text -> Maybe Integer -> Maybe Text -> Maybe (NonEmpty Tag) -> Maybe Text -> Maybe Text -> Maybe VirtualInterfaceState -> Maybe Text -> Maybe AddressFamily -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> VirtualInterface

-- | Create a value of <a>VirtualInterface</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authKey:VirtualInterface'</a>, <a>virtualInterface_authKey</a>
--   - The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
--   
--   <a>$sel:bgpPeers:VirtualInterface'</a>,
--   <a>virtualInterface_bgpPeers</a> - The BGP peers configured on this
--   virtual interface.
--   
--   <a>$sel:virtualGatewayId:VirtualInterface'</a>,
--   <a>virtualInterface_virtualGatewayId</a> - The ID of the virtual
--   private gateway. Applies only to private virtual interfaces.
--   
--   <a>$sel:asn:VirtualInterface'</a>, <a>virtualInterface_asn</a> - The
--   autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
--   
--   The valid values are 1-2147483647.
--   
--   <a>$sel:awsDeviceV2:VirtualInterface'</a>,
--   <a>virtualInterface_awsDeviceV2</a> - The Direct Connect endpoint that
--   terminates the physical connection.
--   
--   <a>$sel:connectionId:VirtualInterface'</a>,
--   <a>virtualInterface_connectionId</a> - The ID of the connection.
--   
--   <a>$sel:awsLogicalDeviceId:VirtualInterface'</a>,
--   <a>virtualInterface_awsLogicalDeviceId</a> - The Direct Connect
--   endpoint that terminates the logical connection. This device might be
--   different than the device that terminates the physical connection.
--   
--   <a>$sel:customerRouterConfig:VirtualInterface'</a>,
--   <a>virtualInterface_customerRouterConfig</a> - The customer router
--   configuration.
--   
--   <a>$sel:jumboFrameCapable:VirtualInterface'</a>,
--   <a>virtualInterface_jumboFrameCapable</a> - Indicates whether jumbo
--   frames (9001 MTU) are supported.
--   
--   <a>$sel:routeFilterPrefixes:VirtualInterface'</a>,
--   <a>virtualInterface_routeFilterPrefixes</a> - The routes to be
--   advertised to the Amazon Web Services network in this Region. Applies
--   to public virtual interfaces.
--   
--   <a>$sel:mtu:VirtualInterface'</a>, <a>virtualInterface_mtu</a> - The
--   maximum transmission unit (MTU), in bytes. The supported values are
--   1500 and 9001. The default value is 1500.
--   
--   <a>$sel:virtualInterfaceType:VirtualInterface'</a>,
--   <a>virtualInterface_virtualInterfaceType</a> - The type of virtual
--   interface. The possible values are <tt>private</tt> and
--   <tt>public</tt>.
--   
--   <a>$sel:amazonSideAsn:VirtualInterface'</a>,
--   <a>virtualInterface_amazonSideAsn</a> - The autonomous system number
--   (ASN) for the Amazon side of the connection.
--   
--   <a>$sel:virtualInterfaceId:VirtualInterface'</a>,
--   <a>virtualInterface_virtualInterfaceId</a> - The ID of the virtual
--   interface.
--   
--   <a>$sel:tags:VirtualInterface'</a>, <a>virtualInterface_tags</a> - The
--   tags associated with the virtual interface.
--   
--   <a>$sel:directConnectGatewayId:VirtualInterface'</a>,
--   <a>virtualInterface_directConnectGatewayId</a> - The ID of the Direct
--   Connect gateway.
--   
--   <a>$sel:virtualInterfaceName:VirtualInterface'</a>,
--   <a>virtualInterface_virtualInterfaceName</a> - The name of the virtual
--   interface assigned by the customer network. The name has a maximum of
--   100 characters. The following are valid characters: a-z, 0-9 and a
--   hyphen (-).
--   
--   <a>$sel:virtualInterfaceState:VirtualInterface'</a>,
--   <a>virtualInterface_virtualInterfaceState</a> - The state of the
--   virtual interface. The following are the possible values:
--   
--   <ul>
--   <li><tt>confirming</tt>: The creation of the virtual interface is
--   pending confirmation from the virtual interface owner. If the owner of
--   the virtual interface is different from the owner of the connection on
--   which it is provisioned, then the virtual interface will remain in
--   this state until it is confirmed by the virtual interface owner.</li>
--   <li><tt>verifying</tt>: This state only applies to public virtual
--   interfaces. Each public virtual interface needs validation before the
--   virtual interface can be created.</li>
--   <li><tt>pending</tt>: A virtual interface is in this state from the
--   time that it is created until the virtual interface is ready to
--   forward traffic.</li>
--   <li><tt>available</tt>: A virtual interface that is able to forward
--   traffic.</li>
--   <li><tt>down</tt>: A virtual interface that is BGP down.</li>
--   <li><tt>deleting</tt>: A virtual interface is in this state
--   immediately after calling DeleteVirtualInterface until it can no
--   longer forward traffic.</li>
--   <li><tt>deleted</tt>: A virtual interface that cannot forward
--   traffic.</li>
--   <li><tt>rejected</tt>: The virtual interface owner has declined
--   creation of the virtual interface. If a virtual interface in the
--   <tt>Confirming</tt> state is deleted by the virtual interface owner,
--   the virtual interface enters the <tt>Rejected</tt> state.</li>
--   <li><tt>unknown</tt>: The state of the virtual interface is not
--   available.</li>
--   </ul>
--   
--   <a>$sel:amazonAddress:VirtualInterface'</a>,
--   <a>virtualInterface_amazonAddress</a> - The IP address assigned to the
--   Amazon interface.
--   
--   <a>$sel:addressFamily:VirtualInterface'</a>,
--   <a>virtualInterface_addressFamily</a> - The address family for the BGP
--   peer.
--   
--   <a>$sel:ownerAccount:VirtualInterface'</a>,
--   <a>virtualInterface_ownerAccount</a> - The ID of the account that owns
--   the virtual interface.
--   
--   <a>$sel:region:VirtualInterface'</a>, <a>virtualInterface_region</a> -
--   The Region where the virtual interface is located.
--   
--   <a>$sel:vlan:VirtualInterface'</a>, <a>virtualInterface_vlan</a> - The
--   ID of the VLAN.
--   
--   <a>$sel:location:VirtualInterface'</a>,
--   <a>virtualInterface_location</a> - The location of the connection.
--   
--   <a>$sel:customerAddress:VirtualInterface'</a>,
--   <a>virtualInterface_customerAddress</a> - The IP address assigned to
--   the customer interface.
newVirtualInterface :: VirtualInterface

-- | <i>See:</i> <a>newCreateConnection</a> smart constructor.
data CreateConnection
CreateConnection' :: Maybe Text -> Maybe Text -> Maybe (NonEmpty Tag) -> Maybe Bool -> Text -> Text -> Text -> CreateConnection

-- | Create a value of <a>CreateConnection</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:providerName:CreateConnection'</a>,
--   <a>createConnection_providerName</a> - The name of the service
--   provider associated with the requested connection.
--   
--   <a>$sel:lagId:CreateConnection'</a>, <a>createConnection_lagId</a> -
--   The ID of the LAG.
--   
--   <a>$sel:tags:CreateConnection'</a>, <a>createConnection_tags</a> - The
--   tags to associate with the lag.
--   
--   <a>$sel:requestMACSec:CreateConnection'</a>,
--   <a>createConnection_requestMACSec</a> - Indicates whether you want the
--   connection to support MAC Security (MACsec).
--   
--   MAC Security (MACsec) is only available on dedicated connections. For
--   information about MAC Security (MACsec) prerequisties, see <a>MACsec
--   prerequisties</a> in the <i>Direct Connect User Guide</i>.
--   
--   <a>$sel:location:CreateConnection'</a>,
--   <a>createConnection_location</a> - The location of the connection.
--   
--   <a>$sel:bandwidth:CreateConnection'</a>,
--   <a>createConnection_bandwidth</a> - The bandwidth of the connection.
--   
--   <a>$sel:connectionName:CreateConnection'</a>,
--   <a>createConnection_connectionName</a> - The name of the connection.
newCreateConnection :: Text -> Text -> Text -> CreateConnection

-- | Information about an Direct Connect connection.
--   
--   <i>See:</i> <a>newConnection</a> smart constructor.
data Connection
Connection' :: Maybe Text -> Maybe Text -> Maybe ConnectionState -> Maybe Text -> Maybe [MacSecKey] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe HasLogicalRedundancy -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (NonEmpty Tag) -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Bool -> Connection

-- | Create a value of <a>Connection</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bandwidth:Connection'</a>, <a>connection_bandwidth</a> - The
--   bandwidth of the connection.
--   
--   <a>$sel:awsDeviceV2:Connection'</a>, <a>connection_awsDeviceV2</a> -
--   The Direct Connect endpoint that terminates the physical connection.
--   
--   <a>$sel:connectionState:Connection'</a>,
--   <a>connection_connectionState</a> - The state of the connection. The
--   following are the possible values:
--   
--   <ul>
--   <li><tt>ordering</tt>: The initial state of a hosted connection
--   provisioned on an interconnect. The connection stays in the ordering
--   state until the owner of the hosted connection confirms or declines
--   the connection order.</li>
--   <li><tt>requested</tt>: The initial state of a standard connection.
--   The connection stays in the requested state until the Letter of
--   Authorization (LOA) is sent to the customer.</li>
--   <li><tt>pending</tt>: The connection has been approved and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is up and the connection is
--   ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The connection is being deleted.</li>
--   <li><tt>deleted</tt>: The connection has been deleted.</li>
--   <li><tt>rejected</tt>: A hosted connection in the <tt>ordering</tt>
--   state enters the <tt>rejected</tt> state if it is deleted by the
--   customer.</li>
--   <li><tt>unknown</tt>: The state of the connection is not
--   available.</li>
--   </ul>
--   
--   <a>$sel:connectionName:Connection'</a>,
--   <a>connection_connectionName</a> - The name of the connection.
--   
--   <a>$sel:macSecKeys:Connection'</a>, <a>connection_macSecKeys</a> - The
--   MAC Security (MACsec) security keys associated with the connection.
--   
--   <a>$sel:providerName:Connection'</a>, <a>connection_providerName</a> -
--   The name of the service provider associated with the connection.
--   
--   <a>$sel:connectionId:Connection'</a>, <a>connection_connectionId</a> -
--   The ID of the connection.
--   
--   <a>$sel:awsLogicalDeviceId:Connection'</a>,
--   <a>connection_awsLogicalDeviceId</a> - The Direct Connect endpoint
--   that terminates the logical connection. This device might be different
--   than the device that terminates the physical connection.
--   
--   <a>$sel:hasLogicalRedundancy:Connection'</a>,
--   <a>connection_hasLogicalRedundancy</a> - Indicates whether the
--   connection supports a secondary BGP peer in the same address family
--   (IPv4/IPv6).
--   
--   <a>$sel:awsDevice:Connection'</a>, <a>connection_awsDevice</a> - The
--   Direct Connect endpoint on which the physical connection terminates.
--   
--   <a>$sel:jumboFrameCapable:Connection'</a>,
--   <a>connection_jumboFrameCapable</a> - Indicates whether jumbo frames
--   (9001 MTU) are supported.
--   
--   <a>$sel:portEncryptionStatus:Connection'</a>,
--   <a>connection_portEncryptionStatus</a> - The MAC Security (MACsec)
--   port link status of the connection.
--   
--   The valid values are <tt>Encryption Up</tt>, which means that there is
--   an active Connection Key Name, or <tt>Encryption Down</tt>.
--   
--   <a>$sel:lagId:Connection'</a>, <a>connection_lagId</a> - The ID of the
--   LAG.
--   
--   <a>$sel:encryptionMode:Connection'</a>,
--   <a>connection_encryptionMode</a> - The MAC Security (MACsec)
--   connection encryption mode.
--   
--   The valid values are <tt>no_encrypt</tt>, <tt>should_encrypt</tt>, and
--   <tt>must_encrypt</tt>.
--   
--   <a>$sel:partnerName:Connection'</a>, <a>connection_partnerName</a> -
--   The name of the Direct Connect service provider associated with the
--   connection.
--   
--   <a>$sel:tags:Connection'</a>, <a>connection_tags</a> - The tags
--   associated with the connection.
--   
--   <a>$sel:loaIssueTime:Connection'</a>, <a>connection_loaIssueTime</a> -
--   The time of the most recent call to DescribeLoa for this connection.
--   
--   <a>$sel:ownerAccount:Connection'</a>, <a>connection_ownerAccount</a> -
--   The ID of the account that owns the connection.
--   
--   <a>$sel:region:Connection'</a>, <a>connection_region</a> - The Region
--   where the connection is located.
--   
--   <a>$sel:vlan:Connection'</a>, <a>connection_vlan</a> - The ID of the
--   VLAN.
--   
--   <a>$sel:location:Connection'</a>, <a>connection_location</a> - The
--   location of the connection.
--   
--   <a>$sel:macSecCapable:Connection'</a>, <a>connection_macSecCapable</a>
--   - Indicates whether the connection supports MAC Security (MACsec).
newConnection :: Connection

-- | <i>See:</i> <a>newAssociateConnectionWithLag</a> smart constructor.
data AssociateConnectionWithLag
AssociateConnectionWithLag' :: Text -> Text -> AssociateConnectionWithLag

-- | Create a value of <a>AssociateConnectionWithLag</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connectionId:AssociateConnectionWithLag'</a>,
--   <a>associateConnectionWithLag_connectionId</a> - The ID of the
--   connection.
--   
--   <a>$sel:lagId:AssociateConnectionWithLag'</a>,
--   <a>associateConnectionWithLag_lagId</a> - The ID of the LAG with which
--   to associate the connection.
newAssociateConnectionWithLag :: Text -> Text -> AssociateConnectionWithLag

-- | Information about an Direct Connect connection.
--   
--   <i>See:</i> <a>newConnection</a> smart constructor.
data Connection
Connection' :: Maybe Text -> Maybe Text -> Maybe ConnectionState -> Maybe Text -> Maybe [MacSecKey] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe HasLogicalRedundancy -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (NonEmpty Tag) -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Bool -> Connection

-- | Create a value of <a>Connection</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bandwidth:Connection'</a>, <a>connection_bandwidth</a> - The
--   bandwidth of the connection.
--   
--   <a>$sel:awsDeviceV2:Connection'</a>, <a>connection_awsDeviceV2</a> -
--   The Direct Connect endpoint that terminates the physical connection.
--   
--   <a>$sel:connectionState:Connection'</a>,
--   <a>connection_connectionState</a> - The state of the connection. The
--   following are the possible values:
--   
--   <ul>
--   <li><tt>ordering</tt>: The initial state of a hosted connection
--   provisioned on an interconnect. The connection stays in the ordering
--   state until the owner of the hosted connection confirms or declines
--   the connection order.</li>
--   <li><tt>requested</tt>: The initial state of a standard connection.
--   The connection stays in the requested state until the Letter of
--   Authorization (LOA) is sent to the customer.</li>
--   <li><tt>pending</tt>: The connection has been approved and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is up and the connection is
--   ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The connection is being deleted.</li>
--   <li><tt>deleted</tt>: The connection has been deleted.</li>
--   <li><tt>rejected</tt>: A hosted connection in the <tt>ordering</tt>
--   state enters the <tt>rejected</tt> state if it is deleted by the
--   customer.</li>
--   <li><tt>unknown</tt>: The state of the connection is not
--   available.</li>
--   </ul>
--   
--   <a>$sel:connectionName:Connection'</a>,
--   <a>connection_connectionName</a> - The name of the connection.
--   
--   <a>$sel:macSecKeys:Connection'</a>, <a>connection_macSecKeys</a> - The
--   MAC Security (MACsec) security keys associated with the connection.
--   
--   <a>$sel:providerName:Connection'</a>, <a>connection_providerName</a> -
--   The name of the service provider associated with the connection.
--   
--   <a>$sel:connectionId:Connection'</a>, <a>connection_connectionId</a> -
--   The ID of the connection.
--   
--   <a>$sel:awsLogicalDeviceId:Connection'</a>,
--   <a>connection_awsLogicalDeviceId</a> - The Direct Connect endpoint
--   that terminates the logical connection. This device might be different
--   than the device that terminates the physical connection.
--   
--   <a>$sel:hasLogicalRedundancy:Connection'</a>,
--   <a>connection_hasLogicalRedundancy</a> - Indicates whether the
--   connection supports a secondary BGP peer in the same address family
--   (IPv4/IPv6).
--   
--   <a>$sel:awsDevice:Connection'</a>, <a>connection_awsDevice</a> - The
--   Direct Connect endpoint on which the physical connection terminates.
--   
--   <a>$sel:jumboFrameCapable:Connection'</a>,
--   <a>connection_jumboFrameCapable</a> - Indicates whether jumbo frames
--   (9001 MTU) are supported.
--   
--   <a>$sel:portEncryptionStatus:Connection'</a>,
--   <a>connection_portEncryptionStatus</a> - The MAC Security (MACsec)
--   port link status of the connection.
--   
--   The valid values are <tt>Encryption Up</tt>, which means that there is
--   an active Connection Key Name, or <tt>Encryption Down</tt>.
--   
--   <a>$sel:lagId:Connection'</a>, <a>connection_lagId</a> - The ID of the
--   LAG.
--   
--   <a>$sel:encryptionMode:Connection'</a>,
--   <a>connection_encryptionMode</a> - The MAC Security (MACsec)
--   connection encryption mode.
--   
--   The valid values are <tt>no_encrypt</tt>, <tt>should_encrypt</tt>, and
--   <tt>must_encrypt</tt>.
--   
--   <a>$sel:partnerName:Connection'</a>, <a>connection_partnerName</a> -
--   The name of the Direct Connect service provider associated with the
--   connection.
--   
--   <a>$sel:tags:Connection'</a>, <a>connection_tags</a> - The tags
--   associated with the connection.
--   
--   <a>$sel:loaIssueTime:Connection'</a>, <a>connection_loaIssueTime</a> -
--   The time of the most recent call to DescribeLoa for this connection.
--   
--   <a>$sel:ownerAccount:Connection'</a>, <a>connection_ownerAccount</a> -
--   The ID of the account that owns the connection.
--   
--   <a>$sel:region:Connection'</a>, <a>connection_region</a> - The Region
--   where the connection is located.
--   
--   <a>$sel:vlan:Connection'</a>, <a>connection_vlan</a> - The ID of the
--   VLAN.
--   
--   <a>$sel:location:Connection'</a>, <a>connection_location</a> - The
--   location of the connection.
--   
--   <a>$sel:macSecCapable:Connection'</a>, <a>connection_macSecCapable</a>
--   - Indicates whether the connection supports MAC Security (MACsec).
newConnection :: Connection

-- | <i>See:</i> <a>newListVirtualInterfaceTestHistory</a> smart
--   constructor.
data ListVirtualInterfaceTestHistory
ListVirtualInterfaceTestHistory' :: Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> ListVirtualInterfaceTestHistory

-- | Create a value of <a>ListVirtualInterfaceTestHistory</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bgpPeers:ListVirtualInterfaceTestHistory'</a>,
--   <a>listVirtualInterfaceTestHistory_bgpPeers</a> - The BGP peers that
--   were placed in the DOWN state during the virtual interface failover
--   test.
--   
--   <a>$sel:nextToken:ListVirtualInterfaceTestHistory'</a>,
--   <a>listVirtualInterfaceTestHistory_nextToken</a> - The token for the
--   next page of results.
--   
--   <a>$sel:status:ListVirtualInterfaceTestHistory'</a>,
--   <a>listVirtualInterfaceTestHistory_status</a> - The status of the
--   virtual interface failover test.
--   
--   <a>$sel:maxResults:ListVirtualInterfaceTestHistory'</a>,
--   <a>listVirtualInterfaceTestHistory_maxResults</a> - The maximum number
--   of results to return with a single call. To retrieve the remaining
--   results, make another call with the returned <tt>nextToken</tt> value.
--   
--   If <tt>MaxResults</tt> is given a value larger than 100, only 100
--   results are returned.
--   
--   <a>$sel:testId:ListVirtualInterfaceTestHistory'</a>,
--   <a>listVirtualInterfaceTestHistory_testId</a> - The ID of the virtual
--   interface failover test.
--   
--   <a>$sel:virtualInterfaceId:ListVirtualInterfaceTestHistory'</a>,
--   <a>listVirtualInterfaceTestHistory_virtualInterfaceId</a> - The ID of
--   the virtual interface that was tested.
newListVirtualInterfaceTestHistory :: ListVirtualInterfaceTestHistory

-- | <i>See:</i> <a>newListVirtualInterfaceTestHistoryResponse</a> smart
--   constructor.
data ListVirtualInterfaceTestHistoryResponse
ListVirtualInterfaceTestHistoryResponse' :: Maybe Text -> Maybe [VirtualInterfaceTestHistory] -> Int -> ListVirtualInterfaceTestHistoryResponse

-- | Create a value of <a>ListVirtualInterfaceTestHistoryResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListVirtualInterfaceTestHistory'</a>,
--   <a>listVirtualInterfaceTestHistoryResponse_nextToken</a> - The token
--   to use to retrieve the next page of results. This value is
--   <tt>null</tt> when there are no more results to return.
--   
--   
--   <a>$sel:virtualInterfaceTestHistory:ListVirtualInterfaceTestHistoryResponse'</a>,
--   <a>listVirtualInterfaceTestHistoryResponse_virtualInterfaceTestHistory</a>
--   - The ID of the tested virtual interface.
--   
--   <a>$sel:httpStatus:ListVirtualInterfaceTestHistoryResponse'</a>,
--   <a>listVirtualInterfaceTestHistoryResponse_httpStatus</a> - The
--   response's http status code.
newListVirtualInterfaceTestHistoryResponse :: Int -> ListVirtualInterfaceTestHistoryResponse

-- | <i>See:</i> <a>newDisassociateMacSecKey</a> smart constructor.
data DisassociateMacSecKey
DisassociateMacSecKey' :: Text -> Text -> DisassociateMacSecKey

-- | Create a value of <a>DisassociateMacSecKey</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connectionId:DisassociateMacSecKey'</a>,
--   <a>disassociateMacSecKey_connectionId</a> - The ID of the dedicated
--   connection (dxcon-xxxx), or the ID of the LAG (dxlag-xxxx).
--   
--   You can use DescribeConnections or DescribeLags to retrieve connection
--   ID.
--   
--   <a>$sel:secretARN:DisassociateMacSecKey'</a>,
--   <a>disassociateMacSecKey_secretARN</a> - The Amazon Resource Name
--   (ARN) of the MAC Security (MACsec) secret key.
--   
--   You can use DescribeConnections to retrieve the ARN of the MAC
--   Security (MACsec) secret key.
newDisassociateMacSecKey :: Text -> Text -> DisassociateMacSecKey

-- | <i>See:</i> <a>newDisassociateMacSecKeyResponse</a> smart constructor.
data DisassociateMacSecKeyResponse
DisassociateMacSecKeyResponse' :: Maybe [MacSecKey] -> Maybe Text -> Int -> DisassociateMacSecKeyResponse

-- | Create a value of <a>DisassociateMacSecKeyResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:macSecKeys:DisassociateMacSecKeyResponse'</a>,
--   <a>disassociateMacSecKeyResponse_macSecKeys</a> - The MAC Security
--   (MACsec) security keys no longer associated with the dedicated
--   connection.
--   
--   <a>$sel:connectionId:DisassociateMacSecKey'</a>,
--   <a>disassociateMacSecKeyResponse_connectionId</a> - The ID of the
--   dedicated connection (dxcon-xxxx), or the ID of the LAG (dxlag-xxxx).
--   
--   <a>$sel:httpStatus:DisassociateMacSecKeyResponse'</a>,
--   <a>disassociateMacSecKeyResponse_httpStatus</a> - The response's http
--   status code.
newDisassociateMacSecKeyResponse :: Int -> DisassociateMacSecKeyResponse

-- | <i>See:</i> <a>newDescribeLoa</a> smart constructor.
data DescribeLoa
DescribeLoa' :: Maybe Text -> Maybe LoaContentType -> Text -> DescribeLoa

-- | Create a value of <a>DescribeLoa</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:providerName:DescribeLoa'</a>, <a>describeLoa_providerName</a>
--   - The name of the service provider who establishes connectivity on
--   your behalf. If you specify this parameter, the LOA-CFA lists the
--   provider name alongside your company name as the requester of the
--   cross connect.
--   
--   <a>$sel:loaContentType:DescribeLoa'</a>,
--   <a>describeLoa_loaContentType</a> - The standard media type for the
--   LOA-CFA document. The only supported value is application/pdf.
--   
--   <a>$sel:connectionId:DescribeLoa'</a>, <a>describeLoa_connectionId</a>
--   - The ID of a connection, LAG, or interconnect.
newDescribeLoa :: Text -> DescribeLoa

-- | Information about a Letter of Authorization - Connecting Facility
--   Assignment (LOA-CFA) for a connection.
--   
--   <i>See:</i> <a>newDescribeLoaResponse</a> smart constructor.
data DescribeLoaResponse
DescribeLoaResponse' :: Maybe Base64 -> Maybe LoaContentType -> Int -> DescribeLoaResponse

-- | Create a value of <a>DescribeLoaResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:loaContent:DescribeLoaResponse'</a>,
--   <a>describeLoaResponse_loaContent</a> - The binary contents of the
--   LOA-CFA document.-- -- <i>Note:</i> This <tt>Lens</tt> automatically
--   encodes and decodes Base64 data. -- The underlying isomorphism will
--   encode to Base64 representation during -- serialisation, and decode
--   from Base64 representation during deserialisation. -- This
--   <tt>Lens</tt> accepts and returns only raw unencoded data.
--   
--   <a>$sel:loaContentType:DescribeLoa'</a>,
--   <a>describeLoaResponse_loaContentType</a> - The standard media type
--   for the LOA-CFA document. The only supported value is application/pdf.
--   
--   <a>$sel:httpStatus:DescribeLoaResponse'</a>,
--   <a>describeLoaResponse_httpStatus</a> - The response's http status
--   code.
newDescribeLoaResponse :: Int -> DescribeLoaResponse

-- | <i>See:</i> <a>newCreateTransitVirtualInterface</a> smart constructor.
data CreateTransitVirtualInterface
CreateTransitVirtualInterface' :: Text -> NewTransitVirtualInterface -> CreateTransitVirtualInterface

-- | Create a value of <a>CreateTransitVirtualInterface</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connectionId:CreateTransitVirtualInterface'</a>,
--   <a>createTransitVirtualInterface_connectionId</a> - The ID of the
--   connection.
--   
--   
--   <a>$sel:newTransitVirtualInterface':CreateTransitVirtualInterface'</a>,
--   <a>createTransitVirtualInterface_newTransitVirtualInterface</a> -
--   Information about the transit virtual interface.
newCreateTransitVirtualInterface :: Text -> NewTransitVirtualInterface -> CreateTransitVirtualInterface

-- | <i>See:</i> <a>newCreateTransitVirtualInterfaceResponse</a> smart
--   constructor.
data CreateTransitVirtualInterfaceResponse
CreateTransitVirtualInterfaceResponse' :: Maybe VirtualInterface -> Int -> CreateTransitVirtualInterfaceResponse

-- | Create a value of <a>CreateTransitVirtualInterfaceResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:virtualInterface:CreateTransitVirtualInterfaceResponse'</a>,
--   <a>createTransitVirtualInterfaceResponse_virtualInterface</a> -
--   Undocumented member.
--   
--   <a>$sel:httpStatus:CreateTransitVirtualInterfaceResponse'</a>,
--   <a>createTransitVirtualInterfaceResponse_httpStatus</a> - The
--   response's http status code.
newCreateTransitVirtualInterfaceResponse :: Int -> CreateTransitVirtualInterfaceResponse

-- | <i>See:</i> <a>newCreateDirectConnectGateway</a> smart constructor.
data CreateDirectConnectGateway
CreateDirectConnectGateway' :: Maybe Integer -> Text -> CreateDirectConnectGateway

-- | Create a value of <a>CreateDirectConnectGateway</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:amazonSideAsn:CreateDirectConnectGateway'</a>,
--   <a>createDirectConnectGateway_amazonSideAsn</a> - The autonomous
--   system number (ASN) for Border Gateway Protocol (BGP) to be configured
--   on the Amazon side of the connection. The ASN must be in the private
--   range of 64,512 to 65,534 or 4,200,000,000 to 4,294,967,294. The
--   default is 64512.
--   
--   <a>$sel:directConnectGatewayName:CreateDirectConnectGateway'</a>,
--   <a>createDirectConnectGateway_directConnectGatewayName</a> - The name
--   of the Direct Connect gateway.
newCreateDirectConnectGateway :: Text -> CreateDirectConnectGateway

-- | <i>See:</i> <a>newCreateDirectConnectGatewayResponse</a> smart
--   constructor.
data CreateDirectConnectGatewayResponse
CreateDirectConnectGatewayResponse' :: Maybe DirectConnectGateway -> Int -> CreateDirectConnectGatewayResponse

-- | Create a value of <a>CreateDirectConnectGatewayResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:directConnectGateway:CreateDirectConnectGatewayResponse'</a>,
--   <a>createDirectConnectGatewayResponse_directConnectGateway</a> - The
--   Direct Connect gateway.
--   
--   <a>$sel:httpStatus:CreateDirectConnectGatewayResponse'</a>,
--   <a>createDirectConnectGatewayResponse_httpStatus</a> - The response's
--   http status code.
newCreateDirectConnectGatewayResponse :: Int -> CreateDirectConnectGatewayResponse

-- | <i>See:</i> <a>newDescribeInterconnects</a> smart constructor.
data DescribeInterconnects
DescribeInterconnects' :: Maybe Text -> DescribeInterconnects

-- | Create a value of <a>DescribeInterconnects</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:interconnectId:DescribeInterconnects'</a>,
--   <a>describeInterconnects_interconnectId</a> - The ID of the
--   interconnect.
newDescribeInterconnects :: DescribeInterconnects

-- | <i>See:</i> <a>newDescribeInterconnectsResponse</a> smart constructor.
data DescribeInterconnectsResponse
DescribeInterconnectsResponse' :: Maybe [Interconnect] -> Int -> DescribeInterconnectsResponse

-- | Create a value of <a>DescribeInterconnectsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:interconnects:DescribeInterconnectsResponse'</a>,
--   <a>describeInterconnectsResponse_interconnects</a> - The
--   interconnects.
--   
--   <a>$sel:httpStatus:DescribeInterconnectsResponse'</a>,
--   <a>describeInterconnectsResponse_httpStatus</a> - The response's http
--   status code.
newDescribeInterconnectsResponse :: Int -> DescribeInterconnectsResponse

-- | <i>See:</i> <a>newDescribeLags</a> smart constructor.
data DescribeLags
DescribeLags' :: Maybe Text -> DescribeLags

-- | Create a value of <a>DescribeLags</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lagId:DescribeLags'</a>, <a>describeLags_lagId</a> - The ID of
--   the LAG.
newDescribeLags :: DescribeLags

-- | <i>See:</i> <a>newDescribeLagsResponse</a> smart constructor.
data DescribeLagsResponse
DescribeLagsResponse' :: Maybe [Lag] -> Int -> DescribeLagsResponse

-- | Create a value of <a>DescribeLagsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lags:DescribeLagsResponse'</a>,
--   <a>describeLagsResponse_lags</a> - The LAGs.
--   
--   <a>$sel:httpStatus:DescribeLagsResponse'</a>,
--   <a>describeLagsResponse_httpStatus</a> - The response's http status
--   code.
newDescribeLagsResponse :: Int -> DescribeLagsResponse

-- | <i>See:</i> <a>newConfirmTransitVirtualInterface</a> smart
--   constructor.
data ConfirmTransitVirtualInterface
ConfirmTransitVirtualInterface' :: Text -> Text -> ConfirmTransitVirtualInterface

-- | Create a value of <a>ConfirmTransitVirtualInterface</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:virtualInterfaceId:ConfirmTransitVirtualInterface'</a>,
--   <a>confirmTransitVirtualInterface_virtualInterfaceId</a> - The ID of
--   the virtual interface.
--   
--   <a>$sel:directConnectGatewayId:ConfirmTransitVirtualInterface'</a>,
--   <a>confirmTransitVirtualInterface_directConnectGatewayId</a> - The ID
--   of the Direct Connect gateway.
newConfirmTransitVirtualInterface :: Text -> Text -> ConfirmTransitVirtualInterface

-- | <i>See:</i> <a>newConfirmTransitVirtualInterfaceResponse</a> smart
--   constructor.
data ConfirmTransitVirtualInterfaceResponse
ConfirmTransitVirtualInterfaceResponse' :: Maybe VirtualInterfaceState -> Int -> ConfirmTransitVirtualInterfaceResponse

-- | Create a value of <a>ConfirmTransitVirtualInterfaceResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:virtualInterfaceState:ConfirmTransitVirtualInterfaceResponse'</a>,
--   <a>confirmTransitVirtualInterfaceResponse_virtualInterfaceState</a> -
--   The state of the virtual interface. The following are the possible
--   values:
--   
--   <ul>
--   <li><tt>confirming</tt>: The creation of the virtual interface is
--   pending confirmation from the virtual interface owner. If the owner of
--   the virtual interface is different from the owner of the connection on
--   which it is provisioned, then the virtual interface will remain in
--   this state until it is confirmed by the virtual interface owner.</li>
--   <li><tt>verifying</tt>: This state only applies to public virtual
--   interfaces. Each public virtual interface needs validation before the
--   virtual interface can be created.</li>
--   <li><tt>pending</tt>: A virtual interface is in this state from the
--   time that it is created until the virtual interface is ready to
--   forward traffic.</li>
--   <li><tt>available</tt>: A virtual interface that is able to forward
--   traffic.</li>
--   <li><tt>down</tt>: A virtual interface that is BGP down.</li>
--   <li><tt>deleting</tt>: A virtual interface is in this state
--   immediately after calling DeleteVirtualInterface until it can no
--   longer forward traffic.</li>
--   <li><tt>deleted</tt>: A virtual interface that cannot forward
--   traffic.</li>
--   <li><tt>rejected</tt>: The virtual interface owner has declined
--   creation of the virtual interface. If a virtual interface in the
--   <tt>Confirming</tt> state is deleted by the virtual interface owner,
--   the virtual interface enters the <tt>Rejected</tt> state.</li>
--   <li><tt>unknown</tt>: The state of the virtual interface is not
--   available.</li>
--   </ul>
--   
--   <a>$sel:httpStatus:ConfirmTransitVirtualInterfaceResponse'</a>,
--   <a>confirmTransitVirtualInterfaceResponse_httpStatus</a> - The
--   response's http status code.
newConfirmTransitVirtualInterfaceResponse :: Int -> ConfirmTransitVirtualInterfaceResponse

-- | <i>See:</i> <a>newCreateLag</a> smart constructor.
data CreateLag
CreateLag' :: Maybe Text -> Maybe Text -> Maybe (NonEmpty Tag) -> Maybe (NonEmpty Tag) -> Maybe Bool -> Int -> Text -> Text -> Text -> CreateLag

-- | Create a value of <a>CreateLag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:providerName:CreateLag'</a>, <a>createLag_providerName</a> -
--   The name of the service provider associated with the LAG.
--   
--   <a>$sel:connectionId:CreateLag'</a>, <a>createLag_connectionId</a> -
--   The ID of an existing dedicated connection to migrate to the LAG.
--   
--   <a>$sel:childConnectionTags:CreateLag'</a>,
--   <a>createLag_childConnectionTags</a> - The tags to associate with the
--   automtically created LAGs.
--   
--   <a>$sel:tags:CreateLag'</a>, <a>createLag_tags</a> - The tags to
--   associate with the LAG.
--   
--   <a>$sel:requestMACSec:CreateLag'</a>, <a>createLag_requestMACSec</a> -
--   Indicates whether the connection will support MAC Security (MACsec).
--   
--   All connections in the LAG must be capable of supporting MAC Security
--   (MACsec). For information about MAC Security (MACsec) prerequisties,
--   see <a>MACsec prerequisties</a> in the <i>Direct Connect User
--   Guide</i>.
--   
--   <a>$sel:numberOfConnections:CreateLag'</a>,
--   <a>createLag_numberOfConnections</a> - The number of physical
--   dedicated connections initially provisioned and bundled by the LAG.
--   
--   <a>$sel:location:CreateLag'</a>, <a>createLag_location</a> - The
--   location for the LAG.
--   
--   <a>$sel:connectionsBandwidth:CreateLag'</a>,
--   <a>createLag_connectionsBandwidth</a> - The bandwidth of the
--   individual physical dedicated connections bundled by the LAG. The
--   possible values are 1Gbps and 10Gbps.
--   
--   <a>$sel:lagName:CreateLag'</a>, <a>createLag_lagName</a> - The name of
--   the LAG.
newCreateLag :: Int -> Text -> Text -> Text -> CreateLag

-- | Information about a link aggregation group (LAG).
--   
--   <i>See:</i> <a>newLag</a> smart constructor.
data Lag
Lag' :: Maybe Int -> Maybe Text -> Maybe Bool -> Maybe [MacSecKey] -> Maybe Text -> Maybe Text -> Maybe HasLogicalRedundancy -> Maybe Text -> Maybe [Connection] -> Maybe Text -> Maybe LagState -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (NonEmpty Tag) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Bool -> Lag

-- | Create a value of <a>Lag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:numberOfConnections:Lag'</a>, <a>lag_numberOfConnections</a> -
--   The number of physical dedicated connections bundled by the LAG, up to
--   a maximum of 10.
--   
--   <a>$sel:awsDeviceV2:Lag'</a>, <a>lag_awsDeviceV2</a> - The Direct
--   Connect endpoint that hosts the LAG.
--   
--   <a>$sel:allowsHostedConnections:Lag'</a>,
--   <a>lag_allowsHostedConnections</a> - Indicates whether the LAG can
--   host other connections.
--   
--   <a>$sel:macSecKeys:Lag'</a>, <a>lag_macSecKeys</a> - The MAC Security
--   (MACsec) security keys associated with the LAG.
--   
--   <a>$sel:providerName:Lag'</a>, <a>lag_providerName</a> - The name of
--   the service provider associated with the LAG.
--   
--   <a>$sel:awsLogicalDeviceId:Lag'</a>, <a>lag_awsLogicalDeviceId</a> -
--   The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
--   
--   <a>$sel:hasLogicalRedundancy:Lag'</a>, <a>lag_hasLogicalRedundancy</a>
--   - Indicates whether the LAG supports a secondary BGP peer in the same
--   address family (IPv4/IPv6).
--   
--   <a>$sel:lagName:Lag'</a>, <a>lag_lagName</a> - The name of the LAG.
--   
--   <a>$sel:connections:Lag'</a>, <a>lag_connections</a> - The connections
--   bundled by the LAG.
--   
--   <a>$sel:awsDevice:Lag'</a>, <a>lag_awsDevice</a> - The Direct Connect
--   endpoint that hosts the LAG.
--   
--   <a>$sel:lagState:Lag'</a>, <a>lag_lagState</a> - The state of the LAG.
--   The following are the possible values:
--   
--   <ul>
--   <li><tt>requested</tt>: The initial state of a LAG. The LAG stays in
--   the requested state until the Letter of Authorization (LOA) is
--   available.</li>
--   <li><tt>pending</tt>: The LAG has been approved and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is established and the LAG is
--   ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The LAG is being deleted.</li>
--   <li><tt>deleted</tt>: The LAG is deleted.</li>
--   <li><tt>unknown</tt>: The state of the LAG is not available.</li>
--   </ul>
--   
--   <a>$sel:jumboFrameCapable:Lag'</a>, <a>lag_jumboFrameCapable</a> -
--   Indicates whether jumbo frames (9001 MTU) are supported.
--   
--   <a>$sel:connectionsBandwidth:Lag'</a>, <a>lag_connectionsBandwidth</a>
--   - The individual bandwidth of the physical connections bundled by the
--   LAG. The possible values are 1Gbps and 10Gbps.
--   
--   <a>$sel:lagId:Lag'</a>, <a>lag_lagId</a> - The ID of the LAG.
--   
--   <a>$sel:encryptionMode:Lag'</a>, <a>lag_encryptionMode</a> - The LAG
--   MAC Security (MACsec) encryption mode.
--   
--   The valid values are <tt>no_encrypt</tt>, <tt>should_encrypt</tt>, and
--   <tt>must_encrypt</tt>.
--   
--   <a>$sel:tags:Lag'</a>, <a>lag_tags</a> - The tags associated with the
--   LAG.
--   
--   <a>$sel:ownerAccount:Lag'</a>, <a>lag_ownerAccount</a> - The ID of the
--   account that owns the LAG.
--   
--   <a>$sel:region:Lag'</a>, <a>lag_region</a> - The Region where the
--   connection is located.
--   
--   <a>$sel:location:Lag'</a>, <a>lag_location</a> - The location of the
--   LAG.
--   
--   <a>$sel:minimumLinks:Lag'</a>, <a>lag_minimumLinks</a> - The minimum
--   number of physical dedicated connections that must be operational for
--   the LAG itself to be operational.
--   
--   <a>$sel:macSecCapable:Lag'</a>, <a>lag_macSecCapable</a> - Indicates
--   whether the LAG supports MAC Security (MACsec).
newLag :: Lag

-- | <i>See:</i> <a>newDeleteBGPPeer</a> smart constructor.
data DeleteBGPPeer
DeleteBGPPeer' :: Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> DeleteBGPPeer

-- | Create a value of <a>DeleteBGPPeer</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:asn:DeleteBGPPeer'</a>, <a>deleteBGPPeer_asn</a> - The
--   autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
--   
--   <a>$sel:bgpPeerId:DeleteBGPPeer'</a>, <a>deleteBGPPeer_bgpPeerId</a> -
--   The ID of the BGP peer.
--   
--   <a>$sel:virtualInterfaceId:DeleteBGPPeer'</a>,
--   <a>deleteBGPPeer_virtualInterfaceId</a> - The ID of the virtual
--   interface.
--   
--   <a>$sel:customerAddress:DeleteBGPPeer'</a>,
--   <a>deleteBGPPeer_customerAddress</a> - The IP address assigned to the
--   customer interface.
newDeleteBGPPeer :: DeleteBGPPeer

-- | <i>See:</i> <a>newDeleteBGPPeerResponse</a> smart constructor.
data DeleteBGPPeerResponse
DeleteBGPPeerResponse' :: Maybe VirtualInterface -> Int -> DeleteBGPPeerResponse

-- | Create a value of <a>DeleteBGPPeerResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:virtualInterface:DeleteBGPPeerResponse'</a>,
--   <a>deleteBGPPeerResponse_virtualInterface</a> - The virtual interface.
--   
--   <a>$sel:httpStatus:DeleteBGPPeerResponse'</a>,
--   <a>deleteBGPPeerResponse_httpStatus</a> - The response's http status
--   code.
newDeleteBGPPeerResponse :: Int -> DeleteBGPPeerResponse

-- | <i>See:</i> <a>newAllocateTransitVirtualInterface</a> smart
--   constructor.
data AllocateTransitVirtualInterface
AllocateTransitVirtualInterface' :: Text -> Text -> NewTransitVirtualInterfaceAllocation -> AllocateTransitVirtualInterface

-- | Create a value of <a>AllocateTransitVirtualInterface</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connectionId:AllocateTransitVirtualInterface'</a>,
--   <a>allocateTransitVirtualInterface_connectionId</a> - The ID of the
--   connection on which the transit virtual interface is provisioned.
--   
--   <a>$sel:ownerAccount:AllocateTransitVirtualInterface'</a>,
--   <a>allocateTransitVirtualInterface_ownerAccount</a> - The ID of the
--   account that owns the transit virtual interface.
--   
--   
--   <a>$sel:newTransitVirtualInterfaceAllocation':AllocateTransitVirtualInterface'</a>,
--   <a>allocateTransitVirtualInterface_newTransitVirtualInterfaceAllocation</a>
--   - Information about the transit virtual interface.
newAllocateTransitVirtualInterface :: Text -> Text -> NewTransitVirtualInterfaceAllocation -> AllocateTransitVirtualInterface

-- | <i>See:</i> <a>newAllocateTransitVirtualInterfaceResponse</a> smart
--   constructor.
data AllocateTransitVirtualInterfaceResponse
AllocateTransitVirtualInterfaceResponse' :: Maybe VirtualInterface -> Int -> AllocateTransitVirtualInterfaceResponse

-- | Create a value of <a>AllocateTransitVirtualInterfaceResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:virtualInterface:AllocateTransitVirtualInterfaceResponse'</a>,
--   <a>allocateTransitVirtualInterfaceResponse_virtualInterface</a> -
--   Undocumented member.
--   
--   <a>$sel:httpStatus:AllocateTransitVirtualInterfaceResponse'</a>,
--   <a>allocateTransitVirtualInterfaceResponse_httpStatus</a> - The
--   response's http status code.
newAllocateTransitVirtualInterfaceResponse :: Int -> AllocateTransitVirtualInterfaceResponse

-- | <i>See:</i> <a>newDeleteDirectConnectGatewayAssociation</a> smart
--   constructor.
data DeleteDirectConnectGatewayAssociation
DeleteDirectConnectGatewayAssociation' :: Maybe Text -> Maybe Text -> Maybe Text -> DeleteDirectConnectGatewayAssociation

-- | Create a value of <a>DeleteDirectConnectGatewayAssociation</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:virtualGatewayId:DeleteDirectConnectGatewayAssociation'</a>,
--   <a>deleteDirectConnectGatewayAssociation_virtualGatewayId</a> - The ID
--   of the virtual private gateway.
--   
--   <a>$sel:associationId:DeleteDirectConnectGatewayAssociation'</a>,
--   <a>deleteDirectConnectGatewayAssociation_associationId</a> - The ID of
--   the Direct Connect gateway association.
--   
--   
--   <a>$sel:directConnectGatewayId:DeleteDirectConnectGatewayAssociation'</a>,
--   <a>deleteDirectConnectGatewayAssociation_directConnectGatewayId</a> -
--   The ID of the Direct Connect gateway.
newDeleteDirectConnectGatewayAssociation :: DeleteDirectConnectGatewayAssociation

-- | <i>See:</i> <a>newDeleteDirectConnectGatewayAssociationResponse</a>
--   smart constructor.
data DeleteDirectConnectGatewayAssociationResponse
DeleteDirectConnectGatewayAssociationResponse' :: Maybe DirectConnectGatewayAssociation -> Int -> DeleteDirectConnectGatewayAssociationResponse

-- | Create a value of <a>DeleteDirectConnectGatewayAssociationResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:directConnectGatewayAssociation:DeleteDirectConnectGatewayAssociationResponse'</a>,
--   <a>deleteDirectConnectGatewayAssociationResponse_directConnectGatewayAssociation</a>
--   - Information about the deleted association.
--   
--   <a>$sel:httpStatus:DeleteDirectConnectGatewayAssociationResponse'</a>,
--   <a>deleteDirectConnectGatewayAssociationResponse_httpStatus</a> - The
--   response's http status code.
newDeleteDirectConnectGatewayAssociationResponse :: Int -> DeleteDirectConnectGatewayAssociationResponse

-- | <i>See:</i> <a>newUpdateDirectConnectGatewayAssociation</a> smart
--   constructor.
data UpdateDirectConnectGatewayAssociation
UpdateDirectConnectGatewayAssociation' :: Maybe [RouteFilterPrefix] -> Maybe [RouteFilterPrefix] -> Maybe Text -> UpdateDirectConnectGatewayAssociation

-- | Create a value of <a>UpdateDirectConnectGatewayAssociation</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:removeAllowedPrefixesToDirectConnectGateway:UpdateDirectConnectGatewayAssociation'</a>,
--   <a>updateDirectConnectGatewayAssociation_removeAllowedPrefixesToDirectConnectGateway</a>
--   - The Amazon VPC prefixes to no longer advertise to the Direct Connect
--   gateway.
--   
--   
--   <a>$sel:addAllowedPrefixesToDirectConnectGateway:UpdateDirectConnectGatewayAssociation'</a>,
--   <a>updateDirectConnectGatewayAssociation_addAllowedPrefixesToDirectConnectGateway</a>
--   - The Amazon VPC prefixes to advertise to the Direct Connect gateway.
--   
--   <a>$sel:associationId:UpdateDirectConnectGatewayAssociation'</a>,
--   <a>updateDirectConnectGatewayAssociation_associationId</a> - The ID of
--   the Direct Connect gateway association.
newUpdateDirectConnectGatewayAssociation :: UpdateDirectConnectGatewayAssociation

-- | <i>See:</i> <a>newUpdateDirectConnectGatewayAssociationResponse</a>
--   smart constructor.
data UpdateDirectConnectGatewayAssociationResponse
UpdateDirectConnectGatewayAssociationResponse' :: Maybe DirectConnectGatewayAssociation -> Int -> UpdateDirectConnectGatewayAssociationResponse

-- | Create a value of <a>UpdateDirectConnectGatewayAssociationResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:directConnectGatewayAssociation:UpdateDirectConnectGatewayAssociationResponse'</a>,
--   <a>updateDirectConnectGatewayAssociationResponse_directConnectGatewayAssociation</a>
--   - Undocumented member.
--   
--   <a>$sel:httpStatus:UpdateDirectConnectGatewayAssociationResponse'</a>,
--   <a>updateDirectConnectGatewayAssociationResponse_httpStatus</a> - The
--   response's http status code.
newUpdateDirectConnectGatewayAssociationResponse :: Int -> UpdateDirectConnectGatewayAssociationResponse

-- | <i>See:</i> <a>newDescribeLocations</a> smart constructor.
data DescribeLocations
DescribeLocations' :: DescribeLocations

-- | Create a value of <a>DescribeLocations</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDescribeLocations :: DescribeLocations

-- | <i>See:</i> <a>newDescribeLocationsResponse</a> smart constructor.
data DescribeLocationsResponse
DescribeLocationsResponse' :: Maybe [Location] -> Int -> DescribeLocationsResponse

-- | Create a value of <a>DescribeLocationsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:locations:DescribeLocationsResponse'</a>,
--   <a>describeLocationsResponse_locations</a> - The locations.
--   
--   <a>$sel:httpStatus:DescribeLocationsResponse'</a>,
--   <a>describeLocationsResponse_httpStatus</a> - The response's http
--   status code.
newDescribeLocationsResponse :: Int -> DescribeLocationsResponse

-- | <i>See:</i> <a>newDescribeConnections</a> smart constructor.
data DescribeConnections
DescribeConnections' :: Maybe Text -> DescribeConnections

-- | Create a value of <a>DescribeConnections</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connectionId:DescribeConnections'</a>,
--   <a>describeConnections_connectionId</a> - The ID of the connection.
newDescribeConnections :: DescribeConnections

-- | <i>See:</i> <a>newConnections</a> smart constructor.
data Connections
Connections' :: Maybe [Connection] -> Connections

-- | Create a value of <a>Connections</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connections:Connections'</a>, <a>connections_connections</a> -
--   The connections.
newConnections :: Connections

-- | <i>See:</i> <a>newAllocatePublicVirtualInterface</a> smart
--   constructor.
data AllocatePublicVirtualInterface
AllocatePublicVirtualInterface' :: Text -> Text -> NewPublicVirtualInterfaceAllocation -> AllocatePublicVirtualInterface

-- | Create a value of <a>AllocatePublicVirtualInterface</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connectionId:AllocatePublicVirtualInterface'</a>,
--   <a>allocatePublicVirtualInterface_connectionId</a> - The ID of the
--   connection on which the public virtual interface is provisioned.
--   
--   <a>$sel:ownerAccount:AllocatePublicVirtualInterface'</a>,
--   <a>allocatePublicVirtualInterface_ownerAccount</a> - The ID of the
--   account that owns the public virtual interface.
--   
--   
--   <a>$sel:newPublicVirtualInterfaceAllocation':AllocatePublicVirtualInterface'</a>,
--   <a>allocatePublicVirtualInterface_newPublicVirtualInterfaceAllocation</a>
--   - Information about the public virtual interface.
newAllocatePublicVirtualInterface :: Text -> Text -> NewPublicVirtualInterfaceAllocation -> AllocatePublicVirtualInterface

-- | Information about a virtual interface.
--   
--   <i>See:</i> <a>newVirtualInterface</a> smart constructor.
data VirtualInterface
VirtualInterface' :: Maybe Text -> Maybe [BGPPeer] -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe [RouteFilterPrefix] -> Maybe Int -> Maybe Text -> Maybe Integer -> Maybe Text -> Maybe (NonEmpty Tag) -> Maybe Text -> Maybe Text -> Maybe VirtualInterfaceState -> Maybe Text -> Maybe AddressFamily -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> VirtualInterface

-- | Create a value of <a>VirtualInterface</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authKey:VirtualInterface'</a>, <a>virtualInterface_authKey</a>
--   - The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
--   
--   <a>$sel:bgpPeers:VirtualInterface'</a>,
--   <a>virtualInterface_bgpPeers</a> - The BGP peers configured on this
--   virtual interface.
--   
--   <a>$sel:virtualGatewayId:VirtualInterface'</a>,
--   <a>virtualInterface_virtualGatewayId</a> - The ID of the virtual
--   private gateway. Applies only to private virtual interfaces.
--   
--   <a>$sel:asn:VirtualInterface'</a>, <a>virtualInterface_asn</a> - The
--   autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
--   
--   The valid values are 1-2147483647.
--   
--   <a>$sel:awsDeviceV2:VirtualInterface'</a>,
--   <a>virtualInterface_awsDeviceV2</a> - The Direct Connect endpoint that
--   terminates the physical connection.
--   
--   <a>$sel:connectionId:VirtualInterface'</a>,
--   <a>virtualInterface_connectionId</a> - The ID of the connection.
--   
--   <a>$sel:awsLogicalDeviceId:VirtualInterface'</a>,
--   <a>virtualInterface_awsLogicalDeviceId</a> - The Direct Connect
--   endpoint that terminates the logical connection. This device might be
--   different than the device that terminates the physical connection.
--   
--   <a>$sel:customerRouterConfig:VirtualInterface'</a>,
--   <a>virtualInterface_customerRouterConfig</a> - The customer router
--   configuration.
--   
--   <a>$sel:jumboFrameCapable:VirtualInterface'</a>,
--   <a>virtualInterface_jumboFrameCapable</a> - Indicates whether jumbo
--   frames (9001 MTU) are supported.
--   
--   <a>$sel:routeFilterPrefixes:VirtualInterface'</a>,
--   <a>virtualInterface_routeFilterPrefixes</a> - The routes to be
--   advertised to the Amazon Web Services network in this Region. Applies
--   to public virtual interfaces.
--   
--   <a>$sel:mtu:VirtualInterface'</a>, <a>virtualInterface_mtu</a> - The
--   maximum transmission unit (MTU), in bytes. The supported values are
--   1500 and 9001. The default value is 1500.
--   
--   <a>$sel:virtualInterfaceType:VirtualInterface'</a>,
--   <a>virtualInterface_virtualInterfaceType</a> - The type of virtual
--   interface. The possible values are <tt>private</tt> and
--   <tt>public</tt>.
--   
--   <a>$sel:amazonSideAsn:VirtualInterface'</a>,
--   <a>virtualInterface_amazonSideAsn</a> - The autonomous system number
--   (ASN) for the Amazon side of the connection.
--   
--   <a>$sel:virtualInterfaceId:VirtualInterface'</a>,
--   <a>virtualInterface_virtualInterfaceId</a> - The ID of the virtual
--   interface.
--   
--   <a>$sel:tags:VirtualInterface'</a>, <a>virtualInterface_tags</a> - The
--   tags associated with the virtual interface.
--   
--   <a>$sel:directConnectGatewayId:VirtualInterface'</a>,
--   <a>virtualInterface_directConnectGatewayId</a> - The ID of the Direct
--   Connect gateway.
--   
--   <a>$sel:virtualInterfaceName:VirtualInterface'</a>,
--   <a>virtualInterface_virtualInterfaceName</a> - The name of the virtual
--   interface assigned by the customer network. The name has a maximum of
--   100 characters. The following are valid characters: a-z, 0-9 and a
--   hyphen (-).
--   
--   <a>$sel:virtualInterfaceState:VirtualInterface'</a>,
--   <a>virtualInterface_virtualInterfaceState</a> - The state of the
--   virtual interface. The following are the possible values:
--   
--   <ul>
--   <li><tt>confirming</tt>: The creation of the virtual interface is
--   pending confirmation from the virtual interface owner. If the owner of
--   the virtual interface is different from the owner of the connection on
--   which it is provisioned, then the virtual interface will remain in
--   this state until it is confirmed by the virtual interface owner.</li>
--   <li><tt>verifying</tt>: This state only applies to public virtual
--   interfaces. Each public virtual interface needs validation before the
--   virtual interface can be created.</li>
--   <li><tt>pending</tt>: A virtual interface is in this state from the
--   time that it is created until the virtual interface is ready to
--   forward traffic.</li>
--   <li><tt>available</tt>: A virtual interface that is able to forward
--   traffic.</li>
--   <li><tt>down</tt>: A virtual interface that is BGP down.</li>
--   <li><tt>deleting</tt>: A virtual interface is in this state
--   immediately after calling DeleteVirtualInterface until it can no
--   longer forward traffic.</li>
--   <li><tt>deleted</tt>: A virtual interface that cannot forward
--   traffic.</li>
--   <li><tt>rejected</tt>: The virtual interface owner has declined
--   creation of the virtual interface. If a virtual interface in the
--   <tt>Confirming</tt> state is deleted by the virtual interface owner,
--   the virtual interface enters the <tt>Rejected</tt> state.</li>
--   <li><tt>unknown</tt>: The state of the virtual interface is not
--   available.</li>
--   </ul>
--   
--   <a>$sel:amazonAddress:VirtualInterface'</a>,
--   <a>virtualInterface_amazonAddress</a> - The IP address assigned to the
--   Amazon interface.
--   
--   <a>$sel:addressFamily:VirtualInterface'</a>,
--   <a>virtualInterface_addressFamily</a> - The address family for the BGP
--   peer.
--   
--   <a>$sel:ownerAccount:VirtualInterface'</a>,
--   <a>virtualInterface_ownerAccount</a> - The ID of the account that owns
--   the virtual interface.
--   
--   <a>$sel:region:VirtualInterface'</a>, <a>virtualInterface_region</a> -
--   The Region where the virtual interface is located.
--   
--   <a>$sel:vlan:VirtualInterface'</a>, <a>virtualInterface_vlan</a> - The
--   ID of the VLAN.
--   
--   <a>$sel:location:VirtualInterface'</a>,
--   <a>virtualInterface_location</a> - The location of the connection.
--   
--   <a>$sel:customerAddress:VirtualInterface'</a>,
--   <a>virtualInterface_customerAddress</a> - The IP address assigned to
--   the customer interface.
newVirtualInterface :: VirtualInterface

-- | <i>See:</i> <a>newAssociateVirtualInterface</a> smart constructor.
data AssociateVirtualInterface
AssociateVirtualInterface' :: Text -> Text -> AssociateVirtualInterface

-- | Create a value of <a>AssociateVirtualInterface</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:virtualInterfaceId:AssociateVirtualInterface'</a>,
--   <a>associateVirtualInterface_virtualInterfaceId</a> - The ID of the
--   virtual interface.
--   
--   <a>$sel:connectionId:AssociateVirtualInterface'</a>,
--   <a>associateVirtualInterface_connectionId</a> - The ID of the LAG or
--   connection.
newAssociateVirtualInterface :: Text -> Text -> AssociateVirtualInterface

-- | Information about a virtual interface.
--   
--   <i>See:</i> <a>newVirtualInterface</a> smart constructor.
data VirtualInterface
VirtualInterface' :: Maybe Text -> Maybe [BGPPeer] -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe [RouteFilterPrefix] -> Maybe Int -> Maybe Text -> Maybe Integer -> Maybe Text -> Maybe (NonEmpty Tag) -> Maybe Text -> Maybe Text -> Maybe VirtualInterfaceState -> Maybe Text -> Maybe AddressFamily -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> VirtualInterface

-- | Create a value of <a>VirtualInterface</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authKey:VirtualInterface'</a>, <a>virtualInterface_authKey</a>
--   - The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
--   
--   <a>$sel:bgpPeers:VirtualInterface'</a>,
--   <a>virtualInterface_bgpPeers</a> - The BGP peers configured on this
--   virtual interface.
--   
--   <a>$sel:virtualGatewayId:VirtualInterface'</a>,
--   <a>virtualInterface_virtualGatewayId</a> - The ID of the virtual
--   private gateway. Applies only to private virtual interfaces.
--   
--   <a>$sel:asn:VirtualInterface'</a>, <a>virtualInterface_asn</a> - The
--   autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
--   
--   The valid values are 1-2147483647.
--   
--   <a>$sel:awsDeviceV2:VirtualInterface'</a>,
--   <a>virtualInterface_awsDeviceV2</a> - The Direct Connect endpoint that
--   terminates the physical connection.
--   
--   <a>$sel:connectionId:VirtualInterface'</a>,
--   <a>virtualInterface_connectionId</a> - The ID of the connection.
--   
--   <a>$sel:awsLogicalDeviceId:VirtualInterface'</a>,
--   <a>virtualInterface_awsLogicalDeviceId</a> - The Direct Connect
--   endpoint that terminates the logical connection. This device might be
--   different than the device that terminates the physical connection.
--   
--   <a>$sel:customerRouterConfig:VirtualInterface'</a>,
--   <a>virtualInterface_customerRouterConfig</a> - The customer router
--   configuration.
--   
--   <a>$sel:jumboFrameCapable:VirtualInterface'</a>,
--   <a>virtualInterface_jumboFrameCapable</a> - Indicates whether jumbo
--   frames (9001 MTU) are supported.
--   
--   <a>$sel:routeFilterPrefixes:VirtualInterface'</a>,
--   <a>virtualInterface_routeFilterPrefixes</a> - The routes to be
--   advertised to the Amazon Web Services network in this Region. Applies
--   to public virtual interfaces.
--   
--   <a>$sel:mtu:VirtualInterface'</a>, <a>virtualInterface_mtu</a> - The
--   maximum transmission unit (MTU), in bytes. The supported values are
--   1500 and 9001. The default value is 1500.
--   
--   <a>$sel:virtualInterfaceType:VirtualInterface'</a>,
--   <a>virtualInterface_virtualInterfaceType</a> - The type of virtual
--   interface. The possible values are <tt>private</tt> and
--   <tt>public</tt>.
--   
--   <a>$sel:amazonSideAsn:VirtualInterface'</a>,
--   <a>virtualInterface_amazonSideAsn</a> - The autonomous system number
--   (ASN) for the Amazon side of the connection.
--   
--   <a>$sel:virtualInterfaceId:VirtualInterface'</a>,
--   <a>virtualInterface_virtualInterfaceId</a> - The ID of the virtual
--   interface.
--   
--   <a>$sel:tags:VirtualInterface'</a>, <a>virtualInterface_tags</a> - The
--   tags associated with the virtual interface.
--   
--   <a>$sel:directConnectGatewayId:VirtualInterface'</a>,
--   <a>virtualInterface_directConnectGatewayId</a> - The ID of the Direct
--   Connect gateway.
--   
--   <a>$sel:virtualInterfaceName:VirtualInterface'</a>,
--   <a>virtualInterface_virtualInterfaceName</a> - The name of the virtual
--   interface assigned by the customer network. The name has a maximum of
--   100 characters. The following are valid characters: a-z, 0-9 and a
--   hyphen (-).
--   
--   <a>$sel:virtualInterfaceState:VirtualInterface'</a>,
--   <a>virtualInterface_virtualInterfaceState</a> - The state of the
--   virtual interface. The following are the possible values:
--   
--   <ul>
--   <li><tt>confirming</tt>: The creation of the virtual interface is
--   pending confirmation from the virtual interface owner. If the owner of
--   the virtual interface is different from the owner of the connection on
--   which it is provisioned, then the virtual interface will remain in
--   this state until it is confirmed by the virtual interface owner.</li>
--   <li><tt>verifying</tt>: This state only applies to public virtual
--   interfaces. Each public virtual interface needs validation before the
--   virtual interface can be created.</li>
--   <li><tt>pending</tt>: A virtual interface is in this state from the
--   time that it is created until the virtual interface is ready to
--   forward traffic.</li>
--   <li><tt>available</tt>: A virtual interface that is able to forward
--   traffic.</li>
--   <li><tt>down</tt>: A virtual interface that is BGP down.</li>
--   <li><tt>deleting</tt>: A virtual interface is in this state
--   immediately after calling DeleteVirtualInterface until it can no
--   longer forward traffic.</li>
--   <li><tt>deleted</tt>: A virtual interface that cannot forward
--   traffic.</li>
--   <li><tt>rejected</tt>: The virtual interface owner has declined
--   creation of the virtual interface. If a virtual interface in the
--   <tt>Confirming</tt> state is deleted by the virtual interface owner,
--   the virtual interface enters the <tt>Rejected</tt> state.</li>
--   <li><tt>unknown</tt>: The state of the virtual interface is not
--   available.</li>
--   </ul>
--   
--   <a>$sel:amazonAddress:VirtualInterface'</a>,
--   <a>virtualInterface_amazonAddress</a> - The IP address assigned to the
--   Amazon interface.
--   
--   <a>$sel:addressFamily:VirtualInterface'</a>,
--   <a>virtualInterface_addressFamily</a> - The address family for the BGP
--   peer.
--   
--   <a>$sel:ownerAccount:VirtualInterface'</a>,
--   <a>virtualInterface_ownerAccount</a> - The ID of the account that owns
--   the virtual interface.
--   
--   <a>$sel:region:VirtualInterface'</a>, <a>virtualInterface_region</a> -
--   The Region where the virtual interface is located.
--   
--   <a>$sel:vlan:VirtualInterface'</a>, <a>virtualInterface_vlan</a> - The
--   ID of the VLAN.
--   
--   <a>$sel:location:VirtualInterface'</a>,
--   <a>virtualInterface_location</a> - The location of the connection.
--   
--   <a>$sel:customerAddress:VirtualInterface'</a>,
--   <a>virtualInterface_customerAddress</a> - The IP address assigned to
--   the customer interface.
newVirtualInterface :: VirtualInterface

-- | <i>See:</i> <a>newDescribeDirectConnectGatewayAssociationProposals</a>
--   smart constructor.
data DescribeDirectConnectGatewayAssociationProposals
DescribeDirectConnectGatewayAssociationProposals' :: Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> DescribeDirectConnectGatewayAssociationProposals

-- | Create a value of
--   <a>DescribeDirectConnectGatewayAssociationProposals</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:nextToken:DescribeDirectConnectGatewayAssociationProposals'</a>,
--   <a>describeDirectConnectGatewayAssociationProposals_nextToken</a> -
--   The token for the next page of results.
--   
--   
--   <a>$sel:proposalId:DescribeDirectConnectGatewayAssociationProposals'</a>,
--   <a>describeDirectConnectGatewayAssociationProposals_proposalId</a> -
--   The ID of the proposal.
--   
--   
--   <a>$sel:maxResults:DescribeDirectConnectGatewayAssociationProposals'</a>,
--   <a>describeDirectConnectGatewayAssociationProposals_maxResults</a> -
--   The maximum number of results to return with a single call. To
--   retrieve the remaining results, make another call with the returned
--   <tt>nextToken</tt> value.
--   
--   If <tt>MaxResults</tt> is given a value larger than 100, only 100
--   results are returned.
--   
--   
--   <a>$sel:associatedGatewayId:DescribeDirectConnectGatewayAssociationProposals'</a>,
--   <a>describeDirectConnectGatewayAssociationProposals_associatedGatewayId</a>
--   - The ID of the associated gateway.
--   
--   
--   <a>$sel:directConnectGatewayId:DescribeDirectConnectGatewayAssociationProposals'</a>,
--   <a>describeDirectConnectGatewayAssociationProposals_directConnectGatewayId</a>
--   - The ID of the Direct Connect gateway.
newDescribeDirectConnectGatewayAssociationProposals :: DescribeDirectConnectGatewayAssociationProposals

-- | <i>See:</i>
--   <a>newDescribeDirectConnectGatewayAssociationProposalsResponse</a>
--   smart constructor.
data DescribeDirectConnectGatewayAssociationProposalsResponse
DescribeDirectConnectGatewayAssociationProposalsResponse' :: Maybe Text -> Maybe [DirectConnectGatewayAssociationProposal] -> Int -> DescribeDirectConnectGatewayAssociationProposalsResponse

-- | Create a value of
--   <a>DescribeDirectConnectGatewayAssociationProposalsResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:nextToken:DescribeDirectConnectGatewayAssociationProposals'</a>,
--   <a>describeDirectConnectGatewayAssociationProposalsResponse_nextToken</a>
--   - The token to use to retrieve the next page of results. This value is
--   <tt>null</tt> when there are no more results to return.
--   
--   
--   <a>$sel:directConnectGatewayAssociationProposals:DescribeDirectConnectGatewayAssociationProposalsResponse'</a>,
--   <a>describeDirectConnectGatewayAssociationProposalsResponse_directConnectGatewayAssociationProposals</a>
--   - Describes the Direct Connect gateway association proposals.
--   
--   
--   <a>$sel:httpStatus:DescribeDirectConnectGatewayAssociationProposalsResponse'</a>,
--   <a>describeDirectConnectGatewayAssociationProposalsResponse_httpStatus</a>
--   - The response's http status code.
newDescribeDirectConnectGatewayAssociationProposalsResponse :: Int -> DescribeDirectConnectGatewayAssociationProposalsResponse

-- | <i>See:</i> <a>newCreatePrivateVirtualInterface</a> smart constructor.
data CreatePrivateVirtualInterface
CreatePrivateVirtualInterface' :: Text -> NewPrivateVirtualInterface -> CreatePrivateVirtualInterface

-- | Create a value of <a>CreatePrivateVirtualInterface</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connectionId:CreatePrivateVirtualInterface'</a>,
--   <a>createPrivateVirtualInterface_connectionId</a> - The ID of the
--   connection.
--   
--   
--   <a>$sel:newPrivateVirtualInterface':CreatePrivateVirtualInterface'</a>,
--   <a>createPrivateVirtualInterface_newPrivateVirtualInterface</a> -
--   Information about the private virtual interface.
newCreatePrivateVirtualInterface :: Text -> NewPrivateVirtualInterface -> CreatePrivateVirtualInterface

-- | Information about a virtual interface.
--   
--   <i>See:</i> <a>newVirtualInterface</a> smart constructor.
data VirtualInterface
VirtualInterface' :: Maybe Text -> Maybe [BGPPeer] -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe [RouteFilterPrefix] -> Maybe Int -> Maybe Text -> Maybe Integer -> Maybe Text -> Maybe (NonEmpty Tag) -> Maybe Text -> Maybe Text -> Maybe VirtualInterfaceState -> Maybe Text -> Maybe AddressFamily -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> VirtualInterface

-- | Create a value of <a>VirtualInterface</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authKey:VirtualInterface'</a>, <a>virtualInterface_authKey</a>
--   - The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
--   
--   <a>$sel:bgpPeers:VirtualInterface'</a>,
--   <a>virtualInterface_bgpPeers</a> - The BGP peers configured on this
--   virtual interface.
--   
--   <a>$sel:virtualGatewayId:VirtualInterface'</a>,
--   <a>virtualInterface_virtualGatewayId</a> - The ID of the virtual
--   private gateway. Applies only to private virtual interfaces.
--   
--   <a>$sel:asn:VirtualInterface'</a>, <a>virtualInterface_asn</a> - The
--   autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
--   
--   The valid values are 1-2147483647.
--   
--   <a>$sel:awsDeviceV2:VirtualInterface'</a>,
--   <a>virtualInterface_awsDeviceV2</a> - The Direct Connect endpoint that
--   terminates the physical connection.
--   
--   <a>$sel:connectionId:VirtualInterface'</a>,
--   <a>virtualInterface_connectionId</a> - The ID of the connection.
--   
--   <a>$sel:awsLogicalDeviceId:VirtualInterface'</a>,
--   <a>virtualInterface_awsLogicalDeviceId</a> - The Direct Connect
--   endpoint that terminates the logical connection. This device might be
--   different than the device that terminates the physical connection.
--   
--   <a>$sel:customerRouterConfig:VirtualInterface'</a>,
--   <a>virtualInterface_customerRouterConfig</a> - The customer router
--   configuration.
--   
--   <a>$sel:jumboFrameCapable:VirtualInterface'</a>,
--   <a>virtualInterface_jumboFrameCapable</a> - Indicates whether jumbo
--   frames (9001 MTU) are supported.
--   
--   <a>$sel:routeFilterPrefixes:VirtualInterface'</a>,
--   <a>virtualInterface_routeFilterPrefixes</a> - The routes to be
--   advertised to the Amazon Web Services network in this Region. Applies
--   to public virtual interfaces.
--   
--   <a>$sel:mtu:VirtualInterface'</a>, <a>virtualInterface_mtu</a> - The
--   maximum transmission unit (MTU), in bytes. The supported values are
--   1500 and 9001. The default value is 1500.
--   
--   <a>$sel:virtualInterfaceType:VirtualInterface'</a>,
--   <a>virtualInterface_virtualInterfaceType</a> - The type of virtual
--   interface. The possible values are <tt>private</tt> and
--   <tt>public</tt>.
--   
--   <a>$sel:amazonSideAsn:VirtualInterface'</a>,
--   <a>virtualInterface_amazonSideAsn</a> - The autonomous system number
--   (ASN) for the Amazon side of the connection.
--   
--   <a>$sel:virtualInterfaceId:VirtualInterface'</a>,
--   <a>virtualInterface_virtualInterfaceId</a> - The ID of the virtual
--   interface.
--   
--   <a>$sel:tags:VirtualInterface'</a>, <a>virtualInterface_tags</a> - The
--   tags associated with the virtual interface.
--   
--   <a>$sel:directConnectGatewayId:VirtualInterface'</a>,
--   <a>virtualInterface_directConnectGatewayId</a> - The ID of the Direct
--   Connect gateway.
--   
--   <a>$sel:virtualInterfaceName:VirtualInterface'</a>,
--   <a>virtualInterface_virtualInterfaceName</a> - The name of the virtual
--   interface assigned by the customer network. The name has a maximum of
--   100 characters. The following are valid characters: a-z, 0-9 and a
--   hyphen (-).
--   
--   <a>$sel:virtualInterfaceState:VirtualInterface'</a>,
--   <a>virtualInterface_virtualInterfaceState</a> - The state of the
--   virtual interface. The following are the possible values:
--   
--   <ul>
--   <li><tt>confirming</tt>: The creation of the virtual interface is
--   pending confirmation from the virtual interface owner. If the owner of
--   the virtual interface is different from the owner of the connection on
--   which it is provisioned, then the virtual interface will remain in
--   this state until it is confirmed by the virtual interface owner.</li>
--   <li><tt>verifying</tt>: This state only applies to public virtual
--   interfaces. Each public virtual interface needs validation before the
--   virtual interface can be created.</li>
--   <li><tt>pending</tt>: A virtual interface is in this state from the
--   time that it is created until the virtual interface is ready to
--   forward traffic.</li>
--   <li><tt>available</tt>: A virtual interface that is able to forward
--   traffic.</li>
--   <li><tt>down</tt>: A virtual interface that is BGP down.</li>
--   <li><tt>deleting</tt>: A virtual interface is in this state
--   immediately after calling DeleteVirtualInterface until it can no
--   longer forward traffic.</li>
--   <li><tt>deleted</tt>: A virtual interface that cannot forward
--   traffic.</li>
--   <li><tt>rejected</tt>: The virtual interface owner has declined
--   creation of the virtual interface. If a virtual interface in the
--   <tt>Confirming</tt> state is deleted by the virtual interface owner,
--   the virtual interface enters the <tt>Rejected</tt> state.</li>
--   <li><tt>unknown</tt>: The state of the virtual interface is not
--   available.</li>
--   </ul>
--   
--   <a>$sel:amazonAddress:VirtualInterface'</a>,
--   <a>virtualInterface_amazonAddress</a> - The IP address assigned to the
--   Amazon interface.
--   
--   <a>$sel:addressFamily:VirtualInterface'</a>,
--   <a>virtualInterface_addressFamily</a> - The address family for the BGP
--   peer.
--   
--   <a>$sel:ownerAccount:VirtualInterface'</a>,
--   <a>virtualInterface_ownerAccount</a> - The ID of the account that owns
--   the virtual interface.
--   
--   <a>$sel:region:VirtualInterface'</a>, <a>virtualInterface_region</a> -
--   The Region where the virtual interface is located.
--   
--   <a>$sel:vlan:VirtualInterface'</a>, <a>virtualInterface_vlan</a> - The
--   ID of the VLAN.
--   
--   <a>$sel:location:VirtualInterface'</a>,
--   <a>virtualInterface_location</a> - The location of the connection.
--   
--   <a>$sel:customerAddress:VirtualInterface'</a>,
--   <a>virtualInterface_customerAddress</a> - The IP address assigned to
--   the customer interface.
newVirtualInterface :: VirtualInterface

-- | <i>See:</i> <a>newCreateDirectConnectGatewayAssociationProposal</a>
--   smart constructor.
data CreateDirectConnectGatewayAssociationProposal
CreateDirectConnectGatewayAssociationProposal' :: Maybe [RouteFilterPrefix] -> Maybe [RouteFilterPrefix] -> Text -> Text -> Text -> CreateDirectConnectGatewayAssociationProposal

-- | Create a value of <a>CreateDirectConnectGatewayAssociationProposal</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:removeAllowedPrefixesToDirectConnectGateway:CreateDirectConnectGatewayAssociationProposal'</a>,
--   <a>createDirectConnectGatewayAssociationProposal_removeAllowedPrefixesToDirectConnectGateway</a>
--   - The Amazon VPC prefixes to no longer advertise to the Direct Connect
--   gateway.
--   
--   
--   <a>$sel:addAllowedPrefixesToDirectConnectGateway:CreateDirectConnectGatewayAssociationProposal'</a>,
--   <a>createDirectConnectGatewayAssociationProposal_addAllowedPrefixesToDirectConnectGateway</a>
--   - The Amazon VPC prefixes to advertise to the Direct Connect gateway.
--   
--   
--   <a>$sel:directConnectGatewayId:CreateDirectConnectGatewayAssociationProposal'</a>,
--   <a>createDirectConnectGatewayAssociationProposal_directConnectGatewayId</a>
--   - The ID of the Direct Connect gateway.
--   
--   
--   <a>$sel:directConnectGatewayOwnerAccount:CreateDirectConnectGatewayAssociationProposal'</a>,
--   <a>createDirectConnectGatewayAssociationProposal_directConnectGatewayOwnerAccount</a>
--   - The ID of the account that owns the Direct Connect gateway.
--   
--   <a>$sel:gatewayId:CreateDirectConnectGatewayAssociationProposal'</a>,
--   <a>createDirectConnectGatewayAssociationProposal_gatewayId</a> - The
--   ID of the virtual private gateway or transit gateway.
newCreateDirectConnectGatewayAssociationProposal :: Text -> Text -> Text -> CreateDirectConnectGatewayAssociationProposal

-- | <i>See:</i>
--   <a>newCreateDirectConnectGatewayAssociationProposalResponse</a> smart
--   constructor.
data CreateDirectConnectGatewayAssociationProposalResponse
CreateDirectConnectGatewayAssociationProposalResponse' :: Maybe DirectConnectGatewayAssociationProposal -> Int -> CreateDirectConnectGatewayAssociationProposalResponse

-- | Create a value of
--   <a>CreateDirectConnectGatewayAssociationProposalResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:directConnectGatewayAssociationProposal:CreateDirectConnectGatewayAssociationProposalResponse'</a>,
--   <a>createDirectConnectGatewayAssociationProposalResponse_directConnectGatewayAssociationProposal</a>
--   - Information about the Direct Connect gateway proposal.
--   
--   
--   <a>$sel:httpStatus:CreateDirectConnectGatewayAssociationProposalResponse'</a>,
--   <a>createDirectConnectGatewayAssociationProposalResponse_httpStatus</a>
--   - The response's http status code.
newCreateDirectConnectGatewayAssociationProposalResponse :: Int -> CreateDirectConnectGatewayAssociationProposalResponse

-- | <i>See:</i> <a>newDeleteDirectConnectGateway</a> smart constructor.
data DeleteDirectConnectGateway
DeleteDirectConnectGateway' :: Text -> DeleteDirectConnectGateway

-- | Create a value of <a>DeleteDirectConnectGateway</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:directConnectGatewayId:DeleteDirectConnectGateway'</a>,
--   <a>deleteDirectConnectGateway_directConnectGatewayId</a> - The ID of
--   the Direct Connect gateway.
newDeleteDirectConnectGateway :: Text -> DeleteDirectConnectGateway

-- | <i>See:</i> <a>newDeleteDirectConnectGatewayResponse</a> smart
--   constructor.
data DeleteDirectConnectGatewayResponse
DeleteDirectConnectGatewayResponse' :: Maybe DirectConnectGateway -> Int -> DeleteDirectConnectGatewayResponse

-- | Create a value of <a>DeleteDirectConnectGatewayResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:directConnectGateway:DeleteDirectConnectGatewayResponse'</a>,
--   <a>deleteDirectConnectGatewayResponse_directConnectGateway</a> - The
--   Direct Connect gateway.
--   
--   <a>$sel:httpStatus:DeleteDirectConnectGatewayResponse'</a>,
--   <a>deleteDirectConnectGatewayResponse_httpStatus</a> - The response's
--   http status code.
newDeleteDirectConnectGatewayResponse :: Int -> DeleteDirectConnectGatewayResponse

-- | <i>See:</i> <a>newAllocateHostedConnection</a> smart constructor.
data AllocateHostedConnection
AllocateHostedConnection' :: Maybe (NonEmpty Tag) -> Text -> Text -> Text -> Text -> Int -> AllocateHostedConnection

-- | Create a value of <a>AllocateHostedConnection</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:AllocateHostedConnection'</a>,
--   <a>allocateHostedConnection_tags</a> - The tags associated with the
--   connection.
--   
--   <a>$sel:connectionId:AllocateHostedConnection'</a>,
--   <a>allocateHostedConnection_connectionId</a> - The ID of the
--   interconnect or LAG.
--   
--   <a>$sel:ownerAccount:AllocateHostedConnection'</a>,
--   <a>allocateHostedConnection_ownerAccount</a> - The ID of the account
--   ID of the customer for the connection.
--   
--   <a>$sel:bandwidth:AllocateHostedConnection'</a>,
--   <a>allocateHostedConnection_bandwidth</a> - The bandwidth of the
--   connection. The possible values are 50Mbps, 100Mbps, 200Mbps, 300Mbps,
--   400Mbps, 500Mbps, 1Gbps, 2Gbps, 5Gbps, and 10Gbps. Note that only
--   those Direct Connect Partners who have met specific requirements are
--   allowed to create a 1Gbps, 2Gbps, 5Gbps or 10Gbps hosted connection.
--   
--   <a>$sel:connectionName:AllocateHostedConnection'</a>,
--   <a>allocateHostedConnection_connectionName</a> - The name of the
--   hosted connection.
--   
--   <a>$sel:vlan:AllocateHostedConnection'</a>,
--   <a>allocateHostedConnection_vlan</a> - The dedicated VLAN provisioned
--   to the hosted connection.
newAllocateHostedConnection :: Text -> Text -> Text -> Text -> Int -> AllocateHostedConnection

-- | Information about an Direct Connect connection.
--   
--   <i>See:</i> <a>newConnection</a> smart constructor.
data Connection
Connection' :: Maybe Text -> Maybe Text -> Maybe ConnectionState -> Maybe Text -> Maybe [MacSecKey] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe HasLogicalRedundancy -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (NonEmpty Tag) -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Bool -> Connection

-- | Create a value of <a>Connection</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bandwidth:Connection'</a>, <a>connection_bandwidth</a> - The
--   bandwidth of the connection.
--   
--   <a>$sel:awsDeviceV2:Connection'</a>, <a>connection_awsDeviceV2</a> -
--   The Direct Connect endpoint that terminates the physical connection.
--   
--   <a>$sel:connectionState:Connection'</a>,
--   <a>connection_connectionState</a> - The state of the connection. The
--   following are the possible values:
--   
--   <ul>
--   <li><tt>ordering</tt>: The initial state of a hosted connection
--   provisioned on an interconnect. The connection stays in the ordering
--   state until the owner of the hosted connection confirms or declines
--   the connection order.</li>
--   <li><tt>requested</tt>: The initial state of a standard connection.
--   The connection stays in the requested state until the Letter of
--   Authorization (LOA) is sent to the customer.</li>
--   <li><tt>pending</tt>: The connection has been approved and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is up and the connection is
--   ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The connection is being deleted.</li>
--   <li><tt>deleted</tt>: The connection has been deleted.</li>
--   <li><tt>rejected</tt>: A hosted connection in the <tt>ordering</tt>
--   state enters the <tt>rejected</tt> state if it is deleted by the
--   customer.</li>
--   <li><tt>unknown</tt>: The state of the connection is not
--   available.</li>
--   </ul>
--   
--   <a>$sel:connectionName:Connection'</a>,
--   <a>connection_connectionName</a> - The name of the connection.
--   
--   <a>$sel:macSecKeys:Connection'</a>, <a>connection_macSecKeys</a> - The
--   MAC Security (MACsec) security keys associated with the connection.
--   
--   <a>$sel:providerName:Connection'</a>, <a>connection_providerName</a> -
--   The name of the service provider associated with the connection.
--   
--   <a>$sel:connectionId:Connection'</a>, <a>connection_connectionId</a> -
--   The ID of the connection.
--   
--   <a>$sel:awsLogicalDeviceId:Connection'</a>,
--   <a>connection_awsLogicalDeviceId</a> - The Direct Connect endpoint
--   that terminates the logical connection. This device might be different
--   than the device that terminates the physical connection.
--   
--   <a>$sel:hasLogicalRedundancy:Connection'</a>,
--   <a>connection_hasLogicalRedundancy</a> - Indicates whether the
--   connection supports a secondary BGP peer in the same address family
--   (IPv4/IPv6).
--   
--   <a>$sel:awsDevice:Connection'</a>, <a>connection_awsDevice</a> - The
--   Direct Connect endpoint on which the physical connection terminates.
--   
--   <a>$sel:jumboFrameCapable:Connection'</a>,
--   <a>connection_jumboFrameCapable</a> - Indicates whether jumbo frames
--   (9001 MTU) are supported.
--   
--   <a>$sel:portEncryptionStatus:Connection'</a>,
--   <a>connection_portEncryptionStatus</a> - The MAC Security (MACsec)
--   port link status of the connection.
--   
--   The valid values are <tt>Encryption Up</tt>, which means that there is
--   an active Connection Key Name, or <tt>Encryption Down</tt>.
--   
--   <a>$sel:lagId:Connection'</a>, <a>connection_lagId</a> - The ID of the
--   LAG.
--   
--   <a>$sel:encryptionMode:Connection'</a>,
--   <a>connection_encryptionMode</a> - The MAC Security (MACsec)
--   connection encryption mode.
--   
--   The valid values are <tt>no_encrypt</tt>, <tt>should_encrypt</tt>, and
--   <tt>must_encrypt</tt>.
--   
--   <a>$sel:partnerName:Connection'</a>, <a>connection_partnerName</a> -
--   The name of the Direct Connect service provider associated with the
--   connection.
--   
--   <a>$sel:tags:Connection'</a>, <a>connection_tags</a> - The tags
--   associated with the connection.
--   
--   <a>$sel:loaIssueTime:Connection'</a>, <a>connection_loaIssueTime</a> -
--   The time of the most recent call to DescribeLoa for this connection.
--   
--   <a>$sel:ownerAccount:Connection'</a>, <a>connection_ownerAccount</a> -
--   The ID of the account that owns the connection.
--   
--   <a>$sel:region:Connection'</a>, <a>connection_region</a> - The Region
--   where the connection is located.
--   
--   <a>$sel:vlan:Connection'</a>, <a>connection_vlan</a> - The ID of the
--   VLAN.
--   
--   <a>$sel:location:Connection'</a>, <a>connection_location</a> - The
--   location of the connection.
--   
--   <a>$sel:macSecCapable:Connection'</a>, <a>connection_macSecCapable</a>
--   - Indicates whether the connection supports MAC Security (MACsec).
newConnection :: Connection
newtype AddressFamily
AddressFamily' :: Text -> AddressFamily
[fromAddressFamily] :: AddressFamily -> Text
pattern AddressFamily_Ipv4 :: AddressFamily
pattern AddressFamily_Ipv6 :: AddressFamily
newtype BGPPeerState
BGPPeerState' :: Text -> BGPPeerState
[fromBGPPeerState] :: BGPPeerState -> Text
pattern BGPPeerState_Available :: BGPPeerState
pattern BGPPeerState_Deleted :: BGPPeerState
pattern BGPPeerState_Deleting :: BGPPeerState
pattern BGPPeerState_Pending :: BGPPeerState
pattern BGPPeerState_Verifying :: BGPPeerState
newtype BGPStatus
BGPStatus' :: Text -> BGPStatus
[fromBGPStatus] :: BGPStatus -> Text
pattern BGPStatus_Down :: BGPStatus
pattern BGPStatus_Unknown :: BGPStatus
pattern BGPStatus_Up :: BGPStatus
newtype ConnectionState
ConnectionState' :: Text -> ConnectionState
[fromConnectionState] :: ConnectionState -> Text
pattern ConnectionState_Available :: ConnectionState
pattern ConnectionState_Deleted :: ConnectionState
pattern ConnectionState_Deleting :: ConnectionState
pattern ConnectionState_Down :: ConnectionState
pattern ConnectionState_Ordering :: ConnectionState
pattern ConnectionState_Pending :: ConnectionState
pattern ConnectionState_Rejected :: ConnectionState
pattern ConnectionState_Requested :: ConnectionState
pattern ConnectionState_Unknown :: ConnectionState
newtype DirectConnectGatewayAssociationProposalState
DirectConnectGatewayAssociationProposalState' :: Text -> DirectConnectGatewayAssociationProposalState
[fromDirectConnectGatewayAssociationProposalState] :: DirectConnectGatewayAssociationProposalState -> Text
pattern DirectConnectGatewayAssociationProposalState_Accepted :: DirectConnectGatewayAssociationProposalState
pattern DirectConnectGatewayAssociationProposalState_Deleted :: DirectConnectGatewayAssociationProposalState
pattern DirectConnectGatewayAssociationProposalState_Requested :: DirectConnectGatewayAssociationProposalState
newtype DirectConnectGatewayAssociationState
DirectConnectGatewayAssociationState' :: Text -> DirectConnectGatewayAssociationState
[fromDirectConnectGatewayAssociationState] :: DirectConnectGatewayAssociationState -> Text
pattern DirectConnectGatewayAssociationState_Associated :: DirectConnectGatewayAssociationState
pattern DirectConnectGatewayAssociationState_Associating :: DirectConnectGatewayAssociationState
pattern DirectConnectGatewayAssociationState_Disassociated :: DirectConnectGatewayAssociationState
pattern DirectConnectGatewayAssociationState_Disassociating :: DirectConnectGatewayAssociationState
pattern DirectConnectGatewayAssociationState_Updating :: DirectConnectGatewayAssociationState
newtype DirectConnectGatewayAttachmentState
DirectConnectGatewayAttachmentState' :: Text -> DirectConnectGatewayAttachmentState
[fromDirectConnectGatewayAttachmentState] :: DirectConnectGatewayAttachmentState -> Text
pattern DirectConnectGatewayAttachmentState_Attached :: DirectConnectGatewayAttachmentState
pattern DirectConnectGatewayAttachmentState_Attaching :: DirectConnectGatewayAttachmentState
pattern DirectConnectGatewayAttachmentState_Detached :: DirectConnectGatewayAttachmentState
pattern DirectConnectGatewayAttachmentState_Detaching :: DirectConnectGatewayAttachmentState
newtype DirectConnectGatewayAttachmentType
DirectConnectGatewayAttachmentType' :: Text -> DirectConnectGatewayAttachmentType
[fromDirectConnectGatewayAttachmentType] :: DirectConnectGatewayAttachmentType -> Text
pattern DirectConnectGatewayAttachmentType_PrivateVirtualInterface :: DirectConnectGatewayAttachmentType
pattern DirectConnectGatewayAttachmentType_TransitVirtualInterface :: DirectConnectGatewayAttachmentType
newtype DirectConnectGatewayState
DirectConnectGatewayState' :: Text -> DirectConnectGatewayState
[fromDirectConnectGatewayState] :: DirectConnectGatewayState -> Text
pattern DirectConnectGatewayState_Available :: DirectConnectGatewayState
pattern DirectConnectGatewayState_Deleted :: DirectConnectGatewayState
pattern DirectConnectGatewayState_Deleting :: DirectConnectGatewayState
pattern DirectConnectGatewayState_Pending :: DirectConnectGatewayState
newtype GatewayType
GatewayType' :: Text -> GatewayType
[fromGatewayType] :: GatewayType -> Text
pattern GatewayType_TransitGateway :: GatewayType
pattern GatewayType_VirtualPrivateGateway :: GatewayType
newtype HasLogicalRedundancy
HasLogicalRedundancy' :: Text -> HasLogicalRedundancy
[fromHasLogicalRedundancy] :: HasLogicalRedundancy -> Text
pattern HasLogicalRedundancy_No :: HasLogicalRedundancy
pattern HasLogicalRedundancy_Unknown :: HasLogicalRedundancy
pattern HasLogicalRedundancy_Yes :: HasLogicalRedundancy
newtype InterconnectState
InterconnectState' :: Text -> InterconnectState
[fromInterconnectState] :: InterconnectState -> Text
pattern InterconnectState_Available :: InterconnectState
pattern InterconnectState_Deleted :: InterconnectState
pattern InterconnectState_Deleting :: InterconnectState
pattern InterconnectState_Down :: InterconnectState
pattern InterconnectState_Pending :: InterconnectState
pattern InterconnectState_Requested :: InterconnectState
pattern InterconnectState_Unknown :: InterconnectState
newtype LagState
LagState' :: Text -> LagState
[fromLagState] :: LagState -> Text
pattern LagState_Available :: LagState
pattern LagState_Deleted :: LagState
pattern LagState_Deleting :: LagState
pattern LagState_Down :: LagState
pattern LagState_Pending :: LagState
pattern LagState_Requested :: LagState
pattern LagState_Unknown :: LagState
newtype LoaContentType
LoaContentType' :: Text -> LoaContentType
[fromLoaContentType] :: LoaContentType -> Text
pattern LoaContentType_Application_pdf :: LoaContentType
newtype VirtualInterfaceState
VirtualInterfaceState' :: Text -> VirtualInterfaceState
[fromVirtualInterfaceState] :: VirtualInterfaceState -> Text
pattern VirtualInterfaceState_Available :: VirtualInterfaceState
pattern VirtualInterfaceState_Confirming :: VirtualInterfaceState
pattern VirtualInterfaceState_Deleted :: VirtualInterfaceState
pattern VirtualInterfaceState_Deleting :: VirtualInterfaceState
pattern VirtualInterfaceState_Down :: VirtualInterfaceState
pattern VirtualInterfaceState_Pending :: VirtualInterfaceState
pattern VirtualInterfaceState_Rejected :: VirtualInterfaceState
pattern VirtualInterfaceState_Unknown :: VirtualInterfaceState
pattern VirtualInterfaceState_Verifying :: VirtualInterfaceState

-- | Information about the associated gateway.
--   
--   <i>See:</i> <a>newAssociatedGateway</a> smart constructor.
data AssociatedGateway
AssociatedGateway' :: Maybe Text -> Maybe GatewayType -> Maybe Text -> Maybe Text -> AssociatedGateway

-- | Create a value of <a>AssociatedGateway</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:AssociatedGateway'</a>, <a>associatedGateway_id</a> - The
--   ID of the associated gateway.
--   
--   <a>$sel:type':AssociatedGateway'</a>, <a>associatedGateway_type</a> -
--   The type of associated gateway.
--   
--   <a>$sel:ownerAccount:AssociatedGateway'</a>,
--   <a>associatedGateway_ownerAccount</a> - The ID of the account that
--   owns the associated virtual private gateway or transit gateway.
--   
--   <a>$sel:region:AssociatedGateway'</a>, <a>associatedGateway_region</a>
--   - The Region where the associated gateway is located.
newAssociatedGateway :: AssociatedGateway

-- | Information about a BGP peer.
--   
--   <i>See:</i> <a>newBGPPeer</a> smart constructor.
data BGPPeer
BGPPeer' :: Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe BGPStatus -> Maybe BGPPeerState -> Maybe Text -> Maybe AddressFamily -> Maybe Text -> BGPPeer

-- | Create a value of <a>BGPPeer</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authKey:BGPPeer'</a>, <a>bGPPeer_authKey</a> - The
--   authentication key for BGP configuration. This string has a minimum
--   length of 6 characters and and a maximun lenth of 80 characters.
--   
--   <a>$sel:asn:BGPPeer'</a>, <a>bGPPeer_asn</a> - The autonomous system
--   (AS) number for Border Gateway Protocol (BGP) configuration.
--   
--   <a>$sel:awsDeviceV2:BGPPeer'</a>, <a>bGPPeer_awsDeviceV2</a> - The
--   Direct Connect endpoint that terminates the BGP peer.
--   
--   <a>$sel:awsLogicalDeviceId:BGPPeer'</a>,
--   <a>bGPPeer_awsLogicalDeviceId</a> - The Direct Connect endpoint that
--   terminates the logical connection. This device might be different than
--   the device that terminates the physical connection.
--   
--   <a>$sel:bgpPeerId:BGPPeer'</a>, <a>bGPPeer_bgpPeerId</a> - The ID of
--   the BGP peer.
--   
--   <a>$sel:bgpStatus:BGPPeer'</a>, <a>bGPPeer_bgpStatus</a> - The status
--   of the BGP peer. The following are the possible values:
--   
--   <ul>
--   <li><tt>up</tt>: The BGP peer is established. This state does not
--   indicate the state of the routing function. Ensure that you are
--   receiving routes over the BGP session.</li>
--   <li><tt>down</tt>: The BGP peer is down.</li>
--   <li><tt>unknown</tt>: The BGP peer status is not available.</li>
--   </ul>
--   
--   <a>$sel:bgpPeerState:BGPPeer'</a>, <a>bGPPeer_bgpPeerState</a> - The
--   state of the BGP peer. The following are the possible values:
--   
--   <ul>
--   <li><tt>verifying</tt>: The BGP peering addresses or ASN require
--   validation before the BGP peer can be created. This state applies only
--   to public virtual interfaces.</li>
--   <li><tt>pending</tt>: The BGP peer is created, and remains in this
--   state until it is ready to be established.</li>
--   <li><tt>available</tt>: The BGP peer is ready to be established.</li>
--   <li><tt>deleting</tt>: The BGP peer is being deleted.</li>
--   <li><tt>deleted</tt>: The BGP peer is deleted and cannot be
--   established.</li>
--   </ul>
--   
--   <a>$sel:amazonAddress:BGPPeer'</a>, <a>bGPPeer_amazonAddress</a> - The
--   IP address assigned to the Amazon interface.
--   
--   <a>$sel:addressFamily:BGPPeer'</a>, <a>bGPPeer_addressFamily</a> - The
--   address family for the BGP peer.
--   
--   <a>$sel:customerAddress:BGPPeer'</a>, <a>bGPPeer_customerAddress</a> -
--   The IP address assigned to the customer interface.
newBGPPeer :: BGPPeer

-- | Information about an Direct Connect connection.
--   
--   <i>See:</i> <a>newConnection</a> smart constructor.
data Connection
Connection' :: Maybe Text -> Maybe Text -> Maybe ConnectionState -> Maybe Text -> Maybe [MacSecKey] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe HasLogicalRedundancy -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (NonEmpty Tag) -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Bool -> Connection

-- | Create a value of <a>Connection</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bandwidth:Connection'</a>, <a>connection_bandwidth</a> - The
--   bandwidth of the connection.
--   
--   <a>$sel:awsDeviceV2:Connection'</a>, <a>connection_awsDeviceV2</a> -
--   The Direct Connect endpoint that terminates the physical connection.
--   
--   <a>$sel:connectionState:Connection'</a>,
--   <a>connection_connectionState</a> - The state of the connection. The
--   following are the possible values:
--   
--   <ul>
--   <li><tt>ordering</tt>: The initial state of a hosted connection
--   provisioned on an interconnect. The connection stays in the ordering
--   state until the owner of the hosted connection confirms or declines
--   the connection order.</li>
--   <li><tt>requested</tt>: The initial state of a standard connection.
--   The connection stays in the requested state until the Letter of
--   Authorization (LOA) is sent to the customer.</li>
--   <li><tt>pending</tt>: The connection has been approved and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is up and the connection is
--   ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The connection is being deleted.</li>
--   <li><tt>deleted</tt>: The connection has been deleted.</li>
--   <li><tt>rejected</tt>: A hosted connection in the <tt>ordering</tt>
--   state enters the <tt>rejected</tt> state if it is deleted by the
--   customer.</li>
--   <li><tt>unknown</tt>: The state of the connection is not
--   available.</li>
--   </ul>
--   
--   <a>$sel:connectionName:Connection'</a>,
--   <a>connection_connectionName</a> - The name of the connection.
--   
--   <a>$sel:macSecKeys:Connection'</a>, <a>connection_macSecKeys</a> - The
--   MAC Security (MACsec) security keys associated with the connection.
--   
--   <a>$sel:providerName:Connection'</a>, <a>connection_providerName</a> -
--   The name of the service provider associated with the connection.
--   
--   <a>$sel:connectionId:Connection'</a>, <a>connection_connectionId</a> -
--   The ID of the connection.
--   
--   <a>$sel:awsLogicalDeviceId:Connection'</a>,
--   <a>connection_awsLogicalDeviceId</a> - The Direct Connect endpoint
--   that terminates the logical connection. This device might be different
--   than the device that terminates the physical connection.
--   
--   <a>$sel:hasLogicalRedundancy:Connection'</a>,
--   <a>connection_hasLogicalRedundancy</a> - Indicates whether the
--   connection supports a secondary BGP peer in the same address family
--   (IPv4/IPv6).
--   
--   <a>$sel:awsDevice:Connection'</a>, <a>connection_awsDevice</a> - The
--   Direct Connect endpoint on which the physical connection terminates.
--   
--   <a>$sel:jumboFrameCapable:Connection'</a>,
--   <a>connection_jumboFrameCapable</a> - Indicates whether jumbo frames
--   (9001 MTU) are supported.
--   
--   <a>$sel:portEncryptionStatus:Connection'</a>,
--   <a>connection_portEncryptionStatus</a> - The MAC Security (MACsec)
--   port link status of the connection.
--   
--   The valid values are <tt>Encryption Up</tt>, which means that there is
--   an active Connection Key Name, or <tt>Encryption Down</tt>.
--   
--   <a>$sel:lagId:Connection'</a>, <a>connection_lagId</a> - The ID of the
--   LAG.
--   
--   <a>$sel:encryptionMode:Connection'</a>,
--   <a>connection_encryptionMode</a> - The MAC Security (MACsec)
--   connection encryption mode.
--   
--   The valid values are <tt>no_encrypt</tt>, <tt>should_encrypt</tt>, and
--   <tt>must_encrypt</tt>.
--   
--   <a>$sel:partnerName:Connection'</a>, <a>connection_partnerName</a> -
--   The name of the Direct Connect service provider associated with the
--   connection.
--   
--   <a>$sel:tags:Connection'</a>, <a>connection_tags</a> - The tags
--   associated with the connection.
--   
--   <a>$sel:loaIssueTime:Connection'</a>, <a>connection_loaIssueTime</a> -
--   The time of the most recent call to DescribeLoa for this connection.
--   
--   <a>$sel:ownerAccount:Connection'</a>, <a>connection_ownerAccount</a> -
--   The ID of the account that owns the connection.
--   
--   <a>$sel:region:Connection'</a>, <a>connection_region</a> - The Region
--   where the connection is located.
--   
--   <a>$sel:vlan:Connection'</a>, <a>connection_vlan</a> - The ID of the
--   VLAN.
--   
--   <a>$sel:location:Connection'</a>, <a>connection_location</a> - The
--   location of the connection.
--   
--   <a>$sel:macSecCapable:Connection'</a>, <a>connection_macSecCapable</a>
--   - Indicates whether the connection supports MAC Security (MACsec).
newConnection :: Connection

-- | <i>See:</i> <a>newConnections</a> smart constructor.
data Connections
Connections' :: Maybe [Connection] -> Connections

-- | Create a value of <a>Connections</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connections:Connections'</a>, <a>connections_connections</a> -
--   The connections.
newConnections :: Connections

-- | Information about a Direct Connect gateway, which enables you to
--   connect virtual interfaces and virtual private gateway or transit
--   gateways.
--   
--   <i>See:</i> <a>newDirectConnectGateway</a> smart constructor.
data DirectConnectGateway
DirectConnectGateway' :: Maybe DirectConnectGatewayState -> Maybe Text -> Maybe Text -> Maybe Integer -> Maybe Text -> Maybe Text -> DirectConnectGateway

-- | Create a value of <a>DirectConnectGateway</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:directConnectGatewayState:DirectConnectGateway'</a>,
--   <a>directConnectGateway_directConnectGatewayState</a> - The state of
--   the Direct Connect gateway. The following are the possible values:
--   
--   <ul>
--   <li><tt>pending</tt>: The initial state after calling
--   CreateDirectConnectGateway.</li>
--   <li><tt>available</tt>: The Direct Connect gateway is ready for
--   use.</li>
--   <li><tt>deleting</tt>: The initial state after calling
--   DeleteDirectConnectGateway.</li>
--   <li><tt>deleted</tt>: The Direct Connect gateway is deleted and cannot
--   pass traffic.</li>
--   </ul>
--   
--   <a>$sel:stateChangeError:DirectConnectGateway'</a>,
--   <a>directConnectGateway_stateChangeError</a> - The error message if
--   the state of an object failed to advance.
--   
--   <a>$sel:directConnectGatewayName:DirectConnectGateway'</a>,
--   <a>directConnectGateway_directConnectGatewayName</a> - The name of the
--   Direct Connect gateway.
--   
--   <a>$sel:amazonSideAsn:DirectConnectGateway'</a>,
--   <a>directConnectGateway_amazonSideAsn</a> - The autonomous system
--   number (ASN) for the Amazon side of the connection.
--   
--   <a>$sel:directConnectGatewayId:DirectConnectGateway'</a>,
--   <a>directConnectGateway_directConnectGatewayId</a> - The ID of the
--   Direct Connect gateway.
--   
--   <a>$sel:ownerAccount:DirectConnectGateway'</a>,
--   <a>directConnectGateway_ownerAccount</a> - The ID of the account that
--   owns the Direct Connect gateway.
newDirectConnectGateway :: DirectConnectGateway

-- | Information about an association between a Direct Connect gateway and
--   a virtual private gateway or transit gateway.
--   
--   <i>See:</i> <a>newDirectConnectGatewayAssociation</a> smart
--   constructor.
data DirectConnectGatewayAssociation
DirectConnectGatewayAssociation' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe DirectConnectGatewayAssociationState -> Maybe AssociatedGateway -> Maybe Text -> Maybe Text -> Maybe [RouteFilterPrefix] -> Maybe Text -> DirectConnectGatewayAssociation

-- | Create a value of <a>DirectConnectGatewayAssociation</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:virtualGatewayId:DirectConnectGatewayAssociation'</a>,
--   <a>directConnectGatewayAssociation_virtualGatewayId</a> - The ID of
--   the virtual private gateway. Applies only to private virtual
--   interfaces.
--   
--   <a>$sel:virtualGatewayRegion:DirectConnectGatewayAssociation'</a>,
--   <a>directConnectGatewayAssociation_virtualGatewayRegion</a> - The
--   Region where the virtual private gateway is located.
--   
--   
--   <a>$sel:virtualGatewayOwnerAccount:DirectConnectGatewayAssociation'</a>,
--   <a>directConnectGatewayAssociation_virtualGatewayOwnerAccount</a> -
--   The ID of the account that owns the virtual private gateway.
--   
--   <a>$sel:stateChangeError:DirectConnectGatewayAssociation'</a>,
--   <a>directConnectGatewayAssociation_stateChangeError</a> - The error
--   message if the state of an object failed to advance.
--   
--   <a>$sel:associationState:DirectConnectGatewayAssociation'</a>,
--   <a>directConnectGatewayAssociation_associationState</a> - The state of
--   the association. The following are the possible values:
--   
--   <ul>
--   <li><tt>associating</tt>: The initial state after calling
--   CreateDirectConnectGatewayAssociation.</li>
--   <li><tt>associated</tt>: The Direct Connect gateway and virtual
--   private gateway or transit gateway are successfully associated and
--   ready to pass traffic.</li>
--   <li><tt>disassociating</tt>: The initial state after calling
--   DeleteDirectConnectGatewayAssociation.</li>
--   <li><tt>disassociated</tt>: The virtual private gateway or transit
--   gateway is disassociated from the Direct Connect gateway. Traffic flow
--   between the Direct Connect gateway and virtual private gateway or
--   transit gateway is stopped.</li>
--   </ul>
--   
--   <a>$sel:associatedGateway:DirectConnectGatewayAssociation'</a>,
--   <a>directConnectGatewayAssociation_associatedGateway</a> - Information
--   about the associated gateway.
--   
--   <a>$sel:associationId:DirectConnectGatewayAssociation'</a>,
--   <a>directConnectGatewayAssociation_associationId</a> - The ID of the
--   Direct Connect gateway association.
--   
--   <a>$sel:directConnectGatewayId:DirectConnectGatewayAssociation'</a>,
--   <a>directConnectGatewayAssociation_directConnectGatewayId</a> - The ID
--   of the Direct Connect gateway.
--   
--   
--   <a>$sel:allowedPrefixesToDirectConnectGateway:DirectConnectGatewayAssociation'</a>,
--   <a>directConnectGatewayAssociation_allowedPrefixesToDirectConnectGateway</a>
--   - The Amazon VPC prefixes to advertise to the Direct Connect gateway.
--   
--   
--   <a>$sel:directConnectGatewayOwnerAccount:DirectConnectGatewayAssociation'</a>,
--   <a>directConnectGatewayAssociation_directConnectGatewayOwnerAccount</a>
--   - The ID of the account that owns the associated gateway.
newDirectConnectGatewayAssociation :: DirectConnectGatewayAssociation

-- | Information about the proposal request to attach a virtual private
--   gateway to a Direct Connect gateway.
--   
--   <i>See:</i> <a>newDirectConnectGatewayAssociationProposal</a> smart
--   constructor.
data DirectConnectGatewayAssociationProposal
DirectConnectGatewayAssociationProposal' :: Maybe Text -> Maybe [RouteFilterPrefix] -> Maybe DirectConnectGatewayAssociationProposalState -> Maybe AssociatedGateway -> Maybe [RouteFilterPrefix] -> Maybe Text -> Maybe Text -> DirectConnectGatewayAssociationProposal

-- | Create a value of <a>DirectConnectGatewayAssociationProposal</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:proposalId:DirectConnectGatewayAssociationProposal'</a>,
--   <a>directConnectGatewayAssociationProposal_proposalId</a> - The ID of
--   the association proposal.
--   
--   
--   <a>$sel:requestedAllowedPrefixesToDirectConnectGateway:DirectConnectGatewayAssociationProposal'</a>,
--   <a>directConnectGatewayAssociationProposal_requestedAllowedPrefixesToDirectConnectGateway</a>
--   - The Amazon VPC prefixes to advertise to the Direct Connect gateway.
--   
--   <a>$sel:proposalState:DirectConnectGatewayAssociationProposal'</a>,
--   <a>directConnectGatewayAssociationProposal_proposalState</a> - The
--   state of the proposal. The following are possible values:
--   
--   <ul>
--   <li><tt>accepted</tt>: The proposal has been accepted. The Direct
--   Connect gateway association is available to use in this state.</li>
--   <li><tt>deleted</tt>: The proposal has been deleted by the owner that
--   made the proposal. The Direct Connect gateway association cannot be
--   used in this state.</li>
--   <li><tt>requested</tt>: The proposal has been requested. The Direct
--   Connect gateway association cannot be used in this state.</li>
--   </ul>
--   
--   
--   <a>$sel:associatedGateway:DirectConnectGatewayAssociationProposal'</a>,
--   <a>directConnectGatewayAssociationProposal_associatedGateway</a> -
--   Information about the associated gateway.
--   
--   
--   <a>$sel:existingAllowedPrefixesToDirectConnectGateway:DirectConnectGatewayAssociationProposal'</a>,
--   <a>directConnectGatewayAssociationProposal_existingAllowedPrefixesToDirectConnectGateway</a>
--   - The existing Amazon VPC prefixes advertised to the Direct Connect
--   gateway.
--   
--   
--   <a>$sel:directConnectGatewayId:DirectConnectGatewayAssociationProposal'</a>,
--   <a>directConnectGatewayAssociationProposal_directConnectGatewayId</a>
--   - The ID of the Direct Connect gateway.
--   
--   
--   <a>$sel:directConnectGatewayOwnerAccount:DirectConnectGatewayAssociationProposal'</a>,
--   <a>directConnectGatewayAssociationProposal_directConnectGatewayOwnerAccount</a>
--   - The ID of the account that owns the Direct Connect gateway.
newDirectConnectGatewayAssociationProposal :: DirectConnectGatewayAssociationProposal

-- | Information about an attachment between a Direct Connect gateway and a
--   virtual interface.
--   
--   <i>See:</i> <a>newDirectConnectGatewayAttachment</a> smart
--   constructor.
data DirectConnectGatewayAttachment
DirectConnectGatewayAttachment' :: Maybe Text -> Maybe DirectConnectGatewayAttachmentState -> Maybe Text -> Maybe Text -> Maybe DirectConnectGatewayAttachmentType -> Maybe Text -> Maybe Text -> DirectConnectGatewayAttachment

-- | Create a value of <a>DirectConnectGatewayAttachment</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stateChangeError:DirectConnectGatewayAttachment'</a>,
--   <a>directConnectGatewayAttachment_stateChangeError</a> - The error
--   message if the state of an object failed to advance.
--   
--   <a>$sel:attachmentState:DirectConnectGatewayAttachment'</a>,
--   <a>directConnectGatewayAttachment_attachmentState</a> - The state of
--   the attachment. The following are the possible values:
--   
--   <ul>
--   <li><tt>attaching</tt>: The initial state after a virtual interface is
--   created using the Direct Connect gateway.</li>
--   <li><tt>attached</tt>: The Direct Connect gateway and virtual
--   interface are attached and ready to pass traffic.</li>
--   <li><tt>detaching</tt>: The initial state after calling
--   DeleteVirtualInterface.</li>
--   <li><tt>detached</tt>: The virtual interface is detached from the
--   Direct Connect gateway. Traffic flow between the Direct Connect
--   gateway and virtual interface is stopped.</li>
--   </ul>
--   
--   
--   <a>$sel:virtualInterfaceOwnerAccount:DirectConnectGatewayAttachment'</a>,
--   <a>directConnectGatewayAttachment_virtualInterfaceOwnerAccount</a> -
--   The ID of the account that owns the virtual interface.
--   
--   <a>$sel:virtualInterfaceRegion:DirectConnectGatewayAttachment'</a>,
--   <a>directConnectGatewayAttachment_virtualInterfaceRegion</a> - The
--   Region where the virtual interface is located.
--   
--   <a>$sel:attachmentType:DirectConnectGatewayAttachment'</a>,
--   <a>directConnectGatewayAttachment_attachmentType</a> - The type of
--   attachment.
--   
--   <a>$sel:virtualInterfaceId:DirectConnectGatewayAttachment'</a>,
--   <a>directConnectGatewayAttachment_virtualInterfaceId</a> - The ID of
--   the virtual interface.
--   
--   <a>$sel:directConnectGatewayId:DirectConnectGatewayAttachment'</a>,
--   <a>directConnectGatewayAttachment_directConnectGatewayId</a> - The ID
--   of the Direct Connect gateway.
newDirectConnectGatewayAttachment :: DirectConnectGatewayAttachment

-- | Information about an interconnect.
--   
--   <i>See:</i> <a>newInterconnect</a> smart constructor.
data Interconnect
Interconnect' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe HasLogicalRedundancy -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe (NonEmpty Tag) -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe InterconnectState -> Maybe Text -> Interconnect

-- | Create a value of <a>Interconnect</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:interconnectId:Interconnect'</a>,
--   <a>interconnect_interconnectId</a> - The ID of the interconnect.
--   
--   <a>$sel:bandwidth:Interconnect'</a>, <a>interconnect_bandwidth</a> -
--   The bandwidth of the connection.
--   
--   <a>$sel:awsDeviceV2:Interconnect'</a>, <a>interconnect_awsDeviceV2</a>
--   - The Direct Connect endpoint that terminates the physical connection.
--   
--   <a>$sel:providerName:Interconnect'</a>,
--   <a>interconnect_providerName</a> - The name of the service provider
--   associated with the interconnect.
--   
--   <a>$sel:awsLogicalDeviceId:Interconnect'</a>,
--   <a>interconnect_awsLogicalDeviceId</a> - The Direct Connect endpoint
--   that terminates the logical connection. This device might be different
--   than the device that terminates the physical connection.
--   
--   <a>$sel:hasLogicalRedundancy:Interconnect'</a>,
--   <a>interconnect_hasLogicalRedundancy</a> - Indicates whether the
--   interconnect supports a secondary BGP in the same address family
--   (IPv4/IPv6).
--   
--   <a>$sel:awsDevice:Interconnect'</a>, <a>interconnect_awsDevice</a> -
--   The Direct Connect endpoint on which the physical connection
--   terminates.
--   
--   <a>$sel:jumboFrameCapable:Interconnect'</a>,
--   <a>interconnect_jumboFrameCapable</a> - Indicates whether jumbo frames
--   (9001 MTU) are supported.
--   
--   <a>$sel:lagId:Interconnect'</a>, <a>interconnect_lagId</a> - The ID of
--   the LAG.
--   
--   <a>$sel:tags:Interconnect'</a>, <a>interconnect_tags</a> - The tags
--   associated with the interconnect.
--   
--   <a>$sel:loaIssueTime:Interconnect'</a>,
--   <a>interconnect_loaIssueTime</a> - The time of the most recent call to
--   DescribeLoa for this connection.
--   
--   <a>$sel:region:Interconnect'</a>, <a>interconnect_region</a> - The
--   Region where the connection is located.
--   
--   <a>$sel:interconnectName:Interconnect'</a>,
--   <a>interconnect_interconnectName</a> - The name of the interconnect.
--   
--   <a>$sel:interconnectState:Interconnect'</a>,
--   <a>interconnect_interconnectState</a> - The state of the interconnect.
--   The following are the possible values:
--   
--   <ul>
--   <li><tt>requested</tt>: The initial state of an interconnect. The
--   interconnect stays in the requested state until the Letter of
--   Authorization (LOA) is sent to the customer.</li>
--   <li><tt>pending</tt>: The interconnect is approved, and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is up, and the interconnect
--   is ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The interconnect is being deleted.</li>
--   <li><tt>deleted</tt>: The interconnect is deleted.</li>
--   <li><tt>unknown</tt>: The state of the interconnect is not
--   available.</li>
--   </ul>
--   
--   <a>$sel:location:Interconnect'</a>, <a>interconnect_location</a> - The
--   location of the connection.
newInterconnect :: Interconnect

-- | Information about a link aggregation group (LAG).
--   
--   <i>See:</i> <a>newLag</a> smart constructor.
data Lag
Lag' :: Maybe Int -> Maybe Text -> Maybe Bool -> Maybe [MacSecKey] -> Maybe Text -> Maybe Text -> Maybe HasLogicalRedundancy -> Maybe Text -> Maybe [Connection] -> Maybe Text -> Maybe LagState -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (NonEmpty Tag) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Bool -> Lag

-- | Create a value of <a>Lag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:numberOfConnections:Lag'</a>, <a>lag_numberOfConnections</a> -
--   The number of physical dedicated connections bundled by the LAG, up to
--   a maximum of 10.
--   
--   <a>$sel:awsDeviceV2:Lag'</a>, <a>lag_awsDeviceV2</a> - The Direct
--   Connect endpoint that hosts the LAG.
--   
--   <a>$sel:allowsHostedConnections:Lag'</a>,
--   <a>lag_allowsHostedConnections</a> - Indicates whether the LAG can
--   host other connections.
--   
--   <a>$sel:macSecKeys:Lag'</a>, <a>lag_macSecKeys</a> - The MAC Security
--   (MACsec) security keys associated with the LAG.
--   
--   <a>$sel:providerName:Lag'</a>, <a>lag_providerName</a> - The name of
--   the service provider associated with the LAG.
--   
--   <a>$sel:awsLogicalDeviceId:Lag'</a>, <a>lag_awsLogicalDeviceId</a> -
--   The Direct Connect endpoint that terminates the logical connection.
--   This device might be different than the device that terminates the
--   physical connection.
--   
--   <a>$sel:hasLogicalRedundancy:Lag'</a>, <a>lag_hasLogicalRedundancy</a>
--   - Indicates whether the LAG supports a secondary BGP peer in the same
--   address family (IPv4/IPv6).
--   
--   <a>$sel:lagName:Lag'</a>, <a>lag_lagName</a> - The name of the LAG.
--   
--   <a>$sel:connections:Lag'</a>, <a>lag_connections</a> - The connections
--   bundled by the LAG.
--   
--   <a>$sel:awsDevice:Lag'</a>, <a>lag_awsDevice</a> - The Direct Connect
--   endpoint that hosts the LAG.
--   
--   <a>$sel:lagState:Lag'</a>, <a>lag_lagState</a> - The state of the LAG.
--   The following are the possible values:
--   
--   <ul>
--   <li><tt>requested</tt>: The initial state of a LAG. The LAG stays in
--   the requested state until the Letter of Authorization (LOA) is
--   available.</li>
--   <li><tt>pending</tt>: The LAG has been approved and is being
--   initialized.</li>
--   <li><tt>available</tt>: The network link is established and the LAG is
--   ready for use.</li>
--   <li><tt>down</tt>: The network link is down.</li>
--   <li><tt>deleting</tt>: The LAG is being deleted.</li>
--   <li><tt>deleted</tt>: The LAG is deleted.</li>
--   <li><tt>unknown</tt>: The state of the LAG is not available.</li>
--   </ul>
--   
--   <a>$sel:jumboFrameCapable:Lag'</a>, <a>lag_jumboFrameCapable</a> -
--   Indicates whether jumbo frames (9001 MTU) are supported.
--   
--   <a>$sel:connectionsBandwidth:Lag'</a>, <a>lag_connectionsBandwidth</a>
--   - The individual bandwidth of the physical connections bundled by the
--   LAG. The possible values are 1Gbps and 10Gbps.
--   
--   <a>$sel:lagId:Lag'</a>, <a>lag_lagId</a> - The ID of the LAG.
--   
--   <a>$sel:encryptionMode:Lag'</a>, <a>lag_encryptionMode</a> - The LAG
--   MAC Security (MACsec) encryption mode.
--   
--   The valid values are <tt>no_encrypt</tt>, <tt>should_encrypt</tt>, and
--   <tt>must_encrypt</tt>.
--   
--   <a>$sel:tags:Lag'</a>, <a>lag_tags</a> - The tags associated with the
--   LAG.
--   
--   <a>$sel:ownerAccount:Lag'</a>, <a>lag_ownerAccount</a> - The ID of the
--   account that owns the LAG.
--   
--   <a>$sel:region:Lag'</a>, <a>lag_region</a> - The Region where the
--   connection is located.
--   
--   <a>$sel:location:Lag'</a>, <a>lag_location</a> - The location of the
--   LAG.
--   
--   <a>$sel:minimumLinks:Lag'</a>, <a>lag_minimumLinks</a> - The minimum
--   number of physical dedicated connections that must be operational for
--   the LAG itself to be operational.
--   
--   <a>$sel:macSecCapable:Lag'</a>, <a>lag_macSecCapable</a> - Indicates
--   whether the LAG supports MAC Security (MACsec).
newLag :: Lag

-- | Information about an Direct Connect location.
--   
--   <i>See:</i> <a>newLocation</a> smart constructor.
data Location
Location' :: Maybe [Text] -> Maybe [Text] -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Text -> Location

-- | Create a value of <a>Location</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:availablePortSpeeds:Location'</a>,
--   <a>location_availablePortSpeeds</a> - The available port speeds for
--   the location.
--   
--   <a>$sel:availableMacSecPortSpeeds:Location'</a>,
--   <a>location_availableMacSecPortSpeeds</a> - The available MAC Security
--   (MACsec) port speeds for the location.
--   
--   <a>$sel:availableProviders:Location'</a>,
--   <a>location_availableProviders</a> - The name of the service provider
--   for the location.
--   
--   <a>$sel:locationCode:Location'</a>, <a>location_locationCode</a> - The
--   code for the location.
--   
--   <a>$sel:region:Location'</a>, <a>location_region</a> - The Region for
--   the location.
--   
--   <a>$sel:locationName:Location'</a>, <a>location_locationName</a> - The
--   name of the location. This includes the name of the colocation partner
--   and the physical site of the building.
newLocation :: Location

-- | Information about the MAC Security (MACsec) secret key.
--   
--   <i>See:</i> <a>newMacSecKey</a> smart constructor.
data MacSecKey
MacSecKey' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> MacSecKey

-- | Create a value of <a>MacSecKey</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:startOn:MacSecKey'</a>, <a>macSecKey_startOn</a> - The date
--   that the MAC Security (MACsec) secret key takes effect. The value is
--   displayed in UTC format.
--   
--   <a>$sel:ckn:MacSecKey'</a>, <a>macSecKey_ckn</a> - The Connection Key
--   Name (CKN) for the MAC Security secret key.
--   
--   <a>$sel:secretARN:MacSecKey'</a>, <a>macSecKey_secretARN</a> - The
--   Amazon Resource Name (ARN) of the MAC Security (MACsec) secret key.
--   
--   <a>$sel:state:MacSecKey'</a>, <a>macSecKey_state</a> - The state of
--   the MAC Security (MACsec) secret key.
--   
--   The possible values are:
--   
--   <ul>
--   <li><tt>associating</tt>: The MAC Security (MACsec) secret key is
--   being validated and not yet associated with the connection or
--   LAG.</li>
--   <li><tt>associated</tt>: The MAC Security (MACsec) secret key is
--   validated and associated with the connection or LAG.</li>
--   <li><tt>disassociating</tt>: The MAC Security (MACsec) secret key is
--   being disassociated from the connection or LAG</li>
--   <li><tt>disassociated</tt>: The MAC Security (MACsec) secret key is no
--   longer associated with the connection or LAG.</li>
--   </ul>
newMacSecKey :: MacSecKey

-- | Information about a new BGP peer.
--   
--   <i>See:</i> <a>newNewBGPPeer</a> smart constructor.
data NewBGPPeer
NewBGPPeer' :: Maybe Text -> Maybe Int -> Maybe Text -> Maybe AddressFamily -> Maybe Text -> NewBGPPeer

-- | Create a value of <a>NewBGPPeer</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authKey:NewBGPPeer'</a>, <a>newBGPPeer_authKey</a> - The
--   authentication key for BGP configuration. This string has a minimum
--   length of 6 characters and and a maximun lenth of 80 characters.
--   
--   <a>$sel:asn:NewBGPPeer'</a>, <a>newBGPPeer_asn</a> - The autonomous
--   system (AS) number for Border Gateway Protocol (BGP) configuration.
--   
--   <a>$sel:amazonAddress:NewBGPPeer'</a>, <a>newBGPPeer_amazonAddress</a>
--   - The IP address assigned to the Amazon interface.
--   
--   <a>$sel:addressFamily:NewBGPPeer'</a>, <a>newBGPPeer_addressFamily</a>
--   - The address family for the BGP peer.
--   
--   <a>$sel:customerAddress:NewBGPPeer'</a>,
--   <a>newBGPPeer_customerAddress</a> - The IP address assigned to the
--   customer interface.
newNewBGPPeer :: NewBGPPeer

-- | Information about a private virtual interface.
--   
--   <i>See:</i> <a>newNewPrivateVirtualInterface</a> smart constructor.
data NewPrivateVirtualInterface
NewPrivateVirtualInterface' :: Maybe Text -> Maybe Text -> Maybe Int -> Maybe (NonEmpty Tag) -> Maybe Text -> Maybe Text -> Maybe AddressFamily -> Maybe Text -> Text -> Int -> Int -> NewPrivateVirtualInterface

-- | Create a value of <a>NewPrivateVirtualInterface</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authKey:NewPrivateVirtualInterface'</a>,
--   <a>newPrivateVirtualInterface_authKey</a> - The authentication key for
--   BGP configuration. This string has a minimum length of 6 characters
--   and and a maximun lenth of 80 characters.
--   
--   <a>$sel:virtualGatewayId:NewPrivateVirtualInterface'</a>,
--   <a>newPrivateVirtualInterface_virtualGatewayId</a> - The ID of the
--   virtual private gateway.
--   
--   <a>$sel:mtu:NewPrivateVirtualInterface'</a>,
--   <a>newPrivateVirtualInterface_mtu</a> - The maximum transmission unit
--   (MTU), in bytes. The supported values are 1500 and 9001. The default
--   value is 1500.
--   
--   <a>$sel:tags:NewPrivateVirtualInterface'</a>,
--   <a>newPrivateVirtualInterface_tags</a> - The tags associated with the
--   private virtual interface.
--   
--   <a>$sel:directConnectGatewayId:NewPrivateVirtualInterface'</a>,
--   <a>newPrivateVirtualInterface_directConnectGatewayId</a> - The ID of
--   the Direct Connect gateway.
--   
--   <a>$sel:amazonAddress:NewPrivateVirtualInterface'</a>,
--   <a>newPrivateVirtualInterface_amazonAddress</a> - The IP address
--   assigned to the Amazon interface.
--   
--   <a>$sel:addressFamily:NewPrivateVirtualInterface'</a>,
--   <a>newPrivateVirtualInterface_addressFamily</a> - The address family
--   for the BGP peer.
--   
--   <a>$sel:customerAddress:NewPrivateVirtualInterface'</a>,
--   <a>newPrivateVirtualInterface_customerAddress</a> - The IP address
--   assigned to the customer interface.
--   
--   <a>$sel:virtualInterfaceName:NewPrivateVirtualInterface'</a>,
--   <a>newPrivateVirtualInterface_virtualInterfaceName</a> - The name of
--   the virtual interface assigned by the customer network. The name has a
--   maximum of 100 characters. The following are valid characters: a-z,
--   0-9 and a hyphen (-).
--   
--   <a>$sel:vlan:NewPrivateVirtualInterface'</a>,
--   <a>newPrivateVirtualInterface_vlan</a> - The ID of the VLAN.
--   
--   <a>$sel:asn:NewPrivateVirtualInterface'</a>,
--   <a>newPrivateVirtualInterface_asn</a> - The autonomous system (AS)
--   number for Border Gateway Protocol (BGP) configuration.
--   
--   The valid values are 1-2147483647.
newNewPrivateVirtualInterface :: Text -> Int -> Int -> NewPrivateVirtualInterface

-- | Information about a private virtual interface to be provisioned on a
--   connection.
--   
--   <i>See:</i> <a>newNewPrivateVirtualInterfaceAllocation</a> smart
--   constructor.
data NewPrivateVirtualInterfaceAllocation
NewPrivateVirtualInterfaceAllocation' :: Maybe Text -> Maybe Int -> Maybe (NonEmpty Tag) -> Maybe Text -> Maybe AddressFamily -> Maybe Text -> Text -> Int -> Int -> NewPrivateVirtualInterfaceAllocation

-- | Create a value of <a>NewPrivateVirtualInterfaceAllocation</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authKey:NewPrivateVirtualInterfaceAllocation'</a>,
--   <a>newPrivateVirtualInterfaceAllocation_authKey</a> - The
--   authentication key for BGP configuration. This string has a minimum
--   length of 6 characters and and a maximun lenth of 80 characters.
--   
--   <a>$sel:mtu:NewPrivateVirtualInterfaceAllocation'</a>,
--   <a>newPrivateVirtualInterfaceAllocation_mtu</a> - The maximum
--   transmission unit (MTU), in bytes. The supported values are 1500 and
--   9001. The default value is 1500.
--   
--   <a>$sel:tags:NewPrivateVirtualInterfaceAllocation'</a>,
--   <a>newPrivateVirtualInterfaceAllocation_tags</a> - The tags associated
--   with the private virtual interface.
--   
--   <a>$sel:amazonAddress:NewPrivateVirtualInterfaceAllocation'</a>,
--   <a>newPrivateVirtualInterfaceAllocation_amazonAddress</a> - The IP
--   address assigned to the Amazon interface.
--   
--   <a>$sel:addressFamily:NewPrivateVirtualInterfaceAllocation'</a>,
--   <a>newPrivateVirtualInterfaceAllocation_addressFamily</a> - The
--   address family for the BGP peer.
--   
--   <a>$sel:customerAddress:NewPrivateVirtualInterfaceAllocation'</a>,
--   <a>newPrivateVirtualInterfaceAllocation_customerAddress</a> - The IP
--   address assigned to the customer interface.
--   
--   
--   <a>$sel:virtualInterfaceName:NewPrivateVirtualInterfaceAllocation'</a>,
--   <a>newPrivateVirtualInterfaceAllocation_virtualInterfaceName</a> - The
--   name of the virtual interface assigned by the customer network. The
--   name has a maximum of 100 characters. The following are valid
--   characters: a-z, 0-9 and a hyphen (-).
--   
--   <a>$sel:vlan:NewPrivateVirtualInterfaceAllocation'</a>,
--   <a>newPrivateVirtualInterfaceAllocation_vlan</a> - The ID of the VLAN.
--   
--   <a>$sel:asn:NewPrivateVirtualInterfaceAllocation'</a>,
--   <a>newPrivateVirtualInterfaceAllocation_asn</a> - The autonomous
--   system (AS) number for Border Gateway Protocol (BGP) configuration.
--   
--   The valid values are 1-2147483647.
newNewPrivateVirtualInterfaceAllocation :: Text -> Int -> Int -> NewPrivateVirtualInterfaceAllocation

-- | Information about a public virtual interface.
--   
--   <i>See:</i> <a>newNewPublicVirtualInterface</a> smart constructor.
data NewPublicVirtualInterface
NewPublicVirtualInterface' :: Maybe Text -> Maybe [RouteFilterPrefix] -> Maybe (NonEmpty Tag) -> Maybe Text -> Maybe AddressFamily -> Maybe Text -> Text -> Int -> Int -> NewPublicVirtualInterface

-- | Create a value of <a>NewPublicVirtualInterface</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authKey:NewPublicVirtualInterface'</a>,
--   <a>newPublicVirtualInterface_authKey</a> - The authentication key for
--   BGP configuration. This string has a minimum length of 6 characters
--   and and a maximun lenth of 80 characters.
--   
--   <a>$sel:routeFilterPrefixes:NewPublicVirtualInterface'</a>,
--   <a>newPublicVirtualInterface_routeFilterPrefixes</a> - The routes to
--   be advertised to the Amazon Web Services network in this Region.
--   Applies to public virtual interfaces.
--   
--   <a>$sel:tags:NewPublicVirtualInterface'</a>,
--   <a>newPublicVirtualInterface_tags</a> - The tags associated with the
--   public virtual interface.
--   
--   <a>$sel:amazonAddress:NewPublicVirtualInterface'</a>,
--   <a>newPublicVirtualInterface_amazonAddress</a> - The IP address
--   assigned to the Amazon interface.
--   
--   <a>$sel:addressFamily:NewPublicVirtualInterface'</a>,
--   <a>newPublicVirtualInterface_addressFamily</a> - The address family
--   for the BGP peer.
--   
--   <a>$sel:customerAddress:NewPublicVirtualInterface'</a>,
--   <a>newPublicVirtualInterface_customerAddress</a> - The IP address
--   assigned to the customer interface.
--   
--   <a>$sel:virtualInterfaceName:NewPublicVirtualInterface'</a>,
--   <a>newPublicVirtualInterface_virtualInterfaceName</a> - The name of
--   the virtual interface assigned by the customer network. The name has a
--   maximum of 100 characters. The following are valid characters: a-z,
--   0-9 and a hyphen (-).
--   
--   <a>$sel:vlan:NewPublicVirtualInterface'</a>,
--   <a>newPublicVirtualInterface_vlan</a> - The ID of the VLAN.
--   
--   <a>$sel:asn:NewPublicVirtualInterface'</a>,
--   <a>newPublicVirtualInterface_asn</a> - The autonomous system (AS)
--   number for Border Gateway Protocol (BGP) configuration.
--   
--   The valid values are 1-2147483647.
newNewPublicVirtualInterface :: Text -> Int -> Int -> NewPublicVirtualInterface

-- | Information about a public virtual interface to be provisioned on a
--   connection.
--   
--   <i>See:</i> <a>newNewPublicVirtualInterfaceAllocation</a> smart
--   constructor.
data NewPublicVirtualInterfaceAllocation
NewPublicVirtualInterfaceAllocation' :: Maybe Text -> Maybe [RouteFilterPrefix] -> Maybe (NonEmpty Tag) -> Maybe Text -> Maybe AddressFamily -> Maybe Text -> Text -> Int -> Int -> NewPublicVirtualInterfaceAllocation

-- | Create a value of <a>NewPublicVirtualInterfaceAllocation</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authKey:NewPublicVirtualInterfaceAllocation'</a>,
--   <a>newPublicVirtualInterfaceAllocation_authKey</a> - The
--   authentication key for BGP configuration. This string has a minimum
--   length of 6 characters and and a maximun lenth of 80 characters.
--   
--   <a>$sel:routeFilterPrefixes:NewPublicVirtualInterfaceAllocation'</a>,
--   <a>newPublicVirtualInterfaceAllocation_routeFilterPrefixes</a> - The
--   routes to be advertised to the Amazon Web Services network in this
--   Region. Applies to public virtual interfaces.
--   
--   <a>$sel:tags:NewPublicVirtualInterfaceAllocation'</a>,
--   <a>newPublicVirtualInterfaceAllocation_tags</a> - The tags associated
--   with the public virtual interface.
--   
--   <a>$sel:amazonAddress:NewPublicVirtualInterfaceAllocation'</a>,
--   <a>newPublicVirtualInterfaceAllocation_amazonAddress</a> - The IP
--   address assigned to the Amazon interface.
--   
--   <a>$sel:addressFamily:NewPublicVirtualInterfaceAllocation'</a>,
--   <a>newPublicVirtualInterfaceAllocation_addressFamily</a> - The address
--   family for the BGP peer.
--   
--   <a>$sel:customerAddress:NewPublicVirtualInterfaceAllocation'</a>,
--   <a>newPublicVirtualInterfaceAllocation_customerAddress</a> - The IP
--   address assigned to the customer interface.
--   
--   <a>$sel:virtualInterfaceName:NewPublicVirtualInterfaceAllocation'</a>,
--   <a>newPublicVirtualInterfaceAllocation_virtualInterfaceName</a> - The
--   name of the virtual interface assigned by the customer network. The
--   name has a maximum of 100 characters. The following are valid
--   characters: a-z, 0-9 and a hyphen (-).
--   
--   <a>$sel:vlan:NewPublicVirtualInterfaceAllocation'</a>,
--   <a>newPublicVirtualInterfaceAllocation_vlan</a> - The ID of the VLAN.
--   
--   <a>$sel:asn:NewPublicVirtualInterfaceAllocation'</a>,
--   <a>newPublicVirtualInterfaceAllocation_asn</a> - The autonomous system
--   (AS) number for Border Gateway Protocol (BGP) configuration.
--   
--   The valid values are 1-2147483647.
newNewPublicVirtualInterfaceAllocation :: Text -> Int -> Int -> NewPublicVirtualInterfaceAllocation

-- | Information about a transit virtual interface.
--   
--   <i>See:</i> <a>newNewTransitVirtualInterface</a> smart constructor.
data NewTransitVirtualInterface
NewTransitVirtualInterface' :: Maybe Text -> Maybe Int -> Maybe Int -> Maybe (NonEmpty Tag) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe AddressFamily -> Maybe Int -> Maybe Text -> NewTransitVirtualInterface

-- | Create a value of <a>NewTransitVirtualInterface</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authKey:NewTransitVirtualInterface'</a>,
--   <a>newTransitVirtualInterface_authKey</a> - The authentication key for
--   BGP configuration. This string has a minimum length of 6 characters
--   and and a maximun lenth of 80 characters.
--   
--   <a>$sel:asn:NewTransitVirtualInterface'</a>,
--   <a>newTransitVirtualInterface_asn</a> - The autonomous system (AS)
--   number for Border Gateway Protocol (BGP) configuration.
--   
--   The valid values are 1-2147483647.
--   
--   <a>$sel:mtu:NewTransitVirtualInterface'</a>,
--   <a>newTransitVirtualInterface_mtu</a> - The maximum transmission unit
--   (MTU), in bytes. The supported values are 1500 and 9001. The default
--   value is 1500.
--   
--   <a>$sel:tags:NewTransitVirtualInterface'</a>,
--   <a>newTransitVirtualInterface_tags</a> - The tags associated with the
--   transitive virtual interface.
--   
--   <a>$sel:directConnectGatewayId:NewTransitVirtualInterface'</a>,
--   <a>newTransitVirtualInterface_directConnectGatewayId</a> - The ID of
--   the Direct Connect gateway.
--   
--   <a>$sel:virtualInterfaceName:NewTransitVirtualInterface'</a>,
--   <a>newTransitVirtualInterface_virtualInterfaceName</a> - The name of
--   the virtual interface assigned by the customer network. The name has a
--   maximum of 100 characters. The following are valid characters: a-z,
--   0-9 and a hyphen (-).
--   
--   <a>$sel:amazonAddress:NewTransitVirtualInterface'</a>,
--   <a>newTransitVirtualInterface_amazonAddress</a> - The IP address
--   assigned to the Amazon interface.
--   
--   <a>$sel:addressFamily:NewTransitVirtualInterface'</a>,
--   <a>newTransitVirtualInterface_addressFamily</a> - The address family
--   for the BGP peer.
--   
--   <a>$sel:vlan:NewTransitVirtualInterface'</a>,
--   <a>newTransitVirtualInterface_vlan</a> - The ID of the VLAN.
--   
--   <a>$sel:customerAddress:NewTransitVirtualInterface'</a>,
--   <a>newTransitVirtualInterface_customerAddress</a> - The IP address
--   assigned to the customer interface.
newNewTransitVirtualInterface :: NewTransitVirtualInterface

-- | Information about a transit virtual interface to be provisioned on a
--   connection.
--   
--   <i>See:</i> <a>newNewTransitVirtualInterfaceAllocation</a> smart
--   constructor.
data NewTransitVirtualInterfaceAllocation
NewTransitVirtualInterfaceAllocation' :: Maybe Text -> Maybe Int -> Maybe Int -> Maybe (NonEmpty Tag) -> Maybe Text -> Maybe Text -> Maybe AddressFamily -> Maybe Int -> Maybe Text -> NewTransitVirtualInterfaceAllocation

-- | Create a value of <a>NewTransitVirtualInterfaceAllocation</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authKey:NewTransitVirtualInterfaceAllocation'</a>,
--   <a>newTransitVirtualInterfaceAllocation_authKey</a> - The
--   authentication key for BGP configuration. This string has a minimum
--   length of 6 characters and and a maximun lenth of 80 characters.
--   
--   <a>$sel:asn:NewTransitVirtualInterfaceAllocation'</a>,
--   <a>newTransitVirtualInterfaceAllocation_asn</a> - The autonomous
--   system (AS) number for Border Gateway Protocol (BGP) configuration.
--   
--   The valid values are 1-2147483647.
--   
--   <a>$sel:mtu:NewTransitVirtualInterfaceAllocation'</a>,
--   <a>newTransitVirtualInterfaceAllocation_mtu</a> - The maximum
--   transmission unit (MTU), in bytes. The supported values are 1500 and
--   9001. The default value is 1500.
--   
--   <a>$sel:tags:NewTransitVirtualInterfaceAllocation'</a>,
--   <a>newTransitVirtualInterfaceAllocation_tags</a> - The tags associated
--   with the transitive virtual interface.
--   
--   
--   <a>$sel:virtualInterfaceName:NewTransitVirtualInterfaceAllocation'</a>,
--   <a>newTransitVirtualInterfaceAllocation_virtualInterfaceName</a> - The
--   name of the virtual interface assigned by the customer network. The
--   name has a maximum of 100 characters. The following are valid
--   characters: a-z, 0-9 and a hyphen (-).
--   
--   <a>$sel:amazonAddress:NewTransitVirtualInterfaceAllocation'</a>,
--   <a>newTransitVirtualInterfaceAllocation_amazonAddress</a> - The IP
--   address assigned to the Amazon interface.
--   
--   <a>$sel:addressFamily:NewTransitVirtualInterfaceAllocation'</a>,
--   <a>newTransitVirtualInterfaceAllocation_addressFamily</a> - The
--   address family for the BGP peer.
--   
--   <a>$sel:vlan:NewTransitVirtualInterfaceAllocation'</a>,
--   <a>newTransitVirtualInterfaceAllocation_vlan</a> - The ID of the VLAN.
--   
--   <a>$sel:customerAddress:NewTransitVirtualInterfaceAllocation'</a>,
--   <a>newTransitVirtualInterfaceAllocation_customerAddress</a> - The IP
--   address assigned to the customer interface.
newNewTransitVirtualInterfaceAllocation :: NewTransitVirtualInterfaceAllocation

-- | Information about a tag associated with an Direct Connect resource.
--   
--   <i>See:</i> <a>newResourceTag</a> smart constructor.
data ResourceTag
ResourceTag' :: Maybe Text -> Maybe (NonEmpty Tag) -> ResourceTag

-- | Create a value of <a>ResourceTag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ResourceTag'</a>, <a>resourceTag_resourceArn</a> -
--   The Amazon Resource Name (ARN) of the resource.
--   
--   <a>$sel:tags:ResourceTag'</a>, <a>resourceTag_tags</a> - The tags.
newResourceTag :: ResourceTag

-- | Information about a route filter prefix that a customer can advertise
--   through Border Gateway Protocol (BGP) over a public virtual interface.
--   
--   <i>See:</i> <a>newRouteFilterPrefix</a> smart constructor.
data RouteFilterPrefix
RouteFilterPrefix' :: Maybe Text -> RouteFilterPrefix

-- | Create a value of <a>RouteFilterPrefix</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cidr:RouteFilterPrefix'</a>, <a>routeFilterPrefix_cidr</a> -
--   The CIDR block for the advertised route. Separate multiple routes
--   using commas. An IPv6 CIDR must use /64 or shorter.
newRouteFilterPrefix :: RouteFilterPrefix

-- | Information about a tag.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Maybe Text -> Text -> Tag

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The value.
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The key.
newTag :: Text -> Tag

-- | Information about a virtual private gateway for a private virtual
--   interface.
--   
--   <i>See:</i> <a>newVirtualGateway</a> smart constructor.
data VirtualGateway
VirtualGateway' :: Maybe Text -> Maybe Text -> VirtualGateway

-- | Create a value of <a>VirtualGateway</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:virtualGatewayId:VirtualGateway'</a>,
--   <a>virtualGateway_virtualGatewayId</a> - The ID of the virtual private
--   gateway.
--   
--   <a>$sel:virtualGatewayState:VirtualGateway'</a>,
--   <a>virtualGateway_virtualGatewayState</a> - The state of the virtual
--   private gateway. The following are the possible values:
--   
--   <ul>
--   <li><tt>pending</tt>: Initial state after creating the virtual private
--   gateway.</li>
--   <li><tt>available</tt>: Ready for use by a private virtual
--   interface.</li>
--   <li><tt>deleting</tt>: Initial state after deleting the virtual
--   private gateway.</li>
--   <li><tt>deleted</tt>: The virtual private gateway is deleted. The
--   private virtual interface is unable to send traffic over this
--   gateway.</li>
--   </ul>
newVirtualGateway :: VirtualGateway

-- | Information about a virtual interface.
--   
--   <i>See:</i> <a>newVirtualInterface</a> smart constructor.
data VirtualInterface
VirtualInterface' :: Maybe Text -> Maybe [BGPPeer] -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe [RouteFilterPrefix] -> Maybe Int -> Maybe Text -> Maybe Integer -> Maybe Text -> Maybe (NonEmpty Tag) -> Maybe Text -> Maybe Text -> Maybe VirtualInterfaceState -> Maybe Text -> Maybe AddressFamily -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> VirtualInterface

-- | Create a value of <a>VirtualInterface</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authKey:VirtualInterface'</a>, <a>virtualInterface_authKey</a>
--   - The authentication key for BGP configuration. This string has a
--   minimum length of 6 characters and and a maximun lenth of 80
--   characters.
--   
--   <a>$sel:bgpPeers:VirtualInterface'</a>,
--   <a>virtualInterface_bgpPeers</a> - The BGP peers configured on this
--   virtual interface.
--   
--   <a>$sel:virtualGatewayId:VirtualInterface'</a>,
--   <a>virtualInterface_virtualGatewayId</a> - The ID of the virtual
--   private gateway. Applies only to private virtual interfaces.
--   
--   <a>$sel:asn:VirtualInterface'</a>, <a>virtualInterface_asn</a> - The
--   autonomous system (AS) number for Border Gateway Protocol (BGP)
--   configuration.
--   
--   The valid values are 1-2147483647.
--   
--   <a>$sel:awsDeviceV2:VirtualInterface'</a>,
--   <a>virtualInterface_awsDeviceV2</a> - The Direct Connect endpoint that
--   terminates the physical connection.
--   
--   <a>$sel:connectionId:VirtualInterface'</a>,
--   <a>virtualInterface_connectionId</a> - The ID of the connection.
--   
--   <a>$sel:awsLogicalDeviceId:VirtualInterface'</a>,
--   <a>virtualInterface_awsLogicalDeviceId</a> - The Direct Connect
--   endpoint that terminates the logical connection. This device might be
--   different than the device that terminates the physical connection.
--   
--   <a>$sel:customerRouterConfig:VirtualInterface'</a>,
--   <a>virtualInterface_customerRouterConfig</a> - The customer router
--   configuration.
--   
--   <a>$sel:jumboFrameCapable:VirtualInterface'</a>,
--   <a>virtualInterface_jumboFrameCapable</a> - Indicates whether jumbo
--   frames (9001 MTU) are supported.
--   
--   <a>$sel:routeFilterPrefixes:VirtualInterface'</a>,
--   <a>virtualInterface_routeFilterPrefixes</a> - The routes to be
--   advertised to the Amazon Web Services network in this Region. Applies
--   to public virtual interfaces.
--   
--   <a>$sel:mtu:VirtualInterface'</a>, <a>virtualInterface_mtu</a> - The
--   maximum transmission unit (MTU), in bytes. The supported values are
--   1500 and 9001. The default value is 1500.
--   
--   <a>$sel:virtualInterfaceType:VirtualInterface'</a>,
--   <a>virtualInterface_virtualInterfaceType</a> - The type of virtual
--   interface. The possible values are <tt>private</tt> and
--   <tt>public</tt>.
--   
--   <a>$sel:amazonSideAsn:VirtualInterface'</a>,
--   <a>virtualInterface_amazonSideAsn</a> - The autonomous system number
--   (ASN) for the Amazon side of the connection.
--   
--   <a>$sel:virtualInterfaceId:VirtualInterface'</a>,
--   <a>virtualInterface_virtualInterfaceId</a> - The ID of the virtual
--   interface.
--   
--   <a>$sel:tags:VirtualInterface'</a>, <a>virtualInterface_tags</a> - The
--   tags associated with the virtual interface.
--   
--   <a>$sel:directConnectGatewayId:VirtualInterface'</a>,
--   <a>virtualInterface_directConnectGatewayId</a> - The ID of the Direct
--   Connect gateway.
--   
--   <a>$sel:virtualInterfaceName:VirtualInterface'</a>,
--   <a>virtualInterface_virtualInterfaceName</a> - The name of the virtual
--   interface assigned by the customer network. The name has a maximum of
--   100 characters. The following are valid characters: a-z, 0-9 and a
--   hyphen (-).
--   
--   <a>$sel:virtualInterfaceState:VirtualInterface'</a>,
--   <a>virtualInterface_virtualInterfaceState</a> - The state of the
--   virtual interface. The following are the possible values:
--   
--   <ul>
--   <li><tt>confirming</tt>: The creation of the virtual interface is
--   pending confirmation from the virtual interface owner. If the owner of
--   the virtual interface is different from the owner of the connection on
--   which it is provisioned, then the virtual interface will remain in
--   this state until it is confirmed by the virtual interface owner.</li>
--   <li><tt>verifying</tt>: This state only applies to public virtual
--   interfaces. Each public virtual interface needs validation before the
--   virtual interface can be created.</li>
--   <li><tt>pending</tt>: A virtual interface is in this state from the
--   time that it is created until the virtual interface is ready to
--   forward traffic.</li>
--   <li><tt>available</tt>: A virtual interface that is able to forward
--   traffic.</li>
--   <li><tt>down</tt>: A virtual interface that is BGP down.</li>
--   <li><tt>deleting</tt>: A virtual interface is in this state
--   immediately after calling DeleteVirtualInterface until it can no
--   longer forward traffic.</li>
--   <li><tt>deleted</tt>: A virtual interface that cannot forward
--   traffic.</li>
--   <li><tt>rejected</tt>: The virtual interface owner has declined
--   creation of the virtual interface. If a virtual interface in the
--   <tt>Confirming</tt> state is deleted by the virtual interface owner,
--   the virtual interface enters the <tt>Rejected</tt> state.</li>
--   <li><tt>unknown</tt>: The state of the virtual interface is not
--   available.</li>
--   </ul>
--   
--   <a>$sel:amazonAddress:VirtualInterface'</a>,
--   <a>virtualInterface_amazonAddress</a> - The IP address assigned to the
--   Amazon interface.
--   
--   <a>$sel:addressFamily:VirtualInterface'</a>,
--   <a>virtualInterface_addressFamily</a> - The address family for the BGP
--   peer.
--   
--   <a>$sel:ownerAccount:VirtualInterface'</a>,
--   <a>virtualInterface_ownerAccount</a> - The ID of the account that owns
--   the virtual interface.
--   
--   <a>$sel:region:VirtualInterface'</a>, <a>virtualInterface_region</a> -
--   The Region where the virtual interface is located.
--   
--   <a>$sel:vlan:VirtualInterface'</a>, <a>virtualInterface_vlan</a> - The
--   ID of the VLAN.
--   
--   <a>$sel:location:VirtualInterface'</a>,
--   <a>virtualInterface_location</a> - The location of the connection.
--   
--   <a>$sel:customerAddress:VirtualInterface'</a>,
--   <a>virtualInterface_customerAddress</a> - The IP address assigned to
--   the customer interface.
newVirtualInterface :: VirtualInterface

-- | Information about the virtual interface failover test.
--   
--   <i>See:</i> <a>newVirtualInterfaceTestHistory</a> smart constructor.
data VirtualInterfaceTestHistory
VirtualInterfaceTestHistory' :: Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Int -> VirtualInterfaceTestHistory

-- | Create a value of <a>VirtualInterfaceTestHistory</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bgpPeers:VirtualInterfaceTestHistory'</a>,
--   <a>virtualInterfaceTestHistory_bgpPeers</a> - The BGP peers that were
--   put in the DOWN state as part of the virtual interface failover test.
--   
--   <a>$sel:status:VirtualInterfaceTestHistory'</a>,
--   <a>virtualInterfaceTestHistory_status</a> - The status of the virtual
--   interface failover test.
--   
--   <a>$sel:testId:VirtualInterfaceTestHistory'</a>,
--   <a>virtualInterfaceTestHistory_testId</a> - The ID of the virtual
--   interface failover test.
--   
--   <a>$sel:startTime:VirtualInterfaceTestHistory'</a>,
--   <a>virtualInterfaceTestHistory_startTime</a> - The time that the
--   virtual interface moves to the DOWN state.
--   
--   <a>$sel:endTime:VirtualInterfaceTestHistory'</a>,
--   <a>virtualInterfaceTestHistory_endTime</a> - The time that the virtual
--   interface moves out of the DOWN state.
--   
--   <a>$sel:virtualInterfaceId:VirtualInterfaceTestHistory'</a>,
--   <a>virtualInterfaceTestHistory_virtualInterfaceId</a> - The ID of the
--   tested virtual interface.
--   
--   <a>$sel:ownerAccount:VirtualInterfaceTestHistory'</a>,
--   <a>virtualInterfaceTestHistory_ownerAccount</a> - The owner ID of the
--   tested virtual interface.
--   
--   <a>$sel:testDurationInMinutes:VirtualInterfaceTestHistory'</a>,
--   <a>virtualInterfaceTestHistory_testDurationInMinutes</a> - The time
--   that the virtual interface failover test ran in minutes.
newVirtualInterfaceTestHistory :: VirtualInterfaceTestHistory
