-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-lookoutequipmentZSamazonka-lookoutequipment
@version 2.0


module Network.AWS.LookoutEquipment.Types.DataUploadFrequency
newtype DataUploadFrequency
DataUploadFrequency' :: Text -> DataUploadFrequency
[fromDataUploadFrequency] :: DataUploadFrequency -> Text
pattern DataUploadFrequency_PT10M :: DataUploadFrequency
pattern DataUploadFrequency_PT15M :: DataUploadFrequency
pattern DataUploadFrequency_PT1H :: DataUploadFrequency
pattern DataUploadFrequency_PT30M :: DataUploadFrequency
pattern DataUploadFrequency_PT5M :: DataUploadFrequency
instance Network.AWS.Data.XML.ToXML Network.AWS.LookoutEquipment.Types.DataUploadFrequency.DataUploadFrequency
instance Network.AWS.Data.XML.FromXML Network.AWS.LookoutEquipment.Types.DataUploadFrequency.DataUploadFrequency
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.LookoutEquipment.Types.DataUploadFrequency.DataUploadFrequency
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LookoutEquipment.Types.DataUploadFrequency.DataUploadFrequency
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.LookoutEquipment.Types.DataUploadFrequency.DataUploadFrequency
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LookoutEquipment.Types.DataUploadFrequency.DataUploadFrequency
instance Network.AWS.Data.Query.ToQuery Network.AWS.LookoutEquipment.Types.DataUploadFrequency.DataUploadFrequency
instance Network.AWS.Data.Headers.ToHeader Network.AWS.LookoutEquipment.Types.DataUploadFrequency.DataUploadFrequency
instance Network.AWS.Data.Log.ToLog Network.AWS.LookoutEquipment.Types.DataUploadFrequency.DataUploadFrequency
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.LookoutEquipment.Types.DataUploadFrequency.DataUploadFrequency
instance Network.AWS.Data.Text.ToText Network.AWS.LookoutEquipment.Types.DataUploadFrequency.DataUploadFrequency
instance Network.AWS.Data.Text.FromText Network.AWS.LookoutEquipment.Types.DataUploadFrequency.DataUploadFrequency
instance Control.DeepSeq.NFData Network.AWS.LookoutEquipment.Types.DataUploadFrequency.DataUploadFrequency
instance Data.Hashable.Class.Hashable Network.AWS.LookoutEquipment.Types.DataUploadFrequency.DataUploadFrequency
instance GHC.Generics.Generic Network.AWS.LookoutEquipment.Types.DataUploadFrequency.DataUploadFrequency
instance GHC.Classes.Ord Network.AWS.LookoutEquipment.Types.DataUploadFrequency.DataUploadFrequency
instance GHC.Classes.Eq Network.AWS.LookoutEquipment.Types.DataUploadFrequency.DataUploadFrequency
instance GHC.Read.Read Network.AWS.LookoutEquipment.Types.DataUploadFrequency.DataUploadFrequency
instance GHC.Show.Show Network.AWS.LookoutEquipment.Types.DataUploadFrequency.DataUploadFrequency


module Network.AWS.LookoutEquipment.Types.DatasetSchema

-- | Provides information about the data schema used with the given
--   dataset.
--   
--   <i>See:</i> <a>newDatasetSchema</a> smart constructor.
data DatasetSchema
DatasetSchema' :: Maybe Text -> DatasetSchema
[$sel:inlineDataSchema:DatasetSchema'] :: DatasetSchema -> Maybe Text

-- | Create a value of <a>DatasetSchema</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inlineDataSchema:DatasetSchema'</a>,
--   <a>datasetSchema_inlineDataSchema</a> -
newDatasetSchema :: DatasetSchema

datasetSchema_inlineDataSchema :: Lens' DatasetSchema (Maybe Text)
instance GHC.Generics.Generic Network.AWS.LookoutEquipment.Types.DatasetSchema.DatasetSchema
instance GHC.Show.Show Network.AWS.LookoutEquipment.Types.DatasetSchema.DatasetSchema
instance GHC.Read.Read Network.AWS.LookoutEquipment.Types.DatasetSchema.DatasetSchema
instance GHC.Classes.Eq Network.AWS.LookoutEquipment.Types.DatasetSchema.DatasetSchema
instance Data.Hashable.Class.Hashable Network.AWS.LookoutEquipment.Types.DatasetSchema.DatasetSchema
instance Control.DeepSeq.NFData Network.AWS.LookoutEquipment.Types.DatasetSchema.DatasetSchema
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LookoutEquipment.Types.DatasetSchema.DatasetSchema


module Network.AWS.LookoutEquipment.Types.DatasetStatus
newtype DatasetStatus
DatasetStatus' :: Text -> DatasetStatus
[fromDatasetStatus] :: DatasetStatus -> Text
pattern DatasetStatus_ACTIVE :: DatasetStatus
pattern DatasetStatus_CREATED :: DatasetStatus
pattern DatasetStatus_INGESTION_IN_PROGRESS :: DatasetStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.LookoutEquipment.Types.DatasetStatus.DatasetStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.LookoutEquipment.Types.DatasetStatus.DatasetStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.LookoutEquipment.Types.DatasetStatus.DatasetStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LookoutEquipment.Types.DatasetStatus.DatasetStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.LookoutEquipment.Types.DatasetStatus.DatasetStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LookoutEquipment.Types.DatasetStatus.DatasetStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.LookoutEquipment.Types.DatasetStatus.DatasetStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.LookoutEquipment.Types.DatasetStatus.DatasetStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.LookoutEquipment.Types.DatasetStatus.DatasetStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.LookoutEquipment.Types.DatasetStatus.DatasetStatus
instance Network.AWS.Data.Text.ToText Network.AWS.LookoutEquipment.Types.DatasetStatus.DatasetStatus
instance Network.AWS.Data.Text.FromText Network.AWS.LookoutEquipment.Types.DatasetStatus.DatasetStatus
instance Control.DeepSeq.NFData Network.AWS.LookoutEquipment.Types.DatasetStatus.DatasetStatus
instance Data.Hashable.Class.Hashable Network.AWS.LookoutEquipment.Types.DatasetStatus.DatasetStatus
instance GHC.Generics.Generic Network.AWS.LookoutEquipment.Types.DatasetStatus.DatasetStatus
instance GHC.Classes.Ord Network.AWS.LookoutEquipment.Types.DatasetStatus.DatasetStatus
instance GHC.Classes.Eq Network.AWS.LookoutEquipment.Types.DatasetStatus.DatasetStatus
instance GHC.Read.Read Network.AWS.LookoutEquipment.Types.DatasetStatus.DatasetStatus
instance GHC.Show.Show Network.AWS.LookoutEquipment.Types.DatasetStatus.DatasetStatus


module Network.AWS.LookoutEquipment.Types.DatasetSummary

-- | Contains information about the specific data set, including name, ARN,
--   and status.
--   
--   <i>See:</i> <a>newDatasetSummary</a> smart constructor.
data DatasetSummary
DatasetSummary' :: Maybe DatasetStatus -> Maybe Text -> Maybe POSIX -> Maybe Text -> DatasetSummary

-- | Indicates the status of the dataset.
[$sel:status:DatasetSummary'] :: DatasetSummary -> Maybe DatasetStatus

-- | The Amazon Resource Name (ARN) of the specified dataset.
[$sel:datasetArn:DatasetSummary'] :: DatasetSummary -> Maybe Text

-- | The time at which the dataset was created in Amazon Lookout for
--   Equipment.
[$sel:createdAt:DatasetSummary'] :: DatasetSummary -> Maybe POSIX

-- | The name of the dataset.
[$sel:datasetName:DatasetSummary'] :: DatasetSummary -> Maybe Text

-- | Create a value of <a>DatasetSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:DatasetSummary'</a>, <a>datasetSummary_status</a> -
--   Indicates the status of the dataset.
--   
--   <a>$sel:datasetArn:DatasetSummary'</a>,
--   <a>datasetSummary_datasetArn</a> - The Amazon Resource Name (ARN) of
--   the specified dataset.
--   
--   <a>$sel:createdAt:DatasetSummary'</a>, <a>datasetSummary_createdAt</a>
--   - The time at which the dataset was created in Amazon Lookout for
--   Equipment.
--   
--   <a>$sel:datasetName:DatasetSummary'</a>,
--   <a>datasetSummary_datasetName</a> - The name of the dataset.
newDatasetSummary :: DatasetSummary

-- | Indicates the status of the dataset.
datasetSummary_status :: Lens' DatasetSummary (Maybe DatasetStatus)

-- | The Amazon Resource Name (ARN) of the specified dataset.
datasetSummary_datasetArn :: Lens' DatasetSummary (Maybe Text)

-- | The time at which the dataset was created in Amazon Lookout for
--   Equipment.
datasetSummary_createdAt :: Lens' DatasetSummary (Maybe UTCTime)

-- | The name of the dataset.
datasetSummary_datasetName :: Lens' DatasetSummary (Maybe Text)
instance GHC.Generics.Generic Network.AWS.LookoutEquipment.Types.DatasetSummary.DatasetSummary
instance GHC.Show.Show Network.AWS.LookoutEquipment.Types.DatasetSummary.DatasetSummary
instance GHC.Read.Read Network.AWS.LookoutEquipment.Types.DatasetSummary.DatasetSummary
instance GHC.Classes.Eq Network.AWS.LookoutEquipment.Types.DatasetSummary.DatasetSummary
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LookoutEquipment.Types.DatasetSummary.DatasetSummary
instance Data.Hashable.Class.Hashable Network.AWS.LookoutEquipment.Types.DatasetSummary.DatasetSummary
instance Control.DeepSeq.NFData Network.AWS.LookoutEquipment.Types.DatasetSummary.DatasetSummary


module Network.AWS.LookoutEquipment.Types.InferenceExecutionStatus
newtype InferenceExecutionStatus
InferenceExecutionStatus' :: Text -> InferenceExecutionStatus
[fromInferenceExecutionStatus] :: InferenceExecutionStatus -> Text
pattern InferenceExecutionStatus_FAILED :: InferenceExecutionStatus
pattern InferenceExecutionStatus_IN_PROGRESS :: InferenceExecutionStatus
pattern InferenceExecutionStatus_SUCCESS :: InferenceExecutionStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.LookoutEquipment.Types.InferenceExecutionStatus.InferenceExecutionStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.LookoutEquipment.Types.InferenceExecutionStatus.InferenceExecutionStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.LookoutEquipment.Types.InferenceExecutionStatus.InferenceExecutionStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LookoutEquipment.Types.InferenceExecutionStatus.InferenceExecutionStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.LookoutEquipment.Types.InferenceExecutionStatus.InferenceExecutionStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LookoutEquipment.Types.InferenceExecutionStatus.InferenceExecutionStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.LookoutEquipment.Types.InferenceExecutionStatus.InferenceExecutionStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.LookoutEquipment.Types.InferenceExecutionStatus.InferenceExecutionStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.LookoutEquipment.Types.InferenceExecutionStatus.InferenceExecutionStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.LookoutEquipment.Types.InferenceExecutionStatus.InferenceExecutionStatus
instance Network.AWS.Data.Text.ToText Network.AWS.LookoutEquipment.Types.InferenceExecutionStatus.InferenceExecutionStatus
instance Network.AWS.Data.Text.FromText Network.AWS.LookoutEquipment.Types.InferenceExecutionStatus.InferenceExecutionStatus
instance Control.DeepSeq.NFData Network.AWS.LookoutEquipment.Types.InferenceExecutionStatus.InferenceExecutionStatus
instance Data.Hashable.Class.Hashable Network.AWS.LookoutEquipment.Types.InferenceExecutionStatus.InferenceExecutionStatus
instance GHC.Generics.Generic Network.AWS.LookoutEquipment.Types.InferenceExecutionStatus.InferenceExecutionStatus
instance GHC.Classes.Ord Network.AWS.LookoutEquipment.Types.InferenceExecutionStatus.InferenceExecutionStatus
instance GHC.Classes.Eq Network.AWS.LookoutEquipment.Types.InferenceExecutionStatus.InferenceExecutionStatus
instance GHC.Read.Read Network.AWS.LookoutEquipment.Types.InferenceExecutionStatus.InferenceExecutionStatus
instance GHC.Show.Show Network.AWS.LookoutEquipment.Types.InferenceExecutionStatus.InferenceExecutionStatus


module Network.AWS.LookoutEquipment.Types.InferenceInputNameConfiguration

-- | Specifies configuration information for the input data for the
--   inference, including timestamp format and delimiter.
--   
--   <i>See:</i> <a>newInferenceInputNameConfiguration</a> smart
--   constructor.
data InferenceInputNameConfiguration
InferenceInputNameConfiguration' :: Maybe Text -> Maybe Text -> InferenceInputNameConfiguration

-- | The format of the timestamp, whether Epoch time, or standard, with or
--   without hyphens (-).
[$sel:timestampFormat:InferenceInputNameConfiguration'] :: InferenceInputNameConfiguration -> Maybe Text

-- | Indicates the delimiter character used between items in the data.
[$sel:componentTimestampDelimiter:InferenceInputNameConfiguration'] :: InferenceInputNameConfiguration -> Maybe Text

-- | Create a value of <a>InferenceInputNameConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timestampFormat:InferenceInputNameConfiguration'</a>,
--   <a>inferenceInputNameConfiguration_timestampFormat</a> - The format of
--   the timestamp, whether Epoch time, or standard, with or without
--   hyphens (-).
--   
--   
--   <a>$sel:componentTimestampDelimiter:InferenceInputNameConfiguration'</a>,
--   <a>inferenceInputNameConfiguration_componentTimestampDelimiter</a> -
--   Indicates the delimiter character used between items in the data.
newInferenceInputNameConfiguration :: InferenceInputNameConfiguration

-- | The format of the timestamp, whether Epoch time, or standard, with or
--   without hyphens (-).
inferenceInputNameConfiguration_timestampFormat :: Lens' InferenceInputNameConfiguration (Maybe Text)

-- | Indicates the delimiter character used between items in the data.
inferenceInputNameConfiguration_componentTimestampDelimiter :: Lens' InferenceInputNameConfiguration (Maybe Text)
instance GHC.Generics.Generic Network.AWS.LookoutEquipment.Types.InferenceInputNameConfiguration.InferenceInputNameConfiguration
instance GHC.Show.Show Network.AWS.LookoutEquipment.Types.InferenceInputNameConfiguration.InferenceInputNameConfiguration
instance GHC.Read.Read Network.AWS.LookoutEquipment.Types.InferenceInputNameConfiguration.InferenceInputNameConfiguration
instance GHC.Classes.Eq Network.AWS.LookoutEquipment.Types.InferenceInputNameConfiguration.InferenceInputNameConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LookoutEquipment.Types.InferenceInputNameConfiguration.InferenceInputNameConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.LookoutEquipment.Types.InferenceInputNameConfiguration.InferenceInputNameConfiguration
instance Control.DeepSeq.NFData Network.AWS.LookoutEquipment.Types.InferenceInputNameConfiguration.InferenceInputNameConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LookoutEquipment.Types.InferenceInputNameConfiguration.InferenceInputNameConfiguration


module Network.AWS.LookoutEquipment.Types.InferenceS3InputConfiguration

-- | Specifies configuration information for the input data for the
--   inference, including input data S3 location.
--   
--   <i>See:</i> <a>newInferenceS3InputConfiguration</a> smart constructor.
data InferenceS3InputConfiguration
InferenceS3InputConfiguration' :: Maybe Text -> Text -> InferenceS3InputConfiguration

-- | The prefix for the S3 bucket used for the input data for the
--   inference.
[$sel:prefix:InferenceS3InputConfiguration'] :: InferenceS3InputConfiguration -> Maybe Text

-- | The bucket containing the input dataset for the inference.
[$sel:bucket:InferenceS3InputConfiguration'] :: InferenceS3InputConfiguration -> Text

-- | Create a value of <a>InferenceS3InputConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:prefix:InferenceS3InputConfiguration'</a>,
--   <a>inferenceS3InputConfiguration_prefix</a> - The prefix for the S3
--   bucket used for the input data for the inference.
--   
--   <a>$sel:bucket:InferenceS3InputConfiguration'</a>,
--   <a>inferenceS3InputConfiguration_bucket</a> - The bucket containing
--   the input dataset for the inference.
newInferenceS3InputConfiguration :: Text -> InferenceS3InputConfiguration

-- | The prefix for the S3 bucket used for the input data for the
--   inference.
inferenceS3InputConfiguration_prefix :: Lens' InferenceS3InputConfiguration (Maybe Text)

-- | The bucket containing the input dataset for the inference.
inferenceS3InputConfiguration_bucket :: Lens' InferenceS3InputConfiguration Text
instance GHC.Generics.Generic Network.AWS.LookoutEquipment.Types.InferenceS3InputConfiguration.InferenceS3InputConfiguration
instance GHC.Show.Show Network.AWS.LookoutEquipment.Types.InferenceS3InputConfiguration.InferenceS3InputConfiguration
instance GHC.Read.Read Network.AWS.LookoutEquipment.Types.InferenceS3InputConfiguration.InferenceS3InputConfiguration
instance GHC.Classes.Eq Network.AWS.LookoutEquipment.Types.InferenceS3InputConfiguration.InferenceS3InputConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LookoutEquipment.Types.InferenceS3InputConfiguration.InferenceS3InputConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.LookoutEquipment.Types.InferenceS3InputConfiguration.InferenceS3InputConfiguration
instance Control.DeepSeq.NFData Network.AWS.LookoutEquipment.Types.InferenceS3InputConfiguration.InferenceS3InputConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LookoutEquipment.Types.InferenceS3InputConfiguration.InferenceS3InputConfiguration


module Network.AWS.LookoutEquipment.Types.InferenceInputConfiguration

-- | Specifies configuration information for the input data for the
--   inference, including S3 location of input data..
--   
--   <i>See:</i> <a>newInferenceInputConfiguration</a> smart constructor.
data InferenceInputConfiguration
InferenceInputConfiguration' :: Maybe Text -> Maybe InferenceS3InputConfiguration -> Maybe InferenceInputNameConfiguration -> InferenceInputConfiguration

-- | Indicates the difference between your time zone and Greenwich Mean
--   Time (GMT).
[$sel:inputTimeZoneOffset:InferenceInputConfiguration'] :: InferenceInputConfiguration -> Maybe Text

-- | Specifies configuration information for the input data for the
--   inference, including S3 location of input data..
[$sel:s3InputConfiguration:InferenceInputConfiguration'] :: InferenceInputConfiguration -> Maybe InferenceS3InputConfiguration

-- | Specifies configuration information for the input data for the
--   inference, including timestamp format and delimiter.
[$sel:inferenceInputNameConfiguration:InferenceInputConfiguration'] :: InferenceInputConfiguration -> Maybe InferenceInputNameConfiguration

-- | Create a value of <a>InferenceInputConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputTimeZoneOffset:InferenceInputConfiguration'</a>,
--   <a>inferenceInputConfiguration_inputTimeZoneOffset</a> - Indicates the
--   difference between your time zone and Greenwich Mean Time (GMT).
--   
--   <a>$sel:s3InputConfiguration:InferenceInputConfiguration'</a>,
--   <a>inferenceInputConfiguration_s3InputConfiguration</a> - Specifies
--   configuration information for the input data for the inference,
--   including S3 location of input data..
--   
--   
--   <a>$sel:inferenceInputNameConfiguration:InferenceInputConfiguration'</a>,
--   <a>inferenceInputConfiguration_inferenceInputNameConfiguration</a> -
--   Specifies configuration information for the input data for the
--   inference, including timestamp format and delimiter.
newInferenceInputConfiguration :: InferenceInputConfiguration

-- | Indicates the difference between your time zone and Greenwich Mean
--   Time (GMT).
inferenceInputConfiguration_inputTimeZoneOffset :: Lens' InferenceInputConfiguration (Maybe Text)

-- | Specifies configuration information for the input data for the
--   inference, including S3 location of input data..
inferenceInputConfiguration_s3InputConfiguration :: Lens' InferenceInputConfiguration (Maybe InferenceS3InputConfiguration)

-- | Specifies configuration information for the input data for the
--   inference, including timestamp format and delimiter.
inferenceInputConfiguration_inferenceInputNameConfiguration :: Lens' InferenceInputConfiguration (Maybe InferenceInputNameConfiguration)
instance GHC.Generics.Generic Network.AWS.LookoutEquipment.Types.InferenceInputConfiguration.InferenceInputConfiguration
instance GHC.Show.Show Network.AWS.LookoutEquipment.Types.InferenceInputConfiguration.InferenceInputConfiguration
instance GHC.Read.Read Network.AWS.LookoutEquipment.Types.InferenceInputConfiguration.InferenceInputConfiguration
instance GHC.Classes.Eq Network.AWS.LookoutEquipment.Types.InferenceInputConfiguration.InferenceInputConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LookoutEquipment.Types.InferenceInputConfiguration.InferenceInputConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.LookoutEquipment.Types.InferenceInputConfiguration.InferenceInputConfiguration
instance Control.DeepSeq.NFData Network.AWS.LookoutEquipment.Types.InferenceInputConfiguration.InferenceInputConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LookoutEquipment.Types.InferenceInputConfiguration.InferenceInputConfiguration


module Network.AWS.LookoutEquipment.Types.InferenceS3OutputConfiguration

-- | Specifies configuration information for the output results from the
--   inference, including output S3 location.
--   
--   <i>See:</i> <a>newInferenceS3OutputConfiguration</a> smart
--   constructor.
data InferenceS3OutputConfiguration
InferenceS3OutputConfiguration' :: Maybe Text -> Text -> InferenceS3OutputConfiguration

-- | The prefix for the S3 bucket used for the output results from the
--   inference.
[$sel:prefix:InferenceS3OutputConfiguration'] :: InferenceS3OutputConfiguration -> Maybe Text

-- | The bucket containing the output results from the inference
[$sel:bucket:InferenceS3OutputConfiguration'] :: InferenceS3OutputConfiguration -> Text

-- | Create a value of <a>InferenceS3OutputConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:prefix:InferenceS3OutputConfiguration'</a>,
--   <a>inferenceS3OutputConfiguration_prefix</a> - The prefix for the S3
--   bucket used for the output results from the inference.
--   
--   <a>$sel:bucket:InferenceS3OutputConfiguration'</a>,
--   <a>inferenceS3OutputConfiguration_bucket</a> - The bucket containing
--   the output results from the inference
newInferenceS3OutputConfiguration :: Text -> InferenceS3OutputConfiguration

-- | The prefix for the S3 bucket used for the output results from the
--   inference.
inferenceS3OutputConfiguration_prefix :: Lens' InferenceS3OutputConfiguration (Maybe Text)

-- | The bucket containing the output results from the inference
inferenceS3OutputConfiguration_bucket :: Lens' InferenceS3OutputConfiguration Text
instance GHC.Generics.Generic Network.AWS.LookoutEquipment.Types.InferenceS3OutputConfiguration.InferenceS3OutputConfiguration
instance GHC.Show.Show Network.AWS.LookoutEquipment.Types.InferenceS3OutputConfiguration.InferenceS3OutputConfiguration
instance GHC.Read.Read Network.AWS.LookoutEquipment.Types.InferenceS3OutputConfiguration.InferenceS3OutputConfiguration
instance GHC.Classes.Eq Network.AWS.LookoutEquipment.Types.InferenceS3OutputConfiguration.InferenceS3OutputConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LookoutEquipment.Types.InferenceS3OutputConfiguration.InferenceS3OutputConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.LookoutEquipment.Types.InferenceS3OutputConfiguration.InferenceS3OutputConfiguration
instance Control.DeepSeq.NFData Network.AWS.LookoutEquipment.Types.InferenceS3OutputConfiguration.InferenceS3OutputConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LookoutEquipment.Types.InferenceS3OutputConfiguration.InferenceS3OutputConfiguration


module Network.AWS.LookoutEquipment.Types.InferenceOutputConfiguration

-- | Specifies configuration information for the output results from for
--   the inference, including KMS key ID and output S3 location.
--   
--   <i>See:</i> <a>newInferenceOutputConfiguration</a> smart constructor.
data InferenceOutputConfiguration
InferenceOutputConfiguration' :: Maybe Text -> InferenceS3OutputConfiguration -> InferenceOutputConfiguration

-- | The ID number for the AWS KMS key used to encrypt the inference
--   output.
[$sel:kmsKeyId:InferenceOutputConfiguration'] :: InferenceOutputConfiguration -> Maybe Text

-- | Specifies configuration information for the output results from for
--   the inference, output S3 location.
[$sel:s3OutputConfiguration:InferenceOutputConfiguration'] :: InferenceOutputConfiguration -> InferenceS3OutputConfiguration

-- | Create a value of <a>InferenceOutputConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:kmsKeyId:InferenceOutputConfiguration'</a>,
--   <a>inferenceOutputConfiguration_kmsKeyId</a> - The ID number for the
--   AWS KMS key used to encrypt the inference output.
--   
--   <a>$sel:s3OutputConfiguration:InferenceOutputConfiguration'</a>,
--   <a>inferenceOutputConfiguration_s3OutputConfiguration</a> - Specifies
--   configuration information for the output results from for the
--   inference, output S3 location.
newInferenceOutputConfiguration :: InferenceS3OutputConfiguration -> InferenceOutputConfiguration

-- | The ID number for the AWS KMS key used to encrypt the inference
--   output.
inferenceOutputConfiguration_kmsKeyId :: Lens' InferenceOutputConfiguration (Maybe Text)

-- | Specifies configuration information for the output results from for
--   the inference, output S3 location.
inferenceOutputConfiguration_s3OutputConfiguration :: Lens' InferenceOutputConfiguration InferenceS3OutputConfiguration
instance GHC.Generics.Generic Network.AWS.LookoutEquipment.Types.InferenceOutputConfiguration.InferenceOutputConfiguration
instance GHC.Show.Show Network.AWS.LookoutEquipment.Types.InferenceOutputConfiguration.InferenceOutputConfiguration
instance GHC.Read.Read Network.AWS.LookoutEquipment.Types.InferenceOutputConfiguration.InferenceOutputConfiguration
instance GHC.Classes.Eq Network.AWS.LookoutEquipment.Types.InferenceOutputConfiguration.InferenceOutputConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LookoutEquipment.Types.InferenceOutputConfiguration.InferenceOutputConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.LookoutEquipment.Types.InferenceOutputConfiguration.InferenceOutputConfiguration
instance Control.DeepSeq.NFData Network.AWS.LookoutEquipment.Types.InferenceOutputConfiguration.InferenceOutputConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LookoutEquipment.Types.InferenceOutputConfiguration.InferenceOutputConfiguration


module Network.AWS.LookoutEquipment.Types.InferenceSchedulerStatus
newtype InferenceSchedulerStatus
InferenceSchedulerStatus' :: Text -> InferenceSchedulerStatus
[fromInferenceSchedulerStatus] :: InferenceSchedulerStatus -> Text
pattern InferenceSchedulerStatus_PENDING :: InferenceSchedulerStatus
pattern InferenceSchedulerStatus_RUNNING :: InferenceSchedulerStatus
pattern InferenceSchedulerStatus_STOPPED :: InferenceSchedulerStatus
pattern InferenceSchedulerStatus_STOPPING :: InferenceSchedulerStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.LookoutEquipment.Types.InferenceSchedulerStatus.InferenceSchedulerStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.LookoutEquipment.Types.InferenceSchedulerStatus.InferenceSchedulerStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.LookoutEquipment.Types.InferenceSchedulerStatus.InferenceSchedulerStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LookoutEquipment.Types.InferenceSchedulerStatus.InferenceSchedulerStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.LookoutEquipment.Types.InferenceSchedulerStatus.InferenceSchedulerStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LookoutEquipment.Types.InferenceSchedulerStatus.InferenceSchedulerStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.LookoutEquipment.Types.InferenceSchedulerStatus.InferenceSchedulerStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.LookoutEquipment.Types.InferenceSchedulerStatus.InferenceSchedulerStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.LookoutEquipment.Types.InferenceSchedulerStatus.InferenceSchedulerStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.LookoutEquipment.Types.InferenceSchedulerStatus.InferenceSchedulerStatus
instance Network.AWS.Data.Text.ToText Network.AWS.LookoutEquipment.Types.InferenceSchedulerStatus.InferenceSchedulerStatus
instance Network.AWS.Data.Text.FromText Network.AWS.LookoutEquipment.Types.InferenceSchedulerStatus.InferenceSchedulerStatus
instance Control.DeepSeq.NFData Network.AWS.LookoutEquipment.Types.InferenceSchedulerStatus.InferenceSchedulerStatus
instance Data.Hashable.Class.Hashable Network.AWS.LookoutEquipment.Types.InferenceSchedulerStatus.InferenceSchedulerStatus
instance GHC.Generics.Generic Network.AWS.LookoutEquipment.Types.InferenceSchedulerStatus.InferenceSchedulerStatus
instance GHC.Classes.Ord Network.AWS.LookoutEquipment.Types.InferenceSchedulerStatus.InferenceSchedulerStatus
instance GHC.Classes.Eq Network.AWS.LookoutEquipment.Types.InferenceSchedulerStatus.InferenceSchedulerStatus
instance GHC.Read.Read Network.AWS.LookoutEquipment.Types.InferenceSchedulerStatus.InferenceSchedulerStatus
instance GHC.Show.Show Network.AWS.LookoutEquipment.Types.InferenceSchedulerStatus.InferenceSchedulerStatus


module Network.AWS.LookoutEquipment.Types.InferenceSchedulerSummary

-- | Contains information about the specific inference scheduler, including
--   data delay offset, model name and ARN, status, and so on.
--   
--   <i>See:</i> <a>newInferenceSchedulerSummary</a> smart constructor.
data InferenceSchedulerSummary
InferenceSchedulerSummary' :: Maybe InferenceSchedulerStatus -> Maybe DataUploadFrequency -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> InferenceSchedulerSummary

-- | Indicates the status of the inference scheduler.
[$sel:status:InferenceSchedulerSummary'] :: InferenceSchedulerSummary -> Maybe InferenceSchedulerStatus

-- | How often data is uploaded to the source S3 bucket for the input data.
--   This value is the length of time between data uploads. For instance,
--   if you select 5 minutes, Amazon Lookout for Equipment will upload the
--   real-time data to the source bucket once every 5 minutes. This
--   frequency also determines how often Amazon Lookout for Equipment
--   starts a scheduled inference on your data. In this example, it starts
--   once every 5 minutes.
[$sel:dataUploadFrequency:InferenceSchedulerSummary'] :: InferenceSchedulerSummary -> Maybe DataUploadFrequency

-- | A period of time (in minutes) by which inference on the data is
--   delayed after the data starts. For instance, if an offset delay time
--   of five minutes was selected, inference will not begin on the data
--   until the first data measurement after the five minute mark. For
--   example, if five minutes is selected, the inference scheduler will
--   wake up at the configured frequency with the additional five minute
--   delay time to check the customer S3 bucket. The customer can upload
--   data at the same frequency and they don't need to stop and restart the
--   scheduler when uploading new data.
[$sel:dataDelayOffsetInMinutes:InferenceSchedulerSummary'] :: InferenceSchedulerSummary -> Maybe Natural

-- | The Amazon Resource Name (ARN) of the ML model used by the inference
--   scheduler.
[$sel:modelArn:InferenceSchedulerSummary'] :: InferenceSchedulerSummary -> Maybe Text

-- | The name of the ML model used for the inference scheduler.
[$sel:modelName:InferenceSchedulerSummary'] :: InferenceSchedulerSummary -> Maybe Text

-- | The Amazon Resource Name (ARN) of the inference scheduler.
[$sel:inferenceSchedulerArn:InferenceSchedulerSummary'] :: InferenceSchedulerSummary -> Maybe Text

-- | The name of the inference scheduler.
[$sel:inferenceSchedulerName:InferenceSchedulerSummary'] :: InferenceSchedulerSummary -> Maybe Text

-- | Create a value of <a>InferenceSchedulerSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:InferenceSchedulerSummary'</a>,
--   <a>inferenceSchedulerSummary_status</a> - Indicates the status of the
--   inference scheduler.
--   
--   <a>$sel:dataUploadFrequency:InferenceSchedulerSummary'</a>,
--   <a>inferenceSchedulerSummary_dataUploadFrequency</a> - How often data
--   is uploaded to the source S3 bucket for the input data. This value is
--   the length of time between data uploads. For instance, if you select 5
--   minutes, Amazon Lookout for Equipment will upload the real-time data
--   to the source bucket once every 5 minutes. This frequency also
--   determines how often Amazon Lookout for Equipment starts a scheduled
--   inference on your data. In this example, it starts once every 5
--   minutes.
--   
--   <a>$sel:dataDelayOffsetInMinutes:InferenceSchedulerSummary'</a>,
--   <a>inferenceSchedulerSummary_dataDelayOffsetInMinutes</a> - A period
--   of time (in minutes) by which inference on the data is delayed after
--   the data starts. For instance, if an offset delay time of five minutes
--   was selected, inference will not begin on the data until the first
--   data measurement after the five minute mark. For example, if five
--   minutes is selected, the inference scheduler will wake up at the
--   configured frequency with the additional five minute delay time to
--   check the customer S3 bucket. The customer can upload data at the same
--   frequency and they don't need to stop and restart the scheduler when
--   uploading new data.
--   
--   <a>$sel:modelArn:InferenceSchedulerSummary'</a>,
--   <a>inferenceSchedulerSummary_modelArn</a> - The Amazon Resource Name
--   (ARN) of the ML model used by the inference scheduler.
--   
--   <a>$sel:modelName:InferenceSchedulerSummary'</a>,
--   <a>inferenceSchedulerSummary_modelName</a> - The name of the ML model
--   used for the inference scheduler.
--   
--   <a>$sel:inferenceSchedulerArn:InferenceSchedulerSummary'</a>,
--   <a>inferenceSchedulerSummary_inferenceSchedulerArn</a> - The Amazon
--   Resource Name (ARN) of the inference scheduler.
--   
--   <a>$sel:inferenceSchedulerName:InferenceSchedulerSummary'</a>,
--   <a>inferenceSchedulerSummary_inferenceSchedulerName</a> - The name of
--   the inference scheduler.
newInferenceSchedulerSummary :: InferenceSchedulerSummary

-- | Indicates the status of the inference scheduler.
inferenceSchedulerSummary_status :: Lens' InferenceSchedulerSummary (Maybe InferenceSchedulerStatus)

-- | How often data is uploaded to the source S3 bucket for the input data.
--   This value is the length of time between data uploads. For instance,
--   if you select 5 minutes, Amazon Lookout for Equipment will upload the
--   real-time data to the source bucket once every 5 minutes. This
--   frequency also determines how often Amazon Lookout for Equipment
--   starts a scheduled inference on your data. In this example, it starts
--   once every 5 minutes.
inferenceSchedulerSummary_dataUploadFrequency :: Lens' InferenceSchedulerSummary (Maybe DataUploadFrequency)

-- | A period of time (in minutes) by which inference on the data is
--   delayed after the data starts. For instance, if an offset delay time
--   of five minutes was selected, inference will not begin on the data
--   until the first data measurement after the five minute mark. For
--   example, if five minutes is selected, the inference scheduler will
--   wake up at the configured frequency with the additional five minute
--   delay time to check the customer S3 bucket. The customer can upload
--   data at the same frequency and they don't need to stop and restart the
--   scheduler when uploading new data.
inferenceSchedulerSummary_dataDelayOffsetInMinutes :: Lens' InferenceSchedulerSummary (Maybe Natural)

-- | The Amazon Resource Name (ARN) of the ML model used by the inference
--   scheduler.
inferenceSchedulerSummary_modelArn :: Lens' InferenceSchedulerSummary (Maybe Text)

-- | The name of the ML model used for the inference scheduler.
inferenceSchedulerSummary_modelName :: Lens' InferenceSchedulerSummary (Maybe Text)

-- | The Amazon Resource Name (ARN) of the inference scheduler.
inferenceSchedulerSummary_inferenceSchedulerArn :: Lens' InferenceSchedulerSummary (Maybe Text)

-- | The name of the inference scheduler.
inferenceSchedulerSummary_inferenceSchedulerName :: Lens' InferenceSchedulerSummary (Maybe Text)
instance GHC.Generics.Generic Network.AWS.LookoutEquipment.Types.InferenceSchedulerSummary.InferenceSchedulerSummary
instance GHC.Show.Show Network.AWS.LookoutEquipment.Types.InferenceSchedulerSummary.InferenceSchedulerSummary
instance GHC.Read.Read Network.AWS.LookoutEquipment.Types.InferenceSchedulerSummary.InferenceSchedulerSummary
instance GHC.Classes.Eq Network.AWS.LookoutEquipment.Types.InferenceSchedulerSummary.InferenceSchedulerSummary
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LookoutEquipment.Types.InferenceSchedulerSummary.InferenceSchedulerSummary
instance Data.Hashable.Class.Hashable Network.AWS.LookoutEquipment.Types.InferenceSchedulerSummary.InferenceSchedulerSummary
instance Control.DeepSeq.NFData Network.AWS.LookoutEquipment.Types.InferenceSchedulerSummary.InferenceSchedulerSummary


module Network.AWS.LookoutEquipment.Types.IngestionJobStatus
newtype IngestionJobStatus
IngestionJobStatus' :: Text -> IngestionJobStatus
[fromIngestionJobStatus] :: IngestionJobStatus -> Text
pattern IngestionJobStatus_FAILED :: IngestionJobStatus
pattern IngestionJobStatus_IN_PROGRESS :: IngestionJobStatus
pattern IngestionJobStatus_SUCCESS :: IngestionJobStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.LookoutEquipment.Types.IngestionJobStatus.IngestionJobStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.LookoutEquipment.Types.IngestionJobStatus.IngestionJobStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.LookoutEquipment.Types.IngestionJobStatus.IngestionJobStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LookoutEquipment.Types.IngestionJobStatus.IngestionJobStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.LookoutEquipment.Types.IngestionJobStatus.IngestionJobStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LookoutEquipment.Types.IngestionJobStatus.IngestionJobStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.LookoutEquipment.Types.IngestionJobStatus.IngestionJobStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.LookoutEquipment.Types.IngestionJobStatus.IngestionJobStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.LookoutEquipment.Types.IngestionJobStatus.IngestionJobStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.LookoutEquipment.Types.IngestionJobStatus.IngestionJobStatus
instance Network.AWS.Data.Text.ToText Network.AWS.LookoutEquipment.Types.IngestionJobStatus.IngestionJobStatus
instance Network.AWS.Data.Text.FromText Network.AWS.LookoutEquipment.Types.IngestionJobStatus.IngestionJobStatus
instance Control.DeepSeq.NFData Network.AWS.LookoutEquipment.Types.IngestionJobStatus.IngestionJobStatus
instance Data.Hashable.Class.Hashable Network.AWS.LookoutEquipment.Types.IngestionJobStatus.IngestionJobStatus
instance GHC.Generics.Generic Network.AWS.LookoutEquipment.Types.IngestionJobStatus.IngestionJobStatus
instance GHC.Classes.Ord Network.AWS.LookoutEquipment.Types.IngestionJobStatus.IngestionJobStatus
instance GHC.Classes.Eq Network.AWS.LookoutEquipment.Types.IngestionJobStatus.IngestionJobStatus
instance GHC.Read.Read Network.AWS.LookoutEquipment.Types.IngestionJobStatus.IngestionJobStatus
instance GHC.Show.Show Network.AWS.LookoutEquipment.Types.IngestionJobStatus.IngestionJobStatus


module Network.AWS.LookoutEquipment.Types.IngestionS3InputConfiguration

-- | Specifies S3 configuration information for the input data for the data
--   ingestion job.
--   
--   <i>See:</i> <a>newIngestionS3InputConfiguration</a> smart constructor.
data IngestionS3InputConfiguration
IngestionS3InputConfiguration' :: Maybe Text -> Text -> IngestionS3InputConfiguration

-- | The prefix for the S3 location being used for the input data for the
--   data ingestion.
[$sel:prefix:IngestionS3InputConfiguration'] :: IngestionS3InputConfiguration -> Maybe Text

-- | The name of the S3 bucket used for the input data for the data
--   ingestion.
[$sel:bucket:IngestionS3InputConfiguration'] :: IngestionS3InputConfiguration -> Text

-- | Create a value of <a>IngestionS3InputConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:prefix:IngestionS3InputConfiguration'</a>,
--   <a>ingestionS3InputConfiguration_prefix</a> - The prefix for the S3
--   location being used for the input data for the data ingestion.
--   
--   <a>$sel:bucket:IngestionS3InputConfiguration'</a>,
--   <a>ingestionS3InputConfiguration_bucket</a> - The name of the S3
--   bucket used for the input data for the data ingestion.
newIngestionS3InputConfiguration :: Text -> IngestionS3InputConfiguration

-- | The prefix for the S3 location being used for the input data for the
--   data ingestion.
ingestionS3InputConfiguration_prefix :: Lens' IngestionS3InputConfiguration (Maybe Text)

-- | The name of the S3 bucket used for the input data for the data
--   ingestion.
ingestionS3InputConfiguration_bucket :: Lens' IngestionS3InputConfiguration Text
instance GHC.Generics.Generic Network.AWS.LookoutEquipment.Types.IngestionS3InputConfiguration.IngestionS3InputConfiguration
instance GHC.Show.Show Network.AWS.LookoutEquipment.Types.IngestionS3InputConfiguration.IngestionS3InputConfiguration
instance GHC.Read.Read Network.AWS.LookoutEquipment.Types.IngestionS3InputConfiguration.IngestionS3InputConfiguration
instance GHC.Classes.Eq Network.AWS.LookoutEquipment.Types.IngestionS3InputConfiguration.IngestionS3InputConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LookoutEquipment.Types.IngestionS3InputConfiguration.IngestionS3InputConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.LookoutEquipment.Types.IngestionS3InputConfiguration.IngestionS3InputConfiguration
instance Control.DeepSeq.NFData Network.AWS.LookoutEquipment.Types.IngestionS3InputConfiguration.IngestionS3InputConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LookoutEquipment.Types.IngestionS3InputConfiguration.IngestionS3InputConfiguration


module Network.AWS.LookoutEquipment.Types.IngestionInputConfiguration

-- | Specifies configuration information for the input data for the data
--   ingestion job, including input data S3 location.
--   
--   <i>See:</i> <a>newIngestionInputConfiguration</a> smart constructor.
data IngestionInputConfiguration
IngestionInputConfiguration' :: IngestionS3InputConfiguration -> IngestionInputConfiguration

-- | The location information for the S3 bucket used for input data for the
--   data ingestion.
[$sel:s3InputConfiguration:IngestionInputConfiguration'] :: IngestionInputConfiguration -> IngestionS3InputConfiguration

-- | Create a value of <a>IngestionInputConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3InputConfiguration:IngestionInputConfiguration'</a>,
--   <a>ingestionInputConfiguration_s3InputConfiguration</a> - The location
--   information for the S3 bucket used for input data for the data
--   ingestion.
newIngestionInputConfiguration :: IngestionS3InputConfiguration -> IngestionInputConfiguration

-- | The location information for the S3 bucket used for input data for the
--   data ingestion.
ingestionInputConfiguration_s3InputConfiguration :: Lens' IngestionInputConfiguration IngestionS3InputConfiguration
instance GHC.Generics.Generic Network.AWS.LookoutEquipment.Types.IngestionInputConfiguration.IngestionInputConfiguration
instance GHC.Show.Show Network.AWS.LookoutEquipment.Types.IngestionInputConfiguration.IngestionInputConfiguration
instance GHC.Read.Read Network.AWS.LookoutEquipment.Types.IngestionInputConfiguration.IngestionInputConfiguration
instance GHC.Classes.Eq Network.AWS.LookoutEquipment.Types.IngestionInputConfiguration.IngestionInputConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LookoutEquipment.Types.IngestionInputConfiguration.IngestionInputConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.LookoutEquipment.Types.IngestionInputConfiguration.IngestionInputConfiguration
instance Control.DeepSeq.NFData Network.AWS.LookoutEquipment.Types.IngestionInputConfiguration.IngestionInputConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LookoutEquipment.Types.IngestionInputConfiguration.IngestionInputConfiguration


module Network.AWS.LookoutEquipment.Types.DataIngestionJobSummary

-- | Provides information about a specified data ingestion job, including
--   dataset information, data ingestion configuration, and status.
--   
--   <i>See:</i> <a>newDataIngestionJobSummary</a> smart constructor.
data DataIngestionJobSummary
DataIngestionJobSummary' :: Maybe IngestionInputConfiguration -> Maybe IngestionJobStatus -> Maybe Text -> Maybe Text -> Maybe Text -> DataIngestionJobSummary

-- | Specifies information for the input data for the data inference job,
--   including data S3 location parameters.
[$sel:ingestionInputConfiguration:DataIngestionJobSummary'] :: DataIngestionJobSummary -> Maybe IngestionInputConfiguration

-- | Indicates the status of the data ingestion job.
[$sel:status:DataIngestionJobSummary'] :: DataIngestionJobSummary -> Maybe IngestionJobStatus

-- | The Amazon Resource Name (ARN) of the dataset used in the data
--   ingestion job.
[$sel:datasetArn:DataIngestionJobSummary'] :: DataIngestionJobSummary -> Maybe Text

-- | Indicates the job ID of the data ingestion job.
[$sel:jobId:DataIngestionJobSummary'] :: DataIngestionJobSummary -> Maybe Text

-- | The name of the dataset used for the data ingestion job.
[$sel:datasetName:DataIngestionJobSummary'] :: DataIngestionJobSummary -> Maybe Text

-- | Create a value of <a>DataIngestionJobSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ingestionInputConfiguration:DataIngestionJobSummary'</a>,
--   <a>dataIngestionJobSummary_ingestionInputConfiguration</a> - Specifies
--   information for the input data for the data inference job, including
--   data S3 location parameters.
--   
--   <a>$sel:status:DataIngestionJobSummary'</a>,
--   <a>dataIngestionJobSummary_status</a> - Indicates the status of the
--   data ingestion job.
--   
--   <a>$sel:datasetArn:DataIngestionJobSummary'</a>,
--   <a>dataIngestionJobSummary_datasetArn</a> - The Amazon Resource Name
--   (ARN) of the dataset used in the data ingestion job.
--   
--   <a>$sel:jobId:DataIngestionJobSummary'</a>,
--   <a>dataIngestionJobSummary_jobId</a> - Indicates the job ID of the
--   data ingestion job.
--   
--   <a>$sel:datasetName:DataIngestionJobSummary'</a>,
--   <a>dataIngestionJobSummary_datasetName</a> - The name of the dataset
--   used for the data ingestion job.
newDataIngestionJobSummary :: DataIngestionJobSummary

-- | Specifies information for the input data for the data inference job,
--   including data S3 location parameters.
dataIngestionJobSummary_ingestionInputConfiguration :: Lens' DataIngestionJobSummary (Maybe IngestionInputConfiguration)

-- | Indicates the status of the data ingestion job.
dataIngestionJobSummary_status :: Lens' DataIngestionJobSummary (Maybe IngestionJobStatus)

-- | The Amazon Resource Name (ARN) of the dataset used in the data
--   ingestion job.
dataIngestionJobSummary_datasetArn :: Lens' DataIngestionJobSummary (Maybe Text)

-- | Indicates the job ID of the data ingestion job.
dataIngestionJobSummary_jobId :: Lens' DataIngestionJobSummary (Maybe Text)

-- | The name of the dataset used for the data ingestion job.
dataIngestionJobSummary_datasetName :: Lens' DataIngestionJobSummary (Maybe Text)
instance GHC.Generics.Generic Network.AWS.LookoutEquipment.Types.DataIngestionJobSummary.DataIngestionJobSummary
instance GHC.Show.Show Network.AWS.LookoutEquipment.Types.DataIngestionJobSummary.DataIngestionJobSummary
instance GHC.Read.Read Network.AWS.LookoutEquipment.Types.DataIngestionJobSummary.DataIngestionJobSummary
instance GHC.Classes.Eq Network.AWS.LookoutEquipment.Types.DataIngestionJobSummary.DataIngestionJobSummary
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LookoutEquipment.Types.DataIngestionJobSummary.DataIngestionJobSummary
instance Data.Hashable.Class.Hashable Network.AWS.LookoutEquipment.Types.DataIngestionJobSummary.DataIngestionJobSummary
instance Control.DeepSeq.NFData Network.AWS.LookoutEquipment.Types.DataIngestionJobSummary.DataIngestionJobSummary


module Network.AWS.LookoutEquipment.Types.LabelsS3InputConfiguration

-- | The location information (prefix and bucket name) for the s3 location
--   being used for label data.
--   
--   <i>See:</i> <a>newLabelsS3InputConfiguration</a> smart constructor.
data LabelsS3InputConfiguration
LabelsS3InputConfiguration' :: Maybe Text -> Text -> LabelsS3InputConfiguration

-- | The prefix for the S3 bucket used for the label data.
[$sel:prefix:LabelsS3InputConfiguration'] :: LabelsS3InputConfiguration -> Maybe Text

-- | The name of the S3 bucket holding the label data.
[$sel:bucket:LabelsS3InputConfiguration'] :: LabelsS3InputConfiguration -> Text

-- | Create a value of <a>LabelsS3InputConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:prefix:LabelsS3InputConfiguration'</a>,
--   <a>labelsS3InputConfiguration_prefix</a> - The prefix for the S3
--   bucket used for the label data.
--   
--   <a>$sel:bucket:LabelsS3InputConfiguration'</a>,
--   <a>labelsS3InputConfiguration_bucket</a> - The name of the S3 bucket
--   holding the label data.
newLabelsS3InputConfiguration :: Text -> LabelsS3InputConfiguration

-- | The prefix for the S3 bucket used for the label data.
labelsS3InputConfiguration_prefix :: Lens' LabelsS3InputConfiguration (Maybe Text)

-- | The name of the S3 bucket holding the label data.
labelsS3InputConfiguration_bucket :: Lens' LabelsS3InputConfiguration Text
instance GHC.Generics.Generic Network.AWS.LookoutEquipment.Types.LabelsS3InputConfiguration.LabelsS3InputConfiguration
instance GHC.Show.Show Network.AWS.LookoutEquipment.Types.LabelsS3InputConfiguration.LabelsS3InputConfiguration
instance GHC.Read.Read Network.AWS.LookoutEquipment.Types.LabelsS3InputConfiguration.LabelsS3InputConfiguration
instance GHC.Classes.Eq Network.AWS.LookoutEquipment.Types.LabelsS3InputConfiguration.LabelsS3InputConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LookoutEquipment.Types.LabelsS3InputConfiguration.LabelsS3InputConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.LookoutEquipment.Types.LabelsS3InputConfiguration.LabelsS3InputConfiguration
instance Control.DeepSeq.NFData Network.AWS.LookoutEquipment.Types.LabelsS3InputConfiguration.LabelsS3InputConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LookoutEquipment.Types.LabelsS3InputConfiguration.LabelsS3InputConfiguration


module Network.AWS.LookoutEquipment.Types.LabelsInputConfiguration

-- | Contains the configuration information for the S3 location being used
--   to hold label data.
--   
--   <i>See:</i> <a>newLabelsInputConfiguration</a> smart constructor.
data LabelsInputConfiguration
LabelsInputConfiguration' :: LabelsS3InputConfiguration -> LabelsInputConfiguration

-- | Contains location information for the S3 location being used for label
--   data.
[$sel:s3InputConfiguration:LabelsInputConfiguration'] :: LabelsInputConfiguration -> LabelsS3InputConfiguration

-- | Create a value of <a>LabelsInputConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3InputConfiguration:LabelsInputConfiguration'</a>,
--   <a>labelsInputConfiguration_s3InputConfiguration</a> - Contains
--   location information for the S3 location being used for label data.
newLabelsInputConfiguration :: LabelsS3InputConfiguration -> LabelsInputConfiguration

-- | Contains location information for the S3 location being used for label
--   data.
labelsInputConfiguration_s3InputConfiguration :: Lens' LabelsInputConfiguration LabelsS3InputConfiguration
instance GHC.Generics.Generic Network.AWS.LookoutEquipment.Types.LabelsInputConfiguration.LabelsInputConfiguration
instance GHC.Show.Show Network.AWS.LookoutEquipment.Types.LabelsInputConfiguration.LabelsInputConfiguration
instance GHC.Read.Read Network.AWS.LookoutEquipment.Types.LabelsInputConfiguration.LabelsInputConfiguration
instance GHC.Classes.Eq Network.AWS.LookoutEquipment.Types.LabelsInputConfiguration.LabelsInputConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LookoutEquipment.Types.LabelsInputConfiguration.LabelsInputConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.LookoutEquipment.Types.LabelsInputConfiguration.LabelsInputConfiguration
instance Control.DeepSeq.NFData Network.AWS.LookoutEquipment.Types.LabelsInputConfiguration.LabelsInputConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LookoutEquipment.Types.LabelsInputConfiguration.LabelsInputConfiguration


module Network.AWS.LookoutEquipment.Types.ModelStatus
newtype ModelStatus
ModelStatus' :: Text -> ModelStatus
[fromModelStatus] :: ModelStatus -> Text
pattern ModelStatus_FAILED :: ModelStatus
pattern ModelStatus_IN_PROGRESS :: ModelStatus
pattern ModelStatus_SUCCESS :: ModelStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.LookoutEquipment.Types.ModelStatus.ModelStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.LookoutEquipment.Types.ModelStatus.ModelStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.LookoutEquipment.Types.ModelStatus.ModelStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LookoutEquipment.Types.ModelStatus.ModelStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.LookoutEquipment.Types.ModelStatus.ModelStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LookoutEquipment.Types.ModelStatus.ModelStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.LookoutEquipment.Types.ModelStatus.ModelStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.LookoutEquipment.Types.ModelStatus.ModelStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.LookoutEquipment.Types.ModelStatus.ModelStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.LookoutEquipment.Types.ModelStatus.ModelStatus
instance Network.AWS.Data.Text.ToText Network.AWS.LookoutEquipment.Types.ModelStatus.ModelStatus
instance Network.AWS.Data.Text.FromText Network.AWS.LookoutEquipment.Types.ModelStatus.ModelStatus
instance Control.DeepSeq.NFData Network.AWS.LookoutEquipment.Types.ModelStatus.ModelStatus
instance Data.Hashable.Class.Hashable Network.AWS.LookoutEquipment.Types.ModelStatus.ModelStatus
instance GHC.Generics.Generic Network.AWS.LookoutEquipment.Types.ModelStatus.ModelStatus
instance GHC.Classes.Ord Network.AWS.LookoutEquipment.Types.ModelStatus.ModelStatus
instance GHC.Classes.Eq Network.AWS.LookoutEquipment.Types.ModelStatus.ModelStatus
instance GHC.Read.Read Network.AWS.LookoutEquipment.Types.ModelStatus.ModelStatus
instance GHC.Show.Show Network.AWS.LookoutEquipment.Types.ModelStatus.ModelStatus


module Network.AWS.LookoutEquipment.Types.ModelSummary

-- | Provides information about the specified ML model, including dataset
--   and model names and ARNs, as well as status.
--   
--   <i>See:</i> <a>newModelSummary</a> smart constructor.
data ModelSummary
ModelSummary' :: Maybe ModelStatus -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> ModelSummary

-- | Indicates the status of the ML model.
[$sel:status:ModelSummary'] :: ModelSummary -> Maybe ModelStatus

-- | The Amazon Resource Name (ARN) of the dataset used to create the
--   model.
[$sel:datasetArn:ModelSummary'] :: ModelSummary -> Maybe Text

-- | The Amazon Resource Name (ARN) of the ML model.
[$sel:modelArn:ModelSummary'] :: ModelSummary -> Maybe Text

-- | The time at which the specific model was created.
[$sel:createdAt:ModelSummary'] :: ModelSummary -> Maybe POSIX

-- | The name of the ML model.
[$sel:modelName:ModelSummary'] :: ModelSummary -> Maybe Text

-- | The name of the dataset being used for the ML model.
[$sel:datasetName:ModelSummary'] :: ModelSummary -> Maybe Text

-- | Create a value of <a>ModelSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ModelSummary'</a>, <a>modelSummary_status</a> -
--   Indicates the status of the ML model.
--   
--   <a>$sel:datasetArn:ModelSummary'</a>, <a>modelSummary_datasetArn</a> -
--   The Amazon Resource Name (ARN) of the dataset used to create the
--   model.
--   
--   <a>$sel:modelArn:ModelSummary'</a>, <a>modelSummary_modelArn</a> - The
--   Amazon Resource Name (ARN) of the ML model.
--   
--   <a>$sel:createdAt:ModelSummary'</a>, <a>modelSummary_createdAt</a> -
--   The time at which the specific model was created.
--   
--   <a>$sel:modelName:ModelSummary'</a>, <a>modelSummary_modelName</a> -
--   The name of the ML model.
--   
--   <a>$sel:datasetName:ModelSummary'</a>, <a>modelSummary_datasetName</a>
--   - The name of the dataset being used for the ML model.
newModelSummary :: ModelSummary

-- | Indicates the status of the ML model.
modelSummary_status :: Lens' ModelSummary (Maybe ModelStatus)

-- | The Amazon Resource Name (ARN) of the dataset used to create the
--   model.
modelSummary_datasetArn :: Lens' ModelSummary (Maybe Text)

-- | The Amazon Resource Name (ARN) of the ML model.
modelSummary_modelArn :: Lens' ModelSummary (Maybe Text)

-- | The time at which the specific model was created.
modelSummary_createdAt :: Lens' ModelSummary (Maybe UTCTime)

-- | The name of the ML model.
modelSummary_modelName :: Lens' ModelSummary (Maybe Text)

-- | The name of the dataset being used for the ML model.
modelSummary_datasetName :: Lens' ModelSummary (Maybe Text)
instance GHC.Generics.Generic Network.AWS.LookoutEquipment.Types.ModelSummary.ModelSummary
instance GHC.Show.Show Network.AWS.LookoutEquipment.Types.ModelSummary.ModelSummary
instance GHC.Read.Read Network.AWS.LookoutEquipment.Types.ModelSummary.ModelSummary
instance GHC.Classes.Eq Network.AWS.LookoutEquipment.Types.ModelSummary.ModelSummary
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LookoutEquipment.Types.ModelSummary.ModelSummary
instance Data.Hashable.Class.Hashable Network.AWS.LookoutEquipment.Types.ModelSummary.ModelSummary
instance Control.DeepSeq.NFData Network.AWS.LookoutEquipment.Types.ModelSummary.ModelSummary


module Network.AWS.LookoutEquipment.Types.S3Object

-- | Contains information about an S3 bucket.
--   
--   <i>See:</i> <a>newS3Object</a> smart constructor.
data S3Object
S3Object' :: Text -> Text -> S3Object

-- | The name of the specific S3 bucket.
[$sel:bucket:S3Object'] :: S3Object -> Text

-- | The AWS Key Management Service (AWS KMS) key being used to encrypt the
--   S3 object. Without this key, data in the bucket is not accessible.
[$sel:key:S3Object'] :: S3Object -> Text

-- | Create a value of <a>S3Object</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bucket:S3Object'</a>, <a>s3Object_bucket</a> - The name of the
--   specific S3 bucket.
--   
--   <a>$sel:key:S3Object'</a>, <a>s3Object_key</a> - The AWS Key
--   Management Service (AWS KMS) key being used to encrypt the S3 object.
--   Without this key, data in the bucket is not accessible.
newS3Object :: Text -> Text -> S3Object

-- | The name of the specific S3 bucket.
s3Object_bucket :: Lens' S3Object Text

-- | The AWS Key Management Service (AWS KMS) key being used to encrypt the
--   S3 object. Without this key, data in the bucket is not accessible.
s3Object_key :: Lens' S3Object Text
instance GHC.Generics.Generic Network.AWS.LookoutEquipment.Types.S3Object.S3Object
instance GHC.Show.Show Network.AWS.LookoutEquipment.Types.S3Object.S3Object
instance GHC.Read.Read Network.AWS.LookoutEquipment.Types.S3Object.S3Object
instance GHC.Classes.Eq Network.AWS.LookoutEquipment.Types.S3Object.S3Object
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LookoutEquipment.Types.S3Object.S3Object
instance Data.Hashable.Class.Hashable Network.AWS.LookoutEquipment.Types.S3Object.S3Object
instance Control.DeepSeq.NFData Network.AWS.LookoutEquipment.Types.S3Object.S3Object


module Network.AWS.LookoutEquipment.Types.InferenceExecutionSummary

-- | Contains information about the specific inference execution, including
--   input and output data configuration, inference scheduling information,
--   status, and so on.
--   
--   <i>See:</i> <a>newInferenceExecutionSummary</a> smart constructor.
data InferenceExecutionSummary
InferenceExecutionSummary' :: Maybe InferenceExecutionStatus -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe S3Object -> Maybe Text -> Maybe POSIX -> Maybe InferenceOutputConfiguration -> Maybe POSIX -> Maybe Text -> Maybe InferenceInputConfiguration -> InferenceExecutionSummary

-- | Indicates the status of the inference execution.
[$sel:status:InferenceExecutionSummary'] :: InferenceExecutionSummary -> Maybe InferenceExecutionStatus

-- | Specifies the reason for failure when an inference execution has
--   failed.
[$sel:failedReason:InferenceExecutionSummary'] :: InferenceExecutionSummary -> Maybe Text

-- | The Amazon Resource Name (ARN) of the ML model used for the inference
--   execution.
[$sel:modelArn:InferenceExecutionSummary'] :: InferenceExecutionSummary -> Maybe Text

-- | Indicates the time reference in the dataset at which the inference
--   execution began.
[$sel:dataStartTime:InferenceExecutionSummary'] :: InferenceExecutionSummary -> Maybe POSIX

-- | The name of the ML model being used for the inference execution.
[$sel:modelName:InferenceExecutionSummary'] :: InferenceExecutionSummary -> Maybe Text
[$sel:customerResultObject:InferenceExecutionSummary'] :: InferenceExecutionSummary -> Maybe S3Object

-- | The Amazon Resource Name (ARN) of the inference scheduler being used
--   for the inference execution.
[$sel:inferenceSchedulerArn:InferenceExecutionSummary'] :: InferenceExecutionSummary -> Maybe Text

-- | Indicates the start time at which the inference scheduler began the
--   specific inference execution.
[$sel:scheduledStartTime:InferenceExecutionSummary'] :: InferenceExecutionSummary -> Maybe POSIX

-- | Specifies configuration information for the output results from for
--   the inference execution, including the output S3 location.
[$sel:dataOutputConfiguration:InferenceExecutionSummary'] :: InferenceExecutionSummary -> Maybe InferenceOutputConfiguration

-- | Indicates the time reference in the dataset at which the inference
--   execution stopped.
[$sel:dataEndTime:InferenceExecutionSummary'] :: InferenceExecutionSummary -> Maybe POSIX

-- | The name of the inference scheduler being used for the inference
--   execution.
[$sel:inferenceSchedulerName:InferenceExecutionSummary'] :: InferenceExecutionSummary -> Maybe Text

-- | Specifies configuration information for the input data for the
--   inference scheduler, including delimiter, format, and dataset
--   location.
[$sel:dataInputConfiguration:InferenceExecutionSummary'] :: InferenceExecutionSummary -> Maybe InferenceInputConfiguration

-- | Create a value of <a>InferenceExecutionSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:InferenceExecutionSummary'</a>,
--   <a>inferenceExecutionSummary_status</a> - Indicates the status of the
--   inference execution.
--   
--   <a>$sel:failedReason:InferenceExecutionSummary'</a>,
--   <a>inferenceExecutionSummary_failedReason</a> - Specifies the reason
--   for failure when an inference execution has failed.
--   
--   <a>$sel:modelArn:InferenceExecutionSummary'</a>,
--   <a>inferenceExecutionSummary_modelArn</a> - The Amazon Resource Name
--   (ARN) of the ML model used for the inference execution.
--   
--   <a>$sel:dataStartTime:InferenceExecutionSummary'</a>,
--   <a>inferenceExecutionSummary_dataStartTime</a> - Indicates the time
--   reference in the dataset at which the inference execution began.
--   
--   <a>$sel:modelName:InferenceExecutionSummary'</a>,
--   <a>inferenceExecutionSummary_modelName</a> - The name of the ML model
--   being used for the inference execution.
--   
--   <a>$sel:customerResultObject:InferenceExecutionSummary'</a>,
--   <a>inferenceExecutionSummary_customerResultObject</a> -
--   
--   <a>$sel:inferenceSchedulerArn:InferenceExecutionSummary'</a>,
--   <a>inferenceExecutionSummary_inferenceSchedulerArn</a> - The Amazon
--   Resource Name (ARN) of the inference scheduler being used for the
--   inference execution.
--   
--   <a>$sel:scheduledStartTime:InferenceExecutionSummary'</a>,
--   <a>inferenceExecutionSummary_scheduledStartTime</a> - Indicates the
--   start time at which the inference scheduler began the specific
--   inference execution.
--   
--   <a>$sel:dataOutputConfiguration:InferenceExecutionSummary'</a>,
--   <a>inferenceExecutionSummary_dataOutputConfiguration</a> - Specifies
--   configuration information for the output results from for the
--   inference execution, including the output S3 location.
--   
--   <a>$sel:dataEndTime:InferenceExecutionSummary'</a>,
--   <a>inferenceExecutionSummary_dataEndTime</a> - Indicates the time
--   reference in the dataset at which the inference execution stopped.
--   
--   <a>$sel:inferenceSchedulerName:InferenceExecutionSummary'</a>,
--   <a>inferenceExecutionSummary_inferenceSchedulerName</a> - The name of
--   the inference scheduler being used for the inference execution.
--   
--   <a>$sel:dataInputConfiguration:InferenceExecutionSummary'</a>,
--   <a>inferenceExecutionSummary_dataInputConfiguration</a> - Specifies
--   configuration information for the input data for the inference
--   scheduler, including delimiter, format, and dataset location.
newInferenceExecutionSummary :: InferenceExecutionSummary

-- | Indicates the status of the inference execution.
inferenceExecutionSummary_status :: Lens' InferenceExecutionSummary (Maybe InferenceExecutionStatus)

-- | Specifies the reason for failure when an inference execution has
--   failed.
inferenceExecutionSummary_failedReason :: Lens' InferenceExecutionSummary (Maybe Text)

-- | The Amazon Resource Name (ARN) of the ML model used for the inference
--   execution.
inferenceExecutionSummary_modelArn :: Lens' InferenceExecutionSummary (Maybe Text)

-- | Indicates the time reference in the dataset at which the inference
--   execution began.
inferenceExecutionSummary_dataStartTime :: Lens' InferenceExecutionSummary (Maybe UTCTime)

-- | The name of the ML model being used for the inference execution.
inferenceExecutionSummary_modelName :: Lens' InferenceExecutionSummary (Maybe Text)

inferenceExecutionSummary_customerResultObject :: Lens' InferenceExecutionSummary (Maybe S3Object)

-- | The Amazon Resource Name (ARN) of the inference scheduler being used
--   for the inference execution.
inferenceExecutionSummary_inferenceSchedulerArn :: Lens' InferenceExecutionSummary (Maybe Text)

-- | Indicates the start time at which the inference scheduler began the
--   specific inference execution.
inferenceExecutionSummary_scheduledStartTime :: Lens' InferenceExecutionSummary (Maybe UTCTime)

-- | Specifies configuration information for the output results from for
--   the inference execution, including the output S3 location.
inferenceExecutionSummary_dataOutputConfiguration :: Lens' InferenceExecutionSummary (Maybe InferenceOutputConfiguration)

-- | Indicates the time reference in the dataset at which the inference
--   execution stopped.
inferenceExecutionSummary_dataEndTime :: Lens' InferenceExecutionSummary (Maybe UTCTime)

-- | The name of the inference scheduler being used for the inference
--   execution.
inferenceExecutionSummary_inferenceSchedulerName :: Lens' InferenceExecutionSummary (Maybe Text)

-- | Specifies configuration information for the input data for the
--   inference scheduler, including delimiter, format, and dataset
--   location.
inferenceExecutionSummary_dataInputConfiguration :: Lens' InferenceExecutionSummary (Maybe InferenceInputConfiguration)
instance GHC.Generics.Generic Network.AWS.LookoutEquipment.Types.InferenceExecutionSummary.InferenceExecutionSummary
instance GHC.Show.Show Network.AWS.LookoutEquipment.Types.InferenceExecutionSummary.InferenceExecutionSummary
instance GHC.Read.Read Network.AWS.LookoutEquipment.Types.InferenceExecutionSummary.InferenceExecutionSummary
instance GHC.Classes.Eq Network.AWS.LookoutEquipment.Types.InferenceExecutionSummary.InferenceExecutionSummary
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LookoutEquipment.Types.InferenceExecutionSummary.InferenceExecutionSummary
instance Data.Hashable.Class.Hashable Network.AWS.LookoutEquipment.Types.InferenceExecutionSummary.InferenceExecutionSummary
instance Control.DeepSeq.NFData Network.AWS.LookoutEquipment.Types.InferenceExecutionSummary.InferenceExecutionSummary


module Network.AWS.LookoutEquipment.Types.Tag

-- | A tag is a key-value pair that can be added to a resource as metadata.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | The key for the specified tag.
[$sel:key:Tag'] :: Tag -> Text

-- | The value for the specified tag.
[$sel:value:Tag'] :: Tag -> Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The key for the specified tag.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The value for the specified
--   tag.
newTag :: Text -> Text -> Tag

-- | The key for the specified tag.
tag_key :: Lens' Tag Text

-- | The value for the specified tag.
tag_value :: Lens' Tag Text
instance GHC.Generics.Generic Network.AWS.LookoutEquipment.Types.Tag.Tag
instance GHC.Show.Show Network.AWS.LookoutEquipment.Types.Tag.Tag
instance GHC.Read.Read Network.AWS.LookoutEquipment.Types.Tag.Tag
instance GHC.Classes.Eq Network.AWS.LookoutEquipment.Types.Tag.Tag
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LookoutEquipment.Types.Tag.Tag
instance Data.Hashable.Class.Hashable Network.AWS.LookoutEquipment.Types.Tag.Tag
instance Control.DeepSeq.NFData Network.AWS.LookoutEquipment.Types.Tag.Tag
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LookoutEquipment.Types.Tag.Tag


module Network.AWS.LookoutEquipment.Types.TargetSamplingRate
newtype TargetSamplingRate
TargetSamplingRate' :: Text -> TargetSamplingRate
[fromTargetSamplingRate] :: TargetSamplingRate -> Text
pattern TargetSamplingRate_PT10M :: TargetSamplingRate
pattern TargetSamplingRate_PT10S :: TargetSamplingRate
pattern TargetSamplingRate_PT15M :: TargetSamplingRate
pattern TargetSamplingRate_PT15S :: TargetSamplingRate
pattern TargetSamplingRate_PT1H :: TargetSamplingRate
pattern TargetSamplingRate_PT1M :: TargetSamplingRate
pattern TargetSamplingRate_PT1S :: TargetSamplingRate
pattern TargetSamplingRate_PT30M :: TargetSamplingRate
pattern TargetSamplingRate_PT30S :: TargetSamplingRate
pattern TargetSamplingRate_PT5M :: TargetSamplingRate
pattern TargetSamplingRate_PT5S :: TargetSamplingRate
instance Network.AWS.Data.XML.ToXML Network.AWS.LookoutEquipment.Types.TargetSamplingRate.TargetSamplingRate
instance Network.AWS.Data.XML.FromXML Network.AWS.LookoutEquipment.Types.TargetSamplingRate.TargetSamplingRate
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.LookoutEquipment.Types.TargetSamplingRate.TargetSamplingRate
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LookoutEquipment.Types.TargetSamplingRate.TargetSamplingRate
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.LookoutEquipment.Types.TargetSamplingRate.TargetSamplingRate
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LookoutEquipment.Types.TargetSamplingRate.TargetSamplingRate
instance Network.AWS.Data.Query.ToQuery Network.AWS.LookoutEquipment.Types.TargetSamplingRate.TargetSamplingRate
instance Network.AWS.Data.Headers.ToHeader Network.AWS.LookoutEquipment.Types.TargetSamplingRate.TargetSamplingRate
instance Network.AWS.Data.Log.ToLog Network.AWS.LookoutEquipment.Types.TargetSamplingRate.TargetSamplingRate
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.LookoutEquipment.Types.TargetSamplingRate.TargetSamplingRate
instance Network.AWS.Data.Text.ToText Network.AWS.LookoutEquipment.Types.TargetSamplingRate.TargetSamplingRate
instance Network.AWS.Data.Text.FromText Network.AWS.LookoutEquipment.Types.TargetSamplingRate.TargetSamplingRate
instance Control.DeepSeq.NFData Network.AWS.LookoutEquipment.Types.TargetSamplingRate.TargetSamplingRate
instance Data.Hashable.Class.Hashable Network.AWS.LookoutEquipment.Types.TargetSamplingRate.TargetSamplingRate
instance GHC.Generics.Generic Network.AWS.LookoutEquipment.Types.TargetSamplingRate.TargetSamplingRate
instance GHC.Classes.Ord Network.AWS.LookoutEquipment.Types.TargetSamplingRate.TargetSamplingRate
instance GHC.Classes.Eq Network.AWS.LookoutEquipment.Types.TargetSamplingRate.TargetSamplingRate
instance GHC.Read.Read Network.AWS.LookoutEquipment.Types.TargetSamplingRate.TargetSamplingRate
instance GHC.Show.Show Network.AWS.LookoutEquipment.Types.TargetSamplingRate.TargetSamplingRate


module Network.AWS.LookoutEquipment.Types.DataPreProcessingConfiguration

-- | The configuration is the <tt>TargetSamplingRate</tt>, which is the
--   sampling rate of the data after post processing by Amazon Lookout for
--   Equipment. For example, if you provide data that has been collected at
--   a 1 second level and you want the system to resample the data at a 1
--   minute rate before training, the <tt>TargetSamplingRate</tt> is 1
--   minute.
--   
--   When providing a value for the <tt>TargetSamplingRate</tt>, you must
--   attach the prefix "PT" to the rate you want. The value for a 1 second
--   rate is therefore <i>PT1S</i>, the value for a 15 minute rate is
--   <i>PT15M</i>, and the value for a 1 hour rate is <i>PT1H</i>
--   
--   <i>See:</i> <a>newDataPreProcessingConfiguration</a> smart
--   constructor.
data DataPreProcessingConfiguration
DataPreProcessingConfiguration' :: Maybe TargetSamplingRate -> DataPreProcessingConfiguration

-- | The sampling rate of the data after post processing by Amazon Lookout
--   for Equipment. For example, if you provide data that has been
--   collected at a 1 second level and you want the system to resample the
--   data at a 1 minute rate before training, the
--   <tt>TargetSamplingRate</tt> is 1 minute.
--   
--   When providing a value for the <tt>TargetSamplingRate</tt>, you must
--   attach the prefix "PT" to the rate you want. The value for a 1 second
--   rate is therefore <i>PT1S</i>, the value for a 15 minute rate is
--   <i>PT15M</i>, and the value for a 1 hour rate is <i>PT1H</i>
[$sel:targetSamplingRate:DataPreProcessingConfiguration'] :: DataPreProcessingConfiguration -> Maybe TargetSamplingRate

-- | Create a value of <a>DataPreProcessingConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetSamplingRate:DataPreProcessingConfiguration'</a>,
--   <a>dataPreProcessingConfiguration_targetSamplingRate</a> - The
--   sampling rate of the data after post processing by Amazon Lookout for
--   Equipment. For example, if you provide data that has been collected at
--   a 1 second level and you want the system to resample the data at a 1
--   minute rate before training, the <tt>TargetSamplingRate</tt> is 1
--   minute.
--   
--   When providing a value for the <tt>TargetSamplingRate</tt>, you must
--   attach the prefix "PT" to the rate you want. The value for a 1 second
--   rate is therefore <i>PT1S</i>, the value for a 15 minute rate is
--   <i>PT15M</i>, and the value for a 1 hour rate is <i>PT1H</i>
newDataPreProcessingConfiguration :: DataPreProcessingConfiguration

-- | The sampling rate of the data after post processing by Amazon Lookout
--   for Equipment. For example, if you provide data that has been
--   collected at a 1 second level and you want the system to resample the
--   data at a 1 minute rate before training, the
--   <tt>TargetSamplingRate</tt> is 1 minute.
--   
--   When providing a value for the <tt>TargetSamplingRate</tt>, you must
--   attach the prefix "PT" to the rate you want. The value for a 1 second
--   rate is therefore <i>PT1S</i>, the value for a 15 minute rate is
--   <i>PT15M</i>, and the value for a 1 hour rate is <i>PT1H</i>
dataPreProcessingConfiguration_targetSamplingRate :: Lens' DataPreProcessingConfiguration (Maybe TargetSamplingRate)
instance GHC.Generics.Generic Network.AWS.LookoutEquipment.Types.DataPreProcessingConfiguration.DataPreProcessingConfiguration
instance GHC.Show.Show Network.AWS.LookoutEquipment.Types.DataPreProcessingConfiguration.DataPreProcessingConfiguration
instance GHC.Read.Read Network.AWS.LookoutEquipment.Types.DataPreProcessingConfiguration.DataPreProcessingConfiguration
instance GHC.Classes.Eq Network.AWS.LookoutEquipment.Types.DataPreProcessingConfiguration.DataPreProcessingConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LookoutEquipment.Types.DataPreProcessingConfiguration.DataPreProcessingConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.LookoutEquipment.Types.DataPreProcessingConfiguration.DataPreProcessingConfiguration
instance Control.DeepSeq.NFData Network.AWS.LookoutEquipment.Types.DataPreProcessingConfiguration.DataPreProcessingConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LookoutEquipment.Types.DataPreProcessingConfiguration.DataPreProcessingConfiguration


module Network.AWS.LookoutEquipment.Types

-- | API version <tt>2020-12-15</tt> of the Amazon Lookout for Equipment
--   SDK configuration.
defaultService :: Service

-- | The input fails to satisfy constraints specified by Amazon Lookout for
--   Equipment or a related AWS service that's being utilized.
_ValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request could not be completed because you do not have access to
--   the resource.
_AccessDeniedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request could not be completed due to a conflict with the current
--   state of the target resource.
_ConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Resource limitations have been exceeded.
_ServiceQuotaExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request was denied due to request throttling.
_ThrottlingException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Processing of the request has failed because of an unknown error,
--   exception or failure.
_InternalServerException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource requested could not be found. Verify the resource ID and
--   retry your request.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError
newtype DataUploadFrequency
DataUploadFrequency' :: Text -> DataUploadFrequency
[fromDataUploadFrequency] :: DataUploadFrequency -> Text
pattern DataUploadFrequency_PT10M :: DataUploadFrequency
pattern DataUploadFrequency_PT15M :: DataUploadFrequency
pattern DataUploadFrequency_PT1H :: DataUploadFrequency
pattern DataUploadFrequency_PT30M :: DataUploadFrequency
pattern DataUploadFrequency_PT5M :: DataUploadFrequency
newtype DatasetStatus
DatasetStatus' :: Text -> DatasetStatus
[fromDatasetStatus] :: DatasetStatus -> Text
pattern DatasetStatus_ACTIVE :: DatasetStatus
pattern DatasetStatus_CREATED :: DatasetStatus
pattern DatasetStatus_INGESTION_IN_PROGRESS :: DatasetStatus
newtype InferenceExecutionStatus
InferenceExecutionStatus' :: Text -> InferenceExecutionStatus
[fromInferenceExecutionStatus] :: InferenceExecutionStatus -> Text
pattern InferenceExecutionStatus_FAILED :: InferenceExecutionStatus
pattern InferenceExecutionStatus_IN_PROGRESS :: InferenceExecutionStatus
pattern InferenceExecutionStatus_SUCCESS :: InferenceExecutionStatus
newtype InferenceSchedulerStatus
InferenceSchedulerStatus' :: Text -> InferenceSchedulerStatus
[fromInferenceSchedulerStatus] :: InferenceSchedulerStatus -> Text
pattern InferenceSchedulerStatus_PENDING :: InferenceSchedulerStatus
pattern InferenceSchedulerStatus_RUNNING :: InferenceSchedulerStatus
pattern InferenceSchedulerStatus_STOPPED :: InferenceSchedulerStatus
pattern InferenceSchedulerStatus_STOPPING :: InferenceSchedulerStatus
newtype IngestionJobStatus
IngestionJobStatus' :: Text -> IngestionJobStatus
[fromIngestionJobStatus] :: IngestionJobStatus -> Text
pattern IngestionJobStatus_FAILED :: IngestionJobStatus
pattern IngestionJobStatus_IN_PROGRESS :: IngestionJobStatus
pattern IngestionJobStatus_SUCCESS :: IngestionJobStatus
newtype ModelStatus
ModelStatus' :: Text -> ModelStatus
[fromModelStatus] :: ModelStatus -> Text
pattern ModelStatus_FAILED :: ModelStatus
pattern ModelStatus_IN_PROGRESS :: ModelStatus
pattern ModelStatus_SUCCESS :: ModelStatus
newtype TargetSamplingRate
TargetSamplingRate' :: Text -> TargetSamplingRate
[fromTargetSamplingRate] :: TargetSamplingRate -> Text
pattern TargetSamplingRate_PT10M :: TargetSamplingRate
pattern TargetSamplingRate_PT10S :: TargetSamplingRate
pattern TargetSamplingRate_PT15M :: TargetSamplingRate
pattern TargetSamplingRate_PT15S :: TargetSamplingRate
pattern TargetSamplingRate_PT1H :: TargetSamplingRate
pattern TargetSamplingRate_PT1M :: TargetSamplingRate
pattern TargetSamplingRate_PT1S :: TargetSamplingRate
pattern TargetSamplingRate_PT30M :: TargetSamplingRate
pattern TargetSamplingRate_PT30S :: TargetSamplingRate
pattern TargetSamplingRate_PT5M :: TargetSamplingRate
pattern TargetSamplingRate_PT5S :: TargetSamplingRate

-- | Provides information about a specified data ingestion job, including
--   dataset information, data ingestion configuration, and status.
--   
--   <i>See:</i> <a>newDataIngestionJobSummary</a> smart constructor.
data DataIngestionJobSummary
DataIngestionJobSummary' :: Maybe IngestionInputConfiguration -> Maybe IngestionJobStatus -> Maybe Text -> Maybe Text -> Maybe Text -> DataIngestionJobSummary

-- | Specifies information for the input data for the data inference job,
--   including data S3 location parameters.
[$sel:ingestionInputConfiguration:DataIngestionJobSummary'] :: DataIngestionJobSummary -> Maybe IngestionInputConfiguration

-- | Indicates the status of the data ingestion job.
[$sel:status:DataIngestionJobSummary'] :: DataIngestionJobSummary -> Maybe IngestionJobStatus

-- | The Amazon Resource Name (ARN) of the dataset used in the data
--   ingestion job.
[$sel:datasetArn:DataIngestionJobSummary'] :: DataIngestionJobSummary -> Maybe Text

-- | Indicates the job ID of the data ingestion job.
[$sel:jobId:DataIngestionJobSummary'] :: DataIngestionJobSummary -> Maybe Text

-- | The name of the dataset used for the data ingestion job.
[$sel:datasetName:DataIngestionJobSummary'] :: DataIngestionJobSummary -> Maybe Text

-- | Create a value of <a>DataIngestionJobSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ingestionInputConfiguration:DataIngestionJobSummary'</a>,
--   <a>dataIngestionJobSummary_ingestionInputConfiguration</a> - Specifies
--   information for the input data for the data inference job, including
--   data S3 location parameters.
--   
--   <a>$sel:status:DataIngestionJobSummary'</a>,
--   <a>dataIngestionJobSummary_status</a> - Indicates the status of the
--   data ingestion job.
--   
--   <a>$sel:datasetArn:DataIngestionJobSummary'</a>,
--   <a>dataIngestionJobSummary_datasetArn</a> - The Amazon Resource Name
--   (ARN) of the dataset used in the data ingestion job.
--   
--   <a>$sel:jobId:DataIngestionJobSummary'</a>,
--   <a>dataIngestionJobSummary_jobId</a> - Indicates the job ID of the
--   data ingestion job.
--   
--   <a>$sel:datasetName:DataIngestionJobSummary'</a>,
--   <a>dataIngestionJobSummary_datasetName</a> - The name of the dataset
--   used for the data ingestion job.
newDataIngestionJobSummary :: DataIngestionJobSummary

-- | Specifies information for the input data for the data inference job,
--   including data S3 location parameters.
dataIngestionJobSummary_ingestionInputConfiguration :: Lens' DataIngestionJobSummary (Maybe IngestionInputConfiguration)

-- | Indicates the status of the data ingestion job.
dataIngestionJobSummary_status :: Lens' DataIngestionJobSummary (Maybe IngestionJobStatus)

-- | The Amazon Resource Name (ARN) of the dataset used in the data
--   ingestion job.
dataIngestionJobSummary_datasetArn :: Lens' DataIngestionJobSummary (Maybe Text)

-- | Indicates the job ID of the data ingestion job.
dataIngestionJobSummary_jobId :: Lens' DataIngestionJobSummary (Maybe Text)

-- | The name of the dataset used for the data ingestion job.
dataIngestionJobSummary_datasetName :: Lens' DataIngestionJobSummary (Maybe Text)

-- | The configuration is the <tt>TargetSamplingRate</tt>, which is the
--   sampling rate of the data after post processing by Amazon Lookout for
--   Equipment. For example, if you provide data that has been collected at
--   a 1 second level and you want the system to resample the data at a 1
--   minute rate before training, the <tt>TargetSamplingRate</tt> is 1
--   minute.
--   
--   When providing a value for the <tt>TargetSamplingRate</tt>, you must
--   attach the prefix "PT" to the rate you want. The value for a 1 second
--   rate is therefore <i>PT1S</i>, the value for a 15 minute rate is
--   <i>PT15M</i>, and the value for a 1 hour rate is <i>PT1H</i>
--   
--   <i>See:</i> <a>newDataPreProcessingConfiguration</a> smart
--   constructor.
data DataPreProcessingConfiguration
DataPreProcessingConfiguration' :: Maybe TargetSamplingRate -> DataPreProcessingConfiguration

-- | The sampling rate of the data after post processing by Amazon Lookout
--   for Equipment. For example, if you provide data that has been
--   collected at a 1 second level and you want the system to resample the
--   data at a 1 minute rate before training, the
--   <tt>TargetSamplingRate</tt> is 1 minute.
--   
--   When providing a value for the <tt>TargetSamplingRate</tt>, you must
--   attach the prefix "PT" to the rate you want. The value for a 1 second
--   rate is therefore <i>PT1S</i>, the value for a 15 minute rate is
--   <i>PT15M</i>, and the value for a 1 hour rate is <i>PT1H</i>
[$sel:targetSamplingRate:DataPreProcessingConfiguration'] :: DataPreProcessingConfiguration -> Maybe TargetSamplingRate

-- | Create a value of <a>DataPreProcessingConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetSamplingRate:DataPreProcessingConfiguration'</a>,
--   <a>dataPreProcessingConfiguration_targetSamplingRate</a> - The
--   sampling rate of the data after post processing by Amazon Lookout for
--   Equipment. For example, if you provide data that has been collected at
--   a 1 second level and you want the system to resample the data at a 1
--   minute rate before training, the <tt>TargetSamplingRate</tt> is 1
--   minute.
--   
--   When providing a value for the <tt>TargetSamplingRate</tt>, you must
--   attach the prefix "PT" to the rate you want. The value for a 1 second
--   rate is therefore <i>PT1S</i>, the value for a 15 minute rate is
--   <i>PT15M</i>, and the value for a 1 hour rate is <i>PT1H</i>
newDataPreProcessingConfiguration :: DataPreProcessingConfiguration

-- | The sampling rate of the data after post processing by Amazon Lookout
--   for Equipment. For example, if you provide data that has been
--   collected at a 1 second level and you want the system to resample the
--   data at a 1 minute rate before training, the
--   <tt>TargetSamplingRate</tt> is 1 minute.
--   
--   When providing a value for the <tt>TargetSamplingRate</tt>, you must
--   attach the prefix "PT" to the rate you want. The value for a 1 second
--   rate is therefore <i>PT1S</i>, the value for a 15 minute rate is
--   <i>PT15M</i>, and the value for a 1 hour rate is <i>PT1H</i>
dataPreProcessingConfiguration_targetSamplingRate :: Lens' DataPreProcessingConfiguration (Maybe TargetSamplingRate)

-- | Provides information about the data schema used with the given
--   dataset.
--   
--   <i>See:</i> <a>newDatasetSchema</a> smart constructor.
data DatasetSchema
DatasetSchema' :: Maybe Text -> DatasetSchema
[$sel:inlineDataSchema:DatasetSchema'] :: DatasetSchema -> Maybe Text

-- | Create a value of <a>DatasetSchema</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inlineDataSchema:DatasetSchema'</a>,
--   <a>datasetSchema_inlineDataSchema</a> -
newDatasetSchema :: DatasetSchema

datasetSchema_inlineDataSchema :: Lens' DatasetSchema (Maybe Text)

-- | Contains information about the specific data set, including name, ARN,
--   and status.
--   
--   <i>See:</i> <a>newDatasetSummary</a> smart constructor.
data DatasetSummary
DatasetSummary' :: Maybe DatasetStatus -> Maybe Text -> Maybe POSIX -> Maybe Text -> DatasetSummary

-- | Indicates the status of the dataset.
[$sel:status:DatasetSummary'] :: DatasetSummary -> Maybe DatasetStatus

-- | The Amazon Resource Name (ARN) of the specified dataset.
[$sel:datasetArn:DatasetSummary'] :: DatasetSummary -> Maybe Text

-- | The time at which the dataset was created in Amazon Lookout for
--   Equipment.
[$sel:createdAt:DatasetSummary'] :: DatasetSummary -> Maybe POSIX

-- | The name of the dataset.
[$sel:datasetName:DatasetSummary'] :: DatasetSummary -> Maybe Text

-- | Create a value of <a>DatasetSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:DatasetSummary'</a>, <a>datasetSummary_status</a> -
--   Indicates the status of the dataset.
--   
--   <a>$sel:datasetArn:DatasetSummary'</a>,
--   <a>datasetSummary_datasetArn</a> - The Amazon Resource Name (ARN) of
--   the specified dataset.
--   
--   <a>$sel:createdAt:DatasetSummary'</a>, <a>datasetSummary_createdAt</a>
--   - The time at which the dataset was created in Amazon Lookout for
--   Equipment.
--   
--   <a>$sel:datasetName:DatasetSummary'</a>,
--   <a>datasetSummary_datasetName</a> - The name of the dataset.
newDatasetSummary :: DatasetSummary

-- | Indicates the status of the dataset.
datasetSummary_status :: Lens' DatasetSummary (Maybe DatasetStatus)

-- | The Amazon Resource Name (ARN) of the specified dataset.
datasetSummary_datasetArn :: Lens' DatasetSummary (Maybe Text)

-- | The time at which the dataset was created in Amazon Lookout for
--   Equipment.
datasetSummary_createdAt :: Lens' DatasetSummary (Maybe UTCTime)

-- | The name of the dataset.
datasetSummary_datasetName :: Lens' DatasetSummary (Maybe Text)

-- | Contains information about the specific inference execution, including
--   input and output data configuration, inference scheduling information,
--   status, and so on.
--   
--   <i>See:</i> <a>newInferenceExecutionSummary</a> smart constructor.
data InferenceExecutionSummary
InferenceExecutionSummary' :: Maybe InferenceExecutionStatus -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe S3Object -> Maybe Text -> Maybe POSIX -> Maybe InferenceOutputConfiguration -> Maybe POSIX -> Maybe Text -> Maybe InferenceInputConfiguration -> InferenceExecutionSummary

-- | Indicates the status of the inference execution.
[$sel:status:InferenceExecutionSummary'] :: InferenceExecutionSummary -> Maybe InferenceExecutionStatus

-- | Specifies the reason for failure when an inference execution has
--   failed.
[$sel:failedReason:InferenceExecutionSummary'] :: InferenceExecutionSummary -> Maybe Text

-- | The Amazon Resource Name (ARN) of the ML model used for the inference
--   execution.
[$sel:modelArn:InferenceExecutionSummary'] :: InferenceExecutionSummary -> Maybe Text

-- | Indicates the time reference in the dataset at which the inference
--   execution began.
[$sel:dataStartTime:InferenceExecutionSummary'] :: InferenceExecutionSummary -> Maybe POSIX

-- | The name of the ML model being used for the inference execution.
[$sel:modelName:InferenceExecutionSummary'] :: InferenceExecutionSummary -> Maybe Text
[$sel:customerResultObject:InferenceExecutionSummary'] :: InferenceExecutionSummary -> Maybe S3Object

-- | The Amazon Resource Name (ARN) of the inference scheduler being used
--   for the inference execution.
[$sel:inferenceSchedulerArn:InferenceExecutionSummary'] :: InferenceExecutionSummary -> Maybe Text

-- | Indicates the start time at which the inference scheduler began the
--   specific inference execution.
[$sel:scheduledStartTime:InferenceExecutionSummary'] :: InferenceExecutionSummary -> Maybe POSIX

-- | Specifies configuration information for the output results from for
--   the inference execution, including the output S3 location.
[$sel:dataOutputConfiguration:InferenceExecutionSummary'] :: InferenceExecutionSummary -> Maybe InferenceOutputConfiguration

-- | Indicates the time reference in the dataset at which the inference
--   execution stopped.
[$sel:dataEndTime:InferenceExecutionSummary'] :: InferenceExecutionSummary -> Maybe POSIX

-- | The name of the inference scheduler being used for the inference
--   execution.
[$sel:inferenceSchedulerName:InferenceExecutionSummary'] :: InferenceExecutionSummary -> Maybe Text

-- | Specifies configuration information for the input data for the
--   inference scheduler, including delimiter, format, and dataset
--   location.
[$sel:dataInputConfiguration:InferenceExecutionSummary'] :: InferenceExecutionSummary -> Maybe InferenceInputConfiguration

-- | Create a value of <a>InferenceExecutionSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:InferenceExecutionSummary'</a>,
--   <a>inferenceExecutionSummary_status</a> - Indicates the status of the
--   inference execution.
--   
--   <a>$sel:failedReason:InferenceExecutionSummary'</a>,
--   <a>inferenceExecutionSummary_failedReason</a> - Specifies the reason
--   for failure when an inference execution has failed.
--   
--   <a>$sel:modelArn:InferenceExecutionSummary'</a>,
--   <a>inferenceExecutionSummary_modelArn</a> - The Amazon Resource Name
--   (ARN) of the ML model used for the inference execution.
--   
--   <a>$sel:dataStartTime:InferenceExecutionSummary'</a>,
--   <a>inferenceExecutionSummary_dataStartTime</a> - Indicates the time
--   reference in the dataset at which the inference execution began.
--   
--   <a>$sel:modelName:InferenceExecutionSummary'</a>,
--   <a>inferenceExecutionSummary_modelName</a> - The name of the ML model
--   being used for the inference execution.
--   
--   <a>$sel:customerResultObject:InferenceExecutionSummary'</a>,
--   <a>inferenceExecutionSummary_customerResultObject</a> -
--   
--   <a>$sel:inferenceSchedulerArn:InferenceExecutionSummary'</a>,
--   <a>inferenceExecutionSummary_inferenceSchedulerArn</a> - The Amazon
--   Resource Name (ARN) of the inference scheduler being used for the
--   inference execution.
--   
--   <a>$sel:scheduledStartTime:InferenceExecutionSummary'</a>,
--   <a>inferenceExecutionSummary_scheduledStartTime</a> - Indicates the
--   start time at which the inference scheduler began the specific
--   inference execution.
--   
--   <a>$sel:dataOutputConfiguration:InferenceExecutionSummary'</a>,
--   <a>inferenceExecutionSummary_dataOutputConfiguration</a> - Specifies
--   configuration information for the output results from for the
--   inference execution, including the output S3 location.
--   
--   <a>$sel:dataEndTime:InferenceExecutionSummary'</a>,
--   <a>inferenceExecutionSummary_dataEndTime</a> - Indicates the time
--   reference in the dataset at which the inference execution stopped.
--   
--   <a>$sel:inferenceSchedulerName:InferenceExecutionSummary'</a>,
--   <a>inferenceExecutionSummary_inferenceSchedulerName</a> - The name of
--   the inference scheduler being used for the inference execution.
--   
--   <a>$sel:dataInputConfiguration:InferenceExecutionSummary'</a>,
--   <a>inferenceExecutionSummary_dataInputConfiguration</a> - Specifies
--   configuration information for the input data for the inference
--   scheduler, including delimiter, format, and dataset location.
newInferenceExecutionSummary :: InferenceExecutionSummary

-- | Indicates the status of the inference execution.
inferenceExecutionSummary_status :: Lens' InferenceExecutionSummary (Maybe InferenceExecutionStatus)

-- | Specifies the reason for failure when an inference execution has
--   failed.
inferenceExecutionSummary_failedReason :: Lens' InferenceExecutionSummary (Maybe Text)

-- | The Amazon Resource Name (ARN) of the ML model used for the inference
--   execution.
inferenceExecutionSummary_modelArn :: Lens' InferenceExecutionSummary (Maybe Text)

-- | Indicates the time reference in the dataset at which the inference
--   execution began.
inferenceExecutionSummary_dataStartTime :: Lens' InferenceExecutionSummary (Maybe UTCTime)

-- | The name of the ML model being used for the inference execution.
inferenceExecutionSummary_modelName :: Lens' InferenceExecutionSummary (Maybe Text)

inferenceExecutionSummary_customerResultObject :: Lens' InferenceExecutionSummary (Maybe S3Object)

-- | The Amazon Resource Name (ARN) of the inference scheduler being used
--   for the inference execution.
inferenceExecutionSummary_inferenceSchedulerArn :: Lens' InferenceExecutionSummary (Maybe Text)

-- | Indicates the start time at which the inference scheduler began the
--   specific inference execution.
inferenceExecutionSummary_scheduledStartTime :: Lens' InferenceExecutionSummary (Maybe UTCTime)

-- | Specifies configuration information for the output results from for
--   the inference execution, including the output S3 location.
inferenceExecutionSummary_dataOutputConfiguration :: Lens' InferenceExecutionSummary (Maybe InferenceOutputConfiguration)

-- | Indicates the time reference in the dataset at which the inference
--   execution stopped.
inferenceExecutionSummary_dataEndTime :: Lens' InferenceExecutionSummary (Maybe UTCTime)

-- | The name of the inference scheduler being used for the inference
--   execution.
inferenceExecutionSummary_inferenceSchedulerName :: Lens' InferenceExecutionSummary (Maybe Text)

-- | Specifies configuration information for the input data for the
--   inference scheduler, including delimiter, format, and dataset
--   location.
inferenceExecutionSummary_dataInputConfiguration :: Lens' InferenceExecutionSummary (Maybe InferenceInputConfiguration)

-- | Specifies configuration information for the input data for the
--   inference, including S3 location of input data..
--   
--   <i>See:</i> <a>newInferenceInputConfiguration</a> smart constructor.
data InferenceInputConfiguration
InferenceInputConfiguration' :: Maybe Text -> Maybe InferenceS3InputConfiguration -> Maybe InferenceInputNameConfiguration -> InferenceInputConfiguration

-- | Indicates the difference between your time zone and Greenwich Mean
--   Time (GMT).
[$sel:inputTimeZoneOffset:InferenceInputConfiguration'] :: InferenceInputConfiguration -> Maybe Text

-- | Specifies configuration information for the input data for the
--   inference, including S3 location of input data..
[$sel:s3InputConfiguration:InferenceInputConfiguration'] :: InferenceInputConfiguration -> Maybe InferenceS3InputConfiguration

-- | Specifies configuration information for the input data for the
--   inference, including timestamp format and delimiter.
[$sel:inferenceInputNameConfiguration:InferenceInputConfiguration'] :: InferenceInputConfiguration -> Maybe InferenceInputNameConfiguration

-- | Create a value of <a>InferenceInputConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputTimeZoneOffset:InferenceInputConfiguration'</a>,
--   <a>inferenceInputConfiguration_inputTimeZoneOffset</a> - Indicates the
--   difference between your time zone and Greenwich Mean Time (GMT).
--   
--   <a>$sel:s3InputConfiguration:InferenceInputConfiguration'</a>,
--   <a>inferenceInputConfiguration_s3InputConfiguration</a> - Specifies
--   configuration information for the input data for the inference,
--   including S3 location of input data..
--   
--   
--   <a>$sel:inferenceInputNameConfiguration:InferenceInputConfiguration'</a>,
--   <a>inferenceInputConfiguration_inferenceInputNameConfiguration</a> -
--   Specifies configuration information for the input data for the
--   inference, including timestamp format and delimiter.
newInferenceInputConfiguration :: InferenceInputConfiguration

-- | Indicates the difference between your time zone and Greenwich Mean
--   Time (GMT).
inferenceInputConfiguration_inputTimeZoneOffset :: Lens' InferenceInputConfiguration (Maybe Text)

-- | Specifies configuration information for the input data for the
--   inference, including S3 location of input data..
inferenceInputConfiguration_s3InputConfiguration :: Lens' InferenceInputConfiguration (Maybe InferenceS3InputConfiguration)

-- | Specifies configuration information for the input data for the
--   inference, including timestamp format and delimiter.
inferenceInputConfiguration_inferenceInputNameConfiguration :: Lens' InferenceInputConfiguration (Maybe InferenceInputNameConfiguration)

-- | Specifies configuration information for the input data for the
--   inference, including timestamp format and delimiter.
--   
--   <i>See:</i> <a>newInferenceInputNameConfiguration</a> smart
--   constructor.
data InferenceInputNameConfiguration
InferenceInputNameConfiguration' :: Maybe Text -> Maybe Text -> InferenceInputNameConfiguration

-- | The format of the timestamp, whether Epoch time, or standard, with or
--   without hyphens (-).
[$sel:timestampFormat:InferenceInputNameConfiguration'] :: InferenceInputNameConfiguration -> Maybe Text

-- | Indicates the delimiter character used between items in the data.
[$sel:componentTimestampDelimiter:InferenceInputNameConfiguration'] :: InferenceInputNameConfiguration -> Maybe Text

-- | Create a value of <a>InferenceInputNameConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timestampFormat:InferenceInputNameConfiguration'</a>,
--   <a>inferenceInputNameConfiguration_timestampFormat</a> - The format of
--   the timestamp, whether Epoch time, or standard, with or without
--   hyphens (-).
--   
--   
--   <a>$sel:componentTimestampDelimiter:InferenceInputNameConfiguration'</a>,
--   <a>inferenceInputNameConfiguration_componentTimestampDelimiter</a> -
--   Indicates the delimiter character used between items in the data.
newInferenceInputNameConfiguration :: InferenceInputNameConfiguration

-- | The format of the timestamp, whether Epoch time, or standard, with or
--   without hyphens (-).
inferenceInputNameConfiguration_timestampFormat :: Lens' InferenceInputNameConfiguration (Maybe Text)

-- | Indicates the delimiter character used between items in the data.
inferenceInputNameConfiguration_componentTimestampDelimiter :: Lens' InferenceInputNameConfiguration (Maybe Text)

-- | Specifies configuration information for the output results from for
--   the inference, including KMS key ID and output S3 location.
--   
--   <i>See:</i> <a>newInferenceOutputConfiguration</a> smart constructor.
data InferenceOutputConfiguration
InferenceOutputConfiguration' :: Maybe Text -> InferenceS3OutputConfiguration -> InferenceOutputConfiguration

-- | The ID number for the AWS KMS key used to encrypt the inference
--   output.
[$sel:kmsKeyId:InferenceOutputConfiguration'] :: InferenceOutputConfiguration -> Maybe Text

-- | Specifies configuration information for the output results from for
--   the inference, output S3 location.
[$sel:s3OutputConfiguration:InferenceOutputConfiguration'] :: InferenceOutputConfiguration -> InferenceS3OutputConfiguration

-- | Create a value of <a>InferenceOutputConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:kmsKeyId:InferenceOutputConfiguration'</a>,
--   <a>inferenceOutputConfiguration_kmsKeyId</a> - The ID number for the
--   AWS KMS key used to encrypt the inference output.
--   
--   <a>$sel:s3OutputConfiguration:InferenceOutputConfiguration'</a>,
--   <a>inferenceOutputConfiguration_s3OutputConfiguration</a> - Specifies
--   configuration information for the output results from for the
--   inference, output S3 location.
newInferenceOutputConfiguration :: InferenceS3OutputConfiguration -> InferenceOutputConfiguration

-- | The ID number for the AWS KMS key used to encrypt the inference
--   output.
inferenceOutputConfiguration_kmsKeyId :: Lens' InferenceOutputConfiguration (Maybe Text)

-- | Specifies configuration information for the output results from for
--   the inference, output S3 location.
inferenceOutputConfiguration_s3OutputConfiguration :: Lens' InferenceOutputConfiguration InferenceS3OutputConfiguration

-- | Specifies configuration information for the input data for the
--   inference, including input data S3 location.
--   
--   <i>See:</i> <a>newInferenceS3InputConfiguration</a> smart constructor.
data InferenceS3InputConfiguration
InferenceS3InputConfiguration' :: Maybe Text -> Text -> InferenceS3InputConfiguration

-- | The prefix for the S3 bucket used for the input data for the
--   inference.
[$sel:prefix:InferenceS3InputConfiguration'] :: InferenceS3InputConfiguration -> Maybe Text

-- | The bucket containing the input dataset for the inference.
[$sel:bucket:InferenceS3InputConfiguration'] :: InferenceS3InputConfiguration -> Text

-- | Create a value of <a>InferenceS3InputConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:prefix:InferenceS3InputConfiguration'</a>,
--   <a>inferenceS3InputConfiguration_prefix</a> - The prefix for the S3
--   bucket used for the input data for the inference.
--   
--   <a>$sel:bucket:InferenceS3InputConfiguration'</a>,
--   <a>inferenceS3InputConfiguration_bucket</a> - The bucket containing
--   the input dataset for the inference.
newInferenceS3InputConfiguration :: Text -> InferenceS3InputConfiguration

-- | The prefix for the S3 bucket used for the input data for the
--   inference.
inferenceS3InputConfiguration_prefix :: Lens' InferenceS3InputConfiguration (Maybe Text)

-- | The bucket containing the input dataset for the inference.
inferenceS3InputConfiguration_bucket :: Lens' InferenceS3InputConfiguration Text

-- | Specifies configuration information for the output results from the
--   inference, including output S3 location.
--   
--   <i>See:</i> <a>newInferenceS3OutputConfiguration</a> smart
--   constructor.
data InferenceS3OutputConfiguration
InferenceS3OutputConfiguration' :: Maybe Text -> Text -> InferenceS3OutputConfiguration

-- | The prefix for the S3 bucket used for the output results from the
--   inference.
[$sel:prefix:InferenceS3OutputConfiguration'] :: InferenceS3OutputConfiguration -> Maybe Text

-- | The bucket containing the output results from the inference
[$sel:bucket:InferenceS3OutputConfiguration'] :: InferenceS3OutputConfiguration -> Text

-- | Create a value of <a>InferenceS3OutputConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:prefix:InferenceS3OutputConfiguration'</a>,
--   <a>inferenceS3OutputConfiguration_prefix</a> - The prefix for the S3
--   bucket used for the output results from the inference.
--   
--   <a>$sel:bucket:InferenceS3OutputConfiguration'</a>,
--   <a>inferenceS3OutputConfiguration_bucket</a> - The bucket containing
--   the output results from the inference
newInferenceS3OutputConfiguration :: Text -> InferenceS3OutputConfiguration

-- | The prefix for the S3 bucket used for the output results from the
--   inference.
inferenceS3OutputConfiguration_prefix :: Lens' InferenceS3OutputConfiguration (Maybe Text)

-- | The bucket containing the output results from the inference
inferenceS3OutputConfiguration_bucket :: Lens' InferenceS3OutputConfiguration Text

-- | Contains information about the specific inference scheduler, including
--   data delay offset, model name and ARN, status, and so on.
--   
--   <i>See:</i> <a>newInferenceSchedulerSummary</a> smart constructor.
data InferenceSchedulerSummary
InferenceSchedulerSummary' :: Maybe InferenceSchedulerStatus -> Maybe DataUploadFrequency -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> InferenceSchedulerSummary

-- | Indicates the status of the inference scheduler.
[$sel:status:InferenceSchedulerSummary'] :: InferenceSchedulerSummary -> Maybe InferenceSchedulerStatus

-- | How often data is uploaded to the source S3 bucket for the input data.
--   This value is the length of time between data uploads. For instance,
--   if you select 5 minutes, Amazon Lookout for Equipment will upload the
--   real-time data to the source bucket once every 5 minutes. This
--   frequency also determines how often Amazon Lookout for Equipment
--   starts a scheduled inference on your data. In this example, it starts
--   once every 5 minutes.
[$sel:dataUploadFrequency:InferenceSchedulerSummary'] :: InferenceSchedulerSummary -> Maybe DataUploadFrequency

-- | A period of time (in minutes) by which inference on the data is
--   delayed after the data starts. For instance, if an offset delay time
--   of five minutes was selected, inference will not begin on the data
--   until the first data measurement after the five minute mark. For
--   example, if five minutes is selected, the inference scheduler will
--   wake up at the configured frequency with the additional five minute
--   delay time to check the customer S3 bucket. The customer can upload
--   data at the same frequency and they don't need to stop and restart the
--   scheduler when uploading new data.
[$sel:dataDelayOffsetInMinutes:InferenceSchedulerSummary'] :: InferenceSchedulerSummary -> Maybe Natural

-- | The Amazon Resource Name (ARN) of the ML model used by the inference
--   scheduler.
[$sel:modelArn:InferenceSchedulerSummary'] :: InferenceSchedulerSummary -> Maybe Text

-- | The name of the ML model used for the inference scheduler.
[$sel:modelName:InferenceSchedulerSummary'] :: InferenceSchedulerSummary -> Maybe Text

-- | The Amazon Resource Name (ARN) of the inference scheduler.
[$sel:inferenceSchedulerArn:InferenceSchedulerSummary'] :: InferenceSchedulerSummary -> Maybe Text

-- | The name of the inference scheduler.
[$sel:inferenceSchedulerName:InferenceSchedulerSummary'] :: InferenceSchedulerSummary -> Maybe Text

-- | Create a value of <a>InferenceSchedulerSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:InferenceSchedulerSummary'</a>,
--   <a>inferenceSchedulerSummary_status</a> - Indicates the status of the
--   inference scheduler.
--   
--   <a>$sel:dataUploadFrequency:InferenceSchedulerSummary'</a>,
--   <a>inferenceSchedulerSummary_dataUploadFrequency</a> - How often data
--   is uploaded to the source S3 bucket for the input data. This value is
--   the length of time between data uploads. For instance, if you select 5
--   minutes, Amazon Lookout for Equipment will upload the real-time data
--   to the source bucket once every 5 minutes. This frequency also
--   determines how often Amazon Lookout for Equipment starts a scheduled
--   inference on your data. In this example, it starts once every 5
--   minutes.
--   
--   <a>$sel:dataDelayOffsetInMinutes:InferenceSchedulerSummary'</a>,
--   <a>inferenceSchedulerSummary_dataDelayOffsetInMinutes</a> - A period
--   of time (in minutes) by which inference on the data is delayed after
--   the data starts. For instance, if an offset delay time of five minutes
--   was selected, inference will not begin on the data until the first
--   data measurement after the five minute mark. For example, if five
--   minutes is selected, the inference scheduler will wake up at the
--   configured frequency with the additional five minute delay time to
--   check the customer S3 bucket. The customer can upload data at the same
--   frequency and they don't need to stop and restart the scheduler when
--   uploading new data.
--   
--   <a>$sel:modelArn:InferenceSchedulerSummary'</a>,
--   <a>inferenceSchedulerSummary_modelArn</a> - The Amazon Resource Name
--   (ARN) of the ML model used by the inference scheduler.
--   
--   <a>$sel:modelName:InferenceSchedulerSummary'</a>,
--   <a>inferenceSchedulerSummary_modelName</a> - The name of the ML model
--   used for the inference scheduler.
--   
--   <a>$sel:inferenceSchedulerArn:InferenceSchedulerSummary'</a>,
--   <a>inferenceSchedulerSummary_inferenceSchedulerArn</a> - The Amazon
--   Resource Name (ARN) of the inference scheduler.
--   
--   <a>$sel:inferenceSchedulerName:InferenceSchedulerSummary'</a>,
--   <a>inferenceSchedulerSummary_inferenceSchedulerName</a> - The name of
--   the inference scheduler.
newInferenceSchedulerSummary :: InferenceSchedulerSummary

-- | Indicates the status of the inference scheduler.
inferenceSchedulerSummary_status :: Lens' InferenceSchedulerSummary (Maybe InferenceSchedulerStatus)

-- | How often data is uploaded to the source S3 bucket for the input data.
--   This value is the length of time between data uploads. For instance,
--   if you select 5 minutes, Amazon Lookout for Equipment will upload the
--   real-time data to the source bucket once every 5 minutes. This
--   frequency also determines how often Amazon Lookout for Equipment
--   starts a scheduled inference on your data. In this example, it starts
--   once every 5 minutes.
inferenceSchedulerSummary_dataUploadFrequency :: Lens' InferenceSchedulerSummary (Maybe DataUploadFrequency)

-- | A period of time (in minutes) by which inference on the data is
--   delayed after the data starts. For instance, if an offset delay time
--   of five minutes was selected, inference will not begin on the data
--   until the first data measurement after the five minute mark. For
--   example, if five minutes is selected, the inference scheduler will
--   wake up at the configured frequency with the additional five minute
--   delay time to check the customer S3 bucket. The customer can upload
--   data at the same frequency and they don't need to stop and restart the
--   scheduler when uploading new data.
inferenceSchedulerSummary_dataDelayOffsetInMinutes :: Lens' InferenceSchedulerSummary (Maybe Natural)

-- | The Amazon Resource Name (ARN) of the ML model used by the inference
--   scheduler.
inferenceSchedulerSummary_modelArn :: Lens' InferenceSchedulerSummary (Maybe Text)

-- | The name of the ML model used for the inference scheduler.
inferenceSchedulerSummary_modelName :: Lens' InferenceSchedulerSummary (Maybe Text)

-- | The Amazon Resource Name (ARN) of the inference scheduler.
inferenceSchedulerSummary_inferenceSchedulerArn :: Lens' InferenceSchedulerSummary (Maybe Text)

-- | The name of the inference scheduler.
inferenceSchedulerSummary_inferenceSchedulerName :: Lens' InferenceSchedulerSummary (Maybe Text)

-- | Specifies configuration information for the input data for the data
--   ingestion job, including input data S3 location.
--   
--   <i>See:</i> <a>newIngestionInputConfiguration</a> smart constructor.
data IngestionInputConfiguration
IngestionInputConfiguration' :: IngestionS3InputConfiguration -> IngestionInputConfiguration

-- | The location information for the S3 bucket used for input data for the
--   data ingestion.
[$sel:s3InputConfiguration:IngestionInputConfiguration'] :: IngestionInputConfiguration -> IngestionS3InputConfiguration

-- | Create a value of <a>IngestionInputConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3InputConfiguration:IngestionInputConfiguration'</a>,
--   <a>ingestionInputConfiguration_s3InputConfiguration</a> - The location
--   information for the S3 bucket used for input data for the data
--   ingestion.
newIngestionInputConfiguration :: IngestionS3InputConfiguration -> IngestionInputConfiguration

-- | The location information for the S3 bucket used for input data for the
--   data ingestion.
ingestionInputConfiguration_s3InputConfiguration :: Lens' IngestionInputConfiguration IngestionS3InputConfiguration

-- | Specifies S3 configuration information for the input data for the data
--   ingestion job.
--   
--   <i>See:</i> <a>newIngestionS3InputConfiguration</a> smart constructor.
data IngestionS3InputConfiguration
IngestionS3InputConfiguration' :: Maybe Text -> Text -> IngestionS3InputConfiguration

-- | The prefix for the S3 location being used for the input data for the
--   data ingestion.
[$sel:prefix:IngestionS3InputConfiguration'] :: IngestionS3InputConfiguration -> Maybe Text

-- | The name of the S3 bucket used for the input data for the data
--   ingestion.
[$sel:bucket:IngestionS3InputConfiguration'] :: IngestionS3InputConfiguration -> Text

-- | Create a value of <a>IngestionS3InputConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:prefix:IngestionS3InputConfiguration'</a>,
--   <a>ingestionS3InputConfiguration_prefix</a> - The prefix for the S3
--   location being used for the input data for the data ingestion.
--   
--   <a>$sel:bucket:IngestionS3InputConfiguration'</a>,
--   <a>ingestionS3InputConfiguration_bucket</a> - The name of the S3
--   bucket used for the input data for the data ingestion.
newIngestionS3InputConfiguration :: Text -> IngestionS3InputConfiguration

-- | The prefix for the S3 location being used for the input data for the
--   data ingestion.
ingestionS3InputConfiguration_prefix :: Lens' IngestionS3InputConfiguration (Maybe Text)

-- | The name of the S3 bucket used for the input data for the data
--   ingestion.
ingestionS3InputConfiguration_bucket :: Lens' IngestionS3InputConfiguration Text

-- | Contains the configuration information for the S3 location being used
--   to hold label data.
--   
--   <i>See:</i> <a>newLabelsInputConfiguration</a> smart constructor.
data LabelsInputConfiguration
LabelsInputConfiguration' :: LabelsS3InputConfiguration -> LabelsInputConfiguration

-- | Contains location information for the S3 location being used for label
--   data.
[$sel:s3InputConfiguration:LabelsInputConfiguration'] :: LabelsInputConfiguration -> LabelsS3InputConfiguration

-- | Create a value of <a>LabelsInputConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3InputConfiguration:LabelsInputConfiguration'</a>,
--   <a>labelsInputConfiguration_s3InputConfiguration</a> - Contains
--   location information for the S3 location being used for label data.
newLabelsInputConfiguration :: LabelsS3InputConfiguration -> LabelsInputConfiguration

-- | Contains location information for the S3 location being used for label
--   data.
labelsInputConfiguration_s3InputConfiguration :: Lens' LabelsInputConfiguration LabelsS3InputConfiguration

-- | The location information (prefix and bucket name) for the s3 location
--   being used for label data.
--   
--   <i>See:</i> <a>newLabelsS3InputConfiguration</a> smart constructor.
data LabelsS3InputConfiguration
LabelsS3InputConfiguration' :: Maybe Text -> Text -> LabelsS3InputConfiguration

-- | The prefix for the S3 bucket used for the label data.
[$sel:prefix:LabelsS3InputConfiguration'] :: LabelsS3InputConfiguration -> Maybe Text

-- | The name of the S3 bucket holding the label data.
[$sel:bucket:LabelsS3InputConfiguration'] :: LabelsS3InputConfiguration -> Text

-- | Create a value of <a>LabelsS3InputConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:prefix:LabelsS3InputConfiguration'</a>,
--   <a>labelsS3InputConfiguration_prefix</a> - The prefix for the S3
--   bucket used for the label data.
--   
--   <a>$sel:bucket:LabelsS3InputConfiguration'</a>,
--   <a>labelsS3InputConfiguration_bucket</a> - The name of the S3 bucket
--   holding the label data.
newLabelsS3InputConfiguration :: Text -> LabelsS3InputConfiguration

-- | The prefix for the S3 bucket used for the label data.
labelsS3InputConfiguration_prefix :: Lens' LabelsS3InputConfiguration (Maybe Text)

-- | The name of the S3 bucket holding the label data.
labelsS3InputConfiguration_bucket :: Lens' LabelsS3InputConfiguration Text

-- | Provides information about the specified ML model, including dataset
--   and model names and ARNs, as well as status.
--   
--   <i>See:</i> <a>newModelSummary</a> smart constructor.
data ModelSummary
ModelSummary' :: Maybe ModelStatus -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> ModelSummary

-- | Indicates the status of the ML model.
[$sel:status:ModelSummary'] :: ModelSummary -> Maybe ModelStatus

-- | The Amazon Resource Name (ARN) of the dataset used to create the
--   model.
[$sel:datasetArn:ModelSummary'] :: ModelSummary -> Maybe Text

-- | The Amazon Resource Name (ARN) of the ML model.
[$sel:modelArn:ModelSummary'] :: ModelSummary -> Maybe Text

-- | The time at which the specific model was created.
[$sel:createdAt:ModelSummary'] :: ModelSummary -> Maybe POSIX

-- | The name of the ML model.
[$sel:modelName:ModelSummary'] :: ModelSummary -> Maybe Text

-- | The name of the dataset being used for the ML model.
[$sel:datasetName:ModelSummary'] :: ModelSummary -> Maybe Text

-- | Create a value of <a>ModelSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ModelSummary'</a>, <a>modelSummary_status</a> -
--   Indicates the status of the ML model.
--   
--   <a>$sel:datasetArn:ModelSummary'</a>, <a>modelSummary_datasetArn</a> -
--   The Amazon Resource Name (ARN) of the dataset used to create the
--   model.
--   
--   <a>$sel:modelArn:ModelSummary'</a>, <a>modelSummary_modelArn</a> - The
--   Amazon Resource Name (ARN) of the ML model.
--   
--   <a>$sel:createdAt:ModelSummary'</a>, <a>modelSummary_createdAt</a> -
--   The time at which the specific model was created.
--   
--   <a>$sel:modelName:ModelSummary'</a>, <a>modelSummary_modelName</a> -
--   The name of the ML model.
--   
--   <a>$sel:datasetName:ModelSummary'</a>, <a>modelSummary_datasetName</a>
--   - The name of the dataset being used for the ML model.
newModelSummary :: ModelSummary

-- | Indicates the status of the ML model.
modelSummary_status :: Lens' ModelSummary (Maybe ModelStatus)

-- | The Amazon Resource Name (ARN) of the dataset used to create the
--   model.
modelSummary_datasetArn :: Lens' ModelSummary (Maybe Text)

-- | The Amazon Resource Name (ARN) of the ML model.
modelSummary_modelArn :: Lens' ModelSummary (Maybe Text)

-- | The time at which the specific model was created.
modelSummary_createdAt :: Lens' ModelSummary (Maybe UTCTime)

-- | The name of the ML model.
modelSummary_modelName :: Lens' ModelSummary (Maybe Text)

-- | The name of the dataset being used for the ML model.
modelSummary_datasetName :: Lens' ModelSummary (Maybe Text)

-- | Contains information about an S3 bucket.
--   
--   <i>See:</i> <a>newS3Object</a> smart constructor.
data S3Object
S3Object' :: Text -> Text -> S3Object

-- | The name of the specific S3 bucket.
[$sel:bucket:S3Object'] :: S3Object -> Text

-- | The AWS Key Management Service (AWS KMS) key being used to encrypt the
--   S3 object. Without this key, data in the bucket is not accessible.
[$sel:key:S3Object'] :: S3Object -> Text

-- | Create a value of <a>S3Object</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bucket:S3Object'</a>, <a>s3Object_bucket</a> - The name of the
--   specific S3 bucket.
--   
--   <a>$sel:key:S3Object'</a>, <a>s3Object_key</a> - The AWS Key
--   Management Service (AWS KMS) key being used to encrypt the S3 object.
--   Without this key, data in the bucket is not accessible.
newS3Object :: Text -> Text -> S3Object

-- | The name of the specific S3 bucket.
s3Object_bucket :: Lens' S3Object Text

-- | The AWS Key Management Service (AWS KMS) key being used to encrypt the
--   S3 object. Without this key, data in the bucket is not accessible.
s3Object_key :: Lens' S3Object Text

-- | A tag is a key-value pair that can be added to a resource as metadata.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | The key for the specified tag.
[$sel:key:Tag'] :: Tag -> Text

-- | The value for the specified tag.
[$sel:value:Tag'] :: Tag -> Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The key for the specified tag.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The value for the specified
--   tag.
newTag :: Text -> Text -> Tag

-- | The key for the specified tag.
tag_key :: Lens' Tag Text

-- | The value for the specified tag.
tag_value :: Lens' Tag Text


-- | Associates a given tag to a resource in your account. A tag is a
--   key-value pair which can be added to an Amazon Lookout for Equipment
--   resource as metadata. Tags can be used for organizing your resources
--   as well as helping you to search and filter by tag. Multiple tags can
--   be added to a resource, either when you create it, or later. Up to 50
--   tags can be associated with each resource.
module Network.AWS.LookoutEquipment.TagResource

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> [Tag] -> TagResource

-- | The Amazon Resource Name (ARN) of the specific resource to which the
--   tag should be associated.
[$sel:resourceArn:TagResource'] :: TagResource -> Text

-- | The tag or tags to be associated with a specific resource. Both the
--   tag key and value are specified.
[$sel:tags:TagResource'] :: TagResource -> [Tag]

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The Amazon Resource Name (ARN) of the specific resource to which the
--   tag should be associated.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - The tag or
--   tags to be associated with a specific resource. Both the tag key and
--   value are specified.
newTagResource :: Text -> TagResource

-- | The Amazon Resource Name (ARN) of the specific resource to which the
--   tag should be associated.
tagResource_resourceArn :: Lens' TagResource Text

-- | The tag or tags to be associated with a specific resource. Both the
--   tag key and value are specified.
tagResource_tags :: Lens' TagResource [Tag]

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:TagResourceResponse'] :: TagResourceResponse -> Int

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int
instance GHC.Generics.Generic Network.AWS.LookoutEquipment.TagResource.TagResource
instance GHC.Show.Show Network.AWS.LookoutEquipment.TagResource.TagResource
instance GHC.Read.Read Network.AWS.LookoutEquipment.TagResource.TagResource
instance GHC.Classes.Eq Network.AWS.LookoutEquipment.TagResource.TagResource
instance GHC.Generics.Generic Network.AWS.LookoutEquipment.TagResource.TagResourceResponse
instance GHC.Show.Show Network.AWS.LookoutEquipment.TagResource.TagResourceResponse
instance GHC.Read.Read Network.AWS.LookoutEquipment.TagResource.TagResourceResponse
instance GHC.Classes.Eq Network.AWS.LookoutEquipment.TagResource.TagResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LookoutEquipment.TagResource.TagResource
instance Control.DeepSeq.NFData Network.AWS.LookoutEquipment.TagResource.TagResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.LookoutEquipment.TagResource.TagResource
instance Control.DeepSeq.NFData Network.AWS.LookoutEquipment.TagResource.TagResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LookoutEquipment.TagResource.TagResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LookoutEquipment.TagResource.TagResource
instance Network.AWS.Data.Path.ToPath Network.AWS.LookoutEquipment.TagResource.TagResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.LookoutEquipment.TagResource.TagResource


-- | Stops an inference scheduler.
module Network.AWS.LookoutEquipment.StopInferenceScheduler

-- | <i>See:</i> <a>newStopInferenceScheduler</a> smart constructor.
data StopInferenceScheduler
StopInferenceScheduler' :: Text -> StopInferenceScheduler

-- | The name of the inference scheduler to be stopped.
[$sel:inferenceSchedulerName:StopInferenceScheduler'] :: StopInferenceScheduler -> Text

-- | Create a value of <a>StopInferenceScheduler</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inferenceSchedulerName:StopInferenceScheduler'</a>,
--   <a>stopInferenceScheduler_inferenceSchedulerName</a> - The name of the
--   inference scheduler to be stopped.
newStopInferenceScheduler :: Text -> StopInferenceScheduler

-- | The name of the inference scheduler to be stopped.
stopInferenceScheduler_inferenceSchedulerName :: Lens' StopInferenceScheduler Text

-- | <i>See:</i> <a>newStopInferenceSchedulerResponse</a> smart
--   constructor.
data StopInferenceSchedulerResponse
StopInferenceSchedulerResponse' :: Maybe InferenceSchedulerStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> StopInferenceSchedulerResponse

-- | Indicates the status of the inference scheduler.
[$sel:status:StopInferenceSchedulerResponse'] :: StopInferenceSchedulerResponse -> Maybe InferenceSchedulerStatus

-- | The Amazon Resource Name (ARN) of the ML model used by the inference
--   scheduler being stopped.
[$sel:modelArn:StopInferenceSchedulerResponse'] :: StopInferenceSchedulerResponse -> Maybe Text

-- | The name of the ML model used by the inference scheduler being
--   stopped.
[$sel:modelName:StopInferenceSchedulerResponse'] :: StopInferenceSchedulerResponse -> Maybe Text

-- | The Amazon Resource Name (ARN) of the inference schedule being
--   stopped.
[$sel:inferenceSchedulerArn:StopInferenceSchedulerResponse'] :: StopInferenceSchedulerResponse -> Maybe Text

-- | The name of the inference scheduler being stopped.
[$sel:inferenceSchedulerName:StopInferenceSchedulerResponse'] :: StopInferenceSchedulerResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:StopInferenceSchedulerResponse'] :: StopInferenceSchedulerResponse -> Int

-- | Create a value of <a>StopInferenceSchedulerResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:StopInferenceSchedulerResponse'</a>,
--   <a>stopInferenceSchedulerResponse_status</a> - Indicates the status of
--   the inference scheduler.
--   
--   <a>$sel:modelArn:StopInferenceSchedulerResponse'</a>,
--   <a>stopInferenceSchedulerResponse_modelArn</a> - The Amazon Resource
--   Name (ARN) of the ML model used by the inference scheduler being
--   stopped.
--   
--   <a>$sel:modelName:StopInferenceSchedulerResponse'</a>,
--   <a>stopInferenceSchedulerResponse_modelName</a> - The name of the ML
--   model used by the inference scheduler being stopped.
--   
--   <a>$sel:inferenceSchedulerArn:StopInferenceSchedulerResponse'</a>,
--   <a>stopInferenceSchedulerResponse_inferenceSchedulerArn</a> - The
--   Amazon Resource Name (ARN) of the inference schedule being stopped.
--   
--   <a>$sel:inferenceSchedulerName:StopInferenceScheduler'</a>,
--   <a>stopInferenceSchedulerResponse_inferenceSchedulerName</a> - The
--   name of the inference scheduler being stopped.
--   
--   <a>$sel:httpStatus:StopInferenceSchedulerResponse'</a>,
--   <a>stopInferenceSchedulerResponse_httpStatus</a> - The response's http
--   status code.
newStopInferenceSchedulerResponse :: Int -> StopInferenceSchedulerResponse

-- | Indicates the status of the inference scheduler.
stopInferenceSchedulerResponse_status :: Lens' StopInferenceSchedulerResponse (Maybe InferenceSchedulerStatus)

-- | The Amazon Resource Name (ARN) of the ML model used by the inference
--   scheduler being stopped.
stopInferenceSchedulerResponse_modelArn :: Lens' StopInferenceSchedulerResponse (Maybe Text)

-- | The name of the ML model used by the inference scheduler being
--   stopped.
stopInferenceSchedulerResponse_modelName :: Lens' StopInferenceSchedulerResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the inference schedule being
--   stopped.
stopInferenceSchedulerResponse_inferenceSchedulerArn :: Lens' StopInferenceSchedulerResponse (Maybe Text)

-- | The name of the inference scheduler being stopped.
stopInferenceSchedulerResponse_inferenceSchedulerName :: Lens' StopInferenceSchedulerResponse (Maybe Text)

-- | The response's http status code.
stopInferenceSchedulerResponse_httpStatus :: Lens' StopInferenceSchedulerResponse Int
instance GHC.Generics.Generic Network.AWS.LookoutEquipment.StopInferenceScheduler.StopInferenceScheduler
instance GHC.Show.Show Network.AWS.LookoutEquipment.StopInferenceScheduler.StopInferenceScheduler
instance GHC.Read.Read Network.AWS.LookoutEquipment.StopInferenceScheduler.StopInferenceScheduler
instance GHC.Classes.Eq Network.AWS.LookoutEquipment.StopInferenceScheduler.StopInferenceScheduler
instance GHC.Generics.Generic Network.AWS.LookoutEquipment.StopInferenceScheduler.StopInferenceSchedulerResponse
instance GHC.Show.Show Network.AWS.LookoutEquipment.StopInferenceScheduler.StopInferenceSchedulerResponse
instance GHC.Read.Read Network.AWS.LookoutEquipment.StopInferenceScheduler.StopInferenceSchedulerResponse
instance GHC.Classes.Eq Network.AWS.LookoutEquipment.StopInferenceScheduler.StopInferenceSchedulerResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LookoutEquipment.StopInferenceScheduler.StopInferenceScheduler
instance Control.DeepSeq.NFData Network.AWS.LookoutEquipment.StopInferenceScheduler.StopInferenceSchedulerResponse
instance Data.Hashable.Class.Hashable Network.AWS.LookoutEquipment.StopInferenceScheduler.StopInferenceScheduler
instance Control.DeepSeq.NFData Network.AWS.LookoutEquipment.StopInferenceScheduler.StopInferenceScheduler
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LookoutEquipment.StopInferenceScheduler.StopInferenceScheduler
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LookoutEquipment.StopInferenceScheduler.StopInferenceScheduler
instance Network.AWS.Data.Path.ToPath Network.AWS.LookoutEquipment.StopInferenceScheduler.StopInferenceScheduler
instance Network.AWS.Data.Query.ToQuery Network.AWS.LookoutEquipment.StopInferenceScheduler.StopInferenceScheduler


-- | Starts an inference scheduler.
module Network.AWS.LookoutEquipment.StartInferenceScheduler

-- | <i>See:</i> <a>newStartInferenceScheduler</a> smart constructor.
data StartInferenceScheduler
StartInferenceScheduler' :: Text -> StartInferenceScheduler

-- | The name of the inference scheduler to be started.
[$sel:inferenceSchedulerName:StartInferenceScheduler'] :: StartInferenceScheduler -> Text

-- | Create a value of <a>StartInferenceScheduler</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inferenceSchedulerName:StartInferenceScheduler'</a>,
--   <a>startInferenceScheduler_inferenceSchedulerName</a> - The name of
--   the inference scheduler to be started.
newStartInferenceScheduler :: Text -> StartInferenceScheduler

-- | The name of the inference scheduler to be started.
startInferenceScheduler_inferenceSchedulerName :: Lens' StartInferenceScheduler Text

-- | <i>See:</i> <a>newStartInferenceSchedulerResponse</a> smart
--   constructor.
data StartInferenceSchedulerResponse
StartInferenceSchedulerResponse' :: Maybe InferenceSchedulerStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> StartInferenceSchedulerResponse

-- | Indicates the status of the inference scheduler.
[$sel:status:StartInferenceSchedulerResponse'] :: StartInferenceSchedulerResponse -> Maybe InferenceSchedulerStatus

-- | The Amazon Resource Name (ARN) of the ML model being used by the
--   inference scheduler.
[$sel:modelArn:StartInferenceSchedulerResponse'] :: StartInferenceSchedulerResponse -> Maybe Text

-- | The name of the ML model being used by the inference scheduler.
[$sel:modelName:StartInferenceSchedulerResponse'] :: StartInferenceSchedulerResponse -> Maybe Text

-- | The Amazon Resource Name (ARN) of the inference scheduler being
--   started.
[$sel:inferenceSchedulerArn:StartInferenceSchedulerResponse'] :: StartInferenceSchedulerResponse -> Maybe Text

-- | The name of the inference scheduler being started.
[$sel:inferenceSchedulerName:StartInferenceSchedulerResponse'] :: StartInferenceSchedulerResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:StartInferenceSchedulerResponse'] :: StartInferenceSchedulerResponse -> Int

-- | Create a value of <a>StartInferenceSchedulerResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:StartInferenceSchedulerResponse'</a>,
--   <a>startInferenceSchedulerResponse_status</a> - Indicates the status
--   of the inference scheduler.
--   
--   <a>$sel:modelArn:StartInferenceSchedulerResponse'</a>,
--   <a>startInferenceSchedulerResponse_modelArn</a> - The Amazon Resource
--   Name (ARN) of the ML model being used by the inference scheduler.
--   
--   <a>$sel:modelName:StartInferenceSchedulerResponse'</a>,
--   <a>startInferenceSchedulerResponse_modelName</a> - The name of the ML
--   model being used by the inference scheduler.
--   
--   <a>$sel:inferenceSchedulerArn:StartInferenceSchedulerResponse'</a>,
--   <a>startInferenceSchedulerResponse_inferenceSchedulerArn</a> - The
--   Amazon Resource Name (ARN) of the inference scheduler being started.
--   
--   <a>$sel:inferenceSchedulerName:StartInferenceScheduler'</a>,
--   <a>startInferenceSchedulerResponse_inferenceSchedulerName</a> - The
--   name of the inference scheduler being started.
--   
--   <a>$sel:httpStatus:StartInferenceSchedulerResponse'</a>,
--   <a>startInferenceSchedulerResponse_httpStatus</a> - The response's
--   http status code.
newStartInferenceSchedulerResponse :: Int -> StartInferenceSchedulerResponse

-- | Indicates the status of the inference scheduler.
startInferenceSchedulerResponse_status :: Lens' StartInferenceSchedulerResponse (Maybe InferenceSchedulerStatus)

-- | The Amazon Resource Name (ARN) of the ML model being used by the
--   inference scheduler.
startInferenceSchedulerResponse_modelArn :: Lens' StartInferenceSchedulerResponse (Maybe Text)

-- | The name of the ML model being used by the inference scheduler.
startInferenceSchedulerResponse_modelName :: Lens' StartInferenceSchedulerResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the inference scheduler being
--   started.
startInferenceSchedulerResponse_inferenceSchedulerArn :: Lens' StartInferenceSchedulerResponse (Maybe Text)

-- | The name of the inference scheduler being started.
startInferenceSchedulerResponse_inferenceSchedulerName :: Lens' StartInferenceSchedulerResponse (Maybe Text)

-- | The response's http status code.
startInferenceSchedulerResponse_httpStatus :: Lens' StartInferenceSchedulerResponse Int
instance GHC.Generics.Generic Network.AWS.LookoutEquipment.StartInferenceScheduler.StartInferenceScheduler
instance GHC.Show.Show Network.AWS.LookoutEquipment.StartInferenceScheduler.StartInferenceScheduler
instance GHC.Read.Read Network.AWS.LookoutEquipment.StartInferenceScheduler.StartInferenceScheduler
instance GHC.Classes.Eq Network.AWS.LookoutEquipment.StartInferenceScheduler.StartInferenceScheduler
instance GHC.Generics.Generic Network.AWS.LookoutEquipment.StartInferenceScheduler.StartInferenceSchedulerResponse
instance GHC.Show.Show Network.AWS.LookoutEquipment.StartInferenceScheduler.StartInferenceSchedulerResponse
instance GHC.Read.Read Network.AWS.LookoutEquipment.StartInferenceScheduler.StartInferenceSchedulerResponse
instance GHC.Classes.Eq Network.AWS.LookoutEquipment.StartInferenceScheduler.StartInferenceSchedulerResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LookoutEquipment.StartInferenceScheduler.StartInferenceScheduler
instance Control.DeepSeq.NFData Network.AWS.LookoutEquipment.StartInferenceScheduler.StartInferenceSchedulerResponse
instance Data.Hashable.Class.Hashable Network.AWS.LookoutEquipment.StartInferenceScheduler.StartInferenceScheduler
instance Control.DeepSeq.NFData Network.AWS.LookoutEquipment.StartInferenceScheduler.StartInferenceScheduler
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LookoutEquipment.StartInferenceScheduler.StartInferenceScheduler
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LookoutEquipment.StartInferenceScheduler.StartInferenceScheduler
instance Network.AWS.Data.Path.ToPath Network.AWS.LookoutEquipment.StartInferenceScheduler.StartInferenceScheduler
instance Network.AWS.Data.Query.ToQuery Network.AWS.LookoutEquipment.StartInferenceScheduler.StartInferenceScheduler


-- | Starts a data ingestion job. Amazon Lookout for Equipment returns the
--   job status.
module Network.AWS.LookoutEquipment.StartDataIngestionJob

-- | <i>See:</i> <a>newStartDataIngestionJob</a> smart constructor.
data StartDataIngestionJob
StartDataIngestionJob' :: Text -> IngestionInputConfiguration -> Text -> Text -> StartDataIngestionJob

-- | The name of the dataset being used by the data ingestion job.
[$sel:datasetName:StartDataIngestionJob'] :: StartDataIngestionJob -> Text

-- | Specifies information for the input data for the data ingestion job,
--   including dataset S3 location.
[$sel:ingestionInputConfiguration:StartDataIngestionJob'] :: StartDataIngestionJob -> IngestionInputConfiguration

-- | The Amazon Resource Name (ARN) of a role with permission to access the
--   data source for the data ingestion job.
[$sel:roleArn:StartDataIngestionJob'] :: StartDataIngestionJob -> Text

-- | A unique identifier for the request. If you do not set the client
--   request token, Amazon Lookout for Equipment generates one.
[$sel:clientToken:StartDataIngestionJob'] :: StartDataIngestionJob -> Text

-- | Create a value of <a>StartDataIngestionJob</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:datasetName:StartDataIngestionJob'</a>,
--   <a>startDataIngestionJob_datasetName</a> - The name of the dataset
--   being used by the data ingestion job.
--   
--   <a>$sel:ingestionInputConfiguration:StartDataIngestionJob'</a>,
--   <a>startDataIngestionJob_ingestionInputConfiguration</a> - Specifies
--   information for the input data for the data ingestion job, including
--   dataset S3 location.
--   
--   <a>$sel:roleArn:StartDataIngestionJob'</a>,
--   <a>startDataIngestionJob_roleArn</a> - The Amazon Resource Name (ARN)
--   of a role with permission to access the data source for the data
--   ingestion job.
--   
--   <a>$sel:clientToken:StartDataIngestionJob'</a>,
--   <a>startDataIngestionJob_clientToken</a> - A unique identifier for the
--   request. If you do not set the client request token, Amazon Lookout
--   for Equipment generates one.
newStartDataIngestionJob :: Text -> IngestionInputConfiguration -> Text -> Text -> StartDataIngestionJob

-- | The name of the dataset being used by the data ingestion job.
startDataIngestionJob_datasetName :: Lens' StartDataIngestionJob Text

-- | Specifies information for the input data for the data ingestion job,
--   including dataset S3 location.
startDataIngestionJob_ingestionInputConfiguration :: Lens' StartDataIngestionJob IngestionInputConfiguration

-- | The Amazon Resource Name (ARN) of a role with permission to access the
--   data source for the data ingestion job.
startDataIngestionJob_roleArn :: Lens' StartDataIngestionJob Text

-- | A unique identifier for the request. If you do not set the client
--   request token, Amazon Lookout for Equipment generates one.
startDataIngestionJob_clientToken :: Lens' StartDataIngestionJob Text

-- | <i>See:</i> <a>newStartDataIngestionJobResponse</a> smart constructor.
data StartDataIngestionJobResponse
StartDataIngestionJobResponse' :: Maybe IngestionJobStatus -> Maybe Text -> Int -> StartDataIngestionJobResponse

-- | Indicates the status of the <tt>StartDataIngestionJob</tt> operation.
[$sel:status:StartDataIngestionJobResponse'] :: StartDataIngestionJobResponse -> Maybe IngestionJobStatus

-- | Indicates the job ID of the data ingestion job.
[$sel:jobId:StartDataIngestionJobResponse'] :: StartDataIngestionJobResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:StartDataIngestionJobResponse'] :: StartDataIngestionJobResponse -> Int

-- | Create a value of <a>StartDataIngestionJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:StartDataIngestionJobResponse'</a>,
--   <a>startDataIngestionJobResponse_status</a> - Indicates the status of
--   the <tt>StartDataIngestionJob</tt> operation.
--   
--   <a>$sel:jobId:StartDataIngestionJobResponse'</a>,
--   <a>startDataIngestionJobResponse_jobId</a> - Indicates the job ID of
--   the data ingestion job.
--   
--   <a>$sel:httpStatus:StartDataIngestionJobResponse'</a>,
--   <a>startDataIngestionJobResponse_httpStatus</a> - The response's http
--   status code.
newStartDataIngestionJobResponse :: Int -> StartDataIngestionJobResponse

-- | Indicates the status of the <tt>StartDataIngestionJob</tt> operation.
startDataIngestionJobResponse_status :: Lens' StartDataIngestionJobResponse (Maybe IngestionJobStatus)

-- | Indicates the job ID of the data ingestion job.
startDataIngestionJobResponse_jobId :: Lens' StartDataIngestionJobResponse (Maybe Text)

-- | The response's http status code.
startDataIngestionJobResponse_httpStatus :: Lens' StartDataIngestionJobResponse Int
instance GHC.Generics.Generic Network.AWS.LookoutEquipment.StartDataIngestionJob.StartDataIngestionJob
instance GHC.Show.Show Network.AWS.LookoutEquipment.StartDataIngestionJob.StartDataIngestionJob
instance GHC.Read.Read Network.AWS.LookoutEquipment.StartDataIngestionJob.StartDataIngestionJob
instance GHC.Classes.Eq Network.AWS.LookoutEquipment.StartDataIngestionJob.StartDataIngestionJob
instance GHC.Generics.Generic Network.AWS.LookoutEquipment.StartDataIngestionJob.StartDataIngestionJobResponse
instance GHC.Show.Show Network.AWS.LookoutEquipment.StartDataIngestionJob.StartDataIngestionJobResponse
instance GHC.Read.Read Network.AWS.LookoutEquipment.StartDataIngestionJob.StartDataIngestionJobResponse
instance GHC.Classes.Eq Network.AWS.LookoutEquipment.StartDataIngestionJob.StartDataIngestionJobResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LookoutEquipment.StartDataIngestionJob.StartDataIngestionJob
instance Control.DeepSeq.NFData Network.AWS.LookoutEquipment.StartDataIngestionJob.StartDataIngestionJobResponse
instance Data.Hashable.Class.Hashable Network.AWS.LookoutEquipment.StartDataIngestionJob.StartDataIngestionJob
instance Control.DeepSeq.NFData Network.AWS.LookoutEquipment.StartDataIngestionJob.StartDataIngestionJob
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LookoutEquipment.StartDataIngestionJob.StartDataIngestionJob
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LookoutEquipment.StartDataIngestionJob.StartDataIngestionJob
instance Network.AWS.Data.Path.ToPath Network.AWS.LookoutEquipment.StartDataIngestionJob.StartDataIngestionJob
instance Network.AWS.Data.Query.ToQuery Network.AWS.LookoutEquipment.StartDataIngestionJob.StartDataIngestionJob


-- | Lists all the tags for a specified resource, including key and value.
module Network.AWS.LookoutEquipment.ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | The Amazon Resource Name (ARN) of the resource (such as the dataset or
--   model) that is the focus of the <tt>ListTagsForResource</tt>
--   operation.
[$sel:resourceArn:ListTagsForResource'] :: ListTagsForResource -> Text

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The Amazon Resource Name
--   (ARN) of the resource (such as the dataset or model) that is the focus
--   of the <tt>ListTagsForResource</tt> operation.
newListTagsForResource :: Text -> ListTagsForResource

-- | The Amazon Resource Name (ARN) of the resource (such as the dataset or
--   model) that is the focus of the <tt>ListTagsForResource</tt>
--   operation.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe [Tag] -> Int -> ListTagsForResourceResponse

-- | Any tags associated with the resource.
[$sel:tags:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Maybe [Tag]

-- | The response's http status code.
[$sel:httpStatus:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Int

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - Any tags associated with the
--   resource.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | Any tags associated with the resource.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe [Tag])

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int
instance GHC.Generics.Generic Network.AWS.LookoutEquipment.ListTagsForResource.ListTagsForResource
instance GHC.Show.Show Network.AWS.LookoutEquipment.ListTagsForResource.ListTagsForResource
instance GHC.Read.Read Network.AWS.LookoutEquipment.ListTagsForResource.ListTagsForResource
instance GHC.Classes.Eq Network.AWS.LookoutEquipment.ListTagsForResource.ListTagsForResource
instance GHC.Generics.Generic Network.AWS.LookoutEquipment.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Show.Show Network.AWS.LookoutEquipment.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Read.Read Network.AWS.LookoutEquipment.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Classes.Eq Network.AWS.LookoutEquipment.ListTagsForResource.ListTagsForResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LookoutEquipment.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Network.AWS.LookoutEquipment.ListTagsForResource.ListTagsForResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.LookoutEquipment.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Network.AWS.LookoutEquipment.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LookoutEquipment.ListTagsForResource.ListTagsForResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LookoutEquipment.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Path.ToPath Network.AWS.LookoutEquipment.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.LookoutEquipment.ListTagsForResource.ListTagsForResource


-- | Generates a list of all models in the account, including model name
--   and ARN, dataset, and status.
module Network.AWS.LookoutEquipment.ListModels

-- | <i>See:</i> <a>newListModels</a> smart constructor.
data ListModels
ListModels' :: Maybe ModelStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> ListModels

-- | The status of the ML model.
[$sel:status:ListModels'] :: ListModels -> Maybe ModelStatus

-- | An opaque pagination token indicating where to continue the listing of
--   ML models.
[$sel:nextToken:ListModels'] :: ListModels -> Maybe Text

-- | The beginning of the name of the dataset of the ML models to be
--   listed.
[$sel:datasetNameBeginsWith:ListModels'] :: ListModels -> Maybe Text

-- | The beginning of the name of the ML models being listed.
[$sel:modelNameBeginsWith:ListModels'] :: ListModels -> Maybe Text

-- | Specifies the maximum number of ML models to list.
[$sel:maxResults:ListModels'] :: ListModels -> Maybe Natural

-- | Create a value of <a>ListModels</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ListModels'</a>, <a>listModels_status</a> - The status
--   of the ML model.
--   
--   <a>$sel:nextToken:ListModels'</a>, <a>listModels_nextToken</a> - An
--   opaque pagination token indicating where to continue the listing of ML
--   models.
--   
--   <a>$sel:datasetNameBeginsWith:ListModels'</a>,
--   <a>listModels_datasetNameBeginsWith</a> - The beginning of the name of
--   the dataset of the ML models to be listed.
--   
--   <a>$sel:modelNameBeginsWith:ListModels'</a>,
--   <a>listModels_modelNameBeginsWith</a> - The beginning of the name of
--   the ML models being listed.
--   
--   <a>$sel:maxResults:ListModels'</a>, <a>listModels_maxResults</a> -
--   Specifies the maximum number of ML models to list.
newListModels :: ListModels

-- | The status of the ML model.
listModels_status :: Lens' ListModels (Maybe ModelStatus)

-- | An opaque pagination token indicating where to continue the listing of
--   ML models.
listModels_nextToken :: Lens' ListModels (Maybe Text)

-- | The beginning of the name of the dataset of the ML models to be
--   listed.
listModels_datasetNameBeginsWith :: Lens' ListModels (Maybe Text)

-- | The beginning of the name of the ML models being listed.
listModels_modelNameBeginsWith :: Lens' ListModels (Maybe Text)

-- | Specifies the maximum number of ML models to list.
listModels_maxResults :: Lens' ListModels (Maybe Natural)

-- | <i>See:</i> <a>newListModelsResponse</a> smart constructor.
data ListModelsResponse
ListModelsResponse' :: Maybe Text -> Maybe [ModelSummary] -> Int -> ListModelsResponse

-- | An opaque pagination token indicating where to continue the listing of
--   ML models.
[$sel:nextToken:ListModelsResponse'] :: ListModelsResponse -> Maybe Text

-- | Provides information on the specified model, including created time,
--   model and dataset ARNs, and status.
[$sel:modelSummaries:ListModelsResponse'] :: ListModelsResponse -> Maybe [ModelSummary]

-- | The response's http status code.
[$sel:httpStatus:ListModelsResponse'] :: ListModelsResponse -> Int

-- | Create a value of <a>ListModelsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListModels'</a>, <a>listModelsResponse_nextToken</a>
--   - An opaque pagination token indicating where to continue the listing
--   of ML models.
--   
--   <a>$sel:modelSummaries:ListModelsResponse'</a>,
--   <a>listModelsResponse_modelSummaries</a> - Provides information on the
--   specified model, including created time, model and dataset ARNs, and
--   status.
--   
--   <a>$sel:httpStatus:ListModelsResponse'</a>,
--   <a>listModelsResponse_httpStatus</a> - The response's http status
--   code.
newListModelsResponse :: Int -> ListModelsResponse

-- | An opaque pagination token indicating where to continue the listing of
--   ML models.
listModelsResponse_nextToken :: Lens' ListModelsResponse (Maybe Text)

-- | Provides information on the specified model, including created time,
--   model and dataset ARNs, and status.
listModelsResponse_modelSummaries :: Lens' ListModelsResponse (Maybe [ModelSummary])

-- | The response's http status code.
listModelsResponse_httpStatus :: Lens' ListModelsResponse Int
instance GHC.Generics.Generic Network.AWS.LookoutEquipment.ListModels.ListModels
instance GHC.Show.Show Network.AWS.LookoutEquipment.ListModels.ListModels
instance GHC.Read.Read Network.AWS.LookoutEquipment.ListModels.ListModels
instance GHC.Classes.Eq Network.AWS.LookoutEquipment.ListModels.ListModels
instance GHC.Generics.Generic Network.AWS.LookoutEquipment.ListModels.ListModelsResponse
instance GHC.Show.Show Network.AWS.LookoutEquipment.ListModels.ListModelsResponse
instance GHC.Read.Read Network.AWS.LookoutEquipment.ListModels.ListModelsResponse
instance GHC.Classes.Eq Network.AWS.LookoutEquipment.ListModels.ListModelsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LookoutEquipment.ListModels.ListModels
instance Control.DeepSeq.NFData Network.AWS.LookoutEquipment.ListModels.ListModelsResponse
instance Data.Hashable.Class.Hashable Network.AWS.LookoutEquipment.ListModels.ListModels
instance Control.DeepSeq.NFData Network.AWS.LookoutEquipment.ListModels.ListModels
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LookoutEquipment.ListModels.ListModels
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LookoutEquipment.ListModels.ListModels
instance Network.AWS.Data.Path.ToPath Network.AWS.LookoutEquipment.ListModels.ListModels
instance Network.AWS.Data.Query.ToQuery Network.AWS.LookoutEquipment.ListModels.ListModels


-- | Retrieves a list of all inference schedulers currently available for
--   your account.
module Network.AWS.LookoutEquipment.ListInferenceSchedulers

-- | <i>See:</i> <a>newListInferenceSchedulers</a> smart constructor.
data ListInferenceSchedulers
ListInferenceSchedulers' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> ListInferenceSchedulers

-- | The name of the ML model used by the inference scheduler to be listed.
[$sel:modelName:ListInferenceSchedulers'] :: ListInferenceSchedulers -> Maybe Text

-- | An opaque pagination token indicating where to continue the listing of
--   inference schedulers.
[$sel:nextToken:ListInferenceSchedulers'] :: ListInferenceSchedulers -> Maybe Text

-- | The beginning of the name of the inference schedulers to be listed.
[$sel:inferenceSchedulerNameBeginsWith:ListInferenceSchedulers'] :: ListInferenceSchedulers -> Maybe Text

-- | Specifies the maximum number of inference schedulers to list.
[$sel:maxResults:ListInferenceSchedulers'] :: ListInferenceSchedulers -> Maybe Natural

-- | Create a value of <a>ListInferenceSchedulers</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modelName:ListInferenceSchedulers'</a>,
--   <a>listInferenceSchedulers_modelName</a> - The name of the ML model
--   used by the inference scheduler to be listed.
--   
--   <a>$sel:nextToken:ListInferenceSchedulers'</a>,
--   <a>listInferenceSchedulers_nextToken</a> - An opaque pagination token
--   indicating where to continue the listing of inference schedulers.
--   
--   <a>$sel:inferenceSchedulerNameBeginsWith:ListInferenceSchedulers'</a>,
--   <a>listInferenceSchedulers_inferenceSchedulerNameBeginsWith</a> - The
--   beginning of the name of the inference schedulers to be listed.
--   
--   <a>$sel:maxResults:ListInferenceSchedulers'</a>,
--   <a>listInferenceSchedulers_maxResults</a> - Specifies the maximum
--   number of inference schedulers to list.
newListInferenceSchedulers :: ListInferenceSchedulers

-- | The name of the ML model used by the inference scheduler to be listed.
listInferenceSchedulers_modelName :: Lens' ListInferenceSchedulers (Maybe Text)

-- | An opaque pagination token indicating where to continue the listing of
--   inference schedulers.
listInferenceSchedulers_nextToken :: Lens' ListInferenceSchedulers (Maybe Text)

-- | The beginning of the name of the inference schedulers to be listed.
listInferenceSchedulers_inferenceSchedulerNameBeginsWith :: Lens' ListInferenceSchedulers (Maybe Text)

-- | Specifies the maximum number of inference schedulers to list.
listInferenceSchedulers_maxResults :: Lens' ListInferenceSchedulers (Maybe Natural)

-- | <i>See:</i> <a>newListInferenceSchedulersResponse</a> smart
--   constructor.
data ListInferenceSchedulersResponse
ListInferenceSchedulersResponse' :: Maybe [InferenceSchedulerSummary] -> Maybe Text -> Int -> ListInferenceSchedulersResponse

-- | Provides information about the specified inference scheduler,
--   including data upload frequency, model name and ARN, and status.
[$sel:inferenceSchedulerSummaries:ListInferenceSchedulersResponse'] :: ListInferenceSchedulersResponse -> Maybe [InferenceSchedulerSummary]

-- | An opaque pagination token indicating where to continue the listing of
--   inference schedulers.
[$sel:nextToken:ListInferenceSchedulersResponse'] :: ListInferenceSchedulersResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListInferenceSchedulersResponse'] :: ListInferenceSchedulersResponse -> Int

-- | Create a value of <a>ListInferenceSchedulersResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:inferenceSchedulerSummaries:ListInferenceSchedulersResponse'</a>,
--   <a>listInferenceSchedulersResponse_inferenceSchedulerSummaries</a> -
--   Provides information about the specified inference scheduler,
--   including data upload frequency, model name and ARN, and status.
--   
--   <a>$sel:nextToken:ListInferenceSchedulers'</a>,
--   <a>listInferenceSchedulersResponse_nextToken</a> - An opaque
--   pagination token indicating where to continue the listing of inference
--   schedulers.
--   
--   <a>$sel:httpStatus:ListInferenceSchedulersResponse'</a>,
--   <a>listInferenceSchedulersResponse_httpStatus</a> - The response's
--   http status code.
newListInferenceSchedulersResponse :: Int -> ListInferenceSchedulersResponse

-- | Provides information about the specified inference scheduler,
--   including data upload frequency, model name and ARN, and status.
listInferenceSchedulersResponse_inferenceSchedulerSummaries :: Lens' ListInferenceSchedulersResponse (Maybe [InferenceSchedulerSummary])

-- | An opaque pagination token indicating where to continue the listing of
--   inference schedulers.
listInferenceSchedulersResponse_nextToken :: Lens' ListInferenceSchedulersResponse (Maybe Text)

-- | The response's http status code.
listInferenceSchedulersResponse_httpStatus :: Lens' ListInferenceSchedulersResponse Int
instance GHC.Generics.Generic Network.AWS.LookoutEquipment.ListInferenceSchedulers.ListInferenceSchedulers
instance GHC.Show.Show Network.AWS.LookoutEquipment.ListInferenceSchedulers.ListInferenceSchedulers
instance GHC.Read.Read Network.AWS.LookoutEquipment.ListInferenceSchedulers.ListInferenceSchedulers
instance GHC.Classes.Eq Network.AWS.LookoutEquipment.ListInferenceSchedulers.ListInferenceSchedulers
instance GHC.Generics.Generic Network.AWS.LookoutEquipment.ListInferenceSchedulers.ListInferenceSchedulersResponse
instance GHC.Show.Show Network.AWS.LookoutEquipment.ListInferenceSchedulers.ListInferenceSchedulersResponse
instance GHC.Read.Read Network.AWS.LookoutEquipment.ListInferenceSchedulers.ListInferenceSchedulersResponse
instance GHC.Classes.Eq Network.AWS.LookoutEquipment.ListInferenceSchedulers.ListInferenceSchedulersResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LookoutEquipment.ListInferenceSchedulers.ListInferenceSchedulers
instance Control.DeepSeq.NFData Network.AWS.LookoutEquipment.ListInferenceSchedulers.ListInferenceSchedulersResponse
instance Data.Hashable.Class.Hashable Network.AWS.LookoutEquipment.ListInferenceSchedulers.ListInferenceSchedulers
instance Control.DeepSeq.NFData Network.AWS.LookoutEquipment.ListInferenceSchedulers.ListInferenceSchedulers
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LookoutEquipment.ListInferenceSchedulers.ListInferenceSchedulers
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LookoutEquipment.ListInferenceSchedulers.ListInferenceSchedulers
instance Network.AWS.Data.Path.ToPath Network.AWS.LookoutEquipment.ListInferenceSchedulers.ListInferenceSchedulers
instance Network.AWS.Data.Query.ToQuery Network.AWS.LookoutEquipment.ListInferenceSchedulers.ListInferenceSchedulers


-- | Lists all inference executions that have been performed by the
--   specified inference scheduler.
module Network.AWS.LookoutEquipment.ListInferenceExecutions

-- | <i>See:</i> <a>newListInferenceExecutions</a> smart constructor.
data ListInferenceExecutions
ListInferenceExecutions' :: Maybe InferenceExecutionStatus -> Maybe POSIX -> Maybe Text -> Maybe Natural -> Maybe POSIX -> Text -> ListInferenceExecutions

-- | The status of the inference execution.
[$sel:status:ListInferenceExecutions'] :: ListInferenceExecutions -> Maybe InferenceExecutionStatus

-- | The time reference in the inferenced dataset before which Amazon
--   Lookout for Equipment stopped the inference execution.
[$sel:dataEndTimeBefore:ListInferenceExecutions'] :: ListInferenceExecutions -> Maybe POSIX

-- | An opaque pagination token indicating where to continue the listing of
--   inference executions.
[$sel:nextToken:ListInferenceExecutions'] :: ListInferenceExecutions -> Maybe Text

-- | Specifies the maximum number of inference executions to list.
[$sel:maxResults:ListInferenceExecutions'] :: ListInferenceExecutions -> Maybe Natural

-- | The time reference in the inferenced dataset after which Amazon
--   Lookout for Equipment started the inference execution.
[$sel:dataStartTimeAfter:ListInferenceExecutions'] :: ListInferenceExecutions -> Maybe POSIX

-- | The name of the inference scheduler for the inference execution
--   listed.
[$sel:inferenceSchedulerName:ListInferenceExecutions'] :: ListInferenceExecutions -> Text

-- | Create a value of <a>ListInferenceExecutions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ListInferenceExecutions'</a>,
--   <a>listInferenceExecutions_status</a> - The status of the inference
--   execution.
--   
--   <a>$sel:dataEndTimeBefore:ListInferenceExecutions'</a>,
--   <a>listInferenceExecutions_dataEndTimeBefore</a> - The time reference
--   in the inferenced dataset before which Amazon Lookout for Equipment
--   stopped the inference execution.
--   
--   <a>$sel:nextToken:ListInferenceExecutions'</a>,
--   <a>listInferenceExecutions_nextToken</a> - An opaque pagination token
--   indicating where to continue the listing of inference executions.
--   
--   <a>$sel:maxResults:ListInferenceExecutions'</a>,
--   <a>listInferenceExecutions_maxResults</a> - Specifies the maximum
--   number of inference executions to list.
--   
--   <a>$sel:dataStartTimeAfter:ListInferenceExecutions'</a>,
--   <a>listInferenceExecutions_dataStartTimeAfter</a> - The time reference
--   in the inferenced dataset after which Amazon Lookout for Equipment
--   started the inference execution.
--   
--   <a>$sel:inferenceSchedulerName:ListInferenceExecutions'</a>,
--   <a>listInferenceExecutions_inferenceSchedulerName</a> - The name of
--   the inference scheduler for the inference execution listed.
newListInferenceExecutions :: Text -> ListInferenceExecutions

-- | The status of the inference execution.
listInferenceExecutions_status :: Lens' ListInferenceExecutions (Maybe InferenceExecutionStatus)

-- | The time reference in the inferenced dataset before which Amazon
--   Lookout for Equipment stopped the inference execution.
listInferenceExecutions_dataEndTimeBefore :: Lens' ListInferenceExecutions (Maybe UTCTime)

-- | An opaque pagination token indicating where to continue the listing of
--   inference executions.
listInferenceExecutions_nextToken :: Lens' ListInferenceExecutions (Maybe Text)

-- | Specifies the maximum number of inference executions to list.
listInferenceExecutions_maxResults :: Lens' ListInferenceExecutions (Maybe Natural)

-- | The time reference in the inferenced dataset after which Amazon
--   Lookout for Equipment started the inference execution.
listInferenceExecutions_dataStartTimeAfter :: Lens' ListInferenceExecutions (Maybe UTCTime)

-- | The name of the inference scheduler for the inference execution
--   listed.
listInferenceExecutions_inferenceSchedulerName :: Lens' ListInferenceExecutions Text

-- | <i>See:</i> <a>newListInferenceExecutionsResponse</a> smart
--   constructor.
data ListInferenceExecutionsResponse
ListInferenceExecutionsResponse' :: Maybe Text -> Maybe [InferenceExecutionSummary] -> Int -> ListInferenceExecutionsResponse

-- | An opaque pagination token indicating where to continue the listing of
--   inference executions.
[$sel:nextToken:ListInferenceExecutionsResponse'] :: ListInferenceExecutionsResponse -> Maybe Text

-- | Provides an array of information about the individual inference
--   executions returned from the <tt>ListInferenceExecutions</tt>
--   operation, including model used, inference scheduler, data
--   configuration, and so on.
[$sel:inferenceExecutionSummaries:ListInferenceExecutionsResponse'] :: ListInferenceExecutionsResponse -> Maybe [InferenceExecutionSummary]

-- | The response's http status code.
[$sel:httpStatus:ListInferenceExecutionsResponse'] :: ListInferenceExecutionsResponse -> Int

-- | Create a value of <a>ListInferenceExecutionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListInferenceExecutions'</a>,
--   <a>listInferenceExecutionsResponse_nextToken</a> - An opaque
--   pagination token indicating where to continue the listing of inference
--   executions.
--   
--   
--   <a>$sel:inferenceExecutionSummaries:ListInferenceExecutionsResponse'</a>,
--   <a>listInferenceExecutionsResponse_inferenceExecutionSummaries</a> -
--   Provides an array of information about the individual inference
--   executions returned from the <tt>ListInferenceExecutions</tt>
--   operation, including model used, inference scheduler, data
--   configuration, and so on.
--   
--   <a>$sel:httpStatus:ListInferenceExecutionsResponse'</a>,
--   <a>listInferenceExecutionsResponse_httpStatus</a> - The response's
--   http status code.
newListInferenceExecutionsResponse :: Int -> ListInferenceExecutionsResponse

-- | An opaque pagination token indicating where to continue the listing of
--   inference executions.
listInferenceExecutionsResponse_nextToken :: Lens' ListInferenceExecutionsResponse (Maybe Text)

-- | Provides an array of information about the individual inference
--   executions returned from the <tt>ListInferenceExecutions</tt>
--   operation, including model used, inference scheduler, data
--   configuration, and so on.
listInferenceExecutionsResponse_inferenceExecutionSummaries :: Lens' ListInferenceExecutionsResponse (Maybe [InferenceExecutionSummary])

-- | The response's http status code.
listInferenceExecutionsResponse_httpStatus :: Lens' ListInferenceExecutionsResponse Int
instance GHC.Generics.Generic Network.AWS.LookoutEquipment.ListInferenceExecutions.ListInferenceExecutions
instance GHC.Show.Show Network.AWS.LookoutEquipment.ListInferenceExecutions.ListInferenceExecutions
instance GHC.Read.Read Network.AWS.LookoutEquipment.ListInferenceExecutions.ListInferenceExecutions
instance GHC.Classes.Eq Network.AWS.LookoutEquipment.ListInferenceExecutions.ListInferenceExecutions
instance GHC.Generics.Generic Network.AWS.LookoutEquipment.ListInferenceExecutions.ListInferenceExecutionsResponse
instance GHC.Show.Show Network.AWS.LookoutEquipment.ListInferenceExecutions.ListInferenceExecutionsResponse
instance GHC.Read.Read Network.AWS.LookoutEquipment.ListInferenceExecutions.ListInferenceExecutionsResponse
instance GHC.Classes.Eq Network.AWS.LookoutEquipment.ListInferenceExecutions.ListInferenceExecutionsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LookoutEquipment.ListInferenceExecutions.ListInferenceExecutions
instance Control.DeepSeq.NFData Network.AWS.LookoutEquipment.ListInferenceExecutions.ListInferenceExecutionsResponse
instance Data.Hashable.Class.Hashable Network.AWS.LookoutEquipment.ListInferenceExecutions.ListInferenceExecutions
instance Control.DeepSeq.NFData Network.AWS.LookoutEquipment.ListInferenceExecutions.ListInferenceExecutions
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LookoutEquipment.ListInferenceExecutions.ListInferenceExecutions
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LookoutEquipment.ListInferenceExecutions.ListInferenceExecutions
instance Network.AWS.Data.Path.ToPath Network.AWS.LookoutEquipment.ListInferenceExecutions.ListInferenceExecutions
instance Network.AWS.Data.Query.ToQuery Network.AWS.LookoutEquipment.ListInferenceExecutions.ListInferenceExecutions


-- | Lists all datasets currently available in your account, filtering on
--   the dataset name.
module Network.AWS.LookoutEquipment.ListDatasets

-- | <i>See:</i> <a>newListDatasets</a> smart constructor.
data ListDatasets
ListDatasets' :: Maybe Text -> Maybe Text -> Maybe Natural -> ListDatasets

-- | An opaque pagination token indicating where to continue the listing of
--   datasets.
[$sel:nextToken:ListDatasets'] :: ListDatasets -> Maybe Text

-- | The beginning of the name of the datasets to be listed.
[$sel:datasetNameBeginsWith:ListDatasets'] :: ListDatasets -> Maybe Text

-- | Specifies the maximum number of datasets to list.
[$sel:maxResults:ListDatasets'] :: ListDatasets -> Maybe Natural

-- | Create a value of <a>ListDatasets</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDatasets'</a>, <a>listDatasets_nextToken</a> -
--   An opaque pagination token indicating where to continue the listing of
--   datasets.
--   
--   <a>$sel:datasetNameBeginsWith:ListDatasets'</a>,
--   <a>listDatasets_datasetNameBeginsWith</a> - The beginning of the name
--   of the datasets to be listed.
--   
--   <a>$sel:maxResults:ListDatasets'</a>, <a>listDatasets_maxResults</a> -
--   Specifies the maximum number of datasets to list.
newListDatasets :: ListDatasets

-- | An opaque pagination token indicating where to continue the listing of
--   datasets.
listDatasets_nextToken :: Lens' ListDatasets (Maybe Text)

-- | The beginning of the name of the datasets to be listed.
listDatasets_datasetNameBeginsWith :: Lens' ListDatasets (Maybe Text)

-- | Specifies the maximum number of datasets to list.
listDatasets_maxResults :: Lens' ListDatasets (Maybe Natural)

-- | <i>See:</i> <a>newListDatasetsResponse</a> smart constructor.
data ListDatasetsResponse
ListDatasetsResponse' :: Maybe Text -> Maybe [DatasetSummary] -> Int -> ListDatasetsResponse

-- | An opaque pagination token indicating where to continue the listing of
--   datasets.
[$sel:nextToken:ListDatasetsResponse'] :: ListDatasetsResponse -> Maybe Text

-- | Provides information about the specified dataset, including creation
--   time, dataset ARN, and status.
[$sel:datasetSummaries:ListDatasetsResponse'] :: ListDatasetsResponse -> Maybe [DatasetSummary]

-- | The response's http status code.
[$sel:httpStatus:ListDatasetsResponse'] :: ListDatasetsResponse -> Int

-- | Create a value of <a>ListDatasetsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDatasets'</a>,
--   <a>listDatasetsResponse_nextToken</a> - An opaque pagination token
--   indicating where to continue the listing of datasets.
--   
--   <a>$sel:datasetSummaries:ListDatasetsResponse'</a>,
--   <a>listDatasetsResponse_datasetSummaries</a> - Provides information
--   about the specified dataset, including creation time, dataset ARN, and
--   status.
--   
--   <a>$sel:httpStatus:ListDatasetsResponse'</a>,
--   <a>listDatasetsResponse_httpStatus</a> - The response's http status
--   code.
newListDatasetsResponse :: Int -> ListDatasetsResponse

-- | An opaque pagination token indicating where to continue the listing of
--   datasets.
listDatasetsResponse_nextToken :: Lens' ListDatasetsResponse (Maybe Text)

-- | Provides information about the specified dataset, including creation
--   time, dataset ARN, and status.
listDatasetsResponse_datasetSummaries :: Lens' ListDatasetsResponse (Maybe [DatasetSummary])

-- | The response's http status code.
listDatasetsResponse_httpStatus :: Lens' ListDatasetsResponse Int
instance GHC.Generics.Generic Network.AWS.LookoutEquipment.ListDatasets.ListDatasets
instance GHC.Show.Show Network.AWS.LookoutEquipment.ListDatasets.ListDatasets
instance GHC.Read.Read Network.AWS.LookoutEquipment.ListDatasets.ListDatasets
instance GHC.Classes.Eq Network.AWS.LookoutEquipment.ListDatasets.ListDatasets
instance GHC.Generics.Generic Network.AWS.LookoutEquipment.ListDatasets.ListDatasetsResponse
instance GHC.Show.Show Network.AWS.LookoutEquipment.ListDatasets.ListDatasetsResponse
instance GHC.Read.Read Network.AWS.LookoutEquipment.ListDatasets.ListDatasetsResponse
instance GHC.Classes.Eq Network.AWS.LookoutEquipment.ListDatasets.ListDatasetsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LookoutEquipment.ListDatasets.ListDatasets
instance Control.DeepSeq.NFData Network.AWS.LookoutEquipment.ListDatasets.ListDatasetsResponse
instance Data.Hashable.Class.Hashable Network.AWS.LookoutEquipment.ListDatasets.ListDatasets
instance Control.DeepSeq.NFData Network.AWS.LookoutEquipment.ListDatasets.ListDatasets
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LookoutEquipment.ListDatasets.ListDatasets
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LookoutEquipment.ListDatasets.ListDatasets
instance Network.AWS.Data.Path.ToPath Network.AWS.LookoutEquipment.ListDatasets.ListDatasets
instance Network.AWS.Data.Query.ToQuery Network.AWS.LookoutEquipment.ListDatasets.ListDatasets


-- | Provides a list of all data ingestion jobs, including dataset name and
--   ARN, S3 location of the input data, status, and so on.
module Network.AWS.LookoutEquipment.ListDataIngestionJobs

-- | <i>See:</i> <a>newListDataIngestionJobs</a> smart constructor.
data ListDataIngestionJobs
ListDataIngestionJobs' :: Maybe IngestionJobStatus -> Maybe Text -> Maybe Text -> Maybe Natural -> ListDataIngestionJobs

-- | Indicates the status of the data ingestion job.
[$sel:status:ListDataIngestionJobs'] :: ListDataIngestionJobs -> Maybe IngestionJobStatus

-- | An opaque pagination token indicating where to continue the listing of
--   data ingestion jobs.
[$sel:nextToken:ListDataIngestionJobs'] :: ListDataIngestionJobs -> Maybe Text

-- | The name of the dataset being used for the data ingestion job.
[$sel:datasetName:ListDataIngestionJobs'] :: ListDataIngestionJobs -> Maybe Text

-- | Specifies the maximum number of data ingestion jobs to list.
[$sel:maxResults:ListDataIngestionJobs'] :: ListDataIngestionJobs -> Maybe Natural

-- | Create a value of <a>ListDataIngestionJobs</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ListDataIngestionJobs'</a>,
--   <a>listDataIngestionJobs_status</a> - Indicates the status of the data
--   ingestion job.
--   
--   <a>$sel:nextToken:ListDataIngestionJobs'</a>,
--   <a>listDataIngestionJobs_nextToken</a> - An opaque pagination token
--   indicating where to continue the listing of data ingestion jobs.
--   
--   <a>$sel:datasetName:ListDataIngestionJobs'</a>,
--   <a>listDataIngestionJobs_datasetName</a> - The name of the dataset
--   being used for the data ingestion job.
--   
--   <a>$sel:maxResults:ListDataIngestionJobs'</a>,
--   <a>listDataIngestionJobs_maxResults</a> - Specifies the maximum number
--   of data ingestion jobs to list.
newListDataIngestionJobs :: ListDataIngestionJobs

-- | Indicates the status of the data ingestion job.
listDataIngestionJobs_status :: Lens' ListDataIngestionJobs (Maybe IngestionJobStatus)

-- | An opaque pagination token indicating where to continue the listing of
--   data ingestion jobs.
listDataIngestionJobs_nextToken :: Lens' ListDataIngestionJobs (Maybe Text)

-- | The name of the dataset being used for the data ingestion job.
listDataIngestionJobs_datasetName :: Lens' ListDataIngestionJobs (Maybe Text)

-- | Specifies the maximum number of data ingestion jobs to list.
listDataIngestionJobs_maxResults :: Lens' ListDataIngestionJobs (Maybe Natural)

-- | <i>See:</i> <a>newListDataIngestionJobsResponse</a> smart constructor.
data ListDataIngestionJobsResponse
ListDataIngestionJobsResponse' :: Maybe Text -> Maybe [DataIngestionJobSummary] -> Int -> ListDataIngestionJobsResponse

-- | An opaque pagination token indicating where to continue the listing of
--   data ingestion jobs.
[$sel:nextToken:ListDataIngestionJobsResponse'] :: ListDataIngestionJobsResponse -> Maybe Text

-- | Specifies information about the specific data ingestion job, including
--   dataset name and status.
[$sel:dataIngestionJobSummaries:ListDataIngestionJobsResponse'] :: ListDataIngestionJobsResponse -> Maybe [DataIngestionJobSummary]

-- | The response's http status code.
[$sel:httpStatus:ListDataIngestionJobsResponse'] :: ListDataIngestionJobsResponse -> Int

-- | Create a value of <a>ListDataIngestionJobsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDataIngestionJobs'</a>,
--   <a>listDataIngestionJobsResponse_nextToken</a> - An opaque pagination
--   token indicating where to continue the listing of data ingestion jobs.
--   
--   <a>$sel:dataIngestionJobSummaries:ListDataIngestionJobsResponse'</a>,
--   <a>listDataIngestionJobsResponse_dataIngestionJobSummaries</a> -
--   Specifies information about the specific data ingestion job, including
--   dataset name and status.
--   
--   <a>$sel:httpStatus:ListDataIngestionJobsResponse'</a>,
--   <a>listDataIngestionJobsResponse_httpStatus</a> - The response's http
--   status code.
newListDataIngestionJobsResponse :: Int -> ListDataIngestionJobsResponse

-- | An opaque pagination token indicating where to continue the listing of
--   data ingestion jobs.
listDataIngestionJobsResponse_nextToken :: Lens' ListDataIngestionJobsResponse (Maybe Text)

-- | Specifies information about the specific data ingestion job, including
--   dataset name and status.
listDataIngestionJobsResponse_dataIngestionJobSummaries :: Lens' ListDataIngestionJobsResponse (Maybe [DataIngestionJobSummary])

-- | The response's http status code.
listDataIngestionJobsResponse_httpStatus :: Lens' ListDataIngestionJobsResponse Int
instance GHC.Generics.Generic Network.AWS.LookoutEquipment.ListDataIngestionJobs.ListDataIngestionJobs
instance GHC.Show.Show Network.AWS.LookoutEquipment.ListDataIngestionJobs.ListDataIngestionJobs
instance GHC.Read.Read Network.AWS.LookoutEquipment.ListDataIngestionJobs.ListDataIngestionJobs
instance GHC.Classes.Eq Network.AWS.LookoutEquipment.ListDataIngestionJobs.ListDataIngestionJobs
instance GHC.Generics.Generic Network.AWS.LookoutEquipment.ListDataIngestionJobs.ListDataIngestionJobsResponse
instance GHC.Show.Show Network.AWS.LookoutEquipment.ListDataIngestionJobs.ListDataIngestionJobsResponse
instance GHC.Read.Read Network.AWS.LookoutEquipment.ListDataIngestionJobs.ListDataIngestionJobsResponse
instance GHC.Classes.Eq Network.AWS.LookoutEquipment.ListDataIngestionJobs.ListDataIngestionJobsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LookoutEquipment.ListDataIngestionJobs.ListDataIngestionJobs
instance Control.DeepSeq.NFData Network.AWS.LookoutEquipment.ListDataIngestionJobs.ListDataIngestionJobsResponse
instance Data.Hashable.Class.Hashable Network.AWS.LookoutEquipment.ListDataIngestionJobs.ListDataIngestionJobs
instance Control.DeepSeq.NFData Network.AWS.LookoutEquipment.ListDataIngestionJobs.ListDataIngestionJobs
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LookoutEquipment.ListDataIngestionJobs.ListDataIngestionJobs
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LookoutEquipment.ListDataIngestionJobs.ListDataIngestionJobs
instance Network.AWS.Data.Path.ToPath Network.AWS.LookoutEquipment.ListDataIngestionJobs.ListDataIngestionJobs
instance Network.AWS.Data.Query.ToQuery Network.AWS.LookoutEquipment.ListDataIngestionJobs.ListDataIngestionJobs


-- | Provides a JSON containing the overall information about a specific ML
--   model, including model name and ARN, dataset, training and evaluation
--   information, status, and so on.
module Network.AWS.LookoutEquipment.DescribeModel

-- | <i>See:</i> <a>newDescribeModel</a> smart constructor.
data DescribeModel
DescribeModel' :: Text -> DescribeModel

-- | The name of the ML model to be described.
[$sel:modelName:DescribeModel'] :: DescribeModel -> Text

-- | Create a value of <a>DescribeModel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modelName:DescribeModel'</a>, <a>describeModel_modelName</a> -
--   The name of the ML model to be described.
newDescribeModel :: Text -> DescribeModel

-- | The name of the ML model to be described.
describeModel_modelName :: Lens' DescribeModel Text

-- | <i>See:</i> <a>newDescribeModelResponse</a> smart constructor.
data DescribeModelResponse
DescribeModelResponse' :: Maybe ModelStatus -> Maybe DataPreProcessingConfiguration -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe LabelsInputConfiguration -> Maybe Text -> Maybe Text -> Int -> DescribeModelResponse

-- | Specifies the current status of the model being described. Status
--   describes the status of the most recent action of the model.
[$sel:status:DescribeModelResponse'] :: DescribeModelResponse -> Maybe ModelStatus

-- | The configuration is the <tt>TargetSamplingRate</tt>, which is the
--   sampling rate of the data after post processing by Amazon Lookout for
--   Equipment. For example, if you provide data that has been collected at
--   a 1 second level and you want the system to resample the data at a 1
--   minute rate before training, the <tt>TargetSamplingRate</tt> is 1
--   minute.
--   
--   When providing a value for the <tt>TargetSamplingRate</tt>, you must
--   attach the prefix "PT" to the rate you want. The value for a 1 second
--   rate is therefore <i>PT1S</i>, the value for a 15 minute rate is
--   <i>PT15M</i>, and the value for a 1 hour rate is <i>PT1H</i>
[$sel:dataPreProcessingConfiguration:DescribeModelResponse'] :: DescribeModelResponse -> Maybe DataPreProcessingConfiguration

-- | Indicates the time at which the training of the ML model began.
[$sel:trainingExecutionStartTime:DescribeModelResponse'] :: DescribeModelResponse -> Maybe POSIX

-- | The Amazon Resouce Name (ARN) of the dataset used to create the ML
--   model being described.
[$sel:datasetArn:DescribeModelResponse'] :: DescribeModelResponse -> Maybe Text

-- | If the training of the ML model failed, this indicates the reason for
--   that failure.
[$sel:failedReason:DescribeModelResponse'] :: DescribeModelResponse -> Maybe Text

-- | The Amazon Resource Name (ARN) of the ML model being described.
[$sel:modelArn:DescribeModelResponse'] :: DescribeModelResponse -> Maybe Text

-- | Indicates the last time the ML model was updated. The type of update
--   is not specified.
[$sel:lastUpdatedTime:DescribeModelResponse'] :: DescribeModelResponse -> Maybe POSIX

-- | Indicates the time reference in the dataset that was used to end the
--   subset of training data for the ML model.
[$sel:trainingDataEndTime:DescribeModelResponse'] :: DescribeModelResponse -> Maybe POSIX

-- | Indicates the time and date at which the ML model was created.
[$sel:createdAt:DescribeModelResponse'] :: DescribeModelResponse -> Maybe POSIX

-- | The name of the ML model being described.
[$sel:modelName:DescribeModelResponse'] :: DescribeModelResponse -> Maybe Text

-- | The Model Metrics show an aggregated summary of the model's
--   performance within the evaluation time range. This is the JSON content
--   of the metrics created when evaluating the model.
[$sel:modelMetrics:DescribeModelResponse'] :: DescribeModelResponse -> Maybe Text

-- | Indicates the time reference in the dataset that was used to begin the
--   subset of evaluation data for the ML model.
[$sel:evaluationDataStartTime:DescribeModelResponse'] :: DescribeModelResponse -> Maybe POSIX

-- | A JSON description of the data that is in each time series dataset,
--   including names, column names, and data types.
[$sel:schema:DescribeModelResponse'] :: DescribeModelResponse -> Maybe Text

-- | Indicates that the asset associated with this sensor has been shut
--   off. As long as this condition is met, Lookout for Equipment will not
--   use data from this asset for training, evaluation, or inference.
[$sel:offCondition:DescribeModelResponse'] :: DescribeModelResponse -> Maybe Text

-- | Indicates the time reference in the dataset that was used to end the
--   subset of evaluation data for the ML model.
[$sel:evaluationDataEndTime:DescribeModelResponse'] :: DescribeModelResponse -> Maybe POSIX

-- | The name of the dataset being used by the ML being described.
[$sel:datasetName:DescribeModelResponse'] :: DescribeModelResponse -> Maybe Text

-- | Indicates the time reference in the dataset that was used to begin the
--   subset of training data for the ML model.
[$sel:trainingDataStartTime:DescribeModelResponse'] :: DescribeModelResponse -> Maybe POSIX

-- | Indicates the time at which the training of the ML model was
--   completed.
[$sel:trainingExecutionEndTime:DescribeModelResponse'] :: DescribeModelResponse -> Maybe POSIX

-- | Specifies configuration information about the labels input, including
--   its S3 location.
[$sel:labelsInputConfiguration:DescribeModelResponse'] :: DescribeModelResponse -> Maybe LabelsInputConfiguration

-- | Provides the identifier of the KMS key used to encrypt model data by
--   Amazon Lookout for Equipment.
[$sel:serverSideKmsKeyId:DescribeModelResponse'] :: DescribeModelResponse -> Maybe Text

-- | The Amazon Resource Name (ARN) of a role with permission to access the
--   data source for the ML model being described.
[$sel:roleArn:DescribeModelResponse'] :: DescribeModelResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeModelResponse'] :: DescribeModelResponse -> Int

-- | Create a value of <a>DescribeModelResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:DescribeModelResponse'</a>,
--   <a>describeModelResponse_status</a> - Specifies the current status of
--   the model being described. Status describes the status of the most
--   recent action of the model.
--   
--   <a>$sel:dataPreProcessingConfiguration:DescribeModelResponse'</a>,
--   <a>describeModelResponse_dataPreProcessingConfiguration</a> - The
--   configuration is the <tt>TargetSamplingRate</tt>, which is the
--   sampling rate of the data after post processing by Amazon Lookout for
--   Equipment. For example, if you provide data that has been collected at
--   a 1 second level and you want the system to resample the data at a 1
--   minute rate before training, the <tt>TargetSamplingRate</tt> is 1
--   minute.
--   
--   When providing a value for the <tt>TargetSamplingRate</tt>, you must
--   attach the prefix "PT" to the rate you want. The value for a 1 second
--   rate is therefore <i>PT1S</i>, the value for a 15 minute rate is
--   <i>PT15M</i>, and the value for a 1 hour rate is <i>PT1H</i>
--   
--   <a>$sel:trainingExecutionStartTime:DescribeModelResponse'</a>,
--   <a>describeModelResponse_trainingExecutionStartTime</a> - Indicates
--   the time at which the training of the ML model began.
--   
--   <a>$sel:datasetArn:DescribeModelResponse'</a>,
--   <a>describeModelResponse_datasetArn</a> - The Amazon Resouce Name
--   (ARN) of the dataset used to create the ML model being described.
--   
--   <a>$sel:failedReason:DescribeModelResponse'</a>,
--   <a>describeModelResponse_failedReason</a> - If the training of the ML
--   model failed, this indicates the reason for that failure.
--   
--   <a>$sel:modelArn:DescribeModelResponse'</a>,
--   <a>describeModelResponse_modelArn</a> - The Amazon Resource Name (ARN)
--   of the ML model being described.
--   
--   <a>$sel:lastUpdatedTime:DescribeModelResponse'</a>,
--   <a>describeModelResponse_lastUpdatedTime</a> - Indicates the last time
--   the ML model was updated. The type of update is not specified.
--   
--   <a>$sel:trainingDataEndTime:DescribeModelResponse'</a>,
--   <a>describeModelResponse_trainingDataEndTime</a> - Indicates the time
--   reference in the dataset that was used to end the subset of training
--   data for the ML model.
--   
--   <a>$sel:createdAt:DescribeModelResponse'</a>,
--   <a>describeModelResponse_createdAt</a> - Indicates the time and date
--   at which the ML model was created.
--   
--   <a>$sel:modelName:DescribeModel'</a>,
--   <a>describeModelResponse_modelName</a> - The name of the ML model
--   being described.
--   
--   <a>$sel:modelMetrics:DescribeModelResponse'</a>,
--   <a>describeModelResponse_modelMetrics</a> - The Model Metrics show an
--   aggregated summary of the model's performance within the evaluation
--   time range. This is the JSON content of the metrics created when
--   evaluating the model.
--   
--   <a>$sel:evaluationDataStartTime:DescribeModelResponse'</a>,
--   <a>describeModelResponse_evaluationDataStartTime</a> - Indicates the
--   time reference in the dataset that was used to begin the subset of
--   evaluation data for the ML model.
--   
--   <a>$sel:schema:DescribeModelResponse'</a>,
--   <a>describeModelResponse_schema</a> - A JSON description of the data
--   that is in each time series dataset, including names, column names,
--   and data types.
--   
--   <a>$sel:offCondition:DescribeModelResponse'</a>,
--   <a>describeModelResponse_offCondition</a> - Indicates that the asset
--   associated with this sensor has been shut off. As long as this
--   condition is met, Lookout for Equipment will not use data from this
--   asset for training, evaluation, or inference.
--   
--   <a>$sel:evaluationDataEndTime:DescribeModelResponse'</a>,
--   <a>describeModelResponse_evaluationDataEndTime</a> - Indicates the
--   time reference in the dataset that was used to end the subset of
--   evaluation data for the ML model.
--   
--   <a>$sel:datasetName:DescribeModelResponse'</a>,
--   <a>describeModelResponse_datasetName</a> - The name of the dataset
--   being used by the ML being described.
--   
--   <a>$sel:trainingDataStartTime:DescribeModelResponse'</a>,
--   <a>describeModelResponse_trainingDataStartTime</a> - Indicates the
--   time reference in the dataset that was used to begin the subset of
--   training data for the ML model.
--   
--   <a>$sel:trainingExecutionEndTime:DescribeModelResponse'</a>,
--   <a>describeModelResponse_trainingExecutionEndTime</a> - Indicates the
--   time at which the training of the ML model was completed.
--   
--   <a>$sel:labelsInputConfiguration:DescribeModelResponse'</a>,
--   <a>describeModelResponse_labelsInputConfiguration</a> - Specifies
--   configuration information about the labels input, including its S3
--   location.
--   
--   <a>$sel:serverSideKmsKeyId:DescribeModelResponse'</a>,
--   <a>describeModelResponse_serverSideKmsKeyId</a> - Provides the
--   identifier of the KMS key used to encrypt model data by Amazon Lookout
--   for Equipment.
--   
--   <a>$sel:roleArn:DescribeModelResponse'</a>,
--   <a>describeModelResponse_roleArn</a> - The Amazon Resource Name (ARN)
--   of a role with permission to access the data source for the ML model
--   being described.
--   
--   <a>$sel:httpStatus:DescribeModelResponse'</a>,
--   <a>describeModelResponse_httpStatus</a> - The response's http status
--   code.
newDescribeModelResponse :: Int -> DescribeModelResponse

-- | Specifies the current status of the model being described. Status
--   describes the status of the most recent action of the model.
describeModelResponse_status :: Lens' DescribeModelResponse (Maybe ModelStatus)

-- | The configuration is the <tt>TargetSamplingRate</tt>, which is the
--   sampling rate of the data after post processing by Amazon Lookout for
--   Equipment. For example, if you provide data that has been collected at
--   a 1 second level and you want the system to resample the data at a 1
--   minute rate before training, the <tt>TargetSamplingRate</tt> is 1
--   minute.
--   
--   When providing a value for the <tt>TargetSamplingRate</tt>, you must
--   attach the prefix "PT" to the rate you want. The value for a 1 second
--   rate is therefore <i>PT1S</i>, the value for a 15 minute rate is
--   <i>PT15M</i>, and the value for a 1 hour rate is <i>PT1H</i>
describeModelResponse_dataPreProcessingConfiguration :: Lens' DescribeModelResponse (Maybe DataPreProcessingConfiguration)

-- | Indicates the time at which the training of the ML model began.
describeModelResponse_trainingExecutionStartTime :: Lens' DescribeModelResponse (Maybe UTCTime)

-- | The Amazon Resouce Name (ARN) of the dataset used to create the ML
--   model being described.
describeModelResponse_datasetArn :: Lens' DescribeModelResponse (Maybe Text)

-- | If the training of the ML model failed, this indicates the reason for
--   that failure.
describeModelResponse_failedReason :: Lens' DescribeModelResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the ML model being described.
describeModelResponse_modelArn :: Lens' DescribeModelResponse (Maybe Text)

-- | Indicates the last time the ML model was updated. The type of update
--   is not specified.
describeModelResponse_lastUpdatedTime :: Lens' DescribeModelResponse (Maybe UTCTime)

-- | Indicates the time reference in the dataset that was used to end the
--   subset of training data for the ML model.
describeModelResponse_trainingDataEndTime :: Lens' DescribeModelResponse (Maybe UTCTime)

-- | Indicates the time and date at which the ML model was created.
describeModelResponse_createdAt :: Lens' DescribeModelResponse (Maybe UTCTime)

-- | The name of the ML model being described.
describeModelResponse_modelName :: Lens' DescribeModelResponse (Maybe Text)

-- | The Model Metrics show an aggregated summary of the model's
--   performance within the evaluation time range. This is the JSON content
--   of the metrics created when evaluating the model.
describeModelResponse_modelMetrics :: Lens' DescribeModelResponse (Maybe Text)

-- | Indicates the time reference in the dataset that was used to begin the
--   subset of evaluation data for the ML model.
describeModelResponse_evaluationDataStartTime :: Lens' DescribeModelResponse (Maybe UTCTime)

-- | A JSON description of the data that is in each time series dataset,
--   including names, column names, and data types.
describeModelResponse_schema :: Lens' DescribeModelResponse (Maybe Text)

-- | Indicates that the asset associated with this sensor has been shut
--   off. As long as this condition is met, Lookout for Equipment will not
--   use data from this asset for training, evaluation, or inference.
describeModelResponse_offCondition :: Lens' DescribeModelResponse (Maybe Text)

-- | Indicates the time reference in the dataset that was used to end the
--   subset of evaluation data for the ML model.
describeModelResponse_evaluationDataEndTime :: Lens' DescribeModelResponse (Maybe UTCTime)

-- | The name of the dataset being used by the ML being described.
describeModelResponse_datasetName :: Lens' DescribeModelResponse (Maybe Text)

-- | Indicates the time reference in the dataset that was used to begin the
--   subset of training data for the ML model.
describeModelResponse_trainingDataStartTime :: Lens' DescribeModelResponse (Maybe UTCTime)

-- | Indicates the time at which the training of the ML model was
--   completed.
describeModelResponse_trainingExecutionEndTime :: Lens' DescribeModelResponse (Maybe UTCTime)

-- | Specifies configuration information about the labels input, including
--   its S3 location.
describeModelResponse_labelsInputConfiguration :: Lens' DescribeModelResponse (Maybe LabelsInputConfiguration)

-- | Provides the identifier of the KMS key used to encrypt model data by
--   Amazon Lookout for Equipment.
describeModelResponse_serverSideKmsKeyId :: Lens' DescribeModelResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of a role with permission to access the
--   data source for the ML model being described.
describeModelResponse_roleArn :: Lens' DescribeModelResponse (Maybe Text)

-- | The response's http status code.
describeModelResponse_httpStatus :: Lens' DescribeModelResponse Int
instance GHC.Generics.Generic Network.AWS.LookoutEquipment.DescribeModel.DescribeModel
instance GHC.Show.Show Network.AWS.LookoutEquipment.DescribeModel.DescribeModel
instance GHC.Read.Read Network.AWS.LookoutEquipment.DescribeModel.DescribeModel
instance GHC.Classes.Eq Network.AWS.LookoutEquipment.DescribeModel.DescribeModel
instance GHC.Generics.Generic Network.AWS.LookoutEquipment.DescribeModel.DescribeModelResponse
instance GHC.Show.Show Network.AWS.LookoutEquipment.DescribeModel.DescribeModelResponse
instance GHC.Read.Read Network.AWS.LookoutEquipment.DescribeModel.DescribeModelResponse
instance GHC.Classes.Eq Network.AWS.LookoutEquipment.DescribeModel.DescribeModelResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LookoutEquipment.DescribeModel.DescribeModel
instance Control.DeepSeq.NFData Network.AWS.LookoutEquipment.DescribeModel.DescribeModelResponse
instance Data.Hashable.Class.Hashable Network.AWS.LookoutEquipment.DescribeModel.DescribeModel
instance Control.DeepSeq.NFData Network.AWS.LookoutEquipment.DescribeModel.DescribeModel
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LookoutEquipment.DescribeModel.DescribeModel
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LookoutEquipment.DescribeModel.DescribeModel
instance Network.AWS.Data.Path.ToPath Network.AWS.LookoutEquipment.DescribeModel.DescribeModel
instance Network.AWS.Data.Query.ToQuery Network.AWS.LookoutEquipment.DescribeModel.DescribeModel


-- | Specifies information about the inference scheduler being used,
--   including name, model, status, and associated metadata
module Network.AWS.LookoutEquipment.DescribeInferenceScheduler

-- | <i>See:</i> <a>newDescribeInferenceScheduler</a> smart constructor.
data DescribeInferenceScheduler
DescribeInferenceScheduler' :: Text -> DescribeInferenceScheduler

-- | The name of the inference scheduler being described.
[$sel:inferenceSchedulerName:DescribeInferenceScheduler'] :: DescribeInferenceScheduler -> Text

-- | Create a value of <a>DescribeInferenceScheduler</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inferenceSchedulerName:DescribeInferenceScheduler'</a>,
--   <a>describeInferenceScheduler_inferenceSchedulerName</a> - The name of
--   the inference scheduler being described.
newDescribeInferenceScheduler :: Text -> DescribeInferenceScheduler

-- | The name of the inference scheduler being described.
describeInferenceScheduler_inferenceSchedulerName :: Lens' DescribeInferenceScheduler Text

-- | <i>See:</i> <a>newDescribeInferenceSchedulerResponse</a> smart
--   constructor.
data DescribeInferenceSchedulerResponse
DescribeInferenceSchedulerResponse' :: Maybe InferenceSchedulerStatus -> Maybe DataUploadFrequency -> Maybe Natural -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe InferenceOutputConfiguration -> Maybe POSIX -> Maybe Text -> Maybe InferenceInputConfiguration -> Maybe Text -> Maybe Text -> Int -> DescribeInferenceSchedulerResponse

-- | Indicates the status of the inference scheduler.
[$sel:status:DescribeInferenceSchedulerResponse'] :: DescribeInferenceSchedulerResponse -> Maybe InferenceSchedulerStatus

-- | Specifies how often data is uploaded to the source S3 bucket for the
--   input data. This value is the length of time between data uploads. For
--   instance, if you select 5 minutes, Amazon Lookout for Equipment will
--   upload the real-time data to the source bucket once every 5 minutes.
--   This frequency also determines how often Amazon Lookout for Equipment
--   starts a scheduled inference on your data. In this example, it starts
--   once every 5 minutes.
[$sel:dataUploadFrequency:DescribeInferenceSchedulerResponse'] :: DescribeInferenceSchedulerResponse -> Maybe DataUploadFrequency

-- | A period of time (in minutes) by which inference on the data is
--   delayed after the data starts. For instance, if you select an offset
--   delay time of five minutes, inference will not begin on the data until
--   the first data measurement after the five minute mark. For example, if
--   five minutes is selected, the inference scheduler will wake up at the
--   configured frequency with the additional five minute delay time to
--   check the customer S3 bucket. The customer can upload data at the same
--   frequency and they don't need to stop and restart the scheduler when
--   uploading new data.
[$sel:dataDelayOffsetInMinutes:DescribeInferenceSchedulerResponse'] :: DescribeInferenceSchedulerResponse -> Maybe Natural

-- | The Amazon Resource Name (ARN) of the ML model of the inference
--   scheduler being described.
[$sel:modelArn:DescribeInferenceSchedulerResponse'] :: DescribeInferenceSchedulerResponse -> Maybe Text

-- | Specifies the time at which the inference scheduler was created.
[$sel:createdAt:DescribeInferenceSchedulerResponse'] :: DescribeInferenceSchedulerResponse -> Maybe POSIX

-- | The name of the ML model of the inference scheduler being described.
[$sel:modelName:DescribeInferenceSchedulerResponse'] :: DescribeInferenceSchedulerResponse -> Maybe Text

-- | The Amazon Resource Name (ARN) of the inference scheduler being
--   described.
[$sel:inferenceSchedulerArn:DescribeInferenceSchedulerResponse'] :: DescribeInferenceSchedulerResponse -> Maybe Text

-- | Specifies information for the output results for the inference
--   scheduler, including the output S3 location.
[$sel:dataOutputConfiguration:DescribeInferenceSchedulerResponse'] :: DescribeInferenceSchedulerResponse -> Maybe InferenceOutputConfiguration

-- | Specifies the time at which the inference scheduler was last updated,
--   if it was.
[$sel:updatedAt:DescribeInferenceSchedulerResponse'] :: DescribeInferenceSchedulerResponse -> Maybe POSIX

-- | The name of the inference scheduler being described.
[$sel:inferenceSchedulerName:DescribeInferenceSchedulerResponse'] :: DescribeInferenceSchedulerResponse -> Maybe Text

-- | Specifies configuration information for the input data for the
--   inference scheduler, including delimiter, format, and dataset
--   location.
[$sel:dataInputConfiguration:DescribeInferenceSchedulerResponse'] :: DescribeInferenceSchedulerResponse -> Maybe InferenceInputConfiguration

-- | Provides the identifier of the KMS key used to encrypt inference
--   scheduler data by Amazon Lookout for Equipment.
[$sel:serverSideKmsKeyId:DescribeInferenceSchedulerResponse'] :: DescribeInferenceSchedulerResponse -> Maybe Text

-- | The Amazon Resource Name (ARN) of a role with permission to access the
--   data source for the inference scheduler being described.
[$sel:roleArn:DescribeInferenceSchedulerResponse'] :: DescribeInferenceSchedulerResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeInferenceSchedulerResponse'] :: DescribeInferenceSchedulerResponse -> Int

-- | Create a value of <a>DescribeInferenceSchedulerResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:DescribeInferenceSchedulerResponse'</a>,
--   <a>describeInferenceSchedulerResponse_status</a> - Indicates the
--   status of the inference scheduler.
--   
--   <a>$sel:dataUploadFrequency:DescribeInferenceSchedulerResponse'</a>,
--   <a>describeInferenceSchedulerResponse_dataUploadFrequency</a> -
--   Specifies how often data is uploaded to the source S3 bucket for the
--   input data. This value is the length of time between data uploads. For
--   instance, if you select 5 minutes, Amazon Lookout for Equipment will
--   upload the real-time data to the source bucket once every 5 minutes.
--   This frequency also determines how often Amazon Lookout for Equipment
--   starts a scheduled inference on your data. In this example, it starts
--   once every 5 minutes.
--   
--   
--   <a>$sel:dataDelayOffsetInMinutes:DescribeInferenceSchedulerResponse'</a>,
--   <a>describeInferenceSchedulerResponse_dataDelayOffsetInMinutes</a> - A
--   period of time (in minutes) by which inference on the data is delayed
--   after the data starts. For instance, if you select an offset delay
--   time of five minutes, inference will not begin on the data until the
--   first data measurement after the five minute mark. For example, if
--   five minutes is selected, the inference scheduler will wake up at the
--   configured frequency with the additional five minute delay time to
--   check the customer S3 bucket. The customer can upload data at the same
--   frequency and they don't need to stop and restart the scheduler when
--   uploading new data.
--   
--   <a>$sel:modelArn:DescribeInferenceSchedulerResponse'</a>,
--   <a>describeInferenceSchedulerResponse_modelArn</a> - The Amazon
--   Resource Name (ARN) of the ML model of the inference scheduler being
--   described.
--   
--   <a>$sel:createdAt:DescribeInferenceSchedulerResponse'</a>,
--   <a>describeInferenceSchedulerResponse_createdAt</a> - Specifies the
--   time at which the inference scheduler was created.
--   
--   <a>$sel:modelName:DescribeInferenceSchedulerResponse'</a>,
--   <a>describeInferenceSchedulerResponse_modelName</a> - The name of the
--   ML model of the inference scheduler being described.
--   
--   <a>$sel:inferenceSchedulerArn:DescribeInferenceSchedulerResponse'</a>,
--   <a>describeInferenceSchedulerResponse_inferenceSchedulerArn</a> - The
--   Amazon Resource Name (ARN) of the inference scheduler being described.
--   
--   
--   <a>$sel:dataOutputConfiguration:DescribeInferenceSchedulerResponse'</a>,
--   <a>describeInferenceSchedulerResponse_dataOutputConfiguration</a> -
--   Specifies information for the output results for the inference
--   scheduler, including the output S3 location.
--   
--   <a>$sel:updatedAt:DescribeInferenceSchedulerResponse'</a>,
--   <a>describeInferenceSchedulerResponse_updatedAt</a> - Specifies the
--   time at which the inference scheduler was last updated, if it was.
--   
--   <a>$sel:inferenceSchedulerName:DescribeInferenceScheduler'</a>,
--   <a>describeInferenceSchedulerResponse_inferenceSchedulerName</a> - The
--   name of the inference scheduler being described.
--   
--   
--   <a>$sel:dataInputConfiguration:DescribeInferenceSchedulerResponse'</a>,
--   <a>describeInferenceSchedulerResponse_dataInputConfiguration</a> -
--   Specifies configuration information for the input data for the
--   inference scheduler, including delimiter, format, and dataset
--   location.
--   
--   <a>$sel:serverSideKmsKeyId:DescribeInferenceSchedulerResponse'</a>,
--   <a>describeInferenceSchedulerResponse_serverSideKmsKeyId</a> -
--   Provides the identifier of the KMS key used to encrypt inference
--   scheduler data by Amazon Lookout for Equipment.
--   
--   <a>$sel:roleArn:DescribeInferenceSchedulerResponse'</a>,
--   <a>describeInferenceSchedulerResponse_roleArn</a> - The Amazon
--   Resource Name (ARN) of a role with permission to access the data
--   source for the inference scheduler being described.
--   
--   <a>$sel:httpStatus:DescribeInferenceSchedulerResponse'</a>,
--   <a>describeInferenceSchedulerResponse_httpStatus</a> - The response's
--   http status code.
newDescribeInferenceSchedulerResponse :: Int -> DescribeInferenceSchedulerResponse

-- | Indicates the status of the inference scheduler.
describeInferenceSchedulerResponse_status :: Lens' DescribeInferenceSchedulerResponse (Maybe InferenceSchedulerStatus)

-- | Specifies how often data is uploaded to the source S3 bucket for the
--   input data. This value is the length of time between data uploads. For
--   instance, if you select 5 minutes, Amazon Lookout for Equipment will
--   upload the real-time data to the source bucket once every 5 minutes.
--   This frequency also determines how often Amazon Lookout for Equipment
--   starts a scheduled inference on your data. In this example, it starts
--   once every 5 minutes.
describeInferenceSchedulerResponse_dataUploadFrequency :: Lens' DescribeInferenceSchedulerResponse (Maybe DataUploadFrequency)

-- | A period of time (in minutes) by which inference on the data is
--   delayed after the data starts. For instance, if you select an offset
--   delay time of five minutes, inference will not begin on the data until
--   the first data measurement after the five minute mark. For example, if
--   five minutes is selected, the inference scheduler will wake up at the
--   configured frequency with the additional five minute delay time to
--   check the customer S3 bucket. The customer can upload data at the same
--   frequency and they don't need to stop and restart the scheduler when
--   uploading new data.
describeInferenceSchedulerResponse_dataDelayOffsetInMinutes :: Lens' DescribeInferenceSchedulerResponse (Maybe Natural)

-- | The Amazon Resource Name (ARN) of the ML model of the inference
--   scheduler being described.
describeInferenceSchedulerResponse_modelArn :: Lens' DescribeInferenceSchedulerResponse (Maybe Text)

-- | Specifies the time at which the inference scheduler was created.
describeInferenceSchedulerResponse_createdAt :: Lens' DescribeInferenceSchedulerResponse (Maybe UTCTime)

-- | The name of the ML model of the inference scheduler being described.
describeInferenceSchedulerResponse_modelName :: Lens' DescribeInferenceSchedulerResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the inference scheduler being
--   described.
describeInferenceSchedulerResponse_inferenceSchedulerArn :: Lens' DescribeInferenceSchedulerResponse (Maybe Text)

-- | Specifies information for the output results for the inference
--   scheduler, including the output S3 location.
describeInferenceSchedulerResponse_dataOutputConfiguration :: Lens' DescribeInferenceSchedulerResponse (Maybe InferenceOutputConfiguration)

-- | Specifies the time at which the inference scheduler was last updated,
--   if it was.
describeInferenceSchedulerResponse_updatedAt :: Lens' DescribeInferenceSchedulerResponse (Maybe UTCTime)

-- | The name of the inference scheduler being described.
describeInferenceSchedulerResponse_inferenceSchedulerName :: Lens' DescribeInferenceSchedulerResponse (Maybe Text)

-- | Specifies configuration information for the input data for the
--   inference scheduler, including delimiter, format, and dataset
--   location.
describeInferenceSchedulerResponse_dataInputConfiguration :: Lens' DescribeInferenceSchedulerResponse (Maybe InferenceInputConfiguration)

-- | Provides the identifier of the KMS key used to encrypt inference
--   scheduler data by Amazon Lookout for Equipment.
describeInferenceSchedulerResponse_serverSideKmsKeyId :: Lens' DescribeInferenceSchedulerResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of a role with permission to access the
--   data source for the inference scheduler being described.
describeInferenceSchedulerResponse_roleArn :: Lens' DescribeInferenceSchedulerResponse (Maybe Text)

-- | The response's http status code.
describeInferenceSchedulerResponse_httpStatus :: Lens' DescribeInferenceSchedulerResponse Int
instance GHC.Generics.Generic Network.AWS.LookoutEquipment.DescribeInferenceScheduler.DescribeInferenceScheduler
instance GHC.Show.Show Network.AWS.LookoutEquipment.DescribeInferenceScheduler.DescribeInferenceScheduler
instance GHC.Read.Read Network.AWS.LookoutEquipment.DescribeInferenceScheduler.DescribeInferenceScheduler
instance GHC.Classes.Eq Network.AWS.LookoutEquipment.DescribeInferenceScheduler.DescribeInferenceScheduler
instance GHC.Generics.Generic Network.AWS.LookoutEquipment.DescribeInferenceScheduler.DescribeInferenceSchedulerResponse
instance GHC.Show.Show Network.AWS.LookoutEquipment.DescribeInferenceScheduler.DescribeInferenceSchedulerResponse
instance GHC.Read.Read Network.AWS.LookoutEquipment.DescribeInferenceScheduler.DescribeInferenceSchedulerResponse
instance GHC.Classes.Eq Network.AWS.LookoutEquipment.DescribeInferenceScheduler.DescribeInferenceSchedulerResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LookoutEquipment.DescribeInferenceScheduler.DescribeInferenceScheduler
instance Control.DeepSeq.NFData Network.AWS.LookoutEquipment.DescribeInferenceScheduler.DescribeInferenceSchedulerResponse
instance Data.Hashable.Class.Hashable Network.AWS.LookoutEquipment.DescribeInferenceScheduler.DescribeInferenceScheduler
instance Control.DeepSeq.NFData Network.AWS.LookoutEquipment.DescribeInferenceScheduler.DescribeInferenceScheduler
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LookoutEquipment.DescribeInferenceScheduler.DescribeInferenceScheduler
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LookoutEquipment.DescribeInferenceScheduler.DescribeInferenceScheduler
instance Network.AWS.Data.Path.ToPath Network.AWS.LookoutEquipment.DescribeInferenceScheduler.DescribeInferenceScheduler
instance Network.AWS.Data.Query.ToQuery Network.AWS.LookoutEquipment.DescribeInferenceScheduler.DescribeInferenceScheduler


-- | Provides a JSON description of the data that is in each time series
--   dataset, including names, column names, and data types.
module Network.AWS.LookoutEquipment.DescribeDataset

-- | <i>See:</i> <a>newDescribeDataset</a> smart constructor.
data DescribeDataset
DescribeDataset' :: Text -> DescribeDataset

-- | The name of the dataset to be described.
[$sel:datasetName:DescribeDataset'] :: DescribeDataset -> Text

-- | Create a value of <a>DescribeDataset</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:datasetName:DescribeDataset'</a>,
--   <a>describeDataset_datasetName</a> - The name of the dataset to be
--   described.
newDescribeDataset :: Text -> DescribeDataset

-- | The name of the dataset to be described.
describeDataset_datasetName :: Lens' DescribeDataset Text

-- | <i>See:</i> <a>newDescribeDatasetResponse</a> smart constructor.
data DescribeDatasetResponse
DescribeDatasetResponse' :: Maybe IngestionInputConfiguration -> Maybe DatasetStatus -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> DescribeDatasetResponse

-- | Specifies the S3 location configuration for the data input for the
--   data ingestion job.
[$sel:ingestionInputConfiguration:DescribeDatasetResponse'] :: DescribeDatasetResponse -> Maybe IngestionInputConfiguration

-- | Indicates the status of the dataset.
[$sel:status:DescribeDatasetResponse'] :: DescribeDatasetResponse -> Maybe DatasetStatus

-- | The Amazon Resource Name (ARN) of the dataset being described.
[$sel:datasetArn:DescribeDatasetResponse'] :: DescribeDatasetResponse -> Maybe Text

-- | Specifies the time the dataset was last updated, if it was.
[$sel:lastUpdatedAt:DescribeDatasetResponse'] :: DescribeDatasetResponse -> Maybe POSIX

-- | Specifies the time the dataset was created in Amazon Lookout for
--   Equipment.
[$sel:createdAt:DescribeDatasetResponse'] :: DescribeDatasetResponse -> Maybe POSIX

-- | A JSON description of the data that is in each time series dataset,
--   including names, column names, and data types.
[$sel:schema:DescribeDatasetResponse'] :: DescribeDatasetResponse -> Maybe Text

-- | The name of the dataset being described.
[$sel:datasetName:DescribeDatasetResponse'] :: DescribeDatasetResponse -> Maybe Text

-- | Provides the identifier of the KMS key used to encrypt dataset data by
--   Amazon Lookout for Equipment.
[$sel:serverSideKmsKeyId:DescribeDatasetResponse'] :: DescribeDatasetResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeDatasetResponse'] :: DescribeDatasetResponse -> Int

-- | Create a value of <a>DescribeDatasetResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ingestionInputConfiguration:DescribeDatasetResponse'</a>,
--   <a>describeDatasetResponse_ingestionInputConfiguration</a> - Specifies
--   the S3 location configuration for the data input for the data
--   ingestion job.
--   
--   <a>$sel:status:DescribeDatasetResponse'</a>,
--   <a>describeDatasetResponse_status</a> - Indicates the status of the
--   dataset.
--   
--   <a>$sel:datasetArn:DescribeDatasetResponse'</a>,
--   <a>describeDatasetResponse_datasetArn</a> - The Amazon Resource Name
--   (ARN) of the dataset being described.
--   
--   <a>$sel:lastUpdatedAt:DescribeDatasetResponse'</a>,
--   <a>describeDatasetResponse_lastUpdatedAt</a> - Specifies the time the
--   dataset was last updated, if it was.
--   
--   <a>$sel:createdAt:DescribeDatasetResponse'</a>,
--   <a>describeDatasetResponse_createdAt</a> - Specifies the time the
--   dataset was created in Amazon Lookout for Equipment.
--   
--   <a>$sel:schema:DescribeDatasetResponse'</a>,
--   <a>describeDatasetResponse_schema</a> - A JSON description of the data
--   that is in each time series dataset, including names, column names,
--   and data types.
--   
--   <a>$sel:datasetName:DescribeDataset'</a>,
--   <a>describeDatasetResponse_datasetName</a> - The name of the dataset
--   being described.
--   
--   <a>$sel:serverSideKmsKeyId:DescribeDatasetResponse'</a>,
--   <a>describeDatasetResponse_serverSideKmsKeyId</a> - Provides the
--   identifier of the KMS key used to encrypt dataset data by Amazon
--   Lookout for Equipment.
--   
--   <a>$sel:httpStatus:DescribeDatasetResponse'</a>,
--   <a>describeDatasetResponse_httpStatus</a> - The response's http status
--   code.
newDescribeDatasetResponse :: Int -> DescribeDatasetResponse

-- | Specifies the S3 location configuration for the data input for the
--   data ingestion job.
describeDatasetResponse_ingestionInputConfiguration :: Lens' DescribeDatasetResponse (Maybe IngestionInputConfiguration)

-- | Indicates the status of the dataset.
describeDatasetResponse_status :: Lens' DescribeDatasetResponse (Maybe DatasetStatus)

-- | The Amazon Resource Name (ARN) of the dataset being described.
describeDatasetResponse_datasetArn :: Lens' DescribeDatasetResponse (Maybe Text)

-- | Specifies the time the dataset was last updated, if it was.
describeDatasetResponse_lastUpdatedAt :: Lens' DescribeDatasetResponse (Maybe UTCTime)

-- | Specifies the time the dataset was created in Amazon Lookout for
--   Equipment.
describeDatasetResponse_createdAt :: Lens' DescribeDatasetResponse (Maybe UTCTime)

-- | A JSON description of the data that is in each time series dataset,
--   including names, column names, and data types.
describeDatasetResponse_schema :: Lens' DescribeDatasetResponse (Maybe Text)

-- | The name of the dataset being described.
describeDatasetResponse_datasetName :: Lens' DescribeDatasetResponse (Maybe Text)

-- | Provides the identifier of the KMS key used to encrypt dataset data by
--   Amazon Lookout for Equipment.
describeDatasetResponse_serverSideKmsKeyId :: Lens' DescribeDatasetResponse (Maybe Text)

-- | The response's http status code.
describeDatasetResponse_httpStatus :: Lens' DescribeDatasetResponse Int
instance GHC.Generics.Generic Network.AWS.LookoutEquipment.DescribeDataset.DescribeDataset
instance GHC.Show.Show Network.AWS.LookoutEquipment.DescribeDataset.DescribeDataset
instance GHC.Read.Read Network.AWS.LookoutEquipment.DescribeDataset.DescribeDataset
instance GHC.Classes.Eq Network.AWS.LookoutEquipment.DescribeDataset.DescribeDataset
instance GHC.Generics.Generic Network.AWS.LookoutEquipment.DescribeDataset.DescribeDatasetResponse
instance GHC.Show.Show Network.AWS.LookoutEquipment.DescribeDataset.DescribeDatasetResponse
instance GHC.Read.Read Network.AWS.LookoutEquipment.DescribeDataset.DescribeDatasetResponse
instance GHC.Classes.Eq Network.AWS.LookoutEquipment.DescribeDataset.DescribeDatasetResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LookoutEquipment.DescribeDataset.DescribeDataset
instance Control.DeepSeq.NFData Network.AWS.LookoutEquipment.DescribeDataset.DescribeDatasetResponse
instance Data.Hashable.Class.Hashable Network.AWS.LookoutEquipment.DescribeDataset.DescribeDataset
instance Control.DeepSeq.NFData Network.AWS.LookoutEquipment.DescribeDataset.DescribeDataset
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LookoutEquipment.DescribeDataset.DescribeDataset
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LookoutEquipment.DescribeDataset.DescribeDataset
instance Network.AWS.Data.Path.ToPath Network.AWS.LookoutEquipment.DescribeDataset.DescribeDataset
instance Network.AWS.Data.Query.ToQuery Network.AWS.LookoutEquipment.DescribeDataset.DescribeDataset


-- | Provides information on a specific data ingestion job such as creation
--   time, dataset ARN, status, and so on.
module Network.AWS.LookoutEquipment.DescribeDataIngestionJob

-- | <i>See:</i> <a>newDescribeDataIngestionJob</a> smart constructor.
data DescribeDataIngestionJob
DescribeDataIngestionJob' :: Text -> DescribeDataIngestionJob

-- | The job ID of the data ingestion job.
[$sel:jobId:DescribeDataIngestionJob'] :: DescribeDataIngestionJob -> Text

-- | Create a value of <a>DescribeDataIngestionJob</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:DescribeDataIngestionJob'</a>,
--   <a>describeDataIngestionJob_jobId</a> - The job ID of the data
--   ingestion job.
newDescribeDataIngestionJob :: Text -> DescribeDataIngestionJob

-- | The job ID of the data ingestion job.
describeDataIngestionJob_jobId :: Lens' DescribeDataIngestionJob Text

-- | <i>See:</i> <a>newDescribeDataIngestionJobResponse</a> smart
--   constructor.
data DescribeDataIngestionJobResponse
DescribeDataIngestionJobResponse' :: Maybe IngestionInputConfiguration -> Maybe IngestionJobStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Int -> DescribeDataIngestionJobResponse

-- | Specifies the S3 location configuration for the data input for the
--   data ingestion job.
[$sel:ingestionInputConfiguration:DescribeDataIngestionJobResponse'] :: DescribeDataIngestionJobResponse -> Maybe IngestionInputConfiguration

-- | Indicates the status of the <tt>DataIngestionJob</tt> operation.
[$sel:status:DescribeDataIngestionJobResponse'] :: DescribeDataIngestionJobResponse -> Maybe IngestionJobStatus

-- | The Amazon Resource Name (ARN) of the dataset being used in the data
--   ingestion job.
[$sel:datasetArn:DescribeDataIngestionJobResponse'] :: DescribeDataIngestionJobResponse -> Maybe Text

-- | Specifies the reason for failure when a data ingestion job has failed.
[$sel:failedReason:DescribeDataIngestionJobResponse'] :: DescribeDataIngestionJobResponse -> Maybe Text

-- | Indicates the job ID of the data ingestion job.
[$sel:jobId:DescribeDataIngestionJobResponse'] :: DescribeDataIngestionJobResponse -> Maybe Text

-- | The time at which the data ingestion job was created.
[$sel:createdAt:DescribeDataIngestionJobResponse'] :: DescribeDataIngestionJobResponse -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of an IAM role with permission to
--   access the data source being ingested.
[$sel:roleArn:DescribeDataIngestionJobResponse'] :: DescribeDataIngestionJobResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeDataIngestionJobResponse'] :: DescribeDataIngestionJobResponse -> Int

-- | Create a value of <a>DescribeDataIngestionJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:ingestionInputConfiguration:DescribeDataIngestionJobResponse'</a>,
--   <a>describeDataIngestionJobResponse_ingestionInputConfiguration</a> -
--   Specifies the S3 location configuration for the data input for the
--   data ingestion job.
--   
--   <a>$sel:status:DescribeDataIngestionJobResponse'</a>,
--   <a>describeDataIngestionJobResponse_status</a> - Indicates the status
--   of the <tt>DataIngestionJob</tt> operation.
--   
--   <a>$sel:datasetArn:DescribeDataIngestionJobResponse'</a>,
--   <a>describeDataIngestionJobResponse_datasetArn</a> - The Amazon
--   Resource Name (ARN) of the dataset being used in the data ingestion
--   job.
--   
--   <a>$sel:failedReason:DescribeDataIngestionJobResponse'</a>,
--   <a>describeDataIngestionJobResponse_failedReason</a> - Specifies the
--   reason for failure when a data ingestion job has failed.
--   
--   <a>$sel:jobId:DescribeDataIngestionJob'</a>,
--   <a>describeDataIngestionJobResponse_jobId</a> - Indicates the job ID
--   of the data ingestion job.
--   
--   <a>$sel:createdAt:DescribeDataIngestionJobResponse'</a>,
--   <a>describeDataIngestionJobResponse_createdAt</a> - The time at which
--   the data ingestion job was created.
--   
--   <a>$sel:roleArn:DescribeDataIngestionJobResponse'</a>,
--   <a>describeDataIngestionJobResponse_roleArn</a> - The Amazon Resource
--   Name (ARN) of an IAM role with permission to access the data source
--   being ingested.
--   
--   <a>$sel:httpStatus:DescribeDataIngestionJobResponse'</a>,
--   <a>describeDataIngestionJobResponse_httpStatus</a> - The response's
--   http status code.
newDescribeDataIngestionJobResponse :: Int -> DescribeDataIngestionJobResponse

-- | Specifies the S3 location configuration for the data input for the
--   data ingestion job.
describeDataIngestionJobResponse_ingestionInputConfiguration :: Lens' DescribeDataIngestionJobResponse (Maybe IngestionInputConfiguration)

-- | Indicates the status of the <tt>DataIngestionJob</tt> operation.
describeDataIngestionJobResponse_status :: Lens' DescribeDataIngestionJobResponse (Maybe IngestionJobStatus)

-- | The Amazon Resource Name (ARN) of the dataset being used in the data
--   ingestion job.
describeDataIngestionJobResponse_datasetArn :: Lens' DescribeDataIngestionJobResponse (Maybe Text)

-- | Specifies the reason for failure when a data ingestion job has failed.
describeDataIngestionJobResponse_failedReason :: Lens' DescribeDataIngestionJobResponse (Maybe Text)

-- | Indicates the job ID of the data ingestion job.
describeDataIngestionJobResponse_jobId :: Lens' DescribeDataIngestionJobResponse (Maybe Text)

-- | The time at which the data ingestion job was created.
describeDataIngestionJobResponse_createdAt :: Lens' DescribeDataIngestionJobResponse (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of an IAM role with permission to
--   access the data source being ingested.
describeDataIngestionJobResponse_roleArn :: Lens' DescribeDataIngestionJobResponse (Maybe Text)

-- | The response's http status code.
describeDataIngestionJobResponse_httpStatus :: Lens' DescribeDataIngestionJobResponse Int
instance GHC.Generics.Generic Network.AWS.LookoutEquipment.DescribeDataIngestionJob.DescribeDataIngestionJob
instance GHC.Show.Show Network.AWS.LookoutEquipment.DescribeDataIngestionJob.DescribeDataIngestionJob
instance GHC.Read.Read Network.AWS.LookoutEquipment.DescribeDataIngestionJob.DescribeDataIngestionJob
instance GHC.Classes.Eq Network.AWS.LookoutEquipment.DescribeDataIngestionJob.DescribeDataIngestionJob
instance GHC.Generics.Generic Network.AWS.LookoutEquipment.DescribeDataIngestionJob.DescribeDataIngestionJobResponse
instance GHC.Show.Show Network.AWS.LookoutEquipment.DescribeDataIngestionJob.DescribeDataIngestionJobResponse
instance GHC.Read.Read Network.AWS.LookoutEquipment.DescribeDataIngestionJob.DescribeDataIngestionJobResponse
instance GHC.Classes.Eq Network.AWS.LookoutEquipment.DescribeDataIngestionJob.DescribeDataIngestionJobResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LookoutEquipment.DescribeDataIngestionJob.DescribeDataIngestionJob
instance Control.DeepSeq.NFData Network.AWS.LookoutEquipment.DescribeDataIngestionJob.DescribeDataIngestionJobResponse
instance Data.Hashable.Class.Hashable Network.AWS.LookoutEquipment.DescribeDataIngestionJob.DescribeDataIngestionJob
instance Control.DeepSeq.NFData Network.AWS.LookoutEquipment.DescribeDataIngestionJob.DescribeDataIngestionJob
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LookoutEquipment.DescribeDataIngestionJob.DescribeDataIngestionJob
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LookoutEquipment.DescribeDataIngestionJob.DescribeDataIngestionJob
instance Network.AWS.Data.Path.ToPath Network.AWS.LookoutEquipment.DescribeDataIngestionJob.DescribeDataIngestionJob
instance Network.AWS.Data.Query.ToQuery Network.AWS.LookoutEquipment.DescribeDataIngestionJob.DescribeDataIngestionJob


-- | Deletes an ML model currently available for Amazon Lookout for
--   Equipment. This will prevent it from being used with an inference
--   scheduler, even one that is already set up.
module Network.AWS.LookoutEquipment.DeleteModel

-- | <i>See:</i> <a>newDeleteModel</a> smart constructor.
data DeleteModel
DeleteModel' :: Text -> DeleteModel

-- | The name of the ML model to be deleted.
[$sel:modelName:DeleteModel'] :: DeleteModel -> Text

-- | Create a value of <a>DeleteModel</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modelName:DeleteModel'</a>, <a>deleteModel_modelName</a> - The
--   name of the ML model to be deleted.
newDeleteModel :: Text -> DeleteModel

-- | The name of the ML model to be deleted.
deleteModel_modelName :: Lens' DeleteModel Text

-- | <i>See:</i> <a>newDeleteModelResponse</a> smart constructor.
data DeleteModelResponse
DeleteModelResponse' :: DeleteModelResponse

-- | Create a value of <a>DeleteModelResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteModelResponse :: DeleteModelResponse
instance GHC.Generics.Generic Network.AWS.LookoutEquipment.DeleteModel.DeleteModel
instance GHC.Show.Show Network.AWS.LookoutEquipment.DeleteModel.DeleteModel
instance GHC.Read.Read Network.AWS.LookoutEquipment.DeleteModel.DeleteModel
instance GHC.Classes.Eq Network.AWS.LookoutEquipment.DeleteModel.DeleteModel
instance GHC.Generics.Generic Network.AWS.LookoutEquipment.DeleteModel.DeleteModelResponse
instance GHC.Show.Show Network.AWS.LookoutEquipment.DeleteModel.DeleteModelResponse
instance GHC.Read.Read Network.AWS.LookoutEquipment.DeleteModel.DeleteModelResponse
instance GHC.Classes.Eq Network.AWS.LookoutEquipment.DeleteModel.DeleteModelResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LookoutEquipment.DeleteModel.DeleteModel
instance Control.DeepSeq.NFData Network.AWS.LookoutEquipment.DeleteModel.DeleteModelResponse
instance Data.Hashable.Class.Hashable Network.AWS.LookoutEquipment.DeleteModel.DeleteModel
instance Control.DeepSeq.NFData Network.AWS.LookoutEquipment.DeleteModel.DeleteModel
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LookoutEquipment.DeleteModel.DeleteModel
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LookoutEquipment.DeleteModel.DeleteModel
instance Network.AWS.Data.Path.ToPath Network.AWS.LookoutEquipment.DeleteModel.DeleteModel
instance Network.AWS.Data.Query.ToQuery Network.AWS.LookoutEquipment.DeleteModel.DeleteModel


-- | Deletes an inference scheduler that has been set up. Already processed
--   output results are not affected.
module Network.AWS.LookoutEquipment.DeleteInferenceScheduler

-- | <i>See:</i> <a>newDeleteInferenceScheduler</a> smart constructor.
data DeleteInferenceScheduler
DeleteInferenceScheduler' :: Text -> DeleteInferenceScheduler

-- | The name of the inference scheduler to be deleted.
[$sel:inferenceSchedulerName:DeleteInferenceScheduler'] :: DeleteInferenceScheduler -> Text

-- | Create a value of <a>DeleteInferenceScheduler</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inferenceSchedulerName:DeleteInferenceScheduler'</a>,
--   <a>deleteInferenceScheduler_inferenceSchedulerName</a> - The name of
--   the inference scheduler to be deleted.
newDeleteInferenceScheduler :: Text -> DeleteInferenceScheduler

-- | The name of the inference scheduler to be deleted.
deleteInferenceScheduler_inferenceSchedulerName :: Lens' DeleteInferenceScheduler Text

-- | <i>See:</i> <a>newDeleteInferenceSchedulerResponse</a> smart
--   constructor.
data DeleteInferenceSchedulerResponse
DeleteInferenceSchedulerResponse' :: DeleteInferenceSchedulerResponse

-- | Create a value of <a>DeleteInferenceSchedulerResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteInferenceSchedulerResponse :: DeleteInferenceSchedulerResponse
instance GHC.Generics.Generic Network.AWS.LookoutEquipment.DeleteInferenceScheduler.DeleteInferenceScheduler
instance GHC.Show.Show Network.AWS.LookoutEquipment.DeleteInferenceScheduler.DeleteInferenceScheduler
instance GHC.Read.Read Network.AWS.LookoutEquipment.DeleteInferenceScheduler.DeleteInferenceScheduler
instance GHC.Classes.Eq Network.AWS.LookoutEquipment.DeleteInferenceScheduler.DeleteInferenceScheduler
instance GHC.Generics.Generic Network.AWS.LookoutEquipment.DeleteInferenceScheduler.DeleteInferenceSchedulerResponse
instance GHC.Show.Show Network.AWS.LookoutEquipment.DeleteInferenceScheduler.DeleteInferenceSchedulerResponse
instance GHC.Read.Read Network.AWS.LookoutEquipment.DeleteInferenceScheduler.DeleteInferenceSchedulerResponse
instance GHC.Classes.Eq Network.AWS.LookoutEquipment.DeleteInferenceScheduler.DeleteInferenceSchedulerResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LookoutEquipment.DeleteInferenceScheduler.DeleteInferenceScheduler
instance Control.DeepSeq.NFData Network.AWS.LookoutEquipment.DeleteInferenceScheduler.DeleteInferenceSchedulerResponse
instance Data.Hashable.Class.Hashable Network.AWS.LookoutEquipment.DeleteInferenceScheduler.DeleteInferenceScheduler
instance Control.DeepSeq.NFData Network.AWS.LookoutEquipment.DeleteInferenceScheduler.DeleteInferenceScheduler
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LookoutEquipment.DeleteInferenceScheduler.DeleteInferenceScheduler
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LookoutEquipment.DeleteInferenceScheduler.DeleteInferenceScheduler
instance Network.AWS.Data.Path.ToPath Network.AWS.LookoutEquipment.DeleteInferenceScheduler.DeleteInferenceScheduler
instance Network.AWS.Data.Query.ToQuery Network.AWS.LookoutEquipment.DeleteInferenceScheduler.DeleteInferenceScheduler


-- | Deletes a dataset and associated artifacts. The operation will check
--   to see if any inference scheduler or data ingestion job is currently
--   using the dataset, and if there isn't, the dataset, its metadata, and
--   any associated data stored in S3 will be deleted. This does not affect
--   any models that used this dataset for training and evaluation, but
--   does prevent it from being used in the future.
module Network.AWS.LookoutEquipment.DeleteDataset

-- | <i>See:</i> <a>newDeleteDataset</a> smart constructor.
data DeleteDataset
DeleteDataset' :: Text -> DeleteDataset

-- | The name of the dataset to be deleted.
[$sel:datasetName:DeleteDataset'] :: DeleteDataset -> Text

-- | Create a value of <a>DeleteDataset</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:datasetName:DeleteDataset'</a>,
--   <a>deleteDataset_datasetName</a> - The name of the dataset to be
--   deleted.
newDeleteDataset :: Text -> DeleteDataset

-- | The name of the dataset to be deleted.
deleteDataset_datasetName :: Lens' DeleteDataset Text

-- | <i>See:</i> <a>newDeleteDatasetResponse</a> smart constructor.
data DeleteDatasetResponse
DeleteDatasetResponse' :: DeleteDatasetResponse

-- | Create a value of <a>DeleteDatasetResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteDatasetResponse :: DeleteDatasetResponse
instance GHC.Generics.Generic Network.AWS.LookoutEquipment.DeleteDataset.DeleteDataset
instance GHC.Show.Show Network.AWS.LookoutEquipment.DeleteDataset.DeleteDataset
instance GHC.Read.Read Network.AWS.LookoutEquipment.DeleteDataset.DeleteDataset
instance GHC.Classes.Eq Network.AWS.LookoutEquipment.DeleteDataset.DeleteDataset
instance GHC.Generics.Generic Network.AWS.LookoutEquipment.DeleteDataset.DeleteDatasetResponse
instance GHC.Show.Show Network.AWS.LookoutEquipment.DeleteDataset.DeleteDatasetResponse
instance GHC.Read.Read Network.AWS.LookoutEquipment.DeleteDataset.DeleteDatasetResponse
instance GHC.Classes.Eq Network.AWS.LookoutEquipment.DeleteDataset.DeleteDatasetResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LookoutEquipment.DeleteDataset.DeleteDataset
instance Control.DeepSeq.NFData Network.AWS.LookoutEquipment.DeleteDataset.DeleteDatasetResponse
instance Data.Hashable.Class.Hashable Network.AWS.LookoutEquipment.DeleteDataset.DeleteDataset
instance Control.DeepSeq.NFData Network.AWS.LookoutEquipment.DeleteDataset.DeleteDataset
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LookoutEquipment.DeleteDataset.DeleteDataset
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LookoutEquipment.DeleteDataset.DeleteDataset
instance Network.AWS.Data.Path.ToPath Network.AWS.LookoutEquipment.DeleteDataset.DeleteDataset
instance Network.AWS.Data.Query.ToQuery Network.AWS.LookoutEquipment.DeleteDataset.DeleteDataset


-- | Creates an ML model for data inference.
--   
--   A machine-learning (ML) model is a mathematical model that finds
--   patterns in your data. In Amazon Lookout for Equipment, the model
--   learns the patterns of normal behavior and detects abnormal behavior
--   that could be potential equipment failure (or maintenance events). The
--   models are made by analyzing normal data and abnormalities in machine
--   behavior that have already occurred.
--   
--   Your model is trained using a portion of the data from your dataset
--   and uses that data to learn patterns of normal behavior and abnormal
--   patterns that lead to equipment failure. Another portion of the data
--   is used to evaluate the model's accuracy.
module Network.AWS.LookoutEquipment.CreateModel

-- | <i>See:</i> <a>newCreateModel</a> smart constructor.
data CreateModel
CreateModel' :: Maybe DataPreProcessingConfiguration -> Maybe POSIX -> Maybe DatasetSchema -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe LabelsInputConfiguration -> Maybe [Tag] -> Maybe Text -> Maybe Text -> Text -> Text -> Text -> CreateModel

-- | The configuration is the <tt>TargetSamplingRate</tt>, which is the
--   sampling rate of the data after post processing by Amazon Lookout for
--   Equipment. For example, if you provide data that has been collected at
--   a 1 second level and you want the system to resample the data at a 1
--   minute rate before training, the <tt>TargetSamplingRate</tt> is 1
--   minute.
--   
--   When providing a value for the <tt>TargetSamplingRate</tt>, you must
--   attach the prefix "PT" to the rate you want. The value for a 1 second
--   rate is therefore <i>PT1S</i>, the value for a 15 minute rate is
--   <i>PT15M</i>, and the value for a 1 hour rate is <i>PT1H</i>
[$sel:dataPreProcessingConfiguration:CreateModel'] :: CreateModel -> Maybe DataPreProcessingConfiguration

-- | Indicates the time reference in the dataset that should be used to end
--   the subset of training data for the ML model.
[$sel:trainingDataEndTime:CreateModel'] :: CreateModel -> Maybe POSIX

-- | The data schema for the ML model being created.
[$sel:datasetSchema:CreateModel'] :: CreateModel -> Maybe DatasetSchema

-- | Indicates the time reference in the dataset that should be used to
--   begin the subset of evaluation data for the ML model.
[$sel:evaluationDataStartTime:CreateModel'] :: CreateModel -> Maybe POSIX

-- | Indicates that the asset associated with this sensor has been shut
--   off. As long as this condition is met, Lookout for Equipment will not
--   use data from this asset for training, evaluation, or inference.
[$sel:offCondition:CreateModel'] :: CreateModel -> Maybe Text

-- | Indicates the time reference in the dataset that should be used to end
--   the subset of evaluation data for the ML model.
[$sel:evaluationDataEndTime:CreateModel'] :: CreateModel -> Maybe POSIX

-- | Indicates the time reference in the dataset that should be used to
--   begin the subset of training data for the ML model.
[$sel:trainingDataStartTime:CreateModel'] :: CreateModel -> Maybe POSIX

-- | The input configuration for the labels being used for the ML model
--   that's being created.
[$sel:labelsInputConfiguration:CreateModel'] :: CreateModel -> Maybe LabelsInputConfiguration

-- | Any tags associated with the ML model being created.
[$sel:tags:CreateModel'] :: CreateModel -> Maybe [Tag]

-- | Provides the identifier of the KMS key used to encrypt model data by
--   Amazon Lookout for Equipment.
[$sel:serverSideKmsKeyId:CreateModel'] :: CreateModel -> Maybe Text

-- | The Amazon Resource Name (ARN) of a role with permission to access the
--   data source being used to create the ML model.
[$sel:roleArn:CreateModel'] :: CreateModel -> Maybe Text

-- | The name for the ML model to be created.
[$sel:modelName:CreateModel'] :: CreateModel -> Text

-- | The name of the dataset for the ML model being created.
[$sel:datasetName:CreateModel'] :: CreateModel -> Text

-- | A unique identifier for the request. If you do not set the client
--   request token, Amazon Lookout for Equipment generates one.
[$sel:clientToken:CreateModel'] :: CreateModel -> Text

-- | Create a value of <a>CreateModel</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataPreProcessingConfiguration:CreateModel'</a>,
--   <a>createModel_dataPreProcessingConfiguration</a> - The configuration
--   is the <tt>TargetSamplingRate</tt>, which is the sampling rate of the
--   data after post processing by Amazon Lookout for Equipment. For
--   example, if you provide data that has been collected at a 1 second
--   level and you want the system to resample the data at a 1 minute rate
--   before training, the <tt>TargetSamplingRate</tt> is 1 minute.
--   
--   When providing a value for the <tt>TargetSamplingRate</tt>, you must
--   attach the prefix "PT" to the rate you want. The value for a 1 second
--   rate is therefore <i>PT1S</i>, the value for a 15 minute rate is
--   <i>PT15M</i>, and the value for a 1 hour rate is <i>PT1H</i>
--   
--   <a>$sel:trainingDataEndTime:CreateModel'</a>,
--   <a>createModel_trainingDataEndTime</a> - Indicates the time reference
--   in the dataset that should be used to end the subset of training data
--   for the ML model.
--   
--   <a>$sel:datasetSchema:CreateModel'</a>,
--   <a>createModel_datasetSchema</a> - The data schema for the ML model
--   being created.
--   
--   <a>$sel:evaluationDataStartTime:CreateModel'</a>,
--   <a>createModel_evaluationDataStartTime</a> - Indicates the time
--   reference in the dataset that should be used to begin the subset of
--   evaluation data for the ML model.
--   
--   <a>$sel:offCondition:CreateModel'</a>, <a>createModel_offCondition</a>
--   - Indicates that the asset associated with this sensor has been shut
--   off. As long as this condition is met, Lookout for Equipment will not
--   use data from this asset for training, evaluation, or inference.
--   
--   <a>$sel:evaluationDataEndTime:CreateModel'</a>,
--   <a>createModel_evaluationDataEndTime</a> - Indicates the time
--   reference in the dataset that should be used to end the subset of
--   evaluation data for the ML model.
--   
--   <a>$sel:trainingDataStartTime:CreateModel'</a>,
--   <a>createModel_trainingDataStartTime</a> - Indicates the time
--   reference in the dataset that should be used to begin the subset of
--   training data for the ML model.
--   
--   <a>$sel:labelsInputConfiguration:CreateModel'</a>,
--   <a>createModel_labelsInputConfiguration</a> - The input configuration
--   for the labels being used for the ML model that's being created.
--   
--   <a>$sel:tags:CreateModel'</a>, <a>createModel_tags</a> - Any tags
--   associated with the ML model being created.
--   
--   <a>$sel:serverSideKmsKeyId:CreateModel'</a>,
--   <a>createModel_serverSideKmsKeyId</a> - Provides the identifier of the
--   KMS key used to encrypt model data by Amazon Lookout for Equipment.
--   
--   <a>$sel:roleArn:CreateModel'</a>, <a>createModel_roleArn</a> - The
--   Amazon Resource Name (ARN) of a role with permission to access the
--   data source being used to create the ML model.
--   
--   <a>$sel:modelName:CreateModel'</a>, <a>createModel_modelName</a> - The
--   name for the ML model to be created.
--   
--   <a>$sel:datasetName:CreateModel'</a>, <a>createModel_datasetName</a> -
--   The name of the dataset for the ML model being created.
--   
--   <a>$sel:clientToken:CreateModel'</a>, <a>createModel_clientToken</a> -
--   A unique identifier for the request. If you do not set the client
--   request token, Amazon Lookout for Equipment generates one.
newCreateModel :: Text -> Text -> Text -> CreateModel

-- | The configuration is the <tt>TargetSamplingRate</tt>, which is the
--   sampling rate of the data after post processing by Amazon Lookout for
--   Equipment. For example, if you provide data that has been collected at
--   a 1 second level and you want the system to resample the data at a 1
--   minute rate before training, the <tt>TargetSamplingRate</tt> is 1
--   minute.
--   
--   When providing a value for the <tt>TargetSamplingRate</tt>, you must
--   attach the prefix "PT" to the rate you want. The value for a 1 second
--   rate is therefore <i>PT1S</i>, the value for a 15 minute rate is
--   <i>PT15M</i>, and the value for a 1 hour rate is <i>PT1H</i>
createModel_dataPreProcessingConfiguration :: Lens' CreateModel (Maybe DataPreProcessingConfiguration)

-- | Indicates the time reference in the dataset that should be used to end
--   the subset of training data for the ML model.
createModel_trainingDataEndTime :: Lens' CreateModel (Maybe UTCTime)

-- | The data schema for the ML model being created.
createModel_datasetSchema :: Lens' CreateModel (Maybe DatasetSchema)

-- | Indicates the time reference in the dataset that should be used to
--   begin the subset of evaluation data for the ML model.
createModel_evaluationDataStartTime :: Lens' CreateModel (Maybe UTCTime)

-- | Indicates that the asset associated with this sensor has been shut
--   off. As long as this condition is met, Lookout for Equipment will not
--   use data from this asset for training, evaluation, or inference.
createModel_offCondition :: Lens' CreateModel (Maybe Text)

-- | Indicates the time reference in the dataset that should be used to end
--   the subset of evaluation data for the ML model.
createModel_evaluationDataEndTime :: Lens' CreateModel (Maybe UTCTime)

-- | Indicates the time reference in the dataset that should be used to
--   begin the subset of training data for the ML model.
createModel_trainingDataStartTime :: Lens' CreateModel (Maybe UTCTime)

-- | The input configuration for the labels being used for the ML model
--   that's being created.
createModel_labelsInputConfiguration :: Lens' CreateModel (Maybe LabelsInputConfiguration)

-- | Any tags associated with the ML model being created.
createModel_tags :: Lens' CreateModel (Maybe [Tag])

-- | Provides the identifier of the KMS key used to encrypt model data by
--   Amazon Lookout for Equipment.
createModel_serverSideKmsKeyId :: Lens' CreateModel (Maybe Text)

-- | The Amazon Resource Name (ARN) of a role with permission to access the
--   data source being used to create the ML model.
createModel_roleArn :: Lens' CreateModel (Maybe Text)

-- | The name for the ML model to be created.
createModel_modelName :: Lens' CreateModel Text

-- | The name of the dataset for the ML model being created.
createModel_datasetName :: Lens' CreateModel Text

-- | A unique identifier for the request. If you do not set the client
--   request token, Amazon Lookout for Equipment generates one.
createModel_clientToken :: Lens' CreateModel Text

-- | <i>See:</i> <a>newCreateModelResponse</a> smart constructor.
data CreateModelResponse
CreateModelResponse' :: Maybe ModelStatus -> Maybe Text -> Int -> CreateModelResponse

-- | Indicates the status of the <tt>CreateModel</tt> operation.
[$sel:status:CreateModelResponse'] :: CreateModelResponse -> Maybe ModelStatus

-- | The Amazon Resource Name (ARN) of the model being created.
[$sel:modelArn:CreateModelResponse'] :: CreateModelResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateModelResponse'] :: CreateModelResponse -> Int

-- | Create a value of <a>CreateModelResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:CreateModelResponse'</a>,
--   <a>createModelResponse_status</a> - Indicates the status of the
--   <tt>CreateModel</tt> operation.
--   
--   <a>$sel:modelArn:CreateModelResponse'</a>,
--   <a>createModelResponse_modelArn</a> - The Amazon Resource Name (ARN)
--   of the model being created.
--   
--   <a>$sel:httpStatus:CreateModelResponse'</a>,
--   <a>createModelResponse_httpStatus</a> - The response's http status
--   code.
newCreateModelResponse :: Int -> CreateModelResponse

-- | Indicates the status of the <tt>CreateModel</tt> operation.
createModelResponse_status :: Lens' CreateModelResponse (Maybe ModelStatus)

-- | The Amazon Resource Name (ARN) of the model being created.
createModelResponse_modelArn :: Lens' CreateModelResponse (Maybe Text)

-- | The response's http status code.
createModelResponse_httpStatus :: Lens' CreateModelResponse Int
instance GHC.Generics.Generic Network.AWS.LookoutEquipment.CreateModel.CreateModel
instance GHC.Show.Show Network.AWS.LookoutEquipment.CreateModel.CreateModel
instance GHC.Read.Read Network.AWS.LookoutEquipment.CreateModel.CreateModel
instance GHC.Classes.Eq Network.AWS.LookoutEquipment.CreateModel.CreateModel
instance GHC.Generics.Generic Network.AWS.LookoutEquipment.CreateModel.CreateModelResponse
instance GHC.Show.Show Network.AWS.LookoutEquipment.CreateModel.CreateModelResponse
instance GHC.Read.Read Network.AWS.LookoutEquipment.CreateModel.CreateModelResponse
instance GHC.Classes.Eq Network.AWS.LookoutEquipment.CreateModel.CreateModelResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LookoutEquipment.CreateModel.CreateModel
instance Control.DeepSeq.NFData Network.AWS.LookoutEquipment.CreateModel.CreateModelResponse
instance Data.Hashable.Class.Hashable Network.AWS.LookoutEquipment.CreateModel.CreateModel
instance Control.DeepSeq.NFData Network.AWS.LookoutEquipment.CreateModel.CreateModel
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LookoutEquipment.CreateModel.CreateModel
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LookoutEquipment.CreateModel.CreateModel
instance Network.AWS.Data.Path.ToPath Network.AWS.LookoutEquipment.CreateModel.CreateModel
instance Network.AWS.Data.Query.ToQuery Network.AWS.LookoutEquipment.CreateModel.CreateModel


-- | Creates a scheduled inference. Scheduling an inference is setting up a
--   continuous real-time inference plan to analyze new measurement data.
--   When setting up the schedule, you provide an S3 bucket location for
--   the input data, assign it a delimiter between separate entries in the
--   data, set an offset delay if desired, and set the frequency of
--   inferencing. You must also provide an S3 bucket location for the
--   output data.
module Network.AWS.LookoutEquipment.CreateInferenceScheduler

-- | <i>See:</i> <a>newCreateInferenceScheduler</a> smart constructor.
data CreateInferenceScheduler
CreateInferenceScheduler' :: Maybe Natural -> Maybe [Tag] -> Maybe Text -> Text -> Text -> DataUploadFrequency -> InferenceInputConfiguration -> InferenceOutputConfiguration -> Text -> Text -> CreateInferenceScheduler

-- | A period of time (in minutes) by which inference on the data is
--   delayed after the data starts. For instance, if you select an offset
--   delay time of five minutes, inference will not begin on the data until
--   the first data measurement after the five minute mark. For example, if
--   five minutes is selected, the inference scheduler will wake up at the
--   configured frequency with the additional five minute delay time to
--   check the customer S3 bucket. The customer can upload data at the same
--   frequency and they don't need to stop and restart the scheduler when
--   uploading new data.
[$sel:dataDelayOffsetInMinutes:CreateInferenceScheduler'] :: CreateInferenceScheduler -> Maybe Natural

-- | Any tags associated with the inference scheduler.
[$sel:tags:CreateInferenceScheduler'] :: CreateInferenceScheduler -> Maybe [Tag]

-- | Provides the identifier of the KMS key used to encrypt inference
--   scheduler data by Amazon Lookout for Equipment.
[$sel:serverSideKmsKeyId:CreateInferenceScheduler'] :: CreateInferenceScheduler -> Maybe Text

-- | The name of the previously trained ML model being used to create the
--   inference scheduler.
[$sel:modelName:CreateInferenceScheduler'] :: CreateInferenceScheduler -> Text

-- | The name of the inference scheduler being created.
[$sel:inferenceSchedulerName:CreateInferenceScheduler'] :: CreateInferenceScheduler -> Text

-- | How often data is uploaded to the source S3 bucket for the input data.
--   The value chosen is the length of time between data uploads. For
--   instance, if you select 5 minutes, Amazon Lookout for Equipment will
--   upload the real-time data to the source bucket once every 5 minutes.
--   This frequency also determines how often Amazon Lookout for Equipment
--   starts a scheduled inference on your data. In this example, it starts
--   once every 5 minutes.
[$sel:dataUploadFrequency:CreateInferenceScheduler'] :: CreateInferenceScheduler -> DataUploadFrequency

-- | Specifies configuration information for the input data for the
--   inference scheduler, including delimiter, format, and dataset
--   location.
[$sel:dataInputConfiguration:CreateInferenceScheduler'] :: CreateInferenceScheduler -> InferenceInputConfiguration

-- | Specifies configuration information for the output results for the
--   inference scheduler, including the S3 location for the output.
[$sel:dataOutputConfiguration:CreateInferenceScheduler'] :: CreateInferenceScheduler -> InferenceOutputConfiguration

-- | The Amazon Resource Name (ARN) of a role with permission to access the
--   data source being used for the inference.
[$sel:roleArn:CreateInferenceScheduler'] :: CreateInferenceScheduler -> Text

-- | A unique identifier for the request. If you do not set the client
--   request token, Amazon Lookout for Equipment generates one.
[$sel:clientToken:CreateInferenceScheduler'] :: CreateInferenceScheduler -> Text

-- | Create a value of <a>CreateInferenceScheduler</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataDelayOffsetInMinutes:CreateInferenceScheduler'</a>,
--   <a>createInferenceScheduler_dataDelayOffsetInMinutes</a> - A period of
--   time (in minutes) by which inference on the data is delayed after the
--   data starts. For instance, if you select an offset delay time of five
--   minutes, inference will not begin on the data until the first data
--   measurement after the five minute mark. For example, if five minutes
--   is selected, the inference scheduler will wake up at the configured
--   frequency with the additional five minute delay time to check the
--   customer S3 bucket. The customer can upload data at the same frequency
--   and they don't need to stop and restart the scheduler when uploading
--   new data.
--   
--   <a>$sel:tags:CreateInferenceScheduler'</a>,
--   <a>createInferenceScheduler_tags</a> - Any tags associated with the
--   inference scheduler.
--   
--   <a>$sel:serverSideKmsKeyId:CreateInferenceScheduler'</a>,
--   <a>createInferenceScheduler_serverSideKmsKeyId</a> - Provides the
--   identifier of the KMS key used to encrypt inference scheduler data by
--   Amazon Lookout for Equipment.
--   
--   <a>$sel:modelName:CreateInferenceScheduler'</a>,
--   <a>createInferenceScheduler_modelName</a> - The name of the previously
--   trained ML model being used to create the inference scheduler.
--   
--   <a>$sel:inferenceSchedulerName:CreateInferenceScheduler'</a>,
--   <a>createInferenceScheduler_inferenceSchedulerName</a> - The name of
--   the inference scheduler being created.
--   
--   <a>$sel:dataUploadFrequency:CreateInferenceScheduler'</a>,
--   <a>createInferenceScheduler_dataUploadFrequency</a> - How often data
--   is uploaded to the source S3 bucket for the input data. The value
--   chosen is the length of time between data uploads. For instance, if
--   you select 5 minutes, Amazon Lookout for Equipment will upload the
--   real-time data to the source bucket once every 5 minutes. This
--   frequency also determines how often Amazon Lookout for Equipment
--   starts a scheduled inference on your data. In this example, it starts
--   once every 5 minutes.
--   
--   <a>$sel:dataInputConfiguration:CreateInferenceScheduler'</a>,
--   <a>createInferenceScheduler_dataInputConfiguration</a> - Specifies
--   configuration information for the input data for the inference
--   scheduler, including delimiter, format, and dataset location.
--   
--   <a>$sel:dataOutputConfiguration:CreateInferenceScheduler'</a>,
--   <a>createInferenceScheduler_dataOutputConfiguration</a> - Specifies
--   configuration information for the output results for the inference
--   scheduler, including the S3 location for the output.
--   
--   <a>$sel:roleArn:CreateInferenceScheduler'</a>,
--   <a>createInferenceScheduler_roleArn</a> - The Amazon Resource Name
--   (ARN) of a role with permission to access the data source being used
--   for the inference.
--   
--   <a>$sel:clientToken:CreateInferenceScheduler'</a>,
--   <a>createInferenceScheduler_clientToken</a> - A unique identifier for
--   the request. If you do not set the client request token, Amazon
--   Lookout for Equipment generates one.
newCreateInferenceScheduler :: Text -> Text -> DataUploadFrequency -> InferenceInputConfiguration -> InferenceOutputConfiguration -> Text -> Text -> CreateInferenceScheduler

-- | A period of time (in minutes) by which inference on the data is
--   delayed after the data starts. For instance, if you select an offset
--   delay time of five minutes, inference will not begin on the data until
--   the first data measurement after the five minute mark. For example, if
--   five minutes is selected, the inference scheduler will wake up at the
--   configured frequency with the additional five minute delay time to
--   check the customer S3 bucket. The customer can upload data at the same
--   frequency and they don't need to stop and restart the scheduler when
--   uploading new data.
createInferenceScheduler_dataDelayOffsetInMinutes :: Lens' CreateInferenceScheduler (Maybe Natural)

-- | Any tags associated with the inference scheduler.
createInferenceScheduler_tags :: Lens' CreateInferenceScheduler (Maybe [Tag])

-- | Provides the identifier of the KMS key used to encrypt inference
--   scheduler data by Amazon Lookout for Equipment.
createInferenceScheduler_serverSideKmsKeyId :: Lens' CreateInferenceScheduler (Maybe Text)

-- | The name of the previously trained ML model being used to create the
--   inference scheduler.
createInferenceScheduler_modelName :: Lens' CreateInferenceScheduler Text

-- | The name of the inference scheduler being created.
createInferenceScheduler_inferenceSchedulerName :: Lens' CreateInferenceScheduler Text

-- | How often data is uploaded to the source S3 bucket for the input data.
--   The value chosen is the length of time between data uploads. For
--   instance, if you select 5 minutes, Amazon Lookout for Equipment will
--   upload the real-time data to the source bucket once every 5 minutes.
--   This frequency also determines how often Amazon Lookout for Equipment
--   starts a scheduled inference on your data. In this example, it starts
--   once every 5 minutes.
createInferenceScheduler_dataUploadFrequency :: Lens' CreateInferenceScheduler DataUploadFrequency

-- | Specifies configuration information for the input data for the
--   inference scheduler, including delimiter, format, and dataset
--   location.
createInferenceScheduler_dataInputConfiguration :: Lens' CreateInferenceScheduler InferenceInputConfiguration

-- | Specifies configuration information for the output results for the
--   inference scheduler, including the S3 location for the output.
createInferenceScheduler_dataOutputConfiguration :: Lens' CreateInferenceScheduler InferenceOutputConfiguration

-- | The Amazon Resource Name (ARN) of a role with permission to access the
--   data source being used for the inference.
createInferenceScheduler_roleArn :: Lens' CreateInferenceScheduler Text

-- | A unique identifier for the request. If you do not set the client
--   request token, Amazon Lookout for Equipment generates one.
createInferenceScheduler_clientToken :: Lens' CreateInferenceScheduler Text

-- | <i>See:</i> <a>newCreateInferenceSchedulerResponse</a> smart
--   constructor.
data CreateInferenceSchedulerResponse
CreateInferenceSchedulerResponse' :: Maybe InferenceSchedulerStatus -> Maybe Text -> Maybe Text -> Int -> CreateInferenceSchedulerResponse

-- | Indicates the status of the <tt>CreateInferenceScheduler</tt>
--   operation.
[$sel:status:CreateInferenceSchedulerResponse'] :: CreateInferenceSchedulerResponse -> Maybe InferenceSchedulerStatus

-- | The Amazon Resource Name (ARN) of the inference scheduler being
--   created.
[$sel:inferenceSchedulerArn:CreateInferenceSchedulerResponse'] :: CreateInferenceSchedulerResponse -> Maybe Text

-- | The name of inference scheduler being created.
[$sel:inferenceSchedulerName:CreateInferenceSchedulerResponse'] :: CreateInferenceSchedulerResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateInferenceSchedulerResponse'] :: CreateInferenceSchedulerResponse -> Int

-- | Create a value of <a>CreateInferenceSchedulerResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:CreateInferenceSchedulerResponse'</a>,
--   <a>createInferenceSchedulerResponse_status</a> - Indicates the status
--   of the <tt>CreateInferenceScheduler</tt> operation.
--   
--   <a>$sel:inferenceSchedulerArn:CreateInferenceSchedulerResponse'</a>,
--   <a>createInferenceSchedulerResponse_inferenceSchedulerArn</a> - The
--   Amazon Resource Name (ARN) of the inference scheduler being created.
--   
--   <a>$sel:inferenceSchedulerName:CreateInferenceScheduler'</a>,
--   <a>createInferenceSchedulerResponse_inferenceSchedulerName</a> - The
--   name of inference scheduler being created.
--   
--   <a>$sel:httpStatus:CreateInferenceSchedulerResponse'</a>,
--   <a>createInferenceSchedulerResponse_httpStatus</a> - The response's
--   http status code.
newCreateInferenceSchedulerResponse :: Int -> CreateInferenceSchedulerResponse

-- | Indicates the status of the <tt>CreateInferenceScheduler</tt>
--   operation.
createInferenceSchedulerResponse_status :: Lens' CreateInferenceSchedulerResponse (Maybe InferenceSchedulerStatus)

-- | The Amazon Resource Name (ARN) of the inference scheduler being
--   created.
createInferenceSchedulerResponse_inferenceSchedulerArn :: Lens' CreateInferenceSchedulerResponse (Maybe Text)

-- | The name of inference scheduler being created.
createInferenceSchedulerResponse_inferenceSchedulerName :: Lens' CreateInferenceSchedulerResponse (Maybe Text)

-- | The response's http status code.
createInferenceSchedulerResponse_httpStatus :: Lens' CreateInferenceSchedulerResponse Int
instance GHC.Generics.Generic Network.AWS.LookoutEquipment.CreateInferenceScheduler.CreateInferenceScheduler
instance GHC.Show.Show Network.AWS.LookoutEquipment.CreateInferenceScheduler.CreateInferenceScheduler
instance GHC.Read.Read Network.AWS.LookoutEquipment.CreateInferenceScheduler.CreateInferenceScheduler
instance GHC.Classes.Eq Network.AWS.LookoutEquipment.CreateInferenceScheduler.CreateInferenceScheduler
instance GHC.Generics.Generic Network.AWS.LookoutEquipment.CreateInferenceScheduler.CreateInferenceSchedulerResponse
instance GHC.Show.Show Network.AWS.LookoutEquipment.CreateInferenceScheduler.CreateInferenceSchedulerResponse
instance GHC.Read.Read Network.AWS.LookoutEquipment.CreateInferenceScheduler.CreateInferenceSchedulerResponse
instance GHC.Classes.Eq Network.AWS.LookoutEquipment.CreateInferenceScheduler.CreateInferenceSchedulerResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LookoutEquipment.CreateInferenceScheduler.CreateInferenceScheduler
instance Control.DeepSeq.NFData Network.AWS.LookoutEquipment.CreateInferenceScheduler.CreateInferenceSchedulerResponse
instance Data.Hashable.Class.Hashable Network.AWS.LookoutEquipment.CreateInferenceScheduler.CreateInferenceScheduler
instance Control.DeepSeq.NFData Network.AWS.LookoutEquipment.CreateInferenceScheduler.CreateInferenceScheduler
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LookoutEquipment.CreateInferenceScheduler.CreateInferenceScheduler
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LookoutEquipment.CreateInferenceScheduler.CreateInferenceScheduler
instance Network.AWS.Data.Path.ToPath Network.AWS.LookoutEquipment.CreateInferenceScheduler.CreateInferenceScheduler
instance Network.AWS.Data.Query.ToQuery Network.AWS.LookoutEquipment.CreateInferenceScheduler.CreateInferenceScheduler


-- | Creates a container for a collection of data being ingested for
--   analysis. The dataset contains the metadata describing where the data
--   is and what the data actually looks like. In other words, it contains
--   the location of the data source, the data schema, and other
--   information. A dataset also contains any tags associated with the
--   ingested data.
module Network.AWS.LookoutEquipment.CreateDataset

-- | <i>See:</i> <a>newCreateDataset</a> smart constructor.
data CreateDataset
CreateDataset' :: Maybe [Tag] -> Maybe Text -> Text -> DatasetSchema -> Text -> CreateDataset

-- | Any tags associated with the ingested data described in the dataset.
[$sel:tags:CreateDataset'] :: CreateDataset -> Maybe [Tag]

-- | Provides the identifier of the KMS key used to encrypt dataset data by
--   Amazon Lookout for Equipment.
[$sel:serverSideKmsKeyId:CreateDataset'] :: CreateDataset -> Maybe Text

-- | The name of the dataset being created.
[$sel:datasetName:CreateDataset'] :: CreateDataset -> Text

-- | A JSON description of the data that is in each time series dataset,
--   including names, column names, and data types.
[$sel:datasetSchema:CreateDataset'] :: CreateDataset -> DatasetSchema

-- | A unique identifier for the request. If you do not set the client
--   request token, Amazon Lookout for Equipment generates one.
[$sel:clientToken:CreateDataset'] :: CreateDataset -> Text

-- | Create a value of <a>CreateDataset</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:CreateDataset'</a>, <a>createDataset_tags</a> - Any tags
--   associated with the ingested data described in the dataset.
--   
--   <a>$sel:serverSideKmsKeyId:CreateDataset'</a>,
--   <a>createDataset_serverSideKmsKeyId</a> - Provides the identifier of
--   the KMS key used to encrypt dataset data by Amazon Lookout for
--   Equipment.
--   
--   <a>$sel:datasetName:CreateDataset'</a>,
--   <a>createDataset_datasetName</a> - The name of the dataset being
--   created.
--   
--   <a>$sel:datasetSchema:CreateDataset'</a>,
--   <a>createDataset_datasetSchema</a> - A JSON description of the data
--   that is in each time series dataset, including names, column names,
--   and data types.
--   
--   <a>$sel:clientToken:CreateDataset'</a>,
--   <a>createDataset_clientToken</a> - A unique identifier for the
--   request. If you do not set the client request token, Amazon Lookout
--   for Equipment generates one.
newCreateDataset :: Text -> DatasetSchema -> Text -> CreateDataset

-- | Any tags associated with the ingested data described in the dataset.
createDataset_tags :: Lens' CreateDataset (Maybe [Tag])

-- | Provides the identifier of the KMS key used to encrypt dataset data by
--   Amazon Lookout for Equipment.
createDataset_serverSideKmsKeyId :: Lens' CreateDataset (Maybe Text)

-- | The name of the dataset being created.
createDataset_datasetName :: Lens' CreateDataset Text

-- | A JSON description of the data that is in each time series dataset,
--   including names, column names, and data types.
createDataset_datasetSchema :: Lens' CreateDataset DatasetSchema

-- | A unique identifier for the request. If you do not set the client
--   request token, Amazon Lookout for Equipment generates one.
createDataset_clientToken :: Lens' CreateDataset Text

-- | <i>See:</i> <a>newCreateDatasetResponse</a> smart constructor.
data CreateDatasetResponse
CreateDatasetResponse' :: Maybe DatasetStatus -> Maybe Text -> Maybe Text -> Int -> CreateDatasetResponse

-- | Indicates the status of the <tt>CreateDataset</tt> operation.
[$sel:status:CreateDatasetResponse'] :: CreateDatasetResponse -> Maybe DatasetStatus

-- | The Amazon Resource Name (ARN) of the dataset being created.
[$sel:datasetArn:CreateDatasetResponse'] :: CreateDatasetResponse -> Maybe Text

-- | The name of the dataset being created.
[$sel:datasetName:CreateDatasetResponse'] :: CreateDatasetResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateDatasetResponse'] :: CreateDatasetResponse -> Int

-- | Create a value of <a>CreateDatasetResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:CreateDatasetResponse'</a>,
--   <a>createDatasetResponse_status</a> - Indicates the status of the
--   <tt>CreateDataset</tt> operation.
--   
--   <a>$sel:datasetArn:CreateDatasetResponse'</a>,
--   <a>createDatasetResponse_datasetArn</a> - The Amazon Resource Name
--   (ARN) of the dataset being created.
--   
--   <a>$sel:datasetName:CreateDataset'</a>,
--   <a>createDatasetResponse_datasetName</a> - The name of the dataset
--   being created.
--   
--   <a>$sel:httpStatus:CreateDatasetResponse'</a>,
--   <a>createDatasetResponse_httpStatus</a> - The response's http status
--   code.
newCreateDatasetResponse :: Int -> CreateDatasetResponse

-- | Indicates the status of the <tt>CreateDataset</tt> operation.
createDatasetResponse_status :: Lens' CreateDatasetResponse (Maybe DatasetStatus)

-- | The Amazon Resource Name (ARN) of the dataset being created.
createDatasetResponse_datasetArn :: Lens' CreateDatasetResponse (Maybe Text)

-- | The name of the dataset being created.
createDatasetResponse_datasetName :: Lens' CreateDatasetResponse (Maybe Text)

-- | The response's http status code.
createDatasetResponse_httpStatus :: Lens' CreateDatasetResponse Int
instance GHC.Generics.Generic Network.AWS.LookoutEquipment.CreateDataset.CreateDataset
instance GHC.Show.Show Network.AWS.LookoutEquipment.CreateDataset.CreateDataset
instance GHC.Read.Read Network.AWS.LookoutEquipment.CreateDataset.CreateDataset
instance GHC.Classes.Eq Network.AWS.LookoutEquipment.CreateDataset.CreateDataset
instance GHC.Generics.Generic Network.AWS.LookoutEquipment.CreateDataset.CreateDatasetResponse
instance GHC.Show.Show Network.AWS.LookoutEquipment.CreateDataset.CreateDatasetResponse
instance GHC.Read.Read Network.AWS.LookoutEquipment.CreateDataset.CreateDatasetResponse
instance GHC.Classes.Eq Network.AWS.LookoutEquipment.CreateDataset.CreateDatasetResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LookoutEquipment.CreateDataset.CreateDataset
instance Control.DeepSeq.NFData Network.AWS.LookoutEquipment.CreateDataset.CreateDatasetResponse
instance Data.Hashable.Class.Hashable Network.AWS.LookoutEquipment.CreateDataset.CreateDataset
instance Control.DeepSeq.NFData Network.AWS.LookoutEquipment.CreateDataset.CreateDataset
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LookoutEquipment.CreateDataset.CreateDataset
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LookoutEquipment.CreateDataset.CreateDataset
instance Network.AWS.Data.Path.ToPath Network.AWS.LookoutEquipment.CreateDataset.CreateDataset
instance Network.AWS.Data.Query.ToQuery Network.AWS.LookoutEquipment.CreateDataset.CreateDataset


-- | Removes a specific tag from a given resource. The tag is specified by
--   its key.
module Network.AWS.LookoutEquipment.UntagResource

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | The Amazon Resource Name (ARN) of the resource to which the tag is
--   currently associated.
[$sel:resourceArn:UntagResource'] :: UntagResource -> Text

-- | Specifies the key of the tag to be removed from a specified resource.
[$sel:tagKeys:UntagResource'] :: UntagResource -> [Text]

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The Amazon Resource Name (ARN) of
--   the resource to which the tag is currently associated.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> -
--   Specifies the key of the tag to be removed from a specified resource.
newUntagResource :: Text -> UntagResource

-- | The Amazon Resource Name (ARN) of the resource to which the tag is
--   currently associated.
untagResource_resourceArn :: Lens' UntagResource Text

-- | Specifies the key of the tag to be removed from a specified resource.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:UntagResourceResponse'] :: UntagResourceResponse -> Int

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int
instance GHC.Generics.Generic Network.AWS.LookoutEquipment.UntagResource.UntagResource
instance GHC.Show.Show Network.AWS.LookoutEquipment.UntagResource.UntagResource
instance GHC.Read.Read Network.AWS.LookoutEquipment.UntagResource.UntagResource
instance GHC.Classes.Eq Network.AWS.LookoutEquipment.UntagResource.UntagResource
instance GHC.Generics.Generic Network.AWS.LookoutEquipment.UntagResource.UntagResourceResponse
instance GHC.Show.Show Network.AWS.LookoutEquipment.UntagResource.UntagResourceResponse
instance GHC.Read.Read Network.AWS.LookoutEquipment.UntagResource.UntagResourceResponse
instance GHC.Classes.Eq Network.AWS.LookoutEquipment.UntagResource.UntagResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LookoutEquipment.UntagResource.UntagResource
instance Control.DeepSeq.NFData Network.AWS.LookoutEquipment.UntagResource.UntagResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.LookoutEquipment.UntagResource.UntagResource
instance Control.DeepSeq.NFData Network.AWS.LookoutEquipment.UntagResource.UntagResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LookoutEquipment.UntagResource.UntagResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LookoutEquipment.UntagResource.UntagResource
instance Network.AWS.Data.Path.ToPath Network.AWS.LookoutEquipment.UntagResource.UntagResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.LookoutEquipment.UntagResource.UntagResource


-- | Updates an inference scheduler.
module Network.AWS.LookoutEquipment.UpdateInferenceScheduler

-- | <i>See:</i> <a>newUpdateInferenceScheduler</a> smart constructor.
data UpdateInferenceScheduler
UpdateInferenceScheduler' :: Maybe DataUploadFrequency -> Maybe Natural -> Maybe InferenceOutputConfiguration -> Maybe InferenceInputConfiguration -> Maybe Text -> Text -> UpdateInferenceScheduler

-- | How often data is uploaded to the source S3 bucket for the input data.
--   The value chosen is the length of time between data uploads. For
--   instance, if you select 5 minutes, Amazon Lookout for Equipment will
--   upload the real-time data to the source bucket once every 5 minutes.
--   This frequency also determines how often Amazon Lookout for Equipment
--   starts a scheduled inference on your data. In this example, it starts
--   once every 5 minutes.
[$sel:dataUploadFrequency:UpdateInferenceScheduler'] :: UpdateInferenceScheduler -> Maybe DataUploadFrequency

-- | A period of time (in minutes) by which inference on the data is
--   delayed after the data starts. For instance, if you select an offset
--   delay time of five minutes, inference will not begin on the data until
--   the first data measurement after the five minute mark. For example, if
--   five minutes is selected, the inference scheduler will wake up at the
--   configured frequency with the additional five minute delay time to
--   check the customer S3 bucket. The customer can upload data at the same
--   frequency and they don't need to stop and restart the scheduler when
--   uploading new data.
[$sel:dataDelayOffsetInMinutes:UpdateInferenceScheduler'] :: UpdateInferenceScheduler -> Maybe Natural

-- | Specifies information for the output results from the inference
--   scheduler, including the output S3 location.
[$sel:dataOutputConfiguration:UpdateInferenceScheduler'] :: UpdateInferenceScheduler -> Maybe InferenceOutputConfiguration

-- | Specifies information for the input data for the inference scheduler,
--   including delimiter, format, and dataset location.
[$sel:dataInputConfiguration:UpdateInferenceScheduler'] :: UpdateInferenceScheduler -> Maybe InferenceInputConfiguration

-- | The Amazon Resource Name (ARN) of a role with permission to access the
--   data source for the inference scheduler.
[$sel:roleArn:UpdateInferenceScheduler'] :: UpdateInferenceScheduler -> Maybe Text

-- | The name of the inference scheduler to be updated.
[$sel:inferenceSchedulerName:UpdateInferenceScheduler'] :: UpdateInferenceScheduler -> Text

-- | Create a value of <a>UpdateInferenceScheduler</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataUploadFrequency:UpdateInferenceScheduler'</a>,
--   <a>updateInferenceScheduler_dataUploadFrequency</a> - How often data
--   is uploaded to the source S3 bucket for the input data. The value
--   chosen is the length of time between data uploads. For instance, if
--   you select 5 minutes, Amazon Lookout for Equipment will upload the
--   real-time data to the source bucket once every 5 minutes. This
--   frequency also determines how often Amazon Lookout for Equipment
--   starts a scheduled inference on your data. In this example, it starts
--   once every 5 minutes.
--   
--   <a>$sel:dataDelayOffsetInMinutes:UpdateInferenceScheduler'</a>,
--   <a>updateInferenceScheduler_dataDelayOffsetInMinutes</a> - A period of
--   time (in minutes) by which inference on the data is delayed after the
--   data starts. For instance, if you select an offset delay time of five
--   minutes, inference will not begin on the data until the first data
--   measurement after the five minute mark. For example, if five minutes
--   is selected, the inference scheduler will wake up at the configured
--   frequency with the additional five minute delay time to check the
--   customer S3 bucket. The customer can upload data at the same frequency
--   and they don't need to stop and restart the scheduler when uploading
--   new data.
--   
--   <a>$sel:dataOutputConfiguration:UpdateInferenceScheduler'</a>,
--   <a>updateInferenceScheduler_dataOutputConfiguration</a> - Specifies
--   information for the output results from the inference scheduler,
--   including the output S3 location.
--   
--   <a>$sel:dataInputConfiguration:UpdateInferenceScheduler'</a>,
--   <a>updateInferenceScheduler_dataInputConfiguration</a> - Specifies
--   information for the input data for the inference scheduler, including
--   delimiter, format, and dataset location.
--   
--   <a>$sel:roleArn:UpdateInferenceScheduler'</a>,
--   <a>updateInferenceScheduler_roleArn</a> - The Amazon Resource Name
--   (ARN) of a role with permission to access the data source for the
--   inference scheduler.
--   
--   <a>$sel:inferenceSchedulerName:UpdateInferenceScheduler'</a>,
--   <a>updateInferenceScheduler_inferenceSchedulerName</a> - The name of
--   the inference scheduler to be updated.
newUpdateInferenceScheduler :: Text -> UpdateInferenceScheduler

-- | How often data is uploaded to the source S3 bucket for the input data.
--   The value chosen is the length of time between data uploads. For
--   instance, if you select 5 minutes, Amazon Lookout for Equipment will
--   upload the real-time data to the source bucket once every 5 minutes.
--   This frequency also determines how often Amazon Lookout for Equipment
--   starts a scheduled inference on your data. In this example, it starts
--   once every 5 minutes.
updateInferenceScheduler_dataUploadFrequency :: Lens' UpdateInferenceScheduler (Maybe DataUploadFrequency)

-- | A period of time (in minutes) by which inference on the data is
--   delayed after the data starts. For instance, if you select an offset
--   delay time of five minutes, inference will not begin on the data until
--   the first data measurement after the five minute mark. For example, if
--   five minutes is selected, the inference scheduler will wake up at the
--   configured frequency with the additional five minute delay time to
--   check the customer S3 bucket. The customer can upload data at the same
--   frequency and they don't need to stop and restart the scheduler when
--   uploading new data.
updateInferenceScheduler_dataDelayOffsetInMinutes :: Lens' UpdateInferenceScheduler (Maybe Natural)

-- | Specifies information for the output results from the inference
--   scheduler, including the output S3 location.
updateInferenceScheduler_dataOutputConfiguration :: Lens' UpdateInferenceScheduler (Maybe InferenceOutputConfiguration)

-- | Specifies information for the input data for the inference scheduler,
--   including delimiter, format, and dataset location.
updateInferenceScheduler_dataInputConfiguration :: Lens' UpdateInferenceScheduler (Maybe InferenceInputConfiguration)

-- | The Amazon Resource Name (ARN) of a role with permission to access the
--   data source for the inference scheduler.
updateInferenceScheduler_roleArn :: Lens' UpdateInferenceScheduler (Maybe Text)

-- | The name of the inference scheduler to be updated.
updateInferenceScheduler_inferenceSchedulerName :: Lens' UpdateInferenceScheduler Text

-- | <i>See:</i> <a>newUpdateInferenceSchedulerResponse</a> smart
--   constructor.
data UpdateInferenceSchedulerResponse
UpdateInferenceSchedulerResponse' :: UpdateInferenceSchedulerResponse

-- | Create a value of <a>UpdateInferenceSchedulerResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUpdateInferenceSchedulerResponse :: UpdateInferenceSchedulerResponse
instance GHC.Generics.Generic Network.AWS.LookoutEquipment.UpdateInferenceScheduler.UpdateInferenceScheduler
instance GHC.Show.Show Network.AWS.LookoutEquipment.UpdateInferenceScheduler.UpdateInferenceScheduler
instance GHC.Read.Read Network.AWS.LookoutEquipment.UpdateInferenceScheduler.UpdateInferenceScheduler
instance GHC.Classes.Eq Network.AWS.LookoutEquipment.UpdateInferenceScheduler.UpdateInferenceScheduler
instance GHC.Generics.Generic Network.AWS.LookoutEquipment.UpdateInferenceScheduler.UpdateInferenceSchedulerResponse
instance GHC.Show.Show Network.AWS.LookoutEquipment.UpdateInferenceScheduler.UpdateInferenceSchedulerResponse
instance GHC.Read.Read Network.AWS.LookoutEquipment.UpdateInferenceScheduler.UpdateInferenceSchedulerResponse
instance GHC.Classes.Eq Network.AWS.LookoutEquipment.UpdateInferenceScheduler.UpdateInferenceSchedulerResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LookoutEquipment.UpdateInferenceScheduler.UpdateInferenceScheduler
instance Control.DeepSeq.NFData Network.AWS.LookoutEquipment.UpdateInferenceScheduler.UpdateInferenceSchedulerResponse
instance Data.Hashable.Class.Hashable Network.AWS.LookoutEquipment.UpdateInferenceScheduler.UpdateInferenceScheduler
instance Control.DeepSeq.NFData Network.AWS.LookoutEquipment.UpdateInferenceScheduler.UpdateInferenceScheduler
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LookoutEquipment.UpdateInferenceScheduler.UpdateInferenceScheduler
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LookoutEquipment.UpdateInferenceScheduler.UpdateInferenceScheduler
instance Network.AWS.Data.Path.ToPath Network.AWS.LookoutEquipment.UpdateInferenceScheduler.UpdateInferenceScheduler
instance Network.AWS.Data.Query.ToQuery Network.AWS.LookoutEquipment.UpdateInferenceScheduler.UpdateInferenceScheduler


module Network.AWS.LookoutEquipment.Lens

-- | The name of the inference scheduler to be started.
startInferenceScheduler_inferenceSchedulerName :: Lens' StartInferenceScheduler Text

-- | Indicates the status of the inference scheduler.
startInferenceSchedulerResponse_status :: Lens' StartInferenceSchedulerResponse (Maybe InferenceSchedulerStatus)

-- | The Amazon Resource Name (ARN) of the ML model being used by the
--   inference scheduler.
startInferenceSchedulerResponse_modelArn :: Lens' StartInferenceSchedulerResponse (Maybe Text)

-- | The name of the ML model being used by the inference scheduler.
startInferenceSchedulerResponse_modelName :: Lens' StartInferenceSchedulerResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the inference scheduler being
--   started.
startInferenceSchedulerResponse_inferenceSchedulerArn :: Lens' StartInferenceSchedulerResponse (Maybe Text)

-- | The name of the inference scheduler being started.
startInferenceSchedulerResponse_inferenceSchedulerName :: Lens' StartInferenceSchedulerResponse (Maybe Text)

-- | The response's http status code.
startInferenceSchedulerResponse_httpStatus :: Lens' StartInferenceSchedulerResponse Int

-- | The name of the dataset to be described.
describeDataset_datasetName :: Lens' DescribeDataset Text

-- | Specifies the S3 location configuration for the data input for the
--   data ingestion job.
describeDatasetResponse_ingestionInputConfiguration :: Lens' DescribeDatasetResponse (Maybe IngestionInputConfiguration)

-- | Indicates the status of the dataset.
describeDatasetResponse_status :: Lens' DescribeDatasetResponse (Maybe DatasetStatus)

-- | The Amazon Resource Name (ARN) of the dataset being described.
describeDatasetResponse_datasetArn :: Lens' DescribeDatasetResponse (Maybe Text)

-- | Specifies the time the dataset was last updated, if it was.
describeDatasetResponse_lastUpdatedAt :: Lens' DescribeDatasetResponse (Maybe UTCTime)

-- | Specifies the time the dataset was created in Amazon Lookout for
--   Equipment.
describeDatasetResponse_createdAt :: Lens' DescribeDatasetResponse (Maybe UTCTime)

-- | A JSON description of the data that is in each time series dataset,
--   including names, column names, and data types.
describeDatasetResponse_schema :: Lens' DescribeDatasetResponse (Maybe Text)

-- | The name of the dataset being described.
describeDatasetResponse_datasetName :: Lens' DescribeDatasetResponse (Maybe Text)

-- | Provides the identifier of the KMS key used to encrypt dataset data by
--   Amazon Lookout for Equipment.
describeDatasetResponse_serverSideKmsKeyId :: Lens' DescribeDatasetResponse (Maybe Text)

-- | The response's http status code.
describeDatasetResponse_httpStatus :: Lens' DescribeDatasetResponse Int

-- | The Amazon Resource Name (ARN) of the resource (such as the dataset or
--   model) that is the focus of the <tt>ListTagsForResource</tt>
--   operation.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | Any tags associated with the resource.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe [Tag])

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int

-- | The job ID of the data ingestion job.
describeDataIngestionJob_jobId :: Lens' DescribeDataIngestionJob Text

-- | Specifies the S3 location configuration for the data input for the
--   data ingestion job.
describeDataIngestionJobResponse_ingestionInputConfiguration :: Lens' DescribeDataIngestionJobResponse (Maybe IngestionInputConfiguration)

-- | Indicates the status of the <tt>DataIngestionJob</tt> operation.
describeDataIngestionJobResponse_status :: Lens' DescribeDataIngestionJobResponse (Maybe IngestionJobStatus)

-- | The Amazon Resource Name (ARN) of the dataset being used in the data
--   ingestion job.
describeDataIngestionJobResponse_datasetArn :: Lens' DescribeDataIngestionJobResponse (Maybe Text)

-- | Specifies the reason for failure when a data ingestion job has failed.
describeDataIngestionJobResponse_failedReason :: Lens' DescribeDataIngestionJobResponse (Maybe Text)

-- | Indicates the job ID of the data ingestion job.
describeDataIngestionJobResponse_jobId :: Lens' DescribeDataIngestionJobResponse (Maybe Text)

-- | The time at which the data ingestion job was created.
describeDataIngestionJobResponse_createdAt :: Lens' DescribeDataIngestionJobResponse (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of an IAM role with permission to
--   access the data source being ingested.
describeDataIngestionJobResponse_roleArn :: Lens' DescribeDataIngestionJobResponse (Maybe Text)

-- | The response's http status code.
describeDataIngestionJobResponse_httpStatus :: Lens' DescribeDataIngestionJobResponse Int

-- | The configuration is the <tt>TargetSamplingRate</tt>, which is the
--   sampling rate of the data after post processing by Amazon Lookout for
--   Equipment. For example, if you provide data that has been collected at
--   a 1 second level and you want the system to resample the data at a 1
--   minute rate before training, the <tt>TargetSamplingRate</tt> is 1
--   minute.
--   
--   When providing a value for the <tt>TargetSamplingRate</tt>, you must
--   attach the prefix "PT" to the rate you want. The value for a 1 second
--   rate is therefore <i>PT1S</i>, the value for a 15 minute rate is
--   <i>PT15M</i>, and the value for a 1 hour rate is <i>PT1H</i>
createModel_dataPreProcessingConfiguration :: Lens' CreateModel (Maybe DataPreProcessingConfiguration)

-- | Indicates the time reference in the dataset that should be used to end
--   the subset of training data for the ML model.
createModel_trainingDataEndTime :: Lens' CreateModel (Maybe UTCTime)

-- | The data schema for the ML model being created.
createModel_datasetSchema :: Lens' CreateModel (Maybe DatasetSchema)

-- | Indicates the time reference in the dataset that should be used to
--   begin the subset of evaluation data for the ML model.
createModel_evaluationDataStartTime :: Lens' CreateModel (Maybe UTCTime)

-- | Indicates that the asset associated with this sensor has been shut
--   off. As long as this condition is met, Lookout for Equipment will not
--   use data from this asset for training, evaluation, or inference.
createModel_offCondition :: Lens' CreateModel (Maybe Text)

-- | Indicates the time reference in the dataset that should be used to end
--   the subset of evaluation data for the ML model.
createModel_evaluationDataEndTime :: Lens' CreateModel (Maybe UTCTime)

-- | Indicates the time reference in the dataset that should be used to
--   begin the subset of training data for the ML model.
createModel_trainingDataStartTime :: Lens' CreateModel (Maybe UTCTime)

-- | The input configuration for the labels being used for the ML model
--   that's being created.
createModel_labelsInputConfiguration :: Lens' CreateModel (Maybe LabelsInputConfiguration)

-- | Any tags associated with the ML model being created.
createModel_tags :: Lens' CreateModel (Maybe [Tag])

-- | Provides the identifier of the KMS key used to encrypt model data by
--   Amazon Lookout for Equipment.
createModel_serverSideKmsKeyId :: Lens' CreateModel (Maybe Text)

-- | The Amazon Resource Name (ARN) of a role with permission to access the
--   data source being used to create the ML model.
createModel_roleArn :: Lens' CreateModel (Maybe Text)

-- | The name for the ML model to be created.
createModel_modelName :: Lens' CreateModel Text

-- | The name of the dataset for the ML model being created.
createModel_datasetName :: Lens' CreateModel Text

-- | A unique identifier for the request. If you do not set the client
--   request token, Amazon Lookout for Equipment generates one.
createModel_clientToken :: Lens' CreateModel Text

-- | Indicates the status of the <tt>CreateModel</tt> operation.
createModelResponse_status :: Lens' CreateModelResponse (Maybe ModelStatus)

-- | The Amazon Resource Name (ARN) of the model being created.
createModelResponse_modelArn :: Lens' CreateModelResponse (Maybe Text)

-- | The response's http status code.
createModelResponse_httpStatus :: Lens' CreateModelResponse Int

-- | The name of the dataset to be deleted.
deleteDataset_datasetName :: Lens' DeleteDataset Text

-- | Any tags associated with the ingested data described in the dataset.
createDataset_tags :: Lens' CreateDataset (Maybe [Tag])

-- | Provides the identifier of the KMS key used to encrypt dataset data by
--   Amazon Lookout for Equipment.
createDataset_serverSideKmsKeyId :: Lens' CreateDataset (Maybe Text)

-- | The name of the dataset being created.
createDataset_datasetName :: Lens' CreateDataset Text

-- | A JSON description of the data that is in each time series dataset,
--   including names, column names, and data types.
createDataset_datasetSchema :: Lens' CreateDataset DatasetSchema

-- | A unique identifier for the request. If you do not set the client
--   request token, Amazon Lookout for Equipment generates one.
createDataset_clientToken :: Lens' CreateDataset Text

-- | Indicates the status of the <tt>CreateDataset</tt> operation.
createDatasetResponse_status :: Lens' CreateDatasetResponse (Maybe DatasetStatus)

-- | The Amazon Resource Name (ARN) of the dataset being created.
createDatasetResponse_datasetArn :: Lens' CreateDatasetResponse (Maybe Text)

-- | The name of the dataset being created.
createDatasetResponse_datasetName :: Lens' CreateDatasetResponse (Maybe Text)

-- | The response's http status code.
createDatasetResponse_httpStatus :: Lens' CreateDatasetResponse Int

-- | The name of the ML model to be deleted.
deleteModel_modelName :: Lens' DeleteModel Text

-- | The status of the ML model.
listModels_status :: Lens' ListModels (Maybe ModelStatus)

-- | An opaque pagination token indicating where to continue the listing of
--   ML models.
listModels_nextToken :: Lens' ListModels (Maybe Text)

-- | The beginning of the name of the dataset of the ML models to be
--   listed.
listModels_datasetNameBeginsWith :: Lens' ListModels (Maybe Text)

-- | The beginning of the name of the ML models being listed.
listModels_modelNameBeginsWith :: Lens' ListModels (Maybe Text)

-- | Specifies the maximum number of ML models to list.
listModels_maxResults :: Lens' ListModels (Maybe Natural)

-- | An opaque pagination token indicating where to continue the listing of
--   ML models.
listModelsResponse_nextToken :: Lens' ListModelsResponse (Maybe Text)

-- | Provides information on the specified model, including created time,
--   model and dataset ARNs, and status.
listModelsResponse_modelSummaries :: Lens' ListModelsResponse (Maybe [ModelSummary])

-- | The response's http status code.
listModelsResponse_httpStatus :: Lens' ListModelsResponse Int

-- | The name of the inference scheduler to be stopped.
stopInferenceScheduler_inferenceSchedulerName :: Lens' StopInferenceScheduler Text

-- | Indicates the status of the inference scheduler.
stopInferenceSchedulerResponse_status :: Lens' StopInferenceSchedulerResponse (Maybe InferenceSchedulerStatus)

-- | The Amazon Resource Name (ARN) of the ML model used by the inference
--   scheduler being stopped.
stopInferenceSchedulerResponse_modelArn :: Lens' StopInferenceSchedulerResponse (Maybe Text)

-- | The name of the ML model used by the inference scheduler being
--   stopped.
stopInferenceSchedulerResponse_modelName :: Lens' StopInferenceSchedulerResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the inference schedule being
--   stopped.
stopInferenceSchedulerResponse_inferenceSchedulerArn :: Lens' StopInferenceSchedulerResponse (Maybe Text)

-- | The name of the inference scheduler being stopped.
stopInferenceSchedulerResponse_inferenceSchedulerName :: Lens' StopInferenceSchedulerResponse (Maybe Text)

-- | The response's http status code.
stopInferenceSchedulerResponse_httpStatus :: Lens' StopInferenceSchedulerResponse Int

-- | Indicates the status of the data ingestion job.
listDataIngestionJobs_status :: Lens' ListDataIngestionJobs (Maybe IngestionJobStatus)

-- | An opaque pagination token indicating where to continue the listing of
--   data ingestion jobs.
listDataIngestionJobs_nextToken :: Lens' ListDataIngestionJobs (Maybe Text)

-- | The name of the dataset being used for the data ingestion job.
listDataIngestionJobs_datasetName :: Lens' ListDataIngestionJobs (Maybe Text)

-- | Specifies the maximum number of data ingestion jobs to list.
listDataIngestionJobs_maxResults :: Lens' ListDataIngestionJobs (Maybe Natural)

-- | An opaque pagination token indicating where to continue the listing of
--   data ingestion jobs.
listDataIngestionJobsResponse_nextToken :: Lens' ListDataIngestionJobsResponse (Maybe Text)

-- | Specifies information about the specific data ingestion job, including
--   dataset name and status.
listDataIngestionJobsResponse_dataIngestionJobSummaries :: Lens' ListDataIngestionJobsResponse (Maybe [DataIngestionJobSummary])

-- | The response's http status code.
listDataIngestionJobsResponse_httpStatus :: Lens' ListDataIngestionJobsResponse Int

-- | The name of the ML model to be described.
describeModel_modelName :: Lens' DescribeModel Text

-- | Specifies the current status of the model being described. Status
--   describes the status of the most recent action of the model.
describeModelResponse_status :: Lens' DescribeModelResponse (Maybe ModelStatus)

-- | The configuration is the <tt>TargetSamplingRate</tt>, which is the
--   sampling rate of the data after post processing by Amazon Lookout for
--   Equipment. For example, if you provide data that has been collected at
--   a 1 second level and you want the system to resample the data at a 1
--   minute rate before training, the <tt>TargetSamplingRate</tt> is 1
--   minute.
--   
--   When providing a value for the <tt>TargetSamplingRate</tt>, you must
--   attach the prefix "PT" to the rate you want. The value for a 1 second
--   rate is therefore <i>PT1S</i>, the value for a 15 minute rate is
--   <i>PT15M</i>, and the value for a 1 hour rate is <i>PT1H</i>
describeModelResponse_dataPreProcessingConfiguration :: Lens' DescribeModelResponse (Maybe DataPreProcessingConfiguration)

-- | Indicates the time at which the training of the ML model began.
describeModelResponse_trainingExecutionStartTime :: Lens' DescribeModelResponse (Maybe UTCTime)

-- | The Amazon Resouce Name (ARN) of the dataset used to create the ML
--   model being described.
describeModelResponse_datasetArn :: Lens' DescribeModelResponse (Maybe Text)

-- | If the training of the ML model failed, this indicates the reason for
--   that failure.
describeModelResponse_failedReason :: Lens' DescribeModelResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the ML model being described.
describeModelResponse_modelArn :: Lens' DescribeModelResponse (Maybe Text)

-- | Indicates the last time the ML model was updated. The type of update
--   is not specified.
describeModelResponse_lastUpdatedTime :: Lens' DescribeModelResponse (Maybe UTCTime)

-- | Indicates the time reference in the dataset that was used to end the
--   subset of training data for the ML model.
describeModelResponse_trainingDataEndTime :: Lens' DescribeModelResponse (Maybe UTCTime)

-- | Indicates the time and date at which the ML model was created.
describeModelResponse_createdAt :: Lens' DescribeModelResponse (Maybe UTCTime)

-- | The name of the ML model being described.
describeModelResponse_modelName :: Lens' DescribeModelResponse (Maybe Text)

-- | The Model Metrics show an aggregated summary of the model's
--   performance within the evaluation time range. This is the JSON content
--   of the metrics created when evaluating the model.
describeModelResponse_modelMetrics :: Lens' DescribeModelResponse (Maybe Text)

-- | Indicates the time reference in the dataset that was used to begin the
--   subset of evaluation data for the ML model.
describeModelResponse_evaluationDataStartTime :: Lens' DescribeModelResponse (Maybe UTCTime)

-- | A JSON description of the data that is in each time series dataset,
--   including names, column names, and data types.
describeModelResponse_schema :: Lens' DescribeModelResponse (Maybe Text)

-- | Indicates that the asset associated with this sensor has been shut
--   off. As long as this condition is met, Lookout for Equipment will not
--   use data from this asset for training, evaluation, or inference.
describeModelResponse_offCondition :: Lens' DescribeModelResponse (Maybe Text)

-- | Indicates the time reference in the dataset that was used to end the
--   subset of evaluation data for the ML model.
describeModelResponse_evaluationDataEndTime :: Lens' DescribeModelResponse (Maybe UTCTime)

-- | The name of the dataset being used by the ML being described.
describeModelResponse_datasetName :: Lens' DescribeModelResponse (Maybe Text)

-- | Indicates the time reference in the dataset that was used to begin the
--   subset of training data for the ML model.
describeModelResponse_trainingDataStartTime :: Lens' DescribeModelResponse (Maybe UTCTime)

-- | Indicates the time at which the training of the ML model was
--   completed.
describeModelResponse_trainingExecutionEndTime :: Lens' DescribeModelResponse (Maybe UTCTime)

-- | Specifies configuration information about the labels input, including
--   its S3 location.
describeModelResponse_labelsInputConfiguration :: Lens' DescribeModelResponse (Maybe LabelsInputConfiguration)

-- | Provides the identifier of the KMS key used to encrypt model data by
--   Amazon Lookout for Equipment.
describeModelResponse_serverSideKmsKeyId :: Lens' DescribeModelResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of a role with permission to access the
--   data source for the ML model being described.
describeModelResponse_roleArn :: Lens' DescribeModelResponse (Maybe Text)

-- | The response's http status code.
describeModelResponse_httpStatus :: Lens' DescribeModelResponse Int

-- | The name of the dataset being used by the data ingestion job.
startDataIngestionJob_datasetName :: Lens' StartDataIngestionJob Text

-- | Specifies information for the input data for the data ingestion job,
--   including dataset S3 location.
startDataIngestionJob_ingestionInputConfiguration :: Lens' StartDataIngestionJob IngestionInputConfiguration

-- | The Amazon Resource Name (ARN) of a role with permission to access the
--   data source for the data ingestion job.
startDataIngestionJob_roleArn :: Lens' StartDataIngestionJob Text

-- | A unique identifier for the request. If you do not set the client
--   request token, Amazon Lookout for Equipment generates one.
startDataIngestionJob_clientToken :: Lens' StartDataIngestionJob Text

-- | Indicates the status of the <tt>StartDataIngestionJob</tt> operation.
startDataIngestionJobResponse_status :: Lens' StartDataIngestionJobResponse (Maybe IngestionJobStatus)

-- | Indicates the job ID of the data ingestion job.
startDataIngestionJobResponse_jobId :: Lens' StartDataIngestionJobResponse (Maybe Text)

-- | The response's http status code.
startDataIngestionJobResponse_httpStatus :: Lens' StartDataIngestionJobResponse Int

-- | The name of the ML model used by the inference scheduler to be listed.
listInferenceSchedulers_modelName :: Lens' ListInferenceSchedulers (Maybe Text)

-- | An opaque pagination token indicating where to continue the listing of
--   inference schedulers.
listInferenceSchedulers_nextToken :: Lens' ListInferenceSchedulers (Maybe Text)

-- | The beginning of the name of the inference schedulers to be listed.
listInferenceSchedulers_inferenceSchedulerNameBeginsWith :: Lens' ListInferenceSchedulers (Maybe Text)

-- | Specifies the maximum number of inference schedulers to list.
listInferenceSchedulers_maxResults :: Lens' ListInferenceSchedulers (Maybe Natural)

-- | Provides information about the specified inference scheduler,
--   including data upload frequency, model name and ARN, and status.
listInferenceSchedulersResponse_inferenceSchedulerSummaries :: Lens' ListInferenceSchedulersResponse (Maybe [InferenceSchedulerSummary])

-- | An opaque pagination token indicating where to continue the listing of
--   inference schedulers.
listInferenceSchedulersResponse_nextToken :: Lens' ListInferenceSchedulersResponse (Maybe Text)

-- | The response's http status code.
listInferenceSchedulersResponse_httpStatus :: Lens' ListInferenceSchedulersResponse Int

-- | How often data is uploaded to the source S3 bucket for the input data.
--   The value chosen is the length of time between data uploads. For
--   instance, if you select 5 minutes, Amazon Lookout for Equipment will
--   upload the real-time data to the source bucket once every 5 minutes.
--   This frequency also determines how often Amazon Lookout for Equipment
--   starts a scheduled inference on your data. In this example, it starts
--   once every 5 minutes.
updateInferenceScheduler_dataUploadFrequency :: Lens' UpdateInferenceScheduler (Maybe DataUploadFrequency)

-- | A period of time (in minutes) by which inference on the data is
--   delayed after the data starts. For instance, if you select an offset
--   delay time of five minutes, inference will not begin on the data until
--   the first data measurement after the five minute mark. For example, if
--   five minutes is selected, the inference scheduler will wake up at the
--   configured frequency with the additional five minute delay time to
--   check the customer S3 bucket. The customer can upload data at the same
--   frequency and they don't need to stop and restart the scheduler when
--   uploading new data.
updateInferenceScheduler_dataDelayOffsetInMinutes :: Lens' UpdateInferenceScheduler (Maybe Natural)

-- | Specifies information for the output results from the inference
--   scheduler, including the output S3 location.
updateInferenceScheduler_dataOutputConfiguration :: Lens' UpdateInferenceScheduler (Maybe InferenceOutputConfiguration)

-- | Specifies information for the input data for the inference scheduler,
--   including delimiter, format, and dataset location.
updateInferenceScheduler_dataInputConfiguration :: Lens' UpdateInferenceScheduler (Maybe InferenceInputConfiguration)

-- | The Amazon Resource Name (ARN) of a role with permission to access the
--   data source for the inference scheduler.
updateInferenceScheduler_roleArn :: Lens' UpdateInferenceScheduler (Maybe Text)

-- | The name of the inference scheduler to be updated.
updateInferenceScheduler_inferenceSchedulerName :: Lens' UpdateInferenceScheduler Text

-- | The name of the inference scheduler to be deleted.
deleteInferenceScheduler_inferenceSchedulerName :: Lens' DeleteInferenceScheduler Text

-- | The Amazon Resource Name (ARN) of the specific resource to which the
--   tag should be associated.
tagResource_resourceArn :: Lens' TagResource Text

-- | The tag or tags to be associated with a specific resource. Both the
--   tag key and value are specified.
tagResource_tags :: Lens' TagResource [Tag]

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int

-- | The status of the inference execution.
listInferenceExecutions_status :: Lens' ListInferenceExecutions (Maybe InferenceExecutionStatus)

-- | The time reference in the inferenced dataset before which Amazon
--   Lookout for Equipment stopped the inference execution.
listInferenceExecutions_dataEndTimeBefore :: Lens' ListInferenceExecutions (Maybe UTCTime)

-- | An opaque pagination token indicating where to continue the listing of
--   inference executions.
listInferenceExecutions_nextToken :: Lens' ListInferenceExecutions (Maybe Text)

-- | Specifies the maximum number of inference executions to list.
listInferenceExecutions_maxResults :: Lens' ListInferenceExecutions (Maybe Natural)

-- | The time reference in the inferenced dataset after which Amazon
--   Lookout for Equipment started the inference execution.
listInferenceExecutions_dataStartTimeAfter :: Lens' ListInferenceExecutions (Maybe UTCTime)

-- | The name of the inference scheduler for the inference execution
--   listed.
listInferenceExecutions_inferenceSchedulerName :: Lens' ListInferenceExecutions Text

-- | An opaque pagination token indicating where to continue the listing of
--   inference executions.
listInferenceExecutionsResponse_nextToken :: Lens' ListInferenceExecutionsResponse (Maybe Text)

-- | Provides an array of information about the individual inference
--   executions returned from the <tt>ListInferenceExecutions</tt>
--   operation, including model used, inference scheduler, data
--   configuration, and so on.
listInferenceExecutionsResponse_inferenceExecutionSummaries :: Lens' ListInferenceExecutionsResponse (Maybe [InferenceExecutionSummary])

-- | The response's http status code.
listInferenceExecutionsResponse_httpStatus :: Lens' ListInferenceExecutionsResponse Int

-- | A period of time (in minutes) by which inference on the data is
--   delayed after the data starts. For instance, if you select an offset
--   delay time of five minutes, inference will not begin on the data until
--   the first data measurement after the five minute mark. For example, if
--   five minutes is selected, the inference scheduler will wake up at the
--   configured frequency with the additional five minute delay time to
--   check the customer S3 bucket. The customer can upload data at the same
--   frequency and they don't need to stop and restart the scheduler when
--   uploading new data.
createInferenceScheduler_dataDelayOffsetInMinutes :: Lens' CreateInferenceScheduler (Maybe Natural)

-- | Any tags associated with the inference scheduler.
createInferenceScheduler_tags :: Lens' CreateInferenceScheduler (Maybe [Tag])

-- | Provides the identifier of the KMS key used to encrypt inference
--   scheduler data by Amazon Lookout for Equipment.
createInferenceScheduler_serverSideKmsKeyId :: Lens' CreateInferenceScheduler (Maybe Text)

-- | The name of the previously trained ML model being used to create the
--   inference scheduler.
createInferenceScheduler_modelName :: Lens' CreateInferenceScheduler Text

-- | The name of the inference scheduler being created.
createInferenceScheduler_inferenceSchedulerName :: Lens' CreateInferenceScheduler Text

-- | How often data is uploaded to the source S3 bucket for the input data.
--   The value chosen is the length of time between data uploads. For
--   instance, if you select 5 minutes, Amazon Lookout for Equipment will
--   upload the real-time data to the source bucket once every 5 minutes.
--   This frequency also determines how often Amazon Lookout for Equipment
--   starts a scheduled inference on your data. In this example, it starts
--   once every 5 minutes.
createInferenceScheduler_dataUploadFrequency :: Lens' CreateInferenceScheduler DataUploadFrequency

-- | Specifies configuration information for the input data for the
--   inference scheduler, including delimiter, format, and dataset
--   location.
createInferenceScheduler_dataInputConfiguration :: Lens' CreateInferenceScheduler InferenceInputConfiguration

-- | Specifies configuration information for the output results for the
--   inference scheduler, including the S3 location for the output.
createInferenceScheduler_dataOutputConfiguration :: Lens' CreateInferenceScheduler InferenceOutputConfiguration

-- | The Amazon Resource Name (ARN) of a role with permission to access the
--   data source being used for the inference.
createInferenceScheduler_roleArn :: Lens' CreateInferenceScheduler Text

-- | A unique identifier for the request. If you do not set the client
--   request token, Amazon Lookout for Equipment generates one.
createInferenceScheduler_clientToken :: Lens' CreateInferenceScheduler Text

-- | Indicates the status of the <tt>CreateInferenceScheduler</tt>
--   operation.
createInferenceSchedulerResponse_status :: Lens' CreateInferenceSchedulerResponse (Maybe InferenceSchedulerStatus)

-- | The Amazon Resource Name (ARN) of the inference scheduler being
--   created.
createInferenceSchedulerResponse_inferenceSchedulerArn :: Lens' CreateInferenceSchedulerResponse (Maybe Text)

-- | The name of inference scheduler being created.
createInferenceSchedulerResponse_inferenceSchedulerName :: Lens' CreateInferenceSchedulerResponse (Maybe Text)

-- | The response's http status code.
createInferenceSchedulerResponse_httpStatus :: Lens' CreateInferenceSchedulerResponse Int

-- | An opaque pagination token indicating where to continue the listing of
--   datasets.
listDatasets_nextToken :: Lens' ListDatasets (Maybe Text)

-- | The beginning of the name of the datasets to be listed.
listDatasets_datasetNameBeginsWith :: Lens' ListDatasets (Maybe Text)

-- | Specifies the maximum number of datasets to list.
listDatasets_maxResults :: Lens' ListDatasets (Maybe Natural)

-- | An opaque pagination token indicating where to continue the listing of
--   datasets.
listDatasetsResponse_nextToken :: Lens' ListDatasetsResponse (Maybe Text)

-- | Provides information about the specified dataset, including creation
--   time, dataset ARN, and status.
listDatasetsResponse_datasetSummaries :: Lens' ListDatasetsResponse (Maybe [DatasetSummary])

-- | The response's http status code.
listDatasetsResponse_httpStatus :: Lens' ListDatasetsResponse Int

-- | The Amazon Resource Name (ARN) of the resource to which the tag is
--   currently associated.
untagResource_resourceArn :: Lens' UntagResource Text

-- | Specifies the key of the tag to be removed from a specified resource.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int

-- | The name of the inference scheduler being described.
describeInferenceScheduler_inferenceSchedulerName :: Lens' DescribeInferenceScheduler Text

-- | Indicates the status of the inference scheduler.
describeInferenceSchedulerResponse_status :: Lens' DescribeInferenceSchedulerResponse (Maybe InferenceSchedulerStatus)

-- | Specifies how often data is uploaded to the source S3 bucket for the
--   input data. This value is the length of time between data uploads. For
--   instance, if you select 5 minutes, Amazon Lookout for Equipment will
--   upload the real-time data to the source bucket once every 5 minutes.
--   This frequency also determines how often Amazon Lookout for Equipment
--   starts a scheduled inference on your data. In this example, it starts
--   once every 5 minutes.
describeInferenceSchedulerResponse_dataUploadFrequency :: Lens' DescribeInferenceSchedulerResponse (Maybe DataUploadFrequency)

-- | A period of time (in minutes) by which inference on the data is
--   delayed after the data starts. For instance, if you select an offset
--   delay time of five minutes, inference will not begin on the data until
--   the first data measurement after the five minute mark. For example, if
--   five minutes is selected, the inference scheduler will wake up at the
--   configured frequency with the additional five minute delay time to
--   check the customer S3 bucket. The customer can upload data at the same
--   frequency and they don't need to stop and restart the scheduler when
--   uploading new data.
describeInferenceSchedulerResponse_dataDelayOffsetInMinutes :: Lens' DescribeInferenceSchedulerResponse (Maybe Natural)

-- | The Amazon Resource Name (ARN) of the ML model of the inference
--   scheduler being described.
describeInferenceSchedulerResponse_modelArn :: Lens' DescribeInferenceSchedulerResponse (Maybe Text)

-- | Specifies the time at which the inference scheduler was created.
describeInferenceSchedulerResponse_createdAt :: Lens' DescribeInferenceSchedulerResponse (Maybe UTCTime)

-- | The name of the ML model of the inference scheduler being described.
describeInferenceSchedulerResponse_modelName :: Lens' DescribeInferenceSchedulerResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the inference scheduler being
--   described.
describeInferenceSchedulerResponse_inferenceSchedulerArn :: Lens' DescribeInferenceSchedulerResponse (Maybe Text)

-- | Specifies information for the output results for the inference
--   scheduler, including the output S3 location.
describeInferenceSchedulerResponse_dataOutputConfiguration :: Lens' DescribeInferenceSchedulerResponse (Maybe InferenceOutputConfiguration)

-- | Specifies the time at which the inference scheduler was last updated,
--   if it was.
describeInferenceSchedulerResponse_updatedAt :: Lens' DescribeInferenceSchedulerResponse (Maybe UTCTime)

-- | The name of the inference scheduler being described.
describeInferenceSchedulerResponse_inferenceSchedulerName :: Lens' DescribeInferenceSchedulerResponse (Maybe Text)

-- | Specifies configuration information for the input data for the
--   inference scheduler, including delimiter, format, and dataset
--   location.
describeInferenceSchedulerResponse_dataInputConfiguration :: Lens' DescribeInferenceSchedulerResponse (Maybe InferenceInputConfiguration)

-- | Provides the identifier of the KMS key used to encrypt inference
--   scheduler data by Amazon Lookout for Equipment.
describeInferenceSchedulerResponse_serverSideKmsKeyId :: Lens' DescribeInferenceSchedulerResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of a role with permission to access the
--   data source for the inference scheduler being described.
describeInferenceSchedulerResponse_roleArn :: Lens' DescribeInferenceSchedulerResponse (Maybe Text)

-- | The response's http status code.
describeInferenceSchedulerResponse_httpStatus :: Lens' DescribeInferenceSchedulerResponse Int

-- | Specifies information for the input data for the data inference job,
--   including data S3 location parameters.
dataIngestionJobSummary_ingestionInputConfiguration :: Lens' DataIngestionJobSummary (Maybe IngestionInputConfiguration)

-- | Indicates the status of the data ingestion job.
dataIngestionJobSummary_status :: Lens' DataIngestionJobSummary (Maybe IngestionJobStatus)

-- | The Amazon Resource Name (ARN) of the dataset used in the data
--   ingestion job.
dataIngestionJobSummary_datasetArn :: Lens' DataIngestionJobSummary (Maybe Text)

-- | Indicates the job ID of the data ingestion job.
dataIngestionJobSummary_jobId :: Lens' DataIngestionJobSummary (Maybe Text)

-- | The name of the dataset used for the data ingestion job.
dataIngestionJobSummary_datasetName :: Lens' DataIngestionJobSummary (Maybe Text)

-- | The sampling rate of the data after post processing by Amazon Lookout
--   for Equipment. For example, if you provide data that has been
--   collected at a 1 second level and you want the system to resample the
--   data at a 1 minute rate before training, the
--   <tt>TargetSamplingRate</tt> is 1 minute.
--   
--   When providing a value for the <tt>TargetSamplingRate</tt>, you must
--   attach the prefix "PT" to the rate you want. The value for a 1 second
--   rate is therefore <i>PT1S</i>, the value for a 15 minute rate is
--   <i>PT15M</i>, and the value for a 1 hour rate is <i>PT1H</i>
dataPreProcessingConfiguration_targetSamplingRate :: Lens' DataPreProcessingConfiguration (Maybe TargetSamplingRate)

datasetSchema_inlineDataSchema :: Lens' DatasetSchema (Maybe Text)

-- | Indicates the status of the dataset.
datasetSummary_status :: Lens' DatasetSummary (Maybe DatasetStatus)

-- | The Amazon Resource Name (ARN) of the specified dataset.
datasetSummary_datasetArn :: Lens' DatasetSummary (Maybe Text)

-- | The time at which the dataset was created in Amazon Lookout for
--   Equipment.
datasetSummary_createdAt :: Lens' DatasetSummary (Maybe UTCTime)

-- | The name of the dataset.
datasetSummary_datasetName :: Lens' DatasetSummary (Maybe Text)

-- | Indicates the status of the inference execution.
inferenceExecutionSummary_status :: Lens' InferenceExecutionSummary (Maybe InferenceExecutionStatus)

-- | Specifies the reason for failure when an inference execution has
--   failed.
inferenceExecutionSummary_failedReason :: Lens' InferenceExecutionSummary (Maybe Text)

-- | The Amazon Resource Name (ARN) of the ML model used for the inference
--   execution.
inferenceExecutionSummary_modelArn :: Lens' InferenceExecutionSummary (Maybe Text)

-- | Indicates the time reference in the dataset at which the inference
--   execution began.
inferenceExecutionSummary_dataStartTime :: Lens' InferenceExecutionSummary (Maybe UTCTime)

-- | The name of the ML model being used for the inference execution.
inferenceExecutionSummary_modelName :: Lens' InferenceExecutionSummary (Maybe Text)

inferenceExecutionSummary_customerResultObject :: Lens' InferenceExecutionSummary (Maybe S3Object)

-- | The Amazon Resource Name (ARN) of the inference scheduler being used
--   for the inference execution.
inferenceExecutionSummary_inferenceSchedulerArn :: Lens' InferenceExecutionSummary (Maybe Text)

-- | Indicates the start time at which the inference scheduler began the
--   specific inference execution.
inferenceExecutionSummary_scheduledStartTime :: Lens' InferenceExecutionSummary (Maybe UTCTime)

-- | Specifies configuration information for the output results from for
--   the inference execution, including the output S3 location.
inferenceExecutionSummary_dataOutputConfiguration :: Lens' InferenceExecutionSummary (Maybe InferenceOutputConfiguration)

-- | Indicates the time reference in the dataset at which the inference
--   execution stopped.
inferenceExecutionSummary_dataEndTime :: Lens' InferenceExecutionSummary (Maybe UTCTime)

-- | The name of the inference scheduler being used for the inference
--   execution.
inferenceExecutionSummary_inferenceSchedulerName :: Lens' InferenceExecutionSummary (Maybe Text)

-- | Specifies configuration information for the input data for the
--   inference scheduler, including delimiter, format, and dataset
--   location.
inferenceExecutionSummary_dataInputConfiguration :: Lens' InferenceExecutionSummary (Maybe InferenceInputConfiguration)

-- | Indicates the difference between your time zone and Greenwich Mean
--   Time (GMT).
inferenceInputConfiguration_inputTimeZoneOffset :: Lens' InferenceInputConfiguration (Maybe Text)

-- | Specifies configuration information for the input data for the
--   inference, including S3 location of input data..
inferenceInputConfiguration_s3InputConfiguration :: Lens' InferenceInputConfiguration (Maybe InferenceS3InputConfiguration)

-- | Specifies configuration information for the input data for the
--   inference, including timestamp format and delimiter.
inferenceInputConfiguration_inferenceInputNameConfiguration :: Lens' InferenceInputConfiguration (Maybe InferenceInputNameConfiguration)

-- | The format of the timestamp, whether Epoch time, or standard, with or
--   without hyphens (-).
inferenceInputNameConfiguration_timestampFormat :: Lens' InferenceInputNameConfiguration (Maybe Text)

-- | Indicates the delimiter character used between items in the data.
inferenceInputNameConfiguration_componentTimestampDelimiter :: Lens' InferenceInputNameConfiguration (Maybe Text)

-- | The ID number for the AWS KMS key used to encrypt the inference
--   output.
inferenceOutputConfiguration_kmsKeyId :: Lens' InferenceOutputConfiguration (Maybe Text)

-- | Specifies configuration information for the output results from for
--   the inference, output S3 location.
inferenceOutputConfiguration_s3OutputConfiguration :: Lens' InferenceOutputConfiguration InferenceS3OutputConfiguration

-- | The prefix for the S3 bucket used for the input data for the
--   inference.
inferenceS3InputConfiguration_prefix :: Lens' InferenceS3InputConfiguration (Maybe Text)

-- | The bucket containing the input dataset for the inference.
inferenceS3InputConfiguration_bucket :: Lens' InferenceS3InputConfiguration Text

-- | The prefix for the S3 bucket used for the output results from the
--   inference.
inferenceS3OutputConfiguration_prefix :: Lens' InferenceS3OutputConfiguration (Maybe Text)

-- | The bucket containing the output results from the inference
inferenceS3OutputConfiguration_bucket :: Lens' InferenceS3OutputConfiguration Text

-- | Indicates the status of the inference scheduler.
inferenceSchedulerSummary_status :: Lens' InferenceSchedulerSummary (Maybe InferenceSchedulerStatus)

-- | How often data is uploaded to the source S3 bucket for the input data.
--   This value is the length of time between data uploads. For instance,
--   if you select 5 minutes, Amazon Lookout for Equipment will upload the
--   real-time data to the source bucket once every 5 minutes. This
--   frequency also determines how often Amazon Lookout for Equipment
--   starts a scheduled inference on your data. In this example, it starts
--   once every 5 minutes.
inferenceSchedulerSummary_dataUploadFrequency :: Lens' InferenceSchedulerSummary (Maybe DataUploadFrequency)

-- | A period of time (in minutes) by which inference on the data is
--   delayed after the data starts. For instance, if an offset delay time
--   of five minutes was selected, inference will not begin on the data
--   until the first data measurement after the five minute mark. For
--   example, if five minutes is selected, the inference scheduler will
--   wake up at the configured frequency with the additional five minute
--   delay time to check the customer S3 bucket. The customer can upload
--   data at the same frequency and they don't need to stop and restart the
--   scheduler when uploading new data.
inferenceSchedulerSummary_dataDelayOffsetInMinutes :: Lens' InferenceSchedulerSummary (Maybe Natural)

-- | The Amazon Resource Name (ARN) of the ML model used by the inference
--   scheduler.
inferenceSchedulerSummary_modelArn :: Lens' InferenceSchedulerSummary (Maybe Text)

-- | The name of the ML model used for the inference scheduler.
inferenceSchedulerSummary_modelName :: Lens' InferenceSchedulerSummary (Maybe Text)

-- | The Amazon Resource Name (ARN) of the inference scheduler.
inferenceSchedulerSummary_inferenceSchedulerArn :: Lens' InferenceSchedulerSummary (Maybe Text)

-- | The name of the inference scheduler.
inferenceSchedulerSummary_inferenceSchedulerName :: Lens' InferenceSchedulerSummary (Maybe Text)

-- | The location information for the S3 bucket used for input data for the
--   data ingestion.
ingestionInputConfiguration_s3InputConfiguration :: Lens' IngestionInputConfiguration IngestionS3InputConfiguration

-- | The prefix for the S3 location being used for the input data for the
--   data ingestion.
ingestionS3InputConfiguration_prefix :: Lens' IngestionS3InputConfiguration (Maybe Text)

-- | The name of the S3 bucket used for the input data for the data
--   ingestion.
ingestionS3InputConfiguration_bucket :: Lens' IngestionS3InputConfiguration Text

-- | Contains location information for the S3 location being used for label
--   data.
labelsInputConfiguration_s3InputConfiguration :: Lens' LabelsInputConfiguration LabelsS3InputConfiguration

-- | The prefix for the S3 bucket used for the label data.
labelsS3InputConfiguration_prefix :: Lens' LabelsS3InputConfiguration (Maybe Text)

-- | The name of the S3 bucket holding the label data.
labelsS3InputConfiguration_bucket :: Lens' LabelsS3InputConfiguration Text

-- | Indicates the status of the ML model.
modelSummary_status :: Lens' ModelSummary (Maybe ModelStatus)

-- | The Amazon Resource Name (ARN) of the dataset used to create the
--   model.
modelSummary_datasetArn :: Lens' ModelSummary (Maybe Text)

-- | The Amazon Resource Name (ARN) of the ML model.
modelSummary_modelArn :: Lens' ModelSummary (Maybe Text)

-- | The time at which the specific model was created.
modelSummary_createdAt :: Lens' ModelSummary (Maybe UTCTime)

-- | The name of the ML model.
modelSummary_modelName :: Lens' ModelSummary (Maybe Text)

-- | The name of the dataset being used for the ML model.
modelSummary_datasetName :: Lens' ModelSummary (Maybe Text)

-- | The name of the specific S3 bucket.
s3Object_bucket :: Lens' S3Object Text

-- | The AWS Key Management Service (AWS KMS) key being used to encrypt the
--   S3 object. Without this key, data in the bucket is not accessible.
s3Object_key :: Lens' S3Object Text

-- | The key for the specified tag.
tag_key :: Lens' Tag Text

-- | The value for the specified tag.
tag_value :: Lens' Tag Text


module Network.AWS.LookoutEquipment.Waiters


-- | Derived from API version <tt>2020-12-15</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   Amazon Lookout for Equipment is a machine learning service that uses
--   advanced analytics to identify anomalies in machines from sensor data
--   for use in predictive maintenance.
module Network.AWS.LookoutEquipment

-- | API version <tt>2020-12-15</tt> of the Amazon Lookout for Equipment
--   SDK configuration.
defaultService :: Service

-- | The input fails to satisfy constraints specified by Amazon Lookout for
--   Equipment or a related AWS service that's being utilized.
_ValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request could not be completed because you do not have access to
--   the resource.
_AccessDeniedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request could not be completed due to a conflict with the current
--   state of the target resource.
_ConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Resource limitations have been exceeded.
_ServiceQuotaExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request was denied due to request throttling.
_ThrottlingException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Processing of the request has failed because of an unknown error,
--   exception or failure.
_InternalServerException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource requested could not be found. Verify the resource ID and
--   retry your request.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newStartInferenceScheduler</a> smart constructor.
data StartInferenceScheduler
StartInferenceScheduler' :: Text -> StartInferenceScheduler

-- | Create a value of <a>StartInferenceScheduler</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inferenceSchedulerName:StartInferenceScheduler'</a>,
--   <a>startInferenceScheduler_inferenceSchedulerName</a> - The name of
--   the inference scheduler to be started.
newStartInferenceScheduler :: Text -> StartInferenceScheduler

-- | <i>See:</i> <a>newStartInferenceSchedulerResponse</a> smart
--   constructor.
data StartInferenceSchedulerResponse
StartInferenceSchedulerResponse' :: Maybe InferenceSchedulerStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> StartInferenceSchedulerResponse

-- | Create a value of <a>StartInferenceSchedulerResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:StartInferenceSchedulerResponse'</a>,
--   <a>startInferenceSchedulerResponse_status</a> - Indicates the status
--   of the inference scheduler.
--   
--   <a>$sel:modelArn:StartInferenceSchedulerResponse'</a>,
--   <a>startInferenceSchedulerResponse_modelArn</a> - The Amazon Resource
--   Name (ARN) of the ML model being used by the inference scheduler.
--   
--   <a>$sel:modelName:StartInferenceSchedulerResponse'</a>,
--   <a>startInferenceSchedulerResponse_modelName</a> - The name of the ML
--   model being used by the inference scheduler.
--   
--   <a>$sel:inferenceSchedulerArn:StartInferenceSchedulerResponse'</a>,
--   <a>startInferenceSchedulerResponse_inferenceSchedulerArn</a> - The
--   Amazon Resource Name (ARN) of the inference scheduler being started.
--   
--   <a>$sel:inferenceSchedulerName:StartInferenceScheduler'</a>,
--   <a>startInferenceSchedulerResponse_inferenceSchedulerName</a> - The
--   name of the inference scheduler being started.
--   
--   <a>$sel:httpStatus:StartInferenceSchedulerResponse'</a>,
--   <a>startInferenceSchedulerResponse_httpStatus</a> - The response's
--   http status code.
newStartInferenceSchedulerResponse :: Int -> StartInferenceSchedulerResponse

-- | <i>See:</i> <a>newDescribeDataset</a> smart constructor.
data DescribeDataset
DescribeDataset' :: Text -> DescribeDataset

-- | Create a value of <a>DescribeDataset</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:datasetName:DescribeDataset'</a>,
--   <a>describeDataset_datasetName</a> - The name of the dataset to be
--   described.
newDescribeDataset :: Text -> DescribeDataset

-- | <i>See:</i> <a>newDescribeDatasetResponse</a> smart constructor.
data DescribeDatasetResponse
DescribeDatasetResponse' :: Maybe IngestionInputConfiguration -> Maybe DatasetStatus -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> DescribeDatasetResponse

-- | Create a value of <a>DescribeDatasetResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ingestionInputConfiguration:DescribeDatasetResponse'</a>,
--   <a>describeDatasetResponse_ingestionInputConfiguration</a> - Specifies
--   the S3 location configuration for the data input for the data
--   ingestion job.
--   
--   <a>$sel:status:DescribeDatasetResponse'</a>,
--   <a>describeDatasetResponse_status</a> - Indicates the status of the
--   dataset.
--   
--   <a>$sel:datasetArn:DescribeDatasetResponse'</a>,
--   <a>describeDatasetResponse_datasetArn</a> - The Amazon Resource Name
--   (ARN) of the dataset being described.
--   
--   <a>$sel:lastUpdatedAt:DescribeDatasetResponse'</a>,
--   <a>describeDatasetResponse_lastUpdatedAt</a> - Specifies the time the
--   dataset was last updated, if it was.
--   
--   <a>$sel:createdAt:DescribeDatasetResponse'</a>,
--   <a>describeDatasetResponse_createdAt</a> - Specifies the time the
--   dataset was created in Amazon Lookout for Equipment.
--   
--   <a>$sel:schema:DescribeDatasetResponse'</a>,
--   <a>describeDatasetResponse_schema</a> - A JSON description of the data
--   that is in each time series dataset, including names, column names,
--   and data types.
--   
--   <a>$sel:datasetName:DescribeDataset'</a>,
--   <a>describeDatasetResponse_datasetName</a> - The name of the dataset
--   being described.
--   
--   <a>$sel:serverSideKmsKeyId:DescribeDatasetResponse'</a>,
--   <a>describeDatasetResponse_serverSideKmsKeyId</a> - Provides the
--   identifier of the KMS key used to encrypt dataset data by Amazon
--   Lookout for Equipment.
--   
--   <a>$sel:httpStatus:DescribeDatasetResponse'</a>,
--   <a>describeDatasetResponse_httpStatus</a> - The response's http status
--   code.
newDescribeDatasetResponse :: Int -> DescribeDatasetResponse

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The Amazon Resource Name
--   (ARN) of the resource (such as the dataset or model) that is the focus
--   of the <tt>ListTagsForResource</tt> operation.
newListTagsForResource :: Text -> ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe [Tag] -> Int -> ListTagsForResourceResponse

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - Any tags associated with the
--   resource.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | <i>See:</i> <a>newDescribeDataIngestionJob</a> smart constructor.
data DescribeDataIngestionJob
DescribeDataIngestionJob' :: Text -> DescribeDataIngestionJob

-- | Create a value of <a>DescribeDataIngestionJob</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:DescribeDataIngestionJob'</a>,
--   <a>describeDataIngestionJob_jobId</a> - The job ID of the data
--   ingestion job.
newDescribeDataIngestionJob :: Text -> DescribeDataIngestionJob

-- | <i>See:</i> <a>newDescribeDataIngestionJobResponse</a> smart
--   constructor.
data DescribeDataIngestionJobResponse
DescribeDataIngestionJobResponse' :: Maybe IngestionInputConfiguration -> Maybe IngestionJobStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Int -> DescribeDataIngestionJobResponse

-- | Create a value of <a>DescribeDataIngestionJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:ingestionInputConfiguration:DescribeDataIngestionJobResponse'</a>,
--   <a>describeDataIngestionJobResponse_ingestionInputConfiguration</a> -
--   Specifies the S3 location configuration for the data input for the
--   data ingestion job.
--   
--   <a>$sel:status:DescribeDataIngestionJobResponse'</a>,
--   <a>describeDataIngestionJobResponse_status</a> - Indicates the status
--   of the <tt>DataIngestionJob</tt> operation.
--   
--   <a>$sel:datasetArn:DescribeDataIngestionJobResponse'</a>,
--   <a>describeDataIngestionJobResponse_datasetArn</a> - The Amazon
--   Resource Name (ARN) of the dataset being used in the data ingestion
--   job.
--   
--   <a>$sel:failedReason:DescribeDataIngestionJobResponse'</a>,
--   <a>describeDataIngestionJobResponse_failedReason</a> - Specifies the
--   reason for failure when a data ingestion job has failed.
--   
--   <a>$sel:jobId:DescribeDataIngestionJob'</a>,
--   <a>describeDataIngestionJobResponse_jobId</a> - Indicates the job ID
--   of the data ingestion job.
--   
--   <a>$sel:createdAt:DescribeDataIngestionJobResponse'</a>,
--   <a>describeDataIngestionJobResponse_createdAt</a> - The time at which
--   the data ingestion job was created.
--   
--   <a>$sel:roleArn:DescribeDataIngestionJobResponse'</a>,
--   <a>describeDataIngestionJobResponse_roleArn</a> - The Amazon Resource
--   Name (ARN) of an IAM role with permission to access the data source
--   being ingested.
--   
--   <a>$sel:httpStatus:DescribeDataIngestionJobResponse'</a>,
--   <a>describeDataIngestionJobResponse_httpStatus</a> - The response's
--   http status code.
newDescribeDataIngestionJobResponse :: Int -> DescribeDataIngestionJobResponse

-- | <i>See:</i> <a>newCreateModel</a> smart constructor.
data CreateModel
CreateModel' :: Maybe DataPreProcessingConfiguration -> Maybe POSIX -> Maybe DatasetSchema -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe LabelsInputConfiguration -> Maybe [Tag] -> Maybe Text -> Maybe Text -> Text -> Text -> Text -> CreateModel

-- | Create a value of <a>CreateModel</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataPreProcessingConfiguration:CreateModel'</a>,
--   <a>createModel_dataPreProcessingConfiguration</a> - The configuration
--   is the <tt>TargetSamplingRate</tt>, which is the sampling rate of the
--   data after post processing by Amazon Lookout for Equipment. For
--   example, if you provide data that has been collected at a 1 second
--   level and you want the system to resample the data at a 1 minute rate
--   before training, the <tt>TargetSamplingRate</tt> is 1 minute.
--   
--   When providing a value for the <tt>TargetSamplingRate</tt>, you must
--   attach the prefix "PT" to the rate you want. The value for a 1 second
--   rate is therefore <i>PT1S</i>, the value for a 15 minute rate is
--   <i>PT15M</i>, and the value for a 1 hour rate is <i>PT1H</i>
--   
--   <a>$sel:trainingDataEndTime:CreateModel'</a>,
--   <a>createModel_trainingDataEndTime</a> - Indicates the time reference
--   in the dataset that should be used to end the subset of training data
--   for the ML model.
--   
--   <a>$sel:datasetSchema:CreateModel'</a>,
--   <a>createModel_datasetSchema</a> - The data schema for the ML model
--   being created.
--   
--   <a>$sel:evaluationDataStartTime:CreateModel'</a>,
--   <a>createModel_evaluationDataStartTime</a> - Indicates the time
--   reference in the dataset that should be used to begin the subset of
--   evaluation data for the ML model.
--   
--   <a>$sel:offCondition:CreateModel'</a>, <a>createModel_offCondition</a>
--   - Indicates that the asset associated with this sensor has been shut
--   off. As long as this condition is met, Lookout for Equipment will not
--   use data from this asset for training, evaluation, or inference.
--   
--   <a>$sel:evaluationDataEndTime:CreateModel'</a>,
--   <a>createModel_evaluationDataEndTime</a> - Indicates the time
--   reference in the dataset that should be used to end the subset of
--   evaluation data for the ML model.
--   
--   <a>$sel:trainingDataStartTime:CreateModel'</a>,
--   <a>createModel_trainingDataStartTime</a> - Indicates the time
--   reference in the dataset that should be used to begin the subset of
--   training data for the ML model.
--   
--   <a>$sel:labelsInputConfiguration:CreateModel'</a>,
--   <a>createModel_labelsInputConfiguration</a> - The input configuration
--   for the labels being used for the ML model that's being created.
--   
--   <a>$sel:tags:CreateModel'</a>, <a>createModel_tags</a> - Any tags
--   associated with the ML model being created.
--   
--   <a>$sel:serverSideKmsKeyId:CreateModel'</a>,
--   <a>createModel_serverSideKmsKeyId</a> - Provides the identifier of the
--   KMS key used to encrypt model data by Amazon Lookout for Equipment.
--   
--   <a>$sel:roleArn:CreateModel'</a>, <a>createModel_roleArn</a> - The
--   Amazon Resource Name (ARN) of a role with permission to access the
--   data source being used to create the ML model.
--   
--   <a>$sel:modelName:CreateModel'</a>, <a>createModel_modelName</a> - The
--   name for the ML model to be created.
--   
--   <a>$sel:datasetName:CreateModel'</a>, <a>createModel_datasetName</a> -
--   The name of the dataset for the ML model being created.
--   
--   <a>$sel:clientToken:CreateModel'</a>, <a>createModel_clientToken</a> -
--   A unique identifier for the request. If you do not set the client
--   request token, Amazon Lookout for Equipment generates one.
newCreateModel :: Text -> Text -> Text -> CreateModel

-- | <i>See:</i> <a>newCreateModelResponse</a> smart constructor.
data CreateModelResponse
CreateModelResponse' :: Maybe ModelStatus -> Maybe Text -> Int -> CreateModelResponse

-- | Create a value of <a>CreateModelResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:CreateModelResponse'</a>,
--   <a>createModelResponse_status</a> - Indicates the status of the
--   <tt>CreateModel</tt> operation.
--   
--   <a>$sel:modelArn:CreateModelResponse'</a>,
--   <a>createModelResponse_modelArn</a> - The Amazon Resource Name (ARN)
--   of the model being created.
--   
--   <a>$sel:httpStatus:CreateModelResponse'</a>,
--   <a>createModelResponse_httpStatus</a> - The response's http status
--   code.
newCreateModelResponse :: Int -> CreateModelResponse

-- | <i>See:</i> <a>newDeleteDataset</a> smart constructor.
data DeleteDataset
DeleteDataset' :: Text -> DeleteDataset

-- | Create a value of <a>DeleteDataset</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:datasetName:DeleteDataset'</a>,
--   <a>deleteDataset_datasetName</a> - The name of the dataset to be
--   deleted.
newDeleteDataset :: Text -> DeleteDataset

-- | <i>See:</i> <a>newDeleteDatasetResponse</a> smart constructor.
data DeleteDatasetResponse
DeleteDatasetResponse' :: DeleteDatasetResponse

-- | Create a value of <a>DeleteDatasetResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteDatasetResponse :: DeleteDatasetResponse

-- | <i>See:</i> <a>newCreateDataset</a> smart constructor.
data CreateDataset
CreateDataset' :: Maybe [Tag] -> Maybe Text -> Text -> DatasetSchema -> Text -> CreateDataset

-- | Create a value of <a>CreateDataset</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:CreateDataset'</a>, <a>createDataset_tags</a> - Any tags
--   associated with the ingested data described in the dataset.
--   
--   <a>$sel:serverSideKmsKeyId:CreateDataset'</a>,
--   <a>createDataset_serverSideKmsKeyId</a> - Provides the identifier of
--   the KMS key used to encrypt dataset data by Amazon Lookout for
--   Equipment.
--   
--   <a>$sel:datasetName:CreateDataset'</a>,
--   <a>createDataset_datasetName</a> - The name of the dataset being
--   created.
--   
--   <a>$sel:datasetSchema:CreateDataset'</a>,
--   <a>createDataset_datasetSchema</a> - A JSON description of the data
--   that is in each time series dataset, including names, column names,
--   and data types.
--   
--   <a>$sel:clientToken:CreateDataset'</a>,
--   <a>createDataset_clientToken</a> - A unique identifier for the
--   request. If you do not set the client request token, Amazon Lookout
--   for Equipment generates one.
newCreateDataset :: Text -> DatasetSchema -> Text -> CreateDataset

-- | <i>See:</i> <a>newCreateDatasetResponse</a> smart constructor.
data CreateDatasetResponse
CreateDatasetResponse' :: Maybe DatasetStatus -> Maybe Text -> Maybe Text -> Int -> CreateDatasetResponse

-- | Create a value of <a>CreateDatasetResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:CreateDatasetResponse'</a>,
--   <a>createDatasetResponse_status</a> - Indicates the status of the
--   <tt>CreateDataset</tt> operation.
--   
--   <a>$sel:datasetArn:CreateDatasetResponse'</a>,
--   <a>createDatasetResponse_datasetArn</a> - The Amazon Resource Name
--   (ARN) of the dataset being created.
--   
--   <a>$sel:datasetName:CreateDataset'</a>,
--   <a>createDatasetResponse_datasetName</a> - The name of the dataset
--   being created.
--   
--   <a>$sel:httpStatus:CreateDatasetResponse'</a>,
--   <a>createDatasetResponse_httpStatus</a> - The response's http status
--   code.
newCreateDatasetResponse :: Int -> CreateDatasetResponse

-- | <i>See:</i> <a>newDeleteModel</a> smart constructor.
data DeleteModel
DeleteModel' :: Text -> DeleteModel

-- | Create a value of <a>DeleteModel</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modelName:DeleteModel'</a>, <a>deleteModel_modelName</a> - The
--   name of the ML model to be deleted.
newDeleteModel :: Text -> DeleteModel

-- | <i>See:</i> <a>newDeleteModelResponse</a> smart constructor.
data DeleteModelResponse
DeleteModelResponse' :: DeleteModelResponse

-- | Create a value of <a>DeleteModelResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteModelResponse :: DeleteModelResponse

-- | <i>See:</i> <a>newListModels</a> smart constructor.
data ListModels
ListModels' :: Maybe ModelStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> ListModels

-- | Create a value of <a>ListModels</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ListModels'</a>, <a>listModels_status</a> - The status
--   of the ML model.
--   
--   <a>$sel:nextToken:ListModels'</a>, <a>listModels_nextToken</a> - An
--   opaque pagination token indicating where to continue the listing of ML
--   models.
--   
--   <a>$sel:datasetNameBeginsWith:ListModels'</a>,
--   <a>listModels_datasetNameBeginsWith</a> - The beginning of the name of
--   the dataset of the ML models to be listed.
--   
--   <a>$sel:modelNameBeginsWith:ListModels'</a>,
--   <a>listModels_modelNameBeginsWith</a> - The beginning of the name of
--   the ML models being listed.
--   
--   <a>$sel:maxResults:ListModels'</a>, <a>listModels_maxResults</a> -
--   Specifies the maximum number of ML models to list.
newListModels :: ListModels

-- | <i>See:</i> <a>newListModelsResponse</a> smart constructor.
data ListModelsResponse
ListModelsResponse' :: Maybe Text -> Maybe [ModelSummary] -> Int -> ListModelsResponse

-- | Create a value of <a>ListModelsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListModels'</a>, <a>listModelsResponse_nextToken</a>
--   - An opaque pagination token indicating where to continue the listing
--   of ML models.
--   
--   <a>$sel:modelSummaries:ListModelsResponse'</a>,
--   <a>listModelsResponse_modelSummaries</a> - Provides information on the
--   specified model, including created time, model and dataset ARNs, and
--   status.
--   
--   <a>$sel:httpStatus:ListModelsResponse'</a>,
--   <a>listModelsResponse_httpStatus</a> - The response's http status
--   code.
newListModelsResponse :: Int -> ListModelsResponse

-- | <i>See:</i> <a>newStopInferenceScheduler</a> smart constructor.
data StopInferenceScheduler
StopInferenceScheduler' :: Text -> StopInferenceScheduler

-- | Create a value of <a>StopInferenceScheduler</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inferenceSchedulerName:StopInferenceScheduler'</a>,
--   <a>stopInferenceScheduler_inferenceSchedulerName</a> - The name of the
--   inference scheduler to be stopped.
newStopInferenceScheduler :: Text -> StopInferenceScheduler

-- | <i>See:</i> <a>newStopInferenceSchedulerResponse</a> smart
--   constructor.
data StopInferenceSchedulerResponse
StopInferenceSchedulerResponse' :: Maybe InferenceSchedulerStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> StopInferenceSchedulerResponse

-- | Create a value of <a>StopInferenceSchedulerResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:StopInferenceSchedulerResponse'</a>,
--   <a>stopInferenceSchedulerResponse_status</a> - Indicates the status of
--   the inference scheduler.
--   
--   <a>$sel:modelArn:StopInferenceSchedulerResponse'</a>,
--   <a>stopInferenceSchedulerResponse_modelArn</a> - The Amazon Resource
--   Name (ARN) of the ML model used by the inference scheduler being
--   stopped.
--   
--   <a>$sel:modelName:StopInferenceSchedulerResponse'</a>,
--   <a>stopInferenceSchedulerResponse_modelName</a> - The name of the ML
--   model used by the inference scheduler being stopped.
--   
--   <a>$sel:inferenceSchedulerArn:StopInferenceSchedulerResponse'</a>,
--   <a>stopInferenceSchedulerResponse_inferenceSchedulerArn</a> - The
--   Amazon Resource Name (ARN) of the inference schedule being stopped.
--   
--   <a>$sel:inferenceSchedulerName:StopInferenceScheduler'</a>,
--   <a>stopInferenceSchedulerResponse_inferenceSchedulerName</a> - The
--   name of the inference scheduler being stopped.
--   
--   <a>$sel:httpStatus:StopInferenceSchedulerResponse'</a>,
--   <a>stopInferenceSchedulerResponse_httpStatus</a> - The response's http
--   status code.
newStopInferenceSchedulerResponse :: Int -> StopInferenceSchedulerResponse

-- | <i>See:</i> <a>newListDataIngestionJobs</a> smart constructor.
data ListDataIngestionJobs
ListDataIngestionJobs' :: Maybe IngestionJobStatus -> Maybe Text -> Maybe Text -> Maybe Natural -> ListDataIngestionJobs

-- | Create a value of <a>ListDataIngestionJobs</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ListDataIngestionJobs'</a>,
--   <a>listDataIngestionJobs_status</a> - Indicates the status of the data
--   ingestion job.
--   
--   <a>$sel:nextToken:ListDataIngestionJobs'</a>,
--   <a>listDataIngestionJobs_nextToken</a> - An opaque pagination token
--   indicating where to continue the listing of data ingestion jobs.
--   
--   <a>$sel:datasetName:ListDataIngestionJobs'</a>,
--   <a>listDataIngestionJobs_datasetName</a> - The name of the dataset
--   being used for the data ingestion job.
--   
--   <a>$sel:maxResults:ListDataIngestionJobs'</a>,
--   <a>listDataIngestionJobs_maxResults</a> - Specifies the maximum number
--   of data ingestion jobs to list.
newListDataIngestionJobs :: ListDataIngestionJobs

-- | <i>See:</i> <a>newListDataIngestionJobsResponse</a> smart constructor.
data ListDataIngestionJobsResponse
ListDataIngestionJobsResponse' :: Maybe Text -> Maybe [DataIngestionJobSummary] -> Int -> ListDataIngestionJobsResponse

-- | Create a value of <a>ListDataIngestionJobsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDataIngestionJobs'</a>,
--   <a>listDataIngestionJobsResponse_nextToken</a> - An opaque pagination
--   token indicating where to continue the listing of data ingestion jobs.
--   
--   <a>$sel:dataIngestionJobSummaries:ListDataIngestionJobsResponse'</a>,
--   <a>listDataIngestionJobsResponse_dataIngestionJobSummaries</a> -
--   Specifies information about the specific data ingestion job, including
--   dataset name and status.
--   
--   <a>$sel:httpStatus:ListDataIngestionJobsResponse'</a>,
--   <a>listDataIngestionJobsResponse_httpStatus</a> - The response's http
--   status code.
newListDataIngestionJobsResponse :: Int -> ListDataIngestionJobsResponse

-- | <i>See:</i> <a>newDescribeModel</a> smart constructor.
data DescribeModel
DescribeModel' :: Text -> DescribeModel

-- | Create a value of <a>DescribeModel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modelName:DescribeModel'</a>, <a>describeModel_modelName</a> -
--   The name of the ML model to be described.
newDescribeModel :: Text -> DescribeModel

-- | <i>See:</i> <a>newDescribeModelResponse</a> smart constructor.
data DescribeModelResponse
DescribeModelResponse' :: Maybe ModelStatus -> Maybe DataPreProcessingConfiguration -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe LabelsInputConfiguration -> Maybe Text -> Maybe Text -> Int -> DescribeModelResponse

-- | Create a value of <a>DescribeModelResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:DescribeModelResponse'</a>,
--   <a>describeModelResponse_status</a> - Specifies the current status of
--   the model being described. Status describes the status of the most
--   recent action of the model.
--   
--   <a>$sel:dataPreProcessingConfiguration:DescribeModelResponse'</a>,
--   <a>describeModelResponse_dataPreProcessingConfiguration</a> - The
--   configuration is the <tt>TargetSamplingRate</tt>, which is the
--   sampling rate of the data after post processing by Amazon Lookout for
--   Equipment. For example, if you provide data that has been collected at
--   a 1 second level and you want the system to resample the data at a 1
--   minute rate before training, the <tt>TargetSamplingRate</tt> is 1
--   minute.
--   
--   When providing a value for the <tt>TargetSamplingRate</tt>, you must
--   attach the prefix "PT" to the rate you want. The value for a 1 second
--   rate is therefore <i>PT1S</i>, the value for a 15 minute rate is
--   <i>PT15M</i>, and the value for a 1 hour rate is <i>PT1H</i>
--   
--   <a>$sel:trainingExecutionStartTime:DescribeModelResponse'</a>,
--   <a>describeModelResponse_trainingExecutionStartTime</a> - Indicates
--   the time at which the training of the ML model began.
--   
--   <a>$sel:datasetArn:DescribeModelResponse'</a>,
--   <a>describeModelResponse_datasetArn</a> - The Amazon Resouce Name
--   (ARN) of the dataset used to create the ML model being described.
--   
--   <a>$sel:failedReason:DescribeModelResponse'</a>,
--   <a>describeModelResponse_failedReason</a> - If the training of the ML
--   model failed, this indicates the reason for that failure.
--   
--   <a>$sel:modelArn:DescribeModelResponse'</a>,
--   <a>describeModelResponse_modelArn</a> - The Amazon Resource Name (ARN)
--   of the ML model being described.
--   
--   <a>$sel:lastUpdatedTime:DescribeModelResponse'</a>,
--   <a>describeModelResponse_lastUpdatedTime</a> - Indicates the last time
--   the ML model was updated. The type of update is not specified.
--   
--   <a>$sel:trainingDataEndTime:DescribeModelResponse'</a>,
--   <a>describeModelResponse_trainingDataEndTime</a> - Indicates the time
--   reference in the dataset that was used to end the subset of training
--   data for the ML model.
--   
--   <a>$sel:createdAt:DescribeModelResponse'</a>,
--   <a>describeModelResponse_createdAt</a> - Indicates the time and date
--   at which the ML model was created.
--   
--   <a>$sel:modelName:DescribeModel'</a>,
--   <a>describeModelResponse_modelName</a> - The name of the ML model
--   being described.
--   
--   <a>$sel:modelMetrics:DescribeModelResponse'</a>,
--   <a>describeModelResponse_modelMetrics</a> - The Model Metrics show an
--   aggregated summary of the model's performance within the evaluation
--   time range. This is the JSON content of the metrics created when
--   evaluating the model.
--   
--   <a>$sel:evaluationDataStartTime:DescribeModelResponse'</a>,
--   <a>describeModelResponse_evaluationDataStartTime</a> - Indicates the
--   time reference in the dataset that was used to begin the subset of
--   evaluation data for the ML model.
--   
--   <a>$sel:schema:DescribeModelResponse'</a>,
--   <a>describeModelResponse_schema</a> - A JSON description of the data
--   that is in each time series dataset, including names, column names,
--   and data types.
--   
--   <a>$sel:offCondition:DescribeModelResponse'</a>,
--   <a>describeModelResponse_offCondition</a> - Indicates that the asset
--   associated with this sensor has been shut off. As long as this
--   condition is met, Lookout for Equipment will not use data from this
--   asset for training, evaluation, or inference.
--   
--   <a>$sel:evaluationDataEndTime:DescribeModelResponse'</a>,
--   <a>describeModelResponse_evaluationDataEndTime</a> - Indicates the
--   time reference in the dataset that was used to end the subset of
--   evaluation data for the ML model.
--   
--   <a>$sel:datasetName:DescribeModelResponse'</a>,
--   <a>describeModelResponse_datasetName</a> - The name of the dataset
--   being used by the ML being described.
--   
--   <a>$sel:trainingDataStartTime:DescribeModelResponse'</a>,
--   <a>describeModelResponse_trainingDataStartTime</a> - Indicates the
--   time reference in the dataset that was used to begin the subset of
--   training data for the ML model.
--   
--   <a>$sel:trainingExecutionEndTime:DescribeModelResponse'</a>,
--   <a>describeModelResponse_trainingExecutionEndTime</a> - Indicates the
--   time at which the training of the ML model was completed.
--   
--   <a>$sel:labelsInputConfiguration:DescribeModelResponse'</a>,
--   <a>describeModelResponse_labelsInputConfiguration</a> - Specifies
--   configuration information about the labels input, including its S3
--   location.
--   
--   <a>$sel:serverSideKmsKeyId:DescribeModelResponse'</a>,
--   <a>describeModelResponse_serverSideKmsKeyId</a> - Provides the
--   identifier of the KMS key used to encrypt model data by Amazon Lookout
--   for Equipment.
--   
--   <a>$sel:roleArn:DescribeModelResponse'</a>,
--   <a>describeModelResponse_roleArn</a> - The Amazon Resource Name (ARN)
--   of a role with permission to access the data source for the ML model
--   being described.
--   
--   <a>$sel:httpStatus:DescribeModelResponse'</a>,
--   <a>describeModelResponse_httpStatus</a> - The response's http status
--   code.
newDescribeModelResponse :: Int -> DescribeModelResponse

-- | <i>See:</i> <a>newStartDataIngestionJob</a> smart constructor.
data StartDataIngestionJob
StartDataIngestionJob' :: Text -> IngestionInputConfiguration -> Text -> Text -> StartDataIngestionJob

-- | Create a value of <a>StartDataIngestionJob</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:datasetName:StartDataIngestionJob'</a>,
--   <a>startDataIngestionJob_datasetName</a> - The name of the dataset
--   being used by the data ingestion job.
--   
--   <a>$sel:ingestionInputConfiguration:StartDataIngestionJob'</a>,
--   <a>startDataIngestionJob_ingestionInputConfiguration</a> - Specifies
--   information for the input data for the data ingestion job, including
--   dataset S3 location.
--   
--   <a>$sel:roleArn:StartDataIngestionJob'</a>,
--   <a>startDataIngestionJob_roleArn</a> - The Amazon Resource Name (ARN)
--   of a role with permission to access the data source for the data
--   ingestion job.
--   
--   <a>$sel:clientToken:StartDataIngestionJob'</a>,
--   <a>startDataIngestionJob_clientToken</a> - A unique identifier for the
--   request. If you do not set the client request token, Amazon Lookout
--   for Equipment generates one.
newStartDataIngestionJob :: Text -> IngestionInputConfiguration -> Text -> Text -> StartDataIngestionJob

-- | <i>See:</i> <a>newStartDataIngestionJobResponse</a> smart constructor.
data StartDataIngestionJobResponse
StartDataIngestionJobResponse' :: Maybe IngestionJobStatus -> Maybe Text -> Int -> StartDataIngestionJobResponse

-- | Create a value of <a>StartDataIngestionJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:StartDataIngestionJobResponse'</a>,
--   <a>startDataIngestionJobResponse_status</a> - Indicates the status of
--   the <tt>StartDataIngestionJob</tt> operation.
--   
--   <a>$sel:jobId:StartDataIngestionJobResponse'</a>,
--   <a>startDataIngestionJobResponse_jobId</a> - Indicates the job ID of
--   the data ingestion job.
--   
--   <a>$sel:httpStatus:StartDataIngestionJobResponse'</a>,
--   <a>startDataIngestionJobResponse_httpStatus</a> - The response's http
--   status code.
newStartDataIngestionJobResponse :: Int -> StartDataIngestionJobResponse

-- | <i>See:</i> <a>newListInferenceSchedulers</a> smart constructor.
data ListInferenceSchedulers
ListInferenceSchedulers' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> ListInferenceSchedulers

-- | Create a value of <a>ListInferenceSchedulers</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modelName:ListInferenceSchedulers'</a>,
--   <a>listInferenceSchedulers_modelName</a> - The name of the ML model
--   used by the inference scheduler to be listed.
--   
--   <a>$sel:nextToken:ListInferenceSchedulers'</a>,
--   <a>listInferenceSchedulers_nextToken</a> - An opaque pagination token
--   indicating where to continue the listing of inference schedulers.
--   
--   <a>$sel:inferenceSchedulerNameBeginsWith:ListInferenceSchedulers'</a>,
--   <a>listInferenceSchedulers_inferenceSchedulerNameBeginsWith</a> - The
--   beginning of the name of the inference schedulers to be listed.
--   
--   <a>$sel:maxResults:ListInferenceSchedulers'</a>,
--   <a>listInferenceSchedulers_maxResults</a> - Specifies the maximum
--   number of inference schedulers to list.
newListInferenceSchedulers :: ListInferenceSchedulers

-- | <i>See:</i> <a>newListInferenceSchedulersResponse</a> smart
--   constructor.
data ListInferenceSchedulersResponse
ListInferenceSchedulersResponse' :: Maybe [InferenceSchedulerSummary] -> Maybe Text -> Int -> ListInferenceSchedulersResponse

-- | Create a value of <a>ListInferenceSchedulersResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:inferenceSchedulerSummaries:ListInferenceSchedulersResponse'</a>,
--   <a>listInferenceSchedulersResponse_inferenceSchedulerSummaries</a> -
--   Provides information about the specified inference scheduler,
--   including data upload frequency, model name and ARN, and status.
--   
--   <a>$sel:nextToken:ListInferenceSchedulers'</a>,
--   <a>listInferenceSchedulersResponse_nextToken</a> - An opaque
--   pagination token indicating where to continue the listing of inference
--   schedulers.
--   
--   <a>$sel:httpStatus:ListInferenceSchedulersResponse'</a>,
--   <a>listInferenceSchedulersResponse_httpStatus</a> - The response's
--   http status code.
newListInferenceSchedulersResponse :: Int -> ListInferenceSchedulersResponse

-- | <i>See:</i> <a>newUpdateInferenceScheduler</a> smart constructor.
data UpdateInferenceScheduler
UpdateInferenceScheduler' :: Maybe DataUploadFrequency -> Maybe Natural -> Maybe InferenceOutputConfiguration -> Maybe InferenceInputConfiguration -> Maybe Text -> Text -> UpdateInferenceScheduler

-- | Create a value of <a>UpdateInferenceScheduler</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataUploadFrequency:UpdateInferenceScheduler'</a>,
--   <a>updateInferenceScheduler_dataUploadFrequency</a> - How often data
--   is uploaded to the source S3 bucket for the input data. The value
--   chosen is the length of time between data uploads. For instance, if
--   you select 5 minutes, Amazon Lookout for Equipment will upload the
--   real-time data to the source bucket once every 5 minutes. This
--   frequency also determines how often Amazon Lookout for Equipment
--   starts a scheduled inference on your data. In this example, it starts
--   once every 5 minutes.
--   
--   <a>$sel:dataDelayOffsetInMinutes:UpdateInferenceScheduler'</a>,
--   <a>updateInferenceScheduler_dataDelayOffsetInMinutes</a> - A period of
--   time (in minutes) by which inference on the data is delayed after the
--   data starts. For instance, if you select an offset delay time of five
--   minutes, inference will not begin on the data until the first data
--   measurement after the five minute mark. For example, if five minutes
--   is selected, the inference scheduler will wake up at the configured
--   frequency with the additional five minute delay time to check the
--   customer S3 bucket. The customer can upload data at the same frequency
--   and they don't need to stop and restart the scheduler when uploading
--   new data.
--   
--   <a>$sel:dataOutputConfiguration:UpdateInferenceScheduler'</a>,
--   <a>updateInferenceScheduler_dataOutputConfiguration</a> - Specifies
--   information for the output results from the inference scheduler,
--   including the output S3 location.
--   
--   <a>$sel:dataInputConfiguration:UpdateInferenceScheduler'</a>,
--   <a>updateInferenceScheduler_dataInputConfiguration</a> - Specifies
--   information for the input data for the inference scheduler, including
--   delimiter, format, and dataset location.
--   
--   <a>$sel:roleArn:UpdateInferenceScheduler'</a>,
--   <a>updateInferenceScheduler_roleArn</a> - The Amazon Resource Name
--   (ARN) of a role with permission to access the data source for the
--   inference scheduler.
--   
--   <a>$sel:inferenceSchedulerName:UpdateInferenceScheduler'</a>,
--   <a>updateInferenceScheduler_inferenceSchedulerName</a> - The name of
--   the inference scheduler to be updated.
newUpdateInferenceScheduler :: Text -> UpdateInferenceScheduler

-- | <i>See:</i> <a>newUpdateInferenceSchedulerResponse</a> smart
--   constructor.
data UpdateInferenceSchedulerResponse
UpdateInferenceSchedulerResponse' :: UpdateInferenceSchedulerResponse

-- | Create a value of <a>UpdateInferenceSchedulerResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUpdateInferenceSchedulerResponse :: UpdateInferenceSchedulerResponse

-- | <i>See:</i> <a>newDeleteInferenceScheduler</a> smart constructor.
data DeleteInferenceScheduler
DeleteInferenceScheduler' :: Text -> DeleteInferenceScheduler

-- | Create a value of <a>DeleteInferenceScheduler</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inferenceSchedulerName:DeleteInferenceScheduler'</a>,
--   <a>deleteInferenceScheduler_inferenceSchedulerName</a> - The name of
--   the inference scheduler to be deleted.
newDeleteInferenceScheduler :: Text -> DeleteInferenceScheduler

-- | <i>See:</i> <a>newDeleteInferenceSchedulerResponse</a> smart
--   constructor.
data DeleteInferenceSchedulerResponse
DeleteInferenceSchedulerResponse' :: DeleteInferenceSchedulerResponse

-- | Create a value of <a>DeleteInferenceSchedulerResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteInferenceSchedulerResponse :: DeleteInferenceSchedulerResponse

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> [Tag] -> TagResource

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The Amazon Resource Name (ARN) of the specific resource to which the
--   tag should be associated.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - The tag or
--   tags to be associated with a specific resource. Both the tag key and
--   value are specified.
newTagResource :: Text -> TagResource

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | <i>See:</i> <a>newListInferenceExecutions</a> smart constructor.
data ListInferenceExecutions
ListInferenceExecutions' :: Maybe InferenceExecutionStatus -> Maybe POSIX -> Maybe Text -> Maybe Natural -> Maybe POSIX -> Text -> ListInferenceExecutions

-- | Create a value of <a>ListInferenceExecutions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ListInferenceExecutions'</a>,
--   <a>listInferenceExecutions_status</a> - The status of the inference
--   execution.
--   
--   <a>$sel:dataEndTimeBefore:ListInferenceExecutions'</a>,
--   <a>listInferenceExecutions_dataEndTimeBefore</a> - The time reference
--   in the inferenced dataset before which Amazon Lookout for Equipment
--   stopped the inference execution.
--   
--   <a>$sel:nextToken:ListInferenceExecutions'</a>,
--   <a>listInferenceExecutions_nextToken</a> - An opaque pagination token
--   indicating where to continue the listing of inference executions.
--   
--   <a>$sel:maxResults:ListInferenceExecutions'</a>,
--   <a>listInferenceExecutions_maxResults</a> - Specifies the maximum
--   number of inference executions to list.
--   
--   <a>$sel:dataStartTimeAfter:ListInferenceExecutions'</a>,
--   <a>listInferenceExecutions_dataStartTimeAfter</a> - The time reference
--   in the inferenced dataset after which Amazon Lookout for Equipment
--   started the inference execution.
--   
--   <a>$sel:inferenceSchedulerName:ListInferenceExecutions'</a>,
--   <a>listInferenceExecutions_inferenceSchedulerName</a> - The name of
--   the inference scheduler for the inference execution listed.
newListInferenceExecutions :: Text -> ListInferenceExecutions

-- | <i>See:</i> <a>newListInferenceExecutionsResponse</a> smart
--   constructor.
data ListInferenceExecutionsResponse
ListInferenceExecutionsResponse' :: Maybe Text -> Maybe [InferenceExecutionSummary] -> Int -> ListInferenceExecutionsResponse

-- | Create a value of <a>ListInferenceExecutionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListInferenceExecutions'</a>,
--   <a>listInferenceExecutionsResponse_nextToken</a> - An opaque
--   pagination token indicating where to continue the listing of inference
--   executions.
--   
--   
--   <a>$sel:inferenceExecutionSummaries:ListInferenceExecutionsResponse'</a>,
--   <a>listInferenceExecutionsResponse_inferenceExecutionSummaries</a> -
--   Provides an array of information about the individual inference
--   executions returned from the <tt>ListInferenceExecutions</tt>
--   operation, including model used, inference scheduler, data
--   configuration, and so on.
--   
--   <a>$sel:httpStatus:ListInferenceExecutionsResponse'</a>,
--   <a>listInferenceExecutionsResponse_httpStatus</a> - The response's
--   http status code.
newListInferenceExecutionsResponse :: Int -> ListInferenceExecutionsResponse

-- | <i>See:</i> <a>newCreateInferenceScheduler</a> smart constructor.
data CreateInferenceScheduler
CreateInferenceScheduler' :: Maybe Natural -> Maybe [Tag] -> Maybe Text -> Text -> Text -> DataUploadFrequency -> InferenceInputConfiguration -> InferenceOutputConfiguration -> Text -> Text -> CreateInferenceScheduler

-- | Create a value of <a>CreateInferenceScheduler</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataDelayOffsetInMinutes:CreateInferenceScheduler'</a>,
--   <a>createInferenceScheduler_dataDelayOffsetInMinutes</a> - A period of
--   time (in minutes) by which inference on the data is delayed after the
--   data starts. For instance, if you select an offset delay time of five
--   minutes, inference will not begin on the data until the first data
--   measurement after the five minute mark. For example, if five minutes
--   is selected, the inference scheduler will wake up at the configured
--   frequency with the additional five minute delay time to check the
--   customer S3 bucket. The customer can upload data at the same frequency
--   and they don't need to stop and restart the scheduler when uploading
--   new data.
--   
--   <a>$sel:tags:CreateInferenceScheduler'</a>,
--   <a>createInferenceScheduler_tags</a> - Any tags associated with the
--   inference scheduler.
--   
--   <a>$sel:serverSideKmsKeyId:CreateInferenceScheduler'</a>,
--   <a>createInferenceScheduler_serverSideKmsKeyId</a> - Provides the
--   identifier of the KMS key used to encrypt inference scheduler data by
--   Amazon Lookout for Equipment.
--   
--   <a>$sel:modelName:CreateInferenceScheduler'</a>,
--   <a>createInferenceScheduler_modelName</a> - The name of the previously
--   trained ML model being used to create the inference scheduler.
--   
--   <a>$sel:inferenceSchedulerName:CreateInferenceScheduler'</a>,
--   <a>createInferenceScheduler_inferenceSchedulerName</a> - The name of
--   the inference scheduler being created.
--   
--   <a>$sel:dataUploadFrequency:CreateInferenceScheduler'</a>,
--   <a>createInferenceScheduler_dataUploadFrequency</a> - How often data
--   is uploaded to the source S3 bucket for the input data. The value
--   chosen is the length of time between data uploads. For instance, if
--   you select 5 minutes, Amazon Lookout for Equipment will upload the
--   real-time data to the source bucket once every 5 minutes. This
--   frequency also determines how often Amazon Lookout for Equipment
--   starts a scheduled inference on your data. In this example, it starts
--   once every 5 minutes.
--   
--   <a>$sel:dataInputConfiguration:CreateInferenceScheduler'</a>,
--   <a>createInferenceScheduler_dataInputConfiguration</a> - Specifies
--   configuration information for the input data for the inference
--   scheduler, including delimiter, format, and dataset location.
--   
--   <a>$sel:dataOutputConfiguration:CreateInferenceScheduler'</a>,
--   <a>createInferenceScheduler_dataOutputConfiguration</a> - Specifies
--   configuration information for the output results for the inference
--   scheduler, including the S3 location for the output.
--   
--   <a>$sel:roleArn:CreateInferenceScheduler'</a>,
--   <a>createInferenceScheduler_roleArn</a> - The Amazon Resource Name
--   (ARN) of a role with permission to access the data source being used
--   for the inference.
--   
--   <a>$sel:clientToken:CreateInferenceScheduler'</a>,
--   <a>createInferenceScheduler_clientToken</a> - A unique identifier for
--   the request. If you do not set the client request token, Amazon
--   Lookout for Equipment generates one.
newCreateInferenceScheduler :: Text -> Text -> DataUploadFrequency -> InferenceInputConfiguration -> InferenceOutputConfiguration -> Text -> Text -> CreateInferenceScheduler

-- | <i>See:</i> <a>newCreateInferenceSchedulerResponse</a> smart
--   constructor.
data CreateInferenceSchedulerResponse
CreateInferenceSchedulerResponse' :: Maybe InferenceSchedulerStatus -> Maybe Text -> Maybe Text -> Int -> CreateInferenceSchedulerResponse

-- | Create a value of <a>CreateInferenceSchedulerResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:CreateInferenceSchedulerResponse'</a>,
--   <a>createInferenceSchedulerResponse_status</a> - Indicates the status
--   of the <tt>CreateInferenceScheduler</tt> operation.
--   
--   <a>$sel:inferenceSchedulerArn:CreateInferenceSchedulerResponse'</a>,
--   <a>createInferenceSchedulerResponse_inferenceSchedulerArn</a> - The
--   Amazon Resource Name (ARN) of the inference scheduler being created.
--   
--   <a>$sel:inferenceSchedulerName:CreateInferenceScheduler'</a>,
--   <a>createInferenceSchedulerResponse_inferenceSchedulerName</a> - The
--   name of inference scheduler being created.
--   
--   <a>$sel:httpStatus:CreateInferenceSchedulerResponse'</a>,
--   <a>createInferenceSchedulerResponse_httpStatus</a> - The response's
--   http status code.
newCreateInferenceSchedulerResponse :: Int -> CreateInferenceSchedulerResponse

-- | <i>See:</i> <a>newListDatasets</a> smart constructor.
data ListDatasets
ListDatasets' :: Maybe Text -> Maybe Text -> Maybe Natural -> ListDatasets

-- | Create a value of <a>ListDatasets</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDatasets'</a>, <a>listDatasets_nextToken</a> -
--   An opaque pagination token indicating where to continue the listing of
--   datasets.
--   
--   <a>$sel:datasetNameBeginsWith:ListDatasets'</a>,
--   <a>listDatasets_datasetNameBeginsWith</a> - The beginning of the name
--   of the datasets to be listed.
--   
--   <a>$sel:maxResults:ListDatasets'</a>, <a>listDatasets_maxResults</a> -
--   Specifies the maximum number of datasets to list.
newListDatasets :: ListDatasets

-- | <i>See:</i> <a>newListDatasetsResponse</a> smart constructor.
data ListDatasetsResponse
ListDatasetsResponse' :: Maybe Text -> Maybe [DatasetSummary] -> Int -> ListDatasetsResponse

-- | Create a value of <a>ListDatasetsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDatasets'</a>,
--   <a>listDatasetsResponse_nextToken</a> - An opaque pagination token
--   indicating where to continue the listing of datasets.
--   
--   <a>$sel:datasetSummaries:ListDatasetsResponse'</a>,
--   <a>listDatasetsResponse_datasetSummaries</a> - Provides information
--   about the specified dataset, including creation time, dataset ARN, and
--   status.
--   
--   <a>$sel:httpStatus:ListDatasetsResponse'</a>,
--   <a>listDatasetsResponse_httpStatus</a> - The response's http status
--   code.
newListDatasetsResponse :: Int -> ListDatasetsResponse

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The Amazon Resource Name (ARN) of
--   the resource to which the tag is currently associated.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> -
--   Specifies the key of the tag to be removed from a specified resource.
newUntagResource :: Text -> UntagResource

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | <i>See:</i> <a>newDescribeInferenceScheduler</a> smart constructor.
data DescribeInferenceScheduler
DescribeInferenceScheduler' :: Text -> DescribeInferenceScheduler

-- | Create a value of <a>DescribeInferenceScheduler</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inferenceSchedulerName:DescribeInferenceScheduler'</a>,
--   <a>describeInferenceScheduler_inferenceSchedulerName</a> - The name of
--   the inference scheduler being described.
newDescribeInferenceScheduler :: Text -> DescribeInferenceScheduler

-- | <i>See:</i> <a>newDescribeInferenceSchedulerResponse</a> smart
--   constructor.
data DescribeInferenceSchedulerResponse
DescribeInferenceSchedulerResponse' :: Maybe InferenceSchedulerStatus -> Maybe DataUploadFrequency -> Maybe Natural -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe InferenceOutputConfiguration -> Maybe POSIX -> Maybe Text -> Maybe InferenceInputConfiguration -> Maybe Text -> Maybe Text -> Int -> DescribeInferenceSchedulerResponse

-- | Create a value of <a>DescribeInferenceSchedulerResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:DescribeInferenceSchedulerResponse'</a>,
--   <a>describeInferenceSchedulerResponse_status</a> - Indicates the
--   status of the inference scheduler.
--   
--   <a>$sel:dataUploadFrequency:DescribeInferenceSchedulerResponse'</a>,
--   <a>describeInferenceSchedulerResponse_dataUploadFrequency</a> -
--   Specifies how often data is uploaded to the source S3 bucket for the
--   input data. This value is the length of time between data uploads. For
--   instance, if you select 5 minutes, Amazon Lookout for Equipment will
--   upload the real-time data to the source bucket once every 5 minutes.
--   This frequency also determines how often Amazon Lookout for Equipment
--   starts a scheduled inference on your data. In this example, it starts
--   once every 5 minutes.
--   
--   
--   <a>$sel:dataDelayOffsetInMinutes:DescribeInferenceSchedulerResponse'</a>,
--   <a>describeInferenceSchedulerResponse_dataDelayOffsetInMinutes</a> - A
--   period of time (in minutes) by which inference on the data is delayed
--   after the data starts. For instance, if you select an offset delay
--   time of five minutes, inference will not begin on the data until the
--   first data measurement after the five minute mark. For example, if
--   five minutes is selected, the inference scheduler will wake up at the
--   configured frequency with the additional five minute delay time to
--   check the customer S3 bucket. The customer can upload data at the same
--   frequency and they don't need to stop and restart the scheduler when
--   uploading new data.
--   
--   <a>$sel:modelArn:DescribeInferenceSchedulerResponse'</a>,
--   <a>describeInferenceSchedulerResponse_modelArn</a> - The Amazon
--   Resource Name (ARN) of the ML model of the inference scheduler being
--   described.
--   
--   <a>$sel:createdAt:DescribeInferenceSchedulerResponse'</a>,
--   <a>describeInferenceSchedulerResponse_createdAt</a> - Specifies the
--   time at which the inference scheduler was created.
--   
--   <a>$sel:modelName:DescribeInferenceSchedulerResponse'</a>,
--   <a>describeInferenceSchedulerResponse_modelName</a> - The name of the
--   ML model of the inference scheduler being described.
--   
--   <a>$sel:inferenceSchedulerArn:DescribeInferenceSchedulerResponse'</a>,
--   <a>describeInferenceSchedulerResponse_inferenceSchedulerArn</a> - The
--   Amazon Resource Name (ARN) of the inference scheduler being described.
--   
--   
--   <a>$sel:dataOutputConfiguration:DescribeInferenceSchedulerResponse'</a>,
--   <a>describeInferenceSchedulerResponse_dataOutputConfiguration</a> -
--   Specifies information for the output results for the inference
--   scheduler, including the output S3 location.
--   
--   <a>$sel:updatedAt:DescribeInferenceSchedulerResponse'</a>,
--   <a>describeInferenceSchedulerResponse_updatedAt</a> - Specifies the
--   time at which the inference scheduler was last updated, if it was.
--   
--   <a>$sel:inferenceSchedulerName:DescribeInferenceScheduler'</a>,
--   <a>describeInferenceSchedulerResponse_inferenceSchedulerName</a> - The
--   name of the inference scheduler being described.
--   
--   
--   <a>$sel:dataInputConfiguration:DescribeInferenceSchedulerResponse'</a>,
--   <a>describeInferenceSchedulerResponse_dataInputConfiguration</a> -
--   Specifies configuration information for the input data for the
--   inference scheduler, including delimiter, format, and dataset
--   location.
--   
--   <a>$sel:serverSideKmsKeyId:DescribeInferenceSchedulerResponse'</a>,
--   <a>describeInferenceSchedulerResponse_serverSideKmsKeyId</a> -
--   Provides the identifier of the KMS key used to encrypt inference
--   scheduler data by Amazon Lookout for Equipment.
--   
--   <a>$sel:roleArn:DescribeInferenceSchedulerResponse'</a>,
--   <a>describeInferenceSchedulerResponse_roleArn</a> - The Amazon
--   Resource Name (ARN) of a role with permission to access the data
--   source for the inference scheduler being described.
--   
--   <a>$sel:httpStatus:DescribeInferenceSchedulerResponse'</a>,
--   <a>describeInferenceSchedulerResponse_httpStatus</a> - The response's
--   http status code.
newDescribeInferenceSchedulerResponse :: Int -> DescribeInferenceSchedulerResponse
newtype DataUploadFrequency
DataUploadFrequency' :: Text -> DataUploadFrequency
[fromDataUploadFrequency] :: DataUploadFrequency -> Text
pattern DataUploadFrequency_PT10M :: DataUploadFrequency
pattern DataUploadFrequency_PT15M :: DataUploadFrequency
pattern DataUploadFrequency_PT1H :: DataUploadFrequency
pattern DataUploadFrequency_PT30M :: DataUploadFrequency
pattern DataUploadFrequency_PT5M :: DataUploadFrequency
newtype DatasetStatus
DatasetStatus' :: Text -> DatasetStatus
[fromDatasetStatus] :: DatasetStatus -> Text
pattern DatasetStatus_ACTIVE :: DatasetStatus
pattern DatasetStatus_CREATED :: DatasetStatus
pattern DatasetStatus_INGESTION_IN_PROGRESS :: DatasetStatus
newtype InferenceExecutionStatus
InferenceExecutionStatus' :: Text -> InferenceExecutionStatus
[fromInferenceExecutionStatus] :: InferenceExecutionStatus -> Text
pattern InferenceExecutionStatus_FAILED :: InferenceExecutionStatus
pattern InferenceExecutionStatus_IN_PROGRESS :: InferenceExecutionStatus
pattern InferenceExecutionStatus_SUCCESS :: InferenceExecutionStatus
newtype InferenceSchedulerStatus
InferenceSchedulerStatus' :: Text -> InferenceSchedulerStatus
[fromInferenceSchedulerStatus] :: InferenceSchedulerStatus -> Text
pattern InferenceSchedulerStatus_PENDING :: InferenceSchedulerStatus
pattern InferenceSchedulerStatus_RUNNING :: InferenceSchedulerStatus
pattern InferenceSchedulerStatus_STOPPED :: InferenceSchedulerStatus
pattern InferenceSchedulerStatus_STOPPING :: InferenceSchedulerStatus
newtype IngestionJobStatus
IngestionJobStatus' :: Text -> IngestionJobStatus
[fromIngestionJobStatus] :: IngestionJobStatus -> Text
pattern IngestionJobStatus_FAILED :: IngestionJobStatus
pattern IngestionJobStatus_IN_PROGRESS :: IngestionJobStatus
pattern IngestionJobStatus_SUCCESS :: IngestionJobStatus
newtype ModelStatus
ModelStatus' :: Text -> ModelStatus
[fromModelStatus] :: ModelStatus -> Text
pattern ModelStatus_FAILED :: ModelStatus
pattern ModelStatus_IN_PROGRESS :: ModelStatus
pattern ModelStatus_SUCCESS :: ModelStatus
newtype TargetSamplingRate
TargetSamplingRate' :: Text -> TargetSamplingRate
[fromTargetSamplingRate] :: TargetSamplingRate -> Text
pattern TargetSamplingRate_PT10M :: TargetSamplingRate
pattern TargetSamplingRate_PT10S :: TargetSamplingRate
pattern TargetSamplingRate_PT15M :: TargetSamplingRate
pattern TargetSamplingRate_PT15S :: TargetSamplingRate
pattern TargetSamplingRate_PT1H :: TargetSamplingRate
pattern TargetSamplingRate_PT1M :: TargetSamplingRate
pattern TargetSamplingRate_PT1S :: TargetSamplingRate
pattern TargetSamplingRate_PT30M :: TargetSamplingRate
pattern TargetSamplingRate_PT30S :: TargetSamplingRate
pattern TargetSamplingRate_PT5M :: TargetSamplingRate
pattern TargetSamplingRate_PT5S :: TargetSamplingRate

-- | Provides information about a specified data ingestion job, including
--   dataset information, data ingestion configuration, and status.
--   
--   <i>See:</i> <a>newDataIngestionJobSummary</a> smart constructor.
data DataIngestionJobSummary
DataIngestionJobSummary' :: Maybe IngestionInputConfiguration -> Maybe IngestionJobStatus -> Maybe Text -> Maybe Text -> Maybe Text -> DataIngestionJobSummary

-- | Create a value of <a>DataIngestionJobSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ingestionInputConfiguration:DataIngestionJobSummary'</a>,
--   <a>dataIngestionJobSummary_ingestionInputConfiguration</a> - Specifies
--   information for the input data for the data inference job, including
--   data S3 location parameters.
--   
--   <a>$sel:status:DataIngestionJobSummary'</a>,
--   <a>dataIngestionJobSummary_status</a> - Indicates the status of the
--   data ingestion job.
--   
--   <a>$sel:datasetArn:DataIngestionJobSummary'</a>,
--   <a>dataIngestionJobSummary_datasetArn</a> - The Amazon Resource Name
--   (ARN) of the dataset used in the data ingestion job.
--   
--   <a>$sel:jobId:DataIngestionJobSummary'</a>,
--   <a>dataIngestionJobSummary_jobId</a> - Indicates the job ID of the
--   data ingestion job.
--   
--   <a>$sel:datasetName:DataIngestionJobSummary'</a>,
--   <a>dataIngestionJobSummary_datasetName</a> - The name of the dataset
--   used for the data ingestion job.
newDataIngestionJobSummary :: DataIngestionJobSummary

-- | The configuration is the <tt>TargetSamplingRate</tt>, which is the
--   sampling rate of the data after post processing by Amazon Lookout for
--   Equipment. For example, if you provide data that has been collected at
--   a 1 second level and you want the system to resample the data at a 1
--   minute rate before training, the <tt>TargetSamplingRate</tt> is 1
--   minute.
--   
--   When providing a value for the <tt>TargetSamplingRate</tt>, you must
--   attach the prefix "PT" to the rate you want. The value for a 1 second
--   rate is therefore <i>PT1S</i>, the value for a 15 minute rate is
--   <i>PT15M</i>, and the value for a 1 hour rate is <i>PT1H</i>
--   
--   <i>See:</i> <a>newDataPreProcessingConfiguration</a> smart
--   constructor.
data DataPreProcessingConfiguration
DataPreProcessingConfiguration' :: Maybe TargetSamplingRate -> DataPreProcessingConfiguration

-- | Create a value of <a>DataPreProcessingConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetSamplingRate:DataPreProcessingConfiguration'</a>,
--   <a>dataPreProcessingConfiguration_targetSamplingRate</a> - The
--   sampling rate of the data after post processing by Amazon Lookout for
--   Equipment. For example, if you provide data that has been collected at
--   a 1 second level and you want the system to resample the data at a 1
--   minute rate before training, the <tt>TargetSamplingRate</tt> is 1
--   minute.
--   
--   When providing a value for the <tt>TargetSamplingRate</tt>, you must
--   attach the prefix "PT" to the rate you want. The value for a 1 second
--   rate is therefore <i>PT1S</i>, the value for a 15 minute rate is
--   <i>PT15M</i>, and the value for a 1 hour rate is <i>PT1H</i>
newDataPreProcessingConfiguration :: DataPreProcessingConfiguration

-- | Provides information about the data schema used with the given
--   dataset.
--   
--   <i>See:</i> <a>newDatasetSchema</a> smart constructor.
data DatasetSchema
DatasetSchema' :: Maybe Text -> DatasetSchema

-- | Create a value of <a>DatasetSchema</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inlineDataSchema:DatasetSchema'</a>,
--   <a>datasetSchema_inlineDataSchema</a> -
newDatasetSchema :: DatasetSchema

-- | Contains information about the specific data set, including name, ARN,
--   and status.
--   
--   <i>See:</i> <a>newDatasetSummary</a> smart constructor.
data DatasetSummary
DatasetSummary' :: Maybe DatasetStatus -> Maybe Text -> Maybe POSIX -> Maybe Text -> DatasetSummary

-- | Create a value of <a>DatasetSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:DatasetSummary'</a>, <a>datasetSummary_status</a> -
--   Indicates the status of the dataset.
--   
--   <a>$sel:datasetArn:DatasetSummary'</a>,
--   <a>datasetSummary_datasetArn</a> - The Amazon Resource Name (ARN) of
--   the specified dataset.
--   
--   <a>$sel:createdAt:DatasetSummary'</a>, <a>datasetSummary_createdAt</a>
--   - The time at which the dataset was created in Amazon Lookout for
--   Equipment.
--   
--   <a>$sel:datasetName:DatasetSummary'</a>,
--   <a>datasetSummary_datasetName</a> - The name of the dataset.
newDatasetSummary :: DatasetSummary

-- | Contains information about the specific inference execution, including
--   input and output data configuration, inference scheduling information,
--   status, and so on.
--   
--   <i>See:</i> <a>newInferenceExecutionSummary</a> smart constructor.
data InferenceExecutionSummary
InferenceExecutionSummary' :: Maybe InferenceExecutionStatus -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe S3Object -> Maybe Text -> Maybe POSIX -> Maybe InferenceOutputConfiguration -> Maybe POSIX -> Maybe Text -> Maybe InferenceInputConfiguration -> InferenceExecutionSummary

-- | Create a value of <a>InferenceExecutionSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:InferenceExecutionSummary'</a>,
--   <a>inferenceExecutionSummary_status</a> - Indicates the status of the
--   inference execution.
--   
--   <a>$sel:failedReason:InferenceExecutionSummary'</a>,
--   <a>inferenceExecutionSummary_failedReason</a> - Specifies the reason
--   for failure when an inference execution has failed.
--   
--   <a>$sel:modelArn:InferenceExecutionSummary'</a>,
--   <a>inferenceExecutionSummary_modelArn</a> - The Amazon Resource Name
--   (ARN) of the ML model used for the inference execution.
--   
--   <a>$sel:dataStartTime:InferenceExecutionSummary'</a>,
--   <a>inferenceExecutionSummary_dataStartTime</a> - Indicates the time
--   reference in the dataset at which the inference execution began.
--   
--   <a>$sel:modelName:InferenceExecutionSummary'</a>,
--   <a>inferenceExecutionSummary_modelName</a> - The name of the ML model
--   being used for the inference execution.
--   
--   <a>$sel:customerResultObject:InferenceExecutionSummary'</a>,
--   <a>inferenceExecutionSummary_customerResultObject</a> -
--   
--   <a>$sel:inferenceSchedulerArn:InferenceExecutionSummary'</a>,
--   <a>inferenceExecutionSummary_inferenceSchedulerArn</a> - The Amazon
--   Resource Name (ARN) of the inference scheduler being used for the
--   inference execution.
--   
--   <a>$sel:scheduledStartTime:InferenceExecutionSummary'</a>,
--   <a>inferenceExecutionSummary_scheduledStartTime</a> - Indicates the
--   start time at which the inference scheduler began the specific
--   inference execution.
--   
--   <a>$sel:dataOutputConfiguration:InferenceExecutionSummary'</a>,
--   <a>inferenceExecutionSummary_dataOutputConfiguration</a> - Specifies
--   configuration information for the output results from for the
--   inference execution, including the output S3 location.
--   
--   <a>$sel:dataEndTime:InferenceExecutionSummary'</a>,
--   <a>inferenceExecutionSummary_dataEndTime</a> - Indicates the time
--   reference in the dataset at which the inference execution stopped.
--   
--   <a>$sel:inferenceSchedulerName:InferenceExecutionSummary'</a>,
--   <a>inferenceExecutionSummary_inferenceSchedulerName</a> - The name of
--   the inference scheduler being used for the inference execution.
--   
--   <a>$sel:dataInputConfiguration:InferenceExecutionSummary'</a>,
--   <a>inferenceExecutionSummary_dataInputConfiguration</a> - Specifies
--   configuration information for the input data for the inference
--   scheduler, including delimiter, format, and dataset location.
newInferenceExecutionSummary :: InferenceExecutionSummary

-- | Specifies configuration information for the input data for the
--   inference, including S3 location of input data..
--   
--   <i>See:</i> <a>newInferenceInputConfiguration</a> smart constructor.
data InferenceInputConfiguration
InferenceInputConfiguration' :: Maybe Text -> Maybe InferenceS3InputConfiguration -> Maybe InferenceInputNameConfiguration -> InferenceInputConfiguration

-- | Create a value of <a>InferenceInputConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputTimeZoneOffset:InferenceInputConfiguration'</a>,
--   <a>inferenceInputConfiguration_inputTimeZoneOffset</a> - Indicates the
--   difference between your time zone and Greenwich Mean Time (GMT).
--   
--   <a>$sel:s3InputConfiguration:InferenceInputConfiguration'</a>,
--   <a>inferenceInputConfiguration_s3InputConfiguration</a> - Specifies
--   configuration information for the input data for the inference,
--   including S3 location of input data..
--   
--   
--   <a>$sel:inferenceInputNameConfiguration:InferenceInputConfiguration'</a>,
--   <a>inferenceInputConfiguration_inferenceInputNameConfiguration</a> -
--   Specifies configuration information for the input data for the
--   inference, including timestamp format and delimiter.
newInferenceInputConfiguration :: InferenceInputConfiguration

-- | Specifies configuration information for the input data for the
--   inference, including timestamp format and delimiter.
--   
--   <i>See:</i> <a>newInferenceInputNameConfiguration</a> smart
--   constructor.
data InferenceInputNameConfiguration
InferenceInputNameConfiguration' :: Maybe Text -> Maybe Text -> InferenceInputNameConfiguration

-- | Create a value of <a>InferenceInputNameConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timestampFormat:InferenceInputNameConfiguration'</a>,
--   <a>inferenceInputNameConfiguration_timestampFormat</a> - The format of
--   the timestamp, whether Epoch time, or standard, with or without
--   hyphens (-).
--   
--   
--   <a>$sel:componentTimestampDelimiter:InferenceInputNameConfiguration'</a>,
--   <a>inferenceInputNameConfiguration_componentTimestampDelimiter</a> -
--   Indicates the delimiter character used between items in the data.
newInferenceInputNameConfiguration :: InferenceInputNameConfiguration

-- | Specifies configuration information for the output results from for
--   the inference, including KMS key ID and output S3 location.
--   
--   <i>See:</i> <a>newInferenceOutputConfiguration</a> smart constructor.
data InferenceOutputConfiguration
InferenceOutputConfiguration' :: Maybe Text -> InferenceS3OutputConfiguration -> InferenceOutputConfiguration

-- | Create a value of <a>InferenceOutputConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:kmsKeyId:InferenceOutputConfiguration'</a>,
--   <a>inferenceOutputConfiguration_kmsKeyId</a> - The ID number for the
--   AWS KMS key used to encrypt the inference output.
--   
--   <a>$sel:s3OutputConfiguration:InferenceOutputConfiguration'</a>,
--   <a>inferenceOutputConfiguration_s3OutputConfiguration</a> - Specifies
--   configuration information for the output results from for the
--   inference, output S3 location.
newInferenceOutputConfiguration :: InferenceS3OutputConfiguration -> InferenceOutputConfiguration

-- | Specifies configuration information for the input data for the
--   inference, including input data S3 location.
--   
--   <i>See:</i> <a>newInferenceS3InputConfiguration</a> smart constructor.
data InferenceS3InputConfiguration
InferenceS3InputConfiguration' :: Maybe Text -> Text -> InferenceS3InputConfiguration

-- | Create a value of <a>InferenceS3InputConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:prefix:InferenceS3InputConfiguration'</a>,
--   <a>inferenceS3InputConfiguration_prefix</a> - The prefix for the S3
--   bucket used for the input data for the inference.
--   
--   <a>$sel:bucket:InferenceS3InputConfiguration'</a>,
--   <a>inferenceS3InputConfiguration_bucket</a> - The bucket containing
--   the input dataset for the inference.
newInferenceS3InputConfiguration :: Text -> InferenceS3InputConfiguration

-- | Specifies configuration information for the output results from the
--   inference, including output S3 location.
--   
--   <i>See:</i> <a>newInferenceS3OutputConfiguration</a> smart
--   constructor.
data InferenceS3OutputConfiguration
InferenceS3OutputConfiguration' :: Maybe Text -> Text -> InferenceS3OutputConfiguration

-- | Create a value of <a>InferenceS3OutputConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:prefix:InferenceS3OutputConfiguration'</a>,
--   <a>inferenceS3OutputConfiguration_prefix</a> - The prefix for the S3
--   bucket used for the output results from the inference.
--   
--   <a>$sel:bucket:InferenceS3OutputConfiguration'</a>,
--   <a>inferenceS3OutputConfiguration_bucket</a> - The bucket containing
--   the output results from the inference
newInferenceS3OutputConfiguration :: Text -> InferenceS3OutputConfiguration

-- | Contains information about the specific inference scheduler, including
--   data delay offset, model name and ARN, status, and so on.
--   
--   <i>See:</i> <a>newInferenceSchedulerSummary</a> smart constructor.
data InferenceSchedulerSummary
InferenceSchedulerSummary' :: Maybe InferenceSchedulerStatus -> Maybe DataUploadFrequency -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> InferenceSchedulerSummary

-- | Create a value of <a>InferenceSchedulerSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:InferenceSchedulerSummary'</a>,
--   <a>inferenceSchedulerSummary_status</a> - Indicates the status of the
--   inference scheduler.
--   
--   <a>$sel:dataUploadFrequency:InferenceSchedulerSummary'</a>,
--   <a>inferenceSchedulerSummary_dataUploadFrequency</a> - How often data
--   is uploaded to the source S3 bucket for the input data. This value is
--   the length of time between data uploads. For instance, if you select 5
--   minutes, Amazon Lookout for Equipment will upload the real-time data
--   to the source bucket once every 5 minutes. This frequency also
--   determines how often Amazon Lookout for Equipment starts a scheduled
--   inference on your data. In this example, it starts once every 5
--   minutes.
--   
--   <a>$sel:dataDelayOffsetInMinutes:InferenceSchedulerSummary'</a>,
--   <a>inferenceSchedulerSummary_dataDelayOffsetInMinutes</a> - A period
--   of time (in minutes) by which inference on the data is delayed after
--   the data starts. For instance, if an offset delay time of five minutes
--   was selected, inference will not begin on the data until the first
--   data measurement after the five minute mark. For example, if five
--   minutes is selected, the inference scheduler will wake up at the
--   configured frequency with the additional five minute delay time to
--   check the customer S3 bucket. The customer can upload data at the same
--   frequency and they don't need to stop and restart the scheduler when
--   uploading new data.
--   
--   <a>$sel:modelArn:InferenceSchedulerSummary'</a>,
--   <a>inferenceSchedulerSummary_modelArn</a> - The Amazon Resource Name
--   (ARN) of the ML model used by the inference scheduler.
--   
--   <a>$sel:modelName:InferenceSchedulerSummary'</a>,
--   <a>inferenceSchedulerSummary_modelName</a> - The name of the ML model
--   used for the inference scheduler.
--   
--   <a>$sel:inferenceSchedulerArn:InferenceSchedulerSummary'</a>,
--   <a>inferenceSchedulerSummary_inferenceSchedulerArn</a> - The Amazon
--   Resource Name (ARN) of the inference scheduler.
--   
--   <a>$sel:inferenceSchedulerName:InferenceSchedulerSummary'</a>,
--   <a>inferenceSchedulerSummary_inferenceSchedulerName</a> - The name of
--   the inference scheduler.
newInferenceSchedulerSummary :: InferenceSchedulerSummary

-- | Specifies configuration information for the input data for the data
--   ingestion job, including input data S3 location.
--   
--   <i>See:</i> <a>newIngestionInputConfiguration</a> smart constructor.
data IngestionInputConfiguration
IngestionInputConfiguration' :: IngestionS3InputConfiguration -> IngestionInputConfiguration

-- | Create a value of <a>IngestionInputConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3InputConfiguration:IngestionInputConfiguration'</a>,
--   <a>ingestionInputConfiguration_s3InputConfiguration</a> - The location
--   information for the S3 bucket used for input data for the data
--   ingestion.
newIngestionInputConfiguration :: IngestionS3InputConfiguration -> IngestionInputConfiguration

-- | Specifies S3 configuration information for the input data for the data
--   ingestion job.
--   
--   <i>See:</i> <a>newIngestionS3InputConfiguration</a> smart constructor.
data IngestionS3InputConfiguration
IngestionS3InputConfiguration' :: Maybe Text -> Text -> IngestionS3InputConfiguration

-- | Create a value of <a>IngestionS3InputConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:prefix:IngestionS3InputConfiguration'</a>,
--   <a>ingestionS3InputConfiguration_prefix</a> - The prefix for the S3
--   location being used for the input data for the data ingestion.
--   
--   <a>$sel:bucket:IngestionS3InputConfiguration'</a>,
--   <a>ingestionS3InputConfiguration_bucket</a> - The name of the S3
--   bucket used for the input data for the data ingestion.
newIngestionS3InputConfiguration :: Text -> IngestionS3InputConfiguration

-- | Contains the configuration information for the S3 location being used
--   to hold label data.
--   
--   <i>See:</i> <a>newLabelsInputConfiguration</a> smart constructor.
data LabelsInputConfiguration
LabelsInputConfiguration' :: LabelsS3InputConfiguration -> LabelsInputConfiguration

-- | Create a value of <a>LabelsInputConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3InputConfiguration:LabelsInputConfiguration'</a>,
--   <a>labelsInputConfiguration_s3InputConfiguration</a> - Contains
--   location information for the S3 location being used for label data.
newLabelsInputConfiguration :: LabelsS3InputConfiguration -> LabelsInputConfiguration

-- | The location information (prefix and bucket name) for the s3 location
--   being used for label data.
--   
--   <i>See:</i> <a>newLabelsS3InputConfiguration</a> smart constructor.
data LabelsS3InputConfiguration
LabelsS3InputConfiguration' :: Maybe Text -> Text -> LabelsS3InputConfiguration

-- | Create a value of <a>LabelsS3InputConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:prefix:LabelsS3InputConfiguration'</a>,
--   <a>labelsS3InputConfiguration_prefix</a> - The prefix for the S3
--   bucket used for the label data.
--   
--   <a>$sel:bucket:LabelsS3InputConfiguration'</a>,
--   <a>labelsS3InputConfiguration_bucket</a> - The name of the S3 bucket
--   holding the label data.
newLabelsS3InputConfiguration :: Text -> LabelsS3InputConfiguration

-- | Provides information about the specified ML model, including dataset
--   and model names and ARNs, as well as status.
--   
--   <i>See:</i> <a>newModelSummary</a> smart constructor.
data ModelSummary
ModelSummary' :: Maybe ModelStatus -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> ModelSummary

-- | Create a value of <a>ModelSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ModelSummary'</a>, <a>modelSummary_status</a> -
--   Indicates the status of the ML model.
--   
--   <a>$sel:datasetArn:ModelSummary'</a>, <a>modelSummary_datasetArn</a> -
--   The Amazon Resource Name (ARN) of the dataset used to create the
--   model.
--   
--   <a>$sel:modelArn:ModelSummary'</a>, <a>modelSummary_modelArn</a> - The
--   Amazon Resource Name (ARN) of the ML model.
--   
--   <a>$sel:createdAt:ModelSummary'</a>, <a>modelSummary_createdAt</a> -
--   The time at which the specific model was created.
--   
--   <a>$sel:modelName:ModelSummary'</a>, <a>modelSummary_modelName</a> -
--   The name of the ML model.
--   
--   <a>$sel:datasetName:ModelSummary'</a>, <a>modelSummary_datasetName</a>
--   - The name of the dataset being used for the ML model.
newModelSummary :: ModelSummary

-- | Contains information about an S3 bucket.
--   
--   <i>See:</i> <a>newS3Object</a> smart constructor.
data S3Object
S3Object' :: Text -> Text -> S3Object

-- | Create a value of <a>S3Object</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bucket:S3Object'</a>, <a>s3Object_bucket</a> - The name of the
--   specific S3 bucket.
--   
--   <a>$sel:key:S3Object'</a>, <a>s3Object_key</a> - The AWS Key
--   Management Service (AWS KMS) key being used to encrypt the S3 object.
--   Without this key, data in the bucket is not accessible.
newS3Object :: Text -> Text -> S3Object

-- | A tag is a key-value pair that can be added to a resource as metadata.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The key for the specified tag.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The value for the specified
--   tag.
newTag :: Text -> Text -> Tag
