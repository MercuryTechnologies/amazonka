-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-appconfigZSamazonka-appconfig
@version 2.0


module Amazonka.AppConfig.Types.Application

-- | <i>See:</i> <a>newApplication</a> smart constructor.
data Application
Application' :: Maybe Text -> Maybe Text -> Maybe Text -> Application

-- | The application name.
[$sel:name:Application'] :: Application -> Maybe Text

-- | The application ID.
[$sel:id:Application'] :: Application -> Maybe Text

-- | The description of the application.
[$sel:description:Application'] :: Application -> Maybe Text

-- | Create a value of <a>Application</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:Application'</a>, <a>application_name</a> - The
--   application name.
--   
--   <a>$sel:id:Application'</a>, <a>application_id</a> - The application
--   ID.
--   
--   <a>$sel:description:Application'</a>, <a>application_description</a> -
--   The description of the application.
newApplication :: Application

-- | The application name.
application_name :: Lens' Application (Maybe Text)

-- | The application ID.
application_id :: Lens' Application (Maybe Text)

-- | The description of the application.
application_description :: Lens' Application (Maybe Text)
instance GHC.Generics.Generic Amazonka.AppConfig.Types.Application.Application
instance GHC.Show.Show Amazonka.AppConfig.Types.Application.Application
instance GHC.Read.Read Amazonka.AppConfig.Types.Application.Application
instance GHC.Classes.Eq Amazonka.AppConfig.Types.Application.Application
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppConfig.Types.Application.Application
instance Data.Hashable.Class.Hashable Amazonka.AppConfig.Types.Application.Application
instance Control.DeepSeq.NFData Amazonka.AppConfig.Types.Application.Application


module Amazonka.AppConfig.Types.DeploymentEventType
newtype DeploymentEventType
DeploymentEventType' :: Text -> DeploymentEventType
[fromDeploymentEventType] :: DeploymentEventType -> Text
pattern DeploymentEventType_BAKE_TIME_STARTED :: DeploymentEventType
pattern DeploymentEventType_DEPLOYMENT_COMPLETED :: DeploymentEventType
pattern DeploymentEventType_DEPLOYMENT_STARTED :: DeploymentEventType
pattern DeploymentEventType_PERCENTAGE_UPDATED :: DeploymentEventType
pattern DeploymentEventType_ROLLBACK_COMPLETED :: DeploymentEventType
pattern DeploymentEventType_ROLLBACK_STARTED :: DeploymentEventType
instance Amazonka.Data.XML.ToXML Amazonka.AppConfig.Types.DeploymentEventType.DeploymentEventType
instance Amazonka.Data.XML.FromXML Amazonka.AppConfig.Types.DeploymentEventType.DeploymentEventType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.AppConfig.Types.DeploymentEventType.DeploymentEventType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppConfig.Types.DeploymentEventType.DeploymentEventType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.AppConfig.Types.DeploymentEventType.DeploymentEventType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppConfig.Types.DeploymentEventType.DeploymentEventType
instance Amazonka.Data.Query.ToQuery Amazonka.AppConfig.Types.DeploymentEventType.DeploymentEventType
instance Amazonka.Data.Headers.ToHeader Amazonka.AppConfig.Types.DeploymentEventType.DeploymentEventType
instance Amazonka.Data.Log.ToLog Amazonka.AppConfig.Types.DeploymentEventType.DeploymentEventType
instance Amazonka.Data.ByteString.ToByteString Amazonka.AppConfig.Types.DeploymentEventType.DeploymentEventType
instance Amazonka.Data.Text.ToText Amazonka.AppConfig.Types.DeploymentEventType.DeploymentEventType
instance Amazonka.Data.Text.FromText Amazonka.AppConfig.Types.DeploymentEventType.DeploymentEventType
instance Control.DeepSeq.NFData Amazonka.AppConfig.Types.DeploymentEventType.DeploymentEventType
instance Data.Hashable.Class.Hashable Amazonka.AppConfig.Types.DeploymentEventType.DeploymentEventType
instance GHC.Generics.Generic Amazonka.AppConfig.Types.DeploymentEventType.DeploymentEventType
instance GHC.Classes.Ord Amazonka.AppConfig.Types.DeploymentEventType.DeploymentEventType
instance GHC.Classes.Eq Amazonka.AppConfig.Types.DeploymentEventType.DeploymentEventType
instance GHC.Read.Read Amazonka.AppConfig.Types.DeploymentEventType.DeploymentEventType
instance GHC.Show.Show Amazonka.AppConfig.Types.DeploymentEventType.DeploymentEventType


module Amazonka.AppConfig.Types.DeploymentState
newtype DeploymentState
DeploymentState' :: Text -> DeploymentState
[fromDeploymentState] :: DeploymentState -> Text
pattern DeploymentState_BAKING :: DeploymentState
pattern DeploymentState_COMPLETE :: DeploymentState
pattern DeploymentState_DEPLOYING :: DeploymentState
pattern DeploymentState_ROLLED_BACK :: DeploymentState
pattern DeploymentState_ROLLING_BACK :: DeploymentState
pattern DeploymentState_VALIDATING :: DeploymentState
instance Amazonka.Data.XML.ToXML Amazonka.AppConfig.Types.DeploymentState.DeploymentState
instance Amazonka.Data.XML.FromXML Amazonka.AppConfig.Types.DeploymentState.DeploymentState
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.AppConfig.Types.DeploymentState.DeploymentState
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppConfig.Types.DeploymentState.DeploymentState
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.AppConfig.Types.DeploymentState.DeploymentState
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppConfig.Types.DeploymentState.DeploymentState
instance Amazonka.Data.Query.ToQuery Amazonka.AppConfig.Types.DeploymentState.DeploymentState
instance Amazonka.Data.Headers.ToHeader Amazonka.AppConfig.Types.DeploymentState.DeploymentState
instance Amazonka.Data.Log.ToLog Amazonka.AppConfig.Types.DeploymentState.DeploymentState
instance Amazonka.Data.ByteString.ToByteString Amazonka.AppConfig.Types.DeploymentState.DeploymentState
instance Amazonka.Data.Text.ToText Amazonka.AppConfig.Types.DeploymentState.DeploymentState
instance Amazonka.Data.Text.FromText Amazonka.AppConfig.Types.DeploymentState.DeploymentState
instance Control.DeepSeq.NFData Amazonka.AppConfig.Types.DeploymentState.DeploymentState
instance Data.Hashable.Class.Hashable Amazonka.AppConfig.Types.DeploymentState.DeploymentState
instance GHC.Generics.Generic Amazonka.AppConfig.Types.DeploymentState.DeploymentState
instance GHC.Classes.Ord Amazonka.AppConfig.Types.DeploymentState.DeploymentState
instance GHC.Classes.Eq Amazonka.AppConfig.Types.DeploymentState.DeploymentState
instance GHC.Read.Read Amazonka.AppConfig.Types.DeploymentState.DeploymentState
instance GHC.Show.Show Amazonka.AppConfig.Types.DeploymentState.DeploymentState


module Amazonka.AppConfig.Types.EnvironmentState
newtype EnvironmentState
EnvironmentState' :: Text -> EnvironmentState
[fromEnvironmentState] :: EnvironmentState -> Text
pattern EnvironmentState_DEPLOYING :: EnvironmentState
pattern EnvironmentState_READY_FOR_DEPLOYMENT :: EnvironmentState
pattern EnvironmentState_ROLLED_BACK :: EnvironmentState
pattern EnvironmentState_ROLLING_BACK :: EnvironmentState
instance Amazonka.Data.XML.ToXML Amazonka.AppConfig.Types.EnvironmentState.EnvironmentState
instance Amazonka.Data.XML.FromXML Amazonka.AppConfig.Types.EnvironmentState.EnvironmentState
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.AppConfig.Types.EnvironmentState.EnvironmentState
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppConfig.Types.EnvironmentState.EnvironmentState
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.AppConfig.Types.EnvironmentState.EnvironmentState
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppConfig.Types.EnvironmentState.EnvironmentState
instance Amazonka.Data.Query.ToQuery Amazonka.AppConfig.Types.EnvironmentState.EnvironmentState
instance Amazonka.Data.Headers.ToHeader Amazonka.AppConfig.Types.EnvironmentState.EnvironmentState
instance Amazonka.Data.Log.ToLog Amazonka.AppConfig.Types.EnvironmentState.EnvironmentState
instance Amazonka.Data.ByteString.ToByteString Amazonka.AppConfig.Types.EnvironmentState.EnvironmentState
instance Amazonka.Data.Text.ToText Amazonka.AppConfig.Types.EnvironmentState.EnvironmentState
instance Amazonka.Data.Text.FromText Amazonka.AppConfig.Types.EnvironmentState.EnvironmentState
instance Control.DeepSeq.NFData Amazonka.AppConfig.Types.EnvironmentState.EnvironmentState
instance Data.Hashable.Class.Hashable Amazonka.AppConfig.Types.EnvironmentState.EnvironmentState
instance GHC.Generics.Generic Amazonka.AppConfig.Types.EnvironmentState.EnvironmentState
instance GHC.Classes.Ord Amazonka.AppConfig.Types.EnvironmentState.EnvironmentState
instance GHC.Classes.Eq Amazonka.AppConfig.Types.EnvironmentState.EnvironmentState
instance GHC.Read.Read Amazonka.AppConfig.Types.EnvironmentState.EnvironmentState
instance GHC.Show.Show Amazonka.AppConfig.Types.EnvironmentState.EnvironmentState


module Amazonka.AppConfig.Types.GrowthType
newtype GrowthType
GrowthType' :: Text -> GrowthType
[fromGrowthType] :: GrowthType -> Text
pattern GrowthType_EXPONENTIAL :: GrowthType
pattern GrowthType_LINEAR :: GrowthType
instance Amazonka.Data.XML.ToXML Amazonka.AppConfig.Types.GrowthType.GrowthType
instance Amazonka.Data.XML.FromXML Amazonka.AppConfig.Types.GrowthType.GrowthType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.AppConfig.Types.GrowthType.GrowthType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppConfig.Types.GrowthType.GrowthType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.AppConfig.Types.GrowthType.GrowthType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppConfig.Types.GrowthType.GrowthType
instance Amazonka.Data.Query.ToQuery Amazonka.AppConfig.Types.GrowthType.GrowthType
instance Amazonka.Data.Headers.ToHeader Amazonka.AppConfig.Types.GrowthType.GrowthType
instance Amazonka.Data.Log.ToLog Amazonka.AppConfig.Types.GrowthType.GrowthType
instance Amazonka.Data.ByteString.ToByteString Amazonka.AppConfig.Types.GrowthType.GrowthType
instance Amazonka.Data.Text.ToText Amazonka.AppConfig.Types.GrowthType.GrowthType
instance Amazonka.Data.Text.FromText Amazonka.AppConfig.Types.GrowthType.GrowthType
instance Control.DeepSeq.NFData Amazonka.AppConfig.Types.GrowthType.GrowthType
instance Data.Hashable.Class.Hashable Amazonka.AppConfig.Types.GrowthType.GrowthType
instance GHC.Generics.Generic Amazonka.AppConfig.Types.GrowthType.GrowthType
instance GHC.Classes.Ord Amazonka.AppConfig.Types.GrowthType.GrowthType
instance GHC.Classes.Eq Amazonka.AppConfig.Types.GrowthType.GrowthType
instance GHC.Read.Read Amazonka.AppConfig.Types.GrowthType.GrowthType
instance GHC.Show.Show Amazonka.AppConfig.Types.GrowthType.GrowthType


module Amazonka.AppConfig.Types.DeploymentSummary

-- | Information about the deployment.
--   
--   <i>See:</i> <a>newDeploymentSummary</a> smart constructor.
data DeploymentSummary
DeploymentSummary' :: Maybe Double -> Maybe Text -> Maybe DeploymentState -> Maybe Int -> Maybe Text -> Maybe Double -> Maybe POSIX -> Maybe Natural -> Maybe POSIX -> Maybe Natural -> Maybe GrowthType -> DeploymentSummary

-- | The percentage of targets to receive a deployed configuration during
--   each interval.
[$sel:growthFactor:DeploymentSummary'] :: DeploymentSummary -> Maybe Double

-- | The name of the configuration.
[$sel:configurationName:DeploymentSummary'] :: DeploymentSummary -> Maybe Text

-- | The state of the deployment.
[$sel:state:DeploymentSummary'] :: DeploymentSummary -> Maybe DeploymentState

-- | The sequence number of the deployment.
[$sel:deploymentNumber:DeploymentSummary'] :: DeploymentSummary -> Maybe Int

-- | The version of the configuration.
[$sel:configurationVersion:DeploymentSummary'] :: DeploymentSummary -> Maybe Text

-- | The percentage of targets for which the deployment is available.
[$sel:percentageComplete:DeploymentSummary'] :: DeploymentSummary -> Maybe Double

-- | Time the deployment started.
[$sel:startedAt:DeploymentSummary'] :: DeploymentSummary -> Maybe POSIX

-- | Total amount of time the deployment lasted.
[$sel:deploymentDurationInMinutes:DeploymentSummary'] :: DeploymentSummary -> Maybe Natural

-- | Time the deployment completed.
[$sel:completedAt:DeploymentSummary'] :: DeploymentSummary -> Maybe POSIX

-- | The amount of time AppConfig monitors for alarms before considering
--   the deployment to be complete and no longer eligible for automatic
--   roll back.
[$sel:finalBakeTimeInMinutes:DeploymentSummary'] :: DeploymentSummary -> Maybe Natural

-- | The algorithm used to define how percentage grows over time.
[$sel:growthType:DeploymentSummary'] :: DeploymentSummary -> Maybe GrowthType

-- | Create a value of <a>DeploymentSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:growthFactor:DeploymentSummary'</a>,
--   <a>deploymentSummary_growthFactor</a> - The percentage of targets to
--   receive a deployed configuration during each interval.
--   
--   <a>$sel:configurationName:DeploymentSummary'</a>,
--   <a>deploymentSummary_configurationName</a> - The name of the
--   configuration.
--   
--   <a>$sel:state:DeploymentSummary'</a>, <a>deploymentSummary_state</a> -
--   The state of the deployment.
--   
--   <a>$sel:deploymentNumber:DeploymentSummary'</a>,
--   <a>deploymentSummary_deploymentNumber</a> - The sequence number of the
--   deployment.
--   
--   <a>$sel:configurationVersion:DeploymentSummary'</a>,
--   <a>deploymentSummary_configurationVersion</a> - The version of the
--   configuration.
--   
--   <a>$sel:percentageComplete:DeploymentSummary'</a>,
--   <a>deploymentSummary_percentageComplete</a> - The percentage of
--   targets for which the deployment is available.
--   
--   <a>$sel:startedAt:DeploymentSummary'</a>,
--   <a>deploymentSummary_startedAt</a> - Time the deployment started.
--   
--   <a>$sel:deploymentDurationInMinutes:DeploymentSummary'</a>,
--   <a>deploymentSummary_deploymentDurationInMinutes</a> - Total amount of
--   time the deployment lasted.
--   
--   <a>$sel:completedAt:DeploymentSummary'</a>,
--   <a>deploymentSummary_completedAt</a> - Time the deployment completed.
--   
--   <a>$sel:finalBakeTimeInMinutes:DeploymentSummary'</a>,
--   <a>deploymentSummary_finalBakeTimeInMinutes</a> - The amount of time
--   AppConfig monitors for alarms before considering the deployment to be
--   complete and no longer eligible for automatic roll back.
--   
--   <a>$sel:growthType:DeploymentSummary'</a>,
--   <a>deploymentSummary_growthType</a> - The algorithm used to define how
--   percentage grows over time.
newDeploymentSummary :: DeploymentSummary

-- | The percentage of targets to receive a deployed configuration during
--   each interval.
deploymentSummary_growthFactor :: Lens' DeploymentSummary (Maybe Double)

-- | The name of the configuration.
deploymentSummary_configurationName :: Lens' DeploymentSummary (Maybe Text)

-- | The state of the deployment.
deploymentSummary_state :: Lens' DeploymentSummary (Maybe DeploymentState)

-- | The sequence number of the deployment.
deploymentSummary_deploymentNumber :: Lens' DeploymentSummary (Maybe Int)

-- | The version of the configuration.
deploymentSummary_configurationVersion :: Lens' DeploymentSummary (Maybe Text)

-- | The percentage of targets for which the deployment is available.
deploymentSummary_percentageComplete :: Lens' DeploymentSummary (Maybe Double)

-- | Time the deployment started.
deploymentSummary_startedAt :: Lens' DeploymentSummary (Maybe UTCTime)

-- | Total amount of time the deployment lasted.
deploymentSummary_deploymentDurationInMinutes :: Lens' DeploymentSummary (Maybe Natural)

-- | Time the deployment completed.
deploymentSummary_completedAt :: Lens' DeploymentSummary (Maybe UTCTime)

-- | The amount of time AppConfig monitors for alarms before considering
--   the deployment to be complete and no longer eligible for automatic
--   roll back.
deploymentSummary_finalBakeTimeInMinutes :: Lens' DeploymentSummary (Maybe Natural)

-- | The algorithm used to define how percentage grows over time.
deploymentSummary_growthType :: Lens' DeploymentSummary (Maybe GrowthType)
instance GHC.Generics.Generic Amazonka.AppConfig.Types.DeploymentSummary.DeploymentSummary
instance GHC.Show.Show Amazonka.AppConfig.Types.DeploymentSummary.DeploymentSummary
instance GHC.Read.Read Amazonka.AppConfig.Types.DeploymentSummary.DeploymentSummary
instance GHC.Classes.Eq Amazonka.AppConfig.Types.DeploymentSummary.DeploymentSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppConfig.Types.DeploymentSummary.DeploymentSummary
instance Data.Hashable.Class.Hashable Amazonka.AppConfig.Types.DeploymentSummary.DeploymentSummary
instance Control.DeepSeq.NFData Amazonka.AppConfig.Types.DeploymentSummary.DeploymentSummary


module Amazonka.AppConfig.Types.HostedConfigurationVersion

-- | <i>See:</i> <a>newHostedConfigurationVersion</a> smart constructor.
data HostedConfigurationVersion
HostedConfigurationVersion' :: Maybe (Sensitive ByteString) -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> HostedConfigurationVersion

-- | The content of the configuration or the configuration data.
[$sel:content:HostedConfigurationVersion'] :: HostedConfigurationVersion -> Maybe (Sensitive ByteString)

-- | The configuration version.
[$sel:versionNumber:HostedConfigurationVersion'] :: HostedConfigurationVersion -> Maybe Int

-- | The application ID.
[$sel:applicationId:HostedConfigurationVersion'] :: HostedConfigurationVersion -> Maybe Text

-- | A description of the configuration.
[$sel:description:HostedConfigurationVersion'] :: HostedConfigurationVersion -> Maybe Text

-- | The configuration profile ID.
[$sel:configurationProfileId:HostedConfigurationVersion'] :: HostedConfigurationVersion -> Maybe Text

-- | A standard MIME type describing the format of the configuration
--   content. For more information, see <a>Content-Type</a>.
[$sel:contentType:HostedConfigurationVersion'] :: HostedConfigurationVersion -> Maybe Text

-- | Create a value of <a>HostedConfigurationVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:content:HostedConfigurationVersion'</a>,
--   <a>hostedConfigurationVersion_content</a> - The content of the
--   configuration or the configuration data.
--   
--   <a>$sel:versionNumber:HostedConfigurationVersion'</a>,
--   <a>hostedConfigurationVersion_versionNumber</a> - The configuration
--   version.
--   
--   <a>$sel:applicationId:HostedConfigurationVersion'</a>,
--   <a>hostedConfigurationVersion_applicationId</a> - The application ID.
--   
--   <a>$sel:description:HostedConfigurationVersion'</a>,
--   <a>hostedConfigurationVersion_description</a> - A description of the
--   configuration.
--   
--   <a>$sel:configurationProfileId:HostedConfigurationVersion'</a>,
--   <a>hostedConfigurationVersion_configurationProfileId</a> - The
--   configuration profile ID.
--   
--   <a>$sel:contentType:HostedConfigurationVersion'</a>,
--   <a>hostedConfigurationVersion_contentType</a> - A standard MIME type
--   describing the format of the configuration content. For more
--   information, see <a>Content-Type</a>.
newHostedConfigurationVersion :: HostedConfigurationVersion

-- | The content of the configuration or the configuration data.
hostedConfigurationVersion_content :: Lens' HostedConfigurationVersion (Maybe ByteString)

-- | The configuration version.
hostedConfigurationVersion_versionNumber :: Lens' HostedConfigurationVersion (Maybe Int)

-- | The application ID.
hostedConfigurationVersion_applicationId :: Lens' HostedConfigurationVersion (Maybe Text)

-- | A description of the configuration.
hostedConfigurationVersion_description :: Lens' HostedConfigurationVersion (Maybe Text)

-- | The configuration profile ID.
hostedConfigurationVersion_configurationProfileId :: Lens' HostedConfigurationVersion (Maybe Text)

-- | A standard MIME type describing the format of the configuration
--   content. For more information, see <a>Content-Type</a>.
hostedConfigurationVersion_contentType :: Lens' HostedConfigurationVersion (Maybe Text)
instance GHC.Generics.Generic Amazonka.AppConfig.Types.HostedConfigurationVersion.HostedConfigurationVersion
instance GHC.Show.Show Amazonka.AppConfig.Types.HostedConfigurationVersion.HostedConfigurationVersion
instance GHC.Classes.Eq Amazonka.AppConfig.Types.HostedConfigurationVersion.HostedConfigurationVersion
instance Data.Hashable.Class.Hashable Amazonka.AppConfig.Types.HostedConfigurationVersion.HostedConfigurationVersion
instance Control.DeepSeq.NFData Amazonka.AppConfig.Types.HostedConfigurationVersion.HostedConfigurationVersion


module Amazonka.AppConfig.Types.HostedConfigurationVersionSummary

-- | Information about the configuration.
--   
--   <i>See:</i> <a>newHostedConfigurationVersionSummary</a> smart
--   constructor.
data HostedConfigurationVersionSummary
HostedConfigurationVersionSummary' :: Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> HostedConfigurationVersionSummary

-- | The configuration version.
[$sel:versionNumber:HostedConfigurationVersionSummary'] :: HostedConfigurationVersionSummary -> Maybe Int

-- | The application ID.
[$sel:applicationId:HostedConfigurationVersionSummary'] :: HostedConfigurationVersionSummary -> Maybe Text

-- | A description of the configuration.
[$sel:description:HostedConfigurationVersionSummary'] :: HostedConfigurationVersionSummary -> Maybe Text

-- | The configuration profile ID.
[$sel:configurationProfileId:HostedConfigurationVersionSummary'] :: HostedConfigurationVersionSummary -> Maybe Text

-- | A standard MIME type describing the format of the configuration
--   content. For more information, see <a>Content-Type</a>.
[$sel:contentType:HostedConfigurationVersionSummary'] :: HostedConfigurationVersionSummary -> Maybe Text

-- | Create a value of <a>HostedConfigurationVersionSummary</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:versionNumber:HostedConfigurationVersionSummary'</a>,
--   <a>hostedConfigurationVersionSummary_versionNumber</a> - The
--   configuration version.
--   
--   <a>$sel:applicationId:HostedConfigurationVersionSummary'</a>,
--   <a>hostedConfigurationVersionSummary_applicationId</a> - The
--   application ID.
--   
--   <a>$sel:description:HostedConfigurationVersionSummary'</a>,
--   <a>hostedConfigurationVersionSummary_description</a> - A description
--   of the configuration.
--   
--   <a>$sel:configurationProfileId:HostedConfigurationVersionSummary'</a>,
--   <a>hostedConfigurationVersionSummary_configurationProfileId</a> - The
--   configuration profile ID.
--   
--   <a>$sel:contentType:HostedConfigurationVersionSummary'</a>,
--   <a>hostedConfigurationVersionSummary_contentType</a> - A standard MIME
--   type describing the format of the configuration content. For more
--   information, see <a>Content-Type</a>.
newHostedConfigurationVersionSummary :: HostedConfigurationVersionSummary

-- | The configuration version.
hostedConfigurationVersionSummary_versionNumber :: Lens' HostedConfigurationVersionSummary (Maybe Int)

-- | The application ID.
hostedConfigurationVersionSummary_applicationId :: Lens' HostedConfigurationVersionSummary (Maybe Text)

-- | A description of the configuration.
hostedConfigurationVersionSummary_description :: Lens' HostedConfigurationVersionSummary (Maybe Text)

-- | The configuration profile ID.
hostedConfigurationVersionSummary_configurationProfileId :: Lens' HostedConfigurationVersionSummary (Maybe Text)

-- | A standard MIME type describing the format of the configuration
--   content. For more information, see <a>Content-Type</a>.
hostedConfigurationVersionSummary_contentType :: Lens' HostedConfigurationVersionSummary (Maybe Text)
instance GHC.Generics.Generic Amazonka.AppConfig.Types.HostedConfigurationVersionSummary.HostedConfigurationVersionSummary
instance GHC.Show.Show Amazonka.AppConfig.Types.HostedConfigurationVersionSummary.HostedConfigurationVersionSummary
instance GHC.Read.Read Amazonka.AppConfig.Types.HostedConfigurationVersionSummary.HostedConfigurationVersionSummary
instance GHC.Classes.Eq Amazonka.AppConfig.Types.HostedConfigurationVersionSummary.HostedConfigurationVersionSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppConfig.Types.HostedConfigurationVersionSummary.HostedConfigurationVersionSummary
instance Data.Hashable.Class.Hashable Amazonka.AppConfig.Types.HostedConfigurationVersionSummary.HostedConfigurationVersionSummary
instance Control.DeepSeq.NFData Amazonka.AppConfig.Types.HostedConfigurationVersionSummary.HostedConfigurationVersionSummary


module Amazonka.AppConfig.Types.Monitor

-- | Amazon CloudWatch alarms to monitor during the deployment process.
--   
--   <i>See:</i> <a>newMonitor</a> smart constructor.
data Monitor
Monitor' :: Maybe Text -> Maybe Text -> Monitor

-- | ARN of an IAM role for AppConfig to monitor <tt>AlarmArn</tt>.
[$sel:alarmRoleArn:Monitor'] :: Monitor -> Maybe Text

-- | ARN of the Amazon CloudWatch alarm.
[$sel:alarmArn:Monitor'] :: Monitor -> Maybe Text

-- | Create a value of <a>Monitor</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:alarmRoleArn:Monitor'</a>, <a>monitor_alarmRoleArn</a> - ARN
--   of an IAM role for AppConfig to monitor <tt>AlarmArn</tt>.
--   
--   <a>$sel:alarmArn:Monitor'</a>, <a>monitor_alarmArn</a> - ARN of the
--   Amazon CloudWatch alarm.
newMonitor :: Monitor

-- | ARN of an IAM role for AppConfig to monitor <tt>AlarmArn</tt>.
monitor_alarmRoleArn :: Lens' Monitor (Maybe Text)

-- | ARN of the Amazon CloudWatch alarm.
monitor_alarmArn :: Lens' Monitor (Maybe Text)
instance GHC.Generics.Generic Amazonka.AppConfig.Types.Monitor.Monitor
instance GHC.Show.Show Amazonka.AppConfig.Types.Monitor.Monitor
instance GHC.Read.Read Amazonka.AppConfig.Types.Monitor.Monitor
instance GHC.Classes.Eq Amazonka.AppConfig.Types.Monitor.Monitor
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppConfig.Types.Monitor.Monitor
instance Data.Hashable.Class.Hashable Amazonka.AppConfig.Types.Monitor.Monitor
instance Control.DeepSeq.NFData Amazonka.AppConfig.Types.Monitor.Monitor
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppConfig.Types.Monitor.Monitor


module Amazonka.AppConfig.Types.Environment

-- | <i>See:</i> <a>newEnvironment</a> smart constructor.
data Environment
Environment' :: Maybe EnvironmentState -> Maybe [Monitor] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Environment

-- | The state of the environment. An environment can be in one of the
--   following states: <tt>READY_FOR_DEPLOYMENT</tt>, <tt>DEPLOYING</tt>,
--   <tt>ROLLING_BACK</tt>, or <tt>ROLLED_BACK</tt>
[$sel:state:Environment'] :: Environment -> Maybe EnvironmentState

-- | Amazon CloudWatch alarms monitored during the deployment.
[$sel:monitors:Environment'] :: Environment -> Maybe [Monitor]

-- | The application ID.
[$sel:applicationId:Environment'] :: Environment -> Maybe Text

-- | The name of the environment.
[$sel:name:Environment'] :: Environment -> Maybe Text

-- | The environment ID.
[$sel:id:Environment'] :: Environment -> Maybe Text

-- | The description of the environment.
[$sel:description:Environment'] :: Environment -> Maybe Text

-- | Create a value of <a>Environment</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:Environment'</a>, <a>environment_state</a> - The state
--   of the environment. An environment can be in one of the following
--   states: <tt>READY_FOR_DEPLOYMENT</tt>, <tt>DEPLOYING</tt>,
--   <tt>ROLLING_BACK</tt>, or <tt>ROLLED_BACK</tt>
--   
--   <a>$sel:monitors:Environment'</a>, <a>environment_monitors</a> -
--   Amazon CloudWatch alarms monitored during the deployment.
--   
--   <a>$sel:applicationId:Environment'</a>,
--   <a>environment_applicationId</a> - The application ID.
--   
--   <a>$sel:name:Environment'</a>, <a>environment_name</a> - The name of
--   the environment.
--   
--   <a>$sel:id:Environment'</a>, <a>environment_id</a> - The environment
--   ID.
--   
--   <a>$sel:description:Environment'</a>, <a>environment_description</a> -
--   The description of the environment.
newEnvironment :: Environment

-- | The state of the environment. An environment can be in one of the
--   following states: <tt>READY_FOR_DEPLOYMENT</tt>, <tt>DEPLOYING</tt>,
--   <tt>ROLLING_BACK</tt>, or <tt>ROLLED_BACK</tt>
environment_state :: Lens' Environment (Maybe EnvironmentState)

-- | Amazon CloudWatch alarms monitored during the deployment.
environment_monitors :: Lens' Environment (Maybe [Monitor])

-- | The application ID.
environment_applicationId :: Lens' Environment (Maybe Text)

-- | The name of the environment.
environment_name :: Lens' Environment (Maybe Text)

-- | The environment ID.
environment_id :: Lens' Environment (Maybe Text)

-- | The description of the environment.
environment_description :: Lens' Environment (Maybe Text)
instance GHC.Generics.Generic Amazonka.AppConfig.Types.Environment.Environment
instance GHC.Show.Show Amazonka.AppConfig.Types.Environment.Environment
instance GHC.Read.Read Amazonka.AppConfig.Types.Environment.Environment
instance GHC.Classes.Eq Amazonka.AppConfig.Types.Environment.Environment
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppConfig.Types.Environment.Environment
instance Data.Hashable.Class.Hashable Amazonka.AppConfig.Types.Environment.Environment
instance Control.DeepSeq.NFData Amazonka.AppConfig.Types.Environment.Environment


module Amazonka.AppConfig.Types.ReplicateTo
newtype ReplicateTo
ReplicateTo' :: Text -> ReplicateTo
[fromReplicateTo] :: ReplicateTo -> Text
pattern ReplicateTo_NONE :: ReplicateTo
pattern ReplicateTo_SSM_DOCUMENT :: ReplicateTo
instance Amazonka.Data.XML.ToXML Amazonka.AppConfig.Types.ReplicateTo.ReplicateTo
instance Amazonka.Data.XML.FromXML Amazonka.AppConfig.Types.ReplicateTo.ReplicateTo
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.AppConfig.Types.ReplicateTo.ReplicateTo
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppConfig.Types.ReplicateTo.ReplicateTo
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.AppConfig.Types.ReplicateTo.ReplicateTo
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppConfig.Types.ReplicateTo.ReplicateTo
instance Amazonka.Data.Query.ToQuery Amazonka.AppConfig.Types.ReplicateTo.ReplicateTo
instance Amazonka.Data.Headers.ToHeader Amazonka.AppConfig.Types.ReplicateTo.ReplicateTo
instance Amazonka.Data.Log.ToLog Amazonka.AppConfig.Types.ReplicateTo.ReplicateTo
instance Amazonka.Data.ByteString.ToByteString Amazonka.AppConfig.Types.ReplicateTo.ReplicateTo
instance Amazonka.Data.Text.ToText Amazonka.AppConfig.Types.ReplicateTo.ReplicateTo
instance Amazonka.Data.Text.FromText Amazonka.AppConfig.Types.ReplicateTo.ReplicateTo
instance Control.DeepSeq.NFData Amazonka.AppConfig.Types.ReplicateTo.ReplicateTo
instance Data.Hashable.Class.Hashable Amazonka.AppConfig.Types.ReplicateTo.ReplicateTo
instance GHC.Generics.Generic Amazonka.AppConfig.Types.ReplicateTo.ReplicateTo
instance GHC.Classes.Ord Amazonka.AppConfig.Types.ReplicateTo.ReplicateTo
instance GHC.Classes.Eq Amazonka.AppConfig.Types.ReplicateTo.ReplicateTo
instance GHC.Read.Read Amazonka.AppConfig.Types.ReplicateTo.ReplicateTo
instance GHC.Show.Show Amazonka.AppConfig.Types.ReplicateTo.ReplicateTo


module Amazonka.AppConfig.Types.DeploymentStrategy

-- | <i>See:</i> <a>newDeploymentStrategy</a> smart constructor.
data DeploymentStrategy
DeploymentStrategy' :: Maybe Double -> Maybe ReplicateTo -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Natural -> Maybe Text -> Maybe GrowthType -> DeploymentStrategy

-- | The percentage of targets that received a deployed configuration
--   during each interval.
[$sel:growthFactor:DeploymentStrategy'] :: DeploymentStrategy -> Maybe Double

-- | Save the deployment strategy to a Systems Manager (SSM) document.
[$sel:replicateTo:DeploymentStrategy'] :: DeploymentStrategy -> Maybe ReplicateTo

-- | The name of the deployment strategy.
[$sel:name:DeploymentStrategy'] :: DeploymentStrategy -> Maybe Text

-- | The deployment strategy ID.
[$sel:id:DeploymentStrategy'] :: DeploymentStrategy -> Maybe Text

-- | Total amount of time the deployment lasted.
[$sel:deploymentDurationInMinutes:DeploymentStrategy'] :: DeploymentStrategy -> Maybe Natural

-- | The amount of time AppConfig monitored for alarms before considering
--   the deployment to be complete and no longer eligible for automatic
--   roll back.
[$sel:finalBakeTimeInMinutes:DeploymentStrategy'] :: DeploymentStrategy -> Maybe Natural

-- | The description of the deployment strategy.
[$sel:description:DeploymentStrategy'] :: DeploymentStrategy -> Maybe Text

-- | The algorithm used to define how percentage grew over time.
[$sel:growthType:DeploymentStrategy'] :: DeploymentStrategy -> Maybe GrowthType

-- | Create a value of <a>DeploymentStrategy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:growthFactor:DeploymentStrategy'</a>,
--   <a>deploymentStrategy_growthFactor</a> - The percentage of targets
--   that received a deployed configuration during each interval.
--   
--   <a>$sel:replicateTo:DeploymentStrategy'</a>,
--   <a>deploymentStrategy_replicateTo</a> - Save the deployment strategy
--   to a Systems Manager (SSM) document.
--   
--   <a>$sel:name:DeploymentStrategy'</a>, <a>deploymentStrategy_name</a> -
--   The name of the deployment strategy.
--   
--   <a>$sel:id:DeploymentStrategy'</a>, <a>deploymentStrategy_id</a> - The
--   deployment strategy ID.
--   
--   <a>$sel:deploymentDurationInMinutes:DeploymentStrategy'</a>,
--   <a>deploymentStrategy_deploymentDurationInMinutes</a> - Total amount
--   of time the deployment lasted.
--   
--   <a>$sel:finalBakeTimeInMinutes:DeploymentStrategy'</a>,
--   <a>deploymentStrategy_finalBakeTimeInMinutes</a> - The amount of time
--   AppConfig monitored for alarms before considering the deployment to be
--   complete and no longer eligible for automatic roll back.
--   
--   <a>$sel:description:DeploymentStrategy'</a>,
--   <a>deploymentStrategy_description</a> - The description of the
--   deployment strategy.
--   
--   <a>$sel:growthType:DeploymentStrategy'</a>,
--   <a>deploymentStrategy_growthType</a> - The algorithm used to define
--   how percentage grew over time.
newDeploymentStrategy :: DeploymentStrategy

-- | The percentage of targets that received a deployed configuration
--   during each interval.
deploymentStrategy_growthFactor :: Lens' DeploymentStrategy (Maybe Double)

-- | Save the deployment strategy to a Systems Manager (SSM) document.
deploymentStrategy_replicateTo :: Lens' DeploymentStrategy (Maybe ReplicateTo)

-- | The name of the deployment strategy.
deploymentStrategy_name :: Lens' DeploymentStrategy (Maybe Text)

-- | The deployment strategy ID.
deploymentStrategy_id :: Lens' DeploymentStrategy (Maybe Text)

-- | Total amount of time the deployment lasted.
deploymentStrategy_deploymentDurationInMinutes :: Lens' DeploymentStrategy (Maybe Natural)

-- | The amount of time AppConfig monitored for alarms before considering
--   the deployment to be complete and no longer eligible for automatic
--   roll back.
deploymentStrategy_finalBakeTimeInMinutes :: Lens' DeploymentStrategy (Maybe Natural)

-- | The description of the deployment strategy.
deploymentStrategy_description :: Lens' DeploymentStrategy (Maybe Text)

-- | The algorithm used to define how percentage grew over time.
deploymentStrategy_growthType :: Lens' DeploymentStrategy (Maybe GrowthType)
instance GHC.Generics.Generic Amazonka.AppConfig.Types.DeploymentStrategy.DeploymentStrategy
instance GHC.Show.Show Amazonka.AppConfig.Types.DeploymentStrategy.DeploymentStrategy
instance GHC.Read.Read Amazonka.AppConfig.Types.DeploymentStrategy.DeploymentStrategy
instance GHC.Classes.Eq Amazonka.AppConfig.Types.DeploymentStrategy.DeploymentStrategy
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppConfig.Types.DeploymentStrategy.DeploymentStrategy
instance Data.Hashable.Class.Hashable Amazonka.AppConfig.Types.DeploymentStrategy.DeploymentStrategy
instance Control.DeepSeq.NFData Amazonka.AppConfig.Types.DeploymentStrategy.DeploymentStrategy


module Amazonka.AppConfig.Types.TriggeredBy
newtype TriggeredBy
TriggeredBy' :: Text -> TriggeredBy
[fromTriggeredBy] :: TriggeredBy -> Text
pattern TriggeredBy_APPCONFIG :: TriggeredBy
pattern TriggeredBy_CLOUDWATCH_ALARM :: TriggeredBy
pattern TriggeredBy_INTERNAL_ERROR :: TriggeredBy
pattern TriggeredBy_USER :: TriggeredBy
instance Amazonka.Data.XML.ToXML Amazonka.AppConfig.Types.TriggeredBy.TriggeredBy
instance Amazonka.Data.XML.FromXML Amazonka.AppConfig.Types.TriggeredBy.TriggeredBy
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.AppConfig.Types.TriggeredBy.TriggeredBy
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppConfig.Types.TriggeredBy.TriggeredBy
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.AppConfig.Types.TriggeredBy.TriggeredBy
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppConfig.Types.TriggeredBy.TriggeredBy
instance Amazonka.Data.Query.ToQuery Amazonka.AppConfig.Types.TriggeredBy.TriggeredBy
instance Amazonka.Data.Headers.ToHeader Amazonka.AppConfig.Types.TriggeredBy.TriggeredBy
instance Amazonka.Data.Log.ToLog Amazonka.AppConfig.Types.TriggeredBy.TriggeredBy
instance Amazonka.Data.ByteString.ToByteString Amazonka.AppConfig.Types.TriggeredBy.TriggeredBy
instance Amazonka.Data.Text.ToText Amazonka.AppConfig.Types.TriggeredBy.TriggeredBy
instance Amazonka.Data.Text.FromText Amazonka.AppConfig.Types.TriggeredBy.TriggeredBy
instance Control.DeepSeq.NFData Amazonka.AppConfig.Types.TriggeredBy.TriggeredBy
instance Data.Hashable.Class.Hashable Amazonka.AppConfig.Types.TriggeredBy.TriggeredBy
instance GHC.Generics.Generic Amazonka.AppConfig.Types.TriggeredBy.TriggeredBy
instance GHC.Classes.Ord Amazonka.AppConfig.Types.TriggeredBy.TriggeredBy
instance GHC.Classes.Eq Amazonka.AppConfig.Types.TriggeredBy.TriggeredBy
instance GHC.Read.Read Amazonka.AppConfig.Types.TriggeredBy.TriggeredBy
instance GHC.Show.Show Amazonka.AppConfig.Types.TriggeredBy.TriggeredBy


module Amazonka.AppConfig.Types.DeploymentEvent

-- | An object that describes a deployment event.
--   
--   <i>See:</i> <a>newDeploymentEvent</a> smart constructor.
data DeploymentEvent
DeploymentEvent' :: Maybe TriggeredBy -> Maybe POSIX -> Maybe DeploymentEventType -> Maybe Text -> DeploymentEvent

-- | The entity that triggered the deployment event. Events can be
--   triggered by a user, AWS AppConfig, an Amazon CloudWatch alarm, or an
--   internal error.
[$sel:triggeredBy:DeploymentEvent'] :: DeploymentEvent -> Maybe TriggeredBy

-- | The date and time the event occurred.
[$sel:occurredAt:DeploymentEvent'] :: DeploymentEvent -> Maybe POSIX

-- | The type of deployment event. Deployment event types include the
--   start, stop, or completion of a deployment; a percentage update; the
--   start or stop of a bake period; the start or completion of a rollback.
[$sel:eventType:DeploymentEvent'] :: DeploymentEvent -> Maybe DeploymentEventType

-- | A description of the deployment event. Descriptions include, but are
--   not limited to, the user account or the CloudWatch alarm ARN that
--   initiated a rollback, the percentage of hosts that received the
--   deployment, or in the case of an internal error, a recommendation to
--   attempt a new deployment.
[$sel:description:DeploymentEvent'] :: DeploymentEvent -> Maybe Text

-- | Create a value of <a>DeploymentEvent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:triggeredBy:DeploymentEvent'</a>,
--   <a>deploymentEvent_triggeredBy</a> - The entity that triggered the
--   deployment event. Events can be triggered by a user, AWS AppConfig, an
--   Amazon CloudWatch alarm, or an internal error.
--   
--   <a>$sel:occurredAt:DeploymentEvent'</a>,
--   <a>deploymentEvent_occurredAt</a> - The date and time the event
--   occurred.
--   
--   <a>$sel:eventType:DeploymentEvent'</a>,
--   <a>deploymentEvent_eventType</a> - The type of deployment event.
--   Deployment event types include the start, stop, or completion of a
--   deployment; a percentage update; the start or stop of a bake period;
--   the start or completion of a rollback.
--   
--   <a>$sel:description:DeploymentEvent'</a>,
--   <a>deploymentEvent_description</a> - A description of the deployment
--   event. Descriptions include, but are not limited to, the user account
--   or the CloudWatch alarm ARN that initiated a rollback, the percentage
--   of hosts that received the deployment, or in the case of an internal
--   error, a recommendation to attempt a new deployment.
newDeploymentEvent :: DeploymentEvent

-- | The entity that triggered the deployment event. Events can be
--   triggered by a user, AWS AppConfig, an Amazon CloudWatch alarm, or an
--   internal error.
deploymentEvent_triggeredBy :: Lens' DeploymentEvent (Maybe TriggeredBy)

-- | The date and time the event occurred.
deploymentEvent_occurredAt :: Lens' DeploymentEvent (Maybe UTCTime)

-- | The type of deployment event. Deployment event types include the
--   start, stop, or completion of a deployment; a percentage update; the
--   start or stop of a bake period; the start or completion of a rollback.
deploymentEvent_eventType :: Lens' DeploymentEvent (Maybe DeploymentEventType)

-- | A description of the deployment event. Descriptions include, but are
--   not limited to, the user account or the CloudWatch alarm ARN that
--   initiated a rollback, the percentage of hosts that received the
--   deployment, or in the case of an internal error, a recommendation to
--   attempt a new deployment.
deploymentEvent_description :: Lens' DeploymentEvent (Maybe Text)
instance GHC.Generics.Generic Amazonka.AppConfig.Types.DeploymentEvent.DeploymentEvent
instance GHC.Show.Show Amazonka.AppConfig.Types.DeploymentEvent.DeploymentEvent
instance GHC.Read.Read Amazonka.AppConfig.Types.DeploymentEvent.DeploymentEvent
instance GHC.Classes.Eq Amazonka.AppConfig.Types.DeploymentEvent.DeploymentEvent
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppConfig.Types.DeploymentEvent.DeploymentEvent
instance Data.Hashable.Class.Hashable Amazonka.AppConfig.Types.DeploymentEvent.DeploymentEvent
instance Control.DeepSeq.NFData Amazonka.AppConfig.Types.DeploymentEvent.DeploymentEvent


module Amazonka.AppConfig.Types.Deployment

-- | <i>See:</i> <a>newDeployment</a> smart constructor.
data Deployment
Deployment' :: Maybe Double -> Maybe Text -> Maybe DeploymentState -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe [DeploymentEvent] -> Maybe Double -> Maybe POSIX -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe GrowthType -> Deployment

-- | The percentage of targets to receive a deployed configuration during
--   each interval.
[$sel:growthFactor:Deployment'] :: Deployment -> Maybe Double

-- | The name of the configuration.
[$sel:configurationName:Deployment'] :: Deployment -> Maybe Text

-- | The state of the deployment.
[$sel:state:Deployment'] :: Deployment -> Maybe DeploymentState

-- | The ID of the deployment strategy that was deployed.
[$sel:deploymentStrategyId:Deployment'] :: Deployment -> Maybe Text

-- | The sequence number of the deployment.
[$sel:deploymentNumber:Deployment'] :: Deployment -> Maybe Int

-- | The configuration version that was deployed.
[$sel:configurationVersion:Deployment'] :: Deployment -> Maybe Text

-- | A list containing all events related to a deployment. The most recent
--   events are displayed first.
[$sel:eventLog:Deployment'] :: Deployment -> Maybe [DeploymentEvent]

-- | The percentage of targets for which the deployment is available.
[$sel:percentageComplete:Deployment'] :: Deployment -> Maybe Double

-- | The time the deployment started.
[$sel:startedAt:Deployment'] :: Deployment -> Maybe POSIX

-- | The ID of the application that was deployed.
[$sel:applicationId:Deployment'] :: Deployment -> Maybe Text

-- | Total amount of time the deployment lasted.
[$sel:deploymentDurationInMinutes:Deployment'] :: Deployment -> Maybe Natural

-- | The ID of the environment that was deployed.
[$sel:environmentId:Deployment'] :: Deployment -> Maybe Text

-- | The time the deployment completed.
[$sel:completedAt:Deployment'] :: Deployment -> Maybe POSIX

-- | Information about the source location of the configuration.
[$sel:configurationLocationUri:Deployment'] :: Deployment -> Maybe Text

-- | The amount of time AppConfig monitored for alarms before considering
--   the deployment to be complete and no longer eligible for automatic
--   roll back.
[$sel:finalBakeTimeInMinutes:Deployment'] :: Deployment -> Maybe Natural

-- | The description of the deployment.
[$sel:description:Deployment'] :: Deployment -> Maybe Text

-- | The ID of the configuration profile that was deployed.
[$sel:configurationProfileId:Deployment'] :: Deployment -> Maybe Text

-- | The algorithm used to define how percentage grew over time.
[$sel:growthType:Deployment'] :: Deployment -> Maybe GrowthType

-- | Create a value of <a>Deployment</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:growthFactor:Deployment'</a>, <a>deployment_growthFactor</a> -
--   The percentage of targets to receive a deployed configuration during
--   each interval.
--   
--   <a>$sel:configurationName:Deployment'</a>,
--   <a>deployment_configurationName</a> - The name of the configuration.
--   
--   <a>$sel:state:Deployment'</a>, <a>deployment_state</a> - The state of
--   the deployment.
--   
--   <a>$sel:deploymentStrategyId:Deployment'</a>,
--   <a>deployment_deploymentStrategyId</a> - The ID of the deployment
--   strategy that was deployed.
--   
--   <a>$sel:deploymentNumber:Deployment'</a>,
--   <a>deployment_deploymentNumber</a> - The sequence number of the
--   deployment.
--   
--   <a>$sel:configurationVersion:Deployment'</a>,
--   <a>deployment_configurationVersion</a> - The configuration version
--   that was deployed.
--   
--   <a>$sel:eventLog:Deployment'</a>, <a>deployment_eventLog</a> - A list
--   containing all events related to a deployment. The most recent events
--   are displayed first.
--   
--   <a>$sel:percentageComplete:Deployment'</a>,
--   <a>deployment_percentageComplete</a> - The percentage of targets for
--   which the deployment is available.
--   
--   <a>$sel:startedAt:Deployment'</a>, <a>deployment_startedAt</a> - The
--   time the deployment started.
--   
--   <a>$sel:applicationId:Deployment'</a>, <a>deployment_applicationId</a>
--   - The ID of the application that was deployed.
--   
--   <a>$sel:deploymentDurationInMinutes:Deployment'</a>,
--   <a>deployment_deploymentDurationInMinutes</a> - Total amount of time
--   the deployment lasted.
--   
--   <a>$sel:environmentId:Deployment'</a>, <a>deployment_environmentId</a>
--   - The ID of the environment that was deployed.
--   
--   <a>$sel:completedAt:Deployment'</a>, <a>deployment_completedAt</a> -
--   The time the deployment completed.
--   
--   <a>$sel:configurationLocationUri:Deployment'</a>,
--   <a>deployment_configurationLocationUri</a> - Information about the
--   source location of the configuration.
--   
--   <a>$sel:finalBakeTimeInMinutes:Deployment'</a>,
--   <a>deployment_finalBakeTimeInMinutes</a> - The amount of time
--   AppConfig monitored for alarms before considering the deployment to be
--   complete and no longer eligible for automatic roll back.
--   
--   <a>$sel:description:Deployment'</a>, <a>deployment_description</a> -
--   The description of the deployment.
--   
--   <a>$sel:configurationProfileId:Deployment'</a>,
--   <a>deployment_configurationProfileId</a> - The ID of the configuration
--   profile that was deployed.
--   
--   <a>$sel:growthType:Deployment'</a>, <a>deployment_growthType</a> - The
--   algorithm used to define how percentage grew over time.
newDeployment :: Deployment

-- | The percentage of targets to receive a deployed configuration during
--   each interval.
deployment_growthFactor :: Lens' Deployment (Maybe Double)

-- | The name of the configuration.
deployment_configurationName :: Lens' Deployment (Maybe Text)

-- | The state of the deployment.
deployment_state :: Lens' Deployment (Maybe DeploymentState)

-- | The ID of the deployment strategy that was deployed.
deployment_deploymentStrategyId :: Lens' Deployment (Maybe Text)

-- | The sequence number of the deployment.
deployment_deploymentNumber :: Lens' Deployment (Maybe Int)

-- | The configuration version that was deployed.
deployment_configurationVersion :: Lens' Deployment (Maybe Text)

-- | A list containing all events related to a deployment. The most recent
--   events are displayed first.
deployment_eventLog :: Lens' Deployment (Maybe [DeploymentEvent])

-- | The percentage of targets for which the deployment is available.
deployment_percentageComplete :: Lens' Deployment (Maybe Double)

-- | The time the deployment started.
deployment_startedAt :: Lens' Deployment (Maybe UTCTime)

-- | The ID of the application that was deployed.
deployment_applicationId :: Lens' Deployment (Maybe Text)

-- | Total amount of time the deployment lasted.
deployment_deploymentDurationInMinutes :: Lens' Deployment (Maybe Natural)

-- | The ID of the environment that was deployed.
deployment_environmentId :: Lens' Deployment (Maybe Text)

-- | The time the deployment completed.
deployment_completedAt :: Lens' Deployment (Maybe UTCTime)

-- | Information about the source location of the configuration.
deployment_configurationLocationUri :: Lens' Deployment (Maybe Text)

-- | The amount of time AppConfig monitored for alarms before considering
--   the deployment to be complete and no longer eligible for automatic
--   roll back.
deployment_finalBakeTimeInMinutes :: Lens' Deployment (Maybe Natural)

-- | The description of the deployment.
deployment_description :: Lens' Deployment (Maybe Text)

-- | The ID of the configuration profile that was deployed.
deployment_configurationProfileId :: Lens' Deployment (Maybe Text)

-- | The algorithm used to define how percentage grew over time.
deployment_growthType :: Lens' Deployment (Maybe GrowthType)
instance GHC.Generics.Generic Amazonka.AppConfig.Types.Deployment.Deployment
instance GHC.Show.Show Amazonka.AppConfig.Types.Deployment.Deployment
instance GHC.Read.Read Amazonka.AppConfig.Types.Deployment.Deployment
instance GHC.Classes.Eq Amazonka.AppConfig.Types.Deployment.Deployment
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppConfig.Types.Deployment.Deployment
instance Data.Hashable.Class.Hashable Amazonka.AppConfig.Types.Deployment.Deployment
instance Control.DeepSeq.NFData Amazonka.AppConfig.Types.Deployment.Deployment


module Amazonka.AppConfig.Types.ValidatorType
newtype ValidatorType
ValidatorType' :: Text -> ValidatorType
[fromValidatorType] :: ValidatorType -> Text
pattern ValidatorType_JSON_SCHEMA :: ValidatorType
pattern ValidatorType_LAMBDA :: ValidatorType
instance Amazonka.Data.XML.ToXML Amazonka.AppConfig.Types.ValidatorType.ValidatorType
instance Amazonka.Data.XML.FromXML Amazonka.AppConfig.Types.ValidatorType.ValidatorType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.AppConfig.Types.ValidatorType.ValidatorType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppConfig.Types.ValidatorType.ValidatorType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.AppConfig.Types.ValidatorType.ValidatorType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppConfig.Types.ValidatorType.ValidatorType
instance Amazonka.Data.Query.ToQuery Amazonka.AppConfig.Types.ValidatorType.ValidatorType
instance Amazonka.Data.Headers.ToHeader Amazonka.AppConfig.Types.ValidatorType.ValidatorType
instance Amazonka.Data.Log.ToLog Amazonka.AppConfig.Types.ValidatorType.ValidatorType
instance Amazonka.Data.ByteString.ToByteString Amazonka.AppConfig.Types.ValidatorType.ValidatorType
instance Amazonka.Data.Text.ToText Amazonka.AppConfig.Types.ValidatorType.ValidatorType
instance Amazonka.Data.Text.FromText Amazonka.AppConfig.Types.ValidatorType.ValidatorType
instance Control.DeepSeq.NFData Amazonka.AppConfig.Types.ValidatorType.ValidatorType
instance Data.Hashable.Class.Hashable Amazonka.AppConfig.Types.ValidatorType.ValidatorType
instance GHC.Generics.Generic Amazonka.AppConfig.Types.ValidatorType.ValidatorType
instance GHC.Classes.Ord Amazonka.AppConfig.Types.ValidatorType.ValidatorType
instance GHC.Classes.Eq Amazonka.AppConfig.Types.ValidatorType.ValidatorType
instance GHC.Read.Read Amazonka.AppConfig.Types.ValidatorType.ValidatorType
instance GHC.Show.Show Amazonka.AppConfig.Types.ValidatorType.ValidatorType


module Amazonka.AppConfig.Types.Validator

-- | A validator provides a syntactic or semantic check to ensure the
--   configuration you want to deploy functions as intended. To validate
--   your application configuration data, you provide a schema or a Lambda
--   function that runs against the configuration. The configuration
--   deployment or update can only proceed when the configuration data is
--   valid.
--   
--   <i>See:</i> <a>newValidator</a> smart constructor.
data Validator
Validator' :: ValidatorType -> Sensitive Text -> Validator

-- | AppConfig supports validators of type <tt>JSON_SCHEMA</tt> and
--   <tt>LAMBDA</tt>
[$sel:type':Validator'] :: Validator -> ValidatorType

-- | Either the JSON Schema content or the Amazon Resource Name (ARN) of an
--   AWS Lambda function.
[$sel:content:Validator'] :: Validator -> Sensitive Text

-- | Create a value of <a>Validator</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:type':Validator'</a>, <a>validator_type</a> - AppConfig
--   supports validators of type <tt>JSON_SCHEMA</tt> and <tt>LAMBDA</tt>
--   
--   <a>$sel:content:Validator'</a>, <a>validator_content</a> - Either the
--   JSON Schema content or the Amazon Resource Name (ARN) of an AWS Lambda
--   function.
newValidator :: ValidatorType -> Text -> Validator

-- | AppConfig supports validators of type <tt>JSON_SCHEMA</tt> and
--   <tt>LAMBDA</tt>
validator_type :: Lens' Validator ValidatorType

-- | Either the JSON Schema content or the Amazon Resource Name (ARN) of an
--   AWS Lambda function.
validator_content :: Lens' Validator Text
instance GHC.Generics.Generic Amazonka.AppConfig.Types.Validator.Validator
instance GHC.Show.Show Amazonka.AppConfig.Types.Validator.Validator
instance GHC.Classes.Eq Amazonka.AppConfig.Types.Validator.Validator
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppConfig.Types.Validator.Validator
instance Data.Hashable.Class.Hashable Amazonka.AppConfig.Types.Validator.Validator
instance Control.DeepSeq.NFData Amazonka.AppConfig.Types.Validator.Validator
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppConfig.Types.Validator.Validator


module Amazonka.AppConfig.Types.ConfigurationProfile

-- | <i>See:</i> <a>newConfigurationProfile</a> smart constructor.
data ConfigurationProfile
ConfigurationProfile' :: Maybe Text -> Maybe [Validator] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> ConfigurationProfile

-- | The ARN of an IAM role with permission to access the configuration at
--   the specified LocationUri.
[$sel:retrievalRoleArn:ConfigurationProfile'] :: ConfigurationProfile -> Maybe Text

-- | A list of methods for validating the configuration.
[$sel:validators:ConfigurationProfile'] :: ConfigurationProfile -> Maybe [Validator]

-- | The URI location of the configuration.
[$sel:locationUri:ConfigurationProfile'] :: ConfigurationProfile -> Maybe Text

-- | The application ID.
[$sel:applicationId:ConfigurationProfile'] :: ConfigurationProfile -> Maybe Text

-- | The name of the configuration profile.
[$sel:name:ConfigurationProfile'] :: ConfigurationProfile -> Maybe Text

-- | The configuration profile ID.
[$sel:id:ConfigurationProfile'] :: ConfigurationProfile -> Maybe Text

-- | The configuration profile description.
[$sel:description:ConfigurationProfile'] :: ConfigurationProfile -> Maybe Text

-- | Create a value of <a>ConfigurationProfile</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:retrievalRoleArn:ConfigurationProfile'</a>,
--   <a>configurationProfile_retrievalRoleArn</a> - The ARN of an IAM role
--   with permission to access the configuration at the specified
--   LocationUri.
--   
--   <a>$sel:validators:ConfigurationProfile'</a>,
--   <a>configurationProfile_validators</a> - A list of methods for
--   validating the configuration.
--   
--   <a>$sel:locationUri:ConfigurationProfile'</a>,
--   <a>configurationProfile_locationUri</a> - The URI location of the
--   configuration.
--   
--   <a>$sel:applicationId:ConfigurationProfile'</a>,
--   <a>configurationProfile_applicationId</a> - The application ID.
--   
--   <a>$sel:name:ConfigurationProfile'</a>,
--   <a>configurationProfile_name</a> - The name of the configuration
--   profile.
--   
--   <a>$sel:id:ConfigurationProfile'</a>, <a>configurationProfile_id</a> -
--   The configuration profile ID.
--   
--   <a>$sel:description:ConfigurationProfile'</a>,
--   <a>configurationProfile_description</a> - The configuration profile
--   description.
newConfigurationProfile :: ConfigurationProfile

-- | The ARN of an IAM role with permission to access the configuration at
--   the specified LocationUri.
configurationProfile_retrievalRoleArn :: Lens' ConfigurationProfile (Maybe Text)

-- | A list of methods for validating the configuration.
configurationProfile_validators :: Lens' ConfigurationProfile (Maybe [Validator])

-- | The URI location of the configuration.
configurationProfile_locationUri :: Lens' ConfigurationProfile (Maybe Text)

-- | The application ID.
configurationProfile_applicationId :: Lens' ConfigurationProfile (Maybe Text)

-- | The name of the configuration profile.
configurationProfile_name :: Lens' ConfigurationProfile (Maybe Text)

-- | The configuration profile ID.
configurationProfile_id :: Lens' ConfigurationProfile (Maybe Text)

-- | The configuration profile description.
configurationProfile_description :: Lens' ConfigurationProfile (Maybe Text)
instance GHC.Generics.Generic Amazonka.AppConfig.Types.ConfigurationProfile.ConfigurationProfile
instance GHC.Show.Show Amazonka.AppConfig.Types.ConfigurationProfile.ConfigurationProfile
instance GHC.Classes.Eq Amazonka.AppConfig.Types.ConfigurationProfile.ConfigurationProfile
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppConfig.Types.ConfigurationProfile.ConfigurationProfile
instance Data.Hashable.Class.Hashable Amazonka.AppConfig.Types.ConfigurationProfile.ConfigurationProfile
instance Control.DeepSeq.NFData Amazonka.AppConfig.Types.ConfigurationProfile.ConfigurationProfile


module Amazonka.AppConfig.Types.ConfigurationProfileSummary

-- | A summary of a configuration profile.
--   
--   <i>See:</i> <a>newConfigurationProfileSummary</a> smart constructor.
data ConfigurationProfileSummary
ConfigurationProfileSummary' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [ValidatorType] -> ConfigurationProfileSummary

-- | The URI location of the configuration.
[$sel:locationUri:ConfigurationProfileSummary'] :: ConfigurationProfileSummary -> Maybe Text

-- | The application ID.
[$sel:applicationId:ConfigurationProfileSummary'] :: ConfigurationProfileSummary -> Maybe Text

-- | The name of the configuration profile.
[$sel:name:ConfigurationProfileSummary'] :: ConfigurationProfileSummary -> Maybe Text

-- | The ID of the configuration profile.
[$sel:id:ConfigurationProfileSummary'] :: ConfigurationProfileSummary -> Maybe Text

-- | The types of validators in the configuration profile.
[$sel:validatorTypes:ConfigurationProfileSummary'] :: ConfigurationProfileSummary -> Maybe [ValidatorType]

-- | Create a value of <a>ConfigurationProfileSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:locationUri:ConfigurationProfileSummary'</a>,
--   <a>configurationProfileSummary_locationUri</a> - The URI location of
--   the configuration.
--   
--   <a>$sel:applicationId:ConfigurationProfileSummary'</a>,
--   <a>configurationProfileSummary_applicationId</a> - The application ID.
--   
--   <a>$sel:name:ConfigurationProfileSummary'</a>,
--   <a>configurationProfileSummary_name</a> - The name of the
--   configuration profile.
--   
--   <a>$sel:id:ConfigurationProfileSummary'</a>,
--   <a>configurationProfileSummary_id</a> - The ID of the configuration
--   profile.
--   
--   <a>$sel:validatorTypes:ConfigurationProfileSummary'</a>,
--   <a>configurationProfileSummary_validatorTypes</a> - The types of
--   validators in the configuration profile.
newConfigurationProfileSummary :: ConfigurationProfileSummary

-- | The URI location of the configuration.
configurationProfileSummary_locationUri :: Lens' ConfigurationProfileSummary (Maybe Text)

-- | The application ID.
configurationProfileSummary_applicationId :: Lens' ConfigurationProfileSummary (Maybe Text)

-- | The name of the configuration profile.
configurationProfileSummary_name :: Lens' ConfigurationProfileSummary (Maybe Text)

-- | The ID of the configuration profile.
configurationProfileSummary_id :: Lens' ConfigurationProfileSummary (Maybe Text)

-- | The types of validators in the configuration profile.
configurationProfileSummary_validatorTypes :: Lens' ConfigurationProfileSummary (Maybe [ValidatorType])
instance GHC.Generics.Generic Amazonka.AppConfig.Types.ConfigurationProfileSummary.ConfigurationProfileSummary
instance GHC.Show.Show Amazonka.AppConfig.Types.ConfigurationProfileSummary.ConfigurationProfileSummary
instance GHC.Read.Read Amazonka.AppConfig.Types.ConfigurationProfileSummary.ConfigurationProfileSummary
instance GHC.Classes.Eq Amazonka.AppConfig.Types.ConfigurationProfileSummary.ConfigurationProfileSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppConfig.Types.ConfigurationProfileSummary.ConfigurationProfileSummary
instance Data.Hashable.Class.Hashable Amazonka.AppConfig.Types.ConfigurationProfileSummary.ConfigurationProfileSummary
instance Control.DeepSeq.NFData Amazonka.AppConfig.Types.ConfigurationProfileSummary.ConfigurationProfileSummary


module Amazonka.AppConfig.Types

-- | API version <tt>2019-10-09</tt> of the Amazon AppConfig SDK
--   configuration.
defaultService :: Service

-- | The configuration size is too large.
_PayloadTooLargeException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request could not be processed because of conflict in the current
--   state of the resource.
_ConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The number of hosted configuration versions exceeds the limit for the
--   AppConfig configuration store. Delete one or more versions and try
--   again.
_ServiceQuotaExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | There was an internal failure in the AppConfig service.
_InternalServerException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested resource could not be found.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The input fails to satisfy the constraints specified by an AWS
--   service.
_BadRequestException :: AsError a => Getting (First ServiceError) a ServiceError
newtype DeploymentEventType
DeploymentEventType' :: Text -> DeploymentEventType
[fromDeploymentEventType] :: DeploymentEventType -> Text
pattern DeploymentEventType_BAKE_TIME_STARTED :: DeploymentEventType
pattern DeploymentEventType_DEPLOYMENT_COMPLETED :: DeploymentEventType
pattern DeploymentEventType_DEPLOYMENT_STARTED :: DeploymentEventType
pattern DeploymentEventType_PERCENTAGE_UPDATED :: DeploymentEventType
pattern DeploymentEventType_ROLLBACK_COMPLETED :: DeploymentEventType
pattern DeploymentEventType_ROLLBACK_STARTED :: DeploymentEventType
newtype DeploymentState
DeploymentState' :: Text -> DeploymentState
[fromDeploymentState] :: DeploymentState -> Text
pattern DeploymentState_BAKING :: DeploymentState
pattern DeploymentState_COMPLETE :: DeploymentState
pattern DeploymentState_DEPLOYING :: DeploymentState
pattern DeploymentState_ROLLED_BACK :: DeploymentState
pattern DeploymentState_ROLLING_BACK :: DeploymentState
pattern DeploymentState_VALIDATING :: DeploymentState
newtype EnvironmentState
EnvironmentState' :: Text -> EnvironmentState
[fromEnvironmentState] :: EnvironmentState -> Text
pattern EnvironmentState_DEPLOYING :: EnvironmentState
pattern EnvironmentState_READY_FOR_DEPLOYMENT :: EnvironmentState
pattern EnvironmentState_ROLLED_BACK :: EnvironmentState
pattern EnvironmentState_ROLLING_BACK :: EnvironmentState
newtype GrowthType
GrowthType' :: Text -> GrowthType
[fromGrowthType] :: GrowthType -> Text
pattern GrowthType_EXPONENTIAL :: GrowthType
pattern GrowthType_LINEAR :: GrowthType
newtype ReplicateTo
ReplicateTo' :: Text -> ReplicateTo
[fromReplicateTo] :: ReplicateTo -> Text
pattern ReplicateTo_NONE :: ReplicateTo
pattern ReplicateTo_SSM_DOCUMENT :: ReplicateTo
newtype TriggeredBy
TriggeredBy' :: Text -> TriggeredBy
[fromTriggeredBy] :: TriggeredBy -> Text
pattern TriggeredBy_APPCONFIG :: TriggeredBy
pattern TriggeredBy_CLOUDWATCH_ALARM :: TriggeredBy
pattern TriggeredBy_INTERNAL_ERROR :: TriggeredBy
pattern TriggeredBy_USER :: TriggeredBy
newtype ValidatorType
ValidatorType' :: Text -> ValidatorType
[fromValidatorType] :: ValidatorType -> Text
pattern ValidatorType_JSON_SCHEMA :: ValidatorType
pattern ValidatorType_LAMBDA :: ValidatorType

-- | <i>See:</i> <a>newApplication</a> smart constructor.
data Application
Application' :: Maybe Text -> Maybe Text -> Maybe Text -> Application

-- | The application name.
[$sel:name:Application'] :: Application -> Maybe Text

-- | The application ID.
[$sel:id:Application'] :: Application -> Maybe Text

-- | The description of the application.
[$sel:description:Application'] :: Application -> Maybe Text

-- | Create a value of <a>Application</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:Application'</a>, <a>application_name</a> - The
--   application name.
--   
--   <a>$sel:id:Application'</a>, <a>application_id</a> - The application
--   ID.
--   
--   <a>$sel:description:Application'</a>, <a>application_description</a> -
--   The description of the application.
newApplication :: Application

-- | The application name.
application_name :: Lens' Application (Maybe Text)

-- | The application ID.
application_id :: Lens' Application (Maybe Text)

-- | The description of the application.
application_description :: Lens' Application (Maybe Text)

-- | <i>See:</i> <a>newConfigurationProfile</a> smart constructor.
data ConfigurationProfile
ConfigurationProfile' :: Maybe Text -> Maybe [Validator] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> ConfigurationProfile

-- | The ARN of an IAM role with permission to access the configuration at
--   the specified LocationUri.
[$sel:retrievalRoleArn:ConfigurationProfile'] :: ConfigurationProfile -> Maybe Text

-- | A list of methods for validating the configuration.
[$sel:validators:ConfigurationProfile'] :: ConfigurationProfile -> Maybe [Validator]

-- | The URI location of the configuration.
[$sel:locationUri:ConfigurationProfile'] :: ConfigurationProfile -> Maybe Text

-- | The application ID.
[$sel:applicationId:ConfigurationProfile'] :: ConfigurationProfile -> Maybe Text

-- | The name of the configuration profile.
[$sel:name:ConfigurationProfile'] :: ConfigurationProfile -> Maybe Text

-- | The configuration profile ID.
[$sel:id:ConfigurationProfile'] :: ConfigurationProfile -> Maybe Text

-- | The configuration profile description.
[$sel:description:ConfigurationProfile'] :: ConfigurationProfile -> Maybe Text

-- | Create a value of <a>ConfigurationProfile</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:retrievalRoleArn:ConfigurationProfile'</a>,
--   <a>configurationProfile_retrievalRoleArn</a> - The ARN of an IAM role
--   with permission to access the configuration at the specified
--   LocationUri.
--   
--   <a>$sel:validators:ConfigurationProfile'</a>,
--   <a>configurationProfile_validators</a> - A list of methods for
--   validating the configuration.
--   
--   <a>$sel:locationUri:ConfigurationProfile'</a>,
--   <a>configurationProfile_locationUri</a> - The URI location of the
--   configuration.
--   
--   <a>$sel:applicationId:ConfigurationProfile'</a>,
--   <a>configurationProfile_applicationId</a> - The application ID.
--   
--   <a>$sel:name:ConfigurationProfile'</a>,
--   <a>configurationProfile_name</a> - The name of the configuration
--   profile.
--   
--   <a>$sel:id:ConfigurationProfile'</a>, <a>configurationProfile_id</a> -
--   The configuration profile ID.
--   
--   <a>$sel:description:ConfigurationProfile'</a>,
--   <a>configurationProfile_description</a> - The configuration profile
--   description.
newConfigurationProfile :: ConfigurationProfile

-- | The ARN of an IAM role with permission to access the configuration at
--   the specified LocationUri.
configurationProfile_retrievalRoleArn :: Lens' ConfigurationProfile (Maybe Text)

-- | A list of methods for validating the configuration.
configurationProfile_validators :: Lens' ConfigurationProfile (Maybe [Validator])

-- | The URI location of the configuration.
configurationProfile_locationUri :: Lens' ConfigurationProfile (Maybe Text)

-- | The application ID.
configurationProfile_applicationId :: Lens' ConfigurationProfile (Maybe Text)

-- | The name of the configuration profile.
configurationProfile_name :: Lens' ConfigurationProfile (Maybe Text)

-- | The configuration profile ID.
configurationProfile_id :: Lens' ConfigurationProfile (Maybe Text)

-- | The configuration profile description.
configurationProfile_description :: Lens' ConfigurationProfile (Maybe Text)

-- | A summary of a configuration profile.
--   
--   <i>See:</i> <a>newConfigurationProfileSummary</a> smart constructor.
data ConfigurationProfileSummary
ConfigurationProfileSummary' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [ValidatorType] -> ConfigurationProfileSummary

-- | The URI location of the configuration.
[$sel:locationUri:ConfigurationProfileSummary'] :: ConfigurationProfileSummary -> Maybe Text

-- | The application ID.
[$sel:applicationId:ConfigurationProfileSummary'] :: ConfigurationProfileSummary -> Maybe Text

-- | The name of the configuration profile.
[$sel:name:ConfigurationProfileSummary'] :: ConfigurationProfileSummary -> Maybe Text

-- | The ID of the configuration profile.
[$sel:id:ConfigurationProfileSummary'] :: ConfigurationProfileSummary -> Maybe Text

-- | The types of validators in the configuration profile.
[$sel:validatorTypes:ConfigurationProfileSummary'] :: ConfigurationProfileSummary -> Maybe [ValidatorType]

-- | Create a value of <a>ConfigurationProfileSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:locationUri:ConfigurationProfileSummary'</a>,
--   <a>configurationProfileSummary_locationUri</a> - The URI location of
--   the configuration.
--   
--   <a>$sel:applicationId:ConfigurationProfileSummary'</a>,
--   <a>configurationProfileSummary_applicationId</a> - The application ID.
--   
--   <a>$sel:name:ConfigurationProfileSummary'</a>,
--   <a>configurationProfileSummary_name</a> - The name of the
--   configuration profile.
--   
--   <a>$sel:id:ConfigurationProfileSummary'</a>,
--   <a>configurationProfileSummary_id</a> - The ID of the configuration
--   profile.
--   
--   <a>$sel:validatorTypes:ConfigurationProfileSummary'</a>,
--   <a>configurationProfileSummary_validatorTypes</a> - The types of
--   validators in the configuration profile.
newConfigurationProfileSummary :: ConfigurationProfileSummary

-- | The URI location of the configuration.
configurationProfileSummary_locationUri :: Lens' ConfigurationProfileSummary (Maybe Text)

-- | The application ID.
configurationProfileSummary_applicationId :: Lens' ConfigurationProfileSummary (Maybe Text)

-- | The name of the configuration profile.
configurationProfileSummary_name :: Lens' ConfigurationProfileSummary (Maybe Text)

-- | The ID of the configuration profile.
configurationProfileSummary_id :: Lens' ConfigurationProfileSummary (Maybe Text)

-- | The types of validators in the configuration profile.
configurationProfileSummary_validatorTypes :: Lens' ConfigurationProfileSummary (Maybe [ValidatorType])

-- | <i>See:</i> <a>newDeployment</a> smart constructor.
data Deployment
Deployment' :: Maybe Double -> Maybe Text -> Maybe DeploymentState -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe [DeploymentEvent] -> Maybe Double -> Maybe POSIX -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe GrowthType -> Deployment

-- | The percentage of targets to receive a deployed configuration during
--   each interval.
[$sel:growthFactor:Deployment'] :: Deployment -> Maybe Double

-- | The name of the configuration.
[$sel:configurationName:Deployment'] :: Deployment -> Maybe Text

-- | The state of the deployment.
[$sel:state:Deployment'] :: Deployment -> Maybe DeploymentState

-- | The ID of the deployment strategy that was deployed.
[$sel:deploymentStrategyId:Deployment'] :: Deployment -> Maybe Text

-- | The sequence number of the deployment.
[$sel:deploymentNumber:Deployment'] :: Deployment -> Maybe Int

-- | The configuration version that was deployed.
[$sel:configurationVersion:Deployment'] :: Deployment -> Maybe Text

-- | A list containing all events related to a deployment. The most recent
--   events are displayed first.
[$sel:eventLog:Deployment'] :: Deployment -> Maybe [DeploymentEvent]

-- | The percentage of targets for which the deployment is available.
[$sel:percentageComplete:Deployment'] :: Deployment -> Maybe Double

-- | The time the deployment started.
[$sel:startedAt:Deployment'] :: Deployment -> Maybe POSIX

-- | The ID of the application that was deployed.
[$sel:applicationId:Deployment'] :: Deployment -> Maybe Text

-- | Total amount of time the deployment lasted.
[$sel:deploymentDurationInMinutes:Deployment'] :: Deployment -> Maybe Natural

-- | The ID of the environment that was deployed.
[$sel:environmentId:Deployment'] :: Deployment -> Maybe Text

-- | The time the deployment completed.
[$sel:completedAt:Deployment'] :: Deployment -> Maybe POSIX

-- | Information about the source location of the configuration.
[$sel:configurationLocationUri:Deployment'] :: Deployment -> Maybe Text

-- | The amount of time AppConfig monitored for alarms before considering
--   the deployment to be complete and no longer eligible for automatic
--   roll back.
[$sel:finalBakeTimeInMinutes:Deployment'] :: Deployment -> Maybe Natural

-- | The description of the deployment.
[$sel:description:Deployment'] :: Deployment -> Maybe Text

-- | The ID of the configuration profile that was deployed.
[$sel:configurationProfileId:Deployment'] :: Deployment -> Maybe Text

-- | The algorithm used to define how percentage grew over time.
[$sel:growthType:Deployment'] :: Deployment -> Maybe GrowthType

-- | Create a value of <a>Deployment</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:growthFactor:Deployment'</a>, <a>deployment_growthFactor</a> -
--   The percentage of targets to receive a deployed configuration during
--   each interval.
--   
--   <a>$sel:configurationName:Deployment'</a>,
--   <a>deployment_configurationName</a> - The name of the configuration.
--   
--   <a>$sel:state:Deployment'</a>, <a>deployment_state</a> - The state of
--   the deployment.
--   
--   <a>$sel:deploymentStrategyId:Deployment'</a>,
--   <a>deployment_deploymentStrategyId</a> - The ID of the deployment
--   strategy that was deployed.
--   
--   <a>$sel:deploymentNumber:Deployment'</a>,
--   <a>deployment_deploymentNumber</a> - The sequence number of the
--   deployment.
--   
--   <a>$sel:configurationVersion:Deployment'</a>,
--   <a>deployment_configurationVersion</a> - The configuration version
--   that was deployed.
--   
--   <a>$sel:eventLog:Deployment'</a>, <a>deployment_eventLog</a> - A list
--   containing all events related to a deployment. The most recent events
--   are displayed first.
--   
--   <a>$sel:percentageComplete:Deployment'</a>,
--   <a>deployment_percentageComplete</a> - The percentage of targets for
--   which the deployment is available.
--   
--   <a>$sel:startedAt:Deployment'</a>, <a>deployment_startedAt</a> - The
--   time the deployment started.
--   
--   <a>$sel:applicationId:Deployment'</a>, <a>deployment_applicationId</a>
--   - The ID of the application that was deployed.
--   
--   <a>$sel:deploymentDurationInMinutes:Deployment'</a>,
--   <a>deployment_deploymentDurationInMinutes</a> - Total amount of time
--   the deployment lasted.
--   
--   <a>$sel:environmentId:Deployment'</a>, <a>deployment_environmentId</a>
--   - The ID of the environment that was deployed.
--   
--   <a>$sel:completedAt:Deployment'</a>, <a>deployment_completedAt</a> -
--   The time the deployment completed.
--   
--   <a>$sel:configurationLocationUri:Deployment'</a>,
--   <a>deployment_configurationLocationUri</a> - Information about the
--   source location of the configuration.
--   
--   <a>$sel:finalBakeTimeInMinutes:Deployment'</a>,
--   <a>deployment_finalBakeTimeInMinutes</a> - The amount of time
--   AppConfig monitored for alarms before considering the deployment to be
--   complete and no longer eligible for automatic roll back.
--   
--   <a>$sel:description:Deployment'</a>, <a>deployment_description</a> -
--   The description of the deployment.
--   
--   <a>$sel:configurationProfileId:Deployment'</a>,
--   <a>deployment_configurationProfileId</a> - The ID of the configuration
--   profile that was deployed.
--   
--   <a>$sel:growthType:Deployment'</a>, <a>deployment_growthType</a> - The
--   algorithm used to define how percentage grew over time.
newDeployment :: Deployment

-- | The percentage of targets to receive a deployed configuration during
--   each interval.
deployment_growthFactor :: Lens' Deployment (Maybe Double)

-- | The name of the configuration.
deployment_configurationName :: Lens' Deployment (Maybe Text)

-- | The state of the deployment.
deployment_state :: Lens' Deployment (Maybe DeploymentState)

-- | The ID of the deployment strategy that was deployed.
deployment_deploymentStrategyId :: Lens' Deployment (Maybe Text)

-- | The sequence number of the deployment.
deployment_deploymentNumber :: Lens' Deployment (Maybe Int)

-- | The configuration version that was deployed.
deployment_configurationVersion :: Lens' Deployment (Maybe Text)

-- | A list containing all events related to a deployment. The most recent
--   events are displayed first.
deployment_eventLog :: Lens' Deployment (Maybe [DeploymentEvent])

-- | The percentage of targets for which the deployment is available.
deployment_percentageComplete :: Lens' Deployment (Maybe Double)

-- | The time the deployment started.
deployment_startedAt :: Lens' Deployment (Maybe UTCTime)

-- | The ID of the application that was deployed.
deployment_applicationId :: Lens' Deployment (Maybe Text)

-- | Total amount of time the deployment lasted.
deployment_deploymentDurationInMinutes :: Lens' Deployment (Maybe Natural)

-- | The ID of the environment that was deployed.
deployment_environmentId :: Lens' Deployment (Maybe Text)

-- | The time the deployment completed.
deployment_completedAt :: Lens' Deployment (Maybe UTCTime)

-- | Information about the source location of the configuration.
deployment_configurationLocationUri :: Lens' Deployment (Maybe Text)

-- | The amount of time AppConfig monitored for alarms before considering
--   the deployment to be complete and no longer eligible for automatic
--   roll back.
deployment_finalBakeTimeInMinutes :: Lens' Deployment (Maybe Natural)

-- | The description of the deployment.
deployment_description :: Lens' Deployment (Maybe Text)

-- | The ID of the configuration profile that was deployed.
deployment_configurationProfileId :: Lens' Deployment (Maybe Text)

-- | The algorithm used to define how percentage grew over time.
deployment_growthType :: Lens' Deployment (Maybe GrowthType)

-- | An object that describes a deployment event.
--   
--   <i>See:</i> <a>newDeploymentEvent</a> smart constructor.
data DeploymentEvent
DeploymentEvent' :: Maybe TriggeredBy -> Maybe POSIX -> Maybe DeploymentEventType -> Maybe Text -> DeploymentEvent

-- | The entity that triggered the deployment event. Events can be
--   triggered by a user, AWS AppConfig, an Amazon CloudWatch alarm, or an
--   internal error.
[$sel:triggeredBy:DeploymentEvent'] :: DeploymentEvent -> Maybe TriggeredBy

-- | The date and time the event occurred.
[$sel:occurredAt:DeploymentEvent'] :: DeploymentEvent -> Maybe POSIX

-- | The type of deployment event. Deployment event types include the
--   start, stop, or completion of a deployment; a percentage update; the
--   start or stop of a bake period; the start or completion of a rollback.
[$sel:eventType:DeploymentEvent'] :: DeploymentEvent -> Maybe DeploymentEventType

-- | A description of the deployment event. Descriptions include, but are
--   not limited to, the user account or the CloudWatch alarm ARN that
--   initiated a rollback, the percentage of hosts that received the
--   deployment, or in the case of an internal error, a recommendation to
--   attempt a new deployment.
[$sel:description:DeploymentEvent'] :: DeploymentEvent -> Maybe Text

-- | Create a value of <a>DeploymentEvent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:triggeredBy:DeploymentEvent'</a>,
--   <a>deploymentEvent_triggeredBy</a> - The entity that triggered the
--   deployment event. Events can be triggered by a user, AWS AppConfig, an
--   Amazon CloudWatch alarm, or an internal error.
--   
--   <a>$sel:occurredAt:DeploymentEvent'</a>,
--   <a>deploymentEvent_occurredAt</a> - The date and time the event
--   occurred.
--   
--   <a>$sel:eventType:DeploymentEvent'</a>,
--   <a>deploymentEvent_eventType</a> - The type of deployment event.
--   Deployment event types include the start, stop, or completion of a
--   deployment; a percentage update; the start or stop of a bake period;
--   the start or completion of a rollback.
--   
--   <a>$sel:description:DeploymentEvent'</a>,
--   <a>deploymentEvent_description</a> - A description of the deployment
--   event. Descriptions include, but are not limited to, the user account
--   or the CloudWatch alarm ARN that initiated a rollback, the percentage
--   of hosts that received the deployment, or in the case of an internal
--   error, a recommendation to attempt a new deployment.
newDeploymentEvent :: DeploymentEvent

-- | The entity that triggered the deployment event. Events can be
--   triggered by a user, AWS AppConfig, an Amazon CloudWatch alarm, or an
--   internal error.
deploymentEvent_triggeredBy :: Lens' DeploymentEvent (Maybe TriggeredBy)

-- | The date and time the event occurred.
deploymentEvent_occurredAt :: Lens' DeploymentEvent (Maybe UTCTime)

-- | The type of deployment event. Deployment event types include the
--   start, stop, or completion of a deployment; a percentage update; the
--   start or stop of a bake period; the start or completion of a rollback.
deploymentEvent_eventType :: Lens' DeploymentEvent (Maybe DeploymentEventType)

-- | A description of the deployment event. Descriptions include, but are
--   not limited to, the user account or the CloudWatch alarm ARN that
--   initiated a rollback, the percentage of hosts that received the
--   deployment, or in the case of an internal error, a recommendation to
--   attempt a new deployment.
deploymentEvent_description :: Lens' DeploymentEvent (Maybe Text)

-- | <i>See:</i> <a>newDeploymentStrategy</a> smart constructor.
data DeploymentStrategy
DeploymentStrategy' :: Maybe Double -> Maybe ReplicateTo -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Natural -> Maybe Text -> Maybe GrowthType -> DeploymentStrategy

-- | The percentage of targets that received a deployed configuration
--   during each interval.
[$sel:growthFactor:DeploymentStrategy'] :: DeploymentStrategy -> Maybe Double

-- | Save the deployment strategy to a Systems Manager (SSM) document.
[$sel:replicateTo:DeploymentStrategy'] :: DeploymentStrategy -> Maybe ReplicateTo

-- | The name of the deployment strategy.
[$sel:name:DeploymentStrategy'] :: DeploymentStrategy -> Maybe Text

-- | The deployment strategy ID.
[$sel:id:DeploymentStrategy'] :: DeploymentStrategy -> Maybe Text

-- | Total amount of time the deployment lasted.
[$sel:deploymentDurationInMinutes:DeploymentStrategy'] :: DeploymentStrategy -> Maybe Natural

-- | The amount of time AppConfig monitored for alarms before considering
--   the deployment to be complete and no longer eligible for automatic
--   roll back.
[$sel:finalBakeTimeInMinutes:DeploymentStrategy'] :: DeploymentStrategy -> Maybe Natural

-- | The description of the deployment strategy.
[$sel:description:DeploymentStrategy'] :: DeploymentStrategy -> Maybe Text

-- | The algorithm used to define how percentage grew over time.
[$sel:growthType:DeploymentStrategy'] :: DeploymentStrategy -> Maybe GrowthType

-- | Create a value of <a>DeploymentStrategy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:growthFactor:DeploymentStrategy'</a>,
--   <a>deploymentStrategy_growthFactor</a> - The percentage of targets
--   that received a deployed configuration during each interval.
--   
--   <a>$sel:replicateTo:DeploymentStrategy'</a>,
--   <a>deploymentStrategy_replicateTo</a> - Save the deployment strategy
--   to a Systems Manager (SSM) document.
--   
--   <a>$sel:name:DeploymentStrategy'</a>, <a>deploymentStrategy_name</a> -
--   The name of the deployment strategy.
--   
--   <a>$sel:id:DeploymentStrategy'</a>, <a>deploymentStrategy_id</a> - The
--   deployment strategy ID.
--   
--   <a>$sel:deploymentDurationInMinutes:DeploymentStrategy'</a>,
--   <a>deploymentStrategy_deploymentDurationInMinutes</a> - Total amount
--   of time the deployment lasted.
--   
--   <a>$sel:finalBakeTimeInMinutes:DeploymentStrategy'</a>,
--   <a>deploymentStrategy_finalBakeTimeInMinutes</a> - The amount of time
--   AppConfig monitored for alarms before considering the deployment to be
--   complete and no longer eligible for automatic roll back.
--   
--   <a>$sel:description:DeploymentStrategy'</a>,
--   <a>deploymentStrategy_description</a> - The description of the
--   deployment strategy.
--   
--   <a>$sel:growthType:DeploymentStrategy'</a>,
--   <a>deploymentStrategy_growthType</a> - The algorithm used to define
--   how percentage grew over time.
newDeploymentStrategy :: DeploymentStrategy

-- | The percentage of targets that received a deployed configuration
--   during each interval.
deploymentStrategy_growthFactor :: Lens' DeploymentStrategy (Maybe Double)

-- | Save the deployment strategy to a Systems Manager (SSM) document.
deploymentStrategy_replicateTo :: Lens' DeploymentStrategy (Maybe ReplicateTo)

-- | The name of the deployment strategy.
deploymentStrategy_name :: Lens' DeploymentStrategy (Maybe Text)

-- | The deployment strategy ID.
deploymentStrategy_id :: Lens' DeploymentStrategy (Maybe Text)

-- | Total amount of time the deployment lasted.
deploymentStrategy_deploymentDurationInMinutes :: Lens' DeploymentStrategy (Maybe Natural)

-- | The amount of time AppConfig monitored for alarms before considering
--   the deployment to be complete and no longer eligible for automatic
--   roll back.
deploymentStrategy_finalBakeTimeInMinutes :: Lens' DeploymentStrategy (Maybe Natural)

-- | The description of the deployment strategy.
deploymentStrategy_description :: Lens' DeploymentStrategy (Maybe Text)

-- | The algorithm used to define how percentage grew over time.
deploymentStrategy_growthType :: Lens' DeploymentStrategy (Maybe GrowthType)

-- | Information about the deployment.
--   
--   <i>See:</i> <a>newDeploymentSummary</a> smart constructor.
data DeploymentSummary
DeploymentSummary' :: Maybe Double -> Maybe Text -> Maybe DeploymentState -> Maybe Int -> Maybe Text -> Maybe Double -> Maybe POSIX -> Maybe Natural -> Maybe POSIX -> Maybe Natural -> Maybe GrowthType -> DeploymentSummary

-- | The percentage of targets to receive a deployed configuration during
--   each interval.
[$sel:growthFactor:DeploymentSummary'] :: DeploymentSummary -> Maybe Double

-- | The name of the configuration.
[$sel:configurationName:DeploymentSummary'] :: DeploymentSummary -> Maybe Text

-- | The state of the deployment.
[$sel:state:DeploymentSummary'] :: DeploymentSummary -> Maybe DeploymentState

-- | The sequence number of the deployment.
[$sel:deploymentNumber:DeploymentSummary'] :: DeploymentSummary -> Maybe Int

-- | The version of the configuration.
[$sel:configurationVersion:DeploymentSummary'] :: DeploymentSummary -> Maybe Text

-- | The percentage of targets for which the deployment is available.
[$sel:percentageComplete:DeploymentSummary'] :: DeploymentSummary -> Maybe Double

-- | Time the deployment started.
[$sel:startedAt:DeploymentSummary'] :: DeploymentSummary -> Maybe POSIX

-- | Total amount of time the deployment lasted.
[$sel:deploymentDurationInMinutes:DeploymentSummary'] :: DeploymentSummary -> Maybe Natural

-- | Time the deployment completed.
[$sel:completedAt:DeploymentSummary'] :: DeploymentSummary -> Maybe POSIX

-- | The amount of time AppConfig monitors for alarms before considering
--   the deployment to be complete and no longer eligible for automatic
--   roll back.
[$sel:finalBakeTimeInMinutes:DeploymentSummary'] :: DeploymentSummary -> Maybe Natural

-- | The algorithm used to define how percentage grows over time.
[$sel:growthType:DeploymentSummary'] :: DeploymentSummary -> Maybe GrowthType

-- | Create a value of <a>DeploymentSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:growthFactor:DeploymentSummary'</a>,
--   <a>deploymentSummary_growthFactor</a> - The percentage of targets to
--   receive a deployed configuration during each interval.
--   
--   <a>$sel:configurationName:DeploymentSummary'</a>,
--   <a>deploymentSummary_configurationName</a> - The name of the
--   configuration.
--   
--   <a>$sel:state:DeploymentSummary'</a>, <a>deploymentSummary_state</a> -
--   The state of the deployment.
--   
--   <a>$sel:deploymentNumber:DeploymentSummary'</a>,
--   <a>deploymentSummary_deploymentNumber</a> - The sequence number of the
--   deployment.
--   
--   <a>$sel:configurationVersion:DeploymentSummary'</a>,
--   <a>deploymentSummary_configurationVersion</a> - The version of the
--   configuration.
--   
--   <a>$sel:percentageComplete:DeploymentSummary'</a>,
--   <a>deploymentSummary_percentageComplete</a> - The percentage of
--   targets for which the deployment is available.
--   
--   <a>$sel:startedAt:DeploymentSummary'</a>,
--   <a>deploymentSummary_startedAt</a> - Time the deployment started.
--   
--   <a>$sel:deploymentDurationInMinutes:DeploymentSummary'</a>,
--   <a>deploymentSummary_deploymentDurationInMinutes</a> - Total amount of
--   time the deployment lasted.
--   
--   <a>$sel:completedAt:DeploymentSummary'</a>,
--   <a>deploymentSummary_completedAt</a> - Time the deployment completed.
--   
--   <a>$sel:finalBakeTimeInMinutes:DeploymentSummary'</a>,
--   <a>deploymentSummary_finalBakeTimeInMinutes</a> - The amount of time
--   AppConfig monitors for alarms before considering the deployment to be
--   complete and no longer eligible for automatic roll back.
--   
--   <a>$sel:growthType:DeploymentSummary'</a>,
--   <a>deploymentSummary_growthType</a> - The algorithm used to define how
--   percentage grows over time.
newDeploymentSummary :: DeploymentSummary

-- | The percentage of targets to receive a deployed configuration during
--   each interval.
deploymentSummary_growthFactor :: Lens' DeploymentSummary (Maybe Double)

-- | The name of the configuration.
deploymentSummary_configurationName :: Lens' DeploymentSummary (Maybe Text)

-- | The state of the deployment.
deploymentSummary_state :: Lens' DeploymentSummary (Maybe DeploymentState)

-- | The sequence number of the deployment.
deploymentSummary_deploymentNumber :: Lens' DeploymentSummary (Maybe Int)

-- | The version of the configuration.
deploymentSummary_configurationVersion :: Lens' DeploymentSummary (Maybe Text)

-- | The percentage of targets for which the deployment is available.
deploymentSummary_percentageComplete :: Lens' DeploymentSummary (Maybe Double)

-- | Time the deployment started.
deploymentSummary_startedAt :: Lens' DeploymentSummary (Maybe UTCTime)

-- | Total amount of time the deployment lasted.
deploymentSummary_deploymentDurationInMinutes :: Lens' DeploymentSummary (Maybe Natural)

-- | Time the deployment completed.
deploymentSummary_completedAt :: Lens' DeploymentSummary (Maybe UTCTime)

-- | The amount of time AppConfig monitors for alarms before considering
--   the deployment to be complete and no longer eligible for automatic
--   roll back.
deploymentSummary_finalBakeTimeInMinutes :: Lens' DeploymentSummary (Maybe Natural)

-- | The algorithm used to define how percentage grows over time.
deploymentSummary_growthType :: Lens' DeploymentSummary (Maybe GrowthType)

-- | <i>See:</i> <a>newEnvironment</a> smart constructor.
data Environment
Environment' :: Maybe EnvironmentState -> Maybe [Monitor] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Environment

-- | The state of the environment. An environment can be in one of the
--   following states: <tt>READY_FOR_DEPLOYMENT</tt>, <tt>DEPLOYING</tt>,
--   <tt>ROLLING_BACK</tt>, or <tt>ROLLED_BACK</tt>
[$sel:state:Environment'] :: Environment -> Maybe EnvironmentState

-- | Amazon CloudWatch alarms monitored during the deployment.
[$sel:monitors:Environment'] :: Environment -> Maybe [Monitor]

-- | The application ID.
[$sel:applicationId:Environment'] :: Environment -> Maybe Text

-- | The name of the environment.
[$sel:name:Environment'] :: Environment -> Maybe Text

-- | The environment ID.
[$sel:id:Environment'] :: Environment -> Maybe Text

-- | The description of the environment.
[$sel:description:Environment'] :: Environment -> Maybe Text

-- | Create a value of <a>Environment</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:Environment'</a>, <a>environment_state</a> - The state
--   of the environment. An environment can be in one of the following
--   states: <tt>READY_FOR_DEPLOYMENT</tt>, <tt>DEPLOYING</tt>,
--   <tt>ROLLING_BACK</tt>, or <tt>ROLLED_BACK</tt>
--   
--   <a>$sel:monitors:Environment'</a>, <a>environment_monitors</a> -
--   Amazon CloudWatch alarms monitored during the deployment.
--   
--   <a>$sel:applicationId:Environment'</a>,
--   <a>environment_applicationId</a> - The application ID.
--   
--   <a>$sel:name:Environment'</a>, <a>environment_name</a> - The name of
--   the environment.
--   
--   <a>$sel:id:Environment'</a>, <a>environment_id</a> - The environment
--   ID.
--   
--   <a>$sel:description:Environment'</a>, <a>environment_description</a> -
--   The description of the environment.
newEnvironment :: Environment

-- | The state of the environment. An environment can be in one of the
--   following states: <tt>READY_FOR_DEPLOYMENT</tt>, <tt>DEPLOYING</tt>,
--   <tt>ROLLING_BACK</tt>, or <tt>ROLLED_BACK</tt>
environment_state :: Lens' Environment (Maybe EnvironmentState)

-- | Amazon CloudWatch alarms monitored during the deployment.
environment_monitors :: Lens' Environment (Maybe [Monitor])

-- | The application ID.
environment_applicationId :: Lens' Environment (Maybe Text)

-- | The name of the environment.
environment_name :: Lens' Environment (Maybe Text)

-- | The environment ID.
environment_id :: Lens' Environment (Maybe Text)

-- | The description of the environment.
environment_description :: Lens' Environment (Maybe Text)

-- | <i>See:</i> <a>newHostedConfigurationVersion</a> smart constructor.
data HostedConfigurationVersion
HostedConfigurationVersion' :: Maybe (Sensitive ByteString) -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> HostedConfigurationVersion

-- | The content of the configuration or the configuration data.
[$sel:content:HostedConfigurationVersion'] :: HostedConfigurationVersion -> Maybe (Sensitive ByteString)

-- | The configuration version.
[$sel:versionNumber:HostedConfigurationVersion'] :: HostedConfigurationVersion -> Maybe Int

-- | The application ID.
[$sel:applicationId:HostedConfigurationVersion'] :: HostedConfigurationVersion -> Maybe Text

-- | A description of the configuration.
[$sel:description:HostedConfigurationVersion'] :: HostedConfigurationVersion -> Maybe Text

-- | The configuration profile ID.
[$sel:configurationProfileId:HostedConfigurationVersion'] :: HostedConfigurationVersion -> Maybe Text

-- | A standard MIME type describing the format of the configuration
--   content. For more information, see <a>Content-Type</a>.
[$sel:contentType:HostedConfigurationVersion'] :: HostedConfigurationVersion -> Maybe Text

-- | Create a value of <a>HostedConfigurationVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:content:HostedConfigurationVersion'</a>,
--   <a>hostedConfigurationVersion_content</a> - The content of the
--   configuration or the configuration data.
--   
--   <a>$sel:versionNumber:HostedConfigurationVersion'</a>,
--   <a>hostedConfigurationVersion_versionNumber</a> - The configuration
--   version.
--   
--   <a>$sel:applicationId:HostedConfigurationVersion'</a>,
--   <a>hostedConfigurationVersion_applicationId</a> - The application ID.
--   
--   <a>$sel:description:HostedConfigurationVersion'</a>,
--   <a>hostedConfigurationVersion_description</a> - A description of the
--   configuration.
--   
--   <a>$sel:configurationProfileId:HostedConfigurationVersion'</a>,
--   <a>hostedConfigurationVersion_configurationProfileId</a> - The
--   configuration profile ID.
--   
--   <a>$sel:contentType:HostedConfigurationVersion'</a>,
--   <a>hostedConfigurationVersion_contentType</a> - A standard MIME type
--   describing the format of the configuration content. For more
--   information, see <a>Content-Type</a>.
newHostedConfigurationVersion :: HostedConfigurationVersion

-- | The content of the configuration or the configuration data.
hostedConfigurationVersion_content :: Lens' HostedConfigurationVersion (Maybe ByteString)

-- | The configuration version.
hostedConfigurationVersion_versionNumber :: Lens' HostedConfigurationVersion (Maybe Int)

-- | The application ID.
hostedConfigurationVersion_applicationId :: Lens' HostedConfigurationVersion (Maybe Text)

-- | A description of the configuration.
hostedConfigurationVersion_description :: Lens' HostedConfigurationVersion (Maybe Text)

-- | The configuration profile ID.
hostedConfigurationVersion_configurationProfileId :: Lens' HostedConfigurationVersion (Maybe Text)

-- | A standard MIME type describing the format of the configuration
--   content. For more information, see <a>Content-Type</a>.
hostedConfigurationVersion_contentType :: Lens' HostedConfigurationVersion (Maybe Text)

-- | Information about the configuration.
--   
--   <i>See:</i> <a>newHostedConfigurationVersionSummary</a> smart
--   constructor.
data HostedConfigurationVersionSummary
HostedConfigurationVersionSummary' :: Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> HostedConfigurationVersionSummary

-- | The configuration version.
[$sel:versionNumber:HostedConfigurationVersionSummary'] :: HostedConfigurationVersionSummary -> Maybe Int

-- | The application ID.
[$sel:applicationId:HostedConfigurationVersionSummary'] :: HostedConfigurationVersionSummary -> Maybe Text

-- | A description of the configuration.
[$sel:description:HostedConfigurationVersionSummary'] :: HostedConfigurationVersionSummary -> Maybe Text

-- | The configuration profile ID.
[$sel:configurationProfileId:HostedConfigurationVersionSummary'] :: HostedConfigurationVersionSummary -> Maybe Text

-- | A standard MIME type describing the format of the configuration
--   content. For more information, see <a>Content-Type</a>.
[$sel:contentType:HostedConfigurationVersionSummary'] :: HostedConfigurationVersionSummary -> Maybe Text

-- | Create a value of <a>HostedConfigurationVersionSummary</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:versionNumber:HostedConfigurationVersionSummary'</a>,
--   <a>hostedConfigurationVersionSummary_versionNumber</a> - The
--   configuration version.
--   
--   <a>$sel:applicationId:HostedConfigurationVersionSummary'</a>,
--   <a>hostedConfigurationVersionSummary_applicationId</a> - The
--   application ID.
--   
--   <a>$sel:description:HostedConfigurationVersionSummary'</a>,
--   <a>hostedConfigurationVersionSummary_description</a> - A description
--   of the configuration.
--   
--   <a>$sel:configurationProfileId:HostedConfigurationVersionSummary'</a>,
--   <a>hostedConfigurationVersionSummary_configurationProfileId</a> - The
--   configuration profile ID.
--   
--   <a>$sel:contentType:HostedConfigurationVersionSummary'</a>,
--   <a>hostedConfigurationVersionSummary_contentType</a> - A standard MIME
--   type describing the format of the configuration content. For more
--   information, see <a>Content-Type</a>.
newHostedConfigurationVersionSummary :: HostedConfigurationVersionSummary

-- | The configuration version.
hostedConfigurationVersionSummary_versionNumber :: Lens' HostedConfigurationVersionSummary (Maybe Int)

-- | The application ID.
hostedConfigurationVersionSummary_applicationId :: Lens' HostedConfigurationVersionSummary (Maybe Text)

-- | A description of the configuration.
hostedConfigurationVersionSummary_description :: Lens' HostedConfigurationVersionSummary (Maybe Text)

-- | The configuration profile ID.
hostedConfigurationVersionSummary_configurationProfileId :: Lens' HostedConfigurationVersionSummary (Maybe Text)

-- | A standard MIME type describing the format of the configuration
--   content. For more information, see <a>Content-Type</a>.
hostedConfigurationVersionSummary_contentType :: Lens' HostedConfigurationVersionSummary (Maybe Text)

-- | Amazon CloudWatch alarms to monitor during the deployment process.
--   
--   <i>See:</i> <a>newMonitor</a> smart constructor.
data Monitor
Monitor' :: Maybe Text -> Maybe Text -> Monitor

-- | ARN of an IAM role for AppConfig to monitor <tt>AlarmArn</tt>.
[$sel:alarmRoleArn:Monitor'] :: Monitor -> Maybe Text

-- | ARN of the Amazon CloudWatch alarm.
[$sel:alarmArn:Monitor'] :: Monitor -> Maybe Text

-- | Create a value of <a>Monitor</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:alarmRoleArn:Monitor'</a>, <a>monitor_alarmRoleArn</a> - ARN
--   of an IAM role for AppConfig to monitor <tt>AlarmArn</tt>.
--   
--   <a>$sel:alarmArn:Monitor'</a>, <a>monitor_alarmArn</a> - ARN of the
--   Amazon CloudWatch alarm.
newMonitor :: Monitor

-- | ARN of an IAM role for AppConfig to monitor <tt>AlarmArn</tt>.
monitor_alarmRoleArn :: Lens' Monitor (Maybe Text)

-- | ARN of the Amazon CloudWatch alarm.
monitor_alarmArn :: Lens' Monitor (Maybe Text)

-- | A validator provides a syntactic or semantic check to ensure the
--   configuration you want to deploy functions as intended. To validate
--   your application configuration data, you provide a schema or a Lambda
--   function that runs against the configuration. The configuration
--   deployment or update can only proceed when the configuration data is
--   valid.
--   
--   <i>See:</i> <a>newValidator</a> smart constructor.
data Validator
Validator' :: ValidatorType -> Sensitive Text -> Validator

-- | AppConfig supports validators of type <tt>JSON_SCHEMA</tt> and
--   <tt>LAMBDA</tt>
[$sel:type':Validator'] :: Validator -> ValidatorType

-- | Either the JSON Schema content or the Amazon Resource Name (ARN) of an
--   AWS Lambda function.
[$sel:content:Validator'] :: Validator -> Sensitive Text

-- | Create a value of <a>Validator</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:type':Validator'</a>, <a>validator_type</a> - AppConfig
--   supports validators of type <tt>JSON_SCHEMA</tt> and <tt>LAMBDA</tt>
--   
--   <a>$sel:content:Validator'</a>, <a>validator_content</a> - Either the
--   JSON Schema content or the Amazon Resource Name (ARN) of an AWS Lambda
--   function.
newValidator :: ValidatorType -> Text -> Validator

-- | AppConfig supports validators of type <tt>JSON_SCHEMA</tt> and
--   <tt>LAMBDA</tt>
validator_type :: Lens' Validator ValidatorType

-- | Either the JSON Schema content or the Amazon Resource Name (ARN) of an
--   AWS Lambda function.
validator_content :: Lens' Validator Text


-- | Metadata to assign to an AppConfig resource. Tags help organize and
--   categorize your AppConfig resources. Each tag consists of a key and an
--   optional value, both of which you define. You can specify a maximum of
--   50 tags for a resource.
module Amazonka.AppConfig.TagResource

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> HashMap Text Text -> TagResource

-- | The ARN of the resource for which to retrieve tags.
[$sel:resourceArn:TagResource'] :: TagResource -> Text

-- | The key-value string map. The valid character set is [a-zA-Z+-=._:/].
--   The tag key can be up to 128 characters and must not start with
--   <tt>aws:</tt>. The tag value can be up to 256 characters.
[$sel:tags:TagResource'] :: TagResource -> HashMap Text Text

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The ARN of the resource for which to retrieve tags.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - The key-value
--   string map. The valid character set is [a-zA-Z+-=._:/]. The tag key
--   can be up to 128 characters and must not start with <tt>aws:</tt>. The
--   tag value can be up to 256 characters.
newTagResource :: Text -> TagResource

-- | The ARN of the resource for which to retrieve tags.
tagResource_resourceArn :: Lens' TagResource Text

-- | The key-value string map. The valid character set is [a-zA-Z+-=._:/].
--   The tag key can be up to 128 characters and must not start with
--   <tt>aws:</tt>. The tag value can be up to 256 characters.
tagResource_tags :: Lens' TagResource (HashMap Text Text)

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newTagResourceResponse :: TagResourceResponse
instance GHC.Generics.Generic Amazonka.AppConfig.TagResource.TagResource
instance GHC.Show.Show Amazonka.AppConfig.TagResource.TagResource
instance GHC.Read.Read Amazonka.AppConfig.TagResource.TagResource
instance GHC.Classes.Eq Amazonka.AppConfig.TagResource.TagResource
instance GHC.Generics.Generic Amazonka.AppConfig.TagResource.TagResourceResponse
instance GHC.Show.Show Amazonka.AppConfig.TagResource.TagResourceResponse
instance GHC.Read.Read Amazonka.AppConfig.TagResource.TagResourceResponse
instance GHC.Classes.Eq Amazonka.AppConfig.TagResource.TagResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.AppConfig.TagResource.TagResource
instance Control.DeepSeq.NFData Amazonka.AppConfig.TagResource.TagResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.AppConfig.TagResource.TagResource
instance Control.DeepSeq.NFData Amazonka.AppConfig.TagResource.TagResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppConfig.TagResource.TagResource
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppConfig.TagResource.TagResource
instance Amazonka.Data.Path.ToPath Amazonka.AppConfig.TagResource.TagResource
instance Amazonka.Data.Query.ToQuery Amazonka.AppConfig.TagResource.TagResource


-- | Stops a deployment. This API action works only on deployments that
--   have a status of <tt>DEPLOYING</tt>. This action moves the deployment
--   to a status of <tt>ROLLED_BACK</tt>.
module Amazonka.AppConfig.StopDeployment

-- | <i>See:</i> <a>newStopDeployment</a> smart constructor.
data StopDeployment
StopDeployment' :: Text -> Text -> Int -> StopDeployment

-- | The application ID.
[$sel:applicationId:StopDeployment'] :: StopDeployment -> Text

-- | The environment ID.
[$sel:environmentId:StopDeployment'] :: StopDeployment -> Text

-- | The sequence number of the deployment.
[$sel:deploymentNumber:StopDeployment'] :: StopDeployment -> Int

-- | Create a value of <a>StopDeployment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationId:StopDeployment'</a>,
--   <a>stopDeployment_applicationId</a> - The application ID.
--   
--   <a>$sel:environmentId:StopDeployment'</a>,
--   <a>stopDeployment_environmentId</a> - The environment ID.
--   
--   <a>$sel:deploymentNumber:StopDeployment'</a>,
--   <a>stopDeployment_deploymentNumber</a> - The sequence number of the
--   deployment.
newStopDeployment :: Text -> Text -> Int -> StopDeployment

-- | The application ID.
stopDeployment_applicationId :: Lens' StopDeployment Text

-- | The environment ID.
stopDeployment_environmentId :: Lens' StopDeployment Text

-- | The sequence number of the deployment.
stopDeployment_deploymentNumber :: Lens' StopDeployment Int

-- | <i>See:</i> <a>newDeployment</a> smart constructor.
data Deployment
Deployment' :: Maybe Double -> Maybe Text -> Maybe DeploymentState -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe [DeploymentEvent] -> Maybe Double -> Maybe POSIX -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe GrowthType -> Deployment

-- | The percentage of targets to receive a deployed configuration during
--   each interval.
[$sel:growthFactor:Deployment'] :: Deployment -> Maybe Double

-- | The name of the configuration.
[$sel:configurationName:Deployment'] :: Deployment -> Maybe Text

-- | The state of the deployment.
[$sel:state:Deployment'] :: Deployment -> Maybe DeploymentState

-- | The ID of the deployment strategy that was deployed.
[$sel:deploymentStrategyId:Deployment'] :: Deployment -> Maybe Text

-- | The sequence number of the deployment.
[$sel:deploymentNumber:Deployment'] :: Deployment -> Maybe Int

-- | The configuration version that was deployed.
[$sel:configurationVersion:Deployment'] :: Deployment -> Maybe Text

-- | A list containing all events related to a deployment. The most recent
--   events are displayed first.
[$sel:eventLog:Deployment'] :: Deployment -> Maybe [DeploymentEvent]

-- | The percentage of targets for which the deployment is available.
[$sel:percentageComplete:Deployment'] :: Deployment -> Maybe Double

-- | The time the deployment started.
[$sel:startedAt:Deployment'] :: Deployment -> Maybe POSIX

-- | The ID of the application that was deployed.
[$sel:applicationId:Deployment'] :: Deployment -> Maybe Text

-- | Total amount of time the deployment lasted.
[$sel:deploymentDurationInMinutes:Deployment'] :: Deployment -> Maybe Natural

-- | The ID of the environment that was deployed.
[$sel:environmentId:Deployment'] :: Deployment -> Maybe Text

-- | The time the deployment completed.
[$sel:completedAt:Deployment'] :: Deployment -> Maybe POSIX

-- | Information about the source location of the configuration.
[$sel:configurationLocationUri:Deployment'] :: Deployment -> Maybe Text

-- | The amount of time AppConfig monitored for alarms before considering
--   the deployment to be complete and no longer eligible for automatic
--   roll back.
[$sel:finalBakeTimeInMinutes:Deployment'] :: Deployment -> Maybe Natural

-- | The description of the deployment.
[$sel:description:Deployment'] :: Deployment -> Maybe Text

-- | The ID of the configuration profile that was deployed.
[$sel:configurationProfileId:Deployment'] :: Deployment -> Maybe Text

-- | The algorithm used to define how percentage grew over time.
[$sel:growthType:Deployment'] :: Deployment -> Maybe GrowthType

-- | Create a value of <a>Deployment</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:growthFactor:Deployment'</a>, <a>deployment_growthFactor</a> -
--   The percentage of targets to receive a deployed configuration during
--   each interval.
--   
--   <a>$sel:configurationName:Deployment'</a>,
--   <a>deployment_configurationName</a> - The name of the configuration.
--   
--   <a>$sel:state:Deployment'</a>, <a>deployment_state</a> - The state of
--   the deployment.
--   
--   <a>$sel:deploymentStrategyId:Deployment'</a>,
--   <a>deployment_deploymentStrategyId</a> - The ID of the deployment
--   strategy that was deployed.
--   
--   <a>$sel:deploymentNumber:Deployment'</a>,
--   <a>deployment_deploymentNumber</a> - The sequence number of the
--   deployment.
--   
--   <a>$sel:configurationVersion:Deployment'</a>,
--   <a>deployment_configurationVersion</a> - The configuration version
--   that was deployed.
--   
--   <a>$sel:eventLog:Deployment'</a>, <a>deployment_eventLog</a> - A list
--   containing all events related to a deployment. The most recent events
--   are displayed first.
--   
--   <a>$sel:percentageComplete:Deployment'</a>,
--   <a>deployment_percentageComplete</a> - The percentage of targets for
--   which the deployment is available.
--   
--   <a>$sel:startedAt:Deployment'</a>, <a>deployment_startedAt</a> - The
--   time the deployment started.
--   
--   <a>$sel:applicationId:Deployment'</a>, <a>deployment_applicationId</a>
--   - The ID of the application that was deployed.
--   
--   <a>$sel:deploymentDurationInMinutes:Deployment'</a>,
--   <a>deployment_deploymentDurationInMinutes</a> - Total amount of time
--   the deployment lasted.
--   
--   <a>$sel:environmentId:Deployment'</a>, <a>deployment_environmentId</a>
--   - The ID of the environment that was deployed.
--   
--   <a>$sel:completedAt:Deployment'</a>, <a>deployment_completedAt</a> -
--   The time the deployment completed.
--   
--   <a>$sel:configurationLocationUri:Deployment'</a>,
--   <a>deployment_configurationLocationUri</a> - Information about the
--   source location of the configuration.
--   
--   <a>$sel:finalBakeTimeInMinutes:Deployment'</a>,
--   <a>deployment_finalBakeTimeInMinutes</a> - The amount of time
--   AppConfig monitored for alarms before considering the deployment to be
--   complete and no longer eligible for automatic roll back.
--   
--   <a>$sel:description:Deployment'</a>, <a>deployment_description</a> -
--   The description of the deployment.
--   
--   <a>$sel:configurationProfileId:Deployment'</a>,
--   <a>deployment_configurationProfileId</a> - The ID of the configuration
--   profile that was deployed.
--   
--   <a>$sel:growthType:Deployment'</a>, <a>deployment_growthType</a> - The
--   algorithm used to define how percentage grew over time.
newDeployment :: Deployment

-- | The percentage of targets to receive a deployed configuration during
--   each interval.
deployment_growthFactor :: Lens' Deployment (Maybe Double)

-- | The name of the configuration.
deployment_configurationName :: Lens' Deployment (Maybe Text)

-- | The state of the deployment.
deployment_state :: Lens' Deployment (Maybe DeploymentState)

-- | The ID of the deployment strategy that was deployed.
deployment_deploymentStrategyId :: Lens' Deployment (Maybe Text)

-- | The sequence number of the deployment.
deployment_deploymentNumber :: Lens' Deployment (Maybe Int)

-- | The configuration version that was deployed.
deployment_configurationVersion :: Lens' Deployment (Maybe Text)

-- | A list containing all events related to a deployment. The most recent
--   events are displayed first.
deployment_eventLog :: Lens' Deployment (Maybe [DeploymentEvent])

-- | The percentage of targets for which the deployment is available.
deployment_percentageComplete :: Lens' Deployment (Maybe Double)

-- | The time the deployment started.
deployment_startedAt :: Lens' Deployment (Maybe UTCTime)

-- | The ID of the application that was deployed.
deployment_applicationId :: Lens' Deployment (Maybe Text)

-- | Total amount of time the deployment lasted.
deployment_deploymentDurationInMinutes :: Lens' Deployment (Maybe Natural)

-- | The ID of the environment that was deployed.
deployment_environmentId :: Lens' Deployment (Maybe Text)

-- | The time the deployment completed.
deployment_completedAt :: Lens' Deployment (Maybe UTCTime)

-- | Information about the source location of the configuration.
deployment_configurationLocationUri :: Lens' Deployment (Maybe Text)

-- | The amount of time AppConfig monitored for alarms before considering
--   the deployment to be complete and no longer eligible for automatic
--   roll back.
deployment_finalBakeTimeInMinutes :: Lens' Deployment (Maybe Natural)

-- | The description of the deployment.
deployment_description :: Lens' Deployment (Maybe Text)

-- | The ID of the configuration profile that was deployed.
deployment_configurationProfileId :: Lens' Deployment (Maybe Text)

-- | The algorithm used to define how percentage grew over time.
deployment_growthType :: Lens' Deployment (Maybe GrowthType)
instance GHC.Generics.Generic Amazonka.AppConfig.StopDeployment.StopDeployment
instance GHC.Show.Show Amazonka.AppConfig.StopDeployment.StopDeployment
instance GHC.Read.Read Amazonka.AppConfig.StopDeployment.StopDeployment
instance GHC.Classes.Eq Amazonka.AppConfig.StopDeployment.StopDeployment
instance Amazonka.Types.AWSRequest Amazonka.AppConfig.StopDeployment.StopDeployment
instance Data.Hashable.Class.Hashable Amazonka.AppConfig.StopDeployment.StopDeployment
instance Control.DeepSeq.NFData Amazonka.AppConfig.StopDeployment.StopDeployment
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppConfig.StopDeployment.StopDeployment
instance Amazonka.Data.Path.ToPath Amazonka.AppConfig.StopDeployment.StopDeployment
instance Amazonka.Data.Query.ToQuery Amazonka.AppConfig.StopDeployment.StopDeployment


-- | Starts a deployment.
module Amazonka.AppConfig.StartDeployment

-- | <i>See:</i> <a>newStartDeployment</a> smart constructor.
data StartDeployment
StartDeployment' :: Maybe Text -> Maybe (HashMap Text Text) -> Text -> Text -> Text -> Text -> Text -> StartDeployment

-- | A description of the deployment.
[$sel:description:StartDeployment'] :: StartDeployment -> Maybe Text

-- | Metadata to assign to the deployment. Tags help organize and
--   categorize your AppConfig resources. Each tag consists of a key and an
--   optional value, both of which you define.
[$sel:tags:StartDeployment'] :: StartDeployment -> Maybe (HashMap Text Text)

-- | The application ID.
[$sel:applicationId:StartDeployment'] :: StartDeployment -> Text

-- | The environment ID.
[$sel:environmentId:StartDeployment'] :: StartDeployment -> Text

-- | The deployment strategy ID.
[$sel:deploymentStrategyId:StartDeployment'] :: StartDeployment -> Text

-- | The configuration profile ID.
[$sel:configurationProfileId:StartDeployment'] :: StartDeployment -> Text

-- | The configuration version to deploy.
[$sel:configurationVersion:StartDeployment'] :: StartDeployment -> Text

-- | Create a value of <a>StartDeployment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:StartDeployment'</a>,
--   <a>startDeployment_description</a> - A description of the deployment.
--   
--   <a>$sel:tags:StartDeployment'</a>, <a>startDeployment_tags</a> -
--   Metadata to assign to the deployment. Tags help organize and
--   categorize your AppConfig resources. Each tag consists of a key and an
--   optional value, both of which you define.
--   
--   <a>$sel:applicationId:StartDeployment'</a>,
--   <a>startDeployment_applicationId</a> - The application ID.
--   
--   <a>$sel:environmentId:StartDeployment'</a>,
--   <a>startDeployment_environmentId</a> - The environment ID.
--   
--   <a>$sel:deploymentStrategyId:StartDeployment'</a>,
--   <a>startDeployment_deploymentStrategyId</a> - The deployment strategy
--   ID.
--   
--   <a>$sel:configurationProfileId:StartDeployment'</a>,
--   <a>startDeployment_configurationProfileId</a> - The configuration
--   profile ID.
--   
--   <a>$sel:configurationVersion:StartDeployment'</a>,
--   <a>startDeployment_configurationVersion</a> - The configuration
--   version to deploy.
newStartDeployment :: Text -> Text -> Text -> Text -> Text -> StartDeployment

-- | A description of the deployment.
startDeployment_description :: Lens' StartDeployment (Maybe Text)

-- | Metadata to assign to the deployment. Tags help organize and
--   categorize your AppConfig resources. Each tag consists of a key and an
--   optional value, both of which you define.
startDeployment_tags :: Lens' StartDeployment (Maybe (HashMap Text Text))

-- | The application ID.
startDeployment_applicationId :: Lens' StartDeployment Text

-- | The environment ID.
startDeployment_environmentId :: Lens' StartDeployment Text

-- | The deployment strategy ID.
startDeployment_deploymentStrategyId :: Lens' StartDeployment Text

-- | The configuration profile ID.
startDeployment_configurationProfileId :: Lens' StartDeployment Text

-- | The configuration version to deploy.
startDeployment_configurationVersion :: Lens' StartDeployment Text

-- | <i>See:</i> <a>newDeployment</a> smart constructor.
data Deployment
Deployment' :: Maybe Double -> Maybe Text -> Maybe DeploymentState -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe [DeploymentEvent] -> Maybe Double -> Maybe POSIX -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe GrowthType -> Deployment

-- | The percentage of targets to receive a deployed configuration during
--   each interval.
[$sel:growthFactor:Deployment'] :: Deployment -> Maybe Double

-- | The name of the configuration.
[$sel:configurationName:Deployment'] :: Deployment -> Maybe Text

-- | The state of the deployment.
[$sel:state:Deployment'] :: Deployment -> Maybe DeploymentState

-- | The ID of the deployment strategy that was deployed.
[$sel:deploymentStrategyId:Deployment'] :: Deployment -> Maybe Text

-- | The sequence number of the deployment.
[$sel:deploymentNumber:Deployment'] :: Deployment -> Maybe Int

-- | The configuration version that was deployed.
[$sel:configurationVersion:Deployment'] :: Deployment -> Maybe Text

-- | A list containing all events related to a deployment. The most recent
--   events are displayed first.
[$sel:eventLog:Deployment'] :: Deployment -> Maybe [DeploymentEvent]

-- | The percentage of targets for which the deployment is available.
[$sel:percentageComplete:Deployment'] :: Deployment -> Maybe Double

-- | The time the deployment started.
[$sel:startedAt:Deployment'] :: Deployment -> Maybe POSIX

-- | The ID of the application that was deployed.
[$sel:applicationId:Deployment'] :: Deployment -> Maybe Text

-- | Total amount of time the deployment lasted.
[$sel:deploymentDurationInMinutes:Deployment'] :: Deployment -> Maybe Natural

-- | The ID of the environment that was deployed.
[$sel:environmentId:Deployment'] :: Deployment -> Maybe Text

-- | The time the deployment completed.
[$sel:completedAt:Deployment'] :: Deployment -> Maybe POSIX

-- | Information about the source location of the configuration.
[$sel:configurationLocationUri:Deployment'] :: Deployment -> Maybe Text

-- | The amount of time AppConfig monitored for alarms before considering
--   the deployment to be complete and no longer eligible for automatic
--   roll back.
[$sel:finalBakeTimeInMinutes:Deployment'] :: Deployment -> Maybe Natural

-- | The description of the deployment.
[$sel:description:Deployment'] :: Deployment -> Maybe Text

-- | The ID of the configuration profile that was deployed.
[$sel:configurationProfileId:Deployment'] :: Deployment -> Maybe Text

-- | The algorithm used to define how percentage grew over time.
[$sel:growthType:Deployment'] :: Deployment -> Maybe GrowthType

-- | Create a value of <a>Deployment</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:growthFactor:Deployment'</a>, <a>deployment_growthFactor</a> -
--   The percentage of targets to receive a deployed configuration during
--   each interval.
--   
--   <a>$sel:configurationName:Deployment'</a>,
--   <a>deployment_configurationName</a> - The name of the configuration.
--   
--   <a>$sel:state:Deployment'</a>, <a>deployment_state</a> - The state of
--   the deployment.
--   
--   <a>$sel:deploymentStrategyId:Deployment'</a>,
--   <a>deployment_deploymentStrategyId</a> - The ID of the deployment
--   strategy that was deployed.
--   
--   <a>$sel:deploymentNumber:Deployment'</a>,
--   <a>deployment_deploymentNumber</a> - The sequence number of the
--   deployment.
--   
--   <a>$sel:configurationVersion:Deployment'</a>,
--   <a>deployment_configurationVersion</a> - The configuration version
--   that was deployed.
--   
--   <a>$sel:eventLog:Deployment'</a>, <a>deployment_eventLog</a> - A list
--   containing all events related to a deployment. The most recent events
--   are displayed first.
--   
--   <a>$sel:percentageComplete:Deployment'</a>,
--   <a>deployment_percentageComplete</a> - The percentage of targets for
--   which the deployment is available.
--   
--   <a>$sel:startedAt:Deployment'</a>, <a>deployment_startedAt</a> - The
--   time the deployment started.
--   
--   <a>$sel:applicationId:Deployment'</a>, <a>deployment_applicationId</a>
--   - The ID of the application that was deployed.
--   
--   <a>$sel:deploymentDurationInMinutes:Deployment'</a>,
--   <a>deployment_deploymentDurationInMinutes</a> - Total amount of time
--   the deployment lasted.
--   
--   <a>$sel:environmentId:Deployment'</a>, <a>deployment_environmentId</a>
--   - The ID of the environment that was deployed.
--   
--   <a>$sel:completedAt:Deployment'</a>, <a>deployment_completedAt</a> -
--   The time the deployment completed.
--   
--   <a>$sel:configurationLocationUri:Deployment'</a>,
--   <a>deployment_configurationLocationUri</a> - Information about the
--   source location of the configuration.
--   
--   <a>$sel:finalBakeTimeInMinutes:Deployment'</a>,
--   <a>deployment_finalBakeTimeInMinutes</a> - The amount of time
--   AppConfig monitored for alarms before considering the deployment to be
--   complete and no longer eligible for automatic roll back.
--   
--   <a>$sel:description:Deployment'</a>, <a>deployment_description</a> -
--   The description of the deployment.
--   
--   <a>$sel:configurationProfileId:Deployment'</a>,
--   <a>deployment_configurationProfileId</a> - The ID of the configuration
--   profile that was deployed.
--   
--   <a>$sel:growthType:Deployment'</a>, <a>deployment_growthType</a> - The
--   algorithm used to define how percentage grew over time.
newDeployment :: Deployment

-- | The percentage of targets to receive a deployed configuration during
--   each interval.
deployment_growthFactor :: Lens' Deployment (Maybe Double)

-- | The name of the configuration.
deployment_configurationName :: Lens' Deployment (Maybe Text)

-- | The state of the deployment.
deployment_state :: Lens' Deployment (Maybe DeploymentState)

-- | The ID of the deployment strategy that was deployed.
deployment_deploymentStrategyId :: Lens' Deployment (Maybe Text)

-- | The sequence number of the deployment.
deployment_deploymentNumber :: Lens' Deployment (Maybe Int)

-- | The configuration version that was deployed.
deployment_configurationVersion :: Lens' Deployment (Maybe Text)

-- | A list containing all events related to a deployment. The most recent
--   events are displayed first.
deployment_eventLog :: Lens' Deployment (Maybe [DeploymentEvent])

-- | The percentage of targets for which the deployment is available.
deployment_percentageComplete :: Lens' Deployment (Maybe Double)

-- | The time the deployment started.
deployment_startedAt :: Lens' Deployment (Maybe UTCTime)

-- | The ID of the application that was deployed.
deployment_applicationId :: Lens' Deployment (Maybe Text)

-- | Total amount of time the deployment lasted.
deployment_deploymentDurationInMinutes :: Lens' Deployment (Maybe Natural)

-- | The ID of the environment that was deployed.
deployment_environmentId :: Lens' Deployment (Maybe Text)

-- | The time the deployment completed.
deployment_completedAt :: Lens' Deployment (Maybe UTCTime)

-- | Information about the source location of the configuration.
deployment_configurationLocationUri :: Lens' Deployment (Maybe Text)

-- | The amount of time AppConfig monitored for alarms before considering
--   the deployment to be complete and no longer eligible for automatic
--   roll back.
deployment_finalBakeTimeInMinutes :: Lens' Deployment (Maybe Natural)

-- | The description of the deployment.
deployment_description :: Lens' Deployment (Maybe Text)

-- | The ID of the configuration profile that was deployed.
deployment_configurationProfileId :: Lens' Deployment (Maybe Text)

-- | The algorithm used to define how percentage grew over time.
deployment_growthType :: Lens' Deployment (Maybe GrowthType)
instance GHC.Generics.Generic Amazonka.AppConfig.StartDeployment.StartDeployment
instance GHC.Show.Show Amazonka.AppConfig.StartDeployment.StartDeployment
instance GHC.Read.Read Amazonka.AppConfig.StartDeployment.StartDeployment
instance GHC.Classes.Eq Amazonka.AppConfig.StartDeployment.StartDeployment
instance Amazonka.Types.AWSRequest Amazonka.AppConfig.StartDeployment.StartDeployment
instance Data.Hashable.Class.Hashable Amazonka.AppConfig.StartDeployment.StartDeployment
instance Control.DeepSeq.NFData Amazonka.AppConfig.StartDeployment.StartDeployment
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppConfig.StartDeployment.StartDeployment
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppConfig.StartDeployment.StartDeployment
instance Amazonka.Data.Path.ToPath Amazonka.AppConfig.StartDeployment.StartDeployment
instance Amazonka.Data.Query.ToQuery Amazonka.AppConfig.StartDeployment.StartDeployment


-- | Retrieves the list of key-value tags assigned to the resource.
module Amazonka.AppConfig.ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | The resource ARN.
[$sel:resourceArn:ListTagsForResource'] :: ListTagsForResource -> Text

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The resource ARN.
newListTagsForResource :: Text -> ListTagsForResource

-- | The resource ARN.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe (HashMap Text Text) -> Int -> ListTagsForResourceResponse

-- | Metadata to assign to AppConfig resources. Tags help organize and
--   categorize your AppConfig resources. Each tag consists of a key and an
--   optional value, both of which you define.
[$sel:tags:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Int

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - Metadata to assign to
--   AppConfig resources. Tags help organize and categorize your AppConfig
--   resources. Each tag consists of a key and an optional value, both of
--   which you define.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | Metadata to assign to AppConfig resources. Tags help organize and
--   categorize your AppConfig resources. Each tag consists of a key and an
--   optional value, both of which you define.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int
instance GHC.Generics.Generic Amazonka.AppConfig.ListTagsForResource.ListTagsForResource
instance GHC.Show.Show Amazonka.AppConfig.ListTagsForResource.ListTagsForResource
instance GHC.Read.Read Amazonka.AppConfig.ListTagsForResource.ListTagsForResource
instance GHC.Classes.Eq Amazonka.AppConfig.ListTagsForResource.ListTagsForResource
instance GHC.Generics.Generic Amazonka.AppConfig.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Show.Show Amazonka.AppConfig.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Read.Read Amazonka.AppConfig.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Classes.Eq Amazonka.AppConfig.ListTagsForResource.ListTagsForResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.AppConfig.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Amazonka.AppConfig.ListTagsForResource.ListTagsForResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.AppConfig.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Amazonka.AppConfig.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppConfig.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Path.ToPath Amazonka.AppConfig.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Query.ToQuery Amazonka.AppConfig.ListTagsForResource.ListTagsForResource


-- | View a list of configurations stored in the AppConfig configuration
--   store by version.
module Amazonka.AppConfig.ListHostedConfigurationVersions

-- | <i>See:</i> <a>newListHostedConfigurationVersions</a> smart
--   constructor.
data ListHostedConfigurationVersions
ListHostedConfigurationVersions' :: Maybe Text -> Maybe Natural -> Text -> Text -> ListHostedConfigurationVersions

-- | A token to start the list. Use this token to get the next set of
--   results.
[$sel:nextToken:ListHostedConfigurationVersions'] :: ListHostedConfigurationVersions -> Maybe Text

-- | The maximum number of items to return for this call. The call also
--   returns a token that you can specify in a subsequent call to get the
--   next set of results.
[$sel:maxResults:ListHostedConfigurationVersions'] :: ListHostedConfigurationVersions -> Maybe Natural

-- | The application ID.
[$sel:applicationId:ListHostedConfigurationVersions'] :: ListHostedConfigurationVersions -> Text

-- | The configuration profile ID.
[$sel:configurationProfileId:ListHostedConfigurationVersions'] :: ListHostedConfigurationVersions -> Text

-- | Create a value of <a>ListHostedConfigurationVersions</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListHostedConfigurationVersions'</a>,
--   <a>listHostedConfigurationVersions_nextToken</a> - A token to start
--   the list. Use this token to get the next set of results.
--   
--   <a>$sel:maxResults:ListHostedConfigurationVersions'</a>,
--   <a>listHostedConfigurationVersions_maxResults</a> - The maximum number
--   of items to return for this call. The call also returns a token that
--   you can specify in a subsequent call to get the next set of results.
--   
--   <a>$sel:applicationId:ListHostedConfigurationVersions'</a>,
--   <a>listHostedConfigurationVersions_applicationId</a> - The application
--   ID.
--   
--   <a>$sel:configurationProfileId:ListHostedConfigurationVersions'</a>,
--   <a>listHostedConfigurationVersions_configurationProfileId</a> - The
--   configuration profile ID.
newListHostedConfigurationVersions :: Text -> Text -> ListHostedConfigurationVersions

-- | A token to start the list. Use this token to get the next set of
--   results.
listHostedConfigurationVersions_nextToken :: Lens' ListHostedConfigurationVersions (Maybe Text)

-- | The maximum number of items to return for this call. The call also
--   returns a token that you can specify in a subsequent call to get the
--   next set of results.
listHostedConfigurationVersions_maxResults :: Lens' ListHostedConfigurationVersions (Maybe Natural)

-- | The application ID.
listHostedConfigurationVersions_applicationId :: Lens' ListHostedConfigurationVersions Text

-- | The configuration profile ID.
listHostedConfigurationVersions_configurationProfileId :: Lens' ListHostedConfigurationVersions Text

-- | <i>See:</i> <a>newListHostedConfigurationVersionsResponse</a> smart
--   constructor.
data ListHostedConfigurationVersionsResponse
ListHostedConfigurationVersionsResponse' :: Maybe [HostedConfigurationVersionSummary] -> Maybe Text -> Int -> ListHostedConfigurationVersionsResponse

-- | The elements from this collection.
[$sel:items:ListHostedConfigurationVersionsResponse'] :: ListHostedConfigurationVersionsResponse -> Maybe [HostedConfigurationVersionSummary]

-- | The token for the next set of items to return. Use this token to get
--   the next set of results.
[$sel:nextToken:ListHostedConfigurationVersionsResponse'] :: ListHostedConfigurationVersionsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListHostedConfigurationVersionsResponse'] :: ListHostedConfigurationVersionsResponse -> Int

-- | Create a value of <a>ListHostedConfigurationVersionsResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:ListHostedConfigurationVersionsResponse'</a>,
--   <a>listHostedConfigurationVersionsResponse_items</a> - The elements
--   from this collection.
--   
--   <a>$sel:nextToken:ListHostedConfigurationVersions'</a>,
--   <a>listHostedConfigurationVersionsResponse_nextToken</a> - The token
--   for the next set of items to return. Use this token to get the next
--   set of results.
--   
--   <a>$sel:httpStatus:ListHostedConfigurationVersionsResponse'</a>,
--   <a>listHostedConfigurationVersionsResponse_httpStatus</a> - The
--   response's http status code.
newListHostedConfigurationVersionsResponse :: Int -> ListHostedConfigurationVersionsResponse

-- | The elements from this collection.
listHostedConfigurationVersionsResponse_items :: Lens' ListHostedConfigurationVersionsResponse (Maybe [HostedConfigurationVersionSummary])

-- | The token for the next set of items to return. Use this token to get
--   the next set of results.
listHostedConfigurationVersionsResponse_nextToken :: Lens' ListHostedConfigurationVersionsResponse (Maybe Text)

-- | The response's http status code.
listHostedConfigurationVersionsResponse_httpStatus :: Lens' ListHostedConfigurationVersionsResponse Int
instance GHC.Generics.Generic Amazonka.AppConfig.ListHostedConfigurationVersions.ListHostedConfigurationVersions
instance GHC.Show.Show Amazonka.AppConfig.ListHostedConfigurationVersions.ListHostedConfigurationVersions
instance GHC.Read.Read Amazonka.AppConfig.ListHostedConfigurationVersions.ListHostedConfigurationVersions
instance GHC.Classes.Eq Amazonka.AppConfig.ListHostedConfigurationVersions.ListHostedConfigurationVersions
instance GHC.Generics.Generic Amazonka.AppConfig.ListHostedConfigurationVersions.ListHostedConfigurationVersionsResponse
instance GHC.Show.Show Amazonka.AppConfig.ListHostedConfigurationVersions.ListHostedConfigurationVersionsResponse
instance GHC.Read.Read Amazonka.AppConfig.ListHostedConfigurationVersions.ListHostedConfigurationVersionsResponse
instance GHC.Classes.Eq Amazonka.AppConfig.ListHostedConfigurationVersions.ListHostedConfigurationVersionsResponse
instance Amazonka.Types.AWSRequest Amazonka.AppConfig.ListHostedConfigurationVersions.ListHostedConfigurationVersions
instance Control.DeepSeq.NFData Amazonka.AppConfig.ListHostedConfigurationVersions.ListHostedConfigurationVersionsResponse
instance Data.Hashable.Class.Hashable Amazonka.AppConfig.ListHostedConfigurationVersions.ListHostedConfigurationVersions
instance Control.DeepSeq.NFData Amazonka.AppConfig.ListHostedConfigurationVersions.ListHostedConfigurationVersions
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppConfig.ListHostedConfigurationVersions.ListHostedConfigurationVersions
instance Amazonka.Data.Path.ToPath Amazonka.AppConfig.ListHostedConfigurationVersions.ListHostedConfigurationVersions
instance Amazonka.Data.Query.ToQuery Amazonka.AppConfig.ListHostedConfigurationVersions.ListHostedConfigurationVersions


-- | List the environments for an application.
module Amazonka.AppConfig.ListEnvironments

-- | <i>See:</i> <a>newListEnvironments</a> smart constructor.
data ListEnvironments
ListEnvironments' :: Maybe Text -> Maybe Natural -> Text -> ListEnvironments

-- | A token to start the list. Use this token to get the next set of
--   results.
[$sel:nextToken:ListEnvironments'] :: ListEnvironments -> Maybe Text

-- | The maximum number of items to return for this call. The call also
--   returns a token that you can specify in a subsequent call to get the
--   next set of results.
[$sel:maxResults:ListEnvironments'] :: ListEnvironments -> Maybe Natural

-- | The application ID.
[$sel:applicationId:ListEnvironments'] :: ListEnvironments -> Text

-- | Create a value of <a>ListEnvironments</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListEnvironments'</a>,
--   <a>listEnvironments_nextToken</a> - A token to start the list. Use
--   this token to get the next set of results.
--   
--   <a>$sel:maxResults:ListEnvironments'</a>,
--   <a>listEnvironments_maxResults</a> - The maximum number of items to
--   return for this call. The call also returns a token that you can
--   specify in a subsequent call to get the next set of results.
--   
--   <a>$sel:applicationId:ListEnvironments'</a>,
--   <a>listEnvironments_applicationId</a> - The application ID.
newListEnvironments :: Text -> ListEnvironments

-- | A token to start the list. Use this token to get the next set of
--   results.
listEnvironments_nextToken :: Lens' ListEnvironments (Maybe Text)

-- | The maximum number of items to return for this call. The call also
--   returns a token that you can specify in a subsequent call to get the
--   next set of results.
listEnvironments_maxResults :: Lens' ListEnvironments (Maybe Natural)

-- | The application ID.
listEnvironments_applicationId :: Lens' ListEnvironments Text

-- | <i>See:</i> <a>newListEnvironmentsResponse</a> smart constructor.
data ListEnvironmentsResponse
ListEnvironmentsResponse' :: Maybe [Environment] -> Maybe Text -> Int -> ListEnvironmentsResponse

-- | The elements from this collection.
[$sel:items:ListEnvironmentsResponse'] :: ListEnvironmentsResponse -> Maybe [Environment]

-- | The token for the next set of items to return. Use this token to get
--   the next set of results.
[$sel:nextToken:ListEnvironmentsResponse'] :: ListEnvironmentsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListEnvironmentsResponse'] :: ListEnvironmentsResponse -> Int

-- | Create a value of <a>ListEnvironmentsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:ListEnvironmentsResponse'</a>,
--   <a>listEnvironmentsResponse_items</a> - The elements from this
--   collection.
--   
--   <a>$sel:nextToken:ListEnvironments'</a>,
--   <a>listEnvironmentsResponse_nextToken</a> - The token for the next set
--   of items to return. Use this token to get the next set of results.
--   
--   <a>$sel:httpStatus:ListEnvironmentsResponse'</a>,
--   <a>listEnvironmentsResponse_httpStatus</a> - The response's http
--   status code.
newListEnvironmentsResponse :: Int -> ListEnvironmentsResponse

-- | The elements from this collection.
listEnvironmentsResponse_items :: Lens' ListEnvironmentsResponse (Maybe [Environment])

-- | The token for the next set of items to return. Use this token to get
--   the next set of results.
listEnvironmentsResponse_nextToken :: Lens' ListEnvironmentsResponse (Maybe Text)

-- | The response's http status code.
listEnvironmentsResponse_httpStatus :: Lens' ListEnvironmentsResponse Int
instance GHC.Generics.Generic Amazonka.AppConfig.ListEnvironments.ListEnvironments
instance GHC.Show.Show Amazonka.AppConfig.ListEnvironments.ListEnvironments
instance GHC.Read.Read Amazonka.AppConfig.ListEnvironments.ListEnvironments
instance GHC.Classes.Eq Amazonka.AppConfig.ListEnvironments.ListEnvironments
instance GHC.Generics.Generic Amazonka.AppConfig.ListEnvironments.ListEnvironmentsResponse
instance GHC.Show.Show Amazonka.AppConfig.ListEnvironments.ListEnvironmentsResponse
instance GHC.Read.Read Amazonka.AppConfig.ListEnvironments.ListEnvironmentsResponse
instance GHC.Classes.Eq Amazonka.AppConfig.ListEnvironments.ListEnvironmentsResponse
instance Amazonka.Types.AWSRequest Amazonka.AppConfig.ListEnvironments.ListEnvironments
instance Control.DeepSeq.NFData Amazonka.AppConfig.ListEnvironments.ListEnvironmentsResponse
instance Data.Hashable.Class.Hashable Amazonka.AppConfig.ListEnvironments.ListEnvironments
instance Control.DeepSeq.NFData Amazonka.AppConfig.ListEnvironments.ListEnvironments
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppConfig.ListEnvironments.ListEnvironments
instance Amazonka.Data.Path.ToPath Amazonka.AppConfig.ListEnvironments.ListEnvironments
instance Amazonka.Data.Query.ToQuery Amazonka.AppConfig.ListEnvironments.ListEnvironments


-- | Lists the deployments for an environment.
module Amazonka.AppConfig.ListDeployments

-- | <i>See:</i> <a>newListDeployments</a> smart constructor.
data ListDeployments
ListDeployments' :: Maybe Text -> Maybe Natural -> Text -> Text -> ListDeployments

-- | A token to start the list. Use this token to get the next set of
--   results.
[$sel:nextToken:ListDeployments'] :: ListDeployments -> Maybe Text

-- | The maximum number of items to return for this call. The call also
--   returns a token that you can specify in a subsequent call to get the
--   next set of results.
[$sel:maxResults:ListDeployments'] :: ListDeployments -> Maybe Natural

-- | The application ID.
[$sel:applicationId:ListDeployments'] :: ListDeployments -> Text

-- | The environment ID.
[$sel:environmentId:ListDeployments'] :: ListDeployments -> Text

-- | Create a value of <a>ListDeployments</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDeployments'</a>,
--   <a>listDeployments_nextToken</a> - A token to start the list. Use this
--   token to get the next set of results.
--   
--   <a>$sel:maxResults:ListDeployments'</a>,
--   <a>listDeployments_maxResults</a> - The maximum number of items to
--   return for this call. The call also returns a token that you can
--   specify in a subsequent call to get the next set of results.
--   
--   <a>$sel:applicationId:ListDeployments'</a>,
--   <a>listDeployments_applicationId</a> - The application ID.
--   
--   <a>$sel:environmentId:ListDeployments'</a>,
--   <a>listDeployments_environmentId</a> - The environment ID.
newListDeployments :: Text -> Text -> ListDeployments

-- | A token to start the list. Use this token to get the next set of
--   results.
listDeployments_nextToken :: Lens' ListDeployments (Maybe Text)

-- | The maximum number of items to return for this call. The call also
--   returns a token that you can specify in a subsequent call to get the
--   next set of results.
listDeployments_maxResults :: Lens' ListDeployments (Maybe Natural)

-- | The application ID.
listDeployments_applicationId :: Lens' ListDeployments Text

-- | The environment ID.
listDeployments_environmentId :: Lens' ListDeployments Text

-- | <i>See:</i> <a>newListDeploymentsResponse</a> smart constructor.
data ListDeploymentsResponse
ListDeploymentsResponse' :: Maybe [DeploymentSummary] -> Maybe Text -> Int -> ListDeploymentsResponse

-- | The elements from this collection.
[$sel:items:ListDeploymentsResponse'] :: ListDeploymentsResponse -> Maybe [DeploymentSummary]

-- | The token for the next set of items to return. Use this token to get
--   the next set of results.
[$sel:nextToken:ListDeploymentsResponse'] :: ListDeploymentsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListDeploymentsResponse'] :: ListDeploymentsResponse -> Int

-- | Create a value of <a>ListDeploymentsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:ListDeploymentsResponse'</a>,
--   <a>listDeploymentsResponse_items</a> - The elements from this
--   collection.
--   
--   <a>$sel:nextToken:ListDeployments'</a>,
--   <a>listDeploymentsResponse_nextToken</a> - The token for the next set
--   of items to return. Use this token to get the next set of results.
--   
--   <a>$sel:httpStatus:ListDeploymentsResponse'</a>,
--   <a>listDeploymentsResponse_httpStatus</a> - The response's http status
--   code.
newListDeploymentsResponse :: Int -> ListDeploymentsResponse

-- | The elements from this collection.
listDeploymentsResponse_items :: Lens' ListDeploymentsResponse (Maybe [DeploymentSummary])

-- | The token for the next set of items to return. Use this token to get
--   the next set of results.
listDeploymentsResponse_nextToken :: Lens' ListDeploymentsResponse (Maybe Text)

-- | The response's http status code.
listDeploymentsResponse_httpStatus :: Lens' ListDeploymentsResponse Int
instance GHC.Generics.Generic Amazonka.AppConfig.ListDeployments.ListDeployments
instance GHC.Show.Show Amazonka.AppConfig.ListDeployments.ListDeployments
instance GHC.Read.Read Amazonka.AppConfig.ListDeployments.ListDeployments
instance GHC.Classes.Eq Amazonka.AppConfig.ListDeployments.ListDeployments
instance GHC.Generics.Generic Amazonka.AppConfig.ListDeployments.ListDeploymentsResponse
instance GHC.Show.Show Amazonka.AppConfig.ListDeployments.ListDeploymentsResponse
instance GHC.Read.Read Amazonka.AppConfig.ListDeployments.ListDeploymentsResponse
instance GHC.Classes.Eq Amazonka.AppConfig.ListDeployments.ListDeploymentsResponse
instance Amazonka.Types.AWSRequest Amazonka.AppConfig.ListDeployments.ListDeployments
instance Control.DeepSeq.NFData Amazonka.AppConfig.ListDeployments.ListDeploymentsResponse
instance Data.Hashable.Class.Hashable Amazonka.AppConfig.ListDeployments.ListDeployments
instance Control.DeepSeq.NFData Amazonka.AppConfig.ListDeployments.ListDeployments
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppConfig.ListDeployments.ListDeployments
instance Amazonka.Data.Path.ToPath Amazonka.AppConfig.ListDeployments.ListDeployments
instance Amazonka.Data.Query.ToQuery Amazonka.AppConfig.ListDeployments.ListDeployments


-- | List deployment strategies.
module Amazonka.AppConfig.ListDeploymentStrategies

-- | <i>See:</i> <a>newListDeploymentStrategies</a> smart constructor.
data ListDeploymentStrategies
ListDeploymentStrategies' :: Maybe Text -> Maybe Natural -> ListDeploymentStrategies

-- | A token to start the list. Use this token to get the next set of
--   results.
[$sel:nextToken:ListDeploymentStrategies'] :: ListDeploymentStrategies -> Maybe Text

-- | The maximum number of items to return for this call. The call also
--   returns a token that you can specify in a subsequent call to get the
--   next set of results.
[$sel:maxResults:ListDeploymentStrategies'] :: ListDeploymentStrategies -> Maybe Natural

-- | Create a value of <a>ListDeploymentStrategies</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDeploymentStrategies'</a>,
--   <a>listDeploymentStrategies_nextToken</a> - A token to start the list.
--   Use this token to get the next set of results.
--   
--   <a>$sel:maxResults:ListDeploymentStrategies'</a>,
--   <a>listDeploymentStrategies_maxResults</a> - The maximum number of
--   items to return for this call. The call also returns a token that you
--   can specify in a subsequent call to get the next set of results.
newListDeploymentStrategies :: ListDeploymentStrategies

-- | A token to start the list. Use this token to get the next set of
--   results.
listDeploymentStrategies_nextToken :: Lens' ListDeploymentStrategies (Maybe Text)

-- | The maximum number of items to return for this call. The call also
--   returns a token that you can specify in a subsequent call to get the
--   next set of results.
listDeploymentStrategies_maxResults :: Lens' ListDeploymentStrategies (Maybe Natural)

-- | <i>See:</i> <a>newListDeploymentStrategiesResponse</a> smart
--   constructor.
data ListDeploymentStrategiesResponse
ListDeploymentStrategiesResponse' :: Maybe [DeploymentStrategy] -> Maybe Text -> Int -> ListDeploymentStrategiesResponse

-- | The elements from this collection.
[$sel:items:ListDeploymentStrategiesResponse'] :: ListDeploymentStrategiesResponse -> Maybe [DeploymentStrategy]

-- | The token for the next set of items to return. Use this token to get
--   the next set of results.
[$sel:nextToken:ListDeploymentStrategiesResponse'] :: ListDeploymentStrategiesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListDeploymentStrategiesResponse'] :: ListDeploymentStrategiesResponse -> Int

-- | Create a value of <a>ListDeploymentStrategiesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:ListDeploymentStrategiesResponse'</a>,
--   <a>listDeploymentStrategiesResponse_items</a> - The elements from this
--   collection.
--   
--   <a>$sel:nextToken:ListDeploymentStrategies'</a>,
--   <a>listDeploymentStrategiesResponse_nextToken</a> - The token for the
--   next set of items to return. Use this token to get the next set of
--   results.
--   
--   <a>$sel:httpStatus:ListDeploymentStrategiesResponse'</a>,
--   <a>listDeploymentStrategiesResponse_httpStatus</a> - The response's
--   http status code.
newListDeploymentStrategiesResponse :: Int -> ListDeploymentStrategiesResponse

-- | The elements from this collection.
listDeploymentStrategiesResponse_items :: Lens' ListDeploymentStrategiesResponse (Maybe [DeploymentStrategy])

-- | The token for the next set of items to return. Use this token to get
--   the next set of results.
listDeploymentStrategiesResponse_nextToken :: Lens' ListDeploymentStrategiesResponse (Maybe Text)

-- | The response's http status code.
listDeploymentStrategiesResponse_httpStatus :: Lens' ListDeploymentStrategiesResponse Int
instance GHC.Generics.Generic Amazonka.AppConfig.ListDeploymentStrategies.ListDeploymentStrategies
instance GHC.Show.Show Amazonka.AppConfig.ListDeploymentStrategies.ListDeploymentStrategies
instance GHC.Read.Read Amazonka.AppConfig.ListDeploymentStrategies.ListDeploymentStrategies
instance GHC.Classes.Eq Amazonka.AppConfig.ListDeploymentStrategies.ListDeploymentStrategies
instance GHC.Generics.Generic Amazonka.AppConfig.ListDeploymentStrategies.ListDeploymentStrategiesResponse
instance GHC.Show.Show Amazonka.AppConfig.ListDeploymentStrategies.ListDeploymentStrategiesResponse
instance GHC.Read.Read Amazonka.AppConfig.ListDeploymentStrategies.ListDeploymentStrategiesResponse
instance GHC.Classes.Eq Amazonka.AppConfig.ListDeploymentStrategies.ListDeploymentStrategiesResponse
instance Amazonka.Types.AWSRequest Amazonka.AppConfig.ListDeploymentStrategies.ListDeploymentStrategies
instance Control.DeepSeq.NFData Amazonka.AppConfig.ListDeploymentStrategies.ListDeploymentStrategiesResponse
instance Data.Hashable.Class.Hashable Amazonka.AppConfig.ListDeploymentStrategies.ListDeploymentStrategies
instance Control.DeepSeq.NFData Amazonka.AppConfig.ListDeploymentStrategies.ListDeploymentStrategies
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppConfig.ListDeploymentStrategies.ListDeploymentStrategies
instance Amazonka.Data.Path.ToPath Amazonka.AppConfig.ListDeploymentStrategies.ListDeploymentStrategies
instance Amazonka.Data.Query.ToQuery Amazonka.AppConfig.ListDeploymentStrategies.ListDeploymentStrategies


-- | Lists the configuration profiles for an application.
module Amazonka.AppConfig.ListConfigurationProfiles

-- | <i>See:</i> <a>newListConfigurationProfiles</a> smart constructor.
data ListConfigurationProfiles
ListConfigurationProfiles' :: Maybe Text -> Maybe Natural -> Text -> ListConfigurationProfiles

-- | A token to start the list. Use this token to get the next set of
--   results.
[$sel:nextToken:ListConfigurationProfiles'] :: ListConfigurationProfiles -> Maybe Text

-- | The maximum number of items to return for this call. The call also
--   returns a token that you can specify in a subsequent call to get the
--   next set of results.
[$sel:maxResults:ListConfigurationProfiles'] :: ListConfigurationProfiles -> Maybe Natural

-- | The application ID.
[$sel:applicationId:ListConfigurationProfiles'] :: ListConfigurationProfiles -> Text

-- | Create a value of <a>ListConfigurationProfiles</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListConfigurationProfiles'</a>,
--   <a>listConfigurationProfiles_nextToken</a> - A token to start the
--   list. Use this token to get the next set of results.
--   
--   <a>$sel:maxResults:ListConfigurationProfiles'</a>,
--   <a>listConfigurationProfiles_maxResults</a> - The maximum number of
--   items to return for this call. The call also returns a token that you
--   can specify in a subsequent call to get the next set of results.
--   
--   <a>$sel:applicationId:ListConfigurationProfiles'</a>,
--   <a>listConfigurationProfiles_applicationId</a> - The application ID.
newListConfigurationProfiles :: Text -> ListConfigurationProfiles

-- | A token to start the list. Use this token to get the next set of
--   results.
listConfigurationProfiles_nextToken :: Lens' ListConfigurationProfiles (Maybe Text)

-- | The maximum number of items to return for this call. The call also
--   returns a token that you can specify in a subsequent call to get the
--   next set of results.
listConfigurationProfiles_maxResults :: Lens' ListConfigurationProfiles (Maybe Natural)

-- | The application ID.
listConfigurationProfiles_applicationId :: Lens' ListConfigurationProfiles Text

-- | <i>See:</i> <a>newListConfigurationProfilesResponse</a> smart
--   constructor.
data ListConfigurationProfilesResponse
ListConfigurationProfilesResponse' :: Maybe [ConfigurationProfileSummary] -> Maybe Text -> Int -> ListConfigurationProfilesResponse

-- | The elements from this collection.
[$sel:items:ListConfigurationProfilesResponse'] :: ListConfigurationProfilesResponse -> Maybe [ConfigurationProfileSummary]

-- | The token for the next set of items to return. Use this token to get
--   the next set of results.
[$sel:nextToken:ListConfigurationProfilesResponse'] :: ListConfigurationProfilesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListConfigurationProfilesResponse'] :: ListConfigurationProfilesResponse -> Int

-- | Create a value of <a>ListConfigurationProfilesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:ListConfigurationProfilesResponse'</a>,
--   <a>listConfigurationProfilesResponse_items</a> - The elements from
--   this collection.
--   
--   <a>$sel:nextToken:ListConfigurationProfiles'</a>,
--   <a>listConfigurationProfilesResponse_nextToken</a> - The token for the
--   next set of items to return. Use this token to get the next set of
--   results.
--   
--   <a>$sel:httpStatus:ListConfigurationProfilesResponse'</a>,
--   <a>listConfigurationProfilesResponse_httpStatus</a> - The response's
--   http status code.
newListConfigurationProfilesResponse :: Int -> ListConfigurationProfilesResponse

-- | The elements from this collection.
listConfigurationProfilesResponse_items :: Lens' ListConfigurationProfilesResponse (Maybe [ConfigurationProfileSummary])

-- | The token for the next set of items to return. Use this token to get
--   the next set of results.
listConfigurationProfilesResponse_nextToken :: Lens' ListConfigurationProfilesResponse (Maybe Text)

-- | The response's http status code.
listConfigurationProfilesResponse_httpStatus :: Lens' ListConfigurationProfilesResponse Int
instance GHC.Generics.Generic Amazonka.AppConfig.ListConfigurationProfiles.ListConfigurationProfiles
instance GHC.Show.Show Amazonka.AppConfig.ListConfigurationProfiles.ListConfigurationProfiles
instance GHC.Read.Read Amazonka.AppConfig.ListConfigurationProfiles.ListConfigurationProfiles
instance GHC.Classes.Eq Amazonka.AppConfig.ListConfigurationProfiles.ListConfigurationProfiles
instance GHC.Generics.Generic Amazonka.AppConfig.ListConfigurationProfiles.ListConfigurationProfilesResponse
instance GHC.Show.Show Amazonka.AppConfig.ListConfigurationProfiles.ListConfigurationProfilesResponse
instance GHC.Read.Read Amazonka.AppConfig.ListConfigurationProfiles.ListConfigurationProfilesResponse
instance GHC.Classes.Eq Amazonka.AppConfig.ListConfigurationProfiles.ListConfigurationProfilesResponse
instance Amazonka.Types.AWSRequest Amazonka.AppConfig.ListConfigurationProfiles.ListConfigurationProfiles
instance Control.DeepSeq.NFData Amazonka.AppConfig.ListConfigurationProfiles.ListConfigurationProfilesResponse
instance Data.Hashable.Class.Hashable Amazonka.AppConfig.ListConfigurationProfiles.ListConfigurationProfiles
instance Control.DeepSeq.NFData Amazonka.AppConfig.ListConfigurationProfiles.ListConfigurationProfiles
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppConfig.ListConfigurationProfiles.ListConfigurationProfiles
instance Amazonka.Data.Path.ToPath Amazonka.AppConfig.ListConfigurationProfiles.ListConfigurationProfiles
instance Amazonka.Data.Query.ToQuery Amazonka.AppConfig.ListConfigurationProfiles.ListConfigurationProfiles


-- | List all applications in your AWS account.
module Amazonka.AppConfig.ListApplications

-- | <i>See:</i> <a>newListApplications</a> smart constructor.
data ListApplications
ListApplications' :: Maybe Text -> Maybe Natural -> ListApplications

-- | A token to start the list. Use this token to get the next set of
--   results.
[$sel:nextToken:ListApplications'] :: ListApplications -> Maybe Text

-- | The maximum number of items to return for this call. The call also
--   returns a token that you can specify in a subsequent call to get the
--   next set of results.
[$sel:maxResults:ListApplications'] :: ListApplications -> Maybe Natural

-- | Create a value of <a>ListApplications</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListApplications'</a>,
--   <a>listApplications_nextToken</a> - A token to start the list. Use
--   this token to get the next set of results.
--   
--   <a>$sel:maxResults:ListApplications'</a>,
--   <a>listApplications_maxResults</a> - The maximum number of items to
--   return for this call. The call also returns a token that you can
--   specify in a subsequent call to get the next set of results.
newListApplications :: ListApplications

-- | A token to start the list. Use this token to get the next set of
--   results.
listApplications_nextToken :: Lens' ListApplications (Maybe Text)

-- | The maximum number of items to return for this call. The call also
--   returns a token that you can specify in a subsequent call to get the
--   next set of results.
listApplications_maxResults :: Lens' ListApplications (Maybe Natural)

-- | <i>See:</i> <a>newListApplicationsResponse</a> smart constructor.
data ListApplicationsResponse
ListApplicationsResponse' :: Maybe [Application] -> Maybe Text -> Int -> ListApplicationsResponse

-- | The elements from this collection.
[$sel:items:ListApplicationsResponse'] :: ListApplicationsResponse -> Maybe [Application]

-- | The token for the next set of items to return. Use this token to get
--   the next set of results.
[$sel:nextToken:ListApplicationsResponse'] :: ListApplicationsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListApplicationsResponse'] :: ListApplicationsResponse -> Int

-- | Create a value of <a>ListApplicationsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:ListApplicationsResponse'</a>,
--   <a>listApplicationsResponse_items</a> - The elements from this
--   collection.
--   
--   <a>$sel:nextToken:ListApplications'</a>,
--   <a>listApplicationsResponse_nextToken</a> - The token for the next set
--   of items to return. Use this token to get the next set of results.
--   
--   <a>$sel:httpStatus:ListApplicationsResponse'</a>,
--   <a>listApplicationsResponse_httpStatus</a> - The response's http
--   status code.
newListApplicationsResponse :: Int -> ListApplicationsResponse

-- | The elements from this collection.
listApplicationsResponse_items :: Lens' ListApplicationsResponse (Maybe [Application])

-- | The token for the next set of items to return. Use this token to get
--   the next set of results.
listApplicationsResponse_nextToken :: Lens' ListApplicationsResponse (Maybe Text)

-- | The response's http status code.
listApplicationsResponse_httpStatus :: Lens' ListApplicationsResponse Int
instance GHC.Generics.Generic Amazonka.AppConfig.ListApplications.ListApplications
instance GHC.Show.Show Amazonka.AppConfig.ListApplications.ListApplications
instance GHC.Read.Read Amazonka.AppConfig.ListApplications.ListApplications
instance GHC.Classes.Eq Amazonka.AppConfig.ListApplications.ListApplications
instance GHC.Generics.Generic Amazonka.AppConfig.ListApplications.ListApplicationsResponse
instance GHC.Show.Show Amazonka.AppConfig.ListApplications.ListApplicationsResponse
instance GHC.Read.Read Amazonka.AppConfig.ListApplications.ListApplicationsResponse
instance GHC.Classes.Eq Amazonka.AppConfig.ListApplications.ListApplicationsResponse
instance Amazonka.Types.AWSRequest Amazonka.AppConfig.ListApplications.ListApplications
instance Control.DeepSeq.NFData Amazonka.AppConfig.ListApplications.ListApplicationsResponse
instance Data.Hashable.Class.Hashable Amazonka.AppConfig.ListApplications.ListApplications
instance Control.DeepSeq.NFData Amazonka.AppConfig.ListApplications.ListApplications
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppConfig.ListApplications.ListApplications
instance Amazonka.Data.Path.ToPath Amazonka.AppConfig.ListApplications.ListApplications
instance Amazonka.Data.Query.ToQuery Amazonka.AppConfig.ListApplications.ListApplications


-- | Get information about a specific configuration version.
module Amazonka.AppConfig.GetHostedConfigurationVersion

-- | <i>See:</i> <a>newGetHostedConfigurationVersion</a> smart constructor.
data GetHostedConfigurationVersion
GetHostedConfigurationVersion' :: Text -> Text -> Int -> GetHostedConfigurationVersion

-- | The application ID.
[$sel:applicationId:GetHostedConfigurationVersion'] :: GetHostedConfigurationVersion -> Text

-- | The configuration profile ID.
[$sel:configurationProfileId:GetHostedConfigurationVersion'] :: GetHostedConfigurationVersion -> Text

-- | The version.
[$sel:versionNumber:GetHostedConfigurationVersion'] :: GetHostedConfigurationVersion -> Int

-- | Create a value of <a>GetHostedConfigurationVersion</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationId:GetHostedConfigurationVersion'</a>,
--   <a>getHostedConfigurationVersion_applicationId</a> - The application
--   ID.
--   
--   <a>$sel:configurationProfileId:GetHostedConfigurationVersion'</a>,
--   <a>getHostedConfigurationVersion_configurationProfileId</a> - The
--   configuration profile ID.
--   
--   <a>$sel:versionNumber:GetHostedConfigurationVersion'</a>,
--   <a>getHostedConfigurationVersion_versionNumber</a> - The version.
newGetHostedConfigurationVersion :: Text -> Text -> Int -> GetHostedConfigurationVersion

-- | The application ID.
getHostedConfigurationVersion_applicationId :: Lens' GetHostedConfigurationVersion Text

-- | The configuration profile ID.
getHostedConfigurationVersion_configurationProfileId :: Lens' GetHostedConfigurationVersion Text

-- | The version.
getHostedConfigurationVersion_versionNumber :: Lens' GetHostedConfigurationVersion Int

-- | <i>See:</i> <a>newHostedConfigurationVersion</a> smart constructor.
data HostedConfigurationVersion
HostedConfigurationVersion' :: Maybe (Sensitive ByteString) -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> HostedConfigurationVersion

-- | The content of the configuration or the configuration data.
[$sel:content:HostedConfigurationVersion'] :: HostedConfigurationVersion -> Maybe (Sensitive ByteString)

-- | The configuration version.
[$sel:versionNumber:HostedConfigurationVersion'] :: HostedConfigurationVersion -> Maybe Int

-- | The application ID.
[$sel:applicationId:HostedConfigurationVersion'] :: HostedConfigurationVersion -> Maybe Text

-- | A description of the configuration.
[$sel:description:HostedConfigurationVersion'] :: HostedConfigurationVersion -> Maybe Text

-- | The configuration profile ID.
[$sel:configurationProfileId:HostedConfigurationVersion'] :: HostedConfigurationVersion -> Maybe Text

-- | A standard MIME type describing the format of the configuration
--   content. For more information, see <a>Content-Type</a>.
[$sel:contentType:HostedConfigurationVersion'] :: HostedConfigurationVersion -> Maybe Text

-- | Create a value of <a>HostedConfigurationVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:content:HostedConfigurationVersion'</a>,
--   <a>hostedConfigurationVersion_content</a> - The content of the
--   configuration or the configuration data.
--   
--   <a>$sel:versionNumber:HostedConfigurationVersion'</a>,
--   <a>hostedConfigurationVersion_versionNumber</a> - The configuration
--   version.
--   
--   <a>$sel:applicationId:HostedConfigurationVersion'</a>,
--   <a>hostedConfigurationVersion_applicationId</a> - The application ID.
--   
--   <a>$sel:description:HostedConfigurationVersion'</a>,
--   <a>hostedConfigurationVersion_description</a> - A description of the
--   configuration.
--   
--   <a>$sel:configurationProfileId:HostedConfigurationVersion'</a>,
--   <a>hostedConfigurationVersion_configurationProfileId</a> - The
--   configuration profile ID.
--   
--   <a>$sel:contentType:HostedConfigurationVersion'</a>,
--   <a>hostedConfigurationVersion_contentType</a> - A standard MIME type
--   describing the format of the configuration content. For more
--   information, see <a>Content-Type</a>.
newHostedConfigurationVersion :: HostedConfigurationVersion

-- | The content of the configuration or the configuration data.
hostedConfigurationVersion_content :: Lens' HostedConfigurationVersion (Maybe ByteString)

-- | The configuration version.
hostedConfigurationVersion_versionNumber :: Lens' HostedConfigurationVersion (Maybe Int)

-- | The application ID.
hostedConfigurationVersion_applicationId :: Lens' HostedConfigurationVersion (Maybe Text)

-- | A description of the configuration.
hostedConfigurationVersion_description :: Lens' HostedConfigurationVersion (Maybe Text)

-- | The configuration profile ID.
hostedConfigurationVersion_configurationProfileId :: Lens' HostedConfigurationVersion (Maybe Text)

-- | A standard MIME type describing the format of the configuration
--   content. For more information, see <a>Content-Type</a>.
hostedConfigurationVersion_contentType :: Lens' HostedConfigurationVersion (Maybe Text)
instance GHC.Generics.Generic Amazonka.AppConfig.GetHostedConfigurationVersion.GetHostedConfigurationVersion
instance GHC.Show.Show Amazonka.AppConfig.GetHostedConfigurationVersion.GetHostedConfigurationVersion
instance GHC.Read.Read Amazonka.AppConfig.GetHostedConfigurationVersion.GetHostedConfigurationVersion
instance GHC.Classes.Eq Amazonka.AppConfig.GetHostedConfigurationVersion.GetHostedConfigurationVersion
instance Amazonka.Types.AWSRequest Amazonka.AppConfig.GetHostedConfigurationVersion.GetHostedConfigurationVersion
instance Data.Hashable.Class.Hashable Amazonka.AppConfig.GetHostedConfigurationVersion.GetHostedConfigurationVersion
instance Control.DeepSeq.NFData Amazonka.AppConfig.GetHostedConfigurationVersion.GetHostedConfigurationVersion
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppConfig.GetHostedConfigurationVersion.GetHostedConfigurationVersion
instance Amazonka.Data.Path.ToPath Amazonka.AppConfig.GetHostedConfigurationVersion.GetHostedConfigurationVersion
instance Amazonka.Data.Query.ToQuery Amazonka.AppConfig.GetHostedConfigurationVersion.GetHostedConfigurationVersion


-- | Retrieve information about an environment. An environment is a logical
--   deployment group of AppConfig applications, such as applications in a
--   <tt>Production</tt> environment or in an <tt>EU_Region</tt>
--   environment. Each configuration deployment targets an environment. You
--   can enable one or more Amazon CloudWatch alarms for an environment. If
--   an alarm is triggered during a deployment, AppConfig roles back the
--   configuration.
module Amazonka.AppConfig.GetEnvironment

-- | <i>See:</i> <a>newGetEnvironment</a> smart constructor.
data GetEnvironment
GetEnvironment' :: Text -> Text -> GetEnvironment

-- | The ID of the application that includes the environment you want to
--   get.
[$sel:applicationId:GetEnvironment'] :: GetEnvironment -> Text

-- | The ID of the environment you wnat to get.
[$sel:environmentId:GetEnvironment'] :: GetEnvironment -> Text

-- | Create a value of <a>GetEnvironment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationId:GetEnvironment'</a>,
--   <a>getEnvironment_applicationId</a> - The ID of the application that
--   includes the environment you want to get.
--   
--   <a>$sel:environmentId:GetEnvironment'</a>,
--   <a>getEnvironment_environmentId</a> - The ID of the environment you
--   wnat to get.
newGetEnvironment :: Text -> Text -> GetEnvironment

-- | The ID of the application that includes the environment you want to
--   get.
getEnvironment_applicationId :: Lens' GetEnvironment Text

-- | The ID of the environment you wnat to get.
getEnvironment_environmentId :: Lens' GetEnvironment Text

-- | <i>See:</i> <a>newEnvironment</a> smart constructor.
data Environment
Environment' :: Maybe EnvironmentState -> Maybe [Monitor] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Environment

-- | The state of the environment. An environment can be in one of the
--   following states: <tt>READY_FOR_DEPLOYMENT</tt>, <tt>DEPLOYING</tt>,
--   <tt>ROLLING_BACK</tt>, or <tt>ROLLED_BACK</tt>
[$sel:state:Environment'] :: Environment -> Maybe EnvironmentState

-- | Amazon CloudWatch alarms monitored during the deployment.
[$sel:monitors:Environment'] :: Environment -> Maybe [Monitor]

-- | The application ID.
[$sel:applicationId:Environment'] :: Environment -> Maybe Text

-- | The name of the environment.
[$sel:name:Environment'] :: Environment -> Maybe Text

-- | The environment ID.
[$sel:id:Environment'] :: Environment -> Maybe Text

-- | The description of the environment.
[$sel:description:Environment'] :: Environment -> Maybe Text

-- | Create a value of <a>Environment</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:Environment'</a>, <a>environment_state</a> - The state
--   of the environment. An environment can be in one of the following
--   states: <tt>READY_FOR_DEPLOYMENT</tt>, <tt>DEPLOYING</tt>,
--   <tt>ROLLING_BACK</tt>, or <tt>ROLLED_BACK</tt>
--   
--   <a>$sel:monitors:Environment'</a>, <a>environment_monitors</a> -
--   Amazon CloudWatch alarms monitored during the deployment.
--   
--   <a>$sel:applicationId:Environment'</a>,
--   <a>environment_applicationId</a> - The application ID.
--   
--   <a>$sel:name:Environment'</a>, <a>environment_name</a> - The name of
--   the environment.
--   
--   <a>$sel:id:Environment'</a>, <a>environment_id</a> - The environment
--   ID.
--   
--   <a>$sel:description:Environment'</a>, <a>environment_description</a> -
--   The description of the environment.
newEnvironment :: Environment

-- | The state of the environment. An environment can be in one of the
--   following states: <tt>READY_FOR_DEPLOYMENT</tt>, <tt>DEPLOYING</tt>,
--   <tt>ROLLING_BACK</tt>, or <tt>ROLLED_BACK</tt>
environment_state :: Lens' Environment (Maybe EnvironmentState)

-- | Amazon CloudWatch alarms monitored during the deployment.
environment_monitors :: Lens' Environment (Maybe [Monitor])

-- | The application ID.
environment_applicationId :: Lens' Environment (Maybe Text)

-- | The name of the environment.
environment_name :: Lens' Environment (Maybe Text)

-- | The environment ID.
environment_id :: Lens' Environment (Maybe Text)

-- | The description of the environment.
environment_description :: Lens' Environment (Maybe Text)
instance GHC.Generics.Generic Amazonka.AppConfig.GetEnvironment.GetEnvironment
instance GHC.Show.Show Amazonka.AppConfig.GetEnvironment.GetEnvironment
instance GHC.Read.Read Amazonka.AppConfig.GetEnvironment.GetEnvironment
instance GHC.Classes.Eq Amazonka.AppConfig.GetEnvironment.GetEnvironment
instance Amazonka.Types.AWSRequest Amazonka.AppConfig.GetEnvironment.GetEnvironment
instance Data.Hashable.Class.Hashable Amazonka.AppConfig.GetEnvironment.GetEnvironment
instance Control.DeepSeq.NFData Amazonka.AppConfig.GetEnvironment.GetEnvironment
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppConfig.GetEnvironment.GetEnvironment
instance Amazonka.Data.Path.ToPath Amazonka.AppConfig.GetEnvironment.GetEnvironment
instance Amazonka.Data.Query.ToQuery Amazonka.AppConfig.GetEnvironment.GetEnvironment


-- | Retrieve information about a deployment strategy. A deployment
--   strategy defines important criteria for rolling out your configuration
--   to the designated targets. A deployment strategy includes: the overall
--   duration required, a percentage of targets to receive the deployment
--   during each interval, an algorithm that defines how percentage grows,
--   and bake time.
module Amazonka.AppConfig.GetDeploymentStrategy

-- | <i>See:</i> <a>newGetDeploymentStrategy</a> smart constructor.
data GetDeploymentStrategy
GetDeploymentStrategy' :: Text -> GetDeploymentStrategy

-- | The ID of the deployment strategy to get.
[$sel:deploymentStrategyId:GetDeploymentStrategy'] :: GetDeploymentStrategy -> Text

-- | Create a value of <a>GetDeploymentStrategy</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentStrategyId:GetDeploymentStrategy'</a>,
--   <a>getDeploymentStrategy_deploymentStrategyId</a> - The ID of the
--   deployment strategy to get.
newGetDeploymentStrategy :: Text -> GetDeploymentStrategy

-- | The ID of the deployment strategy to get.
getDeploymentStrategy_deploymentStrategyId :: Lens' GetDeploymentStrategy Text

-- | <i>See:</i> <a>newDeploymentStrategy</a> smart constructor.
data DeploymentStrategy
DeploymentStrategy' :: Maybe Double -> Maybe ReplicateTo -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Natural -> Maybe Text -> Maybe GrowthType -> DeploymentStrategy

-- | The percentage of targets that received a deployed configuration
--   during each interval.
[$sel:growthFactor:DeploymentStrategy'] :: DeploymentStrategy -> Maybe Double

-- | Save the deployment strategy to a Systems Manager (SSM) document.
[$sel:replicateTo:DeploymentStrategy'] :: DeploymentStrategy -> Maybe ReplicateTo

-- | The name of the deployment strategy.
[$sel:name:DeploymentStrategy'] :: DeploymentStrategy -> Maybe Text

-- | The deployment strategy ID.
[$sel:id:DeploymentStrategy'] :: DeploymentStrategy -> Maybe Text

-- | Total amount of time the deployment lasted.
[$sel:deploymentDurationInMinutes:DeploymentStrategy'] :: DeploymentStrategy -> Maybe Natural

-- | The amount of time AppConfig monitored for alarms before considering
--   the deployment to be complete and no longer eligible for automatic
--   roll back.
[$sel:finalBakeTimeInMinutes:DeploymentStrategy'] :: DeploymentStrategy -> Maybe Natural

-- | The description of the deployment strategy.
[$sel:description:DeploymentStrategy'] :: DeploymentStrategy -> Maybe Text

-- | The algorithm used to define how percentage grew over time.
[$sel:growthType:DeploymentStrategy'] :: DeploymentStrategy -> Maybe GrowthType

-- | Create a value of <a>DeploymentStrategy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:growthFactor:DeploymentStrategy'</a>,
--   <a>deploymentStrategy_growthFactor</a> - The percentage of targets
--   that received a deployed configuration during each interval.
--   
--   <a>$sel:replicateTo:DeploymentStrategy'</a>,
--   <a>deploymentStrategy_replicateTo</a> - Save the deployment strategy
--   to a Systems Manager (SSM) document.
--   
--   <a>$sel:name:DeploymentStrategy'</a>, <a>deploymentStrategy_name</a> -
--   The name of the deployment strategy.
--   
--   <a>$sel:id:DeploymentStrategy'</a>, <a>deploymentStrategy_id</a> - The
--   deployment strategy ID.
--   
--   <a>$sel:deploymentDurationInMinutes:DeploymentStrategy'</a>,
--   <a>deploymentStrategy_deploymentDurationInMinutes</a> - Total amount
--   of time the deployment lasted.
--   
--   <a>$sel:finalBakeTimeInMinutes:DeploymentStrategy'</a>,
--   <a>deploymentStrategy_finalBakeTimeInMinutes</a> - The amount of time
--   AppConfig monitored for alarms before considering the deployment to be
--   complete and no longer eligible for automatic roll back.
--   
--   <a>$sel:description:DeploymentStrategy'</a>,
--   <a>deploymentStrategy_description</a> - The description of the
--   deployment strategy.
--   
--   <a>$sel:growthType:DeploymentStrategy'</a>,
--   <a>deploymentStrategy_growthType</a> - The algorithm used to define
--   how percentage grew over time.
newDeploymentStrategy :: DeploymentStrategy

-- | The percentage of targets that received a deployed configuration
--   during each interval.
deploymentStrategy_growthFactor :: Lens' DeploymentStrategy (Maybe Double)

-- | Save the deployment strategy to a Systems Manager (SSM) document.
deploymentStrategy_replicateTo :: Lens' DeploymentStrategy (Maybe ReplicateTo)

-- | The name of the deployment strategy.
deploymentStrategy_name :: Lens' DeploymentStrategy (Maybe Text)

-- | The deployment strategy ID.
deploymentStrategy_id :: Lens' DeploymentStrategy (Maybe Text)

-- | Total amount of time the deployment lasted.
deploymentStrategy_deploymentDurationInMinutes :: Lens' DeploymentStrategy (Maybe Natural)

-- | The amount of time AppConfig monitored for alarms before considering
--   the deployment to be complete and no longer eligible for automatic
--   roll back.
deploymentStrategy_finalBakeTimeInMinutes :: Lens' DeploymentStrategy (Maybe Natural)

-- | The description of the deployment strategy.
deploymentStrategy_description :: Lens' DeploymentStrategy (Maybe Text)

-- | The algorithm used to define how percentage grew over time.
deploymentStrategy_growthType :: Lens' DeploymentStrategy (Maybe GrowthType)
instance GHC.Generics.Generic Amazonka.AppConfig.GetDeploymentStrategy.GetDeploymentStrategy
instance GHC.Show.Show Amazonka.AppConfig.GetDeploymentStrategy.GetDeploymentStrategy
instance GHC.Read.Read Amazonka.AppConfig.GetDeploymentStrategy.GetDeploymentStrategy
instance GHC.Classes.Eq Amazonka.AppConfig.GetDeploymentStrategy.GetDeploymentStrategy
instance Amazonka.Types.AWSRequest Amazonka.AppConfig.GetDeploymentStrategy.GetDeploymentStrategy
instance Data.Hashable.Class.Hashable Amazonka.AppConfig.GetDeploymentStrategy.GetDeploymentStrategy
instance Control.DeepSeq.NFData Amazonka.AppConfig.GetDeploymentStrategy.GetDeploymentStrategy
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppConfig.GetDeploymentStrategy.GetDeploymentStrategy
instance Amazonka.Data.Path.ToPath Amazonka.AppConfig.GetDeploymentStrategy.GetDeploymentStrategy
instance Amazonka.Data.Query.ToQuery Amazonka.AppConfig.GetDeploymentStrategy.GetDeploymentStrategy


-- | Retrieve information about a configuration deployment.
module Amazonka.AppConfig.GetDeployment

-- | <i>See:</i> <a>newGetDeployment</a> smart constructor.
data GetDeployment
GetDeployment' :: Text -> Text -> Int -> GetDeployment

-- | The ID of the application that includes the deployment you want to
--   get.
[$sel:applicationId:GetDeployment'] :: GetDeployment -> Text

-- | The ID of the environment that includes the deployment you want to
--   get.
[$sel:environmentId:GetDeployment'] :: GetDeployment -> Text

-- | The sequence number of the deployment.
[$sel:deploymentNumber:GetDeployment'] :: GetDeployment -> Int

-- | Create a value of <a>GetDeployment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationId:GetDeployment'</a>,
--   <a>getDeployment_applicationId</a> - The ID of the application that
--   includes the deployment you want to get.
--   
--   <a>$sel:environmentId:GetDeployment'</a>,
--   <a>getDeployment_environmentId</a> - The ID of the environment that
--   includes the deployment you want to get.
--   
--   <a>$sel:deploymentNumber:GetDeployment'</a>,
--   <a>getDeployment_deploymentNumber</a> - The sequence number of the
--   deployment.
newGetDeployment :: Text -> Text -> Int -> GetDeployment

-- | The ID of the application that includes the deployment you want to
--   get.
getDeployment_applicationId :: Lens' GetDeployment Text

-- | The ID of the environment that includes the deployment you want to
--   get.
getDeployment_environmentId :: Lens' GetDeployment Text

-- | The sequence number of the deployment.
getDeployment_deploymentNumber :: Lens' GetDeployment Int

-- | <i>See:</i> <a>newDeployment</a> smart constructor.
data Deployment
Deployment' :: Maybe Double -> Maybe Text -> Maybe DeploymentState -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe [DeploymentEvent] -> Maybe Double -> Maybe POSIX -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe GrowthType -> Deployment

-- | The percentage of targets to receive a deployed configuration during
--   each interval.
[$sel:growthFactor:Deployment'] :: Deployment -> Maybe Double

-- | The name of the configuration.
[$sel:configurationName:Deployment'] :: Deployment -> Maybe Text

-- | The state of the deployment.
[$sel:state:Deployment'] :: Deployment -> Maybe DeploymentState

-- | The ID of the deployment strategy that was deployed.
[$sel:deploymentStrategyId:Deployment'] :: Deployment -> Maybe Text

-- | The sequence number of the deployment.
[$sel:deploymentNumber:Deployment'] :: Deployment -> Maybe Int

-- | The configuration version that was deployed.
[$sel:configurationVersion:Deployment'] :: Deployment -> Maybe Text

-- | A list containing all events related to a deployment. The most recent
--   events are displayed first.
[$sel:eventLog:Deployment'] :: Deployment -> Maybe [DeploymentEvent]

-- | The percentage of targets for which the deployment is available.
[$sel:percentageComplete:Deployment'] :: Deployment -> Maybe Double

-- | The time the deployment started.
[$sel:startedAt:Deployment'] :: Deployment -> Maybe POSIX

-- | The ID of the application that was deployed.
[$sel:applicationId:Deployment'] :: Deployment -> Maybe Text

-- | Total amount of time the deployment lasted.
[$sel:deploymentDurationInMinutes:Deployment'] :: Deployment -> Maybe Natural

-- | The ID of the environment that was deployed.
[$sel:environmentId:Deployment'] :: Deployment -> Maybe Text

-- | The time the deployment completed.
[$sel:completedAt:Deployment'] :: Deployment -> Maybe POSIX

-- | Information about the source location of the configuration.
[$sel:configurationLocationUri:Deployment'] :: Deployment -> Maybe Text

-- | The amount of time AppConfig monitored for alarms before considering
--   the deployment to be complete and no longer eligible for automatic
--   roll back.
[$sel:finalBakeTimeInMinutes:Deployment'] :: Deployment -> Maybe Natural

-- | The description of the deployment.
[$sel:description:Deployment'] :: Deployment -> Maybe Text

-- | The ID of the configuration profile that was deployed.
[$sel:configurationProfileId:Deployment'] :: Deployment -> Maybe Text

-- | The algorithm used to define how percentage grew over time.
[$sel:growthType:Deployment'] :: Deployment -> Maybe GrowthType

-- | Create a value of <a>Deployment</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:growthFactor:Deployment'</a>, <a>deployment_growthFactor</a> -
--   The percentage of targets to receive a deployed configuration during
--   each interval.
--   
--   <a>$sel:configurationName:Deployment'</a>,
--   <a>deployment_configurationName</a> - The name of the configuration.
--   
--   <a>$sel:state:Deployment'</a>, <a>deployment_state</a> - The state of
--   the deployment.
--   
--   <a>$sel:deploymentStrategyId:Deployment'</a>,
--   <a>deployment_deploymentStrategyId</a> - The ID of the deployment
--   strategy that was deployed.
--   
--   <a>$sel:deploymentNumber:Deployment'</a>,
--   <a>deployment_deploymentNumber</a> - The sequence number of the
--   deployment.
--   
--   <a>$sel:configurationVersion:Deployment'</a>,
--   <a>deployment_configurationVersion</a> - The configuration version
--   that was deployed.
--   
--   <a>$sel:eventLog:Deployment'</a>, <a>deployment_eventLog</a> - A list
--   containing all events related to a deployment. The most recent events
--   are displayed first.
--   
--   <a>$sel:percentageComplete:Deployment'</a>,
--   <a>deployment_percentageComplete</a> - The percentage of targets for
--   which the deployment is available.
--   
--   <a>$sel:startedAt:Deployment'</a>, <a>deployment_startedAt</a> - The
--   time the deployment started.
--   
--   <a>$sel:applicationId:Deployment'</a>, <a>deployment_applicationId</a>
--   - The ID of the application that was deployed.
--   
--   <a>$sel:deploymentDurationInMinutes:Deployment'</a>,
--   <a>deployment_deploymentDurationInMinutes</a> - Total amount of time
--   the deployment lasted.
--   
--   <a>$sel:environmentId:Deployment'</a>, <a>deployment_environmentId</a>
--   - The ID of the environment that was deployed.
--   
--   <a>$sel:completedAt:Deployment'</a>, <a>deployment_completedAt</a> -
--   The time the deployment completed.
--   
--   <a>$sel:configurationLocationUri:Deployment'</a>,
--   <a>deployment_configurationLocationUri</a> - Information about the
--   source location of the configuration.
--   
--   <a>$sel:finalBakeTimeInMinutes:Deployment'</a>,
--   <a>deployment_finalBakeTimeInMinutes</a> - The amount of time
--   AppConfig monitored for alarms before considering the deployment to be
--   complete and no longer eligible for automatic roll back.
--   
--   <a>$sel:description:Deployment'</a>, <a>deployment_description</a> -
--   The description of the deployment.
--   
--   <a>$sel:configurationProfileId:Deployment'</a>,
--   <a>deployment_configurationProfileId</a> - The ID of the configuration
--   profile that was deployed.
--   
--   <a>$sel:growthType:Deployment'</a>, <a>deployment_growthType</a> - The
--   algorithm used to define how percentage grew over time.
newDeployment :: Deployment

-- | The percentage of targets to receive a deployed configuration during
--   each interval.
deployment_growthFactor :: Lens' Deployment (Maybe Double)

-- | The name of the configuration.
deployment_configurationName :: Lens' Deployment (Maybe Text)

-- | The state of the deployment.
deployment_state :: Lens' Deployment (Maybe DeploymentState)

-- | The ID of the deployment strategy that was deployed.
deployment_deploymentStrategyId :: Lens' Deployment (Maybe Text)

-- | The sequence number of the deployment.
deployment_deploymentNumber :: Lens' Deployment (Maybe Int)

-- | The configuration version that was deployed.
deployment_configurationVersion :: Lens' Deployment (Maybe Text)

-- | A list containing all events related to a deployment. The most recent
--   events are displayed first.
deployment_eventLog :: Lens' Deployment (Maybe [DeploymentEvent])

-- | The percentage of targets for which the deployment is available.
deployment_percentageComplete :: Lens' Deployment (Maybe Double)

-- | The time the deployment started.
deployment_startedAt :: Lens' Deployment (Maybe UTCTime)

-- | The ID of the application that was deployed.
deployment_applicationId :: Lens' Deployment (Maybe Text)

-- | Total amount of time the deployment lasted.
deployment_deploymentDurationInMinutes :: Lens' Deployment (Maybe Natural)

-- | The ID of the environment that was deployed.
deployment_environmentId :: Lens' Deployment (Maybe Text)

-- | The time the deployment completed.
deployment_completedAt :: Lens' Deployment (Maybe UTCTime)

-- | Information about the source location of the configuration.
deployment_configurationLocationUri :: Lens' Deployment (Maybe Text)

-- | The amount of time AppConfig monitored for alarms before considering
--   the deployment to be complete and no longer eligible for automatic
--   roll back.
deployment_finalBakeTimeInMinutes :: Lens' Deployment (Maybe Natural)

-- | The description of the deployment.
deployment_description :: Lens' Deployment (Maybe Text)

-- | The ID of the configuration profile that was deployed.
deployment_configurationProfileId :: Lens' Deployment (Maybe Text)

-- | The algorithm used to define how percentage grew over time.
deployment_growthType :: Lens' Deployment (Maybe GrowthType)
instance GHC.Generics.Generic Amazonka.AppConfig.GetDeployment.GetDeployment
instance GHC.Show.Show Amazonka.AppConfig.GetDeployment.GetDeployment
instance GHC.Read.Read Amazonka.AppConfig.GetDeployment.GetDeployment
instance GHC.Classes.Eq Amazonka.AppConfig.GetDeployment.GetDeployment
instance Amazonka.Types.AWSRequest Amazonka.AppConfig.GetDeployment.GetDeployment
instance Data.Hashable.Class.Hashable Amazonka.AppConfig.GetDeployment.GetDeployment
instance Control.DeepSeq.NFData Amazonka.AppConfig.GetDeployment.GetDeployment
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppConfig.GetDeployment.GetDeployment
instance Amazonka.Data.Path.ToPath Amazonka.AppConfig.GetDeployment.GetDeployment
instance Amazonka.Data.Query.ToQuery Amazonka.AppConfig.GetDeployment.GetDeployment


-- | Retrieve information about a configuration profile.
module Amazonka.AppConfig.GetConfigurationProfile

-- | <i>See:</i> <a>newGetConfigurationProfile</a> smart constructor.
data GetConfigurationProfile
GetConfigurationProfile' :: Text -> Text -> GetConfigurationProfile

-- | The ID of the application that includes the configuration profile you
--   want to get.
[$sel:applicationId:GetConfigurationProfile'] :: GetConfigurationProfile -> Text

-- | The ID of the configuration profile you want to get.
[$sel:configurationProfileId:GetConfigurationProfile'] :: GetConfigurationProfile -> Text

-- | Create a value of <a>GetConfigurationProfile</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationId:GetConfigurationProfile'</a>,
--   <a>getConfigurationProfile_applicationId</a> - The ID of the
--   application that includes the configuration profile you want to get.
--   
--   <a>$sel:configurationProfileId:GetConfigurationProfile'</a>,
--   <a>getConfigurationProfile_configurationProfileId</a> - The ID of the
--   configuration profile you want to get.
newGetConfigurationProfile :: Text -> Text -> GetConfigurationProfile

-- | The ID of the application that includes the configuration profile you
--   want to get.
getConfigurationProfile_applicationId :: Lens' GetConfigurationProfile Text

-- | The ID of the configuration profile you want to get.
getConfigurationProfile_configurationProfileId :: Lens' GetConfigurationProfile Text

-- | <i>See:</i> <a>newConfigurationProfile</a> smart constructor.
data ConfigurationProfile
ConfigurationProfile' :: Maybe Text -> Maybe [Validator] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> ConfigurationProfile

-- | The ARN of an IAM role with permission to access the configuration at
--   the specified LocationUri.
[$sel:retrievalRoleArn:ConfigurationProfile'] :: ConfigurationProfile -> Maybe Text

-- | A list of methods for validating the configuration.
[$sel:validators:ConfigurationProfile'] :: ConfigurationProfile -> Maybe [Validator]

-- | The URI location of the configuration.
[$sel:locationUri:ConfigurationProfile'] :: ConfigurationProfile -> Maybe Text

-- | The application ID.
[$sel:applicationId:ConfigurationProfile'] :: ConfigurationProfile -> Maybe Text

-- | The name of the configuration profile.
[$sel:name:ConfigurationProfile'] :: ConfigurationProfile -> Maybe Text

-- | The configuration profile ID.
[$sel:id:ConfigurationProfile'] :: ConfigurationProfile -> Maybe Text

-- | The configuration profile description.
[$sel:description:ConfigurationProfile'] :: ConfigurationProfile -> Maybe Text

-- | Create a value of <a>ConfigurationProfile</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:retrievalRoleArn:ConfigurationProfile'</a>,
--   <a>configurationProfile_retrievalRoleArn</a> - The ARN of an IAM role
--   with permission to access the configuration at the specified
--   LocationUri.
--   
--   <a>$sel:validators:ConfigurationProfile'</a>,
--   <a>configurationProfile_validators</a> - A list of methods for
--   validating the configuration.
--   
--   <a>$sel:locationUri:ConfigurationProfile'</a>,
--   <a>configurationProfile_locationUri</a> - The URI location of the
--   configuration.
--   
--   <a>$sel:applicationId:ConfigurationProfile'</a>,
--   <a>configurationProfile_applicationId</a> - The application ID.
--   
--   <a>$sel:name:ConfigurationProfile'</a>,
--   <a>configurationProfile_name</a> - The name of the configuration
--   profile.
--   
--   <a>$sel:id:ConfigurationProfile'</a>, <a>configurationProfile_id</a> -
--   The configuration profile ID.
--   
--   <a>$sel:description:ConfigurationProfile'</a>,
--   <a>configurationProfile_description</a> - The configuration profile
--   description.
newConfigurationProfile :: ConfigurationProfile

-- | The ARN of an IAM role with permission to access the configuration at
--   the specified LocationUri.
configurationProfile_retrievalRoleArn :: Lens' ConfigurationProfile (Maybe Text)

-- | A list of methods for validating the configuration.
configurationProfile_validators :: Lens' ConfigurationProfile (Maybe [Validator])

-- | The URI location of the configuration.
configurationProfile_locationUri :: Lens' ConfigurationProfile (Maybe Text)

-- | The application ID.
configurationProfile_applicationId :: Lens' ConfigurationProfile (Maybe Text)

-- | The name of the configuration profile.
configurationProfile_name :: Lens' ConfigurationProfile (Maybe Text)

-- | The configuration profile ID.
configurationProfile_id :: Lens' ConfigurationProfile (Maybe Text)

-- | The configuration profile description.
configurationProfile_description :: Lens' ConfigurationProfile (Maybe Text)
instance GHC.Generics.Generic Amazonka.AppConfig.GetConfigurationProfile.GetConfigurationProfile
instance GHC.Show.Show Amazonka.AppConfig.GetConfigurationProfile.GetConfigurationProfile
instance GHC.Read.Read Amazonka.AppConfig.GetConfigurationProfile.GetConfigurationProfile
instance GHC.Classes.Eq Amazonka.AppConfig.GetConfigurationProfile.GetConfigurationProfile
instance Amazonka.Types.AWSRequest Amazonka.AppConfig.GetConfigurationProfile.GetConfigurationProfile
instance Data.Hashable.Class.Hashable Amazonka.AppConfig.GetConfigurationProfile.GetConfigurationProfile
instance Control.DeepSeq.NFData Amazonka.AppConfig.GetConfigurationProfile.GetConfigurationProfile
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppConfig.GetConfigurationProfile.GetConfigurationProfile
instance Amazonka.Data.Path.ToPath Amazonka.AppConfig.GetConfigurationProfile.GetConfigurationProfile
instance Amazonka.Data.Query.ToQuery Amazonka.AppConfig.GetConfigurationProfile.GetConfigurationProfile


-- | Receive information about a configuration.
--   
--   AWS AppConfig uses the value of the
--   <tt>ClientConfigurationVersion</tt> parameter to identify the
--   configuration version on your clients. If you don’t send
--   <tt>ClientConfigurationVersion</tt> with each call to
--   <tt>GetConfiguration</tt>, your clients receive the current
--   configuration. You are charged each time your clients receive a
--   configuration.
--   
--   To avoid excess charges, we recommend that you include the
--   <tt>ClientConfigurationVersion</tt> value with every call to
--   <tt>GetConfiguration</tt>. This value must be saved on your client.
--   Subsequent calls to <tt>GetConfiguration</tt> must pass this value by
--   using the <tt>ClientConfigurationVersion</tt> parameter.
module Amazonka.AppConfig.GetConfiguration

-- | <i>See:</i> <a>newGetConfiguration</a> smart constructor.
data GetConfiguration
GetConfiguration' :: Maybe Text -> Text -> Text -> Text -> Text -> GetConfiguration

-- | The configuration version returned in the most recent
--   <tt>GetConfiguration</tt> response.
--   
--   AWS AppConfig uses the value of the
--   <tt>ClientConfigurationVersion</tt> parameter to identify the
--   configuration version on your clients. If you don’t send
--   <tt>ClientConfigurationVersion</tt> with each call to
--   <tt>GetConfiguration</tt>, your clients receive the current
--   configuration. You are charged each time your clients receive a
--   configuration.
--   
--   To avoid excess charges, we recommend that you include the
--   <tt>ClientConfigurationVersion</tt> value with every call to
--   <tt>GetConfiguration</tt>. This value must be saved on your client.
--   Subsequent calls to <tt>GetConfiguration</tt> must pass this value by
--   using the <tt>ClientConfigurationVersion</tt> parameter.
--   
--   For more information about working with configurations, see
--   <a>Retrieving the Configuration</a> in the <i>AWS AppConfig User
--   Guide</i>.
[$sel:clientConfigurationVersion:GetConfiguration'] :: GetConfiguration -> Maybe Text

-- | The application to get. Specify either the application name or the
--   application ID.
[$sel:application:GetConfiguration'] :: GetConfiguration -> Text

-- | The environment to get. Specify either the environment name or the
--   environment ID.
[$sel:environment:GetConfiguration'] :: GetConfiguration -> Text

-- | The configuration to get. Specify either the configuration name or the
--   configuration ID.
[$sel:configuration:GetConfiguration'] :: GetConfiguration -> Text

-- | A unique ID to identify the client for the configuration. This ID
--   enables AppConfig to deploy the configuration in intervals, as defined
--   in the deployment strategy.
[$sel:clientId:GetConfiguration'] :: GetConfiguration -> Text

-- | Create a value of <a>GetConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientConfigurationVersion:GetConfiguration'</a>,
--   <a>getConfiguration_clientConfigurationVersion</a> - The configuration
--   version returned in the most recent <tt>GetConfiguration</tt>
--   response.
--   
--   AWS AppConfig uses the value of the
--   <tt>ClientConfigurationVersion</tt> parameter to identify the
--   configuration version on your clients. If you don’t send
--   <tt>ClientConfigurationVersion</tt> with each call to
--   <tt>GetConfiguration</tt>, your clients receive the current
--   configuration. You are charged each time your clients receive a
--   configuration.
--   
--   To avoid excess charges, we recommend that you include the
--   <tt>ClientConfigurationVersion</tt> value with every call to
--   <tt>GetConfiguration</tt>. This value must be saved on your client.
--   Subsequent calls to <tt>GetConfiguration</tt> must pass this value by
--   using the <tt>ClientConfigurationVersion</tt> parameter.
--   
--   For more information about working with configurations, see
--   <a>Retrieving the Configuration</a> in the <i>AWS AppConfig User
--   Guide</i>.
--   
--   <a>$sel:application:GetConfiguration'</a>,
--   <a>getConfiguration_application</a> - The application to get. Specify
--   either the application name or the application ID.
--   
--   <a>$sel:environment:GetConfiguration'</a>,
--   <a>getConfiguration_environment</a> - The environment to get. Specify
--   either the environment name or the environment ID.
--   
--   <a>$sel:configuration:GetConfiguration'</a>,
--   <a>getConfiguration_configuration</a> - The configuration to get.
--   Specify either the configuration name or the configuration ID.
--   
--   <a>$sel:clientId:GetConfiguration'</a>,
--   <a>getConfiguration_clientId</a> - A unique ID to identify the client
--   for the configuration. This ID enables AppConfig to deploy the
--   configuration in intervals, as defined in the deployment strategy.
newGetConfiguration :: Text -> Text -> Text -> Text -> GetConfiguration

-- | The configuration version returned in the most recent
--   <tt>GetConfiguration</tt> response.
--   
--   AWS AppConfig uses the value of the
--   <tt>ClientConfigurationVersion</tt> parameter to identify the
--   configuration version on your clients. If you don’t send
--   <tt>ClientConfigurationVersion</tt> with each call to
--   <tt>GetConfiguration</tt>, your clients receive the current
--   configuration. You are charged each time your clients receive a
--   configuration.
--   
--   To avoid excess charges, we recommend that you include the
--   <tt>ClientConfigurationVersion</tt> value with every call to
--   <tt>GetConfiguration</tt>. This value must be saved on your client.
--   Subsequent calls to <tt>GetConfiguration</tt> must pass this value by
--   using the <tt>ClientConfigurationVersion</tt> parameter.
--   
--   For more information about working with configurations, see
--   <a>Retrieving the Configuration</a> in the <i>AWS AppConfig User
--   Guide</i>.
getConfiguration_clientConfigurationVersion :: Lens' GetConfiguration (Maybe Text)

-- | The application to get. Specify either the application name or the
--   application ID.
getConfiguration_application :: Lens' GetConfiguration Text

-- | The environment to get. Specify either the environment name or the
--   environment ID.
getConfiguration_environment :: Lens' GetConfiguration Text

-- | The configuration to get. Specify either the configuration name or the
--   configuration ID.
getConfiguration_configuration :: Lens' GetConfiguration Text

-- | A unique ID to identify the client for the configuration. This ID
--   enables AppConfig to deploy the configuration in intervals, as defined
--   in the deployment strategy.
getConfiguration_clientId :: Lens' GetConfiguration Text

-- | <i>See:</i> <a>newGetConfigurationResponse</a> smart constructor.
data GetConfigurationResponse
GetConfigurationResponse' :: Maybe Text -> Maybe (Sensitive ByteString) -> Maybe Text -> Int -> GetConfigurationResponse

-- | The configuration version.
[$sel:configurationVersion:GetConfigurationResponse'] :: GetConfigurationResponse -> Maybe Text

-- | The content of the configuration or the configuration data.
[$sel:content:GetConfigurationResponse'] :: GetConfigurationResponse -> Maybe (Sensitive ByteString)

-- | A standard MIME type describing the format of the configuration
--   content. For more information, see <a>Content-Type</a>.
[$sel:contentType:GetConfigurationResponse'] :: GetConfigurationResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetConfigurationResponse'] :: GetConfigurationResponse -> Int

-- | Create a value of <a>GetConfigurationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configurationVersion:GetConfigurationResponse'</a>,
--   <a>getConfigurationResponse_configurationVersion</a> - The
--   configuration version.
--   
--   <a>$sel:content:GetConfigurationResponse'</a>,
--   <a>getConfigurationResponse_content</a> - The content of the
--   configuration or the configuration data.
--   
--   <a>$sel:contentType:GetConfigurationResponse'</a>,
--   <a>getConfigurationResponse_contentType</a> - A standard MIME type
--   describing the format of the configuration content. For more
--   information, see <a>Content-Type</a>.
--   
--   <a>$sel:httpStatus:GetConfigurationResponse'</a>,
--   <a>getConfigurationResponse_httpStatus</a> - The response's http
--   status code.
newGetConfigurationResponse :: Int -> GetConfigurationResponse

-- | The configuration version.
getConfigurationResponse_configurationVersion :: Lens' GetConfigurationResponse (Maybe Text)

-- | The content of the configuration or the configuration data.
getConfigurationResponse_content :: Lens' GetConfigurationResponse (Maybe ByteString)

-- | A standard MIME type describing the format of the configuration
--   content. For more information, see <a>Content-Type</a>.
getConfigurationResponse_contentType :: Lens' GetConfigurationResponse (Maybe Text)

-- | The response's http status code.
getConfigurationResponse_httpStatus :: Lens' GetConfigurationResponse Int
instance GHC.Generics.Generic Amazonka.AppConfig.GetConfiguration.GetConfiguration
instance GHC.Show.Show Amazonka.AppConfig.GetConfiguration.GetConfiguration
instance GHC.Read.Read Amazonka.AppConfig.GetConfiguration.GetConfiguration
instance GHC.Classes.Eq Amazonka.AppConfig.GetConfiguration.GetConfiguration
instance GHC.Generics.Generic Amazonka.AppConfig.GetConfiguration.GetConfigurationResponse
instance GHC.Show.Show Amazonka.AppConfig.GetConfiguration.GetConfigurationResponse
instance GHC.Classes.Eq Amazonka.AppConfig.GetConfiguration.GetConfigurationResponse
instance Amazonka.Types.AWSRequest Amazonka.AppConfig.GetConfiguration.GetConfiguration
instance Control.DeepSeq.NFData Amazonka.AppConfig.GetConfiguration.GetConfigurationResponse
instance Data.Hashable.Class.Hashable Amazonka.AppConfig.GetConfiguration.GetConfiguration
instance Control.DeepSeq.NFData Amazonka.AppConfig.GetConfiguration.GetConfiguration
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppConfig.GetConfiguration.GetConfiguration
instance Amazonka.Data.Path.ToPath Amazonka.AppConfig.GetConfiguration.GetConfiguration
instance Amazonka.Data.Query.ToQuery Amazonka.AppConfig.GetConfiguration.GetConfiguration


-- | Retrieve information about an application.
module Amazonka.AppConfig.GetApplication

-- | <i>See:</i> <a>newGetApplication</a> smart constructor.
data GetApplication
GetApplication' :: Text -> GetApplication

-- | The ID of the application you want to get.
[$sel:applicationId:GetApplication'] :: GetApplication -> Text

-- | Create a value of <a>GetApplication</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationId:GetApplication'</a>,
--   <a>getApplication_applicationId</a> - The ID of the application you
--   want to get.
newGetApplication :: Text -> GetApplication

-- | The ID of the application you want to get.
getApplication_applicationId :: Lens' GetApplication Text

-- | <i>See:</i> <a>newApplication</a> smart constructor.
data Application
Application' :: Maybe Text -> Maybe Text -> Maybe Text -> Application

-- | The application name.
[$sel:name:Application'] :: Application -> Maybe Text

-- | The application ID.
[$sel:id:Application'] :: Application -> Maybe Text

-- | The description of the application.
[$sel:description:Application'] :: Application -> Maybe Text

-- | Create a value of <a>Application</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:Application'</a>, <a>application_name</a> - The
--   application name.
--   
--   <a>$sel:id:Application'</a>, <a>application_id</a> - The application
--   ID.
--   
--   <a>$sel:description:Application'</a>, <a>application_description</a> -
--   The description of the application.
newApplication :: Application

-- | The application name.
application_name :: Lens' Application (Maybe Text)

-- | The application ID.
application_id :: Lens' Application (Maybe Text)

-- | The description of the application.
application_description :: Lens' Application (Maybe Text)
instance GHC.Generics.Generic Amazonka.AppConfig.GetApplication.GetApplication
instance GHC.Show.Show Amazonka.AppConfig.GetApplication.GetApplication
instance GHC.Read.Read Amazonka.AppConfig.GetApplication.GetApplication
instance GHC.Classes.Eq Amazonka.AppConfig.GetApplication.GetApplication
instance Amazonka.Types.AWSRequest Amazonka.AppConfig.GetApplication.GetApplication
instance Data.Hashable.Class.Hashable Amazonka.AppConfig.GetApplication.GetApplication
instance Control.DeepSeq.NFData Amazonka.AppConfig.GetApplication.GetApplication
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppConfig.GetApplication.GetApplication
instance Amazonka.Data.Path.ToPath Amazonka.AppConfig.GetApplication.GetApplication
instance Amazonka.Data.Query.ToQuery Amazonka.AppConfig.GetApplication.GetApplication


-- | Delete a version of a configuration from the AppConfig configuration
--   store.
module Amazonka.AppConfig.DeleteHostedConfigurationVersion

-- | <i>See:</i> <a>newDeleteHostedConfigurationVersion</a> smart
--   constructor.
data DeleteHostedConfigurationVersion
DeleteHostedConfigurationVersion' :: Text -> Text -> Int -> DeleteHostedConfigurationVersion

-- | The application ID.
[$sel:applicationId:DeleteHostedConfigurationVersion'] :: DeleteHostedConfigurationVersion -> Text

-- | The configuration profile ID.
[$sel:configurationProfileId:DeleteHostedConfigurationVersion'] :: DeleteHostedConfigurationVersion -> Text

-- | The versions number to delete.
[$sel:versionNumber:DeleteHostedConfigurationVersion'] :: DeleteHostedConfigurationVersion -> Int

-- | Create a value of <a>DeleteHostedConfigurationVersion</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationId:DeleteHostedConfigurationVersion'</a>,
--   <a>deleteHostedConfigurationVersion_applicationId</a> - The
--   application ID.
--   
--   <a>$sel:configurationProfileId:DeleteHostedConfigurationVersion'</a>,
--   <a>deleteHostedConfigurationVersion_configurationProfileId</a> - The
--   configuration profile ID.
--   
--   <a>$sel:versionNumber:DeleteHostedConfigurationVersion'</a>,
--   <a>deleteHostedConfigurationVersion_versionNumber</a> - The versions
--   number to delete.
newDeleteHostedConfigurationVersion :: Text -> Text -> Int -> DeleteHostedConfigurationVersion

-- | The application ID.
deleteHostedConfigurationVersion_applicationId :: Lens' DeleteHostedConfigurationVersion Text

-- | The configuration profile ID.
deleteHostedConfigurationVersion_configurationProfileId :: Lens' DeleteHostedConfigurationVersion Text

-- | The versions number to delete.
deleteHostedConfigurationVersion_versionNumber :: Lens' DeleteHostedConfigurationVersion Int

-- | <i>See:</i> <a>newDeleteHostedConfigurationVersionResponse</a> smart
--   constructor.
data DeleteHostedConfigurationVersionResponse
DeleteHostedConfigurationVersionResponse' :: DeleteHostedConfigurationVersionResponse

-- | Create a value of <a>DeleteHostedConfigurationVersionResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteHostedConfigurationVersionResponse :: DeleteHostedConfigurationVersionResponse
instance GHC.Generics.Generic Amazonka.AppConfig.DeleteHostedConfigurationVersion.DeleteHostedConfigurationVersion
instance GHC.Show.Show Amazonka.AppConfig.DeleteHostedConfigurationVersion.DeleteHostedConfigurationVersion
instance GHC.Read.Read Amazonka.AppConfig.DeleteHostedConfigurationVersion.DeleteHostedConfigurationVersion
instance GHC.Classes.Eq Amazonka.AppConfig.DeleteHostedConfigurationVersion.DeleteHostedConfigurationVersion
instance GHC.Generics.Generic Amazonka.AppConfig.DeleteHostedConfigurationVersion.DeleteHostedConfigurationVersionResponse
instance GHC.Show.Show Amazonka.AppConfig.DeleteHostedConfigurationVersion.DeleteHostedConfigurationVersionResponse
instance GHC.Read.Read Amazonka.AppConfig.DeleteHostedConfigurationVersion.DeleteHostedConfigurationVersionResponse
instance GHC.Classes.Eq Amazonka.AppConfig.DeleteHostedConfigurationVersion.DeleteHostedConfigurationVersionResponse
instance Amazonka.Types.AWSRequest Amazonka.AppConfig.DeleteHostedConfigurationVersion.DeleteHostedConfigurationVersion
instance Control.DeepSeq.NFData Amazonka.AppConfig.DeleteHostedConfigurationVersion.DeleteHostedConfigurationVersionResponse
instance Data.Hashable.Class.Hashable Amazonka.AppConfig.DeleteHostedConfigurationVersion.DeleteHostedConfigurationVersion
instance Control.DeepSeq.NFData Amazonka.AppConfig.DeleteHostedConfigurationVersion.DeleteHostedConfigurationVersion
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppConfig.DeleteHostedConfigurationVersion.DeleteHostedConfigurationVersion
instance Amazonka.Data.Path.ToPath Amazonka.AppConfig.DeleteHostedConfigurationVersion.DeleteHostedConfigurationVersion
instance Amazonka.Data.Query.ToQuery Amazonka.AppConfig.DeleteHostedConfigurationVersion.DeleteHostedConfigurationVersion


-- | Delete an environment. Deleting an environment does not delete a
--   configuration from a host.
module Amazonka.AppConfig.DeleteEnvironment

-- | <i>See:</i> <a>newDeleteEnvironment</a> smart constructor.
data DeleteEnvironment
DeleteEnvironment' :: Text -> Text -> DeleteEnvironment

-- | The application ID that includes the environment you want to delete.
[$sel:applicationId:DeleteEnvironment'] :: DeleteEnvironment -> Text

-- | The ID of the environment you want to delete.
[$sel:environmentId:DeleteEnvironment'] :: DeleteEnvironment -> Text

-- | Create a value of <a>DeleteEnvironment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationId:DeleteEnvironment'</a>,
--   <a>deleteEnvironment_applicationId</a> - The application ID that
--   includes the environment you want to delete.
--   
--   <a>$sel:environmentId:DeleteEnvironment'</a>,
--   <a>deleteEnvironment_environmentId</a> - The ID of the environment you
--   want to delete.
newDeleteEnvironment :: Text -> Text -> DeleteEnvironment

-- | The application ID that includes the environment you want to delete.
deleteEnvironment_applicationId :: Lens' DeleteEnvironment Text

-- | The ID of the environment you want to delete.
deleteEnvironment_environmentId :: Lens' DeleteEnvironment Text

-- | <i>See:</i> <a>newDeleteEnvironmentResponse</a> smart constructor.
data DeleteEnvironmentResponse
DeleteEnvironmentResponse' :: DeleteEnvironmentResponse

-- | Create a value of <a>DeleteEnvironmentResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteEnvironmentResponse :: DeleteEnvironmentResponse
instance GHC.Generics.Generic Amazonka.AppConfig.DeleteEnvironment.DeleteEnvironment
instance GHC.Show.Show Amazonka.AppConfig.DeleteEnvironment.DeleteEnvironment
instance GHC.Read.Read Amazonka.AppConfig.DeleteEnvironment.DeleteEnvironment
instance GHC.Classes.Eq Amazonka.AppConfig.DeleteEnvironment.DeleteEnvironment
instance GHC.Generics.Generic Amazonka.AppConfig.DeleteEnvironment.DeleteEnvironmentResponse
instance GHC.Show.Show Amazonka.AppConfig.DeleteEnvironment.DeleteEnvironmentResponse
instance GHC.Read.Read Amazonka.AppConfig.DeleteEnvironment.DeleteEnvironmentResponse
instance GHC.Classes.Eq Amazonka.AppConfig.DeleteEnvironment.DeleteEnvironmentResponse
instance Amazonka.Types.AWSRequest Amazonka.AppConfig.DeleteEnvironment.DeleteEnvironment
instance Control.DeepSeq.NFData Amazonka.AppConfig.DeleteEnvironment.DeleteEnvironmentResponse
instance Data.Hashable.Class.Hashable Amazonka.AppConfig.DeleteEnvironment.DeleteEnvironment
instance Control.DeepSeq.NFData Amazonka.AppConfig.DeleteEnvironment.DeleteEnvironment
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppConfig.DeleteEnvironment.DeleteEnvironment
instance Amazonka.Data.Path.ToPath Amazonka.AppConfig.DeleteEnvironment.DeleteEnvironment
instance Amazonka.Data.Query.ToQuery Amazonka.AppConfig.DeleteEnvironment.DeleteEnvironment


-- | Delete a deployment strategy. Deleting a deployment strategy does not
--   delete a configuration from a host.
module Amazonka.AppConfig.DeleteDeploymentStrategy

-- | <i>See:</i> <a>newDeleteDeploymentStrategy</a> smart constructor.
data DeleteDeploymentStrategy
DeleteDeploymentStrategy' :: Text -> DeleteDeploymentStrategy

-- | The ID of the deployment strategy you want to delete.
[$sel:deploymentStrategyId:DeleteDeploymentStrategy'] :: DeleteDeploymentStrategy -> Text

-- | Create a value of <a>DeleteDeploymentStrategy</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentStrategyId:DeleteDeploymentStrategy'</a>,
--   <a>deleteDeploymentStrategy_deploymentStrategyId</a> - The ID of the
--   deployment strategy you want to delete.
newDeleteDeploymentStrategy :: Text -> DeleteDeploymentStrategy

-- | The ID of the deployment strategy you want to delete.
deleteDeploymentStrategy_deploymentStrategyId :: Lens' DeleteDeploymentStrategy Text

-- | <i>See:</i> <a>newDeleteDeploymentStrategyResponse</a> smart
--   constructor.
data DeleteDeploymentStrategyResponse
DeleteDeploymentStrategyResponse' :: DeleteDeploymentStrategyResponse

-- | Create a value of <a>DeleteDeploymentStrategyResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteDeploymentStrategyResponse :: DeleteDeploymentStrategyResponse
instance GHC.Generics.Generic Amazonka.AppConfig.DeleteDeploymentStrategy.DeleteDeploymentStrategy
instance GHC.Show.Show Amazonka.AppConfig.DeleteDeploymentStrategy.DeleteDeploymentStrategy
instance GHC.Read.Read Amazonka.AppConfig.DeleteDeploymentStrategy.DeleteDeploymentStrategy
instance GHC.Classes.Eq Amazonka.AppConfig.DeleteDeploymentStrategy.DeleteDeploymentStrategy
instance GHC.Generics.Generic Amazonka.AppConfig.DeleteDeploymentStrategy.DeleteDeploymentStrategyResponse
instance GHC.Show.Show Amazonka.AppConfig.DeleteDeploymentStrategy.DeleteDeploymentStrategyResponse
instance GHC.Read.Read Amazonka.AppConfig.DeleteDeploymentStrategy.DeleteDeploymentStrategyResponse
instance GHC.Classes.Eq Amazonka.AppConfig.DeleteDeploymentStrategy.DeleteDeploymentStrategyResponse
instance Amazonka.Types.AWSRequest Amazonka.AppConfig.DeleteDeploymentStrategy.DeleteDeploymentStrategy
instance Control.DeepSeq.NFData Amazonka.AppConfig.DeleteDeploymentStrategy.DeleteDeploymentStrategyResponse
instance Data.Hashable.Class.Hashable Amazonka.AppConfig.DeleteDeploymentStrategy.DeleteDeploymentStrategy
instance Control.DeepSeq.NFData Amazonka.AppConfig.DeleteDeploymentStrategy.DeleteDeploymentStrategy
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppConfig.DeleteDeploymentStrategy.DeleteDeploymentStrategy
instance Amazonka.Data.Path.ToPath Amazonka.AppConfig.DeleteDeploymentStrategy.DeleteDeploymentStrategy
instance Amazonka.Data.Query.ToQuery Amazonka.AppConfig.DeleteDeploymentStrategy.DeleteDeploymentStrategy


-- | Delete a configuration profile. Deleting a configuration profile does
--   not delete a configuration from a host.
module Amazonka.AppConfig.DeleteConfigurationProfile

-- | <i>See:</i> <a>newDeleteConfigurationProfile</a> smart constructor.
data DeleteConfigurationProfile
DeleteConfigurationProfile' :: Text -> Text -> DeleteConfigurationProfile

-- | The application ID that includes the configuration profile you want to
--   delete.
[$sel:applicationId:DeleteConfigurationProfile'] :: DeleteConfigurationProfile -> Text

-- | The ID of the configuration profile you want to delete.
[$sel:configurationProfileId:DeleteConfigurationProfile'] :: DeleteConfigurationProfile -> Text

-- | Create a value of <a>DeleteConfigurationProfile</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationId:DeleteConfigurationProfile'</a>,
--   <a>deleteConfigurationProfile_applicationId</a> - The application ID
--   that includes the configuration profile you want to delete.
--   
--   <a>$sel:configurationProfileId:DeleteConfigurationProfile'</a>,
--   <a>deleteConfigurationProfile_configurationProfileId</a> - The ID of
--   the configuration profile you want to delete.
newDeleteConfigurationProfile :: Text -> Text -> DeleteConfigurationProfile

-- | The application ID that includes the configuration profile you want to
--   delete.
deleteConfigurationProfile_applicationId :: Lens' DeleteConfigurationProfile Text

-- | The ID of the configuration profile you want to delete.
deleteConfigurationProfile_configurationProfileId :: Lens' DeleteConfigurationProfile Text

-- | <i>See:</i> <a>newDeleteConfigurationProfileResponse</a> smart
--   constructor.
data DeleteConfigurationProfileResponse
DeleteConfigurationProfileResponse' :: DeleteConfigurationProfileResponse

-- | Create a value of <a>DeleteConfigurationProfileResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteConfigurationProfileResponse :: DeleteConfigurationProfileResponse
instance GHC.Generics.Generic Amazonka.AppConfig.DeleteConfigurationProfile.DeleteConfigurationProfile
instance GHC.Show.Show Amazonka.AppConfig.DeleteConfigurationProfile.DeleteConfigurationProfile
instance GHC.Read.Read Amazonka.AppConfig.DeleteConfigurationProfile.DeleteConfigurationProfile
instance GHC.Classes.Eq Amazonka.AppConfig.DeleteConfigurationProfile.DeleteConfigurationProfile
instance GHC.Generics.Generic Amazonka.AppConfig.DeleteConfigurationProfile.DeleteConfigurationProfileResponse
instance GHC.Show.Show Amazonka.AppConfig.DeleteConfigurationProfile.DeleteConfigurationProfileResponse
instance GHC.Read.Read Amazonka.AppConfig.DeleteConfigurationProfile.DeleteConfigurationProfileResponse
instance GHC.Classes.Eq Amazonka.AppConfig.DeleteConfigurationProfile.DeleteConfigurationProfileResponse
instance Amazonka.Types.AWSRequest Amazonka.AppConfig.DeleteConfigurationProfile.DeleteConfigurationProfile
instance Control.DeepSeq.NFData Amazonka.AppConfig.DeleteConfigurationProfile.DeleteConfigurationProfileResponse
instance Data.Hashable.Class.Hashable Amazonka.AppConfig.DeleteConfigurationProfile.DeleteConfigurationProfile
instance Control.DeepSeq.NFData Amazonka.AppConfig.DeleteConfigurationProfile.DeleteConfigurationProfile
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppConfig.DeleteConfigurationProfile.DeleteConfigurationProfile
instance Amazonka.Data.Path.ToPath Amazonka.AppConfig.DeleteConfigurationProfile.DeleteConfigurationProfile
instance Amazonka.Data.Query.ToQuery Amazonka.AppConfig.DeleteConfigurationProfile.DeleteConfigurationProfile


-- | Delete an application. Deleting an application does not delete a
--   configuration from a host.
module Amazonka.AppConfig.DeleteApplication

-- | <i>See:</i> <a>newDeleteApplication</a> smart constructor.
data DeleteApplication
DeleteApplication' :: Text -> DeleteApplication

-- | The ID of the application to delete.
[$sel:applicationId:DeleteApplication'] :: DeleteApplication -> Text

-- | Create a value of <a>DeleteApplication</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationId:DeleteApplication'</a>,
--   <a>deleteApplication_applicationId</a> - The ID of the application to
--   delete.
newDeleteApplication :: Text -> DeleteApplication

-- | The ID of the application to delete.
deleteApplication_applicationId :: Lens' DeleteApplication Text

-- | <i>See:</i> <a>newDeleteApplicationResponse</a> smart constructor.
data DeleteApplicationResponse
DeleteApplicationResponse' :: DeleteApplicationResponse

-- | Create a value of <a>DeleteApplicationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteApplicationResponse :: DeleteApplicationResponse
instance GHC.Generics.Generic Amazonka.AppConfig.DeleteApplication.DeleteApplication
instance GHC.Show.Show Amazonka.AppConfig.DeleteApplication.DeleteApplication
instance GHC.Read.Read Amazonka.AppConfig.DeleteApplication.DeleteApplication
instance GHC.Classes.Eq Amazonka.AppConfig.DeleteApplication.DeleteApplication
instance GHC.Generics.Generic Amazonka.AppConfig.DeleteApplication.DeleteApplicationResponse
instance GHC.Show.Show Amazonka.AppConfig.DeleteApplication.DeleteApplicationResponse
instance GHC.Read.Read Amazonka.AppConfig.DeleteApplication.DeleteApplicationResponse
instance GHC.Classes.Eq Amazonka.AppConfig.DeleteApplication.DeleteApplicationResponse
instance Amazonka.Types.AWSRequest Amazonka.AppConfig.DeleteApplication.DeleteApplication
instance Control.DeepSeq.NFData Amazonka.AppConfig.DeleteApplication.DeleteApplicationResponse
instance Data.Hashable.Class.Hashable Amazonka.AppConfig.DeleteApplication.DeleteApplication
instance Control.DeepSeq.NFData Amazonka.AppConfig.DeleteApplication.DeleteApplication
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppConfig.DeleteApplication.DeleteApplication
instance Amazonka.Data.Path.ToPath Amazonka.AppConfig.DeleteApplication.DeleteApplication
instance Amazonka.Data.Query.ToQuery Amazonka.AppConfig.DeleteApplication.DeleteApplication


-- | Create a new configuration in the AppConfig configuration store.
module Amazonka.AppConfig.CreateHostedConfigurationVersion

-- | <i>See:</i> <a>newCreateHostedConfigurationVersion</a> smart
--   constructor.
data CreateHostedConfigurationVersion
CreateHostedConfigurationVersion' :: Maybe Int -> Maybe Text -> Text -> Text -> Sensitive ByteString -> Text -> CreateHostedConfigurationVersion

-- | An optional locking token used to prevent race conditions from
--   overwriting configuration updates when creating a new version. To
--   ensure your data is not overwritten when creating multiple hosted
--   configuration versions in rapid succession, specify the version of the
--   latest hosted configuration version.
[$sel:latestVersionNumber:CreateHostedConfigurationVersion'] :: CreateHostedConfigurationVersion -> Maybe Int

-- | A description of the configuration.
[$sel:description:CreateHostedConfigurationVersion'] :: CreateHostedConfigurationVersion -> Maybe Text

-- | The application ID.
[$sel:applicationId:CreateHostedConfigurationVersion'] :: CreateHostedConfigurationVersion -> Text

-- | The configuration profile ID.
[$sel:configurationProfileId:CreateHostedConfigurationVersion'] :: CreateHostedConfigurationVersion -> Text

-- | The content of the configuration or the configuration data.
[$sel:content:CreateHostedConfigurationVersion'] :: CreateHostedConfigurationVersion -> Sensitive ByteString

-- | A standard MIME type describing the format of the configuration
--   content. For more information, see <a>Content-Type</a>.
[$sel:contentType:CreateHostedConfigurationVersion'] :: CreateHostedConfigurationVersion -> Text

-- | Create a value of <a>CreateHostedConfigurationVersion</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:latestVersionNumber:CreateHostedConfigurationVersion'</a>,
--   <a>createHostedConfigurationVersion_latestVersionNumber</a> - An
--   optional locking token used to prevent race conditions from
--   overwriting configuration updates when creating a new version. To
--   ensure your data is not overwritten when creating multiple hosted
--   configuration versions in rapid succession, specify the version of the
--   latest hosted configuration version.
--   
--   <a>$sel:description:CreateHostedConfigurationVersion'</a>,
--   <a>createHostedConfigurationVersion_description</a> - A description of
--   the configuration.
--   
--   <a>$sel:applicationId:CreateHostedConfigurationVersion'</a>,
--   <a>createHostedConfigurationVersion_applicationId</a> - The
--   application ID.
--   
--   <a>$sel:configurationProfileId:CreateHostedConfigurationVersion'</a>,
--   <a>createHostedConfigurationVersion_configurationProfileId</a> - The
--   configuration profile ID.
--   
--   <a>$sel:content:CreateHostedConfigurationVersion'</a>,
--   <a>createHostedConfigurationVersion_content</a> - The content of the
--   configuration or the configuration data.
--   
--   <a>$sel:contentType:CreateHostedConfigurationVersion'</a>,
--   <a>createHostedConfigurationVersion_contentType</a> - A standard MIME
--   type describing the format of the configuration content. For more
--   information, see <a>Content-Type</a>.
newCreateHostedConfigurationVersion :: Text -> Text -> ByteString -> Text -> CreateHostedConfigurationVersion

-- | An optional locking token used to prevent race conditions from
--   overwriting configuration updates when creating a new version. To
--   ensure your data is not overwritten when creating multiple hosted
--   configuration versions in rapid succession, specify the version of the
--   latest hosted configuration version.
createHostedConfigurationVersion_latestVersionNumber :: Lens' CreateHostedConfigurationVersion (Maybe Int)

-- | A description of the configuration.
createHostedConfigurationVersion_description :: Lens' CreateHostedConfigurationVersion (Maybe Text)

-- | The application ID.
createHostedConfigurationVersion_applicationId :: Lens' CreateHostedConfigurationVersion Text

-- | The configuration profile ID.
createHostedConfigurationVersion_configurationProfileId :: Lens' CreateHostedConfigurationVersion Text

-- | The content of the configuration or the configuration data.
createHostedConfigurationVersion_content :: Lens' CreateHostedConfigurationVersion ByteString

-- | A standard MIME type describing the format of the configuration
--   content. For more information, see <a>Content-Type</a>.
createHostedConfigurationVersion_contentType :: Lens' CreateHostedConfigurationVersion Text

-- | <i>See:</i> <a>newHostedConfigurationVersion</a> smart constructor.
data HostedConfigurationVersion
HostedConfigurationVersion' :: Maybe (Sensitive ByteString) -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> HostedConfigurationVersion

-- | The content of the configuration or the configuration data.
[$sel:content:HostedConfigurationVersion'] :: HostedConfigurationVersion -> Maybe (Sensitive ByteString)

-- | The configuration version.
[$sel:versionNumber:HostedConfigurationVersion'] :: HostedConfigurationVersion -> Maybe Int

-- | The application ID.
[$sel:applicationId:HostedConfigurationVersion'] :: HostedConfigurationVersion -> Maybe Text

-- | A description of the configuration.
[$sel:description:HostedConfigurationVersion'] :: HostedConfigurationVersion -> Maybe Text

-- | The configuration profile ID.
[$sel:configurationProfileId:HostedConfigurationVersion'] :: HostedConfigurationVersion -> Maybe Text

-- | A standard MIME type describing the format of the configuration
--   content. For more information, see <a>Content-Type</a>.
[$sel:contentType:HostedConfigurationVersion'] :: HostedConfigurationVersion -> Maybe Text

-- | Create a value of <a>HostedConfigurationVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:content:HostedConfigurationVersion'</a>,
--   <a>hostedConfigurationVersion_content</a> - The content of the
--   configuration or the configuration data.
--   
--   <a>$sel:versionNumber:HostedConfigurationVersion'</a>,
--   <a>hostedConfigurationVersion_versionNumber</a> - The configuration
--   version.
--   
--   <a>$sel:applicationId:HostedConfigurationVersion'</a>,
--   <a>hostedConfigurationVersion_applicationId</a> - The application ID.
--   
--   <a>$sel:description:HostedConfigurationVersion'</a>,
--   <a>hostedConfigurationVersion_description</a> - A description of the
--   configuration.
--   
--   <a>$sel:configurationProfileId:HostedConfigurationVersion'</a>,
--   <a>hostedConfigurationVersion_configurationProfileId</a> - The
--   configuration profile ID.
--   
--   <a>$sel:contentType:HostedConfigurationVersion'</a>,
--   <a>hostedConfigurationVersion_contentType</a> - A standard MIME type
--   describing the format of the configuration content. For more
--   information, see <a>Content-Type</a>.
newHostedConfigurationVersion :: HostedConfigurationVersion

-- | The content of the configuration or the configuration data.
hostedConfigurationVersion_content :: Lens' HostedConfigurationVersion (Maybe ByteString)

-- | The configuration version.
hostedConfigurationVersion_versionNumber :: Lens' HostedConfigurationVersion (Maybe Int)

-- | The application ID.
hostedConfigurationVersion_applicationId :: Lens' HostedConfigurationVersion (Maybe Text)

-- | A description of the configuration.
hostedConfigurationVersion_description :: Lens' HostedConfigurationVersion (Maybe Text)

-- | The configuration profile ID.
hostedConfigurationVersion_configurationProfileId :: Lens' HostedConfigurationVersion (Maybe Text)

-- | A standard MIME type describing the format of the configuration
--   content. For more information, see <a>Content-Type</a>.
hostedConfigurationVersion_contentType :: Lens' HostedConfigurationVersion (Maybe Text)
instance GHC.Generics.Generic Amazonka.AppConfig.CreateHostedConfigurationVersion.CreateHostedConfigurationVersion
instance GHC.Show.Show Amazonka.AppConfig.CreateHostedConfigurationVersion.CreateHostedConfigurationVersion
instance GHC.Classes.Eq Amazonka.AppConfig.CreateHostedConfigurationVersion.CreateHostedConfigurationVersion
instance Amazonka.Types.AWSRequest Amazonka.AppConfig.CreateHostedConfigurationVersion.CreateHostedConfigurationVersion
instance Data.Hashable.Class.Hashable Amazonka.AppConfig.CreateHostedConfigurationVersion.CreateHostedConfigurationVersion
instance Control.DeepSeq.NFData Amazonka.AppConfig.CreateHostedConfigurationVersion.CreateHostedConfigurationVersion
instance Amazonka.Data.Body.ToBody Amazonka.AppConfig.CreateHostedConfigurationVersion.CreateHostedConfigurationVersion
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppConfig.CreateHostedConfigurationVersion.CreateHostedConfigurationVersion
instance Amazonka.Data.Path.ToPath Amazonka.AppConfig.CreateHostedConfigurationVersion.CreateHostedConfigurationVersion
instance Amazonka.Data.Query.ToQuery Amazonka.AppConfig.CreateHostedConfigurationVersion.CreateHostedConfigurationVersion


-- | For each application, you define one or more environments. An
--   environment is a logical deployment group of AppConfig targets, such
--   as applications in a <tt>Beta</tt> or <tt>Production</tt> environment.
--   You can also define environments for application subcomponents such as
--   the <tt>Web</tt>, <tt>Mobile</tt> and <tt>Back-end</tt> components for
--   your application. You can configure Amazon CloudWatch alarms for each
--   environment. The system monitors alarms during a configuration
--   deployment. If an alarm is triggered, the system rolls back the
--   configuration.
module Amazonka.AppConfig.CreateEnvironment

-- | <i>See:</i> <a>newCreateEnvironment</a> smart constructor.
data CreateEnvironment
CreateEnvironment' :: Maybe [Monitor] -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> Text -> CreateEnvironment

-- | Amazon CloudWatch alarms to monitor during the deployment process.
[$sel:monitors:CreateEnvironment'] :: CreateEnvironment -> Maybe [Monitor]

-- | A description of the environment.
[$sel:description:CreateEnvironment'] :: CreateEnvironment -> Maybe Text

-- | Metadata to assign to the environment. Tags help organize and
--   categorize your AppConfig resources. Each tag consists of a key and an
--   optional value, both of which you define.
[$sel:tags:CreateEnvironment'] :: CreateEnvironment -> Maybe (HashMap Text Text)

-- | The application ID.
[$sel:applicationId:CreateEnvironment'] :: CreateEnvironment -> Text

-- | A name for the environment.
[$sel:name:CreateEnvironment'] :: CreateEnvironment -> Text

-- | Create a value of <a>CreateEnvironment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:monitors:CreateEnvironment'</a>,
--   <a>createEnvironment_monitors</a> - Amazon CloudWatch alarms to
--   monitor during the deployment process.
--   
--   <a>$sel:description:CreateEnvironment'</a>,
--   <a>createEnvironment_description</a> - A description of the
--   environment.
--   
--   <a>$sel:tags:CreateEnvironment'</a>, <a>createEnvironment_tags</a> -
--   Metadata to assign to the environment. Tags help organize and
--   categorize your AppConfig resources. Each tag consists of a key and an
--   optional value, both of which you define.
--   
--   <a>$sel:applicationId:CreateEnvironment'</a>,
--   <a>createEnvironment_applicationId</a> - The application ID.
--   
--   <a>$sel:name:CreateEnvironment'</a>, <a>createEnvironment_name</a> - A
--   name for the environment.
newCreateEnvironment :: Text -> Text -> CreateEnvironment

-- | Amazon CloudWatch alarms to monitor during the deployment process.
createEnvironment_monitors :: Lens' CreateEnvironment (Maybe [Monitor])

-- | A description of the environment.
createEnvironment_description :: Lens' CreateEnvironment (Maybe Text)

-- | Metadata to assign to the environment. Tags help organize and
--   categorize your AppConfig resources. Each tag consists of a key and an
--   optional value, both of which you define.
createEnvironment_tags :: Lens' CreateEnvironment (Maybe (HashMap Text Text))

-- | The application ID.
createEnvironment_applicationId :: Lens' CreateEnvironment Text

-- | A name for the environment.
createEnvironment_name :: Lens' CreateEnvironment Text

-- | <i>See:</i> <a>newEnvironment</a> smart constructor.
data Environment
Environment' :: Maybe EnvironmentState -> Maybe [Monitor] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Environment

-- | The state of the environment. An environment can be in one of the
--   following states: <tt>READY_FOR_DEPLOYMENT</tt>, <tt>DEPLOYING</tt>,
--   <tt>ROLLING_BACK</tt>, or <tt>ROLLED_BACK</tt>
[$sel:state:Environment'] :: Environment -> Maybe EnvironmentState

-- | Amazon CloudWatch alarms monitored during the deployment.
[$sel:monitors:Environment'] :: Environment -> Maybe [Monitor]

-- | The application ID.
[$sel:applicationId:Environment'] :: Environment -> Maybe Text

-- | The name of the environment.
[$sel:name:Environment'] :: Environment -> Maybe Text

-- | The environment ID.
[$sel:id:Environment'] :: Environment -> Maybe Text

-- | The description of the environment.
[$sel:description:Environment'] :: Environment -> Maybe Text

-- | Create a value of <a>Environment</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:Environment'</a>, <a>environment_state</a> - The state
--   of the environment. An environment can be in one of the following
--   states: <tt>READY_FOR_DEPLOYMENT</tt>, <tt>DEPLOYING</tt>,
--   <tt>ROLLING_BACK</tt>, or <tt>ROLLED_BACK</tt>
--   
--   <a>$sel:monitors:Environment'</a>, <a>environment_monitors</a> -
--   Amazon CloudWatch alarms monitored during the deployment.
--   
--   <a>$sel:applicationId:Environment'</a>,
--   <a>environment_applicationId</a> - The application ID.
--   
--   <a>$sel:name:Environment'</a>, <a>environment_name</a> - The name of
--   the environment.
--   
--   <a>$sel:id:Environment'</a>, <a>environment_id</a> - The environment
--   ID.
--   
--   <a>$sel:description:Environment'</a>, <a>environment_description</a> -
--   The description of the environment.
newEnvironment :: Environment

-- | The state of the environment. An environment can be in one of the
--   following states: <tt>READY_FOR_DEPLOYMENT</tt>, <tt>DEPLOYING</tt>,
--   <tt>ROLLING_BACK</tt>, or <tt>ROLLED_BACK</tt>
environment_state :: Lens' Environment (Maybe EnvironmentState)

-- | Amazon CloudWatch alarms monitored during the deployment.
environment_monitors :: Lens' Environment (Maybe [Monitor])

-- | The application ID.
environment_applicationId :: Lens' Environment (Maybe Text)

-- | The name of the environment.
environment_name :: Lens' Environment (Maybe Text)

-- | The environment ID.
environment_id :: Lens' Environment (Maybe Text)

-- | The description of the environment.
environment_description :: Lens' Environment (Maybe Text)
instance GHC.Generics.Generic Amazonka.AppConfig.CreateEnvironment.CreateEnvironment
instance GHC.Show.Show Amazonka.AppConfig.CreateEnvironment.CreateEnvironment
instance GHC.Read.Read Amazonka.AppConfig.CreateEnvironment.CreateEnvironment
instance GHC.Classes.Eq Amazonka.AppConfig.CreateEnvironment.CreateEnvironment
instance Amazonka.Types.AWSRequest Amazonka.AppConfig.CreateEnvironment.CreateEnvironment
instance Data.Hashable.Class.Hashable Amazonka.AppConfig.CreateEnvironment.CreateEnvironment
instance Control.DeepSeq.NFData Amazonka.AppConfig.CreateEnvironment.CreateEnvironment
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppConfig.CreateEnvironment.CreateEnvironment
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppConfig.CreateEnvironment.CreateEnvironment
instance Amazonka.Data.Path.ToPath Amazonka.AppConfig.CreateEnvironment.CreateEnvironment
instance Amazonka.Data.Query.ToQuery Amazonka.AppConfig.CreateEnvironment.CreateEnvironment


-- | A deployment strategy defines important criteria for rolling out your
--   configuration to the designated targets. A deployment strategy
--   includes: the overall duration required, a percentage of targets to
--   receive the deployment during each interval, an algorithm that defines
--   how percentage grows, and bake time.
module Amazonka.AppConfig.CreateDeploymentStrategy

-- | <i>See:</i> <a>newCreateDeploymentStrategy</a> smart constructor.
data CreateDeploymentStrategy
CreateDeploymentStrategy' :: Maybe Natural -> Maybe Text -> Maybe GrowthType -> Maybe (HashMap Text Text) -> Text -> Natural -> Double -> ReplicateTo -> CreateDeploymentStrategy

-- | The amount of time AppConfig monitors for alarms before considering
--   the deployment to be complete and no longer eligible for automatic
--   roll back.
[$sel:finalBakeTimeInMinutes:CreateDeploymentStrategy'] :: CreateDeploymentStrategy -> Maybe Natural

-- | A description of the deployment strategy.
[$sel:description:CreateDeploymentStrategy'] :: CreateDeploymentStrategy -> Maybe Text

-- | The algorithm used to define how percentage grows over time. AWS
--   AppConfig supports the following growth types:
--   
--   <b>Linear</b>: For this type, AppConfig processes the deployment by
--   dividing the total number of targets by the value specified for
--   <tt>Step percentage</tt>. For example, a linear deployment that uses a
--   <tt>Step percentage</tt> of 10 deploys the configuration to 10 percent
--   of the hosts. After those deployments are complete, the system deploys
--   the configuration to the next 10 percent. This continues until 100% of
--   the targets have successfully received the configuration.
--   
--   <b>Exponential</b>: For this type, AppConfig processes the deployment
--   exponentially using the following formula: <tt>G*(2^N)</tt>. In this
--   formula, <tt>G</tt> is the growth factor specified by the user and
--   <tt>N</tt> is the number of steps until the configuration is deployed
--   to all targets. For example, if you specify a growth factor of 2, then
--   the system rolls out the configuration as follows:
--   
--   <pre>
--   2*(2^0)
--   </pre>
--   
--   <pre>
--   2*(2^1)
--   </pre>
--   
--   <pre>
--   2*(2^2)
--   </pre>
--   
--   Expressed numerically, the deployment rolls out as follows: 2% of the
--   targets, 4% of the targets, 8% of the targets, and continues until the
--   configuration has been deployed to all targets.
[$sel:growthType:CreateDeploymentStrategy'] :: CreateDeploymentStrategy -> Maybe GrowthType

-- | Metadata to assign to the deployment strategy. Tags help organize and
--   categorize your AppConfig resources. Each tag consists of a key and an
--   optional value, both of which you define.
[$sel:tags:CreateDeploymentStrategy'] :: CreateDeploymentStrategy -> Maybe (HashMap Text Text)

-- | A name for the deployment strategy.
[$sel:name:CreateDeploymentStrategy'] :: CreateDeploymentStrategy -> Text

-- | Total amount of time for a deployment to last.
[$sel:deploymentDurationInMinutes:CreateDeploymentStrategy'] :: CreateDeploymentStrategy -> Natural

-- | The percentage of targets to receive a deployed configuration during
--   each interval.
[$sel:growthFactor:CreateDeploymentStrategy'] :: CreateDeploymentStrategy -> Double

-- | Save the deployment strategy to a Systems Manager (SSM) document.
[$sel:replicateTo:CreateDeploymentStrategy'] :: CreateDeploymentStrategy -> ReplicateTo

-- | Create a value of <a>CreateDeploymentStrategy</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:finalBakeTimeInMinutes:CreateDeploymentStrategy'</a>,
--   <a>createDeploymentStrategy_finalBakeTimeInMinutes</a> - The amount of
--   time AppConfig monitors for alarms before considering the deployment
--   to be complete and no longer eligible for automatic roll back.
--   
--   <a>$sel:description:CreateDeploymentStrategy'</a>,
--   <a>createDeploymentStrategy_description</a> - A description of the
--   deployment strategy.
--   
--   <a>$sel:growthType:CreateDeploymentStrategy'</a>,
--   <a>createDeploymentStrategy_growthType</a> - The algorithm used to
--   define how percentage grows over time. AWS AppConfig supports the
--   following growth types:
--   
--   <b>Linear</b>: For this type, AppConfig processes the deployment by
--   dividing the total number of targets by the value specified for
--   <tt>Step percentage</tt>. For example, a linear deployment that uses a
--   <tt>Step percentage</tt> of 10 deploys the configuration to 10 percent
--   of the hosts. After those deployments are complete, the system deploys
--   the configuration to the next 10 percent. This continues until 100% of
--   the targets have successfully received the configuration.
--   
--   <b>Exponential</b>: For this type, AppConfig processes the deployment
--   exponentially using the following formula: <tt>G*(2^N)</tt>. In this
--   formula, <tt>G</tt> is the growth factor specified by the user and
--   <tt>N</tt> is the number of steps until the configuration is deployed
--   to all targets. For example, if you specify a growth factor of 2, then
--   the system rolls out the configuration as follows:
--   
--   <pre>
--   2*(2^0)
--   </pre>
--   
--   <pre>
--   2*(2^1)
--   </pre>
--   
--   <pre>
--   2*(2^2)
--   </pre>
--   
--   Expressed numerically, the deployment rolls out as follows: 2% of the
--   targets, 4% of the targets, 8% of the targets, and continues until the
--   configuration has been deployed to all targets.
--   
--   <a>$sel:tags:CreateDeploymentStrategy'</a>,
--   <a>createDeploymentStrategy_tags</a> - Metadata to assign to the
--   deployment strategy. Tags help organize and categorize your AppConfig
--   resources. Each tag consists of a key and an optional value, both of
--   which you define.
--   
--   <a>$sel:name:CreateDeploymentStrategy'</a>,
--   <a>createDeploymentStrategy_name</a> - A name for the deployment
--   strategy.
--   
--   <a>$sel:deploymentDurationInMinutes:CreateDeploymentStrategy'</a>,
--   <a>createDeploymentStrategy_deploymentDurationInMinutes</a> - Total
--   amount of time for a deployment to last.
--   
--   <a>$sel:growthFactor:CreateDeploymentStrategy'</a>,
--   <a>createDeploymentStrategy_growthFactor</a> - The percentage of
--   targets to receive a deployed configuration during each interval.
--   
--   <a>$sel:replicateTo:CreateDeploymentStrategy'</a>,
--   <a>createDeploymentStrategy_replicateTo</a> - Save the deployment
--   strategy to a Systems Manager (SSM) document.
newCreateDeploymentStrategy :: Text -> Natural -> Double -> ReplicateTo -> CreateDeploymentStrategy

-- | The amount of time AppConfig monitors for alarms before considering
--   the deployment to be complete and no longer eligible for automatic
--   roll back.
createDeploymentStrategy_finalBakeTimeInMinutes :: Lens' CreateDeploymentStrategy (Maybe Natural)

-- | A description of the deployment strategy.
createDeploymentStrategy_description :: Lens' CreateDeploymentStrategy (Maybe Text)

-- | The algorithm used to define how percentage grows over time. AWS
--   AppConfig supports the following growth types:
--   
--   <b>Linear</b>: For this type, AppConfig processes the deployment by
--   dividing the total number of targets by the value specified for
--   <tt>Step percentage</tt>. For example, a linear deployment that uses a
--   <tt>Step percentage</tt> of 10 deploys the configuration to 10 percent
--   of the hosts. After those deployments are complete, the system deploys
--   the configuration to the next 10 percent. This continues until 100% of
--   the targets have successfully received the configuration.
--   
--   <b>Exponential</b>: For this type, AppConfig processes the deployment
--   exponentially using the following formula: <tt>G*(2^N)</tt>. In this
--   formula, <tt>G</tt> is the growth factor specified by the user and
--   <tt>N</tt> is the number of steps until the configuration is deployed
--   to all targets. For example, if you specify a growth factor of 2, then
--   the system rolls out the configuration as follows:
--   
--   <pre>
--   2*(2^0)
--   </pre>
--   
--   <pre>
--   2*(2^1)
--   </pre>
--   
--   <pre>
--   2*(2^2)
--   </pre>
--   
--   Expressed numerically, the deployment rolls out as follows: 2% of the
--   targets, 4% of the targets, 8% of the targets, and continues until the
--   configuration has been deployed to all targets.
createDeploymentStrategy_growthType :: Lens' CreateDeploymentStrategy (Maybe GrowthType)

-- | Metadata to assign to the deployment strategy. Tags help organize and
--   categorize your AppConfig resources. Each tag consists of a key and an
--   optional value, both of which you define.
createDeploymentStrategy_tags :: Lens' CreateDeploymentStrategy (Maybe (HashMap Text Text))

-- | A name for the deployment strategy.
createDeploymentStrategy_name :: Lens' CreateDeploymentStrategy Text

-- | Total amount of time for a deployment to last.
createDeploymentStrategy_deploymentDurationInMinutes :: Lens' CreateDeploymentStrategy Natural

-- | The percentage of targets to receive a deployed configuration during
--   each interval.
createDeploymentStrategy_growthFactor :: Lens' CreateDeploymentStrategy Double

-- | Save the deployment strategy to a Systems Manager (SSM) document.
createDeploymentStrategy_replicateTo :: Lens' CreateDeploymentStrategy ReplicateTo

-- | <i>See:</i> <a>newDeploymentStrategy</a> smart constructor.
data DeploymentStrategy
DeploymentStrategy' :: Maybe Double -> Maybe ReplicateTo -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Natural -> Maybe Text -> Maybe GrowthType -> DeploymentStrategy

-- | The percentage of targets that received a deployed configuration
--   during each interval.
[$sel:growthFactor:DeploymentStrategy'] :: DeploymentStrategy -> Maybe Double

-- | Save the deployment strategy to a Systems Manager (SSM) document.
[$sel:replicateTo:DeploymentStrategy'] :: DeploymentStrategy -> Maybe ReplicateTo

-- | The name of the deployment strategy.
[$sel:name:DeploymentStrategy'] :: DeploymentStrategy -> Maybe Text

-- | The deployment strategy ID.
[$sel:id:DeploymentStrategy'] :: DeploymentStrategy -> Maybe Text

-- | Total amount of time the deployment lasted.
[$sel:deploymentDurationInMinutes:DeploymentStrategy'] :: DeploymentStrategy -> Maybe Natural

-- | The amount of time AppConfig monitored for alarms before considering
--   the deployment to be complete and no longer eligible for automatic
--   roll back.
[$sel:finalBakeTimeInMinutes:DeploymentStrategy'] :: DeploymentStrategy -> Maybe Natural

-- | The description of the deployment strategy.
[$sel:description:DeploymentStrategy'] :: DeploymentStrategy -> Maybe Text

-- | The algorithm used to define how percentage grew over time.
[$sel:growthType:DeploymentStrategy'] :: DeploymentStrategy -> Maybe GrowthType

-- | Create a value of <a>DeploymentStrategy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:growthFactor:DeploymentStrategy'</a>,
--   <a>deploymentStrategy_growthFactor</a> - The percentage of targets
--   that received a deployed configuration during each interval.
--   
--   <a>$sel:replicateTo:DeploymentStrategy'</a>,
--   <a>deploymentStrategy_replicateTo</a> - Save the deployment strategy
--   to a Systems Manager (SSM) document.
--   
--   <a>$sel:name:DeploymentStrategy'</a>, <a>deploymentStrategy_name</a> -
--   The name of the deployment strategy.
--   
--   <a>$sel:id:DeploymentStrategy'</a>, <a>deploymentStrategy_id</a> - The
--   deployment strategy ID.
--   
--   <a>$sel:deploymentDurationInMinutes:DeploymentStrategy'</a>,
--   <a>deploymentStrategy_deploymentDurationInMinutes</a> - Total amount
--   of time the deployment lasted.
--   
--   <a>$sel:finalBakeTimeInMinutes:DeploymentStrategy'</a>,
--   <a>deploymentStrategy_finalBakeTimeInMinutes</a> - The amount of time
--   AppConfig monitored for alarms before considering the deployment to be
--   complete and no longer eligible for automatic roll back.
--   
--   <a>$sel:description:DeploymentStrategy'</a>,
--   <a>deploymentStrategy_description</a> - The description of the
--   deployment strategy.
--   
--   <a>$sel:growthType:DeploymentStrategy'</a>,
--   <a>deploymentStrategy_growthType</a> - The algorithm used to define
--   how percentage grew over time.
newDeploymentStrategy :: DeploymentStrategy

-- | The percentage of targets that received a deployed configuration
--   during each interval.
deploymentStrategy_growthFactor :: Lens' DeploymentStrategy (Maybe Double)

-- | Save the deployment strategy to a Systems Manager (SSM) document.
deploymentStrategy_replicateTo :: Lens' DeploymentStrategy (Maybe ReplicateTo)

-- | The name of the deployment strategy.
deploymentStrategy_name :: Lens' DeploymentStrategy (Maybe Text)

-- | The deployment strategy ID.
deploymentStrategy_id :: Lens' DeploymentStrategy (Maybe Text)

-- | Total amount of time the deployment lasted.
deploymentStrategy_deploymentDurationInMinutes :: Lens' DeploymentStrategy (Maybe Natural)

-- | The amount of time AppConfig monitored for alarms before considering
--   the deployment to be complete and no longer eligible for automatic
--   roll back.
deploymentStrategy_finalBakeTimeInMinutes :: Lens' DeploymentStrategy (Maybe Natural)

-- | The description of the deployment strategy.
deploymentStrategy_description :: Lens' DeploymentStrategy (Maybe Text)

-- | The algorithm used to define how percentage grew over time.
deploymentStrategy_growthType :: Lens' DeploymentStrategy (Maybe GrowthType)
instance GHC.Generics.Generic Amazonka.AppConfig.CreateDeploymentStrategy.CreateDeploymentStrategy
instance GHC.Show.Show Amazonka.AppConfig.CreateDeploymentStrategy.CreateDeploymentStrategy
instance GHC.Read.Read Amazonka.AppConfig.CreateDeploymentStrategy.CreateDeploymentStrategy
instance GHC.Classes.Eq Amazonka.AppConfig.CreateDeploymentStrategy.CreateDeploymentStrategy
instance Amazonka.Types.AWSRequest Amazonka.AppConfig.CreateDeploymentStrategy.CreateDeploymentStrategy
instance Data.Hashable.Class.Hashable Amazonka.AppConfig.CreateDeploymentStrategy.CreateDeploymentStrategy
instance Control.DeepSeq.NFData Amazonka.AppConfig.CreateDeploymentStrategy.CreateDeploymentStrategy
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppConfig.CreateDeploymentStrategy.CreateDeploymentStrategy
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppConfig.CreateDeploymentStrategy.CreateDeploymentStrategy
instance Amazonka.Data.Path.ToPath Amazonka.AppConfig.CreateDeploymentStrategy.CreateDeploymentStrategy
instance Amazonka.Data.Query.ToQuery Amazonka.AppConfig.CreateDeploymentStrategy.CreateDeploymentStrategy


-- | Information that enables AppConfig to access the configuration source.
--   Valid configuration sources include Systems Manager (SSM) documents,
--   SSM Parameter Store parameters, and Amazon S3 objects. A configuration
--   profile includes the following information.
--   
--   <ul>
--   <li>The Uri location of the configuration data.</li>
--   <li>The AWS Identity and Access Management (IAM) role that provides
--   access to the configuration data.</li>
--   <li>A validator for the configuration data. Available validators
--   include either a JSON Schema or an AWS Lambda function.</li>
--   </ul>
--   
--   For more information, see <a>Create a Configuration and a
--   Configuration Profile</a> in the <i>AWS AppConfig User Guide</i>.
module Amazonka.AppConfig.CreateConfigurationProfile

-- | <i>See:</i> <a>newCreateConfigurationProfile</a> smart constructor.
data CreateConfigurationProfile
CreateConfigurationProfile' :: Maybe Text -> Maybe [Validator] -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> Text -> Text -> CreateConfigurationProfile

-- | The ARN of an IAM role with permission to access the configuration at
--   the specified LocationUri.
[$sel:retrievalRoleArn:CreateConfigurationProfile'] :: CreateConfigurationProfile -> Maybe Text

-- | A list of methods for validating the configuration.
[$sel:validators:CreateConfigurationProfile'] :: CreateConfigurationProfile -> Maybe [Validator]

-- | A description of the configuration profile.
[$sel:description:CreateConfigurationProfile'] :: CreateConfigurationProfile -> Maybe Text

-- | Metadata to assign to the configuration profile. Tags help organize
--   and categorize your AppConfig resources. Each tag consists of a key
--   and an optional value, both of which you define.
[$sel:tags:CreateConfigurationProfile'] :: CreateConfigurationProfile -> Maybe (HashMap Text Text)

-- | The application ID.
[$sel:applicationId:CreateConfigurationProfile'] :: CreateConfigurationProfile -> Text

-- | A name for the configuration profile.
[$sel:name:CreateConfigurationProfile'] :: CreateConfigurationProfile -> Text

-- | A URI to locate the configuration. You can specify a Systems Manager
--   (SSM) document, an SSM Parameter Store parameter, or an Amazon S3
--   object. For an SSM document, specify either the document name in the
--   format <tt>ssm-document://&lt;Document_name&gt;</tt> or the Amazon
--   Resource Name (ARN). For a parameter, specify either the parameter
--   name in the format <tt>ssm-parameter://&lt;Parameter_name&gt;</tt> or
--   the ARN. For an Amazon S3 object, specify the URI in the following
--   format: <tt>s3://&lt;bucket&gt;/&lt;objectKey&gt; </tt>. Here is an
--   example: s3://my-bucket/my-app/us-east-1/my-config.json
[$sel:locationUri:CreateConfigurationProfile'] :: CreateConfigurationProfile -> Text

-- | Create a value of <a>CreateConfigurationProfile</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:retrievalRoleArn:CreateConfigurationProfile'</a>,
--   <a>createConfigurationProfile_retrievalRoleArn</a> - The ARN of an IAM
--   role with permission to access the configuration at the specified
--   LocationUri.
--   
--   <a>$sel:validators:CreateConfigurationProfile'</a>,
--   <a>createConfigurationProfile_validators</a> - A list of methods for
--   validating the configuration.
--   
--   <a>$sel:description:CreateConfigurationProfile'</a>,
--   <a>createConfigurationProfile_description</a> - A description of the
--   configuration profile.
--   
--   <a>$sel:tags:CreateConfigurationProfile'</a>,
--   <a>createConfigurationProfile_tags</a> - Metadata to assign to the
--   configuration profile. Tags help organize and categorize your
--   AppConfig resources. Each tag consists of a key and an optional value,
--   both of which you define.
--   
--   <a>$sel:applicationId:CreateConfigurationProfile'</a>,
--   <a>createConfigurationProfile_applicationId</a> - The application ID.
--   
--   <a>$sel:name:CreateConfigurationProfile'</a>,
--   <a>createConfigurationProfile_name</a> - A name for the configuration
--   profile.
--   
--   <a>$sel:locationUri:CreateConfigurationProfile'</a>,
--   <a>createConfigurationProfile_locationUri</a> - A URI to locate the
--   configuration. You can specify a Systems Manager (SSM) document, an
--   SSM Parameter Store parameter, or an Amazon S3 object. For an SSM
--   document, specify either the document name in the format
--   <tt>ssm-document://&lt;Document_name&gt;</tt> or the Amazon Resource
--   Name (ARN). For a parameter, specify either the parameter name in the
--   format <tt>ssm-parameter://&lt;Parameter_name&gt;</tt> or the ARN. For
--   an Amazon S3 object, specify the URI in the following format:
--   <tt>s3://&lt;bucket&gt;/&lt;objectKey&gt; </tt>. Here is an example:
--   s3://my-bucket/my-app/us-east-1/my-config.json
newCreateConfigurationProfile :: Text -> Text -> Text -> CreateConfigurationProfile

-- | The ARN of an IAM role with permission to access the configuration at
--   the specified LocationUri.
createConfigurationProfile_retrievalRoleArn :: Lens' CreateConfigurationProfile (Maybe Text)

-- | A list of methods for validating the configuration.
createConfigurationProfile_validators :: Lens' CreateConfigurationProfile (Maybe [Validator])

-- | A description of the configuration profile.
createConfigurationProfile_description :: Lens' CreateConfigurationProfile (Maybe Text)

-- | Metadata to assign to the configuration profile. Tags help organize
--   and categorize your AppConfig resources. Each tag consists of a key
--   and an optional value, both of which you define.
createConfigurationProfile_tags :: Lens' CreateConfigurationProfile (Maybe (HashMap Text Text))

-- | The application ID.
createConfigurationProfile_applicationId :: Lens' CreateConfigurationProfile Text

-- | A name for the configuration profile.
createConfigurationProfile_name :: Lens' CreateConfigurationProfile Text

-- | A URI to locate the configuration. You can specify a Systems Manager
--   (SSM) document, an SSM Parameter Store parameter, or an Amazon S3
--   object. For an SSM document, specify either the document name in the
--   format <tt>ssm-document://&lt;Document_name&gt;</tt> or the Amazon
--   Resource Name (ARN). For a parameter, specify either the parameter
--   name in the format <tt>ssm-parameter://&lt;Parameter_name&gt;</tt> or
--   the ARN. For an Amazon S3 object, specify the URI in the following
--   format: <tt>s3://&lt;bucket&gt;/&lt;objectKey&gt; </tt>. Here is an
--   example: s3://my-bucket/my-app/us-east-1/my-config.json
createConfigurationProfile_locationUri :: Lens' CreateConfigurationProfile Text

-- | <i>See:</i> <a>newConfigurationProfile</a> smart constructor.
data ConfigurationProfile
ConfigurationProfile' :: Maybe Text -> Maybe [Validator] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> ConfigurationProfile

-- | The ARN of an IAM role with permission to access the configuration at
--   the specified LocationUri.
[$sel:retrievalRoleArn:ConfigurationProfile'] :: ConfigurationProfile -> Maybe Text

-- | A list of methods for validating the configuration.
[$sel:validators:ConfigurationProfile'] :: ConfigurationProfile -> Maybe [Validator]

-- | The URI location of the configuration.
[$sel:locationUri:ConfigurationProfile'] :: ConfigurationProfile -> Maybe Text

-- | The application ID.
[$sel:applicationId:ConfigurationProfile'] :: ConfigurationProfile -> Maybe Text

-- | The name of the configuration profile.
[$sel:name:ConfigurationProfile'] :: ConfigurationProfile -> Maybe Text

-- | The configuration profile ID.
[$sel:id:ConfigurationProfile'] :: ConfigurationProfile -> Maybe Text

-- | The configuration profile description.
[$sel:description:ConfigurationProfile'] :: ConfigurationProfile -> Maybe Text

-- | Create a value of <a>ConfigurationProfile</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:retrievalRoleArn:ConfigurationProfile'</a>,
--   <a>configurationProfile_retrievalRoleArn</a> - The ARN of an IAM role
--   with permission to access the configuration at the specified
--   LocationUri.
--   
--   <a>$sel:validators:ConfigurationProfile'</a>,
--   <a>configurationProfile_validators</a> - A list of methods for
--   validating the configuration.
--   
--   <a>$sel:locationUri:ConfigurationProfile'</a>,
--   <a>configurationProfile_locationUri</a> - The URI location of the
--   configuration.
--   
--   <a>$sel:applicationId:ConfigurationProfile'</a>,
--   <a>configurationProfile_applicationId</a> - The application ID.
--   
--   <a>$sel:name:ConfigurationProfile'</a>,
--   <a>configurationProfile_name</a> - The name of the configuration
--   profile.
--   
--   <a>$sel:id:ConfigurationProfile'</a>, <a>configurationProfile_id</a> -
--   The configuration profile ID.
--   
--   <a>$sel:description:ConfigurationProfile'</a>,
--   <a>configurationProfile_description</a> - The configuration profile
--   description.
newConfigurationProfile :: ConfigurationProfile

-- | The ARN of an IAM role with permission to access the configuration at
--   the specified LocationUri.
configurationProfile_retrievalRoleArn :: Lens' ConfigurationProfile (Maybe Text)

-- | A list of methods for validating the configuration.
configurationProfile_validators :: Lens' ConfigurationProfile (Maybe [Validator])

-- | The URI location of the configuration.
configurationProfile_locationUri :: Lens' ConfigurationProfile (Maybe Text)

-- | The application ID.
configurationProfile_applicationId :: Lens' ConfigurationProfile (Maybe Text)

-- | The name of the configuration profile.
configurationProfile_name :: Lens' ConfigurationProfile (Maybe Text)

-- | The configuration profile ID.
configurationProfile_id :: Lens' ConfigurationProfile (Maybe Text)

-- | The configuration profile description.
configurationProfile_description :: Lens' ConfigurationProfile (Maybe Text)
instance GHC.Generics.Generic Amazonka.AppConfig.CreateConfigurationProfile.CreateConfigurationProfile
instance GHC.Show.Show Amazonka.AppConfig.CreateConfigurationProfile.CreateConfigurationProfile
instance GHC.Classes.Eq Amazonka.AppConfig.CreateConfigurationProfile.CreateConfigurationProfile
instance Amazonka.Types.AWSRequest Amazonka.AppConfig.CreateConfigurationProfile.CreateConfigurationProfile
instance Data.Hashable.Class.Hashable Amazonka.AppConfig.CreateConfigurationProfile.CreateConfigurationProfile
instance Control.DeepSeq.NFData Amazonka.AppConfig.CreateConfigurationProfile.CreateConfigurationProfile
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppConfig.CreateConfigurationProfile.CreateConfigurationProfile
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppConfig.CreateConfigurationProfile.CreateConfigurationProfile
instance Amazonka.Data.Path.ToPath Amazonka.AppConfig.CreateConfigurationProfile.CreateConfigurationProfile
instance Amazonka.Data.Query.ToQuery Amazonka.AppConfig.CreateConfigurationProfile.CreateConfigurationProfile


-- | An application in AppConfig is a logical unit of code that provides
--   capabilities for your customers. For example, an application can be a
--   microservice that runs on Amazon EC2 instances, a mobile application
--   installed by your users, a serverless application using Amazon API
--   Gateway and AWS Lambda, or any system you run on behalf of others.
module Amazonka.AppConfig.CreateApplication

-- | <i>See:</i> <a>newCreateApplication</a> smart constructor.
data CreateApplication
CreateApplication' :: Maybe Text -> Maybe (HashMap Text Text) -> Text -> CreateApplication

-- | A description of the application.
[$sel:description:CreateApplication'] :: CreateApplication -> Maybe Text

-- | Metadata to assign to the application. Tags help organize and
--   categorize your AppConfig resources. Each tag consists of a key and an
--   optional value, both of which you define.
[$sel:tags:CreateApplication'] :: CreateApplication -> Maybe (HashMap Text Text)

-- | A name for the application.
[$sel:name:CreateApplication'] :: CreateApplication -> Text

-- | Create a value of <a>CreateApplication</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:CreateApplication'</a>,
--   <a>createApplication_description</a> - A description of the
--   application.
--   
--   <a>$sel:tags:CreateApplication'</a>, <a>createApplication_tags</a> -
--   Metadata to assign to the application. Tags help organize and
--   categorize your AppConfig resources. Each tag consists of a key and an
--   optional value, both of which you define.
--   
--   <a>$sel:name:CreateApplication'</a>, <a>createApplication_name</a> - A
--   name for the application.
newCreateApplication :: Text -> CreateApplication

-- | A description of the application.
createApplication_description :: Lens' CreateApplication (Maybe Text)

-- | Metadata to assign to the application. Tags help organize and
--   categorize your AppConfig resources. Each tag consists of a key and an
--   optional value, both of which you define.
createApplication_tags :: Lens' CreateApplication (Maybe (HashMap Text Text))

-- | A name for the application.
createApplication_name :: Lens' CreateApplication Text

-- | <i>See:</i> <a>newApplication</a> smart constructor.
data Application
Application' :: Maybe Text -> Maybe Text -> Maybe Text -> Application

-- | The application name.
[$sel:name:Application'] :: Application -> Maybe Text

-- | The application ID.
[$sel:id:Application'] :: Application -> Maybe Text

-- | The description of the application.
[$sel:description:Application'] :: Application -> Maybe Text

-- | Create a value of <a>Application</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:Application'</a>, <a>application_name</a> - The
--   application name.
--   
--   <a>$sel:id:Application'</a>, <a>application_id</a> - The application
--   ID.
--   
--   <a>$sel:description:Application'</a>, <a>application_description</a> -
--   The description of the application.
newApplication :: Application

-- | The application name.
application_name :: Lens' Application (Maybe Text)

-- | The application ID.
application_id :: Lens' Application (Maybe Text)

-- | The description of the application.
application_description :: Lens' Application (Maybe Text)
instance GHC.Generics.Generic Amazonka.AppConfig.CreateApplication.CreateApplication
instance GHC.Show.Show Amazonka.AppConfig.CreateApplication.CreateApplication
instance GHC.Read.Read Amazonka.AppConfig.CreateApplication.CreateApplication
instance GHC.Classes.Eq Amazonka.AppConfig.CreateApplication.CreateApplication
instance Amazonka.Types.AWSRequest Amazonka.AppConfig.CreateApplication.CreateApplication
instance Data.Hashable.Class.Hashable Amazonka.AppConfig.CreateApplication.CreateApplication
instance Control.DeepSeq.NFData Amazonka.AppConfig.CreateApplication.CreateApplication
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppConfig.CreateApplication.CreateApplication
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppConfig.CreateApplication.CreateApplication
instance Amazonka.Data.Path.ToPath Amazonka.AppConfig.CreateApplication.CreateApplication
instance Amazonka.Data.Query.ToQuery Amazonka.AppConfig.CreateApplication.CreateApplication


-- | Deletes a tag key and value from an AppConfig resource.
module Amazonka.AppConfig.UntagResource

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | The ARN of the resource for which to remove tags.
[$sel:resourceArn:UntagResource'] :: UntagResource -> Text

-- | The tag keys to delete.
[$sel:tagKeys:UntagResource'] :: UntagResource -> [Text]

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The ARN of the resource for which
--   to remove tags.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   tag keys to delete.
newUntagResource :: Text -> UntagResource

-- | The ARN of the resource for which to remove tags.
untagResource_resourceArn :: Lens' UntagResource Text

-- | The tag keys to delete.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUntagResourceResponse :: UntagResourceResponse
instance GHC.Generics.Generic Amazonka.AppConfig.UntagResource.UntagResource
instance GHC.Show.Show Amazonka.AppConfig.UntagResource.UntagResource
instance GHC.Read.Read Amazonka.AppConfig.UntagResource.UntagResource
instance GHC.Classes.Eq Amazonka.AppConfig.UntagResource.UntagResource
instance GHC.Generics.Generic Amazonka.AppConfig.UntagResource.UntagResourceResponse
instance GHC.Show.Show Amazonka.AppConfig.UntagResource.UntagResourceResponse
instance GHC.Read.Read Amazonka.AppConfig.UntagResource.UntagResourceResponse
instance GHC.Classes.Eq Amazonka.AppConfig.UntagResource.UntagResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.AppConfig.UntagResource.UntagResource
instance Control.DeepSeq.NFData Amazonka.AppConfig.UntagResource.UntagResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.AppConfig.UntagResource.UntagResource
instance Control.DeepSeq.NFData Amazonka.AppConfig.UntagResource.UntagResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppConfig.UntagResource.UntagResource
instance Amazonka.Data.Path.ToPath Amazonka.AppConfig.UntagResource.UntagResource
instance Amazonka.Data.Query.ToQuery Amazonka.AppConfig.UntagResource.UntagResource


-- | Updates an application.
module Amazonka.AppConfig.UpdateApplication

-- | <i>See:</i> <a>newUpdateApplication</a> smart constructor.
data UpdateApplication
UpdateApplication' :: Maybe Text -> Maybe Text -> Text -> UpdateApplication

-- | The name of the application.
[$sel:name:UpdateApplication'] :: UpdateApplication -> Maybe Text

-- | A description of the application.
[$sel:description:UpdateApplication'] :: UpdateApplication -> Maybe Text

-- | The application ID.
[$sel:applicationId:UpdateApplication'] :: UpdateApplication -> Text

-- | Create a value of <a>UpdateApplication</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:UpdateApplication'</a>, <a>updateApplication_name</a> -
--   The name of the application.
--   
--   <a>$sel:description:UpdateApplication'</a>,
--   <a>updateApplication_description</a> - A description of the
--   application.
--   
--   <a>$sel:applicationId:UpdateApplication'</a>,
--   <a>updateApplication_applicationId</a> - The application ID.
newUpdateApplication :: Text -> UpdateApplication

-- | The name of the application.
updateApplication_name :: Lens' UpdateApplication (Maybe Text)

-- | A description of the application.
updateApplication_description :: Lens' UpdateApplication (Maybe Text)

-- | The application ID.
updateApplication_applicationId :: Lens' UpdateApplication Text

-- | <i>See:</i> <a>newApplication</a> smart constructor.
data Application
Application' :: Maybe Text -> Maybe Text -> Maybe Text -> Application

-- | The application name.
[$sel:name:Application'] :: Application -> Maybe Text

-- | The application ID.
[$sel:id:Application'] :: Application -> Maybe Text

-- | The description of the application.
[$sel:description:Application'] :: Application -> Maybe Text

-- | Create a value of <a>Application</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:Application'</a>, <a>application_name</a> - The
--   application name.
--   
--   <a>$sel:id:Application'</a>, <a>application_id</a> - The application
--   ID.
--   
--   <a>$sel:description:Application'</a>, <a>application_description</a> -
--   The description of the application.
newApplication :: Application

-- | The application name.
application_name :: Lens' Application (Maybe Text)

-- | The application ID.
application_id :: Lens' Application (Maybe Text)

-- | The description of the application.
application_description :: Lens' Application (Maybe Text)
instance GHC.Generics.Generic Amazonka.AppConfig.UpdateApplication.UpdateApplication
instance GHC.Show.Show Amazonka.AppConfig.UpdateApplication.UpdateApplication
instance GHC.Read.Read Amazonka.AppConfig.UpdateApplication.UpdateApplication
instance GHC.Classes.Eq Amazonka.AppConfig.UpdateApplication.UpdateApplication
instance Amazonka.Types.AWSRequest Amazonka.AppConfig.UpdateApplication.UpdateApplication
instance Data.Hashable.Class.Hashable Amazonka.AppConfig.UpdateApplication.UpdateApplication
instance Control.DeepSeq.NFData Amazonka.AppConfig.UpdateApplication.UpdateApplication
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppConfig.UpdateApplication.UpdateApplication
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppConfig.UpdateApplication.UpdateApplication
instance Amazonka.Data.Path.ToPath Amazonka.AppConfig.UpdateApplication.UpdateApplication
instance Amazonka.Data.Query.ToQuery Amazonka.AppConfig.UpdateApplication.UpdateApplication


-- | Updates a configuration profile.
module Amazonka.AppConfig.UpdateConfigurationProfile

-- | <i>See:</i> <a>newUpdateConfigurationProfile</a> smart constructor.
data UpdateConfigurationProfile
UpdateConfigurationProfile' :: Maybe Text -> Maybe [Validator] -> Maybe Text -> Maybe Text -> Text -> Text -> UpdateConfigurationProfile

-- | The ARN of an IAM role with permission to access the configuration at
--   the specified LocationUri.
[$sel:retrievalRoleArn:UpdateConfigurationProfile'] :: UpdateConfigurationProfile -> Maybe Text

-- | A list of methods for validating the configuration.
[$sel:validators:UpdateConfigurationProfile'] :: UpdateConfigurationProfile -> Maybe [Validator]

-- | The name of the configuration profile.
[$sel:name:UpdateConfigurationProfile'] :: UpdateConfigurationProfile -> Maybe Text

-- | A description of the configuration profile.
[$sel:description:UpdateConfigurationProfile'] :: UpdateConfigurationProfile -> Maybe Text

-- | The application ID.
[$sel:applicationId:UpdateConfigurationProfile'] :: UpdateConfigurationProfile -> Text

-- | The ID of the configuration profile.
[$sel:configurationProfileId:UpdateConfigurationProfile'] :: UpdateConfigurationProfile -> Text

-- | Create a value of <a>UpdateConfigurationProfile</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:retrievalRoleArn:UpdateConfigurationProfile'</a>,
--   <a>updateConfigurationProfile_retrievalRoleArn</a> - The ARN of an IAM
--   role with permission to access the configuration at the specified
--   LocationUri.
--   
--   <a>$sel:validators:UpdateConfigurationProfile'</a>,
--   <a>updateConfigurationProfile_validators</a> - A list of methods for
--   validating the configuration.
--   
--   <a>$sel:name:UpdateConfigurationProfile'</a>,
--   <a>updateConfigurationProfile_name</a> - The name of the configuration
--   profile.
--   
--   <a>$sel:description:UpdateConfigurationProfile'</a>,
--   <a>updateConfigurationProfile_description</a> - A description of the
--   configuration profile.
--   
--   <a>$sel:applicationId:UpdateConfigurationProfile'</a>,
--   <a>updateConfigurationProfile_applicationId</a> - The application ID.
--   
--   <a>$sel:configurationProfileId:UpdateConfigurationProfile'</a>,
--   <a>updateConfigurationProfile_configurationProfileId</a> - The ID of
--   the configuration profile.
newUpdateConfigurationProfile :: Text -> Text -> UpdateConfigurationProfile

-- | The ARN of an IAM role with permission to access the configuration at
--   the specified LocationUri.
updateConfigurationProfile_retrievalRoleArn :: Lens' UpdateConfigurationProfile (Maybe Text)

-- | A list of methods for validating the configuration.
updateConfigurationProfile_validators :: Lens' UpdateConfigurationProfile (Maybe [Validator])

-- | The name of the configuration profile.
updateConfigurationProfile_name :: Lens' UpdateConfigurationProfile (Maybe Text)

-- | A description of the configuration profile.
updateConfigurationProfile_description :: Lens' UpdateConfigurationProfile (Maybe Text)

-- | The application ID.
updateConfigurationProfile_applicationId :: Lens' UpdateConfigurationProfile Text

-- | The ID of the configuration profile.
updateConfigurationProfile_configurationProfileId :: Lens' UpdateConfigurationProfile Text

-- | <i>See:</i> <a>newConfigurationProfile</a> smart constructor.
data ConfigurationProfile
ConfigurationProfile' :: Maybe Text -> Maybe [Validator] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> ConfigurationProfile

-- | The ARN of an IAM role with permission to access the configuration at
--   the specified LocationUri.
[$sel:retrievalRoleArn:ConfigurationProfile'] :: ConfigurationProfile -> Maybe Text

-- | A list of methods for validating the configuration.
[$sel:validators:ConfigurationProfile'] :: ConfigurationProfile -> Maybe [Validator]

-- | The URI location of the configuration.
[$sel:locationUri:ConfigurationProfile'] :: ConfigurationProfile -> Maybe Text

-- | The application ID.
[$sel:applicationId:ConfigurationProfile'] :: ConfigurationProfile -> Maybe Text

-- | The name of the configuration profile.
[$sel:name:ConfigurationProfile'] :: ConfigurationProfile -> Maybe Text

-- | The configuration profile ID.
[$sel:id:ConfigurationProfile'] :: ConfigurationProfile -> Maybe Text

-- | The configuration profile description.
[$sel:description:ConfigurationProfile'] :: ConfigurationProfile -> Maybe Text

-- | Create a value of <a>ConfigurationProfile</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:retrievalRoleArn:ConfigurationProfile'</a>,
--   <a>configurationProfile_retrievalRoleArn</a> - The ARN of an IAM role
--   with permission to access the configuration at the specified
--   LocationUri.
--   
--   <a>$sel:validators:ConfigurationProfile'</a>,
--   <a>configurationProfile_validators</a> - A list of methods for
--   validating the configuration.
--   
--   <a>$sel:locationUri:ConfigurationProfile'</a>,
--   <a>configurationProfile_locationUri</a> - The URI location of the
--   configuration.
--   
--   <a>$sel:applicationId:ConfigurationProfile'</a>,
--   <a>configurationProfile_applicationId</a> - The application ID.
--   
--   <a>$sel:name:ConfigurationProfile'</a>,
--   <a>configurationProfile_name</a> - The name of the configuration
--   profile.
--   
--   <a>$sel:id:ConfigurationProfile'</a>, <a>configurationProfile_id</a> -
--   The configuration profile ID.
--   
--   <a>$sel:description:ConfigurationProfile'</a>,
--   <a>configurationProfile_description</a> - The configuration profile
--   description.
newConfigurationProfile :: ConfigurationProfile

-- | The ARN of an IAM role with permission to access the configuration at
--   the specified LocationUri.
configurationProfile_retrievalRoleArn :: Lens' ConfigurationProfile (Maybe Text)

-- | A list of methods for validating the configuration.
configurationProfile_validators :: Lens' ConfigurationProfile (Maybe [Validator])

-- | The URI location of the configuration.
configurationProfile_locationUri :: Lens' ConfigurationProfile (Maybe Text)

-- | The application ID.
configurationProfile_applicationId :: Lens' ConfigurationProfile (Maybe Text)

-- | The name of the configuration profile.
configurationProfile_name :: Lens' ConfigurationProfile (Maybe Text)

-- | The configuration profile ID.
configurationProfile_id :: Lens' ConfigurationProfile (Maybe Text)

-- | The configuration profile description.
configurationProfile_description :: Lens' ConfigurationProfile (Maybe Text)
instance GHC.Generics.Generic Amazonka.AppConfig.UpdateConfigurationProfile.UpdateConfigurationProfile
instance GHC.Show.Show Amazonka.AppConfig.UpdateConfigurationProfile.UpdateConfigurationProfile
instance GHC.Classes.Eq Amazonka.AppConfig.UpdateConfigurationProfile.UpdateConfigurationProfile
instance Amazonka.Types.AWSRequest Amazonka.AppConfig.UpdateConfigurationProfile.UpdateConfigurationProfile
instance Data.Hashable.Class.Hashable Amazonka.AppConfig.UpdateConfigurationProfile.UpdateConfigurationProfile
instance Control.DeepSeq.NFData Amazonka.AppConfig.UpdateConfigurationProfile.UpdateConfigurationProfile
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppConfig.UpdateConfigurationProfile.UpdateConfigurationProfile
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppConfig.UpdateConfigurationProfile.UpdateConfigurationProfile
instance Amazonka.Data.Path.ToPath Amazonka.AppConfig.UpdateConfigurationProfile.UpdateConfigurationProfile
instance Amazonka.Data.Query.ToQuery Amazonka.AppConfig.UpdateConfigurationProfile.UpdateConfigurationProfile


-- | Updates a deployment strategy.
module Amazonka.AppConfig.UpdateDeploymentStrategy

-- | <i>See:</i> <a>newUpdateDeploymentStrategy</a> smart constructor.
data UpdateDeploymentStrategy
UpdateDeploymentStrategy' :: Maybe Double -> Maybe Natural -> Maybe Natural -> Maybe Text -> Maybe GrowthType -> Text -> UpdateDeploymentStrategy

-- | The percentage of targets to receive a deployed configuration during
--   each interval.
[$sel:growthFactor:UpdateDeploymentStrategy'] :: UpdateDeploymentStrategy -> Maybe Double

-- | Total amount of time for a deployment to last.
[$sel:deploymentDurationInMinutes:UpdateDeploymentStrategy'] :: UpdateDeploymentStrategy -> Maybe Natural

-- | The amount of time AppConfig monitors for alarms before considering
--   the deployment to be complete and no longer eligible for automatic
--   roll back.
[$sel:finalBakeTimeInMinutes:UpdateDeploymentStrategy'] :: UpdateDeploymentStrategy -> Maybe Natural

-- | A description of the deployment strategy.
[$sel:description:UpdateDeploymentStrategy'] :: UpdateDeploymentStrategy -> Maybe Text

-- | The algorithm used to define how percentage grows over time. AWS
--   AppConfig supports the following growth types:
--   
--   <b>Linear</b>: For this type, AppConfig processes the deployment by
--   increments of the growth factor evenly distributed over the deployment
--   time. For example, a linear deployment that uses a growth factor of 20
--   initially makes the configuration available to 20 percent of the
--   targets. After 1/5th of the deployment time has passed, the system
--   updates the percentage to 40 percent. This continues until 100% of the
--   targets are set to receive the deployed configuration.
--   
--   <b>Exponential</b>: For this type, AppConfig processes the deployment
--   exponentially using the following formula: <tt>G*(2^N)</tt>. In this
--   formula, <tt>G</tt> is the growth factor specified by the user and
--   <tt>N</tt> is the number of steps until the configuration is deployed
--   to all targets. For example, if you specify a growth factor of 2, then
--   the system rolls out the configuration as follows:
--   
--   <pre>
--   2*(2^0)
--   </pre>
--   
--   <pre>
--   2*(2^1)
--   </pre>
--   
--   <pre>
--   2*(2^2)
--   </pre>
--   
--   Expressed numerically, the deployment rolls out as follows: 2% of the
--   targets, 4% of the targets, 8% of the targets, and continues until the
--   configuration has been deployed to all targets.
[$sel:growthType:UpdateDeploymentStrategy'] :: UpdateDeploymentStrategy -> Maybe GrowthType

-- | The deployment strategy ID.
[$sel:deploymentStrategyId:UpdateDeploymentStrategy'] :: UpdateDeploymentStrategy -> Text

-- | Create a value of <a>UpdateDeploymentStrategy</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:growthFactor:UpdateDeploymentStrategy'</a>,
--   <a>updateDeploymentStrategy_growthFactor</a> - The percentage of
--   targets to receive a deployed configuration during each interval.
--   
--   <a>$sel:deploymentDurationInMinutes:UpdateDeploymentStrategy'</a>,
--   <a>updateDeploymentStrategy_deploymentDurationInMinutes</a> - Total
--   amount of time for a deployment to last.
--   
--   <a>$sel:finalBakeTimeInMinutes:UpdateDeploymentStrategy'</a>,
--   <a>updateDeploymentStrategy_finalBakeTimeInMinutes</a> - The amount of
--   time AppConfig monitors for alarms before considering the deployment
--   to be complete and no longer eligible for automatic roll back.
--   
--   <a>$sel:description:UpdateDeploymentStrategy'</a>,
--   <a>updateDeploymentStrategy_description</a> - A description of the
--   deployment strategy.
--   
--   <a>$sel:growthType:UpdateDeploymentStrategy'</a>,
--   <a>updateDeploymentStrategy_growthType</a> - The algorithm used to
--   define how percentage grows over time. AWS AppConfig supports the
--   following growth types:
--   
--   <b>Linear</b>: For this type, AppConfig processes the deployment by
--   increments of the growth factor evenly distributed over the deployment
--   time. For example, a linear deployment that uses a growth factor of 20
--   initially makes the configuration available to 20 percent of the
--   targets. After 1/5th of the deployment time has passed, the system
--   updates the percentage to 40 percent. This continues until 100% of the
--   targets are set to receive the deployed configuration.
--   
--   <b>Exponential</b>: For this type, AppConfig processes the deployment
--   exponentially using the following formula: <tt>G*(2^N)</tt>. In this
--   formula, <tt>G</tt> is the growth factor specified by the user and
--   <tt>N</tt> is the number of steps until the configuration is deployed
--   to all targets. For example, if you specify a growth factor of 2, then
--   the system rolls out the configuration as follows:
--   
--   <pre>
--   2*(2^0)
--   </pre>
--   
--   <pre>
--   2*(2^1)
--   </pre>
--   
--   <pre>
--   2*(2^2)
--   </pre>
--   
--   Expressed numerically, the deployment rolls out as follows: 2% of the
--   targets, 4% of the targets, 8% of the targets, and continues until the
--   configuration has been deployed to all targets.
--   
--   <a>$sel:deploymentStrategyId:UpdateDeploymentStrategy'</a>,
--   <a>updateDeploymentStrategy_deploymentStrategyId</a> - The deployment
--   strategy ID.
newUpdateDeploymentStrategy :: Text -> UpdateDeploymentStrategy

-- | The percentage of targets to receive a deployed configuration during
--   each interval.
updateDeploymentStrategy_growthFactor :: Lens' UpdateDeploymentStrategy (Maybe Double)

-- | Total amount of time for a deployment to last.
updateDeploymentStrategy_deploymentDurationInMinutes :: Lens' UpdateDeploymentStrategy (Maybe Natural)

-- | The amount of time AppConfig monitors for alarms before considering
--   the deployment to be complete and no longer eligible for automatic
--   roll back.
updateDeploymentStrategy_finalBakeTimeInMinutes :: Lens' UpdateDeploymentStrategy (Maybe Natural)

-- | A description of the deployment strategy.
updateDeploymentStrategy_description :: Lens' UpdateDeploymentStrategy (Maybe Text)

-- | The algorithm used to define how percentage grows over time. AWS
--   AppConfig supports the following growth types:
--   
--   <b>Linear</b>: For this type, AppConfig processes the deployment by
--   increments of the growth factor evenly distributed over the deployment
--   time. For example, a linear deployment that uses a growth factor of 20
--   initially makes the configuration available to 20 percent of the
--   targets. After 1/5th of the deployment time has passed, the system
--   updates the percentage to 40 percent. This continues until 100% of the
--   targets are set to receive the deployed configuration.
--   
--   <b>Exponential</b>: For this type, AppConfig processes the deployment
--   exponentially using the following formula: <tt>G*(2^N)</tt>. In this
--   formula, <tt>G</tt> is the growth factor specified by the user and
--   <tt>N</tt> is the number of steps until the configuration is deployed
--   to all targets. For example, if you specify a growth factor of 2, then
--   the system rolls out the configuration as follows:
--   
--   <pre>
--   2*(2^0)
--   </pre>
--   
--   <pre>
--   2*(2^1)
--   </pre>
--   
--   <pre>
--   2*(2^2)
--   </pre>
--   
--   Expressed numerically, the deployment rolls out as follows: 2% of the
--   targets, 4% of the targets, 8% of the targets, and continues until the
--   configuration has been deployed to all targets.
updateDeploymentStrategy_growthType :: Lens' UpdateDeploymentStrategy (Maybe GrowthType)

-- | The deployment strategy ID.
updateDeploymentStrategy_deploymentStrategyId :: Lens' UpdateDeploymentStrategy Text

-- | <i>See:</i> <a>newDeploymentStrategy</a> smart constructor.
data DeploymentStrategy
DeploymentStrategy' :: Maybe Double -> Maybe ReplicateTo -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Natural -> Maybe Text -> Maybe GrowthType -> DeploymentStrategy

-- | The percentage of targets that received a deployed configuration
--   during each interval.
[$sel:growthFactor:DeploymentStrategy'] :: DeploymentStrategy -> Maybe Double

-- | Save the deployment strategy to a Systems Manager (SSM) document.
[$sel:replicateTo:DeploymentStrategy'] :: DeploymentStrategy -> Maybe ReplicateTo

-- | The name of the deployment strategy.
[$sel:name:DeploymentStrategy'] :: DeploymentStrategy -> Maybe Text

-- | The deployment strategy ID.
[$sel:id:DeploymentStrategy'] :: DeploymentStrategy -> Maybe Text

-- | Total amount of time the deployment lasted.
[$sel:deploymentDurationInMinutes:DeploymentStrategy'] :: DeploymentStrategy -> Maybe Natural

-- | The amount of time AppConfig monitored for alarms before considering
--   the deployment to be complete and no longer eligible for automatic
--   roll back.
[$sel:finalBakeTimeInMinutes:DeploymentStrategy'] :: DeploymentStrategy -> Maybe Natural

-- | The description of the deployment strategy.
[$sel:description:DeploymentStrategy'] :: DeploymentStrategy -> Maybe Text

-- | The algorithm used to define how percentage grew over time.
[$sel:growthType:DeploymentStrategy'] :: DeploymentStrategy -> Maybe GrowthType

-- | Create a value of <a>DeploymentStrategy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:growthFactor:DeploymentStrategy'</a>,
--   <a>deploymentStrategy_growthFactor</a> - The percentage of targets
--   that received a deployed configuration during each interval.
--   
--   <a>$sel:replicateTo:DeploymentStrategy'</a>,
--   <a>deploymentStrategy_replicateTo</a> - Save the deployment strategy
--   to a Systems Manager (SSM) document.
--   
--   <a>$sel:name:DeploymentStrategy'</a>, <a>deploymentStrategy_name</a> -
--   The name of the deployment strategy.
--   
--   <a>$sel:id:DeploymentStrategy'</a>, <a>deploymentStrategy_id</a> - The
--   deployment strategy ID.
--   
--   <a>$sel:deploymentDurationInMinutes:DeploymentStrategy'</a>,
--   <a>deploymentStrategy_deploymentDurationInMinutes</a> - Total amount
--   of time the deployment lasted.
--   
--   <a>$sel:finalBakeTimeInMinutes:DeploymentStrategy'</a>,
--   <a>deploymentStrategy_finalBakeTimeInMinutes</a> - The amount of time
--   AppConfig monitored for alarms before considering the deployment to be
--   complete and no longer eligible for automatic roll back.
--   
--   <a>$sel:description:DeploymentStrategy'</a>,
--   <a>deploymentStrategy_description</a> - The description of the
--   deployment strategy.
--   
--   <a>$sel:growthType:DeploymentStrategy'</a>,
--   <a>deploymentStrategy_growthType</a> - The algorithm used to define
--   how percentage grew over time.
newDeploymentStrategy :: DeploymentStrategy

-- | The percentage of targets that received a deployed configuration
--   during each interval.
deploymentStrategy_growthFactor :: Lens' DeploymentStrategy (Maybe Double)

-- | Save the deployment strategy to a Systems Manager (SSM) document.
deploymentStrategy_replicateTo :: Lens' DeploymentStrategy (Maybe ReplicateTo)

-- | The name of the deployment strategy.
deploymentStrategy_name :: Lens' DeploymentStrategy (Maybe Text)

-- | The deployment strategy ID.
deploymentStrategy_id :: Lens' DeploymentStrategy (Maybe Text)

-- | Total amount of time the deployment lasted.
deploymentStrategy_deploymentDurationInMinutes :: Lens' DeploymentStrategy (Maybe Natural)

-- | The amount of time AppConfig monitored for alarms before considering
--   the deployment to be complete and no longer eligible for automatic
--   roll back.
deploymentStrategy_finalBakeTimeInMinutes :: Lens' DeploymentStrategy (Maybe Natural)

-- | The description of the deployment strategy.
deploymentStrategy_description :: Lens' DeploymentStrategy (Maybe Text)

-- | The algorithm used to define how percentage grew over time.
deploymentStrategy_growthType :: Lens' DeploymentStrategy (Maybe GrowthType)
instance GHC.Generics.Generic Amazonka.AppConfig.UpdateDeploymentStrategy.UpdateDeploymentStrategy
instance GHC.Show.Show Amazonka.AppConfig.UpdateDeploymentStrategy.UpdateDeploymentStrategy
instance GHC.Read.Read Amazonka.AppConfig.UpdateDeploymentStrategy.UpdateDeploymentStrategy
instance GHC.Classes.Eq Amazonka.AppConfig.UpdateDeploymentStrategy.UpdateDeploymentStrategy
instance Amazonka.Types.AWSRequest Amazonka.AppConfig.UpdateDeploymentStrategy.UpdateDeploymentStrategy
instance Data.Hashable.Class.Hashable Amazonka.AppConfig.UpdateDeploymentStrategy.UpdateDeploymentStrategy
instance Control.DeepSeq.NFData Amazonka.AppConfig.UpdateDeploymentStrategy.UpdateDeploymentStrategy
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppConfig.UpdateDeploymentStrategy.UpdateDeploymentStrategy
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppConfig.UpdateDeploymentStrategy.UpdateDeploymentStrategy
instance Amazonka.Data.Path.ToPath Amazonka.AppConfig.UpdateDeploymentStrategy.UpdateDeploymentStrategy
instance Amazonka.Data.Query.ToQuery Amazonka.AppConfig.UpdateDeploymentStrategy.UpdateDeploymentStrategy


-- | Updates an environment.
module Amazonka.AppConfig.UpdateEnvironment

-- | <i>See:</i> <a>newUpdateEnvironment</a> smart constructor.
data UpdateEnvironment
UpdateEnvironment' :: Maybe [Monitor] -> Maybe Text -> Maybe Text -> Text -> Text -> UpdateEnvironment

-- | Amazon CloudWatch alarms to monitor during the deployment process.
[$sel:monitors:UpdateEnvironment'] :: UpdateEnvironment -> Maybe [Monitor]

-- | The name of the environment.
[$sel:name:UpdateEnvironment'] :: UpdateEnvironment -> Maybe Text

-- | A description of the environment.
[$sel:description:UpdateEnvironment'] :: UpdateEnvironment -> Maybe Text

-- | The application ID.
[$sel:applicationId:UpdateEnvironment'] :: UpdateEnvironment -> Text

-- | The environment ID.
[$sel:environmentId:UpdateEnvironment'] :: UpdateEnvironment -> Text

-- | Create a value of <a>UpdateEnvironment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:monitors:UpdateEnvironment'</a>,
--   <a>updateEnvironment_monitors</a> - Amazon CloudWatch alarms to
--   monitor during the deployment process.
--   
--   <a>$sel:name:UpdateEnvironment'</a>, <a>updateEnvironment_name</a> -
--   The name of the environment.
--   
--   <a>$sel:description:UpdateEnvironment'</a>,
--   <a>updateEnvironment_description</a> - A description of the
--   environment.
--   
--   <a>$sel:applicationId:UpdateEnvironment'</a>,
--   <a>updateEnvironment_applicationId</a> - The application ID.
--   
--   <a>$sel:environmentId:UpdateEnvironment'</a>,
--   <a>updateEnvironment_environmentId</a> - The environment ID.
newUpdateEnvironment :: Text -> Text -> UpdateEnvironment

-- | Amazon CloudWatch alarms to monitor during the deployment process.
updateEnvironment_monitors :: Lens' UpdateEnvironment (Maybe [Monitor])

-- | The name of the environment.
updateEnvironment_name :: Lens' UpdateEnvironment (Maybe Text)

-- | A description of the environment.
updateEnvironment_description :: Lens' UpdateEnvironment (Maybe Text)

-- | The application ID.
updateEnvironment_applicationId :: Lens' UpdateEnvironment Text

-- | The environment ID.
updateEnvironment_environmentId :: Lens' UpdateEnvironment Text

-- | <i>See:</i> <a>newEnvironment</a> smart constructor.
data Environment
Environment' :: Maybe EnvironmentState -> Maybe [Monitor] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Environment

-- | The state of the environment. An environment can be in one of the
--   following states: <tt>READY_FOR_DEPLOYMENT</tt>, <tt>DEPLOYING</tt>,
--   <tt>ROLLING_BACK</tt>, or <tt>ROLLED_BACK</tt>
[$sel:state:Environment'] :: Environment -> Maybe EnvironmentState

-- | Amazon CloudWatch alarms monitored during the deployment.
[$sel:monitors:Environment'] :: Environment -> Maybe [Monitor]

-- | The application ID.
[$sel:applicationId:Environment'] :: Environment -> Maybe Text

-- | The name of the environment.
[$sel:name:Environment'] :: Environment -> Maybe Text

-- | The environment ID.
[$sel:id:Environment'] :: Environment -> Maybe Text

-- | The description of the environment.
[$sel:description:Environment'] :: Environment -> Maybe Text

-- | Create a value of <a>Environment</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:Environment'</a>, <a>environment_state</a> - The state
--   of the environment. An environment can be in one of the following
--   states: <tt>READY_FOR_DEPLOYMENT</tt>, <tt>DEPLOYING</tt>,
--   <tt>ROLLING_BACK</tt>, or <tt>ROLLED_BACK</tt>
--   
--   <a>$sel:monitors:Environment'</a>, <a>environment_monitors</a> -
--   Amazon CloudWatch alarms monitored during the deployment.
--   
--   <a>$sel:applicationId:Environment'</a>,
--   <a>environment_applicationId</a> - The application ID.
--   
--   <a>$sel:name:Environment'</a>, <a>environment_name</a> - The name of
--   the environment.
--   
--   <a>$sel:id:Environment'</a>, <a>environment_id</a> - The environment
--   ID.
--   
--   <a>$sel:description:Environment'</a>, <a>environment_description</a> -
--   The description of the environment.
newEnvironment :: Environment

-- | The state of the environment. An environment can be in one of the
--   following states: <tt>READY_FOR_DEPLOYMENT</tt>, <tt>DEPLOYING</tt>,
--   <tt>ROLLING_BACK</tt>, or <tt>ROLLED_BACK</tt>
environment_state :: Lens' Environment (Maybe EnvironmentState)

-- | Amazon CloudWatch alarms monitored during the deployment.
environment_monitors :: Lens' Environment (Maybe [Monitor])

-- | The application ID.
environment_applicationId :: Lens' Environment (Maybe Text)

-- | The name of the environment.
environment_name :: Lens' Environment (Maybe Text)

-- | The environment ID.
environment_id :: Lens' Environment (Maybe Text)

-- | The description of the environment.
environment_description :: Lens' Environment (Maybe Text)
instance GHC.Generics.Generic Amazonka.AppConfig.UpdateEnvironment.UpdateEnvironment
instance GHC.Show.Show Amazonka.AppConfig.UpdateEnvironment.UpdateEnvironment
instance GHC.Read.Read Amazonka.AppConfig.UpdateEnvironment.UpdateEnvironment
instance GHC.Classes.Eq Amazonka.AppConfig.UpdateEnvironment.UpdateEnvironment
instance Amazonka.Types.AWSRequest Amazonka.AppConfig.UpdateEnvironment.UpdateEnvironment
instance Data.Hashable.Class.Hashable Amazonka.AppConfig.UpdateEnvironment.UpdateEnvironment
instance Control.DeepSeq.NFData Amazonka.AppConfig.UpdateEnvironment.UpdateEnvironment
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppConfig.UpdateEnvironment.UpdateEnvironment
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppConfig.UpdateEnvironment.UpdateEnvironment
instance Amazonka.Data.Path.ToPath Amazonka.AppConfig.UpdateEnvironment.UpdateEnvironment
instance Amazonka.Data.Query.ToQuery Amazonka.AppConfig.UpdateEnvironment.UpdateEnvironment


-- | Uses the validators in a configuration profile to validate a
--   configuration.
module Amazonka.AppConfig.ValidateConfiguration

-- | <i>See:</i> <a>newValidateConfiguration</a> smart constructor.
data ValidateConfiguration
ValidateConfiguration' :: Text -> Text -> Text -> ValidateConfiguration

-- | The application ID.
[$sel:applicationId:ValidateConfiguration'] :: ValidateConfiguration -> Text

-- | The configuration profile ID.
[$sel:configurationProfileId:ValidateConfiguration'] :: ValidateConfiguration -> Text

-- | The version of the configuration to validate.
[$sel:configurationVersion:ValidateConfiguration'] :: ValidateConfiguration -> Text

-- | Create a value of <a>ValidateConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationId:ValidateConfiguration'</a>,
--   <a>validateConfiguration_applicationId</a> - The application ID.
--   
--   <a>$sel:configurationProfileId:ValidateConfiguration'</a>,
--   <a>validateConfiguration_configurationProfileId</a> - The
--   configuration profile ID.
--   
--   <a>$sel:configurationVersion:ValidateConfiguration'</a>,
--   <a>validateConfiguration_configurationVersion</a> - The version of the
--   configuration to validate.
newValidateConfiguration :: Text -> Text -> Text -> ValidateConfiguration

-- | The application ID.
validateConfiguration_applicationId :: Lens' ValidateConfiguration Text

-- | The configuration profile ID.
validateConfiguration_configurationProfileId :: Lens' ValidateConfiguration Text

-- | The version of the configuration to validate.
validateConfiguration_configurationVersion :: Lens' ValidateConfiguration Text

-- | <i>See:</i> <a>newValidateConfigurationResponse</a> smart constructor.
data ValidateConfigurationResponse
ValidateConfigurationResponse' :: ValidateConfigurationResponse

-- | Create a value of <a>ValidateConfigurationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newValidateConfigurationResponse :: ValidateConfigurationResponse
instance GHC.Generics.Generic Amazonka.AppConfig.ValidateConfiguration.ValidateConfiguration
instance GHC.Show.Show Amazonka.AppConfig.ValidateConfiguration.ValidateConfiguration
instance GHC.Read.Read Amazonka.AppConfig.ValidateConfiguration.ValidateConfiguration
instance GHC.Classes.Eq Amazonka.AppConfig.ValidateConfiguration.ValidateConfiguration
instance GHC.Generics.Generic Amazonka.AppConfig.ValidateConfiguration.ValidateConfigurationResponse
instance GHC.Show.Show Amazonka.AppConfig.ValidateConfiguration.ValidateConfigurationResponse
instance GHC.Read.Read Amazonka.AppConfig.ValidateConfiguration.ValidateConfigurationResponse
instance GHC.Classes.Eq Amazonka.AppConfig.ValidateConfiguration.ValidateConfigurationResponse
instance Amazonka.Types.AWSRequest Amazonka.AppConfig.ValidateConfiguration.ValidateConfiguration
instance Control.DeepSeq.NFData Amazonka.AppConfig.ValidateConfiguration.ValidateConfigurationResponse
instance Data.Hashable.Class.Hashable Amazonka.AppConfig.ValidateConfiguration.ValidateConfiguration
instance Control.DeepSeq.NFData Amazonka.AppConfig.ValidateConfiguration.ValidateConfiguration
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppConfig.ValidateConfiguration.ValidateConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppConfig.ValidateConfiguration.ValidateConfiguration
instance Amazonka.Data.Path.ToPath Amazonka.AppConfig.ValidateConfiguration.ValidateConfiguration
instance Amazonka.Data.Query.ToQuery Amazonka.AppConfig.ValidateConfiguration.ValidateConfiguration


module Amazonka.AppConfig.Lens

-- | A token to start the list. Use this token to get the next set of
--   results.
listEnvironments_nextToken :: Lens' ListEnvironments (Maybe Text)

-- | The maximum number of items to return for this call. The call also
--   returns a token that you can specify in a subsequent call to get the
--   next set of results.
listEnvironments_maxResults :: Lens' ListEnvironments (Maybe Natural)

-- | The application ID.
listEnvironments_applicationId :: Lens' ListEnvironments Text

-- | The elements from this collection.
listEnvironmentsResponse_items :: Lens' ListEnvironmentsResponse (Maybe [Environment])

-- | The token for the next set of items to return. Use this token to get
--   the next set of results.
listEnvironmentsResponse_nextToken :: Lens' ListEnvironmentsResponse (Maybe Text)

-- | The response's http status code.
listEnvironmentsResponse_httpStatus :: Lens' ListEnvironmentsResponse Int

-- | Amazon CloudWatch alarms to monitor during the deployment process.
updateEnvironment_monitors :: Lens' UpdateEnvironment (Maybe [Monitor])

-- | The name of the environment.
updateEnvironment_name :: Lens' UpdateEnvironment (Maybe Text)

-- | A description of the environment.
updateEnvironment_description :: Lens' UpdateEnvironment (Maybe Text)

-- | The application ID.
updateEnvironment_applicationId :: Lens' UpdateEnvironment Text

-- | The environment ID.
updateEnvironment_environmentId :: Lens' UpdateEnvironment Text

-- | The state of the environment. An environment can be in one of the
--   following states: <tt>READY_FOR_DEPLOYMENT</tt>, <tt>DEPLOYING</tt>,
--   <tt>ROLLING_BACK</tt>, or <tt>ROLLED_BACK</tt>
environment_state :: Lens' Environment (Maybe EnvironmentState)

-- | Amazon CloudWatch alarms monitored during the deployment.
environment_monitors :: Lens' Environment (Maybe [Monitor])

-- | The application ID.
environment_applicationId :: Lens' Environment (Maybe Text)

-- | The name of the environment.
environment_name :: Lens' Environment (Maybe Text)

-- | The environment ID.
environment_id :: Lens' Environment (Maybe Text)

-- | The description of the environment.
environment_description :: Lens' Environment (Maybe Text)

-- | The application ID that includes the environment you want to delete.
deleteEnvironment_applicationId :: Lens' DeleteEnvironment Text

-- | The ID of the environment you want to delete.
deleteEnvironment_environmentId :: Lens' DeleteEnvironment Text

-- | The ID of the deployment strategy to get.
getDeploymentStrategy_deploymentStrategyId :: Lens' GetDeploymentStrategy Text

-- | The percentage of targets that received a deployed configuration
--   during each interval.
deploymentStrategy_growthFactor :: Lens' DeploymentStrategy (Maybe Double)

-- | Save the deployment strategy to a Systems Manager (SSM) document.
deploymentStrategy_replicateTo :: Lens' DeploymentStrategy (Maybe ReplicateTo)

-- | The name of the deployment strategy.
deploymentStrategy_name :: Lens' DeploymentStrategy (Maybe Text)

-- | The deployment strategy ID.
deploymentStrategy_id :: Lens' DeploymentStrategy (Maybe Text)

-- | Total amount of time the deployment lasted.
deploymentStrategy_deploymentDurationInMinutes :: Lens' DeploymentStrategy (Maybe Natural)

-- | The amount of time AppConfig monitored for alarms before considering
--   the deployment to be complete and no longer eligible for automatic
--   roll back.
deploymentStrategy_finalBakeTimeInMinutes :: Lens' DeploymentStrategy (Maybe Natural)

-- | The description of the deployment strategy.
deploymentStrategy_description :: Lens' DeploymentStrategy (Maybe Text)

-- | The algorithm used to define how percentage grew over time.
deploymentStrategy_growthType :: Lens' DeploymentStrategy (Maybe GrowthType)

-- | The ARN of an IAM role with permission to access the configuration at
--   the specified LocationUri.
createConfigurationProfile_retrievalRoleArn :: Lens' CreateConfigurationProfile (Maybe Text)

-- | A list of methods for validating the configuration.
createConfigurationProfile_validators :: Lens' CreateConfigurationProfile (Maybe [Validator])

-- | A description of the configuration profile.
createConfigurationProfile_description :: Lens' CreateConfigurationProfile (Maybe Text)

-- | Metadata to assign to the configuration profile. Tags help organize
--   and categorize your AppConfig resources. Each tag consists of a key
--   and an optional value, both of which you define.
createConfigurationProfile_tags :: Lens' CreateConfigurationProfile (Maybe (HashMap Text Text))

-- | The application ID.
createConfigurationProfile_applicationId :: Lens' CreateConfigurationProfile Text

-- | A name for the configuration profile.
createConfigurationProfile_name :: Lens' CreateConfigurationProfile Text

-- | A URI to locate the configuration. You can specify a Systems Manager
--   (SSM) document, an SSM Parameter Store parameter, or an Amazon S3
--   object. For an SSM document, specify either the document name in the
--   format <tt>ssm-document://&lt;Document_name&gt;</tt> or the Amazon
--   Resource Name (ARN). For a parameter, specify either the parameter
--   name in the format <tt>ssm-parameter://&lt;Parameter_name&gt;</tt> or
--   the ARN. For an Amazon S3 object, specify the URI in the following
--   format: <tt>s3://&lt;bucket&gt;/&lt;objectKey&gt; </tt>. Here is an
--   example: s3://my-bucket/my-app/us-east-1/my-config.json
createConfigurationProfile_locationUri :: Lens' CreateConfigurationProfile Text

-- | The ARN of an IAM role with permission to access the configuration at
--   the specified LocationUri.
configurationProfile_retrievalRoleArn :: Lens' ConfigurationProfile (Maybe Text)

-- | A list of methods for validating the configuration.
configurationProfile_validators :: Lens' ConfigurationProfile (Maybe [Validator])

-- | The URI location of the configuration.
configurationProfile_locationUri :: Lens' ConfigurationProfile (Maybe Text)

-- | The application ID.
configurationProfile_applicationId :: Lens' ConfigurationProfile (Maybe Text)

-- | The name of the configuration profile.
configurationProfile_name :: Lens' ConfigurationProfile (Maybe Text)

-- | The configuration profile ID.
configurationProfile_id :: Lens' ConfigurationProfile (Maybe Text)

-- | The configuration profile description.
configurationProfile_description :: Lens' ConfigurationProfile (Maybe Text)

-- | The ID of the application that includes the deployment you want to
--   get.
getDeployment_applicationId :: Lens' GetDeployment Text

-- | The ID of the environment that includes the deployment you want to
--   get.
getDeployment_environmentId :: Lens' GetDeployment Text

-- | The sequence number of the deployment.
getDeployment_deploymentNumber :: Lens' GetDeployment Int

-- | The percentage of targets to receive a deployed configuration during
--   each interval.
deployment_growthFactor :: Lens' Deployment (Maybe Double)

-- | The name of the configuration.
deployment_configurationName :: Lens' Deployment (Maybe Text)

-- | The state of the deployment.
deployment_state :: Lens' Deployment (Maybe DeploymentState)

-- | The ID of the deployment strategy that was deployed.
deployment_deploymentStrategyId :: Lens' Deployment (Maybe Text)

-- | The sequence number of the deployment.
deployment_deploymentNumber :: Lens' Deployment (Maybe Int)

-- | The configuration version that was deployed.
deployment_configurationVersion :: Lens' Deployment (Maybe Text)

-- | A list containing all events related to a deployment. The most recent
--   events are displayed first.
deployment_eventLog :: Lens' Deployment (Maybe [DeploymentEvent])

-- | The percentage of targets for which the deployment is available.
deployment_percentageComplete :: Lens' Deployment (Maybe Double)

-- | The time the deployment started.
deployment_startedAt :: Lens' Deployment (Maybe UTCTime)

-- | The ID of the application that was deployed.
deployment_applicationId :: Lens' Deployment (Maybe Text)

-- | Total amount of time the deployment lasted.
deployment_deploymentDurationInMinutes :: Lens' Deployment (Maybe Natural)

-- | The ID of the environment that was deployed.
deployment_environmentId :: Lens' Deployment (Maybe Text)

-- | The time the deployment completed.
deployment_completedAt :: Lens' Deployment (Maybe UTCTime)

-- | Information about the source location of the configuration.
deployment_configurationLocationUri :: Lens' Deployment (Maybe Text)

-- | The amount of time AppConfig monitored for alarms before considering
--   the deployment to be complete and no longer eligible for automatic
--   roll back.
deployment_finalBakeTimeInMinutes :: Lens' Deployment (Maybe Natural)

-- | The description of the deployment.
deployment_description :: Lens' Deployment (Maybe Text)

-- | The ID of the configuration profile that was deployed.
deployment_configurationProfileId :: Lens' Deployment (Maybe Text)

-- | The algorithm used to define how percentage grew over time.
deployment_growthType :: Lens' Deployment (Maybe GrowthType)

-- | The ARN of an IAM role with permission to access the configuration at
--   the specified LocationUri.
updateConfigurationProfile_retrievalRoleArn :: Lens' UpdateConfigurationProfile (Maybe Text)

-- | A list of methods for validating the configuration.
updateConfigurationProfile_validators :: Lens' UpdateConfigurationProfile (Maybe [Validator])

-- | The name of the configuration profile.
updateConfigurationProfile_name :: Lens' UpdateConfigurationProfile (Maybe Text)

-- | A description of the configuration profile.
updateConfigurationProfile_description :: Lens' UpdateConfigurationProfile (Maybe Text)

-- | The application ID.
updateConfigurationProfile_applicationId :: Lens' UpdateConfigurationProfile Text

-- | The ID of the configuration profile.
updateConfigurationProfile_configurationProfileId :: Lens' UpdateConfigurationProfile Text

-- | The ARN of an IAM role with permission to access the configuration at
--   the specified LocationUri.
configurationProfile_retrievalRoleArn :: Lens' ConfigurationProfile (Maybe Text)

-- | A list of methods for validating the configuration.
configurationProfile_validators :: Lens' ConfigurationProfile (Maybe [Validator])

-- | The URI location of the configuration.
configurationProfile_locationUri :: Lens' ConfigurationProfile (Maybe Text)

-- | The application ID.
configurationProfile_applicationId :: Lens' ConfigurationProfile (Maybe Text)

-- | The name of the configuration profile.
configurationProfile_name :: Lens' ConfigurationProfile (Maybe Text)

-- | The configuration profile ID.
configurationProfile_id :: Lens' ConfigurationProfile (Maybe Text)

-- | The configuration profile description.
configurationProfile_description :: Lens' ConfigurationProfile (Maybe Text)

-- | The application ID that includes the configuration profile you want to
--   delete.
deleteConfigurationProfile_applicationId :: Lens' DeleteConfigurationProfile Text

-- | The ID of the configuration profile you want to delete.
deleteConfigurationProfile_configurationProfileId :: Lens' DeleteConfigurationProfile Text

-- | The resource ARN.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | Metadata to assign to AppConfig resources. Tags help organize and
--   categorize your AppConfig resources. Each tag consists of a key and an
--   optional value, both of which you define.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int

-- | A token to start the list. Use this token to get the next set of
--   results.
listHostedConfigurationVersions_nextToken :: Lens' ListHostedConfigurationVersions (Maybe Text)

-- | The maximum number of items to return for this call. The call also
--   returns a token that you can specify in a subsequent call to get the
--   next set of results.
listHostedConfigurationVersions_maxResults :: Lens' ListHostedConfigurationVersions (Maybe Natural)

-- | The application ID.
listHostedConfigurationVersions_applicationId :: Lens' ListHostedConfigurationVersions Text

-- | The configuration profile ID.
listHostedConfigurationVersions_configurationProfileId :: Lens' ListHostedConfigurationVersions Text

-- | The elements from this collection.
listHostedConfigurationVersionsResponse_items :: Lens' ListHostedConfigurationVersionsResponse (Maybe [HostedConfigurationVersionSummary])

-- | The token for the next set of items to return. Use this token to get
--   the next set of results.
listHostedConfigurationVersionsResponse_nextToken :: Lens' ListHostedConfigurationVersionsResponse (Maybe Text)

-- | The response's http status code.
listHostedConfigurationVersionsResponse_httpStatus :: Lens' ListHostedConfigurationVersionsResponse Int

-- | The ID of the application that includes the configuration profile you
--   want to get.
getConfigurationProfile_applicationId :: Lens' GetConfigurationProfile Text

-- | The ID of the configuration profile you want to get.
getConfigurationProfile_configurationProfileId :: Lens' GetConfigurationProfile Text

-- | The ARN of an IAM role with permission to access the configuration at
--   the specified LocationUri.
configurationProfile_retrievalRoleArn :: Lens' ConfigurationProfile (Maybe Text)

-- | A list of methods for validating the configuration.
configurationProfile_validators :: Lens' ConfigurationProfile (Maybe [Validator])

-- | The URI location of the configuration.
configurationProfile_locationUri :: Lens' ConfigurationProfile (Maybe Text)

-- | The application ID.
configurationProfile_applicationId :: Lens' ConfigurationProfile (Maybe Text)

-- | The name of the configuration profile.
configurationProfile_name :: Lens' ConfigurationProfile (Maybe Text)

-- | The configuration profile ID.
configurationProfile_id :: Lens' ConfigurationProfile (Maybe Text)

-- | The configuration profile description.
configurationProfile_description :: Lens' ConfigurationProfile (Maybe Text)

-- | The ID of the application to delete.
deleteApplication_applicationId :: Lens' DeleteApplication Text

-- | The name of the application.
updateApplication_name :: Lens' UpdateApplication (Maybe Text)

-- | A description of the application.
updateApplication_description :: Lens' UpdateApplication (Maybe Text)

-- | The application ID.
updateApplication_applicationId :: Lens' UpdateApplication Text

-- | The application name.
application_name :: Lens' Application (Maybe Text)

-- | The application ID.
application_id :: Lens' Application (Maybe Text)

-- | The description of the application.
application_description :: Lens' Application (Maybe Text)

-- | The percentage of targets to receive a deployed configuration during
--   each interval.
updateDeploymentStrategy_growthFactor :: Lens' UpdateDeploymentStrategy (Maybe Double)

-- | Total amount of time for a deployment to last.
updateDeploymentStrategy_deploymentDurationInMinutes :: Lens' UpdateDeploymentStrategy (Maybe Natural)

-- | The amount of time AppConfig monitors for alarms before considering
--   the deployment to be complete and no longer eligible for automatic
--   roll back.
updateDeploymentStrategy_finalBakeTimeInMinutes :: Lens' UpdateDeploymentStrategy (Maybe Natural)

-- | A description of the deployment strategy.
updateDeploymentStrategy_description :: Lens' UpdateDeploymentStrategy (Maybe Text)

-- | The algorithm used to define how percentage grows over time. AWS
--   AppConfig supports the following growth types:
--   
--   <b>Linear</b>: For this type, AppConfig processes the deployment by
--   increments of the growth factor evenly distributed over the deployment
--   time. For example, a linear deployment that uses a growth factor of 20
--   initially makes the configuration available to 20 percent of the
--   targets. After 1/5th of the deployment time has passed, the system
--   updates the percentage to 40 percent. This continues until 100% of the
--   targets are set to receive the deployed configuration.
--   
--   <b>Exponential</b>: For this type, AppConfig processes the deployment
--   exponentially using the following formula: <tt>G*(2^N)</tt>. In this
--   formula, <tt>G</tt> is the growth factor specified by the user and
--   <tt>N</tt> is the number of steps until the configuration is deployed
--   to all targets. For example, if you specify a growth factor of 2, then
--   the system rolls out the configuration as follows:
--   
--   <pre>
--   2*(2^0)
--   </pre>
--   
--   <pre>
--   2*(2^1)
--   </pre>
--   
--   <pre>
--   2*(2^2)
--   </pre>
--   
--   Expressed numerically, the deployment rolls out as follows: 2% of the
--   targets, 4% of the targets, 8% of the targets, and continues until the
--   configuration has been deployed to all targets.
updateDeploymentStrategy_growthType :: Lens' UpdateDeploymentStrategy (Maybe GrowthType)

-- | The deployment strategy ID.
updateDeploymentStrategy_deploymentStrategyId :: Lens' UpdateDeploymentStrategy Text

-- | The percentage of targets that received a deployed configuration
--   during each interval.
deploymentStrategy_growthFactor :: Lens' DeploymentStrategy (Maybe Double)

-- | Save the deployment strategy to a Systems Manager (SSM) document.
deploymentStrategy_replicateTo :: Lens' DeploymentStrategy (Maybe ReplicateTo)

-- | The name of the deployment strategy.
deploymentStrategy_name :: Lens' DeploymentStrategy (Maybe Text)

-- | The deployment strategy ID.
deploymentStrategy_id :: Lens' DeploymentStrategy (Maybe Text)

-- | Total amount of time the deployment lasted.
deploymentStrategy_deploymentDurationInMinutes :: Lens' DeploymentStrategy (Maybe Natural)

-- | The amount of time AppConfig monitored for alarms before considering
--   the deployment to be complete and no longer eligible for automatic
--   roll back.
deploymentStrategy_finalBakeTimeInMinutes :: Lens' DeploymentStrategy (Maybe Natural)

-- | The description of the deployment strategy.
deploymentStrategy_description :: Lens' DeploymentStrategy (Maybe Text)

-- | The algorithm used to define how percentage grew over time.
deploymentStrategy_growthType :: Lens' DeploymentStrategy (Maybe GrowthType)

-- | The ID of the deployment strategy you want to delete.
deleteDeploymentStrategy_deploymentStrategyId :: Lens' DeleteDeploymentStrategy Text

-- | A description of the application.
createApplication_description :: Lens' CreateApplication (Maybe Text)

-- | Metadata to assign to the application. Tags help organize and
--   categorize your AppConfig resources. Each tag consists of a key and an
--   optional value, both of which you define.
createApplication_tags :: Lens' CreateApplication (Maybe (HashMap Text Text))

-- | A name for the application.
createApplication_name :: Lens' CreateApplication Text

-- | The application name.
application_name :: Lens' Application (Maybe Text)

-- | The application ID.
application_id :: Lens' Application (Maybe Text)

-- | The description of the application.
application_description :: Lens' Application (Maybe Text)

-- | The application ID.
validateConfiguration_applicationId :: Lens' ValidateConfiguration Text

-- | The configuration profile ID.
validateConfiguration_configurationProfileId :: Lens' ValidateConfiguration Text

-- | The version of the configuration to validate.
validateConfiguration_configurationVersion :: Lens' ValidateConfiguration Text

-- | The application ID.
stopDeployment_applicationId :: Lens' StopDeployment Text

-- | The environment ID.
stopDeployment_environmentId :: Lens' StopDeployment Text

-- | The sequence number of the deployment.
stopDeployment_deploymentNumber :: Lens' StopDeployment Int

-- | The percentage of targets to receive a deployed configuration during
--   each interval.
deployment_growthFactor :: Lens' Deployment (Maybe Double)

-- | The name of the configuration.
deployment_configurationName :: Lens' Deployment (Maybe Text)

-- | The state of the deployment.
deployment_state :: Lens' Deployment (Maybe DeploymentState)

-- | The ID of the deployment strategy that was deployed.
deployment_deploymentStrategyId :: Lens' Deployment (Maybe Text)

-- | The sequence number of the deployment.
deployment_deploymentNumber :: Lens' Deployment (Maybe Int)

-- | The configuration version that was deployed.
deployment_configurationVersion :: Lens' Deployment (Maybe Text)

-- | A list containing all events related to a deployment. The most recent
--   events are displayed first.
deployment_eventLog :: Lens' Deployment (Maybe [DeploymentEvent])

-- | The percentage of targets for which the deployment is available.
deployment_percentageComplete :: Lens' Deployment (Maybe Double)

-- | The time the deployment started.
deployment_startedAt :: Lens' Deployment (Maybe UTCTime)

-- | The ID of the application that was deployed.
deployment_applicationId :: Lens' Deployment (Maybe Text)

-- | Total amount of time the deployment lasted.
deployment_deploymentDurationInMinutes :: Lens' Deployment (Maybe Natural)

-- | The ID of the environment that was deployed.
deployment_environmentId :: Lens' Deployment (Maybe Text)

-- | The time the deployment completed.
deployment_completedAt :: Lens' Deployment (Maybe UTCTime)

-- | Information about the source location of the configuration.
deployment_configurationLocationUri :: Lens' Deployment (Maybe Text)

-- | The amount of time AppConfig monitored for alarms before considering
--   the deployment to be complete and no longer eligible for automatic
--   roll back.
deployment_finalBakeTimeInMinutes :: Lens' Deployment (Maybe Natural)

-- | The description of the deployment.
deployment_description :: Lens' Deployment (Maybe Text)

-- | The ID of the configuration profile that was deployed.
deployment_configurationProfileId :: Lens' Deployment (Maybe Text)

-- | The algorithm used to define how percentage grew over time.
deployment_growthType :: Lens' Deployment (Maybe GrowthType)

-- | The ID of the application you want to get.
getApplication_applicationId :: Lens' GetApplication Text

-- | The application name.
application_name :: Lens' Application (Maybe Text)

-- | The application ID.
application_id :: Lens' Application (Maybe Text)

-- | The description of the application.
application_description :: Lens' Application (Maybe Text)

-- | An optional locking token used to prevent race conditions from
--   overwriting configuration updates when creating a new version. To
--   ensure your data is not overwritten when creating multiple hosted
--   configuration versions in rapid succession, specify the version of the
--   latest hosted configuration version.
createHostedConfigurationVersion_latestVersionNumber :: Lens' CreateHostedConfigurationVersion (Maybe Int)

-- | A description of the configuration.
createHostedConfigurationVersion_description :: Lens' CreateHostedConfigurationVersion (Maybe Text)

-- | The application ID.
createHostedConfigurationVersion_applicationId :: Lens' CreateHostedConfigurationVersion Text

-- | The configuration profile ID.
createHostedConfigurationVersion_configurationProfileId :: Lens' CreateHostedConfigurationVersion Text

-- | The content of the configuration or the configuration data.
createHostedConfigurationVersion_content :: Lens' CreateHostedConfigurationVersion ByteString

-- | A standard MIME type describing the format of the configuration
--   content. For more information, see <a>Content-Type</a>.
createHostedConfigurationVersion_contentType :: Lens' CreateHostedConfigurationVersion Text

-- | The content of the configuration or the configuration data.
hostedConfigurationVersion_content :: Lens' HostedConfigurationVersion (Maybe ByteString)

-- | The configuration version.
hostedConfigurationVersion_versionNumber :: Lens' HostedConfigurationVersion (Maybe Int)

-- | The application ID.
hostedConfigurationVersion_applicationId :: Lens' HostedConfigurationVersion (Maybe Text)

-- | A description of the configuration.
hostedConfigurationVersion_description :: Lens' HostedConfigurationVersion (Maybe Text)

-- | The configuration profile ID.
hostedConfigurationVersion_configurationProfileId :: Lens' HostedConfigurationVersion (Maybe Text)

-- | A standard MIME type describing the format of the configuration
--   content. For more information, see <a>Content-Type</a>.
hostedConfigurationVersion_contentType :: Lens' HostedConfigurationVersion (Maybe Text)

-- | A token to start the list. Use this token to get the next set of
--   results.
listConfigurationProfiles_nextToken :: Lens' ListConfigurationProfiles (Maybe Text)

-- | The maximum number of items to return for this call. The call also
--   returns a token that you can specify in a subsequent call to get the
--   next set of results.
listConfigurationProfiles_maxResults :: Lens' ListConfigurationProfiles (Maybe Natural)

-- | The application ID.
listConfigurationProfiles_applicationId :: Lens' ListConfigurationProfiles Text

-- | The elements from this collection.
listConfigurationProfilesResponse_items :: Lens' ListConfigurationProfilesResponse (Maybe [ConfigurationProfileSummary])

-- | The token for the next set of items to return. Use this token to get
--   the next set of results.
listConfigurationProfilesResponse_nextToken :: Lens' ListConfigurationProfilesResponse (Maybe Text)

-- | The response's http status code.
listConfigurationProfilesResponse_httpStatus :: Lens' ListConfigurationProfilesResponse Int

-- | The application ID.
deleteHostedConfigurationVersion_applicationId :: Lens' DeleteHostedConfigurationVersion Text

-- | The configuration profile ID.
deleteHostedConfigurationVersion_configurationProfileId :: Lens' DeleteHostedConfigurationVersion Text

-- | The versions number to delete.
deleteHostedConfigurationVersion_versionNumber :: Lens' DeleteHostedConfigurationVersion Int

-- | The application ID.
getHostedConfigurationVersion_applicationId :: Lens' GetHostedConfigurationVersion Text

-- | The configuration profile ID.
getHostedConfigurationVersion_configurationProfileId :: Lens' GetHostedConfigurationVersion Text

-- | The version.
getHostedConfigurationVersion_versionNumber :: Lens' GetHostedConfigurationVersion Int

-- | The content of the configuration or the configuration data.
hostedConfigurationVersion_content :: Lens' HostedConfigurationVersion (Maybe ByteString)

-- | The configuration version.
hostedConfigurationVersion_versionNumber :: Lens' HostedConfigurationVersion (Maybe Int)

-- | The application ID.
hostedConfigurationVersion_applicationId :: Lens' HostedConfigurationVersion (Maybe Text)

-- | A description of the configuration.
hostedConfigurationVersion_description :: Lens' HostedConfigurationVersion (Maybe Text)

-- | The configuration profile ID.
hostedConfigurationVersion_configurationProfileId :: Lens' HostedConfigurationVersion (Maybe Text)

-- | A standard MIME type describing the format of the configuration
--   content. For more information, see <a>Content-Type</a>.
hostedConfigurationVersion_contentType :: Lens' HostedConfigurationVersion (Maybe Text)

-- | A token to start the list. Use this token to get the next set of
--   results.
listDeployments_nextToken :: Lens' ListDeployments (Maybe Text)

-- | The maximum number of items to return for this call. The call also
--   returns a token that you can specify in a subsequent call to get the
--   next set of results.
listDeployments_maxResults :: Lens' ListDeployments (Maybe Natural)

-- | The application ID.
listDeployments_applicationId :: Lens' ListDeployments Text

-- | The environment ID.
listDeployments_environmentId :: Lens' ListDeployments Text

-- | The elements from this collection.
listDeploymentsResponse_items :: Lens' ListDeploymentsResponse (Maybe [DeploymentSummary])

-- | The token for the next set of items to return. Use this token to get
--   the next set of results.
listDeploymentsResponse_nextToken :: Lens' ListDeploymentsResponse (Maybe Text)

-- | The response's http status code.
listDeploymentsResponse_httpStatus :: Lens' ListDeploymentsResponse Int

-- | The ARN of the resource for which to retrieve tags.
tagResource_resourceArn :: Lens' TagResource Text

-- | The key-value string map. The valid character set is [a-zA-Z+-=._:/].
--   The tag key can be up to 128 characters and must not start with
--   <tt>aws:</tt>. The tag value can be up to 256 characters.
tagResource_tags :: Lens' TagResource (HashMap Text Text)

-- | The ID of the application that includes the environment you want to
--   get.
getEnvironment_applicationId :: Lens' GetEnvironment Text

-- | The ID of the environment you wnat to get.
getEnvironment_environmentId :: Lens' GetEnvironment Text

-- | The state of the environment. An environment can be in one of the
--   following states: <tt>READY_FOR_DEPLOYMENT</tt>, <tt>DEPLOYING</tt>,
--   <tt>ROLLING_BACK</tt>, or <tt>ROLLED_BACK</tt>
environment_state :: Lens' Environment (Maybe EnvironmentState)

-- | Amazon CloudWatch alarms monitored during the deployment.
environment_monitors :: Lens' Environment (Maybe [Monitor])

-- | The application ID.
environment_applicationId :: Lens' Environment (Maybe Text)

-- | The name of the environment.
environment_name :: Lens' Environment (Maybe Text)

-- | The environment ID.
environment_id :: Lens' Environment (Maybe Text)

-- | The description of the environment.
environment_description :: Lens' Environment (Maybe Text)

-- | A token to start the list. Use this token to get the next set of
--   results.
listApplications_nextToken :: Lens' ListApplications (Maybe Text)

-- | The maximum number of items to return for this call. The call also
--   returns a token that you can specify in a subsequent call to get the
--   next set of results.
listApplications_maxResults :: Lens' ListApplications (Maybe Natural)

-- | The elements from this collection.
listApplicationsResponse_items :: Lens' ListApplicationsResponse (Maybe [Application])

-- | The token for the next set of items to return. Use this token to get
--   the next set of results.
listApplicationsResponse_nextToken :: Lens' ListApplicationsResponse (Maybe Text)

-- | The response's http status code.
listApplicationsResponse_httpStatus :: Lens' ListApplicationsResponse Int

-- | The ARN of the resource for which to remove tags.
untagResource_resourceArn :: Lens' UntagResource Text

-- | The tag keys to delete.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | A token to start the list. Use this token to get the next set of
--   results.
listDeploymentStrategies_nextToken :: Lens' ListDeploymentStrategies (Maybe Text)

-- | The maximum number of items to return for this call. The call also
--   returns a token that you can specify in a subsequent call to get the
--   next set of results.
listDeploymentStrategies_maxResults :: Lens' ListDeploymentStrategies (Maybe Natural)

-- | The elements from this collection.
listDeploymentStrategiesResponse_items :: Lens' ListDeploymentStrategiesResponse (Maybe [DeploymentStrategy])

-- | The token for the next set of items to return. Use this token to get
--   the next set of results.
listDeploymentStrategiesResponse_nextToken :: Lens' ListDeploymentStrategiesResponse (Maybe Text)

-- | The response's http status code.
listDeploymentStrategiesResponse_httpStatus :: Lens' ListDeploymentStrategiesResponse Int

-- | The configuration version returned in the most recent
--   <tt>GetConfiguration</tt> response.
--   
--   AWS AppConfig uses the value of the
--   <tt>ClientConfigurationVersion</tt> parameter to identify the
--   configuration version on your clients. If you don’t send
--   <tt>ClientConfigurationVersion</tt> with each call to
--   <tt>GetConfiguration</tt>, your clients receive the current
--   configuration. You are charged each time your clients receive a
--   configuration.
--   
--   To avoid excess charges, we recommend that you include the
--   <tt>ClientConfigurationVersion</tt> value with every call to
--   <tt>GetConfiguration</tt>. This value must be saved on your client.
--   Subsequent calls to <tt>GetConfiguration</tt> must pass this value by
--   using the <tt>ClientConfigurationVersion</tt> parameter.
--   
--   For more information about working with configurations, see
--   <a>Retrieving the Configuration</a> in the <i>AWS AppConfig User
--   Guide</i>.
getConfiguration_clientConfigurationVersion :: Lens' GetConfiguration (Maybe Text)

-- | The application to get. Specify either the application name or the
--   application ID.
getConfiguration_application :: Lens' GetConfiguration Text

-- | The environment to get. Specify either the environment name or the
--   environment ID.
getConfiguration_environment :: Lens' GetConfiguration Text

-- | The configuration to get. Specify either the configuration name or the
--   configuration ID.
getConfiguration_configuration :: Lens' GetConfiguration Text

-- | A unique ID to identify the client for the configuration. This ID
--   enables AppConfig to deploy the configuration in intervals, as defined
--   in the deployment strategy.
getConfiguration_clientId :: Lens' GetConfiguration Text

-- | The configuration version.
getConfigurationResponse_configurationVersion :: Lens' GetConfigurationResponse (Maybe Text)

-- | The content of the configuration or the configuration data.
getConfigurationResponse_content :: Lens' GetConfigurationResponse (Maybe ByteString)

-- | A standard MIME type describing the format of the configuration
--   content. For more information, see <a>Content-Type</a>.
getConfigurationResponse_contentType :: Lens' GetConfigurationResponse (Maybe Text)

-- | The response's http status code.
getConfigurationResponse_httpStatus :: Lens' GetConfigurationResponse Int

-- | The amount of time AppConfig monitors for alarms before considering
--   the deployment to be complete and no longer eligible for automatic
--   roll back.
createDeploymentStrategy_finalBakeTimeInMinutes :: Lens' CreateDeploymentStrategy (Maybe Natural)

-- | A description of the deployment strategy.
createDeploymentStrategy_description :: Lens' CreateDeploymentStrategy (Maybe Text)

-- | The algorithm used to define how percentage grows over time. AWS
--   AppConfig supports the following growth types:
--   
--   <b>Linear</b>: For this type, AppConfig processes the deployment by
--   dividing the total number of targets by the value specified for
--   <tt>Step percentage</tt>. For example, a linear deployment that uses a
--   <tt>Step percentage</tt> of 10 deploys the configuration to 10 percent
--   of the hosts. After those deployments are complete, the system deploys
--   the configuration to the next 10 percent. This continues until 100% of
--   the targets have successfully received the configuration.
--   
--   <b>Exponential</b>: For this type, AppConfig processes the deployment
--   exponentially using the following formula: <tt>G*(2^N)</tt>. In this
--   formula, <tt>G</tt> is the growth factor specified by the user and
--   <tt>N</tt> is the number of steps until the configuration is deployed
--   to all targets. For example, if you specify a growth factor of 2, then
--   the system rolls out the configuration as follows:
--   
--   <pre>
--   2*(2^0)
--   </pre>
--   
--   <pre>
--   2*(2^1)
--   </pre>
--   
--   <pre>
--   2*(2^2)
--   </pre>
--   
--   Expressed numerically, the deployment rolls out as follows: 2% of the
--   targets, 4% of the targets, 8% of the targets, and continues until the
--   configuration has been deployed to all targets.
createDeploymentStrategy_growthType :: Lens' CreateDeploymentStrategy (Maybe GrowthType)

-- | Metadata to assign to the deployment strategy. Tags help organize and
--   categorize your AppConfig resources. Each tag consists of a key and an
--   optional value, both of which you define.
createDeploymentStrategy_tags :: Lens' CreateDeploymentStrategy (Maybe (HashMap Text Text))

-- | A name for the deployment strategy.
createDeploymentStrategy_name :: Lens' CreateDeploymentStrategy Text

-- | Total amount of time for a deployment to last.
createDeploymentStrategy_deploymentDurationInMinutes :: Lens' CreateDeploymentStrategy Natural

-- | The percentage of targets to receive a deployed configuration during
--   each interval.
createDeploymentStrategy_growthFactor :: Lens' CreateDeploymentStrategy Double

-- | Save the deployment strategy to a Systems Manager (SSM) document.
createDeploymentStrategy_replicateTo :: Lens' CreateDeploymentStrategy ReplicateTo

-- | The percentage of targets that received a deployed configuration
--   during each interval.
deploymentStrategy_growthFactor :: Lens' DeploymentStrategy (Maybe Double)

-- | Save the deployment strategy to a Systems Manager (SSM) document.
deploymentStrategy_replicateTo :: Lens' DeploymentStrategy (Maybe ReplicateTo)

-- | The name of the deployment strategy.
deploymentStrategy_name :: Lens' DeploymentStrategy (Maybe Text)

-- | The deployment strategy ID.
deploymentStrategy_id :: Lens' DeploymentStrategy (Maybe Text)

-- | Total amount of time the deployment lasted.
deploymentStrategy_deploymentDurationInMinutes :: Lens' DeploymentStrategy (Maybe Natural)

-- | The amount of time AppConfig monitored for alarms before considering
--   the deployment to be complete and no longer eligible for automatic
--   roll back.
deploymentStrategy_finalBakeTimeInMinutes :: Lens' DeploymentStrategy (Maybe Natural)

-- | The description of the deployment strategy.
deploymentStrategy_description :: Lens' DeploymentStrategy (Maybe Text)

-- | The algorithm used to define how percentage grew over time.
deploymentStrategy_growthType :: Lens' DeploymentStrategy (Maybe GrowthType)

-- | A description of the deployment.
startDeployment_description :: Lens' StartDeployment (Maybe Text)

-- | Metadata to assign to the deployment. Tags help organize and
--   categorize your AppConfig resources. Each tag consists of a key and an
--   optional value, both of which you define.
startDeployment_tags :: Lens' StartDeployment (Maybe (HashMap Text Text))

-- | The application ID.
startDeployment_applicationId :: Lens' StartDeployment Text

-- | The environment ID.
startDeployment_environmentId :: Lens' StartDeployment Text

-- | The deployment strategy ID.
startDeployment_deploymentStrategyId :: Lens' StartDeployment Text

-- | The configuration profile ID.
startDeployment_configurationProfileId :: Lens' StartDeployment Text

-- | The configuration version to deploy.
startDeployment_configurationVersion :: Lens' StartDeployment Text

-- | The percentage of targets to receive a deployed configuration during
--   each interval.
deployment_growthFactor :: Lens' Deployment (Maybe Double)

-- | The name of the configuration.
deployment_configurationName :: Lens' Deployment (Maybe Text)

-- | The state of the deployment.
deployment_state :: Lens' Deployment (Maybe DeploymentState)

-- | The ID of the deployment strategy that was deployed.
deployment_deploymentStrategyId :: Lens' Deployment (Maybe Text)

-- | The sequence number of the deployment.
deployment_deploymentNumber :: Lens' Deployment (Maybe Int)

-- | The configuration version that was deployed.
deployment_configurationVersion :: Lens' Deployment (Maybe Text)

-- | A list containing all events related to a deployment. The most recent
--   events are displayed first.
deployment_eventLog :: Lens' Deployment (Maybe [DeploymentEvent])

-- | The percentage of targets for which the deployment is available.
deployment_percentageComplete :: Lens' Deployment (Maybe Double)

-- | The time the deployment started.
deployment_startedAt :: Lens' Deployment (Maybe UTCTime)

-- | The ID of the application that was deployed.
deployment_applicationId :: Lens' Deployment (Maybe Text)

-- | Total amount of time the deployment lasted.
deployment_deploymentDurationInMinutes :: Lens' Deployment (Maybe Natural)

-- | The ID of the environment that was deployed.
deployment_environmentId :: Lens' Deployment (Maybe Text)

-- | The time the deployment completed.
deployment_completedAt :: Lens' Deployment (Maybe UTCTime)

-- | Information about the source location of the configuration.
deployment_configurationLocationUri :: Lens' Deployment (Maybe Text)

-- | The amount of time AppConfig monitored for alarms before considering
--   the deployment to be complete and no longer eligible for automatic
--   roll back.
deployment_finalBakeTimeInMinutes :: Lens' Deployment (Maybe Natural)

-- | The description of the deployment.
deployment_description :: Lens' Deployment (Maybe Text)

-- | The ID of the configuration profile that was deployed.
deployment_configurationProfileId :: Lens' Deployment (Maybe Text)

-- | The algorithm used to define how percentage grew over time.
deployment_growthType :: Lens' Deployment (Maybe GrowthType)

-- | Amazon CloudWatch alarms to monitor during the deployment process.
createEnvironment_monitors :: Lens' CreateEnvironment (Maybe [Monitor])

-- | A description of the environment.
createEnvironment_description :: Lens' CreateEnvironment (Maybe Text)

-- | Metadata to assign to the environment. Tags help organize and
--   categorize your AppConfig resources. Each tag consists of a key and an
--   optional value, both of which you define.
createEnvironment_tags :: Lens' CreateEnvironment (Maybe (HashMap Text Text))

-- | The application ID.
createEnvironment_applicationId :: Lens' CreateEnvironment Text

-- | A name for the environment.
createEnvironment_name :: Lens' CreateEnvironment Text

-- | The state of the environment. An environment can be in one of the
--   following states: <tt>READY_FOR_DEPLOYMENT</tt>, <tt>DEPLOYING</tt>,
--   <tt>ROLLING_BACK</tt>, or <tt>ROLLED_BACK</tt>
environment_state :: Lens' Environment (Maybe EnvironmentState)

-- | Amazon CloudWatch alarms monitored during the deployment.
environment_monitors :: Lens' Environment (Maybe [Monitor])

-- | The application ID.
environment_applicationId :: Lens' Environment (Maybe Text)

-- | The name of the environment.
environment_name :: Lens' Environment (Maybe Text)

-- | The environment ID.
environment_id :: Lens' Environment (Maybe Text)

-- | The description of the environment.
environment_description :: Lens' Environment (Maybe Text)

-- | The application name.
application_name :: Lens' Application (Maybe Text)

-- | The application ID.
application_id :: Lens' Application (Maybe Text)

-- | The description of the application.
application_description :: Lens' Application (Maybe Text)

-- | The ARN of an IAM role with permission to access the configuration at
--   the specified LocationUri.
configurationProfile_retrievalRoleArn :: Lens' ConfigurationProfile (Maybe Text)

-- | A list of methods for validating the configuration.
configurationProfile_validators :: Lens' ConfigurationProfile (Maybe [Validator])

-- | The URI location of the configuration.
configurationProfile_locationUri :: Lens' ConfigurationProfile (Maybe Text)

-- | The application ID.
configurationProfile_applicationId :: Lens' ConfigurationProfile (Maybe Text)

-- | The name of the configuration profile.
configurationProfile_name :: Lens' ConfigurationProfile (Maybe Text)

-- | The configuration profile ID.
configurationProfile_id :: Lens' ConfigurationProfile (Maybe Text)

-- | The configuration profile description.
configurationProfile_description :: Lens' ConfigurationProfile (Maybe Text)

-- | The URI location of the configuration.
configurationProfileSummary_locationUri :: Lens' ConfigurationProfileSummary (Maybe Text)

-- | The application ID.
configurationProfileSummary_applicationId :: Lens' ConfigurationProfileSummary (Maybe Text)

-- | The name of the configuration profile.
configurationProfileSummary_name :: Lens' ConfigurationProfileSummary (Maybe Text)

-- | The ID of the configuration profile.
configurationProfileSummary_id :: Lens' ConfigurationProfileSummary (Maybe Text)

-- | The types of validators in the configuration profile.
configurationProfileSummary_validatorTypes :: Lens' ConfigurationProfileSummary (Maybe [ValidatorType])

-- | The percentage of targets to receive a deployed configuration during
--   each interval.
deployment_growthFactor :: Lens' Deployment (Maybe Double)

-- | The name of the configuration.
deployment_configurationName :: Lens' Deployment (Maybe Text)

-- | The state of the deployment.
deployment_state :: Lens' Deployment (Maybe DeploymentState)

-- | The ID of the deployment strategy that was deployed.
deployment_deploymentStrategyId :: Lens' Deployment (Maybe Text)

-- | The sequence number of the deployment.
deployment_deploymentNumber :: Lens' Deployment (Maybe Int)

-- | The configuration version that was deployed.
deployment_configurationVersion :: Lens' Deployment (Maybe Text)

-- | A list containing all events related to a deployment. The most recent
--   events are displayed first.
deployment_eventLog :: Lens' Deployment (Maybe [DeploymentEvent])

-- | The percentage of targets for which the deployment is available.
deployment_percentageComplete :: Lens' Deployment (Maybe Double)

-- | The time the deployment started.
deployment_startedAt :: Lens' Deployment (Maybe UTCTime)

-- | The ID of the application that was deployed.
deployment_applicationId :: Lens' Deployment (Maybe Text)

-- | Total amount of time the deployment lasted.
deployment_deploymentDurationInMinutes :: Lens' Deployment (Maybe Natural)

-- | The ID of the environment that was deployed.
deployment_environmentId :: Lens' Deployment (Maybe Text)

-- | The time the deployment completed.
deployment_completedAt :: Lens' Deployment (Maybe UTCTime)

-- | Information about the source location of the configuration.
deployment_configurationLocationUri :: Lens' Deployment (Maybe Text)

-- | The amount of time AppConfig monitored for alarms before considering
--   the deployment to be complete and no longer eligible for automatic
--   roll back.
deployment_finalBakeTimeInMinutes :: Lens' Deployment (Maybe Natural)

-- | The description of the deployment.
deployment_description :: Lens' Deployment (Maybe Text)

-- | The ID of the configuration profile that was deployed.
deployment_configurationProfileId :: Lens' Deployment (Maybe Text)

-- | The algorithm used to define how percentage grew over time.
deployment_growthType :: Lens' Deployment (Maybe GrowthType)

-- | The entity that triggered the deployment event. Events can be
--   triggered by a user, AWS AppConfig, an Amazon CloudWatch alarm, or an
--   internal error.
deploymentEvent_triggeredBy :: Lens' DeploymentEvent (Maybe TriggeredBy)

-- | The date and time the event occurred.
deploymentEvent_occurredAt :: Lens' DeploymentEvent (Maybe UTCTime)

-- | The type of deployment event. Deployment event types include the
--   start, stop, or completion of a deployment; a percentage update; the
--   start or stop of a bake period; the start or completion of a rollback.
deploymentEvent_eventType :: Lens' DeploymentEvent (Maybe DeploymentEventType)

-- | A description of the deployment event. Descriptions include, but are
--   not limited to, the user account or the CloudWatch alarm ARN that
--   initiated a rollback, the percentage of hosts that received the
--   deployment, or in the case of an internal error, a recommendation to
--   attempt a new deployment.
deploymentEvent_description :: Lens' DeploymentEvent (Maybe Text)

-- | The percentage of targets that received a deployed configuration
--   during each interval.
deploymentStrategy_growthFactor :: Lens' DeploymentStrategy (Maybe Double)

-- | Save the deployment strategy to a Systems Manager (SSM) document.
deploymentStrategy_replicateTo :: Lens' DeploymentStrategy (Maybe ReplicateTo)

-- | The name of the deployment strategy.
deploymentStrategy_name :: Lens' DeploymentStrategy (Maybe Text)

-- | The deployment strategy ID.
deploymentStrategy_id :: Lens' DeploymentStrategy (Maybe Text)

-- | Total amount of time the deployment lasted.
deploymentStrategy_deploymentDurationInMinutes :: Lens' DeploymentStrategy (Maybe Natural)

-- | The amount of time AppConfig monitored for alarms before considering
--   the deployment to be complete and no longer eligible for automatic
--   roll back.
deploymentStrategy_finalBakeTimeInMinutes :: Lens' DeploymentStrategy (Maybe Natural)

-- | The description of the deployment strategy.
deploymentStrategy_description :: Lens' DeploymentStrategy (Maybe Text)

-- | The algorithm used to define how percentage grew over time.
deploymentStrategy_growthType :: Lens' DeploymentStrategy (Maybe GrowthType)

-- | The percentage of targets to receive a deployed configuration during
--   each interval.
deploymentSummary_growthFactor :: Lens' DeploymentSummary (Maybe Double)

-- | The name of the configuration.
deploymentSummary_configurationName :: Lens' DeploymentSummary (Maybe Text)

-- | The state of the deployment.
deploymentSummary_state :: Lens' DeploymentSummary (Maybe DeploymentState)

-- | The sequence number of the deployment.
deploymentSummary_deploymentNumber :: Lens' DeploymentSummary (Maybe Int)

-- | The version of the configuration.
deploymentSummary_configurationVersion :: Lens' DeploymentSummary (Maybe Text)

-- | The percentage of targets for which the deployment is available.
deploymentSummary_percentageComplete :: Lens' DeploymentSummary (Maybe Double)

-- | Time the deployment started.
deploymentSummary_startedAt :: Lens' DeploymentSummary (Maybe UTCTime)

-- | Total amount of time the deployment lasted.
deploymentSummary_deploymentDurationInMinutes :: Lens' DeploymentSummary (Maybe Natural)

-- | Time the deployment completed.
deploymentSummary_completedAt :: Lens' DeploymentSummary (Maybe UTCTime)

-- | The amount of time AppConfig monitors for alarms before considering
--   the deployment to be complete and no longer eligible for automatic
--   roll back.
deploymentSummary_finalBakeTimeInMinutes :: Lens' DeploymentSummary (Maybe Natural)

-- | The algorithm used to define how percentage grows over time.
deploymentSummary_growthType :: Lens' DeploymentSummary (Maybe GrowthType)

-- | The state of the environment. An environment can be in one of the
--   following states: <tt>READY_FOR_DEPLOYMENT</tt>, <tt>DEPLOYING</tt>,
--   <tt>ROLLING_BACK</tt>, or <tt>ROLLED_BACK</tt>
environment_state :: Lens' Environment (Maybe EnvironmentState)

-- | Amazon CloudWatch alarms monitored during the deployment.
environment_monitors :: Lens' Environment (Maybe [Monitor])

-- | The application ID.
environment_applicationId :: Lens' Environment (Maybe Text)

-- | The name of the environment.
environment_name :: Lens' Environment (Maybe Text)

-- | The environment ID.
environment_id :: Lens' Environment (Maybe Text)

-- | The description of the environment.
environment_description :: Lens' Environment (Maybe Text)

-- | The content of the configuration or the configuration data.
hostedConfigurationVersion_content :: Lens' HostedConfigurationVersion (Maybe ByteString)

-- | The configuration version.
hostedConfigurationVersion_versionNumber :: Lens' HostedConfigurationVersion (Maybe Int)

-- | The application ID.
hostedConfigurationVersion_applicationId :: Lens' HostedConfigurationVersion (Maybe Text)

-- | A description of the configuration.
hostedConfigurationVersion_description :: Lens' HostedConfigurationVersion (Maybe Text)

-- | The configuration profile ID.
hostedConfigurationVersion_configurationProfileId :: Lens' HostedConfigurationVersion (Maybe Text)

-- | A standard MIME type describing the format of the configuration
--   content. For more information, see <a>Content-Type</a>.
hostedConfigurationVersion_contentType :: Lens' HostedConfigurationVersion (Maybe Text)

-- | The configuration version.
hostedConfigurationVersionSummary_versionNumber :: Lens' HostedConfigurationVersionSummary (Maybe Int)

-- | The application ID.
hostedConfigurationVersionSummary_applicationId :: Lens' HostedConfigurationVersionSummary (Maybe Text)

-- | A description of the configuration.
hostedConfigurationVersionSummary_description :: Lens' HostedConfigurationVersionSummary (Maybe Text)

-- | The configuration profile ID.
hostedConfigurationVersionSummary_configurationProfileId :: Lens' HostedConfigurationVersionSummary (Maybe Text)

-- | A standard MIME type describing the format of the configuration
--   content. For more information, see <a>Content-Type</a>.
hostedConfigurationVersionSummary_contentType :: Lens' HostedConfigurationVersionSummary (Maybe Text)

-- | ARN of an IAM role for AppConfig to monitor <tt>AlarmArn</tt>.
monitor_alarmRoleArn :: Lens' Monitor (Maybe Text)

-- | ARN of the Amazon CloudWatch alarm.
monitor_alarmArn :: Lens' Monitor (Maybe Text)

-- | AppConfig supports validators of type <tt>JSON_SCHEMA</tt> and
--   <tt>LAMBDA</tt>
validator_type :: Lens' Validator ValidatorType

-- | Either the JSON Schema content or the Amazon Resource Name (ARN) of an
--   AWS Lambda function.
validator_content :: Lens' Validator Text


module Amazonka.AppConfig.Waiters


-- | Derived from API version <tt>2019-10-09</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   AWS AppConfig
--   
--   Use AWS AppConfig, a capability of AWS Systems Manager, to create,
--   manage, and quickly deploy application configurations. AppConfig
--   supports controlled deployments to applications of any size and
--   includes built-in validation checks and monitoring. You can use
--   AppConfig with applications hosted on Amazon EC2 instances, AWS
--   Lambda, containers, mobile applications, or IoT devices.
--   
--   To prevent errors when deploying application configurations,
--   especially for production systems where a simple typo could cause an
--   unexpected outage, AppConfig includes validators. A validator provides
--   a syntactic or semantic check to ensure that the configuration you
--   want to deploy works as intended. To validate your application
--   configuration data, you provide a schema or a Lambda function that
--   runs against the configuration. The configuration deployment or update
--   can only proceed when the configuration data is valid.
--   
--   During a configuration deployment, AppConfig monitors the application
--   to ensure that the deployment is successful. If the system encounters
--   an error, AppConfig rolls back the change to minimize impact for your
--   application users. You can configure a deployment strategy for each
--   application or environment that includes deployment criteria,
--   including velocity, bake time, and alarms to monitor. Similar to error
--   monitoring, if a deployment triggers an alarm, AppConfig automatically
--   rolls back to the previous version.
--   
--   AppConfig supports multiple use cases. Here are some examples.
--   
--   <ul>
--   <li><b>Application tuning</b>: Use AppConfig to carefully introduce
--   changes to your application that can only be tested with production
--   traffic.</li>
--   <li><b>Feature toggle</b>: Use AppConfig to turn on new features that
--   require a timely deployment, such as a product launch or
--   announcement.</li>
--   <li><b>Allow list</b>: Use AppConfig to allow premium subscribers to
--   access paid content.</li>
--   <li><b>Operational issues</b>: Use AppConfig to reduce stress on your
--   application when a dependency or other external factor impacts the
--   system.</li>
--   </ul>
--   
--   This reference is intended to be used with the <a>AWS AppConfig User
--   Guide</a>.
module Amazonka.AppConfig

-- | API version <tt>2019-10-09</tt> of the Amazon AppConfig SDK
--   configuration.
defaultService :: Service

-- | The configuration size is too large.
_PayloadTooLargeException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request could not be processed because of conflict in the current
--   state of the resource.
_ConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The number of hosted configuration versions exceeds the limit for the
--   AppConfig configuration store. Delete one or more versions and try
--   again.
_ServiceQuotaExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | There was an internal failure in the AppConfig service.
_InternalServerException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested resource could not be found.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The input fails to satisfy the constraints specified by an AWS
--   service.
_BadRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newListEnvironments</a> smart constructor.
data ListEnvironments
ListEnvironments' :: Maybe Text -> Maybe Natural -> Text -> ListEnvironments

-- | Create a value of <a>ListEnvironments</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListEnvironments'</a>,
--   <a>listEnvironments_nextToken</a> - A token to start the list. Use
--   this token to get the next set of results.
--   
--   <a>$sel:maxResults:ListEnvironments'</a>,
--   <a>listEnvironments_maxResults</a> - The maximum number of items to
--   return for this call. The call also returns a token that you can
--   specify in a subsequent call to get the next set of results.
--   
--   <a>$sel:applicationId:ListEnvironments'</a>,
--   <a>listEnvironments_applicationId</a> - The application ID.
newListEnvironments :: Text -> ListEnvironments

-- | <i>See:</i> <a>newListEnvironmentsResponse</a> smart constructor.
data ListEnvironmentsResponse
ListEnvironmentsResponse' :: Maybe [Environment] -> Maybe Text -> Int -> ListEnvironmentsResponse

-- | Create a value of <a>ListEnvironmentsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:ListEnvironmentsResponse'</a>,
--   <a>listEnvironmentsResponse_items</a> - The elements from this
--   collection.
--   
--   <a>$sel:nextToken:ListEnvironments'</a>,
--   <a>listEnvironmentsResponse_nextToken</a> - The token for the next set
--   of items to return. Use this token to get the next set of results.
--   
--   <a>$sel:httpStatus:ListEnvironmentsResponse'</a>,
--   <a>listEnvironmentsResponse_httpStatus</a> - The response's http
--   status code.
newListEnvironmentsResponse :: Int -> ListEnvironmentsResponse

-- | <i>See:</i> <a>newUpdateEnvironment</a> smart constructor.
data UpdateEnvironment
UpdateEnvironment' :: Maybe [Monitor] -> Maybe Text -> Maybe Text -> Text -> Text -> UpdateEnvironment

-- | Create a value of <a>UpdateEnvironment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:monitors:UpdateEnvironment'</a>,
--   <a>updateEnvironment_monitors</a> - Amazon CloudWatch alarms to
--   monitor during the deployment process.
--   
--   <a>$sel:name:UpdateEnvironment'</a>, <a>updateEnvironment_name</a> -
--   The name of the environment.
--   
--   <a>$sel:description:UpdateEnvironment'</a>,
--   <a>updateEnvironment_description</a> - A description of the
--   environment.
--   
--   <a>$sel:applicationId:UpdateEnvironment'</a>,
--   <a>updateEnvironment_applicationId</a> - The application ID.
--   
--   <a>$sel:environmentId:UpdateEnvironment'</a>,
--   <a>updateEnvironment_environmentId</a> - The environment ID.
newUpdateEnvironment :: Text -> Text -> UpdateEnvironment

-- | <i>See:</i> <a>newEnvironment</a> smart constructor.
data Environment
Environment' :: Maybe EnvironmentState -> Maybe [Monitor] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Environment

-- | Create a value of <a>Environment</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:Environment'</a>, <a>environment_state</a> - The state
--   of the environment. An environment can be in one of the following
--   states: <tt>READY_FOR_DEPLOYMENT</tt>, <tt>DEPLOYING</tt>,
--   <tt>ROLLING_BACK</tt>, or <tt>ROLLED_BACK</tt>
--   
--   <a>$sel:monitors:Environment'</a>, <a>environment_monitors</a> -
--   Amazon CloudWatch alarms monitored during the deployment.
--   
--   <a>$sel:applicationId:Environment'</a>,
--   <a>environment_applicationId</a> - The application ID.
--   
--   <a>$sel:name:Environment'</a>, <a>environment_name</a> - The name of
--   the environment.
--   
--   <a>$sel:id:Environment'</a>, <a>environment_id</a> - The environment
--   ID.
--   
--   <a>$sel:description:Environment'</a>, <a>environment_description</a> -
--   The description of the environment.
newEnvironment :: Environment

-- | <i>See:</i> <a>newDeleteEnvironment</a> smart constructor.
data DeleteEnvironment
DeleteEnvironment' :: Text -> Text -> DeleteEnvironment

-- | Create a value of <a>DeleteEnvironment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationId:DeleteEnvironment'</a>,
--   <a>deleteEnvironment_applicationId</a> - The application ID that
--   includes the environment you want to delete.
--   
--   <a>$sel:environmentId:DeleteEnvironment'</a>,
--   <a>deleteEnvironment_environmentId</a> - The ID of the environment you
--   want to delete.
newDeleteEnvironment :: Text -> Text -> DeleteEnvironment

-- | <i>See:</i> <a>newDeleteEnvironmentResponse</a> smart constructor.
data DeleteEnvironmentResponse
DeleteEnvironmentResponse' :: DeleteEnvironmentResponse

-- | Create a value of <a>DeleteEnvironmentResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteEnvironmentResponse :: DeleteEnvironmentResponse

-- | <i>See:</i> <a>newGetDeploymentStrategy</a> smart constructor.
data GetDeploymentStrategy
GetDeploymentStrategy' :: Text -> GetDeploymentStrategy

-- | Create a value of <a>GetDeploymentStrategy</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentStrategyId:GetDeploymentStrategy'</a>,
--   <a>getDeploymentStrategy_deploymentStrategyId</a> - The ID of the
--   deployment strategy to get.
newGetDeploymentStrategy :: Text -> GetDeploymentStrategy

-- | <i>See:</i> <a>newDeploymentStrategy</a> smart constructor.
data DeploymentStrategy
DeploymentStrategy' :: Maybe Double -> Maybe ReplicateTo -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Natural -> Maybe Text -> Maybe GrowthType -> DeploymentStrategy

-- | Create a value of <a>DeploymentStrategy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:growthFactor:DeploymentStrategy'</a>,
--   <a>deploymentStrategy_growthFactor</a> - The percentage of targets
--   that received a deployed configuration during each interval.
--   
--   <a>$sel:replicateTo:DeploymentStrategy'</a>,
--   <a>deploymentStrategy_replicateTo</a> - Save the deployment strategy
--   to a Systems Manager (SSM) document.
--   
--   <a>$sel:name:DeploymentStrategy'</a>, <a>deploymentStrategy_name</a> -
--   The name of the deployment strategy.
--   
--   <a>$sel:id:DeploymentStrategy'</a>, <a>deploymentStrategy_id</a> - The
--   deployment strategy ID.
--   
--   <a>$sel:deploymentDurationInMinutes:DeploymentStrategy'</a>,
--   <a>deploymentStrategy_deploymentDurationInMinutes</a> - Total amount
--   of time the deployment lasted.
--   
--   <a>$sel:finalBakeTimeInMinutes:DeploymentStrategy'</a>,
--   <a>deploymentStrategy_finalBakeTimeInMinutes</a> - The amount of time
--   AppConfig monitored for alarms before considering the deployment to be
--   complete and no longer eligible for automatic roll back.
--   
--   <a>$sel:description:DeploymentStrategy'</a>,
--   <a>deploymentStrategy_description</a> - The description of the
--   deployment strategy.
--   
--   <a>$sel:growthType:DeploymentStrategy'</a>,
--   <a>deploymentStrategy_growthType</a> - The algorithm used to define
--   how percentage grew over time.
newDeploymentStrategy :: DeploymentStrategy

-- | <i>See:</i> <a>newCreateConfigurationProfile</a> smart constructor.
data CreateConfigurationProfile
CreateConfigurationProfile' :: Maybe Text -> Maybe [Validator] -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> Text -> Text -> CreateConfigurationProfile

-- | Create a value of <a>CreateConfigurationProfile</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:retrievalRoleArn:CreateConfigurationProfile'</a>,
--   <a>createConfigurationProfile_retrievalRoleArn</a> - The ARN of an IAM
--   role with permission to access the configuration at the specified
--   LocationUri.
--   
--   <a>$sel:validators:CreateConfigurationProfile'</a>,
--   <a>createConfigurationProfile_validators</a> - A list of methods for
--   validating the configuration.
--   
--   <a>$sel:description:CreateConfigurationProfile'</a>,
--   <a>createConfigurationProfile_description</a> - A description of the
--   configuration profile.
--   
--   <a>$sel:tags:CreateConfigurationProfile'</a>,
--   <a>createConfigurationProfile_tags</a> - Metadata to assign to the
--   configuration profile. Tags help organize and categorize your
--   AppConfig resources. Each tag consists of a key and an optional value,
--   both of which you define.
--   
--   <a>$sel:applicationId:CreateConfigurationProfile'</a>,
--   <a>createConfigurationProfile_applicationId</a> - The application ID.
--   
--   <a>$sel:name:CreateConfigurationProfile'</a>,
--   <a>createConfigurationProfile_name</a> - A name for the configuration
--   profile.
--   
--   <a>$sel:locationUri:CreateConfigurationProfile'</a>,
--   <a>createConfigurationProfile_locationUri</a> - A URI to locate the
--   configuration. You can specify a Systems Manager (SSM) document, an
--   SSM Parameter Store parameter, or an Amazon S3 object. For an SSM
--   document, specify either the document name in the format
--   <tt>ssm-document://&lt;Document_name&gt;</tt> or the Amazon Resource
--   Name (ARN). For a parameter, specify either the parameter name in the
--   format <tt>ssm-parameter://&lt;Parameter_name&gt;</tt> or the ARN. For
--   an Amazon S3 object, specify the URI in the following format:
--   <tt>s3://&lt;bucket&gt;/&lt;objectKey&gt; </tt>. Here is an example:
--   s3://my-bucket/my-app/us-east-1/my-config.json
newCreateConfigurationProfile :: Text -> Text -> Text -> CreateConfigurationProfile

-- | <i>See:</i> <a>newConfigurationProfile</a> smart constructor.
data ConfigurationProfile
ConfigurationProfile' :: Maybe Text -> Maybe [Validator] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> ConfigurationProfile

-- | Create a value of <a>ConfigurationProfile</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:retrievalRoleArn:ConfigurationProfile'</a>,
--   <a>configurationProfile_retrievalRoleArn</a> - The ARN of an IAM role
--   with permission to access the configuration at the specified
--   LocationUri.
--   
--   <a>$sel:validators:ConfigurationProfile'</a>,
--   <a>configurationProfile_validators</a> - A list of methods for
--   validating the configuration.
--   
--   <a>$sel:locationUri:ConfigurationProfile'</a>,
--   <a>configurationProfile_locationUri</a> - The URI location of the
--   configuration.
--   
--   <a>$sel:applicationId:ConfigurationProfile'</a>,
--   <a>configurationProfile_applicationId</a> - The application ID.
--   
--   <a>$sel:name:ConfigurationProfile'</a>,
--   <a>configurationProfile_name</a> - The name of the configuration
--   profile.
--   
--   <a>$sel:id:ConfigurationProfile'</a>, <a>configurationProfile_id</a> -
--   The configuration profile ID.
--   
--   <a>$sel:description:ConfigurationProfile'</a>,
--   <a>configurationProfile_description</a> - The configuration profile
--   description.
newConfigurationProfile :: ConfigurationProfile

-- | <i>See:</i> <a>newGetDeployment</a> smart constructor.
data GetDeployment
GetDeployment' :: Text -> Text -> Int -> GetDeployment

-- | Create a value of <a>GetDeployment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationId:GetDeployment'</a>,
--   <a>getDeployment_applicationId</a> - The ID of the application that
--   includes the deployment you want to get.
--   
--   <a>$sel:environmentId:GetDeployment'</a>,
--   <a>getDeployment_environmentId</a> - The ID of the environment that
--   includes the deployment you want to get.
--   
--   <a>$sel:deploymentNumber:GetDeployment'</a>,
--   <a>getDeployment_deploymentNumber</a> - The sequence number of the
--   deployment.
newGetDeployment :: Text -> Text -> Int -> GetDeployment

-- | <i>See:</i> <a>newDeployment</a> smart constructor.
data Deployment
Deployment' :: Maybe Double -> Maybe Text -> Maybe DeploymentState -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe [DeploymentEvent] -> Maybe Double -> Maybe POSIX -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe GrowthType -> Deployment

-- | Create a value of <a>Deployment</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:growthFactor:Deployment'</a>, <a>deployment_growthFactor</a> -
--   The percentage of targets to receive a deployed configuration during
--   each interval.
--   
--   <a>$sel:configurationName:Deployment'</a>,
--   <a>deployment_configurationName</a> - The name of the configuration.
--   
--   <a>$sel:state:Deployment'</a>, <a>deployment_state</a> - The state of
--   the deployment.
--   
--   <a>$sel:deploymentStrategyId:Deployment'</a>,
--   <a>deployment_deploymentStrategyId</a> - The ID of the deployment
--   strategy that was deployed.
--   
--   <a>$sel:deploymentNumber:Deployment'</a>,
--   <a>deployment_deploymentNumber</a> - The sequence number of the
--   deployment.
--   
--   <a>$sel:configurationVersion:Deployment'</a>,
--   <a>deployment_configurationVersion</a> - The configuration version
--   that was deployed.
--   
--   <a>$sel:eventLog:Deployment'</a>, <a>deployment_eventLog</a> - A list
--   containing all events related to a deployment. The most recent events
--   are displayed first.
--   
--   <a>$sel:percentageComplete:Deployment'</a>,
--   <a>deployment_percentageComplete</a> - The percentage of targets for
--   which the deployment is available.
--   
--   <a>$sel:startedAt:Deployment'</a>, <a>deployment_startedAt</a> - The
--   time the deployment started.
--   
--   <a>$sel:applicationId:Deployment'</a>, <a>deployment_applicationId</a>
--   - The ID of the application that was deployed.
--   
--   <a>$sel:deploymentDurationInMinutes:Deployment'</a>,
--   <a>deployment_deploymentDurationInMinutes</a> - Total amount of time
--   the deployment lasted.
--   
--   <a>$sel:environmentId:Deployment'</a>, <a>deployment_environmentId</a>
--   - The ID of the environment that was deployed.
--   
--   <a>$sel:completedAt:Deployment'</a>, <a>deployment_completedAt</a> -
--   The time the deployment completed.
--   
--   <a>$sel:configurationLocationUri:Deployment'</a>,
--   <a>deployment_configurationLocationUri</a> - Information about the
--   source location of the configuration.
--   
--   <a>$sel:finalBakeTimeInMinutes:Deployment'</a>,
--   <a>deployment_finalBakeTimeInMinutes</a> - The amount of time
--   AppConfig monitored for alarms before considering the deployment to be
--   complete and no longer eligible for automatic roll back.
--   
--   <a>$sel:description:Deployment'</a>, <a>deployment_description</a> -
--   The description of the deployment.
--   
--   <a>$sel:configurationProfileId:Deployment'</a>,
--   <a>deployment_configurationProfileId</a> - The ID of the configuration
--   profile that was deployed.
--   
--   <a>$sel:growthType:Deployment'</a>, <a>deployment_growthType</a> - The
--   algorithm used to define how percentage grew over time.
newDeployment :: Deployment

-- | <i>See:</i> <a>newUpdateConfigurationProfile</a> smart constructor.
data UpdateConfigurationProfile
UpdateConfigurationProfile' :: Maybe Text -> Maybe [Validator] -> Maybe Text -> Maybe Text -> Text -> Text -> UpdateConfigurationProfile

-- | Create a value of <a>UpdateConfigurationProfile</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:retrievalRoleArn:UpdateConfigurationProfile'</a>,
--   <a>updateConfigurationProfile_retrievalRoleArn</a> - The ARN of an IAM
--   role with permission to access the configuration at the specified
--   LocationUri.
--   
--   <a>$sel:validators:UpdateConfigurationProfile'</a>,
--   <a>updateConfigurationProfile_validators</a> - A list of methods for
--   validating the configuration.
--   
--   <a>$sel:name:UpdateConfigurationProfile'</a>,
--   <a>updateConfigurationProfile_name</a> - The name of the configuration
--   profile.
--   
--   <a>$sel:description:UpdateConfigurationProfile'</a>,
--   <a>updateConfigurationProfile_description</a> - A description of the
--   configuration profile.
--   
--   <a>$sel:applicationId:UpdateConfigurationProfile'</a>,
--   <a>updateConfigurationProfile_applicationId</a> - The application ID.
--   
--   <a>$sel:configurationProfileId:UpdateConfigurationProfile'</a>,
--   <a>updateConfigurationProfile_configurationProfileId</a> - The ID of
--   the configuration profile.
newUpdateConfigurationProfile :: Text -> Text -> UpdateConfigurationProfile

-- | <i>See:</i> <a>newConfigurationProfile</a> smart constructor.
data ConfigurationProfile
ConfigurationProfile' :: Maybe Text -> Maybe [Validator] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> ConfigurationProfile

-- | Create a value of <a>ConfigurationProfile</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:retrievalRoleArn:ConfigurationProfile'</a>,
--   <a>configurationProfile_retrievalRoleArn</a> - The ARN of an IAM role
--   with permission to access the configuration at the specified
--   LocationUri.
--   
--   <a>$sel:validators:ConfigurationProfile'</a>,
--   <a>configurationProfile_validators</a> - A list of methods for
--   validating the configuration.
--   
--   <a>$sel:locationUri:ConfigurationProfile'</a>,
--   <a>configurationProfile_locationUri</a> - The URI location of the
--   configuration.
--   
--   <a>$sel:applicationId:ConfigurationProfile'</a>,
--   <a>configurationProfile_applicationId</a> - The application ID.
--   
--   <a>$sel:name:ConfigurationProfile'</a>,
--   <a>configurationProfile_name</a> - The name of the configuration
--   profile.
--   
--   <a>$sel:id:ConfigurationProfile'</a>, <a>configurationProfile_id</a> -
--   The configuration profile ID.
--   
--   <a>$sel:description:ConfigurationProfile'</a>,
--   <a>configurationProfile_description</a> - The configuration profile
--   description.
newConfigurationProfile :: ConfigurationProfile

-- | <i>See:</i> <a>newDeleteConfigurationProfile</a> smart constructor.
data DeleteConfigurationProfile
DeleteConfigurationProfile' :: Text -> Text -> DeleteConfigurationProfile

-- | Create a value of <a>DeleteConfigurationProfile</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationId:DeleteConfigurationProfile'</a>,
--   <a>deleteConfigurationProfile_applicationId</a> - The application ID
--   that includes the configuration profile you want to delete.
--   
--   <a>$sel:configurationProfileId:DeleteConfigurationProfile'</a>,
--   <a>deleteConfigurationProfile_configurationProfileId</a> - The ID of
--   the configuration profile you want to delete.
newDeleteConfigurationProfile :: Text -> Text -> DeleteConfigurationProfile

-- | <i>See:</i> <a>newDeleteConfigurationProfileResponse</a> smart
--   constructor.
data DeleteConfigurationProfileResponse
DeleteConfigurationProfileResponse' :: DeleteConfigurationProfileResponse

-- | Create a value of <a>DeleteConfigurationProfileResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteConfigurationProfileResponse :: DeleteConfigurationProfileResponse

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The resource ARN.
newListTagsForResource :: Text -> ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe (HashMap Text Text) -> Int -> ListTagsForResourceResponse

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - Metadata to assign to
--   AppConfig resources. Tags help organize and categorize your AppConfig
--   resources. Each tag consists of a key and an optional value, both of
--   which you define.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | <i>See:</i> <a>newListHostedConfigurationVersions</a> smart
--   constructor.
data ListHostedConfigurationVersions
ListHostedConfigurationVersions' :: Maybe Text -> Maybe Natural -> Text -> Text -> ListHostedConfigurationVersions

-- | Create a value of <a>ListHostedConfigurationVersions</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListHostedConfigurationVersions'</a>,
--   <a>listHostedConfigurationVersions_nextToken</a> - A token to start
--   the list. Use this token to get the next set of results.
--   
--   <a>$sel:maxResults:ListHostedConfigurationVersions'</a>,
--   <a>listHostedConfigurationVersions_maxResults</a> - The maximum number
--   of items to return for this call. The call also returns a token that
--   you can specify in a subsequent call to get the next set of results.
--   
--   <a>$sel:applicationId:ListHostedConfigurationVersions'</a>,
--   <a>listHostedConfigurationVersions_applicationId</a> - The application
--   ID.
--   
--   <a>$sel:configurationProfileId:ListHostedConfigurationVersions'</a>,
--   <a>listHostedConfigurationVersions_configurationProfileId</a> - The
--   configuration profile ID.
newListHostedConfigurationVersions :: Text -> Text -> ListHostedConfigurationVersions

-- | <i>See:</i> <a>newListHostedConfigurationVersionsResponse</a> smart
--   constructor.
data ListHostedConfigurationVersionsResponse
ListHostedConfigurationVersionsResponse' :: Maybe [HostedConfigurationVersionSummary] -> Maybe Text -> Int -> ListHostedConfigurationVersionsResponse

-- | Create a value of <a>ListHostedConfigurationVersionsResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:ListHostedConfigurationVersionsResponse'</a>,
--   <a>listHostedConfigurationVersionsResponse_items</a> - The elements
--   from this collection.
--   
--   <a>$sel:nextToken:ListHostedConfigurationVersions'</a>,
--   <a>listHostedConfigurationVersionsResponse_nextToken</a> - The token
--   for the next set of items to return. Use this token to get the next
--   set of results.
--   
--   <a>$sel:httpStatus:ListHostedConfigurationVersionsResponse'</a>,
--   <a>listHostedConfigurationVersionsResponse_httpStatus</a> - The
--   response's http status code.
newListHostedConfigurationVersionsResponse :: Int -> ListHostedConfigurationVersionsResponse

-- | <i>See:</i> <a>newGetConfigurationProfile</a> smart constructor.
data GetConfigurationProfile
GetConfigurationProfile' :: Text -> Text -> GetConfigurationProfile

-- | Create a value of <a>GetConfigurationProfile</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationId:GetConfigurationProfile'</a>,
--   <a>getConfigurationProfile_applicationId</a> - The ID of the
--   application that includes the configuration profile you want to get.
--   
--   <a>$sel:configurationProfileId:GetConfigurationProfile'</a>,
--   <a>getConfigurationProfile_configurationProfileId</a> - The ID of the
--   configuration profile you want to get.
newGetConfigurationProfile :: Text -> Text -> GetConfigurationProfile

-- | <i>See:</i> <a>newConfigurationProfile</a> smart constructor.
data ConfigurationProfile
ConfigurationProfile' :: Maybe Text -> Maybe [Validator] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> ConfigurationProfile

-- | Create a value of <a>ConfigurationProfile</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:retrievalRoleArn:ConfigurationProfile'</a>,
--   <a>configurationProfile_retrievalRoleArn</a> - The ARN of an IAM role
--   with permission to access the configuration at the specified
--   LocationUri.
--   
--   <a>$sel:validators:ConfigurationProfile'</a>,
--   <a>configurationProfile_validators</a> - A list of methods for
--   validating the configuration.
--   
--   <a>$sel:locationUri:ConfigurationProfile'</a>,
--   <a>configurationProfile_locationUri</a> - The URI location of the
--   configuration.
--   
--   <a>$sel:applicationId:ConfigurationProfile'</a>,
--   <a>configurationProfile_applicationId</a> - The application ID.
--   
--   <a>$sel:name:ConfigurationProfile'</a>,
--   <a>configurationProfile_name</a> - The name of the configuration
--   profile.
--   
--   <a>$sel:id:ConfigurationProfile'</a>, <a>configurationProfile_id</a> -
--   The configuration profile ID.
--   
--   <a>$sel:description:ConfigurationProfile'</a>,
--   <a>configurationProfile_description</a> - The configuration profile
--   description.
newConfigurationProfile :: ConfigurationProfile

-- | <i>See:</i> <a>newDeleteApplication</a> smart constructor.
data DeleteApplication
DeleteApplication' :: Text -> DeleteApplication

-- | Create a value of <a>DeleteApplication</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationId:DeleteApplication'</a>,
--   <a>deleteApplication_applicationId</a> - The ID of the application to
--   delete.
newDeleteApplication :: Text -> DeleteApplication

-- | <i>See:</i> <a>newDeleteApplicationResponse</a> smart constructor.
data DeleteApplicationResponse
DeleteApplicationResponse' :: DeleteApplicationResponse

-- | Create a value of <a>DeleteApplicationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteApplicationResponse :: DeleteApplicationResponse

-- | <i>See:</i> <a>newUpdateApplication</a> smart constructor.
data UpdateApplication
UpdateApplication' :: Maybe Text -> Maybe Text -> Text -> UpdateApplication

-- | Create a value of <a>UpdateApplication</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:UpdateApplication'</a>, <a>updateApplication_name</a> -
--   The name of the application.
--   
--   <a>$sel:description:UpdateApplication'</a>,
--   <a>updateApplication_description</a> - A description of the
--   application.
--   
--   <a>$sel:applicationId:UpdateApplication'</a>,
--   <a>updateApplication_applicationId</a> - The application ID.
newUpdateApplication :: Text -> UpdateApplication

-- | <i>See:</i> <a>newApplication</a> smart constructor.
data Application
Application' :: Maybe Text -> Maybe Text -> Maybe Text -> Application

-- | Create a value of <a>Application</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:Application'</a>, <a>application_name</a> - The
--   application name.
--   
--   <a>$sel:id:Application'</a>, <a>application_id</a> - The application
--   ID.
--   
--   <a>$sel:description:Application'</a>, <a>application_description</a> -
--   The description of the application.
newApplication :: Application

-- | <i>See:</i> <a>newUpdateDeploymentStrategy</a> smart constructor.
data UpdateDeploymentStrategy
UpdateDeploymentStrategy' :: Maybe Double -> Maybe Natural -> Maybe Natural -> Maybe Text -> Maybe GrowthType -> Text -> UpdateDeploymentStrategy

-- | Create a value of <a>UpdateDeploymentStrategy</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:growthFactor:UpdateDeploymentStrategy'</a>,
--   <a>updateDeploymentStrategy_growthFactor</a> - The percentage of
--   targets to receive a deployed configuration during each interval.
--   
--   <a>$sel:deploymentDurationInMinutes:UpdateDeploymentStrategy'</a>,
--   <a>updateDeploymentStrategy_deploymentDurationInMinutes</a> - Total
--   amount of time for a deployment to last.
--   
--   <a>$sel:finalBakeTimeInMinutes:UpdateDeploymentStrategy'</a>,
--   <a>updateDeploymentStrategy_finalBakeTimeInMinutes</a> - The amount of
--   time AppConfig monitors for alarms before considering the deployment
--   to be complete and no longer eligible for automatic roll back.
--   
--   <a>$sel:description:UpdateDeploymentStrategy'</a>,
--   <a>updateDeploymentStrategy_description</a> - A description of the
--   deployment strategy.
--   
--   <a>$sel:growthType:UpdateDeploymentStrategy'</a>,
--   <a>updateDeploymentStrategy_growthType</a> - The algorithm used to
--   define how percentage grows over time. AWS AppConfig supports the
--   following growth types:
--   
--   <b>Linear</b>: For this type, AppConfig processes the deployment by
--   increments of the growth factor evenly distributed over the deployment
--   time. For example, a linear deployment that uses a growth factor of 20
--   initially makes the configuration available to 20 percent of the
--   targets. After 1/5th of the deployment time has passed, the system
--   updates the percentage to 40 percent. This continues until 100% of the
--   targets are set to receive the deployed configuration.
--   
--   <b>Exponential</b>: For this type, AppConfig processes the deployment
--   exponentially using the following formula: <tt>G*(2^N)</tt>. In this
--   formula, <tt>G</tt> is the growth factor specified by the user and
--   <tt>N</tt> is the number of steps until the configuration is deployed
--   to all targets. For example, if you specify a growth factor of 2, then
--   the system rolls out the configuration as follows:
--   
--   <pre>
--   2*(2^0)
--   </pre>
--   
--   <pre>
--   2*(2^1)
--   </pre>
--   
--   <pre>
--   2*(2^2)
--   </pre>
--   
--   Expressed numerically, the deployment rolls out as follows: 2% of the
--   targets, 4% of the targets, 8% of the targets, and continues until the
--   configuration has been deployed to all targets.
--   
--   <a>$sel:deploymentStrategyId:UpdateDeploymentStrategy'</a>,
--   <a>updateDeploymentStrategy_deploymentStrategyId</a> - The deployment
--   strategy ID.
newUpdateDeploymentStrategy :: Text -> UpdateDeploymentStrategy

-- | <i>See:</i> <a>newDeploymentStrategy</a> smart constructor.
data DeploymentStrategy
DeploymentStrategy' :: Maybe Double -> Maybe ReplicateTo -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Natural -> Maybe Text -> Maybe GrowthType -> DeploymentStrategy

-- | Create a value of <a>DeploymentStrategy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:growthFactor:DeploymentStrategy'</a>,
--   <a>deploymentStrategy_growthFactor</a> - The percentage of targets
--   that received a deployed configuration during each interval.
--   
--   <a>$sel:replicateTo:DeploymentStrategy'</a>,
--   <a>deploymentStrategy_replicateTo</a> - Save the deployment strategy
--   to a Systems Manager (SSM) document.
--   
--   <a>$sel:name:DeploymentStrategy'</a>, <a>deploymentStrategy_name</a> -
--   The name of the deployment strategy.
--   
--   <a>$sel:id:DeploymentStrategy'</a>, <a>deploymentStrategy_id</a> - The
--   deployment strategy ID.
--   
--   <a>$sel:deploymentDurationInMinutes:DeploymentStrategy'</a>,
--   <a>deploymentStrategy_deploymentDurationInMinutes</a> - Total amount
--   of time the deployment lasted.
--   
--   <a>$sel:finalBakeTimeInMinutes:DeploymentStrategy'</a>,
--   <a>deploymentStrategy_finalBakeTimeInMinutes</a> - The amount of time
--   AppConfig monitored for alarms before considering the deployment to be
--   complete and no longer eligible for automatic roll back.
--   
--   <a>$sel:description:DeploymentStrategy'</a>,
--   <a>deploymentStrategy_description</a> - The description of the
--   deployment strategy.
--   
--   <a>$sel:growthType:DeploymentStrategy'</a>,
--   <a>deploymentStrategy_growthType</a> - The algorithm used to define
--   how percentage grew over time.
newDeploymentStrategy :: DeploymentStrategy

-- | <i>See:</i> <a>newDeleteDeploymentStrategy</a> smart constructor.
data DeleteDeploymentStrategy
DeleteDeploymentStrategy' :: Text -> DeleteDeploymentStrategy

-- | Create a value of <a>DeleteDeploymentStrategy</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentStrategyId:DeleteDeploymentStrategy'</a>,
--   <a>deleteDeploymentStrategy_deploymentStrategyId</a> - The ID of the
--   deployment strategy you want to delete.
newDeleteDeploymentStrategy :: Text -> DeleteDeploymentStrategy

-- | <i>See:</i> <a>newDeleteDeploymentStrategyResponse</a> smart
--   constructor.
data DeleteDeploymentStrategyResponse
DeleteDeploymentStrategyResponse' :: DeleteDeploymentStrategyResponse

-- | Create a value of <a>DeleteDeploymentStrategyResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteDeploymentStrategyResponse :: DeleteDeploymentStrategyResponse

-- | <i>See:</i> <a>newCreateApplication</a> smart constructor.
data CreateApplication
CreateApplication' :: Maybe Text -> Maybe (HashMap Text Text) -> Text -> CreateApplication

-- | Create a value of <a>CreateApplication</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:CreateApplication'</a>,
--   <a>createApplication_description</a> - A description of the
--   application.
--   
--   <a>$sel:tags:CreateApplication'</a>, <a>createApplication_tags</a> -
--   Metadata to assign to the application. Tags help organize and
--   categorize your AppConfig resources. Each tag consists of a key and an
--   optional value, both of which you define.
--   
--   <a>$sel:name:CreateApplication'</a>, <a>createApplication_name</a> - A
--   name for the application.
newCreateApplication :: Text -> CreateApplication

-- | <i>See:</i> <a>newApplication</a> smart constructor.
data Application
Application' :: Maybe Text -> Maybe Text -> Maybe Text -> Application

-- | Create a value of <a>Application</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:Application'</a>, <a>application_name</a> - The
--   application name.
--   
--   <a>$sel:id:Application'</a>, <a>application_id</a> - The application
--   ID.
--   
--   <a>$sel:description:Application'</a>, <a>application_description</a> -
--   The description of the application.
newApplication :: Application

-- | <i>See:</i> <a>newValidateConfiguration</a> smart constructor.
data ValidateConfiguration
ValidateConfiguration' :: Text -> Text -> Text -> ValidateConfiguration

-- | Create a value of <a>ValidateConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationId:ValidateConfiguration'</a>,
--   <a>validateConfiguration_applicationId</a> - The application ID.
--   
--   <a>$sel:configurationProfileId:ValidateConfiguration'</a>,
--   <a>validateConfiguration_configurationProfileId</a> - The
--   configuration profile ID.
--   
--   <a>$sel:configurationVersion:ValidateConfiguration'</a>,
--   <a>validateConfiguration_configurationVersion</a> - The version of the
--   configuration to validate.
newValidateConfiguration :: Text -> Text -> Text -> ValidateConfiguration

-- | <i>See:</i> <a>newValidateConfigurationResponse</a> smart constructor.
data ValidateConfigurationResponse
ValidateConfigurationResponse' :: ValidateConfigurationResponse

-- | Create a value of <a>ValidateConfigurationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newValidateConfigurationResponse :: ValidateConfigurationResponse

-- | <i>See:</i> <a>newStopDeployment</a> smart constructor.
data StopDeployment
StopDeployment' :: Text -> Text -> Int -> StopDeployment

-- | Create a value of <a>StopDeployment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationId:StopDeployment'</a>,
--   <a>stopDeployment_applicationId</a> - The application ID.
--   
--   <a>$sel:environmentId:StopDeployment'</a>,
--   <a>stopDeployment_environmentId</a> - The environment ID.
--   
--   <a>$sel:deploymentNumber:StopDeployment'</a>,
--   <a>stopDeployment_deploymentNumber</a> - The sequence number of the
--   deployment.
newStopDeployment :: Text -> Text -> Int -> StopDeployment

-- | <i>See:</i> <a>newDeployment</a> smart constructor.
data Deployment
Deployment' :: Maybe Double -> Maybe Text -> Maybe DeploymentState -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe [DeploymentEvent] -> Maybe Double -> Maybe POSIX -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe GrowthType -> Deployment

-- | Create a value of <a>Deployment</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:growthFactor:Deployment'</a>, <a>deployment_growthFactor</a> -
--   The percentage of targets to receive a deployed configuration during
--   each interval.
--   
--   <a>$sel:configurationName:Deployment'</a>,
--   <a>deployment_configurationName</a> - The name of the configuration.
--   
--   <a>$sel:state:Deployment'</a>, <a>deployment_state</a> - The state of
--   the deployment.
--   
--   <a>$sel:deploymentStrategyId:Deployment'</a>,
--   <a>deployment_deploymentStrategyId</a> - The ID of the deployment
--   strategy that was deployed.
--   
--   <a>$sel:deploymentNumber:Deployment'</a>,
--   <a>deployment_deploymentNumber</a> - The sequence number of the
--   deployment.
--   
--   <a>$sel:configurationVersion:Deployment'</a>,
--   <a>deployment_configurationVersion</a> - The configuration version
--   that was deployed.
--   
--   <a>$sel:eventLog:Deployment'</a>, <a>deployment_eventLog</a> - A list
--   containing all events related to a deployment. The most recent events
--   are displayed first.
--   
--   <a>$sel:percentageComplete:Deployment'</a>,
--   <a>deployment_percentageComplete</a> - The percentage of targets for
--   which the deployment is available.
--   
--   <a>$sel:startedAt:Deployment'</a>, <a>deployment_startedAt</a> - The
--   time the deployment started.
--   
--   <a>$sel:applicationId:Deployment'</a>, <a>deployment_applicationId</a>
--   - The ID of the application that was deployed.
--   
--   <a>$sel:deploymentDurationInMinutes:Deployment'</a>,
--   <a>deployment_deploymentDurationInMinutes</a> - Total amount of time
--   the deployment lasted.
--   
--   <a>$sel:environmentId:Deployment'</a>, <a>deployment_environmentId</a>
--   - The ID of the environment that was deployed.
--   
--   <a>$sel:completedAt:Deployment'</a>, <a>deployment_completedAt</a> -
--   The time the deployment completed.
--   
--   <a>$sel:configurationLocationUri:Deployment'</a>,
--   <a>deployment_configurationLocationUri</a> - Information about the
--   source location of the configuration.
--   
--   <a>$sel:finalBakeTimeInMinutes:Deployment'</a>,
--   <a>deployment_finalBakeTimeInMinutes</a> - The amount of time
--   AppConfig monitored for alarms before considering the deployment to be
--   complete and no longer eligible for automatic roll back.
--   
--   <a>$sel:description:Deployment'</a>, <a>deployment_description</a> -
--   The description of the deployment.
--   
--   <a>$sel:configurationProfileId:Deployment'</a>,
--   <a>deployment_configurationProfileId</a> - The ID of the configuration
--   profile that was deployed.
--   
--   <a>$sel:growthType:Deployment'</a>, <a>deployment_growthType</a> - The
--   algorithm used to define how percentage grew over time.
newDeployment :: Deployment

-- | <i>See:</i> <a>newGetApplication</a> smart constructor.
data GetApplication
GetApplication' :: Text -> GetApplication

-- | Create a value of <a>GetApplication</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationId:GetApplication'</a>,
--   <a>getApplication_applicationId</a> - The ID of the application you
--   want to get.
newGetApplication :: Text -> GetApplication

-- | <i>See:</i> <a>newApplication</a> smart constructor.
data Application
Application' :: Maybe Text -> Maybe Text -> Maybe Text -> Application

-- | Create a value of <a>Application</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:Application'</a>, <a>application_name</a> - The
--   application name.
--   
--   <a>$sel:id:Application'</a>, <a>application_id</a> - The application
--   ID.
--   
--   <a>$sel:description:Application'</a>, <a>application_description</a> -
--   The description of the application.
newApplication :: Application

-- | <i>See:</i> <a>newCreateHostedConfigurationVersion</a> smart
--   constructor.
data CreateHostedConfigurationVersion
CreateHostedConfigurationVersion' :: Maybe Int -> Maybe Text -> Text -> Text -> Sensitive ByteString -> Text -> CreateHostedConfigurationVersion

-- | Create a value of <a>CreateHostedConfigurationVersion</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:latestVersionNumber:CreateHostedConfigurationVersion'</a>,
--   <a>createHostedConfigurationVersion_latestVersionNumber</a> - An
--   optional locking token used to prevent race conditions from
--   overwriting configuration updates when creating a new version. To
--   ensure your data is not overwritten when creating multiple hosted
--   configuration versions in rapid succession, specify the version of the
--   latest hosted configuration version.
--   
--   <a>$sel:description:CreateHostedConfigurationVersion'</a>,
--   <a>createHostedConfigurationVersion_description</a> - A description of
--   the configuration.
--   
--   <a>$sel:applicationId:CreateHostedConfigurationVersion'</a>,
--   <a>createHostedConfigurationVersion_applicationId</a> - The
--   application ID.
--   
--   <a>$sel:configurationProfileId:CreateHostedConfigurationVersion'</a>,
--   <a>createHostedConfigurationVersion_configurationProfileId</a> - The
--   configuration profile ID.
--   
--   <a>$sel:content:CreateHostedConfigurationVersion'</a>,
--   <a>createHostedConfigurationVersion_content</a> - The content of the
--   configuration or the configuration data.
--   
--   <a>$sel:contentType:CreateHostedConfigurationVersion'</a>,
--   <a>createHostedConfigurationVersion_contentType</a> - A standard MIME
--   type describing the format of the configuration content. For more
--   information, see <a>Content-Type</a>.
newCreateHostedConfigurationVersion :: Text -> Text -> ByteString -> Text -> CreateHostedConfigurationVersion

-- | <i>See:</i> <a>newHostedConfigurationVersion</a> smart constructor.
data HostedConfigurationVersion
HostedConfigurationVersion' :: Maybe (Sensitive ByteString) -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> HostedConfigurationVersion

-- | Create a value of <a>HostedConfigurationVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:content:HostedConfigurationVersion'</a>,
--   <a>hostedConfigurationVersion_content</a> - The content of the
--   configuration or the configuration data.
--   
--   <a>$sel:versionNumber:HostedConfigurationVersion'</a>,
--   <a>hostedConfigurationVersion_versionNumber</a> - The configuration
--   version.
--   
--   <a>$sel:applicationId:HostedConfigurationVersion'</a>,
--   <a>hostedConfigurationVersion_applicationId</a> - The application ID.
--   
--   <a>$sel:description:HostedConfigurationVersion'</a>,
--   <a>hostedConfigurationVersion_description</a> - A description of the
--   configuration.
--   
--   <a>$sel:configurationProfileId:HostedConfigurationVersion'</a>,
--   <a>hostedConfigurationVersion_configurationProfileId</a> - The
--   configuration profile ID.
--   
--   <a>$sel:contentType:HostedConfigurationVersion'</a>,
--   <a>hostedConfigurationVersion_contentType</a> - A standard MIME type
--   describing the format of the configuration content. For more
--   information, see <a>Content-Type</a>.
newHostedConfigurationVersion :: HostedConfigurationVersion

-- | <i>See:</i> <a>newListConfigurationProfiles</a> smart constructor.
data ListConfigurationProfiles
ListConfigurationProfiles' :: Maybe Text -> Maybe Natural -> Text -> ListConfigurationProfiles

-- | Create a value of <a>ListConfigurationProfiles</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListConfigurationProfiles'</a>,
--   <a>listConfigurationProfiles_nextToken</a> - A token to start the
--   list. Use this token to get the next set of results.
--   
--   <a>$sel:maxResults:ListConfigurationProfiles'</a>,
--   <a>listConfigurationProfiles_maxResults</a> - The maximum number of
--   items to return for this call. The call also returns a token that you
--   can specify in a subsequent call to get the next set of results.
--   
--   <a>$sel:applicationId:ListConfigurationProfiles'</a>,
--   <a>listConfigurationProfiles_applicationId</a> - The application ID.
newListConfigurationProfiles :: Text -> ListConfigurationProfiles

-- | <i>See:</i> <a>newListConfigurationProfilesResponse</a> smart
--   constructor.
data ListConfigurationProfilesResponse
ListConfigurationProfilesResponse' :: Maybe [ConfigurationProfileSummary] -> Maybe Text -> Int -> ListConfigurationProfilesResponse

-- | Create a value of <a>ListConfigurationProfilesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:ListConfigurationProfilesResponse'</a>,
--   <a>listConfigurationProfilesResponse_items</a> - The elements from
--   this collection.
--   
--   <a>$sel:nextToken:ListConfigurationProfiles'</a>,
--   <a>listConfigurationProfilesResponse_nextToken</a> - The token for the
--   next set of items to return. Use this token to get the next set of
--   results.
--   
--   <a>$sel:httpStatus:ListConfigurationProfilesResponse'</a>,
--   <a>listConfigurationProfilesResponse_httpStatus</a> - The response's
--   http status code.
newListConfigurationProfilesResponse :: Int -> ListConfigurationProfilesResponse

-- | <i>See:</i> <a>newDeleteHostedConfigurationVersion</a> smart
--   constructor.
data DeleteHostedConfigurationVersion
DeleteHostedConfigurationVersion' :: Text -> Text -> Int -> DeleteHostedConfigurationVersion

-- | Create a value of <a>DeleteHostedConfigurationVersion</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationId:DeleteHostedConfigurationVersion'</a>,
--   <a>deleteHostedConfigurationVersion_applicationId</a> - The
--   application ID.
--   
--   <a>$sel:configurationProfileId:DeleteHostedConfigurationVersion'</a>,
--   <a>deleteHostedConfigurationVersion_configurationProfileId</a> - The
--   configuration profile ID.
--   
--   <a>$sel:versionNumber:DeleteHostedConfigurationVersion'</a>,
--   <a>deleteHostedConfigurationVersion_versionNumber</a> - The versions
--   number to delete.
newDeleteHostedConfigurationVersion :: Text -> Text -> Int -> DeleteHostedConfigurationVersion

-- | <i>See:</i> <a>newDeleteHostedConfigurationVersionResponse</a> smart
--   constructor.
data DeleteHostedConfigurationVersionResponse
DeleteHostedConfigurationVersionResponse' :: DeleteHostedConfigurationVersionResponse

-- | Create a value of <a>DeleteHostedConfigurationVersionResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteHostedConfigurationVersionResponse :: DeleteHostedConfigurationVersionResponse

-- | <i>See:</i> <a>newGetHostedConfigurationVersion</a> smart constructor.
data GetHostedConfigurationVersion
GetHostedConfigurationVersion' :: Text -> Text -> Int -> GetHostedConfigurationVersion

-- | Create a value of <a>GetHostedConfigurationVersion</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationId:GetHostedConfigurationVersion'</a>,
--   <a>getHostedConfigurationVersion_applicationId</a> - The application
--   ID.
--   
--   <a>$sel:configurationProfileId:GetHostedConfigurationVersion'</a>,
--   <a>getHostedConfigurationVersion_configurationProfileId</a> - The
--   configuration profile ID.
--   
--   <a>$sel:versionNumber:GetHostedConfigurationVersion'</a>,
--   <a>getHostedConfigurationVersion_versionNumber</a> - The version.
newGetHostedConfigurationVersion :: Text -> Text -> Int -> GetHostedConfigurationVersion

-- | <i>See:</i> <a>newHostedConfigurationVersion</a> smart constructor.
data HostedConfigurationVersion
HostedConfigurationVersion' :: Maybe (Sensitive ByteString) -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> HostedConfigurationVersion

-- | Create a value of <a>HostedConfigurationVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:content:HostedConfigurationVersion'</a>,
--   <a>hostedConfigurationVersion_content</a> - The content of the
--   configuration or the configuration data.
--   
--   <a>$sel:versionNumber:HostedConfigurationVersion'</a>,
--   <a>hostedConfigurationVersion_versionNumber</a> - The configuration
--   version.
--   
--   <a>$sel:applicationId:HostedConfigurationVersion'</a>,
--   <a>hostedConfigurationVersion_applicationId</a> - The application ID.
--   
--   <a>$sel:description:HostedConfigurationVersion'</a>,
--   <a>hostedConfigurationVersion_description</a> - A description of the
--   configuration.
--   
--   <a>$sel:configurationProfileId:HostedConfigurationVersion'</a>,
--   <a>hostedConfigurationVersion_configurationProfileId</a> - The
--   configuration profile ID.
--   
--   <a>$sel:contentType:HostedConfigurationVersion'</a>,
--   <a>hostedConfigurationVersion_contentType</a> - A standard MIME type
--   describing the format of the configuration content. For more
--   information, see <a>Content-Type</a>.
newHostedConfigurationVersion :: HostedConfigurationVersion

-- | <i>See:</i> <a>newListDeployments</a> smart constructor.
data ListDeployments
ListDeployments' :: Maybe Text -> Maybe Natural -> Text -> Text -> ListDeployments

-- | Create a value of <a>ListDeployments</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDeployments'</a>,
--   <a>listDeployments_nextToken</a> - A token to start the list. Use this
--   token to get the next set of results.
--   
--   <a>$sel:maxResults:ListDeployments'</a>,
--   <a>listDeployments_maxResults</a> - The maximum number of items to
--   return for this call. The call also returns a token that you can
--   specify in a subsequent call to get the next set of results.
--   
--   <a>$sel:applicationId:ListDeployments'</a>,
--   <a>listDeployments_applicationId</a> - The application ID.
--   
--   <a>$sel:environmentId:ListDeployments'</a>,
--   <a>listDeployments_environmentId</a> - The environment ID.
newListDeployments :: Text -> Text -> ListDeployments

-- | <i>See:</i> <a>newListDeploymentsResponse</a> smart constructor.
data ListDeploymentsResponse
ListDeploymentsResponse' :: Maybe [DeploymentSummary] -> Maybe Text -> Int -> ListDeploymentsResponse

-- | Create a value of <a>ListDeploymentsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:ListDeploymentsResponse'</a>,
--   <a>listDeploymentsResponse_items</a> - The elements from this
--   collection.
--   
--   <a>$sel:nextToken:ListDeployments'</a>,
--   <a>listDeploymentsResponse_nextToken</a> - The token for the next set
--   of items to return. Use this token to get the next set of results.
--   
--   <a>$sel:httpStatus:ListDeploymentsResponse'</a>,
--   <a>listDeploymentsResponse_httpStatus</a> - The response's http status
--   code.
newListDeploymentsResponse :: Int -> ListDeploymentsResponse

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> HashMap Text Text -> TagResource

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The ARN of the resource for which to retrieve tags.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - The key-value
--   string map. The valid character set is [a-zA-Z+-=._:/]. The tag key
--   can be up to 128 characters and must not start with <tt>aws:</tt>. The
--   tag value can be up to 256 characters.
newTagResource :: Text -> TagResource

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newTagResourceResponse :: TagResourceResponse

-- | <i>See:</i> <a>newGetEnvironment</a> smart constructor.
data GetEnvironment
GetEnvironment' :: Text -> Text -> GetEnvironment

-- | Create a value of <a>GetEnvironment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationId:GetEnvironment'</a>,
--   <a>getEnvironment_applicationId</a> - The ID of the application that
--   includes the environment you want to get.
--   
--   <a>$sel:environmentId:GetEnvironment'</a>,
--   <a>getEnvironment_environmentId</a> - The ID of the environment you
--   wnat to get.
newGetEnvironment :: Text -> Text -> GetEnvironment

-- | <i>See:</i> <a>newEnvironment</a> smart constructor.
data Environment
Environment' :: Maybe EnvironmentState -> Maybe [Monitor] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Environment

-- | Create a value of <a>Environment</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:Environment'</a>, <a>environment_state</a> - The state
--   of the environment. An environment can be in one of the following
--   states: <tt>READY_FOR_DEPLOYMENT</tt>, <tt>DEPLOYING</tt>,
--   <tt>ROLLING_BACK</tt>, or <tt>ROLLED_BACK</tt>
--   
--   <a>$sel:monitors:Environment'</a>, <a>environment_monitors</a> -
--   Amazon CloudWatch alarms monitored during the deployment.
--   
--   <a>$sel:applicationId:Environment'</a>,
--   <a>environment_applicationId</a> - The application ID.
--   
--   <a>$sel:name:Environment'</a>, <a>environment_name</a> - The name of
--   the environment.
--   
--   <a>$sel:id:Environment'</a>, <a>environment_id</a> - The environment
--   ID.
--   
--   <a>$sel:description:Environment'</a>, <a>environment_description</a> -
--   The description of the environment.
newEnvironment :: Environment

-- | <i>See:</i> <a>newListApplications</a> smart constructor.
data ListApplications
ListApplications' :: Maybe Text -> Maybe Natural -> ListApplications

-- | Create a value of <a>ListApplications</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListApplications'</a>,
--   <a>listApplications_nextToken</a> - A token to start the list. Use
--   this token to get the next set of results.
--   
--   <a>$sel:maxResults:ListApplications'</a>,
--   <a>listApplications_maxResults</a> - The maximum number of items to
--   return for this call. The call also returns a token that you can
--   specify in a subsequent call to get the next set of results.
newListApplications :: ListApplications

-- | <i>See:</i> <a>newListApplicationsResponse</a> smart constructor.
data ListApplicationsResponse
ListApplicationsResponse' :: Maybe [Application] -> Maybe Text -> Int -> ListApplicationsResponse

-- | Create a value of <a>ListApplicationsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:ListApplicationsResponse'</a>,
--   <a>listApplicationsResponse_items</a> - The elements from this
--   collection.
--   
--   <a>$sel:nextToken:ListApplications'</a>,
--   <a>listApplicationsResponse_nextToken</a> - The token for the next set
--   of items to return. Use this token to get the next set of results.
--   
--   <a>$sel:httpStatus:ListApplicationsResponse'</a>,
--   <a>listApplicationsResponse_httpStatus</a> - The response's http
--   status code.
newListApplicationsResponse :: Int -> ListApplicationsResponse

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The ARN of the resource for which
--   to remove tags.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   tag keys to delete.
newUntagResource :: Text -> UntagResource

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUntagResourceResponse :: UntagResourceResponse

-- | <i>See:</i> <a>newListDeploymentStrategies</a> smart constructor.
data ListDeploymentStrategies
ListDeploymentStrategies' :: Maybe Text -> Maybe Natural -> ListDeploymentStrategies

-- | Create a value of <a>ListDeploymentStrategies</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDeploymentStrategies'</a>,
--   <a>listDeploymentStrategies_nextToken</a> - A token to start the list.
--   Use this token to get the next set of results.
--   
--   <a>$sel:maxResults:ListDeploymentStrategies'</a>,
--   <a>listDeploymentStrategies_maxResults</a> - The maximum number of
--   items to return for this call. The call also returns a token that you
--   can specify in a subsequent call to get the next set of results.
newListDeploymentStrategies :: ListDeploymentStrategies

-- | <i>See:</i> <a>newListDeploymentStrategiesResponse</a> smart
--   constructor.
data ListDeploymentStrategiesResponse
ListDeploymentStrategiesResponse' :: Maybe [DeploymentStrategy] -> Maybe Text -> Int -> ListDeploymentStrategiesResponse

-- | Create a value of <a>ListDeploymentStrategiesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:ListDeploymentStrategiesResponse'</a>,
--   <a>listDeploymentStrategiesResponse_items</a> - The elements from this
--   collection.
--   
--   <a>$sel:nextToken:ListDeploymentStrategies'</a>,
--   <a>listDeploymentStrategiesResponse_nextToken</a> - The token for the
--   next set of items to return. Use this token to get the next set of
--   results.
--   
--   <a>$sel:httpStatus:ListDeploymentStrategiesResponse'</a>,
--   <a>listDeploymentStrategiesResponse_httpStatus</a> - The response's
--   http status code.
newListDeploymentStrategiesResponse :: Int -> ListDeploymentStrategiesResponse

-- | <i>See:</i> <a>newGetConfiguration</a> smart constructor.
data GetConfiguration
GetConfiguration' :: Maybe Text -> Text -> Text -> Text -> Text -> GetConfiguration

-- | Create a value of <a>GetConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientConfigurationVersion:GetConfiguration'</a>,
--   <a>getConfiguration_clientConfigurationVersion</a> - The configuration
--   version returned in the most recent <tt>GetConfiguration</tt>
--   response.
--   
--   AWS AppConfig uses the value of the
--   <tt>ClientConfigurationVersion</tt> parameter to identify the
--   configuration version on your clients. If you don’t send
--   <tt>ClientConfigurationVersion</tt> with each call to
--   <tt>GetConfiguration</tt>, your clients receive the current
--   configuration. You are charged each time your clients receive a
--   configuration.
--   
--   To avoid excess charges, we recommend that you include the
--   <tt>ClientConfigurationVersion</tt> value with every call to
--   <tt>GetConfiguration</tt>. This value must be saved on your client.
--   Subsequent calls to <tt>GetConfiguration</tt> must pass this value by
--   using the <tt>ClientConfigurationVersion</tt> parameter.
--   
--   For more information about working with configurations, see
--   <a>Retrieving the Configuration</a> in the <i>AWS AppConfig User
--   Guide</i>.
--   
--   <a>$sel:application:GetConfiguration'</a>,
--   <a>getConfiguration_application</a> - The application to get. Specify
--   either the application name or the application ID.
--   
--   <a>$sel:environment:GetConfiguration'</a>,
--   <a>getConfiguration_environment</a> - The environment to get. Specify
--   either the environment name or the environment ID.
--   
--   <a>$sel:configuration:GetConfiguration'</a>,
--   <a>getConfiguration_configuration</a> - The configuration to get.
--   Specify either the configuration name or the configuration ID.
--   
--   <a>$sel:clientId:GetConfiguration'</a>,
--   <a>getConfiguration_clientId</a> - A unique ID to identify the client
--   for the configuration. This ID enables AppConfig to deploy the
--   configuration in intervals, as defined in the deployment strategy.
newGetConfiguration :: Text -> Text -> Text -> Text -> GetConfiguration

-- | <i>See:</i> <a>newGetConfigurationResponse</a> smart constructor.
data GetConfigurationResponse
GetConfigurationResponse' :: Maybe Text -> Maybe (Sensitive ByteString) -> Maybe Text -> Int -> GetConfigurationResponse

-- | Create a value of <a>GetConfigurationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configurationVersion:GetConfigurationResponse'</a>,
--   <a>getConfigurationResponse_configurationVersion</a> - The
--   configuration version.
--   
--   <a>$sel:content:GetConfigurationResponse'</a>,
--   <a>getConfigurationResponse_content</a> - The content of the
--   configuration or the configuration data.
--   
--   <a>$sel:contentType:GetConfigurationResponse'</a>,
--   <a>getConfigurationResponse_contentType</a> - A standard MIME type
--   describing the format of the configuration content. For more
--   information, see <a>Content-Type</a>.
--   
--   <a>$sel:httpStatus:GetConfigurationResponse'</a>,
--   <a>getConfigurationResponse_httpStatus</a> - The response's http
--   status code.
newGetConfigurationResponse :: Int -> GetConfigurationResponse

-- | <i>See:</i> <a>newCreateDeploymentStrategy</a> smart constructor.
data CreateDeploymentStrategy
CreateDeploymentStrategy' :: Maybe Natural -> Maybe Text -> Maybe GrowthType -> Maybe (HashMap Text Text) -> Text -> Natural -> Double -> ReplicateTo -> CreateDeploymentStrategy

-- | Create a value of <a>CreateDeploymentStrategy</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:finalBakeTimeInMinutes:CreateDeploymentStrategy'</a>,
--   <a>createDeploymentStrategy_finalBakeTimeInMinutes</a> - The amount of
--   time AppConfig monitors for alarms before considering the deployment
--   to be complete and no longer eligible for automatic roll back.
--   
--   <a>$sel:description:CreateDeploymentStrategy'</a>,
--   <a>createDeploymentStrategy_description</a> - A description of the
--   deployment strategy.
--   
--   <a>$sel:growthType:CreateDeploymentStrategy'</a>,
--   <a>createDeploymentStrategy_growthType</a> - The algorithm used to
--   define how percentage grows over time. AWS AppConfig supports the
--   following growth types:
--   
--   <b>Linear</b>: For this type, AppConfig processes the deployment by
--   dividing the total number of targets by the value specified for
--   <tt>Step percentage</tt>. For example, a linear deployment that uses a
--   <tt>Step percentage</tt> of 10 deploys the configuration to 10 percent
--   of the hosts. After those deployments are complete, the system deploys
--   the configuration to the next 10 percent. This continues until 100% of
--   the targets have successfully received the configuration.
--   
--   <b>Exponential</b>: For this type, AppConfig processes the deployment
--   exponentially using the following formula: <tt>G*(2^N)</tt>. In this
--   formula, <tt>G</tt> is the growth factor specified by the user and
--   <tt>N</tt> is the number of steps until the configuration is deployed
--   to all targets. For example, if you specify a growth factor of 2, then
--   the system rolls out the configuration as follows:
--   
--   <pre>
--   2*(2^0)
--   </pre>
--   
--   <pre>
--   2*(2^1)
--   </pre>
--   
--   <pre>
--   2*(2^2)
--   </pre>
--   
--   Expressed numerically, the deployment rolls out as follows: 2% of the
--   targets, 4% of the targets, 8% of the targets, and continues until the
--   configuration has been deployed to all targets.
--   
--   <a>$sel:tags:CreateDeploymentStrategy'</a>,
--   <a>createDeploymentStrategy_tags</a> - Metadata to assign to the
--   deployment strategy. Tags help organize and categorize your AppConfig
--   resources. Each tag consists of a key and an optional value, both of
--   which you define.
--   
--   <a>$sel:name:CreateDeploymentStrategy'</a>,
--   <a>createDeploymentStrategy_name</a> - A name for the deployment
--   strategy.
--   
--   <a>$sel:deploymentDurationInMinutes:CreateDeploymentStrategy'</a>,
--   <a>createDeploymentStrategy_deploymentDurationInMinutes</a> - Total
--   amount of time for a deployment to last.
--   
--   <a>$sel:growthFactor:CreateDeploymentStrategy'</a>,
--   <a>createDeploymentStrategy_growthFactor</a> - The percentage of
--   targets to receive a deployed configuration during each interval.
--   
--   <a>$sel:replicateTo:CreateDeploymentStrategy'</a>,
--   <a>createDeploymentStrategy_replicateTo</a> - Save the deployment
--   strategy to a Systems Manager (SSM) document.
newCreateDeploymentStrategy :: Text -> Natural -> Double -> ReplicateTo -> CreateDeploymentStrategy

-- | <i>See:</i> <a>newDeploymentStrategy</a> smart constructor.
data DeploymentStrategy
DeploymentStrategy' :: Maybe Double -> Maybe ReplicateTo -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Natural -> Maybe Text -> Maybe GrowthType -> DeploymentStrategy

-- | Create a value of <a>DeploymentStrategy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:growthFactor:DeploymentStrategy'</a>,
--   <a>deploymentStrategy_growthFactor</a> - The percentage of targets
--   that received a deployed configuration during each interval.
--   
--   <a>$sel:replicateTo:DeploymentStrategy'</a>,
--   <a>deploymentStrategy_replicateTo</a> - Save the deployment strategy
--   to a Systems Manager (SSM) document.
--   
--   <a>$sel:name:DeploymentStrategy'</a>, <a>deploymentStrategy_name</a> -
--   The name of the deployment strategy.
--   
--   <a>$sel:id:DeploymentStrategy'</a>, <a>deploymentStrategy_id</a> - The
--   deployment strategy ID.
--   
--   <a>$sel:deploymentDurationInMinutes:DeploymentStrategy'</a>,
--   <a>deploymentStrategy_deploymentDurationInMinutes</a> - Total amount
--   of time the deployment lasted.
--   
--   <a>$sel:finalBakeTimeInMinutes:DeploymentStrategy'</a>,
--   <a>deploymentStrategy_finalBakeTimeInMinutes</a> - The amount of time
--   AppConfig monitored for alarms before considering the deployment to be
--   complete and no longer eligible for automatic roll back.
--   
--   <a>$sel:description:DeploymentStrategy'</a>,
--   <a>deploymentStrategy_description</a> - The description of the
--   deployment strategy.
--   
--   <a>$sel:growthType:DeploymentStrategy'</a>,
--   <a>deploymentStrategy_growthType</a> - The algorithm used to define
--   how percentage grew over time.
newDeploymentStrategy :: DeploymentStrategy

-- | <i>See:</i> <a>newStartDeployment</a> smart constructor.
data StartDeployment
StartDeployment' :: Maybe Text -> Maybe (HashMap Text Text) -> Text -> Text -> Text -> Text -> Text -> StartDeployment

-- | Create a value of <a>StartDeployment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:StartDeployment'</a>,
--   <a>startDeployment_description</a> - A description of the deployment.
--   
--   <a>$sel:tags:StartDeployment'</a>, <a>startDeployment_tags</a> -
--   Metadata to assign to the deployment. Tags help organize and
--   categorize your AppConfig resources. Each tag consists of a key and an
--   optional value, both of which you define.
--   
--   <a>$sel:applicationId:StartDeployment'</a>,
--   <a>startDeployment_applicationId</a> - The application ID.
--   
--   <a>$sel:environmentId:StartDeployment'</a>,
--   <a>startDeployment_environmentId</a> - The environment ID.
--   
--   <a>$sel:deploymentStrategyId:StartDeployment'</a>,
--   <a>startDeployment_deploymentStrategyId</a> - The deployment strategy
--   ID.
--   
--   <a>$sel:configurationProfileId:StartDeployment'</a>,
--   <a>startDeployment_configurationProfileId</a> - The configuration
--   profile ID.
--   
--   <a>$sel:configurationVersion:StartDeployment'</a>,
--   <a>startDeployment_configurationVersion</a> - The configuration
--   version to deploy.
newStartDeployment :: Text -> Text -> Text -> Text -> Text -> StartDeployment

-- | <i>See:</i> <a>newDeployment</a> smart constructor.
data Deployment
Deployment' :: Maybe Double -> Maybe Text -> Maybe DeploymentState -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe [DeploymentEvent] -> Maybe Double -> Maybe POSIX -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe GrowthType -> Deployment

-- | Create a value of <a>Deployment</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:growthFactor:Deployment'</a>, <a>deployment_growthFactor</a> -
--   The percentage of targets to receive a deployed configuration during
--   each interval.
--   
--   <a>$sel:configurationName:Deployment'</a>,
--   <a>deployment_configurationName</a> - The name of the configuration.
--   
--   <a>$sel:state:Deployment'</a>, <a>deployment_state</a> - The state of
--   the deployment.
--   
--   <a>$sel:deploymentStrategyId:Deployment'</a>,
--   <a>deployment_deploymentStrategyId</a> - The ID of the deployment
--   strategy that was deployed.
--   
--   <a>$sel:deploymentNumber:Deployment'</a>,
--   <a>deployment_deploymentNumber</a> - The sequence number of the
--   deployment.
--   
--   <a>$sel:configurationVersion:Deployment'</a>,
--   <a>deployment_configurationVersion</a> - The configuration version
--   that was deployed.
--   
--   <a>$sel:eventLog:Deployment'</a>, <a>deployment_eventLog</a> - A list
--   containing all events related to a deployment. The most recent events
--   are displayed first.
--   
--   <a>$sel:percentageComplete:Deployment'</a>,
--   <a>deployment_percentageComplete</a> - The percentage of targets for
--   which the deployment is available.
--   
--   <a>$sel:startedAt:Deployment'</a>, <a>deployment_startedAt</a> - The
--   time the deployment started.
--   
--   <a>$sel:applicationId:Deployment'</a>, <a>deployment_applicationId</a>
--   - The ID of the application that was deployed.
--   
--   <a>$sel:deploymentDurationInMinutes:Deployment'</a>,
--   <a>deployment_deploymentDurationInMinutes</a> - Total amount of time
--   the deployment lasted.
--   
--   <a>$sel:environmentId:Deployment'</a>, <a>deployment_environmentId</a>
--   - The ID of the environment that was deployed.
--   
--   <a>$sel:completedAt:Deployment'</a>, <a>deployment_completedAt</a> -
--   The time the deployment completed.
--   
--   <a>$sel:configurationLocationUri:Deployment'</a>,
--   <a>deployment_configurationLocationUri</a> - Information about the
--   source location of the configuration.
--   
--   <a>$sel:finalBakeTimeInMinutes:Deployment'</a>,
--   <a>deployment_finalBakeTimeInMinutes</a> - The amount of time
--   AppConfig monitored for alarms before considering the deployment to be
--   complete and no longer eligible for automatic roll back.
--   
--   <a>$sel:description:Deployment'</a>, <a>deployment_description</a> -
--   The description of the deployment.
--   
--   <a>$sel:configurationProfileId:Deployment'</a>,
--   <a>deployment_configurationProfileId</a> - The ID of the configuration
--   profile that was deployed.
--   
--   <a>$sel:growthType:Deployment'</a>, <a>deployment_growthType</a> - The
--   algorithm used to define how percentage grew over time.
newDeployment :: Deployment

-- | <i>See:</i> <a>newCreateEnvironment</a> smart constructor.
data CreateEnvironment
CreateEnvironment' :: Maybe [Monitor] -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> Text -> CreateEnvironment

-- | Create a value of <a>CreateEnvironment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:monitors:CreateEnvironment'</a>,
--   <a>createEnvironment_monitors</a> - Amazon CloudWatch alarms to
--   monitor during the deployment process.
--   
--   <a>$sel:description:CreateEnvironment'</a>,
--   <a>createEnvironment_description</a> - A description of the
--   environment.
--   
--   <a>$sel:tags:CreateEnvironment'</a>, <a>createEnvironment_tags</a> -
--   Metadata to assign to the environment. Tags help organize and
--   categorize your AppConfig resources. Each tag consists of a key and an
--   optional value, both of which you define.
--   
--   <a>$sel:applicationId:CreateEnvironment'</a>,
--   <a>createEnvironment_applicationId</a> - The application ID.
--   
--   <a>$sel:name:CreateEnvironment'</a>, <a>createEnvironment_name</a> - A
--   name for the environment.
newCreateEnvironment :: Text -> Text -> CreateEnvironment

-- | <i>See:</i> <a>newEnvironment</a> smart constructor.
data Environment
Environment' :: Maybe EnvironmentState -> Maybe [Monitor] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Environment

-- | Create a value of <a>Environment</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:Environment'</a>, <a>environment_state</a> - The state
--   of the environment. An environment can be in one of the following
--   states: <tt>READY_FOR_DEPLOYMENT</tt>, <tt>DEPLOYING</tt>,
--   <tt>ROLLING_BACK</tt>, or <tt>ROLLED_BACK</tt>
--   
--   <a>$sel:monitors:Environment'</a>, <a>environment_monitors</a> -
--   Amazon CloudWatch alarms monitored during the deployment.
--   
--   <a>$sel:applicationId:Environment'</a>,
--   <a>environment_applicationId</a> - The application ID.
--   
--   <a>$sel:name:Environment'</a>, <a>environment_name</a> - The name of
--   the environment.
--   
--   <a>$sel:id:Environment'</a>, <a>environment_id</a> - The environment
--   ID.
--   
--   <a>$sel:description:Environment'</a>, <a>environment_description</a> -
--   The description of the environment.
newEnvironment :: Environment
newtype DeploymentEventType
DeploymentEventType' :: Text -> DeploymentEventType
[fromDeploymentEventType] :: DeploymentEventType -> Text
pattern DeploymentEventType_BAKE_TIME_STARTED :: DeploymentEventType
pattern DeploymentEventType_DEPLOYMENT_COMPLETED :: DeploymentEventType
pattern DeploymentEventType_DEPLOYMENT_STARTED :: DeploymentEventType
pattern DeploymentEventType_PERCENTAGE_UPDATED :: DeploymentEventType
pattern DeploymentEventType_ROLLBACK_COMPLETED :: DeploymentEventType
pattern DeploymentEventType_ROLLBACK_STARTED :: DeploymentEventType
newtype DeploymentState
DeploymentState' :: Text -> DeploymentState
[fromDeploymentState] :: DeploymentState -> Text
pattern DeploymentState_BAKING :: DeploymentState
pattern DeploymentState_COMPLETE :: DeploymentState
pattern DeploymentState_DEPLOYING :: DeploymentState
pattern DeploymentState_ROLLED_BACK :: DeploymentState
pattern DeploymentState_ROLLING_BACK :: DeploymentState
pattern DeploymentState_VALIDATING :: DeploymentState
newtype EnvironmentState
EnvironmentState' :: Text -> EnvironmentState
[fromEnvironmentState] :: EnvironmentState -> Text
pattern EnvironmentState_DEPLOYING :: EnvironmentState
pattern EnvironmentState_READY_FOR_DEPLOYMENT :: EnvironmentState
pattern EnvironmentState_ROLLED_BACK :: EnvironmentState
pattern EnvironmentState_ROLLING_BACK :: EnvironmentState
newtype GrowthType
GrowthType' :: Text -> GrowthType
[fromGrowthType] :: GrowthType -> Text
pattern GrowthType_EXPONENTIAL :: GrowthType
pattern GrowthType_LINEAR :: GrowthType
newtype ReplicateTo
ReplicateTo' :: Text -> ReplicateTo
[fromReplicateTo] :: ReplicateTo -> Text
pattern ReplicateTo_NONE :: ReplicateTo
pattern ReplicateTo_SSM_DOCUMENT :: ReplicateTo
newtype TriggeredBy
TriggeredBy' :: Text -> TriggeredBy
[fromTriggeredBy] :: TriggeredBy -> Text
pattern TriggeredBy_APPCONFIG :: TriggeredBy
pattern TriggeredBy_CLOUDWATCH_ALARM :: TriggeredBy
pattern TriggeredBy_INTERNAL_ERROR :: TriggeredBy
pattern TriggeredBy_USER :: TriggeredBy
newtype ValidatorType
ValidatorType' :: Text -> ValidatorType
[fromValidatorType] :: ValidatorType -> Text
pattern ValidatorType_JSON_SCHEMA :: ValidatorType
pattern ValidatorType_LAMBDA :: ValidatorType

-- | <i>See:</i> <a>newApplication</a> smart constructor.
data Application
Application' :: Maybe Text -> Maybe Text -> Maybe Text -> Application

-- | Create a value of <a>Application</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:Application'</a>, <a>application_name</a> - The
--   application name.
--   
--   <a>$sel:id:Application'</a>, <a>application_id</a> - The application
--   ID.
--   
--   <a>$sel:description:Application'</a>, <a>application_description</a> -
--   The description of the application.
newApplication :: Application

-- | <i>See:</i> <a>newConfigurationProfile</a> smart constructor.
data ConfigurationProfile
ConfigurationProfile' :: Maybe Text -> Maybe [Validator] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> ConfigurationProfile

-- | Create a value of <a>ConfigurationProfile</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:retrievalRoleArn:ConfigurationProfile'</a>,
--   <a>configurationProfile_retrievalRoleArn</a> - The ARN of an IAM role
--   with permission to access the configuration at the specified
--   LocationUri.
--   
--   <a>$sel:validators:ConfigurationProfile'</a>,
--   <a>configurationProfile_validators</a> - A list of methods for
--   validating the configuration.
--   
--   <a>$sel:locationUri:ConfigurationProfile'</a>,
--   <a>configurationProfile_locationUri</a> - The URI location of the
--   configuration.
--   
--   <a>$sel:applicationId:ConfigurationProfile'</a>,
--   <a>configurationProfile_applicationId</a> - The application ID.
--   
--   <a>$sel:name:ConfigurationProfile'</a>,
--   <a>configurationProfile_name</a> - The name of the configuration
--   profile.
--   
--   <a>$sel:id:ConfigurationProfile'</a>, <a>configurationProfile_id</a> -
--   The configuration profile ID.
--   
--   <a>$sel:description:ConfigurationProfile'</a>,
--   <a>configurationProfile_description</a> - The configuration profile
--   description.
newConfigurationProfile :: ConfigurationProfile

-- | A summary of a configuration profile.
--   
--   <i>See:</i> <a>newConfigurationProfileSummary</a> smart constructor.
data ConfigurationProfileSummary
ConfigurationProfileSummary' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [ValidatorType] -> ConfigurationProfileSummary

-- | Create a value of <a>ConfigurationProfileSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:locationUri:ConfigurationProfileSummary'</a>,
--   <a>configurationProfileSummary_locationUri</a> - The URI location of
--   the configuration.
--   
--   <a>$sel:applicationId:ConfigurationProfileSummary'</a>,
--   <a>configurationProfileSummary_applicationId</a> - The application ID.
--   
--   <a>$sel:name:ConfigurationProfileSummary'</a>,
--   <a>configurationProfileSummary_name</a> - The name of the
--   configuration profile.
--   
--   <a>$sel:id:ConfigurationProfileSummary'</a>,
--   <a>configurationProfileSummary_id</a> - The ID of the configuration
--   profile.
--   
--   <a>$sel:validatorTypes:ConfigurationProfileSummary'</a>,
--   <a>configurationProfileSummary_validatorTypes</a> - The types of
--   validators in the configuration profile.
newConfigurationProfileSummary :: ConfigurationProfileSummary

-- | <i>See:</i> <a>newDeployment</a> smart constructor.
data Deployment
Deployment' :: Maybe Double -> Maybe Text -> Maybe DeploymentState -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe [DeploymentEvent] -> Maybe Double -> Maybe POSIX -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe GrowthType -> Deployment

-- | Create a value of <a>Deployment</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:growthFactor:Deployment'</a>, <a>deployment_growthFactor</a> -
--   The percentage of targets to receive a deployed configuration during
--   each interval.
--   
--   <a>$sel:configurationName:Deployment'</a>,
--   <a>deployment_configurationName</a> - The name of the configuration.
--   
--   <a>$sel:state:Deployment'</a>, <a>deployment_state</a> - The state of
--   the deployment.
--   
--   <a>$sel:deploymentStrategyId:Deployment'</a>,
--   <a>deployment_deploymentStrategyId</a> - The ID of the deployment
--   strategy that was deployed.
--   
--   <a>$sel:deploymentNumber:Deployment'</a>,
--   <a>deployment_deploymentNumber</a> - The sequence number of the
--   deployment.
--   
--   <a>$sel:configurationVersion:Deployment'</a>,
--   <a>deployment_configurationVersion</a> - The configuration version
--   that was deployed.
--   
--   <a>$sel:eventLog:Deployment'</a>, <a>deployment_eventLog</a> - A list
--   containing all events related to a deployment. The most recent events
--   are displayed first.
--   
--   <a>$sel:percentageComplete:Deployment'</a>,
--   <a>deployment_percentageComplete</a> - The percentage of targets for
--   which the deployment is available.
--   
--   <a>$sel:startedAt:Deployment'</a>, <a>deployment_startedAt</a> - The
--   time the deployment started.
--   
--   <a>$sel:applicationId:Deployment'</a>, <a>deployment_applicationId</a>
--   - The ID of the application that was deployed.
--   
--   <a>$sel:deploymentDurationInMinutes:Deployment'</a>,
--   <a>deployment_deploymentDurationInMinutes</a> - Total amount of time
--   the deployment lasted.
--   
--   <a>$sel:environmentId:Deployment'</a>, <a>deployment_environmentId</a>
--   - The ID of the environment that was deployed.
--   
--   <a>$sel:completedAt:Deployment'</a>, <a>deployment_completedAt</a> -
--   The time the deployment completed.
--   
--   <a>$sel:configurationLocationUri:Deployment'</a>,
--   <a>deployment_configurationLocationUri</a> - Information about the
--   source location of the configuration.
--   
--   <a>$sel:finalBakeTimeInMinutes:Deployment'</a>,
--   <a>deployment_finalBakeTimeInMinutes</a> - The amount of time
--   AppConfig monitored for alarms before considering the deployment to be
--   complete and no longer eligible for automatic roll back.
--   
--   <a>$sel:description:Deployment'</a>, <a>deployment_description</a> -
--   The description of the deployment.
--   
--   <a>$sel:configurationProfileId:Deployment'</a>,
--   <a>deployment_configurationProfileId</a> - The ID of the configuration
--   profile that was deployed.
--   
--   <a>$sel:growthType:Deployment'</a>, <a>deployment_growthType</a> - The
--   algorithm used to define how percentage grew over time.
newDeployment :: Deployment

-- | An object that describes a deployment event.
--   
--   <i>See:</i> <a>newDeploymentEvent</a> smart constructor.
data DeploymentEvent
DeploymentEvent' :: Maybe TriggeredBy -> Maybe POSIX -> Maybe DeploymentEventType -> Maybe Text -> DeploymentEvent

-- | Create a value of <a>DeploymentEvent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:triggeredBy:DeploymentEvent'</a>,
--   <a>deploymentEvent_triggeredBy</a> - The entity that triggered the
--   deployment event. Events can be triggered by a user, AWS AppConfig, an
--   Amazon CloudWatch alarm, or an internal error.
--   
--   <a>$sel:occurredAt:DeploymentEvent'</a>,
--   <a>deploymentEvent_occurredAt</a> - The date and time the event
--   occurred.
--   
--   <a>$sel:eventType:DeploymentEvent'</a>,
--   <a>deploymentEvent_eventType</a> - The type of deployment event.
--   Deployment event types include the start, stop, or completion of a
--   deployment; a percentage update; the start or stop of a bake period;
--   the start or completion of a rollback.
--   
--   <a>$sel:description:DeploymentEvent'</a>,
--   <a>deploymentEvent_description</a> - A description of the deployment
--   event. Descriptions include, but are not limited to, the user account
--   or the CloudWatch alarm ARN that initiated a rollback, the percentage
--   of hosts that received the deployment, or in the case of an internal
--   error, a recommendation to attempt a new deployment.
newDeploymentEvent :: DeploymentEvent

-- | <i>See:</i> <a>newDeploymentStrategy</a> smart constructor.
data DeploymentStrategy
DeploymentStrategy' :: Maybe Double -> Maybe ReplicateTo -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Natural -> Maybe Text -> Maybe GrowthType -> DeploymentStrategy

-- | Create a value of <a>DeploymentStrategy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:growthFactor:DeploymentStrategy'</a>,
--   <a>deploymentStrategy_growthFactor</a> - The percentage of targets
--   that received a deployed configuration during each interval.
--   
--   <a>$sel:replicateTo:DeploymentStrategy'</a>,
--   <a>deploymentStrategy_replicateTo</a> - Save the deployment strategy
--   to a Systems Manager (SSM) document.
--   
--   <a>$sel:name:DeploymentStrategy'</a>, <a>deploymentStrategy_name</a> -
--   The name of the deployment strategy.
--   
--   <a>$sel:id:DeploymentStrategy'</a>, <a>deploymentStrategy_id</a> - The
--   deployment strategy ID.
--   
--   <a>$sel:deploymentDurationInMinutes:DeploymentStrategy'</a>,
--   <a>deploymentStrategy_deploymentDurationInMinutes</a> - Total amount
--   of time the deployment lasted.
--   
--   <a>$sel:finalBakeTimeInMinutes:DeploymentStrategy'</a>,
--   <a>deploymentStrategy_finalBakeTimeInMinutes</a> - The amount of time
--   AppConfig monitored for alarms before considering the deployment to be
--   complete and no longer eligible for automatic roll back.
--   
--   <a>$sel:description:DeploymentStrategy'</a>,
--   <a>deploymentStrategy_description</a> - The description of the
--   deployment strategy.
--   
--   <a>$sel:growthType:DeploymentStrategy'</a>,
--   <a>deploymentStrategy_growthType</a> - The algorithm used to define
--   how percentage grew over time.
newDeploymentStrategy :: DeploymentStrategy

-- | Information about the deployment.
--   
--   <i>See:</i> <a>newDeploymentSummary</a> smart constructor.
data DeploymentSummary
DeploymentSummary' :: Maybe Double -> Maybe Text -> Maybe DeploymentState -> Maybe Int -> Maybe Text -> Maybe Double -> Maybe POSIX -> Maybe Natural -> Maybe POSIX -> Maybe Natural -> Maybe GrowthType -> DeploymentSummary

-- | Create a value of <a>DeploymentSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:growthFactor:DeploymentSummary'</a>,
--   <a>deploymentSummary_growthFactor</a> - The percentage of targets to
--   receive a deployed configuration during each interval.
--   
--   <a>$sel:configurationName:DeploymentSummary'</a>,
--   <a>deploymentSummary_configurationName</a> - The name of the
--   configuration.
--   
--   <a>$sel:state:DeploymentSummary'</a>, <a>deploymentSummary_state</a> -
--   The state of the deployment.
--   
--   <a>$sel:deploymentNumber:DeploymentSummary'</a>,
--   <a>deploymentSummary_deploymentNumber</a> - The sequence number of the
--   deployment.
--   
--   <a>$sel:configurationVersion:DeploymentSummary'</a>,
--   <a>deploymentSummary_configurationVersion</a> - The version of the
--   configuration.
--   
--   <a>$sel:percentageComplete:DeploymentSummary'</a>,
--   <a>deploymentSummary_percentageComplete</a> - The percentage of
--   targets for which the deployment is available.
--   
--   <a>$sel:startedAt:DeploymentSummary'</a>,
--   <a>deploymentSummary_startedAt</a> - Time the deployment started.
--   
--   <a>$sel:deploymentDurationInMinutes:DeploymentSummary'</a>,
--   <a>deploymentSummary_deploymentDurationInMinutes</a> - Total amount of
--   time the deployment lasted.
--   
--   <a>$sel:completedAt:DeploymentSummary'</a>,
--   <a>deploymentSummary_completedAt</a> - Time the deployment completed.
--   
--   <a>$sel:finalBakeTimeInMinutes:DeploymentSummary'</a>,
--   <a>deploymentSummary_finalBakeTimeInMinutes</a> - The amount of time
--   AppConfig monitors for alarms before considering the deployment to be
--   complete and no longer eligible for automatic roll back.
--   
--   <a>$sel:growthType:DeploymentSummary'</a>,
--   <a>deploymentSummary_growthType</a> - The algorithm used to define how
--   percentage grows over time.
newDeploymentSummary :: DeploymentSummary

-- | <i>See:</i> <a>newEnvironment</a> smart constructor.
data Environment
Environment' :: Maybe EnvironmentState -> Maybe [Monitor] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Environment

-- | Create a value of <a>Environment</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:Environment'</a>, <a>environment_state</a> - The state
--   of the environment. An environment can be in one of the following
--   states: <tt>READY_FOR_DEPLOYMENT</tt>, <tt>DEPLOYING</tt>,
--   <tt>ROLLING_BACK</tt>, or <tt>ROLLED_BACK</tt>
--   
--   <a>$sel:monitors:Environment'</a>, <a>environment_monitors</a> -
--   Amazon CloudWatch alarms monitored during the deployment.
--   
--   <a>$sel:applicationId:Environment'</a>,
--   <a>environment_applicationId</a> - The application ID.
--   
--   <a>$sel:name:Environment'</a>, <a>environment_name</a> - The name of
--   the environment.
--   
--   <a>$sel:id:Environment'</a>, <a>environment_id</a> - The environment
--   ID.
--   
--   <a>$sel:description:Environment'</a>, <a>environment_description</a> -
--   The description of the environment.
newEnvironment :: Environment

-- | <i>See:</i> <a>newHostedConfigurationVersion</a> smart constructor.
data HostedConfigurationVersion
HostedConfigurationVersion' :: Maybe (Sensitive ByteString) -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> HostedConfigurationVersion

-- | Create a value of <a>HostedConfigurationVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:content:HostedConfigurationVersion'</a>,
--   <a>hostedConfigurationVersion_content</a> - The content of the
--   configuration or the configuration data.
--   
--   <a>$sel:versionNumber:HostedConfigurationVersion'</a>,
--   <a>hostedConfigurationVersion_versionNumber</a> - The configuration
--   version.
--   
--   <a>$sel:applicationId:HostedConfigurationVersion'</a>,
--   <a>hostedConfigurationVersion_applicationId</a> - The application ID.
--   
--   <a>$sel:description:HostedConfigurationVersion'</a>,
--   <a>hostedConfigurationVersion_description</a> - A description of the
--   configuration.
--   
--   <a>$sel:configurationProfileId:HostedConfigurationVersion'</a>,
--   <a>hostedConfigurationVersion_configurationProfileId</a> - The
--   configuration profile ID.
--   
--   <a>$sel:contentType:HostedConfigurationVersion'</a>,
--   <a>hostedConfigurationVersion_contentType</a> - A standard MIME type
--   describing the format of the configuration content. For more
--   information, see <a>Content-Type</a>.
newHostedConfigurationVersion :: HostedConfigurationVersion

-- | Information about the configuration.
--   
--   <i>See:</i> <a>newHostedConfigurationVersionSummary</a> smart
--   constructor.
data HostedConfigurationVersionSummary
HostedConfigurationVersionSummary' :: Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> HostedConfigurationVersionSummary

-- | Create a value of <a>HostedConfigurationVersionSummary</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:versionNumber:HostedConfigurationVersionSummary'</a>,
--   <a>hostedConfigurationVersionSummary_versionNumber</a> - The
--   configuration version.
--   
--   <a>$sel:applicationId:HostedConfigurationVersionSummary'</a>,
--   <a>hostedConfigurationVersionSummary_applicationId</a> - The
--   application ID.
--   
--   <a>$sel:description:HostedConfigurationVersionSummary'</a>,
--   <a>hostedConfigurationVersionSummary_description</a> - A description
--   of the configuration.
--   
--   <a>$sel:configurationProfileId:HostedConfigurationVersionSummary'</a>,
--   <a>hostedConfigurationVersionSummary_configurationProfileId</a> - The
--   configuration profile ID.
--   
--   <a>$sel:contentType:HostedConfigurationVersionSummary'</a>,
--   <a>hostedConfigurationVersionSummary_contentType</a> - A standard MIME
--   type describing the format of the configuration content. For more
--   information, see <a>Content-Type</a>.
newHostedConfigurationVersionSummary :: HostedConfigurationVersionSummary

-- | Amazon CloudWatch alarms to monitor during the deployment process.
--   
--   <i>See:</i> <a>newMonitor</a> smart constructor.
data Monitor
Monitor' :: Maybe Text -> Maybe Text -> Monitor

-- | Create a value of <a>Monitor</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:alarmRoleArn:Monitor'</a>, <a>monitor_alarmRoleArn</a> - ARN
--   of an IAM role for AppConfig to monitor <tt>AlarmArn</tt>.
--   
--   <a>$sel:alarmArn:Monitor'</a>, <a>monitor_alarmArn</a> - ARN of the
--   Amazon CloudWatch alarm.
newMonitor :: Monitor

-- | A validator provides a syntactic or semantic check to ensure the
--   configuration you want to deploy functions as intended. To validate
--   your application configuration data, you provide a schema or a Lambda
--   function that runs against the configuration. The configuration
--   deployment or update can only proceed when the configuration data is
--   valid.
--   
--   <i>See:</i> <a>newValidator</a> smart constructor.
data Validator
Validator' :: ValidatorType -> Sensitive Text -> Validator

-- | Create a value of <a>Validator</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:type':Validator'</a>, <a>validator_type</a> - AppConfig
--   supports validators of type <tt>JSON_SCHEMA</tt> and <tt>LAMBDA</tt>
--   
--   <a>$sel:content:Validator'</a>, <a>validator_content</a> - Either the
--   JSON Schema content or the Amazon Resource Name (ARN) of an AWS Lambda
--   function.
newValidator :: ValidatorType -> Text -> Validator
