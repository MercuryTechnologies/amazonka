-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-dataexchangeZSamazonka-dataexchange
@version 2.0


module Amazonka.DataExchange.Types.AssetDestinationEntry

-- | The destination for the asset.
--   
--   <i>See:</i> <a>newAssetDestinationEntry</a> smart constructor.
data AssetDestinationEntry
AssetDestinationEntry' :: Maybe Text -> Text -> Text -> AssetDestinationEntry

-- | The name of the object in Amazon S3 for the asset.
[$sel:key:AssetDestinationEntry'] :: AssetDestinationEntry -> Maybe Text

-- | The S3 bucket that is the destination for the asset.
[$sel:bucket:AssetDestinationEntry'] :: AssetDestinationEntry -> Text

-- | The unique identifier for the asset.
[$sel:assetId:AssetDestinationEntry'] :: AssetDestinationEntry -> Text

-- | Create a value of <a>AssetDestinationEntry</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:AssetDestinationEntry'</a>,
--   <a>assetDestinationEntry_key</a> - The name of the object in Amazon S3
--   for the asset.
--   
--   <a>$sel:bucket:AssetDestinationEntry'</a>,
--   <a>assetDestinationEntry_bucket</a> - The S3 bucket that is the
--   destination for the asset.
--   
--   <a>$sel:assetId:AssetDestinationEntry'</a>,
--   <a>assetDestinationEntry_assetId</a> - The unique identifier for the
--   asset.
newAssetDestinationEntry :: Text -> Text -> AssetDestinationEntry

-- | The name of the object in Amazon S3 for the asset.
assetDestinationEntry_key :: Lens' AssetDestinationEntry (Maybe Text)

-- | The S3 bucket that is the destination for the asset.
assetDestinationEntry_bucket :: Lens' AssetDestinationEntry Text

-- | The unique identifier for the asset.
assetDestinationEntry_assetId :: Lens' AssetDestinationEntry Text
instance GHC.Generics.Generic Amazonka.DataExchange.Types.AssetDestinationEntry.AssetDestinationEntry
instance GHC.Show.Show Amazonka.DataExchange.Types.AssetDestinationEntry.AssetDestinationEntry
instance GHC.Read.Read Amazonka.DataExchange.Types.AssetDestinationEntry.AssetDestinationEntry
instance GHC.Classes.Eq Amazonka.DataExchange.Types.AssetDestinationEntry.AssetDestinationEntry
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataExchange.Types.AssetDestinationEntry.AssetDestinationEntry
instance Data.Hashable.Class.Hashable Amazonka.DataExchange.Types.AssetDestinationEntry.AssetDestinationEntry
instance Control.DeepSeq.NFData Amazonka.DataExchange.Types.AssetDestinationEntry.AssetDestinationEntry
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataExchange.Types.AssetDestinationEntry.AssetDestinationEntry


module Amazonka.DataExchange.Types.AssetSourceEntry

-- | The source of the assets.
--   
--   <i>See:</i> <a>newAssetSourceEntry</a> smart constructor.
data AssetSourceEntry
AssetSourceEntry' :: Text -> Text -> AssetSourceEntry

-- | The S3 bucket that's part of the source of the asset.
[$sel:bucket:AssetSourceEntry'] :: AssetSourceEntry -> Text

-- | The name of the object in Amazon S3 for the asset.
[$sel:key:AssetSourceEntry'] :: AssetSourceEntry -> Text

-- | Create a value of <a>AssetSourceEntry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bucket:AssetSourceEntry'</a>, <a>assetSourceEntry_bucket</a> -
--   The S3 bucket that's part of the source of the asset.
--   
--   <a>$sel:key:AssetSourceEntry'</a>, <a>assetSourceEntry_key</a> - The
--   name of the object in Amazon S3 for the asset.
newAssetSourceEntry :: Text -> Text -> AssetSourceEntry

-- | The S3 bucket that's part of the source of the asset.
assetSourceEntry_bucket :: Lens' AssetSourceEntry Text

-- | The name of the object in Amazon S3 for the asset.
assetSourceEntry_key :: Lens' AssetSourceEntry Text
instance GHC.Generics.Generic Amazonka.DataExchange.Types.AssetSourceEntry.AssetSourceEntry
instance GHC.Show.Show Amazonka.DataExchange.Types.AssetSourceEntry.AssetSourceEntry
instance GHC.Read.Read Amazonka.DataExchange.Types.AssetSourceEntry.AssetSourceEntry
instance GHC.Classes.Eq Amazonka.DataExchange.Types.AssetSourceEntry.AssetSourceEntry
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataExchange.Types.AssetSourceEntry.AssetSourceEntry
instance Data.Hashable.Class.Hashable Amazonka.DataExchange.Types.AssetSourceEntry.AssetSourceEntry
instance Control.DeepSeq.NFData Amazonka.DataExchange.Types.AssetSourceEntry.AssetSourceEntry
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataExchange.Types.AssetSourceEntry.AssetSourceEntry


module Amazonka.DataExchange.Types.AssetType

-- | The type of asset that is added to a data set.
newtype AssetType
AssetType' :: Text -> AssetType
[fromAssetType] :: AssetType -> Text
pattern AssetType_REDSHIFT_DATA_SHARE :: AssetType
pattern AssetType_S3_SNAPSHOT :: AssetType
instance Amazonka.Data.XML.ToXML Amazonka.DataExchange.Types.AssetType.AssetType
instance Amazonka.Data.XML.FromXML Amazonka.DataExchange.Types.AssetType.AssetType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.DataExchange.Types.AssetType.AssetType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataExchange.Types.AssetType.AssetType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.DataExchange.Types.AssetType.AssetType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataExchange.Types.AssetType.AssetType
instance Amazonka.Data.Query.ToQuery Amazonka.DataExchange.Types.AssetType.AssetType
instance Amazonka.Data.Headers.ToHeader Amazonka.DataExchange.Types.AssetType.AssetType
instance Amazonka.Data.Log.ToLog Amazonka.DataExchange.Types.AssetType.AssetType
instance Amazonka.Data.ByteString.ToByteString Amazonka.DataExchange.Types.AssetType.AssetType
instance Amazonka.Data.Text.ToText Amazonka.DataExchange.Types.AssetType.AssetType
instance Amazonka.Data.Text.FromText Amazonka.DataExchange.Types.AssetType.AssetType
instance Control.DeepSeq.NFData Amazonka.DataExchange.Types.AssetType.AssetType
instance Data.Hashable.Class.Hashable Amazonka.DataExchange.Types.AssetType.AssetType
instance GHC.Generics.Generic Amazonka.DataExchange.Types.AssetType.AssetType
instance GHC.Classes.Ord Amazonka.DataExchange.Types.AssetType.AssetType
instance GHC.Classes.Eq Amazonka.DataExchange.Types.AssetType.AssetType
instance GHC.Read.Read Amazonka.DataExchange.Types.AssetType.AssetType
instance GHC.Show.Show Amazonka.DataExchange.Types.AssetType.AssetType


module Amazonka.DataExchange.Types.AutoExportRevisionDestinationEntry

-- | A revision destination is the Amazon S3 bucket folder destination to
--   where the export will be sent.
--   
--   <i>See:</i> <a>newAutoExportRevisionDestinationEntry</a> smart
--   constructor.
data AutoExportRevisionDestinationEntry
AutoExportRevisionDestinationEntry' :: Maybe Text -> Text -> AutoExportRevisionDestinationEntry

-- | A string representing the pattern for generated names of the
--   individual assets in the revision. For more information about key
--   patterns, see <a>Key patterns when exporting revisions</a>.
[$sel:keyPattern:AutoExportRevisionDestinationEntry'] :: AutoExportRevisionDestinationEntry -> Maybe Text

-- | The S3 bucket that is the destination for the event action.
[$sel:bucket:AutoExportRevisionDestinationEntry'] :: AutoExportRevisionDestinationEntry -> Text

-- | Create a value of <a>AutoExportRevisionDestinationEntry</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyPattern:AutoExportRevisionDestinationEntry'</a>,
--   <a>autoExportRevisionDestinationEntry_keyPattern</a> - A string
--   representing the pattern for generated names of the individual assets
--   in the revision. For more information about key patterns, see <a>Key
--   patterns when exporting revisions</a>.
--   
--   <a>$sel:bucket:AutoExportRevisionDestinationEntry'</a>,
--   <a>autoExportRevisionDestinationEntry_bucket</a> - The S3 bucket that
--   is the destination for the event action.
newAutoExportRevisionDestinationEntry :: Text -> AutoExportRevisionDestinationEntry

-- | A string representing the pattern for generated names of the
--   individual assets in the revision. For more information about key
--   patterns, see <a>Key patterns when exporting revisions</a>.
autoExportRevisionDestinationEntry_keyPattern :: Lens' AutoExportRevisionDestinationEntry (Maybe Text)

-- | The S3 bucket that is the destination for the event action.
autoExportRevisionDestinationEntry_bucket :: Lens' AutoExportRevisionDestinationEntry Text
instance GHC.Generics.Generic Amazonka.DataExchange.Types.AutoExportRevisionDestinationEntry.AutoExportRevisionDestinationEntry
instance GHC.Show.Show Amazonka.DataExchange.Types.AutoExportRevisionDestinationEntry.AutoExportRevisionDestinationEntry
instance GHC.Read.Read Amazonka.DataExchange.Types.AutoExportRevisionDestinationEntry.AutoExportRevisionDestinationEntry
instance GHC.Classes.Eq Amazonka.DataExchange.Types.AutoExportRevisionDestinationEntry.AutoExportRevisionDestinationEntry
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataExchange.Types.AutoExportRevisionDestinationEntry.AutoExportRevisionDestinationEntry
instance Data.Hashable.Class.Hashable Amazonka.DataExchange.Types.AutoExportRevisionDestinationEntry.AutoExportRevisionDestinationEntry
instance Control.DeepSeq.NFData Amazonka.DataExchange.Types.AutoExportRevisionDestinationEntry.AutoExportRevisionDestinationEntry
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataExchange.Types.AutoExportRevisionDestinationEntry.AutoExportRevisionDestinationEntry


module Amazonka.DataExchange.Types.Code
newtype Code
Code' :: Text -> Code
[fromCode] :: Code -> Text
pattern Code_ACCESS_DENIED_EXCEPTION :: Code
pattern Code_INTERNAL_SERVER_EXCEPTION :: Code
pattern Code_MALWARE_DETECTED :: Code
pattern Code_MALWARE_SCAN_ENCRYPTED_FILE :: Code
pattern Code_RESOURCE_NOT_FOUND_EXCEPTION :: Code
pattern Code_SERVICE_QUOTA_EXCEEDED_EXCEPTION :: Code
pattern Code_VALIDATION_EXCEPTION :: Code
instance Amazonka.Data.XML.ToXML Amazonka.DataExchange.Types.Code.Code
instance Amazonka.Data.XML.FromXML Amazonka.DataExchange.Types.Code.Code
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.DataExchange.Types.Code.Code
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataExchange.Types.Code.Code
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.DataExchange.Types.Code.Code
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataExchange.Types.Code.Code
instance Amazonka.Data.Query.ToQuery Amazonka.DataExchange.Types.Code.Code
instance Amazonka.Data.Headers.ToHeader Amazonka.DataExchange.Types.Code.Code
instance Amazonka.Data.Log.ToLog Amazonka.DataExchange.Types.Code.Code
instance Amazonka.Data.ByteString.ToByteString Amazonka.DataExchange.Types.Code.Code
instance Amazonka.Data.Text.ToText Amazonka.DataExchange.Types.Code.Code
instance Amazonka.Data.Text.FromText Amazonka.DataExchange.Types.Code.Code
instance Control.DeepSeq.NFData Amazonka.DataExchange.Types.Code.Code
instance Data.Hashable.Class.Hashable Amazonka.DataExchange.Types.Code.Code
instance GHC.Generics.Generic Amazonka.DataExchange.Types.Code.Code
instance GHC.Classes.Ord Amazonka.DataExchange.Types.Code.Code
instance GHC.Classes.Eq Amazonka.DataExchange.Types.Code.Code
instance GHC.Read.Read Amazonka.DataExchange.Types.Code.Code
instance GHC.Show.Show Amazonka.DataExchange.Types.Code.Code


module Amazonka.DataExchange.Types.ExportAssetToSignedUrlRequestDetails

-- | Details of the operation to be performed by the job.
--   
--   <i>See:</i> <a>newExportAssetToSignedUrlRequestDetails</a> smart
--   constructor.
data ExportAssetToSignedUrlRequestDetails
ExportAssetToSignedUrlRequestDetails' :: Text -> Text -> Text -> ExportAssetToSignedUrlRequestDetails

-- | The unique identifier for the data set associated with this export
--   job.
[$sel:dataSetId:ExportAssetToSignedUrlRequestDetails'] :: ExportAssetToSignedUrlRequestDetails -> Text

-- | The unique identifier for the asset that is exported to a signed URL.
[$sel:assetId:ExportAssetToSignedUrlRequestDetails'] :: ExportAssetToSignedUrlRequestDetails -> Text

-- | The unique identifier for the revision associated with this export
--   request.
[$sel:revisionId:ExportAssetToSignedUrlRequestDetails'] :: ExportAssetToSignedUrlRequestDetails -> Text

-- | Create a value of <a>ExportAssetToSignedUrlRequestDetails</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataSetId:ExportAssetToSignedUrlRequestDetails'</a>,
--   <a>exportAssetToSignedUrlRequestDetails_dataSetId</a> - The unique
--   identifier for the data set associated with this export job.
--   
--   <a>$sel:assetId:ExportAssetToSignedUrlRequestDetails'</a>,
--   <a>exportAssetToSignedUrlRequestDetails_assetId</a> - The unique
--   identifier for the asset that is exported to a signed URL.
--   
--   <a>$sel:revisionId:ExportAssetToSignedUrlRequestDetails'</a>,
--   <a>exportAssetToSignedUrlRequestDetails_revisionId</a> - The unique
--   identifier for the revision associated with this export request.
newExportAssetToSignedUrlRequestDetails :: Text -> Text -> Text -> ExportAssetToSignedUrlRequestDetails

-- | The unique identifier for the data set associated with this export
--   job.
exportAssetToSignedUrlRequestDetails_dataSetId :: Lens' ExportAssetToSignedUrlRequestDetails Text

-- | The unique identifier for the asset that is exported to a signed URL.
exportAssetToSignedUrlRequestDetails_assetId :: Lens' ExportAssetToSignedUrlRequestDetails Text

-- | The unique identifier for the revision associated with this export
--   request.
exportAssetToSignedUrlRequestDetails_revisionId :: Lens' ExportAssetToSignedUrlRequestDetails Text
instance GHC.Generics.Generic Amazonka.DataExchange.Types.ExportAssetToSignedUrlRequestDetails.ExportAssetToSignedUrlRequestDetails
instance GHC.Show.Show Amazonka.DataExchange.Types.ExportAssetToSignedUrlRequestDetails.ExportAssetToSignedUrlRequestDetails
instance GHC.Read.Read Amazonka.DataExchange.Types.ExportAssetToSignedUrlRequestDetails.ExportAssetToSignedUrlRequestDetails
instance GHC.Classes.Eq Amazonka.DataExchange.Types.ExportAssetToSignedUrlRequestDetails.ExportAssetToSignedUrlRequestDetails
instance Data.Hashable.Class.Hashable Amazonka.DataExchange.Types.ExportAssetToSignedUrlRequestDetails.ExportAssetToSignedUrlRequestDetails
instance Control.DeepSeq.NFData Amazonka.DataExchange.Types.ExportAssetToSignedUrlRequestDetails.ExportAssetToSignedUrlRequestDetails
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataExchange.Types.ExportAssetToSignedUrlRequestDetails.ExportAssetToSignedUrlRequestDetails


module Amazonka.DataExchange.Types.ExportAssetToSignedUrlResponseDetails

-- | The details of the export to signed URL response.
--   
--   <i>See:</i> <a>newExportAssetToSignedUrlResponseDetails</a> smart
--   constructor.
data ExportAssetToSignedUrlResponseDetails
ExportAssetToSignedUrlResponseDetails' :: Maybe Text -> Maybe POSIX -> Text -> Text -> Text -> ExportAssetToSignedUrlResponseDetails

-- | The signed URL for the export request.
[$sel:signedUrl:ExportAssetToSignedUrlResponseDetails'] :: ExportAssetToSignedUrlResponseDetails -> Maybe Text

-- | The date and time that the signed URL expires, in ISO 8601 format.
[$sel:signedUrlExpiresAt:ExportAssetToSignedUrlResponseDetails'] :: ExportAssetToSignedUrlResponseDetails -> Maybe POSIX

-- | The unique identifier for the data set associated with this export
--   job.
[$sel:dataSetId:ExportAssetToSignedUrlResponseDetails'] :: ExportAssetToSignedUrlResponseDetails -> Text

-- | The unique identifier for the asset associated with this export job.
[$sel:assetId:ExportAssetToSignedUrlResponseDetails'] :: ExportAssetToSignedUrlResponseDetails -> Text

-- | The unique identifier for the revision associated with this export
--   response.
[$sel:revisionId:ExportAssetToSignedUrlResponseDetails'] :: ExportAssetToSignedUrlResponseDetails -> Text

-- | Create a value of <a>ExportAssetToSignedUrlResponseDetails</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:signedUrl:ExportAssetToSignedUrlResponseDetails'</a>,
--   <a>exportAssetToSignedUrlResponseDetails_signedUrl</a> - The signed
--   URL for the export request.
--   
--   <a>$sel:signedUrlExpiresAt:ExportAssetToSignedUrlResponseDetails'</a>,
--   <a>exportAssetToSignedUrlResponseDetails_signedUrlExpiresAt</a> - The
--   date and time that the signed URL expires, in ISO 8601 format.
--   
--   <a>$sel:dataSetId:ExportAssetToSignedUrlResponseDetails'</a>,
--   <a>exportAssetToSignedUrlResponseDetails_dataSetId</a> - The unique
--   identifier for the data set associated with this export job.
--   
--   <a>$sel:assetId:ExportAssetToSignedUrlResponseDetails'</a>,
--   <a>exportAssetToSignedUrlResponseDetails_assetId</a> - The unique
--   identifier for the asset associated with this export job.
--   
--   <a>$sel:revisionId:ExportAssetToSignedUrlResponseDetails'</a>,
--   <a>exportAssetToSignedUrlResponseDetails_revisionId</a> - The unique
--   identifier for the revision associated with this export response.
newExportAssetToSignedUrlResponseDetails :: Text -> Text -> Text -> ExportAssetToSignedUrlResponseDetails

-- | The signed URL for the export request.
exportAssetToSignedUrlResponseDetails_signedUrl :: Lens' ExportAssetToSignedUrlResponseDetails (Maybe Text)

-- | The date and time that the signed URL expires, in ISO 8601 format.
exportAssetToSignedUrlResponseDetails_signedUrlExpiresAt :: Lens' ExportAssetToSignedUrlResponseDetails (Maybe UTCTime)

-- | The unique identifier for the data set associated with this export
--   job.
exportAssetToSignedUrlResponseDetails_dataSetId :: Lens' ExportAssetToSignedUrlResponseDetails Text

-- | The unique identifier for the asset associated with this export job.
exportAssetToSignedUrlResponseDetails_assetId :: Lens' ExportAssetToSignedUrlResponseDetails Text

-- | The unique identifier for the revision associated with this export
--   response.
exportAssetToSignedUrlResponseDetails_revisionId :: Lens' ExportAssetToSignedUrlResponseDetails Text
instance GHC.Generics.Generic Amazonka.DataExchange.Types.ExportAssetToSignedUrlResponseDetails.ExportAssetToSignedUrlResponseDetails
instance GHC.Show.Show Amazonka.DataExchange.Types.ExportAssetToSignedUrlResponseDetails.ExportAssetToSignedUrlResponseDetails
instance GHC.Read.Read Amazonka.DataExchange.Types.ExportAssetToSignedUrlResponseDetails.ExportAssetToSignedUrlResponseDetails
instance GHC.Classes.Eq Amazonka.DataExchange.Types.ExportAssetToSignedUrlResponseDetails.ExportAssetToSignedUrlResponseDetails
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataExchange.Types.ExportAssetToSignedUrlResponseDetails.ExportAssetToSignedUrlResponseDetails
instance Data.Hashable.Class.Hashable Amazonka.DataExchange.Types.ExportAssetToSignedUrlResponseDetails.ExportAssetToSignedUrlResponseDetails
instance Control.DeepSeq.NFData Amazonka.DataExchange.Types.ExportAssetToSignedUrlResponseDetails.ExportAssetToSignedUrlResponseDetails


module Amazonka.DataExchange.Types.ImportAssetFromSignedUrlJobErrorDetails

-- | Information about the job error.
--   
--   <i>See:</i> <a>newImportAssetFromSignedUrlJobErrorDetails</a> smart
--   constructor.
data ImportAssetFromSignedUrlJobErrorDetails
ImportAssetFromSignedUrlJobErrorDetails' :: Text -> ImportAssetFromSignedUrlJobErrorDetails

-- | Information about the job error.
[$sel:assetName:ImportAssetFromSignedUrlJobErrorDetails'] :: ImportAssetFromSignedUrlJobErrorDetails -> Text

-- | Create a value of <a>ImportAssetFromSignedUrlJobErrorDetails</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:assetName:ImportAssetFromSignedUrlJobErrorDetails'</a>,
--   <a>importAssetFromSignedUrlJobErrorDetails_assetName</a> - Information
--   about the job error.
newImportAssetFromSignedUrlJobErrorDetails :: Text -> ImportAssetFromSignedUrlJobErrorDetails

-- | Information about the job error.
importAssetFromSignedUrlJobErrorDetails_assetName :: Lens' ImportAssetFromSignedUrlJobErrorDetails Text
instance GHC.Generics.Generic Amazonka.DataExchange.Types.ImportAssetFromSignedUrlJobErrorDetails.ImportAssetFromSignedUrlJobErrorDetails
instance GHC.Show.Show Amazonka.DataExchange.Types.ImportAssetFromSignedUrlJobErrorDetails.ImportAssetFromSignedUrlJobErrorDetails
instance GHC.Read.Read Amazonka.DataExchange.Types.ImportAssetFromSignedUrlJobErrorDetails.ImportAssetFromSignedUrlJobErrorDetails
instance GHC.Classes.Eq Amazonka.DataExchange.Types.ImportAssetFromSignedUrlJobErrorDetails.ImportAssetFromSignedUrlJobErrorDetails
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataExchange.Types.ImportAssetFromSignedUrlJobErrorDetails.ImportAssetFromSignedUrlJobErrorDetails
instance Data.Hashable.Class.Hashable Amazonka.DataExchange.Types.ImportAssetFromSignedUrlJobErrorDetails.ImportAssetFromSignedUrlJobErrorDetails
instance Control.DeepSeq.NFData Amazonka.DataExchange.Types.ImportAssetFromSignedUrlJobErrorDetails.ImportAssetFromSignedUrlJobErrorDetails


module Amazonka.DataExchange.Types.Details

-- | Information about the job error.
--   
--   <i>See:</i> <a>newDetails</a> smart constructor.
data Details
Details' :: Maybe ImportAssetFromSignedUrlJobErrorDetails -> Maybe [AssetSourceEntry] -> Details

-- | Information about the job error.
[$sel:importAssetFromSignedUrlJobErrorDetails:Details'] :: Details -> Maybe ImportAssetFromSignedUrlJobErrorDetails

-- | Information about the job error.
[$sel:importAssetsFromS3JobErrorDetails:Details'] :: Details -> Maybe [AssetSourceEntry]

-- | Create a value of <a>Details</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:importAssetFromSignedUrlJobErrorDetails:Details'</a>,
--   <a>details_importAssetFromSignedUrlJobErrorDetails</a> - Information
--   about the job error.
--   
--   <a>$sel:importAssetsFromS3JobErrorDetails:Details'</a>,
--   <a>details_importAssetsFromS3JobErrorDetails</a> - Information about
--   the job error.
newDetails :: Details

-- | Information about the job error.
details_importAssetFromSignedUrlJobErrorDetails :: Lens' Details (Maybe ImportAssetFromSignedUrlJobErrorDetails)

-- | Information about the job error.
details_importAssetsFromS3JobErrorDetails :: Lens' Details (Maybe [AssetSourceEntry])
instance GHC.Generics.Generic Amazonka.DataExchange.Types.Details.Details
instance GHC.Show.Show Amazonka.DataExchange.Types.Details.Details
instance GHC.Read.Read Amazonka.DataExchange.Types.Details.Details
instance GHC.Classes.Eq Amazonka.DataExchange.Types.Details.Details
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataExchange.Types.Details.Details
instance Data.Hashable.Class.Hashable Amazonka.DataExchange.Types.Details.Details
instance Control.DeepSeq.NFData Amazonka.DataExchange.Types.Details.Details


module Amazonka.DataExchange.Types.ImportAssetFromSignedUrlRequestDetails

-- | Details of the operation to be performed by the job.
--   
--   <i>See:</i> <a>newImportAssetFromSignedUrlRequestDetails</a> smart
--   constructor.
data ImportAssetFromSignedUrlRequestDetails
ImportAssetFromSignedUrlRequestDetails' :: Text -> Text -> Text -> Text -> ImportAssetFromSignedUrlRequestDetails

-- | The unique identifier for the data set associated with this import
--   job.
[$sel:dataSetId:ImportAssetFromSignedUrlRequestDetails'] :: ImportAssetFromSignedUrlRequestDetails -> Text

-- | The Base64-encoded Md5 hash for the asset, used to ensure the
--   integrity of the file at that location.
[$sel:md5Hash:ImportAssetFromSignedUrlRequestDetails'] :: ImportAssetFromSignedUrlRequestDetails -> Text

-- | The name of the asset. When importing from Amazon S3, the S3 object
--   key is used as the asset name.
[$sel:assetName:ImportAssetFromSignedUrlRequestDetails'] :: ImportAssetFromSignedUrlRequestDetails -> Text

-- | The unique identifier for the revision associated with this import
--   request.
[$sel:revisionId:ImportAssetFromSignedUrlRequestDetails'] :: ImportAssetFromSignedUrlRequestDetails -> Text

-- | Create a value of <a>ImportAssetFromSignedUrlRequestDetails</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataSetId:ImportAssetFromSignedUrlRequestDetails'</a>,
--   <a>importAssetFromSignedUrlRequestDetails_dataSetId</a> - The unique
--   identifier for the data set associated with this import job.
--   
--   <a>$sel:md5Hash:ImportAssetFromSignedUrlRequestDetails'</a>,
--   <a>importAssetFromSignedUrlRequestDetails_md5Hash</a> - The
--   Base64-encoded Md5 hash for the asset, used to ensure the integrity of
--   the file at that location.
--   
--   <a>$sel:assetName:ImportAssetFromSignedUrlRequestDetails'</a>,
--   <a>importAssetFromSignedUrlRequestDetails_assetName</a> - The name of
--   the asset. When importing from Amazon S3, the S3 object key is used as
--   the asset name.
--   
--   <a>$sel:revisionId:ImportAssetFromSignedUrlRequestDetails'</a>,
--   <a>importAssetFromSignedUrlRequestDetails_revisionId</a> - The unique
--   identifier for the revision associated with this import request.
newImportAssetFromSignedUrlRequestDetails :: Text -> Text -> Text -> Text -> ImportAssetFromSignedUrlRequestDetails

-- | The unique identifier for the data set associated with this import
--   job.
importAssetFromSignedUrlRequestDetails_dataSetId :: Lens' ImportAssetFromSignedUrlRequestDetails Text

-- | The Base64-encoded Md5 hash for the asset, used to ensure the
--   integrity of the file at that location.
importAssetFromSignedUrlRequestDetails_md5Hash :: Lens' ImportAssetFromSignedUrlRequestDetails Text

-- | The name of the asset. When importing from Amazon S3, the S3 object
--   key is used as the asset name.
importAssetFromSignedUrlRequestDetails_assetName :: Lens' ImportAssetFromSignedUrlRequestDetails Text

-- | The unique identifier for the revision associated with this import
--   request.
importAssetFromSignedUrlRequestDetails_revisionId :: Lens' ImportAssetFromSignedUrlRequestDetails Text
instance GHC.Generics.Generic Amazonka.DataExchange.Types.ImportAssetFromSignedUrlRequestDetails.ImportAssetFromSignedUrlRequestDetails
instance GHC.Show.Show Amazonka.DataExchange.Types.ImportAssetFromSignedUrlRequestDetails.ImportAssetFromSignedUrlRequestDetails
instance GHC.Read.Read Amazonka.DataExchange.Types.ImportAssetFromSignedUrlRequestDetails.ImportAssetFromSignedUrlRequestDetails
instance GHC.Classes.Eq Amazonka.DataExchange.Types.ImportAssetFromSignedUrlRequestDetails.ImportAssetFromSignedUrlRequestDetails
instance Data.Hashable.Class.Hashable Amazonka.DataExchange.Types.ImportAssetFromSignedUrlRequestDetails.ImportAssetFromSignedUrlRequestDetails
instance Control.DeepSeq.NFData Amazonka.DataExchange.Types.ImportAssetFromSignedUrlRequestDetails.ImportAssetFromSignedUrlRequestDetails
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataExchange.Types.ImportAssetFromSignedUrlRequestDetails.ImportAssetFromSignedUrlRequestDetails


module Amazonka.DataExchange.Types.ImportAssetFromSignedUrlResponseDetails

-- | The details in the response for an import request, including the
--   signed URL and other information.
--   
--   <i>See:</i> <a>newImportAssetFromSignedUrlResponseDetails</a> smart
--   constructor.
data ImportAssetFromSignedUrlResponseDetails
ImportAssetFromSignedUrlResponseDetails' :: Maybe Text -> Maybe POSIX -> Maybe Text -> Text -> Text -> Text -> ImportAssetFromSignedUrlResponseDetails

-- | The signed URL.
[$sel:signedUrl:ImportAssetFromSignedUrlResponseDetails'] :: ImportAssetFromSignedUrlResponseDetails -> Maybe Text

-- | The time and date at which the signed URL expires, in ISO 8601 format.
[$sel:signedUrlExpiresAt:ImportAssetFromSignedUrlResponseDetails'] :: ImportAssetFromSignedUrlResponseDetails -> Maybe POSIX

-- | The Base64-encoded Md5 hash for the asset, used to ensure the
--   integrity of the file at that location.
[$sel:md5Hash:ImportAssetFromSignedUrlResponseDetails'] :: ImportAssetFromSignedUrlResponseDetails -> Maybe Text

-- | The unique identifier for the data set associated with this import
--   job.
[$sel:dataSetId:ImportAssetFromSignedUrlResponseDetails'] :: ImportAssetFromSignedUrlResponseDetails -> Text

-- | The name for the asset associated with this import job.
[$sel:assetName:ImportAssetFromSignedUrlResponseDetails'] :: ImportAssetFromSignedUrlResponseDetails -> Text

-- | The unique identifier for the revision associated with this import
--   response.
[$sel:revisionId:ImportAssetFromSignedUrlResponseDetails'] :: ImportAssetFromSignedUrlResponseDetails -> Text

-- | Create a value of <a>ImportAssetFromSignedUrlResponseDetails</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:signedUrl:ImportAssetFromSignedUrlResponseDetails'</a>,
--   <a>importAssetFromSignedUrlResponseDetails_signedUrl</a> - The signed
--   URL.
--   
--   
--   <a>$sel:signedUrlExpiresAt:ImportAssetFromSignedUrlResponseDetails'</a>,
--   <a>importAssetFromSignedUrlResponseDetails_signedUrlExpiresAt</a> -
--   The time and date at which the signed URL expires, in ISO 8601 format.
--   
--   <a>$sel:md5Hash:ImportAssetFromSignedUrlResponseDetails'</a>,
--   <a>importAssetFromSignedUrlResponseDetails_md5Hash</a> - The
--   Base64-encoded Md5 hash for the asset, used to ensure the integrity of
--   the file at that location.
--   
--   <a>$sel:dataSetId:ImportAssetFromSignedUrlResponseDetails'</a>,
--   <a>importAssetFromSignedUrlResponseDetails_dataSetId</a> - The unique
--   identifier for the data set associated with this import job.
--   
--   <a>$sel:assetName:ImportAssetFromSignedUrlResponseDetails'</a>,
--   <a>importAssetFromSignedUrlResponseDetails_assetName</a> - The name
--   for the asset associated with this import job.
--   
--   <a>$sel:revisionId:ImportAssetFromSignedUrlResponseDetails'</a>,
--   <a>importAssetFromSignedUrlResponseDetails_revisionId</a> - The unique
--   identifier for the revision associated with this import response.
newImportAssetFromSignedUrlResponseDetails :: Text -> Text -> Text -> ImportAssetFromSignedUrlResponseDetails

-- | The signed URL.
importAssetFromSignedUrlResponseDetails_signedUrl :: Lens' ImportAssetFromSignedUrlResponseDetails (Maybe Text)

-- | The time and date at which the signed URL expires, in ISO 8601 format.
importAssetFromSignedUrlResponseDetails_signedUrlExpiresAt :: Lens' ImportAssetFromSignedUrlResponseDetails (Maybe UTCTime)

-- | The Base64-encoded Md5 hash for the asset, used to ensure the
--   integrity of the file at that location.
importAssetFromSignedUrlResponseDetails_md5Hash :: Lens' ImportAssetFromSignedUrlResponseDetails (Maybe Text)

-- | The unique identifier for the data set associated with this import
--   job.
importAssetFromSignedUrlResponseDetails_dataSetId :: Lens' ImportAssetFromSignedUrlResponseDetails Text

-- | The name for the asset associated with this import job.
importAssetFromSignedUrlResponseDetails_assetName :: Lens' ImportAssetFromSignedUrlResponseDetails Text

-- | The unique identifier for the revision associated with this import
--   response.
importAssetFromSignedUrlResponseDetails_revisionId :: Lens' ImportAssetFromSignedUrlResponseDetails Text
instance GHC.Generics.Generic Amazonka.DataExchange.Types.ImportAssetFromSignedUrlResponseDetails.ImportAssetFromSignedUrlResponseDetails
instance GHC.Show.Show Amazonka.DataExchange.Types.ImportAssetFromSignedUrlResponseDetails.ImportAssetFromSignedUrlResponseDetails
instance GHC.Read.Read Amazonka.DataExchange.Types.ImportAssetFromSignedUrlResponseDetails.ImportAssetFromSignedUrlResponseDetails
instance GHC.Classes.Eq Amazonka.DataExchange.Types.ImportAssetFromSignedUrlResponseDetails.ImportAssetFromSignedUrlResponseDetails
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataExchange.Types.ImportAssetFromSignedUrlResponseDetails.ImportAssetFromSignedUrlResponseDetails
instance Data.Hashable.Class.Hashable Amazonka.DataExchange.Types.ImportAssetFromSignedUrlResponseDetails.ImportAssetFromSignedUrlResponseDetails
instance Control.DeepSeq.NFData Amazonka.DataExchange.Types.ImportAssetFromSignedUrlResponseDetails.ImportAssetFromSignedUrlResponseDetails


module Amazonka.DataExchange.Types.ImportAssetsFromS3RequestDetails

-- | Details of the operation to be performed by the job.
--   
--   <i>See:</i> <a>newImportAssetsFromS3RequestDetails</a> smart
--   constructor.
data ImportAssetsFromS3RequestDetails
ImportAssetsFromS3RequestDetails' :: Text -> [AssetSourceEntry] -> Text -> ImportAssetsFromS3RequestDetails

-- | The unique identifier for the data set associated with this import
--   job.
[$sel:dataSetId:ImportAssetsFromS3RequestDetails'] :: ImportAssetsFromS3RequestDetails -> Text

-- | Is a list of S3 bucket and object key pairs.
[$sel:assetSources:ImportAssetsFromS3RequestDetails'] :: ImportAssetsFromS3RequestDetails -> [AssetSourceEntry]

-- | The unique identifier for the revision associated with this import
--   request.
[$sel:revisionId:ImportAssetsFromS3RequestDetails'] :: ImportAssetsFromS3RequestDetails -> Text

-- | Create a value of <a>ImportAssetsFromS3RequestDetails</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataSetId:ImportAssetsFromS3RequestDetails'</a>,
--   <a>importAssetsFromS3RequestDetails_dataSetId</a> - The unique
--   identifier for the data set associated with this import job.
--   
--   <a>$sel:assetSources:ImportAssetsFromS3RequestDetails'</a>,
--   <a>importAssetsFromS3RequestDetails_assetSources</a> - Is a list of S3
--   bucket and object key pairs.
--   
--   <a>$sel:revisionId:ImportAssetsFromS3RequestDetails'</a>,
--   <a>importAssetsFromS3RequestDetails_revisionId</a> - The unique
--   identifier for the revision associated with this import request.
newImportAssetsFromS3RequestDetails :: Text -> Text -> ImportAssetsFromS3RequestDetails

-- | The unique identifier for the data set associated with this import
--   job.
importAssetsFromS3RequestDetails_dataSetId :: Lens' ImportAssetsFromS3RequestDetails Text

-- | Is a list of S3 bucket and object key pairs.
importAssetsFromS3RequestDetails_assetSources :: Lens' ImportAssetsFromS3RequestDetails [AssetSourceEntry]

-- | The unique identifier for the revision associated with this import
--   request.
importAssetsFromS3RequestDetails_revisionId :: Lens' ImportAssetsFromS3RequestDetails Text
instance GHC.Generics.Generic Amazonka.DataExchange.Types.ImportAssetsFromS3RequestDetails.ImportAssetsFromS3RequestDetails
instance GHC.Show.Show Amazonka.DataExchange.Types.ImportAssetsFromS3RequestDetails.ImportAssetsFromS3RequestDetails
instance GHC.Read.Read Amazonka.DataExchange.Types.ImportAssetsFromS3RequestDetails.ImportAssetsFromS3RequestDetails
instance GHC.Classes.Eq Amazonka.DataExchange.Types.ImportAssetsFromS3RequestDetails.ImportAssetsFromS3RequestDetails
instance Data.Hashable.Class.Hashable Amazonka.DataExchange.Types.ImportAssetsFromS3RequestDetails.ImportAssetsFromS3RequestDetails
instance Control.DeepSeq.NFData Amazonka.DataExchange.Types.ImportAssetsFromS3RequestDetails.ImportAssetsFromS3RequestDetails
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataExchange.Types.ImportAssetsFromS3RequestDetails.ImportAssetsFromS3RequestDetails


module Amazonka.DataExchange.Types.ImportAssetsFromS3ResponseDetails

-- | Details from an import from Amazon S3 response.
--   
--   <i>See:</i> <a>newImportAssetsFromS3ResponseDetails</a> smart
--   constructor.
data ImportAssetsFromS3ResponseDetails
ImportAssetsFromS3ResponseDetails' :: Text -> [AssetSourceEntry] -> Text -> ImportAssetsFromS3ResponseDetails

-- | The unique identifier for the data set associated with this import
--   job.
[$sel:dataSetId:ImportAssetsFromS3ResponseDetails'] :: ImportAssetsFromS3ResponseDetails -> Text

-- | Is a list of Amazon S3 bucket and object key pairs.
[$sel:assetSources:ImportAssetsFromS3ResponseDetails'] :: ImportAssetsFromS3ResponseDetails -> [AssetSourceEntry]

-- | The unique identifier for the revision associated with this import
--   response.
[$sel:revisionId:ImportAssetsFromS3ResponseDetails'] :: ImportAssetsFromS3ResponseDetails -> Text

-- | Create a value of <a>ImportAssetsFromS3ResponseDetails</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataSetId:ImportAssetsFromS3ResponseDetails'</a>,
--   <a>importAssetsFromS3ResponseDetails_dataSetId</a> - The unique
--   identifier for the data set associated with this import job.
--   
--   <a>$sel:assetSources:ImportAssetsFromS3ResponseDetails'</a>,
--   <a>importAssetsFromS3ResponseDetails_assetSources</a> - Is a list of
--   Amazon S3 bucket and object key pairs.
--   
--   <a>$sel:revisionId:ImportAssetsFromS3ResponseDetails'</a>,
--   <a>importAssetsFromS3ResponseDetails_revisionId</a> - The unique
--   identifier for the revision associated with this import response.
newImportAssetsFromS3ResponseDetails :: Text -> Text -> ImportAssetsFromS3ResponseDetails

-- | The unique identifier for the data set associated with this import
--   job.
importAssetsFromS3ResponseDetails_dataSetId :: Lens' ImportAssetsFromS3ResponseDetails Text

-- | Is a list of Amazon S3 bucket and object key pairs.
importAssetsFromS3ResponseDetails_assetSources :: Lens' ImportAssetsFromS3ResponseDetails [AssetSourceEntry]

-- | The unique identifier for the revision associated with this import
--   response.
importAssetsFromS3ResponseDetails_revisionId :: Lens' ImportAssetsFromS3ResponseDetails Text
instance GHC.Generics.Generic Amazonka.DataExchange.Types.ImportAssetsFromS3ResponseDetails.ImportAssetsFromS3ResponseDetails
instance GHC.Show.Show Amazonka.DataExchange.Types.ImportAssetsFromS3ResponseDetails.ImportAssetsFromS3ResponseDetails
instance GHC.Read.Read Amazonka.DataExchange.Types.ImportAssetsFromS3ResponseDetails.ImportAssetsFromS3ResponseDetails
instance GHC.Classes.Eq Amazonka.DataExchange.Types.ImportAssetsFromS3ResponseDetails.ImportAssetsFromS3ResponseDetails
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataExchange.Types.ImportAssetsFromS3ResponseDetails.ImportAssetsFromS3ResponseDetails
instance Data.Hashable.Class.Hashable Amazonka.DataExchange.Types.ImportAssetsFromS3ResponseDetails.ImportAssetsFromS3ResponseDetails
instance Control.DeepSeq.NFData Amazonka.DataExchange.Types.ImportAssetsFromS3ResponseDetails.ImportAssetsFromS3ResponseDetails


module Amazonka.DataExchange.Types.JobErrorLimitName

-- | The name of the limit that was reached.
newtype JobErrorLimitName
JobErrorLimitName' :: Text -> JobErrorLimitName
[fromJobErrorLimitName] :: JobErrorLimitName -> Text
pattern JobErrorLimitName_Amazon_Redshift_datashare_assets_per_revision :: JobErrorLimitName
pattern JobErrorLimitName_Asset_size_in_GB :: JobErrorLimitName
pattern JobErrorLimitName_Assets_per_revision :: JobErrorLimitName
instance Amazonka.Data.XML.ToXML Amazonka.DataExchange.Types.JobErrorLimitName.JobErrorLimitName
instance Amazonka.Data.XML.FromXML Amazonka.DataExchange.Types.JobErrorLimitName.JobErrorLimitName
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.DataExchange.Types.JobErrorLimitName.JobErrorLimitName
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataExchange.Types.JobErrorLimitName.JobErrorLimitName
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.DataExchange.Types.JobErrorLimitName.JobErrorLimitName
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataExchange.Types.JobErrorLimitName.JobErrorLimitName
instance Amazonka.Data.Query.ToQuery Amazonka.DataExchange.Types.JobErrorLimitName.JobErrorLimitName
instance Amazonka.Data.Headers.ToHeader Amazonka.DataExchange.Types.JobErrorLimitName.JobErrorLimitName
instance Amazonka.Data.Log.ToLog Amazonka.DataExchange.Types.JobErrorLimitName.JobErrorLimitName
instance Amazonka.Data.ByteString.ToByteString Amazonka.DataExchange.Types.JobErrorLimitName.JobErrorLimitName
instance Amazonka.Data.Text.ToText Amazonka.DataExchange.Types.JobErrorLimitName.JobErrorLimitName
instance Amazonka.Data.Text.FromText Amazonka.DataExchange.Types.JobErrorLimitName.JobErrorLimitName
instance Control.DeepSeq.NFData Amazonka.DataExchange.Types.JobErrorLimitName.JobErrorLimitName
instance Data.Hashable.Class.Hashable Amazonka.DataExchange.Types.JobErrorLimitName.JobErrorLimitName
instance GHC.Generics.Generic Amazonka.DataExchange.Types.JobErrorLimitName.JobErrorLimitName
instance GHC.Classes.Ord Amazonka.DataExchange.Types.JobErrorLimitName.JobErrorLimitName
instance GHC.Classes.Eq Amazonka.DataExchange.Types.JobErrorLimitName.JobErrorLimitName
instance GHC.Read.Read Amazonka.DataExchange.Types.JobErrorLimitName.JobErrorLimitName
instance GHC.Show.Show Amazonka.DataExchange.Types.JobErrorLimitName.JobErrorLimitName


module Amazonka.DataExchange.Types.JobErrorResourceTypes

-- | The types of resource which the job error can apply to.
newtype JobErrorResourceTypes
JobErrorResourceTypes' :: Text -> JobErrorResourceTypes
[fromJobErrorResourceTypes] :: JobErrorResourceTypes -> Text
pattern JobErrorResourceTypes_ASSET :: JobErrorResourceTypes
pattern JobErrorResourceTypes_DATA_SET :: JobErrorResourceTypes
pattern JobErrorResourceTypes_REVISION :: JobErrorResourceTypes
instance Amazonka.Data.XML.ToXML Amazonka.DataExchange.Types.JobErrorResourceTypes.JobErrorResourceTypes
instance Amazonka.Data.XML.FromXML Amazonka.DataExchange.Types.JobErrorResourceTypes.JobErrorResourceTypes
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.DataExchange.Types.JobErrorResourceTypes.JobErrorResourceTypes
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataExchange.Types.JobErrorResourceTypes.JobErrorResourceTypes
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.DataExchange.Types.JobErrorResourceTypes.JobErrorResourceTypes
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataExchange.Types.JobErrorResourceTypes.JobErrorResourceTypes
instance Amazonka.Data.Query.ToQuery Amazonka.DataExchange.Types.JobErrorResourceTypes.JobErrorResourceTypes
instance Amazonka.Data.Headers.ToHeader Amazonka.DataExchange.Types.JobErrorResourceTypes.JobErrorResourceTypes
instance Amazonka.Data.Log.ToLog Amazonka.DataExchange.Types.JobErrorResourceTypes.JobErrorResourceTypes
instance Amazonka.Data.ByteString.ToByteString Amazonka.DataExchange.Types.JobErrorResourceTypes.JobErrorResourceTypes
instance Amazonka.Data.Text.ToText Amazonka.DataExchange.Types.JobErrorResourceTypes.JobErrorResourceTypes
instance Amazonka.Data.Text.FromText Amazonka.DataExchange.Types.JobErrorResourceTypes.JobErrorResourceTypes
instance Control.DeepSeq.NFData Amazonka.DataExchange.Types.JobErrorResourceTypes.JobErrorResourceTypes
instance Data.Hashable.Class.Hashable Amazonka.DataExchange.Types.JobErrorResourceTypes.JobErrorResourceTypes
instance GHC.Generics.Generic Amazonka.DataExchange.Types.JobErrorResourceTypes.JobErrorResourceTypes
instance GHC.Classes.Ord Amazonka.DataExchange.Types.JobErrorResourceTypes.JobErrorResourceTypes
instance GHC.Classes.Eq Amazonka.DataExchange.Types.JobErrorResourceTypes.JobErrorResourceTypes
instance GHC.Read.Read Amazonka.DataExchange.Types.JobErrorResourceTypes.JobErrorResourceTypes
instance GHC.Show.Show Amazonka.DataExchange.Types.JobErrorResourceTypes.JobErrorResourceTypes


module Amazonka.DataExchange.Types.JobError

-- | An error that occurred with the job request.
--   
--   <i>See:</i> <a>newJobError</a> smart constructor.
data JobError
JobError' :: Maybe Text -> Maybe JobErrorLimitName -> Maybe JobErrorResourceTypes -> Maybe Details -> Maybe Double -> Text -> Code -> JobError

-- | The unique identifier for the resource related to the error.
[$sel:resourceId:JobError'] :: JobError -> Maybe Text

-- | The name of the limit that was reached.
[$sel:limitName:JobError'] :: JobError -> Maybe JobErrorLimitName

-- | The type of resource related to the error.
[$sel:resourceType:JobError'] :: JobError -> Maybe JobErrorResourceTypes

-- | The details about the job error.
[$sel:details:JobError'] :: JobError -> Maybe Details

-- | The value of the exceeded limit.
[$sel:limitValue:JobError'] :: JobError -> Maybe Double

-- | The message related to the job error.
[$sel:message:JobError'] :: JobError -> Text

-- | The code for the job error.
[$sel:code:JobError'] :: JobError -> Code

-- | Create a value of <a>JobError</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceId:JobError'</a>, <a>jobError_resourceId</a> - The
--   unique identifier for the resource related to the error.
--   
--   <a>$sel:limitName:JobError'</a>, <a>jobError_limitName</a> - The name
--   of the limit that was reached.
--   
--   <a>$sel:resourceType:JobError'</a>, <a>jobError_resourceType</a> - The
--   type of resource related to the error.
--   
--   <a>$sel:details:JobError'</a>, <a>jobError_details</a> - The details
--   about the job error.
--   
--   <a>$sel:limitValue:JobError'</a>, <a>jobError_limitValue</a> - The
--   value of the exceeded limit.
--   
--   <a>$sel:message:JobError'</a>, <a>jobError_message</a> - The message
--   related to the job error.
--   
--   <a>$sel:code:JobError'</a>, <a>jobError_code</a> - The code for the
--   job error.
newJobError :: Text -> Code -> JobError

-- | The unique identifier for the resource related to the error.
jobError_resourceId :: Lens' JobError (Maybe Text)

-- | The name of the limit that was reached.
jobError_limitName :: Lens' JobError (Maybe JobErrorLimitName)

-- | The type of resource related to the error.
jobError_resourceType :: Lens' JobError (Maybe JobErrorResourceTypes)

-- | The details about the job error.
jobError_details :: Lens' JobError (Maybe Details)

-- | The value of the exceeded limit.
jobError_limitValue :: Lens' JobError (Maybe Double)

-- | The message related to the job error.
jobError_message :: Lens' JobError Text

-- | The code for the job error.
jobError_code :: Lens' JobError Code
instance GHC.Generics.Generic Amazonka.DataExchange.Types.JobError.JobError
instance GHC.Show.Show Amazonka.DataExchange.Types.JobError.JobError
instance GHC.Read.Read Amazonka.DataExchange.Types.JobError.JobError
instance GHC.Classes.Eq Amazonka.DataExchange.Types.JobError.JobError
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataExchange.Types.JobError.JobError
instance Data.Hashable.Class.Hashable Amazonka.DataExchange.Types.JobError.JobError
instance Control.DeepSeq.NFData Amazonka.DataExchange.Types.JobError.JobError


module Amazonka.DataExchange.Types.Origin

-- | A property that defines the data set as OWNED by the account (for
--   providers) or ENTITLED to the account (for subscribers). When an owned
--   data set is published in a product, AWS Data Exchange creates a copy
--   of the data set. Subscribers can access that copy of the data set as
--   an entitled data set.
newtype Origin
Origin' :: Text -> Origin
[fromOrigin] :: Origin -> Text
pattern Origin_ENTITLED :: Origin
pattern Origin_OWNED :: Origin
instance Amazonka.Data.XML.ToXML Amazonka.DataExchange.Types.Origin.Origin
instance Amazonka.Data.XML.FromXML Amazonka.DataExchange.Types.Origin.Origin
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.DataExchange.Types.Origin.Origin
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataExchange.Types.Origin.Origin
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.DataExchange.Types.Origin.Origin
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataExchange.Types.Origin.Origin
instance Amazonka.Data.Query.ToQuery Amazonka.DataExchange.Types.Origin.Origin
instance Amazonka.Data.Headers.ToHeader Amazonka.DataExchange.Types.Origin.Origin
instance Amazonka.Data.Log.ToLog Amazonka.DataExchange.Types.Origin.Origin
instance Amazonka.Data.ByteString.ToByteString Amazonka.DataExchange.Types.Origin.Origin
instance Amazonka.Data.Text.ToText Amazonka.DataExchange.Types.Origin.Origin
instance Amazonka.Data.Text.FromText Amazonka.DataExchange.Types.Origin.Origin
instance Control.DeepSeq.NFData Amazonka.DataExchange.Types.Origin.Origin
instance Data.Hashable.Class.Hashable Amazonka.DataExchange.Types.Origin.Origin
instance GHC.Generics.Generic Amazonka.DataExchange.Types.Origin.Origin
instance GHC.Classes.Ord Amazonka.DataExchange.Types.Origin.Origin
instance GHC.Classes.Eq Amazonka.DataExchange.Types.Origin.Origin
instance GHC.Read.Read Amazonka.DataExchange.Types.Origin.Origin
instance GHC.Show.Show Amazonka.DataExchange.Types.Origin.Origin


module Amazonka.DataExchange.Types.OriginDetails

-- | Information about the origin of the data set.
--   
--   <i>See:</i> <a>newOriginDetails</a> smart constructor.
data OriginDetails
OriginDetails' :: Text -> OriginDetails

-- | The product ID of the origin of the data set.
[$sel:productId:OriginDetails'] :: OriginDetails -> Text

-- | Create a value of <a>OriginDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:productId:OriginDetails'</a>, <a>originDetails_productId</a> -
--   The product ID of the origin of the data set.
newOriginDetails :: Text -> OriginDetails

-- | The product ID of the origin of the data set.
originDetails_productId :: Lens' OriginDetails Text
instance GHC.Generics.Generic Amazonka.DataExchange.Types.OriginDetails.OriginDetails
instance GHC.Show.Show Amazonka.DataExchange.Types.OriginDetails.OriginDetails
instance GHC.Read.Read Amazonka.DataExchange.Types.OriginDetails.OriginDetails
instance GHC.Classes.Eq Amazonka.DataExchange.Types.OriginDetails.OriginDetails
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataExchange.Types.OriginDetails.OriginDetails
instance Data.Hashable.Class.Hashable Amazonka.DataExchange.Types.OriginDetails.OriginDetails
instance Control.DeepSeq.NFData Amazonka.DataExchange.Types.OriginDetails.OriginDetails


module Amazonka.DataExchange.Types.DataSetEntry

-- | A data set is an AWS resource with one or more revisions.
--   
--   <i>See:</i> <a>newDataSetEntry</a> smart constructor.
data DataSetEntry
DataSetEntry' :: Maybe Text -> Maybe OriginDetails -> Origin -> AssetType -> Text -> POSIX -> Text -> Text -> POSIX -> Text -> DataSetEntry

-- | The data set ID of the owned data set corresponding to the entitled
--   data set being viewed. This parameter is returned when a data set
--   owner is viewing the entitled copy of its owned data set.
[$sel:sourceId:DataSetEntry'] :: DataSetEntry -> Maybe Text

-- | If the origin of this data set is ENTITLED, includes the details for
--   the product on AWS Marketplace.
[$sel:originDetails:DataSetEntry'] :: DataSetEntry -> Maybe OriginDetails

-- | A property that defines the data set as OWNED by the account (for
--   providers) or ENTITLED to the account (for subscribers).
[$sel:origin:DataSetEntry'] :: DataSetEntry -> Origin

-- | The type of asset that is added to a data set.
[$sel:assetType:DataSetEntry'] :: DataSetEntry -> AssetType

-- | The description for the data set.
[$sel:description:DataSetEntry'] :: DataSetEntry -> Text

-- | The date and time that the data set was created, in ISO 8601 format.
[$sel:createdAt:DataSetEntry'] :: DataSetEntry -> POSIX

-- | The unique identifier for the data set.
[$sel:id:DataSetEntry'] :: DataSetEntry -> Text

-- | The ARN for the data set.
[$sel:arn:DataSetEntry'] :: DataSetEntry -> Text

-- | The date and time that the data set was last updated, in ISO 8601
--   format.
[$sel:updatedAt:DataSetEntry'] :: DataSetEntry -> POSIX

-- | The name of the data set.
[$sel:name:DataSetEntry'] :: DataSetEntry -> Text

-- | Create a value of <a>DataSetEntry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceId:DataSetEntry'</a>, <a>dataSetEntry_sourceId</a> - The
--   data set ID of the owned data set corresponding to the entitled data
--   set being viewed. This parameter is returned when a data set owner is
--   viewing the entitled copy of its owned data set.
--   
--   <a>$sel:originDetails:DataSetEntry'</a>,
--   <a>dataSetEntry_originDetails</a> - If the origin of this data set is
--   ENTITLED, includes the details for the product on AWS Marketplace.
--   
--   <a>$sel:origin:DataSetEntry'</a>, <a>dataSetEntry_origin</a> - A
--   property that defines the data set as OWNED by the account (for
--   providers) or ENTITLED to the account (for subscribers).
--   
--   <a>$sel:assetType:DataSetEntry'</a>, <a>dataSetEntry_assetType</a> -
--   The type of asset that is added to a data set.
--   
--   <a>$sel:description:DataSetEntry'</a>, <a>dataSetEntry_description</a>
--   - The description for the data set.
--   
--   <a>$sel:createdAt:DataSetEntry'</a>, <a>dataSetEntry_createdAt</a> -
--   The date and time that the data set was created, in ISO 8601 format.
--   
--   <a>$sel:id:DataSetEntry'</a>, <a>dataSetEntry_id</a> - The unique
--   identifier for the data set.
--   
--   <a>$sel:arn:DataSetEntry'</a>, <a>dataSetEntry_arn</a> - The ARN for
--   the data set.
--   
--   <a>$sel:updatedAt:DataSetEntry'</a>, <a>dataSetEntry_updatedAt</a> -
--   The date and time that the data set was last updated, in ISO 8601
--   format.
--   
--   <a>$sel:name:DataSetEntry'</a>, <a>dataSetEntry_name</a> - The name of
--   the data set.
newDataSetEntry :: Origin -> AssetType -> Text -> UTCTime -> Text -> Text -> UTCTime -> Text -> DataSetEntry

-- | The data set ID of the owned data set corresponding to the entitled
--   data set being viewed. This parameter is returned when a data set
--   owner is viewing the entitled copy of its owned data set.
dataSetEntry_sourceId :: Lens' DataSetEntry (Maybe Text)

-- | If the origin of this data set is ENTITLED, includes the details for
--   the product on AWS Marketplace.
dataSetEntry_originDetails :: Lens' DataSetEntry (Maybe OriginDetails)

-- | A property that defines the data set as OWNED by the account (for
--   providers) or ENTITLED to the account (for subscribers).
dataSetEntry_origin :: Lens' DataSetEntry Origin

-- | The type of asset that is added to a data set.
dataSetEntry_assetType :: Lens' DataSetEntry AssetType

-- | The description for the data set.
dataSetEntry_description :: Lens' DataSetEntry Text

-- | The date and time that the data set was created, in ISO 8601 format.
dataSetEntry_createdAt :: Lens' DataSetEntry UTCTime

-- | The unique identifier for the data set.
dataSetEntry_id :: Lens' DataSetEntry Text

-- | The ARN for the data set.
dataSetEntry_arn :: Lens' DataSetEntry Text

-- | The date and time that the data set was last updated, in ISO 8601
--   format.
dataSetEntry_updatedAt :: Lens' DataSetEntry UTCTime

-- | The name of the data set.
dataSetEntry_name :: Lens' DataSetEntry Text
instance GHC.Generics.Generic Amazonka.DataExchange.Types.DataSetEntry.DataSetEntry
instance GHC.Show.Show Amazonka.DataExchange.Types.DataSetEntry.DataSetEntry
instance GHC.Read.Read Amazonka.DataExchange.Types.DataSetEntry.DataSetEntry
instance GHC.Classes.Eq Amazonka.DataExchange.Types.DataSetEntry.DataSetEntry
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataExchange.Types.DataSetEntry.DataSetEntry
instance Data.Hashable.Class.Hashable Amazonka.DataExchange.Types.DataSetEntry.DataSetEntry
instance Control.DeepSeq.NFData Amazonka.DataExchange.Types.DataSetEntry.DataSetEntry


module Amazonka.DataExchange.Types.RedshiftDataShareAsset

-- | The Amazon Redshift datashare asset.
--   
--   <i>See:</i> <a>newRedshiftDataShareAsset</a> smart constructor.
data RedshiftDataShareAsset
RedshiftDataShareAsset' :: Text -> RedshiftDataShareAsset

-- | The Amazon Resource Name (ARN) of the datashare asset.
[$sel:arn:RedshiftDataShareAsset'] :: RedshiftDataShareAsset -> Text

-- | Create a value of <a>RedshiftDataShareAsset</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:RedshiftDataShareAsset'</a>,
--   <a>redshiftDataShareAsset_arn</a> - The Amazon Resource Name (ARN) of
--   the datashare asset.
newRedshiftDataShareAsset :: Text -> RedshiftDataShareAsset

-- | The Amazon Resource Name (ARN) of the datashare asset.
redshiftDataShareAsset_arn :: Lens' RedshiftDataShareAsset Text
instance GHC.Generics.Generic Amazonka.DataExchange.Types.RedshiftDataShareAsset.RedshiftDataShareAsset
instance GHC.Show.Show Amazonka.DataExchange.Types.RedshiftDataShareAsset.RedshiftDataShareAsset
instance GHC.Read.Read Amazonka.DataExchange.Types.RedshiftDataShareAsset.RedshiftDataShareAsset
instance GHC.Classes.Eq Amazonka.DataExchange.Types.RedshiftDataShareAsset.RedshiftDataShareAsset
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataExchange.Types.RedshiftDataShareAsset.RedshiftDataShareAsset
instance Data.Hashable.Class.Hashable Amazonka.DataExchange.Types.RedshiftDataShareAsset.RedshiftDataShareAsset
instance Control.DeepSeq.NFData Amazonka.DataExchange.Types.RedshiftDataShareAsset.RedshiftDataShareAsset


module Amazonka.DataExchange.Types.RedshiftDataShareAssetSourceEntry

-- | The source of the Amazon Redshift datashare asset.
--   
--   <i>See:</i> <a>newRedshiftDataShareAssetSourceEntry</a> smart
--   constructor.
data RedshiftDataShareAssetSourceEntry
RedshiftDataShareAssetSourceEntry' :: Text -> RedshiftDataShareAssetSourceEntry

-- | The Amazon Resource Name (ARN) of the datashare asset.
[$sel:dataShareArn:RedshiftDataShareAssetSourceEntry'] :: RedshiftDataShareAssetSourceEntry -> Text

-- | Create a value of <a>RedshiftDataShareAssetSourceEntry</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataShareArn:RedshiftDataShareAssetSourceEntry'</a>,
--   <a>redshiftDataShareAssetSourceEntry_dataShareArn</a> - The Amazon
--   Resource Name (ARN) of the datashare asset.
newRedshiftDataShareAssetSourceEntry :: Text -> RedshiftDataShareAssetSourceEntry

-- | The Amazon Resource Name (ARN) of the datashare asset.
redshiftDataShareAssetSourceEntry_dataShareArn :: Lens' RedshiftDataShareAssetSourceEntry Text
instance GHC.Generics.Generic Amazonka.DataExchange.Types.RedshiftDataShareAssetSourceEntry.RedshiftDataShareAssetSourceEntry
instance GHC.Show.Show Amazonka.DataExchange.Types.RedshiftDataShareAssetSourceEntry.RedshiftDataShareAssetSourceEntry
instance GHC.Read.Read Amazonka.DataExchange.Types.RedshiftDataShareAssetSourceEntry.RedshiftDataShareAssetSourceEntry
instance GHC.Classes.Eq Amazonka.DataExchange.Types.RedshiftDataShareAssetSourceEntry.RedshiftDataShareAssetSourceEntry
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataExchange.Types.RedshiftDataShareAssetSourceEntry.RedshiftDataShareAssetSourceEntry
instance Data.Hashable.Class.Hashable Amazonka.DataExchange.Types.RedshiftDataShareAssetSourceEntry.RedshiftDataShareAssetSourceEntry
instance Control.DeepSeq.NFData Amazonka.DataExchange.Types.RedshiftDataShareAssetSourceEntry.RedshiftDataShareAssetSourceEntry
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataExchange.Types.RedshiftDataShareAssetSourceEntry.RedshiftDataShareAssetSourceEntry


module Amazonka.DataExchange.Types.ImportAssetsFromRedshiftDataSharesResponseDetails

-- | Details from an import from Amazon Redshift datashare response.
--   
--   <i>See:</i>
--   <a>newImportAssetsFromRedshiftDataSharesResponseDetails</a> smart
--   constructor.
data ImportAssetsFromRedshiftDataSharesResponseDetails
ImportAssetsFromRedshiftDataSharesResponseDetails' :: Text -> [RedshiftDataShareAssetSourceEntry] -> Text -> ImportAssetsFromRedshiftDataSharesResponseDetails

-- | The unique identifier for the data set associated with this import
--   job.
[$sel:dataSetId:ImportAssetsFromRedshiftDataSharesResponseDetails'] :: ImportAssetsFromRedshiftDataSharesResponseDetails -> Text

-- | A list of Amazon Redshift datashare asset sources.
[$sel:assetSources:ImportAssetsFromRedshiftDataSharesResponseDetails'] :: ImportAssetsFromRedshiftDataSharesResponseDetails -> [RedshiftDataShareAssetSourceEntry]

-- | The unique identifier for the revision associated with this import
--   job.
[$sel:revisionId:ImportAssetsFromRedshiftDataSharesResponseDetails'] :: ImportAssetsFromRedshiftDataSharesResponseDetails -> Text

-- | Create a value of
--   <a>ImportAssetsFromRedshiftDataSharesResponseDetails</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:dataSetId:ImportAssetsFromRedshiftDataSharesResponseDetails'</a>,
--   <a>importAssetsFromRedshiftDataSharesResponseDetails_dataSetId</a> -
--   The unique identifier for the data set associated with this import
--   job.
--   
--   
--   <a>$sel:assetSources:ImportAssetsFromRedshiftDataSharesResponseDetails'</a>,
--   <a>importAssetsFromRedshiftDataSharesResponseDetails_assetSources</a>
--   - A list of Amazon Redshift datashare asset sources.
--   
--   
--   <a>$sel:revisionId:ImportAssetsFromRedshiftDataSharesResponseDetails'</a>,
--   <a>importAssetsFromRedshiftDataSharesResponseDetails_revisionId</a> -
--   The unique identifier for the revision associated with this import
--   job.
newImportAssetsFromRedshiftDataSharesResponseDetails :: Text -> Text -> ImportAssetsFromRedshiftDataSharesResponseDetails

-- | The unique identifier for the data set associated with this import
--   job.
importAssetsFromRedshiftDataSharesResponseDetails_dataSetId :: Lens' ImportAssetsFromRedshiftDataSharesResponseDetails Text

-- | A list of Amazon Redshift datashare asset sources.
importAssetsFromRedshiftDataSharesResponseDetails_assetSources :: Lens' ImportAssetsFromRedshiftDataSharesResponseDetails [RedshiftDataShareAssetSourceEntry]

-- | The unique identifier for the revision associated with this import
--   job.
importAssetsFromRedshiftDataSharesResponseDetails_revisionId :: Lens' ImportAssetsFromRedshiftDataSharesResponseDetails Text
instance GHC.Generics.Generic Amazonka.DataExchange.Types.ImportAssetsFromRedshiftDataSharesResponseDetails.ImportAssetsFromRedshiftDataSharesResponseDetails
instance GHC.Show.Show Amazonka.DataExchange.Types.ImportAssetsFromRedshiftDataSharesResponseDetails.ImportAssetsFromRedshiftDataSharesResponseDetails
instance GHC.Read.Read Amazonka.DataExchange.Types.ImportAssetsFromRedshiftDataSharesResponseDetails.ImportAssetsFromRedshiftDataSharesResponseDetails
instance GHC.Classes.Eq Amazonka.DataExchange.Types.ImportAssetsFromRedshiftDataSharesResponseDetails.ImportAssetsFromRedshiftDataSharesResponseDetails
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataExchange.Types.ImportAssetsFromRedshiftDataSharesResponseDetails.ImportAssetsFromRedshiftDataSharesResponseDetails
instance Data.Hashable.Class.Hashable Amazonka.DataExchange.Types.ImportAssetsFromRedshiftDataSharesResponseDetails.ImportAssetsFromRedshiftDataSharesResponseDetails
instance Control.DeepSeq.NFData Amazonka.DataExchange.Types.ImportAssetsFromRedshiftDataSharesResponseDetails.ImportAssetsFromRedshiftDataSharesResponseDetails


module Amazonka.DataExchange.Types.ImportAssetsFromRedshiftDataSharesRequestDetails

-- | Details from an import from Amazon Redshift datashare request.
--   
--   <i>See:</i> <a>newImportAssetsFromRedshiftDataSharesRequestDetails</a>
--   smart constructor.
data ImportAssetsFromRedshiftDataSharesRequestDetails
ImportAssetsFromRedshiftDataSharesRequestDetails' :: Text -> [RedshiftDataShareAssetSourceEntry] -> Text -> ImportAssetsFromRedshiftDataSharesRequestDetails

-- | The unique identifier for the data set associated with this import
--   job.
[$sel:dataSetId:ImportAssetsFromRedshiftDataSharesRequestDetails'] :: ImportAssetsFromRedshiftDataSharesRequestDetails -> Text

-- | A list of Amazon Redshift datashare assets.
[$sel:assetSources:ImportAssetsFromRedshiftDataSharesRequestDetails'] :: ImportAssetsFromRedshiftDataSharesRequestDetails -> [RedshiftDataShareAssetSourceEntry]

-- | The unique identifier for the revision associated with this import
--   job.
[$sel:revisionId:ImportAssetsFromRedshiftDataSharesRequestDetails'] :: ImportAssetsFromRedshiftDataSharesRequestDetails -> Text

-- | Create a value of
--   <a>ImportAssetsFromRedshiftDataSharesRequestDetails</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:dataSetId:ImportAssetsFromRedshiftDataSharesRequestDetails'</a>,
--   <a>importAssetsFromRedshiftDataSharesRequestDetails_dataSetId</a> -
--   The unique identifier for the data set associated with this import
--   job.
--   
--   
--   <a>$sel:assetSources:ImportAssetsFromRedshiftDataSharesRequestDetails'</a>,
--   <a>importAssetsFromRedshiftDataSharesRequestDetails_assetSources</a> -
--   A list of Amazon Redshift datashare assets.
--   
--   
--   <a>$sel:revisionId:ImportAssetsFromRedshiftDataSharesRequestDetails'</a>,
--   <a>importAssetsFromRedshiftDataSharesRequestDetails_revisionId</a> -
--   The unique identifier for the revision associated with this import
--   job.
newImportAssetsFromRedshiftDataSharesRequestDetails :: Text -> Text -> ImportAssetsFromRedshiftDataSharesRequestDetails

-- | The unique identifier for the data set associated with this import
--   job.
importAssetsFromRedshiftDataSharesRequestDetails_dataSetId :: Lens' ImportAssetsFromRedshiftDataSharesRequestDetails Text

-- | A list of Amazon Redshift datashare assets.
importAssetsFromRedshiftDataSharesRequestDetails_assetSources :: Lens' ImportAssetsFromRedshiftDataSharesRequestDetails [RedshiftDataShareAssetSourceEntry]

-- | The unique identifier for the revision associated with this import
--   job.
importAssetsFromRedshiftDataSharesRequestDetails_revisionId :: Lens' ImportAssetsFromRedshiftDataSharesRequestDetails Text
instance GHC.Generics.Generic Amazonka.DataExchange.Types.ImportAssetsFromRedshiftDataSharesRequestDetails.ImportAssetsFromRedshiftDataSharesRequestDetails
instance GHC.Show.Show Amazonka.DataExchange.Types.ImportAssetsFromRedshiftDataSharesRequestDetails.ImportAssetsFromRedshiftDataSharesRequestDetails
instance GHC.Read.Read Amazonka.DataExchange.Types.ImportAssetsFromRedshiftDataSharesRequestDetails.ImportAssetsFromRedshiftDataSharesRequestDetails
instance GHC.Classes.Eq Amazonka.DataExchange.Types.ImportAssetsFromRedshiftDataSharesRequestDetails.ImportAssetsFromRedshiftDataSharesRequestDetails
instance Data.Hashable.Class.Hashable Amazonka.DataExchange.Types.ImportAssetsFromRedshiftDataSharesRequestDetails.ImportAssetsFromRedshiftDataSharesRequestDetails
instance Control.DeepSeq.NFData Amazonka.DataExchange.Types.ImportAssetsFromRedshiftDataSharesRequestDetails.ImportAssetsFromRedshiftDataSharesRequestDetails
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataExchange.Types.ImportAssetsFromRedshiftDataSharesRequestDetails.ImportAssetsFromRedshiftDataSharesRequestDetails


module Amazonka.DataExchange.Types.RevisionDestinationEntry

-- | The destination where the assets in the revision will be exported.
--   
--   <i>See:</i> <a>newRevisionDestinationEntry</a> smart constructor.
data RevisionDestinationEntry
RevisionDestinationEntry' :: Maybe Text -> Text -> Text -> RevisionDestinationEntry

-- | A string representing the pattern for generated names of the
--   individual assets in the revision. For more information about key
--   patterns, see <a>Key patterns when exporting revisions</a>.
[$sel:keyPattern:RevisionDestinationEntry'] :: RevisionDestinationEntry -> Maybe Text

-- | The S3 bucket that is the destination for the assets in the revision.
[$sel:bucket:RevisionDestinationEntry'] :: RevisionDestinationEntry -> Text

-- | The unique identifier for the revision.
[$sel:revisionId:RevisionDestinationEntry'] :: RevisionDestinationEntry -> Text

-- | Create a value of <a>RevisionDestinationEntry</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyPattern:RevisionDestinationEntry'</a>,
--   <a>revisionDestinationEntry_keyPattern</a> - A string representing the
--   pattern for generated names of the individual assets in the revision.
--   For more information about key patterns, see <a>Key patterns when
--   exporting revisions</a>.
--   
--   <a>$sel:bucket:RevisionDestinationEntry'</a>,
--   <a>revisionDestinationEntry_bucket</a> - The S3 bucket that is the
--   destination for the assets in the revision.
--   
--   <a>$sel:revisionId:RevisionDestinationEntry'</a>,
--   <a>revisionDestinationEntry_revisionId</a> - The unique identifier for
--   the revision.
newRevisionDestinationEntry :: Text -> Text -> RevisionDestinationEntry

-- | A string representing the pattern for generated names of the
--   individual assets in the revision. For more information about key
--   patterns, see <a>Key patterns when exporting revisions</a>.
revisionDestinationEntry_keyPattern :: Lens' RevisionDestinationEntry (Maybe Text)

-- | The S3 bucket that is the destination for the assets in the revision.
revisionDestinationEntry_bucket :: Lens' RevisionDestinationEntry Text

-- | The unique identifier for the revision.
revisionDestinationEntry_revisionId :: Lens' RevisionDestinationEntry Text
instance GHC.Generics.Generic Amazonka.DataExchange.Types.RevisionDestinationEntry.RevisionDestinationEntry
instance GHC.Show.Show Amazonka.DataExchange.Types.RevisionDestinationEntry.RevisionDestinationEntry
instance GHC.Read.Read Amazonka.DataExchange.Types.RevisionDestinationEntry.RevisionDestinationEntry
instance GHC.Classes.Eq Amazonka.DataExchange.Types.RevisionDestinationEntry.RevisionDestinationEntry
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataExchange.Types.RevisionDestinationEntry.RevisionDestinationEntry
instance Data.Hashable.Class.Hashable Amazonka.DataExchange.Types.RevisionDestinationEntry.RevisionDestinationEntry
instance Control.DeepSeq.NFData Amazonka.DataExchange.Types.RevisionDestinationEntry.RevisionDestinationEntry
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataExchange.Types.RevisionDestinationEntry.RevisionDestinationEntry


module Amazonka.DataExchange.Types.RevisionEntry

-- | A revision is a container for one or more assets.
--   
--   <i>See:</i> <a>newRevisionEntry</a> smart constructor.
data RevisionEntry
RevisionEntry' :: Maybe Text -> Maybe Bool -> Maybe Text -> POSIX -> Text -> Text -> Text -> POSIX -> RevisionEntry

-- | The revision ID of the owned revision corresponding to the entitled
--   revision being viewed. This parameter is returned when a revision
--   owner is viewing the entitled copy of its owned revision.
[$sel:sourceId:RevisionEntry'] :: RevisionEntry -> Maybe Text

-- | To publish a revision to a data set in a product, the revision must
--   first be finalized. Finalizing a revision tells AWS Data Exchange that
--   your changes to the assets in the revision are complete. After it's in
--   this read-only state, you can publish the revision to your products.
--   
--   Finalized revisions can be published through the AWS Data Exchange
--   console or the AWS Marketplace Catalog API, using the StartChangeSet
--   AWS Marketplace Catalog API action. When using the API, revisions are
--   uniquely identified by their ARN.
[$sel:finalized:RevisionEntry'] :: RevisionEntry -> Maybe Bool

-- | An optional comment about the revision.
[$sel:comment:RevisionEntry'] :: RevisionEntry -> Maybe Text

-- | The date and time that the revision was created, in ISO 8601 format.
[$sel:createdAt:RevisionEntry'] :: RevisionEntry -> POSIX

-- | The unique identifier for the data set associated with this revision.
[$sel:dataSetId:RevisionEntry'] :: RevisionEntry -> Text

-- | The unique identifier for the revision.
[$sel:id:RevisionEntry'] :: RevisionEntry -> Text

-- | The ARN for the revision.
[$sel:arn:RevisionEntry'] :: RevisionEntry -> Text

-- | The date and time that the revision was last updated, in ISO 8601
--   format.
[$sel:updatedAt:RevisionEntry'] :: RevisionEntry -> POSIX

-- | Create a value of <a>RevisionEntry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceId:RevisionEntry'</a>, <a>revisionEntry_sourceId</a> -
--   The revision ID of the owned revision corresponding to the entitled
--   revision being viewed. This parameter is returned when a revision
--   owner is viewing the entitled copy of its owned revision.
--   
--   <a>$sel:finalized:RevisionEntry'</a>, <a>revisionEntry_finalized</a> -
--   To publish a revision to a data set in a product, the revision must
--   first be finalized. Finalizing a revision tells AWS Data Exchange that
--   your changes to the assets in the revision are complete. After it's in
--   this read-only state, you can publish the revision to your products.
--   
--   Finalized revisions can be published through the AWS Data Exchange
--   console or the AWS Marketplace Catalog API, using the StartChangeSet
--   AWS Marketplace Catalog API action. When using the API, revisions are
--   uniquely identified by their ARN.
--   
--   <a>$sel:comment:RevisionEntry'</a>, <a>revisionEntry_comment</a> - An
--   optional comment about the revision.
--   
--   <a>$sel:createdAt:RevisionEntry'</a>, <a>revisionEntry_createdAt</a> -
--   The date and time that the revision was created, in ISO 8601 format.
--   
--   <a>$sel:dataSetId:RevisionEntry'</a>, <a>revisionEntry_dataSetId</a> -
--   The unique identifier for the data set associated with this revision.
--   
--   <a>$sel:id:RevisionEntry'</a>, <a>revisionEntry_id</a> - The unique
--   identifier for the revision.
--   
--   <a>$sel:arn:RevisionEntry'</a>, <a>revisionEntry_arn</a> - The ARN for
--   the revision.
--   
--   <a>$sel:updatedAt:RevisionEntry'</a>, <a>revisionEntry_updatedAt</a> -
--   The date and time that the revision was last updated, in ISO 8601
--   format.
newRevisionEntry :: UTCTime -> Text -> Text -> Text -> UTCTime -> RevisionEntry

-- | The revision ID of the owned revision corresponding to the entitled
--   revision being viewed. This parameter is returned when a revision
--   owner is viewing the entitled copy of its owned revision.
revisionEntry_sourceId :: Lens' RevisionEntry (Maybe Text)

-- | To publish a revision to a data set in a product, the revision must
--   first be finalized. Finalizing a revision tells AWS Data Exchange that
--   your changes to the assets in the revision are complete. After it's in
--   this read-only state, you can publish the revision to your products.
--   
--   Finalized revisions can be published through the AWS Data Exchange
--   console or the AWS Marketplace Catalog API, using the StartChangeSet
--   AWS Marketplace Catalog API action. When using the API, revisions are
--   uniquely identified by their ARN.
revisionEntry_finalized :: Lens' RevisionEntry (Maybe Bool)

-- | An optional comment about the revision.
revisionEntry_comment :: Lens' RevisionEntry (Maybe Text)

-- | The date and time that the revision was created, in ISO 8601 format.
revisionEntry_createdAt :: Lens' RevisionEntry UTCTime

-- | The unique identifier for the data set associated with this revision.
revisionEntry_dataSetId :: Lens' RevisionEntry Text

-- | The unique identifier for the revision.
revisionEntry_id :: Lens' RevisionEntry Text

-- | The ARN for the revision.
revisionEntry_arn :: Lens' RevisionEntry Text

-- | The date and time that the revision was last updated, in ISO 8601
--   format.
revisionEntry_updatedAt :: Lens' RevisionEntry UTCTime
instance GHC.Generics.Generic Amazonka.DataExchange.Types.RevisionEntry.RevisionEntry
instance GHC.Show.Show Amazonka.DataExchange.Types.RevisionEntry.RevisionEntry
instance GHC.Read.Read Amazonka.DataExchange.Types.RevisionEntry.RevisionEntry
instance GHC.Classes.Eq Amazonka.DataExchange.Types.RevisionEntry.RevisionEntry
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataExchange.Types.RevisionEntry.RevisionEntry
instance Data.Hashable.Class.Hashable Amazonka.DataExchange.Types.RevisionEntry.RevisionEntry
instance Control.DeepSeq.NFData Amazonka.DataExchange.Types.RevisionEntry.RevisionEntry


module Amazonka.DataExchange.Types.RevisionPublished

-- | Information about the published revision.
--   
--   <i>See:</i> <a>newRevisionPublished</a> smart constructor.
data RevisionPublished
RevisionPublished' :: Text -> RevisionPublished

-- | The data set ID of the published revision.
[$sel:dataSetId:RevisionPublished'] :: RevisionPublished -> Text

-- | Create a value of <a>RevisionPublished</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataSetId:RevisionPublished'</a>,
--   <a>revisionPublished_dataSetId</a> - The data set ID of the published
--   revision.
newRevisionPublished :: Text -> RevisionPublished

-- | The data set ID of the published revision.
revisionPublished_dataSetId :: Lens' RevisionPublished Text
instance GHC.Generics.Generic Amazonka.DataExchange.Types.RevisionPublished.RevisionPublished
instance GHC.Show.Show Amazonka.DataExchange.Types.RevisionPublished.RevisionPublished
instance GHC.Read.Read Amazonka.DataExchange.Types.RevisionPublished.RevisionPublished
instance GHC.Classes.Eq Amazonka.DataExchange.Types.RevisionPublished.RevisionPublished
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataExchange.Types.RevisionPublished.RevisionPublished
instance Data.Hashable.Class.Hashable Amazonka.DataExchange.Types.RevisionPublished.RevisionPublished
instance Control.DeepSeq.NFData Amazonka.DataExchange.Types.RevisionPublished.RevisionPublished
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataExchange.Types.RevisionPublished.RevisionPublished


module Amazonka.DataExchange.Types.Event

-- | What occurs to start an action.
--   
--   <i>See:</i> <a>newEvent</a> smart constructor.
data Event
Event' :: Maybe RevisionPublished -> Event

-- | What occurs to start the revision publish action.
[$sel:revisionPublished:Event'] :: Event -> Maybe RevisionPublished

-- | Create a value of <a>Event</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:revisionPublished:Event'</a>, <a>event_revisionPublished</a> -
--   What occurs to start the revision publish action.
newEvent :: Event

-- | What occurs to start the revision publish action.
event_revisionPublished :: Lens' Event (Maybe RevisionPublished)
instance GHC.Generics.Generic Amazonka.DataExchange.Types.Event.Event
instance GHC.Show.Show Amazonka.DataExchange.Types.Event.Event
instance GHC.Read.Read Amazonka.DataExchange.Types.Event.Event
instance GHC.Classes.Eq Amazonka.DataExchange.Types.Event.Event
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataExchange.Types.Event.Event
instance Data.Hashable.Class.Hashable Amazonka.DataExchange.Types.Event.Event
instance Control.DeepSeq.NFData Amazonka.DataExchange.Types.Event.Event
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataExchange.Types.Event.Event


module Amazonka.DataExchange.Types.S3SnapshotAsset

-- | The S3 object that is the asset.
--   
--   <i>See:</i> <a>newS3SnapshotAsset</a> smart constructor.
data S3SnapshotAsset
S3SnapshotAsset' :: Double -> S3SnapshotAsset

-- | The size of the S3 object that is the object.
[$sel:size:S3SnapshotAsset'] :: S3SnapshotAsset -> Double

-- | Create a value of <a>S3SnapshotAsset</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:size:S3SnapshotAsset'</a>, <a>s3SnapshotAsset_size</a> - The
--   size of the S3 object that is the object.
newS3SnapshotAsset :: Double -> S3SnapshotAsset

-- | The size of the S3 object that is the object.
s3SnapshotAsset_size :: Lens' S3SnapshotAsset Double
instance GHC.Generics.Generic Amazonka.DataExchange.Types.S3SnapshotAsset.S3SnapshotAsset
instance GHC.Show.Show Amazonka.DataExchange.Types.S3SnapshotAsset.S3SnapshotAsset
instance GHC.Read.Read Amazonka.DataExchange.Types.S3SnapshotAsset.S3SnapshotAsset
instance GHC.Classes.Eq Amazonka.DataExchange.Types.S3SnapshotAsset.S3SnapshotAsset
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataExchange.Types.S3SnapshotAsset.S3SnapshotAsset
instance Data.Hashable.Class.Hashable Amazonka.DataExchange.Types.S3SnapshotAsset.S3SnapshotAsset
instance Control.DeepSeq.NFData Amazonka.DataExchange.Types.S3SnapshotAsset.S3SnapshotAsset


module Amazonka.DataExchange.Types.AssetDetails

-- | Information about the asset.
--   
--   <i>See:</i> <a>newAssetDetails</a> smart constructor.
data AssetDetails
AssetDetails' :: Maybe S3SnapshotAsset -> Maybe RedshiftDataShareAsset -> AssetDetails

-- | The S3 object that is the asset.
[$sel:s3SnapshotAsset:AssetDetails'] :: AssetDetails -> Maybe S3SnapshotAsset

-- | The Amazon Redshift datashare that is the asset.
[$sel:redshiftDataShareAsset:AssetDetails'] :: AssetDetails -> Maybe RedshiftDataShareAsset

-- | Create a value of <a>AssetDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3SnapshotAsset:AssetDetails'</a>,
--   <a>assetDetails_s3SnapshotAsset</a> - The S3 object that is the asset.
--   
--   <a>$sel:redshiftDataShareAsset:AssetDetails'</a>,
--   <a>assetDetails_redshiftDataShareAsset</a> - The Amazon Redshift
--   datashare that is the asset.
newAssetDetails :: AssetDetails

-- | The S3 object that is the asset.
assetDetails_s3SnapshotAsset :: Lens' AssetDetails (Maybe S3SnapshotAsset)

-- | The Amazon Redshift datashare that is the asset.
assetDetails_redshiftDataShareAsset :: Lens' AssetDetails (Maybe RedshiftDataShareAsset)
instance GHC.Generics.Generic Amazonka.DataExchange.Types.AssetDetails.AssetDetails
instance GHC.Show.Show Amazonka.DataExchange.Types.AssetDetails.AssetDetails
instance GHC.Read.Read Amazonka.DataExchange.Types.AssetDetails.AssetDetails
instance GHC.Classes.Eq Amazonka.DataExchange.Types.AssetDetails.AssetDetails
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataExchange.Types.AssetDetails.AssetDetails
instance Data.Hashable.Class.Hashable Amazonka.DataExchange.Types.AssetDetails.AssetDetails
instance Control.DeepSeq.NFData Amazonka.DataExchange.Types.AssetDetails.AssetDetails


module Amazonka.DataExchange.Types.AssetEntry

-- | An asset in AWS Data Exchange is a piece of data. The asset can be a
--   structured data file, an image file, or some other data file that can
--   be stored as an S3 object, or an Amazon Redshift datashare (Preview).
--   When you create an import job for your files, you create an asset in
--   AWS Data Exchange for each of those files.
--   
--   <i>See:</i> <a>newAssetEntry</a> smart constructor.
data AssetEntry
AssetEntry' :: Maybe Text -> AssetType -> POSIX -> Text -> Text -> Text -> AssetDetails -> POSIX -> Text -> Text -> AssetEntry

-- | The asset ID of the owned asset corresponding to the entitled asset
--   being viewed. This parameter is returned when an asset owner is
--   viewing the entitled copy of its owned asset.
[$sel:sourceId:AssetEntry'] :: AssetEntry -> Maybe Text

-- | The type of asset that is added to a data set.
[$sel:assetType:AssetEntry'] :: AssetEntry -> AssetType

-- | The date and time that the asset was created, in ISO 8601 format.
[$sel:createdAt:AssetEntry'] :: AssetEntry -> POSIX

-- | The unique identifier for the data set associated with this asset.
[$sel:dataSetId:AssetEntry'] :: AssetEntry -> Text

-- | The unique identifier for the asset.
[$sel:id:AssetEntry'] :: AssetEntry -> Text

-- | The ARN for the asset.
[$sel:arn:AssetEntry'] :: AssetEntry -> Text

-- | Information about the asset.
[$sel:assetDetails:AssetEntry'] :: AssetEntry -> AssetDetails

-- | The date and time that the asset was last updated, in ISO 8601 format.
[$sel:updatedAt:AssetEntry'] :: AssetEntry -> POSIX

-- | The unique identifier for the revision associated with this asset.
[$sel:revisionId:AssetEntry'] :: AssetEntry -> Text

-- | The name of the asset. When importing from Amazon S3, the S3 object
--   key is used as the asset name. When exporting to Amazon S3, the asset
--   name is used as default target S3 object key.
[$sel:name:AssetEntry'] :: AssetEntry -> Text

-- | Create a value of <a>AssetEntry</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceId:AssetEntry'</a>, <a>assetEntry_sourceId</a> - The
--   asset ID of the owned asset corresponding to the entitled asset being
--   viewed. This parameter is returned when an asset owner is viewing the
--   entitled copy of its owned asset.
--   
--   <a>$sel:assetType:AssetEntry'</a>, <a>assetEntry_assetType</a> - The
--   type of asset that is added to a data set.
--   
--   <a>$sel:createdAt:AssetEntry'</a>, <a>assetEntry_createdAt</a> - The
--   date and time that the asset was created, in ISO 8601 format.
--   
--   <a>$sel:dataSetId:AssetEntry'</a>, <a>assetEntry_dataSetId</a> - The
--   unique identifier for the data set associated with this asset.
--   
--   <a>$sel:id:AssetEntry'</a>, <a>assetEntry_id</a> - The unique
--   identifier for the asset.
--   
--   <a>$sel:arn:AssetEntry'</a>, <a>assetEntry_arn</a> - The ARN for the
--   asset.
--   
--   <a>$sel:assetDetails:AssetEntry'</a>, <a>assetEntry_assetDetails</a> -
--   Information about the asset.
--   
--   <a>$sel:updatedAt:AssetEntry'</a>, <a>assetEntry_updatedAt</a> - The
--   date and time that the asset was last updated, in ISO 8601 format.
--   
--   <a>$sel:revisionId:AssetEntry'</a>, <a>assetEntry_revisionId</a> - The
--   unique identifier for the revision associated with this asset.
--   
--   <a>$sel:name:AssetEntry'</a>, <a>assetEntry_name</a> - The name of the
--   asset. When importing from Amazon S3, the S3 object key is used as the
--   asset name. When exporting to Amazon S3, the asset name is used as
--   default target S3 object key.
newAssetEntry :: AssetType -> UTCTime -> Text -> Text -> Text -> AssetDetails -> UTCTime -> Text -> Text -> AssetEntry

-- | The asset ID of the owned asset corresponding to the entitled asset
--   being viewed. This parameter is returned when an asset owner is
--   viewing the entitled copy of its owned asset.
assetEntry_sourceId :: Lens' AssetEntry (Maybe Text)

-- | The type of asset that is added to a data set.
assetEntry_assetType :: Lens' AssetEntry AssetType

-- | The date and time that the asset was created, in ISO 8601 format.
assetEntry_createdAt :: Lens' AssetEntry UTCTime

-- | The unique identifier for the data set associated with this asset.
assetEntry_dataSetId :: Lens' AssetEntry Text

-- | The unique identifier for the asset.
assetEntry_id :: Lens' AssetEntry Text

-- | The ARN for the asset.
assetEntry_arn :: Lens' AssetEntry Text

-- | Information about the asset.
assetEntry_assetDetails :: Lens' AssetEntry AssetDetails

-- | The date and time that the asset was last updated, in ISO 8601 format.
assetEntry_updatedAt :: Lens' AssetEntry UTCTime

-- | The unique identifier for the revision associated with this asset.
assetEntry_revisionId :: Lens' AssetEntry Text

-- | The name of the asset. When importing from Amazon S3, the S3 object
--   key is used as the asset name. When exporting to Amazon S3, the asset
--   name is used as default target S3 object key.
assetEntry_name :: Lens' AssetEntry Text
instance GHC.Generics.Generic Amazonka.DataExchange.Types.AssetEntry.AssetEntry
instance GHC.Show.Show Amazonka.DataExchange.Types.AssetEntry.AssetEntry
instance GHC.Read.Read Amazonka.DataExchange.Types.AssetEntry.AssetEntry
instance GHC.Classes.Eq Amazonka.DataExchange.Types.AssetEntry.AssetEntry
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataExchange.Types.AssetEntry.AssetEntry
instance Data.Hashable.Class.Hashable Amazonka.DataExchange.Types.AssetEntry.AssetEntry
instance Control.DeepSeq.NFData Amazonka.DataExchange.Types.AssetEntry.AssetEntry


module Amazonka.DataExchange.Types.ServerSideEncryptionTypes

-- | The types of encryption supported in export jobs to Amazon S3.
newtype ServerSideEncryptionTypes
ServerSideEncryptionTypes' :: Text -> ServerSideEncryptionTypes
[fromServerSideEncryptionTypes] :: ServerSideEncryptionTypes -> Text
pattern ServerSideEncryptionTypes_AES256 :: ServerSideEncryptionTypes
pattern ServerSideEncryptionTypes_Aws_kms :: ServerSideEncryptionTypes
instance Amazonka.Data.XML.ToXML Amazonka.DataExchange.Types.ServerSideEncryptionTypes.ServerSideEncryptionTypes
instance Amazonka.Data.XML.FromXML Amazonka.DataExchange.Types.ServerSideEncryptionTypes.ServerSideEncryptionTypes
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.DataExchange.Types.ServerSideEncryptionTypes.ServerSideEncryptionTypes
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataExchange.Types.ServerSideEncryptionTypes.ServerSideEncryptionTypes
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.DataExchange.Types.ServerSideEncryptionTypes.ServerSideEncryptionTypes
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataExchange.Types.ServerSideEncryptionTypes.ServerSideEncryptionTypes
instance Amazonka.Data.Query.ToQuery Amazonka.DataExchange.Types.ServerSideEncryptionTypes.ServerSideEncryptionTypes
instance Amazonka.Data.Headers.ToHeader Amazonka.DataExchange.Types.ServerSideEncryptionTypes.ServerSideEncryptionTypes
instance Amazonka.Data.Log.ToLog Amazonka.DataExchange.Types.ServerSideEncryptionTypes.ServerSideEncryptionTypes
instance Amazonka.Data.ByteString.ToByteString Amazonka.DataExchange.Types.ServerSideEncryptionTypes.ServerSideEncryptionTypes
instance Amazonka.Data.Text.ToText Amazonka.DataExchange.Types.ServerSideEncryptionTypes.ServerSideEncryptionTypes
instance Amazonka.Data.Text.FromText Amazonka.DataExchange.Types.ServerSideEncryptionTypes.ServerSideEncryptionTypes
instance Control.DeepSeq.NFData Amazonka.DataExchange.Types.ServerSideEncryptionTypes.ServerSideEncryptionTypes
instance Data.Hashable.Class.Hashable Amazonka.DataExchange.Types.ServerSideEncryptionTypes.ServerSideEncryptionTypes
instance GHC.Generics.Generic Amazonka.DataExchange.Types.ServerSideEncryptionTypes.ServerSideEncryptionTypes
instance GHC.Classes.Ord Amazonka.DataExchange.Types.ServerSideEncryptionTypes.ServerSideEncryptionTypes
instance GHC.Classes.Eq Amazonka.DataExchange.Types.ServerSideEncryptionTypes.ServerSideEncryptionTypes
instance GHC.Read.Read Amazonka.DataExchange.Types.ServerSideEncryptionTypes.ServerSideEncryptionTypes
instance GHC.Show.Show Amazonka.DataExchange.Types.ServerSideEncryptionTypes.ServerSideEncryptionTypes


module Amazonka.DataExchange.Types.ExportServerSideEncryption

-- | Encryption configuration of the export job. Includes the encryption
--   type in addition to the AWS KMS key. The KMS key is only necessary if
--   you chose the KMS encryption. type.
--   
--   <i>See:</i> <a>newExportServerSideEncryption</a> smart constructor.
data ExportServerSideEncryption
ExportServerSideEncryption' :: Maybe Text -> ServerSideEncryptionTypes -> ExportServerSideEncryption

-- | The Amazon Resource Name (ARN) of the AWS KMS key you want to use to
--   encrypt the Amazon S3 objects. This parameter is required if you
--   choose aws:kms as an encryption type.
[$sel:kmsKeyArn:ExportServerSideEncryption'] :: ExportServerSideEncryption -> Maybe Text

-- | The type of server side encryption used for encrypting the objects in
--   Amazon S3.
[$sel:type':ExportServerSideEncryption'] :: ExportServerSideEncryption -> ServerSideEncryptionTypes

-- | Create a value of <a>ExportServerSideEncryption</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:kmsKeyArn:ExportServerSideEncryption'</a>,
--   <a>exportServerSideEncryption_kmsKeyArn</a> - The Amazon Resource Name
--   (ARN) of the AWS KMS key you want to use to encrypt the Amazon S3
--   objects. This parameter is required if you choose aws:kms as an
--   encryption type.
--   
--   <a>$sel:type':ExportServerSideEncryption'</a>,
--   <a>exportServerSideEncryption_type</a> - The type of server side
--   encryption used for encrypting the objects in Amazon S3.
newExportServerSideEncryption :: ServerSideEncryptionTypes -> ExportServerSideEncryption

-- | The Amazon Resource Name (ARN) of the AWS KMS key you want to use to
--   encrypt the Amazon S3 objects. This parameter is required if you
--   choose aws:kms as an encryption type.
exportServerSideEncryption_kmsKeyArn :: Lens' ExportServerSideEncryption (Maybe Text)

-- | The type of server side encryption used for encrypting the objects in
--   Amazon S3.
exportServerSideEncryption_type :: Lens' ExportServerSideEncryption ServerSideEncryptionTypes
instance GHC.Generics.Generic Amazonka.DataExchange.Types.ExportServerSideEncryption.ExportServerSideEncryption
instance GHC.Show.Show Amazonka.DataExchange.Types.ExportServerSideEncryption.ExportServerSideEncryption
instance GHC.Read.Read Amazonka.DataExchange.Types.ExportServerSideEncryption.ExportServerSideEncryption
instance GHC.Classes.Eq Amazonka.DataExchange.Types.ExportServerSideEncryption.ExportServerSideEncryption
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataExchange.Types.ExportServerSideEncryption.ExportServerSideEncryption
instance Data.Hashable.Class.Hashable Amazonka.DataExchange.Types.ExportServerSideEncryption.ExportServerSideEncryption
instance Control.DeepSeq.NFData Amazonka.DataExchange.Types.ExportServerSideEncryption.ExportServerSideEncryption
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataExchange.Types.ExportServerSideEncryption.ExportServerSideEncryption


module Amazonka.DataExchange.Types.ExportRevisionsToS3ResponseDetails

-- | Details about the export revisions to Amazon S3 response.
--   
--   <i>See:</i> <a>newExportRevisionsToS3ResponseDetails</a> smart
--   constructor.
data ExportRevisionsToS3ResponseDetails
ExportRevisionsToS3ResponseDetails' :: Maybe ExportServerSideEncryption -> Maybe Text -> [RevisionDestinationEntry] -> Text -> ExportRevisionsToS3ResponseDetails

-- | Encryption configuration of the export job.
[$sel:encryption:ExportRevisionsToS3ResponseDetails'] :: ExportRevisionsToS3ResponseDetails -> Maybe ExportServerSideEncryption

-- | The Amazon Resource Name (ARN) of the event action.
[$sel:eventActionArn:ExportRevisionsToS3ResponseDetails'] :: ExportRevisionsToS3ResponseDetails -> Maybe Text

-- | The destination in Amazon S3 where the revision is exported.
[$sel:revisionDestinations:ExportRevisionsToS3ResponseDetails'] :: ExportRevisionsToS3ResponseDetails -> [RevisionDestinationEntry]

-- | The unique identifier for the data set associated with this export
--   job.
[$sel:dataSetId:ExportRevisionsToS3ResponseDetails'] :: ExportRevisionsToS3ResponseDetails -> Text

-- | Create a value of <a>ExportRevisionsToS3ResponseDetails</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:encryption:ExportRevisionsToS3ResponseDetails'</a>,
--   <a>exportRevisionsToS3ResponseDetails_encryption</a> - Encryption
--   configuration of the export job.
--   
--   <a>$sel:eventActionArn:ExportRevisionsToS3ResponseDetails'</a>,
--   <a>exportRevisionsToS3ResponseDetails_eventActionArn</a> - The Amazon
--   Resource Name (ARN) of the event action.
--   
--   <a>$sel:revisionDestinations:ExportRevisionsToS3ResponseDetails'</a>,
--   <a>exportRevisionsToS3ResponseDetails_revisionDestinations</a> - The
--   destination in Amazon S3 where the revision is exported.
--   
--   <a>$sel:dataSetId:ExportRevisionsToS3ResponseDetails'</a>,
--   <a>exportRevisionsToS3ResponseDetails_dataSetId</a> - The unique
--   identifier for the data set associated with this export job.
newExportRevisionsToS3ResponseDetails :: Text -> ExportRevisionsToS3ResponseDetails

-- | Encryption configuration of the export job.
exportRevisionsToS3ResponseDetails_encryption :: Lens' ExportRevisionsToS3ResponseDetails (Maybe ExportServerSideEncryption)

-- | The Amazon Resource Name (ARN) of the event action.
exportRevisionsToS3ResponseDetails_eventActionArn :: Lens' ExportRevisionsToS3ResponseDetails (Maybe Text)

-- | The destination in Amazon S3 where the revision is exported.
exportRevisionsToS3ResponseDetails_revisionDestinations :: Lens' ExportRevisionsToS3ResponseDetails [RevisionDestinationEntry]

-- | The unique identifier for the data set associated with this export
--   job.
exportRevisionsToS3ResponseDetails_dataSetId :: Lens' ExportRevisionsToS3ResponseDetails Text
instance GHC.Generics.Generic Amazonka.DataExchange.Types.ExportRevisionsToS3ResponseDetails.ExportRevisionsToS3ResponseDetails
instance GHC.Show.Show Amazonka.DataExchange.Types.ExportRevisionsToS3ResponseDetails.ExportRevisionsToS3ResponseDetails
instance GHC.Read.Read Amazonka.DataExchange.Types.ExportRevisionsToS3ResponseDetails.ExportRevisionsToS3ResponseDetails
instance GHC.Classes.Eq Amazonka.DataExchange.Types.ExportRevisionsToS3ResponseDetails.ExportRevisionsToS3ResponseDetails
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataExchange.Types.ExportRevisionsToS3ResponseDetails.ExportRevisionsToS3ResponseDetails
instance Data.Hashable.Class.Hashable Amazonka.DataExchange.Types.ExportRevisionsToS3ResponseDetails.ExportRevisionsToS3ResponseDetails
instance Control.DeepSeq.NFData Amazonka.DataExchange.Types.ExportRevisionsToS3ResponseDetails.ExportRevisionsToS3ResponseDetails


module Amazonka.DataExchange.Types.ExportRevisionsToS3RequestDetails

-- | Details of the operation to be performed by the job.
--   
--   <i>See:</i> <a>newExportRevisionsToS3RequestDetails</a> smart
--   constructor.
data ExportRevisionsToS3RequestDetails
ExportRevisionsToS3RequestDetails' :: Maybe ExportServerSideEncryption -> [RevisionDestinationEntry] -> Text -> ExportRevisionsToS3RequestDetails

-- | Encryption configuration for the export job.
[$sel:encryption:ExportRevisionsToS3RequestDetails'] :: ExportRevisionsToS3RequestDetails -> Maybe ExportServerSideEncryption

-- | The destination for the revision.
[$sel:revisionDestinations:ExportRevisionsToS3RequestDetails'] :: ExportRevisionsToS3RequestDetails -> [RevisionDestinationEntry]

-- | The unique identifier for the data set associated with this export
--   job.
[$sel:dataSetId:ExportRevisionsToS3RequestDetails'] :: ExportRevisionsToS3RequestDetails -> Text

-- | Create a value of <a>ExportRevisionsToS3RequestDetails</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:encryption:ExportRevisionsToS3RequestDetails'</a>,
--   <a>exportRevisionsToS3RequestDetails_encryption</a> - Encryption
--   configuration for the export job.
--   
--   <a>$sel:revisionDestinations:ExportRevisionsToS3RequestDetails'</a>,
--   <a>exportRevisionsToS3RequestDetails_revisionDestinations</a> - The
--   destination for the revision.
--   
--   <a>$sel:dataSetId:ExportRevisionsToS3RequestDetails'</a>,
--   <a>exportRevisionsToS3RequestDetails_dataSetId</a> - The unique
--   identifier for the data set associated with this export job.
newExportRevisionsToS3RequestDetails :: Text -> ExportRevisionsToS3RequestDetails

-- | Encryption configuration for the export job.
exportRevisionsToS3RequestDetails_encryption :: Lens' ExportRevisionsToS3RequestDetails (Maybe ExportServerSideEncryption)

-- | The destination for the revision.
exportRevisionsToS3RequestDetails_revisionDestinations :: Lens' ExportRevisionsToS3RequestDetails [RevisionDestinationEntry]

-- | The unique identifier for the data set associated with this export
--   job.
exportRevisionsToS3RequestDetails_dataSetId :: Lens' ExportRevisionsToS3RequestDetails Text
instance GHC.Generics.Generic Amazonka.DataExchange.Types.ExportRevisionsToS3RequestDetails.ExportRevisionsToS3RequestDetails
instance GHC.Show.Show Amazonka.DataExchange.Types.ExportRevisionsToS3RequestDetails.ExportRevisionsToS3RequestDetails
instance GHC.Read.Read Amazonka.DataExchange.Types.ExportRevisionsToS3RequestDetails.ExportRevisionsToS3RequestDetails
instance GHC.Classes.Eq Amazonka.DataExchange.Types.ExportRevisionsToS3RequestDetails.ExportRevisionsToS3RequestDetails
instance Data.Hashable.Class.Hashable Amazonka.DataExchange.Types.ExportRevisionsToS3RequestDetails.ExportRevisionsToS3RequestDetails
instance Control.DeepSeq.NFData Amazonka.DataExchange.Types.ExportRevisionsToS3RequestDetails.ExportRevisionsToS3RequestDetails
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataExchange.Types.ExportRevisionsToS3RequestDetails.ExportRevisionsToS3RequestDetails


module Amazonka.DataExchange.Types.ExportAssetsToS3ResponseDetails

-- | Details about the export to Amazon S3 response.
--   
--   <i>See:</i> <a>newExportAssetsToS3ResponseDetails</a> smart
--   constructor.
data ExportAssetsToS3ResponseDetails
ExportAssetsToS3ResponseDetails' :: Maybe ExportServerSideEncryption -> [AssetDestinationEntry] -> Text -> Text -> ExportAssetsToS3ResponseDetails

-- | Encryption configuration of the export job.
[$sel:encryption:ExportAssetsToS3ResponseDetails'] :: ExportAssetsToS3ResponseDetails -> Maybe ExportServerSideEncryption

-- | The destination in Amazon S3 where the asset is exported.
[$sel:assetDestinations:ExportAssetsToS3ResponseDetails'] :: ExportAssetsToS3ResponseDetails -> [AssetDestinationEntry]

-- | The unique identifier for the data set associated with this export
--   job.
[$sel:dataSetId:ExportAssetsToS3ResponseDetails'] :: ExportAssetsToS3ResponseDetails -> Text

-- | The unique identifier for the revision associated with this export
--   response.
[$sel:revisionId:ExportAssetsToS3ResponseDetails'] :: ExportAssetsToS3ResponseDetails -> Text

-- | Create a value of <a>ExportAssetsToS3ResponseDetails</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:encryption:ExportAssetsToS3ResponseDetails'</a>,
--   <a>exportAssetsToS3ResponseDetails_encryption</a> - Encryption
--   configuration of the export job.
--   
--   <a>$sel:assetDestinations:ExportAssetsToS3ResponseDetails'</a>,
--   <a>exportAssetsToS3ResponseDetails_assetDestinations</a> - The
--   destination in Amazon S3 where the asset is exported.
--   
--   <a>$sel:dataSetId:ExportAssetsToS3ResponseDetails'</a>,
--   <a>exportAssetsToS3ResponseDetails_dataSetId</a> - The unique
--   identifier for the data set associated with this export job.
--   
--   <a>$sel:revisionId:ExportAssetsToS3ResponseDetails'</a>,
--   <a>exportAssetsToS3ResponseDetails_revisionId</a> - The unique
--   identifier for the revision associated with this export response.
newExportAssetsToS3ResponseDetails :: Text -> Text -> ExportAssetsToS3ResponseDetails

-- | Encryption configuration of the export job.
exportAssetsToS3ResponseDetails_encryption :: Lens' ExportAssetsToS3ResponseDetails (Maybe ExportServerSideEncryption)

-- | The destination in Amazon S3 where the asset is exported.
exportAssetsToS3ResponseDetails_assetDestinations :: Lens' ExportAssetsToS3ResponseDetails [AssetDestinationEntry]

-- | The unique identifier for the data set associated with this export
--   job.
exportAssetsToS3ResponseDetails_dataSetId :: Lens' ExportAssetsToS3ResponseDetails Text

-- | The unique identifier for the revision associated with this export
--   response.
exportAssetsToS3ResponseDetails_revisionId :: Lens' ExportAssetsToS3ResponseDetails Text
instance GHC.Generics.Generic Amazonka.DataExchange.Types.ExportAssetsToS3ResponseDetails.ExportAssetsToS3ResponseDetails
instance GHC.Show.Show Amazonka.DataExchange.Types.ExportAssetsToS3ResponseDetails.ExportAssetsToS3ResponseDetails
instance GHC.Read.Read Amazonka.DataExchange.Types.ExportAssetsToS3ResponseDetails.ExportAssetsToS3ResponseDetails
instance GHC.Classes.Eq Amazonka.DataExchange.Types.ExportAssetsToS3ResponseDetails.ExportAssetsToS3ResponseDetails
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataExchange.Types.ExportAssetsToS3ResponseDetails.ExportAssetsToS3ResponseDetails
instance Data.Hashable.Class.Hashable Amazonka.DataExchange.Types.ExportAssetsToS3ResponseDetails.ExportAssetsToS3ResponseDetails
instance Control.DeepSeq.NFData Amazonka.DataExchange.Types.ExportAssetsToS3ResponseDetails.ExportAssetsToS3ResponseDetails


module Amazonka.DataExchange.Types.ResponseDetails

-- | Details for the response.
--   
--   <i>See:</i> <a>newResponseDetails</a> smart constructor.
data ResponseDetails
ResponseDetails' :: Maybe ExportAssetsToS3ResponseDetails -> Maybe ExportRevisionsToS3ResponseDetails -> Maybe ImportAssetFromSignedUrlResponseDetails -> Maybe ImportAssetsFromRedshiftDataSharesResponseDetails -> Maybe ImportAssetsFromS3ResponseDetails -> Maybe ExportAssetToSignedUrlResponseDetails -> ResponseDetails

-- | Details for the export to Amazon S3 response.
[$sel:exportAssetsToS3:ResponseDetails'] :: ResponseDetails -> Maybe ExportAssetsToS3ResponseDetails

-- | Details for the export revisions to Amazon S3 response.
[$sel:exportRevisionsToS3:ResponseDetails'] :: ResponseDetails -> Maybe ExportRevisionsToS3ResponseDetails

-- | Details for the import from signed URL response.
[$sel:importAssetFromSignedUrl:ResponseDetails'] :: ResponseDetails -> Maybe ImportAssetFromSignedUrlResponseDetails

-- | Details from an import from Amazon Redshift datashare response.
[$sel:importAssetsFromRedshiftDataShares:ResponseDetails'] :: ResponseDetails -> Maybe ImportAssetsFromRedshiftDataSharesResponseDetails

-- | Details for the import from Amazon S3 response.
[$sel:importAssetsFromS3:ResponseDetails'] :: ResponseDetails -> Maybe ImportAssetsFromS3ResponseDetails

-- | Details for the export to signed URL response.
[$sel:exportAssetToSignedUrl:ResponseDetails'] :: ResponseDetails -> Maybe ExportAssetToSignedUrlResponseDetails

-- | Create a value of <a>ResponseDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:exportAssetsToS3:ResponseDetails'</a>,
--   <a>responseDetails_exportAssetsToS3</a> - Details for the export to
--   Amazon S3 response.
--   
--   <a>$sel:exportRevisionsToS3:ResponseDetails'</a>,
--   <a>responseDetails_exportRevisionsToS3</a> - Details for the export
--   revisions to Amazon S3 response.
--   
--   <a>$sel:importAssetFromSignedUrl:ResponseDetails'</a>,
--   <a>responseDetails_importAssetFromSignedUrl</a> - Details for the
--   import from signed URL response.
--   
--   <a>$sel:importAssetsFromRedshiftDataShares:ResponseDetails'</a>,
--   <a>responseDetails_importAssetsFromRedshiftDataShares</a> - Details
--   from an import from Amazon Redshift datashare response.
--   
--   <a>$sel:importAssetsFromS3:ResponseDetails'</a>,
--   <a>responseDetails_importAssetsFromS3</a> - Details for the import
--   from Amazon S3 response.
--   
--   <a>$sel:exportAssetToSignedUrl:ResponseDetails'</a>,
--   <a>responseDetails_exportAssetToSignedUrl</a> - Details for the export
--   to signed URL response.
newResponseDetails :: ResponseDetails

-- | Details for the export to Amazon S3 response.
responseDetails_exportAssetsToS3 :: Lens' ResponseDetails (Maybe ExportAssetsToS3ResponseDetails)

-- | Details for the export revisions to Amazon S3 response.
responseDetails_exportRevisionsToS3 :: Lens' ResponseDetails (Maybe ExportRevisionsToS3ResponseDetails)

-- | Details for the import from signed URL response.
responseDetails_importAssetFromSignedUrl :: Lens' ResponseDetails (Maybe ImportAssetFromSignedUrlResponseDetails)

-- | Details from an import from Amazon Redshift datashare response.
responseDetails_importAssetsFromRedshiftDataShares :: Lens' ResponseDetails (Maybe ImportAssetsFromRedshiftDataSharesResponseDetails)

-- | Details for the import from Amazon S3 response.
responseDetails_importAssetsFromS3 :: Lens' ResponseDetails (Maybe ImportAssetsFromS3ResponseDetails)

-- | Details for the export to signed URL response.
responseDetails_exportAssetToSignedUrl :: Lens' ResponseDetails (Maybe ExportAssetToSignedUrlResponseDetails)
instance GHC.Generics.Generic Amazonka.DataExchange.Types.ResponseDetails.ResponseDetails
instance GHC.Show.Show Amazonka.DataExchange.Types.ResponseDetails.ResponseDetails
instance GHC.Read.Read Amazonka.DataExchange.Types.ResponseDetails.ResponseDetails
instance GHC.Classes.Eq Amazonka.DataExchange.Types.ResponseDetails.ResponseDetails
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataExchange.Types.ResponseDetails.ResponseDetails
instance Data.Hashable.Class.Hashable Amazonka.DataExchange.Types.ResponseDetails.ResponseDetails
instance Control.DeepSeq.NFData Amazonka.DataExchange.Types.ResponseDetails.ResponseDetails


module Amazonka.DataExchange.Types.ExportAssetsToS3RequestDetails

-- | Details of the operation to be performed by the job.
--   
--   <i>See:</i> <a>newExportAssetsToS3RequestDetails</a> smart
--   constructor.
data ExportAssetsToS3RequestDetails
ExportAssetsToS3RequestDetails' :: Maybe ExportServerSideEncryption -> [AssetDestinationEntry] -> Text -> Text -> ExportAssetsToS3RequestDetails

-- | Encryption configuration for the export job.
[$sel:encryption:ExportAssetsToS3RequestDetails'] :: ExportAssetsToS3RequestDetails -> Maybe ExportServerSideEncryption

-- | The destination for the asset.
[$sel:assetDestinations:ExportAssetsToS3RequestDetails'] :: ExportAssetsToS3RequestDetails -> [AssetDestinationEntry]

-- | The unique identifier for the data set associated with this export
--   job.
[$sel:dataSetId:ExportAssetsToS3RequestDetails'] :: ExportAssetsToS3RequestDetails -> Text

-- | The unique identifier for the revision associated with this export
--   request.
[$sel:revisionId:ExportAssetsToS3RequestDetails'] :: ExportAssetsToS3RequestDetails -> Text

-- | Create a value of <a>ExportAssetsToS3RequestDetails</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:encryption:ExportAssetsToS3RequestDetails'</a>,
--   <a>exportAssetsToS3RequestDetails_encryption</a> - Encryption
--   configuration for the export job.
--   
--   <a>$sel:assetDestinations:ExportAssetsToS3RequestDetails'</a>,
--   <a>exportAssetsToS3RequestDetails_assetDestinations</a> - The
--   destination for the asset.
--   
--   <a>$sel:dataSetId:ExportAssetsToS3RequestDetails'</a>,
--   <a>exportAssetsToS3RequestDetails_dataSetId</a> - The unique
--   identifier for the data set associated with this export job.
--   
--   <a>$sel:revisionId:ExportAssetsToS3RequestDetails'</a>,
--   <a>exportAssetsToS3RequestDetails_revisionId</a> - The unique
--   identifier for the revision associated with this export request.
newExportAssetsToS3RequestDetails :: Text -> Text -> ExportAssetsToS3RequestDetails

-- | Encryption configuration for the export job.
exportAssetsToS3RequestDetails_encryption :: Lens' ExportAssetsToS3RequestDetails (Maybe ExportServerSideEncryption)

-- | The destination for the asset.
exportAssetsToS3RequestDetails_assetDestinations :: Lens' ExportAssetsToS3RequestDetails [AssetDestinationEntry]

-- | The unique identifier for the data set associated with this export
--   job.
exportAssetsToS3RequestDetails_dataSetId :: Lens' ExportAssetsToS3RequestDetails Text

-- | The unique identifier for the revision associated with this export
--   request.
exportAssetsToS3RequestDetails_revisionId :: Lens' ExportAssetsToS3RequestDetails Text
instance GHC.Generics.Generic Amazonka.DataExchange.Types.ExportAssetsToS3RequestDetails.ExportAssetsToS3RequestDetails
instance GHC.Show.Show Amazonka.DataExchange.Types.ExportAssetsToS3RequestDetails.ExportAssetsToS3RequestDetails
instance GHC.Read.Read Amazonka.DataExchange.Types.ExportAssetsToS3RequestDetails.ExportAssetsToS3RequestDetails
instance GHC.Classes.Eq Amazonka.DataExchange.Types.ExportAssetsToS3RequestDetails.ExportAssetsToS3RequestDetails
instance Data.Hashable.Class.Hashable Amazonka.DataExchange.Types.ExportAssetsToS3RequestDetails.ExportAssetsToS3RequestDetails
instance Control.DeepSeq.NFData Amazonka.DataExchange.Types.ExportAssetsToS3RequestDetails.ExportAssetsToS3RequestDetails
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataExchange.Types.ExportAssetsToS3RequestDetails.ExportAssetsToS3RequestDetails


module Amazonka.DataExchange.Types.RequestDetails

-- | The details for the request.
--   
--   <i>See:</i> <a>newRequestDetails</a> smart constructor.
data RequestDetails
RequestDetails' :: Maybe ExportAssetsToS3RequestDetails -> Maybe ExportRevisionsToS3RequestDetails -> Maybe ImportAssetFromSignedUrlRequestDetails -> Maybe ImportAssetsFromRedshiftDataSharesRequestDetails -> Maybe ImportAssetsFromS3RequestDetails -> Maybe ExportAssetToSignedUrlRequestDetails -> RequestDetails

-- | Details about the export to Amazon S3 request.
[$sel:exportAssetsToS3:RequestDetails'] :: RequestDetails -> Maybe ExportAssetsToS3RequestDetails

-- | Details about the export to Amazon S3 request.
[$sel:exportRevisionsToS3:RequestDetails'] :: RequestDetails -> Maybe ExportRevisionsToS3RequestDetails

-- | Details about the import from signed URL request.
[$sel:importAssetFromSignedUrl:RequestDetails'] :: RequestDetails -> Maybe ImportAssetFromSignedUrlRequestDetails

-- | Details from an import from Amazon Redshift datashare request.
[$sel:importAssetsFromRedshiftDataShares:RequestDetails'] :: RequestDetails -> Maybe ImportAssetsFromRedshiftDataSharesRequestDetails

-- | Details about the import from Amazon S3 request.
[$sel:importAssetsFromS3:RequestDetails'] :: RequestDetails -> Maybe ImportAssetsFromS3RequestDetails

-- | Details about the export to signed URL request.
[$sel:exportAssetToSignedUrl:RequestDetails'] :: RequestDetails -> Maybe ExportAssetToSignedUrlRequestDetails

-- | Create a value of <a>RequestDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:exportAssetsToS3:RequestDetails'</a>,
--   <a>requestDetails_exportAssetsToS3</a> - Details about the export to
--   Amazon S3 request.
--   
--   <a>$sel:exportRevisionsToS3:RequestDetails'</a>,
--   <a>requestDetails_exportRevisionsToS3</a> - Details about the export
--   to Amazon S3 request.
--   
--   <a>$sel:importAssetFromSignedUrl:RequestDetails'</a>,
--   <a>requestDetails_importAssetFromSignedUrl</a> - Details about the
--   import from signed URL request.
--   
--   <a>$sel:importAssetsFromRedshiftDataShares:RequestDetails'</a>,
--   <a>requestDetails_importAssetsFromRedshiftDataShares</a> - Details
--   from an import from Amazon Redshift datashare request.
--   
--   <a>$sel:importAssetsFromS3:RequestDetails'</a>,
--   <a>requestDetails_importAssetsFromS3</a> - Details about the import
--   from Amazon S3 request.
--   
--   <a>$sel:exportAssetToSignedUrl:RequestDetails'</a>,
--   <a>requestDetails_exportAssetToSignedUrl</a> - Details about the
--   export to signed URL request.
newRequestDetails :: RequestDetails

-- | Details about the export to Amazon S3 request.
requestDetails_exportAssetsToS3 :: Lens' RequestDetails (Maybe ExportAssetsToS3RequestDetails)

-- | Details about the export to Amazon S3 request.
requestDetails_exportRevisionsToS3 :: Lens' RequestDetails (Maybe ExportRevisionsToS3RequestDetails)

-- | Details about the import from signed URL request.
requestDetails_importAssetFromSignedUrl :: Lens' RequestDetails (Maybe ImportAssetFromSignedUrlRequestDetails)

-- | Details from an import from Amazon Redshift datashare request.
requestDetails_importAssetsFromRedshiftDataShares :: Lens' RequestDetails (Maybe ImportAssetsFromRedshiftDataSharesRequestDetails)

-- | Details about the import from Amazon S3 request.
requestDetails_importAssetsFromS3 :: Lens' RequestDetails (Maybe ImportAssetsFromS3RequestDetails)

-- | Details about the export to signed URL request.
requestDetails_exportAssetToSignedUrl :: Lens' RequestDetails (Maybe ExportAssetToSignedUrlRequestDetails)
instance GHC.Generics.Generic Amazonka.DataExchange.Types.RequestDetails.RequestDetails
instance GHC.Show.Show Amazonka.DataExchange.Types.RequestDetails.RequestDetails
instance GHC.Read.Read Amazonka.DataExchange.Types.RequestDetails.RequestDetails
instance GHC.Classes.Eq Amazonka.DataExchange.Types.RequestDetails.RequestDetails
instance Data.Hashable.Class.Hashable Amazonka.DataExchange.Types.RequestDetails.RequestDetails
instance Control.DeepSeq.NFData Amazonka.DataExchange.Types.RequestDetails.RequestDetails
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataExchange.Types.RequestDetails.RequestDetails


module Amazonka.DataExchange.Types.AutoExportRevisionToS3RequestDetails

-- | Details of the operation to be performed by the job.
--   
--   <i>See:</i> <a>newAutoExportRevisionToS3RequestDetails</a> smart
--   constructor.
data AutoExportRevisionToS3RequestDetails
AutoExportRevisionToS3RequestDetails' :: Maybe ExportServerSideEncryption -> AutoExportRevisionDestinationEntry -> AutoExportRevisionToS3RequestDetails

-- | Encryption configuration for the auto export job.
[$sel:encryption:AutoExportRevisionToS3RequestDetails'] :: AutoExportRevisionToS3RequestDetails -> Maybe ExportServerSideEncryption

-- | A revision destination is the Amazon S3 bucket folder destination to
--   where the export will be sent.
[$sel:revisionDestination:AutoExportRevisionToS3RequestDetails'] :: AutoExportRevisionToS3RequestDetails -> AutoExportRevisionDestinationEntry

-- | Create a value of <a>AutoExportRevisionToS3RequestDetails</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:encryption:AutoExportRevisionToS3RequestDetails'</a>,
--   <a>autoExportRevisionToS3RequestDetails_encryption</a> - Encryption
--   configuration for the auto export job.
--   
--   <a>$sel:revisionDestination:AutoExportRevisionToS3RequestDetails'</a>,
--   <a>autoExportRevisionToS3RequestDetails_revisionDestination</a> - A
--   revision destination is the Amazon S3 bucket folder destination to
--   where the export will be sent.
newAutoExportRevisionToS3RequestDetails :: AutoExportRevisionDestinationEntry -> AutoExportRevisionToS3RequestDetails

-- | Encryption configuration for the auto export job.
autoExportRevisionToS3RequestDetails_encryption :: Lens' AutoExportRevisionToS3RequestDetails (Maybe ExportServerSideEncryption)

-- | A revision destination is the Amazon S3 bucket folder destination to
--   where the export will be sent.
autoExportRevisionToS3RequestDetails_revisionDestination :: Lens' AutoExportRevisionToS3RequestDetails AutoExportRevisionDestinationEntry
instance GHC.Generics.Generic Amazonka.DataExchange.Types.AutoExportRevisionToS3RequestDetails.AutoExportRevisionToS3RequestDetails
instance GHC.Show.Show Amazonka.DataExchange.Types.AutoExportRevisionToS3RequestDetails.AutoExportRevisionToS3RequestDetails
instance GHC.Read.Read Amazonka.DataExchange.Types.AutoExportRevisionToS3RequestDetails.AutoExportRevisionToS3RequestDetails
instance GHC.Classes.Eq Amazonka.DataExchange.Types.AutoExportRevisionToS3RequestDetails.AutoExportRevisionToS3RequestDetails
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataExchange.Types.AutoExportRevisionToS3RequestDetails.AutoExportRevisionToS3RequestDetails
instance Data.Hashable.Class.Hashable Amazonka.DataExchange.Types.AutoExportRevisionToS3RequestDetails.AutoExportRevisionToS3RequestDetails
instance Control.DeepSeq.NFData Amazonka.DataExchange.Types.AutoExportRevisionToS3RequestDetails.AutoExportRevisionToS3RequestDetails
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataExchange.Types.AutoExportRevisionToS3RequestDetails.AutoExportRevisionToS3RequestDetails


module Amazonka.DataExchange.Types.Action

-- | What occurs after a certain event.
--   
--   <i>See:</i> <a>newAction</a> smart constructor.
data Action
Action' :: Maybe AutoExportRevisionToS3RequestDetails -> Action

-- | Details for the export revision to Amazon S3 action.
[$sel:exportRevisionToS3:Action'] :: Action -> Maybe AutoExportRevisionToS3RequestDetails

-- | Create a value of <a>Action</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:exportRevisionToS3:Action'</a>,
--   <a>action_exportRevisionToS3</a> - Details for the export revision to
--   Amazon S3 action.
newAction :: Action

-- | Details for the export revision to Amazon S3 action.
action_exportRevisionToS3 :: Lens' Action (Maybe AutoExportRevisionToS3RequestDetails)
instance GHC.Generics.Generic Amazonka.DataExchange.Types.Action.Action
instance GHC.Show.Show Amazonka.DataExchange.Types.Action.Action
instance GHC.Read.Read Amazonka.DataExchange.Types.Action.Action
instance GHC.Classes.Eq Amazonka.DataExchange.Types.Action.Action
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataExchange.Types.Action.Action
instance Data.Hashable.Class.Hashable Amazonka.DataExchange.Types.Action.Action
instance Control.DeepSeq.NFData Amazonka.DataExchange.Types.Action.Action
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataExchange.Types.Action.Action


module Amazonka.DataExchange.Types.EventActionEntry

-- | An event action is an object that defines the relationship between a
--   specific event and an automated action that will be taken on behalf of
--   the customer.
--   
--   <i>See:</i> <a>newEventActionEntry</a> smart constructor.
data EventActionEntry
EventActionEntry' :: Action -> POSIX -> Event -> Text -> Text -> POSIX -> EventActionEntry

-- | What occurs after a certain event.
[$sel:action:EventActionEntry'] :: EventActionEntry -> Action

-- | The date and time that the event action was created, in ISO 8601
--   format.
[$sel:createdAt:EventActionEntry'] :: EventActionEntry -> POSIX

-- | What occurs to start an action.
[$sel:event:EventActionEntry'] :: EventActionEntry -> Event

-- | The unique identifier for the event action.
[$sel:id:EventActionEntry'] :: EventActionEntry -> Text

-- | The Amazon Resource Name (ARN) for the event action.
[$sel:arn:EventActionEntry'] :: EventActionEntry -> Text

-- | The date and time that the event action was last updated, in ISO 8601
--   format.
[$sel:updatedAt:EventActionEntry'] :: EventActionEntry -> POSIX

-- | Create a value of <a>EventActionEntry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:action:EventActionEntry'</a>, <a>eventActionEntry_action</a> -
--   What occurs after a certain event.
--   
--   <a>$sel:createdAt:EventActionEntry'</a>,
--   <a>eventActionEntry_createdAt</a> - The date and time that the event
--   action was created, in ISO 8601 format.
--   
--   <a>$sel:event:EventActionEntry'</a>, <a>eventActionEntry_event</a> -
--   What occurs to start an action.
--   
--   <a>$sel:id:EventActionEntry'</a>, <a>eventActionEntry_id</a> - The
--   unique identifier for the event action.
--   
--   <a>$sel:arn:EventActionEntry'</a>, <a>eventActionEntry_arn</a> - The
--   Amazon Resource Name (ARN) for the event action.
--   
--   <a>$sel:updatedAt:EventActionEntry'</a>,
--   <a>eventActionEntry_updatedAt</a> - The date and time that the event
--   action was last updated, in ISO 8601 format.
newEventActionEntry :: Action -> UTCTime -> Event -> Text -> Text -> UTCTime -> EventActionEntry

-- | What occurs after a certain event.
eventActionEntry_action :: Lens' EventActionEntry Action

-- | The date and time that the event action was created, in ISO 8601
--   format.
eventActionEntry_createdAt :: Lens' EventActionEntry UTCTime

-- | What occurs to start an action.
eventActionEntry_event :: Lens' EventActionEntry Event

-- | The unique identifier for the event action.
eventActionEntry_id :: Lens' EventActionEntry Text

-- | The Amazon Resource Name (ARN) for the event action.
eventActionEntry_arn :: Lens' EventActionEntry Text

-- | The date and time that the event action was last updated, in ISO 8601
--   format.
eventActionEntry_updatedAt :: Lens' EventActionEntry UTCTime
instance GHC.Generics.Generic Amazonka.DataExchange.Types.EventActionEntry.EventActionEntry
instance GHC.Show.Show Amazonka.DataExchange.Types.EventActionEntry.EventActionEntry
instance GHC.Read.Read Amazonka.DataExchange.Types.EventActionEntry.EventActionEntry
instance GHC.Classes.Eq Amazonka.DataExchange.Types.EventActionEntry.EventActionEntry
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataExchange.Types.EventActionEntry.EventActionEntry
instance Data.Hashable.Class.Hashable Amazonka.DataExchange.Types.EventActionEntry.EventActionEntry
instance Control.DeepSeq.NFData Amazonka.DataExchange.Types.EventActionEntry.EventActionEntry


module Amazonka.DataExchange.Types.State
newtype State
State' :: Text -> State
[fromState] :: State -> Text
pattern State_CANCELLED :: State
pattern State_COMPLETED :: State
pattern State_ERROR :: State
pattern State_IN_PROGRESS :: State
pattern State_TIMED_OUT :: State
pattern State_WAITING :: State
instance Amazonka.Data.XML.ToXML Amazonka.DataExchange.Types.State.State
instance Amazonka.Data.XML.FromXML Amazonka.DataExchange.Types.State.State
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.DataExchange.Types.State.State
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataExchange.Types.State.State
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.DataExchange.Types.State.State
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataExchange.Types.State.State
instance Amazonka.Data.Query.ToQuery Amazonka.DataExchange.Types.State.State
instance Amazonka.Data.Headers.ToHeader Amazonka.DataExchange.Types.State.State
instance Amazonka.Data.Log.ToLog Amazonka.DataExchange.Types.State.State
instance Amazonka.Data.ByteString.ToByteString Amazonka.DataExchange.Types.State.State
instance Amazonka.Data.Text.ToText Amazonka.DataExchange.Types.State.State
instance Amazonka.Data.Text.FromText Amazonka.DataExchange.Types.State.State
instance Control.DeepSeq.NFData Amazonka.DataExchange.Types.State.State
instance Data.Hashable.Class.Hashable Amazonka.DataExchange.Types.State.State
instance GHC.Generics.Generic Amazonka.DataExchange.Types.State.State
instance GHC.Classes.Ord Amazonka.DataExchange.Types.State.State
instance GHC.Classes.Eq Amazonka.DataExchange.Types.State.State
instance GHC.Read.Read Amazonka.DataExchange.Types.State.State
instance GHC.Show.Show Amazonka.DataExchange.Types.State.State


module Amazonka.DataExchange.Types.Type
newtype Type
Type' :: Text -> Type
[fromType] :: Type -> Text
pattern Type_EXPORT_ASSETS_TO_S3 :: Type
pattern Type_EXPORT_ASSET_TO_SIGNED_URL :: Type
pattern Type_EXPORT_REVISIONS_TO_S3 :: Type
pattern Type_IMPORT_ASSETS_FROM_REDSHIFT_DATA_SHARES :: Type
pattern Type_IMPORT_ASSETS_FROM_S3 :: Type
pattern Type_IMPORT_ASSET_FROM_SIGNED_URL :: Type
instance Amazonka.Data.XML.ToXML Amazonka.DataExchange.Types.Type.Type
instance Amazonka.Data.XML.FromXML Amazonka.DataExchange.Types.Type.Type
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.DataExchange.Types.Type.Type
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataExchange.Types.Type.Type
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.DataExchange.Types.Type.Type
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataExchange.Types.Type.Type
instance Amazonka.Data.Query.ToQuery Amazonka.DataExchange.Types.Type.Type
instance Amazonka.Data.Headers.ToHeader Amazonka.DataExchange.Types.Type.Type
instance Amazonka.Data.Log.ToLog Amazonka.DataExchange.Types.Type.Type
instance Amazonka.Data.ByteString.ToByteString Amazonka.DataExchange.Types.Type.Type
instance Amazonka.Data.Text.ToText Amazonka.DataExchange.Types.Type.Type
instance Amazonka.Data.Text.FromText Amazonka.DataExchange.Types.Type.Type
instance Control.DeepSeq.NFData Amazonka.DataExchange.Types.Type.Type
instance Data.Hashable.Class.Hashable Amazonka.DataExchange.Types.Type.Type
instance GHC.Generics.Generic Amazonka.DataExchange.Types.Type.Type
instance GHC.Classes.Ord Amazonka.DataExchange.Types.Type.Type
instance GHC.Classes.Eq Amazonka.DataExchange.Types.Type.Type
instance GHC.Read.Read Amazonka.DataExchange.Types.Type.Type
instance GHC.Show.Show Amazonka.DataExchange.Types.Type.Type


module Amazonka.DataExchange.Types.JobEntry

-- | AWS Data Exchange Jobs are asynchronous import or export operations
--   used to create or copy assets. A data set owner can both import and
--   export as they see fit. Someone with an entitlement to a data set can
--   only export. Jobs are deleted 90 days after they are created.
--   
--   <i>See:</i> <a>newJobEntry</a> smart constructor.
data JobEntry
JobEntry' :: Maybe [JobError] -> Type -> ResponseDetails -> State -> POSIX -> Text -> Text -> POSIX -> JobEntry

-- | Errors for jobs.
[$sel:errors:JobEntry'] :: JobEntry -> Maybe [JobError]

-- | The job type.
[$sel:type':JobEntry'] :: JobEntry -> Type

-- | Details of the operation to be performed by the job, such as export
--   destination details or import source details.
[$sel:details:JobEntry'] :: JobEntry -> ResponseDetails

-- | The state of the job.
[$sel:state:JobEntry'] :: JobEntry -> State

-- | The date and time that the job was created, in ISO 8601 format.
[$sel:createdAt:JobEntry'] :: JobEntry -> POSIX

-- | The unique identifier for the job.
[$sel:id:JobEntry'] :: JobEntry -> Text

-- | The ARN for the job.
[$sel:arn:JobEntry'] :: JobEntry -> Text

-- | The date and time that the job was last updated, in ISO 8601 format.
[$sel:updatedAt:JobEntry'] :: JobEntry -> POSIX

-- | Create a value of <a>JobEntry</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errors:JobEntry'</a>, <a>jobEntry_errors</a> - Errors for
--   jobs.
--   
--   <a>$sel:type':JobEntry'</a>, <a>jobEntry_type</a> - The job type.
--   
--   <a>$sel:details:JobEntry'</a>, <a>jobEntry_details</a> - Details of
--   the operation to be performed by the job, such as export destination
--   details or import source details.
--   
--   <a>$sel:state:JobEntry'</a>, <a>jobEntry_state</a> - The state of the
--   job.
--   
--   <a>$sel:createdAt:JobEntry'</a>, <a>jobEntry_createdAt</a> - The date
--   and time that the job was created, in ISO 8601 format.
--   
--   <a>$sel:id:JobEntry'</a>, <a>jobEntry_id</a> - The unique identifier
--   for the job.
--   
--   <a>$sel:arn:JobEntry'</a>, <a>jobEntry_arn</a> - The ARN for the job.
--   
--   <a>$sel:updatedAt:JobEntry'</a>, <a>jobEntry_updatedAt</a> - The date
--   and time that the job was last updated, in ISO 8601 format.
newJobEntry :: Type -> ResponseDetails -> State -> UTCTime -> Text -> Text -> UTCTime -> JobEntry

-- | Errors for jobs.
jobEntry_errors :: Lens' JobEntry (Maybe [JobError])

-- | The job type.
jobEntry_type :: Lens' JobEntry Type

-- | Details of the operation to be performed by the job, such as export
--   destination details or import source details.
jobEntry_details :: Lens' JobEntry ResponseDetails

-- | The state of the job.
jobEntry_state :: Lens' JobEntry State

-- | The date and time that the job was created, in ISO 8601 format.
jobEntry_createdAt :: Lens' JobEntry UTCTime

-- | The unique identifier for the job.
jobEntry_id :: Lens' JobEntry Text

-- | The ARN for the job.
jobEntry_arn :: Lens' JobEntry Text

-- | The date and time that the job was last updated, in ISO 8601 format.
jobEntry_updatedAt :: Lens' JobEntry UTCTime
instance GHC.Generics.Generic Amazonka.DataExchange.Types.JobEntry.JobEntry
instance GHC.Show.Show Amazonka.DataExchange.Types.JobEntry.JobEntry
instance GHC.Read.Read Amazonka.DataExchange.Types.JobEntry.JobEntry
instance GHC.Classes.Eq Amazonka.DataExchange.Types.JobEntry.JobEntry
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataExchange.Types.JobEntry.JobEntry
instance Data.Hashable.Class.Hashable Amazonka.DataExchange.Types.JobEntry.JobEntry
instance Control.DeepSeq.NFData Amazonka.DataExchange.Types.JobEntry.JobEntry


module Amazonka.DataExchange.Types

-- | API version <tt>2017-07-25</tt> of the Amazon Data Exchange SDK
--   configuration.
defaultService :: Service

-- | The request was invalid.
_ValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Access to the resource is denied.
_AccessDeniedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request couldn't be completed because it conflicted with the
--   current state of the resource.
_ConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request has exceeded the quotas imposed by the service.
_ServiceLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The limit on the number of requests per second was exceeded.
_ThrottlingException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An exception occurred with the service.
_InternalServerException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource couldn't be found.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The type of asset that is added to a data set.
newtype AssetType
AssetType' :: Text -> AssetType
[fromAssetType] :: AssetType -> Text
pattern AssetType_REDSHIFT_DATA_SHARE :: AssetType
pattern AssetType_S3_SNAPSHOT :: AssetType
newtype Code
Code' :: Text -> Code
[fromCode] :: Code -> Text
pattern Code_ACCESS_DENIED_EXCEPTION :: Code
pattern Code_INTERNAL_SERVER_EXCEPTION :: Code
pattern Code_MALWARE_DETECTED :: Code
pattern Code_MALWARE_SCAN_ENCRYPTED_FILE :: Code
pattern Code_RESOURCE_NOT_FOUND_EXCEPTION :: Code
pattern Code_SERVICE_QUOTA_EXCEEDED_EXCEPTION :: Code
pattern Code_VALIDATION_EXCEPTION :: Code

-- | The name of the limit that was reached.
newtype JobErrorLimitName
JobErrorLimitName' :: Text -> JobErrorLimitName
[fromJobErrorLimitName] :: JobErrorLimitName -> Text
pattern JobErrorLimitName_Amazon_Redshift_datashare_assets_per_revision :: JobErrorLimitName
pattern JobErrorLimitName_Asset_size_in_GB :: JobErrorLimitName
pattern JobErrorLimitName_Assets_per_revision :: JobErrorLimitName

-- | The types of resource which the job error can apply to.
newtype JobErrorResourceTypes
JobErrorResourceTypes' :: Text -> JobErrorResourceTypes
[fromJobErrorResourceTypes] :: JobErrorResourceTypes -> Text
pattern JobErrorResourceTypes_ASSET :: JobErrorResourceTypes
pattern JobErrorResourceTypes_DATA_SET :: JobErrorResourceTypes
pattern JobErrorResourceTypes_REVISION :: JobErrorResourceTypes

-- | A property that defines the data set as OWNED by the account (for
--   providers) or ENTITLED to the account (for subscribers). When an owned
--   data set is published in a product, AWS Data Exchange creates a copy
--   of the data set. Subscribers can access that copy of the data set as
--   an entitled data set.
newtype Origin
Origin' :: Text -> Origin
[fromOrigin] :: Origin -> Text
pattern Origin_ENTITLED :: Origin
pattern Origin_OWNED :: Origin

-- | The types of encryption supported in export jobs to Amazon S3.
newtype ServerSideEncryptionTypes
ServerSideEncryptionTypes' :: Text -> ServerSideEncryptionTypes
[fromServerSideEncryptionTypes] :: ServerSideEncryptionTypes -> Text
pattern ServerSideEncryptionTypes_AES256 :: ServerSideEncryptionTypes
pattern ServerSideEncryptionTypes_Aws_kms :: ServerSideEncryptionTypes
newtype State
State' :: Text -> State
[fromState] :: State -> Text
pattern State_CANCELLED :: State
pattern State_COMPLETED :: State
pattern State_ERROR :: State
pattern State_IN_PROGRESS :: State
pattern State_TIMED_OUT :: State
pattern State_WAITING :: State
newtype Type
Type' :: Text -> Type
[fromType] :: Type -> Text
pattern Type_EXPORT_ASSETS_TO_S3 :: Type
pattern Type_EXPORT_ASSET_TO_SIGNED_URL :: Type
pattern Type_EXPORT_REVISIONS_TO_S3 :: Type
pattern Type_IMPORT_ASSETS_FROM_REDSHIFT_DATA_SHARES :: Type
pattern Type_IMPORT_ASSETS_FROM_S3 :: Type
pattern Type_IMPORT_ASSET_FROM_SIGNED_URL :: Type

-- | What occurs after a certain event.
--   
--   <i>See:</i> <a>newAction</a> smart constructor.
data Action
Action' :: Maybe AutoExportRevisionToS3RequestDetails -> Action

-- | Details for the export revision to Amazon S3 action.
[$sel:exportRevisionToS3:Action'] :: Action -> Maybe AutoExportRevisionToS3RequestDetails

-- | Create a value of <a>Action</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:exportRevisionToS3:Action'</a>,
--   <a>action_exportRevisionToS3</a> - Details for the export revision to
--   Amazon S3 action.
newAction :: Action

-- | Details for the export revision to Amazon S3 action.
action_exportRevisionToS3 :: Lens' Action (Maybe AutoExportRevisionToS3RequestDetails)

-- | The destination for the asset.
--   
--   <i>See:</i> <a>newAssetDestinationEntry</a> smart constructor.
data AssetDestinationEntry
AssetDestinationEntry' :: Maybe Text -> Text -> Text -> AssetDestinationEntry

-- | The name of the object in Amazon S3 for the asset.
[$sel:key:AssetDestinationEntry'] :: AssetDestinationEntry -> Maybe Text

-- | The S3 bucket that is the destination for the asset.
[$sel:bucket:AssetDestinationEntry'] :: AssetDestinationEntry -> Text

-- | The unique identifier for the asset.
[$sel:assetId:AssetDestinationEntry'] :: AssetDestinationEntry -> Text

-- | Create a value of <a>AssetDestinationEntry</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:AssetDestinationEntry'</a>,
--   <a>assetDestinationEntry_key</a> - The name of the object in Amazon S3
--   for the asset.
--   
--   <a>$sel:bucket:AssetDestinationEntry'</a>,
--   <a>assetDestinationEntry_bucket</a> - The S3 bucket that is the
--   destination for the asset.
--   
--   <a>$sel:assetId:AssetDestinationEntry'</a>,
--   <a>assetDestinationEntry_assetId</a> - The unique identifier for the
--   asset.
newAssetDestinationEntry :: Text -> Text -> AssetDestinationEntry

-- | The name of the object in Amazon S3 for the asset.
assetDestinationEntry_key :: Lens' AssetDestinationEntry (Maybe Text)

-- | The S3 bucket that is the destination for the asset.
assetDestinationEntry_bucket :: Lens' AssetDestinationEntry Text

-- | The unique identifier for the asset.
assetDestinationEntry_assetId :: Lens' AssetDestinationEntry Text

-- | Information about the asset.
--   
--   <i>See:</i> <a>newAssetDetails</a> smart constructor.
data AssetDetails
AssetDetails' :: Maybe S3SnapshotAsset -> Maybe RedshiftDataShareAsset -> AssetDetails

-- | The S3 object that is the asset.
[$sel:s3SnapshotAsset:AssetDetails'] :: AssetDetails -> Maybe S3SnapshotAsset

-- | The Amazon Redshift datashare that is the asset.
[$sel:redshiftDataShareAsset:AssetDetails'] :: AssetDetails -> Maybe RedshiftDataShareAsset

-- | Create a value of <a>AssetDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3SnapshotAsset:AssetDetails'</a>,
--   <a>assetDetails_s3SnapshotAsset</a> - The S3 object that is the asset.
--   
--   <a>$sel:redshiftDataShareAsset:AssetDetails'</a>,
--   <a>assetDetails_redshiftDataShareAsset</a> - The Amazon Redshift
--   datashare that is the asset.
newAssetDetails :: AssetDetails

-- | The S3 object that is the asset.
assetDetails_s3SnapshotAsset :: Lens' AssetDetails (Maybe S3SnapshotAsset)

-- | The Amazon Redshift datashare that is the asset.
assetDetails_redshiftDataShareAsset :: Lens' AssetDetails (Maybe RedshiftDataShareAsset)

-- | An asset in AWS Data Exchange is a piece of data. The asset can be a
--   structured data file, an image file, or some other data file that can
--   be stored as an S3 object, or an Amazon Redshift datashare (Preview).
--   When you create an import job for your files, you create an asset in
--   AWS Data Exchange for each of those files.
--   
--   <i>See:</i> <a>newAssetEntry</a> smart constructor.
data AssetEntry
AssetEntry' :: Maybe Text -> AssetType -> POSIX -> Text -> Text -> Text -> AssetDetails -> POSIX -> Text -> Text -> AssetEntry

-- | The asset ID of the owned asset corresponding to the entitled asset
--   being viewed. This parameter is returned when an asset owner is
--   viewing the entitled copy of its owned asset.
[$sel:sourceId:AssetEntry'] :: AssetEntry -> Maybe Text

-- | The type of asset that is added to a data set.
[$sel:assetType:AssetEntry'] :: AssetEntry -> AssetType

-- | The date and time that the asset was created, in ISO 8601 format.
[$sel:createdAt:AssetEntry'] :: AssetEntry -> POSIX

-- | The unique identifier for the data set associated with this asset.
[$sel:dataSetId:AssetEntry'] :: AssetEntry -> Text

-- | The unique identifier for the asset.
[$sel:id:AssetEntry'] :: AssetEntry -> Text

-- | The ARN for the asset.
[$sel:arn:AssetEntry'] :: AssetEntry -> Text

-- | Information about the asset.
[$sel:assetDetails:AssetEntry'] :: AssetEntry -> AssetDetails

-- | The date and time that the asset was last updated, in ISO 8601 format.
[$sel:updatedAt:AssetEntry'] :: AssetEntry -> POSIX

-- | The unique identifier for the revision associated with this asset.
[$sel:revisionId:AssetEntry'] :: AssetEntry -> Text

-- | The name of the asset. When importing from Amazon S3, the S3 object
--   key is used as the asset name. When exporting to Amazon S3, the asset
--   name is used as default target S3 object key.
[$sel:name:AssetEntry'] :: AssetEntry -> Text

-- | Create a value of <a>AssetEntry</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceId:AssetEntry'</a>, <a>assetEntry_sourceId</a> - The
--   asset ID of the owned asset corresponding to the entitled asset being
--   viewed. This parameter is returned when an asset owner is viewing the
--   entitled copy of its owned asset.
--   
--   <a>$sel:assetType:AssetEntry'</a>, <a>assetEntry_assetType</a> - The
--   type of asset that is added to a data set.
--   
--   <a>$sel:createdAt:AssetEntry'</a>, <a>assetEntry_createdAt</a> - The
--   date and time that the asset was created, in ISO 8601 format.
--   
--   <a>$sel:dataSetId:AssetEntry'</a>, <a>assetEntry_dataSetId</a> - The
--   unique identifier for the data set associated with this asset.
--   
--   <a>$sel:id:AssetEntry'</a>, <a>assetEntry_id</a> - The unique
--   identifier for the asset.
--   
--   <a>$sel:arn:AssetEntry'</a>, <a>assetEntry_arn</a> - The ARN for the
--   asset.
--   
--   <a>$sel:assetDetails:AssetEntry'</a>, <a>assetEntry_assetDetails</a> -
--   Information about the asset.
--   
--   <a>$sel:updatedAt:AssetEntry'</a>, <a>assetEntry_updatedAt</a> - The
--   date and time that the asset was last updated, in ISO 8601 format.
--   
--   <a>$sel:revisionId:AssetEntry'</a>, <a>assetEntry_revisionId</a> - The
--   unique identifier for the revision associated with this asset.
--   
--   <a>$sel:name:AssetEntry'</a>, <a>assetEntry_name</a> - The name of the
--   asset. When importing from Amazon S3, the S3 object key is used as the
--   asset name. When exporting to Amazon S3, the asset name is used as
--   default target S3 object key.
newAssetEntry :: AssetType -> UTCTime -> Text -> Text -> Text -> AssetDetails -> UTCTime -> Text -> Text -> AssetEntry

-- | The asset ID of the owned asset corresponding to the entitled asset
--   being viewed. This parameter is returned when an asset owner is
--   viewing the entitled copy of its owned asset.
assetEntry_sourceId :: Lens' AssetEntry (Maybe Text)

-- | The type of asset that is added to a data set.
assetEntry_assetType :: Lens' AssetEntry AssetType

-- | The date and time that the asset was created, in ISO 8601 format.
assetEntry_createdAt :: Lens' AssetEntry UTCTime

-- | The unique identifier for the data set associated with this asset.
assetEntry_dataSetId :: Lens' AssetEntry Text

-- | The unique identifier for the asset.
assetEntry_id :: Lens' AssetEntry Text

-- | The ARN for the asset.
assetEntry_arn :: Lens' AssetEntry Text

-- | Information about the asset.
assetEntry_assetDetails :: Lens' AssetEntry AssetDetails

-- | The date and time that the asset was last updated, in ISO 8601 format.
assetEntry_updatedAt :: Lens' AssetEntry UTCTime

-- | The unique identifier for the revision associated with this asset.
assetEntry_revisionId :: Lens' AssetEntry Text

-- | The name of the asset. When importing from Amazon S3, the S3 object
--   key is used as the asset name. When exporting to Amazon S3, the asset
--   name is used as default target S3 object key.
assetEntry_name :: Lens' AssetEntry Text

-- | The source of the assets.
--   
--   <i>See:</i> <a>newAssetSourceEntry</a> smart constructor.
data AssetSourceEntry
AssetSourceEntry' :: Text -> Text -> AssetSourceEntry

-- | The S3 bucket that's part of the source of the asset.
[$sel:bucket:AssetSourceEntry'] :: AssetSourceEntry -> Text

-- | The name of the object in Amazon S3 for the asset.
[$sel:key:AssetSourceEntry'] :: AssetSourceEntry -> Text

-- | Create a value of <a>AssetSourceEntry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bucket:AssetSourceEntry'</a>, <a>assetSourceEntry_bucket</a> -
--   The S3 bucket that's part of the source of the asset.
--   
--   <a>$sel:key:AssetSourceEntry'</a>, <a>assetSourceEntry_key</a> - The
--   name of the object in Amazon S3 for the asset.
newAssetSourceEntry :: Text -> Text -> AssetSourceEntry

-- | The S3 bucket that's part of the source of the asset.
assetSourceEntry_bucket :: Lens' AssetSourceEntry Text

-- | The name of the object in Amazon S3 for the asset.
assetSourceEntry_key :: Lens' AssetSourceEntry Text

-- | A revision destination is the Amazon S3 bucket folder destination to
--   where the export will be sent.
--   
--   <i>See:</i> <a>newAutoExportRevisionDestinationEntry</a> smart
--   constructor.
data AutoExportRevisionDestinationEntry
AutoExportRevisionDestinationEntry' :: Maybe Text -> Text -> AutoExportRevisionDestinationEntry

-- | A string representing the pattern for generated names of the
--   individual assets in the revision. For more information about key
--   patterns, see <a>Key patterns when exporting revisions</a>.
[$sel:keyPattern:AutoExportRevisionDestinationEntry'] :: AutoExportRevisionDestinationEntry -> Maybe Text

-- | The S3 bucket that is the destination for the event action.
[$sel:bucket:AutoExportRevisionDestinationEntry'] :: AutoExportRevisionDestinationEntry -> Text

-- | Create a value of <a>AutoExportRevisionDestinationEntry</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyPattern:AutoExportRevisionDestinationEntry'</a>,
--   <a>autoExportRevisionDestinationEntry_keyPattern</a> - A string
--   representing the pattern for generated names of the individual assets
--   in the revision. For more information about key patterns, see <a>Key
--   patterns when exporting revisions</a>.
--   
--   <a>$sel:bucket:AutoExportRevisionDestinationEntry'</a>,
--   <a>autoExportRevisionDestinationEntry_bucket</a> - The S3 bucket that
--   is the destination for the event action.
newAutoExportRevisionDestinationEntry :: Text -> AutoExportRevisionDestinationEntry

-- | A string representing the pattern for generated names of the
--   individual assets in the revision. For more information about key
--   patterns, see <a>Key patterns when exporting revisions</a>.
autoExportRevisionDestinationEntry_keyPattern :: Lens' AutoExportRevisionDestinationEntry (Maybe Text)

-- | The S3 bucket that is the destination for the event action.
autoExportRevisionDestinationEntry_bucket :: Lens' AutoExportRevisionDestinationEntry Text

-- | Details of the operation to be performed by the job.
--   
--   <i>See:</i> <a>newAutoExportRevisionToS3RequestDetails</a> smart
--   constructor.
data AutoExportRevisionToS3RequestDetails
AutoExportRevisionToS3RequestDetails' :: Maybe ExportServerSideEncryption -> AutoExportRevisionDestinationEntry -> AutoExportRevisionToS3RequestDetails

-- | Encryption configuration for the auto export job.
[$sel:encryption:AutoExportRevisionToS3RequestDetails'] :: AutoExportRevisionToS3RequestDetails -> Maybe ExportServerSideEncryption

-- | A revision destination is the Amazon S3 bucket folder destination to
--   where the export will be sent.
[$sel:revisionDestination:AutoExportRevisionToS3RequestDetails'] :: AutoExportRevisionToS3RequestDetails -> AutoExportRevisionDestinationEntry

-- | Create a value of <a>AutoExportRevisionToS3RequestDetails</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:encryption:AutoExportRevisionToS3RequestDetails'</a>,
--   <a>autoExportRevisionToS3RequestDetails_encryption</a> - Encryption
--   configuration for the auto export job.
--   
--   <a>$sel:revisionDestination:AutoExportRevisionToS3RequestDetails'</a>,
--   <a>autoExportRevisionToS3RequestDetails_revisionDestination</a> - A
--   revision destination is the Amazon S3 bucket folder destination to
--   where the export will be sent.
newAutoExportRevisionToS3RequestDetails :: AutoExportRevisionDestinationEntry -> AutoExportRevisionToS3RequestDetails

-- | Encryption configuration for the auto export job.
autoExportRevisionToS3RequestDetails_encryption :: Lens' AutoExportRevisionToS3RequestDetails (Maybe ExportServerSideEncryption)

-- | A revision destination is the Amazon S3 bucket folder destination to
--   where the export will be sent.
autoExportRevisionToS3RequestDetails_revisionDestination :: Lens' AutoExportRevisionToS3RequestDetails AutoExportRevisionDestinationEntry

-- | A data set is an AWS resource with one or more revisions.
--   
--   <i>See:</i> <a>newDataSetEntry</a> smart constructor.
data DataSetEntry
DataSetEntry' :: Maybe Text -> Maybe OriginDetails -> Origin -> AssetType -> Text -> POSIX -> Text -> Text -> POSIX -> Text -> DataSetEntry

-- | The data set ID of the owned data set corresponding to the entitled
--   data set being viewed. This parameter is returned when a data set
--   owner is viewing the entitled copy of its owned data set.
[$sel:sourceId:DataSetEntry'] :: DataSetEntry -> Maybe Text

-- | If the origin of this data set is ENTITLED, includes the details for
--   the product on AWS Marketplace.
[$sel:originDetails:DataSetEntry'] :: DataSetEntry -> Maybe OriginDetails

-- | A property that defines the data set as OWNED by the account (for
--   providers) or ENTITLED to the account (for subscribers).
[$sel:origin:DataSetEntry'] :: DataSetEntry -> Origin

-- | The type of asset that is added to a data set.
[$sel:assetType:DataSetEntry'] :: DataSetEntry -> AssetType

-- | The description for the data set.
[$sel:description:DataSetEntry'] :: DataSetEntry -> Text

-- | The date and time that the data set was created, in ISO 8601 format.
[$sel:createdAt:DataSetEntry'] :: DataSetEntry -> POSIX

-- | The unique identifier for the data set.
[$sel:id:DataSetEntry'] :: DataSetEntry -> Text

-- | The ARN for the data set.
[$sel:arn:DataSetEntry'] :: DataSetEntry -> Text

-- | The date and time that the data set was last updated, in ISO 8601
--   format.
[$sel:updatedAt:DataSetEntry'] :: DataSetEntry -> POSIX

-- | The name of the data set.
[$sel:name:DataSetEntry'] :: DataSetEntry -> Text

-- | Create a value of <a>DataSetEntry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceId:DataSetEntry'</a>, <a>dataSetEntry_sourceId</a> - The
--   data set ID of the owned data set corresponding to the entitled data
--   set being viewed. This parameter is returned when a data set owner is
--   viewing the entitled copy of its owned data set.
--   
--   <a>$sel:originDetails:DataSetEntry'</a>,
--   <a>dataSetEntry_originDetails</a> - If the origin of this data set is
--   ENTITLED, includes the details for the product on AWS Marketplace.
--   
--   <a>$sel:origin:DataSetEntry'</a>, <a>dataSetEntry_origin</a> - A
--   property that defines the data set as OWNED by the account (for
--   providers) or ENTITLED to the account (for subscribers).
--   
--   <a>$sel:assetType:DataSetEntry'</a>, <a>dataSetEntry_assetType</a> -
--   The type of asset that is added to a data set.
--   
--   <a>$sel:description:DataSetEntry'</a>, <a>dataSetEntry_description</a>
--   - The description for the data set.
--   
--   <a>$sel:createdAt:DataSetEntry'</a>, <a>dataSetEntry_createdAt</a> -
--   The date and time that the data set was created, in ISO 8601 format.
--   
--   <a>$sel:id:DataSetEntry'</a>, <a>dataSetEntry_id</a> - The unique
--   identifier for the data set.
--   
--   <a>$sel:arn:DataSetEntry'</a>, <a>dataSetEntry_arn</a> - The ARN for
--   the data set.
--   
--   <a>$sel:updatedAt:DataSetEntry'</a>, <a>dataSetEntry_updatedAt</a> -
--   The date and time that the data set was last updated, in ISO 8601
--   format.
--   
--   <a>$sel:name:DataSetEntry'</a>, <a>dataSetEntry_name</a> - The name of
--   the data set.
newDataSetEntry :: Origin -> AssetType -> Text -> UTCTime -> Text -> Text -> UTCTime -> Text -> DataSetEntry

-- | The data set ID of the owned data set corresponding to the entitled
--   data set being viewed. This parameter is returned when a data set
--   owner is viewing the entitled copy of its owned data set.
dataSetEntry_sourceId :: Lens' DataSetEntry (Maybe Text)

-- | If the origin of this data set is ENTITLED, includes the details for
--   the product on AWS Marketplace.
dataSetEntry_originDetails :: Lens' DataSetEntry (Maybe OriginDetails)

-- | A property that defines the data set as OWNED by the account (for
--   providers) or ENTITLED to the account (for subscribers).
dataSetEntry_origin :: Lens' DataSetEntry Origin

-- | The type of asset that is added to a data set.
dataSetEntry_assetType :: Lens' DataSetEntry AssetType

-- | The description for the data set.
dataSetEntry_description :: Lens' DataSetEntry Text

-- | The date and time that the data set was created, in ISO 8601 format.
dataSetEntry_createdAt :: Lens' DataSetEntry UTCTime

-- | The unique identifier for the data set.
dataSetEntry_id :: Lens' DataSetEntry Text

-- | The ARN for the data set.
dataSetEntry_arn :: Lens' DataSetEntry Text

-- | The date and time that the data set was last updated, in ISO 8601
--   format.
dataSetEntry_updatedAt :: Lens' DataSetEntry UTCTime

-- | The name of the data set.
dataSetEntry_name :: Lens' DataSetEntry Text

-- | Information about the job error.
--   
--   <i>See:</i> <a>newDetails</a> smart constructor.
data Details
Details' :: Maybe ImportAssetFromSignedUrlJobErrorDetails -> Maybe [AssetSourceEntry] -> Details

-- | Information about the job error.
[$sel:importAssetFromSignedUrlJobErrorDetails:Details'] :: Details -> Maybe ImportAssetFromSignedUrlJobErrorDetails

-- | Information about the job error.
[$sel:importAssetsFromS3JobErrorDetails:Details'] :: Details -> Maybe [AssetSourceEntry]

-- | Create a value of <a>Details</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:importAssetFromSignedUrlJobErrorDetails:Details'</a>,
--   <a>details_importAssetFromSignedUrlJobErrorDetails</a> - Information
--   about the job error.
--   
--   <a>$sel:importAssetsFromS3JobErrorDetails:Details'</a>,
--   <a>details_importAssetsFromS3JobErrorDetails</a> - Information about
--   the job error.
newDetails :: Details

-- | Information about the job error.
details_importAssetFromSignedUrlJobErrorDetails :: Lens' Details (Maybe ImportAssetFromSignedUrlJobErrorDetails)

-- | Information about the job error.
details_importAssetsFromS3JobErrorDetails :: Lens' Details (Maybe [AssetSourceEntry])

-- | What occurs to start an action.
--   
--   <i>See:</i> <a>newEvent</a> smart constructor.
data Event
Event' :: Maybe RevisionPublished -> Event

-- | What occurs to start the revision publish action.
[$sel:revisionPublished:Event'] :: Event -> Maybe RevisionPublished

-- | Create a value of <a>Event</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:revisionPublished:Event'</a>, <a>event_revisionPublished</a> -
--   What occurs to start the revision publish action.
newEvent :: Event

-- | What occurs to start the revision publish action.
event_revisionPublished :: Lens' Event (Maybe RevisionPublished)

-- | An event action is an object that defines the relationship between a
--   specific event and an automated action that will be taken on behalf of
--   the customer.
--   
--   <i>See:</i> <a>newEventActionEntry</a> smart constructor.
data EventActionEntry
EventActionEntry' :: Action -> POSIX -> Event -> Text -> Text -> POSIX -> EventActionEntry

-- | What occurs after a certain event.
[$sel:action:EventActionEntry'] :: EventActionEntry -> Action

-- | The date and time that the event action was created, in ISO 8601
--   format.
[$sel:createdAt:EventActionEntry'] :: EventActionEntry -> POSIX

-- | What occurs to start an action.
[$sel:event:EventActionEntry'] :: EventActionEntry -> Event

-- | The unique identifier for the event action.
[$sel:id:EventActionEntry'] :: EventActionEntry -> Text

-- | The Amazon Resource Name (ARN) for the event action.
[$sel:arn:EventActionEntry'] :: EventActionEntry -> Text

-- | The date and time that the event action was last updated, in ISO 8601
--   format.
[$sel:updatedAt:EventActionEntry'] :: EventActionEntry -> POSIX

-- | Create a value of <a>EventActionEntry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:action:EventActionEntry'</a>, <a>eventActionEntry_action</a> -
--   What occurs after a certain event.
--   
--   <a>$sel:createdAt:EventActionEntry'</a>,
--   <a>eventActionEntry_createdAt</a> - The date and time that the event
--   action was created, in ISO 8601 format.
--   
--   <a>$sel:event:EventActionEntry'</a>, <a>eventActionEntry_event</a> -
--   What occurs to start an action.
--   
--   <a>$sel:id:EventActionEntry'</a>, <a>eventActionEntry_id</a> - The
--   unique identifier for the event action.
--   
--   <a>$sel:arn:EventActionEntry'</a>, <a>eventActionEntry_arn</a> - The
--   Amazon Resource Name (ARN) for the event action.
--   
--   <a>$sel:updatedAt:EventActionEntry'</a>,
--   <a>eventActionEntry_updatedAt</a> - The date and time that the event
--   action was last updated, in ISO 8601 format.
newEventActionEntry :: Action -> UTCTime -> Event -> Text -> Text -> UTCTime -> EventActionEntry

-- | What occurs after a certain event.
eventActionEntry_action :: Lens' EventActionEntry Action

-- | The date and time that the event action was created, in ISO 8601
--   format.
eventActionEntry_createdAt :: Lens' EventActionEntry UTCTime

-- | What occurs to start an action.
eventActionEntry_event :: Lens' EventActionEntry Event

-- | The unique identifier for the event action.
eventActionEntry_id :: Lens' EventActionEntry Text

-- | The Amazon Resource Name (ARN) for the event action.
eventActionEntry_arn :: Lens' EventActionEntry Text

-- | The date and time that the event action was last updated, in ISO 8601
--   format.
eventActionEntry_updatedAt :: Lens' EventActionEntry UTCTime

-- | Details of the operation to be performed by the job.
--   
--   <i>See:</i> <a>newExportAssetToSignedUrlRequestDetails</a> smart
--   constructor.
data ExportAssetToSignedUrlRequestDetails
ExportAssetToSignedUrlRequestDetails' :: Text -> Text -> Text -> ExportAssetToSignedUrlRequestDetails

-- | The unique identifier for the data set associated with this export
--   job.
[$sel:dataSetId:ExportAssetToSignedUrlRequestDetails'] :: ExportAssetToSignedUrlRequestDetails -> Text

-- | The unique identifier for the asset that is exported to a signed URL.
[$sel:assetId:ExportAssetToSignedUrlRequestDetails'] :: ExportAssetToSignedUrlRequestDetails -> Text

-- | The unique identifier for the revision associated with this export
--   request.
[$sel:revisionId:ExportAssetToSignedUrlRequestDetails'] :: ExportAssetToSignedUrlRequestDetails -> Text

-- | Create a value of <a>ExportAssetToSignedUrlRequestDetails</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataSetId:ExportAssetToSignedUrlRequestDetails'</a>,
--   <a>exportAssetToSignedUrlRequestDetails_dataSetId</a> - The unique
--   identifier for the data set associated with this export job.
--   
--   <a>$sel:assetId:ExportAssetToSignedUrlRequestDetails'</a>,
--   <a>exportAssetToSignedUrlRequestDetails_assetId</a> - The unique
--   identifier for the asset that is exported to a signed URL.
--   
--   <a>$sel:revisionId:ExportAssetToSignedUrlRequestDetails'</a>,
--   <a>exportAssetToSignedUrlRequestDetails_revisionId</a> - The unique
--   identifier for the revision associated with this export request.
newExportAssetToSignedUrlRequestDetails :: Text -> Text -> Text -> ExportAssetToSignedUrlRequestDetails

-- | The unique identifier for the data set associated with this export
--   job.
exportAssetToSignedUrlRequestDetails_dataSetId :: Lens' ExportAssetToSignedUrlRequestDetails Text

-- | The unique identifier for the asset that is exported to a signed URL.
exportAssetToSignedUrlRequestDetails_assetId :: Lens' ExportAssetToSignedUrlRequestDetails Text

-- | The unique identifier for the revision associated with this export
--   request.
exportAssetToSignedUrlRequestDetails_revisionId :: Lens' ExportAssetToSignedUrlRequestDetails Text

-- | The details of the export to signed URL response.
--   
--   <i>See:</i> <a>newExportAssetToSignedUrlResponseDetails</a> smart
--   constructor.
data ExportAssetToSignedUrlResponseDetails
ExportAssetToSignedUrlResponseDetails' :: Maybe Text -> Maybe POSIX -> Text -> Text -> Text -> ExportAssetToSignedUrlResponseDetails

-- | The signed URL for the export request.
[$sel:signedUrl:ExportAssetToSignedUrlResponseDetails'] :: ExportAssetToSignedUrlResponseDetails -> Maybe Text

-- | The date and time that the signed URL expires, in ISO 8601 format.
[$sel:signedUrlExpiresAt:ExportAssetToSignedUrlResponseDetails'] :: ExportAssetToSignedUrlResponseDetails -> Maybe POSIX

-- | The unique identifier for the data set associated with this export
--   job.
[$sel:dataSetId:ExportAssetToSignedUrlResponseDetails'] :: ExportAssetToSignedUrlResponseDetails -> Text

-- | The unique identifier for the asset associated with this export job.
[$sel:assetId:ExportAssetToSignedUrlResponseDetails'] :: ExportAssetToSignedUrlResponseDetails -> Text

-- | The unique identifier for the revision associated with this export
--   response.
[$sel:revisionId:ExportAssetToSignedUrlResponseDetails'] :: ExportAssetToSignedUrlResponseDetails -> Text

-- | Create a value of <a>ExportAssetToSignedUrlResponseDetails</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:signedUrl:ExportAssetToSignedUrlResponseDetails'</a>,
--   <a>exportAssetToSignedUrlResponseDetails_signedUrl</a> - The signed
--   URL for the export request.
--   
--   <a>$sel:signedUrlExpiresAt:ExportAssetToSignedUrlResponseDetails'</a>,
--   <a>exportAssetToSignedUrlResponseDetails_signedUrlExpiresAt</a> - The
--   date and time that the signed URL expires, in ISO 8601 format.
--   
--   <a>$sel:dataSetId:ExportAssetToSignedUrlResponseDetails'</a>,
--   <a>exportAssetToSignedUrlResponseDetails_dataSetId</a> - The unique
--   identifier for the data set associated with this export job.
--   
--   <a>$sel:assetId:ExportAssetToSignedUrlResponseDetails'</a>,
--   <a>exportAssetToSignedUrlResponseDetails_assetId</a> - The unique
--   identifier for the asset associated with this export job.
--   
--   <a>$sel:revisionId:ExportAssetToSignedUrlResponseDetails'</a>,
--   <a>exportAssetToSignedUrlResponseDetails_revisionId</a> - The unique
--   identifier for the revision associated with this export response.
newExportAssetToSignedUrlResponseDetails :: Text -> Text -> Text -> ExportAssetToSignedUrlResponseDetails

-- | The signed URL for the export request.
exportAssetToSignedUrlResponseDetails_signedUrl :: Lens' ExportAssetToSignedUrlResponseDetails (Maybe Text)

-- | The date and time that the signed URL expires, in ISO 8601 format.
exportAssetToSignedUrlResponseDetails_signedUrlExpiresAt :: Lens' ExportAssetToSignedUrlResponseDetails (Maybe UTCTime)

-- | The unique identifier for the data set associated with this export
--   job.
exportAssetToSignedUrlResponseDetails_dataSetId :: Lens' ExportAssetToSignedUrlResponseDetails Text

-- | The unique identifier for the asset associated with this export job.
exportAssetToSignedUrlResponseDetails_assetId :: Lens' ExportAssetToSignedUrlResponseDetails Text

-- | The unique identifier for the revision associated with this export
--   response.
exportAssetToSignedUrlResponseDetails_revisionId :: Lens' ExportAssetToSignedUrlResponseDetails Text

-- | Details of the operation to be performed by the job.
--   
--   <i>See:</i> <a>newExportAssetsToS3RequestDetails</a> smart
--   constructor.
data ExportAssetsToS3RequestDetails
ExportAssetsToS3RequestDetails' :: Maybe ExportServerSideEncryption -> [AssetDestinationEntry] -> Text -> Text -> ExportAssetsToS3RequestDetails

-- | Encryption configuration for the export job.
[$sel:encryption:ExportAssetsToS3RequestDetails'] :: ExportAssetsToS3RequestDetails -> Maybe ExportServerSideEncryption

-- | The destination for the asset.
[$sel:assetDestinations:ExportAssetsToS3RequestDetails'] :: ExportAssetsToS3RequestDetails -> [AssetDestinationEntry]

-- | The unique identifier for the data set associated with this export
--   job.
[$sel:dataSetId:ExportAssetsToS3RequestDetails'] :: ExportAssetsToS3RequestDetails -> Text

-- | The unique identifier for the revision associated with this export
--   request.
[$sel:revisionId:ExportAssetsToS3RequestDetails'] :: ExportAssetsToS3RequestDetails -> Text

-- | Create a value of <a>ExportAssetsToS3RequestDetails</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:encryption:ExportAssetsToS3RequestDetails'</a>,
--   <a>exportAssetsToS3RequestDetails_encryption</a> - Encryption
--   configuration for the export job.
--   
--   <a>$sel:assetDestinations:ExportAssetsToS3RequestDetails'</a>,
--   <a>exportAssetsToS3RequestDetails_assetDestinations</a> - The
--   destination for the asset.
--   
--   <a>$sel:dataSetId:ExportAssetsToS3RequestDetails'</a>,
--   <a>exportAssetsToS3RequestDetails_dataSetId</a> - The unique
--   identifier for the data set associated with this export job.
--   
--   <a>$sel:revisionId:ExportAssetsToS3RequestDetails'</a>,
--   <a>exportAssetsToS3RequestDetails_revisionId</a> - The unique
--   identifier for the revision associated with this export request.
newExportAssetsToS3RequestDetails :: Text -> Text -> ExportAssetsToS3RequestDetails

-- | Encryption configuration for the export job.
exportAssetsToS3RequestDetails_encryption :: Lens' ExportAssetsToS3RequestDetails (Maybe ExportServerSideEncryption)

-- | The destination for the asset.
exportAssetsToS3RequestDetails_assetDestinations :: Lens' ExportAssetsToS3RequestDetails [AssetDestinationEntry]

-- | The unique identifier for the data set associated with this export
--   job.
exportAssetsToS3RequestDetails_dataSetId :: Lens' ExportAssetsToS3RequestDetails Text

-- | The unique identifier for the revision associated with this export
--   request.
exportAssetsToS3RequestDetails_revisionId :: Lens' ExportAssetsToS3RequestDetails Text

-- | Details about the export to Amazon S3 response.
--   
--   <i>See:</i> <a>newExportAssetsToS3ResponseDetails</a> smart
--   constructor.
data ExportAssetsToS3ResponseDetails
ExportAssetsToS3ResponseDetails' :: Maybe ExportServerSideEncryption -> [AssetDestinationEntry] -> Text -> Text -> ExportAssetsToS3ResponseDetails

-- | Encryption configuration of the export job.
[$sel:encryption:ExportAssetsToS3ResponseDetails'] :: ExportAssetsToS3ResponseDetails -> Maybe ExportServerSideEncryption

-- | The destination in Amazon S3 where the asset is exported.
[$sel:assetDestinations:ExportAssetsToS3ResponseDetails'] :: ExportAssetsToS3ResponseDetails -> [AssetDestinationEntry]

-- | The unique identifier for the data set associated with this export
--   job.
[$sel:dataSetId:ExportAssetsToS3ResponseDetails'] :: ExportAssetsToS3ResponseDetails -> Text

-- | The unique identifier for the revision associated with this export
--   response.
[$sel:revisionId:ExportAssetsToS3ResponseDetails'] :: ExportAssetsToS3ResponseDetails -> Text

-- | Create a value of <a>ExportAssetsToS3ResponseDetails</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:encryption:ExportAssetsToS3ResponseDetails'</a>,
--   <a>exportAssetsToS3ResponseDetails_encryption</a> - Encryption
--   configuration of the export job.
--   
--   <a>$sel:assetDestinations:ExportAssetsToS3ResponseDetails'</a>,
--   <a>exportAssetsToS3ResponseDetails_assetDestinations</a> - The
--   destination in Amazon S3 where the asset is exported.
--   
--   <a>$sel:dataSetId:ExportAssetsToS3ResponseDetails'</a>,
--   <a>exportAssetsToS3ResponseDetails_dataSetId</a> - The unique
--   identifier for the data set associated with this export job.
--   
--   <a>$sel:revisionId:ExportAssetsToS3ResponseDetails'</a>,
--   <a>exportAssetsToS3ResponseDetails_revisionId</a> - The unique
--   identifier for the revision associated with this export response.
newExportAssetsToS3ResponseDetails :: Text -> Text -> ExportAssetsToS3ResponseDetails

-- | Encryption configuration of the export job.
exportAssetsToS3ResponseDetails_encryption :: Lens' ExportAssetsToS3ResponseDetails (Maybe ExportServerSideEncryption)

-- | The destination in Amazon S3 where the asset is exported.
exportAssetsToS3ResponseDetails_assetDestinations :: Lens' ExportAssetsToS3ResponseDetails [AssetDestinationEntry]

-- | The unique identifier for the data set associated with this export
--   job.
exportAssetsToS3ResponseDetails_dataSetId :: Lens' ExportAssetsToS3ResponseDetails Text

-- | The unique identifier for the revision associated with this export
--   response.
exportAssetsToS3ResponseDetails_revisionId :: Lens' ExportAssetsToS3ResponseDetails Text

-- | Details of the operation to be performed by the job.
--   
--   <i>See:</i> <a>newExportRevisionsToS3RequestDetails</a> smart
--   constructor.
data ExportRevisionsToS3RequestDetails
ExportRevisionsToS3RequestDetails' :: Maybe ExportServerSideEncryption -> [RevisionDestinationEntry] -> Text -> ExportRevisionsToS3RequestDetails

-- | Encryption configuration for the export job.
[$sel:encryption:ExportRevisionsToS3RequestDetails'] :: ExportRevisionsToS3RequestDetails -> Maybe ExportServerSideEncryption

-- | The destination for the revision.
[$sel:revisionDestinations:ExportRevisionsToS3RequestDetails'] :: ExportRevisionsToS3RequestDetails -> [RevisionDestinationEntry]

-- | The unique identifier for the data set associated with this export
--   job.
[$sel:dataSetId:ExportRevisionsToS3RequestDetails'] :: ExportRevisionsToS3RequestDetails -> Text

-- | Create a value of <a>ExportRevisionsToS3RequestDetails</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:encryption:ExportRevisionsToS3RequestDetails'</a>,
--   <a>exportRevisionsToS3RequestDetails_encryption</a> - Encryption
--   configuration for the export job.
--   
--   <a>$sel:revisionDestinations:ExportRevisionsToS3RequestDetails'</a>,
--   <a>exportRevisionsToS3RequestDetails_revisionDestinations</a> - The
--   destination for the revision.
--   
--   <a>$sel:dataSetId:ExportRevisionsToS3RequestDetails'</a>,
--   <a>exportRevisionsToS3RequestDetails_dataSetId</a> - The unique
--   identifier for the data set associated with this export job.
newExportRevisionsToS3RequestDetails :: Text -> ExportRevisionsToS3RequestDetails

-- | Encryption configuration for the export job.
exportRevisionsToS3RequestDetails_encryption :: Lens' ExportRevisionsToS3RequestDetails (Maybe ExportServerSideEncryption)

-- | The destination for the revision.
exportRevisionsToS3RequestDetails_revisionDestinations :: Lens' ExportRevisionsToS3RequestDetails [RevisionDestinationEntry]

-- | The unique identifier for the data set associated with this export
--   job.
exportRevisionsToS3RequestDetails_dataSetId :: Lens' ExportRevisionsToS3RequestDetails Text

-- | Details about the export revisions to Amazon S3 response.
--   
--   <i>See:</i> <a>newExportRevisionsToS3ResponseDetails</a> smart
--   constructor.
data ExportRevisionsToS3ResponseDetails
ExportRevisionsToS3ResponseDetails' :: Maybe ExportServerSideEncryption -> Maybe Text -> [RevisionDestinationEntry] -> Text -> ExportRevisionsToS3ResponseDetails

-- | Encryption configuration of the export job.
[$sel:encryption:ExportRevisionsToS3ResponseDetails'] :: ExportRevisionsToS3ResponseDetails -> Maybe ExportServerSideEncryption

-- | The Amazon Resource Name (ARN) of the event action.
[$sel:eventActionArn:ExportRevisionsToS3ResponseDetails'] :: ExportRevisionsToS3ResponseDetails -> Maybe Text

-- | The destination in Amazon S3 where the revision is exported.
[$sel:revisionDestinations:ExportRevisionsToS3ResponseDetails'] :: ExportRevisionsToS3ResponseDetails -> [RevisionDestinationEntry]

-- | The unique identifier for the data set associated with this export
--   job.
[$sel:dataSetId:ExportRevisionsToS3ResponseDetails'] :: ExportRevisionsToS3ResponseDetails -> Text

-- | Create a value of <a>ExportRevisionsToS3ResponseDetails</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:encryption:ExportRevisionsToS3ResponseDetails'</a>,
--   <a>exportRevisionsToS3ResponseDetails_encryption</a> - Encryption
--   configuration of the export job.
--   
--   <a>$sel:eventActionArn:ExportRevisionsToS3ResponseDetails'</a>,
--   <a>exportRevisionsToS3ResponseDetails_eventActionArn</a> - The Amazon
--   Resource Name (ARN) of the event action.
--   
--   <a>$sel:revisionDestinations:ExportRevisionsToS3ResponseDetails'</a>,
--   <a>exportRevisionsToS3ResponseDetails_revisionDestinations</a> - The
--   destination in Amazon S3 where the revision is exported.
--   
--   <a>$sel:dataSetId:ExportRevisionsToS3ResponseDetails'</a>,
--   <a>exportRevisionsToS3ResponseDetails_dataSetId</a> - The unique
--   identifier for the data set associated with this export job.
newExportRevisionsToS3ResponseDetails :: Text -> ExportRevisionsToS3ResponseDetails

-- | Encryption configuration of the export job.
exportRevisionsToS3ResponseDetails_encryption :: Lens' ExportRevisionsToS3ResponseDetails (Maybe ExportServerSideEncryption)

-- | The Amazon Resource Name (ARN) of the event action.
exportRevisionsToS3ResponseDetails_eventActionArn :: Lens' ExportRevisionsToS3ResponseDetails (Maybe Text)

-- | The destination in Amazon S3 where the revision is exported.
exportRevisionsToS3ResponseDetails_revisionDestinations :: Lens' ExportRevisionsToS3ResponseDetails [RevisionDestinationEntry]

-- | The unique identifier for the data set associated with this export
--   job.
exportRevisionsToS3ResponseDetails_dataSetId :: Lens' ExportRevisionsToS3ResponseDetails Text

-- | Encryption configuration of the export job. Includes the encryption
--   type in addition to the AWS KMS key. The KMS key is only necessary if
--   you chose the KMS encryption. type.
--   
--   <i>See:</i> <a>newExportServerSideEncryption</a> smart constructor.
data ExportServerSideEncryption
ExportServerSideEncryption' :: Maybe Text -> ServerSideEncryptionTypes -> ExportServerSideEncryption

-- | The Amazon Resource Name (ARN) of the AWS KMS key you want to use to
--   encrypt the Amazon S3 objects. This parameter is required if you
--   choose aws:kms as an encryption type.
[$sel:kmsKeyArn:ExportServerSideEncryption'] :: ExportServerSideEncryption -> Maybe Text

-- | The type of server side encryption used for encrypting the objects in
--   Amazon S3.
[$sel:type':ExportServerSideEncryption'] :: ExportServerSideEncryption -> ServerSideEncryptionTypes

-- | Create a value of <a>ExportServerSideEncryption</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:kmsKeyArn:ExportServerSideEncryption'</a>,
--   <a>exportServerSideEncryption_kmsKeyArn</a> - The Amazon Resource Name
--   (ARN) of the AWS KMS key you want to use to encrypt the Amazon S3
--   objects. This parameter is required if you choose aws:kms as an
--   encryption type.
--   
--   <a>$sel:type':ExportServerSideEncryption'</a>,
--   <a>exportServerSideEncryption_type</a> - The type of server side
--   encryption used for encrypting the objects in Amazon S3.
newExportServerSideEncryption :: ServerSideEncryptionTypes -> ExportServerSideEncryption

-- | The Amazon Resource Name (ARN) of the AWS KMS key you want to use to
--   encrypt the Amazon S3 objects. This parameter is required if you
--   choose aws:kms as an encryption type.
exportServerSideEncryption_kmsKeyArn :: Lens' ExportServerSideEncryption (Maybe Text)

-- | The type of server side encryption used for encrypting the objects in
--   Amazon S3.
exportServerSideEncryption_type :: Lens' ExportServerSideEncryption ServerSideEncryptionTypes

-- | Information about the job error.
--   
--   <i>See:</i> <a>newImportAssetFromSignedUrlJobErrorDetails</a> smart
--   constructor.
data ImportAssetFromSignedUrlJobErrorDetails
ImportAssetFromSignedUrlJobErrorDetails' :: Text -> ImportAssetFromSignedUrlJobErrorDetails

-- | Information about the job error.
[$sel:assetName:ImportAssetFromSignedUrlJobErrorDetails'] :: ImportAssetFromSignedUrlJobErrorDetails -> Text

-- | Create a value of <a>ImportAssetFromSignedUrlJobErrorDetails</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:assetName:ImportAssetFromSignedUrlJobErrorDetails'</a>,
--   <a>importAssetFromSignedUrlJobErrorDetails_assetName</a> - Information
--   about the job error.
newImportAssetFromSignedUrlJobErrorDetails :: Text -> ImportAssetFromSignedUrlJobErrorDetails

-- | Information about the job error.
importAssetFromSignedUrlJobErrorDetails_assetName :: Lens' ImportAssetFromSignedUrlJobErrorDetails Text

-- | Details of the operation to be performed by the job.
--   
--   <i>See:</i> <a>newImportAssetFromSignedUrlRequestDetails</a> smart
--   constructor.
data ImportAssetFromSignedUrlRequestDetails
ImportAssetFromSignedUrlRequestDetails' :: Text -> Text -> Text -> Text -> ImportAssetFromSignedUrlRequestDetails

-- | The unique identifier for the data set associated with this import
--   job.
[$sel:dataSetId:ImportAssetFromSignedUrlRequestDetails'] :: ImportAssetFromSignedUrlRequestDetails -> Text

-- | The Base64-encoded Md5 hash for the asset, used to ensure the
--   integrity of the file at that location.
[$sel:md5Hash:ImportAssetFromSignedUrlRequestDetails'] :: ImportAssetFromSignedUrlRequestDetails -> Text

-- | The name of the asset. When importing from Amazon S3, the S3 object
--   key is used as the asset name.
[$sel:assetName:ImportAssetFromSignedUrlRequestDetails'] :: ImportAssetFromSignedUrlRequestDetails -> Text

-- | The unique identifier for the revision associated with this import
--   request.
[$sel:revisionId:ImportAssetFromSignedUrlRequestDetails'] :: ImportAssetFromSignedUrlRequestDetails -> Text

-- | Create a value of <a>ImportAssetFromSignedUrlRequestDetails</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataSetId:ImportAssetFromSignedUrlRequestDetails'</a>,
--   <a>importAssetFromSignedUrlRequestDetails_dataSetId</a> - The unique
--   identifier for the data set associated with this import job.
--   
--   <a>$sel:md5Hash:ImportAssetFromSignedUrlRequestDetails'</a>,
--   <a>importAssetFromSignedUrlRequestDetails_md5Hash</a> - The
--   Base64-encoded Md5 hash for the asset, used to ensure the integrity of
--   the file at that location.
--   
--   <a>$sel:assetName:ImportAssetFromSignedUrlRequestDetails'</a>,
--   <a>importAssetFromSignedUrlRequestDetails_assetName</a> - The name of
--   the asset. When importing from Amazon S3, the S3 object key is used as
--   the asset name.
--   
--   <a>$sel:revisionId:ImportAssetFromSignedUrlRequestDetails'</a>,
--   <a>importAssetFromSignedUrlRequestDetails_revisionId</a> - The unique
--   identifier for the revision associated with this import request.
newImportAssetFromSignedUrlRequestDetails :: Text -> Text -> Text -> Text -> ImportAssetFromSignedUrlRequestDetails

-- | The unique identifier for the data set associated with this import
--   job.
importAssetFromSignedUrlRequestDetails_dataSetId :: Lens' ImportAssetFromSignedUrlRequestDetails Text

-- | The Base64-encoded Md5 hash for the asset, used to ensure the
--   integrity of the file at that location.
importAssetFromSignedUrlRequestDetails_md5Hash :: Lens' ImportAssetFromSignedUrlRequestDetails Text

-- | The name of the asset. When importing from Amazon S3, the S3 object
--   key is used as the asset name.
importAssetFromSignedUrlRequestDetails_assetName :: Lens' ImportAssetFromSignedUrlRequestDetails Text

-- | The unique identifier for the revision associated with this import
--   request.
importAssetFromSignedUrlRequestDetails_revisionId :: Lens' ImportAssetFromSignedUrlRequestDetails Text

-- | The details in the response for an import request, including the
--   signed URL and other information.
--   
--   <i>See:</i> <a>newImportAssetFromSignedUrlResponseDetails</a> smart
--   constructor.
data ImportAssetFromSignedUrlResponseDetails
ImportAssetFromSignedUrlResponseDetails' :: Maybe Text -> Maybe POSIX -> Maybe Text -> Text -> Text -> Text -> ImportAssetFromSignedUrlResponseDetails

-- | The signed URL.
[$sel:signedUrl:ImportAssetFromSignedUrlResponseDetails'] :: ImportAssetFromSignedUrlResponseDetails -> Maybe Text

-- | The time and date at which the signed URL expires, in ISO 8601 format.
[$sel:signedUrlExpiresAt:ImportAssetFromSignedUrlResponseDetails'] :: ImportAssetFromSignedUrlResponseDetails -> Maybe POSIX

-- | The Base64-encoded Md5 hash for the asset, used to ensure the
--   integrity of the file at that location.
[$sel:md5Hash:ImportAssetFromSignedUrlResponseDetails'] :: ImportAssetFromSignedUrlResponseDetails -> Maybe Text

-- | The unique identifier for the data set associated with this import
--   job.
[$sel:dataSetId:ImportAssetFromSignedUrlResponseDetails'] :: ImportAssetFromSignedUrlResponseDetails -> Text

-- | The name for the asset associated with this import job.
[$sel:assetName:ImportAssetFromSignedUrlResponseDetails'] :: ImportAssetFromSignedUrlResponseDetails -> Text

-- | The unique identifier for the revision associated with this import
--   response.
[$sel:revisionId:ImportAssetFromSignedUrlResponseDetails'] :: ImportAssetFromSignedUrlResponseDetails -> Text

-- | Create a value of <a>ImportAssetFromSignedUrlResponseDetails</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:signedUrl:ImportAssetFromSignedUrlResponseDetails'</a>,
--   <a>importAssetFromSignedUrlResponseDetails_signedUrl</a> - The signed
--   URL.
--   
--   
--   <a>$sel:signedUrlExpiresAt:ImportAssetFromSignedUrlResponseDetails'</a>,
--   <a>importAssetFromSignedUrlResponseDetails_signedUrlExpiresAt</a> -
--   The time and date at which the signed URL expires, in ISO 8601 format.
--   
--   <a>$sel:md5Hash:ImportAssetFromSignedUrlResponseDetails'</a>,
--   <a>importAssetFromSignedUrlResponseDetails_md5Hash</a> - The
--   Base64-encoded Md5 hash for the asset, used to ensure the integrity of
--   the file at that location.
--   
--   <a>$sel:dataSetId:ImportAssetFromSignedUrlResponseDetails'</a>,
--   <a>importAssetFromSignedUrlResponseDetails_dataSetId</a> - The unique
--   identifier for the data set associated with this import job.
--   
--   <a>$sel:assetName:ImportAssetFromSignedUrlResponseDetails'</a>,
--   <a>importAssetFromSignedUrlResponseDetails_assetName</a> - The name
--   for the asset associated with this import job.
--   
--   <a>$sel:revisionId:ImportAssetFromSignedUrlResponseDetails'</a>,
--   <a>importAssetFromSignedUrlResponseDetails_revisionId</a> - The unique
--   identifier for the revision associated with this import response.
newImportAssetFromSignedUrlResponseDetails :: Text -> Text -> Text -> ImportAssetFromSignedUrlResponseDetails

-- | The signed URL.
importAssetFromSignedUrlResponseDetails_signedUrl :: Lens' ImportAssetFromSignedUrlResponseDetails (Maybe Text)

-- | The time and date at which the signed URL expires, in ISO 8601 format.
importAssetFromSignedUrlResponseDetails_signedUrlExpiresAt :: Lens' ImportAssetFromSignedUrlResponseDetails (Maybe UTCTime)

-- | The Base64-encoded Md5 hash for the asset, used to ensure the
--   integrity of the file at that location.
importAssetFromSignedUrlResponseDetails_md5Hash :: Lens' ImportAssetFromSignedUrlResponseDetails (Maybe Text)

-- | The unique identifier for the data set associated with this import
--   job.
importAssetFromSignedUrlResponseDetails_dataSetId :: Lens' ImportAssetFromSignedUrlResponseDetails Text

-- | The name for the asset associated with this import job.
importAssetFromSignedUrlResponseDetails_assetName :: Lens' ImportAssetFromSignedUrlResponseDetails Text

-- | The unique identifier for the revision associated with this import
--   response.
importAssetFromSignedUrlResponseDetails_revisionId :: Lens' ImportAssetFromSignedUrlResponseDetails Text

-- | Details from an import from Amazon Redshift datashare request.
--   
--   <i>See:</i> <a>newImportAssetsFromRedshiftDataSharesRequestDetails</a>
--   smart constructor.
data ImportAssetsFromRedshiftDataSharesRequestDetails
ImportAssetsFromRedshiftDataSharesRequestDetails' :: Text -> [RedshiftDataShareAssetSourceEntry] -> Text -> ImportAssetsFromRedshiftDataSharesRequestDetails

-- | The unique identifier for the data set associated with this import
--   job.
[$sel:dataSetId:ImportAssetsFromRedshiftDataSharesRequestDetails'] :: ImportAssetsFromRedshiftDataSharesRequestDetails -> Text

-- | A list of Amazon Redshift datashare assets.
[$sel:assetSources:ImportAssetsFromRedshiftDataSharesRequestDetails'] :: ImportAssetsFromRedshiftDataSharesRequestDetails -> [RedshiftDataShareAssetSourceEntry]

-- | The unique identifier for the revision associated with this import
--   job.
[$sel:revisionId:ImportAssetsFromRedshiftDataSharesRequestDetails'] :: ImportAssetsFromRedshiftDataSharesRequestDetails -> Text

-- | Create a value of
--   <a>ImportAssetsFromRedshiftDataSharesRequestDetails</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:dataSetId:ImportAssetsFromRedshiftDataSharesRequestDetails'</a>,
--   <a>importAssetsFromRedshiftDataSharesRequestDetails_dataSetId</a> -
--   The unique identifier for the data set associated with this import
--   job.
--   
--   
--   <a>$sel:assetSources:ImportAssetsFromRedshiftDataSharesRequestDetails'</a>,
--   <a>importAssetsFromRedshiftDataSharesRequestDetails_assetSources</a> -
--   A list of Amazon Redshift datashare assets.
--   
--   
--   <a>$sel:revisionId:ImportAssetsFromRedshiftDataSharesRequestDetails'</a>,
--   <a>importAssetsFromRedshiftDataSharesRequestDetails_revisionId</a> -
--   The unique identifier for the revision associated with this import
--   job.
newImportAssetsFromRedshiftDataSharesRequestDetails :: Text -> Text -> ImportAssetsFromRedshiftDataSharesRequestDetails

-- | The unique identifier for the data set associated with this import
--   job.
importAssetsFromRedshiftDataSharesRequestDetails_dataSetId :: Lens' ImportAssetsFromRedshiftDataSharesRequestDetails Text

-- | A list of Amazon Redshift datashare assets.
importAssetsFromRedshiftDataSharesRequestDetails_assetSources :: Lens' ImportAssetsFromRedshiftDataSharesRequestDetails [RedshiftDataShareAssetSourceEntry]

-- | The unique identifier for the revision associated with this import
--   job.
importAssetsFromRedshiftDataSharesRequestDetails_revisionId :: Lens' ImportAssetsFromRedshiftDataSharesRequestDetails Text

-- | Details from an import from Amazon Redshift datashare response.
--   
--   <i>See:</i>
--   <a>newImportAssetsFromRedshiftDataSharesResponseDetails</a> smart
--   constructor.
data ImportAssetsFromRedshiftDataSharesResponseDetails
ImportAssetsFromRedshiftDataSharesResponseDetails' :: Text -> [RedshiftDataShareAssetSourceEntry] -> Text -> ImportAssetsFromRedshiftDataSharesResponseDetails

-- | The unique identifier for the data set associated with this import
--   job.
[$sel:dataSetId:ImportAssetsFromRedshiftDataSharesResponseDetails'] :: ImportAssetsFromRedshiftDataSharesResponseDetails -> Text

-- | A list of Amazon Redshift datashare asset sources.
[$sel:assetSources:ImportAssetsFromRedshiftDataSharesResponseDetails'] :: ImportAssetsFromRedshiftDataSharesResponseDetails -> [RedshiftDataShareAssetSourceEntry]

-- | The unique identifier for the revision associated with this import
--   job.
[$sel:revisionId:ImportAssetsFromRedshiftDataSharesResponseDetails'] :: ImportAssetsFromRedshiftDataSharesResponseDetails -> Text

-- | Create a value of
--   <a>ImportAssetsFromRedshiftDataSharesResponseDetails</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:dataSetId:ImportAssetsFromRedshiftDataSharesResponseDetails'</a>,
--   <a>importAssetsFromRedshiftDataSharesResponseDetails_dataSetId</a> -
--   The unique identifier for the data set associated with this import
--   job.
--   
--   
--   <a>$sel:assetSources:ImportAssetsFromRedshiftDataSharesResponseDetails'</a>,
--   <a>importAssetsFromRedshiftDataSharesResponseDetails_assetSources</a>
--   - A list of Amazon Redshift datashare asset sources.
--   
--   
--   <a>$sel:revisionId:ImportAssetsFromRedshiftDataSharesResponseDetails'</a>,
--   <a>importAssetsFromRedshiftDataSharesResponseDetails_revisionId</a> -
--   The unique identifier for the revision associated with this import
--   job.
newImportAssetsFromRedshiftDataSharesResponseDetails :: Text -> Text -> ImportAssetsFromRedshiftDataSharesResponseDetails

-- | The unique identifier for the data set associated with this import
--   job.
importAssetsFromRedshiftDataSharesResponseDetails_dataSetId :: Lens' ImportAssetsFromRedshiftDataSharesResponseDetails Text

-- | A list of Amazon Redshift datashare asset sources.
importAssetsFromRedshiftDataSharesResponseDetails_assetSources :: Lens' ImportAssetsFromRedshiftDataSharesResponseDetails [RedshiftDataShareAssetSourceEntry]

-- | The unique identifier for the revision associated with this import
--   job.
importAssetsFromRedshiftDataSharesResponseDetails_revisionId :: Lens' ImportAssetsFromRedshiftDataSharesResponseDetails Text

-- | Details of the operation to be performed by the job.
--   
--   <i>See:</i> <a>newImportAssetsFromS3RequestDetails</a> smart
--   constructor.
data ImportAssetsFromS3RequestDetails
ImportAssetsFromS3RequestDetails' :: Text -> [AssetSourceEntry] -> Text -> ImportAssetsFromS3RequestDetails

-- | The unique identifier for the data set associated with this import
--   job.
[$sel:dataSetId:ImportAssetsFromS3RequestDetails'] :: ImportAssetsFromS3RequestDetails -> Text

-- | Is a list of S3 bucket and object key pairs.
[$sel:assetSources:ImportAssetsFromS3RequestDetails'] :: ImportAssetsFromS3RequestDetails -> [AssetSourceEntry]

-- | The unique identifier for the revision associated with this import
--   request.
[$sel:revisionId:ImportAssetsFromS3RequestDetails'] :: ImportAssetsFromS3RequestDetails -> Text

-- | Create a value of <a>ImportAssetsFromS3RequestDetails</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataSetId:ImportAssetsFromS3RequestDetails'</a>,
--   <a>importAssetsFromS3RequestDetails_dataSetId</a> - The unique
--   identifier for the data set associated with this import job.
--   
--   <a>$sel:assetSources:ImportAssetsFromS3RequestDetails'</a>,
--   <a>importAssetsFromS3RequestDetails_assetSources</a> - Is a list of S3
--   bucket and object key pairs.
--   
--   <a>$sel:revisionId:ImportAssetsFromS3RequestDetails'</a>,
--   <a>importAssetsFromS3RequestDetails_revisionId</a> - The unique
--   identifier for the revision associated with this import request.
newImportAssetsFromS3RequestDetails :: Text -> Text -> ImportAssetsFromS3RequestDetails

-- | The unique identifier for the data set associated with this import
--   job.
importAssetsFromS3RequestDetails_dataSetId :: Lens' ImportAssetsFromS3RequestDetails Text

-- | Is a list of S3 bucket and object key pairs.
importAssetsFromS3RequestDetails_assetSources :: Lens' ImportAssetsFromS3RequestDetails [AssetSourceEntry]

-- | The unique identifier for the revision associated with this import
--   request.
importAssetsFromS3RequestDetails_revisionId :: Lens' ImportAssetsFromS3RequestDetails Text

-- | Details from an import from Amazon S3 response.
--   
--   <i>See:</i> <a>newImportAssetsFromS3ResponseDetails</a> smart
--   constructor.
data ImportAssetsFromS3ResponseDetails
ImportAssetsFromS3ResponseDetails' :: Text -> [AssetSourceEntry] -> Text -> ImportAssetsFromS3ResponseDetails

-- | The unique identifier for the data set associated with this import
--   job.
[$sel:dataSetId:ImportAssetsFromS3ResponseDetails'] :: ImportAssetsFromS3ResponseDetails -> Text

-- | Is a list of Amazon S3 bucket and object key pairs.
[$sel:assetSources:ImportAssetsFromS3ResponseDetails'] :: ImportAssetsFromS3ResponseDetails -> [AssetSourceEntry]

-- | The unique identifier for the revision associated with this import
--   response.
[$sel:revisionId:ImportAssetsFromS3ResponseDetails'] :: ImportAssetsFromS3ResponseDetails -> Text

-- | Create a value of <a>ImportAssetsFromS3ResponseDetails</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataSetId:ImportAssetsFromS3ResponseDetails'</a>,
--   <a>importAssetsFromS3ResponseDetails_dataSetId</a> - The unique
--   identifier for the data set associated with this import job.
--   
--   <a>$sel:assetSources:ImportAssetsFromS3ResponseDetails'</a>,
--   <a>importAssetsFromS3ResponseDetails_assetSources</a> - Is a list of
--   Amazon S3 bucket and object key pairs.
--   
--   <a>$sel:revisionId:ImportAssetsFromS3ResponseDetails'</a>,
--   <a>importAssetsFromS3ResponseDetails_revisionId</a> - The unique
--   identifier for the revision associated with this import response.
newImportAssetsFromS3ResponseDetails :: Text -> Text -> ImportAssetsFromS3ResponseDetails

-- | The unique identifier for the data set associated with this import
--   job.
importAssetsFromS3ResponseDetails_dataSetId :: Lens' ImportAssetsFromS3ResponseDetails Text

-- | Is a list of Amazon S3 bucket and object key pairs.
importAssetsFromS3ResponseDetails_assetSources :: Lens' ImportAssetsFromS3ResponseDetails [AssetSourceEntry]

-- | The unique identifier for the revision associated with this import
--   response.
importAssetsFromS3ResponseDetails_revisionId :: Lens' ImportAssetsFromS3ResponseDetails Text

-- | AWS Data Exchange Jobs are asynchronous import or export operations
--   used to create or copy assets. A data set owner can both import and
--   export as they see fit. Someone with an entitlement to a data set can
--   only export. Jobs are deleted 90 days after they are created.
--   
--   <i>See:</i> <a>newJobEntry</a> smart constructor.
data JobEntry
JobEntry' :: Maybe [JobError] -> Type -> ResponseDetails -> State -> POSIX -> Text -> Text -> POSIX -> JobEntry

-- | Errors for jobs.
[$sel:errors:JobEntry'] :: JobEntry -> Maybe [JobError]

-- | The job type.
[$sel:type':JobEntry'] :: JobEntry -> Type

-- | Details of the operation to be performed by the job, such as export
--   destination details or import source details.
[$sel:details:JobEntry'] :: JobEntry -> ResponseDetails

-- | The state of the job.
[$sel:state:JobEntry'] :: JobEntry -> State

-- | The date and time that the job was created, in ISO 8601 format.
[$sel:createdAt:JobEntry'] :: JobEntry -> POSIX

-- | The unique identifier for the job.
[$sel:id:JobEntry'] :: JobEntry -> Text

-- | The ARN for the job.
[$sel:arn:JobEntry'] :: JobEntry -> Text

-- | The date and time that the job was last updated, in ISO 8601 format.
[$sel:updatedAt:JobEntry'] :: JobEntry -> POSIX

-- | Create a value of <a>JobEntry</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errors:JobEntry'</a>, <a>jobEntry_errors</a> - Errors for
--   jobs.
--   
--   <a>$sel:type':JobEntry'</a>, <a>jobEntry_type</a> - The job type.
--   
--   <a>$sel:details:JobEntry'</a>, <a>jobEntry_details</a> - Details of
--   the operation to be performed by the job, such as export destination
--   details or import source details.
--   
--   <a>$sel:state:JobEntry'</a>, <a>jobEntry_state</a> - The state of the
--   job.
--   
--   <a>$sel:createdAt:JobEntry'</a>, <a>jobEntry_createdAt</a> - The date
--   and time that the job was created, in ISO 8601 format.
--   
--   <a>$sel:id:JobEntry'</a>, <a>jobEntry_id</a> - The unique identifier
--   for the job.
--   
--   <a>$sel:arn:JobEntry'</a>, <a>jobEntry_arn</a> - The ARN for the job.
--   
--   <a>$sel:updatedAt:JobEntry'</a>, <a>jobEntry_updatedAt</a> - The date
--   and time that the job was last updated, in ISO 8601 format.
newJobEntry :: Type -> ResponseDetails -> State -> UTCTime -> Text -> Text -> UTCTime -> JobEntry

-- | Errors for jobs.
jobEntry_errors :: Lens' JobEntry (Maybe [JobError])

-- | The job type.
jobEntry_type :: Lens' JobEntry Type

-- | Details of the operation to be performed by the job, such as export
--   destination details or import source details.
jobEntry_details :: Lens' JobEntry ResponseDetails

-- | The state of the job.
jobEntry_state :: Lens' JobEntry State

-- | The date and time that the job was created, in ISO 8601 format.
jobEntry_createdAt :: Lens' JobEntry UTCTime

-- | The unique identifier for the job.
jobEntry_id :: Lens' JobEntry Text

-- | The ARN for the job.
jobEntry_arn :: Lens' JobEntry Text

-- | The date and time that the job was last updated, in ISO 8601 format.
jobEntry_updatedAt :: Lens' JobEntry UTCTime

-- | An error that occurred with the job request.
--   
--   <i>See:</i> <a>newJobError</a> smart constructor.
data JobError
JobError' :: Maybe Text -> Maybe JobErrorLimitName -> Maybe JobErrorResourceTypes -> Maybe Details -> Maybe Double -> Text -> Code -> JobError

-- | The unique identifier for the resource related to the error.
[$sel:resourceId:JobError'] :: JobError -> Maybe Text

-- | The name of the limit that was reached.
[$sel:limitName:JobError'] :: JobError -> Maybe JobErrorLimitName

-- | The type of resource related to the error.
[$sel:resourceType:JobError'] :: JobError -> Maybe JobErrorResourceTypes

-- | The details about the job error.
[$sel:details:JobError'] :: JobError -> Maybe Details

-- | The value of the exceeded limit.
[$sel:limitValue:JobError'] :: JobError -> Maybe Double

-- | The message related to the job error.
[$sel:message:JobError'] :: JobError -> Text

-- | The code for the job error.
[$sel:code:JobError'] :: JobError -> Code

-- | Create a value of <a>JobError</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceId:JobError'</a>, <a>jobError_resourceId</a> - The
--   unique identifier for the resource related to the error.
--   
--   <a>$sel:limitName:JobError'</a>, <a>jobError_limitName</a> - The name
--   of the limit that was reached.
--   
--   <a>$sel:resourceType:JobError'</a>, <a>jobError_resourceType</a> - The
--   type of resource related to the error.
--   
--   <a>$sel:details:JobError'</a>, <a>jobError_details</a> - The details
--   about the job error.
--   
--   <a>$sel:limitValue:JobError'</a>, <a>jobError_limitValue</a> - The
--   value of the exceeded limit.
--   
--   <a>$sel:message:JobError'</a>, <a>jobError_message</a> - The message
--   related to the job error.
--   
--   <a>$sel:code:JobError'</a>, <a>jobError_code</a> - The code for the
--   job error.
newJobError :: Text -> Code -> JobError

-- | The unique identifier for the resource related to the error.
jobError_resourceId :: Lens' JobError (Maybe Text)

-- | The name of the limit that was reached.
jobError_limitName :: Lens' JobError (Maybe JobErrorLimitName)

-- | The type of resource related to the error.
jobError_resourceType :: Lens' JobError (Maybe JobErrorResourceTypes)

-- | The details about the job error.
jobError_details :: Lens' JobError (Maybe Details)

-- | The value of the exceeded limit.
jobError_limitValue :: Lens' JobError (Maybe Double)

-- | The message related to the job error.
jobError_message :: Lens' JobError Text

-- | The code for the job error.
jobError_code :: Lens' JobError Code

-- | Information about the origin of the data set.
--   
--   <i>See:</i> <a>newOriginDetails</a> smart constructor.
data OriginDetails
OriginDetails' :: Text -> OriginDetails

-- | The product ID of the origin of the data set.
[$sel:productId:OriginDetails'] :: OriginDetails -> Text

-- | Create a value of <a>OriginDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:productId:OriginDetails'</a>, <a>originDetails_productId</a> -
--   The product ID of the origin of the data set.
newOriginDetails :: Text -> OriginDetails

-- | The product ID of the origin of the data set.
originDetails_productId :: Lens' OriginDetails Text

-- | The Amazon Redshift datashare asset.
--   
--   <i>See:</i> <a>newRedshiftDataShareAsset</a> smart constructor.
data RedshiftDataShareAsset
RedshiftDataShareAsset' :: Text -> RedshiftDataShareAsset

-- | The Amazon Resource Name (ARN) of the datashare asset.
[$sel:arn:RedshiftDataShareAsset'] :: RedshiftDataShareAsset -> Text

-- | Create a value of <a>RedshiftDataShareAsset</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:RedshiftDataShareAsset'</a>,
--   <a>redshiftDataShareAsset_arn</a> - The Amazon Resource Name (ARN) of
--   the datashare asset.
newRedshiftDataShareAsset :: Text -> RedshiftDataShareAsset

-- | The Amazon Resource Name (ARN) of the datashare asset.
redshiftDataShareAsset_arn :: Lens' RedshiftDataShareAsset Text

-- | The source of the Amazon Redshift datashare asset.
--   
--   <i>See:</i> <a>newRedshiftDataShareAssetSourceEntry</a> smart
--   constructor.
data RedshiftDataShareAssetSourceEntry
RedshiftDataShareAssetSourceEntry' :: Text -> RedshiftDataShareAssetSourceEntry

-- | The Amazon Resource Name (ARN) of the datashare asset.
[$sel:dataShareArn:RedshiftDataShareAssetSourceEntry'] :: RedshiftDataShareAssetSourceEntry -> Text

-- | Create a value of <a>RedshiftDataShareAssetSourceEntry</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataShareArn:RedshiftDataShareAssetSourceEntry'</a>,
--   <a>redshiftDataShareAssetSourceEntry_dataShareArn</a> - The Amazon
--   Resource Name (ARN) of the datashare asset.
newRedshiftDataShareAssetSourceEntry :: Text -> RedshiftDataShareAssetSourceEntry

-- | The Amazon Resource Name (ARN) of the datashare asset.
redshiftDataShareAssetSourceEntry_dataShareArn :: Lens' RedshiftDataShareAssetSourceEntry Text

-- | The details for the request.
--   
--   <i>See:</i> <a>newRequestDetails</a> smart constructor.
data RequestDetails
RequestDetails' :: Maybe ExportAssetsToS3RequestDetails -> Maybe ExportRevisionsToS3RequestDetails -> Maybe ImportAssetFromSignedUrlRequestDetails -> Maybe ImportAssetsFromRedshiftDataSharesRequestDetails -> Maybe ImportAssetsFromS3RequestDetails -> Maybe ExportAssetToSignedUrlRequestDetails -> RequestDetails

-- | Details about the export to Amazon S3 request.
[$sel:exportAssetsToS3:RequestDetails'] :: RequestDetails -> Maybe ExportAssetsToS3RequestDetails

-- | Details about the export to Amazon S3 request.
[$sel:exportRevisionsToS3:RequestDetails'] :: RequestDetails -> Maybe ExportRevisionsToS3RequestDetails

-- | Details about the import from signed URL request.
[$sel:importAssetFromSignedUrl:RequestDetails'] :: RequestDetails -> Maybe ImportAssetFromSignedUrlRequestDetails

-- | Details from an import from Amazon Redshift datashare request.
[$sel:importAssetsFromRedshiftDataShares:RequestDetails'] :: RequestDetails -> Maybe ImportAssetsFromRedshiftDataSharesRequestDetails

-- | Details about the import from Amazon S3 request.
[$sel:importAssetsFromS3:RequestDetails'] :: RequestDetails -> Maybe ImportAssetsFromS3RequestDetails

-- | Details about the export to signed URL request.
[$sel:exportAssetToSignedUrl:RequestDetails'] :: RequestDetails -> Maybe ExportAssetToSignedUrlRequestDetails

-- | Create a value of <a>RequestDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:exportAssetsToS3:RequestDetails'</a>,
--   <a>requestDetails_exportAssetsToS3</a> - Details about the export to
--   Amazon S3 request.
--   
--   <a>$sel:exportRevisionsToS3:RequestDetails'</a>,
--   <a>requestDetails_exportRevisionsToS3</a> - Details about the export
--   to Amazon S3 request.
--   
--   <a>$sel:importAssetFromSignedUrl:RequestDetails'</a>,
--   <a>requestDetails_importAssetFromSignedUrl</a> - Details about the
--   import from signed URL request.
--   
--   <a>$sel:importAssetsFromRedshiftDataShares:RequestDetails'</a>,
--   <a>requestDetails_importAssetsFromRedshiftDataShares</a> - Details
--   from an import from Amazon Redshift datashare request.
--   
--   <a>$sel:importAssetsFromS3:RequestDetails'</a>,
--   <a>requestDetails_importAssetsFromS3</a> - Details about the import
--   from Amazon S3 request.
--   
--   <a>$sel:exportAssetToSignedUrl:RequestDetails'</a>,
--   <a>requestDetails_exportAssetToSignedUrl</a> - Details about the
--   export to signed URL request.
newRequestDetails :: RequestDetails

-- | Details about the export to Amazon S3 request.
requestDetails_exportAssetsToS3 :: Lens' RequestDetails (Maybe ExportAssetsToS3RequestDetails)

-- | Details about the export to Amazon S3 request.
requestDetails_exportRevisionsToS3 :: Lens' RequestDetails (Maybe ExportRevisionsToS3RequestDetails)

-- | Details about the import from signed URL request.
requestDetails_importAssetFromSignedUrl :: Lens' RequestDetails (Maybe ImportAssetFromSignedUrlRequestDetails)

-- | Details from an import from Amazon Redshift datashare request.
requestDetails_importAssetsFromRedshiftDataShares :: Lens' RequestDetails (Maybe ImportAssetsFromRedshiftDataSharesRequestDetails)

-- | Details about the import from Amazon S3 request.
requestDetails_importAssetsFromS3 :: Lens' RequestDetails (Maybe ImportAssetsFromS3RequestDetails)

-- | Details about the export to signed URL request.
requestDetails_exportAssetToSignedUrl :: Lens' RequestDetails (Maybe ExportAssetToSignedUrlRequestDetails)

-- | Details for the response.
--   
--   <i>See:</i> <a>newResponseDetails</a> smart constructor.
data ResponseDetails
ResponseDetails' :: Maybe ExportAssetsToS3ResponseDetails -> Maybe ExportRevisionsToS3ResponseDetails -> Maybe ImportAssetFromSignedUrlResponseDetails -> Maybe ImportAssetsFromRedshiftDataSharesResponseDetails -> Maybe ImportAssetsFromS3ResponseDetails -> Maybe ExportAssetToSignedUrlResponseDetails -> ResponseDetails

-- | Details for the export to Amazon S3 response.
[$sel:exportAssetsToS3:ResponseDetails'] :: ResponseDetails -> Maybe ExportAssetsToS3ResponseDetails

-- | Details for the export revisions to Amazon S3 response.
[$sel:exportRevisionsToS3:ResponseDetails'] :: ResponseDetails -> Maybe ExportRevisionsToS3ResponseDetails

-- | Details for the import from signed URL response.
[$sel:importAssetFromSignedUrl:ResponseDetails'] :: ResponseDetails -> Maybe ImportAssetFromSignedUrlResponseDetails

-- | Details from an import from Amazon Redshift datashare response.
[$sel:importAssetsFromRedshiftDataShares:ResponseDetails'] :: ResponseDetails -> Maybe ImportAssetsFromRedshiftDataSharesResponseDetails

-- | Details for the import from Amazon S3 response.
[$sel:importAssetsFromS3:ResponseDetails'] :: ResponseDetails -> Maybe ImportAssetsFromS3ResponseDetails

-- | Details for the export to signed URL response.
[$sel:exportAssetToSignedUrl:ResponseDetails'] :: ResponseDetails -> Maybe ExportAssetToSignedUrlResponseDetails

-- | Create a value of <a>ResponseDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:exportAssetsToS3:ResponseDetails'</a>,
--   <a>responseDetails_exportAssetsToS3</a> - Details for the export to
--   Amazon S3 response.
--   
--   <a>$sel:exportRevisionsToS3:ResponseDetails'</a>,
--   <a>responseDetails_exportRevisionsToS3</a> - Details for the export
--   revisions to Amazon S3 response.
--   
--   <a>$sel:importAssetFromSignedUrl:ResponseDetails'</a>,
--   <a>responseDetails_importAssetFromSignedUrl</a> - Details for the
--   import from signed URL response.
--   
--   <a>$sel:importAssetsFromRedshiftDataShares:ResponseDetails'</a>,
--   <a>responseDetails_importAssetsFromRedshiftDataShares</a> - Details
--   from an import from Amazon Redshift datashare response.
--   
--   <a>$sel:importAssetsFromS3:ResponseDetails'</a>,
--   <a>responseDetails_importAssetsFromS3</a> - Details for the import
--   from Amazon S3 response.
--   
--   <a>$sel:exportAssetToSignedUrl:ResponseDetails'</a>,
--   <a>responseDetails_exportAssetToSignedUrl</a> - Details for the export
--   to signed URL response.
newResponseDetails :: ResponseDetails

-- | Details for the export to Amazon S3 response.
responseDetails_exportAssetsToS3 :: Lens' ResponseDetails (Maybe ExportAssetsToS3ResponseDetails)

-- | Details for the export revisions to Amazon S3 response.
responseDetails_exportRevisionsToS3 :: Lens' ResponseDetails (Maybe ExportRevisionsToS3ResponseDetails)

-- | Details for the import from signed URL response.
responseDetails_importAssetFromSignedUrl :: Lens' ResponseDetails (Maybe ImportAssetFromSignedUrlResponseDetails)

-- | Details from an import from Amazon Redshift datashare response.
responseDetails_importAssetsFromRedshiftDataShares :: Lens' ResponseDetails (Maybe ImportAssetsFromRedshiftDataSharesResponseDetails)

-- | Details for the import from Amazon S3 response.
responseDetails_importAssetsFromS3 :: Lens' ResponseDetails (Maybe ImportAssetsFromS3ResponseDetails)

-- | Details for the export to signed URL response.
responseDetails_exportAssetToSignedUrl :: Lens' ResponseDetails (Maybe ExportAssetToSignedUrlResponseDetails)

-- | The destination where the assets in the revision will be exported.
--   
--   <i>See:</i> <a>newRevisionDestinationEntry</a> smart constructor.
data RevisionDestinationEntry
RevisionDestinationEntry' :: Maybe Text -> Text -> Text -> RevisionDestinationEntry

-- | A string representing the pattern for generated names of the
--   individual assets in the revision. For more information about key
--   patterns, see <a>Key patterns when exporting revisions</a>.
[$sel:keyPattern:RevisionDestinationEntry'] :: RevisionDestinationEntry -> Maybe Text

-- | The S3 bucket that is the destination for the assets in the revision.
[$sel:bucket:RevisionDestinationEntry'] :: RevisionDestinationEntry -> Text

-- | The unique identifier for the revision.
[$sel:revisionId:RevisionDestinationEntry'] :: RevisionDestinationEntry -> Text

-- | Create a value of <a>RevisionDestinationEntry</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyPattern:RevisionDestinationEntry'</a>,
--   <a>revisionDestinationEntry_keyPattern</a> - A string representing the
--   pattern for generated names of the individual assets in the revision.
--   For more information about key patterns, see <a>Key patterns when
--   exporting revisions</a>.
--   
--   <a>$sel:bucket:RevisionDestinationEntry'</a>,
--   <a>revisionDestinationEntry_bucket</a> - The S3 bucket that is the
--   destination for the assets in the revision.
--   
--   <a>$sel:revisionId:RevisionDestinationEntry'</a>,
--   <a>revisionDestinationEntry_revisionId</a> - The unique identifier for
--   the revision.
newRevisionDestinationEntry :: Text -> Text -> RevisionDestinationEntry

-- | A string representing the pattern for generated names of the
--   individual assets in the revision. For more information about key
--   patterns, see <a>Key patterns when exporting revisions</a>.
revisionDestinationEntry_keyPattern :: Lens' RevisionDestinationEntry (Maybe Text)

-- | The S3 bucket that is the destination for the assets in the revision.
revisionDestinationEntry_bucket :: Lens' RevisionDestinationEntry Text

-- | The unique identifier for the revision.
revisionDestinationEntry_revisionId :: Lens' RevisionDestinationEntry Text

-- | A revision is a container for one or more assets.
--   
--   <i>See:</i> <a>newRevisionEntry</a> smart constructor.
data RevisionEntry
RevisionEntry' :: Maybe Text -> Maybe Bool -> Maybe Text -> POSIX -> Text -> Text -> Text -> POSIX -> RevisionEntry

-- | The revision ID of the owned revision corresponding to the entitled
--   revision being viewed. This parameter is returned when a revision
--   owner is viewing the entitled copy of its owned revision.
[$sel:sourceId:RevisionEntry'] :: RevisionEntry -> Maybe Text

-- | To publish a revision to a data set in a product, the revision must
--   first be finalized. Finalizing a revision tells AWS Data Exchange that
--   your changes to the assets in the revision are complete. After it's in
--   this read-only state, you can publish the revision to your products.
--   
--   Finalized revisions can be published through the AWS Data Exchange
--   console or the AWS Marketplace Catalog API, using the StartChangeSet
--   AWS Marketplace Catalog API action. When using the API, revisions are
--   uniquely identified by their ARN.
[$sel:finalized:RevisionEntry'] :: RevisionEntry -> Maybe Bool

-- | An optional comment about the revision.
[$sel:comment:RevisionEntry'] :: RevisionEntry -> Maybe Text

-- | The date and time that the revision was created, in ISO 8601 format.
[$sel:createdAt:RevisionEntry'] :: RevisionEntry -> POSIX

-- | The unique identifier for the data set associated with this revision.
[$sel:dataSetId:RevisionEntry'] :: RevisionEntry -> Text

-- | The unique identifier for the revision.
[$sel:id:RevisionEntry'] :: RevisionEntry -> Text

-- | The ARN for the revision.
[$sel:arn:RevisionEntry'] :: RevisionEntry -> Text

-- | The date and time that the revision was last updated, in ISO 8601
--   format.
[$sel:updatedAt:RevisionEntry'] :: RevisionEntry -> POSIX

-- | Create a value of <a>RevisionEntry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceId:RevisionEntry'</a>, <a>revisionEntry_sourceId</a> -
--   The revision ID of the owned revision corresponding to the entitled
--   revision being viewed. This parameter is returned when a revision
--   owner is viewing the entitled copy of its owned revision.
--   
--   <a>$sel:finalized:RevisionEntry'</a>, <a>revisionEntry_finalized</a> -
--   To publish a revision to a data set in a product, the revision must
--   first be finalized. Finalizing a revision tells AWS Data Exchange that
--   your changes to the assets in the revision are complete. After it's in
--   this read-only state, you can publish the revision to your products.
--   
--   Finalized revisions can be published through the AWS Data Exchange
--   console or the AWS Marketplace Catalog API, using the StartChangeSet
--   AWS Marketplace Catalog API action. When using the API, revisions are
--   uniquely identified by their ARN.
--   
--   <a>$sel:comment:RevisionEntry'</a>, <a>revisionEntry_comment</a> - An
--   optional comment about the revision.
--   
--   <a>$sel:createdAt:RevisionEntry'</a>, <a>revisionEntry_createdAt</a> -
--   The date and time that the revision was created, in ISO 8601 format.
--   
--   <a>$sel:dataSetId:RevisionEntry'</a>, <a>revisionEntry_dataSetId</a> -
--   The unique identifier for the data set associated with this revision.
--   
--   <a>$sel:id:RevisionEntry'</a>, <a>revisionEntry_id</a> - The unique
--   identifier for the revision.
--   
--   <a>$sel:arn:RevisionEntry'</a>, <a>revisionEntry_arn</a> - The ARN for
--   the revision.
--   
--   <a>$sel:updatedAt:RevisionEntry'</a>, <a>revisionEntry_updatedAt</a> -
--   The date and time that the revision was last updated, in ISO 8601
--   format.
newRevisionEntry :: UTCTime -> Text -> Text -> Text -> UTCTime -> RevisionEntry

-- | The revision ID of the owned revision corresponding to the entitled
--   revision being viewed. This parameter is returned when a revision
--   owner is viewing the entitled copy of its owned revision.
revisionEntry_sourceId :: Lens' RevisionEntry (Maybe Text)

-- | To publish a revision to a data set in a product, the revision must
--   first be finalized. Finalizing a revision tells AWS Data Exchange that
--   your changes to the assets in the revision are complete. After it's in
--   this read-only state, you can publish the revision to your products.
--   
--   Finalized revisions can be published through the AWS Data Exchange
--   console or the AWS Marketplace Catalog API, using the StartChangeSet
--   AWS Marketplace Catalog API action. When using the API, revisions are
--   uniquely identified by their ARN.
revisionEntry_finalized :: Lens' RevisionEntry (Maybe Bool)

-- | An optional comment about the revision.
revisionEntry_comment :: Lens' RevisionEntry (Maybe Text)

-- | The date and time that the revision was created, in ISO 8601 format.
revisionEntry_createdAt :: Lens' RevisionEntry UTCTime

-- | The unique identifier for the data set associated with this revision.
revisionEntry_dataSetId :: Lens' RevisionEntry Text

-- | The unique identifier for the revision.
revisionEntry_id :: Lens' RevisionEntry Text

-- | The ARN for the revision.
revisionEntry_arn :: Lens' RevisionEntry Text

-- | The date and time that the revision was last updated, in ISO 8601
--   format.
revisionEntry_updatedAt :: Lens' RevisionEntry UTCTime

-- | Information about the published revision.
--   
--   <i>See:</i> <a>newRevisionPublished</a> smart constructor.
data RevisionPublished
RevisionPublished' :: Text -> RevisionPublished

-- | The data set ID of the published revision.
[$sel:dataSetId:RevisionPublished'] :: RevisionPublished -> Text

-- | Create a value of <a>RevisionPublished</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataSetId:RevisionPublished'</a>,
--   <a>revisionPublished_dataSetId</a> - The data set ID of the published
--   revision.
newRevisionPublished :: Text -> RevisionPublished

-- | The data set ID of the published revision.
revisionPublished_dataSetId :: Lens' RevisionPublished Text

-- | The S3 object that is the asset.
--   
--   <i>See:</i> <a>newS3SnapshotAsset</a> smart constructor.
data S3SnapshotAsset
S3SnapshotAsset' :: Double -> S3SnapshotAsset

-- | The size of the S3 object that is the object.
[$sel:size:S3SnapshotAsset'] :: S3SnapshotAsset -> Double

-- | Create a value of <a>S3SnapshotAsset</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:size:S3SnapshotAsset'</a>, <a>s3SnapshotAsset_size</a> - The
--   size of the S3 object that is the object.
newS3SnapshotAsset :: Double -> S3SnapshotAsset

-- | The size of the S3 object that is the object.
s3SnapshotAsset_size :: Lens' S3SnapshotAsset Double


-- | This operation tags a resource.
module Amazonka.DataExchange.TagResource

-- | The request body for TagResource.
--   
--   <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> HashMap Text Text -> TagResource

-- | An Amazon Resource Name (ARN) that uniquely identifies an AWS
--   resource.
[$sel:resourceArn:TagResource'] :: TagResource -> Text

-- | A label that consists of a customer-defined key and an optional value.
[$sel:tags:TagResource'] :: TagResource -> HashMap Text Text

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   An Amazon Resource Name (ARN) that uniquely identifies an AWS
--   resource.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - A label that
--   consists of a customer-defined key and an optional value.
newTagResource :: Text -> TagResource

-- | An Amazon Resource Name (ARN) that uniquely identifies an AWS
--   resource.
tagResource_resourceArn :: Lens' TagResource Text

-- | A label that consists of a customer-defined key and an optional value.
tagResource_tags :: Lens' TagResource (HashMap Text Text)

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newTagResourceResponse :: TagResourceResponse
instance GHC.Generics.Generic Amazonka.DataExchange.TagResource.TagResource
instance GHC.Show.Show Amazonka.DataExchange.TagResource.TagResource
instance GHC.Read.Read Amazonka.DataExchange.TagResource.TagResource
instance GHC.Classes.Eq Amazonka.DataExchange.TagResource.TagResource
instance GHC.Generics.Generic Amazonka.DataExchange.TagResource.TagResourceResponse
instance GHC.Show.Show Amazonka.DataExchange.TagResource.TagResourceResponse
instance GHC.Read.Read Amazonka.DataExchange.TagResource.TagResourceResponse
instance GHC.Classes.Eq Amazonka.DataExchange.TagResource.TagResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.DataExchange.TagResource.TagResource
instance Control.DeepSeq.NFData Amazonka.DataExchange.TagResource.TagResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.DataExchange.TagResource.TagResource
instance Control.DeepSeq.NFData Amazonka.DataExchange.TagResource.TagResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.DataExchange.TagResource.TagResource
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataExchange.TagResource.TagResource
instance Amazonka.Data.Path.ToPath Amazonka.DataExchange.TagResource.TagResource
instance Amazonka.Data.Query.ToQuery Amazonka.DataExchange.TagResource.TagResource


-- | This operation starts a job.
module Amazonka.DataExchange.StartJob

-- | <i>See:</i> <a>newStartJob</a> smart constructor.
data StartJob
StartJob' :: Text -> StartJob

-- | The unique identifier for a job.
[$sel:jobId:StartJob'] :: StartJob -> Text

-- | Create a value of <a>StartJob</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:StartJob'</a>, <a>startJob_jobId</a> - The unique
--   identifier for a job.
newStartJob :: Text -> StartJob

-- | The unique identifier for a job.
startJob_jobId :: Lens' StartJob Text

-- | <i>See:</i> <a>newStartJobResponse</a> smart constructor.
data StartJobResponse
StartJobResponse' :: Int -> StartJobResponse

-- | The response's http status code.
[$sel:httpStatus:StartJobResponse'] :: StartJobResponse -> Int

-- | Create a value of <a>StartJobResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:StartJobResponse'</a>,
--   <a>startJobResponse_httpStatus</a> - The response's http status code.
newStartJobResponse :: Int -> StartJobResponse

-- | The response's http status code.
startJobResponse_httpStatus :: Lens' StartJobResponse Int
instance GHC.Generics.Generic Amazonka.DataExchange.StartJob.StartJob
instance GHC.Show.Show Amazonka.DataExchange.StartJob.StartJob
instance GHC.Read.Read Amazonka.DataExchange.StartJob.StartJob
instance GHC.Classes.Eq Amazonka.DataExchange.StartJob.StartJob
instance GHC.Generics.Generic Amazonka.DataExchange.StartJob.StartJobResponse
instance GHC.Show.Show Amazonka.DataExchange.StartJob.StartJobResponse
instance GHC.Read.Read Amazonka.DataExchange.StartJob.StartJobResponse
instance GHC.Classes.Eq Amazonka.DataExchange.StartJob.StartJobResponse
instance Amazonka.Types.AWSRequest Amazonka.DataExchange.StartJob.StartJob
instance Control.DeepSeq.NFData Amazonka.DataExchange.StartJob.StartJobResponse
instance Data.Hashable.Class.Hashable Amazonka.DataExchange.StartJob.StartJob
instance Control.DeepSeq.NFData Amazonka.DataExchange.StartJob.StartJob
instance Amazonka.Data.Headers.ToHeaders Amazonka.DataExchange.StartJob.StartJob
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataExchange.StartJob.StartJob
instance Amazonka.Data.Path.ToPath Amazonka.DataExchange.StartJob.StartJob
instance Amazonka.Data.Query.ToQuery Amazonka.DataExchange.StartJob.StartJob


-- | This operation lists the tags on the resource.
module Amazonka.DataExchange.ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | An Amazon Resource Name (ARN) that uniquely identifies an AWS
--   resource.
[$sel:resourceArn:ListTagsForResource'] :: ListTagsForResource -> Text

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - An Amazon Resource Name (ARN)
--   that uniquely identifies an AWS resource.
newListTagsForResource :: Text -> ListTagsForResource

-- | An Amazon Resource Name (ARN) that uniquely identifies an AWS
--   resource.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe (HashMap Text Text) -> Int -> ListTagsForResourceResponse

-- | A label that consists of a customer-defined key and an optional value.
[$sel:tags:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Int

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - A label that consists of a
--   customer-defined key and an optional value.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | A label that consists of a customer-defined key and an optional value.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int
instance GHC.Generics.Generic Amazonka.DataExchange.ListTagsForResource.ListTagsForResource
instance GHC.Show.Show Amazonka.DataExchange.ListTagsForResource.ListTagsForResource
instance GHC.Read.Read Amazonka.DataExchange.ListTagsForResource.ListTagsForResource
instance GHC.Classes.Eq Amazonka.DataExchange.ListTagsForResource.ListTagsForResource
instance GHC.Generics.Generic Amazonka.DataExchange.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Show.Show Amazonka.DataExchange.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Read.Read Amazonka.DataExchange.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Classes.Eq Amazonka.DataExchange.ListTagsForResource.ListTagsForResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.DataExchange.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Amazonka.DataExchange.ListTagsForResource.ListTagsForResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.DataExchange.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Amazonka.DataExchange.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.DataExchange.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Path.ToPath Amazonka.DataExchange.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Query.ToQuery Amazonka.DataExchange.ListTagsForResource.ListTagsForResource


-- | This operation lists a revision's assets sorted alphabetically in
--   descending order.
--   
--   This operation returns paginated results.
module Amazonka.DataExchange.ListRevisionAssets

-- | <i>See:</i> <a>newListRevisionAssets</a> smart constructor.
data ListRevisionAssets
ListRevisionAssets' :: Maybe Text -> Maybe Natural -> Text -> Text -> ListRevisionAssets

-- | The token value retrieved from a previous call to access the next page
--   of results.
[$sel:nextToken:ListRevisionAssets'] :: ListRevisionAssets -> Maybe Text

-- | The maximum number of results returned by a single call.
[$sel:maxResults:ListRevisionAssets'] :: ListRevisionAssets -> Maybe Natural

-- | The unique identifier for a revision.
[$sel:revisionId:ListRevisionAssets'] :: ListRevisionAssets -> Text

-- | The unique identifier for a data set.
[$sel:dataSetId:ListRevisionAssets'] :: ListRevisionAssets -> Text

-- | Create a value of <a>ListRevisionAssets</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListRevisionAssets'</a>,
--   <a>listRevisionAssets_nextToken</a> - The token value retrieved from a
--   previous call to access the next page of results.
--   
--   <a>$sel:maxResults:ListRevisionAssets'</a>,
--   <a>listRevisionAssets_maxResults</a> - The maximum number of results
--   returned by a single call.
--   
--   <a>$sel:revisionId:ListRevisionAssets'</a>,
--   <a>listRevisionAssets_revisionId</a> - The unique identifier for a
--   revision.
--   
--   <a>$sel:dataSetId:ListRevisionAssets'</a>,
--   <a>listRevisionAssets_dataSetId</a> - The unique identifier for a data
--   set.
newListRevisionAssets :: Text -> Text -> ListRevisionAssets

-- | The token value retrieved from a previous call to access the next page
--   of results.
listRevisionAssets_nextToken :: Lens' ListRevisionAssets (Maybe Text)

-- | The maximum number of results returned by a single call.
listRevisionAssets_maxResults :: Lens' ListRevisionAssets (Maybe Natural)

-- | The unique identifier for a revision.
listRevisionAssets_revisionId :: Lens' ListRevisionAssets Text

-- | The unique identifier for a data set.
listRevisionAssets_dataSetId :: Lens' ListRevisionAssets Text

-- | <i>See:</i> <a>newListRevisionAssetsResponse</a> smart constructor.
data ListRevisionAssetsResponse
ListRevisionAssetsResponse' :: Maybe Text -> Maybe [AssetEntry] -> Int -> ListRevisionAssetsResponse

-- | The token value retrieved from a previous call to access the next page
--   of results.
[$sel:nextToken:ListRevisionAssetsResponse'] :: ListRevisionAssetsResponse -> Maybe Text

-- | The asset objects listed by the request.
[$sel:assets:ListRevisionAssetsResponse'] :: ListRevisionAssetsResponse -> Maybe [AssetEntry]

-- | The response's http status code.
[$sel:httpStatus:ListRevisionAssetsResponse'] :: ListRevisionAssetsResponse -> Int

-- | Create a value of <a>ListRevisionAssetsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListRevisionAssets'</a>,
--   <a>listRevisionAssetsResponse_nextToken</a> - The token value
--   retrieved from a previous call to access the next page of results.
--   
--   <a>$sel:assets:ListRevisionAssetsResponse'</a>,
--   <a>listRevisionAssetsResponse_assets</a> - The asset objects listed by
--   the request.
--   
--   <a>$sel:httpStatus:ListRevisionAssetsResponse'</a>,
--   <a>listRevisionAssetsResponse_httpStatus</a> - The response's http
--   status code.
newListRevisionAssetsResponse :: Int -> ListRevisionAssetsResponse

-- | The token value retrieved from a previous call to access the next page
--   of results.
listRevisionAssetsResponse_nextToken :: Lens' ListRevisionAssetsResponse (Maybe Text)

-- | The asset objects listed by the request.
listRevisionAssetsResponse_assets :: Lens' ListRevisionAssetsResponse (Maybe [AssetEntry])

-- | The response's http status code.
listRevisionAssetsResponse_httpStatus :: Lens' ListRevisionAssetsResponse Int
instance GHC.Generics.Generic Amazonka.DataExchange.ListRevisionAssets.ListRevisionAssets
instance GHC.Show.Show Amazonka.DataExchange.ListRevisionAssets.ListRevisionAssets
instance GHC.Read.Read Amazonka.DataExchange.ListRevisionAssets.ListRevisionAssets
instance GHC.Classes.Eq Amazonka.DataExchange.ListRevisionAssets.ListRevisionAssets
instance GHC.Generics.Generic Amazonka.DataExchange.ListRevisionAssets.ListRevisionAssetsResponse
instance GHC.Show.Show Amazonka.DataExchange.ListRevisionAssets.ListRevisionAssetsResponse
instance GHC.Read.Read Amazonka.DataExchange.ListRevisionAssets.ListRevisionAssetsResponse
instance GHC.Classes.Eq Amazonka.DataExchange.ListRevisionAssets.ListRevisionAssetsResponse
instance Amazonka.Types.AWSRequest Amazonka.DataExchange.ListRevisionAssets.ListRevisionAssets
instance Control.DeepSeq.NFData Amazonka.DataExchange.ListRevisionAssets.ListRevisionAssetsResponse
instance Amazonka.Pager.AWSPager Amazonka.DataExchange.ListRevisionAssets.ListRevisionAssets
instance Data.Hashable.Class.Hashable Amazonka.DataExchange.ListRevisionAssets.ListRevisionAssets
instance Control.DeepSeq.NFData Amazonka.DataExchange.ListRevisionAssets.ListRevisionAssets
instance Amazonka.Data.Headers.ToHeaders Amazonka.DataExchange.ListRevisionAssets.ListRevisionAssets
instance Amazonka.Data.Path.ToPath Amazonka.DataExchange.ListRevisionAssets.ListRevisionAssets
instance Amazonka.Data.Query.ToQuery Amazonka.DataExchange.ListRevisionAssets.ListRevisionAssets


-- | This operation lists your jobs sorted by CreatedAt in descending
--   order.
--   
--   This operation returns paginated results.
module Amazonka.DataExchange.ListJobs

-- | <i>See:</i> <a>newListJobs</a> smart constructor.
data ListJobs
ListJobs' :: Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Text -> ListJobs

-- | The token value retrieved from a previous call to access the next page
--   of results.
[$sel:nextToken:ListJobs'] :: ListJobs -> Maybe Text

-- | The unique identifier for a data set.
[$sel:dataSetId:ListJobs'] :: ListJobs -> Maybe Text

-- | The maximum number of results returned by a single call.
[$sel:maxResults:ListJobs'] :: ListJobs -> Maybe Natural

-- | The unique identifier for a revision.
[$sel:revisionId:ListJobs'] :: ListJobs -> Maybe Text

-- | Create a value of <a>ListJobs</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListJobs'</a>, <a>listJobs_nextToken</a> - The token
--   value retrieved from a previous call to access the next page of
--   results.
--   
--   <a>$sel:dataSetId:ListJobs'</a>, <a>listJobs_dataSetId</a> - The
--   unique identifier for a data set.
--   
--   <a>$sel:maxResults:ListJobs'</a>, <a>listJobs_maxResults</a> - The
--   maximum number of results returned by a single call.
--   
--   <a>$sel:revisionId:ListJobs'</a>, <a>listJobs_revisionId</a> - The
--   unique identifier for a revision.
newListJobs :: ListJobs

-- | The token value retrieved from a previous call to access the next page
--   of results.
listJobs_nextToken :: Lens' ListJobs (Maybe Text)

-- | The unique identifier for a data set.
listJobs_dataSetId :: Lens' ListJobs (Maybe Text)

-- | The maximum number of results returned by a single call.
listJobs_maxResults :: Lens' ListJobs (Maybe Natural)

-- | The unique identifier for a revision.
listJobs_revisionId :: Lens' ListJobs (Maybe Text)

-- | <i>See:</i> <a>newListJobsResponse</a> smart constructor.
data ListJobsResponse
ListJobsResponse' :: Maybe Text -> Maybe [JobEntry] -> Int -> ListJobsResponse

-- | The token value retrieved from a previous call to access the next page
--   of results.
[$sel:nextToken:ListJobsResponse'] :: ListJobsResponse -> Maybe Text

-- | The jobs listed by the request.
[$sel:jobs:ListJobsResponse'] :: ListJobsResponse -> Maybe [JobEntry]

-- | The response's http status code.
[$sel:httpStatus:ListJobsResponse'] :: ListJobsResponse -> Int

-- | Create a value of <a>ListJobsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListJobs'</a>, <a>listJobsResponse_nextToken</a> -
--   The token value retrieved from a previous call to access the next page
--   of results.
--   
--   <a>$sel:jobs:ListJobsResponse'</a>, <a>listJobsResponse_jobs</a> - The
--   jobs listed by the request.
--   
--   <a>$sel:httpStatus:ListJobsResponse'</a>,
--   <a>listJobsResponse_httpStatus</a> - The response's http status code.
newListJobsResponse :: Int -> ListJobsResponse

-- | The token value retrieved from a previous call to access the next page
--   of results.
listJobsResponse_nextToken :: Lens' ListJobsResponse (Maybe Text)

-- | The jobs listed by the request.
listJobsResponse_jobs :: Lens' ListJobsResponse (Maybe [JobEntry])

-- | The response's http status code.
listJobsResponse_httpStatus :: Lens' ListJobsResponse Int
instance GHC.Generics.Generic Amazonka.DataExchange.ListJobs.ListJobs
instance GHC.Show.Show Amazonka.DataExchange.ListJobs.ListJobs
instance GHC.Read.Read Amazonka.DataExchange.ListJobs.ListJobs
instance GHC.Classes.Eq Amazonka.DataExchange.ListJobs.ListJobs
instance GHC.Generics.Generic Amazonka.DataExchange.ListJobs.ListJobsResponse
instance GHC.Show.Show Amazonka.DataExchange.ListJobs.ListJobsResponse
instance GHC.Read.Read Amazonka.DataExchange.ListJobs.ListJobsResponse
instance GHC.Classes.Eq Amazonka.DataExchange.ListJobs.ListJobsResponse
instance Amazonka.Types.AWSRequest Amazonka.DataExchange.ListJobs.ListJobs
instance Control.DeepSeq.NFData Amazonka.DataExchange.ListJobs.ListJobsResponse
instance Amazonka.Pager.AWSPager Amazonka.DataExchange.ListJobs.ListJobs
instance Data.Hashable.Class.Hashable Amazonka.DataExchange.ListJobs.ListJobs
instance Control.DeepSeq.NFData Amazonka.DataExchange.ListJobs.ListJobs
instance Amazonka.Data.Headers.ToHeaders Amazonka.DataExchange.ListJobs.ListJobs
instance Amazonka.Data.Path.ToPath Amazonka.DataExchange.ListJobs.ListJobs
instance Amazonka.Data.Query.ToQuery Amazonka.DataExchange.ListJobs.ListJobs


-- | This operation lists your event actions.
--   
--   This operation returns paginated results.
module Amazonka.DataExchange.ListEventActions

-- | <i>See:</i> <a>newListEventActions</a> smart constructor.
data ListEventActions
ListEventActions' :: Maybe Text -> Maybe Text -> Maybe Natural -> ListEventActions

-- | The unique identifier for the event source.
[$sel:eventSourceId:ListEventActions'] :: ListEventActions -> Maybe Text

-- | The token value retrieved from a previous call to access the next page
--   of results.
[$sel:nextToken:ListEventActions'] :: ListEventActions -> Maybe Text

-- | The maximum number of results returned by a single call.
[$sel:maxResults:ListEventActions'] :: ListEventActions -> Maybe Natural

-- | Create a value of <a>ListEventActions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventSourceId:ListEventActions'</a>,
--   <a>listEventActions_eventSourceId</a> - The unique identifier for the
--   event source.
--   
--   <a>$sel:nextToken:ListEventActions'</a>,
--   <a>listEventActions_nextToken</a> - The token value retrieved from a
--   previous call to access the next page of results.
--   
--   <a>$sel:maxResults:ListEventActions'</a>,
--   <a>listEventActions_maxResults</a> - The maximum number of results
--   returned by a single call.
newListEventActions :: ListEventActions

-- | The unique identifier for the event source.
listEventActions_eventSourceId :: Lens' ListEventActions (Maybe Text)

-- | The token value retrieved from a previous call to access the next page
--   of results.
listEventActions_nextToken :: Lens' ListEventActions (Maybe Text)

-- | The maximum number of results returned by a single call.
listEventActions_maxResults :: Lens' ListEventActions (Maybe Natural)

-- | <i>See:</i> <a>newListEventActionsResponse</a> smart constructor.
data ListEventActionsResponse
ListEventActionsResponse' :: Maybe [EventActionEntry] -> Maybe Text -> Int -> ListEventActionsResponse

-- | The event action objects listed by the request.
[$sel:eventActions:ListEventActionsResponse'] :: ListEventActionsResponse -> Maybe [EventActionEntry]

-- | The token value retrieved from a previous call to access the next page
--   of results.
[$sel:nextToken:ListEventActionsResponse'] :: ListEventActionsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListEventActionsResponse'] :: ListEventActionsResponse -> Int

-- | Create a value of <a>ListEventActionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventActions:ListEventActionsResponse'</a>,
--   <a>listEventActionsResponse_eventActions</a> - The event action
--   objects listed by the request.
--   
--   <a>$sel:nextToken:ListEventActions'</a>,
--   <a>listEventActionsResponse_nextToken</a> - The token value retrieved
--   from a previous call to access the next page of results.
--   
--   <a>$sel:httpStatus:ListEventActionsResponse'</a>,
--   <a>listEventActionsResponse_httpStatus</a> - The response's http
--   status code.
newListEventActionsResponse :: Int -> ListEventActionsResponse

-- | The event action objects listed by the request.
listEventActionsResponse_eventActions :: Lens' ListEventActionsResponse (Maybe [EventActionEntry])

-- | The token value retrieved from a previous call to access the next page
--   of results.
listEventActionsResponse_nextToken :: Lens' ListEventActionsResponse (Maybe Text)

-- | The response's http status code.
listEventActionsResponse_httpStatus :: Lens' ListEventActionsResponse Int
instance GHC.Generics.Generic Amazonka.DataExchange.ListEventActions.ListEventActions
instance GHC.Show.Show Amazonka.DataExchange.ListEventActions.ListEventActions
instance GHC.Read.Read Amazonka.DataExchange.ListEventActions.ListEventActions
instance GHC.Classes.Eq Amazonka.DataExchange.ListEventActions.ListEventActions
instance GHC.Generics.Generic Amazonka.DataExchange.ListEventActions.ListEventActionsResponse
instance GHC.Show.Show Amazonka.DataExchange.ListEventActions.ListEventActionsResponse
instance GHC.Read.Read Amazonka.DataExchange.ListEventActions.ListEventActionsResponse
instance GHC.Classes.Eq Amazonka.DataExchange.ListEventActions.ListEventActionsResponse
instance Amazonka.Types.AWSRequest Amazonka.DataExchange.ListEventActions.ListEventActions
instance Control.DeepSeq.NFData Amazonka.DataExchange.ListEventActions.ListEventActionsResponse
instance Amazonka.Pager.AWSPager Amazonka.DataExchange.ListEventActions.ListEventActions
instance Data.Hashable.Class.Hashable Amazonka.DataExchange.ListEventActions.ListEventActions
instance Control.DeepSeq.NFData Amazonka.DataExchange.ListEventActions.ListEventActions
instance Amazonka.Data.Headers.ToHeaders Amazonka.DataExchange.ListEventActions.ListEventActions
instance Amazonka.Data.Path.ToPath Amazonka.DataExchange.ListEventActions.ListEventActions
instance Amazonka.Data.Query.ToQuery Amazonka.DataExchange.ListEventActions.ListEventActions


-- | This operation lists your data sets. When listing by origin OWNED,
--   results are sorted by CreatedAt in descending order. When listing by
--   origin ENTITLED, there is no order and the maxResults parameter is
--   ignored.
--   
--   This operation returns paginated results.
module Amazonka.DataExchange.ListDataSets

-- | <i>See:</i> <a>newListDataSets</a> smart constructor.
data ListDataSets
ListDataSets' :: Maybe Text -> Maybe Text -> Maybe Natural -> ListDataSets

-- | A property that defines the data set as OWNED by the account (for
--   providers) or ENTITLED to the account (for subscribers).
[$sel:origin:ListDataSets'] :: ListDataSets -> Maybe Text

-- | The token value retrieved from a previous call to access the next page
--   of results.
[$sel:nextToken:ListDataSets'] :: ListDataSets -> Maybe Text

-- | The maximum number of results returned by a single call.
[$sel:maxResults:ListDataSets'] :: ListDataSets -> Maybe Natural

-- | Create a value of <a>ListDataSets</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:origin:ListDataSets'</a>, <a>listDataSets_origin</a> - A
--   property that defines the data set as OWNED by the account (for
--   providers) or ENTITLED to the account (for subscribers).
--   
--   <a>$sel:nextToken:ListDataSets'</a>, <a>listDataSets_nextToken</a> -
--   The token value retrieved from a previous call to access the next page
--   of results.
--   
--   <a>$sel:maxResults:ListDataSets'</a>, <a>listDataSets_maxResults</a> -
--   The maximum number of results returned by a single call.
newListDataSets :: ListDataSets

-- | A property that defines the data set as OWNED by the account (for
--   providers) or ENTITLED to the account (for subscribers).
listDataSets_origin :: Lens' ListDataSets (Maybe Text)

-- | The token value retrieved from a previous call to access the next page
--   of results.
listDataSets_nextToken :: Lens' ListDataSets (Maybe Text)

-- | The maximum number of results returned by a single call.
listDataSets_maxResults :: Lens' ListDataSets (Maybe Natural)

-- | <i>See:</i> <a>newListDataSetsResponse</a> smart constructor.
data ListDataSetsResponse
ListDataSetsResponse' :: Maybe Text -> Maybe [DataSetEntry] -> Int -> ListDataSetsResponse

-- | The token value retrieved from a previous call to access the next page
--   of results.
[$sel:nextToken:ListDataSetsResponse'] :: ListDataSetsResponse -> Maybe Text

-- | The data set objects listed by the request.
[$sel:dataSets:ListDataSetsResponse'] :: ListDataSetsResponse -> Maybe [DataSetEntry]

-- | The response's http status code.
[$sel:httpStatus:ListDataSetsResponse'] :: ListDataSetsResponse -> Int

-- | Create a value of <a>ListDataSetsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDataSets'</a>,
--   <a>listDataSetsResponse_nextToken</a> - The token value retrieved from
--   a previous call to access the next page of results.
--   
--   <a>$sel:dataSets:ListDataSetsResponse'</a>,
--   <a>listDataSetsResponse_dataSets</a> - The data set objects listed by
--   the request.
--   
--   <a>$sel:httpStatus:ListDataSetsResponse'</a>,
--   <a>listDataSetsResponse_httpStatus</a> - The response's http status
--   code.
newListDataSetsResponse :: Int -> ListDataSetsResponse

-- | The token value retrieved from a previous call to access the next page
--   of results.
listDataSetsResponse_nextToken :: Lens' ListDataSetsResponse (Maybe Text)

-- | The data set objects listed by the request.
listDataSetsResponse_dataSets :: Lens' ListDataSetsResponse (Maybe [DataSetEntry])

-- | The response's http status code.
listDataSetsResponse_httpStatus :: Lens' ListDataSetsResponse Int
instance GHC.Generics.Generic Amazonka.DataExchange.ListDataSets.ListDataSets
instance GHC.Show.Show Amazonka.DataExchange.ListDataSets.ListDataSets
instance GHC.Read.Read Amazonka.DataExchange.ListDataSets.ListDataSets
instance GHC.Classes.Eq Amazonka.DataExchange.ListDataSets.ListDataSets
instance GHC.Generics.Generic Amazonka.DataExchange.ListDataSets.ListDataSetsResponse
instance GHC.Show.Show Amazonka.DataExchange.ListDataSets.ListDataSetsResponse
instance GHC.Read.Read Amazonka.DataExchange.ListDataSets.ListDataSetsResponse
instance GHC.Classes.Eq Amazonka.DataExchange.ListDataSets.ListDataSetsResponse
instance Amazonka.Types.AWSRequest Amazonka.DataExchange.ListDataSets.ListDataSets
instance Control.DeepSeq.NFData Amazonka.DataExchange.ListDataSets.ListDataSetsResponse
instance Amazonka.Pager.AWSPager Amazonka.DataExchange.ListDataSets.ListDataSets
instance Data.Hashable.Class.Hashable Amazonka.DataExchange.ListDataSets.ListDataSets
instance Control.DeepSeq.NFData Amazonka.DataExchange.ListDataSets.ListDataSets
instance Amazonka.Data.Headers.ToHeaders Amazonka.DataExchange.ListDataSets.ListDataSets
instance Amazonka.Data.Path.ToPath Amazonka.DataExchange.ListDataSets.ListDataSets
instance Amazonka.Data.Query.ToQuery Amazonka.DataExchange.ListDataSets.ListDataSets


-- | This operation lists a data set's revisions sorted by CreatedAt in
--   descending order.
--   
--   This operation returns paginated results.
module Amazonka.DataExchange.ListDataSetRevisions

-- | <i>See:</i> <a>newListDataSetRevisions</a> smart constructor.
data ListDataSetRevisions
ListDataSetRevisions' :: Maybe Text -> Maybe Natural -> Text -> ListDataSetRevisions

-- | The token value retrieved from a previous call to access the next page
--   of results.
[$sel:nextToken:ListDataSetRevisions'] :: ListDataSetRevisions -> Maybe Text

-- | The maximum number of results returned by a single call.
[$sel:maxResults:ListDataSetRevisions'] :: ListDataSetRevisions -> Maybe Natural

-- | The unique identifier for a data set.
[$sel:dataSetId:ListDataSetRevisions'] :: ListDataSetRevisions -> Text

-- | Create a value of <a>ListDataSetRevisions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDataSetRevisions'</a>,
--   <a>listDataSetRevisions_nextToken</a> - The token value retrieved from
--   a previous call to access the next page of results.
--   
--   <a>$sel:maxResults:ListDataSetRevisions'</a>,
--   <a>listDataSetRevisions_maxResults</a> - The maximum number of results
--   returned by a single call.
--   
--   <a>$sel:dataSetId:ListDataSetRevisions'</a>,
--   <a>listDataSetRevisions_dataSetId</a> - The unique identifier for a
--   data set.
newListDataSetRevisions :: Text -> ListDataSetRevisions

-- | The token value retrieved from a previous call to access the next page
--   of results.
listDataSetRevisions_nextToken :: Lens' ListDataSetRevisions (Maybe Text)

-- | The maximum number of results returned by a single call.
listDataSetRevisions_maxResults :: Lens' ListDataSetRevisions (Maybe Natural)

-- | The unique identifier for a data set.
listDataSetRevisions_dataSetId :: Lens' ListDataSetRevisions Text

-- | <i>See:</i> <a>newListDataSetRevisionsResponse</a> smart constructor.
data ListDataSetRevisionsResponse
ListDataSetRevisionsResponse' :: Maybe Text -> Maybe [RevisionEntry] -> Int -> ListDataSetRevisionsResponse

-- | The token value retrieved from a previous call to access the next page
--   of results.
[$sel:nextToken:ListDataSetRevisionsResponse'] :: ListDataSetRevisionsResponse -> Maybe Text

-- | The asset objects listed by the request.
[$sel:revisions:ListDataSetRevisionsResponse'] :: ListDataSetRevisionsResponse -> Maybe [RevisionEntry]

-- | The response's http status code.
[$sel:httpStatus:ListDataSetRevisionsResponse'] :: ListDataSetRevisionsResponse -> Int

-- | Create a value of <a>ListDataSetRevisionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDataSetRevisions'</a>,
--   <a>listDataSetRevisionsResponse_nextToken</a> - The token value
--   retrieved from a previous call to access the next page of results.
--   
--   <a>$sel:revisions:ListDataSetRevisionsResponse'</a>,
--   <a>listDataSetRevisionsResponse_revisions</a> - The asset objects
--   listed by the request.
--   
--   <a>$sel:httpStatus:ListDataSetRevisionsResponse'</a>,
--   <a>listDataSetRevisionsResponse_httpStatus</a> - The response's http
--   status code.
newListDataSetRevisionsResponse :: Int -> ListDataSetRevisionsResponse

-- | The token value retrieved from a previous call to access the next page
--   of results.
listDataSetRevisionsResponse_nextToken :: Lens' ListDataSetRevisionsResponse (Maybe Text)

-- | The asset objects listed by the request.
listDataSetRevisionsResponse_revisions :: Lens' ListDataSetRevisionsResponse (Maybe [RevisionEntry])

-- | The response's http status code.
listDataSetRevisionsResponse_httpStatus :: Lens' ListDataSetRevisionsResponse Int
instance GHC.Generics.Generic Amazonka.DataExchange.ListDataSetRevisions.ListDataSetRevisions
instance GHC.Show.Show Amazonka.DataExchange.ListDataSetRevisions.ListDataSetRevisions
instance GHC.Read.Read Amazonka.DataExchange.ListDataSetRevisions.ListDataSetRevisions
instance GHC.Classes.Eq Amazonka.DataExchange.ListDataSetRevisions.ListDataSetRevisions
instance GHC.Generics.Generic Amazonka.DataExchange.ListDataSetRevisions.ListDataSetRevisionsResponse
instance GHC.Show.Show Amazonka.DataExchange.ListDataSetRevisions.ListDataSetRevisionsResponse
instance GHC.Read.Read Amazonka.DataExchange.ListDataSetRevisions.ListDataSetRevisionsResponse
instance GHC.Classes.Eq Amazonka.DataExchange.ListDataSetRevisions.ListDataSetRevisionsResponse
instance Amazonka.Types.AWSRequest Amazonka.DataExchange.ListDataSetRevisions.ListDataSetRevisions
instance Control.DeepSeq.NFData Amazonka.DataExchange.ListDataSetRevisions.ListDataSetRevisionsResponse
instance Amazonka.Pager.AWSPager Amazonka.DataExchange.ListDataSetRevisions.ListDataSetRevisions
instance Data.Hashable.Class.Hashable Amazonka.DataExchange.ListDataSetRevisions.ListDataSetRevisions
instance Control.DeepSeq.NFData Amazonka.DataExchange.ListDataSetRevisions.ListDataSetRevisions
instance Amazonka.Data.Headers.ToHeaders Amazonka.DataExchange.ListDataSetRevisions.ListDataSetRevisions
instance Amazonka.Data.Path.ToPath Amazonka.DataExchange.ListDataSetRevisions.ListDataSetRevisions
instance Amazonka.Data.Query.ToQuery Amazonka.DataExchange.ListDataSetRevisions.ListDataSetRevisions


-- | This operation returns information about a revision.
module Amazonka.DataExchange.GetRevision

-- | <i>See:</i> <a>newGetRevision</a> smart constructor.
data GetRevision
GetRevision' :: Text -> Text -> GetRevision

-- | The unique identifier for a revision.
[$sel:revisionId:GetRevision'] :: GetRevision -> Text

-- | The unique identifier for a data set.
[$sel:dataSetId:GetRevision'] :: GetRevision -> Text

-- | Create a value of <a>GetRevision</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:revisionId:GetRevision'</a>, <a>getRevision_revisionId</a> -
--   The unique identifier for a revision.
--   
--   <a>$sel:dataSetId:GetRevision'</a>, <a>getRevision_dataSetId</a> - The
--   unique identifier for a data set.
newGetRevision :: Text -> Text -> GetRevision

-- | The unique identifier for a revision.
getRevision_revisionId :: Lens' GetRevision Text

-- | The unique identifier for a data set.
getRevision_dataSetId :: Lens' GetRevision Text

-- | <i>See:</i> <a>newGetRevisionResponse</a> smart constructor.
data GetRevisionResponse
GetRevisionResponse' :: Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe (HashMap Text Text) -> Int -> GetRevisionResponse

-- | The ARN for the revision.
[$sel:arn:GetRevisionResponse'] :: GetRevisionResponse -> Maybe Text

-- | The date and time that the revision was created, in ISO 8601 format.
[$sel:createdAt:GetRevisionResponse'] :: GetRevisionResponse -> Maybe POSIX

-- | The revision ID of the owned revision corresponding to the entitled
--   revision being viewed. This parameter is returned when a revision
--   owner is viewing the entitled copy of its owned revision.
[$sel:sourceId:GetRevisionResponse'] :: GetRevisionResponse -> Maybe Text

-- | To publish a revision to a data set in a product, the revision must
--   first be finalized. Finalizing a revision tells AWS Data Exchange that
--   your changes to the assets in the revision are complete. After it's in
--   this read-only state, you can publish the revision to your products.
--   
--   Finalized revisions can be published through the AWS Data Exchange
--   console or the AWS Marketplace Catalog API, using the StartChangeSet
--   AWS Marketplace Catalog API action. When using the API, revisions are
--   uniquely identified by their ARN.
[$sel:finalized:GetRevisionResponse'] :: GetRevisionResponse -> Maybe Bool

-- | The unique identifier for the data set associated with this revision.
[$sel:dataSetId:GetRevisionResponse'] :: GetRevisionResponse -> Maybe Text

-- | The unique identifier for the revision.
[$sel:id:GetRevisionResponse'] :: GetRevisionResponse -> Maybe Text

-- | The date and time that the revision was last updated, in ISO 8601
--   format.
[$sel:updatedAt:GetRevisionResponse'] :: GetRevisionResponse -> Maybe POSIX

-- | An optional comment about the revision.
[$sel:comment:GetRevisionResponse'] :: GetRevisionResponse -> Maybe Text

-- | The tags for the revision.
[$sel:tags:GetRevisionResponse'] :: GetRevisionResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:GetRevisionResponse'] :: GetRevisionResponse -> Int

-- | Create a value of <a>GetRevisionResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:GetRevisionResponse'</a>, <a>getRevisionResponse_arn</a> -
--   The ARN for the revision.
--   
--   <a>$sel:createdAt:GetRevisionResponse'</a>,
--   <a>getRevisionResponse_createdAt</a> - The date and time that the
--   revision was created, in ISO 8601 format.
--   
--   <a>$sel:sourceId:GetRevisionResponse'</a>,
--   <a>getRevisionResponse_sourceId</a> - The revision ID of the owned
--   revision corresponding to the entitled revision being viewed. This
--   parameter is returned when a revision owner is viewing the entitled
--   copy of its owned revision.
--   
--   <a>$sel:finalized:GetRevisionResponse'</a>,
--   <a>getRevisionResponse_finalized</a> - To publish a revision to a data
--   set in a product, the revision must first be finalized. Finalizing a
--   revision tells AWS Data Exchange that your changes to the assets in
--   the revision are complete. After it's in this read-only state, you can
--   publish the revision to your products.
--   
--   Finalized revisions can be published through the AWS Data Exchange
--   console or the AWS Marketplace Catalog API, using the StartChangeSet
--   AWS Marketplace Catalog API action. When using the API, revisions are
--   uniquely identified by their ARN.
--   
--   <a>$sel:dataSetId:GetRevision'</a>,
--   <a>getRevisionResponse_dataSetId</a> - The unique identifier for the
--   data set associated with this revision.
--   
--   <a>$sel:id:GetRevisionResponse'</a>, <a>getRevisionResponse_id</a> -
--   The unique identifier for the revision.
--   
--   <a>$sel:updatedAt:GetRevisionResponse'</a>,
--   <a>getRevisionResponse_updatedAt</a> - The date and time that the
--   revision was last updated, in ISO 8601 format.
--   
--   <a>$sel:comment:GetRevisionResponse'</a>,
--   <a>getRevisionResponse_comment</a> - An optional comment about the
--   revision.
--   
--   <a>$sel:tags:GetRevisionResponse'</a>, <a>getRevisionResponse_tags</a>
--   - The tags for the revision.
--   
--   <a>$sel:httpStatus:GetRevisionResponse'</a>,
--   <a>getRevisionResponse_httpStatus</a> - The response's http status
--   code.
newGetRevisionResponse :: Int -> GetRevisionResponse

-- | The ARN for the revision.
getRevisionResponse_arn :: Lens' GetRevisionResponse (Maybe Text)

-- | The date and time that the revision was created, in ISO 8601 format.
getRevisionResponse_createdAt :: Lens' GetRevisionResponse (Maybe UTCTime)

-- | The revision ID of the owned revision corresponding to the entitled
--   revision being viewed. This parameter is returned when a revision
--   owner is viewing the entitled copy of its owned revision.
getRevisionResponse_sourceId :: Lens' GetRevisionResponse (Maybe Text)

-- | To publish a revision to a data set in a product, the revision must
--   first be finalized. Finalizing a revision tells AWS Data Exchange that
--   your changes to the assets in the revision are complete. After it's in
--   this read-only state, you can publish the revision to your products.
--   
--   Finalized revisions can be published through the AWS Data Exchange
--   console or the AWS Marketplace Catalog API, using the StartChangeSet
--   AWS Marketplace Catalog API action. When using the API, revisions are
--   uniquely identified by their ARN.
getRevisionResponse_finalized :: Lens' GetRevisionResponse (Maybe Bool)

-- | The unique identifier for the data set associated with this revision.
getRevisionResponse_dataSetId :: Lens' GetRevisionResponse (Maybe Text)

-- | The unique identifier for the revision.
getRevisionResponse_id :: Lens' GetRevisionResponse (Maybe Text)

-- | The date and time that the revision was last updated, in ISO 8601
--   format.
getRevisionResponse_updatedAt :: Lens' GetRevisionResponse (Maybe UTCTime)

-- | An optional comment about the revision.
getRevisionResponse_comment :: Lens' GetRevisionResponse (Maybe Text)

-- | The tags for the revision.
getRevisionResponse_tags :: Lens' GetRevisionResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
getRevisionResponse_httpStatus :: Lens' GetRevisionResponse Int
instance GHC.Generics.Generic Amazonka.DataExchange.GetRevision.GetRevision
instance GHC.Show.Show Amazonka.DataExchange.GetRevision.GetRevision
instance GHC.Read.Read Amazonka.DataExchange.GetRevision.GetRevision
instance GHC.Classes.Eq Amazonka.DataExchange.GetRevision.GetRevision
instance GHC.Generics.Generic Amazonka.DataExchange.GetRevision.GetRevisionResponse
instance GHC.Show.Show Amazonka.DataExchange.GetRevision.GetRevisionResponse
instance GHC.Read.Read Amazonka.DataExchange.GetRevision.GetRevisionResponse
instance GHC.Classes.Eq Amazonka.DataExchange.GetRevision.GetRevisionResponse
instance Amazonka.Types.AWSRequest Amazonka.DataExchange.GetRevision.GetRevision
instance Control.DeepSeq.NFData Amazonka.DataExchange.GetRevision.GetRevisionResponse
instance Data.Hashable.Class.Hashable Amazonka.DataExchange.GetRevision.GetRevision
instance Control.DeepSeq.NFData Amazonka.DataExchange.GetRevision.GetRevision
instance Amazonka.Data.Headers.ToHeaders Amazonka.DataExchange.GetRevision.GetRevision
instance Amazonka.Data.Path.ToPath Amazonka.DataExchange.GetRevision.GetRevision
instance Amazonka.Data.Query.ToQuery Amazonka.DataExchange.GetRevision.GetRevision


-- | This operation returns information about a job.
module Amazonka.DataExchange.GetJob

-- | <i>See:</i> <a>newGetJob</a> smart constructor.
data GetJob
GetJob' :: Text -> GetJob

-- | The unique identifier for a job.
[$sel:jobId:GetJob'] :: GetJob -> Text

-- | Create a value of <a>GetJob</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:GetJob'</a>, <a>getJob_jobId</a> - The unique identifier
--   for a job.
newGetJob :: Text -> GetJob

-- | The unique identifier for a job.
getJob_jobId :: Lens' GetJob Text

-- | <i>See:</i> <a>newGetJobResponse</a> smart constructor.
data GetJobResponse
GetJobResponse' :: Maybe State -> Maybe Text -> Maybe POSIX -> Maybe ResponseDetails -> Maybe Text -> Maybe Type -> Maybe POSIX -> Maybe [JobError] -> Int -> GetJobResponse

-- | The state of the job.
[$sel:state:GetJobResponse'] :: GetJobResponse -> Maybe State

-- | The ARN for the job.
[$sel:arn:GetJobResponse'] :: GetJobResponse -> Maybe Text

-- | The date and time that the job was created, in ISO 8601 format.
[$sel:createdAt:GetJobResponse'] :: GetJobResponse -> Maybe POSIX

-- | Details about the job.
[$sel:details:GetJobResponse'] :: GetJobResponse -> Maybe ResponseDetails

-- | The unique identifier for the job.
[$sel:id:GetJobResponse'] :: GetJobResponse -> Maybe Text

-- | The job type.
[$sel:type':GetJobResponse'] :: GetJobResponse -> Maybe Type

-- | The date and time that the job was last updated, in ISO 8601 format.
[$sel:updatedAt:GetJobResponse'] :: GetJobResponse -> Maybe POSIX

-- | The errors associated with jobs.
[$sel:errors:GetJobResponse'] :: GetJobResponse -> Maybe [JobError]

-- | The response's http status code.
[$sel:httpStatus:GetJobResponse'] :: GetJobResponse -> Int

-- | Create a value of <a>GetJobResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:GetJobResponse'</a>, <a>getJobResponse_state</a> - The
--   state of the job.
--   
--   <a>$sel:arn:GetJobResponse'</a>, <a>getJobResponse_arn</a> - The ARN
--   for the job.
--   
--   <a>$sel:createdAt:GetJobResponse'</a>, <a>getJobResponse_createdAt</a>
--   - The date and time that the job was created, in ISO 8601 format.
--   
--   <a>$sel:details:GetJobResponse'</a>, <a>getJobResponse_details</a> -
--   Details about the job.
--   
--   <a>$sel:id:GetJobResponse'</a>, <a>getJobResponse_id</a> - The unique
--   identifier for the job.
--   
--   <a>$sel:type':GetJobResponse'</a>, <a>getJobResponse_type</a> - The
--   job type.
--   
--   <a>$sel:updatedAt:GetJobResponse'</a>, <a>getJobResponse_updatedAt</a>
--   - The date and time that the job was last updated, in ISO 8601 format.
--   
--   <a>$sel:errors:GetJobResponse'</a>, <a>getJobResponse_errors</a> - The
--   errors associated with jobs.
--   
--   <a>$sel:httpStatus:GetJobResponse'</a>,
--   <a>getJobResponse_httpStatus</a> - The response's http status code.
newGetJobResponse :: Int -> GetJobResponse

-- | The state of the job.
getJobResponse_state :: Lens' GetJobResponse (Maybe State)

-- | The ARN for the job.
getJobResponse_arn :: Lens' GetJobResponse (Maybe Text)

-- | The date and time that the job was created, in ISO 8601 format.
getJobResponse_createdAt :: Lens' GetJobResponse (Maybe UTCTime)

-- | Details about the job.
getJobResponse_details :: Lens' GetJobResponse (Maybe ResponseDetails)

-- | The unique identifier for the job.
getJobResponse_id :: Lens' GetJobResponse (Maybe Text)

-- | The job type.
getJobResponse_type :: Lens' GetJobResponse (Maybe Type)

-- | The date and time that the job was last updated, in ISO 8601 format.
getJobResponse_updatedAt :: Lens' GetJobResponse (Maybe UTCTime)

-- | The errors associated with jobs.
getJobResponse_errors :: Lens' GetJobResponse (Maybe [JobError])

-- | The response's http status code.
getJobResponse_httpStatus :: Lens' GetJobResponse Int
instance GHC.Generics.Generic Amazonka.DataExchange.GetJob.GetJob
instance GHC.Show.Show Amazonka.DataExchange.GetJob.GetJob
instance GHC.Read.Read Amazonka.DataExchange.GetJob.GetJob
instance GHC.Classes.Eq Amazonka.DataExchange.GetJob.GetJob
instance GHC.Generics.Generic Amazonka.DataExchange.GetJob.GetJobResponse
instance GHC.Show.Show Amazonka.DataExchange.GetJob.GetJobResponse
instance GHC.Read.Read Amazonka.DataExchange.GetJob.GetJobResponse
instance GHC.Classes.Eq Amazonka.DataExchange.GetJob.GetJobResponse
instance Amazonka.Types.AWSRequest Amazonka.DataExchange.GetJob.GetJob
instance Control.DeepSeq.NFData Amazonka.DataExchange.GetJob.GetJobResponse
instance Data.Hashable.Class.Hashable Amazonka.DataExchange.GetJob.GetJob
instance Control.DeepSeq.NFData Amazonka.DataExchange.GetJob.GetJob
instance Amazonka.Data.Headers.ToHeaders Amazonka.DataExchange.GetJob.GetJob
instance Amazonka.Data.Path.ToPath Amazonka.DataExchange.GetJob.GetJob
instance Amazonka.Data.Query.ToQuery Amazonka.DataExchange.GetJob.GetJob


-- | This operation retrieves information about an event action.
module Amazonka.DataExchange.GetEventAction

-- | <i>See:</i> <a>newGetEventAction</a> smart constructor.
data GetEventAction
GetEventAction' :: Text -> GetEventAction

-- | The unique identifier for the event action.
[$sel:eventActionId:GetEventAction'] :: GetEventAction -> Text

-- | Create a value of <a>GetEventAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventActionId:GetEventAction'</a>,
--   <a>getEventAction_eventActionId</a> - The unique identifier for the
--   event action.
newGetEventAction :: Text -> GetEventAction

-- | The unique identifier for the event action.
getEventAction_eventActionId :: Lens' GetEventAction Text

-- | <i>See:</i> <a>newGetEventActionResponse</a> smart constructor.
data GetEventActionResponse
GetEventActionResponse' :: Maybe Event -> Maybe Text -> Maybe POSIX -> Maybe Action -> Maybe Text -> Maybe POSIX -> Int -> GetEventActionResponse

-- | What occurs to start an action.
[$sel:event:GetEventActionResponse'] :: GetEventActionResponse -> Maybe Event

-- | The ARN for the event action.
[$sel:arn:GetEventActionResponse'] :: GetEventActionResponse -> Maybe Text

-- | The date and time that the event action was created, in ISO 8601
--   format.
[$sel:createdAt:GetEventActionResponse'] :: GetEventActionResponse -> Maybe POSIX

-- | What occurs after a certain event.
[$sel:action:GetEventActionResponse'] :: GetEventActionResponse -> Maybe Action

-- | The unique identifier for the event action.
[$sel:id:GetEventActionResponse'] :: GetEventActionResponse -> Maybe Text

-- | The date and time that the event action was last updated, in ISO 8601
--   format.
[$sel:updatedAt:GetEventActionResponse'] :: GetEventActionResponse -> Maybe POSIX

-- | The response's http status code.
[$sel:httpStatus:GetEventActionResponse'] :: GetEventActionResponse -> Int

-- | Create a value of <a>GetEventActionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:event:GetEventActionResponse'</a>,
--   <a>getEventActionResponse_event</a> - What occurs to start an action.
--   
--   <a>$sel:arn:GetEventActionResponse'</a>,
--   <a>getEventActionResponse_arn</a> - The ARN for the event action.
--   
--   <a>$sel:createdAt:GetEventActionResponse'</a>,
--   <a>getEventActionResponse_createdAt</a> - The date and time that the
--   event action was created, in ISO 8601 format.
--   
--   <a>$sel:action:GetEventActionResponse'</a>,
--   <a>getEventActionResponse_action</a> - What occurs after a certain
--   event.
--   
--   <a>$sel:id:GetEventActionResponse'</a>,
--   <a>getEventActionResponse_id</a> - The unique identifier for the event
--   action.
--   
--   <a>$sel:updatedAt:GetEventActionResponse'</a>,
--   <a>getEventActionResponse_updatedAt</a> - The date and time that the
--   event action was last updated, in ISO 8601 format.
--   
--   <a>$sel:httpStatus:GetEventActionResponse'</a>,
--   <a>getEventActionResponse_httpStatus</a> - The response's http status
--   code.
newGetEventActionResponse :: Int -> GetEventActionResponse

-- | What occurs to start an action.
getEventActionResponse_event :: Lens' GetEventActionResponse (Maybe Event)

-- | The ARN for the event action.
getEventActionResponse_arn :: Lens' GetEventActionResponse (Maybe Text)

-- | The date and time that the event action was created, in ISO 8601
--   format.
getEventActionResponse_createdAt :: Lens' GetEventActionResponse (Maybe UTCTime)

-- | What occurs after a certain event.
getEventActionResponse_action :: Lens' GetEventActionResponse (Maybe Action)

-- | The unique identifier for the event action.
getEventActionResponse_id :: Lens' GetEventActionResponse (Maybe Text)

-- | The date and time that the event action was last updated, in ISO 8601
--   format.
getEventActionResponse_updatedAt :: Lens' GetEventActionResponse (Maybe UTCTime)

-- | The response's http status code.
getEventActionResponse_httpStatus :: Lens' GetEventActionResponse Int
instance GHC.Generics.Generic Amazonka.DataExchange.GetEventAction.GetEventAction
instance GHC.Show.Show Amazonka.DataExchange.GetEventAction.GetEventAction
instance GHC.Read.Read Amazonka.DataExchange.GetEventAction.GetEventAction
instance GHC.Classes.Eq Amazonka.DataExchange.GetEventAction.GetEventAction
instance GHC.Generics.Generic Amazonka.DataExchange.GetEventAction.GetEventActionResponse
instance GHC.Show.Show Amazonka.DataExchange.GetEventAction.GetEventActionResponse
instance GHC.Read.Read Amazonka.DataExchange.GetEventAction.GetEventActionResponse
instance GHC.Classes.Eq Amazonka.DataExchange.GetEventAction.GetEventActionResponse
instance Amazonka.Types.AWSRequest Amazonka.DataExchange.GetEventAction.GetEventAction
instance Control.DeepSeq.NFData Amazonka.DataExchange.GetEventAction.GetEventActionResponse
instance Data.Hashable.Class.Hashable Amazonka.DataExchange.GetEventAction.GetEventAction
instance Control.DeepSeq.NFData Amazonka.DataExchange.GetEventAction.GetEventAction
instance Amazonka.Data.Headers.ToHeaders Amazonka.DataExchange.GetEventAction.GetEventAction
instance Amazonka.Data.Path.ToPath Amazonka.DataExchange.GetEventAction.GetEventAction
instance Amazonka.Data.Query.ToQuery Amazonka.DataExchange.GetEventAction.GetEventAction


-- | This operation returns information about a data set.
module Amazonka.DataExchange.GetDataSet

-- | <i>See:</i> <a>newGetDataSet</a> smart constructor.
data GetDataSet
GetDataSet' :: Text -> GetDataSet

-- | The unique identifier for a data set.
[$sel:dataSetId:GetDataSet'] :: GetDataSet -> Text

-- | Create a value of <a>GetDataSet</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataSetId:GetDataSet'</a>, <a>getDataSet_dataSetId</a> - The
--   unique identifier for a data set.
newGetDataSet :: Text -> GetDataSet

-- | The unique identifier for a data set.
getDataSet_dataSetId :: Lens' GetDataSet Text

-- | <i>See:</i> <a>newGetDataSetResponse</a> smart constructor.
data GetDataSetResponse
GetDataSetResponse' :: Maybe Origin -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe OriginDetails -> Maybe Text -> Maybe Text -> Maybe AssetType -> Maybe POSIX -> Maybe Text -> Maybe (HashMap Text Text) -> Int -> GetDataSetResponse

-- | A property that defines the data set as OWNED by the account (for
--   providers) or ENTITLED to the account (for subscribers).
[$sel:origin:GetDataSetResponse'] :: GetDataSetResponse -> Maybe Origin

-- | The ARN for the data set.
[$sel:arn:GetDataSetResponse'] :: GetDataSetResponse -> Maybe Text

-- | The date and time that the data set was created, in ISO 8601 format.
[$sel:createdAt:GetDataSetResponse'] :: GetDataSetResponse -> Maybe POSIX

-- | The data set ID of the owned data set corresponding to the entitled
--   data set being viewed. This parameter is returned when a data set
--   owner is viewing the entitled copy of its owned data set.
[$sel:sourceId:GetDataSetResponse'] :: GetDataSetResponse -> Maybe Text

-- | If the origin of this data set is ENTITLED, includes the details for
--   the product on AWS Marketplace.
[$sel:originDetails:GetDataSetResponse'] :: GetDataSetResponse -> Maybe OriginDetails

-- | The name of the data set.
[$sel:name:GetDataSetResponse'] :: GetDataSetResponse -> Maybe Text

-- | The unique identifier for the data set.
[$sel:id:GetDataSetResponse'] :: GetDataSetResponse -> Maybe Text

-- | The type of asset that is added to a data set.
[$sel:assetType:GetDataSetResponse'] :: GetDataSetResponse -> Maybe AssetType

-- | The date and time that the data set was last updated, in ISO 8601
--   format.
[$sel:updatedAt:GetDataSetResponse'] :: GetDataSetResponse -> Maybe POSIX

-- | The description for the data set.
[$sel:description:GetDataSetResponse'] :: GetDataSetResponse -> Maybe Text

-- | The tags for the data set.
[$sel:tags:GetDataSetResponse'] :: GetDataSetResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:GetDataSetResponse'] :: GetDataSetResponse -> Int

-- | Create a value of <a>GetDataSetResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:origin:GetDataSetResponse'</a>,
--   <a>getDataSetResponse_origin</a> - A property that defines the data
--   set as OWNED by the account (for providers) or ENTITLED to the account
--   (for subscribers).
--   
--   <a>$sel:arn:GetDataSetResponse'</a>, <a>getDataSetResponse_arn</a> -
--   The ARN for the data set.
--   
--   <a>$sel:createdAt:GetDataSetResponse'</a>,
--   <a>getDataSetResponse_createdAt</a> - The date and time that the data
--   set was created, in ISO 8601 format.
--   
--   <a>$sel:sourceId:GetDataSetResponse'</a>,
--   <a>getDataSetResponse_sourceId</a> - The data set ID of the owned data
--   set corresponding to the entitled data set being viewed. This
--   parameter is returned when a data set owner is viewing the entitled
--   copy of its owned data set.
--   
--   <a>$sel:originDetails:GetDataSetResponse'</a>,
--   <a>getDataSetResponse_originDetails</a> - If the origin of this data
--   set is ENTITLED, includes the details for the product on AWS
--   Marketplace.
--   
--   <a>$sel:name:GetDataSetResponse'</a>, <a>getDataSetResponse_name</a> -
--   The name of the data set.
--   
--   <a>$sel:id:GetDataSetResponse'</a>, <a>getDataSetResponse_id</a> - The
--   unique identifier for the data set.
--   
--   <a>$sel:assetType:GetDataSetResponse'</a>,
--   <a>getDataSetResponse_assetType</a> - The type of asset that is added
--   to a data set.
--   
--   <a>$sel:updatedAt:GetDataSetResponse'</a>,
--   <a>getDataSetResponse_updatedAt</a> - The date and time that the data
--   set was last updated, in ISO 8601 format.
--   
--   <a>$sel:description:GetDataSetResponse'</a>,
--   <a>getDataSetResponse_description</a> - The description for the data
--   set.
--   
--   <a>$sel:tags:GetDataSetResponse'</a>, <a>getDataSetResponse_tags</a> -
--   The tags for the data set.
--   
--   <a>$sel:httpStatus:GetDataSetResponse'</a>,
--   <a>getDataSetResponse_httpStatus</a> - The response's http status
--   code.
newGetDataSetResponse :: Int -> GetDataSetResponse

-- | A property that defines the data set as OWNED by the account (for
--   providers) or ENTITLED to the account (for subscribers).
getDataSetResponse_origin :: Lens' GetDataSetResponse (Maybe Origin)

-- | The ARN for the data set.
getDataSetResponse_arn :: Lens' GetDataSetResponse (Maybe Text)

-- | The date and time that the data set was created, in ISO 8601 format.
getDataSetResponse_createdAt :: Lens' GetDataSetResponse (Maybe UTCTime)

-- | The data set ID of the owned data set corresponding to the entitled
--   data set being viewed. This parameter is returned when a data set
--   owner is viewing the entitled copy of its owned data set.
getDataSetResponse_sourceId :: Lens' GetDataSetResponse (Maybe Text)

-- | If the origin of this data set is ENTITLED, includes the details for
--   the product on AWS Marketplace.
getDataSetResponse_originDetails :: Lens' GetDataSetResponse (Maybe OriginDetails)

-- | The name of the data set.
getDataSetResponse_name :: Lens' GetDataSetResponse (Maybe Text)

-- | The unique identifier for the data set.
getDataSetResponse_id :: Lens' GetDataSetResponse (Maybe Text)

-- | The type of asset that is added to a data set.
getDataSetResponse_assetType :: Lens' GetDataSetResponse (Maybe AssetType)

-- | The date and time that the data set was last updated, in ISO 8601
--   format.
getDataSetResponse_updatedAt :: Lens' GetDataSetResponse (Maybe UTCTime)

-- | The description for the data set.
getDataSetResponse_description :: Lens' GetDataSetResponse (Maybe Text)

-- | The tags for the data set.
getDataSetResponse_tags :: Lens' GetDataSetResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
getDataSetResponse_httpStatus :: Lens' GetDataSetResponse Int
instance GHC.Generics.Generic Amazonka.DataExchange.GetDataSet.GetDataSet
instance GHC.Show.Show Amazonka.DataExchange.GetDataSet.GetDataSet
instance GHC.Read.Read Amazonka.DataExchange.GetDataSet.GetDataSet
instance GHC.Classes.Eq Amazonka.DataExchange.GetDataSet.GetDataSet
instance GHC.Generics.Generic Amazonka.DataExchange.GetDataSet.GetDataSetResponse
instance GHC.Show.Show Amazonka.DataExchange.GetDataSet.GetDataSetResponse
instance GHC.Read.Read Amazonka.DataExchange.GetDataSet.GetDataSetResponse
instance GHC.Classes.Eq Amazonka.DataExchange.GetDataSet.GetDataSetResponse
instance Amazonka.Types.AWSRequest Amazonka.DataExchange.GetDataSet.GetDataSet
instance Control.DeepSeq.NFData Amazonka.DataExchange.GetDataSet.GetDataSetResponse
instance Data.Hashable.Class.Hashable Amazonka.DataExchange.GetDataSet.GetDataSet
instance Control.DeepSeq.NFData Amazonka.DataExchange.GetDataSet.GetDataSet
instance Amazonka.Data.Headers.ToHeaders Amazonka.DataExchange.GetDataSet.GetDataSet
instance Amazonka.Data.Path.ToPath Amazonka.DataExchange.GetDataSet.GetDataSet
instance Amazonka.Data.Query.ToQuery Amazonka.DataExchange.GetDataSet.GetDataSet


-- | This operation returns information about an asset.
module Amazonka.DataExchange.GetAsset

-- | <i>See:</i> <a>newGetAsset</a> smart constructor.
data GetAsset
GetAsset' :: Text -> Text -> Text -> GetAsset

-- | The unique identifier for a revision.
[$sel:revisionId:GetAsset'] :: GetAsset -> Text

-- | The unique identifier for an asset.
[$sel:assetId:GetAsset'] :: GetAsset -> Text

-- | The unique identifier for a data set.
[$sel:dataSetId:GetAsset'] :: GetAsset -> Text

-- | Create a value of <a>GetAsset</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:revisionId:GetAsset'</a>, <a>getAsset_revisionId</a> - The
--   unique identifier for a revision.
--   
--   <a>$sel:assetId:GetAsset'</a>, <a>getAsset_assetId</a> - The unique
--   identifier for an asset.
--   
--   <a>$sel:dataSetId:GetAsset'</a>, <a>getAsset_dataSetId</a> - The
--   unique identifier for a data set.
newGetAsset :: Text -> Text -> Text -> GetAsset

-- | The unique identifier for a revision.
getAsset_revisionId :: Lens' GetAsset Text

-- | The unique identifier for an asset.
getAsset_assetId :: Lens' GetAsset Text

-- | The unique identifier for a data set.
getAsset_dataSetId :: Lens' GetAsset Text

-- | <i>See:</i> <a>newGetAssetResponse</a> smart constructor.
data GetAssetResponse
GetAssetResponse' :: Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe AssetDetails -> Maybe Text -> Maybe AssetType -> Maybe POSIX -> Maybe Text -> Int -> GetAssetResponse

-- | The ARN for the asset.
[$sel:arn:GetAssetResponse'] :: GetAssetResponse -> Maybe Text

-- | The date and time that the asset was created, in ISO 8601 format.
[$sel:createdAt:GetAssetResponse'] :: GetAssetResponse -> Maybe POSIX

-- | The asset ID of the owned asset corresponding to the entitled asset
--   being viewed. This parameter is returned when an asset owner is
--   viewing the entitled copy of its owned asset.
[$sel:sourceId:GetAssetResponse'] :: GetAssetResponse -> Maybe Text

-- | The unique identifier for the data set associated with this asset.
[$sel:dataSetId:GetAssetResponse'] :: GetAssetResponse -> Maybe Text

-- | The name of the asset. When importing from Amazon S3, the S3 object
--   key is used as the asset name. When exporting to Amazon S3, the asset
--   name is used as default target S3 object key.
[$sel:name:GetAssetResponse'] :: GetAssetResponse -> Maybe Text

-- | Information about the asset.
[$sel:assetDetails:GetAssetResponse'] :: GetAssetResponse -> Maybe AssetDetails

-- | The unique identifier for the asset.
[$sel:id:GetAssetResponse'] :: GetAssetResponse -> Maybe Text

-- | The type of asset that is added to a data set.
[$sel:assetType:GetAssetResponse'] :: GetAssetResponse -> Maybe AssetType

-- | The date and time that the asset was last updated, in ISO 8601 format.
[$sel:updatedAt:GetAssetResponse'] :: GetAssetResponse -> Maybe POSIX

-- | The unique identifier for the revision associated with this asset.
[$sel:revisionId:GetAssetResponse'] :: GetAssetResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetAssetResponse'] :: GetAssetResponse -> Int

-- | Create a value of <a>GetAssetResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:GetAssetResponse'</a>, <a>getAssetResponse_arn</a> - The
--   ARN for the asset.
--   
--   <a>$sel:createdAt:GetAssetResponse'</a>,
--   <a>getAssetResponse_createdAt</a> - The date and time that the asset
--   was created, in ISO 8601 format.
--   
--   <a>$sel:sourceId:GetAssetResponse'</a>,
--   <a>getAssetResponse_sourceId</a> - The asset ID of the owned asset
--   corresponding to the entitled asset being viewed. This parameter is
--   returned when an asset owner is viewing the entitled copy of its owned
--   asset.
--   
--   <a>$sel:dataSetId:GetAsset'</a>, <a>getAssetResponse_dataSetId</a> -
--   The unique identifier for the data set associated with this asset.
--   
--   <a>$sel:name:GetAssetResponse'</a>, <a>getAssetResponse_name</a> - The
--   name of the asset. When importing from Amazon S3, the S3 object key is
--   used as the asset name. When exporting to Amazon S3, the asset name is
--   used as default target S3 object key.
--   
--   <a>$sel:assetDetails:GetAssetResponse'</a>,
--   <a>getAssetResponse_assetDetails</a> - Information about the asset.
--   
--   <a>$sel:id:GetAssetResponse'</a>, <a>getAssetResponse_id</a> - The
--   unique identifier for the asset.
--   
--   <a>$sel:assetType:GetAssetResponse'</a>,
--   <a>getAssetResponse_assetType</a> - The type of asset that is added to
--   a data set.
--   
--   <a>$sel:updatedAt:GetAssetResponse'</a>,
--   <a>getAssetResponse_updatedAt</a> - The date and time that the asset
--   was last updated, in ISO 8601 format.
--   
--   <a>$sel:revisionId:GetAsset'</a>, <a>getAssetResponse_revisionId</a> -
--   The unique identifier for the revision associated with this asset.
--   
--   <a>$sel:httpStatus:GetAssetResponse'</a>,
--   <a>getAssetResponse_httpStatus</a> - The response's http status code.
newGetAssetResponse :: Int -> GetAssetResponse

-- | The ARN for the asset.
getAssetResponse_arn :: Lens' GetAssetResponse (Maybe Text)

-- | The date and time that the asset was created, in ISO 8601 format.
getAssetResponse_createdAt :: Lens' GetAssetResponse (Maybe UTCTime)

-- | The asset ID of the owned asset corresponding to the entitled asset
--   being viewed. This parameter is returned when an asset owner is
--   viewing the entitled copy of its owned asset.
getAssetResponse_sourceId :: Lens' GetAssetResponse (Maybe Text)

-- | The unique identifier for the data set associated with this asset.
getAssetResponse_dataSetId :: Lens' GetAssetResponse (Maybe Text)

-- | The name of the asset. When importing from Amazon S3, the S3 object
--   key is used as the asset name. When exporting to Amazon S3, the asset
--   name is used as default target S3 object key.
getAssetResponse_name :: Lens' GetAssetResponse (Maybe Text)

-- | Information about the asset.
getAssetResponse_assetDetails :: Lens' GetAssetResponse (Maybe AssetDetails)

-- | The unique identifier for the asset.
getAssetResponse_id :: Lens' GetAssetResponse (Maybe Text)

-- | The type of asset that is added to a data set.
getAssetResponse_assetType :: Lens' GetAssetResponse (Maybe AssetType)

-- | The date and time that the asset was last updated, in ISO 8601 format.
getAssetResponse_updatedAt :: Lens' GetAssetResponse (Maybe UTCTime)

-- | The unique identifier for the revision associated with this asset.
getAssetResponse_revisionId :: Lens' GetAssetResponse (Maybe Text)

-- | The response's http status code.
getAssetResponse_httpStatus :: Lens' GetAssetResponse Int
instance GHC.Generics.Generic Amazonka.DataExchange.GetAsset.GetAsset
instance GHC.Show.Show Amazonka.DataExchange.GetAsset.GetAsset
instance GHC.Read.Read Amazonka.DataExchange.GetAsset.GetAsset
instance GHC.Classes.Eq Amazonka.DataExchange.GetAsset.GetAsset
instance GHC.Generics.Generic Amazonka.DataExchange.GetAsset.GetAssetResponse
instance GHC.Show.Show Amazonka.DataExchange.GetAsset.GetAssetResponse
instance GHC.Read.Read Amazonka.DataExchange.GetAsset.GetAssetResponse
instance GHC.Classes.Eq Amazonka.DataExchange.GetAsset.GetAssetResponse
instance Amazonka.Types.AWSRequest Amazonka.DataExchange.GetAsset.GetAsset
instance Control.DeepSeq.NFData Amazonka.DataExchange.GetAsset.GetAssetResponse
instance Data.Hashable.Class.Hashable Amazonka.DataExchange.GetAsset.GetAsset
instance Control.DeepSeq.NFData Amazonka.DataExchange.GetAsset.GetAsset
instance Amazonka.Data.Headers.ToHeaders Amazonka.DataExchange.GetAsset.GetAsset
instance Amazonka.Data.Path.ToPath Amazonka.DataExchange.GetAsset.GetAsset
instance Amazonka.Data.Query.ToQuery Amazonka.DataExchange.GetAsset.GetAsset


-- | This operation deletes a revision.
module Amazonka.DataExchange.DeleteRevision

-- | <i>See:</i> <a>newDeleteRevision</a> smart constructor.
data DeleteRevision
DeleteRevision' :: Text -> Text -> DeleteRevision

-- | The unique identifier for a revision.
[$sel:revisionId:DeleteRevision'] :: DeleteRevision -> Text

-- | The unique identifier for a data set.
[$sel:dataSetId:DeleteRevision'] :: DeleteRevision -> Text

-- | Create a value of <a>DeleteRevision</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:revisionId:DeleteRevision'</a>,
--   <a>deleteRevision_revisionId</a> - The unique identifier for a
--   revision.
--   
--   <a>$sel:dataSetId:DeleteRevision'</a>, <a>deleteRevision_dataSetId</a>
--   - The unique identifier for a data set.
newDeleteRevision :: Text -> Text -> DeleteRevision

-- | The unique identifier for a revision.
deleteRevision_revisionId :: Lens' DeleteRevision Text

-- | The unique identifier for a data set.
deleteRevision_dataSetId :: Lens' DeleteRevision Text

-- | <i>See:</i> <a>newDeleteRevisionResponse</a> smart constructor.
data DeleteRevisionResponse
DeleteRevisionResponse' :: DeleteRevisionResponse

-- | Create a value of <a>DeleteRevisionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteRevisionResponse :: DeleteRevisionResponse
instance GHC.Generics.Generic Amazonka.DataExchange.DeleteRevision.DeleteRevision
instance GHC.Show.Show Amazonka.DataExchange.DeleteRevision.DeleteRevision
instance GHC.Read.Read Amazonka.DataExchange.DeleteRevision.DeleteRevision
instance GHC.Classes.Eq Amazonka.DataExchange.DeleteRevision.DeleteRevision
instance GHC.Generics.Generic Amazonka.DataExchange.DeleteRevision.DeleteRevisionResponse
instance GHC.Show.Show Amazonka.DataExchange.DeleteRevision.DeleteRevisionResponse
instance GHC.Read.Read Amazonka.DataExchange.DeleteRevision.DeleteRevisionResponse
instance GHC.Classes.Eq Amazonka.DataExchange.DeleteRevision.DeleteRevisionResponse
instance Amazonka.Types.AWSRequest Amazonka.DataExchange.DeleteRevision.DeleteRevision
instance Control.DeepSeq.NFData Amazonka.DataExchange.DeleteRevision.DeleteRevisionResponse
instance Data.Hashable.Class.Hashable Amazonka.DataExchange.DeleteRevision.DeleteRevision
instance Control.DeepSeq.NFData Amazonka.DataExchange.DeleteRevision.DeleteRevision
instance Amazonka.Data.Headers.ToHeaders Amazonka.DataExchange.DeleteRevision.DeleteRevision
instance Amazonka.Data.Path.ToPath Amazonka.DataExchange.DeleteRevision.DeleteRevision
instance Amazonka.Data.Query.ToQuery Amazonka.DataExchange.DeleteRevision.DeleteRevision


-- | This operation deletes the event action.
module Amazonka.DataExchange.DeleteEventAction

-- | <i>See:</i> <a>newDeleteEventAction</a> smart constructor.
data DeleteEventAction
DeleteEventAction' :: Text -> DeleteEventAction

-- | The unique identifier for the event action.
[$sel:eventActionId:DeleteEventAction'] :: DeleteEventAction -> Text

-- | Create a value of <a>DeleteEventAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventActionId:DeleteEventAction'</a>,
--   <a>deleteEventAction_eventActionId</a> - The unique identifier for the
--   event action.
newDeleteEventAction :: Text -> DeleteEventAction

-- | The unique identifier for the event action.
deleteEventAction_eventActionId :: Lens' DeleteEventAction Text

-- | <i>See:</i> <a>newDeleteEventActionResponse</a> smart constructor.
data DeleteEventActionResponse
DeleteEventActionResponse' :: DeleteEventActionResponse

-- | Create a value of <a>DeleteEventActionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteEventActionResponse :: DeleteEventActionResponse
instance GHC.Generics.Generic Amazonka.DataExchange.DeleteEventAction.DeleteEventAction
instance GHC.Show.Show Amazonka.DataExchange.DeleteEventAction.DeleteEventAction
instance GHC.Read.Read Amazonka.DataExchange.DeleteEventAction.DeleteEventAction
instance GHC.Classes.Eq Amazonka.DataExchange.DeleteEventAction.DeleteEventAction
instance GHC.Generics.Generic Amazonka.DataExchange.DeleteEventAction.DeleteEventActionResponse
instance GHC.Show.Show Amazonka.DataExchange.DeleteEventAction.DeleteEventActionResponse
instance GHC.Read.Read Amazonka.DataExchange.DeleteEventAction.DeleteEventActionResponse
instance GHC.Classes.Eq Amazonka.DataExchange.DeleteEventAction.DeleteEventActionResponse
instance Amazonka.Types.AWSRequest Amazonka.DataExchange.DeleteEventAction.DeleteEventAction
instance Control.DeepSeq.NFData Amazonka.DataExchange.DeleteEventAction.DeleteEventActionResponse
instance Data.Hashable.Class.Hashable Amazonka.DataExchange.DeleteEventAction.DeleteEventAction
instance Control.DeepSeq.NFData Amazonka.DataExchange.DeleteEventAction.DeleteEventAction
instance Amazonka.Data.Headers.ToHeaders Amazonka.DataExchange.DeleteEventAction.DeleteEventAction
instance Amazonka.Data.Path.ToPath Amazonka.DataExchange.DeleteEventAction.DeleteEventAction
instance Amazonka.Data.Query.ToQuery Amazonka.DataExchange.DeleteEventAction.DeleteEventAction


-- | This operation deletes a data set.
module Amazonka.DataExchange.DeleteDataSet

-- | <i>See:</i> <a>newDeleteDataSet</a> smart constructor.
data DeleteDataSet
DeleteDataSet' :: Text -> DeleteDataSet

-- | The unique identifier for a data set.
[$sel:dataSetId:DeleteDataSet'] :: DeleteDataSet -> Text

-- | Create a value of <a>DeleteDataSet</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataSetId:DeleteDataSet'</a>, <a>deleteDataSet_dataSetId</a> -
--   The unique identifier for a data set.
newDeleteDataSet :: Text -> DeleteDataSet

-- | The unique identifier for a data set.
deleteDataSet_dataSetId :: Lens' DeleteDataSet Text

-- | <i>See:</i> <a>newDeleteDataSetResponse</a> smart constructor.
data DeleteDataSetResponse
DeleteDataSetResponse' :: DeleteDataSetResponse

-- | Create a value of <a>DeleteDataSetResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteDataSetResponse :: DeleteDataSetResponse
instance GHC.Generics.Generic Amazonka.DataExchange.DeleteDataSet.DeleteDataSet
instance GHC.Show.Show Amazonka.DataExchange.DeleteDataSet.DeleteDataSet
instance GHC.Read.Read Amazonka.DataExchange.DeleteDataSet.DeleteDataSet
instance GHC.Classes.Eq Amazonka.DataExchange.DeleteDataSet.DeleteDataSet
instance GHC.Generics.Generic Amazonka.DataExchange.DeleteDataSet.DeleteDataSetResponse
instance GHC.Show.Show Amazonka.DataExchange.DeleteDataSet.DeleteDataSetResponse
instance GHC.Read.Read Amazonka.DataExchange.DeleteDataSet.DeleteDataSetResponse
instance GHC.Classes.Eq Amazonka.DataExchange.DeleteDataSet.DeleteDataSetResponse
instance Amazonka.Types.AWSRequest Amazonka.DataExchange.DeleteDataSet.DeleteDataSet
instance Control.DeepSeq.NFData Amazonka.DataExchange.DeleteDataSet.DeleteDataSetResponse
instance Data.Hashable.Class.Hashable Amazonka.DataExchange.DeleteDataSet.DeleteDataSet
instance Control.DeepSeq.NFData Amazonka.DataExchange.DeleteDataSet.DeleteDataSet
instance Amazonka.Data.Headers.ToHeaders Amazonka.DataExchange.DeleteDataSet.DeleteDataSet
instance Amazonka.Data.Path.ToPath Amazonka.DataExchange.DeleteDataSet.DeleteDataSet
instance Amazonka.Data.Query.ToQuery Amazonka.DataExchange.DeleteDataSet.DeleteDataSet


-- | This operation deletes an asset.
module Amazonka.DataExchange.DeleteAsset

-- | <i>See:</i> <a>newDeleteAsset</a> smart constructor.
data DeleteAsset
DeleteAsset' :: Text -> Text -> Text -> DeleteAsset

-- | The unique identifier for a revision.
[$sel:revisionId:DeleteAsset'] :: DeleteAsset -> Text

-- | The unique identifier for an asset.
[$sel:assetId:DeleteAsset'] :: DeleteAsset -> Text

-- | The unique identifier for a data set.
[$sel:dataSetId:DeleteAsset'] :: DeleteAsset -> Text

-- | Create a value of <a>DeleteAsset</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:revisionId:DeleteAsset'</a>, <a>deleteAsset_revisionId</a> -
--   The unique identifier for a revision.
--   
--   <a>$sel:assetId:DeleteAsset'</a>, <a>deleteAsset_assetId</a> - The
--   unique identifier for an asset.
--   
--   <a>$sel:dataSetId:DeleteAsset'</a>, <a>deleteAsset_dataSetId</a> - The
--   unique identifier for a data set.
newDeleteAsset :: Text -> Text -> Text -> DeleteAsset

-- | The unique identifier for a revision.
deleteAsset_revisionId :: Lens' DeleteAsset Text

-- | The unique identifier for an asset.
deleteAsset_assetId :: Lens' DeleteAsset Text

-- | The unique identifier for a data set.
deleteAsset_dataSetId :: Lens' DeleteAsset Text

-- | <i>See:</i> <a>newDeleteAssetResponse</a> smart constructor.
data DeleteAssetResponse
DeleteAssetResponse' :: DeleteAssetResponse

-- | Create a value of <a>DeleteAssetResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteAssetResponse :: DeleteAssetResponse
instance GHC.Generics.Generic Amazonka.DataExchange.DeleteAsset.DeleteAsset
instance GHC.Show.Show Amazonka.DataExchange.DeleteAsset.DeleteAsset
instance GHC.Read.Read Amazonka.DataExchange.DeleteAsset.DeleteAsset
instance GHC.Classes.Eq Amazonka.DataExchange.DeleteAsset.DeleteAsset
instance GHC.Generics.Generic Amazonka.DataExchange.DeleteAsset.DeleteAssetResponse
instance GHC.Show.Show Amazonka.DataExchange.DeleteAsset.DeleteAssetResponse
instance GHC.Read.Read Amazonka.DataExchange.DeleteAsset.DeleteAssetResponse
instance GHC.Classes.Eq Amazonka.DataExchange.DeleteAsset.DeleteAssetResponse
instance Amazonka.Types.AWSRequest Amazonka.DataExchange.DeleteAsset.DeleteAsset
instance Control.DeepSeq.NFData Amazonka.DataExchange.DeleteAsset.DeleteAssetResponse
instance Data.Hashable.Class.Hashable Amazonka.DataExchange.DeleteAsset.DeleteAsset
instance Control.DeepSeq.NFData Amazonka.DataExchange.DeleteAsset.DeleteAsset
instance Amazonka.Data.Headers.ToHeaders Amazonka.DataExchange.DeleteAsset.DeleteAsset
instance Amazonka.Data.Path.ToPath Amazonka.DataExchange.DeleteAsset.DeleteAsset
instance Amazonka.Data.Query.ToQuery Amazonka.DataExchange.DeleteAsset.DeleteAsset


-- | This operation creates a revision for a data set.
module Amazonka.DataExchange.CreateRevision

-- | The request body for CreateRevision.
--   
--   <i>See:</i> <a>newCreateRevision</a> smart constructor.
data CreateRevision
CreateRevision' :: Maybe Text -> Maybe (HashMap Text Text) -> Text -> CreateRevision

-- | An optional comment about the revision.
[$sel:comment:CreateRevision'] :: CreateRevision -> Maybe Text

-- | A revision tag is an optional label that you can assign to a revision
--   when you create it. Each tag consists of a key and an optional value,
--   both of which you define. When you use tagging, you can also use
--   tag-based access control in IAM policies to control access to these
--   data sets and revisions.
[$sel:tags:CreateRevision'] :: CreateRevision -> Maybe (HashMap Text Text)

-- | The unique identifier for a data set.
[$sel:dataSetId:CreateRevision'] :: CreateRevision -> Text

-- | Create a value of <a>CreateRevision</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:comment:CreateRevision'</a>, <a>createRevision_comment</a> -
--   An optional comment about the revision.
--   
--   <a>$sel:tags:CreateRevision'</a>, <a>createRevision_tags</a> - A
--   revision tag is an optional label that you can assign to a revision
--   when you create it. Each tag consists of a key and an optional value,
--   both of which you define. When you use tagging, you can also use
--   tag-based access control in IAM policies to control access to these
--   data sets and revisions.
--   
--   <a>$sel:dataSetId:CreateRevision'</a>, <a>createRevision_dataSetId</a>
--   - The unique identifier for a data set.
newCreateRevision :: Text -> CreateRevision

-- | An optional comment about the revision.
createRevision_comment :: Lens' CreateRevision (Maybe Text)

-- | A revision tag is an optional label that you can assign to a revision
--   when you create it. Each tag consists of a key and an optional value,
--   both of which you define. When you use tagging, you can also use
--   tag-based access control in IAM policies to control access to these
--   data sets and revisions.
createRevision_tags :: Lens' CreateRevision (Maybe (HashMap Text Text))

-- | The unique identifier for a data set.
createRevision_dataSetId :: Lens' CreateRevision Text

-- | <i>See:</i> <a>newCreateRevisionResponse</a> smart constructor.
data CreateRevisionResponse
CreateRevisionResponse' :: Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe (HashMap Text Text) -> Int -> CreateRevisionResponse

-- | The ARN for the revision.
[$sel:arn:CreateRevisionResponse'] :: CreateRevisionResponse -> Maybe Text

-- | The date and time that the revision was created, in ISO 8601 format.
[$sel:createdAt:CreateRevisionResponse'] :: CreateRevisionResponse -> Maybe POSIX

-- | The revision ID of the owned revision corresponding to the entitled
--   revision being viewed. This parameter is returned when a revision
--   owner is viewing the entitled copy of its owned revision.
[$sel:sourceId:CreateRevisionResponse'] :: CreateRevisionResponse -> Maybe Text

-- | To publish a revision to a data set in a product, the revision must
--   first be finalized. Finalizing a revision tells AWS Data Exchange that
--   your changes to the assets in the revision are complete. After it's in
--   this read-only state, you can publish the revision to your products.
--   
--   Finalized revisions can be published through the AWS Data Exchange
--   console or the AWS Marketplace Catalog API, using the StartChangeSet
--   AWS Marketplace Catalog API action. When using the API, revisions are
--   uniquely identified by their ARN.
[$sel:finalized:CreateRevisionResponse'] :: CreateRevisionResponse -> Maybe Bool

-- | The unique identifier for the data set associated with this revision.
[$sel:dataSetId:CreateRevisionResponse'] :: CreateRevisionResponse -> Maybe Text

-- | The unique identifier for the revision.
[$sel:id:CreateRevisionResponse'] :: CreateRevisionResponse -> Maybe Text

-- | The date and time that the revision was last updated, in ISO 8601
--   format.
[$sel:updatedAt:CreateRevisionResponse'] :: CreateRevisionResponse -> Maybe POSIX

-- | An optional comment about the revision.
[$sel:comment:CreateRevisionResponse'] :: CreateRevisionResponse -> Maybe Text

-- | The tags for the revision.
[$sel:tags:CreateRevisionResponse'] :: CreateRevisionResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:CreateRevisionResponse'] :: CreateRevisionResponse -> Int

-- | Create a value of <a>CreateRevisionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:CreateRevisionResponse'</a>,
--   <a>createRevisionResponse_arn</a> - The ARN for the revision.
--   
--   <a>$sel:createdAt:CreateRevisionResponse'</a>,
--   <a>createRevisionResponse_createdAt</a> - The date and time that the
--   revision was created, in ISO 8601 format.
--   
--   <a>$sel:sourceId:CreateRevisionResponse'</a>,
--   <a>createRevisionResponse_sourceId</a> - The revision ID of the owned
--   revision corresponding to the entitled revision being viewed. This
--   parameter is returned when a revision owner is viewing the entitled
--   copy of its owned revision.
--   
--   <a>$sel:finalized:CreateRevisionResponse'</a>,
--   <a>createRevisionResponse_finalized</a> - To publish a revision to a
--   data set in a product, the revision must first be finalized.
--   Finalizing a revision tells AWS Data Exchange that your changes to the
--   assets in the revision are complete. After it's in this read-only
--   state, you can publish the revision to your products.
--   
--   Finalized revisions can be published through the AWS Data Exchange
--   console or the AWS Marketplace Catalog API, using the StartChangeSet
--   AWS Marketplace Catalog API action. When using the API, revisions are
--   uniquely identified by their ARN.
--   
--   <a>$sel:dataSetId:CreateRevision'</a>,
--   <a>createRevisionResponse_dataSetId</a> - The unique identifier for
--   the data set associated with this revision.
--   
--   <a>$sel:id:CreateRevisionResponse'</a>,
--   <a>createRevisionResponse_id</a> - The unique identifier for the
--   revision.
--   
--   <a>$sel:updatedAt:CreateRevisionResponse'</a>,
--   <a>createRevisionResponse_updatedAt</a> - The date and time that the
--   revision was last updated, in ISO 8601 format.
--   
--   <a>$sel:comment:CreateRevision'</a>,
--   <a>createRevisionResponse_comment</a> - An optional comment about the
--   revision.
--   
--   <a>$sel:tags:CreateRevision'</a>, <a>createRevisionResponse_tags</a> -
--   The tags for the revision.
--   
--   <a>$sel:httpStatus:CreateRevisionResponse'</a>,
--   <a>createRevisionResponse_httpStatus</a> - The response's http status
--   code.
newCreateRevisionResponse :: Int -> CreateRevisionResponse

-- | The ARN for the revision.
createRevisionResponse_arn :: Lens' CreateRevisionResponse (Maybe Text)

-- | The date and time that the revision was created, in ISO 8601 format.
createRevisionResponse_createdAt :: Lens' CreateRevisionResponse (Maybe UTCTime)

-- | The revision ID of the owned revision corresponding to the entitled
--   revision being viewed. This parameter is returned when a revision
--   owner is viewing the entitled copy of its owned revision.
createRevisionResponse_sourceId :: Lens' CreateRevisionResponse (Maybe Text)

-- | To publish a revision to a data set in a product, the revision must
--   first be finalized. Finalizing a revision tells AWS Data Exchange that
--   your changes to the assets in the revision are complete. After it's in
--   this read-only state, you can publish the revision to your products.
--   
--   Finalized revisions can be published through the AWS Data Exchange
--   console or the AWS Marketplace Catalog API, using the StartChangeSet
--   AWS Marketplace Catalog API action. When using the API, revisions are
--   uniquely identified by their ARN.
createRevisionResponse_finalized :: Lens' CreateRevisionResponse (Maybe Bool)

-- | The unique identifier for the data set associated with this revision.
createRevisionResponse_dataSetId :: Lens' CreateRevisionResponse (Maybe Text)

-- | The unique identifier for the revision.
createRevisionResponse_id :: Lens' CreateRevisionResponse (Maybe Text)

-- | The date and time that the revision was last updated, in ISO 8601
--   format.
createRevisionResponse_updatedAt :: Lens' CreateRevisionResponse (Maybe UTCTime)

-- | An optional comment about the revision.
createRevisionResponse_comment :: Lens' CreateRevisionResponse (Maybe Text)

-- | The tags for the revision.
createRevisionResponse_tags :: Lens' CreateRevisionResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
createRevisionResponse_httpStatus :: Lens' CreateRevisionResponse Int
instance GHC.Generics.Generic Amazonka.DataExchange.CreateRevision.CreateRevision
instance GHC.Show.Show Amazonka.DataExchange.CreateRevision.CreateRevision
instance GHC.Read.Read Amazonka.DataExchange.CreateRevision.CreateRevision
instance GHC.Classes.Eq Amazonka.DataExchange.CreateRevision.CreateRevision
instance GHC.Generics.Generic Amazonka.DataExchange.CreateRevision.CreateRevisionResponse
instance GHC.Show.Show Amazonka.DataExchange.CreateRevision.CreateRevisionResponse
instance GHC.Read.Read Amazonka.DataExchange.CreateRevision.CreateRevisionResponse
instance GHC.Classes.Eq Amazonka.DataExchange.CreateRevision.CreateRevisionResponse
instance Amazonka.Types.AWSRequest Amazonka.DataExchange.CreateRevision.CreateRevision
instance Control.DeepSeq.NFData Amazonka.DataExchange.CreateRevision.CreateRevisionResponse
instance Data.Hashable.Class.Hashable Amazonka.DataExchange.CreateRevision.CreateRevision
instance Control.DeepSeq.NFData Amazonka.DataExchange.CreateRevision.CreateRevision
instance Amazonka.Data.Headers.ToHeaders Amazonka.DataExchange.CreateRevision.CreateRevision
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataExchange.CreateRevision.CreateRevision
instance Amazonka.Data.Path.ToPath Amazonka.DataExchange.CreateRevision.CreateRevision
instance Amazonka.Data.Query.ToQuery Amazonka.DataExchange.CreateRevision.CreateRevision


-- | This operation creates a job.
module Amazonka.DataExchange.CreateJob

-- | The request body for CreateJob.
--   
--   <i>See:</i> <a>newCreateJob</a> smart constructor.
data CreateJob
CreateJob' :: Type -> RequestDetails -> CreateJob

-- | The type of job to be created.
[$sel:type':CreateJob'] :: CreateJob -> Type

-- | The details for the CreateJob request.
[$sel:details:CreateJob'] :: CreateJob -> RequestDetails

-- | Create a value of <a>CreateJob</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:type':CreateJob'</a>, <a>createJob_type</a> - The type of job
--   to be created.
--   
--   <a>$sel:details:CreateJob'</a>, <a>createJob_details</a> - The details
--   for the CreateJob request.
newCreateJob :: Type -> RequestDetails -> CreateJob

-- | The type of job to be created.
createJob_type :: Lens' CreateJob Type

-- | The details for the CreateJob request.
createJob_details :: Lens' CreateJob RequestDetails

-- | <i>See:</i> <a>newCreateJobResponse</a> smart constructor.
data CreateJobResponse
CreateJobResponse' :: Maybe State -> Maybe Text -> Maybe POSIX -> Maybe ResponseDetails -> Maybe Text -> Maybe Type -> Maybe POSIX -> Maybe [JobError] -> Int -> CreateJobResponse

-- | The state of the job.
[$sel:state:CreateJobResponse'] :: CreateJobResponse -> Maybe State

-- | The ARN for the job.
[$sel:arn:CreateJobResponse'] :: CreateJobResponse -> Maybe Text

-- | The date and time that the job was created, in ISO 8601 format.
[$sel:createdAt:CreateJobResponse'] :: CreateJobResponse -> Maybe POSIX

-- | Details about the job.
[$sel:details:CreateJobResponse'] :: CreateJobResponse -> Maybe ResponseDetails

-- | The unique identifier for the job.
[$sel:id:CreateJobResponse'] :: CreateJobResponse -> Maybe Text

-- | The job type.
[$sel:type':CreateJobResponse'] :: CreateJobResponse -> Maybe Type

-- | The date and time that the job was last updated, in ISO 8601 format.
[$sel:updatedAt:CreateJobResponse'] :: CreateJobResponse -> Maybe POSIX

-- | The errors associated with jobs.
[$sel:errors:CreateJobResponse'] :: CreateJobResponse -> Maybe [JobError]

-- | The response's http status code.
[$sel:httpStatus:CreateJobResponse'] :: CreateJobResponse -> Int

-- | Create a value of <a>CreateJobResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:CreateJobResponse'</a>, <a>createJobResponse_state</a> -
--   The state of the job.
--   
--   <a>$sel:arn:CreateJobResponse'</a>, <a>createJobResponse_arn</a> - The
--   ARN for the job.
--   
--   <a>$sel:createdAt:CreateJobResponse'</a>,
--   <a>createJobResponse_createdAt</a> - The date and time that the job
--   was created, in ISO 8601 format.
--   
--   <a>$sel:details:CreateJob'</a>, <a>createJobResponse_details</a> -
--   Details about the job.
--   
--   <a>$sel:id:CreateJobResponse'</a>, <a>createJobResponse_id</a> - The
--   unique identifier for the job.
--   
--   <a>$sel:type':CreateJob'</a>, <a>createJobResponse_type</a> - The job
--   type.
--   
--   <a>$sel:updatedAt:CreateJobResponse'</a>,
--   <a>createJobResponse_updatedAt</a> - The date and time that the job
--   was last updated, in ISO 8601 format.
--   
--   <a>$sel:errors:CreateJobResponse'</a>, <a>createJobResponse_errors</a>
--   - The errors associated with jobs.
--   
--   <a>$sel:httpStatus:CreateJobResponse'</a>,
--   <a>createJobResponse_httpStatus</a> - The response's http status code.
newCreateJobResponse :: Int -> CreateJobResponse

-- | The state of the job.
createJobResponse_state :: Lens' CreateJobResponse (Maybe State)

-- | The ARN for the job.
createJobResponse_arn :: Lens' CreateJobResponse (Maybe Text)

-- | The date and time that the job was created, in ISO 8601 format.
createJobResponse_createdAt :: Lens' CreateJobResponse (Maybe UTCTime)

-- | Details about the job.
createJobResponse_details :: Lens' CreateJobResponse (Maybe ResponseDetails)

-- | The unique identifier for the job.
createJobResponse_id :: Lens' CreateJobResponse (Maybe Text)

-- | The job type.
createJobResponse_type :: Lens' CreateJobResponse (Maybe Type)

-- | The date and time that the job was last updated, in ISO 8601 format.
createJobResponse_updatedAt :: Lens' CreateJobResponse (Maybe UTCTime)

-- | The errors associated with jobs.
createJobResponse_errors :: Lens' CreateJobResponse (Maybe [JobError])

-- | The response's http status code.
createJobResponse_httpStatus :: Lens' CreateJobResponse Int
instance GHC.Generics.Generic Amazonka.DataExchange.CreateJob.CreateJob
instance GHC.Show.Show Amazonka.DataExchange.CreateJob.CreateJob
instance GHC.Read.Read Amazonka.DataExchange.CreateJob.CreateJob
instance GHC.Classes.Eq Amazonka.DataExchange.CreateJob.CreateJob
instance GHC.Generics.Generic Amazonka.DataExchange.CreateJob.CreateJobResponse
instance GHC.Show.Show Amazonka.DataExchange.CreateJob.CreateJobResponse
instance GHC.Read.Read Amazonka.DataExchange.CreateJob.CreateJobResponse
instance GHC.Classes.Eq Amazonka.DataExchange.CreateJob.CreateJobResponse
instance Amazonka.Types.AWSRequest Amazonka.DataExchange.CreateJob.CreateJob
instance Control.DeepSeq.NFData Amazonka.DataExchange.CreateJob.CreateJobResponse
instance Data.Hashable.Class.Hashable Amazonka.DataExchange.CreateJob.CreateJob
instance Control.DeepSeq.NFData Amazonka.DataExchange.CreateJob.CreateJob
instance Amazonka.Data.Headers.ToHeaders Amazonka.DataExchange.CreateJob.CreateJob
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataExchange.CreateJob.CreateJob
instance Amazonka.Data.Path.ToPath Amazonka.DataExchange.CreateJob.CreateJob
instance Amazonka.Data.Query.ToQuery Amazonka.DataExchange.CreateJob.CreateJob


-- | This operation creates an event action.
module Amazonka.DataExchange.CreateEventAction

-- | The request body for CreateEventAction.
--   
--   <i>See:</i> <a>newCreateEventAction</a> smart constructor.
data CreateEventAction
CreateEventAction' :: Action -> Event -> CreateEventAction

-- | What occurs after a certain event.
[$sel:action:CreateEventAction'] :: CreateEventAction -> Action

-- | What occurs to start an action.
[$sel:event:CreateEventAction'] :: CreateEventAction -> Event

-- | Create a value of <a>CreateEventAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:action:CreateEventAction'</a>, <a>createEventAction_action</a>
--   - What occurs after a certain event.
--   
--   <a>$sel:event:CreateEventAction'</a>, <a>createEventAction_event</a> -
--   What occurs to start an action.
newCreateEventAction :: Action -> Event -> CreateEventAction

-- | What occurs after a certain event.
createEventAction_action :: Lens' CreateEventAction Action

-- | What occurs to start an action.
createEventAction_event :: Lens' CreateEventAction Event

-- | <i>See:</i> <a>newCreateEventActionResponse</a> smart constructor.
data CreateEventActionResponse
CreateEventActionResponse' :: Maybe Event -> Maybe Text -> Maybe POSIX -> Maybe Action -> Maybe Text -> Maybe POSIX -> Int -> CreateEventActionResponse

-- | What occurs to start an action.
[$sel:event:CreateEventActionResponse'] :: CreateEventActionResponse -> Maybe Event

-- | The ARN for the event action.
[$sel:arn:CreateEventActionResponse'] :: CreateEventActionResponse -> Maybe Text

-- | The date and time that the event action was created, in ISO 8601
--   format.
[$sel:createdAt:CreateEventActionResponse'] :: CreateEventActionResponse -> Maybe POSIX

-- | What occurs after a certain event.
[$sel:action:CreateEventActionResponse'] :: CreateEventActionResponse -> Maybe Action

-- | The unique identifier for the event action.
[$sel:id:CreateEventActionResponse'] :: CreateEventActionResponse -> Maybe Text

-- | The date and time that the event action was last updated, in ISO 8601
--   format.
[$sel:updatedAt:CreateEventActionResponse'] :: CreateEventActionResponse -> Maybe POSIX

-- | The response's http status code.
[$sel:httpStatus:CreateEventActionResponse'] :: CreateEventActionResponse -> Int

-- | Create a value of <a>CreateEventActionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:event:CreateEventAction'</a>,
--   <a>createEventActionResponse_event</a> - What occurs to start an
--   action.
--   
--   <a>$sel:arn:CreateEventActionResponse'</a>,
--   <a>createEventActionResponse_arn</a> - The ARN for the event action.
--   
--   <a>$sel:createdAt:CreateEventActionResponse'</a>,
--   <a>createEventActionResponse_createdAt</a> - The date and time that
--   the event action was created, in ISO 8601 format.
--   
--   <a>$sel:action:CreateEventAction'</a>,
--   <a>createEventActionResponse_action</a> - What occurs after a certain
--   event.
--   
--   <a>$sel:id:CreateEventActionResponse'</a>,
--   <a>createEventActionResponse_id</a> - The unique identifier for the
--   event action.
--   
--   <a>$sel:updatedAt:CreateEventActionResponse'</a>,
--   <a>createEventActionResponse_updatedAt</a> - The date and time that
--   the event action was last updated, in ISO 8601 format.
--   
--   <a>$sel:httpStatus:CreateEventActionResponse'</a>,
--   <a>createEventActionResponse_httpStatus</a> - The response's http
--   status code.
newCreateEventActionResponse :: Int -> CreateEventActionResponse

-- | What occurs to start an action.
createEventActionResponse_event :: Lens' CreateEventActionResponse (Maybe Event)

-- | The ARN for the event action.
createEventActionResponse_arn :: Lens' CreateEventActionResponse (Maybe Text)

-- | The date and time that the event action was created, in ISO 8601
--   format.
createEventActionResponse_createdAt :: Lens' CreateEventActionResponse (Maybe UTCTime)

-- | What occurs after a certain event.
createEventActionResponse_action :: Lens' CreateEventActionResponse (Maybe Action)

-- | The unique identifier for the event action.
createEventActionResponse_id :: Lens' CreateEventActionResponse (Maybe Text)

-- | The date and time that the event action was last updated, in ISO 8601
--   format.
createEventActionResponse_updatedAt :: Lens' CreateEventActionResponse (Maybe UTCTime)

-- | The response's http status code.
createEventActionResponse_httpStatus :: Lens' CreateEventActionResponse Int
instance GHC.Generics.Generic Amazonka.DataExchange.CreateEventAction.CreateEventAction
instance GHC.Show.Show Amazonka.DataExchange.CreateEventAction.CreateEventAction
instance GHC.Read.Read Amazonka.DataExchange.CreateEventAction.CreateEventAction
instance GHC.Classes.Eq Amazonka.DataExchange.CreateEventAction.CreateEventAction
instance GHC.Generics.Generic Amazonka.DataExchange.CreateEventAction.CreateEventActionResponse
instance GHC.Show.Show Amazonka.DataExchange.CreateEventAction.CreateEventActionResponse
instance GHC.Read.Read Amazonka.DataExchange.CreateEventAction.CreateEventActionResponse
instance GHC.Classes.Eq Amazonka.DataExchange.CreateEventAction.CreateEventActionResponse
instance Amazonka.Types.AWSRequest Amazonka.DataExchange.CreateEventAction.CreateEventAction
instance Control.DeepSeq.NFData Amazonka.DataExchange.CreateEventAction.CreateEventActionResponse
instance Data.Hashable.Class.Hashable Amazonka.DataExchange.CreateEventAction.CreateEventAction
instance Control.DeepSeq.NFData Amazonka.DataExchange.CreateEventAction.CreateEventAction
instance Amazonka.Data.Headers.ToHeaders Amazonka.DataExchange.CreateEventAction.CreateEventAction
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataExchange.CreateEventAction.CreateEventAction
instance Amazonka.Data.Path.ToPath Amazonka.DataExchange.CreateEventAction.CreateEventAction
instance Amazonka.Data.Query.ToQuery Amazonka.DataExchange.CreateEventAction.CreateEventAction


-- | This operation creates a data set.
module Amazonka.DataExchange.CreateDataSet

-- | The request body for CreateDataSet.
--   
--   <i>See:</i> <a>newCreateDataSet</a> smart constructor.
data CreateDataSet
CreateDataSet' :: Maybe (HashMap Text Text) -> AssetType -> Text -> Text -> CreateDataSet

-- | A data set tag is an optional label that you can assign to a data set
--   when you create it. Each tag consists of a key and an optional value,
--   both of which you define. When you use tagging, you can also use
--   tag-based access control in IAM policies to control access to these
--   data sets and revisions.
[$sel:tags:CreateDataSet'] :: CreateDataSet -> Maybe (HashMap Text Text)

-- | The type of asset that is added to a data set.
[$sel:assetType:CreateDataSet'] :: CreateDataSet -> AssetType

-- | A description for the data set. This value can be up to 16,348
--   characters long.
[$sel:description:CreateDataSet'] :: CreateDataSet -> Text

-- | The name of the data set.
[$sel:name:CreateDataSet'] :: CreateDataSet -> Text

-- | Create a value of <a>CreateDataSet</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:CreateDataSet'</a>, <a>createDataSet_tags</a> - A data
--   set tag is an optional label that you can assign to a data set when
--   you create it. Each tag consists of a key and an optional value, both
--   of which you define. When you use tagging, you can also use tag-based
--   access control in IAM policies to control access to these data sets
--   and revisions.
--   
--   <a>$sel:assetType:CreateDataSet'</a>, <a>createDataSet_assetType</a> -
--   The type of asset that is added to a data set.
--   
--   <a>$sel:description:CreateDataSet'</a>,
--   <a>createDataSet_description</a> - A description for the data set.
--   This value can be up to 16,348 characters long.
--   
--   <a>$sel:name:CreateDataSet'</a>, <a>createDataSet_name</a> - The name
--   of the data set.
newCreateDataSet :: AssetType -> Text -> Text -> CreateDataSet

-- | A data set tag is an optional label that you can assign to a data set
--   when you create it. Each tag consists of a key and an optional value,
--   both of which you define. When you use tagging, you can also use
--   tag-based access control in IAM policies to control access to these
--   data sets and revisions.
createDataSet_tags :: Lens' CreateDataSet (Maybe (HashMap Text Text))

-- | The type of asset that is added to a data set.
createDataSet_assetType :: Lens' CreateDataSet AssetType

-- | A description for the data set. This value can be up to 16,348
--   characters long.
createDataSet_description :: Lens' CreateDataSet Text

-- | The name of the data set.
createDataSet_name :: Lens' CreateDataSet Text

-- | <i>See:</i> <a>newCreateDataSetResponse</a> smart constructor.
data CreateDataSetResponse
CreateDataSetResponse' :: Maybe Origin -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe OriginDetails -> Maybe Text -> Maybe Text -> Maybe AssetType -> Maybe POSIX -> Maybe Text -> Maybe (HashMap Text Text) -> Int -> CreateDataSetResponse

-- | A property that defines the data set as OWNED by the account (for
--   providers) or ENTITLED to the account (for subscribers).
[$sel:origin:CreateDataSetResponse'] :: CreateDataSetResponse -> Maybe Origin

-- | The ARN for the data set.
[$sel:arn:CreateDataSetResponse'] :: CreateDataSetResponse -> Maybe Text

-- | The date and time that the data set was created, in ISO 8601 format.
[$sel:createdAt:CreateDataSetResponse'] :: CreateDataSetResponse -> Maybe POSIX

-- | The data set ID of the owned data set corresponding to the entitled
--   data set being viewed. This parameter is returned when a data set
--   owner is viewing the entitled copy of its owned data set.
[$sel:sourceId:CreateDataSetResponse'] :: CreateDataSetResponse -> Maybe Text

-- | If the origin of this data set is ENTITLED, includes the details for
--   the product on AWS Marketplace.
[$sel:originDetails:CreateDataSetResponse'] :: CreateDataSetResponse -> Maybe OriginDetails

-- | The name of the data set.
[$sel:name:CreateDataSetResponse'] :: CreateDataSetResponse -> Maybe Text

-- | The unique identifier for the data set.
[$sel:id:CreateDataSetResponse'] :: CreateDataSetResponse -> Maybe Text

-- | The type of asset that is added to a data set.
[$sel:assetType:CreateDataSetResponse'] :: CreateDataSetResponse -> Maybe AssetType

-- | The date and time that the data set was last updated, in ISO 8601
--   format.
[$sel:updatedAt:CreateDataSetResponse'] :: CreateDataSetResponse -> Maybe POSIX

-- | The description for the data set.
[$sel:description:CreateDataSetResponse'] :: CreateDataSetResponse -> Maybe Text

-- | The tags for the data set.
[$sel:tags:CreateDataSetResponse'] :: CreateDataSetResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:CreateDataSetResponse'] :: CreateDataSetResponse -> Int

-- | Create a value of <a>CreateDataSetResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:origin:CreateDataSetResponse'</a>,
--   <a>createDataSetResponse_origin</a> - A property that defines the data
--   set as OWNED by the account (for providers) or ENTITLED to the account
--   (for subscribers).
--   
--   <a>$sel:arn:CreateDataSetResponse'</a>,
--   <a>createDataSetResponse_arn</a> - The ARN for the data set.
--   
--   <a>$sel:createdAt:CreateDataSetResponse'</a>,
--   <a>createDataSetResponse_createdAt</a> - The date and time that the
--   data set was created, in ISO 8601 format.
--   
--   <a>$sel:sourceId:CreateDataSetResponse'</a>,
--   <a>createDataSetResponse_sourceId</a> - The data set ID of the owned
--   data set corresponding to the entitled data set being viewed. This
--   parameter is returned when a data set owner is viewing the entitled
--   copy of its owned data set.
--   
--   <a>$sel:originDetails:CreateDataSetResponse'</a>,
--   <a>createDataSetResponse_originDetails</a> - If the origin of this
--   data set is ENTITLED, includes the details for the product on AWS
--   Marketplace.
--   
--   <a>$sel:name:CreateDataSet'</a>, <a>createDataSetResponse_name</a> -
--   The name of the data set.
--   
--   <a>$sel:id:CreateDataSetResponse'</a>, <a>createDataSetResponse_id</a>
--   - The unique identifier for the data set.
--   
--   <a>$sel:assetType:CreateDataSet'</a>,
--   <a>createDataSetResponse_assetType</a> - The type of asset that is
--   added to a data set.
--   
--   <a>$sel:updatedAt:CreateDataSetResponse'</a>,
--   <a>createDataSetResponse_updatedAt</a> - The date and time that the
--   data set was last updated, in ISO 8601 format.
--   
--   <a>$sel:description:CreateDataSet'</a>,
--   <a>createDataSetResponse_description</a> - The description for the
--   data set.
--   
--   <a>$sel:tags:CreateDataSet'</a>, <a>createDataSetResponse_tags</a> -
--   The tags for the data set.
--   
--   <a>$sel:httpStatus:CreateDataSetResponse'</a>,
--   <a>createDataSetResponse_httpStatus</a> - The response's http status
--   code.
newCreateDataSetResponse :: Int -> CreateDataSetResponse

-- | A property that defines the data set as OWNED by the account (for
--   providers) or ENTITLED to the account (for subscribers).
createDataSetResponse_origin :: Lens' CreateDataSetResponse (Maybe Origin)

-- | The ARN for the data set.
createDataSetResponse_arn :: Lens' CreateDataSetResponse (Maybe Text)

-- | The date and time that the data set was created, in ISO 8601 format.
createDataSetResponse_createdAt :: Lens' CreateDataSetResponse (Maybe UTCTime)

-- | The data set ID of the owned data set corresponding to the entitled
--   data set being viewed. This parameter is returned when a data set
--   owner is viewing the entitled copy of its owned data set.
createDataSetResponse_sourceId :: Lens' CreateDataSetResponse (Maybe Text)

-- | If the origin of this data set is ENTITLED, includes the details for
--   the product on AWS Marketplace.
createDataSetResponse_originDetails :: Lens' CreateDataSetResponse (Maybe OriginDetails)

-- | The name of the data set.
createDataSetResponse_name :: Lens' CreateDataSetResponse (Maybe Text)

-- | The unique identifier for the data set.
createDataSetResponse_id :: Lens' CreateDataSetResponse (Maybe Text)

-- | The type of asset that is added to a data set.
createDataSetResponse_assetType :: Lens' CreateDataSetResponse (Maybe AssetType)

-- | The date and time that the data set was last updated, in ISO 8601
--   format.
createDataSetResponse_updatedAt :: Lens' CreateDataSetResponse (Maybe UTCTime)

-- | The description for the data set.
createDataSetResponse_description :: Lens' CreateDataSetResponse (Maybe Text)

-- | The tags for the data set.
createDataSetResponse_tags :: Lens' CreateDataSetResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
createDataSetResponse_httpStatus :: Lens' CreateDataSetResponse Int
instance GHC.Generics.Generic Amazonka.DataExchange.CreateDataSet.CreateDataSet
instance GHC.Show.Show Amazonka.DataExchange.CreateDataSet.CreateDataSet
instance GHC.Read.Read Amazonka.DataExchange.CreateDataSet.CreateDataSet
instance GHC.Classes.Eq Amazonka.DataExchange.CreateDataSet.CreateDataSet
instance GHC.Generics.Generic Amazonka.DataExchange.CreateDataSet.CreateDataSetResponse
instance GHC.Show.Show Amazonka.DataExchange.CreateDataSet.CreateDataSetResponse
instance GHC.Read.Read Amazonka.DataExchange.CreateDataSet.CreateDataSetResponse
instance GHC.Classes.Eq Amazonka.DataExchange.CreateDataSet.CreateDataSetResponse
instance Amazonka.Types.AWSRequest Amazonka.DataExchange.CreateDataSet.CreateDataSet
instance Control.DeepSeq.NFData Amazonka.DataExchange.CreateDataSet.CreateDataSetResponse
instance Data.Hashable.Class.Hashable Amazonka.DataExchange.CreateDataSet.CreateDataSet
instance Control.DeepSeq.NFData Amazonka.DataExchange.CreateDataSet.CreateDataSet
instance Amazonka.Data.Headers.ToHeaders Amazonka.DataExchange.CreateDataSet.CreateDataSet
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataExchange.CreateDataSet.CreateDataSet
instance Amazonka.Data.Path.ToPath Amazonka.DataExchange.CreateDataSet.CreateDataSet
instance Amazonka.Data.Query.ToQuery Amazonka.DataExchange.CreateDataSet.CreateDataSet


-- | This operation cancels a job. Jobs can be cancelled only when they are
--   in the WAITING state.
module Amazonka.DataExchange.CancelJob

-- | <i>See:</i> <a>newCancelJob</a> smart constructor.
data CancelJob
CancelJob' :: Text -> CancelJob

-- | The unique identifier for a job.
[$sel:jobId:CancelJob'] :: CancelJob -> Text

-- | Create a value of <a>CancelJob</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:CancelJob'</a>, <a>cancelJob_jobId</a> - The unique
--   identifier for a job.
newCancelJob :: Text -> CancelJob

-- | The unique identifier for a job.
cancelJob_jobId :: Lens' CancelJob Text

-- | <i>See:</i> <a>newCancelJobResponse</a> smart constructor.
data CancelJobResponse
CancelJobResponse' :: CancelJobResponse

-- | Create a value of <a>CancelJobResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newCancelJobResponse :: CancelJobResponse
instance GHC.Generics.Generic Amazonka.DataExchange.CancelJob.CancelJob
instance GHC.Show.Show Amazonka.DataExchange.CancelJob.CancelJob
instance GHC.Read.Read Amazonka.DataExchange.CancelJob.CancelJob
instance GHC.Classes.Eq Amazonka.DataExchange.CancelJob.CancelJob
instance GHC.Generics.Generic Amazonka.DataExchange.CancelJob.CancelJobResponse
instance GHC.Show.Show Amazonka.DataExchange.CancelJob.CancelJobResponse
instance GHC.Read.Read Amazonka.DataExchange.CancelJob.CancelJobResponse
instance GHC.Classes.Eq Amazonka.DataExchange.CancelJob.CancelJobResponse
instance Amazonka.Types.AWSRequest Amazonka.DataExchange.CancelJob.CancelJob
instance Control.DeepSeq.NFData Amazonka.DataExchange.CancelJob.CancelJobResponse
instance Data.Hashable.Class.Hashable Amazonka.DataExchange.CancelJob.CancelJob
instance Control.DeepSeq.NFData Amazonka.DataExchange.CancelJob.CancelJob
instance Amazonka.Data.Headers.ToHeaders Amazonka.DataExchange.CancelJob.CancelJob
instance Amazonka.Data.Path.ToPath Amazonka.DataExchange.CancelJob.CancelJob
instance Amazonka.Data.Query.ToQuery Amazonka.DataExchange.CancelJob.CancelJob


-- | This operation removes one or more tags from a resource.
module Amazonka.DataExchange.UntagResource

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: [Text] -> Text -> UntagResource

-- | The key tags.
[$sel:tagKeys:UntagResource'] :: UntagResource -> [Text]

-- | An Amazon Resource Name (ARN) that uniquely identifies an AWS
--   resource.
[$sel:resourceArn:UntagResource'] :: UntagResource -> Text

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   key tags.
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - An Amazon Resource Name (ARN) that
--   uniquely identifies an AWS resource.
newUntagResource :: Text -> UntagResource

-- | The key tags.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | An Amazon Resource Name (ARN) that uniquely identifies an AWS
--   resource.
untagResource_resourceArn :: Lens' UntagResource Text

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUntagResourceResponse :: UntagResourceResponse
instance GHC.Generics.Generic Amazonka.DataExchange.UntagResource.UntagResource
instance GHC.Show.Show Amazonka.DataExchange.UntagResource.UntagResource
instance GHC.Read.Read Amazonka.DataExchange.UntagResource.UntagResource
instance GHC.Classes.Eq Amazonka.DataExchange.UntagResource.UntagResource
instance GHC.Generics.Generic Amazonka.DataExchange.UntagResource.UntagResourceResponse
instance GHC.Show.Show Amazonka.DataExchange.UntagResource.UntagResourceResponse
instance GHC.Read.Read Amazonka.DataExchange.UntagResource.UntagResourceResponse
instance GHC.Classes.Eq Amazonka.DataExchange.UntagResource.UntagResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.DataExchange.UntagResource.UntagResource
instance Control.DeepSeq.NFData Amazonka.DataExchange.UntagResource.UntagResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.DataExchange.UntagResource.UntagResource
instance Control.DeepSeq.NFData Amazonka.DataExchange.UntagResource.UntagResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.DataExchange.UntagResource.UntagResource
instance Amazonka.Data.Path.ToPath Amazonka.DataExchange.UntagResource.UntagResource
instance Amazonka.Data.Query.ToQuery Amazonka.DataExchange.UntagResource.UntagResource


-- | This operation updates an asset.
module Amazonka.DataExchange.UpdateAsset

-- | The request body for UpdateAsset.
--   
--   <i>See:</i> <a>newUpdateAsset</a> smart constructor.
data UpdateAsset
UpdateAsset' :: Text -> Text -> Text -> Text -> UpdateAsset

-- | The unique identifier for a revision.
[$sel:revisionId:UpdateAsset'] :: UpdateAsset -> Text

-- | The unique identifier for an asset.
[$sel:assetId:UpdateAsset'] :: UpdateAsset -> Text

-- | The unique identifier for a data set.
[$sel:dataSetId:UpdateAsset'] :: UpdateAsset -> Text

-- | The name of the asset. When importing from Amazon S3, the S3 object
--   key is used as the asset name. When exporting to Amazon S3, the asset
--   name is used as default target S3 object key.
[$sel:name:UpdateAsset'] :: UpdateAsset -> Text

-- | Create a value of <a>UpdateAsset</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:revisionId:UpdateAsset'</a>, <a>updateAsset_revisionId</a> -
--   The unique identifier for a revision.
--   
--   <a>$sel:assetId:UpdateAsset'</a>, <a>updateAsset_assetId</a> - The
--   unique identifier for an asset.
--   
--   <a>$sel:dataSetId:UpdateAsset'</a>, <a>updateAsset_dataSetId</a> - The
--   unique identifier for a data set.
--   
--   <a>$sel:name:UpdateAsset'</a>, <a>updateAsset_name</a> - The name of
--   the asset. When importing from Amazon S3, the S3 object key is used as
--   the asset name. When exporting to Amazon S3, the asset name is used as
--   default target S3 object key.
newUpdateAsset :: Text -> Text -> Text -> Text -> UpdateAsset

-- | The unique identifier for a revision.
updateAsset_revisionId :: Lens' UpdateAsset Text

-- | The unique identifier for an asset.
updateAsset_assetId :: Lens' UpdateAsset Text

-- | The unique identifier for a data set.
updateAsset_dataSetId :: Lens' UpdateAsset Text

-- | The name of the asset. When importing from Amazon S3, the S3 object
--   key is used as the asset name. When exporting to Amazon S3, the asset
--   name is used as default target S3 object key.
updateAsset_name :: Lens' UpdateAsset Text

-- | <i>See:</i> <a>newUpdateAssetResponse</a> smart constructor.
data UpdateAssetResponse
UpdateAssetResponse' :: Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe AssetDetails -> Maybe Text -> Maybe AssetType -> Maybe POSIX -> Maybe Text -> Int -> UpdateAssetResponse

-- | The ARN for the asset.
[$sel:arn:UpdateAssetResponse'] :: UpdateAssetResponse -> Maybe Text

-- | The date and time that the asset was created, in ISO 8601 format.
[$sel:createdAt:UpdateAssetResponse'] :: UpdateAssetResponse -> Maybe POSIX

-- | The asset ID of the owned asset corresponding to the entitled asset
--   being viewed. This parameter is returned when an asset owner is
--   viewing the entitled copy of its owned asset.
[$sel:sourceId:UpdateAssetResponse'] :: UpdateAssetResponse -> Maybe Text

-- | The unique identifier for the data set associated with this asset.
[$sel:dataSetId:UpdateAssetResponse'] :: UpdateAssetResponse -> Maybe Text

-- | The name of the asset. When importing from Amazon S3, the S3 object
--   key is used as the asset name. When exporting to Amazon S3, the asset
--   name is used as default target S3 object key.
[$sel:name:UpdateAssetResponse'] :: UpdateAssetResponse -> Maybe Text

-- | Information about the asset.
[$sel:assetDetails:UpdateAssetResponse'] :: UpdateAssetResponse -> Maybe AssetDetails

-- | The unique identifier for the asset.
[$sel:id:UpdateAssetResponse'] :: UpdateAssetResponse -> Maybe Text

-- | The type of asset that is added to a data set.
[$sel:assetType:UpdateAssetResponse'] :: UpdateAssetResponse -> Maybe AssetType

-- | The date and time that the asset was last updated, in ISO 8601 format.
[$sel:updatedAt:UpdateAssetResponse'] :: UpdateAssetResponse -> Maybe POSIX

-- | The unique identifier for the revision associated with this asset.
[$sel:revisionId:UpdateAssetResponse'] :: UpdateAssetResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:UpdateAssetResponse'] :: UpdateAssetResponse -> Int

-- | Create a value of <a>UpdateAssetResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:UpdateAssetResponse'</a>, <a>updateAssetResponse_arn</a> -
--   The ARN for the asset.
--   
--   <a>$sel:createdAt:UpdateAssetResponse'</a>,
--   <a>updateAssetResponse_createdAt</a> - The date and time that the
--   asset was created, in ISO 8601 format.
--   
--   <a>$sel:sourceId:UpdateAssetResponse'</a>,
--   <a>updateAssetResponse_sourceId</a> - The asset ID of the owned asset
--   corresponding to the entitled asset being viewed. This parameter is
--   returned when an asset owner is viewing the entitled copy of its owned
--   asset.
--   
--   <a>$sel:dataSetId:UpdateAsset'</a>,
--   <a>updateAssetResponse_dataSetId</a> - The unique identifier for the
--   data set associated with this asset.
--   
--   <a>$sel:name:UpdateAsset'</a>, <a>updateAssetResponse_name</a> - The
--   name of the asset. When importing from Amazon S3, the S3 object key is
--   used as the asset name. When exporting to Amazon S3, the asset name is
--   used as default target S3 object key.
--   
--   <a>$sel:assetDetails:UpdateAssetResponse'</a>,
--   <a>updateAssetResponse_assetDetails</a> - Information about the asset.
--   
--   <a>$sel:id:UpdateAssetResponse'</a>, <a>updateAssetResponse_id</a> -
--   The unique identifier for the asset.
--   
--   <a>$sel:assetType:UpdateAssetResponse'</a>,
--   <a>updateAssetResponse_assetType</a> - The type of asset that is added
--   to a data set.
--   
--   <a>$sel:updatedAt:UpdateAssetResponse'</a>,
--   <a>updateAssetResponse_updatedAt</a> - The date and time that the
--   asset was last updated, in ISO 8601 format.
--   
--   <a>$sel:revisionId:UpdateAsset'</a>,
--   <a>updateAssetResponse_revisionId</a> - The unique identifier for the
--   revision associated with this asset.
--   
--   <a>$sel:httpStatus:UpdateAssetResponse'</a>,
--   <a>updateAssetResponse_httpStatus</a> - The response's http status
--   code.
newUpdateAssetResponse :: Int -> UpdateAssetResponse

-- | The ARN for the asset.
updateAssetResponse_arn :: Lens' UpdateAssetResponse (Maybe Text)

-- | The date and time that the asset was created, in ISO 8601 format.
updateAssetResponse_createdAt :: Lens' UpdateAssetResponse (Maybe UTCTime)

-- | The asset ID of the owned asset corresponding to the entitled asset
--   being viewed. This parameter is returned when an asset owner is
--   viewing the entitled copy of its owned asset.
updateAssetResponse_sourceId :: Lens' UpdateAssetResponse (Maybe Text)

-- | The unique identifier for the data set associated with this asset.
updateAssetResponse_dataSetId :: Lens' UpdateAssetResponse (Maybe Text)

-- | The name of the asset. When importing from Amazon S3, the S3 object
--   key is used as the asset name. When exporting to Amazon S3, the asset
--   name is used as default target S3 object key.
updateAssetResponse_name :: Lens' UpdateAssetResponse (Maybe Text)

-- | Information about the asset.
updateAssetResponse_assetDetails :: Lens' UpdateAssetResponse (Maybe AssetDetails)

-- | The unique identifier for the asset.
updateAssetResponse_id :: Lens' UpdateAssetResponse (Maybe Text)

-- | The type of asset that is added to a data set.
updateAssetResponse_assetType :: Lens' UpdateAssetResponse (Maybe AssetType)

-- | The date and time that the asset was last updated, in ISO 8601 format.
updateAssetResponse_updatedAt :: Lens' UpdateAssetResponse (Maybe UTCTime)

-- | The unique identifier for the revision associated with this asset.
updateAssetResponse_revisionId :: Lens' UpdateAssetResponse (Maybe Text)

-- | The response's http status code.
updateAssetResponse_httpStatus :: Lens' UpdateAssetResponse Int
instance GHC.Generics.Generic Amazonka.DataExchange.UpdateAsset.UpdateAsset
instance GHC.Show.Show Amazonka.DataExchange.UpdateAsset.UpdateAsset
instance GHC.Read.Read Amazonka.DataExchange.UpdateAsset.UpdateAsset
instance GHC.Classes.Eq Amazonka.DataExchange.UpdateAsset.UpdateAsset
instance GHC.Generics.Generic Amazonka.DataExchange.UpdateAsset.UpdateAssetResponse
instance GHC.Show.Show Amazonka.DataExchange.UpdateAsset.UpdateAssetResponse
instance GHC.Read.Read Amazonka.DataExchange.UpdateAsset.UpdateAssetResponse
instance GHC.Classes.Eq Amazonka.DataExchange.UpdateAsset.UpdateAssetResponse
instance Amazonka.Types.AWSRequest Amazonka.DataExchange.UpdateAsset.UpdateAsset
instance Control.DeepSeq.NFData Amazonka.DataExchange.UpdateAsset.UpdateAssetResponse
instance Data.Hashable.Class.Hashable Amazonka.DataExchange.UpdateAsset.UpdateAsset
instance Control.DeepSeq.NFData Amazonka.DataExchange.UpdateAsset.UpdateAsset
instance Amazonka.Data.Headers.ToHeaders Amazonka.DataExchange.UpdateAsset.UpdateAsset
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataExchange.UpdateAsset.UpdateAsset
instance Amazonka.Data.Path.ToPath Amazonka.DataExchange.UpdateAsset.UpdateAsset
instance Amazonka.Data.Query.ToQuery Amazonka.DataExchange.UpdateAsset.UpdateAsset


-- | This operation updates a data set.
module Amazonka.DataExchange.UpdateDataSet

-- | The request body for UpdateDataSet.
--   
--   <i>See:</i> <a>newUpdateDataSet</a> smart constructor.
data UpdateDataSet
UpdateDataSet' :: Maybe Text -> Maybe Text -> Text -> UpdateDataSet

-- | The name of the data set.
[$sel:name:UpdateDataSet'] :: UpdateDataSet -> Maybe Text

-- | The description for the data set.
[$sel:description:UpdateDataSet'] :: UpdateDataSet -> Maybe Text

-- | The unique identifier for a data set.
[$sel:dataSetId:UpdateDataSet'] :: UpdateDataSet -> Text

-- | Create a value of <a>UpdateDataSet</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:UpdateDataSet'</a>, <a>updateDataSet_name</a> - The name
--   of the data set.
--   
--   <a>$sel:description:UpdateDataSet'</a>,
--   <a>updateDataSet_description</a> - The description for the data set.
--   
--   <a>$sel:dataSetId:UpdateDataSet'</a>, <a>updateDataSet_dataSetId</a> -
--   The unique identifier for a data set.
newUpdateDataSet :: Text -> UpdateDataSet

-- | The name of the data set.
updateDataSet_name :: Lens' UpdateDataSet (Maybe Text)

-- | The description for the data set.
updateDataSet_description :: Lens' UpdateDataSet (Maybe Text)

-- | The unique identifier for a data set.
updateDataSet_dataSetId :: Lens' UpdateDataSet Text

-- | <i>See:</i> <a>newUpdateDataSetResponse</a> smart constructor.
data UpdateDataSetResponse
UpdateDataSetResponse' :: Maybe Origin -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe OriginDetails -> Maybe Text -> Maybe Text -> Maybe AssetType -> Maybe POSIX -> Maybe Text -> Int -> UpdateDataSetResponse

-- | A property that defines the data set as OWNED by the account (for
--   providers) or ENTITLED to the account (for subscribers).
[$sel:origin:UpdateDataSetResponse'] :: UpdateDataSetResponse -> Maybe Origin

-- | The ARN for the data set.
[$sel:arn:UpdateDataSetResponse'] :: UpdateDataSetResponse -> Maybe Text

-- | The date and time that the data set was created, in ISO 8601 format.
[$sel:createdAt:UpdateDataSetResponse'] :: UpdateDataSetResponse -> Maybe POSIX

-- | The data set ID of the owned data set corresponding to the entitled
--   data set being viewed. This parameter is returned when a data set
--   owner is viewing the entitled copy of its owned data set.
[$sel:sourceId:UpdateDataSetResponse'] :: UpdateDataSetResponse -> Maybe Text

-- | If the origin of this data set is ENTITLED, includes the details for
--   the product on AWS Marketplace.
[$sel:originDetails:UpdateDataSetResponse'] :: UpdateDataSetResponse -> Maybe OriginDetails

-- | The name of the data set.
[$sel:name:UpdateDataSetResponse'] :: UpdateDataSetResponse -> Maybe Text

-- | The unique identifier for the data set.
[$sel:id:UpdateDataSetResponse'] :: UpdateDataSetResponse -> Maybe Text

-- | The type of asset that is added to a data set.
[$sel:assetType:UpdateDataSetResponse'] :: UpdateDataSetResponse -> Maybe AssetType

-- | The date and time that the data set was last updated, in ISO 8601
--   format.
[$sel:updatedAt:UpdateDataSetResponse'] :: UpdateDataSetResponse -> Maybe POSIX

-- | The description for the data set.
[$sel:description:UpdateDataSetResponse'] :: UpdateDataSetResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:UpdateDataSetResponse'] :: UpdateDataSetResponse -> Int

-- | Create a value of <a>UpdateDataSetResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:origin:UpdateDataSetResponse'</a>,
--   <a>updateDataSetResponse_origin</a> - A property that defines the data
--   set as OWNED by the account (for providers) or ENTITLED to the account
--   (for subscribers).
--   
--   <a>$sel:arn:UpdateDataSetResponse'</a>,
--   <a>updateDataSetResponse_arn</a> - The ARN for the data set.
--   
--   <a>$sel:createdAt:UpdateDataSetResponse'</a>,
--   <a>updateDataSetResponse_createdAt</a> - The date and time that the
--   data set was created, in ISO 8601 format.
--   
--   <a>$sel:sourceId:UpdateDataSetResponse'</a>,
--   <a>updateDataSetResponse_sourceId</a> - The data set ID of the owned
--   data set corresponding to the entitled data set being viewed. This
--   parameter is returned when a data set owner is viewing the entitled
--   copy of its owned data set.
--   
--   <a>$sel:originDetails:UpdateDataSetResponse'</a>,
--   <a>updateDataSetResponse_originDetails</a> - If the origin of this
--   data set is ENTITLED, includes the details for the product on AWS
--   Marketplace.
--   
--   <a>$sel:name:UpdateDataSet'</a>, <a>updateDataSetResponse_name</a> -
--   The name of the data set.
--   
--   <a>$sel:id:UpdateDataSetResponse'</a>, <a>updateDataSetResponse_id</a>
--   - The unique identifier for the data set.
--   
--   <a>$sel:assetType:UpdateDataSetResponse'</a>,
--   <a>updateDataSetResponse_assetType</a> - The type of asset that is
--   added to a data set.
--   
--   <a>$sel:updatedAt:UpdateDataSetResponse'</a>,
--   <a>updateDataSetResponse_updatedAt</a> - The date and time that the
--   data set was last updated, in ISO 8601 format.
--   
--   <a>$sel:description:UpdateDataSet'</a>,
--   <a>updateDataSetResponse_description</a> - The description for the
--   data set.
--   
--   <a>$sel:httpStatus:UpdateDataSetResponse'</a>,
--   <a>updateDataSetResponse_httpStatus</a> - The response's http status
--   code.
newUpdateDataSetResponse :: Int -> UpdateDataSetResponse

-- | A property that defines the data set as OWNED by the account (for
--   providers) or ENTITLED to the account (for subscribers).
updateDataSetResponse_origin :: Lens' UpdateDataSetResponse (Maybe Origin)

-- | The ARN for the data set.
updateDataSetResponse_arn :: Lens' UpdateDataSetResponse (Maybe Text)

-- | The date and time that the data set was created, in ISO 8601 format.
updateDataSetResponse_createdAt :: Lens' UpdateDataSetResponse (Maybe UTCTime)

-- | The data set ID of the owned data set corresponding to the entitled
--   data set being viewed. This parameter is returned when a data set
--   owner is viewing the entitled copy of its owned data set.
updateDataSetResponse_sourceId :: Lens' UpdateDataSetResponse (Maybe Text)

-- | If the origin of this data set is ENTITLED, includes the details for
--   the product on AWS Marketplace.
updateDataSetResponse_originDetails :: Lens' UpdateDataSetResponse (Maybe OriginDetails)

-- | The name of the data set.
updateDataSetResponse_name :: Lens' UpdateDataSetResponse (Maybe Text)

-- | The unique identifier for the data set.
updateDataSetResponse_id :: Lens' UpdateDataSetResponse (Maybe Text)

-- | The type of asset that is added to a data set.
updateDataSetResponse_assetType :: Lens' UpdateDataSetResponse (Maybe AssetType)

-- | The date and time that the data set was last updated, in ISO 8601
--   format.
updateDataSetResponse_updatedAt :: Lens' UpdateDataSetResponse (Maybe UTCTime)

-- | The description for the data set.
updateDataSetResponse_description :: Lens' UpdateDataSetResponse (Maybe Text)

-- | The response's http status code.
updateDataSetResponse_httpStatus :: Lens' UpdateDataSetResponse Int
instance GHC.Generics.Generic Amazonka.DataExchange.UpdateDataSet.UpdateDataSet
instance GHC.Show.Show Amazonka.DataExchange.UpdateDataSet.UpdateDataSet
instance GHC.Read.Read Amazonka.DataExchange.UpdateDataSet.UpdateDataSet
instance GHC.Classes.Eq Amazonka.DataExchange.UpdateDataSet.UpdateDataSet
instance GHC.Generics.Generic Amazonka.DataExchange.UpdateDataSet.UpdateDataSetResponse
instance GHC.Show.Show Amazonka.DataExchange.UpdateDataSet.UpdateDataSetResponse
instance GHC.Read.Read Amazonka.DataExchange.UpdateDataSet.UpdateDataSetResponse
instance GHC.Classes.Eq Amazonka.DataExchange.UpdateDataSet.UpdateDataSetResponse
instance Amazonka.Types.AWSRequest Amazonka.DataExchange.UpdateDataSet.UpdateDataSet
instance Control.DeepSeq.NFData Amazonka.DataExchange.UpdateDataSet.UpdateDataSetResponse
instance Data.Hashable.Class.Hashable Amazonka.DataExchange.UpdateDataSet.UpdateDataSet
instance Control.DeepSeq.NFData Amazonka.DataExchange.UpdateDataSet.UpdateDataSet
instance Amazonka.Data.Headers.ToHeaders Amazonka.DataExchange.UpdateDataSet.UpdateDataSet
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataExchange.UpdateDataSet.UpdateDataSet
instance Amazonka.Data.Path.ToPath Amazonka.DataExchange.UpdateDataSet.UpdateDataSet
instance Amazonka.Data.Query.ToQuery Amazonka.DataExchange.UpdateDataSet.UpdateDataSet


-- | This operation updates the event action.
module Amazonka.DataExchange.UpdateEventAction

-- | The request body for UpdateEventAction.
--   
--   <i>See:</i> <a>newUpdateEventAction</a> smart constructor.
data UpdateEventAction
UpdateEventAction' :: Maybe Action -> Text -> UpdateEventAction

-- | What occurs after a certain event.
[$sel:action:UpdateEventAction'] :: UpdateEventAction -> Maybe Action

-- | The unique identifier for the event action.
[$sel:eventActionId:UpdateEventAction'] :: UpdateEventAction -> Text

-- | Create a value of <a>UpdateEventAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:action:UpdateEventAction'</a>, <a>updateEventAction_action</a>
--   - What occurs after a certain event.
--   
--   <a>$sel:eventActionId:UpdateEventAction'</a>,
--   <a>updateEventAction_eventActionId</a> - The unique identifier for the
--   event action.
newUpdateEventAction :: Text -> UpdateEventAction

-- | What occurs after a certain event.
updateEventAction_action :: Lens' UpdateEventAction (Maybe Action)

-- | The unique identifier for the event action.
updateEventAction_eventActionId :: Lens' UpdateEventAction Text

-- | <i>See:</i> <a>newUpdateEventActionResponse</a> smart constructor.
data UpdateEventActionResponse
UpdateEventActionResponse' :: Maybe Event -> Maybe Text -> Maybe POSIX -> Maybe Action -> Maybe Text -> Maybe POSIX -> Int -> UpdateEventActionResponse

-- | What occurs to start an action.
[$sel:event:UpdateEventActionResponse'] :: UpdateEventActionResponse -> Maybe Event

-- | The ARN for the event action.
[$sel:arn:UpdateEventActionResponse'] :: UpdateEventActionResponse -> Maybe Text

-- | The date and time that the event action was created, in ISO 8601
--   format.
[$sel:createdAt:UpdateEventActionResponse'] :: UpdateEventActionResponse -> Maybe POSIX

-- | What occurs after a certain event.
[$sel:action:UpdateEventActionResponse'] :: UpdateEventActionResponse -> Maybe Action

-- | The unique identifier for the event action.
[$sel:id:UpdateEventActionResponse'] :: UpdateEventActionResponse -> Maybe Text

-- | The date and time that the event action was last updated, in ISO 8601
--   format.
[$sel:updatedAt:UpdateEventActionResponse'] :: UpdateEventActionResponse -> Maybe POSIX

-- | The response's http status code.
[$sel:httpStatus:UpdateEventActionResponse'] :: UpdateEventActionResponse -> Int

-- | Create a value of <a>UpdateEventActionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:event:UpdateEventActionResponse'</a>,
--   <a>updateEventActionResponse_event</a> - What occurs to start an
--   action.
--   
--   <a>$sel:arn:UpdateEventActionResponse'</a>,
--   <a>updateEventActionResponse_arn</a> - The ARN for the event action.
--   
--   <a>$sel:createdAt:UpdateEventActionResponse'</a>,
--   <a>updateEventActionResponse_createdAt</a> - The date and time that
--   the event action was created, in ISO 8601 format.
--   
--   <a>$sel:action:UpdateEventAction'</a>,
--   <a>updateEventActionResponse_action</a> - What occurs after a certain
--   event.
--   
--   <a>$sel:id:UpdateEventActionResponse'</a>,
--   <a>updateEventActionResponse_id</a> - The unique identifier for the
--   event action.
--   
--   <a>$sel:updatedAt:UpdateEventActionResponse'</a>,
--   <a>updateEventActionResponse_updatedAt</a> - The date and time that
--   the event action was last updated, in ISO 8601 format.
--   
--   <a>$sel:httpStatus:UpdateEventActionResponse'</a>,
--   <a>updateEventActionResponse_httpStatus</a> - The response's http
--   status code.
newUpdateEventActionResponse :: Int -> UpdateEventActionResponse

-- | What occurs to start an action.
updateEventActionResponse_event :: Lens' UpdateEventActionResponse (Maybe Event)

-- | The ARN for the event action.
updateEventActionResponse_arn :: Lens' UpdateEventActionResponse (Maybe Text)

-- | The date and time that the event action was created, in ISO 8601
--   format.
updateEventActionResponse_createdAt :: Lens' UpdateEventActionResponse (Maybe UTCTime)

-- | What occurs after a certain event.
updateEventActionResponse_action :: Lens' UpdateEventActionResponse (Maybe Action)

-- | The unique identifier for the event action.
updateEventActionResponse_id :: Lens' UpdateEventActionResponse (Maybe Text)

-- | The date and time that the event action was last updated, in ISO 8601
--   format.
updateEventActionResponse_updatedAt :: Lens' UpdateEventActionResponse (Maybe UTCTime)

-- | The response's http status code.
updateEventActionResponse_httpStatus :: Lens' UpdateEventActionResponse Int
instance GHC.Generics.Generic Amazonka.DataExchange.UpdateEventAction.UpdateEventAction
instance GHC.Show.Show Amazonka.DataExchange.UpdateEventAction.UpdateEventAction
instance GHC.Read.Read Amazonka.DataExchange.UpdateEventAction.UpdateEventAction
instance GHC.Classes.Eq Amazonka.DataExchange.UpdateEventAction.UpdateEventAction
instance GHC.Generics.Generic Amazonka.DataExchange.UpdateEventAction.UpdateEventActionResponse
instance GHC.Show.Show Amazonka.DataExchange.UpdateEventAction.UpdateEventActionResponse
instance GHC.Read.Read Amazonka.DataExchange.UpdateEventAction.UpdateEventActionResponse
instance GHC.Classes.Eq Amazonka.DataExchange.UpdateEventAction.UpdateEventActionResponse
instance Amazonka.Types.AWSRequest Amazonka.DataExchange.UpdateEventAction.UpdateEventAction
instance Control.DeepSeq.NFData Amazonka.DataExchange.UpdateEventAction.UpdateEventActionResponse
instance Data.Hashable.Class.Hashable Amazonka.DataExchange.UpdateEventAction.UpdateEventAction
instance Control.DeepSeq.NFData Amazonka.DataExchange.UpdateEventAction.UpdateEventAction
instance Amazonka.Data.Headers.ToHeaders Amazonka.DataExchange.UpdateEventAction.UpdateEventAction
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataExchange.UpdateEventAction.UpdateEventAction
instance Amazonka.Data.Path.ToPath Amazonka.DataExchange.UpdateEventAction.UpdateEventAction
instance Amazonka.Data.Query.ToQuery Amazonka.DataExchange.UpdateEventAction.UpdateEventAction


-- | This operation updates a revision.
module Amazonka.DataExchange.UpdateRevision

-- | The request body for UpdateRevision.
--   
--   <i>See:</i> <a>newUpdateRevision</a> smart constructor.
data UpdateRevision
UpdateRevision' :: Maybe Bool -> Maybe Text -> Text -> Text -> UpdateRevision

-- | Finalizing a revision tells AWS Data Exchange that your changes to the
--   assets in the revision are complete. After it's in this read-only
--   state, you can publish the revision to your products.
[$sel:finalized:UpdateRevision'] :: UpdateRevision -> Maybe Bool

-- | An optional comment about the revision.
[$sel:comment:UpdateRevision'] :: UpdateRevision -> Maybe Text

-- | The unique identifier for a revision.
[$sel:revisionId:UpdateRevision'] :: UpdateRevision -> Text

-- | The unique identifier for a data set.
[$sel:dataSetId:UpdateRevision'] :: UpdateRevision -> Text

-- | Create a value of <a>UpdateRevision</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:finalized:UpdateRevision'</a>, <a>updateRevision_finalized</a>
--   - Finalizing a revision tells AWS Data Exchange that your changes to
--   the assets in the revision are complete. After it's in this read-only
--   state, you can publish the revision to your products.
--   
--   <a>$sel:comment:UpdateRevision'</a>, <a>updateRevision_comment</a> -
--   An optional comment about the revision.
--   
--   <a>$sel:revisionId:UpdateRevision'</a>,
--   <a>updateRevision_revisionId</a> - The unique identifier for a
--   revision.
--   
--   <a>$sel:dataSetId:UpdateRevision'</a>, <a>updateRevision_dataSetId</a>
--   - The unique identifier for a data set.
newUpdateRevision :: Text -> Text -> UpdateRevision

-- | Finalizing a revision tells AWS Data Exchange that your changes to the
--   assets in the revision are complete. After it's in this read-only
--   state, you can publish the revision to your products.
updateRevision_finalized :: Lens' UpdateRevision (Maybe Bool)

-- | An optional comment about the revision.
updateRevision_comment :: Lens' UpdateRevision (Maybe Text)

-- | The unique identifier for a revision.
updateRevision_revisionId :: Lens' UpdateRevision Text

-- | The unique identifier for a data set.
updateRevision_dataSetId :: Lens' UpdateRevision Text

-- | <i>See:</i> <a>newUpdateRevisionResponse</a> smart constructor.
data UpdateRevisionResponse
UpdateRevisionResponse' :: Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Int -> UpdateRevisionResponse

-- | The ARN for the revision.
[$sel:arn:UpdateRevisionResponse'] :: UpdateRevisionResponse -> Maybe Text

-- | The date and time that the revision was created, in ISO 8601 format.
[$sel:createdAt:UpdateRevisionResponse'] :: UpdateRevisionResponse -> Maybe POSIX

-- | The revision ID of the owned revision corresponding to the entitled
--   revision being viewed. This parameter is returned when a revision
--   owner is viewing the entitled copy of its owned revision.
[$sel:sourceId:UpdateRevisionResponse'] :: UpdateRevisionResponse -> Maybe Text

-- | To publish a revision to a data set in a product, the revision must
--   first be finalized. Finalizing a revision tells AWS Data Exchange that
--   changes to the assets in the revision are complete. After it's in this
--   read-only state, you can publish the revision to your products.
--   
--   Finalized revisions can be published through the AWS Data Exchange
--   console or the AWS Marketplace Catalog API, using the StartChangeSet
--   AWS Marketplace Catalog API action. When using the API, revisions are
--   uniquely identified by their ARN.
[$sel:finalized:UpdateRevisionResponse'] :: UpdateRevisionResponse -> Maybe Bool

-- | The unique identifier for the data set associated with this revision.
[$sel:dataSetId:UpdateRevisionResponse'] :: UpdateRevisionResponse -> Maybe Text

-- | The unique identifier for the revision.
[$sel:id:UpdateRevisionResponse'] :: UpdateRevisionResponse -> Maybe Text

-- | The date and time that the revision was last updated, in ISO 8601
--   format.
[$sel:updatedAt:UpdateRevisionResponse'] :: UpdateRevisionResponse -> Maybe POSIX

-- | An optional comment about the revision.
[$sel:comment:UpdateRevisionResponse'] :: UpdateRevisionResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:UpdateRevisionResponse'] :: UpdateRevisionResponse -> Int

-- | Create a value of <a>UpdateRevisionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:UpdateRevisionResponse'</a>,
--   <a>updateRevisionResponse_arn</a> - The ARN for the revision.
--   
--   <a>$sel:createdAt:UpdateRevisionResponse'</a>,
--   <a>updateRevisionResponse_createdAt</a> - The date and time that the
--   revision was created, in ISO 8601 format.
--   
--   <a>$sel:sourceId:UpdateRevisionResponse'</a>,
--   <a>updateRevisionResponse_sourceId</a> - The revision ID of the owned
--   revision corresponding to the entitled revision being viewed. This
--   parameter is returned when a revision owner is viewing the entitled
--   copy of its owned revision.
--   
--   <a>$sel:finalized:UpdateRevision'</a>,
--   <a>updateRevisionResponse_finalized</a> - To publish a revision to a
--   data set in a product, the revision must first be finalized.
--   Finalizing a revision tells AWS Data Exchange that changes to the
--   assets in the revision are complete. After it's in this read-only
--   state, you can publish the revision to your products.
--   
--   Finalized revisions can be published through the AWS Data Exchange
--   console or the AWS Marketplace Catalog API, using the StartChangeSet
--   AWS Marketplace Catalog API action. When using the API, revisions are
--   uniquely identified by their ARN.
--   
--   <a>$sel:dataSetId:UpdateRevision'</a>,
--   <a>updateRevisionResponse_dataSetId</a> - The unique identifier for
--   the data set associated with this revision.
--   
--   <a>$sel:id:UpdateRevisionResponse'</a>,
--   <a>updateRevisionResponse_id</a> - The unique identifier for the
--   revision.
--   
--   <a>$sel:updatedAt:UpdateRevisionResponse'</a>,
--   <a>updateRevisionResponse_updatedAt</a> - The date and time that the
--   revision was last updated, in ISO 8601 format.
--   
--   <a>$sel:comment:UpdateRevision'</a>,
--   <a>updateRevisionResponse_comment</a> - An optional comment about the
--   revision.
--   
--   <a>$sel:httpStatus:UpdateRevisionResponse'</a>,
--   <a>updateRevisionResponse_httpStatus</a> - The response's http status
--   code.
newUpdateRevisionResponse :: Int -> UpdateRevisionResponse

-- | The ARN for the revision.
updateRevisionResponse_arn :: Lens' UpdateRevisionResponse (Maybe Text)

-- | The date and time that the revision was created, in ISO 8601 format.
updateRevisionResponse_createdAt :: Lens' UpdateRevisionResponse (Maybe UTCTime)

-- | The revision ID of the owned revision corresponding to the entitled
--   revision being viewed. This parameter is returned when a revision
--   owner is viewing the entitled copy of its owned revision.
updateRevisionResponse_sourceId :: Lens' UpdateRevisionResponse (Maybe Text)

-- | To publish a revision to a data set in a product, the revision must
--   first be finalized. Finalizing a revision tells AWS Data Exchange that
--   changes to the assets in the revision are complete. After it's in this
--   read-only state, you can publish the revision to your products.
--   
--   Finalized revisions can be published through the AWS Data Exchange
--   console or the AWS Marketplace Catalog API, using the StartChangeSet
--   AWS Marketplace Catalog API action. When using the API, revisions are
--   uniquely identified by their ARN.
updateRevisionResponse_finalized :: Lens' UpdateRevisionResponse (Maybe Bool)

-- | The unique identifier for the data set associated with this revision.
updateRevisionResponse_dataSetId :: Lens' UpdateRevisionResponse (Maybe Text)

-- | The unique identifier for the revision.
updateRevisionResponse_id :: Lens' UpdateRevisionResponse (Maybe Text)

-- | The date and time that the revision was last updated, in ISO 8601
--   format.
updateRevisionResponse_updatedAt :: Lens' UpdateRevisionResponse (Maybe UTCTime)

-- | An optional comment about the revision.
updateRevisionResponse_comment :: Lens' UpdateRevisionResponse (Maybe Text)

-- | The response's http status code.
updateRevisionResponse_httpStatus :: Lens' UpdateRevisionResponse Int
instance GHC.Generics.Generic Amazonka.DataExchange.UpdateRevision.UpdateRevision
instance GHC.Show.Show Amazonka.DataExchange.UpdateRevision.UpdateRevision
instance GHC.Read.Read Amazonka.DataExchange.UpdateRevision.UpdateRevision
instance GHC.Classes.Eq Amazonka.DataExchange.UpdateRevision.UpdateRevision
instance GHC.Generics.Generic Amazonka.DataExchange.UpdateRevision.UpdateRevisionResponse
instance GHC.Show.Show Amazonka.DataExchange.UpdateRevision.UpdateRevisionResponse
instance GHC.Read.Read Amazonka.DataExchange.UpdateRevision.UpdateRevisionResponse
instance GHC.Classes.Eq Amazonka.DataExchange.UpdateRevision.UpdateRevisionResponse
instance Amazonka.Types.AWSRequest Amazonka.DataExchange.UpdateRevision.UpdateRevision
instance Control.DeepSeq.NFData Amazonka.DataExchange.UpdateRevision.UpdateRevisionResponse
instance Data.Hashable.Class.Hashable Amazonka.DataExchange.UpdateRevision.UpdateRevision
instance Control.DeepSeq.NFData Amazonka.DataExchange.UpdateRevision.UpdateRevision
instance Amazonka.Data.Headers.ToHeaders Amazonka.DataExchange.UpdateRevision.UpdateRevision
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataExchange.UpdateRevision.UpdateRevision
instance Amazonka.Data.Path.ToPath Amazonka.DataExchange.UpdateRevision.UpdateRevision
instance Amazonka.Data.Query.ToQuery Amazonka.DataExchange.UpdateRevision.UpdateRevision


module Amazonka.DataExchange.Lens

-- | The unique identifier for the event action.
getEventAction_eventActionId :: Lens' GetEventAction Text

-- | What occurs to start an action.
getEventActionResponse_event :: Lens' GetEventActionResponse (Maybe Event)

-- | The ARN for the event action.
getEventActionResponse_arn :: Lens' GetEventActionResponse (Maybe Text)

-- | The date and time that the event action was created, in ISO 8601
--   format.
getEventActionResponse_createdAt :: Lens' GetEventActionResponse (Maybe UTCTime)

-- | What occurs after a certain event.
getEventActionResponse_action :: Lens' GetEventActionResponse (Maybe Action)

-- | The unique identifier for the event action.
getEventActionResponse_id :: Lens' GetEventActionResponse (Maybe Text)

-- | The date and time that the event action was last updated, in ISO 8601
--   format.
getEventActionResponse_updatedAt :: Lens' GetEventActionResponse (Maybe UTCTime)

-- | The response's http status code.
getEventActionResponse_httpStatus :: Lens' GetEventActionResponse Int

-- | An optional comment about the revision.
createRevision_comment :: Lens' CreateRevision (Maybe Text)

-- | A revision tag is an optional label that you can assign to a revision
--   when you create it. Each tag consists of a key and an optional value,
--   both of which you define. When you use tagging, you can also use
--   tag-based access control in IAM policies to control access to these
--   data sets and revisions.
createRevision_tags :: Lens' CreateRevision (Maybe (HashMap Text Text))

-- | The unique identifier for a data set.
createRevision_dataSetId :: Lens' CreateRevision Text

-- | The ARN for the revision.
createRevisionResponse_arn :: Lens' CreateRevisionResponse (Maybe Text)

-- | The date and time that the revision was created, in ISO 8601 format.
createRevisionResponse_createdAt :: Lens' CreateRevisionResponse (Maybe UTCTime)

-- | The revision ID of the owned revision corresponding to the entitled
--   revision being viewed. This parameter is returned when a revision
--   owner is viewing the entitled copy of its owned revision.
createRevisionResponse_sourceId :: Lens' CreateRevisionResponse (Maybe Text)

-- | To publish a revision to a data set in a product, the revision must
--   first be finalized. Finalizing a revision tells AWS Data Exchange that
--   your changes to the assets in the revision are complete. After it's in
--   this read-only state, you can publish the revision to your products.
--   
--   Finalized revisions can be published through the AWS Data Exchange
--   console or the AWS Marketplace Catalog API, using the StartChangeSet
--   AWS Marketplace Catalog API action. When using the API, revisions are
--   uniquely identified by their ARN.
createRevisionResponse_finalized :: Lens' CreateRevisionResponse (Maybe Bool)

-- | The unique identifier for the data set associated with this revision.
createRevisionResponse_dataSetId :: Lens' CreateRevisionResponse (Maybe Text)

-- | The unique identifier for the revision.
createRevisionResponse_id :: Lens' CreateRevisionResponse (Maybe Text)

-- | The date and time that the revision was last updated, in ISO 8601
--   format.
createRevisionResponse_updatedAt :: Lens' CreateRevisionResponse (Maybe UTCTime)

-- | An optional comment about the revision.
createRevisionResponse_comment :: Lens' CreateRevisionResponse (Maybe Text)

-- | The tags for the revision.
createRevisionResponse_tags :: Lens' CreateRevisionResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
createRevisionResponse_httpStatus :: Lens' CreateRevisionResponse Int

-- | The token value retrieved from a previous call to access the next page
--   of results.
listRevisionAssets_nextToken :: Lens' ListRevisionAssets (Maybe Text)

-- | The maximum number of results returned by a single call.
listRevisionAssets_maxResults :: Lens' ListRevisionAssets (Maybe Natural)

-- | The unique identifier for a revision.
listRevisionAssets_revisionId :: Lens' ListRevisionAssets Text

-- | The unique identifier for a data set.
listRevisionAssets_dataSetId :: Lens' ListRevisionAssets Text

-- | The token value retrieved from a previous call to access the next page
--   of results.
listRevisionAssetsResponse_nextToken :: Lens' ListRevisionAssetsResponse (Maybe Text)

-- | The asset objects listed by the request.
listRevisionAssetsResponse_assets :: Lens' ListRevisionAssetsResponse (Maybe [AssetEntry])

-- | The response's http status code.
listRevisionAssetsResponse_httpStatus :: Lens' ListRevisionAssetsResponse Int

-- | The unique identifier for a revision.
deleteRevision_revisionId :: Lens' DeleteRevision Text

-- | The unique identifier for a data set.
deleteRevision_dataSetId :: Lens' DeleteRevision Text

-- | Finalizing a revision tells AWS Data Exchange that your changes to the
--   assets in the revision are complete. After it's in this read-only
--   state, you can publish the revision to your products.
updateRevision_finalized :: Lens' UpdateRevision (Maybe Bool)

-- | An optional comment about the revision.
updateRevision_comment :: Lens' UpdateRevision (Maybe Text)

-- | The unique identifier for a revision.
updateRevision_revisionId :: Lens' UpdateRevision Text

-- | The unique identifier for a data set.
updateRevision_dataSetId :: Lens' UpdateRevision Text

-- | The ARN for the revision.
updateRevisionResponse_arn :: Lens' UpdateRevisionResponse (Maybe Text)

-- | The date and time that the revision was created, in ISO 8601 format.
updateRevisionResponse_createdAt :: Lens' UpdateRevisionResponse (Maybe UTCTime)

-- | The revision ID of the owned revision corresponding to the entitled
--   revision being viewed. This parameter is returned when a revision
--   owner is viewing the entitled copy of its owned revision.
updateRevisionResponse_sourceId :: Lens' UpdateRevisionResponse (Maybe Text)

-- | To publish a revision to a data set in a product, the revision must
--   first be finalized. Finalizing a revision tells AWS Data Exchange that
--   changes to the assets in the revision are complete. After it's in this
--   read-only state, you can publish the revision to your products.
--   
--   Finalized revisions can be published through the AWS Data Exchange
--   console or the AWS Marketplace Catalog API, using the StartChangeSet
--   AWS Marketplace Catalog API action. When using the API, revisions are
--   uniquely identified by their ARN.
updateRevisionResponse_finalized :: Lens' UpdateRevisionResponse (Maybe Bool)

-- | The unique identifier for the data set associated with this revision.
updateRevisionResponse_dataSetId :: Lens' UpdateRevisionResponse (Maybe Text)

-- | The unique identifier for the revision.
updateRevisionResponse_id :: Lens' UpdateRevisionResponse (Maybe Text)

-- | The date and time that the revision was last updated, in ISO 8601
--   format.
updateRevisionResponse_updatedAt :: Lens' UpdateRevisionResponse (Maybe UTCTime)

-- | An optional comment about the revision.
updateRevisionResponse_comment :: Lens' UpdateRevisionResponse (Maybe Text)

-- | The response's http status code.
updateRevisionResponse_httpStatus :: Lens' UpdateRevisionResponse Int

-- | An Amazon Resource Name (ARN) that uniquely identifies an AWS
--   resource.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | A label that consists of a customer-defined key and an optional value.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int

-- | The unique identifier for a revision.
getRevision_revisionId :: Lens' GetRevision Text

-- | The unique identifier for a data set.
getRevision_dataSetId :: Lens' GetRevision Text

-- | The ARN for the revision.
getRevisionResponse_arn :: Lens' GetRevisionResponse (Maybe Text)

-- | The date and time that the revision was created, in ISO 8601 format.
getRevisionResponse_createdAt :: Lens' GetRevisionResponse (Maybe UTCTime)

-- | The revision ID of the owned revision corresponding to the entitled
--   revision being viewed. This parameter is returned when a revision
--   owner is viewing the entitled copy of its owned revision.
getRevisionResponse_sourceId :: Lens' GetRevisionResponse (Maybe Text)

-- | To publish a revision to a data set in a product, the revision must
--   first be finalized. Finalizing a revision tells AWS Data Exchange that
--   your changes to the assets in the revision are complete. After it's in
--   this read-only state, you can publish the revision to your products.
--   
--   Finalized revisions can be published through the AWS Data Exchange
--   console or the AWS Marketplace Catalog API, using the StartChangeSet
--   AWS Marketplace Catalog API action. When using the API, revisions are
--   uniquely identified by their ARN.
getRevisionResponse_finalized :: Lens' GetRevisionResponse (Maybe Bool)

-- | The unique identifier for the data set associated with this revision.
getRevisionResponse_dataSetId :: Lens' GetRevisionResponse (Maybe Text)

-- | The unique identifier for the revision.
getRevisionResponse_id :: Lens' GetRevisionResponse (Maybe Text)

-- | The date and time that the revision was last updated, in ISO 8601
--   format.
getRevisionResponse_updatedAt :: Lens' GetRevisionResponse (Maybe UTCTime)

-- | An optional comment about the revision.
getRevisionResponse_comment :: Lens' GetRevisionResponse (Maybe Text)

-- | The tags for the revision.
getRevisionResponse_tags :: Lens' GetRevisionResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
getRevisionResponse_httpStatus :: Lens' GetRevisionResponse Int

-- | The unique identifier for a data set.
deleteDataSet_dataSetId :: Lens' DeleteDataSet Text

-- | The name of the data set.
updateDataSet_name :: Lens' UpdateDataSet (Maybe Text)

-- | The description for the data set.
updateDataSet_description :: Lens' UpdateDataSet (Maybe Text)

-- | The unique identifier for a data set.
updateDataSet_dataSetId :: Lens' UpdateDataSet Text

-- | A property that defines the data set as OWNED by the account (for
--   providers) or ENTITLED to the account (for subscribers).
updateDataSetResponse_origin :: Lens' UpdateDataSetResponse (Maybe Origin)

-- | The ARN for the data set.
updateDataSetResponse_arn :: Lens' UpdateDataSetResponse (Maybe Text)

-- | The date and time that the data set was created, in ISO 8601 format.
updateDataSetResponse_createdAt :: Lens' UpdateDataSetResponse (Maybe UTCTime)

-- | The data set ID of the owned data set corresponding to the entitled
--   data set being viewed. This parameter is returned when a data set
--   owner is viewing the entitled copy of its owned data set.
updateDataSetResponse_sourceId :: Lens' UpdateDataSetResponse (Maybe Text)

-- | If the origin of this data set is ENTITLED, includes the details for
--   the product on AWS Marketplace.
updateDataSetResponse_originDetails :: Lens' UpdateDataSetResponse (Maybe OriginDetails)

-- | The name of the data set.
updateDataSetResponse_name :: Lens' UpdateDataSetResponse (Maybe Text)

-- | The unique identifier for the data set.
updateDataSetResponse_id :: Lens' UpdateDataSetResponse (Maybe Text)

-- | The type of asset that is added to a data set.
updateDataSetResponse_assetType :: Lens' UpdateDataSetResponse (Maybe AssetType)

-- | The date and time that the data set was last updated, in ISO 8601
--   format.
updateDataSetResponse_updatedAt :: Lens' UpdateDataSetResponse (Maybe UTCTime)

-- | The description for the data set.
updateDataSetResponse_description :: Lens' UpdateDataSetResponse (Maybe Text)

-- | The response's http status code.
updateDataSetResponse_httpStatus :: Lens' UpdateDataSetResponse Int

-- | The type of job to be created.
createJob_type :: Lens' CreateJob Type

-- | The details for the CreateJob request.
createJob_details :: Lens' CreateJob RequestDetails

-- | The state of the job.
createJobResponse_state :: Lens' CreateJobResponse (Maybe State)

-- | The ARN for the job.
createJobResponse_arn :: Lens' CreateJobResponse (Maybe Text)

-- | The date and time that the job was created, in ISO 8601 format.
createJobResponse_createdAt :: Lens' CreateJobResponse (Maybe UTCTime)

-- | Details about the job.
createJobResponse_details :: Lens' CreateJobResponse (Maybe ResponseDetails)

-- | The unique identifier for the job.
createJobResponse_id :: Lens' CreateJobResponse (Maybe Text)

-- | The job type.
createJobResponse_type :: Lens' CreateJobResponse (Maybe Type)

-- | The date and time that the job was last updated, in ISO 8601 format.
createJobResponse_updatedAt :: Lens' CreateJobResponse (Maybe UTCTime)

-- | The errors associated with jobs.
createJobResponse_errors :: Lens' CreateJobResponse (Maybe [JobError])

-- | The response's http status code.
createJobResponse_httpStatus :: Lens' CreateJobResponse Int

-- | The unique identifier for the event source.
listEventActions_eventSourceId :: Lens' ListEventActions (Maybe Text)

-- | The token value retrieved from a previous call to access the next page
--   of results.
listEventActions_nextToken :: Lens' ListEventActions (Maybe Text)

-- | The maximum number of results returned by a single call.
listEventActions_maxResults :: Lens' ListEventActions (Maybe Natural)

-- | The event action objects listed by the request.
listEventActionsResponse_eventActions :: Lens' ListEventActionsResponse (Maybe [EventActionEntry])

-- | The token value retrieved from a previous call to access the next page
--   of results.
listEventActionsResponse_nextToken :: Lens' ListEventActionsResponse (Maybe Text)

-- | The response's http status code.
listEventActionsResponse_httpStatus :: Lens' ListEventActionsResponse Int

-- | The unique identifier for a revision.
getAsset_revisionId :: Lens' GetAsset Text

-- | The unique identifier for an asset.
getAsset_assetId :: Lens' GetAsset Text

-- | The unique identifier for a data set.
getAsset_dataSetId :: Lens' GetAsset Text

-- | The ARN for the asset.
getAssetResponse_arn :: Lens' GetAssetResponse (Maybe Text)

-- | The date and time that the asset was created, in ISO 8601 format.
getAssetResponse_createdAt :: Lens' GetAssetResponse (Maybe UTCTime)

-- | The asset ID of the owned asset corresponding to the entitled asset
--   being viewed. This parameter is returned when an asset owner is
--   viewing the entitled copy of its owned asset.
getAssetResponse_sourceId :: Lens' GetAssetResponse (Maybe Text)

-- | The unique identifier for the data set associated with this asset.
getAssetResponse_dataSetId :: Lens' GetAssetResponse (Maybe Text)

-- | The name of the asset. When importing from Amazon S3, the S3 object
--   key is used as the asset name. When exporting to Amazon S3, the asset
--   name is used as default target S3 object key.
getAssetResponse_name :: Lens' GetAssetResponse (Maybe Text)

-- | Information about the asset.
getAssetResponse_assetDetails :: Lens' GetAssetResponse (Maybe AssetDetails)

-- | The unique identifier for the asset.
getAssetResponse_id :: Lens' GetAssetResponse (Maybe Text)

-- | The type of asset that is added to a data set.
getAssetResponse_assetType :: Lens' GetAssetResponse (Maybe AssetType)

-- | The date and time that the asset was last updated, in ISO 8601 format.
getAssetResponse_updatedAt :: Lens' GetAssetResponse (Maybe UTCTime)

-- | The unique identifier for the revision associated with this asset.
getAssetResponse_revisionId :: Lens' GetAssetResponse (Maybe Text)

-- | The response's http status code.
getAssetResponse_httpStatus :: Lens' GetAssetResponse Int

-- | The token value retrieved from a previous call to access the next page
--   of results.
listJobs_nextToken :: Lens' ListJobs (Maybe Text)

-- | The unique identifier for a data set.
listJobs_dataSetId :: Lens' ListJobs (Maybe Text)

-- | The maximum number of results returned by a single call.
listJobs_maxResults :: Lens' ListJobs (Maybe Natural)

-- | The unique identifier for a revision.
listJobs_revisionId :: Lens' ListJobs (Maybe Text)

-- | The token value retrieved from a previous call to access the next page
--   of results.
listJobsResponse_nextToken :: Lens' ListJobsResponse (Maybe Text)

-- | The jobs listed by the request.
listJobsResponse_jobs :: Lens' ListJobsResponse (Maybe [JobEntry])

-- | The response's http status code.
listJobsResponse_httpStatus :: Lens' ListJobsResponse Int

-- | A data set tag is an optional label that you can assign to a data set
--   when you create it. Each tag consists of a key and an optional value,
--   both of which you define. When you use tagging, you can also use
--   tag-based access control in IAM policies to control access to these
--   data sets and revisions.
createDataSet_tags :: Lens' CreateDataSet (Maybe (HashMap Text Text))

-- | The type of asset that is added to a data set.
createDataSet_assetType :: Lens' CreateDataSet AssetType

-- | A description for the data set. This value can be up to 16,348
--   characters long.
createDataSet_description :: Lens' CreateDataSet Text

-- | The name of the data set.
createDataSet_name :: Lens' CreateDataSet Text

-- | A property that defines the data set as OWNED by the account (for
--   providers) or ENTITLED to the account (for subscribers).
createDataSetResponse_origin :: Lens' CreateDataSetResponse (Maybe Origin)

-- | The ARN for the data set.
createDataSetResponse_arn :: Lens' CreateDataSetResponse (Maybe Text)

-- | The date and time that the data set was created, in ISO 8601 format.
createDataSetResponse_createdAt :: Lens' CreateDataSetResponse (Maybe UTCTime)

-- | The data set ID of the owned data set corresponding to the entitled
--   data set being viewed. This parameter is returned when a data set
--   owner is viewing the entitled copy of its owned data set.
createDataSetResponse_sourceId :: Lens' CreateDataSetResponse (Maybe Text)

-- | If the origin of this data set is ENTITLED, includes the details for
--   the product on AWS Marketplace.
createDataSetResponse_originDetails :: Lens' CreateDataSetResponse (Maybe OriginDetails)

-- | The name of the data set.
createDataSetResponse_name :: Lens' CreateDataSetResponse (Maybe Text)

-- | The unique identifier for the data set.
createDataSetResponse_id :: Lens' CreateDataSetResponse (Maybe Text)

-- | The type of asset that is added to a data set.
createDataSetResponse_assetType :: Lens' CreateDataSetResponse (Maybe AssetType)

-- | The date and time that the data set was last updated, in ISO 8601
--   format.
createDataSetResponse_updatedAt :: Lens' CreateDataSetResponse (Maybe UTCTime)

-- | The description for the data set.
createDataSetResponse_description :: Lens' CreateDataSetResponse (Maybe Text)

-- | The tags for the data set.
createDataSetResponse_tags :: Lens' CreateDataSetResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
createDataSetResponse_httpStatus :: Lens' CreateDataSetResponse Int

-- | The unique identifier for a revision.
deleteAsset_revisionId :: Lens' DeleteAsset Text

-- | The unique identifier for an asset.
deleteAsset_assetId :: Lens' DeleteAsset Text

-- | The unique identifier for a data set.
deleteAsset_dataSetId :: Lens' DeleteAsset Text

-- | The unique identifier for a revision.
updateAsset_revisionId :: Lens' UpdateAsset Text

-- | The unique identifier for an asset.
updateAsset_assetId :: Lens' UpdateAsset Text

-- | The unique identifier for a data set.
updateAsset_dataSetId :: Lens' UpdateAsset Text

-- | The name of the asset. When importing from Amazon S3, the S3 object
--   key is used as the asset name. When exporting to Amazon S3, the asset
--   name is used as default target S3 object key.
updateAsset_name :: Lens' UpdateAsset Text

-- | The ARN for the asset.
updateAssetResponse_arn :: Lens' UpdateAssetResponse (Maybe Text)

-- | The date and time that the asset was created, in ISO 8601 format.
updateAssetResponse_createdAt :: Lens' UpdateAssetResponse (Maybe UTCTime)

-- | The asset ID of the owned asset corresponding to the entitled asset
--   being viewed. This parameter is returned when an asset owner is
--   viewing the entitled copy of its owned asset.
updateAssetResponse_sourceId :: Lens' UpdateAssetResponse (Maybe Text)

-- | The unique identifier for the data set associated with this asset.
updateAssetResponse_dataSetId :: Lens' UpdateAssetResponse (Maybe Text)

-- | The name of the asset. When importing from Amazon S3, the S3 object
--   key is used as the asset name. When exporting to Amazon S3, the asset
--   name is used as default target S3 object key.
updateAssetResponse_name :: Lens' UpdateAssetResponse (Maybe Text)

-- | Information about the asset.
updateAssetResponse_assetDetails :: Lens' UpdateAssetResponse (Maybe AssetDetails)

-- | The unique identifier for the asset.
updateAssetResponse_id :: Lens' UpdateAssetResponse (Maybe Text)

-- | The type of asset that is added to a data set.
updateAssetResponse_assetType :: Lens' UpdateAssetResponse (Maybe AssetType)

-- | The date and time that the asset was last updated, in ISO 8601 format.
updateAssetResponse_updatedAt :: Lens' UpdateAssetResponse (Maybe UTCTime)

-- | The unique identifier for the revision associated with this asset.
updateAssetResponse_revisionId :: Lens' UpdateAssetResponse (Maybe Text)

-- | The response's http status code.
updateAssetResponse_httpStatus :: Lens' UpdateAssetResponse Int

-- | The unique identifier for a job.
getJob_jobId :: Lens' GetJob Text

-- | The state of the job.
getJobResponse_state :: Lens' GetJobResponse (Maybe State)

-- | The ARN for the job.
getJobResponse_arn :: Lens' GetJobResponse (Maybe Text)

-- | The date and time that the job was created, in ISO 8601 format.
getJobResponse_createdAt :: Lens' GetJobResponse (Maybe UTCTime)

-- | Details about the job.
getJobResponse_details :: Lens' GetJobResponse (Maybe ResponseDetails)

-- | The unique identifier for the job.
getJobResponse_id :: Lens' GetJobResponse (Maybe Text)

-- | The job type.
getJobResponse_type :: Lens' GetJobResponse (Maybe Type)

-- | The date and time that the job was last updated, in ISO 8601 format.
getJobResponse_updatedAt :: Lens' GetJobResponse (Maybe UTCTime)

-- | The errors associated with jobs.
getJobResponse_errors :: Lens' GetJobResponse (Maybe [JobError])

-- | The response's http status code.
getJobResponse_httpStatus :: Lens' GetJobResponse Int

-- | The unique identifier for a data set.
getDataSet_dataSetId :: Lens' GetDataSet Text

-- | A property that defines the data set as OWNED by the account (for
--   providers) or ENTITLED to the account (for subscribers).
getDataSetResponse_origin :: Lens' GetDataSetResponse (Maybe Origin)

-- | The ARN for the data set.
getDataSetResponse_arn :: Lens' GetDataSetResponse (Maybe Text)

-- | The date and time that the data set was created, in ISO 8601 format.
getDataSetResponse_createdAt :: Lens' GetDataSetResponse (Maybe UTCTime)

-- | The data set ID of the owned data set corresponding to the entitled
--   data set being viewed. This parameter is returned when a data set
--   owner is viewing the entitled copy of its owned data set.
getDataSetResponse_sourceId :: Lens' GetDataSetResponse (Maybe Text)

-- | If the origin of this data set is ENTITLED, includes the details for
--   the product on AWS Marketplace.
getDataSetResponse_originDetails :: Lens' GetDataSetResponse (Maybe OriginDetails)

-- | The name of the data set.
getDataSetResponse_name :: Lens' GetDataSetResponse (Maybe Text)

-- | The unique identifier for the data set.
getDataSetResponse_id :: Lens' GetDataSetResponse (Maybe Text)

-- | The type of asset that is added to a data set.
getDataSetResponse_assetType :: Lens' GetDataSetResponse (Maybe AssetType)

-- | The date and time that the data set was last updated, in ISO 8601
--   format.
getDataSetResponse_updatedAt :: Lens' GetDataSetResponse (Maybe UTCTime)

-- | The description for the data set.
getDataSetResponse_description :: Lens' GetDataSetResponse (Maybe Text)

-- | The tags for the data set.
getDataSetResponse_tags :: Lens' GetDataSetResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
getDataSetResponse_httpStatus :: Lens' GetDataSetResponse Int

-- | The unique identifier for a job.
startJob_jobId :: Lens' StartJob Text

-- | The response's http status code.
startJobResponse_httpStatus :: Lens' StartJobResponse Int

-- | An Amazon Resource Name (ARN) that uniquely identifies an AWS
--   resource.
tagResource_resourceArn :: Lens' TagResource Text

-- | A label that consists of a customer-defined key and an optional value.
tagResource_tags :: Lens' TagResource (HashMap Text Text)

-- | The token value retrieved from a previous call to access the next page
--   of results.
listDataSetRevisions_nextToken :: Lens' ListDataSetRevisions (Maybe Text)

-- | The maximum number of results returned by a single call.
listDataSetRevisions_maxResults :: Lens' ListDataSetRevisions (Maybe Natural)

-- | The unique identifier for a data set.
listDataSetRevisions_dataSetId :: Lens' ListDataSetRevisions Text

-- | The token value retrieved from a previous call to access the next page
--   of results.
listDataSetRevisionsResponse_nextToken :: Lens' ListDataSetRevisionsResponse (Maybe Text)

-- | The asset objects listed by the request.
listDataSetRevisionsResponse_revisions :: Lens' ListDataSetRevisionsResponse (Maybe [RevisionEntry])

-- | The response's http status code.
listDataSetRevisionsResponse_httpStatus :: Lens' ListDataSetRevisionsResponse Int

-- | The unique identifier for the event action.
deleteEventAction_eventActionId :: Lens' DeleteEventAction Text

-- | What occurs after a certain event.
updateEventAction_action :: Lens' UpdateEventAction (Maybe Action)

-- | The unique identifier for the event action.
updateEventAction_eventActionId :: Lens' UpdateEventAction Text

-- | What occurs to start an action.
updateEventActionResponse_event :: Lens' UpdateEventActionResponse (Maybe Event)

-- | The ARN for the event action.
updateEventActionResponse_arn :: Lens' UpdateEventActionResponse (Maybe Text)

-- | The date and time that the event action was created, in ISO 8601
--   format.
updateEventActionResponse_createdAt :: Lens' UpdateEventActionResponse (Maybe UTCTime)

-- | What occurs after a certain event.
updateEventActionResponse_action :: Lens' UpdateEventActionResponse (Maybe Action)

-- | The unique identifier for the event action.
updateEventActionResponse_id :: Lens' UpdateEventActionResponse (Maybe Text)

-- | The date and time that the event action was last updated, in ISO 8601
--   format.
updateEventActionResponse_updatedAt :: Lens' UpdateEventActionResponse (Maybe UTCTime)

-- | The response's http status code.
updateEventActionResponse_httpStatus :: Lens' UpdateEventActionResponse Int

-- | The key tags.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | An Amazon Resource Name (ARN) that uniquely identifies an AWS
--   resource.
untagResource_resourceArn :: Lens' UntagResource Text

-- | A property that defines the data set as OWNED by the account (for
--   providers) or ENTITLED to the account (for subscribers).
listDataSets_origin :: Lens' ListDataSets (Maybe Text)

-- | The token value retrieved from a previous call to access the next page
--   of results.
listDataSets_nextToken :: Lens' ListDataSets (Maybe Text)

-- | The maximum number of results returned by a single call.
listDataSets_maxResults :: Lens' ListDataSets (Maybe Natural)

-- | The token value retrieved from a previous call to access the next page
--   of results.
listDataSetsResponse_nextToken :: Lens' ListDataSetsResponse (Maybe Text)

-- | The data set objects listed by the request.
listDataSetsResponse_dataSets :: Lens' ListDataSetsResponse (Maybe [DataSetEntry])

-- | The response's http status code.
listDataSetsResponse_httpStatus :: Lens' ListDataSetsResponse Int

-- | What occurs after a certain event.
createEventAction_action :: Lens' CreateEventAction Action

-- | What occurs to start an action.
createEventAction_event :: Lens' CreateEventAction Event

-- | What occurs to start an action.
createEventActionResponse_event :: Lens' CreateEventActionResponse (Maybe Event)

-- | The ARN for the event action.
createEventActionResponse_arn :: Lens' CreateEventActionResponse (Maybe Text)

-- | The date and time that the event action was created, in ISO 8601
--   format.
createEventActionResponse_createdAt :: Lens' CreateEventActionResponse (Maybe UTCTime)

-- | What occurs after a certain event.
createEventActionResponse_action :: Lens' CreateEventActionResponse (Maybe Action)

-- | The unique identifier for the event action.
createEventActionResponse_id :: Lens' CreateEventActionResponse (Maybe Text)

-- | The date and time that the event action was last updated, in ISO 8601
--   format.
createEventActionResponse_updatedAt :: Lens' CreateEventActionResponse (Maybe UTCTime)

-- | The response's http status code.
createEventActionResponse_httpStatus :: Lens' CreateEventActionResponse Int

-- | The unique identifier for a job.
cancelJob_jobId :: Lens' CancelJob Text

-- | Details for the export revision to Amazon S3 action.
action_exportRevisionToS3 :: Lens' Action (Maybe AutoExportRevisionToS3RequestDetails)

-- | The name of the object in Amazon S3 for the asset.
assetDestinationEntry_key :: Lens' AssetDestinationEntry (Maybe Text)

-- | The S3 bucket that is the destination for the asset.
assetDestinationEntry_bucket :: Lens' AssetDestinationEntry Text

-- | The unique identifier for the asset.
assetDestinationEntry_assetId :: Lens' AssetDestinationEntry Text

-- | The S3 object that is the asset.
assetDetails_s3SnapshotAsset :: Lens' AssetDetails (Maybe S3SnapshotAsset)

-- | The Amazon Redshift datashare that is the asset.
assetDetails_redshiftDataShareAsset :: Lens' AssetDetails (Maybe RedshiftDataShareAsset)

-- | The asset ID of the owned asset corresponding to the entitled asset
--   being viewed. This parameter is returned when an asset owner is
--   viewing the entitled copy of its owned asset.
assetEntry_sourceId :: Lens' AssetEntry (Maybe Text)

-- | The type of asset that is added to a data set.
assetEntry_assetType :: Lens' AssetEntry AssetType

-- | The date and time that the asset was created, in ISO 8601 format.
assetEntry_createdAt :: Lens' AssetEntry UTCTime

-- | The unique identifier for the data set associated with this asset.
assetEntry_dataSetId :: Lens' AssetEntry Text

-- | The unique identifier for the asset.
assetEntry_id :: Lens' AssetEntry Text

-- | The ARN for the asset.
assetEntry_arn :: Lens' AssetEntry Text

-- | Information about the asset.
assetEntry_assetDetails :: Lens' AssetEntry AssetDetails

-- | The date and time that the asset was last updated, in ISO 8601 format.
assetEntry_updatedAt :: Lens' AssetEntry UTCTime

-- | The unique identifier for the revision associated with this asset.
assetEntry_revisionId :: Lens' AssetEntry Text

-- | The name of the asset. When importing from Amazon S3, the S3 object
--   key is used as the asset name. When exporting to Amazon S3, the asset
--   name is used as default target S3 object key.
assetEntry_name :: Lens' AssetEntry Text

-- | The S3 bucket that's part of the source of the asset.
assetSourceEntry_bucket :: Lens' AssetSourceEntry Text

-- | The name of the object in Amazon S3 for the asset.
assetSourceEntry_key :: Lens' AssetSourceEntry Text

-- | A string representing the pattern for generated names of the
--   individual assets in the revision. For more information about key
--   patterns, see <a>Key patterns when exporting revisions</a>.
autoExportRevisionDestinationEntry_keyPattern :: Lens' AutoExportRevisionDestinationEntry (Maybe Text)

-- | The S3 bucket that is the destination for the event action.
autoExportRevisionDestinationEntry_bucket :: Lens' AutoExportRevisionDestinationEntry Text

-- | Encryption configuration for the auto export job.
autoExportRevisionToS3RequestDetails_encryption :: Lens' AutoExportRevisionToS3RequestDetails (Maybe ExportServerSideEncryption)

-- | A revision destination is the Amazon S3 bucket folder destination to
--   where the export will be sent.
autoExportRevisionToS3RequestDetails_revisionDestination :: Lens' AutoExportRevisionToS3RequestDetails AutoExportRevisionDestinationEntry

-- | The data set ID of the owned data set corresponding to the entitled
--   data set being viewed. This parameter is returned when a data set
--   owner is viewing the entitled copy of its owned data set.
dataSetEntry_sourceId :: Lens' DataSetEntry (Maybe Text)

-- | If the origin of this data set is ENTITLED, includes the details for
--   the product on AWS Marketplace.
dataSetEntry_originDetails :: Lens' DataSetEntry (Maybe OriginDetails)

-- | A property that defines the data set as OWNED by the account (for
--   providers) or ENTITLED to the account (for subscribers).
dataSetEntry_origin :: Lens' DataSetEntry Origin

-- | The type of asset that is added to a data set.
dataSetEntry_assetType :: Lens' DataSetEntry AssetType

-- | The description for the data set.
dataSetEntry_description :: Lens' DataSetEntry Text

-- | The date and time that the data set was created, in ISO 8601 format.
dataSetEntry_createdAt :: Lens' DataSetEntry UTCTime

-- | The unique identifier for the data set.
dataSetEntry_id :: Lens' DataSetEntry Text

-- | The ARN for the data set.
dataSetEntry_arn :: Lens' DataSetEntry Text

-- | The date and time that the data set was last updated, in ISO 8601
--   format.
dataSetEntry_updatedAt :: Lens' DataSetEntry UTCTime

-- | The name of the data set.
dataSetEntry_name :: Lens' DataSetEntry Text

-- | Information about the job error.
details_importAssetFromSignedUrlJobErrorDetails :: Lens' Details (Maybe ImportAssetFromSignedUrlJobErrorDetails)

-- | Information about the job error.
details_importAssetsFromS3JobErrorDetails :: Lens' Details (Maybe [AssetSourceEntry])

-- | What occurs to start the revision publish action.
event_revisionPublished :: Lens' Event (Maybe RevisionPublished)

-- | What occurs after a certain event.
eventActionEntry_action :: Lens' EventActionEntry Action

-- | The date and time that the event action was created, in ISO 8601
--   format.
eventActionEntry_createdAt :: Lens' EventActionEntry UTCTime

-- | What occurs to start an action.
eventActionEntry_event :: Lens' EventActionEntry Event

-- | The unique identifier for the event action.
eventActionEntry_id :: Lens' EventActionEntry Text

-- | The Amazon Resource Name (ARN) for the event action.
eventActionEntry_arn :: Lens' EventActionEntry Text

-- | The date and time that the event action was last updated, in ISO 8601
--   format.
eventActionEntry_updatedAt :: Lens' EventActionEntry UTCTime

-- | The unique identifier for the data set associated with this export
--   job.
exportAssetToSignedUrlRequestDetails_dataSetId :: Lens' ExportAssetToSignedUrlRequestDetails Text

-- | The unique identifier for the asset that is exported to a signed URL.
exportAssetToSignedUrlRequestDetails_assetId :: Lens' ExportAssetToSignedUrlRequestDetails Text

-- | The unique identifier for the revision associated with this export
--   request.
exportAssetToSignedUrlRequestDetails_revisionId :: Lens' ExportAssetToSignedUrlRequestDetails Text

-- | The signed URL for the export request.
exportAssetToSignedUrlResponseDetails_signedUrl :: Lens' ExportAssetToSignedUrlResponseDetails (Maybe Text)

-- | The date and time that the signed URL expires, in ISO 8601 format.
exportAssetToSignedUrlResponseDetails_signedUrlExpiresAt :: Lens' ExportAssetToSignedUrlResponseDetails (Maybe UTCTime)

-- | The unique identifier for the data set associated with this export
--   job.
exportAssetToSignedUrlResponseDetails_dataSetId :: Lens' ExportAssetToSignedUrlResponseDetails Text

-- | The unique identifier for the asset associated with this export job.
exportAssetToSignedUrlResponseDetails_assetId :: Lens' ExportAssetToSignedUrlResponseDetails Text

-- | The unique identifier for the revision associated with this export
--   response.
exportAssetToSignedUrlResponseDetails_revisionId :: Lens' ExportAssetToSignedUrlResponseDetails Text

-- | Encryption configuration for the export job.
exportAssetsToS3RequestDetails_encryption :: Lens' ExportAssetsToS3RequestDetails (Maybe ExportServerSideEncryption)

-- | The destination for the asset.
exportAssetsToS3RequestDetails_assetDestinations :: Lens' ExportAssetsToS3RequestDetails [AssetDestinationEntry]

-- | The unique identifier for the data set associated with this export
--   job.
exportAssetsToS3RequestDetails_dataSetId :: Lens' ExportAssetsToS3RequestDetails Text

-- | The unique identifier for the revision associated with this export
--   request.
exportAssetsToS3RequestDetails_revisionId :: Lens' ExportAssetsToS3RequestDetails Text

-- | Encryption configuration of the export job.
exportAssetsToS3ResponseDetails_encryption :: Lens' ExportAssetsToS3ResponseDetails (Maybe ExportServerSideEncryption)

-- | The destination in Amazon S3 where the asset is exported.
exportAssetsToS3ResponseDetails_assetDestinations :: Lens' ExportAssetsToS3ResponseDetails [AssetDestinationEntry]

-- | The unique identifier for the data set associated with this export
--   job.
exportAssetsToS3ResponseDetails_dataSetId :: Lens' ExportAssetsToS3ResponseDetails Text

-- | The unique identifier for the revision associated with this export
--   response.
exportAssetsToS3ResponseDetails_revisionId :: Lens' ExportAssetsToS3ResponseDetails Text

-- | Encryption configuration for the export job.
exportRevisionsToS3RequestDetails_encryption :: Lens' ExportRevisionsToS3RequestDetails (Maybe ExportServerSideEncryption)

-- | The destination for the revision.
exportRevisionsToS3RequestDetails_revisionDestinations :: Lens' ExportRevisionsToS3RequestDetails [RevisionDestinationEntry]

-- | The unique identifier for the data set associated with this export
--   job.
exportRevisionsToS3RequestDetails_dataSetId :: Lens' ExportRevisionsToS3RequestDetails Text

-- | Encryption configuration of the export job.
exportRevisionsToS3ResponseDetails_encryption :: Lens' ExportRevisionsToS3ResponseDetails (Maybe ExportServerSideEncryption)

-- | The Amazon Resource Name (ARN) of the event action.
exportRevisionsToS3ResponseDetails_eventActionArn :: Lens' ExportRevisionsToS3ResponseDetails (Maybe Text)

-- | The destination in Amazon S3 where the revision is exported.
exportRevisionsToS3ResponseDetails_revisionDestinations :: Lens' ExportRevisionsToS3ResponseDetails [RevisionDestinationEntry]

-- | The unique identifier for the data set associated with this export
--   job.
exportRevisionsToS3ResponseDetails_dataSetId :: Lens' ExportRevisionsToS3ResponseDetails Text

-- | The Amazon Resource Name (ARN) of the AWS KMS key you want to use to
--   encrypt the Amazon S3 objects. This parameter is required if you
--   choose aws:kms as an encryption type.
exportServerSideEncryption_kmsKeyArn :: Lens' ExportServerSideEncryption (Maybe Text)

-- | The type of server side encryption used for encrypting the objects in
--   Amazon S3.
exportServerSideEncryption_type :: Lens' ExportServerSideEncryption ServerSideEncryptionTypes

-- | Information about the job error.
importAssetFromSignedUrlJobErrorDetails_assetName :: Lens' ImportAssetFromSignedUrlJobErrorDetails Text

-- | The unique identifier for the data set associated with this import
--   job.
importAssetFromSignedUrlRequestDetails_dataSetId :: Lens' ImportAssetFromSignedUrlRequestDetails Text

-- | The Base64-encoded Md5 hash for the asset, used to ensure the
--   integrity of the file at that location.
importAssetFromSignedUrlRequestDetails_md5Hash :: Lens' ImportAssetFromSignedUrlRequestDetails Text

-- | The name of the asset. When importing from Amazon S3, the S3 object
--   key is used as the asset name.
importAssetFromSignedUrlRequestDetails_assetName :: Lens' ImportAssetFromSignedUrlRequestDetails Text

-- | The unique identifier for the revision associated with this import
--   request.
importAssetFromSignedUrlRequestDetails_revisionId :: Lens' ImportAssetFromSignedUrlRequestDetails Text

-- | The signed URL.
importAssetFromSignedUrlResponseDetails_signedUrl :: Lens' ImportAssetFromSignedUrlResponseDetails (Maybe Text)

-- | The time and date at which the signed URL expires, in ISO 8601 format.
importAssetFromSignedUrlResponseDetails_signedUrlExpiresAt :: Lens' ImportAssetFromSignedUrlResponseDetails (Maybe UTCTime)

-- | The Base64-encoded Md5 hash for the asset, used to ensure the
--   integrity of the file at that location.
importAssetFromSignedUrlResponseDetails_md5Hash :: Lens' ImportAssetFromSignedUrlResponseDetails (Maybe Text)

-- | The unique identifier for the data set associated with this import
--   job.
importAssetFromSignedUrlResponseDetails_dataSetId :: Lens' ImportAssetFromSignedUrlResponseDetails Text

-- | The name for the asset associated with this import job.
importAssetFromSignedUrlResponseDetails_assetName :: Lens' ImportAssetFromSignedUrlResponseDetails Text

-- | The unique identifier for the revision associated with this import
--   response.
importAssetFromSignedUrlResponseDetails_revisionId :: Lens' ImportAssetFromSignedUrlResponseDetails Text

-- | The unique identifier for the data set associated with this import
--   job.
importAssetsFromRedshiftDataSharesRequestDetails_dataSetId :: Lens' ImportAssetsFromRedshiftDataSharesRequestDetails Text

-- | A list of Amazon Redshift datashare assets.
importAssetsFromRedshiftDataSharesRequestDetails_assetSources :: Lens' ImportAssetsFromRedshiftDataSharesRequestDetails [RedshiftDataShareAssetSourceEntry]

-- | The unique identifier for the revision associated with this import
--   job.
importAssetsFromRedshiftDataSharesRequestDetails_revisionId :: Lens' ImportAssetsFromRedshiftDataSharesRequestDetails Text

-- | The unique identifier for the data set associated with this import
--   job.
importAssetsFromRedshiftDataSharesResponseDetails_dataSetId :: Lens' ImportAssetsFromRedshiftDataSharesResponseDetails Text

-- | A list of Amazon Redshift datashare asset sources.
importAssetsFromRedshiftDataSharesResponseDetails_assetSources :: Lens' ImportAssetsFromRedshiftDataSharesResponseDetails [RedshiftDataShareAssetSourceEntry]

-- | The unique identifier for the revision associated with this import
--   job.
importAssetsFromRedshiftDataSharesResponseDetails_revisionId :: Lens' ImportAssetsFromRedshiftDataSharesResponseDetails Text

-- | The unique identifier for the data set associated with this import
--   job.
importAssetsFromS3RequestDetails_dataSetId :: Lens' ImportAssetsFromS3RequestDetails Text

-- | Is a list of S3 bucket and object key pairs.
importAssetsFromS3RequestDetails_assetSources :: Lens' ImportAssetsFromS3RequestDetails [AssetSourceEntry]

-- | The unique identifier for the revision associated with this import
--   request.
importAssetsFromS3RequestDetails_revisionId :: Lens' ImportAssetsFromS3RequestDetails Text

-- | The unique identifier for the data set associated with this import
--   job.
importAssetsFromS3ResponseDetails_dataSetId :: Lens' ImportAssetsFromS3ResponseDetails Text

-- | Is a list of Amazon S3 bucket and object key pairs.
importAssetsFromS3ResponseDetails_assetSources :: Lens' ImportAssetsFromS3ResponseDetails [AssetSourceEntry]

-- | The unique identifier for the revision associated with this import
--   response.
importAssetsFromS3ResponseDetails_revisionId :: Lens' ImportAssetsFromS3ResponseDetails Text

-- | Errors for jobs.
jobEntry_errors :: Lens' JobEntry (Maybe [JobError])

-- | The job type.
jobEntry_type :: Lens' JobEntry Type

-- | Details of the operation to be performed by the job, such as export
--   destination details or import source details.
jobEntry_details :: Lens' JobEntry ResponseDetails

-- | The state of the job.
jobEntry_state :: Lens' JobEntry State

-- | The date and time that the job was created, in ISO 8601 format.
jobEntry_createdAt :: Lens' JobEntry UTCTime

-- | The unique identifier for the job.
jobEntry_id :: Lens' JobEntry Text

-- | The ARN for the job.
jobEntry_arn :: Lens' JobEntry Text

-- | The date and time that the job was last updated, in ISO 8601 format.
jobEntry_updatedAt :: Lens' JobEntry UTCTime

-- | The unique identifier for the resource related to the error.
jobError_resourceId :: Lens' JobError (Maybe Text)

-- | The name of the limit that was reached.
jobError_limitName :: Lens' JobError (Maybe JobErrorLimitName)

-- | The type of resource related to the error.
jobError_resourceType :: Lens' JobError (Maybe JobErrorResourceTypes)

-- | The details about the job error.
jobError_details :: Lens' JobError (Maybe Details)

-- | The value of the exceeded limit.
jobError_limitValue :: Lens' JobError (Maybe Double)

-- | The message related to the job error.
jobError_message :: Lens' JobError Text

-- | The code for the job error.
jobError_code :: Lens' JobError Code

-- | The product ID of the origin of the data set.
originDetails_productId :: Lens' OriginDetails Text

-- | The Amazon Resource Name (ARN) of the datashare asset.
redshiftDataShareAsset_arn :: Lens' RedshiftDataShareAsset Text

-- | The Amazon Resource Name (ARN) of the datashare asset.
redshiftDataShareAssetSourceEntry_dataShareArn :: Lens' RedshiftDataShareAssetSourceEntry Text

-- | Details about the export to Amazon S3 request.
requestDetails_exportAssetsToS3 :: Lens' RequestDetails (Maybe ExportAssetsToS3RequestDetails)

-- | Details about the export to Amazon S3 request.
requestDetails_exportRevisionsToS3 :: Lens' RequestDetails (Maybe ExportRevisionsToS3RequestDetails)

-- | Details about the import from signed URL request.
requestDetails_importAssetFromSignedUrl :: Lens' RequestDetails (Maybe ImportAssetFromSignedUrlRequestDetails)

-- | Details from an import from Amazon Redshift datashare request.
requestDetails_importAssetsFromRedshiftDataShares :: Lens' RequestDetails (Maybe ImportAssetsFromRedshiftDataSharesRequestDetails)

-- | Details about the import from Amazon S3 request.
requestDetails_importAssetsFromS3 :: Lens' RequestDetails (Maybe ImportAssetsFromS3RequestDetails)

-- | Details about the export to signed URL request.
requestDetails_exportAssetToSignedUrl :: Lens' RequestDetails (Maybe ExportAssetToSignedUrlRequestDetails)

-- | Details for the export to Amazon S3 response.
responseDetails_exportAssetsToS3 :: Lens' ResponseDetails (Maybe ExportAssetsToS3ResponseDetails)

-- | Details for the export revisions to Amazon S3 response.
responseDetails_exportRevisionsToS3 :: Lens' ResponseDetails (Maybe ExportRevisionsToS3ResponseDetails)

-- | Details for the import from signed URL response.
responseDetails_importAssetFromSignedUrl :: Lens' ResponseDetails (Maybe ImportAssetFromSignedUrlResponseDetails)

-- | Details from an import from Amazon Redshift datashare response.
responseDetails_importAssetsFromRedshiftDataShares :: Lens' ResponseDetails (Maybe ImportAssetsFromRedshiftDataSharesResponseDetails)

-- | Details for the import from Amazon S3 response.
responseDetails_importAssetsFromS3 :: Lens' ResponseDetails (Maybe ImportAssetsFromS3ResponseDetails)

-- | Details for the export to signed URL response.
responseDetails_exportAssetToSignedUrl :: Lens' ResponseDetails (Maybe ExportAssetToSignedUrlResponseDetails)

-- | A string representing the pattern for generated names of the
--   individual assets in the revision. For more information about key
--   patterns, see <a>Key patterns when exporting revisions</a>.
revisionDestinationEntry_keyPattern :: Lens' RevisionDestinationEntry (Maybe Text)

-- | The S3 bucket that is the destination for the assets in the revision.
revisionDestinationEntry_bucket :: Lens' RevisionDestinationEntry Text

-- | The unique identifier for the revision.
revisionDestinationEntry_revisionId :: Lens' RevisionDestinationEntry Text

-- | The revision ID of the owned revision corresponding to the entitled
--   revision being viewed. This parameter is returned when a revision
--   owner is viewing the entitled copy of its owned revision.
revisionEntry_sourceId :: Lens' RevisionEntry (Maybe Text)

-- | To publish a revision to a data set in a product, the revision must
--   first be finalized. Finalizing a revision tells AWS Data Exchange that
--   your changes to the assets in the revision are complete. After it's in
--   this read-only state, you can publish the revision to your products.
--   
--   Finalized revisions can be published through the AWS Data Exchange
--   console or the AWS Marketplace Catalog API, using the StartChangeSet
--   AWS Marketplace Catalog API action. When using the API, revisions are
--   uniquely identified by their ARN.
revisionEntry_finalized :: Lens' RevisionEntry (Maybe Bool)

-- | An optional comment about the revision.
revisionEntry_comment :: Lens' RevisionEntry (Maybe Text)

-- | The date and time that the revision was created, in ISO 8601 format.
revisionEntry_createdAt :: Lens' RevisionEntry UTCTime

-- | The unique identifier for the data set associated with this revision.
revisionEntry_dataSetId :: Lens' RevisionEntry Text

-- | The unique identifier for the revision.
revisionEntry_id :: Lens' RevisionEntry Text

-- | The ARN for the revision.
revisionEntry_arn :: Lens' RevisionEntry Text

-- | The date and time that the revision was last updated, in ISO 8601
--   format.
revisionEntry_updatedAt :: Lens' RevisionEntry UTCTime

-- | The data set ID of the published revision.
revisionPublished_dataSetId :: Lens' RevisionPublished Text

-- | The size of the S3 object that is the object.
s3SnapshotAsset_size :: Lens' S3SnapshotAsset Double


module Amazonka.DataExchange.Waiters


-- | Derived from API version <tt>2017-07-25</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   AWS Data Exchange is a service that makes it easy for AWS customers to
--   exchange data in the cloud. You can use the AWS Data Exchange APIs to
--   create, update, manage, and access file-based data set in the AWS
--   Cloud.
--   
--   As a subscriber, you can view and access the data sets that you have
--   an entitlement to through a subscription. You can use the APIS to
--   download or copy your entitled data sets to Amazon S3 for use across a
--   variety of AWS analytics and machine learning services.
--   
--   As a provider, you can create and manage your data sets that you would
--   like to publish to a product. Being able to package and provide your
--   data sets into products requires a few steps to determine eligibility.
--   For more information, visit the AWS Data Exchange User Guide.
--   
--   A data set is a collection of data that can be changed or updated over
--   time. Data sets can be updated using revisions, which represent a new
--   version or incremental change to a data set. A revision contains one
--   or more assets. An asset in AWS Data Exchange is a piece of data that
--   can be stored as an Amazon S3 object. The asset can be a structured
--   data file, an image file, or some other data file. Jobs are
--   asynchronous import or export operations used to create or copy
--   assets.
module Amazonka.DataExchange

-- | API version <tt>2017-07-25</tt> of the Amazon Data Exchange SDK
--   configuration.
defaultService :: Service

-- | The request was invalid.
_ValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Access to the resource is denied.
_AccessDeniedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request couldn't be completed because it conflicted with the
--   current state of the resource.
_ConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request has exceeded the quotas imposed by the service.
_ServiceLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The limit on the number of requests per second was exceeded.
_ThrottlingException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An exception occurred with the service.
_InternalServerException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource couldn't be found.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newGetEventAction</a> smart constructor.
data GetEventAction
GetEventAction' :: Text -> GetEventAction

-- | Create a value of <a>GetEventAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventActionId:GetEventAction'</a>,
--   <a>getEventAction_eventActionId</a> - The unique identifier for the
--   event action.
newGetEventAction :: Text -> GetEventAction

-- | <i>See:</i> <a>newGetEventActionResponse</a> smart constructor.
data GetEventActionResponse
GetEventActionResponse' :: Maybe Event -> Maybe Text -> Maybe POSIX -> Maybe Action -> Maybe Text -> Maybe POSIX -> Int -> GetEventActionResponse

-- | Create a value of <a>GetEventActionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:event:GetEventActionResponse'</a>,
--   <a>getEventActionResponse_event</a> - What occurs to start an action.
--   
--   <a>$sel:arn:GetEventActionResponse'</a>,
--   <a>getEventActionResponse_arn</a> - The ARN for the event action.
--   
--   <a>$sel:createdAt:GetEventActionResponse'</a>,
--   <a>getEventActionResponse_createdAt</a> - The date and time that the
--   event action was created, in ISO 8601 format.
--   
--   <a>$sel:action:GetEventActionResponse'</a>,
--   <a>getEventActionResponse_action</a> - What occurs after a certain
--   event.
--   
--   <a>$sel:id:GetEventActionResponse'</a>,
--   <a>getEventActionResponse_id</a> - The unique identifier for the event
--   action.
--   
--   <a>$sel:updatedAt:GetEventActionResponse'</a>,
--   <a>getEventActionResponse_updatedAt</a> - The date and time that the
--   event action was last updated, in ISO 8601 format.
--   
--   <a>$sel:httpStatus:GetEventActionResponse'</a>,
--   <a>getEventActionResponse_httpStatus</a> - The response's http status
--   code.
newGetEventActionResponse :: Int -> GetEventActionResponse

-- | The request body for CreateRevision.
--   
--   <i>See:</i> <a>newCreateRevision</a> smart constructor.
data CreateRevision
CreateRevision' :: Maybe Text -> Maybe (HashMap Text Text) -> Text -> CreateRevision

-- | Create a value of <a>CreateRevision</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:comment:CreateRevision'</a>, <a>createRevision_comment</a> -
--   An optional comment about the revision.
--   
--   <a>$sel:tags:CreateRevision'</a>, <a>createRevision_tags</a> - A
--   revision tag is an optional label that you can assign to a revision
--   when you create it. Each tag consists of a key and an optional value,
--   both of which you define. When you use tagging, you can also use
--   tag-based access control in IAM policies to control access to these
--   data sets and revisions.
--   
--   <a>$sel:dataSetId:CreateRevision'</a>, <a>createRevision_dataSetId</a>
--   - The unique identifier for a data set.
newCreateRevision :: Text -> CreateRevision

-- | <i>See:</i> <a>newCreateRevisionResponse</a> smart constructor.
data CreateRevisionResponse
CreateRevisionResponse' :: Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe (HashMap Text Text) -> Int -> CreateRevisionResponse

-- | Create a value of <a>CreateRevisionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:CreateRevisionResponse'</a>,
--   <a>createRevisionResponse_arn</a> - The ARN for the revision.
--   
--   <a>$sel:createdAt:CreateRevisionResponse'</a>,
--   <a>createRevisionResponse_createdAt</a> - The date and time that the
--   revision was created, in ISO 8601 format.
--   
--   <a>$sel:sourceId:CreateRevisionResponse'</a>,
--   <a>createRevisionResponse_sourceId</a> - The revision ID of the owned
--   revision corresponding to the entitled revision being viewed. This
--   parameter is returned when a revision owner is viewing the entitled
--   copy of its owned revision.
--   
--   <a>$sel:finalized:CreateRevisionResponse'</a>,
--   <a>createRevisionResponse_finalized</a> - To publish a revision to a
--   data set in a product, the revision must first be finalized.
--   Finalizing a revision tells AWS Data Exchange that your changes to the
--   assets in the revision are complete. After it's in this read-only
--   state, you can publish the revision to your products.
--   
--   Finalized revisions can be published through the AWS Data Exchange
--   console or the AWS Marketplace Catalog API, using the StartChangeSet
--   AWS Marketplace Catalog API action. When using the API, revisions are
--   uniquely identified by their ARN.
--   
--   <a>$sel:dataSetId:CreateRevision'</a>,
--   <a>createRevisionResponse_dataSetId</a> - The unique identifier for
--   the data set associated with this revision.
--   
--   <a>$sel:id:CreateRevisionResponse'</a>,
--   <a>createRevisionResponse_id</a> - The unique identifier for the
--   revision.
--   
--   <a>$sel:updatedAt:CreateRevisionResponse'</a>,
--   <a>createRevisionResponse_updatedAt</a> - The date and time that the
--   revision was last updated, in ISO 8601 format.
--   
--   <a>$sel:comment:CreateRevision'</a>,
--   <a>createRevisionResponse_comment</a> - An optional comment about the
--   revision.
--   
--   <a>$sel:tags:CreateRevision'</a>, <a>createRevisionResponse_tags</a> -
--   The tags for the revision.
--   
--   <a>$sel:httpStatus:CreateRevisionResponse'</a>,
--   <a>createRevisionResponse_httpStatus</a> - The response's http status
--   code.
newCreateRevisionResponse :: Int -> CreateRevisionResponse

-- | <i>See:</i> <a>newListRevisionAssets</a> smart constructor.
data ListRevisionAssets
ListRevisionAssets' :: Maybe Text -> Maybe Natural -> Text -> Text -> ListRevisionAssets

-- | Create a value of <a>ListRevisionAssets</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListRevisionAssets'</a>,
--   <a>listRevisionAssets_nextToken</a> - The token value retrieved from a
--   previous call to access the next page of results.
--   
--   <a>$sel:maxResults:ListRevisionAssets'</a>,
--   <a>listRevisionAssets_maxResults</a> - The maximum number of results
--   returned by a single call.
--   
--   <a>$sel:revisionId:ListRevisionAssets'</a>,
--   <a>listRevisionAssets_revisionId</a> - The unique identifier for a
--   revision.
--   
--   <a>$sel:dataSetId:ListRevisionAssets'</a>,
--   <a>listRevisionAssets_dataSetId</a> - The unique identifier for a data
--   set.
newListRevisionAssets :: Text -> Text -> ListRevisionAssets

-- | <i>See:</i> <a>newListRevisionAssetsResponse</a> smart constructor.
data ListRevisionAssetsResponse
ListRevisionAssetsResponse' :: Maybe Text -> Maybe [AssetEntry] -> Int -> ListRevisionAssetsResponse

-- | Create a value of <a>ListRevisionAssetsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListRevisionAssets'</a>,
--   <a>listRevisionAssetsResponse_nextToken</a> - The token value
--   retrieved from a previous call to access the next page of results.
--   
--   <a>$sel:assets:ListRevisionAssetsResponse'</a>,
--   <a>listRevisionAssetsResponse_assets</a> - The asset objects listed by
--   the request.
--   
--   <a>$sel:httpStatus:ListRevisionAssetsResponse'</a>,
--   <a>listRevisionAssetsResponse_httpStatus</a> - The response's http
--   status code.
newListRevisionAssetsResponse :: Int -> ListRevisionAssetsResponse

-- | <i>See:</i> <a>newDeleteRevision</a> smart constructor.
data DeleteRevision
DeleteRevision' :: Text -> Text -> DeleteRevision

-- | Create a value of <a>DeleteRevision</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:revisionId:DeleteRevision'</a>,
--   <a>deleteRevision_revisionId</a> - The unique identifier for a
--   revision.
--   
--   <a>$sel:dataSetId:DeleteRevision'</a>, <a>deleteRevision_dataSetId</a>
--   - The unique identifier for a data set.
newDeleteRevision :: Text -> Text -> DeleteRevision

-- | <i>See:</i> <a>newDeleteRevisionResponse</a> smart constructor.
data DeleteRevisionResponse
DeleteRevisionResponse' :: DeleteRevisionResponse

-- | Create a value of <a>DeleteRevisionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteRevisionResponse :: DeleteRevisionResponse

-- | The request body for UpdateRevision.
--   
--   <i>See:</i> <a>newUpdateRevision</a> smart constructor.
data UpdateRevision
UpdateRevision' :: Maybe Bool -> Maybe Text -> Text -> Text -> UpdateRevision

-- | Create a value of <a>UpdateRevision</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:finalized:UpdateRevision'</a>, <a>updateRevision_finalized</a>
--   - Finalizing a revision tells AWS Data Exchange that your changes to
--   the assets in the revision are complete. After it's in this read-only
--   state, you can publish the revision to your products.
--   
--   <a>$sel:comment:UpdateRevision'</a>, <a>updateRevision_comment</a> -
--   An optional comment about the revision.
--   
--   <a>$sel:revisionId:UpdateRevision'</a>,
--   <a>updateRevision_revisionId</a> - The unique identifier for a
--   revision.
--   
--   <a>$sel:dataSetId:UpdateRevision'</a>, <a>updateRevision_dataSetId</a>
--   - The unique identifier for a data set.
newUpdateRevision :: Text -> Text -> UpdateRevision

-- | <i>See:</i> <a>newUpdateRevisionResponse</a> smart constructor.
data UpdateRevisionResponse
UpdateRevisionResponse' :: Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Int -> UpdateRevisionResponse

-- | Create a value of <a>UpdateRevisionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:UpdateRevisionResponse'</a>,
--   <a>updateRevisionResponse_arn</a> - The ARN for the revision.
--   
--   <a>$sel:createdAt:UpdateRevisionResponse'</a>,
--   <a>updateRevisionResponse_createdAt</a> - The date and time that the
--   revision was created, in ISO 8601 format.
--   
--   <a>$sel:sourceId:UpdateRevisionResponse'</a>,
--   <a>updateRevisionResponse_sourceId</a> - The revision ID of the owned
--   revision corresponding to the entitled revision being viewed. This
--   parameter is returned when a revision owner is viewing the entitled
--   copy of its owned revision.
--   
--   <a>$sel:finalized:UpdateRevision'</a>,
--   <a>updateRevisionResponse_finalized</a> - To publish a revision to a
--   data set in a product, the revision must first be finalized.
--   Finalizing a revision tells AWS Data Exchange that changes to the
--   assets in the revision are complete. After it's in this read-only
--   state, you can publish the revision to your products.
--   
--   Finalized revisions can be published through the AWS Data Exchange
--   console or the AWS Marketplace Catalog API, using the StartChangeSet
--   AWS Marketplace Catalog API action. When using the API, revisions are
--   uniquely identified by their ARN.
--   
--   <a>$sel:dataSetId:UpdateRevision'</a>,
--   <a>updateRevisionResponse_dataSetId</a> - The unique identifier for
--   the data set associated with this revision.
--   
--   <a>$sel:id:UpdateRevisionResponse'</a>,
--   <a>updateRevisionResponse_id</a> - The unique identifier for the
--   revision.
--   
--   <a>$sel:updatedAt:UpdateRevisionResponse'</a>,
--   <a>updateRevisionResponse_updatedAt</a> - The date and time that the
--   revision was last updated, in ISO 8601 format.
--   
--   <a>$sel:comment:UpdateRevision'</a>,
--   <a>updateRevisionResponse_comment</a> - An optional comment about the
--   revision.
--   
--   <a>$sel:httpStatus:UpdateRevisionResponse'</a>,
--   <a>updateRevisionResponse_httpStatus</a> - The response's http status
--   code.
newUpdateRevisionResponse :: Int -> UpdateRevisionResponse

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - An Amazon Resource Name (ARN)
--   that uniquely identifies an AWS resource.
newListTagsForResource :: Text -> ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe (HashMap Text Text) -> Int -> ListTagsForResourceResponse

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - A label that consists of a
--   customer-defined key and an optional value.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | <i>See:</i> <a>newGetRevision</a> smart constructor.
data GetRevision
GetRevision' :: Text -> Text -> GetRevision

-- | Create a value of <a>GetRevision</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:revisionId:GetRevision'</a>, <a>getRevision_revisionId</a> -
--   The unique identifier for a revision.
--   
--   <a>$sel:dataSetId:GetRevision'</a>, <a>getRevision_dataSetId</a> - The
--   unique identifier for a data set.
newGetRevision :: Text -> Text -> GetRevision

-- | <i>See:</i> <a>newGetRevisionResponse</a> smart constructor.
data GetRevisionResponse
GetRevisionResponse' :: Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe (HashMap Text Text) -> Int -> GetRevisionResponse

-- | Create a value of <a>GetRevisionResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:GetRevisionResponse'</a>, <a>getRevisionResponse_arn</a> -
--   The ARN for the revision.
--   
--   <a>$sel:createdAt:GetRevisionResponse'</a>,
--   <a>getRevisionResponse_createdAt</a> - The date and time that the
--   revision was created, in ISO 8601 format.
--   
--   <a>$sel:sourceId:GetRevisionResponse'</a>,
--   <a>getRevisionResponse_sourceId</a> - The revision ID of the owned
--   revision corresponding to the entitled revision being viewed. This
--   parameter is returned when a revision owner is viewing the entitled
--   copy of its owned revision.
--   
--   <a>$sel:finalized:GetRevisionResponse'</a>,
--   <a>getRevisionResponse_finalized</a> - To publish a revision to a data
--   set in a product, the revision must first be finalized. Finalizing a
--   revision tells AWS Data Exchange that your changes to the assets in
--   the revision are complete. After it's in this read-only state, you can
--   publish the revision to your products.
--   
--   Finalized revisions can be published through the AWS Data Exchange
--   console or the AWS Marketplace Catalog API, using the StartChangeSet
--   AWS Marketplace Catalog API action. When using the API, revisions are
--   uniquely identified by their ARN.
--   
--   <a>$sel:dataSetId:GetRevision'</a>,
--   <a>getRevisionResponse_dataSetId</a> - The unique identifier for the
--   data set associated with this revision.
--   
--   <a>$sel:id:GetRevisionResponse'</a>, <a>getRevisionResponse_id</a> -
--   The unique identifier for the revision.
--   
--   <a>$sel:updatedAt:GetRevisionResponse'</a>,
--   <a>getRevisionResponse_updatedAt</a> - The date and time that the
--   revision was last updated, in ISO 8601 format.
--   
--   <a>$sel:comment:GetRevisionResponse'</a>,
--   <a>getRevisionResponse_comment</a> - An optional comment about the
--   revision.
--   
--   <a>$sel:tags:GetRevisionResponse'</a>, <a>getRevisionResponse_tags</a>
--   - The tags for the revision.
--   
--   <a>$sel:httpStatus:GetRevisionResponse'</a>,
--   <a>getRevisionResponse_httpStatus</a> - The response's http status
--   code.
newGetRevisionResponse :: Int -> GetRevisionResponse

-- | <i>See:</i> <a>newDeleteDataSet</a> smart constructor.
data DeleteDataSet
DeleteDataSet' :: Text -> DeleteDataSet

-- | Create a value of <a>DeleteDataSet</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataSetId:DeleteDataSet'</a>, <a>deleteDataSet_dataSetId</a> -
--   The unique identifier for a data set.
newDeleteDataSet :: Text -> DeleteDataSet

-- | <i>See:</i> <a>newDeleteDataSetResponse</a> smart constructor.
data DeleteDataSetResponse
DeleteDataSetResponse' :: DeleteDataSetResponse

-- | Create a value of <a>DeleteDataSetResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteDataSetResponse :: DeleteDataSetResponse

-- | The request body for UpdateDataSet.
--   
--   <i>See:</i> <a>newUpdateDataSet</a> smart constructor.
data UpdateDataSet
UpdateDataSet' :: Maybe Text -> Maybe Text -> Text -> UpdateDataSet

-- | Create a value of <a>UpdateDataSet</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:UpdateDataSet'</a>, <a>updateDataSet_name</a> - The name
--   of the data set.
--   
--   <a>$sel:description:UpdateDataSet'</a>,
--   <a>updateDataSet_description</a> - The description for the data set.
--   
--   <a>$sel:dataSetId:UpdateDataSet'</a>, <a>updateDataSet_dataSetId</a> -
--   The unique identifier for a data set.
newUpdateDataSet :: Text -> UpdateDataSet

-- | <i>See:</i> <a>newUpdateDataSetResponse</a> smart constructor.
data UpdateDataSetResponse
UpdateDataSetResponse' :: Maybe Origin -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe OriginDetails -> Maybe Text -> Maybe Text -> Maybe AssetType -> Maybe POSIX -> Maybe Text -> Int -> UpdateDataSetResponse

-- | Create a value of <a>UpdateDataSetResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:origin:UpdateDataSetResponse'</a>,
--   <a>updateDataSetResponse_origin</a> - A property that defines the data
--   set as OWNED by the account (for providers) or ENTITLED to the account
--   (for subscribers).
--   
--   <a>$sel:arn:UpdateDataSetResponse'</a>,
--   <a>updateDataSetResponse_arn</a> - The ARN for the data set.
--   
--   <a>$sel:createdAt:UpdateDataSetResponse'</a>,
--   <a>updateDataSetResponse_createdAt</a> - The date and time that the
--   data set was created, in ISO 8601 format.
--   
--   <a>$sel:sourceId:UpdateDataSetResponse'</a>,
--   <a>updateDataSetResponse_sourceId</a> - The data set ID of the owned
--   data set corresponding to the entitled data set being viewed. This
--   parameter is returned when a data set owner is viewing the entitled
--   copy of its owned data set.
--   
--   <a>$sel:originDetails:UpdateDataSetResponse'</a>,
--   <a>updateDataSetResponse_originDetails</a> - If the origin of this
--   data set is ENTITLED, includes the details for the product on AWS
--   Marketplace.
--   
--   <a>$sel:name:UpdateDataSet'</a>, <a>updateDataSetResponse_name</a> -
--   The name of the data set.
--   
--   <a>$sel:id:UpdateDataSetResponse'</a>, <a>updateDataSetResponse_id</a>
--   - The unique identifier for the data set.
--   
--   <a>$sel:assetType:UpdateDataSetResponse'</a>,
--   <a>updateDataSetResponse_assetType</a> - The type of asset that is
--   added to a data set.
--   
--   <a>$sel:updatedAt:UpdateDataSetResponse'</a>,
--   <a>updateDataSetResponse_updatedAt</a> - The date and time that the
--   data set was last updated, in ISO 8601 format.
--   
--   <a>$sel:description:UpdateDataSet'</a>,
--   <a>updateDataSetResponse_description</a> - The description for the
--   data set.
--   
--   <a>$sel:httpStatus:UpdateDataSetResponse'</a>,
--   <a>updateDataSetResponse_httpStatus</a> - The response's http status
--   code.
newUpdateDataSetResponse :: Int -> UpdateDataSetResponse

-- | The request body for CreateJob.
--   
--   <i>See:</i> <a>newCreateJob</a> smart constructor.
data CreateJob
CreateJob' :: Type -> RequestDetails -> CreateJob

-- | Create a value of <a>CreateJob</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:type':CreateJob'</a>, <a>createJob_type</a> - The type of job
--   to be created.
--   
--   <a>$sel:details:CreateJob'</a>, <a>createJob_details</a> - The details
--   for the CreateJob request.
newCreateJob :: Type -> RequestDetails -> CreateJob

-- | <i>See:</i> <a>newCreateJobResponse</a> smart constructor.
data CreateJobResponse
CreateJobResponse' :: Maybe State -> Maybe Text -> Maybe POSIX -> Maybe ResponseDetails -> Maybe Text -> Maybe Type -> Maybe POSIX -> Maybe [JobError] -> Int -> CreateJobResponse

-- | Create a value of <a>CreateJobResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:CreateJobResponse'</a>, <a>createJobResponse_state</a> -
--   The state of the job.
--   
--   <a>$sel:arn:CreateJobResponse'</a>, <a>createJobResponse_arn</a> - The
--   ARN for the job.
--   
--   <a>$sel:createdAt:CreateJobResponse'</a>,
--   <a>createJobResponse_createdAt</a> - The date and time that the job
--   was created, in ISO 8601 format.
--   
--   <a>$sel:details:CreateJob'</a>, <a>createJobResponse_details</a> -
--   Details about the job.
--   
--   <a>$sel:id:CreateJobResponse'</a>, <a>createJobResponse_id</a> - The
--   unique identifier for the job.
--   
--   <a>$sel:type':CreateJob'</a>, <a>createJobResponse_type</a> - The job
--   type.
--   
--   <a>$sel:updatedAt:CreateJobResponse'</a>,
--   <a>createJobResponse_updatedAt</a> - The date and time that the job
--   was last updated, in ISO 8601 format.
--   
--   <a>$sel:errors:CreateJobResponse'</a>, <a>createJobResponse_errors</a>
--   - The errors associated with jobs.
--   
--   <a>$sel:httpStatus:CreateJobResponse'</a>,
--   <a>createJobResponse_httpStatus</a> - The response's http status code.
newCreateJobResponse :: Int -> CreateJobResponse

-- | <i>See:</i> <a>newListEventActions</a> smart constructor.
data ListEventActions
ListEventActions' :: Maybe Text -> Maybe Text -> Maybe Natural -> ListEventActions

-- | Create a value of <a>ListEventActions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventSourceId:ListEventActions'</a>,
--   <a>listEventActions_eventSourceId</a> - The unique identifier for the
--   event source.
--   
--   <a>$sel:nextToken:ListEventActions'</a>,
--   <a>listEventActions_nextToken</a> - The token value retrieved from a
--   previous call to access the next page of results.
--   
--   <a>$sel:maxResults:ListEventActions'</a>,
--   <a>listEventActions_maxResults</a> - The maximum number of results
--   returned by a single call.
newListEventActions :: ListEventActions

-- | <i>See:</i> <a>newListEventActionsResponse</a> smart constructor.
data ListEventActionsResponse
ListEventActionsResponse' :: Maybe [EventActionEntry] -> Maybe Text -> Int -> ListEventActionsResponse

-- | Create a value of <a>ListEventActionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventActions:ListEventActionsResponse'</a>,
--   <a>listEventActionsResponse_eventActions</a> - The event action
--   objects listed by the request.
--   
--   <a>$sel:nextToken:ListEventActions'</a>,
--   <a>listEventActionsResponse_nextToken</a> - The token value retrieved
--   from a previous call to access the next page of results.
--   
--   <a>$sel:httpStatus:ListEventActionsResponse'</a>,
--   <a>listEventActionsResponse_httpStatus</a> - The response's http
--   status code.
newListEventActionsResponse :: Int -> ListEventActionsResponse

-- | <i>See:</i> <a>newGetAsset</a> smart constructor.
data GetAsset
GetAsset' :: Text -> Text -> Text -> GetAsset

-- | Create a value of <a>GetAsset</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:revisionId:GetAsset'</a>, <a>getAsset_revisionId</a> - The
--   unique identifier for a revision.
--   
--   <a>$sel:assetId:GetAsset'</a>, <a>getAsset_assetId</a> - The unique
--   identifier for an asset.
--   
--   <a>$sel:dataSetId:GetAsset'</a>, <a>getAsset_dataSetId</a> - The
--   unique identifier for a data set.
newGetAsset :: Text -> Text -> Text -> GetAsset

-- | <i>See:</i> <a>newGetAssetResponse</a> smart constructor.
data GetAssetResponse
GetAssetResponse' :: Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe AssetDetails -> Maybe Text -> Maybe AssetType -> Maybe POSIX -> Maybe Text -> Int -> GetAssetResponse

-- | Create a value of <a>GetAssetResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:GetAssetResponse'</a>, <a>getAssetResponse_arn</a> - The
--   ARN for the asset.
--   
--   <a>$sel:createdAt:GetAssetResponse'</a>,
--   <a>getAssetResponse_createdAt</a> - The date and time that the asset
--   was created, in ISO 8601 format.
--   
--   <a>$sel:sourceId:GetAssetResponse'</a>,
--   <a>getAssetResponse_sourceId</a> - The asset ID of the owned asset
--   corresponding to the entitled asset being viewed. This parameter is
--   returned when an asset owner is viewing the entitled copy of its owned
--   asset.
--   
--   <a>$sel:dataSetId:GetAsset'</a>, <a>getAssetResponse_dataSetId</a> -
--   The unique identifier for the data set associated with this asset.
--   
--   <a>$sel:name:GetAssetResponse'</a>, <a>getAssetResponse_name</a> - The
--   name of the asset. When importing from Amazon S3, the S3 object key is
--   used as the asset name. When exporting to Amazon S3, the asset name is
--   used as default target S3 object key.
--   
--   <a>$sel:assetDetails:GetAssetResponse'</a>,
--   <a>getAssetResponse_assetDetails</a> - Information about the asset.
--   
--   <a>$sel:id:GetAssetResponse'</a>, <a>getAssetResponse_id</a> - The
--   unique identifier for the asset.
--   
--   <a>$sel:assetType:GetAssetResponse'</a>,
--   <a>getAssetResponse_assetType</a> - The type of asset that is added to
--   a data set.
--   
--   <a>$sel:updatedAt:GetAssetResponse'</a>,
--   <a>getAssetResponse_updatedAt</a> - The date and time that the asset
--   was last updated, in ISO 8601 format.
--   
--   <a>$sel:revisionId:GetAsset'</a>, <a>getAssetResponse_revisionId</a> -
--   The unique identifier for the revision associated with this asset.
--   
--   <a>$sel:httpStatus:GetAssetResponse'</a>,
--   <a>getAssetResponse_httpStatus</a> - The response's http status code.
newGetAssetResponse :: Int -> GetAssetResponse

-- | <i>See:</i> <a>newListJobs</a> smart constructor.
data ListJobs
ListJobs' :: Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Text -> ListJobs

-- | Create a value of <a>ListJobs</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListJobs'</a>, <a>listJobs_nextToken</a> - The token
--   value retrieved from a previous call to access the next page of
--   results.
--   
--   <a>$sel:dataSetId:ListJobs'</a>, <a>listJobs_dataSetId</a> - The
--   unique identifier for a data set.
--   
--   <a>$sel:maxResults:ListJobs'</a>, <a>listJobs_maxResults</a> - The
--   maximum number of results returned by a single call.
--   
--   <a>$sel:revisionId:ListJobs'</a>, <a>listJobs_revisionId</a> - The
--   unique identifier for a revision.
newListJobs :: ListJobs

-- | <i>See:</i> <a>newListJobsResponse</a> smart constructor.
data ListJobsResponse
ListJobsResponse' :: Maybe Text -> Maybe [JobEntry] -> Int -> ListJobsResponse

-- | Create a value of <a>ListJobsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListJobs'</a>, <a>listJobsResponse_nextToken</a> -
--   The token value retrieved from a previous call to access the next page
--   of results.
--   
--   <a>$sel:jobs:ListJobsResponse'</a>, <a>listJobsResponse_jobs</a> - The
--   jobs listed by the request.
--   
--   <a>$sel:httpStatus:ListJobsResponse'</a>,
--   <a>listJobsResponse_httpStatus</a> - The response's http status code.
newListJobsResponse :: Int -> ListJobsResponse

-- | The request body for CreateDataSet.
--   
--   <i>See:</i> <a>newCreateDataSet</a> smart constructor.
data CreateDataSet
CreateDataSet' :: Maybe (HashMap Text Text) -> AssetType -> Text -> Text -> CreateDataSet

-- | Create a value of <a>CreateDataSet</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:CreateDataSet'</a>, <a>createDataSet_tags</a> - A data
--   set tag is an optional label that you can assign to a data set when
--   you create it. Each tag consists of a key and an optional value, both
--   of which you define. When you use tagging, you can also use tag-based
--   access control in IAM policies to control access to these data sets
--   and revisions.
--   
--   <a>$sel:assetType:CreateDataSet'</a>, <a>createDataSet_assetType</a> -
--   The type of asset that is added to a data set.
--   
--   <a>$sel:description:CreateDataSet'</a>,
--   <a>createDataSet_description</a> - A description for the data set.
--   This value can be up to 16,348 characters long.
--   
--   <a>$sel:name:CreateDataSet'</a>, <a>createDataSet_name</a> - The name
--   of the data set.
newCreateDataSet :: AssetType -> Text -> Text -> CreateDataSet

-- | <i>See:</i> <a>newCreateDataSetResponse</a> smart constructor.
data CreateDataSetResponse
CreateDataSetResponse' :: Maybe Origin -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe OriginDetails -> Maybe Text -> Maybe Text -> Maybe AssetType -> Maybe POSIX -> Maybe Text -> Maybe (HashMap Text Text) -> Int -> CreateDataSetResponse

-- | Create a value of <a>CreateDataSetResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:origin:CreateDataSetResponse'</a>,
--   <a>createDataSetResponse_origin</a> - A property that defines the data
--   set as OWNED by the account (for providers) or ENTITLED to the account
--   (for subscribers).
--   
--   <a>$sel:arn:CreateDataSetResponse'</a>,
--   <a>createDataSetResponse_arn</a> - The ARN for the data set.
--   
--   <a>$sel:createdAt:CreateDataSetResponse'</a>,
--   <a>createDataSetResponse_createdAt</a> - The date and time that the
--   data set was created, in ISO 8601 format.
--   
--   <a>$sel:sourceId:CreateDataSetResponse'</a>,
--   <a>createDataSetResponse_sourceId</a> - The data set ID of the owned
--   data set corresponding to the entitled data set being viewed. This
--   parameter is returned when a data set owner is viewing the entitled
--   copy of its owned data set.
--   
--   <a>$sel:originDetails:CreateDataSetResponse'</a>,
--   <a>createDataSetResponse_originDetails</a> - If the origin of this
--   data set is ENTITLED, includes the details for the product on AWS
--   Marketplace.
--   
--   <a>$sel:name:CreateDataSet'</a>, <a>createDataSetResponse_name</a> -
--   The name of the data set.
--   
--   <a>$sel:id:CreateDataSetResponse'</a>, <a>createDataSetResponse_id</a>
--   - The unique identifier for the data set.
--   
--   <a>$sel:assetType:CreateDataSet'</a>,
--   <a>createDataSetResponse_assetType</a> - The type of asset that is
--   added to a data set.
--   
--   <a>$sel:updatedAt:CreateDataSetResponse'</a>,
--   <a>createDataSetResponse_updatedAt</a> - The date and time that the
--   data set was last updated, in ISO 8601 format.
--   
--   <a>$sel:description:CreateDataSet'</a>,
--   <a>createDataSetResponse_description</a> - The description for the
--   data set.
--   
--   <a>$sel:tags:CreateDataSet'</a>, <a>createDataSetResponse_tags</a> -
--   The tags for the data set.
--   
--   <a>$sel:httpStatus:CreateDataSetResponse'</a>,
--   <a>createDataSetResponse_httpStatus</a> - The response's http status
--   code.
newCreateDataSetResponse :: Int -> CreateDataSetResponse

-- | <i>See:</i> <a>newDeleteAsset</a> smart constructor.
data DeleteAsset
DeleteAsset' :: Text -> Text -> Text -> DeleteAsset

-- | Create a value of <a>DeleteAsset</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:revisionId:DeleteAsset'</a>, <a>deleteAsset_revisionId</a> -
--   The unique identifier for a revision.
--   
--   <a>$sel:assetId:DeleteAsset'</a>, <a>deleteAsset_assetId</a> - The
--   unique identifier for an asset.
--   
--   <a>$sel:dataSetId:DeleteAsset'</a>, <a>deleteAsset_dataSetId</a> - The
--   unique identifier for a data set.
newDeleteAsset :: Text -> Text -> Text -> DeleteAsset

-- | <i>See:</i> <a>newDeleteAssetResponse</a> smart constructor.
data DeleteAssetResponse
DeleteAssetResponse' :: DeleteAssetResponse

-- | Create a value of <a>DeleteAssetResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteAssetResponse :: DeleteAssetResponse

-- | The request body for UpdateAsset.
--   
--   <i>See:</i> <a>newUpdateAsset</a> smart constructor.
data UpdateAsset
UpdateAsset' :: Text -> Text -> Text -> Text -> UpdateAsset

-- | Create a value of <a>UpdateAsset</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:revisionId:UpdateAsset'</a>, <a>updateAsset_revisionId</a> -
--   The unique identifier for a revision.
--   
--   <a>$sel:assetId:UpdateAsset'</a>, <a>updateAsset_assetId</a> - The
--   unique identifier for an asset.
--   
--   <a>$sel:dataSetId:UpdateAsset'</a>, <a>updateAsset_dataSetId</a> - The
--   unique identifier for a data set.
--   
--   <a>$sel:name:UpdateAsset'</a>, <a>updateAsset_name</a> - The name of
--   the asset. When importing from Amazon S3, the S3 object key is used as
--   the asset name. When exporting to Amazon S3, the asset name is used as
--   default target S3 object key.
newUpdateAsset :: Text -> Text -> Text -> Text -> UpdateAsset

-- | <i>See:</i> <a>newUpdateAssetResponse</a> smart constructor.
data UpdateAssetResponse
UpdateAssetResponse' :: Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe AssetDetails -> Maybe Text -> Maybe AssetType -> Maybe POSIX -> Maybe Text -> Int -> UpdateAssetResponse

-- | Create a value of <a>UpdateAssetResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:UpdateAssetResponse'</a>, <a>updateAssetResponse_arn</a> -
--   The ARN for the asset.
--   
--   <a>$sel:createdAt:UpdateAssetResponse'</a>,
--   <a>updateAssetResponse_createdAt</a> - The date and time that the
--   asset was created, in ISO 8601 format.
--   
--   <a>$sel:sourceId:UpdateAssetResponse'</a>,
--   <a>updateAssetResponse_sourceId</a> - The asset ID of the owned asset
--   corresponding to the entitled asset being viewed. This parameter is
--   returned when an asset owner is viewing the entitled copy of its owned
--   asset.
--   
--   <a>$sel:dataSetId:UpdateAsset'</a>,
--   <a>updateAssetResponse_dataSetId</a> - The unique identifier for the
--   data set associated with this asset.
--   
--   <a>$sel:name:UpdateAsset'</a>, <a>updateAssetResponse_name</a> - The
--   name of the asset. When importing from Amazon S3, the S3 object key is
--   used as the asset name. When exporting to Amazon S3, the asset name is
--   used as default target S3 object key.
--   
--   <a>$sel:assetDetails:UpdateAssetResponse'</a>,
--   <a>updateAssetResponse_assetDetails</a> - Information about the asset.
--   
--   <a>$sel:id:UpdateAssetResponse'</a>, <a>updateAssetResponse_id</a> -
--   The unique identifier for the asset.
--   
--   <a>$sel:assetType:UpdateAssetResponse'</a>,
--   <a>updateAssetResponse_assetType</a> - The type of asset that is added
--   to a data set.
--   
--   <a>$sel:updatedAt:UpdateAssetResponse'</a>,
--   <a>updateAssetResponse_updatedAt</a> - The date and time that the
--   asset was last updated, in ISO 8601 format.
--   
--   <a>$sel:revisionId:UpdateAsset'</a>,
--   <a>updateAssetResponse_revisionId</a> - The unique identifier for the
--   revision associated with this asset.
--   
--   <a>$sel:httpStatus:UpdateAssetResponse'</a>,
--   <a>updateAssetResponse_httpStatus</a> - The response's http status
--   code.
newUpdateAssetResponse :: Int -> UpdateAssetResponse

-- | <i>See:</i> <a>newGetJob</a> smart constructor.
data GetJob
GetJob' :: Text -> GetJob

-- | Create a value of <a>GetJob</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:GetJob'</a>, <a>getJob_jobId</a> - The unique identifier
--   for a job.
newGetJob :: Text -> GetJob

-- | <i>See:</i> <a>newGetJobResponse</a> smart constructor.
data GetJobResponse
GetJobResponse' :: Maybe State -> Maybe Text -> Maybe POSIX -> Maybe ResponseDetails -> Maybe Text -> Maybe Type -> Maybe POSIX -> Maybe [JobError] -> Int -> GetJobResponse

-- | Create a value of <a>GetJobResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:GetJobResponse'</a>, <a>getJobResponse_state</a> - The
--   state of the job.
--   
--   <a>$sel:arn:GetJobResponse'</a>, <a>getJobResponse_arn</a> - The ARN
--   for the job.
--   
--   <a>$sel:createdAt:GetJobResponse'</a>, <a>getJobResponse_createdAt</a>
--   - The date and time that the job was created, in ISO 8601 format.
--   
--   <a>$sel:details:GetJobResponse'</a>, <a>getJobResponse_details</a> -
--   Details about the job.
--   
--   <a>$sel:id:GetJobResponse'</a>, <a>getJobResponse_id</a> - The unique
--   identifier for the job.
--   
--   <a>$sel:type':GetJobResponse'</a>, <a>getJobResponse_type</a> - The
--   job type.
--   
--   <a>$sel:updatedAt:GetJobResponse'</a>, <a>getJobResponse_updatedAt</a>
--   - The date and time that the job was last updated, in ISO 8601 format.
--   
--   <a>$sel:errors:GetJobResponse'</a>, <a>getJobResponse_errors</a> - The
--   errors associated with jobs.
--   
--   <a>$sel:httpStatus:GetJobResponse'</a>,
--   <a>getJobResponse_httpStatus</a> - The response's http status code.
newGetJobResponse :: Int -> GetJobResponse

-- | <i>See:</i> <a>newGetDataSet</a> smart constructor.
data GetDataSet
GetDataSet' :: Text -> GetDataSet

-- | Create a value of <a>GetDataSet</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataSetId:GetDataSet'</a>, <a>getDataSet_dataSetId</a> - The
--   unique identifier for a data set.
newGetDataSet :: Text -> GetDataSet

-- | <i>See:</i> <a>newGetDataSetResponse</a> smart constructor.
data GetDataSetResponse
GetDataSetResponse' :: Maybe Origin -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe OriginDetails -> Maybe Text -> Maybe Text -> Maybe AssetType -> Maybe POSIX -> Maybe Text -> Maybe (HashMap Text Text) -> Int -> GetDataSetResponse

-- | Create a value of <a>GetDataSetResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:origin:GetDataSetResponse'</a>,
--   <a>getDataSetResponse_origin</a> - A property that defines the data
--   set as OWNED by the account (for providers) or ENTITLED to the account
--   (for subscribers).
--   
--   <a>$sel:arn:GetDataSetResponse'</a>, <a>getDataSetResponse_arn</a> -
--   The ARN for the data set.
--   
--   <a>$sel:createdAt:GetDataSetResponse'</a>,
--   <a>getDataSetResponse_createdAt</a> - The date and time that the data
--   set was created, in ISO 8601 format.
--   
--   <a>$sel:sourceId:GetDataSetResponse'</a>,
--   <a>getDataSetResponse_sourceId</a> - The data set ID of the owned data
--   set corresponding to the entitled data set being viewed. This
--   parameter is returned when a data set owner is viewing the entitled
--   copy of its owned data set.
--   
--   <a>$sel:originDetails:GetDataSetResponse'</a>,
--   <a>getDataSetResponse_originDetails</a> - If the origin of this data
--   set is ENTITLED, includes the details for the product on AWS
--   Marketplace.
--   
--   <a>$sel:name:GetDataSetResponse'</a>, <a>getDataSetResponse_name</a> -
--   The name of the data set.
--   
--   <a>$sel:id:GetDataSetResponse'</a>, <a>getDataSetResponse_id</a> - The
--   unique identifier for the data set.
--   
--   <a>$sel:assetType:GetDataSetResponse'</a>,
--   <a>getDataSetResponse_assetType</a> - The type of asset that is added
--   to a data set.
--   
--   <a>$sel:updatedAt:GetDataSetResponse'</a>,
--   <a>getDataSetResponse_updatedAt</a> - The date and time that the data
--   set was last updated, in ISO 8601 format.
--   
--   <a>$sel:description:GetDataSetResponse'</a>,
--   <a>getDataSetResponse_description</a> - The description for the data
--   set.
--   
--   <a>$sel:tags:GetDataSetResponse'</a>, <a>getDataSetResponse_tags</a> -
--   The tags for the data set.
--   
--   <a>$sel:httpStatus:GetDataSetResponse'</a>,
--   <a>getDataSetResponse_httpStatus</a> - The response's http status
--   code.
newGetDataSetResponse :: Int -> GetDataSetResponse

-- | <i>See:</i> <a>newStartJob</a> smart constructor.
data StartJob
StartJob' :: Text -> StartJob

-- | Create a value of <a>StartJob</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:StartJob'</a>, <a>startJob_jobId</a> - The unique
--   identifier for a job.
newStartJob :: Text -> StartJob

-- | <i>See:</i> <a>newStartJobResponse</a> smart constructor.
data StartJobResponse
StartJobResponse' :: Int -> StartJobResponse

-- | Create a value of <a>StartJobResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:StartJobResponse'</a>,
--   <a>startJobResponse_httpStatus</a> - The response's http status code.
newStartJobResponse :: Int -> StartJobResponse

-- | The request body for TagResource.
--   
--   <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> HashMap Text Text -> TagResource

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   An Amazon Resource Name (ARN) that uniquely identifies an AWS
--   resource.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - A label that
--   consists of a customer-defined key and an optional value.
newTagResource :: Text -> TagResource

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newTagResourceResponse :: TagResourceResponse

-- | <i>See:</i> <a>newListDataSetRevisions</a> smart constructor.
data ListDataSetRevisions
ListDataSetRevisions' :: Maybe Text -> Maybe Natural -> Text -> ListDataSetRevisions

-- | Create a value of <a>ListDataSetRevisions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDataSetRevisions'</a>,
--   <a>listDataSetRevisions_nextToken</a> - The token value retrieved from
--   a previous call to access the next page of results.
--   
--   <a>$sel:maxResults:ListDataSetRevisions'</a>,
--   <a>listDataSetRevisions_maxResults</a> - The maximum number of results
--   returned by a single call.
--   
--   <a>$sel:dataSetId:ListDataSetRevisions'</a>,
--   <a>listDataSetRevisions_dataSetId</a> - The unique identifier for a
--   data set.
newListDataSetRevisions :: Text -> ListDataSetRevisions

-- | <i>See:</i> <a>newListDataSetRevisionsResponse</a> smart constructor.
data ListDataSetRevisionsResponse
ListDataSetRevisionsResponse' :: Maybe Text -> Maybe [RevisionEntry] -> Int -> ListDataSetRevisionsResponse

-- | Create a value of <a>ListDataSetRevisionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDataSetRevisions'</a>,
--   <a>listDataSetRevisionsResponse_nextToken</a> - The token value
--   retrieved from a previous call to access the next page of results.
--   
--   <a>$sel:revisions:ListDataSetRevisionsResponse'</a>,
--   <a>listDataSetRevisionsResponse_revisions</a> - The asset objects
--   listed by the request.
--   
--   <a>$sel:httpStatus:ListDataSetRevisionsResponse'</a>,
--   <a>listDataSetRevisionsResponse_httpStatus</a> - The response's http
--   status code.
newListDataSetRevisionsResponse :: Int -> ListDataSetRevisionsResponse

-- | <i>See:</i> <a>newDeleteEventAction</a> smart constructor.
data DeleteEventAction
DeleteEventAction' :: Text -> DeleteEventAction

-- | Create a value of <a>DeleteEventAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventActionId:DeleteEventAction'</a>,
--   <a>deleteEventAction_eventActionId</a> - The unique identifier for the
--   event action.
newDeleteEventAction :: Text -> DeleteEventAction

-- | <i>See:</i> <a>newDeleteEventActionResponse</a> smart constructor.
data DeleteEventActionResponse
DeleteEventActionResponse' :: DeleteEventActionResponse

-- | Create a value of <a>DeleteEventActionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteEventActionResponse :: DeleteEventActionResponse

-- | The request body for UpdateEventAction.
--   
--   <i>See:</i> <a>newUpdateEventAction</a> smart constructor.
data UpdateEventAction
UpdateEventAction' :: Maybe Action -> Text -> UpdateEventAction

-- | Create a value of <a>UpdateEventAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:action:UpdateEventAction'</a>, <a>updateEventAction_action</a>
--   - What occurs after a certain event.
--   
--   <a>$sel:eventActionId:UpdateEventAction'</a>,
--   <a>updateEventAction_eventActionId</a> - The unique identifier for the
--   event action.
newUpdateEventAction :: Text -> UpdateEventAction

-- | <i>See:</i> <a>newUpdateEventActionResponse</a> smart constructor.
data UpdateEventActionResponse
UpdateEventActionResponse' :: Maybe Event -> Maybe Text -> Maybe POSIX -> Maybe Action -> Maybe Text -> Maybe POSIX -> Int -> UpdateEventActionResponse

-- | Create a value of <a>UpdateEventActionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:event:UpdateEventActionResponse'</a>,
--   <a>updateEventActionResponse_event</a> - What occurs to start an
--   action.
--   
--   <a>$sel:arn:UpdateEventActionResponse'</a>,
--   <a>updateEventActionResponse_arn</a> - The ARN for the event action.
--   
--   <a>$sel:createdAt:UpdateEventActionResponse'</a>,
--   <a>updateEventActionResponse_createdAt</a> - The date and time that
--   the event action was created, in ISO 8601 format.
--   
--   <a>$sel:action:UpdateEventAction'</a>,
--   <a>updateEventActionResponse_action</a> - What occurs after a certain
--   event.
--   
--   <a>$sel:id:UpdateEventActionResponse'</a>,
--   <a>updateEventActionResponse_id</a> - The unique identifier for the
--   event action.
--   
--   <a>$sel:updatedAt:UpdateEventActionResponse'</a>,
--   <a>updateEventActionResponse_updatedAt</a> - The date and time that
--   the event action was last updated, in ISO 8601 format.
--   
--   <a>$sel:httpStatus:UpdateEventActionResponse'</a>,
--   <a>updateEventActionResponse_httpStatus</a> - The response's http
--   status code.
newUpdateEventActionResponse :: Int -> UpdateEventActionResponse

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: [Text] -> Text -> UntagResource

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   key tags.
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - An Amazon Resource Name (ARN) that
--   uniquely identifies an AWS resource.
newUntagResource :: Text -> UntagResource

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUntagResourceResponse :: UntagResourceResponse

-- | <i>See:</i> <a>newListDataSets</a> smart constructor.
data ListDataSets
ListDataSets' :: Maybe Text -> Maybe Text -> Maybe Natural -> ListDataSets

-- | Create a value of <a>ListDataSets</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:origin:ListDataSets'</a>, <a>listDataSets_origin</a> - A
--   property that defines the data set as OWNED by the account (for
--   providers) or ENTITLED to the account (for subscribers).
--   
--   <a>$sel:nextToken:ListDataSets'</a>, <a>listDataSets_nextToken</a> -
--   The token value retrieved from a previous call to access the next page
--   of results.
--   
--   <a>$sel:maxResults:ListDataSets'</a>, <a>listDataSets_maxResults</a> -
--   The maximum number of results returned by a single call.
newListDataSets :: ListDataSets

-- | <i>See:</i> <a>newListDataSetsResponse</a> smart constructor.
data ListDataSetsResponse
ListDataSetsResponse' :: Maybe Text -> Maybe [DataSetEntry] -> Int -> ListDataSetsResponse

-- | Create a value of <a>ListDataSetsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDataSets'</a>,
--   <a>listDataSetsResponse_nextToken</a> - The token value retrieved from
--   a previous call to access the next page of results.
--   
--   <a>$sel:dataSets:ListDataSetsResponse'</a>,
--   <a>listDataSetsResponse_dataSets</a> - The data set objects listed by
--   the request.
--   
--   <a>$sel:httpStatus:ListDataSetsResponse'</a>,
--   <a>listDataSetsResponse_httpStatus</a> - The response's http status
--   code.
newListDataSetsResponse :: Int -> ListDataSetsResponse

-- | The request body for CreateEventAction.
--   
--   <i>See:</i> <a>newCreateEventAction</a> smart constructor.
data CreateEventAction
CreateEventAction' :: Action -> Event -> CreateEventAction

-- | Create a value of <a>CreateEventAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:action:CreateEventAction'</a>, <a>createEventAction_action</a>
--   - What occurs after a certain event.
--   
--   <a>$sel:event:CreateEventAction'</a>, <a>createEventAction_event</a> -
--   What occurs to start an action.
newCreateEventAction :: Action -> Event -> CreateEventAction

-- | <i>See:</i> <a>newCreateEventActionResponse</a> smart constructor.
data CreateEventActionResponse
CreateEventActionResponse' :: Maybe Event -> Maybe Text -> Maybe POSIX -> Maybe Action -> Maybe Text -> Maybe POSIX -> Int -> CreateEventActionResponse

-- | Create a value of <a>CreateEventActionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:event:CreateEventAction'</a>,
--   <a>createEventActionResponse_event</a> - What occurs to start an
--   action.
--   
--   <a>$sel:arn:CreateEventActionResponse'</a>,
--   <a>createEventActionResponse_arn</a> - The ARN for the event action.
--   
--   <a>$sel:createdAt:CreateEventActionResponse'</a>,
--   <a>createEventActionResponse_createdAt</a> - The date and time that
--   the event action was created, in ISO 8601 format.
--   
--   <a>$sel:action:CreateEventAction'</a>,
--   <a>createEventActionResponse_action</a> - What occurs after a certain
--   event.
--   
--   <a>$sel:id:CreateEventActionResponse'</a>,
--   <a>createEventActionResponse_id</a> - The unique identifier for the
--   event action.
--   
--   <a>$sel:updatedAt:CreateEventActionResponse'</a>,
--   <a>createEventActionResponse_updatedAt</a> - The date and time that
--   the event action was last updated, in ISO 8601 format.
--   
--   <a>$sel:httpStatus:CreateEventActionResponse'</a>,
--   <a>createEventActionResponse_httpStatus</a> - The response's http
--   status code.
newCreateEventActionResponse :: Int -> CreateEventActionResponse

-- | <i>See:</i> <a>newCancelJob</a> smart constructor.
data CancelJob
CancelJob' :: Text -> CancelJob

-- | Create a value of <a>CancelJob</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:CancelJob'</a>, <a>cancelJob_jobId</a> - The unique
--   identifier for a job.
newCancelJob :: Text -> CancelJob

-- | <i>See:</i> <a>newCancelJobResponse</a> smart constructor.
data CancelJobResponse
CancelJobResponse' :: CancelJobResponse

-- | Create a value of <a>CancelJobResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newCancelJobResponse :: CancelJobResponse

-- | The type of asset that is added to a data set.
newtype AssetType
AssetType' :: Text -> AssetType
[fromAssetType] :: AssetType -> Text
pattern AssetType_REDSHIFT_DATA_SHARE :: AssetType
pattern AssetType_S3_SNAPSHOT :: AssetType
newtype Code
Code' :: Text -> Code
[fromCode] :: Code -> Text
pattern Code_ACCESS_DENIED_EXCEPTION :: Code
pattern Code_INTERNAL_SERVER_EXCEPTION :: Code
pattern Code_MALWARE_DETECTED :: Code
pattern Code_MALWARE_SCAN_ENCRYPTED_FILE :: Code
pattern Code_RESOURCE_NOT_FOUND_EXCEPTION :: Code
pattern Code_SERVICE_QUOTA_EXCEEDED_EXCEPTION :: Code
pattern Code_VALIDATION_EXCEPTION :: Code

-- | The name of the limit that was reached.
newtype JobErrorLimitName
JobErrorLimitName' :: Text -> JobErrorLimitName
[fromJobErrorLimitName] :: JobErrorLimitName -> Text
pattern JobErrorLimitName_Amazon_Redshift_datashare_assets_per_revision :: JobErrorLimitName
pattern JobErrorLimitName_Asset_size_in_GB :: JobErrorLimitName
pattern JobErrorLimitName_Assets_per_revision :: JobErrorLimitName

-- | The types of resource which the job error can apply to.
newtype JobErrorResourceTypes
JobErrorResourceTypes' :: Text -> JobErrorResourceTypes
[fromJobErrorResourceTypes] :: JobErrorResourceTypes -> Text
pattern JobErrorResourceTypes_ASSET :: JobErrorResourceTypes
pattern JobErrorResourceTypes_DATA_SET :: JobErrorResourceTypes
pattern JobErrorResourceTypes_REVISION :: JobErrorResourceTypes

-- | A property that defines the data set as OWNED by the account (for
--   providers) or ENTITLED to the account (for subscribers). When an owned
--   data set is published in a product, AWS Data Exchange creates a copy
--   of the data set. Subscribers can access that copy of the data set as
--   an entitled data set.
newtype Origin
Origin' :: Text -> Origin
[fromOrigin] :: Origin -> Text
pattern Origin_ENTITLED :: Origin
pattern Origin_OWNED :: Origin

-- | The types of encryption supported in export jobs to Amazon S3.
newtype ServerSideEncryptionTypes
ServerSideEncryptionTypes' :: Text -> ServerSideEncryptionTypes
[fromServerSideEncryptionTypes] :: ServerSideEncryptionTypes -> Text
pattern ServerSideEncryptionTypes_AES256 :: ServerSideEncryptionTypes
pattern ServerSideEncryptionTypes_Aws_kms :: ServerSideEncryptionTypes
newtype State
State' :: Text -> State
[fromState] :: State -> Text
pattern State_CANCELLED :: State
pattern State_COMPLETED :: State
pattern State_ERROR :: State
pattern State_IN_PROGRESS :: State
pattern State_TIMED_OUT :: State
pattern State_WAITING :: State
newtype Type
Type' :: Text -> Type
[fromType] :: Type -> Text
pattern Type_EXPORT_ASSETS_TO_S3 :: Type
pattern Type_EXPORT_ASSET_TO_SIGNED_URL :: Type
pattern Type_EXPORT_REVISIONS_TO_S3 :: Type
pattern Type_IMPORT_ASSETS_FROM_REDSHIFT_DATA_SHARES :: Type
pattern Type_IMPORT_ASSETS_FROM_S3 :: Type
pattern Type_IMPORT_ASSET_FROM_SIGNED_URL :: Type

-- | What occurs after a certain event.
--   
--   <i>See:</i> <a>newAction</a> smart constructor.
data Action
Action' :: Maybe AutoExportRevisionToS3RequestDetails -> Action

-- | Create a value of <a>Action</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:exportRevisionToS3:Action'</a>,
--   <a>action_exportRevisionToS3</a> - Details for the export revision to
--   Amazon S3 action.
newAction :: Action

-- | The destination for the asset.
--   
--   <i>See:</i> <a>newAssetDestinationEntry</a> smart constructor.
data AssetDestinationEntry
AssetDestinationEntry' :: Maybe Text -> Text -> Text -> AssetDestinationEntry

-- | Create a value of <a>AssetDestinationEntry</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:AssetDestinationEntry'</a>,
--   <a>assetDestinationEntry_key</a> - The name of the object in Amazon S3
--   for the asset.
--   
--   <a>$sel:bucket:AssetDestinationEntry'</a>,
--   <a>assetDestinationEntry_bucket</a> - The S3 bucket that is the
--   destination for the asset.
--   
--   <a>$sel:assetId:AssetDestinationEntry'</a>,
--   <a>assetDestinationEntry_assetId</a> - The unique identifier for the
--   asset.
newAssetDestinationEntry :: Text -> Text -> AssetDestinationEntry

-- | Information about the asset.
--   
--   <i>See:</i> <a>newAssetDetails</a> smart constructor.
data AssetDetails
AssetDetails' :: Maybe S3SnapshotAsset -> Maybe RedshiftDataShareAsset -> AssetDetails

-- | Create a value of <a>AssetDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3SnapshotAsset:AssetDetails'</a>,
--   <a>assetDetails_s3SnapshotAsset</a> - The S3 object that is the asset.
--   
--   <a>$sel:redshiftDataShareAsset:AssetDetails'</a>,
--   <a>assetDetails_redshiftDataShareAsset</a> - The Amazon Redshift
--   datashare that is the asset.
newAssetDetails :: AssetDetails

-- | An asset in AWS Data Exchange is a piece of data. The asset can be a
--   structured data file, an image file, or some other data file that can
--   be stored as an S3 object, or an Amazon Redshift datashare (Preview).
--   When you create an import job for your files, you create an asset in
--   AWS Data Exchange for each of those files.
--   
--   <i>See:</i> <a>newAssetEntry</a> smart constructor.
data AssetEntry
AssetEntry' :: Maybe Text -> AssetType -> POSIX -> Text -> Text -> Text -> AssetDetails -> POSIX -> Text -> Text -> AssetEntry

-- | Create a value of <a>AssetEntry</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceId:AssetEntry'</a>, <a>assetEntry_sourceId</a> - The
--   asset ID of the owned asset corresponding to the entitled asset being
--   viewed. This parameter is returned when an asset owner is viewing the
--   entitled copy of its owned asset.
--   
--   <a>$sel:assetType:AssetEntry'</a>, <a>assetEntry_assetType</a> - The
--   type of asset that is added to a data set.
--   
--   <a>$sel:createdAt:AssetEntry'</a>, <a>assetEntry_createdAt</a> - The
--   date and time that the asset was created, in ISO 8601 format.
--   
--   <a>$sel:dataSetId:AssetEntry'</a>, <a>assetEntry_dataSetId</a> - The
--   unique identifier for the data set associated with this asset.
--   
--   <a>$sel:id:AssetEntry'</a>, <a>assetEntry_id</a> - The unique
--   identifier for the asset.
--   
--   <a>$sel:arn:AssetEntry'</a>, <a>assetEntry_arn</a> - The ARN for the
--   asset.
--   
--   <a>$sel:assetDetails:AssetEntry'</a>, <a>assetEntry_assetDetails</a> -
--   Information about the asset.
--   
--   <a>$sel:updatedAt:AssetEntry'</a>, <a>assetEntry_updatedAt</a> - The
--   date and time that the asset was last updated, in ISO 8601 format.
--   
--   <a>$sel:revisionId:AssetEntry'</a>, <a>assetEntry_revisionId</a> - The
--   unique identifier for the revision associated with this asset.
--   
--   <a>$sel:name:AssetEntry'</a>, <a>assetEntry_name</a> - The name of the
--   asset. When importing from Amazon S3, the S3 object key is used as the
--   asset name. When exporting to Amazon S3, the asset name is used as
--   default target S3 object key.
newAssetEntry :: AssetType -> UTCTime -> Text -> Text -> Text -> AssetDetails -> UTCTime -> Text -> Text -> AssetEntry

-- | The source of the assets.
--   
--   <i>See:</i> <a>newAssetSourceEntry</a> smart constructor.
data AssetSourceEntry
AssetSourceEntry' :: Text -> Text -> AssetSourceEntry

-- | Create a value of <a>AssetSourceEntry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bucket:AssetSourceEntry'</a>, <a>assetSourceEntry_bucket</a> -
--   The S3 bucket that's part of the source of the asset.
--   
--   <a>$sel:key:AssetSourceEntry'</a>, <a>assetSourceEntry_key</a> - The
--   name of the object in Amazon S3 for the asset.
newAssetSourceEntry :: Text -> Text -> AssetSourceEntry

-- | A revision destination is the Amazon S3 bucket folder destination to
--   where the export will be sent.
--   
--   <i>See:</i> <a>newAutoExportRevisionDestinationEntry</a> smart
--   constructor.
data AutoExportRevisionDestinationEntry
AutoExportRevisionDestinationEntry' :: Maybe Text -> Text -> AutoExportRevisionDestinationEntry

-- | Create a value of <a>AutoExportRevisionDestinationEntry</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyPattern:AutoExportRevisionDestinationEntry'</a>,
--   <a>autoExportRevisionDestinationEntry_keyPattern</a> - A string
--   representing the pattern for generated names of the individual assets
--   in the revision. For more information about key patterns, see <a>Key
--   patterns when exporting revisions</a>.
--   
--   <a>$sel:bucket:AutoExportRevisionDestinationEntry'</a>,
--   <a>autoExportRevisionDestinationEntry_bucket</a> - The S3 bucket that
--   is the destination for the event action.
newAutoExportRevisionDestinationEntry :: Text -> AutoExportRevisionDestinationEntry

-- | Details of the operation to be performed by the job.
--   
--   <i>See:</i> <a>newAutoExportRevisionToS3RequestDetails</a> smart
--   constructor.
data AutoExportRevisionToS3RequestDetails
AutoExportRevisionToS3RequestDetails' :: Maybe ExportServerSideEncryption -> AutoExportRevisionDestinationEntry -> AutoExportRevisionToS3RequestDetails

-- | Create a value of <a>AutoExportRevisionToS3RequestDetails</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:encryption:AutoExportRevisionToS3RequestDetails'</a>,
--   <a>autoExportRevisionToS3RequestDetails_encryption</a> - Encryption
--   configuration for the auto export job.
--   
--   <a>$sel:revisionDestination:AutoExportRevisionToS3RequestDetails'</a>,
--   <a>autoExportRevisionToS3RequestDetails_revisionDestination</a> - A
--   revision destination is the Amazon S3 bucket folder destination to
--   where the export will be sent.
newAutoExportRevisionToS3RequestDetails :: AutoExportRevisionDestinationEntry -> AutoExportRevisionToS3RequestDetails

-- | A data set is an AWS resource with one or more revisions.
--   
--   <i>See:</i> <a>newDataSetEntry</a> smart constructor.
data DataSetEntry
DataSetEntry' :: Maybe Text -> Maybe OriginDetails -> Origin -> AssetType -> Text -> POSIX -> Text -> Text -> POSIX -> Text -> DataSetEntry

-- | Create a value of <a>DataSetEntry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceId:DataSetEntry'</a>, <a>dataSetEntry_sourceId</a> - The
--   data set ID of the owned data set corresponding to the entitled data
--   set being viewed. This parameter is returned when a data set owner is
--   viewing the entitled copy of its owned data set.
--   
--   <a>$sel:originDetails:DataSetEntry'</a>,
--   <a>dataSetEntry_originDetails</a> - If the origin of this data set is
--   ENTITLED, includes the details for the product on AWS Marketplace.
--   
--   <a>$sel:origin:DataSetEntry'</a>, <a>dataSetEntry_origin</a> - A
--   property that defines the data set as OWNED by the account (for
--   providers) or ENTITLED to the account (for subscribers).
--   
--   <a>$sel:assetType:DataSetEntry'</a>, <a>dataSetEntry_assetType</a> -
--   The type of asset that is added to a data set.
--   
--   <a>$sel:description:DataSetEntry'</a>, <a>dataSetEntry_description</a>
--   - The description for the data set.
--   
--   <a>$sel:createdAt:DataSetEntry'</a>, <a>dataSetEntry_createdAt</a> -
--   The date and time that the data set was created, in ISO 8601 format.
--   
--   <a>$sel:id:DataSetEntry'</a>, <a>dataSetEntry_id</a> - The unique
--   identifier for the data set.
--   
--   <a>$sel:arn:DataSetEntry'</a>, <a>dataSetEntry_arn</a> - The ARN for
--   the data set.
--   
--   <a>$sel:updatedAt:DataSetEntry'</a>, <a>dataSetEntry_updatedAt</a> -
--   The date and time that the data set was last updated, in ISO 8601
--   format.
--   
--   <a>$sel:name:DataSetEntry'</a>, <a>dataSetEntry_name</a> - The name of
--   the data set.
newDataSetEntry :: Origin -> AssetType -> Text -> UTCTime -> Text -> Text -> UTCTime -> Text -> DataSetEntry

-- | Information about the job error.
--   
--   <i>See:</i> <a>newDetails</a> smart constructor.
data Details
Details' :: Maybe ImportAssetFromSignedUrlJobErrorDetails -> Maybe [AssetSourceEntry] -> Details

-- | Create a value of <a>Details</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:importAssetFromSignedUrlJobErrorDetails:Details'</a>,
--   <a>details_importAssetFromSignedUrlJobErrorDetails</a> - Information
--   about the job error.
--   
--   <a>$sel:importAssetsFromS3JobErrorDetails:Details'</a>,
--   <a>details_importAssetsFromS3JobErrorDetails</a> - Information about
--   the job error.
newDetails :: Details

-- | What occurs to start an action.
--   
--   <i>See:</i> <a>newEvent</a> smart constructor.
data Event
Event' :: Maybe RevisionPublished -> Event

-- | Create a value of <a>Event</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:revisionPublished:Event'</a>, <a>event_revisionPublished</a> -
--   What occurs to start the revision publish action.
newEvent :: Event

-- | An event action is an object that defines the relationship between a
--   specific event and an automated action that will be taken on behalf of
--   the customer.
--   
--   <i>See:</i> <a>newEventActionEntry</a> smart constructor.
data EventActionEntry
EventActionEntry' :: Action -> POSIX -> Event -> Text -> Text -> POSIX -> EventActionEntry

-- | Create a value of <a>EventActionEntry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:action:EventActionEntry'</a>, <a>eventActionEntry_action</a> -
--   What occurs after a certain event.
--   
--   <a>$sel:createdAt:EventActionEntry'</a>,
--   <a>eventActionEntry_createdAt</a> - The date and time that the event
--   action was created, in ISO 8601 format.
--   
--   <a>$sel:event:EventActionEntry'</a>, <a>eventActionEntry_event</a> -
--   What occurs to start an action.
--   
--   <a>$sel:id:EventActionEntry'</a>, <a>eventActionEntry_id</a> - The
--   unique identifier for the event action.
--   
--   <a>$sel:arn:EventActionEntry'</a>, <a>eventActionEntry_arn</a> - The
--   Amazon Resource Name (ARN) for the event action.
--   
--   <a>$sel:updatedAt:EventActionEntry'</a>,
--   <a>eventActionEntry_updatedAt</a> - The date and time that the event
--   action was last updated, in ISO 8601 format.
newEventActionEntry :: Action -> UTCTime -> Event -> Text -> Text -> UTCTime -> EventActionEntry

-- | Details of the operation to be performed by the job.
--   
--   <i>See:</i> <a>newExportAssetToSignedUrlRequestDetails</a> smart
--   constructor.
data ExportAssetToSignedUrlRequestDetails
ExportAssetToSignedUrlRequestDetails' :: Text -> Text -> Text -> ExportAssetToSignedUrlRequestDetails

-- | Create a value of <a>ExportAssetToSignedUrlRequestDetails</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataSetId:ExportAssetToSignedUrlRequestDetails'</a>,
--   <a>exportAssetToSignedUrlRequestDetails_dataSetId</a> - The unique
--   identifier for the data set associated with this export job.
--   
--   <a>$sel:assetId:ExportAssetToSignedUrlRequestDetails'</a>,
--   <a>exportAssetToSignedUrlRequestDetails_assetId</a> - The unique
--   identifier for the asset that is exported to a signed URL.
--   
--   <a>$sel:revisionId:ExportAssetToSignedUrlRequestDetails'</a>,
--   <a>exportAssetToSignedUrlRequestDetails_revisionId</a> - The unique
--   identifier for the revision associated with this export request.
newExportAssetToSignedUrlRequestDetails :: Text -> Text -> Text -> ExportAssetToSignedUrlRequestDetails

-- | The details of the export to signed URL response.
--   
--   <i>See:</i> <a>newExportAssetToSignedUrlResponseDetails</a> smart
--   constructor.
data ExportAssetToSignedUrlResponseDetails
ExportAssetToSignedUrlResponseDetails' :: Maybe Text -> Maybe POSIX -> Text -> Text -> Text -> ExportAssetToSignedUrlResponseDetails

-- | Create a value of <a>ExportAssetToSignedUrlResponseDetails</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:signedUrl:ExportAssetToSignedUrlResponseDetails'</a>,
--   <a>exportAssetToSignedUrlResponseDetails_signedUrl</a> - The signed
--   URL for the export request.
--   
--   <a>$sel:signedUrlExpiresAt:ExportAssetToSignedUrlResponseDetails'</a>,
--   <a>exportAssetToSignedUrlResponseDetails_signedUrlExpiresAt</a> - The
--   date and time that the signed URL expires, in ISO 8601 format.
--   
--   <a>$sel:dataSetId:ExportAssetToSignedUrlResponseDetails'</a>,
--   <a>exportAssetToSignedUrlResponseDetails_dataSetId</a> - The unique
--   identifier for the data set associated with this export job.
--   
--   <a>$sel:assetId:ExportAssetToSignedUrlResponseDetails'</a>,
--   <a>exportAssetToSignedUrlResponseDetails_assetId</a> - The unique
--   identifier for the asset associated with this export job.
--   
--   <a>$sel:revisionId:ExportAssetToSignedUrlResponseDetails'</a>,
--   <a>exportAssetToSignedUrlResponseDetails_revisionId</a> - The unique
--   identifier for the revision associated with this export response.
newExportAssetToSignedUrlResponseDetails :: Text -> Text -> Text -> ExportAssetToSignedUrlResponseDetails

-- | Details of the operation to be performed by the job.
--   
--   <i>See:</i> <a>newExportAssetsToS3RequestDetails</a> smart
--   constructor.
data ExportAssetsToS3RequestDetails
ExportAssetsToS3RequestDetails' :: Maybe ExportServerSideEncryption -> [AssetDestinationEntry] -> Text -> Text -> ExportAssetsToS3RequestDetails

-- | Create a value of <a>ExportAssetsToS3RequestDetails</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:encryption:ExportAssetsToS3RequestDetails'</a>,
--   <a>exportAssetsToS3RequestDetails_encryption</a> - Encryption
--   configuration for the export job.
--   
--   <a>$sel:assetDestinations:ExportAssetsToS3RequestDetails'</a>,
--   <a>exportAssetsToS3RequestDetails_assetDestinations</a> - The
--   destination for the asset.
--   
--   <a>$sel:dataSetId:ExportAssetsToS3RequestDetails'</a>,
--   <a>exportAssetsToS3RequestDetails_dataSetId</a> - The unique
--   identifier for the data set associated with this export job.
--   
--   <a>$sel:revisionId:ExportAssetsToS3RequestDetails'</a>,
--   <a>exportAssetsToS3RequestDetails_revisionId</a> - The unique
--   identifier for the revision associated with this export request.
newExportAssetsToS3RequestDetails :: Text -> Text -> ExportAssetsToS3RequestDetails

-- | Details about the export to Amazon S3 response.
--   
--   <i>See:</i> <a>newExportAssetsToS3ResponseDetails</a> smart
--   constructor.
data ExportAssetsToS3ResponseDetails
ExportAssetsToS3ResponseDetails' :: Maybe ExportServerSideEncryption -> [AssetDestinationEntry] -> Text -> Text -> ExportAssetsToS3ResponseDetails

-- | Create a value of <a>ExportAssetsToS3ResponseDetails</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:encryption:ExportAssetsToS3ResponseDetails'</a>,
--   <a>exportAssetsToS3ResponseDetails_encryption</a> - Encryption
--   configuration of the export job.
--   
--   <a>$sel:assetDestinations:ExportAssetsToS3ResponseDetails'</a>,
--   <a>exportAssetsToS3ResponseDetails_assetDestinations</a> - The
--   destination in Amazon S3 where the asset is exported.
--   
--   <a>$sel:dataSetId:ExportAssetsToS3ResponseDetails'</a>,
--   <a>exportAssetsToS3ResponseDetails_dataSetId</a> - The unique
--   identifier for the data set associated with this export job.
--   
--   <a>$sel:revisionId:ExportAssetsToS3ResponseDetails'</a>,
--   <a>exportAssetsToS3ResponseDetails_revisionId</a> - The unique
--   identifier for the revision associated with this export response.
newExportAssetsToS3ResponseDetails :: Text -> Text -> ExportAssetsToS3ResponseDetails

-- | Details of the operation to be performed by the job.
--   
--   <i>See:</i> <a>newExportRevisionsToS3RequestDetails</a> smart
--   constructor.
data ExportRevisionsToS3RequestDetails
ExportRevisionsToS3RequestDetails' :: Maybe ExportServerSideEncryption -> [RevisionDestinationEntry] -> Text -> ExportRevisionsToS3RequestDetails

-- | Create a value of <a>ExportRevisionsToS3RequestDetails</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:encryption:ExportRevisionsToS3RequestDetails'</a>,
--   <a>exportRevisionsToS3RequestDetails_encryption</a> - Encryption
--   configuration for the export job.
--   
--   <a>$sel:revisionDestinations:ExportRevisionsToS3RequestDetails'</a>,
--   <a>exportRevisionsToS3RequestDetails_revisionDestinations</a> - The
--   destination for the revision.
--   
--   <a>$sel:dataSetId:ExportRevisionsToS3RequestDetails'</a>,
--   <a>exportRevisionsToS3RequestDetails_dataSetId</a> - The unique
--   identifier for the data set associated with this export job.
newExportRevisionsToS3RequestDetails :: Text -> ExportRevisionsToS3RequestDetails

-- | Details about the export revisions to Amazon S3 response.
--   
--   <i>See:</i> <a>newExportRevisionsToS3ResponseDetails</a> smart
--   constructor.
data ExportRevisionsToS3ResponseDetails
ExportRevisionsToS3ResponseDetails' :: Maybe ExportServerSideEncryption -> Maybe Text -> [RevisionDestinationEntry] -> Text -> ExportRevisionsToS3ResponseDetails

-- | Create a value of <a>ExportRevisionsToS3ResponseDetails</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:encryption:ExportRevisionsToS3ResponseDetails'</a>,
--   <a>exportRevisionsToS3ResponseDetails_encryption</a> - Encryption
--   configuration of the export job.
--   
--   <a>$sel:eventActionArn:ExportRevisionsToS3ResponseDetails'</a>,
--   <a>exportRevisionsToS3ResponseDetails_eventActionArn</a> - The Amazon
--   Resource Name (ARN) of the event action.
--   
--   <a>$sel:revisionDestinations:ExportRevisionsToS3ResponseDetails'</a>,
--   <a>exportRevisionsToS3ResponseDetails_revisionDestinations</a> - The
--   destination in Amazon S3 where the revision is exported.
--   
--   <a>$sel:dataSetId:ExportRevisionsToS3ResponseDetails'</a>,
--   <a>exportRevisionsToS3ResponseDetails_dataSetId</a> - The unique
--   identifier for the data set associated with this export job.
newExportRevisionsToS3ResponseDetails :: Text -> ExportRevisionsToS3ResponseDetails

-- | Encryption configuration of the export job. Includes the encryption
--   type in addition to the AWS KMS key. The KMS key is only necessary if
--   you chose the KMS encryption. type.
--   
--   <i>See:</i> <a>newExportServerSideEncryption</a> smart constructor.
data ExportServerSideEncryption
ExportServerSideEncryption' :: Maybe Text -> ServerSideEncryptionTypes -> ExportServerSideEncryption

-- | Create a value of <a>ExportServerSideEncryption</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:kmsKeyArn:ExportServerSideEncryption'</a>,
--   <a>exportServerSideEncryption_kmsKeyArn</a> - The Amazon Resource Name
--   (ARN) of the AWS KMS key you want to use to encrypt the Amazon S3
--   objects. This parameter is required if you choose aws:kms as an
--   encryption type.
--   
--   <a>$sel:type':ExportServerSideEncryption'</a>,
--   <a>exportServerSideEncryption_type</a> - The type of server side
--   encryption used for encrypting the objects in Amazon S3.
newExportServerSideEncryption :: ServerSideEncryptionTypes -> ExportServerSideEncryption

-- | Information about the job error.
--   
--   <i>See:</i> <a>newImportAssetFromSignedUrlJobErrorDetails</a> smart
--   constructor.
data ImportAssetFromSignedUrlJobErrorDetails
ImportAssetFromSignedUrlJobErrorDetails' :: Text -> ImportAssetFromSignedUrlJobErrorDetails

-- | Create a value of <a>ImportAssetFromSignedUrlJobErrorDetails</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:assetName:ImportAssetFromSignedUrlJobErrorDetails'</a>,
--   <a>importAssetFromSignedUrlJobErrorDetails_assetName</a> - Information
--   about the job error.
newImportAssetFromSignedUrlJobErrorDetails :: Text -> ImportAssetFromSignedUrlJobErrorDetails

-- | Details of the operation to be performed by the job.
--   
--   <i>See:</i> <a>newImportAssetFromSignedUrlRequestDetails</a> smart
--   constructor.
data ImportAssetFromSignedUrlRequestDetails
ImportAssetFromSignedUrlRequestDetails' :: Text -> Text -> Text -> Text -> ImportAssetFromSignedUrlRequestDetails

-- | Create a value of <a>ImportAssetFromSignedUrlRequestDetails</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataSetId:ImportAssetFromSignedUrlRequestDetails'</a>,
--   <a>importAssetFromSignedUrlRequestDetails_dataSetId</a> - The unique
--   identifier for the data set associated with this import job.
--   
--   <a>$sel:md5Hash:ImportAssetFromSignedUrlRequestDetails'</a>,
--   <a>importAssetFromSignedUrlRequestDetails_md5Hash</a> - The
--   Base64-encoded Md5 hash for the asset, used to ensure the integrity of
--   the file at that location.
--   
--   <a>$sel:assetName:ImportAssetFromSignedUrlRequestDetails'</a>,
--   <a>importAssetFromSignedUrlRequestDetails_assetName</a> - The name of
--   the asset. When importing from Amazon S3, the S3 object key is used as
--   the asset name.
--   
--   <a>$sel:revisionId:ImportAssetFromSignedUrlRequestDetails'</a>,
--   <a>importAssetFromSignedUrlRequestDetails_revisionId</a> - The unique
--   identifier for the revision associated with this import request.
newImportAssetFromSignedUrlRequestDetails :: Text -> Text -> Text -> Text -> ImportAssetFromSignedUrlRequestDetails

-- | The details in the response for an import request, including the
--   signed URL and other information.
--   
--   <i>See:</i> <a>newImportAssetFromSignedUrlResponseDetails</a> smart
--   constructor.
data ImportAssetFromSignedUrlResponseDetails
ImportAssetFromSignedUrlResponseDetails' :: Maybe Text -> Maybe POSIX -> Maybe Text -> Text -> Text -> Text -> ImportAssetFromSignedUrlResponseDetails

-- | Create a value of <a>ImportAssetFromSignedUrlResponseDetails</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:signedUrl:ImportAssetFromSignedUrlResponseDetails'</a>,
--   <a>importAssetFromSignedUrlResponseDetails_signedUrl</a> - The signed
--   URL.
--   
--   
--   <a>$sel:signedUrlExpiresAt:ImportAssetFromSignedUrlResponseDetails'</a>,
--   <a>importAssetFromSignedUrlResponseDetails_signedUrlExpiresAt</a> -
--   The time and date at which the signed URL expires, in ISO 8601 format.
--   
--   <a>$sel:md5Hash:ImportAssetFromSignedUrlResponseDetails'</a>,
--   <a>importAssetFromSignedUrlResponseDetails_md5Hash</a> - The
--   Base64-encoded Md5 hash for the asset, used to ensure the integrity of
--   the file at that location.
--   
--   <a>$sel:dataSetId:ImportAssetFromSignedUrlResponseDetails'</a>,
--   <a>importAssetFromSignedUrlResponseDetails_dataSetId</a> - The unique
--   identifier for the data set associated with this import job.
--   
--   <a>$sel:assetName:ImportAssetFromSignedUrlResponseDetails'</a>,
--   <a>importAssetFromSignedUrlResponseDetails_assetName</a> - The name
--   for the asset associated with this import job.
--   
--   <a>$sel:revisionId:ImportAssetFromSignedUrlResponseDetails'</a>,
--   <a>importAssetFromSignedUrlResponseDetails_revisionId</a> - The unique
--   identifier for the revision associated with this import response.
newImportAssetFromSignedUrlResponseDetails :: Text -> Text -> Text -> ImportAssetFromSignedUrlResponseDetails

-- | Details from an import from Amazon Redshift datashare request.
--   
--   <i>See:</i> <a>newImportAssetsFromRedshiftDataSharesRequestDetails</a>
--   smart constructor.
data ImportAssetsFromRedshiftDataSharesRequestDetails
ImportAssetsFromRedshiftDataSharesRequestDetails' :: Text -> [RedshiftDataShareAssetSourceEntry] -> Text -> ImportAssetsFromRedshiftDataSharesRequestDetails

-- | Create a value of
--   <a>ImportAssetsFromRedshiftDataSharesRequestDetails</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:dataSetId:ImportAssetsFromRedshiftDataSharesRequestDetails'</a>,
--   <a>importAssetsFromRedshiftDataSharesRequestDetails_dataSetId</a> -
--   The unique identifier for the data set associated with this import
--   job.
--   
--   
--   <a>$sel:assetSources:ImportAssetsFromRedshiftDataSharesRequestDetails'</a>,
--   <a>importAssetsFromRedshiftDataSharesRequestDetails_assetSources</a> -
--   A list of Amazon Redshift datashare assets.
--   
--   
--   <a>$sel:revisionId:ImportAssetsFromRedshiftDataSharesRequestDetails'</a>,
--   <a>importAssetsFromRedshiftDataSharesRequestDetails_revisionId</a> -
--   The unique identifier for the revision associated with this import
--   job.
newImportAssetsFromRedshiftDataSharesRequestDetails :: Text -> Text -> ImportAssetsFromRedshiftDataSharesRequestDetails

-- | Details from an import from Amazon Redshift datashare response.
--   
--   <i>See:</i>
--   <a>newImportAssetsFromRedshiftDataSharesResponseDetails</a> smart
--   constructor.
data ImportAssetsFromRedshiftDataSharesResponseDetails
ImportAssetsFromRedshiftDataSharesResponseDetails' :: Text -> [RedshiftDataShareAssetSourceEntry] -> Text -> ImportAssetsFromRedshiftDataSharesResponseDetails

-- | Create a value of
--   <a>ImportAssetsFromRedshiftDataSharesResponseDetails</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:dataSetId:ImportAssetsFromRedshiftDataSharesResponseDetails'</a>,
--   <a>importAssetsFromRedshiftDataSharesResponseDetails_dataSetId</a> -
--   The unique identifier for the data set associated with this import
--   job.
--   
--   
--   <a>$sel:assetSources:ImportAssetsFromRedshiftDataSharesResponseDetails'</a>,
--   <a>importAssetsFromRedshiftDataSharesResponseDetails_assetSources</a>
--   - A list of Amazon Redshift datashare asset sources.
--   
--   
--   <a>$sel:revisionId:ImportAssetsFromRedshiftDataSharesResponseDetails'</a>,
--   <a>importAssetsFromRedshiftDataSharesResponseDetails_revisionId</a> -
--   The unique identifier for the revision associated with this import
--   job.
newImportAssetsFromRedshiftDataSharesResponseDetails :: Text -> Text -> ImportAssetsFromRedshiftDataSharesResponseDetails

-- | Details of the operation to be performed by the job.
--   
--   <i>See:</i> <a>newImportAssetsFromS3RequestDetails</a> smart
--   constructor.
data ImportAssetsFromS3RequestDetails
ImportAssetsFromS3RequestDetails' :: Text -> [AssetSourceEntry] -> Text -> ImportAssetsFromS3RequestDetails

-- | Create a value of <a>ImportAssetsFromS3RequestDetails</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataSetId:ImportAssetsFromS3RequestDetails'</a>,
--   <a>importAssetsFromS3RequestDetails_dataSetId</a> - The unique
--   identifier for the data set associated with this import job.
--   
--   <a>$sel:assetSources:ImportAssetsFromS3RequestDetails'</a>,
--   <a>importAssetsFromS3RequestDetails_assetSources</a> - Is a list of S3
--   bucket and object key pairs.
--   
--   <a>$sel:revisionId:ImportAssetsFromS3RequestDetails'</a>,
--   <a>importAssetsFromS3RequestDetails_revisionId</a> - The unique
--   identifier for the revision associated with this import request.
newImportAssetsFromS3RequestDetails :: Text -> Text -> ImportAssetsFromS3RequestDetails

-- | Details from an import from Amazon S3 response.
--   
--   <i>See:</i> <a>newImportAssetsFromS3ResponseDetails</a> smart
--   constructor.
data ImportAssetsFromS3ResponseDetails
ImportAssetsFromS3ResponseDetails' :: Text -> [AssetSourceEntry] -> Text -> ImportAssetsFromS3ResponseDetails

-- | Create a value of <a>ImportAssetsFromS3ResponseDetails</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataSetId:ImportAssetsFromS3ResponseDetails'</a>,
--   <a>importAssetsFromS3ResponseDetails_dataSetId</a> - The unique
--   identifier for the data set associated with this import job.
--   
--   <a>$sel:assetSources:ImportAssetsFromS3ResponseDetails'</a>,
--   <a>importAssetsFromS3ResponseDetails_assetSources</a> - Is a list of
--   Amazon S3 bucket and object key pairs.
--   
--   <a>$sel:revisionId:ImportAssetsFromS3ResponseDetails'</a>,
--   <a>importAssetsFromS3ResponseDetails_revisionId</a> - The unique
--   identifier for the revision associated with this import response.
newImportAssetsFromS3ResponseDetails :: Text -> Text -> ImportAssetsFromS3ResponseDetails

-- | AWS Data Exchange Jobs are asynchronous import or export operations
--   used to create or copy assets. A data set owner can both import and
--   export as they see fit. Someone with an entitlement to a data set can
--   only export. Jobs are deleted 90 days after they are created.
--   
--   <i>See:</i> <a>newJobEntry</a> smart constructor.
data JobEntry
JobEntry' :: Maybe [JobError] -> Type -> ResponseDetails -> State -> POSIX -> Text -> Text -> POSIX -> JobEntry

-- | Create a value of <a>JobEntry</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errors:JobEntry'</a>, <a>jobEntry_errors</a> - Errors for
--   jobs.
--   
--   <a>$sel:type':JobEntry'</a>, <a>jobEntry_type</a> - The job type.
--   
--   <a>$sel:details:JobEntry'</a>, <a>jobEntry_details</a> - Details of
--   the operation to be performed by the job, such as export destination
--   details or import source details.
--   
--   <a>$sel:state:JobEntry'</a>, <a>jobEntry_state</a> - The state of the
--   job.
--   
--   <a>$sel:createdAt:JobEntry'</a>, <a>jobEntry_createdAt</a> - The date
--   and time that the job was created, in ISO 8601 format.
--   
--   <a>$sel:id:JobEntry'</a>, <a>jobEntry_id</a> - The unique identifier
--   for the job.
--   
--   <a>$sel:arn:JobEntry'</a>, <a>jobEntry_arn</a> - The ARN for the job.
--   
--   <a>$sel:updatedAt:JobEntry'</a>, <a>jobEntry_updatedAt</a> - The date
--   and time that the job was last updated, in ISO 8601 format.
newJobEntry :: Type -> ResponseDetails -> State -> UTCTime -> Text -> Text -> UTCTime -> JobEntry

-- | An error that occurred with the job request.
--   
--   <i>See:</i> <a>newJobError</a> smart constructor.
data JobError
JobError' :: Maybe Text -> Maybe JobErrorLimitName -> Maybe JobErrorResourceTypes -> Maybe Details -> Maybe Double -> Text -> Code -> JobError

-- | Create a value of <a>JobError</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceId:JobError'</a>, <a>jobError_resourceId</a> - The
--   unique identifier for the resource related to the error.
--   
--   <a>$sel:limitName:JobError'</a>, <a>jobError_limitName</a> - The name
--   of the limit that was reached.
--   
--   <a>$sel:resourceType:JobError'</a>, <a>jobError_resourceType</a> - The
--   type of resource related to the error.
--   
--   <a>$sel:details:JobError'</a>, <a>jobError_details</a> - The details
--   about the job error.
--   
--   <a>$sel:limitValue:JobError'</a>, <a>jobError_limitValue</a> - The
--   value of the exceeded limit.
--   
--   <a>$sel:message:JobError'</a>, <a>jobError_message</a> - The message
--   related to the job error.
--   
--   <a>$sel:code:JobError'</a>, <a>jobError_code</a> - The code for the
--   job error.
newJobError :: Text -> Code -> JobError

-- | Information about the origin of the data set.
--   
--   <i>See:</i> <a>newOriginDetails</a> smart constructor.
data OriginDetails
OriginDetails' :: Text -> OriginDetails

-- | Create a value of <a>OriginDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:productId:OriginDetails'</a>, <a>originDetails_productId</a> -
--   The product ID of the origin of the data set.
newOriginDetails :: Text -> OriginDetails

-- | The Amazon Redshift datashare asset.
--   
--   <i>See:</i> <a>newRedshiftDataShareAsset</a> smart constructor.
data RedshiftDataShareAsset
RedshiftDataShareAsset' :: Text -> RedshiftDataShareAsset

-- | Create a value of <a>RedshiftDataShareAsset</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:RedshiftDataShareAsset'</a>,
--   <a>redshiftDataShareAsset_arn</a> - The Amazon Resource Name (ARN) of
--   the datashare asset.
newRedshiftDataShareAsset :: Text -> RedshiftDataShareAsset

-- | The source of the Amazon Redshift datashare asset.
--   
--   <i>See:</i> <a>newRedshiftDataShareAssetSourceEntry</a> smart
--   constructor.
data RedshiftDataShareAssetSourceEntry
RedshiftDataShareAssetSourceEntry' :: Text -> RedshiftDataShareAssetSourceEntry

-- | Create a value of <a>RedshiftDataShareAssetSourceEntry</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataShareArn:RedshiftDataShareAssetSourceEntry'</a>,
--   <a>redshiftDataShareAssetSourceEntry_dataShareArn</a> - The Amazon
--   Resource Name (ARN) of the datashare asset.
newRedshiftDataShareAssetSourceEntry :: Text -> RedshiftDataShareAssetSourceEntry

-- | The details for the request.
--   
--   <i>See:</i> <a>newRequestDetails</a> smart constructor.
data RequestDetails
RequestDetails' :: Maybe ExportAssetsToS3RequestDetails -> Maybe ExportRevisionsToS3RequestDetails -> Maybe ImportAssetFromSignedUrlRequestDetails -> Maybe ImportAssetsFromRedshiftDataSharesRequestDetails -> Maybe ImportAssetsFromS3RequestDetails -> Maybe ExportAssetToSignedUrlRequestDetails -> RequestDetails

-- | Create a value of <a>RequestDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:exportAssetsToS3:RequestDetails'</a>,
--   <a>requestDetails_exportAssetsToS3</a> - Details about the export to
--   Amazon S3 request.
--   
--   <a>$sel:exportRevisionsToS3:RequestDetails'</a>,
--   <a>requestDetails_exportRevisionsToS3</a> - Details about the export
--   to Amazon S3 request.
--   
--   <a>$sel:importAssetFromSignedUrl:RequestDetails'</a>,
--   <a>requestDetails_importAssetFromSignedUrl</a> - Details about the
--   import from signed URL request.
--   
--   <a>$sel:importAssetsFromRedshiftDataShares:RequestDetails'</a>,
--   <a>requestDetails_importAssetsFromRedshiftDataShares</a> - Details
--   from an import from Amazon Redshift datashare request.
--   
--   <a>$sel:importAssetsFromS3:RequestDetails'</a>,
--   <a>requestDetails_importAssetsFromS3</a> - Details about the import
--   from Amazon S3 request.
--   
--   <a>$sel:exportAssetToSignedUrl:RequestDetails'</a>,
--   <a>requestDetails_exportAssetToSignedUrl</a> - Details about the
--   export to signed URL request.
newRequestDetails :: RequestDetails

-- | Details for the response.
--   
--   <i>See:</i> <a>newResponseDetails</a> smart constructor.
data ResponseDetails
ResponseDetails' :: Maybe ExportAssetsToS3ResponseDetails -> Maybe ExportRevisionsToS3ResponseDetails -> Maybe ImportAssetFromSignedUrlResponseDetails -> Maybe ImportAssetsFromRedshiftDataSharesResponseDetails -> Maybe ImportAssetsFromS3ResponseDetails -> Maybe ExportAssetToSignedUrlResponseDetails -> ResponseDetails

-- | Create a value of <a>ResponseDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:exportAssetsToS3:ResponseDetails'</a>,
--   <a>responseDetails_exportAssetsToS3</a> - Details for the export to
--   Amazon S3 response.
--   
--   <a>$sel:exportRevisionsToS3:ResponseDetails'</a>,
--   <a>responseDetails_exportRevisionsToS3</a> - Details for the export
--   revisions to Amazon S3 response.
--   
--   <a>$sel:importAssetFromSignedUrl:ResponseDetails'</a>,
--   <a>responseDetails_importAssetFromSignedUrl</a> - Details for the
--   import from signed URL response.
--   
--   <a>$sel:importAssetsFromRedshiftDataShares:ResponseDetails'</a>,
--   <a>responseDetails_importAssetsFromRedshiftDataShares</a> - Details
--   from an import from Amazon Redshift datashare response.
--   
--   <a>$sel:importAssetsFromS3:ResponseDetails'</a>,
--   <a>responseDetails_importAssetsFromS3</a> - Details for the import
--   from Amazon S3 response.
--   
--   <a>$sel:exportAssetToSignedUrl:ResponseDetails'</a>,
--   <a>responseDetails_exportAssetToSignedUrl</a> - Details for the export
--   to signed URL response.
newResponseDetails :: ResponseDetails

-- | The destination where the assets in the revision will be exported.
--   
--   <i>See:</i> <a>newRevisionDestinationEntry</a> smart constructor.
data RevisionDestinationEntry
RevisionDestinationEntry' :: Maybe Text -> Text -> Text -> RevisionDestinationEntry

-- | Create a value of <a>RevisionDestinationEntry</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyPattern:RevisionDestinationEntry'</a>,
--   <a>revisionDestinationEntry_keyPattern</a> - A string representing the
--   pattern for generated names of the individual assets in the revision.
--   For more information about key patterns, see <a>Key patterns when
--   exporting revisions</a>.
--   
--   <a>$sel:bucket:RevisionDestinationEntry'</a>,
--   <a>revisionDestinationEntry_bucket</a> - The S3 bucket that is the
--   destination for the assets in the revision.
--   
--   <a>$sel:revisionId:RevisionDestinationEntry'</a>,
--   <a>revisionDestinationEntry_revisionId</a> - The unique identifier for
--   the revision.
newRevisionDestinationEntry :: Text -> Text -> RevisionDestinationEntry

-- | A revision is a container for one or more assets.
--   
--   <i>See:</i> <a>newRevisionEntry</a> smart constructor.
data RevisionEntry
RevisionEntry' :: Maybe Text -> Maybe Bool -> Maybe Text -> POSIX -> Text -> Text -> Text -> POSIX -> RevisionEntry

-- | Create a value of <a>RevisionEntry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceId:RevisionEntry'</a>, <a>revisionEntry_sourceId</a> -
--   The revision ID of the owned revision corresponding to the entitled
--   revision being viewed. This parameter is returned when a revision
--   owner is viewing the entitled copy of its owned revision.
--   
--   <a>$sel:finalized:RevisionEntry'</a>, <a>revisionEntry_finalized</a> -
--   To publish a revision to a data set in a product, the revision must
--   first be finalized. Finalizing a revision tells AWS Data Exchange that
--   your changes to the assets in the revision are complete. After it's in
--   this read-only state, you can publish the revision to your products.
--   
--   Finalized revisions can be published through the AWS Data Exchange
--   console or the AWS Marketplace Catalog API, using the StartChangeSet
--   AWS Marketplace Catalog API action. When using the API, revisions are
--   uniquely identified by their ARN.
--   
--   <a>$sel:comment:RevisionEntry'</a>, <a>revisionEntry_comment</a> - An
--   optional comment about the revision.
--   
--   <a>$sel:createdAt:RevisionEntry'</a>, <a>revisionEntry_createdAt</a> -
--   The date and time that the revision was created, in ISO 8601 format.
--   
--   <a>$sel:dataSetId:RevisionEntry'</a>, <a>revisionEntry_dataSetId</a> -
--   The unique identifier for the data set associated with this revision.
--   
--   <a>$sel:id:RevisionEntry'</a>, <a>revisionEntry_id</a> - The unique
--   identifier for the revision.
--   
--   <a>$sel:arn:RevisionEntry'</a>, <a>revisionEntry_arn</a> - The ARN for
--   the revision.
--   
--   <a>$sel:updatedAt:RevisionEntry'</a>, <a>revisionEntry_updatedAt</a> -
--   The date and time that the revision was last updated, in ISO 8601
--   format.
newRevisionEntry :: UTCTime -> Text -> Text -> Text -> UTCTime -> RevisionEntry

-- | Information about the published revision.
--   
--   <i>See:</i> <a>newRevisionPublished</a> smart constructor.
data RevisionPublished
RevisionPublished' :: Text -> RevisionPublished

-- | Create a value of <a>RevisionPublished</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataSetId:RevisionPublished'</a>,
--   <a>revisionPublished_dataSetId</a> - The data set ID of the published
--   revision.
newRevisionPublished :: Text -> RevisionPublished

-- | The S3 object that is the asset.
--   
--   <i>See:</i> <a>newS3SnapshotAsset</a> smart constructor.
data S3SnapshotAsset
S3SnapshotAsset' :: Double -> S3SnapshotAsset

-- | Create a value of <a>S3SnapshotAsset</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:size:S3SnapshotAsset'</a>, <a>s3SnapshotAsset_size</a> - The
--   size of the S3 object that is the object.
newS3SnapshotAsset :: Double -> S3SnapshotAsset
