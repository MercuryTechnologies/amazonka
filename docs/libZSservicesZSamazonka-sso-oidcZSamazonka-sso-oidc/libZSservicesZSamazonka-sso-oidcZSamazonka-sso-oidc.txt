-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-sso-oidcZSamazonka-sso-oidc
@version 2.0


module Network.AWS.SSOOIDC.Types

-- | API version <tt>2019-06-10</tt> of the Amazon SSO OIDC SDK
--   configuration.
defaultService :: Service

-- | You do not have sufficient access to perform this action.
_AccessDeniedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that something is wrong with the input to the request. For
--   example, a required parameter might be missing or out of range.
_InvalidRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that the scope provided in the request is invalid.
_InvalidScopeException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that the grant type in the request is not supported by the
--   service.
_UnsupportedGrantTypeException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that the <tt>clientId</tt> or <tt>clientSecret</tt> in the
--   request is invalid. For example, this can occur when a client sends an
--   incorrect <tt>clientId</tt> or an expired <tt>clientSecret</tt>.
_InvalidClientException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that the client information sent in the request during
--   registration is invalid.
_InvalidClientMetadataException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that the client is not currently authorized to make the
--   request. This can happen when a <tt>clientId</tt> is not issued for a
--   public client.
_UnauthorizedClientException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that the client is making the request too frequently and is
--   more than the service can handle.
_SlowDownException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that an error from the service occurred while trying to
--   process a request.
_InternalServerException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that a request contains an invalid grant. This can occur if
--   a client makes a CreateToken request with an invalid grant type.
_InvalidGrantException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that a request to authorize a client with an access user
--   session token is pending.
_AuthorizationPendingException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that the token issued by the service is expired and is no
--   longer valid.
_ExpiredTokenException :: AsError a => Getting (First ServiceError) a ServiceError


-- | Initiates device authorization by requesting a pair of verification
--   codes from the authorization service.
module Network.AWS.SSOOIDC.StartDeviceAuthorization

-- | <i>See:</i> <a>newStartDeviceAuthorization</a> smart constructor.
data StartDeviceAuthorization
StartDeviceAuthorization' :: Text -> Text -> Text -> StartDeviceAuthorization

-- | The unique identifier string for the client that is registered with
--   AWS SSO. This value should come from the persisted result of the
--   RegisterClient API operation.
[$sel:clientId:StartDeviceAuthorization'] :: StartDeviceAuthorization -> Text

-- | A secret string that is generated for the client. This value should
--   come from the persisted result of the RegisterClient API operation.
[$sel:clientSecret:StartDeviceAuthorization'] :: StartDeviceAuthorization -> Text

-- | The URL for the AWS SSO user portal. For more information, see
--   <a>Using the User Portal</a> in the <i>AWS Single Sign-On User
--   Guide</i>.
[$sel:startUrl:StartDeviceAuthorization'] :: StartDeviceAuthorization -> Text

-- | Create a value of <a>StartDeviceAuthorization</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientId:StartDeviceAuthorization'</a>,
--   <a>startDeviceAuthorization_clientId</a> - The unique identifier
--   string for the client that is registered with AWS SSO. This value
--   should come from the persisted result of the RegisterClient API
--   operation.
--   
--   <a>$sel:clientSecret:StartDeviceAuthorization'</a>,
--   <a>startDeviceAuthorization_clientSecret</a> - A secret string that is
--   generated for the client. This value should come from the persisted
--   result of the RegisterClient API operation.
--   
--   <a>$sel:startUrl:StartDeviceAuthorization'</a>,
--   <a>startDeviceAuthorization_startUrl</a> - The URL for the AWS SSO
--   user portal. For more information, see <a>Using the User Portal</a> in
--   the <i>AWS Single Sign-On User Guide</i>.
newStartDeviceAuthorization :: Text -> Text -> Text -> StartDeviceAuthorization

-- | The unique identifier string for the client that is registered with
--   AWS SSO. This value should come from the persisted result of the
--   RegisterClient API operation.
startDeviceAuthorization_clientId :: Lens' StartDeviceAuthorization Text

-- | A secret string that is generated for the client. This value should
--   come from the persisted result of the RegisterClient API operation.
startDeviceAuthorization_clientSecret :: Lens' StartDeviceAuthorization Text

-- | The URL for the AWS SSO user portal. For more information, see
--   <a>Using the User Portal</a> in the <i>AWS Single Sign-On User
--   Guide</i>.
startDeviceAuthorization_startUrl :: Lens' StartDeviceAuthorization Text

-- | <i>See:</i> <a>newStartDeviceAuthorizationResponse</a> smart
--   constructor.
data StartDeviceAuthorizationResponse
StartDeviceAuthorizationResponse' :: Maybe Text -> Maybe Int -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> StartDeviceAuthorizationResponse

-- | A one-time user verification code. This is needed to authorize an
--   in-use device.
[$sel:userCode:StartDeviceAuthorizationResponse'] :: StartDeviceAuthorizationResponse -> Maybe Text

-- | Indicates the number of seconds the client must wait between attempts
--   when polling for a session.
[$sel:interval:StartDeviceAuthorizationResponse'] :: StartDeviceAuthorizationResponse -> Maybe Int

-- | Indicates the number of seconds in which the verification code will
--   become invalid.
[$sel:expiresIn:StartDeviceAuthorizationResponse'] :: StartDeviceAuthorizationResponse -> Maybe Int

-- | The URI of the verification page that takes the <tt>userCode</tt> to
--   authorize the device.
[$sel:verificationUri:StartDeviceAuthorizationResponse'] :: StartDeviceAuthorizationResponse -> Maybe Text

-- | The short-lived code that is used by the device when polling for a
--   session token.
[$sel:deviceCode:StartDeviceAuthorizationResponse'] :: StartDeviceAuthorizationResponse -> Maybe Text

-- | An alternate URL that the client can use to automatically launch a
--   browser. This process skips the manual step in which the user visits
--   the verification page and enters their code.
[$sel:verificationUriComplete:StartDeviceAuthorizationResponse'] :: StartDeviceAuthorizationResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:StartDeviceAuthorizationResponse'] :: StartDeviceAuthorizationResponse -> Int

-- | Create a value of <a>StartDeviceAuthorizationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userCode:StartDeviceAuthorizationResponse'</a>,
--   <a>startDeviceAuthorizationResponse_userCode</a> - A one-time user
--   verification code. This is needed to authorize an in-use device.
--   
--   <a>$sel:interval:StartDeviceAuthorizationResponse'</a>,
--   <a>startDeviceAuthorizationResponse_interval</a> - Indicates the
--   number of seconds the client must wait between attempts when polling
--   for a session.
--   
--   <a>$sel:expiresIn:StartDeviceAuthorizationResponse'</a>,
--   <a>startDeviceAuthorizationResponse_expiresIn</a> - Indicates the
--   number of seconds in which the verification code will become invalid.
--   
--   <a>$sel:verificationUri:StartDeviceAuthorizationResponse'</a>,
--   <a>startDeviceAuthorizationResponse_verificationUri</a> - The URI of
--   the verification page that takes the <tt>userCode</tt> to authorize
--   the device.
--   
--   <a>$sel:deviceCode:StartDeviceAuthorizationResponse'</a>,
--   <a>startDeviceAuthorizationResponse_deviceCode</a> - The short-lived
--   code that is used by the device when polling for a session token.
--   
--   <a>$sel:verificationUriComplete:StartDeviceAuthorizationResponse'</a>,
--   <a>startDeviceAuthorizationResponse_verificationUriComplete</a> - An
--   alternate URL that the client can use to automatically launch a
--   browser. This process skips the manual step in which the user visits
--   the verification page and enters their code.
--   
--   <a>$sel:httpStatus:StartDeviceAuthorizationResponse'</a>,
--   <a>startDeviceAuthorizationResponse_httpStatus</a> - The response's
--   http status code.
newStartDeviceAuthorizationResponse :: Int -> StartDeviceAuthorizationResponse

-- | A one-time user verification code. This is needed to authorize an
--   in-use device.
startDeviceAuthorizationResponse_userCode :: Lens' StartDeviceAuthorizationResponse (Maybe Text)

-- | Indicates the number of seconds the client must wait between attempts
--   when polling for a session.
startDeviceAuthorizationResponse_interval :: Lens' StartDeviceAuthorizationResponse (Maybe Int)

-- | Indicates the number of seconds in which the verification code will
--   become invalid.
startDeviceAuthorizationResponse_expiresIn :: Lens' StartDeviceAuthorizationResponse (Maybe Int)

-- | The URI of the verification page that takes the <tt>userCode</tt> to
--   authorize the device.
startDeviceAuthorizationResponse_verificationUri :: Lens' StartDeviceAuthorizationResponse (Maybe Text)

-- | The short-lived code that is used by the device when polling for a
--   session token.
startDeviceAuthorizationResponse_deviceCode :: Lens' StartDeviceAuthorizationResponse (Maybe Text)

-- | An alternate URL that the client can use to automatically launch a
--   browser. This process skips the manual step in which the user visits
--   the verification page and enters their code.
startDeviceAuthorizationResponse_verificationUriComplete :: Lens' StartDeviceAuthorizationResponse (Maybe Text)

-- | The response's http status code.
startDeviceAuthorizationResponse_httpStatus :: Lens' StartDeviceAuthorizationResponse Int
instance GHC.Generics.Generic Network.AWS.SSOOIDC.StartDeviceAuthorization.StartDeviceAuthorization
instance GHC.Show.Show Network.AWS.SSOOIDC.StartDeviceAuthorization.StartDeviceAuthorization
instance GHC.Read.Read Network.AWS.SSOOIDC.StartDeviceAuthorization.StartDeviceAuthorization
instance GHC.Classes.Eq Network.AWS.SSOOIDC.StartDeviceAuthorization.StartDeviceAuthorization
instance GHC.Generics.Generic Network.AWS.SSOOIDC.StartDeviceAuthorization.StartDeviceAuthorizationResponse
instance GHC.Show.Show Network.AWS.SSOOIDC.StartDeviceAuthorization.StartDeviceAuthorizationResponse
instance GHC.Read.Read Network.AWS.SSOOIDC.StartDeviceAuthorization.StartDeviceAuthorizationResponse
instance GHC.Classes.Eq Network.AWS.SSOOIDC.StartDeviceAuthorization.StartDeviceAuthorizationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SSOOIDC.StartDeviceAuthorization.StartDeviceAuthorization
instance Control.DeepSeq.NFData Network.AWS.SSOOIDC.StartDeviceAuthorization.StartDeviceAuthorizationResponse
instance Data.Hashable.Class.Hashable Network.AWS.SSOOIDC.StartDeviceAuthorization.StartDeviceAuthorization
instance Control.DeepSeq.NFData Network.AWS.SSOOIDC.StartDeviceAuthorization.StartDeviceAuthorization
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SSOOIDC.StartDeviceAuthorization.StartDeviceAuthorization
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.SSOOIDC.StartDeviceAuthorization.StartDeviceAuthorization
instance Network.AWS.Data.Path.ToPath Network.AWS.SSOOIDC.StartDeviceAuthorization.StartDeviceAuthorization
instance Network.AWS.Data.Query.ToQuery Network.AWS.SSOOIDC.StartDeviceAuthorization.StartDeviceAuthorization


-- | Registers a client with AWS SSO. This allows clients to initiate
--   device authorization. The output should be persisted for reuse through
--   many authentication requests.
module Network.AWS.SSOOIDC.RegisterClient

-- | <i>See:</i> <a>newRegisterClient</a> smart constructor.
data RegisterClient
RegisterClient' :: Maybe [Text] -> Text -> Text -> RegisterClient

-- | The list of scopes that are defined by the client. Upon authorization,
--   this list is used to restrict permissions when granting an access
--   token.
[$sel:scopes:RegisterClient'] :: RegisterClient -> Maybe [Text]

-- | The friendly name of the client.
[$sel:clientName:RegisterClient'] :: RegisterClient -> Text

-- | The type of client. The service supports only <tt>public</tt> as a
--   client type. Anything other than public will be rejected by the
--   service.
[$sel:clientType:RegisterClient'] :: RegisterClient -> Text

-- | Create a value of <a>RegisterClient</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:scopes:RegisterClient'</a>, <a>registerClient_scopes</a> - The
--   list of scopes that are defined by the client. Upon authorization,
--   this list is used to restrict permissions when granting an access
--   token.
--   
--   <a>$sel:clientName:RegisterClient'</a>,
--   <a>registerClient_clientName</a> - The friendly name of the client.
--   
--   <a>$sel:clientType:RegisterClient'</a>,
--   <a>registerClient_clientType</a> - The type of client. The service
--   supports only <tt>public</tt> as a client type. Anything other than
--   public will be rejected by the service.
newRegisterClient :: Text -> Text -> RegisterClient

-- | The list of scopes that are defined by the client. Upon authorization,
--   this list is used to restrict permissions when granting an access
--   token.
registerClient_scopes :: Lens' RegisterClient (Maybe [Text])

-- | The friendly name of the client.
registerClient_clientName :: Lens' RegisterClient Text

-- | The type of client. The service supports only <tt>public</tt> as a
--   client type. Anything other than public will be rejected by the
--   service.
registerClient_clientType :: Lens' RegisterClient Text

-- | <i>See:</i> <a>newRegisterClientResponse</a> smart constructor.
data RegisterClientResponse
RegisterClientResponse' :: Maybe Text -> Maybe Text -> Maybe Integer -> Maybe Integer -> Maybe Text -> Maybe Text -> Int -> RegisterClientResponse

-- | The unique identifier string for each client. This client uses this
--   identifier to get authenticated by the service in subsequent calls.
[$sel:clientId:RegisterClientResponse'] :: RegisterClientResponse -> Maybe Text

-- | A secret string generated for the client. The client will use this
--   string to get authenticated by the service in subsequent calls.
[$sel:clientSecret:RegisterClientResponse'] :: RegisterClientResponse -> Maybe Text

-- | Indicates the time at which the <tt>clientId</tt> and
--   <tt>clientSecret</tt> were issued.
[$sel:clientIdIssuedAt:RegisterClientResponse'] :: RegisterClientResponse -> Maybe Integer

-- | Indicates the time at which the <tt>clientId</tt> and
--   <tt>clientSecret</tt> will become invalid.
[$sel:clientSecretExpiresAt:RegisterClientResponse'] :: RegisterClientResponse -> Maybe Integer

-- | The endpoint where the client can get an access token.
[$sel:tokenEndpoint:RegisterClientResponse'] :: RegisterClientResponse -> Maybe Text

-- | The endpoint where the client can request authorization.
[$sel:authorizationEndpoint:RegisterClientResponse'] :: RegisterClientResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:RegisterClientResponse'] :: RegisterClientResponse -> Int

-- | Create a value of <a>RegisterClientResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientId:RegisterClientResponse'</a>,
--   <a>registerClientResponse_clientId</a> - The unique identifier string
--   for each client. This client uses this identifier to get authenticated
--   by the service in subsequent calls.
--   
--   <a>$sel:clientSecret:RegisterClientResponse'</a>,
--   <a>registerClientResponse_clientSecret</a> - A secret string generated
--   for the client. The client will use this string to get authenticated
--   by the service in subsequent calls.
--   
--   <a>$sel:clientIdIssuedAt:RegisterClientResponse'</a>,
--   <a>registerClientResponse_clientIdIssuedAt</a> - Indicates the time at
--   which the <tt>clientId</tt> and <tt>clientSecret</tt> were issued.
--   
--   <a>$sel:clientSecretExpiresAt:RegisterClientResponse'</a>,
--   <a>registerClientResponse_clientSecretExpiresAt</a> - Indicates the
--   time at which the <tt>clientId</tt> and <tt>clientSecret</tt> will
--   become invalid.
--   
--   <a>$sel:tokenEndpoint:RegisterClientResponse'</a>,
--   <a>registerClientResponse_tokenEndpoint</a> - The endpoint where the
--   client can get an access token.
--   
--   <a>$sel:authorizationEndpoint:RegisterClientResponse'</a>,
--   <a>registerClientResponse_authorizationEndpoint</a> - The endpoint
--   where the client can request authorization.
--   
--   <a>$sel:httpStatus:RegisterClientResponse'</a>,
--   <a>registerClientResponse_httpStatus</a> - The response's http status
--   code.
newRegisterClientResponse :: Int -> RegisterClientResponse

-- | The unique identifier string for each client. This client uses this
--   identifier to get authenticated by the service in subsequent calls.
registerClientResponse_clientId :: Lens' RegisterClientResponse (Maybe Text)

-- | A secret string generated for the client. The client will use this
--   string to get authenticated by the service in subsequent calls.
registerClientResponse_clientSecret :: Lens' RegisterClientResponse (Maybe Text)

-- | Indicates the time at which the <tt>clientId</tt> and
--   <tt>clientSecret</tt> were issued.
registerClientResponse_clientIdIssuedAt :: Lens' RegisterClientResponse (Maybe Integer)

-- | Indicates the time at which the <tt>clientId</tt> and
--   <tt>clientSecret</tt> will become invalid.
registerClientResponse_clientSecretExpiresAt :: Lens' RegisterClientResponse (Maybe Integer)

-- | The endpoint where the client can get an access token.
registerClientResponse_tokenEndpoint :: Lens' RegisterClientResponse (Maybe Text)

-- | The endpoint where the client can request authorization.
registerClientResponse_authorizationEndpoint :: Lens' RegisterClientResponse (Maybe Text)

-- | The response's http status code.
registerClientResponse_httpStatus :: Lens' RegisterClientResponse Int
instance GHC.Generics.Generic Network.AWS.SSOOIDC.RegisterClient.RegisterClient
instance GHC.Show.Show Network.AWS.SSOOIDC.RegisterClient.RegisterClient
instance GHC.Read.Read Network.AWS.SSOOIDC.RegisterClient.RegisterClient
instance GHC.Classes.Eq Network.AWS.SSOOIDC.RegisterClient.RegisterClient
instance GHC.Generics.Generic Network.AWS.SSOOIDC.RegisterClient.RegisterClientResponse
instance GHC.Show.Show Network.AWS.SSOOIDC.RegisterClient.RegisterClientResponse
instance GHC.Read.Read Network.AWS.SSOOIDC.RegisterClient.RegisterClientResponse
instance GHC.Classes.Eq Network.AWS.SSOOIDC.RegisterClient.RegisterClientResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SSOOIDC.RegisterClient.RegisterClient
instance Control.DeepSeq.NFData Network.AWS.SSOOIDC.RegisterClient.RegisterClientResponse
instance Data.Hashable.Class.Hashable Network.AWS.SSOOIDC.RegisterClient.RegisterClient
instance Control.DeepSeq.NFData Network.AWS.SSOOIDC.RegisterClient.RegisterClient
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SSOOIDC.RegisterClient.RegisterClient
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.SSOOIDC.RegisterClient.RegisterClient
instance Network.AWS.Data.Path.ToPath Network.AWS.SSOOIDC.RegisterClient.RegisterClient
instance Network.AWS.Data.Query.ToQuery Network.AWS.SSOOIDC.RegisterClient.RegisterClient


-- | Creates and returns an access token for the authorized client. The
--   access token issued will be used to fetch short-term credentials for
--   the assigned roles in the AWS account.
module Network.AWS.SSOOIDC.CreateToken

-- | <i>See:</i> <a>newCreateToken</a> smart constructor.
data CreateToken
CreateToken' :: Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe Text -> Text -> Text -> Text -> Text -> CreateToken

-- | The location of the application that will receive the authorization
--   code. Users authorize the service to send the request to this
--   location.
[$sel:redirectUri:CreateToken'] :: CreateToken -> Maybe Text

-- | The token used to obtain an access token in the event that the access
--   token is invalid or expired. This token is not issued by the service.
[$sel:refreshToken:CreateToken'] :: CreateToken -> Maybe Text

-- | The list of scopes that is defined by the client. Upon authorization,
--   this list is used to restrict permissions when granting an access
--   token.
[$sel:scope:CreateToken'] :: CreateToken -> Maybe [Text]

-- | The authorization code received from the authorization service. This
--   parameter is required to perform an authorization grant request to get
--   access to a token.
[$sel:code:CreateToken'] :: CreateToken -> Maybe Text

-- | The unique identifier string for each client. This value should come
--   from the persisted result of the RegisterClient API.
[$sel:clientId:CreateToken'] :: CreateToken -> Text

-- | A secret string generated for the client. This value should come from
--   the persisted result of the RegisterClient API.
[$sel:clientSecret:CreateToken'] :: CreateToken -> Text

-- | Supports grant types for authorization code, refresh token, and device
--   code request.
[$sel:grantType:CreateToken'] :: CreateToken -> Text

-- | Used only when calling this API for the device code grant type. This
--   short-term code is used to identify this authentication attempt. This
--   should come from an in-memory reference to the result of the
--   StartDeviceAuthorization API.
[$sel:deviceCode:CreateToken'] :: CreateToken -> Text

-- | Create a value of <a>CreateToken</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:redirectUri:CreateToken'</a>, <a>createToken_redirectUri</a> -
--   The location of the application that will receive the authorization
--   code. Users authorize the service to send the request to this
--   location.
--   
--   <a>$sel:refreshToken:CreateToken'</a>, <a>createToken_refreshToken</a>
--   - The token used to obtain an access token in the event that the
--   access token is invalid or expired. This token is not issued by the
--   service.
--   
--   <a>$sel:scope:CreateToken'</a>, <a>createToken_scope</a> - The list of
--   scopes that is defined by the client. Upon authorization, this list is
--   used to restrict permissions when granting an access token.
--   
--   <a>$sel:code:CreateToken'</a>, <a>createToken_code</a> - The
--   authorization code received from the authorization service. This
--   parameter is required to perform an authorization grant request to get
--   access to a token.
--   
--   <a>$sel:clientId:CreateToken'</a>, <a>createToken_clientId</a> - The
--   unique identifier string for each client. This value should come from
--   the persisted result of the RegisterClient API.
--   
--   <a>$sel:clientSecret:CreateToken'</a>, <a>createToken_clientSecret</a>
--   - A secret string generated for the client. This value should come
--   from the persisted result of the RegisterClient API.
--   
--   <a>$sel:grantType:CreateToken'</a>, <a>createToken_grantType</a> -
--   Supports grant types for authorization code, refresh token, and device
--   code request.
--   
--   <a>$sel:deviceCode:CreateToken'</a>, <a>createToken_deviceCode</a> -
--   Used only when calling this API for the device code grant type. This
--   short-term code is used to identify this authentication attempt. This
--   should come from an in-memory reference to the result of the
--   StartDeviceAuthorization API.
newCreateToken :: Text -> Text -> Text -> Text -> CreateToken

-- | The location of the application that will receive the authorization
--   code. Users authorize the service to send the request to this
--   location.
createToken_redirectUri :: Lens' CreateToken (Maybe Text)

-- | The token used to obtain an access token in the event that the access
--   token is invalid or expired. This token is not issued by the service.
createToken_refreshToken :: Lens' CreateToken (Maybe Text)

-- | The list of scopes that is defined by the client. Upon authorization,
--   this list is used to restrict permissions when granting an access
--   token.
createToken_scope :: Lens' CreateToken (Maybe [Text])

-- | The authorization code received from the authorization service. This
--   parameter is required to perform an authorization grant request to get
--   access to a token.
createToken_code :: Lens' CreateToken (Maybe Text)

-- | The unique identifier string for each client. This value should come
--   from the persisted result of the RegisterClient API.
createToken_clientId :: Lens' CreateToken Text

-- | A secret string generated for the client. This value should come from
--   the persisted result of the RegisterClient API.
createToken_clientSecret :: Lens' CreateToken Text

-- | Supports grant types for authorization code, refresh token, and device
--   code request.
createToken_grantType :: Lens' CreateToken Text

-- | Used only when calling this API for the device code grant type. This
--   short-term code is used to identify this authentication attempt. This
--   should come from an in-memory reference to the result of the
--   StartDeviceAuthorization API.
createToken_deviceCode :: Lens' CreateToken Text

-- | <i>See:</i> <a>newCreateTokenResponse</a> smart constructor.
data CreateTokenResponse
CreateTokenResponse' :: Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Int -> CreateTokenResponse

-- | An opaque token to access AWS SSO resources assigned to a user.
[$sel:accessToken:CreateTokenResponse'] :: CreateTokenResponse -> Maybe Text

-- | A token that, if present, can be used to refresh a previously issued
--   access token that might have expired.
[$sel:refreshToken:CreateTokenResponse'] :: CreateTokenResponse -> Maybe Text

-- | Indicates the time in seconds when an access token will expire.
[$sel:expiresIn:CreateTokenResponse'] :: CreateTokenResponse -> Maybe Int

-- | Used to notify the client that the returned token is an access token.
--   The supported type is <tt>BearerToken</tt>.
[$sel:tokenType:CreateTokenResponse'] :: CreateTokenResponse -> Maybe Text

-- | The identifier of the user that associated with the access token, if
--   present.
[$sel:idToken:CreateTokenResponse'] :: CreateTokenResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateTokenResponse'] :: CreateTokenResponse -> Int

-- | Create a value of <a>CreateTokenResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accessToken:CreateTokenResponse'</a>,
--   <a>createTokenResponse_accessToken</a> - An opaque token to access AWS
--   SSO resources assigned to a user.
--   
--   <a>$sel:refreshToken:CreateToken'</a>,
--   <a>createTokenResponse_refreshToken</a> - A token that, if present,
--   can be used to refresh a previously issued access token that might
--   have expired.
--   
--   <a>$sel:expiresIn:CreateTokenResponse'</a>,
--   <a>createTokenResponse_expiresIn</a> - Indicates the time in seconds
--   when an access token will expire.
--   
--   <a>$sel:tokenType:CreateTokenResponse'</a>,
--   <a>createTokenResponse_tokenType</a> - Used to notify the client that
--   the returned token is an access token. The supported type is
--   <tt>BearerToken</tt>.
--   
--   <a>$sel:idToken:CreateTokenResponse'</a>,
--   <a>createTokenResponse_idToken</a> - The identifier of the user that
--   associated with the access token, if present.
--   
--   <a>$sel:httpStatus:CreateTokenResponse'</a>,
--   <a>createTokenResponse_httpStatus</a> - The response's http status
--   code.
newCreateTokenResponse :: Int -> CreateTokenResponse

-- | An opaque token to access AWS SSO resources assigned to a user.
createTokenResponse_accessToken :: Lens' CreateTokenResponse (Maybe Text)

-- | A token that, if present, can be used to refresh a previously issued
--   access token that might have expired.
createTokenResponse_refreshToken :: Lens' CreateTokenResponse (Maybe Text)

-- | Indicates the time in seconds when an access token will expire.
createTokenResponse_expiresIn :: Lens' CreateTokenResponse (Maybe Int)

-- | Used to notify the client that the returned token is an access token.
--   The supported type is <tt>BearerToken</tt>.
createTokenResponse_tokenType :: Lens' CreateTokenResponse (Maybe Text)

-- | The identifier of the user that associated with the access token, if
--   present.
createTokenResponse_idToken :: Lens' CreateTokenResponse (Maybe Text)

-- | The response's http status code.
createTokenResponse_httpStatus :: Lens' CreateTokenResponse Int
instance GHC.Generics.Generic Network.AWS.SSOOIDC.CreateToken.CreateToken
instance GHC.Show.Show Network.AWS.SSOOIDC.CreateToken.CreateToken
instance GHC.Read.Read Network.AWS.SSOOIDC.CreateToken.CreateToken
instance GHC.Classes.Eq Network.AWS.SSOOIDC.CreateToken.CreateToken
instance GHC.Generics.Generic Network.AWS.SSOOIDC.CreateToken.CreateTokenResponse
instance GHC.Show.Show Network.AWS.SSOOIDC.CreateToken.CreateTokenResponse
instance GHC.Read.Read Network.AWS.SSOOIDC.CreateToken.CreateTokenResponse
instance GHC.Classes.Eq Network.AWS.SSOOIDC.CreateToken.CreateTokenResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SSOOIDC.CreateToken.CreateToken
instance Control.DeepSeq.NFData Network.AWS.SSOOIDC.CreateToken.CreateTokenResponse
instance Data.Hashable.Class.Hashable Network.AWS.SSOOIDC.CreateToken.CreateToken
instance Control.DeepSeq.NFData Network.AWS.SSOOIDC.CreateToken.CreateToken
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SSOOIDC.CreateToken.CreateToken
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.SSOOIDC.CreateToken.CreateToken
instance Network.AWS.Data.Path.ToPath Network.AWS.SSOOIDC.CreateToken.CreateToken
instance Network.AWS.Data.Query.ToQuery Network.AWS.SSOOIDC.CreateToken.CreateToken


module Network.AWS.SSOOIDC.Lens

-- | The unique identifier string for the client that is registered with
--   AWS SSO. This value should come from the persisted result of the
--   RegisterClient API operation.
startDeviceAuthorization_clientId :: Lens' StartDeviceAuthorization Text

-- | A secret string that is generated for the client. This value should
--   come from the persisted result of the RegisterClient API operation.
startDeviceAuthorization_clientSecret :: Lens' StartDeviceAuthorization Text

-- | The URL for the AWS SSO user portal. For more information, see
--   <a>Using the User Portal</a> in the <i>AWS Single Sign-On User
--   Guide</i>.
startDeviceAuthorization_startUrl :: Lens' StartDeviceAuthorization Text

-- | A one-time user verification code. This is needed to authorize an
--   in-use device.
startDeviceAuthorizationResponse_userCode :: Lens' StartDeviceAuthorizationResponse (Maybe Text)

-- | Indicates the number of seconds the client must wait between attempts
--   when polling for a session.
startDeviceAuthorizationResponse_interval :: Lens' StartDeviceAuthorizationResponse (Maybe Int)

-- | Indicates the number of seconds in which the verification code will
--   become invalid.
startDeviceAuthorizationResponse_expiresIn :: Lens' StartDeviceAuthorizationResponse (Maybe Int)

-- | The URI of the verification page that takes the <tt>userCode</tt> to
--   authorize the device.
startDeviceAuthorizationResponse_verificationUri :: Lens' StartDeviceAuthorizationResponse (Maybe Text)

-- | The short-lived code that is used by the device when polling for a
--   session token.
startDeviceAuthorizationResponse_deviceCode :: Lens' StartDeviceAuthorizationResponse (Maybe Text)

-- | An alternate URL that the client can use to automatically launch a
--   browser. This process skips the manual step in which the user visits
--   the verification page and enters their code.
startDeviceAuthorizationResponse_verificationUriComplete :: Lens' StartDeviceAuthorizationResponse (Maybe Text)

-- | The response's http status code.
startDeviceAuthorizationResponse_httpStatus :: Lens' StartDeviceAuthorizationResponse Int

-- | The location of the application that will receive the authorization
--   code. Users authorize the service to send the request to this
--   location.
createToken_redirectUri :: Lens' CreateToken (Maybe Text)

-- | The token used to obtain an access token in the event that the access
--   token is invalid or expired. This token is not issued by the service.
createToken_refreshToken :: Lens' CreateToken (Maybe Text)

-- | The list of scopes that is defined by the client. Upon authorization,
--   this list is used to restrict permissions when granting an access
--   token.
createToken_scope :: Lens' CreateToken (Maybe [Text])

-- | The authorization code received from the authorization service. This
--   parameter is required to perform an authorization grant request to get
--   access to a token.
createToken_code :: Lens' CreateToken (Maybe Text)

-- | The unique identifier string for each client. This value should come
--   from the persisted result of the RegisterClient API.
createToken_clientId :: Lens' CreateToken Text

-- | A secret string generated for the client. This value should come from
--   the persisted result of the RegisterClient API.
createToken_clientSecret :: Lens' CreateToken Text

-- | Supports grant types for authorization code, refresh token, and device
--   code request.
createToken_grantType :: Lens' CreateToken Text

-- | Used only when calling this API for the device code grant type. This
--   short-term code is used to identify this authentication attempt. This
--   should come from an in-memory reference to the result of the
--   StartDeviceAuthorization API.
createToken_deviceCode :: Lens' CreateToken Text

-- | An opaque token to access AWS SSO resources assigned to a user.
createTokenResponse_accessToken :: Lens' CreateTokenResponse (Maybe Text)

-- | A token that, if present, can be used to refresh a previously issued
--   access token that might have expired.
createTokenResponse_refreshToken :: Lens' CreateTokenResponse (Maybe Text)

-- | Indicates the time in seconds when an access token will expire.
createTokenResponse_expiresIn :: Lens' CreateTokenResponse (Maybe Int)

-- | Used to notify the client that the returned token is an access token.
--   The supported type is <tt>BearerToken</tt>.
createTokenResponse_tokenType :: Lens' CreateTokenResponse (Maybe Text)

-- | The identifier of the user that associated with the access token, if
--   present.
createTokenResponse_idToken :: Lens' CreateTokenResponse (Maybe Text)

-- | The response's http status code.
createTokenResponse_httpStatus :: Lens' CreateTokenResponse Int

-- | The list of scopes that are defined by the client. Upon authorization,
--   this list is used to restrict permissions when granting an access
--   token.
registerClient_scopes :: Lens' RegisterClient (Maybe [Text])

-- | The friendly name of the client.
registerClient_clientName :: Lens' RegisterClient Text

-- | The type of client. The service supports only <tt>public</tt> as a
--   client type. Anything other than public will be rejected by the
--   service.
registerClient_clientType :: Lens' RegisterClient Text

-- | The unique identifier string for each client. This client uses this
--   identifier to get authenticated by the service in subsequent calls.
registerClientResponse_clientId :: Lens' RegisterClientResponse (Maybe Text)

-- | A secret string generated for the client. The client will use this
--   string to get authenticated by the service in subsequent calls.
registerClientResponse_clientSecret :: Lens' RegisterClientResponse (Maybe Text)

-- | Indicates the time at which the <tt>clientId</tt> and
--   <tt>clientSecret</tt> were issued.
registerClientResponse_clientIdIssuedAt :: Lens' RegisterClientResponse (Maybe Integer)

-- | Indicates the time at which the <tt>clientId</tt> and
--   <tt>clientSecret</tt> will become invalid.
registerClientResponse_clientSecretExpiresAt :: Lens' RegisterClientResponse (Maybe Integer)

-- | The endpoint where the client can get an access token.
registerClientResponse_tokenEndpoint :: Lens' RegisterClientResponse (Maybe Text)

-- | The endpoint where the client can request authorization.
registerClientResponse_authorizationEndpoint :: Lens' RegisterClientResponse (Maybe Text)

-- | The response's http status code.
registerClientResponse_httpStatus :: Lens' RegisterClientResponse Int


module Network.AWS.SSOOIDC.Waiters


-- | Derived from API version <tt>2019-06-10</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   AWS Single Sign-On (SSO) OpenID Connect (OIDC) is a web service that
--   enables a client (such as AWS CLI or a native application) to register
--   with AWS SSO. The service also enables the client to fetch the user’s
--   access token upon successful authentication and authorization with AWS
--   SSO. This service conforms with the OAuth 2.0 based implementation of
--   the device authorization grant standard
--   (<a>https://tools.ietf.org/html/rfc8628</a>).
--   
--   For general information about AWS SSO, see <a>What is AWS Single
--   Sign-On?</a> in the <i>AWS SSO User Guide</i>.
--   
--   This API reference guide describes the AWS SSO OIDC operations that
--   you can call programatically and includes detailed information on data
--   types and errors.
--   
--   AWS provides SDKs that consist of libraries and sample code for
--   various programming languages and platforms such as Java, Ruby, .Net,
--   iOS, and Android. The SDKs provide a convenient way to create
--   programmatic access to AWS SSO and other AWS services. For more
--   information about the AWS SDKs, including how to download and install
--   them, see <a>Tools for Amazon Web Services</a>.
module Network.AWS.SSOOIDC

-- | API version <tt>2019-06-10</tt> of the Amazon SSO OIDC SDK
--   configuration.
defaultService :: Service

-- | You do not have sufficient access to perform this action.
_AccessDeniedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that something is wrong with the input to the request. For
--   example, a required parameter might be missing or out of range.
_InvalidRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that the scope provided in the request is invalid.
_InvalidScopeException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that the grant type in the request is not supported by the
--   service.
_UnsupportedGrantTypeException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that the <tt>clientId</tt> or <tt>clientSecret</tt> in the
--   request is invalid. For example, this can occur when a client sends an
--   incorrect <tt>clientId</tt> or an expired <tt>clientSecret</tt>.
_InvalidClientException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that the client information sent in the request during
--   registration is invalid.
_InvalidClientMetadataException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that the client is not currently authorized to make the
--   request. This can happen when a <tt>clientId</tt> is not issued for a
--   public client.
_UnauthorizedClientException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that the client is making the request too frequently and is
--   more than the service can handle.
_SlowDownException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that an error from the service occurred while trying to
--   process a request.
_InternalServerException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that a request contains an invalid grant. This can occur if
--   a client makes a CreateToken request with an invalid grant type.
_InvalidGrantException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that a request to authorize a client with an access user
--   session token is pending.
_AuthorizationPendingException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that the token issued by the service is expired and is no
--   longer valid.
_ExpiredTokenException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newStartDeviceAuthorization</a> smart constructor.
data StartDeviceAuthorization
StartDeviceAuthorization' :: Text -> Text -> Text -> StartDeviceAuthorization

-- | Create a value of <a>StartDeviceAuthorization</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientId:StartDeviceAuthorization'</a>,
--   <a>startDeviceAuthorization_clientId</a> - The unique identifier
--   string for the client that is registered with AWS SSO. This value
--   should come from the persisted result of the RegisterClient API
--   operation.
--   
--   <a>$sel:clientSecret:StartDeviceAuthorization'</a>,
--   <a>startDeviceAuthorization_clientSecret</a> - A secret string that is
--   generated for the client. This value should come from the persisted
--   result of the RegisterClient API operation.
--   
--   <a>$sel:startUrl:StartDeviceAuthorization'</a>,
--   <a>startDeviceAuthorization_startUrl</a> - The URL for the AWS SSO
--   user portal. For more information, see <a>Using the User Portal</a> in
--   the <i>AWS Single Sign-On User Guide</i>.
newStartDeviceAuthorization :: Text -> Text -> Text -> StartDeviceAuthorization

-- | <i>See:</i> <a>newStartDeviceAuthorizationResponse</a> smart
--   constructor.
data StartDeviceAuthorizationResponse
StartDeviceAuthorizationResponse' :: Maybe Text -> Maybe Int -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> StartDeviceAuthorizationResponse

-- | Create a value of <a>StartDeviceAuthorizationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userCode:StartDeviceAuthorizationResponse'</a>,
--   <a>startDeviceAuthorizationResponse_userCode</a> - A one-time user
--   verification code. This is needed to authorize an in-use device.
--   
--   <a>$sel:interval:StartDeviceAuthorizationResponse'</a>,
--   <a>startDeviceAuthorizationResponse_interval</a> - Indicates the
--   number of seconds the client must wait between attempts when polling
--   for a session.
--   
--   <a>$sel:expiresIn:StartDeviceAuthorizationResponse'</a>,
--   <a>startDeviceAuthorizationResponse_expiresIn</a> - Indicates the
--   number of seconds in which the verification code will become invalid.
--   
--   <a>$sel:verificationUri:StartDeviceAuthorizationResponse'</a>,
--   <a>startDeviceAuthorizationResponse_verificationUri</a> - The URI of
--   the verification page that takes the <tt>userCode</tt> to authorize
--   the device.
--   
--   <a>$sel:deviceCode:StartDeviceAuthorizationResponse'</a>,
--   <a>startDeviceAuthorizationResponse_deviceCode</a> - The short-lived
--   code that is used by the device when polling for a session token.
--   
--   <a>$sel:verificationUriComplete:StartDeviceAuthorizationResponse'</a>,
--   <a>startDeviceAuthorizationResponse_verificationUriComplete</a> - An
--   alternate URL that the client can use to automatically launch a
--   browser. This process skips the manual step in which the user visits
--   the verification page and enters their code.
--   
--   <a>$sel:httpStatus:StartDeviceAuthorizationResponse'</a>,
--   <a>startDeviceAuthorizationResponse_httpStatus</a> - The response's
--   http status code.
newStartDeviceAuthorizationResponse :: Int -> StartDeviceAuthorizationResponse

-- | <i>See:</i> <a>newCreateToken</a> smart constructor.
data CreateToken
CreateToken' :: Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe Text -> Text -> Text -> Text -> Text -> CreateToken

-- | Create a value of <a>CreateToken</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:redirectUri:CreateToken'</a>, <a>createToken_redirectUri</a> -
--   The location of the application that will receive the authorization
--   code. Users authorize the service to send the request to this
--   location.
--   
--   <a>$sel:refreshToken:CreateToken'</a>, <a>createToken_refreshToken</a>
--   - The token used to obtain an access token in the event that the
--   access token is invalid or expired. This token is not issued by the
--   service.
--   
--   <a>$sel:scope:CreateToken'</a>, <a>createToken_scope</a> - The list of
--   scopes that is defined by the client. Upon authorization, this list is
--   used to restrict permissions when granting an access token.
--   
--   <a>$sel:code:CreateToken'</a>, <a>createToken_code</a> - The
--   authorization code received from the authorization service. This
--   parameter is required to perform an authorization grant request to get
--   access to a token.
--   
--   <a>$sel:clientId:CreateToken'</a>, <a>createToken_clientId</a> - The
--   unique identifier string for each client. This value should come from
--   the persisted result of the RegisterClient API.
--   
--   <a>$sel:clientSecret:CreateToken'</a>, <a>createToken_clientSecret</a>
--   - A secret string generated for the client. This value should come
--   from the persisted result of the RegisterClient API.
--   
--   <a>$sel:grantType:CreateToken'</a>, <a>createToken_grantType</a> -
--   Supports grant types for authorization code, refresh token, and device
--   code request.
--   
--   <a>$sel:deviceCode:CreateToken'</a>, <a>createToken_deviceCode</a> -
--   Used only when calling this API for the device code grant type. This
--   short-term code is used to identify this authentication attempt. This
--   should come from an in-memory reference to the result of the
--   StartDeviceAuthorization API.
newCreateToken :: Text -> Text -> Text -> Text -> CreateToken

-- | <i>See:</i> <a>newCreateTokenResponse</a> smart constructor.
data CreateTokenResponse
CreateTokenResponse' :: Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Int -> CreateTokenResponse

-- | Create a value of <a>CreateTokenResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accessToken:CreateTokenResponse'</a>,
--   <a>createTokenResponse_accessToken</a> - An opaque token to access AWS
--   SSO resources assigned to a user.
--   
--   <a>$sel:refreshToken:CreateToken'</a>,
--   <a>createTokenResponse_refreshToken</a> - A token that, if present,
--   can be used to refresh a previously issued access token that might
--   have expired.
--   
--   <a>$sel:expiresIn:CreateTokenResponse'</a>,
--   <a>createTokenResponse_expiresIn</a> - Indicates the time in seconds
--   when an access token will expire.
--   
--   <a>$sel:tokenType:CreateTokenResponse'</a>,
--   <a>createTokenResponse_tokenType</a> - Used to notify the client that
--   the returned token is an access token. The supported type is
--   <tt>BearerToken</tt>.
--   
--   <a>$sel:idToken:CreateTokenResponse'</a>,
--   <a>createTokenResponse_idToken</a> - The identifier of the user that
--   associated with the access token, if present.
--   
--   <a>$sel:httpStatus:CreateTokenResponse'</a>,
--   <a>createTokenResponse_httpStatus</a> - The response's http status
--   code.
newCreateTokenResponse :: Int -> CreateTokenResponse

-- | <i>See:</i> <a>newRegisterClient</a> smart constructor.
data RegisterClient
RegisterClient' :: Maybe [Text] -> Text -> Text -> RegisterClient

-- | Create a value of <a>RegisterClient</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:scopes:RegisterClient'</a>, <a>registerClient_scopes</a> - The
--   list of scopes that are defined by the client. Upon authorization,
--   this list is used to restrict permissions when granting an access
--   token.
--   
--   <a>$sel:clientName:RegisterClient'</a>,
--   <a>registerClient_clientName</a> - The friendly name of the client.
--   
--   <a>$sel:clientType:RegisterClient'</a>,
--   <a>registerClient_clientType</a> - The type of client. The service
--   supports only <tt>public</tt> as a client type. Anything other than
--   public will be rejected by the service.
newRegisterClient :: Text -> Text -> RegisterClient

-- | <i>See:</i> <a>newRegisterClientResponse</a> smart constructor.
data RegisterClientResponse
RegisterClientResponse' :: Maybe Text -> Maybe Text -> Maybe Integer -> Maybe Integer -> Maybe Text -> Maybe Text -> Int -> RegisterClientResponse

-- | Create a value of <a>RegisterClientResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientId:RegisterClientResponse'</a>,
--   <a>registerClientResponse_clientId</a> - The unique identifier string
--   for each client. This client uses this identifier to get authenticated
--   by the service in subsequent calls.
--   
--   <a>$sel:clientSecret:RegisterClientResponse'</a>,
--   <a>registerClientResponse_clientSecret</a> - A secret string generated
--   for the client. The client will use this string to get authenticated
--   by the service in subsequent calls.
--   
--   <a>$sel:clientIdIssuedAt:RegisterClientResponse'</a>,
--   <a>registerClientResponse_clientIdIssuedAt</a> - Indicates the time at
--   which the <tt>clientId</tt> and <tt>clientSecret</tt> were issued.
--   
--   <a>$sel:clientSecretExpiresAt:RegisterClientResponse'</a>,
--   <a>registerClientResponse_clientSecretExpiresAt</a> - Indicates the
--   time at which the <tt>clientId</tt> and <tt>clientSecret</tt> will
--   become invalid.
--   
--   <a>$sel:tokenEndpoint:RegisterClientResponse'</a>,
--   <a>registerClientResponse_tokenEndpoint</a> - The endpoint where the
--   client can get an access token.
--   
--   <a>$sel:authorizationEndpoint:RegisterClientResponse'</a>,
--   <a>registerClientResponse_authorizationEndpoint</a> - The endpoint
--   where the client can request authorization.
--   
--   <a>$sel:httpStatus:RegisterClientResponse'</a>,
--   <a>registerClientResponse_httpStatus</a> - The response's http status
--   code.
newRegisterClientResponse :: Int -> RegisterClientResponse
