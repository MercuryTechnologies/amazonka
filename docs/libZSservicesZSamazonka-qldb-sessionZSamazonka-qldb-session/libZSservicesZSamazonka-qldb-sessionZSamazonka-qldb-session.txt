-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-qldb-sessionZSamazonka-qldb-session
@version 2.0


module Network.AWS.QLDBSession.Types.AbortTransactionRequest

-- | Contains the details of the transaction to abort.
--   
--   <i>See:</i> <a>newAbortTransactionRequest</a> smart constructor.
data AbortTransactionRequest
AbortTransactionRequest' :: AbortTransactionRequest

-- | Create a value of <a>AbortTransactionRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newAbortTransactionRequest :: AbortTransactionRequest
instance GHC.Generics.Generic Network.AWS.QLDBSession.Types.AbortTransactionRequest.AbortTransactionRequest
instance GHC.Show.Show Network.AWS.QLDBSession.Types.AbortTransactionRequest.AbortTransactionRequest
instance GHC.Read.Read Network.AWS.QLDBSession.Types.AbortTransactionRequest.AbortTransactionRequest
instance GHC.Classes.Eq Network.AWS.QLDBSession.Types.AbortTransactionRequest.AbortTransactionRequest
instance Data.Hashable.Class.Hashable Network.AWS.QLDBSession.Types.AbortTransactionRequest.AbortTransactionRequest
instance Control.DeepSeq.NFData Network.AWS.QLDBSession.Types.AbortTransactionRequest.AbortTransactionRequest
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.QLDBSession.Types.AbortTransactionRequest.AbortTransactionRequest


module Network.AWS.QLDBSession.Types.CommitTransactionRequest

-- | Contains the details of the transaction to commit.
--   
--   <i>See:</i> <a>newCommitTransactionRequest</a> smart constructor.
data CommitTransactionRequest
CommitTransactionRequest' :: Text -> Base64 -> CommitTransactionRequest

-- | Specifies the transaction ID of the transaction to commit.
[$sel:transactionId:CommitTransactionRequest'] :: CommitTransactionRequest -> Text

-- | Specifies the commit digest for the transaction to commit. For every
--   active transaction, the commit digest must be passed. QLDB validates
--   <tt>CommitDigest</tt> and rejects the commit with an error if the
--   digest computed on the client does not match the digest computed by
--   QLDB.
--   
--   The purpose of the <tt>CommitDigest</tt> parameter is to ensure that
--   QLDB commits a transaction if and only if the server has processed the
--   exact set of statements sent by the client, in the same order that
--   client sent them, and with no duplicates.
[$sel:commitDigest:CommitTransactionRequest'] :: CommitTransactionRequest -> Base64

-- | Create a value of <a>CommitTransactionRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:transactionId:CommitTransactionRequest'</a>,
--   <a>commitTransactionRequest_transactionId</a> - Specifies the
--   transaction ID of the transaction to commit.
--   
--   <a>$sel:commitDigest:CommitTransactionRequest'</a>,
--   <a>commitTransactionRequest_commitDigest</a> - Specifies the commit
--   digest for the transaction to commit. For every active transaction,
--   the commit digest must be passed. QLDB validates <tt>CommitDigest</tt>
--   and rejects the commit with an error if the digest computed on the
--   client does not match the digest computed by QLDB.
--   
--   The purpose of the <tt>CommitDigest</tt> parameter is to ensure that
--   QLDB commits a transaction if and only if the server has processed the
--   exact set of statements sent by the client, in the same order that
--   client sent them, and with no duplicates.-- -- <i>Note:</i> This
--   <tt>Lens</tt> automatically encodes and decodes Base64 data. -- The
--   underlying isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
newCommitTransactionRequest :: Text -> ByteString -> CommitTransactionRequest

-- | Specifies the transaction ID of the transaction to commit.
commitTransactionRequest_transactionId :: Lens' CommitTransactionRequest Text

-- | Specifies the commit digest for the transaction to commit. For every
--   active transaction, the commit digest must be passed. QLDB validates
--   <tt>CommitDigest</tt> and rejects the commit with an error if the
--   digest computed on the client does not match the digest computed by
--   QLDB.
--   
--   The purpose of the <tt>CommitDigest</tt> parameter is to ensure that
--   QLDB commits a transaction if and only if the server has processed the
--   exact set of statements sent by the client, in the same order that
--   client sent them, and with no duplicates.-- -- <i>Note:</i> This
--   <tt>Lens</tt> automatically encodes and decodes Base64 data. -- The
--   underlying isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
commitTransactionRequest_commitDigest :: Lens' CommitTransactionRequest ByteString
instance GHC.Generics.Generic Network.AWS.QLDBSession.Types.CommitTransactionRequest.CommitTransactionRequest
instance GHC.Show.Show Network.AWS.QLDBSession.Types.CommitTransactionRequest.CommitTransactionRequest
instance GHC.Read.Read Network.AWS.QLDBSession.Types.CommitTransactionRequest.CommitTransactionRequest
instance GHC.Classes.Eq Network.AWS.QLDBSession.Types.CommitTransactionRequest.CommitTransactionRequest
instance Data.Hashable.Class.Hashable Network.AWS.QLDBSession.Types.CommitTransactionRequest.CommitTransactionRequest
instance Control.DeepSeq.NFData Network.AWS.QLDBSession.Types.CommitTransactionRequest.CommitTransactionRequest
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.QLDBSession.Types.CommitTransactionRequest.CommitTransactionRequest


module Network.AWS.QLDBSession.Types.EndSessionRequest

-- | Specifies a request to end the session.
--   
--   <i>See:</i> <a>newEndSessionRequest</a> smart constructor.
data EndSessionRequest
EndSessionRequest' :: EndSessionRequest

-- | Create a value of <a>EndSessionRequest</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newEndSessionRequest :: EndSessionRequest
instance GHC.Generics.Generic Network.AWS.QLDBSession.Types.EndSessionRequest.EndSessionRequest
instance GHC.Show.Show Network.AWS.QLDBSession.Types.EndSessionRequest.EndSessionRequest
instance GHC.Read.Read Network.AWS.QLDBSession.Types.EndSessionRequest.EndSessionRequest
instance GHC.Classes.Eq Network.AWS.QLDBSession.Types.EndSessionRequest.EndSessionRequest
instance Data.Hashable.Class.Hashable Network.AWS.QLDBSession.Types.EndSessionRequest.EndSessionRequest
instance Control.DeepSeq.NFData Network.AWS.QLDBSession.Types.EndSessionRequest.EndSessionRequest
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.QLDBSession.Types.EndSessionRequest.EndSessionRequest


module Network.AWS.QLDBSession.Types.FetchPageRequest

-- | Specifies the details of the page to be fetched.
--   
--   <i>See:</i> <a>newFetchPageRequest</a> smart constructor.
data FetchPageRequest
FetchPageRequest' :: Text -> Text -> FetchPageRequest

-- | Specifies the transaction ID of the page to be fetched.
[$sel:transactionId:FetchPageRequest'] :: FetchPageRequest -> Text

-- | Specifies the next page token of the page to be fetched.
[$sel:nextPageToken:FetchPageRequest'] :: FetchPageRequest -> Text

-- | Create a value of <a>FetchPageRequest</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:transactionId:FetchPageRequest'</a>,
--   <a>fetchPageRequest_transactionId</a> - Specifies the transaction ID
--   of the page to be fetched.
--   
--   <a>$sel:nextPageToken:FetchPageRequest'</a>,
--   <a>fetchPageRequest_nextPageToken</a> - Specifies the next page token
--   of the page to be fetched.
newFetchPageRequest :: Text -> Text -> FetchPageRequest

-- | Specifies the transaction ID of the page to be fetched.
fetchPageRequest_transactionId :: Lens' FetchPageRequest Text

-- | Specifies the next page token of the page to be fetched.
fetchPageRequest_nextPageToken :: Lens' FetchPageRequest Text
instance GHC.Generics.Generic Network.AWS.QLDBSession.Types.FetchPageRequest.FetchPageRequest
instance GHC.Show.Show Network.AWS.QLDBSession.Types.FetchPageRequest.FetchPageRequest
instance GHC.Read.Read Network.AWS.QLDBSession.Types.FetchPageRequest.FetchPageRequest
instance GHC.Classes.Eq Network.AWS.QLDBSession.Types.FetchPageRequest.FetchPageRequest
instance Data.Hashable.Class.Hashable Network.AWS.QLDBSession.Types.FetchPageRequest.FetchPageRequest
instance Control.DeepSeq.NFData Network.AWS.QLDBSession.Types.FetchPageRequest.FetchPageRequest
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.QLDBSession.Types.FetchPageRequest.FetchPageRequest


module Network.AWS.QLDBSession.Types.IOUsage

-- | Contains I/O usage metrics for a command that was invoked.
--   
--   <i>See:</i> <a>newIOUsage</a> smart constructor.
data IOUsage
IOUsage' :: Maybe Integer -> Maybe Integer -> IOUsage

-- | The number of read I/O requests that the command made.
[$sel:readIOs:IOUsage'] :: IOUsage -> Maybe Integer

-- | The number of write I/O requests that the command made.
[$sel:writeIOs:IOUsage'] :: IOUsage -> Maybe Integer

-- | Create a value of <a>IOUsage</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:readIOs:IOUsage'</a>, <a>iOUsage_readIOs</a> - The number of
--   read I/O requests that the command made.
--   
--   <a>$sel:writeIOs:IOUsage'</a>, <a>iOUsage_writeIOs</a> - The number of
--   write I/O requests that the command made.
newIOUsage :: IOUsage

-- | The number of read I/O requests that the command made.
iOUsage_readIOs :: Lens' IOUsage (Maybe Integer)

-- | The number of write I/O requests that the command made.
iOUsage_writeIOs :: Lens' IOUsage (Maybe Integer)
instance GHC.Generics.Generic Network.AWS.QLDBSession.Types.IOUsage.IOUsage
instance GHC.Show.Show Network.AWS.QLDBSession.Types.IOUsage.IOUsage
instance GHC.Read.Read Network.AWS.QLDBSession.Types.IOUsage.IOUsage
instance GHC.Classes.Eq Network.AWS.QLDBSession.Types.IOUsage.IOUsage
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.QLDBSession.Types.IOUsage.IOUsage
instance Data.Hashable.Class.Hashable Network.AWS.QLDBSession.Types.IOUsage.IOUsage
instance Control.DeepSeq.NFData Network.AWS.QLDBSession.Types.IOUsage.IOUsage


module Network.AWS.QLDBSession.Types.StartSessionRequest

-- | Specifies a request to start a new session.
--   
--   <i>See:</i> <a>newStartSessionRequest</a> smart constructor.
data StartSessionRequest
StartSessionRequest' :: Text -> StartSessionRequest

-- | The name of the ledger to start a new session against.
[$sel:ledgerName:StartSessionRequest'] :: StartSessionRequest -> Text

-- | Create a value of <a>StartSessionRequest</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ledgerName:StartSessionRequest'</a>,
--   <a>startSessionRequest_ledgerName</a> - The name of the ledger to
--   start a new session against.
newStartSessionRequest :: Text -> StartSessionRequest

-- | The name of the ledger to start a new session against.
startSessionRequest_ledgerName :: Lens' StartSessionRequest Text
instance GHC.Generics.Generic Network.AWS.QLDBSession.Types.StartSessionRequest.StartSessionRequest
instance GHC.Show.Show Network.AWS.QLDBSession.Types.StartSessionRequest.StartSessionRequest
instance GHC.Read.Read Network.AWS.QLDBSession.Types.StartSessionRequest.StartSessionRequest
instance GHC.Classes.Eq Network.AWS.QLDBSession.Types.StartSessionRequest.StartSessionRequest
instance Data.Hashable.Class.Hashable Network.AWS.QLDBSession.Types.StartSessionRequest.StartSessionRequest
instance Control.DeepSeq.NFData Network.AWS.QLDBSession.Types.StartSessionRequest.StartSessionRequest
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.QLDBSession.Types.StartSessionRequest.StartSessionRequest


module Network.AWS.QLDBSession.Types.StartTransactionRequest

-- | Specifies a request to start a transaction.
--   
--   <i>See:</i> <a>newStartTransactionRequest</a> smart constructor.
data StartTransactionRequest
StartTransactionRequest' :: StartTransactionRequest

-- | Create a value of <a>StartTransactionRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newStartTransactionRequest :: StartTransactionRequest
instance GHC.Generics.Generic Network.AWS.QLDBSession.Types.StartTransactionRequest.StartTransactionRequest
instance GHC.Show.Show Network.AWS.QLDBSession.Types.StartTransactionRequest.StartTransactionRequest
instance GHC.Read.Read Network.AWS.QLDBSession.Types.StartTransactionRequest.StartTransactionRequest
instance GHC.Classes.Eq Network.AWS.QLDBSession.Types.StartTransactionRequest.StartTransactionRequest
instance Data.Hashable.Class.Hashable Network.AWS.QLDBSession.Types.StartTransactionRequest.StartTransactionRequest
instance Control.DeepSeq.NFData Network.AWS.QLDBSession.Types.StartTransactionRequest.StartTransactionRequest
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.QLDBSession.Types.StartTransactionRequest.StartTransactionRequest


module Network.AWS.QLDBSession.Types.TimingInformation

-- | Contains server-side performance information for a command. Amazon
--   QLDB captures timing information between the times when it receives
--   the request and when it sends the corresponding response.
--   
--   <i>See:</i> <a>newTimingInformation</a> smart constructor.
data TimingInformation
TimingInformation' :: Maybe Integer -> TimingInformation

-- | The amount of time that QLDB spent on processing the command, measured
--   in milliseconds.
[$sel:processingTimeMilliseconds:TimingInformation'] :: TimingInformation -> Maybe Integer

-- | Create a value of <a>TimingInformation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:processingTimeMilliseconds:TimingInformation'</a>,
--   <a>timingInformation_processingTimeMilliseconds</a> - The amount of
--   time that QLDB spent on processing the command, measured in
--   milliseconds.
newTimingInformation :: TimingInformation

-- | The amount of time that QLDB spent on processing the command, measured
--   in milliseconds.
timingInformation_processingTimeMilliseconds :: Lens' TimingInformation (Maybe Integer)
instance GHC.Generics.Generic Network.AWS.QLDBSession.Types.TimingInformation.TimingInformation
instance GHC.Show.Show Network.AWS.QLDBSession.Types.TimingInformation.TimingInformation
instance GHC.Read.Read Network.AWS.QLDBSession.Types.TimingInformation.TimingInformation
instance GHC.Classes.Eq Network.AWS.QLDBSession.Types.TimingInformation.TimingInformation
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.QLDBSession.Types.TimingInformation.TimingInformation
instance Data.Hashable.Class.Hashable Network.AWS.QLDBSession.Types.TimingInformation.TimingInformation
instance Control.DeepSeq.NFData Network.AWS.QLDBSession.Types.TimingInformation.TimingInformation


module Network.AWS.QLDBSession.Types.StartTransactionResult

-- | Contains the details of the started transaction.
--   
--   <i>See:</i> <a>newStartTransactionResult</a> smart constructor.
data StartTransactionResult
StartTransactionResult' :: Maybe TimingInformation -> Maybe Text -> StartTransactionResult

-- | Contains server-side performance information for the command.
[$sel:timingInformation:StartTransactionResult'] :: StartTransactionResult -> Maybe TimingInformation

-- | The transaction ID of the started transaction.
[$sel:transactionId:StartTransactionResult'] :: StartTransactionResult -> Maybe Text

-- | Create a value of <a>StartTransactionResult</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timingInformation:StartTransactionResult'</a>,
--   <a>startTransactionResult_timingInformation</a> - Contains server-side
--   performance information for the command.
--   
--   <a>$sel:transactionId:StartTransactionResult'</a>,
--   <a>startTransactionResult_transactionId</a> - The transaction ID of
--   the started transaction.
newStartTransactionResult :: StartTransactionResult

-- | Contains server-side performance information for the command.
startTransactionResult_timingInformation :: Lens' StartTransactionResult (Maybe TimingInformation)

-- | The transaction ID of the started transaction.
startTransactionResult_transactionId :: Lens' StartTransactionResult (Maybe Text)
instance GHC.Generics.Generic Network.AWS.QLDBSession.Types.StartTransactionResult.StartTransactionResult
instance GHC.Show.Show Network.AWS.QLDBSession.Types.StartTransactionResult.StartTransactionResult
instance GHC.Read.Read Network.AWS.QLDBSession.Types.StartTransactionResult.StartTransactionResult
instance GHC.Classes.Eq Network.AWS.QLDBSession.Types.StartTransactionResult.StartTransactionResult
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.QLDBSession.Types.StartTransactionResult.StartTransactionResult
instance Data.Hashable.Class.Hashable Network.AWS.QLDBSession.Types.StartTransactionResult.StartTransactionResult
instance Control.DeepSeq.NFData Network.AWS.QLDBSession.Types.StartTransactionResult.StartTransactionResult


module Network.AWS.QLDBSession.Types.StartSessionResult

-- | Contains the details of the started session.
--   
--   <i>See:</i> <a>newStartSessionResult</a> smart constructor.
data StartSessionResult
StartSessionResult' :: Maybe TimingInformation -> Maybe Text -> StartSessionResult

-- | Contains server-side performance information for the command.
[$sel:timingInformation:StartSessionResult'] :: StartSessionResult -> Maybe TimingInformation

-- | Session token of the started session. This <tt>SessionToken</tt> is
--   required for every subsequent command that is issued during the
--   current session.
[$sel:sessionToken:StartSessionResult'] :: StartSessionResult -> Maybe Text

-- | Create a value of <a>StartSessionResult</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timingInformation:StartSessionResult'</a>,
--   <a>startSessionResult_timingInformation</a> - Contains server-side
--   performance information for the command.
--   
--   <a>$sel:sessionToken:StartSessionResult'</a>,
--   <a>startSessionResult_sessionToken</a> - Session token of the started
--   session. This <tt>SessionToken</tt> is required for every subsequent
--   command that is issued during the current session.
newStartSessionResult :: StartSessionResult

-- | Contains server-side performance information for the command.
startSessionResult_timingInformation :: Lens' StartSessionResult (Maybe TimingInformation)

-- | Session token of the started session. This <tt>SessionToken</tt> is
--   required for every subsequent command that is issued during the
--   current session.
startSessionResult_sessionToken :: Lens' StartSessionResult (Maybe Text)
instance GHC.Generics.Generic Network.AWS.QLDBSession.Types.StartSessionResult.StartSessionResult
instance GHC.Show.Show Network.AWS.QLDBSession.Types.StartSessionResult.StartSessionResult
instance GHC.Read.Read Network.AWS.QLDBSession.Types.StartSessionResult.StartSessionResult
instance GHC.Classes.Eq Network.AWS.QLDBSession.Types.StartSessionResult.StartSessionResult
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.QLDBSession.Types.StartSessionResult.StartSessionResult
instance Data.Hashable.Class.Hashable Network.AWS.QLDBSession.Types.StartSessionResult.StartSessionResult
instance Control.DeepSeq.NFData Network.AWS.QLDBSession.Types.StartSessionResult.StartSessionResult


module Network.AWS.QLDBSession.Types.EndSessionResult

-- | Contains the details of the ended session.
--   
--   <i>See:</i> <a>newEndSessionResult</a> smart constructor.
data EndSessionResult
EndSessionResult' :: Maybe TimingInformation -> EndSessionResult

-- | Contains server-side performance information for the command.
[$sel:timingInformation:EndSessionResult'] :: EndSessionResult -> Maybe TimingInformation

-- | Create a value of <a>EndSessionResult</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timingInformation:EndSessionResult'</a>,
--   <a>endSessionResult_timingInformation</a> - Contains server-side
--   performance information for the command.
newEndSessionResult :: EndSessionResult

-- | Contains server-side performance information for the command.
endSessionResult_timingInformation :: Lens' EndSessionResult (Maybe TimingInformation)
instance GHC.Generics.Generic Network.AWS.QLDBSession.Types.EndSessionResult.EndSessionResult
instance GHC.Show.Show Network.AWS.QLDBSession.Types.EndSessionResult.EndSessionResult
instance GHC.Read.Read Network.AWS.QLDBSession.Types.EndSessionResult.EndSessionResult
instance GHC.Classes.Eq Network.AWS.QLDBSession.Types.EndSessionResult.EndSessionResult
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.QLDBSession.Types.EndSessionResult.EndSessionResult
instance Data.Hashable.Class.Hashable Network.AWS.QLDBSession.Types.EndSessionResult.EndSessionResult
instance Control.DeepSeq.NFData Network.AWS.QLDBSession.Types.EndSessionResult.EndSessionResult


module Network.AWS.QLDBSession.Types.CommitTransactionResult

-- | Contains the details of the committed transaction.
--   
--   <i>See:</i> <a>newCommitTransactionResult</a> smart constructor.
data CommitTransactionResult
CommitTransactionResult' :: Maybe TimingInformation -> Maybe IOUsage -> Maybe Base64 -> Maybe Text -> CommitTransactionResult

-- | Contains server-side performance information for the command.
[$sel:timingInformation:CommitTransactionResult'] :: CommitTransactionResult -> Maybe TimingInformation

-- | Contains metrics about the number of I/O requests that were consumed.
[$sel:consumedIOs:CommitTransactionResult'] :: CommitTransactionResult -> Maybe IOUsage

-- | The commit digest of the committed transaction.
[$sel:commitDigest:CommitTransactionResult'] :: CommitTransactionResult -> Maybe Base64

-- | The transaction ID of the committed transaction.
[$sel:transactionId:CommitTransactionResult'] :: CommitTransactionResult -> Maybe Text

-- | Create a value of <a>CommitTransactionResult</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timingInformation:CommitTransactionResult'</a>,
--   <a>commitTransactionResult_timingInformation</a> - Contains
--   server-side performance information for the command.
--   
--   <a>$sel:consumedIOs:CommitTransactionResult'</a>,
--   <a>commitTransactionResult_consumedIOs</a> - Contains metrics about
--   the number of I/O requests that were consumed.
--   
--   <a>$sel:commitDigest:CommitTransactionResult'</a>,
--   <a>commitTransactionResult_commitDigest</a> - The commit digest of the
--   committed transaction.-- -- <i>Note:</i> This <tt>Lens</tt>
--   automatically encodes and decodes Base64 data. -- The underlying
--   isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
--   
--   <a>$sel:transactionId:CommitTransactionResult'</a>,
--   <a>commitTransactionResult_transactionId</a> - The transaction ID of
--   the committed transaction.
newCommitTransactionResult :: CommitTransactionResult

-- | Contains server-side performance information for the command.
commitTransactionResult_timingInformation :: Lens' CommitTransactionResult (Maybe TimingInformation)

-- | Contains metrics about the number of I/O requests that were consumed.
commitTransactionResult_consumedIOs :: Lens' CommitTransactionResult (Maybe IOUsage)

-- | The commit digest of the committed transaction.-- -- <i>Note:</i> This
--   <tt>Lens</tt> automatically encodes and decodes Base64 data. -- The
--   underlying isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
commitTransactionResult_commitDigest :: Lens' CommitTransactionResult (Maybe ByteString)

-- | The transaction ID of the committed transaction.
commitTransactionResult_transactionId :: Lens' CommitTransactionResult (Maybe Text)
instance GHC.Generics.Generic Network.AWS.QLDBSession.Types.CommitTransactionResult.CommitTransactionResult
instance GHC.Show.Show Network.AWS.QLDBSession.Types.CommitTransactionResult.CommitTransactionResult
instance GHC.Read.Read Network.AWS.QLDBSession.Types.CommitTransactionResult.CommitTransactionResult
instance GHC.Classes.Eq Network.AWS.QLDBSession.Types.CommitTransactionResult.CommitTransactionResult
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.QLDBSession.Types.CommitTransactionResult.CommitTransactionResult
instance Data.Hashable.Class.Hashable Network.AWS.QLDBSession.Types.CommitTransactionResult.CommitTransactionResult
instance Control.DeepSeq.NFData Network.AWS.QLDBSession.Types.CommitTransactionResult.CommitTransactionResult


module Network.AWS.QLDBSession.Types.AbortTransactionResult

-- | Contains the details of the aborted transaction.
--   
--   <i>See:</i> <a>newAbortTransactionResult</a> smart constructor.
data AbortTransactionResult
AbortTransactionResult' :: Maybe TimingInformation -> AbortTransactionResult

-- | Contains server-side performance information for the command.
[$sel:timingInformation:AbortTransactionResult'] :: AbortTransactionResult -> Maybe TimingInformation

-- | Create a value of <a>AbortTransactionResult</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timingInformation:AbortTransactionResult'</a>,
--   <a>abortTransactionResult_timingInformation</a> - Contains server-side
--   performance information for the command.
newAbortTransactionResult :: AbortTransactionResult

-- | Contains server-side performance information for the command.
abortTransactionResult_timingInformation :: Lens' AbortTransactionResult (Maybe TimingInformation)
instance GHC.Generics.Generic Network.AWS.QLDBSession.Types.AbortTransactionResult.AbortTransactionResult
instance GHC.Show.Show Network.AWS.QLDBSession.Types.AbortTransactionResult.AbortTransactionResult
instance GHC.Read.Read Network.AWS.QLDBSession.Types.AbortTransactionResult.AbortTransactionResult
instance GHC.Classes.Eq Network.AWS.QLDBSession.Types.AbortTransactionResult.AbortTransactionResult
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.QLDBSession.Types.AbortTransactionResult.AbortTransactionResult
instance Data.Hashable.Class.Hashable Network.AWS.QLDBSession.Types.AbortTransactionResult.AbortTransactionResult
instance Control.DeepSeq.NFData Network.AWS.QLDBSession.Types.AbortTransactionResult.AbortTransactionResult


module Network.AWS.QLDBSession.Types.ValueHolder

-- | A structure that can contain a value in multiple encoding formats.
--   
--   <i>See:</i> <a>newValueHolder</a> smart constructor.
data ValueHolder
ValueHolder' :: Maybe Text -> Maybe Base64 -> ValueHolder

-- | An Amazon Ion plaintext value contained in a <tt>ValueHolder</tt>
--   structure.
[$sel:ionText:ValueHolder'] :: ValueHolder -> Maybe Text

-- | An Amazon Ion binary value contained in a <tt>ValueHolder</tt>
--   structure.
[$sel:ionBinary:ValueHolder'] :: ValueHolder -> Maybe Base64

-- | Create a value of <a>ValueHolder</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ionText:ValueHolder'</a>, <a>valueHolder_ionText</a> - An
--   Amazon Ion plaintext value contained in a <tt>ValueHolder</tt>
--   structure.
--   
--   <a>$sel:ionBinary:ValueHolder'</a>, <a>valueHolder_ionBinary</a> - An
--   Amazon Ion binary value contained in a <tt>ValueHolder</tt>
--   structure.-- -- <i>Note:</i> This <tt>Lens</tt> automatically encodes
--   and decodes Base64 data. -- The underlying isomorphism will encode to
--   Base64 representation during -- serialisation, and decode from Base64
--   representation during deserialisation. -- This <tt>Lens</tt> accepts
--   and returns only raw unencoded data.
newValueHolder :: ValueHolder

-- | An Amazon Ion plaintext value contained in a <tt>ValueHolder</tt>
--   structure.
valueHolder_ionText :: Lens' ValueHolder (Maybe Text)

-- | An Amazon Ion binary value contained in a <tt>ValueHolder</tt>
--   structure.-- -- <i>Note:</i> This <tt>Lens</tt> automatically encodes
--   and decodes Base64 data. -- The underlying isomorphism will encode to
--   Base64 representation during -- serialisation, and decode from Base64
--   representation during deserialisation. -- This <tt>Lens</tt> accepts
--   and returns only raw unencoded data.
valueHolder_ionBinary :: Lens' ValueHolder (Maybe ByteString)
instance GHC.Generics.Generic Network.AWS.QLDBSession.Types.ValueHolder.ValueHolder
instance GHC.Show.Show Network.AWS.QLDBSession.Types.ValueHolder.ValueHolder
instance GHC.Read.Read Network.AWS.QLDBSession.Types.ValueHolder.ValueHolder
instance GHC.Classes.Eq Network.AWS.QLDBSession.Types.ValueHolder.ValueHolder
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.QLDBSession.Types.ValueHolder.ValueHolder
instance Data.Hashable.Class.Hashable Network.AWS.QLDBSession.Types.ValueHolder.ValueHolder
instance Control.DeepSeq.NFData Network.AWS.QLDBSession.Types.ValueHolder.ValueHolder
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.QLDBSession.Types.ValueHolder.ValueHolder


module Network.AWS.QLDBSession.Types.Page

-- | Contains details of the fetched page.
--   
--   <i>See:</i> <a>newPage</a> smart constructor.
data Page
Page' :: Maybe Text -> Maybe [ValueHolder] -> Page

-- | The token of the next page.
[$sel:nextPageToken:Page'] :: Page -> Maybe Text

-- | A structure that contains values in multiple encoding formats.
[$sel:values:Page'] :: Page -> Maybe [ValueHolder]

-- | Create a value of <a>Page</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextPageToken:Page'</a>, <a>page_nextPageToken</a> - The token
--   of the next page.
--   
--   <a>$sel:values:Page'</a>, <a>page_values</a> - A structure that
--   contains values in multiple encoding formats.
newPage :: Page

-- | The token of the next page.
page_nextPageToken :: Lens' Page (Maybe Text)

-- | A structure that contains values in multiple encoding formats.
page_values :: Lens' Page (Maybe [ValueHolder])
instance GHC.Generics.Generic Network.AWS.QLDBSession.Types.Page.Page
instance GHC.Show.Show Network.AWS.QLDBSession.Types.Page.Page
instance GHC.Read.Read Network.AWS.QLDBSession.Types.Page.Page
instance GHC.Classes.Eq Network.AWS.QLDBSession.Types.Page.Page
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.QLDBSession.Types.Page.Page
instance Data.Hashable.Class.Hashable Network.AWS.QLDBSession.Types.Page.Page
instance Control.DeepSeq.NFData Network.AWS.QLDBSession.Types.Page.Page


module Network.AWS.QLDBSession.Types.FetchPageResult

-- | Contains the page that was fetched.
--   
--   <i>See:</i> <a>newFetchPageResult</a> smart constructor.
data FetchPageResult
FetchPageResult' :: Maybe TimingInformation -> Maybe IOUsage -> Maybe Page -> FetchPageResult

-- | Contains server-side performance information for the command.
[$sel:timingInformation:FetchPageResult'] :: FetchPageResult -> Maybe TimingInformation

-- | Contains metrics about the number of I/O requests that were consumed.
[$sel:consumedIOs:FetchPageResult'] :: FetchPageResult -> Maybe IOUsage

-- | Contains details of the fetched page.
[$sel:page:FetchPageResult'] :: FetchPageResult -> Maybe Page

-- | Create a value of <a>FetchPageResult</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timingInformation:FetchPageResult'</a>,
--   <a>fetchPageResult_timingInformation</a> - Contains server-side
--   performance information for the command.
--   
--   <a>$sel:consumedIOs:FetchPageResult'</a>,
--   <a>fetchPageResult_consumedIOs</a> - Contains metrics about the number
--   of I/O requests that were consumed.
--   
--   <a>$sel:page:FetchPageResult'</a>, <a>fetchPageResult_page</a> -
--   Contains details of the fetched page.
newFetchPageResult :: FetchPageResult

-- | Contains server-side performance information for the command.
fetchPageResult_timingInformation :: Lens' FetchPageResult (Maybe TimingInformation)

-- | Contains metrics about the number of I/O requests that were consumed.
fetchPageResult_consumedIOs :: Lens' FetchPageResult (Maybe IOUsage)

-- | Contains details of the fetched page.
fetchPageResult_page :: Lens' FetchPageResult (Maybe Page)
instance GHC.Generics.Generic Network.AWS.QLDBSession.Types.FetchPageResult.FetchPageResult
instance GHC.Show.Show Network.AWS.QLDBSession.Types.FetchPageResult.FetchPageResult
instance GHC.Read.Read Network.AWS.QLDBSession.Types.FetchPageResult.FetchPageResult
instance GHC.Classes.Eq Network.AWS.QLDBSession.Types.FetchPageResult.FetchPageResult
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.QLDBSession.Types.FetchPageResult.FetchPageResult
instance Data.Hashable.Class.Hashable Network.AWS.QLDBSession.Types.FetchPageResult.FetchPageResult
instance Control.DeepSeq.NFData Network.AWS.QLDBSession.Types.FetchPageResult.FetchPageResult


module Network.AWS.QLDBSession.Types.ExecuteStatementResult

-- | Contains the details of the executed statement.
--   
--   <i>See:</i> <a>newExecuteStatementResult</a> smart constructor.
data ExecuteStatementResult
ExecuteStatementResult' :: Maybe TimingInformation -> Maybe IOUsage -> Maybe Page -> ExecuteStatementResult

-- | Contains server-side performance information for the command.
[$sel:timingInformation:ExecuteStatementResult'] :: ExecuteStatementResult -> Maybe TimingInformation

-- | Contains metrics about the number of I/O requests that were consumed.
[$sel:consumedIOs:ExecuteStatementResult'] :: ExecuteStatementResult -> Maybe IOUsage

-- | Contains the details of the first fetched page.
[$sel:firstPage:ExecuteStatementResult'] :: ExecuteStatementResult -> Maybe Page

-- | Create a value of <a>ExecuteStatementResult</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timingInformation:ExecuteStatementResult'</a>,
--   <a>executeStatementResult_timingInformation</a> - Contains server-side
--   performance information for the command.
--   
--   <a>$sel:consumedIOs:ExecuteStatementResult'</a>,
--   <a>executeStatementResult_consumedIOs</a> - Contains metrics about the
--   number of I/O requests that were consumed.
--   
--   <a>$sel:firstPage:ExecuteStatementResult'</a>,
--   <a>executeStatementResult_firstPage</a> - Contains the details of the
--   first fetched page.
newExecuteStatementResult :: ExecuteStatementResult

-- | Contains server-side performance information for the command.
executeStatementResult_timingInformation :: Lens' ExecuteStatementResult (Maybe TimingInformation)

-- | Contains metrics about the number of I/O requests that were consumed.
executeStatementResult_consumedIOs :: Lens' ExecuteStatementResult (Maybe IOUsage)

-- | Contains the details of the first fetched page.
executeStatementResult_firstPage :: Lens' ExecuteStatementResult (Maybe Page)
instance GHC.Generics.Generic Network.AWS.QLDBSession.Types.ExecuteStatementResult.ExecuteStatementResult
instance GHC.Show.Show Network.AWS.QLDBSession.Types.ExecuteStatementResult.ExecuteStatementResult
instance GHC.Read.Read Network.AWS.QLDBSession.Types.ExecuteStatementResult.ExecuteStatementResult
instance GHC.Classes.Eq Network.AWS.QLDBSession.Types.ExecuteStatementResult.ExecuteStatementResult
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.QLDBSession.Types.ExecuteStatementResult.ExecuteStatementResult
instance Data.Hashable.Class.Hashable Network.AWS.QLDBSession.Types.ExecuteStatementResult.ExecuteStatementResult
instance Control.DeepSeq.NFData Network.AWS.QLDBSession.Types.ExecuteStatementResult.ExecuteStatementResult


module Network.AWS.QLDBSession.Types.ExecuteStatementRequest

-- | Specifies a request to execute a statement.
--   
--   <i>See:</i> <a>newExecuteStatementRequest</a> smart constructor.
data ExecuteStatementRequest
ExecuteStatementRequest' :: Maybe [ValueHolder] -> Text -> Text -> ExecuteStatementRequest

-- | Specifies the parameters for the parameterized statement in the
--   request.
[$sel:parameters:ExecuteStatementRequest'] :: ExecuteStatementRequest -> Maybe [ValueHolder]

-- | Specifies the transaction ID of the request.
[$sel:transactionId:ExecuteStatementRequest'] :: ExecuteStatementRequest -> Text

-- | Specifies the statement of the request.
[$sel:statement:ExecuteStatementRequest'] :: ExecuteStatementRequest -> Text

-- | Create a value of <a>ExecuteStatementRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameters:ExecuteStatementRequest'</a>,
--   <a>executeStatementRequest_parameters</a> - Specifies the parameters
--   for the parameterized statement in the request.
--   
--   <a>$sel:transactionId:ExecuteStatementRequest'</a>,
--   <a>executeStatementRequest_transactionId</a> - Specifies the
--   transaction ID of the request.
--   
--   <a>$sel:statement:ExecuteStatementRequest'</a>,
--   <a>executeStatementRequest_statement</a> - Specifies the statement of
--   the request.
newExecuteStatementRequest :: Text -> Text -> ExecuteStatementRequest

-- | Specifies the parameters for the parameterized statement in the
--   request.
executeStatementRequest_parameters :: Lens' ExecuteStatementRequest (Maybe [ValueHolder])

-- | Specifies the transaction ID of the request.
executeStatementRequest_transactionId :: Lens' ExecuteStatementRequest Text

-- | Specifies the statement of the request.
executeStatementRequest_statement :: Lens' ExecuteStatementRequest Text
instance GHC.Generics.Generic Network.AWS.QLDBSession.Types.ExecuteStatementRequest.ExecuteStatementRequest
instance GHC.Show.Show Network.AWS.QLDBSession.Types.ExecuteStatementRequest.ExecuteStatementRequest
instance GHC.Read.Read Network.AWS.QLDBSession.Types.ExecuteStatementRequest.ExecuteStatementRequest
instance GHC.Classes.Eq Network.AWS.QLDBSession.Types.ExecuteStatementRequest.ExecuteStatementRequest
instance Data.Hashable.Class.Hashable Network.AWS.QLDBSession.Types.ExecuteStatementRequest.ExecuteStatementRequest
instance Control.DeepSeq.NFData Network.AWS.QLDBSession.Types.ExecuteStatementRequest.ExecuteStatementRequest
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.QLDBSession.Types.ExecuteStatementRequest.ExecuteStatementRequest


module Network.AWS.QLDBSession.Types

-- | API version <tt>2019-07-11</tt> of the Amazon QLDB Session SDK
--   configuration.
defaultService :: Service

-- | Returned if the session doesn't exist anymore because it timed out or
--   expired.
_InvalidSessionException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Returned when the request exceeds the processing capacity of the
--   ledger.
_CapacityExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Returned when a transaction cannot be written to the journal due to a
--   failure in the verification phase of <i>optimistic concurrency
--   control</i> (OCC).
_OccConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Returned when the rate of requests exceeds the allowed throughput.
_RateExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Returned if the request is malformed or contains an error such as an
--   invalid parameter value or a missing required parameter.
_BadRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Returned if a resource limit such as number of active sessions is
--   exceeded.
_LimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Contains the details of the transaction to abort.
--   
--   <i>See:</i> <a>newAbortTransactionRequest</a> smart constructor.
data AbortTransactionRequest
AbortTransactionRequest' :: AbortTransactionRequest

-- | Create a value of <a>AbortTransactionRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newAbortTransactionRequest :: AbortTransactionRequest

-- | Contains the details of the aborted transaction.
--   
--   <i>See:</i> <a>newAbortTransactionResult</a> smart constructor.
data AbortTransactionResult
AbortTransactionResult' :: Maybe TimingInformation -> AbortTransactionResult

-- | Contains server-side performance information for the command.
[$sel:timingInformation:AbortTransactionResult'] :: AbortTransactionResult -> Maybe TimingInformation

-- | Create a value of <a>AbortTransactionResult</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timingInformation:AbortTransactionResult'</a>,
--   <a>abortTransactionResult_timingInformation</a> - Contains server-side
--   performance information for the command.
newAbortTransactionResult :: AbortTransactionResult

-- | Contains server-side performance information for the command.
abortTransactionResult_timingInformation :: Lens' AbortTransactionResult (Maybe TimingInformation)

-- | Contains the details of the transaction to commit.
--   
--   <i>See:</i> <a>newCommitTransactionRequest</a> smart constructor.
data CommitTransactionRequest
CommitTransactionRequest' :: Text -> Base64 -> CommitTransactionRequest

-- | Specifies the transaction ID of the transaction to commit.
[$sel:transactionId:CommitTransactionRequest'] :: CommitTransactionRequest -> Text

-- | Specifies the commit digest for the transaction to commit. For every
--   active transaction, the commit digest must be passed. QLDB validates
--   <tt>CommitDigest</tt> and rejects the commit with an error if the
--   digest computed on the client does not match the digest computed by
--   QLDB.
--   
--   The purpose of the <tt>CommitDigest</tt> parameter is to ensure that
--   QLDB commits a transaction if and only if the server has processed the
--   exact set of statements sent by the client, in the same order that
--   client sent them, and with no duplicates.
[$sel:commitDigest:CommitTransactionRequest'] :: CommitTransactionRequest -> Base64

-- | Create a value of <a>CommitTransactionRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:transactionId:CommitTransactionRequest'</a>,
--   <a>commitTransactionRequest_transactionId</a> - Specifies the
--   transaction ID of the transaction to commit.
--   
--   <a>$sel:commitDigest:CommitTransactionRequest'</a>,
--   <a>commitTransactionRequest_commitDigest</a> - Specifies the commit
--   digest for the transaction to commit. For every active transaction,
--   the commit digest must be passed. QLDB validates <tt>CommitDigest</tt>
--   and rejects the commit with an error if the digest computed on the
--   client does not match the digest computed by QLDB.
--   
--   The purpose of the <tt>CommitDigest</tt> parameter is to ensure that
--   QLDB commits a transaction if and only if the server has processed the
--   exact set of statements sent by the client, in the same order that
--   client sent them, and with no duplicates.-- -- <i>Note:</i> This
--   <tt>Lens</tt> automatically encodes and decodes Base64 data. -- The
--   underlying isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
newCommitTransactionRequest :: Text -> ByteString -> CommitTransactionRequest

-- | Specifies the transaction ID of the transaction to commit.
commitTransactionRequest_transactionId :: Lens' CommitTransactionRequest Text

-- | Specifies the commit digest for the transaction to commit. For every
--   active transaction, the commit digest must be passed. QLDB validates
--   <tt>CommitDigest</tt> and rejects the commit with an error if the
--   digest computed on the client does not match the digest computed by
--   QLDB.
--   
--   The purpose of the <tt>CommitDigest</tt> parameter is to ensure that
--   QLDB commits a transaction if and only if the server has processed the
--   exact set of statements sent by the client, in the same order that
--   client sent them, and with no duplicates.-- -- <i>Note:</i> This
--   <tt>Lens</tt> automatically encodes and decodes Base64 data. -- The
--   underlying isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
commitTransactionRequest_commitDigest :: Lens' CommitTransactionRequest ByteString

-- | Contains the details of the committed transaction.
--   
--   <i>See:</i> <a>newCommitTransactionResult</a> smart constructor.
data CommitTransactionResult
CommitTransactionResult' :: Maybe TimingInformation -> Maybe IOUsage -> Maybe Base64 -> Maybe Text -> CommitTransactionResult

-- | Contains server-side performance information for the command.
[$sel:timingInformation:CommitTransactionResult'] :: CommitTransactionResult -> Maybe TimingInformation

-- | Contains metrics about the number of I/O requests that were consumed.
[$sel:consumedIOs:CommitTransactionResult'] :: CommitTransactionResult -> Maybe IOUsage

-- | The commit digest of the committed transaction.
[$sel:commitDigest:CommitTransactionResult'] :: CommitTransactionResult -> Maybe Base64

-- | The transaction ID of the committed transaction.
[$sel:transactionId:CommitTransactionResult'] :: CommitTransactionResult -> Maybe Text

-- | Create a value of <a>CommitTransactionResult</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timingInformation:CommitTransactionResult'</a>,
--   <a>commitTransactionResult_timingInformation</a> - Contains
--   server-side performance information for the command.
--   
--   <a>$sel:consumedIOs:CommitTransactionResult'</a>,
--   <a>commitTransactionResult_consumedIOs</a> - Contains metrics about
--   the number of I/O requests that were consumed.
--   
--   <a>$sel:commitDigest:CommitTransactionResult'</a>,
--   <a>commitTransactionResult_commitDigest</a> - The commit digest of the
--   committed transaction.-- -- <i>Note:</i> This <tt>Lens</tt>
--   automatically encodes and decodes Base64 data. -- The underlying
--   isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
--   
--   <a>$sel:transactionId:CommitTransactionResult'</a>,
--   <a>commitTransactionResult_transactionId</a> - The transaction ID of
--   the committed transaction.
newCommitTransactionResult :: CommitTransactionResult

-- | Contains server-side performance information for the command.
commitTransactionResult_timingInformation :: Lens' CommitTransactionResult (Maybe TimingInformation)

-- | Contains metrics about the number of I/O requests that were consumed.
commitTransactionResult_consumedIOs :: Lens' CommitTransactionResult (Maybe IOUsage)

-- | The commit digest of the committed transaction.-- -- <i>Note:</i> This
--   <tt>Lens</tt> automatically encodes and decodes Base64 data. -- The
--   underlying isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
commitTransactionResult_commitDigest :: Lens' CommitTransactionResult (Maybe ByteString)

-- | The transaction ID of the committed transaction.
commitTransactionResult_transactionId :: Lens' CommitTransactionResult (Maybe Text)

-- | Specifies a request to end the session.
--   
--   <i>See:</i> <a>newEndSessionRequest</a> smart constructor.
data EndSessionRequest
EndSessionRequest' :: EndSessionRequest

-- | Create a value of <a>EndSessionRequest</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newEndSessionRequest :: EndSessionRequest

-- | Contains the details of the ended session.
--   
--   <i>See:</i> <a>newEndSessionResult</a> smart constructor.
data EndSessionResult
EndSessionResult' :: Maybe TimingInformation -> EndSessionResult

-- | Contains server-side performance information for the command.
[$sel:timingInformation:EndSessionResult'] :: EndSessionResult -> Maybe TimingInformation

-- | Create a value of <a>EndSessionResult</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timingInformation:EndSessionResult'</a>,
--   <a>endSessionResult_timingInformation</a> - Contains server-side
--   performance information for the command.
newEndSessionResult :: EndSessionResult

-- | Contains server-side performance information for the command.
endSessionResult_timingInformation :: Lens' EndSessionResult (Maybe TimingInformation)

-- | Specifies a request to execute a statement.
--   
--   <i>See:</i> <a>newExecuteStatementRequest</a> smart constructor.
data ExecuteStatementRequest
ExecuteStatementRequest' :: Maybe [ValueHolder] -> Text -> Text -> ExecuteStatementRequest

-- | Specifies the parameters for the parameterized statement in the
--   request.
[$sel:parameters:ExecuteStatementRequest'] :: ExecuteStatementRequest -> Maybe [ValueHolder]

-- | Specifies the transaction ID of the request.
[$sel:transactionId:ExecuteStatementRequest'] :: ExecuteStatementRequest -> Text

-- | Specifies the statement of the request.
[$sel:statement:ExecuteStatementRequest'] :: ExecuteStatementRequest -> Text

-- | Create a value of <a>ExecuteStatementRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameters:ExecuteStatementRequest'</a>,
--   <a>executeStatementRequest_parameters</a> - Specifies the parameters
--   for the parameterized statement in the request.
--   
--   <a>$sel:transactionId:ExecuteStatementRequest'</a>,
--   <a>executeStatementRequest_transactionId</a> - Specifies the
--   transaction ID of the request.
--   
--   <a>$sel:statement:ExecuteStatementRequest'</a>,
--   <a>executeStatementRequest_statement</a> - Specifies the statement of
--   the request.
newExecuteStatementRequest :: Text -> Text -> ExecuteStatementRequest

-- | Specifies the parameters for the parameterized statement in the
--   request.
executeStatementRequest_parameters :: Lens' ExecuteStatementRequest (Maybe [ValueHolder])

-- | Specifies the transaction ID of the request.
executeStatementRequest_transactionId :: Lens' ExecuteStatementRequest Text

-- | Specifies the statement of the request.
executeStatementRequest_statement :: Lens' ExecuteStatementRequest Text

-- | Contains the details of the executed statement.
--   
--   <i>See:</i> <a>newExecuteStatementResult</a> smart constructor.
data ExecuteStatementResult
ExecuteStatementResult' :: Maybe TimingInformation -> Maybe IOUsage -> Maybe Page -> ExecuteStatementResult

-- | Contains server-side performance information for the command.
[$sel:timingInformation:ExecuteStatementResult'] :: ExecuteStatementResult -> Maybe TimingInformation

-- | Contains metrics about the number of I/O requests that were consumed.
[$sel:consumedIOs:ExecuteStatementResult'] :: ExecuteStatementResult -> Maybe IOUsage

-- | Contains the details of the first fetched page.
[$sel:firstPage:ExecuteStatementResult'] :: ExecuteStatementResult -> Maybe Page

-- | Create a value of <a>ExecuteStatementResult</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timingInformation:ExecuteStatementResult'</a>,
--   <a>executeStatementResult_timingInformation</a> - Contains server-side
--   performance information for the command.
--   
--   <a>$sel:consumedIOs:ExecuteStatementResult'</a>,
--   <a>executeStatementResult_consumedIOs</a> - Contains metrics about the
--   number of I/O requests that were consumed.
--   
--   <a>$sel:firstPage:ExecuteStatementResult'</a>,
--   <a>executeStatementResult_firstPage</a> - Contains the details of the
--   first fetched page.
newExecuteStatementResult :: ExecuteStatementResult

-- | Contains server-side performance information for the command.
executeStatementResult_timingInformation :: Lens' ExecuteStatementResult (Maybe TimingInformation)

-- | Contains metrics about the number of I/O requests that were consumed.
executeStatementResult_consumedIOs :: Lens' ExecuteStatementResult (Maybe IOUsage)

-- | Contains the details of the first fetched page.
executeStatementResult_firstPage :: Lens' ExecuteStatementResult (Maybe Page)

-- | Specifies the details of the page to be fetched.
--   
--   <i>See:</i> <a>newFetchPageRequest</a> smart constructor.
data FetchPageRequest
FetchPageRequest' :: Text -> Text -> FetchPageRequest

-- | Specifies the transaction ID of the page to be fetched.
[$sel:transactionId:FetchPageRequest'] :: FetchPageRequest -> Text

-- | Specifies the next page token of the page to be fetched.
[$sel:nextPageToken:FetchPageRequest'] :: FetchPageRequest -> Text

-- | Create a value of <a>FetchPageRequest</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:transactionId:FetchPageRequest'</a>,
--   <a>fetchPageRequest_transactionId</a> - Specifies the transaction ID
--   of the page to be fetched.
--   
--   <a>$sel:nextPageToken:FetchPageRequest'</a>,
--   <a>fetchPageRequest_nextPageToken</a> - Specifies the next page token
--   of the page to be fetched.
newFetchPageRequest :: Text -> Text -> FetchPageRequest

-- | Specifies the transaction ID of the page to be fetched.
fetchPageRequest_transactionId :: Lens' FetchPageRequest Text

-- | Specifies the next page token of the page to be fetched.
fetchPageRequest_nextPageToken :: Lens' FetchPageRequest Text

-- | Contains the page that was fetched.
--   
--   <i>See:</i> <a>newFetchPageResult</a> smart constructor.
data FetchPageResult
FetchPageResult' :: Maybe TimingInformation -> Maybe IOUsage -> Maybe Page -> FetchPageResult

-- | Contains server-side performance information for the command.
[$sel:timingInformation:FetchPageResult'] :: FetchPageResult -> Maybe TimingInformation

-- | Contains metrics about the number of I/O requests that were consumed.
[$sel:consumedIOs:FetchPageResult'] :: FetchPageResult -> Maybe IOUsage

-- | Contains details of the fetched page.
[$sel:page:FetchPageResult'] :: FetchPageResult -> Maybe Page

-- | Create a value of <a>FetchPageResult</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timingInformation:FetchPageResult'</a>,
--   <a>fetchPageResult_timingInformation</a> - Contains server-side
--   performance information for the command.
--   
--   <a>$sel:consumedIOs:FetchPageResult'</a>,
--   <a>fetchPageResult_consumedIOs</a> - Contains metrics about the number
--   of I/O requests that were consumed.
--   
--   <a>$sel:page:FetchPageResult'</a>, <a>fetchPageResult_page</a> -
--   Contains details of the fetched page.
newFetchPageResult :: FetchPageResult

-- | Contains server-side performance information for the command.
fetchPageResult_timingInformation :: Lens' FetchPageResult (Maybe TimingInformation)

-- | Contains metrics about the number of I/O requests that were consumed.
fetchPageResult_consumedIOs :: Lens' FetchPageResult (Maybe IOUsage)

-- | Contains details of the fetched page.
fetchPageResult_page :: Lens' FetchPageResult (Maybe Page)

-- | Contains I/O usage metrics for a command that was invoked.
--   
--   <i>See:</i> <a>newIOUsage</a> smart constructor.
data IOUsage
IOUsage' :: Maybe Integer -> Maybe Integer -> IOUsage

-- | The number of read I/O requests that the command made.
[$sel:readIOs:IOUsage'] :: IOUsage -> Maybe Integer

-- | The number of write I/O requests that the command made.
[$sel:writeIOs:IOUsage'] :: IOUsage -> Maybe Integer

-- | Create a value of <a>IOUsage</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:readIOs:IOUsage'</a>, <a>iOUsage_readIOs</a> - The number of
--   read I/O requests that the command made.
--   
--   <a>$sel:writeIOs:IOUsage'</a>, <a>iOUsage_writeIOs</a> - The number of
--   write I/O requests that the command made.
newIOUsage :: IOUsage

-- | The number of read I/O requests that the command made.
iOUsage_readIOs :: Lens' IOUsage (Maybe Integer)

-- | The number of write I/O requests that the command made.
iOUsage_writeIOs :: Lens' IOUsage (Maybe Integer)

-- | Contains details of the fetched page.
--   
--   <i>See:</i> <a>newPage</a> smart constructor.
data Page
Page' :: Maybe Text -> Maybe [ValueHolder] -> Page

-- | The token of the next page.
[$sel:nextPageToken:Page'] :: Page -> Maybe Text

-- | A structure that contains values in multiple encoding formats.
[$sel:values:Page'] :: Page -> Maybe [ValueHolder]

-- | Create a value of <a>Page</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextPageToken:Page'</a>, <a>page_nextPageToken</a> - The token
--   of the next page.
--   
--   <a>$sel:values:Page'</a>, <a>page_values</a> - A structure that
--   contains values in multiple encoding formats.
newPage :: Page

-- | The token of the next page.
page_nextPageToken :: Lens' Page (Maybe Text)

-- | A structure that contains values in multiple encoding formats.
page_values :: Lens' Page (Maybe [ValueHolder])

-- | Specifies a request to start a new session.
--   
--   <i>See:</i> <a>newStartSessionRequest</a> smart constructor.
data StartSessionRequest
StartSessionRequest' :: Text -> StartSessionRequest

-- | The name of the ledger to start a new session against.
[$sel:ledgerName:StartSessionRequest'] :: StartSessionRequest -> Text

-- | Create a value of <a>StartSessionRequest</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ledgerName:StartSessionRequest'</a>,
--   <a>startSessionRequest_ledgerName</a> - The name of the ledger to
--   start a new session against.
newStartSessionRequest :: Text -> StartSessionRequest

-- | The name of the ledger to start a new session against.
startSessionRequest_ledgerName :: Lens' StartSessionRequest Text

-- | Contains the details of the started session.
--   
--   <i>See:</i> <a>newStartSessionResult</a> smart constructor.
data StartSessionResult
StartSessionResult' :: Maybe TimingInformation -> Maybe Text -> StartSessionResult

-- | Contains server-side performance information for the command.
[$sel:timingInformation:StartSessionResult'] :: StartSessionResult -> Maybe TimingInformation

-- | Session token of the started session. This <tt>SessionToken</tt> is
--   required for every subsequent command that is issued during the
--   current session.
[$sel:sessionToken:StartSessionResult'] :: StartSessionResult -> Maybe Text

-- | Create a value of <a>StartSessionResult</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timingInformation:StartSessionResult'</a>,
--   <a>startSessionResult_timingInformation</a> - Contains server-side
--   performance information for the command.
--   
--   <a>$sel:sessionToken:StartSessionResult'</a>,
--   <a>startSessionResult_sessionToken</a> - Session token of the started
--   session. This <tt>SessionToken</tt> is required for every subsequent
--   command that is issued during the current session.
newStartSessionResult :: StartSessionResult

-- | Contains server-side performance information for the command.
startSessionResult_timingInformation :: Lens' StartSessionResult (Maybe TimingInformation)

-- | Session token of the started session. This <tt>SessionToken</tt> is
--   required for every subsequent command that is issued during the
--   current session.
startSessionResult_sessionToken :: Lens' StartSessionResult (Maybe Text)

-- | Specifies a request to start a transaction.
--   
--   <i>See:</i> <a>newStartTransactionRequest</a> smart constructor.
data StartTransactionRequest
StartTransactionRequest' :: StartTransactionRequest

-- | Create a value of <a>StartTransactionRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newStartTransactionRequest :: StartTransactionRequest

-- | Contains the details of the started transaction.
--   
--   <i>See:</i> <a>newStartTransactionResult</a> smart constructor.
data StartTransactionResult
StartTransactionResult' :: Maybe TimingInformation -> Maybe Text -> StartTransactionResult

-- | Contains server-side performance information for the command.
[$sel:timingInformation:StartTransactionResult'] :: StartTransactionResult -> Maybe TimingInformation

-- | The transaction ID of the started transaction.
[$sel:transactionId:StartTransactionResult'] :: StartTransactionResult -> Maybe Text

-- | Create a value of <a>StartTransactionResult</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timingInformation:StartTransactionResult'</a>,
--   <a>startTransactionResult_timingInformation</a> - Contains server-side
--   performance information for the command.
--   
--   <a>$sel:transactionId:StartTransactionResult'</a>,
--   <a>startTransactionResult_transactionId</a> - The transaction ID of
--   the started transaction.
newStartTransactionResult :: StartTransactionResult

-- | Contains server-side performance information for the command.
startTransactionResult_timingInformation :: Lens' StartTransactionResult (Maybe TimingInformation)

-- | The transaction ID of the started transaction.
startTransactionResult_transactionId :: Lens' StartTransactionResult (Maybe Text)

-- | Contains server-side performance information for a command. Amazon
--   QLDB captures timing information between the times when it receives
--   the request and when it sends the corresponding response.
--   
--   <i>See:</i> <a>newTimingInformation</a> smart constructor.
data TimingInformation
TimingInformation' :: Maybe Integer -> TimingInformation

-- | The amount of time that QLDB spent on processing the command, measured
--   in milliseconds.
[$sel:processingTimeMilliseconds:TimingInformation'] :: TimingInformation -> Maybe Integer

-- | Create a value of <a>TimingInformation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:processingTimeMilliseconds:TimingInformation'</a>,
--   <a>timingInformation_processingTimeMilliseconds</a> - The amount of
--   time that QLDB spent on processing the command, measured in
--   milliseconds.
newTimingInformation :: TimingInformation

-- | The amount of time that QLDB spent on processing the command, measured
--   in milliseconds.
timingInformation_processingTimeMilliseconds :: Lens' TimingInformation (Maybe Integer)

-- | A structure that can contain a value in multiple encoding formats.
--   
--   <i>See:</i> <a>newValueHolder</a> smart constructor.
data ValueHolder
ValueHolder' :: Maybe Text -> Maybe Base64 -> ValueHolder

-- | An Amazon Ion plaintext value contained in a <tt>ValueHolder</tt>
--   structure.
[$sel:ionText:ValueHolder'] :: ValueHolder -> Maybe Text

-- | An Amazon Ion binary value contained in a <tt>ValueHolder</tt>
--   structure.
[$sel:ionBinary:ValueHolder'] :: ValueHolder -> Maybe Base64

-- | Create a value of <a>ValueHolder</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ionText:ValueHolder'</a>, <a>valueHolder_ionText</a> - An
--   Amazon Ion plaintext value contained in a <tt>ValueHolder</tt>
--   structure.
--   
--   <a>$sel:ionBinary:ValueHolder'</a>, <a>valueHolder_ionBinary</a> - An
--   Amazon Ion binary value contained in a <tt>ValueHolder</tt>
--   structure.-- -- <i>Note:</i> This <tt>Lens</tt> automatically encodes
--   and decodes Base64 data. -- The underlying isomorphism will encode to
--   Base64 representation during -- serialisation, and decode from Base64
--   representation during deserialisation. -- This <tt>Lens</tt> accepts
--   and returns only raw unencoded data.
newValueHolder :: ValueHolder

-- | An Amazon Ion plaintext value contained in a <tt>ValueHolder</tt>
--   structure.
valueHolder_ionText :: Lens' ValueHolder (Maybe Text)

-- | An Amazon Ion binary value contained in a <tt>ValueHolder</tt>
--   structure.-- -- <i>Note:</i> This <tt>Lens</tt> automatically encodes
--   and decodes Base64 data. -- The underlying isomorphism will encode to
--   Base64 representation during -- serialisation, and decode from Base64
--   representation during deserialisation. -- This <tt>Lens</tt> accepts
--   and returns only raw unencoded data.
valueHolder_ionBinary :: Lens' ValueHolder (Maybe ByteString)


-- | Sends a command to an Amazon QLDB ledger.
--   
--   Instead of interacting directly with this API, we recommend using the
--   QLDB driver or the QLDB shell to execute data transactions on a
--   ledger.
--   
--   <ul>
--   <li>If you are working with an AWS SDK, use the QLDB driver. The
--   driver provides a high-level abstraction layer above this <i>QLDB
--   Session</i> data plane and manages <tt>SendCommand</tt> API calls for
--   you. For information and a list of supported programming languages,
--   see <a>Getting started with the driver</a> in the <i>Amazon QLDB
--   Developer Guide</i>.</li>
--   <li>If you are working with the AWS Command Line Interface (AWS CLI),
--   use the QLDB shell. The shell is a command line interface that uses
--   the QLDB driver to interact with a ledger. For information, see
--   <a>Accessing Amazon QLDB using the QLDB shell</a>.</li>
--   </ul>
module Network.AWS.QLDBSession.SendCommand

-- | <i>See:</i> <a>newSendCommand</a> smart constructor.
data SendCommand
SendCommand' :: Maybe FetchPageRequest -> Maybe Text -> Maybe AbortTransactionRequest -> Maybe EndSessionRequest -> Maybe StartTransactionRequest -> Maybe ExecuteStatementRequest -> Maybe CommitTransactionRequest -> Maybe StartSessionRequest -> SendCommand

-- | Command to fetch a page.
[$sel:fetchPage:SendCommand'] :: SendCommand -> Maybe FetchPageRequest

-- | Specifies the session token for the current command. A session token
--   is constant throughout the life of the session.
--   
--   To obtain a session token, run the <tt>StartSession</tt> command. This
--   <tt>SessionToken</tt> is required for every subsequent command that is
--   issued during the current session.
[$sel:sessionToken:SendCommand'] :: SendCommand -> Maybe Text

-- | Command to abort the current transaction.
[$sel:abortTransaction:SendCommand'] :: SendCommand -> Maybe AbortTransactionRequest

-- | Command to end the current session.
[$sel:endSession:SendCommand'] :: SendCommand -> Maybe EndSessionRequest

-- | Command to start a new transaction.
[$sel:startTransaction:SendCommand'] :: SendCommand -> Maybe StartTransactionRequest

-- | Command to execute a statement in the specified transaction.
[$sel:executeStatement:SendCommand'] :: SendCommand -> Maybe ExecuteStatementRequest

-- | Command to commit the specified transaction.
[$sel:commitTransaction:SendCommand'] :: SendCommand -> Maybe CommitTransactionRequest

-- | Command to start a new session. A session token is obtained as part of
--   the response.
[$sel:startSession:SendCommand'] :: SendCommand -> Maybe StartSessionRequest

-- | Create a value of <a>SendCommand</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fetchPage:SendCommand'</a>, <a>sendCommand_fetchPage</a> -
--   Command to fetch a page.
--   
--   <a>$sel:sessionToken:SendCommand'</a>, <a>sendCommand_sessionToken</a>
--   - Specifies the session token for the current command. A session token
--   is constant throughout the life of the session.
--   
--   To obtain a session token, run the <tt>StartSession</tt> command. This
--   <tt>SessionToken</tt> is required for every subsequent command that is
--   issued during the current session.
--   
--   <a>$sel:abortTransaction:SendCommand'</a>,
--   <a>sendCommand_abortTransaction</a> - Command to abort the current
--   transaction.
--   
--   <a>$sel:endSession:SendCommand'</a>, <a>sendCommand_endSession</a> -
--   Command to end the current session.
--   
--   <a>$sel:startTransaction:SendCommand'</a>,
--   <a>sendCommand_startTransaction</a> - Command to start a new
--   transaction.
--   
--   <a>$sel:executeStatement:SendCommand'</a>,
--   <a>sendCommand_executeStatement</a> - Command to execute a statement
--   in the specified transaction.
--   
--   <a>$sel:commitTransaction:SendCommand'</a>,
--   <a>sendCommand_commitTransaction</a> - Command to commit the specified
--   transaction.
--   
--   <a>$sel:startSession:SendCommand'</a>, <a>sendCommand_startSession</a>
--   - Command to start a new session. A session token is obtained as part
--   of the response.
newSendCommand :: SendCommand

-- | Command to fetch a page.
sendCommand_fetchPage :: Lens' SendCommand (Maybe FetchPageRequest)

-- | Specifies the session token for the current command. A session token
--   is constant throughout the life of the session.
--   
--   To obtain a session token, run the <tt>StartSession</tt> command. This
--   <tt>SessionToken</tt> is required for every subsequent command that is
--   issued during the current session.
sendCommand_sessionToken :: Lens' SendCommand (Maybe Text)

-- | Command to abort the current transaction.
sendCommand_abortTransaction :: Lens' SendCommand (Maybe AbortTransactionRequest)

-- | Command to end the current session.
sendCommand_endSession :: Lens' SendCommand (Maybe EndSessionRequest)

-- | Command to start a new transaction.
sendCommand_startTransaction :: Lens' SendCommand (Maybe StartTransactionRequest)

-- | Command to execute a statement in the specified transaction.
sendCommand_executeStatement :: Lens' SendCommand (Maybe ExecuteStatementRequest)

-- | Command to commit the specified transaction.
sendCommand_commitTransaction :: Lens' SendCommand (Maybe CommitTransactionRequest)

-- | Command to start a new session. A session token is obtained as part of
--   the response.
sendCommand_startSession :: Lens' SendCommand (Maybe StartSessionRequest)

-- | <i>See:</i> <a>newSendCommandResponse</a> smart constructor.
data SendCommandResponse
SendCommandResponse' :: Maybe FetchPageResult -> Maybe AbortTransactionResult -> Maybe EndSessionResult -> Maybe StartTransactionResult -> Maybe ExecuteStatementResult -> Maybe CommitTransactionResult -> Maybe StartSessionResult -> Int -> SendCommandResponse

-- | Contains the details of the fetched page.
[$sel:fetchPage:SendCommandResponse'] :: SendCommandResponse -> Maybe FetchPageResult

-- | Contains the details of the aborted transaction.
[$sel:abortTransaction:SendCommandResponse'] :: SendCommandResponse -> Maybe AbortTransactionResult

-- | Contains the details of the ended session.
[$sel:endSession:SendCommandResponse'] :: SendCommandResponse -> Maybe EndSessionResult

-- | Contains the details of the started transaction.
[$sel:startTransaction:SendCommandResponse'] :: SendCommandResponse -> Maybe StartTransactionResult

-- | Contains the details of the executed statement.
[$sel:executeStatement:SendCommandResponse'] :: SendCommandResponse -> Maybe ExecuteStatementResult

-- | Contains the details of the committed transaction.
[$sel:commitTransaction:SendCommandResponse'] :: SendCommandResponse -> Maybe CommitTransactionResult

-- | Contains the details of the started session that includes a session
--   token. This <tt>SessionToken</tt> is required for every subsequent
--   command that is issued during the current session.
[$sel:startSession:SendCommandResponse'] :: SendCommandResponse -> Maybe StartSessionResult

-- | The response's http status code.
[$sel:httpStatus:SendCommandResponse'] :: SendCommandResponse -> Int

-- | Create a value of <a>SendCommandResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fetchPage:SendCommand'</a>,
--   <a>sendCommandResponse_fetchPage</a> - Contains the details of the
--   fetched page.
--   
--   <a>$sel:abortTransaction:SendCommand'</a>,
--   <a>sendCommandResponse_abortTransaction</a> - Contains the details of
--   the aborted transaction.
--   
--   <a>$sel:endSession:SendCommand'</a>,
--   <a>sendCommandResponse_endSession</a> - Contains the details of the
--   ended session.
--   
--   <a>$sel:startTransaction:SendCommand'</a>,
--   <a>sendCommandResponse_startTransaction</a> - Contains the details of
--   the started transaction.
--   
--   <a>$sel:executeStatement:SendCommand'</a>,
--   <a>sendCommandResponse_executeStatement</a> - Contains the details of
--   the executed statement.
--   
--   <a>$sel:commitTransaction:SendCommand'</a>,
--   <a>sendCommandResponse_commitTransaction</a> - Contains the details of
--   the committed transaction.
--   
--   <a>$sel:startSession:SendCommand'</a>,
--   <a>sendCommandResponse_startSession</a> - Contains the details of the
--   started session that includes a session token. This
--   <tt>SessionToken</tt> is required for every subsequent command that is
--   issued during the current session.
--   
--   <a>$sel:httpStatus:SendCommandResponse'</a>,
--   <a>sendCommandResponse_httpStatus</a> - The response's http status
--   code.
newSendCommandResponse :: Int -> SendCommandResponse

-- | Contains the details of the fetched page.
sendCommandResponse_fetchPage :: Lens' SendCommandResponse (Maybe FetchPageResult)

-- | Contains the details of the aborted transaction.
sendCommandResponse_abortTransaction :: Lens' SendCommandResponse (Maybe AbortTransactionResult)

-- | Contains the details of the ended session.
sendCommandResponse_endSession :: Lens' SendCommandResponse (Maybe EndSessionResult)

-- | Contains the details of the started transaction.
sendCommandResponse_startTransaction :: Lens' SendCommandResponse (Maybe StartTransactionResult)

-- | Contains the details of the executed statement.
sendCommandResponse_executeStatement :: Lens' SendCommandResponse (Maybe ExecuteStatementResult)

-- | Contains the details of the committed transaction.
sendCommandResponse_commitTransaction :: Lens' SendCommandResponse (Maybe CommitTransactionResult)

-- | Contains the details of the started session that includes a session
--   token. This <tt>SessionToken</tt> is required for every subsequent
--   command that is issued during the current session.
sendCommandResponse_startSession :: Lens' SendCommandResponse (Maybe StartSessionResult)

-- | The response's http status code.
sendCommandResponse_httpStatus :: Lens' SendCommandResponse Int
instance GHC.Generics.Generic Network.AWS.QLDBSession.SendCommand.SendCommand
instance GHC.Show.Show Network.AWS.QLDBSession.SendCommand.SendCommand
instance GHC.Read.Read Network.AWS.QLDBSession.SendCommand.SendCommand
instance GHC.Classes.Eq Network.AWS.QLDBSession.SendCommand.SendCommand
instance GHC.Generics.Generic Network.AWS.QLDBSession.SendCommand.SendCommandResponse
instance GHC.Show.Show Network.AWS.QLDBSession.SendCommand.SendCommandResponse
instance GHC.Read.Read Network.AWS.QLDBSession.SendCommand.SendCommandResponse
instance GHC.Classes.Eq Network.AWS.QLDBSession.SendCommand.SendCommandResponse
instance Network.AWS.Types.AWSRequest Network.AWS.QLDBSession.SendCommand.SendCommand
instance Control.DeepSeq.NFData Network.AWS.QLDBSession.SendCommand.SendCommandResponse
instance Data.Hashable.Class.Hashable Network.AWS.QLDBSession.SendCommand.SendCommand
instance Control.DeepSeq.NFData Network.AWS.QLDBSession.SendCommand.SendCommand
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.QLDBSession.SendCommand.SendCommand
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.QLDBSession.SendCommand.SendCommand
instance Network.AWS.Data.Path.ToPath Network.AWS.QLDBSession.SendCommand.SendCommand
instance Network.AWS.Data.Query.ToQuery Network.AWS.QLDBSession.SendCommand.SendCommand


module Network.AWS.QLDBSession.Lens

-- | Command to fetch a page.
sendCommand_fetchPage :: Lens' SendCommand (Maybe FetchPageRequest)

-- | Specifies the session token for the current command. A session token
--   is constant throughout the life of the session.
--   
--   To obtain a session token, run the <tt>StartSession</tt> command. This
--   <tt>SessionToken</tt> is required for every subsequent command that is
--   issued during the current session.
sendCommand_sessionToken :: Lens' SendCommand (Maybe Text)

-- | Command to abort the current transaction.
sendCommand_abortTransaction :: Lens' SendCommand (Maybe AbortTransactionRequest)

-- | Command to end the current session.
sendCommand_endSession :: Lens' SendCommand (Maybe EndSessionRequest)

-- | Command to start a new transaction.
sendCommand_startTransaction :: Lens' SendCommand (Maybe StartTransactionRequest)

-- | Command to execute a statement in the specified transaction.
sendCommand_executeStatement :: Lens' SendCommand (Maybe ExecuteStatementRequest)

-- | Command to commit the specified transaction.
sendCommand_commitTransaction :: Lens' SendCommand (Maybe CommitTransactionRequest)

-- | Command to start a new session. A session token is obtained as part of
--   the response.
sendCommand_startSession :: Lens' SendCommand (Maybe StartSessionRequest)

-- | Contains the details of the fetched page.
sendCommandResponse_fetchPage :: Lens' SendCommandResponse (Maybe FetchPageResult)

-- | Contains the details of the aborted transaction.
sendCommandResponse_abortTransaction :: Lens' SendCommandResponse (Maybe AbortTransactionResult)

-- | Contains the details of the ended session.
sendCommandResponse_endSession :: Lens' SendCommandResponse (Maybe EndSessionResult)

-- | Contains the details of the started transaction.
sendCommandResponse_startTransaction :: Lens' SendCommandResponse (Maybe StartTransactionResult)

-- | Contains the details of the executed statement.
sendCommandResponse_executeStatement :: Lens' SendCommandResponse (Maybe ExecuteStatementResult)

-- | Contains the details of the committed transaction.
sendCommandResponse_commitTransaction :: Lens' SendCommandResponse (Maybe CommitTransactionResult)

-- | Contains the details of the started session that includes a session
--   token. This <tt>SessionToken</tt> is required for every subsequent
--   command that is issued during the current session.
sendCommandResponse_startSession :: Lens' SendCommandResponse (Maybe StartSessionResult)

-- | The response's http status code.
sendCommandResponse_httpStatus :: Lens' SendCommandResponse Int

-- | Contains server-side performance information for the command.
abortTransactionResult_timingInformation :: Lens' AbortTransactionResult (Maybe TimingInformation)

-- | Specifies the transaction ID of the transaction to commit.
commitTransactionRequest_transactionId :: Lens' CommitTransactionRequest Text

-- | Specifies the commit digest for the transaction to commit. For every
--   active transaction, the commit digest must be passed. QLDB validates
--   <tt>CommitDigest</tt> and rejects the commit with an error if the
--   digest computed on the client does not match the digest computed by
--   QLDB.
--   
--   The purpose of the <tt>CommitDigest</tt> parameter is to ensure that
--   QLDB commits a transaction if and only if the server has processed the
--   exact set of statements sent by the client, in the same order that
--   client sent them, and with no duplicates.-- -- <i>Note:</i> This
--   <tt>Lens</tt> automatically encodes and decodes Base64 data. -- The
--   underlying isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
commitTransactionRequest_commitDigest :: Lens' CommitTransactionRequest ByteString

-- | Contains server-side performance information for the command.
commitTransactionResult_timingInformation :: Lens' CommitTransactionResult (Maybe TimingInformation)

-- | Contains metrics about the number of I/O requests that were consumed.
commitTransactionResult_consumedIOs :: Lens' CommitTransactionResult (Maybe IOUsage)

-- | The commit digest of the committed transaction.-- -- <i>Note:</i> This
--   <tt>Lens</tt> automatically encodes and decodes Base64 data. -- The
--   underlying isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
commitTransactionResult_commitDigest :: Lens' CommitTransactionResult (Maybe ByteString)

-- | The transaction ID of the committed transaction.
commitTransactionResult_transactionId :: Lens' CommitTransactionResult (Maybe Text)

-- | Contains server-side performance information for the command.
endSessionResult_timingInformation :: Lens' EndSessionResult (Maybe TimingInformation)

-- | Specifies the parameters for the parameterized statement in the
--   request.
executeStatementRequest_parameters :: Lens' ExecuteStatementRequest (Maybe [ValueHolder])

-- | Specifies the transaction ID of the request.
executeStatementRequest_transactionId :: Lens' ExecuteStatementRequest Text

-- | Specifies the statement of the request.
executeStatementRequest_statement :: Lens' ExecuteStatementRequest Text

-- | Contains server-side performance information for the command.
executeStatementResult_timingInformation :: Lens' ExecuteStatementResult (Maybe TimingInformation)

-- | Contains metrics about the number of I/O requests that were consumed.
executeStatementResult_consumedIOs :: Lens' ExecuteStatementResult (Maybe IOUsage)

-- | Contains the details of the first fetched page.
executeStatementResult_firstPage :: Lens' ExecuteStatementResult (Maybe Page)

-- | Specifies the transaction ID of the page to be fetched.
fetchPageRequest_transactionId :: Lens' FetchPageRequest Text

-- | Specifies the next page token of the page to be fetched.
fetchPageRequest_nextPageToken :: Lens' FetchPageRequest Text

-- | Contains server-side performance information for the command.
fetchPageResult_timingInformation :: Lens' FetchPageResult (Maybe TimingInformation)

-- | Contains metrics about the number of I/O requests that were consumed.
fetchPageResult_consumedIOs :: Lens' FetchPageResult (Maybe IOUsage)

-- | Contains details of the fetched page.
fetchPageResult_page :: Lens' FetchPageResult (Maybe Page)

-- | The number of read I/O requests that the command made.
iOUsage_readIOs :: Lens' IOUsage (Maybe Integer)

-- | The number of write I/O requests that the command made.
iOUsage_writeIOs :: Lens' IOUsage (Maybe Integer)

-- | The token of the next page.
page_nextPageToken :: Lens' Page (Maybe Text)

-- | A structure that contains values in multiple encoding formats.
page_values :: Lens' Page (Maybe [ValueHolder])

-- | The name of the ledger to start a new session against.
startSessionRequest_ledgerName :: Lens' StartSessionRequest Text

-- | Contains server-side performance information for the command.
startSessionResult_timingInformation :: Lens' StartSessionResult (Maybe TimingInformation)

-- | Session token of the started session. This <tt>SessionToken</tt> is
--   required for every subsequent command that is issued during the
--   current session.
startSessionResult_sessionToken :: Lens' StartSessionResult (Maybe Text)

-- | Contains server-side performance information for the command.
startTransactionResult_timingInformation :: Lens' StartTransactionResult (Maybe TimingInformation)

-- | The transaction ID of the started transaction.
startTransactionResult_transactionId :: Lens' StartTransactionResult (Maybe Text)

-- | The amount of time that QLDB spent on processing the command, measured
--   in milliseconds.
timingInformation_processingTimeMilliseconds :: Lens' TimingInformation (Maybe Integer)

-- | An Amazon Ion plaintext value contained in a <tt>ValueHolder</tt>
--   structure.
valueHolder_ionText :: Lens' ValueHolder (Maybe Text)

-- | An Amazon Ion binary value contained in a <tt>ValueHolder</tt>
--   structure.-- -- <i>Note:</i> This <tt>Lens</tt> automatically encodes
--   and decodes Base64 data. -- The underlying isomorphism will encode to
--   Base64 representation during -- serialisation, and decode from Base64
--   representation during deserialisation. -- This <tt>Lens</tt> accepts
--   and returns only raw unencoded data.
valueHolder_ionBinary :: Lens' ValueHolder (Maybe ByteString)


module Network.AWS.QLDBSession.Waiters


-- | Derived from API version <tt>2019-07-11</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   The transactional data APIs for Amazon QLDB
--   
--   Instead of interacting directly with this API, we recommend using the
--   QLDB driver or the QLDB shell to execute data transactions on a
--   ledger.
--   
--   <ul>
--   <li>If you are working with an AWS SDK, use the QLDB driver. The
--   driver provides a high-level abstraction layer above this <i>QLDB
--   Session</i> data plane and manages <tt>SendCommand</tt> API calls for
--   you. For information and a list of supported programming languages,
--   see <a>Getting started with the driver</a> in the <i>Amazon QLDB
--   Developer Guide</i>.</li>
--   <li>If you are working with the AWS Command Line Interface (AWS CLI),
--   use the QLDB shell. The shell is a command line interface that uses
--   the QLDB driver to interact with a ledger. For information, see
--   <a>Accessing Amazon QLDB using the QLDB shell</a>.</li>
--   </ul>
module Network.AWS.QLDBSession

-- | API version <tt>2019-07-11</tt> of the Amazon QLDB Session SDK
--   configuration.
defaultService :: Service

-- | Returned if the session doesn't exist anymore because it timed out or
--   expired.
_InvalidSessionException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Returned when the request exceeds the processing capacity of the
--   ledger.
_CapacityExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Returned when a transaction cannot be written to the journal due to a
--   failure in the verification phase of <i>optimistic concurrency
--   control</i> (OCC).
_OccConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Returned when the rate of requests exceeds the allowed throughput.
_RateExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Returned if the request is malformed or contains an error such as an
--   invalid parameter value or a missing required parameter.
_BadRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Returned if a resource limit such as number of active sessions is
--   exceeded.
_LimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newSendCommand</a> smart constructor.
data SendCommand
SendCommand' :: Maybe FetchPageRequest -> Maybe Text -> Maybe AbortTransactionRequest -> Maybe EndSessionRequest -> Maybe StartTransactionRequest -> Maybe ExecuteStatementRequest -> Maybe CommitTransactionRequest -> Maybe StartSessionRequest -> SendCommand

-- | Create a value of <a>SendCommand</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fetchPage:SendCommand'</a>, <a>sendCommand_fetchPage</a> -
--   Command to fetch a page.
--   
--   <a>$sel:sessionToken:SendCommand'</a>, <a>sendCommand_sessionToken</a>
--   - Specifies the session token for the current command. A session token
--   is constant throughout the life of the session.
--   
--   To obtain a session token, run the <tt>StartSession</tt> command. This
--   <tt>SessionToken</tt> is required for every subsequent command that is
--   issued during the current session.
--   
--   <a>$sel:abortTransaction:SendCommand'</a>,
--   <a>sendCommand_abortTransaction</a> - Command to abort the current
--   transaction.
--   
--   <a>$sel:endSession:SendCommand'</a>, <a>sendCommand_endSession</a> -
--   Command to end the current session.
--   
--   <a>$sel:startTransaction:SendCommand'</a>,
--   <a>sendCommand_startTransaction</a> - Command to start a new
--   transaction.
--   
--   <a>$sel:executeStatement:SendCommand'</a>,
--   <a>sendCommand_executeStatement</a> - Command to execute a statement
--   in the specified transaction.
--   
--   <a>$sel:commitTransaction:SendCommand'</a>,
--   <a>sendCommand_commitTransaction</a> - Command to commit the specified
--   transaction.
--   
--   <a>$sel:startSession:SendCommand'</a>, <a>sendCommand_startSession</a>
--   - Command to start a new session. A session token is obtained as part
--   of the response.
newSendCommand :: SendCommand

-- | <i>See:</i> <a>newSendCommandResponse</a> smart constructor.
data SendCommandResponse
SendCommandResponse' :: Maybe FetchPageResult -> Maybe AbortTransactionResult -> Maybe EndSessionResult -> Maybe StartTransactionResult -> Maybe ExecuteStatementResult -> Maybe CommitTransactionResult -> Maybe StartSessionResult -> Int -> SendCommandResponse

-- | Create a value of <a>SendCommandResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fetchPage:SendCommand'</a>,
--   <a>sendCommandResponse_fetchPage</a> - Contains the details of the
--   fetched page.
--   
--   <a>$sel:abortTransaction:SendCommand'</a>,
--   <a>sendCommandResponse_abortTransaction</a> - Contains the details of
--   the aborted transaction.
--   
--   <a>$sel:endSession:SendCommand'</a>,
--   <a>sendCommandResponse_endSession</a> - Contains the details of the
--   ended session.
--   
--   <a>$sel:startTransaction:SendCommand'</a>,
--   <a>sendCommandResponse_startTransaction</a> - Contains the details of
--   the started transaction.
--   
--   <a>$sel:executeStatement:SendCommand'</a>,
--   <a>sendCommandResponse_executeStatement</a> - Contains the details of
--   the executed statement.
--   
--   <a>$sel:commitTransaction:SendCommand'</a>,
--   <a>sendCommandResponse_commitTransaction</a> - Contains the details of
--   the committed transaction.
--   
--   <a>$sel:startSession:SendCommand'</a>,
--   <a>sendCommandResponse_startSession</a> - Contains the details of the
--   started session that includes a session token. This
--   <tt>SessionToken</tt> is required for every subsequent command that is
--   issued during the current session.
--   
--   <a>$sel:httpStatus:SendCommandResponse'</a>,
--   <a>sendCommandResponse_httpStatus</a> - The response's http status
--   code.
newSendCommandResponse :: Int -> SendCommandResponse

-- | Contains the details of the transaction to abort.
--   
--   <i>See:</i> <a>newAbortTransactionRequest</a> smart constructor.
data AbortTransactionRequest
AbortTransactionRequest' :: AbortTransactionRequest

-- | Create a value of <a>AbortTransactionRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newAbortTransactionRequest :: AbortTransactionRequest

-- | Contains the details of the aborted transaction.
--   
--   <i>See:</i> <a>newAbortTransactionResult</a> smart constructor.
data AbortTransactionResult
AbortTransactionResult' :: Maybe TimingInformation -> AbortTransactionResult

-- | Create a value of <a>AbortTransactionResult</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timingInformation:AbortTransactionResult'</a>,
--   <a>abortTransactionResult_timingInformation</a> - Contains server-side
--   performance information for the command.
newAbortTransactionResult :: AbortTransactionResult

-- | Contains the details of the transaction to commit.
--   
--   <i>See:</i> <a>newCommitTransactionRequest</a> smart constructor.
data CommitTransactionRequest
CommitTransactionRequest' :: Text -> Base64 -> CommitTransactionRequest

-- | Create a value of <a>CommitTransactionRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:transactionId:CommitTransactionRequest'</a>,
--   <a>commitTransactionRequest_transactionId</a> - Specifies the
--   transaction ID of the transaction to commit.
--   
--   <a>$sel:commitDigest:CommitTransactionRequest'</a>,
--   <a>commitTransactionRequest_commitDigest</a> - Specifies the commit
--   digest for the transaction to commit. For every active transaction,
--   the commit digest must be passed. QLDB validates <tt>CommitDigest</tt>
--   and rejects the commit with an error if the digest computed on the
--   client does not match the digest computed by QLDB.
--   
--   The purpose of the <tt>CommitDigest</tt> parameter is to ensure that
--   QLDB commits a transaction if and only if the server has processed the
--   exact set of statements sent by the client, in the same order that
--   client sent them, and with no duplicates.-- -- <i>Note:</i> This
--   <tt>Lens</tt> automatically encodes and decodes Base64 data. -- The
--   underlying isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
newCommitTransactionRequest :: Text -> ByteString -> CommitTransactionRequest

-- | Contains the details of the committed transaction.
--   
--   <i>See:</i> <a>newCommitTransactionResult</a> smart constructor.
data CommitTransactionResult
CommitTransactionResult' :: Maybe TimingInformation -> Maybe IOUsage -> Maybe Base64 -> Maybe Text -> CommitTransactionResult

-- | Create a value of <a>CommitTransactionResult</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timingInformation:CommitTransactionResult'</a>,
--   <a>commitTransactionResult_timingInformation</a> - Contains
--   server-side performance information for the command.
--   
--   <a>$sel:consumedIOs:CommitTransactionResult'</a>,
--   <a>commitTransactionResult_consumedIOs</a> - Contains metrics about
--   the number of I/O requests that were consumed.
--   
--   <a>$sel:commitDigest:CommitTransactionResult'</a>,
--   <a>commitTransactionResult_commitDigest</a> - The commit digest of the
--   committed transaction.-- -- <i>Note:</i> This <tt>Lens</tt>
--   automatically encodes and decodes Base64 data. -- The underlying
--   isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
--   
--   <a>$sel:transactionId:CommitTransactionResult'</a>,
--   <a>commitTransactionResult_transactionId</a> - The transaction ID of
--   the committed transaction.
newCommitTransactionResult :: CommitTransactionResult

-- | Specifies a request to end the session.
--   
--   <i>See:</i> <a>newEndSessionRequest</a> smart constructor.
data EndSessionRequest
EndSessionRequest' :: EndSessionRequest

-- | Create a value of <a>EndSessionRequest</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newEndSessionRequest :: EndSessionRequest

-- | Contains the details of the ended session.
--   
--   <i>See:</i> <a>newEndSessionResult</a> smart constructor.
data EndSessionResult
EndSessionResult' :: Maybe TimingInformation -> EndSessionResult

-- | Create a value of <a>EndSessionResult</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timingInformation:EndSessionResult'</a>,
--   <a>endSessionResult_timingInformation</a> - Contains server-side
--   performance information for the command.
newEndSessionResult :: EndSessionResult

-- | Specifies a request to execute a statement.
--   
--   <i>See:</i> <a>newExecuteStatementRequest</a> smart constructor.
data ExecuteStatementRequest
ExecuteStatementRequest' :: Maybe [ValueHolder] -> Text -> Text -> ExecuteStatementRequest

-- | Create a value of <a>ExecuteStatementRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameters:ExecuteStatementRequest'</a>,
--   <a>executeStatementRequest_parameters</a> - Specifies the parameters
--   for the parameterized statement in the request.
--   
--   <a>$sel:transactionId:ExecuteStatementRequest'</a>,
--   <a>executeStatementRequest_transactionId</a> - Specifies the
--   transaction ID of the request.
--   
--   <a>$sel:statement:ExecuteStatementRequest'</a>,
--   <a>executeStatementRequest_statement</a> - Specifies the statement of
--   the request.
newExecuteStatementRequest :: Text -> Text -> ExecuteStatementRequest

-- | Contains the details of the executed statement.
--   
--   <i>See:</i> <a>newExecuteStatementResult</a> smart constructor.
data ExecuteStatementResult
ExecuteStatementResult' :: Maybe TimingInformation -> Maybe IOUsage -> Maybe Page -> ExecuteStatementResult

-- | Create a value of <a>ExecuteStatementResult</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timingInformation:ExecuteStatementResult'</a>,
--   <a>executeStatementResult_timingInformation</a> - Contains server-side
--   performance information for the command.
--   
--   <a>$sel:consumedIOs:ExecuteStatementResult'</a>,
--   <a>executeStatementResult_consumedIOs</a> - Contains metrics about the
--   number of I/O requests that were consumed.
--   
--   <a>$sel:firstPage:ExecuteStatementResult'</a>,
--   <a>executeStatementResult_firstPage</a> - Contains the details of the
--   first fetched page.
newExecuteStatementResult :: ExecuteStatementResult

-- | Specifies the details of the page to be fetched.
--   
--   <i>See:</i> <a>newFetchPageRequest</a> smart constructor.
data FetchPageRequest
FetchPageRequest' :: Text -> Text -> FetchPageRequest

-- | Create a value of <a>FetchPageRequest</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:transactionId:FetchPageRequest'</a>,
--   <a>fetchPageRequest_transactionId</a> - Specifies the transaction ID
--   of the page to be fetched.
--   
--   <a>$sel:nextPageToken:FetchPageRequest'</a>,
--   <a>fetchPageRequest_nextPageToken</a> - Specifies the next page token
--   of the page to be fetched.
newFetchPageRequest :: Text -> Text -> FetchPageRequest

-- | Contains the page that was fetched.
--   
--   <i>See:</i> <a>newFetchPageResult</a> smart constructor.
data FetchPageResult
FetchPageResult' :: Maybe TimingInformation -> Maybe IOUsage -> Maybe Page -> FetchPageResult

-- | Create a value of <a>FetchPageResult</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timingInformation:FetchPageResult'</a>,
--   <a>fetchPageResult_timingInformation</a> - Contains server-side
--   performance information for the command.
--   
--   <a>$sel:consumedIOs:FetchPageResult'</a>,
--   <a>fetchPageResult_consumedIOs</a> - Contains metrics about the number
--   of I/O requests that were consumed.
--   
--   <a>$sel:page:FetchPageResult'</a>, <a>fetchPageResult_page</a> -
--   Contains details of the fetched page.
newFetchPageResult :: FetchPageResult

-- | Contains I/O usage metrics for a command that was invoked.
--   
--   <i>See:</i> <a>newIOUsage</a> smart constructor.
data IOUsage
IOUsage' :: Maybe Integer -> Maybe Integer -> IOUsage

-- | Create a value of <a>IOUsage</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:readIOs:IOUsage'</a>, <a>iOUsage_readIOs</a> - The number of
--   read I/O requests that the command made.
--   
--   <a>$sel:writeIOs:IOUsage'</a>, <a>iOUsage_writeIOs</a> - The number of
--   write I/O requests that the command made.
newIOUsage :: IOUsage

-- | Contains details of the fetched page.
--   
--   <i>See:</i> <a>newPage</a> smart constructor.
data Page
Page' :: Maybe Text -> Maybe [ValueHolder] -> Page

-- | Create a value of <a>Page</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextPageToken:Page'</a>, <a>page_nextPageToken</a> - The token
--   of the next page.
--   
--   <a>$sel:values:Page'</a>, <a>page_values</a> - A structure that
--   contains values in multiple encoding formats.
newPage :: Page

-- | Specifies a request to start a new session.
--   
--   <i>See:</i> <a>newStartSessionRequest</a> smart constructor.
data StartSessionRequest
StartSessionRequest' :: Text -> StartSessionRequest

-- | Create a value of <a>StartSessionRequest</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ledgerName:StartSessionRequest'</a>,
--   <a>startSessionRequest_ledgerName</a> - The name of the ledger to
--   start a new session against.
newStartSessionRequest :: Text -> StartSessionRequest

-- | Contains the details of the started session.
--   
--   <i>See:</i> <a>newStartSessionResult</a> smart constructor.
data StartSessionResult
StartSessionResult' :: Maybe TimingInformation -> Maybe Text -> StartSessionResult

-- | Create a value of <a>StartSessionResult</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timingInformation:StartSessionResult'</a>,
--   <a>startSessionResult_timingInformation</a> - Contains server-side
--   performance information for the command.
--   
--   <a>$sel:sessionToken:StartSessionResult'</a>,
--   <a>startSessionResult_sessionToken</a> - Session token of the started
--   session. This <tt>SessionToken</tt> is required for every subsequent
--   command that is issued during the current session.
newStartSessionResult :: StartSessionResult

-- | Specifies a request to start a transaction.
--   
--   <i>See:</i> <a>newStartTransactionRequest</a> smart constructor.
data StartTransactionRequest
StartTransactionRequest' :: StartTransactionRequest

-- | Create a value of <a>StartTransactionRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newStartTransactionRequest :: StartTransactionRequest

-- | Contains the details of the started transaction.
--   
--   <i>See:</i> <a>newStartTransactionResult</a> smart constructor.
data StartTransactionResult
StartTransactionResult' :: Maybe TimingInformation -> Maybe Text -> StartTransactionResult

-- | Create a value of <a>StartTransactionResult</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timingInformation:StartTransactionResult'</a>,
--   <a>startTransactionResult_timingInformation</a> - Contains server-side
--   performance information for the command.
--   
--   <a>$sel:transactionId:StartTransactionResult'</a>,
--   <a>startTransactionResult_transactionId</a> - The transaction ID of
--   the started transaction.
newStartTransactionResult :: StartTransactionResult

-- | Contains server-side performance information for a command. Amazon
--   QLDB captures timing information between the times when it receives
--   the request and when it sends the corresponding response.
--   
--   <i>See:</i> <a>newTimingInformation</a> smart constructor.
data TimingInformation
TimingInformation' :: Maybe Integer -> TimingInformation

-- | Create a value of <a>TimingInformation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:processingTimeMilliseconds:TimingInformation'</a>,
--   <a>timingInformation_processingTimeMilliseconds</a> - The amount of
--   time that QLDB spent on processing the command, measured in
--   milliseconds.
newTimingInformation :: TimingInformation

-- | A structure that can contain a value in multiple encoding formats.
--   
--   <i>See:</i> <a>newValueHolder</a> smart constructor.
data ValueHolder
ValueHolder' :: Maybe Text -> Maybe Base64 -> ValueHolder

-- | Create a value of <a>ValueHolder</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ionText:ValueHolder'</a>, <a>valueHolder_ionText</a> - An
--   Amazon Ion plaintext value contained in a <tt>ValueHolder</tt>
--   structure.
--   
--   <a>$sel:ionBinary:ValueHolder'</a>, <a>valueHolder_ionBinary</a> - An
--   Amazon Ion binary value contained in a <tt>ValueHolder</tt>
--   structure.-- -- <i>Note:</i> This <tt>Lens</tt> automatically encodes
--   and decodes Base64 data. -- The underlying isomorphism will encode to
--   Base64 representation during -- serialisation, and decode from Base64
--   representation during deserialisation. -- This <tt>Lens</tt> accepts
--   and returns only raw unencoded data.
newValueHolder :: ValueHolder
