-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-workmailmessageflowZSamazonka-workmailmessageflow
@version 2.0


module Network.AWS.WorkMailMessageFlow.Types.S3Reference

-- | Amazon S3 object representing the updated message content, in MIME
--   format.
--   
--   The region for the S3 bucket containing the S3 object must match the
--   region used for WorkMail operations. Also, for WorkMail to process an
--   S3 object, it must have permission to access that object. For more
--   information, see <a>Updating message content with AWS Lambda</a>.
--   
--   <i>See:</i> <a>newS3Reference</a> smart constructor.
data S3Reference
S3Reference' :: Maybe Text -> Text -> Text -> S3Reference

-- | If you enable versioning for the bucket, you can specify the object
--   version.
[$sel:objectVersion:S3Reference'] :: S3Reference -> Maybe Text

-- | The S3 bucket name.
[$sel:bucket:S3Reference'] :: S3Reference -> Text

-- | The S3 key object name.
[$sel:key:S3Reference'] :: S3Reference -> Text

-- | Create a value of <a>S3Reference</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:objectVersion:S3Reference'</a>,
--   <a>s3Reference_objectVersion</a> - If you enable versioning for the
--   bucket, you can specify the object version.
--   
--   <a>$sel:bucket:S3Reference'</a>, <a>s3Reference_bucket</a> - The S3
--   bucket name.
--   
--   <a>$sel:key:S3Reference'</a>, <a>s3Reference_key</a> - The S3 key
--   object name.
newS3Reference :: Text -> Text -> S3Reference

-- | If you enable versioning for the bucket, you can specify the object
--   version.
s3Reference_objectVersion :: Lens' S3Reference (Maybe Text)

-- | The S3 bucket name.
s3Reference_bucket :: Lens' S3Reference Text

-- | The S3 key object name.
s3Reference_key :: Lens' S3Reference Text
instance GHC.Generics.Generic Network.AWS.WorkMailMessageFlow.Types.S3Reference.S3Reference
instance GHC.Show.Show Network.AWS.WorkMailMessageFlow.Types.S3Reference.S3Reference
instance GHC.Read.Read Network.AWS.WorkMailMessageFlow.Types.S3Reference.S3Reference
instance GHC.Classes.Eq Network.AWS.WorkMailMessageFlow.Types.S3Reference.S3Reference
instance Data.Hashable.Class.Hashable Network.AWS.WorkMailMessageFlow.Types.S3Reference.S3Reference
instance Control.DeepSeq.NFData Network.AWS.WorkMailMessageFlow.Types.S3Reference.S3Reference
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.WorkMailMessageFlow.Types.S3Reference.S3Reference


module Network.AWS.WorkMailMessageFlow.Types.RawMessageContent

-- | Provides the MIME content of the updated email message as an S3
--   object. All MIME content must meet the following criteria:
--   
--   <ul>
--   <li>Each part of a multipart MIME message must be formatted
--   properly.</li>
--   <li>Attachments must be of a content type that Amazon SES supports.
--   For more information, see <a>Unsupported Attachment Types</a>.</li>
--   <li>If any of the MIME parts in a message contain content that is
--   outside of the 7-bit ASCII character range, we recommend encoding that
--   content.</li>
--   <li>Per <a>RFC 5321</a>, the maximum length of each line of text,
--   including the &lt;CRLF&gt;, must not exceed 1,000 characters.</li>
--   <li>The message must contain all the required header fields. Check the
--   returned error message for more information.</li>
--   <li>The value of immutable headers must remain unchanged. Check the
--   returned error message for more information.</li>
--   <li>Certain unique headers can only appear once. Check the returned
--   error message for more information.</li>
--   </ul>
--   
--   <i>See:</i> <a>newRawMessageContent</a> smart constructor.
data RawMessageContent
RawMessageContent' :: S3Reference -> RawMessageContent

-- | The S3 reference of an email message.
[$sel:s3Reference:RawMessageContent'] :: RawMessageContent -> S3Reference

-- | Create a value of <a>RawMessageContent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3Reference:RawMessageContent'</a>,
--   <a>rawMessageContent_s3Reference</a> - The S3 reference of an email
--   message.
newRawMessageContent :: S3Reference -> RawMessageContent

-- | The S3 reference of an email message.
rawMessageContent_s3Reference :: Lens' RawMessageContent S3Reference
instance GHC.Generics.Generic Network.AWS.WorkMailMessageFlow.Types.RawMessageContent.RawMessageContent
instance GHC.Show.Show Network.AWS.WorkMailMessageFlow.Types.RawMessageContent.RawMessageContent
instance GHC.Read.Read Network.AWS.WorkMailMessageFlow.Types.RawMessageContent.RawMessageContent
instance GHC.Classes.Eq Network.AWS.WorkMailMessageFlow.Types.RawMessageContent.RawMessageContent
instance Data.Hashable.Class.Hashable Network.AWS.WorkMailMessageFlow.Types.RawMessageContent.RawMessageContent
instance Control.DeepSeq.NFData Network.AWS.WorkMailMessageFlow.Types.RawMessageContent.RawMessageContent
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.WorkMailMessageFlow.Types.RawMessageContent.RawMessageContent


module Network.AWS.WorkMailMessageFlow.Types

-- | API version <tt>2019-05-01</tt> of the Amazon WorkMail Message Flow
--   SDK configuration.
defaultService :: Service

-- | The requested email could not be updated due to an error in the MIME
--   content. Check the error message for more information about what
--   caused the error.
_MessageRejected :: AsError a => Getting (First ServiceError) a ServiceError

-- | WorkMail could not access the updated email content. Possible reasons:
--   
--   <ul>
--   <li>You made the request in a region other than your S3 bucket
--   region.</li>
--   <li>The <a>S3 bucket owner</a> is not the same as the calling AWS
--   account.</li>
--   <li>You have an incomplete or missing S3 bucket policy. For more
--   information about policies, see <a>Updating message content with AWS
--   Lambda</a> in the <i>WorkMail Administrator Guide</i>.</li>
--   </ul>
_InvalidContentLocation :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested email message is not found.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested email is not eligible for update. This is usually the
--   case for a redirected email.
_MessageFrozen :: AsError a => Getting (First ServiceError) a ServiceError

-- | Provides the MIME content of the updated email message as an S3
--   object. All MIME content must meet the following criteria:
--   
--   <ul>
--   <li>Each part of a multipart MIME message must be formatted
--   properly.</li>
--   <li>Attachments must be of a content type that Amazon SES supports.
--   For more information, see <a>Unsupported Attachment Types</a>.</li>
--   <li>If any of the MIME parts in a message contain content that is
--   outside of the 7-bit ASCII character range, we recommend encoding that
--   content.</li>
--   <li>Per <a>RFC 5321</a>, the maximum length of each line of text,
--   including the &lt;CRLF&gt;, must not exceed 1,000 characters.</li>
--   <li>The message must contain all the required header fields. Check the
--   returned error message for more information.</li>
--   <li>The value of immutable headers must remain unchanged. Check the
--   returned error message for more information.</li>
--   <li>Certain unique headers can only appear once. Check the returned
--   error message for more information.</li>
--   </ul>
--   
--   <i>See:</i> <a>newRawMessageContent</a> smart constructor.
data RawMessageContent
RawMessageContent' :: S3Reference -> RawMessageContent

-- | The S3 reference of an email message.
[$sel:s3Reference:RawMessageContent'] :: RawMessageContent -> S3Reference

-- | Create a value of <a>RawMessageContent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3Reference:RawMessageContent'</a>,
--   <a>rawMessageContent_s3Reference</a> - The S3 reference of an email
--   message.
newRawMessageContent :: S3Reference -> RawMessageContent

-- | The S3 reference of an email message.
rawMessageContent_s3Reference :: Lens' RawMessageContent S3Reference

-- | Amazon S3 object representing the updated message content, in MIME
--   format.
--   
--   The region for the S3 bucket containing the S3 object must match the
--   region used for WorkMail operations. Also, for WorkMail to process an
--   S3 object, it must have permission to access that object. For more
--   information, see <a>Updating message content with AWS Lambda</a>.
--   
--   <i>See:</i> <a>newS3Reference</a> smart constructor.
data S3Reference
S3Reference' :: Maybe Text -> Text -> Text -> S3Reference

-- | If you enable versioning for the bucket, you can specify the object
--   version.
[$sel:objectVersion:S3Reference'] :: S3Reference -> Maybe Text

-- | The S3 bucket name.
[$sel:bucket:S3Reference'] :: S3Reference -> Text

-- | The S3 key object name.
[$sel:key:S3Reference'] :: S3Reference -> Text

-- | Create a value of <a>S3Reference</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:objectVersion:S3Reference'</a>,
--   <a>s3Reference_objectVersion</a> - If you enable versioning for the
--   bucket, you can specify the object version.
--   
--   <a>$sel:bucket:S3Reference'</a>, <a>s3Reference_bucket</a> - The S3
--   bucket name.
--   
--   <a>$sel:key:S3Reference'</a>, <a>s3Reference_key</a> - The S3 key
--   object name.
newS3Reference :: Text -> Text -> S3Reference

-- | If you enable versioning for the bucket, you can specify the object
--   version.
s3Reference_objectVersion :: Lens' S3Reference (Maybe Text)

-- | The S3 bucket name.
s3Reference_bucket :: Lens' S3Reference Text

-- | The S3 key object name.
s3Reference_key :: Lens' S3Reference Text


-- | Updates the raw content of an in-transit email message, in MIME
--   format.
--   
--   This example describes how to update in-transit email message. For
--   more information and examples for using this API, see <a>Updating
--   message content with AWS Lambda</a>.
--   
--   Updates to an in-transit message only appear when you call
--   <tt>PutRawMessageContent</tt> from an AWS Lambda function configured
--   with a synchronous <a>Run Lambda</a> rule. If you call
--   <tt>PutRawMessageContent</tt> on a delivered or sent message, the
--   message remains unchanged, even though <a>GetRawMessageContent</a>
--   returns an updated message.
module Network.AWS.WorkMailMessageFlow.PutRawMessageContent

-- | <i>See:</i> <a>newPutRawMessageContent</a> smart constructor.
data PutRawMessageContent
PutRawMessageContent' :: Text -> RawMessageContent -> PutRawMessageContent

-- | The identifier of the email message being updated.
[$sel:messageId:PutRawMessageContent'] :: PutRawMessageContent -> Text

-- | Describes the raw message content of the updated email message.
[$sel:content:PutRawMessageContent'] :: PutRawMessageContent -> RawMessageContent

-- | Create a value of <a>PutRawMessageContent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:messageId:PutRawMessageContent'</a>,
--   <a>putRawMessageContent_messageId</a> - The identifier of the email
--   message being updated.
--   
--   <a>$sel:content:PutRawMessageContent'</a>,
--   <a>putRawMessageContent_content</a> - Describes the raw message
--   content of the updated email message.
newPutRawMessageContent :: Text -> RawMessageContent -> PutRawMessageContent

-- | The identifier of the email message being updated.
putRawMessageContent_messageId :: Lens' PutRawMessageContent Text

-- | Describes the raw message content of the updated email message.
putRawMessageContent_content :: Lens' PutRawMessageContent RawMessageContent

-- | <i>See:</i> <a>newPutRawMessageContentResponse</a> smart constructor.
data PutRawMessageContentResponse
PutRawMessageContentResponse' :: Int -> PutRawMessageContentResponse

-- | The response's http status code.
[$sel:httpStatus:PutRawMessageContentResponse'] :: PutRawMessageContentResponse -> Int

-- | Create a value of <a>PutRawMessageContentResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:PutRawMessageContentResponse'</a>,
--   <a>putRawMessageContentResponse_httpStatus</a> - The response's http
--   status code.
newPutRawMessageContentResponse :: Int -> PutRawMessageContentResponse

-- | The response's http status code.
putRawMessageContentResponse_httpStatus :: Lens' PutRawMessageContentResponse Int
instance GHC.Generics.Generic Network.AWS.WorkMailMessageFlow.PutRawMessageContent.PutRawMessageContent
instance GHC.Show.Show Network.AWS.WorkMailMessageFlow.PutRawMessageContent.PutRawMessageContent
instance GHC.Read.Read Network.AWS.WorkMailMessageFlow.PutRawMessageContent.PutRawMessageContent
instance GHC.Classes.Eq Network.AWS.WorkMailMessageFlow.PutRawMessageContent.PutRawMessageContent
instance GHC.Generics.Generic Network.AWS.WorkMailMessageFlow.PutRawMessageContent.PutRawMessageContentResponse
instance GHC.Show.Show Network.AWS.WorkMailMessageFlow.PutRawMessageContent.PutRawMessageContentResponse
instance GHC.Read.Read Network.AWS.WorkMailMessageFlow.PutRawMessageContent.PutRawMessageContentResponse
instance GHC.Classes.Eq Network.AWS.WorkMailMessageFlow.PutRawMessageContent.PutRawMessageContentResponse
instance Network.AWS.Types.AWSRequest Network.AWS.WorkMailMessageFlow.PutRawMessageContent.PutRawMessageContent
instance Control.DeepSeq.NFData Network.AWS.WorkMailMessageFlow.PutRawMessageContent.PutRawMessageContentResponse
instance Data.Hashable.Class.Hashable Network.AWS.WorkMailMessageFlow.PutRawMessageContent.PutRawMessageContent
instance Control.DeepSeq.NFData Network.AWS.WorkMailMessageFlow.PutRawMessageContent.PutRawMessageContent
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.WorkMailMessageFlow.PutRawMessageContent.PutRawMessageContent
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.WorkMailMessageFlow.PutRawMessageContent.PutRawMessageContent
instance Network.AWS.Data.Path.ToPath Network.AWS.WorkMailMessageFlow.PutRawMessageContent.PutRawMessageContent
instance Network.AWS.Data.Query.ToQuery Network.AWS.WorkMailMessageFlow.PutRawMessageContent.PutRawMessageContent


-- | Retrieves the raw content of an in-transit email message, in MIME
--   format.
module Network.AWS.WorkMailMessageFlow.GetRawMessageContent

-- | <i>See:</i> <a>newGetRawMessageContent</a> smart constructor.
data GetRawMessageContent
GetRawMessageContent' :: Text -> GetRawMessageContent

-- | The identifier of the email message to retrieve.
[$sel:messageId:GetRawMessageContent'] :: GetRawMessageContent -> Text

-- | Create a value of <a>GetRawMessageContent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:messageId:GetRawMessageContent'</a>,
--   <a>getRawMessageContent_messageId</a> - The identifier of the email
--   message to retrieve.
newGetRawMessageContent :: Text -> GetRawMessageContent

-- | The identifier of the email message to retrieve.
getRawMessageContent_messageId :: Lens' GetRawMessageContent Text

-- | <i>See:</i> <a>newGetRawMessageContentResponse</a> smart constructor.
data GetRawMessageContentResponse
GetRawMessageContentResponse' :: Int -> ResponseBody -> GetRawMessageContentResponse

-- | The response's http status code.
[$sel:httpStatus:GetRawMessageContentResponse'] :: GetRawMessageContentResponse -> Int

-- | The raw content of the email message, in MIME format.
[$sel:messageContent:GetRawMessageContentResponse'] :: GetRawMessageContentResponse -> ResponseBody

-- | Create a value of <a>GetRawMessageContentResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetRawMessageContentResponse'</a>,
--   <a>getRawMessageContentResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:messageContent:GetRawMessageContentResponse'</a>,
--   <a>getRawMessageContentResponse_messageContent</a> - The raw content
--   of the email message, in MIME format.
newGetRawMessageContentResponse :: Int -> ResponseBody -> GetRawMessageContentResponse

-- | The response's http status code.
getRawMessageContentResponse_httpStatus :: Lens' GetRawMessageContentResponse Int

-- | The raw content of the email message, in MIME format.
getRawMessageContentResponse_messageContent :: Lens' GetRawMessageContentResponse ResponseBody
instance GHC.Generics.Generic Network.AWS.WorkMailMessageFlow.GetRawMessageContent.GetRawMessageContent
instance GHC.Show.Show Network.AWS.WorkMailMessageFlow.GetRawMessageContent.GetRawMessageContent
instance GHC.Read.Read Network.AWS.WorkMailMessageFlow.GetRawMessageContent.GetRawMessageContent
instance GHC.Classes.Eq Network.AWS.WorkMailMessageFlow.GetRawMessageContent.GetRawMessageContent
instance GHC.Generics.Generic Network.AWS.WorkMailMessageFlow.GetRawMessageContent.GetRawMessageContentResponse
instance GHC.Show.Show Network.AWS.WorkMailMessageFlow.GetRawMessageContent.GetRawMessageContentResponse
instance Network.AWS.Types.AWSRequest Network.AWS.WorkMailMessageFlow.GetRawMessageContent.GetRawMessageContent
instance Data.Hashable.Class.Hashable Network.AWS.WorkMailMessageFlow.GetRawMessageContent.GetRawMessageContent
instance Control.DeepSeq.NFData Network.AWS.WorkMailMessageFlow.GetRawMessageContent.GetRawMessageContent
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.WorkMailMessageFlow.GetRawMessageContent.GetRawMessageContent
instance Network.AWS.Data.Path.ToPath Network.AWS.WorkMailMessageFlow.GetRawMessageContent.GetRawMessageContent
instance Network.AWS.Data.Query.ToQuery Network.AWS.WorkMailMessageFlow.GetRawMessageContent.GetRawMessageContent


module Network.AWS.WorkMailMessageFlow.Lens

-- | The identifier of the email message being updated.
putRawMessageContent_messageId :: Lens' PutRawMessageContent Text

-- | Describes the raw message content of the updated email message.
putRawMessageContent_content :: Lens' PutRawMessageContent RawMessageContent

-- | The response's http status code.
putRawMessageContentResponse_httpStatus :: Lens' PutRawMessageContentResponse Int

-- | The identifier of the email message to retrieve.
getRawMessageContent_messageId :: Lens' GetRawMessageContent Text

-- | The response's http status code.
getRawMessageContentResponse_httpStatus :: Lens' GetRawMessageContentResponse Int

-- | The raw content of the email message, in MIME format.
getRawMessageContentResponse_messageContent :: Lens' GetRawMessageContentResponse ResponseBody

-- | The S3 reference of an email message.
rawMessageContent_s3Reference :: Lens' RawMessageContent S3Reference

-- | If you enable versioning for the bucket, you can specify the object
--   version.
s3Reference_objectVersion :: Lens' S3Reference (Maybe Text)

-- | The S3 bucket name.
s3Reference_bucket :: Lens' S3Reference Text

-- | The S3 key object name.
s3Reference_key :: Lens' S3Reference Text


module Network.AWS.WorkMailMessageFlow.Waiters


-- | Derived from API version <tt>2019-05-01</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   The WorkMail Message Flow API provides access to email messages as
--   they are being sent and received by a WorkMail organization.
module Network.AWS.WorkMailMessageFlow

-- | API version <tt>2019-05-01</tt> of the Amazon WorkMail Message Flow
--   SDK configuration.
defaultService :: Service

-- | The requested email could not be updated due to an error in the MIME
--   content. Check the error message for more information about what
--   caused the error.
_MessageRejected :: AsError a => Getting (First ServiceError) a ServiceError

-- | WorkMail could not access the updated email content. Possible reasons:
--   
--   <ul>
--   <li>You made the request in a region other than your S3 bucket
--   region.</li>
--   <li>The <a>S3 bucket owner</a> is not the same as the calling AWS
--   account.</li>
--   <li>You have an incomplete or missing S3 bucket policy. For more
--   information about policies, see <a>Updating message content with AWS
--   Lambda</a> in the <i>WorkMail Administrator Guide</i>.</li>
--   </ul>
_InvalidContentLocation :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested email message is not found.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested email is not eligible for update. This is usually the
--   case for a redirected email.
_MessageFrozen :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newPutRawMessageContent</a> smart constructor.
data PutRawMessageContent
PutRawMessageContent' :: Text -> RawMessageContent -> PutRawMessageContent

-- | Create a value of <a>PutRawMessageContent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:messageId:PutRawMessageContent'</a>,
--   <a>putRawMessageContent_messageId</a> - The identifier of the email
--   message being updated.
--   
--   <a>$sel:content:PutRawMessageContent'</a>,
--   <a>putRawMessageContent_content</a> - Describes the raw message
--   content of the updated email message.
newPutRawMessageContent :: Text -> RawMessageContent -> PutRawMessageContent

-- | <i>See:</i> <a>newPutRawMessageContentResponse</a> smart constructor.
data PutRawMessageContentResponse
PutRawMessageContentResponse' :: Int -> PutRawMessageContentResponse

-- | Create a value of <a>PutRawMessageContentResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:PutRawMessageContentResponse'</a>,
--   <a>putRawMessageContentResponse_httpStatus</a> - The response's http
--   status code.
newPutRawMessageContentResponse :: Int -> PutRawMessageContentResponse

-- | <i>See:</i> <a>newGetRawMessageContent</a> smart constructor.
data GetRawMessageContent
GetRawMessageContent' :: Text -> GetRawMessageContent

-- | Create a value of <a>GetRawMessageContent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:messageId:GetRawMessageContent'</a>,
--   <a>getRawMessageContent_messageId</a> - The identifier of the email
--   message to retrieve.
newGetRawMessageContent :: Text -> GetRawMessageContent

-- | <i>See:</i> <a>newGetRawMessageContentResponse</a> smart constructor.
data GetRawMessageContentResponse
GetRawMessageContentResponse' :: Int -> ResponseBody -> GetRawMessageContentResponse

-- | Create a value of <a>GetRawMessageContentResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetRawMessageContentResponse'</a>,
--   <a>getRawMessageContentResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:messageContent:GetRawMessageContentResponse'</a>,
--   <a>getRawMessageContentResponse_messageContent</a> - The raw content
--   of the email message, in MIME format.
newGetRawMessageContentResponse :: Int -> ResponseBody -> GetRawMessageContentResponse

-- | Provides the MIME content of the updated email message as an S3
--   object. All MIME content must meet the following criteria:
--   
--   <ul>
--   <li>Each part of a multipart MIME message must be formatted
--   properly.</li>
--   <li>Attachments must be of a content type that Amazon SES supports.
--   For more information, see <a>Unsupported Attachment Types</a>.</li>
--   <li>If any of the MIME parts in a message contain content that is
--   outside of the 7-bit ASCII character range, we recommend encoding that
--   content.</li>
--   <li>Per <a>RFC 5321</a>, the maximum length of each line of text,
--   including the &lt;CRLF&gt;, must not exceed 1,000 characters.</li>
--   <li>The message must contain all the required header fields. Check the
--   returned error message for more information.</li>
--   <li>The value of immutable headers must remain unchanged. Check the
--   returned error message for more information.</li>
--   <li>Certain unique headers can only appear once. Check the returned
--   error message for more information.</li>
--   </ul>
--   
--   <i>See:</i> <a>newRawMessageContent</a> smart constructor.
data RawMessageContent
RawMessageContent' :: S3Reference -> RawMessageContent

-- | Create a value of <a>RawMessageContent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3Reference:RawMessageContent'</a>,
--   <a>rawMessageContent_s3Reference</a> - The S3 reference of an email
--   message.
newRawMessageContent :: S3Reference -> RawMessageContent

-- | Amazon S3 object representing the updated message content, in MIME
--   format.
--   
--   The region for the S3 bucket containing the S3 object must match the
--   region used for WorkMail operations. Also, for WorkMail to process an
--   S3 object, it must have permission to access that object. For more
--   information, see <a>Updating message content with AWS Lambda</a>.
--   
--   <i>See:</i> <a>newS3Reference</a> smart constructor.
data S3Reference
S3Reference' :: Maybe Text -> Text -> Text -> S3Reference

-- | Create a value of <a>S3Reference</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:objectVersion:S3Reference'</a>,
--   <a>s3Reference_objectVersion</a> - If you enable versioning for the
--   bucket, you can specify the object version.
--   
--   <a>$sel:bucket:S3Reference'</a>, <a>s3Reference_bucket</a> - The S3
--   bucket name.
--   
--   <a>$sel:key:S3Reference'</a>, <a>s3Reference_key</a> - The S3 key
--   object name.
newS3Reference :: Text -> Text -> S3Reference
