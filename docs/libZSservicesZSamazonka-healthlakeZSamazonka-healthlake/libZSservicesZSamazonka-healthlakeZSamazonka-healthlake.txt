-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-healthlakeZSamazonka-healthlake
@version 2.0


module Network.AWS.HealthLake.Types.CmkType
newtype CmkType
CmkType' :: Text -> CmkType
[fromCmkType] :: CmkType -> Text
pattern CmkType_AWS_OWNED_KMS_KEY :: CmkType
pattern CmkType_CUSTOMER_MANAGED_KMS_KEY :: CmkType
instance Network.AWS.Data.XML.ToXML Network.AWS.HealthLake.Types.CmkType.CmkType
instance Network.AWS.Data.XML.FromXML Network.AWS.HealthLake.Types.CmkType.CmkType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.HealthLake.Types.CmkType.CmkType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.HealthLake.Types.CmkType.CmkType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.HealthLake.Types.CmkType.CmkType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.HealthLake.Types.CmkType.CmkType
instance Network.AWS.Data.Query.ToQuery Network.AWS.HealthLake.Types.CmkType.CmkType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.HealthLake.Types.CmkType.CmkType
instance Network.AWS.Data.Log.ToLog Network.AWS.HealthLake.Types.CmkType.CmkType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.HealthLake.Types.CmkType.CmkType
instance Network.AWS.Data.Text.ToText Network.AWS.HealthLake.Types.CmkType.CmkType
instance Network.AWS.Data.Text.FromText Network.AWS.HealthLake.Types.CmkType.CmkType
instance Control.DeepSeq.NFData Network.AWS.HealthLake.Types.CmkType.CmkType
instance Data.Hashable.Class.Hashable Network.AWS.HealthLake.Types.CmkType.CmkType
instance GHC.Generics.Generic Network.AWS.HealthLake.Types.CmkType.CmkType
instance GHC.Classes.Ord Network.AWS.HealthLake.Types.CmkType.CmkType
instance GHC.Classes.Eq Network.AWS.HealthLake.Types.CmkType.CmkType
instance GHC.Read.Read Network.AWS.HealthLake.Types.CmkType.CmkType
instance GHC.Show.Show Network.AWS.HealthLake.Types.CmkType.CmkType


module Network.AWS.HealthLake.Types.DatastoreStatus
newtype DatastoreStatus
DatastoreStatus' :: Text -> DatastoreStatus
[fromDatastoreStatus] :: DatastoreStatus -> Text
pattern DatastoreStatus_ACTIVE :: DatastoreStatus
pattern DatastoreStatus_CREATING :: DatastoreStatus
pattern DatastoreStatus_DELETED :: DatastoreStatus
pattern DatastoreStatus_DELETING :: DatastoreStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.HealthLake.Types.DatastoreStatus.DatastoreStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.HealthLake.Types.DatastoreStatus.DatastoreStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.HealthLake.Types.DatastoreStatus.DatastoreStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.HealthLake.Types.DatastoreStatus.DatastoreStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.HealthLake.Types.DatastoreStatus.DatastoreStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.HealthLake.Types.DatastoreStatus.DatastoreStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.HealthLake.Types.DatastoreStatus.DatastoreStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.HealthLake.Types.DatastoreStatus.DatastoreStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.HealthLake.Types.DatastoreStatus.DatastoreStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.HealthLake.Types.DatastoreStatus.DatastoreStatus
instance Network.AWS.Data.Text.ToText Network.AWS.HealthLake.Types.DatastoreStatus.DatastoreStatus
instance Network.AWS.Data.Text.FromText Network.AWS.HealthLake.Types.DatastoreStatus.DatastoreStatus
instance Control.DeepSeq.NFData Network.AWS.HealthLake.Types.DatastoreStatus.DatastoreStatus
instance Data.Hashable.Class.Hashable Network.AWS.HealthLake.Types.DatastoreStatus.DatastoreStatus
instance GHC.Generics.Generic Network.AWS.HealthLake.Types.DatastoreStatus.DatastoreStatus
instance GHC.Classes.Ord Network.AWS.HealthLake.Types.DatastoreStatus.DatastoreStatus
instance GHC.Classes.Eq Network.AWS.HealthLake.Types.DatastoreStatus.DatastoreStatus
instance GHC.Read.Read Network.AWS.HealthLake.Types.DatastoreStatus.DatastoreStatus
instance GHC.Show.Show Network.AWS.HealthLake.Types.DatastoreStatus.DatastoreStatus


module Network.AWS.HealthLake.Types.DatastoreFilter

-- | The filters applied to Data Store query.
--   
--   <i>See:</i> <a>newDatastoreFilter</a> smart constructor.
data DatastoreFilter
DatastoreFilter' :: Maybe POSIX -> Maybe Text -> Maybe DatastoreStatus -> Maybe POSIX -> DatastoreFilter

-- | A filter that allows the user to set cutoff dates for records. All
--   Data Stores created after the specified date will be included in the
--   results.
[$sel:createdAfter:DatastoreFilter'] :: DatastoreFilter -> Maybe POSIX

-- | Allows the user to filter Data Store results by name.
[$sel:datastoreName:DatastoreFilter'] :: DatastoreFilter -> Maybe Text

-- | Allows the user to filter Data Store results by status.
[$sel:datastoreStatus:DatastoreFilter'] :: DatastoreFilter -> Maybe DatastoreStatus

-- | A filter that allows the user to set cutoff dates for records. All
--   Data Stores created before the specified date will be included in the
--   results.
[$sel:createdBefore:DatastoreFilter'] :: DatastoreFilter -> Maybe POSIX

-- | Create a value of <a>DatastoreFilter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdAfter:DatastoreFilter'</a>,
--   <a>datastoreFilter_createdAfter</a> - A filter that allows the user to
--   set cutoff dates for records. All Data Stores created after the
--   specified date will be included in the results.
--   
--   <a>$sel:datastoreName:DatastoreFilter'</a>,
--   <a>datastoreFilter_datastoreName</a> - Allows the user to filter Data
--   Store results by name.
--   
--   <a>$sel:datastoreStatus:DatastoreFilter'</a>,
--   <a>datastoreFilter_datastoreStatus</a> - Allows the user to filter
--   Data Store results by status.
--   
--   <a>$sel:createdBefore:DatastoreFilter'</a>,
--   <a>datastoreFilter_createdBefore</a> - A filter that allows the user
--   to set cutoff dates for records. All Data Stores created before the
--   specified date will be included in the results.
newDatastoreFilter :: DatastoreFilter

-- | A filter that allows the user to set cutoff dates for records. All
--   Data Stores created after the specified date will be included in the
--   results.
datastoreFilter_createdAfter :: Lens' DatastoreFilter (Maybe UTCTime)

-- | Allows the user to filter Data Store results by name.
datastoreFilter_datastoreName :: Lens' DatastoreFilter (Maybe Text)

-- | Allows the user to filter Data Store results by status.
datastoreFilter_datastoreStatus :: Lens' DatastoreFilter (Maybe DatastoreStatus)

-- | A filter that allows the user to set cutoff dates for records. All
--   Data Stores created before the specified date will be included in the
--   results.
datastoreFilter_createdBefore :: Lens' DatastoreFilter (Maybe UTCTime)
instance GHC.Generics.Generic Network.AWS.HealthLake.Types.DatastoreFilter.DatastoreFilter
instance GHC.Show.Show Network.AWS.HealthLake.Types.DatastoreFilter.DatastoreFilter
instance GHC.Read.Read Network.AWS.HealthLake.Types.DatastoreFilter.DatastoreFilter
instance GHC.Classes.Eq Network.AWS.HealthLake.Types.DatastoreFilter.DatastoreFilter
instance Data.Hashable.Class.Hashable Network.AWS.HealthLake.Types.DatastoreFilter.DatastoreFilter
instance Control.DeepSeq.NFData Network.AWS.HealthLake.Types.DatastoreFilter.DatastoreFilter
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.HealthLake.Types.DatastoreFilter.DatastoreFilter


module Network.AWS.HealthLake.Types.FHIRVersion
newtype FHIRVersion
FHIRVersion' :: Text -> FHIRVersion
[fromFHIRVersion] :: FHIRVersion -> Text
pattern FHIRVersion_R4 :: FHIRVersion
instance Network.AWS.Data.XML.ToXML Network.AWS.HealthLake.Types.FHIRVersion.FHIRVersion
instance Network.AWS.Data.XML.FromXML Network.AWS.HealthLake.Types.FHIRVersion.FHIRVersion
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.HealthLake.Types.FHIRVersion.FHIRVersion
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.HealthLake.Types.FHIRVersion.FHIRVersion
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.HealthLake.Types.FHIRVersion.FHIRVersion
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.HealthLake.Types.FHIRVersion.FHIRVersion
instance Network.AWS.Data.Query.ToQuery Network.AWS.HealthLake.Types.FHIRVersion.FHIRVersion
instance Network.AWS.Data.Headers.ToHeader Network.AWS.HealthLake.Types.FHIRVersion.FHIRVersion
instance Network.AWS.Data.Log.ToLog Network.AWS.HealthLake.Types.FHIRVersion.FHIRVersion
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.HealthLake.Types.FHIRVersion.FHIRVersion
instance Network.AWS.Data.Text.ToText Network.AWS.HealthLake.Types.FHIRVersion.FHIRVersion
instance Network.AWS.Data.Text.FromText Network.AWS.HealthLake.Types.FHIRVersion.FHIRVersion
instance Control.DeepSeq.NFData Network.AWS.HealthLake.Types.FHIRVersion.FHIRVersion
instance Data.Hashable.Class.Hashable Network.AWS.HealthLake.Types.FHIRVersion.FHIRVersion
instance GHC.Generics.Generic Network.AWS.HealthLake.Types.FHIRVersion.FHIRVersion
instance GHC.Classes.Ord Network.AWS.HealthLake.Types.FHIRVersion.FHIRVersion
instance GHC.Classes.Eq Network.AWS.HealthLake.Types.FHIRVersion.FHIRVersion
instance GHC.Read.Read Network.AWS.HealthLake.Types.FHIRVersion.FHIRVersion
instance GHC.Show.Show Network.AWS.HealthLake.Types.FHIRVersion.FHIRVersion


module Network.AWS.HealthLake.Types.InputDataConfig

-- | The input properties for an import job.
--   
--   <i>See:</i> <a>newInputDataConfig</a> smart constructor.
data InputDataConfig
InputDataConfig' :: Maybe Text -> InputDataConfig

-- | The S3Uri is the user specified S3 location of the FHIR data to be
--   imported into Amazon HealthLake.
[$sel:s3Uri:InputDataConfig'] :: InputDataConfig -> Maybe Text

-- | Create a value of <a>InputDataConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3Uri:InputDataConfig'</a>, <a>inputDataConfig_s3Uri</a> - The
--   S3Uri is the user specified S3 location of the FHIR data to be
--   imported into Amazon HealthLake.
newInputDataConfig :: InputDataConfig

-- | The S3Uri is the user specified S3 location of the FHIR data to be
--   imported into Amazon HealthLake.
inputDataConfig_s3Uri :: Lens' InputDataConfig (Maybe Text)
instance GHC.Generics.Generic Network.AWS.HealthLake.Types.InputDataConfig.InputDataConfig
instance GHC.Show.Show Network.AWS.HealthLake.Types.InputDataConfig.InputDataConfig
instance GHC.Read.Read Network.AWS.HealthLake.Types.InputDataConfig.InputDataConfig
instance GHC.Classes.Eq Network.AWS.HealthLake.Types.InputDataConfig.InputDataConfig
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.HealthLake.Types.InputDataConfig.InputDataConfig
instance Data.Hashable.Class.Hashable Network.AWS.HealthLake.Types.InputDataConfig.InputDataConfig
instance Control.DeepSeq.NFData Network.AWS.HealthLake.Types.InputDataConfig.InputDataConfig
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.HealthLake.Types.InputDataConfig.InputDataConfig


module Network.AWS.HealthLake.Types.JobStatus
newtype JobStatus
JobStatus' :: Text -> JobStatus
[fromJobStatus] :: JobStatus -> Text
pattern JobStatus_COMPLETED :: JobStatus
pattern JobStatus_COMPLETED_WITH_ERRORS :: JobStatus
pattern JobStatus_FAILED :: JobStatus
pattern JobStatus_IN_PROGRESS :: JobStatus
pattern JobStatus_SUBMITTED :: JobStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.HealthLake.Types.JobStatus.JobStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.HealthLake.Types.JobStatus.JobStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.HealthLake.Types.JobStatus.JobStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.HealthLake.Types.JobStatus.JobStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.HealthLake.Types.JobStatus.JobStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.HealthLake.Types.JobStatus.JobStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.HealthLake.Types.JobStatus.JobStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.HealthLake.Types.JobStatus.JobStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.HealthLake.Types.JobStatus.JobStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.HealthLake.Types.JobStatus.JobStatus
instance Network.AWS.Data.Text.ToText Network.AWS.HealthLake.Types.JobStatus.JobStatus
instance Network.AWS.Data.Text.FromText Network.AWS.HealthLake.Types.JobStatus.JobStatus
instance Control.DeepSeq.NFData Network.AWS.HealthLake.Types.JobStatus.JobStatus
instance Data.Hashable.Class.Hashable Network.AWS.HealthLake.Types.JobStatus.JobStatus
instance GHC.Generics.Generic Network.AWS.HealthLake.Types.JobStatus.JobStatus
instance GHC.Classes.Ord Network.AWS.HealthLake.Types.JobStatus.JobStatus
instance GHC.Classes.Eq Network.AWS.HealthLake.Types.JobStatus.JobStatus
instance GHC.Read.Read Network.AWS.HealthLake.Types.JobStatus.JobStatus
instance GHC.Show.Show Network.AWS.HealthLake.Types.JobStatus.JobStatus


module Network.AWS.HealthLake.Types.KmsEncryptionConfig

-- | The customer-managed-key(CMK) used when creating a Data Store. If a
--   customer owned key is not specified, an AWS owned key will be used for
--   encryption.
--   
--   <i>See:</i> <a>newKmsEncryptionConfig</a> smart constructor.
data KmsEncryptionConfig
KmsEncryptionConfig' :: Maybe Text -> CmkType -> KmsEncryptionConfig

-- | The KMS encryption key id/alias used to encrypt the Data Store
--   contents at rest.
[$sel:kmsKeyId:KmsEncryptionConfig'] :: KmsEncryptionConfig -> Maybe Text

-- | The type of customer-managed-key(CMK) used for encyrption. The two
--   types of supported CMKs are customer owned CMKs and AWS owned CMKs.
[$sel:cmkType:KmsEncryptionConfig'] :: KmsEncryptionConfig -> CmkType

-- | Create a value of <a>KmsEncryptionConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:kmsKeyId:KmsEncryptionConfig'</a>,
--   <a>kmsEncryptionConfig_kmsKeyId</a> - The KMS encryption key id/alias
--   used to encrypt the Data Store contents at rest.
--   
--   <a>$sel:cmkType:KmsEncryptionConfig'</a>,
--   <a>kmsEncryptionConfig_cmkType</a> - The type of
--   customer-managed-key(CMK) used for encyrption. The two types of
--   supported CMKs are customer owned CMKs and AWS owned CMKs.
newKmsEncryptionConfig :: CmkType -> KmsEncryptionConfig

-- | The KMS encryption key id/alias used to encrypt the Data Store
--   contents at rest.
kmsEncryptionConfig_kmsKeyId :: Lens' KmsEncryptionConfig (Maybe Text)

-- | The type of customer-managed-key(CMK) used for encyrption. The two
--   types of supported CMKs are customer owned CMKs and AWS owned CMKs.
kmsEncryptionConfig_cmkType :: Lens' KmsEncryptionConfig CmkType
instance GHC.Generics.Generic Network.AWS.HealthLake.Types.KmsEncryptionConfig.KmsEncryptionConfig
instance GHC.Show.Show Network.AWS.HealthLake.Types.KmsEncryptionConfig.KmsEncryptionConfig
instance GHC.Read.Read Network.AWS.HealthLake.Types.KmsEncryptionConfig.KmsEncryptionConfig
instance GHC.Classes.Eq Network.AWS.HealthLake.Types.KmsEncryptionConfig.KmsEncryptionConfig
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.HealthLake.Types.KmsEncryptionConfig.KmsEncryptionConfig
instance Data.Hashable.Class.Hashable Network.AWS.HealthLake.Types.KmsEncryptionConfig.KmsEncryptionConfig
instance Control.DeepSeq.NFData Network.AWS.HealthLake.Types.KmsEncryptionConfig.KmsEncryptionConfig
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.HealthLake.Types.KmsEncryptionConfig.KmsEncryptionConfig


module Network.AWS.HealthLake.Types.PreloadDataType
newtype PreloadDataType
PreloadDataType' :: Text -> PreloadDataType
[fromPreloadDataType] :: PreloadDataType -> Text
pattern PreloadDataType_SYNTHEA :: PreloadDataType
instance Network.AWS.Data.XML.ToXML Network.AWS.HealthLake.Types.PreloadDataType.PreloadDataType
instance Network.AWS.Data.XML.FromXML Network.AWS.HealthLake.Types.PreloadDataType.PreloadDataType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.HealthLake.Types.PreloadDataType.PreloadDataType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.HealthLake.Types.PreloadDataType.PreloadDataType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.HealthLake.Types.PreloadDataType.PreloadDataType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.HealthLake.Types.PreloadDataType.PreloadDataType
instance Network.AWS.Data.Query.ToQuery Network.AWS.HealthLake.Types.PreloadDataType.PreloadDataType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.HealthLake.Types.PreloadDataType.PreloadDataType
instance Network.AWS.Data.Log.ToLog Network.AWS.HealthLake.Types.PreloadDataType.PreloadDataType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.HealthLake.Types.PreloadDataType.PreloadDataType
instance Network.AWS.Data.Text.ToText Network.AWS.HealthLake.Types.PreloadDataType.PreloadDataType
instance Network.AWS.Data.Text.FromText Network.AWS.HealthLake.Types.PreloadDataType.PreloadDataType
instance Control.DeepSeq.NFData Network.AWS.HealthLake.Types.PreloadDataType.PreloadDataType
instance Data.Hashable.Class.Hashable Network.AWS.HealthLake.Types.PreloadDataType.PreloadDataType
instance GHC.Generics.Generic Network.AWS.HealthLake.Types.PreloadDataType.PreloadDataType
instance GHC.Classes.Ord Network.AWS.HealthLake.Types.PreloadDataType.PreloadDataType
instance GHC.Classes.Eq Network.AWS.HealthLake.Types.PreloadDataType.PreloadDataType
instance GHC.Read.Read Network.AWS.HealthLake.Types.PreloadDataType.PreloadDataType
instance GHC.Show.Show Network.AWS.HealthLake.Types.PreloadDataType.PreloadDataType


module Network.AWS.HealthLake.Types.PreloadDataConfig

-- | The input properties for the preloaded Data Store. Only data preloaded
--   from Synthea is supported.
--   
--   <i>See:</i> <a>newPreloadDataConfig</a> smart constructor.
data PreloadDataConfig
PreloadDataConfig' :: PreloadDataType -> PreloadDataConfig

-- | The type of preloaded data. Only Synthea preloaded data is supported.
[$sel:preloadDataType:PreloadDataConfig'] :: PreloadDataConfig -> PreloadDataType

-- | Create a value of <a>PreloadDataConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:preloadDataType:PreloadDataConfig'</a>,
--   <a>preloadDataConfig_preloadDataType</a> - The type of preloaded data.
--   Only Synthea preloaded data is supported.
newPreloadDataConfig :: PreloadDataType -> PreloadDataConfig

-- | The type of preloaded data. Only Synthea preloaded data is supported.
preloadDataConfig_preloadDataType :: Lens' PreloadDataConfig PreloadDataType
instance GHC.Generics.Generic Network.AWS.HealthLake.Types.PreloadDataConfig.PreloadDataConfig
instance GHC.Show.Show Network.AWS.HealthLake.Types.PreloadDataConfig.PreloadDataConfig
instance GHC.Read.Read Network.AWS.HealthLake.Types.PreloadDataConfig.PreloadDataConfig
instance GHC.Classes.Eq Network.AWS.HealthLake.Types.PreloadDataConfig.PreloadDataConfig
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.HealthLake.Types.PreloadDataConfig.PreloadDataConfig
instance Data.Hashable.Class.Hashable Network.AWS.HealthLake.Types.PreloadDataConfig.PreloadDataConfig
instance Control.DeepSeq.NFData Network.AWS.HealthLake.Types.PreloadDataConfig.PreloadDataConfig
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.HealthLake.Types.PreloadDataConfig.PreloadDataConfig


module Network.AWS.HealthLake.Types.S3Configuration

-- | The configuration of the S3 bucket for either an import or export job.
--   This includes assigning permissions for access.
--   
--   <i>See:</i> <a>newS3Configuration</a> smart constructor.
data S3Configuration
S3Configuration' :: Text -> Text -> S3Configuration

-- | The S3Uri is the user specified S3 location of the FHIR data to be
--   imported into Amazon HealthLake.
[$sel:s3Uri:S3Configuration'] :: S3Configuration -> Text

-- | The KMS key ID used to access the S3 bucket.
[$sel:kmsKeyId:S3Configuration'] :: S3Configuration -> Text

-- | Create a value of <a>S3Configuration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3Uri:S3Configuration'</a>, <a>s3Configuration_s3Uri</a> - The
--   S3Uri is the user specified S3 location of the FHIR data to be
--   imported into Amazon HealthLake.
--   
--   <a>$sel:kmsKeyId:S3Configuration'</a>, <a>s3Configuration_kmsKeyId</a>
--   - The KMS key ID used to access the S3 bucket.
newS3Configuration :: Text -> Text -> S3Configuration

-- | The S3Uri is the user specified S3 location of the FHIR data to be
--   imported into Amazon HealthLake.
s3Configuration_s3Uri :: Lens' S3Configuration Text

-- | The KMS key ID used to access the S3 bucket.
s3Configuration_kmsKeyId :: Lens' S3Configuration Text
instance GHC.Generics.Generic Network.AWS.HealthLake.Types.S3Configuration.S3Configuration
instance GHC.Show.Show Network.AWS.HealthLake.Types.S3Configuration.S3Configuration
instance GHC.Read.Read Network.AWS.HealthLake.Types.S3Configuration.S3Configuration
instance GHC.Classes.Eq Network.AWS.HealthLake.Types.S3Configuration.S3Configuration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.HealthLake.Types.S3Configuration.S3Configuration
instance Data.Hashable.Class.Hashable Network.AWS.HealthLake.Types.S3Configuration.S3Configuration
instance Control.DeepSeq.NFData Network.AWS.HealthLake.Types.S3Configuration.S3Configuration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.HealthLake.Types.S3Configuration.S3Configuration


module Network.AWS.HealthLake.Types.OutputDataConfig

-- | The output data configuration that was supplied when the export job
--   was created.
--   
--   <i>See:</i> <a>newOutputDataConfig</a> smart constructor.
data OutputDataConfig
OutputDataConfig' :: Maybe S3Configuration -> OutputDataConfig

-- | The output data configuration that was supplied when the export job
--   was created.
[$sel:s3Configuration:OutputDataConfig'] :: OutputDataConfig -> Maybe S3Configuration

-- | Create a value of <a>OutputDataConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3Configuration:OutputDataConfig'</a>,
--   <a>outputDataConfig_s3Configuration</a> - The output data
--   configuration that was supplied when the export job was created.
newOutputDataConfig :: OutputDataConfig

-- | The output data configuration that was supplied when the export job
--   was created.
outputDataConfig_s3Configuration :: Lens' OutputDataConfig (Maybe S3Configuration)
instance GHC.Generics.Generic Network.AWS.HealthLake.Types.OutputDataConfig.OutputDataConfig
instance GHC.Show.Show Network.AWS.HealthLake.Types.OutputDataConfig.OutputDataConfig
instance GHC.Read.Read Network.AWS.HealthLake.Types.OutputDataConfig.OutputDataConfig
instance GHC.Classes.Eq Network.AWS.HealthLake.Types.OutputDataConfig.OutputDataConfig
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.HealthLake.Types.OutputDataConfig.OutputDataConfig
instance Data.Hashable.Class.Hashable Network.AWS.HealthLake.Types.OutputDataConfig.OutputDataConfig
instance Control.DeepSeq.NFData Network.AWS.HealthLake.Types.OutputDataConfig.OutputDataConfig
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.HealthLake.Types.OutputDataConfig.OutputDataConfig


module Network.AWS.HealthLake.Types.ImportJobProperties

-- | Displays the properties of the import job, including the ID, Arn,
--   Name, and the status of the Data Store.
--   
--   <i>See:</i> <a>newImportJobProperties</a> smart constructor.
data ImportJobProperties
ImportJobProperties' :: Maybe OutputDataConfig -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Text -> JobStatus -> POSIX -> Text -> InputDataConfig -> ImportJobProperties
[$sel:jobOutputDataConfig:ImportJobProperties'] :: ImportJobProperties -> Maybe OutputDataConfig

-- | The user-generated name for an Import job.
[$sel:jobName:ImportJobProperties'] :: ImportJobProperties -> Maybe Text

-- | The time that the Import job was completed.
[$sel:endTime:ImportJobProperties'] :: ImportJobProperties -> Maybe POSIX

-- | The Amazon Resource Name (ARN) that gives Amazon HealthLake access to
--   your input data.
[$sel:dataAccessRoleArn:ImportJobProperties'] :: ImportJobProperties -> Maybe Text

-- | An explanation of any errors that may have occurred during the FHIR
--   import job.
[$sel:message:ImportJobProperties'] :: ImportJobProperties -> Maybe Text

-- | The AWS-generated id number for the Import job.
[$sel:jobId:ImportJobProperties'] :: ImportJobProperties -> Text

-- | The job status for an Import job. Possible statuses are SUBMITTED,
--   IN_PROGRESS, COMPLETED, FAILED.
[$sel:jobStatus:ImportJobProperties'] :: ImportJobProperties -> JobStatus

-- | The time that the Import job was submitted for processing.
[$sel:submitTime:ImportJobProperties'] :: ImportJobProperties -> POSIX

-- | The datastore id used when the Import job was created.
[$sel:datastoreId:ImportJobProperties'] :: ImportJobProperties -> Text

-- | The input data configuration that was supplied when the Import job was
--   created.
[$sel:inputDataConfig:ImportJobProperties'] :: ImportJobProperties -> InputDataConfig

-- | Create a value of <a>ImportJobProperties</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobOutputDataConfig:ImportJobProperties'</a>,
--   <a>importJobProperties_jobOutputDataConfig</a> - Undocumented member.
--   
--   <a>$sel:jobName:ImportJobProperties'</a>,
--   <a>importJobProperties_jobName</a> - The user-generated name for an
--   Import job.
--   
--   <a>$sel:endTime:ImportJobProperties'</a>,
--   <a>importJobProperties_endTime</a> - The time that the Import job was
--   completed.
--   
--   <a>$sel:dataAccessRoleArn:ImportJobProperties'</a>,
--   <a>importJobProperties_dataAccessRoleArn</a> - The Amazon Resource
--   Name (ARN) that gives Amazon HealthLake access to your input data.
--   
--   <a>$sel:message:ImportJobProperties'</a>,
--   <a>importJobProperties_message</a> - An explanation of any errors that
--   may have occurred during the FHIR import job.
--   
--   <a>$sel:jobId:ImportJobProperties'</a>,
--   <a>importJobProperties_jobId</a> - The AWS-generated id number for the
--   Import job.
--   
--   <a>$sel:jobStatus:ImportJobProperties'</a>,
--   <a>importJobProperties_jobStatus</a> - The job status for an Import
--   job. Possible statuses are SUBMITTED, IN_PROGRESS, COMPLETED, FAILED.
--   
--   <a>$sel:submitTime:ImportJobProperties'</a>,
--   <a>importJobProperties_submitTime</a> - The time that the Import job
--   was submitted for processing.
--   
--   <a>$sel:datastoreId:ImportJobProperties'</a>,
--   <a>importJobProperties_datastoreId</a> - The datastore id used when
--   the Import job was created.
--   
--   <a>$sel:inputDataConfig:ImportJobProperties'</a>,
--   <a>importJobProperties_inputDataConfig</a> - The input data
--   configuration that was supplied when the Import job was created.
newImportJobProperties :: Text -> JobStatus -> UTCTime -> Text -> InputDataConfig -> ImportJobProperties

-- | Undocumented member.
importJobProperties_jobOutputDataConfig :: Lens' ImportJobProperties (Maybe OutputDataConfig)

-- | The user-generated name for an Import job.
importJobProperties_jobName :: Lens' ImportJobProperties (Maybe Text)

-- | The time that the Import job was completed.
importJobProperties_endTime :: Lens' ImportJobProperties (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) that gives Amazon HealthLake access to
--   your input data.
importJobProperties_dataAccessRoleArn :: Lens' ImportJobProperties (Maybe Text)

-- | An explanation of any errors that may have occurred during the FHIR
--   import job.
importJobProperties_message :: Lens' ImportJobProperties (Maybe Text)

-- | The AWS-generated id number for the Import job.
importJobProperties_jobId :: Lens' ImportJobProperties Text

-- | The job status for an Import job. Possible statuses are SUBMITTED,
--   IN_PROGRESS, COMPLETED, FAILED.
importJobProperties_jobStatus :: Lens' ImportJobProperties JobStatus

-- | The time that the Import job was submitted for processing.
importJobProperties_submitTime :: Lens' ImportJobProperties UTCTime

-- | The datastore id used when the Import job was created.
importJobProperties_datastoreId :: Lens' ImportJobProperties Text

-- | The input data configuration that was supplied when the Import job was
--   created.
importJobProperties_inputDataConfig :: Lens' ImportJobProperties InputDataConfig
instance GHC.Generics.Generic Network.AWS.HealthLake.Types.ImportJobProperties.ImportJobProperties
instance GHC.Show.Show Network.AWS.HealthLake.Types.ImportJobProperties.ImportJobProperties
instance GHC.Read.Read Network.AWS.HealthLake.Types.ImportJobProperties.ImportJobProperties
instance GHC.Classes.Eq Network.AWS.HealthLake.Types.ImportJobProperties.ImportJobProperties
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.HealthLake.Types.ImportJobProperties.ImportJobProperties
instance Data.Hashable.Class.Hashable Network.AWS.HealthLake.Types.ImportJobProperties.ImportJobProperties
instance Control.DeepSeq.NFData Network.AWS.HealthLake.Types.ImportJobProperties.ImportJobProperties


module Network.AWS.HealthLake.Types.ExportJobProperties

-- | The properties of a FHIR export job, including the ID, ARN, name, and
--   the status of the job.
--   
--   <i>See:</i> <a>newExportJobProperties</a> smart constructor.
data ExportJobProperties
ExportJobProperties' :: Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Text -> JobStatus -> POSIX -> Text -> OutputDataConfig -> ExportJobProperties

-- | The user generated name for an export job.
[$sel:jobName:ExportJobProperties'] :: ExportJobProperties -> Maybe Text

-- | The time an export job completed.
[$sel:endTime:ExportJobProperties'] :: ExportJobProperties -> Maybe POSIX

-- | The Amazon Resource Name used during the initiation of the job.
[$sel:dataAccessRoleArn:ExportJobProperties'] :: ExportJobProperties -> Maybe Text

-- | An explanation of any errors that may have occurred during the export
--   job.
[$sel:message:ExportJobProperties'] :: ExportJobProperties -> Maybe Text

-- | The AWS generated ID for an export job.
[$sel:jobId:ExportJobProperties'] :: ExportJobProperties -> Text

-- | The status of a FHIR export job. Possible statuses are SUBMITTED,
--   IN_PROGRESS, COMPLETED, or FAILED.
[$sel:jobStatus:ExportJobProperties'] :: ExportJobProperties -> JobStatus

-- | The time an export job was initiated.
[$sel:submitTime:ExportJobProperties'] :: ExportJobProperties -> POSIX

-- | The AWS generated ID for the Data Store from which files are being
--   exported for an export job.
[$sel:datastoreId:ExportJobProperties'] :: ExportJobProperties -> Text

-- | The output data configuration that was supplied when the export job
--   was created.
[$sel:outputDataConfig:ExportJobProperties'] :: ExportJobProperties -> OutputDataConfig

-- | Create a value of <a>ExportJobProperties</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobName:ExportJobProperties'</a>,
--   <a>exportJobProperties_jobName</a> - The user generated name for an
--   export job.
--   
--   <a>$sel:endTime:ExportJobProperties'</a>,
--   <a>exportJobProperties_endTime</a> - The time an export job completed.
--   
--   <a>$sel:dataAccessRoleArn:ExportJobProperties'</a>,
--   <a>exportJobProperties_dataAccessRoleArn</a> - The Amazon Resource
--   Name used during the initiation of the job.
--   
--   <a>$sel:message:ExportJobProperties'</a>,
--   <a>exportJobProperties_message</a> - An explanation of any errors that
--   may have occurred during the export job.
--   
--   <a>$sel:jobId:ExportJobProperties'</a>,
--   <a>exportJobProperties_jobId</a> - The AWS generated ID for an export
--   job.
--   
--   <a>$sel:jobStatus:ExportJobProperties'</a>,
--   <a>exportJobProperties_jobStatus</a> - The status of a FHIR export
--   job. Possible statuses are SUBMITTED, IN_PROGRESS, COMPLETED, or
--   FAILED.
--   
--   <a>$sel:submitTime:ExportJobProperties'</a>,
--   <a>exportJobProperties_submitTime</a> - The time an export job was
--   initiated.
--   
--   <a>$sel:datastoreId:ExportJobProperties'</a>,
--   <a>exportJobProperties_datastoreId</a> - The AWS generated ID for the
--   Data Store from which files are being exported for an export job.
--   
--   <a>$sel:outputDataConfig:ExportJobProperties'</a>,
--   <a>exportJobProperties_outputDataConfig</a> - The output data
--   configuration that was supplied when the export job was created.
newExportJobProperties :: Text -> JobStatus -> UTCTime -> Text -> OutputDataConfig -> ExportJobProperties

-- | The user generated name for an export job.
exportJobProperties_jobName :: Lens' ExportJobProperties (Maybe Text)

-- | The time an export job completed.
exportJobProperties_endTime :: Lens' ExportJobProperties (Maybe UTCTime)

-- | The Amazon Resource Name used during the initiation of the job.
exportJobProperties_dataAccessRoleArn :: Lens' ExportJobProperties (Maybe Text)

-- | An explanation of any errors that may have occurred during the export
--   job.
exportJobProperties_message :: Lens' ExportJobProperties (Maybe Text)

-- | The AWS generated ID for an export job.
exportJobProperties_jobId :: Lens' ExportJobProperties Text

-- | The status of a FHIR export job. Possible statuses are SUBMITTED,
--   IN_PROGRESS, COMPLETED, or FAILED.
exportJobProperties_jobStatus :: Lens' ExportJobProperties JobStatus

-- | The time an export job was initiated.
exportJobProperties_submitTime :: Lens' ExportJobProperties UTCTime

-- | The AWS generated ID for the Data Store from which files are being
--   exported for an export job.
exportJobProperties_datastoreId :: Lens' ExportJobProperties Text

-- | The output data configuration that was supplied when the export job
--   was created.
exportJobProperties_outputDataConfig :: Lens' ExportJobProperties OutputDataConfig
instance GHC.Generics.Generic Network.AWS.HealthLake.Types.ExportJobProperties.ExportJobProperties
instance GHC.Show.Show Network.AWS.HealthLake.Types.ExportJobProperties.ExportJobProperties
instance GHC.Read.Read Network.AWS.HealthLake.Types.ExportJobProperties.ExportJobProperties
instance GHC.Classes.Eq Network.AWS.HealthLake.Types.ExportJobProperties.ExportJobProperties
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.HealthLake.Types.ExportJobProperties.ExportJobProperties
instance Data.Hashable.Class.Hashable Network.AWS.HealthLake.Types.ExportJobProperties.ExportJobProperties
instance Control.DeepSeq.NFData Network.AWS.HealthLake.Types.ExportJobProperties.ExportJobProperties


module Network.AWS.HealthLake.Types.SseConfiguration

-- | The server-side encryption key configuration for a customer provided
--   encryption key.
--   
--   <i>See:</i> <a>newSseConfiguration</a> smart constructor.
data SseConfiguration
SseConfiguration' :: KmsEncryptionConfig -> SseConfiguration

-- | The KMS encryption configuration used to provide details for data
--   encryption.
[$sel:kmsEncryptionConfig:SseConfiguration'] :: SseConfiguration -> KmsEncryptionConfig

-- | Create a value of <a>SseConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:kmsEncryptionConfig:SseConfiguration'</a>,
--   <a>sseConfiguration_kmsEncryptionConfig</a> - The KMS encryption
--   configuration used to provide details for data encryption.
newSseConfiguration :: KmsEncryptionConfig -> SseConfiguration

-- | The KMS encryption configuration used to provide details for data
--   encryption.
sseConfiguration_kmsEncryptionConfig :: Lens' SseConfiguration KmsEncryptionConfig
instance GHC.Generics.Generic Network.AWS.HealthLake.Types.SseConfiguration.SseConfiguration
instance GHC.Show.Show Network.AWS.HealthLake.Types.SseConfiguration.SseConfiguration
instance GHC.Read.Read Network.AWS.HealthLake.Types.SseConfiguration.SseConfiguration
instance GHC.Classes.Eq Network.AWS.HealthLake.Types.SseConfiguration.SseConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.HealthLake.Types.SseConfiguration.SseConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.HealthLake.Types.SseConfiguration.SseConfiguration
instance Control.DeepSeq.NFData Network.AWS.HealthLake.Types.SseConfiguration.SseConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.HealthLake.Types.SseConfiguration.SseConfiguration


module Network.AWS.HealthLake.Types.DatastoreProperties

-- | Displays the properties of the Data Store, including the ID, Arn,
--   name, and the status of the Data Store.
--   
--   <i>See:</i> <a>newDatastoreProperties</a> smart constructor.
data DatastoreProperties
DatastoreProperties' :: Maybe SseConfiguration -> Maybe POSIX -> Maybe Text -> Maybe PreloadDataConfig -> Text -> Text -> DatastoreStatus -> FHIRVersion -> Text -> DatastoreProperties

-- | The server-side encryption key configuration for a customer provided
--   encryption key (CMK).
[$sel:sseConfiguration:DatastoreProperties'] :: DatastoreProperties -> Maybe SseConfiguration

-- | The time that a Data Store was created.
[$sel:createdAt:DatastoreProperties'] :: DatastoreProperties -> Maybe POSIX

-- | The user-generated name for the Data Store.
[$sel:datastoreName:DatastoreProperties'] :: DatastoreProperties -> Maybe Text

-- | The preloaded data configuration for the Data Store. Only data
--   preloaded from Synthea is supported.
[$sel:preloadDataConfig:DatastoreProperties'] :: DatastoreProperties -> Maybe PreloadDataConfig

-- | The AWS-generated ID number for the Data Store.
[$sel:datastoreId:DatastoreProperties'] :: DatastoreProperties -> Text

-- | The Amazon Resource Name used in the creation of the Data Store.
[$sel:datastoreArn:DatastoreProperties'] :: DatastoreProperties -> Text

-- | The status of the Data Store. Possible statuses are 'CREATING',
--   'ACTIVE', 'DELETING', or 'DELETED'.
[$sel:datastoreStatus:DatastoreProperties'] :: DatastoreProperties -> DatastoreStatus

-- | The FHIR version. Only R4 version data is supported.
[$sel:datastoreTypeVersion:DatastoreProperties'] :: DatastoreProperties -> FHIRVersion

-- | The AWS endpoint for the Data Store. Each Data Store will have it's
--   own endpoint with Data Store ID in the endpoint URL.
[$sel:datastoreEndpoint:DatastoreProperties'] :: DatastoreProperties -> Text

-- | Create a value of <a>DatastoreProperties</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sseConfiguration:DatastoreProperties'</a>,
--   <a>datastoreProperties_sseConfiguration</a> - The server-side
--   encryption key configuration for a customer provided encryption key
--   (CMK).
--   
--   <a>$sel:createdAt:DatastoreProperties'</a>,
--   <a>datastoreProperties_createdAt</a> - The time that a Data Store was
--   created.
--   
--   <a>$sel:datastoreName:DatastoreProperties'</a>,
--   <a>datastoreProperties_datastoreName</a> - The user-generated name for
--   the Data Store.
--   
--   <a>$sel:preloadDataConfig:DatastoreProperties'</a>,
--   <a>datastoreProperties_preloadDataConfig</a> - The preloaded data
--   configuration for the Data Store. Only data preloaded from Synthea is
--   supported.
--   
--   <a>$sel:datastoreId:DatastoreProperties'</a>,
--   <a>datastoreProperties_datastoreId</a> - The AWS-generated ID number
--   for the Data Store.
--   
--   <a>$sel:datastoreArn:DatastoreProperties'</a>,
--   <a>datastoreProperties_datastoreArn</a> - The Amazon Resource Name
--   used in the creation of the Data Store.
--   
--   <a>$sel:datastoreStatus:DatastoreProperties'</a>,
--   <a>datastoreProperties_datastoreStatus</a> - The status of the Data
--   Store. Possible statuses are 'CREATING', 'ACTIVE', 'DELETING', or
--   'DELETED'.
--   
--   <a>$sel:datastoreTypeVersion:DatastoreProperties'</a>,
--   <a>datastoreProperties_datastoreTypeVersion</a> - The FHIR version.
--   Only R4 version data is supported.
--   
--   <a>$sel:datastoreEndpoint:DatastoreProperties'</a>,
--   <a>datastoreProperties_datastoreEndpoint</a> - The AWS endpoint for
--   the Data Store. Each Data Store will have it's own endpoint with Data
--   Store ID in the endpoint URL.
newDatastoreProperties :: Text -> Text -> DatastoreStatus -> FHIRVersion -> Text -> DatastoreProperties

-- | The server-side encryption key configuration for a customer provided
--   encryption key (CMK).
datastoreProperties_sseConfiguration :: Lens' DatastoreProperties (Maybe SseConfiguration)

-- | The time that a Data Store was created.
datastoreProperties_createdAt :: Lens' DatastoreProperties (Maybe UTCTime)

-- | The user-generated name for the Data Store.
datastoreProperties_datastoreName :: Lens' DatastoreProperties (Maybe Text)

-- | The preloaded data configuration for the Data Store. Only data
--   preloaded from Synthea is supported.
datastoreProperties_preloadDataConfig :: Lens' DatastoreProperties (Maybe PreloadDataConfig)

-- | The AWS-generated ID number for the Data Store.
datastoreProperties_datastoreId :: Lens' DatastoreProperties Text

-- | The Amazon Resource Name used in the creation of the Data Store.
datastoreProperties_datastoreArn :: Lens' DatastoreProperties Text

-- | The status of the Data Store. Possible statuses are 'CREATING',
--   'ACTIVE', 'DELETING', or 'DELETED'.
datastoreProperties_datastoreStatus :: Lens' DatastoreProperties DatastoreStatus

-- | The FHIR version. Only R4 version data is supported.
datastoreProperties_datastoreTypeVersion :: Lens' DatastoreProperties FHIRVersion

-- | The AWS endpoint for the Data Store. Each Data Store will have it's
--   own endpoint with Data Store ID in the endpoint URL.
datastoreProperties_datastoreEndpoint :: Lens' DatastoreProperties Text
instance GHC.Generics.Generic Network.AWS.HealthLake.Types.DatastoreProperties.DatastoreProperties
instance GHC.Show.Show Network.AWS.HealthLake.Types.DatastoreProperties.DatastoreProperties
instance GHC.Read.Read Network.AWS.HealthLake.Types.DatastoreProperties.DatastoreProperties
instance GHC.Classes.Eq Network.AWS.HealthLake.Types.DatastoreProperties.DatastoreProperties
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.HealthLake.Types.DatastoreProperties.DatastoreProperties
instance Data.Hashable.Class.Hashable Network.AWS.HealthLake.Types.DatastoreProperties.DatastoreProperties
instance Control.DeepSeq.NFData Network.AWS.HealthLake.Types.DatastoreProperties.DatastoreProperties


module Network.AWS.HealthLake.Types.Tag

-- | A tag is a label consisting of a user-defined key and value. The form
--   for tags is {"Key", "Value"}
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | The key portion of a tag. Tag keys are case sensitive.
[$sel:key:Tag'] :: Tag -> Text

-- | The value portion of tag. Tag values are case sensitive.
[$sel:value:Tag'] :: Tag -> Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The key portion of a tag. Tag
--   keys are case sensitive.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The value portion of tag.
--   Tag values are case sensitive.
newTag :: Text -> Text -> Tag

-- | The key portion of a tag. Tag keys are case sensitive.
tag_key :: Lens' Tag Text

-- | The value portion of tag. Tag values are case sensitive.
tag_value :: Lens' Tag Text
instance GHC.Generics.Generic Network.AWS.HealthLake.Types.Tag.Tag
instance GHC.Show.Show Network.AWS.HealthLake.Types.Tag.Tag
instance GHC.Read.Read Network.AWS.HealthLake.Types.Tag.Tag
instance GHC.Classes.Eq Network.AWS.HealthLake.Types.Tag.Tag
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.HealthLake.Types.Tag.Tag
instance Data.Hashable.Class.Hashable Network.AWS.HealthLake.Types.Tag.Tag
instance Control.DeepSeq.NFData Network.AWS.HealthLake.Types.Tag.Tag
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.HealthLake.Types.Tag.Tag


module Network.AWS.HealthLake.Types

-- | API version <tt>2017-07-01</tt> of the Amazon HealthLake SDK
--   configuration.
defaultService :: Service

-- | The user input parameter was invalid.
_ValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Access is denied. Your account is not authorized to perform this
--   operation.
_AccessDeniedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The Data Store is in a transition state and the user requested action
--   can not be performed.
_ConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The user has exceeded their maximum number of allowed calls to the
--   given API.
_ThrottlingException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Unknown error occurs in the service.
_InternalServerException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested Data Store was not found.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError
newtype CmkType
CmkType' :: Text -> CmkType
[fromCmkType] :: CmkType -> Text
pattern CmkType_AWS_OWNED_KMS_KEY :: CmkType
pattern CmkType_CUSTOMER_MANAGED_KMS_KEY :: CmkType
newtype DatastoreStatus
DatastoreStatus' :: Text -> DatastoreStatus
[fromDatastoreStatus] :: DatastoreStatus -> Text
pattern DatastoreStatus_ACTIVE :: DatastoreStatus
pattern DatastoreStatus_CREATING :: DatastoreStatus
pattern DatastoreStatus_DELETED :: DatastoreStatus
pattern DatastoreStatus_DELETING :: DatastoreStatus
newtype FHIRVersion
FHIRVersion' :: Text -> FHIRVersion
[fromFHIRVersion] :: FHIRVersion -> Text
pattern FHIRVersion_R4 :: FHIRVersion
newtype JobStatus
JobStatus' :: Text -> JobStatus
[fromJobStatus] :: JobStatus -> Text
pattern JobStatus_COMPLETED :: JobStatus
pattern JobStatus_COMPLETED_WITH_ERRORS :: JobStatus
pattern JobStatus_FAILED :: JobStatus
pattern JobStatus_IN_PROGRESS :: JobStatus
pattern JobStatus_SUBMITTED :: JobStatus
newtype PreloadDataType
PreloadDataType' :: Text -> PreloadDataType
[fromPreloadDataType] :: PreloadDataType -> Text
pattern PreloadDataType_SYNTHEA :: PreloadDataType

-- | The filters applied to Data Store query.
--   
--   <i>See:</i> <a>newDatastoreFilter</a> smart constructor.
data DatastoreFilter
DatastoreFilter' :: Maybe POSIX -> Maybe Text -> Maybe DatastoreStatus -> Maybe POSIX -> DatastoreFilter

-- | A filter that allows the user to set cutoff dates for records. All
--   Data Stores created after the specified date will be included in the
--   results.
[$sel:createdAfter:DatastoreFilter'] :: DatastoreFilter -> Maybe POSIX

-- | Allows the user to filter Data Store results by name.
[$sel:datastoreName:DatastoreFilter'] :: DatastoreFilter -> Maybe Text

-- | Allows the user to filter Data Store results by status.
[$sel:datastoreStatus:DatastoreFilter'] :: DatastoreFilter -> Maybe DatastoreStatus

-- | A filter that allows the user to set cutoff dates for records. All
--   Data Stores created before the specified date will be included in the
--   results.
[$sel:createdBefore:DatastoreFilter'] :: DatastoreFilter -> Maybe POSIX

-- | Create a value of <a>DatastoreFilter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdAfter:DatastoreFilter'</a>,
--   <a>datastoreFilter_createdAfter</a> - A filter that allows the user to
--   set cutoff dates for records. All Data Stores created after the
--   specified date will be included in the results.
--   
--   <a>$sel:datastoreName:DatastoreFilter'</a>,
--   <a>datastoreFilter_datastoreName</a> - Allows the user to filter Data
--   Store results by name.
--   
--   <a>$sel:datastoreStatus:DatastoreFilter'</a>,
--   <a>datastoreFilter_datastoreStatus</a> - Allows the user to filter
--   Data Store results by status.
--   
--   <a>$sel:createdBefore:DatastoreFilter'</a>,
--   <a>datastoreFilter_createdBefore</a> - A filter that allows the user
--   to set cutoff dates for records. All Data Stores created before the
--   specified date will be included in the results.
newDatastoreFilter :: DatastoreFilter

-- | A filter that allows the user to set cutoff dates for records. All
--   Data Stores created after the specified date will be included in the
--   results.
datastoreFilter_createdAfter :: Lens' DatastoreFilter (Maybe UTCTime)

-- | Allows the user to filter Data Store results by name.
datastoreFilter_datastoreName :: Lens' DatastoreFilter (Maybe Text)

-- | Allows the user to filter Data Store results by status.
datastoreFilter_datastoreStatus :: Lens' DatastoreFilter (Maybe DatastoreStatus)

-- | A filter that allows the user to set cutoff dates for records. All
--   Data Stores created before the specified date will be included in the
--   results.
datastoreFilter_createdBefore :: Lens' DatastoreFilter (Maybe UTCTime)

-- | Displays the properties of the Data Store, including the ID, Arn,
--   name, and the status of the Data Store.
--   
--   <i>See:</i> <a>newDatastoreProperties</a> smart constructor.
data DatastoreProperties
DatastoreProperties' :: Maybe SseConfiguration -> Maybe POSIX -> Maybe Text -> Maybe PreloadDataConfig -> Text -> Text -> DatastoreStatus -> FHIRVersion -> Text -> DatastoreProperties

-- | The server-side encryption key configuration for a customer provided
--   encryption key (CMK).
[$sel:sseConfiguration:DatastoreProperties'] :: DatastoreProperties -> Maybe SseConfiguration

-- | The time that a Data Store was created.
[$sel:createdAt:DatastoreProperties'] :: DatastoreProperties -> Maybe POSIX

-- | The user-generated name for the Data Store.
[$sel:datastoreName:DatastoreProperties'] :: DatastoreProperties -> Maybe Text

-- | The preloaded data configuration for the Data Store. Only data
--   preloaded from Synthea is supported.
[$sel:preloadDataConfig:DatastoreProperties'] :: DatastoreProperties -> Maybe PreloadDataConfig

-- | The AWS-generated ID number for the Data Store.
[$sel:datastoreId:DatastoreProperties'] :: DatastoreProperties -> Text

-- | The Amazon Resource Name used in the creation of the Data Store.
[$sel:datastoreArn:DatastoreProperties'] :: DatastoreProperties -> Text

-- | The status of the Data Store. Possible statuses are 'CREATING',
--   'ACTIVE', 'DELETING', or 'DELETED'.
[$sel:datastoreStatus:DatastoreProperties'] :: DatastoreProperties -> DatastoreStatus

-- | The FHIR version. Only R4 version data is supported.
[$sel:datastoreTypeVersion:DatastoreProperties'] :: DatastoreProperties -> FHIRVersion

-- | The AWS endpoint for the Data Store. Each Data Store will have it's
--   own endpoint with Data Store ID in the endpoint URL.
[$sel:datastoreEndpoint:DatastoreProperties'] :: DatastoreProperties -> Text

-- | Create a value of <a>DatastoreProperties</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sseConfiguration:DatastoreProperties'</a>,
--   <a>datastoreProperties_sseConfiguration</a> - The server-side
--   encryption key configuration for a customer provided encryption key
--   (CMK).
--   
--   <a>$sel:createdAt:DatastoreProperties'</a>,
--   <a>datastoreProperties_createdAt</a> - The time that a Data Store was
--   created.
--   
--   <a>$sel:datastoreName:DatastoreProperties'</a>,
--   <a>datastoreProperties_datastoreName</a> - The user-generated name for
--   the Data Store.
--   
--   <a>$sel:preloadDataConfig:DatastoreProperties'</a>,
--   <a>datastoreProperties_preloadDataConfig</a> - The preloaded data
--   configuration for the Data Store. Only data preloaded from Synthea is
--   supported.
--   
--   <a>$sel:datastoreId:DatastoreProperties'</a>,
--   <a>datastoreProperties_datastoreId</a> - The AWS-generated ID number
--   for the Data Store.
--   
--   <a>$sel:datastoreArn:DatastoreProperties'</a>,
--   <a>datastoreProperties_datastoreArn</a> - The Amazon Resource Name
--   used in the creation of the Data Store.
--   
--   <a>$sel:datastoreStatus:DatastoreProperties'</a>,
--   <a>datastoreProperties_datastoreStatus</a> - The status of the Data
--   Store. Possible statuses are 'CREATING', 'ACTIVE', 'DELETING', or
--   'DELETED'.
--   
--   <a>$sel:datastoreTypeVersion:DatastoreProperties'</a>,
--   <a>datastoreProperties_datastoreTypeVersion</a> - The FHIR version.
--   Only R4 version data is supported.
--   
--   <a>$sel:datastoreEndpoint:DatastoreProperties'</a>,
--   <a>datastoreProperties_datastoreEndpoint</a> - The AWS endpoint for
--   the Data Store. Each Data Store will have it's own endpoint with Data
--   Store ID in the endpoint URL.
newDatastoreProperties :: Text -> Text -> DatastoreStatus -> FHIRVersion -> Text -> DatastoreProperties

-- | The server-side encryption key configuration for a customer provided
--   encryption key (CMK).
datastoreProperties_sseConfiguration :: Lens' DatastoreProperties (Maybe SseConfiguration)

-- | The time that a Data Store was created.
datastoreProperties_createdAt :: Lens' DatastoreProperties (Maybe UTCTime)

-- | The user-generated name for the Data Store.
datastoreProperties_datastoreName :: Lens' DatastoreProperties (Maybe Text)

-- | The preloaded data configuration for the Data Store. Only data
--   preloaded from Synthea is supported.
datastoreProperties_preloadDataConfig :: Lens' DatastoreProperties (Maybe PreloadDataConfig)

-- | The AWS-generated ID number for the Data Store.
datastoreProperties_datastoreId :: Lens' DatastoreProperties Text

-- | The Amazon Resource Name used in the creation of the Data Store.
datastoreProperties_datastoreArn :: Lens' DatastoreProperties Text

-- | The status of the Data Store. Possible statuses are 'CREATING',
--   'ACTIVE', 'DELETING', or 'DELETED'.
datastoreProperties_datastoreStatus :: Lens' DatastoreProperties DatastoreStatus

-- | The FHIR version. Only R4 version data is supported.
datastoreProperties_datastoreTypeVersion :: Lens' DatastoreProperties FHIRVersion

-- | The AWS endpoint for the Data Store. Each Data Store will have it's
--   own endpoint with Data Store ID in the endpoint URL.
datastoreProperties_datastoreEndpoint :: Lens' DatastoreProperties Text

-- | The properties of a FHIR export job, including the ID, ARN, name, and
--   the status of the job.
--   
--   <i>See:</i> <a>newExportJobProperties</a> smart constructor.
data ExportJobProperties
ExportJobProperties' :: Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Text -> JobStatus -> POSIX -> Text -> OutputDataConfig -> ExportJobProperties

-- | The user generated name for an export job.
[$sel:jobName:ExportJobProperties'] :: ExportJobProperties -> Maybe Text

-- | The time an export job completed.
[$sel:endTime:ExportJobProperties'] :: ExportJobProperties -> Maybe POSIX

-- | The Amazon Resource Name used during the initiation of the job.
[$sel:dataAccessRoleArn:ExportJobProperties'] :: ExportJobProperties -> Maybe Text

-- | An explanation of any errors that may have occurred during the export
--   job.
[$sel:message:ExportJobProperties'] :: ExportJobProperties -> Maybe Text

-- | The AWS generated ID for an export job.
[$sel:jobId:ExportJobProperties'] :: ExportJobProperties -> Text

-- | The status of a FHIR export job. Possible statuses are SUBMITTED,
--   IN_PROGRESS, COMPLETED, or FAILED.
[$sel:jobStatus:ExportJobProperties'] :: ExportJobProperties -> JobStatus

-- | The time an export job was initiated.
[$sel:submitTime:ExportJobProperties'] :: ExportJobProperties -> POSIX

-- | The AWS generated ID for the Data Store from which files are being
--   exported for an export job.
[$sel:datastoreId:ExportJobProperties'] :: ExportJobProperties -> Text

-- | The output data configuration that was supplied when the export job
--   was created.
[$sel:outputDataConfig:ExportJobProperties'] :: ExportJobProperties -> OutputDataConfig

-- | Create a value of <a>ExportJobProperties</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobName:ExportJobProperties'</a>,
--   <a>exportJobProperties_jobName</a> - The user generated name for an
--   export job.
--   
--   <a>$sel:endTime:ExportJobProperties'</a>,
--   <a>exportJobProperties_endTime</a> - The time an export job completed.
--   
--   <a>$sel:dataAccessRoleArn:ExportJobProperties'</a>,
--   <a>exportJobProperties_dataAccessRoleArn</a> - The Amazon Resource
--   Name used during the initiation of the job.
--   
--   <a>$sel:message:ExportJobProperties'</a>,
--   <a>exportJobProperties_message</a> - An explanation of any errors that
--   may have occurred during the export job.
--   
--   <a>$sel:jobId:ExportJobProperties'</a>,
--   <a>exportJobProperties_jobId</a> - The AWS generated ID for an export
--   job.
--   
--   <a>$sel:jobStatus:ExportJobProperties'</a>,
--   <a>exportJobProperties_jobStatus</a> - The status of a FHIR export
--   job. Possible statuses are SUBMITTED, IN_PROGRESS, COMPLETED, or
--   FAILED.
--   
--   <a>$sel:submitTime:ExportJobProperties'</a>,
--   <a>exportJobProperties_submitTime</a> - The time an export job was
--   initiated.
--   
--   <a>$sel:datastoreId:ExportJobProperties'</a>,
--   <a>exportJobProperties_datastoreId</a> - The AWS generated ID for the
--   Data Store from which files are being exported for an export job.
--   
--   <a>$sel:outputDataConfig:ExportJobProperties'</a>,
--   <a>exportJobProperties_outputDataConfig</a> - The output data
--   configuration that was supplied when the export job was created.
newExportJobProperties :: Text -> JobStatus -> UTCTime -> Text -> OutputDataConfig -> ExportJobProperties

-- | The user generated name for an export job.
exportJobProperties_jobName :: Lens' ExportJobProperties (Maybe Text)

-- | The time an export job completed.
exportJobProperties_endTime :: Lens' ExportJobProperties (Maybe UTCTime)

-- | The Amazon Resource Name used during the initiation of the job.
exportJobProperties_dataAccessRoleArn :: Lens' ExportJobProperties (Maybe Text)

-- | An explanation of any errors that may have occurred during the export
--   job.
exportJobProperties_message :: Lens' ExportJobProperties (Maybe Text)

-- | The AWS generated ID for an export job.
exportJobProperties_jobId :: Lens' ExportJobProperties Text

-- | The status of a FHIR export job. Possible statuses are SUBMITTED,
--   IN_PROGRESS, COMPLETED, or FAILED.
exportJobProperties_jobStatus :: Lens' ExportJobProperties JobStatus

-- | The time an export job was initiated.
exportJobProperties_submitTime :: Lens' ExportJobProperties UTCTime

-- | The AWS generated ID for the Data Store from which files are being
--   exported for an export job.
exportJobProperties_datastoreId :: Lens' ExportJobProperties Text

-- | The output data configuration that was supplied when the export job
--   was created.
exportJobProperties_outputDataConfig :: Lens' ExportJobProperties OutputDataConfig

-- | Displays the properties of the import job, including the ID, Arn,
--   Name, and the status of the Data Store.
--   
--   <i>See:</i> <a>newImportJobProperties</a> smart constructor.
data ImportJobProperties
ImportJobProperties' :: Maybe OutputDataConfig -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Text -> JobStatus -> POSIX -> Text -> InputDataConfig -> ImportJobProperties
[$sel:jobOutputDataConfig:ImportJobProperties'] :: ImportJobProperties -> Maybe OutputDataConfig

-- | The user-generated name for an Import job.
[$sel:jobName:ImportJobProperties'] :: ImportJobProperties -> Maybe Text

-- | The time that the Import job was completed.
[$sel:endTime:ImportJobProperties'] :: ImportJobProperties -> Maybe POSIX

-- | The Amazon Resource Name (ARN) that gives Amazon HealthLake access to
--   your input data.
[$sel:dataAccessRoleArn:ImportJobProperties'] :: ImportJobProperties -> Maybe Text

-- | An explanation of any errors that may have occurred during the FHIR
--   import job.
[$sel:message:ImportJobProperties'] :: ImportJobProperties -> Maybe Text

-- | The AWS-generated id number for the Import job.
[$sel:jobId:ImportJobProperties'] :: ImportJobProperties -> Text

-- | The job status for an Import job. Possible statuses are SUBMITTED,
--   IN_PROGRESS, COMPLETED, FAILED.
[$sel:jobStatus:ImportJobProperties'] :: ImportJobProperties -> JobStatus

-- | The time that the Import job was submitted for processing.
[$sel:submitTime:ImportJobProperties'] :: ImportJobProperties -> POSIX

-- | The datastore id used when the Import job was created.
[$sel:datastoreId:ImportJobProperties'] :: ImportJobProperties -> Text

-- | The input data configuration that was supplied when the Import job was
--   created.
[$sel:inputDataConfig:ImportJobProperties'] :: ImportJobProperties -> InputDataConfig

-- | Create a value of <a>ImportJobProperties</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobOutputDataConfig:ImportJobProperties'</a>,
--   <a>importJobProperties_jobOutputDataConfig</a> - Undocumented member.
--   
--   <a>$sel:jobName:ImportJobProperties'</a>,
--   <a>importJobProperties_jobName</a> - The user-generated name for an
--   Import job.
--   
--   <a>$sel:endTime:ImportJobProperties'</a>,
--   <a>importJobProperties_endTime</a> - The time that the Import job was
--   completed.
--   
--   <a>$sel:dataAccessRoleArn:ImportJobProperties'</a>,
--   <a>importJobProperties_dataAccessRoleArn</a> - The Amazon Resource
--   Name (ARN) that gives Amazon HealthLake access to your input data.
--   
--   <a>$sel:message:ImportJobProperties'</a>,
--   <a>importJobProperties_message</a> - An explanation of any errors that
--   may have occurred during the FHIR import job.
--   
--   <a>$sel:jobId:ImportJobProperties'</a>,
--   <a>importJobProperties_jobId</a> - The AWS-generated id number for the
--   Import job.
--   
--   <a>$sel:jobStatus:ImportJobProperties'</a>,
--   <a>importJobProperties_jobStatus</a> - The job status for an Import
--   job. Possible statuses are SUBMITTED, IN_PROGRESS, COMPLETED, FAILED.
--   
--   <a>$sel:submitTime:ImportJobProperties'</a>,
--   <a>importJobProperties_submitTime</a> - The time that the Import job
--   was submitted for processing.
--   
--   <a>$sel:datastoreId:ImportJobProperties'</a>,
--   <a>importJobProperties_datastoreId</a> - The datastore id used when
--   the Import job was created.
--   
--   <a>$sel:inputDataConfig:ImportJobProperties'</a>,
--   <a>importJobProperties_inputDataConfig</a> - The input data
--   configuration that was supplied when the Import job was created.
newImportJobProperties :: Text -> JobStatus -> UTCTime -> Text -> InputDataConfig -> ImportJobProperties

-- | Undocumented member.
importJobProperties_jobOutputDataConfig :: Lens' ImportJobProperties (Maybe OutputDataConfig)

-- | The user-generated name for an Import job.
importJobProperties_jobName :: Lens' ImportJobProperties (Maybe Text)

-- | The time that the Import job was completed.
importJobProperties_endTime :: Lens' ImportJobProperties (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) that gives Amazon HealthLake access to
--   your input data.
importJobProperties_dataAccessRoleArn :: Lens' ImportJobProperties (Maybe Text)

-- | An explanation of any errors that may have occurred during the FHIR
--   import job.
importJobProperties_message :: Lens' ImportJobProperties (Maybe Text)

-- | The AWS-generated id number for the Import job.
importJobProperties_jobId :: Lens' ImportJobProperties Text

-- | The job status for an Import job. Possible statuses are SUBMITTED,
--   IN_PROGRESS, COMPLETED, FAILED.
importJobProperties_jobStatus :: Lens' ImportJobProperties JobStatus

-- | The time that the Import job was submitted for processing.
importJobProperties_submitTime :: Lens' ImportJobProperties UTCTime

-- | The datastore id used when the Import job was created.
importJobProperties_datastoreId :: Lens' ImportJobProperties Text

-- | The input data configuration that was supplied when the Import job was
--   created.
importJobProperties_inputDataConfig :: Lens' ImportJobProperties InputDataConfig

-- | The input properties for an import job.
--   
--   <i>See:</i> <a>newInputDataConfig</a> smart constructor.
data InputDataConfig
InputDataConfig' :: Maybe Text -> InputDataConfig

-- | The S3Uri is the user specified S3 location of the FHIR data to be
--   imported into Amazon HealthLake.
[$sel:s3Uri:InputDataConfig'] :: InputDataConfig -> Maybe Text

-- | Create a value of <a>InputDataConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3Uri:InputDataConfig'</a>, <a>inputDataConfig_s3Uri</a> - The
--   S3Uri is the user specified S3 location of the FHIR data to be
--   imported into Amazon HealthLake.
newInputDataConfig :: InputDataConfig

-- | The S3Uri is the user specified S3 location of the FHIR data to be
--   imported into Amazon HealthLake.
inputDataConfig_s3Uri :: Lens' InputDataConfig (Maybe Text)

-- | The customer-managed-key(CMK) used when creating a Data Store. If a
--   customer owned key is not specified, an AWS owned key will be used for
--   encryption.
--   
--   <i>See:</i> <a>newKmsEncryptionConfig</a> smart constructor.
data KmsEncryptionConfig
KmsEncryptionConfig' :: Maybe Text -> CmkType -> KmsEncryptionConfig

-- | The KMS encryption key id/alias used to encrypt the Data Store
--   contents at rest.
[$sel:kmsKeyId:KmsEncryptionConfig'] :: KmsEncryptionConfig -> Maybe Text

-- | The type of customer-managed-key(CMK) used for encyrption. The two
--   types of supported CMKs are customer owned CMKs and AWS owned CMKs.
[$sel:cmkType:KmsEncryptionConfig'] :: KmsEncryptionConfig -> CmkType

-- | Create a value of <a>KmsEncryptionConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:kmsKeyId:KmsEncryptionConfig'</a>,
--   <a>kmsEncryptionConfig_kmsKeyId</a> - The KMS encryption key id/alias
--   used to encrypt the Data Store contents at rest.
--   
--   <a>$sel:cmkType:KmsEncryptionConfig'</a>,
--   <a>kmsEncryptionConfig_cmkType</a> - The type of
--   customer-managed-key(CMK) used for encyrption. The two types of
--   supported CMKs are customer owned CMKs and AWS owned CMKs.
newKmsEncryptionConfig :: CmkType -> KmsEncryptionConfig

-- | The KMS encryption key id/alias used to encrypt the Data Store
--   contents at rest.
kmsEncryptionConfig_kmsKeyId :: Lens' KmsEncryptionConfig (Maybe Text)

-- | The type of customer-managed-key(CMK) used for encyrption. The two
--   types of supported CMKs are customer owned CMKs and AWS owned CMKs.
kmsEncryptionConfig_cmkType :: Lens' KmsEncryptionConfig CmkType

-- | The output data configuration that was supplied when the export job
--   was created.
--   
--   <i>See:</i> <a>newOutputDataConfig</a> smart constructor.
data OutputDataConfig
OutputDataConfig' :: Maybe S3Configuration -> OutputDataConfig

-- | The output data configuration that was supplied when the export job
--   was created.
[$sel:s3Configuration:OutputDataConfig'] :: OutputDataConfig -> Maybe S3Configuration

-- | Create a value of <a>OutputDataConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3Configuration:OutputDataConfig'</a>,
--   <a>outputDataConfig_s3Configuration</a> - The output data
--   configuration that was supplied when the export job was created.
newOutputDataConfig :: OutputDataConfig

-- | The output data configuration that was supplied when the export job
--   was created.
outputDataConfig_s3Configuration :: Lens' OutputDataConfig (Maybe S3Configuration)

-- | The input properties for the preloaded Data Store. Only data preloaded
--   from Synthea is supported.
--   
--   <i>See:</i> <a>newPreloadDataConfig</a> smart constructor.
data PreloadDataConfig
PreloadDataConfig' :: PreloadDataType -> PreloadDataConfig

-- | The type of preloaded data. Only Synthea preloaded data is supported.
[$sel:preloadDataType:PreloadDataConfig'] :: PreloadDataConfig -> PreloadDataType

-- | Create a value of <a>PreloadDataConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:preloadDataType:PreloadDataConfig'</a>,
--   <a>preloadDataConfig_preloadDataType</a> - The type of preloaded data.
--   Only Synthea preloaded data is supported.
newPreloadDataConfig :: PreloadDataType -> PreloadDataConfig

-- | The type of preloaded data. Only Synthea preloaded data is supported.
preloadDataConfig_preloadDataType :: Lens' PreloadDataConfig PreloadDataType

-- | The configuration of the S3 bucket for either an import or export job.
--   This includes assigning permissions for access.
--   
--   <i>See:</i> <a>newS3Configuration</a> smart constructor.
data S3Configuration
S3Configuration' :: Text -> Text -> S3Configuration

-- | The S3Uri is the user specified S3 location of the FHIR data to be
--   imported into Amazon HealthLake.
[$sel:s3Uri:S3Configuration'] :: S3Configuration -> Text

-- | The KMS key ID used to access the S3 bucket.
[$sel:kmsKeyId:S3Configuration'] :: S3Configuration -> Text

-- | Create a value of <a>S3Configuration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3Uri:S3Configuration'</a>, <a>s3Configuration_s3Uri</a> - The
--   S3Uri is the user specified S3 location of the FHIR data to be
--   imported into Amazon HealthLake.
--   
--   <a>$sel:kmsKeyId:S3Configuration'</a>, <a>s3Configuration_kmsKeyId</a>
--   - The KMS key ID used to access the S3 bucket.
newS3Configuration :: Text -> Text -> S3Configuration

-- | The S3Uri is the user specified S3 location of the FHIR data to be
--   imported into Amazon HealthLake.
s3Configuration_s3Uri :: Lens' S3Configuration Text

-- | The KMS key ID used to access the S3 bucket.
s3Configuration_kmsKeyId :: Lens' S3Configuration Text

-- | The server-side encryption key configuration for a customer provided
--   encryption key.
--   
--   <i>See:</i> <a>newSseConfiguration</a> smart constructor.
data SseConfiguration
SseConfiguration' :: KmsEncryptionConfig -> SseConfiguration

-- | The KMS encryption configuration used to provide details for data
--   encryption.
[$sel:kmsEncryptionConfig:SseConfiguration'] :: SseConfiguration -> KmsEncryptionConfig

-- | Create a value of <a>SseConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:kmsEncryptionConfig:SseConfiguration'</a>,
--   <a>sseConfiguration_kmsEncryptionConfig</a> - The KMS encryption
--   configuration used to provide details for data encryption.
newSseConfiguration :: KmsEncryptionConfig -> SseConfiguration

-- | The KMS encryption configuration used to provide details for data
--   encryption.
sseConfiguration_kmsEncryptionConfig :: Lens' SseConfiguration KmsEncryptionConfig

-- | A tag is a label consisting of a user-defined key and value. The form
--   for tags is {"Key", "Value"}
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | The key portion of a tag. Tag keys are case sensitive.
[$sel:key:Tag'] :: Tag -> Text

-- | The value portion of tag. Tag values are case sensitive.
[$sel:value:Tag'] :: Tag -> Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The key portion of a tag. Tag
--   keys are case sensitive.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The value portion of tag.
--   Tag values are case sensitive.
newTag :: Text -> Text -> Tag

-- | The key portion of a tag. Tag keys are case sensitive.
tag_key :: Lens' Tag Text

-- | The value portion of tag. Tag values are case sensitive.
tag_value :: Lens' Tag Text


-- | Adds a user specifed key and value tag to a Data Store.
module Network.AWS.HealthLake.TagResource

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> [Tag] -> TagResource

-- | The Amazon Resource Name(ARN)that gives Amazon HealthLake access to
--   the Data Store which tags are being added to.
[$sel:resourceARN:TagResource'] :: TagResource -> Text

-- | The user specified key and value pair tags being added to a Data
--   Store.
[$sel:tags:TagResource'] :: TagResource -> [Tag]

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:TagResource'</a>, <a>tagResource_resourceARN</a> -
--   The Amazon Resource Name(ARN)that gives Amazon HealthLake access to
--   the Data Store which tags are being added to.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - The user
--   specified key and value pair tags being added to a Data Store.
newTagResource :: Text -> TagResource

-- | The Amazon Resource Name(ARN)that gives Amazon HealthLake access to
--   the Data Store which tags are being added to.
tagResource_resourceARN :: Lens' TagResource Text

-- | The user specified key and value pair tags being added to a Data
--   Store.
tagResource_tags :: Lens' TagResource [Tag]

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:TagResourceResponse'] :: TagResourceResponse -> Int

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int
instance GHC.Generics.Generic Network.AWS.HealthLake.TagResource.TagResource
instance GHC.Show.Show Network.AWS.HealthLake.TagResource.TagResource
instance GHC.Read.Read Network.AWS.HealthLake.TagResource.TagResource
instance GHC.Classes.Eq Network.AWS.HealthLake.TagResource.TagResource
instance GHC.Generics.Generic Network.AWS.HealthLake.TagResource.TagResourceResponse
instance GHC.Show.Show Network.AWS.HealthLake.TagResource.TagResourceResponse
instance GHC.Read.Read Network.AWS.HealthLake.TagResource.TagResourceResponse
instance GHC.Classes.Eq Network.AWS.HealthLake.TagResource.TagResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.HealthLake.TagResource.TagResource
instance Control.DeepSeq.NFData Network.AWS.HealthLake.TagResource.TagResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.HealthLake.TagResource.TagResource
instance Control.DeepSeq.NFData Network.AWS.HealthLake.TagResource.TagResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.HealthLake.TagResource.TagResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.HealthLake.TagResource.TagResource
instance Network.AWS.Data.Path.ToPath Network.AWS.HealthLake.TagResource.TagResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.HealthLake.TagResource.TagResource


-- | Begins a FHIR Import job.
module Network.AWS.HealthLake.StartFHIRImportJob

-- | <i>See:</i> <a>newStartFHIRImportJob</a> smart constructor.
data StartFHIRImportJob
StartFHIRImportJob' :: Maybe Text -> InputDataConfig -> OutputDataConfig -> Text -> Text -> Text -> StartFHIRImportJob

-- | The name of the FHIR Import job in the StartFHIRImport job request.
[$sel:jobName:StartFHIRImportJob'] :: StartFHIRImportJob -> Maybe Text

-- | The input properties of the FHIR Import job in the StartFHIRImport job
--   request.
[$sel:inputDataConfig:StartFHIRImportJob'] :: StartFHIRImportJob -> InputDataConfig
[$sel:jobOutputDataConfig:StartFHIRImportJob'] :: StartFHIRImportJob -> OutputDataConfig

-- | The AWS-generated Data Store ID.
[$sel:datastoreId:StartFHIRImportJob'] :: StartFHIRImportJob -> Text

-- | The Amazon Resource Name (ARN) that gives Amazon HealthLake access
--   permission.
[$sel:dataAccessRoleArn:StartFHIRImportJob'] :: StartFHIRImportJob -> Text

-- | Optional user provided token used for ensuring idempotency.
[$sel:clientToken:StartFHIRImportJob'] :: StartFHIRImportJob -> Text

-- | Create a value of <a>StartFHIRImportJob</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobName:StartFHIRImportJob'</a>,
--   <a>startFHIRImportJob_jobName</a> - The name of the FHIR Import job in
--   the StartFHIRImport job request.
--   
--   <a>$sel:inputDataConfig:StartFHIRImportJob'</a>,
--   <a>startFHIRImportJob_inputDataConfig</a> - The input properties of
--   the FHIR Import job in the StartFHIRImport job request.
--   
--   <a>$sel:jobOutputDataConfig:StartFHIRImportJob'</a>,
--   <a>startFHIRImportJob_jobOutputDataConfig</a> - Undocumented member.
--   
--   <a>$sel:datastoreId:StartFHIRImportJob'</a>,
--   <a>startFHIRImportJob_datastoreId</a> - The AWS-generated Data Store
--   ID.
--   
--   <a>$sel:dataAccessRoleArn:StartFHIRImportJob'</a>,
--   <a>startFHIRImportJob_dataAccessRoleArn</a> - The Amazon Resource Name
--   (ARN) that gives Amazon HealthLake access permission.
--   
--   <a>$sel:clientToken:StartFHIRImportJob'</a>,
--   <a>startFHIRImportJob_clientToken</a> - Optional user provided token
--   used for ensuring idempotency.
newStartFHIRImportJob :: InputDataConfig -> OutputDataConfig -> Text -> Text -> Text -> StartFHIRImportJob

-- | The name of the FHIR Import job in the StartFHIRImport job request.
startFHIRImportJob_jobName :: Lens' StartFHIRImportJob (Maybe Text)

-- | The input properties of the FHIR Import job in the StartFHIRImport job
--   request.
startFHIRImportJob_inputDataConfig :: Lens' StartFHIRImportJob InputDataConfig

-- | Undocumented member.
startFHIRImportJob_jobOutputDataConfig :: Lens' StartFHIRImportJob OutputDataConfig

-- | The AWS-generated Data Store ID.
startFHIRImportJob_datastoreId :: Lens' StartFHIRImportJob Text

-- | The Amazon Resource Name (ARN) that gives Amazon HealthLake access
--   permission.
startFHIRImportJob_dataAccessRoleArn :: Lens' StartFHIRImportJob Text

-- | Optional user provided token used for ensuring idempotency.
startFHIRImportJob_clientToken :: Lens' StartFHIRImportJob Text

-- | <i>See:</i> <a>newStartFHIRImportJobResponse</a> smart constructor.
data StartFHIRImportJobResponse
StartFHIRImportJobResponse' :: Maybe Text -> Int -> Text -> JobStatus -> StartFHIRImportJobResponse

-- | The AWS-generated Data Store ID.
[$sel:datastoreId:StartFHIRImportJobResponse'] :: StartFHIRImportJobResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:StartFHIRImportJobResponse'] :: StartFHIRImportJobResponse -> Int

-- | The AWS-generated job ID.
[$sel:jobId:StartFHIRImportJobResponse'] :: StartFHIRImportJobResponse -> Text

-- | The status of an import job.
[$sel:jobStatus:StartFHIRImportJobResponse'] :: StartFHIRImportJobResponse -> JobStatus

-- | Create a value of <a>StartFHIRImportJobResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:datastoreId:StartFHIRImportJob'</a>,
--   <a>startFHIRImportJobResponse_datastoreId</a> - The AWS-generated Data
--   Store ID.
--   
--   <a>$sel:httpStatus:StartFHIRImportJobResponse'</a>,
--   <a>startFHIRImportJobResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:jobId:StartFHIRImportJobResponse'</a>,
--   <a>startFHIRImportJobResponse_jobId</a> - The AWS-generated job ID.
--   
--   <a>$sel:jobStatus:StartFHIRImportJobResponse'</a>,
--   <a>startFHIRImportJobResponse_jobStatus</a> - The status of an import
--   job.
newStartFHIRImportJobResponse :: Int -> Text -> JobStatus -> StartFHIRImportJobResponse

-- | The AWS-generated Data Store ID.
startFHIRImportJobResponse_datastoreId :: Lens' StartFHIRImportJobResponse (Maybe Text)

-- | The response's http status code.
startFHIRImportJobResponse_httpStatus :: Lens' StartFHIRImportJobResponse Int

-- | The AWS-generated job ID.
startFHIRImportJobResponse_jobId :: Lens' StartFHIRImportJobResponse Text

-- | The status of an import job.
startFHIRImportJobResponse_jobStatus :: Lens' StartFHIRImportJobResponse JobStatus
instance GHC.Generics.Generic Network.AWS.HealthLake.StartFHIRImportJob.StartFHIRImportJob
instance GHC.Show.Show Network.AWS.HealthLake.StartFHIRImportJob.StartFHIRImportJob
instance GHC.Read.Read Network.AWS.HealthLake.StartFHIRImportJob.StartFHIRImportJob
instance GHC.Classes.Eq Network.AWS.HealthLake.StartFHIRImportJob.StartFHIRImportJob
instance GHC.Generics.Generic Network.AWS.HealthLake.StartFHIRImportJob.StartFHIRImportJobResponse
instance GHC.Show.Show Network.AWS.HealthLake.StartFHIRImportJob.StartFHIRImportJobResponse
instance GHC.Read.Read Network.AWS.HealthLake.StartFHIRImportJob.StartFHIRImportJobResponse
instance GHC.Classes.Eq Network.AWS.HealthLake.StartFHIRImportJob.StartFHIRImportJobResponse
instance Network.AWS.Types.AWSRequest Network.AWS.HealthLake.StartFHIRImportJob.StartFHIRImportJob
instance Control.DeepSeq.NFData Network.AWS.HealthLake.StartFHIRImportJob.StartFHIRImportJobResponse
instance Data.Hashable.Class.Hashable Network.AWS.HealthLake.StartFHIRImportJob.StartFHIRImportJob
instance Control.DeepSeq.NFData Network.AWS.HealthLake.StartFHIRImportJob.StartFHIRImportJob
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.HealthLake.StartFHIRImportJob.StartFHIRImportJob
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.HealthLake.StartFHIRImportJob.StartFHIRImportJob
instance Network.AWS.Data.Path.ToPath Network.AWS.HealthLake.StartFHIRImportJob.StartFHIRImportJob
instance Network.AWS.Data.Query.ToQuery Network.AWS.HealthLake.StartFHIRImportJob.StartFHIRImportJob


-- | Begins a FHIR export job.
module Network.AWS.HealthLake.StartFHIRExportJob

-- | <i>See:</i> <a>newStartFHIRExportJob</a> smart constructor.
data StartFHIRExportJob
StartFHIRExportJob' :: Maybe Text -> OutputDataConfig -> Text -> Text -> Text -> StartFHIRExportJob

-- | The user generated name for an export job.
[$sel:jobName:StartFHIRExportJob'] :: StartFHIRExportJob -> Maybe Text

-- | The output data configuration that was supplied when the export job
--   was created.
[$sel:outputDataConfig:StartFHIRExportJob'] :: StartFHIRExportJob -> OutputDataConfig

-- | The AWS generated ID for the Data Store from which files are being
--   exported for an export job.
[$sel:datastoreId:StartFHIRExportJob'] :: StartFHIRExportJob -> Text

-- | The Amazon Resource Name used during the initiation of the job.
[$sel:dataAccessRoleArn:StartFHIRExportJob'] :: StartFHIRExportJob -> Text

-- | An optional user provided token used for ensuring idempotency.
[$sel:clientToken:StartFHIRExportJob'] :: StartFHIRExportJob -> Text

-- | Create a value of <a>StartFHIRExportJob</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobName:StartFHIRExportJob'</a>,
--   <a>startFHIRExportJob_jobName</a> - The user generated name for an
--   export job.
--   
--   <a>$sel:outputDataConfig:StartFHIRExportJob'</a>,
--   <a>startFHIRExportJob_outputDataConfig</a> - The output data
--   configuration that was supplied when the export job was created.
--   
--   <a>$sel:datastoreId:StartFHIRExportJob'</a>,
--   <a>startFHIRExportJob_datastoreId</a> - The AWS generated ID for the
--   Data Store from which files are being exported for an export job.
--   
--   <a>$sel:dataAccessRoleArn:StartFHIRExportJob'</a>,
--   <a>startFHIRExportJob_dataAccessRoleArn</a> - The Amazon Resource Name
--   used during the initiation of the job.
--   
--   <a>$sel:clientToken:StartFHIRExportJob'</a>,
--   <a>startFHIRExportJob_clientToken</a> - An optional user provided
--   token used for ensuring idempotency.
newStartFHIRExportJob :: OutputDataConfig -> Text -> Text -> Text -> StartFHIRExportJob

-- | The user generated name for an export job.
startFHIRExportJob_jobName :: Lens' StartFHIRExportJob (Maybe Text)

-- | The output data configuration that was supplied when the export job
--   was created.
startFHIRExportJob_outputDataConfig :: Lens' StartFHIRExportJob OutputDataConfig

-- | The AWS generated ID for the Data Store from which files are being
--   exported for an export job.
startFHIRExportJob_datastoreId :: Lens' StartFHIRExportJob Text

-- | The Amazon Resource Name used during the initiation of the job.
startFHIRExportJob_dataAccessRoleArn :: Lens' StartFHIRExportJob Text

-- | An optional user provided token used for ensuring idempotency.
startFHIRExportJob_clientToken :: Lens' StartFHIRExportJob Text

-- | <i>See:</i> <a>newStartFHIRExportJobResponse</a> smart constructor.
data StartFHIRExportJobResponse
StartFHIRExportJobResponse' :: Maybe Text -> Int -> Text -> JobStatus -> StartFHIRExportJobResponse

-- | The AWS generated ID for the Data Store from which files are being
--   exported for an export job.
[$sel:datastoreId:StartFHIRExportJobResponse'] :: StartFHIRExportJobResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:StartFHIRExportJobResponse'] :: StartFHIRExportJobResponse -> Int

-- | The AWS generated ID for an export job.
[$sel:jobId:StartFHIRExportJobResponse'] :: StartFHIRExportJobResponse -> Text

-- | The status of a FHIR export job. Possible statuses are SUBMITTED,
--   IN_PROGRESS, COMPLETED, or FAILED.
[$sel:jobStatus:StartFHIRExportJobResponse'] :: StartFHIRExportJobResponse -> JobStatus

-- | Create a value of <a>StartFHIRExportJobResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:datastoreId:StartFHIRExportJob'</a>,
--   <a>startFHIRExportJobResponse_datastoreId</a> - The AWS generated ID
--   for the Data Store from which files are being exported for an export
--   job.
--   
--   <a>$sel:httpStatus:StartFHIRExportJobResponse'</a>,
--   <a>startFHIRExportJobResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:jobId:StartFHIRExportJobResponse'</a>,
--   <a>startFHIRExportJobResponse_jobId</a> - The AWS generated ID for an
--   export job.
--   
--   <a>$sel:jobStatus:StartFHIRExportJobResponse'</a>,
--   <a>startFHIRExportJobResponse_jobStatus</a> - The status of a FHIR
--   export job. Possible statuses are SUBMITTED, IN_PROGRESS, COMPLETED,
--   or FAILED.
newStartFHIRExportJobResponse :: Int -> Text -> JobStatus -> StartFHIRExportJobResponse

-- | The AWS generated ID for the Data Store from which files are being
--   exported for an export job.
startFHIRExportJobResponse_datastoreId :: Lens' StartFHIRExportJobResponse (Maybe Text)

-- | The response's http status code.
startFHIRExportJobResponse_httpStatus :: Lens' StartFHIRExportJobResponse Int

-- | The AWS generated ID for an export job.
startFHIRExportJobResponse_jobId :: Lens' StartFHIRExportJobResponse Text

-- | The status of a FHIR export job. Possible statuses are SUBMITTED,
--   IN_PROGRESS, COMPLETED, or FAILED.
startFHIRExportJobResponse_jobStatus :: Lens' StartFHIRExportJobResponse JobStatus
instance GHC.Generics.Generic Network.AWS.HealthLake.StartFHIRExportJob.StartFHIRExportJob
instance GHC.Show.Show Network.AWS.HealthLake.StartFHIRExportJob.StartFHIRExportJob
instance GHC.Read.Read Network.AWS.HealthLake.StartFHIRExportJob.StartFHIRExportJob
instance GHC.Classes.Eq Network.AWS.HealthLake.StartFHIRExportJob.StartFHIRExportJob
instance GHC.Generics.Generic Network.AWS.HealthLake.StartFHIRExportJob.StartFHIRExportJobResponse
instance GHC.Show.Show Network.AWS.HealthLake.StartFHIRExportJob.StartFHIRExportJobResponse
instance GHC.Read.Read Network.AWS.HealthLake.StartFHIRExportJob.StartFHIRExportJobResponse
instance GHC.Classes.Eq Network.AWS.HealthLake.StartFHIRExportJob.StartFHIRExportJobResponse
instance Network.AWS.Types.AWSRequest Network.AWS.HealthLake.StartFHIRExportJob.StartFHIRExportJob
instance Control.DeepSeq.NFData Network.AWS.HealthLake.StartFHIRExportJob.StartFHIRExportJobResponse
instance Data.Hashable.Class.Hashable Network.AWS.HealthLake.StartFHIRExportJob.StartFHIRExportJob
instance Control.DeepSeq.NFData Network.AWS.HealthLake.StartFHIRExportJob.StartFHIRExportJob
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.HealthLake.StartFHIRExportJob.StartFHIRExportJob
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.HealthLake.StartFHIRExportJob.StartFHIRExportJob
instance Network.AWS.Data.Path.ToPath Network.AWS.HealthLake.StartFHIRExportJob.StartFHIRExportJob
instance Network.AWS.Data.Query.ToQuery Network.AWS.HealthLake.StartFHIRExportJob.StartFHIRExportJob


-- | Returns a list of all existing tags associated with a Data Store.
module Network.AWS.HealthLake.ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | The Amazon Resource Name(ARN) of the Data Store for which tags are
--   being added.
[$sel:resourceARN:ListTagsForResource'] :: ListTagsForResource -> Text

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceARN</a> - The Amazon Resource Name(ARN)
--   of the Data Store for which tags are being added.
newListTagsForResource :: Text -> ListTagsForResource

-- | The Amazon Resource Name(ARN) of the Data Store for which tags are
--   being added.
listTagsForResource_resourceARN :: Lens' ListTagsForResource Text

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe [Tag] -> Int -> ListTagsForResourceResponse

-- | Returns a list of tags associated with a Data Store.
[$sel:tags:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Maybe [Tag]

-- | The response's http status code.
[$sel:httpStatus:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Int

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - Returns a list of tags
--   associated with a Data Store.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | Returns a list of tags associated with a Data Store.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe [Tag])

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int
instance GHC.Generics.Generic Network.AWS.HealthLake.ListTagsForResource.ListTagsForResource
instance GHC.Show.Show Network.AWS.HealthLake.ListTagsForResource.ListTagsForResource
instance GHC.Read.Read Network.AWS.HealthLake.ListTagsForResource.ListTagsForResource
instance GHC.Classes.Eq Network.AWS.HealthLake.ListTagsForResource.ListTagsForResource
instance GHC.Generics.Generic Network.AWS.HealthLake.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Show.Show Network.AWS.HealthLake.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Read.Read Network.AWS.HealthLake.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Classes.Eq Network.AWS.HealthLake.ListTagsForResource.ListTagsForResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.HealthLake.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Network.AWS.HealthLake.ListTagsForResource.ListTagsForResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.HealthLake.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Network.AWS.HealthLake.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.HealthLake.ListTagsForResource.ListTagsForResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.HealthLake.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Path.ToPath Network.AWS.HealthLake.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.HealthLake.ListTagsForResource.ListTagsForResource


-- | Lists all FHIR import jobs associated with an account and their
--   statuses.
module Network.AWS.HealthLake.ListFHIRImportJobs

-- | <i>See:</i> <a>newListFHIRImportJobs</a> smart constructor.
data ListFHIRImportJobs
ListFHIRImportJobs' :: Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe JobStatus -> Maybe Natural -> Text -> ListFHIRImportJobs

-- | This parameter limits the response to FHIR import jobs submitted after
--   a user specified date.
[$sel:submittedAfter:ListFHIRImportJobs'] :: ListFHIRImportJobs -> Maybe POSIX

-- | This parameter limits the response to the import job with the
--   specified job name.
[$sel:jobName:ListFHIRImportJobs'] :: ListFHIRImportJobs -> Maybe Text

-- | This parameter limits the response to FHIR import jobs submitted
--   before a user specified date.
[$sel:submittedBefore:ListFHIRImportJobs'] :: ListFHIRImportJobs -> Maybe POSIX

-- | A pagination token used to identify the next page of results to return
--   for a ListFHIRImportJobs query.
[$sel:nextToken:ListFHIRImportJobs'] :: ListFHIRImportJobs -> Maybe Text

-- | This parameter limits the response to the import job with the
--   specified job status.
[$sel:jobStatus:ListFHIRImportJobs'] :: ListFHIRImportJobs -> Maybe JobStatus

-- | This parameter limits the number of results returned for a
--   ListFHIRImportJobs to a maximum quantity specified by the user.
[$sel:maxResults:ListFHIRImportJobs'] :: ListFHIRImportJobs -> Maybe Natural

-- | This parameter limits the response to the import job with the
--   specified Data Store ID.
[$sel:datastoreId:ListFHIRImportJobs'] :: ListFHIRImportJobs -> Text

-- | Create a value of <a>ListFHIRImportJobs</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:submittedAfter:ListFHIRImportJobs'</a>,
--   <a>listFHIRImportJobs_submittedAfter</a> - This parameter limits the
--   response to FHIR import jobs submitted after a user specified date.
--   
--   <a>$sel:jobName:ListFHIRImportJobs'</a>,
--   <a>listFHIRImportJobs_jobName</a> - This parameter limits the response
--   to the import job with the specified job name.
--   
--   <a>$sel:submittedBefore:ListFHIRImportJobs'</a>,
--   <a>listFHIRImportJobs_submittedBefore</a> - This parameter limits the
--   response to FHIR import jobs submitted before a user specified date.
--   
--   <a>$sel:nextToken:ListFHIRImportJobs'</a>,
--   <a>listFHIRImportJobs_nextToken</a> - A pagination token used to
--   identify the next page of results to return for a ListFHIRImportJobs
--   query.
--   
--   <a>$sel:jobStatus:ListFHIRImportJobs'</a>,
--   <a>listFHIRImportJobs_jobStatus</a> - This parameter limits the
--   response to the import job with the specified job status.
--   
--   <a>$sel:maxResults:ListFHIRImportJobs'</a>,
--   <a>listFHIRImportJobs_maxResults</a> - This parameter limits the
--   number of results returned for a ListFHIRImportJobs to a maximum
--   quantity specified by the user.
--   
--   <a>$sel:datastoreId:ListFHIRImportJobs'</a>,
--   <a>listFHIRImportJobs_datastoreId</a> - This parameter limits the
--   response to the import job with the specified Data Store ID.
newListFHIRImportJobs :: Text -> ListFHIRImportJobs

-- | This parameter limits the response to FHIR import jobs submitted after
--   a user specified date.
listFHIRImportJobs_submittedAfter :: Lens' ListFHIRImportJobs (Maybe UTCTime)

-- | This parameter limits the response to the import job with the
--   specified job name.
listFHIRImportJobs_jobName :: Lens' ListFHIRImportJobs (Maybe Text)

-- | This parameter limits the response to FHIR import jobs submitted
--   before a user specified date.
listFHIRImportJobs_submittedBefore :: Lens' ListFHIRImportJobs (Maybe UTCTime)

-- | A pagination token used to identify the next page of results to return
--   for a ListFHIRImportJobs query.
listFHIRImportJobs_nextToken :: Lens' ListFHIRImportJobs (Maybe Text)

-- | This parameter limits the response to the import job with the
--   specified job status.
listFHIRImportJobs_jobStatus :: Lens' ListFHIRImportJobs (Maybe JobStatus)

-- | This parameter limits the number of results returned for a
--   ListFHIRImportJobs to a maximum quantity specified by the user.
listFHIRImportJobs_maxResults :: Lens' ListFHIRImportJobs (Maybe Natural)

-- | This parameter limits the response to the import job with the
--   specified Data Store ID.
listFHIRImportJobs_datastoreId :: Lens' ListFHIRImportJobs Text

-- | <i>See:</i> <a>newListFHIRImportJobsResponse</a> smart constructor.
data ListFHIRImportJobsResponse
ListFHIRImportJobsResponse' :: Maybe Text -> Int -> [ImportJobProperties] -> ListFHIRImportJobsResponse

-- | A pagination token used to identify the next page of results to return
--   for a ListFHIRImportJobs query.
[$sel:nextToken:ListFHIRImportJobsResponse'] :: ListFHIRImportJobsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListFHIRImportJobsResponse'] :: ListFHIRImportJobsResponse -> Int

-- | The properties of a listed FHIR import jobs, including the ID, ARN,
--   name, and the status of the job.
[$sel:importJobPropertiesList:ListFHIRImportJobsResponse'] :: ListFHIRImportJobsResponse -> [ImportJobProperties]

-- | Create a value of <a>ListFHIRImportJobsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListFHIRImportJobs'</a>,
--   <a>listFHIRImportJobsResponse_nextToken</a> - A pagination token used
--   to identify the next page of results to return for a
--   ListFHIRImportJobs query.
--   
--   <a>$sel:httpStatus:ListFHIRImportJobsResponse'</a>,
--   <a>listFHIRImportJobsResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:importJobPropertiesList:ListFHIRImportJobsResponse'</a>,
--   <a>listFHIRImportJobsResponse_importJobPropertiesList</a> - The
--   properties of a listed FHIR import jobs, including the ID, ARN, name,
--   and the status of the job.
newListFHIRImportJobsResponse :: Int -> ListFHIRImportJobsResponse

-- | A pagination token used to identify the next page of results to return
--   for a ListFHIRImportJobs query.
listFHIRImportJobsResponse_nextToken :: Lens' ListFHIRImportJobsResponse (Maybe Text)

-- | The response's http status code.
listFHIRImportJobsResponse_httpStatus :: Lens' ListFHIRImportJobsResponse Int

-- | The properties of a listed FHIR import jobs, including the ID, ARN,
--   name, and the status of the job.
listFHIRImportJobsResponse_importJobPropertiesList :: Lens' ListFHIRImportJobsResponse [ImportJobProperties]
instance GHC.Generics.Generic Network.AWS.HealthLake.ListFHIRImportJobs.ListFHIRImportJobs
instance GHC.Show.Show Network.AWS.HealthLake.ListFHIRImportJobs.ListFHIRImportJobs
instance GHC.Read.Read Network.AWS.HealthLake.ListFHIRImportJobs.ListFHIRImportJobs
instance GHC.Classes.Eq Network.AWS.HealthLake.ListFHIRImportJobs.ListFHIRImportJobs
instance GHC.Generics.Generic Network.AWS.HealthLake.ListFHIRImportJobs.ListFHIRImportJobsResponse
instance GHC.Show.Show Network.AWS.HealthLake.ListFHIRImportJobs.ListFHIRImportJobsResponse
instance GHC.Read.Read Network.AWS.HealthLake.ListFHIRImportJobs.ListFHIRImportJobsResponse
instance GHC.Classes.Eq Network.AWS.HealthLake.ListFHIRImportJobs.ListFHIRImportJobsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.HealthLake.ListFHIRImportJobs.ListFHIRImportJobs
instance Control.DeepSeq.NFData Network.AWS.HealthLake.ListFHIRImportJobs.ListFHIRImportJobsResponse
instance Data.Hashable.Class.Hashable Network.AWS.HealthLake.ListFHIRImportJobs.ListFHIRImportJobs
instance Control.DeepSeq.NFData Network.AWS.HealthLake.ListFHIRImportJobs.ListFHIRImportJobs
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.HealthLake.ListFHIRImportJobs.ListFHIRImportJobs
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.HealthLake.ListFHIRImportJobs.ListFHIRImportJobs
instance Network.AWS.Data.Path.ToPath Network.AWS.HealthLake.ListFHIRImportJobs.ListFHIRImportJobs
instance Network.AWS.Data.Query.ToQuery Network.AWS.HealthLake.ListFHIRImportJobs.ListFHIRImportJobs


-- | Lists all FHIR export jobs associated with an account and their
--   statuses.
module Network.AWS.HealthLake.ListFHIRExportJobs

-- | <i>See:</i> <a>newListFHIRExportJobs</a> smart constructor.
data ListFHIRExportJobs
ListFHIRExportJobs' :: Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe JobStatus -> Maybe Natural -> Text -> ListFHIRExportJobs

-- | This parameter limits the response to FHIR export jobs submitted after
--   a user specified date.
[$sel:submittedAfter:ListFHIRExportJobs'] :: ListFHIRExportJobs -> Maybe POSIX

-- | This parameter limits the response to the export job with the
--   specified job name.
[$sel:jobName:ListFHIRExportJobs'] :: ListFHIRExportJobs -> Maybe Text

-- | This parameter limits the response to FHIR export jobs submitted
--   before a user specified date.
[$sel:submittedBefore:ListFHIRExportJobs'] :: ListFHIRExportJobs -> Maybe POSIX

-- | A pagination token used to identify the next page of results to return
--   for a ListFHIRExportJobs query.
[$sel:nextToken:ListFHIRExportJobs'] :: ListFHIRExportJobs -> Maybe Text

-- | This parameter limits the response to the export jobs with the
--   specified job status.
[$sel:jobStatus:ListFHIRExportJobs'] :: ListFHIRExportJobs -> Maybe JobStatus

-- | This parameter limits the number of results returned for a
--   ListFHIRExportJobs to a maximum quantity specified by the user.
[$sel:maxResults:ListFHIRExportJobs'] :: ListFHIRExportJobs -> Maybe Natural

-- | This parameter limits the response to the export job with the
--   specified Data Store ID.
[$sel:datastoreId:ListFHIRExportJobs'] :: ListFHIRExportJobs -> Text

-- | Create a value of <a>ListFHIRExportJobs</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:submittedAfter:ListFHIRExportJobs'</a>,
--   <a>listFHIRExportJobs_submittedAfter</a> - This parameter limits the
--   response to FHIR export jobs submitted after a user specified date.
--   
--   <a>$sel:jobName:ListFHIRExportJobs'</a>,
--   <a>listFHIRExportJobs_jobName</a> - This parameter limits the response
--   to the export job with the specified job name.
--   
--   <a>$sel:submittedBefore:ListFHIRExportJobs'</a>,
--   <a>listFHIRExportJobs_submittedBefore</a> - This parameter limits the
--   response to FHIR export jobs submitted before a user specified date.
--   
--   <a>$sel:nextToken:ListFHIRExportJobs'</a>,
--   <a>listFHIRExportJobs_nextToken</a> - A pagination token used to
--   identify the next page of results to return for a ListFHIRExportJobs
--   query.
--   
--   <a>$sel:jobStatus:ListFHIRExportJobs'</a>,
--   <a>listFHIRExportJobs_jobStatus</a> - This parameter limits the
--   response to the export jobs with the specified job status.
--   
--   <a>$sel:maxResults:ListFHIRExportJobs'</a>,
--   <a>listFHIRExportJobs_maxResults</a> - This parameter limits the
--   number of results returned for a ListFHIRExportJobs to a maximum
--   quantity specified by the user.
--   
--   <a>$sel:datastoreId:ListFHIRExportJobs'</a>,
--   <a>listFHIRExportJobs_datastoreId</a> - This parameter limits the
--   response to the export job with the specified Data Store ID.
newListFHIRExportJobs :: Text -> ListFHIRExportJobs

-- | This parameter limits the response to FHIR export jobs submitted after
--   a user specified date.
listFHIRExportJobs_submittedAfter :: Lens' ListFHIRExportJobs (Maybe UTCTime)

-- | This parameter limits the response to the export job with the
--   specified job name.
listFHIRExportJobs_jobName :: Lens' ListFHIRExportJobs (Maybe Text)

-- | This parameter limits the response to FHIR export jobs submitted
--   before a user specified date.
listFHIRExportJobs_submittedBefore :: Lens' ListFHIRExportJobs (Maybe UTCTime)

-- | A pagination token used to identify the next page of results to return
--   for a ListFHIRExportJobs query.
listFHIRExportJobs_nextToken :: Lens' ListFHIRExportJobs (Maybe Text)

-- | This parameter limits the response to the export jobs with the
--   specified job status.
listFHIRExportJobs_jobStatus :: Lens' ListFHIRExportJobs (Maybe JobStatus)

-- | This parameter limits the number of results returned for a
--   ListFHIRExportJobs to a maximum quantity specified by the user.
listFHIRExportJobs_maxResults :: Lens' ListFHIRExportJobs (Maybe Natural)

-- | This parameter limits the response to the export job with the
--   specified Data Store ID.
listFHIRExportJobs_datastoreId :: Lens' ListFHIRExportJobs Text

-- | <i>See:</i> <a>newListFHIRExportJobsResponse</a> smart constructor.
data ListFHIRExportJobsResponse
ListFHIRExportJobsResponse' :: Maybe Text -> Int -> [ExportJobProperties] -> ListFHIRExportJobsResponse

-- | A pagination token used to identify the next page of results to return
--   for a ListFHIRExportJobs query.
[$sel:nextToken:ListFHIRExportJobsResponse'] :: ListFHIRExportJobsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListFHIRExportJobsResponse'] :: ListFHIRExportJobsResponse -> Int

-- | The properties of listed FHIR export jobs, including the ID, ARN,
--   name, and the status of the job.
[$sel:exportJobPropertiesList:ListFHIRExportJobsResponse'] :: ListFHIRExportJobsResponse -> [ExportJobProperties]

-- | Create a value of <a>ListFHIRExportJobsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListFHIRExportJobs'</a>,
--   <a>listFHIRExportJobsResponse_nextToken</a> - A pagination token used
--   to identify the next page of results to return for a
--   ListFHIRExportJobs query.
--   
--   <a>$sel:httpStatus:ListFHIRExportJobsResponse'</a>,
--   <a>listFHIRExportJobsResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:exportJobPropertiesList:ListFHIRExportJobsResponse'</a>,
--   <a>listFHIRExportJobsResponse_exportJobPropertiesList</a> - The
--   properties of listed FHIR export jobs, including the ID, ARN, name,
--   and the status of the job.
newListFHIRExportJobsResponse :: Int -> ListFHIRExportJobsResponse

-- | A pagination token used to identify the next page of results to return
--   for a ListFHIRExportJobs query.
listFHIRExportJobsResponse_nextToken :: Lens' ListFHIRExportJobsResponse (Maybe Text)

-- | The response's http status code.
listFHIRExportJobsResponse_httpStatus :: Lens' ListFHIRExportJobsResponse Int

-- | The properties of listed FHIR export jobs, including the ID, ARN,
--   name, and the status of the job.
listFHIRExportJobsResponse_exportJobPropertiesList :: Lens' ListFHIRExportJobsResponse [ExportJobProperties]
instance GHC.Generics.Generic Network.AWS.HealthLake.ListFHIRExportJobs.ListFHIRExportJobs
instance GHC.Show.Show Network.AWS.HealthLake.ListFHIRExportJobs.ListFHIRExportJobs
instance GHC.Read.Read Network.AWS.HealthLake.ListFHIRExportJobs.ListFHIRExportJobs
instance GHC.Classes.Eq Network.AWS.HealthLake.ListFHIRExportJobs.ListFHIRExportJobs
instance GHC.Generics.Generic Network.AWS.HealthLake.ListFHIRExportJobs.ListFHIRExportJobsResponse
instance GHC.Show.Show Network.AWS.HealthLake.ListFHIRExportJobs.ListFHIRExportJobsResponse
instance GHC.Read.Read Network.AWS.HealthLake.ListFHIRExportJobs.ListFHIRExportJobsResponse
instance GHC.Classes.Eq Network.AWS.HealthLake.ListFHIRExportJobs.ListFHIRExportJobsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.HealthLake.ListFHIRExportJobs.ListFHIRExportJobs
instance Control.DeepSeq.NFData Network.AWS.HealthLake.ListFHIRExportJobs.ListFHIRExportJobsResponse
instance Data.Hashable.Class.Hashable Network.AWS.HealthLake.ListFHIRExportJobs.ListFHIRExportJobs
instance Control.DeepSeq.NFData Network.AWS.HealthLake.ListFHIRExportJobs.ListFHIRExportJobs
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.HealthLake.ListFHIRExportJobs.ListFHIRExportJobs
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.HealthLake.ListFHIRExportJobs.ListFHIRExportJobs
instance Network.AWS.Data.Path.ToPath Network.AWS.HealthLake.ListFHIRExportJobs.ListFHIRExportJobs
instance Network.AWS.Data.Query.ToQuery Network.AWS.HealthLake.ListFHIRExportJobs.ListFHIRExportJobs


-- | Lists all FHIR Data Stores that are in the user’s account, regardless
--   of Data Store status.
module Network.AWS.HealthLake.ListFHIRDatastores

-- | <i>See:</i> <a>newListFHIRDatastores</a> smart constructor.
data ListFHIRDatastores
ListFHIRDatastores' :: Maybe Text -> Maybe DatastoreFilter -> Maybe Natural -> ListFHIRDatastores

-- | Fetches the next page of Data Stores when results are paginated.
[$sel:nextToken:ListFHIRDatastores'] :: ListFHIRDatastores -> Maybe Text

-- | Lists all filters associated with a FHIR Data Store request.
[$sel:filter':ListFHIRDatastores'] :: ListFHIRDatastores -> Maybe DatastoreFilter

-- | The maximum number of Data Stores returned in a single page of a
--   ListFHIRDatastoresRequest call.
[$sel:maxResults:ListFHIRDatastores'] :: ListFHIRDatastores -> Maybe Natural

-- | Create a value of <a>ListFHIRDatastores</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListFHIRDatastores'</a>,
--   <a>listFHIRDatastores_nextToken</a> - Fetches the next page of Data
--   Stores when results are paginated.
--   
--   <a>$sel:filter':ListFHIRDatastores'</a>,
--   <a>listFHIRDatastores_filter</a> - Lists all filters associated with a
--   FHIR Data Store request.
--   
--   <a>$sel:maxResults:ListFHIRDatastores'</a>,
--   <a>listFHIRDatastores_maxResults</a> - The maximum number of Data
--   Stores returned in a single page of a ListFHIRDatastoresRequest call.
newListFHIRDatastores :: ListFHIRDatastores

-- | Fetches the next page of Data Stores when results are paginated.
listFHIRDatastores_nextToken :: Lens' ListFHIRDatastores (Maybe Text)

-- | Lists all filters associated with a FHIR Data Store request.
listFHIRDatastores_filter :: Lens' ListFHIRDatastores (Maybe DatastoreFilter)

-- | The maximum number of Data Stores returned in a single page of a
--   ListFHIRDatastoresRequest call.
listFHIRDatastores_maxResults :: Lens' ListFHIRDatastores (Maybe Natural)

-- | <i>See:</i> <a>newListFHIRDatastoresResponse</a> smart constructor.
data ListFHIRDatastoresResponse
ListFHIRDatastoresResponse' :: Maybe Text -> Int -> [DatastoreProperties] -> ListFHIRDatastoresResponse

-- | Pagination token that can be used to retrieve the next page of
--   results.
[$sel:nextToken:ListFHIRDatastoresResponse'] :: ListFHIRDatastoresResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListFHIRDatastoresResponse'] :: ListFHIRDatastoresResponse -> Int

-- | All properties associated with the listed Data Stores.
[$sel:datastorePropertiesList:ListFHIRDatastoresResponse'] :: ListFHIRDatastoresResponse -> [DatastoreProperties]

-- | Create a value of <a>ListFHIRDatastoresResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListFHIRDatastores'</a>,
--   <a>listFHIRDatastoresResponse_nextToken</a> - Pagination token that
--   can be used to retrieve the next page of results.
--   
--   <a>$sel:httpStatus:ListFHIRDatastoresResponse'</a>,
--   <a>listFHIRDatastoresResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:datastorePropertiesList:ListFHIRDatastoresResponse'</a>,
--   <a>listFHIRDatastoresResponse_datastorePropertiesList</a> - All
--   properties associated with the listed Data Stores.
newListFHIRDatastoresResponse :: Int -> ListFHIRDatastoresResponse

-- | Pagination token that can be used to retrieve the next page of
--   results.
listFHIRDatastoresResponse_nextToken :: Lens' ListFHIRDatastoresResponse (Maybe Text)

-- | The response's http status code.
listFHIRDatastoresResponse_httpStatus :: Lens' ListFHIRDatastoresResponse Int

-- | All properties associated with the listed Data Stores.
listFHIRDatastoresResponse_datastorePropertiesList :: Lens' ListFHIRDatastoresResponse [DatastoreProperties]
instance GHC.Generics.Generic Network.AWS.HealthLake.ListFHIRDatastores.ListFHIRDatastores
instance GHC.Show.Show Network.AWS.HealthLake.ListFHIRDatastores.ListFHIRDatastores
instance GHC.Read.Read Network.AWS.HealthLake.ListFHIRDatastores.ListFHIRDatastores
instance GHC.Classes.Eq Network.AWS.HealthLake.ListFHIRDatastores.ListFHIRDatastores
instance GHC.Generics.Generic Network.AWS.HealthLake.ListFHIRDatastores.ListFHIRDatastoresResponse
instance GHC.Show.Show Network.AWS.HealthLake.ListFHIRDatastores.ListFHIRDatastoresResponse
instance GHC.Read.Read Network.AWS.HealthLake.ListFHIRDatastores.ListFHIRDatastoresResponse
instance GHC.Classes.Eq Network.AWS.HealthLake.ListFHIRDatastores.ListFHIRDatastoresResponse
instance Network.AWS.Types.AWSRequest Network.AWS.HealthLake.ListFHIRDatastores.ListFHIRDatastores
instance Control.DeepSeq.NFData Network.AWS.HealthLake.ListFHIRDatastores.ListFHIRDatastoresResponse
instance Data.Hashable.Class.Hashable Network.AWS.HealthLake.ListFHIRDatastores.ListFHIRDatastores
instance Control.DeepSeq.NFData Network.AWS.HealthLake.ListFHIRDatastores.ListFHIRDatastores
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.HealthLake.ListFHIRDatastores.ListFHIRDatastores
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.HealthLake.ListFHIRDatastores.ListFHIRDatastores
instance Network.AWS.Data.Path.ToPath Network.AWS.HealthLake.ListFHIRDatastores.ListFHIRDatastores
instance Network.AWS.Data.Query.ToQuery Network.AWS.HealthLake.ListFHIRDatastores.ListFHIRDatastores


-- | Displays the properties of a FHIR import job, including the ID, ARN,
--   name, and the status of the job.
module Network.AWS.HealthLake.DescribeFHIRImportJob

-- | <i>See:</i> <a>newDescribeFHIRImportJob</a> smart constructor.
data DescribeFHIRImportJob
DescribeFHIRImportJob' :: Text -> Text -> DescribeFHIRImportJob

-- | The AWS-generated ID of the Data Store.
[$sel:datastoreId:DescribeFHIRImportJob'] :: DescribeFHIRImportJob -> Text

-- | The AWS-generated job ID.
[$sel:jobId:DescribeFHIRImportJob'] :: DescribeFHIRImportJob -> Text

-- | Create a value of <a>DescribeFHIRImportJob</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:datastoreId:DescribeFHIRImportJob'</a>,
--   <a>describeFHIRImportJob_datastoreId</a> - The AWS-generated ID of the
--   Data Store.
--   
--   <a>$sel:jobId:DescribeFHIRImportJob'</a>,
--   <a>describeFHIRImportJob_jobId</a> - The AWS-generated job ID.
newDescribeFHIRImportJob :: Text -> Text -> DescribeFHIRImportJob

-- | The AWS-generated ID of the Data Store.
describeFHIRImportJob_datastoreId :: Lens' DescribeFHIRImportJob Text

-- | The AWS-generated job ID.
describeFHIRImportJob_jobId :: Lens' DescribeFHIRImportJob Text

-- | <i>See:</i> <a>newDescribeFHIRImportJobResponse</a> smart constructor.
data DescribeFHIRImportJobResponse
DescribeFHIRImportJobResponse' :: Int -> ImportJobProperties -> DescribeFHIRImportJobResponse

-- | The response's http status code.
[$sel:httpStatus:DescribeFHIRImportJobResponse'] :: DescribeFHIRImportJobResponse -> Int

-- | The properties of the Import job request, including the ID, ARN, name,
--   and the status of the job.
[$sel:importJobProperties:DescribeFHIRImportJobResponse'] :: DescribeFHIRImportJobResponse -> ImportJobProperties

-- | Create a value of <a>DescribeFHIRImportJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DescribeFHIRImportJobResponse'</a>,
--   <a>describeFHIRImportJobResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:importJobProperties:DescribeFHIRImportJobResponse'</a>,
--   <a>describeFHIRImportJobResponse_importJobProperties</a> - The
--   properties of the Import job request, including the ID, ARN, name, and
--   the status of the job.
newDescribeFHIRImportJobResponse :: Int -> ImportJobProperties -> DescribeFHIRImportJobResponse

-- | The response's http status code.
describeFHIRImportJobResponse_httpStatus :: Lens' DescribeFHIRImportJobResponse Int

-- | The properties of the Import job request, including the ID, ARN, name,
--   and the status of the job.
describeFHIRImportJobResponse_importJobProperties :: Lens' DescribeFHIRImportJobResponse ImportJobProperties
instance GHC.Generics.Generic Network.AWS.HealthLake.DescribeFHIRImportJob.DescribeFHIRImportJob
instance GHC.Show.Show Network.AWS.HealthLake.DescribeFHIRImportJob.DescribeFHIRImportJob
instance GHC.Read.Read Network.AWS.HealthLake.DescribeFHIRImportJob.DescribeFHIRImportJob
instance GHC.Classes.Eq Network.AWS.HealthLake.DescribeFHIRImportJob.DescribeFHIRImportJob
instance GHC.Generics.Generic Network.AWS.HealthLake.DescribeFHIRImportJob.DescribeFHIRImportJobResponse
instance GHC.Show.Show Network.AWS.HealthLake.DescribeFHIRImportJob.DescribeFHIRImportJobResponse
instance GHC.Read.Read Network.AWS.HealthLake.DescribeFHIRImportJob.DescribeFHIRImportJobResponse
instance GHC.Classes.Eq Network.AWS.HealthLake.DescribeFHIRImportJob.DescribeFHIRImportJobResponse
instance Network.AWS.Types.AWSRequest Network.AWS.HealthLake.DescribeFHIRImportJob.DescribeFHIRImportJob
instance Control.DeepSeq.NFData Network.AWS.HealthLake.DescribeFHIRImportJob.DescribeFHIRImportJobResponse
instance Data.Hashable.Class.Hashable Network.AWS.HealthLake.DescribeFHIRImportJob.DescribeFHIRImportJob
instance Control.DeepSeq.NFData Network.AWS.HealthLake.DescribeFHIRImportJob.DescribeFHIRImportJob
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.HealthLake.DescribeFHIRImportJob.DescribeFHIRImportJob
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.HealthLake.DescribeFHIRImportJob.DescribeFHIRImportJob
instance Network.AWS.Data.Path.ToPath Network.AWS.HealthLake.DescribeFHIRImportJob.DescribeFHIRImportJob
instance Network.AWS.Data.Query.ToQuery Network.AWS.HealthLake.DescribeFHIRImportJob.DescribeFHIRImportJob


-- | Displays the properties of a FHIR export job, including the ID, ARN,
--   name, and the status of the job.
module Network.AWS.HealthLake.DescribeFHIRExportJob

-- | <i>See:</i> <a>newDescribeFHIRExportJob</a> smart constructor.
data DescribeFHIRExportJob
DescribeFHIRExportJob' :: Text -> Text -> DescribeFHIRExportJob

-- | The AWS generated ID for the Data Store from which files are being
--   exported from for an export job.
[$sel:datastoreId:DescribeFHIRExportJob'] :: DescribeFHIRExportJob -> Text

-- | The AWS generated ID for an export job.
[$sel:jobId:DescribeFHIRExportJob'] :: DescribeFHIRExportJob -> Text

-- | Create a value of <a>DescribeFHIRExportJob</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:datastoreId:DescribeFHIRExportJob'</a>,
--   <a>describeFHIRExportJob_datastoreId</a> - The AWS generated ID for
--   the Data Store from which files are being exported from for an export
--   job.
--   
--   <a>$sel:jobId:DescribeFHIRExportJob'</a>,
--   <a>describeFHIRExportJob_jobId</a> - The AWS generated ID for an
--   export job.
newDescribeFHIRExportJob :: Text -> Text -> DescribeFHIRExportJob

-- | The AWS generated ID for the Data Store from which files are being
--   exported from for an export job.
describeFHIRExportJob_datastoreId :: Lens' DescribeFHIRExportJob Text

-- | The AWS generated ID for an export job.
describeFHIRExportJob_jobId :: Lens' DescribeFHIRExportJob Text

-- | <i>See:</i> <a>newDescribeFHIRExportJobResponse</a> smart constructor.
data DescribeFHIRExportJobResponse
DescribeFHIRExportJobResponse' :: Int -> ExportJobProperties -> DescribeFHIRExportJobResponse

-- | The response's http status code.
[$sel:httpStatus:DescribeFHIRExportJobResponse'] :: DescribeFHIRExportJobResponse -> Int

-- | Displays the properties of the export job, including the ID, Arn,
--   Name, and the status of the job.
[$sel:exportJobProperties:DescribeFHIRExportJobResponse'] :: DescribeFHIRExportJobResponse -> ExportJobProperties

-- | Create a value of <a>DescribeFHIRExportJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DescribeFHIRExportJobResponse'</a>,
--   <a>describeFHIRExportJobResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:exportJobProperties:DescribeFHIRExportJobResponse'</a>,
--   <a>describeFHIRExportJobResponse_exportJobProperties</a> - Displays
--   the properties of the export job, including the ID, Arn, Name, and the
--   status of the job.
newDescribeFHIRExportJobResponse :: Int -> ExportJobProperties -> DescribeFHIRExportJobResponse

-- | The response's http status code.
describeFHIRExportJobResponse_httpStatus :: Lens' DescribeFHIRExportJobResponse Int

-- | Displays the properties of the export job, including the ID, Arn,
--   Name, and the status of the job.
describeFHIRExportJobResponse_exportJobProperties :: Lens' DescribeFHIRExportJobResponse ExportJobProperties
instance GHC.Generics.Generic Network.AWS.HealthLake.DescribeFHIRExportJob.DescribeFHIRExportJob
instance GHC.Show.Show Network.AWS.HealthLake.DescribeFHIRExportJob.DescribeFHIRExportJob
instance GHC.Read.Read Network.AWS.HealthLake.DescribeFHIRExportJob.DescribeFHIRExportJob
instance GHC.Classes.Eq Network.AWS.HealthLake.DescribeFHIRExportJob.DescribeFHIRExportJob
instance GHC.Generics.Generic Network.AWS.HealthLake.DescribeFHIRExportJob.DescribeFHIRExportJobResponse
instance GHC.Show.Show Network.AWS.HealthLake.DescribeFHIRExportJob.DescribeFHIRExportJobResponse
instance GHC.Read.Read Network.AWS.HealthLake.DescribeFHIRExportJob.DescribeFHIRExportJobResponse
instance GHC.Classes.Eq Network.AWS.HealthLake.DescribeFHIRExportJob.DescribeFHIRExportJobResponse
instance Network.AWS.Types.AWSRequest Network.AWS.HealthLake.DescribeFHIRExportJob.DescribeFHIRExportJob
instance Control.DeepSeq.NFData Network.AWS.HealthLake.DescribeFHIRExportJob.DescribeFHIRExportJobResponse
instance Data.Hashable.Class.Hashable Network.AWS.HealthLake.DescribeFHIRExportJob.DescribeFHIRExportJob
instance Control.DeepSeq.NFData Network.AWS.HealthLake.DescribeFHIRExportJob.DescribeFHIRExportJob
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.HealthLake.DescribeFHIRExportJob.DescribeFHIRExportJob
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.HealthLake.DescribeFHIRExportJob.DescribeFHIRExportJob
instance Network.AWS.Data.Path.ToPath Network.AWS.HealthLake.DescribeFHIRExportJob.DescribeFHIRExportJob
instance Network.AWS.Data.Query.ToQuery Network.AWS.HealthLake.DescribeFHIRExportJob.DescribeFHIRExportJob


-- | Gets the properties associated with the FHIR Data Store, including the
--   Data Store ID, Data Store ARN, Data Store name, Data Store status,
--   created at, Data Store type version, and Data Store endpoint.
module Network.AWS.HealthLake.DescribeFHIRDatastore

-- | <i>See:</i> <a>newDescribeFHIRDatastore</a> smart constructor.
data DescribeFHIRDatastore
DescribeFHIRDatastore' :: Maybe Text -> DescribeFHIRDatastore

-- | The AWS-generated Data Store id. This is part of the
--   ‘CreateFHIRDatastore’ output.
[$sel:datastoreId:DescribeFHIRDatastore'] :: DescribeFHIRDatastore -> Maybe Text

-- | Create a value of <a>DescribeFHIRDatastore</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:datastoreId:DescribeFHIRDatastore'</a>,
--   <a>describeFHIRDatastore_datastoreId</a> - The AWS-generated Data
--   Store id. This is part of the ‘CreateFHIRDatastore’ output.
newDescribeFHIRDatastore :: DescribeFHIRDatastore

-- | The AWS-generated Data Store id. This is part of the
--   ‘CreateFHIRDatastore’ output.
describeFHIRDatastore_datastoreId :: Lens' DescribeFHIRDatastore (Maybe Text)

-- | <i>See:</i> <a>newDescribeFHIRDatastoreResponse</a> smart constructor.
data DescribeFHIRDatastoreResponse
DescribeFHIRDatastoreResponse' :: Int -> DatastoreProperties -> DescribeFHIRDatastoreResponse

-- | The response's http status code.
[$sel:httpStatus:DescribeFHIRDatastoreResponse'] :: DescribeFHIRDatastoreResponse -> Int

-- | All properties associated with a Data Store, including the Data Store
--   ID, Data Store ARN, Data Store name, Data Store status, created at,
--   Data Store type version, and Data Store endpoint.
[$sel:datastoreProperties:DescribeFHIRDatastoreResponse'] :: DescribeFHIRDatastoreResponse -> DatastoreProperties

-- | Create a value of <a>DescribeFHIRDatastoreResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DescribeFHIRDatastoreResponse'</a>,
--   <a>describeFHIRDatastoreResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:datastoreProperties:DescribeFHIRDatastoreResponse'</a>,
--   <a>describeFHIRDatastoreResponse_datastoreProperties</a> - All
--   properties associated with a Data Store, including the Data Store ID,
--   Data Store ARN, Data Store name, Data Store status, created at, Data
--   Store type version, and Data Store endpoint.
newDescribeFHIRDatastoreResponse :: Int -> DatastoreProperties -> DescribeFHIRDatastoreResponse

-- | The response's http status code.
describeFHIRDatastoreResponse_httpStatus :: Lens' DescribeFHIRDatastoreResponse Int

-- | All properties associated with a Data Store, including the Data Store
--   ID, Data Store ARN, Data Store name, Data Store status, created at,
--   Data Store type version, and Data Store endpoint.
describeFHIRDatastoreResponse_datastoreProperties :: Lens' DescribeFHIRDatastoreResponse DatastoreProperties
instance GHC.Generics.Generic Network.AWS.HealthLake.DescribeFHIRDatastore.DescribeFHIRDatastore
instance GHC.Show.Show Network.AWS.HealthLake.DescribeFHIRDatastore.DescribeFHIRDatastore
instance GHC.Read.Read Network.AWS.HealthLake.DescribeFHIRDatastore.DescribeFHIRDatastore
instance GHC.Classes.Eq Network.AWS.HealthLake.DescribeFHIRDatastore.DescribeFHIRDatastore
instance GHC.Generics.Generic Network.AWS.HealthLake.DescribeFHIRDatastore.DescribeFHIRDatastoreResponse
instance GHC.Show.Show Network.AWS.HealthLake.DescribeFHIRDatastore.DescribeFHIRDatastoreResponse
instance GHC.Read.Read Network.AWS.HealthLake.DescribeFHIRDatastore.DescribeFHIRDatastoreResponse
instance GHC.Classes.Eq Network.AWS.HealthLake.DescribeFHIRDatastore.DescribeFHIRDatastoreResponse
instance Network.AWS.Types.AWSRequest Network.AWS.HealthLake.DescribeFHIRDatastore.DescribeFHIRDatastore
instance Control.DeepSeq.NFData Network.AWS.HealthLake.DescribeFHIRDatastore.DescribeFHIRDatastoreResponse
instance Data.Hashable.Class.Hashable Network.AWS.HealthLake.DescribeFHIRDatastore.DescribeFHIRDatastore
instance Control.DeepSeq.NFData Network.AWS.HealthLake.DescribeFHIRDatastore.DescribeFHIRDatastore
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.HealthLake.DescribeFHIRDatastore.DescribeFHIRDatastore
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.HealthLake.DescribeFHIRDatastore.DescribeFHIRDatastore
instance Network.AWS.Data.Path.ToPath Network.AWS.HealthLake.DescribeFHIRDatastore.DescribeFHIRDatastore
instance Network.AWS.Data.Query.ToQuery Network.AWS.HealthLake.DescribeFHIRDatastore.DescribeFHIRDatastore


-- | Deletes a Data Store.
module Network.AWS.HealthLake.DeleteFHIRDatastore

-- | <i>See:</i> <a>newDeleteFHIRDatastore</a> smart constructor.
data DeleteFHIRDatastore
DeleteFHIRDatastore' :: Maybe Text -> DeleteFHIRDatastore

-- | The AWS-generated ID for the Data Store to be deleted.
[$sel:datastoreId:DeleteFHIRDatastore'] :: DeleteFHIRDatastore -> Maybe Text

-- | Create a value of <a>DeleteFHIRDatastore</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:datastoreId:DeleteFHIRDatastore'</a>,
--   <a>deleteFHIRDatastore_datastoreId</a> - The AWS-generated ID for the
--   Data Store to be deleted.
newDeleteFHIRDatastore :: DeleteFHIRDatastore

-- | The AWS-generated ID for the Data Store to be deleted.
deleteFHIRDatastore_datastoreId :: Lens' DeleteFHIRDatastore (Maybe Text)

-- | <i>See:</i> <a>newDeleteFHIRDatastoreResponse</a> smart constructor.
data DeleteFHIRDatastoreResponse
DeleteFHIRDatastoreResponse' :: Int -> Text -> Text -> DatastoreStatus -> Text -> DeleteFHIRDatastoreResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteFHIRDatastoreResponse'] :: DeleteFHIRDatastoreResponse -> Int

-- | The AWS-generated ID for the Data Store to be deleted.
[$sel:datastoreId:DeleteFHIRDatastoreResponse'] :: DeleteFHIRDatastoreResponse -> Text

-- | The Amazon Resource Name (ARN) that gives Amazon HealthLake access
--   permission.
[$sel:datastoreArn:DeleteFHIRDatastoreResponse'] :: DeleteFHIRDatastoreResponse -> Text

-- | The status of the Data Store that the user has requested to be
--   deleted.
[$sel:datastoreStatus:DeleteFHIRDatastoreResponse'] :: DeleteFHIRDatastoreResponse -> DatastoreStatus

-- | The AWS endpoint for the Data Store the user has requested to be
--   deleted.
[$sel:datastoreEndpoint:DeleteFHIRDatastoreResponse'] :: DeleteFHIRDatastoreResponse -> Text

-- | Create a value of <a>DeleteFHIRDatastoreResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteFHIRDatastoreResponse'</a>,
--   <a>deleteFHIRDatastoreResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:datastoreId:DeleteFHIRDatastore'</a>,
--   <a>deleteFHIRDatastoreResponse_datastoreId</a> - The AWS-generated ID
--   for the Data Store to be deleted.
--   
--   <a>$sel:datastoreArn:DeleteFHIRDatastoreResponse'</a>,
--   <a>deleteFHIRDatastoreResponse_datastoreArn</a> - The Amazon Resource
--   Name (ARN) that gives Amazon HealthLake access permission.
--   
--   <a>$sel:datastoreStatus:DeleteFHIRDatastoreResponse'</a>,
--   <a>deleteFHIRDatastoreResponse_datastoreStatus</a> - The status of the
--   Data Store that the user has requested to be deleted.
--   
--   <a>$sel:datastoreEndpoint:DeleteFHIRDatastoreResponse'</a>,
--   <a>deleteFHIRDatastoreResponse_datastoreEndpoint</a> - The AWS
--   endpoint for the Data Store the user has requested to be deleted.
newDeleteFHIRDatastoreResponse :: Int -> Text -> Text -> DatastoreStatus -> Text -> DeleteFHIRDatastoreResponse

-- | The response's http status code.
deleteFHIRDatastoreResponse_httpStatus :: Lens' DeleteFHIRDatastoreResponse Int

-- | The AWS-generated ID for the Data Store to be deleted.
deleteFHIRDatastoreResponse_datastoreId :: Lens' DeleteFHIRDatastoreResponse Text

-- | The Amazon Resource Name (ARN) that gives Amazon HealthLake access
--   permission.
deleteFHIRDatastoreResponse_datastoreArn :: Lens' DeleteFHIRDatastoreResponse Text

-- | The status of the Data Store that the user has requested to be
--   deleted.
deleteFHIRDatastoreResponse_datastoreStatus :: Lens' DeleteFHIRDatastoreResponse DatastoreStatus

-- | The AWS endpoint for the Data Store the user has requested to be
--   deleted.
deleteFHIRDatastoreResponse_datastoreEndpoint :: Lens' DeleteFHIRDatastoreResponse Text
instance GHC.Generics.Generic Network.AWS.HealthLake.DeleteFHIRDatastore.DeleteFHIRDatastore
instance GHC.Show.Show Network.AWS.HealthLake.DeleteFHIRDatastore.DeleteFHIRDatastore
instance GHC.Read.Read Network.AWS.HealthLake.DeleteFHIRDatastore.DeleteFHIRDatastore
instance GHC.Classes.Eq Network.AWS.HealthLake.DeleteFHIRDatastore.DeleteFHIRDatastore
instance GHC.Generics.Generic Network.AWS.HealthLake.DeleteFHIRDatastore.DeleteFHIRDatastoreResponse
instance GHC.Show.Show Network.AWS.HealthLake.DeleteFHIRDatastore.DeleteFHIRDatastoreResponse
instance GHC.Read.Read Network.AWS.HealthLake.DeleteFHIRDatastore.DeleteFHIRDatastoreResponse
instance GHC.Classes.Eq Network.AWS.HealthLake.DeleteFHIRDatastore.DeleteFHIRDatastoreResponse
instance Network.AWS.Types.AWSRequest Network.AWS.HealthLake.DeleteFHIRDatastore.DeleteFHIRDatastore
instance Control.DeepSeq.NFData Network.AWS.HealthLake.DeleteFHIRDatastore.DeleteFHIRDatastoreResponse
instance Data.Hashable.Class.Hashable Network.AWS.HealthLake.DeleteFHIRDatastore.DeleteFHIRDatastore
instance Control.DeepSeq.NFData Network.AWS.HealthLake.DeleteFHIRDatastore.DeleteFHIRDatastore
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.HealthLake.DeleteFHIRDatastore.DeleteFHIRDatastore
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.HealthLake.DeleteFHIRDatastore.DeleteFHIRDatastore
instance Network.AWS.Data.Path.ToPath Network.AWS.HealthLake.DeleteFHIRDatastore.DeleteFHIRDatastore
instance Network.AWS.Data.Query.ToQuery Network.AWS.HealthLake.DeleteFHIRDatastore.DeleteFHIRDatastore


-- | Creates a Data Store that can ingest and export FHIR formatted data.
module Network.AWS.HealthLake.CreateFHIRDatastore

-- | <i>See:</i> <a>newCreateFHIRDatastore</a> smart constructor.
data CreateFHIRDatastore
CreateFHIRDatastore' :: Maybe Text -> Maybe SseConfiguration -> Maybe Text -> Maybe PreloadDataConfig -> Maybe [Tag] -> FHIRVersion -> CreateFHIRDatastore

-- | Optional user provided token used for ensuring idempotency.
[$sel:clientToken:CreateFHIRDatastore'] :: CreateFHIRDatastore -> Maybe Text

-- | The server-side encryption key configuration for a customer provided
--   encryption key specified for creating a Data Store.
[$sel:sseConfiguration:CreateFHIRDatastore'] :: CreateFHIRDatastore -> Maybe SseConfiguration

-- | The user generated name for the Data Store.
[$sel:datastoreName:CreateFHIRDatastore'] :: CreateFHIRDatastore -> Maybe Text

-- | Optional parameter to preload data upon creation of the Data Store.
--   Currently, the only supported preloaded data is synthetic data
--   generated from Synthea.
[$sel:preloadDataConfig:CreateFHIRDatastore'] :: CreateFHIRDatastore -> Maybe PreloadDataConfig

-- | Resource tags that are applied to a Data Store when it is created.
[$sel:tags:CreateFHIRDatastore'] :: CreateFHIRDatastore -> Maybe [Tag]

-- | The FHIR version of the Data Store. The only supported version is R4.
[$sel:datastoreTypeVersion:CreateFHIRDatastore'] :: CreateFHIRDatastore -> FHIRVersion

-- | Create a value of <a>CreateFHIRDatastore</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:CreateFHIRDatastore'</a>,
--   <a>createFHIRDatastore_clientToken</a> - Optional user provided token
--   used for ensuring idempotency.
--   
--   <a>$sel:sseConfiguration:CreateFHIRDatastore'</a>,
--   <a>createFHIRDatastore_sseConfiguration</a> - The server-side
--   encryption key configuration for a customer provided encryption key
--   specified for creating a Data Store.
--   
--   <a>$sel:datastoreName:CreateFHIRDatastore'</a>,
--   <a>createFHIRDatastore_datastoreName</a> - The user generated name for
--   the Data Store.
--   
--   <a>$sel:preloadDataConfig:CreateFHIRDatastore'</a>,
--   <a>createFHIRDatastore_preloadDataConfig</a> - Optional parameter to
--   preload data upon creation of the Data Store. Currently, the only
--   supported preloaded data is synthetic data generated from Synthea.
--   
--   <a>$sel:tags:CreateFHIRDatastore'</a>, <a>createFHIRDatastore_tags</a>
--   - Resource tags that are applied to a Data Store when it is created.
--   
--   <a>$sel:datastoreTypeVersion:CreateFHIRDatastore'</a>,
--   <a>createFHIRDatastore_datastoreTypeVersion</a> - The FHIR version of
--   the Data Store. The only supported version is R4.
newCreateFHIRDatastore :: FHIRVersion -> CreateFHIRDatastore

-- | Optional user provided token used for ensuring idempotency.
createFHIRDatastore_clientToken :: Lens' CreateFHIRDatastore (Maybe Text)

-- | The server-side encryption key configuration for a customer provided
--   encryption key specified for creating a Data Store.
createFHIRDatastore_sseConfiguration :: Lens' CreateFHIRDatastore (Maybe SseConfiguration)

-- | The user generated name for the Data Store.
createFHIRDatastore_datastoreName :: Lens' CreateFHIRDatastore (Maybe Text)

-- | Optional parameter to preload data upon creation of the Data Store.
--   Currently, the only supported preloaded data is synthetic data
--   generated from Synthea.
createFHIRDatastore_preloadDataConfig :: Lens' CreateFHIRDatastore (Maybe PreloadDataConfig)

-- | Resource tags that are applied to a Data Store when it is created.
createFHIRDatastore_tags :: Lens' CreateFHIRDatastore (Maybe [Tag])

-- | The FHIR version of the Data Store. The only supported version is R4.
createFHIRDatastore_datastoreTypeVersion :: Lens' CreateFHIRDatastore FHIRVersion

-- | <i>See:</i> <a>newCreateFHIRDatastoreResponse</a> smart constructor.
data CreateFHIRDatastoreResponse
CreateFHIRDatastoreResponse' :: Int -> Text -> Text -> DatastoreStatus -> Text -> CreateFHIRDatastoreResponse

-- | The response's http status code.
[$sel:httpStatus:CreateFHIRDatastoreResponse'] :: CreateFHIRDatastoreResponse -> Int

-- | The AWS-generated Data Store id. This id is in the output from the
--   initial Data Store creation call.
[$sel:datastoreId:CreateFHIRDatastoreResponse'] :: CreateFHIRDatastoreResponse -> Text

-- | The datastore ARN is generated during the creation of the Data Store
--   and can be found in the output from the initial Data Store creation
--   call.
[$sel:datastoreArn:CreateFHIRDatastoreResponse'] :: CreateFHIRDatastoreResponse -> Text

-- | The status of the FHIR Data Store. Possible statuses are ‘CREATING’,
--   ‘ACTIVE’, ‘DELETING’, ‘DELETED’.
[$sel:datastoreStatus:CreateFHIRDatastoreResponse'] :: CreateFHIRDatastoreResponse -> DatastoreStatus

-- | The AWS endpoint for the created Data Store. For preview, only
--   US-east-1 endpoints are supported.
[$sel:datastoreEndpoint:CreateFHIRDatastoreResponse'] :: CreateFHIRDatastoreResponse -> Text

-- | Create a value of <a>CreateFHIRDatastoreResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateFHIRDatastoreResponse'</a>,
--   <a>createFHIRDatastoreResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:datastoreId:CreateFHIRDatastoreResponse'</a>,
--   <a>createFHIRDatastoreResponse_datastoreId</a> - The AWS-generated
--   Data Store id. This id is in the output from the initial Data Store
--   creation call.
--   
--   <a>$sel:datastoreArn:CreateFHIRDatastoreResponse'</a>,
--   <a>createFHIRDatastoreResponse_datastoreArn</a> - The datastore ARN is
--   generated during the creation of the Data Store and can be found in
--   the output from the initial Data Store creation call.
--   
--   <a>$sel:datastoreStatus:CreateFHIRDatastoreResponse'</a>,
--   <a>createFHIRDatastoreResponse_datastoreStatus</a> - The status of the
--   FHIR Data Store. Possible statuses are ‘CREATING’, ‘ACTIVE’,
--   ‘DELETING’, ‘DELETED’.
--   
--   <a>$sel:datastoreEndpoint:CreateFHIRDatastoreResponse'</a>,
--   <a>createFHIRDatastoreResponse_datastoreEndpoint</a> - The AWS
--   endpoint for the created Data Store. For preview, only US-east-1
--   endpoints are supported.
newCreateFHIRDatastoreResponse :: Int -> Text -> Text -> DatastoreStatus -> Text -> CreateFHIRDatastoreResponse

-- | The response's http status code.
createFHIRDatastoreResponse_httpStatus :: Lens' CreateFHIRDatastoreResponse Int

-- | The AWS-generated Data Store id. This id is in the output from the
--   initial Data Store creation call.
createFHIRDatastoreResponse_datastoreId :: Lens' CreateFHIRDatastoreResponse Text

-- | The datastore ARN is generated during the creation of the Data Store
--   and can be found in the output from the initial Data Store creation
--   call.
createFHIRDatastoreResponse_datastoreArn :: Lens' CreateFHIRDatastoreResponse Text

-- | The status of the FHIR Data Store. Possible statuses are ‘CREATING’,
--   ‘ACTIVE’, ‘DELETING’, ‘DELETED’.
createFHIRDatastoreResponse_datastoreStatus :: Lens' CreateFHIRDatastoreResponse DatastoreStatus

-- | The AWS endpoint for the created Data Store. For preview, only
--   US-east-1 endpoints are supported.
createFHIRDatastoreResponse_datastoreEndpoint :: Lens' CreateFHIRDatastoreResponse Text
instance GHC.Generics.Generic Network.AWS.HealthLake.CreateFHIRDatastore.CreateFHIRDatastore
instance GHC.Show.Show Network.AWS.HealthLake.CreateFHIRDatastore.CreateFHIRDatastore
instance GHC.Read.Read Network.AWS.HealthLake.CreateFHIRDatastore.CreateFHIRDatastore
instance GHC.Classes.Eq Network.AWS.HealthLake.CreateFHIRDatastore.CreateFHIRDatastore
instance GHC.Generics.Generic Network.AWS.HealthLake.CreateFHIRDatastore.CreateFHIRDatastoreResponse
instance GHC.Show.Show Network.AWS.HealthLake.CreateFHIRDatastore.CreateFHIRDatastoreResponse
instance GHC.Read.Read Network.AWS.HealthLake.CreateFHIRDatastore.CreateFHIRDatastoreResponse
instance GHC.Classes.Eq Network.AWS.HealthLake.CreateFHIRDatastore.CreateFHIRDatastoreResponse
instance Network.AWS.Types.AWSRequest Network.AWS.HealthLake.CreateFHIRDatastore.CreateFHIRDatastore
instance Control.DeepSeq.NFData Network.AWS.HealthLake.CreateFHIRDatastore.CreateFHIRDatastoreResponse
instance Data.Hashable.Class.Hashable Network.AWS.HealthLake.CreateFHIRDatastore.CreateFHIRDatastore
instance Control.DeepSeq.NFData Network.AWS.HealthLake.CreateFHIRDatastore.CreateFHIRDatastore
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.HealthLake.CreateFHIRDatastore.CreateFHIRDatastore
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.HealthLake.CreateFHIRDatastore.CreateFHIRDatastore
instance Network.AWS.Data.Path.ToPath Network.AWS.HealthLake.CreateFHIRDatastore.CreateFHIRDatastore
instance Network.AWS.Data.Query.ToQuery Network.AWS.HealthLake.CreateFHIRDatastore.CreateFHIRDatastore


-- | Removes tags from a Data Store.
module Network.AWS.HealthLake.UntagResource

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | "The Amazon Resource Name(ARN) of the Data Store for which tags are
--   being removed
[$sel:resourceARN:UntagResource'] :: UntagResource -> Text

-- | The keys for the tags to be removed from the Healthlake Data Store.
[$sel:tagKeys:UntagResource'] :: UntagResource -> [Text]

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:UntagResource'</a>,
--   <a>untagResource_resourceARN</a> - "The Amazon Resource Name(ARN) of
--   the Data Store for which tags are being removed
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   keys for the tags to be removed from the Healthlake Data Store.
newUntagResource :: Text -> UntagResource

-- | "The Amazon Resource Name(ARN) of the Data Store for which tags are
--   being removed
untagResource_resourceARN :: Lens' UntagResource Text

-- | The keys for the tags to be removed from the Healthlake Data Store.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:UntagResourceResponse'] :: UntagResourceResponse -> Int

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int
instance GHC.Generics.Generic Network.AWS.HealthLake.UntagResource.UntagResource
instance GHC.Show.Show Network.AWS.HealthLake.UntagResource.UntagResource
instance GHC.Read.Read Network.AWS.HealthLake.UntagResource.UntagResource
instance GHC.Classes.Eq Network.AWS.HealthLake.UntagResource.UntagResource
instance GHC.Generics.Generic Network.AWS.HealthLake.UntagResource.UntagResourceResponse
instance GHC.Show.Show Network.AWS.HealthLake.UntagResource.UntagResourceResponse
instance GHC.Read.Read Network.AWS.HealthLake.UntagResource.UntagResourceResponse
instance GHC.Classes.Eq Network.AWS.HealthLake.UntagResource.UntagResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.HealthLake.UntagResource.UntagResource
instance Control.DeepSeq.NFData Network.AWS.HealthLake.UntagResource.UntagResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.HealthLake.UntagResource.UntagResource
instance Control.DeepSeq.NFData Network.AWS.HealthLake.UntagResource.UntagResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.HealthLake.UntagResource.UntagResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.HealthLake.UntagResource.UntagResource
instance Network.AWS.Data.Path.ToPath Network.AWS.HealthLake.UntagResource.UntagResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.HealthLake.UntagResource.UntagResource


module Network.AWS.HealthLake.Lens

-- | The name of the FHIR Import job in the StartFHIRImport job request.
startFHIRImportJob_jobName :: Lens' StartFHIRImportJob (Maybe Text)

-- | The input properties of the FHIR Import job in the StartFHIRImport job
--   request.
startFHIRImportJob_inputDataConfig :: Lens' StartFHIRImportJob InputDataConfig

-- | Undocumented member.
startFHIRImportJob_jobOutputDataConfig :: Lens' StartFHIRImportJob OutputDataConfig

-- | The AWS-generated Data Store ID.
startFHIRImportJob_datastoreId :: Lens' StartFHIRImportJob Text

-- | The Amazon Resource Name (ARN) that gives Amazon HealthLake access
--   permission.
startFHIRImportJob_dataAccessRoleArn :: Lens' StartFHIRImportJob Text

-- | Optional user provided token used for ensuring idempotency.
startFHIRImportJob_clientToken :: Lens' StartFHIRImportJob Text

-- | The AWS-generated Data Store ID.
startFHIRImportJobResponse_datastoreId :: Lens' StartFHIRImportJobResponse (Maybe Text)

-- | The response's http status code.
startFHIRImportJobResponse_httpStatus :: Lens' StartFHIRImportJobResponse Int

-- | The AWS-generated job ID.
startFHIRImportJobResponse_jobId :: Lens' StartFHIRImportJobResponse Text

-- | The status of an import job.
startFHIRImportJobResponse_jobStatus :: Lens' StartFHIRImportJobResponse JobStatus

-- | The AWS-generated Data Store id. This is part of the
--   ‘CreateFHIRDatastore’ output.
describeFHIRDatastore_datastoreId :: Lens' DescribeFHIRDatastore (Maybe Text)

-- | The response's http status code.
describeFHIRDatastoreResponse_httpStatus :: Lens' DescribeFHIRDatastoreResponse Int

-- | All properties associated with a Data Store, including the Data Store
--   ID, Data Store ARN, Data Store name, Data Store status, created at,
--   Data Store type version, and Data Store endpoint.
describeFHIRDatastoreResponse_datastoreProperties :: Lens' DescribeFHIRDatastoreResponse DatastoreProperties

-- | The AWS-generated ID of the Data Store.
describeFHIRImportJob_datastoreId :: Lens' DescribeFHIRImportJob Text

-- | The AWS-generated job ID.
describeFHIRImportJob_jobId :: Lens' DescribeFHIRImportJob Text

-- | The response's http status code.
describeFHIRImportJobResponse_httpStatus :: Lens' DescribeFHIRImportJobResponse Int

-- | The properties of the Import job request, including the ID, ARN, name,
--   and the status of the job.
describeFHIRImportJobResponse_importJobProperties :: Lens' DescribeFHIRImportJobResponse ImportJobProperties

-- | The Amazon Resource Name(ARN) of the Data Store for which tags are
--   being added.
listTagsForResource_resourceARN :: Lens' ListTagsForResource Text

-- | Returns a list of tags associated with a Data Store.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe [Tag])

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int

-- | The AWS-generated ID for the Data Store to be deleted.
deleteFHIRDatastore_datastoreId :: Lens' DeleteFHIRDatastore (Maybe Text)

-- | The response's http status code.
deleteFHIRDatastoreResponse_httpStatus :: Lens' DeleteFHIRDatastoreResponse Int

-- | The AWS-generated ID for the Data Store to be deleted.
deleteFHIRDatastoreResponse_datastoreId :: Lens' DeleteFHIRDatastoreResponse Text

-- | The Amazon Resource Name (ARN) that gives Amazon HealthLake access
--   permission.
deleteFHIRDatastoreResponse_datastoreArn :: Lens' DeleteFHIRDatastoreResponse Text

-- | The status of the Data Store that the user has requested to be
--   deleted.
deleteFHIRDatastoreResponse_datastoreStatus :: Lens' DeleteFHIRDatastoreResponse DatastoreStatus

-- | The AWS endpoint for the Data Store the user has requested to be
--   deleted.
deleteFHIRDatastoreResponse_datastoreEndpoint :: Lens' DeleteFHIRDatastoreResponse Text

-- | The AWS generated ID for the Data Store from which files are being
--   exported from for an export job.
describeFHIRExportJob_datastoreId :: Lens' DescribeFHIRExportJob Text

-- | The AWS generated ID for an export job.
describeFHIRExportJob_jobId :: Lens' DescribeFHIRExportJob Text

-- | The response's http status code.
describeFHIRExportJobResponse_httpStatus :: Lens' DescribeFHIRExportJobResponse Int

-- | Displays the properties of the export job, including the ID, Arn,
--   Name, and the status of the job.
describeFHIRExportJobResponse_exportJobProperties :: Lens' DescribeFHIRExportJobResponse ExportJobProperties

-- | Optional user provided token used for ensuring idempotency.
createFHIRDatastore_clientToken :: Lens' CreateFHIRDatastore (Maybe Text)

-- | The server-side encryption key configuration for a customer provided
--   encryption key specified for creating a Data Store.
createFHIRDatastore_sseConfiguration :: Lens' CreateFHIRDatastore (Maybe SseConfiguration)

-- | The user generated name for the Data Store.
createFHIRDatastore_datastoreName :: Lens' CreateFHIRDatastore (Maybe Text)

-- | Optional parameter to preload data upon creation of the Data Store.
--   Currently, the only supported preloaded data is synthetic data
--   generated from Synthea.
createFHIRDatastore_preloadDataConfig :: Lens' CreateFHIRDatastore (Maybe PreloadDataConfig)

-- | Resource tags that are applied to a Data Store when it is created.
createFHIRDatastore_tags :: Lens' CreateFHIRDatastore (Maybe [Tag])

-- | The FHIR version of the Data Store. The only supported version is R4.
createFHIRDatastore_datastoreTypeVersion :: Lens' CreateFHIRDatastore FHIRVersion

-- | The response's http status code.
createFHIRDatastoreResponse_httpStatus :: Lens' CreateFHIRDatastoreResponse Int

-- | The AWS-generated Data Store id. This id is in the output from the
--   initial Data Store creation call.
createFHIRDatastoreResponse_datastoreId :: Lens' CreateFHIRDatastoreResponse Text

-- | The datastore ARN is generated during the creation of the Data Store
--   and can be found in the output from the initial Data Store creation
--   call.
createFHIRDatastoreResponse_datastoreArn :: Lens' CreateFHIRDatastoreResponse Text

-- | The status of the FHIR Data Store. Possible statuses are ‘CREATING’,
--   ‘ACTIVE’, ‘DELETING’, ‘DELETED’.
createFHIRDatastoreResponse_datastoreStatus :: Lens' CreateFHIRDatastoreResponse DatastoreStatus

-- | The AWS endpoint for the created Data Store. For preview, only
--   US-east-1 endpoints are supported.
createFHIRDatastoreResponse_datastoreEndpoint :: Lens' CreateFHIRDatastoreResponse Text

-- | This parameter limits the response to FHIR export jobs submitted after
--   a user specified date.
listFHIRExportJobs_submittedAfter :: Lens' ListFHIRExportJobs (Maybe UTCTime)

-- | This parameter limits the response to the export job with the
--   specified job name.
listFHIRExportJobs_jobName :: Lens' ListFHIRExportJobs (Maybe Text)

-- | This parameter limits the response to FHIR export jobs submitted
--   before a user specified date.
listFHIRExportJobs_submittedBefore :: Lens' ListFHIRExportJobs (Maybe UTCTime)

-- | A pagination token used to identify the next page of results to return
--   for a ListFHIRExportJobs query.
listFHIRExportJobs_nextToken :: Lens' ListFHIRExportJobs (Maybe Text)

-- | This parameter limits the response to the export jobs with the
--   specified job status.
listFHIRExportJobs_jobStatus :: Lens' ListFHIRExportJobs (Maybe JobStatus)

-- | This parameter limits the number of results returned for a
--   ListFHIRExportJobs to a maximum quantity specified by the user.
listFHIRExportJobs_maxResults :: Lens' ListFHIRExportJobs (Maybe Natural)

-- | This parameter limits the response to the export job with the
--   specified Data Store ID.
listFHIRExportJobs_datastoreId :: Lens' ListFHIRExportJobs Text

-- | A pagination token used to identify the next page of results to return
--   for a ListFHIRExportJobs query.
listFHIRExportJobsResponse_nextToken :: Lens' ListFHIRExportJobsResponse (Maybe Text)

-- | The response's http status code.
listFHIRExportJobsResponse_httpStatus :: Lens' ListFHIRExportJobsResponse Int

-- | The properties of listed FHIR export jobs, including the ID, ARN,
--   name, and the status of the job.
listFHIRExportJobsResponse_exportJobPropertiesList :: Lens' ListFHIRExportJobsResponse [ExportJobProperties]

-- | The Amazon Resource Name(ARN)that gives Amazon HealthLake access to
--   the Data Store which tags are being added to.
tagResource_resourceARN :: Lens' TagResource Text

-- | The user specified key and value pair tags being added to a Data
--   Store.
tagResource_tags :: Lens' TagResource [Tag]

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int

-- | "The Amazon Resource Name(ARN) of the Data Store for which tags are
--   being removed
untagResource_resourceARN :: Lens' UntagResource Text

-- | The keys for the tags to be removed from the Healthlake Data Store.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int

-- | Fetches the next page of Data Stores when results are paginated.
listFHIRDatastores_nextToken :: Lens' ListFHIRDatastores (Maybe Text)

-- | Lists all filters associated with a FHIR Data Store request.
listFHIRDatastores_filter :: Lens' ListFHIRDatastores (Maybe DatastoreFilter)

-- | The maximum number of Data Stores returned in a single page of a
--   ListFHIRDatastoresRequest call.
listFHIRDatastores_maxResults :: Lens' ListFHIRDatastores (Maybe Natural)

-- | Pagination token that can be used to retrieve the next page of
--   results.
listFHIRDatastoresResponse_nextToken :: Lens' ListFHIRDatastoresResponse (Maybe Text)

-- | The response's http status code.
listFHIRDatastoresResponse_httpStatus :: Lens' ListFHIRDatastoresResponse Int

-- | All properties associated with the listed Data Stores.
listFHIRDatastoresResponse_datastorePropertiesList :: Lens' ListFHIRDatastoresResponse [DatastoreProperties]

-- | The user generated name for an export job.
startFHIRExportJob_jobName :: Lens' StartFHIRExportJob (Maybe Text)

-- | The output data configuration that was supplied when the export job
--   was created.
startFHIRExportJob_outputDataConfig :: Lens' StartFHIRExportJob OutputDataConfig

-- | The AWS generated ID for the Data Store from which files are being
--   exported for an export job.
startFHIRExportJob_datastoreId :: Lens' StartFHIRExportJob Text

-- | The Amazon Resource Name used during the initiation of the job.
startFHIRExportJob_dataAccessRoleArn :: Lens' StartFHIRExportJob Text

-- | An optional user provided token used for ensuring idempotency.
startFHIRExportJob_clientToken :: Lens' StartFHIRExportJob Text

-- | The AWS generated ID for the Data Store from which files are being
--   exported for an export job.
startFHIRExportJobResponse_datastoreId :: Lens' StartFHIRExportJobResponse (Maybe Text)

-- | The response's http status code.
startFHIRExportJobResponse_httpStatus :: Lens' StartFHIRExportJobResponse Int

-- | The AWS generated ID for an export job.
startFHIRExportJobResponse_jobId :: Lens' StartFHIRExportJobResponse Text

-- | The status of a FHIR export job. Possible statuses are SUBMITTED,
--   IN_PROGRESS, COMPLETED, or FAILED.
startFHIRExportJobResponse_jobStatus :: Lens' StartFHIRExportJobResponse JobStatus

-- | This parameter limits the response to FHIR import jobs submitted after
--   a user specified date.
listFHIRImportJobs_submittedAfter :: Lens' ListFHIRImportJobs (Maybe UTCTime)

-- | This parameter limits the response to the import job with the
--   specified job name.
listFHIRImportJobs_jobName :: Lens' ListFHIRImportJobs (Maybe Text)

-- | This parameter limits the response to FHIR import jobs submitted
--   before a user specified date.
listFHIRImportJobs_submittedBefore :: Lens' ListFHIRImportJobs (Maybe UTCTime)

-- | A pagination token used to identify the next page of results to return
--   for a ListFHIRImportJobs query.
listFHIRImportJobs_nextToken :: Lens' ListFHIRImportJobs (Maybe Text)

-- | This parameter limits the response to the import job with the
--   specified job status.
listFHIRImportJobs_jobStatus :: Lens' ListFHIRImportJobs (Maybe JobStatus)

-- | This parameter limits the number of results returned for a
--   ListFHIRImportJobs to a maximum quantity specified by the user.
listFHIRImportJobs_maxResults :: Lens' ListFHIRImportJobs (Maybe Natural)

-- | This parameter limits the response to the import job with the
--   specified Data Store ID.
listFHIRImportJobs_datastoreId :: Lens' ListFHIRImportJobs Text

-- | A pagination token used to identify the next page of results to return
--   for a ListFHIRImportJobs query.
listFHIRImportJobsResponse_nextToken :: Lens' ListFHIRImportJobsResponse (Maybe Text)

-- | The response's http status code.
listFHIRImportJobsResponse_httpStatus :: Lens' ListFHIRImportJobsResponse Int

-- | The properties of a listed FHIR import jobs, including the ID, ARN,
--   name, and the status of the job.
listFHIRImportJobsResponse_importJobPropertiesList :: Lens' ListFHIRImportJobsResponse [ImportJobProperties]

-- | A filter that allows the user to set cutoff dates for records. All
--   Data Stores created after the specified date will be included in the
--   results.
datastoreFilter_createdAfter :: Lens' DatastoreFilter (Maybe UTCTime)

-- | Allows the user to filter Data Store results by name.
datastoreFilter_datastoreName :: Lens' DatastoreFilter (Maybe Text)

-- | Allows the user to filter Data Store results by status.
datastoreFilter_datastoreStatus :: Lens' DatastoreFilter (Maybe DatastoreStatus)

-- | A filter that allows the user to set cutoff dates for records. All
--   Data Stores created before the specified date will be included in the
--   results.
datastoreFilter_createdBefore :: Lens' DatastoreFilter (Maybe UTCTime)

-- | The server-side encryption key configuration for a customer provided
--   encryption key (CMK).
datastoreProperties_sseConfiguration :: Lens' DatastoreProperties (Maybe SseConfiguration)

-- | The time that a Data Store was created.
datastoreProperties_createdAt :: Lens' DatastoreProperties (Maybe UTCTime)

-- | The user-generated name for the Data Store.
datastoreProperties_datastoreName :: Lens' DatastoreProperties (Maybe Text)

-- | The preloaded data configuration for the Data Store. Only data
--   preloaded from Synthea is supported.
datastoreProperties_preloadDataConfig :: Lens' DatastoreProperties (Maybe PreloadDataConfig)

-- | The AWS-generated ID number for the Data Store.
datastoreProperties_datastoreId :: Lens' DatastoreProperties Text

-- | The Amazon Resource Name used in the creation of the Data Store.
datastoreProperties_datastoreArn :: Lens' DatastoreProperties Text

-- | The status of the Data Store. Possible statuses are 'CREATING',
--   'ACTIVE', 'DELETING', or 'DELETED'.
datastoreProperties_datastoreStatus :: Lens' DatastoreProperties DatastoreStatus

-- | The FHIR version. Only R4 version data is supported.
datastoreProperties_datastoreTypeVersion :: Lens' DatastoreProperties FHIRVersion

-- | The AWS endpoint for the Data Store. Each Data Store will have it's
--   own endpoint with Data Store ID in the endpoint URL.
datastoreProperties_datastoreEndpoint :: Lens' DatastoreProperties Text

-- | The user generated name for an export job.
exportJobProperties_jobName :: Lens' ExportJobProperties (Maybe Text)

-- | The time an export job completed.
exportJobProperties_endTime :: Lens' ExportJobProperties (Maybe UTCTime)

-- | The Amazon Resource Name used during the initiation of the job.
exportJobProperties_dataAccessRoleArn :: Lens' ExportJobProperties (Maybe Text)

-- | An explanation of any errors that may have occurred during the export
--   job.
exportJobProperties_message :: Lens' ExportJobProperties (Maybe Text)

-- | The AWS generated ID for an export job.
exportJobProperties_jobId :: Lens' ExportJobProperties Text

-- | The status of a FHIR export job. Possible statuses are SUBMITTED,
--   IN_PROGRESS, COMPLETED, or FAILED.
exportJobProperties_jobStatus :: Lens' ExportJobProperties JobStatus

-- | The time an export job was initiated.
exportJobProperties_submitTime :: Lens' ExportJobProperties UTCTime

-- | The AWS generated ID for the Data Store from which files are being
--   exported for an export job.
exportJobProperties_datastoreId :: Lens' ExportJobProperties Text

-- | The output data configuration that was supplied when the export job
--   was created.
exportJobProperties_outputDataConfig :: Lens' ExportJobProperties OutputDataConfig

-- | Undocumented member.
importJobProperties_jobOutputDataConfig :: Lens' ImportJobProperties (Maybe OutputDataConfig)

-- | The user-generated name for an Import job.
importJobProperties_jobName :: Lens' ImportJobProperties (Maybe Text)

-- | The time that the Import job was completed.
importJobProperties_endTime :: Lens' ImportJobProperties (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) that gives Amazon HealthLake access to
--   your input data.
importJobProperties_dataAccessRoleArn :: Lens' ImportJobProperties (Maybe Text)

-- | An explanation of any errors that may have occurred during the FHIR
--   import job.
importJobProperties_message :: Lens' ImportJobProperties (Maybe Text)

-- | The AWS-generated id number for the Import job.
importJobProperties_jobId :: Lens' ImportJobProperties Text

-- | The job status for an Import job. Possible statuses are SUBMITTED,
--   IN_PROGRESS, COMPLETED, FAILED.
importJobProperties_jobStatus :: Lens' ImportJobProperties JobStatus

-- | The time that the Import job was submitted for processing.
importJobProperties_submitTime :: Lens' ImportJobProperties UTCTime

-- | The datastore id used when the Import job was created.
importJobProperties_datastoreId :: Lens' ImportJobProperties Text

-- | The input data configuration that was supplied when the Import job was
--   created.
importJobProperties_inputDataConfig :: Lens' ImportJobProperties InputDataConfig

-- | The S3Uri is the user specified S3 location of the FHIR data to be
--   imported into Amazon HealthLake.
inputDataConfig_s3Uri :: Lens' InputDataConfig (Maybe Text)

-- | The KMS encryption key id/alias used to encrypt the Data Store
--   contents at rest.
kmsEncryptionConfig_kmsKeyId :: Lens' KmsEncryptionConfig (Maybe Text)

-- | The type of customer-managed-key(CMK) used for encyrption. The two
--   types of supported CMKs are customer owned CMKs and AWS owned CMKs.
kmsEncryptionConfig_cmkType :: Lens' KmsEncryptionConfig CmkType

-- | The output data configuration that was supplied when the export job
--   was created.
outputDataConfig_s3Configuration :: Lens' OutputDataConfig (Maybe S3Configuration)

-- | The type of preloaded data. Only Synthea preloaded data is supported.
preloadDataConfig_preloadDataType :: Lens' PreloadDataConfig PreloadDataType

-- | The S3Uri is the user specified S3 location of the FHIR data to be
--   imported into Amazon HealthLake.
s3Configuration_s3Uri :: Lens' S3Configuration Text

-- | The KMS key ID used to access the S3 bucket.
s3Configuration_kmsKeyId :: Lens' S3Configuration Text

-- | The KMS encryption configuration used to provide details for data
--   encryption.
sseConfiguration_kmsEncryptionConfig :: Lens' SseConfiguration KmsEncryptionConfig

-- | The key portion of a tag. Tag keys are case sensitive.
tag_key :: Lens' Tag Text

-- | The value portion of tag. Tag values are case sensitive.
tag_value :: Lens' Tag Text


module Network.AWS.HealthLake.Waiters


-- | Derived from API version <tt>2017-07-01</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   Amazon HealthLake is a HIPAA eligibile service that allows customers
--   to store, transform, query, and analyze their FHIR-formatted data in a
--   consistent fashion in the cloud.
module Network.AWS.HealthLake

-- | API version <tt>2017-07-01</tt> of the Amazon HealthLake SDK
--   configuration.
defaultService :: Service

-- | The user input parameter was invalid.
_ValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Access is denied. Your account is not authorized to perform this
--   operation.
_AccessDeniedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The Data Store is in a transition state and the user requested action
--   can not be performed.
_ConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The user has exceeded their maximum number of allowed calls to the
--   given API.
_ThrottlingException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Unknown error occurs in the service.
_InternalServerException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested Data Store was not found.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newStartFHIRImportJob</a> smart constructor.
data StartFHIRImportJob
StartFHIRImportJob' :: Maybe Text -> InputDataConfig -> OutputDataConfig -> Text -> Text -> Text -> StartFHIRImportJob

-- | Create a value of <a>StartFHIRImportJob</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobName:StartFHIRImportJob'</a>,
--   <a>startFHIRImportJob_jobName</a> - The name of the FHIR Import job in
--   the StartFHIRImport job request.
--   
--   <a>$sel:inputDataConfig:StartFHIRImportJob'</a>,
--   <a>startFHIRImportJob_inputDataConfig</a> - The input properties of
--   the FHIR Import job in the StartFHIRImport job request.
--   
--   <a>$sel:jobOutputDataConfig:StartFHIRImportJob'</a>,
--   <a>startFHIRImportJob_jobOutputDataConfig</a> - Undocumented member.
--   
--   <a>$sel:datastoreId:StartFHIRImportJob'</a>,
--   <a>startFHIRImportJob_datastoreId</a> - The AWS-generated Data Store
--   ID.
--   
--   <a>$sel:dataAccessRoleArn:StartFHIRImportJob'</a>,
--   <a>startFHIRImportJob_dataAccessRoleArn</a> - The Amazon Resource Name
--   (ARN) that gives Amazon HealthLake access permission.
--   
--   <a>$sel:clientToken:StartFHIRImportJob'</a>,
--   <a>startFHIRImportJob_clientToken</a> - Optional user provided token
--   used for ensuring idempotency.
newStartFHIRImportJob :: InputDataConfig -> OutputDataConfig -> Text -> Text -> Text -> StartFHIRImportJob

-- | <i>See:</i> <a>newStartFHIRImportJobResponse</a> smart constructor.
data StartFHIRImportJobResponse
StartFHIRImportJobResponse' :: Maybe Text -> Int -> Text -> JobStatus -> StartFHIRImportJobResponse

-- | Create a value of <a>StartFHIRImportJobResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:datastoreId:StartFHIRImportJob'</a>,
--   <a>startFHIRImportJobResponse_datastoreId</a> - The AWS-generated Data
--   Store ID.
--   
--   <a>$sel:httpStatus:StartFHIRImportJobResponse'</a>,
--   <a>startFHIRImportJobResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:jobId:StartFHIRImportJobResponse'</a>,
--   <a>startFHIRImportJobResponse_jobId</a> - The AWS-generated job ID.
--   
--   <a>$sel:jobStatus:StartFHIRImportJobResponse'</a>,
--   <a>startFHIRImportJobResponse_jobStatus</a> - The status of an import
--   job.
newStartFHIRImportJobResponse :: Int -> Text -> JobStatus -> StartFHIRImportJobResponse

-- | <i>See:</i> <a>newDescribeFHIRDatastore</a> smart constructor.
data DescribeFHIRDatastore
DescribeFHIRDatastore' :: Maybe Text -> DescribeFHIRDatastore

-- | Create a value of <a>DescribeFHIRDatastore</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:datastoreId:DescribeFHIRDatastore'</a>,
--   <a>describeFHIRDatastore_datastoreId</a> - The AWS-generated Data
--   Store id. This is part of the ‘CreateFHIRDatastore’ output.
newDescribeFHIRDatastore :: DescribeFHIRDatastore

-- | <i>See:</i> <a>newDescribeFHIRDatastoreResponse</a> smart constructor.
data DescribeFHIRDatastoreResponse
DescribeFHIRDatastoreResponse' :: Int -> DatastoreProperties -> DescribeFHIRDatastoreResponse

-- | Create a value of <a>DescribeFHIRDatastoreResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DescribeFHIRDatastoreResponse'</a>,
--   <a>describeFHIRDatastoreResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:datastoreProperties:DescribeFHIRDatastoreResponse'</a>,
--   <a>describeFHIRDatastoreResponse_datastoreProperties</a> - All
--   properties associated with a Data Store, including the Data Store ID,
--   Data Store ARN, Data Store name, Data Store status, created at, Data
--   Store type version, and Data Store endpoint.
newDescribeFHIRDatastoreResponse :: Int -> DatastoreProperties -> DescribeFHIRDatastoreResponse

-- | <i>See:</i> <a>newDescribeFHIRImportJob</a> smart constructor.
data DescribeFHIRImportJob
DescribeFHIRImportJob' :: Text -> Text -> DescribeFHIRImportJob

-- | Create a value of <a>DescribeFHIRImportJob</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:datastoreId:DescribeFHIRImportJob'</a>,
--   <a>describeFHIRImportJob_datastoreId</a> - The AWS-generated ID of the
--   Data Store.
--   
--   <a>$sel:jobId:DescribeFHIRImportJob'</a>,
--   <a>describeFHIRImportJob_jobId</a> - The AWS-generated job ID.
newDescribeFHIRImportJob :: Text -> Text -> DescribeFHIRImportJob

-- | <i>See:</i> <a>newDescribeFHIRImportJobResponse</a> smart constructor.
data DescribeFHIRImportJobResponse
DescribeFHIRImportJobResponse' :: Int -> ImportJobProperties -> DescribeFHIRImportJobResponse

-- | Create a value of <a>DescribeFHIRImportJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DescribeFHIRImportJobResponse'</a>,
--   <a>describeFHIRImportJobResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:importJobProperties:DescribeFHIRImportJobResponse'</a>,
--   <a>describeFHIRImportJobResponse_importJobProperties</a> - The
--   properties of the Import job request, including the ID, ARN, name, and
--   the status of the job.
newDescribeFHIRImportJobResponse :: Int -> ImportJobProperties -> DescribeFHIRImportJobResponse

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceARN</a> - The Amazon Resource Name(ARN)
--   of the Data Store for which tags are being added.
newListTagsForResource :: Text -> ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe [Tag] -> Int -> ListTagsForResourceResponse

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - Returns a list of tags
--   associated with a Data Store.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | <i>See:</i> <a>newDeleteFHIRDatastore</a> smart constructor.
data DeleteFHIRDatastore
DeleteFHIRDatastore' :: Maybe Text -> DeleteFHIRDatastore

-- | Create a value of <a>DeleteFHIRDatastore</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:datastoreId:DeleteFHIRDatastore'</a>,
--   <a>deleteFHIRDatastore_datastoreId</a> - The AWS-generated ID for the
--   Data Store to be deleted.
newDeleteFHIRDatastore :: DeleteFHIRDatastore

-- | <i>See:</i> <a>newDeleteFHIRDatastoreResponse</a> smart constructor.
data DeleteFHIRDatastoreResponse
DeleteFHIRDatastoreResponse' :: Int -> Text -> Text -> DatastoreStatus -> Text -> DeleteFHIRDatastoreResponse

-- | Create a value of <a>DeleteFHIRDatastoreResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteFHIRDatastoreResponse'</a>,
--   <a>deleteFHIRDatastoreResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:datastoreId:DeleteFHIRDatastore'</a>,
--   <a>deleteFHIRDatastoreResponse_datastoreId</a> - The AWS-generated ID
--   for the Data Store to be deleted.
--   
--   <a>$sel:datastoreArn:DeleteFHIRDatastoreResponse'</a>,
--   <a>deleteFHIRDatastoreResponse_datastoreArn</a> - The Amazon Resource
--   Name (ARN) that gives Amazon HealthLake access permission.
--   
--   <a>$sel:datastoreStatus:DeleteFHIRDatastoreResponse'</a>,
--   <a>deleteFHIRDatastoreResponse_datastoreStatus</a> - The status of the
--   Data Store that the user has requested to be deleted.
--   
--   <a>$sel:datastoreEndpoint:DeleteFHIRDatastoreResponse'</a>,
--   <a>deleteFHIRDatastoreResponse_datastoreEndpoint</a> - The AWS
--   endpoint for the Data Store the user has requested to be deleted.
newDeleteFHIRDatastoreResponse :: Int -> Text -> Text -> DatastoreStatus -> Text -> DeleteFHIRDatastoreResponse

-- | <i>See:</i> <a>newDescribeFHIRExportJob</a> smart constructor.
data DescribeFHIRExportJob
DescribeFHIRExportJob' :: Text -> Text -> DescribeFHIRExportJob

-- | Create a value of <a>DescribeFHIRExportJob</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:datastoreId:DescribeFHIRExportJob'</a>,
--   <a>describeFHIRExportJob_datastoreId</a> - The AWS generated ID for
--   the Data Store from which files are being exported from for an export
--   job.
--   
--   <a>$sel:jobId:DescribeFHIRExportJob'</a>,
--   <a>describeFHIRExportJob_jobId</a> - The AWS generated ID for an
--   export job.
newDescribeFHIRExportJob :: Text -> Text -> DescribeFHIRExportJob

-- | <i>See:</i> <a>newDescribeFHIRExportJobResponse</a> smart constructor.
data DescribeFHIRExportJobResponse
DescribeFHIRExportJobResponse' :: Int -> ExportJobProperties -> DescribeFHIRExportJobResponse

-- | Create a value of <a>DescribeFHIRExportJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DescribeFHIRExportJobResponse'</a>,
--   <a>describeFHIRExportJobResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:exportJobProperties:DescribeFHIRExportJobResponse'</a>,
--   <a>describeFHIRExportJobResponse_exportJobProperties</a> - Displays
--   the properties of the export job, including the ID, Arn, Name, and the
--   status of the job.
newDescribeFHIRExportJobResponse :: Int -> ExportJobProperties -> DescribeFHIRExportJobResponse

-- | <i>See:</i> <a>newCreateFHIRDatastore</a> smart constructor.
data CreateFHIRDatastore
CreateFHIRDatastore' :: Maybe Text -> Maybe SseConfiguration -> Maybe Text -> Maybe PreloadDataConfig -> Maybe [Tag] -> FHIRVersion -> CreateFHIRDatastore

-- | Create a value of <a>CreateFHIRDatastore</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:CreateFHIRDatastore'</a>,
--   <a>createFHIRDatastore_clientToken</a> - Optional user provided token
--   used for ensuring idempotency.
--   
--   <a>$sel:sseConfiguration:CreateFHIRDatastore'</a>,
--   <a>createFHIRDatastore_sseConfiguration</a> - The server-side
--   encryption key configuration for a customer provided encryption key
--   specified for creating a Data Store.
--   
--   <a>$sel:datastoreName:CreateFHIRDatastore'</a>,
--   <a>createFHIRDatastore_datastoreName</a> - The user generated name for
--   the Data Store.
--   
--   <a>$sel:preloadDataConfig:CreateFHIRDatastore'</a>,
--   <a>createFHIRDatastore_preloadDataConfig</a> - Optional parameter to
--   preload data upon creation of the Data Store. Currently, the only
--   supported preloaded data is synthetic data generated from Synthea.
--   
--   <a>$sel:tags:CreateFHIRDatastore'</a>, <a>createFHIRDatastore_tags</a>
--   - Resource tags that are applied to a Data Store when it is created.
--   
--   <a>$sel:datastoreTypeVersion:CreateFHIRDatastore'</a>,
--   <a>createFHIRDatastore_datastoreTypeVersion</a> - The FHIR version of
--   the Data Store. The only supported version is R4.
newCreateFHIRDatastore :: FHIRVersion -> CreateFHIRDatastore

-- | <i>See:</i> <a>newCreateFHIRDatastoreResponse</a> smart constructor.
data CreateFHIRDatastoreResponse
CreateFHIRDatastoreResponse' :: Int -> Text -> Text -> DatastoreStatus -> Text -> CreateFHIRDatastoreResponse

-- | Create a value of <a>CreateFHIRDatastoreResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateFHIRDatastoreResponse'</a>,
--   <a>createFHIRDatastoreResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:datastoreId:CreateFHIRDatastoreResponse'</a>,
--   <a>createFHIRDatastoreResponse_datastoreId</a> - The AWS-generated
--   Data Store id. This id is in the output from the initial Data Store
--   creation call.
--   
--   <a>$sel:datastoreArn:CreateFHIRDatastoreResponse'</a>,
--   <a>createFHIRDatastoreResponse_datastoreArn</a> - The datastore ARN is
--   generated during the creation of the Data Store and can be found in
--   the output from the initial Data Store creation call.
--   
--   <a>$sel:datastoreStatus:CreateFHIRDatastoreResponse'</a>,
--   <a>createFHIRDatastoreResponse_datastoreStatus</a> - The status of the
--   FHIR Data Store. Possible statuses are ‘CREATING’, ‘ACTIVE’,
--   ‘DELETING’, ‘DELETED’.
--   
--   <a>$sel:datastoreEndpoint:CreateFHIRDatastoreResponse'</a>,
--   <a>createFHIRDatastoreResponse_datastoreEndpoint</a> - The AWS
--   endpoint for the created Data Store. For preview, only US-east-1
--   endpoints are supported.
newCreateFHIRDatastoreResponse :: Int -> Text -> Text -> DatastoreStatus -> Text -> CreateFHIRDatastoreResponse

-- | <i>See:</i> <a>newListFHIRExportJobs</a> smart constructor.
data ListFHIRExportJobs
ListFHIRExportJobs' :: Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe JobStatus -> Maybe Natural -> Text -> ListFHIRExportJobs

-- | Create a value of <a>ListFHIRExportJobs</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:submittedAfter:ListFHIRExportJobs'</a>,
--   <a>listFHIRExportJobs_submittedAfter</a> - This parameter limits the
--   response to FHIR export jobs submitted after a user specified date.
--   
--   <a>$sel:jobName:ListFHIRExportJobs'</a>,
--   <a>listFHIRExportJobs_jobName</a> - This parameter limits the response
--   to the export job with the specified job name.
--   
--   <a>$sel:submittedBefore:ListFHIRExportJobs'</a>,
--   <a>listFHIRExportJobs_submittedBefore</a> - This parameter limits the
--   response to FHIR export jobs submitted before a user specified date.
--   
--   <a>$sel:nextToken:ListFHIRExportJobs'</a>,
--   <a>listFHIRExportJobs_nextToken</a> - A pagination token used to
--   identify the next page of results to return for a ListFHIRExportJobs
--   query.
--   
--   <a>$sel:jobStatus:ListFHIRExportJobs'</a>,
--   <a>listFHIRExportJobs_jobStatus</a> - This parameter limits the
--   response to the export jobs with the specified job status.
--   
--   <a>$sel:maxResults:ListFHIRExportJobs'</a>,
--   <a>listFHIRExportJobs_maxResults</a> - This parameter limits the
--   number of results returned for a ListFHIRExportJobs to a maximum
--   quantity specified by the user.
--   
--   <a>$sel:datastoreId:ListFHIRExportJobs'</a>,
--   <a>listFHIRExportJobs_datastoreId</a> - This parameter limits the
--   response to the export job with the specified Data Store ID.
newListFHIRExportJobs :: Text -> ListFHIRExportJobs

-- | <i>See:</i> <a>newListFHIRExportJobsResponse</a> smart constructor.
data ListFHIRExportJobsResponse
ListFHIRExportJobsResponse' :: Maybe Text -> Int -> [ExportJobProperties] -> ListFHIRExportJobsResponse

-- | Create a value of <a>ListFHIRExportJobsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListFHIRExportJobs'</a>,
--   <a>listFHIRExportJobsResponse_nextToken</a> - A pagination token used
--   to identify the next page of results to return for a
--   ListFHIRExportJobs query.
--   
--   <a>$sel:httpStatus:ListFHIRExportJobsResponse'</a>,
--   <a>listFHIRExportJobsResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:exportJobPropertiesList:ListFHIRExportJobsResponse'</a>,
--   <a>listFHIRExportJobsResponse_exportJobPropertiesList</a> - The
--   properties of listed FHIR export jobs, including the ID, ARN, name,
--   and the status of the job.
newListFHIRExportJobsResponse :: Int -> ListFHIRExportJobsResponse

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> [Tag] -> TagResource

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:TagResource'</a>, <a>tagResource_resourceARN</a> -
--   The Amazon Resource Name(ARN)that gives Amazon HealthLake access to
--   the Data Store which tags are being added to.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - The user
--   specified key and value pair tags being added to a Data Store.
newTagResource :: Text -> TagResource

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:UntagResource'</a>,
--   <a>untagResource_resourceARN</a> - "The Amazon Resource Name(ARN) of
--   the Data Store for which tags are being removed
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   keys for the tags to be removed from the Healthlake Data Store.
newUntagResource :: Text -> UntagResource

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | <i>See:</i> <a>newListFHIRDatastores</a> smart constructor.
data ListFHIRDatastores
ListFHIRDatastores' :: Maybe Text -> Maybe DatastoreFilter -> Maybe Natural -> ListFHIRDatastores

-- | Create a value of <a>ListFHIRDatastores</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListFHIRDatastores'</a>,
--   <a>listFHIRDatastores_nextToken</a> - Fetches the next page of Data
--   Stores when results are paginated.
--   
--   <a>$sel:filter':ListFHIRDatastores'</a>,
--   <a>listFHIRDatastores_filter</a> - Lists all filters associated with a
--   FHIR Data Store request.
--   
--   <a>$sel:maxResults:ListFHIRDatastores'</a>,
--   <a>listFHIRDatastores_maxResults</a> - The maximum number of Data
--   Stores returned in a single page of a ListFHIRDatastoresRequest call.
newListFHIRDatastores :: ListFHIRDatastores

-- | <i>See:</i> <a>newListFHIRDatastoresResponse</a> smart constructor.
data ListFHIRDatastoresResponse
ListFHIRDatastoresResponse' :: Maybe Text -> Int -> [DatastoreProperties] -> ListFHIRDatastoresResponse

-- | Create a value of <a>ListFHIRDatastoresResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListFHIRDatastores'</a>,
--   <a>listFHIRDatastoresResponse_nextToken</a> - Pagination token that
--   can be used to retrieve the next page of results.
--   
--   <a>$sel:httpStatus:ListFHIRDatastoresResponse'</a>,
--   <a>listFHIRDatastoresResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:datastorePropertiesList:ListFHIRDatastoresResponse'</a>,
--   <a>listFHIRDatastoresResponse_datastorePropertiesList</a> - All
--   properties associated with the listed Data Stores.
newListFHIRDatastoresResponse :: Int -> ListFHIRDatastoresResponse

-- | <i>See:</i> <a>newStartFHIRExportJob</a> smart constructor.
data StartFHIRExportJob
StartFHIRExportJob' :: Maybe Text -> OutputDataConfig -> Text -> Text -> Text -> StartFHIRExportJob

-- | Create a value of <a>StartFHIRExportJob</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobName:StartFHIRExportJob'</a>,
--   <a>startFHIRExportJob_jobName</a> - The user generated name for an
--   export job.
--   
--   <a>$sel:outputDataConfig:StartFHIRExportJob'</a>,
--   <a>startFHIRExportJob_outputDataConfig</a> - The output data
--   configuration that was supplied when the export job was created.
--   
--   <a>$sel:datastoreId:StartFHIRExportJob'</a>,
--   <a>startFHIRExportJob_datastoreId</a> - The AWS generated ID for the
--   Data Store from which files are being exported for an export job.
--   
--   <a>$sel:dataAccessRoleArn:StartFHIRExportJob'</a>,
--   <a>startFHIRExportJob_dataAccessRoleArn</a> - The Amazon Resource Name
--   used during the initiation of the job.
--   
--   <a>$sel:clientToken:StartFHIRExportJob'</a>,
--   <a>startFHIRExportJob_clientToken</a> - An optional user provided
--   token used for ensuring idempotency.
newStartFHIRExportJob :: OutputDataConfig -> Text -> Text -> Text -> StartFHIRExportJob

-- | <i>See:</i> <a>newStartFHIRExportJobResponse</a> smart constructor.
data StartFHIRExportJobResponse
StartFHIRExportJobResponse' :: Maybe Text -> Int -> Text -> JobStatus -> StartFHIRExportJobResponse

-- | Create a value of <a>StartFHIRExportJobResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:datastoreId:StartFHIRExportJob'</a>,
--   <a>startFHIRExportJobResponse_datastoreId</a> - The AWS generated ID
--   for the Data Store from which files are being exported for an export
--   job.
--   
--   <a>$sel:httpStatus:StartFHIRExportJobResponse'</a>,
--   <a>startFHIRExportJobResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:jobId:StartFHIRExportJobResponse'</a>,
--   <a>startFHIRExportJobResponse_jobId</a> - The AWS generated ID for an
--   export job.
--   
--   <a>$sel:jobStatus:StartFHIRExportJobResponse'</a>,
--   <a>startFHIRExportJobResponse_jobStatus</a> - The status of a FHIR
--   export job. Possible statuses are SUBMITTED, IN_PROGRESS, COMPLETED,
--   or FAILED.
newStartFHIRExportJobResponse :: Int -> Text -> JobStatus -> StartFHIRExportJobResponse

-- | <i>See:</i> <a>newListFHIRImportJobs</a> smart constructor.
data ListFHIRImportJobs
ListFHIRImportJobs' :: Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe JobStatus -> Maybe Natural -> Text -> ListFHIRImportJobs

-- | Create a value of <a>ListFHIRImportJobs</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:submittedAfter:ListFHIRImportJobs'</a>,
--   <a>listFHIRImportJobs_submittedAfter</a> - This parameter limits the
--   response to FHIR import jobs submitted after a user specified date.
--   
--   <a>$sel:jobName:ListFHIRImportJobs'</a>,
--   <a>listFHIRImportJobs_jobName</a> - This parameter limits the response
--   to the import job with the specified job name.
--   
--   <a>$sel:submittedBefore:ListFHIRImportJobs'</a>,
--   <a>listFHIRImportJobs_submittedBefore</a> - This parameter limits the
--   response to FHIR import jobs submitted before a user specified date.
--   
--   <a>$sel:nextToken:ListFHIRImportJobs'</a>,
--   <a>listFHIRImportJobs_nextToken</a> - A pagination token used to
--   identify the next page of results to return for a ListFHIRImportJobs
--   query.
--   
--   <a>$sel:jobStatus:ListFHIRImportJobs'</a>,
--   <a>listFHIRImportJobs_jobStatus</a> - This parameter limits the
--   response to the import job with the specified job status.
--   
--   <a>$sel:maxResults:ListFHIRImportJobs'</a>,
--   <a>listFHIRImportJobs_maxResults</a> - This parameter limits the
--   number of results returned for a ListFHIRImportJobs to a maximum
--   quantity specified by the user.
--   
--   <a>$sel:datastoreId:ListFHIRImportJobs'</a>,
--   <a>listFHIRImportJobs_datastoreId</a> - This parameter limits the
--   response to the import job with the specified Data Store ID.
newListFHIRImportJobs :: Text -> ListFHIRImportJobs

-- | <i>See:</i> <a>newListFHIRImportJobsResponse</a> smart constructor.
data ListFHIRImportJobsResponse
ListFHIRImportJobsResponse' :: Maybe Text -> Int -> [ImportJobProperties] -> ListFHIRImportJobsResponse

-- | Create a value of <a>ListFHIRImportJobsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListFHIRImportJobs'</a>,
--   <a>listFHIRImportJobsResponse_nextToken</a> - A pagination token used
--   to identify the next page of results to return for a
--   ListFHIRImportJobs query.
--   
--   <a>$sel:httpStatus:ListFHIRImportJobsResponse'</a>,
--   <a>listFHIRImportJobsResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:importJobPropertiesList:ListFHIRImportJobsResponse'</a>,
--   <a>listFHIRImportJobsResponse_importJobPropertiesList</a> - The
--   properties of a listed FHIR import jobs, including the ID, ARN, name,
--   and the status of the job.
newListFHIRImportJobsResponse :: Int -> ListFHIRImportJobsResponse
newtype CmkType
CmkType' :: Text -> CmkType
[fromCmkType] :: CmkType -> Text
pattern CmkType_AWS_OWNED_KMS_KEY :: CmkType
pattern CmkType_CUSTOMER_MANAGED_KMS_KEY :: CmkType
newtype DatastoreStatus
DatastoreStatus' :: Text -> DatastoreStatus
[fromDatastoreStatus] :: DatastoreStatus -> Text
pattern DatastoreStatus_ACTIVE :: DatastoreStatus
pattern DatastoreStatus_CREATING :: DatastoreStatus
pattern DatastoreStatus_DELETED :: DatastoreStatus
pattern DatastoreStatus_DELETING :: DatastoreStatus
newtype FHIRVersion
FHIRVersion' :: Text -> FHIRVersion
[fromFHIRVersion] :: FHIRVersion -> Text
pattern FHIRVersion_R4 :: FHIRVersion
newtype JobStatus
JobStatus' :: Text -> JobStatus
[fromJobStatus] :: JobStatus -> Text
pattern JobStatus_COMPLETED :: JobStatus
pattern JobStatus_COMPLETED_WITH_ERRORS :: JobStatus
pattern JobStatus_FAILED :: JobStatus
pattern JobStatus_IN_PROGRESS :: JobStatus
pattern JobStatus_SUBMITTED :: JobStatus
newtype PreloadDataType
PreloadDataType' :: Text -> PreloadDataType
[fromPreloadDataType] :: PreloadDataType -> Text
pattern PreloadDataType_SYNTHEA :: PreloadDataType

-- | The filters applied to Data Store query.
--   
--   <i>See:</i> <a>newDatastoreFilter</a> smart constructor.
data DatastoreFilter
DatastoreFilter' :: Maybe POSIX -> Maybe Text -> Maybe DatastoreStatus -> Maybe POSIX -> DatastoreFilter

-- | Create a value of <a>DatastoreFilter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdAfter:DatastoreFilter'</a>,
--   <a>datastoreFilter_createdAfter</a> - A filter that allows the user to
--   set cutoff dates for records. All Data Stores created after the
--   specified date will be included in the results.
--   
--   <a>$sel:datastoreName:DatastoreFilter'</a>,
--   <a>datastoreFilter_datastoreName</a> - Allows the user to filter Data
--   Store results by name.
--   
--   <a>$sel:datastoreStatus:DatastoreFilter'</a>,
--   <a>datastoreFilter_datastoreStatus</a> - Allows the user to filter
--   Data Store results by status.
--   
--   <a>$sel:createdBefore:DatastoreFilter'</a>,
--   <a>datastoreFilter_createdBefore</a> - A filter that allows the user
--   to set cutoff dates for records. All Data Stores created before the
--   specified date will be included in the results.
newDatastoreFilter :: DatastoreFilter

-- | Displays the properties of the Data Store, including the ID, Arn,
--   name, and the status of the Data Store.
--   
--   <i>See:</i> <a>newDatastoreProperties</a> smart constructor.
data DatastoreProperties
DatastoreProperties' :: Maybe SseConfiguration -> Maybe POSIX -> Maybe Text -> Maybe PreloadDataConfig -> Text -> Text -> DatastoreStatus -> FHIRVersion -> Text -> DatastoreProperties

-- | Create a value of <a>DatastoreProperties</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sseConfiguration:DatastoreProperties'</a>,
--   <a>datastoreProperties_sseConfiguration</a> - The server-side
--   encryption key configuration for a customer provided encryption key
--   (CMK).
--   
--   <a>$sel:createdAt:DatastoreProperties'</a>,
--   <a>datastoreProperties_createdAt</a> - The time that a Data Store was
--   created.
--   
--   <a>$sel:datastoreName:DatastoreProperties'</a>,
--   <a>datastoreProperties_datastoreName</a> - The user-generated name for
--   the Data Store.
--   
--   <a>$sel:preloadDataConfig:DatastoreProperties'</a>,
--   <a>datastoreProperties_preloadDataConfig</a> - The preloaded data
--   configuration for the Data Store. Only data preloaded from Synthea is
--   supported.
--   
--   <a>$sel:datastoreId:DatastoreProperties'</a>,
--   <a>datastoreProperties_datastoreId</a> - The AWS-generated ID number
--   for the Data Store.
--   
--   <a>$sel:datastoreArn:DatastoreProperties'</a>,
--   <a>datastoreProperties_datastoreArn</a> - The Amazon Resource Name
--   used in the creation of the Data Store.
--   
--   <a>$sel:datastoreStatus:DatastoreProperties'</a>,
--   <a>datastoreProperties_datastoreStatus</a> - The status of the Data
--   Store. Possible statuses are 'CREATING', 'ACTIVE', 'DELETING', or
--   'DELETED'.
--   
--   <a>$sel:datastoreTypeVersion:DatastoreProperties'</a>,
--   <a>datastoreProperties_datastoreTypeVersion</a> - The FHIR version.
--   Only R4 version data is supported.
--   
--   <a>$sel:datastoreEndpoint:DatastoreProperties'</a>,
--   <a>datastoreProperties_datastoreEndpoint</a> - The AWS endpoint for
--   the Data Store. Each Data Store will have it's own endpoint with Data
--   Store ID in the endpoint URL.
newDatastoreProperties :: Text -> Text -> DatastoreStatus -> FHIRVersion -> Text -> DatastoreProperties

-- | The properties of a FHIR export job, including the ID, ARN, name, and
--   the status of the job.
--   
--   <i>See:</i> <a>newExportJobProperties</a> smart constructor.
data ExportJobProperties
ExportJobProperties' :: Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Text -> JobStatus -> POSIX -> Text -> OutputDataConfig -> ExportJobProperties

-- | Create a value of <a>ExportJobProperties</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobName:ExportJobProperties'</a>,
--   <a>exportJobProperties_jobName</a> - The user generated name for an
--   export job.
--   
--   <a>$sel:endTime:ExportJobProperties'</a>,
--   <a>exportJobProperties_endTime</a> - The time an export job completed.
--   
--   <a>$sel:dataAccessRoleArn:ExportJobProperties'</a>,
--   <a>exportJobProperties_dataAccessRoleArn</a> - The Amazon Resource
--   Name used during the initiation of the job.
--   
--   <a>$sel:message:ExportJobProperties'</a>,
--   <a>exportJobProperties_message</a> - An explanation of any errors that
--   may have occurred during the export job.
--   
--   <a>$sel:jobId:ExportJobProperties'</a>,
--   <a>exportJobProperties_jobId</a> - The AWS generated ID for an export
--   job.
--   
--   <a>$sel:jobStatus:ExportJobProperties'</a>,
--   <a>exportJobProperties_jobStatus</a> - The status of a FHIR export
--   job. Possible statuses are SUBMITTED, IN_PROGRESS, COMPLETED, or
--   FAILED.
--   
--   <a>$sel:submitTime:ExportJobProperties'</a>,
--   <a>exportJobProperties_submitTime</a> - The time an export job was
--   initiated.
--   
--   <a>$sel:datastoreId:ExportJobProperties'</a>,
--   <a>exportJobProperties_datastoreId</a> - The AWS generated ID for the
--   Data Store from which files are being exported for an export job.
--   
--   <a>$sel:outputDataConfig:ExportJobProperties'</a>,
--   <a>exportJobProperties_outputDataConfig</a> - The output data
--   configuration that was supplied when the export job was created.
newExportJobProperties :: Text -> JobStatus -> UTCTime -> Text -> OutputDataConfig -> ExportJobProperties

-- | Displays the properties of the import job, including the ID, Arn,
--   Name, and the status of the Data Store.
--   
--   <i>See:</i> <a>newImportJobProperties</a> smart constructor.
data ImportJobProperties
ImportJobProperties' :: Maybe OutputDataConfig -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Text -> JobStatus -> POSIX -> Text -> InputDataConfig -> ImportJobProperties

-- | Create a value of <a>ImportJobProperties</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobOutputDataConfig:ImportJobProperties'</a>,
--   <a>importJobProperties_jobOutputDataConfig</a> - Undocumented member.
--   
--   <a>$sel:jobName:ImportJobProperties'</a>,
--   <a>importJobProperties_jobName</a> - The user-generated name for an
--   Import job.
--   
--   <a>$sel:endTime:ImportJobProperties'</a>,
--   <a>importJobProperties_endTime</a> - The time that the Import job was
--   completed.
--   
--   <a>$sel:dataAccessRoleArn:ImportJobProperties'</a>,
--   <a>importJobProperties_dataAccessRoleArn</a> - The Amazon Resource
--   Name (ARN) that gives Amazon HealthLake access to your input data.
--   
--   <a>$sel:message:ImportJobProperties'</a>,
--   <a>importJobProperties_message</a> - An explanation of any errors that
--   may have occurred during the FHIR import job.
--   
--   <a>$sel:jobId:ImportJobProperties'</a>,
--   <a>importJobProperties_jobId</a> - The AWS-generated id number for the
--   Import job.
--   
--   <a>$sel:jobStatus:ImportJobProperties'</a>,
--   <a>importJobProperties_jobStatus</a> - The job status for an Import
--   job. Possible statuses are SUBMITTED, IN_PROGRESS, COMPLETED, FAILED.
--   
--   <a>$sel:submitTime:ImportJobProperties'</a>,
--   <a>importJobProperties_submitTime</a> - The time that the Import job
--   was submitted for processing.
--   
--   <a>$sel:datastoreId:ImportJobProperties'</a>,
--   <a>importJobProperties_datastoreId</a> - The datastore id used when
--   the Import job was created.
--   
--   <a>$sel:inputDataConfig:ImportJobProperties'</a>,
--   <a>importJobProperties_inputDataConfig</a> - The input data
--   configuration that was supplied when the Import job was created.
newImportJobProperties :: Text -> JobStatus -> UTCTime -> Text -> InputDataConfig -> ImportJobProperties

-- | The input properties for an import job.
--   
--   <i>See:</i> <a>newInputDataConfig</a> smart constructor.
data InputDataConfig
InputDataConfig' :: Maybe Text -> InputDataConfig

-- | Create a value of <a>InputDataConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3Uri:InputDataConfig'</a>, <a>inputDataConfig_s3Uri</a> - The
--   S3Uri is the user specified S3 location of the FHIR data to be
--   imported into Amazon HealthLake.
newInputDataConfig :: InputDataConfig

-- | The customer-managed-key(CMK) used when creating a Data Store. If a
--   customer owned key is not specified, an AWS owned key will be used for
--   encryption.
--   
--   <i>See:</i> <a>newKmsEncryptionConfig</a> smart constructor.
data KmsEncryptionConfig
KmsEncryptionConfig' :: Maybe Text -> CmkType -> KmsEncryptionConfig

-- | Create a value of <a>KmsEncryptionConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:kmsKeyId:KmsEncryptionConfig'</a>,
--   <a>kmsEncryptionConfig_kmsKeyId</a> - The KMS encryption key id/alias
--   used to encrypt the Data Store contents at rest.
--   
--   <a>$sel:cmkType:KmsEncryptionConfig'</a>,
--   <a>kmsEncryptionConfig_cmkType</a> - The type of
--   customer-managed-key(CMK) used for encyrption. The two types of
--   supported CMKs are customer owned CMKs and AWS owned CMKs.
newKmsEncryptionConfig :: CmkType -> KmsEncryptionConfig

-- | The output data configuration that was supplied when the export job
--   was created.
--   
--   <i>See:</i> <a>newOutputDataConfig</a> smart constructor.
data OutputDataConfig
OutputDataConfig' :: Maybe S3Configuration -> OutputDataConfig

-- | Create a value of <a>OutputDataConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3Configuration:OutputDataConfig'</a>,
--   <a>outputDataConfig_s3Configuration</a> - The output data
--   configuration that was supplied when the export job was created.
newOutputDataConfig :: OutputDataConfig

-- | The input properties for the preloaded Data Store. Only data preloaded
--   from Synthea is supported.
--   
--   <i>See:</i> <a>newPreloadDataConfig</a> smart constructor.
data PreloadDataConfig
PreloadDataConfig' :: PreloadDataType -> PreloadDataConfig

-- | Create a value of <a>PreloadDataConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:preloadDataType:PreloadDataConfig'</a>,
--   <a>preloadDataConfig_preloadDataType</a> - The type of preloaded data.
--   Only Synthea preloaded data is supported.
newPreloadDataConfig :: PreloadDataType -> PreloadDataConfig

-- | The configuration of the S3 bucket for either an import or export job.
--   This includes assigning permissions for access.
--   
--   <i>See:</i> <a>newS3Configuration</a> smart constructor.
data S3Configuration
S3Configuration' :: Text -> Text -> S3Configuration

-- | Create a value of <a>S3Configuration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3Uri:S3Configuration'</a>, <a>s3Configuration_s3Uri</a> - The
--   S3Uri is the user specified S3 location of the FHIR data to be
--   imported into Amazon HealthLake.
--   
--   <a>$sel:kmsKeyId:S3Configuration'</a>, <a>s3Configuration_kmsKeyId</a>
--   - The KMS key ID used to access the S3 bucket.
newS3Configuration :: Text -> Text -> S3Configuration

-- | The server-side encryption key configuration for a customer provided
--   encryption key.
--   
--   <i>See:</i> <a>newSseConfiguration</a> smart constructor.
data SseConfiguration
SseConfiguration' :: KmsEncryptionConfig -> SseConfiguration

-- | Create a value of <a>SseConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:kmsEncryptionConfig:SseConfiguration'</a>,
--   <a>sseConfiguration_kmsEncryptionConfig</a> - The KMS encryption
--   configuration used to provide details for data encryption.
newSseConfiguration :: KmsEncryptionConfig -> SseConfiguration

-- | A tag is a label consisting of a user-defined key and value. The form
--   for tags is {"Key", "Value"}
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The key portion of a tag. Tag
--   keys are case sensitive.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The value portion of tag.
--   Tag values are case sensitive.
newTag :: Text -> Text -> Tag
