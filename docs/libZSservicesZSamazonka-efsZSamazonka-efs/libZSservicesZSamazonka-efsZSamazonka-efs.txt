-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-efsZSamazonka-efs
@version 2.0


module Amazonka.EFS.Types.BackupStatus
newtype BackupStatus
BackupStatus' :: Text -> BackupStatus
[fromBackupStatus] :: BackupStatus -> Text
pattern BackupStatus_DISABLED :: BackupStatus
pattern BackupStatus_DISABLING :: BackupStatus
pattern BackupStatus_ENABLED :: BackupStatus
pattern BackupStatus_ENABLING :: BackupStatus
instance Amazonka.Data.XML.ToXML Amazonka.EFS.Types.BackupStatus.BackupStatus
instance Amazonka.Data.XML.FromXML Amazonka.EFS.Types.BackupStatus.BackupStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.EFS.Types.BackupStatus.BackupStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.EFS.Types.BackupStatus.BackupStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.EFS.Types.BackupStatus.BackupStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.EFS.Types.BackupStatus.BackupStatus
instance Amazonka.Data.Query.ToQuery Amazonka.EFS.Types.BackupStatus.BackupStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.EFS.Types.BackupStatus.BackupStatus
instance Amazonka.Data.Log.ToLog Amazonka.EFS.Types.BackupStatus.BackupStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.EFS.Types.BackupStatus.BackupStatus
instance Amazonka.Data.Text.ToText Amazonka.EFS.Types.BackupStatus.BackupStatus
instance Amazonka.Data.Text.FromText Amazonka.EFS.Types.BackupStatus.BackupStatus
instance Control.DeepSeq.NFData Amazonka.EFS.Types.BackupStatus.BackupStatus
instance Data.Hashable.Class.Hashable Amazonka.EFS.Types.BackupStatus.BackupStatus
instance GHC.Generics.Generic Amazonka.EFS.Types.BackupStatus.BackupStatus
instance GHC.Classes.Ord Amazonka.EFS.Types.BackupStatus.BackupStatus
instance GHC.Classes.Eq Amazonka.EFS.Types.BackupStatus.BackupStatus
instance GHC.Read.Read Amazonka.EFS.Types.BackupStatus.BackupStatus
instance GHC.Show.Show Amazonka.EFS.Types.BackupStatus.BackupStatus


module Amazonka.EFS.Types.BackupPolicy

-- | The backup policy for the file system used to create automatic daily
--   backups. If status has a value of <tt>ENABLED</tt>, the file system is
--   being automatically backed up. For more information, see <a>Automatic
--   backups</a>.
--   
--   <i>See:</i> <a>newBackupPolicy</a> smart constructor.
data BackupPolicy
BackupPolicy' :: BackupStatus -> BackupPolicy

-- | Describes the status of the file system's backup policy.
--   
--   <ul>
--   <li><b><tt>ENABLED</tt></b> - EFS is automatically backing up the file
--   system.</li>
--   <li><b><tt>ENABLING</tt></b> - EFS is turning on automatic backups for
--   the file system.</li>
--   <li><b><tt>DISABLED</tt></b> - automatic back ups are turned off for
--   the file system.</li>
--   <li><b><tt>DISABLING</tt></b> - EFS is turning off automatic backups
--   for the file system.</li>
--   </ul>
[$sel:status:BackupPolicy'] :: BackupPolicy -> BackupStatus

-- | Create a value of <a>BackupPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:BackupPolicy'</a>, <a>backupPolicy_status</a> -
--   Describes the status of the file system's backup policy.
--   
--   <ul>
--   <li><b><tt>ENABLED</tt></b> - EFS is automatically backing up the file
--   system.</li>
--   <li><b><tt>ENABLING</tt></b> - EFS is turning on automatic backups for
--   the file system.</li>
--   <li><b><tt>DISABLED</tt></b> - automatic back ups are turned off for
--   the file system.</li>
--   <li><b><tt>DISABLING</tt></b> - EFS is turning off automatic backups
--   for the file system.</li>
--   </ul>
newBackupPolicy :: BackupStatus -> BackupPolicy

-- | Describes the status of the file system's backup policy.
--   
--   <ul>
--   <li><b><tt>ENABLED</tt></b> - EFS is automatically backing up the file
--   system.</li>
--   <li><b><tt>ENABLING</tt></b> - EFS is turning on automatic backups for
--   the file system.</li>
--   <li><b><tt>DISABLED</tt></b> - automatic back ups are turned off for
--   the file system.</li>
--   <li><b><tt>DISABLING</tt></b> - EFS is turning off automatic backups
--   for the file system.</li>
--   </ul>
backupPolicy_status :: Lens' BackupPolicy BackupStatus
instance GHC.Generics.Generic Amazonka.EFS.Types.BackupPolicy.BackupPolicy
instance GHC.Show.Show Amazonka.EFS.Types.BackupPolicy.BackupPolicy
instance GHC.Read.Read Amazonka.EFS.Types.BackupPolicy.BackupPolicy
instance GHC.Classes.Eq Amazonka.EFS.Types.BackupPolicy.BackupPolicy
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.EFS.Types.BackupPolicy.BackupPolicy
instance Data.Hashable.Class.Hashable Amazonka.EFS.Types.BackupPolicy.BackupPolicy
instance Control.DeepSeq.NFData Amazonka.EFS.Types.BackupPolicy.BackupPolicy
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.EFS.Types.BackupPolicy.BackupPolicy


module Amazonka.EFS.Types.BackupPolicyDescription

-- | <i>See:</i> <a>newBackupPolicyDescription</a> smart constructor.
data BackupPolicyDescription
BackupPolicyDescription' :: Maybe BackupPolicy -> BackupPolicyDescription

-- | Describes the file system's backup policy, indicating whether
--   automatic backups are turned on or off..
[$sel:backupPolicy:BackupPolicyDescription'] :: BackupPolicyDescription -> Maybe BackupPolicy

-- | Create a value of <a>BackupPolicyDescription</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:backupPolicy:BackupPolicyDescription'</a>,
--   <a>backupPolicyDescription_backupPolicy</a> - Describes the file
--   system's backup policy, indicating whether automatic backups are
--   turned on or off..
newBackupPolicyDescription :: BackupPolicyDescription

-- | Describes the file system's backup policy, indicating whether
--   automatic backups are turned on or off..
backupPolicyDescription_backupPolicy :: Lens' BackupPolicyDescription (Maybe BackupPolicy)
instance GHC.Generics.Generic Amazonka.EFS.Types.BackupPolicyDescription.BackupPolicyDescription
instance GHC.Show.Show Amazonka.EFS.Types.BackupPolicyDescription.BackupPolicyDescription
instance GHC.Read.Read Amazonka.EFS.Types.BackupPolicyDescription.BackupPolicyDescription
instance GHC.Classes.Eq Amazonka.EFS.Types.BackupPolicyDescription.BackupPolicyDescription
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.EFS.Types.BackupPolicyDescription.BackupPolicyDescription
instance Data.Hashable.Class.Hashable Amazonka.EFS.Types.BackupPolicyDescription.BackupPolicyDescription
instance Control.DeepSeq.NFData Amazonka.EFS.Types.BackupPolicyDescription.BackupPolicyDescription


module Amazonka.EFS.Types.CreationInfo

-- | Required if the <tt>RootDirectory</tt> &gt; <tt>Path</tt> specified
--   does not exist. Specifies the POSIX IDs and permissions to apply to
--   the access point's <tt>RootDirectory</tt> &gt; <tt>Path</tt>. If the
--   access point root directory does not exist, EFS creates it with these
--   settings when a client connects to the access point. When specifying
--   <tt>CreationInfo</tt>, you must include values for all properties.
--   
--   Amazon EFS creates a root directory only if you have provided the
--   CreationInfo: OwnUid, OwnGID, and permissions for the directory. If
--   you do not provide this information, Amazon EFS does not create the
--   root directory. If the root directory does not exist, attempts to
--   mount using the access point will fail.
--   
--   If you do not provide <tt>CreationInfo</tt> and the specified
--   <tt>RootDirectory</tt> does not exist, attempts to mount the file
--   system using the access point will fail.
--   
--   <i>See:</i> <a>newCreationInfo</a> smart constructor.
data CreationInfo
CreationInfo' :: Natural -> Natural -> Text -> CreationInfo

-- | Specifies the POSIX user ID to apply to the <tt>RootDirectory</tt>.
--   Accepts values from 0 to 2^32 (4294967295).
[$sel:ownerUid:CreationInfo'] :: CreationInfo -> Natural

-- | Specifies the POSIX group ID to apply to the <tt>RootDirectory</tt>.
--   Accepts values from 0 to 2^32 (4294967295).
[$sel:ownerGid:CreationInfo'] :: CreationInfo -> Natural

-- | Specifies the POSIX permissions to apply to the
--   <tt>RootDirectory</tt>, in the format of an octal number representing
--   the file's mode bits.
[$sel:permissions:CreationInfo'] :: CreationInfo -> Text

-- | Create a value of <a>CreationInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ownerUid:CreationInfo'</a>, <a>creationInfo_ownerUid</a> -
--   Specifies the POSIX user ID to apply to the <tt>RootDirectory</tt>.
--   Accepts values from 0 to 2^32 (4294967295).
--   
--   <a>$sel:ownerGid:CreationInfo'</a>, <a>creationInfo_ownerGid</a> -
--   Specifies the POSIX group ID to apply to the <tt>RootDirectory</tt>.
--   Accepts values from 0 to 2^32 (4294967295).
--   
--   <a>$sel:permissions:CreationInfo'</a>, <a>creationInfo_permissions</a>
--   - Specifies the POSIX permissions to apply to the
--   <tt>RootDirectory</tt>, in the format of an octal number representing
--   the file's mode bits.
newCreationInfo :: Natural -> Natural -> Text -> CreationInfo

-- | Specifies the POSIX user ID to apply to the <tt>RootDirectory</tt>.
--   Accepts values from 0 to 2^32 (4294967295).
creationInfo_ownerUid :: Lens' CreationInfo Natural

-- | Specifies the POSIX group ID to apply to the <tt>RootDirectory</tt>.
--   Accepts values from 0 to 2^32 (4294967295).
creationInfo_ownerGid :: Lens' CreationInfo Natural

-- | Specifies the POSIX permissions to apply to the
--   <tt>RootDirectory</tt>, in the format of an octal number representing
--   the file's mode bits.
creationInfo_permissions :: Lens' CreationInfo Text
instance GHC.Generics.Generic Amazonka.EFS.Types.CreationInfo.CreationInfo
instance GHC.Show.Show Amazonka.EFS.Types.CreationInfo.CreationInfo
instance GHC.Read.Read Amazonka.EFS.Types.CreationInfo.CreationInfo
instance GHC.Classes.Eq Amazonka.EFS.Types.CreationInfo.CreationInfo
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.EFS.Types.CreationInfo.CreationInfo
instance Data.Hashable.Class.Hashable Amazonka.EFS.Types.CreationInfo.CreationInfo
instance Control.DeepSeq.NFData Amazonka.EFS.Types.CreationInfo.CreationInfo
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.EFS.Types.CreationInfo.CreationInfo


module Amazonka.EFS.Types.FileSystemPolicyDescription

-- | <i>See:</i> <a>newFileSystemPolicyDescription</a> smart constructor.
data FileSystemPolicyDescription
FileSystemPolicyDescription' :: Maybe Text -> Maybe Text -> FileSystemPolicyDescription

-- | Specifies the EFS file system to which the <tt>FileSystemPolicy</tt>
--   applies.
[$sel:fileSystemId:FileSystemPolicyDescription'] :: FileSystemPolicyDescription -> Maybe Text

-- | The JSON formatted <tt>FileSystemPolicy</tt> for the EFS file system.
[$sel:policy:FileSystemPolicyDescription'] :: FileSystemPolicyDescription -> Maybe Text

-- | Create a value of <a>FileSystemPolicyDescription</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fileSystemId:FileSystemPolicyDescription'</a>,
--   <a>fileSystemPolicyDescription_fileSystemId</a> - Specifies the EFS
--   file system to which the <tt>FileSystemPolicy</tt> applies.
--   
--   <a>$sel:policy:FileSystemPolicyDescription'</a>,
--   <a>fileSystemPolicyDescription_policy</a> - The JSON formatted
--   <tt>FileSystemPolicy</tt> for the EFS file system.
newFileSystemPolicyDescription :: FileSystemPolicyDescription

-- | Specifies the EFS file system to which the <tt>FileSystemPolicy</tt>
--   applies.
fileSystemPolicyDescription_fileSystemId :: Lens' FileSystemPolicyDescription (Maybe Text)

-- | The JSON formatted <tt>FileSystemPolicy</tt> for the EFS file system.
fileSystemPolicyDescription_policy :: Lens' FileSystemPolicyDescription (Maybe Text)
instance GHC.Generics.Generic Amazonka.EFS.Types.FileSystemPolicyDescription.FileSystemPolicyDescription
instance GHC.Show.Show Amazonka.EFS.Types.FileSystemPolicyDescription.FileSystemPolicyDescription
instance GHC.Read.Read Amazonka.EFS.Types.FileSystemPolicyDescription.FileSystemPolicyDescription
instance GHC.Classes.Eq Amazonka.EFS.Types.FileSystemPolicyDescription.FileSystemPolicyDescription
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.EFS.Types.FileSystemPolicyDescription.FileSystemPolicyDescription
instance Data.Hashable.Class.Hashable Amazonka.EFS.Types.FileSystemPolicyDescription.FileSystemPolicyDescription
instance Control.DeepSeq.NFData Amazonka.EFS.Types.FileSystemPolicyDescription.FileSystemPolicyDescription


module Amazonka.EFS.Types.FileSystemSize

-- | The latest known metered size (in bytes) of data stored in the file
--   system, in its <tt>Value</tt> field, and the time at which that size
--   was determined in its <tt>Timestamp</tt> field. The value doesn't
--   represent the size of a consistent snapshot of the file system, but it
--   is eventually consistent when there are no writes to the file system.
--   That is, the value represents the actual size only if the file system
--   is not modified for a period longer than a couple of hours. Otherwise,
--   the value is not necessarily the exact size the file system was at any
--   instant in time.
--   
--   <i>See:</i> <a>newFileSystemSize</a> smart constructor.
data FileSystemSize
FileSystemSize' :: Maybe Natural -> Maybe Natural -> Maybe POSIX -> Natural -> FileSystemSize

-- | The latest known metered size (in bytes) of data stored in the
--   Infrequent Access storage class.
[$sel:valueInIA:FileSystemSize'] :: FileSystemSize -> Maybe Natural

-- | The latest known metered size (in bytes) of data stored in the
--   Standard storage class.
[$sel:valueInStandard:FileSystemSize'] :: FileSystemSize -> Maybe Natural

-- | The time at which the size of data, returned in the <tt>Value</tt>
--   field, was determined. The value is the integer number of seconds
--   since 1970-01-01T00:00:00Z.
[$sel:timestamp:FileSystemSize'] :: FileSystemSize -> Maybe POSIX

-- | The latest known metered size (in bytes) of data stored in the file
--   system.
[$sel:value:FileSystemSize'] :: FileSystemSize -> Natural

-- | Create a value of <a>FileSystemSize</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:valueInIA:FileSystemSize'</a>, <a>fileSystemSize_valueInIA</a>
--   - The latest known metered size (in bytes) of data stored in the
--   Infrequent Access storage class.
--   
--   <a>$sel:valueInStandard:FileSystemSize'</a>,
--   <a>fileSystemSize_valueInStandard</a> - The latest known metered size
--   (in bytes) of data stored in the Standard storage class.
--   
--   <a>$sel:timestamp:FileSystemSize'</a>, <a>fileSystemSize_timestamp</a>
--   - The time at which the size of data, returned in the <tt>Value</tt>
--   field, was determined. The value is the integer number of seconds
--   since 1970-01-01T00:00:00Z.
--   
--   <a>$sel:value:FileSystemSize'</a>, <a>fileSystemSize_value</a> - The
--   latest known metered size (in bytes) of data stored in the file
--   system.
newFileSystemSize :: Natural -> FileSystemSize

-- | The latest known metered size (in bytes) of data stored in the
--   Infrequent Access storage class.
fileSystemSize_valueInIA :: Lens' FileSystemSize (Maybe Natural)

-- | The latest known metered size (in bytes) of data stored in the
--   Standard storage class.
fileSystemSize_valueInStandard :: Lens' FileSystemSize (Maybe Natural)

-- | The time at which the size of data, returned in the <tt>Value</tt>
--   field, was determined. The value is the integer number of seconds
--   since 1970-01-01T00:00:00Z.
fileSystemSize_timestamp :: Lens' FileSystemSize (Maybe UTCTime)

-- | The latest known metered size (in bytes) of data stored in the file
--   system.
fileSystemSize_value :: Lens' FileSystemSize Natural
instance GHC.Generics.Generic Amazonka.EFS.Types.FileSystemSize.FileSystemSize
instance GHC.Show.Show Amazonka.EFS.Types.FileSystemSize.FileSystemSize
instance GHC.Read.Read Amazonka.EFS.Types.FileSystemSize.FileSystemSize
instance GHC.Classes.Eq Amazonka.EFS.Types.FileSystemSize.FileSystemSize
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.EFS.Types.FileSystemSize.FileSystemSize
instance Data.Hashable.Class.Hashable Amazonka.EFS.Types.FileSystemSize.FileSystemSize
instance Control.DeepSeq.NFData Amazonka.EFS.Types.FileSystemSize.FileSystemSize


module Amazonka.EFS.Types.LifeCycleState
newtype LifeCycleState
LifeCycleState' :: Text -> LifeCycleState
[fromLifeCycleState] :: LifeCycleState -> Text
pattern LifeCycleState_Available :: LifeCycleState
pattern LifeCycleState_Creating :: LifeCycleState
pattern LifeCycleState_Deleted :: LifeCycleState
pattern LifeCycleState_Deleting :: LifeCycleState
pattern LifeCycleState_Error :: LifeCycleState
pattern LifeCycleState_Updating :: LifeCycleState
instance Amazonka.Data.XML.ToXML Amazonka.EFS.Types.LifeCycleState.LifeCycleState
instance Amazonka.Data.XML.FromXML Amazonka.EFS.Types.LifeCycleState.LifeCycleState
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.EFS.Types.LifeCycleState.LifeCycleState
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.EFS.Types.LifeCycleState.LifeCycleState
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.EFS.Types.LifeCycleState.LifeCycleState
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.EFS.Types.LifeCycleState.LifeCycleState
instance Amazonka.Data.Query.ToQuery Amazonka.EFS.Types.LifeCycleState.LifeCycleState
instance Amazonka.Data.Headers.ToHeader Amazonka.EFS.Types.LifeCycleState.LifeCycleState
instance Amazonka.Data.Log.ToLog Amazonka.EFS.Types.LifeCycleState.LifeCycleState
instance Amazonka.Data.ByteString.ToByteString Amazonka.EFS.Types.LifeCycleState.LifeCycleState
instance Amazonka.Data.Text.ToText Amazonka.EFS.Types.LifeCycleState.LifeCycleState
instance Amazonka.Data.Text.FromText Amazonka.EFS.Types.LifeCycleState.LifeCycleState
instance Control.DeepSeq.NFData Amazonka.EFS.Types.LifeCycleState.LifeCycleState
instance Data.Hashable.Class.Hashable Amazonka.EFS.Types.LifeCycleState.LifeCycleState
instance GHC.Generics.Generic Amazonka.EFS.Types.LifeCycleState.LifeCycleState
instance GHC.Classes.Ord Amazonka.EFS.Types.LifeCycleState.LifeCycleState
instance GHC.Classes.Eq Amazonka.EFS.Types.LifeCycleState.LifeCycleState
instance GHC.Read.Read Amazonka.EFS.Types.LifeCycleState.LifeCycleState
instance GHC.Show.Show Amazonka.EFS.Types.LifeCycleState.LifeCycleState


module Amazonka.EFS.Types.MountTargetDescription

-- | Provides a description of a mount target.
--   
--   <i>See:</i> <a>newMountTargetDescription</a> smart constructor.
data MountTargetDescription
MountTargetDescription' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Text -> Text -> Text -> LifeCycleState -> MountTargetDescription

-- | Address at which the file system can be mounted by using the mount
--   target.
[$sel:ipAddress:MountTargetDescription'] :: MountTargetDescription -> Maybe Text

-- | The unique and consistent identifier of the Availability Zone that the
--   mount target resides in. For example, <tt>use1-az1</tt> is an AZ ID
--   for the us-east-1 Region and it has the same location in every Amazon
--   Web Services account.
[$sel:availabilityZoneId:MountTargetDescription'] :: MountTargetDescription -> Maybe Text

-- | The virtual private cloud (VPC) ID that the mount target is configured
--   in.
[$sel:vpcId:MountTargetDescription'] :: MountTargetDescription -> Maybe Text

-- | The name of the Availability Zone in which the mount target is
--   located. Availability Zones are independently mapped to names for each
--   Amazon Web Services account. For example, the Availability Zone
--   <tt>us-east-1a</tt> for your Amazon Web Services account might not be
--   the same location as <tt>us-east-1a</tt> for another Amazon Web
--   Services account.
[$sel:availabilityZoneName:MountTargetDescription'] :: MountTargetDescription -> Maybe Text

-- | The ID of the network interface that Amazon EFS created when it
--   created the mount target.
[$sel:networkInterfaceId:MountTargetDescription'] :: MountTargetDescription -> Maybe Text

-- | Amazon Web Services account ID that owns the resource.
[$sel:ownerId:MountTargetDescription'] :: MountTargetDescription -> Maybe Text

-- | System-assigned mount target ID.
[$sel:mountTargetId:MountTargetDescription'] :: MountTargetDescription -> Text

-- | The ID of the file system for which the mount target is intended.
[$sel:fileSystemId:MountTargetDescription'] :: MountTargetDescription -> Text

-- | The ID of the mount target's subnet.
[$sel:subnetId:MountTargetDescription'] :: MountTargetDescription -> Text

-- | Lifecycle state of the mount target.
[$sel:lifeCycleState:MountTargetDescription'] :: MountTargetDescription -> LifeCycleState

-- | Create a value of <a>MountTargetDescription</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ipAddress:MountTargetDescription'</a>,
--   <a>mountTargetDescription_ipAddress</a> - Address at which the file
--   system can be mounted by using the mount target.
--   
--   <a>$sel:availabilityZoneId:MountTargetDescription'</a>,
--   <a>mountTargetDescription_availabilityZoneId</a> - The unique and
--   consistent identifier of the Availability Zone that the mount target
--   resides in. For example, <tt>use1-az1</tt> is an AZ ID for the
--   us-east-1 Region and it has the same location in every Amazon Web
--   Services account.
--   
--   <a>$sel:vpcId:MountTargetDescription'</a>,
--   <a>mountTargetDescription_vpcId</a> - The virtual private cloud (VPC)
--   ID that the mount target is configured in.
--   
--   <a>$sel:availabilityZoneName:MountTargetDescription'</a>,
--   <a>mountTargetDescription_availabilityZoneName</a> - The name of the
--   Availability Zone in which the mount target is located. Availability
--   Zones are independently mapped to names for each Amazon Web Services
--   account. For example, the Availability Zone <tt>us-east-1a</tt> for
--   your Amazon Web Services account might not be the same location as
--   <tt>us-east-1a</tt> for another Amazon Web Services account.
--   
--   <a>$sel:networkInterfaceId:MountTargetDescription'</a>,
--   <a>mountTargetDescription_networkInterfaceId</a> - The ID of the
--   network interface that Amazon EFS created when it created the mount
--   target.
--   
--   <a>$sel:ownerId:MountTargetDescription'</a>,
--   <a>mountTargetDescription_ownerId</a> - Amazon Web Services account ID
--   that owns the resource.
--   
--   <a>$sel:mountTargetId:MountTargetDescription'</a>,
--   <a>mountTargetDescription_mountTargetId</a> - System-assigned mount
--   target ID.
--   
--   <a>$sel:fileSystemId:MountTargetDescription'</a>,
--   <a>mountTargetDescription_fileSystemId</a> - The ID of the file system
--   for which the mount target is intended.
--   
--   <a>$sel:subnetId:MountTargetDescription'</a>,
--   <a>mountTargetDescription_subnetId</a> - The ID of the mount target's
--   subnet.
--   
--   <a>$sel:lifeCycleState:MountTargetDescription'</a>,
--   <a>mountTargetDescription_lifeCycleState</a> - Lifecycle state of the
--   mount target.
newMountTargetDescription :: Text -> Text -> Text -> LifeCycleState -> MountTargetDescription

-- | Address at which the file system can be mounted by using the mount
--   target.
mountTargetDescription_ipAddress :: Lens' MountTargetDescription (Maybe Text)

-- | The unique and consistent identifier of the Availability Zone that the
--   mount target resides in. For example, <tt>use1-az1</tt> is an AZ ID
--   for the us-east-1 Region and it has the same location in every Amazon
--   Web Services account.
mountTargetDescription_availabilityZoneId :: Lens' MountTargetDescription (Maybe Text)

-- | The virtual private cloud (VPC) ID that the mount target is configured
--   in.
mountTargetDescription_vpcId :: Lens' MountTargetDescription (Maybe Text)

-- | The name of the Availability Zone in which the mount target is
--   located. Availability Zones are independently mapped to names for each
--   Amazon Web Services account. For example, the Availability Zone
--   <tt>us-east-1a</tt> for your Amazon Web Services account might not be
--   the same location as <tt>us-east-1a</tt> for another Amazon Web
--   Services account.
mountTargetDescription_availabilityZoneName :: Lens' MountTargetDescription (Maybe Text)

-- | The ID of the network interface that Amazon EFS created when it
--   created the mount target.
mountTargetDescription_networkInterfaceId :: Lens' MountTargetDescription (Maybe Text)

-- | Amazon Web Services account ID that owns the resource.
mountTargetDescription_ownerId :: Lens' MountTargetDescription (Maybe Text)

-- | System-assigned mount target ID.
mountTargetDescription_mountTargetId :: Lens' MountTargetDescription Text

-- | The ID of the file system for which the mount target is intended.
mountTargetDescription_fileSystemId :: Lens' MountTargetDescription Text

-- | The ID of the mount target's subnet.
mountTargetDescription_subnetId :: Lens' MountTargetDescription Text

-- | Lifecycle state of the mount target.
mountTargetDescription_lifeCycleState :: Lens' MountTargetDescription LifeCycleState
instance GHC.Generics.Generic Amazonka.EFS.Types.MountTargetDescription.MountTargetDescription
instance GHC.Show.Show Amazonka.EFS.Types.MountTargetDescription.MountTargetDescription
instance GHC.Read.Read Amazonka.EFS.Types.MountTargetDescription.MountTargetDescription
instance GHC.Classes.Eq Amazonka.EFS.Types.MountTargetDescription.MountTargetDescription
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.EFS.Types.MountTargetDescription.MountTargetDescription
instance Data.Hashable.Class.Hashable Amazonka.EFS.Types.MountTargetDescription.MountTargetDescription
instance Control.DeepSeq.NFData Amazonka.EFS.Types.MountTargetDescription.MountTargetDescription


module Amazonka.EFS.Types.PerformanceMode
newtype PerformanceMode
PerformanceMode' :: Text -> PerformanceMode
[fromPerformanceMode] :: PerformanceMode -> Text
pattern PerformanceMode_GeneralPurpose :: PerformanceMode
pattern PerformanceMode_MaxIO :: PerformanceMode
instance Amazonka.Data.XML.ToXML Amazonka.EFS.Types.PerformanceMode.PerformanceMode
instance Amazonka.Data.XML.FromXML Amazonka.EFS.Types.PerformanceMode.PerformanceMode
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.EFS.Types.PerformanceMode.PerformanceMode
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.EFS.Types.PerformanceMode.PerformanceMode
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.EFS.Types.PerformanceMode.PerformanceMode
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.EFS.Types.PerformanceMode.PerformanceMode
instance Amazonka.Data.Query.ToQuery Amazonka.EFS.Types.PerformanceMode.PerformanceMode
instance Amazonka.Data.Headers.ToHeader Amazonka.EFS.Types.PerformanceMode.PerformanceMode
instance Amazonka.Data.Log.ToLog Amazonka.EFS.Types.PerformanceMode.PerformanceMode
instance Amazonka.Data.ByteString.ToByteString Amazonka.EFS.Types.PerformanceMode.PerformanceMode
instance Amazonka.Data.Text.ToText Amazonka.EFS.Types.PerformanceMode.PerformanceMode
instance Amazonka.Data.Text.FromText Amazonka.EFS.Types.PerformanceMode.PerformanceMode
instance Control.DeepSeq.NFData Amazonka.EFS.Types.PerformanceMode.PerformanceMode
instance Data.Hashable.Class.Hashable Amazonka.EFS.Types.PerformanceMode.PerformanceMode
instance GHC.Generics.Generic Amazonka.EFS.Types.PerformanceMode.PerformanceMode
instance GHC.Classes.Ord Amazonka.EFS.Types.PerformanceMode.PerformanceMode
instance GHC.Classes.Eq Amazonka.EFS.Types.PerformanceMode.PerformanceMode
instance GHC.Read.Read Amazonka.EFS.Types.PerformanceMode.PerformanceMode
instance GHC.Show.Show Amazonka.EFS.Types.PerformanceMode.PerformanceMode


module Amazonka.EFS.Types.PosixUser

-- | The full POSIX identity, including the user ID, group ID, and any
--   secondary group IDs, on the access point that is used for all file
--   system operations performed by NFS clients using the access point.
--   
--   <i>See:</i> <a>newPosixUser</a> smart constructor.
data PosixUser
PosixUser' :: Maybe [Natural] -> Natural -> Natural -> PosixUser

-- | Secondary POSIX group IDs used for all file system operations using
--   this access point.
[$sel:secondaryGids:PosixUser'] :: PosixUser -> Maybe [Natural]

-- | The POSIX user ID used for all file system operations using this
--   access point.
[$sel:uid:PosixUser'] :: PosixUser -> Natural

-- | The POSIX group ID used for all file system operations using this
--   access point.
[$sel:gid:PosixUser'] :: PosixUser -> Natural

-- | Create a value of <a>PosixUser</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:secondaryGids:PosixUser'</a>, <a>posixUser_secondaryGids</a> -
--   Secondary POSIX group IDs used for all file system operations using
--   this access point.
--   
--   <a>$sel:uid:PosixUser'</a>, <a>posixUser_uid</a> - The POSIX user ID
--   used for all file system operations using this access point.
--   
--   <a>$sel:gid:PosixUser'</a>, <a>posixUser_gid</a> - The POSIX group ID
--   used for all file system operations using this access point.
newPosixUser :: Natural -> Natural -> PosixUser

-- | Secondary POSIX group IDs used for all file system operations using
--   this access point.
posixUser_secondaryGids :: Lens' PosixUser (Maybe [Natural])

-- | The POSIX user ID used for all file system operations using this
--   access point.
posixUser_uid :: Lens' PosixUser Natural

-- | The POSIX group ID used for all file system operations using this
--   access point.
posixUser_gid :: Lens' PosixUser Natural
instance GHC.Generics.Generic Amazonka.EFS.Types.PosixUser.PosixUser
instance GHC.Show.Show Amazonka.EFS.Types.PosixUser.PosixUser
instance GHC.Read.Read Amazonka.EFS.Types.PosixUser.PosixUser
instance GHC.Classes.Eq Amazonka.EFS.Types.PosixUser.PosixUser
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.EFS.Types.PosixUser.PosixUser
instance Data.Hashable.Class.Hashable Amazonka.EFS.Types.PosixUser.PosixUser
instance Control.DeepSeq.NFData Amazonka.EFS.Types.PosixUser.PosixUser
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.EFS.Types.PosixUser.PosixUser


module Amazonka.EFS.Types.Resource

-- | An EFS resource, for example a file system or a mount target.
newtype Resource
Resource' :: Text -> Resource
[fromResource] :: Resource -> Text
pattern Resource_FILE_SYSTEM :: Resource
pattern Resource_MOUNT_TARGET :: Resource
instance Amazonka.Data.XML.ToXML Amazonka.EFS.Types.Resource.Resource
instance Amazonka.Data.XML.FromXML Amazonka.EFS.Types.Resource.Resource
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.EFS.Types.Resource.Resource
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.EFS.Types.Resource.Resource
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.EFS.Types.Resource.Resource
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.EFS.Types.Resource.Resource
instance Amazonka.Data.Query.ToQuery Amazonka.EFS.Types.Resource.Resource
instance Amazonka.Data.Headers.ToHeader Amazonka.EFS.Types.Resource.Resource
instance Amazonka.Data.Log.ToLog Amazonka.EFS.Types.Resource.Resource
instance Amazonka.Data.ByteString.ToByteString Amazonka.EFS.Types.Resource.Resource
instance Amazonka.Data.Text.ToText Amazonka.EFS.Types.Resource.Resource
instance Amazonka.Data.Text.FromText Amazonka.EFS.Types.Resource.Resource
instance Control.DeepSeq.NFData Amazonka.EFS.Types.Resource.Resource
instance Data.Hashable.Class.Hashable Amazonka.EFS.Types.Resource.Resource
instance GHC.Generics.Generic Amazonka.EFS.Types.Resource.Resource
instance GHC.Classes.Ord Amazonka.EFS.Types.Resource.Resource
instance GHC.Classes.Eq Amazonka.EFS.Types.Resource.Resource
instance GHC.Read.Read Amazonka.EFS.Types.Resource.Resource
instance GHC.Show.Show Amazonka.EFS.Types.Resource.Resource


module Amazonka.EFS.Types.ResourceIdType

-- | A preference indicating a choice to use 63bit/32bit IDs for all
--   applicable resources.
newtype ResourceIdType
ResourceIdType' :: Text -> ResourceIdType
[fromResourceIdType] :: ResourceIdType -> Text
pattern ResourceIdType_LONG_ID :: ResourceIdType
pattern ResourceIdType_SHORT_ID :: ResourceIdType
instance Amazonka.Data.XML.ToXML Amazonka.EFS.Types.ResourceIdType.ResourceIdType
instance Amazonka.Data.XML.FromXML Amazonka.EFS.Types.ResourceIdType.ResourceIdType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.EFS.Types.ResourceIdType.ResourceIdType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.EFS.Types.ResourceIdType.ResourceIdType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.EFS.Types.ResourceIdType.ResourceIdType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.EFS.Types.ResourceIdType.ResourceIdType
instance Amazonka.Data.Query.ToQuery Amazonka.EFS.Types.ResourceIdType.ResourceIdType
instance Amazonka.Data.Headers.ToHeader Amazonka.EFS.Types.ResourceIdType.ResourceIdType
instance Amazonka.Data.Log.ToLog Amazonka.EFS.Types.ResourceIdType.ResourceIdType
instance Amazonka.Data.ByteString.ToByteString Amazonka.EFS.Types.ResourceIdType.ResourceIdType
instance Amazonka.Data.Text.ToText Amazonka.EFS.Types.ResourceIdType.ResourceIdType
instance Amazonka.Data.Text.FromText Amazonka.EFS.Types.ResourceIdType.ResourceIdType
instance Control.DeepSeq.NFData Amazonka.EFS.Types.ResourceIdType.ResourceIdType
instance Data.Hashable.Class.Hashable Amazonka.EFS.Types.ResourceIdType.ResourceIdType
instance GHC.Generics.Generic Amazonka.EFS.Types.ResourceIdType.ResourceIdType
instance GHC.Classes.Ord Amazonka.EFS.Types.ResourceIdType.ResourceIdType
instance GHC.Classes.Eq Amazonka.EFS.Types.ResourceIdType.ResourceIdType
instance GHC.Read.Read Amazonka.EFS.Types.ResourceIdType.ResourceIdType
instance GHC.Show.Show Amazonka.EFS.Types.ResourceIdType.ResourceIdType


module Amazonka.EFS.Types.ResourceIdPreference

-- | Describes the resource type and its ID preference for the user's
--   Amazon Web Services account, in the current Amazon Web Services
--   Region.
--   
--   <i>See:</i> <a>newResourceIdPreference</a> smart constructor.
data ResourceIdPreference
ResourceIdPreference' :: Maybe [Resource] -> Maybe ResourceIdType -> ResourceIdPreference

-- | Identifies the Amazon EFS resources to which the ID preference setting
--   applies, <tt>FILE_SYSTEM</tt> and <tt>MOUNT_TARGET</tt>.
[$sel:resources:ResourceIdPreference'] :: ResourceIdPreference -> Maybe [Resource]

-- | Identifies the EFS resource ID preference, either <tt>LONG_ID</tt> (17
--   characters) or <tt>SHORT_ID</tt> (8 characters).
[$sel:resourceIdType:ResourceIdPreference'] :: ResourceIdPreference -> Maybe ResourceIdType

-- | Create a value of <a>ResourceIdPreference</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resources:ResourceIdPreference'</a>,
--   <a>resourceIdPreference_resources</a> - Identifies the Amazon EFS
--   resources to which the ID preference setting applies,
--   <tt>FILE_SYSTEM</tt> and <tt>MOUNT_TARGET</tt>.
--   
--   <a>$sel:resourceIdType:ResourceIdPreference'</a>,
--   <a>resourceIdPreference_resourceIdType</a> - Identifies the EFS
--   resource ID preference, either <tt>LONG_ID</tt> (17 characters) or
--   <tt>SHORT_ID</tt> (8 characters).
newResourceIdPreference :: ResourceIdPreference

-- | Identifies the Amazon EFS resources to which the ID preference setting
--   applies, <tt>FILE_SYSTEM</tt> and <tt>MOUNT_TARGET</tt>.
resourceIdPreference_resources :: Lens' ResourceIdPreference (Maybe [Resource])

-- | Identifies the EFS resource ID preference, either <tt>LONG_ID</tt> (17
--   characters) or <tt>SHORT_ID</tt> (8 characters).
resourceIdPreference_resourceIdType :: Lens' ResourceIdPreference (Maybe ResourceIdType)
instance GHC.Generics.Generic Amazonka.EFS.Types.ResourceIdPreference.ResourceIdPreference
instance GHC.Show.Show Amazonka.EFS.Types.ResourceIdPreference.ResourceIdPreference
instance GHC.Read.Read Amazonka.EFS.Types.ResourceIdPreference.ResourceIdPreference
instance GHC.Classes.Eq Amazonka.EFS.Types.ResourceIdPreference.ResourceIdPreference
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.EFS.Types.ResourceIdPreference.ResourceIdPreference
instance Data.Hashable.Class.Hashable Amazonka.EFS.Types.ResourceIdPreference.ResourceIdPreference
instance Control.DeepSeq.NFData Amazonka.EFS.Types.ResourceIdPreference.ResourceIdPreference


module Amazonka.EFS.Types.RootDirectory

-- | Specifies the directory on the Amazon EFS file system that the access
--   point provides access to. The access point exposes the specified file
--   system path as the root directory of your file system to applications
--   using the access point. NFS clients using the access point can only
--   access data in the access point's <tt>RootDirectory</tt> and it's
--   subdirectories.
--   
--   <i>See:</i> <a>newRootDirectory</a> smart constructor.
data RootDirectory
RootDirectory' :: Maybe CreationInfo -> Maybe Text -> RootDirectory

-- | (Optional) Specifies the POSIX IDs and permissions to apply to the
--   access point's <tt>RootDirectory</tt>. If the <tt>RootDirectory</tt>
--   &gt; <tt>Path</tt> specified does not exist, EFS creates the root
--   directory using the <tt>CreationInfo</tt> settings when a client
--   connects to an access point. When specifying the
--   <tt>CreationInfo</tt>, you must provide values for all properties.
--   
--   If you do not provide <tt>CreationInfo</tt> and the specified
--   <tt>RootDirectory</tt> &gt; <tt>Path</tt> does not exist, attempts to
--   mount the file system using the access point will fail.
[$sel:creationInfo:RootDirectory'] :: RootDirectory -> Maybe CreationInfo

-- | Specifies the path on the EFS file system to expose as the root
--   directory to NFS clients using the access point to access the EFS file
--   system. A path can have up to four subdirectories. If the specified
--   path does not exist, you are required to provide the
--   <tt>CreationInfo</tt>.
[$sel:path:RootDirectory'] :: RootDirectory -> Maybe Text

-- | Create a value of <a>RootDirectory</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationInfo:RootDirectory'</a>,
--   <a>rootDirectory_creationInfo</a> - (Optional) Specifies the POSIX IDs
--   and permissions to apply to the access point's <tt>RootDirectory</tt>.
--   If the <tt>RootDirectory</tt> &gt; <tt>Path</tt> specified does not
--   exist, EFS creates the root directory using the <tt>CreationInfo</tt>
--   settings when a client connects to an access point. When specifying
--   the <tt>CreationInfo</tt>, you must provide values for all properties.
--   
--   If you do not provide <tt>CreationInfo</tt> and the specified
--   <tt>RootDirectory</tt> &gt; <tt>Path</tt> does not exist, attempts to
--   mount the file system using the access point will fail.
--   
--   <a>$sel:path:RootDirectory'</a>, <a>rootDirectory_path</a> - Specifies
--   the path on the EFS file system to expose as the root directory to NFS
--   clients using the access point to access the EFS file system. A path
--   can have up to four subdirectories. If the specified path does not
--   exist, you are required to provide the <tt>CreationInfo</tt>.
newRootDirectory :: RootDirectory

-- | (Optional) Specifies the POSIX IDs and permissions to apply to the
--   access point's <tt>RootDirectory</tt>. If the <tt>RootDirectory</tt>
--   &gt; <tt>Path</tt> specified does not exist, EFS creates the root
--   directory using the <tt>CreationInfo</tt> settings when a client
--   connects to an access point. When specifying the
--   <tt>CreationInfo</tt>, you must provide values for all properties.
--   
--   If you do not provide <tt>CreationInfo</tt> and the specified
--   <tt>RootDirectory</tt> &gt; <tt>Path</tt> does not exist, attempts to
--   mount the file system using the access point will fail.
rootDirectory_creationInfo :: Lens' RootDirectory (Maybe CreationInfo)

-- | Specifies the path on the EFS file system to expose as the root
--   directory to NFS clients using the access point to access the EFS file
--   system. A path can have up to four subdirectories. If the specified
--   path does not exist, you are required to provide the
--   <tt>CreationInfo</tt>.
rootDirectory_path :: Lens' RootDirectory (Maybe Text)
instance GHC.Generics.Generic Amazonka.EFS.Types.RootDirectory.RootDirectory
instance GHC.Show.Show Amazonka.EFS.Types.RootDirectory.RootDirectory
instance GHC.Read.Read Amazonka.EFS.Types.RootDirectory.RootDirectory
instance GHC.Classes.Eq Amazonka.EFS.Types.RootDirectory.RootDirectory
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.EFS.Types.RootDirectory.RootDirectory
instance Data.Hashable.Class.Hashable Amazonka.EFS.Types.RootDirectory.RootDirectory
instance Control.DeepSeq.NFData Amazonka.EFS.Types.RootDirectory.RootDirectory
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.EFS.Types.RootDirectory.RootDirectory


module Amazonka.EFS.Types.Tag

-- | A tag is a key-value pair. Allowed characters are letters, white
--   space, and numbers that can be represented in UTF-8, and the following
--   characters:<tt> + - = . _ : /</tt>.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | The tag key (String). The key can't start with <tt>aws:</tt>.
[$sel:key:Tag'] :: Tag -> Text

-- | The value of the tag key.
[$sel:value:Tag'] :: Tag -> Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The tag key (String). The key
--   can't start with <tt>aws:</tt>.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The value of the tag key.
newTag :: Text -> Text -> Tag

-- | The tag key (String). The key can't start with <tt>aws:</tt>.
tag_key :: Lens' Tag Text

-- | The value of the tag key.
tag_value :: Lens' Tag Text
instance GHC.Generics.Generic Amazonka.EFS.Types.Tag.Tag
instance GHC.Show.Show Amazonka.EFS.Types.Tag.Tag
instance GHC.Read.Read Amazonka.EFS.Types.Tag.Tag
instance GHC.Classes.Eq Amazonka.EFS.Types.Tag.Tag
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.EFS.Types.Tag.Tag
instance Data.Hashable.Class.Hashable Amazonka.EFS.Types.Tag.Tag
instance Control.DeepSeq.NFData Amazonka.EFS.Types.Tag.Tag
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.EFS.Types.Tag.Tag


module Amazonka.EFS.Types.AccessPointDescription

-- | Provides a description of an EFS file system access point.
--   
--   <i>See:</i> <a>newAccessPointDescription</a> smart constructor.
data AccessPointDescription
AccessPointDescription' :: Maybe PosixUser -> Maybe RootDirectory -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe LifeCycleState -> Maybe [Tag] -> AccessPointDescription

-- | The full POSIX identity, including the user ID, group ID, and
--   secondary group IDs on the access point that is used for all file
--   operations by NFS clients using the access point.
[$sel:posixUser:AccessPointDescription'] :: AccessPointDescription -> Maybe PosixUser

-- | The directory on the Amazon EFS file system that the access point
--   exposes as the root directory to NFS clients using the access point.
[$sel:rootDirectory:AccessPointDescription'] :: AccessPointDescription -> Maybe RootDirectory

-- | The opaque string specified in the request to ensure idempotent
--   creation.
[$sel:clientToken:AccessPointDescription'] :: AccessPointDescription -> Maybe Text

-- | The ID of the access point, assigned by Amazon EFS.
[$sel:accessPointId:AccessPointDescription'] :: AccessPointDescription -> Maybe Text

-- | The ID of the EFS file system that the access point applies to.
[$sel:fileSystemId:AccessPointDescription'] :: AccessPointDescription -> Maybe Text

-- | Identified the Amazon Web Services account that owns the access point
--   resource.
[$sel:ownerId:AccessPointDescription'] :: AccessPointDescription -> Maybe Text

-- | The name of the access point. This is the value of the <tt>Name</tt>
--   tag.
[$sel:name:AccessPointDescription'] :: AccessPointDescription -> Maybe Text

-- | The unique Amazon Resource Name (ARN) associated with the access
--   point.
[$sel:accessPointArn:AccessPointDescription'] :: AccessPointDescription -> Maybe Text

-- | Identifies the lifecycle phase of the access point.
[$sel:lifeCycleState:AccessPointDescription'] :: AccessPointDescription -> Maybe LifeCycleState

-- | The tags associated with the access point, presented as an array of
--   Tag objects.
[$sel:tags:AccessPointDescription'] :: AccessPointDescription -> Maybe [Tag]

-- | Create a value of <a>AccessPointDescription</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:posixUser:AccessPointDescription'</a>,
--   <a>accessPointDescription_posixUser</a> - The full POSIX identity,
--   including the user ID, group ID, and secondary group IDs on the access
--   point that is used for all file operations by NFS clients using the
--   access point.
--   
--   <a>$sel:rootDirectory:AccessPointDescription'</a>,
--   <a>accessPointDescription_rootDirectory</a> - The directory on the
--   Amazon EFS file system that the access point exposes as the root
--   directory to NFS clients using the access point.
--   
--   <a>$sel:clientToken:AccessPointDescription'</a>,
--   <a>accessPointDescription_clientToken</a> - The opaque string
--   specified in the request to ensure idempotent creation.
--   
--   <a>$sel:accessPointId:AccessPointDescription'</a>,
--   <a>accessPointDescription_accessPointId</a> - The ID of the access
--   point, assigned by Amazon EFS.
--   
--   <a>$sel:fileSystemId:AccessPointDescription'</a>,
--   <a>accessPointDescription_fileSystemId</a> - The ID of the EFS file
--   system that the access point applies to.
--   
--   <a>$sel:ownerId:AccessPointDescription'</a>,
--   <a>accessPointDescription_ownerId</a> - Identified the Amazon Web
--   Services account that owns the access point resource.
--   
--   <a>$sel:name:AccessPointDescription'</a>,
--   <a>accessPointDescription_name</a> - The name of the access point.
--   This is the value of the <tt>Name</tt> tag.
--   
--   <a>$sel:accessPointArn:AccessPointDescription'</a>,
--   <a>accessPointDescription_accessPointArn</a> - The unique Amazon
--   Resource Name (ARN) associated with the access point.
--   
--   <a>$sel:lifeCycleState:AccessPointDescription'</a>,
--   <a>accessPointDescription_lifeCycleState</a> - Identifies the
--   lifecycle phase of the access point.
--   
--   <a>$sel:tags:AccessPointDescription'</a>,
--   <a>accessPointDescription_tags</a> - The tags associated with the
--   access point, presented as an array of Tag objects.
newAccessPointDescription :: AccessPointDescription

-- | The full POSIX identity, including the user ID, group ID, and
--   secondary group IDs on the access point that is used for all file
--   operations by NFS clients using the access point.
accessPointDescription_posixUser :: Lens' AccessPointDescription (Maybe PosixUser)

-- | The directory on the Amazon EFS file system that the access point
--   exposes as the root directory to NFS clients using the access point.
accessPointDescription_rootDirectory :: Lens' AccessPointDescription (Maybe RootDirectory)

-- | The opaque string specified in the request to ensure idempotent
--   creation.
accessPointDescription_clientToken :: Lens' AccessPointDescription (Maybe Text)

-- | The ID of the access point, assigned by Amazon EFS.
accessPointDescription_accessPointId :: Lens' AccessPointDescription (Maybe Text)

-- | The ID of the EFS file system that the access point applies to.
accessPointDescription_fileSystemId :: Lens' AccessPointDescription (Maybe Text)

-- | Identified the Amazon Web Services account that owns the access point
--   resource.
accessPointDescription_ownerId :: Lens' AccessPointDescription (Maybe Text)

-- | The name of the access point. This is the value of the <tt>Name</tt>
--   tag.
accessPointDescription_name :: Lens' AccessPointDescription (Maybe Text)

-- | The unique Amazon Resource Name (ARN) associated with the access
--   point.
accessPointDescription_accessPointArn :: Lens' AccessPointDescription (Maybe Text)

-- | Identifies the lifecycle phase of the access point.
accessPointDescription_lifeCycleState :: Lens' AccessPointDescription (Maybe LifeCycleState)

-- | The tags associated with the access point, presented as an array of
--   Tag objects.
accessPointDescription_tags :: Lens' AccessPointDescription (Maybe [Tag])
instance GHC.Generics.Generic Amazonka.EFS.Types.AccessPointDescription.AccessPointDescription
instance GHC.Show.Show Amazonka.EFS.Types.AccessPointDescription.AccessPointDescription
instance GHC.Read.Read Amazonka.EFS.Types.AccessPointDescription.AccessPointDescription
instance GHC.Classes.Eq Amazonka.EFS.Types.AccessPointDescription.AccessPointDescription
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.EFS.Types.AccessPointDescription.AccessPointDescription
instance Data.Hashable.Class.Hashable Amazonka.EFS.Types.AccessPointDescription.AccessPointDescription
instance Control.DeepSeq.NFData Amazonka.EFS.Types.AccessPointDescription.AccessPointDescription


module Amazonka.EFS.Types.ThroughputMode
newtype ThroughputMode
ThroughputMode' :: Text -> ThroughputMode
[fromThroughputMode] :: ThroughputMode -> Text
pattern ThroughputMode_Bursting :: ThroughputMode
pattern ThroughputMode_Provisioned :: ThroughputMode
instance Amazonka.Data.XML.ToXML Amazonka.EFS.Types.ThroughputMode.ThroughputMode
instance Amazonka.Data.XML.FromXML Amazonka.EFS.Types.ThroughputMode.ThroughputMode
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.EFS.Types.ThroughputMode.ThroughputMode
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.EFS.Types.ThroughputMode.ThroughputMode
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.EFS.Types.ThroughputMode.ThroughputMode
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.EFS.Types.ThroughputMode.ThroughputMode
instance Amazonka.Data.Query.ToQuery Amazonka.EFS.Types.ThroughputMode.ThroughputMode
instance Amazonka.Data.Headers.ToHeader Amazonka.EFS.Types.ThroughputMode.ThroughputMode
instance Amazonka.Data.Log.ToLog Amazonka.EFS.Types.ThroughputMode.ThroughputMode
instance Amazonka.Data.ByteString.ToByteString Amazonka.EFS.Types.ThroughputMode.ThroughputMode
instance Amazonka.Data.Text.ToText Amazonka.EFS.Types.ThroughputMode.ThroughputMode
instance Amazonka.Data.Text.FromText Amazonka.EFS.Types.ThroughputMode.ThroughputMode
instance Control.DeepSeq.NFData Amazonka.EFS.Types.ThroughputMode.ThroughputMode
instance Data.Hashable.Class.Hashable Amazonka.EFS.Types.ThroughputMode.ThroughputMode
instance GHC.Generics.Generic Amazonka.EFS.Types.ThroughputMode.ThroughputMode
instance GHC.Classes.Ord Amazonka.EFS.Types.ThroughputMode.ThroughputMode
instance GHC.Classes.Eq Amazonka.EFS.Types.ThroughputMode.ThroughputMode
instance GHC.Read.Read Amazonka.EFS.Types.ThroughputMode.ThroughputMode
instance GHC.Show.Show Amazonka.EFS.Types.ThroughputMode.ThroughputMode


module Amazonka.EFS.Types.FileSystemDescription

-- | A description of the file system.
--   
--   <i>See:</i> <a>newFileSystemDescription</a> smart constructor.
data FileSystemDescription
FileSystemDescription' :: Maybe Text -> Maybe Double -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe ThroughputMode -> Maybe Text -> Maybe Text -> Text -> Text -> Text -> POSIX -> LifeCycleState -> Natural -> FileSystemSize -> PerformanceMode -> [Tag] -> FileSystemDescription

-- | The unique and consistent identifier of the Availability Zone in which
--   the file system's One Zone storage classes exist. For example,
--   <tt>use1-az1</tt> is an Availability Zone ID for the us-east-1 Amazon
--   Web Services Region, and it has the same location in every Amazon Web
--   Services account.
[$sel:availabilityZoneId:FileSystemDescription'] :: FileSystemDescription -> Maybe Text

-- | The amount of provisioned throughput, measured in MiB/s, for the file
--   system. Valid for file systems using <tt>ThroughputMode</tt> set to
--   <tt>provisioned</tt>.
[$sel:provisionedThroughputInMibps:FileSystemDescription'] :: FileSystemDescription -> Maybe Double

-- | Describes the Amazon Web Services Availability Zone in which the file
--   system is located, and is valid only for file systems using One Zone
--   storage classes. For more information, see <a>Using EFS storage
--   classes</a> in the <i>Amazon EFS User Guide</i>.
[$sel:availabilityZoneName:FileSystemDescription'] :: FileSystemDescription -> Maybe Text

-- | The Amazon Resource Name (ARN) for the EFS file system, in the format
--   <tt>arn:aws:elasticfilesystem:region:account-id:file-system/file-system-id
--   </tt>. Example with sample data:
--   <tt>arn:aws:elasticfilesystem:us-west-2:1111333322228888:file-system/fs-01234567</tt>
[$sel:fileSystemArn:FileSystemDescription'] :: FileSystemDescription -> Maybe Text

-- | A Boolean value that, if true, indicates that the file system is
--   encrypted.
[$sel:encrypted:FileSystemDescription'] :: FileSystemDescription -> Maybe Bool

-- | Displays the file system's throughput mode. For more information, see
--   <a>Throughput modes</a> in the <i>Amazon EFS User Guide</i>.
[$sel:throughputMode:FileSystemDescription'] :: FileSystemDescription -> Maybe ThroughputMode

-- | The ID of an Key Management Service customer master key (CMK) that was
--   used to protect the encrypted file system.
[$sel:kmsKeyId:FileSystemDescription'] :: FileSystemDescription -> Maybe Text

-- | You can add tags to a file system, including a <tt>Name</tt> tag. For
--   more information, see CreateFileSystem. If the file system has a
--   <tt>Name</tt> tag, Amazon EFS returns the value in this field.
[$sel:name:FileSystemDescription'] :: FileSystemDescription -> Maybe Text

-- | The Amazon Web Services account that created the file system. If the
--   file system was created by an IAM user, the parent account to which
--   the user belongs is the owner.
[$sel:ownerId:FileSystemDescription'] :: FileSystemDescription -> Text

-- | The opaque string specified in the request.
[$sel:creationToken:FileSystemDescription'] :: FileSystemDescription -> Text

-- | The ID of the file system, assigned by Amazon EFS.
[$sel:fileSystemId:FileSystemDescription'] :: FileSystemDescription -> Text

-- | The time that the file system was created, in seconds (since
--   1970-01-01T00:00:00Z).
[$sel:creationTime:FileSystemDescription'] :: FileSystemDescription -> POSIX

-- | The lifecycle phase of the file system.
[$sel:lifeCycleState:FileSystemDescription'] :: FileSystemDescription -> LifeCycleState

-- | The current number of mount targets that the file system has. For more
--   information, see CreateMountTarget.
[$sel:numberOfMountTargets:FileSystemDescription'] :: FileSystemDescription -> Natural

-- | The latest known metered size (in bytes) of data stored in the file
--   system, in its <tt>Value</tt> field, and the time at which that size
--   was determined in its <tt>Timestamp</tt> field. The <tt>Timestamp</tt>
--   value is the integer number of seconds since 1970-01-01T00:00:00Z. The
--   <tt>SizeInBytes</tt> value doesn't represent the size of a consistent
--   snapshot of the file system, but it is eventually consistent when
--   there are no writes to the file system. That is, <tt>SizeInBytes</tt>
--   represents actual size only if the file system is not modified for a
--   period longer than a couple of hours. Otherwise, the value is not the
--   exact size that the file system was at any point in time.
[$sel:sizeInBytes:FileSystemDescription'] :: FileSystemDescription -> FileSystemSize

-- | The performance mode of the file system.
[$sel:performanceMode:FileSystemDescription'] :: FileSystemDescription -> PerformanceMode

-- | The tags associated with the file system, presented as an array of
--   <tt>Tag</tt> objects.
[$sel:tags:FileSystemDescription'] :: FileSystemDescription -> [Tag]

-- | Create a value of <a>FileSystemDescription</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:availabilityZoneId:FileSystemDescription'</a>,
--   <a>fileSystemDescription_availabilityZoneId</a> - The unique and
--   consistent identifier of the Availability Zone in which the file
--   system's One Zone storage classes exist. For example,
--   <tt>use1-az1</tt> is an Availability Zone ID for the us-east-1 Amazon
--   Web Services Region, and it has the same location in every Amazon Web
--   Services account.
--   
--   <a>$sel:provisionedThroughputInMibps:FileSystemDescription'</a>,
--   <a>fileSystemDescription_provisionedThroughputInMibps</a> - The amount
--   of provisioned throughput, measured in MiB/s, for the file system.
--   Valid for file systems using <tt>ThroughputMode</tt> set to
--   <tt>provisioned</tt>.
--   
--   <a>$sel:availabilityZoneName:FileSystemDescription'</a>,
--   <a>fileSystemDescription_availabilityZoneName</a> - Describes the
--   Amazon Web Services Availability Zone in which the file system is
--   located, and is valid only for file systems using One Zone storage
--   classes. For more information, see <a>Using EFS storage classes</a> in
--   the <i>Amazon EFS User Guide</i>.
--   
--   <a>$sel:fileSystemArn:FileSystemDescription'</a>,
--   <a>fileSystemDescription_fileSystemArn</a> - The Amazon Resource Name
--   (ARN) for the EFS file system, in the format
--   <tt>arn:aws:elasticfilesystem:region:account-id:file-system/file-system-id
--   </tt>. Example with sample data:
--   <tt>arn:aws:elasticfilesystem:us-west-2:1111333322228888:file-system/fs-01234567</tt>
--   
--   <a>$sel:encrypted:FileSystemDescription'</a>,
--   <a>fileSystemDescription_encrypted</a> - A Boolean value that, if
--   true, indicates that the file system is encrypted.
--   
--   <a>$sel:throughputMode:FileSystemDescription'</a>,
--   <a>fileSystemDescription_throughputMode</a> - Displays the file
--   system's throughput mode. For more information, see <a>Throughput
--   modes</a> in the <i>Amazon EFS User Guide</i>.
--   
--   <a>$sel:kmsKeyId:FileSystemDescription'</a>,
--   <a>fileSystemDescription_kmsKeyId</a> - The ID of an Key Management
--   Service customer master key (CMK) that was used to protect the
--   encrypted file system.
--   
--   <a>$sel:name:FileSystemDescription'</a>,
--   <a>fileSystemDescription_name</a> - You can add tags to a file system,
--   including a <tt>Name</tt> tag. For more information, see
--   CreateFileSystem. If the file system has a <tt>Name</tt> tag, Amazon
--   EFS returns the value in this field.
--   
--   <a>$sel:ownerId:FileSystemDescription'</a>,
--   <a>fileSystemDescription_ownerId</a> - The Amazon Web Services account
--   that created the file system. If the file system was created by an IAM
--   user, the parent account to which the user belongs is the owner.
--   
--   <a>$sel:creationToken:FileSystemDescription'</a>,
--   <a>fileSystemDescription_creationToken</a> - The opaque string
--   specified in the request.
--   
--   <a>$sel:fileSystemId:FileSystemDescription'</a>,
--   <a>fileSystemDescription_fileSystemId</a> - The ID of the file system,
--   assigned by Amazon EFS.
--   
--   <a>$sel:creationTime:FileSystemDescription'</a>,
--   <a>fileSystemDescription_creationTime</a> - The time that the file
--   system was created, in seconds (since 1970-01-01T00:00:00Z).
--   
--   <a>$sel:lifeCycleState:FileSystemDescription'</a>,
--   <a>fileSystemDescription_lifeCycleState</a> - The lifecycle phase of
--   the file system.
--   
--   <a>$sel:numberOfMountTargets:FileSystemDescription'</a>,
--   <a>fileSystemDescription_numberOfMountTargets</a> - The current number
--   of mount targets that the file system has. For more information, see
--   CreateMountTarget.
--   
--   <a>$sel:sizeInBytes:FileSystemDescription'</a>,
--   <a>fileSystemDescription_sizeInBytes</a> - The latest known metered
--   size (in bytes) of data stored in the file system, in its
--   <tt>Value</tt> field, and the time at which that size was determined
--   in its <tt>Timestamp</tt> field. The <tt>Timestamp</tt> value is the
--   integer number of seconds since 1970-01-01T00:00:00Z. The
--   <tt>SizeInBytes</tt> value doesn't represent the size of a consistent
--   snapshot of the file system, but it is eventually consistent when
--   there are no writes to the file system. That is, <tt>SizeInBytes</tt>
--   represents actual size only if the file system is not modified for a
--   period longer than a couple of hours. Otherwise, the value is not the
--   exact size that the file system was at any point in time.
--   
--   <a>$sel:performanceMode:FileSystemDescription'</a>,
--   <a>fileSystemDescription_performanceMode</a> - The performance mode of
--   the file system.
--   
--   <a>$sel:tags:FileSystemDescription'</a>,
--   <a>fileSystemDescription_tags</a> - The tags associated with the file
--   system, presented as an array of <tt>Tag</tt> objects.
newFileSystemDescription :: Text -> Text -> Text -> UTCTime -> LifeCycleState -> Natural -> FileSystemSize -> PerformanceMode -> FileSystemDescription

-- | The unique and consistent identifier of the Availability Zone in which
--   the file system's One Zone storage classes exist. For example,
--   <tt>use1-az1</tt> is an Availability Zone ID for the us-east-1 Amazon
--   Web Services Region, and it has the same location in every Amazon Web
--   Services account.
fileSystemDescription_availabilityZoneId :: Lens' FileSystemDescription (Maybe Text)

-- | The amount of provisioned throughput, measured in MiB/s, for the file
--   system. Valid for file systems using <tt>ThroughputMode</tt> set to
--   <tt>provisioned</tt>.
fileSystemDescription_provisionedThroughputInMibps :: Lens' FileSystemDescription (Maybe Double)

-- | Describes the Amazon Web Services Availability Zone in which the file
--   system is located, and is valid only for file systems using One Zone
--   storage classes. For more information, see <a>Using EFS storage
--   classes</a> in the <i>Amazon EFS User Guide</i>.
fileSystemDescription_availabilityZoneName :: Lens' FileSystemDescription (Maybe Text)

-- | The Amazon Resource Name (ARN) for the EFS file system, in the format
--   <tt>arn:aws:elasticfilesystem:region:account-id:file-system/file-system-id
--   </tt>. Example with sample data:
--   <tt>arn:aws:elasticfilesystem:us-west-2:1111333322228888:file-system/fs-01234567</tt>
fileSystemDescription_fileSystemArn :: Lens' FileSystemDescription (Maybe Text)

-- | A Boolean value that, if true, indicates that the file system is
--   encrypted.
fileSystemDescription_encrypted :: Lens' FileSystemDescription (Maybe Bool)

-- | Displays the file system's throughput mode. For more information, see
--   <a>Throughput modes</a> in the <i>Amazon EFS User Guide</i>.
fileSystemDescription_throughputMode :: Lens' FileSystemDescription (Maybe ThroughputMode)

-- | The ID of an Key Management Service customer master key (CMK) that was
--   used to protect the encrypted file system.
fileSystemDescription_kmsKeyId :: Lens' FileSystemDescription (Maybe Text)

-- | You can add tags to a file system, including a <tt>Name</tt> tag. For
--   more information, see CreateFileSystem. If the file system has a
--   <tt>Name</tt> tag, Amazon EFS returns the value in this field.
fileSystemDescription_name :: Lens' FileSystemDescription (Maybe Text)

-- | The Amazon Web Services account that created the file system. If the
--   file system was created by an IAM user, the parent account to which
--   the user belongs is the owner.
fileSystemDescription_ownerId :: Lens' FileSystemDescription Text

-- | The opaque string specified in the request.
fileSystemDescription_creationToken :: Lens' FileSystemDescription Text

-- | The ID of the file system, assigned by Amazon EFS.
fileSystemDescription_fileSystemId :: Lens' FileSystemDescription Text

-- | The time that the file system was created, in seconds (since
--   1970-01-01T00:00:00Z).
fileSystemDescription_creationTime :: Lens' FileSystemDescription UTCTime

-- | The lifecycle phase of the file system.
fileSystemDescription_lifeCycleState :: Lens' FileSystemDescription LifeCycleState

-- | The current number of mount targets that the file system has. For more
--   information, see CreateMountTarget.
fileSystemDescription_numberOfMountTargets :: Lens' FileSystemDescription Natural

-- | The latest known metered size (in bytes) of data stored in the file
--   system, in its <tt>Value</tt> field, and the time at which that size
--   was determined in its <tt>Timestamp</tt> field. The <tt>Timestamp</tt>
--   value is the integer number of seconds since 1970-01-01T00:00:00Z. The
--   <tt>SizeInBytes</tt> value doesn't represent the size of a consistent
--   snapshot of the file system, but it is eventually consistent when
--   there are no writes to the file system. That is, <tt>SizeInBytes</tt>
--   represents actual size only if the file system is not modified for a
--   period longer than a couple of hours. Otherwise, the value is not the
--   exact size that the file system was at any point in time.
fileSystemDescription_sizeInBytes :: Lens' FileSystemDescription FileSystemSize

-- | The performance mode of the file system.
fileSystemDescription_performanceMode :: Lens' FileSystemDescription PerformanceMode

-- | The tags associated with the file system, presented as an array of
--   <tt>Tag</tt> objects.
fileSystemDescription_tags :: Lens' FileSystemDescription [Tag]
instance GHC.Generics.Generic Amazonka.EFS.Types.FileSystemDescription.FileSystemDescription
instance GHC.Show.Show Amazonka.EFS.Types.FileSystemDescription.FileSystemDescription
instance GHC.Read.Read Amazonka.EFS.Types.FileSystemDescription.FileSystemDescription
instance GHC.Classes.Eq Amazonka.EFS.Types.FileSystemDescription.FileSystemDescription
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.EFS.Types.FileSystemDescription.FileSystemDescription
instance Data.Hashable.Class.Hashable Amazonka.EFS.Types.FileSystemDescription.FileSystemDescription
instance Control.DeepSeq.NFData Amazonka.EFS.Types.FileSystemDescription.FileSystemDescription


module Amazonka.EFS.Types.TransitionToIARules
newtype TransitionToIARules
TransitionToIARules' :: Text -> TransitionToIARules
[fromTransitionToIARules] :: TransitionToIARules -> Text
pattern TransitionToIARules_AFTER_14_DAYS :: TransitionToIARules
pattern TransitionToIARules_AFTER_30_DAYS :: TransitionToIARules
pattern TransitionToIARules_AFTER_60_DAYS :: TransitionToIARules
pattern TransitionToIARules_AFTER_7_DAYS :: TransitionToIARules
pattern TransitionToIARules_AFTER_90_DAYS :: TransitionToIARules
instance Amazonka.Data.XML.ToXML Amazonka.EFS.Types.TransitionToIARules.TransitionToIARules
instance Amazonka.Data.XML.FromXML Amazonka.EFS.Types.TransitionToIARules.TransitionToIARules
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.EFS.Types.TransitionToIARules.TransitionToIARules
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.EFS.Types.TransitionToIARules.TransitionToIARules
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.EFS.Types.TransitionToIARules.TransitionToIARules
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.EFS.Types.TransitionToIARules.TransitionToIARules
instance Amazonka.Data.Query.ToQuery Amazonka.EFS.Types.TransitionToIARules.TransitionToIARules
instance Amazonka.Data.Headers.ToHeader Amazonka.EFS.Types.TransitionToIARules.TransitionToIARules
instance Amazonka.Data.Log.ToLog Amazonka.EFS.Types.TransitionToIARules.TransitionToIARules
instance Amazonka.Data.ByteString.ToByteString Amazonka.EFS.Types.TransitionToIARules.TransitionToIARules
instance Amazonka.Data.Text.ToText Amazonka.EFS.Types.TransitionToIARules.TransitionToIARules
instance Amazonka.Data.Text.FromText Amazonka.EFS.Types.TransitionToIARules.TransitionToIARules
instance Control.DeepSeq.NFData Amazonka.EFS.Types.TransitionToIARules.TransitionToIARules
instance Data.Hashable.Class.Hashable Amazonka.EFS.Types.TransitionToIARules.TransitionToIARules
instance GHC.Generics.Generic Amazonka.EFS.Types.TransitionToIARules.TransitionToIARules
instance GHC.Classes.Ord Amazonka.EFS.Types.TransitionToIARules.TransitionToIARules
instance GHC.Classes.Eq Amazonka.EFS.Types.TransitionToIARules.TransitionToIARules
instance GHC.Read.Read Amazonka.EFS.Types.TransitionToIARules.TransitionToIARules
instance GHC.Show.Show Amazonka.EFS.Types.TransitionToIARules.TransitionToIARules


module Amazonka.EFS.Types.TransitionToPrimaryStorageClassRules
newtype TransitionToPrimaryStorageClassRules
TransitionToPrimaryStorageClassRules' :: Text -> TransitionToPrimaryStorageClassRules
[fromTransitionToPrimaryStorageClassRules] :: TransitionToPrimaryStorageClassRules -> Text
pattern TransitionToPrimaryStorageClassRules_AFTER_1_ACCESS :: TransitionToPrimaryStorageClassRules
instance Amazonka.Data.XML.ToXML Amazonka.EFS.Types.TransitionToPrimaryStorageClassRules.TransitionToPrimaryStorageClassRules
instance Amazonka.Data.XML.FromXML Amazonka.EFS.Types.TransitionToPrimaryStorageClassRules.TransitionToPrimaryStorageClassRules
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.EFS.Types.TransitionToPrimaryStorageClassRules.TransitionToPrimaryStorageClassRules
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.EFS.Types.TransitionToPrimaryStorageClassRules.TransitionToPrimaryStorageClassRules
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.EFS.Types.TransitionToPrimaryStorageClassRules.TransitionToPrimaryStorageClassRules
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.EFS.Types.TransitionToPrimaryStorageClassRules.TransitionToPrimaryStorageClassRules
instance Amazonka.Data.Query.ToQuery Amazonka.EFS.Types.TransitionToPrimaryStorageClassRules.TransitionToPrimaryStorageClassRules
instance Amazonka.Data.Headers.ToHeader Amazonka.EFS.Types.TransitionToPrimaryStorageClassRules.TransitionToPrimaryStorageClassRules
instance Amazonka.Data.Log.ToLog Amazonka.EFS.Types.TransitionToPrimaryStorageClassRules.TransitionToPrimaryStorageClassRules
instance Amazonka.Data.ByteString.ToByteString Amazonka.EFS.Types.TransitionToPrimaryStorageClassRules.TransitionToPrimaryStorageClassRules
instance Amazonka.Data.Text.ToText Amazonka.EFS.Types.TransitionToPrimaryStorageClassRules.TransitionToPrimaryStorageClassRules
instance Amazonka.Data.Text.FromText Amazonka.EFS.Types.TransitionToPrimaryStorageClassRules.TransitionToPrimaryStorageClassRules
instance Control.DeepSeq.NFData Amazonka.EFS.Types.TransitionToPrimaryStorageClassRules.TransitionToPrimaryStorageClassRules
instance Data.Hashable.Class.Hashable Amazonka.EFS.Types.TransitionToPrimaryStorageClassRules.TransitionToPrimaryStorageClassRules
instance GHC.Generics.Generic Amazonka.EFS.Types.TransitionToPrimaryStorageClassRules.TransitionToPrimaryStorageClassRules
instance GHC.Classes.Ord Amazonka.EFS.Types.TransitionToPrimaryStorageClassRules.TransitionToPrimaryStorageClassRules
instance GHC.Classes.Eq Amazonka.EFS.Types.TransitionToPrimaryStorageClassRules.TransitionToPrimaryStorageClassRules
instance GHC.Read.Read Amazonka.EFS.Types.TransitionToPrimaryStorageClassRules.TransitionToPrimaryStorageClassRules
instance GHC.Show.Show Amazonka.EFS.Types.TransitionToPrimaryStorageClassRules.TransitionToPrimaryStorageClassRules


module Amazonka.EFS.Types.LifecyclePolicy

-- | Describes a policy used by EFS lifecycle management and EFS
--   intelligent tiering that specifies when to transition files into and
--   out of the file system's Infrequent Access (IA) storage class. For
--   more information, see <a>EFS Intelligent‐Tiering and EFS Lifecycle
--   Management</a>.
--   
--   When using the <tt>put-lifecycle-configuration</tt> CLI command or the
--   <tt>PutLifecycleConfiguration</tt> API action, Amazon EFS requires
--   that each <tt>LifecyclePolicy</tt> object have only a single
--   transition. This means that in a request body,
--   <tt>LifecyclePolicies</tt> needs to be structured as an array of
--   <tt>LifecyclePolicy</tt> objects, one object for each transition,
--   <tt>TransitionToIA</tt>, <tt>TransitionToPrimaryStorageClass</tt>. For
--   more information, see the request examples in
--   PutLifecycleConfiguration.
--   
--   <i>See:</i> <a>newLifecyclePolicy</a> smart constructor.
data LifecyclePolicy
LifecyclePolicy' :: Maybe TransitionToIARules -> Maybe TransitionToPrimaryStorageClassRules -> LifecyclePolicy

-- | Describes the period of time that a file is not accessed, after which
--   it transitions to IA storage. Metadata operations such as listing the
--   contents of a directory don't count as file access events.
[$sel:transitionToIA:LifecyclePolicy'] :: LifecyclePolicy -> Maybe TransitionToIARules

-- | Describes when to transition a file from IA storage to primary
--   storage. Metadata operations such as listing the contents of a
--   directory don't count as file access events.
[$sel:transitionToPrimaryStorageClass:LifecyclePolicy'] :: LifecyclePolicy -> Maybe TransitionToPrimaryStorageClassRules

-- | Create a value of <a>LifecyclePolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:transitionToIA:LifecyclePolicy'</a>,
--   <a>lifecyclePolicy_transitionToIA</a> - Describes the period of time
--   that a file is not accessed, after which it transitions to IA storage.
--   Metadata operations such as listing the contents of a directory don't
--   count as file access events.
--   
--   <a>$sel:transitionToPrimaryStorageClass:LifecyclePolicy'</a>,
--   <a>lifecyclePolicy_transitionToPrimaryStorageClass</a> - Describes
--   when to transition a file from IA storage to primary storage. Metadata
--   operations such as listing the contents of a directory don't count as
--   file access events.
newLifecyclePolicy :: LifecyclePolicy

-- | Describes the period of time that a file is not accessed, after which
--   it transitions to IA storage. Metadata operations such as listing the
--   contents of a directory don't count as file access events.
lifecyclePolicy_transitionToIA :: Lens' LifecyclePolicy (Maybe TransitionToIARules)

-- | Describes when to transition a file from IA storage to primary
--   storage. Metadata operations such as listing the contents of a
--   directory don't count as file access events.
lifecyclePolicy_transitionToPrimaryStorageClass :: Lens' LifecyclePolicy (Maybe TransitionToPrimaryStorageClassRules)
instance GHC.Generics.Generic Amazonka.EFS.Types.LifecyclePolicy.LifecyclePolicy
instance GHC.Show.Show Amazonka.EFS.Types.LifecyclePolicy.LifecyclePolicy
instance GHC.Read.Read Amazonka.EFS.Types.LifecyclePolicy.LifecyclePolicy
instance GHC.Classes.Eq Amazonka.EFS.Types.LifecyclePolicy.LifecyclePolicy
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.EFS.Types.LifecyclePolicy.LifecyclePolicy
instance Data.Hashable.Class.Hashable Amazonka.EFS.Types.LifecyclePolicy.LifecyclePolicy
instance Control.DeepSeq.NFData Amazonka.EFS.Types.LifecyclePolicy.LifecyclePolicy
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.EFS.Types.LifecyclePolicy.LifecyclePolicy


module Amazonka.EFS.Types.LifecycleConfigurationDescription

-- | <i>See:</i> <a>newLifecycleConfigurationDescription</a> smart
--   constructor.
data LifecycleConfigurationDescription
LifecycleConfigurationDescription' :: Maybe [LifecyclePolicy] -> LifecycleConfigurationDescription

-- | An array of lifecycle management policies. EFS supports a maximum of
--   one policy per file system.
[$sel:lifecyclePolicies:LifecycleConfigurationDescription'] :: LifecycleConfigurationDescription -> Maybe [LifecyclePolicy]

-- | Create a value of <a>LifecycleConfigurationDescription</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lifecyclePolicies:LifecycleConfigurationDescription'</a>,
--   <a>lifecycleConfigurationDescription_lifecyclePolicies</a> - An array
--   of lifecycle management policies. EFS supports a maximum of one policy
--   per file system.
newLifecycleConfigurationDescription :: LifecycleConfigurationDescription

-- | An array of lifecycle management policies. EFS supports a maximum of
--   one policy per file system.
lifecycleConfigurationDescription_lifecyclePolicies :: Lens' LifecycleConfigurationDescription (Maybe [LifecyclePolicy])
instance GHC.Generics.Generic Amazonka.EFS.Types.LifecycleConfigurationDescription.LifecycleConfigurationDescription
instance GHC.Show.Show Amazonka.EFS.Types.LifecycleConfigurationDescription.LifecycleConfigurationDescription
instance GHC.Read.Read Amazonka.EFS.Types.LifecycleConfigurationDescription.LifecycleConfigurationDescription
instance GHC.Classes.Eq Amazonka.EFS.Types.LifecycleConfigurationDescription.LifecycleConfigurationDescription
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.EFS.Types.LifecycleConfigurationDescription.LifecycleConfigurationDescription
instance Data.Hashable.Class.Hashable Amazonka.EFS.Types.LifecycleConfigurationDescription.LifecycleConfigurationDescription
instance Control.DeepSeq.NFData Amazonka.EFS.Types.LifecycleConfigurationDescription.LifecycleConfigurationDescription


module Amazonka.EFS.Types

-- | API version <tt>2015-02-01</tt> of the Amazon Elastic File System SDK
--   configuration.
defaultService :: Service

-- | Returned if the Backup service is not available in the Amazon Web
--   Services Region in which the request was made.
_ValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Returned if there is no mount target with the specified ID found in
--   the caller's Amazon Web Services account.
_MountTargetNotFound :: AsError a => Getting (First ServiceError) a ServiceError

-- | Returned if the size of <tt>SecurityGroups</tt> specified in the
--   request is greater than five.
_SecurityGroupLimitExceeded :: AsError a => Getting (First ServiceError) a ServiceError

-- | Returned if one of the specified security groups doesn't exist in the
--   subnet's VPC.
_SecurityGroupNotFound :: AsError a => Getting (First ServiceError) a ServiceError

-- | Returned if the mount target would violate one of the specified
--   restrictions based on the file system's existing mount targets.
_MountTargetConflict :: AsError a => Getting (First ServiceError) a ServiceError

-- | Returned if the requested Amazon EFS functionality is not available in
--   the specified Availability Zone.
_UnsupportedAvailabilityZone :: AsError a => Getting (First ServiceError) a ServiceError

-- | Returned if the Amazon Web Services account has already created the
--   maximum number of file systems allowed per account.
_FileSystemLimitExceeded :: AsError a => Getting (First ServiceError) a ServiceError

-- | Returned if you don’t wait at least 24 hours before changing the
--   throughput mode, or decreasing the Provisioned Throughput value.
_TooManyRequests :: AsError a => Getting (First ServiceError) a ServiceError

-- | The calling account has reached the limit for elastic network
--   interfaces for the specific Amazon Web Services Region. The client
--   should try to delete some elastic network interfaces or get the
--   account limit raised. For more information, see <a>Amazon VPC
--   Limits</a> in the <i>Amazon VPC User Guide</i> (see the Network
--   interfaces per VPC entry in the table).
_NetworkInterfaceLimitExceeded :: AsError a => Getting (First ServiceError) a ServiceError

-- | Returned if the file system you are trying to create already exists,
--   with the creation token you provided.
_FileSystemAlreadyExists :: AsError a => Getting (First ServiceError) a ServiceError

-- | Returned if there is no subnet with ID <tt>SubnetId</tt> provided in
--   the request.
_SubnetNotFound :: AsError a => Getting (First ServiceError) a ServiceError

-- | Returned if the Availability Zone that was specified for a mount
--   target is different from the Availability Zone that was specified for
--   One Zone storage classes. For more information, see <a>Regional and
--   One Zone storage redundancy</a>.
_AvailabilityZonesMismatch :: AsError a => Getting (First ServiceError) a ServiceError

-- | Returned if the specified <tt>FileSystemId</tt> value doesn't exist in
--   the requester's Amazon Web Services account.
_FileSystemNotFound :: AsError a => Getting (First ServiceError) a ServiceError

-- | Returned if the file system's lifecycle state is not "available".
_IncorrectFileSystemLifeCycleState :: AsError a => Getting (First ServiceError) a ServiceError

-- | Returned if the request is malformed or contains an error such as an
--   invalid parameter value or a missing required parameter.
_BadRequest :: AsError a => Getting (First ServiceError) a ServiceError

-- | Returned if <tt>IpAddress</tt> was not specified in the request and
--   there are no free IP addresses in the subnet.
_NoFreeAddressesInSubnet :: AsError a => Getting (First ServiceError) a ServiceError

-- | Returned if the throughput mode or amount of provisioned throughput
--   can't be changed because the throughput limit of 1024 MiB/s has been
--   reached.
_ThroughputLimitExceeded :: AsError a => Getting (First ServiceError) a ServiceError

-- | The service timed out trying to fulfill the request, and the client
--   should try the call again.
_DependencyTimeout :: AsError a => Getting (First ServiceError) a ServiceError

-- | Returned if a file system has mount targets.
_FileSystemInUse :: AsError a => Getting (First ServiceError) a ServiceError

-- | Returned if the mount target is not in the correct state for the
--   operation.
_IncorrectMountTargetState :: AsError a => Getting (First ServiceError) a ServiceError

-- | Returned if an error occurred on the server side.
_InternalServerError :: AsError a => Getting (First ServiceError) a ServiceError

-- | Returned if the request specified an <tt>IpAddress</tt> that is
--   already in use in the subnet.
_IpAddressInUse :: AsError a => Getting (First ServiceError) a ServiceError

-- | Returned if the default file system policy is in effect for the EFS
--   file system specified.
_PolicyNotFound :: AsError a => Getting (First ServiceError) a ServiceError

-- | Returned if the specified <tt>AccessPointId</tt> value doesn't exist
--   in the requester's Amazon Web Services account.
_AccessPointNotFound :: AsError a => Getting (First ServiceError) a ServiceError

-- | Returned if there's not enough capacity to provision additional
--   throughput. This value might be returned when you try to create a file
--   system in provisioned throughput mode, when you attempt to increase
--   the provisioned throughput of an existing file system, or when you
--   attempt to change an existing file system from bursting to provisioned
--   throughput mode. Try again later.
_InsufficientThroughputCapacity :: AsError a => Getting (First ServiceError) a ServiceError

-- | Returned if the <tt>FileSystemPolicy</tt> is is malformed or contains
--   an error such as an invalid parameter value or a missing required
--   parameter. Returned in the case of a policy lockout safety check
--   error.
_InvalidPolicyException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Returned if the access point you are trying to create already exists,
--   with the creation token you provided in the request.
_AccessPointAlreadyExists :: AsError a => Getting (First ServiceError) a ServiceError

-- | Returned if the Amazon Web Services account has already created the
--   maximum number of access points allowed per file system.
_AccessPointLimitExceeded :: AsError a => Getting (First ServiceError) a ServiceError
newtype BackupStatus
BackupStatus' :: Text -> BackupStatus
[fromBackupStatus] :: BackupStatus -> Text
pattern BackupStatus_DISABLED :: BackupStatus
pattern BackupStatus_DISABLING :: BackupStatus
pattern BackupStatus_ENABLED :: BackupStatus
pattern BackupStatus_ENABLING :: BackupStatus
newtype LifeCycleState
LifeCycleState' :: Text -> LifeCycleState
[fromLifeCycleState] :: LifeCycleState -> Text
pattern LifeCycleState_Available :: LifeCycleState
pattern LifeCycleState_Creating :: LifeCycleState
pattern LifeCycleState_Deleted :: LifeCycleState
pattern LifeCycleState_Deleting :: LifeCycleState
pattern LifeCycleState_Error :: LifeCycleState
pattern LifeCycleState_Updating :: LifeCycleState
newtype PerformanceMode
PerformanceMode' :: Text -> PerformanceMode
[fromPerformanceMode] :: PerformanceMode -> Text
pattern PerformanceMode_GeneralPurpose :: PerformanceMode
pattern PerformanceMode_MaxIO :: PerformanceMode

-- | An EFS resource, for example a file system or a mount target.
newtype Resource
Resource' :: Text -> Resource
[fromResource] :: Resource -> Text
pattern Resource_FILE_SYSTEM :: Resource
pattern Resource_MOUNT_TARGET :: Resource

-- | A preference indicating a choice to use 63bit/32bit IDs for all
--   applicable resources.
newtype ResourceIdType
ResourceIdType' :: Text -> ResourceIdType
[fromResourceIdType] :: ResourceIdType -> Text
pattern ResourceIdType_LONG_ID :: ResourceIdType
pattern ResourceIdType_SHORT_ID :: ResourceIdType
newtype ThroughputMode
ThroughputMode' :: Text -> ThroughputMode
[fromThroughputMode] :: ThroughputMode -> Text
pattern ThroughputMode_Bursting :: ThroughputMode
pattern ThroughputMode_Provisioned :: ThroughputMode
newtype TransitionToIARules
TransitionToIARules' :: Text -> TransitionToIARules
[fromTransitionToIARules] :: TransitionToIARules -> Text
pattern TransitionToIARules_AFTER_14_DAYS :: TransitionToIARules
pattern TransitionToIARules_AFTER_30_DAYS :: TransitionToIARules
pattern TransitionToIARules_AFTER_60_DAYS :: TransitionToIARules
pattern TransitionToIARules_AFTER_7_DAYS :: TransitionToIARules
pattern TransitionToIARules_AFTER_90_DAYS :: TransitionToIARules
newtype TransitionToPrimaryStorageClassRules
TransitionToPrimaryStorageClassRules' :: Text -> TransitionToPrimaryStorageClassRules
[fromTransitionToPrimaryStorageClassRules] :: TransitionToPrimaryStorageClassRules -> Text
pattern TransitionToPrimaryStorageClassRules_AFTER_1_ACCESS :: TransitionToPrimaryStorageClassRules

-- | Provides a description of an EFS file system access point.
--   
--   <i>See:</i> <a>newAccessPointDescription</a> smart constructor.
data AccessPointDescription
AccessPointDescription' :: Maybe PosixUser -> Maybe RootDirectory -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe LifeCycleState -> Maybe [Tag] -> AccessPointDescription

-- | The full POSIX identity, including the user ID, group ID, and
--   secondary group IDs on the access point that is used for all file
--   operations by NFS clients using the access point.
[$sel:posixUser:AccessPointDescription'] :: AccessPointDescription -> Maybe PosixUser

-- | The directory on the Amazon EFS file system that the access point
--   exposes as the root directory to NFS clients using the access point.
[$sel:rootDirectory:AccessPointDescription'] :: AccessPointDescription -> Maybe RootDirectory

-- | The opaque string specified in the request to ensure idempotent
--   creation.
[$sel:clientToken:AccessPointDescription'] :: AccessPointDescription -> Maybe Text

-- | The ID of the access point, assigned by Amazon EFS.
[$sel:accessPointId:AccessPointDescription'] :: AccessPointDescription -> Maybe Text

-- | The ID of the EFS file system that the access point applies to.
[$sel:fileSystemId:AccessPointDescription'] :: AccessPointDescription -> Maybe Text

-- | Identified the Amazon Web Services account that owns the access point
--   resource.
[$sel:ownerId:AccessPointDescription'] :: AccessPointDescription -> Maybe Text

-- | The name of the access point. This is the value of the <tt>Name</tt>
--   tag.
[$sel:name:AccessPointDescription'] :: AccessPointDescription -> Maybe Text

-- | The unique Amazon Resource Name (ARN) associated with the access
--   point.
[$sel:accessPointArn:AccessPointDescription'] :: AccessPointDescription -> Maybe Text

-- | Identifies the lifecycle phase of the access point.
[$sel:lifeCycleState:AccessPointDescription'] :: AccessPointDescription -> Maybe LifeCycleState

-- | The tags associated with the access point, presented as an array of
--   Tag objects.
[$sel:tags:AccessPointDescription'] :: AccessPointDescription -> Maybe [Tag]

-- | Create a value of <a>AccessPointDescription</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:posixUser:AccessPointDescription'</a>,
--   <a>accessPointDescription_posixUser</a> - The full POSIX identity,
--   including the user ID, group ID, and secondary group IDs on the access
--   point that is used for all file operations by NFS clients using the
--   access point.
--   
--   <a>$sel:rootDirectory:AccessPointDescription'</a>,
--   <a>accessPointDescription_rootDirectory</a> - The directory on the
--   Amazon EFS file system that the access point exposes as the root
--   directory to NFS clients using the access point.
--   
--   <a>$sel:clientToken:AccessPointDescription'</a>,
--   <a>accessPointDescription_clientToken</a> - The opaque string
--   specified in the request to ensure idempotent creation.
--   
--   <a>$sel:accessPointId:AccessPointDescription'</a>,
--   <a>accessPointDescription_accessPointId</a> - The ID of the access
--   point, assigned by Amazon EFS.
--   
--   <a>$sel:fileSystemId:AccessPointDescription'</a>,
--   <a>accessPointDescription_fileSystemId</a> - The ID of the EFS file
--   system that the access point applies to.
--   
--   <a>$sel:ownerId:AccessPointDescription'</a>,
--   <a>accessPointDescription_ownerId</a> - Identified the Amazon Web
--   Services account that owns the access point resource.
--   
--   <a>$sel:name:AccessPointDescription'</a>,
--   <a>accessPointDescription_name</a> - The name of the access point.
--   This is the value of the <tt>Name</tt> tag.
--   
--   <a>$sel:accessPointArn:AccessPointDescription'</a>,
--   <a>accessPointDescription_accessPointArn</a> - The unique Amazon
--   Resource Name (ARN) associated with the access point.
--   
--   <a>$sel:lifeCycleState:AccessPointDescription'</a>,
--   <a>accessPointDescription_lifeCycleState</a> - Identifies the
--   lifecycle phase of the access point.
--   
--   <a>$sel:tags:AccessPointDescription'</a>,
--   <a>accessPointDescription_tags</a> - The tags associated with the
--   access point, presented as an array of Tag objects.
newAccessPointDescription :: AccessPointDescription

-- | The full POSIX identity, including the user ID, group ID, and
--   secondary group IDs on the access point that is used for all file
--   operations by NFS clients using the access point.
accessPointDescription_posixUser :: Lens' AccessPointDescription (Maybe PosixUser)

-- | The directory on the Amazon EFS file system that the access point
--   exposes as the root directory to NFS clients using the access point.
accessPointDescription_rootDirectory :: Lens' AccessPointDescription (Maybe RootDirectory)

-- | The opaque string specified in the request to ensure idempotent
--   creation.
accessPointDescription_clientToken :: Lens' AccessPointDescription (Maybe Text)

-- | The ID of the access point, assigned by Amazon EFS.
accessPointDescription_accessPointId :: Lens' AccessPointDescription (Maybe Text)

-- | The ID of the EFS file system that the access point applies to.
accessPointDescription_fileSystemId :: Lens' AccessPointDescription (Maybe Text)

-- | Identified the Amazon Web Services account that owns the access point
--   resource.
accessPointDescription_ownerId :: Lens' AccessPointDescription (Maybe Text)

-- | The name of the access point. This is the value of the <tt>Name</tt>
--   tag.
accessPointDescription_name :: Lens' AccessPointDescription (Maybe Text)

-- | The unique Amazon Resource Name (ARN) associated with the access
--   point.
accessPointDescription_accessPointArn :: Lens' AccessPointDescription (Maybe Text)

-- | Identifies the lifecycle phase of the access point.
accessPointDescription_lifeCycleState :: Lens' AccessPointDescription (Maybe LifeCycleState)

-- | The tags associated with the access point, presented as an array of
--   Tag objects.
accessPointDescription_tags :: Lens' AccessPointDescription (Maybe [Tag])

-- | The backup policy for the file system used to create automatic daily
--   backups. If status has a value of <tt>ENABLED</tt>, the file system is
--   being automatically backed up. For more information, see <a>Automatic
--   backups</a>.
--   
--   <i>See:</i> <a>newBackupPolicy</a> smart constructor.
data BackupPolicy
BackupPolicy' :: BackupStatus -> BackupPolicy

-- | Describes the status of the file system's backup policy.
--   
--   <ul>
--   <li><b><tt>ENABLED</tt></b> - EFS is automatically backing up the file
--   system.</li>
--   <li><b><tt>ENABLING</tt></b> - EFS is turning on automatic backups for
--   the file system.</li>
--   <li><b><tt>DISABLED</tt></b> - automatic back ups are turned off for
--   the file system.</li>
--   <li><b><tt>DISABLING</tt></b> - EFS is turning off automatic backups
--   for the file system.</li>
--   </ul>
[$sel:status:BackupPolicy'] :: BackupPolicy -> BackupStatus

-- | Create a value of <a>BackupPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:BackupPolicy'</a>, <a>backupPolicy_status</a> -
--   Describes the status of the file system's backup policy.
--   
--   <ul>
--   <li><b><tt>ENABLED</tt></b> - EFS is automatically backing up the file
--   system.</li>
--   <li><b><tt>ENABLING</tt></b> - EFS is turning on automatic backups for
--   the file system.</li>
--   <li><b><tt>DISABLED</tt></b> - automatic back ups are turned off for
--   the file system.</li>
--   <li><b><tt>DISABLING</tt></b> - EFS is turning off automatic backups
--   for the file system.</li>
--   </ul>
newBackupPolicy :: BackupStatus -> BackupPolicy

-- | Describes the status of the file system's backup policy.
--   
--   <ul>
--   <li><b><tt>ENABLED</tt></b> - EFS is automatically backing up the file
--   system.</li>
--   <li><b><tt>ENABLING</tt></b> - EFS is turning on automatic backups for
--   the file system.</li>
--   <li><b><tt>DISABLED</tt></b> - automatic back ups are turned off for
--   the file system.</li>
--   <li><b><tt>DISABLING</tt></b> - EFS is turning off automatic backups
--   for the file system.</li>
--   </ul>
backupPolicy_status :: Lens' BackupPolicy BackupStatus

-- | <i>See:</i> <a>newBackupPolicyDescription</a> smart constructor.
data BackupPolicyDescription
BackupPolicyDescription' :: Maybe BackupPolicy -> BackupPolicyDescription

-- | Describes the file system's backup policy, indicating whether
--   automatic backups are turned on or off..
[$sel:backupPolicy:BackupPolicyDescription'] :: BackupPolicyDescription -> Maybe BackupPolicy

-- | Create a value of <a>BackupPolicyDescription</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:backupPolicy:BackupPolicyDescription'</a>,
--   <a>backupPolicyDescription_backupPolicy</a> - Describes the file
--   system's backup policy, indicating whether automatic backups are
--   turned on or off..
newBackupPolicyDescription :: BackupPolicyDescription

-- | Describes the file system's backup policy, indicating whether
--   automatic backups are turned on or off..
backupPolicyDescription_backupPolicy :: Lens' BackupPolicyDescription (Maybe BackupPolicy)

-- | Required if the <tt>RootDirectory</tt> &gt; <tt>Path</tt> specified
--   does not exist. Specifies the POSIX IDs and permissions to apply to
--   the access point's <tt>RootDirectory</tt> &gt; <tt>Path</tt>. If the
--   access point root directory does not exist, EFS creates it with these
--   settings when a client connects to the access point. When specifying
--   <tt>CreationInfo</tt>, you must include values for all properties.
--   
--   Amazon EFS creates a root directory only if you have provided the
--   CreationInfo: OwnUid, OwnGID, and permissions for the directory. If
--   you do not provide this information, Amazon EFS does not create the
--   root directory. If the root directory does not exist, attempts to
--   mount using the access point will fail.
--   
--   If you do not provide <tt>CreationInfo</tt> and the specified
--   <tt>RootDirectory</tt> does not exist, attempts to mount the file
--   system using the access point will fail.
--   
--   <i>See:</i> <a>newCreationInfo</a> smart constructor.
data CreationInfo
CreationInfo' :: Natural -> Natural -> Text -> CreationInfo

-- | Specifies the POSIX user ID to apply to the <tt>RootDirectory</tt>.
--   Accepts values from 0 to 2^32 (4294967295).
[$sel:ownerUid:CreationInfo'] :: CreationInfo -> Natural

-- | Specifies the POSIX group ID to apply to the <tt>RootDirectory</tt>.
--   Accepts values from 0 to 2^32 (4294967295).
[$sel:ownerGid:CreationInfo'] :: CreationInfo -> Natural

-- | Specifies the POSIX permissions to apply to the
--   <tt>RootDirectory</tt>, in the format of an octal number representing
--   the file's mode bits.
[$sel:permissions:CreationInfo'] :: CreationInfo -> Text

-- | Create a value of <a>CreationInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ownerUid:CreationInfo'</a>, <a>creationInfo_ownerUid</a> -
--   Specifies the POSIX user ID to apply to the <tt>RootDirectory</tt>.
--   Accepts values from 0 to 2^32 (4294967295).
--   
--   <a>$sel:ownerGid:CreationInfo'</a>, <a>creationInfo_ownerGid</a> -
--   Specifies the POSIX group ID to apply to the <tt>RootDirectory</tt>.
--   Accepts values from 0 to 2^32 (4294967295).
--   
--   <a>$sel:permissions:CreationInfo'</a>, <a>creationInfo_permissions</a>
--   - Specifies the POSIX permissions to apply to the
--   <tt>RootDirectory</tt>, in the format of an octal number representing
--   the file's mode bits.
newCreationInfo :: Natural -> Natural -> Text -> CreationInfo

-- | Specifies the POSIX user ID to apply to the <tt>RootDirectory</tt>.
--   Accepts values from 0 to 2^32 (4294967295).
creationInfo_ownerUid :: Lens' CreationInfo Natural

-- | Specifies the POSIX group ID to apply to the <tt>RootDirectory</tt>.
--   Accepts values from 0 to 2^32 (4294967295).
creationInfo_ownerGid :: Lens' CreationInfo Natural

-- | Specifies the POSIX permissions to apply to the
--   <tt>RootDirectory</tt>, in the format of an octal number representing
--   the file's mode bits.
creationInfo_permissions :: Lens' CreationInfo Text

-- | A description of the file system.
--   
--   <i>See:</i> <a>newFileSystemDescription</a> smart constructor.
data FileSystemDescription
FileSystemDescription' :: Maybe Text -> Maybe Double -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe ThroughputMode -> Maybe Text -> Maybe Text -> Text -> Text -> Text -> POSIX -> LifeCycleState -> Natural -> FileSystemSize -> PerformanceMode -> [Tag] -> FileSystemDescription

-- | The unique and consistent identifier of the Availability Zone in which
--   the file system's One Zone storage classes exist. For example,
--   <tt>use1-az1</tt> is an Availability Zone ID for the us-east-1 Amazon
--   Web Services Region, and it has the same location in every Amazon Web
--   Services account.
[$sel:availabilityZoneId:FileSystemDescription'] :: FileSystemDescription -> Maybe Text

-- | The amount of provisioned throughput, measured in MiB/s, for the file
--   system. Valid for file systems using <tt>ThroughputMode</tt> set to
--   <tt>provisioned</tt>.
[$sel:provisionedThroughputInMibps:FileSystemDescription'] :: FileSystemDescription -> Maybe Double

-- | Describes the Amazon Web Services Availability Zone in which the file
--   system is located, and is valid only for file systems using One Zone
--   storage classes. For more information, see <a>Using EFS storage
--   classes</a> in the <i>Amazon EFS User Guide</i>.
[$sel:availabilityZoneName:FileSystemDescription'] :: FileSystemDescription -> Maybe Text

-- | The Amazon Resource Name (ARN) for the EFS file system, in the format
--   <tt>arn:aws:elasticfilesystem:region:account-id:file-system/file-system-id
--   </tt>. Example with sample data:
--   <tt>arn:aws:elasticfilesystem:us-west-2:1111333322228888:file-system/fs-01234567</tt>
[$sel:fileSystemArn:FileSystemDescription'] :: FileSystemDescription -> Maybe Text

-- | A Boolean value that, if true, indicates that the file system is
--   encrypted.
[$sel:encrypted:FileSystemDescription'] :: FileSystemDescription -> Maybe Bool

-- | Displays the file system's throughput mode. For more information, see
--   <a>Throughput modes</a> in the <i>Amazon EFS User Guide</i>.
[$sel:throughputMode:FileSystemDescription'] :: FileSystemDescription -> Maybe ThroughputMode

-- | The ID of an Key Management Service customer master key (CMK) that was
--   used to protect the encrypted file system.
[$sel:kmsKeyId:FileSystemDescription'] :: FileSystemDescription -> Maybe Text

-- | You can add tags to a file system, including a <tt>Name</tt> tag. For
--   more information, see CreateFileSystem. If the file system has a
--   <tt>Name</tt> tag, Amazon EFS returns the value in this field.
[$sel:name:FileSystemDescription'] :: FileSystemDescription -> Maybe Text

-- | The Amazon Web Services account that created the file system. If the
--   file system was created by an IAM user, the parent account to which
--   the user belongs is the owner.
[$sel:ownerId:FileSystemDescription'] :: FileSystemDescription -> Text

-- | The opaque string specified in the request.
[$sel:creationToken:FileSystemDescription'] :: FileSystemDescription -> Text

-- | The ID of the file system, assigned by Amazon EFS.
[$sel:fileSystemId:FileSystemDescription'] :: FileSystemDescription -> Text

-- | The time that the file system was created, in seconds (since
--   1970-01-01T00:00:00Z).
[$sel:creationTime:FileSystemDescription'] :: FileSystemDescription -> POSIX

-- | The lifecycle phase of the file system.
[$sel:lifeCycleState:FileSystemDescription'] :: FileSystemDescription -> LifeCycleState

-- | The current number of mount targets that the file system has. For more
--   information, see CreateMountTarget.
[$sel:numberOfMountTargets:FileSystemDescription'] :: FileSystemDescription -> Natural

-- | The latest known metered size (in bytes) of data stored in the file
--   system, in its <tt>Value</tt> field, and the time at which that size
--   was determined in its <tt>Timestamp</tt> field. The <tt>Timestamp</tt>
--   value is the integer number of seconds since 1970-01-01T00:00:00Z. The
--   <tt>SizeInBytes</tt> value doesn't represent the size of a consistent
--   snapshot of the file system, but it is eventually consistent when
--   there are no writes to the file system. That is, <tt>SizeInBytes</tt>
--   represents actual size only if the file system is not modified for a
--   period longer than a couple of hours. Otherwise, the value is not the
--   exact size that the file system was at any point in time.
[$sel:sizeInBytes:FileSystemDescription'] :: FileSystemDescription -> FileSystemSize

-- | The performance mode of the file system.
[$sel:performanceMode:FileSystemDescription'] :: FileSystemDescription -> PerformanceMode

-- | The tags associated with the file system, presented as an array of
--   <tt>Tag</tt> objects.
[$sel:tags:FileSystemDescription'] :: FileSystemDescription -> [Tag]

-- | Create a value of <a>FileSystemDescription</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:availabilityZoneId:FileSystemDescription'</a>,
--   <a>fileSystemDescription_availabilityZoneId</a> - The unique and
--   consistent identifier of the Availability Zone in which the file
--   system's One Zone storage classes exist. For example,
--   <tt>use1-az1</tt> is an Availability Zone ID for the us-east-1 Amazon
--   Web Services Region, and it has the same location in every Amazon Web
--   Services account.
--   
--   <a>$sel:provisionedThroughputInMibps:FileSystemDescription'</a>,
--   <a>fileSystemDescription_provisionedThroughputInMibps</a> - The amount
--   of provisioned throughput, measured in MiB/s, for the file system.
--   Valid for file systems using <tt>ThroughputMode</tt> set to
--   <tt>provisioned</tt>.
--   
--   <a>$sel:availabilityZoneName:FileSystemDescription'</a>,
--   <a>fileSystemDescription_availabilityZoneName</a> - Describes the
--   Amazon Web Services Availability Zone in which the file system is
--   located, and is valid only for file systems using One Zone storage
--   classes. For more information, see <a>Using EFS storage classes</a> in
--   the <i>Amazon EFS User Guide</i>.
--   
--   <a>$sel:fileSystemArn:FileSystemDescription'</a>,
--   <a>fileSystemDescription_fileSystemArn</a> - The Amazon Resource Name
--   (ARN) for the EFS file system, in the format
--   <tt>arn:aws:elasticfilesystem:region:account-id:file-system/file-system-id
--   </tt>. Example with sample data:
--   <tt>arn:aws:elasticfilesystem:us-west-2:1111333322228888:file-system/fs-01234567</tt>
--   
--   <a>$sel:encrypted:FileSystemDescription'</a>,
--   <a>fileSystemDescription_encrypted</a> - A Boolean value that, if
--   true, indicates that the file system is encrypted.
--   
--   <a>$sel:throughputMode:FileSystemDescription'</a>,
--   <a>fileSystemDescription_throughputMode</a> - Displays the file
--   system's throughput mode. For more information, see <a>Throughput
--   modes</a> in the <i>Amazon EFS User Guide</i>.
--   
--   <a>$sel:kmsKeyId:FileSystemDescription'</a>,
--   <a>fileSystemDescription_kmsKeyId</a> - The ID of an Key Management
--   Service customer master key (CMK) that was used to protect the
--   encrypted file system.
--   
--   <a>$sel:name:FileSystemDescription'</a>,
--   <a>fileSystemDescription_name</a> - You can add tags to a file system,
--   including a <tt>Name</tt> tag. For more information, see
--   CreateFileSystem. If the file system has a <tt>Name</tt> tag, Amazon
--   EFS returns the value in this field.
--   
--   <a>$sel:ownerId:FileSystemDescription'</a>,
--   <a>fileSystemDescription_ownerId</a> - The Amazon Web Services account
--   that created the file system. If the file system was created by an IAM
--   user, the parent account to which the user belongs is the owner.
--   
--   <a>$sel:creationToken:FileSystemDescription'</a>,
--   <a>fileSystemDescription_creationToken</a> - The opaque string
--   specified in the request.
--   
--   <a>$sel:fileSystemId:FileSystemDescription'</a>,
--   <a>fileSystemDescription_fileSystemId</a> - The ID of the file system,
--   assigned by Amazon EFS.
--   
--   <a>$sel:creationTime:FileSystemDescription'</a>,
--   <a>fileSystemDescription_creationTime</a> - The time that the file
--   system was created, in seconds (since 1970-01-01T00:00:00Z).
--   
--   <a>$sel:lifeCycleState:FileSystemDescription'</a>,
--   <a>fileSystemDescription_lifeCycleState</a> - The lifecycle phase of
--   the file system.
--   
--   <a>$sel:numberOfMountTargets:FileSystemDescription'</a>,
--   <a>fileSystemDescription_numberOfMountTargets</a> - The current number
--   of mount targets that the file system has. For more information, see
--   CreateMountTarget.
--   
--   <a>$sel:sizeInBytes:FileSystemDescription'</a>,
--   <a>fileSystemDescription_sizeInBytes</a> - The latest known metered
--   size (in bytes) of data stored in the file system, in its
--   <tt>Value</tt> field, and the time at which that size was determined
--   in its <tt>Timestamp</tt> field. The <tt>Timestamp</tt> value is the
--   integer number of seconds since 1970-01-01T00:00:00Z. The
--   <tt>SizeInBytes</tt> value doesn't represent the size of a consistent
--   snapshot of the file system, but it is eventually consistent when
--   there are no writes to the file system. That is, <tt>SizeInBytes</tt>
--   represents actual size only if the file system is not modified for a
--   period longer than a couple of hours. Otherwise, the value is not the
--   exact size that the file system was at any point in time.
--   
--   <a>$sel:performanceMode:FileSystemDescription'</a>,
--   <a>fileSystemDescription_performanceMode</a> - The performance mode of
--   the file system.
--   
--   <a>$sel:tags:FileSystemDescription'</a>,
--   <a>fileSystemDescription_tags</a> - The tags associated with the file
--   system, presented as an array of <tt>Tag</tt> objects.
newFileSystemDescription :: Text -> Text -> Text -> UTCTime -> LifeCycleState -> Natural -> FileSystemSize -> PerformanceMode -> FileSystemDescription

-- | The unique and consistent identifier of the Availability Zone in which
--   the file system's One Zone storage classes exist. For example,
--   <tt>use1-az1</tt> is an Availability Zone ID for the us-east-1 Amazon
--   Web Services Region, and it has the same location in every Amazon Web
--   Services account.
fileSystemDescription_availabilityZoneId :: Lens' FileSystemDescription (Maybe Text)

-- | The amount of provisioned throughput, measured in MiB/s, for the file
--   system. Valid for file systems using <tt>ThroughputMode</tt> set to
--   <tt>provisioned</tt>.
fileSystemDescription_provisionedThroughputInMibps :: Lens' FileSystemDescription (Maybe Double)

-- | Describes the Amazon Web Services Availability Zone in which the file
--   system is located, and is valid only for file systems using One Zone
--   storage classes. For more information, see <a>Using EFS storage
--   classes</a> in the <i>Amazon EFS User Guide</i>.
fileSystemDescription_availabilityZoneName :: Lens' FileSystemDescription (Maybe Text)

-- | The Amazon Resource Name (ARN) for the EFS file system, in the format
--   <tt>arn:aws:elasticfilesystem:region:account-id:file-system/file-system-id
--   </tt>. Example with sample data:
--   <tt>arn:aws:elasticfilesystem:us-west-2:1111333322228888:file-system/fs-01234567</tt>
fileSystemDescription_fileSystemArn :: Lens' FileSystemDescription (Maybe Text)

-- | A Boolean value that, if true, indicates that the file system is
--   encrypted.
fileSystemDescription_encrypted :: Lens' FileSystemDescription (Maybe Bool)

-- | Displays the file system's throughput mode. For more information, see
--   <a>Throughput modes</a> in the <i>Amazon EFS User Guide</i>.
fileSystemDescription_throughputMode :: Lens' FileSystemDescription (Maybe ThroughputMode)

-- | The ID of an Key Management Service customer master key (CMK) that was
--   used to protect the encrypted file system.
fileSystemDescription_kmsKeyId :: Lens' FileSystemDescription (Maybe Text)

-- | You can add tags to a file system, including a <tt>Name</tt> tag. For
--   more information, see CreateFileSystem. If the file system has a
--   <tt>Name</tt> tag, Amazon EFS returns the value in this field.
fileSystemDescription_name :: Lens' FileSystemDescription (Maybe Text)

-- | The Amazon Web Services account that created the file system. If the
--   file system was created by an IAM user, the parent account to which
--   the user belongs is the owner.
fileSystemDescription_ownerId :: Lens' FileSystemDescription Text

-- | The opaque string specified in the request.
fileSystemDescription_creationToken :: Lens' FileSystemDescription Text

-- | The ID of the file system, assigned by Amazon EFS.
fileSystemDescription_fileSystemId :: Lens' FileSystemDescription Text

-- | The time that the file system was created, in seconds (since
--   1970-01-01T00:00:00Z).
fileSystemDescription_creationTime :: Lens' FileSystemDescription UTCTime

-- | The lifecycle phase of the file system.
fileSystemDescription_lifeCycleState :: Lens' FileSystemDescription LifeCycleState

-- | The current number of mount targets that the file system has. For more
--   information, see CreateMountTarget.
fileSystemDescription_numberOfMountTargets :: Lens' FileSystemDescription Natural

-- | The latest known metered size (in bytes) of data stored in the file
--   system, in its <tt>Value</tt> field, and the time at which that size
--   was determined in its <tt>Timestamp</tt> field. The <tt>Timestamp</tt>
--   value is the integer number of seconds since 1970-01-01T00:00:00Z. The
--   <tt>SizeInBytes</tt> value doesn't represent the size of a consistent
--   snapshot of the file system, but it is eventually consistent when
--   there are no writes to the file system. That is, <tt>SizeInBytes</tt>
--   represents actual size only if the file system is not modified for a
--   period longer than a couple of hours. Otherwise, the value is not the
--   exact size that the file system was at any point in time.
fileSystemDescription_sizeInBytes :: Lens' FileSystemDescription FileSystemSize

-- | The performance mode of the file system.
fileSystemDescription_performanceMode :: Lens' FileSystemDescription PerformanceMode

-- | The tags associated with the file system, presented as an array of
--   <tt>Tag</tt> objects.
fileSystemDescription_tags :: Lens' FileSystemDescription [Tag]

-- | <i>See:</i> <a>newFileSystemPolicyDescription</a> smart constructor.
data FileSystemPolicyDescription
FileSystemPolicyDescription' :: Maybe Text -> Maybe Text -> FileSystemPolicyDescription

-- | Specifies the EFS file system to which the <tt>FileSystemPolicy</tt>
--   applies.
[$sel:fileSystemId:FileSystemPolicyDescription'] :: FileSystemPolicyDescription -> Maybe Text

-- | The JSON formatted <tt>FileSystemPolicy</tt> for the EFS file system.
[$sel:policy:FileSystemPolicyDescription'] :: FileSystemPolicyDescription -> Maybe Text

-- | Create a value of <a>FileSystemPolicyDescription</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fileSystemId:FileSystemPolicyDescription'</a>,
--   <a>fileSystemPolicyDescription_fileSystemId</a> - Specifies the EFS
--   file system to which the <tt>FileSystemPolicy</tt> applies.
--   
--   <a>$sel:policy:FileSystemPolicyDescription'</a>,
--   <a>fileSystemPolicyDescription_policy</a> - The JSON formatted
--   <tt>FileSystemPolicy</tt> for the EFS file system.
newFileSystemPolicyDescription :: FileSystemPolicyDescription

-- | Specifies the EFS file system to which the <tt>FileSystemPolicy</tt>
--   applies.
fileSystemPolicyDescription_fileSystemId :: Lens' FileSystemPolicyDescription (Maybe Text)

-- | The JSON formatted <tt>FileSystemPolicy</tt> for the EFS file system.
fileSystemPolicyDescription_policy :: Lens' FileSystemPolicyDescription (Maybe Text)

-- | The latest known metered size (in bytes) of data stored in the file
--   system, in its <tt>Value</tt> field, and the time at which that size
--   was determined in its <tt>Timestamp</tt> field. The value doesn't
--   represent the size of a consistent snapshot of the file system, but it
--   is eventually consistent when there are no writes to the file system.
--   That is, the value represents the actual size only if the file system
--   is not modified for a period longer than a couple of hours. Otherwise,
--   the value is not necessarily the exact size the file system was at any
--   instant in time.
--   
--   <i>See:</i> <a>newFileSystemSize</a> smart constructor.
data FileSystemSize
FileSystemSize' :: Maybe Natural -> Maybe Natural -> Maybe POSIX -> Natural -> FileSystemSize

-- | The latest known metered size (in bytes) of data stored in the
--   Infrequent Access storage class.
[$sel:valueInIA:FileSystemSize'] :: FileSystemSize -> Maybe Natural

-- | The latest known metered size (in bytes) of data stored in the
--   Standard storage class.
[$sel:valueInStandard:FileSystemSize'] :: FileSystemSize -> Maybe Natural

-- | The time at which the size of data, returned in the <tt>Value</tt>
--   field, was determined. The value is the integer number of seconds
--   since 1970-01-01T00:00:00Z.
[$sel:timestamp:FileSystemSize'] :: FileSystemSize -> Maybe POSIX

-- | The latest known metered size (in bytes) of data stored in the file
--   system.
[$sel:value:FileSystemSize'] :: FileSystemSize -> Natural

-- | Create a value of <a>FileSystemSize</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:valueInIA:FileSystemSize'</a>, <a>fileSystemSize_valueInIA</a>
--   - The latest known metered size (in bytes) of data stored in the
--   Infrequent Access storage class.
--   
--   <a>$sel:valueInStandard:FileSystemSize'</a>,
--   <a>fileSystemSize_valueInStandard</a> - The latest known metered size
--   (in bytes) of data stored in the Standard storage class.
--   
--   <a>$sel:timestamp:FileSystemSize'</a>, <a>fileSystemSize_timestamp</a>
--   - The time at which the size of data, returned in the <tt>Value</tt>
--   field, was determined. The value is the integer number of seconds
--   since 1970-01-01T00:00:00Z.
--   
--   <a>$sel:value:FileSystemSize'</a>, <a>fileSystemSize_value</a> - The
--   latest known metered size (in bytes) of data stored in the file
--   system.
newFileSystemSize :: Natural -> FileSystemSize

-- | The latest known metered size (in bytes) of data stored in the
--   Infrequent Access storage class.
fileSystemSize_valueInIA :: Lens' FileSystemSize (Maybe Natural)

-- | The latest known metered size (in bytes) of data stored in the
--   Standard storage class.
fileSystemSize_valueInStandard :: Lens' FileSystemSize (Maybe Natural)

-- | The time at which the size of data, returned in the <tt>Value</tt>
--   field, was determined. The value is the integer number of seconds
--   since 1970-01-01T00:00:00Z.
fileSystemSize_timestamp :: Lens' FileSystemSize (Maybe UTCTime)

-- | The latest known metered size (in bytes) of data stored in the file
--   system.
fileSystemSize_value :: Lens' FileSystemSize Natural

-- | <i>See:</i> <a>newLifecycleConfigurationDescription</a> smart
--   constructor.
data LifecycleConfigurationDescription
LifecycleConfigurationDescription' :: Maybe [LifecyclePolicy] -> LifecycleConfigurationDescription

-- | An array of lifecycle management policies. EFS supports a maximum of
--   one policy per file system.
[$sel:lifecyclePolicies:LifecycleConfigurationDescription'] :: LifecycleConfigurationDescription -> Maybe [LifecyclePolicy]

-- | Create a value of <a>LifecycleConfigurationDescription</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lifecyclePolicies:LifecycleConfigurationDescription'</a>,
--   <a>lifecycleConfigurationDescription_lifecyclePolicies</a> - An array
--   of lifecycle management policies. EFS supports a maximum of one policy
--   per file system.
newLifecycleConfigurationDescription :: LifecycleConfigurationDescription

-- | An array of lifecycle management policies. EFS supports a maximum of
--   one policy per file system.
lifecycleConfigurationDescription_lifecyclePolicies :: Lens' LifecycleConfigurationDescription (Maybe [LifecyclePolicy])

-- | Describes a policy used by EFS lifecycle management and EFS
--   intelligent tiering that specifies when to transition files into and
--   out of the file system's Infrequent Access (IA) storage class. For
--   more information, see <a>EFS Intelligent‐Tiering and EFS Lifecycle
--   Management</a>.
--   
--   When using the <tt>put-lifecycle-configuration</tt> CLI command or the
--   <tt>PutLifecycleConfiguration</tt> API action, Amazon EFS requires
--   that each <tt>LifecyclePolicy</tt> object have only a single
--   transition. This means that in a request body,
--   <tt>LifecyclePolicies</tt> needs to be structured as an array of
--   <tt>LifecyclePolicy</tt> objects, one object for each transition,
--   <tt>TransitionToIA</tt>, <tt>TransitionToPrimaryStorageClass</tt>. For
--   more information, see the request examples in
--   PutLifecycleConfiguration.
--   
--   <i>See:</i> <a>newLifecyclePolicy</a> smart constructor.
data LifecyclePolicy
LifecyclePolicy' :: Maybe TransitionToIARules -> Maybe TransitionToPrimaryStorageClassRules -> LifecyclePolicy

-- | Describes the period of time that a file is not accessed, after which
--   it transitions to IA storage. Metadata operations such as listing the
--   contents of a directory don't count as file access events.
[$sel:transitionToIA:LifecyclePolicy'] :: LifecyclePolicy -> Maybe TransitionToIARules

-- | Describes when to transition a file from IA storage to primary
--   storage. Metadata operations such as listing the contents of a
--   directory don't count as file access events.
[$sel:transitionToPrimaryStorageClass:LifecyclePolicy'] :: LifecyclePolicy -> Maybe TransitionToPrimaryStorageClassRules

-- | Create a value of <a>LifecyclePolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:transitionToIA:LifecyclePolicy'</a>,
--   <a>lifecyclePolicy_transitionToIA</a> - Describes the period of time
--   that a file is not accessed, after which it transitions to IA storage.
--   Metadata operations such as listing the contents of a directory don't
--   count as file access events.
--   
--   <a>$sel:transitionToPrimaryStorageClass:LifecyclePolicy'</a>,
--   <a>lifecyclePolicy_transitionToPrimaryStorageClass</a> - Describes
--   when to transition a file from IA storage to primary storage. Metadata
--   operations such as listing the contents of a directory don't count as
--   file access events.
newLifecyclePolicy :: LifecyclePolicy

-- | Describes the period of time that a file is not accessed, after which
--   it transitions to IA storage. Metadata operations such as listing the
--   contents of a directory don't count as file access events.
lifecyclePolicy_transitionToIA :: Lens' LifecyclePolicy (Maybe TransitionToIARules)

-- | Describes when to transition a file from IA storage to primary
--   storage. Metadata operations such as listing the contents of a
--   directory don't count as file access events.
lifecyclePolicy_transitionToPrimaryStorageClass :: Lens' LifecyclePolicy (Maybe TransitionToPrimaryStorageClassRules)

-- | Provides a description of a mount target.
--   
--   <i>See:</i> <a>newMountTargetDescription</a> smart constructor.
data MountTargetDescription
MountTargetDescription' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Text -> Text -> Text -> LifeCycleState -> MountTargetDescription

-- | Address at which the file system can be mounted by using the mount
--   target.
[$sel:ipAddress:MountTargetDescription'] :: MountTargetDescription -> Maybe Text

-- | The unique and consistent identifier of the Availability Zone that the
--   mount target resides in. For example, <tt>use1-az1</tt> is an AZ ID
--   for the us-east-1 Region and it has the same location in every Amazon
--   Web Services account.
[$sel:availabilityZoneId:MountTargetDescription'] :: MountTargetDescription -> Maybe Text

-- | The virtual private cloud (VPC) ID that the mount target is configured
--   in.
[$sel:vpcId:MountTargetDescription'] :: MountTargetDescription -> Maybe Text

-- | The name of the Availability Zone in which the mount target is
--   located. Availability Zones are independently mapped to names for each
--   Amazon Web Services account. For example, the Availability Zone
--   <tt>us-east-1a</tt> for your Amazon Web Services account might not be
--   the same location as <tt>us-east-1a</tt> for another Amazon Web
--   Services account.
[$sel:availabilityZoneName:MountTargetDescription'] :: MountTargetDescription -> Maybe Text

-- | The ID of the network interface that Amazon EFS created when it
--   created the mount target.
[$sel:networkInterfaceId:MountTargetDescription'] :: MountTargetDescription -> Maybe Text

-- | Amazon Web Services account ID that owns the resource.
[$sel:ownerId:MountTargetDescription'] :: MountTargetDescription -> Maybe Text

-- | System-assigned mount target ID.
[$sel:mountTargetId:MountTargetDescription'] :: MountTargetDescription -> Text

-- | The ID of the file system for which the mount target is intended.
[$sel:fileSystemId:MountTargetDescription'] :: MountTargetDescription -> Text

-- | The ID of the mount target's subnet.
[$sel:subnetId:MountTargetDescription'] :: MountTargetDescription -> Text

-- | Lifecycle state of the mount target.
[$sel:lifeCycleState:MountTargetDescription'] :: MountTargetDescription -> LifeCycleState

-- | Create a value of <a>MountTargetDescription</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ipAddress:MountTargetDescription'</a>,
--   <a>mountTargetDescription_ipAddress</a> - Address at which the file
--   system can be mounted by using the mount target.
--   
--   <a>$sel:availabilityZoneId:MountTargetDescription'</a>,
--   <a>mountTargetDescription_availabilityZoneId</a> - The unique and
--   consistent identifier of the Availability Zone that the mount target
--   resides in. For example, <tt>use1-az1</tt> is an AZ ID for the
--   us-east-1 Region and it has the same location in every Amazon Web
--   Services account.
--   
--   <a>$sel:vpcId:MountTargetDescription'</a>,
--   <a>mountTargetDescription_vpcId</a> - The virtual private cloud (VPC)
--   ID that the mount target is configured in.
--   
--   <a>$sel:availabilityZoneName:MountTargetDescription'</a>,
--   <a>mountTargetDescription_availabilityZoneName</a> - The name of the
--   Availability Zone in which the mount target is located. Availability
--   Zones are independently mapped to names for each Amazon Web Services
--   account. For example, the Availability Zone <tt>us-east-1a</tt> for
--   your Amazon Web Services account might not be the same location as
--   <tt>us-east-1a</tt> for another Amazon Web Services account.
--   
--   <a>$sel:networkInterfaceId:MountTargetDescription'</a>,
--   <a>mountTargetDescription_networkInterfaceId</a> - The ID of the
--   network interface that Amazon EFS created when it created the mount
--   target.
--   
--   <a>$sel:ownerId:MountTargetDescription'</a>,
--   <a>mountTargetDescription_ownerId</a> - Amazon Web Services account ID
--   that owns the resource.
--   
--   <a>$sel:mountTargetId:MountTargetDescription'</a>,
--   <a>mountTargetDescription_mountTargetId</a> - System-assigned mount
--   target ID.
--   
--   <a>$sel:fileSystemId:MountTargetDescription'</a>,
--   <a>mountTargetDescription_fileSystemId</a> - The ID of the file system
--   for which the mount target is intended.
--   
--   <a>$sel:subnetId:MountTargetDescription'</a>,
--   <a>mountTargetDescription_subnetId</a> - The ID of the mount target's
--   subnet.
--   
--   <a>$sel:lifeCycleState:MountTargetDescription'</a>,
--   <a>mountTargetDescription_lifeCycleState</a> - Lifecycle state of the
--   mount target.
newMountTargetDescription :: Text -> Text -> Text -> LifeCycleState -> MountTargetDescription

-- | Address at which the file system can be mounted by using the mount
--   target.
mountTargetDescription_ipAddress :: Lens' MountTargetDescription (Maybe Text)

-- | The unique and consistent identifier of the Availability Zone that the
--   mount target resides in. For example, <tt>use1-az1</tt> is an AZ ID
--   for the us-east-1 Region and it has the same location in every Amazon
--   Web Services account.
mountTargetDescription_availabilityZoneId :: Lens' MountTargetDescription (Maybe Text)

-- | The virtual private cloud (VPC) ID that the mount target is configured
--   in.
mountTargetDescription_vpcId :: Lens' MountTargetDescription (Maybe Text)

-- | The name of the Availability Zone in which the mount target is
--   located. Availability Zones are independently mapped to names for each
--   Amazon Web Services account. For example, the Availability Zone
--   <tt>us-east-1a</tt> for your Amazon Web Services account might not be
--   the same location as <tt>us-east-1a</tt> for another Amazon Web
--   Services account.
mountTargetDescription_availabilityZoneName :: Lens' MountTargetDescription (Maybe Text)

-- | The ID of the network interface that Amazon EFS created when it
--   created the mount target.
mountTargetDescription_networkInterfaceId :: Lens' MountTargetDescription (Maybe Text)

-- | Amazon Web Services account ID that owns the resource.
mountTargetDescription_ownerId :: Lens' MountTargetDescription (Maybe Text)

-- | System-assigned mount target ID.
mountTargetDescription_mountTargetId :: Lens' MountTargetDescription Text

-- | The ID of the file system for which the mount target is intended.
mountTargetDescription_fileSystemId :: Lens' MountTargetDescription Text

-- | The ID of the mount target's subnet.
mountTargetDescription_subnetId :: Lens' MountTargetDescription Text

-- | Lifecycle state of the mount target.
mountTargetDescription_lifeCycleState :: Lens' MountTargetDescription LifeCycleState

-- | The full POSIX identity, including the user ID, group ID, and any
--   secondary group IDs, on the access point that is used for all file
--   system operations performed by NFS clients using the access point.
--   
--   <i>See:</i> <a>newPosixUser</a> smart constructor.
data PosixUser
PosixUser' :: Maybe [Natural] -> Natural -> Natural -> PosixUser

-- | Secondary POSIX group IDs used for all file system operations using
--   this access point.
[$sel:secondaryGids:PosixUser'] :: PosixUser -> Maybe [Natural]

-- | The POSIX user ID used for all file system operations using this
--   access point.
[$sel:uid:PosixUser'] :: PosixUser -> Natural

-- | The POSIX group ID used for all file system operations using this
--   access point.
[$sel:gid:PosixUser'] :: PosixUser -> Natural

-- | Create a value of <a>PosixUser</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:secondaryGids:PosixUser'</a>, <a>posixUser_secondaryGids</a> -
--   Secondary POSIX group IDs used for all file system operations using
--   this access point.
--   
--   <a>$sel:uid:PosixUser'</a>, <a>posixUser_uid</a> - The POSIX user ID
--   used for all file system operations using this access point.
--   
--   <a>$sel:gid:PosixUser'</a>, <a>posixUser_gid</a> - The POSIX group ID
--   used for all file system operations using this access point.
newPosixUser :: Natural -> Natural -> PosixUser

-- | Secondary POSIX group IDs used for all file system operations using
--   this access point.
posixUser_secondaryGids :: Lens' PosixUser (Maybe [Natural])

-- | The POSIX user ID used for all file system operations using this
--   access point.
posixUser_uid :: Lens' PosixUser Natural

-- | The POSIX group ID used for all file system operations using this
--   access point.
posixUser_gid :: Lens' PosixUser Natural

-- | Describes the resource type and its ID preference for the user's
--   Amazon Web Services account, in the current Amazon Web Services
--   Region.
--   
--   <i>See:</i> <a>newResourceIdPreference</a> smart constructor.
data ResourceIdPreference
ResourceIdPreference' :: Maybe [Resource] -> Maybe ResourceIdType -> ResourceIdPreference

-- | Identifies the Amazon EFS resources to which the ID preference setting
--   applies, <tt>FILE_SYSTEM</tt> and <tt>MOUNT_TARGET</tt>.
[$sel:resources:ResourceIdPreference'] :: ResourceIdPreference -> Maybe [Resource]

-- | Identifies the EFS resource ID preference, either <tt>LONG_ID</tt> (17
--   characters) or <tt>SHORT_ID</tt> (8 characters).
[$sel:resourceIdType:ResourceIdPreference'] :: ResourceIdPreference -> Maybe ResourceIdType

-- | Create a value of <a>ResourceIdPreference</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resources:ResourceIdPreference'</a>,
--   <a>resourceIdPreference_resources</a> - Identifies the Amazon EFS
--   resources to which the ID preference setting applies,
--   <tt>FILE_SYSTEM</tt> and <tt>MOUNT_TARGET</tt>.
--   
--   <a>$sel:resourceIdType:ResourceIdPreference'</a>,
--   <a>resourceIdPreference_resourceIdType</a> - Identifies the EFS
--   resource ID preference, either <tt>LONG_ID</tt> (17 characters) or
--   <tt>SHORT_ID</tt> (8 characters).
newResourceIdPreference :: ResourceIdPreference

-- | Identifies the Amazon EFS resources to which the ID preference setting
--   applies, <tt>FILE_SYSTEM</tt> and <tt>MOUNT_TARGET</tt>.
resourceIdPreference_resources :: Lens' ResourceIdPreference (Maybe [Resource])

-- | Identifies the EFS resource ID preference, either <tt>LONG_ID</tt> (17
--   characters) or <tt>SHORT_ID</tt> (8 characters).
resourceIdPreference_resourceIdType :: Lens' ResourceIdPreference (Maybe ResourceIdType)

-- | Specifies the directory on the Amazon EFS file system that the access
--   point provides access to. The access point exposes the specified file
--   system path as the root directory of your file system to applications
--   using the access point. NFS clients using the access point can only
--   access data in the access point's <tt>RootDirectory</tt> and it's
--   subdirectories.
--   
--   <i>See:</i> <a>newRootDirectory</a> smart constructor.
data RootDirectory
RootDirectory' :: Maybe CreationInfo -> Maybe Text -> RootDirectory

-- | (Optional) Specifies the POSIX IDs and permissions to apply to the
--   access point's <tt>RootDirectory</tt>. If the <tt>RootDirectory</tt>
--   &gt; <tt>Path</tt> specified does not exist, EFS creates the root
--   directory using the <tt>CreationInfo</tt> settings when a client
--   connects to an access point. When specifying the
--   <tt>CreationInfo</tt>, you must provide values for all properties.
--   
--   If you do not provide <tt>CreationInfo</tt> and the specified
--   <tt>RootDirectory</tt> &gt; <tt>Path</tt> does not exist, attempts to
--   mount the file system using the access point will fail.
[$sel:creationInfo:RootDirectory'] :: RootDirectory -> Maybe CreationInfo

-- | Specifies the path on the EFS file system to expose as the root
--   directory to NFS clients using the access point to access the EFS file
--   system. A path can have up to four subdirectories. If the specified
--   path does not exist, you are required to provide the
--   <tt>CreationInfo</tt>.
[$sel:path:RootDirectory'] :: RootDirectory -> Maybe Text

-- | Create a value of <a>RootDirectory</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationInfo:RootDirectory'</a>,
--   <a>rootDirectory_creationInfo</a> - (Optional) Specifies the POSIX IDs
--   and permissions to apply to the access point's <tt>RootDirectory</tt>.
--   If the <tt>RootDirectory</tt> &gt; <tt>Path</tt> specified does not
--   exist, EFS creates the root directory using the <tt>CreationInfo</tt>
--   settings when a client connects to an access point. When specifying
--   the <tt>CreationInfo</tt>, you must provide values for all properties.
--   
--   If you do not provide <tt>CreationInfo</tt> and the specified
--   <tt>RootDirectory</tt> &gt; <tt>Path</tt> does not exist, attempts to
--   mount the file system using the access point will fail.
--   
--   <a>$sel:path:RootDirectory'</a>, <a>rootDirectory_path</a> - Specifies
--   the path on the EFS file system to expose as the root directory to NFS
--   clients using the access point to access the EFS file system. A path
--   can have up to four subdirectories. If the specified path does not
--   exist, you are required to provide the <tt>CreationInfo</tt>.
newRootDirectory :: RootDirectory

-- | (Optional) Specifies the POSIX IDs and permissions to apply to the
--   access point's <tt>RootDirectory</tt>. If the <tt>RootDirectory</tt>
--   &gt; <tt>Path</tt> specified does not exist, EFS creates the root
--   directory using the <tt>CreationInfo</tt> settings when a client
--   connects to an access point. When specifying the
--   <tt>CreationInfo</tt>, you must provide values for all properties.
--   
--   If you do not provide <tt>CreationInfo</tt> and the specified
--   <tt>RootDirectory</tt> &gt; <tt>Path</tt> does not exist, attempts to
--   mount the file system using the access point will fail.
rootDirectory_creationInfo :: Lens' RootDirectory (Maybe CreationInfo)

-- | Specifies the path on the EFS file system to expose as the root
--   directory to NFS clients using the access point to access the EFS file
--   system. A path can have up to four subdirectories. If the specified
--   path does not exist, you are required to provide the
--   <tt>CreationInfo</tt>.
rootDirectory_path :: Lens' RootDirectory (Maybe Text)

-- | A tag is a key-value pair. Allowed characters are letters, white
--   space, and numbers that can be represented in UTF-8, and the following
--   characters:<tt> + - = . _ : /</tt>.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | The tag key (String). The key can't start with <tt>aws:</tt>.
[$sel:key:Tag'] :: Tag -> Text

-- | The value of the tag key.
[$sel:value:Tag'] :: Tag -> Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The tag key (String). The key
--   can't start with <tt>aws:</tt>.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The value of the tag key.
newTag :: Text -> Text -> Tag

-- | The tag key (String). The key can't start with <tt>aws:</tt>.
tag_key :: Lens' Tag Text

-- | The value of the tag key.
tag_value :: Lens' Tag Text


-- | Creates a tag for an EFS resource. You can create tags for EFS file
--   systems and access points using this API operation.
--   
--   This operation requires permissions for the
--   <tt>elasticfilesystem:TagResource</tt> action.
module Amazonka.EFS.TagResource

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> [Tag] -> TagResource

-- | The ID specifying the EFS resource that you want to create a tag for.
[$sel:resourceId:TagResource'] :: TagResource -> Text

-- | An array of <tt>Tag</tt> objects to add. Each <tt>Tag</tt> object is a
--   key-value pair.
[$sel:tags:TagResource'] :: TagResource -> [Tag]

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceId:TagResource'</a>, <a>tagResource_resourceId</a> -
--   The ID specifying the EFS resource that you want to create a tag for.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - An array of
--   <tt>Tag</tt> objects to add. Each <tt>Tag</tt> object is a key-value
--   pair.
newTagResource :: Text -> TagResource

-- | The ID specifying the EFS resource that you want to create a tag for.
tagResource_resourceId :: Lens' TagResource Text

-- | An array of <tt>Tag</tt> objects to add. Each <tt>Tag</tt> object is a
--   key-value pair.
tagResource_tags :: Lens' TagResource [Tag]

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newTagResourceResponse :: TagResourceResponse
instance GHC.Generics.Generic Amazonka.EFS.TagResource.TagResource
instance GHC.Show.Show Amazonka.EFS.TagResource.TagResource
instance GHC.Read.Read Amazonka.EFS.TagResource.TagResource
instance GHC.Classes.Eq Amazonka.EFS.TagResource.TagResource
instance GHC.Generics.Generic Amazonka.EFS.TagResource.TagResourceResponse
instance GHC.Show.Show Amazonka.EFS.TagResource.TagResourceResponse
instance GHC.Read.Read Amazonka.EFS.TagResource.TagResourceResponse
instance GHC.Classes.Eq Amazonka.EFS.TagResource.TagResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.EFS.TagResource.TagResource
instance Control.DeepSeq.NFData Amazonka.EFS.TagResource.TagResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.EFS.TagResource.TagResource
instance Control.DeepSeq.NFData Amazonka.EFS.TagResource.TagResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.EFS.TagResource.TagResource
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.EFS.TagResource.TagResource
instance Amazonka.Data.Path.ToPath Amazonka.EFS.TagResource.TagResource
instance Amazonka.Data.Query.ToQuery Amazonka.EFS.TagResource.TagResource


-- | Enables lifecycle management by creating a new
--   <tt>LifecycleConfiguration</tt> object. A
--   <tt>LifecycleConfiguration</tt> object defines when files in an Amazon
--   EFS file system are automatically transitioned to the lower-cost EFS
--   Infrequent Access (IA) storage class. To enable EFS Intelligent
--   Tiering, set the value of <tt>TransitionToPrimaryStorageClass</tt> to
--   <tt>AFTER_1_ACCESS</tt>. For more information, see <a>EFS Lifecycle
--   Management</a>.
--   
--   Each Amazon EFS file system supports one lifecycle configuration,
--   which applies to all files in the file system. If a
--   <tt>LifecycleConfiguration</tt> object already exists for the
--   specified file system, a <tt>PutLifecycleConfiguration</tt> call
--   modifies the existing configuration. A
--   <tt>PutLifecycleConfiguration</tt> call with an empty
--   <tt>LifecyclePolicies</tt> array in the request body deletes any
--   existing <tt>LifecycleConfiguration</tt> and turns off lifecycle
--   management for the file system.
--   
--   In the request, specify the following:
--   
--   <ul>
--   <li>The ID for the file system for which you are enabling, disabling,
--   or modifying lifecycle management.</li>
--   <li>A <tt>LifecyclePolicies</tt> array of <tt>LifecyclePolicy</tt>
--   objects that define when files are moved to the IA storage class.
--   Amazon EFS requires that each <tt>LifecyclePolicy</tt> object have
--   only have a single transition, so the <tt>LifecyclePolicies</tt> array
--   needs to be structured with separate <tt>LifecyclePolicy</tt> objects.
--   See the example requests in the following section for more
--   information.</li>
--   </ul>
--   
--   This operation requires permissions for the
--   <tt>elasticfilesystem:PutLifecycleConfiguration</tt> operation.
--   
--   To apply a <tt>LifecycleConfiguration</tt> object to an encrypted file
--   system, you need the same Key Management Service permissions as when
--   you created the encrypted file system.
module Amazonka.EFS.PutLifecycleConfiguration

-- | <i>See:</i> <a>newPutLifecycleConfiguration</a> smart constructor.
data PutLifecycleConfiguration
PutLifecycleConfiguration' :: Text -> [LifecyclePolicy] -> PutLifecycleConfiguration

-- | The ID of the file system for which you are creating the
--   <tt>LifecycleConfiguration</tt> object (String).
[$sel:fileSystemId:PutLifecycleConfiguration'] :: PutLifecycleConfiguration -> Text

-- | An array of <tt>LifecyclePolicy</tt> objects that define the file
--   system's <tt>LifecycleConfiguration</tt> object. A
--   <tt>LifecycleConfiguration</tt> object informs EFS lifecycle
--   management and intelligent tiering of the following:
--   
--   <ul>
--   <li>When to move files in the file system from primary storage to the
--   IA storage class.</li>
--   <li>When to move files that are in IA storage to primary storage.</li>
--   </ul>
--   
--   When using the <tt>put-lifecycle-configuration</tt> CLI command or the
--   <tt>PutLifecycleConfiguration</tt> API action, Amazon EFS requires
--   that each <tt>LifecyclePolicy</tt> object have only a single
--   transition. This means that in a request body,
--   <tt>LifecyclePolicies</tt> needs to be structured as an array of
--   <tt>LifecyclePolicy</tt> objects, one object for each transition,
--   <tt>TransitionToIA</tt>, <tt>TransitionToPrimaryStorageClass</tt>. See
--   the example requests in the following section for more information.
[$sel:lifecyclePolicies:PutLifecycleConfiguration'] :: PutLifecycleConfiguration -> [LifecyclePolicy]

-- | Create a value of <a>PutLifecycleConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fileSystemId:PutLifecycleConfiguration'</a>,
--   <a>putLifecycleConfiguration_fileSystemId</a> - The ID of the file
--   system for which you are creating the <tt>LifecycleConfiguration</tt>
--   object (String).
--   
--   <a>$sel:lifecyclePolicies:PutLifecycleConfiguration'</a>,
--   <a>putLifecycleConfiguration_lifecyclePolicies</a> - An array of
--   <tt>LifecyclePolicy</tt> objects that define the file system's
--   <tt>LifecycleConfiguration</tt> object. A
--   <tt>LifecycleConfiguration</tt> object informs EFS lifecycle
--   management and intelligent tiering of the following:
--   
--   <ul>
--   <li>When to move files in the file system from primary storage to the
--   IA storage class.</li>
--   <li>When to move files that are in IA storage to primary storage.</li>
--   </ul>
--   
--   When using the <tt>put-lifecycle-configuration</tt> CLI command or the
--   <tt>PutLifecycleConfiguration</tt> API action, Amazon EFS requires
--   that each <tt>LifecyclePolicy</tt> object have only a single
--   transition. This means that in a request body,
--   <tt>LifecyclePolicies</tt> needs to be structured as an array of
--   <tt>LifecyclePolicy</tt> objects, one object for each transition,
--   <tt>TransitionToIA</tt>, <tt>TransitionToPrimaryStorageClass</tt>. See
--   the example requests in the following section for more information.
newPutLifecycleConfiguration :: Text -> PutLifecycleConfiguration

-- | The ID of the file system for which you are creating the
--   <tt>LifecycleConfiguration</tt> object (String).
putLifecycleConfiguration_fileSystemId :: Lens' PutLifecycleConfiguration Text

-- | An array of <tt>LifecyclePolicy</tt> objects that define the file
--   system's <tt>LifecycleConfiguration</tt> object. A
--   <tt>LifecycleConfiguration</tt> object informs EFS lifecycle
--   management and intelligent tiering of the following:
--   
--   <ul>
--   <li>When to move files in the file system from primary storage to the
--   IA storage class.</li>
--   <li>When to move files that are in IA storage to primary storage.</li>
--   </ul>
--   
--   When using the <tt>put-lifecycle-configuration</tt> CLI command or the
--   <tt>PutLifecycleConfiguration</tt> API action, Amazon EFS requires
--   that each <tt>LifecyclePolicy</tt> object have only a single
--   transition. This means that in a request body,
--   <tt>LifecyclePolicies</tt> needs to be structured as an array of
--   <tt>LifecyclePolicy</tt> objects, one object for each transition,
--   <tt>TransitionToIA</tt>, <tt>TransitionToPrimaryStorageClass</tt>. See
--   the example requests in the following section for more information.
putLifecycleConfiguration_lifecyclePolicies :: Lens' PutLifecycleConfiguration [LifecyclePolicy]

-- | <i>See:</i> <a>newLifecycleConfigurationDescription</a> smart
--   constructor.
data LifecycleConfigurationDescription
LifecycleConfigurationDescription' :: Maybe [LifecyclePolicy] -> LifecycleConfigurationDescription

-- | An array of lifecycle management policies. EFS supports a maximum of
--   one policy per file system.
[$sel:lifecyclePolicies:LifecycleConfigurationDescription'] :: LifecycleConfigurationDescription -> Maybe [LifecyclePolicy]

-- | Create a value of <a>LifecycleConfigurationDescription</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lifecyclePolicies:LifecycleConfigurationDescription'</a>,
--   <a>lifecycleConfigurationDescription_lifecyclePolicies</a> - An array
--   of lifecycle management policies. EFS supports a maximum of one policy
--   per file system.
newLifecycleConfigurationDescription :: LifecycleConfigurationDescription

-- | An array of lifecycle management policies. EFS supports a maximum of
--   one policy per file system.
lifecycleConfigurationDescription_lifecyclePolicies :: Lens' LifecycleConfigurationDescription (Maybe [LifecyclePolicy])
instance GHC.Generics.Generic Amazonka.EFS.PutLifecycleConfiguration.PutLifecycleConfiguration
instance GHC.Show.Show Amazonka.EFS.PutLifecycleConfiguration.PutLifecycleConfiguration
instance GHC.Read.Read Amazonka.EFS.PutLifecycleConfiguration.PutLifecycleConfiguration
instance GHC.Classes.Eq Amazonka.EFS.PutLifecycleConfiguration.PutLifecycleConfiguration
instance Amazonka.Types.AWSRequest Amazonka.EFS.PutLifecycleConfiguration.PutLifecycleConfiguration
instance Data.Hashable.Class.Hashable Amazonka.EFS.PutLifecycleConfiguration.PutLifecycleConfiguration
instance Control.DeepSeq.NFData Amazonka.EFS.PutLifecycleConfiguration.PutLifecycleConfiguration
instance Amazonka.Data.Headers.ToHeaders Amazonka.EFS.PutLifecycleConfiguration.PutLifecycleConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.EFS.PutLifecycleConfiguration.PutLifecycleConfiguration
instance Amazonka.Data.Path.ToPath Amazonka.EFS.PutLifecycleConfiguration.PutLifecycleConfiguration
instance Amazonka.Data.Query.ToQuery Amazonka.EFS.PutLifecycleConfiguration.PutLifecycleConfiguration


-- | Applies an Amazon EFS <tt>FileSystemPolicy</tt> to an Amazon EFS file
--   system. A file system policy is an IAM resource-based policy and can
--   contain multiple policy statements. A file system always has exactly
--   one file system policy, which can be the default policy or an explicit
--   policy set or updated using this API operation. EFS file system
--   policies have a 20,000 character limit. When an explicit policy is
--   set, it overrides the default policy. For more information about the
--   default file system policy, see <a>Default EFS File System Policy</a>.
--   
--   EFS file system policies have a 20,000 character limit.
--   
--   This operation requires permissions for the
--   <tt>elasticfilesystem:PutFileSystemPolicy</tt> action.
module Amazonka.EFS.PutFileSystemPolicy

-- | <i>See:</i> <a>newPutFileSystemPolicy</a> smart constructor.
data PutFileSystemPolicy
PutFileSystemPolicy' :: Maybe Bool -> Text -> Text -> PutFileSystemPolicy

-- | (Optional) A flag to indicate whether to bypass the
--   <tt>FileSystemPolicy</tt> lockout safety check. The policy lockout
--   safety check determines whether the policy in the request will prevent
--   the principal making the request will be locked out from making future
--   <tt>PutFileSystemPolicy</tt> requests on the file system. Set
--   <tt>BypassPolicyLockoutSafetyCheck</tt> to <tt>True</tt> only when you
--   intend to prevent the principal that is making the request from making
--   a subsequent <tt>PutFileSystemPolicy</tt> request on the file system.
--   The default value is False.
[$sel:bypassPolicyLockoutSafetyCheck:PutFileSystemPolicy'] :: PutFileSystemPolicy -> Maybe Bool

-- | The ID of the EFS file system that you want to create or update the
--   <tt>FileSystemPolicy</tt> for.
[$sel:fileSystemId:PutFileSystemPolicy'] :: PutFileSystemPolicy -> Text

-- | The <tt>FileSystemPolicy</tt> that you're creating. Accepts a JSON
--   formatted policy definition. EFS file system policies have a 20,000
--   character limit. To find out more about the elements that make up a
--   file system policy, see <a>EFS Resource-based Policies</a>.
[$sel:policy:PutFileSystemPolicy'] :: PutFileSystemPolicy -> Text

-- | Create a value of <a>PutFileSystemPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bypassPolicyLockoutSafetyCheck:PutFileSystemPolicy'</a>,
--   <a>putFileSystemPolicy_bypassPolicyLockoutSafetyCheck</a> - (Optional)
--   A flag to indicate whether to bypass the <tt>FileSystemPolicy</tt>
--   lockout safety check. The policy lockout safety check determines
--   whether the policy in the request will prevent the principal making
--   the request will be locked out from making future
--   <tt>PutFileSystemPolicy</tt> requests on the file system. Set
--   <tt>BypassPolicyLockoutSafetyCheck</tt> to <tt>True</tt> only when you
--   intend to prevent the principal that is making the request from making
--   a subsequent <tt>PutFileSystemPolicy</tt> request on the file system.
--   The default value is False.
--   
--   <a>$sel:fileSystemId:PutFileSystemPolicy'</a>,
--   <a>putFileSystemPolicy_fileSystemId</a> - The ID of the EFS file
--   system that you want to create or update the <tt>FileSystemPolicy</tt>
--   for.
--   
--   <a>$sel:policy:PutFileSystemPolicy'</a>,
--   <a>putFileSystemPolicy_policy</a> - The <tt>FileSystemPolicy</tt> that
--   you're creating. Accepts a JSON formatted policy definition. EFS file
--   system policies have a 20,000 character limit. To find out more about
--   the elements that make up a file system policy, see <a>EFS
--   Resource-based Policies</a>.
newPutFileSystemPolicy :: Text -> Text -> PutFileSystemPolicy

-- | (Optional) A flag to indicate whether to bypass the
--   <tt>FileSystemPolicy</tt> lockout safety check. The policy lockout
--   safety check determines whether the policy in the request will prevent
--   the principal making the request will be locked out from making future
--   <tt>PutFileSystemPolicy</tt> requests on the file system. Set
--   <tt>BypassPolicyLockoutSafetyCheck</tt> to <tt>True</tt> only when you
--   intend to prevent the principal that is making the request from making
--   a subsequent <tt>PutFileSystemPolicy</tt> request on the file system.
--   The default value is False.
putFileSystemPolicy_bypassPolicyLockoutSafetyCheck :: Lens' PutFileSystemPolicy (Maybe Bool)

-- | The ID of the EFS file system that you want to create or update the
--   <tt>FileSystemPolicy</tt> for.
putFileSystemPolicy_fileSystemId :: Lens' PutFileSystemPolicy Text

-- | The <tt>FileSystemPolicy</tt> that you're creating. Accepts a JSON
--   formatted policy definition. EFS file system policies have a 20,000
--   character limit. To find out more about the elements that make up a
--   file system policy, see <a>EFS Resource-based Policies</a>.
putFileSystemPolicy_policy :: Lens' PutFileSystemPolicy Text

-- | <i>See:</i> <a>newFileSystemPolicyDescription</a> smart constructor.
data FileSystemPolicyDescription
FileSystemPolicyDescription' :: Maybe Text -> Maybe Text -> FileSystemPolicyDescription

-- | Specifies the EFS file system to which the <tt>FileSystemPolicy</tt>
--   applies.
[$sel:fileSystemId:FileSystemPolicyDescription'] :: FileSystemPolicyDescription -> Maybe Text

-- | The JSON formatted <tt>FileSystemPolicy</tt> for the EFS file system.
[$sel:policy:FileSystemPolicyDescription'] :: FileSystemPolicyDescription -> Maybe Text

-- | Create a value of <a>FileSystemPolicyDescription</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fileSystemId:FileSystemPolicyDescription'</a>,
--   <a>fileSystemPolicyDescription_fileSystemId</a> - Specifies the EFS
--   file system to which the <tt>FileSystemPolicy</tt> applies.
--   
--   <a>$sel:policy:FileSystemPolicyDescription'</a>,
--   <a>fileSystemPolicyDescription_policy</a> - The JSON formatted
--   <tt>FileSystemPolicy</tt> for the EFS file system.
newFileSystemPolicyDescription :: FileSystemPolicyDescription

-- | Specifies the EFS file system to which the <tt>FileSystemPolicy</tt>
--   applies.
fileSystemPolicyDescription_fileSystemId :: Lens' FileSystemPolicyDescription (Maybe Text)

-- | The JSON formatted <tt>FileSystemPolicy</tt> for the EFS file system.
fileSystemPolicyDescription_policy :: Lens' FileSystemPolicyDescription (Maybe Text)
instance GHC.Generics.Generic Amazonka.EFS.PutFileSystemPolicy.PutFileSystemPolicy
instance GHC.Show.Show Amazonka.EFS.PutFileSystemPolicy.PutFileSystemPolicy
instance GHC.Read.Read Amazonka.EFS.PutFileSystemPolicy.PutFileSystemPolicy
instance GHC.Classes.Eq Amazonka.EFS.PutFileSystemPolicy.PutFileSystemPolicy
instance Amazonka.Types.AWSRequest Amazonka.EFS.PutFileSystemPolicy.PutFileSystemPolicy
instance Data.Hashable.Class.Hashable Amazonka.EFS.PutFileSystemPolicy.PutFileSystemPolicy
instance Control.DeepSeq.NFData Amazonka.EFS.PutFileSystemPolicy.PutFileSystemPolicy
instance Amazonka.Data.Headers.ToHeaders Amazonka.EFS.PutFileSystemPolicy.PutFileSystemPolicy
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.EFS.PutFileSystemPolicy.PutFileSystemPolicy
instance Amazonka.Data.Path.ToPath Amazonka.EFS.PutFileSystemPolicy.PutFileSystemPolicy
instance Amazonka.Data.Query.ToQuery Amazonka.EFS.PutFileSystemPolicy.PutFileSystemPolicy


-- | Updates the file system's backup policy. Use this action to start or
--   stop automatic backups of the file system.
module Amazonka.EFS.PutBackupPolicy

-- | <i>See:</i> <a>newPutBackupPolicy</a> smart constructor.
data PutBackupPolicy
PutBackupPolicy' :: Text -> BackupPolicy -> PutBackupPolicy

-- | Specifies which EFS file system to update the backup policy for.
[$sel:fileSystemId:PutBackupPolicy'] :: PutBackupPolicy -> Text

-- | The backup policy included in the <tt>PutBackupPolicy</tt> request.
[$sel:backupPolicy:PutBackupPolicy'] :: PutBackupPolicy -> BackupPolicy

-- | Create a value of <a>PutBackupPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fileSystemId:PutBackupPolicy'</a>,
--   <a>putBackupPolicy_fileSystemId</a> - Specifies which EFS file system
--   to update the backup policy for.
--   
--   <a>$sel:backupPolicy:PutBackupPolicy'</a>,
--   <a>putBackupPolicy_backupPolicy</a> - The backup policy included in
--   the <tt>PutBackupPolicy</tt> request.
newPutBackupPolicy :: Text -> BackupPolicy -> PutBackupPolicy

-- | Specifies which EFS file system to update the backup policy for.
putBackupPolicy_fileSystemId :: Lens' PutBackupPolicy Text

-- | The backup policy included in the <tt>PutBackupPolicy</tt> request.
putBackupPolicy_backupPolicy :: Lens' PutBackupPolicy BackupPolicy

-- | <i>See:</i> <a>newBackupPolicyDescription</a> smart constructor.
data BackupPolicyDescription
BackupPolicyDescription' :: Maybe BackupPolicy -> BackupPolicyDescription

-- | Describes the file system's backup policy, indicating whether
--   automatic backups are turned on or off..
[$sel:backupPolicy:BackupPolicyDescription'] :: BackupPolicyDescription -> Maybe BackupPolicy

-- | Create a value of <a>BackupPolicyDescription</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:backupPolicy:BackupPolicyDescription'</a>,
--   <a>backupPolicyDescription_backupPolicy</a> - Describes the file
--   system's backup policy, indicating whether automatic backups are
--   turned on or off..
newBackupPolicyDescription :: BackupPolicyDescription

-- | Describes the file system's backup policy, indicating whether
--   automatic backups are turned on or off..
backupPolicyDescription_backupPolicy :: Lens' BackupPolicyDescription (Maybe BackupPolicy)
instance GHC.Generics.Generic Amazonka.EFS.PutBackupPolicy.PutBackupPolicy
instance GHC.Show.Show Amazonka.EFS.PutBackupPolicy.PutBackupPolicy
instance GHC.Read.Read Amazonka.EFS.PutBackupPolicy.PutBackupPolicy
instance GHC.Classes.Eq Amazonka.EFS.PutBackupPolicy.PutBackupPolicy
instance Amazonka.Types.AWSRequest Amazonka.EFS.PutBackupPolicy.PutBackupPolicy
instance Data.Hashable.Class.Hashable Amazonka.EFS.PutBackupPolicy.PutBackupPolicy
instance Control.DeepSeq.NFData Amazonka.EFS.PutBackupPolicy.PutBackupPolicy
instance Amazonka.Data.Headers.ToHeaders Amazonka.EFS.PutBackupPolicy.PutBackupPolicy
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.EFS.PutBackupPolicy.PutBackupPolicy
instance Amazonka.Data.Path.ToPath Amazonka.EFS.PutBackupPolicy.PutBackupPolicy
instance Amazonka.Data.Query.ToQuery Amazonka.EFS.PutBackupPolicy.PutBackupPolicy


-- | Use this operation to set the account preference in the current Amazon
--   Web Services Region to use long 17 character (63 bit) or short 8
--   character (32 bit) resource IDs for new EFS file system and mount
--   target resources. All existing resource IDs are not affected by any
--   changes you make. You can set the ID preference during the opt-in
--   period as EFS transitions to long resource IDs. For more information,
--   see <a>Managing Amazon EFS resource IDs</a>.
--   
--   Starting in October, 2021, you will receive an error if you try to set
--   the account preference to use the short 8 character format resource
--   ID. Contact Amazon Web Services support if you receive an error and
--   need to use short IDs for file system and mount target resources.
module Amazonka.EFS.PutAccountPreferences

-- | <i>See:</i> <a>newPutAccountPreferences</a> smart constructor.
data PutAccountPreferences
PutAccountPreferences' :: ResourceIdType -> PutAccountPreferences

-- | Specifies the EFS resource ID preference to set for the user's Amazon
--   Web Services account, in the current Amazon Web Services Region,
--   either <tt>LONG_ID</tt> (17 characters), or <tt>SHORT_ID</tt> (8
--   characters).
--   
--   Starting in October, 2021, you will receive an error when setting the
--   account preference to <tt>SHORT_ID</tt>. Contact Amazon Web Services
--   support if you receive an error and need to use short IDs for file
--   system and mount target resources.
[$sel:resourceIdType:PutAccountPreferences'] :: PutAccountPreferences -> ResourceIdType

-- | Create a value of <a>PutAccountPreferences</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceIdType:PutAccountPreferences'</a>,
--   <a>putAccountPreferences_resourceIdType</a> - Specifies the EFS
--   resource ID preference to set for the user's Amazon Web Services
--   account, in the current Amazon Web Services Region, either
--   <tt>LONG_ID</tt> (17 characters), or <tt>SHORT_ID</tt> (8 characters).
--   
--   Starting in October, 2021, you will receive an error when setting the
--   account preference to <tt>SHORT_ID</tt>. Contact Amazon Web Services
--   support if you receive an error and need to use short IDs for file
--   system and mount target resources.
newPutAccountPreferences :: ResourceIdType -> PutAccountPreferences

-- | Specifies the EFS resource ID preference to set for the user's Amazon
--   Web Services account, in the current Amazon Web Services Region,
--   either <tt>LONG_ID</tt> (17 characters), or <tt>SHORT_ID</tt> (8
--   characters).
--   
--   Starting in October, 2021, you will receive an error when setting the
--   account preference to <tt>SHORT_ID</tt>. Contact Amazon Web Services
--   support if you receive an error and need to use short IDs for file
--   system and mount target resources.
putAccountPreferences_resourceIdType :: Lens' PutAccountPreferences ResourceIdType

-- | <i>See:</i> <a>newPutAccountPreferencesResponse</a> smart constructor.
data PutAccountPreferencesResponse
PutAccountPreferencesResponse' :: Maybe ResourceIdPreference -> Int -> PutAccountPreferencesResponse
[$sel:resourceIdPreference:PutAccountPreferencesResponse'] :: PutAccountPreferencesResponse -> Maybe ResourceIdPreference

-- | The response's http status code.
[$sel:httpStatus:PutAccountPreferencesResponse'] :: PutAccountPreferencesResponse -> Int

-- | Create a value of <a>PutAccountPreferencesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceIdPreference:PutAccountPreferencesResponse'</a>,
--   <a>putAccountPreferencesResponse_resourceIdPreference</a> -
--   Undocumented member.
--   
--   <a>$sel:httpStatus:PutAccountPreferencesResponse'</a>,
--   <a>putAccountPreferencesResponse_httpStatus</a> - The response's http
--   status code.
newPutAccountPreferencesResponse :: Int -> PutAccountPreferencesResponse

-- | Undocumented member.
putAccountPreferencesResponse_resourceIdPreference :: Lens' PutAccountPreferencesResponse (Maybe ResourceIdPreference)

-- | The response's http status code.
putAccountPreferencesResponse_httpStatus :: Lens' PutAccountPreferencesResponse Int
instance GHC.Generics.Generic Amazonka.EFS.PutAccountPreferences.PutAccountPreferences
instance GHC.Show.Show Amazonka.EFS.PutAccountPreferences.PutAccountPreferences
instance GHC.Read.Read Amazonka.EFS.PutAccountPreferences.PutAccountPreferences
instance GHC.Classes.Eq Amazonka.EFS.PutAccountPreferences.PutAccountPreferences
instance GHC.Generics.Generic Amazonka.EFS.PutAccountPreferences.PutAccountPreferencesResponse
instance GHC.Show.Show Amazonka.EFS.PutAccountPreferences.PutAccountPreferencesResponse
instance GHC.Read.Read Amazonka.EFS.PutAccountPreferences.PutAccountPreferencesResponse
instance GHC.Classes.Eq Amazonka.EFS.PutAccountPreferences.PutAccountPreferencesResponse
instance Amazonka.Types.AWSRequest Amazonka.EFS.PutAccountPreferences.PutAccountPreferences
instance Control.DeepSeq.NFData Amazonka.EFS.PutAccountPreferences.PutAccountPreferencesResponse
instance Data.Hashable.Class.Hashable Amazonka.EFS.PutAccountPreferences.PutAccountPreferences
instance Control.DeepSeq.NFData Amazonka.EFS.PutAccountPreferences.PutAccountPreferences
instance Amazonka.Data.Headers.ToHeaders Amazonka.EFS.PutAccountPreferences.PutAccountPreferences
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.EFS.PutAccountPreferences.PutAccountPreferences
instance Amazonka.Data.Path.ToPath Amazonka.EFS.PutAccountPreferences.PutAccountPreferences
instance Amazonka.Data.Query.ToQuery Amazonka.EFS.PutAccountPreferences.PutAccountPreferences


-- | Modifies the set of security groups in effect for a mount target.
--   
--   When you create a mount target, Amazon EFS also creates a new network
--   interface. For more information, see CreateMountTarget. This operation
--   replaces the security groups in effect for the network interface
--   associated with a mount target, with the <tt>SecurityGroups</tt>
--   provided in the request. This operation requires that the network
--   interface of the mount target has been created and the lifecycle state
--   of the mount target is not <tt>deleted</tt>.
--   
--   The operation requires permissions for the following actions:
--   
--   <ul>
--   <li><tt>elasticfilesystem:ModifyMountTargetSecurityGroups</tt> action
--   on the mount target's file system.</li>
--   <li><tt>ec2:ModifyNetworkInterfaceAttribute</tt> action on the mount
--   target's network interface.</li>
--   </ul>
module Amazonka.EFS.ModifyMountTargetSecurityGroups

-- | <i>See:</i> <a>newModifyMountTargetSecurityGroups</a> smart
--   constructor.
data ModifyMountTargetSecurityGroups
ModifyMountTargetSecurityGroups' :: Maybe [Text] -> Text -> ModifyMountTargetSecurityGroups

-- | An array of up to five VPC security group IDs.
[$sel:securityGroups:ModifyMountTargetSecurityGroups'] :: ModifyMountTargetSecurityGroups -> Maybe [Text]

-- | The ID of the mount target whose security groups you want to modify.
[$sel:mountTargetId:ModifyMountTargetSecurityGroups'] :: ModifyMountTargetSecurityGroups -> Text

-- | Create a value of <a>ModifyMountTargetSecurityGroups</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityGroups:ModifyMountTargetSecurityGroups'</a>,
--   <a>modifyMountTargetSecurityGroups_securityGroups</a> - An array of up
--   to five VPC security group IDs.
--   
--   <a>$sel:mountTargetId:ModifyMountTargetSecurityGroups'</a>,
--   <a>modifyMountTargetSecurityGroups_mountTargetId</a> - The ID of the
--   mount target whose security groups you want to modify.
newModifyMountTargetSecurityGroups :: Text -> ModifyMountTargetSecurityGroups

-- | An array of up to five VPC security group IDs.
modifyMountTargetSecurityGroups_securityGroups :: Lens' ModifyMountTargetSecurityGroups (Maybe [Text])

-- | The ID of the mount target whose security groups you want to modify.
modifyMountTargetSecurityGroups_mountTargetId :: Lens' ModifyMountTargetSecurityGroups Text

-- | <i>See:</i> <a>newModifyMountTargetSecurityGroupsResponse</a> smart
--   constructor.
data ModifyMountTargetSecurityGroupsResponse
ModifyMountTargetSecurityGroupsResponse' :: ModifyMountTargetSecurityGroupsResponse

-- | Create a value of <a>ModifyMountTargetSecurityGroupsResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newModifyMountTargetSecurityGroupsResponse :: ModifyMountTargetSecurityGroupsResponse
instance GHC.Generics.Generic Amazonka.EFS.ModifyMountTargetSecurityGroups.ModifyMountTargetSecurityGroups
instance GHC.Show.Show Amazonka.EFS.ModifyMountTargetSecurityGroups.ModifyMountTargetSecurityGroups
instance GHC.Read.Read Amazonka.EFS.ModifyMountTargetSecurityGroups.ModifyMountTargetSecurityGroups
instance GHC.Classes.Eq Amazonka.EFS.ModifyMountTargetSecurityGroups.ModifyMountTargetSecurityGroups
instance GHC.Generics.Generic Amazonka.EFS.ModifyMountTargetSecurityGroups.ModifyMountTargetSecurityGroupsResponse
instance GHC.Show.Show Amazonka.EFS.ModifyMountTargetSecurityGroups.ModifyMountTargetSecurityGroupsResponse
instance GHC.Read.Read Amazonka.EFS.ModifyMountTargetSecurityGroups.ModifyMountTargetSecurityGroupsResponse
instance GHC.Classes.Eq Amazonka.EFS.ModifyMountTargetSecurityGroups.ModifyMountTargetSecurityGroupsResponse
instance Amazonka.Types.AWSRequest Amazonka.EFS.ModifyMountTargetSecurityGroups.ModifyMountTargetSecurityGroups
instance Control.DeepSeq.NFData Amazonka.EFS.ModifyMountTargetSecurityGroups.ModifyMountTargetSecurityGroupsResponse
instance Data.Hashable.Class.Hashable Amazonka.EFS.ModifyMountTargetSecurityGroups.ModifyMountTargetSecurityGroups
instance Control.DeepSeq.NFData Amazonka.EFS.ModifyMountTargetSecurityGroups.ModifyMountTargetSecurityGroups
instance Amazonka.Data.Headers.ToHeaders Amazonka.EFS.ModifyMountTargetSecurityGroups.ModifyMountTargetSecurityGroups
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.EFS.ModifyMountTargetSecurityGroups.ModifyMountTargetSecurityGroups
instance Amazonka.Data.Path.ToPath Amazonka.EFS.ModifyMountTargetSecurityGroups.ModifyMountTargetSecurityGroups
instance Amazonka.Data.Query.ToQuery Amazonka.EFS.ModifyMountTargetSecurityGroups.ModifyMountTargetSecurityGroups


-- | Lists all tags for a top-level EFS resource. You must provide the ID
--   of the resource that you want to retrieve the tags for.
--   
--   This operation requires permissions for the
--   <tt>elasticfilesystem:DescribeAccessPoints</tt> action.
module Amazonka.EFS.ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Maybe Text -> Maybe Natural -> Text -> ListTagsForResource

-- | (Optional) You can use <tt>NextToken</tt> in a subsequent request to
--   fetch the next page of access point descriptions if the response
--   payload was paginated.
[$sel:nextToken:ListTagsForResource'] :: ListTagsForResource -> Maybe Text

-- | (Optional) Specifies the maximum number of tag objects to return in
--   the response. The default value is 100.
[$sel:maxResults:ListTagsForResource'] :: ListTagsForResource -> Maybe Natural

-- | Specifies the EFS resource you want to retrieve tags for. You can
--   retrieve tags for EFS file systems and access points using this API
--   endpoint.
[$sel:resourceId:ListTagsForResource'] :: ListTagsForResource -> Text

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTagsForResource'</a>,
--   <a>listTagsForResource_nextToken</a> - (Optional) You can use
--   <tt>NextToken</tt> in a subsequent request to fetch the next page of
--   access point descriptions if the response payload was paginated.
--   
--   <a>$sel:maxResults:ListTagsForResource'</a>,
--   <a>listTagsForResource_maxResults</a> - (Optional) Specifies the
--   maximum number of tag objects to return in the response. The default
--   value is 100.
--   
--   <a>$sel:resourceId:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceId</a> - Specifies the EFS resource you
--   want to retrieve tags for. You can retrieve tags for EFS file systems
--   and access points using this API endpoint.
newListTagsForResource :: Text -> ListTagsForResource

-- | (Optional) You can use <tt>NextToken</tt> in a subsequent request to
--   fetch the next page of access point descriptions if the response
--   payload was paginated.
listTagsForResource_nextToken :: Lens' ListTagsForResource (Maybe Text)

-- | (Optional) Specifies the maximum number of tag objects to return in
--   the response. The default value is 100.
listTagsForResource_maxResults :: Lens' ListTagsForResource (Maybe Natural)

-- | Specifies the EFS resource you want to retrieve tags for. You can
--   retrieve tags for EFS file systems and access points using this API
--   endpoint.
listTagsForResource_resourceId :: Lens' ListTagsForResource Text

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe Text -> Maybe [Tag] -> Int -> ListTagsForResourceResponse

-- | <tt>NextToken</tt> is present if the response payload is paginated.
--   You can use <tt>NextToken</tt> in a subsequent request to fetch the
--   next page of access point descriptions.
[$sel:nextToken:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Maybe Text

-- | An array of the tags for the specified EFS resource.
[$sel:tags:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Maybe [Tag]

-- | The response's http status code.
[$sel:httpStatus:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Int

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTagsForResource'</a>,
--   <a>listTagsForResourceResponse_nextToken</a> - <tt>NextToken</tt> is
--   present if the response payload is paginated. You can use
--   <tt>NextToken</tt> in a subsequent request to fetch the next page of
--   access point descriptions.
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - An array of the tags for the
--   specified EFS resource.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | <tt>NextToken</tt> is present if the response payload is paginated.
--   You can use <tt>NextToken</tt> in a subsequent request to fetch the
--   next page of access point descriptions.
listTagsForResourceResponse_nextToken :: Lens' ListTagsForResourceResponse (Maybe Text)

-- | An array of the tags for the specified EFS resource.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe [Tag])

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int
instance GHC.Generics.Generic Amazonka.EFS.ListTagsForResource.ListTagsForResource
instance GHC.Show.Show Amazonka.EFS.ListTagsForResource.ListTagsForResource
instance GHC.Read.Read Amazonka.EFS.ListTagsForResource.ListTagsForResource
instance GHC.Classes.Eq Amazonka.EFS.ListTagsForResource.ListTagsForResource
instance GHC.Generics.Generic Amazonka.EFS.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Show.Show Amazonka.EFS.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Read.Read Amazonka.EFS.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Classes.Eq Amazonka.EFS.ListTagsForResource.ListTagsForResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.EFS.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Amazonka.EFS.ListTagsForResource.ListTagsForResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.EFS.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Amazonka.EFS.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.EFS.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Path.ToPath Amazonka.EFS.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Query.ToQuery Amazonka.EFS.ListTagsForResource.ListTagsForResource


-- | Returns the descriptions of all the current mount targets, or a
--   specific mount target, for a file system. When requesting all of the
--   current mount targets, the order of mount targets returned in the
--   response is unspecified.
--   
--   This operation requires permissions for the
--   <tt>elasticfilesystem:DescribeMountTargets</tt> action, on either the
--   file system ID that you specify in <tt>FileSystemId</tt>, or on the
--   file system of the mount target that you specify in
--   <tt>MountTargetId</tt>.
--   
--   This operation returns paginated results.
module Amazonka.EFS.DescribeMountTargets

-- | <i>See:</i> <a>newDescribeMountTargets</a> smart constructor.
data DescribeMountTargets
DescribeMountTargets' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Text -> DescribeMountTargets

-- | (Optional) The ID of the access point whose mount targets that you
--   want to list. It must be included in your request if a
--   <tt>FileSystemId</tt> or <tt>MountTargetId</tt> is not included in
--   your request. Accepts either an access point ID or ARN as input.
[$sel:accessPointId:DescribeMountTargets'] :: DescribeMountTargets -> Maybe Text

-- | (Optional) ID of the file system whose mount targets you want to list
--   (String). It must be included in your request if an
--   <tt>AccessPointId</tt> or <tt>MountTargetId</tt> is not included.
--   Accepts either a file system ID or ARN as input.
[$sel:fileSystemId:DescribeMountTargets'] :: DescribeMountTargets -> Maybe Text

-- | (Optional) Opaque pagination token returned from a previous
--   <tt>DescribeMountTargets</tt> operation (String). If present, it
--   specifies to continue the list from where the previous returning call
--   left off.
[$sel:marker:DescribeMountTargets'] :: DescribeMountTargets -> Maybe Text

-- | (Optional) Maximum number of mount targets to return in the response.
--   Currently, this number is automatically set to 10, and other values
--   are ignored. The response is paginated at 100 per page if you have
--   more than 100 mount targets.
[$sel:maxItems:DescribeMountTargets'] :: DescribeMountTargets -> Maybe Natural

-- | (Optional) ID of the mount target that you want to have described
--   (String). It must be included in your request if <tt>FileSystemId</tt>
--   is not included. Accepts either a mount target ID or ARN as input.
[$sel:mountTargetId:DescribeMountTargets'] :: DescribeMountTargets -> Maybe Text

-- | Create a value of <a>DescribeMountTargets</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accessPointId:DescribeMountTargets'</a>,
--   <a>describeMountTargets_accessPointId</a> - (Optional) The ID of the
--   access point whose mount targets that you want to list. It must be
--   included in your request if a <tt>FileSystemId</tt> or
--   <tt>MountTargetId</tt> is not included in your request. Accepts either
--   an access point ID or ARN as input.
--   
--   <a>$sel:fileSystemId:DescribeMountTargets'</a>,
--   <a>describeMountTargets_fileSystemId</a> - (Optional) ID of the file
--   system whose mount targets you want to list (String). It must be
--   included in your request if an <tt>AccessPointId</tt> or
--   <tt>MountTargetId</tt> is not included. Accepts either a file system
--   ID or ARN as input.
--   
--   <a>$sel:marker:DescribeMountTargets'</a>,
--   <a>describeMountTargets_marker</a> - (Optional) Opaque pagination
--   token returned from a previous <tt>DescribeMountTargets</tt> operation
--   (String). If present, it specifies to continue the list from where the
--   previous returning call left off.
--   
--   <a>$sel:maxItems:DescribeMountTargets'</a>,
--   <a>describeMountTargets_maxItems</a> - (Optional) Maximum number of
--   mount targets to return in the response. Currently, this number is
--   automatically set to 10, and other values are ignored. The response is
--   paginated at 100 per page if you have more than 100 mount targets.
--   
--   <a>$sel:mountTargetId:DescribeMountTargets'</a>,
--   <a>describeMountTargets_mountTargetId</a> - (Optional) ID of the mount
--   target that you want to have described (String). It must be included
--   in your request if <tt>FileSystemId</tt> is not included. Accepts
--   either a mount target ID or ARN as input.
newDescribeMountTargets :: DescribeMountTargets

-- | (Optional) The ID of the access point whose mount targets that you
--   want to list. It must be included in your request if a
--   <tt>FileSystemId</tt> or <tt>MountTargetId</tt> is not included in
--   your request. Accepts either an access point ID or ARN as input.
describeMountTargets_accessPointId :: Lens' DescribeMountTargets (Maybe Text)

-- | (Optional) ID of the file system whose mount targets you want to list
--   (String). It must be included in your request if an
--   <tt>AccessPointId</tt> or <tt>MountTargetId</tt> is not included.
--   Accepts either a file system ID or ARN as input.
describeMountTargets_fileSystemId :: Lens' DescribeMountTargets (Maybe Text)

-- | (Optional) Opaque pagination token returned from a previous
--   <tt>DescribeMountTargets</tt> operation (String). If present, it
--   specifies to continue the list from where the previous returning call
--   left off.
describeMountTargets_marker :: Lens' DescribeMountTargets (Maybe Text)

-- | (Optional) Maximum number of mount targets to return in the response.
--   Currently, this number is automatically set to 10, and other values
--   are ignored. The response is paginated at 100 per page if you have
--   more than 100 mount targets.
describeMountTargets_maxItems :: Lens' DescribeMountTargets (Maybe Natural)

-- | (Optional) ID of the mount target that you want to have described
--   (String). It must be included in your request if <tt>FileSystemId</tt>
--   is not included. Accepts either a mount target ID or ARN as input.
describeMountTargets_mountTargetId :: Lens' DescribeMountTargets (Maybe Text)

-- | <i>See:</i> <a>newDescribeMountTargetsResponse</a> smart constructor.
data DescribeMountTargetsResponse
DescribeMountTargetsResponse' :: Maybe [MountTargetDescription] -> Maybe Text -> Maybe Text -> Int -> DescribeMountTargetsResponse

-- | Returns the file system's mount targets as an array of
--   <tt>MountTargetDescription</tt> objects.
[$sel:mountTargets:DescribeMountTargetsResponse'] :: DescribeMountTargetsResponse -> Maybe [MountTargetDescription]

-- | If the request included the <tt>Marker</tt>, the response returns that
--   value in this field.
[$sel:marker:DescribeMountTargetsResponse'] :: DescribeMountTargetsResponse -> Maybe Text

-- | If a value is present, there are more mount targets to return. In a
--   subsequent request, you can provide <tt>Marker</tt> in your request
--   with this value to retrieve the next set of mount targets.
[$sel:nextMarker:DescribeMountTargetsResponse'] :: DescribeMountTargetsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeMountTargetsResponse'] :: DescribeMountTargetsResponse -> Int

-- | Create a value of <a>DescribeMountTargetsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mountTargets:DescribeMountTargetsResponse'</a>,
--   <a>describeMountTargetsResponse_mountTargets</a> - Returns the file
--   system's mount targets as an array of <tt>MountTargetDescription</tt>
--   objects.
--   
--   <a>$sel:marker:DescribeMountTargets'</a>,
--   <a>describeMountTargetsResponse_marker</a> - If the request included
--   the <tt>Marker</tt>, the response returns that value in this field.
--   
--   <a>$sel:nextMarker:DescribeMountTargetsResponse'</a>,
--   <a>describeMountTargetsResponse_nextMarker</a> - If a value is
--   present, there are more mount targets to return. In a subsequent
--   request, you can provide <tt>Marker</tt> in your request with this
--   value to retrieve the next set of mount targets.
--   
--   <a>$sel:httpStatus:DescribeMountTargetsResponse'</a>,
--   <a>describeMountTargetsResponse_httpStatus</a> - The response's http
--   status code.
newDescribeMountTargetsResponse :: Int -> DescribeMountTargetsResponse

-- | Returns the file system's mount targets as an array of
--   <tt>MountTargetDescription</tt> objects.
describeMountTargetsResponse_mountTargets :: Lens' DescribeMountTargetsResponse (Maybe [MountTargetDescription])

-- | If the request included the <tt>Marker</tt>, the response returns that
--   value in this field.
describeMountTargetsResponse_marker :: Lens' DescribeMountTargetsResponse (Maybe Text)

-- | If a value is present, there are more mount targets to return. In a
--   subsequent request, you can provide <tt>Marker</tt> in your request
--   with this value to retrieve the next set of mount targets.
describeMountTargetsResponse_nextMarker :: Lens' DescribeMountTargetsResponse (Maybe Text)

-- | The response's http status code.
describeMountTargetsResponse_httpStatus :: Lens' DescribeMountTargetsResponse Int
instance GHC.Generics.Generic Amazonka.EFS.DescribeMountTargets.DescribeMountTargets
instance GHC.Show.Show Amazonka.EFS.DescribeMountTargets.DescribeMountTargets
instance GHC.Read.Read Amazonka.EFS.DescribeMountTargets.DescribeMountTargets
instance GHC.Classes.Eq Amazonka.EFS.DescribeMountTargets.DescribeMountTargets
instance GHC.Generics.Generic Amazonka.EFS.DescribeMountTargets.DescribeMountTargetsResponse
instance GHC.Show.Show Amazonka.EFS.DescribeMountTargets.DescribeMountTargetsResponse
instance GHC.Read.Read Amazonka.EFS.DescribeMountTargets.DescribeMountTargetsResponse
instance GHC.Classes.Eq Amazonka.EFS.DescribeMountTargets.DescribeMountTargetsResponse
instance Amazonka.Types.AWSRequest Amazonka.EFS.DescribeMountTargets.DescribeMountTargets
instance Control.DeepSeq.NFData Amazonka.EFS.DescribeMountTargets.DescribeMountTargetsResponse
instance Amazonka.Pager.AWSPager Amazonka.EFS.DescribeMountTargets.DescribeMountTargets
instance Data.Hashable.Class.Hashable Amazonka.EFS.DescribeMountTargets.DescribeMountTargets
instance Control.DeepSeq.NFData Amazonka.EFS.DescribeMountTargets.DescribeMountTargets
instance Amazonka.Data.Headers.ToHeaders Amazonka.EFS.DescribeMountTargets.DescribeMountTargets
instance Amazonka.Data.Path.ToPath Amazonka.EFS.DescribeMountTargets.DescribeMountTargets
instance Amazonka.Data.Query.ToQuery Amazonka.EFS.DescribeMountTargets.DescribeMountTargets


-- | Returns the security groups currently in effect for a mount target.
--   This operation requires that the network interface of the mount target
--   has been created and the lifecycle state of the mount target is not
--   <tt>deleted</tt>.
--   
--   This operation requires permissions for the following actions:
--   
--   <ul>
--   <li><tt>elasticfilesystem:DescribeMountTargetSecurityGroups</tt>
--   action on the mount target's file system.</li>
--   <li><tt>ec2:DescribeNetworkInterfaceAttribute</tt> action on the mount
--   target's network interface.</li>
--   </ul>
module Amazonka.EFS.DescribeMountTargetSecurityGroups

-- | <i>See:</i> <a>newDescribeMountTargetSecurityGroups</a> smart
--   constructor.
data DescribeMountTargetSecurityGroups
DescribeMountTargetSecurityGroups' :: Text -> DescribeMountTargetSecurityGroups

-- | The ID of the mount target whose security groups you want to retrieve.
[$sel:mountTargetId:DescribeMountTargetSecurityGroups'] :: DescribeMountTargetSecurityGroups -> Text

-- | Create a value of <a>DescribeMountTargetSecurityGroups</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mountTargetId:DescribeMountTargetSecurityGroups'</a>,
--   <a>describeMountTargetSecurityGroups_mountTargetId</a> - The ID of the
--   mount target whose security groups you want to retrieve.
newDescribeMountTargetSecurityGroups :: Text -> DescribeMountTargetSecurityGroups

-- | The ID of the mount target whose security groups you want to retrieve.
describeMountTargetSecurityGroups_mountTargetId :: Lens' DescribeMountTargetSecurityGroups Text

-- | <i>See:</i> <a>newDescribeMountTargetSecurityGroupsResponse</a> smart
--   constructor.
data DescribeMountTargetSecurityGroupsResponse
DescribeMountTargetSecurityGroupsResponse' :: Int -> [Text] -> DescribeMountTargetSecurityGroupsResponse

-- | The response's http status code.
[$sel:httpStatus:DescribeMountTargetSecurityGroupsResponse'] :: DescribeMountTargetSecurityGroupsResponse -> Int

-- | An array of security groups.
[$sel:securityGroups:DescribeMountTargetSecurityGroupsResponse'] :: DescribeMountTargetSecurityGroupsResponse -> [Text]

-- | Create a value of <a>DescribeMountTargetSecurityGroupsResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DescribeMountTargetSecurityGroupsResponse'</a>,
--   <a>describeMountTargetSecurityGroupsResponse_httpStatus</a> - The
--   response's http status code.
--   
--   <a>$sel:securityGroups:DescribeMountTargetSecurityGroupsResponse'</a>,
--   <a>describeMountTargetSecurityGroupsResponse_securityGroups</a> - An
--   array of security groups.
newDescribeMountTargetSecurityGroupsResponse :: Int -> DescribeMountTargetSecurityGroupsResponse

-- | The response's http status code.
describeMountTargetSecurityGroupsResponse_httpStatus :: Lens' DescribeMountTargetSecurityGroupsResponse Int

-- | An array of security groups.
describeMountTargetSecurityGroupsResponse_securityGroups :: Lens' DescribeMountTargetSecurityGroupsResponse [Text]
instance GHC.Generics.Generic Amazonka.EFS.DescribeMountTargetSecurityGroups.DescribeMountTargetSecurityGroups
instance GHC.Show.Show Amazonka.EFS.DescribeMountTargetSecurityGroups.DescribeMountTargetSecurityGroups
instance GHC.Read.Read Amazonka.EFS.DescribeMountTargetSecurityGroups.DescribeMountTargetSecurityGroups
instance GHC.Classes.Eq Amazonka.EFS.DescribeMountTargetSecurityGroups.DescribeMountTargetSecurityGroups
instance GHC.Generics.Generic Amazonka.EFS.DescribeMountTargetSecurityGroups.DescribeMountTargetSecurityGroupsResponse
instance GHC.Show.Show Amazonka.EFS.DescribeMountTargetSecurityGroups.DescribeMountTargetSecurityGroupsResponse
instance GHC.Read.Read Amazonka.EFS.DescribeMountTargetSecurityGroups.DescribeMountTargetSecurityGroupsResponse
instance GHC.Classes.Eq Amazonka.EFS.DescribeMountTargetSecurityGroups.DescribeMountTargetSecurityGroupsResponse
instance Amazonka.Types.AWSRequest Amazonka.EFS.DescribeMountTargetSecurityGroups.DescribeMountTargetSecurityGroups
instance Control.DeepSeq.NFData Amazonka.EFS.DescribeMountTargetSecurityGroups.DescribeMountTargetSecurityGroupsResponse
instance Data.Hashable.Class.Hashable Amazonka.EFS.DescribeMountTargetSecurityGroups.DescribeMountTargetSecurityGroups
instance Control.DeepSeq.NFData Amazonka.EFS.DescribeMountTargetSecurityGroups.DescribeMountTargetSecurityGroups
instance Amazonka.Data.Headers.ToHeaders Amazonka.EFS.DescribeMountTargetSecurityGroups.DescribeMountTargetSecurityGroups
instance Amazonka.Data.Path.ToPath Amazonka.EFS.DescribeMountTargetSecurityGroups.DescribeMountTargetSecurityGroups
instance Amazonka.Data.Query.ToQuery Amazonka.EFS.DescribeMountTargetSecurityGroups.DescribeMountTargetSecurityGroups


-- | Returns the current <tt>LifecycleConfiguration</tt> object for the
--   specified Amazon EFS file system. EFS lifecycle management uses the
--   <tt>LifecycleConfiguration</tt> object to identify which files to move
--   to the EFS Infrequent Access (IA) storage class. For a file system
--   without a <tt>LifecycleConfiguration</tt> object, the call returns an
--   empty array in the response.
--   
--   When EFS Intelligent Tiering is enabled,
--   <tt>TransitionToPrimaryStorageClass</tt> has a value of
--   <tt>AFTER_1_ACCESS</tt>.
--   
--   This operation requires permissions for the
--   <tt>elasticfilesystem:DescribeLifecycleConfiguration</tt> operation.
module Amazonka.EFS.DescribeLifecycleConfiguration

-- | <i>See:</i> <a>newDescribeLifecycleConfiguration</a> smart
--   constructor.
data DescribeLifecycleConfiguration
DescribeLifecycleConfiguration' :: Text -> DescribeLifecycleConfiguration

-- | The ID of the file system whose <tt>LifecycleConfiguration</tt> object
--   you want to retrieve (String).
[$sel:fileSystemId:DescribeLifecycleConfiguration'] :: DescribeLifecycleConfiguration -> Text

-- | Create a value of <a>DescribeLifecycleConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fileSystemId:DescribeLifecycleConfiguration'</a>,
--   <a>describeLifecycleConfiguration_fileSystemId</a> - The ID of the
--   file system whose <tt>LifecycleConfiguration</tt> object you want to
--   retrieve (String).
newDescribeLifecycleConfiguration :: Text -> DescribeLifecycleConfiguration

-- | The ID of the file system whose <tt>LifecycleConfiguration</tt> object
--   you want to retrieve (String).
describeLifecycleConfiguration_fileSystemId :: Lens' DescribeLifecycleConfiguration Text

-- | <i>See:</i> <a>newLifecycleConfigurationDescription</a> smart
--   constructor.
data LifecycleConfigurationDescription
LifecycleConfigurationDescription' :: Maybe [LifecyclePolicy] -> LifecycleConfigurationDescription

-- | An array of lifecycle management policies. EFS supports a maximum of
--   one policy per file system.
[$sel:lifecyclePolicies:LifecycleConfigurationDescription'] :: LifecycleConfigurationDescription -> Maybe [LifecyclePolicy]

-- | Create a value of <a>LifecycleConfigurationDescription</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lifecyclePolicies:LifecycleConfigurationDescription'</a>,
--   <a>lifecycleConfigurationDescription_lifecyclePolicies</a> - An array
--   of lifecycle management policies. EFS supports a maximum of one policy
--   per file system.
newLifecycleConfigurationDescription :: LifecycleConfigurationDescription

-- | An array of lifecycle management policies. EFS supports a maximum of
--   one policy per file system.
lifecycleConfigurationDescription_lifecyclePolicies :: Lens' LifecycleConfigurationDescription (Maybe [LifecyclePolicy])
instance GHC.Generics.Generic Amazonka.EFS.DescribeLifecycleConfiguration.DescribeLifecycleConfiguration
instance GHC.Show.Show Amazonka.EFS.DescribeLifecycleConfiguration.DescribeLifecycleConfiguration
instance GHC.Read.Read Amazonka.EFS.DescribeLifecycleConfiguration.DescribeLifecycleConfiguration
instance GHC.Classes.Eq Amazonka.EFS.DescribeLifecycleConfiguration.DescribeLifecycleConfiguration
instance Amazonka.Types.AWSRequest Amazonka.EFS.DescribeLifecycleConfiguration.DescribeLifecycleConfiguration
instance Data.Hashable.Class.Hashable Amazonka.EFS.DescribeLifecycleConfiguration.DescribeLifecycleConfiguration
instance Control.DeepSeq.NFData Amazonka.EFS.DescribeLifecycleConfiguration.DescribeLifecycleConfiguration
instance Amazonka.Data.Headers.ToHeaders Amazonka.EFS.DescribeLifecycleConfiguration.DescribeLifecycleConfiguration
instance Amazonka.Data.Path.ToPath Amazonka.EFS.DescribeLifecycleConfiguration.DescribeLifecycleConfiguration
instance Amazonka.Data.Query.ToQuery Amazonka.EFS.DescribeLifecycleConfiguration.DescribeLifecycleConfiguration


-- | Returns the description of a specific Amazon EFS file system if either
--   the file system <tt>CreationToken</tt> or the <tt>FileSystemId</tt> is
--   provided. Otherwise, it returns descriptions of all file systems owned
--   by the caller's Amazon Web Services account in the Amazon Web Services
--   Region of the endpoint that you're calling.
--   
--   When retrieving all file system descriptions, you can optionally
--   specify the <tt>MaxItems</tt> parameter to limit the number of
--   descriptions in a response. Currently, this number is automatically
--   set to 10. If more file system descriptions remain, Amazon EFS returns
--   a <tt>NextMarker</tt>, an opaque token, in the response. In this case,
--   you should send a subsequent request with the <tt>Marker</tt> request
--   parameter set to the value of <tt>NextMarker</tt>.
--   
--   To retrieve a list of your file system descriptions, this operation is
--   used in an iterative process, where <tt>DescribeFileSystems</tt> is
--   called first without the <tt>Marker</tt> and then the operation
--   continues to call it with the <tt>Marker</tt> parameter set to the
--   value of the <tt>NextMarker</tt> from the previous response until the
--   response has no <tt>NextMarker</tt>.
--   
--   The order of file systems returned in the response of one
--   <tt>DescribeFileSystems</tt> call and the order of file systems
--   returned across the responses of a multi-call iteration is
--   unspecified.
--   
--   This operation requires permissions for the
--   <tt>elasticfilesystem:DescribeFileSystems</tt> action.
--   
--   This operation returns paginated results.
module Amazonka.EFS.DescribeFileSystems

-- | <i>See:</i> <a>newDescribeFileSystems</a> smart constructor.
data DescribeFileSystems
DescribeFileSystems' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> DescribeFileSystems

-- | (Optional) ID of the file system whose description you want to
--   retrieve (String).
[$sel:fileSystemId:DescribeFileSystems'] :: DescribeFileSystems -> Maybe Text

-- | (Optional) Restricts the list to the file system with this creation
--   token (String). You specify a creation token when you create an Amazon
--   EFS file system.
[$sel:creationToken:DescribeFileSystems'] :: DescribeFileSystems -> Maybe Text

-- | (Optional) Opaque pagination token returned from a previous
--   <tt>DescribeFileSystems</tt> operation (String). If present, specifies
--   to continue the list from where the returning call had left off.
[$sel:marker:DescribeFileSystems'] :: DescribeFileSystems -> Maybe Text

-- | (Optional) Specifies the maximum number of file systems to return in
--   the response (integer). This number is automatically set to 100. The
--   response is paginated at 100 per page if you have more than 100 file
--   systems.
[$sel:maxItems:DescribeFileSystems'] :: DescribeFileSystems -> Maybe Natural

-- | Create a value of <a>DescribeFileSystems</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fileSystemId:DescribeFileSystems'</a>,
--   <a>describeFileSystems_fileSystemId</a> - (Optional) ID of the file
--   system whose description you want to retrieve (String).
--   
--   <a>$sel:creationToken:DescribeFileSystems'</a>,
--   <a>describeFileSystems_creationToken</a> - (Optional) Restricts the
--   list to the file system with this creation token (String). You specify
--   a creation token when you create an Amazon EFS file system.
--   
--   <a>$sel:marker:DescribeFileSystems'</a>,
--   <a>describeFileSystems_marker</a> - (Optional) Opaque pagination token
--   returned from a previous <tt>DescribeFileSystems</tt> operation
--   (String). If present, specifies to continue the list from where the
--   returning call had left off.
--   
--   <a>$sel:maxItems:DescribeFileSystems'</a>,
--   <a>describeFileSystems_maxItems</a> - (Optional) Specifies the maximum
--   number of file systems to return in the response (integer). This
--   number is automatically set to 100. The response is paginated at 100
--   per page if you have more than 100 file systems.
newDescribeFileSystems :: DescribeFileSystems

-- | (Optional) ID of the file system whose description you want to
--   retrieve (String).
describeFileSystems_fileSystemId :: Lens' DescribeFileSystems (Maybe Text)

-- | (Optional) Restricts the list to the file system with this creation
--   token (String). You specify a creation token when you create an Amazon
--   EFS file system.
describeFileSystems_creationToken :: Lens' DescribeFileSystems (Maybe Text)

-- | (Optional) Opaque pagination token returned from a previous
--   <tt>DescribeFileSystems</tt> operation (String). If present, specifies
--   to continue the list from where the returning call had left off.
describeFileSystems_marker :: Lens' DescribeFileSystems (Maybe Text)

-- | (Optional) Specifies the maximum number of file systems to return in
--   the response (integer). This number is automatically set to 100. The
--   response is paginated at 100 per page if you have more than 100 file
--   systems.
describeFileSystems_maxItems :: Lens' DescribeFileSystems (Maybe Natural)

-- | <i>See:</i> <a>newDescribeFileSystemsResponse</a> smart constructor.
data DescribeFileSystemsResponse
DescribeFileSystemsResponse' :: Maybe [FileSystemDescription] -> Maybe Text -> Maybe Text -> Int -> DescribeFileSystemsResponse

-- | An array of file system descriptions.
[$sel:fileSystems:DescribeFileSystemsResponse'] :: DescribeFileSystemsResponse -> Maybe [FileSystemDescription]

-- | Present if provided by caller in the request (String).
[$sel:marker:DescribeFileSystemsResponse'] :: DescribeFileSystemsResponse -> Maybe Text

-- | Present if there are more file systems than returned in the response
--   (String). You can use the <tt>NextMarker</tt> in the subsequent
--   request to fetch the descriptions.
[$sel:nextMarker:DescribeFileSystemsResponse'] :: DescribeFileSystemsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeFileSystemsResponse'] :: DescribeFileSystemsResponse -> Int

-- | Create a value of <a>DescribeFileSystemsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fileSystems:DescribeFileSystemsResponse'</a>,
--   <a>describeFileSystemsResponse_fileSystems</a> - An array of file
--   system descriptions.
--   
--   <a>$sel:marker:DescribeFileSystems'</a>,
--   <a>describeFileSystemsResponse_marker</a> - Present if provided by
--   caller in the request (String).
--   
--   <a>$sel:nextMarker:DescribeFileSystemsResponse'</a>,
--   <a>describeFileSystemsResponse_nextMarker</a> - Present if there are
--   more file systems than returned in the response (String). You can use
--   the <tt>NextMarker</tt> in the subsequent request to fetch the
--   descriptions.
--   
--   <a>$sel:httpStatus:DescribeFileSystemsResponse'</a>,
--   <a>describeFileSystemsResponse_httpStatus</a> - The response's http
--   status code.
newDescribeFileSystemsResponse :: Int -> DescribeFileSystemsResponse

-- | An array of file system descriptions.
describeFileSystemsResponse_fileSystems :: Lens' DescribeFileSystemsResponse (Maybe [FileSystemDescription])

-- | Present if provided by caller in the request (String).
describeFileSystemsResponse_marker :: Lens' DescribeFileSystemsResponse (Maybe Text)

-- | Present if there are more file systems than returned in the response
--   (String). You can use the <tt>NextMarker</tt> in the subsequent
--   request to fetch the descriptions.
describeFileSystemsResponse_nextMarker :: Lens' DescribeFileSystemsResponse (Maybe Text)

-- | The response's http status code.
describeFileSystemsResponse_httpStatus :: Lens' DescribeFileSystemsResponse Int
instance GHC.Generics.Generic Amazonka.EFS.DescribeFileSystems.DescribeFileSystems
instance GHC.Show.Show Amazonka.EFS.DescribeFileSystems.DescribeFileSystems
instance GHC.Read.Read Amazonka.EFS.DescribeFileSystems.DescribeFileSystems
instance GHC.Classes.Eq Amazonka.EFS.DescribeFileSystems.DescribeFileSystems
instance GHC.Generics.Generic Amazonka.EFS.DescribeFileSystems.DescribeFileSystemsResponse
instance GHC.Show.Show Amazonka.EFS.DescribeFileSystems.DescribeFileSystemsResponse
instance GHC.Read.Read Amazonka.EFS.DescribeFileSystems.DescribeFileSystemsResponse
instance GHC.Classes.Eq Amazonka.EFS.DescribeFileSystems.DescribeFileSystemsResponse
instance Amazonka.Types.AWSRequest Amazonka.EFS.DescribeFileSystems.DescribeFileSystems
instance Control.DeepSeq.NFData Amazonka.EFS.DescribeFileSystems.DescribeFileSystemsResponse
instance Amazonka.Pager.AWSPager Amazonka.EFS.DescribeFileSystems.DescribeFileSystems
instance Data.Hashable.Class.Hashable Amazonka.EFS.DescribeFileSystems.DescribeFileSystems
instance Control.DeepSeq.NFData Amazonka.EFS.DescribeFileSystems.DescribeFileSystems
instance Amazonka.Data.Headers.ToHeaders Amazonka.EFS.DescribeFileSystems.DescribeFileSystems
instance Amazonka.Data.Path.ToPath Amazonka.EFS.DescribeFileSystems.DescribeFileSystems
instance Amazonka.Data.Query.ToQuery Amazonka.EFS.DescribeFileSystems.DescribeFileSystems


-- | Returns the <tt>FileSystemPolicy</tt> for the specified EFS file
--   system.
--   
--   This operation requires permissions for the
--   <tt>elasticfilesystem:DescribeFileSystemPolicy</tt> action.
module Amazonka.EFS.DescribeFileSystemPolicy

-- | <i>See:</i> <a>newDescribeFileSystemPolicy</a> smart constructor.
data DescribeFileSystemPolicy
DescribeFileSystemPolicy' :: Text -> DescribeFileSystemPolicy

-- | Specifies which EFS file system to retrieve the
--   <tt>FileSystemPolicy</tt> for.
[$sel:fileSystemId:DescribeFileSystemPolicy'] :: DescribeFileSystemPolicy -> Text

-- | Create a value of <a>DescribeFileSystemPolicy</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fileSystemId:DescribeFileSystemPolicy'</a>,
--   <a>describeFileSystemPolicy_fileSystemId</a> - Specifies which EFS
--   file system to retrieve the <tt>FileSystemPolicy</tt> for.
newDescribeFileSystemPolicy :: Text -> DescribeFileSystemPolicy

-- | Specifies which EFS file system to retrieve the
--   <tt>FileSystemPolicy</tt> for.
describeFileSystemPolicy_fileSystemId :: Lens' DescribeFileSystemPolicy Text

-- | <i>See:</i> <a>newFileSystemPolicyDescription</a> smart constructor.
data FileSystemPolicyDescription
FileSystemPolicyDescription' :: Maybe Text -> Maybe Text -> FileSystemPolicyDescription

-- | Specifies the EFS file system to which the <tt>FileSystemPolicy</tt>
--   applies.
[$sel:fileSystemId:FileSystemPolicyDescription'] :: FileSystemPolicyDescription -> Maybe Text

-- | The JSON formatted <tt>FileSystemPolicy</tt> for the EFS file system.
[$sel:policy:FileSystemPolicyDescription'] :: FileSystemPolicyDescription -> Maybe Text

-- | Create a value of <a>FileSystemPolicyDescription</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fileSystemId:FileSystemPolicyDescription'</a>,
--   <a>fileSystemPolicyDescription_fileSystemId</a> - Specifies the EFS
--   file system to which the <tt>FileSystemPolicy</tt> applies.
--   
--   <a>$sel:policy:FileSystemPolicyDescription'</a>,
--   <a>fileSystemPolicyDescription_policy</a> - The JSON formatted
--   <tt>FileSystemPolicy</tt> for the EFS file system.
newFileSystemPolicyDescription :: FileSystemPolicyDescription

-- | Specifies the EFS file system to which the <tt>FileSystemPolicy</tt>
--   applies.
fileSystemPolicyDescription_fileSystemId :: Lens' FileSystemPolicyDescription (Maybe Text)

-- | The JSON formatted <tt>FileSystemPolicy</tt> for the EFS file system.
fileSystemPolicyDescription_policy :: Lens' FileSystemPolicyDescription (Maybe Text)
instance GHC.Generics.Generic Amazonka.EFS.DescribeFileSystemPolicy.DescribeFileSystemPolicy
instance GHC.Show.Show Amazonka.EFS.DescribeFileSystemPolicy.DescribeFileSystemPolicy
instance GHC.Read.Read Amazonka.EFS.DescribeFileSystemPolicy.DescribeFileSystemPolicy
instance GHC.Classes.Eq Amazonka.EFS.DescribeFileSystemPolicy.DescribeFileSystemPolicy
instance Amazonka.Types.AWSRequest Amazonka.EFS.DescribeFileSystemPolicy.DescribeFileSystemPolicy
instance Data.Hashable.Class.Hashable Amazonka.EFS.DescribeFileSystemPolicy.DescribeFileSystemPolicy
instance Control.DeepSeq.NFData Amazonka.EFS.DescribeFileSystemPolicy.DescribeFileSystemPolicy
instance Amazonka.Data.Headers.ToHeaders Amazonka.EFS.DescribeFileSystemPolicy.DescribeFileSystemPolicy
instance Amazonka.Data.Path.ToPath Amazonka.EFS.DescribeFileSystemPolicy.DescribeFileSystemPolicy
instance Amazonka.Data.Query.ToQuery Amazonka.EFS.DescribeFileSystemPolicy.DescribeFileSystemPolicy


-- | Returns the backup policy for the specified EFS file system.
module Amazonka.EFS.DescribeBackupPolicy

-- | <i>See:</i> <a>newDescribeBackupPolicy</a> smart constructor.
data DescribeBackupPolicy
DescribeBackupPolicy' :: Text -> DescribeBackupPolicy

-- | Specifies which EFS file system to retrieve the <tt>BackupPolicy</tt>
--   for.
[$sel:fileSystemId:DescribeBackupPolicy'] :: DescribeBackupPolicy -> Text

-- | Create a value of <a>DescribeBackupPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fileSystemId:DescribeBackupPolicy'</a>,
--   <a>describeBackupPolicy_fileSystemId</a> - Specifies which EFS file
--   system to retrieve the <tt>BackupPolicy</tt> for.
newDescribeBackupPolicy :: Text -> DescribeBackupPolicy

-- | Specifies which EFS file system to retrieve the <tt>BackupPolicy</tt>
--   for.
describeBackupPolicy_fileSystemId :: Lens' DescribeBackupPolicy Text

-- | <i>See:</i> <a>newBackupPolicyDescription</a> smart constructor.
data BackupPolicyDescription
BackupPolicyDescription' :: Maybe BackupPolicy -> BackupPolicyDescription

-- | Describes the file system's backup policy, indicating whether
--   automatic backups are turned on or off..
[$sel:backupPolicy:BackupPolicyDescription'] :: BackupPolicyDescription -> Maybe BackupPolicy

-- | Create a value of <a>BackupPolicyDescription</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:backupPolicy:BackupPolicyDescription'</a>,
--   <a>backupPolicyDescription_backupPolicy</a> - Describes the file
--   system's backup policy, indicating whether automatic backups are
--   turned on or off..
newBackupPolicyDescription :: BackupPolicyDescription

-- | Describes the file system's backup policy, indicating whether
--   automatic backups are turned on or off..
backupPolicyDescription_backupPolicy :: Lens' BackupPolicyDescription (Maybe BackupPolicy)
instance GHC.Generics.Generic Amazonka.EFS.DescribeBackupPolicy.DescribeBackupPolicy
instance GHC.Show.Show Amazonka.EFS.DescribeBackupPolicy.DescribeBackupPolicy
instance GHC.Read.Read Amazonka.EFS.DescribeBackupPolicy.DescribeBackupPolicy
instance GHC.Classes.Eq Amazonka.EFS.DescribeBackupPolicy.DescribeBackupPolicy
instance Amazonka.Types.AWSRequest Amazonka.EFS.DescribeBackupPolicy.DescribeBackupPolicy
instance Data.Hashable.Class.Hashable Amazonka.EFS.DescribeBackupPolicy.DescribeBackupPolicy
instance Control.DeepSeq.NFData Amazonka.EFS.DescribeBackupPolicy.DescribeBackupPolicy
instance Amazonka.Data.Headers.ToHeaders Amazonka.EFS.DescribeBackupPolicy.DescribeBackupPolicy
instance Amazonka.Data.Path.ToPath Amazonka.EFS.DescribeBackupPolicy.DescribeBackupPolicy
instance Amazonka.Data.Query.ToQuery Amazonka.EFS.DescribeBackupPolicy.DescribeBackupPolicy


-- | Returns the account preferences settings for the Amazon Web Services
--   account associated with the user making the request, in the current
--   Amazon Web Services Region. For more information, see <a>Managing
--   Amazon EFS resource IDs</a>.
module Amazonka.EFS.DescribeAccountPreferences

-- | <i>See:</i> <a>newDescribeAccountPreferences</a> smart constructor.
data DescribeAccountPreferences
DescribeAccountPreferences' :: Maybe Text -> Maybe Natural -> DescribeAccountPreferences

-- | (Optional) You can use <tt>NextToken</tt> in a subsequent request to
--   fetch the next page of Amazon Web Services account preferences if the
--   response payload was paginated.
[$sel:nextToken:DescribeAccountPreferences'] :: DescribeAccountPreferences -> Maybe Text

-- | (Optional) When retrieving account preferences, you can optionally
--   specify the <tt>MaxItems</tt> parameter to limit the number of objects
--   returned in a response. The default value is 100.
[$sel:maxResults:DescribeAccountPreferences'] :: DescribeAccountPreferences -> Maybe Natural

-- | Create a value of <a>DescribeAccountPreferences</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeAccountPreferences'</a>,
--   <a>describeAccountPreferences_nextToken</a> - (Optional) You can use
--   <tt>NextToken</tt> in a subsequent request to fetch the next page of
--   Amazon Web Services account preferences if the response payload was
--   paginated.
--   
--   <a>$sel:maxResults:DescribeAccountPreferences'</a>,
--   <a>describeAccountPreferences_maxResults</a> - (Optional) When
--   retrieving account preferences, you can optionally specify the
--   <tt>MaxItems</tt> parameter to limit the number of objects returned in
--   a response. The default value is 100.
newDescribeAccountPreferences :: DescribeAccountPreferences

-- | (Optional) You can use <tt>NextToken</tt> in a subsequent request to
--   fetch the next page of Amazon Web Services account preferences if the
--   response payload was paginated.
describeAccountPreferences_nextToken :: Lens' DescribeAccountPreferences (Maybe Text)

-- | (Optional) When retrieving account preferences, you can optionally
--   specify the <tt>MaxItems</tt> parameter to limit the number of objects
--   returned in a response. The default value is 100.
describeAccountPreferences_maxResults :: Lens' DescribeAccountPreferences (Maybe Natural)

-- | <i>See:</i> <a>newDescribeAccountPreferencesResponse</a> smart
--   constructor.
data DescribeAccountPreferencesResponse
DescribeAccountPreferencesResponse' :: Maybe ResourceIdPreference -> Maybe Text -> Int -> DescribeAccountPreferencesResponse

-- | Describes the resource ID preference setting for the Amazon Web
--   Services account associated with the user making the request, in the
--   current Amazon Web Services Region.
[$sel:resourceIdPreference:DescribeAccountPreferencesResponse'] :: DescribeAccountPreferencesResponse -> Maybe ResourceIdPreference

-- | Present if there are more records than returned in the response. You
--   can use the <tt>NextToken</tt> in the subsequent request to fetch the
--   additional descriptions.
[$sel:nextToken:DescribeAccountPreferencesResponse'] :: DescribeAccountPreferencesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeAccountPreferencesResponse'] :: DescribeAccountPreferencesResponse -> Int

-- | Create a value of <a>DescribeAccountPreferencesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceIdPreference:DescribeAccountPreferencesResponse'</a>,
--   <a>describeAccountPreferencesResponse_resourceIdPreference</a> -
--   Describes the resource ID preference setting for the Amazon Web
--   Services account associated with the user making the request, in the
--   current Amazon Web Services Region.
--   
--   <a>$sel:nextToken:DescribeAccountPreferences'</a>,
--   <a>describeAccountPreferencesResponse_nextToken</a> - Present if there
--   are more records than returned in the response. You can use the
--   <tt>NextToken</tt> in the subsequent request to fetch the additional
--   descriptions.
--   
--   <a>$sel:httpStatus:DescribeAccountPreferencesResponse'</a>,
--   <a>describeAccountPreferencesResponse_httpStatus</a> - The response's
--   http status code.
newDescribeAccountPreferencesResponse :: Int -> DescribeAccountPreferencesResponse

-- | Describes the resource ID preference setting for the Amazon Web
--   Services account associated with the user making the request, in the
--   current Amazon Web Services Region.
describeAccountPreferencesResponse_resourceIdPreference :: Lens' DescribeAccountPreferencesResponse (Maybe ResourceIdPreference)

-- | Present if there are more records than returned in the response. You
--   can use the <tt>NextToken</tt> in the subsequent request to fetch the
--   additional descriptions.
describeAccountPreferencesResponse_nextToken :: Lens' DescribeAccountPreferencesResponse (Maybe Text)

-- | The response's http status code.
describeAccountPreferencesResponse_httpStatus :: Lens' DescribeAccountPreferencesResponse Int
instance GHC.Generics.Generic Amazonka.EFS.DescribeAccountPreferences.DescribeAccountPreferences
instance GHC.Show.Show Amazonka.EFS.DescribeAccountPreferences.DescribeAccountPreferences
instance GHC.Read.Read Amazonka.EFS.DescribeAccountPreferences.DescribeAccountPreferences
instance GHC.Classes.Eq Amazonka.EFS.DescribeAccountPreferences.DescribeAccountPreferences
instance GHC.Generics.Generic Amazonka.EFS.DescribeAccountPreferences.DescribeAccountPreferencesResponse
instance GHC.Show.Show Amazonka.EFS.DescribeAccountPreferences.DescribeAccountPreferencesResponse
instance GHC.Read.Read Amazonka.EFS.DescribeAccountPreferences.DescribeAccountPreferencesResponse
instance GHC.Classes.Eq Amazonka.EFS.DescribeAccountPreferences.DescribeAccountPreferencesResponse
instance Amazonka.Types.AWSRequest Amazonka.EFS.DescribeAccountPreferences.DescribeAccountPreferences
instance Control.DeepSeq.NFData Amazonka.EFS.DescribeAccountPreferences.DescribeAccountPreferencesResponse
instance Data.Hashable.Class.Hashable Amazonka.EFS.DescribeAccountPreferences.DescribeAccountPreferences
instance Control.DeepSeq.NFData Amazonka.EFS.DescribeAccountPreferences.DescribeAccountPreferences
instance Amazonka.Data.Headers.ToHeaders Amazonka.EFS.DescribeAccountPreferences.DescribeAccountPreferences
instance Amazonka.Data.Path.ToPath Amazonka.EFS.DescribeAccountPreferences.DescribeAccountPreferences
instance Amazonka.Data.Query.ToQuery Amazonka.EFS.DescribeAccountPreferences.DescribeAccountPreferences


-- | Returns the description of a specific Amazon EFS access point if the
--   <tt>AccessPointId</tt> is provided. If you provide an EFS
--   <tt>FileSystemId</tt>, it returns descriptions of all access points
--   for that file system. You can provide either an <tt>AccessPointId</tt>
--   or a <tt>FileSystemId</tt> in the request, but not both.
--   
--   This operation requires permissions for the
--   <tt>elasticfilesystem:DescribeAccessPoints</tt> action.
module Amazonka.EFS.DescribeAccessPoints

-- | <i>See:</i> <a>newDescribeAccessPoints</a> smart constructor.
data DescribeAccessPoints
DescribeAccessPoints' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> DescribeAccessPoints

-- | (Optional) Specifies an EFS access point to describe in the response;
--   mutually exclusive with <tt>FileSystemId</tt>.
[$sel:accessPointId:DescribeAccessPoints'] :: DescribeAccessPoints -> Maybe Text

-- | (Optional) If you provide a <tt>FileSystemId</tt>, EFS returns all
--   access points for that file system; mutually exclusive with
--   <tt>AccessPointId</tt>.
[$sel:fileSystemId:DescribeAccessPoints'] :: DescribeAccessPoints -> Maybe Text

-- | <tt>NextToken</tt> is present if the response is paginated. You can
--   use <tt>NextMarker</tt> in the subsequent request to fetch the next
--   page of access point descriptions.
[$sel:nextToken:DescribeAccessPoints'] :: DescribeAccessPoints -> Maybe Text

-- | (Optional) When retrieving all access points for a file system, you
--   can optionally specify the <tt>MaxItems</tt> parameter to limit the
--   number of objects returned in a response. The default value is 100.
[$sel:maxResults:DescribeAccessPoints'] :: DescribeAccessPoints -> Maybe Natural

-- | Create a value of <a>DescribeAccessPoints</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accessPointId:DescribeAccessPoints'</a>,
--   <a>describeAccessPoints_accessPointId</a> - (Optional) Specifies an
--   EFS access point to describe in the response; mutually exclusive with
--   <tt>FileSystemId</tt>.
--   
--   <a>$sel:fileSystemId:DescribeAccessPoints'</a>,
--   <a>describeAccessPoints_fileSystemId</a> - (Optional) If you provide a
--   <tt>FileSystemId</tt>, EFS returns all access points for that file
--   system; mutually exclusive with <tt>AccessPointId</tt>.
--   
--   <a>$sel:nextToken:DescribeAccessPoints'</a>,
--   <a>describeAccessPoints_nextToken</a> - <tt>NextToken</tt> is present
--   if the response is paginated. You can use <tt>NextMarker</tt> in the
--   subsequent request to fetch the next page of access point
--   descriptions.
--   
--   <a>$sel:maxResults:DescribeAccessPoints'</a>,
--   <a>describeAccessPoints_maxResults</a> - (Optional) When retrieving
--   all access points for a file system, you can optionally specify the
--   <tt>MaxItems</tt> parameter to limit the number of objects returned in
--   a response. The default value is 100.
newDescribeAccessPoints :: DescribeAccessPoints

-- | (Optional) Specifies an EFS access point to describe in the response;
--   mutually exclusive with <tt>FileSystemId</tt>.
describeAccessPoints_accessPointId :: Lens' DescribeAccessPoints (Maybe Text)

-- | (Optional) If you provide a <tt>FileSystemId</tt>, EFS returns all
--   access points for that file system; mutually exclusive with
--   <tt>AccessPointId</tt>.
describeAccessPoints_fileSystemId :: Lens' DescribeAccessPoints (Maybe Text)

-- | <tt>NextToken</tt> is present if the response is paginated. You can
--   use <tt>NextMarker</tt> in the subsequent request to fetch the next
--   page of access point descriptions.
describeAccessPoints_nextToken :: Lens' DescribeAccessPoints (Maybe Text)

-- | (Optional) When retrieving all access points for a file system, you
--   can optionally specify the <tt>MaxItems</tt> parameter to limit the
--   number of objects returned in a response. The default value is 100.
describeAccessPoints_maxResults :: Lens' DescribeAccessPoints (Maybe Natural)

-- | <i>See:</i> <a>newDescribeAccessPointsResponse</a> smart constructor.
data DescribeAccessPointsResponse
DescribeAccessPointsResponse' :: Maybe [AccessPointDescription] -> Maybe Text -> Int -> DescribeAccessPointsResponse

-- | An array of access point descriptions.
[$sel:accessPoints:DescribeAccessPointsResponse'] :: DescribeAccessPointsResponse -> Maybe [AccessPointDescription]

-- | Present if there are more access points than returned in the response.
--   You can use the NextMarker in the subsequent request to fetch the
--   additional descriptions.
[$sel:nextToken:DescribeAccessPointsResponse'] :: DescribeAccessPointsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeAccessPointsResponse'] :: DescribeAccessPointsResponse -> Int

-- | Create a value of <a>DescribeAccessPointsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accessPoints:DescribeAccessPointsResponse'</a>,
--   <a>describeAccessPointsResponse_accessPoints</a> - An array of access
--   point descriptions.
--   
--   <a>$sel:nextToken:DescribeAccessPoints'</a>,
--   <a>describeAccessPointsResponse_nextToken</a> - Present if there are
--   more access points than returned in the response. You can use the
--   NextMarker in the subsequent request to fetch the additional
--   descriptions.
--   
--   <a>$sel:httpStatus:DescribeAccessPointsResponse'</a>,
--   <a>describeAccessPointsResponse_httpStatus</a> - The response's http
--   status code.
newDescribeAccessPointsResponse :: Int -> DescribeAccessPointsResponse

-- | An array of access point descriptions.
describeAccessPointsResponse_accessPoints :: Lens' DescribeAccessPointsResponse (Maybe [AccessPointDescription])

-- | Present if there are more access points than returned in the response.
--   You can use the NextMarker in the subsequent request to fetch the
--   additional descriptions.
describeAccessPointsResponse_nextToken :: Lens' DescribeAccessPointsResponse (Maybe Text)

-- | The response's http status code.
describeAccessPointsResponse_httpStatus :: Lens' DescribeAccessPointsResponse Int
instance GHC.Generics.Generic Amazonka.EFS.DescribeAccessPoints.DescribeAccessPoints
instance GHC.Show.Show Amazonka.EFS.DescribeAccessPoints.DescribeAccessPoints
instance GHC.Read.Read Amazonka.EFS.DescribeAccessPoints.DescribeAccessPoints
instance GHC.Classes.Eq Amazonka.EFS.DescribeAccessPoints.DescribeAccessPoints
instance GHC.Generics.Generic Amazonka.EFS.DescribeAccessPoints.DescribeAccessPointsResponse
instance GHC.Show.Show Amazonka.EFS.DescribeAccessPoints.DescribeAccessPointsResponse
instance GHC.Read.Read Amazonka.EFS.DescribeAccessPoints.DescribeAccessPointsResponse
instance GHC.Classes.Eq Amazonka.EFS.DescribeAccessPoints.DescribeAccessPointsResponse
instance Amazonka.Types.AWSRequest Amazonka.EFS.DescribeAccessPoints.DescribeAccessPoints
instance Control.DeepSeq.NFData Amazonka.EFS.DescribeAccessPoints.DescribeAccessPointsResponse
instance Data.Hashable.Class.Hashable Amazonka.EFS.DescribeAccessPoints.DescribeAccessPoints
instance Control.DeepSeq.NFData Amazonka.EFS.DescribeAccessPoints.DescribeAccessPoints
instance Amazonka.Data.Headers.ToHeaders Amazonka.EFS.DescribeAccessPoints.DescribeAccessPoints
instance Amazonka.Data.Path.ToPath Amazonka.EFS.DescribeAccessPoints.DescribeAccessPoints
instance Amazonka.Data.Query.ToQuery Amazonka.EFS.DescribeAccessPoints.DescribeAccessPoints


-- | Deletes the specified mount target.
--   
--   This operation forcibly breaks any mounts of the file system by using
--   the mount target that is being deleted, which might disrupt instances
--   or applications using those mounts. To avoid applications getting cut
--   off abruptly, you might consider unmounting any mounts of the mount
--   target, if feasible. The operation also deletes the associated network
--   interface. Uncommitted writes might be lost, but breaking a mount
--   target using this operation does not corrupt the file system itself.
--   The file system you created remains. You can mount an EC2 instance in
--   your VPC by using another mount target.
--   
--   This operation requires permissions for the following action on the
--   file system:
--   
--   <ul>
--   <li><pre>elasticfilesystem:DeleteMountTarget</pre></li>
--   </ul>
--   
--   The <tt>DeleteMountTarget</tt> call returns while the mount target
--   state is still <tt>deleting</tt>. You can check the mount target
--   deletion by calling the DescribeMountTargets operation, which returns
--   a list of mount target descriptions for the given file system.
--   
--   The operation also requires permissions for the following Amazon EC2
--   action on the mount target's network interface:
--   
--   <ul>
--   <li><pre>ec2:DeleteNetworkInterface</pre></li>
--   </ul>
module Amazonka.EFS.DeleteMountTarget

-- | <i>See:</i> <a>newDeleteMountTarget</a> smart constructor.
data DeleteMountTarget
DeleteMountTarget' :: Text -> DeleteMountTarget

-- | The ID of the mount target to delete (String).
[$sel:mountTargetId:DeleteMountTarget'] :: DeleteMountTarget -> Text

-- | Create a value of <a>DeleteMountTarget</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mountTargetId:DeleteMountTarget'</a>,
--   <a>deleteMountTarget_mountTargetId</a> - The ID of the mount target to
--   delete (String).
newDeleteMountTarget :: Text -> DeleteMountTarget

-- | The ID of the mount target to delete (String).
deleteMountTarget_mountTargetId :: Lens' DeleteMountTarget Text

-- | <i>See:</i> <a>newDeleteMountTargetResponse</a> smart constructor.
data DeleteMountTargetResponse
DeleteMountTargetResponse' :: DeleteMountTargetResponse

-- | Create a value of <a>DeleteMountTargetResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteMountTargetResponse :: DeleteMountTargetResponse
instance GHC.Generics.Generic Amazonka.EFS.DeleteMountTarget.DeleteMountTarget
instance GHC.Show.Show Amazonka.EFS.DeleteMountTarget.DeleteMountTarget
instance GHC.Read.Read Amazonka.EFS.DeleteMountTarget.DeleteMountTarget
instance GHC.Classes.Eq Amazonka.EFS.DeleteMountTarget.DeleteMountTarget
instance GHC.Generics.Generic Amazonka.EFS.DeleteMountTarget.DeleteMountTargetResponse
instance GHC.Show.Show Amazonka.EFS.DeleteMountTarget.DeleteMountTargetResponse
instance GHC.Read.Read Amazonka.EFS.DeleteMountTarget.DeleteMountTargetResponse
instance GHC.Classes.Eq Amazonka.EFS.DeleteMountTarget.DeleteMountTargetResponse
instance Amazonka.Types.AWSRequest Amazonka.EFS.DeleteMountTarget.DeleteMountTarget
instance Control.DeepSeq.NFData Amazonka.EFS.DeleteMountTarget.DeleteMountTargetResponse
instance Data.Hashable.Class.Hashable Amazonka.EFS.DeleteMountTarget.DeleteMountTarget
instance Control.DeepSeq.NFData Amazonka.EFS.DeleteMountTarget.DeleteMountTarget
instance Amazonka.Data.Headers.ToHeaders Amazonka.EFS.DeleteMountTarget.DeleteMountTarget
instance Amazonka.Data.Path.ToPath Amazonka.EFS.DeleteMountTarget.DeleteMountTarget
instance Amazonka.Data.Query.ToQuery Amazonka.EFS.DeleteMountTarget.DeleteMountTarget


-- | Deletes the <tt>FileSystemPolicy</tt> for the specified file system.
--   The default <tt>FileSystemPolicy</tt> goes into effect once the
--   existing policy is deleted. For more information about the default
--   file system policy, see <a>Using Resource-based Policies with EFS</a>.
--   
--   This operation requires permissions for the
--   <tt>elasticfilesystem:DeleteFileSystemPolicy</tt> action.
module Amazonka.EFS.DeleteFileSystemPolicy

-- | <i>See:</i> <a>newDeleteFileSystemPolicy</a> smart constructor.
data DeleteFileSystemPolicy
DeleteFileSystemPolicy' :: Text -> DeleteFileSystemPolicy

-- | Specifies the EFS file system for which to delete the
--   <tt>FileSystemPolicy</tt>.
[$sel:fileSystemId:DeleteFileSystemPolicy'] :: DeleteFileSystemPolicy -> Text

-- | Create a value of <a>DeleteFileSystemPolicy</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fileSystemId:DeleteFileSystemPolicy'</a>,
--   <a>deleteFileSystemPolicy_fileSystemId</a> - Specifies the EFS file
--   system for which to delete the <tt>FileSystemPolicy</tt>.
newDeleteFileSystemPolicy :: Text -> DeleteFileSystemPolicy

-- | Specifies the EFS file system for which to delete the
--   <tt>FileSystemPolicy</tt>.
deleteFileSystemPolicy_fileSystemId :: Lens' DeleteFileSystemPolicy Text

-- | <i>See:</i> <a>newDeleteFileSystemPolicyResponse</a> smart
--   constructor.
data DeleteFileSystemPolicyResponse
DeleteFileSystemPolicyResponse' :: DeleteFileSystemPolicyResponse

-- | Create a value of <a>DeleteFileSystemPolicyResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteFileSystemPolicyResponse :: DeleteFileSystemPolicyResponse
instance GHC.Generics.Generic Amazonka.EFS.DeleteFileSystemPolicy.DeleteFileSystemPolicy
instance GHC.Show.Show Amazonka.EFS.DeleteFileSystemPolicy.DeleteFileSystemPolicy
instance GHC.Read.Read Amazonka.EFS.DeleteFileSystemPolicy.DeleteFileSystemPolicy
instance GHC.Classes.Eq Amazonka.EFS.DeleteFileSystemPolicy.DeleteFileSystemPolicy
instance GHC.Generics.Generic Amazonka.EFS.DeleteFileSystemPolicy.DeleteFileSystemPolicyResponse
instance GHC.Show.Show Amazonka.EFS.DeleteFileSystemPolicy.DeleteFileSystemPolicyResponse
instance GHC.Read.Read Amazonka.EFS.DeleteFileSystemPolicy.DeleteFileSystemPolicyResponse
instance GHC.Classes.Eq Amazonka.EFS.DeleteFileSystemPolicy.DeleteFileSystemPolicyResponse
instance Amazonka.Types.AWSRequest Amazonka.EFS.DeleteFileSystemPolicy.DeleteFileSystemPolicy
instance Control.DeepSeq.NFData Amazonka.EFS.DeleteFileSystemPolicy.DeleteFileSystemPolicyResponse
instance Data.Hashable.Class.Hashable Amazonka.EFS.DeleteFileSystemPolicy.DeleteFileSystemPolicy
instance Control.DeepSeq.NFData Amazonka.EFS.DeleteFileSystemPolicy.DeleteFileSystemPolicy
instance Amazonka.Data.Headers.ToHeaders Amazonka.EFS.DeleteFileSystemPolicy.DeleteFileSystemPolicy
instance Amazonka.Data.Path.ToPath Amazonka.EFS.DeleteFileSystemPolicy.DeleteFileSystemPolicy
instance Amazonka.Data.Query.ToQuery Amazonka.EFS.DeleteFileSystemPolicy.DeleteFileSystemPolicy


-- | Deletes a file system, permanently severing access to its contents.
--   Upon return, the file system no longer exists and you can't access any
--   contents of the deleted file system.
--   
--   You can't delete a file system that is in use. That is, if the file
--   system has any mount targets, you must first delete them. For more
--   information, see DescribeMountTargets and DeleteMountTarget.
--   
--   The <tt>DeleteFileSystem</tt> call returns while the file system state
--   is still <tt>deleting</tt>. You can check the file system deletion
--   status by calling the DescribeFileSystems operation, which returns a
--   list of file systems in your account. If you pass file system ID or
--   creation token for the deleted file system, the DescribeFileSystems
--   returns a <tt>404 FileSystemNotFound</tt> error.
--   
--   This operation requires permissions for the
--   <tt>elasticfilesystem:DeleteFileSystem</tt> action.
module Amazonka.EFS.DeleteFileSystem

-- | <i>See:</i> <a>newDeleteFileSystem</a> smart constructor.
data DeleteFileSystem
DeleteFileSystem' :: Text -> DeleteFileSystem

-- | The ID of the file system you want to delete.
[$sel:fileSystemId:DeleteFileSystem'] :: DeleteFileSystem -> Text

-- | Create a value of <a>DeleteFileSystem</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fileSystemId:DeleteFileSystem'</a>,
--   <a>deleteFileSystem_fileSystemId</a> - The ID of the file system you
--   want to delete.
newDeleteFileSystem :: Text -> DeleteFileSystem

-- | The ID of the file system you want to delete.
deleteFileSystem_fileSystemId :: Lens' DeleteFileSystem Text

-- | <i>See:</i> <a>newDeleteFileSystemResponse</a> smart constructor.
data DeleteFileSystemResponse
DeleteFileSystemResponse' :: DeleteFileSystemResponse

-- | Create a value of <a>DeleteFileSystemResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteFileSystemResponse :: DeleteFileSystemResponse
instance GHC.Generics.Generic Amazonka.EFS.DeleteFileSystem.DeleteFileSystem
instance GHC.Show.Show Amazonka.EFS.DeleteFileSystem.DeleteFileSystem
instance GHC.Read.Read Amazonka.EFS.DeleteFileSystem.DeleteFileSystem
instance GHC.Classes.Eq Amazonka.EFS.DeleteFileSystem.DeleteFileSystem
instance GHC.Generics.Generic Amazonka.EFS.DeleteFileSystem.DeleteFileSystemResponse
instance GHC.Show.Show Amazonka.EFS.DeleteFileSystem.DeleteFileSystemResponse
instance GHC.Read.Read Amazonka.EFS.DeleteFileSystem.DeleteFileSystemResponse
instance GHC.Classes.Eq Amazonka.EFS.DeleteFileSystem.DeleteFileSystemResponse
instance Amazonka.Types.AWSRequest Amazonka.EFS.DeleteFileSystem.DeleteFileSystem
instance Control.DeepSeq.NFData Amazonka.EFS.DeleteFileSystem.DeleteFileSystemResponse
instance Data.Hashable.Class.Hashable Amazonka.EFS.DeleteFileSystem.DeleteFileSystem
instance Control.DeepSeq.NFData Amazonka.EFS.DeleteFileSystem.DeleteFileSystem
instance Amazonka.Data.Headers.ToHeaders Amazonka.EFS.DeleteFileSystem.DeleteFileSystem
instance Amazonka.Data.Path.ToPath Amazonka.EFS.DeleteFileSystem.DeleteFileSystem
instance Amazonka.Data.Query.ToQuery Amazonka.EFS.DeleteFileSystem.DeleteFileSystem


-- | Deletes the specified access point. After deletion is complete, new
--   clients can no longer connect to the access points. Clients connected
--   to the access point at the time of deletion will continue to function
--   until they terminate their connection.
--   
--   This operation requires permissions for the
--   <tt>elasticfilesystem:DeleteAccessPoint</tt> action.
module Amazonka.EFS.DeleteAccessPoint

-- | <i>See:</i> <a>newDeleteAccessPoint</a> smart constructor.
data DeleteAccessPoint
DeleteAccessPoint' :: Text -> DeleteAccessPoint

-- | The ID of the access point that you want to delete.
[$sel:accessPointId:DeleteAccessPoint'] :: DeleteAccessPoint -> Text

-- | Create a value of <a>DeleteAccessPoint</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accessPointId:DeleteAccessPoint'</a>,
--   <a>deleteAccessPoint_accessPointId</a> - The ID of the access point
--   that you want to delete.
newDeleteAccessPoint :: Text -> DeleteAccessPoint

-- | The ID of the access point that you want to delete.
deleteAccessPoint_accessPointId :: Lens' DeleteAccessPoint Text

-- | <i>See:</i> <a>newDeleteAccessPointResponse</a> smart constructor.
data DeleteAccessPointResponse
DeleteAccessPointResponse' :: DeleteAccessPointResponse

-- | Create a value of <a>DeleteAccessPointResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteAccessPointResponse :: DeleteAccessPointResponse
instance GHC.Generics.Generic Amazonka.EFS.DeleteAccessPoint.DeleteAccessPoint
instance GHC.Show.Show Amazonka.EFS.DeleteAccessPoint.DeleteAccessPoint
instance GHC.Read.Read Amazonka.EFS.DeleteAccessPoint.DeleteAccessPoint
instance GHC.Classes.Eq Amazonka.EFS.DeleteAccessPoint.DeleteAccessPoint
instance GHC.Generics.Generic Amazonka.EFS.DeleteAccessPoint.DeleteAccessPointResponse
instance GHC.Show.Show Amazonka.EFS.DeleteAccessPoint.DeleteAccessPointResponse
instance GHC.Read.Read Amazonka.EFS.DeleteAccessPoint.DeleteAccessPointResponse
instance GHC.Classes.Eq Amazonka.EFS.DeleteAccessPoint.DeleteAccessPointResponse
instance Amazonka.Types.AWSRequest Amazonka.EFS.DeleteAccessPoint.DeleteAccessPoint
instance Control.DeepSeq.NFData Amazonka.EFS.DeleteAccessPoint.DeleteAccessPointResponse
instance Data.Hashable.Class.Hashable Amazonka.EFS.DeleteAccessPoint.DeleteAccessPoint
instance Control.DeepSeq.NFData Amazonka.EFS.DeleteAccessPoint.DeleteAccessPoint
instance Amazonka.Data.Headers.ToHeaders Amazonka.EFS.DeleteAccessPoint.DeleteAccessPoint
instance Amazonka.Data.Path.ToPath Amazonka.EFS.DeleteAccessPoint.DeleteAccessPoint
instance Amazonka.Data.Query.ToQuery Amazonka.EFS.DeleteAccessPoint.DeleteAccessPoint


-- | Creates a mount target for a file system. You can then mount the file
--   system on EC2 instances by using the mount target.
--   
--   You can create one mount target in each Availability Zone in your VPC.
--   All EC2 instances in a VPC within a given Availability Zone share a
--   single mount target for a given file system. If you have multiple
--   subnets in an Availability Zone, you create a mount target in one of
--   the subnets. EC2 instances do not need to be in the same subnet as the
--   mount target in order to access their file system.
--   
--   You can create only one mount target for an EFS file system using One
--   Zone storage classes. You must create that mount target in the same
--   Availability Zone in which the file system is located. Use the
--   <tt>AvailabilityZoneName</tt> and <tt>AvailabiltyZoneId</tt>
--   properties in the DescribeFileSystems response object to get this
--   information. Use the <tt>subnetId</tt> associated with the file
--   system's Availability Zone when creating the mount target.
--   
--   For more information, see <a>Amazon EFS: How it Works</a>.
--   
--   To create a mount target for a file system, the file system's
--   lifecycle state must be <tt>available</tt>. For more information, see
--   DescribeFileSystems.
--   
--   In the request, provide the following:
--   
--   <ul>
--   <li>The file system ID for which you are creating the mount
--   target.</li>
--   <li>A subnet ID, which determines the following:<ul><li>The VPC in
--   which Amazon EFS creates the mount target</li><li>The Availability
--   Zone in which Amazon EFS creates the mount target</li><li>The IP
--   address range from which Amazon EFS selects the IP address of the
--   mount target (if you don't specify an IP address in the
--   request)</li></ul></li>
--   </ul>
--   
--   After creating the mount target, Amazon EFS returns a response that
--   includes, a <tt>MountTargetId</tt> and an <tt>IpAddress</tt>. You use
--   this IP address when mounting the file system in an EC2 instance. You
--   can also use the mount target's DNS name when mounting the file
--   system. The EC2 instance on which you mount the file system by using
--   the mount target can resolve the mount target's DNS name to its IP
--   address. For more information, see <a>How it Works: Implementation
--   Overview</a>.
--   
--   Note that you can create mount targets for a file system in only one
--   VPC, and there can be only one mount target per Availability Zone.
--   That is, if the file system already has one or more mount targets
--   created for it, the subnet specified in the request to add another
--   mount target must meet the following requirements:
--   
--   <ul>
--   <li>Must belong to the same VPC as the subnets of the existing mount
--   targets</li>
--   <li>Must not be in the same Availability Zone as any of the subnets of
--   the existing mount targets</li>
--   </ul>
--   
--   If the request satisfies the requirements, Amazon EFS does the
--   following:
--   
--   <ul>
--   <li>Creates a new mount target in the specified subnet.</li>
--   <li>Also creates a new network interface in the subnet as
--   follows:<ul><li>If the request provides an <tt>IpAddress</tt>, Amazon
--   EFS assigns that IP address to the network interface. Otherwise,
--   Amazon EFS assigns a free address in the subnet (in the same way that
--   the Amazon EC2 <tt>CreateNetworkInterface</tt> call does when a
--   request does not specify a primary private IP address).</li><li>If the
--   request provides <tt>SecurityGroups</tt>, this network interface is
--   associated with those security groups. Otherwise, it belongs to the
--   default security group for the subnet's VPC.</li><li>Assigns the
--   description <tt>Mount target fsmt-id for file system fs-id </tt> where
--   <tt> fsmt-id </tt> is the mount target ID, and <tt> fs-id </tt> is the
--   <tt>FileSystemId</tt>.</li><li>Sets the <tt>requesterManaged</tt>
--   property of the network interface to <tt>true</tt>, and the
--   <tt>requesterId</tt> value to <tt>EFS</tt>.</li></ul>Each Amazon EFS
--   mount target has one corresponding requester-managed EC2 network
--   interface. After the network interface is created, Amazon EFS sets the
--   <tt>NetworkInterfaceId</tt> field in the mount target's description to
--   the network interface ID, and the <tt>IpAddress</tt> field to its
--   address. If network interface creation fails, the entire
--   <tt>CreateMountTarget</tt> operation fails.</li>
--   </ul>
--   
--   The <tt>CreateMountTarget</tt> call returns only after creating the
--   network interface, but while the mount target state is still
--   <tt>creating</tt>, you can check the mount target creation status by
--   calling the DescribeMountTargets operation, which among other things
--   returns the mount target state.
--   
--   We recommend that you create a mount target in each of the
--   Availability Zones. There are cost considerations for using a file
--   system in an Availability Zone through a mount target created in
--   another Availability Zone. For more information, see <a>Amazon
--   EFS</a>. In addition, by always using a mount target local to the
--   instance's Availability Zone, you eliminate a partial failure
--   scenario. If the Availability Zone in which your mount target is
--   created goes down, then you can't access your file system through that
--   mount target.
--   
--   This operation requires permissions for the following action on the
--   file system:
--   
--   <ul>
--   <li><pre>elasticfilesystem:CreateMountTarget</pre></li>
--   </ul>
--   
--   This operation also requires permissions for the following Amazon EC2
--   actions:
--   
--   <ul>
--   <li><pre>ec2:DescribeSubnets</pre></li>
--   <li><pre>ec2:DescribeNetworkInterfaces</pre></li>
--   <li><pre>ec2:CreateNetworkInterface</pre></li>
--   </ul>
module Amazonka.EFS.CreateMountTarget

-- | <i>See:</i> <a>newCreateMountTarget</a> smart constructor.
data CreateMountTarget
CreateMountTarget' :: Maybe Text -> Maybe [Text] -> Text -> Text -> CreateMountTarget

-- | Valid IPv4 address within the address range of the specified subnet.
[$sel:ipAddress:CreateMountTarget'] :: CreateMountTarget -> Maybe Text

-- | Up to five VPC security group IDs, of the form <tt>sg-xxxxxxxx</tt>.
--   These must be for the same VPC as subnet specified.
[$sel:securityGroups:CreateMountTarget'] :: CreateMountTarget -> Maybe [Text]

-- | The ID of the file system for which to create the mount target.
[$sel:fileSystemId:CreateMountTarget'] :: CreateMountTarget -> Text

-- | The ID of the subnet to add the mount target in. For file systems that
--   use One Zone storage classes, use the subnet that is associated with
--   the file system's Availability Zone.
[$sel:subnetId:CreateMountTarget'] :: CreateMountTarget -> Text

-- | Create a value of <a>CreateMountTarget</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ipAddress:CreateMountTarget'</a>,
--   <a>createMountTarget_ipAddress</a> - Valid IPv4 address within the
--   address range of the specified subnet.
--   
--   <a>$sel:securityGroups:CreateMountTarget'</a>,
--   <a>createMountTarget_securityGroups</a> - Up to five VPC security
--   group IDs, of the form <tt>sg-xxxxxxxx</tt>. These must be for the
--   same VPC as subnet specified.
--   
--   <a>$sel:fileSystemId:CreateMountTarget'</a>,
--   <a>createMountTarget_fileSystemId</a> - The ID of the file system for
--   which to create the mount target.
--   
--   <a>$sel:subnetId:CreateMountTarget'</a>,
--   <a>createMountTarget_subnetId</a> - The ID of the subnet to add the
--   mount target in. For file systems that use One Zone storage classes,
--   use the subnet that is associated with the file system's Availability
--   Zone.
newCreateMountTarget :: Text -> Text -> CreateMountTarget

-- | Valid IPv4 address within the address range of the specified subnet.
createMountTarget_ipAddress :: Lens' CreateMountTarget (Maybe Text)

-- | Up to five VPC security group IDs, of the form <tt>sg-xxxxxxxx</tt>.
--   These must be for the same VPC as subnet specified.
createMountTarget_securityGroups :: Lens' CreateMountTarget (Maybe [Text])

-- | The ID of the file system for which to create the mount target.
createMountTarget_fileSystemId :: Lens' CreateMountTarget Text

-- | The ID of the subnet to add the mount target in. For file systems that
--   use One Zone storage classes, use the subnet that is associated with
--   the file system's Availability Zone.
createMountTarget_subnetId :: Lens' CreateMountTarget Text

-- | Provides a description of a mount target.
--   
--   <i>See:</i> <a>newMountTargetDescription</a> smart constructor.
data MountTargetDescription
MountTargetDescription' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Text -> Text -> Text -> LifeCycleState -> MountTargetDescription

-- | Address at which the file system can be mounted by using the mount
--   target.
[$sel:ipAddress:MountTargetDescription'] :: MountTargetDescription -> Maybe Text

-- | The unique and consistent identifier of the Availability Zone that the
--   mount target resides in. For example, <tt>use1-az1</tt> is an AZ ID
--   for the us-east-1 Region and it has the same location in every Amazon
--   Web Services account.
[$sel:availabilityZoneId:MountTargetDescription'] :: MountTargetDescription -> Maybe Text

-- | The virtual private cloud (VPC) ID that the mount target is configured
--   in.
[$sel:vpcId:MountTargetDescription'] :: MountTargetDescription -> Maybe Text

-- | The name of the Availability Zone in which the mount target is
--   located. Availability Zones are independently mapped to names for each
--   Amazon Web Services account. For example, the Availability Zone
--   <tt>us-east-1a</tt> for your Amazon Web Services account might not be
--   the same location as <tt>us-east-1a</tt> for another Amazon Web
--   Services account.
[$sel:availabilityZoneName:MountTargetDescription'] :: MountTargetDescription -> Maybe Text

-- | The ID of the network interface that Amazon EFS created when it
--   created the mount target.
[$sel:networkInterfaceId:MountTargetDescription'] :: MountTargetDescription -> Maybe Text

-- | Amazon Web Services account ID that owns the resource.
[$sel:ownerId:MountTargetDescription'] :: MountTargetDescription -> Maybe Text

-- | System-assigned mount target ID.
[$sel:mountTargetId:MountTargetDescription'] :: MountTargetDescription -> Text

-- | The ID of the file system for which the mount target is intended.
[$sel:fileSystemId:MountTargetDescription'] :: MountTargetDescription -> Text

-- | The ID of the mount target's subnet.
[$sel:subnetId:MountTargetDescription'] :: MountTargetDescription -> Text

-- | Lifecycle state of the mount target.
[$sel:lifeCycleState:MountTargetDescription'] :: MountTargetDescription -> LifeCycleState

-- | Create a value of <a>MountTargetDescription</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ipAddress:MountTargetDescription'</a>,
--   <a>mountTargetDescription_ipAddress</a> - Address at which the file
--   system can be mounted by using the mount target.
--   
--   <a>$sel:availabilityZoneId:MountTargetDescription'</a>,
--   <a>mountTargetDescription_availabilityZoneId</a> - The unique and
--   consistent identifier of the Availability Zone that the mount target
--   resides in. For example, <tt>use1-az1</tt> is an AZ ID for the
--   us-east-1 Region and it has the same location in every Amazon Web
--   Services account.
--   
--   <a>$sel:vpcId:MountTargetDescription'</a>,
--   <a>mountTargetDescription_vpcId</a> - The virtual private cloud (VPC)
--   ID that the mount target is configured in.
--   
--   <a>$sel:availabilityZoneName:MountTargetDescription'</a>,
--   <a>mountTargetDescription_availabilityZoneName</a> - The name of the
--   Availability Zone in which the mount target is located. Availability
--   Zones are independently mapped to names for each Amazon Web Services
--   account. For example, the Availability Zone <tt>us-east-1a</tt> for
--   your Amazon Web Services account might not be the same location as
--   <tt>us-east-1a</tt> for another Amazon Web Services account.
--   
--   <a>$sel:networkInterfaceId:MountTargetDescription'</a>,
--   <a>mountTargetDescription_networkInterfaceId</a> - The ID of the
--   network interface that Amazon EFS created when it created the mount
--   target.
--   
--   <a>$sel:ownerId:MountTargetDescription'</a>,
--   <a>mountTargetDescription_ownerId</a> - Amazon Web Services account ID
--   that owns the resource.
--   
--   <a>$sel:mountTargetId:MountTargetDescription'</a>,
--   <a>mountTargetDescription_mountTargetId</a> - System-assigned mount
--   target ID.
--   
--   <a>$sel:fileSystemId:MountTargetDescription'</a>,
--   <a>mountTargetDescription_fileSystemId</a> - The ID of the file system
--   for which the mount target is intended.
--   
--   <a>$sel:subnetId:MountTargetDescription'</a>,
--   <a>mountTargetDescription_subnetId</a> - The ID of the mount target's
--   subnet.
--   
--   <a>$sel:lifeCycleState:MountTargetDescription'</a>,
--   <a>mountTargetDescription_lifeCycleState</a> - Lifecycle state of the
--   mount target.
newMountTargetDescription :: Text -> Text -> Text -> LifeCycleState -> MountTargetDescription

-- | Address at which the file system can be mounted by using the mount
--   target.
mountTargetDescription_ipAddress :: Lens' MountTargetDescription (Maybe Text)

-- | The unique and consistent identifier of the Availability Zone that the
--   mount target resides in. For example, <tt>use1-az1</tt> is an AZ ID
--   for the us-east-1 Region and it has the same location in every Amazon
--   Web Services account.
mountTargetDescription_availabilityZoneId :: Lens' MountTargetDescription (Maybe Text)

-- | The virtual private cloud (VPC) ID that the mount target is configured
--   in.
mountTargetDescription_vpcId :: Lens' MountTargetDescription (Maybe Text)

-- | The name of the Availability Zone in which the mount target is
--   located. Availability Zones are independently mapped to names for each
--   Amazon Web Services account. For example, the Availability Zone
--   <tt>us-east-1a</tt> for your Amazon Web Services account might not be
--   the same location as <tt>us-east-1a</tt> for another Amazon Web
--   Services account.
mountTargetDescription_availabilityZoneName :: Lens' MountTargetDescription (Maybe Text)

-- | The ID of the network interface that Amazon EFS created when it
--   created the mount target.
mountTargetDescription_networkInterfaceId :: Lens' MountTargetDescription (Maybe Text)

-- | Amazon Web Services account ID that owns the resource.
mountTargetDescription_ownerId :: Lens' MountTargetDescription (Maybe Text)

-- | System-assigned mount target ID.
mountTargetDescription_mountTargetId :: Lens' MountTargetDescription Text

-- | The ID of the file system for which the mount target is intended.
mountTargetDescription_fileSystemId :: Lens' MountTargetDescription Text

-- | The ID of the mount target's subnet.
mountTargetDescription_subnetId :: Lens' MountTargetDescription Text

-- | Lifecycle state of the mount target.
mountTargetDescription_lifeCycleState :: Lens' MountTargetDescription LifeCycleState
instance GHC.Generics.Generic Amazonka.EFS.CreateMountTarget.CreateMountTarget
instance GHC.Show.Show Amazonka.EFS.CreateMountTarget.CreateMountTarget
instance GHC.Read.Read Amazonka.EFS.CreateMountTarget.CreateMountTarget
instance GHC.Classes.Eq Amazonka.EFS.CreateMountTarget.CreateMountTarget
instance Amazonka.Types.AWSRequest Amazonka.EFS.CreateMountTarget.CreateMountTarget
instance Data.Hashable.Class.Hashable Amazonka.EFS.CreateMountTarget.CreateMountTarget
instance Control.DeepSeq.NFData Amazonka.EFS.CreateMountTarget.CreateMountTarget
instance Amazonka.Data.Headers.ToHeaders Amazonka.EFS.CreateMountTarget.CreateMountTarget
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.EFS.CreateMountTarget.CreateMountTarget
instance Amazonka.Data.Path.ToPath Amazonka.EFS.CreateMountTarget.CreateMountTarget
instance Amazonka.Data.Query.ToQuery Amazonka.EFS.CreateMountTarget.CreateMountTarget


-- | Creates a new, empty file system. The operation requires a creation
--   token in the request that Amazon EFS uses to ensure idempotent
--   creation (calling the operation with same creation token has no
--   effect). If a file system does not currently exist that is owned by
--   the caller's Amazon Web Services account with the specified creation
--   token, this operation does the following:
--   
--   <ul>
--   <li>Creates a new, empty file system. The file system will have an
--   Amazon EFS assigned ID, and an initial lifecycle state
--   <tt>creating</tt>.</li>
--   <li>Returns with the description of the created file system.</li>
--   </ul>
--   
--   Otherwise, this operation returns a <tt>FileSystemAlreadyExists</tt>
--   error with the ID of the existing file system.
--   
--   For basic use cases, you can use a randomly generated UUID for the
--   creation token.
--   
--   The idempotent operation allows you to retry a
--   <tt>CreateFileSystem</tt> call without risk of creating an extra file
--   system. This can happen when an initial call fails in a way that
--   leaves it uncertain whether or not a file system was actually created.
--   An example might be that a transport level timeout occurred or your
--   connection was reset. As long as you use the same creation token, if
--   the initial call had succeeded in creating a file system, the client
--   can learn of its existence from the <tt>FileSystemAlreadyExists</tt>
--   error.
--   
--   For more information, see <a>Creating a file system</a> in the
--   <i>Amazon EFS User Guide</i>.
--   
--   The <tt>CreateFileSystem</tt> call returns while the file system's
--   lifecycle state is still <tt>creating</tt>. You can check the file
--   system creation status by calling the DescribeFileSystems operation,
--   which among other things returns the file system state.
--   
--   This operation accepts an optional <tt>PerformanceMode</tt> parameter
--   that you choose for your file system. We recommend
--   <tt>generalPurpose</tt> performance mode for most file systems. File
--   systems using the <tt>maxIO</tt> performance mode can scale to higher
--   levels of aggregate throughput and operations per second with a
--   tradeoff of slightly higher latencies for most file operations. The
--   performance mode can't be changed after the file system has been
--   created. For more information, see <a>Amazon EFS performance
--   modes</a>.
--   
--   You can set the throughput mode for the file system using the
--   <tt>ThroughputMode</tt> parameter.
--   
--   After the file system is fully created, Amazon EFS sets its lifecycle
--   state to <tt>available</tt>, at which point you can create one or more
--   mount targets for the file system in your VPC. For more information,
--   see CreateMountTarget. You mount your Amazon EFS file system on an EC2
--   instances in your VPC by using the mount target. For more information,
--   see <a>Amazon EFS: How it Works</a>.
--   
--   This operation requires permissions for the
--   <tt>elasticfilesystem:CreateFileSystem</tt> action.
module Amazonka.EFS.CreateFileSystem

-- | <i>See:</i> <a>newCreateFileSystem</a> smart constructor.
data CreateFileSystem
CreateFileSystem' :: Maybe Double -> Maybe Text -> Maybe PerformanceMode -> Maybe Bool -> Maybe Bool -> Maybe ThroughputMode -> Maybe Text -> Maybe [Tag] -> Text -> CreateFileSystem

-- | The throughput, measured in MiB/s, that you want to provision for a
--   file system that you're creating. Valid values are 1-1024. Required if
--   <tt>ThroughputMode</tt> is set to <tt>provisioned</tt>. The upper
--   limit for throughput is 1024 MiB/s. To increase this limit, contact
--   Amazon Web Services Support. For more information, see <a>Amazon EFS
--   quotas that you can increase</a> in the <i>Amazon EFS User Guide</i>.
[$sel:provisionedThroughputInMibps:CreateFileSystem'] :: CreateFileSystem -> Maybe Double

-- | Used to create a file system that uses One Zone storage classes. It
--   specifies the Amazon Web Services Availability Zone in which to create
--   the file system. Use the format <tt>us-east-1a</tt> to specify the
--   Availability Zone. For more information about One Zone storage
--   classes, see <a>Using EFS storage classes</a> in the <i>Amazon EFS
--   User Guide</i>.
--   
--   One Zone storage classes are not available in all Availability Zones
--   in Amazon Web Services Regions where Amazon EFS is available.
[$sel:availabilityZoneName:CreateFileSystem'] :: CreateFileSystem -> Maybe Text

-- | The performance mode of the file system. We recommend
--   <tt>generalPurpose</tt> performance mode for most file systems. File
--   systems using the <tt>maxIO</tt> performance mode can scale to higher
--   levels of aggregate throughput and operations per second with a
--   tradeoff of slightly higher latencies for most file operations. The
--   performance mode can't be changed after the file system has been
--   created.
--   
--   The <tt>maxIO</tt> mode is not supported on file systems using One
--   Zone storage classes.
[$sel:performanceMode:CreateFileSystem'] :: CreateFileSystem -> Maybe PerformanceMode

-- | Specifies whether automatic backups are enabled on the file system
--   that you are creating. Set the value to <tt>true</tt> to enable
--   automatic backups. If you are creating a file system that uses One
--   Zone storage classes, automatic backups are enabled by default. For
--   more information, see <a>Automatic backups</a> in the <i>Amazon EFS
--   User Guide</i>.
--   
--   Default is <tt>false</tt>. However, if you specify an
--   <tt>AvailabilityZoneName</tt>, the default is <tt>true</tt>.
--   
--   Backup is not available in all Amazon Web Services Regionswhere Amazon
--   EFS is available.
[$sel:backup:CreateFileSystem'] :: CreateFileSystem -> Maybe Bool

-- | A Boolean value that, if true, creates an encrypted file system. When
--   creating an encrypted file system, you have the option of specifying
--   CreateFileSystemRequest$KmsKeyId for an existing Key Management
--   Service (KMS customer master key (CMK). If you don't specify a CMK,
--   then the default CMK for Amazon EFS, <tt>/aws/elasticfilesystem</tt>,
--   is used to protect the encrypted file system.
[$sel:encrypted:CreateFileSystem'] :: CreateFileSystem -> Maybe Bool

-- | Specifies the throughput mode for the file system, either
--   <tt>bursting</tt> or <tt>provisioned</tt>. If you set
--   <tt>ThroughputMode</tt> to <tt>provisioned</tt>, you must also set a
--   value for <tt>ProvisionedThroughputInMibps</tt>. After you create the
--   file system, you can decrease your file system's throughput in
--   Provisioned Throughput mode or change between the throughput modes, as
--   long as it’s been more than 24 hours since the last decrease or
--   throughput mode change. For more information, see <a>Specifying
--   throughput with provisioned mode</a> in the <i>Amazon EFS User
--   Guide</i>.
--   
--   Default is <tt>bursting</tt>.
[$sel:throughputMode:CreateFileSystem'] :: CreateFileSystem -> Maybe ThroughputMode

-- | The ID of the KMS CMK that you want to use to protect the encrypted
--   file system. This parameter is only required if you want to use a
--   non-default KMS key. If this parameter is not specified, the default
--   CMK for Amazon EFS is used. This ID can be in one of the following
--   formats:
--   
--   <ul>
--   <li>Key ID - A unique identifier of the key, for example
--   <tt>1234abcd-12ab-34cd-56ef-1234567890ab</tt>.</li>
--   <li>ARN - An Amazon Resource Name (ARN) for the key, for example
--   <tt>arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</tt>.</li>
--   <li>Key alias - A previously created display name for a key, for
--   example <tt>alias/projectKey1</tt>.</li>
--   <li>Key alias ARN - An ARN for a key alias, for example
--   <tt>arn:aws:kms:us-west-2:444455556666:alias/projectKey1</tt>.</li>
--   </ul>
--   
--   If <tt>KmsKeyId</tt> is specified, the
--   CreateFileSystemRequest$Encrypted parameter must be set to true.
--   
--   EFS accepts only symmetric KMS keys. You cannot use asymmetric KMS
--   keys with EFS file systems.
[$sel:kmsKeyId:CreateFileSystem'] :: CreateFileSystem -> Maybe Text

-- | Use to create one or more tags associated with the file system. Each
--   tag is a user-defined key-value pair. Name your file system on
--   creation by including a <tt>"Key":"Name","Value":"{value}"</tt>
--   key-value pair. Each key must be unique. For more information, see
--   <a>Tagging Amazon Web Services resources</a> in the <i>Amazon Web
--   Services General Reference Guide</i>.
[$sel:tags:CreateFileSystem'] :: CreateFileSystem -> Maybe [Tag]

-- | A string of up to 64 ASCII characters. Amazon EFS uses this to ensure
--   idempotent creation.
[$sel:creationToken:CreateFileSystem'] :: CreateFileSystem -> Text

-- | Create a value of <a>CreateFileSystem</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:provisionedThroughputInMibps:CreateFileSystem'</a>,
--   <a>createFileSystem_provisionedThroughputInMibps</a> - The throughput,
--   measured in MiB/s, that you want to provision for a file system that
--   you're creating. Valid values are 1-1024. Required if
--   <tt>ThroughputMode</tt> is set to <tt>provisioned</tt>. The upper
--   limit for throughput is 1024 MiB/s. To increase this limit, contact
--   Amazon Web Services Support. For more information, see <a>Amazon EFS
--   quotas that you can increase</a> in the <i>Amazon EFS User Guide</i>.
--   
--   <a>$sel:availabilityZoneName:CreateFileSystem'</a>,
--   <a>createFileSystem_availabilityZoneName</a> - Used to create a file
--   system that uses One Zone storage classes. It specifies the Amazon Web
--   Services Availability Zone in which to create the file system. Use the
--   format <tt>us-east-1a</tt> to specify the Availability Zone. For more
--   information about One Zone storage classes, see <a>Using EFS storage
--   classes</a> in the <i>Amazon EFS User Guide</i>.
--   
--   One Zone storage classes are not available in all Availability Zones
--   in Amazon Web Services Regions where Amazon EFS is available.
--   
--   <a>$sel:performanceMode:CreateFileSystem'</a>,
--   <a>createFileSystem_performanceMode</a> - The performance mode of the
--   file system. We recommend <tt>generalPurpose</tt> performance mode for
--   most file systems. File systems using the <tt>maxIO</tt> performance
--   mode can scale to higher levels of aggregate throughput and operations
--   per second with a tradeoff of slightly higher latencies for most file
--   operations. The performance mode can't be changed after the file
--   system has been created.
--   
--   The <tt>maxIO</tt> mode is not supported on file systems using One
--   Zone storage classes.
--   
--   <a>$sel:backup:CreateFileSystem'</a>, <a>createFileSystem_backup</a> -
--   Specifies whether automatic backups are enabled on the file system
--   that you are creating. Set the value to <tt>true</tt> to enable
--   automatic backups. If you are creating a file system that uses One
--   Zone storage classes, automatic backups are enabled by default. For
--   more information, see <a>Automatic backups</a> in the <i>Amazon EFS
--   User Guide</i>.
--   
--   Default is <tt>false</tt>. However, if you specify an
--   <tt>AvailabilityZoneName</tt>, the default is <tt>true</tt>.
--   
--   Backup is not available in all Amazon Web Services Regionswhere Amazon
--   EFS is available.
--   
--   <a>$sel:encrypted:CreateFileSystem'</a>,
--   <a>createFileSystem_encrypted</a> - A Boolean value that, if true,
--   creates an encrypted file system. When creating an encrypted file
--   system, you have the option of specifying
--   CreateFileSystemRequest$KmsKeyId for an existing Key Management
--   Service (KMS customer master key (CMK). If you don't specify a CMK,
--   then the default CMK for Amazon EFS, <tt>/aws/elasticfilesystem</tt>,
--   is used to protect the encrypted file system.
--   
--   <a>$sel:throughputMode:CreateFileSystem'</a>,
--   <a>createFileSystem_throughputMode</a> - Specifies the throughput mode
--   for the file system, either <tt>bursting</tt> or <tt>provisioned</tt>.
--   If you set <tt>ThroughputMode</tt> to <tt>provisioned</tt>, you must
--   also set a value for <tt>ProvisionedThroughputInMibps</tt>. After you
--   create the file system, you can decrease your file system's throughput
--   in Provisioned Throughput mode or change between the throughput modes,
--   as long as it’s been more than 24 hours since the last decrease or
--   throughput mode change. For more information, see <a>Specifying
--   throughput with provisioned mode</a> in the <i>Amazon EFS User
--   Guide</i>.
--   
--   Default is <tt>bursting</tt>.
--   
--   <a>$sel:kmsKeyId:CreateFileSystem'</a>,
--   <a>createFileSystem_kmsKeyId</a> - The ID of the KMS CMK that you want
--   to use to protect the encrypted file system. This parameter is only
--   required if you want to use a non-default KMS key. If this parameter
--   is not specified, the default CMK for Amazon EFS is used. This ID can
--   be in one of the following formats:
--   
--   <ul>
--   <li>Key ID - A unique identifier of the key, for example
--   <tt>1234abcd-12ab-34cd-56ef-1234567890ab</tt>.</li>
--   <li>ARN - An Amazon Resource Name (ARN) for the key, for example
--   <tt>arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</tt>.</li>
--   <li>Key alias - A previously created display name for a key, for
--   example <tt>alias/projectKey1</tt>.</li>
--   <li>Key alias ARN - An ARN for a key alias, for example
--   <tt>arn:aws:kms:us-west-2:444455556666:alias/projectKey1</tt>.</li>
--   </ul>
--   
--   If <tt>KmsKeyId</tt> is specified, the
--   CreateFileSystemRequest$Encrypted parameter must be set to true.
--   
--   EFS accepts only symmetric KMS keys. You cannot use asymmetric KMS
--   keys with EFS file systems.
--   
--   <a>$sel:tags:CreateFileSystem'</a>, <a>createFileSystem_tags</a> - Use
--   to create one or more tags associated with the file system. Each tag
--   is a user-defined key-value pair. Name your file system on creation by
--   including a <tt>"Key":"Name","Value":"{value}"</tt> key-value pair.
--   Each key must be unique. For more information, see <a>Tagging Amazon
--   Web Services resources</a> in the <i>Amazon Web Services General
--   Reference Guide</i>.
--   
--   <a>$sel:creationToken:CreateFileSystem'</a>,
--   <a>createFileSystem_creationToken</a> - A string of up to 64 ASCII
--   characters. Amazon EFS uses this to ensure idempotent creation.
newCreateFileSystem :: Text -> CreateFileSystem

-- | The throughput, measured in MiB/s, that you want to provision for a
--   file system that you're creating. Valid values are 1-1024. Required if
--   <tt>ThroughputMode</tt> is set to <tt>provisioned</tt>. The upper
--   limit for throughput is 1024 MiB/s. To increase this limit, contact
--   Amazon Web Services Support. For more information, see <a>Amazon EFS
--   quotas that you can increase</a> in the <i>Amazon EFS User Guide</i>.
createFileSystem_provisionedThroughputInMibps :: Lens' CreateFileSystem (Maybe Double)

-- | Used to create a file system that uses One Zone storage classes. It
--   specifies the Amazon Web Services Availability Zone in which to create
--   the file system. Use the format <tt>us-east-1a</tt> to specify the
--   Availability Zone. For more information about One Zone storage
--   classes, see <a>Using EFS storage classes</a> in the <i>Amazon EFS
--   User Guide</i>.
--   
--   One Zone storage classes are not available in all Availability Zones
--   in Amazon Web Services Regions where Amazon EFS is available.
createFileSystem_availabilityZoneName :: Lens' CreateFileSystem (Maybe Text)

-- | The performance mode of the file system. We recommend
--   <tt>generalPurpose</tt> performance mode for most file systems. File
--   systems using the <tt>maxIO</tt> performance mode can scale to higher
--   levels of aggregate throughput and operations per second with a
--   tradeoff of slightly higher latencies for most file operations. The
--   performance mode can't be changed after the file system has been
--   created.
--   
--   The <tt>maxIO</tt> mode is not supported on file systems using One
--   Zone storage classes.
createFileSystem_performanceMode :: Lens' CreateFileSystem (Maybe PerformanceMode)

-- | Specifies whether automatic backups are enabled on the file system
--   that you are creating. Set the value to <tt>true</tt> to enable
--   automatic backups. If you are creating a file system that uses One
--   Zone storage classes, automatic backups are enabled by default. For
--   more information, see <a>Automatic backups</a> in the <i>Amazon EFS
--   User Guide</i>.
--   
--   Default is <tt>false</tt>. However, if you specify an
--   <tt>AvailabilityZoneName</tt>, the default is <tt>true</tt>.
--   
--   Backup is not available in all Amazon Web Services Regionswhere Amazon
--   EFS is available.
createFileSystem_backup :: Lens' CreateFileSystem (Maybe Bool)

-- | A Boolean value that, if true, creates an encrypted file system. When
--   creating an encrypted file system, you have the option of specifying
--   CreateFileSystemRequest$KmsKeyId for an existing Key Management
--   Service (KMS customer master key (CMK). If you don't specify a CMK,
--   then the default CMK for Amazon EFS, <tt>/aws/elasticfilesystem</tt>,
--   is used to protect the encrypted file system.
createFileSystem_encrypted :: Lens' CreateFileSystem (Maybe Bool)

-- | Specifies the throughput mode for the file system, either
--   <tt>bursting</tt> or <tt>provisioned</tt>. If you set
--   <tt>ThroughputMode</tt> to <tt>provisioned</tt>, you must also set a
--   value for <tt>ProvisionedThroughputInMibps</tt>. After you create the
--   file system, you can decrease your file system's throughput in
--   Provisioned Throughput mode or change between the throughput modes, as
--   long as it’s been more than 24 hours since the last decrease or
--   throughput mode change. For more information, see <a>Specifying
--   throughput with provisioned mode</a> in the <i>Amazon EFS User
--   Guide</i>.
--   
--   Default is <tt>bursting</tt>.
createFileSystem_throughputMode :: Lens' CreateFileSystem (Maybe ThroughputMode)

-- | The ID of the KMS CMK that you want to use to protect the encrypted
--   file system. This parameter is only required if you want to use a
--   non-default KMS key. If this parameter is not specified, the default
--   CMK for Amazon EFS is used. This ID can be in one of the following
--   formats:
--   
--   <ul>
--   <li>Key ID - A unique identifier of the key, for example
--   <tt>1234abcd-12ab-34cd-56ef-1234567890ab</tt>.</li>
--   <li>ARN - An Amazon Resource Name (ARN) for the key, for example
--   <tt>arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</tt>.</li>
--   <li>Key alias - A previously created display name for a key, for
--   example <tt>alias/projectKey1</tt>.</li>
--   <li>Key alias ARN - An ARN for a key alias, for example
--   <tt>arn:aws:kms:us-west-2:444455556666:alias/projectKey1</tt>.</li>
--   </ul>
--   
--   If <tt>KmsKeyId</tt> is specified, the
--   CreateFileSystemRequest$Encrypted parameter must be set to true.
--   
--   EFS accepts only symmetric KMS keys. You cannot use asymmetric KMS
--   keys with EFS file systems.
createFileSystem_kmsKeyId :: Lens' CreateFileSystem (Maybe Text)

-- | Use to create one or more tags associated with the file system. Each
--   tag is a user-defined key-value pair. Name your file system on
--   creation by including a <tt>"Key":"Name","Value":"{value}"</tt>
--   key-value pair. Each key must be unique. For more information, see
--   <a>Tagging Amazon Web Services resources</a> in the <i>Amazon Web
--   Services General Reference Guide</i>.
createFileSystem_tags :: Lens' CreateFileSystem (Maybe [Tag])

-- | A string of up to 64 ASCII characters. Amazon EFS uses this to ensure
--   idempotent creation.
createFileSystem_creationToken :: Lens' CreateFileSystem Text

-- | A description of the file system.
--   
--   <i>See:</i> <a>newFileSystemDescription</a> smart constructor.
data FileSystemDescription
FileSystemDescription' :: Maybe Text -> Maybe Double -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe ThroughputMode -> Maybe Text -> Maybe Text -> Text -> Text -> Text -> POSIX -> LifeCycleState -> Natural -> FileSystemSize -> PerformanceMode -> [Tag] -> FileSystemDescription

-- | The unique and consistent identifier of the Availability Zone in which
--   the file system's One Zone storage classes exist. For example,
--   <tt>use1-az1</tt> is an Availability Zone ID for the us-east-1 Amazon
--   Web Services Region, and it has the same location in every Amazon Web
--   Services account.
[$sel:availabilityZoneId:FileSystemDescription'] :: FileSystemDescription -> Maybe Text

-- | The amount of provisioned throughput, measured in MiB/s, for the file
--   system. Valid for file systems using <tt>ThroughputMode</tt> set to
--   <tt>provisioned</tt>.
[$sel:provisionedThroughputInMibps:FileSystemDescription'] :: FileSystemDescription -> Maybe Double

-- | Describes the Amazon Web Services Availability Zone in which the file
--   system is located, and is valid only for file systems using One Zone
--   storage classes. For more information, see <a>Using EFS storage
--   classes</a> in the <i>Amazon EFS User Guide</i>.
[$sel:availabilityZoneName:FileSystemDescription'] :: FileSystemDescription -> Maybe Text

-- | The Amazon Resource Name (ARN) for the EFS file system, in the format
--   <tt>arn:aws:elasticfilesystem:region:account-id:file-system/file-system-id
--   </tt>. Example with sample data:
--   <tt>arn:aws:elasticfilesystem:us-west-2:1111333322228888:file-system/fs-01234567</tt>
[$sel:fileSystemArn:FileSystemDescription'] :: FileSystemDescription -> Maybe Text

-- | A Boolean value that, if true, indicates that the file system is
--   encrypted.
[$sel:encrypted:FileSystemDescription'] :: FileSystemDescription -> Maybe Bool

-- | Displays the file system's throughput mode. For more information, see
--   <a>Throughput modes</a> in the <i>Amazon EFS User Guide</i>.
[$sel:throughputMode:FileSystemDescription'] :: FileSystemDescription -> Maybe ThroughputMode

-- | The ID of an Key Management Service customer master key (CMK) that was
--   used to protect the encrypted file system.
[$sel:kmsKeyId:FileSystemDescription'] :: FileSystemDescription -> Maybe Text

-- | You can add tags to a file system, including a <tt>Name</tt> tag. For
--   more information, see CreateFileSystem. If the file system has a
--   <tt>Name</tt> tag, Amazon EFS returns the value in this field.
[$sel:name:FileSystemDescription'] :: FileSystemDescription -> Maybe Text

-- | The Amazon Web Services account that created the file system. If the
--   file system was created by an IAM user, the parent account to which
--   the user belongs is the owner.
[$sel:ownerId:FileSystemDescription'] :: FileSystemDescription -> Text

-- | The opaque string specified in the request.
[$sel:creationToken:FileSystemDescription'] :: FileSystemDescription -> Text

-- | The ID of the file system, assigned by Amazon EFS.
[$sel:fileSystemId:FileSystemDescription'] :: FileSystemDescription -> Text

-- | The time that the file system was created, in seconds (since
--   1970-01-01T00:00:00Z).
[$sel:creationTime:FileSystemDescription'] :: FileSystemDescription -> POSIX

-- | The lifecycle phase of the file system.
[$sel:lifeCycleState:FileSystemDescription'] :: FileSystemDescription -> LifeCycleState

-- | The current number of mount targets that the file system has. For more
--   information, see CreateMountTarget.
[$sel:numberOfMountTargets:FileSystemDescription'] :: FileSystemDescription -> Natural

-- | The latest known metered size (in bytes) of data stored in the file
--   system, in its <tt>Value</tt> field, and the time at which that size
--   was determined in its <tt>Timestamp</tt> field. The <tt>Timestamp</tt>
--   value is the integer number of seconds since 1970-01-01T00:00:00Z. The
--   <tt>SizeInBytes</tt> value doesn't represent the size of a consistent
--   snapshot of the file system, but it is eventually consistent when
--   there are no writes to the file system. That is, <tt>SizeInBytes</tt>
--   represents actual size only if the file system is not modified for a
--   period longer than a couple of hours. Otherwise, the value is not the
--   exact size that the file system was at any point in time.
[$sel:sizeInBytes:FileSystemDescription'] :: FileSystemDescription -> FileSystemSize

-- | The performance mode of the file system.
[$sel:performanceMode:FileSystemDescription'] :: FileSystemDescription -> PerformanceMode

-- | The tags associated with the file system, presented as an array of
--   <tt>Tag</tt> objects.
[$sel:tags:FileSystemDescription'] :: FileSystemDescription -> [Tag]

-- | Create a value of <a>FileSystemDescription</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:availabilityZoneId:FileSystemDescription'</a>,
--   <a>fileSystemDescription_availabilityZoneId</a> - The unique and
--   consistent identifier of the Availability Zone in which the file
--   system's One Zone storage classes exist. For example,
--   <tt>use1-az1</tt> is an Availability Zone ID for the us-east-1 Amazon
--   Web Services Region, and it has the same location in every Amazon Web
--   Services account.
--   
--   <a>$sel:provisionedThroughputInMibps:FileSystemDescription'</a>,
--   <a>fileSystemDescription_provisionedThroughputInMibps</a> - The amount
--   of provisioned throughput, measured in MiB/s, for the file system.
--   Valid for file systems using <tt>ThroughputMode</tt> set to
--   <tt>provisioned</tt>.
--   
--   <a>$sel:availabilityZoneName:FileSystemDescription'</a>,
--   <a>fileSystemDescription_availabilityZoneName</a> - Describes the
--   Amazon Web Services Availability Zone in which the file system is
--   located, and is valid only for file systems using One Zone storage
--   classes. For more information, see <a>Using EFS storage classes</a> in
--   the <i>Amazon EFS User Guide</i>.
--   
--   <a>$sel:fileSystemArn:FileSystemDescription'</a>,
--   <a>fileSystemDescription_fileSystemArn</a> - The Amazon Resource Name
--   (ARN) for the EFS file system, in the format
--   <tt>arn:aws:elasticfilesystem:region:account-id:file-system/file-system-id
--   </tt>. Example with sample data:
--   <tt>arn:aws:elasticfilesystem:us-west-2:1111333322228888:file-system/fs-01234567</tt>
--   
--   <a>$sel:encrypted:FileSystemDescription'</a>,
--   <a>fileSystemDescription_encrypted</a> - A Boolean value that, if
--   true, indicates that the file system is encrypted.
--   
--   <a>$sel:throughputMode:FileSystemDescription'</a>,
--   <a>fileSystemDescription_throughputMode</a> - Displays the file
--   system's throughput mode. For more information, see <a>Throughput
--   modes</a> in the <i>Amazon EFS User Guide</i>.
--   
--   <a>$sel:kmsKeyId:FileSystemDescription'</a>,
--   <a>fileSystemDescription_kmsKeyId</a> - The ID of an Key Management
--   Service customer master key (CMK) that was used to protect the
--   encrypted file system.
--   
--   <a>$sel:name:FileSystemDescription'</a>,
--   <a>fileSystemDescription_name</a> - You can add tags to a file system,
--   including a <tt>Name</tt> tag. For more information, see
--   CreateFileSystem. If the file system has a <tt>Name</tt> tag, Amazon
--   EFS returns the value in this field.
--   
--   <a>$sel:ownerId:FileSystemDescription'</a>,
--   <a>fileSystemDescription_ownerId</a> - The Amazon Web Services account
--   that created the file system. If the file system was created by an IAM
--   user, the parent account to which the user belongs is the owner.
--   
--   <a>$sel:creationToken:FileSystemDescription'</a>,
--   <a>fileSystemDescription_creationToken</a> - The opaque string
--   specified in the request.
--   
--   <a>$sel:fileSystemId:FileSystemDescription'</a>,
--   <a>fileSystemDescription_fileSystemId</a> - The ID of the file system,
--   assigned by Amazon EFS.
--   
--   <a>$sel:creationTime:FileSystemDescription'</a>,
--   <a>fileSystemDescription_creationTime</a> - The time that the file
--   system was created, in seconds (since 1970-01-01T00:00:00Z).
--   
--   <a>$sel:lifeCycleState:FileSystemDescription'</a>,
--   <a>fileSystemDescription_lifeCycleState</a> - The lifecycle phase of
--   the file system.
--   
--   <a>$sel:numberOfMountTargets:FileSystemDescription'</a>,
--   <a>fileSystemDescription_numberOfMountTargets</a> - The current number
--   of mount targets that the file system has. For more information, see
--   CreateMountTarget.
--   
--   <a>$sel:sizeInBytes:FileSystemDescription'</a>,
--   <a>fileSystemDescription_sizeInBytes</a> - The latest known metered
--   size (in bytes) of data stored in the file system, in its
--   <tt>Value</tt> field, and the time at which that size was determined
--   in its <tt>Timestamp</tt> field. The <tt>Timestamp</tt> value is the
--   integer number of seconds since 1970-01-01T00:00:00Z. The
--   <tt>SizeInBytes</tt> value doesn't represent the size of a consistent
--   snapshot of the file system, but it is eventually consistent when
--   there are no writes to the file system. That is, <tt>SizeInBytes</tt>
--   represents actual size only if the file system is not modified for a
--   period longer than a couple of hours. Otherwise, the value is not the
--   exact size that the file system was at any point in time.
--   
--   <a>$sel:performanceMode:FileSystemDescription'</a>,
--   <a>fileSystemDescription_performanceMode</a> - The performance mode of
--   the file system.
--   
--   <a>$sel:tags:FileSystemDescription'</a>,
--   <a>fileSystemDescription_tags</a> - The tags associated with the file
--   system, presented as an array of <tt>Tag</tt> objects.
newFileSystemDescription :: Text -> Text -> Text -> UTCTime -> LifeCycleState -> Natural -> FileSystemSize -> PerformanceMode -> FileSystemDescription

-- | The unique and consistent identifier of the Availability Zone in which
--   the file system's One Zone storage classes exist. For example,
--   <tt>use1-az1</tt> is an Availability Zone ID for the us-east-1 Amazon
--   Web Services Region, and it has the same location in every Amazon Web
--   Services account.
fileSystemDescription_availabilityZoneId :: Lens' FileSystemDescription (Maybe Text)

-- | The amount of provisioned throughput, measured in MiB/s, for the file
--   system. Valid for file systems using <tt>ThroughputMode</tt> set to
--   <tt>provisioned</tt>.
fileSystemDescription_provisionedThroughputInMibps :: Lens' FileSystemDescription (Maybe Double)

-- | Describes the Amazon Web Services Availability Zone in which the file
--   system is located, and is valid only for file systems using One Zone
--   storage classes. For more information, see <a>Using EFS storage
--   classes</a> in the <i>Amazon EFS User Guide</i>.
fileSystemDescription_availabilityZoneName :: Lens' FileSystemDescription (Maybe Text)

-- | The Amazon Resource Name (ARN) for the EFS file system, in the format
--   <tt>arn:aws:elasticfilesystem:region:account-id:file-system/file-system-id
--   </tt>. Example with sample data:
--   <tt>arn:aws:elasticfilesystem:us-west-2:1111333322228888:file-system/fs-01234567</tt>
fileSystemDescription_fileSystemArn :: Lens' FileSystemDescription (Maybe Text)

-- | A Boolean value that, if true, indicates that the file system is
--   encrypted.
fileSystemDescription_encrypted :: Lens' FileSystemDescription (Maybe Bool)

-- | Displays the file system's throughput mode. For more information, see
--   <a>Throughput modes</a> in the <i>Amazon EFS User Guide</i>.
fileSystemDescription_throughputMode :: Lens' FileSystemDescription (Maybe ThroughputMode)

-- | The ID of an Key Management Service customer master key (CMK) that was
--   used to protect the encrypted file system.
fileSystemDescription_kmsKeyId :: Lens' FileSystemDescription (Maybe Text)

-- | You can add tags to a file system, including a <tt>Name</tt> tag. For
--   more information, see CreateFileSystem. If the file system has a
--   <tt>Name</tt> tag, Amazon EFS returns the value in this field.
fileSystemDescription_name :: Lens' FileSystemDescription (Maybe Text)

-- | The Amazon Web Services account that created the file system. If the
--   file system was created by an IAM user, the parent account to which
--   the user belongs is the owner.
fileSystemDescription_ownerId :: Lens' FileSystemDescription Text

-- | The opaque string specified in the request.
fileSystemDescription_creationToken :: Lens' FileSystemDescription Text

-- | The ID of the file system, assigned by Amazon EFS.
fileSystemDescription_fileSystemId :: Lens' FileSystemDescription Text

-- | The time that the file system was created, in seconds (since
--   1970-01-01T00:00:00Z).
fileSystemDescription_creationTime :: Lens' FileSystemDescription UTCTime

-- | The lifecycle phase of the file system.
fileSystemDescription_lifeCycleState :: Lens' FileSystemDescription LifeCycleState

-- | The current number of mount targets that the file system has. For more
--   information, see CreateMountTarget.
fileSystemDescription_numberOfMountTargets :: Lens' FileSystemDescription Natural

-- | The latest known metered size (in bytes) of data stored in the file
--   system, in its <tt>Value</tt> field, and the time at which that size
--   was determined in its <tt>Timestamp</tt> field. The <tt>Timestamp</tt>
--   value is the integer number of seconds since 1970-01-01T00:00:00Z. The
--   <tt>SizeInBytes</tt> value doesn't represent the size of a consistent
--   snapshot of the file system, but it is eventually consistent when
--   there are no writes to the file system. That is, <tt>SizeInBytes</tt>
--   represents actual size only if the file system is not modified for a
--   period longer than a couple of hours. Otherwise, the value is not the
--   exact size that the file system was at any point in time.
fileSystemDescription_sizeInBytes :: Lens' FileSystemDescription FileSystemSize

-- | The performance mode of the file system.
fileSystemDescription_performanceMode :: Lens' FileSystemDescription PerformanceMode

-- | The tags associated with the file system, presented as an array of
--   <tt>Tag</tt> objects.
fileSystemDescription_tags :: Lens' FileSystemDescription [Tag]
instance GHC.Generics.Generic Amazonka.EFS.CreateFileSystem.CreateFileSystem
instance GHC.Show.Show Amazonka.EFS.CreateFileSystem.CreateFileSystem
instance GHC.Read.Read Amazonka.EFS.CreateFileSystem.CreateFileSystem
instance GHC.Classes.Eq Amazonka.EFS.CreateFileSystem.CreateFileSystem
instance Amazonka.Types.AWSRequest Amazonka.EFS.CreateFileSystem.CreateFileSystem
instance Data.Hashable.Class.Hashable Amazonka.EFS.CreateFileSystem.CreateFileSystem
instance Control.DeepSeq.NFData Amazonka.EFS.CreateFileSystem.CreateFileSystem
instance Amazonka.Data.Headers.ToHeaders Amazonka.EFS.CreateFileSystem.CreateFileSystem
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.EFS.CreateFileSystem.CreateFileSystem
instance Amazonka.Data.Path.ToPath Amazonka.EFS.CreateFileSystem.CreateFileSystem
instance Amazonka.Data.Query.ToQuery Amazonka.EFS.CreateFileSystem.CreateFileSystem


-- | Creates an EFS access point. An access point is an
--   application-specific view into an EFS file system that applies an
--   operating system user and group, and a file system path, to any file
--   system request made through the access point. The operating system
--   user and group override any identity information provided by the NFS
--   client. The file system path is exposed as the access point's root
--   directory. Applications using the access point can only access data in
--   its own directory and below. To learn more, see <a>Mounting a file
--   system using EFS access points</a>.
--   
--   This operation requires permissions for the
--   <tt>elasticfilesystem:CreateAccessPoint</tt> action.
module Amazonka.EFS.CreateAccessPoint

-- | <i>See:</i> <a>newCreateAccessPoint</a> smart constructor.
data CreateAccessPoint
CreateAccessPoint' :: Maybe PosixUser -> Maybe RootDirectory -> Maybe [Tag] -> Text -> Text -> CreateAccessPoint

-- | The operating system user and group applied to all file system
--   requests made using the access point.
[$sel:posixUser:CreateAccessPoint'] :: CreateAccessPoint -> Maybe PosixUser

-- | Specifies the directory on the Amazon EFS file system that the access
--   point exposes as the root directory of your file system to NFS clients
--   using the access point. The clients using the access point can only
--   access the root directory and below. If the <tt>RootDirectory</tt>
--   &gt; <tt>Path</tt> specified does not exist, EFS creates it and
--   applies the <tt>CreationInfo</tt> settings when a client connects to
--   an access point. When specifying a <tt>RootDirectory</tt>, you need to
--   provide the <tt>Path</tt>, and the <tt>CreationInfo</tt>.
--   
--   Amazon EFS creates a root directory only if you have provided the
--   CreationInfo: OwnUid, OwnGID, and permissions for the directory. If
--   you do not provide this information, Amazon EFS does not create the
--   root directory. If the root directory does not exist, attempts to
--   mount using the access point will fail.
[$sel:rootDirectory:CreateAccessPoint'] :: CreateAccessPoint -> Maybe RootDirectory

-- | Creates tags associated with the access point. Each tag is a key-value
--   pair, each key must be unique. For more information, see <a>Tagging
--   Amazon Web Services resources</a> in the <i>Amazon Web Services
--   General Reference Guide</i>.
[$sel:tags:CreateAccessPoint'] :: CreateAccessPoint -> Maybe [Tag]

-- | A string of up to 64 ASCII characters that Amazon EFS uses to ensure
--   idempotent creation.
[$sel:clientToken:CreateAccessPoint'] :: CreateAccessPoint -> Text

-- | The ID of the EFS file system that the access point provides access
--   to.
[$sel:fileSystemId:CreateAccessPoint'] :: CreateAccessPoint -> Text

-- | Create a value of <a>CreateAccessPoint</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:posixUser:CreateAccessPoint'</a>,
--   <a>createAccessPoint_posixUser</a> - The operating system user and
--   group applied to all file system requests made using the access point.
--   
--   <a>$sel:rootDirectory:CreateAccessPoint'</a>,
--   <a>createAccessPoint_rootDirectory</a> - Specifies the directory on
--   the Amazon EFS file system that the access point exposes as the root
--   directory of your file system to NFS clients using the access point.
--   The clients using the access point can only access the root directory
--   and below. If the <tt>RootDirectory</tt> &gt; <tt>Path</tt> specified
--   does not exist, EFS creates it and applies the <tt>CreationInfo</tt>
--   settings when a client connects to an access point. When specifying a
--   <tt>RootDirectory</tt>, you need to provide the <tt>Path</tt>, and the
--   <tt>CreationInfo</tt>.
--   
--   Amazon EFS creates a root directory only if you have provided the
--   CreationInfo: OwnUid, OwnGID, and permissions for the directory. If
--   you do not provide this information, Amazon EFS does not create the
--   root directory. If the root directory does not exist, attempts to
--   mount using the access point will fail.
--   
--   <a>$sel:tags:CreateAccessPoint'</a>, <a>createAccessPoint_tags</a> -
--   Creates tags associated with the access point. Each tag is a key-value
--   pair, each key must be unique. For more information, see <a>Tagging
--   Amazon Web Services resources</a> in the <i>Amazon Web Services
--   General Reference Guide</i>.
--   
--   <a>$sel:clientToken:CreateAccessPoint'</a>,
--   <a>createAccessPoint_clientToken</a> - A string of up to 64 ASCII
--   characters that Amazon EFS uses to ensure idempotent creation.
--   
--   <a>$sel:fileSystemId:CreateAccessPoint'</a>,
--   <a>createAccessPoint_fileSystemId</a> - The ID of the EFS file system
--   that the access point provides access to.
newCreateAccessPoint :: Text -> Text -> CreateAccessPoint

-- | The operating system user and group applied to all file system
--   requests made using the access point.
createAccessPoint_posixUser :: Lens' CreateAccessPoint (Maybe PosixUser)

-- | Specifies the directory on the Amazon EFS file system that the access
--   point exposes as the root directory of your file system to NFS clients
--   using the access point. The clients using the access point can only
--   access the root directory and below. If the <tt>RootDirectory</tt>
--   &gt; <tt>Path</tt> specified does not exist, EFS creates it and
--   applies the <tt>CreationInfo</tt> settings when a client connects to
--   an access point. When specifying a <tt>RootDirectory</tt>, you need to
--   provide the <tt>Path</tt>, and the <tt>CreationInfo</tt>.
--   
--   Amazon EFS creates a root directory only if you have provided the
--   CreationInfo: OwnUid, OwnGID, and permissions for the directory. If
--   you do not provide this information, Amazon EFS does not create the
--   root directory. If the root directory does not exist, attempts to
--   mount using the access point will fail.
createAccessPoint_rootDirectory :: Lens' CreateAccessPoint (Maybe RootDirectory)

-- | Creates tags associated with the access point. Each tag is a key-value
--   pair, each key must be unique. For more information, see <a>Tagging
--   Amazon Web Services resources</a> in the <i>Amazon Web Services
--   General Reference Guide</i>.
createAccessPoint_tags :: Lens' CreateAccessPoint (Maybe [Tag])

-- | A string of up to 64 ASCII characters that Amazon EFS uses to ensure
--   idempotent creation.
createAccessPoint_clientToken :: Lens' CreateAccessPoint Text

-- | The ID of the EFS file system that the access point provides access
--   to.
createAccessPoint_fileSystemId :: Lens' CreateAccessPoint Text

-- | Provides a description of an EFS file system access point.
--   
--   <i>See:</i> <a>newAccessPointDescription</a> smart constructor.
data AccessPointDescription
AccessPointDescription' :: Maybe PosixUser -> Maybe RootDirectory -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe LifeCycleState -> Maybe [Tag] -> AccessPointDescription

-- | The full POSIX identity, including the user ID, group ID, and
--   secondary group IDs on the access point that is used for all file
--   operations by NFS clients using the access point.
[$sel:posixUser:AccessPointDescription'] :: AccessPointDescription -> Maybe PosixUser

-- | The directory on the Amazon EFS file system that the access point
--   exposes as the root directory to NFS clients using the access point.
[$sel:rootDirectory:AccessPointDescription'] :: AccessPointDescription -> Maybe RootDirectory

-- | The opaque string specified in the request to ensure idempotent
--   creation.
[$sel:clientToken:AccessPointDescription'] :: AccessPointDescription -> Maybe Text

-- | The ID of the access point, assigned by Amazon EFS.
[$sel:accessPointId:AccessPointDescription'] :: AccessPointDescription -> Maybe Text

-- | The ID of the EFS file system that the access point applies to.
[$sel:fileSystemId:AccessPointDescription'] :: AccessPointDescription -> Maybe Text

-- | Identified the Amazon Web Services account that owns the access point
--   resource.
[$sel:ownerId:AccessPointDescription'] :: AccessPointDescription -> Maybe Text

-- | The name of the access point. This is the value of the <tt>Name</tt>
--   tag.
[$sel:name:AccessPointDescription'] :: AccessPointDescription -> Maybe Text

-- | The unique Amazon Resource Name (ARN) associated with the access
--   point.
[$sel:accessPointArn:AccessPointDescription'] :: AccessPointDescription -> Maybe Text

-- | Identifies the lifecycle phase of the access point.
[$sel:lifeCycleState:AccessPointDescription'] :: AccessPointDescription -> Maybe LifeCycleState

-- | The tags associated with the access point, presented as an array of
--   Tag objects.
[$sel:tags:AccessPointDescription'] :: AccessPointDescription -> Maybe [Tag]

-- | Create a value of <a>AccessPointDescription</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:posixUser:AccessPointDescription'</a>,
--   <a>accessPointDescription_posixUser</a> - The full POSIX identity,
--   including the user ID, group ID, and secondary group IDs on the access
--   point that is used for all file operations by NFS clients using the
--   access point.
--   
--   <a>$sel:rootDirectory:AccessPointDescription'</a>,
--   <a>accessPointDescription_rootDirectory</a> - The directory on the
--   Amazon EFS file system that the access point exposes as the root
--   directory to NFS clients using the access point.
--   
--   <a>$sel:clientToken:AccessPointDescription'</a>,
--   <a>accessPointDescription_clientToken</a> - The opaque string
--   specified in the request to ensure idempotent creation.
--   
--   <a>$sel:accessPointId:AccessPointDescription'</a>,
--   <a>accessPointDescription_accessPointId</a> - The ID of the access
--   point, assigned by Amazon EFS.
--   
--   <a>$sel:fileSystemId:AccessPointDescription'</a>,
--   <a>accessPointDescription_fileSystemId</a> - The ID of the EFS file
--   system that the access point applies to.
--   
--   <a>$sel:ownerId:AccessPointDescription'</a>,
--   <a>accessPointDescription_ownerId</a> - Identified the Amazon Web
--   Services account that owns the access point resource.
--   
--   <a>$sel:name:AccessPointDescription'</a>,
--   <a>accessPointDescription_name</a> - The name of the access point.
--   This is the value of the <tt>Name</tt> tag.
--   
--   <a>$sel:accessPointArn:AccessPointDescription'</a>,
--   <a>accessPointDescription_accessPointArn</a> - The unique Amazon
--   Resource Name (ARN) associated with the access point.
--   
--   <a>$sel:lifeCycleState:AccessPointDescription'</a>,
--   <a>accessPointDescription_lifeCycleState</a> - Identifies the
--   lifecycle phase of the access point.
--   
--   <a>$sel:tags:AccessPointDescription'</a>,
--   <a>accessPointDescription_tags</a> - The tags associated with the
--   access point, presented as an array of Tag objects.
newAccessPointDescription :: AccessPointDescription

-- | The full POSIX identity, including the user ID, group ID, and
--   secondary group IDs on the access point that is used for all file
--   operations by NFS clients using the access point.
accessPointDescription_posixUser :: Lens' AccessPointDescription (Maybe PosixUser)

-- | The directory on the Amazon EFS file system that the access point
--   exposes as the root directory to NFS clients using the access point.
accessPointDescription_rootDirectory :: Lens' AccessPointDescription (Maybe RootDirectory)

-- | The opaque string specified in the request to ensure idempotent
--   creation.
accessPointDescription_clientToken :: Lens' AccessPointDescription (Maybe Text)

-- | The ID of the access point, assigned by Amazon EFS.
accessPointDescription_accessPointId :: Lens' AccessPointDescription (Maybe Text)

-- | The ID of the EFS file system that the access point applies to.
accessPointDescription_fileSystemId :: Lens' AccessPointDescription (Maybe Text)

-- | Identified the Amazon Web Services account that owns the access point
--   resource.
accessPointDescription_ownerId :: Lens' AccessPointDescription (Maybe Text)

-- | The name of the access point. This is the value of the <tt>Name</tt>
--   tag.
accessPointDescription_name :: Lens' AccessPointDescription (Maybe Text)

-- | The unique Amazon Resource Name (ARN) associated with the access
--   point.
accessPointDescription_accessPointArn :: Lens' AccessPointDescription (Maybe Text)

-- | Identifies the lifecycle phase of the access point.
accessPointDescription_lifeCycleState :: Lens' AccessPointDescription (Maybe LifeCycleState)

-- | The tags associated with the access point, presented as an array of
--   Tag objects.
accessPointDescription_tags :: Lens' AccessPointDescription (Maybe [Tag])
instance GHC.Generics.Generic Amazonka.EFS.CreateAccessPoint.CreateAccessPoint
instance GHC.Show.Show Amazonka.EFS.CreateAccessPoint.CreateAccessPoint
instance GHC.Read.Read Amazonka.EFS.CreateAccessPoint.CreateAccessPoint
instance GHC.Classes.Eq Amazonka.EFS.CreateAccessPoint.CreateAccessPoint
instance Amazonka.Types.AWSRequest Amazonka.EFS.CreateAccessPoint.CreateAccessPoint
instance Data.Hashable.Class.Hashable Amazonka.EFS.CreateAccessPoint.CreateAccessPoint
instance Control.DeepSeq.NFData Amazonka.EFS.CreateAccessPoint.CreateAccessPoint
instance Amazonka.Data.Headers.ToHeaders Amazonka.EFS.CreateAccessPoint.CreateAccessPoint
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.EFS.CreateAccessPoint.CreateAccessPoint
instance Amazonka.Data.Path.ToPath Amazonka.EFS.CreateAccessPoint.CreateAccessPoint
instance Amazonka.Data.Query.ToQuery Amazonka.EFS.CreateAccessPoint.CreateAccessPoint


-- | Removes tags from an EFS resource. You can remove tags from EFS file
--   systems and access points using this API operation.
--   
--   This operation requires permissions for the
--   <tt>elasticfilesystem:UntagResource</tt> action.
module Amazonka.EFS.UntagResource

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> NonEmpty Text -> UntagResource

-- | Specifies the EFS resource that you want to remove tags from.
[$sel:resourceId:UntagResource'] :: UntagResource -> Text

-- | The keys of the key-value tag pairs that you want to remove from the
--   specified EFS resource.
[$sel:tagKeys:UntagResource'] :: UntagResource -> NonEmpty Text

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceId:UntagResource'</a>, <a>untagResource_resourceId</a>
--   - Specifies the EFS resource that you want to remove tags from.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   keys of the key-value tag pairs that you want to remove from the
--   specified EFS resource.
newUntagResource :: Text -> NonEmpty Text -> UntagResource

-- | Specifies the EFS resource that you want to remove tags from.
untagResource_resourceId :: Lens' UntagResource Text

-- | The keys of the key-value tag pairs that you want to remove from the
--   specified EFS resource.
untagResource_tagKeys :: Lens' UntagResource (NonEmpty Text)

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUntagResourceResponse :: UntagResourceResponse
instance GHC.Generics.Generic Amazonka.EFS.UntagResource.UntagResource
instance GHC.Show.Show Amazonka.EFS.UntagResource.UntagResource
instance GHC.Read.Read Amazonka.EFS.UntagResource.UntagResource
instance GHC.Classes.Eq Amazonka.EFS.UntagResource.UntagResource
instance GHC.Generics.Generic Amazonka.EFS.UntagResource.UntagResourceResponse
instance GHC.Show.Show Amazonka.EFS.UntagResource.UntagResourceResponse
instance GHC.Read.Read Amazonka.EFS.UntagResource.UntagResourceResponse
instance GHC.Classes.Eq Amazonka.EFS.UntagResource.UntagResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.EFS.UntagResource.UntagResource
instance Control.DeepSeq.NFData Amazonka.EFS.UntagResource.UntagResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.EFS.UntagResource.UntagResource
instance Control.DeepSeq.NFData Amazonka.EFS.UntagResource.UntagResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.EFS.UntagResource.UntagResource
instance Amazonka.Data.Path.ToPath Amazonka.EFS.UntagResource.UntagResource
instance Amazonka.Data.Query.ToQuery Amazonka.EFS.UntagResource.UntagResource


-- | Updates the throughput mode or the amount of provisioned throughput of
--   an existing file system.
module Amazonka.EFS.UpdateFileSystem

-- | <i>See:</i> <a>newUpdateFileSystem</a> smart constructor.
data UpdateFileSystem
UpdateFileSystem' :: Maybe Double -> Maybe ThroughputMode -> Text -> UpdateFileSystem

-- | (Optional) Sets the amount of provisioned throughput, in MiB/s, for
--   the file system. Valid values are 1-1024. If you are changing the
--   throughput mode to provisioned, you must also provide the amount of
--   provisioned throughput. Required if <tt>ThroughputMode</tt> is changed
--   to <tt>provisioned</tt> on update.
[$sel:provisionedThroughputInMibps:UpdateFileSystem'] :: UpdateFileSystem -> Maybe Double

-- | (Optional) Updates the file system's throughput mode. If you're not
--   updating your throughput mode, you don't need to provide this value in
--   your request. If you are changing the <tt>ThroughputMode</tt> to
--   <tt>provisioned</tt>, you must also set a value for
--   <tt>ProvisionedThroughputInMibps</tt>.
[$sel:throughputMode:UpdateFileSystem'] :: UpdateFileSystem -> Maybe ThroughputMode

-- | The ID of the file system that you want to update.
[$sel:fileSystemId:UpdateFileSystem'] :: UpdateFileSystem -> Text

-- | Create a value of <a>UpdateFileSystem</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:provisionedThroughputInMibps:UpdateFileSystem'</a>,
--   <a>updateFileSystem_provisionedThroughputInMibps</a> - (Optional) Sets
--   the amount of provisioned throughput, in MiB/s, for the file system.
--   Valid values are 1-1024. If you are changing the throughput mode to
--   provisioned, you must also provide the amount of provisioned
--   throughput. Required if <tt>ThroughputMode</tt> is changed to
--   <tt>provisioned</tt> on update.
--   
--   <a>$sel:throughputMode:UpdateFileSystem'</a>,
--   <a>updateFileSystem_throughputMode</a> - (Optional) Updates the file
--   system's throughput mode. If you're not updating your throughput mode,
--   you don't need to provide this value in your request. If you are
--   changing the <tt>ThroughputMode</tt> to <tt>provisioned</tt>, you must
--   also set a value for <tt>ProvisionedThroughputInMibps</tt>.
--   
--   <a>$sel:fileSystemId:UpdateFileSystem'</a>,
--   <a>updateFileSystem_fileSystemId</a> - The ID of the file system that
--   you want to update.
newUpdateFileSystem :: Text -> UpdateFileSystem

-- | (Optional) Sets the amount of provisioned throughput, in MiB/s, for
--   the file system. Valid values are 1-1024. If you are changing the
--   throughput mode to provisioned, you must also provide the amount of
--   provisioned throughput. Required if <tt>ThroughputMode</tt> is changed
--   to <tt>provisioned</tt> on update.
updateFileSystem_provisionedThroughputInMibps :: Lens' UpdateFileSystem (Maybe Double)

-- | (Optional) Updates the file system's throughput mode. If you're not
--   updating your throughput mode, you don't need to provide this value in
--   your request. If you are changing the <tt>ThroughputMode</tt> to
--   <tt>provisioned</tt>, you must also set a value for
--   <tt>ProvisionedThroughputInMibps</tt>.
updateFileSystem_throughputMode :: Lens' UpdateFileSystem (Maybe ThroughputMode)

-- | The ID of the file system that you want to update.
updateFileSystem_fileSystemId :: Lens' UpdateFileSystem Text

-- | A description of the file system.
--   
--   <i>See:</i> <a>newFileSystemDescription</a> smart constructor.
data FileSystemDescription
FileSystemDescription' :: Maybe Text -> Maybe Double -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe ThroughputMode -> Maybe Text -> Maybe Text -> Text -> Text -> Text -> POSIX -> LifeCycleState -> Natural -> FileSystemSize -> PerformanceMode -> [Tag] -> FileSystemDescription

-- | The unique and consistent identifier of the Availability Zone in which
--   the file system's One Zone storage classes exist. For example,
--   <tt>use1-az1</tt> is an Availability Zone ID for the us-east-1 Amazon
--   Web Services Region, and it has the same location in every Amazon Web
--   Services account.
[$sel:availabilityZoneId:FileSystemDescription'] :: FileSystemDescription -> Maybe Text

-- | The amount of provisioned throughput, measured in MiB/s, for the file
--   system. Valid for file systems using <tt>ThroughputMode</tt> set to
--   <tt>provisioned</tt>.
[$sel:provisionedThroughputInMibps:FileSystemDescription'] :: FileSystemDescription -> Maybe Double

-- | Describes the Amazon Web Services Availability Zone in which the file
--   system is located, and is valid only for file systems using One Zone
--   storage classes. For more information, see <a>Using EFS storage
--   classes</a> in the <i>Amazon EFS User Guide</i>.
[$sel:availabilityZoneName:FileSystemDescription'] :: FileSystemDescription -> Maybe Text

-- | The Amazon Resource Name (ARN) for the EFS file system, in the format
--   <tt>arn:aws:elasticfilesystem:region:account-id:file-system/file-system-id
--   </tt>. Example with sample data:
--   <tt>arn:aws:elasticfilesystem:us-west-2:1111333322228888:file-system/fs-01234567</tt>
[$sel:fileSystemArn:FileSystemDescription'] :: FileSystemDescription -> Maybe Text

-- | A Boolean value that, if true, indicates that the file system is
--   encrypted.
[$sel:encrypted:FileSystemDescription'] :: FileSystemDescription -> Maybe Bool

-- | Displays the file system's throughput mode. For more information, see
--   <a>Throughput modes</a> in the <i>Amazon EFS User Guide</i>.
[$sel:throughputMode:FileSystemDescription'] :: FileSystemDescription -> Maybe ThroughputMode

-- | The ID of an Key Management Service customer master key (CMK) that was
--   used to protect the encrypted file system.
[$sel:kmsKeyId:FileSystemDescription'] :: FileSystemDescription -> Maybe Text

-- | You can add tags to a file system, including a <tt>Name</tt> tag. For
--   more information, see CreateFileSystem. If the file system has a
--   <tt>Name</tt> tag, Amazon EFS returns the value in this field.
[$sel:name:FileSystemDescription'] :: FileSystemDescription -> Maybe Text

-- | The Amazon Web Services account that created the file system. If the
--   file system was created by an IAM user, the parent account to which
--   the user belongs is the owner.
[$sel:ownerId:FileSystemDescription'] :: FileSystemDescription -> Text

-- | The opaque string specified in the request.
[$sel:creationToken:FileSystemDescription'] :: FileSystemDescription -> Text

-- | The ID of the file system, assigned by Amazon EFS.
[$sel:fileSystemId:FileSystemDescription'] :: FileSystemDescription -> Text

-- | The time that the file system was created, in seconds (since
--   1970-01-01T00:00:00Z).
[$sel:creationTime:FileSystemDescription'] :: FileSystemDescription -> POSIX

-- | The lifecycle phase of the file system.
[$sel:lifeCycleState:FileSystemDescription'] :: FileSystemDescription -> LifeCycleState

-- | The current number of mount targets that the file system has. For more
--   information, see CreateMountTarget.
[$sel:numberOfMountTargets:FileSystemDescription'] :: FileSystemDescription -> Natural

-- | The latest known metered size (in bytes) of data stored in the file
--   system, in its <tt>Value</tt> field, and the time at which that size
--   was determined in its <tt>Timestamp</tt> field. The <tt>Timestamp</tt>
--   value is the integer number of seconds since 1970-01-01T00:00:00Z. The
--   <tt>SizeInBytes</tt> value doesn't represent the size of a consistent
--   snapshot of the file system, but it is eventually consistent when
--   there are no writes to the file system. That is, <tt>SizeInBytes</tt>
--   represents actual size only if the file system is not modified for a
--   period longer than a couple of hours. Otherwise, the value is not the
--   exact size that the file system was at any point in time.
[$sel:sizeInBytes:FileSystemDescription'] :: FileSystemDescription -> FileSystemSize

-- | The performance mode of the file system.
[$sel:performanceMode:FileSystemDescription'] :: FileSystemDescription -> PerformanceMode

-- | The tags associated with the file system, presented as an array of
--   <tt>Tag</tt> objects.
[$sel:tags:FileSystemDescription'] :: FileSystemDescription -> [Tag]

-- | Create a value of <a>FileSystemDescription</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:availabilityZoneId:FileSystemDescription'</a>,
--   <a>fileSystemDescription_availabilityZoneId</a> - The unique and
--   consistent identifier of the Availability Zone in which the file
--   system's One Zone storage classes exist. For example,
--   <tt>use1-az1</tt> is an Availability Zone ID for the us-east-1 Amazon
--   Web Services Region, and it has the same location in every Amazon Web
--   Services account.
--   
--   <a>$sel:provisionedThroughputInMibps:FileSystemDescription'</a>,
--   <a>fileSystemDescription_provisionedThroughputInMibps</a> - The amount
--   of provisioned throughput, measured in MiB/s, for the file system.
--   Valid for file systems using <tt>ThroughputMode</tt> set to
--   <tt>provisioned</tt>.
--   
--   <a>$sel:availabilityZoneName:FileSystemDescription'</a>,
--   <a>fileSystemDescription_availabilityZoneName</a> - Describes the
--   Amazon Web Services Availability Zone in which the file system is
--   located, and is valid only for file systems using One Zone storage
--   classes. For more information, see <a>Using EFS storage classes</a> in
--   the <i>Amazon EFS User Guide</i>.
--   
--   <a>$sel:fileSystemArn:FileSystemDescription'</a>,
--   <a>fileSystemDescription_fileSystemArn</a> - The Amazon Resource Name
--   (ARN) for the EFS file system, in the format
--   <tt>arn:aws:elasticfilesystem:region:account-id:file-system/file-system-id
--   </tt>. Example with sample data:
--   <tt>arn:aws:elasticfilesystem:us-west-2:1111333322228888:file-system/fs-01234567</tt>
--   
--   <a>$sel:encrypted:FileSystemDescription'</a>,
--   <a>fileSystemDescription_encrypted</a> - A Boolean value that, if
--   true, indicates that the file system is encrypted.
--   
--   <a>$sel:throughputMode:FileSystemDescription'</a>,
--   <a>fileSystemDescription_throughputMode</a> - Displays the file
--   system's throughput mode. For more information, see <a>Throughput
--   modes</a> in the <i>Amazon EFS User Guide</i>.
--   
--   <a>$sel:kmsKeyId:FileSystemDescription'</a>,
--   <a>fileSystemDescription_kmsKeyId</a> - The ID of an Key Management
--   Service customer master key (CMK) that was used to protect the
--   encrypted file system.
--   
--   <a>$sel:name:FileSystemDescription'</a>,
--   <a>fileSystemDescription_name</a> - You can add tags to a file system,
--   including a <tt>Name</tt> tag. For more information, see
--   CreateFileSystem. If the file system has a <tt>Name</tt> tag, Amazon
--   EFS returns the value in this field.
--   
--   <a>$sel:ownerId:FileSystemDescription'</a>,
--   <a>fileSystemDescription_ownerId</a> - The Amazon Web Services account
--   that created the file system. If the file system was created by an IAM
--   user, the parent account to which the user belongs is the owner.
--   
--   <a>$sel:creationToken:FileSystemDescription'</a>,
--   <a>fileSystemDescription_creationToken</a> - The opaque string
--   specified in the request.
--   
--   <a>$sel:fileSystemId:FileSystemDescription'</a>,
--   <a>fileSystemDescription_fileSystemId</a> - The ID of the file system,
--   assigned by Amazon EFS.
--   
--   <a>$sel:creationTime:FileSystemDescription'</a>,
--   <a>fileSystemDescription_creationTime</a> - The time that the file
--   system was created, in seconds (since 1970-01-01T00:00:00Z).
--   
--   <a>$sel:lifeCycleState:FileSystemDescription'</a>,
--   <a>fileSystemDescription_lifeCycleState</a> - The lifecycle phase of
--   the file system.
--   
--   <a>$sel:numberOfMountTargets:FileSystemDescription'</a>,
--   <a>fileSystemDescription_numberOfMountTargets</a> - The current number
--   of mount targets that the file system has. For more information, see
--   CreateMountTarget.
--   
--   <a>$sel:sizeInBytes:FileSystemDescription'</a>,
--   <a>fileSystemDescription_sizeInBytes</a> - The latest known metered
--   size (in bytes) of data stored in the file system, in its
--   <tt>Value</tt> field, and the time at which that size was determined
--   in its <tt>Timestamp</tt> field. The <tt>Timestamp</tt> value is the
--   integer number of seconds since 1970-01-01T00:00:00Z. The
--   <tt>SizeInBytes</tt> value doesn't represent the size of a consistent
--   snapshot of the file system, but it is eventually consistent when
--   there are no writes to the file system. That is, <tt>SizeInBytes</tt>
--   represents actual size only if the file system is not modified for a
--   period longer than a couple of hours. Otherwise, the value is not the
--   exact size that the file system was at any point in time.
--   
--   <a>$sel:performanceMode:FileSystemDescription'</a>,
--   <a>fileSystemDescription_performanceMode</a> - The performance mode of
--   the file system.
--   
--   <a>$sel:tags:FileSystemDescription'</a>,
--   <a>fileSystemDescription_tags</a> - The tags associated with the file
--   system, presented as an array of <tt>Tag</tt> objects.
newFileSystemDescription :: Text -> Text -> Text -> UTCTime -> LifeCycleState -> Natural -> FileSystemSize -> PerformanceMode -> FileSystemDescription

-- | The unique and consistent identifier of the Availability Zone in which
--   the file system's One Zone storage classes exist. For example,
--   <tt>use1-az1</tt> is an Availability Zone ID for the us-east-1 Amazon
--   Web Services Region, and it has the same location in every Amazon Web
--   Services account.
fileSystemDescription_availabilityZoneId :: Lens' FileSystemDescription (Maybe Text)

-- | The amount of provisioned throughput, measured in MiB/s, for the file
--   system. Valid for file systems using <tt>ThroughputMode</tt> set to
--   <tt>provisioned</tt>.
fileSystemDescription_provisionedThroughputInMibps :: Lens' FileSystemDescription (Maybe Double)

-- | Describes the Amazon Web Services Availability Zone in which the file
--   system is located, and is valid only for file systems using One Zone
--   storage classes. For more information, see <a>Using EFS storage
--   classes</a> in the <i>Amazon EFS User Guide</i>.
fileSystemDescription_availabilityZoneName :: Lens' FileSystemDescription (Maybe Text)

-- | The Amazon Resource Name (ARN) for the EFS file system, in the format
--   <tt>arn:aws:elasticfilesystem:region:account-id:file-system/file-system-id
--   </tt>. Example with sample data:
--   <tt>arn:aws:elasticfilesystem:us-west-2:1111333322228888:file-system/fs-01234567</tt>
fileSystemDescription_fileSystemArn :: Lens' FileSystemDescription (Maybe Text)

-- | A Boolean value that, if true, indicates that the file system is
--   encrypted.
fileSystemDescription_encrypted :: Lens' FileSystemDescription (Maybe Bool)

-- | Displays the file system's throughput mode. For more information, see
--   <a>Throughput modes</a> in the <i>Amazon EFS User Guide</i>.
fileSystemDescription_throughputMode :: Lens' FileSystemDescription (Maybe ThroughputMode)

-- | The ID of an Key Management Service customer master key (CMK) that was
--   used to protect the encrypted file system.
fileSystemDescription_kmsKeyId :: Lens' FileSystemDescription (Maybe Text)

-- | You can add tags to a file system, including a <tt>Name</tt> tag. For
--   more information, see CreateFileSystem. If the file system has a
--   <tt>Name</tt> tag, Amazon EFS returns the value in this field.
fileSystemDescription_name :: Lens' FileSystemDescription (Maybe Text)

-- | The Amazon Web Services account that created the file system. If the
--   file system was created by an IAM user, the parent account to which
--   the user belongs is the owner.
fileSystemDescription_ownerId :: Lens' FileSystemDescription Text

-- | The opaque string specified in the request.
fileSystemDescription_creationToken :: Lens' FileSystemDescription Text

-- | The ID of the file system, assigned by Amazon EFS.
fileSystemDescription_fileSystemId :: Lens' FileSystemDescription Text

-- | The time that the file system was created, in seconds (since
--   1970-01-01T00:00:00Z).
fileSystemDescription_creationTime :: Lens' FileSystemDescription UTCTime

-- | The lifecycle phase of the file system.
fileSystemDescription_lifeCycleState :: Lens' FileSystemDescription LifeCycleState

-- | The current number of mount targets that the file system has. For more
--   information, see CreateMountTarget.
fileSystemDescription_numberOfMountTargets :: Lens' FileSystemDescription Natural

-- | The latest known metered size (in bytes) of data stored in the file
--   system, in its <tt>Value</tt> field, and the time at which that size
--   was determined in its <tt>Timestamp</tt> field. The <tt>Timestamp</tt>
--   value is the integer number of seconds since 1970-01-01T00:00:00Z. The
--   <tt>SizeInBytes</tt> value doesn't represent the size of a consistent
--   snapshot of the file system, but it is eventually consistent when
--   there are no writes to the file system. That is, <tt>SizeInBytes</tt>
--   represents actual size only if the file system is not modified for a
--   period longer than a couple of hours. Otherwise, the value is not the
--   exact size that the file system was at any point in time.
fileSystemDescription_sizeInBytes :: Lens' FileSystemDescription FileSystemSize

-- | The performance mode of the file system.
fileSystemDescription_performanceMode :: Lens' FileSystemDescription PerformanceMode

-- | The tags associated with the file system, presented as an array of
--   <tt>Tag</tt> objects.
fileSystemDescription_tags :: Lens' FileSystemDescription [Tag]
instance GHC.Generics.Generic Amazonka.EFS.UpdateFileSystem.UpdateFileSystem
instance GHC.Show.Show Amazonka.EFS.UpdateFileSystem.UpdateFileSystem
instance GHC.Read.Read Amazonka.EFS.UpdateFileSystem.UpdateFileSystem
instance GHC.Classes.Eq Amazonka.EFS.UpdateFileSystem.UpdateFileSystem
instance Amazonka.Types.AWSRequest Amazonka.EFS.UpdateFileSystem.UpdateFileSystem
instance Data.Hashable.Class.Hashable Amazonka.EFS.UpdateFileSystem.UpdateFileSystem
instance Control.DeepSeq.NFData Amazonka.EFS.UpdateFileSystem.UpdateFileSystem
instance Amazonka.Data.Headers.ToHeaders Amazonka.EFS.UpdateFileSystem.UpdateFileSystem
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.EFS.UpdateFileSystem.UpdateFileSystem
instance Amazonka.Data.Path.ToPath Amazonka.EFS.UpdateFileSystem.UpdateFileSystem
instance Amazonka.Data.Query.ToQuery Amazonka.EFS.UpdateFileSystem.UpdateFileSystem


module Amazonka.EFS.Lens

-- | The operating system user and group applied to all file system
--   requests made using the access point.
createAccessPoint_posixUser :: Lens' CreateAccessPoint (Maybe PosixUser)

-- | Specifies the directory on the Amazon EFS file system that the access
--   point exposes as the root directory of your file system to NFS clients
--   using the access point. The clients using the access point can only
--   access the root directory and below. If the <tt>RootDirectory</tt>
--   &gt; <tt>Path</tt> specified does not exist, EFS creates it and
--   applies the <tt>CreationInfo</tt> settings when a client connects to
--   an access point. When specifying a <tt>RootDirectory</tt>, you need to
--   provide the <tt>Path</tt>, and the <tt>CreationInfo</tt>.
--   
--   Amazon EFS creates a root directory only if you have provided the
--   CreationInfo: OwnUid, OwnGID, and permissions for the directory. If
--   you do not provide this information, Amazon EFS does not create the
--   root directory. If the root directory does not exist, attempts to
--   mount using the access point will fail.
createAccessPoint_rootDirectory :: Lens' CreateAccessPoint (Maybe RootDirectory)

-- | Creates tags associated with the access point. Each tag is a key-value
--   pair, each key must be unique. For more information, see <a>Tagging
--   Amazon Web Services resources</a> in the <i>Amazon Web Services
--   General Reference Guide</i>.
createAccessPoint_tags :: Lens' CreateAccessPoint (Maybe [Tag])

-- | A string of up to 64 ASCII characters that Amazon EFS uses to ensure
--   idempotent creation.
createAccessPoint_clientToken :: Lens' CreateAccessPoint Text

-- | The ID of the EFS file system that the access point provides access
--   to.
createAccessPoint_fileSystemId :: Lens' CreateAccessPoint Text

-- | The full POSIX identity, including the user ID, group ID, and
--   secondary group IDs on the access point that is used for all file
--   operations by NFS clients using the access point.
accessPointDescription_posixUser :: Lens' AccessPointDescription (Maybe PosixUser)

-- | The directory on the Amazon EFS file system that the access point
--   exposes as the root directory to NFS clients using the access point.
accessPointDescription_rootDirectory :: Lens' AccessPointDescription (Maybe RootDirectory)

-- | The opaque string specified in the request to ensure idempotent
--   creation.
accessPointDescription_clientToken :: Lens' AccessPointDescription (Maybe Text)

-- | The ID of the access point, assigned by Amazon EFS.
accessPointDescription_accessPointId :: Lens' AccessPointDescription (Maybe Text)

-- | The ID of the EFS file system that the access point applies to.
accessPointDescription_fileSystemId :: Lens' AccessPointDescription (Maybe Text)

-- | Identified the Amazon Web Services account that owns the access point
--   resource.
accessPointDescription_ownerId :: Lens' AccessPointDescription (Maybe Text)

-- | The name of the access point. This is the value of the <tt>Name</tt>
--   tag.
accessPointDescription_name :: Lens' AccessPointDescription (Maybe Text)

-- | The unique Amazon Resource Name (ARN) associated with the access
--   point.
accessPointDescription_accessPointArn :: Lens' AccessPointDescription (Maybe Text)

-- | Identifies the lifecycle phase of the access point.
accessPointDescription_lifeCycleState :: Lens' AccessPointDescription (Maybe LifeCycleState)

-- | The tags associated with the access point, presented as an array of
--   Tag objects.
accessPointDescription_tags :: Lens' AccessPointDescription (Maybe [Tag])

-- | (Optional) You can use <tt>NextToken</tt> in a subsequent request to
--   fetch the next page of Amazon Web Services account preferences if the
--   response payload was paginated.
describeAccountPreferences_nextToken :: Lens' DescribeAccountPreferences (Maybe Text)

-- | (Optional) When retrieving account preferences, you can optionally
--   specify the <tt>MaxItems</tt> parameter to limit the number of objects
--   returned in a response. The default value is 100.
describeAccountPreferences_maxResults :: Lens' DescribeAccountPreferences (Maybe Natural)

-- | Describes the resource ID preference setting for the Amazon Web
--   Services account associated with the user making the request, in the
--   current Amazon Web Services Region.
describeAccountPreferencesResponse_resourceIdPreference :: Lens' DescribeAccountPreferencesResponse (Maybe ResourceIdPreference)

-- | Present if there are more records than returned in the response. You
--   can use the <tt>NextToken</tt> in the subsequent request to fetch the
--   additional descriptions.
describeAccountPreferencesResponse_nextToken :: Lens' DescribeAccountPreferencesResponse (Maybe Text)

-- | The response's http status code.
describeAccountPreferencesResponse_httpStatus :: Lens' DescribeAccountPreferencesResponse Int

-- | (Optional) The ID of the access point whose mount targets that you
--   want to list. It must be included in your request if a
--   <tt>FileSystemId</tt> or <tt>MountTargetId</tt> is not included in
--   your request. Accepts either an access point ID or ARN as input.
describeMountTargets_accessPointId :: Lens' DescribeMountTargets (Maybe Text)

-- | (Optional) ID of the file system whose mount targets you want to list
--   (String). It must be included in your request if an
--   <tt>AccessPointId</tt> or <tt>MountTargetId</tt> is not included.
--   Accepts either a file system ID or ARN as input.
describeMountTargets_fileSystemId :: Lens' DescribeMountTargets (Maybe Text)

-- | (Optional) Opaque pagination token returned from a previous
--   <tt>DescribeMountTargets</tt> operation (String). If present, it
--   specifies to continue the list from where the previous returning call
--   left off.
describeMountTargets_marker :: Lens' DescribeMountTargets (Maybe Text)

-- | (Optional) Maximum number of mount targets to return in the response.
--   Currently, this number is automatically set to 10, and other values
--   are ignored. The response is paginated at 100 per page if you have
--   more than 100 mount targets.
describeMountTargets_maxItems :: Lens' DescribeMountTargets (Maybe Natural)

-- | (Optional) ID of the mount target that you want to have described
--   (String). It must be included in your request if <tt>FileSystemId</tt>
--   is not included. Accepts either a mount target ID or ARN as input.
describeMountTargets_mountTargetId :: Lens' DescribeMountTargets (Maybe Text)

-- | Returns the file system's mount targets as an array of
--   <tt>MountTargetDescription</tt> objects.
describeMountTargetsResponse_mountTargets :: Lens' DescribeMountTargetsResponse (Maybe [MountTargetDescription])

-- | If the request included the <tt>Marker</tt>, the response returns that
--   value in this field.
describeMountTargetsResponse_marker :: Lens' DescribeMountTargetsResponse (Maybe Text)

-- | If a value is present, there are more mount targets to return. In a
--   subsequent request, you can provide <tt>Marker</tt> in your request
--   with this value to retrieve the next set of mount targets.
describeMountTargetsResponse_nextMarker :: Lens' DescribeMountTargetsResponse (Maybe Text)

-- | The response's http status code.
describeMountTargetsResponse_httpStatus :: Lens' DescribeMountTargetsResponse Int

-- | Specifies the EFS file system for which to delete the
--   <tt>FileSystemPolicy</tt>.
deleteFileSystemPolicy_fileSystemId :: Lens' DeleteFileSystemPolicy Text

-- | (Optional) You can use <tt>NextToken</tt> in a subsequent request to
--   fetch the next page of access point descriptions if the response
--   payload was paginated.
listTagsForResource_nextToken :: Lens' ListTagsForResource (Maybe Text)

-- | (Optional) Specifies the maximum number of tag objects to return in
--   the response. The default value is 100.
listTagsForResource_maxResults :: Lens' ListTagsForResource (Maybe Natural)

-- | Specifies the EFS resource you want to retrieve tags for. You can
--   retrieve tags for EFS file systems and access points using this API
--   endpoint.
listTagsForResource_resourceId :: Lens' ListTagsForResource Text

-- | <tt>NextToken</tt> is present if the response payload is paginated.
--   You can use <tt>NextToken</tt> in a subsequent request to fetch the
--   next page of access point descriptions.
listTagsForResourceResponse_nextToken :: Lens' ListTagsForResourceResponse (Maybe Text)

-- | An array of the tags for the specified EFS resource.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe [Tag])

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int

-- | (Optional) A flag to indicate whether to bypass the
--   <tt>FileSystemPolicy</tt> lockout safety check. The policy lockout
--   safety check determines whether the policy in the request will prevent
--   the principal making the request will be locked out from making future
--   <tt>PutFileSystemPolicy</tt> requests on the file system. Set
--   <tt>BypassPolicyLockoutSafetyCheck</tt> to <tt>True</tt> only when you
--   intend to prevent the principal that is making the request from making
--   a subsequent <tt>PutFileSystemPolicy</tt> request on the file system.
--   The default value is False.
putFileSystemPolicy_bypassPolicyLockoutSafetyCheck :: Lens' PutFileSystemPolicy (Maybe Bool)

-- | The ID of the EFS file system that you want to create or update the
--   <tt>FileSystemPolicy</tt> for.
putFileSystemPolicy_fileSystemId :: Lens' PutFileSystemPolicy Text

-- | The <tt>FileSystemPolicy</tt> that you're creating. Accepts a JSON
--   formatted policy definition. EFS file system policies have a 20,000
--   character limit. To find out more about the elements that make up a
--   file system policy, see <a>EFS Resource-based Policies</a>.
putFileSystemPolicy_policy :: Lens' PutFileSystemPolicy Text

-- | Specifies the EFS file system to which the <tt>FileSystemPolicy</tt>
--   applies.
fileSystemPolicyDescription_fileSystemId :: Lens' FileSystemPolicyDescription (Maybe Text)

-- | The JSON formatted <tt>FileSystemPolicy</tt> for the EFS file system.
fileSystemPolicyDescription_policy :: Lens' FileSystemPolicyDescription (Maybe Text)

-- | (Optional) ID of the file system whose description you want to
--   retrieve (String).
describeFileSystems_fileSystemId :: Lens' DescribeFileSystems (Maybe Text)

-- | (Optional) Restricts the list to the file system with this creation
--   token (String). You specify a creation token when you create an Amazon
--   EFS file system.
describeFileSystems_creationToken :: Lens' DescribeFileSystems (Maybe Text)

-- | (Optional) Opaque pagination token returned from a previous
--   <tt>DescribeFileSystems</tt> operation (String). If present, specifies
--   to continue the list from where the returning call had left off.
describeFileSystems_marker :: Lens' DescribeFileSystems (Maybe Text)

-- | (Optional) Specifies the maximum number of file systems to return in
--   the response (integer). This number is automatically set to 100. The
--   response is paginated at 100 per page if you have more than 100 file
--   systems.
describeFileSystems_maxItems :: Lens' DescribeFileSystems (Maybe Natural)

-- | An array of file system descriptions.
describeFileSystemsResponse_fileSystems :: Lens' DescribeFileSystemsResponse (Maybe [FileSystemDescription])

-- | Present if provided by caller in the request (String).
describeFileSystemsResponse_marker :: Lens' DescribeFileSystemsResponse (Maybe Text)

-- | Present if there are more file systems than returned in the response
--   (String). You can use the <tt>NextMarker</tt> in the subsequent
--   request to fetch the descriptions.
describeFileSystemsResponse_nextMarker :: Lens' DescribeFileSystemsResponse (Maybe Text)

-- | The response's http status code.
describeFileSystemsResponse_httpStatus :: Lens' DescribeFileSystemsResponse Int

-- | The ID of the mount target to delete (String).
deleteMountTarget_mountTargetId :: Lens' DeleteMountTarget Text

-- | Specifies the EFS resource ID preference to set for the user's Amazon
--   Web Services account, in the current Amazon Web Services Region,
--   either <tt>LONG_ID</tt> (17 characters), or <tt>SHORT_ID</tt> (8
--   characters).
--   
--   Starting in October, 2021, you will receive an error when setting the
--   account preference to <tt>SHORT_ID</tt>. Contact Amazon Web Services
--   support if you receive an error and need to use short IDs for file
--   system and mount target resources.
putAccountPreferences_resourceIdType :: Lens' PutAccountPreferences ResourceIdType

-- | Undocumented member.
putAccountPreferencesResponse_resourceIdPreference :: Lens' PutAccountPreferencesResponse (Maybe ResourceIdPreference)

-- | The response's http status code.
putAccountPreferencesResponse_httpStatus :: Lens' PutAccountPreferencesResponse Int

-- | The ID of the mount target whose security groups you want to retrieve.
describeMountTargetSecurityGroups_mountTargetId :: Lens' DescribeMountTargetSecurityGroups Text

-- | The response's http status code.
describeMountTargetSecurityGroupsResponse_httpStatus :: Lens' DescribeMountTargetSecurityGroupsResponse Int

-- | An array of security groups.
describeMountTargetSecurityGroupsResponse_securityGroups :: Lens' DescribeMountTargetSecurityGroupsResponse [Text]

-- | (Optional) Specifies an EFS access point to describe in the response;
--   mutually exclusive with <tt>FileSystemId</tt>.
describeAccessPoints_accessPointId :: Lens' DescribeAccessPoints (Maybe Text)

-- | (Optional) If you provide a <tt>FileSystemId</tt>, EFS returns all
--   access points for that file system; mutually exclusive with
--   <tt>AccessPointId</tt>.
describeAccessPoints_fileSystemId :: Lens' DescribeAccessPoints (Maybe Text)

-- | <tt>NextToken</tt> is present if the response is paginated. You can
--   use <tt>NextMarker</tt> in the subsequent request to fetch the next
--   page of access point descriptions.
describeAccessPoints_nextToken :: Lens' DescribeAccessPoints (Maybe Text)

-- | (Optional) When retrieving all access points for a file system, you
--   can optionally specify the <tt>MaxItems</tt> parameter to limit the
--   number of objects returned in a response. The default value is 100.
describeAccessPoints_maxResults :: Lens' DescribeAccessPoints (Maybe Natural)

-- | An array of access point descriptions.
describeAccessPointsResponse_accessPoints :: Lens' DescribeAccessPointsResponse (Maybe [AccessPointDescription])

-- | Present if there are more access points than returned in the response.
--   You can use the NextMarker in the subsequent request to fetch the
--   additional descriptions.
describeAccessPointsResponse_nextToken :: Lens' DescribeAccessPointsResponse (Maybe Text)

-- | The response's http status code.
describeAccessPointsResponse_httpStatus :: Lens' DescribeAccessPointsResponse Int

-- | An array of up to five VPC security group IDs.
modifyMountTargetSecurityGroups_securityGroups :: Lens' ModifyMountTargetSecurityGroups (Maybe [Text])

-- | The ID of the mount target whose security groups you want to modify.
modifyMountTargetSecurityGroups_mountTargetId :: Lens' ModifyMountTargetSecurityGroups Text

-- | The throughput, measured in MiB/s, that you want to provision for a
--   file system that you're creating. Valid values are 1-1024. Required if
--   <tt>ThroughputMode</tt> is set to <tt>provisioned</tt>. The upper
--   limit for throughput is 1024 MiB/s. To increase this limit, contact
--   Amazon Web Services Support. For more information, see <a>Amazon EFS
--   quotas that you can increase</a> in the <i>Amazon EFS User Guide</i>.
createFileSystem_provisionedThroughputInMibps :: Lens' CreateFileSystem (Maybe Double)

-- | Used to create a file system that uses One Zone storage classes. It
--   specifies the Amazon Web Services Availability Zone in which to create
--   the file system. Use the format <tt>us-east-1a</tt> to specify the
--   Availability Zone. For more information about One Zone storage
--   classes, see <a>Using EFS storage classes</a> in the <i>Amazon EFS
--   User Guide</i>.
--   
--   One Zone storage classes are not available in all Availability Zones
--   in Amazon Web Services Regions where Amazon EFS is available.
createFileSystem_availabilityZoneName :: Lens' CreateFileSystem (Maybe Text)

-- | The performance mode of the file system. We recommend
--   <tt>generalPurpose</tt> performance mode for most file systems. File
--   systems using the <tt>maxIO</tt> performance mode can scale to higher
--   levels of aggregate throughput and operations per second with a
--   tradeoff of slightly higher latencies for most file operations. The
--   performance mode can't be changed after the file system has been
--   created.
--   
--   The <tt>maxIO</tt> mode is not supported on file systems using One
--   Zone storage classes.
createFileSystem_performanceMode :: Lens' CreateFileSystem (Maybe PerformanceMode)

-- | Specifies whether automatic backups are enabled on the file system
--   that you are creating. Set the value to <tt>true</tt> to enable
--   automatic backups. If you are creating a file system that uses One
--   Zone storage classes, automatic backups are enabled by default. For
--   more information, see <a>Automatic backups</a> in the <i>Amazon EFS
--   User Guide</i>.
--   
--   Default is <tt>false</tt>. However, if you specify an
--   <tt>AvailabilityZoneName</tt>, the default is <tt>true</tt>.
--   
--   Backup is not available in all Amazon Web Services Regionswhere Amazon
--   EFS is available.
createFileSystem_backup :: Lens' CreateFileSystem (Maybe Bool)

-- | A Boolean value that, if true, creates an encrypted file system. When
--   creating an encrypted file system, you have the option of specifying
--   CreateFileSystemRequest$KmsKeyId for an existing Key Management
--   Service (KMS customer master key (CMK). If you don't specify a CMK,
--   then the default CMK for Amazon EFS, <tt>/aws/elasticfilesystem</tt>,
--   is used to protect the encrypted file system.
createFileSystem_encrypted :: Lens' CreateFileSystem (Maybe Bool)

-- | Specifies the throughput mode for the file system, either
--   <tt>bursting</tt> or <tt>provisioned</tt>. If you set
--   <tt>ThroughputMode</tt> to <tt>provisioned</tt>, you must also set a
--   value for <tt>ProvisionedThroughputInMibps</tt>. After you create the
--   file system, you can decrease your file system's throughput in
--   Provisioned Throughput mode or change between the throughput modes, as
--   long as it’s been more than 24 hours since the last decrease or
--   throughput mode change. For more information, see <a>Specifying
--   throughput with provisioned mode</a> in the <i>Amazon EFS User
--   Guide</i>.
--   
--   Default is <tt>bursting</tt>.
createFileSystem_throughputMode :: Lens' CreateFileSystem (Maybe ThroughputMode)

-- | The ID of the KMS CMK that you want to use to protect the encrypted
--   file system. This parameter is only required if you want to use a
--   non-default KMS key. If this parameter is not specified, the default
--   CMK for Amazon EFS is used. This ID can be in one of the following
--   formats:
--   
--   <ul>
--   <li>Key ID - A unique identifier of the key, for example
--   <tt>1234abcd-12ab-34cd-56ef-1234567890ab</tt>.</li>
--   <li>ARN - An Amazon Resource Name (ARN) for the key, for example
--   <tt>arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</tt>.</li>
--   <li>Key alias - A previously created display name for a key, for
--   example <tt>alias/projectKey1</tt>.</li>
--   <li>Key alias ARN - An ARN for a key alias, for example
--   <tt>arn:aws:kms:us-west-2:444455556666:alias/projectKey1</tt>.</li>
--   </ul>
--   
--   If <tt>KmsKeyId</tt> is specified, the
--   CreateFileSystemRequest$Encrypted parameter must be set to true.
--   
--   EFS accepts only symmetric KMS keys. You cannot use asymmetric KMS
--   keys with EFS file systems.
createFileSystem_kmsKeyId :: Lens' CreateFileSystem (Maybe Text)

-- | Use to create one or more tags associated with the file system. Each
--   tag is a user-defined key-value pair. Name your file system on
--   creation by including a <tt>"Key":"Name","Value":"{value}"</tt>
--   key-value pair. Each key must be unique. For more information, see
--   <a>Tagging Amazon Web Services resources</a> in the <i>Amazon Web
--   Services General Reference Guide</i>.
createFileSystem_tags :: Lens' CreateFileSystem (Maybe [Tag])

-- | A string of up to 64 ASCII characters. Amazon EFS uses this to ensure
--   idempotent creation.
createFileSystem_creationToken :: Lens' CreateFileSystem Text

-- | The unique and consistent identifier of the Availability Zone in which
--   the file system's One Zone storage classes exist. For example,
--   <tt>use1-az1</tt> is an Availability Zone ID for the us-east-1 Amazon
--   Web Services Region, and it has the same location in every Amazon Web
--   Services account.
fileSystemDescription_availabilityZoneId :: Lens' FileSystemDescription (Maybe Text)

-- | The amount of provisioned throughput, measured in MiB/s, for the file
--   system. Valid for file systems using <tt>ThroughputMode</tt> set to
--   <tt>provisioned</tt>.
fileSystemDescription_provisionedThroughputInMibps :: Lens' FileSystemDescription (Maybe Double)

-- | Describes the Amazon Web Services Availability Zone in which the file
--   system is located, and is valid only for file systems using One Zone
--   storage classes. For more information, see <a>Using EFS storage
--   classes</a> in the <i>Amazon EFS User Guide</i>.
fileSystemDescription_availabilityZoneName :: Lens' FileSystemDescription (Maybe Text)

-- | The Amazon Resource Name (ARN) for the EFS file system, in the format
--   <tt>arn:aws:elasticfilesystem:region:account-id:file-system/file-system-id
--   </tt>. Example with sample data:
--   <tt>arn:aws:elasticfilesystem:us-west-2:1111333322228888:file-system/fs-01234567</tt>
fileSystemDescription_fileSystemArn :: Lens' FileSystemDescription (Maybe Text)

-- | A Boolean value that, if true, indicates that the file system is
--   encrypted.
fileSystemDescription_encrypted :: Lens' FileSystemDescription (Maybe Bool)

-- | Displays the file system's throughput mode. For more information, see
--   <a>Throughput modes</a> in the <i>Amazon EFS User Guide</i>.
fileSystemDescription_throughputMode :: Lens' FileSystemDescription (Maybe ThroughputMode)

-- | The ID of an Key Management Service customer master key (CMK) that was
--   used to protect the encrypted file system.
fileSystemDescription_kmsKeyId :: Lens' FileSystemDescription (Maybe Text)

-- | You can add tags to a file system, including a <tt>Name</tt> tag. For
--   more information, see CreateFileSystem. If the file system has a
--   <tt>Name</tt> tag, Amazon EFS returns the value in this field.
fileSystemDescription_name :: Lens' FileSystemDescription (Maybe Text)

-- | The Amazon Web Services account that created the file system. If the
--   file system was created by an IAM user, the parent account to which
--   the user belongs is the owner.
fileSystemDescription_ownerId :: Lens' FileSystemDescription Text

-- | The opaque string specified in the request.
fileSystemDescription_creationToken :: Lens' FileSystemDescription Text

-- | The ID of the file system, assigned by Amazon EFS.
fileSystemDescription_fileSystemId :: Lens' FileSystemDescription Text

-- | The time that the file system was created, in seconds (since
--   1970-01-01T00:00:00Z).
fileSystemDescription_creationTime :: Lens' FileSystemDescription UTCTime

-- | The lifecycle phase of the file system.
fileSystemDescription_lifeCycleState :: Lens' FileSystemDescription LifeCycleState

-- | The current number of mount targets that the file system has. For more
--   information, see CreateMountTarget.
fileSystemDescription_numberOfMountTargets :: Lens' FileSystemDescription Natural

-- | The latest known metered size (in bytes) of data stored in the file
--   system, in its <tt>Value</tt> field, and the time at which that size
--   was determined in its <tt>Timestamp</tt> field. The <tt>Timestamp</tt>
--   value is the integer number of seconds since 1970-01-01T00:00:00Z. The
--   <tt>SizeInBytes</tt> value doesn't represent the size of a consistent
--   snapshot of the file system, but it is eventually consistent when
--   there are no writes to the file system. That is, <tt>SizeInBytes</tt>
--   represents actual size only if the file system is not modified for a
--   period longer than a couple of hours. Otherwise, the value is not the
--   exact size that the file system was at any point in time.
fileSystemDescription_sizeInBytes :: Lens' FileSystemDescription FileSystemSize

-- | The performance mode of the file system.
fileSystemDescription_performanceMode :: Lens' FileSystemDescription PerformanceMode

-- | The tags associated with the file system, presented as an array of
--   <tt>Tag</tt> objects.
fileSystemDescription_tags :: Lens' FileSystemDescription [Tag]

-- | The ID of the file system for which you are creating the
--   <tt>LifecycleConfiguration</tt> object (String).
putLifecycleConfiguration_fileSystemId :: Lens' PutLifecycleConfiguration Text

-- | An array of <tt>LifecyclePolicy</tt> objects that define the file
--   system's <tt>LifecycleConfiguration</tt> object. A
--   <tt>LifecycleConfiguration</tt> object informs EFS lifecycle
--   management and intelligent tiering of the following:
--   
--   <ul>
--   <li>When to move files in the file system from primary storage to the
--   IA storage class.</li>
--   <li>When to move files that are in IA storage to primary storage.</li>
--   </ul>
--   
--   When using the <tt>put-lifecycle-configuration</tt> CLI command or the
--   <tt>PutLifecycleConfiguration</tt> API action, Amazon EFS requires
--   that each <tt>LifecyclePolicy</tt> object have only a single
--   transition. This means that in a request body,
--   <tt>LifecyclePolicies</tt> needs to be structured as an array of
--   <tt>LifecyclePolicy</tt> objects, one object for each transition,
--   <tt>TransitionToIA</tt>, <tt>TransitionToPrimaryStorageClass</tt>. See
--   the example requests in the following section for more information.
putLifecycleConfiguration_lifecyclePolicies :: Lens' PutLifecycleConfiguration [LifecyclePolicy]

-- | An array of lifecycle management policies. EFS supports a maximum of
--   one policy per file system.
lifecycleConfigurationDescription_lifecyclePolicies :: Lens' LifecycleConfigurationDescription (Maybe [LifecyclePolicy])

-- | Specifies which EFS file system to update the backup policy for.
putBackupPolicy_fileSystemId :: Lens' PutBackupPolicy Text

-- | The backup policy included in the <tt>PutBackupPolicy</tt> request.
putBackupPolicy_backupPolicy :: Lens' PutBackupPolicy BackupPolicy

-- | Describes the file system's backup policy, indicating whether
--   automatic backups are turned on or off..
backupPolicyDescription_backupPolicy :: Lens' BackupPolicyDescription (Maybe BackupPolicy)

-- | The ID of the file system you want to delete.
deleteFileSystem_fileSystemId :: Lens' DeleteFileSystem Text

-- | (Optional) Sets the amount of provisioned throughput, in MiB/s, for
--   the file system. Valid values are 1-1024. If you are changing the
--   throughput mode to provisioned, you must also provide the amount of
--   provisioned throughput. Required if <tt>ThroughputMode</tt> is changed
--   to <tt>provisioned</tt> on update.
updateFileSystem_provisionedThroughputInMibps :: Lens' UpdateFileSystem (Maybe Double)

-- | (Optional) Updates the file system's throughput mode. If you're not
--   updating your throughput mode, you don't need to provide this value in
--   your request. If you are changing the <tt>ThroughputMode</tt> to
--   <tt>provisioned</tt>, you must also set a value for
--   <tt>ProvisionedThroughputInMibps</tt>.
updateFileSystem_throughputMode :: Lens' UpdateFileSystem (Maybe ThroughputMode)

-- | The ID of the file system that you want to update.
updateFileSystem_fileSystemId :: Lens' UpdateFileSystem Text

-- | The unique and consistent identifier of the Availability Zone in which
--   the file system's One Zone storage classes exist. For example,
--   <tt>use1-az1</tt> is an Availability Zone ID for the us-east-1 Amazon
--   Web Services Region, and it has the same location in every Amazon Web
--   Services account.
fileSystemDescription_availabilityZoneId :: Lens' FileSystemDescription (Maybe Text)

-- | The amount of provisioned throughput, measured in MiB/s, for the file
--   system. Valid for file systems using <tt>ThroughputMode</tt> set to
--   <tt>provisioned</tt>.
fileSystemDescription_provisionedThroughputInMibps :: Lens' FileSystemDescription (Maybe Double)

-- | Describes the Amazon Web Services Availability Zone in which the file
--   system is located, and is valid only for file systems using One Zone
--   storage classes. For more information, see <a>Using EFS storage
--   classes</a> in the <i>Amazon EFS User Guide</i>.
fileSystemDescription_availabilityZoneName :: Lens' FileSystemDescription (Maybe Text)

-- | The Amazon Resource Name (ARN) for the EFS file system, in the format
--   <tt>arn:aws:elasticfilesystem:region:account-id:file-system/file-system-id
--   </tt>. Example with sample data:
--   <tt>arn:aws:elasticfilesystem:us-west-2:1111333322228888:file-system/fs-01234567</tt>
fileSystemDescription_fileSystemArn :: Lens' FileSystemDescription (Maybe Text)

-- | A Boolean value that, if true, indicates that the file system is
--   encrypted.
fileSystemDescription_encrypted :: Lens' FileSystemDescription (Maybe Bool)

-- | Displays the file system's throughput mode. For more information, see
--   <a>Throughput modes</a> in the <i>Amazon EFS User Guide</i>.
fileSystemDescription_throughputMode :: Lens' FileSystemDescription (Maybe ThroughputMode)

-- | The ID of an Key Management Service customer master key (CMK) that was
--   used to protect the encrypted file system.
fileSystemDescription_kmsKeyId :: Lens' FileSystemDescription (Maybe Text)

-- | You can add tags to a file system, including a <tt>Name</tt> tag. For
--   more information, see CreateFileSystem. If the file system has a
--   <tt>Name</tt> tag, Amazon EFS returns the value in this field.
fileSystemDescription_name :: Lens' FileSystemDescription (Maybe Text)

-- | The Amazon Web Services account that created the file system. If the
--   file system was created by an IAM user, the parent account to which
--   the user belongs is the owner.
fileSystemDescription_ownerId :: Lens' FileSystemDescription Text

-- | The opaque string specified in the request.
fileSystemDescription_creationToken :: Lens' FileSystemDescription Text

-- | The ID of the file system, assigned by Amazon EFS.
fileSystemDescription_fileSystemId :: Lens' FileSystemDescription Text

-- | The time that the file system was created, in seconds (since
--   1970-01-01T00:00:00Z).
fileSystemDescription_creationTime :: Lens' FileSystemDescription UTCTime

-- | The lifecycle phase of the file system.
fileSystemDescription_lifeCycleState :: Lens' FileSystemDescription LifeCycleState

-- | The current number of mount targets that the file system has. For more
--   information, see CreateMountTarget.
fileSystemDescription_numberOfMountTargets :: Lens' FileSystemDescription Natural

-- | The latest known metered size (in bytes) of data stored in the file
--   system, in its <tt>Value</tt> field, and the time at which that size
--   was determined in its <tt>Timestamp</tt> field. The <tt>Timestamp</tt>
--   value is the integer number of seconds since 1970-01-01T00:00:00Z. The
--   <tt>SizeInBytes</tt> value doesn't represent the size of a consistent
--   snapshot of the file system, but it is eventually consistent when
--   there are no writes to the file system. That is, <tt>SizeInBytes</tt>
--   represents actual size only if the file system is not modified for a
--   period longer than a couple of hours. Otherwise, the value is not the
--   exact size that the file system was at any point in time.
fileSystemDescription_sizeInBytes :: Lens' FileSystemDescription FileSystemSize

-- | The performance mode of the file system.
fileSystemDescription_performanceMode :: Lens' FileSystemDescription PerformanceMode

-- | The tags associated with the file system, presented as an array of
--   <tt>Tag</tt> objects.
fileSystemDescription_tags :: Lens' FileSystemDescription [Tag]

-- | Valid IPv4 address within the address range of the specified subnet.
createMountTarget_ipAddress :: Lens' CreateMountTarget (Maybe Text)

-- | Up to five VPC security group IDs, of the form <tt>sg-xxxxxxxx</tt>.
--   These must be for the same VPC as subnet specified.
createMountTarget_securityGroups :: Lens' CreateMountTarget (Maybe [Text])

-- | The ID of the file system for which to create the mount target.
createMountTarget_fileSystemId :: Lens' CreateMountTarget Text

-- | The ID of the subnet to add the mount target in. For file systems that
--   use One Zone storage classes, use the subnet that is associated with
--   the file system's Availability Zone.
createMountTarget_subnetId :: Lens' CreateMountTarget Text

-- | Address at which the file system can be mounted by using the mount
--   target.
mountTargetDescription_ipAddress :: Lens' MountTargetDescription (Maybe Text)

-- | The unique and consistent identifier of the Availability Zone that the
--   mount target resides in. For example, <tt>use1-az1</tt> is an AZ ID
--   for the us-east-1 Region and it has the same location in every Amazon
--   Web Services account.
mountTargetDescription_availabilityZoneId :: Lens' MountTargetDescription (Maybe Text)

-- | The virtual private cloud (VPC) ID that the mount target is configured
--   in.
mountTargetDescription_vpcId :: Lens' MountTargetDescription (Maybe Text)

-- | The name of the Availability Zone in which the mount target is
--   located. Availability Zones are independently mapped to names for each
--   Amazon Web Services account. For example, the Availability Zone
--   <tt>us-east-1a</tt> for your Amazon Web Services account might not be
--   the same location as <tt>us-east-1a</tt> for another Amazon Web
--   Services account.
mountTargetDescription_availabilityZoneName :: Lens' MountTargetDescription (Maybe Text)

-- | The ID of the network interface that Amazon EFS created when it
--   created the mount target.
mountTargetDescription_networkInterfaceId :: Lens' MountTargetDescription (Maybe Text)

-- | Amazon Web Services account ID that owns the resource.
mountTargetDescription_ownerId :: Lens' MountTargetDescription (Maybe Text)

-- | System-assigned mount target ID.
mountTargetDescription_mountTargetId :: Lens' MountTargetDescription Text

-- | The ID of the file system for which the mount target is intended.
mountTargetDescription_fileSystemId :: Lens' MountTargetDescription Text

-- | The ID of the mount target's subnet.
mountTargetDescription_subnetId :: Lens' MountTargetDescription Text

-- | Lifecycle state of the mount target.
mountTargetDescription_lifeCycleState :: Lens' MountTargetDescription LifeCycleState

-- | The ID specifying the EFS resource that you want to create a tag for.
tagResource_resourceId :: Lens' TagResource Text

-- | An array of <tt>Tag</tt> objects to add. Each <tt>Tag</tt> object is a
--   key-value pair.
tagResource_tags :: Lens' TagResource [Tag]

-- | Specifies which EFS file system to retrieve the <tt>BackupPolicy</tt>
--   for.
describeBackupPolicy_fileSystemId :: Lens' DescribeBackupPolicy Text

-- | Describes the file system's backup policy, indicating whether
--   automatic backups are turned on or off..
backupPolicyDescription_backupPolicy :: Lens' BackupPolicyDescription (Maybe BackupPolicy)

-- | The ID of the file system whose <tt>LifecycleConfiguration</tt> object
--   you want to retrieve (String).
describeLifecycleConfiguration_fileSystemId :: Lens' DescribeLifecycleConfiguration Text

-- | An array of lifecycle management policies. EFS supports a maximum of
--   one policy per file system.
lifecycleConfigurationDescription_lifecyclePolicies :: Lens' LifecycleConfigurationDescription (Maybe [LifecyclePolicy])

-- | Specifies the EFS resource that you want to remove tags from.
untagResource_resourceId :: Lens' UntagResource Text

-- | The keys of the key-value tag pairs that you want to remove from the
--   specified EFS resource.
untagResource_tagKeys :: Lens' UntagResource (NonEmpty Text)

-- | Specifies which EFS file system to retrieve the
--   <tt>FileSystemPolicy</tt> for.
describeFileSystemPolicy_fileSystemId :: Lens' DescribeFileSystemPolicy Text

-- | Specifies the EFS file system to which the <tt>FileSystemPolicy</tt>
--   applies.
fileSystemPolicyDescription_fileSystemId :: Lens' FileSystemPolicyDescription (Maybe Text)

-- | The JSON formatted <tt>FileSystemPolicy</tt> for the EFS file system.
fileSystemPolicyDescription_policy :: Lens' FileSystemPolicyDescription (Maybe Text)

-- | The ID of the access point that you want to delete.
deleteAccessPoint_accessPointId :: Lens' DeleteAccessPoint Text

-- | The full POSIX identity, including the user ID, group ID, and
--   secondary group IDs on the access point that is used for all file
--   operations by NFS clients using the access point.
accessPointDescription_posixUser :: Lens' AccessPointDescription (Maybe PosixUser)

-- | The directory on the Amazon EFS file system that the access point
--   exposes as the root directory to NFS clients using the access point.
accessPointDescription_rootDirectory :: Lens' AccessPointDescription (Maybe RootDirectory)

-- | The opaque string specified in the request to ensure idempotent
--   creation.
accessPointDescription_clientToken :: Lens' AccessPointDescription (Maybe Text)

-- | The ID of the access point, assigned by Amazon EFS.
accessPointDescription_accessPointId :: Lens' AccessPointDescription (Maybe Text)

-- | The ID of the EFS file system that the access point applies to.
accessPointDescription_fileSystemId :: Lens' AccessPointDescription (Maybe Text)

-- | Identified the Amazon Web Services account that owns the access point
--   resource.
accessPointDescription_ownerId :: Lens' AccessPointDescription (Maybe Text)

-- | The name of the access point. This is the value of the <tt>Name</tt>
--   tag.
accessPointDescription_name :: Lens' AccessPointDescription (Maybe Text)

-- | The unique Amazon Resource Name (ARN) associated with the access
--   point.
accessPointDescription_accessPointArn :: Lens' AccessPointDescription (Maybe Text)

-- | Identifies the lifecycle phase of the access point.
accessPointDescription_lifeCycleState :: Lens' AccessPointDescription (Maybe LifeCycleState)

-- | The tags associated with the access point, presented as an array of
--   Tag objects.
accessPointDescription_tags :: Lens' AccessPointDescription (Maybe [Tag])

-- | Describes the status of the file system's backup policy.
--   
--   <ul>
--   <li><b><tt>ENABLED</tt></b> - EFS is automatically backing up the file
--   system.</li>
--   <li><b><tt>ENABLING</tt></b> - EFS is turning on automatic backups for
--   the file system.</li>
--   <li><b><tt>DISABLED</tt></b> - automatic back ups are turned off for
--   the file system.</li>
--   <li><b><tt>DISABLING</tt></b> - EFS is turning off automatic backups
--   for the file system.</li>
--   </ul>
backupPolicy_status :: Lens' BackupPolicy BackupStatus

-- | Describes the file system's backup policy, indicating whether
--   automatic backups are turned on or off..
backupPolicyDescription_backupPolicy :: Lens' BackupPolicyDescription (Maybe BackupPolicy)

-- | Specifies the POSIX user ID to apply to the <tt>RootDirectory</tt>.
--   Accepts values from 0 to 2^32 (4294967295).
creationInfo_ownerUid :: Lens' CreationInfo Natural

-- | Specifies the POSIX group ID to apply to the <tt>RootDirectory</tt>.
--   Accepts values from 0 to 2^32 (4294967295).
creationInfo_ownerGid :: Lens' CreationInfo Natural

-- | Specifies the POSIX permissions to apply to the
--   <tt>RootDirectory</tt>, in the format of an octal number representing
--   the file's mode bits.
creationInfo_permissions :: Lens' CreationInfo Text

-- | The unique and consistent identifier of the Availability Zone in which
--   the file system's One Zone storage classes exist. For example,
--   <tt>use1-az1</tt> is an Availability Zone ID for the us-east-1 Amazon
--   Web Services Region, and it has the same location in every Amazon Web
--   Services account.
fileSystemDescription_availabilityZoneId :: Lens' FileSystemDescription (Maybe Text)

-- | The amount of provisioned throughput, measured in MiB/s, for the file
--   system. Valid for file systems using <tt>ThroughputMode</tt> set to
--   <tt>provisioned</tt>.
fileSystemDescription_provisionedThroughputInMibps :: Lens' FileSystemDescription (Maybe Double)

-- | Describes the Amazon Web Services Availability Zone in which the file
--   system is located, and is valid only for file systems using One Zone
--   storage classes. For more information, see <a>Using EFS storage
--   classes</a> in the <i>Amazon EFS User Guide</i>.
fileSystemDescription_availabilityZoneName :: Lens' FileSystemDescription (Maybe Text)

-- | The Amazon Resource Name (ARN) for the EFS file system, in the format
--   <tt>arn:aws:elasticfilesystem:region:account-id:file-system/file-system-id
--   </tt>. Example with sample data:
--   <tt>arn:aws:elasticfilesystem:us-west-2:1111333322228888:file-system/fs-01234567</tt>
fileSystemDescription_fileSystemArn :: Lens' FileSystemDescription (Maybe Text)

-- | A Boolean value that, if true, indicates that the file system is
--   encrypted.
fileSystemDescription_encrypted :: Lens' FileSystemDescription (Maybe Bool)

-- | Displays the file system's throughput mode. For more information, see
--   <a>Throughput modes</a> in the <i>Amazon EFS User Guide</i>.
fileSystemDescription_throughputMode :: Lens' FileSystemDescription (Maybe ThroughputMode)

-- | The ID of an Key Management Service customer master key (CMK) that was
--   used to protect the encrypted file system.
fileSystemDescription_kmsKeyId :: Lens' FileSystemDescription (Maybe Text)

-- | You can add tags to a file system, including a <tt>Name</tt> tag. For
--   more information, see CreateFileSystem. If the file system has a
--   <tt>Name</tt> tag, Amazon EFS returns the value in this field.
fileSystemDescription_name :: Lens' FileSystemDescription (Maybe Text)

-- | The Amazon Web Services account that created the file system. If the
--   file system was created by an IAM user, the parent account to which
--   the user belongs is the owner.
fileSystemDescription_ownerId :: Lens' FileSystemDescription Text

-- | The opaque string specified in the request.
fileSystemDescription_creationToken :: Lens' FileSystemDescription Text

-- | The ID of the file system, assigned by Amazon EFS.
fileSystemDescription_fileSystemId :: Lens' FileSystemDescription Text

-- | The time that the file system was created, in seconds (since
--   1970-01-01T00:00:00Z).
fileSystemDescription_creationTime :: Lens' FileSystemDescription UTCTime

-- | The lifecycle phase of the file system.
fileSystemDescription_lifeCycleState :: Lens' FileSystemDescription LifeCycleState

-- | The current number of mount targets that the file system has. For more
--   information, see CreateMountTarget.
fileSystemDescription_numberOfMountTargets :: Lens' FileSystemDescription Natural

-- | The latest known metered size (in bytes) of data stored in the file
--   system, in its <tt>Value</tt> field, and the time at which that size
--   was determined in its <tt>Timestamp</tt> field. The <tt>Timestamp</tt>
--   value is the integer number of seconds since 1970-01-01T00:00:00Z. The
--   <tt>SizeInBytes</tt> value doesn't represent the size of a consistent
--   snapshot of the file system, but it is eventually consistent when
--   there are no writes to the file system. That is, <tt>SizeInBytes</tt>
--   represents actual size only if the file system is not modified for a
--   period longer than a couple of hours. Otherwise, the value is not the
--   exact size that the file system was at any point in time.
fileSystemDescription_sizeInBytes :: Lens' FileSystemDescription FileSystemSize

-- | The performance mode of the file system.
fileSystemDescription_performanceMode :: Lens' FileSystemDescription PerformanceMode

-- | The tags associated with the file system, presented as an array of
--   <tt>Tag</tt> objects.
fileSystemDescription_tags :: Lens' FileSystemDescription [Tag]

-- | Specifies the EFS file system to which the <tt>FileSystemPolicy</tt>
--   applies.
fileSystemPolicyDescription_fileSystemId :: Lens' FileSystemPolicyDescription (Maybe Text)

-- | The JSON formatted <tt>FileSystemPolicy</tt> for the EFS file system.
fileSystemPolicyDescription_policy :: Lens' FileSystemPolicyDescription (Maybe Text)

-- | The latest known metered size (in bytes) of data stored in the
--   Infrequent Access storage class.
fileSystemSize_valueInIA :: Lens' FileSystemSize (Maybe Natural)

-- | The latest known metered size (in bytes) of data stored in the
--   Standard storage class.
fileSystemSize_valueInStandard :: Lens' FileSystemSize (Maybe Natural)

-- | The time at which the size of data, returned in the <tt>Value</tt>
--   field, was determined. The value is the integer number of seconds
--   since 1970-01-01T00:00:00Z.
fileSystemSize_timestamp :: Lens' FileSystemSize (Maybe UTCTime)

-- | The latest known metered size (in bytes) of data stored in the file
--   system.
fileSystemSize_value :: Lens' FileSystemSize Natural

-- | An array of lifecycle management policies. EFS supports a maximum of
--   one policy per file system.
lifecycleConfigurationDescription_lifecyclePolicies :: Lens' LifecycleConfigurationDescription (Maybe [LifecyclePolicy])

-- | Describes the period of time that a file is not accessed, after which
--   it transitions to IA storage. Metadata operations such as listing the
--   contents of a directory don't count as file access events.
lifecyclePolicy_transitionToIA :: Lens' LifecyclePolicy (Maybe TransitionToIARules)

-- | Describes when to transition a file from IA storage to primary
--   storage. Metadata operations such as listing the contents of a
--   directory don't count as file access events.
lifecyclePolicy_transitionToPrimaryStorageClass :: Lens' LifecyclePolicy (Maybe TransitionToPrimaryStorageClassRules)

-- | Address at which the file system can be mounted by using the mount
--   target.
mountTargetDescription_ipAddress :: Lens' MountTargetDescription (Maybe Text)

-- | The unique and consistent identifier of the Availability Zone that the
--   mount target resides in. For example, <tt>use1-az1</tt> is an AZ ID
--   for the us-east-1 Region and it has the same location in every Amazon
--   Web Services account.
mountTargetDescription_availabilityZoneId :: Lens' MountTargetDescription (Maybe Text)

-- | The virtual private cloud (VPC) ID that the mount target is configured
--   in.
mountTargetDescription_vpcId :: Lens' MountTargetDescription (Maybe Text)

-- | The name of the Availability Zone in which the mount target is
--   located. Availability Zones are independently mapped to names for each
--   Amazon Web Services account. For example, the Availability Zone
--   <tt>us-east-1a</tt> for your Amazon Web Services account might not be
--   the same location as <tt>us-east-1a</tt> for another Amazon Web
--   Services account.
mountTargetDescription_availabilityZoneName :: Lens' MountTargetDescription (Maybe Text)

-- | The ID of the network interface that Amazon EFS created when it
--   created the mount target.
mountTargetDescription_networkInterfaceId :: Lens' MountTargetDescription (Maybe Text)

-- | Amazon Web Services account ID that owns the resource.
mountTargetDescription_ownerId :: Lens' MountTargetDescription (Maybe Text)

-- | System-assigned mount target ID.
mountTargetDescription_mountTargetId :: Lens' MountTargetDescription Text

-- | The ID of the file system for which the mount target is intended.
mountTargetDescription_fileSystemId :: Lens' MountTargetDescription Text

-- | The ID of the mount target's subnet.
mountTargetDescription_subnetId :: Lens' MountTargetDescription Text

-- | Lifecycle state of the mount target.
mountTargetDescription_lifeCycleState :: Lens' MountTargetDescription LifeCycleState

-- | Secondary POSIX group IDs used for all file system operations using
--   this access point.
posixUser_secondaryGids :: Lens' PosixUser (Maybe [Natural])

-- | The POSIX user ID used for all file system operations using this
--   access point.
posixUser_uid :: Lens' PosixUser Natural

-- | The POSIX group ID used for all file system operations using this
--   access point.
posixUser_gid :: Lens' PosixUser Natural

-- | Identifies the Amazon EFS resources to which the ID preference setting
--   applies, <tt>FILE_SYSTEM</tt> and <tt>MOUNT_TARGET</tt>.
resourceIdPreference_resources :: Lens' ResourceIdPreference (Maybe [Resource])

-- | Identifies the EFS resource ID preference, either <tt>LONG_ID</tt> (17
--   characters) or <tt>SHORT_ID</tt> (8 characters).
resourceIdPreference_resourceIdType :: Lens' ResourceIdPreference (Maybe ResourceIdType)

-- | (Optional) Specifies the POSIX IDs and permissions to apply to the
--   access point's <tt>RootDirectory</tt>. If the <tt>RootDirectory</tt>
--   &gt; <tt>Path</tt> specified does not exist, EFS creates the root
--   directory using the <tt>CreationInfo</tt> settings when a client
--   connects to an access point. When specifying the
--   <tt>CreationInfo</tt>, you must provide values for all properties.
--   
--   If you do not provide <tt>CreationInfo</tt> and the specified
--   <tt>RootDirectory</tt> &gt; <tt>Path</tt> does not exist, attempts to
--   mount the file system using the access point will fail.
rootDirectory_creationInfo :: Lens' RootDirectory (Maybe CreationInfo)

-- | Specifies the path on the EFS file system to expose as the root
--   directory to NFS clients using the access point to access the EFS file
--   system. A path can have up to four subdirectories. If the specified
--   path does not exist, you are required to provide the
--   <tt>CreationInfo</tt>.
rootDirectory_path :: Lens' RootDirectory (Maybe Text)

-- | The tag key (String). The key can't start with <tt>aws:</tt>.
tag_key :: Lens' Tag Text

-- | The value of the tag key.
tag_value :: Lens' Tag Text


module Amazonka.EFS.Waiters


-- | Derived from API version <tt>2015-02-01</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   Amazon Elastic File System
--   
--   Amazon Elastic File System (Amazon EFS) provides simple, scalable file
--   storage for use with Amazon EC2 instances in the Amazon Web Services
--   Cloud. With Amazon EFS, storage capacity is elastic, growing and
--   shrinking automatically as you add and remove files, so your
--   applications have the storage they need, when they need it. For more
--   information, see the <a>Amazon Elastic File System API Reference</a>
--   and the <a>Amazon Elastic File System User Guide</a>.
module Amazonka.EFS

-- | API version <tt>2015-02-01</tt> of the Amazon Elastic File System SDK
--   configuration.
defaultService :: Service

-- | Returned if the Backup service is not available in the Amazon Web
--   Services Region in which the request was made.
_ValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Returned if there is no mount target with the specified ID found in
--   the caller's Amazon Web Services account.
_MountTargetNotFound :: AsError a => Getting (First ServiceError) a ServiceError

-- | Returned if the size of <tt>SecurityGroups</tt> specified in the
--   request is greater than five.
_SecurityGroupLimitExceeded :: AsError a => Getting (First ServiceError) a ServiceError

-- | Returned if one of the specified security groups doesn't exist in the
--   subnet's VPC.
_SecurityGroupNotFound :: AsError a => Getting (First ServiceError) a ServiceError

-- | Returned if the mount target would violate one of the specified
--   restrictions based on the file system's existing mount targets.
_MountTargetConflict :: AsError a => Getting (First ServiceError) a ServiceError

-- | Returned if the requested Amazon EFS functionality is not available in
--   the specified Availability Zone.
_UnsupportedAvailabilityZone :: AsError a => Getting (First ServiceError) a ServiceError

-- | Returned if the Amazon Web Services account has already created the
--   maximum number of file systems allowed per account.
_FileSystemLimitExceeded :: AsError a => Getting (First ServiceError) a ServiceError

-- | Returned if you don’t wait at least 24 hours before changing the
--   throughput mode, or decreasing the Provisioned Throughput value.
_TooManyRequests :: AsError a => Getting (First ServiceError) a ServiceError

-- | The calling account has reached the limit for elastic network
--   interfaces for the specific Amazon Web Services Region. The client
--   should try to delete some elastic network interfaces or get the
--   account limit raised. For more information, see <a>Amazon VPC
--   Limits</a> in the <i>Amazon VPC User Guide</i> (see the Network
--   interfaces per VPC entry in the table).
_NetworkInterfaceLimitExceeded :: AsError a => Getting (First ServiceError) a ServiceError

-- | Returned if the file system you are trying to create already exists,
--   with the creation token you provided.
_FileSystemAlreadyExists :: AsError a => Getting (First ServiceError) a ServiceError

-- | Returned if there is no subnet with ID <tt>SubnetId</tt> provided in
--   the request.
_SubnetNotFound :: AsError a => Getting (First ServiceError) a ServiceError

-- | Returned if the Availability Zone that was specified for a mount
--   target is different from the Availability Zone that was specified for
--   One Zone storage classes. For more information, see <a>Regional and
--   One Zone storage redundancy</a>.
_AvailabilityZonesMismatch :: AsError a => Getting (First ServiceError) a ServiceError

-- | Returned if the specified <tt>FileSystemId</tt> value doesn't exist in
--   the requester's Amazon Web Services account.
_FileSystemNotFound :: AsError a => Getting (First ServiceError) a ServiceError

-- | Returned if the file system's lifecycle state is not "available".
_IncorrectFileSystemLifeCycleState :: AsError a => Getting (First ServiceError) a ServiceError

-- | Returned if the request is malformed or contains an error such as an
--   invalid parameter value or a missing required parameter.
_BadRequest :: AsError a => Getting (First ServiceError) a ServiceError

-- | Returned if <tt>IpAddress</tt> was not specified in the request and
--   there are no free IP addresses in the subnet.
_NoFreeAddressesInSubnet :: AsError a => Getting (First ServiceError) a ServiceError

-- | Returned if the throughput mode or amount of provisioned throughput
--   can't be changed because the throughput limit of 1024 MiB/s has been
--   reached.
_ThroughputLimitExceeded :: AsError a => Getting (First ServiceError) a ServiceError

-- | The service timed out trying to fulfill the request, and the client
--   should try the call again.
_DependencyTimeout :: AsError a => Getting (First ServiceError) a ServiceError

-- | Returned if a file system has mount targets.
_FileSystemInUse :: AsError a => Getting (First ServiceError) a ServiceError

-- | Returned if the mount target is not in the correct state for the
--   operation.
_IncorrectMountTargetState :: AsError a => Getting (First ServiceError) a ServiceError

-- | Returned if an error occurred on the server side.
_InternalServerError :: AsError a => Getting (First ServiceError) a ServiceError

-- | Returned if the request specified an <tt>IpAddress</tt> that is
--   already in use in the subnet.
_IpAddressInUse :: AsError a => Getting (First ServiceError) a ServiceError

-- | Returned if the default file system policy is in effect for the EFS
--   file system specified.
_PolicyNotFound :: AsError a => Getting (First ServiceError) a ServiceError

-- | Returned if the specified <tt>AccessPointId</tt> value doesn't exist
--   in the requester's Amazon Web Services account.
_AccessPointNotFound :: AsError a => Getting (First ServiceError) a ServiceError

-- | Returned if there's not enough capacity to provision additional
--   throughput. This value might be returned when you try to create a file
--   system in provisioned throughput mode, when you attempt to increase
--   the provisioned throughput of an existing file system, or when you
--   attempt to change an existing file system from bursting to provisioned
--   throughput mode. Try again later.
_InsufficientThroughputCapacity :: AsError a => Getting (First ServiceError) a ServiceError

-- | Returned if the <tt>FileSystemPolicy</tt> is is malformed or contains
--   an error such as an invalid parameter value or a missing required
--   parameter. Returned in the case of a policy lockout safety check
--   error.
_InvalidPolicyException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Returned if the access point you are trying to create already exists,
--   with the creation token you provided in the request.
_AccessPointAlreadyExists :: AsError a => Getting (First ServiceError) a ServiceError

-- | Returned if the Amazon Web Services account has already created the
--   maximum number of access points allowed per file system.
_AccessPointLimitExceeded :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newCreateAccessPoint</a> smart constructor.
data CreateAccessPoint
CreateAccessPoint' :: Maybe PosixUser -> Maybe RootDirectory -> Maybe [Tag] -> Text -> Text -> CreateAccessPoint

-- | Create a value of <a>CreateAccessPoint</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:posixUser:CreateAccessPoint'</a>,
--   <a>createAccessPoint_posixUser</a> - The operating system user and
--   group applied to all file system requests made using the access point.
--   
--   <a>$sel:rootDirectory:CreateAccessPoint'</a>,
--   <a>createAccessPoint_rootDirectory</a> - Specifies the directory on
--   the Amazon EFS file system that the access point exposes as the root
--   directory of your file system to NFS clients using the access point.
--   The clients using the access point can only access the root directory
--   and below. If the <tt>RootDirectory</tt> &gt; <tt>Path</tt> specified
--   does not exist, EFS creates it and applies the <tt>CreationInfo</tt>
--   settings when a client connects to an access point. When specifying a
--   <tt>RootDirectory</tt>, you need to provide the <tt>Path</tt>, and the
--   <tt>CreationInfo</tt>.
--   
--   Amazon EFS creates a root directory only if you have provided the
--   CreationInfo: OwnUid, OwnGID, and permissions for the directory. If
--   you do not provide this information, Amazon EFS does not create the
--   root directory. If the root directory does not exist, attempts to
--   mount using the access point will fail.
--   
--   <a>$sel:tags:CreateAccessPoint'</a>, <a>createAccessPoint_tags</a> -
--   Creates tags associated with the access point. Each tag is a key-value
--   pair, each key must be unique. For more information, see <a>Tagging
--   Amazon Web Services resources</a> in the <i>Amazon Web Services
--   General Reference Guide</i>.
--   
--   <a>$sel:clientToken:CreateAccessPoint'</a>,
--   <a>createAccessPoint_clientToken</a> - A string of up to 64 ASCII
--   characters that Amazon EFS uses to ensure idempotent creation.
--   
--   <a>$sel:fileSystemId:CreateAccessPoint'</a>,
--   <a>createAccessPoint_fileSystemId</a> - The ID of the EFS file system
--   that the access point provides access to.
newCreateAccessPoint :: Text -> Text -> CreateAccessPoint

-- | Provides a description of an EFS file system access point.
--   
--   <i>See:</i> <a>newAccessPointDescription</a> smart constructor.
data AccessPointDescription
AccessPointDescription' :: Maybe PosixUser -> Maybe RootDirectory -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe LifeCycleState -> Maybe [Tag] -> AccessPointDescription

-- | Create a value of <a>AccessPointDescription</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:posixUser:AccessPointDescription'</a>,
--   <a>accessPointDescription_posixUser</a> - The full POSIX identity,
--   including the user ID, group ID, and secondary group IDs on the access
--   point that is used for all file operations by NFS clients using the
--   access point.
--   
--   <a>$sel:rootDirectory:AccessPointDescription'</a>,
--   <a>accessPointDescription_rootDirectory</a> - The directory on the
--   Amazon EFS file system that the access point exposes as the root
--   directory to NFS clients using the access point.
--   
--   <a>$sel:clientToken:AccessPointDescription'</a>,
--   <a>accessPointDescription_clientToken</a> - The opaque string
--   specified in the request to ensure idempotent creation.
--   
--   <a>$sel:accessPointId:AccessPointDescription'</a>,
--   <a>accessPointDescription_accessPointId</a> - The ID of the access
--   point, assigned by Amazon EFS.
--   
--   <a>$sel:fileSystemId:AccessPointDescription'</a>,
--   <a>accessPointDescription_fileSystemId</a> - The ID of the EFS file
--   system that the access point applies to.
--   
--   <a>$sel:ownerId:AccessPointDescription'</a>,
--   <a>accessPointDescription_ownerId</a> - Identified the Amazon Web
--   Services account that owns the access point resource.
--   
--   <a>$sel:name:AccessPointDescription'</a>,
--   <a>accessPointDescription_name</a> - The name of the access point.
--   This is the value of the <tt>Name</tt> tag.
--   
--   <a>$sel:accessPointArn:AccessPointDescription'</a>,
--   <a>accessPointDescription_accessPointArn</a> - The unique Amazon
--   Resource Name (ARN) associated with the access point.
--   
--   <a>$sel:lifeCycleState:AccessPointDescription'</a>,
--   <a>accessPointDescription_lifeCycleState</a> - Identifies the
--   lifecycle phase of the access point.
--   
--   <a>$sel:tags:AccessPointDescription'</a>,
--   <a>accessPointDescription_tags</a> - The tags associated with the
--   access point, presented as an array of Tag objects.
newAccessPointDescription :: AccessPointDescription

-- | <i>See:</i> <a>newDescribeAccountPreferences</a> smart constructor.
data DescribeAccountPreferences
DescribeAccountPreferences' :: Maybe Text -> Maybe Natural -> DescribeAccountPreferences

-- | Create a value of <a>DescribeAccountPreferences</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeAccountPreferences'</a>,
--   <a>describeAccountPreferences_nextToken</a> - (Optional) You can use
--   <tt>NextToken</tt> in a subsequent request to fetch the next page of
--   Amazon Web Services account preferences if the response payload was
--   paginated.
--   
--   <a>$sel:maxResults:DescribeAccountPreferences'</a>,
--   <a>describeAccountPreferences_maxResults</a> - (Optional) When
--   retrieving account preferences, you can optionally specify the
--   <tt>MaxItems</tt> parameter to limit the number of objects returned in
--   a response. The default value is 100.
newDescribeAccountPreferences :: DescribeAccountPreferences

-- | <i>See:</i> <a>newDescribeAccountPreferencesResponse</a> smart
--   constructor.
data DescribeAccountPreferencesResponse
DescribeAccountPreferencesResponse' :: Maybe ResourceIdPreference -> Maybe Text -> Int -> DescribeAccountPreferencesResponse

-- | Create a value of <a>DescribeAccountPreferencesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceIdPreference:DescribeAccountPreferencesResponse'</a>,
--   <a>describeAccountPreferencesResponse_resourceIdPreference</a> -
--   Describes the resource ID preference setting for the Amazon Web
--   Services account associated with the user making the request, in the
--   current Amazon Web Services Region.
--   
--   <a>$sel:nextToken:DescribeAccountPreferences'</a>,
--   <a>describeAccountPreferencesResponse_nextToken</a> - Present if there
--   are more records than returned in the response. You can use the
--   <tt>NextToken</tt> in the subsequent request to fetch the additional
--   descriptions.
--   
--   <a>$sel:httpStatus:DescribeAccountPreferencesResponse'</a>,
--   <a>describeAccountPreferencesResponse_httpStatus</a> - The response's
--   http status code.
newDescribeAccountPreferencesResponse :: Int -> DescribeAccountPreferencesResponse

-- | <i>See:</i> <a>newDescribeMountTargets</a> smart constructor.
data DescribeMountTargets
DescribeMountTargets' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Text -> DescribeMountTargets

-- | Create a value of <a>DescribeMountTargets</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accessPointId:DescribeMountTargets'</a>,
--   <a>describeMountTargets_accessPointId</a> - (Optional) The ID of the
--   access point whose mount targets that you want to list. It must be
--   included in your request if a <tt>FileSystemId</tt> or
--   <tt>MountTargetId</tt> is not included in your request. Accepts either
--   an access point ID or ARN as input.
--   
--   <a>$sel:fileSystemId:DescribeMountTargets'</a>,
--   <a>describeMountTargets_fileSystemId</a> - (Optional) ID of the file
--   system whose mount targets you want to list (String). It must be
--   included in your request if an <tt>AccessPointId</tt> or
--   <tt>MountTargetId</tt> is not included. Accepts either a file system
--   ID or ARN as input.
--   
--   <a>$sel:marker:DescribeMountTargets'</a>,
--   <a>describeMountTargets_marker</a> - (Optional) Opaque pagination
--   token returned from a previous <tt>DescribeMountTargets</tt> operation
--   (String). If present, it specifies to continue the list from where the
--   previous returning call left off.
--   
--   <a>$sel:maxItems:DescribeMountTargets'</a>,
--   <a>describeMountTargets_maxItems</a> - (Optional) Maximum number of
--   mount targets to return in the response. Currently, this number is
--   automatically set to 10, and other values are ignored. The response is
--   paginated at 100 per page if you have more than 100 mount targets.
--   
--   <a>$sel:mountTargetId:DescribeMountTargets'</a>,
--   <a>describeMountTargets_mountTargetId</a> - (Optional) ID of the mount
--   target that you want to have described (String). It must be included
--   in your request if <tt>FileSystemId</tt> is not included. Accepts
--   either a mount target ID or ARN as input.
newDescribeMountTargets :: DescribeMountTargets

-- | <i>See:</i> <a>newDescribeMountTargetsResponse</a> smart constructor.
data DescribeMountTargetsResponse
DescribeMountTargetsResponse' :: Maybe [MountTargetDescription] -> Maybe Text -> Maybe Text -> Int -> DescribeMountTargetsResponse

-- | Create a value of <a>DescribeMountTargetsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mountTargets:DescribeMountTargetsResponse'</a>,
--   <a>describeMountTargetsResponse_mountTargets</a> - Returns the file
--   system's mount targets as an array of <tt>MountTargetDescription</tt>
--   objects.
--   
--   <a>$sel:marker:DescribeMountTargets'</a>,
--   <a>describeMountTargetsResponse_marker</a> - If the request included
--   the <tt>Marker</tt>, the response returns that value in this field.
--   
--   <a>$sel:nextMarker:DescribeMountTargetsResponse'</a>,
--   <a>describeMountTargetsResponse_nextMarker</a> - If a value is
--   present, there are more mount targets to return. In a subsequent
--   request, you can provide <tt>Marker</tt> in your request with this
--   value to retrieve the next set of mount targets.
--   
--   <a>$sel:httpStatus:DescribeMountTargetsResponse'</a>,
--   <a>describeMountTargetsResponse_httpStatus</a> - The response's http
--   status code.
newDescribeMountTargetsResponse :: Int -> DescribeMountTargetsResponse

-- | <i>See:</i> <a>newDeleteFileSystemPolicy</a> smart constructor.
data DeleteFileSystemPolicy
DeleteFileSystemPolicy' :: Text -> DeleteFileSystemPolicy

-- | Create a value of <a>DeleteFileSystemPolicy</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fileSystemId:DeleteFileSystemPolicy'</a>,
--   <a>deleteFileSystemPolicy_fileSystemId</a> - Specifies the EFS file
--   system for which to delete the <tt>FileSystemPolicy</tt>.
newDeleteFileSystemPolicy :: Text -> DeleteFileSystemPolicy

-- | <i>See:</i> <a>newDeleteFileSystemPolicyResponse</a> smart
--   constructor.
data DeleteFileSystemPolicyResponse
DeleteFileSystemPolicyResponse' :: DeleteFileSystemPolicyResponse

-- | Create a value of <a>DeleteFileSystemPolicyResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteFileSystemPolicyResponse :: DeleteFileSystemPolicyResponse

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Maybe Text -> Maybe Natural -> Text -> ListTagsForResource

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTagsForResource'</a>,
--   <a>listTagsForResource_nextToken</a> - (Optional) You can use
--   <tt>NextToken</tt> in a subsequent request to fetch the next page of
--   access point descriptions if the response payload was paginated.
--   
--   <a>$sel:maxResults:ListTagsForResource'</a>,
--   <a>listTagsForResource_maxResults</a> - (Optional) Specifies the
--   maximum number of tag objects to return in the response. The default
--   value is 100.
--   
--   <a>$sel:resourceId:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceId</a> - Specifies the EFS resource you
--   want to retrieve tags for. You can retrieve tags for EFS file systems
--   and access points using this API endpoint.
newListTagsForResource :: Text -> ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe Text -> Maybe [Tag] -> Int -> ListTagsForResourceResponse

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTagsForResource'</a>,
--   <a>listTagsForResourceResponse_nextToken</a> - <tt>NextToken</tt> is
--   present if the response payload is paginated. You can use
--   <tt>NextToken</tt> in a subsequent request to fetch the next page of
--   access point descriptions.
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - An array of the tags for the
--   specified EFS resource.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | <i>See:</i> <a>newPutFileSystemPolicy</a> smart constructor.
data PutFileSystemPolicy
PutFileSystemPolicy' :: Maybe Bool -> Text -> Text -> PutFileSystemPolicy

-- | Create a value of <a>PutFileSystemPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bypassPolicyLockoutSafetyCheck:PutFileSystemPolicy'</a>,
--   <a>putFileSystemPolicy_bypassPolicyLockoutSafetyCheck</a> - (Optional)
--   A flag to indicate whether to bypass the <tt>FileSystemPolicy</tt>
--   lockout safety check. The policy lockout safety check determines
--   whether the policy in the request will prevent the principal making
--   the request will be locked out from making future
--   <tt>PutFileSystemPolicy</tt> requests on the file system. Set
--   <tt>BypassPolicyLockoutSafetyCheck</tt> to <tt>True</tt> only when you
--   intend to prevent the principal that is making the request from making
--   a subsequent <tt>PutFileSystemPolicy</tt> request on the file system.
--   The default value is False.
--   
--   <a>$sel:fileSystemId:PutFileSystemPolicy'</a>,
--   <a>putFileSystemPolicy_fileSystemId</a> - The ID of the EFS file
--   system that you want to create or update the <tt>FileSystemPolicy</tt>
--   for.
--   
--   <a>$sel:policy:PutFileSystemPolicy'</a>,
--   <a>putFileSystemPolicy_policy</a> - The <tt>FileSystemPolicy</tt> that
--   you're creating. Accepts a JSON formatted policy definition. EFS file
--   system policies have a 20,000 character limit. To find out more about
--   the elements that make up a file system policy, see <a>EFS
--   Resource-based Policies</a>.
newPutFileSystemPolicy :: Text -> Text -> PutFileSystemPolicy

-- | <i>See:</i> <a>newFileSystemPolicyDescription</a> smart constructor.
data FileSystemPolicyDescription
FileSystemPolicyDescription' :: Maybe Text -> Maybe Text -> FileSystemPolicyDescription

-- | Create a value of <a>FileSystemPolicyDescription</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fileSystemId:FileSystemPolicyDescription'</a>,
--   <a>fileSystemPolicyDescription_fileSystemId</a> - Specifies the EFS
--   file system to which the <tt>FileSystemPolicy</tt> applies.
--   
--   <a>$sel:policy:FileSystemPolicyDescription'</a>,
--   <a>fileSystemPolicyDescription_policy</a> - The JSON formatted
--   <tt>FileSystemPolicy</tt> for the EFS file system.
newFileSystemPolicyDescription :: FileSystemPolicyDescription

-- | <i>See:</i> <a>newDescribeFileSystems</a> smart constructor.
data DescribeFileSystems
DescribeFileSystems' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> DescribeFileSystems

-- | Create a value of <a>DescribeFileSystems</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fileSystemId:DescribeFileSystems'</a>,
--   <a>describeFileSystems_fileSystemId</a> - (Optional) ID of the file
--   system whose description you want to retrieve (String).
--   
--   <a>$sel:creationToken:DescribeFileSystems'</a>,
--   <a>describeFileSystems_creationToken</a> - (Optional) Restricts the
--   list to the file system with this creation token (String). You specify
--   a creation token when you create an Amazon EFS file system.
--   
--   <a>$sel:marker:DescribeFileSystems'</a>,
--   <a>describeFileSystems_marker</a> - (Optional) Opaque pagination token
--   returned from a previous <tt>DescribeFileSystems</tt> operation
--   (String). If present, specifies to continue the list from where the
--   returning call had left off.
--   
--   <a>$sel:maxItems:DescribeFileSystems'</a>,
--   <a>describeFileSystems_maxItems</a> - (Optional) Specifies the maximum
--   number of file systems to return in the response (integer). This
--   number is automatically set to 100. The response is paginated at 100
--   per page if you have more than 100 file systems.
newDescribeFileSystems :: DescribeFileSystems

-- | <i>See:</i> <a>newDescribeFileSystemsResponse</a> smart constructor.
data DescribeFileSystemsResponse
DescribeFileSystemsResponse' :: Maybe [FileSystemDescription] -> Maybe Text -> Maybe Text -> Int -> DescribeFileSystemsResponse

-- | Create a value of <a>DescribeFileSystemsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fileSystems:DescribeFileSystemsResponse'</a>,
--   <a>describeFileSystemsResponse_fileSystems</a> - An array of file
--   system descriptions.
--   
--   <a>$sel:marker:DescribeFileSystems'</a>,
--   <a>describeFileSystemsResponse_marker</a> - Present if provided by
--   caller in the request (String).
--   
--   <a>$sel:nextMarker:DescribeFileSystemsResponse'</a>,
--   <a>describeFileSystemsResponse_nextMarker</a> - Present if there are
--   more file systems than returned in the response (String). You can use
--   the <tt>NextMarker</tt> in the subsequent request to fetch the
--   descriptions.
--   
--   <a>$sel:httpStatus:DescribeFileSystemsResponse'</a>,
--   <a>describeFileSystemsResponse_httpStatus</a> - The response's http
--   status code.
newDescribeFileSystemsResponse :: Int -> DescribeFileSystemsResponse

-- | <i>See:</i> <a>newDeleteMountTarget</a> smart constructor.
data DeleteMountTarget
DeleteMountTarget' :: Text -> DeleteMountTarget

-- | Create a value of <a>DeleteMountTarget</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mountTargetId:DeleteMountTarget'</a>,
--   <a>deleteMountTarget_mountTargetId</a> - The ID of the mount target to
--   delete (String).
newDeleteMountTarget :: Text -> DeleteMountTarget

-- | <i>See:</i> <a>newDeleteMountTargetResponse</a> smart constructor.
data DeleteMountTargetResponse
DeleteMountTargetResponse' :: DeleteMountTargetResponse

-- | Create a value of <a>DeleteMountTargetResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteMountTargetResponse :: DeleteMountTargetResponse

-- | <i>See:</i> <a>newPutAccountPreferences</a> smart constructor.
data PutAccountPreferences
PutAccountPreferences' :: ResourceIdType -> PutAccountPreferences

-- | Create a value of <a>PutAccountPreferences</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceIdType:PutAccountPreferences'</a>,
--   <a>putAccountPreferences_resourceIdType</a> - Specifies the EFS
--   resource ID preference to set for the user's Amazon Web Services
--   account, in the current Amazon Web Services Region, either
--   <tt>LONG_ID</tt> (17 characters), or <tt>SHORT_ID</tt> (8 characters).
--   
--   Starting in October, 2021, you will receive an error when setting the
--   account preference to <tt>SHORT_ID</tt>. Contact Amazon Web Services
--   support if you receive an error and need to use short IDs for file
--   system and mount target resources.
newPutAccountPreferences :: ResourceIdType -> PutAccountPreferences

-- | <i>See:</i> <a>newPutAccountPreferencesResponse</a> smart constructor.
data PutAccountPreferencesResponse
PutAccountPreferencesResponse' :: Maybe ResourceIdPreference -> Int -> PutAccountPreferencesResponse

-- | Create a value of <a>PutAccountPreferencesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceIdPreference:PutAccountPreferencesResponse'</a>,
--   <a>putAccountPreferencesResponse_resourceIdPreference</a> -
--   Undocumented member.
--   
--   <a>$sel:httpStatus:PutAccountPreferencesResponse'</a>,
--   <a>putAccountPreferencesResponse_httpStatus</a> - The response's http
--   status code.
newPutAccountPreferencesResponse :: Int -> PutAccountPreferencesResponse

-- | <i>See:</i> <a>newDescribeMountTargetSecurityGroups</a> smart
--   constructor.
data DescribeMountTargetSecurityGroups
DescribeMountTargetSecurityGroups' :: Text -> DescribeMountTargetSecurityGroups

-- | Create a value of <a>DescribeMountTargetSecurityGroups</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mountTargetId:DescribeMountTargetSecurityGroups'</a>,
--   <a>describeMountTargetSecurityGroups_mountTargetId</a> - The ID of the
--   mount target whose security groups you want to retrieve.
newDescribeMountTargetSecurityGroups :: Text -> DescribeMountTargetSecurityGroups

-- | <i>See:</i> <a>newDescribeMountTargetSecurityGroupsResponse</a> smart
--   constructor.
data DescribeMountTargetSecurityGroupsResponse
DescribeMountTargetSecurityGroupsResponse' :: Int -> [Text] -> DescribeMountTargetSecurityGroupsResponse

-- | Create a value of <a>DescribeMountTargetSecurityGroupsResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DescribeMountTargetSecurityGroupsResponse'</a>,
--   <a>describeMountTargetSecurityGroupsResponse_httpStatus</a> - The
--   response's http status code.
--   
--   <a>$sel:securityGroups:DescribeMountTargetSecurityGroupsResponse'</a>,
--   <a>describeMountTargetSecurityGroupsResponse_securityGroups</a> - An
--   array of security groups.
newDescribeMountTargetSecurityGroupsResponse :: Int -> DescribeMountTargetSecurityGroupsResponse

-- | <i>See:</i> <a>newDescribeAccessPoints</a> smart constructor.
data DescribeAccessPoints
DescribeAccessPoints' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> DescribeAccessPoints

-- | Create a value of <a>DescribeAccessPoints</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accessPointId:DescribeAccessPoints'</a>,
--   <a>describeAccessPoints_accessPointId</a> - (Optional) Specifies an
--   EFS access point to describe in the response; mutually exclusive with
--   <tt>FileSystemId</tt>.
--   
--   <a>$sel:fileSystemId:DescribeAccessPoints'</a>,
--   <a>describeAccessPoints_fileSystemId</a> - (Optional) If you provide a
--   <tt>FileSystemId</tt>, EFS returns all access points for that file
--   system; mutually exclusive with <tt>AccessPointId</tt>.
--   
--   <a>$sel:nextToken:DescribeAccessPoints'</a>,
--   <a>describeAccessPoints_nextToken</a> - <tt>NextToken</tt> is present
--   if the response is paginated. You can use <tt>NextMarker</tt> in the
--   subsequent request to fetch the next page of access point
--   descriptions.
--   
--   <a>$sel:maxResults:DescribeAccessPoints'</a>,
--   <a>describeAccessPoints_maxResults</a> - (Optional) When retrieving
--   all access points for a file system, you can optionally specify the
--   <tt>MaxItems</tt> parameter to limit the number of objects returned in
--   a response. The default value is 100.
newDescribeAccessPoints :: DescribeAccessPoints

-- | <i>See:</i> <a>newDescribeAccessPointsResponse</a> smart constructor.
data DescribeAccessPointsResponse
DescribeAccessPointsResponse' :: Maybe [AccessPointDescription] -> Maybe Text -> Int -> DescribeAccessPointsResponse

-- | Create a value of <a>DescribeAccessPointsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accessPoints:DescribeAccessPointsResponse'</a>,
--   <a>describeAccessPointsResponse_accessPoints</a> - An array of access
--   point descriptions.
--   
--   <a>$sel:nextToken:DescribeAccessPoints'</a>,
--   <a>describeAccessPointsResponse_nextToken</a> - Present if there are
--   more access points than returned in the response. You can use the
--   NextMarker in the subsequent request to fetch the additional
--   descriptions.
--   
--   <a>$sel:httpStatus:DescribeAccessPointsResponse'</a>,
--   <a>describeAccessPointsResponse_httpStatus</a> - The response's http
--   status code.
newDescribeAccessPointsResponse :: Int -> DescribeAccessPointsResponse

-- | <i>See:</i> <a>newModifyMountTargetSecurityGroups</a> smart
--   constructor.
data ModifyMountTargetSecurityGroups
ModifyMountTargetSecurityGroups' :: Maybe [Text] -> Text -> ModifyMountTargetSecurityGroups

-- | Create a value of <a>ModifyMountTargetSecurityGroups</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityGroups:ModifyMountTargetSecurityGroups'</a>,
--   <a>modifyMountTargetSecurityGroups_securityGroups</a> - An array of up
--   to five VPC security group IDs.
--   
--   <a>$sel:mountTargetId:ModifyMountTargetSecurityGroups'</a>,
--   <a>modifyMountTargetSecurityGroups_mountTargetId</a> - The ID of the
--   mount target whose security groups you want to modify.
newModifyMountTargetSecurityGroups :: Text -> ModifyMountTargetSecurityGroups

-- | <i>See:</i> <a>newModifyMountTargetSecurityGroupsResponse</a> smart
--   constructor.
data ModifyMountTargetSecurityGroupsResponse
ModifyMountTargetSecurityGroupsResponse' :: ModifyMountTargetSecurityGroupsResponse

-- | Create a value of <a>ModifyMountTargetSecurityGroupsResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newModifyMountTargetSecurityGroupsResponse :: ModifyMountTargetSecurityGroupsResponse

-- | <i>See:</i> <a>newCreateFileSystem</a> smart constructor.
data CreateFileSystem
CreateFileSystem' :: Maybe Double -> Maybe Text -> Maybe PerformanceMode -> Maybe Bool -> Maybe Bool -> Maybe ThroughputMode -> Maybe Text -> Maybe [Tag] -> Text -> CreateFileSystem

-- | Create a value of <a>CreateFileSystem</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:provisionedThroughputInMibps:CreateFileSystem'</a>,
--   <a>createFileSystem_provisionedThroughputInMibps</a> - The throughput,
--   measured in MiB/s, that you want to provision for a file system that
--   you're creating. Valid values are 1-1024. Required if
--   <tt>ThroughputMode</tt> is set to <tt>provisioned</tt>. The upper
--   limit for throughput is 1024 MiB/s. To increase this limit, contact
--   Amazon Web Services Support. For more information, see <a>Amazon EFS
--   quotas that you can increase</a> in the <i>Amazon EFS User Guide</i>.
--   
--   <a>$sel:availabilityZoneName:CreateFileSystem'</a>,
--   <a>createFileSystem_availabilityZoneName</a> - Used to create a file
--   system that uses One Zone storage classes. It specifies the Amazon Web
--   Services Availability Zone in which to create the file system. Use the
--   format <tt>us-east-1a</tt> to specify the Availability Zone. For more
--   information about One Zone storage classes, see <a>Using EFS storage
--   classes</a> in the <i>Amazon EFS User Guide</i>.
--   
--   One Zone storage classes are not available in all Availability Zones
--   in Amazon Web Services Regions where Amazon EFS is available.
--   
--   <a>$sel:performanceMode:CreateFileSystem'</a>,
--   <a>createFileSystem_performanceMode</a> - The performance mode of the
--   file system. We recommend <tt>generalPurpose</tt> performance mode for
--   most file systems. File systems using the <tt>maxIO</tt> performance
--   mode can scale to higher levels of aggregate throughput and operations
--   per second with a tradeoff of slightly higher latencies for most file
--   operations. The performance mode can't be changed after the file
--   system has been created.
--   
--   The <tt>maxIO</tt> mode is not supported on file systems using One
--   Zone storage classes.
--   
--   <a>$sel:backup:CreateFileSystem'</a>, <a>createFileSystem_backup</a> -
--   Specifies whether automatic backups are enabled on the file system
--   that you are creating. Set the value to <tt>true</tt> to enable
--   automatic backups. If you are creating a file system that uses One
--   Zone storage classes, automatic backups are enabled by default. For
--   more information, see <a>Automatic backups</a> in the <i>Amazon EFS
--   User Guide</i>.
--   
--   Default is <tt>false</tt>. However, if you specify an
--   <tt>AvailabilityZoneName</tt>, the default is <tt>true</tt>.
--   
--   Backup is not available in all Amazon Web Services Regionswhere Amazon
--   EFS is available.
--   
--   <a>$sel:encrypted:CreateFileSystem'</a>,
--   <a>createFileSystem_encrypted</a> - A Boolean value that, if true,
--   creates an encrypted file system. When creating an encrypted file
--   system, you have the option of specifying
--   CreateFileSystemRequest$KmsKeyId for an existing Key Management
--   Service (KMS customer master key (CMK). If you don't specify a CMK,
--   then the default CMK for Amazon EFS, <tt>/aws/elasticfilesystem</tt>,
--   is used to protect the encrypted file system.
--   
--   <a>$sel:throughputMode:CreateFileSystem'</a>,
--   <a>createFileSystem_throughputMode</a> - Specifies the throughput mode
--   for the file system, either <tt>bursting</tt> or <tt>provisioned</tt>.
--   If you set <tt>ThroughputMode</tt> to <tt>provisioned</tt>, you must
--   also set a value for <tt>ProvisionedThroughputInMibps</tt>. After you
--   create the file system, you can decrease your file system's throughput
--   in Provisioned Throughput mode or change between the throughput modes,
--   as long as it’s been more than 24 hours since the last decrease or
--   throughput mode change. For more information, see <a>Specifying
--   throughput with provisioned mode</a> in the <i>Amazon EFS User
--   Guide</i>.
--   
--   Default is <tt>bursting</tt>.
--   
--   <a>$sel:kmsKeyId:CreateFileSystem'</a>,
--   <a>createFileSystem_kmsKeyId</a> - The ID of the KMS CMK that you want
--   to use to protect the encrypted file system. This parameter is only
--   required if you want to use a non-default KMS key. If this parameter
--   is not specified, the default CMK for Amazon EFS is used. This ID can
--   be in one of the following formats:
--   
--   <ul>
--   <li>Key ID - A unique identifier of the key, for example
--   <tt>1234abcd-12ab-34cd-56ef-1234567890ab</tt>.</li>
--   <li>ARN - An Amazon Resource Name (ARN) for the key, for example
--   <tt>arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</tt>.</li>
--   <li>Key alias - A previously created display name for a key, for
--   example <tt>alias/projectKey1</tt>.</li>
--   <li>Key alias ARN - An ARN for a key alias, for example
--   <tt>arn:aws:kms:us-west-2:444455556666:alias/projectKey1</tt>.</li>
--   </ul>
--   
--   If <tt>KmsKeyId</tt> is specified, the
--   CreateFileSystemRequest$Encrypted parameter must be set to true.
--   
--   EFS accepts only symmetric KMS keys. You cannot use asymmetric KMS
--   keys with EFS file systems.
--   
--   <a>$sel:tags:CreateFileSystem'</a>, <a>createFileSystem_tags</a> - Use
--   to create one or more tags associated with the file system. Each tag
--   is a user-defined key-value pair. Name your file system on creation by
--   including a <tt>"Key":"Name","Value":"{value}"</tt> key-value pair.
--   Each key must be unique. For more information, see <a>Tagging Amazon
--   Web Services resources</a> in the <i>Amazon Web Services General
--   Reference Guide</i>.
--   
--   <a>$sel:creationToken:CreateFileSystem'</a>,
--   <a>createFileSystem_creationToken</a> - A string of up to 64 ASCII
--   characters. Amazon EFS uses this to ensure idempotent creation.
newCreateFileSystem :: Text -> CreateFileSystem

-- | A description of the file system.
--   
--   <i>See:</i> <a>newFileSystemDescription</a> smart constructor.
data FileSystemDescription
FileSystemDescription' :: Maybe Text -> Maybe Double -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe ThroughputMode -> Maybe Text -> Maybe Text -> Text -> Text -> Text -> POSIX -> LifeCycleState -> Natural -> FileSystemSize -> PerformanceMode -> [Tag] -> FileSystemDescription

-- | Create a value of <a>FileSystemDescription</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:availabilityZoneId:FileSystemDescription'</a>,
--   <a>fileSystemDescription_availabilityZoneId</a> - The unique and
--   consistent identifier of the Availability Zone in which the file
--   system's One Zone storage classes exist. For example,
--   <tt>use1-az1</tt> is an Availability Zone ID for the us-east-1 Amazon
--   Web Services Region, and it has the same location in every Amazon Web
--   Services account.
--   
--   <a>$sel:provisionedThroughputInMibps:FileSystemDescription'</a>,
--   <a>fileSystemDescription_provisionedThroughputInMibps</a> - The amount
--   of provisioned throughput, measured in MiB/s, for the file system.
--   Valid for file systems using <tt>ThroughputMode</tt> set to
--   <tt>provisioned</tt>.
--   
--   <a>$sel:availabilityZoneName:FileSystemDescription'</a>,
--   <a>fileSystemDescription_availabilityZoneName</a> - Describes the
--   Amazon Web Services Availability Zone in which the file system is
--   located, and is valid only for file systems using One Zone storage
--   classes. For more information, see <a>Using EFS storage classes</a> in
--   the <i>Amazon EFS User Guide</i>.
--   
--   <a>$sel:fileSystemArn:FileSystemDescription'</a>,
--   <a>fileSystemDescription_fileSystemArn</a> - The Amazon Resource Name
--   (ARN) for the EFS file system, in the format
--   <tt>arn:aws:elasticfilesystem:region:account-id:file-system/file-system-id
--   </tt>. Example with sample data:
--   <tt>arn:aws:elasticfilesystem:us-west-2:1111333322228888:file-system/fs-01234567</tt>
--   
--   <a>$sel:encrypted:FileSystemDescription'</a>,
--   <a>fileSystemDescription_encrypted</a> - A Boolean value that, if
--   true, indicates that the file system is encrypted.
--   
--   <a>$sel:throughputMode:FileSystemDescription'</a>,
--   <a>fileSystemDescription_throughputMode</a> - Displays the file
--   system's throughput mode. For more information, see <a>Throughput
--   modes</a> in the <i>Amazon EFS User Guide</i>.
--   
--   <a>$sel:kmsKeyId:FileSystemDescription'</a>,
--   <a>fileSystemDescription_kmsKeyId</a> - The ID of an Key Management
--   Service customer master key (CMK) that was used to protect the
--   encrypted file system.
--   
--   <a>$sel:name:FileSystemDescription'</a>,
--   <a>fileSystemDescription_name</a> - You can add tags to a file system,
--   including a <tt>Name</tt> tag. For more information, see
--   CreateFileSystem. If the file system has a <tt>Name</tt> tag, Amazon
--   EFS returns the value in this field.
--   
--   <a>$sel:ownerId:FileSystemDescription'</a>,
--   <a>fileSystemDescription_ownerId</a> - The Amazon Web Services account
--   that created the file system. If the file system was created by an IAM
--   user, the parent account to which the user belongs is the owner.
--   
--   <a>$sel:creationToken:FileSystemDescription'</a>,
--   <a>fileSystemDescription_creationToken</a> - The opaque string
--   specified in the request.
--   
--   <a>$sel:fileSystemId:FileSystemDescription'</a>,
--   <a>fileSystemDescription_fileSystemId</a> - The ID of the file system,
--   assigned by Amazon EFS.
--   
--   <a>$sel:creationTime:FileSystemDescription'</a>,
--   <a>fileSystemDescription_creationTime</a> - The time that the file
--   system was created, in seconds (since 1970-01-01T00:00:00Z).
--   
--   <a>$sel:lifeCycleState:FileSystemDescription'</a>,
--   <a>fileSystemDescription_lifeCycleState</a> - The lifecycle phase of
--   the file system.
--   
--   <a>$sel:numberOfMountTargets:FileSystemDescription'</a>,
--   <a>fileSystemDescription_numberOfMountTargets</a> - The current number
--   of mount targets that the file system has. For more information, see
--   CreateMountTarget.
--   
--   <a>$sel:sizeInBytes:FileSystemDescription'</a>,
--   <a>fileSystemDescription_sizeInBytes</a> - The latest known metered
--   size (in bytes) of data stored in the file system, in its
--   <tt>Value</tt> field, and the time at which that size was determined
--   in its <tt>Timestamp</tt> field. The <tt>Timestamp</tt> value is the
--   integer number of seconds since 1970-01-01T00:00:00Z. The
--   <tt>SizeInBytes</tt> value doesn't represent the size of a consistent
--   snapshot of the file system, but it is eventually consistent when
--   there are no writes to the file system. That is, <tt>SizeInBytes</tt>
--   represents actual size only if the file system is not modified for a
--   period longer than a couple of hours. Otherwise, the value is not the
--   exact size that the file system was at any point in time.
--   
--   <a>$sel:performanceMode:FileSystemDescription'</a>,
--   <a>fileSystemDescription_performanceMode</a> - The performance mode of
--   the file system.
--   
--   <a>$sel:tags:FileSystemDescription'</a>,
--   <a>fileSystemDescription_tags</a> - The tags associated with the file
--   system, presented as an array of <tt>Tag</tt> objects.
newFileSystemDescription :: Text -> Text -> Text -> UTCTime -> LifeCycleState -> Natural -> FileSystemSize -> PerformanceMode -> FileSystemDescription

-- | <i>See:</i> <a>newPutLifecycleConfiguration</a> smart constructor.
data PutLifecycleConfiguration
PutLifecycleConfiguration' :: Text -> [LifecyclePolicy] -> PutLifecycleConfiguration

-- | Create a value of <a>PutLifecycleConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fileSystemId:PutLifecycleConfiguration'</a>,
--   <a>putLifecycleConfiguration_fileSystemId</a> - The ID of the file
--   system for which you are creating the <tt>LifecycleConfiguration</tt>
--   object (String).
--   
--   <a>$sel:lifecyclePolicies:PutLifecycleConfiguration'</a>,
--   <a>putLifecycleConfiguration_lifecyclePolicies</a> - An array of
--   <tt>LifecyclePolicy</tt> objects that define the file system's
--   <tt>LifecycleConfiguration</tt> object. A
--   <tt>LifecycleConfiguration</tt> object informs EFS lifecycle
--   management and intelligent tiering of the following:
--   
--   <ul>
--   <li>When to move files in the file system from primary storage to the
--   IA storage class.</li>
--   <li>When to move files that are in IA storage to primary storage.</li>
--   </ul>
--   
--   When using the <tt>put-lifecycle-configuration</tt> CLI command or the
--   <tt>PutLifecycleConfiguration</tt> API action, Amazon EFS requires
--   that each <tt>LifecyclePolicy</tt> object have only a single
--   transition. This means that in a request body,
--   <tt>LifecyclePolicies</tt> needs to be structured as an array of
--   <tt>LifecyclePolicy</tt> objects, one object for each transition,
--   <tt>TransitionToIA</tt>, <tt>TransitionToPrimaryStorageClass</tt>. See
--   the example requests in the following section for more information.
newPutLifecycleConfiguration :: Text -> PutLifecycleConfiguration

-- | <i>See:</i> <a>newLifecycleConfigurationDescription</a> smart
--   constructor.
data LifecycleConfigurationDescription
LifecycleConfigurationDescription' :: Maybe [LifecyclePolicy] -> LifecycleConfigurationDescription

-- | Create a value of <a>LifecycleConfigurationDescription</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lifecyclePolicies:LifecycleConfigurationDescription'</a>,
--   <a>lifecycleConfigurationDescription_lifecyclePolicies</a> - An array
--   of lifecycle management policies. EFS supports a maximum of one policy
--   per file system.
newLifecycleConfigurationDescription :: LifecycleConfigurationDescription

-- | <i>See:</i> <a>newPutBackupPolicy</a> smart constructor.
data PutBackupPolicy
PutBackupPolicy' :: Text -> BackupPolicy -> PutBackupPolicy

-- | Create a value of <a>PutBackupPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fileSystemId:PutBackupPolicy'</a>,
--   <a>putBackupPolicy_fileSystemId</a> - Specifies which EFS file system
--   to update the backup policy for.
--   
--   <a>$sel:backupPolicy:PutBackupPolicy'</a>,
--   <a>putBackupPolicy_backupPolicy</a> - The backup policy included in
--   the <tt>PutBackupPolicy</tt> request.
newPutBackupPolicy :: Text -> BackupPolicy -> PutBackupPolicy

-- | <i>See:</i> <a>newBackupPolicyDescription</a> smart constructor.
data BackupPolicyDescription
BackupPolicyDescription' :: Maybe BackupPolicy -> BackupPolicyDescription

-- | Create a value of <a>BackupPolicyDescription</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:backupPolicy:BackupPolicyDescription'</a>,
--   <a>backupPolicyDescription_backupPolicy</a> - Describes the file
--   system's backup policy, indicating whether automatic backups are
--   turned on or off..
newBackupPolicyDescription :: BackupPolicyDescription

-- | <i>See:</i> <a>newDeleteFileSystem</a> smart constructor.
data DeleteFileSystem
DeleteFileSystem' :: Text -> DeleteFileSystem

-- | Create a value of <a>DeleteFileSystem</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fileSystemId:DeleteFileSystem'</a>,
--   <a>deleteFileSystem_fileSystemId</a> - The ID of the file system you
--   want to delete.
newDeleteFileSystem :: Text -> DeleteFileSystem

-- | <i>See:</i> <a>newDeleteFileSystemResponse</a> smart constructor.
data DeleteFileSystemResponse
DeleteFileSystemResponse' :: DeleteFileSystemResponse

-- | Create a value of <a>DeleteFileSystemResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteFileSystemResponse :: DeleteFileSystemResponse

-- | <i>See:</i> <a>newUpdateFileSystem</a> smart constructor.
data UpdateFileSystem
UpdateFileSystem' :: Maybe Double -> Maybe ThroughputMode -> Text -> UpdateFileSystem

-- | Create a value of <a>UpdateFileSystem</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:provisionedThroughputInMibps:UpdateFileSystem'</a>,
--   <a>updateFileSystem_provisionedThroughputInMibps</a> - (Optional) Sets
--   the amount of provisioned throughput, in MiB/s, for the file system.
--   Valid values are 1-1024. If you are changing the throughput mode to
--   provisioned, you must also provide the amount of provisioned
--   throughput. Required if <tt>ThroughputMode</tt> is changed to
--   <tt>provisioned</tt> on update.
--   
--   <a>$sel:throughputMode:UpdateFileSystem'</a>,
--   <a>updateFileSystem_throughputMode</a> - (Optional) Updates the file
--   system's throughput mode. If you're not updating your throughput mode,
--   you don't need to provide this value in your request. If you are
--   changing the <tt>ThroughputMode</tt> to <tt>provisioned</tt>, you must
--   also set a value for <tt>ProvisionedThroughputInMibps</tt>.
--   
--   <a>$sel:fileSystemId:UpdateFileSystem'</a>,
--   <a>updateFileSystem_fileSystemId</a> - The ID of the file system that
--   you want to update.
newUpdateFileSystem :: Text -> UpdateFileSystem

-- | A description of the file system.
--   
--   <i>See:</i> <a>newFileSystemDescription</a> smart constructor.
data FileSystemDescription
FileSystemDescription' :: Maybe Text -> Maybe Double -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe ThroughputMode -> Maybe Text -> Maybe Text -> Text -> Text -> Text -> POSIX -> LifeCycleState -> Natural -> FileSystemSize -> PerformanceMode -> [Tag] -> FileSystemDescription

-- | Create a value of <a>FileSystemDescription</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:availabilityZoneId:FileSystemDescription'</a>,
--   <a>fileSystemDescription_availabilityZoneId</a> - The unique and
--   consistent identifier of the Availability Zone in which the file
--   system's One Zone storage classes exist. For example,
--   <tt>use1-az1</tt> is an Availability Zone ID for the us-east-1 Amazon
--   Web Services Region, and it has the same location in every Amazon Web
--   Services account.
--   
--   <a>$sel:provisionedThroughputInMibps:FileSystemDescription'</a>,
--   <a>fileSystemDescription_provisionedThroughputInMibps</a> - The amount
--   of provisioned throughput, measured in MiB/s, for the file system.
--   Valid for file systems using <tt>ThroughputMode</tt> set to
--   <tt>provisioned</tt>.
--   
--   <a>$sel:availabilityZoneName:FileSystemDescription'</a>,
--   <a>fileSystemDescription_availabilityZoneName</a> - Describes the
--   Amazon Web Services Availability Zone in which the file system is
--   located, and is valid only for file systems using One Zone storage
--   classes. For more information, see <a>Using EFS storage classes</a> in
--   the <i>Amazon EFS User Guide</i>.
--   
--   <a>$sel:fileSystemArn:FileSystemDescription'</a>,
--   <a>fileSystemDescription_fileSystemArn</a> - The Amazon Resource Name
--   (ARN) for the EFS file system, in the format
--   <tt>arn:aws:elasticfilesystem:region:account-id:file-system/file-system-id
--   </tt>. Example with sample data:
--   <tt>arn:aws:elasticfilesystem:us-west-2:1111333322228888:file-system/fs-01234567</tt>
--   
--   <a>$sel:encrypted:FileSystemDescription'</a>,
--   <a>fileSystemDescription_encrypted</a> - A Boolean value that, if
--   true, indicates that the file system is encrypted.
--   
--   <a>$sel:throughputMode:FileSystemDescription'</a>,
--   <a>fileSystemDescription_throughputMode</a> - Displays the file
--   system's throughput mode. For more information, see <a>Throughput
--   modes</a> in the <i>Amazon EFS User Guide</i>.
--   
--   <a>$sel:kmsKeyId:FileSystemDescription'</a>,
--   <a>fileSystemDescription_kmsKeyId</a> - The ID of an Key Management
--   Service customer master key (CMK) that was used to protect the
--   encrypted file system.
--   
--   <a>$sel:name:FileSystemDescription'</a>,
--   <a>fileSystemDescription_name</a> - You can add tags to a file system,
--   including a <tt>Name</tt> tag. For more information, see
--   CreateFileSystem. If the file system has a <tt>Name</tt> tag, Amazon
--   EFS returns the value in this field.
--   
--   <a>$sel:ownerId:FileSystemDescription'</a>,
--   <a>fileSystemDescription_ownerId</a> - The Amazon Web Services account
--   that created the file system. If the file system was created by an IAM
--   user, the parent account to which the user belongs is the owner.
--   
--   <a>$sel:creationToken:FileSystemDescription'</a>,
--   <a>fileSystemDescription_creationToken</a> - The opaque string
--   specified in the request.
--   
--   <a>$sel:fileSystemId:FileSystemDescription'</a>,
--   <a>fileSystemDescription_fileSystemId</a> - The ID of the file system,
--   assigned by Amazon EFS.
--   
--   <a>$sel:creationTime:FileSystemDescription'</a>,
--   <a>fileSystemDescription_creationTime</a> - The time that the file
--   system was created, in seconds (since 1970-01-01T00:00:00Z).
--   
--   <a>$sel:lifeCycleState:FileSystemDescription'</a>,
--   <a>fileSystemDescription_lifeCycleState</a> - The lifecycle phase of
--   the file system.
--   
--   <a>$sel:numberOfMountTargets:FileSystemDescription'</a>,
--   <a>fileSystemDescription_numberOfMountTargets</a> - The current number
--   of mount targets that the file system has. For more information, see
--   CreateMountTarget.
--   
--   <a>$sel:sizeInBytes:FileSystemDescription'</a>,
--   <a>fileSystemDescription_sizeInBytes</a> - The latest known metered
--   size (in bytes) of data stored in the file system, in its
--   <tt>Value</tt> field, and the time at which that size was determined
--   in its <tt>Timestamp</tt> field. The <tt>Timestamp</tt> value is the
--   integer number of seconds since 1970-01-01T00:00:00Z. The
--   <tt>SizeInBytes</tt> value doesn't represent the size of a consistent
--   snapshot of the file system, but it is eventually consistent when
--   there are no writes to the file system. That is, <tt>SizeInBytes</tt>
--   represents actual size only if the file system is not modified for a
--   period longer than a couple of hours. Otherwise, the value is not the
--   exact size that the file system was at any point in time.
--   
--   <a>$sel:performanceMode:FileSystemDescription'</a>,
--   <a>fileSystemDescription_performanceMode</a> - The performance mode of
--   the file system.
--   
--   <a>$sel:tags:FileSystemDescription'</a>,
--   <a>fileSystemDescription_tags</a> - The tags associated with the file
--   system, presented as an array of <tt>Tag</tt> objects.
newFileSystemDescription :: Text -> Text -> Text -> UTCTime -> LifeCycleState -> Natural -> FileSystemSize -> PerformanceMode -> FileSystemDescription

-- | <i>See:</i> <a>newCreateMountTarget</a> smart constructor.
data CreateMountTarget
CreateMountTarget' :: Maybe Text -> Maybe [Text] -> Text -> Text -> CreateMountTarget

-- | Create a value of <a>CreateMountTarget</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ipAddress:CreateMountTarget'</a>,
--   <a>createMountTarget_ipAddress</a> - Valid IPv4 address within the
--   address range of the specified subnet.
--   
--   <a>$sel:securityGroups:CreateMountTarget'</a>,
--   <a>createMountTarget_securityGroups</a> - Up to five VPC security
--   group IDs, of the form <tt>sg-xxxxxxxx</tt>. These must be for the
--   same VPC as subnet specified.
--   
--   <a>$sel:fileSystemId:CreateMountTarget'</a>,
--   <a>createMountTarget_fileSystemId</a> - The ID of the file system for
--   which to create the mount target.
--   
--   <a>$sel:subnetId:CreateMountTarget'</a>,
--   <a>createMountTarget_subnetId</a> - The ID of the subnet to add the
--   mount target in. For file systems that use One Zone storage classes,
--   use the subnet that is associated with the file system's Availability
--   Zone.
newCreateMountTarget :: Text -> Text -> CreateMountTarget

-- | Provides a description of a mount target.
--   
--   <i>See:</i> <a>newMountTargetDescription</a> smart constructor.
data MountTargetDescription
MountTargetDescription' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Text -> Text -> Text -> LifeCycleState -> MountTargetDescription

-- | Create a value of <a>MountTargetDescription</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ipAddress:MountTargetDescription'</a>,
--   <a>mountTargetDescription_ipAddress</a> - Address at which the file
--   system can be mounted by using the mount target.
--   
--   <a>$sel:availabilityZoneId:MountTargetDescription'</a>,
--   <a>mountTargetDescription_availabilityZoneId</a> - The unique and
--   consistent identifier of the Availability Zone that the mount target
--   resides in. For example, <tt>use1-az1</tt> is an AZ ID for the
--   us-east-1 Region and it has the same location in every Amazon Web
--   Services account.
--   
--   <a>$sel:vpcId:MountTargetDescription'</a>,
--   <a>mountTargetDescription_vpcId</a> - The virtual private cloud (VPC)
--   ID that the mount target is configured in.
--   
--   <a>$sel:availabilityZoneName:MountTargetDescription'</a>,
--   <a>mountTargetDescription_availabilityZoneName</a> - The name of the
--   Availability Zone in which the mount target is located. Availability
--   Zones are independently mapped to names for each Amazon Web Services
--   account. For example, the Availability Zone <tt>us-east-1a</tt> for
--   your Amazon Web Services account might not be the same location as
--   <tt>us-east-1a</tt> for another Amazon Web Services account.
--   
--   <a>$sel:networkInterfaceId:MountTargetDescription'</a>,
--   <a>mountTargetDescription_networkInterfaceId</a> - The ID of the
--   network interface that Amazon EFS created when it created the mount
--   target.
--   
--   <a>$sel:ownerId:MountTargetDescription'</a>,
--   <a>mountTargetDescription_ownerId</a> - Amazon Web Services account ID
--   that owns the resource.
--   
--   <a>$sel:mountTargetId:MountTargetDescription'</a>,
--   <a>mountTargetDescription_mountTargetId</a> - System-assigned mount
--   target ID.
--   
--   <a>$sel:fileSystemId:MountTargetDescription'</a>,
--   <a>mountTargetDescription_fileSystemId</a> - The ID of the file system
--   for which the mount target is intended.
--   
--   <a>$sel:subnetId:MountTargetDescription'</a>,
--   <a>mountTargetDescription_subnetId</a> - The ID of the mount target's
--   subnet.
--   
--   <a>$sel:lifeCycleState:MountTargetDescription'</a>,
--   <a>mountTargetDescription_lifeCycleState</a> - Lifecycle state of the
--   mount target.
newMountTargetDescription :: Text -> Text -> Text -> LifeCycleState -> MountTargetDescription

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> [Tag] -> TagResource

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceId:TagResource'</a>, <a>tagResource_resourceId</a> -
--   The ID specifying the EFS resource that you want to create a tag for.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - An array of
--   <tt>Tag</tt> objects to add. Each <tt>Tag</tt> object is a key-value
--   pair.
newTagResource :: Text -> TagResource

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newTagResourceResponse :: TagResourceResponse

-- | <i>See:</i> <a>newDescribeBackupPolicy</a> smart constructor.
data DescribeBackupPolicy
DescribeBackupPolicy' :: Text -> DescribeBackupPolicy

-- | Create a value of <a>DescribeBackupPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fileSystemId:DescribeBackupPolicy'</a>,
--   <a>describeBackupPolicy_fileSystemId</a> - Specifies which EFS file
--   system to retrieve the <tt>BackupPolicy</tt> for.
newDescribeBackupPolicy :: Text -> DescribeBackupPolicy

-- | <i>See:</i> <a>newBackupPolicyDescription</a> smart constructor.
data BackupPolicyDescription
BackupPolicyDescription' :: Maybe BackupPolicy -> BackupPolicyDescription

-- | Create a value of <a>BackupPolicyDescription</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:backupPolicy:BackupPolicyDescription'</a>,
--   <a>backupPolicyDescription_backupPolicy</a> - Describes the file
--   system's backup policy, indicating whether automatic backups are
--   turned on or off..
newBackupPolicyDescription :: BackupPolicyDescription

-- | <i>See:</i> <a>newDescribeLifecycleConfiguration</a> smart
--   constructor.
data DescribeLifecycleConfiguration
DescribeLifecycleConfiguration' :: Text -> DescribeLifecycleConfiguration

-- | Create a value of <a>DescribeLifecycleConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fileSystemId:DescribeLifecycleConfiguration'</a>,
--   <a>describeLifecycleConfiguration_fileSystemId</a> - The ID of the
--   file system whose <tt>LifecycleConfiguration</tt> object you want to
--   retrieve (String).
newDescribeLifecycleConfiguration :: Text -> DescribeLifecycleConfiguration

-- | <i>See:</i> <a>newLifecycleConfigurationDescription</a> smart
--   constructor.
data LifecycleConfigurationDescription
LifecycleConfigurationDescription' :: Maybe [LifecyclePolicy] -> LifecycleConfigurationDescription

-- | Create a value of <a>LifecycleConfigurationDescription</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lifecyclePolicies:LifecycleConfigurationDescription'</a>,
--   <a>lifecycleConfigurationDescription_lifecyclePolicies</a> - An array
--   of lifecycle management policies. EFS supports a maximum of one policy
--   per file system.
newLifecycleConfigurationDescription :: LifecycleConfigurationDescription

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> NonEmpty Text -> UntagResource

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceId:UntagResource'</a>, <a>untagResource_resourceId</a>
--   - Specifies the EFS resource that you want to remove tags from.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   keys of the key-value tag pairs that you want to remove from the
--   specified EFS resource.
newUntagResource :: Text -> NonEmpty Text -> UntagResource

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUntagResourceResponse :: UntagResourceResponse

-- | <i>See:</i> <a>newDescribeFileSystemPolicy</a> smart constructor.
data DescribeFileSystemPolicy
DescribeFileSystemPolicy' :: Text -> DescribeFileSystemPolicy

-- | Create a value of <a>DescribeFileSystemPolicy</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fileSystemId:DescribeFileSystemPolicy'</a>,
--   <a>describeFileSystemPolicy_fileSystemId</a> - Specifies which EFS
--   file system to retrieve the <tt>FileSystemPolicy</tt> for.
newDescribeFileSystemPolicy :: Text -> DescribeFileSystemPolicy

-- | <i>See:</i> <a>newFileSystemPolicyDescription</a> smart constructor.
data FileSystemPolicyDescription
FileSystemPolicyDescription' :: Maybe Text -> Maybe Text -> FileSystemPolicyDescription

-- | Create a value of <a>FileSystemPolicyDescription</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fileSystemId:FileSystemPolicyDescription'</a>,
--   <a>fileSystemPolicyDescription_fileSystemId</a> - Specifies the EFS
--   file system to which the <tt>FileSystemPolicy</tt> applies.
--   
--   <a>$sel:policy:FileSystemPolicyDescription'</a>,
--   <a>fileSystemPolicyDescription_policy</a> - The JSON formatted
--   <tt>FileSystemPolicy</tt> for the EFS file system.
newFileSystemPolicyDescription :: FileSystemPolicyDescription

-- | <i>See:</i> <a>newDeleteAccessPoint</a> smart constructor.
data DeleteAccessPoint
DeleteAccessPoint' :: Text -> DeleteAccessPoint

-- | Create a value of <a>DeleteAccessPoint</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accessPointId:DeleteAccessPoint'</a>,
--   <a>deleteAccessPoint_accessPointId</a> - The ID of the access point
--   that you want to delete.
newDeleteAccessPoint :: Text -> DeleteAccessPoint

-- | <i>See:</i> <a>newDeleteAccessPointResponse</a> smart constructor.
data DeleteAccessPointResponse
DeleteAccessPointResponse' :: DeleteAccessPointResponse

-- | Create a value of <a>DeleteAccessPointResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteAccessPointResponse :: DeleteAccessPointResponse
newtype BackupStatus
BackupStatus' :: Text -> BackupStatus
[fromBackupStatus] :: BackupStatus -> Text
pattern BackupStatus_DISABLED :: BackupStatus
pattern BackupStatus_DISABLING :: BackupStatus
pattern BackupStatus_ENABLED :: BackupStatus
pattern BackupStatus_ENABLING :: BackupStatus
newtype LifeCycleState
LifeCycleState' :: Text -> LifeCycleState
[fromLifeCycleState] :: LifeCycleState -> Text
pattern LifeCycleState_Available :: LifeCycleState
pattern LifeCycleState_Creating :: LifeCycleState
pattern LifeCycleState_Deleted :: LifeCycleState
pattern LifeCycleState_Deleting :: LifeCycleState
pattern LifeCycleState_Error :: LifeCycleState
pattern LifeCycleState_Updating :: LifeCycleState
newtype PerformanceMode
PerformanceMode' :: Text -> PerformanceMode
[fromPerformanceMode] :: PerformanceMode -> Text
pattern PerformanceMode_GeneralPurpose :: PerformanceMode
pattern PerformanceMode_MaxIO :: PerformanceMode

-- | An EFS resource, for example a file system or a mount target.
newtype Resource
Resource' :: Text -> Resource
[fromResource] :: Resource -> Text
pattern Resource_FILE_SYSTEM :: Resource
pattern Resource_MOUNT_TARGET :: Resource

-- | A preference indicating a choice to use 63bit/32bit IDs for all
--   applicable resources.
newtype ResourceIdType
ResourceIdType' :: Text -> ResourceIdType
[fromResourceIdType] :: ResourceIdType -> Text
pattern ResourceIdType_LONG_ID :: ResourceIdType
pattern ResourceIdType_SHORT_ID :: ResourceIdType
newtype ThroughputMode
ThroughputMode' :: Text -> ThroughputMode
[fromThroughputMode] :: ThroughputMode -> Text
pattern ThroughputMode_Bursting :: ThroughputMode
pattern ThroughputMode_Provisioned :: ThroughputMode
newtype TransitionToIARules
TransitionToIARules' :: Text -> TransitionToIARules
[fromTransitionToIARules] :: TransitionToIARules -> Text
pattern TransitionToIARules_AFTER_14_DAYS :: TransitionToIARules
pattern TransitionToIARules_AFTER_30_DAYS :: TransitionToIARules
pattern TransitionToIARules_AFTER_60_DAYS :: TransitionToIARules
pattern TransitionToIARules_AFTER_7_DAYS :: TransitionToIARules
pattern TransitionToIARules_AFTER_90_DAYS :: TransitionToIARules
newtype TransitionToPrimaryStorageClassRules
TransitionToPrimaryStorageClassRules' :: Text -> TransitionToPrimaryStorageClassRules
[fromTransitionToPrimaryStorageClassRules] :: TransitionToPrimaryStorageClassRules -> Text
pattern TransitionToPrimaryStorageClassRules_AFTER_1_ACCESS :: TransitionToPrimaryStorageClassRules

-- | Provides a description of an EFS file system access point.
--   
--   <i>See:</i> <a>newAccessPointDescription</a> smart constructor.
data AccessPointDescription
AccessPointDescription' :: Maybe PosixUser -> Maybe RootDirectory -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe LifeCycleState -> Maybe [Tag] -> AccessPointDescription

-- | Create a value of <a>AccessPointDescription</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:posixUser:AccessPointDescription'</a>,
--   <a>accessPointDescription_posixUser</a> - The full POSIX identity,
--   including the user ID, group ID, and secondary group IDs on the access
--   point that is used for all file operations by NFS clients using the
--   access point.
--   
--   <a>$sel:rootDirectory:AccessPointDescription'</a>,
--   <a>accessPointDescription_rootDirectory</a> - The directory on the
--   Amazon EFS file system that the access point exposes as the root
--   directory to NFS clients using the access point.
--   
--   <a>$sel:clientToken:AccessPointDescription'</a>,
--   <a>accessPointDescription_clientToken</a> - The opaque string
--   specified in the request to ensure idempotent creation.
--   
--   <a>$sel:accessPointId:AccessPointDescription'</a>,
--   <a>accessPointDescription_accessPointId</a> - The ID of the access
--   point, assigned by Amazon EFS.
--   
--   <a>$sel:fileSystemId:AccessPointDescription'</a>,
--   <a>accessPointDescription_fileSystemId</a> - The ID of the EFS file
--   system that the access point applies to.
--   
--   <a>$sel:ownerId:AccessPointDescription'</a>,
--   <a>accessPointDescription_ownerId</a> - Identified the Amazon Web
--   Services account that owns the access point resource.
--   
--   <a>$sel:name:AccessPointDescription'</a>,
--   <a>accessPointDescription_name</a> - The name of the access point.
--   This is the value of the <tt>Name</tt> tag.
--   
--   <a>$sel:accessPointArn:AccessPointDescription'</a>,
--   <a>accessPointDescription_accessPointArn</a> - The unique Amazon
--   Resource Name (ARN) associated with the access point.
--   
--   <a>$sel:lifeCycleState:AccessPointDescription'</a>,
--   <a>accessPointDescription_lifeCycleState</a> - Identifies the
--   lifecycle phase of the access point.
--   
--   <a>$sel:tags:AccessPointDescription'</a>,
--   <a>accessPointDescription_tags</a> - The tags associated with the
--   access point, presented as an array of Tag objects.
newAccessPointDescription :: AccessPointDescription

-- | The backup policy for the file system used to create automatic daily
--   backups. If status has a value of <tt>ENABLED</tt>, the file system is
--   being automatically backed up. For more information, see <a>Automatic
--   backups</a>.
--   
--   <i>See:</i> <a>newBackupPolicy</a> smart constructor.
data BackupPolicy
BackupPolicy' :: BackupStatus -> BackupPolicy

-- | Create a value of <a>BackupPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:BackupPolicy'</a>, <a>backupPolicy_status</a> -
--   Describes the status of the file system's backup policy.
--   
--   <ul>
--   <li><b><tt>ENABLED</tt></b> - EFS is automatically backing up the file
--   system.</li>
--   <li><b><tt>ENABLING</tt></b> - EFS is turning on automatic backups for
--   the file system.</li>
--   <li><b><tt>DISABLED</tt></b> - automatic back ups are turned off for
--   the file system.</li>
--   <li><b><tt>DISABLING</tt></b> - EFS is turning off automatic backups
--   for the file system.</li>
--   </ul>
newBackupPolicy :: BackupStatus -> BackupPolicy

-- | <i>See:</i> <a>newBackupPolicyDescription</a> smart constructor.
data BackupPolicyDescription
BackupPolicyDescription' :: Maybe BackupPolicy -> BackupPolicyDescription

-- | Create a value of <a>BackupPolicyDescription</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:backupPolicy:BackupPolicyDescription'</a>,
--   <a>backupPolicyDescription_backupPolicy</a> - Describes the file
--   system's backup policy, indicating whether automatic backups are
--   turned on or off..
newBackupPolicyDescription :: BackupPolicyDescription

-- | Required if the <tt>RootDirectory</tt> &gt; <tt>Path</tt> specified
--   does not exist. Specifies the POSIX IDs and permissions to apply to
--   the access point's <tt>RootDirectory</tt> &gt; <tt>Path</tt>. If the
--   access point root directory does not exist, EFS creates it with these
--   settings when a client connects to the access point. When specifying
--   <tt>CreationInfo</tt>, you must include values for all properties.
--   
--   Amazon EFS creates a root directory only if you have provided the
--   CreationInfo: OwnUid, OwnGID, and permissions for the directory. If
--   you do not provide this information, Amazon EFS does not create the
--   root directory. If the root directory does not exist, attempts to
--   mount using the access point will fail.
--   
--   If you do not provide <tt>CreationInfo</tt> and the specified
--   <tt>RootDirectory</tt> does not exist, attempts to mount the file
--   system using the access point will fail.
--   
--   <i>See:</i> <a>newCreationInfo</a> smart constructor.
data CreationInfo
CreationInfo' :: Natural -> Natural -> Text -> CreationInfo

-- | Create a value of <a>CreationInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ownerUid:CreationInfo'</a>, <a>creationInfo_ownerUid</a> -
--   Specifies the POSIX user ID to apply to the <tt>RootDirectory</tt>.
--   Accepts values from 0 to 2^32 (4294967295).
--   
--   <a>$sel:ownerGid:CreationInfo'</a>, <a>creationInfo_ownerGid</a> -
--   Specifies the POSIX group ID to apply to the <tt>RootDirectory</tt>.
--   Accepts values from 0 to 2^32 (4294967295).
--   
--   <a>$sel:permissions:CreationInfo'</a>, <a>creationInfo_permissions</a>
--   - Specifies the POSIX permissions to apply to the
--   <tt>RootDirectory</tt>, in the format of an octal number representing
--   the file's mode bits.
newCreationInfo :: Natural -> Natural -> Text -> CreationInfo

-- | A description of the file system.
--   
--   <i>See:</i> <a>newFileSystemDescription</a> smart constructor.
data FileSystemDescription
FileSystemDescription' :: Maybe Text -> Maybe Double -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe ThroughputMode -> Maybe Text -> Maybe Text -> Text -> Text -> Text -> POSIX -> LifeCycleState -> Natural -> FileSystemSize -> PerformanceMode -> [Tag] -> FileSystemDescription

-- | Create a value of <a>FileSystemDescription</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:availabilityZoneId:FileSystemDescription'</a>,
--   <a>fileSystemDescription_availabilityZoneId</a> - The unique and
--   consistent identifier of the Availability Zone in which the file
--   system's One Zone storage classes exist. For example,
--   <tt>use1-az1</tt> is an Availability Zone ID for the us-east-1 Amazon
--   Web Services Region, and it has the same location in every Amazon Web
--   Services account.
--   
--   <a>$sel:provisionedThroughputInMibps:FileSystemDescription'</a>,
--   <a>fileSystemDescription_provisionedThroughputInMibps</a> - The amount
--   of provisioned throughput, measured in MiB/s, for the file system.
--   Valid for file systems using <tt>ThroughputMode</tt> set to
--   <tt>provisioned</tt>.
--   
--   <a>$sel:availabilityZoneName:FileSystemDescription'</a>,
--   <a>fileSystemDescription_availabilityZoneName</a> - Describes the
--   Amazon Web Services Availability Zone in which the file system is
--   located, and is valid only for file systems using One Zone storage
--   classes. For more information, see <a>Using EFS storage classes</a> in
--   the <i>Amazon EFS User Guide</i>.
--   
--   <a>$sel:fileSystemArn:FileSystemDescription'</a>,
--   <a>fileSystemDescription_fileSystemArn</a> - The Amazon Resource Name
--   (ARN) for the EFS file system, in the format
--   <tt>arn:aws:elasticfilesystem:region:account-id:file-system/file-system-id
--   </tt>. Example with sample data:
--   <tt>arn:aws:elasticfilesystem:us-west-2:1111333322228888:file-system/fs-01234567</tt>
--   
--   <a>$sel:encrypted:FileSystemDescription'</a>,
--   <a>fileSystemDescription_encrypted</a> - A Boolean value that, if
--   true, indicates that the file system is encrypted.
--   
--   <a>$sel:throughputMode:FileSystemDescription'</a>,
--   <a>fileSystemDescription_throughputMode</a> - Displays the file
--   system's throughput mode. For more information, see <a>Throughput
--   modes</a> in the <i>Amazon EFS User Guide</i>.
--   
--   <a>$sel:kmsKeyId:FileSystemDescription'</a>,
--   <a>fileSystemDescription_kmsKeyId</a> - The ID of an Key Management
--   Service customer master key (CMK) that was used to protect the
--   encrypted file system.
--   
--   <a>$sel:name:FileSystemDescription'</a>,
--   <a>fileSystemDescription_name</a> - You can add tags to a file system,
--   including a <tt>Name</tt> tag. For more information, see
--   CreateFileSystem. If the file system has a <tt>Name</tt> tag, Amazon
--   EFS returns the value in this field.
--   
--   <a>$sel:ownerId:FileSystemDescription'</a>,
--   <a>fileSystemDescription_ownerId</a> - The Amazon Web Services account
--   that created the file system. If the file system was created by an IAM
--   user, the parent account to which the user belongs is the owner.
--   
--   <a>$sel:creationToken:FileSystemDescription'</a>,
--   <a>fileSystemDescription_creationToken</a> - The opaque string
--   specified in the request.
--   
--   <a>$sel:fileSystemId:FileSystemDescription'</a>,
--   <a>fileSystemDescription_fileSystemId</a> - The ID of the file system,
--   assigned by Amazon EFS.
--   
--   <a>$sel:creationTime:FileSystemDescription'</a>,
--   <a>fileSystemDescription_creationTime</a> - The time that the file
--   system was created, in seconds (since 1970-01-01T00:00:00Z).
--   
--   <a>$sel:lifeCycleState:FileSystemDescription'</a>,
--   <a>fileSystemDescription_lifeCycleState</a> - The lifecycle phase of
--   the file system.
--   
--   <a>$sel:numberOfMountTargets:FileSystemDescription'</a>,
--   <a>fileSystemDescription_numberOfMountTargets</a> - The current number
--   of mount targets that the file system has. For more information, see
--   CreateMountTarget.
--   
--   <a>$sel:sizeInBytes:FileSystemDescription'</a>,
--   <a>fileSystemDescription_sizeInBytes</a> - The latest known metered
--   size (in bytes) of data stored in the file system, in its
--   <tt>Value</tt> field, and the time at which that size was determined
--   in its <tt>Timestamp</tt> field. The <tt>Timestamp</tt> value is the
--   integer number of seconds since 1970-01-01T00:00:00Z. The
--   <tt>SizeInBytes</tt> value doesn't represent the size of a consistent
--   snapshot of the file system, but it is eventually consistent when
--   there are no writes to the file system. That is, <tt>SizeInBytes</tt>
--   represents actual size only if the file system is not modified for a
--   period longer than a couple of hours. Otherwise, the value is not the
--   exact size that the file system was at any point in time.
--   
--   <a>$sel:performanceMode:FileSystemDescription'</a>,
--   <a>fileSystemDescription_performanceMode</a> - The performance mode of
--   the file system.
--   
--   <a>$sel:tags:FileSystemDescription'</a>,
--   <a>fileSystemDescription_tags</a> - The tags associated with the file
--   system, presented as an array of <tt>Tag</tt> objects.
newFileSystemDescription :: Text -> Text -> Text -> UTCTime -> LifeCycleState -> Natural -> FileSystemSize -> PerformanceMode -> FileSystemDescription

-- | <i>See:</i> <a>newFileSystemPolicyDescription</a> smart constructor.
data FileSystemPolicyDescription
FileSystemPolicyDescription' :: Maybe Text -> Maybe Text -> FileSystemPolicyDescription

-- | Create a value of <a>FileSystemPolicyDescription</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fileSystemId:FileSystemPolicyDescription'</a>,
--   <a>fileSystemPolicyDescription_fileSystemId</a> - Specifies the EFS
--   file system to which the <tt>FileSystemPolicy</tt> applies.
--   
--   <a>$sel:policy:FileSystemPolicyDescription'</a>,
--   <a>fileSystemPolicyDescription_policy</a> - The JSON formatted
--   <tt>FileSystemPolicy</tt> for the EFS file system.
newFileSystemPolicyDescription :: FileSystemPolicyDescription

-- | The latest known metered size (in bytes) of data stored in the file
--   system, in its <tt>Value</tt> field, and the time at which that size
--   was determined in its <tt>Timestamp</tt> field. The value doesn't
--   represent the size of a consistent snapshot of the file system, but it
--   is eventually consistent when there are no writes to the file system.
--   That is, the value represents the actual size only if the file system
--   is not modified for a period longer than a couple of hours. Otherwise,
--   the value is not necessarily the exact size the file system was at any
--   instant in time.
--   
--   <i>See:</i> <a>newFileSystemSize</a> smart constructor.
data FileSystemSize
FileSystemSize' :: Maybe Natural -> Maybe Natural -> Maybe POSIX -> Natural -> FileSystemSize

-- | Create a value of <a>FileSystemSize</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:valueInIA:FileSystemSize'</a>, <a>fileSystemSize_valueInIA</a>
--   - The latest known metered size (in bytes) of data stored in the
--   Infrequent Access storage class.
--   
--   <a>$sel:valueInStandard:FileSystemSize'</a>,
--   <a>fileSystemSize_valueInStandard</a> - The latest known metered size
--   (in bytes) of data stored in the Standard storage class.
--   
--   <a>$sel:timestamp:FileSystemSize'</a>, <a>fileSystemSize_timestamp</a>
--   - The time at which the size of data, returned in the <tt>Value</tt>
--   field, was determined. The value is the integer number of seconds
--   since 1970-01-01T00:00:00Z.
--   
--   <a>$sel:value:FileSystemSize'</a>, <a>fileSystemSize_value</a> - The
--   latest known metered size (in bytes) of data stored in the file
--   system.
newFileSystemSize :: Natural -> FileSystemSize

-- | <i>See:</i> <a>newLifecycleConfigurationDescription</a> smart
--   constructor.
data LifecycleConfigurationDescription
LifecycleConfigurationDescription' :: Maybe [LifecyclePolicy] -> LifecycleConfigurationDescription

-- | Create a value of <a>LifecycleConfigurationDescription</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lifecyclePolicies:LifecycleConfigurationDescription'</a>,
--   <a>lifecycleConfigurationDescription_lifecyclePolicies</a> - An array
--   of lifecycle management policies. EFS supports a maximum of one policy
--   per file system.
newLifecycleConfigurationDescription :: LifecycleConfigurationDescription

-- | Describes a policy used by EFS lifecycle management and EFS
--   intelligent tiering that specifies when to transition files into and
--   out of the file system's Infrequent Access (IA) storage class. For
--   more information, see <a>EFS Intelligent‐Tiering and EFS Lifecycle
--   Management</a>.
--   
--   When using the <tt>put-lifecycle-configuration</tt> CLI command or the
--   <tt>PutLifecycleConfiguration</tt> API action, Amazon EFS requires
--   that each <tt>LifecyclePolicy</tt> object have only a single
--   transition. This means that in a request body,
--   <tt>LifecyclePolicies</tt> needs to be structured as an array of
--   <tt>LifecyclePolicy</tt> objects, one object for each transition,
--   <tt>TransitionToIA</tt>, <tt>TransitionToPrimaryStorageClass</tt>. For
--   more information, see the request examples in
--   PutLifecycleConfiguration.
--   
--   <i>See:</i> <a>newLifecyclePolicy</a> smart constructor.
data LifecyclePolicy
LifecyclePolicy' :: Maybe TransitionToIARules -> Maybe TransitionToPrimaryStorageClassRules -> LifecyclePolicy

-- | Create a value of <a>LifecyclePolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:transitionToIA:LifecyclePolicy'</a>,
--   <a>lifecyclePolicy_transitionToIA</a> - Describes the period of time
--   that a file is not accessed, after which it transitions to IA storage.
--   Metadata operations such as listing the contents of a directory don't
--   count as file access events.
--   
--   <a>$sel:transitionToPrimaryStorageClass:LifecyclePolicy'</a>,
--   <a>lifecyclePolicy_transitionToPrimaryStorageClass</a> - Describes
--   when to transition a file from IA storage to primary storage. Metadata
--   operations such as listing the contents of a directory don't count as
--   file access events.
newLifecyclePolicy :: LifecyclePolicy

-- | Provides a description of a mount target.
--   
--   <i>See:</i> <a>newMountTargetDescription</a> smart constructor.
data MountTargetDescription
MountTargetDescription' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Text -> Text -> Text -> LifeCycleState -> MountTargetDescription

-- | Create a value of <a>MountTargetDescription</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ipAddress:MountTargetDescription'</a>,
--   <a>mountTargetDescription_ipAddress</a> - Address at which the file
--   system can be mounted by using the mount target.
--   
--   <a>$sel:availabilityZoneId:MountTargetDescription'</a>,
--   <a>mountTargetDescription_availabilityZoneId</a> - The unique and
--   consistent identifier of the Availability Zone that the mount target
--   resides in. For example, <tt>use1-az1</tt> is an AZ ID for the
--   us-east-1 Region and it has the same location in every Amazon Web
--   Services account.
--   
--   <a>$sel:vpcId:MountTargetDescription'</a>,
--   <a>mountTargetDescription_vpcId</a> - The virtual private cloud (VPC)
--   ID that the mount target is configured in.
--   
--   <a>$sel:availabilityZoneName:MountTargetDescription'</a>,
--   <a>mountTargetDescription_availabilityZoneName</a> - The name of the
--   Availability Zone in which the mount target is located. Availability
--   Zones are independently mapped to names for each Amazon Web Services
--   account. For example, the Availability Zone <tt>us-east-1a</tt> for
--   your Amazon Web Services account might not be the same location as
--   <tt>us-east-1a</tt> for another Amazon Web Services account.
--   
--   <a>$sel:networkInterfaceId:MountTargetDescription'</a>,
--   <a>mountTargetDescription_networkInterfaceId</a> - The ID of the
--   network interface that Amazon EFS created when it created the mount
--   target.
--   
--   <a>$sel:ownerId:MountTargetDescription'</a>,
--   <a>mountTargetDescription_ownerId</a> - Amazon Web Services account ID
--   that owns the resource.
--   
--   <a>$sel:mountTargetId:MountTargetDescription'</a>,
--   <a>mountTargetDescription_mountTargetId</a> - System-assigned mount
--   target ID.
--   
--   <a>$sel:fileSystemId:MountTargetDescription'</a>,
--   <a>mountTargetDescription_fileSystemId</a> - The ID of the file system
--   for which the mount target is intended.
--   
--   <a>$sel:subnetId:MountTargetDescription'</a>,
--   <a>mountTargetDescription_subnetId</a> - The ID of the mount target's
--   subnet.
--   
--   <a>$sel:lifeCycleState:MountTargetDescription'</a>,
--   <a>mountTargetDescription_lifeCycleState</a> - Lifecycle state of the
--   mount target.
newMountTargetDescription :: Text -> Text -> Text -> LifeCycleState -> MountTargetDescription

-- | The full POSIX identity, including the user ID, group ID, and any
--   secondary group IDs, on the access point that is used for all file
--   system operations performed by NFS clients using the access point.
--   
--   <i>See:</i> <a>newPosixUser</a> smart constructor.
data PosixUser
PosixUser' :: Maybe [Natural] -> Natural -> Natural -> PosixUser

-- | Create a value of <a>PosixUser</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:secondaryGids:PosixUser'</a>, <a>posixUser_secondaryGids</a> -
--   Secondary POSIX group IDs used for all file system operations using
--   this access point.
--   
--   <a>$sel:uid:PosixUser'</a>, <a>posixUser_uid</a> - The POSIX user ID
--   used for all file system operations using this access point.
--   
--   <a>$sel:gid:PosixUser'</a>, <a>posixUser_gid</a> - The POSIX group ID
--   used for all file system operations using this access point.
newPosixUser :: Natural -> Natural -> PosixUser

-- | Describes the resource type and its ID preference for the user's
--   Amazon Web Services account, in the current Amazon Web Services
--   Region.
--   
--   <i>See:</i> <a>newResourceIdPreference</a> smart constructor.
data ResourceIdPreference
ResourceIdPreference' :: Maybe [Resource] -> Maybe ResourceIdType -> ResourceIdPreference

-- | Create a value of <a>ResourceIdPreference</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resources:ResourceIdPreference'</a>,
--   <a>resourceIdPreference_resources</a> - Identifies the Amazon EFS
--   resources to which the ID preference setting applies,
--   <tt>FILE_SYSTEM</tt> and <tt>MOUNT_TARGET</tt>.
--   
--   <a>$sel:resourceIdType:ResourceIdPreference'</a>,
--   <a>resourceIdPreference_resourceIdType</a> - Identifies the EFS
--   resource ID preference, either <tt>LONG_ID</tt> (17 characters) or
--   <tt>SHORT_ID</tt> (8 characters).
newResourceIdPreference :: ResourceIdPreference

-- | Specifies the directory on the Amazon EFS file system that the access
--   point provides access to. The access point exposes the specified file
--   system path as the root directory of your file system to applications
--   using the access point. NFS clients using the access point can only
--   access data in the access point's <tt>RootDirectory</tt> and it's
--   subdirectories.
--   
--   <i>See:</i> <a>newRootDirectory</a> smart constructor.
data RootDirectory
RootDirectory' :: Maybe CreationInfo -> Maybe Text -> RootDirectory

-- | Create a value of <a>RootDirectory</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationInfo:RootDirectory'</a>,
--   <a>rootDirectory_creationInfo</a> - (Optional) Specifies the POSIX IDs
--   and permissions to apply to the access point's <tt>RootDirectory</tt>.
--   If the <tt>RootDirectory</tt> &gt; <tt>Path</tt> specified does not
--   exist, EFS creates the root directory using the <tt>CreationInfo</tt>
--   settings when a client connects to an access point. When specifying
--   the <tt>CreationInfo</tt>, you must provide values for all properties.
--   
--   If you do not provide <tt>CreationInfo</tt> and the specified
--   <tt>RootDirectory</tt> &gt; <tt>Path</tt> does not exist, attempts to
--   mount the file system using the access point will fail.
--   
--   <a>$sel:path:RootDirectory'</a>, <a>rootDirectory_path</a> - Specifies
--   the path on the EFS file system to expose as the root directory to NFS
--   clients using the access point to access the EFS file system. A path
--   can have up to four subdirectories. If the specified path does not
--   exist, you are required to provide the <tt>CreationInfo</tt>.
newRootDirectory :: RootDirectory

-- | A tag is a key-value pair. Allowed characters are letters, white
--   space, and numbers that can be represented in UTF-8, and the following
--   characters:<tt> + - = . _ : /</tt>.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The tag key (String). The key
--   can't start with <tt>aws:</tt>.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The value of the tag key.
newTag :: Text -> Text -> Tag
