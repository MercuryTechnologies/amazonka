-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-snow-device-managementZSamazonka-snow-device-management
@version 2.0


module Amazonka.SnowDeviceManagement.Types.AttachmentStatus
newtype AttachmentStatus
AttachmentStatus' :: Text -> AttachmentStatus
[fromAttachmentStatus] :: AttachmentStatus -> Text
pattern AttachmentStatus_ATTACHED :: AttachmentStatus
pattern AttachmentStatus_ATTACHING :: AttachmentStatus
pattern AttachmentStatus_DETACHED :: AttachmentStatus
pattern AttachmentStatus_DETACHING :: AttachmentStatus
instance Amazonka.Data.XML.ToXML Amazonka.SnowDeviceManagement.Types.AttachmentStatus.AttachmentStatus
instance Amazonka.Data.XML.FromXML Amazonka.SnowDeviceManagement.Types.AttachmentStatus.AttachmentStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.SnowDeviceManagement.Types.AttachmentStatus.AttachmentStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.SnowDeviceManagement.Types.AttachmentStatus.AttachmentStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.SnowDeviceManagement.Types.AttachmentStatus.AttachmentStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.SnowDeviceManagement.Types.AttachmentStatus.AttachmentStatus
instance Amazonka.Data.Query.ToQuery Amazonka.SnowDeviceManagement.Types.AttachmentStatus.AttachmentStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.SnowDeviceManagement.Types.AttachmentStatus.AttachmentStatus
instance Amazonka.Data.Log.ToLog Amazonka.SnowDeviceManagement.Types.AttachmentStatus.AttachmentStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.SnowDeviceManagement.Types.AttachmentStatus.AttachmentStatus
instance Amazonka.Data.Text.ToText Amazonka.SnowDeviceManagement.Types.AttachmentStatus.AttachmentStatus
instance Amazonka.Data.Text.FromText Amazonka.SnowDeviceManagement.Types.AttachmentStatus.AttachmentStatus
instance Control.DeepSeq.NFData Amazonka.SnowDeviceManagement.Types.AttachmentStatus.AttachmentStatus
instance Data.Hashable.Class.Hashable Amazonka.SnowDeviceManagement.Types.AttachmentStatus.AttachmentStatus
instance GHC.Generics.Generic Amazonka.SnowDeviceManagement.Types.AttachmentStatus.AttachmentStatus
instance GHC.Classes.Ord Amazonka.SnowDeviceManagement.Types.AttachmentStatus.AttachmentStatus
instance GHC.Classes.Eq Amazonka.SnowDeviceManagement.Types.AttachmentStatus.AttachmentStatus
instance GHC.Read.Read Amazonka.SnowDeviceManagement.Types.AttachmentStatus.AttachmentStatus
instance GHC.Show.Show Amazonka.SnowDeviceManagement.Types.AttachmentStatus.AttachmentStatus


module Amazonka.SnowDeviceManagement.Types.Capacity

-- | The physical capacity of the Amazon Web Services Snow Family device.
--   
--   <i>See:</i> <a>newCapacity</a> smart constructor.
data Capacity
Capacity' :: Maybe Integer -> Maybe Text -> Maybe Integer -> Maybe Text -> Maybe Integer -> Capacity

-- | The amount of capacity used on the device.
[$sel:used:Capacity'] :: Capacity -> Maybe Integer

-- | The name of the type of capacity, such as memory.
[$sel:name:Capacity'] :: Capacity -> Maybe Text

-- | The total capacity on the device.
[$sel:total:Capacity'] :: Capacity -> Maybe Integer

-- | The unit of measure for the type of capacity.
[$sel:unit:Capacity'] :: Capacity -> Maybe Text

-- | The amount of capacity available for use on the device.
[$sel:available:Capacity'] :: Capacity -> Maybe Integer

-- | Create a value of <a>Capacity</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:used:Capacity'</a>, <a>capacity_used</a> - The amount of
--   capacity used on the device.
--   
--   <a>$sel:name:Capacity'</a>, <a>capacity_name</a> - The name of the
--   type of capacity, such as memory.
--   
--   <a>$sel:total:Capacity'</a>, <a>capacity_total</a> - The total
--   capacity on the device.
--   
--   <a>$sel:unit:Capacity'</a>, <a>capacity_unit</a> - The unit of measure
--   for the type of capacity.
--   
--   <a>$sel:available:Capacity'</a>, <a>capacity_available</a> - The
--   amount of capacity available for use on the device.
newCapacity :: Capacity

-- | The amount of capacity used on the device.
capacity_used :: Lens' Capacity (Maybe Integer)

-- | The name of the type of capacity, such as memory.
capacity_name :: Lens' Capacity (Maybe Text)

-- | The total capacity on the device.
capacity_total :: Lens' Capacity (Maybe Integer)

-- | The unit of measure for the type of capacity.
capacity_unit :: Lens' Capacity (Maybe Text)

-- | The amount of capacity available for use on the device.
capacity_available :: Lens' Capacity (Maybe Integer)
instance GHC.Generics.Generic Amazonka.SnowDeviceManagement.Types.Capacity.Capacity
instance GHC.Show.Show Amazonka.SnowDeviceManagement.Types.Capacity.Capacity
instance GHC.Read.Read Amazonka.SnowDeviceManagement.Types.Capacity.Capacity
instance GHC.Classes.Eq Amazonka.SnowDeviceManagement.Types.Capacity.Capacity
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.SnowDeviceManagement.Types.Capacity.Capacity
instance Data.Hashable.Class.Hashable Amazonka.SnowDeviceManagement.Types.Capacity.Capacity
instance Control.DeepSeq.NFData Amazonka.SnowDeviceManagement.Types.Capacity.Capacity


module Amazonka.SnowDeviceManagement.Types.CpuOptions

-- | The options for how a device's CPU is configured.
--   
--   <i>See:</i> <a>newCpuOptions</a> smart constructor.
data CpuOptions
CpuOptions' :: Maybe Int -> Maybe Int -> CpuOptions

-- | The number of cores that the CPU can use.
[$sel:coreCount:CpuOptions'] :: CpuOptions -> Maybe Int

-- | The number of threads per core in the CPU.
[$sel:threadsPerCore:CpuOptions'] :: CpuOptions -> Maybe Int

-- | Create a value of <a>CpuOptions</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:coreCount:CpuOptions'</a>, <a>cpuOptions_coreCount</a> - The
--   number of cores that the CPU can use.
--   
--   <a>$sel:threadsPerCore:CpuOptions'</a>,
--   <a>cpuOptions_threadsPerCore</a> - The number of threads per core in
--   the CPU.
newCpuOptions :: CpuOptions

-- | The number of cores that the CPU can use.
cpuOptions_coreCount :: Lens' CpuOptions (Maybe Int)

-- | The number of threads per core in the CPU.
cpuOptions_threadsPerCore :: Lens' CpuOptions (Maybe Int)
instance GHC.Generics.Generic Amazonka.SnowDeviceManagement.Types.CpuOptions.CpuOptions
instance GHC.Show.Show Amazonka.SnowDeviceManagement.Types.CpuOptions.CpuOptions
instance GHC.Read.Read Amazonka.SnowDeviceManagement.Types.CpuOptions.CpuOptions
instance GHC.Classes.Eq Amazonka.SnowDeviceManagement.Types.CpuOptions.CpuOptions
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.SnowDeviceManagement.Types.CpuOptions.CpuOptions
instance Data.Hashable.Class.Hashable Amazonka.SnowDeviceManagement.Types.CpuOptions.CpuOptions
instance Control.DeepSeq.NFData Amazonka.SnowDeviceManagement.Types.CpuOptions.CpuOptions


module Amazonka.SnowDeviceManagement.Types.DeviceSummary

-- | Identifying information about the device.
--   
--   <i>See:</i> <a>newDeviceSummary</a> smart constructor.
data DeviceSummary
DeviceSummary' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> DeviceSummary

-- | The ID of the job used to order the device.
[$sel:associatedWithJob:DeviceSummary'] :: DeviceSummary -> Maybe Text

-- | The ID of the device.
[$sel:managedDeviceId:DeviceSummary'] :: DeviceSummary -> Maybe Text

-- | The Amazon Resource Name (ARN) of the device.
[$sel:managedDeviceArn:DeviceSummary'] :: DeviceSummary -> Maybe Text

-- | Optional metadata that you assign to a resource. You can use tags to
--   categorize a resource in different ways, such as by purpose, owner, or
--   environment.
[$sel:tags:DeviceSummary'] :: DeviceSummary -> Maybe (HashMap Text Text)

-- | Create a value of <a>DeviceSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:associatedWithJob:DeviceSummary'</a>,
--   <a>deviceSummary_associatedWithJob</a> - The ID of the job used to
--   order the device.
--   
--   <a>$sel:managedDeviceId:DeviceSummary'</a>,
--   <a>deviceSummary_managedDeviceId</a> - The ID of the device.
--   
--   <a>$sel:managedDeviceArn:DeviceSummary'</a>,
--   <a>deviceSummary_managedDeviceArn</a> - The Amazon Resource Name (ARN)
--   of the device.
--   
--   <a>$sel:tags:DeviceSummary'</a>, <a>deviceSummary_tags</a> - Optional
--   metadata that you assign to a resource. You can use tags to categorize
--   a resource in different ways, such as by purpose, owner, or
--   environment.
newDeviceSummary :: DeviceSummary

-- | The ID of the job used to order the device.
deviceSummary_associatedWithJob :: Lens' DeviceSummary (Maybe Text)

-- | The ID of the device.
deviceSummary_managedDeviceId :: Lens' DeviceSummary (Maybe Text)

-- | The Amazon Resource Name (ARN) of the device.
deviceSummary_managedDeviceArn :: Lens' DeviceSummary (Maybe Text)

-- | Optional metadata that you assign to a resource. You can use tags to
--   categorize a resource in different ways, such as by purpose, owner, or
--   environment.
deviceSummary_tags :: Lens' DeviceSummary (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Amazonka.SnowDeviceManagement.Types.DeviceSummary.DeviceSummary
instance GHC.Show.Show Amazonka.SnowDeviceManagement.Types.DeviceSummary.DeviceSummary
instance GHC.Read.Read Amazonka.SnowDeviceManagement.Types.DeviceSummary.DeviceSummary
instance GHC.Classes.Eq Amazonka.SnowDeviceManagement.Types.DeviceSummary.DeviceSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.SnowDeviceManagement.Types.DeviceSummary.DeviceSummary
instance Data.Hashable.Class.Hashable Amazonka.SnowDeviceManagement.Types.DeviceSummary.DeviceSummary
instance Control.DeepSeq.NFData Amazonka.SnowDeviceManagement.Types.DeviceSummary.DeviceSummary


module Amazonka.SnowDeviceManagement.Types.EbsInstanceBlockDevice

-- | Describes a parameter used to set up an Amazon Elastic Block Store
--   (Amazon EBS) volume in a block device mapping.
--   
--   <i>See:</i> <a>newEbsInstanceBlockDevice</a> smart constructor.
data EbsInstanceBlockDevice
EbsInstanceBlockDevice' :: Maybe Bool -> Maybe AttachmentStatus -> Maybe Text -> Maybe POSIX -> EbsInstanceBlockDevice

-- | A value that indicates whether the volume is deleted on instance
--   termination.
[$sel:deleteOnTermination:EbsInstanceBlockDevice'] :: EbsInstanceBlockDevice -> Maybe Bool

-- | The attachment state.
[$sel:status:EbsInstanceBlockDevice'] :: EbsInstanceBlockDevice -> Maybe AttachmentStatus

-- | The ID of the Amazon EBS volume.
[$sel:volumeId:EbsInstanceBlockDevice'] :: EbsInstanceBlockDevice -> Maybe Text

-- | When the attachment was initiated.
[$sel:attachTime:EbsInstanceBlockDevice'] :: EbsInstanceBlockDevice -> Maybe POSIX

-- | Create a value of <a>EbsInstanceBlockDevice</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deleteOnTermination:EbsInstanceBlockDevice'</a>,
--   <a>ebsInstanceBlockDevice_deleteOnTermination</a> - A value that
--   indicates whether the volume is deleted on instance termination.
--   
--   <a>$sel:status:EbsInstanceBlockDevice'</a>,
--   <a>ebsInstanceBlockDevice_status</a> - The attachment state.
--   
--   <a>$sel:volumeId:EbsInstanceBlockDevice'</a>,
--   <a>ebsInstanceBlockDevice_volumeId</a> - The ID of the Amazon EBS
--   volume.
--   
--   <a>$sel:attachTime:EbsInstanceBlockDevice'</a>,
--   <a>ebsInstanceBlockDevice_attachTime</a> - When the attachment was
--   initiated.
newEbsInstanceBlockDevice :: EbsInstanceBlockDevice

-- | A value that indicates whether the volume is deleted on instance
--   termination.
ebsInstanceBlockDevice_deleteOnTermination :: Lens' EbsInstanceBlockDevice (Maybe Bool)

-- | The attachment state.
ebsInstanceBlockDevice_status :: Lens' EbsInstanceBlockDevice (Maybe AttachmentStatus)

-- | The ID of the Amazon EBS volume.
ebsInstanceBlockDevice_volumeId :: Lens' EbsInstanceBlockDevice (Maybe Text)

-- | When the attachment was initiated.
ebsInstanceBlockDevice_attachTime :: Lens' EbsInstanceBlockDevice (Maybe UTCTime)
instance GHC.Generics.Generic Amazonka.SnowDeviceManagement.Types.EbsInstanceBlockDevice.EbsInstanceBlockDevice
instance GHC.Show.Show Amazonka.SnowDeviceManagement.Types.EbsInstanceBlockDevice.EbsInstanceBlockDevice
instance GHC.Read.Read Amazonka.SnowDeviceManagement.Types.EbsInstanceBlockDevice.EbsInstanceBlockDevice
instance GHC.Classes.Eq Amazonka.SnowDeviceManagement.Types.EbsInstanceBlockDevice.EbsInstanceBlockDevice
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.SnowDeviceManagement.Types.EbsInstanceBlockDevice.EbsInstanceBlockDevice
instance Data.Hashable.Class.Hashable Amazonka.SnowDeviceManagement.Types.EbsInstanceBlockDevice.EbsInstanceBlockDevice
instance Control.DeepSeq.NFData Amazonka.SnowDeviceManagement.Types.EbsInstanceBlockDevice.EbsInstanceBlockDevice


module Amazonka.SnowDeviceManagement.Types.ExecutionState
newtype ExecutionState
ExecutionState' :: Text -> ExecutionState
[fromExecutionState] :: ExecutionState -> Text
pattern ExecutionState_CANCELED :: ExecutionState
pattern ExecutionState_FAILED :: ExecutionState
pattern ExecutionState_IN_PROGRESS :: ExecutionState
pattern ExecutionState_QUEUED :: ExecutionState
pattern ExecutionState_REJECTED :: ExecutionState
pattern ExecutionState_SUCCEEDED :: ExecutionState
pattern ExecutionState_TIMED_OUT :: ExecutionState
instance Amazonka.Data.XML.ToXML Amazonka.SnowDeviceManagement.Types.ExecutionState.ExecutionState
instance Amazonka.Data.XML.FromXML Amazonka.SnowDeviceManagement.Types.ExecutionState.ExecutionState
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.SnowDeviceManagement.Types.ExecutionState.ExecutionState
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.SnowDeviceManagement.Types.ExecutionState.ExecutionState
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.SnowDeviceManagement.Types.ExecutionState.ExecutionState
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.SnowDeviceManagement.Types.ExecutionState.ExecutionState
instance Amazonka.Data.Query.ToQuery Amazonka.SnowDeviceManagement.Types.ExecutionState.ExecutionState
instance Amazonka.Data.Headers.ToHeader Amazonka.SnowDeviceManagement.Types.ExecutionState.ExecutionState
instance Amazonka.Data.Log.ToLog Amazonka.SnowDeviceManagement.Types.ExecutionState.ExecutionState
instance Amazonka.Data.ByteString.ToByteString Amazonka.SnowDeviceManagement.Types.ExecutionState.ExecutionState
instance Amazonka.Data.Text.ToText Amazonka.SnowDeviceManagement.Types.ExecutionState.ExecutionState
instance Amazonka.Data.Text.FromText Amazonka.SnowDeviceManagement.Types.ExecutionState.ExecutionState
instance Control.DeepSeq.NFData Amazonka.SnowDeviceManagement.Types.ExecutionState.ExecutionState
instance Data.Hashable.Class.Hashable Amazonka.SnowDeviceManagement.Types.ExecutionState.ExecutionState
instance GHC.Generics.Generic Amazonka.SnowDeviceManagement.Types.ExecutionState.ExecutionState
instance GHC.Classes.Ord Amazonka.SnowDeviceManagement.Types.ExecutionState.ExecutionState
instance GHC.Classes.Eq Amazonka.SnowDeviceManagement.Types.ExecutionState.ExecutionState
instance GHC.Read.Read Amazonka.SnowDeviceManagement.Types.ExecutionState.ExecutionState
instance GHC.Show.Show Amazonka.SnowDeviceManagement.Types.ExecutionState.ExecutionState


module Amazonka.SnowDeviceManagement.Types.ExecutionSummary

-- | The summary of a task execution on a specified device.
--   
--   <i>See:</i> <a>newExecutionSummary</a> smart constructor.
data ExecutionSummary
ExecutionSummary' :: Maybe Text -> Maybe ExecutionState -> Maybe Text -> Maybe Text -> ExecutionSummary

-- | The ID of the execution.
[$sel:executionId:ExecutionSummary'] :: ExecutionSummary -> Maybe Text

-- | The state of the execution.
[$sel:state:ExecutionSummary'] :: ExecutionSummary -> Maybe ExecutionState

-- | The ID of the task.
[$sel:taskId:ExecutionSummary'] :: ExecutionSummary -> Maybe Text

-- | The ID of the managed device that the task is being executed on.
[$sel:managedDeviceId:ExecutionSummary'] :: ExecutionSummary -> Maybe Text

-- | Create a value of <a>ExecutionSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:executionId:ExecutionSummary'</a>,
--   <a>executionSummary_executionId</a> - The ID of the execution.
--   
--   <a>$sel:state:ExecutionSummary'</a>, <a>executionSummary_state</a> -
--   The state of the execution.
--   
--   <a>$sel:taskId:ExecutionSummary'</a>, <a>executionSummary_taskId</a> -
--   The ID of the task.
--   
--   <a>$sel:managedDeviceId:ExecutionSummary'</a>,
--   <a>executionSummary_managedDeviceId</a> - The ID of the managed device
--   that the task is being executed on.
newExecutionSummary :: ExecutionSummary

-- | The ID of the execution.
executionSummary_executionId :: Lens' ExecutionSummary (Maybe Text)

-- | The state of the execution.
executionSummary_state :: Lens' ExecutionSummary (Maybe ExecutionState)

-- | The ID of the task.
executionSummary_taskId :: Lens' ExecutionSummary (Maybe Text)

-- | The ID of the managed device that the task is being executed on.
executionSummary_managedDeviceId :: Lens' ExecutionSummary (Maybe Text)
instance GHC.Generics.Generic Amazonka.SnowDeviceManagement.Types.ExecutionSummary.ExecutionSummary
instance GHC.Show.Show Amazonka.SnowDeviceManagement.Types.ExecutionSummary.ExecutionSummary
instance GHC.Read.Read Amazonka.SnowDeviceManagement.Types.ExecutionSummary.ExecutionSummary
instance GHC.Classes.Eq Amazonka.SnowDeviceManagement.Types.ExecutionSummary.ExecutionSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.SnowDeviceManagement.Types.ExecutionSummary.ExecutionSummary
instance Data.Hashable.Class.Hashable Amazonka.SnowDeviceManagement.Types.ExecutionSummary.ExecutionSummary
instance Control.DeepSeq.NFData Amazonka.SnowDeviceManagement.Types.ExecutionSummary.ExecutionSummary


module Amazonka.SnowDeviceManagement.Types.InstanceBlockDeviceMapping

-- | The description of a block device mapping.
--   
--   <i>See:</i> <a>newInstanceBlockDeviceMapping</a> smart constructor.
data InstanceBlockDeviceMapping
InstanceBlockDeviceMapping' :: Maybe EbsInstanceBlockDevice -> Maybe Text -> InstanceBlockDeviceMapping

-- | The parameters used to automatically set up Amazon Elastic Block Store
--   (Amazon EBS) volumes when the instance is launched.
[$sel:ebs:InstanceBlockDeviceMapping'] :: InstanceBlockDeviceMapping -> Maybe EbsInstanceBlockDevice

-- | The block device name.
[$sel:deviceName:InstanceBlockDeviceMapping'] :: InstanceBlockDeviceMapping -> Maybe Text

-- | Create a value of <a>InstanceBlockDeviceMapping</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ebs:InstanceBlockDeviceMapping'</a>,
--   <a>instanceBlockDeviceMapping_ebs</a> - The parameters used to
--   automatically set up Amazon Elastic Block Store (Amazon EBS) volumes
--   when the instance is launched.
--   
--   <a>$sel:deviceName:InstanceBlockDeviceMapping'</a>,
--   <a>instanceBlockDeviceMapping_deviceName</a> - The block device name.
newInstanceBlockDeviceMapping :: InstanceBlockDeviceMapping

-- | The parameters used to automatically set up Amazon Elastic Block Store
--   (Amazon EBS) volumes when the instance is launched.
instanceBlockDeviceMapping_ebs :: Lens' InstanceBlockDeviceMapping (Maybe EbsInstanceBlockDevice)

-- | The block device name.
instanceBlockDeviceMapping_deviceName :: Lens' InstanceBlockDeviceMapping (Maybe Text)
instance GHC.Generics.Generic Amazonka.SnowDeviceManagement.Types.InstanceBlockDeviceMapping.InstanceBlockDeviceMapping
instance GHC.Show.Show Amazonka.SnowDeviceManagement.Types.InstanceBlockDeviceMapping.InstanceBlockDeviceMapping
instance GHC.Read.Read Amazonka.SnowDeviceManagement.Types.InstanceBlockDeviceMapping.InstanceBlockDeviceMapping
instance GHC.Classes.Eq Amazonka.SnowDeviceManagement.Types.InstanceBlockDeviceMapping.InstanceBlockDeviceMapping
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.SnowDeviceManagement.Types.InstanceBlockDeviceMapping.InstanceBlockDeviceMapping
instance Data.Hashable.Class.Hashable Amazonka.SnowDeviceManagement.Types.InstanceBlockDeviceMapping.InstanceBlockDeviceMapping
instance Control.DeepSeq.NFData Amazonka.SnowDeviceManagement.Types.InstanceBlockDeviceMapping.InstanceBlockDeviceMapping


module Amazonka.SnowDeviceManagement.Types.InstanceStateName
newtype InstanceStateName
InstanceStateName' :: Text -> InstanceStateName
[fromInstanceStateName] :: InstanceStateName -> Text
pattern InstanceStateName_PENDING :: InstanceStateName
pattern InstanceStateName_RUNNING :: InstanceStateName
pattern InstanceStateName_SHUTTING_DOWN :: InstanceStateName
pattern InstanceStateName_STOPPED :: InstanceStateName
pattern InstanceStateName_STOPPING :: InstanceStateName
pattern InstanceStateName_TERMINATED :: InstanceStateName
instance Amazonka.Data.XML.ToXML Amazonka.SnowDeviceManagement.Types.InstanceStateName.InstanceStateName
instance Amazonka.Data.XML.FromXML Amazonka.SnowDeviceManagement.Types.InstanceStateName.InstanceStateName
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.SnowDeviceManagement.Types.InstanceStateName.InstanceStateName
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.SnowDeviceManagement.Types.InstanceStateName.InstanceStateName
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.SnowDeviceManagement.Types.InstanceStateName.InstanceStateName
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.SnowDeviceManagement.Types.InstanceStateName.InstanceStateName
instance Amazonka.Data.Query.ToQuery Amazonka.SnowDeviceManagement.Types.InstanceStateName.InstanceStateName
instance Amazonka.Data.Headers.ToHeader Amazonka.SnowDeviceManagement.Types.InstanceStateName.InstanceStateName
instance Amazonka.Data.Log.ToLog Amazonka.SnowDeviceManagement.Types.InstanceStateName.InstanceStateName
instance Amazonka.Data.ByteString.ToByteString Amazonka.SnowDeviceManagement.Types.InstanceStateName.InstanceStateName
instance Amazonka.Data.Text.ToText Amazonka.SnowDeviceManagement.Types.InstanceStateName.InstanceStateName
instance Amazonka.Data.Text.FromText Amazonka.SnowDeviceManagement.Types.InstanceStateName.InstanceStateName
instance Control.DeepSeq.NFData Amazonka.SnowDeviceManagement.Types.InstanceStateName.InstanceStateName
instance Data.Hashable.Class.Hashable Amazonka.SnowDeviceManagement.Types.InstanceStateName.InstanceStateName
instance GHC.Generics.Generic Amazonka.SnowDeviceManagement.Types.InstanceStateName.InstanceStateName
instance GHC.Classes.Ord Amazonka.SnowDeviceManagement.Types.InstanceStateName.InstanceStateName
instance GHC.Classes.Eq Amazonka.SnowDeviceManagement.Types.InstanceStateName.InstanceStateName
instance GHC.Read.Read Amazonka.SnowDeviceManagement.Types.InstanceStateName.InstanceStateName
instance GHC.Show.Show Amazonka.SnowDeviceManagement.Types.InstanceStateName.InstanceStateName


module Amazonka.SnowDeviceManagement.Types.InstanceState

-- | The description of the current state of an instance.
--   
--   <i>See:</i> <a>newInstanceState</a> smart constructor.
data InstanceState
InstanceState' :: Maybe InstanceStateName -> Maybe Int -> InstanceState

-- | The current state of the instance.
[$sel:name:InstanceState'] :: InstanceState -> Maybe InstanceStateName

-- | The state of the instance as a 16-bit unsigned integer.
--   
--   The high byte is all of the bits between 2^8 and (2^16)-1, which
--   equals decimal values between 256 and 65,535. These numerical values
--   are used for internal purposes and should be ignored.
--   
--   The low byte is all of the bits between 2^0 and (2^8)-1, which equals
--   decimal values between 0 and 255.
--   
--   The valid values for the instance state code are all in the range of
--   the low byte. These values are:
--   
--   <ul>
--   <li><tt>0</tt> : <tt>pending</tt></li>
--   <li><tt>16</tt> : <tt>running</tt></li>
--   <li><tt>32</tt> : <tt>shutting-down</tt></li>
--   <li><tt>48</tt> : <tt>terminated</tt></li>
--   <li><tt>64</tt> : <tt>stopping</tt></li>
--   <li><tt>80</tt> : <tt>stopped</tt></li>
--   </ul>
--   
--   You can ignore the high byte value by zeroing out all of the bits
--   above 2^8 or 256 in decimal.
[$sel:code:InstanceState'] :: InstanceState -> Maybe Int

-- | Create a value of <a>InstanceState</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:InstanceState'</a>, <a>instanceState_name</a> - The
--   current state of the instance.
--   
--   <a>$sel:code:InstanceState'</a>, <a>instanceState_code</a> - The state
--   of the instance as a 16-bit unsigned integer.
--   
--   The high byte is all of the bits between 2^8 and (2^16)-1, which
--   equals decimal values between 256 and 65,535. These numerical values
--   are used for internal purposes and should be ignored.
--   
--   The low byte is all of the bits between 2^0 and (2^8)-1, which equals
--   decimal values between 0 and 255.
--   
--   The valid values for the instance state code are all in the range of
--   the low byte. These values are:
--   
--   <ul>
--   <li><tt>0</tt> : <tt>pending</tt></li>
--   <li><tt>16</tt> : <tt>running</tt></li>
--   <li><tt>32</tt> : <tt>shutting-down</tt></li>
--   <li><tt>48</tt> : <tt>terminated</tt></li>
--   <li><tt>64</tt> : <tt>stopping</tt></li>
--   <li><tt>80</tt> : <tt>stopped</tt></li>
--   </ul>
--   
--   You can ignore the high byte value by zeroing out all of the bits
--   above 2^8 or 256 in decimal.
newInstanceState :: InstanceState

-- | The current state of the instance.
instanceState_name :: Lens' InstanceState (Maybe InstanceStateName)

-- | The state of the instance as a 16-bit unsigned integer.
--   
--   The high byte is all of the bits between 2^8 and (2^16)-1, which
--   equals decimal values between 256 and 65,535. These numerical values
--   are used for internal purposes and should be ignored.
--   
--   The low byte is all of the bits between 2^0 and (2^8)-1, which equals
--   decimal values between 0 and 255.
--   
--   The valid values for the instance state code are all in the range of
--   the low byte. These values are:
--   
--   <ul>
--   <li><tt>0</tt> : <tt>pending</tt></li>
--   <li><tt>16</tt> : <tt>running</tt></li>
--   <li><tt>32</tt> : <tt>shutting-down</tt></li>
--   <li><tt>48</tt> : <tt>terminated</tt></li>
--   <li><tt>64</tt> : <tt>stopping</tt></li>
--   <li><tt>80</tt> : <tt>stopped</tt></li>
--   </ul>
--   
--   You can ignore the high byte value by zeroing out all of the bits
--   above 2^8 or 256 in decimal.
instanceState_code :: Lens' InstanceState (Maybe Int)
instance GHC.Generics.Generic Amazonka.SnowDeviceManagement.Types.InstanceState.InstanceState
instance GHC.Show.Show Amazonka.SnowDeviceManagement.Types.InstanceState.InstanceState
instance GHC.Read.Read Amazonka.SnowDeviceManagement.Types.InstanceState.InstanceState
instance GHC.Classes.Eq Amazonka.SnowDeviceManagement.Types.InstanceState.InstanceState
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.SnowDeviceManagement.Types.InstanceState.InstanceState
instance Data.Hashable.Class.Hashable Amazonka.SnowDeviceManagement.Types.InstanceState.InstanceState
instance Control.DeepSeq.NFData Amazonka.SnowDeviceManagement.Types.InstanceState.InstanceState


module Amazonka.SnowDeviceManagement.Types.IpAddressAssignment
newtype IpAddressAssignment
IpAddressAssignment' :: Text -> IpAddressAssignment
[fromIpAddressAssignment] :: IpAddressAssignment -> Text
pattern IpAddressAssignment_DHCP :: IpAddressAssignment
pattern IpAddressAssignment_STATIC :: IpAddressAssignment
instance Amazonka.Data.XML.ToXML Amazonka.SnowDeviceManagement.Types.IpAddressAssignment.IpAddressAssignment
instance Amazonka.Data.XML.FromXML Amazonka.SnowDeviceManagement.Types.IpAddressAssignment.IpAddressAssignment
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.SnowDeviceManagement.Types.IpAddressAssignment.IpAddressAssignment
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.SnowDeviceManagement.Types.IpAddressAssignment.IpAddressAssignment
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.SnowDeviceManagement.Types.IpAddressAssignment.IpAddressAssignment
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.SnowDeviceManagement.Types.IpAddressAssignment.IpAddressAssignment
instance Amazonka.Data.Query.ToQuery Amazonka.SnowDeviceManagement.Types.IpAddressAssignment.IpAddressAssignment
instance Amazonka.Data.Headers.ToHeader Amazonka.SnowDeviceManagement.Types.IpAddressAssignment.IpAddressAssignment
instance Amazonka.Data.Log.ToLog Amazonka.SnowDeviceManagement.Types.IpAddressAssignment.IpAddressAssignment
instance Amazonka.Data.ByteString.ToByteString Amazonka.SnowDeviceManagement.Types.IpAddressAssignment.IpAddressAssignment
instance Amazonka.Data.Text.ToText Amazonka.SnowDeviceManagement.Types.IpAddressAssignment.IpAddressAssignment
instance Amazonka.Data.Text.FromText Amazonka.SnowDeviceManagement.Types.IpAddressAssignment.IpAddressAssignment
instance Control.DeepSeq.NFData Amazonka.SnowDeviceManagement.Types.IpAddressAssignment.IpAddressAssignment
instance Data.Hashable.Class.Hashable Amazonka.SnowDeviceManagement.Types.IpAddressAssignment.IpAddressAssignment
instance GHC.Generics.Generic Amazonka.SnowDeviceManagement.Types.IpAddressAssignment.IpAddressAssignment
instance GHC.Classes.Ord Amazonka.SnowDeviceManagement.Types.IpAddressAssignment.IpAddressAssignment
instance GHC.Classes.Eq Amazonka.SnowDeviceManagement.Types.IpAddressAssignment.IpAddressAssignment
instance GHC.Read.Read Amazonka.SnowDeviceManagement.Types.IpAddressAssignment.IpAddressAssignment
instance GHC.Show.Show Amazonka.SnowDeviceManagement.Types.IpAddressAssignment.IpAddressAssignment


module Amazonka.SnowDeviceManagement.Types.PhysicalConnectorType
newtype PhysicalConnectorType
PhysicalConnectorType' :: Text -> PhysicalConnectorType
[fromPhysicalConnectorType] :: PhysicalConnectorType -> Text
pattern PhysicalConnectorType_QSFP :: PhysicalConnectorType
pattern PhysicalConnectorType_RJ45 :: PhysicalConnectorType
pattern PhysicalConnectorType_RJ45_2 :: PhysicalConnectorType
pattern PhysicalConnectorType_SFP_PLUS :: PhysicalConnectorType
pattern PhysicalConnectorType_WIFI :: PhysicalConnectorType
instance Amazonka.Data.XML.ToXML Amazonka.SnowDeviceManagement.Types.PhysicalConnectorType.PhysicalConnectorType
instance Amazonka.Data.XML.FromXML Amazonka.SnowDeviceManagement.Types.PhysicalConnectorType.PhysicalConnectorType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.SnowDeviceManagement.Types.PhysicalConnectorType.PhysicalConnectorType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.SnowDeviceManagement.Types.PhysicalConnectorType.PhysicalConnectorType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.SnowDeviceManagement.Types.PhysicalConnectorType.PhysicalConnectorType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.SnowDeviceManagement.Types.PhysicalConnectorType.PhysicalConnectorType
instance Amazonka.Data.Query.ToQuery Amazonka.SnowDeviceManagement.Types.PhysicalConnectorType.PhysicalConnectorType
instance Amazonka.Data.Headers.ToHeader Amazonka.SnowDeviceManagement.Types.PhysicalConnectorType.PhysicalConnectorType
instance Amazonka.Data.Log.ToLog Amazonka.SnowDeviceManagement.Types.PhysicalConnectorType.PhysicalConnectorType
instance Amazonka.Data.ByteString.ToByteString Amazonka.SnowDeviceManagement.Types.PhysicalConnectorType.PhysicalConnectorType
instance Amazonka.Data.Text.ToText Amazonka.SnowDeviceManagement.Types.PhysicalConnectorType.PhysicalConnectorType
instance Amazonka.Data.Text.FromText Amazonka.SnowDeviceManagement.Types.PhysicalConnectorType.PhysicalConnectorType
instance Control.DeepSeq.NFData Amazonka.SnowDeviceManagement.Types.PhysicalConnectorType.PhysicalConnectorType
instance Data.Hashable.Class.Hashable Amazonka.SnowDeviceManagement.Types.PhysicalConnectorType.PhysicalConnectorType
instance GHC.Generics.Generic Amazonka.SnowDeviceManagement.Types.PhysicalConnectorType.PhysicalConnectorType
instance GHC.Classes.Ord Amazonka.SnowDeviceManagement.Types.PhysicalConnectorType.PhysicalConnectorType
instance GHC.Classes.Eq Amazonka.SnowDeviceManagement.Types.PhysicalConnectorType.PhysicalConnectorType
instance GHC.Read.Read Amazonka.SnowDeviceManagement.Types.PhysicalConnectorType.PhysicalConnectorType
instance GHC.Show.Show Amazonka.SnowDeviceManagement.Types.PhysicalConnectorType.PhysicalConnectorType


module Amazonka.SnowDeviceManagement.Types.PhysicalNetworkInterface

-- | The details about the physical network interface for the device.
--   
--   <i>See:</i> <a>newPhysicalNetworkInterface</a> smart constructor.
data PhysicalNetworkInterface
PhysicalNetworkInterface' :: Maybe Text -> Maybe Text -> Maybe IpAddressAssignment -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe PhysicalConnectorType -> PhysicalNetworkInterface

-- | The IP address of the device.
[$sel:ipAddress:PhysicalNetworkInterface'] :: PhysicalNetworkInterface -> Maybe Text

-- | The MAC address of the device.
[$sel:macAddress:PhysicalNetworkInterface'] :: PhysicalNetworkInterface -> Maybe Text

-- | A value that describes whether the IP address is dynamic or
--   persistent.
[$sel:ipAddressAssignment:PhysicalNetworkInterface'] :: PhysicalNetworkInterface -> Maybe IpAddressAssignment

-- | The default gateway of the device.
[$sel:defaultGateway:PhysicalNetworkInterface'] :: PhysicalNetworkInterface -> Maybe Text

-- | The physical network interface ID.
[$sel:physicalNetworkInterfaceId:PhysicalNetworkInterface'] :: PhysicalNetworkInterface -> Maybe Text

-- | The netmask used to divide the IP address into subnets.
[$sel:netmask:PhysicalNetworkInterface'] :: PhysicalNetworkInterface -> Maybe Text

-- | The physical connector type.
[$sel:physicalConnectorType:PhysicalNetworkInterface'] :: PhysicalNetworkInterface -> Maybe PhysicalConnectorType

-- | Create a value of <a>PhysicalNetworkInterface</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ipAddress:PhysicalNetworkInterface'</a>,
--   <a>physicalNetworkInterface_ipAddress</a> - The IP address of the
--   device.
--   
--   <a>$sel:macAddress:PhysicalNetworkInterface'</a>,
--   <a>physicalNetworkInterface_macAddress</a> - The MAC address of the
--   device.
--   
--   <a>$sel:ipAddressAssignment:PhysicalNetworkInterface'</a>,
--   <a>physicalNetworkInterface_ipAddressAssignment</a> - A value that
--   describes whether the IP address is dynamic or persistent.
--   
--   <a>$sel:defaultGateway:PhysicalNetworkInterface'</a>,
--   <a>physicalNetworkInterface_defaultGateway</a> - The default gateway
--   of the device.
--   
--   <a>$sel:physicalNetworkInterfaceId:PhysicalNetworkInterface'</a>,
--   <a>physicalNetworkInterface_physicalNetworkInterfaceId</a> - The
--   physical network interface ID.
--   
--   <a>$sel:netmask:PhysicalNetworkInterface'</a>,
--   <a>physicalNetworkInterface_netmask</a> - The netmask used to divide
--   the IP address into subnets.
--   
--   <a>$sel:physicalConnectorType:PhysicalNetworkInterface'</a>,
--   <a>physicalNetworkInterface_physicalConnectorType</a> - The physical
--   connector type.
newPhysicalNetworkInterface :: PhysicalNetworkInterface

-- | The IP address of the device.
physicalNetworkInterface_ipAddress :: Lens' PhysicalNetworkInterface (Maybe Text)

-- | The MAC address of the device.
physicalNetworkInterface_macAddress :: Lens' PhysicalNetworkInterface (Maybe Text)

-- | A value that describes whether the IP address is dynamic or
--   persistent.
physicalNetworkInterface_ipAddressAssignment :: Lens' PhysicalNetworkInterface (Maybe IpAddressAssignment)

-- | The default gateway of the device.
physicalNetworkInterface_defaultGateway :: Lens' PhysicalNetworkInterface (Maybe Text)

-- | The physical network interface ID.
physicalNetworkInterface_physicalNetworkInterfaceId :: Lens' PhysicalNetworkInterface (Maybe Text)

-- | The netmask used to divide the IP address into subnets.
physicalNetworkInterface_netmask :: Lens' PhysicalNetworkInterface (Maybe Text)

-- | The physical connector type.
physicalNetworkInterface_physicalConnectorType :: Lens' PhysicalNetworkInterface (Maybe PhysicalConnectorType)
instance GHC.Generics.Generic Amazonka.SnowDeviceManagement.Types.PhysicalNetworkInterface.PhysicalNetworkInterface
instance GHC.Show.Show Amazonka.SnowDeviceManagement.Types.PhysicalNetworkInterface.PhysicalNetworkInterface
instance GHC.Read.Read Amazonka.SnowDeviceManagement.Types.PhysicalNetworkInterface.PhysicalNetworkInterface
instance GHC.Classes.Eq Amazonka.SnowDeviceManagement.Types.PhysicalNetworkInterface.PhysicalNetworkInterface
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.SnowDeviceManagement.Types.PhysicalNetworkInterface.PhysicalNetworkInterface
instance Data.Hashable.Class.Hashable Amazonka.SnowDeviceManagement.Types.PhysicalNetworkInterface.PhysicalNetworkInterface
instance Control.DeepSeq.NFData Amazonka.SnowDeviceManagement.Types.PhysicalNetworkInterface.PhysicalNetworkInterface


module Amazonka.SnowDeviceManagement.Types.Reboot

-- | A structure used to reboot the device.
--   
--   <i>See:</i> <a>newReboot</a> smart constructor.
data Reboot
Reboot' :: Reboot

-- | Create a value of <a>Reboot</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newReboot :: Reboot
instance GHC.Generics.Generic Amazonka.SnowDeviceManagement.Types.Reboot.Reboot
instance GHC.Show.Show Amazonka.SnowDeviceManagement.Types.Reboot.Reboot
instance GHC.Read.Read Amazonka.SnowDeviceManagement.Types.Reboot.Reboot
instance GHC.Classes.Eq Amazonka.SnowDeviceManagement.Types.Reboot.Reboot
instance Data.Hashable.Class.Hashable Amazonka.SnowDeviceManagement.Types.Reboot.Reboot
instance Control.DeepSeq.NFData Amazonka.SnowDeviceManagement.Types.Reboot.Reboot
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.SnowDeviceManagement.Types.Reboot.Reboot


module Amazonka.SnowDeviceManagement.Types.ResourceSummary

-- | A summary of a resource available on the device.
--   
--   <i>See:</i> <a>newResourceSummary</a> smart constructor.
data ResourceSummary
ResourceSummary' :: Maybe Text -> Maybe Text -> Text -> ResourceSummary

-- | The Amazon Resource Name (ARN) of the resource.
[$sel:arn:ResourceSummary'] :: ResourceSummary -> Maybe Text

-- | The ID of the resource.
[$sel:id:ResourceSummary'] :: ResourceSummary -> Maybe Text

-- | The resource type.
[$sel:resourceType:ResourceSummary'] :: ResourceSummary -> Text

-- | Create a value of <a>ResourceSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:ResourceSummary'</a>, <a>resourceSummary_arn</a> - The
--   Amazon Resource Name (ARN) of the resource.
--   
--   <a>$sel:id:ResourceSummary'</a>, <a>resourceSummary_id</a> - The ID of
--   the resource.
--   
--   <a>$sel:resourceType:ResourceSummary'</a>,
--   <a>resourceSummary_resourceType</a> - The resource type.
newResourceSummary :: Text -> ResourceSummary

-- | The Amazon Resource Name (ARN) of the resource.
resourceSummary_arn :: Lens' ResourceSummary (Maybe Text)

-- | The ID of the resource.
resourceSummary_id :: Lens' ResourceSummary (Maybe Text)

-- | The resource type.
resourceSummary_resourceType :: Lens' ResourceSummary Text
instance GHC.Generics.Generic Amazonka.SnowDeviceManagement.Types.ResourceSummary.ResourceSummary
instance GHC.Show.Show Amazonka.SnowDeviceManagement.Types.ResourceSummary.ResourceSummary
instance GHC.Read.Read Amazonka.SnowDeviceManagement.Types.ResourceSummary.ResourceSummary
instance GHC.Classes.Eq Amazonka.SnowDeviceManagement.Types.ResourceSummary.ResourceSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.SnowDeviceManagement.Types.ResourceSummary.ResourceSummary
instance Data.Hashable.Class.Hashable Amazonka.SnowDeviceManagement.Types.ResourceSummary.ResourceSummary
instance Control.DeepSeq.NFData Amazonka.SnowDeviceManagement.Types.ResourceSummary.ResourceSummary


module Amazonka.SnowDeviceManagement.Types.SecurityGroupIdentifier

-- | Information about the device's security group.
--   
--   <i>See:</i> <a>newSecurityGroupIdentifier</a> smart constructor.
data SecurityGroupIdentifier
SecurityGroupIdentifier' :: Maybe Text -> Maybe Text -> SecurityGroupIdentifier

-- | The security group ID.
[$sel:groupId:SecurityGroupIdentifier'] :: SecurityGroupIdentifier -> Maybe Text

-- | The security group name.
[$sel:groupName:SecurityGroupIdentifier'] :: SecurityGroupIdentifier -> Maybe Text

-- | Create a value of <a>SecurityGroupIdentifier</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupId:SecurityGroupIdentifier'</a>,
--   <a>securityGroupIdentifier_groupId</a> - The security group ID.
--   
--   <a>$sel:groupName:SecurityGroupIdentifier'</a>,
--   <a>securityGroupIdentifier_groupName</a> - The security group name.
newSecurityGroupIdentifier :: SecurityGroupIdentifier

-- | The security group ID.
securityGroupIdentifier_groupId :: Lens' SecurityGroupIdentifier (Maybe Text)

-- | The security group name.
securityGroupIdentifier_groupName :: Lens' SecurityGroupIdentifier (Maybe Text)
instance GHC.Generics.Generic Amazonka.SnowDeviceManagement.Types.SecurityGroupIdentifier.SecurityGroupIdentifier
instance GHC.Show.Show Amazonka.SnowDeviceManagement.Types.SecurityGroupIdentifier.SecurityGroupIdentifier
instance GHC.Read.Read Amazonka.SnowDeviceManagement.Types.SecurityGroupIdentifier.SecurityGroupIdentifier
instance GHC.Classes.Eq Amazonka.SnowDeviceManagement.Types.SecurityGroupIdentifier.SecurityGroupIdentifier
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.SnowDeviceManagement.Types.SecurityGroupIdentifier.SecurityGroupIdentifier
instance Data.Hashable.Class.Hashable Amazonka.SnowDeviceManagement.Types.SecurityGroupIdentifier.SecurityGroupIdentifier
instance Control.DeepSeq.NFData Amazonka.SnowDeviceManagement.Types.SecurityGroupIdentifier.SecurityGroupIdentifier


module Amazonka.SnowDeviceManagement.Types.Instance

-- | The description of an instance. Currently, Amazon EC2 instances are
--   the only supported instance type.
--   
--   <i>See:</i> <a>newInstance</a> smart constructor.
data Instance
Instance' :: Maybe Text -> Maybe InstanceState -> Maybe [SecurityGroupIdentifier] -> Maybe POSIX -> Maybe CpuOptions -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe [InstanceBlockDeviceMapping] -> Maybe Text -> Maybe Int -> Instance

-- | The ID of the instance.
[$sel:instanceId:Instance'] :: Instance -> Maybe Text
[$sel:state:Instance'] :: Instance -> Maybe InstanceState

-- | The security groups for the instance.
[$sel:securityGroups:Instance'] :: Instance -> Maybe [SecurityGroupIdentifier]

-- | When the instance was created.
[$sel:createdAt:Instance'] :: Instance -> Maybe POSIX

-- | The CPU options for the instance.
[$sel:cpuOptions:Instance'] :: Instance -> Maybe CpuOptions

-- | The device name of the root device volume (for example,
--   <tt>/dev/sda1</tt>).
[$sel:rootDeviceName:Instance'] :: Instance -> Maybe Text

-- | The instance type.
[$sel:instanceType:Instance'] :: Instance -> Maybe Text

-- | The ID of the AMI used to launch the instance.
[$sel:imageId:Instance'] :: Instance -> Maybe Text

-- | The private IPv4 address assigned to the instance.
[$sel:privateIpAddress:Instance'] :: Instance -> Maybe Text

-- | When the instance was last updated.
[$sel:updatedAt:Instance'] :: Instance -> Maybe POSIX

-- | Any block device mapping entries for the instance.
[$sel:blockDeviceMappings:Instance'] :: Instance -> Maybe [InstanceBlockDeviceMapping]

-- | The public IPv4 address assigned to the instance.
[$sel:publicIpAddress:Instance'] :: Instance -> Maybe Text

-- | The Amazon Machine Image (AMI) launch index, which you can use to find
--   this instance in the launch group.
[$sel:amiLaunchIndex:Instance'] :: Instance -> Maybe Int

-- | Create a value of <a>Instance</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceId:Instance'</a>, <a>instance_instanceId</a> - The ID
--   of the instance.
--   
--   <a>$sel:state:Instance'</a>, <a>instance_state</a> - Undocumented
--   member.
--   
--   <a>$sel:securityGroups:Instance'</a>, <a>instance_securityGroups</a> -
--   The security groups for the instance.
--   
--   <a>$sel:createdAt:Instance'</a>, <a>instance_createdAt</a> - When the
--   instance was created.
--   
--   <a>$sel:cpuOptions:Instance'</a>, <a>instance_cpuOptions</a> - The CPU
--   options for the instance.
--   
--   <a>$sel:rootDeviceName:Instance'</a>, <a>instance_rootDeviceName</a> -
--   The device name of the root device volume (for example,
--   <tt>/dev/sda1</tt>).
--   
--   <a>$sel:instanceType:Instance'</a>, <a>instance_instanceType</a> - The
--   instance type.
--   
--   <a>$sel:imageId:Instance'</a>, <a>instance_imageId</a> - The ID of the
--   AMI used to launch the instance.
--   
--   <a>$sel:privateIpAddress:Instance'</a>,
--   <a>instance_privateIpAddress</a> - The private IPv4 address assigned
--   to the instance.
--   
--   <a>$sel:updatedAt:Instance'</a>, <a>instance_updatedAt</a> - When the
--   instance was last updated.
--   
--   <a>$sel:blockDeviceMappings:Instance'</a>,
--   <a>instance_blockDeviceMappings</a> - Any block device mapping entries
--   for the instance.
--   
--   <a>$sel:publicIpAddress:Instance'</a>, <a>instance_publicIpAddress</a>
--   - The public IPv4 address assigned to the instance.
--   
--   <a>$sel:amiLaunchIndex:Instance'</a>, <a>instance_amiLaunchIndex</a> -
--   The Amazon Machine Image (AMI) launch index, which you can use to find
--   this instance in the launch group.
newInstance :: Instance

-- | The ID of the instance.
instance_instanceId :: Lens' Instance (Maybe Text)

-- | Undocumented member.
instance_state :: Lens' Instance (Maybe InstanceState)

-- | The security groups for the instance.
instance_securityGroups :: Lens' Instance (Maybe [SecurityGroupIdentifier])

-- | When the instance was created.
instance_createdAt :: Lens' Instance (Maybe UTCTime)

-- | The CPU options for the instance.
instance_cpuOptions :: Lens' Instance (Maybe CpuOptions)

-- | The device name of the root device volume (for example,
--   <tt>/dev/sda1</tt>).
instance_rootDeviceName :: Lens' Instance (Maybe Text)

-- | The instance type.
instance_instanceType :: Lens' Instance (Maybe Text)

-- | The ID of the AMI used to launch the instance.
instance_imageId :: Lens' Instance (Maybe Text)

-- | The private IPv4 address assigned to the instance.
instance_privateIpAddress :: Lens' Instance (Maybe Text)

-- | When the instance was last updated.
instance_updatedAt :: Lens' Instance (Maybe UTCTime)

-- | Any block device mapping entries for the instance.
instance_blockDeviceMappings :: Lens' Instance (Maybe [InstanceBlockDeviceMapping])

-- | The public IPv4 address assigned to the instance.
instance_publicIpAddress :: Lens' Instance (Maybe Text)

-- | The Amazon Machine Image (AMI) launch index, which you can use to find
--   this instance in the launch group.
instance_amiLaunchIndex :: Lens' Instance (Maybe Int)
instance GHC.Generics.Generic Amazonka.SnowDeviceManagement.Types.Instance.Instance
instance GHC.Show.Show Amazonka.SnowDeviceManagement.Types.Instance.Instance
instance GHC.Read.Read Amazonka.SnowDeviceManagement.Types.Instance.Instance
instance GHC.Classes.Eq Amazonka.SnowDeviceManagement.Types.Instance.Instance
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.SnowDeviceManagement.Types.Instance.Instance
instance Data.Hashable.Class.Hashable Amazonka.SnowDeviceManagement.Types.Instance.Instance
instance Control.DeepSeq.NFData Amazonka.SnowDeviceManagement.Types.Instance.Instance


module Amazonka.SnowDeviceManagement.Types.InstanceSummary

-- | The details about the instance.
--   
--   <i>See:</i> <a>newInstanceSummary</a> smart constructor.
data InstanceSummary
InstanceSummary' :: Maybe POSIX -> Maybe Instance -> InstanceSummary

-- | When the instance summary was last updated.
[$sel:lastUpdatedAt:InstanceSummary'] :: InstanceSummary -> Maybe POSIX

-- | A structure containing details about the instance.
[$sel:instance':InstanceSummary'] :: InstanceSummary -> Maybe Instance

-- | Create a value of <a>InstanceSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastUpdatedAt:InstanceSummary'</a>,
--   <a>instanceSummary_lastUpdatedAt</a> - When the instance summary was
--   last updated.
--   
--   <a>$sel:instance':InstanceSummary'</a>,
--   <a>instanceSummary_instance</a> - A structure containing details about
--   the instance.
newInstanceSummary :: InstanceSummary

-- | When the instance summary was last updated.
instanceSummary_lastUpdatedAt :: Lens' InstanceSummary (Maybe UTCTime)

-- | A structure containing details about the instance.
instanceSummary_instance :: Lens' InstanceSummary (Maybe Instance)
instance GHC.Generics.Generic Amazonka.SnowDeviceManagement.Types.InstanceSummary.InstanceSummary
instance GHC.Show.Show Amazonka.SnowDeviceManagement.Types.InstanceSummary.InstanceSummary
instance GHC.Read.Read Amazonka.SnowDeviceManagement.Types.InstanceSummary.InstanceSummary
instance GHC.Classes.Eq Amazonka.SnowDeviceManagement.Types.InstanceSummary.InstanceSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.SnowDeviceManagement.Types.InstanceSummary.InstanceSummary
instance Data.Hashable.Class.Hashable Amazonka.SnowDeviceManagement.Types.InstanceSummary.InstanceSummary
instance Control.DeepSeq.NFData Amazonka.SnowDeviceManagement.Types.InstanceSummary.InstanceSummary


module Amazonka.SnowDeviceManagement.Types.SoftwareInformation

-- | Information about the software on the device.
--   
--   <i>See:</i> <a>newSoftwareInformation</a> smart constructor.
data SoftwareInformation
SoftwareInformation' :: Maybe Text -> Maybe Text -> Maybe Text -> SoftwareInformation

-- | The version of the software currently installed on the device.
[$sel:installedVersion:SoftwareInformation'] :: SoftwareInformation -> Maybe Text

-- | The state of the software that is installed or that is being installed
--   on the device.
[$sel:installState:SoftwareInformation'] :: SoftwareInformation -> Maybe Text

-- | The version of the software being installed on the device.
[$sel:installingVersion:SoftwareInformation'] :: SoftwareInformation -> Maybe Text

-- | Create a value of <a>SoftwareInformation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:installedVersion:SoftwareInformation'</a>,
--   <a>softwareInformation_installedVersion</a> - The version of the
--   software currently installed on the device.
--   
--   <a>$sel:installState:SoftwareInformation'</a>,
--   <a>softwareInformation_installState</a> - The state of the software
--   that is installed or that is being installed on the device.
--   
--   <a>$sel:installingVersion:SoftwareInformation'</a>,
--   <a>softwareInformation_installingVersion</a> - The version of the
--   software being installed on the device.
newSoftwareInformation :: SoftwareInformation

-- | The version of the software currently installed on the device.
softwareInformation_installedVersion :: Lens' SoftwareInformation (Maybe Text)

-- | The state of the software that is installed or that is being installed
--   on the device.
softwareInformation_installState :: Lens' SoftwareInformation (Maybe Text)

-- | The version of the software being installed on the device.
softwareInformation_installingVersion :: Lens' SoftwareInformation (Maybe Text)
instance GHC.Generics.Generic Amazonka.SnowDeviceManagement.Types.SoftwareInformation.SoftwareInformation
instance GHC.Show.Show Amazonka.SnowDeviceManagement.Types.SoftwareInformation.SoftwareInformation
instance GHC.Read.Read Amazonka.SnowDeviceManagement.Types.SoftwareInformation.SoftwareInformation
instance GHC.Classes.Eq Amazonka.SnowDeviceManagement.Types.SoftwareInformation.SoftwareInformation
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.SnowDeviceManagement.Types.SoftwareInformation.SoftwareInformation
instance Data.Hashable.Class.Hashable Amazonka.SnowDeviceManagement.Types.SoftwareInformation.SoftwareInformation
instance Control.DeepSeq.NFData Amazonka.SnowDeviceManagement.Types.SoftwareInformation.SoftwareInformation


module Amazonka.SnowDeviceManagement.Types.TaskState
newtype TaskState
TaskState' :: Text -> TaskState
[fromTaskState] :: TaskState -> Text
pattern TaskState_CANCELED :: TaskState
pattern TaskState_COMPLETED :: TaskState
pattern TaskState_IN_PROGRESS :: TaskState
instance Amazonka.Data.XML.ToXML Amazonka.SnowDeviceManagement.Types.TaskState.TaskState
instance Amazonka.Data.XML.FromXML Amazonka.SnowDeviceManagement.Types.TaskState.TaskState
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.SnowDeviceManagement.Types.TaskState.TaskState
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.SnowDeviceManagement.Types.TaskState.TaskState
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.SnowDeviceManagement.Types.TaskState.TaskState
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.SnowDeviceManagement.Types.TaskState.TaskState
instance Amazonka.Data.Query.ToQuery Amazonka.SnowDeviceManagement.Types.TaskState.TaskState
instance Amazonka.Data.Headers.ToHeader Amazonka.SnowDeviceManagement.Types.TaskState.TaskState
instance Amazonka.Data.Log.ToLog Amazonka.SnowDeviceManagement.Types.TaskState.TaskState
instance Amazonka.Data.ByteString.ToByteString Amazonka.SnowDeviceManagement.Types.TaskState.TaskState
instance Amazonka.Data.Text.ToText Amazonka.SnowDeviceManagement.Types.TaskState.TaskState
instance Amazonka.Data.Text.FromText Amazonka.SnowDeviceManagement.Types.TaskState.TaskState
instance Control.DeepSeq.NFData Amazonka.SnowDeviceManagement.Types.TaskState.TaskState
instance Data.Hashable.Class.Hashable Amazonka.SnowDeviceManagement.Types.TaskState.TaskState
instance GHC.Generics.Generic Amazonka.SnowDeviceManagement.Types.TaskState.TaskState
instance GHC.Classes.Ord Amazonka.SnowDeviceManagement.Types.TaskState.TaskState
instance GHC.Classes.Eq Amazonka.SnowDeviceManagement.Types.TaskState.TaskState
instance GHC.Read.Read Amazonka.SnowDeviceManagement.Types.TaskState.TaskState
instance GHC.Show.Show Amazonka.SnowDeviceManagement.Types.TaskState.TaskState


module Amazonka.SnowDeviceManagement.Types.TaskSummary

-- | Information about the task assigned to one or many devices.
--   
--   <i>See:</i> <a>newTaskSummary</a> smart constructor.
data TaskSummary
TaskSummary' :: Maybe TaskState -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> TaskSummary

-- | The state of the task assigned to one or many devices.
[$sel:state:TaskSummary'] :: TaskSummary -> Maybe TaskState

-- | The Amazon Resource Name (ARN) of the task.
[$sel:taskArn:TaskSummary'] :: TaskSummary -> Maybe Text

-- | Optional metadata that you assign to a resource. You can use tags to
--   categorize a resource in different ways, such as by purpose, owner, or
--   environment.
[$sel:tags:TaskSummary'] :: TaskSummary -> Maybe (HashMap Text Text)

-- | The task ID.
[$sel:taskId:TaskSummary'] :: TaskSummary -> Text

-- | Create a value of <a>TaskSummary</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:TaskSummary'</a>, <a>taskSummary_state</a> - The state
--   of the task assigned to one or many devices.
--   
--   <a>$sel:taskArn:TaskSummary'</a>, <a>taskSummary_taskArn</a> - The
--   Amazon Resource Name (ARN) of the task.
--   
--   <a>$sel:tags:TaskSummary'</a>, <a>taskSummary_tags</a> - Optional
--   metadata that you assign to a resource. You can use tags to categorize
--   a resource in different ways, such as by purpose, owner, or
--   environment.
--   
--   <a>$sel:taskId:TaskSummary'</a>, <a>taskSummary_taskId</a> - The task
--   ID.
newTaskSummary :: Text -> TaskSummary

-- | The state of the task assigned to one or many devices.
taskSummary_state :: Lens' TaskSummary (Maybe TaskState)

-- | The Amazon Resource Name (ARN) of the task.
taskSummary_taskArn :: Lens' TaskSummary (Maybe Text)

-- | Optional metadata that you assign to a resource. You can use tags to
--   categorize a resource in different ways, such as by purpose, owner, or
--   environment.
taskSummary_tags :: Lens' TaskSummary (Maybe (HashMap Text Text))

-- | The task ID.
taskSummary_taskId :: Lens' TaskSummary Text
instance GHC.Generics.Generic Amazonka.SnowDeviceManagement.Types.TaskSummary.TaskSummary
instance GHC.Show.Show Amazonka.SnowDeviceManagement.Types.TaskSummary.TaskSummary
instance GHC.Read.Read Amazonka.SnowDeviceManagement.Types.TaskSummary.TaskSummary
instance GHC.Classes.Eq Amazonka.SnowDeviceManagement.Types.TaskSummary.TaskSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.SnowDeviceManagement.Types.TaskSummary.TaskSummary
instance Data.Hashable.Class.Hashable Amazonka.SnowDeviceManagement.Types.TaskSummary.TaskSummary
instance Control.DeepSeq.NFData Amazonka.SnowDeviceManagement.Types.TaskSummary.TaskSummary


module Amazonka.SnowDeviceManagement.Types.Unlock

-- | A structure used to unlock a device.
--   
--   <i>See:</i> <a>newUnlock</a> smart constructor.
data Unlock
Unlock' :: Unlock

-- | Create a value of <a>Unlock</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUnlock :: Unlock
instance GHC.Generics.Generic Amazonka.SnowDeviceManagement.Types.Unlock.Unlock
instance GHC.Show.Show Amazonka.SnowDeviceManagement.Types.Unlock.Unlock
instance GHC.Read.Read Amazonka.SnowDeviceManagement.Types.Unlock.Unlock
instance GHC.Classes.Eq Amazonka.SnowDeviceManagement.Types.Unlock.Unlock
instance Data.Hashable.Class.Hashable Amazonka.SnowDeviceManagement.Types.Unlock.Unlock
instance Control.DeepSeq.NFData Amazonka.SnowDeviceManagement.Types.Unlock.Unlock
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.SnowDeviceManagement.Types.Unlock.Unlock


module Amazonka.SnowDeviceManagement.Types.Command

-- | The command given to the device to execute.
--   
--   <i>See:</i> <a>newCommand</a> smart constructor.
data Command
Command' :: Maybe Unlock -> Maybe Reboot -> Command

-- | Unlocks the device.
[$sel:unlock:Command'] :: Command -> Maybe Unlock

-- | Reboots the device.
[$sel:reboot:Command'] :: Command -> Maybe Reboot

-- | Create a value of <a>Command</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:unlock:Command'</a>, <a>command_unlock</a> - Unlocks the
--   device.
--   
--   <a>$sel:reboot:Command'</a>, <a>command_reboot</a> - Reboots the
--   device.
newCommand :: Command

-- | Unlocks the device.
command_unlock :: Lens' Command (Maybe Unlock)

-- | Reboots the device.
command_reboot :: Lens' Command (Maybe Reboot)
instance GHC.Generics.Generic Amazonka.SnowDeviceManagement.Types.Command.Command
instance GHC.Show.Show Amazonka.SnowDeviceManagement.Types.Command.Command
instance GHC.Read.Read Amazonka.SnowDeviceManagement.Types.Command.Command
instance GHC.Classes.Eq Amazonka.SnowDeviceManagement.Types.Command.Command
instance Data.Hashable.Class.Hashable Amazonka.SnowDeviceManagement.Types.Command.Command
instance Control.DeepSeq.NFData Amazonka.SnowDeviceManagement.Types.Command.Command
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.SnowDeviceManagement.Types.Command.Command


module Amazonka.SnowDeviceManagement.Types.UnlockState
newtype UnlockState
UnlockState' :: Text -> UnlockState
[fromUnlockState] :: UnlockState -> Text
pattern UnlockState_LOCKED :: UnlockState
pattern UnlockState_UNLOCKED :: UnlockState
pattern UnlockState_UNLOCKING :: UnlockState
instance Amazonka.Data.XML.ToXML Amazonka.SnowDeviceManagement.Types.UnlockState.UnlockState
instance Amazonka.Data.XML.FromXML Amazonka.SnowDeviceManagement.Types.UnlockState.UnlockState
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.SnowDeviceManagement.Types.UnlockState.UnlockState
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.SnowDeviceManagement.Types.UnlockState.UnlockState
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.SnowDeviceManagement.Types.UnlockState.UnlockState
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.SnowDeviceManagement.Types.UnlockState.UnlockState
instance Amazonka.Data.Query.ToQuery Amazonka.SnowDeviceManagement.Types.UnlockState.UnlockState
instance Amazonka.Data.Headers.ToHeader Amazonka.SnowDeviceManagement.Types.UnlockState.UnlockState
instance Amazonka.Data.Log.ToLog Amazonka.SnowDeviceManagement.Types.UnlockState.UnlockState
instance Amazonka.Data.ByteString.ToByteString Amazonka.SnowDeviceManagement.Types.UnlockState.UnlockState
instance Amazonka.Data.Text.ToText Amazonka.SnowDeviceManagement.Types.UnlockState.UnlockState
instance Amazonka.Data.Text.FromText Amazonka.SnowDeviceManagement.Types.UnlockState.UnlockState
instance Control.DeepSeq.NFData Amazonka.SnowDeviceManagement.Types.UnlockState.UnlockState
instance Data.Hashable.Class.Hashable Amazonka.SnowDeviceManagement.Types.UnlockState.UnlockState
instance GHC.Generics.Generic Amazonka.SnowDeviceManagement.Types.UnlockState.UnlockState
instance GHC.Classes.Ord Amazonka.SnowDeviceManagement.Types.UnlockState.UnlockState
instance GHC.Classes.Eq Amazonka.SnowDeviceManagement.Types.UnlockState.UnlockState
instance GHC.Read.Read Amazonka.SnowDeviceManagement.Types.UnlockState.UnlockState
instance GHC.Show.Show Amazonka.SnowDeviceManagement.Types.UnlockState.UnlockState


module Amazonka.SnowDeviceManagement.Types

-- | API version <tt>2021-08-04</tt> of the Amazon Snow Device Management
--   SDK configuration.
defaultService :: Service

-- | The input fails to satisfy the constraints specified by an Amazon Web
--   Services service.
_ValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You don't have sufficient access to perform this action.
_AccessDeniedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request would cause a service quota to be exceeded.
_ServiceQuotaExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request was denied due to request throttling.
_ThrottlingException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An unexpected error occurred while processing the request.
_InternalServerException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request references a resource that doesn't exist.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError
newtype AttachmentStatus
AttachmentStatus' :: Text -> AttachmentStatus
[fromAttachmentStatus] :: AttachmentStatus -> Text
pattern AttachmentStatus_ATTACHED :: AttachmentStatus
pattern AttachmentStatus_ATTACHING :: AttachmentStatus
pattern AttachmentStatus_DETACHED :: AttachmentStatus
pattern AttachmentStatus_DETACHING :: AttachmentStatus
newtype ExecutionState
ExecutionState' :: Text -> ExecutionState
[fromExecutionState] :: ExecutionState -> Text
pattern ExecutionState_CANCELED :: ExecutionState
pattern ExecutionState_FAILED :: ExecutionState
pattern ExecutionState_IN_PROGRESS :: ExecutionState
pattern ExecutionState_QUEUED :: ExecutionState
pattern ExecutionState_REJECTED :: ExecutionState
pattern ExecutionState_SUCCEEDED :: ExecutionState
pattern ExecutionState_TIMED_OUT :: ExecutionState
newtype InstanceStateName
InstanceStateName' :: Text -> InstanceStateName
[fromInstanceStateName] :: InstanceStateName -> Text
pattern InstanceStateName_PENDING :: InstanceStateName
pattern InstanceStateName_RUNNING :: InstanceStateName
pattern InstanceStateName_SHUTTING_DOWN :: InstanceStateName
pattern InstanceStateName_STOPPED :: InstanceStateName
pattern InstanceStateName_STOPPING :: InstanceStateName
pattern InstanceStateName_TERMINATED :: InstanceStateName
newtype IpAddressAssignment
IpAddressAssignment' :: Text -> IpAddressAssignment
[fromIpAddressAssignment] :: IpAddressAssignment -> Text
pattern IpAddressAssignment_DHCP :: IpAddressAssignment
pattern IpAddressAssignment_STATIC :: IpAddressAssignment
newtype PhysicalConnectorType
PhysicalConnectorType' :: Text -> PhysicalConnectorType
[fromPhysicalConnectorType] :: PhysicalConnectorType -> Text
pattern PhysicalConnectorType_QSFP :: PhysicalConnectorType
pattern PhysicalConnectorType_RJ45 :: PhysicalConnectorType
pattern PhysicalConnectorType_RJ45_2 :: PhysicalConnectorType
pattern PhysicalConnectorType_SFP_PLUS :: PhysicalConnectorType
pattern PhysicalConnectorType_WIFI :: PhysicalConnectorType
newtype TaskState
TaskState' :: Text -> TaskState
[fromTaskState] :: TaskState -> Text
pattern TaskState_CANCELED :: TaskState
pattern TaskState_COMPLETED :: TaskState
pattern TaskState_IN_PROGRESS :: TaskState
newtype UnlockState
UnlockState' :: Text -> UnlockState
[fromUnlockState] :: UnlockState -> Text
pattern UnlockState_LOCKED :: UnlockState
pattern UnlockState_UNLOCKED :: UnlockState
pattern UnlockState_UNLOCKING :: UnlockState

-- | The physical capacity of the Amazon Web Services Snow Family device.
--   
--   <i>See:</i> <a>newCapacity</a> smart constructor.
data Capacity
Capacity' :: Maybe Integer -> Maybe Text -> Maybe Integer -> Maybe Text -> Maybe Integer -> Capacity

-- | The amount of capacity used on the device.
[$sel:used:Capacity'] :: Capacity -> Maybe Integer

-- | The name of the type of capacity, such as memory.
[$sel:name:Capacity'] :: Capacity -> Maybe Text

-- | The total capacity on the device.
[$sel:total:Capacity'] :: Capacity -> Maybe Integer

-- | The unit of measure for the type of capacity.
[$sel:unit:Capacity'] :: Capacity -> Maybe Text

-- | The amount of capacity available for use on the device.
[$sel:available:Capacity'] :: Capacity -> Maybe Integer

-- | Create a value of <a>Capacity</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:used:Capacity'</a>, <a>capacity_used</a> - The amount of
--   capacity used on the device.
--   
--   <a>$sel:name:Capacity'</a>, <a>capacity_name</a> - The name of the
--   type of capacity, such as memory.
--   
--   <a>$sel:total:Capacity'</a>, <a>capacity_total</a> - The total
--   capacity on the device.
--   
--   <a>$sel:unit:Capacity'</a>, <a>capacity_unit</a> - The unit of measure
--   for the type of capacity.
--   
--   <a>$sel:available:Capacity'</a>, <a>capacity_available</a> - The
--   amount of capacity available for use on the device.
newCapacity :: Capacity

-- | The amount of capacity used on the device.
capacity_used :: Lens' Capacity (Maybe Integer)

-- | The name of the type of capacity, such as memory.
capacity_name :: Lens' Capacity (Maybe Text)

-- | The total capacity on the device.
capacity_total :: Lens' Capacity (Maybe Integer)

-- | The unit of measure for the type of capacity.
capacity_unit :: Lens' Capacity (Maybe Text)

-- | The amount of capacity available for use on the device.
capacity_available :: Lens' Capacity (Maybe Integer)

-- | The command given to the device to execute.
--   
--   <i>See:</i> <a>newCommand</a> smart constructor.
data Command
Command' :: Maybe Unlock -> Maybe Reboot -> Command

-- | Unlocks the device.
[$sel:unlock:Command'] :: Command -> Maybe Unlock

-- | Reboots the device.
[$sel:reboot:Command'] :: Command -> Maybe Reboot

-- | Create a value of <a>Command</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:unlock:Command'</a>, <a>command_unlock</a> - Unlocks the
--   device.
--   
--   <a>$sel:reboot:Command'</a>, <a>command_reboot</a> - Reboots the
--   device.
newCommand :: Command

-- | Unlocks the device.
command_unlock :: Lens' Command (Maybe Unlock)

-- | Reboots the device.
command_reboot :: Lens' Command (Maybe Reboot)

-- | The options for how a device's CPU is configured.
--   
--   <i>See:</i> <a>newCpuOptions</a> smart constructor.
data CpuOptions
CpuOptions' :: Maybe Int -> Maybe Int -> CpuOptions

-- | The number of cores that the CPU can use.
[$sel:coreCount:CpuOptions'] :: CpuOptions -> Maybe Int

-- | The number of threads per core in the CPU.
[$sel:threadsPerCore:CpuOptions'] :: CpuOptions -> Maybe Int

-- | Create a value of <a>CpuOptions</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:coreCount:CpuOptions'</a>, <a>cpuOptions_coreCount</a> - The
--   number of cores that the CPU can use.
--   
--   <a>$sel:threadsPerCore:CpuOptions'</a>,
--   <a>cpuOptions_threadsPerCore</a> - The number of threads per core in
--   the CPU.
newCpuOptions :: CpuOptions

-- | The number of cores that the CPU can use.
cpuOptions_coreCount :: Lens' CpuOptions (Maybe Int)

-- | The number of threads per core in the CPU.
cpuOptions_threadsPerCore :: Lens' CpuOptions (Maybe Int)

-- | Identifying information about the device.
--   
--   <i>See:</i> <a>newDeviceSummary</a> smart constructor.
data DeviceSummary
DeviceSummary' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> DeviceSummary

-- | The ID of the job used to order the device.
[$sel:associatedWithJob:DeviceSummary'] :: DeviceSummary -> Maybe Text

-- | The ID of the device.
[$sel:managedDeviceId:DeviceSummary'] :: DeviceSummary -> Maybe Text

-- | The Amazon Resource Name (ARN) of the device.
[$sel:managedDeviceArn:DeviceSummary'] :: DeviceSummary -> Maybe Text

-- | Optional metadata that you assign to a resource. You can use tags to
--   categorize a resource in different ways, such as by purpose, owner, or
--   environment.
[$sel:tags:DeviceSummary'] :: DeviceSummary -> Maybe (HashMap Text Text)

-- | Create a value of <a>DeviceSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:associatedWithJob:DeviceSummary'</a>,
--   <a>deviceSummary_associatedWithJob</a> - The ID of the job used to
--   order the device.
--   
--   <a>$sel:managedDeviceId:DeviceSummary'</a>,
--   <a>deviceSummary_managedDeviceId</a> - The ID of the device.
--   
--   <a>$sel:managedDeviceArn:DeviceSummary'</a>,
--   <a>deviceSummary_managedDeviceArn</a> - The Amazon Resource Name (ARN)
--   of the device.
--   
--   <a>$sel:tags:DeviceSummary'</a>, <a>deviceSummary_tags</a> - Optional
--   metadata that you assign to a resource. You can use tags to categorize
--   a resource in different ways, such as by purpose, owner, or
--   environment.
newDeviceSummary :: DeviceSummary

-- | The ID of the job used to order the device.
deviceSummary_associatedWithJob :: Lens' DeviceSummary (Maybe Text)

-- | The ID of the device.
deviceSummary_managedDeviceId :: Lens' DeviceSummary (Maybe Text)

-- | The Amazon Resource Name (ARN) of the device.
deviceSummary_managedDeviceArn :: Lens' DeviceSummary (Maybe Text)

-- | Optional metadata that you assign to a resource. You can use tags to
--   categorize a resource in different ways, such as by purpose, owner, or
--   environment.
deviceSummary_tags :: Lens' DeviceSummary (Maybe (HashMap Text Text))

-- | Describes a parameter used to set up an Amazon Elastic Block Store
--   (Amazon EBS) volume in a block device mapping.
--   
--   <i>See:</i> <a>newEbsInstanceBlockDevice</a> smart constructor.
data EbsInstanceBlockDevice
EbsInstanceBlockDevice' :: Maybe Bool -> Maybe AttachmentStatus -> Maybe Text -> Maybe POSIX -> EbsInstanceBlockDevice

-- | A value that indicates whether the volume is deleted on instance
--   termination.
[$sel:deleteOnTermination:EbsInstanceBlockDevice'] :: EbsInstanceBlockDevice -> Maybe Bool

-- | The attachment state.
[$sel:status:EbsInstanceBlockDevice'] :: EbsInstanceBlockDevice -> Maybe AttachmentStatus

-- | The ID of the Amazon EBS volume.
[$sel:volumeId:EbsInstanceBlockDevice'] :: EbsInstanceBlockDevice -> Maybe Text

-- | When the attachment was initiated.
[$sel:attachTime:EbsInstanceBlockDevice'] :: EbsInstanceBlockDevice -> Maybe POSIX

-- | Create a value of <a>EbsInstanceBlockDevice</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deleteOnTermination:EbsInstanceBlockDevice'</a>,
--   <a>ebsInstanceBlockDevice_deleteOnTermination</a> - A value that
--   indicates whether the volume is deleted on instance termination.
--   
--   <a>$sel:status:EbsInstanceBlockDevice'</a>,
--   <a>ebsInstanceBlockDevice_status</a> - The attachment state.
--   
--   <a>$sel:volumeId:EbsInstanceBlockDevice'</a>,
--   <a>ebsInstanceBlockDevice_volumeId</a> - The ID of the Amazon EBS
--   volume.
--   
--   <a>$sel:attachTime:EbsInstanceBlockDevice'</a>,
--   <a>ebsInstanceBlockDevice_attachTime</a> - When the attachment was
--   initiated.
newEbsInstanceBlockDevice :: EbsInstanceBlockDevice

-- | A value that indicates whether the volume is deleted on instance
--   termination.
ebsInstanceBlockDevice_deleteOnTermination :: Lens' EbsInstanceBlockDevice (Maybe Bool)

-- | The attachment state.
ebsInstanceBlockDevice_status :: Lens' EbsInstanceBlockDevice (Maybe AttachmentStatus)

-- | The ID of the Amazon EBS volume.
ebsInstanceBlockDevice_volumeId :: Lens' EbsInstanceBlockDevice (Maybe Text)

-- | When the attachment was initiated.
ebsInstanceBlockDevice_attachTime :: Lens' EbsInstanceBlockDevice (Maybe UTCTime)

-- | The summary of a task execution on a specified device.
--   
--   <i>See:</i> <a>newExecutionSummary</a> smart constructor.
data ExecutionSummary
ExecutionSummary' :: Maybe Text -> Maybe ExecutionState -> Maybe Text -> Maybe Text -> ExecutionSummary

-- | The ID of the execution.
[$sel:executionId:ExecutionSummary'] :: ExecutionSummary -> Maybe Text

-- | The state of the execution.
[$sel:state:ExecutionSummary'] :: ExecutionSummary -> Maybe ExecutionState

-- | The ID of the task.
[$sel:taskId:ExecutionSummary'] :: ExecutionSummary -> Maybe Text

-- | The ID of the managed device that the task is being executed on.
[$sel:managedDeviceId:ExecutionSummary'] :: ExecutionSummary -> Maybe Text

-- | Create a value of <a>ExecutionSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:executionId:ExecutionSummary'</a>,
--   <a>executionSummary_executionId</a> - The ID of the execution.
--   
--   <a>$sel:state:ExecutionSummary'</a>, <a>executionSummary_state</a> -
--   The state of the execution.
--   
--   <a>$sel:taskId:ExecutionSummary'</a>, <a>executionSummary_taskId</a> -
--   The ID of the task.
--   
--   <a>$sel:managedDeviceId:ExecutionSummary'</a>,
--   <a>executionSummary_managedDeviceId</a> - The ID of the managed device
--   that the task is being executed on.
newExecutionSummary :: ExecutionSummary

-- | The ID of the execution.
executionSummary_executionId :: Lens' ExecutionSummary (Maybe Text)

-- | The state of the execution.
executionSummary_state :: Lens' ExecutionSummary (Maybe ExecutionState)

-- | The ID of the task.
executionSummary_taskId :: Lens' ExecutionSummary (Maybe Text)

-- | The ID of the managed device that the task is being executed on.
executionSummary_managedDeviceId :: Lens' ExecutionSummary (Maybe Text)

-- | The description of an instance. Currently, Amazon EC2 instances are
--   the only supported instance type.
--   
--   <i>See:</i> <a>newInstance</a> smart constructor.
data Instance
Instance' :: Maybe Text -> Maybe InstanceState -> Maybe [SecurityGroupIdentifier] -> Maybe POSIX -> Maybe CpuOptions -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe [InstanceBlockDeviceMapping] -> Maybe Text -> Maybe Int -> Instance

-- | The ID of the instance.
[$sel:instanceId:Instance'] :: Instance -> Maybe Text
[$sel:state:Instance'] :: Instance -> Maybe InstanceState

-- | The security groups for the instance.
[$sel:securityGroups:Instance'] :: Instance -> Maybe [SecurityGroupIdentifier]

-- | When the instance was created.
[$sel:createdAt:Instance'] :: Instance -> Maybe POSIX

-- | The CPU options for the instance.
[$sel:cpuOptions:Instance'] :: Instance -> Maybe CpuOptions

-- | The device name of the root device volume (for example,
--   <tt>/dev/sda1</tt>).
[$sel:rootDeviceName:Instance'] :: Instance -> Maybe Text

-- | The instance type.
[$sel:instanceType:Instance'] :: Instance -> Maybe Text

-- | The ID of the AMI used to launch the instance.
[$sel:imageId:Instance'] :: Instance -> Maybe Text

-- | The private IPv4 address assigned to the instance.
[$sel:privateIpAddress:Instance'] :: Instance -> Maybe Text

-- | When the instance was last updated.
[$sel:updatedAt:Instance'] :: Instance -> Maybe POSIX

-- | Any block device mapping entries for the instance.
[$sel:blockDeviceMappings:Instance'] :: Instance -> Maybe [InstanceBlockDeviceMapping]

-- | The public IPv4 address assigned to the instance.
[$sel:publicIpAddress:Instance'] :: Instance -> Maybe Text

-- | The Amazon Machine Image (AMI) launch index, which you can use to find
--   this instance in the launch group.
[$sel:amiLaunchIndex:Instance'] :: Instance -> Maybe Int

-- | Create a value of <a>Instance</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceId:Instance'</a>, <a>instance_instanceId</a> - The ID
--   of the instance.
--   
--   <a>$sel:state:Instance'</a>, <a>instance_state</a> - Undocumented
--   member.
--   
--   <a>$sel:securityGroups:Instance'</a>, <a>instance_securityGroups</a> -
--   The security groups for the instance.
--   
--   <a>$sel:createdAt:Instance'</a>, <a>instance_createdAt</a> - When the
--   instance was created.
--   
--   <a>$sel:cpuOptions:Instance'</a>, <a>instance_cpuOptions</a> - The CPU
--   options for the instance.
--   
--   <a>$sel:rootDeviceName:Instance'</a>, <a>instance_rootDeviceName</a> -
--   The device name of the root device volume (for example,
--   <tt>/dev/sda1</tt>).
--   
--   <a>$sel:instanceType:Instance'</a>, <a>instance_instanceType</a> - The
--   instance type.
--   
--   <a>$sel:imageId:Instance'</a>, <a>instance_imageId</a> - The ID of the
--   AMI used to launch the instance.
--   
--   <a>$sel:privateIpAddress:Instance'</a>,
--   <a>instance_privateIpAddress</a> - The private IPv4 address assigned
--   to the instance.
--   
--   <a>$sel:updatedAt:Instance'</a>, <a>instance_updatedAt</a> - When the
--   instance was last updated.
--   
--   <a>$sel:blockDeviceMappings:Instance'</a>,
--   <a>instance_blockDeviceMappings</a> - Any block device mapping entries
--   for the instance.
--   
--   <a>$sel:publicIpAddress:Instance'</a>, <a>instance_publicIpAddress</a>
--   - The public IPv4 address assigned to the instance.
--   
--   <a>$sel:amiLaunchIndex:Instance'</a>, <a>instance_amiLaunchIndex</a> -
--   The Amazon Machine Image (AMI) launch index, which you can use to find
--   this instance in the launch group.
newInstance :: Instance

-- | The ID of the instance.
instance_instanceId :: Lens' Instance (Maybe Text)

-- | Undocumented member.
instance_state :: Lens' Instance (Maybe InstanceState)

-- | The security groups for the instance.
instance_securityGroups :: Lens' Instance (Maybe [SecurityGroupIdentifier])

-- | When the instance was created.
instance_createdAt :: Lens' Instance (Maybe UTCTime)

-- | The CPU options for the instance.
instance_cpuOptions :: Lens' Instance (Maybe CpuOptions)

-- | The device name of the root device volume (for example,
--   <tt>/dev/sda1</tt>).
instance_rootDeviceName :: Lens' Instance (Maybe Text)

-- | The instance type.
instance_instanceType :: Lens' Instance (Maybe Text)

-- | The ID of the AMI used to launch the instance.
instance_imageId :: Lens' Instance (Maybe Text)

-- | The private IPv4 address assigned to the instance.
instance_privateIpAddress :: Lens' Instance (Maybe Text)

-- | When the instance was last updated.
instance_updatedAt :: Lens' Instance (Maybe UTCTime)

-- | Any block device mapping entries for the instance.
instance_blockDeviceMappings :: Lens' Instance (Maybe [InstanceBlockDeviceMapping])

-- | The public IPv4 address assigned to the instance.
instance_publicIpAddress :: Lens' Instance (Maybe Text)

-- | The Amazon Machine Image (AMI) launch index, which you can use to find
--   this instance in the launch group.
instance_amiLaunchIndex :: Lens' Instance (Maybe Int)

-- | The description of a block device mapping.
--   
--   <i>See:</i> <a>newInstanceBlockDeviceMapping</a> smart constructor.
data InstanceBlockDeviceMapping
InstanceBlockDeviceMapping' :: Maybe EbsInstanceBlockDevice -> Maybe Text -> InstanceBlockDeviceMapping

-- | The parameters used to automatically set up Amazon Elastic Block Store
--   (Amazon EBS) volumes when the instance is launched.
[$sel:ebs:InstanceBlockDeviceMapping'] :: InstanceBlockDeviceMapping -> Maybe EbsInstanceBlockDevice

-- | The block device name.
[$sel:deviceName:InstanceBlockDeviceMapping'] :: InstanceBlockDeviceMapping -> Maybe Text

-- | Create a value of <a>InstanceBlockDeviceMapping</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ebs:InstanceBlockDeviceMapping'</a>,
--   <a>instanceBlockDeviceMapping_ebs</a> - The parameters used to
--   automatically set up Amazon Elastic Block Store (Amazon EBS) volumes
--   when the instance is launched.
--   
--   <a>$sel:deviceName:InstanceBlockDeviceMapping'</a>,
--   <a>instanceBlockDeviceMapping_deviceName</a> - The block device name.
newInstanceBlockDeviceMapping :: InstanceBlockDeviceMapping

-- | The parameters used to automatically set up Amazon Elastic Block Store
--   (Amazon EBS) volumes when the instance is launched.
instanceBlockDeviceMapping_ebs :: Lens' InstanceBlockDeviceMapping (Maybe EbsInstanceBlockDevice)

-- | The block device name.
instanceBlockDeviceMapping_deviceName :: Lens' InstanceBlockDeviceMapping (Maybe Text)

-- | The description of the current state of an instance.
--   
--   <i>See:</i> <a>newInstanceState</a> smart constructor.
data InstanceState
InstanceState' :: Maybe InstanceStateName -> Maybe Int -> InstanceState

-- | The current state of the instance.
[$sel:name:InstanceState'] :: InstanceState -> Maybe InstanceStateName

-- | The state of the instance as a 16-bit unsigned integer.
--   
--   The high byte is all of the bits between 2^8 and (2^16)-1, which
--   equals decimal values between 256 and 65,535. These numerical values
--   are used for internal purposes and should be ignored.
--   
--   The low byte is all of the bits between 2^0 and (2^8)-1, which equals
--   decimal values between 0 and 255.
--   
--   The valid values for the instance state code are all in the range of
--   the low byte. These values are:
--   
--   <ul>
--   <li><tt>0</tt> : <tt>pending</tt></li>
--   <li><tt>16</tt> : <tt>running</tt></li>
--   <li><tt>32</tt> : <tt>shutting-down</tt></li>
--   <li><tt>48</tt> : <tt>terminated</tt></li>
--   <li><tt>64</tt> : <tt>stopping</tt></li>
--   <li><tt>80</tt> : <tt>stopped</tt></li>
--   </ul>
--   
--   You can ignore the high byte value by zeroing out all of the bits
--   above 2^8 or 256 in decimal.
[$sel:code:InstanceState'] :: InstanceState -> Maybe Int

-- | Create a value of <a>InstanceState</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:InstanceState'</a>, <a>instanceState_name</a> - The
--   current state of the instance.
--   
--   <a>$sel:code:InstanceState'</a>, <a>instanceState_code</a> - The state
--   of the instance as a 16-bit unsigned integer.
--   
--   The high byte is all of the bits between 2^8 and (2^16)-1, which
--   equals decimal values between 256 and 65,535. These numerical values
--   are used for internal purposes and should be ignored.
--   
--   The low byte is all of the bits between 2^0 and (2^8)-1, which equals
--   decimal values between 0 and 255.
--   
--   The valid values for the instance state code are all in the range of
--   the low byte. These values are:
--   
--   <ul>
--   <li><tt>0</tt> : <tt>pending</tt></li>
--   <li><tt>16</tt> : <tt>running</tt></li>
--   <li><tt>32</tt> : <tt>shutting-down</tt></li>
--   <li><tt>48</tt> : <tt>terminated</tt></li>
--   <li><tt>64</tt> : <tt>stopping</tt></li>
--   <li><tt>80</tt> : <tt>stopped</tt></li>
--   </ul>
--   
--   You can ignore the high byte value by zeroing out all of the bits
--   above 2^8 or 256 in decimal.
newInstanceState :: InstanceState

-- | The current state of the instance.
instanceState_name :: Lens' InstanceState (Maybe InstanceStateName)

-- | The state of the instance as a 16-bit unsigned integer.
--   
--   The high byte is all of the bits between 2^8 and (2^16)-1, which
--   equals decimal values between 256 and 65,535. These numerical values
--   are used for internal purposes and should be ignored.
--   
--   The low byte is all of the bits between 2^0 and (2^8)-1, which equals
--   decimal values between 0 and 255.
--   
--   The valid values for the instance state code are all in the range of
--   the low byte. These values are:
--   
--   <ul>
--   <li><tt>0</tt> : <tt>pending</tt></li>
--   <li><tt>16</tt> : <tt>running</tt></li>
--   <li><tt>32</tt> : <tt>shutting-down</tt></li>
--   <li><tt>48</tt> : <tt>terminated</tt></li>
--   <li><tt>64</tt> : <tt>stopping</tt></li>
--   <li><tt>80</tt> : <tt>stopped</tt></li>
--   </ul>
--   
--   You can ignore the high byte value by zeroing out all of the bits
--   above 2^8 or 256 in decimal.
instanceState_code :: Lens' InstanceState (Maybe Int)

-- | The details about the instance.
--   
--   <i>See:</i> <a>newInstanceSummary</a> smart constructor.
data InstanceSummary
InstanceSummary' :: Maybe POSIX -> Maybe Instance -> InstanceSummary

-- | When the instance summary was last updated.
[$sel:lastUpdatedAt:InstanceSummary'] :: InstanceSummary -> Maybe POSIX

-- | A structure containing details about the instance.
[$sel:instance':InstanceSummary'] :: InstanceSummary -> Maybe Instance

-- | Create a value of <a>InstanceSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastUpdatedAt:InstanceSummary'</a>,
--   <a>instanceSummary_lastUpdatedAt</a> - When the instance summary was
--   last updated.
--   
--   <a>$sel:instance':InstanceSummary'</a>,
--   <a>instanceSummary_instance</a> - A structure containing details about
--   the instance.
newInstanceSummary :: InstanceSummary

-- | When the instance summary was last updated.
instanceSummary_lastUpdatedAt :: Lens' InstanceSummary (Maybe UTCTime)

-- | A structure containing details about the instance.
instanceSummary_instance :: Lens' InstanceSummary (Maybe Instance)

-- | The details about the physical network interface for the device.
--   
--   <i>See:</i> <a>newPhysicalNetworkInterface</a> smart constructor.
data PhysicalNetworkInterface
PhysicalNetworkInterface' :: Maybe Text -> Maybe Text -> Maybe IpAddressAssignment -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe PhysicalConnectorType -> PhysicalNetworkInterface

-- | The IP address of the device.
[$sel:ipAddress:PhysicalNetworkInterface'] :: PhysicalNetworkInterface -> Maybe Text

-- | The MAC address of the device.
[$sel:macAddress:PhysicalNetworkInterface'] :: PhysicalNetworkInterface -> Maybe Text

-- | A value that describes whether the IP address is dynamic or
--   persistent.
[$sel:ipAddressAssignment:PhysicalNetworkInterface'] :: PhysicalNetworkInterface -> Maybe IpAddressAssignment

-- | The default gateway of the device.
[$sel:defaultGateway:PhysicalNetworkInterface'] :: PhysicalNetworkInterface -> Maybe Text

-- | The physical network interface ID.
[$sel:physicalNetworkInterfaceId:PhysicalNetworkInterface'] :: PhysicalNetworkInterface -> Maybe Text

-- | The netmask used to divide the IP address into subnets.
[$sel:netmask:PhysicalNetworkInterface'] :: PhysicalNetworkInterface -> Maybe Text

-- | The physical connector type.
[$sel:physicalConnectorType:PhysicalNetworkInterface'] :: PhysicalNetworkInterface -> Maybe PhysicalConnectorType

-- | Create a value of <a>PhysicalNetworkInterface</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ipAddress:PhysicalNetworkInterface'</a>,
--   <a>physicalNetworkInterface_ipAddress</a> - The IP address of the
--   device.
--   
--   <a>$sel:macAddress:PhysicalNetworkInterface'</a>,
--   <a>physicalNetworkInterface_macAddress</a> - The MAC address of the
--   device.
--   
--   <a>$sel:ipAddressAssignment:PhysicalNetworkInterface'</a>,
--   <a>physicalNetworkInterface_ipAddressAssignment</a> - A value that
--   describes whether the IP address is dynamic or persistent.
--   
--   <a>$sel:defaultGateway:PhysicalNetworkInterface'</a>,
--   <a>physicalNetworkInterface_defaultGateway</a> - The default gateway
--   of the device.
--   
--   <a>$sel:physicalNetworkInterfaceId:PhysicalNetworkInterface'</a>,
--   <a>physicalNetworkInterface_physicalNetworkInterfaceId</a> - The
--   physical network interface ID.
--   
--   <a>$sel:netmask:PhysicalNetworkInterface'</a>,
--   <a>physicalNetworkInterface_netmask</a> - The netmask used to divide
--   the IP address into subnets.
--   
--   <a>$sel:physicalConnectorType:PhysicalNetworkInterface'</a>,
--   <a>physicalNetworkInterface_physicalConnectorType</a> - The physical
--   connector type.
newPhysicalNetworkInterface :: PhysicalNetworkInterface

-- | The IP address of the device.
physicalNetworkInterface_ipAddress :: Lens' PhysicalNetworkInterface (Maybe Text)

-- | The MAC address of the device.
physicalNetworkInterface_macAddress :: Lens' PhysicalNetworkInterface (Maybe Text)

-- | A value that describes whether the IP address is dynamic or
--   persistent.
physicalNetworkInterface_ipAddressAssignment :: Lens' PhysicalNetworkInterface (Maybe IpAddressAssignment)

-- | The default gateway of the device.
physicalNetworkInterface_defaultGateway :: Lens' PhysicalNetworkInterface (Maybe Text)

-- | The physical network interface ID.
physicalNetworkInterface_physicalNetworkInterfaceId :: Lens' PhysicalNetworkInterface (Maybe Text)

-- | The netmask used to divide the IP address into subnets.
physicalNetworkInterface_netmask :: Lens' PhysicalNetworkInterface (Maybe Text)

-- | The physical connector type.
physicalNetworkInterface_physicalConnectorType :: Lens' PhysicalNetworkInterface (Maybe PhysicalConnectorType)

-- | A structure used to reboot the device.
--   
--   <i>See:</i> <a>newReboot</a> smart constructor.
data Reboot
Reboot' :: Reboot

-- | Create a value of <a>Reboot</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newReboot :: Reboot

-- | A summary of a resource available on the device.
--   
--   <i>See:</i> <a>newResourceSummary</a> smart constructor.
data ResourceSummary
ResourceSummary' :: Maybe Text -> Maybe Text -> Text -> ResourceSummary

-- | The Amazon Resource Name (ARN) of the resource.
[$sel:arn:ResourceSummary'] :: ResourceSummary -> Maybe Text

-- | The ID of the resource.
[$sel:id:ResourceSummary'] :: ResourceSummary -> Maybe Text

-- | The resource type.
[$sel:resourceType:ResourceSummary'] :: ResourceSummary -> Text

-- | Create a value of <a>ResourceSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:ResourceSummary'</a>, <a>resourceSummary_arn</a> - The
--   Amazon Resource Name (ARN) of the resource.
--   
--   <a>$sel:id:ResourceSummary'</a>, <a>resourceSummary_id</a> - The ID of
--   the resource.
--   
--   <a>$sel:resourceType:ResourceSummary'</a>,
--   <a>resourceSummary_resourceType</a> - The resource type.
newResourceSummary :: Text -> ResourceSummary

-- | The Amazon Resource Name (ARN) of the resource.
resourceSummary_arn :: Lens' ResourceSummary (Maybe Text)

-- | The ID of the resource.
resourceSummary_id :: Lens' ResourceSummary (Maybe Text)

-- | The resource type.
resourceSummary_resourceType :: Lens' ResourceSummary Text

-- | Information about the device's security group.
--   
--   <i>See:</i> <a>newSecurityGroupIdentifier</a> smart constructor.
data SecurityGroupIdentifier
SecurityGroupIdentifier' :: Maybe Text -> Maybe Text -> SecurityGroupIdentifier

-- | The security group ID.
[$sel:groupId:SecurityGroupIdentifier'] :: SecurityGroupIdentifier -> Maybe Text

-- | The security group name.
[$sel:groupName:SecurityGroupIdentifier'] :: SecurityGroupIdentifier -> Maybe Text

-- | Create a value of <a>SecurityGroupIdentifier</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupId:SecurityGroupIdentifier'</a>,
--   <a>securityGroupIdentifier_groupId</a> - The security group ID.
--   
--   <a>$sel:groupName:SecurityGroupIdentifier'</a>,
--   <a>securityGroupIdentifier_groupName</a> - The security group name.
newSecurityGroupIdentifier :: SecurityGroupIdentifier

-- | The security group ID.
securityGroupIdentifier_groupId :: Lens' SecurityGroupIdentifier (Maybe Text)

-- | The security group name.
securityGroupIdentifier_groupName :: Lens' SecurityGroupIdentifier (Maybe Text)

-- | Information about the software on the device.
--   
--   <i>See:</i> <a>newSoftwareInformation</a> smart constructor.
data SoftwareInformation
SoftwareInformation' :: Maybe Text -> Maybe Text -> Maybe Text -> SoftwareInformation

-- | The version of the software currently installed on the device.
[$sel:installedVersion:SoftwareInformation'] :: SoftwareInformation -> Maybe Text

-- | The state of the software that is installed or that is being installed
--   on the device.
[$sel:installState:SoftwareInformation'] :: SoftwareInformation -> Maybe Text

-- | The version of the software being installed on the device.
[$sel:installingVersion:SoftwareInformation'] :: SoftwareInformation -> Maybe Text

-- | Create a value of <a>SoftwareInformation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:installedVersion:SoftwareInformation'</a>,
--   <a>softwareInformation_installedVersion</a> - The version of the
--   software currently installed on the device.
--   
--   <a>$sel:installState:SoftwareInformation'</a>,
--   <a>softwareInformation_installState</a> - The state of the software
--   that is installed or that is being installed on the device.
--   
--   <a>$sel:installingVersion:SoftwareInformation'</a>,
--   <a>softwareInformation_installingVersion</a> - The version of the
--   software being installed on the device.
newSoftwareInformation :: SoftwareInformation

-- | The version of the software currently installed on the device.
softwareInformation_installedVersion :: Lens' SoftwareInformation (Maybe Text)

-- | The state of the software that is installed or that is being installed
--   on the device.
softwareInformation_installState :: Lens' SoftwareInformation (Maybe Text)

-- | The version of the software being installed on the device.
softwareInformation_installingVersion :: Lens' SoftwareInformation (Maybe Text)

-- | Information about the task assigned to one or many devices.
--   
--   <i>See:</i> <a>newTaskSummary</a> smart constructor.
data TaskSummary
TaskSummary' :: Maybe TaskState -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> TaskSummary

-- | The state of the task assigned to one or many devices.
[$sel:state:TaskSummary'] :: TaskSummary -> Maybe TaskState

-- | The Amazon Resource Name (ARN) of the task.
[$sel:taskArn:TaskSummary'] :: TaskSummary -> Maybe Text

-- | Optional metadata that you assign to a resource. You can use tags to
--   categorize a resource in different ways, such as by purpose, owner, or
--   environment.
[$sel:tags:TaskSummary'] :: TaskSummary -> Maybe (HashMap Text Text)

-- | The task ID.
[$sel:taskId:TaskSummary'] :: TaskSummary -> Text

-- | Create a value of <a>TaskSummary</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:TaskSummary'</a>, <a>taskSummary_state</a> - The state
--   of the task assigned to one or many devices.
--   
--   <a>$sel:taskArn:TaskSummary'</a>, <a>taskSummary_taskArn</a> - The
--   Amazon Resource Name (ARN) of the task.
--   
--   <a>$sel:tags:TaskSummary'</a>, <a>taskSummary_tags</a> - Optional
--   metadata that you assign to a resource. You can use tags to categorize
--   a resource in different ways, such as by purpose, owner, or
--   environment.
--   
--   <a>$sel:taskId:TaskSummary'</a>, <a>taskSummary_taskId</a> - The task
--   ID.
newTaskSummary :: Text -> TaskSummary

-- | The state of the task assigned to one or many devices.
taskSummary_state :: Lens' TaskSummary (Maybe TaskState)

-- | The Amazon Resource Name (ARN) of the task.
taskSummary_taskArn :: Lens' TaskSummary (Maybe Text)

-- | Optional metadata that you assign to a resource. You can use tags to
--   categorize a resource in different ways, such as by purpose, owner, or
--   environment.
taskSummary_tags :: Lens' TaskSummary (Maybe (HashMap Text Text))

-- | The task ID.
taskSummary_taskId :: Lens' TaskSummary Text

-- | A structure used to unlock a device.
--   
--   <i>See:</i> <a>newUnlock</a> smart constructor.
data Unlock
Unlock' :: Unlock

-- | Create a value of <a>Unlock</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUnlock :: Unlock


-- | Adds or replaces tags on a device or task.
module Amazonka.SnowDeviceManagement.TagResource

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> HashMap Text Text -> TagResource

-- | The Amazon Resource Name (ARN) of the device or task.
[$sel:resourceArn:TagResource'] :: TagResource -> Text

-- | Optional metadata that you assign to a resource. You can use tags to
--   categorize a resource in different ways, such as by purpose, owner, or
--   environment.
[$sel:tags:TagResource'] :: TagResource -> HashMap Text Text

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The Amazon Resource Name (ARN) of the device or task.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - Optional
--   metadata that you assign to a resource. You can use tags to categorize
--   a resource in different ways, such as by purpose, owner, or
--   environment.
newTagResource :: Text -> TagResource

-- | The Amazon Resource Name (ARN) of the device or task.
tagResource_resourceArn :: Lens' TagResource Text

-- | Optional metadata that you assign to a resource. You can use tags to
--   categorize a resource in different ways, such as by purpose, owner, or
--   environment.
tagResource_tags :: Lens' TagResource (HashMap Text Text)

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newTagResourceResponse :: TagResourceResponse
instance GHC.Generics.Generic Amazonka.SnowDeviceManagement.TagResource.TagResource
instance GHC.Show.Show Amazonka.SnowDeviceManagement.TagResource.TagResource
instance GHC.Read.Read Amazonka.SnowDeviceManagement.TagResource.TagResource
instance GHC.Classes.Eq Amazonka.SnowDeviceManagement.TagResource.TagResource
instance GHC.Generics.Generic Amazonka.SnowDeviceManagement.TagResource.TagResourceResponse
instance GHC.Show.Show Amazonka.SnowDeviceManagement.TagResource.TagResourceResponse
instance GHC.Read.Read Amazonka.SnowDeviceManagement.TagResource.TagResourceResponse
instance GHC.Classes.Eq Amazonka.SnowDeviceManagement.TagResource.TagResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.SnowDeviceManagement.TagResource.TagResource
instance Control.DeepSeq.NFData Amazonka.SnowDeviceManagement.TagResource.TagResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.SnowDeviceManagement.TagResource.TagResource
instance Control.DeepSeq.NFData Amazonka.SnowDeviceManagement.TagResource.TagResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.SnowDeviceManagement.TagResource.TagResource
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.SnowDeviceManagement.TagResource.TagResource
instance Amazonka.Data.Path.ToPath Amazonka.SnowDeviceManagement.TagResource.TagResource
instance Amazonka.Data.Query.ToQuery Amazonka.SnowDeviceManagement.TagResource.TagResource


-- | Returns a list of tasks that can be filtered by state.
--   
--   This operation returns paginated results.
module Amazonka.SnowDeviceManagement.ListTasks

-- | <i>See:</i> <a>newListTasks</a> smart constructor.
data ListTasks
ListTasks' :: Maybe TaskState -> Maybe Text -> Maybe Natural -> ListTasks

-- | A structure used to filter the list of tasks.
[$sel:state:ListTasks'] :: ListTasks -> Maybe TaskState

-- | A pagination token to continue to the next page of tasks.
[$sel:nextToken:ListTasks'] :: ListTasks -> Maybe Text

-- | The maximum number of tasks per page.
[$sel:maxResults:ListTasks'] :: ListTasks -> Maybe Natural

-- | Create a value of <a>ListTasks</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:ListTasks'</a>, <a>listTasks_state</a> - A structure
--   used to filter the list of tasks.
--   
--   <a>$sel:nextToken:ListTasks'</a>, <a>listTasks_nextToken</a> - A
--   pagination token to continue to the next page of tasks.
--   
--   <a>$sel:maxResults:ListTasks'</a>, <a>listTasks_maxResults</a> - The
--   maximum number of tasks per page.
newListTasks :: ListTasks

-- | A structure used to filter the list of tasks.
listTasks_state :: Lens' ListTasks (Maybe TaskState)

-- | A pagination token to continue to the next page of tasks.
listTasks_nextToken :: Lens' ListTasks (Maybe Text)

-- | The maximum number of tasks per page.
listTasks_maxResults :: Lens' ListTasks (Maybe Natural)

-- | <i>See:</i> <a>newListTasksResponse</a> smart constructor.
data ListTasksResponse
ListTasksResponse' :: Maybe [TaskSummary] -> Maybe Text -> Int -> ListTasksResponse

-- | A list of task structures containing details about each task.
[$sel:tasks:ListTasksResponse'] :: ListTasksResponse -> Maybe [TaskSummary]

-- | A pagination token to continue to the next page of tasks.
[$sel:nextToken:ListTasksResponse'] :: ListTasksResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListTasksResponse'] :: ListTasksResponse -> Int

-- | Create a value of <a>ListTasksResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tasks:ListTasksResponse'</a>, <a>listTasksResponse_tasks</a> -
--   A list of task structures containing details about each task.
--   
--   <a>$sel:nextToken:ListTasks'</a>, <a>listTasksResponse_nextToken</a> -
--   A pagination token to continue to the next page of tasks.
--   
--   <a>$sel:httpStatus:ListTasksResponse'</a>,
--   <a>listTasksResponse_httpStatus</a> - The response's http status code.
newListTasksResponse :: Int -> ListTasksResponse

-- | A list of task structures containing details about each task.
listTasksResponse_tasks :: Lens' ListTasksResponse (Maybe [TaskSummary])

-- | A pagination token to continue to the next page of tasks.
listTasksResponse_nextToken :: Lens' ListTasksResponse (Maybe Text)

-- | The response's http status code.
listTasksResponse_httpStatus :: Lens' ListTasksResponse Int
instance GHC.Generics.Generic Amazonka.SnowDeviceManagement.ListTasks.ListTasks
instance GHC.Show.Show Amazonka.SnowDeviceManagement.ListTasks.ListTasks
instance GHC.Read.Read Amazonka.SnowDeviceManagement.ListTasks.ListTasks
instance GHC.Classes.Eq Amazonka.SnowDeviceManagement.ListTasks.ListTasks
instance GHC.Generics.Generic Amazonka.SnowDeviceManagement.ListTasks.ListTasksResponse
instance GHC.Show.Show Amazonka.SnowDeviceManagement.ListTasks.ListTasksResponse
instance GHC.Read.Read Amazonka.SnowDeviceManagement.ListTasks.ListTasksResponse
instance GHC.Classes.Eq Amazonka.SnowDeviceManagement.ListTasks.ListTasksResponse
instance Amazonka.Types.AWSRequest Amazonka.SnowDeviceManagement.ListTasks.ListTasks
instance Control.DeepSeq.NFData Amazonka.SnowDeviceManagement.ListTasks.ListTasksResponse
instance Amazonka.Pager.AWSPager Amazonka.SnowDeviceManagement.ListTasks.ListTasks
instance Data.Hashable.Class.Hashable Amazonka.SnowDeviceManagement.ListTasks.ListTasks
instance Control.DeepSeq.NFData Amazonka.SnowDeviceManagement.ListTasks.ListTasks
instance Amazonka.Data.Headers.ToHeaders Amazonka.SnowDeviceManagement.ListTasks.ListTasks
instance Amazonka.Data.Path.ToPath Amazonka.SnowDeviceManagement.ListTasks.ListTasks
instance Amazonka.Data.Query.ToQuery Amazonka.SnowDeviceManagement.ListTasks.ListTasks


-- | Returns a list of tags for a managed device or task.
module Amazonka.SnowDeviceManagement.ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | The Amazon Resource Name (ARN) of the device or task.
[$sel:resourceArn:ListTagsForResource'] :: ListTagsForResource -> Text

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The Amazon Resource Name
--   (ARN) of the device or task.
newListTagsForResource :: Text -> ListTagsForResource

-- | The Amazon Resource Name (ARN) of the device or task.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe (HashMap Text Text) -> Int -> ListTagsForResourceResponse

-- | The list of tags for the device or task.
[$sel:tags:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Int

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - The list of tags for the
--   device or task.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | The list of tags for the device or task.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int
instance GHC.Generics.Generic Amazonka.SnowDeviceManagement.ListTagsForResource.ListTagsForResource
instance GHC.Show.Show Amazonka.SnowDeviceManagement.ListTagsForResource.ListTagsForResource
instance GHC.Read.Read Amazonka.SnowDeviceManagement.ListTagsForResource.ListTagsForResource
instance GHC.Classes.Eq Amazonka.SnowDeviceManagement.ListTagsForResource.ListTagsForResource
instance GHC.Generics.Generic Amazonka.SnowDeviceManagement.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Show.Show Amazonka.SnowDeviceManagement.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Read.Read Amazonka.SnowDeviceManagement.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Classes.Eq Amazonka.SnowDeviceManagement.ListTagsForResource.ListTagsForResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.SnowDeviceManagement.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Amazonka.SnowDeviceManagement.ListTagsForResource.ListTagsForResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.SnowDeviceManagement.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Amazonka.SnowDeviceManagement.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.SnowDeviceManagement.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Path.ToPath Amazonka.SnowDeviceManagement.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Query.ToQuery Amazonka.SnowDeviceManagement.ListTagsForResource.ListTagsForResource


-- | Returns the status of tasks for one or more target devices.
--   
--   This operation returns paginated results.
module Amazonka.SnowDeviceManagement.ListExecutions

-- | <i>See:</i> <a>newListExecutions</a> smart constructor.
data ListExecutions
ListExecutions' :: Maybe ExecutionState -> Maybe Text -> Maybe Natural -> Text -> ListExecutions

-- | A structure used to filter the tasks by their current state.
[$sel:state:ListExecutions'] :: ListExecutions -> Maybe ExecutionState

-- | A pagination token to continue to the next page of tasks.
[$sel:nextToken:ListExecutions'] :: ListExecutions -> Maybe Text

-- | The maximum number of tasks to list per page.
[$sel:maxResults:ListExecutions'] :: ListExecutions -> Maybe Natural

-- | The ID of the task.
[$sel:taskId:ListExecutions'] :: ListExecutions -> Text

-- | Create a value of <a>ListExecutions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:ListExecutions'</a>, <a>listExecutions_state</a> - A
--   structure used to filter the tasks by their current state.
--   
--   <a>$sel:nextToken:ListExecutions'</a>, <a>listExecutions_nextToken</a>
--   - A pagination token to continue to the next page of tasks.
--   
--   <a>$sel:maxResults:ListExecutions'</a>,
--   <a>listExecutions_maxResults</a> - The maximum number of tasks to list
--   per page.
--   
--   <a>$sel:taskId:ListExecutions'</a>, <a>listExecutions_taskId</a> - The
--   ID of the task.
newListExecutions :: Text -> ListExecutions

-- | A structure used to filter the tasks by their current state.
listExecutions_state :: Lens' ListExecutions (Maybe ExecutionState)

-- | A pagination token to continue to the next page of tasks.
listExecutions_nextToken :: Lens' ListExecutions (Maybe Text)

-- | The maximum number of tasks to list per page.
listExecutions_maxResults :: Lens' ListExecutions (Maybe Natural)

-- | The ID of the task.
listExecutions_taskId :: Lens' ListExecutions Text

-- | <i>See:</i> <a>newListExecutionsResponse</a> smart constructor.
data ListExecutionsResponse
ListExecutionsResponse' :: Maybe [ExecutionSummary] -> Maybe Text -> Int -> ListExecutionsResponse

-- | A list of executions. Each execution contains the task ID, the device
--   that the task is executing on, the execution ID, and the status of the
--   execution.
[$sel:executions:ListExecutionsResponse'] :: ListExecutionsResponse -> Maybe [ExecutionSummary]

-- | A pagination token to continue to the next page of executions.
[$sel:nextToken:ListExecutionsResponse'] :: ListExecutionsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListExecutionsResponse'] :: ListExecutionsResponse -> Int

-- | Create a value of <a>ListExecutionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:executions:ListExecutionsResponse'</a>,
--   <a>listExecutionsResponse_executions</a> - A list of executions. Each
--   execution contains the task ID, the device that the task is executing
--   on, the execution ID, and the status of the execution.
--   
--   <a>$sel:nextToken:ListExecutions'</a>,
--   <a>listExecutionsResponse_nextToken</a> - A pagination token to
--   continue to the next page of executions.
--   
--   <a>$sel:httpStatus:ListExecutionsResponse'</a>,
--   <a>listExecutionsResponse_httpStatus</a> - The response's http status
--   code.
newListExecutionsResponse :: Int -> ListExecutionsResponse

-- | A list of executions. Each execution contains the task ID, the device
--   that the task is executing on, the execution ID, and the status of the
--   execution.
listExecutionsResponse_executions :: Lens' ListExecutionsResponse (Maybe [ExecutionSummary])

-- | A pagination token to continue to the next page of executions.
listExecutionsResponse_nextToken :: Lens' ListExecutionsResponse (Maybe Text)

-- | The response's http status code.
listExecutionsResponse_httpStatus :: Lens' ListExecutionsResponse Int
instance GHC.Generics.Generic Amazonka.SnowDeviceManagement.ListExecutions.ListExecutions
instance GHC.Show.Show Amazonka.SnowDeviceManagement.ListExecutions.ListExecutions
instance GHC.Read.Read Amazonka.SnowDeviceManagement.ListExecutions.ListExecutions
instance GHC.Classes.Eq Amazonka.SnowDeviceManagement.ListExecutions.ListExecutions
instance GHC.Generics.Generic Amazonka.SnowDeviceManagement.ListExecutions.ListExecutionsResponse
instance GHC.Show.Show Amazonka.SnowDeviceManagement.ListExecutions.ListExecutionsResponse
instance GHC.Read.Read Amazonka.SnowDeviceManagement.ListExecutions.ListExecutionsResponse
instance GHC.Classes.Eq Amazonka.SnowDeviceManagement.ListExecutions.ListExecutionsResponse
instance Amazonka.Types.AWSRequest Amazonka.SnowDeviceManagement.ListExecutions.ListExecutions
instance Control.DeepSeq.NFData Amazonka.SnowDeviceManagement.ListExecutions.ListExecutionsResponse
instance Amazonka.Pager.AWSPager Amazonka.SnowDeviceManagement.ListExecutions.ListExecutions
instance Data.Hashable.Class.Hashable Amazonka.SnowDeviceManagement.ListExecutions.ListExecutions
instance Control.DeepSeq.NFData Amazonka.SnowDeviceManagement.ListExecutions.ListExecutions
instance Amazonka.Data.Headers.ToHeaders Amazonka.SnowDeviceManagement.ListExecutions.ListExecutions
instance Amazonka.Data.Path.ToPath Amazonka.SnowDeviceManagement.ListExecutions.ListExecutions
instance Amazonka.Data.Query.ToQuery Amazonka.SnowDeviceManagement.ListExecutions.ListExecutions


-- | Returns a list of all devices on your Amazon Web Services account that
--   have Amazon Web Services Snow Device Management enabled in the Amazon
--   Web Services Region where the command is run.
--   
--   This operation returns paginated results.
module Amazonka.SnowDeviceManagement.ListDevices

-- | <i>See:</i> <a>newListDevices</a> smart constructor.
data ListDevices
ListDevices' :: Maybe Text -> Maybe Text -> Maybe Natural -> ListDevices

-- | The ID of the job used to order the device.
[$sel:jobId:ListDevices'] :: ListDevices -> Maybe Text

-- | A pagination token to continue to the next page of results.
[$sel:nextToken:ListDevices'] :: ListDevices -> Maybe Text

-- | The maximum number of devices to list per page.
[$sel:maxResults:ListDevices'] :: ListDevices -> Maybe Natural

-- | Create a value of <a>ListDevices</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:ListDevices'</a>, <a>listDevices_jobId</a> - The ID of
--   the job used to order the device.
--   
--   <a>$sel:nextToken:ListDevices'</a>, <a>listDevices_nextToken</a> - A
--   pagination token to continue to the next page of results.
--   
--   <a>$sel:maxResults:ListDevices'</a>, <a>listDevices_maxResults</a> -
--   The maximum number of devices to list per page.
newListDevices :: ListDevices

-- | The ID of the job used to order the device.
listDevices_jobId :: Lens' ListDevices (Maybe Text)

-- | A pagination token to continue to the next page of results.
listDevices_nextToken :: Lens' ListDevices (Maybe Text)

-- | The maximum number of devices to list per page.
listDevices_maxResults :: Lens' ListDevices (Maybe Natural)

-- | <i>See:</i> <a>newListDevicesResponse</a> smart constructor.
data ListDevicesResponse
ListDevicesResponse' :: Maybe Text -> Maybe [DeviceSummary] -> Int -> ListDevicesResponse

-- | A pagination token to continue to the next page of devices.
[$sel:nextToken:ListDevicesResponse'] :: ListDevicesResponse -> Maybe Text

-- | A list of device structures that contain information about the device.
[$sel:devices:ListDevicesResponse'] :: ListDevicesResponse -> Maybe [DeviceSummary]

-- | The response's http status code.
[$sel:httpStatus:ListDevicesResponse'] :: ListDevicesResponse -> Int

-- | Create a value of <a>ListDevicesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDevices'</a>,
--   <a>listDevicesResponse_nextToken</a> - A pagination token to continue
--   to the next page of devices.
--   
--   <a>$sel:devices:ListDevicesResponse'</a>,
--   <a>listDevicesResponse_devices</a> - A list of device structures that
--   contain information about the device.
--   
--   <a>$sel:httpStatus:ListDevicesResponse'</a>,
--   <a>listDevicesResponse_httpStatus</a> - The response's http status
--   code.
newListDevicesResponse :: Int -> ListDevicesResponse

-- | A pagination token to continue to the next page of devices.
listDevicesResponse_nextToken :: Lens' ListDevicesResponse (Maybe Text)

-- | A list of device structures that contain information about the device.
listDevicesResponse_devices :: Lens' ListDevicesResponse (Maybe [DeviceSummary])

-- | The response's http status code.
listDevicesResponse_httpStatus :: Lens' ListDevicesResponse Int
instance GHC.Generics.Generic Amazonka.SnowDeviceManagement.ListDevices.ListDevices
instance GHC.Show.Show Amazonka.SnowDeviceManagement.ListDevices.ListDevices
instance GHC.Read.Read Amazonka.SnowDeviceManagement.ListDevices.ListDevices
instance GHC.Classes.Eq Amazonka.SnowDeviceManagement.ListDevices.ListDevices
instance GHC.Generics.Generic Amazonka.SnowDeviceManagement.ListDevices.ListDevicesResponse
instance GHC.Show.Show Amazonka.SnowDeviceManagement.ListDevices.ListDevicesResponse
instance GHC.Read.Read Amazonka.SnowDeviceManagement.ListDevices.ListDevicesResponse
instance GHC.Classes.Eq Amazonka.SnowDeviceManagement.ListDevices.ListDevicesResponse
instance Amazonka.Types.AWSRequest Amazonka.SnowDeviceManagement.ListDevices.ListDevices
instance Control.DeepSeq.NFData Amazonka.SnowDeviceManagement.ListDevices.ListDevicesResponse
instance Amazonka.Pager.AWSPager Amazonka.SnowDeviceManagement.ListDevices.ListDevices
instance Data.Hashable.Class.Hashable Amazonka.SnowDeviceManagement.ListDevices.ListDevices
instance Control.DeepSeq.NFData Amazonka.SnowDeviceManagement.ListDevices.ListDevices
instance Amazonka.Data.Headers.ToHeaders Amazonka.SnowDeviceManagement.ListDevices.ListDevices
instance Amazonka.Data.Path.ToPath Amazonka.SnowDeviceManagement.ListDevices.ListDevices
instance Amazonka.Data.Query.ToQuery Amazonka.SnowDeviceManagement.ListDevices.ListDevices


-- | Returns a list of the Amazon Web Services resources available for a
--   device. Currently, Amazon EC2 instances are the only supported
--   resource type.
--   
--   This operation returns paginated results.
module Amazonka.SnowDeviceManagement.ListDeviceResources

-- | <i>See:</i> <a>newListDeviceResources</a> smart constructor.
data ListDeviceResources
ListDeviceResources' :: Maybe Text -> Maybe Text -> Maybe Natural -> Text -> ListDeviceResources

-- | A pagination token to continue to the next page of results.
[$sel:nextToken:ListDeviceResources'] :: ListDeviceResources -> Maybe Text

-- | A structure used to filter the results by type of resource.
[$sel:type':ListDeviceResources'] :: ListDeviceResources -> Maybe Text

-- | The maximum number of resources per page.
[$sel:maxResults:ListDeviceResources'] :: ListDeviceResources -> Maybe Natural

-- | The ID of the managed device that you are listing the resources of.
[$sel:managedDeviceId:ListDeviceResources'] :: ListDeviceResources -> Text

-- | Create a value of <a>ListDeviceResources</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDeviceResources'</a>,
--   <a>listDeviceResources_nextToken</a> - A pagination token to continue
--   to the next page of results.
--   
--   <a>$sel:type':ListDeviceResources'</a>,
--   <a>listDeviceResources_type</a> - A structure used to filter the
--   results by type of resource.
--   
--   <a>$sel:maxResults:ListDeviceResources'</a>,
--   <a>listDeviceResources_maxResults</a> - The maximum number of
--   resources per page.
--   
--   <a>$sel:managedDeviceId:ListDeviceResources'</a>,
--   <a>listDeviceResources_managedDeviceId</a> - The ID of the managed
--   device that you are listing the resources of.
newListDeviceResources :: Text -> ListDeviceResources

-- | A pagination token to continue to the next page of results.
listDeviceResources_nextToken :: Lens' ListDeviceResources (Maybe Text)

-- | A structure used to filter the results by type of resource.
listDeviceResources_type :: Lens' ListDeviceResources (Maybe Text)

-- | The maximum number of resources per page.
listDeviceResources_maxResults :: Lens' ListDeviceResources (Maybe Natural)

-- | The ID of the managed device that you are listing the resources of.
listDeviceResources_managedDeviceId :: Lens' ListDeviceResources Text

-- | <i>See:</i> <a>newListDeviceResourcesResponse</a> smart constructor.
data ListDeviceResourcesResponse
ListDeviceResourcesResponse' :: Maybe [ResourceSummary] -> Maybe Text -> Int -> ListDeviceResourcesResponse

-- | A structure defining the resource's type, Amazon Resource Name (ARN),
--   and ID.
[$sel:resources:ListDeviceResourcesResponse'] :: ListDeviceResourcesResponse -> Maybe [ResourceSummary]

-- | A pagination token to continue to the next page of results.
[$sel:nextToken:ListDeviceResourcesResponse'] :: ListDeviceResourcesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListDeviceResourcesResponse'] :: ListDeviceResourcesResponse -> Int

-- | Create a value of <a>ListDeviceResourcesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resources:ListDeviceResourcesResponse'</a>,
--   <a>listDeviceResourcesResponse_resources</a> - A structure defining
--   the resource's type, Amazon Resource Name (ARN), and ID.
--   
--   <a>$sel:nextToken:ListDeviceResources'</a>,
--   <a>listDeviceResourcesResponse_nextToken</a> - A pagination token to
--   continue to the next page of results.
--   
--   <a>$sel:httpStatus:ListDeviceResourcesResponse'</a>,
--   <a>listDeviceResourcesResponse_httpStatus</a> - The response's http
--   status code.
newListDeviceResourcesResponse :: Int -> ListDeviceResourcesResponse

-- | A structure defining the resource's type, Amazon Resource Name (ARN),
--   and ID.
listDeviceResourcesResponse_resources :: Lens' ListDeviceResourcesResponse (Maybe [ResourceSummary])

-- | A pagination token to continue to the next page of results.
listDeviceResourcesResponse_nextToken :: Lens' ListDeviceResourcesResponse (Maybe Text)

-- | The response's http status code.
listDeviceResourcesResponse_httpStatus :: Lens' ListDeviceResourcesResponse Int
instance GHC.Generics.Generic Amazonka.SnowDeviceManagement.ListDeviceResources.ListDeviceResources
instance GHC.Show.Show Amazonka.SnowDeviceManagement.ListDeviceResources.ListDeviceResources
instance GHC.Read.Read Amazonka.SnowDeviceManagement.ListDeviceResources.ListDeviceResources
instance GHC.Classes.Eq Amazonka.SnowDeviceManagement.ListDeviceResources.ListDeviceResources
instance GHC.Generics.Generic Amazonka.SnowDeviceManagement.ListDeviceResources.ListDeviceResourcesResponse
instance GHC.Show.Show Amazonka.SnowDeviceManagement.ListDeviceResources.ListDeviceResourcesResponse
instance GHC.Read.Read Amazonka.SnowDeviceManagement.ListDeviceResources.ListDeviceResourcesResponse
instance GHC.Classes.Eq Amazonka.SnowDeviceManagement.ListDeviceResources.ListDeviceResourcesResponse
instance Amazonka.Types.AWSRequest Amazonka.SnowDeviceManagement.ListDeviceResources.ListDeviceResources
instance Control.DeepSeq.NFData Amazonka.SnowDeviceManagement.ListDeviceResources.ListDeviceResourcesResponse
instance Amazonka.Pager.AWSPager Amazonka.SnowDeviceManagement.ListDeviceResources.ListDeviceResources
instance Data.Hashable.Class.Hashable Amazonka.SnowDeviceManagement.ListDeviceResources.ListDeviceResources
instance Control.DeepSeq.NFData Amazonka.SnowDeviceManagement.ListDeviceResources.ListDeviceResources
instance Amazonka.Data.Headers.ToHeaders Amazonka.SnowDeviceManagement.ListDeviceResources.ListDeviceResources
instance Amazonka.Data.Path.ToPath Amazonka.SnowDeviceManagement.ListDeviceResources.ListDeviceResources
instance Amazonka.Data.Query.ToQuery Amazonka.SnowDeviceManagement.ListDeviceResources.ListDeviceResources


-- | Checks the metadata for a given task on a device.
module Amazonka.SnowDeviceManagement.DescribeTask

-- | <i>See:</i> <a>newDescribeTask</a> smart constructor.
data DescribeTask
DescribeTask' :: Text -> DescribeTask

-- | The ID of the task to be described.
[$sel:taskId:DescribeTask'] :: DescribeTask -> Text

-- | Create a value of <a>DescribeTask</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:taskId:DescribeTask'</a>, <a>describeTask_taskId</a> - The ID
--   of the task to be described.
newDescribeTask :: Text -> DescribeTask

-- | The ID of the task to be described.
describeTask_taskId :: Lens' DescribeTask Text

-- | <i>See:</i> <a>newDescribeTaskResponse</a> smart constructor.
data DescribeTaskResponse
DescribeTaskResponse' :: Maybe TaskState -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe (NonEmpty Text) -> Maybe POSIX -> Maybe Text -> Maybe (HashMap Text Text) -> Int -> DescribeTaskResponse

-- | The current state of the task.
[$sel:state:DescribeTaskResponse'] :: DescribeTaskResponse -> Maybe TaskState

-- | When the state of the task was last updated.
[$sel:lastUpdatedAt:DescribeTaskResponse'] :: DescribeTaskResponse -> Maybe POSIX

-- | When the <tt>CreateTask</tt> operation was called.
[$sel:createdAt:DescribeTaskResponse'] :: DescribeTaskResponse -> Maybe POSIX

-- | The ID of the task.
[$sel:taskId:DescribeTaskResponse'] :: DescribeTaskResponse -> Maybe Text

-- | The Amazon Resource Name (ARN) of the task.
[$sel:taskArn:DescribeTaskResponse'] :: DescribeTaskResponse -> Maybe Text

-- | The managed devices that the task was sent to.
[$sel:targets:DescribeTaskResponse'] :: DescribeTaskResponse -> Maybe (NonEmpty Text)

-- | When the task was completed.
[$sel:completedAt:DescribeTaskResponse'] :: DescribeTaskResponse -> Maybe POSIX

-- | The description provided of the task and managed devices.
[$sel:description:DescribeTaskResponse'] :: DescribeTaskResponse -> Maybe Text

-- | Optional metadata that you assign to a resource. You can use tags to
--   categorize a resource in different ways, such as by purpose, owner, or
--   environment.
[$sel:tags:DescribeTaskResponse'] :: DescribeTaskResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:DescribeTaskResponse'] :: DescribeTaskResponse -> Int

-- | Create a value of <a>DescribeTaskResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:DescribeTaskResponse'</a>,
--   <a>describeTaskResponse_state</a> - The current state of the task.
--   
--   <a>$sel:lastUpdatedAt:DescribeTaskResponse'</a>,
--   <a>describeTaskResponse_lastUpdatedAt</a> - When the state of the task
--   was last updated.
--   
--   <a>$sel:createdAt:DescribeTaskResponse'</a>,
--   <a>describeTaskResponse_createdAt</a> - When the <tt>CreateTask</tt>
--   operation was called.
--   
--   <a>$sel:taskId:DescribeTask'</a>, <a>describeTaskResponse_taskId</a> -
--   The ID of the task.
--   
--   <a>$sel:taskArn:DescribeTaskResponse'</a>,
--   <a>describeTaskResponse_taskArn</a> - The Amazon Resource Name (ARN)
--   of the task.
--   
--   <a>$sel:targets:DescribeTaskResponse'</a>,
--   <a>describeTaskResponse_targets</a> - The managed devices that the
--   task was sent to.
--   
--   <a>$sel:completedAt:DescribeTaskResponse'</a>,
--   <a>describeTaskResponse_completedAt</a> - When the task was completed.
--   
--   <a>$sel:description:DescribeTaskResponse'</a>,
--   <a>describeTaskResponse_description</a> - The description provided of
--   the task and managed devices.
--   
--   <a>$sel:tags:DescribeTaskResponse'</a>,
--   <a>describeTaskResponse_tags</a> - Optional metadata that you assign
--   to a resource. You can use tags to categorize a resource in different
--   ways, such as by purpose, owner, or environment.
--   
--   <a>$sel:httpStatus:DescribeTaskResponse'</a>,
--   <a>describeTaskResponse_httpStatus</a> - The response's http status
--   code.
newDescribeTaskResponse :: Int -> DescribeTaskResponse

-- | The current state of the task.
describeTaskResponse_state :: Lens' DescribeTaskResponse (Maybe TaskState)

-- | When the state of the task was last updated.
describeTaskResponse_lastUpdatedAt :: Lens' DescribeTaskResponse (Maybe UTCTime)

-- | When the <tt>CreateTask</tt> operation was called.
describeTaskResponse_createdAt :: Lens' DescribeTaskResponse (Maybe UTCTime)

-- | The ID of the task.
describeTaskResponse_taskId :: Lens' DescribeTaskResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the task.
describeTaskResponse_taskArn :: Lens' DescribeTaskResponse (Maybe Text)

-- | The managed devices that the task was sent to.
describeTaskResponse_targets :: Lens' DescribeTaskResponse (Maybe (NonEmpty Text))

-- | When the task was completed.
describeTaskResponse_completedAt :: Lens' DescribeTaskResponse (Maybe UTCTime)

-- | The description provided of the task and managed devices.
describeTaskResponse_description :: Lens' DescribeTaskResponse (Maybe Text)

-- | Optional metadata that you assign to a resource. You can use tags to
--   categorize a resource in different ways, such as by purpose, owner, or
--   environment.
describeTaskResponse_tags :: Lens' DescribeTaskResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
describeTaskResponse_httpStatus :: Lens' DescribeTaskResponse Int
instance GHC.Generics.Generic Amazonka.SnowDeviceManagement.DescribeTask.DescribeTask
instance GHC.Show.Show Amazonka.SnowDeviceManagement.DescribeTask.DescribeTask
instance GHC.Read.Read Amazonka.SnowDeviceManagement.DescribeTask.DescribeTask
instance GHC.Classes.Eq Amazonka.SnowDeviceManagement.DescribeTask.DescribeTask
instance GHC.Generics.Generic Amazonka.SnowDeviceManagement.DescribeTask.DescribeTaskResponse
instance GHC.Show.Show Amazonka.SnowDeviceManagement.DescribeTask.DescribeTaskResponse
instance GHC.Read.Read Amazonka.SnowDeviceManagement.DescribeTask.DescribeTaskResponse
instance GHC.Classes.Eq Amazonka.SnowDeviceManagement.DescribeTask.DescribeTaskResponse
instance Amazonka.Types.AWSRequest Amazonka.SnowDeviceManagement.DescribeTask.DescribeTask
instance Control.DeepSeq.NFData Amazonka.SnowDeviceManagement.DescribeTask.DescribeTaskResponse
instance Data.Hashable.Class.Hashable Amazonka.SnowDeviceManagement.DescribeTask.DescribeTask
instance Control.DeepSeq.NFData Amazonka.SnowDeviceManagement.DescribeTask.DescribeTask
instance Amazonka.Data.Headers.ToHeaders Amazonka.SnowDeviceManagement.DescribeTask.DescribeTask
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.SnowDeviceManagement.DescribeTask.DescribeTask
instance Amazonka.Data.Path.ToPath Amazonka.SnowDeviceManagement.DescribeTask.DescribeTask
instance Amazonka.Data.Query.ToQuery Amazonka.SnowDeviceManagement.DescribeTask.DescribeTask


-- | Checks the status of a remote task running on one or more target
--   devices.
module Amazonka.SnowDeviceManagement.DescribeExecution

-- | <i>See:</i> <a>newDescribeExecution</a> smart constructor.
data DescribeExecution
DescribeExecution' :: Text -> Text -> DescribeExecution

-- | The ID of the managed device.
[$sel:managedDeviceId:DescribeExecution'] :: DescribeExecution -> Text

-- | The ID of the task that the action is describing.
[$sel:taskId:DescribeExecution'] :: DescribeExecution -> Text

-- | Create a value of <a>DescribeExecution</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:managedDeviceId:DescribeExecution'</a>,
--   <a>describeExecution_managedDeviceId</a> - The ID of the managed
--   device.
--   
--   <a>$sel:taskId:DescribeExecution'</a>, <a>describeExecution_taskId</a>
--   - The ID of the task that the action is describing.
newDescribeExecution :: Text -> Text -> DescribeExecution

-- | The ID of the managed device.
describeExecution_managedDeviceId :: Lens' DescribeExecution Text

-- | The ID of the task that the action is describing.
describeExecution_taskId :: Lens' DescribeExecution Text

-- | <i>See:</i> <a>newDescribeExecutionResponse</a> smart constructor.
data DescribeExecutionResponse
DescribeExecutionResponse' :: Maybe Text -> Maybe ExecutionState -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> Int -> DescribeExecutionResponse

-- | The ID of the execution.
[$sel:executionId:DescribeExecutionResponse'] :: DescribeExecutionResponse -> Maybe Text

-- | The current state of the execution.
[$sel:state:DescribeExecutionResponse'] :: DescribeExecutionResponse -> Maybe ExecutionState

-- | When the status of the execution was last updated.
[$sel:lastUpdatedAt:DescribeExecutionResponse'] :: DescribeExecutionResponse -> Maybe POSIX

-- | The ID of the task being executed on the device.
[$sel:taskId:DescribeExecutionResponse'] :: DescribeExecutionResponse -> Maybe Text

-- | When the execution began.
[$sel:startedAt:DescribeExecutionResponse'] :: DescribeExecutionResponse -> Maybe POSIX

-- | The ID of the managed device that the task is being executed on.
[$sel:managedDeviceId:DescribeExecutionResponse'] :: DescribeExecutionResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeExecutionResponse'] :: DescribeExecutionResponse -> Int

-- | Create a value of <a>DescribeExecutionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:executionId:DescribeExecutionResponse'</a>,
--   <a>describeExecutionResponse_executionId</a> - The ID of the
--   execution.
--   
--   <a>$sel:state:DescribeExecutionResponse'</a>,
--   <a>describeExecutionResponse_state</a> - The current state of the
--   execution.
--   
--   <a>$sel:lastUpdatedAt:DescribeExecutionResponse'</a>,
--   <a>describeExecutionResponse_lastUpdatedAt</a> - When the status of
--   the execution was last updated.
--   
--   <a>$sel:taskId:DescribeExecution'</a>,
--   <a>describeExecutionResponse_taskId</a> - The ID of the task being
--   executed on the device.
--   
--   <a>$sel:startedAt:DescribeExecutionResponse'</a>,
--   <a>describeExecutionResponse_startedAt</a> - When the execution began.
--   
--   <a>$sel:managedDeviceId:DescribeExecution'</a>,
--   <a>describeExecutionResponse_managedDeviceId</a> - The ID of the
--   managed device that the task is being executed on.
--   
--   <a>$sel:httpStatus:DescribeExecutionResponse'</a>,
--   <a>describeExecutionResponse_httpStatus</a> - The response's http
--   status code.
newDescribeExecutionResponse :: Int -> DescribeExecutionResponse

-- | The ID of the execution.
describeExecutionResponse_executionId :: Lens' DescribeExecutionResponse (Maybe Text)

-- | The current state of the execution.
describeExecutionResponse_state :: Lens' DescribeExecutionResponse (Maybe ExecutionState)

-- | When the status of the execution was last updated.
describeExecutionResponse_lastUpdatedAt :: Lens' DescribeExecutionResponse (Maybe UTCTime)

-- | The ID of the task being executed on the device.
describeExecutionResponse_taskId :: Lens' DescribeExecutionResponse (Maybe Text)

-- | When the execution began.
describeExecutionResponse_startedAt :: Lens' DescribeExecutionResponse (Maybe UTCTime)

-- | The ID of the managed device that the task is being executed on.
describeExecutionResponse_managedDeviceId :: Lens' DescribeExecutionResponse (Maybe Text)

-- | The response's http status code.
describeExecutionResponse_httpStatus :: Lens' DescribeExecutionResponse Int
instance GHC.Generics.Generic Amazonka.SnowDeviceManagement.DescribeExecution.DescribeExecution
instance GHC.Show.Show Amazonka.SnowDeviceManagement.DescribeExecution.DescribeExecution
instance GHC.Read.Read Amazonka.SnowDeviceManagement.DescribeExecution.DescribeExecution
instance GHC.Classes.Eq Amazonka.SnowDeviceManagement.DescribeExecution.DescribeExecution
instance GHC.Generics.Generic Amazonka.SnowDeviceManagement.DescribeExecution.DescribeExecutionResponse
instance GHC.Show.Show Amazonka.SnowDeviceManagement.DescribeExecution.DescribeExecutionResponse
instance GHC.Read.Read Amazonka.SnowDeviceManagement.DescribeExecution.DescribeExecutionResponse
instance GHC.Classes.Eq Amazonka.SnowDeviceManagement.DescribeExecution.DescribeExecutionResponse
instance Amazonka.Types.AWSRequest Amazonka.SnowDeviceManagement.DescribeExecution.DescribeExecution
instance Control.DeepSeq.NFData Amazonka.SnowDeviceManagement.DescribeExecution.DescribeExecutionResponse
instance Data.Hashable.Class.Hashable Amazonka.SnowDeviceManagement.DescribeExecution.DescribeExecution
instance Control.DeepSeq.NFData Amazonka.SnowDeviceManagement.DescribeExecution.DescribeExecution
instance Amazonka.Data.Headers.ToHeaders Amazonka.SnowDeviceManagement.DescribeExecution.DescribeExecution
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.SnowDeviceManagement.DescribeExecution.DescribeExecution
instance Amazonka.Data.Path.ToPath Amazonka.SnowDeviceManagement.DescribeExecution.DescribeExecution
instance Amazonka.Data.Query.ToQuery Amazonka.SnowDeviceManagement.DescribeExecution.DescribeExecution


-- | Checks the current state of the Amazon EC2 instances. The output is
--   similar to <tt>describeDevice</tt>, but the results are sourced from
--   the device cache in the Amazon Web Services Cloud and include a subset
--   of the available fields.
module Amazonka.SnowDeviceManagement.DescribeDeviceEc2Instances

-- | <i>See:</i> <a>newDescribeDeviceEc2Instances</a> smart constructor.
data DescribeDeviceEc2Instances
DescribeDeviceEc2Instances' :: [Text] -> Text -> DescribeDeviceEc2Instances

-- | A list of instance IDs associated with the managed device.
[$sel:instanceIds:DescribeDeviceEc2Instances'] :: DescribeDeviceEc2Instances -> [Text]

-- | The ID of the managed device.
[$sel:managedDeviceId:DescribeDeviceEc2Instances'] :: DescribeDeviceEc2Instances -> Text

-- | Create a value of <a>DescribeDeviceEc2Instances</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceIds:DescribeDeviceEc2Instances'</a>,
--   <a>describeDeviceEc2Instances_instanceIds</a> - A list of instance IDs
--   associated with the managed device.
--   
--   <a>$sel:managedDeviceId:DescribeDeviceEc2Instances'</a>,
--   <a>describeDeviceEc2Instances_managedDeviceId</a> - The ID of the
--   managed device.
newDescribeDeviceEc2Instances :: Text -> DescribeDeviceEc2Instances

-- | A list of instance IDs associated with the managed device.
describeDeviceEc2Instances_instanceIds :: Lens' DescribeDeviceEc2Instances [Text]

-- | The ID of the managed device.
describeDeviceEc2Instances_managedDeviceId :: Lens' DescribeDeviceEc2Instances Text

-- | <i>See:</i> <a>newDescribeDeviceEc2InstancesResponse</a> smart
--   constructor.
data DescribeDeviceEc2InstancesResponse
DescribeDeviceEc2InstancesResponse' :: Maybe [InstanceSummary] -> Int -> DescribeDeviceEc2InstancesResponse

-- | A list of structures containing information about each instance.
[$sel:instances:DescribeDeviceEc2InstancesResponse'] :: DescribeDeviceEc2InstancesResponse -> Maybe [InstanceSummary]

-- | The response's http status code.
[$sel:httpStatus:DescribeDeviceEc2InstancesResponse'] :: DescribeDeviceEc2InstancesResponse -> Int

-- | Create a value of <a>DescribeDeviceEc2InstancesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instances:DescribeDeviceEc2InstancesResponse'</a>,
--   <a>describeDeviceEc2InstancesResponse_instances</a> - A list of
--   structures containing information about each instance.
--   
--   <a>$sel:httpStatus:DescribeDeviceEc2InstancesResponse'</a>,
--   <a>describeDeviceEc2InstancesResponse_httpStatus</a> - The response's
--   http status code.
newDescribeDeviceEc2InstancesResponse :: Int -> DescribeDeviceEc2InstancesResponse

-- | A list of structures containing information about each instance.
describeDeviceEc2InstancesResponse_instances :: Lens' DescribeDeviceEc2InstancesResponse (Maybe [InstanceSummary])

-- | The response's http status code.
describeDeviceEc2InstancesResponse_httpStatus :: Lens' DescribeDeviceEc2InstancesResponse Int
instance GHC.Generics.Generic Amazonka.SnowDeviceManagement.DescribeDeviceEc2Instances.DescribeDeviceEc2Instances
instance GHC.Show.Show Amazonka.SnowDeviceManagement.DescribeDeviceEc2Instances.DescribeDeviceEc2Instances
instance GHC.Read.Read Amazonka.SnowDeviceManagement.DescribeDeviceEc2Instances.DescribeDeviceEc2Instances
instance GHC.Classes.Eq Amazonka.SnowDeviceManagement.DescribeDeviceEc2Instances.DescribeDeviceEc2Instances
instance GHC.Generics.Generic Amazonka.SnowDeviceManagement.DescribeDeviceEc2Instances.DescribeDeviceEc2InstancesResponse
instance GHC.Show.Show Amazonka.SnowDeviceManagement.DescribeDeviceEc2Instances.DescribeDeviceEc2InstancesResponse
instance GHC.Read.Read Amazonka.SnowDeviceManagement.DescribeDeviceEc2Instances.DescribeDeviceEc2InstancesResponse
instance GHC.Classes.Eq Amazonka.SnowDeviceManagement.DescribeDeviceEc2Instances.DescribeDeviceEc2InstancesResponse
instance Amazonka.Types.AWSRequest Amazonka.SnowDeviceManagement.DescribeDeviceEc2Instances.DescribeDeviceEc2Instances
instance Control.DeepSeq.NFData Amazonka.SnowDeviceManagement.DescribeDeviceEc2Instances.DescribeDeviceEc2InstancesResponse
instance Data.Hashable.Class.Hashable Amazonka.SnowDeviceManagement.DescribeDeviceEc2Instances.DescribeDeviceEc2Instances
instance Control.DeepSeq.NFData Amazonka.SnowDeviceManagement.DescribeDeviceEc2Instances.DescribeDeviceEc2Instances
instance Amazonka.Data.Headers.ToHeaders Amazonka.SnowDeviceManagement.DescribeDeviceEc2Instances.DescribeDeviceEc2Instances
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.SnowDeviceManagement.DescribeDeviceEc2Instances.DescribeDeviceEc2Instances
instance Amazonka.Data.Path.ToPath Amazonka.SnowDeviceManagement.DescribeDeviceEc2Instances.DescribeDeviceEc2Instances
instance Amazonka.Data.Query.ToQuery Amazonka.SnowDeviceManagement.DescribeDeviceEc2Instances.DescribeDeviceEc2Instances


-- | Checks device-specific information, such as the device type, software
--   version, IP addresses, and lock status.
module Amazonka.SnowDeviceManagement.DescribeDevice

-- | <i>See:</i> <a>newDescribeDevice</a> smart constructor.
data DescribeDevice
DescribeDevice' :: Text -> DescribeDevice

-- | The ID of the device that you are checking the information of.
[$sel:managedDeviceId:DescribeDevice'] :: DescribeDevice -> Text

-- | Create a value of <a>DescribeDevice</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:managedDeviceId:DescribeDevice'</a>,
--   <a>describeDevice_managedDeviceId</a> - The ID of the device that you
--   are checking the information of.
newDescribeDevice :: Text -> DescribeDevice

-- | The ID of the device that you are checking the information of.
describeDevice_managedDeviceId :: Lens' DescribeDevice Text

-- | <i>See:</i> <a>newDescribeDeviceResponse</a> smart constructor.
data DescribeDeviceResponse
DescribeDeviceResponse' :: Maybe UnlockState -> Maybe [Capacity] -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe SoftwareInformation -> Maybe [PhysicalNetworkInterface] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Int -> DescribeDeviceResponse

-- | The current state of the device.
[$sel:deviceState:DescribeDeviceResponse'] :: DescribeDeviceResponse -> Maybe UnlockState

-- | The hardware specifications of the device.
[$sel:deviceCapacities:DescribeDeviceResponse'] :: DescribeDeviceResponse -> Maybe [Capacity]

-- | When the device last pushed an update to the Amazon Web Services
--   Cloud. Indicates when the device cache was refreshed.
[$sel:lastUpdatedAt:DescribeDeviceResponse'] :: DescribeDeviceResponse -> Maybe POSIX

-- | The ID of the job used when ordering the device.
[$sel:associatedWithJob:DescribeDeviceResponse'] :: DescribeDeviceResponse -> Maybe Text

-- | When the device last contacted the Amazon Web Services Cloud.
--   Indicates that the device is online.
[$sel:lastReachedOutAt:DescribeDeviceResponse'] :: DescribeDeviceResponse -> Maybe POSIX

-- | The software installed on the device.
[$sel:software:DescribeDeviceResponse'] :: DescribeDeviceResponse -> Maybe SoftwareInformation

-- | The network interfaces available on the device.
[$sel:physicalNetworkInterfaces:DescribeDeviceResponse'] :: DescribeDeviceResponse -> Maybe [PhysicalNetworkInterface]

-- | The ID of the device that you checked the information for.
[$sel:managedDeviceId:DescribeDeviceResponse'] :: DescribeDeviceResponse -> Maybe Text

-- | The Amazon Resource Name (ARN) of the device.
[$sel:managedDeviceArn:DescribeDeviceResponse'] :: DescribeDeviceResponse -> Maybe Text

-- | The type of Amazon Web Services Snow Family device.
[$sel:deviceType:DescribeDeviceResponse'] :: DescribeDeviceResponse -> Maybe Text

-- | Optional metadata that you assign to a resource. You can use tags to
--   categorize a resource in different ways, such as by purpose, owner, or
--   environment.
[$sel:tags:DescribeDeviceResponse'] :: DescribeDeviceResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:DescribeDeviceResponse'] :: DescribeDeviceResponse -> Int

-- | Create a value of <a>DescribeDeviceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceState:DescribeDeviceResponse'</a>,
--   <a>describeDeviceResponse_deviceState</a> - The current state of the
--   device.
--   
--   <a>$sel:deviceCapacities:DescribeDeviceResponse'</a>,
--   <a>describeDeviceResponse_deviceCapacities</a> - The hardware
--   specifications of the device.
--   
--   <a>$sel:lastUpdatedAt:DescribeDeviceResponse'</a>,
--   <a>describeDeviceResponse_lastUpdatedAt</a> - When the device last
--   pushed an update to the Amazon Web Services Cloud. Indicates when the
--   device cache was refreshed.
--   
--   <a>$sel:associatedWithJob:DescribeDeviceResponse'</a>,
--   <a>describeDeviceResponse_associatedWithJob</a> - The ID of the job
--   used when ordering the device.
--   
--   <a>$sel:lastReachedOutAt:DescribeDeviceResponse'</a>,
--   <a>describeDeviceResponse_lastReachedOutAt</a> - When the device last
--   contacted the Amazon Web Services Cloud. Indicates that the device is
--   online.
--   
--   <a>$sel:software:DescribeDeviceResponse'</a>,
--   <a>describeDeviceResponse_software</a> - The software installed on the
--   device.
--   
--   <a>$sel:physicalNetworkInterfaces:DescribeDeviceResponse'</a>,
--   <a>describeDeviceResponse_physicalNetworkInterfaces</a> - The network
--   interfaces available on the device.
--   
--   <a>$sel:managedDeviceId:DescribeDevice'</a>,
--   <a>describeDeviceResponse_managedDeviceId</a> - The ID of the device
--   that you checked the information for.
--   
--   <a>$sel:managedDeviceArn:DescribeDeviceResponse'</a>,
--   <a>describeDeviceResponse_managedDeviceArn</a> - The Amazon Resource
--   Name (ARN) of the device.
--   
--   <a>$sel:deviceType:DescribeDeviceResponse'</a>,
--   <a>describeDeviceResponse_deviceType</a> - The type of Amazon Web
--   Services Snow Family device.
--   
--   <a>$sel:tags:DescribeDeviceResponse'</a>,
--   <a>describeDeviceResponse_tags</a> - Optional metadata that you assign
--   to a resource. You can use tags to categorize a resource in different
--   ways, such as by purpose, owner, or environment.
--   
--   <a>$sel:httpStatus:DescribeDeviceResponse'</a>,
--   <a>describeDeviceResponse_httpStatus</a> - The response's http status
--   code.
newDescribeDeviceResponse :: Int -> DescribeDeviceResponse

-- | The current state of the device.
describeDeviceResponse_deviceState :: Lens' DescribeDeviceResponse (Maybe UnlockState)

-- | The hardware specifications of the device.
describeDeviceResponse_deviceCapacities :: Lens' DescribeDeviceResponse (Maybe [Capacity])

-- | When the device last pushed an update to the Amazon Web Services
--   Cloud. Indicates when the device cache was refreshed.
describeDeviceResponse_lastUpdatedAt :: Lens' DescribeDeviceResponse (Maybe UTCTime)

-- | The ID of the job used when ordering the device.
describeDeviceResponse_associatedWithJob :: Lens' DescribeDeviceResponse (Maybe Text)

-- | When the device last contacted the Amazon Web Services Cloud.
--   Indicates that the device is online.
describeDeviceResponse_lastReachedOutAt :: Lens' DescribeDeviceResponse (Maybe UTCTime)

-- | The software installed on the device.
describeDeviceResponse_software :: Lens' DescribeDeviceResponse (Maybe SoftwareInformation)

-- | The network interfaces available on the device.
describeDeviceResponse_physicalNetworkInterfaces :: Lens' DescribeDeviceResponse (Maybe [PhysicalNetworkInterface])

-- | The ID of the device that you checked the information for.
describeDeviceResponse_managedDeviceId :: Lens' DescribeDeviceResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the device.
describeDeviceResponse_managedDeviceArn :: Lens' DescribeDeviceResponse (Maybe Text)

-- | The type of Amazon Web Services Snow Family device.
describeDeviceResponse_deviceType :: Lens' DescribeDeviceResponse (Maybe Text)

-- | Optional metadata that you assign to a resource. You can use tags to
--   categorize a resource in different ways, such as by purpose, owner, or
--   environment.
describeDeviceResponse_tags :: Lens' DescribeDeviceResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
describeDeviceResponse_httpStatus :: Lens' DescribeDeviceResponse Int
instance GHC.Generics.Generic Amazonka.SnowDeviceManagement.DescribeDevice.DescribeDevice
instance GHC.Show.Show Amazonka.SnowDeviceManagement.DescribeDevice.DescribeDevice
instance GHC.Read.Read Amazonka.SnowDeviceManagement.DescribeDevice.DescribeDevice
instance GHC.Classes.Eq Amazonka.SnowDeviceManagement.DescribeDevice.DescribeDevice
instance GHC.Generics.Generic Amazonka.SnowDeviceManagement.DescribeDevice.DescribeDeviceResponse
instance GHC.Show.Show Amazonka.SnowDeviceManagement.DescribeDevice.DescribeDeviceResponse
instance GHC.Read.Read Amazonka.SnowDeviceManagement.DescribeDevice.DescribeDeviceResponse
instance GHC.Classes.Eq Amazonka.SnowDeviceManagement.DescribeDevice.DescribeDeviceResponse
instance Amazonka.Types.AWSRequest Amazonka.SnowDeviceManagement.DescribeDevice.DescribeDevice
instance Control.DeepSeq.NFData Amazonka.SnowDeviceManagement.DescribeDevice.DescribeDeviceResponse
instance Data.Hashable.Class.Hashable Amazonka.SnowDeviceManagement.DescribeDevice.DescribeDevice
instance Control.DeepSeq.NFData Amazonka.SnowDeviceManagement.DescribeDevice.DescribeDevice
instance Amazonka.Data.Headers.ToHeaders Amazonka.SnowDeviceManagement.DescribeDevice.DescribeDevice
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.SnowDeviceManagement.DescribeDevice.DescribeDevice
instance Amazonka.Data.Path.ToPath Amazonka.SnowDeviceManagement.DescribeDevice.DescribeDevice
instance Amazonka.Data.Query.ToQuery Amazonka.SnowDeviceManagement.DescribeDevice.DescribeDevice


-- | Instructs one or more devices to start a task, such as unlocking or
--   rebooting.
module Amazonka.SnowDeviceManagement.CreateTask

-- | <i>See:</i> <a>newCreateTask</a> smart constructor.
data CreateTask
CreateTask' :: Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Command -> NonEmpty Text -> CreateTask

-- | A token ensuring that the action is called only once with the
--   specified details.
[$sel:clientToken:CreateTask'] :: CreateTask -> Maybe Text

-- | A description of the task and its targets.
[$sel:description:CreateTask'] :: CreateTask -> Maybe Text

-- | Optional metadata that you assign to a resource. You can use tags to
--   categorize a resource in different ways, such as by purpose, owner, or
--   environment.
[$sel:tags:CreateTask'] :: CreateTask -> Maybe (HashMap Text Text)

-- | The task to be performed. Only one task is executed on a device at a
--   time.
[$sel:command:CreateTask'] :: CreateTask -> Command

-- | A list of managed device IDs.
[$sel:targets:CreateTask'] :: CreateTask -> NonEmpty Text

-- | Create a value of <a>CreateTask</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:CreateTask'</a>, <a>createTask_clientToken</a> - A
--   token ensuring that the action is called only once with the specified
--   details.
--   
--   <a>$sel:description:CreateTask'</a>, <a>createTask_description</a> - A
--   description of the task and its targets.
--   
--   <a>$sel:tags:CreateTask'</a>, <a>createTask_tags</a> - Optional
--   metadata that you assign to a resource. You can use tags to categorize
--   a resource in different ways, such as by purpose, owner, or
--   environment.
--   
--   <a>$sel:command:CreateTask'</a>, <a>createTask_command</a> - The task
--   to be performed. Only one task is executed on a device at a time.
--   
--   <a>$sel:targets:CreateTask'</a>, <a>createTask_targets</a> - A list of
--   managed device IDs.
newCreateTask :: Command -> NonEmpty Text -> CreateTask

-- | A token ensuring that the action is called only once with the
--   specified details.
createTask_clientToken :: Lens' CreateTask (Maybe Text)

-- | A description of the task and its targets.
createTask_description :: Lens' CreateTask (Maybe Text)

-- | Optional metadata that you assign to a resource. You can use tags to
--   categorize a resource in different ways, such as by purpose, owner, or
--   environment.
createTask_tags :: Lens' CreateTask (Maybe (HashMap Text Text))

-- | The task to be performed. Only one task is executed on a device at a
--   time.
createTask_command :: Lens' CreateTask Command

-- | A list of managed device IDs.
createTask_targets :: Lens' CreateTask (NonEmpty Text)

-- | <i>See:</i> <a>newCreateTaskResponse</a> smart constructor.
data CreateTaskResponse
CreateTaskResponse' :: Maybe Text -> Maybe Text -> Int -> CreateTaskResponse

-- | The ID of the task that you created.
[$sel:taskId:CreateTaskResponse'] :: CreateTaskResponse -> Maybe Text

-- | The Amazon Resource Name (ARN) of the task that you created.
[$sel:taskArn:CreateTaskResponse'] :: CreateTaskResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateTaskResponse'] :: CreateTaskResponse -> Int

-- | Create a value of <a>CreateTaskResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:taskId:CreateTaskResponse'</a>,
--   <a>createTaskResponse_taskId</a> - The ID of the task that you
--   created.
--   
--   <a>$sel:taskArn:CreateTaskResponse'</a>,
--   <a>createTaskResponse_taskArn</a> - The Amazon Resource Name (ARN) of
--   the task that you created.
--   
--   <a>$sel:httpStatus:CreateTaskResponse'</a>,
--   <a>createTaskResponse_httpStatus</a> - The response's http status
--   code.
newCreateTaskResponse :: Int -> CreateTaskResponse

-- | The ID of the task that you created.
createTaskResponse_taskId :: Lens' CreateTaskResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the task that you created.
createTaskResponse_taskArn :: Lens' CreateTaskResponse (Maybe Text)

-- | The response's http status code.
createTaskResponse_httpStatus :: Lens' CreateTaskResponse Int
instance GHC.Generics.Generic Amazonka.SnowDeviceManagement.CreateTask.CreateTask
instance GHC.Show.Show Amazonka.SnowDeviceManagement.CreateTask.CreateTask
instance GHC.Read.Read Amazonka.SnowDeviceManagement.CreateTask.CreateTask
instance GHC.Classes.Eq Amazonka.SnowDeviceManagement.CreateTask.CreateTask
instance GHC.Generics.Generic Amazonka.SnowDeviceManagement.CreateTask.CreateTaskResponse
instance GHC.Show.Show Amazonka.SnowDeviceManagement.CreateTask.CreateTaskResponse
instance GHC.Read.Read Amazonka.SnowDeviceManagement.CreateTask.CreateTaskResponse
instance GHC.Classes.Eq Amazonka.SnowDeviceManagement.CreateTask.CreateTaskResponse
instance Amazonka.Types.AWSRequest Amazonka.SnowDeviceManagement.CreateTask.CreateTask
instance Control.DeepSeq.NFData Amazonka.SnowDeviceManagement.CreateTask.CreateTaskResponse
instance Data.Hashable.Class.Hashable Amazonka.SnowDeviceManagement.CreateTask.CreateTask
instance Control.DeepSeq.NFData Amazonka.SnowDeviceManagement.CreateTask.CreateTask
instance Amazonka.Data.Headers.ToHeaders Amazonka.SnowDeviceManagement.CreateTask.CreateTask
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.SnowDeviceManagement.CreateTask.CreateTask
instance Amazonka.Data.Path.ToPath Amazonka.SnowDeviceManagement.CreateTask.CreateTask
instance Amazonka.Data.Query.ToQuery Amazonka.SnowDeviceManagement.CreateTask.CreateTask


-- | Sends a cancel request for a specified task. You can cancel a task
--   only if it's still in a <tt>QUEUED</tt> state. Tasks that are already
--   running can't be cancelled.
--   
--   A task might still run if it's processed from the queue before the
--   <tt>CancelTask</tt> operation changes the task's state.
module Amazonka.SnowDeviceManagement.CancelTask

-- | <i>See:</i> <a>newCancelTask</a> smart constructor.
data CancelTask
CancelTask' :: Text -> CancelTask

-- | The ID of the task that you are attempting to cancel. You can retrieve
--   a task ID by using the <tt>ListTasks</tt> operation.
[$sel:taskId:CancelTask'] :: CancelTask -> Text

-- | Create a value of <a>CancelTask</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:taskId:CancelTask'</a>, <a>cancelTask_taskId</a> - The ID of
--   the task that you are attempting to cancel. You can retrieve a task ID
--   by using the <tt>ListTasks</tt> operation.
newCancelTask :: Text -> CancelTask

-- | The ID of the task that you are attempting to cancel. You can retrieve
--   a task ID by using the <tt>ListTasks</tt> operation.
cancelTask_taskId :: Lens' CancelTask Text

-- | <i>See:</i> <a>newCancelTaskResponse</a> smart constructor.
data CancelTaskResponse
CancelTaskResponse' :: Maybe Text -> Int -> CancelTaskResponse

-- | The ID of the task that you are attempting to cancel.
[$sel:taskId:CancelTaskResponse'] :: CancelTaskResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CancelTaskResponse'] :: CancelTaskResponse -> Int

-- | Create a value of <a>CancelTaskResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:taskId:CancelTask'</a>, <a>cancelTaskResponse_taskId</a> - The
--   ID of the task that you are attempting to cancel.
--   
--   <a>$sel:httpStatus:CancelTaskResponse'</a>,
--   <a>cancelTaskResponse_httpStatus</a> - The response's http status
--   code.
newCancelTaskResponse :: Int -> CancelTaskResponse

-- | The ID of the task that you are attempting to cancel.
cancelTaskResponse_taskId :: Lens' CancelTaskResponse (Maybe Text)

-- | The response's http status code.
cancelTaskResponse_httpStatus :: Lens' CancelTaskResponse Int
instance GHC.Generics.Generic Amazonka.SnowDeviceManagement.CancelTask.CancelTask
instance GHC.Show.Show Amazonka.SnowDeviceManagement.CancelTask.CancelTask
instance GHC.Read.Read Amazonka.SnowDeviceManagement.CancelTask.CancelTask
instance GHC.Classes.Eq Amazonka.SnowDeviceManagement.CancelTask.CancelTask
instance GHC.Generics.Generic Amazonka.SnowDeviceManagement.CancelTask.CancelTaskResponse
instance GHC.Show.Show Amazonka.SnowDeviceManagement.CancelTask.CancelTaskResponse
instance GHC.Read.Read Amazonka.SnowDeviceManagement.CancelTask.CancelTaskResponse
instance GHC.Classes.Eq Amazonka.SnowDeviceManagement.CancelTask.CancelTaskResponse
instance Amazonka.Types.AWSRequest Amazonka.SnowDeviceManagement.CancelTask.CancelTask
instance Control.DeepSeq.NFData Amazonka.SnowDeviceManagement.CancelTask.CancelTaskResponse
instance Data.Hashable.Class.Hashable Amazonka.SnowDeviceManagement.CancelTask.CancelTask
instance Control.DeepSeq.NFData Amazonka.SnowDeviceManagement.CancelTask.CancelTask
instance Amazonka.Data.Headers.ToHeaders Amazonka.SnowDeviceManagement.CancelTask.CancelTask
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.SnowDeviceManagement.CancelTask.CancelTask
instance Amazonka.Data.Path.ToPath Amazonka.SnowDeviceManagement.CancelTask.CancelTask
instance Amazonka.Data.Query.ToQuery Amazonka.SnowDeviceManagement.CancelTask.CancelTask


-- | Removes a tag from a device or task.
module Amazonka.SnowDeviceManagement.UntagResource

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | The Amazon Resource Name (ARN) of the device or task.
[$sel:resourceArn:UntagResource'] :: UntagResource -> Text

-- | Optional metadata that you assign to a resource. You can use tags to
--   categorize a resource in different ways, such as by purpose, owner, or
--   environment.
[$sel:tagKeys:UntagResource'] :: UntagResource -> [Text]

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The Amazon Resource Name (ARN) of
--   the device or task.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> -
--   Optional metadata that you assign to a resource. You can use tags to
--   categorize a resource in different ways, such as by purpose, owner, or
--   environment.
newUntagResource :: Text -> UntagResource

-- | The Amazon Resource Name (ARN) of the device or task.
untagResource_resourceArn :: Lens' UntagResource Text

-- | Optional metadata that you assign to a resource. You can use tags to
--   categorize a resource in different ways, such as by purpose, owner, or
--   environment.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUntagResourceResponse :: UntagResourceResponse
instance GHC.Generics.Generic Amazonka.SnowDeviceManagement.UntagResource.UntagResource
instance GHC.Show.Show Amazonka.SnowDeviceManagement.UntagResource.UntagResource
instance GHC.Read.Read Amazonka.SnowDeviceManagement.UntagResource.UntagResource
instance GHC.Classes.Eq Amazonka.SnowDeviceManagement.UntagResource.UntagResource
instance GHC.Generics.Generic Amazonka.SnowDeviceManagement.UntagResource.UntagResourceResponse
instance GHC.Show.Show Amazonka.SnowDeviceManagement.UntagResource.UntagResourceResponse
instance GHC.Read.Read Amazonka.SnowDeviceManagement.UntagResource.UntagResourceResponse
instance GHC.Classes.Eq Amazonka.SnowDeviceManagement.UntagResource.UntagResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.SnowDeviceManagement.UntagResource.UntagResource
instance Control.DeepSeq.NFData Amazonka.SnowDeviceManagement.UntagResource.UntagResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.SnowDeviceManagement.UntagResource.UntagResource
instance Control.DeepSeq.NFData Amazonka.SnowDeviceManagement.UntagResource.UntagResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.SnowDeviceManagement.UntagResource.UntagResource
instance Amazonka.Data.Path.ToPath Amazonka.SnowDeviceManagement.UntagResource.UntagResource
instance Amazonka.Data.Query.ToQuery Amazonka.SnowDeviceManagement.UntagResource.UntagResource


module Amazonka.SnowDeviceManagement.Lens

-- | The Amazon Resource Name (ARN) of the device or task.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | The list of tags for the device or task.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int

-- | The ID of the task to be described.
describeTask_taskId :: Lens' DescribeTask Text

-- | The current state of the task.
describeTaskResponse_state :: Lens' DescribeTaskResponse (Maybe TaskState)

-- | When the state of the task was last updated.
describeTaskResponse_lastUpdatedAt :: Lens' DescribeTaskResponse (Maybe UTCTime)

-- | When the <tt>CreateTask</tt> operation was called.
describeTaskResponse_createdAt :: Lens' DescribeTaskResponse (Maybe UTCTime)

-- | The ID of the task.
describeTaskResponse_taskId :: Lens' DescribeTaskResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the task.
describeTaskResponse_taskArn :: Lens' DescribeTaskResponse (Maybe Text)

-- | The managed devices that the task was sent to.
describeTaskResponse_targets :: Lens' DescribeTaskResponse (Maybe (NonEmpty Text))

-- | When the task was completed.
describeTaskResponse_completedAt :: Lens' DescribeTaskResponse (Maybe UTCTime)

-- | The description provided of the task and managed devices.
describeTaskResponse_description :: Lens' DescribeTaskResponse (Maybe Text)

-- | Optional metadata that you assign to a resource. You can use tags to
--   categorize a resource in different ways, such as by purpose, owner, or
--   environment.
describeTaskResponse_tags :: Lens' DescribeTaskResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
describeTaskResponse_httpStatus :: Lens' DescribeTaskResponse Int

-- | A pagination token to continue to the next page of results.
listDeviceResources_nextToken :: Lens' ListDeviceResources (Maybe Text)

-- | A structure used to filter the results by type of resource.
listDeviceResources_type :: Lens' ListDeviceResources (Maybe Text)

-- | The maximum number of resources per page.
listDeviceResources_maxResults :: Lens' ListDeviceResources (Maybe Natural)

-- | The ID of the managed device that you are listing the resources of.
listDeviceResources_managedDeviceId :: Lens' ListDeviceResources Text

-- | A structure defining the resource's type, Amazon Resource Name (ARN),
--   and ID.
listDeviceResourcesResponse_resources :: Lens' ListDeviceResourcesResponse (Maybe [ResourceSummary])

-- | A pagination token to continue to the next page of results.
listDeviceResourcesResponse_nextToken :: Lens' ListDeviceResourcesResponse (Maybe Text)

-- | The response's http status code.
listDeviceResourcesResponse_httpStatus :: Lens' ListDeviceResourcesResponse Int

-- | A structure used to filter the tasks by their current state.
listExecutions_state :: Lens' ListExecutions (Maybe ExecutionState)

-- | A pagination token to continue to the next page of tasks.
listExecutions_nextToken :: Lens' ListExecutions (Maybe Text)

-- | The maximum number of tasks to list per page.
listExecutions_maxResults :: Lens' ListExecutions (Maybe Natural)

-- | The ID of the task.
listExecutions_taskId :: Lens' ListExecutions Text

-- | A list of executions. Each execution contains the task ID, the device
--   that the task is executing on, the execution ID, and the status of the
--   execution.
listExecutionsResponse_executions :: Lens' ListExecutionsResponse (Maybe [ExecutionSummary])

-- | A pagination token to continue to the next page of executions.
listExecutionsResponse_nextToken :: Lens' ListExecutionsResponse (Maybe Text)

-- | The response's http status code.
listExecutionsResponse_httpStatus :: Lens' ListExecutionsResponse Int

-- | A list of instance IDs associated with the managed device.
describeDeviceEc2Instances_instanceIds :: Lens' DescribeDeviceEc2Instances [Text]

-- | The ID of the managed device.
describeDeviceEc2Instances_managedDeviceId :: Lens' DescribeDeviceEc2Instances Text

-- | A list of structures containing information about each instance.
describeDeviceEc2InstancesResponse_instances :: Lens' DescribeDeviceEc2InstancesResponse (Maybe [InstanceSummary])

-- | The response's http status code.
describeDeviceEc2InstancesResponse_httpStatus :: Lens' DescribeDeviceEc2InstancesResponse Int

-- | A token ensuring that the action is called only once with the
--   specified details.
createTask_clientToken :: Lens' CreateTask (Maybe Text)

-- | A description of the task and its targets.
createTask_description :: Lens' CreateTask (Maybe Text)

-- | Optional metadata that you assign to a resource. You can use tags to
--   categorize a resource in different ways, such as by purpose, owner, or
--   environment.
createTask_tags :: Lens' CreateTask (Maybe (HashMap Text Text))

-- | The task to be performed. Only one task is executed on a device at a
--   time.
createTask_command :: Lens' CreateTask Command

-- | A list of managed device IDs.
createTask_targets :: Lens' CreateTask (NonEmpty Text)

-- | The ID of the task that you created.
createTaskResponse_taskId :: Lens' CreateTaskResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the task that you created.
createTaskResponse_taskArn :: Lens' CreateTaskResponse (Maybe Text)

-- | The response's http status code.
createTaskResponse_httpStatus :: Lens' CreateTaskResponse Int

-- | A structure used to filter the list of tasks.
listTasks_state :: Lens' ListTasks (Maybe TaskState)

-- | A pagination token to continue to the next page of tasks.
listTasks_nextToken :: Lens' ListTasks (Maybe Text)

-- | The maximum number of tasks per page.
listTasks_maxResults :: Lens' ListTasks (Maybe Natural)

-- | A list of task structures containing details about each task.
listTasksResponse_tasks :: Lens' ListTasksResponse (Maybe [TaskSummary])

-- | A pagination token to continue to the next page of tasks.
listTasksResponse_nextToken :: Lens' ListTasksResponse (Maybe Text)

-- | The response's http status code.
listTasksResponse_httpStatus :: Lens' ListTasksResponse Int

-- | The ID of the managed device.
describeExecution_managedDeviceId :: Lens' DescribeExecution Text

-- | The ID of the task that the action is describing.
describeExecution_taskId :: Lens' DescribeExecution Text

-- | The ID of the execution.
describeExecutionResponse_executionId :: Lens' DescribeExecutionResponse (Maybe Text)

-- | The current state of the execution.
describeExecutionResponse_state :: Lens' DescribeExecutionResponse (Maybe ExecutionState)

-- | When the status of the execution was last updated.
describeExecutionResponse_lastUpdatedAt :: Lens' DescribeExecutionResponse (Maybe UTCTime)

-- | The ID of the task being executed on the device.
describeExecutionResponse_taskId :: Lens' DescribeExecutionResponse (Maybe Text)

-- | When the execution began.
describeExecutionResponse_startedAt :: Lens' DescribeExecutionResponse (Maybe UTCTime)

-- | The ID of the managed device that the task is being executed on.
describeExecutionResponse_managedDeviceId :: Lens' DescribeExecutionResponse (Maybe Text)

-- | The response's http status code.
describeExecutionResponse_httpStatus :: Lens' DescribeExecutionResponse Int

-- | The ID of the device that you are checking the information of.
describeDevice_managedDeviceId :: Lens' DescribeDevice Text

-- | The current state of the device.
describeDeviceResponse_deviceState :: Lens' DescribeDeviceResponse (Maybe UnlockState)

-- | The hardware specifications of the device.
describeDeviceResponse_deviceCapacities :: Lens' DescribeDeviceResponse (Maybe [Capacity])

-- | When the device last pushed an update to the Amazon Web Services
--   Cloud. Indicates when the device cache was refreshed.
describeDeviceResponse_lastUpdatedAt :: Lens' DescribeDeviceResponse (Maybe UTCTime)

-- | The ID of the job used when ordering the device.
describeDeviceResponse_associatedWithJob :: Lens' DescribeDeviceResponse (Maybe Text)

-- | When the device last contacted the Amazon Web Services Cloud.
--   Indicates that the device is online.
describeDeviceResponse_lastReachedOutAt :: Lens' DescribeDeviceResponse (Maybe UTCTime)

-- | The software installed on the device.
describeDeviceResponse_software :: Lens' DescribeDeviceResponse (Maybe SoftwareInformation)

-- | The network interfaces available on the device.
describeDeviceResponse_physicalNetworkInterfaces :: Lens' DescribeDeviceResponse (Maybe [PhysicalNetworkInterface])

-- | The ID of the device that you checked the information for.
describeDeviceResponse_managedDeviceId :: Lens' DescribeDeviceResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the device.
describeDeviceResponse_managedDeviceArn :: Lens' DescribeDeviceResponse (Maybe Text)

-- | The type of Amazon Web Services Snow Family device.
describeDeviceResponse_deviceType :: Lens' DescribeDeviceResponse (Maybe Text)

-- | Optional metadata that you assign to a resource. You can use tags to
--   categorize a resource in different ways, such as by purpose, owner, or
--   environment.
describeDeviceResponse_tags :: Lens' DescribeDeviceResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
describeDeviceResponse_httpStatus :: Lens' DescribeDeviceResponse Int

-- | The Amazon Resource Name (ARN) of the device or task.
tagResource_resourceArn :: Lens' TagResource Text

-- | Optional metadata that you assign to a resource. You can use tags to
--   categorize a resource in different ways, such as by purpose, owner, or
--   environment.
tagResource_tags :: Lens' TagResource (HashMap Text Text)

-- | The ID of the task that you are attempting to cancel. You can retrieve
--   a task ID by using the <tt>ListTasks</tt> operation.
cancelTask_taskId :: Lens' CancelTask Text

-- | The ID of the task that you are attempting to cancel.
cancelTaskResponse_taskId :: Lens' CancelTaskResponse (Maybe Text)

-- | The response's http status code.
cancelTaskResponse_httpStatus :: Lens' CancelTaskResponse Int

-- | The Amazon Resource Name (ARN) of the device or task.
untagResource_resourceArn :: Lens' UntagResource Text

-- | Optional metadata that you assign to a resource. You can use tags to
--   categorize a resource in different ways, such as by purpose, owner, or
--   environment.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | The ID of the job used to order the device.
listDevices_jobId :: Lens' ListDevices (Maybe Text)

-- | A pagination token to continue to the next page of results.
listDevices_nextToken :: Lens' ListDevices (Maybe Text)

-- | The maximum number of devices to list per page.
listDevices_maxResults :: Lens' ListDevices (Maybe Natural)

-- | A pagination token to continue to the next page of devices.
listDevicesResponse_nextToken :: Lens' ListDevicesResponse (Maybe Text)

-- | A list of device structures that contain information about the device.
listDevicesResponse_devices :: Lens' ListDevicesResponse (Maybe [DeviceSummary])

-- | The response's http status code.
listDevicesResponse_httpStatus :: Lens' ListDevicesResponse Int

-- | The amount of capacity used on the device.
capacity_used :: Lens' Capacity (Maybe Integer)

-- | The name of the type of capacity, such as memory.
capacity_name :: Lens' Capacity (Maybe Text)

-- | The total capacity on the device.
capacity_total :: Lens' Capacity (Maybe Integer)

-- | The unit of measure for the type of capacity.
capacity_unit :: Lens' Capacity (Maybe Text)

-- | The amount of capacity available for use on the device.
capacity_available :: Lens' Capacity (Maybe Integer)

-- | Unlocks the device.
command_unlock :: Lens' Command (Maybe Unlock)

-- | Reboots the device.
command_reboot :: Lens' Command (Maybe Reboot)

-- | The number of cores that the CPU can use.
cpuOptions_coreCount :: Lens' CpuOptions (Maybe Int)

-- | The number of threads per core in the CPU.
cpuOptions_threadsPerCore :: Lens' CpuOptions (Maybe Int)

-- | The ID of the job used to order the device.
deviceSummary_associatedWithJob :: Lens' DeviceSummary (Maybe Text)

-- | The ID of the device.
deviceSummary_managedDeviceId :: Lens' DeviceSummary (Maybe Text)

-- | The Amazon Resource Name (ARN) of the device.
deviceSummary_managedDeviceArn :: Lens' DeviceSummary (Maybe Text)

-- | Optional metadata that you assign to a resource. You can use tags to
--   categorize a resource in different ways, such as by purpose, owner, or
--   environment.
deviceSummary_tags :: Lens' DeviceSummary (Maybe (HashMap Text Text))

-- | A value that indicates whether the volume is deleted on instance
--   termination.
ebsInstanceBlockDevice_deleteOnTermination :: Lens' EbsInstanceBlockDevice (Maybe Bool)

-- | The attachment state.
ebsInstanceBlockDevice_status :: Lens' EbsInstanceBlockDevice (Maybe AttachmentStatus)

-- | The ID of the Amazon EBS volume.
ebsInstanceBlockDevice_volumeId :: Lens' EbsInstanceBlockDevice (Maybe Text)

-- | When the attachment was initiated.
ebsInstanceBlockDevice_attachTime :: Lens' EbsInstanceBlockDevice (Maybe UTCTime)

-- | The ID of the execution.
executionSummary_executionId :: Lens' ExecutionSummary (Maybe Text)

-- | The state of the execution.
executionSummary_state :: Lens' ExecutionSummary (Maybe ExecutionState)

-- | The ID of the task.
executionSummary_taskId :: Lens' ExecutionSummary (Maybe Text)

-- | The ID of the managed device that the task is being executed on.
executionSummary_managedDeviceId :: Lens' ExecutionSummary (Maybe Text)

-- | The ID of the instance.
instance_instanceId :: Lens' Instance (Maybe Text)

-- | Undocumented member.
instance_state :: Lens' Instance (Maybe InstanceState)

-- | The security groups for the instance.
instance_securityGroups :: Lens' Instance (Maybe [SecurityGroupIdentifier])

-- | When the instance was created.
instance_createdAt :: Lens' Instance (Maybe UTCTime)

-- | The CPU options for the instance.
instance_cpuOptions :: Lens' Instance (Maybe CpuOptions)

-- | The device name of the root device volume (for example,
--   <tt>/dev/sda1</tt>).
instance_rootDeviceName :: Lens' Instance (Maybe Text)

-- | The instance type.
instance_instanceType :: Lens' Instance (Maybe Text)

-- | The ID of the AMI used to launch the instance.
instance_imageId :: Lens' Instance (Maybe Text)

-- | The private IPv4 address assigned to the instance.
instance_privateIpAddress :: Lens' Instance (Maybe Text)

-- | When the instance was last updated.
instance_updatedAt :: Lens' Instance (Maybe UTCTime)

-- | Any block device mapping entries for the instance.
instance_blockDeviceMappings :: Lens' Instance (Maybe [InstanceBlockDeviceMapping])

-- | The public IPv4 address assigned to the instance.
instance_publicIpAddress :: Lens' Instance (Maybe Text)

-- | The Amazon Machine Image (AMI) launch index, which you can use to find
--   this instance in the launch group.
instance_amiLaunchIndex :: Lens' Instance (Maybe Int)

-- | The parameters used to automatically set up Amazon Elastic Block Store
--   (Amazon EBS) volumes when the instance is launched.
instanceBlockDeviceMapping_ebs :: Lens' InstanceBlockDeviceMapping (Maybe EbsInstanceBlockDevice)

-- | The block device name.
instanceBlockDeviceMapping_deviceName :: Lens' InstanceBlockDeviceMapping (Maybe Text)

-- | The current state of the instance.
instanceState_name :: Lens' InstanceState (Maybe InstanceStateName)

-- | The state of the instance as a 16-bit unsigned integer.
--   
--   The high byte is all of the bits between 2^8 and (2^16)-1, which
--   equals decimal values between 256 and 65,535. These numerical values
--   are used for internal purposes and should be ignored.
--   
--   The low byte is all of the bits between 2^0 and (2^8)-1, which equals
--   decimal values between 0 and 255.
--   
--   The valid values for the instance state code are all in the range of
--   the low byte. These values are:
--   
--   <ul>
--   <li><tt>0</tt> : <tt>pending</tt></li>
--   <li><tt>16</tt> : <tt>running</tt></li>
--   <li><tt>32</tt> : <tt>shutting-down</tt></li>
--   <li><tt>48</tt> : <tt>terminated</tt></li>
--   <li><tt>64</tt> : <tt>stopping</tt></li>
--   <li><tt>80</tt> : <tt>stopped</tt></li>
--   </ul>
--   
--   You can ignore the high byte value by zeroing out all of the bits
--   above 2^8 or 256 in decimal.
instanceState_code :: Lens' InstanceState (Maybe Int)

-- | When the instance summary was last updated.
instanceSummary_lastUpdatedAt :: Lens' InstanceSummary (Maybe UTCTime)

-- | A structure containing details about the instance.
instanceSummary_instance :: Lens' InstanceSummary (Maybe Instance)

-- | The IP address of the device.
physicalNetworkInterface_ipAddress :: Lens' PhysicalNetworkInterface (Maybe Text)

-- | The MAC address of the device.
physicalNetworkInterface_macAddress :: Lens' PhysicalNetworkInterface (Maybe Text)

-- | A value that describes whether the IP address is dynamic or
--   persistent.
physicalNetworkInterface_ipAddressAssignment :: Lens' PhysicalNetworkInterface (Maybe IpAddressAssignment)

-- | The default gateway of the device.
physicalNetworkInterface_defaultGateway :: Lens' PhysicalNetworkInterface (Maybe Text)

-- | The physical network interface ID.
physicalNetworkInterface_physicalNetworkInterfaceId :: Lens' PhysicalNetworkInterface (Maybe Text)

-- | The netmask used to divide the IP address into subnets.
physicalNetworkInterface_netmask :: Lens' PhysicalNetworkInterface (Maybe Text)

-- | The physical connector type.
physicalNetworkInterface_physicalConnectorType :: Lens' PhysicalNetworkInterface (Maybe PhysicalConnectorType)

-- | The Amazon Resource Name (ARN) of the resource.
resourceSummary_arn :: Lens' ResourceSummary (Maybe Text)

-- | The ID of the resource.
resourceSummary_id :: Lens' ResourceSummary (Maybe Text)

-- | The resource type.
resourceSummary_resourceType :: Lens' ResourceSummary Text

-- | The security group ID.
securityGroupIdentifier_groupId :: Lens' SecurityGroupIdentifier (Maybe Text)

-- | The security group name.
securityGroupIdentifier_groupName :: Lens' SecurityGroupIdentifier (Maybe Text)

-- | The version of the software currently installed on the device.
softwareInformation_installedVersion :: Lens' SoftwareInformation (Maybe Text)

-- | The state of the software that is installed or that is being installed
--   on the device.
softwareInformation_installState :: Lens' SoftwareInformation (Maybe Text)

-- | The version of the software being installed on the device.
softwareInformation_installingVersion :: Lens' SoftwareInformation (Maybe Text)

-- | The state of the task assigned to one or many devices.
taskSummary_state :: Lens' TaskSummary (Maybe TaskState)

-- | The Amazon Resource Name (ARN) of the task.
taskSummary_taskArn :: Lens' TaskSummary (Maybe Text)

-- | Optional metadata that you assign to a resource. You can use tags to
--   categorize a resource in different ways, such as by purpose, owner, or
--   environment.
taskSummary_tags :: Lens' TaskSummary (Maybe (HashMap Text Text))

-- | The task ID.
taskSummary_taskId :: Lens' TaskSummary Text


module Amazonka.SnowDeviceManagement.Waiters


-- | Derived from API version <tt>2021-08-04</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   Amazon Web Services Snow Device Management documentation.
module Amazonka.SnowDeviceManagement

-- | API version <tt>2021-08-04</tt> of the Amazon Snow Device Management
--   SDK configuration.
defaultService :: Service

-- | The input fails to satisfy the constraints specified by an Amazon Web
--   Services service.
_ValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You don't have sufficient access to perform this action.
_AccessDeniedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request would cause a service quota to be exceeded.
_ServiceQuotaExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request was denied due to request throttling.
_ThrottlingException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An unexpected error occurred while processing the request.
_InternalServerException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request references a resource that doesn't exist.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The Amazon Resource Name
--   (ARN) of the device or task.
newListTagsForResource :: Text -> ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe (HashMap Text Text) -> Int -> ListTagsForResourceResponse

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - The list of tags for the
--   device or task.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | <i>See:</i> <a>newDescribeTask</a> smart constructor.
data DescribeTask
DescribeTask' :: Text -> DescribeTask

-- | Create a value of <a>DescribeTask</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:taskId:DescribeTask'</a>, <a>describeTask_taskId</a> - The ID
--   of the task to be described.
newDescribeTask :: Text -> DescribeTask

-- | <i>See:</i> <a>newDescribeTaskResponse</a> smart constructor.
data DescribeTaskResponse
DescribeTaskResponse' :: Maybe TaskState -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe (NonEmpty Text) -> Maybe POSIX -> Maybe Text -> Maybe (HashMap Text Text) -> Int -> DescribeTaskResponse

-- | Create a value of <a>DescribeTaskResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:DescribeTaskResponse'</a>,
--   <a>describeTaskResponse_state</a> - The current state of the task.
--   
--   <a>$sel:lastUpdatedAt:DescribeTaskResponse'</a>,
--   <a>describeTaskResponse_lastUpdatedAt</a> - When the state of the task
--   was last updated.
--   
--   <a>$sel:createdAt:DescribeTaskResponse'</a>,
--   <a>describeTaskResponse_createdAt</a> - When the <tt>CreateTask</tt>
--   operation was called.
--   
--   <a>$sel:taskId:DescribeTask'</a>, <a>describeTaskResponse_taskId</a> -
--   The ID of the task.
--   
--   <a>$sel:taskArn:DescribeTaskResponse'</a>,
--   <a>describeTaskResponse_taskArn</a> - The Amazon Resource Name (ARN)
--   of the task.
--   
--   <a>$sel:targets:DescribeTaskResponse'</a>,
--   <a>describeTaskResponse_targets</a> - The managed devices that the
--   task was sent to.
--   
--   <a>$sel:completedAt:DescribeTaskResponse'</a>,
--   <a>describeTaskResponse_completedAt</a> - When the task was completed.
--   
--   <a>$sel:description:DescribeTaskResponse'</a>,
--   <a>describeTaskResponse_description</a> - The description provided of
--   the task and managed devices.
--   
--   <a>$sel:tags:DescribeTaskResponse'</a>,
--   <a>describeTaskResponse_tags</a> - Optional metadata that you assign
--   to a resource. You can use tags to categorize a resource in different
--   ways, such as by purpose, owner, or environment.
--   
--   <a>$sel:httpStatus:DescribeTaskResponse'</a>,
--   <a>describeTaskResponse_httpStatus</a> - The response's http status
--   code.
newDescribeTaskResponse :: Int -> DescribeTaskResponse

-- | <i>See:</i> <a>newListDeviceResources</a> smart constructor.
data ListDeviceResources
ListDeviceResources' :: Maybe Text -> Maybe Text -> Maybe Natural -> Text -> ListDeviceResources

-- | Create a value of <a>ListDeviceResources</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDeviceResources'</a>,
--   <a>listDeviceResources_nextToken</a> - A pagination token to continue
--   to the next page of results.
--   
--   <a>$sel:type':ListDeviceResources'</a>,
--   <a>listDeviceResources_type</a> - A structure used to filter the
--   results by type of resource.
--   
--   <a>$sel:maxResults:ListDeviceResources'</a>,
--   <a>listDeviceResources_maxResults</a> - The maximum number of
--   resources per page.
--   
--   <a>$sel:managedDeviceId:ListDeviceResources'</a>,
--   <a>listDeviceResources_managedDeviceId</a> - The ID of the managed
--   device that you are listing the resources of.
newListDeviceResources :: Text -> ListDeviceResources

-- | <i>See:</i> <a>newListDeviceResourcesResponse</a> smart constructor.
data ListDeviceResourcesResponse
ListDeviceResourcesResponse' :: Maybe [ResourceSummary] -> Maybe Text -> Int -> ListDeviceResourcesResponse

-- | Create a value of <a>ListDeviceResourcesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resources:ListDeviceResourcesResponse'</a>,
--   <a>listDeviceResourcesResponse_resources</a> - A structure defining
--   the resource's type, Amazon Resource Name (ARN), and ID.
--   
--   <a>$sel:nextToken:ListDeviceResources'</a>,
--   <a>listDeviceResourcesResponse_nextToken</a> - A pagination token to
--   continue to the next page of results.
--   
--   <a>$sel:httpStatus:ListDeviceResourcesResponse'</a>,
--   <a>listDeviceResourcesResponse_httpStatus</a> - The response's http
--   status code.
newListDeviceResourcesResponse :: Int -> ListDeviceResourcesResponse

-- | <i>See:</i> <a>newListExecutions</a> smart constructor.
data ListExecutions
ListExecutions' :: Maybe ExecutionState -> Maybe Text -> Maybe Natural -> Text -> ListExecutions

-- | Create a value of <a>ListExecutions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:ListExecutions'</a>, <a>listExecutions_state</a> - A
--   structure used to filter the tasks by their current state.
--   
--   <a>$sel:nextToken:ListExecutions'</a>, <a>listExecutions_nextToken</a>
--   - A pagination token to continue to the next page of tasks.
--   
--   <a>$sel:maxResults:ListExecutions'</a>,
--   <a>listExecutions_maxResults</a> - The maximum number of tasks to list
--   per page.
--   
--   <a>$sel:taskId:ListExecutions'</a>, <a>listExecutions_taskId</a> - The
--   ID of the task.
newListExecutions :: Text -> ListExecutions

-- | <i>See:</i> <a>newListExecutionsResponse</a> smart constructor.
data ListExecutionsResponse
ListExecutionsResponse' :: Maybe [ExecutionSummary] -> Maybe Text -> Int -> ListExecutionsResponse

-- | Create a value of <a>ListExecutionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:executions:ListExecutionsResponse'</a>,
--   <a>listExecutionsResponse_executions</a> - A list of executions. Each
--   execution contains the task ID, the device that the task is executing
--   on, the execution ID, and the status of the execution.
--   
--   <a>$sel:nextToken:ListExecutions'</a>,
--   <a>listExecutionsResponse_nextToken</a> - A pagination token to
--   continue to the next page of executions.
--   
--   <a>$sel:httpStatus:ListExecutionsResponse'</a>,
--   <a>listExecutionsResponse_httpStatus</a> - The response's http status
--   code.
newListExecutionsResponse :: Int -> ListExecutionsResponse

-- | <i>See:</i> <a>newDescribeDeviceEc2Instances</a> smart constructor.
data DescribeDeviceEc2Instances
DescribeDeviceEc2Instances' :: [Text] -> Text -> DescribeDeviceEc2Instances

-- | Create a value of <a>DescribeDeviceEc2Instances</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceIds:DescribeDeviceEc2Instances'</a>,
--   <a>describeDeviceEc2Instances_instanceIds</a> - A list of instance IDs
--   associated with the managed device.
--   
--   <a>$sel:managedDeviceId:DescribeDeviceEc2Instances'</a>,
--   <a>describeDeviceEc2Instances_managedDeviceId</a> - The ID of the
--   managed device.
newDescribeDeviceEc2Instances :: Text -> DescribeDeviceEc2Instances

-- | <i>See:</i> <a>newDescribeDeviceEc2InstancesResponse</a> smart
--   constructor.
data DescribeDeviceEc2InstancesResponse
DescribeDeviceEc2InstancesResponse' :: Maybe [InstanceSummary] -> Int -> DescribeDeviceEc2InstancesResponse

-- | Create a value of <a>DescribeDeviceEc2InstancesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instances:DescribeDeviceEc2InstancesResponse'</a>,
--   <a>describeDeviceEc2InstancesResponse_instances</a> - A list of
--   structures containing information about each instance.
--   
--   <a>$sel:httpStatus:DescribeDeviceEc2InstancesResponse'</a>,
--   <a>describeDeviceEc2InstancesResponse_httpStatus</a> - The response's
--   http status code.
newDescribeDeviceEc2InstancesResponse :: Int -> DescribeDeviceEc2InstancesResponse

-- | <i>See:</i> <a>newCreateTask</a> smart constructor.
data CreateTask
CreateTask' :: Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Command -> NonEmpty Text -> CreateTask

-- | Create a value of <a>CreateTask</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:CreateTask'</a>, <a>createTask_clientToken</a> - A
--   token ensuring that the action is called only once with the specified
--   details.
--   
--   <a>$sel:description:CreateTask'</a>, <a>createTask_description</a> - A
--   description of the task and its targets.
--   
--   <a>$sel:tags:CreateTask'</a>, <a>createTask_tags</a> - Optional
--   metadata that you assign to a resource. You can use tags to categorize
--   a resource in different ways, such as by purpose, owner, or
--   environment.
--   
--   <a>$sel:command:CreateTask'</a>, <a>createTask_command</a> - The task
--   to be performed. Only one task is executed on a device at a time.
--   
--   <a>$sel:targets:CreateTask'</a>, <a>createTask_targets</a> - A list of
--   managed device IDs.
newCreateTask :: Command -> NonEmpty Text -> CreateTask

-- | <i>See:</i> <a>newCreateTaskResponse</a> smart constructor.
data CreateTaskResponse
CreateTaskResponse' :: Maybe Text -> Maybe Text -> Int -> CreateTaskResponse

-- | Create a value of <a>CreateTaskResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:taskId:CreateTaskResponse'</a>,
--   <a>createTaskResponse_taskId</a> - The ID of the task that you
--   created.
--   
--   <a>$sel:taskArn:CreateTaskResponse'</a>,
--   <a>createTaskResponse_taskArn</a> - The Amazon Resource Name (ARN) of
--   the task that you created.
--   
--   <a>$sel:httpStatus:CreateTaskResponse'</a>,
--   <a>createTaskResponse_httpStatus</a> - The response's http status
--   code.
newCreateTaskResponse :: Int -> CreateTaskResponse

-- | <i>See:</i> <a>newListTasks</a> smart constructor.
data ListTasks
ListTasks' :: Maybe TaskState -> Maybe Text -> Maybe Natural -> ListTasks

-- | Create a value of <a>ListTasks</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:ListTasks'</a>, <a>listTasks_state</a> - A structure
--   used to filter the list of tasks.
--   
--   <a>$sel:nextToken:ListTasks'</a>, <a>listTasks_nextToken</a> - A
--   pagination token to continue to the next page of tasks.
--   
--   <a>$sel:maxResults:ListTasks'</a>, <a>listTasks_maxResults</a> - The
--   maximum number of tasks per page.
newListTasks :: ListTasks

-- | <i>See:</i> <a>newListTasksResponse</a> smart constructor.
data ListTasksResponse
ListTasksResponse' :: Maybe [TaskSummary] -> Maybe Text -> Int -> ListTasksResponse

-- | Create a value of <a>ListTasksResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tasks:ListTasksResponse'</a>, <a>listTasksResponse_tasks</a> -
--   A list of task structures containing details about each task.
--   
--   <a>$sel:nextToken:ListTasks'</a>, <a>listTasksResponse_nextToken</a> -
--   A pagination token to continue to the next page of tasks.
--   
--   <a>$sel:httpStatus:ListTasksResponse'</a>,
--   <a>listTasksResponse_httpStatus</a> - The response's http status code.
newListTasksResponse :: Int -> ListTasksResponse

-- | <i>See:</i> <a>newDescribeExecution</a> smart constructor.
data DescribeExecution
DescribeExecution' :: Text -> Text -> DescribeExecution

-- | Create a value of <a>DescribeExecution</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:managedDeviceId:DescribeExecution'</a>,
--   <a>describeExecution_managedDeviceId</a> - The ID of the managed
--   device.
--   
--   <a>$sel:taskId:DescribeExecution'</a>, <a>describeExecution_taskId</a>
--   - The ID of the task that the action is describing.
newDescribeExecution :: Text -> Text -> DescribeExecution

-- | <i>See:</i> <a>newDescribeExecutionResponse</a> smart constructor.
data DescribeExecutionResponse
DescribeExecutionResponse' :: Maybe Text -> Maybe ExecutionState -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> Int -> DescribeExecutionResponse

-- | Create a value of <a>DescribeExecutionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:executionId:DescribeExecutionResponse'</a>,
--   <a>describeExecutionResponse_executionId</a> - The ID of the
--   execution.
--   
--   <a>$sel:state:DescribeExecutionResponse'</a>,
--   <a>describeExecutionResponse_state</a> - The current state of the
--   execution.
--   
--   <a>$sel:lastUpdatedAt:DescribeExecutionResponse'</a>,
--   <a>describeExecutionResponse_lastUpdatedAt</a> - When the status of
--   the execution was last updated.
--   
--   <a>$sel:taskId:DescribeExecution'</a>,
--   <a>describeExecutionResponse_taskId</a> - The ID of the task being
--   executed on the device.
--   
--   <a>$sel:startedAt:DescribeExecutionResponse'</a>,
--   <a>describeExecutionResponse_startedAt</a> - When the execution began.
--   
--   <a>$sel:managedDeviceId:DescribeExecution'</a>,
--   <a>describeExecutionResponse_managedDeviceId</a> - The ID of the
--   managed device that the task is being executed on.
--   
--   <a>$sel:httpStatus:DescribeExecutionResponse'</a>,
--   <a>describeExecutionResponse_httpStatus</a> - The response's http
--   status code.
newDescribeExecutionResponse :: Int -> DescribeExecutionResponse

-- | <i>See:</i> <a>newDescribeDevice</a> smart constructor.
data DescribeDevice
DescribeDevice' :: Text -> DescribeDevice

-- | Create a value of <a>DescribeDevice</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:managedDeviceId:DescribeDevice'</a>,
--   <a>describeDevice_managedDeviceId</a> - The ID of the device that you
--   are checking the information of.
newDescribeDevice :: Text -> DescribeDevice

-- | <i>See:</i> <a>newDescribeDeviceResponse</a> smart constructor.
data DescribeDeviceResponse
DescribeDeviceResponse' :: Maybe UnlockState -> Maybe [Capacity] -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe SoftwareInformation -> Maybe [PhysicalNetworkInterface] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Int -> DescribeDeviceResponse

-- | Create a value of <a>DescribeDeviceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceState:DescribeDeviceResponse'</a>,
--   <a>describeDeviceResponse_deviceState</a> - The current state of the
--   device.
--   
--   <a>$sel:deviceCapacities:DescribeDeviceResponse'</a>,
--   <a>describeDeviceResponse_deviceCapacities</a> - The hardware
--   specifications of the device.
--   
--   <a>$sel:lastUpdatedAt:DescribeDeviceResponse'</a>,
--   <a>describeDeviceResponse_lastUpdatedAt</a> - When the device last
--   pushed an update to the Amazon Web Services Cloud. Indicates when the
--   device cache was refreshed.
--   
--   <a>$sel:associatedWithJob:DescribeDeviceResponse'</a>,
--   <a>describeDeviceResponse_associatedWithJob</a> - The ID of the job
--   used when ordering the device.
--   
--   <a>$sel:lastReachedOutAt:DescribeDeviceResponse'</a>,
--   <a>describeDeviceResponse_lastReachedOutAt</a> - When the device last
--   contacted the Amazon Web Services Cloud. Indicates that the device is
--   online.
--   
--   <a>$sel:software:DescribeDeviceResponse'</a>,
--   <a>describeDeviceResponse_software</a> - The software installed on the
--   device.
--   
--   <a>$sel:physicalNetworkInterfaces:DescribeDeviceResponse'</a>,
--   <a>describeDeviceResponse_physicalNetworkInterfaces</a> - The network
--   interfaces available on the device.
--   
--   <a>$sel:managedDeviceId:DescribeDevice'</a>,
--   <a>describeDeviceResponse_managedDeviceId</a> - The ID of the device
--   that you checked the information for.
--   
--   <a>$sel:managedDeviceArn:DescribeDeviceResponse'</a>,
--   <a>describeDeviceResponse_managedDeviceArn</a> - The Amazon Resource
--   Name (ARN) of the device.
--   
--   <a>$sel:deviceType:DescribeDeviceResponse'</a>,
--   <a>describeDeviceResponse_deviceType</a> - The type of Amazon Web
--   Services Snow Family device.
--   
--   <a>$sel:tags:DescribeDeviceResponse'</a>,
--   <a>describeDeviceResponse_tags</a> - Optional metadata that you assign
--   to a resource. You can use tags to categorize a resource in different
--   ways, such as by purpose, owner, or environment.
--   
--   <a>$sel:httpStatus:DescribeDeviceResponse'</a>,
--   <a>describeDeviceResponse_httpStatus</a> - The response's http status
--   code.
newDescribeDeviceResponse :: Int -> DescribeDeviceResponse

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> HashMap Text Text -> TagResource

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The Amazon Resource Name (ARN) of the device or task.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - Optional
--   metadata that you assign to a resource. You can use tags to categorize
--   a resource in different ways, such as by purpose, owner, or
--   environment.
newTagResource :: Text -> TagResource

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newTagResourceResponse :: TagResourceResponse

-- | <i>See:</i> <a>newCancelTask</a> smart constructor.
data CancelTask
CancelTask' :: Text -> CancelTask

-- | Create a value of <a>CancelTask</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:taskId:CancelTask'</a>, <a>cancelTask_taskId</a> - The ID of
--   the task that you are attempting to cancel. You can retrieve a task ID
--   by using the <tt>ListTasks</tt> operation.
newCancelTask :: Text -> CancelTask

-- | <i>See:</i> <a>newCancelTaskResponse</a> smart constructor.
data CancelTaskResponse
CancelTaskResponse' :: Maybe Text -> Int -> CancelTaskResponse

-- | Create a value of <a>CancelTaskResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:taskId:CancelTask'</a>, <a>cancelTaskResponse_taskId</a> - The
--   ID of the task that you are attempting to cancel.
--   
--   <a>$sel:httpStatus:CancelTaskResponse'</a>,
--   <a>cancelTaskResponse_httpStatus</a> - The response's http status
--   code.
newCancelTaskResponse :: Int -> CancelTaskResponse

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The Amazon Resource Name (ARN) of
--   the device or task.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> -
--   Optional metadata that you assign to a resource. You can use tags to
--   categorize a resource in different ways, such as by purpose, owner, or
--   environment.
newUntagResource :: Text -> UntagResource

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUntagResourceResponse :: UntagResourceResponse

-- | <i>See:</i> <a>newListDevices</a> smart constructor.
data ListDevices
ListDevices' :: Maybe Text -> Maybe Text -> Maybe Natural -> ListDevices

-- | Create a value of <a>ListDevices</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:ListDevices'</a>, <a>listDevices_jobId</a> - The ID of
--   the job used to order the device.
--   
--   <a>$sel:nextToken:ListDevices'</a>, <a>listDevices_nextToken</a> - A
--   pagination token to continue to the next page of results.
--   
--   <a>$sel:maxResults:ListDevices'</a>, <a>listDevices_maxResults</a> -
--   The maximum number of devices to list per page.
newListDevices :: ListDevices

-- | <i>See:</i> <a>newListDevicesResponse</a> smart constructor.
data ListDevicesResponse
ListDevicesResponse' :: Maybe Text -> Maybe [DeviceSummary] -> Int -> ListDevicesResponse

-- | Create a value of <a>ListDevicesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDevices'</a>,
--   <a>listDevicesResponse_nextToken</a> - A pagination token to continue
--   to the next page of devices.
--   
--   <a>$sel:devices:ListDevicesResponse'</a>,
--   <a>listDevicesResponse_devices</a> - A list of device structures that
--   contain information about the device.
--   
--   <a>$sel:httpStatus:ListDevicesResponse'</a>,
--   <a>listDevicesResponse_httpStatus</a> - The response's http status
--   code.
newListDevicesResponse :: Int -> ListDevicesResponse
newtype AttachmentStatus
AttachmentStatus' :: Text -> AttachmentStatus
[fromAttachmentStatus] :: AttachmentStatus -> Text
pattern AttachmentStatus_ATTACHED :: AttachmentStatus
pattern AttachmentStatus_ATTACHING :: AttachmentStatus
pattern AttachmentStatus_DETACHED :: AttachmentStatus
pattern AttachmentStatus_DETACHING :: AttachmentStatus
newtype ExecutionState
ExecutionState' :: Text -> ExecutionState
[fromExecutionState] :: ExecutionState -> Text
pattern ExecutionState_CANCELED :: ExecutionState
pattern ExecutionState_FAILED :: ExecutionState
pattern ExecutionState_IN_PROGRESS :: ExecutionState
pattern ExecutionState_QUEUED :: ExecutionState
pattern ExecutionState_REJECTED :: ExecutionState
pattern ExecutionState_SUCCEEDED :: ExecutionState
pattern ExecutionState_TIMED_OUT :: ExecutionState
newtype InstanceStateName
InstanceStateName' :: Text -> InstanceStateName
[fromInstanceStateName] :: InstanceStateName -> Text
pattern InstanceStateName_PENDING :: InstanceStateName
pattern InstanceStateName_RUNNING :: InstanceStateName
pattern InstanceStateName_SHUTTING_DOWN :: InstanceStateName
pattern InstanceStateName_STOPPED :: InstanceStateName
pattern InstanceStateName_STOPPING :: InstanceStateName
pattern InstanceStateName_TERMINATED :: InstanceStateName
newtype IpAddressAssignment
IpAddressAssignment' :: Text -> IpAddressAssignment
[fromIpAddressAssignment] :: IpAddressAssignment -> Text
pattern IpAddressAssignment_DHCP :: IpAddressAssignment
pattern IpAddressAssignment_STATIC :: IpAddressAssignment
newtype PhysicalConnectorType
PhysicalConnectorType' :: Text -> PhysicalConnectorType
[fromPhysicalConnectorType] :: PhysicalConnectorType -> Text
pattern PhysicalConnectorType_QSFP :: PhysicalConnectorType
pattern PhysicalConnectorType_RJ45 :: PhysicalConnectorType
pattern PhysicalConnectorType_RJ45_2 :: PhysicalConnectorType
pattern PhysicalConnectorType_SFP_PLUS :: PhysicalConnectorType
pattern PhysicalConnectorType_WIFI :: PhysicalConnectorType
newtype TaskState
TaskState' :: Text -> TaskState
[fromTaskState] :: TaskState -> Text
pattern TaskState_CANCELED :: TaskState
pattern TaskState_COMPLETED :: TaskState
pattern TaskState_IN_PROGRESS :: TaskState
newtype UnlockState
UnlockState' :: Text -> UnlockState
[fromUnlockState] :: UnlockState -> Text
pattern UnlockState_LOCKED :: UnlockState
pattern UnlockState_UNLOCKED :: UnlockState
pattern UnlockState_UNLOCKING :: UnlockState

-- | The physical capacity of the Amazon Web Services Snow Family device.
--   
--   <i>See:</i> <a>newCapacity</a> smart constructor.
data Capacity
Capacity' :: Maybe Integer -> Maybe Text -> Maybe Integer -> Maybe Text -> Maybe Integer -> Capacity

-- | Create a value of <a>Capacity</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:used:Capacity'</a>, <a>capacity_used</a> - The amount of
--   capacity used on the device.
--   
--   <a>$sel:name:Capacity'</a>, <a>capacity_name</a> - The name of the
--   type of capacity, such as memory.
--   
--   <a>$sel:total:Capacity'</a>, <a>capacity_total</a> - The total
--   capacity on the device.
--   
--   <a>$sel:unit:Capacity'</a>, <a>capacity_unit</a> - The unit of measure
--   for the type of capacity.
--   
--   <a>$sel:available:Capacity'</a>, <a>capacity_available</a> - The
--   amount of capacity available for use on the device.
newCapacity :: Capacity

-- | The command given to the device to execute.
--   
--   <i>See:</i> <a>newCommand</a> smart constructor.
data Command
Command' :: Maybe Unlock -> Maybe Reboot -> Command

-- | Create a value of <a>Command</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:unlock:Command'</a>, <a>command_unlock</a> - Unlocks the
--   device.
--   
--   <a>$sel:reboot:Command'</a>, <a>command_reboot</a> - Reboots the
--   device.
newCommand :: Command

-- | The options for how a device's CPU is configured.
--   
--   <i>See:</i> <a>newCpuOptions</a> smart constructor.
data CpuOptions
CpuOptions' :: Maybe Int -> Maybe Int -> CpuOptions

-- | Create a value of <a>CpuOptions</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:coreCount:CpuOptions'</a>, <a>cpuOptions_coreCount</a> - The
--   number of cores that the CPU can use.
--   
--   <a>$sel:threadsPerCore:CpuOptions'</a>,
--   <a>cpuOptions_threadsPerCore</a> - The number of threads per core in
--   the CPU.
newCpuOptions :: CpuOptions

-- | Identifying information about the device.
--   
--   <i>See:</i> <a>newDeviceSummary</a> smart constructor.
data DeviceSummary
DeviceSummary' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> DeviceSummary

-- | Create a value of <a>DeviceSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:associatedWithJob:DeviceSummary'</a>,
--   <a>deviceSummary_associatedWithJob</a> - The ID of the job used to
--   order the device.
--   
--   <a>$sel:managedDeviceId:DeviceSummary'</a>,
--   <a>deviceSummary_managedDeviceId</a> - The ID of the device.
--   
--   <a>$sel:managedDeviceArn:DeviceSummary'</a>,
--   <a>deviceSummary_managedDeviceArn</a> - The Amazon Resource Name (ARN)
--   of the device.
--   
--   <a>$sel:tags:DeviceSummary'</a>, <a>deviceSummary_tags</a> - Optional
--   metadata that you assign to a resource. You can use tags to categorize
--   a resource in different ways, such as by purpose, owner, or
--   environment.
newDeviceSummary :: DeviceSummary

-- | Describes a parameter used to set up an Amazon Elastic Block Store
--   (Amazon EBS) volume in a block device mapping.
--   
--   <i>See:</i> <a>newEbsInstanceBlockDevice</a> smart constructor.
data EbsInstanceBlockDevice
EbsInstanceBlockDevice' :: Maybe Bool -> Maybe AttachmentStatus -> Maybe Text -> Maybe POSIX -> EbsInstanceBlockDevice

-- | Create a value of <a>EbsInstanceBlockDevice</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deleteOnTermination:EbsInstanceBlockDevice'</a>,
--   <a>ebsInstanceBlockDevice_deleteOnTermination</a> - A value that
--   indicates whether the volume is deleted on instance termination.
--   
--   <a>$sel:status:EbsInstanceBlockDevice'</a>,
--   <a>ebsInstanceBlockDevice_status</a> - The attachment state.
--   
--   <a>$sel:volumeId:EbsInstanceBlockDevice'</a>,
--   <a>ebsInstanceBlockDevice_volumeId</a> - The ID of the Amazon EBS
--   volume.
--   
--   <a>$sel:attachTime:EbsInstanceBlockDevice'</a>,
--   <a>ebsInstanceBlockDevice_attachTime</a> - When the attachment was
--   initiated.
newEbsInstanceBlockDevice :: EbsInstanceBlockDevice

-- | The summary of a task execution on a specified device.
--   
--   <i>See:</i> <a>newExecutionSummary</a> smart constructor.
data ExecutionSummary
ExecutionSummary' :: Maybe Text -> Maybe ExecutionState -> Maybe Text -> Maybe Text -> ExecutionSummary

-- | Create a value of <a>ExecutionSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:executionId:ExecutionSummary'</a>,
--   <a>executionSummary_executionId</a> - The ID of the execution.
--   
--   <a>$sel:state:ExecutionSummary'</a>, <a>executionSummary_state</a> -
--   The state of the execution.
--   
--   <a>$sel:taskId:ExecutionSummary'</a>, <a>executionSummary_taskId</a> -
--   The ID of the task.
--   
--   <a>$sel:managedDeviceId:ExecutionSummary'</a>,
--   <a>executionSummary_managedDeviceId</a> - The ID of the managed device
--   that the task is being executed on.
newExecutionSummary :: ExecutionSummary

-- | The description of an instance. Currently, Amazon EC2 instances are
--   the only supported instance type.
--   
--   <i>See:</i> <a>newInstance</a> smart constructor.
data Instance
Instance' :: Maybe Text -> Maybe InstanceState -> Maybe [SecurityGroupIdentifier] -> Maybe POSIX -> Maybe CpuOptions -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe [InstanceBlockDeviceMapping] -> Maybe Text -> Maybe Int -> Instance

-- | Create a value of <a>Instance</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceId:Instance'</a>, <a>instance_instanceId</a> - The ID
--   of the instance.
--   
--   <a>$sel:state:Instance'</a>, <a>instance_state</a> - Undocumented
--   member.
--   
--   <a>$sel:securityGroups:Instance'</a>, <a>instance_securityGroups</a> -
--   The security groups for the instance.
--   
--   <a>$sel:createdAt:Instance'</a>, <a>instance_createdAt</a> - When the
--   instance was created.
--   
--   <a>$sel:cpuOptions:Instance'</a>, <a>instance_cpuOptions</a> - The CPU
--   options for the instance.
--   
--   <a>$sel:rootDeviceName:Instance'</a>, <a>instance_rootDeviceName</a> -
--   The device name of the root device volume (for example,
--   <tt>/dev/sda1</tt>).
--   
--   <a>$sel:instanceType:Instance'</a>, <a>instance_instanceType</a> - The
--   instance type.
--   
--   <a>$sel:imageId:Instance'</a>, <a>instance_imageId</a> - The ID of the
--   AMI used to launch the instance.
--   
--   <a>$sel:privateIpAddress:Instance'</a>,
--   <a>instance_privateIpAddress</a> - The private IPv4 address assigned
--   to the instance.
--   
--   <a>$sel:updatedAt:Instance'</a>, <a>instance_updatedAt</a> - When the
--   instance was last updated.
--   
--   <a>$sel:blockDeviceMappings:Instance'</a>,
--   <a>instance_blockDeviceMappings</a> - Any block device mapping entries
--   for the instance.
--   
--   <a>$sel:publicIpAddress:Instance'</a>, <a>instance_publicIpAddress</a>
--   - The public IPv4 address assigned to the instance.
--   
--   <a>$sel:amiLaunchIndex:Instance'</a>, <a>instance_amiLaunchIndex</a> -
--   The Amazon Machine Image (AMI) launch index, which you can use to find
--   this instance in the launch group.
newInstance :: Instance

-- | The description of a block device mapping.
--   
--   <i>See:</i> <a>newInstanceBlockDeviceMapping</a> smart constructor.
data InstanceBlockDeviceMapping
InstanceBlockDeviceMapping' :: Maybe EbsInstanceBlockDevice -> Maybe Text -> InstanceBlockDeviceMapping

-- | Create a value of <a>InstanceBlockDeviceMapping</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ebs:InstanceBlockDeviceMapping'</a>,
--   <a>instanceBlockDeviceMapping_ebs</a> - The parameters used to
--   automatically set up Amazon Elastic Block Store (Amazon EBS) volumes
--   when the instance is launched.
--   
--   <a>$sel:deviceName:InstanceBlockDeviceMapping'</a>,
--   <a>instanceBlockDeviceMapping_deviceName</a> - The block device name.
newInstanceBlockDeviceMapping :: InstanceBlockDeviceMapping

-- | The description of the current state of an instance.
--   
--   <i>See:</i> <a>newInstanceState</a> smart constructor.
data InstanceState
InstanceState' :: Maybe InstanceStateName -> Maybe Int -> InstanceState

-- | Create a value of <a>InstanceState</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:InstanceState'</a>, <a>instanceState_name</a> - The
--   current state of the instance.
--   
--   <a>$sel:code:InstanceState'</a>, <a>instanceState_code</a> - The state
--   of the instance as a 16-bit unsigned integer.
--   
--   The high byte is all of the bits between 2^8 and (2^16)-1, which
--   equals decimal values between 256 and 65,535. These numerical values
--   are used for internal purposes and should be ignored.
--   
--   The low byte is all of the bits between 2^0 and (2^8)-1, which equals
--   decimal values between 0 and 255.
--   
--   The valid values for the instance state code are all in the range of
--   the low byte. These values are:
--   
--   <ul>
--   <li><tt>0</tt> : <tt>pending</tt></li>
--   <li><tt>16</tt> : <tt>running</tt></li>
--   <li><tt>32</tt> : <tt>shutting-down</tt></li>
--   <li><tt>48</tt> : <tt>terminated</tt></li>
--   <li><tt>64</tt> : <tt>stopping</tt></li>
--   <li><tt>80</tt> : <tt>stopped</tt></li>
--   </ul>
--   
--   You can ignore the high byte value by zeroing out all of the bits
--   above 2^8 or 256 in decimal.
newInstanceState :: InstanceState

-- | The details about the instance.
--   
--   <i>See:</i> <a>newInstanceSummary</a> smart constructor.
data InstanceSummary
InstanceSummary' :: Maybe POSIX -> Maybe Instance -> InstanceSummary

-- | Create a value of <a>InstanceSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastUpdatedAt:InstanceSummary'</a>,
--   <a>instanceSummary_lastUpdatedAt</a> - When the instance summary was
--   last updated.
--   
--   <a>$sel:instance':InstanceSummary'</a>,
--   <a>instanceSummary_instance</a> - A structure containing details about
--   the instance.
newInstanceSummary :: InstanceSummary

-- | The details about the physical network interface for the device.
--   
--   <i>See:</i> <a>newPhysicalNetworkInterface</a> smart constructor.
data PhysicalNetworkInterface
PhysicalNetworkInterface' :: Maybe Text -> Maybe Text -> Maybe IpAddressAssignment -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe PhysicalConnectorType -> PhysicalNetworkInterface

-- | Create a value of <a>PhysicalNetworkInterface</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ipAddress:PhysicalNetworkInterface'</a>,
--   <a>physicalNetworkInterface_ipAddress</a> - The IP address of the
--   device.
--   
--   <a>$sel:macAddress:PhysicalNetworkInterface'</a>,
--   <a>physicalNetworkInterface_macAddress</a> - The MAC address of the
--   device.
--   
--   <a>$sel:ipAddressAssignment:PhysicalNetworkInterface'</a>,
--   <a>physicalNetworkInterface_ipAddressAssignment</a> - A value that
--   describes whether the IP address is dynamic or persistent.
--   
--   <a>$sel:defaultGateway:PhysicalNetworkInterface'</a>,
--   <a>physicalNetworkInterface_defaultGateway</a> - The default gateway
--   of the device.
--   
--   <a>$sel:physicalNetworkInterfaceId:PhysicalNetworkInterface'</a>,
--   <a>physicalNetworkInterface_physicalNetworkInterfaceId</a> - The
--   physical network interface ID.
--   
--   <a>$sel:netmask:PhysicalNetworkInterface'</a>,
--   <a>physicalNetworkInterface_netmask</a> - The netmask used to divide
--   the IP address into subnets.
--   
--   <a>$sel:physicalConnectorType:PhysicalNetworkInterface'</a>,
--   <a>physicalNetworkInterface_physicalConnectorType</a> - The physical
--   connector type.
newPhysicalNetworkInterface :: PhysicalNetworkInterface

-- | A structure used to reboot the device.
--   
--   <i>See:</i> <a>newReboot</a> smart constructor.
data Reboot
Reboot' :: Reboot

-- | Create a value of <a>Reboot</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newReboot :: Reboot

-- | A summary of a resource available on the device.
--   
--   <i>See:</i> <a>newResourceSummary</a> smart constructor.
data ResourceSummary
ResourceSummary' :: Maybe Text -> Maybe Text -> Text -> ResourceSummary

-- | Create a value of <a>ResourceSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:ResourceSummary'</a>, <a>resourceSummary_arn</a> - The
--   Amazon Resource Name (ARN) of the resource.
--   
--   <a>$sel:id:ResourceSummary'</a>, <a>resourceSummary_id</a> - The ID of
--   the resource.
--   
--   <a>$sel:resourceType:ResourceSummary'</a>,
--   <a>resourceSummary_resourceType</a> - The resource type.
newResourceSummary :: Text -> ResourceSummary

-- | Information about the device's security group.
--   
--   <i>See:</i> <a>newSecurityGroupIdentifier</a> smart constructor.
data SecurityGroupIdentifier
SecurityGroupIdentifier' :: Maybe Text -> Maybe Text -> SecurityGroupIdentifier

-- | Create a value of <a>SecurityGroupIdentifier</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupId:SecurityGroupIdentifier'</a>,
--   <a>securityGroupIdentifier_groupId</a> - The security group ID.
--   
--   <a>$sel:groupName:SecurityGroupIdentifier'</a>,
--   <a>securityGroupIdentifier_groupName</a> - The security group name.
newSecurityGroupIdentifier :: SecurityGroupIdentifier

-- | Information about the software on the device.
--   
--   <i>See:</i> <a>newSoftwareInformation</a> smart constructor.
data SoftwareInformation
SoftwareInformation' :: Maybe Text -> Maybe Text -> Maybe Text -> SoftwareInformation

-- | Create a value of <a>SoftwareInformation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:installedVersion:SoftwareInformation'</a>,
--   <a>softwareInformation_installedVersion</a> - The version of the
--   software currently installed on the device.
--   
--   <a>$sel:installState:SoftwareInformation'</a>,
--   <a>softwareInformation_installState</a> - The state of the software
--   that is installed or that is being installed on the device.
--   
--   <a>$sel:installingVersion:SoftwareInformation'</a>,
--   <a>softwareInformation_installingVersion</a> - The version of the
--   software being installed on the device.
newSoftwareInformation :: SoftwareInformation

-- | Information about the task assigned to one or many devices.
--   
--   <i>See:</i> <a>newTaskSummary</a> smart constructor.
data TaskSummary
TaskSummary' :: Maybe TaskState -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> TaskSummary

-- | Create a value of <a>TaskSummary</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:TaskSummary'</a>, <a>taskSummary_state</a> - The state
--   of the task assigned to one or many devices.
--   
--   <a>$sel:taskArn:TaskSummary'</a>, <a>taskSummary_taskArn</a> - The
--   Amazon Resource Name (ARN) of the task.
--   
--   <a>$sel:tags:TaskSummary'</a>, <a>taskSummary_tags</a> - Optional
--   metadata that you assign to a resource. You can use tags to categorize
--   a resource in different ways, such as by purpose, owner, or
--   environment.
--   
--   <a>$sel:taskId:TaskSummary'</a>, <a>taskSummary_taskId</a> - The task
--   ID.
newTaskSummary :: Text -> TaskSummary

-- | A structure used to unlock a device.
--   
--   <i>See:</i> <a>newUnlock</a> smart constructor.
data Unlock
Unlock' :: Unlock

-- | Create a value of <a>Unlock</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUnlock :: Unlock
