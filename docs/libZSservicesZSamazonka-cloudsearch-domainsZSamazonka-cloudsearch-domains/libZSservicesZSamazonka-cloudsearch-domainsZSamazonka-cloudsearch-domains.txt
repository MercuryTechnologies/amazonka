-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-cloudsearch-domainsZSamazonka-cloudsearch-domains
@version 2.0


module Network.AWS.CloudSearchDomains.Types.Bucket

-- | A container for facet information.
--   
--   <i>See:</i> <a>newBucket</a> smart constructor.
data Bucket
Bucket' :: Maybe Text -> Maybe Integer -> Bucket

-- | The facet value being counted.
[$sel:value:Bucket'] :: Bucket -> Maybe Text

-- | The number of hits that contain the facet value in the specified facet
--   field.
[$sel:count:Bucket'] :: Bucket -> Maybe Integer

-- | Create a value of <a>Bucket</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:Bucket'</a>, <a>bucket_value</a> - The facet value being
--   counted.
--   
--   <a>$sel:count:Bucket'</a>, <a>bucket_count</a> - The number of hits
--   that contain the facet value in the specified facet field.
newBucket :: Bucket

-- | The facet value being counted.
bucket_value :: Lens' Bucket (Maybe Text)

-- | The number of hits that contain the facet value in the specified facet
--   field.
bucket_count :: Lens' Bucket (Maybe Integer)
instance GHC.Generics.Generic Network.AWS.CloudSearchDomains.Types.Bucket.Bucket
instance GHC.Show.Show Network.AWS.CloudSearchDomains.Types.Bucket.Bucket
instance GHC.Read.Read Network.AWS.CloudSearchDomains.Types.Bucket.Bucket
instance GHC.Classes.Eq Network.AWS.CloudSearchDomains.Types.Bucket.Bucket
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudSearchDomains.Types.Bucket.Bucket
instance Data.Hashable.Class.Hashable Network.AWS.CloudSearchDomains.Types.Bucket.Bucket
instance Control.DeepSeq.NFData Network.AWS.CloudSearchDomains.Types.Bucket.Bucket


module Network.AWS.CloudSearchDomains.Types.BucketInfo

-- | A container for the calculated facet values and counts.
--   
--   <i>See:</i> <a>newBucketInfo</a> smart constructor.
data BucketInfo
BucketInfo' :: Maybe [Bucket] -> BucketInfo

-- | A list of the calculated facet values and counts.
[$sel:buckets:BucketInfo'] :: BucketInfo -> Maybe [Bucket]

-- | Create a value of <a>BucketInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:buckets:BucketInfo'</a>, <a>bucketInfo_buckets</a> - A list of
--   the calculated facet values and counts.
newBucketInfo :: BucketInfo

-- | A list of the calculated facet values and counts.
bucketInfo_buckets :: Lens' BucketInfo (Maybe [Bucket])
instance GHC.Generics.Generic Network.AWS.CloudSearchDomains.Types.BucketInfo.BucketInfo
instance GHC.Show.Show Network.AWS.CloudSearchDomains.Types.BucketInfo.BucketInfo
instance GHC.Read.Read Network.AWS.CloudSearchDomains.Types.BucketInfo.BucketInfo
instance GHC.Classes.Eq Network.AWS.CloudSearchDomains.Types.BucketInfo.BucketInfo
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudSearchDomains.Types.BucketInfo.BucketInfo
instance Data.Hashable.Class.Hashable Network.AWS.CloudSearchDomains.Types.BucketInfo.BucketInfo
instance Control.DeepSeq.NFData Network.AWS.CloudSearchDomains.Types.BucketInfo.BucketInfo


module Network.AWS.CloudSearchDomains.Types.ContentType
newtype ContentType
ContentType' :: Text -> ContentType
[fromContentType] :: ContentType -> Text
pattern ContentType_Application_json :: ContentType
pattern ContentType_Application_xml :: ContentType
instance Network.AWS.Data.XML.ToXML Network.AWS.CloudSearchDomains.Types.ContentType.ContentType
instance Network.AWS.Data.XML.FromXML Network.AWS.CloudSearchDomains.Types.ContentType.ContentType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CloudSearchDomains.Types.ContentType.ContentType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudSearchDomains.Types.ContentType.ContentType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CloudSearchDomains.Types.ContentType.ContentType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudSearchDomains.Types.ContentType.ContentType
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudSearchDomains.Types.ContentType.ContentType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CloudSearchDomains.Types.ContentType.ContentType
instance Network.AWS.Data.Log.ToLog Network.AWS.CloudSearchDomains.Types.ContentType.ContentType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CloudSearchDomains.Types.ContentType.ContentType
instance Network.AWS.Data.Text.ToText Network.AWS.CloudSearchDomains.Types.ContentType.ContentType
instance Network.AWS.Data.Text.FromText Network.AWS.CloudSearchDomains.Types.ContentType.ContentType
instance Control.DeepSeq.NFData Network.AWS.CloudSearchDomains.Types.ContentType.ContentType
instance Data.Hashable.Class.Hashable Network.AWS.CloudSearchDomains.Types.ContentType.ContentType
instance GHC.Generics.Generic Network.AWS.CloudSearchDomains.Types.ContentType.ContentType
instance GHC.Classes.Ord Network.AWS.CloudSearchDomains.Types.ContentType.ContentType
instance GHC.Classes.Eq Network.AWS.CloudSearchDomains.Types.ContentType.ContentType
instance GHC.Read.Read Network.AWS.CloudSearchDomains.Types.ContentType.ContentType
instance GHC.Show.Show Network.AWS.CloudSearchDomains.Types.ContentType.ContentType


module Network.AWS.CloudSearchDomains.Types.DocumentServiceWarning

-- | A warning returned by the document service when an issue is discovered
--   while processing an upload request.
--   
--   <i>See:</i> <a>newDocumentServiceWarning</a> smart constructor.
data DocumentServiceWarning
DocumentServiceWarning' :: Maybe Text -> DocumentServiceWarning

-- | The description for a warning returned by the document service.
[$sel:message:DocumentServiceWarning'] :: DocumentServiceWarning -> Maybe Text

-- | Create a value of <a>DocumentServiceWarning</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:message:DocumentServiceWarning'</a>,
--   <a>documentServiceWarning_message</a> - The description for a warning
--   returned by the document service.
newDocumentServiceWarning :: DocumentServiceWarning

-- | The description for a warning returned by the document service.
documentServiceWarning_message :: Lens' DocumentServiceWarning (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CloudSearchDomains.Types.DocumentServiceWarning.DocumentServiceWarning
instance GHC.Show.Show Network.AWS.CloudSearchDomains.Types.DocumentServiceWarning.DocumentServiceWarning
instance GHC.Read.Read Network.AWS.CloudSearchDomains.Types.DocumentServiceWarning.DocumentServiceWarning
instance GHC.Classes.Eq Network.AWS.CloudSearchDomains.Types.DocumentServiceWarning.DocumentServiceWarning
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudSearchDomains.Types.DocumentServiceWarning.DocumentServiceWarning
instance Data.Hashable.Class.Hashable Network.AWS.CloudSearchDomains.Types.DocumentServiceWarning.DocumentServiceWarning
instance Control.DeepSeq.NFData Network.AWS.CloudSearchDomains.Types.DocumentServiceWarning.DocumentServiceWarning


module Network.AWS.CloudSearchDomains.Types.FieldStats

-- | The statistics for a field calculated in the request.
--   
--   <i>See:</i> <a>newFieldStats</a> smart constructor.
data FieldStats
FieldStats' :: Maybe Text -> Maybe Text -> Maybe Integer -> Maybe Integer -> Maybe Double -> Maybe Text -> Maybe Double -> Maybe Double -> FieldStats

-- | The maximum value found in the specified field in the result set.
--   
--   If the field is numeric (<tt>int</tt>, <tt>int-array</tt>,
--   <tt>double</tt>, or <tt>double-array</tt>), <tt>max</tt> is the string
--   representation of a double-precision 64-bit floating point value. If
--   the field is <tt>date</tt> or <tt>date-array</tt>, <tt>max</tt> is the
--   string representation of a date with the format specified in <a>IETF
--   RFC3339</a>: yyyy-mm-ddTHH:mm:ss.SSSZ.
[$sel:max:FieldStats'] :: FieldStats -> Maybe Text

-- | The average of the values found in the specified field in the result
--   set.
--   
--   If the field is numeric (<tt>int</tt>, <tt>int-array</tt>,
--   <tt>double</tt>, or <tt>double-array</tt>), <tt>mean</tt> is the
--   string representation of a double-precision 64-bit floating point
--   value. If the field is <tt>date</tt> or <tt>date-array</tt>,
--   <tt>mean</tt> is the string representation of a date with the format
--   specified in <a>IETF RFC3339</a>: yyyy-mm-ddTHH:mm:ss.SSSZ.
[$sel:mean:FieldStats'] :: FieldStats -> Maybe Text

-- | The number of documents that contain a value in the specified field in
--   the result set.
[$sel:count:FieldStats'] :: FieldStats -> Maybe Integer

-- | The number of documents that do not contain a value in the specified
--   field in the result set.
[$sel:missing:FieldStats'] :: FieldStats -> Maybe Integer

-- | The standard deviation of the values in the specified field in the
--   result set.
[$sel:stddev:FieldStats'] :: FieldStats -> Maybe Double

-- | The minimum value found in the specified field in the result set.
--   
--   If the field is numeric (<tt>int</tt>, <tt>int-array</tt>,
--   <tt>double</tt>, or <tt>double-array</tt>), <tt>min</tt> is the string
--   representation of a double-precision 64-bit floating point value. If
--   the field is <tt>date</tt> or <tt>date-array</tt>, <tt>min</tt> is the
--   string representation of a date with the format specified in <a>IETF
--   RFC3339</a>: yyyy-mm-ddTHH:mm:ss.SSSZ.
[$sel:min:FieldStats'] :: FieldStats -> Maybe Text

-- | The sum of all field values in the result set squared.
[$sel:sumOfSquares:FieldStats'] :: FieldStats -> Maybe Double

-- | The sum of the field values across the documents in the result set.
--   <tt>null</tt> for date fields.
[$sel:sum:FieldStats'] :: FieldStats -> Maybe Double

-- | Create a value of <a>FieldStats</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:max:FieldStats'</a>, <a>fieldStats_max</a> - The maximum value
--   found in the specified field in the result set.
--   
--   If the field is numeric (<tt>int</tt>, <tt>int-array</tt>,
--   <tt>double</tt>, or <tt>double-array</tt>), <tt>max</tt> is the string
--   representation of a double-precision 64-bit floating point value. If
--   the field is <tt>date</tt> or <tt>date-array</tt>, <tt>max</tt> is the
--   string representation of a date with the format specified in <a>IETF
--   RFC3339</a>: yyyy-mm-ddTHH:mm:ss.SSSZ.
--   
--   <a>$sel:mean:FieldStats'</a>, <a>fieldStats_mean</a> - The average of
--   the values found in the specified field in the result set.
--   
--   If the field is numeric (<tt>int</tt>, <tt>int-array</tt>,
--   <tt>double</tt>, or <tt>double-array</tt>), <tt>mean</tt> is the
--   string representation of a double-precision 64-bit floating point
--   value. If the field is <tt>date</tt> or <tt>date-array</tt>,
--   <tt>mean</tt> is the string representation of a date with the format
--   specified in <a>IETF RFC3339</a>: yyyy-mm-ddTHH:mm:ss.SSSZ.
--   
--   <a>$sel:count:FieldStats'</a>, <a>fieldStats_count</a> - The number of
--   documents that contain a value in the specified field in the result
--   set.
--   
--   <a>$sel:missing:FieldStats'</a>, <a>fieldStats_missing</a> - The
--   number of documents that do not contain a value in the specified field
--   in the result set.
--   
--   <a>$sel:stddev:FieldStats'</a>, <a>fieldStats_stddev</a> - The
--   standard deviation of the values in the specified field in the result
--   set.
--   
--   <a>$sel:min:FieldStats'</a>, <a>fieldStats_min</a> - The minimum value
--   found in the specified field in the result set.
--   
--   If the field is numeric (<tt>int</tt>, <tt>int-array</tt>,
--   <tt>double</tt>, or <tt>double-array</tt>), <tt>min</tt> is the string
--   representation of a double-precision 64-bit floating point value. If
--   the field is <tt>date</tt> or <tt>date-array</tt>, <tt>min</tt> is the
--   string representation of a date with the format specified in <a>IETF
--   RFC3339</a>: yyyy-mm-ddTHH:mm:ss.SSSZ.
--   
--   <a>$sel:sumOfSquares:FieldStats'</a>, <a>fieldStats_sumOfSquares</a> -
--   The sum of all field values in the result set squared.
--   
--   <a>$sel:sum:FieldStats'</a>, <a>fieldStats_sum</a> - The sum of the
--   field values across the documents in the result set. <tt>null</tt> for
--   date fields.
newFieldStats :: FieldStats

-- | The maximum value found in the specified field in the result set.
--   
--   If the field is numeric (<tt>int</tt>, <tt>int-array</tt>,
--   <tt>double</tt>, or <tt>double-array</tt>), <tt>max</tt> is the string
--   representation of a double-precision 64-bit floating point value. If
--   the field is <tt>date</tt> or <tt>date-array</tt>, <tt>max</tt> is the
--   string representation of a date with the format specified in <a>IETF
--   RFC3339</a>: yyyy-mm-ddTHH:mm:ss.SSSZ.
fieldStats_max :: Lens' FieldStats (Maybe Text)

-- | The average of the values found in the specified field in the result
--   set.
--   
--   If the field is numeric (<tt>int</tt>, <tt>int-array</tt>,
--   <tt>double</tt>, or <tt>double-array</tt>), <tt>mean</tt> is the
--   string representation of a double-precision 64-bit floating point
--   value. If the field is <tt>date</tt> or <tt>date-array</tt>,
--   <tt>mean</tt> is the string representation of a date with the format
--   specified in <a>IETF RFC3339</a>: yyyy-mm-ddTHH:mm:ss.SSSZ.
fieldStats_mean :: Lens' FieldStats (Maybe Text)

-- | The number of documents that contain a value in the specified field in
--   the result set.
fieldStats_count :: Lens' FieldStats (Maybe Integer)

-- | The number of documents that do not contain a value in the specified
--   field in the result set.
fieldStats_missing :: Lens' FieldStats (Maybe Integer)

-- | The standard deviation of the values in the specified field in the
--   result set.
fieldStats_stddev :: Lens' FieldStats (Maybe Double)

-- | The minimum value found in the specified field in the result set.
--   
--   If the field is numeric (<tt>int</tt>, <tt>int-array</tt>,
--   <tt>double</tt>, or <tt>double-array</tt>), <tt>min</tt> is the string
--   representation of a double-precision 64-bit floating point value. If
--   the field is <tt>date</tt> or <tt>date-array</tt>, <tt>min</tt> is the
--   string representation of a date with the format specified in <a>IETF
--   RFC3339</a>: yyyy-mm-ddTHH:mm:ss.SSSZ.
fieldStats_min :: Lens' FieldStats (Maybe Text)

-- | The sum of all field values in the result set squared.
fieldStats_sumOfSquares :: Lens' FieldStats (Maybe Double)

-- | The sum of the field values across the documents in the result set.
--   <tt>null</tt> for date fields.
fieldStats_sum :: Lens' FieldStats (Maybe Double)
instance GHC.Generics.Generic Network.AWS.CloudSearchDomains.Types.FieldStats.FieldStats
instance GHC.Show.Show Network.AWS.CloudSearchDomains.Types.FieldStats.FieldStats
instance GHC.Read.Read Network.AWS.CloudSearchDomains.Types.FieldStats.FieldStats
instance GHC.Classes.Eq Network.AWS.CloudSearchDomains.Types.FieldStats.FieldStats
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudSearchDomains.Types.FieldStats.FieldStats
instance Data.Hashable.Class.Hashable Network.AWS.CloudSearchDomains.Types.FieldStats.FieldStats
instance Control.DeepSeq.NFData Network.AWS.CloudSearchDomains.Types.FieldStats.FieldStats


module Network.AWS.CloudSearchDomains.Types.Hit

-- | Information about a document that matches the search request.
--   
--   <i>See:</i> <a>newHit</a> smart constructor.
data Hit
Hit' :: Maybe (HashMap Text Text) -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe (HashMap Text [Text]) -> Hit

-- | The expressions returned from a document that matches the search
--   request.
[$sel:exprs:Hit'] :: Hit -> Maybe (HashMap Text Text)

-- | The document ID of a document that matches the search request.
[$sel:id:Hit'] :: Hit -> Maybe Text

-- | The highlights returned from a document that matches the search
--   request.
[$sel:highlights:Hit'] :: Hit -> Maybe (HashMap Text Text)

-- | The fields returned from a document that matches the search request.
[$sel:fields:Hit'] :: Hit -> Maybe (HashMap Text [Text])

-- | Create a value of <a>Hit</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:exprs:Hit'</a>, <a>hit_exprs</a> - The expressions returned
--   from a document that matches the search request.
--   
--   <a>$sel:id:Hit'</a>, <a>hit_id</a> - The document ID of a document
--   that matches the search request.
--   
--   <a>$sel:highlights:Hit'</a>, <a>hit_highlights</a> - The highlights
--   returned from a document that matches the search request.
--   
--   <a>$sel:fields:Hit'</a>, <a>hit_fields</a> - The fields returned from
--   a document that matches the search request.
newHit :: Hit

-- | The expressions returned from a document that matches the search
--   request.
hit_exprs :: Lens' Hit (Maybe (HashMap Text Text))

-- | The document ID of a document that matches the search request.
hit_id :: Lens' Hit (Maybe Text)

-- | The highlights returned from a document that matches the search
--   request.
hit_highlights :: Lens' Hit (Maybe (HashMap Text Text))

-- | The fields returned from a document that matches the search request.
hit_fields :: Lens' Hit (Maybe (HashMap Text [Text]))
instance GHC.Generics.Generic Network.AWS.CloudSearchDomains.Types.Hit.Hit
instance GHC.Show.Show Network.AWS.CloudSearchDomains.Types.Hit.Hit
instance GHC.Read.Read Network.AWS.CloudSearchDomains.Types.Hit.Hit
instance GHC.Classes.Eq Network.AWS.CloudSearchDomains.Types.Hit.Hit
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudSearchDomains.Types.Hit.Hit
instance Data.Hashable.Class.Hashable Network.AWS.CloudSearchDomains.Types.Hit.Hit
instance Control.DeepSeq.NFData Network.AWS.CloudSearchDomains.Types.Hit.Hit


module Network.AWS.CloudSearchDomains.Types.Hits

-- | The collection of documents that match the search request.
--   
--   <i>See:</i> <a>newHits</a> smart constructor.
data Hits
Hits' :: Maybe Text -> Maybe [Hit] -> Maybe Integer -> Maybe Integer -> Hits

-- | A cursor that can be used to retrieve the next set of matching
--   documents when you want to page through a large result set.
[$sel:cursor:Hits'] :: Hits -> Maybe Text

-- | A document that matches the search request.
[$sel:hit:Hits'] :: Hits -> Maybe [Hit]

-- | The index of the first matching document.
[$sel:start:Hits'] :: Hits -> Maybe Integer

-- | The total number of documents that match the search request.
[$sel:found:Hits'] :: Hits -> Maybe Integer

-- | Create a value of <a>Hits</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cursor:Hits'</a>, <a>hits_cursor</a> - A cursor that can be
--   used to retrieve the next set of matching documents when you want to
--   page through a large result set.
--   
--   <a>$sel:hit:Hits'</a>, <a>hits_hit</a> - A document that matches the
--   search request.
--   
--   <a>$sel:start:Hits'</a>, <a>hits_start</a> - The index of the first
--   matching document.
--   
--   <a>$sel:found:Hits'</a>, <a>hits_found</a> - The total number of
--   documents that match the search request.
newHits :: Hits

-- | A cursor that can be used to retrieve the next set of matching
--   documents when you want to page through a large result set.
hits_cursor :: Lens' Hits (Maybe Text)

-- | A document that matches the search request.
hits_hit :: Lens' Hits (Maybe [Hit])

-- | The index of the first matching document.
hits_start :: Lens' Hits (Maybe Integer)

-- | The total number of documents that match the search request.
hits_found :: Lens' Hits (Maybe Integer)
instance GHC.Generics.Generic Network.AWS.CloudSearchDomains.Types.Hits.Hits
instance GHC.Show.Show Network.AWS.CloudSearchDomains.Types.Hits.Hits
instance GHC.Read.Read Network.AWS.CloudSearchDomains.Types.Hits.Hits
instance GHC.Classes.Eq Network.AWS.CloudSearchDomains.Types.Hits.Hits
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudSearchDomains.Types.Hits.Hits
instance Data.Hashable.Class.Hashable Network.AWS.CloudSearchDomains.Types.Hits.Hits
instance Control.DeepSeq.NFData Network.AWS.CloudSearchDomains.Types.Hits.Hits


module Network.AWS.CloudSearchDomains.Types.QueryParser
newtype QueryParser
QueryParser' :: Text -> QueryParser
[fromQueryParser] :: QueryParser -> Text
pattern QueryParser_Dismax :: QueryParser
pattern QueryParser_Lucene :: QueryParser
pattern QueryParser_Simple :: QueryParser
pattern QueryParser_Structured :: QueryParser
instance Network.AWS.Data.XML.ToXML Network.AWS.CloudSearchDomains.Types.QueryParser.QueryParser
instance Network.AWS.Data.XML.FromXML Network.AWS.CloudSearchDomains.Types.QueryParser.QueryParser
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CloudSearchDomains.Types.QueryParser.QueryParser
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudSearchDomains.Types.QueryParser.QueryParser
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CloudSearchDomains.Types.QueryParser.QueryParser
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudSearchDomains.Types.QueryParser.QueryParser
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudSearchDomains.Types.QueryParser.QueryParser
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CloudSearchDomains.Types.QueryParser.QueryParser
instance Network.AWS.Data.Log.ToLog Network.AWS.CloudSearchDomains.Types.QueryParser.QueryParser
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CloudSearchDomains.Types.QueryParser.QueryParser
instance Network.AWS.Data.Text.ToText Network.AWS.CloudSearchDomains.Types.QueryParser.QueryParser
instance Network.AWS.Data.Text.FromText Network.AWS.CloudSearchDomains.Types.QueryParser.QueryParser
instance Control.DeepSeq.NFData Network.AWS.CloudSearchDomains.Types.QueryParser.QueryParser
instance Data.Hashable.Class.Hashable Network.AWS.CloudSearchDomains.Types.QueryParser.QueryParser
instance GHC.Generics.Generic Network.AWS.CloudSearchDomains.Types.QueryParser.QueryParser
instance GHC.Classes.Ord Network.AWS.CloudSearchDomains.Types.QueryParser.QueryParser
instance GHC.Classes.Eq Network.AWS.CloudSearchDomains.Types.QueryParser.QueryParser
instance GHC.Read.Read Network.AWS.CloudSearchDomains.Types.QueryParser.QueryParser
instance GHC.Show.Show Network.AWS.CloudSearchDomains.Types.QueryParser.QueryParser


module Network.AWS.CloudSearchDomains.Types.SearchStatus

-- | Contains the resource id (<tt>rid</tt>) and the time it took to
--   process the request (<tt>timems</tt>).
--   
--   <i>See:</i> <a>newSearchStatus</a> smart constructor.
data SearchStatus
SearchStatus' :: Maybe Text -> Maybe Integer -> SearchStatus

-- | The encrypted resource ID for the request.
[$sel:rid:SearchStatus'] :: SearchStatus -> Maybe Text

-- | How long it took to process the request, in milliseconds.
[$sel:timems:SearchStatus'] :: SearchStatus -> Maybe Integer

-- | Create a value of <a>SearchStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:rid:SearchStatus'</a>, <a>searchStatus_rid</a> - The encrypted
--   resource ID for the request.
--   
--   <a>$sel:timems:SearchStatus'</a>, <a>searchStatus_timems</a> - How
--   long it took to process the request, in milliseconds.
newSearchStatus :: SearchStatus

-- | The encrypted resource ID for the request.
searchStatus_rid :: Lens' SearchStatus (Maybe Text)

-- | How long it took to process the request, in milliseconds.
searchStatus_timems :: Lens' SearchStatus (Maybe Integer)
instance GHC.Generics.Generic Network.AWS.CloudSearchDomains.Types.SearchStatus.SearchStatus
instance GHC.Show.Show Network.AWS.CloudSearchDomains.Types.SearchStatus.SearchStatus
instance GHC.Read.Read Network.AWS.CloudSearchDomains.Types.SearchStatus.SearchStatus
instance GHC.Classes.Eq Network.AWS.CloudSearchDomains.Types.SearchStatus.SearchStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudSearchDomains.Types.SearchStatus.SearchStatus
instance Data.Hashable.Class.Hashable Network.AWS.CloudSearchDomains.Types.SearchStatus.SearchStatus
instance Control.DeepSeq.NFData Network.AWS.CloudSearchDomains.Types.SearchStatus.SearchStatus


module Network.AWS.CloudSearchDomains.Types.SuggestStatus

-- | Contains the resource id (<tt>rid</tt>) and the time it took to
--   process the request (<tt>timems</tt>).
--   
--   <i>See:</i> <a>newSuggestStatus</a> smart constructor.
data SuggestStatus
SuggestStatus' :: Maybe Text -> Maybe Integer -> SuggestStatus

-- | The encrypted resource ID for the request.
[$sel:rid:SuggestStatus'] :: SuggestStatus -> Maybe Text

-- | How long it took to process the request, in milliseconds.
[$sel:timems:SuggestStatus'] :: SuggestStatus -> Maybe Integer

-- | Create a value of <a>SuggestStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:rid:SuggestStatus'</a>, <a>suggestStatus_rid</a> - The
--   encrypted resource ID for the request.
--   
--   <a>$sel:timems:SuggestStatus'</a>, <a>suggestStatus_timems</a> - How
--   long it took to process the request, in milliseconds.
newSuggestStatus :: SuggestStatus

-- | The encrypted resource ID for the request.
suggestStatus_rid :: Lens' SuggestStatus (Maybe Text)

-- | How long it took to process the request, in milliseconds.
suggestStatus_timems :: Lens' SuggestStatus (Maybe Integer)
instance GHC.Generics.Generic Network.AWS.CloudSearchDomains.Types.SuggestStatus.SuggestStatus
instance GHC.Show.Show Network.AWS.CloudSearchDomains.Types.SuggestStatus.SuggestStatus
instance GHC.Read.Read Network.AWS.CloudSearchDomains.Types.SuggestStatus.SuggestStatus
instance GHC.Classes.Eq Network.AWS.CloudSearchDomains.Types.SuggestStatus.SuggestStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudSearchDomains.Types.SuggestStatus.SuggestStatus
instance Data.Hashable.Class.Hashable Network.AWS.CloudSearchDomains.Types.SuggestStatus.SuggestStatus
instance Control.DeepSeq.NFData Network.AWS.CloudSearchDomains.Types.SuggestStatus.SuggestStatus


module Network.AWS.CloudSearchDomains.Types.SuggestionMatch

-- | An autocomplete suggestion that matches the query string specified in
--   a <tt>SuggestRequest</tt>.
--   
--   <i>See:</i> <a>newSuggestionMatch</a> smart constructor.
data SuggestionMatch
SuggestionMatch' :: Maybe Text -> Maybe Integer -> Maybe Text -> SuggestionMatch

-- | The string that matches the query string specified in the
--   <tt>SuggestRequest</tt>.
[$sel:suggestion:SuggestionMatch'] :: SuggestionMatch -> Maybe Text

-- | The relevance score of a suggested match.
[$sel:score:SuggestionMatch'] :: SuggestionMatch -> Maybe Integer

-- | The document ID of the suggested document.
[$sel:id:SuggestionMatch'] :: SuggestionMatch -> Maybe Text

-- | Create a value of <a>SuggestionMatch</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:suggestion:SuggestionMatch'</a>,
--   <a>suggestionMatch_suggestion</a> - The string that matches the query
--   string specified in the <tt>SuggestRequest</tt>.
--   
--   <a>$sel:score:SuggestionMatch'</a>, <a>suggestionMatch_score</a> - The
--   relevance score of a suggested match.
--   
--   <a>$sel:id:SuggestionMatch'</a>, <a>suggestionMatch_id</a> - The
--   document ID of the suggested document.
newSuggestionMatch :: SuggestionMatch

-- | The string that matches the query string specified in the
--   <tt>SuggestRequest</tt>.
suggestionMatch_suggestion :: Lens' SuggestionMatch (Maybe Text)

-- | The relevance score of a suggested match.
suggestionMatch_score :: Lens' SuggestionMatch (Maybe Integer)

-- | The document ID of the suggested document.
suggestionMatch_id :: Lens' SuggestionMatch (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CloudSearchDomains.Types.SuggestionMatch.SuggestionMatch
instance GHC.Show.Show Network.AWS.CloudSearchDomains.Types.SuggestionMatch.SuggestionMatch
instance GHC.Read.Read Network.AWS.CloudSearchDomains.Types.SuggestionMatch.SuggestionMatch
instance GHC.Classes.Eq Network.AWS.CloudSearchDomains.Types.SuggestionMatch.SuggestionMatch
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudSearchDomains.Types.SuggestionMatch.SuggestionMatch
instance Data.Hashable.Class.Hashable Network.AWS.CloudSearchDomains.Types.SuggestionMatch.SuggestionMatch
instance Control.DeepSeq.NFData Network.AWS.CloudSearchDomains.Types.SuggestionMatch.SuggestionMatch


module Network.AWS.CloudSearchDomains.Types.SuggestModel

-- | Container for the suggestion information returned in a
--   <tt>SuggestResponse</tt>.
--   
--   <i>See:</i> <a>newSuggestModel</a> smart constructor.
data SuggestModel
SuggestModel' :: Maybe Integer -> Maybe [SuggestionMatch] -> Maybe Text -> SuggestModel

-- | The number of documents that were found to match the query string.
[$sel:found:SuggestModel'] :: SuggestModel -> Maybe Integer

-- | The documents that match the query string.
[$sel:suggestions:SuggestModel'] :: SuggestModel -> Maybe [SuggestionMatch]

-- | The query string specified in the suggest request.
[$sel:query:SuggestModel'] :: SuggestModel -> Maybe Text

-- | Create a value of <a>SuggestModel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:found:SuggestModel'</a>, <a>suggestModel_found</a> - The
--   number of documents that were found to match the query string.
--   
--   <a>$sel:suggestions:SuggestModel'</a>, <a>suggestModel_suggestions</a>
--   - The documents that match the query string.
--   
--   <a>$sel:query:SuggestModel'</a>, <a>suggestModel_query</a> - The query
--   string specified in the suggest request.
newSuggestModel :: SuggestModel

-- | The number of documents that were found to match the query string.
suggestModel_found :: Lens' SuggestModel (Maybe Integer)

-- | The documents that match the query string.
suggestModel_suggestions :: Lens' SuggestModel (Maybe [SuggestionMatch])

-- | The query string specified in the suggest request.
suggestModel_query :: Lens' SuggestModel (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CloudSearchDomains.Types.SuggestModel.SuggestModel
instance GHC.Show.Show Network.AWS.CloudSearchDomains.Types.SuggestModel.SuggestModel
instance GHC.Read.Read Network.AWS.CloudSearchDomains.Types.SuggestModel.SuggestModel
instance GHC.Classes.Eq Network.AWS.CloudSearchDomains.Types.SuggestModel.SuggestModel
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudSearchDomains.Types.SuggestModel.SuggestModel
instance Data.Hashable.Class.Hashable Network.AWS.CloudSearchDomains.Types.SuggestModel.SuggestModel
instance Control.DeepSeq.NFData Network.AWS.CloudSearchDomains.Types.SuggestModel.SuggestModel


module Network.AWS.CloudSearchDomains.Types

-- | API version <tt>2013-01-01</tt> of the Amazon CloudSearch Domain SDK
--   configuration.
defaultService :: Service

-- | Information about any problems encountered while processing an upload
--   request.
_DocumentServiceException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Information about any problems encountered while processing a search
--   request.
_SearchException :: AsError a => Getting (First ServiceError) a ServiceError
newtype ContentType
ContentType' :: Text -> ContentType
[fromContentType] :: ContentType -> Text
pattern ContentType_Application_json :: ContentType
pattern ContentType_Application_xml :: ContentType
newtype QueryParser
QueryParser' :: Text -> QueryParser
[fromQueryParser] :: QueryParser -> Text
pattern QueryParser_Dismax :: QueryParser
pattern QueryParser_Lucene :: QueryParser
pattern QueryParser_Simple :: QueryParser
pattern QueryParser_Structured :: QueryParser

-- | A container for facet information.
--   
--   <i>See:</i> <a>newBucket</a> smart constructor.
data Bucket
Bucket' :: Maybe Text -> Maybe Integer -> Bucket

-- | The facet value being counted.
[$sel:value:Bucket'] :: Bucket -> Maybe Text

-- | The number of hits that contain the facet value in the specified facet
--   field.
[$sel:count:Bucket'] :: Bucket -> Maybe Integer

-- | Create a value of <a>Bucket</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:Bucket'</a>, <a>bucket_value</a> - The facet value being
--   counted.
--   
--   <a>$sel:count:Bucket'</a>, <a>bucket_count</a> - The number of hits
--   that contain the facet value in the specified facet field.
newBucket :: Bucket

-- | The facet value being counted.
bucket_value :: Lens' Bucket (Maybe Text)

-- | The number of hits that contain the facet value in the specified facet
--   field.
bucket_count :: Lens' Bucket (Maybe Integer)

-- | A container for the calculated facet values and counts.
--   
--   <i>See:</i> <a>newBucketInfo</a> smart constructor.
data BucketInfo
BucketInfo' :: Maybe [Bucket] -> BucketInfo

-- | A list of the calculated facet values and counts.
[$sel:buckets:BucketInfo'] :: BucketInfo -> Maybe [Bucket]

-- | Create a value of <a>BucketInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:buckets:BucketInfo'</a>, <a>bucketInfo_buckets</a> - A list of
--   the calculated facet values and counts.
newBucketInfo :: BucketInfo

-- | A list of the calculated facet values and counts.
bucketInfo_buckets :: Lens' BucketInfo (Maybe [Bucket])

-- | A warning returned by the document service when an issue is discovered
--   while processing an upload request.
--   
--   <i>See:</i> <a>newDocumentServiceWarning</a> smart constructor.
data DocumentServiceWarning
DocumentServiceWarning' :: Maybe Text -> DocumentServiceWarning

-- | The description for a warning returned by the document service.
[$sel:message:DocumentServiceWarning'] :: DocumentServiceWarning -> Maybe Text

-- | Create a value of <a>DocumentServiceWarning</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:message:DocumentServiceWarning'</a>,
--   <a>documentServiceWarning_message</a> - The description for a warning
--   returned by the document service.
newDocumentServiceWarning :: DocumentServiceWarning

-- | The description for a warning returned by the document service.
documentServiceWarning_message :: Lens' DocumentServiceWarning (Maybe Text)

-- | The statistics for a field calculated in the request.
--   
--   <i>See:</i> <a>newFieldStats</a> smart constructor.
data FieldStats
FieldStats' :: Maybe Text -> Maybe Text -> Maybe Integer -> Maybe Integer -> Maybe Double -> Maybe Text -> Maybe Double -> Maybe Double -> FieldStats

-- | The maximum value found in the specified field in the result set.
--   
--   If the field is numeric (<tt>int</tt>, <tt>int-array</tt>,
--   <tt>double</tt>, or <tt>double-array</tt>), <tt>max</tt> is the string
--   representation of a double-precision 64-bit floating point value. If
--   the field is <tt>date</tt> or <tt>date-array</tt>, <tt>max</tt> is the
--   string representation of a date with the format specified in <a>IETF
--   RFC3339</a>: yyyy-mm-ddTHH:mm:ss.SSSZ.
[$sel:max:FieldStats'] :: FieldStats -> Maybe Text

-- | The average of the values found in the specified field in the result
--   set.
--   
--   If the field is numeric (<tt>int</tt>, <tt>int-array</tt>,
--   <tt>double</tt>, or <tt>double-array</tt>), <tt>mean</tt> is the
--   string representation of a double-precision 64-bit floating point
--   value. If the field is <tt>date</tt> or <tt>date-array</tt>,
--   <tt>mean</tt> is the string representation of a date with the format
--   specified in <a>IETF RFC3339</a>: yyyy-mm-ddTHH:mm:ss.SSSZ.
[$sel:mean:FieldStats'] :: FieldStats -> Maybe Text

-- | The number of documents that contain a value in the specified field in
--   the result set.
[$sel:count:FieldStats'] :: FieldStats -> Maybe Integer

-- | The number of documents that do not contain a value in the specified
--   field in the result set.
[$sel:missing:FieldStats'] :: FieldStats -> Maybe Integer

-- | The standard deviation of the values in the specified field in the
--   result set.
[$sel:stddev:FieldStats'] :: FieldStats -> Maybe Double

-- | The minimum value found in the specified field in the result set.
--   
--   If the field is numeric (<tt>int</tt>, <tt>int-array</tt>,
--   <tt>double</tt>, or <tt>double-array</tt>), <tt>min</tt> is the string
--   representation of a double-precision 64-bit floating point value. If
--   the field is <tt>date</tt> or <tt>date-array</tt>, <tt>min</tt> is the
--   string representation of a date with the format specified in <a>IETF
--   RFC3339</a>: yyyy-mm-ddTHH:mm:ss.SSSZ.
[$sel:min:FieldStats'] :: FieldStats -> Maybe Text

-- | The sum of all field values in the result set squared.
[$sel:sumOfSquares:FieldStats'] :: FieldStats -> Maybe Double

-- | The sum of the field values across the documents in the result set.
--   <tt>null</tt> for date fields.
[$sel:sum:FieldStats'] :: FieldStats -> Maybe Double

-- | Create a value of <a>FieldStats</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:max:FieldStats'</a>, <a>fieldStats_max</a> - The maximum value
--   found in the specified field in the result set.
--   
--   If the field is numeric (<tt>int</tt>, <tt>int-array</tt>,
--   <tt>double</tt>, or <tt>double-array</tt>), <tt>max</tt> is the string
--   representation of a double-precision 64-bit floating point value. If
--   the field is <tt>date</tt> or <tt>date-array</tt>, <tt>max</tt> is the
--   string representation of a date with the format specified in <a>IETF
--   RFC3339</a>: yyyy-mm-ddTHH:mm:ss.SSSZ.
--   
--   <a>$sel:mean:FieldStats'</a>, <a>fieldStats_mean</a> - The average of
--   the values found in the specified field in the result set.
--   
--   If the field is numeric (<tt>int</tt>, <tt>int-array</tt>,
--   <tt>double</tt>, or <tt>double-array</tt>), <tt>mean</tt> is the
--   string representation of a double-precision 64-bit floating point
--   value. If the field is <tt>date</tt> or <tt>date-array</tt>,
--   <tt>mean</tt> is the string representation of a date with the format
--   specified in <a>IETF RFC3339</a>: yyyy-mm-ddTHH:mm:ss.SSSZ.
--   
--   <a>$sel:count:FieldStats'</a>, <a>fieldStats_count</a> - The number of
--   documents that contain a value in the specified field in the result
--   set.
--   
--   <a>$sel:missing:FieldStats'</a>, <a>fieldStats_missing</a> - The
--   number of documents that do not contain a value in the specified field
--   in the result set.
--   
--   <a>$sel:stddev:FieldStats'</a>, <a>fieldStats_stddev</a> - The
--   standard deviation of the values in the specified field in the result
--   set.
--   
--   <a>$sel:min:FieldStats'</a>, <a>fieldStats_min</a> - The minimum value
--   found in the specified field in the result set.
--   
--   If the field is numeric (<tt>int</tt>, <tt>int-array</tt>,
--   <tt>double</tt>, or <tt>double-array</tt>), <tt>min</tt> is the string
--   representation of a double-precision 64-bit floating point value. If
--   the field is <tt>date</tt> or <tt>date-array</tt>, <tt>min</tt> is the
--   string representation of a date with the format specified in <a>IETF
--   RFC3339</a>: yyyy-mm-ddTHH:mm:ss.SSSZ.
--   
--   <a>$sel:sumOfSquares:FieldStats'</a>, <a>fieldStats_sumOfSquares</a> -
--   The sum of all field values in the result set squared.
--   
--   <a>$sel:sum:FieldStats'</a>, <a>fieldStats_sum</a> - The sum of the
--   field values across the documents in the result set. <tt>null</tt> for
--   date fields.
newFieldStats :: FieldStats

-- | The maximum value found in the specified field in the result set.
--   
--   If the field is numeric (<tt>int</tt>, <tt>int-array</tt>,
--   <tt>double</tt>, or <tt>double-array</tt>), <tt>max</tt> is the string
--   representation of a double-precision 64-bit floating point value. If
--   the field is <tt>date</tt> or <tt>date-array</tt>, <tt>max</tt> is the
--   string representation of a date with the format specified in <a>IETF
--   RFC3339</a>: yyyy-mm-ddTHH:mm:ss.SSSZ.
fieldStats_max :: Lens' FieldStats (Maybe Text)

-- | The average of the values found in the specified field in the result
--   set.
--   
--   If the field is numeric (<tt>int</tt>, <tt>int-array</tt>,
--   <tt>double</tt>, or <tt>double-array</tt>), <tt>mean</tt> is the
--   string representation of a double-precision 64-bit floating point
--   value. If the field is <tt>date</tt> or <tt>date-array</tt>,
--   <tt>mean</tt> is the string representation of a date with the format
--   specified in <a>IETF RFC3339</a>: yyyy-mm-ddTHH:mm:ss.SSSZ.
fieldStats_mean :: Lens' FieldStats (Maybe Text)

-- | The number of documents that contain a value in the specified field in
--   the result set.
fieldStats_count :: Lens' FieldStats (Maybe Integer)

-- | The number of documents that do not contain a value in the specified
--   field in the result set.
fieldStats_missing :: Lens' FieldStats (Maybe Integer)

-- | The standard deviation of the values in the specified field in the
--   result set.
fieldStats_stddev :: Lens' FieldStats (Maybe Double)

-- | The minimum value found in the specified field in the result set.
--   
--   If the field is numeric (<tt>int</tt>, <tt>int-array</tt>,
--   <tt>double</tt>, or <tt>double-array</tt>), <tt>min</tt> is the string
--   representation of a double-precision 64-bit floating point value. If
--   the field is <tt>date</tt> or <tt>date-array</tt>, <tt>min</tt> is the
--   string representation of a date with the format specified in <a>IETF
--   RFC3339</a>: yyyy-mm-ddTHH:mm:ss.SSSZ.
fieldStats_min :: Lens' FieldStats (Maybe Text)

-- | The sum of all field values in the result set squared.
fieldStats_sumOfSquares :: Lens' FieldStats (Maybe Double)

-- | The sum of the field values across the documents in the result set.
--   <tt>null</tt> for date fields.
fieldStats_sum :: Lens' FieldStats (Maybe Double)

-- | Information about a document that matches the search request.
--   
--   <i>See:</i> <a>newHit</a> smart constructor.
data Hit
Hit' :: Maybe (HashMap Text Text) -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe (HashMap Text [Text]) -> Hit

-- | The expressions returned from a document that matches the search
--   request.
[$sel:exprs:Hit'] :: Hit -> Maybe (HashMap Text Text)

-- | The document ID of a document that matches the search request.
[$sel:id:Hit'] :: Hit -> Maybe Text

-- | The highlights returned from a document that matches the search
--   request.
[$sel:highlights:Hit'] :: Hit -> Maybe (HashMap Text Text)

-- | The fields returned from a document that matches the search request.
[$sel:fields:Hit'] :: Hit -> Maybe (HashMap Text [Text])

-- | Create a value of <a>Hit</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:exprs:Hit'</a>, <a>hit_exprs</a> - The expressions returned
--   from a document that matches the search request.
--   
--   <a>$sel:id:Hit'</a>, <a>hit_id</a> - The document ID of a document
--   that matches the search request.
--   
--   <a>$sel:highlights:Hit'</a>, <a>hit_highlights</a> - The highlights
--   returned from a document that matches the search request.
--   
--   <a>$sel:fields:Hit'</a>, <a>hit_fields</a> - The fields returned from
--   a document that matches the search request.
newHit :: Hit

-- | The expressions returned from a document that matches the search
--   request.
hit_exprs :: Lens' Hit (Maybe (HashMap Text Text))

-- | The document ID of a document that matches the search request.
hit_id :: Lens' Hit (Maybe Text)

-- | The highlights returned from a document that matches the search
--   request.
hit_highlights :: Lens' Hit (Maybe (HashMap Text Text))

-- | The fields returned from a document that matches the search request.
hit_fields :: Lens' Hit (Maybe (HashMap Text [Text]))

-- | The collection of documents that match the search request.
--   
--   <i>See:</i> <a>newHits</a> smart constructor.
data Hits
Hits' :: Maybe Text -> Maybe [Hit] -> Maybe Integer -> Maybe Integer -> Hits

-- | A cursor that can be used to retrieve the next set of matching
--   documents when you want to page through a large result set.
[$sel:cursor:Hits'] :: Hits -> Maybe Text

-- | A document that matches the search request.
[$sel:hit:Hits'] :: Hits -> Maybe [Hit]

-- | The index of the first matching document.
[$sel:start:Hits'] :: Hits -> Maybe Integer

-- | The total number of documents that match the search request.
[$sel:found:Hits'] :: Hits -> Maybe Integer

-- | Create a value of <a>Hits</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cursor:Hits'</a>, <a>hits_cursor</a> - A cursor that can be
--   used to retrieve the next set of matching documents when you want to
--   page through a large result set.
--   
--   <a>$sel:hit:Hits'</a>, <a>hits_hit</a> - A document that matches the
--   search request.
--   
--   <a>$sel:start:Hits'</a>, <a>hits_start</a> - The index of the first
--   matching document.
--   
--   <a>$sel:found:Hits'</a>, <a>hits_found</a> - The total number of
--   documents that match the search request.
newHits :: Hits

-- | A cursor that can be used to retrieve the next set of matching
--   documents when you want to page through a large result set.
hits_cursor :: Lens' Hits (Maybe Text)

-- | A document that matches the search request.
hits_hit :: Lens' Hits (Maybe [Hit])

-- | The index of the first matching document.
hits_start :: Lens' Hits (Maybe Integer)

-- | The total number of documents that match the search request.
hits_found :: Lens' Hits (Maybe Integer)

-- | Contains the resource id (<tt>rid</tt>) and the time it took to
--   process the request (<tt>timems</tt>).
--   
--   <i>See:</i> <a>newSearchStatus</a> smart constructor.
data SearchStatus
SearchStatus' :: Maybe Text -> Maybe Integer -> SearchStatus

-- | The encrypted resource ID for the request.
[$sel:rid:SearchStatus'] :: SearchStatus -> Maybe Text

-- | How long it took to process the request, in milliseconds.
[$sel:timems:SearchStatus'] :: SearchStatus -> Maybe Integer

-- | Create a value of <a>SearchStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:rid:SearchStatus'</a>, <a>searchStatus_rid</a> - The encrypted
--   resource ID for the request.
--   
--   <a>$sel:timems:SearchStatus'</a>, <a>searchStatus_timems</a> - How
--   long it took to process the request, in milliseconds.
newSearchStatus :: SearchStatus

-- | The encrypted resource ID for the request.
searchStatus_rid :: Lens' SearchStatus (Maybe Text)

-- | How long it took to process the request, in milliseconds.
searchStatus_timems :: Lens' SearchStatus (Maybe Integer)

-- | Container for the suggestion information returned in a
--   <tt>SuggestResponse</tt>.
--   
--   <i>See:</i> <a>newSuggestModel</a> smart constructor.
data SuggestModel
SuggestModel' :: Maybe Integer -> Maybe [SuggestionMatch] -> Maybe Text -> SuggestModel

-- | The number of documents that were found to match the query string.
[$sel:found:SuggestModel'] :: SuggestModel -> Maybe Integer

-- | The documents that match the query string.
[$sel:suggestions:SuggestModel'] :: SuggestModel -> Maybe [SuggestionMatch]

-- | The query string specified in the suggest request.
[$sel:query:SuggestModel'] :: SuggestModel -> Maybe Text

-- | Create a value of <a>SuggestModel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:found:SuggestModel'</a>, <a>suggestModel_found</a> - The
--   number of documents that were found to match the query string.
--   
--   <a>$sel:suggestions:SuggestModel'</a>, <a>suggestModel_suggestions</a>
--   - The documents that match the query string.
--   
--   <a>$sel:query:SuggestModel'</a>, <a>suggestModel_query</a> - The query
--   string specified in the suggest request.
newSuggestModel :: SuggestModel

-- | The number of documents that were found to match the query string.
suggestModel_found :: Lens' SuggestModel (Maybe Integer)

-- | The documents that match the query string.
suggestModel_suggestions :: Lens' SuggestModel (Maybe [SuggestionMatch])

-- | The query string specified in the suggest request.
suggestModel_query :: Lens' SuggestModel (Maybe Text)

-- | Contains the resource id (<tt>rid</tt>) and the time it took to
--   process the request (<tt>timems</tt>).
--   
--   <i>See:</i> <a>newSuggestStatus</a> smart constructor.
data SuggestStatus
SuggestStatus' :: Maybe Text -> Maybe Integer -> SuggestStatus

-- | The encrypted resource ID for the request.
[$sel:rid:SuggestStatus'] :: SuggestStatus -> Maybe Text

-- | How long it took to process the request, in milliseconds.
[$sel:timems:SuggestStatus'] :: SuggestStatus -> Maybe Integer

-- | Create a value of <a>SuggestStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:rid:SuggestStatus'</a>, <a>suggestStatus_rid</a> - The
--   encrypted resource ID for the request.
--   
--   <a>$sel:timems:SuggestStatus'</a>, <a>suggestStatus_timems</a> - How
--   long it took to process the request, in milliseconds.
newSuggestStatus :: SuggestStatus

-- | The encrypted resource ID for the request.
suggestStatus_rid :: Lens' SuggestStatus (Maybe Text)

-- | How long it took to process the request, in milliseconds.
suggestStatus_timems :: Lens' SuggestStatus (Maybe Integer)

-- | An autocomplete suggestion that matches the query string specified in
--   a <tt>SuggestRequest</tt>.
--   
--   <i>See:</i> <a>newSuggestionMatch</a> smart constructor.
data SuggestionMatch
SuggestionMatch' :: Maybe Text -> Maybe Integer -> Maybe Text -> SuggestionMatch

-- | The string that matches the query string specified in the
--   <tt>SuggestRequest</tt>.
[$sel:suggestion:SuggestionMatch'] :: SuggestionMatch -> Maybe Text

-- | The relevance score of a suggested match.
[$sel:score:SuggestionMatch'] :: SuggestionMatch -> Maybe Integer

-- | The document ID of the suggested document.
[$sel:id:SuggestionMatch'] :: SuggestionMatch -> Maybe Text

-- | Create a value of <a>SuggestionMatch</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:suggestion:SuggestionMatch'</a>,
--   <a>suggestionMatch_suggestion</a> - The string that matches the query
--   string specified in the <tt>SuggestRequest</tt>.
--   
--   <a>$sel:score:SuggestionMatch'</a>, <a>suggestionMatch_score</a> - The
--   relevance score of a suggested match.
--   
--   <a>$sel:id:SuggestionMatch'</a>, <a>suggestionMatch_id</a> - The
--   document ID of the suggested document.
newSuggestionMatch :: SuggestionMatch

-- | The string that matches the query string specified in the
--   <tt>SuggestRequest</tt>.
suggestionMatch_suggestion :: Lens' SuggestionMatch (Maybe Text)

-- | The relevance score of a suggested match.
suggestionMatch_score :: Lens' SuggestionMatch (Maybe Integer)

-- | The document ID of the suggested document.
suggestionMatch_id :: Lens' SuggestionMatch (Maybe Text)


-- | Retrieves autocomplete suggestions for a partial query string. You can
--   use suggestions enable you to display likely matches before users
--   finish typing. In Amazon CloudSearch, suggestions are based on the
--   contents of a particular text field. When you request suggestions,
--   Amazon CloudSearch finds all of the documents whose values in the
--   suggester field start with the specified query string. The beginning
--   of the field must match the query string to be considered a match.
--   
--   For more information about configuring suggesters and retrieving
--   suggestions, see <a>Getting Suggestions</a> in the <i>Amazon
--   CloudSearch Developer Guide</i>.
--   
--   The endpoint for submitting <tt>Suggest</tt> requests is
--   domain-specific. You submit suggest requests to a domain's search
--   endpoint. To get the search endpoint for your domain, use the Amazon
--   CloudSearch configuration service <tt>DescribeDomains</tt> action. A
--   domain's endpoints are also displayed on the domain dashboard in the
--   Amazon CloudSearch console.
module Network.AWS.CloudSearchDomains.Suggest

-- | Container for the parameters to the <tt>Suggest</tt> request.
--   
--   <i>See:</i> <a>newSuggest</a> smart constructor.
data Suggest
Suggest' :: Maybe Integer -> Text -> Text -> Suggest

-- | Specifies the maximum number of suggestions to return.
[$sel:size:Suggest'] :: Suggest -> Maybe Integer

-- | Specifies the string for which you want to get suggestions.
[$sel:query:Suggest'] :: Suggest -> Text

-- | Specifies the name of the suggester to use to find suggested matches.
[$sel:suggester:Suggest'] :: Suggest -> Text

-- | Create a value of <a>Suggest</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:size:Suggest'</a>, <a>suggest_size</a> - Specifies the maximum
--   number of suggestions to return.
--   
--   <a>$sel:query:Suggest'</a>, <a>suggest_query</a> - Specifies the
--   string for which you want to get suggestions.
--   
--   <a>$sel:suggester:Suggest'</a>, <a>suggest_suggester</a> - Specifies
--   the name of the suggester to use to find suggested matches.
newSuggest :: Text -> Text -> Suggest

-- | Specifies the maximum number of suggestions to return.
suggest_size :: Lens' Suggest (Maybe Integer)

-- | Specifies the string for which you want to get suggestions.
suggest_query :: Lens' Suggest Text

-- | Specifies the name of the suggester to use to find suggested matches.
suggest_suggester :: Lens' Suggest Text

-- | Contains the response to a <tt>Suggest</tt> request.
--   
--   <i>See:</i> <a>newSuggestResponse</a> smart constructor.
data SuggestResponse
SuggestResponse' :: Maybe SuggestModel -> Maybe SuggestStatus -> Int -> SuggestResponse

-- | Container for the matching search suggestion information.
[$sel:suggest:SuggestResponse'] :: SuggestResponse -> Maybe SuggestModel

-- | The status of a <tt>SuggestRequest</tt>. Contains the resource ID
--   (<tt>rid</tt>) and how long it took to process the request
--   (<tt>timems</tt>).
[$sel:status:SuggestResponse'] :: SuggestResponse -> Maybe SuggestStatus

-- | The response's http status code.
[$sel:httpStatus:SuggestResponse'] :: SuggestResponse -> Int

-- | Create a value of <a>SuggestResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:suggest:SuggestResponse'</a>, <a>suggestResponse_suggest</a> -
--   Container for the matching search suggestion information.
--   
--   <a>$sel:status:SuggestResponse'</a>, <a>suggestResponse_status</a> -
--   The status of a <tt>SuggestRequest</tt>. Contains the resource ID
--   (<tt>rid</tt>) and how long it took to process the request
--   (<tt>timems</tt>).
--   
--   <a>$sel:httpStatus:SuggestResponse'</a>,
--   <a>suggestResponse_httpStatus</a> - The response's http status code.
newSuggestResponse :: Int -> SuggestResponse

-- | Container for the matching search suggestion information.
suggestResponse_suggest :: Lens' SuggestResponse (Maybe SuggestModel)

-- | The status of a <tt>SuggestRequest</tt>. Contains the resource ID
--   (<tt>rid</tt>) and how long it took to process the request
--   (<tt>timems</tt>).
suggestResponse_status :: Lens' SuggestResponse (Maybe SuggestStatus)

-- | The response's http status code.
suggestResponse_httpStatus :: Lens' SuggestResponse Int
instance GHC.Generics.Generic Network.AWS.CloudSearchDomains.Suggest.Suggest
instance GHC.Show.Show Network.AWS.CloudSearchDomains.Suggest.Suggest
instance GHC.Read.Read Network.AWS.CloudSearchDomains.Suggest.Suggest
instance GHC.Classes.Eq Network.AWS.CloudSearchDomains.Suggest.Suggest
instance GHC.Generics.Generic Network.AWS.CloudSearchDomains.Suggest.SuggestResponse
instance GHC.Show.Show Network.AWS.CloudSearchDomains.Suggest.SuggestResponse
instance GHC.Read.Read Network.AWS.CloudSearchDomains.Suggest.SuggestResponse
instance GHC.Classes.Eq Network.AWS.CloudSearchDomains.Suggest.SuggestResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudSearchDomains.Suggest.Suggest
instance Control.DeepSeq.NFData Network.AWS.CloudSearchDomains.Suggest.SuggestResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudSearchDomains.Suggest.Suggest
instance Control.DeepSeq.NFData Network.AWS.CloudSearchDomains.Suggest.Suggest
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudSearchDomains.Suggest.Suggest
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudSearchDomains.Suggest.Suggest
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudSearchDomains.Suggest.Suggest


-- | Retrieves a list of documents that match the specified search
--   criteria. How you specify the search criteria depends on which query
--   parser you use. Amazon CloudSearch supports four query parsers:
--   
--   <ul>
--   <li><tt>simple</tt>: search all <tt>text</tt> and <tt>text-array</tt>
--   fields for the specified string. Search for phrases, individual terms,
--   and prefixes.</li>
--   <li><tt>structured</tt>: search specific fields, construct compound
--   queries using Boolean operators, and use advanced features such as
--   term boosting and proximity searching.</li>
--   <li><tt>lucene</tt>: specify search criteria using the Apache Lucene
--   query parser syntax.</li>
--   <li><tt>dismax</tt>: specify search criteria using the simplified
--   subset of the Apache Lucene query parser syntax defined by the DisMax
--   query parser.</li>
--   </ul>
--   
--   For more information, see <a>Searching Your Data</a> in the <i>Amazon
--   CloudSearch Developer Guide</i>.
--   
--   The endpoint for submitting <tt>Search</tt> requests is
--   domain-specific. You submit search requests to a domain's search
--   endpoint. To get the search endpoint for your domain, use the Amazon
--   CloudSearch configuration service <tt>DescribeDomains</tt> action. A
--   domain's endpoints are also displayed on the domain dashboard in the
--   Amazon CloudSearch console.
module Network.AWS.CloudSearchDomains.Search

-- | Container for the parameters to the <tt>Search</tt> request.
--   
--   <i>See:</i> <a>newSearch</a> smart constructor.
data Search
Search' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Integer -> Maybe QueryParser -> Maybe Integer -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Text -> Search

-- | Defines one or more numeric expressions that can be used to sort
--   results or specify search or filter criteria. You can also specify
--   expressions as return fields.
--   
--   You specify the expressions in JSON using the form
--   <tt>{"EXPRESSIONNAME":"EXPRESSION"}</tt>. You can define and use
--   multiple expressions in a search request. For example:
--   
--   <pre>
--   {"expression1":"_score*rating", "expression2":"(1/rank)*year"}
--   </pre>
--   
--   For information about the variables, operators, and functions you can
--   use in expressions, see <a>Writing Expressions</a> in the <i>Amazon
--   CloudSearch Developer Guide</i>.
[$sel:expr:Search'] :: Search -> Maybe Text

-- | Retrieves a cursor value you can use to page through large result
--   sets. Use the <tt>size</tt> parameter to control the number of hits to
--   include in each response. You can specify either the <tt>cursor</tt>
--   or <tt>start</tt> parameter in a request; they are mutually exclusive.
--   To get the first cursor, set the cursor value to <tt>initial</tt>. In
--   subsequent requests, specify the cursor value returned in the hits
--   section of the response.
--   
--   For more information, see <a>Paginating Results</a> in the <i>Amazon
--   CloudSearch Developer Guide</i>.
[$sel:cursor:Search'] :: Search -> Maybe Text

-- | Specifies the field and expression values to include in the response.
--   Multiple fields or expressions are specified as a comma-separated
--   list. By default, a search response includes all return enabled fields
--   (<tt>_all_fields</tt>). To return only the document IDs for the
--   matching documents, specify <tt>_no_fields</tt>. To retrieve the
--   relevance score calculated for each document, specify <tt>_score</tt>.
[$sel:return':Search'] :: Search -> Maybe Text

-- | Configures options for the query parser specified in the
--   <tt>queryParser</tt> parameter. You specify the options in JSON using
--   the following form
--   <tt>{"OPTION1":"VALUE1","OPTION2":VALUE2"..."OPTIONN":"VALUEN"}.</tt>
--   
--   The options you can configure vary according to which parser you use:
--   
--   <ul>
--   <li><tt>defaultOperator</tt>: The default operator used to combine
--   individual terms in the search string. For example:
--   <tt>defaultOperator: 'or'</tt>. For the <tt>dismax</tt> parser, you
--   specify a percentage that represents the percentage of terms in the
--   search string (rounded down) that must match, rather than a default
--   operator. A value of <tt>0%</tt> is the equivalent to OR, and a value
--   of <tt>100%</tt> is equivalent to AND. The percentage must be
--   specified as a value in the range 0-100 followed by the percent (%)
--   symbol. For example, <tt>defaultOperator: 50%</tt>. Valid values:
--   <tt>and</tt>, <tt>or</tt>, a percentage in the range 0%-100%
--   (<tt>dismax</tt>). Default: <tt>and</tt> (<tt>simple</tt>,
--   <tt>structured</tt>, <tt>lucene</tt>) or <tt>100</tt>
--   (<tt>dismax</tt>). Valid for: <tt>simple</tt>, <tt>structured</tt>,
--   <tt>lucene</tt>, and <tt>dismax</tt>.</li>
--   <li><tt>fields</tt>: An array of the fields to search when no fields
--   are specified in a search. If no fields are specified in a search and
--   this option is not specified, all text and text-array fields are
--   searched. You can specify a weight for each field to control the
--   relative importance of each field when Amazon CloudSearch calculates
--   relevance scores. To specify a field weight, append a caret
--   (<tt>^</tt>) symbol and the weight to the field name. For example, to
--   boost the importance of the <tt>title</tt> field over the
--   <tt>description</tt> field you could specify:
--   <tt>"fields":["title^5","description"]</tt>. Valid values: The name of
--   any configured field and an optional numeric value greater than zero.
--   Default: All <tt>text</tt> and <tt>text-array</tt> fields. Valid for:
--   <tt>simple</tt>, <tt>structured</tt>, <tt>lucene</tt>, and
--   <tt>dismax</tt>.</li>
--   <li><tt>operators</tt>: An array of the operators or special
--   characters you want to disable for the simple query parser. If you
--   disable the <tt>and</tt>, <tt>or</tt>, or <tt>not</tt> operators, the
--   corresponding operators (<tt>+</tt>, <tt>|</tt>, <tt>-</tt>) have no
--   special meaning and are dropped from the search string. Similarly,
--   disabling <tt>prefix</tt> disables the wildcard operator (<tt>*</tt>)
--   and disabling <tt>phrase</tt> disables the ability to search for
--   phrases by enclosing phrases in double quotes. Disabling precedence
--   disables the ability to control order of precedence using parentheses.
--   Disabling <tt>near</tt> disables the ability to use the ~ operator to
--   perform a sloppy phrase search. Disabling the <tt>fuzzy</tt> operator
--   disables the ability to use the ~ operator to perform a fuzzy search.
--   <tt>escape</tt> disables the ability to use a backslash (<tt>\</tt>)
--   to escape special characters within the search string. Disabling
--   whitespace is an advanced option that prevents the parser from
--   tokenizing on whitespace, which can be useful for Vietnamese. (It
--   prevents Vietnamese words from being split incorrectly.) For example,
--   you could disable all operators other than the phrase operator to
--   support just simple term and phrase queries:
--   <tt>"operators":["and","not","or", "prefix"]</tt>. Valid values:
--   <tt>and</tt>, <tt>escape</tt>, <tt>fuzzy</tt>, <tt>near</tt>,
--   <tt>not</tt>, <tt>or</tt>, <tt>phrase</tt>, <tt>precedence</tt>,
--   <tt>prefix</tt>, <tt>whitespace</tt>. Default: All operators and
--   special characters are enabled. Valid for: <tt>simple</tt>.</li>
--   <li><tt>phraseFields</tt>: An array of the <tt>text</tt> or
--   <tt>text-array</tt> fields you want to use for phrase searches. When
--   the terms in the search string appear in close proximity within a
--   field, the field scores higher. You can specify a weight for each
--   field to boost that score. The <tt>phraseSlop</tt> option controls how
--   much the matches can deviate from the search string and still be
--   boosted. To specify a field weight, append a caret (<tt>^</tt>) symbol
--   and the weight to the field name. For example, to boost phrase matches
--   in the <tt>title</tt> field over the <tt>abstract</tt> field, you
--   could specify: <tt>"phraseFields":["title^3", "plot"]</tt> Valid
--   values: The name of any <tt>text</tt> or <tt>text-array</tt> field and
--   an optional numeric value greater than zero. Default: No fields. If
--   you don't specify any fields with <tt>phraseFields</tt>, proximity
--   scoring is disabled even if <tt>phraseSlop</tt> is specified. Valid
--   for: <tt>dismax</tt>.</li>
--   <li><tt>phraseSlop</tt>: An integer value that specifies how much
--   matches can deviate from the search phrase and still be boosted
--   according to the weights specified in the <tt>phraseFields</tt>
--   option; for example, <tt>phraseSlop: 2</tt>. You must also specify
--   <tt>phraseFields</tt> to enable proximity scoring. Valid values:
--   positive integers. Default: 0. Valid for: <tt>dismax</tt>.</li>
--   <li><tt>explicitPhraseSlop</tt>: An integer value that specifies how
--   much a match can deviate from the search phrase when the phrase is
--   enclosed in double quotes in the search string. (Phrases that exceed
--   this proximity distance are not considered a match.) For example, to
--   specify a slop of three for dismax phrase queries, you would specify
--   <tt>"explicitPhraseSlop":3</tt>. Valid values: positive integers.
--   Default: 0. Valid for: <tt>dismax</tt>.</li>
--   <li><tt>tieBreaker</tt>: When a term in the search string is found in
--   a document's field, a score is calculated for that field based on how
--   common the word is in that field compared to other documents. If the
--   term occurs in multiple fields within a document, by default only the
--   highest scoring field contributes to the document's overall score. You
--   can specify a <tt>tieBreaker</tt> value to enable the matches in
--   lower-scoring fields to contribute to the document's score. That way,
--   if two documents have the same max field score for a particular term,
--   the score for the document that has matches in more fields will be
--   higher. The formula for calculating the score with a tieBreaker is
--   <tt>(max field score) + (tieBreaker) * (sum of the scores for the rest
--   of the matching fields)</tt>. Set <tt>tieBreaker</tt> to 0 to
--   disregard all but the highest scoring field (pure max):
--   <tt>"tieBreaker":0</tt>. Set to 1 to sum the scores from all fields
--   (pure sum): <tt>"tieBreaker":1</tt>. Valid values: 0.0 to 1.0.
--   Default: 0.0. Valid for: <tt>dismax</tt>.</li>
--   </ul>
[$sel:queryOptions:Search'] :: Search -> Maybe Text

-- | Specifies a structured query that filters the results of a search
--   without affecting how the results are scored and sorted. You use
--   <tt>filterQuery</tt> in conjunction with the <tt>query</tt> parameter
--   to filter the documents that match the constraints specified in the
--   <tt>query</tt> parameter. Specifying a filter controls only which
--   matching documents are included in the results, it has no effect on
--   how they are scored and sorted. The <tt>filterQuery</tt> parameter
--   supports the full structured query syntax.
--   
--   For more information about using filters, see <a>Filtering Matching
--   Documents</a> in the <i>Amazon CloudSearch Developer Guide</i>.
[$sel:filterQuery:Search'] :: Search -> Maybe Text

-- | Specifies the maximum number of search hits to include in the
--   response.
[$sel:size:Search'] :: Search -> Maybe Integer

-- | Specifies which query parser to use to process the request. If
--   <tt>queryParser</tt> is not specified, Amazon CloudSearch uses the
--   <tt>simple</tt> query parser.
--   
--   Amazon CloudSearch supports four query parsers:
--   
--   <ul>
--   <li><tt>simple</tt>: perform simple searches of <tt>text</tt> and
--   <tt>text-array</tt> fields. By default, the <tt>simple</tt> query
--   parser searches all <tt>text</tt> and <tt>text-array</tt> fields. You
--   can specify which fields to search by with the <tt>queryOptions</tt>
--   parameter. If you prefix a search term with a plus sign (+) documents
--   must contain the term to be considered a match. (This is the default,
--   unless you configure the default operator with the
--   <tt>queryOptions</tt> parameter.) You can use the <tt>-</tt> (NOT),
--   <tt>|</tt> (OR), and <tt>*</tt> (wildcard) operators to exclude
--   particular terms, find results that match any of the specified terms,
--   or search for a prefix. To search for a phrase rather than individual
--   terms, enclose the phrase in double quotes. For more information, see
--   <a>Searching for Text</a> in the <i>Amazon CloudSearch Developer
--   Guide</i>.</li>
--   <li><tt>structured</tt>: perform advanced searches by combining
--   multiple expressions to define the search criteria. You can also
--   search within particular fields, search for values and ranges of
--   values, and use advanced options such as term boosting,
--   <tt>matchall</tt>, and <tt>near</tt>. For more information, see
--   <a>Constructing Compound Queries</a> in the <i>Amazon CloudSearch
--   Developer Guide</i>.</li>
--   <li><tt>lucene</tt>: search using the Apache Lucene query parser
--   syntax. For more information, see <a>Apache Lucene Query Parser
--   Syntax</a>.</li>
--   <li><tt>dismax</tt>: search using the simplified subset of the Apache
--   Lucene query parser syntax defined by the DisMax query parser. For
--   more information, see <a>DisMax Query Parser Syntax</a>.</li>
--   </ul>
[$sel:queryParser:Search'] :: Search -> Maybe QueryParser

-- | Specifies the offset of the first search hit you want to return. Note
--   that the result set is zero-based; the first result is at index 0. You
--   can specify either the <tt>start</tt> or <tt>cursor</tt> parameter in
--   a request, they are mutually exclusive.
--   
--   For more information, see <a>Paginating Results</a> in the <i>Amazon
--   CloudSearch Developer Guide</i>.
[$sel:start:Search'] :: Search -> Maybe Integer

-- | Retrieves highlights for matches in the specified <tt>text</tt> or
--   <tt>text-array</tt> fields. Each specified field must be highlight
--   enabled in the domain configuration. The fields and options are
--   specified in JSON using the form
--   <tt>{"FIELD":{"OPTION":VALUE,"OPTION:"STRING"},"FIELD":{"OPTION":VALUE,"OPTION":"STRING"}}</tt>.
--   
--   You can specify the following highlight options:
--   
--   <ul>
--   <li><tt>format</tt>: specifies the format of the data in the text
--   field: <tt>text</tt> or <tt>html</tt>. When data is returned as HTML,
--   all non-alphanumeric characters are encoded. The default is
--   <tt>html</tt>.</li>
--   <li><tt>max_phrases</tt>: specifies the maximum number of occurrences
--   of the search term(s) you want to highlight. By default, the first
--   occurrence is highlighted.</li>
--   <li><tt>pre_tag</tt>: specifies the string to prepend to an occurrence
--   of a search term. The default for HTML highlights is
--   <tt>&amp;lt;em&amp;gt;</tt>. The default for text highlights is
--   <tt>*</tt>.</li>
--   <li><tt>post_tag</tt>: specifies the string to append to an occurrence
--   of a search term. The default for HTML highlights is
--   <tt>&amp;lt;/em&amp;gt;</tt>. The default for text highlights is
--   <tt>*</tt>.</li>
--   </ul>
--   
--   If no highlight options are specified for a field, the returned field
--   text is treated as HTML and the first match is highlighted with
--   emphasis tags: <tt>&amp;lt;em&gt;search-term&amp;lt;/em&amp;gt;</tt>.
--   
--   For example, the following request retrieves highlights for the
--   <tt>actors</tt> and <tt>title</tt> fields.
--   
--   <pre>
--   { "actors": {}, "title": {"format": "text","max_phrases": 2,"pre_tag": "","post_tag": ""} }
--   </pre>
[$sel:highlight:Search'] :: Search -> Maybe Text

-- | Specifies one or more fields for which to get statistics information.
--   Each specified field must be facet-enabled in the domain
--   configuration. The fields are specified in JSON using the form:
--   
--   <pre>
--   {"FIELD-A":{},"FIELD-B":{}}
--   </pre>
--   
--   There are currently no options supported for statistics.
[$sel:stats:Search'] :: Search -> Maybe Text

-- | Specifies the fields or custom expressions to use to sort the search
--   results. Multiple fields or expressions are specified as a
--   comma-separated list. You must specify the sort direction
--   (<tt>asc</tt> or <tt>desc</tt>) for each field; for example, <tt>year
--   desc,title asc</tt>. To use a field to sort results, the field must be
--   sort-enabled in the domain configuration. Array type fields cannot be
--   used for sorting. If no <tt>sort</tt> parameter is specified, results
--   are sorted by their default relevance scores in descending order:
--   <tt>_score desc</tt>. You can also sort by document ID (<tt>_id
--   asc</tt>) and version (<tt>_version desc</tt>).
--   
--   For more information, see <a>Sorting Results</a> in the <i>Amazon
--   CloudSearch Developer Guide</i>.
[$sel:sort:Search'] :: Search -> Maybe Text

-- | Specifies one or more fields for which to get facet information, and
--   options that control how the facet information is returned. Each
--   specified field must be facet-enabled in the domain configuration. The
--   fields and options are specified in JSON using the form
--   <tt>{"FIELD":{"OPTION":VALUE,"OPTION:"STRING"},"FIELD":{"OPTION":VALUE,"OPTION":"STRING"}}</tt>.
--   
--   You can specify the following faceting options:
--   
--   <ul>
--   <li><tt>buckets</tt> specifies an array of the facet values or ranges
--   to count. Ranges are specified using the same syntax that you use to
--   search for a range of values. For more information, see <a>Searching
--   for a Range of Values</a> in the <i>Amazon CloudSearch Developer
--   Guide</i>. Buckets are returned in the order they are specified in the
--   request. The <tt>sort</tt> and <tt>size</tt> options are not valid if
--   you specify <tt>buckets</tt>.</li>
--   <li><tt>size</tt> specifies the maximum number of facets to include in
--   the results. By default, Amazon CloudSearch returns counts for the top
--   10. The <tt>size</tt> parameter is only valid when you specify the
--   <tt>sort</tt> option; it cannot be used in conjunction with
--   <tt>buckets</tt>.</li>
--   <li><tt>sort</tt> specifies how you want to sort the facets in the
--   results: <tt>bucket</tt> or <tt>count</tt>. Specify <tt>bucket</tt> to
--   sort alphabetically or numerically by facet value (in ascending
--   order). Specify <tt>count</tt> to sort by the facet counts computed
--   for each facet value (in descending order). To retrieve facet counts
--   for particular values or ranges of values, use the <tt>buckets</tt>
--   option instead of <tt>sort</tt>.</li>
--   </ul>
--   
--   If no facet options are specified, facet counts are computed for all
--   field values, the facets are sorted by facet count, and the top 10
--   facets are returned in the results.
--   
--   To count particular buckets of values, use the <tt>buckets</tt>
--   option. For example, the following request uses the <tt>buckets</tt>
--   option to calculate and return facet counts by decade.
--   
--   <pre>
--   {"year":{"buckets":["[1970,1979]","[1980,1989]","[1990,1999]","[2000,2009]","[2010,}"]}}
--   </pre>
--   
--   To sort facets by facet count, use the <tt>count</tt> option. For
--   example, the following request sets the <tt>sort</tt> option to
--   <tt>count</tt> to sort the facet values by facet count, with the facet
--   values that have the most matching documents listed first. Setting the
--   <tt>size</tt> option to 3 returns only the top three facet values.
--   
--   <pre>
--   {"year":{"sort":"count","size":3}}
--   </pre>
--   
--   To sort the facets by value, use the <tt>bucket</tt> option. For
--   example, the following request sets the <tt>sort</tt> option to
--   <tt>bucket</tt> to sort the facet values numerically by year, with
--   earliest year listed first.
--   
--   <pre>
--   {"year":{"sort":"bucket"}}
--   </pre>
--   
--   For more information, see <a>Getting and Using Facet Information</a>
--   in the <i>Amazon CloudSearch Developer Guide</i>.
[$sel:facet:Search'] :: Search -> Maybe Text

-- | Enables partial results to be returned if one or more index partitions
--   are unavailable. When your search index is partitioned across multiple
--   search instances, by default Amazon CloudSearch only returns results
--   if every partition can be queried. This means that the failure of a
--   single search instance can result in 5xx (internal server) errors.
--   When you enable partial results, Amazon CloudSearch returns whatever
--   results are available and includes the percentage of documents
--   searched in the search results (percent-searched). This enables you to
--   more gracefully degrade your users' search experience. For example,
--   rather than displaying no results, you could display the partial
--   results and a message indicating that the results might be incomplete
--   due to a temporary system outage.
[$sel:partial:Search'] :: Search -> Maybe Bool

-- | Specifies the search criteria for the request. How you specify the
--   search criteria depends on the query parser used for the request and
--   the parser options specified in the <tt>queryOptions</tt> parameter.
--   By default, the <tt>simple</tt> query parser is used to process
--   requests. To use the <tt>structured</tt>, <tt>lucene</tt>, or
--   <tt>dismax</tt> query parser, you must also specify the
--   <tt>queryParser</tt> parameter.
--   
--   For more information about specifying search criteria, see
--   <a>Searching Your Data</a> in the <i>Amazon CloudSearch Developer
--   Guide</i>.
[$sel:query:Search'] :: Search -> Text

-- | Create a value of <a>Search</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:expr:Search'</a>, <a>search_expr</a> - Defines one or more
--   numeric expressions that can be used to sort results or specify search
--   or filter criteria. You can also specify expressions as return fields.
--   
--   You specify the expressions in JSON using the form
--   <tt>{"EXPRESSIONNAME":"EXPRESSION"}</tt>. You can define and use
--   multiple expressions in a search request. For example:
--   
--   <pre>
--   {"expression1":"_score*rating", "expression2":"(1/rank)*year"}
--   </pre>
--   
--   For information about the variables, operators, and functions you can
--   use in expressions, see <a>Writing Expressions</a> in the <i>Amazon
--   CloudSearch Developer Guide</i>.
--   
--   <a>$sel:cursor:Search'</a>, <a>search_cursor</a> - Retrieves a cursor
--   value you can use to page through large result sets. Use the
--   <tt>size</tt> parameter to control the number of hits to include in
--   each response. You can specify either the <tt>cursor</tt> or
--   <tt>start</tt> parameter in a request; they are mutually exclusive. To
--   get the first cursor, set the cursor value to <tt>initial</tt>. In
--   subsequent requests, specify the cursor value returned in the hits
--   section of the response.
--   
--   For more information, see <a>Paginating Results</a> in the <i>Amazon
--   CloudSearch Developer Guide</i>.
--   
--   <a>$sel:return':Search'</a>, <a>search_return</a> - Specifies the
--   field and expression values to include in the response. Multiple
--   fields or expressions are specified as a comma-separated list. By
--   default, a search response includes all return enabled fields
--   (<tt>_all_fields</tt>). To return only the document IDs for the
--   matching documents, specify <tt>_no_fields</tt>. To retrieve the
--   relevance score calculated for each document, specify <tt>_score</tt>.
--   
--   <a>$sel:queryOptions:Search'</a>, <a>search_queryOptions</a> -
--   Configures options for the query parser specified in the
--   <tt>queryParser</tt> parameter. You specify the options in JSON using
--   the following form
--   <tt>{"OPTION1":"VALUE1","OPTION2":VALUE2"..."OPTIONN":"VALUEN"}.</tt>
--   
--   The options you can configure vary according to which parser you use:
--   
--   <ul>
--   <li><tt>defaultOperator</tt>: The default operator used to combine
--   individual terms in the search string. For example:
--   <tt>defaultOperator: 'or'</tt>. For the <tt>dismax</tt> parser, you
--   specify a percentage that represents the percentage of terms in the
--   search string (rounded down) that must match, rather than a default
--   operator. A value of <tt>0%</tt> is the equivalent to OR, and a value
--   of <tt>100%</tt> is equivalent to AND. The percentage must be
--   specified as a value in the range 0-100 followed by the percent (%)
--   symbol. For example, <tt>defaultOperator: 50%</tt>. Valid values:
--   <tt>and</tt>, <tt>or</tt>, a percentage in the range 0%-100%
--   (<tt>dismax</tt>). Default: <tt>and</tt> (<tt>simple</tt>,
--   <tt>structured</tt>, <tt>lucene</tt>) or <tt>100</tt>
--   (<tt>dismax</tt>). Valid for: <tt>simple</tt>, <tt>structured</tt>,
--   <tt>lucene</tt>, and <tt>dismax</tt>.</li>
--   <li><tt>fields</tt>: An array of the fields to search when no fields
--   are specified in a search. If no fields are specified in a search and
--   this option is not specified, all text and text-array fields are
--   searched. You can specify a weight for each field to control the
--   relative importance of each field when Amazon CloudSearch calculates
--   relevance scores. To specify a field weight, append a caret
--   (<tt>^</tt>) symbol and the weight to the field name. For example, to
--   boost the importance of the <tt>title</tt> field over the
--   <tt>description</tt> field you could specify:
--   <tt>"fields":["title^5","description"]</tt>. Valid values: The name of
--   any configured field and an optional numeric value greater than zero.
--   Default: All <tt>text</tt> and <tt>text-array</tt> fields. Valid for:
--   <tt>simple</tt>, <tt>structured</tt>, <tt>lucene</tt>, and
--   <tt>dismax</tt>.</li>
--   <li><tt>operators</tt>: An array of the operators or special
--   characters you want to disable for the simple query parser. If you
--   disable the <tt>and</tt>, <tt>or</tt>, or <tt>not</tt> operators, the
--   corresponding operators (<tt>+</tt>, <tt>|</tt>, <tt>-</tt>) have no
--   special meaning and are dropped from the search string. Similarly,
--   disabling <tt>prefix</tt> disables the wildcard operator (<tt>*</tt>)
--   and disabling <tt>phrase</tt> disables the ability to search for
--   phrases by enclosing phrases in double quotes. Disabling precedence
--   disables the ability to control order of precedence using parentheses.
--   Disabling <tt>near</tt> disables the ability to use the ~ operator to
--   perform a sloppy phrase search. Disabling the <tt>fuzzy</tt> operator
--   disables the ability to use the ~ operator to perform a fuzzy search.
--   <tt>escape</tt> disables the ability to use a backslash (<tt>\</tt>)
--   to escape special characters within the search string. Disabling
--   whitespace is an advanced option that prevents the parser from
--   tokenizing on whitespace, which can be useful for Vietnamese. (It
--   prevents Vietnamese words from being split incorrectly.) For example,
--   you could disable all operators other than the phrase operator to
--   support just simple term and phrase queries:
--   <tt>"operators":["and","not","or", "prefix"]</tt>. Valid values:
--   <tt>and</tt>, <tt>escape</tt>, <tt>fuzzy</tt>, <tt>near</tt>,
--   <tt>not</tt>, <tt>or</tt>, <tt>phrase</tt>, <tt>precedence</tt>,
--   <tt>prefix</tt>, <tt>whitespace</tt>. Default: All operators and
--   special characters are enabled. Valid for: <tt>simple</tt>.</li>
--   <li><tt>phraseFields</tt>: An array of the <tt>text</tt> or
--   <tt>text-array</tt> fields you want to use for phrase searches. When
--   the terms in the search string appear in close proximity within a
--   field, the field scores higher. You can specify a weight for each
--   field to boost that score. The <tt>phraseSlop</tt> option controls how
--   much the matches can deviate from the search string and still be
--   boosted. To specify a field weight, append a caret (<tt>^</tt>) symbol
--   and the weight to the field name. For example, to boost phrase matches
--   in the <tt>title</tt> field over the <tt>abstract</tt> field, you
--   could specify: <tt>"phraseFields":["title^3", "plot"]</tt> Valid
--   values: The name of any <tt>text</tt> or <tt>text-array</tt> field and
--   an optional numeric value greater than zero. Default: No fields. If
--   you don't specify any fields with <tt>phraseFields</tt>, proximity
--   scoring is disabled even if <tt>phraseSlop</tt> is specified. Valid
--   for: <tt>dismax</tt>.</li>
--   <li><tt>phraseSlop</tt>: An integer value that specifies how much
--   matches can deviate from the search phrase and still be boosted
--   according to the weights specified in the <tt>phraseFields</tt>
--   option; for example, <tt>phraseSlop: 2</tt>. You must also specify
--   <tt>phraseFields</tt> to enable proximity scoring. Valid values:
--   positive integers. Default: 0. Valid for: <tt>dismax</tt>.</li>
--   <li><tt>explicitPhraseSlop</tt>: An integer value that specifies how
--   much a match can deviate from the search phrase when the phrase is
--   enclosed in double quotes in the search string. (Phrases that exceed
--   this proximity distance are not considered a match.) For example, to
--   specify a slop of three for dismax phrase queries, you would specify
--   <tt>"explicitPhraseSlop":3</tt>. Valid values: positive integers.
--   Default: 0. Valid for: <tt>dismax</tt>.</li>
--   <li><tt>tieBreaker</tt>: When a term in the search string is found in
--   a document's field, a score is calculated for that field based on how
--   common the word is in that field compared to other documents. If the
--   term occurs in multiple fields within a document, by default only the
--   highest scoring field contributes to the document's overall score. You
--   can specify a <tt>tieBreaker</tt> value to enable the matches in
--   lower-scoring fields to contribute to the document's score. That way,
--   if two documents have the same max field score for a particular term,
--   the score for the document that has matches in more fields will be
--   higher. The formula for calculating the score with a tieBreaker is
--   <tt>(max field score) + (tieBreaker) * (sum of the scores for the rest
--   of the matching fields)</tt>. Set <tt>tieBreaker</tt> to 0 to
--   disregard all but the highest scoring field (pure max):
--   <tt>"tieBreaker":0</tt>. Set to 1 to sum the scores from all fields
--   (pure sum): <tt>"tieBreaker":1</tt>. Valid values: 0.0 to 1.0.
--   Default: 0.0. Valid for: <tt>dismax</tt>.</li>
--   </ul>
--   
--   <a>$sel:filterQuery:Search'</a>, <a>search_filterQuery</a> - Specifies
--   a structured query that filters the results of a search without
--   affecting how the results are scored and sorted. You use
--   <tt>filterQuery</tt> in conjunction with the <tt>query</tt> parameter
--   to filter the documents that match the constraints specified in the
--   <tt>query</tt> parameter. Specifying a filter controls only which
--   matching documents are included in the results, it has no effect on
--   how they are scored and sorted. The <tt>filterQuery</tt> parameter
--   supports the full structured query syntax.
--   
--   For more information about using filters, see <a>Filtering Matching
--   Documents</a> in the <i>Amazon CloudSearch Developer Guide</i>.
--   
--   <a>$sel:size:Search'</a>, <a>search_size</a> - Specifies the maximum
--   number of search hits to include in the response.
--   
--   <a>$sel:queryParser:Search'</a>, <a>search_queryParser</a> - Specifies
--   which query parser to use to process the request. If
--   <tt>queryParser</tt> is not specified, Amazon CloudSearch uses the
--   <tt>simple</tt> query parser.
--   
--   Amazon CloudSearch supports four query parsers:
--   
--   <ul>
--   <li><tt>simple</tt>: perform simple searches of <tt>text</tt> and
--   <tt>text-array</tt> fields. By default, the <tt>simple</tt> query
--   parser searches all <tt>text</tt> and <tt>text-array</tt> fields. You
--   can specify which fields to search by with the <tt>queryOptions</tt>
--   parameter. If you prefix a search term with a plus sign (+) documents
--   must contain the term to be considered a match. (This is the default,
--   unless you configure the default operator with the
--   <tt>queryOptions</tt> parameter.) You can use the <tt>-</tt> (NOT),
--   <tt>|</tt> (OR), and <tt>*</tt> (wildcard) operators to exclude
--   particular terms, find results that match any of the specified terms,
--   or search for a prefix. To search for a phrase rather than individual
--   terms, enclose the phrase in double quotes. For more information, see
--   <a>Searching for Text</a> in the <i>Amazon CloudSearch Developer
--   Guide</i>.</li>
--   <li><tt>structured</tt>: perform advanced searches by combining
--   multiple expressions to define the search criteria. You can also
--   search within particular fields, search for values and ranges of
--   values, and use advanced options such as term boosting,
--   <tt>matchall</tt>, and <tt>near</tt>. For more information, see
--   <a>Constructing Compound Queries</a> in the <i>Amazon CloudSearch
--   Developer Guide</i>.</li>
--   <li><tt>lucene</tt>: search using the Apache Lucene query parser
--   syntax. For more information, see <a>Apache Lucene Query Parser
--   Syntax</a>.</li>
--   <li><tt>dismax</tt>: search using the simplified subset of the Apache
--   Lucene query parser syntax defined by the DisMax query parser. For
--   more information, see <a>DisMax Query Parser Syntax</a>.</li>
--   </ul>
--   
--   <a>$sel:start:Search'</a>, <a>search_start</a> - Specifies the offset
--   of the first search hit you want to return. Note that the result set
--   is zero-based; the first result is at index 0. You can specify either
--   the <tt>start</tt> or <tt>cursor</tt> parameter in a request, they are
--   mutually exclusive.
--   
--   For more information, see <a>Paginating Results</a> in the <i>Amazon
--   CloudSearch Developer Guide</i>.
--   
--   <a>$sel:highlight:Search'</a>, <a>search_highlight</a> - Retrieves
--   highlights for matches in the specified <tt>text</tt> or
--   <tt>text-array</tt> fields. Each specified field must be highlight
--   enabled in the domain configuration. The fields and options are
--   specified in JSON using the form
--   <tt>{"FIELD":{"OPTION":VALUE,"OPTION:"STRING"},"FIELD":{"OPTION":VALUE,"OPTION":"STRING"}}</tt>.
--   
--   You can specify the following highlight options:
--   
--   <ul>
--   <li><tt>format</tt>: specifies the format of the data in the text
--   field: <tt>text</tt> or <tt>html</tt>. When data is returned as HTML,
--   all non-alphanumeric characters are encoded. The default is
--   <tt>html</tt>.</li>
--   <li><tt>max_phrases</tt>: specifies the maximum number of occurrences
--   of the search term(s) you want to highlight. By default, the first
--   occurrence is highlighted.</li>
--   <li><tt>pre_tag</tt>: specifies the string to prepend to an occurrence
--   of a search term. The default for HTML highlights is
--   <tt>&amp;lt;em&amp;gt;</tt>. The default for text highlights is
--   <tt>*</tt>.</li>
--   <li><tt>post_tag</tt>: specifies the string to append to an occurrence
--   of a search term. The default for HTML highlights is
--   <tt>&amp;lt;/em&amp;gt;</tt>. The default for text highlights is
--   <tt>*</tt>.</li>
--   </ul>
--   
--   If no highlight options are specified for a field, the returned field
--   text is treated as HTML and the first match is highlighted with
--   emphasis tags: <tt>&amp;lt;em&gt;search-term&amp;lt;/em&amp;gt;</tt>.
--   
--   For example, the following request retrieves highlights for the
--   <tt>actors</tt> and <tt>title</tt> fields.
--   
--   <pre>
--   { "actors": {}, "title": {"format": "text","max_phrases": 2,"pre_tag": "","post_tag": ""} }
--   </pre>
--   
--   <a>$sel:stats:Search'</a>, <a>search_stats</a> - Specifies one or more
--   fields for which to get statistics information. Each specified field
--   must be facet-enabled in the domain configuration. The fields are
--   specified in JSON using the form:
--   
--   <pre>
--   {"FIELD-A":{},"FIELD-B":{}}
--   </pre>
--   
--   There are currently no options supported for statistics.
--   
--   <a>$sel:sort:Search'</a>, <a>search_sort</a> - Specifies the fields or
--   custom expressions to use to sort the search results. Multiple fields
--   or expressions are specified as a comma-separated list. You must
--   specify the sort direction (<tt>asc</tt> or <tt>desc</tt>) for each
--   field; for example, <tt>year desc,title asc</tt>. To use a field to
--   sort results, the field must be sort-enabled in the domain
--   configuration. Array type fields cannot be used for sorting. If no
--   <tt>sort</tt> parameter is specified, results are sorted by their
--   default relevance scores in descending order: <tt>_score desc</tt>.
--   You can also sort by document ID (<tt>_id asc</tt>) and version
--   (<tt>_version desc</tt>).
--   
--   For more information, see <a>Sorting Results</a> in the <i>Amazon
--   CloudSearch Developer Guide</i>.
--   
--   <a>$sel:facet:Search'</a>, <a>search_facet</a> - Specifies one or more
--   fields for which to get facet information, and options that control
--   how the facet information is returned. Each specified field must be
--   facet-enabled in the domain configuration. The fields and options are
--   specified in JSON using the form
--   <tt>{"FIELD":{"OPTION":VALUE,"OPTION:"STRING"},"FIELD":{"OPTION":VALUE,"OPTION":"STRING"}}</tt>.
--   
--   You can specify the following faceting options:
--   
--   <ul>
--   <li><tt>buckets</tt> specifies an array of the facet values or ranges
--   to count. Ranges are specified using the same syntax that you use to
--   search for a range of values. For more information, see <a>Searching
--   for a Range of Values</a> in the <i>Amazon CloudSearch Developer
--   Guide</i>. Buckets are returned in the order they are specified in the
--   request. The <tt>sort</tt> and <tt>size</tt> options are not valid if
--   you specify <tt>buckets</tt>.</li>
--   <li><tt>size</tt> specifies the maximum number of facets to include in
--   the results. By default, Amazon CloudSearch returns counts for the top
--   10. The <tt>size</tt> parameter is only valid when you specify the
--   <tt>sort</tt> option; it cannot be used in conjunction with
--   <tt>buckets</tt>.</li>
--   <li><tt>sort</tt> specifies how you want to sort the facets in the
--   results: <tt>bucket</tt> or <tt>count</tt>. Specify <tt>bucket</tt> to
--   sort alphabetically or numerically by facet value (in ascending
--   order). Specify <tt>count</tt> to sort by the facet counts computed
--   for each facet value (in descending order). To retrieve facet counts
--   for particular values or ranges of values, use the <tt>buckets</tt>
--   option instead of <tt>sort</tt>.</li>
--   </ul>
--   
--   If no facet options are specified, facet counts are computed for all
--   field values, the facets are sorted by facet count, and the top 10
--   facets are returned in the results.
--   
--   To count particular buckets of values, use the <tt>buckets</tt>
--   option. For example, the following request uses the <tt>buckets</tt>
--   option to calculate and return facet counts by decade.
--   
--   <pre>
--   {"year":{"buckets":["[1970,1979]","[1980,1989]","[1990,1999]","[2000,2009]","[2010,}"]}}
--   </pre>
--   
--   To sort facets by facet count, use the <tt>count</tt> option. For
--   example, the following request sets the <tt>sort</tt> option to
--   <tt>count</tt> to sort the facet values by facet count, with the facet
--   values that have the most matching documents listed first. Setting the
--   <tt>size</tt> option to 3 returns only the top three facet values.
--   
--   <pre>
--   {"year":{"sort":"count","size":3}}
--   </pre>
--   
--   To sort the facets by value, use the <tt>bucket</tt> option. For
--   example, the following request sets the <tt>sort</tt> option to
--   <tt>bucket</tt> to sort the facet values numerically by year, with
--   earliest year listed first.
--   
--   <pre>
--   {"year":{"sort":"bucket"}}
--   </pre>
--   
--   For more information, see <a>Getting and Using Facet Information</a>
--   in the <i>Amazon CloudSearch Developer Guide</i>.
--   
--   <a>$sel:partial:Search'</a>, <a>search_partial</a> - Enables partial
--   results to be returned if one or more index partitions are
--   unavailable. When your search index is partitioned across multiple
--   search instances, by default Amazon CloudSearch only returns results
--   if every partition can be queried. This means that the failure of a
--   single search instance can result in 5xx (internal server) errors.
--   When you enable partial results, Amazon CloudSearch returns whatever
--   results are available and includes the percentage of documents
--   searched in the search results (percent-searched). This enables you to
--   more gracefully degrade your users' search experience. For example,
--   rather than displaying no results, you could display the partial
--   results and a message indicating that the results might be incomplete
--   due to a temporary system outage.
--   
--   <a>$sel:query:Search'</a>, <a>search_query</a> - Specifies the search
--   criteria for the request. How you specify the search criteria depends
--   on the query parser used for the request and the parser options
--   specified in the <tt>queryOptions</tt> parameter. By default, the
--   <tt>simple</tt> query parser is used to process requests. To use the
--   <tt>structured</tt>, <tt>lucene</tt>, or <tt>dismax</tt> query parser,
--   you must also specify the <tt>queryParser</tt> parameter.
--   
--   For more information about specifying search criteria, see
--   <a>Searching Your Data</a> in the <i>Amazon CloudSearch Developer
--   Guide</i>.
newSearch :: Text -> Search

-- | Defines one or more numeric expressions that can be used to sort
--   results or specify search or filter criteria. You can also specify
--   expressions as return fields.
--   
--   You specify the expressions in JSON using the form
--   <tt>{"EXPRESSIONNAME":"EXPRESSION"}</tt>. You can define and use
--   multiple expressions in a search request. For example:
--   
--   <pre>
--   {"expression1":"_score*rating", "expression2":"(1/rank)*year"}
--   </pre>
--   
--   For information about the variables, operators, and functions you can
--   use in expressions, see <a>Writing Expressions</a> in the <i>Amazon
--   CloudSearch Developer Guide</i>.
search_expr :: Lens' Search (Maybe Text)

-- | Retrieves a cursor value you can use to page through large result
--   sets. Use the <tt>size</tt> parameter to control the number of hits to
--   include in each response. You can specify either the <tt>cursor</tt>
--   or <tt>start</tt> parameter in a request; they are mutually exclusive.
--   To get the first cursor, set the cursor value to <tt>initial</tt>. In
--   subsequent requests, specify the cursor value returned in the hits
--   section of the response.
--   
--   For more information, see <a>Paginating Results</a> in the <i>Amazon
--   CloudSearch Developer Guide</i>.
search_cursor :: Lens' Search (Maybe Text)

-- | Specifies the field and expression values to include in the response.
--   Multiple fields or expressions are specified as a comma-separated
--   list. By default, a search response includes all return enabled fields
--   (<tt>_all_fields</tt>). To return only the document IDs for the
--   matching documents, specify <tt>_no_fields</tt>. To retrieve the
--   relevance score calculated for each document, specify <tt>_score</tt>.
search_return :: Lens' Search (Maybe Text)

-- | Configures options for the query parser specified in the
--   <tt>queryParser</tt> parameter. You specify the options in JSON using
--   the following form
--   <tt>{"OPTION1":"VALUE1","OPTION2":VALUE2"..."OPTIONN":"VALUEN"}.</tt>
--   
--   The options you can configure vary according to which parser you use:
--   
--   <ul>
--   <li><tt>defaultOperator</tt>: The default operator used to combine
--   individual terms in the search string. For example:
--   <tt>defaultOperator: 'or'</tt>. For the <tt>dismax</tt> parser, you
--   specify a percentage that represents the percentage of terms in the
--   search string (rounded down) that must match, rather than a default
--   operator. A value of <tt>0%</tt> is the equivalent to OR, and a value
--   of <tt>100%</tt> is equivalent to AND. The percentage must be
--   specified as a value in the range 0-100 followed by the percent (%)
--   symbol. For example, <tt>defaultOperator: 50%</tt>. Valid values:
--   <tt>and</tt>, <tt>or</tt>, a percentage in the range 0%-100%
--   (<tt>dismax</tt>). Default: <tt>and</tt> (<tt>simple</tt>,
--   <tt>structured</tt>, <tt>lucene</tt>) or <tt>100</tt>
--   (<tt>dismax</tt>). Valid for: <tt>simple</tt>, <tt>structured</tt>,
--   <tt>lucene</tt>, and <tt>dismax</tt>.</li>
--   <li><tt>fields</tt>: An array of the fields to search when no fields
--   are specified in a search. If no fields are specified in a search and
--   this option is not specified, all text and text-array fields are
--   searched. You can specify a weight for each field to control the
--   relative importance of each field when Amazon CloudSearch calculates
--   relevance scores. To specify a field weight, append a caret
--   (<tt>^</tt>) symbol and the weight to the field name. For example, to
--   boost the importance of the <tt>title</tt> field over the
--   <tt>description</tt> field you could specify:
--   <tt>"fields":["title^5","description"]</tt>. Valid values: The name of
--   any configured field and an optional numeric value greater than zero.
--   Default: All <tt>text</tt> and <tt>text-array</tt> fields. Valid for:
--   <tt>simple</tt>, <tt>structured</tt>, <tt>lucene</tt>, and
--   <tt>dismax</tt>.</li>
--   <li><tt>operators</tt>: An array of the operators or special
--   characters you want to disable for the simple query parser. If you
--   disable the <tt>and</tt>, <tt>or</tt>, or <tt>not</tt> operators, the
--   corresponding operators (<tt>+</tt>, <tt>|</tt>, <tt>-</tt>) have no
--   special meaning and are dropped from the search string. Similarly,
--   disabling <tt>prefix</tt> disables the wildcard operator (<tt>*</tt>)
--   and disabling <tt>phrase</tt> disables the ability to search for
--   phrases by enclosing phrases in double quotes. Disabling precedence
--   disables the ability to control order of precedence using parentheses.
--   Disabling <tt>near</tt> disables the ability to use the ~ operator to
--   perform a sloppy phrase search. Disabling the <tt>fuzzy</tt> operator
--   disables the ability to use the ~ operator to perform a fuzzy search.
--   <tt>escape</tt> disables the ability to use a backslash (<tt>\</tt>)
--   to escape special characters within the search string. Disabling
--   whitespace is an advanced option that prevents the parser from
--   tokenizing on whitespace, which can be useful for Vietnamese. (It
--   prevents Vietnamese words from being split incorrectly.) For example,
--   you could disable all operators other than the phrase operator to
--   support just simple term and phrase queries:
--   <tt>"operators":["and","not","or", "prefix"]</tt>. Valid values:
--   <tt>and</tt>, <tt>escape</tt>, <tt>fuzzy</tt>, <tt>near</tt>,
--   <tt>not</tt>, <tt>or</tt>, <tt>phrase</tt>, <tt>precedence</tt>,
--   <tt>prefix</tt>, <tt>whitespace</tt>. Default: All operators and
--   special characters are enabled. Valid for: <tt>simple</tt>.</li>
--   <li><tt>phraseFields</tt>: An array of the <tt>text</tt> or
--   <tt>text-array</tt> fields you want to use for phrase searches. When
--   the terms in the search string appear in close proximity within a
--   field, the field scores higher. You can specify a weight for each
--   field to boost that score. The <tt>phraseSlop</tt> option controls how
--   much the matches can deviate from the search string and still be
--   boosted. To specify a field weight, append a caret (<tt>^</tt>) symbol
--   and the weight to the field name. For example, to boost phrase matches
--   in the <tt>title</tt> field over the <tt>abstract</tt> field, you
--   could specify: <tt>"phraseFields":["title^3", "plot"]</tt> Valid
--   values: The name of any <tt>text</tt> or <tt>text-array</tt> field and
--   an optional numeric value greater than zero. Default: No fields. If
--   you don't specify any fields with <tt>phraseFields</tt>, proximity
--   scoring is disabled even if <tt>phraseSlop</tt> is specified. Valid
--   for: <tt>dismax</tt>.</li>
--   <li><tt>phraseSlop</tt>: An integer value that specifies how much
--   matches can deviate from the search phrase and still be boosted
--   according to the weights specified in the <tt>phraseFields</tt>
--   option; for example, <tt>phraseSlop: 2</tt>. You must also specify
--   <tt>phraseFields</tt> to enable proximity scoring. Valid values:
--   positive integers. Default: 0. Valid for: <tt>dismax</tt>.</li>
--   <li><tt>explicitPhraseSlop</tt>: An integer value that specifies how
--   much a match can deviate from the search phrase when the phrase is
--   enclosed in double quotes in the search string. (Phrases that exceed
--   this proximity distance are not considered a match.) For example, to
--   specify a slop of three for dismax phrase queries, you would specify
--   <tt>"explicitPhraseSlop":3</tt>. Valid values: positive integers.
--   Default: 0. Valid for: <tt>dismax</tt>.</li>
--   <li><tt>tieBreaker</tt>: When a term in the search string is found in
--   a document's field, a score is calculated for that field based on how
--   common the word is in that field compared to other documents. If the
--   term occurs in multiple fields within a document, by default only the
--   highest scoring field contributes to the document's overall score. You
--   can specify a <tt>tieBreaker</tt> value to enable the matches in
--   lower-scoring fields to contribute to the document's score. That way,
--   if two documents have the same max field score for a particular term,
--   the score for the document that has matches in more fields will be
--   higher. The formula for calculating the score with a tieBreaker is
--   <tt>(max field score) + (tieBreaker) * (sum of the scores for the rest
--   of the matching fields)</tt>. Set <tt>tieBreaker</tt> to 0 to
--   disregard all but the highest scoring field (pure max):
--   <tt>"tieBreaker":0</tt>. Set to 1 to sum the scores from all fields
--   (pure sum): <tt>"tieBreaker":1</tt>. Valid values: 0.0 to 1.0.
--   Default: 0.0. Valid for: <tt>dismax</tt>.</li>
--   </ul>
search_queryOptions :: Lens' Search (Maybe Text)

-- | Specifies a structured query that filters the results of a search
--   without affecting how the results are scored and sorted. You use
--   <tt>filterQuery</tt> in conjunction with the <tt>query</tt> parameter
--   to filter the documents that match the constraints specified in the
--   <tt>query</tt> parameter. Specifying a filter controls only which
--   matching documents are included in the results, it has no effect on
--   how they are scored and sorted. The <tt>filterQuery</tt> parameter
--   supports the full structured query syntax.
--   
--   For more information about using filters, see <a>Filtering Matching
--   Documents</a> in the <i>Amazon CloudSearch Developer Guide</i>.
search_filterQuery :: Lens' Search (Maybe Text)

-- | Specifies the maximum number of search hits to include in the
--   response.
search_size :: Lens' Search (Maybe Integer)

-- | Specifies which query parser to use to process the request. If
--   <tt>queryParser</tt> is not specified, Amazon CloudSearch uses the
--   <tt>simple</tt> query parser.
--   
--   Amazon CloudSearch supports four query parsers:
--   
--   <ul>
--   <li><tt>simple</tt>: perform simple searches of <tt>text</tt> and
--   <tt>text-array</tt> fields. By default, the <tt>simple</tt> query
--   parser searches all <tt>text</tt> and <tt>text-array</tt> fields. You
--   can specify which fields to search by with the <tt>queryOptions</tt>
--   parameter. If you prefix a search term with a plus sign (+) documents
--   must contain the term to be considered a match. (This is the default,
--   unless you configure the default operator with the
--   <tt>queryOptions</tt> parameter.) You can use the <tt>-</tt> (NOT),
--   <tt>|</tt> (OR), and <tt>*</tt> (wildcard) operators to exclude
--   particular terms, find results that match any of the specified terms,
--   or search for a prefix. To search for a phrase rather than individual
--   terms, enclose the phrase in double quotes. For more information, see
--   <a>Searching for Text</a> in the <i>Amazon CloudSearch Developer
--   Guide</i>.</li>
--   <li><tt>structured</tt>: perform advanced searches by combining
--   multiple expressions to define the search criteria. You can also
--   search within particular fields, search for values and ranges of
--   values, and use advanced options such as term boosting,
--   <tt>matchall</tt>, and <tt>near</tt>. For more information, see
--   <a>Constructing Compound Queries</a> in the <i>Amazon CloudSearch
--   Developer Guide</i>.</li>
--   <li><tt>lucene</tt>: search using the Apache Lucene query parser
--   syntax. For more information, see <a>Apache Lucene Query Parser
--   Syntax</a>.</li>
--   <li><tt>dismax</tt>: search using the simplified subset of the Apache
--   Lucene query parser syntax defined by the DisMax query parser. For
--   more information, see <a>DisMax Query Parser Syntax</a>.</li>
--   </ul>
search_queryParser :: Lens' Search (Maybe QueryParser)

-- | Specifies the offset of the first search hit you want to return. Note
--   that the result set is zero-based; the first result is at index 0. You
--   can specify either the <tt>start</tt> or <tt>cursor</tt> parameter in
--   a request, they are mutually exclusive.
--   
--   For more information, see <a>Paginating Results</a> in the <i>Amazon
--   CloudSearch Developer Guide</i>.
search_start :: Lens' Search (Maybe Integer)

-- | Retrieves highlights for matches in the specified <tt>text</tt> or
--   <tt>text-array</tt> fields. Each specified field must be highlight
--   enabled in the domain configuration. The fields and options are
--   specified in JSON using the form
--   <tt>{"FIELD":{"OPTION":VALUE,"OPTION:"STRING"},"FIELD":{"OPTION":VALUE,"OPTION":"STRING"}}</tt>.
--   
--   You can specify the following highlight options:
--   
--   <ul>
--   <li><tt>format</tt>: specifies the format of the data in the text
--   field: <tt>text</tt> or <tt>html</tt>. When data is returned as HTML,
--   all non-alphanumeric characters are encoded. The default is
--   <tt>html</tt>.</li>
--   <li><tt>max_phrases</tt>: specifies the maximum number of occurrences
--   of the search term(s) you want to highlight. By default, the first
--   occurrence is highlighted.</li>
--   <li><tt>pre_tag</tt>: specifies the string to prepend to an occurrence
--   of a search term. The default for HTML highlights is
--   <tt>&amp;lt;em&amp;gt;</tt>. The default for text highlights is
--   <tt>*</tt>.</li>
--   <li><tt>post_tag</tt>: specifies the string to append to an occurrence
--   of a search term. The default for HTML highlights is
--   <tt>&amp;lt;/em&amp;gt;</tt>. The default for text highlights is
--   <tt>*</tt>.</li>
--   </ul>
--   
--   If no highlight options are specified for a field, the returned field
--   text is treated as HTML and the first match is highlighted with
--   emphasis tags: <tt>&amp;lt;em&gt;search-term&amp;lt;/em&amp;gt;</tt>.
--   
--   For example, the following request retrieves highlights for the
--   <tt>actors</tt> and <tt>title</tt> fields.
--   
--   <pre>
--   { "actors": {}, "title": {"format": "text","max_phrases": 2,"pre_tag": "","post_tag": ""} }
--   </pre>
search_highlight :: Lens' Search (Maybe Text)

-- | Specifies one or more fields for which to get statistics information.
--   Each specified field must be facet-enabled in the domain
--   configuration. The fields are specified in JSON using the form:
--   
--   <pre>
--   {"FIELD-A":{},"FIELD-B":{}}
--   </pre>
--   
--   There are currently no options supported for statistics.
search_stats :: Lens' Search (Maybe Text)

-- | Specifies the fields or custom expressions to use to sort the search
--   results. Multiple fields or expressions are specified as a
--   comma-separated list. You must specify the sort direction
--   (<tt>asc</tt> or <tt>desc</tt>) for each field; for example, <tt>year
--   desc,title asc</tt>. To use a field to sort results, the field must be
--   sort-enabled in the domain configuration. Array type fields cannot be
--   used for sorting. If no <tt>sort</tt> parameter is specified, results
--   are sorted by their default relevance scores in descending order:
--   <tt>_score desc</tt>. You can also sort by document ID (<tt>_id
--   asc</tt>) and version (<tt>_version desc</tt>).
--   
--   For more information, see <a>Sorting Results</a> in the <i>Amazon
--   CloudSearch Developer Guide</i>.
search_sort :: Lens' Search (Maybe Text)

-- | Specifies one or more fields for which to get facet information, and
--   options that control how the facet information is returned. Each
--   specified field must be facet-enabled in the domain configuration. The
--   fields and options are specified in JSON using the form
--   <tt>{"FIELD":{"OPTION":VALUE,"OPTION:"STRING"},"FIELD":{"OPTION":VALUE,"OPTION":"STRING"}}</tt>.
--   
--   You can specify the following faceting options:
--   
--   <ul>
--   <li><tt>buckets</tt> specifies an array of the facet values or ranges
--   to count. Ranges are specified using the same syntax that you use to
--   search for a range of values. For more information, see <a>Searching
--   for a Range of Values</a> in the <i>Amazon CloudSearch Developer
--   Guide</i>. Buckets are returned in the order they are specified in the
--   request. The <tt>sort</tt> and <tt>size</tt> options are not valid if
--   you specify <tt>buckets</tt>.</li>
--   <li><tt>size</tt> specifies the maximum number of facets to include in
--   the results. By default, Amazon CloudSearch returns counts for the top
--   10. The <tt>size</tt> parameter is only valid when you specify the
--   <tt>sort</tt> option; it cannot be used in conjunction with
--   <tt>buckets</tt>.</li>
--   <li><tt>sort</tt> specifies how you want to sort the facets in the
--   results: <tt>bucket</tt> or <tt>count</tt>. Specify <tt>bucket</tt> to
--   sort alphabetically or numerically by facet value (in ascending
--   order). Specify <tt>count</tt> to sort by the facet counts computed
--   for each facet value (in descending order). To retrieve facet counts
--   for particular values or ranges of values, use the <tt>buckets</tt>
--   option instead of <tt>sort</tt>.</li>
--   </ul>
--   
--   If no facet options are specified, facet counts are computed for all
--   field values, the facets are sorted by facet count, and the top 10
--   facets are returned in the results.
--   
--   To count particular buckets of values, use the <tt>buckets</tt>
--   option. For example, the following request uses the <tt>buckets</tt>
--   option to calculate and return facet counts by decade.
--   
--   <pre>
--   {"year":{"buckets":["[1970,1979]","[1980,1989]","[1990,1999]","[2000,2009]","[2010,}"]}}
--   </pre>
--   
--   To sort facets by facet count, use the <tt>count</tt> option. For
--   example, the following request sets the <tt>sort</tt> option to
--   <tt>count</tt> to sort the facet values by facet count, with the facet
--   values that have the most matching documents listed first. Setting the
--   <tt>size</tt> option to 3 returns only the top three facet values.
--   
--   <pre>
--   {"year":{"sort":"count","size":3}}
--   </pre>
--   
--   To sort the facets by value, use the <tt>bucket</tt> option. For
--   example, the following request sets the <tt>sort</tt> option to
--   <tt>bucket</tt> to sort the facet values numerically by year, with
--   earliest year listed first.
--   
--   <pre>
--   {"year":{"sort":"bucket"}}
--   </pre>
--   
--   For more information, see <a>Getting and Using Facet Information</a>
--   in the <i>Amazon CloudSearch Developer Guide</i>.
search_facet :: Lens' Search (Maybe Text)

-- | Enables partial results to be returned if one or more index partitions
--   are unavailable. When your search index is partitioned across multiple
--   search instances, by default Amazon CloudSearch only returns results
--   if every partition can be queried. This means that the failure of a
--   single search instance can result in 5xx (internal server) errors.
--   When you enable partial results, Amazon CloudSearch returns whatever
--   results are available and includes the percentage of documents
--   searched in the search results (percent-searched). This enables you to
--   more gracefully degrade your users' search experience. For example,
--   rather than displaying no results, you could display the partial
--   results and a message indicating that the results might be incomplete
--   due to a temporary system outage.
search_partial :: Lens' Search (Maybe Bool)

-- | Specifies the search criteria for the request. How you specify the
--   search criteria depends on the query parser used for the request and
--   the parser options specified in the <tt>queryOptions</tt> parameter.
--   By default, the <tt>simple</tt> query parser is used to process
--   requests. To use the <tt>structured</tt>, <tt>lucene</tt>, or
--   <tt>dismax</tt> query parser, you must also specify the
--   <tt>queryParser</tt> parameter.
--   
--   For more information about specifying search criteria, see
--   <a>Searching Your Data</a> in the <i>Amazon CloudSearch Developer
--   Guide</i>.
search_query :: Lens' Search Text

-- | The result of a <tt>Search</tt> request. Contains the documents that
--   match the specified search criteria and any requested fields,
--   highlights, and facet information.
--   
--   <i>See:</i> <a>newSearchResponse</a> smart constructor.
data SearchResponse
SearchResponse' :: Maybe SearchStatus -> Maybe (HashMap Text BucketInfo) -> Maybe (HashMap Text FieldStats) -> Maybe Hits -> Int -> SearchResponse

-- | The status information returned for the search request.
[$sel:status:SearchResponse'] :: SearchResponse -> Maybe SearchStatus

-- | The requested facet information.
[$sel:facets:SearchResponse'] :: SearchResponse -> Maybe (HashMap Text BucketInfo)

-- | The requested field statistics information.
[$sel:stats:SearchResponse'] :: SearchResponse -> Maybe (HashMap Text FieldStats)

-- | The documents that match the search criteria.
[$sel:hits:SearchResponse'] :: SearchResponse -> Maybe Hits

-- | The response's http status code.
[$sel:httpStatus:SearchResponse'] :: SearchResponse -> Int

-- | Create a value of <a>SearchResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:SearchResponse'</a>, <a>searchResponse_status</a> - The
--   status information returned for the search request.
--   
--   <a>$sel:facets:SearchResponse'</a>, <a>searchResponse_facets</a> - The
--   requested facet information.
--   
--   <a>$sel:stats:Search'</a>, <a>searchResponse_stats</a> - The requested
--   field statistics information.
--   
--   <a>$sel:hits:SearchResponse'</a>, <a>searchResponse_hits</a> - The
--   documents that match the search criteria.
--   
--   <a>$sel:httpStatus:SearchResponse'</a>,
--   <a>searchResponse_httpStatus</a> - The response's http status code.
newSearchResponse :: Int -> SearchResponse

-- | The status information returned for the search request.
searchResponse_status :: Lens' SearchResponse (Maybe SearchStatus)

-- | The requested facet information.
searchResponse_facets :: Lens' SearchResponse (Maybe (HashMap Text BucketInfo))

-- | The requested field statistics information.
searchResponse_stats :: Lens' SearchResponse (Maybe (HashMap Text FieldStats))

-- | The documents that match the search criteria.
searchResponse_hits :: Lens' SearchResponse (Maybe Hits)

-- | The response's http status code.
searchResponse_httpStatus :: Lens' SearchResponse Int
instance GHC.Generics.Generic Network.AWS.CloudSearchDomains.Search.Search
instance GHC.Show.Show Network.AWS.CloudSearchDomains.Search.Search
instance GHC.Read.Read Network.AWS.CloudSearchDomains.Search.Search
instance GHC.Classes.Eq Network.AWS.CloudSearchDomains.Search.Search
instance GHC.Generics.Generic Network.AWS.CloudSearchDomains.Search.SearchResponse
instance GHC.Show.Show Network.AWS.CloudSearchDomains.Search.SearchResponse
instance GHC.Read.Read Network.AWS.CloudSearchDomains.Search.SearchResponse
instance GHC.Classes.Eq Network.AWS.CloudSearchDomains.Search.SearchResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudSearchDomains.Search.Search
instance Control.DeepSeq.NFData Network.AWS.CloudSearchDomains.Search.SearchResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudSearchDomains.Search.Search
instance Control.DeepSeq.NFData Network.AWS.CloudSearchDomains.Search.Search
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudSearchDomains.Search.Search
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudSearchDomains.Search.Search
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudSearchDomains.Search.Search


-- | Posts a batch of documents to a search domain for indexing. A document
--   batch is a collection of add and delete operations that represent the
--   documents you want to add, update, or delete from your domain. Batches
--   can be described in either JSON or XML. Each item that you want Amazon
--   CloudSearch to return as a search result (such as a product) is
--   represented as a document. Every document has a unique ID and one or
--   more fields that contain the data that you want to search and return
--   in results. Individual documents cannot contain more than 1 MB of
--   data. The entire batch cannot exceed 5 MB. To get the best possible
--   upload performance, group add and delete operations in batches that
--   are close the 5 MB limit. Submitting a large volume of single-document
--   batches can overload a domain's document service.
--   
--   The endpoint for submitting <tt>UploadDocuments</tt> requests is
--   domain-specific. To get the document endpoint for your domain, use the
--   Amazon CloudSearch configuration service <tt>DescribeDomains</tt>
--   action. A domain's endpoints are also displayed on the domain
--   dashboard in the Amazon CloudSearch console.
--   
--   For more information about formatting your data for Amazon
--   CloudSearch, see <a>Preparing Your Data</a> in the <i>Amazon
--   CloudSearch Developer Guide</i>. For more information about uploading
--   data for indexing, see <a>Uploading Data</a> in the <i>Amazon
--   CloudSearch Developer Guide</i>.
module Network.AWS.CloudSearchDomains.UploadDocuments

-- | Container for the parameters to the <tt>UploadDocuments</tt> request.
--   
--   <i>See:</i> <a>newUploadDocuments</a> smart constructor.
data UploadDocuments
UploadDocuments' :: ContentType -> HashedBody -> UploadDocuments

-- | The format of the batch you are uploading. Amazon CloudSearch supports
--   two document batch formats:
--   
--   <ul>
--   <li>application/json</li>
--   <li>application/xml</li>
--   </ul>
[$sel:contentType:UploadDocuments'] :: UploadDocuments -> ContentType

-- | A batch of documents formatted in JSON or HTML.
[$sel:documents:UploadDocuments'] :: UploadDocuments -> HashedBody

-- | Create a value of <a>UploadDocuments</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:contentType:UploadDocuments'</a>,
--   <a>uploadDocuments_contentType</a> - The format of the batch you are
--   uploading. Amazon CloudSearch supports two document batch formats:
--   
--   <ul>
--   <li>application/json</li>
--   <li>application/xml</li>
--   </ul>
--   
--   <a>$sel:documents:UploadDocuments'</a>,
--   <a>uploadDocuments_documents</a> - A batch of documents formatted in
--   JSON or HTML.
newUploadDocuments :: ContentType -> HashedBody -> UploadDocuments

-- | The format of the batch you are uploading. Amazon CloudSearch supports
--   two document batch formats:
--   
--   <ul>
--   <li>application/json</li>
--   <li>application/xml</li>
--   </ul>
uploadDocuments_contentType :: Lens' UploadDocuments ContentType

-- | A batch of documents formatted in JSON or HTML.
uploadDocuments_documents :: Lens' UploadDocuments HashedBody

-- | Contains the response to an <tt>UploadDocuments</tt> request.
--   
--   <i>See:</i> <a>newUploadDocumentsResponse</a> smart constructor.
data UploadDocumentsResponse
UploadDocumentsResponse' :: Maybe Text -> Maybe Integer -> Maybe [DocumentServiceWarning] -> Maybe Integer -> Int -> UploadDocumentsResponse

-- | The status of an <tt>UploadDocumentsRequest</tt>.
[$sel:status:UploadDocumentsResponse'] :: UploadDocumentsResponse -> Maybe Text

-- | The number of documents that were added to the search domain.
[$sel:adds:UploadDocumentsResponse'] :: UploadDocumentsResponse -> Maybe Integer

-- | Any warnings returned by the document service about the documents
--   being uploaded.
[$sel:warnings:UploadDocumentsResponse'] :: UploadDocumentsResponse -> Maybe [DocumentServiceWarning]

-- | The number of documents that were deleted from the search domain.
[$sel:deletes:UploadDocumentsResponse'] :: UploadDocumentsResponse -> Maybe Integer

-- | The response's http status code.
[$sel:httpStatus:UploadDocumentsResponse'] :: UploadDocumentsResponse -> Int

-- | Create a value of <a>UploadDocumentsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:UploadDocumentsResponse'</a>,
--   <a>uploadDocumentsResponse_status</a> - The status of an
--   <tt>UploadDocumentsRequest</tt>.
--   
--   <a>$sel:adds:UploadDocumentsResponse'</a>,
--   <a>uploadDocumentsResponse_adds</a> - The number of documents that
--   were added to the search domain.
--   
--   <a>$sel:warnings:UploadDocumentsResponse'</a>,
--   <a>uploadDocumentsResponse_warnings</a> - Any warnings returned by the
--   document service about the documents being uploaded.
--   
--   <a>$sel:deletes:UploadDocumentsResponse'</a>,
--   <a>uploadDocumentsResponse_deletes</a> - The number of documents that
--   were deleted from the search domain.
--   
--   <a>$sel:httpStatus:UploadDocumentsResponse'</a>,
--   <a>uploadDocumentsResponse_httpStatus</a> - The response's http status
--   code.
newUploadDocumentsResponse :: Int -> UploadDocumentsResponse

-- | The status of an <tt>UploadDocumentsRequest</tt>.
uploadDocumentsResponse_status :: Lens' UploadDocumentsResponse (Maybe Text)

-- | The number of documents that were added to the search domain.
uploadDocumentsResponse_adds :: Lens' UploadDocumentsResponse (Maybe Integer)

-- | Any warnings returned by the document service about the documents
--   being uploaded.
uploadDocumentsResponse_warnings :: Lens' UploadDocumentsResponse (Maybe [DocumentServiceWarning])

-- | The number of documents that were deleted from the search domain.
uploadDocumentsResponse_deletes :: Lens' UploadDocumentsResponse (Maybe Integer)

-- | The response's http status code.
uploadDocumentsResponse_httpStatus :: Lens' UploadDocumentsResponse Int
instance GHC.Generics.Generic Network.AWS.CloudSearchDomains.UploadDocuments.UploadDocuments
instance GHC.Show.Show Network.AWS.CloudSearchDomains.UploadDocuments.UploadDocuments
instance GHC.Generics.Generic Network.AWS.CloudSearchDomains.UploadDocuments.UploadDocumentsResponse
instance GHC.Show.Show Network.AWS.CloudSearchDomains.UploadDocuments.UploadDocumentsResponse
instance GHC.Read.Read Network.AWS.CloudSearchDomains.UploadDocuments.UploadDocumentsResponse
instance GHC.Classes.Eq Network.AWS.CloudSearchDomains.UploadDocuments.UploadDocumentsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudSearchDomains.UploadDocuments.UploadDocuments
instance Control.DeepSeq.NFData Network.AWS.CloudSearchDomains.UploadDocuments.UploadDocumentsResponse
instance Network.AWS.Data.Body.ToBody Network.AWS.CloudSearchDomains.UploadDocuments.UploadDocuments
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudSearchDomains.UploadDocuments.UploadDocuments
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudSearchDomains.UploadDocuments.UploadDocuments
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudSearchDomains.UploadDocuments.UploadDocuments


module Network.AWS.CloudSearchDomains.Lens

-- | Specifies the maximum number of suggestions to return.
suggest_size :: Lens' Suggest (Maybe Integer)

-- | Specifies the string for which you want to get suggestions.
suggest_query :: Lens' Suggest Text

-- | Specifies the name of the suggester to use to find suggested matches.
suggest_suggester :: Lens' Suggest Text

-- | Container for the matching search suggestion information.
suggestResponse_suggest :: Lens' SuggestResponse (Maybe SuggestModel)

-- | The status of a <tt>SuggestRequest</tt>. Contains the resource ID
--   (<tt>rid</tt>) and how long it took to process the request
--   (<tt>timems</tt>).
suggestResponse_status :: Lens' SuggestResponse (Maybe SuggestStatus)

-- | The response's http status code.
suggestResponse_httpStatus :: Lens' SuggestResponse Int

-- | The format of the batch you are uploading. Amazon CloudSearch supports
--   two document batch formats:
--   
--   <ul>
--   <li>application/json</li>
--   <li>application/xml</li>
--   </ul>
uploadDocuments_contentType :: Lens' UploadDocuments ContentType

-- | A batch of documents formatted in JSON or HTML.
uploadDocuments_documents :: Lens' UploadDocuments HashedBody

-- | The status of an <tt>UploadDocumentsRequest</tt>.
uploadDocumentsResponse_status :: Lens' UploadDocumentsResponse (Maybe Text)

-- | The number of documents that were added to the search domain.
uploadDocumentsResponse_adds :: Lens' UploadDocumentsResponse (Maybe Integer)

-- | Any warnings returned by the document service about the documents
--   being uploaded.
uploadDocumentsResponse_warnings :: Lens' UploadDocumentsResponse (Maybe [DocumentServiceWarning])

-- | The number of documents that were deleted from the search domain.
uploadDocumentsResponse_deletes :: Lens' UploadDocumentsResponse (Maybe Integer)

-- | The response's http status code.
uploadDocumentsResponse_httpStatus :: Lens' UploadDocumentsResponse Int

-- | Defines one or more numeric expressions that can be used to sort
--   results or specify search or filter criteria. You can also specify
--   expressions as return fields.
--   
--   You specify the expressions in JSON using the form
--   <tt>{"EXPRESSIONNAME":"EXPRESSION"}</tt>. You can define and use
--   multiple expressions in a search request. For example:
--   
--   <pre>
--   {"expression1":"_score*rating", "expression2":"(1/rank)*year"}
--   </pre>
--   
--   For information about the variables, operators, and functions you can
--   use in expressions, see <a>Writing Expressions</a> in the <i>Amazon
--   CloudSearch Developer Guide</i>.
search_expr :: Lens' Search (Maybe Text)

-- | Retrieves a cursor value you can use to page through large result
--   sets. Use the <tt>size</tt> parameter to control the number of hits to
--   include in each response. You can specify either the <tt>cursor</tt>
--   or <tt>start</tt> parameter in a request; they are mutually exclusive.
--   To get the first cursor, set the cursor value to <tt>initial</tt>. In
--   subsequent requests, specify the cursor value returned in the hits
--   section of the response.
--   
--   For more information, see <a>Paginating Results</a> in the <i>Amazon
--   CloudSearch Developer Guide</i>.
search_cursor :: Lens' Search (Maybe Text)

-- | Specifies the field and expression values to include in the response.
--   Multiple fields or expressions are specified as a comma-separated
--   list. By default, a search response includes all return enabled fields
--   (<tt>_all_fields</tt>). To return only the document IDs for the
--   matching documents, specify <tt>_no_fields</tt>. To retrieve the
--   relevance score calculated for each document, specify <tt>_score</tt>.
search_return :: Lens' Search (Maybe Text)

-- | Configures options for the query parser specified in the
--   <tt>queryParser</tt> parameter. You specify the options in JSON using
--   the following form
--   <tt>{"OPTION1":"VALUE1","OPTION2":VALUE2"..."OPTIONN":"VALUEN"}.</tt>
--   
--   The options you can configure vary according to which parser you use:
--   
--   <ul>
--   <li><tt>defaultOperator</tt>: The default operator used to combine
--   individual terms in the search string. For example:
--   <tt>defaultOperator: 'or'</tt>. For the <tt>dismax</tt> parser, you
--   specify a percentage that represents the percentage of terms in the
--   search string (rounded down) that must match, rather than a default
--   operator. A value of <tt>0%</tt> is the equivalent to OR, and a value
--   of <tt>100%</tt> is equivalent to AND. The percentage must be
--   specified as a value in the range 0-100 followed by the percent (%)
--   symbol. For example, <tt>defaultOperator: 50%</tt>. Valid values:
--   <tt>and</tt>, <tt>or</tt>, a percentage in the range 0%-100%
--   (<tt>dismax</tt>). Default: <tt>and</tt> (<tt>simple</tt>,
--   <tt>structured</tt>, <tt>lucene</tt>) or <tt>100</tt>
--   (<tt>dismax</tt>). Valid for: <tt>simple</tt>, <tt>structured</tt>,
--   <tt>lucene</tt>, and <tt>dismax</tt>.</li>
--   <li><tt>fields</tt>: An array of the fields to search when no fields
--   are specified in a search. If no fields are specified in a search and
--   this option is not specified, all text and text-array fields are
--   searched. You can specify a weight for each field to control the
--   relative importance of each field when Amazon CloudSearch calculates
--   relevance scores. To specify a field weight, append a caret
--   (<tt>^</tt>) symbol and the weight to the field name. For example, to
--   boost the importance of the <tt>title</tt> field over the
--   <tt>description</tt> field you could specify:
--   <tt>"fields":["title^5","description"]</tt>. Valid values: The name of
--   any configured field and an optional numeric value greater than zero.
--   Default: All <tt>text</tt> and <tt>text-array</tt> fields. Valid for:
--   <tt>simple</tt>, <tt>structured</tt>, <tt>lucene</tt>, and
--   <tt>dismax</tt>.</li>
--   <li><tt>operators</tt>: An array of the operators or special
--   characters you want to disable for the simple query parser. If you
--   disable the <tt>and</tt>, <tt>or</tt>, or <tt>not</tt> operators, the
--   corresponding operators (<tt>+</tt>, <tt>|</tt>, <tt>-</tt>) have no
--   special meaning and are dropped from the search string. Similarly,
--   disabling <tt>prefix</tt> disables the wildcard operator (<tt>*</tt>)
--   and disabling <tt>phrase</tt> disables the ability to search for
--   phrases by enclosing phrases in double quotes. Disabling precedence
--   disables the ability to control order of precedence using parentheses.
--   Disabling <tt>near</tt> disables the ability to use the ~ operator to
--   perform a sloppy phrase search. Disabling the <tt>fuzzy</tt> operator
--   disables the ability to use the ~ operator to perform a fuzzy search.
--   <tt>escape</tt> disables the ability to use a backslash (<tt>\</tt>)
--   to escape special characters within the search string. Disabling
--   whitespace is an advanced option that prevents the parser from
--   tokenizing on whitespace, which can be useful for Vietnamese. (It
--   prevents Vietnamese words from being split incorrectly.) For example,
--   you could disable all operators other than the phrase operator to
--   support just simple term and phrase queries:
--   <tt>"operators":["and","not","or", "prefix"]</tt>. Valid values:
--   <tt>and</tt>, <tt>escape</tt>, <tt>fuzzy</tt>, <tt>near</tt>,
--   <tt>not</tt>, <tt>or</tt>, <tt>phrase</tt>, <tt>precedence</tt>,
--   <tt>prefix</tt>, <tt>whitespace</tt>. Default: All operators and
--   special characters are enabled. Valid for: <tt>simple</tt>.</li>
--   <li><tt>phraseFields</tt>: An array of the <tt>text</tt> or
--   <tt>text-array</tt> fields you want to use for phrase searches. When
--   the terms in the search string appear in close proximity within a
--   field, the field scores higher. You can specify a weight for each
--   field to boost that score. The <tt>phraseSlop</tt> option controls how
--   much the matches can deviate from the search string and still be
--   boosted. To specify a field weight, append a caret (<tt>^</tt>) symbol
--   and the weight to the field name. For example, to boost phrase matches
--   in the <tt>title</tt> field over the <tt>abstract</tt> field, you
--   could specify: <tt>"phraseFields":["title^3", "plot"]</tt> Valid
--   values: The name of any <tt>text</tt> or <tt>text-array</tt> field and
--   an optional numeric value greater than zero. Default: No fields. If
--   you don't specify any fields with <tt>phraseFields</tt>, proximity
--   scoring is disabled even if <tt>phraseSlop</tt> is specified. Valid
--   for: <tt>dismax</tt>.</li>
--   <li><tt>phraseSlop</tt>: An integer value that specifies how much
--   matches can deviate from the search phrase and still be boosted
--   according to the weights specified in the <tt>phraseFields</tt>
--   option; for example, <tt>phraseSlop: 2</tt>. You must also specify
--   <tt>phraseFields</tt> to enable proximity scoring. Valid values:
--   positive integers. Default: 0. Valid for: <tt>dismax</tt>.</li>
--   <li><tt>explicitPhraseSlop</tt>: An integer value that specifies how
--   much a match can deviate from the search phrase when the phrase is
--   enclosed in double quotes in the search string. (Phrases that exceed
--   this proximity distance are not considered a match.) For example, to
--   specify a slop of three for dismax phrase queries, you would specify
--   <tt>"explicitPhraseSlop":3</tt>. Valid values: positive integers.
--   Default: 0. Valid for: <tt>dismax</tt>.</li>
--   <li><tt>tieBreaker</tt>: When a term in the search string is found in
--   a document's field, a score is calculated for that field based on how
--   common the word is in that field compared to other documents. If the
--   term occurs in multiple fields within a document, by default only the
--   highest scoring field contributes to the document's overall score. You
--   can specify a <tt>tieBreaker</tt> value to enable the matches in
--   lower-scoring fields to contribute to the document's score. That way,
--   if two documents have the same max field score for a particular term,
--   the score for the document that has matches in more fields will be
--   higher. The formula for calculating the score with a tieBreaker is
--   <tt>(max field score) + (tieBreaker) * (sum of the scores for the rest
--   of the matching fields)</tt>. Set <tt>tieBreaker</tt> to 0 to
--   disregard all but the highest scoring field (pure max):
--   <tt>"tieBreaker":0</tt>. Set to 1 to sum the scores from all fields
--   (pure sum): <tt>"tieBreaker":1</tt>. Valid values: 0.0 to 1.0.
--   Default: 0.0. Valid for: <tt>dismax</tt>.</li>
--   </ul>
search_queryOptions :: Lens' Search (Maybe Text)

-- | Specifies a structured query that filters the results of a search
--   without affecting how the results are scored and sorted. You use
--   <tt>filterQuery</tt> in conjunction with the <tt>query</tt> parameter
--   to filter the documents that match the constraints specified in the
--   <tt>query</tt> parameter. Specifying a filter controls only which
--   matching documents are included in the results, it has no effect on
--   how they are scored and sorted. The <tt>filterQuery</tt> parameter
--   supports the full structured query syntax.
--   
--   For more information about using filters, see <a>Filtering Matching
--   Documents</a> in the <i>Amazon CloudSearch Developer Guide</i>.
search_filterQuery :: Lens' Search (Maybe Text)

-- | Specifies the maximum number of search hits to include in the
--   response.
search_size :: Lens' Search (Maybe Integer)

-- | Specifies which query parser to use to process the request. If
--   <tt>queryParser</tt> is not specified, Amazon CloudSearch uses the
--   <tt>simple</tt> query parser.
--   
--   Amazon CloudSearch supports four query parsers:
--   
--   <ul>
--   <li><tt>simple</tt>: perform simple searches of <tt>text</tt> and
--   <tt>text-array</tt> fields. By default, the <tt>simple</tt> query
--   parser searches all <tt>text</tt> and <tt>text-array</tt> fields. You
--   can specify which fields to search by with the <tt>queryOptions</tt>
--   parameter. If you prefix a search term with a plus sign (+) documents
--   must contain the term to be considered a match. (This is the default,
--   unless you configure the default operator with the
--   <tt>queryOptions</tt> parameter.) You can use the <tt>-</tt> (NOT),
--   <tt>|</tt> (OR), and <tt>*</tt> (wildcard) operators to exclude
--   particular terms, find results that match any of the specified terms,
--   or search for a prefix. To search for a phrase rather than individual
--   terms, enclose the phrase in double quotes. For more information, see
--   <a>Searching for Text</a> in the <i>Amazon CloudSearch Developer
--   Guide</i>.</li>
--   <li><tt>structured</tt>: perform advanced searches by combining
--   multiple expressions to define the search criteria. You can also
--   search within particular fields, search for values and ranges of
--   values, and use advanced options such as term boosting,
--   <tt>matchall</tt>, and <tt>near</tt>. For more information, see
--   <a>Constructing Compound Queries</a> in the <i>Amazon CloudSearch
--   Developer Guide</i>.</li>
--   <li><tt>lucene</tt>: search using the Apache Lucene query parser
--   syntax. For more information, see <a>Apache Lucene Query Parser
--   Syntax</a>.</li>
--   <li><tt>dismax</tt>: search using the simplified subset of the Apache
--   Lucene query parser syntax defined by the DisMax query parser. For
--   more information, see <a>DisMax Query Parser Syntax</a>.</li>
--   </ul>
search_queryParser :: Lens' Search (Maybe QueryParser)

-- | Specifies the offset of the first search hit you want to return. Note
--   that the result set is zero-based; the first result is at index 0. You
--   can specify either the <tt>start</tt> or <tt>cursor</tt> parameter in
--   a request, they are mutually exclusive.
--   
--   For more information, see <a>Paginating Results</a> in the <i>Amazon
--   CloudSearch Developer Guide</i>.
search_start :: Lens' Search (Maybe Integer)

-- | Retrieves highlights for matches in the specified <tt>text</tt> or
--   <tt>text-array</tt> fields. Each specified field must be highlight
--   enabled in the domain configuration. The fields and options are
--   specified in JSON using the form
--   <tt>{"FIELD":{"OPTION":VALUE,"OPTION:"STRING"},"FIELD":{"OPTION":VALUE,"OPTION":"STRING"}}</tt>.
--   
--   You can specify the following highlight options:
--   
--   <ul>
--   <li><tt>format</tt>: specifies the format of the data in the text
--   field: <tt>text</tt> or <tt>html</tt>. When data is returned as HTML,
--   all non-alphanumeric characters are encoded. The default is
--   <tt>html</tt>.</li>
--   <li><tt>max_phrases</tt>: specifies the maximum number of occurrences
--   of the search term(s) you want to highlight. By default, the first
--   occurrence is highlighted.</li>
--   <li><tt>pre_tag</tt>: specifies the string to prepend to an occurrence
--   of a search term. The default for HTML highlights is
--   <tt>&amp;lt;em&amp;gt;</tt>. The default for text highlights is
--   <tt>*</tt>.</li>
--   <li><tt>post_tag</tt>: specifies the string to append to an occurrence
--   of a search term. The default for HTML highlights is
--   <tt>&amp;lt;/em&amp;gt;</tt>. The default for text highlights is
--   <tt>*</tt>.</li>
--   </ul>
--   
--   If no highlight options are specified for a field, the returned field
--   text is treated as HTML and the first match is highlighted with
--   emphasis tags: <tt>&amp;lt;em&gt;search-term&amp;lt;/em&amp;gt;</tt>.
--   
--   For example, the following request retrieves highlights for the
--   <tt>actors</tt> and <tt>title</tt> fields.
--   
--   <pre>
--   { "actors": {}, "title": {"format": "text","max_phrases": 2,"pre_tag": "","post_tag": ""} }
--   </pre>
search_highlight :: Lens' Search (Maybe Text)

-- | Specifies one or more fields for which to get statistics information.
--   Each specified field must be facet-enabled in the domain
--   configuration. The fields are specified in JSON using the form:
--   
--   <pre>
--   {"FIELD-A":{},"FIELD-B":{}}
--   </pre>
--   
--   There are currently no options supported for statistics.
search_stats :: Lens' Search (Maybe Text)

-- | Specifies the fields or custom expressions to use to sort the search
--   results. Multiple fields or expressions are specified as a
--   comma-separated list. You must specify the sort direction
--   (<tt>asc</tt> or <tt>desc</tt>) for each field; for example, <tt>year
--   desc,title asc</tt>. To use a field to sort results, the field must be
--   sort-enabled in the domain configuration. Array type fields cannot be
--   used for sorting. If no <tt>sort</tt> parameter is specified, results
--   are sorted by their default relevance scores in descending order:
--   <tt>_score desc</tt>. You can also sort by document ID (<tt>_id
--   asc</tt>) and version (<tt>_version desc</tt>).
--   
--   For more information, see <a>Sorting Results</a> in the <i>Amazon
--   CloudSearch Developer Guide</i>.
search_sort :: Lens' Search (Maybe Text)

-- | Specifies one or more fields for which to get facet information, and
--   options that control how the facet information is returned. Each
--   specified field must be facet-enabled in the domain configuration. The
--   fields and options are specified in JSON using the form
--   <tt>{"FIELD":{"OPTION":VALUE,"OPTION:"STRING"},"FIELD":{"OPTION":VALUE,"OPTION":"STRING"}}</tt>.
--   
--   You can specify the following faceting options:
--   
--   <ul>
--   <li><tt>buckets</tt> specifies an array of the facet values or ranges
--   to count. Ranges are specified using the same syntax that you use to
--   search for a range of values. For more information, see <a>Searching
--   for a Range of Values</a> in the <i>Amazon CloudSearch Developer
--   Guide</i>. Buckets are returned in the order they are specified in the
--   request. The <tt>sort</tt> and <tt>size</tt> options are not valid if
--   you specify <tt>buckets</tt>.</li>
--   <li><tt>size</tt> specifies the maximum number of facets to include in
--   the results. By default, Amazon CloudSearch returns counts for the top
--   10. The <tt>size</tt> parameter is only valid when you specify the
--   <tt>sort</tt> option; it cannot be used in conjunction with
--   <tt>buckets</tt>.</li>
--   <li><tt>sort</tt> specifies how you want to sort the facets in the
--   results: <tt>bucket</tt> or <tt>count</tt>. Specify <tt>bucket</tt> to
--   sort alphabetically or numerically by facet value (in ascending
--   order). Specify <tt>count</tt> to sort by the facet counts computed
--   for each facet value (in descending order). To retrieve facet counts
--   for particular values or ranges of values, use the <tt>buckets</tt>
--   option instead of <tt>sort</tt>.</li>
--   </ul>
--   
--   If no facet options are specified, facet counts are computed for all
--   field values, the facets are sorted by facet count, and the top 10
--   facets are returned in the results.
--   
--   To count particular buckets of values, use the <tt>buckets</tt>
--   option. For example, the following request uses the <tt>buckets</tt>
--   option to calculate and return facet counts by decade.
--   
--   <pre>
--   {"year":{"buckets":["[1970,1979]","[1980,1989]","[1990,1999]","[2000,2009]","[2010,}"]}}
--   </pre>
--   
--   To sort facets by facet count, use the <tt>count</tt> option. For
--   example, the following request sets the <tt>sort</tt> option to
--   <tt>count</tt> to sort the facet values by facet count, with the facet
--   values that have the most matching documents listed first. Setting the
--   <tt>size</tt> option to 3 returns only the top three facet values.
--   
--   <pre>
--   {"year":{"sort":"count","size":3}}
--   </pre>
--   
--   To sort the facets by value, use the <tt>bucket</tt> option. For
--   example, the following request sets the <tt>sort</tt> option to
--   <tt>bucket</tt> to sort the facet values numerically by year, with
--   earliest year listed first.
--   
--   <pre>
--   {"year":{"sort":"bucket"}}
--   </pre>
--   
--   For more information, see <a>Getting and Using Facet Information</a>
--   in the <i>Amazon CloudSearch Developer Guide</i>.
search_facet :: Lens' Search (Maybe Text)

-- | Enables partial results to be returned if one or more index partitions
--   are unavailable. When your search index is partitioned across multiple
--   search instances, by default Amazon CloudSearch only returns results
--   if every partition can be queried. This means that the failure of a
--   single search instance can result in 5xx (internal server) errors.
--   When you enable partial results, Amazon CloudSearch returns whatever
--   results are available and includes the percentage of documents
--   searched in the search results (percent-searched). This enables you to
--   more gracefully degrade your users' search experience. For example,
--   rather than displaying no results, you could display the partial
--   results and a message indicating that the results might be incomplete
--   due to a temporary system outage.
search_partial :: Lens' Search (Maybe Bool)

-- | Specifies the search criteria for the request. How you specify the
--   search criteria depends on the query parser used for the request and
--   the parser options specified in the <tt>queryOptions</tt> parameter.
--   By default, the <tt>simple</tt> query parser is used to process
--   requests. To use the <tt>structured</tt>, <tt>lucene</tt>, or
--   <tt>dismax</tt> query parser, you must also specify the
--   <tt>queryParser</tt> parameter.
--   
--   For more information about specifying search criteria, see
--   <a>Searching Your Data</a> in the <i>Amazon CloudSearch Developer
--   Guide</i>.
search_query :: Lens' Search Text

-- | The status information returned for the search request.
searchResponse_status :: Lens' SearchResponse (Maybe SearchStatus)

-- | The requested facet information.
searchResponse_facets :: Lens' SearchResponse (Maybe (HashMap Text BucketInfo))

-- | The requested field statistics information.
searchResponse_stats :: Lens' SearchResponse (Maybe (HashMap Text FieldStats))

-- | The documents that match the search criteria.
searchResponse_hits :: Lens' SearchResponse (Maybe Hits)

-- | The response's http status code.
searchResponse_httpStatus :: Lens' SearchResponse Int

-- | The facet value being counted.
bucket_value :: Lens' Bucket (Maybe Text)

-- | The number of hits that contain the facet value in the specified facet
--   field.
bucket_count :: Lens' Bucket (Maybe Integer)

-- | A list of the calculated facet values and counts.
bucketInfo_buckets :: Lens' BucketInfo (Maybe [Bucket])

-- | The description for a warning returned by the document service.
documentServiceWarning_message :: Lens' DocumentServiceWarning (Maybe Text)

-- | The maximum value found in the specified field in the result set.
--   
--   If the field is numeric (<tt>int</tt>, <tt>int-array</tt>,
--   <tt>double</tt>, or <tt>double-array</tt>), <tt>max</tt> is the string
--   representation of a double-precision 64-bit floating point value. If
--   the field is <tt>date</tt> or <tt>date-array</tt>, <tt>max</tt> is the
--   string representation of a date with the format specified in <a>IETF
--   RFC3339</a>: yyyy-mm-ddTHH:mm:ss.SSSZ.
fieldStats_max :: Lens' FieldStats (Maybe Text)

-- | The average of the values found in the specified field in the result
--   set.
--   
--   If the field is numeric (<tt>int</tt>, <tt>int-array</tt>,
--   <tt>double</tt>, or <tt>double-array</tt>), <tt>mean</tt> is the
--   string representation of a double-precision 64-bit floating point
--   value. If the field is <tt>date</tt> or <tt>date-array</tt>,
--   <tt>mean</tt> is the string representation of a date with the format
--   specified in <a>IETF RFC3339</a>: yyyy-mm-ddTHH:mm:ss.SSSZ.
fieldStats_mean :: Lens' FieldStats (Maybe Text)

-- | The number of documents that contain a value in the specified field in
--   the result set.
fieldStats_count :: Lens' FieldStats (Maybe Integer)

-- | The number of documents that do not contain a value in the specified
--   field in the result set.
fieldStats_missing :: Lens' FieldStats (Maybe Integer)

-- | The standard deviation of the values in the specified field in the
--   result set.
fieldStats_stddev :: Lens' FieldStats (Maybe Double)

-- | The minimum value found in the specified field in the result set.
--   
--   If the field is numeric (<tt>int</tt>, <tt>int-array</tt>,
--   <tt>double</tt>, or <tt>double-array</tt>), <tt>min</tt> is the string
--   representation of a double-precision 64-bit floating point value. If
--   the field is <tt>date</tt> or <tt>date-array</tt>, <tt>min</tt> is the
--   string representation of a date with the format specified in <a>IETF
--   RFC3339</a>: yyyy-mm-ddTHH:mm:ss.SSSZ.
fieldStats_min :: Lens' FieldStats (Maybe Text)

-- | The sum of all field values in the result set squared.
fieldStats_sumOfSquares :: Lens' FieldStats (Maybe Double)

-- | The sum of the field values across the documents in the result set.
--   <tt>null</tt> for date fields.
fieldStats_sum :: Lens' FieldStats (Maybe Double)

-- | The expressions returned from a document that matches the search
--   request.
hit_exprs :: Lens' Hit (Maybe (HashMap Text Text))

-- | The document ID of a document that matches the search request.
hit_id :: Lens' Hit (Maybe Text)

-- | The highlights returned from a document that matches the search
--   request.
hit_highlights :: Lens' Hit (Maybe (HashMap Text Text))

-- | The fields returned from a document that matches the search request.
hit_fields :: Lens' Hit (Maybe (HashMap Text [Text]))

-- | A cursor that can be used to retrieve the next set of matching
--   documents when you want to page through a large result set.
hits_cursor :: Lens' Hits (Maybe Text)

-- | A document that matches the search request.
hits_hit :: Lens' Hits (Maybe [Hit])

-- | The index of the first matching document.
hits_start :: Lens' Hits (Maybe Integer)

-- | The total number of documents that match the search request.
hits_found :: Lens' Hits (Maybe Integer)

-- | The encrypted resource ID for the request.
searchStatus_rid :: Lens' SearchStatus (Maybe Text)

-- | How long it took to process the request, in milliseconds.
searchStatus_timems :: Lens' SearchStatus (Maybe Integer)

-- | The number of documents that were found to match the query string.
suggestModel_found :: Lens' SuggestModel (Maybe Integer)

-- | The documents that match the query string.
suggestModel_suggestions :: Lens' SuggestModel (Maybe [SuggestionMatch])

-- | The query string specified in the suggest request.
suggestModel_query :: Lens' SuggestModel (Maybe Text)

-- | The encrypted resource ID for the request.
suggestStatus_rid :: Lens' SuggestStatus (Maybe Text)

-- | How long it took to process the request, in milliseconds.
suggestStatus_timems :: Lens' SuggestStatus (Maybe Integer)

-- | The string that matches the query string specified in the
--   <tt>SuggestRequest</tt>.
suggestionMatch_suggestion :: Lens' SuggestionMatch (Maybe Text)

-- | The relevance score of a suggested match.
suggestionMatch_score :: Lens' SuggestionMatch (Maybe Integer)

-- | The document ID of the suggested document.
suggestionMatch_id :: Lens' SuggestionMatch (Maybe Text)


module Network.AWS.CloudSearchDomains.Waiters


-- | Derived from API version <tt>2013-01-01</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   You use the AmazonCloudSearch2013 API to upload documents to a search
--   domain and search those documents.
--   
--   The endpoints for submitting <tt>UploadDocuments</tt>,
--   <tt>Search</tt>, and <tt>Suggest</tt> requests are domain-specific. To
--   get the endpoints for your domain, use the Amazon CloudSearch
--   configuration service <tt>DescribeDomains</tt> action. The domain
--   endpoints are also displayed on the domain dashboard in the Amazon
--   CloudSearch console. You submit suggest requests to the search
--   endpoint.
--   
--   For more information, see the <a>Amazon CloudSearch Developer
--   Guide</a>.
module Network.AWS.CloudSearchDomains

-- | API version <tt>2013-01-01</tt> of the Amazon CloudSearch Domain SDK
--   configuration.
defaultService :: Service

-- | Information about any problems encountered while processing an upload
--   request.
_DocumentServiceException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Information about any problems encountered while processing a search
--   request.
_SearchException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Container for the parameters to the <tt>Suggest</tt> request.
--   
--   <i>See:</i> <a>newSuggest</a> smart constructor.
data Suggest
Suggest' :: Maybe Integer -> Text -> Text -> Suggest

-- | Create a value of <a>Suggest</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:size:Suggest'</a>, <a>suggest_size</a> - Specifies the maximum
--   number of suggestions to return.
--   
--   <a>$sel:query:Suggest'</a>, <a>suggest_query</a> - Specifies the
--   string for which you want to get suggestions.
--   
--   <a>$sel:suggester:Suggest'</a>, <a>suggest_suggester</a> - Specifies
--   the name of the suggester to use to find suggested matches.
newSuggest :: Text -> Text -> Suggest

-- | Contains the response to a <tt>Suggest</tt> request.
--   
--   <i>See:</i> <a>newSuggestResponse</a> smart constructor.
data SuggestResponse
SuggestResponse' :: Maybe SuggestModel -> Maybe SuggestStatus -> Int -> SuggestResponse

-- | Create a value of <a>SuggestResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:suggest:SuggestResponse'</a>, <a>suggestResponse_suggest</a> -
--   Container for the matching search suggestion information.
--   
--   <a>$sel:status:SuggestResponse'</a>, <a>suggestResponse_status</a> -
--   The status of a <tt>SuggestRequest</tt>. Contains the resource ID
--   (<tt>rid</tt>) and how long it took to process the request
--   (<tt>timems</tt>).
--   
--   <a>$sel:httpStatus:SuggestResponse'</a>,
--   <a>suggestResponse_httpStatus</a> - The response's http status code.
newSuggestResponse :: Int -> SuggestResponse

-- | Container for the parameters to the <tt>UploadDocuments</tt> request.
--   
--   <i>See:</i> <a>newUploadDocuments</a> smart constructor.
data UploadDocuments
UploadDocuments' :: ContentType -> HashedBody -> UploadDocuments

-- | Create a value of <a>UploadDocuments</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:contentType:UploadDocuments'</a>,
--   <a>uploadDocuments_contentType</a> - The format of the batch you are
--   uploading. Amazon CloudSearch supports two document batch formats:
--   
--   <ul>
--   <li>application/json</li>
--   <li>application/xml</li>
--   </ul>
--   
--   <a>$sel:documents:UploadDocuments'</a>,
--   <a>uploadDocuments_documents</a> - A batch of documents formatted in
--   JSON or HTML.
newUploadDocuments :: ContentType -> HashedBody -> UploadDocuments

-- | Contains the response to an <tt>UploadDocuments</tt> request.
--   
--   <i>See:</i> <a>newUploadDocumentsResponse</a> smart constructor.
data UploadDocumentsResponse
UploadDocumentsResponse' :: Maybe Text -> Maybe Integer -> Maybe [DocumentServiceWarning] -> Maybe Integer -> Int -> UploadDocumentsResponse

-- | Create a value of <a>UploadDocumentsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:UploadDocumentsResponse'</a>,
--   <a>uploadDocumentsResponse_status</a> - The status of an
--   <tt>UploadDocumentsRequest</tt>.
--   
--   <a>$sel:adds:UploadDocumentsResponse'</a>,
--   <a>uploadDocumentsResponse_adds</a> - The number of documents that
--   were added to the search domain.
--   
--   <a>$sel:warnings:UploadDocumentsResponse'</a>,
--   <a>uploadDocumentsResponse_warnings</a> - Any warnings returned by the
--   document service about the documents being uploaded.
--   
--   <a>$sel:deletes:UploadDocumentsResponse'</a>,
--   <a>uploadDocumentsResponse_deletes</a> - The number of documents that
--   were deleted from the search domain.
--   
--   <a>$sel:httpStatus:UploadDocumentsResponse'</a>,
--   <a>uploadDocumentsResponse_httpStatus</a> - The response's http status
--   code.
newUploadDocumentsResponse :: Int -> UploadDocumentsResponse

-- | Container for the parameters to the <tt>Search</tt> request.
--   
--   <i>See:</i> <a>newSearch</a> smart constructor.
data Search
Search' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Integer -> Maybe QueryParser -> Maybe Integer -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Text -> Search

-- | Create a value of <a>Search</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:expr:Search'</a>, <a>search_expr</a> - Defines one or more
--   numeric expressions that can be used to sort results or specify search
--   or filter criteria. You can also specify expressions as return fields.
--   
--   You specify the expressions in JSON using the form
--   <tt>{"EXPRESSIONNAME":"EXPRESSION"}</tt>. You can define and use
--   multiple expressions in a search request. For example:
--   
--   <pre>
--   {"expression1":"_score*rating", "expression2":"(1/rank)*year"}
--   </pre>
--   
--   For information about the variables, operators, and functions you can
--   use in expressions, see <a>Writing Expressions</a> in the <i>Amazon
--   CloudSearch Developer Guide</i>.
--   
--   <a>$sel:cursor:Search'</a>, <a>search_cursor</a> - Retrieves a cursor
--   value you can use to page through large result sets. Use the
--   <tt>size</tt> parameter to control the number of hits to include in
--   each response. You can specify either the <tt>cursor</tt> or
--   <tt>start</tt> parameter in a request; they are mutually exclusive. To
--   get the first cursor, set the cursor value to <tt>initial</tt>. In
--   subsequent requests, specify the cursor value returned in the hits
--   section of the response.
--   
--   For more information, see <a>Paginating Results</a> in the <i>Amazon
--   CloudSearch Developer Guide</i>.
--   
--   <a>$sel:return':Search'</a>, <a>search_return</a> - Specifies the
--   field and expression values to include in the response. Multiple
--   fields or expressions are specified as a comma-separated list. By
--   default, a search response includes all return enabled fields
--   (<tt>_all_fields</tt>). To return only the document IDs for the
--   matching documents, specify <tt>_no_fields</tt>. To retrieve the
--   relevance score calculated for each document, specify <tt>_score</tt>.
--   
--   <a>$sel:queryOptions:Search'</a>, <a>search_queryOptions</a> -
--   Configures options for the query parser specified in the
--   <tt>queryParser</tt> parameter. You specify the options in JSON using
--   the following form
--   <tt>{"OPTION1":"VALUE1","OPTION2":VALUE2"..."OPTIONN":"VALUEN"}.</tt>
--   
--   The options you can configure vary according to which parser you use:
--   
--   <ul>
--   <li><tt>defaultOperator</tt>: The default operator used to combine
--   individual terms in the search string. For example:
--   <tt>defaultOperator: 'or'</tt>. For the <tt>dismax</tt> parser, you
--   specify a percentage that represents the percentage of terms in the
--   search string (rounded down) that must match, rather than a default
--   operator. A value of <tt>0%</tt> is the equivalent to OR, and a value
--   of <tt>100%</tt> is equivalent to AND. The percentage must be
--   specified as a value in the range 0-100 followed by the percent (%)
--   symbol. For example, <tt>defaultOperator: 50%</tt>. Valid values:
--   <tt>and</tt>, <tt>or</tt>, a percentage in the range 0%-100%
--   (<tt>dismax</tt>). Default: <tt>and</tt> (<tt>simple</tt>,
--   <tt>structured</tt>, <tt>lucene</tt>) or <tt>100</tt>
--   (<tt>dismax</tt>). Valid for: <tt>simple</tt>, <tt>structured</tt>,
--   <tt>lucene</tt>, and <tt>dismax</tt>.</li>
--   <li><tt>fields</tt>: An array of the fields to search when no fields
--   are specified in a search. If no fields are specified in a search and
--   this option is not specified, all text and text-array fields are
--   searched. You can specify a weight for each field to control the
--   relative importance of each field when Amazon CloudSearch calculates
--   relevance scores. To specify a field weight, append a caret
--   (<tt>^</tt>) symbol and the weight to the field name. For example, to
--   boost the importance of the <tt>title</tt> field over the
--   <tt>description</tt> field you could specify:
--   <tt>"fields":["title^5","description"]</tt>. Valid values: The name of
--   any configured field and an optional numeric value greater than zero.
--   Default: All <tt>text</tt> and <tt>text-array</tt> fields. Valid for:
--   <tt>simple</tt>, <tt>structured</tt>, <tt>lucene</tt>, and
--   <tt>dismax</tt>.</li>
--   <li><tt>operators</tt>: An array of the operators or special
--   characters you want to disable for the simple query parser. If you
--   disable the <tt>and</tt>, <tt>or</tt>, or <tt>not</tt> operators, the
--   corresponding operators (<tt>+</tt>, <tt>|</tt>, <tt>-</tt>) have no
--   special meaning and are dropped from the search string. Similarly,
--   disabling <tt>prefix</tt> disables the wildcard operator (<tt>*</tt>)
--   and disabling <tt>phrase</tt> disables the ability to search for
--   phrases by enclosing phrases in double quotes. Disabling precedence
--   disables the ability to control order of precedence using parentheses.
--   Disabling <tt>near</tt> disables the ability to use the ~ operator to
--   perform a sloppy phrase search. Disabling the <tt>fuzzy</tt> operator
--   disables the ability to use the ~ operator to perform a fuzzy search.
--   <tt>escape</tt> disables the ability to use a backslash (<tt>\</tt>)
--   to escape special characters within the search string. Disabling
--   whitespace is an advanced option that prevents the parser from
--   tokenizing on whitespace, which can be useful for Vietnamese. (It
--   prevents Vietnamese words from being split incorrectly.) For example,
--   you could disable all operators other than the phrase operator to
--   support just simple term and phrase queries:
--   <tt>"operators":["and","not","or", "prefix"]</tt>. Valid values:
--   <tt>and</tt>, <tt>escape</tt>, <tt>fuzzy</tt>, <tt>near</tt>,
--   <tt>not</tt>, <tt>or</tt>, <tt>phrase</tt>, <tt>precedence</tt>,
--   <tt>prefix</tt>, <tt>whitespace</tt>. Default: All operators and
--   special characters are enabled. Valid for: <tt>simple</tt>.</li>
--   <li><tt>phraseFields</tt>: An array of the <tt>text</tt> or
--   <tt>text-array</tt> fields you want to use for phrase searches. When
--   the terms in the search string appear in close proximity within a
--   field, the field scores higher. You can specify a weight for each
--   field to boost that score. The <tt>phraseSlop</tt> option controls how
--   much the matches can deviate from the search string and still be
--   boosted. To specify a field weight, append a caret (<tt>^</tt>) symbol
--   and the weight to the field name. For example, to boost phrase matches
--   in the <tt>title</tt> field over the <tt>abstract</tt> field, you
--   could specify: <tt>"phraseFields":["title^3", "plot"]</tt> Valid
--   values: The name of any <tt>text</tt> or <tt>text-array</tt> field and
--   an optional numeric value greater than zero. Default: No fields. If
--   you don't specify any fields with <tt>phraseFields</tt>, proximity
--   scoring is disabled even if <tt>phraseSlop</tt> is specified. Valid
--   for: <tt>dismax</tt>.</li>
--   <li><tt>phraseSlop</tt>: An integer value that specifies how much
--   matches can deviate from the search phrase and still be boosted
--   according to the weights specified in the <tt>phraseFields</tt>
--   option; for example, <tt>phraseSlop: 2</tt>. You must also specify
--   <tt>phraseFields</tt> to enable proximity scoring. Valid values:
--   positive integers. Default: 0. Valid for: <tt>dismax</tt>.</li>
--   <li><tt>explicitPhraseSlop</tt>: An integer value that specifies how
--   much a match can deviate from the search phrase when the phrase is
--   enclosed in double quotes in the search string. (Phrases that exceed
--   this proximity distance are not considered a match.) For example, to
--   specify a slop of three for dismax phrase queries, you would specify
--   <tt>"explicitPhraseSlop":3</tt>. Valid values: positive integers.
--   Default: 0. Valid for: <tt>dismax</tt>.</li>
--   <li><tt>tieBreaker</tt>: When a term in the search string is found in
--   a document's field, a score is calculated for that field based on how
--   common the word is in that field compared to other documents. If the
--   term occurs in multiple fields within a document, by default only the
--   highest scoring field contributes to the document's overall score. You
--   can specify a <tt>tieBreaker</tt> value to enable the matches in
--   lower-scoring fields to contribute to the document's score. That way,
--   if two documents have the same max field score for a particular term,
--   the score for the document that has matches in more fields will be
--   higher. The formula for calculating the score with a tieBreaker is
--   <tt>(max field score) + (tieBreaker) * (sum of the scores for the rest
--   of the matching fields)</tt>. Set <tt>tieBreaker</tt> to 0 to
--   disregard all but the highest scoring field (pure max):
--   <tt>"tieBreaker":0</tt>. Set to 1 to sum the scores from all fields
--   (pure sum): <tt>"tieBreaker":1</tt>. Valid values: 0.0 to 1.0.
--   Default: 0.0. Valid for: <tt>dismax</tt>.</li>
--   </ul>
--   
--   <a>$sel:filterQuery:Search'</a>, <a>search_filterQuery</a> - Specifies
--   a structured query that filters the results of a search without
--   affecting how the results are scored and sorted. You use
--   <tt>filterQuery</tt> in conjunction with the <tt>query</tt> parameter
--   to filter the documents that match the constraints specified in the
--   <tt>query</tt> parameter. Specifying a filter controls only which
--   matching documents are included in the results, it has no effect on
--   how they are scored and sorted. The <tt>filterQuery</tt> parameter
--   supports the full structured query syntax.
--   
--   For more information about using filters, see <a>Filtering Matching
--   Documents</a> in the <i>Amazon CloudSearch Developer Guide</i>.
--   
--   <a>$sel:size:Search'</a>, <a>search_size</a> - Specifies the maximum
--   number of search hits to include in the response.
--   
--   <a>$sel:queryParser:Search'</a>, <a>search_queryParser</a> - Specifies
--   which query parser to use to process the request. If
--   <tt>queryParser</tt> is not specified, Amazon CloudSearch uses the
--   <tt>simple</tt> query parser.
--   
--   Amazon CloudSearch supports four query parsers:
--   
--   <ul>
--   <li><tt>simple</tt>: perform simple searches of <tt>text</tt> and
--   <tt>text-array</tt> fields. By default, the <tt>simple</tt> query
--   parser searches all <tt>text</tt> and <tt>text-array</tt> fields. You
--   can specify which fields to search by with the <tt>queryOptions</tt>
--   parameter. If you prefix a search term with a plus sign (+) documents
--   must contain the term to be considered a match. (This is the default,
--   unless you configure the default operator with the
--   <tt>queryOptions</tt> parameter.) You can use the <tt>-</tt> (NOT),
--   <tt>|</tt> (OR), and <tt>*</tt> (wildcard) operators to exclude
--   particular terms, find results that match any of the specified terms,
--   or search for a prefix. To search for a phrase rather than individual
--   terms, enclose the phrase in double quotes. For more information, see
--   <a>Searching for Text</a> in the <i>Amazon CloudSearch Developer
--   Guide</i>.</li>
--   <li><tt>structured</tt>: perform advanced searches by combining
--   multiple expressions to define the search criteria. You can also
--   search within particular fields, search for values and ranges of
--   values, and use advanced options such as term boosting,
--   <tt>matchall</tt>, and <tt>near</tt>. For more information, see
--   <a>Constructing Compound Queries</a> in the <i>Amazon CloudSearch
--   Developer Guide</i>.</li>
--   <li><tt>lucene</tt>: search using the Apache Lucene query parser
--   syntax. For more information, see <a>Apache Lucene Query Parser
--   Syntax</a>.</li>
--   <li><tt>dismax</tt>: search using the simplified subset of the Apache
--   Lucene query parser syntax defined by the DisMax query parser. For
--   more information, see <a>DisMax Query Parser Syntax</a>.</li>
--   </ul>
--   
--   <a>$sel:start:Search'</a>, <a>search_start</a> - Specifies the offset
--   of the first search hit you want to return. Note that the result set
--   is zero-based; the first result is at index 0. You can specify either
--   the <tt>start</tt> or <tt>cursor</tt> parameter in a request, they are
--   mutually exclusive.
--   
--   For more information, see <a>Paginating Results</a> in the <i>Amazon
--   CloudSearch Developer Guide</i>.
--   
--   <a>$sel:highlight:Search'</a>, <a>search_highlight</a> - Retrieves
--   highlights for matches in the specified <tt>text</tt> or
--   <tt>text-array</tt> fields. Each specified field must be highlight
--   enabled in the domain configuration. The fields and options are
--   specified in JSON using the form
--   <tt>{"FIELD":{"OPTION":VALUE,"OPTION:"STRING"},"FIELD":{"OPTION":VALUE,"OPTION":"STRING"}}</tt>.
--   
--   You can specify the following highlight options:
--   
--   <ul>
--   <li><tt>format</tt>: specifies the format of the data in the text
--   field: <tt>text</tt> or <tt>html</tt>. When data is returned as HTML,
--   all non-alphanumeric characters are encoded. The default is
--   <tt>html</tt>.</li>
--   <li><tt>max_phrases</tt>: specifies the maximum number of occurrences
--   of the search term(s) you want to highlight. By default, the first
--   occurrence is highlighted.</li>
--   <li><tt>pre_tag</tt>: specifies the string to prepend to an occurrence
--   of a search term. The default for HTML highlights is
--   <tt>&amp;lt;em&amp;gt;</tt>. The default for text highlights is
--   <tt>*</tt>.</li>
--   <li><tt>post_tag</tt>: specifies the string to append to an occurrence
--   of a search term. The default for HTML highlights is
--   <tt>&amp;lt;/em&amp;gt;</tt>. The default for text highlights is
--   <tt>*</tt>.</li>
--   </ul>
--   
--   If no highlight options are specified for a field, the returned field
--   text is treated as HTML and the first match is highlighted with
--   emphasis tags: <tt>&amp;lt;em&gt;search-term&amp;lt;/em&amp;gt;</tt>.
--   
--   For example, the following request retrieves highlights for the
--   <tt>actors</tt> and <tt>title</tt> fields.
--   
--   <pre>
--   { "actors": {}, "title": {"format": "text","max_phrases": 2,"pre_tag": "","post_tag": ""} }
--   </pre>
--   
--   <a>$sel:stats:Search'</a>, <a>search_stats</a> - Specifies one or more
--   fields for which to get statistics information. Each specified field
--   must be facet-enabled in the domain configuration. The fields are
--   specified in JSON using the form:
--   
--   <pre>
--   {"FIELD-A":{},"FIELD-B":{}}
--   </pre>
--   
--   There are currently no options supported for statistics.
--   
--   <a>$sel:sort:Search'</a>, <a>search_sort</a> - Specifies the fields or
--   custom expressions to use to sort the search results. Multiple fields
--   or expressions are specified as a comma-separated list. You must
--   specify the sort direction (<tt>asc</tt> or <tt>desc</tt>) for each
--   field; for example, <tt>year desc,title asc</tt>. To use a field to
--   sort results, the field must be sort-enabled in the domain
--   configuration. Array type fields cannot be used for sorting. If no
--   <tt>sort</tt> parameter is specified, results are sorted by their
--   default relevance scores in descending order: <tt>_score desc</tt>.
--   You can also sort by document ID (<tt>_id asc</tt>) and version
--   (<tt>_version desc</tt>).
--   
--   For more information, see <a>Sorting Results</a> in the <i>Amazon
--   CloudSearch Developer Guide</i>.
--   
--   <a>$sel:facet:Search'</a>, <a>search_facet</a> - Specifies one or more
--   fields for which to get facet information, and options that control
--   how the facet information is returned. Each specified field must be
--   facet-enabled in the domain configuration. The fields and options are
--   specified in JSON using the form
--   <tt>{"FIELD":{"OPTION":VALUE,"OPTION:"STRING"},"FIELD":{"OPTION":VALUE,"OPTION":"STRING"}}</tt>.
--   
--   You can specify the following faceting options:
--   
--   <ul>
--   <li><tt>buckets</tt> specifies an array of the facet values or ranges
--   to count. Ranges are specified using the same syntax that you use to
--   search for a range of values. For more information, see <a>Searching
--   for a Range of Values</a> in the <i>Amazon CloudSearch Developer
--   Guide</i>. Buckets are returned in the order they are specified in the
--   request. The <tt>sort</tt> and <tt>size</tt> options are not valid if
--   you specify <tt>buckets</tt>.</li>
--   <li><tt>size</tt> specifies the maximum number of facets to include in
--   the results. By default, Amazon CloudSearch returns counts for the top
--   10. The <tt>size</tt> parameter is only valid when you specify the
--   <tt>sort</tt> option; it cannot be used in conjunction with
--   <tt>buckets</tt>.</li>
--   <li><tt>sort</tt> specifies how you want to sort the facets in the
--   results: <tt>bucket</tt> or <tt>count</tt>. Specify <tt>bucket</tt> to
--   sort alphabetically or numerically by facet value (in ascending
--   order). Specify <tt>count</tt> to sort by the facet counts computed
--   for each facet value (in descending order). To retrieve facet counts
--   for particular values or ranges of values, use the <tt>buckets</tt>
--   option instead of <tt>sort</tt>.</li>
--   </ul>
--   
--   If no facet options are specified, facet counts are computed for all
--   field values, the facets are sorted by facet count, and the top 10
--   facets are returned in the results.
--   
--   To count particular buckets of values, use the <tt>buckets</tt>
--   option. For example, the following request uses the <tt>buckets</tt>
--   option to calculate and return facet counts by decade.
--   
--   <pre>
--   {"year":{"buckets":["[1970,1979]","[1980,1989]","[1990,1999]","[2000,2009]","[2010,}"]}}
--   </pre>
--   
--   To sort facets by facet count, use the <tt>count</tt> option. For
--   example, the following request sets the <tt>sort</tt> option to
--   <tt>count</tt> to sort the facet values by facet count, with the facet
--   values that have the most matching documents listed first. Setting the
--   <tt>size</tt> option to 3 returns only the top three facet values.
--   
--   <pre>
--   {"year":{"sort":"count","size":3}}
--   </pre>
--   
--   To sort the facets by value, use the <tt>bucket</tt> option. For
--   example, the following request sets the <tt>sort</tt> option to
--   <tt>bucket</tt> to sort the facet values numerically by year, with
--   earliest year listed first.
--   
--   <pre>
--   {"year":{"sort":"bucket"}}
--   </pre>
--   
--   For more information, see <a>Getting and Using Facet Information</a>
--   in the <i>Amazon CloudSearch Developer Guide</i>.
--   
--   <a>$sel:partial:Search'</a>, <a>search_partial</a> - Enables partial
--   results to be returned if one or more index partitions are
--   unavailable. When your search index is partitioned across multiple
--   search instances, by default Amazon CloudSearch only returns results
--   if every partition can be queried. This means that the failure of a
--   single search instance can result in 5xx (internal server) errors.
--   When you enable partial results, Amazon CloudSearch returns whatever
--   results are available and includes the percentage of documents
--   searched in the search results (percent-searched). This enables you to
--   more gracefully degrade your users' search experience. For example,
--   rather than displaying no results, you could display the partial
--   results and a message indicating that the results might be incomplete
--   due to a temporary system outage.
--   
--   <a>$sel:query:Search'</a>, <a>search_query</a> - Specifies the search
--   criteria for the request. How you specify the search criteria depends
--   on the query parser used for the request and the parser options
--   specified in the <tt>queryOptions</tt> parameter. By default, the
--   <tt>simple</tt> query parser is used to process requests. To use the
--   <tt>structured</tt>, <tt>lucene</tt>, or <tt>dismax</tt> query parser,
--   you must also specify the <tt>queryParser</tt> parameter.
--   
--   For more information about specifying search criteria, see
--   <a>Searching Your Data</a> in the <i>Amazon CloudSearch Developer
--   Guide</i>.
newSearch :: Text -> Search

-- | The result of a <tt>Search</tt> request. Contains the documents that
--   match the specified search criteria and any requested fields,
--   highlights, and facet information.
--   
--   <i>See:</i> <a>newSearchResponse</a> smart constructor.
data SearchResponse
SearchResponse' :: Maybe SearchStatus -> Maybe (HashMap Text BucketInfo) -> Maybe (HashMap Text FieldStats) -> Maybe Hits -> Int -> SearchResponse

-- | Create a value of <a>SearchResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:SearchResponse'</a>, <a>searchResponse_status</a> - The
--   status information returned for the search request.
--   
--   <a>$sel:facets:SearchResponse'</a>, <a>searchResponse_facets</a> - The
--   requested facet information.
--   
--   <a>$sel:stats:Search'</a>, <a>searchResponse_stats</a> - The requested
--   field statistics information.
--   
--   <a>$sel:hits:SearchResponse'</a>, <a>searchResponse_hits</a> - The
--   documents that match the search criteria.
--   
--   <a>$sel:httpStatus:SearchResponse'</a>,
--   <a>searchResponse_httpStatus</a> - The response's http status code.
newSearchResponse :: Int -> SearchResponse
newtype ContentType
ContentType' :: Text -> ContentType
[fromContentType] :: ContentType -> Text
pattern ContentType_Application_json :: ContentType
pattern ContentType_Application_xml :: ContentType
newtype QueryParser
QueryParser' :: Text -> QueryParser
[fromQueryParser] :: QueryParser -> Text
pattern QueryParser_Dismax :: QueryParser
pattern QueryParser_Lucene :: QueryParser
pattern QueryParser_Simple :: QueryParser
pattern QueryParser_Structured :: QueryParser

-- | A container for facet information.
--   
--   <i>See:</i> <a>newBucket</a> smart constructor.
data Bucket
Bucket' :: Maybe Text -> Maybe Integer -> Bucket

-- | Create a value of <a>Bucket</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:Bucket'</a>, <a>bucket_value</a> - The facet value being
--   counted.
--   
--   <a>$sel:count:Bucket'</a>, <a>bucket_count</a> - The number of hits
--   that contain the facet value in the specified facet field.
newBucket :: Bucket

-- | A container for the calculated facet values and counts.
--   
--   <i>See:</i> <a>newBucketInfo</a> smart constructor.
data BucketInfo
BucketInfo' :: Maybe [Bucket] -> BucketInfo

-- | Create a value of <a>BucketInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:buckets:BucketInfo'</a>, <a>bucketInfo_buckets</a> - A list of
--   the calculated facet values and counts.
newBucketInfo :: BucketInfo

-- | A warning returned by the document service when an issue is discovered
--   while processing an upload request.
--   
--   <i>See:</i> <a>newDocumentServiceWarning</a> smart constructor.
data DocumentServiceWarning
DocumentServiceWarning' :: Maybe Text -> DocumentServiceWarning

-- | Create a value of <a>DocumentServiceWarning</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:message:DocumentServiceWarning'</a>,
--   <a>documentServiceWarning_message</a> - The description for a warning
--   returned by the document service.
newDocumentServiceWarning :: DocumentServiceWarning

-- | The statistics for a field calculated in the request.
--   
--   <i>See:</i> <a>newFieldStats</a> smart constructor.
data FieldStats
FieldStats' :: Maybe Text -> Maybe Text -> Maybe Integer -> Maybe Integer -> Maybe Double -> Maybe Text -> Maybe Double -> Maybe Double -> FieldStats

-- | Create a value of <a>FieldStats</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:max:FieldStats'</a>, <a>fieldStats_max</a> - The maximum value
--   found in the specified field in the result set.
--   
--   If the field is numeric (<tt>int</tt>, <tt>int-array</tt>,
--   <tt>double</tt>, or <tt>double-array</tt>), <tt>max</tt> is the string
--   representation of a double-precision 64-bit floating point value. If
--   the field is <tt>date</tt> or <tt>date-array</tt>, <tt>max</tt> is the
--   string representation of a date with the format specified in <a>IETF
--   RFC3339</a>: yyyy-mm-ddTHH:mm:ss.SSSZ.
--   
--   <a>$sel:mean:FieldStats'</a>, <a>fieldStats_mean</a> - The average of
--   the values found in the specified field in the result set.
--   
--   If the field is numeric (<tt>int</tt>, <tt>int-array</tt>,
--   <tt>double</tt>, or <tt>double-array</tt>), <tt>mean</tt> is the
--   string representation of a double-precision 64-bit floating point
--   value. If the field is <tt>date</tt> or <tt>date-array</tt>,
--   <tt>mean</tt> is the string representation of a date with the format
--   specified in <a>IETF RFC3339</a>: yyyy-mm-ddTHH:mm:ss.SSSZ.
--   
--   <a>$sel:count:FieldStats'</a>, <a>fieldStats_count</a> - The number of
--   documents that contain a value in the specified field in the result
--   set.
--   
--   <a>$sel:missing:FieldStats'</a>, <a>fieldStats_missing</a> - The
--   number of documents that do not contain a value in the specified field
--   in the result set.
--   
--   <a>$sel:stddev:FieldStats'</a>, <a>fieldStats_stddev</a> - The
--   standard deviation of the values in the specified field in the result
--   set.
--   
--   <a>$sel:min:FieldStats'</a>, <a>fieldStats_min</a> - The minimum value
--   found in the specified field in the result set.
--   
--   If the field is numeric (<tt>int</tt>, <tt>int-array</tt>,
--   <tt>double</tt>, or <tt>double-array</tt>), <tt>min</tt> is the string
--   representation of a double-precision 64-bit floating point value. If
--   the field is <tt>date</tt> or <tt>date-array</tt>, <tt>min</tt> is the
--   string representation of a date with the format specified in <a>IETF
--   RFC3339</a>: yyyy-mm-ddTHH:mm:ss.SSSZ.
--   
--   <a>$sel:sumOfSquares:FieldStats'</a>, <a>fieldStats_sumOfSquares</a> -
--   The sum of all field values in the result set squared.
--   
--   <a>$sel:sum:FieldStats'</a>, <a>fieldStats_sum</a> - The sum of the
--   field values across the documents in the result set. <tt>null</tt> for
--   date fields.
newFieldStats :: FieldStats

-- | Information about a document that matches the search request.
--   
--   <i>See:</i> <a>newHit</a> smart constructor.
data Hit
Hit' :: Maybe (HashMap Text Text) -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe (HashMap Text [Text]) -> Hit

-- | Create a value of <a>Hit</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:exprs:Hit'</a>, <a>hit_exprs</a> - The expressions returned
--   from a document that matches the search request.
--   
--   <a>$sel:id:Hit'</a>, <a>hit_id</a> - The document ID of a document
--   that matches the search request.
--   
--   <a>$sel:highlights:Hit'</a>, <a>hit_highlights</a> - The highlights
--   returned from a document that matches the search request.
--   
--   <a>$sel:fields:Hit'</a>, <a>hit_fields</a> - The fields returned from
--   a document that matches the search request.
newHit :: Hit

-- | The collection of documents that match the search request.
--   
--   <i>See:</i> <a>newHits</a> smart constructor.
data Hits
Hits' :: Maybe Text -> Maybe [Hit] -> Maybe Integer -> Maybe Integer -> Hits

-- | Create a value of <a>Hits</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cursor:Hits'</a>, <a>hits_cursor</a> - A cursor that can be
--   used to retrieve the next set of matching documents when you want to
--   page through a large result set.
--   
--   <a>$sel:hit:Hits'</a>, <a>hits_hit</a> - A document that matches the
--   search request.
--   
--   <a>$sel:start:Hits'</a>, <a>hits_start</a> - The index of the first
--   matching document.
--   
--   <a>$sel:found:Hits'</a>, <a>hits_found</a> - The total number of
--   documents that match the search request.
newHits :: Hits

-- | Contains the resource id (<tt>rid</tt>) and the time it took to
--   process the request (<tt>timems</tt>).
--   
--   <i>See:</i> <a>newSearchStatus</a> smart constructor.
data SearchStatus
SearchStatus' :: Maybe Text -> Maybe Integer -> SearchStatus

-- | Create a value of <a>SearchStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:rid:SearchStatus'</a>, <a>searchStatus_rid</a> - The encrypted
--   resource ID for the request.
--   
--   <a>$sel:timems:SearchStatus'</a>, <a>searchStatus_timems</a> - How
--   long it took to process the request, in milliseconds.
newSearchStatus :: SearchStatus

-- | Container for the suggestion information returned in a
--   <tt>SuggestResponse</tt>.
--   
--   <i>See:</i> <a>newSuggestModel</a> smart constructor.
data SuggestModel
SuggestModel' :: Maybe Integer -> Maybe [SuggestionMatch] -> Maybe Text -> SuggestModel

-- | Create a value of <a>SuggestModel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:found:SuggestModel'</a>, <a>suggestModel_found</a> - The
--   number of documents that were found to match the query string.
--   
--   <a>$sel:suggestions:SuggestModel'</a>, <a>suggestModel_suggestions</a>
--   - The documents that match the query string.
--   
--   <a>$sel:query:SuggestModel'</a>, <a>suggestModel_query</a> - The query
--   string specified in the suggest request.
newSuggestModel :: SuggestModel

-- | Contains the resource id (<tt>rid</tt>) and the time it took to
--   process the request (<tt>timems</tt>).
--   
--   <i>See:</i> <a>newSuggestStatus</a> smart constructor.
data SuggestStatus
SuggestStatus' :: Maybe Text -> Maybe Integer -> SuggestStatus

-- | Create a value of <a>SuggestStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:rid:SuggestStatus'</a>, <a>suggestStatus_rid</a> - The
--   encrypted resource ID for the request.
--   
--   <a>$sel:timems:SuggestStatus'</a>, <a>suggestStatus_timems</a> - How
--   long it took to process the request, in milliseconds.
newSuggestStatus :: SuggestStatus

-- | An autocomplete suggestion that matches the query string specified in
--   a <tt>SuggestRequest</tt>.
--   
--   <i>See:</i> <a>newSuggestionMatch</a> smart constructor.
data SuggestionMatch
SuggestionMatch' :: Maybe Text -> Maybe Integer -> Maybe Text -> SuggestionMatch

-- | Create a value of <a>SuggestionMatch</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:suggestion:SuggestionMatch'</a>,
--   <a>suggestionMatch_suggestion</a> - The string that matches the query
--   string specified in the <tt>SuggestRequest</tt>.
--   
--   <a>$sel:score:SuggestionMatch'</a>, <a>suggestionMatch_score</a> - The
--   relevance score of a suggested match.
--   
--   <a>$sel:id:SuggestionMatch'</a>, <a>suggestionMatch_id</a> - The
--   document ID of the suggested document.
newSuggestionMatch :: SuggestionMatch
