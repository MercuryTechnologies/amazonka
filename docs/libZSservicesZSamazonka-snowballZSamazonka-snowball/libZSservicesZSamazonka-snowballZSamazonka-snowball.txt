-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-snowballZSamazonka-snowball
@version 2.0


module Network.AWS.Snowball.Types.Address

-- | The address that you want the Snow device(s) associated with a
--   specific job to be shipped to. Addresses are validated at the time of
--   creation. The address you provide must be located within the
--   serviceable area of your region. Although no individual elements of
--   the <tt>Address</tt> are required, if the address is invalid or
--   unsupported, then an exception is thrown.
--   
--   <i>See:</i> <a>newAddress</a> smart constructor.
data Address
Address' :: Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Address

-- | If the address you are creating is a primary address, then set this
--   option to true. This field is not supported in most regions.
[$sel:isRestricted:Address'] :: Address -> Maybe Bool

-- | The third line in a street address that a Snow device is to be
--   delivered to.
[$sel:street3:Address'] :: Address -> Maybe Text

-- | This field is no longer used and the value is ignored.
[$sel:landmark:Address'] :: Address -> Maybe Text

-- | The postal code in an address that a Snow device is to be delivered
--   to.
[$sel:postalCode:Address'] :: Address -> Maybe Text

-- | The country in an address that a Snow device is to be delivered to.
[$sel:country:Address'] :: Address -> Maybe Text

-- | The state or province in an address that a Snow device is to be
--   delivered to.
[$sel:stateOrProvince:Address'] :: Address -> Maybe Text

-- | The second line in a street address that a Snow device is to be
--   delivered to.
[$sel:street2:Address'] :: Address -> Maybe Text

-- | The unique ID for an address.
[$sel:addressId:Address'] :: Address -> Maybe Text

-- | The city in an address that a Snow device is to be delivered to.
[$sel:city:Address'] :: Address -> Maybe Text

-- | The phone number associated with an address that a Snow device is to
--   be delivered to.
[$sel:phoneNumber:Address'] :: Address -> Maybe Text

-- | The name of the company to receive a Snow device at an address.
[$sel:company:Address'] :: Address -> Maybe Text

-- | The name of a person to receive a Snow device at an address.
[$sel:name:Address'] :: Address -> Maybe Text

-- | This field is no longer used and the value is ignored.
[$sel:prefectureOrDistrict:Address'] :: Address -> Maybe Text

-- | The first line in a street address that a Snow device is to be
--   delivered to.
[$sel:street1:Address'] :: Address -> Maybe Text

-- | Create a value of <a>Address</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:isRestricted:Address'</a>, <a>address_isRestricted</a> - If
--   the address you are creating is a primary address, then set this
--   option to true. This field is not supported in most regions.
--   
--   <a>$sel:street3:Address'</a>, <a>address_street3</a> - The third line
--   in a street address that a Snow device is to be delivered to.
--   
--   <a>$sel:landmark:Address'</a>, <a>address_landmark</a> - This field is
--   no longer used and the value is ignored.
--   
--   <a>$sel:postalCode:Address'</a>, <a>address_postalCode</a> - The
--   postal code in an address that a Snow device is to be delivered to.
--   
--   <a>$sel:country:Address'</a>, <a>address_country</a> - The country in
--   an address that a Snow device is to be delivered to.
--   
--   <a>$sel:stateOrProvince:Address'</a>, <a>address_stateOrProvince</a> -
--   The state or province in an address that a Snow device is to be
--   delivered to.
--   
--   <a>$sel:street2:Address'</a>, <a>address_street2</a> - The second line
--   in a street address that a Snow device is to be delivered to.
--   
--   <a>$sel:addressId:Address'</a>, <a>address_addressId</a> - The unique
--   ID for an address.
--   
--   <a>$sel:city:Address'</a>, <a>address_city</a> - The city in an
--   address that a Snow device is to be delivered to.
--   
--   <a>$sel:phoneNumber:Address'</a>, <a>address_phoneNumber</a> - The
--   phone number associated with an address that a Snow device is to be
--   delivered to.
--   
--   <a>$sel:company:Address'</a>, <a>address_company</a> - The name of the
--   company to receive a Snow device at an address.
--   
--   <a>$sel:name:Address'</a>, <a>address_name</a> - The name of a person
--   to receive a Snow device at an address.
--   
--   <a>$sel:prefectureOrDistrict:Address'</a>,
--   <a>address_prefectureOrDistrict</a> - This field is no longer used and
--   the value is ignored.
--   
--   <a>$sel:street1:Address'</a>, <a>address_street1</a> - The first line
--   in a street address that a Snow device is to be delivered to.
newAddress :: Address

-- | If the address you are creating is a primary address, then set this
--   option to true. This field is not supported in most regions.
address_isRestricted :: Lens' Address (Maybe Bool)

-- | The third line in a street address that a Snow device is to be
--   delivered to.
address_street3 :: Lens' Address (Maybe Text)

-- | This field is no longer used and the value is ignored.
address_landmark :: Lens' Address (Maybe Text)

-- | The postal code in an address that a Snow device is to be delivered
--   to.
address_postalCode :: Lens' Address (Maybe Text)

-- | The country in an address that a Snow device is to be delivered to.
address_country :: Lens' Address (Maybe Text)

-- | The state or province in an address that a Snow device is to be
--   delivered to.
address_stateOrProvince :: Lens' Address (Maybe Text)

-- | The second line in a street address that a Snow device is to be
--   delivered to.
address_street2 :: Lens' Address (Maybe Text)

-- | The unique ID for an address.
address_addressId :: Lens' Address (Maybe Text)

-- | The city in an address that a Snow device is to be delivered to.
address_city :: Lens' Address (Maybe Text)

-- | The phone number associated with an address that a Snow device is to
--   be delivered to.
address_phoneNumber :: Lens' Address (Maybe Text)

-- | The name of the company to receive a Snow device at an address.
address_company :: Lens' Address (Maybe Text)

-- | The name of a person to receive a Snow device at an address.
address_name :: Lens' Address (Maybe Text)

-- | This field is no longer used and the value is ignored.
address_prefectureOrDistrict :: Lens' Address (Maybe Text)

-- | The first line in a street address that a Snow device is to be
--   delivered to.
address_street1 :: Lens' Address (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Snowball.Types.Address.Address
instance GHC.Show.Show Network.AWS.Snowball.Types.Address.Address
instance GHC.Read.Read Network.AWS.Snowball.Types.Address.Address
instance GHC.Classes.Eq Network.AWS.Snowball.Types.Address.Address
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Snowball.Types.Address.Address
instance Data.Hashable.Class.Hashable Network.AWS.Snowball.Types.Address.Address
instance Control.DeepSeq.NFData Network.AWS.Snowball.Types.Address.Address
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Snowball.Types.Address.Address


module Network.AWS.Snowball.Types.ClusterState
newtype ClusterState
ClusterState' :: Text -> ClusterState
[fromClusterState] :: ClusterState -> Text
pattern ClusterState_AwaitingQuorum :: ClusterState
pattern ClusterState_Cancelled :: ClusterState
pattern ClusterState_Complete :: ClusterState
pattern ClusterState_InUse :: ClusterState
pattern ClusterState_Pending :: ClusterState
instance Network.AWS.Data.XML.ToXML Network.AWS.Snowball.Types.ClusterState.ClusterState
instance Network.AWS.Data.XML.FromXML Network.AWS.Snowball.Types.ClusterState.ClusterState
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Snowball.Types.ClusterState.ClusterState
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Snowball.Types.ClusterState.ClusterState
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Snowball.Types.ClusterState.ClusterState
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Snowball.Types.ClusterState.ClusterState
instance Network.AWS.Data.Query.ToQuery Network.AWS.Snowball.Types.ClusterState.ClusterState
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Snowball.Types.ClusterState.ClusterState
instance Network.AWS.Data.Log.ToLog Network.AWS.Snowball.Types.ClusterState.ClusterState
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Snowball.Types.ClusterState.ClusterState
instance Network.AWS.Data.Text.ToText Network.AWS.Snowball.Types.ClusterState.ClusterState
instance Network.AWS.Data.Text.FromText Network.AWS.Snowball.Types.ClusterState.ClusterState
instance Control.DeepSeq.NFData Network.AWS.Snowball.Types.ClusterState.ClusterState
instance Data.Hashable.Class.Hashable Network.AWS.Snowball.Types.ClusterState.ClusterState
instance GHC.Generics.Generic Network.AWS.Snowball.Types.ClusterState.ClusterState
instance GHC.Classes.Ord Network.AWS.Snowball.Types.ClusterState.ClusterState
instance GHC.Classes.Eq Network.AWS.Snowball.Types.ClusterState.ClusterState
instance GHC.Read.Read Network.AWS.Snowball.Types.ClusterState.ClusterState
instance GHC.Show.Show Network.AWS.Snowball.Types.ClusterState.ClusterState


module Network.AWS.Snowball.Types.ClusterListEntry

-- | Contains a cluster's state, a cluster's ID, and other important
--   information.
--   
--   <i>See:</i> <a>newClusterListEntry</a> smart constructor.
data ClusterListEntry
ClusterListEntry' :: Maybe ClusterState -> Maybe Text -> Maybe POSIX -> Maybe Text -> ClusterListEntry

-- | The current state of this cluster. For information about the state of
--   a specific node, see JobListEntry$JobState.
[$sel:clusterState:ClusterListEntry'] :: ClusterListEntry -> Maybe ClusterState

-- | The 39-character ID for the cluster that you want to list, for example
--   <tt>CID123e4567-e89b-12d3-a456-426655440000</tt>.
[$sel:clusterId:ClusterListEntry'] :: ClusterListEntry -> Maybe Text

-- | The creation date for this cluster.
[$sel:creationDate:ClusterListEntry'] :: ClusterListEntry -> Maybe POSIX

-- | Defines an optional description of the cluster, for example
--   <tt>Environmental Data Cluster-01</tt>.
[$sel:description:ClusterListEntry'] :: ClusterListEntry -> Maybe Text

-- | Create a value of <a>ClusterListEntry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterState:ClusterListEntry'</a>,
--   <a>clusterListEntry_clusterState</a> - The current state of this
--   cluster. For information about the state of a specific node, see
--   JobListEntry$JobState.
--   
--   <a>$sel:clusterId:ClusterListEntry'</a>,
--   <a>clusterListEntry_clusterId</a> - The 39-character ID for the
--   cluster that you want to list, for example
--   <tt>CID123e4567-e89b-12d3-a456-426655440000</tt>.
--   
--   <a>$sel:creationDate:ClusterListEntry'</a>,
--   <a>clusterListEntry_creationDate</a> - The creation date for this
--   cluster.
--   
--   <a>$sel:description:ClusterListEntry'</a>,
--   <a>clusterListEntry_description</a> - Defines an optional description
--   of the cluster, for example <tt>Environmental Data Cluster-01</tt>.
newClusterListEntry :: ClusterListEntry

-- | The current state of this cluster. For information about the state of
--   a specific node, see JobListEntry$JobState.
clusterListEntry_clusterState :: Lens' ClusterListEntry (Maybe ClusterState)

-- | The 39-character ID for the cluster that you want to list, for example
--   <tt>CID123e4567-e89b-12d3-a456-426655440000</tt>.
clusterListEntry_clusterId :: Lens' ClusterListEntry (Maybe Text)

-- | The creation date for this cluster.
clusterListEntry_creationDate :: Lens' ClusterListEntry (Maybe UTCTime)

-- | Defines an optional description of the cluster, for example
--   <tt>Environmental Data Cluster-01</tt>.
clusterListEntry_description :: Lens' ClusterListEntry (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Snowball.Types.ClusterListEntry.ClusterListEntry
instance GHC.Show.Show Network.AWS.Snowball.Types.ClusterListEntry.ClusterListEntry
instance GHC.Read.Read Network.AWS.Snowball.Types.ClusterListEntry.ClusterListEntry
instance GHC.Classes.Eq Network.AWS.Snowball.Types.ClusterListEntry.ClusterListEntry
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Snowball.Types.ClusterListEntry.ClusterListEntry
instance Data.Hashable.Class.Hashable Network.AWS.Snowball.Types.ClusterListEntry.ClusterListEntry
instance Control.DeepSeq.NFData Network.AWS.Snowball.Types.ClusterListEntry.ClusterListEntry


module Network.AWS.Snowball.Types.CompatibleImage

-- | A JSON-formatted object that describes a compatible Amazon Machine
--   Image (AMI), including the ID and name for a Snow device AMI. This AMI
--   is compatible with the device's physical hardware requirements, and it
--   should be able to be run in an SBE1 instance on the device.
--   
--   <i>See:</i> <a>newCompatibleImage</a> smart constructor.
data CompatibleImage
CompatibleImage' :: Maybe Text -> Maybe Text -> CompatibleImage

-- | The optional name of a compatible image.
[$sel:name:CompatibleImage'] :: CompatibleImage -> Maybe Text

-- | The unique identifier for an individual Snow device AMI.
[$sel:amiId:CompatibleImage'] :: CompatibleImage -> Maybe Text

-- | Create a value of <a>CompatibleImage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:CompatibleImage'</a>, <a>compatibleImage_name</a> - The
--   optional name of a compatible image.
--   
--   <a>$sel:amiId:CompatibleImage'</a>, <a>compatibleImage_amiId</a> - The
--   unique identifier for an individual Snow device AMI.
newCompatibleImage :: CompatibleImage

-- | The optional name of a compatible image.
compatibleImage_name :: Lens' CompatibleImage (Maybe Text)

-- | The unique identifier for an individual Snow device AMI.
compatibleImage_amiId :: Lens' CompatibleImage (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Snowball.Types.CompatibleImage.CompatibleImage
instance GHC.Show.Show Network.AWS.Snowball.Types.CompatibleImage.CompatibleImage
instance GHC.Read.Read Network.AWS.Snowball.Types.CompatibleImage.CompatibleImage
instance GHC.Classes.Eq Network.AWS.Snowball.Types.CompatibleImage.CompatibleImage
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Snowball.Types.CompatibleImage.CompatibleImage
instance Data.Hashable.Class.Hashable Network.AWS.Snowball.Types.CompatibleImage.CompatibleImage
instance Control.DeepSeq.NFData Network.AWS.Snowball.Types.CompatibleImage.CompatibleImage


module Network.AWS.Snowball.Types.DataTransfer

-- | Defines the real-time status of a Snow device's data transfer while
--   the device is at AWS. This data is only available while a job has a
--   <tt>JobState</tt> value of <tt>InProgress</tt>, for both import and
--   export jobs.
--   
--   <i>See:</i> <a>newDataTransfer</a> smart constructor.
data DataTransfer
DataTransfer' :: Maybe Integer -> Maybe Integer -> Maybe Integer -> Maybe Integer -> DataTransfer

-- | The total number of objects for a transfer between a Snow device and
--   Amazon S3. This value is set to 0 (zero) until all the keys that will
--   be transferred have been listed.
[$sel:totalObjects:DataTransfer'] :: DataTransfer -> Maybe Integer

-- | The total bytes of data for a transfer between a Snow device and
--   Amazon S3. This value is set to 0 (zero) until all the keys that will
--   be transferred have been listed.
[$sel:totalBytes:DataTransfer'] :: DataTransfer -> Maybe Integer

-- | The number of objects transferred between a Snow device and Amazon S3.
[$sel:objectsTransferred:DataTransfer'] :: DataTransfer -> Maybe Integer

-- | The number of bytes transferred between a Snow device and Amazon S3.
[$sel:bytesTransferred:DataTransfer'] :: DataTransfer -> Maybe Integer

-- | Create a value of <a>DataTransfer</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:totalObjects:DataTransfer'</a>,
--   <a>dataTransfer_totalObjects</a> - The total number of objects for a
--   transfer between a Snow device and Amazon S3. This value is set to 0
--   (zero) until all the keys that will be transferred have been listed.
--   
--   <a>$sel:totalBytes:DataTransfer'</a>, <a>dataTransfer_totalBytes</a> -
--   The total bytes of data for a transfer between a Snow device and
--   Amazon S3. This value is set to 0 (zero) until all the keys that will
--   be transferred have been listed.
--   
--   <a>$sel:objectsTransferred:DataTransfer'</a>,
--   <a>dataTransfer_objectsTransferred</a> - The number of objects
--   transferred between a Snow device and Amazon S3.
--   
--   <a>$sel:bytesTransferred:DataTransfer'</a>,
--   <a>dataTransfer_bytesTransferred</a> - The number of bytes transferred
--   between a Snow device and Amazon S3.
newDataTransfer :: DataTransfer

-- | The total number of objects for a transfer between a Snow device and
--   Amazon S3. This value is set to 0 (zero) until all the keys that will
--   be transferred have been listed.
dataTransfer_totalObjects :: Lens' DataTransfer (Maybe Integer)

-- | The total bytes of data for a transfer between a Snow device and
--   Amazon S3. This value is set to 0 (zero) until all the keys that will
--   be transferred have been listed.
dataTransfer_totalBytes :: Lens' DataTransfer (Maybe Integer)

-- | The number of objects transferred between a Snow device and Amazon S3.
dataTransfer_objectsTransferred :: Lens' DataTransfer (Maybe Integer)

-- | The number of bytes transferred between a Snow device and Amazon S3.
dataTransfer_bytesTransferred :: Lens' DataTransfer (Maybe Integer)
instance GHC.Generics.Generic Network.AWS.Snowball.Types.DataTransfer.DataTransfer
instance GHC.Show.Show Network.AWS.Snowball.Types.DataTransfer.DataTransfer
instance GHC.Read.Read Network.AWS.Snowball.Types.DataTransfer.DataTransfer
instance GHC.Classes.Eq Network.AWS.Snowball.Types.DataTransfer.DataTransfer
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Snowball.Types.DataTransfer.DataTransfer
instance Data.Hashable.Class.Hashable Network.AWS.Snowball.Types.DataTransfer.DataTransfer
instance Control.DeepSeq.NFData Network.AWS.Snowball.Types.DataTransfer.DataTransfer


module Network.AWS.Snowball.Types.DeviceServiceName
newtype DeviceServiceName
DeviceServiceName' :: Text -> DeviceServiceName
[fromDeviceServiceName] :: DeviceServiceName -> Text
pattern DeviceServiceName_NFS_ON_DEVICE_SERVICE :: DeviceServiceName
pattern DeviceServiceName_S3_ON_DEVICE_SERVICE :: DeviceServiceName
instance Network.AWS.Data.XML.ToXML Network.AWS.Snowball.Types.DeviceServiceName.DeviceServiceName
instance Network.AWS.Data.XML.FromXML Network.AWS.Snowball.Types.DeviceServiceName.DeviceServiceName
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Snowball.Types.DeviceServiceName.DeviceServiceName
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Snowball.Types.DeviceServiceName.DeviceServiceName
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Snowball.Types.DeviceServiceName.DeviceServiceName
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Snowball.Types.DeviceServiceName.DeviceServiceName
instance Network.AWS.Data.Query.ToQuery Network.AWS.Snowball.Types.DeviceServiceName.DeviceServiceName
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Snowball.Types.DeviceServiceName.DeviceServiceName
instance Network.AWS.Data.Log.ToLog Network.AWS.Snowball.Types.DeviceServiceName.DeviceServiceName
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Snowball.Types.DeviceServiceName.DeviceServiceName
instance Network.AWS.Data.Text.ToText Network.AWS.Snowball.Types.DeviceServiceName.DeviceServiceName
instance Network.AWS.Data.Text.FromText Network.AWS.Snowball.Types.DeviceServiceName.DeviceServiceName
instance Control.DeepSeq.NFData Network.AWS.Snowball.Types.DeviceServiceName.DeviceServiceName
instance Data.Hashable.Class.Hashable Network.AWS.Snowball.Types.DeviceServiceName.DeviceServiceName
instance GHC.Generics.Generic Network.AWS.Snowball.Types.DeviceServiceName.DeviceServiceName
instance GHC.Classes.Ord Network.AWS.Snowball.Types.DeviceServiceName.DeviceServiceName
instance GHC.Classes.Eq Network.AWS.Snowball.Types.DeviceServiceName.DeviceServiceName
instance GHC.Read.Read Network.AWS.Snowball.Types.DeviceServiceName.DeviceServiceName
instance GHC.Show.Show Network.AWS.Snowball.Types.DeviceServiceName.DeviceServiceName


module Network.AWS.Snowball.Types.Ec2AmiResource

-- | A JSON-formatted object that contains the IDs for an Amazon Machine
--   Image (AMI), including the Amazon EC2 AMI ID and the Snow device AMI
--   ID. Each AMI has these two IDs to simplify identifying the AMI in both
--   the AWS Cloud and on the device.
--   
--   <i>See:</i> <a>newEc2AmiResource</a> smart constructor.
data Ec2AmiResource
Ec2AmiResource' :: Maybe Text -> Text -> Ec2AmiResource

-- | The ID of the AMI on the Snow device.
[$sel:snowballAmiId:Ec2AmiResource'] :: Ec2AmiResource -> Maybe Text

-- | The ID of the AMI in Amazon EC2.
[$sel:amiId:Ec2AmiResource'] :: Ec2AmiResource -> Text

-- | Create a value of <a>Ec2AmiResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:snowballAmiId:Ec2AmiResource'</a>,
--   <a>ec2AmiResource_snowballAmiId</a> - The ID of the AMI on the Snow
--   device.
--   
--   <a>$sel:amiId:Ec2AmiResource'</a>, <a>ec2AmiResource_amiId</a> - The
--   ID of the AMI in Amazon EC2.
newEc2AmiResource :: Text -> Ec2AmiResource

-- | The ID of the AMI on the Snow device.
ec2AmiResource_snowballAmiId :: Lens' Ec2AmiResource (Maybe Text)

-- | The ID of the AMI in Amazon EC2.
ec2AmiResource_amiId :: Lens' Ec2AmiResource Text
instance GHC.Generics.Generic Network.AWS.Snowball.Types.Ec2AmiResource.Ec2AmiResource
instance GHC.Show.Show Network.AWS.Snowball.Types.Ec2AmiResource.Ec2AmiResource
instance GHC.Read.Read Network.AWS.Snowball.Types.Ec2AmiResource.Ec2AmiResource
instance GHC.Classes.Eq Network.AWS.Snowball.Types.Ec2AmiResource.Ec2AmiResource
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Snowball.Types.Ec2AmiResource.Ec2AmiResource
instance Data.Hashable.Class.Hashable Network.AWS.Snowball.Types.Ec2AmiResource.Ec2AmiResource
instance Control.DeepSeq.NFData Network.AWS.Snowball.Types.Ec2AmiResource.Ec2AmiResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Snowball.Types.Ec2AmiResource.Ec2AmiResource


module Network.AWS.Snowball.Types.EventTriggerDefinition

-- | The container for the EventTriggerDefinition$EventResourceARN.
--   
--   <i>See:</i> <a>newEventTriggerDefinition</a> smart constructor.
data EventTriggerDefinition
EventTriggerDefinition' :: Maybe Text -> EventTriggerDefinition

-- | The Amazon Resource Name (ARN) for any local Amazon S3 resource that
--   is an AWS Lambda function's event trigger associated with this job.
[$sel:eventResourceARN:EventTriggerDefinition'] :: EventTriggerDefinition -> Maybe Text

-- | Create a value of <a>EventTriggerDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventResourceARN:EventTriggerDefinition'</a>,
--   <a>eventTriggerDefinition_eventResourceARN</a> - The Amazon Resource
--   Name (ARN) for any local Amazon S3 resource that is an AWS Lambda
--   function's event trigger associated with this job.
newEventTriggerDefinition :: EventTriggerDefinition

-- | The Amazon Resource Name (ARN) for any local Amazon S3 resource that
--   is an AWS Lambda function's event trigger associated with this job.
eventTriggerDefinition_eventResourceARN :: Lens' EventTriggerDefinition (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Snowball.Types.EventTriggerDefinition.EventTriggerDefinition
instance GHC.Show.Show Network.AWS.Snowball.Types.EventTriggerDefinition.EventTriggerDefinition
instance GHC.Read.Read Network.AWS.Snowball.Types.EventTriggerDefinition.EventTriggerDefinition
instance GHC.Classes.Eq Network.AWS.Snowball.Types.EventTriggerDefinition.EventTriggerDefinition
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Snowball.Types.EventTriggerDefinition.EventTriggerDefinition
instance Data.Hashable.Class.Hashable Network.AWS.Snowball.Types.EventTriggerDefinition.EventTriggerDefinition
instance Control.DeepSeq.NFData Network.AWS.Snowball.Types.EventTriggerDefinition.EventTriggerDefinition
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Snowball.Types.EventTriggerDefinition.EventTriggerDefinition


module Network.AWS.Snowball.Types.INDTaxDocuments

-- | The tax documents required in AWS Regions in India.
--   
--   <i>See:</i> <a>newINDTaxDocuments</a> smart constructor.
data INDTaxDocuments
INDTaxDocuments' :: Maybe Text -> INDTaxDocuments

-- | The Goods and Services Tax (GST) documents required in AWS Regions in
--   India.
[$sel:gstin:INDTaxDocuments'] :: INDTaxDocuments -> Maybe Text

-- | Create a value of <a>INDTaxDocuments</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gstin:INDTaxDocuments'</a>, <a>iNDTaxDocuments_gstin</a> - The
--   Goods and Services Tax (GST) documents required in AWS Regions in
--   India.
newINDTaxDocuments :: INDTaxDocuments

-- | The Goods and Services Tax (GST) documents required in AWS Regions in
--   India.
iNDTaxDocuments_gstin :: Lens' INDTaxDocuments (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Snowball.Types.INDTaxDocuments.INDTaxDocuments
instance GHC.Show.Show Network.AWS.Snowball.Types.INDTaxDocuments.INDTaxDocuments
instance GHC.Read.Read Network.AWS.Snowball.Types.INDTaxDocuments.INDTaxDocuments
instance GHC.Classes.Eq Network.AWS.Snowball.Types.INDTaxDocuments.INDTaxDocuments
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Snowball.Types.INDTaxDocuments.INDTaxDocuments
instance Data.Hashable.Class.Hashable Network.AWS.Snowball.Types.INDTaxDocuments.INDTaxDocuments
instance Control.DeepSeq.NFData Network.AWS.Snowball.Types.INDTaxDocuments.INDTaxDocuments
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Snowball.Types.INDTaxDocuments.INDTaxDocuments


module Network.AWS.Snowball.Types.JobLogs

-- | Contains job logs. Whenever a Snow device is used to import data into
--   or export data out of Amazon S3, you'll have the option of downloading
--   a PDF job report. Job logs are returned as a part of the response
--   syntax of the <tt>DescribeJob</tt> action in the <tt>JobMetadata</tt>
--   data type. The job logs can be accessed for up to 60 minutes after
--   this request has been made. To access any of the job logs after 60
--   minutes have passed, you'll have to make another call to the
--   <tt>DescribeJob</tt> action.
--   
--   For import jobs, the PDF job report becomes available at the end of
--   the import process. For export jobs, your job report typically becomes
--   available while the Snow device for your job part is being delivered
--   to you.
--   
--   The job report provides you insight into the state of your Amazon S3
--   data transfer. The report includes details about your job or job part
--   for your records.
--   
--   For deeper visibility into the status of your transferred objects, you
--   can look at the two associated logs: a success log and a failure log.
--   The logs are saved in comma-separated value (CSV) format, and the name
--   of each log includes the ID of the job or job part that the log
--   describes.
--   
--   <i>See:</i> <a>newJobLogs</a> smart constructor.
data JobLogs
JobLogs' :: Maybe Text -> Maybe Text -> Maybe Text -> JobLogs

-- | A link to an Amazon S3 presigned URL where the job failure log is
--   located.
[$sel:jobFailureLogURI:JobLogs'] :: JobLogs -> Maybe Text

-- | A link to an Amazon S3 presigned URL where the job completion report
--   is located.
[$sel:jobCompletionReportURI:JobLogs'] :: JobLogs -> Maybe Text

-- | A link to an Amazon S3 presigned URL where the job success log is
--   located.
[$sel:jobSuccessLogURI:JobLogs'] :: JobLogs -> Maybe Text

-- | Create a value of <a>JobLogs</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobFailureLogURI:JobLogs'</a>, <a>jobLogs_jobFailureLogURI</a>
--   - A link to an Amazon S3 presigned URL where the job failure log is
--   located.
--   
--   <a>$sel:jobCompletionReportURI:JobLogs'</a>,
--   <a>jobLogs_jobCompletionReportURI</a> - A link to an Amazon S3
--   presigned URL where the job completion report is located.
--   
--   <a>$sel:jobSuccessLogURI:JobLogs'</a>, <a>jobLogs_jobSuccessLogURI</a>
--   - A link to an Amazon S3 presigned URL where the job success log is
--   located.
newJobLogs :: JobLogs

-- | A link to an Amazon S3 presigned URL where the job failure log is
--   located.
jobLogs_jobFailureLogURI :: Lens' JobLogs (Maybe Text)

-- | A link to an Amazon S3 presigned URL where the job completion report
--   is located.
jobLogs_jobCompletionReportURI :: Lens' JobLogs (Maybe Text)

-- | A link to an Amazon S3 presigned URL where the job success log is
--   located.
jobLogs_jobSuccessLogURI :: Lens' JobLogs (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Snowball.Types.JobLogs.JobLogs
instance GHC.Show.Show Network.AWS.Snowball.Types.JobLogs.JobLogs
instance GHC.Read.Read Network.AWS.Snowball.Types.JobLogs.JobLogs
instance GHC.Classes.Eq Network.AWS.Snowball.Types.JobLogs.JobLogs
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Snowball.Types.JobLogs.JobLogs
instance Data.Hashable.Class.Hashable Network.AWS.Snowball.Types.JobLogs.JobLogs
instance Control.DeepSeq.NFData Network.AWS.Snowball.Types.JobLogs.JobLogs


module Network.AWS.Snowball.Types.JobState
newtype JobState
JobState' :: Text -> JobState
[fromJobState] :: JobState -> Text
pattern JobState_Cancelled :: JobState
pattern JobState_Complete :: JobState
pattern JobState_InProgress :: JobState
pattern JobState_InTransitToAWS :: JobState
pattern JobState_InTransitToCustomer :: JobState
pattern JobState_Listing :: JobState
pattern JobState_New :: JobState
pattern JobState_Pending :: JobState
pattern JobState_PreparingAppliance :: JobState
pattern JobState_PreparingShipment :: JobState
pattern JobState_WithAWS :: JobState
pattern JobState_WithAWSSortingFacility :: JobState
pattern JobState_WithCustomer :: JobState
instance Network.AWS.Data.XML.ToXML Network.AWS.Snowball.Types.JobState.JobState
instance Network.AWS.Data.XML.FromXML Network.AWS.Snowball.Types.JobState.JobState
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Snowball.Types.JobState.JobState
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Snowball.Types.JobState.JobState
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Snowball.Types.JobState.JobState
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Snowball.Types.JobState.JobState
instance Network.AWS.Data.Query.ToQuery Network.AWS.Snowball.Types.JobState.JobState
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Snowball.Types.JobState.JobState
instance Network.AWS.Data.Log.ToLog Network.AWS.Snowball.Types.JobState.JobState
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Snowball.Types.JobState.JobState
instance Network.AWS.Data.Text.ToText Network.AWS.Snowball.Types.JobState.JobState
instance Network.AWS.Data.Text.FromText Network.AWS.Snowball.Types.JobState.JobState
instance Control.DeepSeq.NFData Network.AWS.Snowball.Types.JobState.JobState
instance Data.Hashable.Class.Hashable Network.AWS.Snowball.Types.JobState.JobState
instance GHC.Generics.Generic Network.AWS.Snowball.Types.JobState.JobState
instance GHC.Classes.Ord Network.AWS.Snowball.Types.JobState.JobState
instance GHC.Classes.Eq Network.AWS.Snowball.Types.JobState.JobState
instance GHC.Read.Read Network.AWS.Snowball.Types.JobState.JobState
instance GHC.Show.Show Network.AWS.Snowball.Types.JobState.JobState


module Network.AWS.Snowball.Types.JobType
newtype JobType
JobType' :: Text -> JobType
[fromJobType] :: JobType -> Text
pattern JobType_EXPORT :: JobType
pattern JobType_IMPORT :: JobType
pattern JobType_LOCAL_USE :: JobType
instance Network.AWS.Data.XML.ToXML Network.AWS.Snowball.Types.JobType.JobType
instance Network.AWS.Data.XML.FromXML Network.AWS.Snowball.Types.JobType.JobType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Snowball.Types.JobType.JobType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Snowball.Types.JobType.JobType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Snowball.Types.JobType.JobType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Snowball.Types.JobType.JobType
instance Network.AWS.Data.Query.ToQuery Network.AWS.Snowball.Types.JobType.JobType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Snowball.Types.JobType.JobType
instance Network.AWS.Data.Log.ToLog Network.AWS.Snowball.Types.JobType.JobType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Snowball.Types.JobType.JobType
instance Network.AWS.Data.Text.ToText Network.AWS.Snowball.Types.JobType.JobType
instance Network.AWS.Data.Text.FromText Network.AWS.Snowball.Types.JobType.JobType
instance Control.DeepSeq.NFData Network.AWS.Snowball.Types.JobType.JobType
instance Data.Hashable.Class.Hashable Network.AWS.Snowball.Types.JobType.JobType
instance GHC.Generics.Generic Network.AWS.Snowball.Types.JobType.JobType
instance GHC.Classes.Ord Network.AWS.Snowball.Types.JobType.JobType
instance GHC.Classes.Eq Network.AWS.Snowball.Types.JobType.JobType
instance GHC.Read.Read Network.AWS.Snowball.Types.JobType.JobType
instance GHC.Show.Show Network.AWS.Snowball.Types.JobType.JobType


module Network.AWS.Snowball.Types.KeyRange

-- | Contains a key range. For export jobs, a <tt>S3Resource</tt> object
--   can have an optional <tt>KeyRange</tt> value. The length of the range
--   is defined at job creation, and has either an inclusive
--   <tt>BeginMarker</tt>, an inclusive <tt>EndMarker</tt>, or both. Ranges
--   are UTF-8 binary sorted.
--   
--   <i>See:</i> <a>newKeyRange</a> smart constructor.
data KeyRange
KeyRange' :: Maybe Text -> Maybe Text -> KeyRange

-- | The key that ends an optional key range for an export job. Ranges are
--   inclusive and UTF-8 binary sorted.
[$sel:endMarker:KeyRange'] :: KeyRange -> Maybe Text

-- | The key that starts an optional key range for an export job. Ranges
--   are inclusive and UTF-8 binary sorted.
[$sel:beginMarker:KeyRange'] :: KeyRange -> Maybe Text

-- | Create a value of <a>KeyRange</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:endMarker:KeyRange'</a>, <a>keyRange_endMarker</a> - The key
--   that ends an optional key range for an export job. Ranges are
--   inclusive and UTF-8 binary sorted.
--   
--   <a>$sel:beginMarker:KeyRange'</a>, <a>keyRange_beginMarker</a> - The
--   key that starts an optional key range for an export job. Ranges are
--   inclusive and UTF-8 binary sorted.
newKeyRange :: KeyRange

-- | The key that ends an optional key range for an export job. Ranges are
--   inclusive and UTF-8 binary sorted.
keyRange_endMarker :: Lens' KeyRange (Maybe Text)

-- | The key that starts an optional key range for an export job. Ranges
--   are inclusive and UTF-8 binary sorted.
keyRange_beginMarker :: Lens' KeyRange (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Snowball.Types.KeyRange.KeyRange
instance GHC.Show.Show Network.AWS.Snowball.Types.KeyRange.KeyRange
instance GHC.Read.Read Network.AWS.Snowball.Types.KeyRange.KeyRange
instance GHC.Classes.Eq Network.AWS.Snowball.Types.KeyRange.KeyRange
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Snowball.Types.KeyRange.KeyRange
instance Data.Hashable.Class.Hashable Network.AWS.Snowball.Types.KeyRange.KeyRange
instance Control.DeepSeq.NFData Network.AWS.Snowball.Types.KeyRange.KeyRange
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Snowball.Types.KeyRange.KeyRange


module Network.AWS.Snowball.Types.LambdaResource

-- | Identifies
--   
--   <i>See:</i> <a>newLambdaResource</a> smart constructor.
data LambdaResource
LambdaResource' :: Maybe [EventTriggerDefinition] -> Maybe Text -> LambdaResource

-- | The array of ARNs for S3Resource objects to trigger the LambdaResource
--   objects associated with this job.
[$sel:eventTriggers:LambdaResource'] :: LambdaResource -> Maybe [EventTriggerDefinition]

-- | An Amazon Resource Name (ARN) that represents an AWS Lambda function
--   to be triggered by PUT object actions on the associated local Amazon
--   S3 resource.
[$sel:lambdaArn:LambdaResource'] :: LambdaResource -> Maybe Text

-- | Create a value of <a>LambdaResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventTriggers:LambdaResource'</a>,
--   <a>lambdaResource_eventTriggers</a> - The array of ARNs for S3Resource
--   objects to trigger the LambdaResource objects associated with this
--   job.
--   
--   <a>$sel:lambdaArn:LambdaResource'</a>, <a>lambdaResource_lambdaArn</a>
--   - An Amazon Resource Name (ARN) that represents an AWS Lambda function
--   to be triggered by PUT object actions on the associated local Amazon
--   S3 resource.
newLambdaResource :: LambdaResource

-- | The array of ARNs for S3Resource objects to trigger the LambdaResource
--   objects associated with this job.
lambdaResource_eventTriggers :: Lens' LambdaResource (Maybe [EventTriggerDefinition])

-- | An Amazon Resource Name (ARN) that represents an AWS Lambda function
--   to be triggered by PUT object actions on the associated local Amazon
--   S3 resource.
lambdaResource_lambdaArn :: Lens' LambdaResource (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Snowball.Types.LambdaResource.LambdaResource
instance GHC.Show.Show Network.AWS.Snowball.Types.LambdaResource.LambdaResource
instance GHC.Read.Read Network.AWS.Snowball.Types.LambdaResource.LambdaResource
instance GHC.Classes.Eq Network.AWS.Snowball.Types.LambdaResource.LambdaResource
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Snowball.Types.LambdaResource.LambdaResource
instance Data.Hashable.Class.Hashable Network.AWS.Snowball.Types.LambdaResource.LambdaResource
instance Control.DeepSeq.NFData Network.AWS.Snowball.Types.LambdaResource.LambdaResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Snowball.Types.LambdaResource.LambdaResource


module Network.AWS.Snowball.Types.LongTermPricingType
newtype LongTermPricingType
LongTermPricingType' :: Text -> LongTermPricingType
[fromLongTermPricingType] :: LongTermPricingType -> Text
pattern LongTermPricingType_OneYear :: LongTermPricingType
pattern LongTermPricingType_ThreeYear :: LongTermPricingType
instance Network.AWS.Data.XML.ToXML Network.AWS.Snowball.Types.LongTermPricingType.LongTermPricingType
instance Network.AWS.Data.XML.FromXML Network.AWS.Snowball.Types.LongTermPricingType.LongTermPricingType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Snowball.Types.LongTermPricingType.LongTermPricingType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Snowball.Types.LongTermPricingType.LongTermPricingType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Snowball.Types.LongTermPricingType.LongTermPricingType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Snowball.Types.LongTermPricingType.LongTermPricingType
instance Network.AWS.Data.Query.ToQuery Network.AWS.Snowball.Types.LongTermPricingType.LongTermPricingType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Snowball.Types.LongTermPricingType.LongTermPricingType
instance Network.AWS.Data.Log.ToLog Network.AWS.Snowball.Types.LongTermPricingType.LongTermPricingType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Snowball.Types.LongTermPricingType.LongTermPricingType
instance Network.AWS.Data.Text.ToText Network.AWS.Snowball.Types.LongTermPricingType.LongTermPricingType
instance Network.AWS.Data.Text.FromText Network.AWS.Snowball.Types.LongTermPricingType.LongTermPricingType
instance Control.DeepSeq.NFData Network.AWS.Snowball.Types.LongTermPricingType.LongTermPricingType
instance Data.Hashable.Class.Hashable Network.AWS.Snowball.Types.LongTermPricingType.LongTermPricingType
instance GHC.Generics.Generic Network.AWS.Snowball.Types.LongTermPricingType.LongTermPricingType
instance GHC.Classes.Ord Network.AWS.Snowball.Types.LongTermPricingType.LongTermPricingType
instance GHC.Classes.Eq Network.AWS.Snowball.Types.LongTermPricingType.LongTermPricingType
instance GHC.Read.Read Network.AWS.Snowball.Types.LongTermPricingType.LongTermPricingType
instance GHC.Show.Show Network.AWS.Snowball.Types.LongTermPricingType.LongTermPricingType


module Network.AWS.Snowball.Types.Notification

-- | The Amazon Simple Notification Service (Amazon SNS) notification
--   settings associated with a specific job. The <tt>Notification</tt>
--   object is returned as a part of the response syntax of the
--   <tt>DescribeJob</tt> action in the <tt>JobMetadata</tt> data type.
--   
--   When the notification settings are defined during job creation, you
--   can choose to notify based on a specific set of job states using the
--   <tt>JobStatesToNotify</tt> array of strings, or you can specify that
--   you want to have Amazon SNS notifications sent out for all job states
--   with <tt>NotifyAll</tt> set to true.
--   
--   <i>See:</i> <a>newNotification</a> smart constructor.
data Notification
Notification' :: Maybe Bool -> Maybe Text -> Maybe [JobState] -> Notification

-- | Any change in job state will trigger a notification for this job.
[$sel:notifyAll:Notification'] :: Notification -> Maybe Bool

-- | The new SNS <tt>TopicArn</tt> that you want to associate with this
--   job. You can create Amazon Resource Names (ARNs) for topics by using
--   the <a>CreateTopic</a> Amazon SNS API action.
--   
--   You can subscribe email addresses to an Amazon SNS topic through the
--   AWS Management Console, or by using the <a>Subscribe</a> Amazon Simple
--   Notification Service (Amazon SNS) API action.
[$sel:snsTopicARN:Notification'] :: Notification -> Maybe Text

-- | The list of job states that will trigger a notification for this job.
[$sel:jobStatesToNotify:Notification'] :: Notification -> Maybe [JobState]

-- | Create a value of <a>Notification</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:notifyAll:Notification'</a>, <a>notification_notifyAll</a> -
--   Any change in job state will trigger a notification for this job.
--   
--   <a>$sel:snsTopicARN:Notification'</a>, <a>notification_snsTopicARN</a>
--   - The new SNS <tt>TopicArn</tt> that you want to associate with this
--   job. You can create Amazon Resource Names (ARNs) for topics by using
--   the <a>CreateTopic</a> Amazon SNS API action.
--   
--   You can subscribe email addresses to an Amazon SNS topic through the
--   AWS Management Console, or by using the <a>Subscribe</a> Amazon Simple
--   Notification Service (Amazon SNS) API action.
--   
--   <a>$sel:jobStatesToNotify:Notification'</a>,
--   <a>notification_jobStatesToNotify</a> - The list of job states that
--   will trigger a notification for this job.
newNotification :: Notification

-- | Any change in job state will trigger a notification for this job.
notification_notifyAll :: Lens' Notification (Maybe Bool)

-- | The new SNS <tt>TopicArn</tt> that you want to associate with this
--   job. You can create Amazon Resource Names (ARNs) for topics by using
--   the <a>CreateTopic</a> Amazon SNS API action.
--   
--   You can subscribe email addresses to an Amazon SNS topic through the
--   AWS Management Console, or by using the <a>Subscribe</a> Amazon Simple
--   Notification Service (Amazon SNS) API action.
notification_snsTopicARN :: Lens' Notification (Maybe Text)

-- | The list of job states that will trigger a notification for this job.
notification_jobStatesToNotify :: Lens' Notification (Maybe [JobState])
instance GHC.Generics.Generic Network.AWS.Snowball.Types.Notification.Notification
instance GHC.Show.Show Network.AWS.Snowball.Types.Notification.Notification
instance GHC.Read.Read Network.AWS.Snowball.Types.Notification.Notification
instance GHC.Classes.Eq Network.AWS.Snowball.Types.Notification.Notification
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Snowball.Types.Notification.Notification
instance Data.Hashable.Class.Hashable Network.AWS.Snowball.Types.Notification.Notification
instance Control.DeepSeq.NFData Network.AWS.Snowball.Types.Notification.Notification
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Snowball.Types.Notification.Notification


module Network.AWS.Snowball.Types.RemoteManagement
newtype RemoteManagement
RemoteManagement' :: Text -> RemoteManagement
[fromRemoteManagement] :: RemoteManagement -> Text
pattern RemoteManagement_INSTALLED_AUTOSTART :: RemoteManagement
pattern RemoteManagement_INSTALLED_ONLY :: RemoteManagement
instance Network.AWS.Data.XML.ToXML Network.AWS.Snowball.Types.RemoteManagement.RemoteManagement
instance Network.AWS.Data.XML.FromXML Network.AWS.Snowball.Types.RemoteManagement.RemoteManagement
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Snowball.Types.RemoteManagement.RemoteManagement
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Snowball.Types.RemoteManagement.RemoteManagement
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Snowball.Types.RemoteManagement.RemoteManagement
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Snowball.Types.RemoteManagement.RemoteManagement
instance Network.AWS.Data.Query.ToQuery Network.AWS.Snowball.Types.RemoteManagement.RemoteManagement
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Snowball.Types.RemoteManagement.RemoteManagement
instance Network.AWS.Data.Log.ToLog Network.AWS.Snowball.Types.RemoteManagement.RemoteManagement
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Snowball.Types.RemoteManagement.RemoteManagement
instance Network.AWS.Data.Text.ToText Network.AWS.Snowball.Types.RemoteManagement.RemoteManagement
instance Network.AWS.Data.Text.FromText Network.AWS.Snowball.Types.RemoteManagement.RemoteManagement
instance Control.DeepSeq.NFData Network.AWS.Snowball.Types.RemoteManagement.RemoteManagement
instance Data.Hashable.Class.Hashable Network.AWS.Snowball.Types.RemoteManagement.RemoteManagement
instance GHC.Generics.Generic Network.AWS.Snowball.Types.RemoteManagement.RemoteManagement
instance GHC.Classes.Ord Network.AWS.Snowball.Types.RemoteManagement.RemoteManagement
instance GHC.Classes.Eq Network.AWS.Snowball.Types.RemoteManagement.RemoteManagement
instance GHC.Read.Read Network.AWS.Snowball.Types.RemoteManagement.RemoteManagement
instance GHC.Show.Show Network.AWS.Snowball.Types.RemoteManagement.RemoteManagement


module Network.AWS.Snowball.Types.Shipment

-- | The <tt>Status</tt> and <tt>TrackingNumber</tt> information for an
--   inbound or outbound shipment.
--   
--   <i>See:</i> <a>newShipment</a> smart constructor.
data Shipment
Shipment' :: Maybe Text -> Maybe Text -> Shipment

-- | Status information for a shipment.
[$sel:status:Shipment'] :: Shipment -> Maybe Text

-- | The tracking number for this job. Using this tracking number with your
--   region's carrier's website, you can track a Snow device as the carrier
--   transports it.
--   
--   For India, the carrier is Amazon Logistics. For all other regions, UPS
--   is the carrier.
[$sel:trackingNumber:Shipment'] :: Shipment -> Maybe Text

-- | Create a value of <a>Shipment</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:Shipment'</a>, <a>shipment_status</a> - Status
--   information for a shipment.
--   
--   <a>$sel:trackingNumber:Shipment'</a>, <a>shipment_trackingNumber</a> -
--   The tracking number for this job. Using this tracking number with your
--   region's carrier's website, you can track a Snow device as the carrier
--   transports it.
--   
--   For India, the carrier is Amazon Logistics. For all other regions, UPS
--   is the carrier.
newShipment :: Shipment

-- | Status information for a shipment.
shipment_status :: Lens' Shipment (Maybe Text)

-- | The tracking number for this job. Using this tracking number with your
--   region's carrier's website, you can track a Snow device as the carrier
--   transports it.
--   
--   For India, the carrier is Amazon Logistics. For all other regions, UPS
--   is the carrier.
shipment_trackingNumber :: Lens' Shipment (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Snowball.Types.Shipment.Shipment
instance GHC.Show.Show Network.AWS.Snowball.Types.Shipment.Shipment
instance GHC.Read.Read Network.AWS.Snowball.Types.Shipment.Shipment
instance GHC.Classes.Eq Network.AWS.Snowball.Types.Shipment.Shipment
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Snowball.Types.Shipment.Shipment
instance Data.Hashable.Class.Hashable Network.AWS.Snowball.Types.Shipment.Shipment
instance Control.DeepSeq.NFData Network.AWS.Snowball.Types.Shipment.Shipment


module Network.AWS.Snowball.Types.ShipmentState
newtype ShipmentState
ShipmentState' :: Text -> ShipmentState
[fromShipmentState] :: ShipmentState -> Text
pattern ShipmentState_RECEIVED :: ShipmentState
pattern ShipmentState_RETURNED :: ShipmentState
instance Network.AWS.Data.XML.ToXML Network.AWS.Snowball.Types.ShipmentState.ShipmentState
instance Network.AWS.Data.XML.FromXML Network.AWS.Snowball.Types.ShipmentState.ShipmentState
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Snowball.Types.ShipmentState.ShipmentState
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Snowball.Types.ShipmentState.ShipmentState
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Snowball.Types.ShipmentState.ShipmentState
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Snowball.Types.ShipmentState.ShipmentState
instance Network.AWS.Data.Query.ToQuery Network.AWS.Snowball.Types.ShipmentState.ShipmentState
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Snowball.Types.ShipmentState.ShipmentState
instance Network.AWS.Data.Log.ToLog Network.AWS.Snowball.Types.ShipmentState.ShipmentState
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Snowball.Types.ShipmentState.ShipmentState
instance Network.AWS.Data.Text.ToText Network.AWS.Snowball.Types.ShipmentState.ShipmentState
instance Network.AWS.Data.Text.FromText Network.AWS.Snowball.Types.ShipmentState.ShipmentState
instance Control.DeepSeq.NFData Network.AWS.Snowball.Types.ShipmentState.ShipmentState
instance Data.Hashable.Class.Hashable Network.AWS.Snowball.Types.ShipmentState.ShipmentState
instance GHC.Generics.Generic Network.AWS.Snowball.Types.ShipmentState.ShipmentState
instance GHC.Classes.Ord Network.AWS.Snowball.Types.ShipmentState.ShipmentState
instance GHC.Classes.Eq Network.AWS.Snowball.Types.ShipmentState.ShipmentState
instance GHC.Read.Read Network.AWS.Snowball.Types.ShipmentState.ShipmentState
instance GHC.Show.Show Network.AWS.Snowball.Types.ShipmentState.ShipmentState


module Network.AWS.Snowball.Types.ShippingLabelStatus
newtype ShippingLabelStatus
ShippingLabelStatus' :: Text -> ShippingLabelStatus
[fromShippingLabelStatus] :: ShippingLabelStatus -> Text
pattern ShippingLabelStatus_Failed :: ShippingLabelStatus
pattern ShippingLabelStatus_InProgress :: ShippingLabelStatus
pattern ShippingLabelStatus_Succeeded :: ShippingLabelStatus
pattern ShippingLabelStatus_TimedOut :: ShippingLabelStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.Snowball.Types.ShippingLabelStatus.ShippingLabelStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.Snowball.Types.ShippingLabelStatus.ShippingLabelStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Snowball.Types.ShippingLabelStatus.ShippingLabelStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Snowball.Types.ShippingLabelStatus.ShippingLabelStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Snowball.Types.ShippingLabelStatus.ShippingLabelStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Snowball.Types.ShippingLabelStatus.ShippingLabelStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.Snowball.Types.ShippingLabelStatus.ShippingLabelStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Snowball.Types.ShippingLabelStatus.ShippingLabelStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.Snowball.Types.ShippingLabelStatus.ShippingLabelStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Snowball.Types.ShippingLabelStatus.ShippingLabelStatus
instance Network.AWS.Data.Text.ToText Network.AWS.Snowball.Types.ShippingLabelStatus.ShippingLabelStatus
instance Network.AWS.Data.Text.FromText Network.AWS.Snowball.Types.ShippingLabelStatus.ShippingLabelStatus
instance Control.DeepSeq.NFData Network.AWS.Snowball.Types.ShippingLabelStatus.ShippingLabelStatus
instance Data.Hashable.Class.Hashable Network.AWS.Snowball.Types.ShippingLabelStatus.ShippingLabelStatus
instance GHC.Generics.Generic Network.AWS.Snowball.Types.ShippingLabelStatus.ShippingLabelStatus
instance GHC.Classes.Ord Network.AWS.Snowball.Types.ShippingLabelStatus.ShippingLabelStatus
instance GHC.Classes.Eq Network.AWS.Snowball.Types.ShippingLabelStatus.ShippingLabelStatus
instance GHC.Read.Read Network.AWS.Snowball.Types.ShippingLabelStatus.ShippingLabelStatus
instance GHC.Show.Show Network.AWS.Snowball.Types.ShippingLabelStatus.ShippingLabelStatus


module Network.AWS.Snowball.Types.ShippingOption
newtype ShippingOption
ShippingOption' :: Text -> ShippingOption
[fromShippingOption] :: ShippingOption -> Text
pattern ShippingOption_EXPRESS :: ShippingOption
pattern ShippingOption_NEXT_DAY :: ShippingOption
pattern ShippingOption_SECOND_DAY :: ShippingOption
pattern ShippingOption_STANDARD :: ShippingOption
instance Network.AWS.Data.XML.ToXML Network.AWS.Snowball.Types.ShippingOption.ShippingOption
instance Network.AWS.Data.XML.FromXML Network.AWS.Snowball.Types.ShippingOption.ShippingOption
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Snowball.Types.ShippingOption.ShippingOption
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Snowball.Types.ShippingOption.ShippingOption
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Snowball.Types.ShippingOption.ShippingOption
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Snowball.Types.ShippingOption.ShippingOption
instance Network.AWS.Data.Query.ToQuery Network.AWS.Snowball.Types.ShippingOption.ShippingOption
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Snowball.Types.ShippingOption.ShippingOption
instance Network.AWS.Data.Log.ToLog Network.AWS.Snowball.Types.ShippingOption.ShippingOption
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Snowball.Types.ShippingOption.ShippingOption
instance Network.AWS.Data.Text.ToText Network.AWS.Snowball.Types.ShippingOption.ShippingOption
instance Network.AWS.Data.Text.FromText Network.AWS.Snowball.Types.ShippingOption.ShippingOption
instance Control.DeepSeq.NFData Network.AWS.Snowball.Types.ShippingOption.ShippingOption
instance Data.Hashable.Class.Hashable Network.AWS.Snowball.Types.ShippingOption.ShippingOption
instance GHC.Generics.Generic Network.AWS.Snowball.Types.ShippingOption.ShippingOption
instance GHC.Classes.Ord Network.AWS.Snowball.Types.ShippingOption.ShippingOption
instance GHC.Classes.Eq Network.AWS.Snowball.Types.ShippingOption.ShippingOption
instance GHC.Read.Read Network.AWS.Snowball.Types.ShippingOption.ShippingOption
instance GHC.Show.Show Network.AWS.Snowball.Types.ShippingOption.ShippingOption


module Network.AWS.Snowball.Types.ShippingDetails

-- | A job's shipping information, including inbound and outbound tracking
--   numbers and shipping speed options.
--   
--   <i>See:</i> <a>newShippingDetails</a> smart constructor.
data ShippingDetails
ShippingDetails' :: Maybe ShippingOption -> Maybe Shipment -> Maybe Shipment -> ShippingDetails

-- | The shipping speed for a particular job. This speed doesn't dictate
--   how soon you'll get the Snow device from the job's creation date. This
--   speed represents how quickly it moves to its destination while in
--   transit. Regional shipping speeds are as follows:
--   
--   <ul>
--   <li>In Australia, you have access to express shipping. Typically, Snow
--   devices shipped express are delivered in about a day.</li>
--   <li>In the European Union (EU), you have access to express shipping.
--   Typically, Snow devices shipped express are delivered in about a day.
--   In addition, most countries in the EU have access to standard
--   shipping, which typically takes less than a week, one way.</li>
--   <li>In India, Snow devices are delivered in one to seven days.</li>
--   <li>In the United States of America (US), you have access to one-day
--   shipping and two-day shipping.</li>
--   </ul>
[$sel:shippingOption:ShippingDetails'] :: ShippingDetails -> Maybe ShippingOption

-- | The <tt>Status</tt> and <tt>TrackingNumber</tt> values for a Snow
--   device being delivered to the address that you specified for a
--   particular job.
[$sel:outboundShipment:ShippingDetails'] :: ShippingDetails -> Maybe Shipment

-- | The <tt>Status</tt> and <tt>TrackingNumber</tt> values for a Snow
--   device being returned to AWS for a particular job.
[$sel:inboundShipment:ShippingDetails'] :: ShippingDetails -> Maybe Shipment

-- | Create a value of <a>ShippingDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:shippingOption:ShippingDetails'</a>,
--   <a>shippingDetails_shippingOption</a> - The shipping speed for a
--   particular job. This speed doesn't dictate how soon you'll get the
--   Snow device from the job's creation date. This speed represents how
--   quickly it moves to its destination while in transit. Regional
--   shipping speeds are as follows:
--   
--   <ul>
--   <li>In Australia, you have access to express shipping. Typically, Snow
--   devices shipped express are delivered in about a day.</li>
--   <li>In the European Union (EU), you have access to express shipping.
--   Typically, Snow devices shipped express are delivered in about a day.
--   In addition, most countries in the EU have access to standard
--   shipping, which typically takes less than a week, one way.</li>
--   <li>In India, Snow devices are delivered in one to seven days.</li>
--   <li>In the United States of America (US), you have access to one-day
--   shipping and two-day shipping.</li>
--   </ul>
--   
--   <a>$sel:outboundShipment:ShippingDetails'</a>,
--   <a>shippingDetails_outboundShipment</a> - The <tt>Status</tt> and
--   <tt>TrackingNumber</tt> values for a Snow device being delivered to
--   the address that you specified for a particular job.
--   
--   <a>$sel:inboundShipment:ShippingDetails'</a>,
--   <a>shippingDetails_inboundShipment</a> - The <tt>Status</tt> and
--   <tt>TrackingNumber</tt> values for a Snow device being returned to AWS
--   for a particular job.
newShippingDetails :: ShippingDetails

-- | The shipping speed for a particular job. This speed doesn't dictate
--   how soon you'll get the Snow device from the job's creation date. This
--   speed represents how quickly it moves to its destination while in
--   transit. Regional shipping speeds are as follows:
--   
--   <ul>
--   <li>In Australia, you have access to express shipping. Typically, Snow
--   devices shipped express are delivered in about a day.</li>
--   <li>In the European Union (EU), you have access to express shipping.
--   Typically, Snow devices shipped express are delivered in about a day.
--   In addition, most countries in the EU have access to standard
--   shipping, which typically takes less than a week, one way.</li>
--   <li>In India, Snow devices are delivered in one to seven days.</li>
--   <li>In the United States of America (US), you have access to one-day
--   shipping and two-day shipping.</li>
--   </ul>
shippingDetails_shippingOption :: Lens' ShippingDetails (Maybe ShippingOption)

-- | The <tt>Status</tt> and <tt>TrackingNumber</tt> values for a Snow
--   device being delivered to the address that you specified for a
--   particular job.
shippingDetails_outboundShipment :: Lens' ShippingDetails (Maybe Shipment)

-- | The <tt>Status</tt> and <tt>TrackingNumber</tt> values for a Snow
--   device being returned to AWS for a particular job.
shippingDetails_inboundShipment :: Lens' ShippingDetails (Maybe Shipment)
instance GHC.Generics.Generic Network.AWS.Snowball.Types.ShippingDetails.ShippingDetails
instance GHC.Show.Show Network.AWS.Snowball.Types.ShippingDetails.ShippingDetails
instance GHC.Read.Read Network.AWS.Snowball.Types.ShippingDetails.ShippingDetails
instance GHC.Classes.Eq Network.AWS.Snowball.Types.ShippingDetails.ShippingDetails
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Snowball.Types.ShippingDetails.ShippingDetails
instance Data.Hashable.Class.Hashable Network.AWS.Snowball.Types.ShippingDetails.ShippingDetails
instance Control.DeepSeq.NFData Network.AWS.Snowball.Types.ShippingDetails.ShippingDetails


module Network.AWS.Snowball.Types.SnowballCapacity
newtype SnowballCapacity
SnowballCapacity' :: Text -> SnowballCapacity
[fromSnowballCapacity] :: SnowballCapacity -> Text
pattern SnowballCapacity_NoPreference :: SnowballCapacity
pattern SnowballCapacity_T100 :: SnowballCapacity
pattern SnowballCapacity_T14 :: SnowballCapacity
pattern SnowballCapacity_T42 :: SnowballCapacity
pattern SnowballCapacity_T50 :: SnowballCapacity
pattern SnowballCapacity_T8 :: SnowballCapacity
pattern SnowballCapacity_T80 :: SnowballCapacity
pattern SnowballCapacity_T98 :: SnowballCapacity
instance Network.AWS.Data.XML.ToXML Network.AWS.Snowball.Types.SnowballCapacity.SnowballCapacity
instance Network.AWS.Data.XML.FromXML Network.AWS.Snowball.Types.SnowballCapacity.SnowballCapacity
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Snowball.Types.SnowballCapacity.SnowballCapacity
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Snowball.Types.SnowballCapacity.SnowballCapacity
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Snowball.Types.SnowballCapacity.SnowballCapacity
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Snowball.Types.SnowballCapacity.SnowballCapacity
instance Network.AWS.Data.Query.ToQuery Network.AWS.Snowball.Types.SnowballCapacity.SnowballCapacity
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Snowball.Types.SnowballCapacity.SnowballCapacity
instance Network.AWS.Data.Log.ToLog Network.AWS.Snowball.Types.SnowballCapacity.SnowballCapacity
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Snowball.Types.SnowballCapacity.SnowballCapacity
instance Network.AWS.Data.Text.ToText Network.AWS.Snowball.Types.SnowballCapacity.SnowballCapacity
instance Network.AWS.Data.Text.FromText Network.AWS.Snowball.Types.SnowballCapacity.SnowballCapacity
instance Control.DeepSeq.NFData Network.AWS.Snowball.Types.SnowballCapacity.SnowballCapacity
instance Data.Hashable.Class.Hashable Network.AWS.Snowball.Types.SnowballCapacity.SnowballCapacity
instance GHC.Generics.Generic Network.AWS.Snowball.Types.SnowballCapacity.SnowballCapacity
instance GHC.Classes.Ord Network.AWS.Snowball.Types.SnowballCapacity.SnowballCapacity
instance GHC.Classes.Eq Network.AWS.Snowball.Types.SnowballCapacity.SnowballCapacity
instance GHC.Read.Read Network.AWS.Snowball.Types.SnowballCapacity.SnowballCapacity
instance GHC.Show.Show Network.AWS.Snowball.Types.SnowballCapacity.SnowballCapacity


module Network.AWS.Snowball.Types.SnowballType
newtype SnowballType
SnowballType' :: Text -> SnowballType
[fromSnowballType] :: SnowballType -> Text
pattern SnowballType_EDGE :: SnowballType
pattern SnowballType_EDGE_C :: SnowballType
pattern SnowballType_EDGE_CG :: SnowballType
pattern SnowballType_EDGE_S :: SnowballType
pattern SnowballType_SNC1_HDD :: SnowballType
pattern SnowballType_SNC1_SSD :: SnowballType
pattern SnowballType_STANDARD :: SnowballType
instance Network.AWS.Data.XML.ToXML Network.AWS.Snowball.Types.SnowballType.SnowballType
instance Network.AWS.Data.XML.FromXML Network.AWS.Snowball.Types.SnowballType.SnowballType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Snowball.Types.SnowballType.SnowballType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Snowball.Types.SnowballType.SnowballType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Snowball.Types.SnowballType.SnowballType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Snowball.Types.SnowballType.SnowballType
instance Network.AWS.Data.Query.ToQuery Network.AWS.Snowball.Types.SnowballType.SnowballType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Snowball.Types.SnowballType.SnowballType
instance Network.AWS.Data.Log.ToLog Network.AWS.Snowball.Types.SnowballType.SnowballType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Snowball.Types.SnowballType.SnowballType
instance Network.AWS.Data.Text.ToText Network.AWS.Snowball.Types.SnowballType.SnowballType
instance Network.AWS.Data.Text.FromText Network.AWS.Snowball.Types.SnowballType.SnowballType
instance Control.DeepSeq.NFData Network.AWS.Snowball.Types.SnowballType.SnowballType
instance Data.Hashable.Class.Hashable Network.AWS.Snowball.Types.SnowballType.SnowballType
instance GHC.Generics.Generic Network.AWS.Snowball.Types.SnowballType.SnowballType
instance GHC.Classes.Ord Network.AWS.Snowball.Types.SnowballType.SnowballType
instance GHC.Classes.Eq Network.AWS.Snowball.Types.SnowballType.SnowballType
instance GHC.Read.Read Network.AWS.Snowball.Types.SnowballType.SnowballType
instance GHC.Show.Show Network.AWS.Snowball.Types.SnowballType.SnowballType


module Network.AWS.Snowball.Types.LongTermPricingListEntry

-- | Each <tt>LongTermPricingListEntry</tt> object contains information
--   about a long-term pricing type.
--   
--   <i>See:</i> <a>newLongTermPricingListEntry</a> smart constructor.
data LongTermPricingListEntry
LongTermPricingListEntry' :: Maybe LongTermPricingType -> Maybe POSIX -> Maybe SnowballType -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe [Text] -> Maybe Text -> LongTermPricingListEntry

-- | The type of long-term pricing that was selected for the device.
[$sel:longTermPricingType:LongTermPricingListEntry'] :: LongTermPricingListEntry -> Maybe LongTermPricingType

-- | The start date of the long-term pricing contract.
[$sel:longTermPricingStartDate:LongTermPricingListEntry'] :: LongTermPricingListEntry -> Maybe POSIX

-- | The type of AWS Snow Family device associated with this long-term
--   pricing job.
[$sel:snowballType:LongTermPricingListEntry'] :: LongTermPricingListEntry -> Maybe SnowballType

-- | The ID of the long-term pricing type for the device.
[$sel:longTermPricingId:LongTermPricingListEntry'] :: LongTermPricingListEntry -> Maybe Text

-- | The end date the long-term pricing contract.
[$sel:longTermPricingEndDate:LongTermPricingListEntry'] :: LongTermPricingListEntry -> Maybe POSIX

-- | The current active jobs on the device the long-term pricing type.
[$sel:currentActiveJob:LongTermPricingListEntry'] :: LongTermPricingListEntry -> Maybe Text

-- | If set to <tt>true</tt>, specifies that the current long-term pricing
--   type for the device should be automatically renewed before the
--   long-term pricing contract expires.
[$sel:isLongTermPricingAutoRenew:LongTermPricingListEntry'] :: LongTermPricingListEntry -> Maybe Bool

-- | The status of the long-term pricing type.
[$sel:longTermPricingStatus:LongTermPricingListEntry'] :: LongTermPricingListEntry -> Maybe Text

-- | The IDs of the jobs that are associated with a long-term pricing type.
[$sel:jobIds:LongTermPricingListEntry'] :: LongTermPricingListEntry -> Maybe [Text]

-- | A new device that replaces a device that is ordered with long-term
--   pricing.
[$sel:replacementJob:LongTermPricingListEntry'] :: LongTermPricingListEntry -> Maybe Text

-- | Create a value of <a>LongTermPricingListEntry</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:longTermPricingType:LongTermPricingListEntry'</a>,
--   <a>longTermPricingListEntry_longTermPricingType</a> - The type of
--   long-term pricing that was selected for the device.
--   
--   <a>$sel:longTermPricingStartDate:LongTermPricingListEntry'</a>,
--   <a>longTermPricingListEntry_longTermPricingStartDate</a> - The start
--   date of the long-term pricing contract.
--   
--   <a>$sel:snowballType:LongTermPricingListEntry'</a>,
--   <a>longTermPricingListEntry_snowballType</a> - The type of AWS Snow
--   Family device associated with this long-term pricing job.
--   
--   <a>$sel:longTermPricingId:LongTermPricingListEntry'</a>,
--   <a>longTermPricingListEntry_longTermPricingId</a> - The ID of the
--   long-term pricing type for the device.
--   
--   <a>$sel:longTermPricingEndDate:LongTermPricingListEntry'</a>,
--   <a>longTermPricingListEntry_longTermPricingEndDate</a> - The end date
--   the long-term pricing contract.
--   
--   <a>$sel:currentActiveJob:LongTermPricingListEntry'</a>,
--   <a>longTermPricingListEntry_currentActiveJob</a> - The current active
--   jobs on the device the long-term pricing type.
--   
--   <a>$sel:isLongTermPricingAutoRenew:LongTermPricingListEntry'</a>,
--   <a>longTermPricingListEntry_isLongTermPricingAutoRenew</a> - If set to
--   <tt>true</tt>, specifies that the current long-term pricing type for
--   the device should be automatically renewed before the long-term
--   pricing contract expires.
--   
--   <a>$sel:longTermPricingStatus:LongTermPricingListEntry'</a>,
--   <a>longTermPricingListEntry_longTermPricingStatus</a> - The status of
--   the long-term pricing type.
--   
--   <a>$sel:jobIds:LongTermPricingListEntry'</a>,
--   <a>longTermPricingListEntry_jobIds</a> - The IDs of the jobs that are
--   associated with a long-term pricing type.
--   
--   <a>$sel:replacementJob:LongTermPricingListEntry'</a>,
--   <a>longTermPricingListEntry_replacementJob</a> - A new device that
--   replaces a device that is ordered with long-term pricing.
newLongTermPricingListEntry :: LongTermPricingListEntry

-- | The type of long-term pricing that was selected for the device.
longTermPricingListEntry_longTermPricingType :: Lens' LongTermPricingListEntry (Maybe LongTermPricingType)

-- | The start date of the long-term pricing contract.
longTermPricingListEntry_longTermPricingStartDate :: Lens' LongTermPricingListEntry (Maybe UTCTime)

-- | The type of AWS Snow Family device associated with this long-term
--   pricing job.
longTermPricingListEntry_snowballType :: Lens' LongTermPricingListEntry (Maybe SnowballType)

-- | The ID of the long-term pricing type for the device.
longTermPricingListEntry_longTermPricingId :: Lens' LongTermPricingListEntry (Maybe Text)

-- | The end date the long-term pricing contract.
longTermPricingListEntry_longTermPricingEndDate :: Lens' LongTermPricingListEntry (Maybe UTCTime)

-- | The current active jobs on the device the long-term pricing type.
longTermPricingListEntry_currentActiveJob :: Lens' LongTermPricingListEntry (Maybe Text)

-- | If set to <tt>true</tt>, specifies that the current long-term pricing
--   type for the device should be automatically renewed before the
--   long-term pricing contract expires.
longTermPricingListEntry_isLongTermPricingAutoRenew :: Lens' LongTermPricingListEntry (Maybe Bool)

-- | The status of the long-term pricing type.
longTermPricingListEntry_longTermPricingStatus :: Lens' LongTermPricingListEntry (Maybe Text)

-- | The IDs of the jobs that are associated with a long-term pricing type.
longTermPricingListEntry_jobIds :: Lens' LongTermPricingListEntry (Maybe [Text])

-- | A new device that replaces a device that is ordered with long-term
--   pricing.
longTermPricingListEntry_replacementJob :: Lens' LongTermPricingListEntry (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Snowball.Types.LongTermPricingListEntry.LongTermPricingListEntry
instance GHC.Show.Show Network.AWS.Snowball.Types.LongTermPricingListEntry.LongTermPricingListEntry
instance GHC.Read.Read Network.AWS.Snowball.Types.LongTermPricingListEntry.LongTermPricingListEntry
instance GHC.Classes.Eq Network.AWS.Snowball.Types.LongTermPricingListEntry.LongTermPricingListEntry
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Snowball.Types.LongTermPricingListEntry.LongTermPricingListEntry
instance Data.Hashable.Class.Hashable Network.AWS.Snowball.Types.LongTermPricingListEntry.LongTermPricingListEntry
instance Control.DeepSeq.NFData Network.AWS.Snowball.Types.LongTermPricingListEntry.LongTermPricingListEntry


module Network.AWS.Snowball.Types.JobListEntry

-- | Each <tt>JobListEntry</tt> object contains a job's state, a job's ID,
--   and a value that indicates whether the job is a job part, in the case
--   of an export job.
--   
--   <i>See:</i> <a>newJobListEntry</a> smart constructor.
data JobListEntry
JobListEntry' :: Maybe JobType -> Maybe Text -> Maybe JobState -> Maybe SnowballType -> Maybe POSIX -> Maybe Text -> Maybe Bool -> JobListEntry

-- | The type of job.
[$sel:jobType:JobListEntry'] :: JobListEntry -> Maybe JobType

-- | The automatically generated ID for a job, for example
--   <tt>JID123e4567-e89b-12d3-a456-426655440000</tt>.
[$sel:jobId:JobListEntry'] :: JobListEntry -> Maybe Text

-- | The current state of this job.
[$sel:jobState:JobListEntry'] :: JobListEntry -> Maybe JobState

-- | The type of device used with this job.
[$sel:snowballType:JobListEntry'] :: JobListEntry -> Maybe SnowballType

-- | The creation date for this job.
[$sel:creationDate:JobListEntry'] :: JobListEntry -> Maybe POSIX

-- | The optional description of this specific job, for example
--   <tt>Important Photos 2016-08-11</tt>.
[$sel:description:JobListEntry'] :: JobListEntry -> Maybe Text

-- | A value that indicates that this job is a main job. A main job
--   represents a successful request to create an export job. Main jobs
--   aren't associated with any Snowballs. Instead, each main job will have
--   at least one job part, and each job part is associated with a
--   Snowball. It might take some time before the job parts associated with
--   a particular main job are listed, because they are created after the
--   main job is created.
[$sel:isMaster:JobListEntry'] :: JobListEntry -> Maybe Bool

-- | Create a value of <a>JobListEntry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobType:JobListEntry'</a>, <a>jobListEntry_jobType</a> - The
--   type of job.
--   
--   <a>$sel:jobId:JobListEntry'</a>, <a>jobListEntry_jobId</a> - The
--   automatically generated ID for a job, for example
--   <tt>JID123e4567-e89b-12d3-a456-426655440000</tt>.
--   
--   <a>$sel:jobState:JobListEntry'</a>, <a>jobListEntry_jobState</a> - The
--   current state of this job.
--   
--   <a>$sel:snowballType:JobListEntry'</a>,
--   <a>jobListEntry_snowballType</a> - The type of device used with this
--   job.
--   
--   <a>$sel:creationDate:JobListEntry'</a>,
--   <a>jobListEntry_creationDate</a> - The creation date for this job.
--   
--   <a>$sel:description:JobListEntry'</a>, <a>jobListEntry_description</a>
--   - The optional description of this specific job, for example
--   <tt>Important Photos 2016-08-11</tt>.
--   
--   <a>$sel:isMaster:JobListEntry'</a>, <a>jobListEntry_isMaster</a> - A
--   value that indicates that this job is a main job. A main job
--   represents a successful request to create an export job. Main jobs
--   aren't associated with any Snowballs. Instead, each main job will have
--   at least one job part, and each job part is associated with a
--   Snowball. It might take some time before the job parts associated with
--   a particular main job are listed, because they are created after the
--   main job is created.
newJobListEntry :: JobListEntry

-- | The type of job.
jobListEntry_jobType :: Lens' JobListEntry (Maybe JobType)

-- | The automatically generated ID for a job, for example
--   <tt>JID123e4567-e89b-12d3-a456-426655440000</tt>.
jobListEntry_jobId :: Lens' JobListEntry (Maybe Text)

-- | The current state of this job.
jobListEntry_jobState :: Lens' JobListEntry (Maybe JobState)

-- | The type of device used with this job.
jobListEntry_snowballType :: Lens' JobListEntry (Maybe SnowballType)

-- | The creation date for this job.
jobListEntry_creationDate :: Lens' JobListEntry (Maybe UTCTime)

-- | The optional description of this specific job, for example
--   <tt>Important Photos 2016-08-11</tt>.
jobListEntry_description :: Lens' JobListEntry (Maybe Text)

-- | A value that indicates that this job is a main job. A main job
--   represents a successful request to create an export job. Main jobs
--   aren't associated with any Snowballs. Instead, each main job will have
--   at least one job part, and each job part is associated with a
--   Snowball. It might take some time before the job parts associated with
--   a particular main job are listed, because they are created after the
--   main job is created.
jobListEntry_isMaster :: Lens' JobListEntry (Maybe Bool)
instance GHC.Generics.Generic Network.AWS.Snowball.Types.JobListEntry.JobListEntry
instance GHC.Show.Show Network.AWS.Snowball.Types.JobListEntry.JobListEntry
instance GHC.Read.Read Network.AWS.Snowball.Types.JobListEntry.JobListEntry
instance GHC.Classes.Eq Network.AWS.Snowball.Types.JobListEntry.JobListEntry
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Snowball.Types.JobListEntry.JobListEntry
instance Data.Hashable.Class.Hashable Network.AWS.Snowball.Types.JobListEntry.JobListEntry
instance Control.DeepSeq.NFData Network.AWS.Snowball.Types.JobListEntry.JobListEntry


module Network.AWS.Snowball.Types.StorageUnit
newtype StorageUnit
StorageUnit' :: Text -> StorageUnit
[fromStorageUnit] :: StorageUnit -> Text
pattern StorageUnit_TB :: StorageUnit
instance Network.AWS.Data.XML.ToXML Network.AWS.Snowball.Types.StorageUnit.StorageUnit
instance Network.AWS.Data.XML.FromXML Network.AWS.Snowball.Types.StorageUnit.StorageUnit
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Snowball.Types.StorageUnit.StorageUnit
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Snowball.Types.StorageUnit.StorageUnit
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Snowball.Types.StorageUnit.StorageUnit
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Snowball.Types.StorageUnit.StorageUnit
instance Network.AWS.Data.Query.ToQuery Network.AWS.Snowball.Types.StorageUnit.StorageUnit
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Snowball.Types.StorageUnit.StorageUnit
instance Network.AWS.Data.Log.ToLog Network.AWS.Snowball.Types.StorageUnit.StorageUnit
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Snowball.Types.StorageUnit.StorageUnit
instance Network.AWS.Data.Text.ToText Network.AWS.Snowball.Types.StorageUnit.StorageUnit
instance Network.AWS.Data.Text.FromText Network.AWS.Snowball.Types.StorageUnit.StorageUnit
instance Control.DeepSeq.NFData Network.AWS.Snowball.Types.StorageUnit.StorageUnit
instance Data.Hashable.Class.Hashable Network.AWS.Snowball.Types.StorageUnit.StorageUnit
instance GHC.Generics.Generic Network.AWS.Snowball.Types.StorageUnit.StorageUnit
instance GHC.Classes.Ord Network.AWS.Snowball.Types.StorageUnit.StorageUnit
instance GHC.Classes.Eq Network.AWS.Snowball.Types.StorageUnit.StorageUnit
instance GHC.Read.Read Network.AWS.Snowball.Types.StorageUnit.StorageUnit
instance GHC.Show.Show Network.AWS.Snowball.Types.StorageUnit.StorageUnit


module Network.AWS.Snowball.Types.NFSOnDeviceServiceConfiguration

-- | An object that represents metadata and configuration settings for NFS
--   service on an AWS Snow Family device.
--   
--   <i>See:</i> <a>newNFSOnDeviceServiceConfiguration</a> smart
--   constructor.
data NFSOnDeviceServiceConfiguration
NFSOnDeviceServiceConfiguration' :: Maybe Natural -> Maybe StorageUnit -> NFSOnDeviceServiceConfiguration

-- | The maximum NFS storage for one Snowball Family device.
[$sel:storageLimit:NFSOnDeviceServiceConfiguration'] :: NFSOnDeviceServiceConfiguration -> Maybe Natural

-- | The scale unit of the NFS storage on the device.
--   
--   Valid values: TB.
[$sel:storageUnit:NFSOnDeviceServiceConfiguration'] :: NFSOnDeviceServiceConfiguration -> Maybe StorageUnit

-- | Create a value of <a>NFSOnDeviceServiceConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:storageLimit:NFSOnDeviceServiceConfiguration'</a>,
--   <a>nFSOnDeviceServiceConfiguration_storageLimit</a> - The maximum NFS
--   storage for one Snowball Family device.
--   
--   <a>$sel:storageUnit:NFSOnDeviceServiceConfiguration'</a>,
--   <a>nFSOnDeviceServiceConfiguration_storageUnit</a> - The scale unit of
--   the NFS storage on the device.
--   
--   Valid values: TB.
newNFSOnDeviceServiceConfiguration :: NFSOnDeviceServiceConfiguration

-- | The maximum NFS storage for one Snowball Family device.
nFSOnDeviceServiceConfiguration_storageLimit :: Lens' NFSOnDeviceServiceConfiguration (Maybe Natural)

-- | The scale unit of the NFS storage on the device.
--   
--   Valid values: TB.
nFSOnDeviceServiceConfiguration_storageUnit :: Lens' NFSOnDeviceServiceConfiguration (Maybe StorageUnit)
instance GHC.Generics.Generic Network.AWS.Snowball.Types.NFSOnDeviceServiceConfiguration.NFSOnDeviceServiceConfiguration
instance GHC.Show.Show Network.AWS.Snowball.Types.NFSOnDeviceServiceConfiguration.NFSOnDeviceServiceConfiguration
instance GHC.Read.Read Network.AWS.Snowball.Types.NFSOnDeviceServiceConfiguration.NFSOnDeviceServiceConfiguration
instance GHC.Classes.Eq Network.AWS.Snowball.Types.NFSOnDeviceServiceConfiguration.NFSOnDeviceServiceConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Snowball.Types.NFSOnDeviceServiceConfiguration.NFSOnDeviceServiceConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.Snowball.Types.NFSOnDeviceServiceConfiguration.NFSOnDeviceServiceConfiguration
instance Control.DeepSeq.NFData Network.AWS.Snowball.Types.NFSOnDeviceServiceConfiguration.NFSOnDeviceServiceConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Snowball.Types.NFSOnDeviceServiceConfiguration.NFSOnDeviceServiceConfiguration


module Network.AWS.Snowball.Types.OnDeviceServiceConfiguration

-- | An object that represents metadata and configuration settings for
--   services on an AWS Snow Family device.
--   
--   <i>See:</i> <a>newOnDeviceServiceConfiguration</a> smart constructor.
data OnDeviceServiceConfiguration
OnDeviceServiceConfiguration' :: Maybe NFSOnDeviceServiceConfiguration -> OnDeviceServiceConfiguration

-- | Represents the NFS service on a Snow Family device.
[$sel:nFSOnDeviceService:OnDeviceServiceConfiguration'] :: OnDeviceServiceConfiguration -> Maybe NFSOnDeviceServiceConfiguration

-- | Create a value of <a>OnDeviceServiceConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nFSOnDeviceService:OnDeviceServiceConfiguration'</a>,
--   <a>onDeviceServiceConfiguration_nFSOnDeviceService</a> - Represents
--   the NFS service on a Snow Family device.
newOnDeviceServiceConfiguration :: OnDeviceServiceConfiguration

-- | Represents the NFS service on a Snow Family device.
onDeviceServiceConfiguration_nFSOnDeviceService :: Lens' OnDeviceServiceConfiguration (Maybe NFSOnDeviceServiceConfiguration)
instance GHC.Generics.Generic Network.AWS.Snowball.Types.OnDeviceServiceConfiguration.OnDeviceServiceConfiguration
instance GHC.Show.Show Network.AWS.Snowball.Types.OnDeviceServiceConfiguration.OnDeviceServiceConfiguration
instance GHC.Read.Read Network.AWS.Snowball.Types.OnDeviceServiceConfiguration.OnDeviceServiceConfiguration
instance GHC.Classes.Eq Network.AWS.Snowball.Types.OnDeviceServiceConfiguration.OnDeviceServiceConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Snowball.Types.OnDeviceServiceConfiguration.OnDeviceServiceConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.Snowball.Types.OnDeviceServiceConfiguration.OnDeviceServiceConfiguration
instance Control.DeepSeq.NFData Network.AWS.Snowball.Types.OnDeviceServiceConfiguration.OnDeviceServiceConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Snowball.Types.OnDeviceServiceConfiguration.OnDeviceServiceConfiguration


module Network.AWS.Snowball.Types.TaxDocuments

-- | The tax documents required in your AWS Region.
--   
--   <i>See:</i> <a>newTaxDocuments</a> smart constructor.
data TaxDocuments
TaxDocuments' :: Maybe INDTaxDocuments -> TaxDocuments
[$sel:ind:TaxDocuments'] :: TaxDocuments -> Maybe INDTaxDocuments

-- | Create a value of <a>TaxDocuments</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ind:TaxDocuments'</a>, <a>taxDocuments_ind</a> - Undocumented
--   member.
newTaxDocuments :: TaxDocuments

-- | Undocumented member.
taxDocuments_ind :: Lens' TaxDocuments (Maybe INDTaxDocuments)
instance GHC.Generics.Generic Network.AWS.Snowball.Types.TaxDocuments.TaxDocuments
instance GHC.Show.Show Network.AWS.Snowball.Types.TaxDocuments.TaxDocuments
instance GHC.Read.Read Network.AWS.Snowball.Types.TaxDocuments.TaxDocuments
instance GHC.Classes.Eq Network.AWS.Snowball.Types.TaxDocuments.TaxDocuments
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Snowball.Types.TaxDocuments.TaxDocuments
instance Data.Hashable.Class.Hashable Network.AWS.Snowball.Types.TaxDocuments.TaxDocuments
instance Control.DeepSeq.NFData Network.AWS.Snowball.Types.TaxDocuments.TaxDocuments
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Snowball.Types.TaxDocuments.TaxDocuments


module Network.AWS.Snowball.Types.TransferOption
newtype TransferOption
TransferOption' :: Text -> TransferOption
[fromTransferOption] :: TransferOption -> Text
pattern TransferOption_EXPORT :: TransferOption
pattern TransferOption_IMPORT :: TransferOption
pattern TransferOption_LOCAL_USE :: TransferOption
instance Network.AWS.Data.XML.ToXML Network.AWS.Snowball.Types.TransferOption.TransferOption
instance Network.AWS.Data.XML.FromXML Network.AWS.Snowball.Types.TransferOption.TransferOption
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Snowball.Types.TransferOption.TransferOption
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Snowball.Types.TransferOption.TransferOption
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Snowball.Types.TransferOption.TransferOption
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Snowball.Types.TransferOption.TransferOption
instance Network.AWS.Data.Query.ToQuery Network.AWS.Snowball.Types.TransferOption.TransferOption
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Snowball.Types.TransferOption.TransferOption
instance Network.AWS.Data.Log.ToLog Network.AWS.Snowball.Types.TransferOption.TransferOption
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Snowball.Types.TransferOption.TransferOption
instance Network.AWS.Data.Text.ToText Network.AWS.Snowball.Types.TransferOption.TransferOption
instance Network.AWS.Data.Text.FromText Network.AWS.Snowball.Types.TransferOption.TransferOption
instance Control.DeepSeq.NFData Network.AWS.Snowball.Types.TransferOption.TransferOption
instance Data.Hashable.Class.Hashable Network.AWS.Snowball.Types.TransferOption.TransferOption
instance GHC.Generics.Generic Network.AWS.Snowball.Types.TransferOption.TransferOption
instance GHC.Classes.Ord Network.AWS.Snowball.Types.TransferOption.TransferOption
instance GHC.Classes.Eq Network.AWS.Snowball.Types.TransferOption.TransferOption
instance GHC.Read.Read Network.AWS.Snowball.Types.TransferOption.TransferOption
instance GHC.Show.Show Network.AWS.Snowball.Types.TransferOption.TransferOption


module Network.AWS.Snowball.Types.TargetOnDeviceService

-- | An object that represents the service or services on the Snow Family
--   device that your transferred data will be exported from or imported
--   into. AWS Snow Family supports Amazon S3 and NFS (Network File
--   System).
--   
--   <i>See:</i> <a>newTargetOnDeviceService</a> smart constructor.
data TargetOnDeviceService
TargetOnDeviceService' :: Maybe TransferOption -> Maybe DeviceServiceName -> TargetOnDeviceService

-- | Specifies whether the data is being imported or exported. You can
--   import or export the data, or use it locally on the device.
[$sel:transferOption:TargetOnDeviceService'] :: TargetOnDeviceService -> Maybe TransferOption

-- | Specifies the name of the service on the Snow Family device that your
--   transferred data will be exported from or imported into.
[$sel:serviceName:TargetOnDeviceService'] :: TargetOnDeviceService -> Maybe DeviceServiceName

-- | Create a value of <a>TargetOnDeviceService</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:transferOption:TargetOnDeviceService'</a>,
--   <a>targetOnDeviceService_transferOption</a> - Specifies whether the
--   data is being imported or exported. You can import or export the data,
--   or use it locally on the device.
--   
--   <a>$sel:serviceName:TargetOnDeviceService'</a>,
--   <a>targetOnDeviceService_serviceName</a> - Specifies the name of the
--   service on the Snow Family device that your transferred data will be
--   exported from or imported into.
newTargetOnDeviceService :: TargetOnDeviceService

-- | Specifies whether the data is being imported or exported. You can
--   import or export the data, or use it locally on the device.
targetOnDeviceService_transferOption :: Lens' TargetOnDeviceService (Maybe TransferOption)

-- | Specifies the name of the service on the Snow Family device that your
--   transferred data will be exported from or imported into.
targetOnDeviceService_serviceName :: Lens' TargetOnDeviceService (Maybe DeviceServiceName)
instance GHC.Generics.Generic Network.AWS.Snowball.Types.TargetOnDeviceService.TargetOnDeviceService
instance GHC.Show.Show Network.AWS.Snowball.Types.TargetOnDeviceService.TargetOnDeviceService
instance GHC.Read.Read Network.AWS.Snowball.Types.TargetOnDeviceService.TargetOnDeviceService
instance GHC.Classes.Eq Network.AWS.Snowball.Types.TargetOnDeviceService.TargetOnDeviceService
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Snowball.Types.TargetOnDeviceService.TargetOnDeviceService
instance Data.Hashable.Class.Hashable Network.AWS.Snowball.Types.TargetOnDeviceService.TargetOnDeviceService
instance Control.DeepSeq.NFData Network.AWS.Snowball.Types.TargetOnDeviceService.TargetOnDeviceService
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Snowball.Types.TargetOnDeviceService.TargetOnDeviceService


module Network.AWS.Snowball.Types.S3Resource

-- | Each <tt>S3Resource</tt> object represents an Amazon S3 bucket that
--   your transferred data will be exported from or imported into. For
--   export jobs, this object can have an optional <tt>KeyRange</tt> value.
--   The length of the range is defined at job creation, and has either an
--   inclusive <tt>BeginMarker</tt>, an inclusive <tt>EndMarker</tt>, or
--   both. Ranges are UTF-8 binary sorted.
--   
--   <i>See:</i> <a>newS3Resource</a> smart constructor.
data S3Resource
S3Resource' :: Maybe KeyRange -> Maybe Text -> Maybe [TargetOnDeviceService] -> S3Resource

-- | For export jobs, you can provide an optional <tt>KeyRange</tt> within
--   a specific Amazon S3 bucket. The length of the range is defined at job
--   creation, and has either an inclusive <tt>BeginMarker</tt>, an
--   inclusive <tt>EndMarker</tt>, or both. Ranges are UTF-8 binary sorted.
[$sel:keyRange:S3Resource'] :: S3Resource -> Maybe KeyRange

-- | The Amazon Resource Name (ARN) of an Amazon S3 bucket.
[$sel:bucketArn:S3Resource'] :: S3Resource -> Maybe Text

-- | Specifies the service or services on the Snow Family device that your
--   transferred data will be exported from or imported into. AWS Snow
--   Family supports Amazon S3 and NFS (Network File System).
[$sel:targetOnDeviceServices:S3Resource'] :: S3Resource -> Maybe [TargetOnDeviceService]

-- | Create a value of <a>S3Resource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyRange:S3Resource'</a>, <a>s3Resource_keyRange</a> - For
--   export jobs, you can provide an optional <tt>KeyRange</tt> within a
--   specific Amazon S3 bucket. The length of the range is defined at job
--   creation, and has either an inclusive <tt>BeginMarker</tt>, an
--   inclusive <tt>EndMarker</tt>, or both. Ranges are UTF-8 binary sorted.
--   
--   <a>$sel:bucketArn:S3Resource'</a>, <a>s3Resource_bucketArn</a> - The
--   Amazon Resource Name (ARN) of an Amazon S3 bucket.
--   
--   <a>$sel:targetOnDeviceServices:S3Resource'</a>,
--   <a>s3Resource_targetOnDeviceServices</a> - Specifies the service or
--   services on the Snow Family device that your transferred data will be
--   exported from or imported into. AWS Snow Family supports Amazon S3 and
--   NFS (Network File System).
newS3Resource :: S3Resource

-- | For export jobs, you can provide an optional <tt>KeyRange</tt> within
--   a specific Amazon S3 bucket. The length of the range is defined at job
--   creation, and has either an inclusive <tt>BeginMarker</tt>, an
--   inclusive <tt>EndMarker</tt>, or both. Ranges are UTF-8 binary sorted.
s3Resource_keyRange :: Lens' S3Resource (Maybe KeyRange)

-- | The Amazon Resource Name (ARN) of an Amazon S3 bucket.
s3Resource_bucketArn :: Lens' S3Resource (Maybe Text)

-- | Specifies the service or services on the Snow Family device that your
--   transferred data will be exported from or imported into. AWS Snow
--   Family supports Amazon S3 and NFS (Network File System).
s3Resource_targetOnDeviceServices :: Lens' S3Resource (Maybe [TargetOnDeviceService])
instance GHC.Generics.Generic Network.AWS.Snowball.Types.S3Resource.S3Resource
instance GHC.Show.Show Network.AWS.Snowball.Types.S3Resource.S3Resource
instance GHC.Read.Read Network.AWS.Snowball.Types.S3Resource.S3Resource
instance GHC.Classes.Eq Network.AWS.Snowball.Types.S3Resource.S3Resource
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Snowball.Types.S3Resource.S3Resource
instance Data.Hashable.Class.Hashable Network.AWS.Snowball.Types.S3Resource.S3Resource
instance Control.DeepSeq.NFData Network.AWS.Snowball.Types.S3Resource.S3Resource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Snowball.Types.S3Resource.S3Resource


module Network.AWS.Snowball.Types.JobResource

-- | Contains an array of AWS resource objects. Each object represents an
--   Amazon S3 bucket, an AWS Lambda function, or an Amazon Machine Image
--   (AMI) based on Amazon EC2 that is associated with a particular job.
--   
--   <i>See:</i> <a>newJobResource</a> smart constructor.
data JobResource
JobResource' :: Maybe [Ec2AmiResource] -> Maybe [LambdaResource] -> Maybe [S3Resource] -> JobResource

-- | The Amazon Machine Images (AMIs) associated with this job.
[$sel:ec2AmiResources:JobResource'] :: JobResource -> Maybe [Ec2AmiResource]

-- | The Python-language Lambda functions for this job.
[$sel:lambdaResources:JobResource'] :: JobResource -> Maybe [LambdaResource]

-- | An array of <tt>S3Resource</tt> objects.
[$sel:s3Resources:JobResource'] :: JobResource -> Maybe [S3Resource]

-- | Create a value of <a>JobResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ec2AmiResources:JobResource'</a>,
--   <a>jobResource_ec2AmiResources</a> - The Amazon Machine Images (AMIs)
--   associated with this job.
--   
--   <a>$sel:lambdaResources:JobResource'</a>,
--   <a>jobResource_lambdaResources</a> - The Python-language Lambda
--   functions for this job.
--   
--   <a>$sel:s3Resources:JobResource'</a>, <a>jobResource_s3Resources</a> -
--   An array of <tt>S3Resource</tt> objects.
newJobResource :: JobResource

-- | The Amazon Machine Images (AMIs) associated with this job.
jobResource_ec2AmiResources :: Lens' JobResource (Maybe [Ec2AmiResource])

-- | The Python-language Lambda functions for this job.
jobResource_lambdaResources :: Lens' JobResource (Maybe [LambdaResource])

-- | An array of <tt>S3Resource</tt> objects.
jobResource_s3Resources :: Lens' JobResource (Maybe [S3Resource])
instance GHC.Generics.Generic Network.AWS.Snowball.Types.JobResource.JobResource
instance GHC.Show.Show Network.AWS.Snowball.Types.JobResource.JobResource
instance GHC.Read.Read Network.AWS.Snowball.Types.JobResource.JobResource
instance GHC.Classes.Eq Network.AWS.Snowball.Types.JobResource.JobResource
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Snowball.Types.JobResource.JobResource
instance Data.Hashable.Class.Hashable Network.AWS.Snowball.Types.JobResource.JobResource
instance Control.DeepSeq.NFData Network.AWS.Snowball.Types.JobResource.JobResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Snowball.Types.JobResource.JobResource


module Network.AWS.Snowball.Types.ClusterMetadata

-- | Contains metadata about a specific cluster.
--   
--   <i>See:</i> <a>newClusterMetadata</a> smart constructor.
data ClusterMetadata
ClusterMetadata' :: Maybe JobType -> Maybe Text -> Maybe ClusterState -> Maybe Notification -> Maybe Text -> Maybe Text -> Maybe SnowballType -> Maybe ShippingOption -> Maybe JobResource -> Maybe OnDeviceServiceConfiguration -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe TaxDocuments -> Maybe Text -> ClusterMetadata

-- | The type of job for this cluster. Currently, the only job type
--   supported for clusters is <tt>LOCAL_USE</tt>.
[$sel:jobType:ClusterMetadata'] :: ClusterMetadata -> Maybe JobType

-- | The <tt>KmsKeyARN</tt> Amazon Resource Name (ARN) associated with this
--   cluster. This ARN was created using the <a>CreateKey</a> API action in
--   AWS Key Management Service (AWS KMS).
[$sel:kmsKeyARN:ClusterMetadata'] :: ClusterMetadata -> Maybe Text

-- | The current status of the cluster.
[$sel:clusterState:ClusterMetadata'] :: ClusterMetadata -> Maybe ClusterState

-- | The Amazon Simple Notification Service (Amazon SNS) notification
--   settings for this cluster.
[$sel:notification:ClusterMetadata'] :: ClusterMetadata -> Maybe Notification

-- | The ID of the address that you want a cluster shipped to, after it
--   will be shipped to its primary address. This field is not supported in
--   most regions.
[$sel:forwardingAddressId:ClusterMetadata'] :: ClusterMetadata -> Maybe Text

-- | The automatically generated ID for a specific address.
[$sel:addressId:ClusterMetadata'] :: ClusterMetadata -> Maybe Text

-- | The type of AWS Snow device to use for this cluster.
--   
--   For cluster jobs, AWS Snow Family currently supports only the
--   <tt>EDGE</tt> device type.
[$sel:snowballType:ClusterMetadata'] :: ClusterMetadata -> Maybe SnowballType

-- | The shipping speed for each node in this cluster. This speed doesn't
--   dictate how soon you'll get each device, rather it represents how
--   quickly each device moves to its destination while in transit.
--   Regional shipping speeds are as follows:
--   
--   <ul>
--   <li>In Australia, you have access to express shipping. Typically,
--   devices shipped express are delivered in about a day.</li>
--   <li>In the European Union (EU), you have access to express shipping.
--   Typically, Snow devices shipped express are delivered in about a day.
--   In addition, most countries in the EU have access to standard
--   shipping, which typically takes less than a week, one way.</li>
--   <li>In India, Snow devices are delivered in one to seven days.</li>
--   <li>In the US, you have access to one-day shipping and two-day
--   shipping.</li>
--   </ul>
[$sel:shippingOption:ClusterMetadata'] :: ClusterMetadata -> Maybe ShippingOption

-- | The arrays of JobResource objects that can include updated S3Resource
--   objects or LambdaResource objects.
[$sel:resources:ClusterMetadata'] :: ClusterMetadata -> Maybe JobResource

-- | Represents metadata and configuration settings for services on an AWS
--   Snow Family device.
[$sel:onDeviceServiceConfiguration:ClusterMetadata'] :: ClusterMetadata -> Maybe OnDeviceServiceConfiguration

-- | The automatically generated ID for a cluster.
[$sel:clusterId:ClusterMetadata'] :: ClusterMetadata -> Maybe Text

-- | The creation date for this cluster.
[$sel:creationDate:ClusterMetadata'] :: ClusterMetadata -> Maybe POSIX

-- | The optional description of the cluster.
[$sel:description:ClusterMetadata'] :: ClusterMetadata -> Maybe Text

-- | The tax documents required in your AWS Region.
[$sel:taxDocuments:ClusterMetadata'] :: ClusterMetadata -> Maybe TaxDocuments

-- | The role ARN associated with this cluster. This ARN was created using
--   the <a>CreateRole</a> API action in AWS Identity and Access Management
--   (IAM).
[$sel:roleARN:ClusterMetadata'] :: ClusterMetadata -> Maybe Text

-- | Create a value of <a>ClusterMetadata</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobType:ClusterMetadata'</a>, <a>clusterMetadata_jobType</a> -
--   The type of job for this cluster. Currently, the only job type
--   supported for clusters is <tt>LOCAL_USE</tt>.
--   
--   <a>$sel:kmsKeyARN:ClusterMetadata'</a>,
--   <a>clusterMetadata_kmsKeyARN</a> - The <tt>KmsKeyARN</tt> Amazon
--   Resource Name (ARN) associated with this cluster. This ARN was created
--   using the <a>CreateKey</a> API action in AWS Key Management Service
--   (AWS KMS).
--   
--   <a>$sel:clusterState:ClusterMetadata'</a>,
--   <a>clusterMetadata_clusterState</a> - The current status of the
--   cluster.
--   
--   <a>$sel:notification:ClusterMetadata'</a>,
--   <a>clusterMetadata_notification</a> - The Amazon Simple Notification
--   Service (Amazon SNS) notification settings for this cluster.
--   
--   <a>$sel:forwardingAddressId:ClusterMetadata'</a>,
--   <a>clusterMetadata_forwardingAddressId</a> - The ID of the address
--   that you want a cluster shipped to, after it will be shipped to its
--   primary address. This field is not supported in most regions.
--   
--   <a>$sel:addressId:ClusterMetadata'</a>,
--   <a>clusterMetadata_addressId</a> - The automatically generated ID for
--   a specific address.
--   
--   <a>$sel:snowballType:ClusterMetadata'</a>,
--   <a>clusterMetadata_snowballType</a> - The type of AWS Snow device to
--   use for this cluster.
--   
--   For cluster jobs, AWS Snow Family currently supports only the
--   <tt>EDGE</tt> device type.
--   
--   <a>$sel:shippingOption:ClusterMetadata'</a>,
--   <a>clusterMetadata_shippingOption</a> - The shipping speed for each
--   node in this cluster. This speed doesn't dictate how soon you'll get
--   each device, rather it represents how quickly each device moves to its
--   destination while in transit. Regional shipping speeds are as follows:
--   
--   <ul>
--   <li>In Australia, you have access to express shipping. Typically,
--   devices shipped express are delivered in about a day.</li>
--   <li>In the European Union (EU), you have access to express shipping.
--   Typically, Snow devices shipped express are delivered in about a day.
--   In addition, most countries in the EU have access to standard
--   shipping, which typically takes less than a week, one way.</li>
--   <li>In India, Snow devices are delivered in one to seven days.</li>
--   <li>In the US, you have access to one-day shipping and two-day
--   shipping.</li>
--   </ul>
--   
--   <a>$sel:resources:ClusterMetadata'</a>,
--   <a>clusterMetadata_resources</a> - The arrays of JobResource objects
--   that can include updated S3Resource objects or LambdaResource objects.
--   
--   <a>$sel:onDeviceServiceConfiguration:ClusterMetadata'</a>,
--   <a>clusterMetadata_onDeviceServiceConfiguration</a> - Represents
--   metadata and configuration settings for services on an AWS Snow Family
--   device.
--   
--   <a>$sel:clusterId:ClusterMetadata'</a>,
--   <a>clusterMetadata_clusterId</a> - The automatically generated ID for
--   a cluster.
--   
--   <a>$sel:creationDate:ClusterMetadata'</a>,
--   <a>clusterMetadata_creationDate</a> - The creation date for this
--   cluster.
--   
--   <a>$sel:description:ClusterMetadata'</a>,
--   <a>clusterMetadata_description</a> - The optional description of the
--   cluster.
--   
--   <a>$sel:taxDocuments:ClusterMetadata'</a>,
--   <a>clusterMetadata_taxDocuments</a> - The tax documents required in
--   your AWS Region.
--   
--   <a>$sel:roleARN:ClusterMetadata'</a>, <a>clusterMetadata_roleARN</a> -
--   The role ARN associated with this cluster. This ARN was created using
--   the <a>CreateRole</a> API action in AWS Identity and Access Management
--   (IAM).
newClusterMetadata :: ClusterMetadata

-- | The type of job for this cluster. Currently, the only job type
--   supported for clusters is <tt>LOCAL_USE</tt>.
clusterMetadata_jobType :: Lens' ClusterMetadata (Maybe JobType)

-- | The <tt>KmsKeyARN</tt> Amazon Resource Name (ARN) associated with this
--   cluster. This ARN was created using the <a>CreateKey</a> API action in
--   AWS Key Management Service (AWS KMS).
clusterMetadata_kmsKeyARN :: Lens' ClusterMetadata (Maybe Text)

-- | The current status of the cluster.
clusterMetadata_clusterState :: Lens' ClusterMetadata (Maybe ClusterState)

-- | The Amazon Simple Notification Service (Amazon SNS) notification
--   settings for this cluster.
clusterMetadata_notification :: Lens' ClusterMetadata (Maybe Notification)

-- | The ID of the address that you want a cluster shipped to, after it
--   will be shipped to its primary address. This field is not supported in
--   most regions.
clusterMetadata_forwardingAddressId :: Lens' ClusterMetadata (Maybe Text)

-- | The automatically generated ID for a specific address.
clusterMetadata_addressId :: Lens' ClusterMetadata (Maybe Text)

-- | The type of AWS Snow device to use for this cluster.
--   
--   For cluster jobs, AWS Snow Family currently supports only the
--   <tt>EDGE</tt> device type.
clusterMetadata_snowballType :: Lens' ClusterMetadata (Maybe SnowballType)

-- | The shipping speed for each node in this cluster. This speed doesn't
--   dictate how soon you'll get each device, rather it represents how
--   quickly each device moves to its destination while in transit.
--   Regional shipping speeds are as follows:
--   
--   <ul>
--   <li>In Australia, you have access to express shipping. Typically,
--   devices shipped express are delivered in about a day.</li>
--   <li>In the European Union (EU), you have access to express shipping.
--   Typically, Snow devices shipped express are delivered in about a day.
--   In addition, most countries in the EU have access to standard
--   shipping, which typically takes less than a week, one way.</li>
--   <li>In India, Snow devices are delivered in one to seven days.</li>
--   <li>In the US, you have access to one-day shipping and two-day
--   shipping.</li>
--   </ul>
clusterMetadata_shippingOption :: Lens' ClusterMetadata (Maybe ShippingOption)

-- | The arrays of JobResource objects that can include updated S3Resource
--   objects or LambdaResource objects.
clusterMetadata_resources :: Lens' ClusterMetadata (Maybe JobResource)

-- | Represents metadata and configuration settings for services on an AWS
--   Snow Family device.
clusterMetadata_onDeviceServiceConfiguration :: Lens' ClusterMetadata (Maybe OnDeviceServiceConfiguration)

-- | The automatically generated ID for a cluster.
clusterMetadata_clusterId :: Lens' ClusterMetadata (Maybe Text)

-- | The creation date for this cluster.
clusterMetadata_creationDate :: Lens' ClusterMetadata (Maybe UTCTime)

-- | The optional description of the cluster.
clusterMetadata_description :: Lens' ClusterMetadata (Maybe Text)

-- | The tax documents required in your AWS Region.
clusterMetadata_taxDocuments :: Lens' ClusterMetadata (Maybe TaxDocuments)

-- | The role ARN associated with this cluster. This ARN was created using
--   the <a>CreateRole</a> API action in AWS Identity and Access Management
--   (IAM).
clusterMetadata_roleARN :: Lens' ClusterMetadata (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Snowball.Types.ClusterMetadata.ClusterMetadata
instance GHC.Show.Show Network.AWS.Snowball.Types.ClusterMetadata.ClusterMetadata
instance GHC.Read.Read Network.AWS.Snowball.Types.ClusterMetadata.ClusterMetadata
instance GHC.Classes.Eq Network.AWS.Snowball.Types.ClusterMetadata.ClusterMetadata
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Snowball.Types.ClusterMetadata.ClusterMetadata
instance Data.Hashable.Class.Hashable Network.AWS.Snowball.Types.ClusterMetadata.ClusterMetadata
instance Control.DeepSeq.NFData Network.AWS.Snowball.Types.ClusterMetadata.ClusterMetadata


module Network.AWS.Snowball.Types.WirelessConnection

-- | Configures the wireless connection on an AWS Snowcone device.
--   
--   <i>See:</i> <a>newWirelessConnection</a> smart constructor.
data WirelessConnection
WirelessConnection' :: Maybe Bool -> WirelessConnection

-- | Enables the Wi-Fi adapter on an AWS Snowcone device.
[$sel:isWifiEnabled:WirelessConnection'] :: WirelessConnection -> Maybe Bool

-- | Create a value of <a>WirelessConnection</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:isWifiEnabled:WirelessConnection'</a>,
--   <a>wirelessConnection_isWifiEnabled</a> - Enables the Wi-Fi adapter on
--   an AWS Snowcone device.
newWirelessConnection :: WirelessConnection

-- | Enables the Wi-Fi adapter on an AWS Snowcone device.
wirelessConnection_isWifiEnabled :: Lens' WirelessConnection (Maybe Bool)
instance GHC.Generics.Generic Network.AWS.Snowball.Types.WirelessConnection.WirelessConnection
instance GHC.Show.Show Network.AWS.Snowball.Types.WirelessConnection.WirelessConnection
instance GHC.Read.Read Network.AWS.Snowball.Types.WirelessConnection.WirelessConnection
instance GHC.Classes.Eq Network.AWS.Snowball.Types.WirelessConnection.WirelessConnection
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Snowball.Types.WirelessConnection.WirelessConnection
instance Data.Hashable.Class.Hashable Network.AWS.Snowball.Types.WirelessConnection.WirelessConnection
instance Control.DeepSeq.NFData Network.AWS.Snowball.Types.WirelessConnection.WirelessConnection
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Snowball.Types.WirelessConnection.WirelessConnection


module Network.AWS.Snowball.Types.SnowconeDeviceConfiguration

-- | Specifies the device configuration for an AWS Snowcone job.
--   
--   <i>See:</i> <a>newSnowconeDeviceConfiguration</a> smart constructor.
data SnowconeDeviceConfiguration
SnowconeDeviceConfiguration' :: Maybe WirelessConnection -> SnowconeDeviceConfiguration

-- | Configures the wireless connection for the AWS Snowcone device.
[$sel:wirelessConnection:SnowconeDeviceConfiguration'] :: SnowconeDeviceConfiguration -> Maybe WirelessConnection

-- | Create a value of <a>SnowconeDeviceConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:wirelessConnection:SnowconeDeviceConfiguration'</a>,
--   <a>snowconeDeviceConfiguration_wirelessConnection</a> - Configures the
--   wireless connection for the AWS Snowcone device.
newSnowconeDeviceConfiguration :: SnowconeDeviceConfiguration

-- | Configures the wireless connection for the AWS Snowcone device.
snowconeDeviceConfiguration_wirelessConnection :: Lens' SnowconeDeviceConfiguration (Maybe WirelessConnection)
instance GHC.Generics.Generic Network.AWS.Snowball.Types.SnowconeDeviceConfiguration.SnowconeDeviceConfiguration
instance GHC.Show.Show Network.AWS.Snowball.Types.SnowconeDeviceConfiguration.SnowconeDeviceConfiguration
instance GHC.Read.Read Network.AWS.Snowball.Types.SnowconeDeviceConfiguration.SnowconeDeviceConfiguration
instance GHC.Classes.Eq Network.AWS.Snowball.Types.SnowconeDeviceConfiguration.SnowconeDeviceConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Snowball.Types.SnowconeDeviceConfiguration.SnowconeDeviceConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.Snowball.Types.SnowconeDeviceConfiguration.SnowconeDeviceConfiguration
instance Control.DeepSeq.NFData Network.AWS.Snowball.Types.SnowconeDeviceConfiguration.SnowconeDeviceConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Snowball.Types.SnowconeDeviceConfiguration.SnowconeDeviceConfiguration


module Network.AWS.Snowball.Types.DeviceConfiguration

-- | The container for <tt>SnowconeDeviceConfiguration</tt>.
--   
--   <i>See:</i> <a>newDeviceConfiguration</a> smart constructor.
data DeviceConfiguration
DeviceConfiguration' :: Maybe SnowconeDeviceConfiguration -> DeviceConfiguration

-- | Returns information about the device configuration for an AWS Snowcone
--   job.
[$sel:snowconeDeviceConfiguration:DeviceConfiguration'] :: DeviceConfiguration -> Maybe SnowconeDeviceConfiguration

-- | Create a value of <a>DeviceConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:snowconeDeviceConfiguration:DeviceConfiguration'</a>,
--   <a>deviceConfiguration_snowconeDeviceConfiguration</a> - Returns
--   information about the device configuration for an AWS Snowcone job.
newDeviceConfiguration :: DeviceConfiguration

-- | Returns information about the device configuration for an AWS Snowcone
--   job.
deviceConfiguration_snowconeDeviceConfiguration :: Lens' DeviceConfiguration (Maybe SnowconeDeviceConfiguration)
instance GHC.Generics.Generic Network.AWS.Snowball.Types.DeviceConfiguration.DeviceConfiguration
instance GHC.Show.Show Network.AWS.Snowball.Types.DeviceConfiguration.DeviceConfiguration
instance GHC.Read.Read Network.AWS.Snowball.Types.DeviceConfiguration.DeviceConfiguration
instance GHC.Classes.Eq Network.AWS.Snowball.Types.DeviceConfiguration.DeviceConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Snowball.Types.DeviceConfiguration.DeviceConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.Snowball.Types.DeviceConfiguration.DeviceConfiguration
instance Control.DeepSeq.NFData Network.AWS.Snowball.Types.DeviceConfiguration.DeviceConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Snowball.Types.DeviceConfiguration.DeviceConfiguration


module Network.AWS.Snowball.Types.JobMetadata

-- | Contains information about a specific job including shipping
--   information, job status, and other important metadata. This
--   information is returned as a part of the response syntax of the
--   <tt>DescribeJob</tt> action.
--   
--   <i>See:</i> <a>newJobMetadata</a> smart constructor.
data JobMetadata
JobMetadata' :: Maybe JobType -> Maybe Text -> Maybe RemoteManagement -> Maybe Text -> Maybe JobLogs -> Maybe Notification -> Maybe JobState -> Maybe Text -> Maybe ShippingDetails -> Maybe Text -> Maybe SnowballType -> Maybe DataTransfer -> Maybe Text -> Maybe JobResource -> Maybe OnDeviceServiceConfiguration -> Maybe Text -> Maybe POSIX -> Maybe DeviceConfiguration -> Maybe Text -> Maybe TaxDocuments -> Maybe Text -> Maybe SnowballCapacity -> JobMetadata

-- | The type of job.
[$sel:jobType:JobMetadata'] :: JobMetadata -> Maybe JobType

-- | The Amazon Resource Name (ARN) for the AWS Key Management Service (AWS
--   KMS) key associated with this job. This ARN was created using the
--   <a>CreateKey</a> API action in AWS KMS.
[$sel:kmsKeyARN:JobMetadata'] :: JobMetadata -> Maybe Text

-- | Allows you to securely operate and manage Snowcone devices remotely
--   from outside of your internal network. When set to
--   <tt>INSTALLED_AUTOSTART</tt>, remote management will automatically be
--   available when the device arrives at your location. Otherwise, you
--   need to use the Snowball Client to manage the device.
[$sel:remoteManagement:JobMetadata'] :: JobMetadata -> Maybe RemoteManagement

-- | The automatically generated ID for a job, for example
--   <tt>JID123e4567-e89b-12d3-a456-426655440000</tt>.
[$sel:jobId:JobMetadata'] :: JobMetadata -> Maybe Text

-- | Links to Amazon S3 presigned URLs for the job report and logs. For
--   import jobs, the PDF job report becomes available at the end of the
--   import process. For export jobs, your job report typically becomes
--   available while the Snow device for your job part is being delivered
--   to you.
[$sel:jobLogInfo:JobMetadata'] :: JobMetadata -> Maybe JobLogs

-- | The Amazon Simple Notification Service (Amazon SNS) notification
--   settings associated with a specific job. The <tt>Notification</tt>
--   object is returned as a part of the response syntax of the
--   <tt>DescribeJob</tt> action in the <tt>JobMetadata</tt> data type.
[$sel:notification:JobMetadata'] :: JobMetadata -> Maybe Notification

-- | The current status of the jobs.
[$sel:jobState:JobMetadata'] :: JobMetadata -> Maybe JobState

-- | The ID of the address that you want a job shipped to, after it will be
--   shipped to its primary address. This field is not supported in most
--   regions.
[$sel:forwardingAddressId:JobMetadata'] :: JobMetadata -> Maybe Text

-- | A job's shipping information, including inbound and outbound tracking
--   numbers and shipping speed options.
[$sel:shippingDetails:JobMetadata'] :: JobMetadata -> Maybe ShippingDetails

-- | The ID for the address that you want the Snow device shipped to.
[$sel:addressId:JobMetadata'] :: JobMetadata -> Maybe Text

-- | The type of device used with this job.
[$sel:snowballType:JobMetadata'] :: JobMetadata -> Maybe SnowballType

-- | A value that defines the real-time status of a Snow device's data
--   transfer while the device is at AWS. This data is only available while
--   a job has a <tt>JobState</tt> value of <tt>InProgress</tt>, for both
--   import and export jobs.
[$sel:dataTransferProgress:JobMetadata'] :: JobMetadata -> Maybe DataTransfer

-- | The ID of the long-term pricing type for the device.
[$sel:longTermPricingId:JobMetadata'] :: JobMetadata -> Maybe Text

-- | An array of <tt>S3Resource</tt> objects. Each <tt>S3Resource</tt>
--   object represents an Amazon S3 bucket that your transferred data will
--   be exported from or imported into.
[$sel:resources:JobMetadata'] :: JobMetadata -> Maybe JobResource

-- | Represents metadata and configuration settings for services on an AWS
--   Snow Family device.
[$sel:onDeviceServiceConfiguration:JobMetadata'] :: JobMetadata -> Maybe OnDeviceServiceConfiguration

-- | The 39-character ID for the cluster, for example
--   <tt>CID123e4567-e89b-12d3-a456-426655440000</tt>.
[$sel:clusterId:JobMetadata'] :: JobMetadata -> Maybe Text

-- | The creation date for this job.
[$sel:creationDate:JobMetadata'] :: JobMetadata -> Maybe POSIX
[$sel:deviceConfiguration:JobMetadata'] :: JobMetadata -> Maybe DeviceConfiguration

-- | The description of the job, provided at job creation.
[$sel:description:JobMetadata'] :: JobMetadata -> Maybe Text

-- | The metadata associated with the tax documents required in your AWS
--   Region.
[$sel:taxDocuments:JobMetadata'] :: JobMetadata -> Maybe TaxDocuments

-- | The role ARN associated with this job. This ARN was created using the
--   <a>CreateRole</a> API action in AWS Identity and Access Management
--   (IAM).
[$sel:roleARN:JobMetadata'] :: JobMetadata -> Maybe Text

-- | The Snow device capacity preference for this job, specified at job
--   creation. In US regions, you can choose between 50 TB and 80 TB
--   Snowballs. All other regions use 80 TB capacity Snowballs.
--   
--   For more information, see
--   "https://docs.aws.amazon.com/snowball/latest/snowcone-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>
--   or
--   "https://docs.aws.amazon.com/snowball/latest/developer-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>.
[$sel:snowballCapacityPreference:JobMetadata'] :: JobMetadata -> Maybe SnowballCapacity

-- | Create a value of <a>JobMetadata</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobType:JobMetadata'</a>, <a>jobMetadata_jobType</a> - The
--   type of job.
--   
--   <a>$sel:kmsKeyARN:JobMetadata'</a>, <a>jobMetadata_kmsKeyARN</a> - The
--   Amazon Resource Name (ARN) for the AWS Key Management Service (AWS
--   KMS) key associated with this job. This ARN was created using the
--   <a>CreateKey</a> API action in AWS KMS.
--   
--   <a>$sel:remoteManagement:JobMetadata'</a>,
--   <a>jobMetadata_remoteManagement</a> - Allows you to securely operate
--   and manage Snowcone devices remotely from outside of your internal
--   network. When set to <tt>INSTALLED_AUTOSTART</tt>, remote management
--   will automatically be available when the device arrives at your
--   location. Otherwise, you need to use the Snowball Client to manage the
--   device.
--   
--   <a>$sel:jobId:JobMetadata'</a>, <a>jobMetadata_jobId</a> - The
--   automatically generated ID for a job, for example
--   <tt>JID123e4567-e89b-12d3-a456-426655440000</tt>.
--   
--   <a>$sel:jobLogInfo:JobMetadata'</a>, <a>jobMetadata_jobLogInfo</a> -
--   Links to Amazon S3 presigned URLs for the job report and logs. For
--   import jobs, the PDF job report becomes available at the end of the
--   import process. For export jobs, your job report typically becomes
--   available while the Snow device for your job part is being delivered
--   to you.
--   
--   <a>$sel:notification:JobMetadata'</a>, <a>jobMetadata_notification</a>
--   - The Amazon Simple Notification Service (Amazon SNS) notification
--   settings associated with a specific job. The <tt>Notification</tt>
--   object is returned as a part of the response syntax of the
--   <tt>DescribeJob</tt> action in the <tt>JobMetadata</tt> data type.
--   
--   <a>$sel:jobState:JobMetadata'</a>, <a>jobMetadata_jobState</a> - The
--   current status of the jobs.
--   
--   <a>$sel:forwardingAddressId:JobMetadata'</a>,
--   <a>jobMetadata_forwardingAddressId</a> - The ID of the address that
--   you want a job shipped to, after it will be shipped to its primary
--   address. This field is not supported in most regions.
--   
--   <a>$sel:shippingDetails:JobMetadata'</a>,
--   <a>jobMetadata_shippingDetails</a> - A job's shipping information,
--   including inbound and outbound tracking numbers and shipping speed
--   options.
--   
--   <a>$sel:addressId:JobMetadata'</a>, <a>jobMetadata_addressId</a> - The
--   ID for the address that you want the Snow device shipped to.
--   
--   <a>$sel:snowballType:JobMetadata'</a>, <a>jobMetadata_snowballType</a>
--   - The type of device used with this job.
--   
--   <a>$sel:dataTransferProgress:JobMetadata'</a>,
--   <a>jobMetadata_dataTransferProgress</a> - A value that defines the
--   real-time status of a Snow device's data transfer while the device is
--   at AWS. This data is only available while a job has a
--   <tt>JobState</tt> value of <tt>InProgress</tt>, for both import and
--   export jobs.
--   
--   <a>$sel:longTermPricingId:JobMetadata'</a>,
--   <a>jobMetadata_longTermPricingId</a> - The ID of the long-term pricing
--   type for the device.
--   
--   <a>$sel:resources:JobMetadata'</a>, <a>jobMetadata_resources</a> - An
--   array of <tt>S3Resource</tt> objects. Each <tt>S3Resource</tt> object
--   represents an Amazon S3 bucket that your transferred data will be
--   exported from or imported into.
--   
--   <a>$sel:onDeviceServiceConfiguration:JobMetadata'</a>,
--   <a>jobMetadata_onDeviceServiceConfiguration</a> - Represents metadata
--   and configuration settings for services on an AWS Snow Family device.
--   
--   <a>$sel:clusterId:JobMetadata'</a>, <a>jobMetadata_clusterId</a> - The
--   39-character ID for the cluster, for example
--   <tt>CID123e4567-e89b-12d3-a456-426655440000</tt>.
--   
--   <a>$sel:creationDate:JobMetadata'</a>, <a>jobMetadata_creationDate</a>
--   - The creation date for this job.
--   
--   <a>$sel:deviceConfiguration:JobMetadata'</a>,
--   <a>jobMetadata_deviceConfiguration</a> - Undocumented member.
--   
--   <a>$sel:description:JobMetadata'</a>, <a>jobMetadata_description</a> -
--   The description of the job, provided at job creation.
--   
--   <a>$sel:taxDocuments:JobMetadata'</a>, <a>jobMetadata_taxDocuments</a>
--   - The metadata associated with the tax documents required in your AWS
--   Region.
--   
--   <a>$sel:roleARN:JobMetadata'</a>, <a>jobMetadata_roleARN</a> - The
--   role ARN associated with this job. This ARN was created using the
--   <a>CreateRole</a> API action in AWS Identity and Access Management
--   (IAM).
--   
--   <a>$sel:snowballCapacityPreference:JobMetadata'</a>,
--   <a>jobMetadata_snowballCapacityPreference</a> - The Snow device
--   capacity preference for this job, specified at job creation. In US
--   regions, you can choose between 50 TB and 80 TB Snowballs. All other
--   regions use 80 TB capacity Snowballs.
--   
--   For more information, see
--   "https://docs.aws.amazon.com/snowball/latest/snowcone-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>
--   or
--   "https://docs.aws.amazon.com/snowball/latest/developer-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>.
newJobMetadata :: JobMetadata

-- | The type of job.
jobMetadata_jobType :: Lens' JobMetadata (Maybe JobType)

-- | The Amazon Resource Name (ARN) for the AWS Key Management Service (AWS
--   KMS) key associated with this job. This ARN was created using the
--   <a>CreateKey</a> API action in AWS KMS.
jobMetadata_kmsKeyARN :: Lens' JobMetadata (Maybe Text)

-- | Allows you to securely operate and manage Snowcone devices remotely
--   from outside of your internal network. When set to
--   <tt>INSTALLED_AUTOSTART</tt>, remote management will automatically be
--   available when the device arrives at your location. Otherwise, you
--   need to use the Snowball Client to manage the device.
jobMetadata_remoteManagement :: Lens' JobMetadata (Maybe RemoteManagement)

-- | The automatically generated ID for a job, for example
--   <tt>JID123e4567-e89b-12d3-a456-426655440000</tt>.
jobMetadata_jobId :: Lens' JobMetadata (Maybe Text)

-- | Links to Amazon S3 presigned URLs for the job report and logs. For
--   import jobs, the PDF job report becomes available at the end of the
--   import process. For export jobs, your job report typically becomes
--   available while the Snow device for your job part is being delivered
--   to you.
jobMetadata_jobLogInfo :: Lens' JobMetadata (Maybe JobLogs)

-- | The Amazon Simple Notification Service (Amazon SNS) notification
--   settings associated with a specific job. The <tt>Notification</tt>
--   object is returned as a part of the response syntax of the
--   <tt>DescribeJob</tt> action in the <tt>JobMetadata</tt> data type.
jobMetadata_notification :: Lens' JobMetadata (Maybe Notification)

-- | The current status of the jobs.
jobMetadata_jobState :: Lens' JobMetadata (Maybe JobState)

-- | The ID of the address that you want a job shipped to, after it will be
--   shipped to its primary address. This field is not supported in most
--   regions.
jobMetadata_forwardingAddressId :: Lens' JobMetadata (Maybe Text)

-- | A job's shipping information, including inbound and outbound tracking
--   numbers and shipping speed options.
jobMetadata_shippingDetails :: Lens' JobMetadata (Maybe ShippingDetails)

-- | The ID for the address that you want the Snow device shipped to.
jobMetadata_addressId :: Lens' JobMetadata (Maybe Text)

-- | The type of device used with this job.
jobMetadata_snowballType :: Lens' JobMetadata (Maybe SnowballType)

-- | A value that defines the real-time status of a Snow device's data
--   transfer while the device is at AWS. This data is only available while
--   a job has a <tt>JobState</tt> value of <tt>InProgress</tt>, for both
--   import and export jobs.
jobMetadata_dataTransferProgress :: Lens' JobMetadata (Maybe DataTransfer)

-- | The ID of the long-term pricing type for the device.
jobMetadata_longTermPricingId :: Lens' JobMetadata (Maybe Text)

-- | An array of <tt>S3Resource</tt> objects. Each <tt>S3Resource</tt>
--   object represents an Amazon S3 bucket that your transferred data will
--   be exported from or imported into.
jobMetadata_resources :: Lens' JobMetadata (Maybe JobResource)

-- | Represents metadata and configuration settings for services on an AWS
--   Snow Family device.
jobMetadata_onDeviceServiceConfiguration :: Lens' JobMetadata (Maybe OnDeviceServiceConfiguration)

-- | The 39-character ID for the cluster, for example
--   <tt>CID123e4567-e89b-12d3-a456-426655440000</tt>.
jobMetadata_clusterId :: Lens' JobMetadata (Maybe Text)

-- | The creation date for this job.
jobMetadata_creationDate :: Lens' JobMetadata (Maybe UTCTime)

-- | Undocumented member.
jobMetadata_deviceConfiguration :: Lens' JobMetadata (Maybe DeviceConfiguration)

-- | The description of the job, provided at job creation.
jobMetadata_description :: Lens' JobMetadata (Maybe Text)

-- | The metadata associated with the tax documents required in your AWS
--   Region.
jobMetadata_taxDocuments :: Lens' JobMetadata (Maybe TaxDocuments)

-- | The role ARN associated with this job. This ARN was created using the
--   <a>CreateRole</a> API action in AWS Identity and Access Management
--   (IAM).
jobMetadata_roleARN :: Lens' JobMetadata (Maybe Text)

-- | The Snow device capacity preference for this job, specified at job
--   creation. In US regions, you can choose between 50 TB and 80 TB
--   Snowballs. All other regions use 80 TB capacity Snowballs.
--   
--   For more information, see
--   "https://docs.aws.amazon.com/snowball/latest/snowcone-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>
--   or
--   "https://docs.aws.amazon.com/snowball/latest/developer-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>.
jobMetadata_snowballCapacityPreference :: Lens' JobMetadata (Maybe SnowballCapacity)
instance GHC.Generics.Generic Network.AWS.Snowball.Types.JobMetadata.JobMetadata
instance GHC.Show.Show Network.AWS.Snowball.Types.JobMetadata.JobMetadata
instance GHC.Read.Read Network.AWS.Snowball.Types.JobMetadata.JobMetadata
instance GHC.Classes.Eq Network.AWS.Snowball.Types.JobMetadata.JobMetadata
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Snowball.Types.JobMetadata.JobMetadata
instance Data.Hashable.Class.Hashable Network.AWS.Snowball.Types.JobMetadata.JobMetadata
instance Control.DeepSeq.NFData Network.AWS.Snowball.Types.JobMetadata.JobMetadata


module Network.AWS.Snowball.Types

-- | API version <tt>2016-06-30</tt> of the Amazon Import/Export Snowball
--   SDK configuration.
defaultService :: Service

-- | The specified resource can't be found. Check the information you
--   provided in your last request, and try again.
_InvalidResourceException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The address is either outside the serviceable area for your region, or
--   an error occurred. Check the address with your region's carrier and
--   try again. If the issue persists, contact AWS Support.
_UnsupportedAddressException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You get this exception if you call <tt>CreateReturnShippingLabel</tt>
--   and a valid return shipping label already exists. In this case, use
--   <tt>DescribeReturnShippingLabel</tt> to get the url.
_ReturnShippingLabelAlreadyExistsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The provided AWS Key Management Service key lacks the permissions to
--   perform the specified CreateJob or UpdateJob action.
_KMSRequestFailedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The action can't be performed because the job's current state doesn't
--   allow that action to be performed.
_InvalidJobStateException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Job or cluster creation failed. One or more inputs were invalid.
--   Confirm that the CreateClusterRequest$SnowballType value supports your
--   CreateJobRequest$JobType, and try again.
_InvalidInputCombinationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You get this exception when you call
--   <tt>CreateReturnShippingLabel</tt> more than once when other requests
--   are not completed.
_ConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Your IAM user lacks the necessary Amazon EC2 permissions to perform
--   the attempted action.
_Ec2RequestFailedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The <tt>NextToken</tt> string was altered unexpectedly, and the
--   operation has stopped. Run the operation without changing the
--   <tt>NextToken</tt> string, and try again.
_InvalidNextTokenException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The address provided was invalid. Check the address with your region's
--   carrier, and try again.
_InvalidAddressException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Job creation failed. Currently, clusters support five nodes. If you
--   have fewer than five nodes for your cluster and you have more nodes to
--   create for this cluster, try again and create jobs until your cluster
--   has exactly five nodes.
_ClusterLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError
newtype ClusterState
ClusterState' :: Text -> ClusterState
[fromClusterState] :: ClusterState -> Text
pattern ClusterState_AwaitingQuorum :: ClusterState
pattern ClusterState_Cancelled :: ClusterState
pattern ClusterState_Complete :: ClusterState
pattern ClusterState_InUse :: ClusterState
pattern ClusterState_Pending :: ClusterState
newtype DeviceServiceName
DeviceServiceName' :: Text -> DeviceServiceName
[fromDeviceServiceName] :: DeviceServiceName -> Text
pattern DeviceServiceName_NFS_ON_DEVICE_SERVICE :: DeviceServiceName
pattern DeviceServiceName_S3_ON_DEVICE_SERVICE :: DeviceServiceName
newtype JobState
JobState' :: Text -> JobState
[fromJobState] :: JobState -> Text
pattern JobState_Cancelled :: JobState
pattern JobState_Complete :: JobState
pattern JobState_InProgress :: JobState
pattern JobState_InTransitToAWS :: JobState
pattern JobState_InTransitToCustomer :: JobState
pattern JobState_Listing :: JobState
pattern JobState_New :: JobState
pattern JobState_Pending :: JobState
pattern JobState_PreparingAppliance :: JobState
pattern JobState_PreparingShipment :: JobState
pattern JobState_WithAWS :: JobState
pattern JobState_WithAWSSortingFacility :: JobState
pattern JobState_WithCustomer :: JobState
newtype JobType
JobType' :: Text -> JobType
[fromJobType] :: JobType -> Text
pattern JobType_EXPORT :: JobType
pattern JobType_IMPORT :: JobType
pattern JobType_LOCAL_USE :: JobType
newtype LongTermPricingType
LongTermPricingType' :: Text -> LongTermPricingType
[fromLongTermPricingType] :: LongTermPricingType -> Text
pattern LongTermPricingType_OneYear :: LongTermPricingType
pattern LongTermPricingType_ThreeYear :: LongTermPricingType
newtype RemoteManagement
RemoteManagement' :: Text -> RemoteManagement
[fromRemoteManagement] :: RemoteManagement -> Text
pattern RemoteManagement_INSTALLED_AUTOSTART :: RemoteManagement
pattern RemoteManagement_INSTALLED_ONLY :: RemoteManagement
newtype ShipmentState
ShipmentState' :: Text -> ShipmentState
[fromShipmentState] :: ShipmentState -> Text
pattern ShipmentState_RECEIVED :: ShipmentState
pattern ShipmentState_RETURNED :: ShipmentState
newtype ShippingLabelStatus
ShippingLabelStatus' :: Text -> ShippingLabelStatus
[fromShippingLabelStatus] :: ShippingLabelStatus -> Text
pattern ShippingLabelStatus_Failed :: ShippingLabelStatus
pattern ShippingLabelStatus_InProgress :: ShippingLabelStatus
pattern ShippingLabelStatus_Succeeded :: ShippingLabelStatus
pattern ShippingLabelStatus_TimedOut :: ShippingLabelStatus
newtype ShippingOption
ShippingOption' :: Text -> ShippingOption
[fromShippingOption] :: ShippingOption -> Text
pattern ShippingOption_EXPRESS :: ShippingOption
pattern ShippingOption_NEXT_DAY :: ShippingOption
pattern ShippingOption_SECOND_DAY :: ShippingOption
pattern ShippingOption_STANDARD :: ShippingOption
newtype SnowballCapacity
SnowballCapacity' :: Text -> SnowballCapacity
[fromSnowballCapacity] :: SnowballCapacity -> Text
pattern SnowballCapacity_NoPreference :: SnowballCapacity
pattern SnowballCapacity_T100 :: SnowballCapacity
pattern SnowballCapacity_T14 :: SnowballCapacity
pattern SnowballCapacity_T42 :: SnowballCapacity
pattern SnowballCapacity_T50 :: SnowballCapacity
pattern SnowballCapacity_T8 :: SnowballCapacity
pattern SnowballCapacity_T80 :: SnowballCapacity
pattern SnowballCapacity_T98 :: SnowballCapacity
newtype SnowballType
SnowballType' :: Text -> SnowballType
[fromSnowballType] :: SnowballType -> Text
pattern SnowballType_EDGE :: SnowballType
pattern SnowballType_EDGE_C :: SnowballType
pattern SnowballType_EDGE_CG :: SnowballType
pattern SnowballType_EDGE_S :: SnowballType
pattern SnowballType_SNC1_HDD :: SnowballType
pattern SnowballType_SNC1_SSD :: SnowballType
pattern SnowballType_STANDARD :: SnowballType
newtype StorageUnit
StorageUnit' :: Text -> StorageUnit
[fromStorageUnit] :: StorageUnit -> Text
pattern StorageUnit_TB :: StorageUnit
newtype TransferOption
TransferOption' :: Text -> TransferOption
[fromTransferOption] :: TransferOption -> Text
pattern TransferOption_EXPORT :: TransferOption
pattern TransferOption_IMPORT :: TransferOption
pattern TransferOption_LOCAL_USE :: TransferOption

-- | The address that you want the Snow device(s) associated with a
--   specific job to be shipped to. Addresses are validated at the time of
--   creation. The address you provide must be located within the
--   serviceable area of your region. Although no individual elements of
--   the <tt>Address</tt> are required, if the address is invalid or
--   unsupported, then an exception is thrown.
--   
--   <i>See:</i> <a>newAddress</a> smart constructor.
data Address
Address' :: Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Address

-- | If the address you are creating is a primary address, then set this
--   option to true. This field is not supported in most regions.
[$sel:isRestricted:Address'] :: Address -> Maybe Bool

-- | The third line in a street address that a Snow device is to be
--   delivered to.
[$sel:street3:Address'] :: Address -> Maybe Text

-- | This field is no longer used and the value is ignored.
[$sel:landmark:Address'] :: Address -> Maybe Text

-- | The postal code in an address that a Snow device is to be delivered
--   to.
[$sel:postalCode:Address'] :: Address -> Maybe Text

-- | The country in an address that a Snow device is to be delivered to.
[$sel:country:Address'] :: Address -> Maybe Text

-- | The state or province in an address that a Snow device is to be
--   delivered to.
[$sel:stateOrProvince:Address'] :: Address -> Maybe Text

-- | The second line in a street address that a Snow device is to be
--   delivered to.
[$sel:street2:Address'] :: Address -> Maybe Text

-- | The unique ID for an address.
[$sel:addressId:Address'] :: Address -> Maybe Text

-- | The city in an address that a Snow device is to be delivered to.
[$sel:city:Address'] :: Address -> Maybe Text

-- | The phone number associated with an address that a Snow device is to
--   be delivered to.
[$sel:phoneNumber:Address'] :: Address -> Maybe Text

-- | The name of the company to receive a Snow device at an address.
[$sel:company:Address'] :: Address -> Maybe Text

-- | The name of a person to receive a Snow device at an address.
[$sel:name:Address'] :: Address -> Maybe Text

-- | This field is no longer used and the value is ignored.
[$sel:prefectureOrDistrict:Address'] :: Address -> Maybe Text

-- | The first line in a street address that a Snow device is to be
--   delivered to.
[$sel:street1:Address'] :: Address -> Maybe Text

-- | Create a value of <a>Address</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:isRestricted:Address'</a>, <a>address_isRestricted</a> - If
--   the address you are creating is a primary address, then set this
--   option to true. This field is not supported in most regions.
--   
--   <a>$sel:street3:Address'</a>, <a>address_street3</a> - The third line
--   in a street address that a Snow device is to be delivered to.
--   
--   <a>$sel:landmark:Address'</a>, <a>address_landmark</a> - This field is
--   no longer used and the value is ignored.
--   
--   <a>$sel:postalCode:Address'</a>, <a>address_postalCode</a> - The
--   postal code in an address that a Snow device is to be delivered to.
--   
--   <a>$sel:country:Address'</a>, <a>address_country</a> - The country in
--   an address that a Snow device is to be delivered to.
--   
--   <a>$sel:stateOrProvince:Address'</a>, <a>address_stateOrProvince</a> -
--   The state or province in an address that a Snow device is to be
--   delivered to.
--   
--   <a>$sel:street2:Address'</a>, <a>address_street2</a> - The second line
--   in a street address that a Snow device is to be delivered to.
--   
--   <a>$sel:addressId:Address'</a>, <a>address_addressId</a> - The unique
--   ID for an address.
--   
--   <a>$sel:city:Address'</a>, <a>address_city</a> - The city in an
--   address that a Snow device is to be delivered to.
--   
--   <a>$sel:phoneNumber:Address'</a>, <a>address_phoneNumber</a> - The
--   phone number associated with an address that a Snow device is to be
--   delivered to.
--   
--   <a>$sel:company:Address'</a>, <a>address_company</a> - The name of the
--   company to receive a Snow device at an address.
--   
--   <a>$sel:name:Address'</a>, <a>address_name</a> - The name of a person
--   to receive a Snow device at an address.
--   
--   <a>$sel:prefectureOrDistrict:Address'</a>,
--   <a>address_prefectureOrDistrict</a> - This field is no longer used and
--   the value is ignored.
--   
--   <a>$sel:street1:Address'</a>, <a>address_street1</a> - The first line
--   in a street address that a Snow device is to be delivered to.
newAddress :: Address

-- | If the address you are creating is a primary address, then set this
--   option to true. This field is not supported in most regions.
address_isRestricted :: Lens' Address (Maybe Bool)

-- | The third line in a street address that a Snow device is to be
--   delivered to.
address_street3 :: Lens' Address (Maybe Text)

-- | This field is no longer used and the value is ignored.
address_landmark :: Lens' Address (Maybe Text)

-- | The postal code in an address that a Snow device is to be delivered
--   to.
address_postalCode :: Lens' Address (Maybe Text)

-- | The country in an address that a Snow device is to be delivered to.
address_country :: Lens' Address (Maybe Text)

-- | The state or province in an address that a Snow device is to be
--   delivered to.
address_stateOrProvince :: Lens' Address (Maybe Text)

-- | The second line in a street address that a Snow device is to be
--   delivered to.
address_street2 :: Lens' Address (Maybe Text)

-- | The unique ID for an address.
address_addressId :: Lens' Address (Maybe Text)

-- | The city in an address that a Snow device is to be delivered to.
address_city :: Lens' Address (Maybe Text)

-- | The phone number associated with an address that a Snow device is to
--   be delivered to.
address_phoneNumber :: Lens' Address (Maybe Text)

-- | The name of the company to receive a Snow device at an address.
address_company :: Lens' Address (Maybe Text)

-- | The name of a person to receive a Snow device at an address.
address_name :: Lens' Address (Maybe Text)

-- | This field is no longer used and the value is ignored.
address_prefectureOrDistrict :: Lens' Address (Maybe Text)

-- | The first line in a street address that a Snow device is to be
--   delivered to.
address_street1 :: Lens' Address (Maybe Text)

-- | Contains a cluster's state, a cluster's ID, and other important
--   information.
--   
--   <i>See:</i> <a>newClusterListEntry</a> smart constructor.
data ClusterListEntry
ClusterListEntry' :: Maybe ClusterState -> Maybe Text -> Maybe POSIX -> Maybe Text -> ClusterListEntry

-- | The current state of this cluster. For information about the state of
--   a specific node, see JobListEntry$JobState.
[$sel:clusterState:ClusterListEntry'] :: ClusterListEntry -> Maybe ClusterState

-- | The 39-character ID for the cluster that you want to list, for example
--   <tt>CID123e4567-e89b-12d3-a456-426655440000</tt>.
[$sel:clusterId:ClusterListEntry'] :: ClusterListEntry -> Maybe Text

-- | The creation date for this cluster.
[$sel:creationDate:ClusterListEntry'] :: ClusterListEntry -> Maybe POSIX

-- | Defines an optional description of the cluster, for example
--   <tt>Environmental Data Cluster-01</tt>.
[$sel:description:ClusterListEntry'] :: ClusterListEntry -> Maybe Text

-- | Create a value of <a>ClusterListEntry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterState:ClusterListEntry'</a>,
--   <a>clusterListEntry_clusterState</a> - The current state of this
--   cluster. For information about the state of a specific node, see
--   JobListEntry$JobState.
--   
--   <a>$sel:clusterId:ClusterListEntry'</a>,
--   <a>clusterListEntry_clusterId</a> - The 39-character ID for the
--   cluster that you want to list, for example
--   <tt>CID123e4567-e89b-12d3-a456-426655440000</tt>.
--   
--   <a>$sel:creationDate:ClusterListEntry'</a>,
--   <a>clusterListEntry_creationDate</a> - The creation date for this
--   cluster.
--   
--   <a>$sel:description:ClusterListEntry'</a>,
--   <a>clusterListEntry_description</a> - Defines an optional description
--   of the cluster, for example <tt>Environmental Data Cluster-01</tt>.
newClusterListEntry :: ClusterListEntry

-- | The current state of this cluster. For information about the state of
--   a specific node, see JobListEntry$JobState.
clusterListEntry_clusterState :: Lens' ClusterListEntry (Maybe ClusterState)

-- | The 39-character ID for the cluster that you want to list, for example
--   <tt>CID123e4567-e89b-12d3-a456-426655440000</tt>.
clusterListEntry_clusterId :: Lens' ClusterListEntry (Maybe Text)

-- | The creation date for this cluster.
clusterListEntry_creationDate :: Lens' ClusterListEntry (Maybe UTCTime)

-- | Defines an optional description of the cluster, for example
--   <tt>Environmental Data Cluster-01</tt>.
clusterListEntry_description :: Lens' ClusterListEntry (Maybe Text)

-- | Contains metadata about a specific cluster.
--   
--   <i>See:</i> <a>newClusterMetadata</a> smart constructor.
data ClusterMetadata
ClusterMetadata' :: Maybe JobType -> Maybe Text -> Maybe ClusterState -> Maybe Notification -> Maybe Text -> Maybe Text -> Maybe SnowballType -> Maybe ShippingOption -> Maybe JobResource -> Maybe OnDeviceServiceConfiguration -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe TaxDocuments -> Maybe Text -> ClusterMetadata

-- | The type of job for this cluster. Currently, the only job type
--   supported for clusters is <tt>LOCAL_USE</tt>.
[$sel:jobType:ClusterMetadata'] :: ClusterMetadata -> Maybe JobType

-- | The <tt>KmsKeyARN</tt> Amazon Resource Name (ARN) associated with this
--   cluster. This ARN was created using the <a>CreateKey</a> API action in
--   AWS Key Management Service (AWS KMS).
[$sel:kmsKeyARN:ClusterMetadata'] :: ClusterMetadata -> Maybe Text

-- | The current status of the cluster.
[$sel:clusterState:ClusterMetadata'] :: ClusterMetadata -> Maybe ClusterState

-- | The Amazon Simple Notification Service (Amazon SNS) notification
--   settings for this cluster.
[$sel:notification:ClusterMetadata'] :: ClusterMetadata -> Maybe Notification

-- | The ID of the address that you want a cluster shipped to, after it
--   will be shipped to its primary address. This field is not supported in
--   most regions.
[$sel:forwardingAddressId:ClusterMetadata'] :: ClusterMetadata -> Maybe Text

-- | The automatically generated ID for a specific address.
[$sel:addressId:ClusterMetadata'] :: ClusterMetadata -> Maybe Text

-- | The type of AWS Snow device to use for this cluster.
--   
--   For cluster jobs, AWS Snow Family currently supports only the
--   <tt>EDGE</tt> device type.
[$sel:snowballType:ClusterMetadata'] :: ClusterMetadata -> Maybe SnowballType

-- | The shipping speed for each node in this cluster. This speed doesn't
--   dictate how soon you'll get each device, rather it represents how
--   quickly each device moves to its destination while in transit.
--   Regional shipping speeds are as follows:
--   
--   <ul>
--   <li>In Australia, you have access to express shipping. Typically,
--   devices shipped express are delivered in about a day.</li>
--   <li>In the European Union (EU), you have access to express shipping.
--   Typically, Snow devices shipped express are delivered in about a day.
--   In addition, most countries in the EU have access to standard
--   shipping, which typically takes less than a week, one way.</li>
--   <li>In India, Snow devices are delivered in one to seven days.</li>
--   <li>In the US, you have access to one-day shipping and two-day
--   shipping.</li>
--   </ul>
[$sel:shippingOption:ClusterMetadata'] :: ClusterMetadata -> Maybe ShippingOption

-- | The arrays of JobResource objects that can include updated S3Resource
--   objects or LambdaResource objects.
[$sel:resources:ClusterMetadata'] :: ClusterMetadata -> Maybe JobResource

-- | Represents metadata and configuration settings for services on an AWS
--   Snow Family device.
[$sel:onDeviceServiceConfiguration:ClusterMetadata'] :: ClusterMetadata -> Maybe OnDeviceServiceConfiguration

-- | The automatically generated ID for a cluster.
[$sel:clusterId:ClusterMetadata'] :: ClusterMetadata -> Maybe Text

-- | The creation date for this cluster.
[$sel:creationDate:ClusterMetadata'] :: ClusterMetadata -> Maybe POSIX

-- | The optional description of the cluster.
[$sel:description:ClusterMetadata'] :: ClusterMetadata -> Maybe Text

-- | The tax documents required in your AWS Region.
[$sel:taxDocuments:ClusterMetadata'] :: ClusterMetadata -> Maybe TaxDocuments

-- | The role ARN associated with this cluster. This ARN was created using
--   the <a>CreateRole</a> API action in AWS Identity and Access Management
--   (IAM).
[$sel:roleARN:ClusterMetadata'] :: ClusterMetadata -> Maybe Text

-- | Create a value of <a>ClusterMetadata</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobType:ClusterMetadata'</a>, <a>clusterMetadata_jobType</a> -
--   The type of job for this cluster. Currently, the only job type
--   supported for clusters is <tt>LOCAL_USE</tt>.
--   
--   <a>$sel:kmsKeyARN:ClusterMetadata'</a>,
--   <a>clusterMetadata_kmsKeyARN</a> - The <tt>KmsKeyARN</tt> Amazon
--   Resource Name (ARN) associated with this cluster. This ARN was created
--   using the <a>CreateKey</a> API action in AWS Key Management Service
--   (AWS KMS).
--   
--   <a>$sel:clusterState:ClusterMetadata'</a>,
--   <a>clusterMetadata_clusterState</a> - The current status of the
--   cluster.
--   
--   <a>$sel:notification:ClusterMetadata'</a>,
--   <a>clusterMetadata_notification</a> - The Amazon Simple Notification
--   Service (Amazon SNS) notification settings for this cluster.
--   
--   <a>$sel:forwardingAddressId:ClusterMetadata'</a>,
--   <a>clusterMetadata_forwardingAddressId</a> - The ID of the address
--   that you want a cluster shipped to, after it will be shipped to its
--   primary address. This field is not supported in most regions.
--   
--   <a>$sel:addressId:ClusterMetadata'</a>,
--   <a>clusterMetadata_addressId</a> - The automatically generated ID for
--   a specific address.
--   
--   <a>$sel:snowballType:ClusterMetadata'</a>,
--   <a>clusterMetadata_snowballType</a> - The type of AWS Snow device to
--   use for this cluster.
--   
--   For cluster jobs, AWS Snow Family currently supports only the
--   <tt>EDGE</tt> device type.
--   
--   <a>$sel:shippingOption:ClusterMetadata'</a>,
--   <a>clusterMetadata_shippingOption</a> - The shipping speed for each
--   node in this cluster. This speed doesn't dictate how soon you'll get
--   each device, rather it represents how quickly each device moves to its
--   destination while in transit. Regional shipping speeds are as follows:
--   
--   <ul>
--   <li>In Australia, you have access to express shipping. Typically,
--   devices shipped express are delivered in about a day.</li>
--   <li>In the European Union (EU), you have access to express shipping.
--   Typically, Snow devices shipped express are delivered in about a day.
--   In addition, most countries in the EU have access to standard
--   shipping, which typically takes less than a week, one way.</li>
--   <li>In India, Snow devices are delivered in one to seven days.</li>
--   <li>In the US, you have access to one-day shipping and two-day
--   shipping.</li>
--   </ul>
--   
--   <a>$sel:resources:ClusterMetadata'</a>,
--   <a>clusterMetadata_resources</a> - The arrays of JobResource objects
--   that can include updated S3Resource objects or LambdaResource objects.
--   
--   <a>$sel:onDeviceServiceConfiguration:ClusterMetadata'</a>,
--   <a>clusterMetadata_onDeviceServiceConfiguration</a> - Represents
--   metadata and configuration settings for services on an AWS Snow Family
--   device.
--   
--   <a>$sel:clusterId:ClusterMetadata'</a>,
--   <a>clusterMetadata_clusterId</a> - The automatically generated ID for
--   a cluster.
--   
--   <a>$sel:creationDate:ClusterMetadata'</a>,
--   <a>clusterMetadata_creationDate</a> - The creation date for this
--   cluster.
--   
--   <a>$sel:description:ClusterMetadata'</a>,
--   <a>clusterMetadata_description</a> - The optional description of the
--   cluster.
--   
--   <a>$sel:taxDocuments:ClusterMetadata'</a>,
--   <a>clusterMetadata_taxDocuments</a> - The tax documents required in
--   your AWS Region.
--   
--   <a>$sel:roleARN:ClusterMetadata'</a>, <a>clusterMetadata_roleARN</a> -
--   The role ARN associated with this cluster. This ARN was created using
--   the <a>CreateRole</a> API action in AWS Identity and Access Management
--   (IAM).
newClusterMetadata :: ClusterMetadata

-- | The type of job for this cluster. Currently, the only job type
--   supported for clusters is <tt>LOCAL_USE</tt>.
clusterMetadata_jobType :: Lens' ClusterMetadata (Maybe JobType)

-- | The <tt>KmsKeyARN</tt> Amazon Resource Name (ARN) associated with this
--   cluster. This ARN was created using the <a>CreateKey</a> API action in
--   AWS Key Management Service (AWS KMS).
clusterMetadata_kmsKeyARN :: Lens' ClusterMetadata (Maybe Text)

-- | The current status of the cluster.
clusterMetadata_clusterState :: Lens' ClusterMetadata (Maybe ClusterState)

-- | The Amazon Simple Notification Service (Amazon SNS) notification
--   settings for this cluster.
clusterMetadata_notification :: Lens' ClusterMetadata (Maybe Notification)

-- | The ID of the address that you want a cluster shipped to, after it
--   will be shipped to its primary address. This field is not supported in
--   most regions.
clusterMetadata_forwardingAddressId :: Lens' ClusterMetadata (Maybe Text)

-- | The automatically generated ID for a specific address.
clusterMetadata_addressId :: Lens' ClusterMetadata (Maybe Text)

-- | The type of AWS Snow device to use for this cluster.
--   
--   For cluster jobs, AWS Snow Family currently supports only the
--   <tt>EDGE</tt> device type.
clusterMetadata_snowballType :: Lens' ClusterMetadata (Maybe SnowballType)

-- | The shipping speed for each node in this cluster. This speed doesn't
--   dictate how soon you'll get each device, rather it represents how
--   quickly each device moves to its destination while in transit.
--   Regional shipping speeds are as follows:
--   
--   <ul>
--   <li>In Australia, you have access to express shipping. Typically,
--   devices shipped express are delivered in about a day.</li>
--   <li>In the European Union (EU), you have access to express shipping.
--   Typically, Snow devices shipped express are delivered in about a day.
--   In addition, most countries in the EU have access to standard
--   shipping, which typically takes less than a week, one way.</li>
--   <li>In India, Snow devices are delivered in one to seven days.</li>
--   <li>In the US, you have access to one-day shipping and two-day
--   shipping.</li>
--   </ul>
clusterMetadata_shippingOption :: Lens' ClusterMetadata (Maybe ShippingOption)

-- | The arrays of JobResource objects that can include updated S3Resource
--   objects or LambdaResource objects.
clusterMetadata_resources :: Lens' ClusterMetadata (Maybe JobResource)

-- | Represents metadata and configuration settings for services on an AWS
--   Snow Family device.
clusterMetadata_onDeviceServiceConfiguration :: Lens' ClusterMetadata (Maybe OnDeviceServiceConfiguration)

-- | The automatically generated ID for a cluster.
clusterMetadata_clusterId :: Lens' ClusterMetadata (Maybe Text)

-- | The creation date for this cluster.
clusterMetadata_creationDate :: Lens' ClusterMetadata (Maybe UTCTime)

-- | The optional description of the cluster.
clusterMetadata_description :: Lens' ClusterMetadata (Maybe Text)

-- | The tax documents required in your AWS Region.
clusterMetadata_taxDocuments :: Lens' ClusterMetadata (Maybe TaxDocuments)

-- | The role ARN associated with this cluster. This ARN was created using
--   the <a>CreateRole</a> API action in AWS Identity and Access Management
--   (IAM).
clusterMetadata_roleARN :: Lens' ClusterMetadata (Maybe Text)

-- | A JSON-formatted object that describes a compatible Amazon Machine
--   Image (AMI), including the ID and name for a Snow device AMI. This AMI
--   is compatible with the device's physical hardware requirements, and it
--   should be able to be run in an SBE1 instance on the device.
--   
--   <i>See:</i> <a>newCompatibleImage</a> smart constructor.
data CompatibleImage
CompatibleImage' :: Maybe Text -> Maybe Text -> CompatibleImage

-- | The optional name of a compatible image.
[$sel:name:CompatibleImage'] :: CompatibleImage -> Maybe Text

-- | The unique identifier for an individual Snow device AMI.
[$sel:amiId:CompatibleImage'] :: CompatibleImage -> Maybe Text

-- | Create a value of <a>CompatibleImage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:CompatibleImage'</a>, <a>compatibleImage_name</a> - The
--   optional name of a compatible image.
--   
--   <a>$sel:amiId:CompatibleImage'</a>, <a>compatibleImage_amiId</a> - The
--   unique identifier for an individual Snow device AMI.
newCompatibleImage :: CompatibleImage

-- | The optional name of a compatible image.
compatibleImage_name :: Lens' CompatibleImage (Maybe Text)

-- | The unique identifier for an individual Snow device AMI.
compatibleImage_amiId :: Lens' CompatibleImage (Maybe Text)

-- | Defines the real-time status of a Snow device's data transfer while
--   the device is at AWS. This data is only available while a job has a
--   <tt>JobState</tt> value of <tt>InProgress</tt>, for both import and
--   export jobs.
--   
--   <i>See:</i> <a>newDataTransfer</a> smart constructor.
data DataTransfer
DataTransfer' :: Maybe Integer -> Maybe Integer -> Maybe Integer -> Maybe Integer -> DataTransfer

-- | The total number of objects for a transfer between a Snow device and
--   Amazon S3. This value is set to 0 (zero) until all the keys that will
--   be transferred have been listed.
[$sel:totalObjects:DataTransfer'] :: DataTransfer -> Maybe Integer

-- | The total bytes of data for a transfer between a Snow device and
--   Amazon S3. This value is set to 0 (zero) until all the keys that will
--   be transferred have been listed.
[$sel:totalBytes:DataTransfer'] :: DataTransfer -> Maybe Integer

-- | The number of objects transferred between a Snow device and Amazon S3.
[$sel:objectsTransferred:DataTransfer'] :: DataTransfer -> Maybe Integer

-- | The number of bytes transferred between a Snow device and Amazon S3.
[$sel:bytesTransferred:DataTransfer'] :: DataTransfer -> Maybe Integer

-- | Create a value of <a>DataTransfer</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:totalObjects:DataTransfer'</a>,
--   <a>dataTransfer_totalObjects</a> - The total number of objects for a
--   transfer between a Snow device and Amazon S3. This value is set to 0
--   (zero) until all the keys that will be transferred have been listed.
--   
--   <a>$sel:totalBytes:DataTransfer'</a>, <a>dataTransfer_totalBytes</a> -
--   The total bytes of data for a transfer between a Snow device and
--   Amazon S3. This value is set to 0 (zero) until all the keys that will
--   be transferred have been listed.
--   
--   <a>$sel:objectsTransferred:DataTransfer'</a>,
--   <a>dataTransfer_objectsTransferred</a> - The number of objects
--   transferred between a Snow device and Amazon S3.
--   
--   <a>$sel:bytesTransferred:DataTransfer'</a>,
--   <a>dataTransfer_bytesTransferred</a> - The number of bytes transferred
--   between a Snow device and Amazon S3.
newDataTransfer :: DataTransfer

-- | The total number of objects for a transfer between a Snow device and
--   Amazon S3. This value is set to 0 (zero) until all the keys that will
--   be transferred have been listed.
dataTransfer_totalObjects :: Lens' DataTransfer (Maybe Integer)

-- | The total bytes of data for a transfer between a Snow device and
--   Amazon S3. This value is set to 0 (zero) until all the keys that will
--   be transferred have been listed.
dataTransfer_totalBytes :: Lens' DataTransfer (Maybe Integer)

-- | The number of objects transferred between a Snow device and Amazon S3.
dataTransfer_objectsTransferred :: Lens' DataTransfer (Maybe Integer)

-- | The number of bytes transferred between a Snow device and Amazon S3.
dataTransfer_bytesTransferred :: Lens' DataTransfer (Maybe Integer)

-- | The container for <tt>SnowconeDeviceConfiguration</tt>.
--   
--   <i>See:</i> <a>newDeviceConfiguration</a> smart constructor.
data DeviceConfiguration
DeviceConfiguration' :: Maybe SnowconeDeviceConfiguration -> DeviceConfiguration

-- | Returns information about the device configuration for an AWS Snowcone
--   job.
[$sel:snowconeDeviceConfiguration:DeviceConfiguration'] :: DeviceConfiguration -> Maybe SnowconeDeviceConfiguration

-- | Create a value of <a>DeviceConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:snowconeDeviceConfiguration:DeviceConfiguration'</a>,
--   <a>deviceConfiguration_snowconeDeviceConfiguration</a> - Returns
--   information about the device configuration for an AWS Snowcone job.
newDeviceConfiguration :: DeviceConfiguration

-- | Returns information about the device configuration for an AWS Snowcone
--   job.
deviceConfiguration_snowconeDeviceConfiguration :: Lens' DeviceConfiguration (Maybe SnowconeDeviceConfiguration)

-- | A JSON-formatted object that contains the IDs for an Amazon Machine
--   Image (AMI), including the Amazon EC2 AMI ID and the Snow device AMI
--   ID. Each AMI has these two IDs to simplify identifying the AMI in both
--   the AWS Cloud and on the device.
--   
--   <i>See:</i> <a>newEc2AmiResource</a> smart constructor.
data Ec2AmiResource
Ec2AmiResource' :: Maybe Text -> Text -> Ec2AmiResource

-- | The ID of the AMI on the Snow device.
[$sel:snowballAmiId:Ec2AmiResource'] :: Ec2AmiResource -> Maybe Text

-- | The ID of the AMI in Amazon EC2.
[$sel:amiId:Ec2AmiResource'] :: Ec2AmiResource -> Text

-- | Create a value of <a>Ec2AmiResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:snowballAmiId:Ec2AmiResource'</a>,
--   <a>ec2AmiResource_snowballAmiId</a> - The ID of the AMI on the Snow
--   device.
--   
--   <a>$sel:amiId:Ec2AmiResource'</a>, <a>ec2AmiResource_amiId</a> - The
--   ID of the AMI in Amazon EC2.
newEc2AmiResource :: Text -> Ec2AmiResource

-- | The ID of the AMI on the Snow device.
ec2AmiResource_snowballAmiId :: Lens' Ec2AmiResource (Maybe Text)

-- | The ID of the AMI in Amazon EC2.
ec2AmiResource_amiId :: Lens' Ec2AmiResource Text

-- | The container for the EventTriggerDefinition$EventResourceARN.
--   
--   <i>See:</i> <a>newEventTriggerDefinition</a> smart constructor.
data EventTriggerDefinition
EventTriggerDefinition' :: Maybe Text -> EventTriggerDefinition

-- | The Amazon Resource Name (ARN) for any local Amazon S3 resource that
--   is an AWS Lambda function's event trigger associated with this job.
[$sel:eventResourceARN:EventTriggerDefinition'] :: EventTriggerDefinition -> Maybe Text

-- | Create a value of <a>EventTriggerDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventResourceARN:EventTriggerDefinition'</a>,
--   <a>eventTriggerDefinition_eventResourceARN</a> - The Amazon Resource
--   Name (ARN) for any local Amazon S3 resource that is an AWS Lambda
--   function's event trigger associated with this job.
newEventTriggerDefinition :: EventTriggerDefinition

-- | The Amazon Resource Name (ARN) for any local Amazon S3 resource that
--   is an AWS Lambda function's event trigger associated with this job.
eventTriggerDefinition_eventResourceARN :: Lens' EventTriggerDefinition (Maybe Text)

-- | The tax documents required in AWS Regions in India.
--   
--   <i>See:</i> <a>newINDTaxDocuments</a> smart constructor.
data INDTaxDocuments
INDTaxDocuments' :: Maybe Text -> INDTaxDocuments

-- | The Goods and Services Tax (GST) documents required in AWS Regions in
--   India.
[$sel:gstin:INDTaxDocuments'] :: INDTaxDocuments -> Maybe Text

-- | Create a value of <a>INDTaxDocuments</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gstin:INDTaxDocuments'</a>, <a>iNDTaxDocuments_gstin</a> - The
--   Goods and Services Tax (GST) documents required in AWS Regions in
--   India.
newINDTaxDocuments :: INDTaxDocuments

-- | The Goods and Services Tax (GST) documents required in AWS Regions in
--   India.
iNDTaxDocuments_gstin :: Lens' INDTaxDocuments (Maybe Text)

-- | Each <tt>JobListEntry</tt> object contains a job's state, a job's ID,
--   and a value that indicates whether the job is a job part, in the case
--   of an export job.
--   
--   <i>See:</i> <a>newJobListEntry</a> smart constructor.
data JobListEntry
JobListEntry' :: Maybe JobType -> Maybe Text -> Maybe JobState -> Maybe SnowballType -> Maybe POSIX -> Maybe Text -> Maybe Bool -> JobListEntry

-- | The type of job.
[$sel:jobType:JobListEntry'] :: JobListEntry -> Maybe JobType

-- | The automatically generated ID for a job, for example
--   <tt>JID123e4567-e89b-12d3-a456-426655440000</tt>.
[$sel:jobId:JobListEntry'] :: JobListEntry -> Maybe Text

-- | The current state of this job.
[$sel:jobState:JobListEntry'] :: JobListEntry -> Maybe JobState

-- | The type of device used with this job.
[$sel:snowballType:JobListEntry'] :: JobListEntry -> Maybe SnowballType

-- | The creation date for this job.
[$sel:creationDate:JobListEntry'] :: JobListEntry -> Maybe POSIX

-- | The optional description of this specific job, for example
--   <tt>Important Photos 2016-08-11</tt>.
[$sel:description:JobListEntry'] :: JobListEntry -> Maybe Text

-- | A value that indicates that this job is a main job. A main job
--   represents a successful request to create an export job. Main jobs
--   aren't associated with any Snowballs. Instead, each main job will have
--   at least one job part, and each job part is associated with a
--   Snowball. It might take some time before the job parts associated with
--   a particular main job are listed, because they are created after the
--   main job is created.
[$sel:isMaster:JobListEntry'] :: JobListEntry -> Maybe Bool

-- | Create a value of <a>JobListEntry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobType:JobListEntry'</a>, <a>jobListEntry_jobType</a> - The
--   type of job.
--   
--   <a>$sel:jobId:JobListEntry'</a>, <a>jobListEntry_jobId</a> - The
--   automatically generated ID for a job, for example
--   <tt>JID123e4567-e89b-12d3-a456-426655440000</tt>.
--   
--   <a>$sel:jobState:JobListEntry'</a>, <a>jobListEntry_jobState</a> - The
--   current state of this job.
--   
--   <a>$sel:snowballType:JobListEntry'</a>,
--   <a>jobListEntry_snowballType</a> - The type of device used with this
--   job.
--   
--   <a>$sel:creationDate:JobListEntry'</a>,
--   <a>jobListEntry_creationDate</a> - The creation date for this job.
--   
--   <a>$sel:description:JobListEntry'</a>, <a>jobListEntry_description</a>
--   - The optional description of this specific job, for example
--   <tt>Important Photos 2016-08-11</tt>.
--   
--   <a>$sel:isMaster:JobListEntry'</a>, <a>jobListEntry_isMaster</a> - A
--   value that indicates that this job is a main job. A main job
--   represents a successful request to create an export job. Main jobs
--   aren't associated with any Snowballs. Instead, each main job will have
--   at least one job part, and each job part is associated with a
--   Snowball. It might take some time before the job parts associated with
--   a particular main job are listed, because they are created after the
--   main job is created.
newJobListEntry :: JobListEntry

-- | The type of job.
jobListEntry_jobType :: Lens' JobListEntry (Maybe JobType)

-- | The automatically generated ID for a job, for example
--   <tt>JID123e4567-e89b-12d3-a456-426655440000</tt>.
jobListEntry_jobId :: Lens' JobListEntry (Maybe Text)

-- | The current state of this job.
jobListEntry_jobState :: Lens' JobListEntry (Maybe JobState)

-- | The type of device used with this job.
jobListEntry_snowballType :: Lens' JobListEntry (Maybe SnowballType)

-- | The creation date for this job.
jobListEntry_creationDate :: Lens' JobListEntry (Maybe UTCTime)

-- | The optional description of this specific job, for example
--   <tt>Important Photos 2016-08-11</tt>.
jobListEntry_description :: Lens' JobListEntry (Maybe Text)

-- | A value that indicates that this job is a main job. A main job
--   represents a successful request to create an export job. Main jobs
--   aren't associated with any Snowballs. Instead, each main job will have
--   at least one job part, and each job part is associated with a
--   Snowball. It might take some time before the job parts associated with
--   a particular main job are listed, because they are created after the
--   main job is created.
jobListEntry_isMaster :: Lens' JobListEntry (Maybe Bool)

-- | Contains job logs. Whenever a Snow device is used to import data into
--   or export data out of Amazon S3, you'll have the option of downloading
--   a PDF job report. Job logs are returned as a part of the response
--   syntax of the <tt>DescribeJob</tt> action in the <tt>JobMetadata</tt>
--   data type. The job logs can be accessed for up to 60 minutes after
--   this request has been made. To access any of the job logs after 60
--   minutes have passed, you'll have to make another call to the
--   <tt>DescribeJob</tt> action.
--   
--   For import jobs, the PDF job report becomes available at the end of
--   the import process. For export jobs, your job report typically becomes
--   available while the Snow device for your job part is being delivered
--   to you.
--   
--   The job report provides you insight into the state of your Amazon S3
--   data transfer. The report includes details about your job or job part
--   for your records.
--   
--   For deeper visibility into the status of your transferred objects, you
--   can look at the two associated logs: a success log and a failure log.
--   The logs are saved in comma-separated value (CSV) format, and the name
--   of each log includes the ID of the job or job part that the log
--   describes.
--   
--   <i>See:</i> <a>newJobLogs</a> smart constructor.
data JobLogs
JobLogs' :: Maybe Text -> Maybe Text -> Maybe Text -> JobLogs

-- | A link to an Amazon S3 presigned URL where the job failure log is
--   located.
[$sel:jobFailureLogURI:JobLogs'] :: JobLogs -> Maybe Text

-- | A link to an Amazon S3 presigned URL where the job completion report
--   is located.
[$sel:jobCompletionReportURI:JobLogs'] :: JobLogs -> Maybe Text

-- | A link to an Amazon S3 presigned URL where the job success log is
--   located.
[$sel:jobSuccessLogURI:JobLogs'] :: JobLogs -> Maybe Text

-- | Create a value of <a>JobLogs</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobFailureLogURI:JobLogs'</a>, <a>jobLogs_jobFailureLogURI</a>
--   - A link to an Amazon S3 presigned URL where the job failure log is
--   located.
--   
--   <a>$sel:jobCompletionReportURI:JobLogs'</a>,
--   <a>jobLogs_jobCompletionReportURI</a> - A link to an Amazon S3
--   presigned URL where the job completion report is located.
--   
--   <a>$sel:jobSuccessLogURI:JobLogs'</a>, <a>jobLogs_jobSuccessLogURI</a>
--   - A link to an Amazon S3 presigned URL where the job success log is
--   located.
newJobLogs :: JobLogs

-- | A link to an Amazon S3 presigned URL where the job failure log is
--   located.
jobLogs_jobFailureLogURI :: Lens' JobLogs (Maybe Text)

-- | A link to an Amazon S3 presigned URL where the job completion report
--   is located.
jobLogs_jobCompletionReportURI :: Lens' JobLogs (Maybe Text)

-- | A link to an Amazon S3 presigned URL where the job success log is
--   located.
jobLogs_jobSuccessLogURI :: Lens' JobLogs (Maybe Text)

-- | Contains information about a specific job including shipping
--   information, job status, and other important metadata. This
--   information is returned as a part of the response syntax of the
--   <tt>DescribeJob</tt> action.
--   
--   <i>See:</i> <a>newJobMetadata</a> smart constructor.
data JobMetadata
JobMetadata' :: Maybe JobType -> Maybe Text -> Maybe RemoteManagement -> Maybe Text -> Maybe JobLogs -> Maybe Notification -> Maybe JobState -> Maybe Text -> Maybe ShippingDetails -> Maybe Text -> Maybe SnowballType -> Maybe DataTransfer -> Maybe Text -> Maybe JobResource -> Maybe OnDeviceServiceConfiguration -> Maybe Text -> Maybe POSIX -> Maybe DeviceConfiguration -> Maybe Text -> Maybe TaxDocuments -> Maybe Text -> Maybe SnowballCapacity -> JobMetadata

-- | The type of job.
[$sel:jobType:JobMetadata'] :: JobMetadata -> Maybe JobType

-- | The Amazon Resource Name (ARN) for the AWS Key Management Service (AWS
--   KMS) key associated with this job. This ARN was created using the
--   <a>CreateKey</a> API action in AWS KMS.
[$sel:kmsKeyARN:JobMetadata'] :: JobMetadata -> Maybe Text

-- | Allows you to securely operate and manage Snowcone devices remotely
--   from outside of your internal network. When set to
--   <tt>INSTALLED_AUTOSTART</tt>, remote management will automatically be
--   available when the device arrives at your location. Otherwise, you
--   need to use the Snowball Client to manage the device.
[$sel:remoteManagement:JobMetadata'] :: JobMetadata -> Maybe RemoteManagement

-- | The automatically generated ID for a job, for example
--   <tt>JID123e4567-e89b-12d3-a456-426655440000</tt>.
[$sel:jobId:JobMetadata'] :: JobMetadata -> Maybe Text

-- | Links to Amazon S3 presigned URLs for the job report and logs. For
--   import jobs, the PDF job report becomes available at the end of the
--   import process. For export jobs, your job report typically becomes
--   available while the Snow device for your job part is being delivered
--   to you.
[$sel:jobLogInfo:JobMetadata'] :: JobMetadata -> Maybe JobLogs

-- | The Amazon Simple Notification Service (Amazon SNS) notification
--   settings associated with a specific job. The <tt>Notification</tt>
--   object is returned as a part of the response syntax of the
--   <tt>DescribeJob</tt> action in the <tt>JobMetadata</tt> data type.
[$sel:notification:JobMetadata'] :: JobMetadata -> Maybe Notification

-- | The current status of the jobs.
[$sel:jobState:JobMetadata'] :: JobMetadata -> Maybe JobState

-- | The ID of the address that you want a job shipped to, after it will be
--   shipped to its primary address. This field is not supported in most
--   regions.
[$sel:forwardingAddressId:JobMetadata'] :: JobMetadata -> Maybe Text

-- | A job's shipping information, including inbound and outbound tracking
--   numbers and shipping speed options.
[$sel:shippingDetails:JobMetadata'] :: JobMetadata -> Maybe ShippingDetails

-- | The ID for the address that you want the Snow device shipped to.
[$sel:addressId:JobMetadata'] :: JobMetadata -> Maybe Text

-- | The type of device used with this job.
[$sel:snowballType:JobMetadata'] :: JobMetadata -> Maybe SnowballType

-- | A value that defines the real-time status of a Snow device's data
--   transfer while the device is at AWS. This data is only available while
--   a job has a <tt>JobState</tt> value of <tt>InProgress</tt>, for both
--   import and export jobs.
[$sel:dataTransferProgress:JobMetadata'] :: JobMetadata -> Maybe DataTransfer

-- | The ID of the long-term pricing type for the device.
[$sel:longTermPricingId:JobMetadata'] :: JobMetadata -> Maybe Text

-- | An array of <tt>S3Resource</tt> objects. Each <tt>S3Resource</tt>
--   object represents an Amazon S3 bucket that your transferred data will
--   be exported from or imported into.
[$sel:resources:JobMetadata'] :: JobMetadata -> Maybe JobResource

-- | Represents metadata and configuration settings for services on an AWS
--   Snow Family device.
[$sel:onDeviceServiceConfiguration:JobMetadata'] :: JobMetadata -> Maybe OnDeviceServiceConfiguration

-- | The 39-character ID for the cluster, for example
--   <tt>CID123e4567-e89b-12d3-a456-426655440000</tt>.
[$sel:clusterId:JobMetadata'] :: JobMetadata -> Maybe Text

-- | The creation date for this job.
[$sel:creationDate:JobMetadata'] :: JobMetadata -> Maybe POSIX
[$sel:deviceConfiguration:JobMetadata'] :: JobMetadata -> Maybe DeviceConfiguration

-- | The description of the job, provided at job creation.
[$sel:description:JobMetadata'] :: JobMetadata -> Maybe Text

-- | The metadata associated with the tax documents required in your AWS
--   Region.
[$sel:taxDocuments:JobMetadata'] :: JobMetadata -> Maybe TaxDocuments

-- | The role ARN associated with this job. This ARN was created using the
--   <a>CreateRole</a> API action in AWS Identity and Access Management
--   (IAM).
[$sel:roleARN:JobMetadata'] :: JobMetadata -> Maybe Text

-- | The Snow device capacity preference for this job, specified at job
--   creation. In US regions, you can choose between 50 TB and 80 TB
--   Snowballs. All other regions use 80 TB capacity Snowballs.
--   
--   For more information, see
--   "https://docs.aws.amazon.com/snowball/latest/snowcone-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>
--   or
--   "https://docs.aws.amazon.com/snowball/latest/developer-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>.
[$sel:snowballCapacityPreference:JobMetadata'] :: JobMetadata -> Maybe SnowballCapacity

-- | Create a value of <a>JobMetadata</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobType:JobMetadata'</a>, <a>jobMetadata_jobType</a> - The
--   type of job.
--   
--   <a>$sel:kmsKeyARN:JobMetadata'</a>, <a>jobMetadata_kmsKeyARN</a> - The
--   Amazon Resource Name (ARN) for the AWS Key Management Service (AWS
--   KMS) key associated with this job. This ARN was created using the
--   <a>CreateKey</a> API action in AWS KMS.
--   
--   <a>$sel:remoteManagement:JobMetadata'</a>,
--   <a>jobMetadata_remoteManagement</a> - Allows you to securely operate
--   and manage Snowcone devices remotely from outside of your internal
--   network. When set to <tt>INSTALLED_AUTOSTART</tt>, remote management
--   will automatically be available when the device arrives at your
--   location. Otherwise, you need to use the Snowball Client to manage the
--   device.
--   
--   <a>$sel:jobId:JobMetadata'</a>, <a>jobMetadata_jobId</a> - The
--   automatically generated ID for a job, for example
--   <tt>JID123e4567-e89b-12d3-a456-426655440000</tt>.
--   
--   <a>$sel:jobLogInfo:JobMetadata'</a>, <a>jobMetadata_jobLogInfo</a> -
--   Links to Amazon S3 presigned URLs for the job report and logs. For
--   import jobs, the PDF job report becomes available at the end of the
--   import process. For export jobs, your job report typically becomes
--   available while the Snow device for your job part is being delivered
--   to you.
--   
--   <a>$sel:notification:JobMetadata'</a>, <a>jobMetadata_notification</a>
--   - The Amazon Simple Notification Service (Amazon SNS) notification
--   settings associated with a specific job. The <tt>Notification</tt>
--   object is returned as a part of the response syntax of the
--   <tt>DescribeJob</tt> action in the <tt>JobMetadata</tt> data type.
--   
--   <a>$sel:jobState:JobMetadata'</a>, <a>jobMetadata_jobState</a> - The
--   current status of the jobs.
--   
--   <a>$sel:forwardingAddressId:JobMetadata'</a>,
--   <a>jobMetadata_forwardingAddressId</a> - The ID of the address that
--   you want a job shipped to, after it will be shipped to its primary
--   address. This field is not supported in most regions.
--   
--   <a>$sel:shippingDetails:JobMetadata'</a>,
--   <a>jobMetadata_shippingDetails</a> - A job's shipping information,
--   including inbound and outbound tracking numbers and shipping speed
--   options.
--   
--   <a>$sel:addressId:JobMetadata'</a>, <a>jobMetadata_addressId</a> - The
--   ID for the address that you want the Snow device shipped to.
--   
--   <a>$sel:snowballType:JobMetadata'</a>, <a>jobMetadata_snowballType</a>
--   - The type of device used with this job.
--   
--   <a>$sel:dataTransferProgress:JobMetadata'</a>,
--   <a>jobMetadata_dataTransferProgress</a> - A value that defines the
--   real-time status of a Snow device's data transfer while the device is
--   at AWS. This data is only available while a job has a
--   <tt>JobState</tt> value of <tt>InProgress</tt>, for both import and
--   export jobs.
--   
--   <a>$sel:longTermPricingId:JobMetadata'</a>,
--   <a>jobMetadata_longTermPricingId</a> - The ID of the long-term pricing
--   type for the device.
--   
--   <a>$sel:resources:JobMetadata'</a>, <a>jobMetadata_resources</a> - An
--   array of <tt>S3Resource</tt> objects. Each <tt>S3Resource</tt> object
--   represents an Amazon S3 bucket that your transferred data will be
--   exported from or imported into.
--   
--   <a>$sel:onDeviceServiceConfiguration:JobMetadata'</a>,
--   <a>jobMetadata_onDeviceServiceConfiguration</a> - Represents metadata
--   and configuration settings for services on an AWS Snow Family device.
--   
--   <a>$sel:clusterId:JobMetadata'</a>, <a>jobMetadata_clusterId</a> - The
--   39-character ID for the cluster, for example
--   <tt>CID123e4567-e89b-12d3-a456-426655440000</tt>.
--   
--   <a>$sel:creationDate:JobMetadata'</a>, <a>jobMetadata_creationDate</a>
--   - The creation date for this job.
--   
--   <a>$sel:deviceConfiguration:JobMetadata'</a>,
--   <a>jobMetadata_deviceConfiguration</a> - Undocumented member.
--   
--   <a>$sel:description:JobMetadata'</a>, <a>jobMetadata_description</a> -
--   The description of the job, provided at job creation.
--   
--   <a>$sel:taxDocuments:JobMetadata'</a>, <a>jobMetadata_taxDocuments</a>
--   - The metadata associated with the tax documents required in your AWS
--   Region.
--   
--   <a>$sel:roleARN:JobMetadata'</a>, <a>jobMetadata_roleARN</a> - The
--   role ARN associated with this job. This ARN was created using the
--   <a>CreateRole</a> API action in AWS Identity and Access Management
--   (IAM).
--   
--   <a>$sel:snowballCapacityPreference:JobMetadata'</a>,
--   <a>jobMetadata_snowballCapacityPreference</a> - The Snow device
--   capacity preference for this job, specified at job creation. In US
--   regions, you can choose between 50 TB and 80 TB Snowballs. All other
--   regions use 80 TB capacity Snowballs.
--   
--   For more information, see
--   "https://docs.aws.amazon.com/snowball/latest/snowcone-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>
--   or
--   "https://docs.aws.amazon.com/snowball/latest/developer-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>.
newJobMetadata :: JobMetadata

-- | The type of job.
jobMetadata_jobType :: Lens' JobMetadata (Maybe JobType)

-- | The Amazon Resource Name (ARN) for the AWS Key Management Service (AWS
--   KMS) key associated with this job. This ARN was created using the
--   <a>CreateKey</a> API action in AWS KMS.
jobMetadata_kmsKeyARN :: Lens' JobMetadata (Maybe Text)

-- | Allows you to securely operate and manage Snowcone devices remotely
--   from outside of your internal network. When set to
--   <tt>INSTALLED_AUTOSTART</tt>, remote management will automatically be
--   available when the device arrives at your location. Otherwise, you
--   need to use the Snowball Client to manage the device.
jobMetadata_remoteManagement :: Lens' JobMetadata (Maybe RemoteManagement)

-- | The automatically generated ID for a job, for example
--   <tt>JID123e4567-e89b-12d3-a456-426655440000</tt>.
jobMetadata_jobId :: Lens' JobMetadata (Maybe Text)

-- | Links to Amazon S3 presigned URLs for the job report and logs. For
--   import jobs, the PDF job report becomes available at the end of the
--   import process. For export jobs, your job report typically becomes
--   available while the Snow device for your job part is being delivered
--   to you.
jobMetadata_jobLogInfo :: Lens' JobMetadata (Maybe JobLogs)

-- | The Amazon Simple Notification Service (Amazon SNS) notification
--   settings associated with a specific job. The <tt>Notification</tt>
--   object is returned as a part of the response syntax of the
--   <tt>DescribeJob</tt> action in the <tt>JobMetadata</tt> data type.
jobMetadata_notification :: Lens' JobMetadata (Maybe Notification)

-- | The current status of the jobs.
jobMetadata_jobState :: Lens' JobMetadata (Maybe JobState)

-- | The ID of the address that you want a job shipped to, after it will be
--   shipped to its primary address. This field is not supported in most
--   regions.
jobMetadata_forwardingAddressId :: Lens' JobMetadata (Maybe Text)

-- | A job's shipping information, including inbound and outbound tracking
--   numbers and shipping speed options.
jobMetadata_shippingDetails :: Lens' JobMetadata (Maybe ShippingDetails)

-- | The ID for the address that you want the Snow device shipped to.
jobMetadata_addressId :: Lens' JobMetadata (Maybe Text)

-- | The type of device used with this job.
jobMetadata_snowballType :: Lens' JobMetadata (Maybe SnowballType)

-- | A value that defines the real-time status of a Snow device's data
--   transfer while the device is at AWS. This data is only available while
--   a job has a <tt>JobState</tt> value of <tt>InProgress</tt>, for both
--   import and export jobs.
jobMetadata_dataTransferProgress :: Lens' JobMetadata (Maybe DataTransfer)

-- | The ID of the long-term pricing type for the device.
jobMetadata_longTermPricingId :: Lens' JobMetadata (Maybe Text)

-- | An array of <tt>S3Resource</tt> objects. Each <tt>S3Resource</tt>
--   object represents an Amazon S3 bucket that your transferred data will
--   be exported from or imported into.
jobMetadata_resources :: Lens' JobMetadata (Maybe JobResource)

-- | Represents metadata and configuration settings for services on an AWS
--   Snow Family device.
jobMetadata_onDeviceServiceConfiguration :: Lens' JobMetadata (Maybe OnDeviceServiceConfiguration)

-- | The 39-character ID for the cluster, for example
--   <tt>CID123e4567-e89b-12d3-a456-426655440000</tt>.
jobMetadata_clusterId :: Lens' JobMetadata (Maybe Text)

-- | The creation date for this job.
jobMetadata_creationDate :: Lens' JobMetadata (Maybe UTCTime)

-- | Undocumented member.
jobMetadata_deviceConfiguration :: Lens' JobMetadata (Maybe DeviceConfiguration)

-- | The description of the job, provided at job creation.
jobMetadata_description :: Lens' JobMetadata (Maybe Text)

-- | The metadata associated with the tax documents required in your AWS
--   Region.
jobMetadata_taxDocuments :: Lens' JobMetadata (Maybe TaxDocuments)

-- | The role ARN associated with this job. This ARN was created using the
--   <a>CreateRole</a> API action in AWS Identity and Access Management
--   (IAM).
jobMetadata_roleARN :: Lens' JobMetadata (Maybe Text)

-- | The Snow device capacity preference for this job, specified at job
--   creation. In US regions, you can choose between 50 TB and 80 TB
--   Snowballs. All other regions use 80 TB capacity Snowballs.
--   
--   For more information, see
--   "https://docs.aws.amazon.com/snowball/latest/snowcone-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>
--   or
--   "https://docs.aws.amazon.com/snowball/latest/developer-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>.
jobMetadata_snowballCapacityPreference :: Lens' JobMetadata (Maybe SnowballCapacity)

-- | Contains an array of AWS resource objects. Each object represents an
--   Amazon S3 bucket, an AWS Lambda function, or an Amazon Machine Image
--   (AMI) based on Amazon EC2 that is associated with a particular job.
--   
--   <i>See:</i> <a>newJobResource</a> smart constructor.
data JobResource
JobResource' :: Maybe [Ec2AmiResource] -> Maybe [LambdaResource] -> Maybe [S3Resource] -> JobResource

-- | The Amazon Machine Images (AMIs) associated with this job.
[$sel:ec2AmiResources:JobResource'] :: JobResource -> Maybe [Ec2AmiResource]

-- | The Python-language Lambda functions for this job.
[$sel:lambdaResources:JobResource'] :: JobResource -> Maybe [LambdaResource]

-- | An array of <tt>S3Resource</tt> objects.
[$sel:s3Resources:JobResource'] :: JobResource -> Maybe [S3Resource]

-- | Create a value of <a>JobResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ec2AmiResources:JobResource'</a>,
--   <a>jobResource_ec2AmiResources</a> - The Amazon Machine Images (AMIs)
--   associated with this job.
--   
--   <a>$sel:lambdaResources:JobResource'</a>,
--   <a>jobResource_lambdaResources</a> - The Python-language Lambda
--   functions for this job.
--   
--   <a>$sel:s3Resources:JobResource'</a>, <a>jobResource_s3Resources</a> -
--   An array of <tt>S3Resource</tt> objects.
newJobResource :: JobResource

-- | The Amazon Machine Images (AMIs) associated with this job.
jobResource_ec2AmiResources :: Lens' JobResource (Maybe [Ec2AmiResource])

-- | The Python-language Lambda functions for this job.
jobResource_lambdaResources :: Lens' JobResource (Maybe [LambdaResource])

-- | An array of <tt>S3Resource</tt> objects.
jobResource_s3Resources :: Lens' JobResource (Maybe [S3Resource])

-- | Contains a key range. For export jobs, a <tt>S3Resource</tt> object
--   can have an optional <tt>KeyRange</tt> value. The length of the range
--   is defined at job creation, and has either an inclusive
--   <tt>BeginMarker</tt>, an inclusive <tt>EndMarker</tt>, or both. Ranges
--   are UTF-8 binary sorted.
--   
--   <i>See:</i> <a>newKeyRange</a> smart constructor.
data KeyRange
KeyRange' :: Maybe Text -> Maybe Text -> KeyRange

-- | The key that ends an optional key range for an export job. Ranges are
--   inclusive and UTF-8 binary sorted.
[$sel:endMarker:KeyRange'] :: KeyRange -> Maybe Text

-- | The key that starts an optional key range for an export job. Ranges
--   are inclusive and UTF-8 binary sorted.
[$sel:beginMarker:KeyRange'] :: KeyRange -> Maybe Text

-- | Create a value of <a>KeyRange</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:endMarker:KeyRange'</a>, <a>keyRange_endMarker</a> - The key
--   that ends an optional key range for an export job. Ranges are
--   inclusive and UTF-8 binary sorted.
--   
--   <a>$sel:beginMarker:KeyRange'</a>, <a>keyRange_beginMarker</a> - The
--   key that starts an optional key range for an export job. Ranges are
--   inclusive and UTF-8 binary sorted.
newKeyRange :: KeyRange

-- | The key that ends an optional key range for an export job. Ranges are
--   inclusive and UTF-8 binary sorted.
keyRange_endMarker :: Lens' KeyRange (Maybe Text)

-- | The key that starts an optional key range for an export job. Ranges
--   are inclusive and UTF-8 binary sorted.
keyRange_beginMarker :: Lens' KeyRange (Maybe Text)

-- | Identifies
--   
--   <i>See:</i> <a>newLambdaResource</a> smart constructor.
data LambdaResource
LambdaResource' :: Maybe [EventTriggerDefinition] -> Maybe Text -> LambdaResource

-- | The array of ARNs for S3Resource objects to trigger the LambdaResource
--   objects associated with this job.
[$sel:eventTriggers:LambdaResource'] :: LambdaResource -> Maybe [EventTriggerDefinition]

-- | An Amazon Resource Name (ARN) that represents an AWS Lambda function
--   to be triggered by PUT object actions on the associated local Amazon
--   S3 resource.
[$sel:lambdaArn:LambdaResource'] :: LambdaResource -> Maybe Text

-- | Create a value of <a>LambdaResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventTriggers:LambdaResource'</a>,
--   <a>lambdaResource_eventTriggers</a> - The array of ARNs for S3Resource
--   objects to trigger the LambdaResource objects associated with this
--   job.
--   
--   <a>$sel:lambdaArn:LambdaResource'</a>, <a>lambdaResource_lambdaArn</a>
--   - An Amazon Resource Name (ARN) that represents an AWS Lambda function
--   to be triggered by PUT object actions on the associated local Amazon
--   S3 resource.
newLambdaResource :: LambdaResource

-- | The array of ARNs for S3Resource objects to trigger the LambdaResource
--   objects associated with this job.
lambdaResource_eventTriggers :: Lens' LambdaResource (Maybe [EventTriggerDefinition])

-- | An Amazon Resource Name (ARN) that represents an AWS Lambda function
--   to be triggered by PUT object actions on the associated local Amazon
--   S3 resource.
lambdaResource_lambdaArn :: Lens' LambdaResource (Maybe Text)

-- | Each <tt>LongTermPricingListEntry</tt> object contains information
--   about a long-term pricing type.
--   
--   <i>See:</i> <a>newLongTermPricingListEntry</a> smart constructor.
data LongTermPricingListEntry
LongTermPricingListEntry' :: Maybe LongTermPricingType -> Maybe POSIX -> Maybe SnowballType -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe [Text] -> Maybe Text -> LongTermPricingListEntry

-- | The type of long-term pricing that was selected for the device.
[$sel:longTermPricingType:LongTermPricingListEntry'] :: LongTermPricingListEntry -> Maybe LongTermPricingType

-- | The start date of the long-term pricing contract.
[$sel:longTermPricingStartDate:LongTermPricingListEntry'] :: LongTermPricingListEntry -> Maybe POSIX

-- | The type of AWS Snow Family device associated with this long-term
--   pricing job.
[$sel:snowballType:LongTermPricingListEntry'] :: LongTermPricingListEntry -> Maybe SnowballType

-- | The ID of the long-term pricing type for the device.
[$sel:longTermPricingId:LongTermPricingListEntry'] :: LongTermPricingListEntry -> Maybe Text

-- | The end date the long-term pricing contract.
[$sel:longTermPricingEndDate:LongTermPricingListEntry'] :: LongTermPricingListEntry -> Maybe POSIX

-- | The current active jobs on the device the long-term pricing type.
[$sel:currentActiveJob:LongTermPricingListEntry'] :: LongTermPricingListEntry -> Maybe Text

-- | If set to <tt>true</tt>, specifies that the current long-term pricing
--   type for the device should be automatically renewed before the
--   long-term pricing contract expires.
[$sel:isLongTermPricingAutoRenew:LongTermPricingListEntry'] :: LongTermPricingListEntry -> Maybe Bool

-- | The status of the long-term pricing type.
[$sel:longTermPricingStatus:LongTermPricingListEntry'] :: LongTermPricingListEntry -> Maybe Text

-- | The IDs of the jobs that are associated with a long-term pricing type.
[$sel:jobIds:LongTermPricingListEntry'] :: LongTermPricingListEntry -> Maybe [Text]

-- | A new device that replaces a device that is ordered with long-term
--   pricing.
[$sel:replacementJob:LongTermPricingListEntry'] :: LongTermPricingListEntry -> Maybe Text

-- | Create a value of <a>LongTermPricingListEntry</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:longTermPricingType:LongTermPricingListEntry'</a>,
--   <a>longTermPricingListEntry_longTermPricingType</a> - The type of
--   long-term pricing that was selected for the device.
--   
--   <a>$sel:longTermPricingStartDate:LongTermPricingListEntry'</a>,
--   <a>longTermPricingListEntry_longTermPricingStartDate</a> - The start
--   date of the long-term pricing contract.
--   
--   <a>$sel:snowballType:LongTermPricingListEntry'</a>,
--   <a>longTermPricingListEntry_snowballType</a> - The type of AWS Snow
--   Family device associated with this long-term pricing job.
--   
--   <a>$sel:longTermPricingId:LongTermPricingListEntry'</a>,
--   <a>longTermPricingListEntry_longTermPricingId</a> - The ID of the
--   long-term pricing type for the device.
--   
--   <a>$sel:longTermPricingEndDate:LongTermPricingListEntry'</a>,
--   <a>longTermPricingListEntry_longTermPricingEndDate</a> - The end date
--   the long-term pricing contract.
--   
--   <a>$sel:currentActiveJob:LongTermPricingListEntry'</a>,
--   <a>longTermPricingListEntry_currentActiveJob</a> - The current active
--   jobs on the device the long-term pricing type.
--   
--   <a>$sel:isLongTermPricingAutoRenew:LongTermPricingListEntry'</a>,
--   <a>longTermPricingListEntry_isLongTermPricingAutoRenew</a> - If set to
--   <tt>true</tt>, specifies that the current long-term pricing type for
--   the device should be automatically renewed before the long-term
--   pricing contract expires.
--   
--   <a>$sel:longTermPricingStatus:LongTermPricingListEntry'</a>,
--   <a>longTermPricingListEntry_longTermPricingStatus</a> - The status of
--   the long-term pricing type.
--   
--   <a>$sel:jobIds:LongTermPricingListEntry'</a>,
--   <a>longTermPricingListEntry_jobIds</a> - The IDs of the jobs that are
--   associated with a long-term pricing type.
--   
--   <a>$sel:replacementJob:LongTermPricingListEntry'</a>,
--   <a>longTermPricingListEntry_replacementJob</a> - A new device that
--   replaces a device that is ordered with long-term pricing.
newLongTermPricingListEntry :: LongTermPricingListEntry

-- | The type of long-term pricing that was selected for the device.
longTermPricingListEntry_longTermPricingType :: Lens' LongTermPricingListEntry (Maybe LongTermPricingType)

-- | The start date of the long-term pricing contract.
longTermPricingListEntry_longTermPricingStartDate :: Lens' LongTermPricingListEntry (Maybe UTCTime)

-- | The type of AWS Snow Family device associated with this long-term
--   pricing job.
longTermPricingListEntry_snowballType :: Lens' LongTermPricingListEntry (Maybe SnowballType)

-- | The ID of the long-term pricing type for the device.
longTermPricingListEntry_longTermPricingId :: Lens' LongTermPricingListEntry (Maybe Text)

-- | The end date the long-term pricing contract.
longTermPricingListEntry_longTermPricingEndDate :: Lens' LongTermPricingListEntry (Maybe UTCTime)

-- | The current active jobs on the device the long-term pricing type.
longTermPricingListEntry_currentActiveJob :: Lens' LongTermPricingListEntry (Maybe Text)

-- | If set to <tt>true</tt>, specifies that the current long-term pricing
--   type for the device should be automatically renewed before the
--   long-term pricing contract expires.
longTermPricingListEntry_isLongTermPricingAutoRenew :: Lens' LongTermPricingListEntry (Maybe Bool)

-- | The status of the long-term pricing type.
longTermPricingListEntry_longTermPricingStatus :: Lens' LongTermPricingListEntry (Maybe Text)

-- | The IDs of the jobs that are associated with a long-term pricing type.
longTermPricingListEntry_jobIds :: Lens' LongTermPricingListEntry (Maybe [Text])

-- | A new device that replaces a device that is ordered with long-term
--   pricing.
longTermPricingListEntry_replacementJob :: Lens' LongTermPricingListEntry (Maybe Text)

-- | An object that represents metadata and configuration settings for NFS
--   service on an AWS Snow Family device.
--   
--   <i>See:</i> <a>newNFSOnDeviceServiceConfiguration</a> smart
--   constructor.
data NFSOnDeviceServiceConfiguration
NFSOnDeviceServiceConfiguration' :: Maybe Natural -> Maybe StorageUnit -> NFSOnDeviceServiceConfiguration

-- | The maximum NFS storage for one Snowball Family device.
[$sel:storageLimit:NFSOnDeviceServiceConfiguration'] :: NFSOnDeviceServiceConfiguration -> Maybe Natural

-- | The scale unit of the NFS storage on the device.
--   
--   Valid values: TB.
[$sel:storageUnit:NFSOnDeviceServiceConfiguration'] :: NFSOnDeviceServiceConfiguration -> Maybe StorageUnit

-- | Create a value of <a>NFSOnDeviceServiceConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:storageLimit:NFSOnDeviceServiceConfiguration'</a>,
--   <a>nFSOnDeviceServiceConfiguration_storageLimit</a> - The maximum NFS
--   storage for one Snowball Family device.
--   
--   <a>$sel:storageUnit:NFSOnDeviceServiceConfiguration'</a>,
--   <a>nFSOnDeviceServiceConfiguration_storageUnit</a> - The scale unit of
--   the NFS storage on the device.
--   
--   Valid values: TB.
newNFSOnDeviceServiceConfiguration :: NFSOnDeviceServiceConfiguration

-- | The maximum NFS storage for one Snowball Family device.
nFSOnDeviceServiceConfiguration_storageLimit :: Lens' NFSOnDeviceServiceConfiguration (Maybe Natural)

-- | The scale unit of the NFS storage on the device.
--   
--   Valid values: TB.
nFSOnDeviceServiceConfiguration_storageUnit :: Lens' NFSOnDeviceServiceConfiguration (Maybe StorageUnit)

-- | The Amazon Simple Notification Service (Amazon SNS) notification
--   settings associated with a specific job. The <tt>Notification</tt>
--   object is returned as a part of the response syntax of the
--   <tt>DescribeJob</tt> action in the <tt>JobMetadata</tt> data type.
--   
--   When the notification settings are defined during job creation, you
--   can choose to notify based on a specific set of job states using the
--   <tt>JobStatesToNotify</tt> array of strings, or you can specify that
--   you want to have Amazon SNS notifications sent out for all job states
--   with <tt>NotifyAll</tt> set to true.
--   
--   <i>See:</i> <a>newNotification</a> smart constructor.
data Notification
Notification' :: Maybe Bool -> Maybe Text -> Maybe [JobState] -> Notification

-- | Any change in job state will trigger a notification for this job.
[$sel:notifyAll:Notification'] :: Notification -> Maybe Bool

-- | The new SNS <tt>TopicArn</tt> that you want to associate with this
--   job. You can create Amazon Resource Names (ARNs) for topics by using
--   the <a>CreateTopic</a> Amazon SNS API action.
--   
--   You can subscribe email addresses to an Amazon SNS topic through the
--   AWS Management Console, or by using the <a>Subscribe</a> Amazon Simple
--   Notification Service (Amazon SNS) API action.
[$sel:snsTopicARN:Notification'] :: Notification -> Maybe Text

-- | The list of job states that will trigger a notification for this job.
[$sel:jobStatesToNotify:Notification'] :: Notification -> Maybe [JobState]

-- | Create a value of <a>Notification</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:notifyAll:Notification'</a>, <a>notification_notifyAll</a> -
--   Any change in job state will trigger a notification for this job.
--   
--   <a>$sel:snsTopicARN:Notification'</a>, <a>notification_snsTopicARN</a>
--   - The new SNS <tt>TopicArn</tt> that you want to associate with this
--   job. You can create Amazon Resource Names (ARNs) for topics by using
--   the <a>CreateTopic</a> Amazon SNS API action.
--   
--   You can subscribe email addresses to an Amazon SNS topic through the
--   AWS Management Console, or by using the <a>Subscribe</a> Amazon Simple
--   Notification Service (Amazon SNS) API action.
--   
--   <a>$sel:jobStatesToNotify:Notification'</a>,
--   <a>notification_jobStatesToNotify</a> - The list of job states that
--   will trigger a notification for this job.
newNotification :: Notification

-- | Any change in job state will trigger a notification for this job.
notification_notifyAll :: Lens' Notification (Maybe Bool)

-- | The new SNS <tt>TopicArn</tt> that you want to associate with this
--   job. You can create Amazon Resource Names (ARNs) for topics by using
--   the <a>CreateTopic</a> Amazon SNS API action.
--   
--   You can subscribe email addresses to an Amazon SNS topic through the
--   AWS Management Console, or by using the <a>Subscribe</a> Amazon Simple
--   Notification Service (Amazon SNS) API action.
notification_snsTopicARN :: Lens' Notification (Maybe Text)

-- | The list of job states that will trigger a notification for this job.
notification_jobStatesToNotify :: Lens' Notification (Maybe [JobState])

-- | An object that represents metadata and configuration settings for
--   services on an AWS Snow Family device.
--   
--   <i>See:</i> <a>newOnDeviceServiceConfiguration</a> smart constructor.
data OnDeviceServiceConfiguration
OnDeviceServiceConfiguration' :: Maybe NFSOnDeviceServiceConfiguration -> OnDeviceServiceConfiguration

-- | Represents the NFS service on a Snow Family device.
[$sel:nFSOnDeviceService:OnDeviceServiceConfiguration'] :: OnDeviceServiceConfiguration -> Maybe NFSOnDeviceServiceConfiguration

-- | Create a value of <a>OnDeviceServiceConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nFSOnDeviceService:OnDeviceServiceConfiguration'</a>,
--   <a>onDeviceServiceConfiguration_nFSOnDeviceService</a> - Represents
--   the NFS service on a Snow Family device.
newOnDeviceServiceConfiguration :: OnDeviceServiceConfiguration

-- | Represents the NFS service on a Snow Family device.
onDeviceServiceConfiguration_nFSOnDeviceService :: Lens' OnDeviceServiceConfiguration (Maybe NFSOnDeviceServiceConfiguration)

-- | Each <tt>S3Resource</tt> object represents an Amazon S3 bucket that
--   your transferred data will be exported from or imported into. For
--   export jobs, this object can have an optional <tt>KeyRange</tt> value.
--   The length of the range is defined at job creation, and has either an
--   inclusive <tt>BeginMarker</tt>, an inclusive <tt>EndMarker</tt>, or
--   both. Ranges are UTF-8 binary sorted.
--   
--   <i>See:</i> <a>newS3Resource</a> smart constructor.
data S3Resource
S3Resource' :: Maybe KeyRange -> Maybe Text -> Maybe [TargetOnDeviceService] -> S3Resource

-- | For export jobs, you can provide an optional <tt>KeyRange</tt> within
--   a specific Amazon S3 bucket. The length of the range is defined at job
--   creation, and has either an inclusive <tt>BeginMarker</tt>, an
--   inclusive <tt>EndMarker</tt>, or both. Ranges are UTF-8 binary sorted.
[$sel:keyRange:S3Resource'] :: S3Resource -> Maybe KeyRange

-- | The Amazon Resource Name (ARN) of an Amazon S3 bucket.
[$sel:bucketArn:S3Resource'] :: S3Resource -> Maybe Text

-- | Specifies the service or services on the Snow Family device that your
--   transferred data will be exported from or imported into. AWS Snow
--   Family supports Amazon S3 and NFS (Network File System).
[$sel:targetOnDeviceServices:S3Resource'] :: S3Resource -> Maybe [TargetOnDeviceService]

-- | Create a value of <a>S3Resource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyRange:S3Resource'</a>, <a>s3Resource_keyRange</a> - For
--   export jobs, you can provide an optional <tt>KeyRange</tt> within a
--   specific Amazon S3 bucket. The length of the range is defined at job
--   creation, and has either an inclusive <tt>BeginMarker</tt>, an
--   inclusive <tt>EndMarker</tt>, or both. Ranges are UTF-8 binary sorted.
--   
--   <a>$sel:bucketArn:S3Resource'</a>, <a>s3Resource_bucketArn</a> - The
--   Amazon Resource Name (ARN) of an Amazon S3 bucket.
--   
--   <a>$sel:targetOnDeviceServices:S3Resource'</a>,
--   <a>s3Resource_targetOnDeviceServices</a> - Specifies the service or
--   services on the Snow Family device that your transferred data will be
--   exported from or imported into. AWS Snow Family supports Amazon S3 and
--   NFS (Network File System).
newS3Resource :: S3Resource

-- | For export jobs, you can provide an optional <tt>KeyRange</tt> within
--   a specific Amazon S3 bucket. The length of the range is defined at job
--   creation, and has either an inclusive <tt>BeginMarker</tt>, an
--   inclusive <tt>EndMarker</tt>, or both. Ranges are UTF-8 binary sorted.
s3Resource_keyRange :: Lens' S3Resource (Maybe KeyRange)

-- | The Amazon Resource Name (ARN) of an Amazon S3 bucket.
s3Resource_bucketArn :: Lens' S3Resource (Maybe Text)

-- | Specifies the service or services on the Snow Family device that your
--   transferred data will be exported from or imported into. AWS Snow
--   Family supports Amazon S3 and NFS (Network File System).
s3Resource_targetOnDeviceServices :: Lens' S3Resource (Maybe [TargetOnDeviceService])

-- | The <tt>Status</tt> and <tt>TrackingNumber</tt> information for an
--   inbound or outbound shipment.
--   
--   <i>See:</i> <a>newShipment</a> smart constructor.
data Shipment
Shipment' :: Maybe Text -> Maybe Text -> Shipment

-- | Status information for a shipment.
[$sel:status:Shipment'] :: Shipment -> Maybe Text

-- | The tracking number for this job. Using this tracking number with your
--   region's carrier's website, you can track a Snow device as the carrier
--   transports it.
--   
--   For India, the carrier is Amazon Logistics. For all other regions, UPS
--   is the carrier.
[$sel:trackingNumber:Shipment'] :: Shipment -> Maybe Text

-- | Create a value of <a>Shipment</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:Shipment'</a>, <a>shipment_status</a> - Status
--   information for a shipment.
--   
--   <a>$sel:trackingNumber:Shipment'</a>, <a>shipment_trackingNumber</a> -
--   The tracking number for this job. Using this tracking number with your
--   region's carrier's website, you can track a Snow device as the carrier
--   transports it.
--   
--   For India, the carrier is Amazon Logistics. For all other regions, UPS
--   is the carrier.
newShipment :: Shipment

-- | Status information for a shipment.
shipment_status :: Lens' Shipment (Maybe Text)

-- | The tracking number for this job. Using this tracking number with your
--   region's carrier's website, you can track a Snow device as the carrier
--   transports it.
--   
--   For India, the carrier is Amazon Logistics. For all other regions, UPS
--   is the carrier.
shipment_trackingNumber :: Lens' Shipment (Maybe Text)

-- | A job's shipping information, including inbound and outbound tracking
--   numbers and shipping speed options.
--   
--   <i>See:</i> <a>newShippingDetails</a> smart constructor.
data ShippingDetails
ShippingDetails' :: Maybe ShippingOption -> Maybe Shipment -> Maybe Shipment -> ShippingDetails

-- | The shipping speed for a particular job. This speed doesn't dictate
--   how soon you'll get the Snow device from the job's creation date. This
--   speed represents how quickly it moves to its destination while in
--   transit. Regional shipping speeds are as follows:
--   
--   <ul>
--   <li>In Australia, you have access to express shipping. Typically, Snow
--   devices shipped express are delivered in about a day.</li>
--   <li>In the European Union (EU), you have access to express shipping.
--   Typically, Snow devices shipped express are delivered in about a day.
--   In addition, most countries in the EU have access to standard
--   shipping, which typically takes less than a week, one way.</li>
--   <li>In India, Snow devices are delivered in one to seven days.</li>
--   <li>In the United States of America (US), you have access to one-day
--   shipping and two-day shipping.</li>
--   </ul>
[$sel:shippingOption:ShippingDetails'] :: ShippingDetails -> Maybe ShippingOption

-- | The <tt>Status</tt> and <tt>TrackingNumber</tt> values for a Snow
--   device being delivered to the address that you specified for a
--   particular job.
[$sel:outboundShipment:ShippingDetails'] :: ShippingDetails -> Maybe Shipment

-- | The <tt>Status</tt> and <tt>TrackingNumber</tt> values for a Snow
--   device being returned to AWS for a particular job.
[$sel:inboundShipment:ShippingDetails'] :: ShippingDetails -> Maybe Shipment

-- | Create a value of <a>ShippingDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:shippingOption:ShippingDetails'</a>,
--   <a>shippingDetails_shippingOption</a> - The shipping speed for a
--   particular job. This speed doesn't dictate how soon you'll get the
--   Snow device from the job's creation date. This speed represents how
--   quickly it moves to its destination while in transit. Regional
--   shipping speeds are as follows:
--   
--   <ul>
--   <li>In Australia, you have access to express shipping. Typically, Snow
--   devices shipped express are delivered in about a day.</li>
--   <li>In the European Union (EU), you have access to express shipping.
--   Typically, Snow devices shipped express are delivered in about a day.
--   In addition, most countries in the EU have access to standard
--   shipping, which typically takes less than a week, one way.</li>
--   <li>In India, Snow devices are delivered in one to seven days.</li>
--   <li>In the United States of America (US), you have access to one-day
--   shipping and two-day shipping.</li>
--   </ul>
--   
--   <a>$sel:outboundShipment:ShippingDetails'</a>,
--   <a>shippingDetails_outboundShipment</a> - The <tt>Status</tt> and
--   <tt>TrackingNumber</tt> values for a Snow device being delivered to
--   the address that you specified for a particular job.
--   
--   <a>$sel:inboundShipment:ShippingDetails'</a>,
--   <a>shippingDetails_inboundShipment</a> - The <tt>Status</tt> and
--   <tt>TrackingNumber</tt> values for a Snow device being returned to AWS
--   for a particular job.
newShippingDetails :: ShippingDetails

-- | The shipping speed for a particular job. This speed doesn't dictate
--   how soon you'll get the Snow device from the job's creation date. This
--   speed represents how quickly it moves to its destination while in
--   transit. Regional shipping speeds are as follows:
--   
--   <ul>
--   <li>In Australia, you have access to express shipping. Typically, Snow
--   devices shipped express are delivered in about a day.</li>
--   <li>In the European Union (EU), you have access to express shipping.
--   Typically, Snow devices shipped express are delivered in about a day.
--   In addition, most countries in the EU have access to standard
--   shipping, which typically takes less than a week, one way.</li>
--   <li>In India, Snow devices are delivered in one to seven days.</li>
--   <li>In the United States of America (US), you have access to one-day
--   shipping and two-day shipping.</li>
--   </ul>
shippingDetails_shippingOption :: Lens' ShippingDetails (Maybe ShippingOption)

-- | The <tt>Status</tt> and <tt>TrackingNumber</tt> values for a Snow
--   device being delivered to the address that you specified for a
--   particular job.
shippingDetails_outboundShipment :: Lens' ShippingDetails (Maybe Shipment)

-- | The <tt>Status</tt> and <tt>TrackingNumber</tt> values for a Snow
--   device being returned to AWS for a particular job.
shippingDetails_inboundShipment :: Lens' ShippingDetails (Maybe Shipment)

-- | Specifies the device configuration for an AWS Snowcone job.
--   
--   <i>See:</i> <a>newSnowconeDeviceConfiguration</a> smart constructor.
data SnowconeDeviceConfiguration
SnowconeDeviceConfiguration' :: Maybe WirelessConnection -> SnowconeDeviceConfiguration

-- | Configures the wireless connection for the AWS Snowcone device.
[$sel:wirelessConnection:SnowconeDeviceConfiguration'] :: SnowconeDeviceConfiguration -> Maybe WirelessConnection

-- | Create a value of <a>SnowconeDeviceConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:wirelessConnection:SnowconeDeviceConfiguration'</a>,
--   <a>snowconeDeviceConfiguration_wirelessConnection</a> - Configures the
--   wireless connection for the AWS Snowcone device.
newSnowconeDeviceConfiguration :: SnowconeDeviceConfiguration

-- | Configures the wireless connection for the AWS Snowcone device.
snowconeDeviceConfiguration_wirelessConnection :: Lens' SnowconeDeviceConfiguration (Maybe WirelessConnection)

-- | An object that represents the service or services on the Snow Family
--   device that your transferred data will be exported from or imported
--   into. AWS Snow Family supports Amazon S3 and NFS (Network File
--   System).
--   
--   <i>See:</i> <a>newTargetOnDeviceService</a> smart constructor.
data TargetOnDeviceService
TargetOnDeviceService' :: Maybe TransferOption -> Maybe DeviceServiceName -> TargetOnDeviceService

-- | Specifies whether the data is being imported or exported. You can
--   import or export the data, or use it locally on the device.
[$sel:transferOption:TargetOnDeviceService'] :: TargetOnDeviceService -> Maybe TransferOption

-- | Specifies the name of the service on the Snow Family device that your
--   transferred data will be exported from or imported into.
[$sel:serviceName:TargetOnDeviceService'] :: TargetOnDeviceService -> Maybe DeviceServiceName

-- | Create a value of <a>TargetOnDeviceService</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:transferOption:TargetOnDeviceService'</a>,
--   <a>targetOnDeviceService_transferOption</a> - Specifies whether the
--   data is being imported or exported. You can import or export the data,
--   or use it locally on the device.
--   
--   <a>$sel:serviceName:TargetOnDeviceService'</a>,
--   <a>targetOnDeviceService_serviceName</a> - Specifies the name of the
--   service on the Snow Family device that your transferred data will be
--   exported from or imported into.
newTargetOnDeviceService :: TargetOnDeviceService

-- | Specifies whether the data is being imported or exported. You can
--   import or export the data, or use it locally on the device.
targetOnDeviceService_transferOption :: Lens' TargetOnDeviceService (Maybe TransferOption)

-- | Specifies the name of the service on the Snow Family device that your
--   transferred data will be exported from or imported into.
targetOnDeviceService_serviceName :: Lens' TargetOnDeviceService (Maybe DeviceServiceName)

-- | The tax documents required in your AWS Region.
--   
--   <i>See:</i> <a>newTaxDocuments</a> smart constructor.
data TaxDocuments
TaxDocuments' :: Maybe INDTaxDocuments -> TaxDocuments
[$sel:ind:TaxDocuments'] :: TaxDocuments -> Maybe INDTaxDocuments

-- | Create a value of <a>TaxDocuments</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ind:TaxDocuments'</a>, <a>taxDocuments_ind</a> - Undocumented
--   member.
newTaxDocuments :: TaxDocuments

-- | Undocumented member.
taxDocuments_ind :: Lens' TaxDocuments (Maybe INDTaxDocuments)

-- | Configures the wireless connection on an AWS Snowcone device.
--   
--   <i>See:</i> <a>newWirelessConnection</a> smart constructor.
data WirelessConnection
WirelessConnection' :: Maybe Bool -> WirelessConnection

-- | Enables the Wi-Fi adapter on an AWS Snowcone device.
[$sel:isWifiEnabled:WirelessConnection'] :: WirelessConnection -> Maybe Bool

-- | Create a value of <a>WirelessConnection</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:isWifiEnabled:WirelessConnection'</a>,
--   <a>wirelessConnection_isWifiEnabled</a> - Enables the Wi-Fi adapter on
--   an AWS Snowcone device.
newWirelessConnection :: WirelessConnection

-- | Enables the Wi-Fi adapter on an AWS Snowcone device.
wirelessConnection_isWifiEnabled :: Lens' WirelessConnection (Maybe Bool)


-- | Lists all long-term pricing types.
module Network.AWS.Snowball.ListLongTermPricing

-- | <i>See:</i> <a>newListLongTermPricing</a> smart constructor.
data ListLongTermPricing
ListLongTermPricing' :: Maybe Text -> Maybe Natural -> ListLongTermPricing

-- | Because HTTP requests are stateless, this is the starting point for
--   your next list of <tt>ListLongTermPricing</tt> to return.
[$sel:nextToken:ListLongTermPricing'] :: ListLongTermPricing -> Maybe Text

-- | The maximum number of <tt>ListLongTermPricing</tt> objects to return.
[$sel:maxResults:ListLongTermPricing'] :: ListLongTermPricing -> Maybe Natural

-- | Create a value of <a>ListLongTermPricing</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListLongTermPricing'</a>,
--   <a>listLongTermPricing_nextToken</a> - Because HTTP requests are
--   stateless, this is the starting point for your next list of
--   <tt>ListLongTermPricing</tt> to return.
--   
--   <a>$sel:maxResults:ListLongTermPricing'</a>,
--   <a>listLongTermPricing_maxResults</a> - The maximum number of
--   <tt>ListLongTermPricing</tt> objects to return.
newListLongTermPricing :: ListLongTermPricing

-- | Because HTTP requests are stateless, this is the starting point for
--   your next list of <tt>ListLongTermPricing</tt> to return.
listLongTermPricing_nextToken :: Lens' ListLongTermPricing (Maybe Text)

-- | The maximum number of <tt>ListLongTermPricing</tt> objects to return.
listLongTermPricing_maxResults :: Lens' ListLongTermPricing (Maybe Natural)

-- | <i>See:</i> <a>newListLongTermPricingResponse</a> smart constructor.
data ListLongTermPricingResponse
ListLongTermPricingResponse' :: Maybe [LongTermPricingListEntry] -> Maybe Text -> Int -> ListLongTermPricingResponse

-- | Each <tt>LongTermPricingEntry</tt> object contains a status, ID, and
--   other information about the <tt>LongTermPricing</tt> type.
[$sel:longTermPricingEntries:ListLongTermPricingResponse'] :: ListLongTermPricingResponse -> Maybe [LongTermPricingListEntry]

-- | Because HTTP requests are stateless, this is the starting point for
--   your next list of returned <tt>ListLongTermPricing</tt> list.
[$sel:nextToken:ListLongTermPricingResponse'] :: ListLongTermPricingResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListLongTermPricingResponse'] :: ListLongTermPricingResponse -> Int

-- | Create a value of <a>ListLongTermPricingResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:longTermPricingEntries:ListLongTermPricingResponse'</a>,
--   <a>listLongTermPricingResponse_longTermPricingEntries</a> - Each
--   <tt>LongTermPricingEntry</tt> object contains a status, ID, and other
--   information about the <tt>LongTermPricing</tt> type.
--   
--   <a>$sel:nextToken:ListLongTermPricing'</a>,
--   <a>listLongTermPricingResponse_nextToken</a> - Because HTTP requests
--   are stateless, this is the starting point for your next list of
--   returned <tt>ListLongTermPricing</tt> list.
--   
--   <a>$sel:httpStatus:ListLongTermPricingResponse'</a>,
--   <a>listLongTermPricingResponse_httpStatus</a> - The response's http
--   status code.
newListLongTermPricingResponse :: Int -> ListLongTermPricingResponse

-- | Each <tt>LongTermPricingEntry</tt> object contains a status, ID, and
--   other information about the <tt>LongTermPricing</tt> type.
listLongTermPricingResponse_longTermPricingEntries :: Lens' ListLongTermPricingResponse (Maybe [LongTermPricingListEntry])

-- | Because HTTP requests are stateless, this is the starting point for
--   your next list of returned <tt>ListLongTermPricing</tt> list.
listLongTermPricingResponse_nextToken :: Lens' ListLongTermPricingResponse (Maybe Text)

-- | The response's http status code.
listLongTermPricingResponse_httpStatus :: Lens' ListLongTermPricingResponse Int
instance GHC.Generics.Generic Network.AWS.Snowball.ListLongTermPricing.ListLongTermPricing
instance GHC.Show.Show Network.AWS.Snowball.ListLongTermPricing.ListLongTermPricing
instance GHC.Read.Read Network.AWS.Snowball.ListLongTermPricing.ListLongTermPricing
instance GHC.Classes.Eq Network.AWS.Snowball.ListLongTermPricing.ListLongTermPricing
instance GHC.Generics.Generic Network.AWS.Snowball.ListLongTermPricing.ListLongTermPricingResponse
instance GHC.Show.Show Network.AWS.Snowball.ListLongTermPricing.ListLongTermPricingResponse
instance GHC.Read.Read Network.AWS.Snowball.ListLongTermPricing.ListLongTermPricingResponse
instance GHC.Classes.Eq Network.AWS.Snowball.ListLongTermPricing.ListLongTermPricingResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Snowball.ListLongTermPricing.ListLongTermPricing
instance Control.DeepSeq.NFData Network.AWS.Snowball.ListLongTermPricing.ListLongTermPricingResponse
instance Data.Hashable.Class.Hashable Network.AWS.Snowball.ListLongTermPricing.ListLongTermPricing
instance Control.DeepSeq.NFData Network.AWS.Snowball.ListLongTermPricing.ListLongTermPricing
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Snowball.ListLongTermPricing.ListLongTermPricing
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Snowball.ListLongTermPricing.ListLongTermPricing
instance Network.AWS.Data.Path.ToPath Network.AWS.Snowball.ListLongTermPricing.ListLongTermPricing
instance Network.AWS.Data.Query.ToQuery Network.AWS.Snowball.ListLongTermPricing.ListLongTermPricing


-- | Returns an array of <tt>JobListEntry</tt> objects of the specified
--   length. Each <tt>JobListEntry</tt> object contains a job's state, a
--   job's ID, and a value that indicates whether the job is a job part, in
--   the case of export jobs. Calling this API action in one of the US
--   regions will return jobs from the list of all jobs associated with
--   this account in all US regions.
--   
--   This operation returns paginated results.
module Network.AWS.Snowball.ListJobs

-- | <i>See:</i> <a>newListJobs</a> smart constructor.
data ListJobs
ListJobs' :: Maybe Text -> Maybe Natural -> ListJobs

-- | HTTP requests are stateless. To identify what object comes "next" in
--   the list of <tt>JobListEntry</tt> objects, you have the option of
--   specifying <tt>NextToken</tt> as the starting point for your returned
--   list.
[$sel:nextToken:ListJobs'] :: ListJobs -> Maybe Text

-- | The number of <tt>JobListEntry</tt> objects to return.
[$sel:maxResults:ListJobs'] :: ListJobs -> Maybe Natural

-- | Create a value of <a>ListJobs</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListJobs'</a>, <a>listJobs_nextToken</a> - HTTP
--   requests are stateless. To identify what object comes "next" in the
--   list of <tt>JobListEntry</tt> objects, you have the option of
--   specifying <tt>NextToken</tt> as the starting point for your returned
--   list.
--   
--   <a>$sel:maxResults:ListJobs'</a>, <a>listJobs_maxResults</a> - The
--   number of <tt>JobListEntry</tt> objects to return.
newListJobs :: ListJobs

-- | HTTP requests are stateless. To identify what object comes "next" in
--   the list of <tt>JobListEntry</tt> objects, you have the option of
--   specifying <tt>NextToken</tt> as the starting point for your returned
--   list.
listJobs_nextToken :: Lens' ListJobs (Maybe Text)

-- | The number of <tt>JobListEntry</tt> objects to return.
listJobs_maxResults :: Lens' ListJobs (Maybe Natural)

-- | <i>See:</i> <a>newListJobsResponse</a> smart constructor.
data ListJobsResponse
ListJobsResponse' :: Maybe [JobListEntry] -> Maybe Text -> Int -> ListJobsResponse

-- | Each <tt>JobListEntry</tt> object contains a job's state, a job's ID,
--   and a value that indicates whether the job is a job part, in the case
--   of export jobs.
[$sel:jobListEntries:ListJobsResponse'] :: ListJobsResponse -> Maybe [JobListEntry]

-- | HTTP requests are stateless. If you use this automatically generated
--   <tt>NextToken</tt> value in your next <tt>ListJobs</tt> call, your
--   returned <tt>JobListEntry</tt> objects will start from this point in
--   the array.
[$sel:nextToken:ListJobsResponse'] :: ListJobsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListJobsResponse'] :: ListJobsResponse -> Int

-- | Create a value of <a>ListJobsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobListEntries:ListJobsResponse'</a>,
--   <a>listJobsResponse_jobListEntries</a> - Each <tt>JobListEntry</tt>
--   object contains a job's state, a job's ID, and a value that indicates
--   whether the job is a job part, in the case of export jobs.
--   
--   <a>$sel:nextToken:ListJobs'</a>, <a>listJobsResponse_nextToken</a> -
--   HTTP requests are stateless. If you use this automatically generated
--   <tt>NextToken</tt> value in your next <tt>ListJobs</tt> call, your
--   returned <tt>JobListEntry</tt> objects will start from this point in
--   the array.
--   
--   <a>$sel:httpStatus:ListJobsResponse'</a>,
--   <a>listJobsResponse_httpStatus</a> - The response's http status code.
newListJobsResponse :: Int -> ListJobsResponse

-- | Each <tt>JobListEntry</tt> object contains a job's state, a job's ID,
--   and a value that indicates whether the job is a job part, in the case
--   of export jobs.
listJobsResponse_jobListEntries :: Lens' ListJobsResponse (Maybe [JobListEntry])

-- | HTTP requests are stateless. If you use this automatically generated
--   <tt>NextToken</tt> value in your next <tt>ListJobs</tt> call, your
--   returned <tt>JobListEntry</tt> objects will start from this point in
--   the array.
listJobsResponse_nextToken :: Lens' ListJobsResponse (Maybe Text)

-- | The response's http status code.
listJobsResponse_httpStatus :: Lens' ListJobsResponse Int
instance GHC.Generics.Generic Network.AWS.Snowball.ListJobs.ListJobs
instance GHC.Show.Show Network.AWS.Snowball.ListJobs.ListJobs
instance GHC.Read.Read Network.AWS.Snowball.ListJobs.ListJobs
instance GHC.Classes.Eq Network.AWS.Snowball.ListJobs.ListJobs
instance GHC.Generics.Generic Network.AWS.Snowball.ListJobs.ListJobsResponse
instance GHC.Show.Show Network.AWS.Snowball.ListJobs.ListJobsResponse
instance GHC.Read.Read Network.AWS.Snowball.ListJobs.ListJobsResponse
instance GHC.Classes.Eq Network.AWS.Snowball.ListJobs.ListJobsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Snowball.ListJobs.ListJobs
instance Control.DeepSeq.NFData Network.AWS.Snowball.ListJobs.ListJobsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Snowball.ListJobs.ListJobs
instance Data.Hashable.Class.Hashable Network.AWS.Snowball.ListJobs.ListJobs
instance Control.DeepSeq.NFData Network.AWS.Snowball.ListJobs.ListJobs
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Snowball.ListJobs.ListJobs
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Snowball.ListJobs.ListJobs
instance Network.AWS.Data.Path.ToPath Network.AWS.Snowball.ListJobs.ListJobs
instance Network.AWS.Data.Query.ToQuery Network.AWS.Snowball.ListJobs.ListJobs


-- | This action returns a list of the different Amazon EC2 Amazon Machine
--   Images (AMIs) that are owned by your AWS account that would be
--   supported for use on a Snow device. Currently, supported AMIs are
--   based on the CentOS 7 (x86_64) - with Updates HVM, Ubuntu Server 14.04
--   LTS (HVM), and Ubuntu 16.04 LTS - Xenial (HVM) images, available on
--   the AWS Marketplace.
--   
--   This operation returns paginated results.
module Network.AWS.Snowball.ListCompatibleImages

-- | <i>See:</i> <a>newListCompatibleImages</a> smart constructor.
data ListCompatibleImages
ListCompatibleImages' :: Maybe Text -> Maybe Natural -> ListCompatibleImages

-- | HTTP requests are stateless. To identify what object comes "next" in
--   the list of compatible images, you can specify a value for
--   <tt>NextToken</tt> as the starting point for your list of returned
--   images.
[$sel:nextToken:ListCompatibleImages'] :: ListCompatibleImages -> Maybe Text

-- | The maximum number of results for the list of compatible images.
--   Currently, a Snowball Edge device can store 10 AMIs.
[$sel:maxResults:ListCompatibleImages'] :: ListCompatibleImages -> Maybe Natural

-- | Create a value of <a>ListCompatibleImages</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListCompatibleImages'</a>,
--   <a>listCompatibleImages_nextToken</a> - HTTP requests are stateless.
--   To identify what object comes "next" in the list of compatible images,
--   you can specify a value for <tt>NextToken</tt> as the starting point
--   for your list of returned images.
--   
--   <a>$sel:maxResults:ListCompatibleImages'</a>,
--   <a>listCompatibleImages_maxResults</a> - The maximum number of results
--   for the list of compatible images. Currently, a Snowball Edge device
--   can store 10 AMIs.
newListCompatibleImages :: ListCompatibleImages

-- | HTTP requests are stateless. To identify what object comes "next" in
--   the list of compatible images, you can specify a value for
--   <tt>NextToken</tt> as the starting point for your list of returned
--   images.
listCompatibleImages_nextToken :: Lens' ListCompatibleImages (Maybe Text)

-- | The maximum number of results for the list of compatible images.
--   Currently, a Snowball Edge device can store 10 AMIs.
listCompatibleImages_maxResults :: Lens' ListCompatibleImages (Maybe Natural)

-- | <i>See:</i> <a>newListCompatibleImagesResponse</a> smart constructor.
data ListCompatibleImagesResponse
ListCompatibleImagesResponse' :: Maybe [CompatibleImage] -> Maybe Text -> Int -> ListCompatibleImagesResponse

-- | A JSON-formatted object that describes a compatible AMI, including the
--   ID and name for a Snow device AMI.
[$sel:compatibleImages:ListCompatibleImagesResponse'] :: ListCompatibleImagesResponse -> Maybe [CompatibleImage]

-- | Because HTTP requests are stateless, this is the starting point for
--   your next list of returned images.
[$sel:nextToken:ListCompatibleImagesResponse'] :: ListCompatibleImagesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListCompatibleImagesResponse'] :: ListCompatibleImagesResponse -> Int

-- | Create a value of <a>ListCompatibleImagesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:compatibleImages:ListCompatibleImagesResponse'</a>,
--   <a>listCompatibleImagesResponse_compatibleImages</a> - A
--   JSON-formatted object that describes a compatible AMI, including the
--   ID and name for a Snow device AMI.
--   
--   <a>$sel:nextToken:ListCompatibleImages'</a>,
--   <a>listCompatibleImagesResponse_nextToken</a> - Because HTTP requests
--   are stateless, this is the starting point for your next list of
--   returned images.
--   
--   <a>$sel:httpStatus:ListCompatibleImagesResponse'</a>,
--   <a>listCompatibleImagesResponse_httpStatus</a> - The response's http
--   status code.
newListCompatibleImagesResponse :: Int -> ListCompatibleImagesResponse

-- | A JSON-formatted object that describes a compatible AMI, including the
--   ID and name for a Snow device AMI.
listCompatibleImagesResponse_compatibleImages :: Lens' ListCompatibleImagesResponse (Maybe [CompatibleImage])

-- | Because HTTP requests are stateless, this is the starting point for
--   your next list of returned images.
listCompatibleImagesResponse_nextToken :: Lens' ListCompatibleImagesResponse (Maybe Text)

-- | The response's http status code.
listCompatibleImagesResponse_httpStatus :: Lens' ListCompatibleImagesResponse Int
instance GHC.Generics.Generic Network.AWS.Snowball.ListCompatibleImages.ListCompatibleImages
instance GHC.Show.Show Network.AWS.Snowball.ListCompatibleImages.ListCompatibleImages
instance GHC.Read.Read Network.AWS.Snowball.ListCompatibleImages.ListCompatibleImages
instance GHC.Classes.Eq Network.AWS.Snowball.ListCompatibleImages.ListCompatibleImages
instance GHC.Generics.Generic Network.AWS.Snowball.ListCompatibleImages.ListCompatibleImagesResponse
instance GHC.Show.Show Network.AWS.Snowball.ListCompatibleImages.ListCompatibleImagesResponse
instance GHC.Read.Read Network.AWS.Snowball.ListCompatibleImages.ListCompatibleImagesResponse
instance GHC.Classes.Eq Network.AWS.Snowball.ListCompatibleImages.ListCompatibleImagesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Snowball.ListCompatibleImages.ListCompatibleImages
instance Control.DeepSeq.NFData Network.AWS.Snowball.ListCompatibleImages.ListCompatibleImagesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Snowball.ListCompatibleImages.ListCompatibleImages
instance Data.Hashable.Class.Hashable Network.AWS.Snowball.ListCompatibleImages.ListCompatibleImages
instance Control.DeepSeq.NFData Network.AWS.Snowball.ListCompatibleImages.ListCompatibleImages
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Snowball.ListCompatibleImages.ListCompatibleImages
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Snowball.ListCompatibleImages.ListCompatibleImages
instance Network.AWS.Data.Path.ToPath Network.AWS.Snowball.ListCompatibleImages.ListCompatibleImages
instance Network.AWS.Data.Query.ToQuery Network.AWS.Snowball.ListCompatibleImages.ListCompatibleImages


-- | Returns an array of <tt>ClusterListEntry</tt> objects of the specified
--   length. Each <tt>ClusterListEntry</tt> object contains a cluster's
--   state, a cluster's ID, and other important status information.
--   
--   This operation returns paginated results.
module Network.AWS.Snowball.ListClusters

-- | <i>See:</i> <a>newListClusters</a> smart constructor.
data ListClusters
ListClusters' :: Maybe Text -> Maybe Natural -> ListClusters

-- | HTTP requests are stateless. To identify what object comes "next" in
--   the list of <tt>ClusterListEntry</tt> objects, you have the option of
--   specifying <tt>NextToken</tt> as the starting point for your returned
--   list.
[$sel:nextToken:ListClusters'] :: ListClusters -> Maybe Text

-- | The number of <tt>ClusterListEntry</tt> objects to return.
[$sel:maxResults:ListClusters'] :: ListClusters -> Maybe Natural

-- | Create a value of <a>ListClusters</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListClusters'</a>, <a>listClusters_nextToken</a> -
--   HTTP requests are stateless. To identify what object comes "next" in
--   the list of <tt>ClusterListEntry</tt> objects, you have the option of
--   specifying <tt>NextToken</tt> as the starting point for your returned
--   list.
--   
--   <a>$sel:maxResults:ListClusters'</a>, <a>listClusters_maxResults</a> -
--   The number of <tt>ClusterListEntry</tt> objects to return.
newListClusters :: ListClusters

-- | HTTP requests are stateless. To identify what object comes "next" in
--   the list of <tt>ClusterListEntry</tt> objects, you have the option of
--   specifying <tt>NextToken</tt> as the starting point for your returned
--   list.
listClusters_nextToken :: Lens' ListClusters (Maybe Text)

-- | The number of <tt>ClusterListEntry</tt> objects to return.
listClusters_maxResults :: Lens' ListClusters (Maybe Natural)

-- | <i>See:</i> <a>newListClustersResponse</a> smart constructor.
data ListClustersResponse
ListClustersResponse' :: Maybe [ClusterListEntry] -> Maybe Text -> Int -> ListClustersResponse

-- | Each <tt>ClusterListEntry</tt> object contains a cluster's state, a
--   cluster's ID, and other important status information.
[$sel:clusterListEntries:ListClustersResponse'] :: ListClustersResponse -> Maybe [ClusterListEntry]

-- | HTTP requests are stateless. If you use the automatically generated
--   <tt>NextToken</tt> value in your next <tt>ClusterListEntry</tt> call,
--   your list of returned clusters will start from this point in the
--   array.
[$sel:nextToken:ListClustersResponse'] :: ListClustersResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListClustersResponse'] :: ListClustersResponse -> Int

-- | Create a value of <a>ListClustersResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterListEntries:ListClustersResponse'</a>,
--   <a>listClustersResponse_clusterListEntries</a> - Each
--   <tt>ClusterListEntry</tt> object contains a cluster's state, a
--   cluster's ID, and other important status information.
--   
--   <a>$sel:nextToken:ListClusters'</a>,
--   <a>listClustersResponse_nextToken</a> - HTTP requests are stateless.
--   If you use the automatically generated <tt>NextToken</tt> value in
--   your next <tt>ClusterListEntry</tt> call, your list of returned
--   clusters will start from this point in the array.
--   
--   <a>$sel:httpStatus:ListClustersResponse'</a>,
--   <a>listClustersResponse_httpStatus</a> - The response's http status
--   code.
newListClustersResponse :: Int -> ListClustersResponse

-- | Each <tt>ClusterListEntry</tt> object contains a cluster's state, a
--   cluster's ID, and other important status information.
listClustersResponse_clusterListEntries :: Lens' ListClustersResponse (Maybe [ClusterListEntry])

-- | HTTP requests are stateless. If you use the automatically generated
--   <tt>NextToken</tt> value in your next <tt>ClusterListEntry</tt> call,
--   your list of returned clusters will start from this point in the
--   array.
listClustersResponse_nextToken :: Lens' ListClustersResponse (Maybe Text)

-- | The response's http status code.
listClustersResponse_httpStatus :: Lens' ListClustersResponse Int
instance GHC.Generics.Generic Network.AWS.Snowball.ListClusters.ListClusters
instance GHC.Show.Show Network.AWS.Snowball.ListClusters.ListClusters
instance GHC.Read.Read Network.AWS.Snowball.ListClusters.ListClusters
instance GHC.Classes.Eq Network.AWS.Snowball.ListClusters.ListClusters
instance GHC.Generics.Generic Network.AWS.Snowball.ListClusters.ListClustersResponse
instance GHC.Show.Show Network.AWS.Snowball.ListClusters.ListClustersResponse
instance GHC.Read.Read Network.AWS.Snowball.ListClusters.ListClustersResponse
instance GHC.Classes.Eq Network.AWS.Snowball.ListClusters.ListClustersResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Snowball.ListClusters.ListClusters
instance Control.DeepSeq.NFData Network.AWS.Snowball.ListClusters.ListClustersResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Snowball.ListClusters.ListClusters
instance Data.Hashable.Class.Hashable Network.AWS.Snowball.ListClusters.ListClusters
instance Control.DeepSeq.NFData Network.AWS.Snowball.ListClusters.ListClusters
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Snowball.ListClusters.ListClusters
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Snowball.ListClusters.ListClusters
instance Network.AWS.Data.Path.ToPath Network.AWS.Snowball.ListClusters.ListClusters
instance Network.AWS.Data.Query.ToQuery Network.AWS.Snowball.ListClusters.ListClusters


-- | Returns an array of <tt>JobListEntry</tt> objects of the specified
--   length. Each <tt>JobListEntry</tt> object is for a job in the
--   specified cluster and contains a job's state, a job's ID, and other
--   information.
--   
--   This operation returns paginated results.
module Network.AWS.Snowball.ListClusterJobs

-- | <i>See:</i> <a>newListClusterJobs</a> smart constructor.
data ListClusterJobs
ListClusterJobs' :: Maybe Text -> Maybe Natural -> Text -> ListClusterJobs

-- | HTTP requests are stateless. To identify what object comes "next" in
--   the list of <tt>JobListEntry</tt> objects, you have the option of
--   specifying <tt>NextToken</tt> as the starting point for your returned
--   list.
[$sel:nextToken:ListClusterJobs'] :: ListClusterJobs -> Maybe Text

-- | The number of <tt>JobListEntry</tt> objects to return.
[$sel:maxResults:ListClusterJobs'] :: ListClusterJobs -> Maybe Natural

-- | The 39-character ID for the cluster that you want to list, for example
--   <tt>CID123e4567-e89b-12d3-a456-426655440000</tt>.
[$sel:clusterId:ListClusterJobs'] :: ListClusterJobs -> Text

-- | Create a value of <a>ListClusterJobs</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListClusterJobs'</a>,
--   <a>listClusterJobs_nextToken</a> - HTTP requests are stateless. To
--   identify what object comes "next" in the list of <tt>JobListEntry</tt>
--   objects, you have the option of specifying <tt>NextToken</tt> as the
--   starting point for your returned list.
--   
--   <a>$sel:maxResults:ListClusterJobs'</a>,
--   <a>listClusterJobs_maxResults</a> - The number of
--   <tt>JobListEntry</tt> objects to return.
--   
--   <a>$sel:clusterId:ListClusterJobs'</a>,
--   <a>listClusterJobs_clusterId</a> - The 39-character ID for the cluster
--   that you want to list, for example
--   <tt>CID123e4567-e89b-12d3-a456-426655440000</tt>.
newListClusterJobs :: Text -> ListClusterJobs

-- | HTTP requests are stateless. To identify what object comes "next" in
--   the list of <tt>JobListEntry</tt> objects, you have the option of
--   specifying <tt>NextToken</tt> as the starting point for your returned
--   list.
listClusterJobs_nextToken :: Lens' ListClusterJobs (Maybe Text)

-- | The number of <tt>JobListEntry</tt> objects to return.
listClusterJobs_maxResults :: Lens' ListClusterJobs (Maybe Natural)

-- | The 39-character ID for the cluster that you want to list, for example
--   <tt>CID123e4567-e89b-12d3-a456-426655440000</tt>.
listClusterJobs_clusterId :: Lens' ListClusterJobs Text

-- | <i>See:</i> <a>newListClusterJobsResponse</a> smart constructor.
data ListClusterJobsResponse
ListClusterJobsResponse' :: Maybe [JobListEntry] -> Maybe Text -> Int -> ListClusterJobsResponse

-- | Each <tt>JobListEntry</tt> object contains a job's state, a job's ID,
--   and a value that indicates whether the job is a job part, in the case
--   of export jobs.
[$sel:jobListEntries:ListClusterJobsResponse'] :: ListClusterJobsResponse -> Maybe [JobListEntry]

-- | HTTP requests are stateless. If you use the automatically generated
--   <tt>NextToken</tt> value in your next <tt>ListClusterJobsResult</tt>
--   call, your list of returned jobs will start from this point in the
--   array.
[$sel:nextToken:ListClusterJobsResponse'] :: ListClusterJobsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListClusterJobsResponse'] :: ListClusterJobsResponse -> Int

-- | Create a value of <a>ListClusterJobsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobListEntries:ListClusterJobsResponse'</a>,
--   <a>listClusterJobsResponse_jobListEntries</a> - Each
--   <tt>JobListEntry</tt> object contains a job's state, a job's ID, and a
--   value that indicates whether the job is a job part, in the case of
--   export jobs.
--   
--   <a>$sel:nextToken:ListClusterJobs'</a>,
--   <a>listClusterJobsResponse_nextToken</a> - HTTP requests are
--   stateless. If you use the automatically generated <tt>NextToken</tt>
--   value in your next <tt>ListClusterJobsResult</tt> call, your list of
--   returned jobs will start from this point in the array.
--   
--   <a>$sel:httpStatus:ListClusterJobsResponse'</a>,
--   <a>listClusterJobsResponse_httpStatus</a> - The response's http status
--   code.
newListClusterJobsResponse :: Int -> ListClusterJobsResponse

-- | Each <tt>JobListEntry</tt> object contains a job's state, a job's ID,
--   and a value that indicates whether the job is a job part, in the case
--   of export jobs.
listClusterJobsResponse_jobListEntries :: Lens' ListClusterJobsResponse (Maybe [JobListEntry])

-- | HTTP requests are stateless. If you use the automatically generated
--   <tt>NextToken</tt> value in your next <tt>ListClusterJobsResult</tt>
--   call, your list of returned jobs will start from this point in the
--   array.
listClusterJobsResponse_nextToken :: Lens' ListClusterJobsResponse (Maybe Text)

-- | The response's http status code.
listClusterJobsResponse_httpStatus :: Lens' ListClusterJobsResponse Int
instance GHC.Generics.Generic Network.AWS.Snowball.ListClusterJobs.ListClusterJobs
instance GHC.Show.Show Network.AWS.Snowball.ListClusterJobs.ListClusterJobs
instance GHC.Read.Read Network.AWS.Snowball.ListClusterJobs.ListClusterJobs
instance GHC.Classes.Eq Network.AWS.Snowball.ListClusterJobs.ListClusterJobs
instance GHC.Generics.Generic Network.AWS.Snowball.ListClusterJobs.ListClusterJobsResponse
instance GHC.Show.Show Network.AWS.Snowball.ListClusterJobs.ListClusterJobsResponse
instance GHC.Read.Read Network.AWS.Snowball.ListClusterJobs.ListClusterJobsResponse
instance GHC.Classes.Eq Network.AWS.Snowball.ListClusterJobs.ListClusterJobsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Snowball.ListClusterJobs.ListClusterJobs
instance Control.DeepSeq.NFData Network.AWS.Snowball.ListClusterJobs.ListClusterJobsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Snowball.ListClusterJobs.ListClusterJobs
instance Data.Hashable.Class.Hashable Network.AWS.Snowball.ListClusterJobs.ListClusterJobs
instance Control.DeepSeq.NFData Network.AWS.Snowball.ListClusterJobs.ListClusterJobs
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Snowball.ListClusterJobs.ListClusterJobs
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Snowball.ListClusterJobs.ListClusterJobs
instance Network.AWS.Data.Path.ToPath Network.AWS.Snowball.ListClusterJobs.ListClusterJobs
instance Network.AWS.Data.Query.ToQuery Network.AWS.Snowball.ListClusterJobs.ListClusterJobs


-- | Returns an Amazon S3 presigned URL for an update file associated with
--   a specified <tt>JobId</tt>.
module Network.AWS.Snowball.GetSoftwareUpdates

-- | <i>See:</i> <a>newGetSoftwareUpdates</a> smart constructor.
data GetSoftwareUpdates
GetSoftwareUpdates' :: Text -> GetSoftwareUpdates

-- | The ID for a job that you want to get the software update file for,
--   for example <tt>JID123e4567-e89b-12d3-a456-426655440000</tt>.
[$sel:jobId:GetSoftwareUpdates'] :: GetSoftwareUpdates -> Text

-- | Create a value of <a>GetSoftwareUpdates</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:GetSoftwareUpdates'</a>, <a>getSoftwareUpdates_jobId</a>
--   - The ID for a job that you want to get the software update file for,
--   for example <tt>JID123e4567-e89b-12d3-a456-426655440000</tt>.
newGetSoftwareUpdates :: Text -> GetSoftwareUpdates

-- | The ID for a job that you want to get the software update file for,
--   for example <tt>JID123e4567-e89b-12d3-a456-426655440000</tt>.
getSoftwareUpdates_jobId :: Lens' GetSoftwareUpdates Text

-- | <i>See:</i> <a>newGetSoftwareUpdatesResponse</a> smart constructor.
data GetSoftwareUpdatesResponse
GetSoftwareUpdatesResponse' :: Maybe Text -> Int -> GetSoftwareUpdatesResponse

-- | The Amazon S3 presigned URL for the update file associated with the
--   specified <tt>JobId</tt> value. The software update will be available
--   for 2 days after this request is made. To access an update after the 2
--   days have passed, you'll have to make another call to
--   <tt>GetSoftwareUpdates</tt>.
[$sel:updatesURI:GetSoftwareUpdatesResponse'] :: GetSoftwareUpdatesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetSoftwareUpdatesResponse'] :: GetSoftwareUpdatesResponse -> Int

-- | Create a value of <a>GetSoftwareUpdatesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:updatesURI:GetSoftwareUpdatesResponse'</a>,
--   <a>getSoftwareUpdatesResponse_updatesURI</a> - The Amazon S3 presigned
--   URL for the update file associated with the specified <tt>JobId</tt>
--   value. The software update will be available for 2 days after this
--   request is made. To access an update after the 2 days have passed,
--   you'll have to make another call to <tt>GetSoftwareUpdates</tt>.
--   
--   <a>$sel:httpStatus:GetSoftwareUpdatesResponse'</a>,
--   <a>getSoftwareUpdatesResponse_httpStatus</a> - The response's http
--   status code.
newGetSoftwareUpdatesResponse :: Int -> GetSoftwareUpdatesResponse

-- | The Amazon S3 presigned URL for the update file associated with the
--   specified <tt>JobId</tt> value. The software update will be available
--   for 2 days after this request is made. To access an update after the 2
--   days have passed, you'll have to make another call to
--   <tt>GetSoftwareUpdates</tt>.
getSoftwareUpdatesResponse_updatesURI :: Lens' GetSoftwareUpdatesResponse (Maybe Text)

-- | The response's http status code.
getSoftwareUpdatesResponse_httpStatus :: Lens' GetSoftwareUpdatesResponse Int
instance GHC.Generics.Generic Network.AWS.Snowball.GetSoftwareUpdates.GetSoftwareUpdates
instance GHC.Show.Show Network.AWS.Snowball.GetSoftwareUpdates.GetSoftwareUpdates
instance GHC.Read.Read Network.AWS.Snowball.GetSoftwareUpdates.GetSoftwareUpdates
instance GHC.Classes.Eq Network.AWS.Snowball.GetSoftwareUpdates.GetSoftwareUpdates
instance GHC.Generics.Generic Network.AWS.Snowball.GetSoftwareUpdates.GetSoftwareUpdatesResponse
instance GHC.Show.Show Network.AWS.Snowball.GetSoftwareUpdates.GetSoftwareUpdatesResponse
instance GHC.Read.Read Network.AWS.Snowball.GetSoftwareUpdates.GetSoftwareUpdatesResponse
instance GHC.Classes.Eq Network.AWS.Snowball.GetSoftwareUpdates.GetSoftwareUpdatesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Snowball.GetSoftwareUpdates.GetSoftwareUpdates
instance Control.DeepSeq.NFData Network.AWS.Snowball.GetSoftwareUpdates.GetSoftwareUpdatesResponse
instance Data.Hashable.Class.Hashable Network.AWS.Snowball.GetSoftwareUpdates.GetSoftwareUpdates
instance Control.DeepSeq.NFData Network.AWS.Snowball.GetSoftwareUpdates.GetSoftwareUpdates
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Snowball.GetSoftwareUpdates.GetSoftwareUpdates
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Snowball.GetSoftwareUpdates.GetSoftwareUpdates
instance Network.AWS.Data.Path.ToPath Network.AWS.Snowball.GetSoftwareUpdates.GetSoftwareUpdates
instance Network.AWS.Data.Query.ToQuery Network.AWS.Snowball.GetSoftwareUpdates.GetSoftwareUpdates


-- | Returns information about the Snow Family service limit for your
--   account, and also the number of Snow devices your account has in use.
--   
--   The default service limit for the number of Snow devices that you can
--   have at one time is 1. If you want to increase your service limit,
--   contact AWS Support.
module Network.AWS.Snowball.GetSnowballUsage

-- | <i>See:</i> <a>newGetSnowballUsage</a> smart constructor.
data GetSnowballUsage
GetSnowballUsage' :: GetSnowballUsage

-- | Create a value of <a>GetSnowballUsage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newGetSnowballUsage :: GetSnowballUsage

-- | <i>See:</i> <a>newGetSnowballUsageResponse</a> smart constructor.
data GetSnowballUsageResponse
GetSnowballUsageResponse' :: Maybe Int -> Maybe Int -> Int -> GetSnowballUsageResponse

-- | The number of Snow devices that this account is currently using.
[$sel:snowballsInUse:GetSnowballUsageResponse'] :: GetSnowballUsageResponse -> Maybe Int

-- | The service limit for number of Snow devices this account can have at
--   once. The default service limit is 1 (one).
[$sel:snowballLimit:GetSnowballUsageResponse'] :: GetSnowballUsageResponse -> Maybe Int

-- | The response's http status code.
[$sel:httpStatus:GetSnowballUsageResponse'] :: GetSnowballUsageResponse -> Int

-- | Create a value of <a>GetSnowballUsageResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:snowballsInUse:GetSnowballUsageResponse'</a>,
--   <a>getSnowballUsageResponse_snowballsInUse</a> - The number of Snow
--   devices that this account is currently using.
--   
--   <a>$sel:snowballLimit:GetSnowballUsageResponse'</a>,
--   <a>getSnowballUsageResponse_snowballLimit</a> - The service limit for
--   number of Snow devices this account can have at once. The default
--   service limit is 1 (one).
--   
--   <a>$sel:httpStatus:GetSnowballUsageResponse'</a>,
--   <a>getSnowballUsageResponse_httpStatus</a> - The response's http
--   status code.
newGetSnowballUsageResponse :: Int -> GetSnowballUsageResponse

-- | The number of Snow devices that this account is currently using.
getSnowballUsageResponse_snowballsInUse :: Lens' GetSnowballUsageResponse (Maybe Int)

-- | The service limit for number of Snow devices this account can have at
--   once. The default service limit is 1 (one).
getSnowballUsageResponse_snowballLimit :: Lens' GetSnowballUsageResponse (Maybe Int)

-- | The response's http status code.
getSnowballUsageResponse_httpStatus :: Lens' GetSnowballUsageResponse Int
instance GHC.Generics.Generic Network.AWS.Snowball.GetSnowballUsage.GetSnowballUsage
instance GHC.Show.Show Network.AWS.Snowball.GetSnowballUsage.GetSnowballUsage
instance GHC.Read.Read Network.AWS.Snowball.GetSnowballUsage.GetSnowballUsage
instance GHC.Classes.Eq Network.AWS.Snowball.GetSnowballUsage.GetSnowballUsage
instance GHC.Generics.Generic Network.AWS.Snowball.GetSnowballUsage.GetSnowballUsageResponse
instance GHC.Show.Show Network.AWS.Snowball.GetSnowballUsage.GetSnowballUsageResponse
instance GHC.Read.Read Network.AWS.Snowball.GetSnowballUsage.GetSnowballUsageResponse
instance GHC.Classes.Eq Network.AWS.Snowball.GetSnowballUsage.GetSnowballUsageResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Snowball.GetSnowballUsage.GetSnowballUsage
instance Control.DeepSeq.NFData Network.AWS.Snowball.GetSnowballUsage.GetSnowballUsageResponse
instance Data.Hashable.Class.Hashable Network.AWS.Snowball.GetSnowballUsage.GetSnowballUsage
instance Control.DeepSeq.NFData Network.AWS.Snowball.GetSnowballUsage.GetSnowballUsage
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Snowball.GetSnowballUsage.GetSnowballUsage
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Snowball.GetSnowballUsage.GetSnowballUsage
instance Network.AWS.Data.Path.ToPath Network.AWS.Snowball.GetSnowballUsage.GetSnowballUsage
instance Network.AWS.Data.Query.ToQuery Network.AWS.Snowball.GetSnowballUsage.GetSnowballUsage


-- | Returns the <tt>UnlockCode</tt> code value for the specified job. A
--   particular <tt>UnlockCode</tt> value can be accessed for up to 360
--   days after the associated job has been created.
--   
--   The <tt>UnlockCode</tt> value is a 29-character code with 25
--   alphanumeric characters and 4 hyphens. This code is used to decrypt
--   the manifest file when it is passed along with the manifest to the
--   Snow device through the Snowball client when the client is started for
--   the first time.
--   
--   As a best practice, we recommend that you don't save a copy of the
--   <tt>UnlockCode</tt> in the same location as the manifest file for that
--   job. Saving these separately helps prevent unauthorized parties from
--   gaining access to the Snow device associated with that job.
module Network.AWS.Snowball.GetJobUnlockCode

-- | <i>See:</i> <a>newGetJobUnlockCode</a> smart constructor.
data GetJobUnlockCode
GetJobUnlockCode' :: Text -> GetJobUnlockCode

-- | The ID for the job that you want to get the <tt>UnlockCode</tt> value
--   for, for example <tt>JID123e4567-e89b-12d3-a456-426655440000</tt>.
[$sel:jobId:GetJobUnlockCode'] :: GetJobUnlockCode -> Text

-- | Create a value of <a>GetJobUnlockCode</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:GetJobUnlockCode'</a>, <a>getJobUnlockCode_jobId</a> -
--   The ID for the job that you want to get the <tt>UnlockCode</tt> value
--   for, for example <tt>JID123e4567-e89b-12d3-a456-426655440000</tt>.
newGetJobUnlockCode :: Text -> GetJobUnlockCode

-- | The ID for the job that you want to get the <tt>UnlockCode</tt> value
--   for, for example <tt>JID123e4567-e89b-12d3-a456-426655440000</tt>.
getJobUnlockCode_jobId :: Lens' GetJobUnlockCode Text

-- | <i>See:</i> <a>newGetJobUnlockCodeResponse</a> smart constructor.
data GetJobUnlockCodeResponse
GetJobUnlockCodeResponse' :: Maybe Text -> Int -> GetJobUnlockCodeResponse

-- | The <tt>UnlockCode</tt> value for the specified job. The
--   <tt>UnlockCode</tt> value can be accessed for up to 360 days after the
--   job has been created.
[$sel:unlockCode:GetJobUnlockCodeResponse'] :: GetJobUnlockCodeResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetJobUnlockCodeResponse'] :: GetJobUnlockCodeResponse -> Int

-- | Create a value of <a>GetJobUnlockCodeResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:unlockCode:GetJobUnlockCodeResponse'</a>,
--   <a>getJobUnlockCodeResponse_unlockCode</a> - The <tt>UnlockCode</tt>
--   value for the specified job. The <tt>UnlockCode</tt> value can be
--   accessed for up to 360 days after the job has been created.
--   
--   <a>$sel:httpStatus:GetJobUnlockCodeResponse'</a>,
--   <a>getJobUnlockCodeResponse_httpStatus</a> - The response's http
--   status code.
newGetJobUnlockCodeResponse :: Int -> GetJobUnlockCodeResponse

-- | The <tt>UnlockCode</tt> value for the specified job. The
--   <tt>UnlockCode</tt> value can be accessed for up to 360 days after the
--   job has been created.
getJobUnlockCodeResponse_unlockCode :: Lens' GetJobUnlockCodeResponse (Maybe Text)

-- | The response's http status code.
getJobUnlockCodeResponse_httpStatus :: Lens' GetJobUnlockCodeResponse Int
instance GHC.Generics.Generic Network.AWS.Snowball.GetJobUnlockCode.GetJobUnlockCode
instance GHC.Show.Show Network.AWS.Snowball.GetJobUnlockCode.GetJobUnlockCode
instance GHC.Read.Read Network.AWS.Snowball.GetJobUnlockCode.GetJobUnlockCode
instance GHC.Classes.Eq Network.AWS.Snowball.GetJobUnlockCode.GetJobUnlockCode
instance GHC.Generics.Generic Network.AWS.Snowball.GetJobUnlockCode.GetJobUnlockCodeResponse
instance GHC.Show.Show Network.AWS.Snowball.GetJobUnlockCode.GetJobUnlockCodeResponse
instance GHC.Read.Read Network.AWS.Snowball.GetJobUnlockCode.GetJobUnlockCodeResponse
instance GHC.Classes.Eq Network.AWS.Snowball.GetJobUnlockCode.GetJobUnlockCodeResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Snowball.GetJobUnlockCode.GetJobUnlockCode
instance Control.DeepSeq.NFData Network.AWS.Snowball.GetJobUnlockCode.GetJobUnlockCodeResponse
instance Data.Hashable.Class.Hashable Network.AWS.Snowball.GetJobUnlockCode.GetJobUnlockCode
instance Control.DeepSeq.NFData Network.AWS.Snowball.GetJobUnlockCode.GetJobUnlockCode
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Snowball.GetJobUnlockCode.GetJobUnlockCode
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Snowball.GetJobUnlockCode.GetJobUnlockCode
instance Network.AWS.Data.Path.ToPath Network.AWS.Snowball.GetJobUnlockCode.GetJobUnlockCode
instance Network.AWS.Data.Query.ToQuery Network.AWS.Snowball.GetJobUnlockCode.GetJobUnlockCode


-- | Returns a link to an Amazon S3 presigned URL for the manifest file
--   associated with the specified <tt>JobId</tt> value. You can access the
--   manifest file for up to 60 minutes after this request has been made.
--   To access the manifest file after 60 minutes have passed, you'll have
--   to make another call to the <tt>GetJobManifest</tt> action.
--   
--   The manifest is an encrypted file that you can download after your job
--   enters the <tt>WithCustomer</tt> status. The manifest is decrypted by
--   using the <tt>UnlockCode</tt> code value, when you pass both values to
--   the Snow device through the Snowball client when the client is started
--   for the first time.
--   
--   As a best practice, we recommend that you don't save a copy of an
--   <tt>UnlockCode</tt> value in the same location as the manifest file
--   for that job. Saving these separately helps prevent unauthorized
--   parties from gaining access to the Snow device associated with that
--   job.
--   
--   The credentials of a given job, including its manifest file and unlock
--   code, expire 360 days after the job is created.
module Network.AWS.Snowball.GetJobManifest

-- | <i>See:</i> <a>newGetJobManifest</a> smart constructor.
data GetJobManifest
GetJobManifest' :: Text -> GetJobManifest

-- | The ID for a job that you want to get the manifest file for, for
--   example <tt>JID123e4567-e89b-12d3-a456-426655440000</tt>.
[$sel:jobId:GetJobManifest'] :: GetJobManifest -> Text

-- | Create a value of <a>GetJobManifest</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:GetJobManifest'</a>, <a>getJobManifest_jobId</a> - The
--   ID for a job that you want to get the manifest file for, for example
--   <tt>JID123e4567-e89b-12d3-a456-426655440000</tt>.
newGetJobManifest :: Text -> GetJobManifest

-- | The ID for a job that you want to get the manifest file for, for
--   example <tt>JID123e4567-e89b-12d3-a456-426655440000</tt>.
getJobManifest_jobId :: Lens' GetJobManifest Text

-- | <i>See:</i> <a>newGetJobManifestResponse</a> smart constructor.
data GetJobManifestResponse
GetJobManifestResponse' :: Maybe Text -> Int -> GetJobManifestResponse

-- | The Amazon S3 presigned URL for the manifest file associated with the
--   specified <tt>JobId</tt> value.
[$sel:manifestURI:GetJobManifestResponse'] :: GetJobManifestResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetJobManifestResponse'] :: GetJobManifestResponse -> Int

-- | Create a value of <a>GetJobManifestResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:manifestURI:GetJobManifestResponse'</a>,
--   <a>getJobManifestResponse_manifestURI</a> - The Amazon S3 presigned
--   URL for the manifest file associated with the specified <tt>JobId</tt>
--   value.
--   
--   <a>$sel:httpStatus:GetJobManifestResponse'</a>,
--   <a>getJobManifestResponse_httpStatus</a> - The response's http status
--   code.
newGetJobManifestResponse :: Int -> GetJobManifestResponse

-- | The Amazon S3 presigned URL for the manifest file associated with the
--   specified <tt>JobId</tt> value.
getJobManifestResponse_manifestURI :: Lens' GetJobManifestResponse (Maybe Text)

-- | The response's http status code.
getJobManifestResponse_httpStatus :: Lens' GetJobManifestResponse Int
instance GHC.Generics.Generic Network.AWS.Snowball.GetJobManifest.GetJobManifest
instance GHC.Show.Show Network.AWS.Snowball.GetJobManifest.GetJobManifest
instance GHC.Read.Read Network.AWS.Snowball.GetJobManifest.GetJobManifest
instance GHC.Classes.Eq Network.AWS.Snowball.GetJobManifest.GetJobManifest
instance GHC.Generics.Generic Network.AWS.Snowball.GetJobManifest.GetJobManifestResponse
instance GHC.Show.Show Network.AWS.Snowball.GetJobManifest.GetJobManifestResponse
instance GHC.Read.Read Network.AWS.Snowball.GetJobManifest.GetJobManifestResponse
instance GHC.Classes.Eq Network.AWS.Snowball.GetJobManifest.GetJobManifestResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Snowball.GetJobManifest.GetJobManifest
instance Control.DeepSeq.NFData Network.AWS.Snowball.GetJobManifest.GetJobManifestResponse
instance Data.Hashable.Class.Hashable Network.AWS.Snowball.GetJobManifest.GetJobManifest
instance Control.DeepSeq.NFData Network.AWS.Snowball.GetJobManifest.GetJobManifest
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Snowball.GetJobManifest.GetJobManifest
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Snowball.GetJobManifest.GetJobManifest
instance Network.AWS.Data.Path.ToPath Network.AWS.Snowball.GetJobManifest.GetJobManifest
instance Network.AWS.Data.Query.ToQuery Network.AWS.Snowball.GetJobManifest.GetJobManifest


-- | Information on the shipping label of a Snow device that is being
--   returned to AWS.
module Network.AWS.Snowball.DescribeReturnShippingLabel

-- | <i>See:</i> <a>newDescribeReturnShippingLabel</a> smart constructor.
data DescribeReturnShippingLabel
DescribeReturnShippingLabel' :: Text -> DescribeReturnShippingLabel

-- | The automatically generated ID for a job, for example
--   <tt>JID123e4567-e89b-12d3-a456-426655440000</tt>.
[$sel:jobId:DescribeReturnShippingLabel'] :: DescribeReturnShippingLabel -> Text

-- | Create a value of <a>DescribeReturnShippingLabel</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:DescribeReturnShippingLabel'</a>,
--   <a>describeReturnShippingLabel_jobId</a> - The automatically generated
--   ID for a job, for example
--   <tt>JID123e4567-e89b-12d3-a456-426655440000</tt>.
newDescribeReturnShippingLabel :: Text -> DescribeReturnShippingLabel

-- | The automatically generated ID for a job, for example
--   <tt>JID123e4567-e89b-12d3-a456-426655440000</tt>.
describeReturnShippingLabel_jobId :: Lens' DescribeReturnShippingLabel Text

-- | <i>See:</i> <a>newDescribeReturnShippingLabelResponse</a> smart
--   constructor.
data DescribeReturnShippingLabelResponse
DescribeReturnShippingLabelResponse' :: Maybe ShippingLabelStatus -> Maybe POSIX -> Int -> DescribeReturnShippingLabelResponse

-- | The status information of the task on a Snow device that is being
--   returned to AWS.
[$sel:status:DescribeReturnShippingLabelResponse'] :: DescribeReturnShippingLabelResponse -> Maybe ShippingLabelStatus

-- | The expiration date of the current return shipping label.
[$sel:expirationDate:DescribeReturnShippingLabelResponse'] :: DescribeReturnShippingLabelResponse -> Maybe POSIX

-- | The response's http status code.
[$sel:httpStatus:DescribeReturnShippingLabelResponse'] :: DescribeReturnShippingLabelResponse -> Int

-- | Create a value of <a>DescribeReturnShippingLabelResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:DescribeReturnShippingLabelResponse'</a>,
--   <a>describeReturnShippingLabelResponse_status</a> - The status
--   information of the task on a Snow device that is being returned to
--   AWS.
--   
--   <a>$sel:expirationDate:DescribeReturnShippingLabelResponse'</a>,
--   <a>describeReturnShippingLabelResponse_expirationDate</a> - The
--   expiration date of the current return shipping label.
--   
--   <a>$sel:httpStatus:DescribeReturnShippingLabelResponse'</a>,
--   <a>describeReturnShippingLabelResponse_httpStatus</a> - The response's
--   http status code.
newDescribeReturnShippingLabelResponse :: Int -> DescribeReturnShippingLabelResponse

-- | The status information of the task on a Snow device that is being
--   returned to AWS.
describeReturnShippingLabelResponse_status :: Lens' DescribeReturnShippingLabelResponse (Maybe ShippingLabelStatus)

-- | The expiration date of the current return shipping label.
describeReturnShippingLabelResponse_expirationDate :: Lens' DescribeReturnShippingLabelResponse (Maybe UTCTime)

-- | The response's http status code.
describeReturnShippingLabelResponse_httpStatus :: Lens' DescribeReturnShippingLabelResponse Int
instance GHC.Generics.Generic Network.AWS.Snowball.DescribeReturnShippingLabel.DescribeReturnShippingLabel
instance GHC.Show.Show Network.AWS.Snowball.DescribeReturnShippingLabel.DescribeReturnShippingLabel
instance GHC.Read.Read Network.AWS.Snowball.DescribeReturnShippingLabel.DescribeReturnShippingLabel
instance GHC.Classes.Eq Network.AWS.Snowball.DescribeReturnShippingLabel.DescribeReturnShippingLabel
instance GHC.Generics.Generic Network.AWS.Snowball.DescribeReturnShippingLabel.DescribeReturnShippingLabelResponse
instance GHC.Show.Show Network.AWS.Snowball.DescribeReturnShippingLabel.DescribeReturnShippingLabelResponse
instance GHC.Read.Read Network.AWS.Snowball.DescribeReturnShippingLabel.DescribeReturnShippingLabelResponse
instance GHC.Classes.Eq Network.AWS.Snowball.DescribeReturnShippingLabel.DescribeReturnShippingLabelResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Snowball.DescribeReturnShippingLabel.DescribeReturnShippingLabel
instance Control.DeepSeq.NFData Network.AWS.Snowball.DescribeReturnShippingLabel.DescribeReturnShippingLabelResponse
instance Data.Hashable.Class.Hashable Network.AWS.Snowball.DescribeReturnShippingLabel.DescribeReturnShippingLabel
instance Control.DeepSeq.NFData Network.AWS.Snowball.DescribeReturnShippingLabel.DescribeReturnShippingLabel
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Snowball.DescribeReturnShippingLabel.DescribeReturnShippingLabel
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Snowball.DescribeReturnShippingLabel.DescribeReturnShippingLabel
instance Network.AWS.Data.Path.ToPath Network.AWS.Snowball.DescribeReturnShippingLabel.DescribeReturnShippingLabel
instance Network.AWS.Data.Query.ToQuery Network.AWS.Snowball.DescribeReturnShippingLabel.DescribeReturnShippingLabel


-- | Returns information about a specific job including shipping
--   information, job status, and other important metadata.
module Network.AWS.Snowball.DescribeJob

-- | <i>See:</i> <a>newDescribeJob</a> smart constructor.
data DescribeJob
DescribeJob' :: Text -> DescribeJob

-- | The automatically generated ID for a job, for example
--   <tt>JID123e4567-e89b-12d3-a456-426655440000</tt>.
[$sel:jobId:DescribeJob'] :: DescribeJob -> Text

-- | Create a value of <a>DescribeJob</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:DescribeJob'</a>, <a>describeJob_jobId</a> - The
--   automatically generated ID for a job, for example
--   <tt>JID123e4567-e89b-12d3-a456-426655440000</tt>.
newDescribeJob :: Text -> DescribeJob

-- | The automatically generated ID for a job, for example
--   <tt>JID123e4567-e89b-12d3-a456-426655440000</tt>.
describeJob_jobId :: Lens' DescribeJob Text

-- | <i>See:</i> <a>newDescribeJobResponse</a> smart constructor.
data DescribeJobResponse
DescribeJobResponse' :: Maybe JobMetadata -> Maybe [JobMetadata] -> Int -> DescribeJobResponse

-- | Information about a specific job, including shipping information, job
--   status, and other important metadata.
[$sel:jobMetadata:DescribeJobResponse'] :: DescribeJobResponse -> Maybe JobMetadata

-- | Information about a specific job part (in the case of an export job),
--   including shipping information, job status, and other important
--   metadata.
[$sel:subJobMetadata:DescribeJobResponse'] :: DescribeJobResponse -> Maybe [JobMetadata]

-- | The response's http status code.
[$sel:httpStatus:DescribeJobResponse'] :: DescribeJobResponse -> Int

-- | Create a value of <a>DescribeJobResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobMetadata:DescribeJobResponse'</a>,
--   <a>describeJobResponse_jobMetadata</a> - Information about a specific
--   job, including shipping information, job status, and other important
--   metadata.
--   
--   <a>$sel:subJobMetadata:DescribeJobResponse'</a>,
--   <a>describeJobResponse_subJobMetadata</a> - Information about a
--   specific job part (in the case of an export job), including shipping
--   information, job status, and other important metadata.
--   
--   <a>$sel:httpStatus:DescribeJobResponse'</a>,
--   <a>describeJobResponse_httpStatus</a> - The response's http status
--   code.
newDescribeJobResponse :: Int -> DescribeJobResponse

-- | Information about a specific job, including shipping information, job
--   status, and other important metadata.
describeJobResponse_jobMetadata :: Lens' DescribeJobResponse (Maybe JobMetadata)

-- | Information about a specific job part (in the case of an export job),
--   including shipping information, job status, and other important
--   metadata.
describeJobResponse_subJobMetadata :: Lens' DescribeJobResponse (Maybe [JobMetadata])

-- | The response's http status code.
describeJobResponse_httpStatus :: Lens' DescribeJobResponse Int
instance GHC.Generics.Generic Network.AWS.Snowball.DescribeJob.DescribeJob
instance GHC.Show.Show Network.AWS.Snowball.DescribeJob.DescribeJob
instance GHC.Read.Read Network.AWS.Snowball.DescribeJob.DescribeJob
instance GHC.Classes.Eq Network.AWS.Snowball.DescribeJob.DescribeJob
instance GHC.Generics.Generic Network.AWS.Snowball.DescribeJob.DescribeJobResponse
instance GHC.Show.Show Network.AWS.Snowball.DescribeJob.DescribeJobResponse
instance GHC.Read.Read Network.AWS.Snowball.DescribeJob.DescribeJobResponse
instance GHC.Classes.Eq Network.AWS.Snowball.DescribeJob.DescribeJobResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Snowball.DescribeJob.DescribeJob
instance Control.DeepSeq.NFData Network.AWS.Snowball.DescribeJob.DescribeJobResponse
instance Data.Hashable.Class.Hashable Network.AWS.Snowball.DescribeJob.DescribeJob
instance Control.DeepSeq.NFData Network.AWS.Snowball.DescribeJob.DescribeJob
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Snowball.DescribeJob.DescribeJob
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Snowball.DescribeJob.DescribeJob
instance Network.AWS.Data.Path.ToPath Network.AWS.Snowball.DescribeJob.DescribeJob
instance Network.AWS.Data.Query.ToQuery Network.AWS.Snowball.DescribeJob.DescribeJob


-- | Returns information about a specific cluster including shipping
--   information, cluster status, and other important metadata.
module Network.AWS.Snowball.DescribeCluster

-- | <i>See:</i> <a>newDescribeCluster</a> smart constructor.
data DescribeCluster
DescribeCluster' :: Text -> DescribeCluster

-- | The automatically generated ID for a cluster.
[$sel:clusterId:DescribeCluster'] :: DescribeCluster -> Text

-- | Create a value of <a>DescribeCluster</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterId:DescribeCluster'</a>,
--   <a>describeCluster_clusterId</a> - The automatically generated ID for
--   a cluster.
newDescribeCluster :: Text -> DescribeCluster

-- | The automatically generated ID for a cluster.
describeCluster_clusterId :: Lens' DescribeCluster Text

-- | <i>See:</i> <a>newDescribeClusterResponse</a> smart constructor.
data DescribeClusterResponse
DescribeClusterResponse' :: Maybe ClusterMetadata -> Int -> DescribeClusterResponse

-- | Information about a specific cluster, including shipping information,
--   cluster status, and other important metadata.
[$sel:clusterMetadata:DescribeClusterResponse'] :: DescribeClusterResponse -> Maybe ClusterMetadata

-- | The response's http status code.
[$sel:httpStatus:DescribeClusterResponse'] :: DescribeClusterResponse -> Int

-- | Create a value of <a>DescribeClusterResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterMetadata:DescribeClusterResponse'</a>,
--   <a>describeClusterResponse_clusterMetadata</a> - Information about a
--   specific cluster, including shipping information, cluster status, and
--   other important metadata.
--   
--   <a>$sel:httpStatus:DescribeClusterResponse'</a>,
--   <a>describeClusterResponse_httpStatus</a> - The response's http status
--   code.
newDescribeClusterResponse :: Int -> DescribeClusterResponse

-- | Information about a specific cluster, including shipping information,
--   cluster status, and other important metadata.
describeClusterResponse_clusterMetadata :: Lens' DescribeClusterResponse (Maybe ClusterMetadata)

-- | The response's http status code.
describeClusterResponse_httpStatus :: Lens' DescribeClusterResponse Int
instance GHC.Generics.Generic Network.AWS.Snowball.DescribeCluster.DescribeCluster
instance GHC.Show.Show Network.AWS.Snowball.DescribeCluster.DescribeCluster
instance GHC.Read.Read Network.AWS.Snowball.DescribeCluster.DescribeCluster
instance GHC.Classes.Eq Network.AWS.Snowball.DescribeCluster.DescribeCluster
instance GHC.Generics.Generic Network.AWS.Snowball.DescribeCluster.DescribeClusterResponse
instance GHC.Show.Show Network.AWS.Snowball.DescribeCluster.DescribeClusterResponse
instance GHC.Read.Read Network.AWS.Snowball.DescribeCluster.DescribeClusterResponse
instance GHC.Classes.Eq Network.AWS.Snowball.DescribeCluster.DescribeClusterResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Snowball.DescribeCluster.DescribeCluster
instance Control.DeepSeq.NFData Network.AWS.Snowball.DescribeCluster.DescribeClusterResponse
instance Data.Hashable.Class.Hashable Network.AWS.Snowball.DescribeCluster.DescribeCluster
instance Control.DeepSeq.NFData Network.AWS.Snowball.DescribeCluster.DescribeCluster
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Snowball.DescribeCluster.DescribeCluster
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Snowball.DescribeCluster.DescribeCluster
instance Network.AWS.Data.Path.ToPath Network.AWS.Snowball.DescribeCluster.DescribeCluster
instance Network.AWS.Data.Query.ToQuery Network.AWS.Snowball.DescribeCluster.DescribeCluster


-- | Returns a specified number of <tt>ADDRESS</tt> objects. Calling this
--   API in one of the US regions will return addresses from the list of
--   all addresses associated with this account in all US regions.
--   
--   This operation returns paginated results.
module Network.AWS.Snowball.DescribeAddresses

-- | <i>See:</i> <a>newDescribeAddresses</a> smart constructor.
data DescribeAddresses
DescribeAddresses' :: Maybe Text -> Maybe Natural -> DescribeAddresses

-- | HTTP requests are stateless. To identify what object comes "next" in
--   the list of <tt>ADDRESS</tt> objects, you have the option of
--   specifying a value for <tt>NextToken</tt> as the starting point for
--   your list of returned addresses.
[$sel:nextToken:DescribeAddresses'] :: DescribeAddresses -> Maybe Text

-- | The number of <tt>ADDRESS</tt> objects to return.
[$sel:maxResults:DescribeAddresses'] :: DescribeAddresses -> Maybe Natural

-- | Create a value of <a>DescribeAddresses</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeAddresses'</a>,
--   <a>describeAddresses_nextToken</a> - HTTP requests are stateless. To
--   identify what object comes "next" in the list of <tt>ADDRESS</tt>
--   objects, you have the option of specifying a value for
--   <tt>NextToken</tt> as the starting point for your list of returned
--   addresses.
--   
--   <a>$sel:maxResults:DescribeAddresses'</a>,
--   <a>describeAddresses_maxResults</a> - The number of <tt>ADDRESS</tt>
--   objects to return.
newDescribeAddresses :: DescribeAddresses

-- | HTTP requests are stateless. To identify what object comes "next" in
--   the list of <tt>ADDRESS</tt> objects, you have the option of
--   specifying a value for <tt>NextToken</tt> as the starting point for
--   your list of returned addresses.
describeAddresses_nextToken :: Lens' DescribeAddresses (Maybe Text)

-- | The number of <tt>ADDRESS</tt> objects to return.
describeAddresses_maxResults :: Lens' DescribeAddresses (Maybe Natural)

-- | <i>See:</i> <a>newDescribeAddressesResponse</a> smart constructor.
data DescribeAddressesResponse
DescribeAddressesResponse' :: Maybe [Address] -> Maybe Text -> Int -> DescribeAddressesResponse

-- | The Snow device shipping addresses that were created for this account.
[$sel:addresses:DescribeAddressesResponse'] :: DescribeAddressesResponse -> Maybe [Address]

-- | HTTP requests are stateless. If you use the automatically generated
--   <tt>NextToken</tt> value in your next <tt>DescribeAddresses</tt> call,
--   your list of returned addresses will start from this point in the
--   array.
[$sel:nextToken:DescribeAddressesResponse'] :: DescribeAddressesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeAddressesResponse'] :: DescribeAddressesResponse -> Int

-- | Create a value of <a>DescribeAddressesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:addresses:DescribeAddressesResponse'</a>,
--   <a>describeAddressesResponse_addresses</a> - The Snow device shipping
--   addresses that were created for this account.
--   
--   <a>$sel:nextToken:DescribeAddresses'</a>,
--   <a>describeAddressesResponse_nextToken</a> - HTTP requests are
--   stateless. If you use the automatically generated <tt>NextToken</tt>
--   value in your next <tt>DescribeAddresses</tt> call, your list of
--   returned addresses will start from this point in the array.
--   
--   <a>$sel:httpStatus:DescribeAddressesResponse'</a>,
--   <a>describeAddressesResponse_httpStatus</a> - The response's http
--   status code.
newDescribeAddressesResponse :: Int -> DescribeAddressesResponse

-- | The Snow device shipping addresses that were created for this account.
describeAddressesResponse_addresses :: Lens' DescribeAddressesResponse (Maybe [Address])

-- | HTTP requests are stateless. If you use the automatically generated
--   <tt>NextToken</tt> value in your next <tt>DescribeAddresses</tt> call,
--   your list of returned addresses will start from this point in the
--   array.
describeAddressesResponse_nextToken :: Lens' DescribeAddressesResponse (Maybe Text)

-- | The response's http status code.
describeAddressesResponse_httpStatus :: Lens' DescribeAddressesResponse Int
instance GHC.Generics.Generic Network.AWS.Snowball.DescribeAddresses.DescribeAddresses
instance GHC.Show.Show Network.AWS.Snowball.DescribeAddresses.DescribeAddresses
instance GHC.Read.Read Network.AWS.Snowball.DescribeAddresses.DescribeAddresses
instance GHC.Classes.Eq Network.AWS.Snowball.DescribeAddresses.DescribeAddresses
instance GHC.Generics.Generic Network.AWS.Snowball.DescribeAddresses.DescribeAddressesResponse
instance GHC.Show.Show Network.AWS.Snowball.DescribeAddresses.DescribeAddressesResponse
instance GHC.Read.Read Network.AWS.Snowball.DescribeAddresses.DescribeAddressesResponse
instance GHC.Classes.Eq Network.AWS.Snowball.DescribeAddresses.DescribeAddressesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Snowball.DescribeAddresses.DescribeAddresses
instance Control.DeepSeq.NFData Network.AWS.Snowball.DescribeAddresses.DescribeAddressesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Snowball.DescribeAddresses.DescribeAddresses
instance Data.Hashable.Class.Hashable Network.AWS.Snowball.DescribeAddresses.DescribeAddresses
instance Control.DeepSeq.NFData Network.AWS.Snowball.DescribeAddresses.DescribeAddresses
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Snowball.DescribeAddresses.DescribeAddresses
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Snowball.DescribeAddresses.DescribeAddresses
instance Network.AWS.Data.Path.ToPath Network.AWS.Snowball.DescribeAddresses.DescribeAddresses
instance Network.AWS.Data.Query.ToQuery Network.AWS.Snowball.DescribeAddresses.DescribeAddresses


-- | Takes an <tt>AddressId</tt> and returns specific details about that
--   address in the form of an <tt>Address</tt> object.
module Network.AWS.Snowball.DescribeAddress

-- | <i>See:</i> <a>newDescribeAddress</a> smart constructor.
data DescribeAddress
DescribeAddress' :: Text -> DescribeAddress

-- | The automatically generated ID for a specific address.
[$sel:addressId:DescribeAddress'] :: DescribeAddress -> Text

-- | Create a value of <a>DescribeAddress</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:addressId:DescribeAddress'</a>,
--   <a>describeAddress_addressId</a> - The automatically generated ID for
--   a specific address.
newDescribeAddress :: Text -> DescribeAddress

-- | The automatically generated ID for a specific address.
describeAddress_addressId :: Lens' DescribeAddress Text

-- | <i>See:</i> <a>newDescribeAddressResponse</a> smart constructor.
data DescribeAddressResponse
DescribeAddressResponse' :: Maybe Address -> Int -> DescribeAddressResponse

-- | The address that you want the Snow device(s) associated with a
--   specific job to be shipped to.
[$sel:address:DescribeAddressResponse'] :: DescribeAddressResponse -> Maybe Address

-- | The response's http status code.
[$sel:httpStatus:DescribeAddressResponse'] :: DescribeAddressResponse -> Int

-- | Create a value of <a>DescribeAddressResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:address:DescribeAddressResponse'</a>,
--   <a>describeAddressResponse_address</a> - The address that you want the
--   Snow device(s) associated with a specific job to be shipped to.
--   
--   <a>$sel:httpStatus:DescribeAddressResponse'</a>,
--   <a>describeAddressResponse_httpStatus</a> - The response's http status
--   code.
newDescribeAddressResponse :: Int -> DescribeAddressResponse

-- | The address that you want the Snow device(s) associated with a
--   specific job to be shipped to.
describeAddressResponse_address :: Lens' DescribeAddressResponse (Maybe Address)

-- | The response's http status code.
describeAddressResponse_httpStatus :: Lens' DescribeAddressResponse Int
instance GHC.Generics.Generic Network.AWS.Snowball.DescribeAddress.DescribeAddress
instance GHC.Show.Show Network.AWS.Snowball.DescribeAddress.DescribeAddress
instance GHC.Read.Read Network.AWS.Snowball.DescribeAddress.DescribeAddress
instance GHC.Classes.Eq Network.AWS.Snowball.DescribeAddress.DescribeAddress
instance GHC.Generics.Generic Network.AWS.Snowball.DescribeAddress.DescribeAddressResponse
instance GHC.Show.Show Network.AWS.Snowball.DescribeAddress.DescribeAddressResponse
instance GHC.Read.Read Network.AWS.Snowball.DescribeAddress.DescribeAddressResponse
instance GHC.Classes.Eq Network.AWS.Snowball.DescribeAddress.DescribeAddressResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Snowball.DescribeAddress.DescribeAddress
instance Control.DeepSeq.NFData Network.AWS.Snowball.DescribeAddress.DescribeAddressResponse
instance Data.Hashable.Class.Hashable Network.AWS.Snowball.DescribeAddress.DescribeAddress
instance Control.DeepSeq.NFData Network.AWS.Snowball.DescribeAddress.DescribeAddress
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Snowball.DescribeAddress.DescribeAddress
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Snowball.DescribeAddress.DescribeAddress
instance Network.AWS.Data.Path.ToPath Network.AWS.Snowball.DescribeAddress.DescribeAddress
instance Network.AWS.Data.Query.ToQuery Network.AWS.Snowball.DescribeAddress.DescribeAddress


-- | Creates a shipping label that will be used to return the Snow device
--   to AWS.
module Network.AWS.Snowball.CreateReturnShippingLabel

-- | <i>See:</i> <a>newCreateReturnShippingLabel</a> smart constructor.
data CreateReturnShippingLabel
CreateReturnShippingLabel' :: Maybe ShippingOption -> Text -> CreateReturnShippingLabel

-- | The shipping speed for a particular job. This speed doesn't dictate
--   how soon the device is returned to AWS. This speed represents how
--   quickly it moves to its destination while in transit. Regional
--   shipping speeds are as follows:
[$sel:shippingOption:CreateReturnShippingLabel'] :: CreateReturnShippingLabel -> Maybe ShippingOption

-- | The ID for a job that you want to create the return shipping label
--   for; for example, <tt>JID123e4567-e89b-12d3-a456-426655440000</tt>.
[$sel:jobId:CreateReturnShippingLabel'] :: CreateReturnShippingLabel -> Text

-- | Create a value of <a>CreateReturnShippingLabel</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:shippingOption:CreateReturnShippingLabel'</a>,
--   <a>createReturnShippingLabel_shippingOption</a> - The shipping speed
--   for a particular job. This speed doesn't dictate how soon the device
--   is returned to AWS. This speed represents how quickly it moves to its
--   destination while in transit. Regional shipping speeds are as follows:
--   
--   <a>$sel:jobId:CreateReturnShippingLabel'</a>,
--   <a>createReturnShippingLabel_jobId</a> - The ID for a job that you
--   want to create the return shipping label for; for example,
--   <tt>JID123e4567-e89b-12d3-a456-426655440000</tt>.
newCreateReturnShippingLabel :: Text -> CreateReturnShippingLabel

-- | The shipping speed for a particular job. This speed doesn't dictate
--   how soon the device is returned to AWS. This speed represents how
--   quickly it moves to its destination while in transit. Regional
--   shipping speeds are as follows:
createReturnShippingLabel_shippingOption :: Lens' CreateReturnShippingLabel (Maybe ShippingOption)

-- | The ID for a job that you want to create the return shipping label
--   for; for example, <tt>JID123e4567-e89b-12d3-a456-426655440000</tt>.
createReturnShippingLabel_jobId :: Lens' CreateReturnShippingLabel Text

-- | <i>See:</i> <a>newCreateReturnShippingLabelResponse</a> smart
--   constructor.
data CreateReturnShippingLabelResponse
CreateReturnShippingLabelResponse' :: Maybe ShippingLabelStatus -> Int -> CreateReturnShippingLabelResponse

-- | The status information of the task on a Snow device that is being
--   returned to AWS.
[$sel:status:CreateReturnShippingLabelResponse'] :: CreateReturnShippingLabelResponse -> Maybe ShippingLabelStatus

-- | The response's http status code.
[$sel:httpStatus:CreateReturnShippingLabelResponse'] :: CreateReturnShippingLabelResponse -> Int

-- | Create a value of <a>CreateReturnShippingLabelResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:CreateReturnShippingLabelResponse'</a>,
--   <a>createReturnShippingLabelResponse_status</a> - The status
--   information of the task on a Snow device that is being returned to
--   AWS.
--   
--   <a>$sel:httpStatus:CreateReturnShippingLabelResponse'</a>,
--   <a>createReturnShippingLabelResponse_httpStatus</a> - The response's
--   http status code.
newCreateReturnShippingLabelResponse :: Int -> CreateReturnShippingLabelResponse

-- | The status information of the task on a Snow device that is being
--   returned to AWS.
createReturnShippingLabelResponse_status :: Lens' CreateReturnShippingLabelResponse (Maybe ShippingLabelStatus)

-- | The response's http status code.
createReturnShippingLabelResponse_httpStatus :: Lens' CreateReturnShippingLabelResponse Int
instance GHC.Generics.Generic Network.AWS.Snowball.CreateReturnShippingLabel.CreateReturnShippingLabel
instance GHC.Show.Show Network.AWS.Snowball.CreateReturnShippingLabel.CreateReturnShippingLabel
instance GHC.Read.Read Network.AWS.Snowball.CreateReturnShippingLabel.CreateReturnShippingLabel
instance GHC.Classes.Eq Network.AWS.Snowball.CreateReturnShippingLabel.CreateReturnShippingLabel
instance GHC.Generics.Generic Network.AWS.Snowball.CreateReturnShippingLabel.CreateReturnShippingLabelResponse
instance GHC.Show.Show Network.AWS.Snowball.CreateReturnShippingLabel.CreateReturnShippingLabelResponse
instance GHC.Read.Read Network.AWS.Snowball.CreateReturnShippingLabel.CreateReturnShippingLabelResponse
instance GHC.Classes.Eq Network.AWS.Snowball.CreateReturnShippingLabel.CreateReturnShippingLabelResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Snowball.CreateReturnShippingLabel.CreateReturnShippingLabel
instance Control.DeepSeq.NFData Network.AWS.Snowball.CreateReturnShippingLabel.CreateReturnShippingLabelResponse
instance Data.Hashable.Class.Hashable Network.AWS.Snowball.CreateReturnShippingLabel.CreateReturnShippingLabel
instance Control.DeepSeq.NFData Network.AWS.Snowball.CreateReturnShippingLabel.CreateReturnShippingLabel
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Snowball.CreateReturnShippingLabel.CreateReturnShippingLabel
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Snowball.CreateReturnShippingLabel.CreateReturnShippingLabel
instance Network.AWS.Data.Path.ToPath Network.AWS.Snowball.CreateReturnShippingLabel.CreateReturnShippingLabel
instance Network.AWS.Data.Query.ToQuery Network.AWS.Snowball.CreateReturnShippingLabel.CreateReturnShippingLabel


-- | Creates a job with the long-term usage option for a device. The
--   long-term usage is a 1-year or 3-year long-term pricing type for the
--   device. You are billed upfront, and AWS provides discounts for
--   long-term pricing.
module Network.AWS.Snowball.CreateLongTermPricing

-- | <i>See:</i> <a>newCreateLongTermPricing</a> smart constructor.
data CreateLongTermPricing
CreateLongTermPricing' :: Maybe SnowballType -> Maybe Bool -> LongTermPricingType -> CreateLongTermPricing

-- | The type of AWS Snow Family device to use for the long-term pricing
--   job.
[$sel:snowballType:CreateLongTermPricing'] :: CreateLongTermPricing -> Maybe SnowballType

-- | Specifies whether the current long-term pricing type for the device
--   should be renewed.
[$sel:isLongTermPricingAutoRenew:CreateLongTermPricing'] :: CreateLongTermPricing -> Maybe Bool

-- | The type of long-term pricing option you want for the device, either
--   1-year or 3-year long-term pricing.
[$sel:longTermPricingType:CreateLongTermPricing'] :: CreateLongTermPricing -> LongTermPricingType

-- | Create a value of <a>CreateLongTermPricing</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:snowballType:CreateLongTermPricing'</a>,
--   <a>createLongTermPricing_snowballType</a> - The type of AWS Snow
--   Family device to use for the long-term pricing job.
--   
--   <a>$sel:isLongTermPricingAutoRenew:CreateLongTermPricing'</a>,
--   <a>createLongTermPricing_isLongTermPricingAutoRenew</a> - Specifies
--   whether the current long-term pricing type for the device should be
--   renewed.
--   
--   <a>$sel:longTermPricingType:CreateLongTermPricing'</a>,
--   <a>createLongTermPricing_longTermPricingType</a> - The type of
--   long-term pricing option you want for the device, either 1-year or
--   3-year long-term pricing.
newCreateLongTermPricing :: LongTermPricingType -> CreateLongTermPricing

-- | The type of AWS Snow Family device to use for the long-term pricing
--   job.
createLongTermPricing_snowballType :: Lens' CreateLongTermPricing (Maybe SnowballType)

-- | Specifies whether the current long-term pricing type for the device
--   should be renewed.
createLongTermPricing_isLongTermPricingAutoRenew :: Lens' CreateLongTermPricing (Maybe Bool)

-- | The type of long-term pricing option you want for the device, either
--   1-year or 3-year long-term pricing.
createLongTermPricing_longTermPricingType :: Lens' CreateLongTermPricing LongTermPricingType

-- | <i>See:</i> <a>newCreateLongTermPricingResponse</a> smart constructor.
data CreateLongTermPricingResponse
CreateLongTermPricingResponse' :: Maybe Text -> Int -> CreateLongTermPricingResponse

-- | The ID of the long-term pricing type for the device.
[$sel:longTermPricingId:CreateLongTermPricingResponse'] :: CreateLongTermPricingResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateLongTermPricingResponse'] :: CreateLongTermPricingResponse -> Int

-- | Create a value of <a>CreateLongTermPricingResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:longTermPricingId:CreateLongTermPricingResponse'</a>,
--   <a>createLongTermPricingResponse_longTermPricingId</a> - The ID of the
--   long-term pricing type for the device.
--   
--   <a>$sel:httpStatus:CreateLongTermPricingResponse'</a>,
--   <a>createLongTermPricingResponse_httpStatus</a> - The response's http
--   status code.
newCreateLongTermPricingResponse :: Int -> CreateLongTermPricingResponse

-- | The ID of the long-term pricing type for the device.
createLongTermPricingResponse_longTermPricingId :: Lens' CreateLongTermPricingResponse (Maybe Text)

-- | The response's http status code.
createLongTermPricingResponse_httpStatus :: Lens' CreateLongTermPricingResponse Int
instance GHC.Generics.Generic Network.AWS.Snowball.CreateLongTermPricing.CreateLongTermPricing
instance GHC.Show.Show Network.AWS.Snowball.CreateLongTermPricing.CreateLongTermPricing
instance GHC.Read.Read Network.AWS.Snowball.CreateLongTermPricing.CreateLongTermPricing
instance GHC.Classes.Eq Network.AWS.Snowball.CreateLongTermPricing.CreateLongTermPricing
instance GHC.Generics.Generic Network.AWS.Snowball.CreateLongTermPricing.CreateLongTermPricingResponse
instance GHC.Show.Show Network.AWS.Snowball.CreateLongTermPricing.CreateLongTermPricingResponse
instance GHC.Read.Read Network.AWS.Snowball.CreateLongTermPricing.CreateLongTermPricingResponse
instance GHC.Classes.Eq Network.AWS.Snowball.CreateLongTermPricing.CreateLongTermPricingResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Snowball.CreateLongTermPricing.CreateLongTermPricing
instance Control.DeepSeq.NFData Network.AWS.Snowball.CreateLongTermPricing.CreateLongTermPricingResponse
instance Data.Hashable.Class.Hashable Network.AWS.Snowball.CreateLongTermPricing.CreateLongTermPricing
instance Control.DeepSeq.NFData Network.AWS.Snowball.CreateLongTermPricing.CreateLongTermPricing
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Snowball.CreateLongTermPricing.CreateLongTermPricing
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Snowball.CreateLongTermPricing.CreateLongTermPricing
instance Network.AWS.Data.Path.ToPath Network.AWS.Snowball.CreateLongTermPricing.CreateLongTermPricing
instance Network.AWS.Data.Query.ToQuery Network.AWS.Snowball.CreateLongTermPricing.CreateLongTermPricing


-- | Creates a job to import or export data between Amazon S3 and your
--   on-premises data center. Your AWS account must have the right trust
--   policies and permissions in place to create a job for a Snow device.
--   If you're creating a job for a node in a cluster, you only need to
--   provide the <tt>clusterId</tt> value; the other job attributes are
--   inherited from the cluster.
--   
--   Only the Snowball; Edge device type is supported when ordering
--   clustered jobs.
--   
--   The device capacity is optional.
--   
--   Availability of device types differ by AWS Region. For more
--   information about Region availability, see <a>AWS Regional
--   Services</a>.
--   
--   <b>AWS Snow Family device types and their capacities.</b>
--   
--   <ul>
--   <li>Snow Family device type: <b>SNC1_SSD</b><ul><li>Capacity:
--   T14</li><li>Description: Snowcone</li></ul></li>
--   <li>Snow Family device type: <b>SNC1_HDD</b><ul><li>Capacity:
--   T8</li><li>Description: Snowcone</li></ul></li>
--   <li>Device type: <b>EDGE_S</b><ul><li>Capacity:
--   T98</li><li>Description: Snowball Edge Storage Optimized for data
--   transfer only</li></ul></li>
--   <li>Device type: <b>EDGE_CG</b><ul><li>Capacity:
--   T42</li><li>Description: Snowball Edge Compute Optimized with
--   GPU</li></ul></li>
--   <li>Device type: <b>EDGE_C</b><ul><li>Capacity:
--   T42</li><li>Description: Snowball Edge Compute Optimized without
--   GPU</li></ul></li>
--   <li>Device type: <b>EDGE</b><ul><li>Capacity:
--   T100</li><li>Description: Snowball Edge Storage Optimized with EC2
--   Compute</li></ul></li>
--   <li>Device type: <b>STANDARD</b><ul><li>Capacity:
--   T50</li><li>Description: Original Snowball deviceThis device is only
--   available in the Ningxia, Beijing, and Singapore AWS
--   Regions.</li></ul></li>
--   <li>Device type: <b>STANDARD</b><ul><li>Capacity:
--   T80</li><li>Description: Original Snowball deviceThis device is only
--   available in the Ningxia, Beijing, and Singapore AWS
--   Regions.</li></ul></li>
--   </ul>
module Network.AWS.Snowball.CreateJob

-- | <i>See:</i> <a>newCreateJob</a> smart constructor.
data CreateJob
CreateJob' :: Maybe JobType -> Maybe Text -> Maybe RemoteManagement -> Maybe Notification -> Maybe Text -> Maybe Text -> Maybe SnowballType -> Maybe Text -> Maybe ShippingOption -> Maybe JobResource -> Maybe OnDeviceServiceConfiguration -> Maybe Text -> Maybe DeviceConfiguration -> Maybe Text -> Maybe TaxDocuments -> Maybe Text -> Maybe SnowballCapacity -> CreateJob

-- | Defines the type of job that you're creating.
[$sel:jobType:CreateJob'] :: CreateJob -> Maybe JobType

-- | The <tt>KmsKeyARN</tt> that you want to associate with this job.
--   <tt>KmsKeyARN</tt>s are created using the <a>CreateKey</a> AWS Key
--   Management Service (KMS) API action.
[$sel:kmsKeyARN:CreateJob'] :: CreateJob -> Maybe Text

-- | Allows you to securely operate and manage Snowcone devices remotely
--   from outside of your internal network. When set to
--   <tt>INSTALLED_AUTOSTART</tt>, remote management will automatically be
--   available when the device arrives at your location. Otherwise, you
--   need to use the Snowball Client to manage the device.
[$sel:remoteManagement:CreateJob'] :: CreateJob -> Maybe RemoteManagement

-- | Defines the Amazon Simple Notification Service (Amazon SNS)
--   notification settings for this job.
[$sel:notification:CreateJob'] :: CreateJob -> Maybe Notification

-- | The forwarding address ID for a job. This field is not supported in
--   most Regions.
[$sel:forwardingAddressId:CreateJob'] :: CreateJob -> Maybe Text

-- | The ID for the address that you want the Snow device shipped to.
[$sel:addressId:CreateJob'] :: CreateJob -> Maybe Text

-- | The type of AWS Snow Family device to use for this job.
--   
--   For cluster jobs, AWS Snow Family currently supports only the
--   <tt>EDGE</tt> device type.
--   
--   The type of AWS Snow device to use for this job. Currently, the only
--   supported device type for cluster jobs is <tt>EDGE</tt>.
--   
--   For more information, see <a>Snowball Edge Device Options</a> in the
--   Snowball Edge Developer Guide.
--   
--   For more information, see
--   "https://docs.aws.amazon.com/snowball/latest/snowcone-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>
--   or
--   "https://docs.aws.amazon.com/snowball/latest/developer-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>.
[$sel:snowballType:CreateJob'] :: CreateJob -> Maybe SnowballType

-- | The ID of the long-term pricing type for the device.
[$sel:longTermPricingId:CreateJob'] :: CreateJob -> Maybe Text

-- | The shipping speed for this job. This speed doesn't dictate how soon
--   you'll get the Snow device, rather it represents how quickly the Snow
--   device moves to its destination while in transit. Regional shipping
--   speeds are as follows:
--   
--   <ul>
--   <li>In Australia, you have access to express shipping. Typically, Snow
--   devices shipped express are delivered in about a day.</li>
--   <li>In the European Union (EU), you have access to express shipping.
--   Typically, Snow devices shipped express are delivered in about a day.
--   In addition, most countries in the EU have access to standard
--   shipping, which typically takes less than a week, one way.</li>
--   <li>In India, Snow devices are delivered in one to seven days.</li>
--   <li>In the US, you have access to one-day shipping and two-day
--   shipping.</li>
--   </ul>
[$sel:shippingOption:CreateJob'] :: CreateJob -> Maybe ShippingOption

-- | Defines the Amazon S3 buckets associated with this job.
--   
--   With <tt>IMPORT</tt> jobs, you specify the bucket or buckets that your
--   transferred data will be imported into.
--   
--   With <tt>EXPORT</tt> jobs, you specify the bucket or buckets that your
--   transferred data will be exported from. Optionally, you can also
--   specify a <tt>KeyRange</tt> value. If you choose to export a range,
--   you define the length of the range by providing either an inclusive
--   <tt>BeginMarker</tt> value, an inclusive <tt>EndMarker</tt> value, or
--   both. Ranges are UTF-8 binary sorted.
[$sel:resources:CreateJob'] :: CreateJob -> Maybe JobResource

-- | Specifies the service or services on the Snow Family device that your
--   transferred data will be exported from or imported into. AWS Snow
--   Family supports Amazon S3 and NFS (Network File System).
[$sel:onDeviceServiceConfiguration:CreateJob'] :: CreateJob -> Maybe OnDeviceServiceConfiguration

-- | The ID of a cluster. If you're creating a job for a node in a cluster,
--   you need to provide only this <tt>clusterId</tt> value. The other job
--   attributes are inherited from the cluster.
[$sel:clusterId:CreateJob'] :: CreateJob -> Maybe Text

-- | Defines the device configuration for an AWS Snowcone job.
--   
--   For more information, see
--   "https://docs.aws.amazon.com/snowball/latest/snowcone-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>
--   or
--   "https://docs.aws.amazon.com/snowball/latest/developer-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>.
[$sel:deviceConfiguration:CreateJob'] :: CreateJob -> Maybe DeviceConfiguration

-- | Defines an optional description of this specific job, for example
--   <tt>Important Photos 2016-08-11</tt>.
[$sel:description:CreateJob'] :: CreateJob -> Maybe Text

-- | The tax documents required in your AWS Region.
[$sel:taxDocuments:CreateJob'] :: CreateJob -> Maybe TaxDocuments

-- | The <tt>RoleARN</tt> that you want to associate with this job.
--   <tt>RoleArn</tt>s are created using the <a>CreateRole</a> AWS Identity
--   and Access Management (IAM) API action.
[$sel:roleARN:CreateJob'] :: CreateJob -> Maybe Text

-- | If your job is being created in one of the US regions, you have the
--   option of specifying what size Snow device you'd like for this job. In
--   all other regions, Snowballs come with 80 TB in storage capacity.
--   
--   For more information, see
--   "https://docs.aws.amazon.com/snowball/latest/snowcone-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>
--   or
--   "https://docs.aws.amazon.com/snowball/latest/developer-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>.
[$sel:snowballCapacityPreference:CreateJob'] :: CreateJob -> Maybe SnowballCapacity

-- | Create a value of <a>CreateJob</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobType:CreateJob'</a>, <a>createJob_jobType</a> - Defines the
--   type of job that you're creating.
--   
--   <a>$sel:kmsKeyARN:CreateJob'</a>, <a>createJob_kmsKeyARN</a> - The
--   <tt>KmsKeyARN</tt> that you want to associate with this job.
--   <tt>KmsKeyARN</tt>s are created using the <a>CreateKey</a> AWS Key
--   Management Service (KMS) API action.
--   
--   <a>$sel:remoteManagement:CreateJob'</a>,
--   <a>createJob_remoteManagement</a> - Allows you to securely operate and
--   manage Snowcone devices remotely from outside of your internal
--   network. When set to <tt>INSTALLED_AUTOSTART</tt>, remote management
--   will automatically be available when the device arrives at your
--   location. Otherwise, you need to use the Snowball Client to manage the
--   device.
--   
--   <a>$sel:notification:CreateJob'</a>, <a>createJob_notification</a> -
--   Defines the Amazon Simple Notification Service (Amazon SNS)
--   notification settings for this job.
--   
--   <a>$sel:forwardingAddressId:CreateJob'</a>,
--   <a>createJob_forwardingAddressId</a> - The forwarding address ID for a
--   job. This field is not supported in most Regions.
--   
--   <a>$sel:addressId:CreateJob'</a>, <a>createJob_addressId</a> - The ID
--   for the address that you want the Snow device shipped to.
--   
--   <a>$sel:snowballType:CreateJob'</a>, <a>createJob_snowballType</a> -
--   The type of AWS Snow Family device to use for this job.
--   
--   For cluster jobs, AWS Snow Family currently supports only the
--   <tt>EDGE</tt> device type.
--   
--   The type of AWS Snow device to use for this job. Currently, the only
--   supported device type for cluster jobs is <tt>EDGE</tt>.
--   
--   For more information, see <a>Snowball Edge Device Options</a> in the
--   Snowball Edge Developer Guide.
--   
--   For more information, see
--   "https://docs.aws.amazon.com/snowball/latest/snowcone-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>
--   or
--   "https://docs.aws.amazon.com/snowball/latest/developer-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>.
--   
--   <a>$sel:longTermPricingId:CreateJob'</a>,
--   <a>createJob_longTermPricingId</a> - The ID of the long-term pricing
--   type for the device.
--   
--   <a>$sel:shippingOption:CreateJob'</a>, <a>createJob_shippingOption</a>
--   - The shipping speed for this job. This speed doesn't dictate how soon
--   you'll get the Snow device, rather it represents how quickly the Snow
--   device moves to its destination while in transit. Regional shipping
--   speeds are as follows:
--   
--   <ul>
--   <li>In Australia, you have access to express shipping. Typically, Snow
--   devices shipped express are delivered in about a day.</li>
--   <li>In the European Union (EU), you have access to express shipping.
--   Typically, Snow devices shipped express are delivered in about a day.
--   In addition, most countries in the EU have access to standard
--   shipping, which typically takes less than a week, one way.</li>
--   <li>In India, Snow devices are delivered in one to seven days.</li>
--   <li>In the US, you have access to one-day shipping and two-day
--   shipping.</li>
--   </ul>
--   
--   <a>$sel:resources:CreateJob'</a>, <a>createJob_resources</a> - Defines
--   the Amazon S3 buckets associated with this job.
--   
--   With <tt>IMPORT</tt> jobs, you specify the bucket or buckets that your
--   transferred data will be imported into.
--   
--   With <tt>EXPORT</tt> jobs, you specify the bucket or buckets that your
--   transferred data will be exported from. Optionally, you can also
--   specify a <tt>KeyRange</tt> value. If you choose to export a range,
--   you define the length of the range by providing either an inclusive
--   <tt>BeginMarker</tt> value, an inclusive <tt>EndMarker</tt> value, or
--   both. Ranges are UTF-8 binary sorted.
--   
--   <a>$sel:onDeviceServiceConfiguration:CreateJob'</a>,
--   <a>createJob_onDeviceServiceConfiguration</a> - Specifies the service
--   or services on the Snow Family device that your transferred data will
--   be exported from or imported into. AWS Snow Family supports Amazon S3
--   and NFS (Network File System).
--   
--   <a>$sel:clusterId:CreateJob'</a>, <a>createJob_clusterId</a> - The ID
--   of a cluster. If you're creating a job for a node in a cluster, you
--   need to provide only this <tt>clusterId</tt> value. The other job
--   attributes are inherited from the cluster.
--   
--   <a>$sel:deviceConfiguration:CreateJob'</a>,
--   <a>createJob_deviceConfiguration</a> - Defines the device
--   configuration for an AWS Snowcone job.
--   
--   For more information, see
--   "https://docs.aws.amazon.com/snowball/latest/snowcone-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>
--   or
--   "https://docs.aws.amazon.com/snowball/latest/developer-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>.
--   
--   <a>$sel:description:CreateJob'</a>, <a>createJob_description</a> -
--   Defines an optional description of this specific job, for example
--   <tt>Important Photos 2016-08-11</tt>.
--   
--   <a>$sel:taxDocuments:CreateJob'</a>, <a>createJob_taxDocuments</a> -
--   The tax documents required in your AWS Region.
--   
--   <a>$sel:roleARN:CreateJob'</a>, <a>createJob_roleARN</a> - The
--   <tt>RoleARN</tt> that you want to associate with this job.
--   <tt>RoleArn</tt>s are created using the <a>CreateRole</a> AWS Identity
--   and Access Management (IAM) API action.
--   
--   <a>$sel:snowballCapacityPreference:CreateJob'</a>,
--   <a>createJob_snowballCapacityPreference</a> - If your job is being
--   created in one of the US regions, you have the option of specifying
--   what size Snow device you'd like for this job. In all other regions,
--   Snowballs come with 80 TB in storage capacity.
--   
--   For more information, see
--   "https://docs.aws.amazon.com/snowball/latest/snowcone-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>
--   or
--   "https://docs.aws.amazon.com/snowball/latest/developer-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>.
newCreateJob :: CreateJob

-- | Defines the type of job that you're creating.
createJob_jobType :: Lens' CreateJob (Maybe JobType)

-- | The <tt>KmsKeyARN</tt> that you want to associate with this job.
--   <tt>KmsKeyARN</tt>s are created using the <a>CreateKey</a> AWS Key
--   Management Service (KMS) API action.
createJob_kmsKeyARN :: Lens' CreateJob (Maybe Text)

-- | Allows you to securely operate and manage Snowcone devices remotely
--   from outside of your internal network. When set to
--   <tt>INSTALLED_AUTOSTART</tt>, remote management will automatically be
--   available when the device arrives at your location. Otherwise, you
--   need to use the Snowball Client to manage the device.
createJob_remoteManagement :: Lens' CreateJob (Maybe RemoteManagement)

-- | Defines the Amazon Simple Notification Service (Amazon SNS)
--   notification settings for this job.
createJob_notification :: Lens' CreateJob (Maybe Notification)

-- | The forwarding address ID for a job. This field is not supported in
--   most Regions.
createJob_forwardingAddressId :: Lens' CreateJob (Maybe Text)

-- | The ID for the address that you want the Snow device shipped to.
createJob_addressId :: Lens' CreateJob (Maybe Text)

-- | The type of AWS Snow Family device to use for this job.
--   
--   For cluster jobs, AWS Snow Family currently supports only the
--   <tt>EDGE</tt> device type.
--   
--   The type of AWS Snow device to use for this job. Currently, the only
--   supported device type for cluster jobs is <tt>EDGE</tt>.
--   
--   For more information, see <a>Snowball Edge Device Options</a> in the
--   Snowball Edge Developer Guide.
--   
--   For more information, see
--   "https://docs.aws.amazon.com/snowball/latest/snowcone-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>
--   or
--   "https://docs.aws.amazon.com/snowball/latest/developer-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>.
createJob_snowballType :: Lens' CreateJob (Maybe SnowballType)

-- | The ID of the long-term pricing type for the device.
createJob_longTermPricingId :: Lens' CreateJob (Maybe Text)

-- | The shipping speed for this job. This speed doesn't dictate how soon
--   you'll get the Snow device, rather it represents how quickly the Snow
--   device moves to its destination while in transit. Regional shipping
--   speeds are as follows:
--   
--   <ul>
--   <li>In Australia, you have access to express shipping. Typically, Snow
--   devices shipped express are delivered in about a day.</li>
--   <li>In the European Union (EU), you have access to express shipping.
--   Typically, Snow devices shipped express are delivered in about a day.
--   In addition, most countries in the EU have access to standard
--   shipping, which typically takes less than a week, one way.</li>
--   <li>In India, Snow devices are delivered in one to seven days.</li>
--   <li>In the US, you have access to one-day shipping and two-day
--   shipping.</li>
--   </ul>
createJob_shippingOption :: Lens' CreateJob (Maybe ShippingOption)

-- | Defines the Amazon S3 buckets associated with this job.
--   
--   With <tt>IMPORT</tt> jobs, you specify the bucket or buckets that your
--   transferred data will be imported into.
--   
--   With <tt>EXPORT</tt> jobs, you specify the bucket or buckets that your
--   transferred data will be exported from. Optionally, you can also
--   specify a <tt>KeyRange</tt> value. If you choose to export a range,
--   you define the length of the range by providing either an inclusive
--   <tt>BeginMarker</tt> value, an inclusive <tt>EndMarker</tt> value, or
--   both. Ranges are UTF-8 binary sorted.
createJob_resources :: Lens' CreateJob (Maybe JobResource)

-- | Specifies the service or services on the Snow Family device that your
--   transferred data will be exported from or imported into. AWS Snow
--   Family supports Amazon S3 and NFS (Network File System).
createJob_onDeviceServiceConfiguration :: Lens' CreateJob (Maybe OnDeviceServiceConfiguration)

-- | The ID of a cluster. If you're creating a job for a node in a cluster,
--   you need to provide only this <tt>clusterId</tt> value. The other job
--   attributes are inherited from the cluster.
createJob_clusterId :: Lens' CreateJob (Maybe Text)

-- | Defines the device configuration for an AWS Snowcone job.
--   
--   For more information, see
--   "https://docs.aws.amazon.com/snowball/latest/snowcone-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>
--   or
--   "https://docs.aws.amazon.com/snowball/latest/developer-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>.
createJob_deviceConfiguration :: Lens' CreateJob (Maybe DeviceConfiguration)

-- | Defines an optional description of this specific job, for example
--   <tt>Important Photos 2016-08-11</tt>.
createJob_description :: Lens' CreateJob (Maybe Text)

-- | The tax documents required in your AWS Region.
createJob_taxDocuments :: Lens' CreateJob (Maybe TaxDocuments)

-- | The <tt>RoleARN</tt> that you want to associate with this job.
--   <tt>RoleArn</tt>s are created using the <a>CreateRole</a> AWS Identity
--   and Access Management (IAM) API action.
createJob_roleARN :: Lens' CreateJob (Maybe Text)

-- | If your job is being created in one of the US regions, you have the
--   option of specifying what size Snow device you'd like for this job. In
--   all other regions, Snowballs come with 80 TB in storage capacity.
--   
--   For more information, see
--   "https://docs.aws.amazon.com/snowball/latest/snowcone-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>
--   or
--   "https://docs.aws.amazon.com/snowball/latest/developer-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>.
createJob_snowballCapacityPreference :: Lens' CreateJob (Maybe SnowballCapacity)

-- | <i>See:</i> <a>newCreateJobResponse</a> smart constructor.
data CreateJobResponse
CreateJobResponse' :: Maybe Text -> Int -> CreateJobResponse

-- | The automatically generated ID for a job, for example
--   <tt>JID123e4567-e89b-12d3-a456-426655440000</tt>.
[$sel:jobId:CreateJobResponse'] :: CreateJobResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateJobResponse'] :: CreateJobResponse -> Int

-- | Create a value of <a>CreateJobResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:CreateJobResponse'</a>, <a>createJobResponse_jobId</a> -
--   The automatically generated ID for a job, for example
--   <tt>JID123e4567-e89b-12d3-a456-426655440000</tt>.
--   
--   <a>$sel:httpStatus:CreateJobResponse'</a>,
--   <a>createJobResponse_httpStatus</a> - The response's http status code.
newCreateJobResponse :: Int -> CreateJobResponse

-- | The automatically generated ID for a job, for example
--   <tt>JID123e4567-e89b-12d3-a456-426655440000</tt>.
createJobResponse_jobId :: Lens' CreateJobResponse (Maybe Text)

-- | The response's http status code.
createJobResponse_httpStatus :: Lens' CreateJobResponse Int
instance GHC.Generics.Generic Network.AWS.Snowball.CreateJob.CreateJob
instance GHC.Show.Show Network.AWS.Snowball.CreateJob.CreateJob
instance GHC.Read.Read Network.AWS.Snowball.CreateJob.CreateJob
instance GHC.Classes.Eq Network.AWS.Snowball.CreateJob.CreateJob
instance GHC.Generics.Generic Network.AWS.Snowball.CreateJob.CreateJobResponse
instance GHC.Show.Show Network.AWS.Snowball.CreateJob.CreateJobResponse
instance GHC.Read.Read Network.AWS.Snowball.CreateJob.CreateJobResponse
instance GHC.Classes.Eq Network.AWS.Snowball.CreateJob.CreateJobResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Snowball.CreateJob.CreateJob
instance Control.DeepSeq.NFData Network.AWS.Snowball.CreateJob.CreateJobResponse
instance Data.Hashable.Class.Hashable Network.AWS.Snowball.CreateJob.CreateJob
instance Control.DeepSeq.NFData Network.AWS.Snowball.CreateJob.CreateJob
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Snowball.CreateJob.CreateJob
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Snowball.CreateJob.CreateJob
instance Network.AWS.Data.Path.ToPath Network.AWS.Snowball.CreateJob.CreateJob
instance Network.AWS.Data.Query.ToQuery Network.AWS.Snowball.CreateJob.CreateJob


-- | Creates an empty cluster. Each cluster supports five nodes. You use
--   the CreateJob action separately to create the jobs for each of these
--   nodes. The cluster does not ship until these five node jobs have been
--   created.
module Network.AWS.Snowball.CreateCluster

-- | <i>See:</i> <a>newCreateCluster</a> smart constructor.
data CreateCluster
CreateCluster' :: Maybe Text -> Maybe RemoteManagement -> Maybe Notification -> Maybe Text -> Maybe OnDeviceServiceConfiguration -> Maybe Text -> Maybe TaxDocuments -> JobType -> JobResource -> Text -> Text -> SnowballType -> ShippingOption -> CreateCluster

-- | The <tt>KmsKeyARN</tt> value that you want to associate with this
--   cluster. <tt>KmsKeyARN</tt> values are created by using the
--   <a>CreateKey</a> API action in AWS Key Management Service (AWS KMS).
[$sel:kmsKeyARN:CreateCluster'] :: CreateCluster -> Maybe Text

-- | Allows you to securely operate and manage Snow devices in a cluster
--   remotely from outside of your internal network. When set to
--   <tt>INSTALLED_AUTOSTART</tt>, remote management will automatically be
--   available when the device arrives at your location. Otherwise, you
--   need to use the Snowball Client to manage the device.
[$sel:remoteManagement:CreateCluster'] :: CreateCluster -> Maybe RemoteManagement

-- | The Amazon Simple Notification Service (Amazon SNS) notification
--   settings for this cluster.
[$sel:notification:CreateCluster'] :: CreateCluster -> Maybe Notification

-- | The forwarding address ID for a cluster. This field is not supported
--   in most regions.
[$sel:forwardingAddressId:CreateCluster'] :: CreateCluster -> Maybe Text

-- | Specifies the service or services on the Snow Family device that your
--   transferred data will be exported from or imported into. AWS Snow
--   Family supports Amazon S3 and NFS (Network File System).
[$sel:onDeviceServiceConfiguration:CreateCluster'] :: CreateCluster -> Maybe OnDeviceServiceConfiguration

-- | An optional description of this specific cluster, for example
--   <tt>Environmental Data Cluster-01</tt>.
[$sel:description:CreateCluster'] :: CreateCluster -> Maybe Text

-- | The tax documents required in your AWS Region.
[$sel:taxDocuments:CreateCluster'] :: CreateCluster -> Maybe TaxDocuments

-- | The type of job for this cluster. Currently, the only job type
--   supported for clusters is <tt>LOCAL_USE</tt>.
--   
--   For more information, see
--   "https://docs.aws.amazon.com/snowball/latest/snowcone-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>
--   or
--   "https://docs.aws.amazon.com/snowball/latest/developer-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>.
[$sel:jobType:CreateCluster'] :: CreateCluster -> JobType

-- | The resources associated with the cluster job. These resources include
--   Amazon S3 buckets and optional AWS Lambda functions written in the
--   Python language.
[$sel:resources:CreateCluster'] :: CreateCluster -> JobResource

-- | The ID for the address that you want the cluster shipped to.
[$sel:addressId:CreateCluster'] :: CreateCluster -> Text

-- | The <tt>RoleARN</tt> that you want to associate with this cluster.
--   <tt>RoleArn</tt> values are created by using the <a>CreateRole</a> API
--   action in AWS Identity and Access Management (IAM).
[$sel:roleARN:CreateCluster'] :: CreateCluster -> Text

-- | The type of AWS Snow Family device to use for this cluster.
--   
--   For cluster jobs, AWS Snow Family currently supports only the
--   <tt>EDGE</tt> device type.
--   
--   For more information, see
--   "https://docs.aws.amazon.com/snowball/latest/snowcone-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>
--   or
--   "https://docs.aws.amazon.com/snowball/latest/developer-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>.
[$sel:snowballType:CreateCluster'] :: CreateCluster -> SnowballType

-- | The shipping speed for each node in this cluster. This speed doesn't
--   dictate how soon you'll get each Snowball Edge device, rather it
--   represents how quickly each device moves to its destination while in
--   transit. Regional shipping speeds are as follows:
--   
--   <ul>
--   <li>In Australia, you have access to express shipping. Typically, Snow
--   devices shipped express are delivered in about a day.</li>
--   <li>In the European Union (EU), you have access to express shipping.
--   Typically, Snow devices shipped express are delivered in about a day.
--   In addition, most countries in the EU have access to standard
--   shipping, which typically takes less than a week, one way.</li>
--   <li>In India, Snow devices are delivered in one to seven days.</li>
--   <li>In the United States of America (US), you have access to one-day
--   shipping and two-day shipping.</li>
--   <li>In Australia, you have access to express shipping. Typically,
--   devices shipped express are delivered in about a day.</li>
--   <li>In the European Union (EU), you have access to express shipping.
--   Typically, Snow devices shipped express are delivered in about a day.
--   In addition, most countries in the EU have access to standard
--   shipping, which typically takes less than a week, one way.</li>
--   <li>In India, Snow devices are delivered in one to seven days.</li>
--   <li>In the US, you have access to one-day shipping and two-day
--   shipping.</li>
--   </ul>
[$sel:shippingOption:CreateCluster'] :: CreateCluster -> ShippingOption

-- | Create a value of <a>CreateCluster</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:kmsKeyARN:CreateCluster'</a>, <a>createCluster_kmsKeyARN</a> -
--   The <tt>KmsKeyARN</tt> value that you want to associate with this
--   cluster. <tt>KmsKeyARN</tt> values are created by using the
--   <a>CreateKey</a> API action in AWS Key Management Service (AWS KMS).
--   
--   <a>$sel:remoteManagement:CreateCluster'</a>,
--   <a>createCluster_remoteManagement</a> - Allows you to securely operate
--   and manage Snow devices in a cluster remotely from outside of your
--   internal network. When set to <tt>INSTALLED_AUTOSTART</tt>, remote
--   management will automatically be available when the device arrives at
--   your location. Otherwise, you need to use the Snowball Client to
--   manage the device.
--   
--   <a>$sel:notification:CreateCluster'</a>,
--   <a>createCluster_notification</a> - The Amazon Simple Notification
--   Service (Amazon SNS) notification settings for this cluster.
--   
--   <a>$sel:forwardingAddressId:CreateCluster'</a>,
--   <a>createCluster_forwardingAddressId</a> - The forwarding address ID
--   for a cluster. This field is not supported in most regions.
--   
--   <a>$sel:onDeviceServiceConfiguration:CreateCluster'</a>,
--   <a>createCluster_onDeviceServiceConfiguration</a> - Specifies the
--   service or services on the Snow Family device that your transferred
--   data will be exported from or imported into. AWS Snow Family supports
--   Amazon S3 and NFS (Network File System).
--   
--   <a>$sel:description:CreateCluster'</a>,
--   <a>createCluster_description</a> - An optional description of this
--   specific cluster, for example <tt>Environmental Data Cluster-01</tt>.
--   
--   <a>$sel:taxDocuments:CreateCluster'</a>,
--   <a>createCluster_taxDocuments</a> - The tax documents required in your
--   AWS Region.
--   
--   <a>$sel:jobType:CreateCluster'</a>, <a>createCluster_jobType</a> - The
--   type of job for this cluster. Currently, the only job type supported
--   for clusters is <tt>LOCAL_USE</tt>.
--   
--   For more information, see
--   "https://docs.aws.amazon.com/snowball/latest/snowcone-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>
--   or
--   "https://docs.aws.amazon.com/snowball/latest/developer-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>.
--   
--   <a>$sel:resources:CreateCluster'</a>, <a>createCluster_resources</a> -
--   The resources associated with the cluster job. These resources include
--   Amazon S3 buckets and optional AWS Lambda functions written in the
--   Python language.
--   
--   <a>$sel:addressId:CreateCluster'</a>, <a>createCluster_addressId</a> -
--   The ID for the address that you want the cluster shipped to.
--   
--   <a>$sel:roleARN:CreateCluster'</a>, <a>createCluster_roleARN</a> - The
--   <tt>RoleARN</tt> that you want to associate with this cluster.
--   <tt>RoleArn</tt> values are created by using the <a>CreateRole</a> API
--   action in AWS Identity and Access Management (IAM).
--   
--   <a>$sel:snowballType:CreateCluster'</a>,
--   <a>createCluster_snowballType</a> - The type of AWS Snow Family device
--   to use for this cluster.
--   
--   For cluster jobs, AWS Snow Family currently supports only the
--   <tt>EDGE</tt> device type.
--   
--   For more information, see
--   "https://docs.aws.amazon.com/snowball/latest/snowcone-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>
--   or
--   "https://docs.aws.amazon.com/snowball/latest/developer-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>.
--   
--   <a>$sel:shippingOption:CreateCluster'</a>,
--   <a>createCluster_shippingOption</a> - The shipping speed for each node
--   in this cluster. This speed doesn't dictate how soon you'll get each
--   Snowball Edge device, rather it represents how quickly each device
--   moves to its destination while in transit. Regional shipping speeds
--   are as follows:
--   
--   <ul>
--   <li>In Australia, you have access to express shipping. Typically, Snow
--   devices shipped express are delivered in about a day.</li>
--   <li>In the European Union (EU), you have access to express shipping.
--   Typically, Snow devices shipped express are delivered in about a day.
--   In addition, most countries in the EU have access to standard
--   shipping, which typically takes less than a week, one way.</li>
--   <li>In India, Snow devices are delivered in one to seven days.</li>
--   <li>In the United States of America (US), you have access to one-day
--   shipping and two-day shipping.</li>
--   <li>In Australia, you have access to express shipping. Typically,
--   devices shipped express are delivered in about a day.</li>
--   <li>In the European Union (EU), you have access to express shipping.
--   Typically, Snow devices shipped express are delivered in about a day.
--   In addition, most countries in the EU have access to standard
--   shipping, which typically takes less than a week, one way.</li>
--   <li>In India, Snow devices are delivered in one to seven days.</li>
--   <li>In the US, you have access to one-day shipping and two-day
--   shipping.</li>
--   </ul>
newCreateCluster :: JobType -> JobResource -> Text -> Text -> SnowballType -> ShippingOption -> CreateCluster

-- | The <tt>KmsKeyARN</tt> value that you want to associate with this
--   cluster. <tt>KmsKeyARN</tt> values are created by using the
--   <a>CreateKey</a> API action in AWS Key Management Service (AWS KMS).
createCluster_kmsKeyARN :: Lens' CreateCluster (Maybe Text)

-- | Allows you to securely operate and manage Snow devices in a cluster
--   remotely from outside of your internal network. When set to
--   <tt>INSTALLED_AUTOSTART</tt>, remote management will automatically be
--   available when the device arrives at your location. Otherwise, you
--   need to use the Snowball Client to manage the device.
createCluster_remoteManagement :: Lens' CreateCluster (Maybe RemoteManagement)

-- | The Amazon Simple Notification Service (Amazon SNS) notification
--   settings for this cluster.
createCluster_notification :: Lens' CreateCluster (Maybe Notification)

-- | The forwarding address ID for a cluster. This field is not supported
--   in most regions.
createCluster_forwardingAddressId :: Lens' CreateCluster (Maybe Text)

-- | Specifies the service or services on the Snow Family device that your
--   transferred data will be exported from or imported into. AWS Snow
--   Family supports Amazon S3 and NFS (Network File System).
createCluster_onDeviceServiceConfiguration :: Lens' CreateCluster (Maybe OnDeviceServiceConfiguration)

-- | An optional description of this specific cluster, for example
--   <tt>Environmental Data Cluster-01</tt>.
createCluster_description :: Lens' CreateCluster (Maybe Text)

-- | The tax documents required in your AWS Region.
createCluster_taxDocuments :: Lens' CreateCluster (Maybe TaxDocuments)

-- | The type of job for this cluster. Currently, the only job type
--   supported for clusters is <tt>LOCAL_USE</tt>.
--   
--   For more information, see
--   "https://docs.aws.amazon.com/snowball/latest/snowcone-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>
--   or
--   "https://docs.aws.amazon.com/snowball/latest/developer-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>.
createCluster_jobType :: Lens' CreateCluster JobType

-- | The resources associated with the cluster job. These resources include
--   Amazon S3 buckets and optional AWS Lambda functions written in the
--   Python language.
createCluster_resources :: Lens' CreateCluster JobResource

-- | The ID for the address that you want the cluster shipped to.
createCluster_addressId :: Lens' CreateCluster Text

-- | The <tt>RoleARN</tt> that you want to associate with this cluster.
--   <tt>RoleArn</tt> values are created by using the <a>CreateRole</a> API
--   action in AWS Identity and Access Management (IAM).
createCluster_roleARN :: Lens' CreateCluster Text

-- | The type of AWS Snow Family device to use for this cluster.
--   
--   For cluster jobs, AWS Snow Family currently supports only the
--   <tt>EDGE</tt> device type.
--   
--   For more information, see
--   "https://docs.aws.amazon.com/snowball/latest/snowcone-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>
--   or
--   "https://docs.aws.amazon.com/snowball/latest/developer-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>.
createCluster_snowballType :: Lens' CreateCluster SnowballType

-- | The shipping speed for each node in this cluster. This speed doesn't
--   dictate how soon you'll get each Snowball Edge device, rather it
--   represents how quickly each device moves to its destination while in
--   transit. Regional shipping speeds are as follows:
--   
--   <ul>
--   <li>In Australia, you have access to express shipping. Typically, Snow
--   devices shipped express are delivered in about a day.</li>
--   <li>In the European Union (EU), you have access to express shipping.
--   Typically, Snow devices shipped express are delivered in about a day.
--   In addition, most countries in the EU have access to standard
--   shipping, which typically takes less than a week, one way.</li>
--   <li>In India, Snow devices are delivered in one to seven days.</li>
--   <li>In the United States of America (US), you have access to one-day
--   shipping and two-day shipping.</li>
--   <li>In Australia, you have access to express shipping. Typically,
--   devices shipped express are delivered in about a day.</li>
--   <li>In the European Union (EU), you have access to express shipping.
--   Typically, Snow devices shipped express are delivered in about a day.
--   In addition, most countries in the EU have access to standard
--   shipping, which typically takes less than a week, one way.</li>
--   <li>In India, Snow devices are delivered in one to seven days.</li>
--   <li>In the US, you have access to one-day shipping and two-day
--   shipping.</li>
--   </ul>
createCluster_shippingOption :: Lens' CreateCluster ShippingOption

-- | <i>See:</i> <a>newCreateClusterResponse</a> smart constructor.
data CreateClusterResponse
CreateClusterResponse' :: Maybe Text -> Int -> CreateClusterResponse

-- | The automatically generated ID for a cluster.
[$sel:clusterId:CreateClusterResponse'] :: CreateClusterResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateClusterResponse'] :: CreateClusterResponse -> Int

-- | Create a value of <a>CreateClusterResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterId:CreateClusterResponse'</a>,
--   <a>createClusterResponse_clusterId</a> - The automatically generated
--   ID for a cluster.
--   
--   <a>$sel:httpStatus:CreateClusterResponse'</a>,
--   <a>createClusterResponse_httpStatus</a> - The response's http status
--   code.
newCreateClusterResponse :: Int -> CreateClusterResponse

-- | The automatically generated ID for a cluster.
createClusterResponse_clusterId :: Lens' CreateClusterResponse (Maybe Text)

-- | The response's http status code.
createClusterResponse_httpStatus :: Lens' CreateClusterResponse Int
instance GHC.Generics.Generic Network.AWS.Snowball.CreateCluster.CreateCluster
instance GHC.Show.Show Network.AWS.Snowball.CreateCluster.CreateCluster
instance GHC.Read.Read Network.AWS.Snowball.CreateCluster.CreateCluster
instance GHC.Classes.Eq Network.AWS.Snowball.CreateCluster.CreateCluster
instance GHC.Generics.Generic Network.AWS.Snowball.CreateCluster.CreateClusterResponse
instance GHC.Show.Show Network.AWS.Snowball.CreateCluster.CreateClusterResponse
instance GHC.Read.Read Network.AWS.Snowball.CreateCluster.CreateClusterResponse
instance GHC.Classes.Eq Network.AWS.Snowball.CreateCluster.CreateClusterResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Snowball.CreateCluster.CreateCluster
instance Control.DeepSeq.NFData Network.AWS.Snowball.CreateCluster.CreateClusterResponse
instance Data.Hashable.Class.Hashable Network.AWS.Snowball.CreateCluster.CreateCluster
instance Control.DeepSeq.NFData Network.AWS.Snowball.CreateCluster.CreateCluster
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Snowball.CreateCluster.CreateCluster
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Snowball.CreateCluster.CreateCluster
instance Network.AWS.Data.Path.ToPath Network.AWS.Snowball.CreateCluster.CreateCluster
instance Network.AWS.Data.Query.ToQuery Network.AWS.Snowball.CreateCluster.CreateCluster


-- | Creates an address for a Snow device to be shipped to. In most
--   regions, addresses are validated at the time of creation. The address
--   you provide must be located within the serviceable area of your
--   region. If the address is invalid or unsupported, then an exception is
--   thrown.
module Network.AWS.Snowball.CreateAddress

-- | <i>See:</i> <a>newCreateAddress</a> smart constructor.
data CreateAddress
CreateAddress' :: Address -> CreateAddress

-- | The address that you want the Snow device shipped to.
[$sel:address:CreateAddress'] :: CreateAddress -> Address

-- | Create a value of <a>CreateAddress</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:address:CreateAddress'</a>, <a>createAddress_address</a> - The
--   address that you want the Snow device shipped to.
newCreateAddress :: Address -> CreateAddress

-- | The address that you want the Snow device shipped to.
createAddress_address :: Lens' CreateAddress Address

-- | <i>See:</i> <a>newCreateAddressResponse</a> smart constructor.
data CreateAddressResponse
CreateAddressResponse' :: Maybe Text -> Int -> CreateAddressResponse

-- | The automatically generated ID for a specific address. You'll use this
--   ID when you create a job to specify which address you want the Snow
--   device for that job shipped to.
[$sel:addressId:CreateAddressResponse'] :: CreateAddressResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateAddressResponse'] :: CreateAddressResponse -> Int

-- | Create a value of <a>CreateAddressResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:addressId:CreateAddressResponse'</a>,
--   <a>createAddressResponse_addressId</a> - The automatically generated
--   ID for a specific address. You'll use this ID when you create a job to
--   specify which address you want the Snow device for that job shipped
--   to.
--   
--   <a>$sel:httpStatus:CreateAddressResponse'</a>,
--   <a>createAddressResponse_httpStatus</a> - The response's http status
--   code.
newCreateAddressResponse :: Int -> CreateAddressResponse

-- | The automatically generated ID for a specific address. You'll use this
--   ID when you create a job to specify which address you want the Snow
--   device for that job shipped to.
createAddressResponse_addressId :: Lens' CreateAddressResponse (Maybe Text)

-- | The response's http status code.
createAddressResponse_httpStatus :: Lens' CreateAddressResponse Int
instance GHC.Generics.Generic Network.AWS.Snowball.CreateAddress.CreateAddress
instance GHC.Show.Show Network.AWS.Snowball.CreateAddress.CreateAddress
instance GHC.Read.Read Network.AWS.Snowball.CreateAddress.CreateAddress
instance GHC.Classes.Eq Network.AWS.Snowball.CreateAddress.CreateAddress
instance GHC.Generics.Generic Network.AWS.Snowball.CreateAddress.CreateAddressResponse
instance GHC.Show.Show Network.AWS.Snowball.CreateAddress.CreateAddressResponse
instance GHC.Read.Read Network.AWS.Snowball.CreateAddress.CreateAddressResponse
instance GHC.Classes.Eq Network.AWS.Snowball.CreateAddress.CreateAddressResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Snowball.CreateAddress.CreateAddress
instance Control.DeepSeq.NFData Network.AWS.Snowball.CreateAddress.CreateAddressResponse
instance Data.Hashable.Class.Hashable Network.AWS.Snowball.CreateAddress.CreateAddress
instance Control.DeepSeq.NFData Network.AWS.Snowball.CreateAddress.CreateAddress
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Snowball.CreateAddress.CreateAddress
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Snowball.CreateAddress.CreateAddress
instance Network.AWS.Data.Path.ToPath Network.AWS.Snowball.CreateAddress.CreateAddress
instance Network.AWS.Data.Query.ToQuery Network.AWS.Snowball.CreateAddress.CreateAddress


-- | Cancels the specified job. You can only cancel a job before its
--   <tt>JobState</tt> value changes to <tt>PreparingAppliance</tt>.
--   Requesting the <tt>ListJobs</tt> or <tt>DescribeJob</tt> action
--   returns a job's <tt>JobState</tt> as part of the response element data
--   returned.
module Network.AWS.Snowball.CancelJob

-- | <i>See:</i> <a>newCancelJob</a> smart constructor.
data CancelJob
CancelJob' :: Text -> CancelJob

-- | The 39-character job ID for the job that you want to cancel, for
--   example <tt>JID123e4567-e89b-12d3-a456-426655440000</tt>.
[$sel:jobId:CancelJob'] :: CancelJob -> Text

-- | Create a value of <a>CancelJob</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:CancelJob'</a>, <a>cancelJob_jobId</a> - The
--   39-character job ID for the job that you want to cancel, for example
--   <tt>JID123e4567-e89b-12d3-a456-426655440000</tt>.
newCancelJob :: Text -> CancelJob

-- | The 39-character job ID for the job that you want to cancel, for
--   example <tt>JID123e4567-e89b-12d3-a456-426655440000</tt>.
cancelJob_jobId :: Lens' CancelJob Text

-- | <i>See:</i> <a>newCancelJobResponse</a> smart constructor.
data CancelJobResponse
CancelJobResponse' :: Int -> CancelJobResponse

-- | The response's http status code.
[$sel:httpStatus:CancelJobResponse'] :: CancelJobResponse -> Int

-- | Create a value of <a>CancelJobResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CancelJobResponse'</a>,
--   <a>cancelJobResponse_httpStatus</a> - The response's http status code.
newCancelJobResponse :: Int -> CancelJobResponse

-- | The response's http status code.
cancelJobResponse_httpStatus :: Lens' CancelJobResponse Int
instance GHC.Generics.Generic Network.AWS.Snowball.CancelJob.CancelJob
instance GHC.Show.Show Network.AWS.Snowball.CancelJob.CancelJob
instance GHC.Read.Read Network.AWS.Snowball.CancelJob.CancelJob
instance GHC.Classes.Eq Network.AWS.Snowball.CancelJob.CancelJob
instance GHC.Generics.Generic Network.AWS.Snowball.CancelJob.CancelJobResponse
instance GHC.Show.Show Network.AWS.Snowball.CancelJob.CancelJobResponse
instance GHC.Read.Read Network.AWS.Snowball.CancelJob.CancelJobResponse
instance GHC.Classes.Eq Network.AWS.Snowball.CancelJob.CancelJobResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Snowball.CancelJob.CancelJob
instance Control.DeepSeq.NFData Network.AWS.Snowball.CancelJob.CancelJobResponse
instance Data.Hashable.Class.Hashable Network.AWS.Snowball.CancelJob.CancelJob
instance Control.DeepSeq.NFData Network.AWS.Snowball.CancelJob.CancelJob
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Snowball.CancelJob.CancelJob
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Snowball.CancelJob.CancelJob
instance Network.AWS.Data.Path.ToPath Network.AWS.Snowball.CancelJob.CancelJob
instance Network.AWS.Data.Query.ToQuery Network.AWS.Snowball.CancelJob.CancelJob


-- | Cancels a cluster job. You can only cancel a cluster job while it's in
--   the <tt>AwaitingQuorum</tt> status. You'll have at least an hour after
--   creating a cluster job to cancel it.
module Network.AWS.Snowball.CancelCluster

-- | <i>See:</i> <a>newCancelCluster</a> smart constructor.
data CancelCluster
CancelCluster' :: Text -> CancelCluster

-- | The 39-character ID for the cluster that you want to cancel, for
--   example <tt>CID123e4567-e89b-12d3-a456-426655440000</tt>.
[$sel:clusterId:CancelCluster'] :: CancelCluster -> Text

-- | Create a value of <a>CancelCluster</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterId:CancelCluster'</a>, <a>cancelCluster_clusterId</a> -
--   The 39-character ID for the cluster that you want to cancel, for
--   example <tt>CID123e4567-e89b-12d3-a456-426655440000</tt>.
newCancelCluster :: Text -> CancelCluster

-- | The 39-character ID for the cluster that you want to cancel, for
--   example <tt>CID123e4567-e89b-12d3-a456-426655440000</tt>.
cancelCluster_clusterId :: Lens' CancelCluster Text

-- | <i>See:</i> <a>newCancelClusterResponse</a> smart constructor.
data CancelClusterResponse
CancelClusterResponse' :: Int -> CancelClusterResponse

-- | The response's http status code.
[$sel:httpStatus:CancelClusterResponse'] :: CancelClusterResponse -> Int

-- | Create a value of <a>CancelClusterResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CancelClusterResponse'</a>,
--   <a>cancelClusterResponse_httpStatus</a> - The response's http status
--   code.
newCancelClusterResponse :: Int -> CancelClusterResponse

-- | The response's http status code.
cancelClusterResponse_httpStatus :: Lens' CancelClusterResponse Int
instance GHC.Generics.Generic Network.AWS.Snowball.CancelCluster.CancelCluster
instance GHC.Show.Show Network.AWS.Snowball.CancelCluster.CancelCluster
instance GHC.Read.Read Network.AWS.Snowball.CancelCluster.CancelCluster
instance GHC.Classes.Eq Network.AWS.Snowball.CancelCluster.CancelCluster
instance GHC.Generics.Generic Network.AWS.Snowball.CancelCluster.CancelClusterResponse
instance GHC.Show.Show Network.AWS.Snowball.CancelCluster.CancelClusterResponse
instance GHC.Read.Read Network.AWS.Snowball.CancelCluster.CancelClusterResponse
instance GHC.Classes.Eq Network.AWS.Snowball.CancelCluster.CancelClusterResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Snowball.CancelCluster.CancelCluster
instance Control.DeepSeq.NFData Network.AWS.Snowball.CancelCluster.CancelClusterResponse
instance Data.Hashable.Class.Hashable Network.AWS.Snowball.CancelCluster.CancelCluster
instance Control.DeepSeq.NFData Network.AWS.Snowball.CancelCluster.CancelCluster
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Snowball.CancelCluster.CancelCluster
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Snowball.CancelCluster.CancelCluster
instance Network.AWS.Data.Path.ToPath Network.AWS.Snowball.CancelCluster.CancelCluster
instance Network.AWS.Data.Query.ToQuery Network.AWS.Snowball.CancelCluster.CancelCluster


-- | While a cluster's <tt>ClusterState</tt> value is in the
--   <tt>AwaitingQuorum</tt> state, you can update some of the information
--   associated with a cluster. Once the cluster changes to a different job
--   state, usually 60 minutes after the cluster being created, this action
--   is no longer available.
module Network.AWS.Snowball.UpdateCluster

-- | <i>See:</i> <a>newUpdateCluster</a> smart constructor.
data UpdateCluster
UpdateCluster' :: Maybe Notification -> Maybe Text -> Maybe Text -> Maybe ShippingOption -> Maybe JobResource -> Maybe OnDeviceServiceConfiguration -> Maybe Text -> Maybe Text -> Text -> UpdateCluster

-- | The new or updated Notification object.
[$sel:notification:UpdateCluster'] :: UpdateCluster -> Maybe Notification

-- | The updated ID for the forwarding address for a cluster. This field is
--   not supported in most regions.
[$sel:forwardingAddressId:UpdateCluster'] :: UpdateCluster -> Maybe Text

-- | The ID of the updated Address object.
[$sel:addressId:UpdateCluster'] :: UpdateCluster -> Maybe Text

-- | The updated shipping option value of this cluster's ShippingDetails
--   object.
[$sel:shippingOption:UpdateCluster'] :: UpdateCluster -> Maybe ShippingOption

-- | The updated arrays of JobResource objects that can include updated
--   S3Resource objects or LambdaResource objects.
[$sel:resources:UpdateCluster'] :: UpdateCluster -> Maybe JobResource

-- | Specifies the service or services on the Snow Family device that your
--   transferred data will be exported from or imported into. AWS Snow
--   Family supports Amazon S3 and NFS (Network File System).
[$sel:onDeviceServiceConfiguration:UpdateCluster'] :: UpdateCluster -> Maybe OnDeviceServiceConfiguration

-- | The updated description of this cluster.
[$sel:description:UpdateCluster'] :: UpdateCluster -> Maybe Text

-- | The new role Amazon Resource Name (ARN) that you want to associate
--   with this cluster. To create a role ARN, use the <a>CreateRole</a> API
--   action in AWS Identity and Access Management (IAM).
[$sel:roleARN:UpdateCluster'] :: UpdateCluster -> Maybe Text

-- | The cluster ID of the cluster that you want to update, for example
--   <tt>CID123e4567-e89b-12d3-a456-426655440000</tt>.
[$sel:clusterId:UpdateCluster'] :: UpdateCluster -> Text

-- | Create a value of <a>UpdateCluster</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:notification:UpdateCluster'</a>,
--   <a>updateCluster_notification</a> - The new or updated Notification
--   object.
--   
--   <a>$sel:forwardingAddressId:UpdateCluster'</a>,
--   <a>updateCluster_forwardingAddressId</a> - The updated ID for the
--   forwarding address for a cluster. This field is not supported in most
--   regions.
--   
--   <a>$sel:addressId:UpdateCluster'</a>, <a>updateCluster_addressId</a> -
--   The ID of the updated Address object.
--   
--   <a>$sel:shippingOption:UpdateCluster'</a>,
--   <a>updateCluster_shippingOption</a> - The updated shipping option
--   value of this cluster's ShippingDetails object.
--   
--   <a>$sel:resources:UpdateCluster'</a>, <a>updateCluster_resources</a> -
--   The updated arrays of JobResource objects that can include updated
--   S3Resource objects or LambdaResource objects.
--   
--   <a>$sel:onDeviceServiceConfiguration:UpdateCluster'</a>,
--   <a>updateCluster_onDeviceServiceConfiguration</a> - Specifies the
--   service or services on the Snow Family device that your transferred
--   data will be exported from or imported into. AWS Snow Family supports
--   Amazon S3 and NFS (Network File System).
--   
--   <a>$sel:description:UpdateCluster'</a>,
--   <a>updateCluster_description</a> - The updated description of this
--   cluster.
--   
--   <a>$sel:roleARN:UpdateCluster'</a>, <a>updateCluster_roleARN</a> - The
--   new role Amazon Resource Name (ARN) that you want to associate with
--   this cluster. To create a role ARN, use the <a>CreateRole</a> API
--   action in AWS Identity and Access Management (IAM).
--   
--   <a>$sel:clusterId:UpdateCluster'</a>, <a>updateCluster_clusterId</a> -
--   The cluster ID of the cluster that you want to update, for example
--   <tt>CID123e4567-e89b-12d3-a456-426655440000</tt>.
newUpdateCluster :: Text -> UpdateCluster

-- | The new or updated Notification object.
updateCluster_notification :: Lens' UpdateCluster (Maybe Notification)

-- | The updated ID for the forwarding address for a cluster. This field is
--   not supported in most regions.
updateCluster_forwardingAddressId :: Lens' UpdateCluster (Maybe Text)

-- | The ID of the updated Address object.
updateCluster_addressId :: Lens' UpdateCluster (Maybe Text)

-- | The updated shipping option value of this cluster's ShippingDetails
--   object.
updateCluster_shippingOption :: Lens' UpdateCluster (Maybe ShippingOption)

-- | The updated arrays of JobResource objects that can include updated
--   S3Resource objects or LambdaResource objects.
updateCluster_resources :: Lens' UpdateCluster (Maybe JobResource)

-- | Specifies the service or services on the Snow Family device that your
--   transferred data will be exported from or imported into. AWS Snow
--   Family supports Amazon S3 and NFS (Network File System).
updateCluster_onDeviceServiceConfiguration :: Lens' UpdateCluster (Maybe OnDeviceServiceConfiguration)

-- | The updated description of this cluster.
updateCluster_description :: Lens' UpdateCluster (Maybe Text)

-- | The new role Amazon Resource Name (ARN) that you want to associate
--   with this cluster. To create a role ARN, use the <a>CreateRole</a> API
--   action in AWS Identity and Access Management (IAM).
updateCluster_roleARN :: Lens' UpdateCluster (Maybe Text)

-- | The cluster ID of the cluster that you want to update, for example
--   <tt>CID123e4567-e89b-12d3-a456-426655440000</tt>.
updateCluster_clusterId :: Lens' UpdateCluster Text

-- | <i>See:</i> <a>newUpdateClusterResponse</a> smart constructor.
data UpdateClusterResponse
UpdateClusterResponse' :: Int -> UpdateClusterResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateClusterResponse'] :: UpdateClusterResponse -> Int

-- | Create a value of <a>UpdateClusterResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateClusterResponse'</a>,
--   <a>updateClusterResponse_httpStatus</a> - The response's http status
--   code.
newUpdateClusterResponse :: Int -> UpdateClusterResponse

-- | The response's http status code.
updateClusterResponse_httpStatus :: Lens' UpdateClusterResponse Int
instance GHC.Generics.Generic Network.AWS.Snowball.UpdateCluster.UpdateCluster
instance GHC.Show.Show Network.AWS.Snowball.UpdateCluster.UpdateCluster
instance GHC.Read.Read Network.AWS.Snowball.UpdateCluster.UpdateCluster
instance GHC.Classes.Eq Network.AWS.Snowball.UpdateCluster.UpdateCluster
instance GHC.Generics.Generic Network.AWS.Snowball.UpdateCluster.UpdateClusterResponse
instance GHC.Show.Show Network.AWS.Snowball.UpdateCluster.UpdateClusterResponse
instance GHC.Read.Read Network.AWS.Snowball.UpdateCluster.UpdateClusterResponse
instance GHC.Classes.Eq Network.AWS.Snowball.UpdateCluster.UpdateClusterResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Snowball.UpdateCluster.UpdateCluster
instance Control.DeepSeq.NFData Network.AWS.Snowball.UpdateCluster.UpdateClusterResponse
instance Data.Hashable.Class.Hashable Network.AWS.Snowball.UpdateCluster.UpdateCluster
instance Control.DeepSeq.NFData Network.AWS.Snowball.UpdateCluster.UpdateCluster
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Snowball.UpdateCluster.UpdateCluster
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Snowball.UpdateCluster.UpdateCluster
instance Network.AWS.Data.Path.ToPath Network.AWS.Snowball.UpdateCluster.UpdateCluster
instance Network.AWS.Data.Query.ToQuery Network.AWS.Snowball.UpdateCluster.UpdateCluster


-- | While a job's <tt>JobState</tt> value is <tt>New</tt>, you can update
--   some of the information associated with a job. Once the job changes to
--   a different job state, usually within 60 minutes of the job being
--   created, this action is no longer available.
module Network.AWS.Snowball.UpdateJob

-- | <i>See:</i> <a>newUpdateJob</a> smart constructor.
data UpdateJob
UpdateJob' :: Maybe Notification -> Maybe Text -> Maybe Text -> Maybe ShippingOption -> Maybe JobResource -> Maybe OnDeviceServiceConfiguration -> Maybe Text -> Maybe Text -> Maybe SnowballCapacity -> Text -> UpdateJob

-- | The new or updated Notification object.
[$sel:notification:UpdateJob'] :: UpdateJob -> Maybe Notification

-- | The updated ID for the forwarding address for a job. This field is not
--   supported in most regions.
[$sel:forwardingAddressId:UpdateJob'] :: UpdateJob -> Maybe Text

-- | The ID of the updated Address object.
[$sel:addressId:UpdateJob'] :: UpdateJob -> Maybe Text

-- | The updated shipping option value of this job's ShippingDetails
--   object.
[$sel:shippingOption:UpdateJob'] :: UpdateJob -> Maybe ShippingOption

-- | The updated <tt>JobResource</tt> object, or the updated JobResource
--   object.
[$sel:resources:UpdateJob'] :: UpdateJob -> Maybe JobResource

-- | Specifies the service or services on the Snow Family device that your
--   transferred data will be exported from or imported into. AWS Snow
--   Family supports Amazon S3 and NFS (Network File System).
[$sel:onDeviceServiceConfiguration:UpdateJob'] :: UpdateJob -> Maybe OnDeviceServiceConfiguration

-- | The updated description of this job's JobMetadata object.
[$sel:description:UpdateJob'] :: UpdateJob -> Maybe Text

-- | The new role Amazon Resource Name (ARN) that you want to associate
--   with this job. To create a role ARN, use the <a>CreateRole</a>AWS
--   Identity and Access Management (IAM) API action.
[$sel:roleARN:UpdateJob'] :: UpdateJob -> Maybe Text

-- | The updated <tt>SnowballCapacityPreference</tt> of this job's
--   JobMetadata object. The 50 TB Snowballs are only available in the US
--   regions.
--   
--   For more information, see
--   "https://docs.aws.amazon.com/snowball/latest/snowcone-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>
--   or
--   "https://docs.aws.amazon.com/snowball/latest/developer-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>.
[$sel:snowballCapacityPreference:UpdateJob'] :: UpdateJob -> Maybe SnowballCapacity

-- | The job ID of the job that you want to update, for example
--   <tt>JID123e4567-e89b-12d3-a456-426655440000</tt>.
[$sel:jobId:UpdateJob'] :: UpdateJob -> Text

-- | Create a value of <a>UpdateJob</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:notification:UpdateJob'</a>, <a>updateJob_notification</a> -
--   The new or updated Notification object.
--   
--   <a>$sel:forwardingAddressId:UpdateJob'</a>,
--   <a>updateJob_forwardingAddressId</a> - The updated ID for the
--   forwarding address for a job. This field is not supported in most
--   regions.
--   
--   <a>$sel:addressId:UpdateJob'</a>, <a>updateJob_addressId</a> - The ID
--   of the updated Address object.
--   
--   <a>$sel:shippingOption:UpdateJob'</a>, <a>updateJob_shippingOption</a>
--   - The updated shipping option value of this job's ShippingDetails
--   object.
--   
--   <a>$sel:resources:UpdateJob'</a>, <a>updateJob_resources</a> - The
--   updated <tt>JobResource</tt> object, or the updated JobResource
--   object.
--   
--   <a>$sel:onDeviceServiceConfiguration:UpdateJob'</a>,
--   <a>updateJob_onDeviceServiceConfiguration</a> - Specifies the service
--   or services on the Snow Family device that your transferred data will
--   be exported from or imported into. AWS Snow Family supports Amazon S3
--   and NFS (Network File System).
--   
--   <a>$sel:description:UpdateJob'</a>, <a>updateJob_description</a> - The
--   updated description of this job's JobMetadata object.
--   
--   <a>$sel:roleARN:UpdateJob'</a>, <a>updateJob_roleARN</a> - The new
--   role Amazon Resource Name (ARN) that you want to associate with this
--   job. To create a role ARN, use the <a>CreateRole</a>AWS Identity and
--   Access Management (IAM) API action.
--   
--   <a>$sel:snowballCapacityPreference:UpdateJob'</a>,
--   <a>updateJob_snowballCapacityPreference</a> - The updated
--   <tt>SnowballCapacityPreference</tt> of this job's JobMetadata object.
--   The 50 TB Snowballs are only available in the US regions.
--   
--   For more information, see
--   "https://docs.aws.amazon.com/snowball/latest/snowcone-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>
--   or
--   "https://docs.aws.amazon.com/snowball/latest/developer-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>.
--   
--   <a>$sel:jobId:UpdateJob'</a>, <a>updateJob_jobId</a> - The job ID of
--   the job that you want to update, for example
--   <tt>JID123e4567-e89b-12d3-a456-426655440000</tt>.
newUpdateJob :: Text -> UpdateJob

-- | The new or updated Notification object.
updateJob_notification :: Lens' UpdateJob (Maybe Notification)

-- | The updated ID for the forwarding address for a job. This field is not
--   supported in most regions.
updateJob_forwardingAddressId :: Lens' UpdateJob (Maybe Text)

-- | The ID of the updated Address object.
updateJob_addressId :: Lens' UpdateJob (Maybe Text)

-- | The updated shipping option value of this job's ShippingDetails
--   object.
updateJob_shippingOption :: Lens' UpdateJob (Maybe ShippingOption)

-- | The updated <tt>JobResource</tt> object, or the updated JobResource
--   object.
updateJob_resources :: Lens' UpdateJob (Maybe JobResource)

-- | Specifies the service or services on the Snow Family device that your
--   transferred data will be exported from or imported into. AWS Snow
--   Family supports Amazon S3 and NFS (Network File System).
updateJob_onDeviceServiceConfiguration :: Lens' UpdateJob (Maybe OnDeviceServiceConfiguration)

-- | The updated description of this job's JobMetadata object.
updateJob_description :: Lens' UpdateJob (Maybe Text)

-- | The new role Amazon Resource Name (ARN) that you want to associate
--   with this job. To create a role ARN, use the <a>CreateRole</a>AWS
--   Identity and Access Management (IAM) API action.
updateJob_roleARN :: Lens' UpdateJob (Maybe Text)

-- | The updated <tt>SnowballCapacityPreference</tt> of this job's
--   JobMetadata object. The 50 TB Snowballs are only available in the US
--   regions.
--   
--   For more information, see
--   "https://docs.aws.amazon.com/snowball/latest/snowcone-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>
--   or
--   "https://docs.aws.amazon.com/snowball/latest/developer-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>.
updateJob_snowballCapacityPreference :: Lens' UpdateJob (Maybe SnowballCapacity)

-- | The job ID of the job that you want to update, for example
--   <tt>JID123e4567-e89b-12d3-a456-426655440000</tt>.
updateJob_jobId :: Lens' UpdateJob Text

-- | <i>See:</i> <a>newUpdateJobResponse</a> smart constructor.
data UpdateJobResponse
UpdateJobResponse' :: Int -> UpdateJobResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateJobResponse'] :: UpdateJobResponse -> Int

-- | Create a value of <a>UpdateJobResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateJobResponse'</a>,
--   <a>updateJobResponse_httpStatus</a> - The response's http status code.
newUpdateJobResponse :: Int -> UpdateJobResponse

-- | The response's http status code.
updateJobResponse_httpStatus :: Lens' UpdateJobResponse Int
instance GHC.Generics.Generic Network.AWS.Snowball.UpdateJob.UpdateJob
instance GHC.Show.Show Network.AWS.Snowball.UpdateJob.UpdateJob
instance GHC.Read.Read Network.AWS.Snowball.UpdateJob.UpdateJob
instance GHC.Classes.Eq Network.AWS.Snowball.UpdateJob.UpdateJob
instance GHC.Generics.Generic Network.AWS.Snowball.UpdateJob.UpdateJobResponse
instance GHC.Show.Show Network.AWS.Snowball.UpdateJob.UpdateJobResponse
instance GHC.Read.Read Network.AWS.Snowball.UpdateJob.UpdateJobResponse
instance GHC.Classes.Eq Network.AWS.Snowball.UpdateJob.UpdateJobResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Snowball.UpdateJob.UpdateJob
instance Control.DeepSeq.NFData Network.AWS.Snowball.UpdateJob.UpdateJobResponse
instance Data.Hashable.Class.Hashable Network.AWS.Snowball.UpdateJob.UpdateJob
instance Control.DeepSeq.NFData Network.AWS.Snowball.UpdateJob.UpdateJob
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Snowball.UpdateJob.UpdateJob
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Snowball.UpdateJob.UpdateJob
instance Network.AWS.Data.Path.ToPath Network.AWS.Snowball.UpdateJob.UpdateJob
instance Network.AWS.Data.Query.ToQuery Network.AWS.Snowball.UpdateJob.UpdateJob


-- | Updates the state when a shipment state changes to a different state.
module Network.AWS.Snowball.UpdateJobShipmentState

-- | <i>See:</i> <a>newUpdateJobShipmentState</a> smart constructor.
data UpdateJobShipmentState
UpdateJobShipmentState' :: Text -> ShipmentState -> UpdateJobShipmentState

-- | The job ID of the job whose shipment date you want to update, for
--   example <tt>JID123e4567-e89b-12d3-a456-426655440000</tt>.
[$sel:jobId:UpdateJobShipmentState'] :: UpdateJobShipmentState -> Text

-- | The state of a device when it is being shipped.
--   
--   Set to <tt>RECEIVED</tt> when the device arrives at your location.
--   
--   Set to <tt>RETURNED</tt> when you have returned the device to AWS.
[$sel:shipmentState:UpdateJobShipmentState'] :: UpdateJobShipmentState -> ShipmentState

-- | Create a value of <a>UpdateJobShipmentState</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:UpdateJobShipmentState'</a>,
--   <a>updateJobShipmentState_jobId</a> - The job ID of the job whose
--   shipment date you want to update, for example
--   <tt>JID123e4567-e89b-12d3-a456-426655440000</tt>.
--   
--   <a>$sel:shipmentState:UpdateJobShipmentState'</a>,
--   <a>updateJobShipmentState_shipmentState</a> - The state of a device
--   when it is being shipped.
--   
--   Set to <tt>RECEIVED</tt> when the device arrives at your location.
--   
--   Set to <tt>RETURNED</tt> when you have returned the device to AWS.
newUpdateJobShipmentState :: Text -> ShipmentState -> UpdateJobShipmentState

-- | The job ID of the job whose shipment date you want to update, for
--   example <tt>JID123e4567-e89b-12d3-a456-426655440000</tt>.
updateJobShipmentState_jobId :: Lens' UpdateJobShipmentState Text

-- | The state of a device when it is being shipped.
--   
--   Set to <tt>RECEIVED</tt> when the device arrives at your location.
--   
--   Set to <tt>RETURNED</tt> when you have returned the device to AWS.
updateJobShipmentState_shipmentState :: Lens' UpdateJobShipmentState ShipmentState

-- | <i>See:</i> <a>newUpdateJobShipmentStateResponse</a> smart
--   constructor.
data UpdateJobShipmentStateResponse
UpdateJobShipmentStateResponse' :: Int -> UpdateJobShipmentStateResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateJobShipmentStateResponse'] :: UpdateJobShipmentStateResponse -> Int

-- | Create a value of <a>UpdateJobShipmentStateResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateJobShipmentStateResponse'</a>,
--   <a>updateJobShipmentStateResponse_httpStatus</a> - The response's http
--   status code.
newUpdateJobShipmentStateResponse :: Int -> UpdateJobShipmentStateResponse

-- | The response's http status code.
updateJobShipmentStateResponse_httpStatus :: Lens' UpdateJobShipmentStateResponse Int
instance GHC.Generics.Generic Network.AWS.Snowball.UpdateJobShipmentState.UpdateJobShipmentState
instance GHC.Show.Show Network.AWS.Snowball.UpdateJobShipmentState.UpdateJobShipmentState
instance GHC.Read.Read Network.AWS.Snowball.UpdateJobShipmentState.UpdateJobShipmentState
instance GHC.Classes.Eq Network.AWS.Snowball.UpdateJobShipmentState.UpdateJobShipmentState
instance GHC.Generics.Generic Network.AWS.Snowball.UpdateJobShipmentState.UpdateJobShipmentStateResponse
instance GHC.Show.Show Network.AWS.Snowball.UpdateJobShipmentState.UpdateJobShipmentStateResponse
instance GHC.Read.Read Network.AWS.Snowball.UpdateJobShipmentState.UpdateJobShipmentStateResponse
instance GHC.Classes.Eq Network.AWS.Snowball.UpdateJobShipmentState.UpdateJobShipmentStateResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Snowball.UpdateJobShipmentState.UpdateJobShipmentState
instance Control.DeepSeq.NFData Network.AWS.Snowball.UpdateJobShipmentState.UpdateJobShipmentStateResponse
instance Data.Hashable.Class.Hashable Network.AWS.Snowball.UpdateJobShipmentState.UpdateJobShipmentState
instance Control.DeepSeq.NFData Network.AWS.Snowball.UpdateJobShipmentState.UpdateJobShipmentState
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Snowball.UpdateJobShipmentState.UpdateJobShipmentState
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Snowball.UpdateJobShipmentState.UpdateJobShipmentState
instance Network.AWS.Data.Path.ToPath Network.AWS.Snowball.UpdateJobShipmentState.UpdateJobShipmentState
instance Network.AWS.Data.Query.ToQuery Network.AWS.Snowball.UpdateJobShipmentState.UpdateJobShipmentState


-- | Updates the long-term pricing type.
module Network.AWS.Snowball.UpdateLongTermPricing

-- | <i>See:</i> <a>newUpdateLongTermPricing</a> smart constructor.
data UpdateLongTermPricing
UpdateLongTermPricing' :: Maybe Bool -> Maybe Text -> Text -> UpdateLongTermPricing

-- | If set to <tt>true</tt>, specifies that the current long-term pricing
--   type for the device should be automatically renewed before the
--   long-term pricing contract expires.
[$sel:isLongTermPricingAutoRenew:UpdateLongTermPricing'] :: UpdateLongTermPricing -> Maybe Bool

-- | Specifies that a device that is ordered with long-term pricing should
--   be replaced with a new device.
[$sel:replacementJob:UpdateLongTermPricing'] :: UpdateLongTermPricing -> Maybe Text

-- | The ID of the long-term pricing type for the device.
[$sel:longTermPricingId:UpdateLongTermPricing'] :: UpdateLongTermPricing -> Text

-- | Create a value of <a>UpdateLongTermPricing</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:isLongTermPricingAutoRenew:UpdateLongTermPricing'</a>,
--   <a>updateLongTermPricing_isLongTermPricingAutoRenew</a> - If set to
--   <tt>true</tt>, specifies that the current long-term pricing type for
--   the device should be automatically renewed before the long-term
--   pricing contract expires.
--   
--   <a>$sel:replacementJob:UpdateLongTermPricing'</a>,
--   <a>updateLongTermPricing_replacementJob</a> - Specifies that a device
--   that is ordered with long-term pricing should be replaced with a new
--   device.
--   
--   <a>$sel:longTermPricingId:UpdateLongTermPricing'</a>,
--   <a>updateLongTermPricing_longTermPricingId</a> - The ID of the
--   long-term pricing type for the device.
newUpdateLongTermPricing :: Text -> UpdateLongTermPricing

-- | If set to <tt>true</tt>, specifies that the current long-term pricing
--   type for the device should be automatically renewed before the
--   long-term pricing contract expires.
updateLongTermPricing_isLongTermPricingAutoRenew :: Lens' UpdateLongTermPricing (Maybe Bool)

-- | Specifies that a device that is ordered with long-term pricing should
--   be replaced with a new device.
updateLongTermPricing_replacementJob :: Lens' UpdateLongTermPricing (Maybe Text)

-- | The ID of the long-term pricing type for the device.
updateLongTermPricing_longTermPricingId :: Lens' UpdateLongTermPricing Text

-- | <i>See:</i> <a>newUpdateLongTermPricingResponse</a> smart constructor.
data UpdateLongTermPricingResponse
UpdateLongTermPricingResponse' :: Int -> UpdateLongTermPricingResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateLongTermPricingResponse'] :: UpdateLongTermPricingResponse -> Int

-- | Create a value of <a>UpdateLongTermPricingResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateLongTermPricingResponse'</a>,
--   <a>updateLongTermPricingResponse_httpStatus</a> - The response's http
--   status code.
newUpdateLongTermPricingResponse :: Int -> UpdateLongTermPricingResponse

-- | The response's http status code.
updateLongTermPricingResponse_httpStatus :: Lens' UpdateLongTermPricingResponse Int
instance GHC.Generics.Generic Network.AWS.Snowball.UpdateLongTermPricing.UpdateLongTermPricing
instance GHC.Show.Show Network.AWS.Snowball.UpdateLongTermPricing.UpdateLongTermPricing
instance GHC.Read.Read Network.AWS.Snowball.UpdateLongTermPricing.UpdateLongTermPricing
instance GHC.Classes.Eq Network.AWS.Snowball.UpdateLongTermPricing.UpdateLongTermPricing
instance GHC.Generics.Generic Network.AWS.Snowball.UpdateLongTermPricing.UpdateLongTermPricingResponse
instance GHC.Show.Show Network.AWS.Snowball.UpdateLongTermPricing.UpdateLongTermPricingResponse
instance GHC.Read.Read Network.AWS.Snowball.UpdateLongTermPricing.UpdateLongTermPricingResponse
instance GHC.Classes.Eq Network.AWS.Snowball.UpdateLongTermPricing.UpdateLongTermPricingResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Snowball.UpdateLongTermPricing.UpdateLongTermPricing
instance Control.DeepSeq.NFData Network.AWS.Snowball.UpdateLongTermPricing.UpdateLongTermPricingResponse
instance Data.Hashable.Class.Hashable Network.AWS.Snowball.UpdateLongTermPricing.UpdateLongTermPricing
instance Control.DeepSeq.NFData Network.AWS.Snowball.UpdateLongTermPricing.UpdateLongTermPricing
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Snowball.UpdateLongTermPricing.UpdateLongTermPricing
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Snowball.UpdateLongTermPricing.UpdateLongTermPricing
instance Network.AWS.Data.Path.ToPath Network.AWS.Snowball.UpdateLongTermPricing.UpdateLongTermPricing
instance Network.AWS.Data.Query.ToQuery Network.AWS.Snowball.UpdateLongTermPricing.UpdateLongTermPricing


module Network.AWS.Snowball.Lens

-- | The 39-character ID for the cluster that you want to cancel, for
--   example <tt>CID123e4567-e89b-12d3-a456-426655440000</tt>.
cancelCluster_clusterId :: Lens' CancelCluster Text

-- | The response's http status code.
cancelClusterResponse_httpStatus :: Lens' CancelClusterResponse Int

-- | The automatically generated ID for a cluster.
describeCluster_clusterId :: Lens' DescribeCluster Text

-- | Information about a specific cluster, including shipping information,
--   cluster status, and other important metadata.
describeClusterResponse_clusterMetadata :: Lens' DescribeClusterResponse (Maybe ClusterMetadata)

-- | The response's http status code.
describeClusterResponse_httpStatus :: Lens' DescribeClusterResponse Int

-- | The address that you want the Snow device shipped to.
createAddress_address :: Lens' CreateAddress Address

-- | The automatically generated ID for a specific address. You'll use this
--   ID when you create a job to specify which address you want the Snow
--   device for that job shipped to.
createAddressResponse_addressId :: Lens' CreateAddressResponse (Maybe Text)

-- | The response's http status code.
createAddressResponse_httpStatus :: Lens' CreateAddressResponse Int

-- | The shipping speed for a particular job. This speed doesn't dictate
--   how soon the device is returned to AWS. This speed represents how
--   quickly it moves to its destination while in transit. Regional
--   shipping speeds are as follows:
createReturnShippingLabel_shippingOption :: Lens' CreateReturnShippingLabel (Maybe ShippingOption)

-- | The ID for a job that you want to create the return shipping label
--   for; for example, <tt>JID123e4567-e89b-12d3-a456-426655440000</tt>.
createReturnShippingLabel_jobId :: Lens' CreateReturnShippingLabel Text

-- | The status information of the task on a Snow device that is being
--   returned to AWS.
createReturnShippingLabelResponse_status :: Lens' CreateReturnShippingLabelResponse (Maybe ShippingLabelStatus)

-- | The response's http status code.
createReturnShippingLabelResponse_httpStatus :: Lens' CreateReturnShippingLabelResponse Int

-- | The number of Snow devices that this account is currently using.
getSnowballUsageResponse_snowballsInUse :: Lens' GetSnowballUsageResponse (Maybe Int)

-- | The service limit for number of Snow devices this account can have at
--   once. The default service limit is 1 (one).
getSnowballUsageResponse_snowballLimit :: Lens' GetSnowballUsageResponse (Maybe Int)

-- | The response's http status code.
getSnowballUsageResponse_httpStatus :: Lens' GetSnowballUsageResponse Int

-- | HTTP requests are stateless. To identify what object comes "next" in
--   the list of <tt>ADDRESS</tt> objects, you have the option of
--   specifying a value for <tt>NextToken</tt> as the starting point for
--   your list of returned addresses.
describeAddresses_nextToken :: Lens' DescribeAddresses (Maybe Text)

-- | The number of <tt>ADDRESS</tt> objects to return.
describeAddresses_maxResults :: Lens' DescribeAddresses (Maybe Natural)

-- | The Snow device shipping addresses that were created for this account.
describeAddressesResponse_addresses :: Lens' DescribeAddressesResponse (Maybe [Address])

-- | HTTP requests are stateless. If you use the automatically generated
--   <tt>NextToken</tt> value in your next <tt>DescribeAddresses</tt> call,
--   your list of returned addresses will start from this point in the
--   array.
describeAddressesResponse_nextToken :: Lens' DescribeAddressesResponse (Maybe Text)

-- | The response's http status code.
describeAddressesResponse_httpStatus :: Lens' DescribeAddressesResponse Int

-- | HTTP requests are stateless. To identify what object comes "next" in
--   the list of compatible images, you can specify a value for
--   <tt>NextToken</tt> as the starting point for your list of returned
--   images.
listCompatibleImages_nextToken :: Lens' ListCompatibleImages (Maybe Text)

-- | The maximum number of results for the list of compatible images.
--   Currently, a Snowball Edge device can store 10 AMIs.
listCompatibleImages_maxResults :: Lens' ListCompatibleImages (Maybe Natural)

-- | A JSON-formatted object that describes a compatible AMI, including the
--   ID and name for a Snow device AMI.
listCompatibleImagesResponse_compatibleImages :: Lens' ListCompatibleImagesResponse (Maybe [CompatibleImage])

-- | Because HTTP requests are stateless, this is the starting point for
--   your next list of returned images.
listCompatibleImagesResponse_nextToken :: Lens' ListCompatibleImagesResponse (Maybe Text)

-- | The response's http status code.
listCompatibleImagesResponse_httpStatus :: Lens' ListCompatibleImagesResponse Int

-- | The type of AWS Snow Family device to use for the long-term pricing
--   job.
createLongTermPricing_snowballType :: Lens' CreateLongTermPricing (Maybe SnowballType)

-- | Specifies whether the current long-term pricing type for the device
--   should be renewed.
createLongTermPricing_isLongTermPricingAutoRenew :: Lens' CreateLongTermPricing (Maybe Bool)

-- | The type of long-term pricing option you want for the device, either
--   1-year or 3-year long-term pricing.
createLongTermPricing_longTermPricingType :: Lens' CreateLongTermPricing LongTermPricingType

-- | The ID of the long-term pricing type for the device.
createLongTermPricingResponse_longTermPricingId :: Lens' CreateLongTermPricingResponse (Maybe Text)

-- | The response's http status code.
createLongTermPricingResponse_httpStatus :: Lens' CreateLongTermPricingResponse Int

-- | The new or updated Notification object.
updateCluster_notification :: Lens' UpdateCluster (Maybe Notification)

-- | The updated ID for the forwarding address for a cluster. This field is
--   not supported in most regions.
updateCluster_forwardingAddressId :: Lens' UpdateCluster (Maybe Text)

-- | The ID of the updated Address object.
updateCluster_addressId :: Lens' UpdateCluster (Maybe Text)

-- | The updated shipping option value of this cluster's ShippingDetails
--   object.
updateCluster_shippingOption :: Lens' UpdateCluster (Maybe ShippingOption)

-- | The updated arrays of JobResource objects that can include updated
--   S3Resource objects or LambdaResource objects.
updateCluster_resources :: Lens' UpdateCluster (Maybe JobResource)

-- | Specifies the service or services on the Snow Family device that your
--   transferred data will be exported from or imported into. AWS Snow
--   Family supports Amazon S3 and NFS (Network File System).
updateCluster_onDeviceServiceConfiguration :: Lens' UpdateCluster (Maybe OnDeviceServiceConfiguration)

-- | The updated description of this cluster.
updateCluster_description :: Lens' UpdateCluster (Maybe Text)

-- | The new role Amazon Resource Name (ARN) that you want to associate
--   with this cluster. To create a role ARN, use the <a>CreateRole</a> API
--   action in AWS Identity and Access Management (IAM).
updateCluster_roleARN :: Lens' UpdateCluster (Maybe Text)

-- | The cluster ID of the cluster that you want to update, for example
--   <tt>CID123e4567-e89b-12d3-a456-426655440000</tt>.
updateCluster_clusterId :: Lens' UpdateCluster Text

-- | The response's http status code.
updateClusterResponse_httpStatus :: Lens' UpdateClusterResponse Int

-- | The ID for a job that you want to get the software update file for,
--   for example <tt>JID123e4567-e89b-12d3-a456-426655440000</tt>.
getSoftwareUpdates_jobId :: Lens' GetSoftwareUpdates Text

-- | The Amazon S3 presigned URL for the update file associated with the
--   specified <tt>JobId</tt> value. The software update will be available
--   for 2 days after this request is made. To access an update after the 2
--   days have passed, you'll have to make another call to
--   <tt>GetSoftwareUpdates</tt>.
getSoftwareUpdatesResponse_updatesURI :: Lens' GetSoftwareUpdatesResponse (Maybe Text)

-- | The response's http status code.
getSoftwareUpdatesResponse_httpStatus :: Lens' GetSoftwareUpdatesResponse Int

-- | Defines the type of job that you're creating.
createJob_jobType :: Lens' CreateJob (Maybe JobType)

-- | The <tt>KmsKeyARN</tt> that you want to associate with this job.
--   <tt>KmsKeyARN</tt>s are created using the <a>CreateKey</a> AWS Key
--   Management Service (KMS) API action.
createJob_kmsKeyARN :: Lens' CreateJob (Maybe Text)

-- | Allows you to securely operate and manage Snowcone devices remotely
--   from outside of your internal network. When set to
--   <tt>INSTALLED_AUTOSTART</tt>, remote management will automatically be
--   available when the device arrives at your location. Otherwise, you
--   need to use the Snowball Client to manage the device.
createJob_remoteManagement :: Lens' CreateJob (Maybe RemoteManagement)

-- | Defines the Amazon Simple Notification Service (Amazon SNS)
--   notification settings for this job.
createJob_notification :: Lens' CreateJob (Maybe Notification)

-- | The forwarding address ID for a job. This field is not supported in
--   most Regions.
createJob_forwardingAddressId :: Lens' CreateJob (Maybe Text)

-- | The ID for the address that you want the Snow device shipped to.
createJob_addressId :: Lens' CreateJob (Maybe Text)

-- | The type of AWS Snow Family device to use for this job.
--   
--   For cluster jobs, AWS Snow Family currently supports only the
--   <tt>EDGE</tt> device type.
--   
--   The type of AWS Snow device to use for this job. Currently, the only
--   supported device type for cluster jobs is <tt>EDGE</tt>.
--   
--   For more information, see <a>Snowball Edge Device Options</a> in the
--   Snowball Edge Developer Guide.
--   
--   For more information, see
--   "https://docs.aws.amazon.com/snowball/latest/snowcone-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>
--   or
--   "https://docs.aws.amazon.com/snowball/latest/developer-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>.
createJob_snowballType :: Lens' CreateJob (Maybe SnowballType)

-- | The ID of the long-term pricing type for the device.
createJob_longTermPricingId :: Lens' CreateJob (Maybe Text)

-- | The shipping speed for this job. This speed doesn't dictate how soon
--   you'll get the Snow device, rather it represents how quickly the Snow
--   device moves to its destination while in transit. Regional shipping
--   speeds are as follows:
--   
--   <ul>
--   <li>In Australia, you have access to express shipping. Typically, Snow
--   devices shipped express are delivered in about a day.</li>
--   <li>In the European Union (EU), you have access to express shipping.
--   Typically, Snow devices shipped express are delivered in about a day.
--   In addition, most countries in the EU have access to standard
--   shipping, which typically takes less than a week, one way.</li>
--   <li>In India, Snow devices are delivered in one to seven days.</li>
--   <li>In the US, you have access to one-day shipping and two-day
--   shipping.</li>
--   </ul>
createJob_shippingOption :: Lens' CreateJob (Maybe ShippingOption)

-- | Defines the Amazon S3 buckets associated with this job.
--   
--   With <tt>IMPORT</tt> jobs, you specify the bucket or buckets that your
--   transferred data will be imported into.
--   
--   With <tt>EXPORT</tt> jobs, you specify the bucket or buckets that your
--   transferred data will be exported from. Optionally, you can also
--   specify a <tt>KeyRange</tt> value. If you choose to export a range,
--   you define the length of the range by providing either an inclusive
--   <tt>BeginMarker</tt> value, an inclusive <tt>EndMarker</tt> value, or
--   both. Ranges are UTF-8 binary sorted.
createJob_resources :: Lens' CreateJob (Maybe JobResource)

-- | Specifies the service or services on the Snow Family device that your
--   transferred data will be exported from or imported into. AWS Snow
--   Family supports Amazon S3 and NFS (Network File System).
createJob_onDeviceServiceConfiguration :: Lens' CreateJob (Maybe OnDeviceServiceConfiguration)

-- | The ID of a cluster. If you're creating a job for a node in a cluster,
--   you need to provide only this <tt>clusterId</tt> value. The other job
--   attributes are inherited from the cluster.
createJob_clusterId :: Lens' CreateJob (Maybe Text)

-- | Defines the device configuration for an AWS Snowcone job.
--   
--   For more information, see
--   "https://docs.aws.amazon.com/snowball/latest/snowcone-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>
--   or
--   "https://docs.aws.amazon.com/snowball/latest/developer-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>.
createJob_deviceConfiguration :: Lens' CreateJob (Maybe DeviceConfiguration)

-- | Defines an optional description of this specific job, for example
--   <tt>Important Photos 2016-08-11</tt>.
createJob_description :: Lens' CreateJob (Maybe Text)

-- | The tax documents required in your AWS Region.
createJob_taxDocuments :: Lens' CreateJob (Maybe TaxDocuments)

-- | The <tt>RoleARN</tt> that you want to associate with this job.
--   <tt>RoleArn</tt>s are created using the <a>CreateRole</a> AWS Identity
--   and Access Management (IAM) API action.
createJob_roleARN :: Lens' CreateJob (Maybe Text)

-- | If your job is being created in one of the US regions, you have the
--   option of specifying what size Snow device you'd like for this job. In
--   all other regions, Snowballs come with 80 TB in storage capacity.
--   
--   For more information, see
--   "https://docs.aws.amazon.com/snowball/latest/snowcone-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>
--   or
--   "https://docs.aws.amazon.com/snowball/latest/developer-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>.
createJob_snowballCapacityPreference :: Lens' CreateJob (Maybe SnowballCapacity)

-- | The automatically generated ID for a job, for example
--   <tt>JID123e4567-e89b-12d3-a456-426655440000</tt>.
createJobResponse_jobId :: Lens' CreateJobResponse (Maybe Text)

-- | The response's http status code.
createJobResponse_httpStatus :: Lens' CreateJobResponse Int

-- | Because HTTP requests are stateless, this is the starting point for
--   your next list of <tt>ListLongTermPricing</tt> to return.
listLongTermPricing_nextToken :: Lens' ListLongTermPricing (Maybe Text)

-- | The maximum number of <tt>ListLongTermPricing</tt> objects to return.
listLongTermPricing_maxResults :: Lens' ListLongTermPricing (Maybe Natural)

-- | Each <tt>LongTermPricingEntry</tt> object contains a status, ID, and
--   other information about the <tt>LongTermPricing</tt> type.
listLongTermPricingResponse_longTermPricingEntries :: Lens' ListLongTermPricingResponse (Maybe [LongTermPricingListEntry])

-- | Because HTTP requests are stateless, this is the starting point for
--   your next list of returned <tt>ListLongTermPricing</tt> list.
listLongTermPricingResponse_nextToken :: Lens' ListLongTermPricingResponse (Maybe Text)

-- | The response's http status code.
listLongTermPricingResponse_httpStatus :: Lens' ListLongTermPricingResponse Int

-- | The ID for a job that you want to get the manifest file for, for
--   example <tt>JID123e4567-e89b-12d3-a456-426655440000</tt>.
getJobManifest_jobId :: Lens' GetJobManifest Text

-- | The Amazon S3 presigned URL for the manifest file associated with the
--   specified <tt>JobId</tt> value.
getJobManifestResponse_manifestURI :: Lens' GetJobManifestResponse (Maybe Text)

-- | The response's http status code.
getJobManifestResponse_httpStatus :: Lens' GetJobManifestResponse Int

-- | The <tt>KmsKeyARN</tt> value that you want to associate with this
--   cluster. <tt>KmsKeyARN</tt> values are created by using the
--   <a>CreateKey</a> API action in AWS Key Management Service (AWS KMS).
createCluster_kmsKeyARN :: Lens' CreateCluster (Maybe Text)

-- | Allows you to securely operate and manage Snow devices in a cluster
--   remotely from outside of your internal network. When set to
--   <tt>INSTALLED_AUTOSTART</tt>, remote management will automatically be
--   available when the device arrives at your location. Otherwise, you
--   need to use the Snowball Client to manage the device.
createCluster_remoteManagement :: Lens' CreateCluster (Maybe RemoteManagement)

-- | The Amazon Simple Notification Service (Amazon SNS) notification
--   settings for this cluster.
createCluster_notification :: Lens' CreateCluster (Maybe Notification)

-- | The forwarding address ID for a cluster. This field is not supported
--   in most regions.
createCluster_forwardingAddressId :: Lens' CreateCluster (Maybe Text)

-- | Specifies the service or services on the Snow Family device that your
--   transferred data will be exported from or imported into. AWS Snow
--   Family supports Amazon S3 and NFS (Network File System).
createCluster_onDeviceServiceConfiguration :: Lens' CreateCluster (Maybe OnDeviceServiceConfiguration)

-- | An optional description of this specific cluster, for example
--   <tt>Environmental Data Cluster-01</tt>.
createCluster_description :: Lens' CreateCluster (Maybe Text)

-- | The tax documents required in your AWS Region.
createCluster_taxDocuments :: Lens' CreateCluster (Maybe TaxDocuments)

-- | The type of job for this cluster. Currently, the only job type
--   supported for clusters is <tt>LOCAL_USE</tt>.
--   
--   For more information, see
--   "https://docs.aws.amazon.com/snowball/latest/snowcone-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>
--   or
--   "https://docs.aws.amazon.com/snowball/latest/developer-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>.
createCluster_jobType :: Lens' CreateCluster JobType

-- | The resources associated with the cluster job. These resources include
--   Amazon S3 buckets and optional AWS Lambda functions written in the
--   Python language.
createCluster_resources :: Lens' CreateCluster JobResource

-- | The ID for the address that you want the cluster shipped to.
createCluster_addressId :: Lens' CreateCluster Text

-- | The <tt>RoleARN</tt> that you want to associate with this cluster.
--   <tt>RoleArn</tt> values are created by using the <a>CreateRole</a> API
--   action in AWS Identity and Access Management (IAM).
createCluster_roleARN :: Lens' CreateCluster Text

-- | The type of AWS Snow Family device to use for this cluster.
--   
--   For cluster jobs, AWS Snow Family currently supports only the
--   <tt>EDGE</tt> device type.
--   
--   For more information, see
--   "https://docs.aws.amazon.com/snowball/latest/snowcone-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>
--   or
--   "https://docs.aws.amazon.com/snowball/latest/developer-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>.
createCluster_snowballType :: Lens' CreateCluster SnowballType

-- | The shipping speed for each node in this cluster. This speed doesn't
--   dictate how soon you'll get each Snowball Edge device, rather it
--   represents how quickly each device moves to its destination while in
--   transit. Regional shipping speeds are as follows:
--   
--   <ul>
--   <li>In Australia, you have access to express shipping. Typically, Snow
--   devices shipped express are delivered in about a day.</li>
--   <li>In the European Union (EU), you have access to express shipping.
--   Typically, Snow devices shipped express are delivered in about a day.
--   In addition, most countries in the EU have access to standard
--   shipping, which typically takes less than a week, one way.</li>
--   <li>In India, Snow devices are delivered in one to seven days.</li>
--   <li>In the United States of America (US), you have access to one-day
--   shipping and two-day shipping.</li>
--   <li>In Australia, you have access to express shipping. Typically,
--   devices shipped express are delivered in about a day.</li>
--   <li>In the European Union (EU), you have access to express shipping.
--   Typically, Snow devices shipped express are delivered in about a day.
--   In addition, most countries in the EU have access to standard
--   shipping, which typically takes less than a week, one way.</li>
--   <li>In India, Snow devices are delivered in one to seven days.</li>
--   <li>In the US, you have access to one-day shipping and two-day
--   shipping.</li>
--   </ul>
createCluster_shippingOption :: Lens' CreateCluster ShippingOption

-- | The automatically generated ID for a cluster.
createClusterResponse_clusterId :: Lens' CreateClusterResponse (Maybe Text)

-- | The response's http status code.
createClusterResponse_httpStatus :: Lens' CreateClusterResponse Int

-- | HTTP requests are stateless. To identify what object comes "next" in
--   the list of <tt>JobListEntry</tt> objects, you have the option of
--   specifying <tt>NextToken</tt> as the starting point for your returned
--   list.
listJobs_nextToken :: Lens' ListJobs (Maybe Text)

-- | The number of <tt>JobListEntry</tt> objects to return.
listJobs_maxResults :: Lens' ListJobs (Maybe Natural)

-- | Each <tt>JobListEntry</tt> object contains a job's state, a job's ID,
--   and a value that indicates whether the job is a job part, in the case
--   of export jobs.
listJobsResponse_jobListEntries :: Lens' ListJobsResponse (Maybe [JobListEntry])

-- | HTTP requests are stateless. If you use this automatically generated
--   <tt>NextToken</tt> value in your next <tt>ListJobs</tt> call, your
--   returned <tt>JobListEntry</tt> objects will start from this point in
--   the array.
listJobsResponse_nextToken :: Lens' ListJobsResponse (Maybe Text)

-- | The response's http status code.
listJobsResponse_httpStatus :: Lens' ListJobsResponse Int

-- | The new or updated Notification object.
updateJob_notification :: Lens' UpdateJob (Maybe Notification)

-- | The updated ID for the forwarding address for a job. This field is not
--   supported in most regions.
updateJob_forwardingAddressId :: Lens' UpdateJob (Maybe Text)

-- | The ID of the updated Address object.
updateJob_addressId :: Lens' UpdateJob (Maybe Text)

-- | The updated shipping option value of this job's ShippingDetails
--   object.
updateJob_shippingOption :: Lens' UpdateJob (Maybe ShippingOption)

-- | The updated <tt>JobResource</tt> object, or the updated JobResource
--   object.
updateJob_resources :: Lens' UpdateJob (Maybe JobResource)

-- | Specifies the service or services on the Snow Family device that your
--   transferred data will be exported from or imported into. AWS Snow
--   Family supports Amazon S3 and NFS (Network File System).
updateJob_onDeviceServiceConfiguration :: Lens' UpdateJob (Maybe OnDeviceServiceConfiguration)

-- | The updated description of this job's JobMetadata object.
updateJob_description :: Lens' UpdateJob (Maybe Text)

-- | The new role Amazon Resource Name (ARN) that you want to associate
--   with this job. To create a role ARN, use the <a>CreateRole</a>AWS
--   Identity and Access Management (IAM) API action.
updateJob_roleARN :: Lens' UpdateJob (Maybe Text)

-- | The updated <tt>SnowballCapacityPreference</tt> of this job's
--   JobMetadata object. The 50 TB Snowballs are only available in the US
--   regions.
--   
--   For more information, see
--   "https://docs.aws.amazon.com/snowball/latest/snowcone-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>
--   or
--   "https://docs.aws.amazon.com/snowball/latest/developer-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>.
updateJob_snowballCapacityPreference :: Lens' UpdateJob (Maybe SnowballCapacity)

-- | The job ID of the job that you want to update, for example
--   <tt>JID123e4567-e89b-12d3-a456-426655440000</tt>.
updateJob_jobId :: Lens' UpdateJob Text

-- | The response's http status code.
updateJobResponse_httpStatus :: Lens' UpdateJobResponse Int

-- | The job ID of the job whose shipment date you want to update, for
--   example <tt>JID123e4567-e89b-12d3-a456-426655440000</tt>.
updateJobShipmentState_jobId :: Lens' UpdateJobShipmentState Text

-- | The state of a device when it is being shipped.
--   
--   Set to <tt>RECEIVED</tt> when the device arrives at your location.
--   
--   Set to <tt>RETURNED</tt> when you have returned the device to AWS.
updateJobShipmentState_shipmentState :: Lens' UpdateJobShipmentState ShipmentState

-- | The response's http status code.
updateJobShipmentStateResponse_httpStatus :: Lens' UpdateJobShipmentStateResponse Int

-- | The ID for the job that you want to get the <tt>UnlockCode</tt> value
--   for, for example <tt>JID123e4567-e89b-12d3-a456-426655440000</tt>.
getJobUnlockCode_jobId :: Lens' GetJobUnlockCode Text

-- | The <tt>UnlockCode</tt> value for the specified job. The
--   <tt>UnlockCode</tt> value can be accessed for up to 360 days after the
--   job has been created.
getJobUnlockCodeResponse_unlockCode :: Lens' GetJobUnlockCodeResponse (Maybe Text)

-- | The response's http status code.
getJobUnlockCodeResponse_httpStatus :: Lens' GetJobUnlockCodeResponse Int

-- | HTTP requests are stateless. To identify what object comes "next" in
--   the list of <tt>JobListEntry</tt> objects, you have the option of
--   specifying <tt>NextToken</tt> as the starting point for your returned
--   list.
listClusterJobs_nextToken :: Lens' ListClusterJobs (Maybe Text)

-- | The number of <tt>JobListEntry</tt> objects to return.
listClusterJobs_maxResults :: Lens' ListClusterJobs (Maybe Natural)

-- | The 39-character ID for the cluster that you want to list, for example
--   <tt>CID123e4567-e89b-12d3-a456-426655440000</tt>.
listClusterJobs_clusterId :: Lens' ListClusterJobs Text

-- | Each <tt>JobListEntry</tt> object contains a job's state, a job's ID,
--   and a value that indicates whether the job is a job part, in the case
--   of export jobs.
listClusterJobsResponse_jobListEntries :: Lens' ListClusterJobsResponse (Maybe [JobListEntry])

-- | HTTP requests are stateless. If you use the automatically generated
--   <tt>NextToken</tt> value in your next <tt>ListClusterJobsResult</tt>
--   call, your list of returned jobs will start from this point in the
--   array.
listClusterJobsResponse_nextToken :: Lens' ListClusterJobsResponse (Maybe Text)

-- | The response's http status code.
listClusterJobsResponse_httpStatus :: Lens' ListClusterJobsResponse Int

-- | The automatically generated ID for a job, for example
--   <tt>JID123e4567-e89b-12d3-a456-426655440000</tt>.
describeJob_jobId :: Lens' DescribeJob Text

-- | Information about a specific job, including shipping information, job
--   status, and other important metadata.
describeJobResponse_jobMetadata :: Lens' DescribeJobResponse (Maybe JobMetadata)

-- | Information about a specific job part (in the case of an export job),
--   including shipping information, job status, and other important
--   metadata.
describeJobResponse_subJobMetadata :: Lens' DescribeJobResponse (Maybe [JobMetadata])

-- | The response's http status code.
describeJobResponse_httpStatus :: Lens' DescribeJobResponse Int

-- | If set to <tt>true</tt>, specifies that the current long-term pricing
--   type for the device should be automatically renewed before the
--   long-term pricing contract expires.
updateLongTermPricing_isLongTermPricingAutoRenew :: Lens' UpdateLongTermPricing (Maybe Bool)

-- | Specifies that a device that is ordered with long-term pricing should
--   be replaced with a new device.
updateLongTermPricing_replacementJob :: Lens' UpdateLongTermPricing (Maybe Text)

-- | The ID of the long-term pricing type for the device.
updateLongTermPricing_longTermPricingId :: Lens' UpdateLongTermPricing Text

-- | The response's http status code.
updateLongTermPricingResponse_httpStatus :: Lens' UpdateLongTermPricingResponse Int

-- | HTTP requests are stateless. To identify what object comes "next" in
--   the list of <tt>ClusterListEntry</tt> objects, you have the option of
--   specifying <tt>NextToken</tt> as the starting point for your returned
--   list.
listClusters_nextToken :: Lens' ListClusters (Maybe Text)

-- | The number of <tt>ClusterListEntry</tt> objects to return.
listClusters_maxResults :: Lens' ListClusters (Maybe Natural)

-- | Each <tt>ClusterListEntry</tt> object contains a cluster's state, a
--   cluster's ID, and other important status information.
listClustersResponse_clusterListEntries :: Lens' ListClustersResponse (Maybe [ClusterListEntry])

-- | HTTP requests are stateless. If you use the automatically generated
--   <tt>NextToken</tt> value in your next <tt>ClusterListEntry</tt> call,
--   your list of returned clusters will start from this point in the
--   array.
listClustersResponse_nextToken :: Lens' ListClustersResponse (Maybe Text)

-- | The response's http status code.
listClustersResponse_httpStatus :: Lens' ListClustersResponse Int

-- | The automatically generated ID for a specific address.
describeAddress_addressId :: Lens' DescribeAddress Text

-- | The address that you want the Snow device(s) associated with a
--   specific job to be shipped to.
describeAddressResponse_address :: Lens' DescribeAddressResponse (Maybe Address)

-- | The response's http status code.
describeAddressResponse_httpStatus :: Lens' DescribeAddressResponse Int

-- | The automatically generated ID for a job, for example
--   <tt>JID123e4567-e89b-12d3-a456-426655440000</tt>.
describeReturnShippingLabel_jobId :: Lens' DescribeReturnShippingLabel Text

-- | The status information of the task on a Snow device that is being
--   returned to AWS.
describeReturnShippingLabelResponse_status :: Lens' DescribeReturnShippingLabelResponse (Maybe ShippingLabelStatus)

-- | The expiration date of the current return shipping label.
describeReturnShippingLabelResponse_expirationDate :: Lens' DescribeReturnShippingLabelResponse (Maybe UTCTime)

-- | The response's http status code.
describeReturnShippingLabelResponse_httpStatus :: Lens' DescribeReturnShippingLabelResponse Int

-- | The 39-character job ID for the job that you want to cancel, for
--   example <tt>JID123e4567-e89b-12d3-a456-426655440000</tt>.
cancelJob_jobId :: Lens' CancelJob Text

-- | The response's http status code.
cancelJobResponse_httpStatus :: Lens' CancelJobResponse Int

-- | If the address you are creating is a primary address, then set this
--   option to true. This field is not supported in most regions.
address_isRestricted :: Lens' Address (Maybe Bool)

-- | The third line in a street address that a Snow device is to be
--   delivered to.
address_street3 :: Lens' Address (Maybe Text)

-- | This field is no longer used and the value is ignored.
address_landmark :: Lens' Address (Maybe Text)

-- | The postal code in an address that a Snow device is to be delivered
--   to.
address_postalCode :: Lens' Address (Maybe Text)

-- | The country in an address that a Snow device is to be delivered to.
address_country :: Lens' Address (Maybe Text)

-- | The state or province in an address that a Snow device is to be
--   delivered to.
address_stateOrProvince :: Lens' Address (Maybe Text)

-- | The second line in a street address that a Snow device is to be
--   delivered to.
address_street2 :: Lens' Address (Maybe Text)

-- | The unique ID for an address.
address_addressId :: Lens' Address (Maybe Text)

-- | The city in an address that a Snow device is to be delivered to.
address_city :: Lens' Address (Maybe Text)

-- | The phone number associated with an address that a Snow device is to
--   be delivered to.
address_phoneNumber :: Lens' Address (Maybe Text)

-- | The name of the company to receive a Snow device at an address.
address_company :: Lens' Address (Maybe Text)

-- | The name of a person to receive a Snow device at an address.
address_name :: Lens' Address (Maybe Text)

-- | This field is no longer used and the value is ignored.
address_prefectureOrDistrict :: Lens' Address (Maybe Text)

-- | The first line in a street address that a Snow device is to be
--   delivered to.
address_street1 :: Lens' Address (Maybe Text)

-- | The current state of this cluster. For information about the state of
--   a specific node, see JobListEntry$JobState.
clusterListEntry_clusterState :: Lens' ClusterListEntry (Maybe ClusterState)

-- | The 39-character ID for the cluster that you want to list, for example
--   <tt>CID123e4567-e89b-12d3-a456-426655440000</tt>.
clusterListEntry_clusterId :: Lens' ClusterListEntry (Maybe Text)

-- | The creation date for this cluster.
clusterListEntry_creationDate :: Lens' ClusterListEntry (Maybe UTCTime)

-- | Defines an optional description of the cluster, for example
--   <tt>Environmental Data Cluster-01</tt>.
clusterListEntry_description :: Lens' ClusterListEntry (Maybe Text)

-- | The type of job for this cluster. Currently, the only job type
--   supported for clusters is <tt>LOCAL_USE</tt>.
clusterMetadata_jobType :: Lens' ClusterMetadata (Maybe JobType)

-- | The <tt>KmsKeyARN</tt> Amazon Resource Name (ARN) associated with this
--   cluster. This ARN was created using the <a>CreateKey</a> API action in
--   AWS Key Management Service (AWS KMS).
clusterMetadata_kmsKeyARN :: Lens' ClusterMetadata (Maybe Text)

-- | The current status of the cluster.
clusterMetadata_clusterState :: Lens' ClusterMetadata (Maybe ClusterState)

-- | The Amazon Simple Notification Service (Amazon SNS) notification
--   settings for this cluster.
clusterMetadata_notification :: Lens' ClusterMetadata (Maybe Notification)

-- | The ID of the address that you want a cluster shipped to, after it
--   will be shipped to its primary address. This field is not supported in
--   most regions.
clusterMetadata_forwardingAddressId :: Lens' ClusterMetadata (Maybe Text)

-- | The automatically generated ID for a specific address.
clusterMetadata_addressId :: Lens' ClusterMetadata (Maybe Text)

-- | The type of AWS Snow device to use for this cluster.
--   
--   For cluster jobs, AWS Snow Family currently supports only the
--   <tt>EDGE</tt> device type.
clusterMetadata_snowballType :: Lens' ClusterMetadata (Maybe SnowballType)

-- | The shipping speed for each node in this cluster. This speed doesn't
--   dictate how soon you'll get each device, rather it represents how
--   quickly each device moves to its destination while in transit.
--   Regional shipping speeds are as follows:
--   
--   <ul>
--   <li>In Australia, you have access to express shipping. Typically,
--   devices shipped express are delivered in about a day.</li>
--   <li>In the European Union (EU), you have access to express shipping.
--   Typically, Snow devices shipped express are delivered in about a day.
--   In addition, most countries in the EU have access to standard
--   shipping, which typically takes less than a week, one way.</li>
--   <li>In India, Snow devices are delivered in one to seven days.</li>
--   <li>In the US, you have access to one-day shipping and two-day
--   shipping.</li>
--   </ul>
clusterMetadata_shippingOption :: Lens' ClusterMetadata (Maybe ShippingOption)

-- | The arrays of JobResource objects that can include updated S3Resource
--   objects or LambdaResource objects.
clusterMetadata_resources :: Lens' ClusterMetadata (Maybe JobResource)

-- | Represents metadata and configuration settings for services on an AWS
--   Snow Family device.
clusterMetadata_onDeviceServiceConfiguration :: Lens' ClusterMetadata (Maybe OnDeviceServiceConfiguration)

-- | The automatically generated ID for a cluster.
clusterMetadata_clusterId :: Lens' ClusterMetadata (Maybe Text)

-- | The creation date for this cluster.
clusterMetadata_creationDate :: Lens' ClusterMetadata (Maybe UTCTime)

-- | The optional description of the cluster.
clusterMetadata_description :: Lens' ClusterMetadata (Maybe Text)

-- | The tax documents required in your AWS Region.
clusterMetadata_taxDocuments :: Lens' ClusterMetadata (Maybe TaxDocuments)

-- | The role ARN associated with this cluster. This ARN was created using
--   the <a>CreateRole</a> API action in AWS Identity and Access Management
--   (IAM).
clusterMetadata_roleARN :: Lens' ClusterMetadata (Maybe Text)

-- | The optional name of a compatible image.
compatibleImage_name :: Lens' CompatibleImage (Maybe Text)

-- | The unique identifier for an individual Snow device AMI.
compatibleImage_amiId :: Lens' CompatibleImage (Maybe Text)

-- | The total number of objects for a transfer between a Snow device and
--   Amazon S3. This value is set to 0 (zero) until all the keys that will
--   be transferred have been listed.
dataTransfer_totalObjects :: Lens' DataTransfer (Maybe Integer)

-- | The total bytes of data for a transfer between a Snow device and
--   Amazon S3. This value is set to 0 (zero) until all the keys that will
--   be transferred have been listed.
dataTransfer_totalBytes :: Lens' DataTransfer (Maybe Integer)

-- | The number of objects transferred between a Snow device and Amazon S3.
dataTransfer_objectsTransferred :: Lens' DataTransfer (Maybe Integer)

-- | The number of bytes transferred between a Snow device and Amazon S3.
dataTransfer_bytesTransferred :: Lens' DataTransfer (Maybe Integer)

-- | Returns information about the device configuration for an AWS Snowcone
--   job.
deviceConfiguration_snowconeDeviceConfiguration :: Lens' DeviceConfiguration (Maybe SnowconeDeviceConfiguration)

-- | The ID of the AMI on the Snow device.
ec2AmiResource_snowballAmiId :: Lens' Ec2AmiResource (Maybe Text)

-- | The ID of the AMI in Amazon EC2.
ec2AmiResource_amiId :: Lens' Ec2AmiResource Text

-- | The Amazon Resource Name (ARN) for any local Amazon S3 resource that
--   is an AWS Lambda function's event trigger associated with this job.
eventTriggerDefinition_eventResourceARN :: Lens' EventTriggerDefinition (Maybe Text)

-- | The Goods and Services Tax (GST) documents required in AWS Regions in
--   India.
iNDTaxDocuments_gstin :: Lens' INDTaxDocuments (Maybe Text)

-- | The type of job.
jobListEntry_jobType :: Lens' JobListEntry (Maybe JobType)

-- | The automatically generated ID for a job, for example
--   <tt>JID123e4567-e89b-12d3-a456-426655440000</tt>.
jobListEntry_jobId :: Lens' JobListEntry (Maybe Text)

-- | The current state of this job.
jobListEntry_jobState :: Lens' JobListEntry (Maybe JobState)

-- | The type of device used with this job.
jobListEntry_snowballType :: Lens' JobListEntry (Maybe SnowballType)

-- | The creation date for this job.
jobListEntry_creationDate :: Lens' JobListEntry (Maybe UTCTime)

-- | The optional description of this specific job, for example
--   <tt>Important Photos 2016-08-11</tt>.
jobListEntry_description :: Lens' JobListEntry (Maybe Text)

-- | A value that indicates that this job is a main job. A main job
--   represents a successful request to create an export job. Main jobs
--   aren't associated with any Snowballs. Instead, each main job will have
--   at least one job part, and each job part is associated with a
--   Snowball. It might take some time before the job parts associated with
--   a particular main job are listed, because they are created after the
--   main job is created.
jobListEntry_isMaster :: Lens' JobListEntry (Maybe Bool)

-- | A link to an Amazon S3 presigned URL where the job failure log is
--   located.
jobLogs_jobFailureLogURI :: Lens' JobLogs (Maybe Text)

-- | A link to an Amazon S3 presigned URL where the job completion report
--   is located.
jobLogs_jobCompletionReportURI :: Lens' JobLogs (Maybe Text)

-- | A link to an Amazon S3 presigned URL where the job success log is
--   located.
jobLogs_jobSuccessLogURI :: Lens' JobLogs (Maybe Text)

-- | The type of job.
jobMetadata_jobType :: Lens' JobMetadata (Maybe JobType)

-- | The Amazon Resource Name (ARN) for the AWS Key Management Service (AWS
--   KMS) key associated with this job. This ARN was created using the
--   <a>CreateKey</a> API action in AWS KMS.
jobMetadata_kmsKeyARN :: Lens' JobMetadata (Maybe Text)

-- | Allows you to securely operate and manage Snowcone devices remotely
--   from outside of your internal network. When set to
--   <tt>INSTALLED_AUTOSTART</tt>, remote management will automatically be
--   available when the device arrives at your location. Otherwise, you
--   need to use the Snowball Client to manage the device.
jobMetadata_remoteManagement :: Lens' JobMetadata (Maybe RemoteManagement)

-- | The automatically generated ID for a job, for example
--   <tt>JID123e4567-e89b-12d3-a456-426655440000</tt>.
jobMetadata_jobId :: Lens' JobMetadata (Maybe Text)

-- | Links to Amazon S3 presigned URLs for the job report and logs. For
--   import jobs, the PDF job report becomes available at the end of the
--   import process. For export jobs, your job report typically becomes
--   available while the Snow device for your job part is being delivered
--   to you.
jobMetadata_jobLogInfo :: Lens' JobMetadata (Maybe JobLogs)

-- | The Amazon Simple Notification Service (Amazon SNS) notification
--   settings associated with a specific job. The <tt>Notification</tt>
--   object is returned as a part of the response syntax of the
--   <tt>DescribeJob</tt> action in the <tt>JobMetadata</tt> data type.
jobMetadata_notification :: Lens' JobMetadata (Maybe Notification)

-- | The current status of the jobs.
jobMetadata_jobState :: Lens' JobMetadata (Maybe JobState)

-- | The ID of the address that you want a job shipped to, after it will be
--   shipped to its primary address. This field is not supported in most
--   regions.
jobMetadata_forwardingAddressId :: Lens' JobMetadata (Maybe Text)

-- | A job's shipping information, including inbound and outbound tracking
--   numbers and shipping speed options.
jobMetadata_shippingDetails :: Lens' JobMetadata (Maybe ShippingDetails)

-- | The ID for the address that you want the Snow device shipped to.
jobMetadata_addressId :: Lens' JobMetadata (Maybe Text)

-- | The type of device used with this job.
jobMetadata_snowballType :: Lens' JobMetadata (Maybe SnowballType)

-- | A value that defines the real-time status of a Snow device's data
--   transfer while the device is at AWS. This data is only available while
--   a job has a <tt>JobState</tt> value of <tt>InProgress</tt>, for both
--   import and export jobs.
jobMetadata_dataTransferProgress :: Lens' JobMetadata (Maybe DataTransfer)

-- | The ID of the long-term pricing type for the device.
jobMetadata_longTermPricingId :: Lens' JobMetadata (Maybe Text)

-- | An array of <tt>S3Resource</tt> objects. Each <tt>S3Resource</tt>
--   object represents an Amazon S3 bucket that your transferred data will
--   be exported from or imported into.
jobMetadata_resources :: Lens' JobMetadata (Maybe JobResource)

-- | Represents metadata and configuration settings for services on an AWS
--   Snow Family device.
jobMetadata_onDeviceServiceConfiguration :: Lens' JobMetadata (Maybe OnDeviceServiceConfiguration)

-- | The 39-character ID for the cluster, for example
--   <tt>CID123e4567-e89b-12d3-a456-426655440000</tt>.
jobMetadata_clusterId :: Lens' JobMetadata (Maybe Text)

-- | The creation date for this job.
jobMetadata_creationDate :: Lens' JobMetadata (Maybe UTCTime)

-- | Undocumented member.
jobMetadata_deviceConfiguration :: Lens' JobMetadata (Maybe DeviceConfiguration)

-- | The description of the job, provided at job creation.
jobMetadata_description :: Lens' JobMetadata (Maybe Text)

-- | The metadata associated with the tax documents required in your AWS
--   Region.
jobMetadata_taxDocuments :: Lens' JobMetadata (Maybe TaxDocuments)

-- | The role ARN associated with this job. This ARN was created using the
--   <a>CreateRole</a> API action in AWS Identity and Access Management
--   (IAM).
jobMetadata_roleARN :: Lens' JobMetadata (Maybe Text)

-- | The Snow device capacity preference for this job, specified at job
--   creation. In US regions, you can choose between 50 TB and 80 TB
--   Snowballs. All other regions use 80 TB capacity Snowballs.
--   
--   For more information, see
--   "https://docs.aws.amazon.com/snowball/latest/snowcone-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>
--   or
--   "https://docs.aws.amazon.com/snowball/latest/developer-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>.
jobMetadata_snowballCapacityPreference :: Lens' JobMetadata (Maybe SnowballCapacity)

-- | The Amazon Machine Images (AMIs) associated with this job.
jobResource_ec2AmiResources :: Lens' JobResource (Maybe [Ec2AmiResource])

-- | The Python-language Lambda functions for this job.
jobResource_lambdaResources :: Lens' JobResource (Maybe [LambdaResource])

-- | An array of <tt>S3Resource</tt> objects.
jobResource_s3Resources :: Lens' JobResource (Maybe [S3Resource])

-- | The key that ends an optional key range for an export job. Ranges are
--   inclusive and UTF-8 binary sorted.
keyRange_endMarker :: Lens' KeyRange (Maybe Text)

-- | The key that starts an optional key range for an export job. Ranges
--   are inclusive and UTF-8 binary sorted.
keyRange_beginMarker :: Lens' KeyRange (Maybe Text)

-- | The array of ARNs for S3Resource objects to trigger the LambdaResource
--   objects associated with this job.
lambdaResource_eventTriggers :: Lens' LambdaResource (Maybe [EventTriggerDefinition])

-- | An Amazon Resource Name (ARN) that represents an AWS Lambda function
--   to be triggered by PUT object actions on the associated local Amazon
--   S3 resource.
lambdaResource_lambdaArn :: Lens' LambdaResource (Maybe Text)

-- | The type of long-term pricing that was selected for the device.
longTermPricingListEntry_longTermPricingType :: Lens' LongTermPricingListEntry (Maybe LongTermPricingType)

-- | The start date of the long-term pricing contract.
longTermPricingListEntry_longTermPricingStartDate :: Lens' LongTermPricingListEntry (Maybe UTCTime)

-- | The type of AWS Snow Family device associated with this long-term
--   pricing job.
longTermPricingListEntry_snowballType :: Lens' LongTermPricingListEntry (Maybe SnowballType)

-- | The ID of the long-term pricing type for the device.
longTermPricingListEntry_longTermPricingId :: Lens' LongTermPricingListEntry (Maybe Text)

-- | The end date the long-term pricing contract.
longTermPricingListEntry_longTermPricingEndDate :: Lens' LongTermPricingListEntry (Maybe UTCTime)

-- | The current active jobs on the device the long-term pricing type.
longTermPricingListEntry_currentActiveJob :: Lens' LongTermPricingListEntry (Maybe Text)

-- | If set to <tt>true</tt>, specifies that the current long-term pricing
--   type for the device should be automatically renewed before the
--   long-term pricing contract expires.
longTermPricingListEntry_isLongTermPricingAutoRenew :: Lens' LongTermPricingListEntry (Maybe Bool)

-- | The status of the long-term pricing type.
longTermPricingListEntry_longTermPricingStatus :: Lens' LongTermPricingListEntry (Maybe Text)

-- | The IDs of the jobs that are associated with a long-term pricing type.
longTermPricingListEntry_jobIds :: Lens' LongTermPricingListEntry (Maybe [Text])

-- | A new device that replaces a device that is ordered with long-term
--   pricing.
longTermPricingListEntry_replacementJob :: Lens' LongTermPricingListEntry (Maybe Text)

-- | The maximum NFS storage for one Snowball Family device.
nFSOnDeviceServiceConfiguration_storageLimit :: Lens' NFSOnDeviceServiceConfiguration (Maybe Natural)

-- | The scale unit of the NFS storage on the device.
--   
--   Valid values: TB.
nFSOnDeviceServiceConfiguration_storageUnit :: Lens' NFSOnDeviceServiceConfiguration (Maybe StorageUnit)

-- | Any change in job state will trigger a notification for this job.
notification_notifyAll :: Lens' Notification (Maybe Bool)

-- | The new SNS <tt>TopicArn</tt> that you want to associate with this
--   job. You can create Amazon Resource Names (ARNs) for topics by using
--   the <a>CreateTopic</a> Amazon SNS API action.
--   
--   You can subscribe email addresses to an Amazon SNS topic through the
--   AWS Management Console, or by using the <a>Subscribe</a> Amazon Simple
--   Notification Service (Amazon SNS) API action.
notification_snsTopicARN :: Lens' Notification (Maybe Text)

-- | The list of job states that will trigger a notification for this job.
notification_jobStatesToNotify :: Lens' Notification (Maybe [JobState])

-- | Represents the NFS service on a Snow Family device.
onDeviceServiceConfiguration_nFSOnDeviceService :: Lens' OnDeviceServiceConfiguration (Maybe NFSOnDeviceServiceConfiguration)

-- | For export jobs, you can provide an optional <tt>KeyRange</tt> within
--   a specific Amazon S3 bucket. The length of the range is defined at job
--   creation, and has either an inclusive <tt>BeginMarker</tt>, an
--   inclusive <tt>EndMarker</tt>, or both. Ranges are UTF-8 binary sorted.
s3Resource_keyRange :: Lens' S3Resource (Maybe KeyRange)

-- | The Amazon Resource Name (ARN) of an Amazon S3 bucket.
s3Resource_bucketArn :: Lens' S3Resource (Maybe Text)

-- | Specifies the service or services on the Snow Family device that your
--   transferred data will be exported from or imported into. AWS Snow
--   Family supports Amazon S3 and NFS (Network File System).
s3Resource_targetOnDeviceServices :: Lens' S3Resource (Maybe [TargetOnDeviceService])

-- | Status information for a shipment.
shipment_status :: Lens' Shipment (Maybe Text)

-- | The tracking number for this job. Using this tracking number with your
--   region's carrier's website, you can track a Snow device as the carrier
--   transports it.
--   
--   For India, the carrier is Amazon Logistics. For all other regions, UPS
--   is the carrier.
shipment_trackingNumber :: Lens' Shipment (Maybe Text)

-- | The shipping speed for a particular job. This speed doesn't dictate
--   how soon you'll get the Snow device from the job's creation date. This
--   speed represents how quickly it moves to its destination while in
--   transit. Regional shipping speeds are as follows:
--   
--   <ul>
--   <li>In Australia, you have access to express shipping. Typically, Snow
--   devices shipped express are delivered in about a day.</li>
--   <li>In the European Union (EU), you have access to express shipping.
--   Typically, Snow devices shipped express are delivered in about a day.
--   In addition, most countries in the EU have access to standard
--   shipping, which typically takes less than a week, one way.</li>
--   <li>In India, Snow devices are delivered in one to seven days.</li>
--   <li>In the United States of America (US), you have access to one-day
--   shipping and two-day shipping.</li>
--   </ul>
shippingDetails_shippingOption :: Lens' ShippingDetails (Maybe ShippingOption)

-- | The <tt>Status</tt> and <tt>TrackingNumber</tt> values for a Snow
--   device being delivered to the address that you specified for a
--   particular job.
shippingDetails_outboundShipment :: Lens' ShippingDetails (Maybe Shipment)

-- | The <tt>Status</tt> and <tt>TrackingNumber</tt> values for a Snow
--   device being returned to AWS for a particular job.
shippingDetails_inboundShipment :: Lens' ShippingDetails (Maybe Shipment)

-- | Configures the wireless connection for the AWS Snowcone device.
snowconeDeviceConfiguration_wirelessConnection :: Lens' SnowconeDeviceConfiguration (Maybe WirelessConnection)

-- | Specifies whether the data is being imported or exported. You can
--   import or export the data, or use it locally on the device.
targetOnDeviceService_transferOption :: Lens' TargetOnDeviceService (Maybe TransferOption)

-- | Specifies the name of the service on the Snow Family device that your
--   transferred data will be exported from or imported into.
targetOnDeviceService_serviceName :: Lens' TargetOnDeviceService (Maybe DeviceServiceName)

-- | Undocumented member.
taxDocuments_ind :: Lens' TaxDocuments (Maybe INDTaxDocuments)

-- | Enables the Wi-Fi adapter on an AWS Snowcone device.
wirelessConnection_isWifiEnabled :: Lens' WirelessConnection (Maybe Bool)


module Network.AWS.Snowball.Waiters


-- | Derived from API version <tt>2016-06-30</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   AWS Snow Family is a petabyte-scale data transport solution that uses
--   secure devices to transfer large amounts of data between your
--   on-premises data centers and Amazon Simple Storage Service (Amazon
--   S3). The Snow commands described here provide access to the same
--   functionality that is available in the AWS Snow Family Management
--   Console, which enables you to create and manage jobs for a Snow
--   device. To transfer data locally with a Snow device, you'll need to
--   use the Snowball Edge client or the Amazon S3 API Interface for
--   Snowball or AWS OpsHub for Snow Family. For more information, see the
--   <a>User Guide</a>.
module Network.AWS.Snowball

-- | API version <tt>2016-06-30</tt> of the Amazon Import/Export Snowball
--   SDK configuration.
defaultService :: Service

-- | The specified resource can't be found. Check the information you
--   provided in your last request, and try again.
_InvalidResourceException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The address is either outside the serviceable area for your region, or
--   an error occurred. Check the address with your region's carrier and
--   try again. If the issue persists, contact AWS Support.
_UnsupportedAddressException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You get this exception if you call <tt>CreateReturnShippingLabel</tt>
--   and a valid return shipping label already exists. In this case, use
--   <tt>DescribeReturnShippingLabel</tt> to get the url.
_ReturnShippingLabelAlreadyExistsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The provided AWS Key Management Service key lacks the permissions to
--   perform the specified CreateJob or UpdateJob action.
_KMSRequestFailedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The action can't be performed because the job's current state doesn't
--   allow that action to be performed.
_InvalidJobStateException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Job or cluster creation failed. One or more inputs were invalid.
--   Confirm that the CreateClusterRequest$SnowballType value supports your
--   CreateJobRequest$JobType, and try again.
_InvalidInputCombinationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You get this exception when you call
--   <tt>CreateReturnShippingLabel</tt> more than once when other requests
--   are not completed.
_ConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Your IAM user lacks the necessary Amazon EC2 permissions to perform
--   the attempted action.
_Ec2RequestFailedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The <tt>NextToken</tt> string was altered unexpectedly, and the
--   operation has stopped. Run the operation without changing the
--   <tt>NextToken</tt> string, and try again.
_InvalidNextTokenException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The address provided was invalid. Check the address with your region's
--   carrier, and try again.
_InvalidAddressException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Job creation failed. Currently, clusters support five nodes. If you
--   have fewer than five nodes for your cluster and you have more nodes to
--   create for this cluster, try again and create jobs until your cluster
--   has exactly five nodes.
_ClusterLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newCancelCluster</a> smart constructor.
data CancelCluster
CancelCluster' :: Text -> CancelCluster

-- | Create a value of <a>CancelCluster</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterId:CancelCluster'</a>, <a>cancelCluster_clusterId</a> -
--   The 39-character ID for the cluster that you want to cancel, for
--   example <tt>CID123e4567-e89b-12d3-a456-426655440000</tt>.
newCancelCluster :: Text -> CancelCluster

-- | <i>See:</i> <a>newCancelClusterResponse</a> smart constructor.
data CancelClusterResponse
CancelClusterResponse' :: Int -> CancelClusterResponse

-- | Create a value of <a>CancelClusterResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CancelClusterResponse'</a>,
--   <a>cancelClusterResponse_httpStatus</a> - The response's http status
--   code.
newCancelClusterResponse :: Int -> CancelClusterResponse

-- | <i>See:</i> <a>newDescribeCluster</a> smart constructor.
data DescribeCluster
DescribeCluster' :: Text -> DescribeCluster

-- | Create a value of <a>DescribeCluster</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterId:DescribeCluster'</a>,
--   <a>describeCluster_clusterId</a> - The automatically generated ID for
--   a cluster.
newDescribeCluster :: Text -> DescribeCluster

-- | <i>See:</i> <a>newDescribeClusterResponse</a> smart constructor.
data DescribeClusterResponse
DescribeClusterResponse' :: Maybe ClusterMetadata -> Int -> DescribeClusterResponse

-- | Create a value of <a>DescribeClusterResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterMetadata:DescribeClusterResponse'</a>,
--   <a>describeClusterResponse_clusterMetadata</a> - Information about a
--   specific cluster, including shipping information, cluster status, and
--   other important metadata.
--   
--   <a>$sel:httpStatus:DescribeClusterResponse'</a>,
--   <a>describeClusterResponse_httpStatus</a> - The response's http status
--   code.
newDescribeClusterResponse :: Int -> DescribeClusterResponse

-- | <i>See:</i> <a>newCreateAddress</a> smart constructor.
data CreateAddress
CreateAddress' :: Address -> CreateAddress

-- | Create a value of <a>CreateAddress</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:address:CreateAddress'</a>, <a>createAddress_address</a> - The
--   address that you want the Snow device shipped to.
newCreateAddress :: Address -> CreateAddress

-- | <i>See:</i> <a>newCreateAddressResponse</a> smart constructor.
data CreateAddressResponse
CreateAddressResponse' :: Maybe Text -> Int -> CreateAddressResponse

-- | Create a value of <a>CreateAddressResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:addressId:CreateAddressResponse'</a>,
--   <a>createAddressResponse_addressId</a> - The automatically generated
--   ID for a specific address. You'll use this ID when you create a job to
--   specify which address you want the Snow device for that job shipped
--   to.
--   
--   <a>$sel:httpStatus:CreateAddressResponse'</a>,
--   <a>createAddressResponse_httpStatus</a> - The response's http status
--   code.
newCreateAddressResponse :: Int -> CreateAddressResponse

-- | <i>See:</i> <a>newCreateReturnShippingLabel</a> smart constructor.
data CreateReturnShippingLabel
CreateReturnShippingLabel' :: Maybe ShippingOption -> Text -> CreateReturnShippingLabel

-- | Create a value of <a>CreateReturnShippingLabel</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:shippingOption:CreateReturnShippingLabel'</a>,
--   <a>createReturnShippingLabel_shippingOption</a> - The shipping speed
--   for a particular job. This speed doesn't dictate how soon the device
--   is returned to AWS. This speed represents how quickly it moves to its
--   destination while in transit. Regional shipping speeds are as follows:
--   
--   <a>$sel:jobId:CreateReturnShippingLabel'</a>,
--   <a>createReturnShippingLabel_jobId</a> - The ID for a job that you
--   want to create the return shipping label for; for example,
--   <tt>JID123e4567-e89b-12d3-a456-426655440000</tt>.
newCreateReturnShippingLabel :: Text -> CreateReturnShippingLabel

-- | <i>See:</i> <a>newCreateReturnShippingLabelResponse</a> smart
--   constructor.
data CreateReturnShippingLabelResponse
CreateReturnShippingLabelResponse' :: Maybe ShippingLabelStatus -> Int -> CreateReturnShippingLabelResponse

-- | Create a value of <a>CreateReturnShippingLabelResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:CreateReturnShippingLabelResponse'</a>,
--   <a>createReturnShippingLabelResponse_status</a> - The status
--   information of the task on a Snow device that is being returned to
--   AWS.
--   
--   <a>$sel:httpStatus:CreateReturnShippingLabelResponse'</a>,
--   <a>createReturnShippingLabelResponse_httpStatus</a> - The response's
--   http status code.
newCreateReturnShippingLabelResponse :: Int -> CreateReturnShippingLabelResponse

-- | <i>See:</i> <a>newGetSnowballUsage</a> smart constructor.
data GetSnowballUsage
GetSnowballUsage' :: GetSnowballUsage

-- | Create a value of <a>GetSnowballUsage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newGetSnowballUsage :: GetSnowballUsage

-- | <i>See:</i> <a>newGetSnowballUsageResponse</a> smart constructor.
data GetSnowballUsageResponse
GetSnowballUsageResponse' :: Maybe Int -> Maybe Int -> Int -> GetSnowballUsageResponse

-- | Create a value of <a>GetSnowballUsageResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:snowballsInUse:GetSnowballUsageResponse'</a>,
--   <a>getSnowballUsageResponse_snowballsInUse</a> - The number of Snow
--   devices that this account is currently using.
--   
--   <a>$sel:snowballLimit:GetSnowballUsageResponse'</a>,
--   <a>getSnowballUsageResponse_snowballLimit</a> - The service limit for
--   number of Snow devices this account can have at once. The default
--   service limit is 1 (one).
--   
--   <a>$sel:httpStatus:GetSnowballUsageResponse'</a>,
--   <a>getSnowballUsageResponse_httpStatus</a> - The response's http
--   status code.
newGetSnowballUsageResponse :: Int -> GetSnowballUsageResponse

-- | <i>See:</i> <a>newDescribeAddresses</a> smart constructor.
data DescribeAddresses
DescribeAddresses' :: Maybe Text -> Maybe Natural -> DescribeAddresses

-- | Create a value of <a>DescribeAddresses</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeAddresses'</a>,
--   <a>describeAddresses_nextToken</a> - HTTP requests are stateless. To
--   identify what object comes "next" in the list of <tt>ADDRESS</tt>
--   objects, you have the option of specifying a value for
--   <tt>NextToken</tt> as the starting point for your list of returned
--   addresses.
--   
--   <a>$sel:maxResults:DescribeAddresses'</a>,
--   <a>describeAddresses_maxResults</a> - The number of <tt>ADDRESS</tt>
--   objects to return.
newDescribeAddresses :: DescribeAddresses

-- | <i>See:</i> <a>newDescribeAddressesResponse</a> smart constructor.
data DescribeAddressesResponse
DescribeAddressesResponse' :: Maybe [Address] -> Maybe Text -> Int -> DescribeAddressesResponse

-- | Create a value of <a>DescribeAddressesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:addresses:DescribeAddressesResponse'</a>,
--   <a>describeAddressesResponse_addresses</a> - The Snow device shipping
--   addresses that were created for this account.
--   
--   <a>$sel:nextToken:DescribeAddresses'</a>,
--   <a>describeAddressesResponse_nextToken</a> - HTTP requests are
--   stateless. If you use the automatically generated <tt>NextToken</tt>
--   value in your next <tt>DescribeAddresses</tt> call, your list of
--   returned addresses will start from this point in the array.
--   
--   <a>$sel:httpStatus:DescribeAddressesResponse'</a>,
--   <a>describeAddressesResponse_httpStatus</a> - The response's http
--   status code.
newDescribeAddressesResponse :: Int -> DescribeAddressesResponse

-- | <i>See:</i> <a>newListCompatibleImages</a> smart constructor.
data ListCompatibleImages
ListCompatibleImages' :: Maybe Text -> Maybe Natural -> ListCompatibleImages

-- | Create a value of <a>ListCompatibleImages</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListCompatibleImages'</a>,
--   <a>listCompatibleImages_nextToken</a> - HTTP requests are stateless.
--   To identify what object comes "next" in the list of compatible images,
--   you can specify a value for <tt>NextToken</tt> as the starting point
--   for your list of returned images.
--   
--   <a>$sel:maxResults:ListCompatibleImages'</a>,
--   <a>listCompatibleImages_maxResults</a> - The maximum number of results
--   for the list of compatible images. Currently, a Snowball Edge device
--   can store 10 AMIs.
newListCompatibleImages :: ListCompatibleImages

-- | <i>See:</i> <a>newListCompatibleImagesResponse</a> smart constructor.
data ListCompatibleImagesResponse
ListCompatibleImagesResponse' :: Maybe [CompatibleImage] -> Maybe Text -> Int -> ListCompatibleImagesResponse

-- | Create a value of <a>ListCompatibleImagesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:compatibleImages:ListCompatibleImagesResponse'</a>,
--   <a>listCompatibleImagesResponse_compatibleImages</a> - A
--   JSON-formatted object that describes a compatible AMI, including the
--   ID and name for a Snow device AMI.
--   
--   <a>$sel:nextToken:ListCompatibleImages'</a>,
--   <a>listCompatibleImagesResponse_nextToken</a> - Because HTTP requests
--   are stateless, this is the starting point for your next list of
--   returned images.
--   
--   <a>$sel:httpStatus:ListCompatibleImagesResponse'</a>,
--   <a>listCompatibleImagesResponse_httpStatus</a> - The response's http
--   status code.
newListCompatibleImagesResponse :: Int -> ListCompatibleImagesResponse

-- | <i>See:</i> <a>newCreateLongTermPricing</a> smart constructor.
data CreateLongTermPricing
CreateLongTermPricing' :: Maybe SnowballType -> Maybe Bool -> LongTermPricingType -> CreateLongTermPricing

-- | Create a value of <a>CreateLongTermPricing</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:snowballType:CreateLongTermPricing'</a>,
--   <a>createLongTermPricing_snowballType</a> - The type of AWS Snow
--   Family device to use for the long-term pricing job.
--   
--   <a>$sel:isLongTermPricingAutoRenew:CreateLongTermPricing'</a>,
--   <a>createLongTermPricing_isLongTermPricingAutoRenew</a> - Specifies
--   whether the current long-term pricing type for the device should be
--   renewed.
--   
--   <a>$sel:longTermPricingType:CreateLongTermPricing'</a>,
--   <a>createLongTermPricing_longTermPricingType</a> - The type of
--   long-term pricing option you want for the device, either 1-year or
--   3-year long-term pricing.
newCreateLongTermPricing :: LongTermPricingType -> CreateLongTermPricing

-- | <i>See:</i> <a>newCreateLongTermPricingResponse</a> smart constructor.
data CreateLongTermPricingResponse
CreateLongTermPricingResponse' :: Maybe Text -> Int -> CreateLongTermPricingResponse

-- | Create a value of <a>CreateLongTermPricingResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:longTermPricingId:CreateLongTermPricingResponse'</a>,
--   <a>createLongTermPricingResponse_longTermPricingId</a> - The ID of the
--   long-term pricing type for the device.
--   
--   <a>$sel:httpStatus:CreateLongTermPricingResponse'</a>,
--   <a>createLongTermPricingResponse_httpStatus</a> - The response's http
--   status code.
newCreateLongTermPricingResponse :: Int -> CreateLongTermPricingResponse

-- | <i>See:</i> <a>newUpdateCluster</a> smart constructor.
data UpdateCluster
UpdateCluster' :: Maybe Notification -> Maybe Text -> Maybe Text -> Maybe ShippingOption -> Maybe JobResource -> Maybe OnDeviceServiceConfiguration -> Maybe Text -> Maybe Text -> Text -> UpdateCluster

-- | Create a value of <a>UpdateCluster</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:notification:UpdateCluster'</a>,
--   <a>updateCluster_notification</a> - The new or updated Notification
--   object.
--   
--   <a>$sel:forwardingAddressId:UpdateCluster'</a>,
--   <a>updateCluster_forwardingAddressId</a> - The updated ID for the
--   forwarding address for a cluster. This field is not supported in most
--   regions.
--   
--   <a>$sel:addressId:UpdateCluster'</a>, <a>updateCluster_addressId</a> -
--   The ID of the updated Address object.
--   
--   <a>$sel:shippingOption:UpdateCluster'</a>,
--   <a>updateCluster_shippingOption</a> - The updated shipping option
--   value of this cluster's ShippingDetails object.
--   
--   <a>$sel:resources:UpdateCluster'</a>, <a>updateCluster_resources</a> -
--   The updated arrays of JobResource objects that can include updated
--   S3Resource objects or LambdaResource objects.
--   
--   <a>$sel:onDeviceServiceConfiguration:UpdateCluster'</a>,
--   <a>updateCluster_onDeviceServiceConfiguration</a> - Specifies the
--   service or services on the Snow Family device that your transferred
--   data will be exported from or imported into. AWS Snow Family supports
--   Amazon S3 and NFS (Network File System).
--   
--   <a>$sel:description:UpdateCluster'</a>,
--   <a>updateCluster_description</a> - The updated description of this
--   cluster.
--   
--   <a>$sel:roleARN:UpdateCluster'</a>, <a>updateCluster_roleARN</a> - The
--   new role Amazon Resource Name (ARN) that you want to associate with
--   this cluster. To create a role ARN, use the <a>CreateRole</a> API
--   action in AWS Identity and Access Management (IAM).
--   
--   <a>$sel:clusterId:UpdateCluster'</a>, <a>updateCluster_clusterId</a> -
--   The cluster ID of the cluster that you want to update, for example
--   <tt>CID123e4567-e89b-12d3-a456-426655440000</tt>.
newUpdateCluster :: Text -> UpdateCluster

-- | <i>See:</i> <a>newUpdateClusterResponse</a> smart constructor.
data UpdateClusterResponse
UpdateClusterResponse' :: Int -> UpdateClusterResponse

-- | Create a value of <a>UpdateClusterResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateClusterResponse'</a>,
--   <a>updateClusterResponse_httpStatus</a> - The response's http status
--   code.
newUpdateClusterResponse :: Int -> UpdateClusterResponse

-- | <i>See:</i> <a>newGetSoftwareUpdates</a> smart constructor.
data GetSoftwareUpdates
GetSoftwareUpdates' :: Text -> GetSoftwareUpdates

-- | Create a value of <a>GetSoftwareUpdates</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:GetSoftwareUpdates'</a>, <a>getSoftwareUpdates_jobId</a>
--   - The ID for a job that you want to get the software update file for,
--   for example <tt>JID123e4567-e89b-12d3-a456-426655440000</tt>.
newGetSoftwareUpdates :: Text -> GetSoftwareUpdates

-- | <i>See:</i> <a>newGetSoftwareUpdatesResponse</a> smart constructor.
data GetSoftwareUpdatesResponse
GetSoftwareUpdatesResponse' :: Maybe Text -> Int -> GetSoftwareUpdatesResponse

-- | Create a value of <a>GetSoftwareUpdatesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:updatesURI:GetSoftwareUpdatesResponse'</a>,
--   <a>getSoftwareUpdatesResponse_updatesURI</a> - The Amazon S3 presigned
--   URL for the update file associated with the specified <tt>JobId</tt>
--   value. The software update will be available for 2 days after this
--   request is made. To access an update after the 2 days have passed,
--   you'll have to make another call to <tt>GetSoftwareUpdates</tt>.
--   
--   <a>$sel:httpStatus:GetSoftwareUpdatesResponse'</a>,
--   <a>getSoftwareUpdatesResponse_httpStatus</a> - The response's http
--   status code.
newGetSoftwareUpdatesResponse :: Int -> GetSoftwareUpdatesResponse

-- | <i>See:</i> <a>newCreateJob</a> smart constructor.
data CreateJob
CreateJob' :: Maybe JobType -> Maybe Text -> Maybe RemoteManagement -> Maybe Notification -> Maybe Text -> Maybe Text -> Maybe SnowballType -> Maybe Text -> Maybe ShippingOption -> Maybe JobResource -> Maybe OnDeviceServiceConfiguration -> Maybe Text -> Maybe DeviceConfiguration -> Maybe Text -> Maybe TaxDocuments -> Maybe Text -> Maybe SnowballCapacity -> CreateJob

-- | Create a value of <a>CreateJob</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobType:CreateJob'</a>, <a>createJob_jobType</a> - Defines the
--   type of job that you're creating.
--   
--   <a>$sel:kmsKeyARN:CreateJob'</a>, <a>createJob_kmsKeyARN</a> - The
--   <tt>KmsKeyARN</tt> that you want to associate with this job.
--   <tt>KmsKeyARN</tt>s are created using the <a>CreateKey</a> AWS Key
--   Management Service (KMS) API action.
--   
--   <a>$sel:remoteManagement:CreateJob'</a>,
--   <a>createJob_remoteManagement</a> - Allows you to securely operate and
--   manage Snowcone devices remotely from outside of your internal
--   network. When set to <tt>INSTALLED_AUTOSTART</tt>, remote management
--   will automatically be available when the device arrives at your
--   location. Otherwise, you need to use the Snowball Client to manage the
--   device.
--   
--   <a>$sel:notification:CreateJob'</a>, <a>createJob_notification</a> -
--   Defines the Amazon Simple Notification Service (Amazon SNS)
--   notification settings for this job.
--   
--   <a>$sel:forwardingAddressId:CreateJob'</a>,
--   <a>createJob_forwardingAddressId</a> - The forwarding address ID for a
--   job. This field is not supported in most Regions.
--   
--   <a>$sel:addressId:CreateJob'</a>, <a>createJob_addressId</a> - The ID
--   for the address that you want the Snow device shipped to.
--   
--   <a>$sel:snowballType:CreateJob'</a>, <a>createJob_snowballType</a> -
--   The type of AWS Snow Family device to use for this job.
--   
--   For cluster jobs, AWS Snow Family currently supports only the
--   <tt>EDGE</tt> device type.
--   
--   The type of AWS Snow device to use for this job. Currently, the only
--   supported device type for cluster jobs is <tt>EDGE</tt>.
--   
--   For more information, see <a>Snowball Edge Device Options</a> in the
--   Snowball Edge Developer Guide.
--   
--   For more information, see
--   "https://docs.aws.amazon.com/snowball/latest/snowcone-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>
--   or
--   "https://docs.aws.amazon.com/snowball/latest/developer-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>.
--   
--   <a>$sel:longTermPricingId:CreateJob'</a>,
--   <a>createJob_longTermPricingId</a> - The ID of the long-term pricing
--   type for the device.
--   
--   <a>$sel:shippingOption:CreateJob'</a>, <a>createJob_shippingOption</a>
--   - The shipping speed for this job. This speed doesn't dictate how soon
--   you'll get the Snow device, rather it represents how quickly the Snow
--   device moves to its destination while in transit. Regional shipping
--   speeds are as follows:
--   
--   <ul>
--   <li>In Australia, you have access to express shipping. Typically, Snow
--   devices shipped express are delivered in about a day.</li>
--   <li>In the European Union (EU), you have access to express shipping.
--   Typically, Snow devices shipped express are delivered in about a day.
--   In addition, most countries in the EU have access to standard
--   shipping, which typically takes less than a week, one way.</li>
--   <li>In India, Snow devices are delivered in one to seven days.</li>
--   <li>In the US, you have access to one-day shipping and two-day
--   shipping.</li>
--   </ul>
--   
--   <a>$sel:resources:CreateJob'</a>, <a>createJob_resources</a> - Defines
--   the Amazon S3 buckets associated with this job.
--   
--   With <tt>IMPORT</tt> jobs, you specify the bucket or buckets that your
--   transferred data will be imported into.
--   
--   With <tt>EXPORT</tt> jobs, you specify the bucket or buckets that your
--   transferred data will be exported from. Optionally, you can also
--   specify a <tt>KeyRange</tt> value. If you choose to export a range,
--   you define the length of the range by providing either an inclusive
--   <tt>BeginMarker</tt> value, an inclusive <tt>EndMarker</tt> value, or
--   both. Ranges are UTF-8 binary sorted.
--   
--   <a>$sel:onDeviceServiceConfiguration:CreateJob'</a>,
--   <a>createJob_onDeviceServiceConfiguration</a> - Specifies the service
--   or services on the Snow Family device that your transferred data will
--   be exported from or imported into. AWS Snow Family supports Amazon S3
--   and NFS (Network File System).
--   
--   <a>$sel:clusterId:CreateJob'</a>, <a>createJob_clusterId</a> - The ID
--   of a cluster. If you're creating a job for a node in a cluster, you
--   need to provide only this <tt>clusterId</tt> value. The other job
--   attributes are inherited from the cluster.
--   
--   <a>$sel:deviceConfiguration:CreateJob'</a>,
--   <a>createJob_deviceConfiguration</a> - Defines the device
--   configuration for an AWS Snowcone job.
--   
--   For more information, see
--   "https://docs.aws.amazon.com/snowball/latest/snowcone-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>
--   or
--   "https://docs.aws.amazon.com/snowball/latest/developer-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>.
--   
--   <a>$sel:description:CreateJob'</a>, <a>createJob_description</a> -
--   Defines an optional description of this specific job, for example
--   <tt>Important Photos 2016-08-11</tt>.
--   
--   <a>$sel:taxDocuments:CreateJob'</a>, <a>createJob_taxDocuments</a> -
--   The tax documents required in your AWS Region.
--   
--   <a>$sel:roleARN:CreateJob'</a>, <a>createJob_roleARN</a> - The
--   <tt>RoleARN</tt> that you want to associate with this job.
--   <tt>RoleArn</tt>s are created using the <a>CreateRole</a> AWS Identity
--   and Access Management (IAM) API action.
--   
--   <a>$sel:snowballCapacityPreference:CreateJob'</a>,
--   <a>createJob_snowballCapacityPreference</a> - If your job is being
--   created in one of the US regions, you have the option of specifying
--   what size Snow device you'd like for this job. In all other regions,
--   Snowballs come with 80 TB in storage capacity.
--   
--   For more information, see
--   "https://docs.aws.amazon.com/snowball/latest/snowcone-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>
--   or
--   "https://docs.aws.amazon.com/snowball/latest/developer-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>.
newCreateJob :: CreateJob

-- | <i>See:</i> <a>newCreateJobResponse</a> smart constructor.
data CreateJobResponse
CreateJobResponse' :: Maybe Text -> Int -> CreateJobResponse

-- | Create a value of <a>CreateJobResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:CreateJobResponse'</a>, <a>createJobResponse_jobId</a> -
--   The automatically generated ID for a job, for example
--   <tt>JID123e4567-e89b-12d3-a456-426655440000</tt>.
--   
--   <a>$sel:httpStatus:CreateJobResponse'</a>,
--   <a>createJobResponse_httpStatus</a> - The response's http status code.
newCreateJobResponse :: Int -> CreateJobResponse

-- | <i>See:</i> <a>newListLongTermPricing</a> smart constructor.
data ListLongTermPricing
ListLongTermPricing' :: Maybe Text -> Maybe Natural -> ListLongTermPricing

-- | Create a value of <a>ListLongTermPricing</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListLongTermPricing'</a>,
--   <a>listLongTermPricing_nextToken</a> - Because HTTP requests are
--   stateless, this is the starting point for your next list of
--   <tt>ListLongTermPricing</tt> to return.
--   
--   <a>$sel:maxResults:ListLongTermPricing'</a>,
--   <a>listLongTermPricing_maxResults</a> - The maximum number of
--   <tt>ListLongTermPricing</tt> objects to return.
newListLongTermPricing :: ListLongTermPricing

-- | <i>See:</i> <a>newListLongTermPricingResponse</a> smart constructor.
data ListLongTermPricingResponse
ListLongTermPricingResponse' :: Maybe [LongTermPricingListEntry] -> Maybe Text -> Int -> ListLongTermPricingResponse

-- | Create a value of <a>ListLongTermPricingResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:longTermPricingEntries:ListLongTermPricingResponse'</a>,
--   <a>listLongTermPricingResponse_longTermPricingEntries</a> - Each
--   <tt>LongTermPricingEntry</tt> object contains a status, ID, and other
--   information about the <tt>LongTermPricing</tt> type.
--   
--   <a>$sel:nextToken:ListLongTermPricing'</a>,
--   <a>listLongTermPricingResponse_nextToken</a> - Because HTTP requests
--   are stateless, this is the starting point for your next list of
--   returned <tt>ListLongTermPricing</tt> list.
--   
--   <a>$sel:httpStatus:ListLongTermPricingResponse'</a>,
--   <a>listLongTermPricingResponse_httpStatus</a> - The response's http
--   status code.
newListLongTermPricingResponse :: Int -> ListLongTermPricingResponse

-- | <i>See:</i> <a>newGetJobManifest</a> smart constructor.
data GetJobManifest
GetJobManifest' :: Text -> GetJobManifest

-- | Create a value of <a>GetJobManifest</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:GetJobManifest'</a>, <a>getJobManifest_jobId</a> - The
--   ID for a job that you want to get the manifest file for, for example
--   <tt>JID123e4567-e89b-12d3-a456-426655440000</tt>.
newGetJobManifest :: Text -> GetJobManifest

-- | <i>See:</i> <a>newGetJobManifestResponse</a> smart constructor.
data GetJobManifestResponse
GetJobManifestResponse' :: Maybe Text -> Int -> GetJobManifestResponse

-- | Create a value of <a>GetJobManifestResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:manifestURI:GetJobManifestResponse'</a>,
--   <a>getJobManifestResponse_manifestURI</a> - The Amazon S3 presigned
--   URL for the manifest file associated with the specified <tt>JobId</tt>
--   value.
--   
--   <a>$sel:httpStatus:GetJobManifestResponse'</a>,
--   <a>getJobManifestResponse_httpStatus</a> - The response's http status
--   code.
newGetJobManifestResponse :: Int -> GetJobManifestResponse

-- | <i>See:</i> <a>newCreateCluster</a> smart constructor.
data CreateCluster
CreateCluster' :: Maybe Text -> Maybe RemoteManagement -> Maybe Notification -> Maybe Text -> Maybe OnDeviceServiceConfiguration -> Maybe Text -> Maybe TaxDocuments -> JobType -> JobResource -> Text -> Text -> SnowballType -> ShippingOption -> CreateCluster

-- | Create a value of <a>CreateCluster</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:kmsKeyARN:CreateCluster'</a>, <a>createCluster_kmsKeyARN</a> -
--   The <tt>KmsKeyARN</tt> value that you want to associate with this
--   cluster. <tt>KmsKeyARN</tt> values are created by using the
--   <a>CreateKey</a> API action in AWS Key Management Service (AWS KMS).
--   
--   <a>$sel:remoteManagement:CreateCluster'</a>,
--   <a>createCluster_remoteManagement</a> - Allows you to securely operate
--   and manage Snow devices in a cluster remotely from outside of your
--   internal network. When set to <tt>INSTALLED_AUTOSTART</tt>, remote
--   management will automatically be available when the device arrives at
--   your location. Otherwise, you need to use the Snowball Client to
--   manage the device.
--   
--   <a>$sel:notification:CreateCluster'</a>,
--   <a>createCluster_notification</a> - The Amazon Simple Notification
--   Service (Amazon SNS) notification settings for this cluster.
--   
--   <a>$sel:forwardingAddressId:CreateCluster'</a>,
--   <a>createCluster_forwardingAddressId</a> - The forwarding address ID
--   for a cluster. This field is not supported in most regions.
--   
--   <a>$sel:onDeviceServiceConfiguration:CreateCluster'</a>,
--   <a>createCluster_onDeviceServiceConfiguration</a> - Specifies the
--   service or services on the Snow Family device that your transferred
--   data will be exported from or imported into. AWS Snow Family supports
--   Amazon S3 and NFS (Network File System).
--   
--   <a>$sel:description:CreateCluster'</a>,
--   <a>createCluster_description</a> - An optional description of this
--   specific cluster, for example <tt>Environmental Data Cluster-01</tt>.
--   
--   <a>$sel:taxDocuments:CreateCluster'</a>,
--   <a>createCluster_taxDocuments</a> - The tax documents required in your
--   AWS Region.
--   
--   <a>$sel:jobType:CreateCluster'</a>, <a>createCluster_jobType</a> - The
--   type of job for this cluster. Currently, the only job type supported
--   for clusters is <tt>LOCAL_USE</tt>.
--   
--   For more information, see
--   "https://docs.aws.amazon.com/snowball/latest/snowcone-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>
--   or
--   "https://docs.aws.amazon.com/snowball/latest/developer-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>.
--   
--   <a>$sel:resources:CreateCluster'</a>, <a>createCluster_resources</a> -
--   The resources associated with the cluster job. These resources include
--   Amazon S3 buckets and optional AWS Lambda functions written in the
--   Python language.
--   
--   <a>$sel:addressId:CreateCluster'</a>, <a>createCluster_addressId</a> -
--   The ID for the address that you want the cluster shipped to.
--   
--   <a>$sel:roleARN:CreateCluster'</a>, <a>createCluster_roleARN</a> - The
--   <tt>RoleARN</tt> that you want to associate with this cluster.
--   <tt>RoleArn</tt> values are created by using the <a>CreateRole</a> API
--   action in AWS Identity and Access Management (IAM).
--   
--   <a>$sel:snowballType:CreateCluster'</a>,
--   <a>createCluster_snowballType</a> - The type of AWS Snow Family device
--   to use for this cluster.
--   
--   For cluster jobs, AWS Snow Family currently supports only the
--   <tt>EDGE</tt> device type.
--   
--   For more information, see
--   "https://docs.aws.amazon.com/snowball/latest/snowcone-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>
--   or
--   "https://docs.aws.amazon.com/snowball/latest/developer-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>.
--   
--   <a>$sel:shippingOption:CreateCluster'</a>,
--   <a>createCluster_shippingOption</a> - The shipping speed for each node
--   in this cluster. This speed doesn't dictate how soon you'll get each
--   Snowball Edge device, rather it represents how quickly each device
--   moves to its destination while in transit. Regional shipping speeds
--   are as follows:
--   
--   <ul>
--   <li>In Australia, you have access to express shipping. Typically, Snow
--   devices shipped express are delivered in about a day.</li>
--   <li>In the European Union (EU), you have access to express shipping.
--   Typically, Snow devices shipped express are delivered in about a day.
--   In addition, most countries in the EU have access to standard
--   shipping, which typically takes less than a week, one way.</li>
--   <li>In India, Snow devices are delivered in one to seven days.</li>
--   <li>In the United States of America (US), you have access to one-day
--   shipping and two-day shipping.</li>
--   <li>In Australia, you have access to express shipping. Typically,
--   devices shipped express are delivered in about a day.</li>
--   <li>In the European Union (EU), you have access to express shipping.
--   Typically, Snow devices shipped express are delivered in about a day.
--   In addition, most countries in the EU have access to standard
--   shipping, which typically takes less than a week, one way.</li>
--   <li>In India, Snow devices are delivered in one to seven days.</li>
--   <li>In the US, you have access to one-day shipping and two-day
--   shipping.</li>
--   </ul>
newCreateCluster :: JobType -> JobResource -> Text -> Text -> SnowballType -> ShippingOption -> CreateCluster

-- | <i>See:</i> <a>newCreateClusterResponse</a> smart constructor.
data CreateClusterResponse
CreateClusterResponse' :: Maybe Text -> Int -> CreateClusterResponse

-- | Create a value of <a>CreateClusterResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterId:CreateClusterResponse'</a>,
--   <a>createClusterResponse_clusterId</a> - The automatically generated
--   ID for a cluster.
--   
--   <a>$sel:httpStatus:CreateClusterResponse'</a>,
--   <a>createClusterResponse_httpStatus</a> - The response's http status
--   code.
newCreateClusterResponse :: Int -> CreateClusterResponse

-- | <i>See:</i> <a>newListJobs</a> smart constructor.
data ListJobs
ListJobs' :: Maybe Text -> Maybe Natural -> ListJobs

-- | Create a value of <a>ListJobs</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListJobs'</a>, <a>listJobs_nextToken</a> - HTTP
--   requests are stateless. To identify what object comes "next" in the
--   list of <tt>JobListEntry</tt> objects, you have the option of
--   specifying <tt>NextToken</tt> as the starting point for your returned
--   list.
--   
--   <a>$sel:maxResults:ListJobs'</a>, <a>listJobs_maxResults</a> - The
--   number of <tt>JobListEntry</tt> objects to return.
newListJobs :: ListJobs

-- | <i>See:</i> <a>newListJobsResponse</a> smart constructor.
data ListJobsResponse
ListJobsResponse' :: Maybe [JobListEntry] -> Maybe Text -> Int -> ListJobsResponse

-- | Create a value of <a>ListJobsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobListEntries:ListJobsResponse'</a>,
--   <a>listJobsResponse_jobListEntries</a> - Each <tt>JobListEntry</tt>
--   object contains a job's state, a job's ID, and a value that indicates
--   whether the job is a job part, in the case of export jobs.
--   
--   <a>$sel:nextToken:ListJobs'</a>, <a>listJobsResponse_nextToken</a> -
--   HTTP requests are stateless. If you use this automatically generated
--   <tt>NextToken</tt> value in your next <tt>ListJobs</tt> call, your
--   returned <tt>JobListEntry</tt> objects will start from this point in
--   the array.
--   
--   <a>$sel:httpStatus:ListJobsResponse'</a>,
--   <a>listJobsResponse_httpStatus</a> - The response's http status code.
newListJobsResponse :: Int -> ListJobsResponse

-- | <i>See:</i> <a>newUpdateJob</a> smart constructor.
data UpdateJob
UpdateJob' :: Maybe Notification -> Maybe Text -> Maybe Text -> Maybe ShippingOption -> Maybe JobResource -> Maybe OnDeviceServiceConfiguration -> Maybe Text -> Maybe Text -> Maybe SnowballCapacity -> Text -> UpdateJob

-- | Create a value of <a>UpdateJob</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:notification:UpdateJob'</a>, <a>updateJob_notification</a> -
--   The new or updated Notification object.
--   
--   <a>$sel:forwardingAddressId:UpdateJob'</a>,
--   <a>updateJob_forwardingAddressId</a> - The updated ID for the
--   forwarding address for a job. This field is not supported in most
--   regions.
--   
--   <a>$sel:addressId:UpdateJob'</a>, <a>updateJob_addressId</a> - The ID
--   of the updated Address object.
--   
--   <a>$sel:shippingOption:UpdateJob'</a>, <a>updateJob_shippingOption</a>
--   - The updated shipping option value of this job's ShippingDetails
--   object.
--   
--   <a>$sel:resources:UpdateJob'</a>, <a>updateJob_resources</a> - The
--   updated <tt>JobResource</tt> object, or the updated JobResource
--   object.
--   
--   <a>$sel:onDeviceServiceConfiguration:UpdateJob'</a>,
--   <a>updateJob_onDeviceServiceConfiguration</a> - Specifies the service
--   or services on the Snow Family device that your transferred data will
--   be exported from or imported into. AWS Snow Family supports Amazon S3
--   and NFS (Network File System).
--   
--   <a>$sel:description:UpdateJob'</a>, <a>updateJob_description</a> - The
--   updated description of this job's JobMetadata object.
--   
--   <a>$sel:roleARN:UpdateJob'</a>, <a>updateJob_roleARN</a> - The new
--   role Amazon Resource Name (ARN) that you want to associate with this
--   job. To create a role ARN, use the <a>CreateRole</a>AWS Identity and
--   Access Management (IAM) API action.
--   
--   <a>$sel:snowballCapacityPreference:UpdateJob'</a>,
--   <a>updateJob_snowballCapacityPreference</a> - The updated
--   <tt>SnowballCapacityPreference</tt> of this job's JobMetadata object.
--   The 50 TB Snowballs are only available in the US regions.
--   
--   For more information, see
--   "https://docs.aws.amazon.com/snowball/latest/snowcone-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>
--   or
--   "https://docs.aws.amazon.com/snowball/latest/developer-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>.
--   
--   <a>$sel:jobId:UpdateJob'</a>, <a>updateJob_jobId</a> - The job ID of
--   the job that you want to update, for example
--   <tt>JID123e4567-e89b-12d3-a456-426655440000</tt>.
newUpdateJob :: Text -> UpdateJob

-- | <i>See:</i> <a>newUpdateJobResponse</a> smart constructor.
data UpdateJobResponse
UpdateJobResponse' :: Int -> UpdateJobResponse

-- | Create a value of <a>UpdateJobResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateJobResponse'</a>,
--   <a>updateJobResponse_httpStatus</a> - The response's http status code.
newUpdateJobResponse :: Int -> UpdateJobResponse

-- | <i>See:</i> <a>newUpdateJobShipmentState</a> smart constructor.
data UpdateJobShipmentState
UpdateJobShipmentState' :: Text -> ShipmentState -> UpdateJobShipmentState

-- | Create a value of <a>UpdateJobShipmentState</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:UpdateJobShipmentState'</a>,
--   <a>updateJobShipmentState_jobId</a> - The job ID of the job whose
--   shipment date you want to update, for example
--   <tt>JID123e4567-e89b-12d3-a456-426655440000</tt>.
--   
--   <a>$sel:shipmentState:UpdateJobShipmentState'</a>,
--   <a>updateJobShipmentState_shipmentState</a> - The state of a device
--   when it is being shipped.
--   
--   Set to <tt>RECEIVED</tt> when the device arrives at your location.
--   
--   Set to <tt>RETURNED</tt> when you have returned the device to AWS.
newUpdateJobShipmentState :: Text -> ShipmentState -> UpdateJobShipmentState

-- | <i>See:</i> <a>newUpdateJobShipmentStateResponse</a> smart
--   constructor.
data UpdateJobShipmentStateResponse
UpdateJobShipmentStateResponse' :: Int -> UpdateJobShipmentStateResponse

-- | Create a value of <a>UpdateJobShipmentStateResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateJobShipmentStateResponse'</a>,
--   <a>updateJobShipmentStateResponse_httpStatus</a> - The response's http
--   status code.
newUpdateJobShipmentStateResponse :: Int -> UpdateJobShipmentStateResponse

-- | <i>See:</i> <a>newGetJobUnlockCode</a> smart constructor.
data GetJobUnlockCode
GetJobUnlockCode' :: Text -> GetJobUnlockCode

-- | Create a value of <a>GetJobUnlockCode</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:GetJobUnlockCode'</a>, <a>getJobUnlockCode_jobId</a> -
--   The ID for the job that you want to get the <tt>UnlockCode</tt> value
--   for, for example <tt>JID123e4567-e89b-12d3-a456-426655440000</tt>.
newGetJobUnlockCode :: Text -> GetJobUnlockCode

-- | <i>See:</i> <a>newGetJobUnlockCodeResponse</a> smart constructor.
data GetJobUnlockCodeResponse
GetJobUnlockCodeResponse' :: Maybe Text -> Int -> GetJobUnlockCodeResponse

-- | Create a value of <a>GetJobUnlockCodeResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:unlockCode:GetJobUnlockCodeResponse'</a>,
--   <a>getJobUnlockCodeResponse_unlockCode</a> - The <tt>UnlockCode</tt>
--   value for the specified job. The <tt>UnlockCode</tt> value can be
--   accessed for up to 360 days after the job has been created.
--   
--   <a>$sel:httpStatus:GetJobUnlockCodeResponse'</a>,
--   <a>getJobUnlockCodeResponse_httpStatus</a> - The response's http
--   status code.
newGetJobUnlockCodeResponse :: Int -> GetJobUnlockCodeResponse

-- | <i>See:</i> <a>newListClusterJobs</a> smart constructor.
data ListClusterJobs
ListClusterJobs' :: Maybe Text -> Maybe Natural -> Text -> ListClusterJobs

-- | Create a value of <a>ListClusterJobs</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListClusterJobs'</a>,
--   <a>listClusterJobs_nextToken</a> - HTTP requests are stateless. To
--   identify what object comes "next" in the list of <tt>JobListEntry</tt>
--   objects, you have the option of specifying <tt>NextToken</tt> as the
--   starting point for your returned list.
--   
--   <a>$sel:maxResults:ListClusterJobs'</a>,
--   <a>listClusterJobs_maxResults</a> - The number of
--   <tt>JobListEntry</tt> objects to return.
--   
--   <a>$sel:clusterId:ListClusterJobs'</a>,
--   <a>listClusterJobs_clusterId</a> - The 39-character ID for the cluster
--   that you want to list, for example
--   <tt>CID123e4567-e89b-12d3-a456-426655440000</tt>.
newListClusterJobs :: Text -> ListClusterJobs

-- | <i>See:</i> <a>newListClusterJobsResponse</a> smart constructor.
data ListClusterJobsResponse
ListClusterJobsResponse' :: Maybe [JobListEntry] -> Maybe Text -> Int -> ListClusterJobsResponse

-- | Create a value of <a>ListClusterJobsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobListEntries:ListClusterJobsResponse'</a>,
--   <a>listClusterJobsResponse_jobListEntries</a> - Each
--   <tt>JobListEntry</tt> object contains a job's state, a job's ID, and a
--   value that indicates whether the job is a job part, in the case of
--   export jobs.
--   
--   <a>$sel:nextToken:ListClusterJobs'</a>,
--   <a>listClusterJobsResponse_nextToken</a> - HTTP requests are
--   stateless. If you use the automatically generated <tt>NextToken</tt>
--   value in your next <tt>ListClusterJobsResult</tt> call, your list of
--   returned jobs will start from this point in the array.
--   
--   <a>$sel:httpStatus:ListClusterJobsResponse'</a>,
--   <a>listClusterJobsResponse_httpStatus</a> - The response's http status
--   code.
newListClusterJobsResponse :: Int -> ListClusterJobsResponse

-- | <i>See:</i> <a>newDescribeJob</a> smart constructor.
data DescribeJob
DescribeJob' :: Text -> DescribeJob

-- | Create a value of <a>DescribeJob</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:DescribeJob'</a>, <a>describeJob_jobId</a> - The
--   automatically generated ID for a job, for example
--   <tt>JID123e4567-e89b-12d3-a456-426655440000</tt>.
newDescribeJob :: Text -> DescribeJob

-- | <i>See:</i> <a>newDescribeJobResponse</a> smart constructor.
data DescribeJobResponse
DescribeJobResponse' :: Maybe JobMetadata -> Maybe [JobMetadata] -> Int -> DescribeJobResponse

-- | Create a value of <a>DescribeJobResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobMetadata:DescribeJobResponse'</a>,
--   <a>describeJobResponse_jobMetadata</a> - Information about a specific
--   job, including shipping information, job status, and other important
--   metadata.
--   
--   <a>$sel:subJobMetadata:DescribeJobResponse'</a>,
--   <a>describeJobResponse_subJobMetadata</a> - Information about a
--   specific job part (in the case of an export job), including shipping
--   information, job status, and other important metadata.
--   
--   <a>$sel:httpStatus:DescribeJobResponse'</a>,
--   <a>describeJobResponse_httpStatus</a> - The response's http status
--   code.
newDescribeJobResponse :: Int -> DescribeJobResponse

-- | <i>See:</i> <a>newUpdateLongTermPricing</a> smart constructor.
data UpdateLongTermPricing
UpdateLongTermPricing' :: Maybe Bool -> Maybe Text -> Text -> UpdateLongTermPricing

-- | Create a value of <a>UpdateLongTermPricing</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:isLongTermPricingAutoRenew:UpdateLongTermPricing'</a>,
--   <a>updateLongTermPricing_isLongTermPricingAutoRenew</a> - If set to
--   <tt>true</tt>, specifies that the current long-term pricing type for
--   the device should be automatically renewed before the long-term
--   pricing contract expires.
--   
--   <a>$sel:replacementJob:UpdateLongTermPricing'</a>,
--   <a>updateLongTermPricing_replacementJob</a> - Specifies that a device
--   that is ordered with long-term pricing should be replaced with a new
--   device.
--   
--   <a>$sel:longTermPricingId:UpdateLongTermPricing'</a>,
--   <a>updateLongTermPricing_longTermPricingId</a> - The ID of the
--   long-term pricing type for the device.
newUpdateLongTermPricing :: Text -> UpdateLongTermPricing

-- | <i>See:</i> <a>newUpdateLongTermPricingResponse</a> smart constructor.
data UpdateLongTermPricingResponse
UpdateLongTermPricingResponse' :: Int -> UpdateLongTermPricingResponse

-- | Create a value of <a>UpdateLongTermPricingResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateLongTermPricingResponse'</a>,
--   <a>updateLongTermPricingResponse_httpStatus</a> - The response's http
--   status code.
newUpdateLongTermPricingResponse :: Int -> UpdateLongTermPricingResponse

-- | <i>See:</i> <a>newListClusters</a> smart constructor.
data ListClusters
ListClusters' :: Maybe Text -> Maybe Natural -> ListClusters

-- | Create a value of <a>ListClusters</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListClusters'</a>, <a>listClusters_nextToken</a> -
--   HTTP requests are stateless. To identify what object comes "next" in
--   the list of <tt>ClusterListEntry</tt> objects, you have the option of
--   specifying <tt>NextToken</tt> as the starting point for your returned
--   list.
--   
--   <a>$sel:maxResults:ListClusters'</a>, <a>listClusters_maxResults</a> -
--   The number of <tt>ClusterListEntry</tt> objects to return.
newListClusters :: ListClusters

-- | <i>See:</i> <a>newListClustersResponse</a> smart constructor.
data ListClustersResponse
ListClustersResponse' :: Maybe [ClusterListEntry] -> Maybe Text -> Int -> ListClustersResponse

-- | Create a value of <a>ListClustersResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterListEntries:ListClustersResponse'</a>,
--   <a>listClustersResponse_clusterListEntries</a> - Each
--   <tt>ClusterListEntry</tt> object contains a cluster's state, a
--   cluster's ID, and other important status information.
--   
--   <a>$sel:nextToken:ListClusters'</a>,
--   <a>listClustersResponse_nextToken</a> - HTTP requests are stateless.
--   If you use the automatically generated <tt>NextToken</tt> value in
--   your next <tt>ClusterListEntry</tt> call, your list of returned
--   clusters will start from this point in the array.
--   
--   <a>$sel:httpStatus:ListClustersResponse'</a>,
--   <a>listClustersResponse_httpStatus</a> - The response's http status
--   code.
newListClustersResponse :: Int -> ListClustersResponse

-- | <i>See:</i> <a>newDescribeAddress</a> smart constructor.
data DescribeAddress
DescribeAddress' :: Text -> DescribeAddress

-- | Create a value of <a>DescribeAddress</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:addressId:DescribeAddress'</a>,
--   <a>describeAddress_addressId</a> - The automatically generated ID for
--   a specific address.
newDescribeAddress :: Text -> DescribeAddress

-- | <i>See:</i> <a>newDescribeAddressResponse</a> smart constructor.
data DescribeAddressResponse
DescribeAddressResponse' :: Maybe Address -> Int -> DescribeAddressResponse

-- | Create a value of <a>DescribeAddressResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:address:DescribeAddressResponse'</a>,
--   <a>describeAddressResponse_address</a> - The address that you want the
--   Snow device(s) associated with a specific job to be shipped to.
--   
--   <a>$sel:httpStatus:DescribeAddressResponse'</a>,
--   <a>describeAddressResponse_httpStatus</a> - The response's http status
--   code.
newDescribeAddressResponse :: Int -> DescribeAddressResponse

-- | <i>See:</i> <a>newDescribeReturnShippingLabel</a> smart constructor.
data DescribeReturnShippingLabel
DescribeReturnShippingLabel' :: Text -> DescribeReturnShippingLabel

-- | Create a value of <a>DescribeReturnShippingLabel</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:DescribeReturnShippingLabel'</a>,
--   <a>describeReturnShippingLabel_jobId</a> - The automatically generated
--   ID for a job, for example
--   <tt>JID123e4567-e89b-12d3-a456-426655440000</tt>.
newDescribeReturnShippingLabel :: Text -> DescribeReturnShippingLabel

-- | <i>See:</i> <a>newDescribeReturnShippingLabelResponse</a> smart
--   constructor.
data DescribeReturnShippingLabelResponse
DescribeReturnShippingLabelResponse' :: Maybe ShippingLabelStatus -> Maybe POSIX -> Int -> DescribeReturnShippingLabelResponse

-- | Create a value of <a>DescribeReturnShippingLabelResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:DescribeReturnShippingLabelResponse'</a>,
--   <a>describeReturnShippingLabelResponse_status</a> - The status
--   information of the task on a Snow device that is being returned to
--   AWS.
--   
--   <a>$sel:expirationDate:DescribeReturnShippingLabelResponse'</a>,
--   <a>describeReturnShippingLabelResponse_expirationDate</a> - The
--   expiration date of the current return shipping label.
--   
--   <a>$sel:httpStatus:DescribeReturnShippingLabelResponse'</a>,
--   <a>describeReturnShippingLabelResponse_httpStatus</a> - The response's
--   http status code.
newDescribeReturnShippingLabelResponse :: Int -> DescribeReturnShippingLabelResponse

-- | <i>See:</i> <a>newCancelJob</a> smart constructor.
data CancelJob
CancelJob' :: Text -> CancelJob

-- | Create a value of <a>CancelJob</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:CancelJob'</a>, <a>cancelJob_jobId</a> - The
--   39-character job ID for the job that you want to cancel, for example
--   <tt>JID123e4567-e89b-12d3-a456-426655440000</tt>.
newCancelJob :: Text -> CancelJob

-- | <i>See:</i> <a>newCancelJobResponse</a> smart constructor.
data CancelJobResponse
CancelJobResponse' :: Int -> CancelJobResponse

-- | Create a value of <a>CancelJobResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CancelJobResponse'</a>,
--   <a>cancelJobResponse_httpStatus</a> - The response's http status code.
newCancelJobResponse :: Int -> CancelJobResponse
newtype ClusterState
ClusterState' :: Text -> ClusterState
[fromClusterState] :: ClusterState -> Text
pattern ClusterState_AwaitingQuorum :: ClusterState
pattern ClusterState_Cancelled :: ClusterState
pattern ClusterState_Complete :: ClusterState
pattern ClusterState_InUse :: ClusterState
pattern ClusterState_Pending :: ClusterState
newtype DeviceServiceName
DeviceServiceName' :: Text -> DeviceServiceName
[fromDeviceServiceName] :: DeviceServiceName -> Text
pattern DeviceServiceName_NFS_ON_DEVICE_SERVICE :: DeviceServiceName
pattern DeviceServiceName_S3_ON_DEVICE_SERVICE :: DeviceServiceName
newtype JobState
JobState' :: Text -> JobState
[fromJobState] :: JobState -> Text
pattern JobState_Cancelled :: JobState
pattern JobState_Complete :: JobState
pattern JobState_InProgress :: JobState
pattern JobState_InTransitToAWS :: JobState
pattern JobState_InTransitToCustomer :: JobState
pattern JobState_Listing :: JobState
pattern JobState_New :: JobState
pattern JobState_Pending :: JobState
pattern JobState_PreparingAppliance :: JobState
pattern JobState_PreparingShipment :: JobState
pattern JobState_WithAWS :: JobState
pattern JobState_WithAWSSortingFacility :: JobState
pattern JobState_WithCustomer :: JobState
newtype JobType
JobType' :: Text -> JobType
[fromJobType] :: JobType -> Text
pattern JobType_EXPORT :: JobType
pattern JobType_IMPORT :: JobType
pattern JobType_LOCAL_USE :: JobType
newtype LongTermPricingType
LongTermPricingType' :: Text -> LongTermPricingType
[fromLongTermPricingType] :: LongTermPricingType -> Text
pattern LongTermPricingType_OneYear :: LongTermPricingType
pattern LongTermPricingType_ThreeYear :: LongTermPricingType
newtype RemoteManagement
RemoteManagement' :: Text -> RemoteManagement
[fromRemoteManagement] :: RemoteManagement -> Text
pattern RemoteManagement_INSTALLED_AUTOSTART :: RemoteManagement
pattern RemoteManagement_INSTALLED_ONLY :: RemoteManagement
newtype ShipmentState
ShipmentState' :: Text -> ShipmentState
[fromShipmentState] :: ShipmentState -> Text
pattern ShipmentState_RECEIVED :: ShipmentState
pattern ShipmentState_RETURNED :: ShipmentState
newtype ShippingLabelStatus
ShippingLabelStatus' :: Text -> ShippingLabelStatus
[fromShippingLabelStatus] :: ShippingLabelStatus -> Text
pattern ShippingLabelStatus_Failed :: ShippingLabelStatus
pattern ShippingLabelStatus_InProgress :: ShippingLabelStatus
pattern ShippingLabelStatus_Succeeded :: ShippingLabelStatus
pattern ShippingLabelStatus_TimedOut :: ShippingLabelStatus
newtype ShippingOption
ShippingOption' :: Text -> ShippingOption
[fromShippingOption] :: ShippingOption -> Text
pattern ShippingOption_EXPRESS :: ShippingOption
pattern ShippingOption_NEXT_DAY :: ShippingOption
pattern ShippingOption_SECOND_DAY :: ShippingOption
pattern ShippingOption_STANDARD :: ShippingOption
newtype SnowballCapacity
SnowballCapacity' :: Text -> SnowballCapacity
[fromSnowballCapacity] :: SnowballCapacity -> Text
pattern SnowballCapacity_NoPreference :: SnowballCapacity
pattern SnowballCapacity_T100 :: SnowballCapacity
pattern SnowballCapacity_T14 :: SnowballCapacity
pattern SnowballCapacity_T42 :: SnowballCapacity
pattern SnowballCapacity_T50 :: SnowballCapacity
pattern SnowballCapacity_T8 :: SnowballCapacity
pattern SnowballCapacity_T80 :: SnowballCapacity
pattern SnowballCapacity_T98 :: SnowballCapacity
newtype SnowballType
SnowballType' :: Text -> SnowballType
[fromSnowballType] :: SnowballType -> Text
pattern SnowballType_EDGE :: SnowballType
pattern SnowballType_EDGE_C :: SnowballType
pattern SnowballType_EDGE_CG :: SnowballType
pattern SnowballType_EDGE_S :: SnowballType
pattern SnowballType_SNC1_HDD :: SnowballType
pattern SnowballType_SNC1_SSD :: SnowballType
pattern SnowballType_STANDARD :: SnowballType
newtype StorageUnit
StorageUnit' :: Text -> StorageUnit
[fromStorageUnit] :: StorageUnit -> Text
pattern StorageUnit_TB :: StorageUnit
newtype TransferOption
TransferOption' :: Text -> TransferOption
[fromTransferOption] :: TransferOption -> Text
pattern TransferOption_EXPORT :: TransferOption
pattern TransferOption_IMPORT :: TransferOption
pattern TransferOption_LOCAL_USE :: TransferOption

-- | The address that you want the Snow device(s) associated with a
--   specific job to be shipped to. Addresses are validated at the time of
--   creation. The address you provide must be located within the
--   serviceable area of your region. Although no individual elements of
--   the <tt>Address</tt> are required, if the address is invalid or
--   unsupported, then an exception is thrown.
--   
--   <i>See:</i> <a>newAddress</a> smart constructor.
data Address
Address' :: Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Address

-- | Create a value of <a>Address</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:isRestricted:Address'</a>, <a>address_isRestricted</a> - If
--   the address you are creating is a primary address, then set this
--   option to true. This field is not supported in most regions.
--   
--   <a>$sel:street3:Address'</a>, <a>address_street3</a> - The third line
--   in a street address that a Snow device is to be delivered to.
--   
--   <a>$sel:landmark:Address'</a>, <a>address_landmark</a> - This field is
--   no longer used and the value is ignored.
--   
--   <a>$sel:postalCode:Address'</a>, <a>address_postalCode</a> - The
--   postal code in an address that a Snow device is to be delivered to.
--   
--   <a>$sel:country:Address'</a>, <a>address_country</a> - The country in
--   an address that a Snow device is to be delivered to.
--   
--   <a>$sel:stateOrProvince:Address'</a>, <a>address_stateOrProvince</a> -
--   The state or province in an address that a Snow device is to be
--   delivered to.
--   
--   <a>$sel:street2:Address'</a>, <a>address_street2</a> - The second line
--   in a street address that a Snow device is to be delivered to.
--   
--   <a>$sel:addressId:Address'</a>, <a>address_addressId</a> - The unique
--   ID for an address.
--   
--   <a>$sel:city:Address'</a>, <a>address_city</a> - The city in an
--   address that a Snow device is to be delivered to.
--   
--   <a>$sel:phoneNumber:Address'</a>, <a>address_phoneNumber</a> - The
--   phone number associated with an address that a Snow device is to be
--   delivered to.
--   
--   <a>$sel:company:Address'</a>, <a>address_company</a> - The name of the
--   company to receive a Snow device at an address.
--   
--   <a>$sel:name:Address'</a>, <a>address_name</a> - The name of a person
--   to receive a Snow device at an address.
--   
--   <a>$sel:prefectureOrDistrict:Address'</a>,
--   <a>address_prefectureOrDistrict</a> - This field is no longer used and
--   the value is ignored.
--   
--   <a>$sel:street1:Address'</a>, <a>address_street1</a> - The first line
--   in a street address that a Snow device is to be delivered to.
newAddress :: Address

-- | Contains a cluster's state, a cluster's ID, and other important
--   information.
--   
--   <i>See:</i> <a>newClusterListEntry</a> smart constructor.
data ClusterListEntry
ClusterListEntry' :: Maybe ClusterState -> Maybe Text -> Maybe POSIX -> Maybe Text -> ClusterListEntry

-- | Create a value of <a>ClusterListEntry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterState:ClusterListEntry'</a>,
--   <a>clusterListEntry_clusterState</a> - The current state of this
--   cluster. For information about the state of a specific node, see
--   JobListEntry$JobState.
--   
--   <a>$sel:clusterId:ClusterListEntry'</a>,
--   <a>clusterListEntry_clusterId</a> - The 39-character ID for the
--   cluster that you want to list, for example
--   <tt>CID123e4567-e89b-12d3-a456-426655440000</tt>.
--   
--   <a>$sel:creationDate:ClusterListEntry'</a>,
--   <a>clusterListEntry_creationDate</a> - The creation date for this
--   cluster.
--   
--   <a>$sel:description:ClusterListEntry'</a>,
--   <a>clusterListEntry_description</a> - Defines an optional description
--   of the cluster, for example <tt>Environmental Data Cluster-01</tt>.
newClusterListEntry :: ClusterListEntry

-- | Contains metadata about a specific cluster.
--   
--   <i>See:</i> <a>newClusterMetadata</a> smart constructor.
data ClusterMetadata
ClusterMetadata' :: Maybe JobType -> Maybe Text -> Maybe ClusterState -> Maybe Notification -> Maybe Text -> Maybe Text -> Maybe SnowballType -> Maybe ShippingOption -> Maybe JobResource -> Maybe OnDeviceServiceConfiguration -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe TaxDocuments -> Maybe Text -> ClusterMetadata

-- | Create a value of <a>ClusterMetadata</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobType:ClusterMetadata'</a>, <a>clusterMetadata_jobType</a> -
--   The type of job for this cluster. Currently, the only job type
--   supported for clusters is <tt>LOCAL_USE</tt>.
--   
--   <a>$sel:kmsKeyARN:ClusterMetadata'</a>,
--   <a>clusterMetadata_kmsKeyARN</a> - The <tt>KmsKeyARN</tt> Amazon
--   Resource Name (ARN) associated with this cluster. This ARN was created
--   using the <a>CreateKey</a> API action in AWS Key Management Service
--   (AWS KMS).
--   
--   <a>$sel:clusterState:ClusterMetadata'</a>,
--   <a>clusterMetadata_clusterState</a> - The current status of the
--   cluster.
--   
--   <a>$sel:notification:ClusterMetadata'</a>,
--   <a>clusterMetadata_notification</a> - The Amazon Simple Notification
--   Service (Amazon SNS) notification settings for this cluster.
--   
--   <a>$sel:forwardingAddressId:ClusterMetadata'</a>,
--   <a>clusterMetadata_forwardingAddressId</a> - The ID of the address
--   that you want a cluster shipped to, after it will be shipped to its
--   primary address. This field is not supported in most regions.
--   
--   <a>$sel:addressId:ClusterMetadata'</a>,
--   <a>clusterMetadata_addressId</a> - The automatically generated ID for
--   a specific address.
--   
--   <a>$sel:snowballType:ClusterMetadata'</a>,
--   <a>clusterMetadata_snowballType</a> - The type of AWS Snow device to
--   use for this cluster.
--   
--   For cluster jobs, AWS Snow Family currently supports only the
--   <tt>EDGE</tt> device type.
--   
--   <a>$sel:shippingOption:ClusterMetadata'</a>,
--   <a>clusterMetadata_shippingOption</a> - The shipping speed for each
--   node in this cluster. This speed doesn't dictate how soon you'll get
--   each device, rather it represents how quickly each device moves to its
--   destination while in transit. Regional shipping speeds are as follows:
--   
--   <ul>
--   <li>In Australia, you have access to express shipping. Typically,
--   devices shipped express are delivered in about a day.</li>
--   <li>In the European Union (EU), you have access to express shipping.
--   Typically, Snow devices shipped express are delivered in about a day.
--   In addition, most countries in the EU have access to standard
--   shipping, which typically takes less than a week, one way.</li>
--   <li>In India, Snow devices are delivered in one to seven days.</li>
--   <li>In the US, you have access to one-day shipping and two-day
--   shipping.</li>
--   </ul>
--   
--   <a>$sel:resources:ClusterMetadata'</a>,
--   <a>clusterMetadata_resources</a> - The arrays of JobResource objects
--   that can include updated S3Resource objects or LambdaResource objects.
--   
--   <a>$sel:onDeviceServiceConfiguration:ClusterMetadata'</a>,
--   <a>clusterMetadata_onDeviceServiceConfiguration</a> - Represents
--   metadata and configuration settings for services on an AWS Snow Family
--   device.
--   
--   <a>$sel:clusterId:ClusterMetadata'</a>,
--   <a>clusterMetadata_clusterId</a> - The automatically generated ID for
--   a cluster.
--   
--   <a>$sel:creationDate:ClusterMetadata'</a>,
--   <a>clusterMetadata_creationDate</a> - The creation date for this
--   cluster.
--   
--   <a>$sel:description:ClusterMetadata'</a>,
--   <a>clusterMetadata_description</a> - The optional description of the
--   cluster.
--   
--   <a>$sel:taxDocuments:ClusterMetadata'</a>,
--   <a>clusterMetadata_taxDocuments</a> - The tax documents required in
--   your AWS Region.
--   
--   <a>$sel:roleARN:ClusterMetadata'</a>, <a>clusterMetadata_roleARN</a> -
--   The role ARN associated with this cluster. This ARN was created using
--   the <a>CreateRole</a> API action in AWS Identity and Access Management
--   (IAM).
newClusterMetadata :: ClusterMetadata

-- | A JSON-formatted object that describes a compatible Amazon Machine
--   Image (AMI), including the ID and name for a Snow device AMI. This AMI
--   is compatible with the device's physical hardware requirements, and it
--   should be able to be run in an SBE1 instance on the device.
--   
--   <i>See:</i> <a>newCompatibleImage</a> smart constructor.
data CompatibleImage
CompatibleImage' :: Maybe Text -> Maybe Text -> CompatibleImage

-- | Create a value of <a>CompatibleImage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:CompatibleImage'</a>, <a>compatibleImage_name</a> - The
--   optional name of a compatible image.
--   
--   <a>$sel:amiId:CompatibleImage'</a>, <a>compatibleImage_amiId</a> - The
--   unique identifier for an individual Snow device AMI.
newCompatibleImage :: CompatibleImage

-- | Defines the real-time status of a Snow device's data transfer while
--   the device is at AWS. This data is only available while a job has a
--   <tt>JobState</tt> value of <tt>InProgress</tt>, for both import and
--   export jobs.
--   
--   <i>See:</i> <a>newDataTransfer</a> smart constructor.
data DataTransfer
DataTransfer' :: Maybe Integer -> Maybe Integer -> Maybe Integer -> Maybe Integer -> DataTransfer

-- | Create a value of <a>DataTransfer</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:totalObjects:DataTransfer'</a>,
--   <a>dataTransfer_totalObjects</a> - The total number of objects for a
--   transfer between a Snow device and Amazon S3. This value is set to 0
--   (zero) until all the keys that will be transferred have been listed.
--   
--   <a>$sel:totalBytes:DataTransfer'</a>, <a>dataTransfer_totalBytes</a> -
--   The total bytes of data for a transfer between a Snow device and
--   Amazon S3. This value is set to 0 (zero) until all the keys that will
--   be transferred have been listed.
--   
--   <a>$sel:objectsTransferred:DataTransfer'</a>,
--   <a>dataTransfer_objectsTransferred</a> - The number of objects
--   transferred between a Snow device and Amazon S3.
--   
--   <a>$sel:bytesTransferred:DataTransfer'</a>,
--   <a>dataTransfer_bytesTransferred</a> - The number of bytes transferred
--   between a Snow device and Amazon S3.
newDataTransfer :: DataTransfer

-- | The container for <tt>SnowconeDeviceConfiguration</tt>.
--   
--   <i>See:</i> <a>newDeviceConfiguration</a> smart constructor.
data DeviceConfiguration
DeviceConfiguration' :: Maybe SnowconeDeviceConfiguration -> DeviceConfiguration

-- | Create a value of <a>DeviceConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:snowconeDeviceConfiguration:DeviceConfiguration'</a>,
--   <a>deviceConfiguration_snowconeDeviceConfiguration</a> - Returns
--   information about the device configuration for an AWS Snowcone job.
newDeviceConfiguration :: DeviceConfiguration

-- | A JSON-formatted object that contains the IDs for an Amazon Machine
--   Image (AMI), including the Amazon EC2 AMI ID and the Snow device AMI
--   ID. Each AMI has these two IDs to simplify identifying the AMI in both
--   the AWS Cloud and on the device.
--   
--   <i>See:</i> <a>newEc2AmiResource</a> smart constructor.
data Ec2AmiResource
Ec2AmiResource' :: Maybe Text -> Text -> Ec2AmiResource

-- | Create a value of <a>Ec2AmiResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:snowballAmiId:Ec2AmiResource'</a>,
--   <a>ec2AmiResource_snowballAmiId</a> - The ID of the AMI on the Snow
--   device.
--   
--   <a>$sel:amiId:Ec2AmiResource'</a>, <a>ec2AmiResource_amiId</a> - The
--   ID of the AMI in Amazon EC2.
newEc2AmiResource :: Text -> Ec2AmiResource

-- | The container for the EventTriggerDefinition$EventResourceARN.
--   
--   <i>See:</i> <a>newEventTriggerDefinition</a> smart constructor.
data EventTriggerDefinition
EventTriggerDefinition' :: Maybe Text -> EventTriggerDefinition

-- | Create a value of <a>EventTriggerDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventResourceARN:EventTriggerDefinition'</a>,
--   <a>eventTriggerDefinition_eventResourceARN</a> - The Amazon Resource
--   Name (ARN) for any local Amazon S3 resource that is an AWS Lambda
--   function's event trigger associated with this job.
newEventTriggerDefinition :: EventTriggerDefinition

-- | The tax documents required in AWS Regions in India.
--   
--   <i>See:</i> <a>newINDTaxDocuments</a> smart constructor.
data INDTaxDocuments
INDTaxDocuments' :: Maybe Text -> INDTaxDocuments

-- | Create a value of <a>INDTaxDocuments</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gstin:INDTaxDocuments'</a>, <a>iNDTaxDocuments_gstin</a> - The
--   Goods and Services Tax (GST) documents required in AWS Regions in
--   India.
newINDTaxDocuments :: INDTaxDocuments

-- | Each <tt>JobListEntry</tt> object contains a job's state, a job's ID,
--   and a value that indicates whether the job is a job part, in the case
--   of an export job.
--   
--   <i>See:</i> <a>newJobListEntry</a> smart constructor.
data JobListEntry
JobListEntry' :: Maybe JobType -> Maybe Text -> Maybe JobState -> Maybe SnowballType -> Maybe POSIX -> Maybe Text -> Maybe Bool -> JobListEntry

-- | Create a value of <a>JobListEntry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobType:JobListEntry'</a>, <a>jobListEntry_jobType</a> - The
--   type of job.
--   
--   <a>$sel:jobId:JobListEntry'</a>, <a>jobListEntry_jobId</a> - The
--   automatically generated ID for a job, for example
--   <tt>JID123e4567-e89b-12d3-a456-426655440000</tt>.
--   
--   <a>$sel:jobState:JobListEntry'</a>, <a>jobListEntry_jobState</a> - The
--   current state of this job.
--   
--   <a>$sel:snowballType:JobListEntry'</a>,
--   <a>jobListEntry_snowballType</a> - The type of device used with this
--   job.
--   
--   <a>$sel:creationDate:JobListEntry'</a>,
--   <a>jobListEntry_creationDate</a> - The creation date for this job.
--   
--   <a>$sel:description:JobListEntry'</a>, <a>jobListEntry_description</a>
--   - The optional description of this specific job, for example
--   <tt>Important Photos 2016-08-11</tt>.
--   
--   <a>$sel:isMaster:JobListEntry'</a>, <a>jobListEntry_isMaster</a> - A
--   value that indicates that this job is a main job. A main job
--   represents a successful request to create an export job. Main jobs
--   aren't associated with any Snowballs. Instead, each main job will have
--   at least one job part, and each job part is associated with a
--   Snowball. It might take some time before the job parts associated with
--   a particular main job are listed, because they are created after the
--   main job is created.
newJobListEntry :: JobListEntry

-- | Contains job logs. Whenever a Snow device is used to import data into
--   or export data out of Amazon S3, you'll have the option of downloading
--   a PDF job report. Job logs are returned as a part of the response
--   syntax of the <tt>DescribeJob</tt> action in the <tt>JobMetadata</tt>
--   data type. The job logs can be accessed for up to 60 minutes after
--   this request has been made. To access any of the job logs after 60
--   minutes have passed, you'll have to make another call to the
--   <tt>DescribeJob</tt> action.
--   
--   For import jobs, the PDF job report becomes available at the end of
--   the import process. For export jobs, your job report typically becomes
--   available while the Snow device for your job part is being delivered
--   to you.
--   
--   The job report provides you insight into the state of your Amazon S3
--   data transfer. The report includes details about your job or job part
--   for your records.
--   
--   For deeper visibility into the status of your transferred objects, you
--   can look at the two associated logs: a success log and a failure log.
--   The logs are saved in comma-separated value (CSV) format, and the name
--   of each log includes the ID of the job or job part that the log
--   describes.
--   
--   <i>See:</i> <a>newJobLogs</a> smart constructor.
data JobLogs
JobLogs' :: Maybe Text -> Maybe Text -> Maybe Text -> JobLogs

-- | Create a value of <a>JobLogs</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobFailureLogURI:JobLogs'</a>, <a>jobLogs_jobFailureLogURI</a>
--   - A link to an Amazon S3 presigned URL where the job failure log is
--   located.
--   
--   <a>$sel:jobCompletionReportURI:JobLogs'</a>,
--   <a>jobLogs_jobCompletionReportURI</a> - A link to an Amazon S3
--   presigned URL where the job completion report is located.
--   
--   <a>$sel:jobSuccessLogURI:JobLogs'</a>, <a>jobLogs_jobSuccessLogURI</a>
--   - A link to an Amazon S3 presigned URL where the job success log is
--   located.
newJobLogs :: JobLogs

-- | Contains information about a specific job including shipping
--   information, job status, and other important metadata. This
--   information is returned as a part of the response syntax of the
--   <tt>DescribeJob</tt> action.
--   
--   <i>See:</i> <a>newJobMetadata</a> smart constructor.
data JobMetadata
JobMetadata' :: Maybe JobType -> Maybe Text -> Maybe RemoteManagement -> Maybe Text -> Maybe JobLogs -> Maybe Notification -> Maybe JobState -> Maybe Text -> Maybe ShippingDetails -> Maybe Text -> Maybe SnowballType -> Maybe DataTransfer -> Maybe Text -> Maybe JobResource -> Maybe OnDeviceServiceConfiguration -> Maybe Text -> Maybe POSIX -> Maybe DeviceConfiguration -> Maybe Text -> Maybe TaxDocuments -> Maybe Text -> Maybe SnowballCapacity -> JobMetadata

-- | Create a value of <a>JobMetadata</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobType:JobMetadata'</a>, <a>jobMetadata_jobType</a> - The
--   type of job.
--   
--   <a>$sel:kmsKeyARN:JobMetadata'</a>, <a>jobMetadata_kmsKeyARN</a> - The
--   Amazon Resource Name (ARN) for the AWS Key Management Service (AWS
--   KMS) key associated with this job. This ARN was created using the
--   <a>CreateKey</a> API action in AWS KMS.
--   
--   <a>$sel:remoteManagement:JobMetadata'</a>,
--   <a>jobMetadata_remoteManagement</a> - Allows you to securely operate
--   and manage Snowcone devices remotely from outside of your internal
--   network. When set to <tt>INSTALLED_AUTOSTART</tt>, remote management
--   will automatically be available when the device arrives at your
--   location. Otherwise, you need to use the Snowball Client to manage the
--   device.
--   
--   <a>$sel:jobId:JobMetadata'</a>, <a>jobMetadata_jobId</a> - The
--   automatically generated ID for a job, for example
--   <tt>JID123e4567-e89b-12d3-a456-426655440000</tt>.
--   
--   <a>$sel:jobLogInfo:JobMetadata'</a>, <a>jobMetadata_jobLogInfo</a> -
--   Links to Amazon S3 presigned URLs for the job report and logs. For
--   import jobs, the PDF job report becomes available at the end of the
--   import process. For export jobs, your job report typically becomes
--   available while the Snow device for your job part is being delivered
--   to you.
--   
--   <a>$sel:notification:JobMetadata'</a>, <a>jobMetadata_notification</a>
--   - The Amazon Simple Notification Service (Amazon SNS) notification
--   settings associated with a specific job. The <tt>Notification</tt>
--   object is returned as a part of the response syntax of the
--   <tt>DescribeJob</tt> action in the <tt>JobMetadata</tt> data type.
--   
--   <a>$sel:jobState:JobMetadata'</a>, <a>jobMetadata_jobState</a> - The
--   current status of the jobs.
--   
--   <a>$sel:forwardingAddressId:JobMetadata'</a>,
--   <a>jobMetadata_forwardingAddressId</a> - The ID of the address that
--   you want a job shipped to, after it will be shipped to its primary
--   address. This field is not supported in most regions.
--   
--   <a>$sel:shippingDetails:JobMetadata'</a>,
--   <a>jobMetadata_shippingDetails</a> - A job's shipping information,
--   including inbound and outbound tracking numbers and shipping speed
--   options.
--   
--   <a>$sel:addressId:JobMetadata'</a>, <a>jobMetadata_addressId</a> - The
--   ID for the address that you want the Snow device shipped to.
--   
--   <a>$sel:snowballType:JobMetadata'</a>, <a>jobMetadata_snowballType</a>
--   - The type of device used with this job.
--   
--   <a>$sel:dataTransferProgress:JobMetadata'</a>,
--   <a>jobMetadata_dataTransferProgress</a> - A value that defines the
--   real-time status of a Snow device's data transfer while the device is
--   at AWS. This data is only available while a job has a
--   <tt>JobState</tt> value of <tt>InProgress</tt>, for both import and
--   export jobs.
--   
--   <a>$sel:longTermPricingId:JobMetadata'</a>,
--   <a>jobMetadata_longTermPricingId</a> - The ID of the long-term pricing
--   type for the device.
--   
--   <a>$sel:resources:JobMetadata'</a>, <a>jobMetadata_resources</a> - An
--   array of <tt>S3Resource</tt> objects. Each <tt>S3Resource</tt> object
--   represents an Amazon S3 bucket that your transferred data will be
--   exported from or imported into.
--   
--   <a>$sel:onDeviceServiceConfiguration:JobMetadata'</a>,
--   <a>jobMetadata_onDeviceServiceConfiguration</a> - Represents metadata
--   and configuration settings for services on an AWS Snow Family device.
--   
--   <a>$sel:clusterId:JobMetadata'</a>, <a>jobMetadata_clusterId</a> - The
--   39-character ID for the cluster, for example
--   <tt>CID123e4567-e89b-12d3-a456-426655440000</tt>.
--   
--   <a>$sel:creationDate:JobMetadata'</a>, <a>jobMetadata_creationDate</a>
--   - The creation date for this job.
--   
--   <a>$sel:deviceConfiguration:JobMetadata'</a>,
--   <a>jobMetadata_deviceConfiguration</a> - Undocumented member.
--   
--   <a>$sel:description:JobMetadata'</a>, <a>jobMetadata_description</a> -
--   The description of the job, provided at job creation.
--   
--   <a>$sel:taxDocuments:JobMetadata'</a>, <a>jobMetadata_taxDocuments</a>
--   - The metadata associated with the tax documents required in your AWS
--   Region.
--   
--   <a>$sel:roleARN:JobMetadata'</a>, <a>jobMetadata_roleARN</a> - The
--   role ARN associated with this job. This ARN was created using the
--   <a>CreateRole</a> API action in AWS Identity and Access Management
--   (IAM).
--   
--   <a>$sel:snowballCapacityPreference:JobMetadata'</a>,
--   <a>jobMetadata_snowballCapacityPreference</a> - The Snow device
--   capacity preference for this job, specified at job creation. In US
--   regions, you can choose between 50 TB and 80 TB Snowballs. All other
--   regions use 80 TB capacity Snowballs.
--   
--   For more information, see
--   "https://docs.aws.amazon.com/snowball/latest/snowcone-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>
--   or
--   "https://docs.aws.amazon.com/snowball/latest/developer-guide/snow-device-types.html"
--   (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>.
newJobMetadata :: JobMetadata

-- | Contains an array of AWS resource objects. Each object represents an
--   Amazon S3 bucket, an AWS Lambda function, or an Amazon Machine Image
--   (AMI) based on Amazon EC2 that is associated with a particular job.
--   
--   <i>See:</i> <a>newJobResource</a> smart constructor.
data JobResource
JobResource' :: Maybe [Ec2AmiResource] -> Maybe [LambdaResource] -> Maybe [S3Resource] -> JobResource

-- | Create a value of <a>JobResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ec2AmiResources:JobResource'</a>,
--   <a>jobResource_ec2AmiResources</a> - The Amazon Machine Images (AMIs)
--   associated with this job.
--   
--   <a>$sel:lambdaResources:JobResource'</a>,
--   <a>jobResource_lambdaResources</a> - The Python-language Lambda
--   functions for this job.
--   
--   <a>$sel:s3Resources:JobResource'</a>, <a>jobResource_s3Resources</a> -
--   An array of <tt>S3Resource</tt> objects.
newJobResource :: JobResource

-- | Contains a key range. For export jobs, a <tt>S3Resource</tt> object
--   can have an optional <tt>KeyRange</tt> value. The length of the range
--   is defined at job creation, and has either an inclusive
--   <tt>BeginMarker</tt>, an inclusive <tt>EndMarker</tt>, or both. Ranges
--   are UTF-8 binary sorted.
--   
--   <i>See:</i> <a>newKeyRange</a> smart constructor.
data KeyRange
KeyRange' :: Maybe Text -> Maybe Text -> KeyRange

-- | Create a value of <a>KeyRange</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:endMarker:KeyRange'</a>, <a>keyRange_endMarker</a> - The key
--   that ends an optional key range for an export job. Ranges are
--   inclusive and UTF-8 binary sorted.
--   
--   <a>$sel:beginMarker:KeyRange'</a>, <a>keyRange_beginMarker</a> - The
--   key that starts an optional key range for an export job. Ranges are
--   inclusive and UTF-8 binary sorted.
newKeyRange :: KeyRange

-- | Identifies
--   
--   <i>See:</i> <a>newLambdaResource</a> smart constructor.
data LambdaResource
LambdaResource' :: Maybe [EventTriggerDefinition] -> Maybe Text -> LambdaResource

-- | Create a value of <a>LambdaResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventTriggers:LambdaResource'</a>,
--   <a>lambdaResource_eventTriggers</a> - The array of ARNs for S3Resource
--   objects to trigger the LambdaResource objects associated with this
--   job.
--   
--   <a>$sel:lambdaArn:LambdaResource'</a>, <a>lambdaResource_lambdaArn</a>
--   - An Amazon Resource Name (ARN) that represents an AWS Lambda function
--   to be triggered by PUT object actions on the associated local Amazon
--   S3 resource.
newLambdaResource :: LambdaResource

-- | Each <tt>LongTermPricingListEntry</tt> object contains information
--   about a long-term pricing type.
--   
--   <i>See:</i> <a>newLongTermPricingListEntry</a> smart constructor.
data LongTermPricingListEntry
LongTermPricingListEntry' :: Maybe LongTermPricingType -> Maybe POSIX -> Maybe SnowballType -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe [Text] -> Maybe Text -> LongTermPricingListEntry

-- | Create a value of <a>LongTermPricingListEntry</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:longTermPricingType:LongTermPricingListEntry'</a>,
--   <a>longTermPricingListEntry_longTermPricingType</a> - The type of
--   long-term pricing that was selected for the device.
--   
--   <a>$sel:longTermPricingStartDate:LongTermPricingListEntry'</a>,
--   <a>longTermPricingListEntry_longTermPricingStartDate</a> - The start
--   date of the long-term pricing contract.
--   
--   <a>$sel:snowballType:LongTermPricingListEntry'</a>,
--   <a>longTermPricingListEntry_snowballType</a> - The type of AWS Snow
--   Family device associated with this long-term pricing job.
--   
--   <a>$sel:longTermPricingId:LongTermPricingListEntry'</a>,
--   <a>longTermPricingListEntry_longTermPricingId</a> - The ID of the
--   long-term pricing type for the device.
--   
--   <a>$sel:longTermPricingEndDate:LongTermPricingListEntry'</a>,
--   <a>longTermPricingListEntry_longTermPricingEndDate</a> - The end date
--   the long-term pricing contract.
--   
--   <a>$sel:currentActiveJob:LongTermPricingListEntry'</a>,
--   <a>longTermPricingListEntry_currentActiveJob</a> - The current active
--   jobs on the device the long-term pricing type.
--   
--   <a>$sel:isLongTermPricingAutoRenew:LongTermPricingListEntry'</a>,
--   <a>longTermPricingListEntry_isLongTermPricingAutoRenew</a> - If set to
--   <tt>true</tt>, specifies that the current long-term pricing type for
--   the device should be automatically renewed before the long-term
--   pricing contract expires.
--   
--   <a>$sel:longTermPricingStatus:LongTermPricingListEntry'</a>,
--   <a>longTermPricingListEntry_longTermPricingStatus</a> - The status of
--   the long-term pricing type.
--   
--   <a>$sel:jobIds:LongTermPricingListEntry'</a>,
--   <a>longTermPricingListEntry_jobIds</a> - The IDs of the jobs that are
--   associated with a long-term pricing type.
--   
--   <a>$sel:replacementJob:LongTermPricingListEntry'</a>,
--   <a>longTermPricingListEntry_replacementJob</a> - A new device that
--   replaces a device that is ordered with long-term pricing.
newLongTermPricingListEntry :: LongTermPricingListEntry

-- | An object that represents metadata and configuration settings for NFS
--   service on an AWS Snow Family device.
--   
--   <i>See:</i> <a>newNFSOnDeviceServiceConfiguration</a> smart
--   constructor.
data NFSOnDeviceServiceConfiguration
NFSOnDeviceServiceConfiguration' :: Maybe Natural -> Maybe StorageUnit -> NFSOnDeviceServiceConfiguration

-- | Create a value of <a>NFSOnDeviceServiceConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:storageLimit:NFSOnDeviceServiceConfiguration'</a>,
--   <a>nFSOnDeviceServiceConfiguration_storageLimit</a> - The maximum NFS
--   storage for one Snowball Family device.
--   
--   <a>$sel:storageUnit:NFSOnDeviceServiceConfiguration'</a>,
--   <a>nFSOnDeviceServiceConfiguration_storageUnit</a> - The scale unit of
--   the NFS storage on the device.
--   
--   Valid values: TB.
newNFSOnDeviceServiceConfiguration :: NFSOnDeviceServiceConfiguration

-- | The Amazon Simple Notification Service (Amazon SNS) notification
--   settings associated with a specific job. The <tt>Notification</tt>
--   object is returned as a part of the response syntax of the
--   <tt>DescribeJob</tt> action in the <tt>JobMetadata</tt> data type.
--   
--   When the notification settings are defined during job creation, you
--   can choose to notify based on a specific set of job states using the
--   <tt>JobStatesToNotify</tt> array of strings, or you can specify that
--   you want to have Amazon SNS notifications sent out for all job states
--   with <tt>NotifyAll</tt> set to true.
--   
--   <i>See:</i> <a>newNotification</a> smart constructor.
data Notification
Notification' :: Maybe Bool -> Maybe Text -> Maybe [JobState] -> Notification

-- | Create a value of <a>Notification</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:notifyAll:Notification'</a>, <a>notification_notifyAll</a> -
--   Any change in job state will trigger a notification for this job.
--   
--   <a>$sel:snsTopicARN:Notification'</a>, <a>notification_snsTopicARN</a>
--   - The new SNS <tt>TopicArn</tt> that you want to associate with this
--   job. You can create Amazon Resource Names (ARNs) for topics by using
--   the <a>CreateTopic</a> Amazon SNS API action.
--   
--   You can subscribe email addresses to an Amazon SNS topic through the
--   AWS Management Console, or by using the <a>Subscribe</a> Amazon Simple
--   Notification Service (Amazon SNS) API action.
--   
--   <a>$sel:jobStatesToNotify:Notification'</a>,
--   <a>notification_jobStatesToNotify</a> - The list of job states that
--   will trigger a notification for this job.
newNotification :: Notification

-- | An object that represents metadata and configuration settings for
--   services on an AWS Snow Family device.
--   
--   <i>See:</i> <a>newOnDeviceServiceConfiguration</a> smart constructor.
data OnDeviceServiceConfiguration
OnDeviceServiceConfiguration' :: Maybe NFSOnDeviceServiceConfiguration -> OnDeviceServiceConfiguration

-- | Create a value of <a>OnDeviceServiceConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nFSOnDeviceService:OnDeviceServiceConfiguration'</a>,
--   <a>onDeviceServiceConfiguration_nFSOnDeviceService</a> - Represents
--   the NFS service on a Snow Family device.
newOnDeviceServiceConfiguration :: OnDeviceServiceConfiguration

-- | Each <tt>S3Resource</tt> object represents an Amazon S3 bucket that
--   your transferred data will be exported from or imported into. For
--   export jobs, this object can have an optional <tt>KeyRange</tt> value.
--   The length of the range is defined at job creation, and has either an
--   inclusive <tt>BeginMarker</tt>, an inclusive <tt>EndMarker</tt>, or
--   both. Ranges are UTF-8 binary sorted.
--   
--   <i>See:</i> <a>newS3Resource</a> smart constructor.
data S3Resource
S3Resource' :: Maybe KeyRange -> Maybe Text -> Maybe [TargetOnDeviceService] -> S3Resource

-- | Create a value of <a>S3Resource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyRange:S3Resource'</a>, <a>s3Resource_keyRange</a> - For
--   export jobs, you can provide an optional <tt>KeyRange</tt> within a
--   specific Amazon S3 bucket. The length of the range is defined at job
--   creation, and has either an inclusive <tt>BeginMarker</tt>, an
--   inclusive <tt>EndMarker</tt>, or both. Ranges are UTF-8 binary sorted.
--   
--   <a>$sel:bucketArn:S3Resource'</a>, <a>s3Resource_bucketArn</a> - The
--   Amazon Resource Name (ARN) of an Amazon S3 bucket.
--   
--   <a>$sel:targetOnDeviceServices:S3Resource'</a>,
--   <a>s3Resource_targetOnDeviceServices</a> - Specifies the service or
--   services on the Snow Family device that your transferred data will be
--   exported from or imported into. AWS Snow Family supports Amazon S3 and
--   NFS (Network File System).
newS3Resource :: S3Resource

-- | The <tt>Status</tt> and <tt>TrackingNumber</tt> information for an
--   inbound or outbound shipment.
--   
--   <i>See:</i> <a>newShipment</a> smart constructor.
data Shipment
Shipment' :: Maybe Text -> Maybe Text -> Shipment

-- | Create a value of <a>Shipment</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:Shipment'</a>, <a>shipment_status</a> - Status
--   information for a shipment.
--   
--   <a>$sel:trackingNumber:Shipment'</a>, <a>shipment_trackingNumber</a> -
--   The tracking number for this job. Using this tracking number with your
--   region's carrier's website, you can track a Snow device as the carrier
--   transports it.
--   
--   For India, the carrier is Amazon Logistics. For all other regions, UPS
--   is the carrier.
newShipment :: Shipment

-- | A job's shipping information, including inbound and outbound tracking
--   numbers and shipping speed options.
--   
--   <i>See:</i> <a>newShippingDetails</a> smart constructor.
data ShippingDetails
ShippingDetails' :: Maybe ShippingOption -> Maybe Shipment -> Maybe Shipment -> ShippingDetails

-- | Create a value of <a>ShippingDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:shippingOption:ShippingDetails'</a>,
--   <a>shippingDetails_shippingOption</a> - The shipping speed for a
--   particular job. This speed doesn't dictate how soon you'll get the
--   Snow device from the job's creation date. This speed represents how
--   quickly it moves to its destination while in transit. Regional
--   shipping speeds are as follows:
--   
--   <ul>
--   <li>In Australia, you have access to express shipping. Typically, Snow
--   devices shipped express are delivered in about a day.</li>
--   <li>In the European Union (EU), you have access to express shipping.
--   Typically, Snow devices shipped express are delivered in about a day.
--   In addition, most countries in the EU have access to standard
--   shipping, which typically takes less than a week, one way.</li>
--   <li>In India, Snow devices are delivered in one to seven days.</li>
--   <li>In the United States of America (US), you have access to one-day
--   shipping and two-day shipping.</li>
--   </ul>
--   
--   <a>$sel:outboundShipment:ShippingDetails'</a>,
--   <a>shippingDetails_outboundShipment</a> - The <tt>Status</tt> and
--   <tt>TrackingNumber</tt> values for a Snow device being delivered to
--   the address that you specified for a particular job.
--   
--   <a>$sel:inboundShipment:ShippingDetails'</a>,
--   <a>shippingDetails_inboundShipment</a> - The <tt>Status</tt> and
--   <tt>TrackingNumber</tt> values for a Snow device being returned to AWS
--   for a particular job.
newShippingDetails :: ShippingDetails

-- | Specifies the device configuration for an AWS Snowcone job.
--   
--   <i>See:</i> <a>newSnowconeDeviceConfiguration</a> smart constructor.
data SnowconeDeviceConfiguration
SnowconeDeviceConfiguration' :: Maybe WirelessConnection -> SnowconeDeviceConfiguration

-- | Create a value of <a>SnowconeDeviceConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:wirelessConnection:SnowconeDeviceConfiguration'</a>,
--   <a>snowconeDeviceConfiguration_wirelessConnection</a> - Configures the
--   wireless connection for the AWS Snowcone device.
newSnowconeDeviceConfiguration :: SnowconeDeviceConfiguration

-- | An object that represents the service or services on the Snow Family
--   device that your transferred data will be exported from or imported
--   into. AWS Snow Family supports Amazon S3 and NFS (Network File
--   System).
--   
--   <i>See:</i> <a>newTargetOnDeviceService</a> smart constructor.
data TargetOnDeviceService
TargetOnDeviceService' :: Maybe TransferOption -> Maybe DeviceServiceName -> TargetOnDeviceService

-- | Create a value of <a>TargetOnDeviceService</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:transferOption:TargetOnDeviceService'</a>,
--   <a>targetOnDeviceService_transferOption</a> - Specifies whether the
--   data is being imported or exported. You can import or export the data,
--   or use it locally on the device.
--   
--   <a>$sel:serviceName:TargetOnDeviceService'</a>,
--   <a>targetOnDeviceService_serviceName</a> - Specifies the name of the
--   service on the Snow Family device that your transferred data will be
--   exported from or imported into.
newTargetOnDeviceService :: TargetOnDeviceService

-- | The tax documents required in your AWS Region.
--   
--   <i>See:</i> <a>newTaxDocuments</a> smart constructor.
data TaxDocuments
TaxDocuments' :: Maybe INDTaxDocuments -> TaxDocuments

-- | Create a value of <a>TaxDocuments</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ind:TaxDocuments'</a>, <a>taxDocuments_ind</a> - Undocumented
--   member.
newTaxDocuments :: TaxDocuments

-- | Configures the wireless connection on an AWS Snowcone device.
--   
--   <i>See:</i> <a>newWirelessConnection</a> smart constructor.
data WirelessConnection
WirelessConnection' :: Maybe Bool -> WirelessConnection

-- | Create a value of <a>WirelessConnection</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:isWifiEnabled:WirelessConnection'</a>,
--   <a>wirelessConnection_isWifiEnabled</a> - Enables the Wi-Fi adapter on
--   an AWS Snowcone device.
newWirelessConnection :: WirelessConnection
