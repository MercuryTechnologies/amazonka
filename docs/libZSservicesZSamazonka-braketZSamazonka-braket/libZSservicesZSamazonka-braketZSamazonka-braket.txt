-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-braketZSamazonka-braket
@version 2.0


module Amazonka.Braket.Types.CancellationStatus
newtype CancellationStatus
CancellationStatus' :: Text -> CancellationStatus
[fromCancellationStatus] :: CancellationStatus -> Text
pattern CancellationStatus_CANCELLED :: CancellationStatus
pattern CancellationStatus_CANCELLING :: CancellationStatus
instance Amazonka.Data.XML.ToXML Amazonka.Braket.Types.CancellationStatus.CancellationStatus
instance Amazonka.Data.XML.FromXML Amazonka.Braket.Types.CancellationStatus.CancellationStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Braket.Types.CancellationStatus.CancellationStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Braket.Types.CancellationStatus.CancellationStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Braket.Types.CancellationStatus.CancellationStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Braket.Types.CancellationStatus.CancellationStatus
instance Amazonka.Data.Query.ToQuery Amazonka.Braket.Types.CancellationStatus.CancellationStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.Braket.Types.CancellationStatus.CancellationStatus
instance Amazonka.Data.Log.ToLog Amazonka.Braket.Types.CancellationStatus.CancellationStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.Braket.Types.CancellationStatus.CancellationStatus
instance Amazonka.Data.Text.ToText Amazonka.Braket.Types.CancellationStatus.CancellationStatus
instance Amazonka.Data.Text.FromText Amazonka.Braket.Types.CancellationStatus.CancellationStatus
instance Control.DeepSeq.NFData Amazonka.Braket.Types.CancellationStatus.CancellationStatus
instance Data.Hashable.Class.Hashable Amazonka.Braket.Types.CancellationStatus.CancellationStatus
instance GHC.Generics.Generic Amazonka.Braket.Types.CancellationStatus.CancellationStatus
instance GHC.Classes.Ord Amazonka.Braket.Types.CancellationStatus.CancellationStatus
instance GHC.Classes.Eq Amazonka.Braket.Types.CancellationStatus.CancellationStatus
instance GHC.Read.Read Amazonka.Braket.Types.CancellationStatus.CancellationStatus
instance GHC.Show.Show Amazonka.Braket.Types.CancellationStatus.CancellationStatus


module Amazonka.Braket.Types.DeviceStatus
newtype DeviceStatus
DeviceStatus' :: Text -> DeviceStatus
[fromDeviceStatus] :: DeviceStatus -> Text
pattern DeviceStatus_OFFLINE :: DeviceStatus
pattern DeviceStatus_ONLINE :: DeviceStatus
pattern DeviceStatus_RETIRED :: DeviceStatus
instance Amazonka.Data.XML.ToXML Amazonka.Braket.Types.DeviceStatus.DeviceStatus
instance Amazonka.Data.XML.FromXML Amazonka.Braket.Types.DeviceStatus.DeviceStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Braket.Types.DeviceStatus.DeviceStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Braket.Types.DeviceStatus.DeviceStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Braket.Types.DeviceStatus.DeviceStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Braket.Types.DeviceStatus.DeviceStatus
instance Amazonka.Data.Query.ToQuery Amazonka.Braket.Types.DeviceStatus.DeviceStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.Braket.Types.DeviceStatus.DeviceStatus
instance Amazonka.Data.Log.ToLog Amazonka.Braket.Types.DeviceStatus.DeviceStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.Braket.Types.DeviceStatus.DeviceStatus
instance Amazonka.Data.Text.ToText Amazonka.Braket.Types.DeviceStatus.DeviceStatus
instance Amazonka.Data.Text.FromText Amazonka.Braket.Types.DeviceStatus.DeviceStatus
instance Control.DeepSeq.NFData Amazonka.Braket.Types.DeviceStatus.DeviceStatus
instance Data.Hashable.Class.Hashable Amazonka.Braket.Types.DeviceStatus.DeviceStatus
instance GHC.Generics.Generic Amazonka.Braket.Types.DeviceStatus.DeviceStatus
instance GHC.Classes.Ord Amazonka.Braket.Types.DeviceStatus.DeviceStatus
instance GHC.Classes.Eq Amazonka.Braket.Types.DeviceStatus.DeviceStatus
instance GHC.Read.Read Amazonka.Braket.Types.DeviceStatus.DeviceStatus
instance GHC.Show.Show Amazonka.Braket.Types.DeviceStatus.DeviceStatus


module Amazonka.Braket.Types.DeviceType
newtype DeviceType
DeviceType' :: Text -> DeviceType
[fromDeviceType] :: DeviceType -> Text
pattern DeviceType_QPU :: DeviceType
pattern DeviceType_SIMULATOR :: DeviceType
instance Amazonka.Data.XML.ToXML Amazonka.Braket.Types.DeviceType.DeviceType
instance Amazonka.Data.XML.FromXML Amazonka.Braket.Types.DeviceType.DeviceType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Braket.Types.DeviceType.DeviceType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Braket.Types.DeviceType.DeviceType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Braket.Types.DeviceType.DeviceType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Braket.Types.DeviceType.DeviceType
instance Amazonka.Data.Query.ToQuery Amazonka.Braket.Types.DeviceType.DeviceType
instance Amazonka.Data.Headers.ToHeader Amazonka.Braket.Types.DeviceType.DeviceType
instance Amazonka.Data.Log.ToLog Amazonka.Braket.Types.DeviceType.DeviceType
instance Amazonka.Data.ByteString.ToByteString Amazonka.Braket.Types.DeviceType.DeviceType
instance Amazonka.Data.Text.ToText Amazonka.Braket.Types.DeviceType.DeviceType
instance Amazonka.Data.Text.FromText Amazonka.Braket.Types.DeviceType.DeviceType
instance Control.DeepSeq.NFData Amazonka.Braket.Types.DeviceType.DeviceType
instance Data.Hashable.Class.Hashable Amazonka.Braket.Types.DeviceType.DeviceType
instance GHC.Generics.Generic Amazonka.Braket.Types.DeviceType.DeviceType
instance GHC.Classes.Ord Amazonka.Braket.Types.DeviceType.DeviceType
instance GHC.Classes.Eq Amazonka.Braket.Types.DeviceType.DeviceType
instance GHC.Read.Read Amazonka.Braket.Types.DeviceType.DeviceType
instance GHC.Show.Show Amazonka.Braket.Types.DeviceType.DeviceType


module Amazonka.Braket.Types.DeviceSummary

-- | Includes information about the device.
--   
--   <i>See:</i> <a>newDeviceSummary</a> smart constructor.
data DeviceSummary
DeviceSummary' :: Text -> Text -> DeviceStatus -> DeviceType -> Text -> DeviceSummary

-- | The ARN of the device.
[$sel:deviceArn:DeviceSummary'] :: DeviceSummary -> Text

-- | The name of the device.
[$sel:deviceName:DeviceSummary'] :: DeviceSummary -> Text

-- | The status of the device.
[$sel:deviceStatus:DeviceSummary'] :: DeviceSummary -> DeviceStatus

-- | The type of the device.
[$sel:deviceType:DeviceSummary'] :: DeviceSummary -> DeviceType

-- | The provider of the device.
[$sel:providerName:DeviceSummary'] :: DeviceSummary -> Text

-- | Create a value of <a>DeviceSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceArn:DeviceSummary'</a>, <a>deviceSummary_deviceArn</a> -
--   The ARN of the device.
--   
--   <a>$sel:deviceName:DeviceSummary'</a>, <a>deviceSummary_deviceName</a>
--   - The name of the device.
--   
--   <a>$sel:deviceStatus:DeviceSummary'</a>,
--   <a>deviceSummary_deviceStatus</a> - The status of the device.
--   
--   <a>$sel:deviceType:DeviceSummary'</a>, <a>deviceSummary_deviceType</a>
--   - The type of the device.
--   
--   <a>$sel:providerName:DeviceSummary'</a>,
--   <a>deviceSummary_providerName</a> - The provider of the device.
newDeviceSummary :: Text -> Text -> DeviceStatus -> DeviceType -> Text -> DeviceSummary

-- | The ARN of the device.
deviceSummary_deviceArn :: Lens' DeviceSummary Text

-- | The name of the device.
deviceSummary_deviceName :: Lens' DeviceSummary Text

-- | The status of the device.
deviceSummary_deviceStatus :: Lens' DeviceSummary DeviceStatus

-- | The type of the device.
deviceSummary_deviceType :: Lens' DeviceSummary DeviceType

-- | The provider of the device.
deviceSummary_providerName :: Lens' DeviceSummary Text
instance GHC.Generics.Generic Amazonka.Braket.Types.DeviceSummary.DeviceSummary
instance GHC.Show.Show Amazonka.Braket.Types.DeviceSummary.DeviceSummary
instance GHC.Read.Read Amazonka.Braket.Types.DeviceSummary.DeviceSummary
instance GHC.Classes.Eq Amazonka.Braket.Types.DeviceSummary.DeviceSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Braket.Types.DeviceSummary.DeviceSummary
instance Data.Hashable.Class.Hashable Amazonka.Braket.Types.DeviceSummary.DeviceSummary
instance Control.DeepSeq.NFData Amazonka.Braket.Types.DeviceSummary.DeviceSummary


module Amazonka.Braket.Types.QuantumTaskStatus
newtype QuantumTaskStatus
QuantumTaskStatus' :: Text -> QuantumTaskStatus
[fromQuantumTaskStatus] :: QuantumTaskStatus -> Text
pattern QuantumTaskStatus_CANCELLED :: QuantumTaskStatus
pattern QuantumTaskStatus_CANCELLING :: QuantumTaskStatus
pattern QuantumTaskStatus_COMPLETED :: QuantumTaskStatus
pattern QuantumTaskStatus_CREATED :: QuantumTaskStatus
pattern QuantumTaskStatus_FAILED :: QuantumTaskStatus
pattern QuantumTaskStatus_QUEUED :: QuantumTaskStatus
pattern QuantumTaskStatus_RUNNING :: QuantumTaskStatus
instance Amazonka.Data.XML.ToXML Amazonka.Braket.Types.QuantumTaskStatus.QuantumTaskStatus
instance Amazonka.Data.XML.FromXML Amazonka.Braket.Types.QuantumTaskStatus.QuantumTaskStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Braket.Types.QuantumTaskStatus.QuantumTaskStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Braket.Types.QuantumTaskStatus.QuantumTaskStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Braket.Types.QuantumTaskStatus.QuantumTaskStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Braket.Types.QuantumTaskStatus.QuantumTaskStatus
instance Amazonka.Data.Query.ToQuery Amazonka.Braket.Types.QuantumTaskStatus.QuantumTaskStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.Braket.Types.QuantumTaskStatus.QuantumTaskStatus
instance Amazonka.Data.Log.ToLog Amazonka.Braket.Types.QuantumTaskStatus.QuantumTaskStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.Braket.Types.QuantumTaskStatus.QuantumTaskStatus
instance Amazonka.Data.Text.ToText Amazonka.Braket.Types.QuantumTaskStatus.QuantumTaskStatus
instance Amazonka.Data.Text.FromText Amazonka.Braket.Types.QuantumTaskStatus.QuantumTaskStatus
instance Control.DeepSeq.NFData Amazonka.Braket.Types.QuantumTaskStatus.QuantumTaskStatus
instance Data.Hashable.Class.Hashable Amazonka.Braket.Types.QuantumTaskStatus.QuantumTaskStatus
instance GHC.Generics.Generic Amazonka.Braket.Types.QuantumTaskStatus.QuantumTaskStatus
instance GHC.Classes.Ord Amazonka.Braket.Types.QuantumTaskStatus.QuantumTaskStatus
instance GHC.Classes.Eq Amazonka.Braket.Types.QuantumTaskStatus.QuantumTaskStatus
instance GHC.Read.Read Amazonka.Braket.Types.QuantumTaskStatus.QuantumTaskStatus
instance GHC.Show.Show Amazonka.Braket.Types.QuantumTaskStatus.QuantumTaskStatus


module Amazonka.Braket.Types.QuantumTaskSummary

-- | Includes information about a quantum task.
--   
--   <i>See:</i> <a>newQuantumTaskSummary</a> smart constructor.
data QuantumTaskSummary
QuantumTaskSummary' :: Maybe POSIX -> Maybe (HashMap Text Text) -> POSIX -> Text -> Text -> Text -> Text -> Integer -> QuantumTaskStatus -> QuantumTaskSummary

-- | The time at which the task finished.
[$sel:endedAt:QuantumTaskSummary'] :: QuantumTaskSummary -> Maybe POSIX

-- | Displays the key, value pairs of tags associated with this quantum
--   task.
[$sel:tags:QuantumTaskSummary'] :: QuantumTaskSummary -> Maybe (HashMap Text Text)

-- | The time at which the task was created.
[$sel:createdAt:QuantumTaskSummary'] :: QuantumTaskSummary -> POSIX

-- | The ARN of the device the task ran on.
[$sel:deviceArn:QuantumTaskSummary'] :: QuantumTaskSummary -> Text

-- | The S3 bucket where the task result file is stored..
[$sel:outputS3Bucket:QuantumTaskSummary'] :: QuantumTaskSummary -> Text

-- | The folder in the S3 bucket where the task result file is stored.
[$sel:outputS3Directory:QuantumTaskSummary'] :: QuantumTaskSummary -> Text

-- | The ARN of the task.
[$sel:quantumTaskArn:QuantumTaskSummary'] :: QuantumTaskSummary -> Text

-- | The shots used for the task.
[$sel:shots:QuantumTaskSummary'] :: QuantumTaskSummary -> Integer

-- | The status of the task.
[$sel:status:QuantumTaskSummary'] :: QuantumTaskSummary -> QuantumTaskStatus

-- | Create a value of <a>QuantumTaskSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:endedAt:QuantumTaskSummary'</a>,
--   <a>quantumTaskSummary_endedAt</a> - The time at which the task
--   finished.
--   
--   <a>$sel:tags:QuantumTaskSummary'</a>, <a>quantumTaskSummary_tags</a> -
--   Displays the key, value pairs of tags associated with this quantum
--   task.
--   
--   <a>$sel:createdAt:QuantumTaskSummary'</a>,
--   <a>quantumTaskSummary_createdAt</a> - The time at which the task was
--   created.
--   
--   <a>$sel:deviceArn:QuantumTaskSummary'</a>,
--   <a>quantumTaskSummary_deviceArn</a> - The ARN of the device the task
--   ran on.
--   
--   <a>$sel:outputS3Bucket:QuantumTaskSummary'</a>,
--   <a>quantumTaskSummary_outputS3Bucket</a> - The S3 bucket where the
--   task result file is stored..
--   
--   <a>$sel:outputS3Directory:QuantumTaskSummary'</a>,
--   <a>quantumTaskSummary_outputS3Directory</a> - The folder in the S3
--   bucket where the task result file is stored.
--   
--   <a>$sel:quantumTaskArn:QuantumTaskSummary'</a>,
--   <a>quantumTaskSummary_quantumTaskArn</a> - The ARN of the task.
--   
--   <a>$sel:shots:QuantumTaskSummary'</a>, <a>quantumTaskSummary_shots</a>
--   - The shots used for the task.
--   
--   <a>$sel:status:QuantumTaskSummary'</a>,
--   <a>quantumTaskSummary_status</a> - The status of the task.
newQuantumTaskSummary :: UTCTime -> Text -> Text -> Text -> Text -> Integer -> QuantumTaskStatus -> QuantumTaskSummary

-- | The time at which the task finished.
quantumTaskSummary_endedAt :: Lens' QuantumTaskSummary (Maybe UTCTime)

-- | Displays the key, value pairs of tags associated with this quantum
--   task.
quantumTaskSummary_tags :: Lens' QuantumTaskSummary (Maybe (HashMap Text Text))

-- | The time at which the task was created.
quantumTaskSummary_createdAt :: Lens' QuantumTaskSummary UTCTime

-- | The ARN of the device the task ran on.
quantumTaskSummary_deviceArn :: Lens' QuantumTaskSummary Text

-- | The S3 bucket where the task result file is stored..
quantumTaskSummary_outputS3Bucket :: Lens' QuantumTaskSummary Text

-- | The folder in the S3 bucket where the task result file is stored.
quantumTaskSummary_outputS3Directory :: Lens' QuantumTaskSummary Text

-- | The ARN of the task.
quantumTaskSummary_quantumTaskArn :: Lens' QuantumTaskSummary Text

-- | The shots used for the task.
quantumTaskSummary_shots :: Lens' QuantumTaskSummary Integer

-- | The status of the task.
quantumTaskSummary_status :: Lens' QuantumTaskSummary QuantumTaskStatus
instance GHC.Generics.Generic Amazonka.Braket.Types.QuantumTaskSummary.QuantumTaskSummary
instance GHC.Show.Show Amazonka.Braket.Types.QuantumTaskSummary.QuantumTaskSummary
instance GHC.Read.Read Amazonka.Braket.Types.QuantumTaskSummary.QuantumTaskSummary
instance GHC.Classes.Eq Amazonka.Braket.Types.QuantumTaskSummary.QuantumTaskSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Braket.Types.QuantumTaskSummary.QuantumTaskSummary
instance Data.Hashable.Class.Hashable Amazonka.Braket.Types.QuantumTaskSummary.QuantumTaskSummary
instance Control.DeepSeq.NFData Amazonka.Braket.Types.QuantumTaskSummary.QuantumTaskSummary


module Amazonka.Braket.Types.SearchDevicesFilter

-- | The filter to use for searching devices.
--   
--   <i>See:</i> <a>newSearchDevicesFilter</a> smart constructor.
data SearchDevicesFilter
SearchDevicesFilter' :: Text -> NonEmpty Text -> SearchDevicesFilter

-- | The name to use to filter results.
[$sel:name:SearchDevicesFilter'] :: SearchDevicesFilter -> Text

-- | The values to use to filter results.
[$sel:values:SearchDevicesFilter'] :: SearchDevicesFilter -> NonEmpty Text

-- | Create a value of <a>SearchDevicesFilter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:SearchDevicesFilter'</a>, <a>searchDevicesFilter_name</a>
--   - The name to use to filter results.
--   
--   <a>$sel:values:SearchDevicesFilter'</a>,
--   <a>searchDevicesFilter_values</a> - The values to use to filter
--   results.
newSearchDevicesFilter :: Text -> NonEmpty Text -> SearchDevicesFilter

-- | The name to use to filter results.
searchDevicesFilter_name :: Lens' SearchDevicesFilter Text

-- | The values to use to filter results.
searchDevicesFilter_values :: Lens' SearchDevicesFilter (NonEmpty Text)
instance GHC.Generics.Generic Amazonka.Braket.Types.SearchDevicesFilter.SearchDevicesFilter
instance GHC.Show.Show Amazonka.Braket.Types.SearchDevicesFilter.SearchDevicesFilter
instance GHC.Read.Read Amazonka.Braket.Types.SearchDevicesFilter.SearchDevicesFilter
instance GHC.Classes.Eq Amazonka.Braket.Types.SearchDevicesFilter.SearchDevicesFilter
instance Data.Hashable.Class.Hashable Amazonka.Braket.Types.SearchDevicesFilter.SearchDevicesFilter
instance Control.DeepSeq.NFData Amazonka.Braket.Types.SearchDevicesFilter.SearchDevicesFilter
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Braket.Types.SearchDevicesFilter.SearchDevicesFilter


module Amazonka.Braket.Types.SearchQuantumTasksFilterOperator
newtype SearchQuantumTasksFilterOperator
SearchQuantumTasksFilterOperator' :: Text -> SearchQuantumTasksFilterOperator
[fromSearchQuantumTasksFilterOperator] :: SearchQuantumTasksFilterOperator -> Text
pattern SearchQuantumTasksFilterOperator_BETWEEN :: SearchQuantumTasksFilterOperator
pattern SearchQuantumTasksFilterOperator_EQUAL :: SearchQuantumTasksFilterOperator
pattern SearchQuantumTasksFilterOperator_GT :: SearchQuantumTasksFilterOperator
pattern SearchQuantumTasksFilterOperator_GTE :: SearchQuantumTasksFilterOperator
pattern SearchQuantumTasksFilterOperator_LT :: SearchQuantumTasksFilterOperator
pattern SearchQuantumTasksFilterOperator_LTE :: SearchQuantumTasksFilterOperator
instance Amazonka.Data.XML.ToXML Amazonka.Braket.Types.SearchQuantumTasksFilterOperator.SearchQuantumTasksFilterOperator
instance Amazonka.Data.XML.FromXML Amazonka.Braket.Types.SearchQuantumTasksFilterOperator.SearchQuantumTasksFilterOperator
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Braket.Types.SearchQuantumTasksFilterOperator.SearchQuantumTasksFilterOperator
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Braket.Types.SearchQuantumTasksFilterOperator.SearchQuantumTasksFilterOperator
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Braket.Types.SearchQuantumTasksFilterOperator.SearchQuantumTasksFilterOperator
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Braket.Types.SearchQuantumTasksFilterOperator.SearchQuantumTasksFilterOperator
instance Amazonka.Data.Query.ToQuery Amazonka.Braket.Types.SearchQuantumTasksFilterOperator.SearchQuantumTasksFilterOperator
instance Amazonka.Data.Headers.ToHeader Amazonka.Braket.Types.SearchQuantumTasksFilterOperator.SearchQuantumTasksFilterOperator
instance Amazonka.Data.Log.ToLog Amazonka.Braket.Types.SearchQuantumTasksFilterOperator.SearchQuantumTasksFilterOperator
instance Amazonka.Data.ByteString.ToByteString Amazonka.Braket.Types.SearchQuantumTasksFilterOperator.SearchQuantumTasksFilterOperator
instance Amazonka.Data.Text.ToText Amazonka.Braket.Types.SearchQuantumTasksFilterOperator.SearchQuantumTasksFilterOperator
instance Amazonka.Data.Text.FromText Amazonka.Braket.Types.SearchQuantumTasksFilterOperator.SearchQuantumTasksFilterOperator
instance Control.DeepSeq.NFData Amazonka.Braket.Types.SearchQuantumTasksFilterOperator.SearchQuantumTasksFilterOperator
instance Data.Hashable.Class.Hashable Amazonka.Braket.Types.SearchQuantumTasksFilterOperator.SearchQuantumTasksFilterOperator
instance GHC.Generics.Generic Amazonka.Braket.Types.SearchQuantumTasksFilterOperator.SearchQuantumTasksFilterOperator
instance GHC.Classes.Ord Amazonka.Braket.Types.SearchQuantumTasksFilterOperator.SearchQuantumTasksFilterOperator
instance GHC.Classes.Eq Amazonka.Braket.Types.SearchQuantumTasksFilterOperator.SearchQuantumTasksFilterOperator
instance GHC.Read.Read Amazonka.Braket.Types.SearchQuantumTasksFilterOperator.SearchQuantumTasksFilterOperator
instance GHC.Show.Show Amazonka.Braket.Types.SearchQuantumTasksFilterOperator.SearchQuantumTasksFilterOperator


module Amazonka.Braket.Types.SearchQuantumTasksFilter

-- | A filter to use to search for tasks.
--   
--   <i>See:</i> <a>newSearchQuantumTasksFilter</a> smart constructor.
data SearchQuantumTasksFilter
SearchQuantumTasksFilter' :: Text -> SearchQuantumTasksFilterOperator -> NonEmpty Text -> SearchQuantumTasksFilter

-- | The name of the device used for the task.
[$sel:name:SearchQuantumTasksFilter'] :: SearchQuantumTasksFilter -> Text

-- | An operator to use in the filter.
[$sel:operator:SearchQuantumTasksFilter'] :: SearchQuantumTasksFilter -> SearchQuantumTasksFilterOperator

-- | The values to use for the filter.
[$sel:values:SearchQuantumTasksFilter'] :: SearchQuantumTasksFilter -> NonEmpty Text

-- | Create a value of <a>SearchQuantumTasksFilter</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:SearchQuantumTasksFilter'</a>,
--   <a>searchQuantumTasksFilter_name</a> - The name of the device used for
--   the task.
--   
--   <a>$sel:operator:SearchQuantumTasksFilter'</a>,
--   <a>searchQuantumTasksFilter_operator</a> - An operator to use in the
--   filter.
--   
--   <a>$sel:values:SearchQuantumTasksFilter'</a>,
--   <a>searchQuantumTasksFilter_values</a> - The values to use for the
--   filter.
newSearchQuantumTasksFilter :: Text -> SearchQuantumTasksFilterOperator -> NonEmpty Text -> SearchQuantumTasksFilter

-- | The name of the device used for the task.
searchQuantumTasksFilter_name :: Lens' SearchQuantumTasksFilter Text

-- | An operator to use in the filter.
searchQuantumTasksFilter_operator :: Lens' SearchQuantumTasksFilter SearchQuantumTasksFilterOperator

-- | The values to use for the filter.
searchQuantumTasksFilter_values :: Lens' SearchQuantumTasksFilter (NonEmpty Text)
instance GHC.Generics.Generic Amazonka.Braket.Types.SearchQuantumTasksFilter.SearchQuantumTasksFilter
instance GHC.Show.Show Amazonka.Braket.Types.SearchQuantumTasksFilter.SearchQuantumTasksFilter
instance GHC.Read.Read Amazonka.Braket.Types.SearchQuantumTasksFilter.SearchQuantumTasksFilter
instance GHC.Classes.Eq Amazonka.Braket.Types.SearchQuantumTasksFilter.SearchQuantumTasksFilter
instance Data.Hashable.Class.Hashable Amazonka.Braket.Types.SearchQuantumTasksFilter.SearchQuantumTasksFilter
instance Control.DeepSeq.NFData Amazonka.Braket.Types.SearchQuantumTasksFilter.SearchQuantumTasksFilter
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Braket.Types.SearchQuantumTasksFilter.SearchQuantumTasksFilter


module Amazonka.Braket.Types

-- | API version <tt>2019-09-01</tt> of the Amazon Braket SDK
--   configuration.
defaultService :: Service

-- | The input fails to satisfy the constraints specified by an AWS
--   service.
_ValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You do not have sufficient access to perform this action.
_AccessDeniedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified device is currently offline.
_DeviceOfflineException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified device has been retired.
_DeviceRetiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An error occurred due to a conflict.
_ConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request failed because a service quota is exceeded.
_ServiceQuotaExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The throttling rate limit is met.
_ThrottlingException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request processing has failed because of an unknown error,
--   exception, or failure.
_InternalServiceException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified resource was not found.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError
newtype CancellationStatus
CancellationStatus' :: Text -> CancellationStatus
[fromCancellationStatus] :: CancellationStatus -> Text
pattern CancellationStatus_CANCELLED :: CancellationStatus
pattern CancellationStatus_CANCELLING :: CancellationStatus
newtype DeviceStatus
DeviceStatus' :: Text -> DeviceStatus
[fromDeviceStatus] :: DeviceStatus -> Text
pattern DeviceStatus_OFFLINE :: DeviceStatus
pattern DeviceStatus_ONLINE :: DeviceStatus
pattern DeviceStatus_RETIRED :: DeviceStatus
newtype DeviceType
DeviceType' :: Text -> DeviceType
[fromDeviceType] :: DeviceType -> Text
pattern DeviceType_QPU :: DeviceType
pattern DeviceType_SIMULATOR :: DeviceType
newtype QuantumTaskStatus
QuantumTaskStatus' :: Text -> QuantumTaskStatus
[fromQuantumTaskStatus] :: QuantumTaskStatus -> Text
pattern QuantumTaskStatus_CANCELLED :: QuantumTaskStatus
pattern QuantumTaskStatus_CANCELLING :: QuantumTaskStatus
pattern QuantumTaskStatus_COMPLETED :: QuantumTaskStatus
pattern QuantumTaskStatus_CREATED :: QuantumTaskStatus
pattern QuantumTaskStatus_FAILED :: QuantumTaskStatus
pattern QuantumTaskStatus_QUEUED :: QuantumTaskStatus
pattern QuantumTaskStatus_RUNNING :: QuantumTaskStatus
newtype SearchQuantumTasksFilterOperator
SearchQuantumTasksFilterOperator' :: Text -> SearchQuantumTasksFilterOperator
[fromSearchQuantumTasksFilterOperator] :: SearchQuantumTasksFilterOperator -> Text
pattern SearchQuantumTasksFilterOperator_BETWEEN :: SearchQuantumTasksFilterOperator
pattern SearchQuantumTasksFilterOperator_EQUAL :: SearchQuantumTasksFilterOperator
pattern SearchQuantumTasksFilterOperator_GT :: SearchQuantumTasksFilterOperator
pattern SearchQuantumTasksFilterOperator_GTE :: SearchQuantumTasksFilterOperator
pattern SearchQuantumTasksFilterOperator_LT :: SearchQuantumTasksFilterOperator
pattern SearchQuantumTasksFilterOperator_LTE :: SearchQuantumTasksFilterOperator

-- | Includes information about the device.
--   
--   <i>See:</i> <a>newDeviceSummary</a> smart constructor.
data DeviceSummary
DeviceSummary' :: Text -> Text -> DeviceStatus -> DeviceType -> Text -> DeviceSummary

-- | The ARN of the device.
[$sel:deviceArn:DeviceSummary'] :: DeviceSummary -> Text

-- | The name of the device.
[$sel:deviceName:DeviceSummary'] :: DeviceSummary -> Text

-- | The status of the device.
[$sel:deviceStatus:DeviceSummary'] :: DeviceSummary -> DeviceStatus

-- | The type of the device.
[$sel:deviceType:DeviceSummary'] :: DeviceSummary -> DeviceType

-- | The provider of the device.
[$sel:providerName:DeviceSummary'] :: DeviceSummary -> Text

-- | Create a value of <a>DeviceSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceArn:DeviceSummary'</a>, <a>deviceSummary_deviceArn</a> -
--   The ARN of the device.
--   
--   <a>$sel:deviceName:DeviceSummary'</a>, <a>deviceSummary_deviceName</a>
--   - The name of the device.
--   
--   <a>$sel:deviceStatus:DeviceSummary'</a>,
--   <a>deviceSummary_deviceStatus</a> - The status of the device.
--   
--   <a>$sel:deviceType:DeviceSummary'</a>, <a>deviceSummary_deviceType</a>
--   - The type of the device.
--   
--   <a>$sel:providerName:DeviceSummary'</a>,
--   <a>deviceSummary_providerName</a> - The provider of the device.
newDeviceSummary :: Text -> Text -> DeviceStatus -> DeviceType -> Text -> DeviceSummary

-- | The ARN of the device.
deviceSummary_deviceArn :: Lens' DeviceSummary Text

-- | The name of the device.
deviceSummary_deviceName :: Lens' DeviceSummary Text

-- | The status of the device.
deviceSummary_deviceStatus :: Lens' DeviceSummary DeviceStatus

-- | The type of the device.
deviceSummary_deviceType :: Lens' DeviceSummary DeviceType

-- | The provider of the device.
deviceSummary_providerName :: Lens' DeviceSummary Text

-- | Includes information about a quantum task.
--   
--   <i>See:</i> <a>newQuantumTaskSummary</a> smart constructor.
data QuantumTaskSummary
QuantumTaskSummary' :: Maybe POSIX -> Maybe (HashMap Text Text) -> POSIX -> Text -> Text -> Text -> Text -> Integer -> QuantumTaskStatus -> QuantumTaskSummary

-- | The time at which the task finished.
[$sel:endedAt:QuantumTaskSummary'] :: QuantumTaskSummary -> Maybe POSIX

-- | Displays the key, value pairs of tags associated with this quantum
--   task.
[$sel:tags:QuantumTaskSummary'] :: QuantumTaskSummary -> Maybe (HashMap Text Text)

-- | The time at which the task was created.
[$sel:createdAt:QuantumTaskSummary'] :: QuantumTaskSummary -> POSIX

-- | The ARN of the device the task ran on.
[$sel:deviceArn:QuantumTaskSummary'] :: QuantumTaskSummary -> Text

-- | The S3 bucket where the task result file is stored..
[$sel:outputS3Bucket:QuantumTaskSummary'] :: QuantumTaskSummary -> Text

-- | The folder in the S3 bucket where the task result file is stored.
[$sel:outputS3Directory:QuantumTaskSummary'] :: QuantumTaskSummary -> Text

-- | The ARN of the task.
[$sel:quantumTaskArn:QuantumTaskSummary'] :: QuantumTaskSummary -> Text

-- | The shots used for the task.
[$sel:shots:QuantumTaskSummary'] :: QuantumTaskSummary -> Integer

-- | The status of the task.
[$sel:status:QuantumTaskSummary'] :: QuantumTaskSummary -> QuantumTaskStatus

-- | Create a value of <a>QuantumTaskSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:endedAt:QuantumTaskSummary'</a>,
--   <a>quantumTaskSummary_endedAt</a> - The time at which the task
--   finished.
--   
--   <a>$sel:tags:QuantumTaskSummary'</a>, <a>quantumTaskSummary_tags</a> -
--   Displays the key, value pairs of tags associated with this quantum
--   task.
--   
--   <a>$sel:createdAt:QuantumTaskSummary'</a>,
--   <a>quantumTaskSummary_createdAt</a> - The time at which the task was
--   created.
--   
--   <a>$sel:deviceArn:QuantumTaskSummary'</a>,
--   <a>quantumTaskSummary_deviceArn</a> - The ARN of the device the task
--   ran on.
--   
--   <a>$sel:outputS3Bucket:QuantumTaskSummary'</a>,
--   <a>quantumTaskSummary_outputS3Bucket</a> - The S3 bucket where the
--   task result file is stored..
--   
--   <a>$sel:outputS3Directory:QuantumTaskSummary'</a>,
--   <a>quantumTaskSummary_outputS3Directory</a> - The folder in the S3
--   bucket where the task result file is stored.
--   
--   <a>$sel:quantumTaskArn:QuantumTaskSummary'</a>,
--   <a>quantumTaskSummary_quantumTaskArn</a> - The ARN of the task.
--   
--   <a>$sel:shots:QuantumTaskSummary'</a>, <a>quantumTaskSummary_shots</a>
--   - The shots used for the task.
--   
--   <a>$sel:status:QuantumTaskSummary'</a>,
--   <a>quantumTaskSummary_status</a> - The status of the task.
newQuantumTaskSummary :: UTCTime -> Text -> Text -> Text -> Text -> Integer -> QuantumTaskStatus -> QuantumTaskSummary

-- | The time at which the task finished.
quantumTaskSummary_endedAt :: Lens' QuantumTaskSummary (Maybe UTCTime)

-- | Displays the key, value pairs of tags associated with this quantum
--   task.
quantumTaskSummary_tags :: Lens' QuantumTaskSummary (Maybe (HashMap Text Text))

-- | The time at which the task was created.
quantumTaskSummary_createdAt :: Lens' QuantumTaskSummary UTCTime

-- | The ARN of the device the task ran on.
quantumTaskSummary_deviceArn :: Lens' QuantumTaskSummary Text

-- | The S3 bucket where the task result file is stored..
quantumTaskSummary_outputS3Bucket :: Lens' QuantumTaskSummary Text

-- | The folder in the S3 bucket where the task result file is stored.
quantumTaskSummary_outputS3Directory :: Lens' QuantumTaskSummary Text

-- | The ARN of the task.
quantumTaskSummary_quantumTaskArn :: Lens' QuantumTaskSummary Text

-- | The shots used for the task.
quantumTaskSummary_shots :: Lens' QuantumTaskSummary Integer

-- | The status of the task.
quantumTaskSummary_status :: Lens' QuantumTaskSummary QuantumTaskStatus

-- | The filter to use for searching devices.
--   
--   <i>See:</i> <a>newSearchDevicesFilter</a> smart constructor.
data SearchDevicesFilter
SearchDevicesFilter' :: Text -> NonEmpty Text -> SearchDevicesFilter

-- | The name to use to filter results.
[$sel:name:SearchDevicesFilter'] :: SearchDevicesFilter -> Text

-- | The values to use to filter results.
[$sel:values:SearchDevicesFilter'] :: SearchDevicesFilter -> NonEmpty Text

-- | Create a value of <a>SearchDevicesFilter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:SearchDevicesFilter'</a>, <a>searchDevicesFilter_name</a>
--   - The name to use to filter results.
--   
--   <a>$sel:values:SearchDevicesFilter'</a>,
--   <a>searchDevicesFilter_values</a> - The values to use to filter
--   results.
newSearchDevicesFilter :: Text -> NonEmpty Text -> SearchDevicesFilter

-- | The name to use to filter results.
searchDevicesFilter_name :: Lens' SearchDevicesFilter Text

-- | The values to use to filter results.
searchDevicesFilter_values :: Lens' SearchDevicesFilter (NonEmpty Text)

-- | A filter to use to search for tasks.
--   
--   <i>See:</i> <a>newSearchQuantumTasksFilter</a> smart constructor.
data SearchQuantumTasksFilter
SearchQuantumTasksFilter' :: Text -> SearchQuantumTasksFilterOperator -> NonEmpty Text -> SearchQuantumTasksFilter

-- | The name of the device used for the task.
[$sel:name:SearchQuantumTasksFilter'] :: SearchQuantumTasksFilter -> Text

-- | An operator to use in the filter.
[$sel:operator:SearchQuantumTasksFilter'] :: SearchQuantumTasksFilter -> SearchQuantumTasksFilterOperator

-- | The values to use for the filter.
[$sel:values:SearchQuantumTasksFilter'] :: SearchQuantumTasksFilter -> NonEmpty Text

-- | Create a value of <a>SearchQuantumTasksFilter</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:SearchQuantumTasksFilter'</a>,
--   <a>searchQuantumTasksFilter_name</a> - The name of the device used for
--   the task.
--   
--   <a>$sel:operator:SearchQuantumTasksFilter'</a>,
--   <a>searchQuantumTasksFilter_operator</a> - An operator to use in the
--   filter.
--   
--   <a>$sel:values:SearchQuantumTasksFilter'</a>,
--   <a>searchQuantumTasksFilter_values</a> - The values to use for the
--   filter.
newSearchQuantumTasksFilter :: Text -> SearchQuantumTasksFilterOperator -> NonEmpty Text -> SearchQuantumTasksFilter

-- | The name of the device used for the task.
searchQuantumTasksFilter_name :: Lens' SearchQuantumTasksFilter Text

-- | An operator to use in the filter.
searchQuantumTasksFilter_operator :: Lens' SearchQuantumTasksFilter SearchQuantumTasksFilterOperator

-- | The values to use for the filter.
searchQuantumTasksFilter_values :: Lens' SearchQuantumTasksFilter (NonEmpty Text)


-- | Add a tag to the specified resource.
module Amazonka.Braket.TagResource

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> HashMap Text Text -> TagResource

-- | Specify the <tt>resourceArn</tt> of the resource to which a tag will
--   be added.
[$sel:resourceArn:TagResource'] :: TagResource -> Text

-- | Specify the tags to add to the resource.
[$sel:tags:TagResource'] :: TagResource -> HashMap Text Text

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   Specify the <tt>resourceArn</tt> of the resource to which a tag will
--   be added.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - Specify the
--   tags to add to the resource.
newTagResource :: Text -> TagResource

-- | Specify the <tt>resourceArn</tt> of the resource to which a tag will
--   be added.
tagResource_resourceArn :: Lens' TagResource Text

-- | Specify the tags to add to the resource.
tagResource_tags :: Lens' TagResource (HashMap Text Text)

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:TagResourceResponse'] :: TagResourceResponse -> Int

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int
instance GHC.Generics.Generic Amazonka.Braket.TagResource.TagResource
instance GHC.Show.Show Amazonka.Braket.TagResource.TagResource
instance GHC.Read.Read Amazonka.Braket.TagResource.TagResource
instance GHC.Classes.Eq Amazonka.Braket.TagResource.TagResource
instance GHC.Generics.Generic Amazonka.Braket.TagResource.TagResourceResponse
instance GHC.Show.Show Amazonka.Braket.TagResource.TagResourceResponse
instance GHC.Read.Read Amazonka.Braket.TagResource.TagResourceResponse
instance GHC.Classes.Eq Amazonka.Braket.TagResource.TagResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.Braket.TagResource.TagResource
instance Control.DeepSeq.NFData Amazonka.Braket.TagResource.TagResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.Braket.TagResource.TagResource
instance Control.DeepSeq.NFData Amazonka.Braket.TagResource.TagResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.Braket.TagResource.TagResource
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Braket.TagResource.TagResource
instance Amazonka.Data.Path.ToPath Amazonka.Braket.TagResource.TagResource
instance Amazonka.Data.Query.ToQuery Amazonka.Braket.TagResource.TagResource


-- | Searches for tasks that match the specified filter values.
--   
--   This operation returns paginated results.
module Amazonka.Braket.SearchQuantumTasks

-- | <i>See:</i> <a>newSearchQuantumTasks</a> smart constructor.
data SearchQuantumTasks
SearchQuantumTasks' :: Maybe Text -> Maybe Natural -> [SearchQuantumTasksFilter] -> SearchQuantumTasks

-- | A token used for pagination of results returned in the response. Use
--   the token returned from the previous request continue results where
--   the previous request ended.
[$sel:nextToken:SearchQuantumTasks'] :: SearchQuantumTasks -> Maybe Text

-- | Maximum number of results to return in the response.
[$sel:maxResults:SearchQuantumTasks'] :: SearchQuantumTasks -> Maybe Natural

-- | Array of <tt>SearchQuantumTasksFilter</tt> objects.
[$sel:filters:SearchQuantumTasks'] :: SearchQuantumTasks -> [SearchQuantumTasksFilter]

-- | Create a value of <a>SearchQuantumTasks</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:SearchQuantumTasks'</a>,
--   <a>searchQuantumTasks_nextToken</a> - A token used for pagination of
--   results returned in the response. Use the token returned from the
--   previous request continue results where the previous request ended.
--   
--   <a>$sel:maxResults:SearchQuantumTasks'</a>,
--   <a>searchQuantumTasks_maxResults</a> - Maximum number of results to
--   return in the response.
--   
--   <a>$sel:filters:SearchQuantumTasks'</a>,
--   <a>searchQuantumTasks_filters</a> - Array of
--   <tt>SearchQuantumTasksFilter</tt> objects.
newSearchQuantumTasks :: SearchQuantumTasks

-- | A token used for pagination of results returned in the response. Use
--   the token returned from the previous request continue results where
--   the previous request ended.
searchQuantumTasks_nextToken :: Lens' SearchQuantumTasks (Maybe Text)

-- | Maximum number of results to return in the response.
searchQuantumTasks_maxResults :: Lens' SearchQuantumTasks (Maybe Natural)

-- | Array of <tt>SearchQuantumTasksFilter</tt> objects.
searchQuantumTasks_filters :: Lens' SearchQuantumTasks [SearchQuantumTasksFilter]

-- | <i>See:</i> <a>newSearchQuantumTasksResponse</a> smart constructor.
data SearchQuantumTasksResponse
SearchQuantumTasksResponse' :: Maybe Text -> Int -> [QuantumTaskSummary] -> SearchQuantumTasksResponse

-- | A token used for pagination of results, or null if there are no
--   additional results. Use the token value in a subsequent request to
--   continue results where the previous request ended.
[$sel:nextToken:SearchQuantumTasksResponse'] :: SearchQuantumTasksResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:SearchQuantumTasksResponse'] :: SearchQuantumTasksResponse -> Int

-- | An array of <tt>QuantumTaskSummary</tt> objects for tasks that match
--   the specified filters.
[$sel:quantumTasks:SearchQuantumTasksResponse'] :: SearchQuantumTasksResponse -> [QuantumTaskSummary]

-- | Create a value of <a>SearchQuantumTasksResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:SearchQuantumTasks'</a>,
--   <a>searchQuantumTasksResponse_nextToken</a> - A token used for
--   pagination of results, or null if there are no additional results. Use
--   the token value in a subsequent request to continue results where the
--   previous request ended.
--   
--   <a>$sel:httpStatus:SearchQuantumTasksResponse'</a>,
--   <a>searchQuantumTasksResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:quantumTasks:SearchQuantumTasksResponse'</a>,
--   <a>searchQuantumTasksResponse_quantumTasks</a> - An array of
--   <tt>QuantumTaskSummary</tt> objects for tasks that match the specified
--   filters.
newSearchQuantumTasksResponse :: Int -> SearchQuantumTasksResponse

-- | A token used for pagination of results, or null if there are no
--   additional results. Use the token value in a subsequent request to
--   continue results where the previous request ended.
searchQuantumTasksResponse_nextToken :: Lens' SearchQuantumTasksResponse (Maybe Text)

-- | The response's http status code.
searchQuantumTasksResponse_httpStatus :: Lens' SearchQuantumTasksResponse Int

-- | An array of <tt>QuantumTaskSummary</tt> objects for tasks that match
--   the specified filters.
searchQuantumTasksResponse_quantumTasks :: Lens' SearchQuantumTasksResponse [QuantumTaskSummary]
instance GHC.Generics.Generic Amazonka.Braket.SearchQuantumTasks.SearchQuantumTasks
instance GHC.Show.Show Amazonka.Braket.SearchQuantumTasks.SearchQuantumTasks
instance GHC.Read.Read Amazonka.Braket.SearchQuantumTasks.SearchQuantumTasks
instance GHC.Classes.Eq Amazonka.Braket.SearchQuantumTasks.SearchQuantumTasks
instance GHC.Generics.Generic Amazonka.Braket.SearchQuantumTasks.SearchQuantumTasksResponse
instance GHC.Show.Show Amazonka.Braket.SearchQuantumTasks.SearchQuantumTasksResponse
instance GHC.Read.Read Amazonka.Braket.SearchQuantumTasks.SearchQuantumTasksResponse
instance GHC.Classes.Eq Amazonka.Braket.SearchQuantumTasks.SearchQuantumTasksResponse
instance Amazonka.Types.AWSRequest Amazonka.Braket.SearchQuantumTasks.SearchQuantumTasks
instance Control.DeepSeq.NFData Amazonka.Braket.SearchQuantumTasks.SearchQuantumTasksResponse
instance Amazonka.Pager.AWSPager Amazonka.Braket.SearchQuantumTasks.SearchQuantumTasks
instance Data.Hashable.Class.Hashable Amazonka.Braket.SearchQuantumTasks.SearchQuantumTasks
instance Control.DeepSeq.NFData Amazonka.Braket.SearchQuantumTasks.SearchQuantumTasks
instance Amazonka.Data.Headers.ToHeaders Amazonka.Braket.SearchQuantumTasks.SearchQuantumTasks
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Braket.SearchQuantumTasks.SearchQuantumTasks
instance Amazonka.Data.Path.ToPath Amazonka.Braket.SearchQuantumTasks.SearchQuantumTasks
instance Amazonka.Data.Query.ToQuery Amazonka.Braket.SearchQuantumTasks.SearchQuantumTasks


-- | Searches for devices using the specified filters.
--   
--   This operation returns paginated results.
module Amazonka.Braket.SearchDevices

-- | <i>See:</i> <a>newSearchDevices</a> smart constructor.
data SearchDevices
SearchDevices' :: Maybe Text -> Maybe Natural -> [SearchDevicesFilter] -> SearchDevices

-- | A token used for pagination of results returned in the response. Use
--   the token returned from the previous request continue results where
--   the previous request ended.
[$sel:nextToken:SearchDevices'] :: SearchDevices -> Maybe Text

-- | The maximum number of results to return in the response.
[$sel:maxResults:SearchDevices'] :: SearchDevices -> Maybe Natural

-- | The filter values to use to search for a device.
[$sel:filters:SearchDevices'] :: SearchDevices -> [SearchDevicesFilter]

-- | Create a value of <a>SearchDevices</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:SearchDevices'</a>, <a>searchDevices_nextToken</a> -
--   A token used for pagination of results returned in the response. Use
--   the token returned from the previous request continue results where
--   the previous request ended.
--   
--   <a>$sel:maxResults:SearchDevices'</a>, <a>searchDevices_maxResults</a>
--   - The maximum number of results to return in the response.
--   
--   <a>$sel:filters:SearchDevices'</a>, <a>searchDevices_filters</a> - The
--   filter values to use to search for a device.
newSearchDevices :: SearchDevices

-- | A token used for pagination of results returned in the response. Use
--   the token returned from the previous request continue results where
--   the previous request ended.
searchDevices_nextToken :: Lens' SearchDevices (Maybe Text)

-- | The maximum number of results to return in the response.
searchDevices_maxResults :: Lens' SearchDevices (Maybe Natural)

-- | The filter values to use to search for a device.
searchDevices_filters :: Lens' SearchDevices [SearchDevicesFilter]

-- | <i>See:</i> <a>newSearchDevicesResponse</a> smart constructor.
data SearchDevicesResponse
SearchDevicesResponse' :: Maybe Text -> Int -> [DeviceSummary] -> SearchDevicesResponse

-- | A token used for pagination of results, or null if there are no
--   additional results. Use the token value in a subsequent request to
--   continue results where the previous request ended.
[$sel:nextToken:SearchDevicesResponse'] :: SearchDevicesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:SearchDevicesResponse'] :: SearchDevicesResponse -> Int

-- | An array of <tt>DeviceSummary</tt> objects for devices that match the
--   specified filter values.
[$sel:devices:SearchDevicesResponse'] :: SearchDevicesResponse -> [DeviceSummary]

-- | Create a value of <a>SearchDevicesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:SearchDevices'</a>,
--   <a>searchDevicesResponse_nextToken</a> - A token used for pagination
--   of results, or null if there are no additional results. Use the token
--   value in a subsequent request to continue results where the previous
--   request ended.
--   
--   <a>$sel:httpStatus:SearchDevicesResponse'</a>,
--   <a>searchDevicesResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:devices:SearchDevicesResponse'</a>,
--   <a>searchDevicesResponse_devices</a> - An array of
--   <tt>DeviceSummary</tt> objects for devices that match the specified
--   filter values.
newSearchDevicesResponse :: Int -> SearchDevicesResponse

-- | A token used for pagination of results, or null if there are no
--   additional results. Use the token value in a subsequent request to
--   continue results where the previous request ended.
searchDevicesResponse_nextToken :: Lens' SearchDevicesResponse (Maybe Text)

-- | The response's http status code.
searchDevicesResponse_httpStatus :: Lens' SearchDevicesResponse Int

-- | An array of <tt>DeviceSummary</tt> objects for devices that match the
--   specified filter values.
searchDevicesResponse_devices :: Lens' SearchDevicesResponse [DeviceSummary]
instance GHC.Generics.Generic Amazonka.Braket.SearchDevices.SearchDevices
instance GHC.Show.Show Amazonka.Braket.SearchDevices.SearchDevices
instance GHC.Read.Read Amazonka.Braket.SearchDevices.SearchDevices
instance GHC.Classes.Eq Amazonka.Braket.SearchDevices.SearchDevices
instance GHC.Generics.Generic Amazonka.Braket.SearchDevices.SearchDevicesResponse
instance GHC.Show.Show Amazonka.Braket.SearchDevices.SearchDevicesResponse
instance GHC.Read.Read Amazonka.Braket.SearchDevices.SearchDevicesResponse
instance GHC.Classes.Eq Amazonka.Braket.SearchDevices.SearchDevicesResponse
instance Amazonka.Types.AWSRequest Amazonka.Braket.SearchDevices.SearchDevices
instance Control.DeepSeq.NFData Amazonka.Braket.SearchDevices.SearchDevicesResponse
instance Amazonka.Pager.AWSPager Amazonka.Braket.SearchDevices.SearchDevices
instance Data.Hashable.Class.Hashable Amazonka.Braket.SearchDevices.SearchDevices
instance Control.DeepSeq.NFData Amazonka.Braket.SearchDevices.SearchDevices
instance Amazonka.Data.Headers.ToHeaders Amazonka.Braket.SearchDevices.SearchDevices
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Braket.SearchDevices.SearchDevices
instance Amazonka.Data.Path.ToPath Amazonka.Braket.SearchDevices.SearchDevices
instance Amazonka.Data.Query.ToQuery Amazonka.Braket.SearchDevices.SearchDevices


-- | Shows the tags associated with this resource.
module Amazonka.Braket.ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | Specify the <tt>resourceArn</tt> for the resource whose tags to
--   display.
[$sel:resourceArn:ListTagsForResource'] :: ListTagsForResource -> Text

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - Specify the
--   <tt>resourceArn</tt> for the resource whose tags to display.
newListTagsForResource :: Text -> ListTagsForResource

-- | Specify the <tt>resourceArn</tt> for the resource whose tags to
--   display.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe (HashMap Text Text) -> Int -> ListTagsForResourceResponse

-- | Displays the key, value pairs of tags associated with this resource.
[$sel:tags:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Int

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - Displays the key, value
--   pairs of tags associated with this resource.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | Displays the key, value pairs of tags associated with this resource.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int
instance GHC.Generics.Generic Amazonka.Braket.ListTagsForResource.ListTagsForResource
instance GHC.Show.Show Amazonka.Braket.ListTagsForResource.ListTagsForResource
instance GHC.Read.Read Amazonka.Braket.ListTagsForResource.ListTagsForResource
instance GHC.Classes.Eq Amazonka.Braket.ListTagsForResource.ListTagsForResource
instance GHC.Generics.Generic Amazonka.Braket.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Show.Show Amazonka.Braket.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Read.Read Amazonka.Braket.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Classes.Eq Amazonka.Braket.ListTagsForResource.ListTagsForResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.Braket.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Amazonka.Braket.ListTagsForResource.ListTagsForResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.Braket.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Amazonka.Braket.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.Braket.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Path.ToPath Amazonka.Braket.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Query.ToQuery Amazonka.Braket.ListTagsForResource.ListTagsForResource


-- | Retrieves the specified quantum task.
module Amazonka.Braket.GetQuantumTask

-- | <i>See:</i> <a>newGetQuantumTask</a> smart constructor.
data GetQuantumTask
GetQuantumTask' :: Text -> GetQuantumTask

-- | the ARN of the task to retrieve.
[$sel:quantumTaskArn:GetQuantumTask'] :: GetQuantumTask -> Text

-- | Create a value of <a>GetQuantumTask</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:quantumTaskArn:GetQuantumTask'</a>,
--   <a>getQuantumTask_quantumTaskArn</a> - the ARN of the task to
--   retrieve.
newGetQuantumTask :: Text -> GetQuantumTask

-- | the ARN of the task to retrieve.
getQuantumTask_quantumTaskArn :: Lens' GetQuantumTask Text

-- | <i>See:</i> <a>newGetQuantumTaskResponse</a> smart constructor.
data GetQuantumTaskResponse
GetQuantumTaskResponse' :: Maybe Text -> Maybe POSIX -> Maybe (HashMap Text Text) -> Int -> POSIX -> Text -> Text -> Text -> Text -> Text -> Integer -> QuantumTaskStatus -> GetQuantumTaskResponse

-- | The reason that a task failed.
[$sel:failureReason:GetQuantumTaskResponse'] :: GetQuantumTaskResponse -> Maybe Text

-- | The time at which the task ended.
[$sel:endedAt:GetQuantumTaskResponse'] :: GetQuantumTaskResponse -> Maybe POSIX

-- | The tags that belong to this task.
[$sel:tags:GetQuantumTaskResponse'] :: GetQuantumTaskResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:GetQuantumTaskResponse'] :: GetQuantumTaskResponse -> Int

-- | The time at which the task was created.
[$sel:createdAt:GetQuantumTaskResponse'] :: GetQuantumTaskResponse -> POSIX

-- | The ARN of the device the task was run on.
[$sel:deviceArn:GetQuantumTaskResponse'] :: GetQuantumTaskResponse -> Text

-- | The parameters for the device on which the task ran.
[$sel:deviceParameters:GetQuantumTaskResponse'] :: GetQuantumTaskResponse -> Text

-- | The S3 bucket where task results are stored.
[$sel:outputS3Bucket:GetQuantumTaskResponse'] :: GetQuantumTaskResponse -> Text

-- | The folder in the S3 bucket where task results are stored.
[$sel:outputS3Directory:GetQuantumTaskResponse'] :: GetQuantumTaskResponse -> Text

-- | The ARN of the task.
[$sel:quantumTaskArn:GetQuantumTaskResponse'] :: GetQuantumTaskResponse -> Text

-- | The number of shots used in the task.
[$sel:shots:GetQuantumTaskResponse'] :: GetQuantumTaskResponse -> Integer

-- | The status of the task.
[$sel:status:GetQuantumTaskResponse'] :: GetQuantumTaskResponse -> QuantumTaskStatus

-- | Create a value of <a>GetQuantumTaskResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:GetQuantumTaskResponse'</a>,
--   <a>getQuantumTaskResponse_failureReason</a> - The reason that a task
--   failed.
--   
--   <a>$sel:endedAt:GetQuantumTaskResponse'</a>,
--   <a>getQuantumTaskResponse_endedAt</a> - The time at which the task
--   ended.
--   
--   <a>$sel:tags:GetQuantumTaskResponse'</a>,
--   <a>getQuantumTaskResponse_tags</a> - The tags that belong to this
--   task.
--   
--   <a>$sel:httpStatus:GetQuantumTaskResponse'</a>,
--   <a>getQuantumTaskResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:createdAt:GetQuantumTaskResponse'</a>,
--   <a>getQuantumTaskResponse_createdAt</a> - The time at which the task
--   was created.
--   
--   <a>$sel:deviceArn:GetQuantumTaskResponse'</a>,
--   <a>getQuantumTaskResponse_deviceArn</a> - The ARN of the device the
--   task was run on.
--   
--   <a>$sel:deviceParameters:GetQuantumTaskResponse'</a>,
--   <a>getQuantumTaskResponse_deviceParameters</a> - The parameters for
--   the device on which the task ran.
--   
--   <a>$sel:outputS3Bucket:GetQuantumTaskResponse'</a>,
--   <a>getQuantumTaskResponse_outputS3Bucket</a> - The S3 bucket where
--   task results are stored.
--   
--   <a>$sel:outputS3Directory:GetQuantumTaskResponse'</a>,
--   <a>getQuantumTaskResponse_outputS3Directory</a> - The folder in the S3
--   bucket where task results are stored.
--   
--   <a>$sel:quantumTaskArn:GetQuantumTask'</a>,
--   <a>getQuantumTaskResponse_quantumTaskArn</a> - The ARN of the task.
--   
--   <a>$sel:shots:GetQuantumTaskResponse'</a>,
--   <a>getQuantumTaskResponse_shots</a> - The number of shots used in the
--   task.
--   
--   <a>$sel:status:GetQuantumTaskResponse'</a>,
--   <a>getQuantumTaskResponse_status</a> - The status of the task.
newGetQuantumTaskResponse :: Int -> UTCTime -> Text -> Text -> Text -> Text -> Text -> Integer -> QuantumTaskStatus -> GetQuantumTaskResponse

-- | The reason that a task failed.
getQuantumTaskResponse_failureReason :: Lens' GetQuantumTaskResponse (Maybe Text)

-- | The time at which the task ended.
getQuantumTaskResponse_endedAt :: Lens' GetQuantumTaskResponse (Maybe UTCTime)

-- | The tags that belong to this task.
getQuantumTaskResponse_tags :: Lens' GetQuantumTaskResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
getQuantumTaskResponse_httpStatus :: Lens' GetQuantumTaskResponse Int

-- | The time at which the task was created.
getQuantumTaskResponse_createdAt :: Lens' GetQuantumTaskResponse UTCTime

-- | The ARN of the device the task was run on.
getQuantumTaskResponse_deviceArn :: Lens' GetQuantumTaskResponse Text

-- | The parameters for the device on which the task ran.
getQuantumTaskResponse_deviceParameters :: Lens' GetQuantumTaskResponse Text

-- | The S3 bucket where task results are stored.
getQuantumTaskResponse_outputS3Bucket :: Lens' GetQuantumTaskResponse Text

-- | The folder in the S3 bucket where task results are stored.
getQuantumTaskResponse_outputS3Directory :: Lens' GetQuantumTaskResponse Text

-- | The ARN of the task.
getQuantumTaskResponse_quantumTaskArn :: Lens' GetQuantumTaskResponse Text

-- | The number of shots used in the task.
getQuantumTaskResponse_shots :: Lens' GetQuantumTaskResponse Integer

-- | The status of the task.
getQuantumTaskResponse_status :: Lens' GetQuantumTaskResponse QuantumTaskStatus
instance GHC.Generics.Generic Amazonka.Braket.GetQuantumTask.GetQuantumTask
instance GHC.Show.Show Amazonka.Braket.GetQuantumTask.GetQuantumTask
instance GHC.Read.Read Amazonka.Braket.GetQuantumTask.GetQuantumTask
instance GHC.Classes.Eq Amazonka.Braket.GetQuantumTask.GetQuantumTask
instance GHC.Generics.Generic Amazonka.Braket.GetQuantumTask.GetQuantumTaskResponse
instance GHC.Show.Show Amazonka.Braket.GetQuantumTask.GetQuantumTaskResponse
instance GHC.Read.Read Amazonka.Braket.GetQuantumTask.GetQuantumTaskResponse
instance GHC.Classes.Eq Amazonka.Braket.GetQuantumTask.GetQuantumTaskResponse
instance Amazonka.Types.AWSRequest Amazonka.Braket.GetQuantumTask.GetQuantumTask
instance Control.DeepSeq.NFData Amazonka.Braket.GetQuantumTask.GetQuantumTaskResponse
instance Data.Hashable.Class.Hashable Amazonka.Braket.GetQuantumTask.GetQuantumTask
instance Control.DeepSeq.NFData Amazonka.Braket.GetQuantumTask.GetQuantumTask
instance Amazonka.Data.Headers.ToHeaders Amazonka.Braket.GetQuantumTask.GetQuantumTask
instance Amazonka.Data.Path.ToPath Amazonka.Braket.GetQuantumTask.GetQuantumTask
instance Amazonka.Data.Query.ToQuery Amazonka.Braket.GetQuantumTask.GetQuantumTask


-- | Retrieves the devices available in Amazon Braket.
module Amazonka.Braket.GetDevice

-- | <i>See:</i> <a>newGetDevice</a> smart constructor.
data GetDevice
GetDevice' :: Text -> GetDevice

-- | The ARN of the device to retrieve.
[$sel:deviceArn:GetDevice'] :: GetDevice -> Text

-- | Create a value of <a>GetDevice</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceArn:GetDevice'</a>, <a>getDevice_deviceArn</a> - The ARN
--   of the device to retrieve.
newGetDevice :: Text -> GetDevice

-- | The ARN of the device to retrieve.
getDevice_deviceArn :: Lens' GetDevice Text

-- | <i>See:</i> <a>newGetDeviceResponse</a> smart constructor.
data GetDeviceResponse
GetDeviceResponse' :: Int -> Text -> Text -> Text -> DeviceStatus -> DeviceType -> Text -> GetDeviceResponse

-- | The response's http status code.
[$sel:httpStatus:GetDeviceResponse'] :: GetDeviceResponse -> Int

-- | The ARN of the device.
[$sel:deviceArn:GetDeviceResponse'] :: GetDeviceResponse -> Text

-- | Details about the capabilities of the device.
[$sel:deviceCapabilities:GetDeviceResponse'] :: GetDeviceResponse -> Text

-- | The name of the device.
[$sel:deviceName:GetDeviceResponse'] :: GetDeviceResponse -> Text

-- | The status of the device.
[$sel:deviceStatus:GetDeviceResponse'] :: GetDeviceResponse -> DeviceStatus

-- | The type of the device.
[$sel:deviceType:GetDeviceResponse'] :: GetDeviceResponse -> DeviceType

-- | The name of the partner company for the device.
[$sel:providerName:GetDeviceResponse'] :: GetDeviceResponse -> Text

-- | Create a value of <a>GetDeviceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetDeviceResponse'</a>,
--   <a>getDeviceResponse_httpStatus</a> - The response's http status code.
--   
--   <a>$sel:deviceArn:GetDevice'</a>, <a>getDeviceResponse_deviceArn</a> -
--   The ARN of the device.
--   
--   <a>$sel:deviceCapabilities:GetDeviceResponse'</a>,
--   <a>getDeviceResponse_deviceCapabilities</a> - Details about the
--   capabilities of the device.
--   
--   <a>$sel:deviceName:GetDeviceResponse'</a>,
--   <a>getDeviceResponse_deviceName</a> - The name of the device.
--   
--   <a>$sel:deviceStatus:GetDeviceResponse'</a>,
--   <a>getDeviceResponse_deviceStatus</a> - The status of the device.
--   
--   <a>$sel:deviceType:GetDeviceResponse'</a>,
--   <a>getDeviceResponse_deviceType</a> - The type of the device.
--   
--   <a>$sel:providerName:GetDeviceResponse'</a>,
--   <a>getDeviceResponse_providerName</a> - The name of the partner
--   company for the device.
newGetDeviceResponse :: Int -> Text -> Text -> Text -> DeviceStatus -> DeviceType -> Text -> GetDeviceResponse

-- | The response's http status code.
getDeviceResponse_httpStatus :: Lens' GetDeviceResponse Int

-- | The ARN of the device.
getDeviceResponse_deviceArn :: Lens' GetDeviceResponse Text

-- | Details about the capabilities of the device.
getDeviceResponse_deviceCapabilities :: Lens' GetDeviceResponse Text

-- | The name of the device.
getDeviceResponse_deviceName :: Lens' GetDeviceResponse Text

-- | The status of the device.
getDeviceResponse_deviceStatus :: Lens' GetDeviceResponse DeviceStatus

-- | The type of the device.
getDeviceResponse_deviceType :: Lens' GetDeviceResponse DeviceType

-- | The name of the partner company for the device.
getDeviceResponse_providerName :: Lens' GetDeviceResponse Text
instance GHC.Generics.Generic Amazonka.Braket.GetDevice.GetDevice
instance GHC.Show.Show Amazonka.Braket.GetDevice.GetDevice
instance GHC.Read.Read Amazonka.Braket.GetDevice.GetDevice
instance GHC.Classes.Eq Amazonka.Braket.GetDevice.GetDevice
instance GHC.Generics.Generic Amazonka.Braket.GetDevice.GetDeviceResponse
instance GHC.Show.Show Amazonka.Braket.GetDevice.GetDeviceResponse
instance GHC.Read.Read Amazonka.Braket.GetDevice.GetDeviceResponse
instance GHC.Classes.Eq Amazonka.Braket.GetDevice.GetDeviceResponse
instance Amazonka.Types.AWSRequest Amazonka.Braket.GetDevice.GetDevice
instance Control.DeepSeq.NFData Amazonka.Braket.GetDevice.GetDeviceResponse
instance Data.Hashable.Class.Hashable Amazonka.Braket.GetDevice.GetDevice
instance Control.DeepSeq.NFData Amazonka.Braket.GetDevice.GetDevice
instance Amazonka.Data.Headers.ToHeaders Amazonka.Braket.GetDevice.GetDevice
instance Amazonka.Data.Path.ToPath Amazonka.Braket.GetDevice.GetDevice
instance Amazonka.Data.Query.ToQuery Amazonka.Braket.GetDevice.GetDevice


-- | Creates a quantum task.
module Amazonka.Braket.CreateQuantumTask

-- | <i>See:</i> <a>newCreateQuantumTask</a> smart constructor.
data CreateQuantumTask
CreateQuantumTask' :: Maybe Text -> Maybe (HashMap Text Text) -> Text -> Text -> Text -> Text -> Text -> Natural -> CreateQuantumTask

-- | The parameters for the device to run the task on.
[$sel:deviceParameters:CreateQuantumTask'] :: CreateQuantumTask -> Maybe Text

-- | Tags to be added to the quantum task you're creating.
[$sel:tags:CreateQuantumTask'] :: CreateQuantumTask -> Maybe (HashMap Text Text)

-- | The action associated with the task.
[$sel:action:CreateQuantumTask'] :: CreateQuantumTask -> Text

-- | The client token associated with the request.
[$sel:clientToken:CreateQuantumTask'] :: CreateQuantumTask -> Text

-- | The ARN of the device to run the task on.
[$sel:deviceArn:CreateQuantumTask'] :: CreateQuantumTask -> Text

-- | The S3 bucket to store task result files in.
[$sel:outputS3Bucket:CreateQuantumTask'] :: CreateQuantumTask -> Text

-- | The key prefix for the location in the S3 bucket to store task results
--   in.
[$sel:outputS3KeyPrefix:CreateQuantumTask'] :: CreateQuantumTask -> Text

-- | The number of shots to use for the task.
[$sel:shots:CreateQuantumTask'] :: CreateQuantumTask -> Natural

-- | Create a value of <a>CreateQuantumTask</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceParameters:CreateQuantumTask'</a>,
--   <a>createQuantumTask_deviceParameters</a> - The parameters for the
--   device to run the task on.
--   
--   <a>$sel:tags:CreateQuantumTask'</a>, <a>createQuantumTask_tags</a> -
--   Tags to be added to the quantum task you're creating.
--   
--   <a>$sel:action:CreateQuantumTask'</a>, <a>createQuantumTask_action</a>
--   - The action associated with the task.
--   
--   <a>$sel:clientToken:CreateQuantumTask'</a>,
--   <a>createQuantumTask_clientToken</a> - The client token associated
--   with the request.
--   
--   <a>$sel:deviceArn:CreateQuantumTask'</a>,
--   <a>createQuantumTask_deviceArn</a> - The ARN of the device to run the
--   task on.
--   
--   <a>$sel:outputS3Bucket:CreateQuantumTask'</a>,
--   <a>createQuantumTask_outputS3Bucket</a> - The S3 bucket to store task
--   result files in.
--   
--   <a>$sel:outputS3KeyPrefix:CreateQuantumTask'</a>,
--   <a>createQuantumTask_outputS3KeyPrefix</a> - The key prefix for the
--   location in the S3 bucket to store task results in.
--   
--   <a>$sel:shots:CreateQuantumTask'</a>, <a>createQuantumTask_shots</a> -
--   The number of shots to use for the task.
newCreateQuantumTask :: Text -> Text -> Text -> Text -> Text -> Natural -> CreateQuantumTask

-- | The parameters for the device to run the task on.
createQuantumTask_deviceParameters :: Lens' CreateQuantumTask (Maybe Text)

-- | Tags to be added to the quantum task you're creating.
createQuantumTask_tags :: Lens' CreateQuantumTask (Maybe (HashMap Text Text))

-- | The action associated with the task.
createQuantumTask_action :: Lens' CreateQuantumTask Text

-- | The client token associated with the request.
createQuantumTask_clientToken :: Lens' CreateQuantumTask Text

-- | The ARN of the device to run the task on.
createQuantumTask_deviceArn :: Lens' CreateQuantumTask Text

-- | The S3 bucket to store task result files in.
createQuantumTask_outputS3Bucket :: Lens' CreateQuantumTask Text

-- | The key prefix for the location in the S3 bucket to store task results
--   in.
createQuantumTask_outputS3KeyPrefix :: Lens' CreateQuantumTask Text

-- | The number of shots to use for the task.
createQuantumTask_shots :: Lens' CreateQuantumTask Natural

-- | <i>See:</i> <a>newCreateQuantumTaskResponse</a> smart constructor.
data CreateQuantumTaskResponse
CreateQuantumTaskResponse' :: Int -> Text -> CreateQuantumTaskResponse

-- | The response's http status code.
[$sel:httpStatus:CreateQuantumTaskResponse'] :: CreateQuantumTaskResponse -> Int

-- | The ARN of the task created by the request.
[$sel:quantumTaskArn:CreateQuantumTaskResponse'] :: CreateQuantumTaskResponse -> Text

-- | Create a value of <a>CreateQuantumTaskResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateQuantumTaskResponse'</a>,
--   <a>createQuantumTaskResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:quantumTaskArn:CreateQuantumTaskResponse'</a>,
--   <a>createQuantumTaskResponse_quantumTaskArn</a> - The ARN of the task
--   created by the request.
newCreateQuantumTaskResponse :: Int -> Text -> CreateQuantumTaskResponse

-- | The response's http status code.
createQuantumTaskResponse_httpStatus :: Lens' CreateQuantumTaskResponse Int

-- | The ARN of the task created by the request.
createQuantumTaskResponse_quantumTaskArn :: Lens' CreateQuantumTaskResponse Text
instance GHC.Generics.Generic Amazonka.Braket.CreateQuantumTask.CreateQuantumTask
instance GHC.Show.Show Amazonka.Braket.CreateQuantumTask.CreateQuantumTask
instance GHC.Read.Read Amazonka.Braket.CreateQuantumTask.CreateQuantumTask
instance GHC.Classes.Eq Amazonka.Braket.CreateQuantumTask.CreateQuantumTask
instance GHC.Generics.Generic Amazonka.Braket.CreateQuantumTask.CreateQuantumTaskResponse
instance GHC.Show.Show Amazonka.Braket.CreateQuantumTask.CreateQuantumTaskResponse
instance GHC.Read.Read Amazonka.Braket.CreateQuantumTask.CreateQuantumTaskResponse
instance GHC.Classes.Eq Amazonka.Braket.CreateQuantumTask.CreateQuantumTaskResponse
instance Amazonka.Types.AWSRequest Amazonka.Braket.CreateQuantumTask.CreateQuantumTask
instance Control.DeepSeq.NFData Amazonka.Braket.CreateQuantumTask.CreateQuantumTaskResponse
instance Data.Hashable.Class.Hashable Amazonka.Braket.CreateQuantumTask.CreateQuantumTask
instance Control.DeepSeq.NFData Amazonka.Braket.CreateQuantumTask.CreateQuantumTask
instance Amazonka.Data.Headers.ToHeaders Amazonka.Braket.CreateQuantumTask.CreateQuantumTask
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Braket.CreateQuantumTask.CreateQuantumTask
instance Amazonka.Data.Path.ToPath Amazonka.Braket.CreateQuantumTask.CreateQuantumTask
instance Amazonka.Data.Query.ToQuery Amazonka.Braket.CreateQuantumTask.CreateQuantumTask


-- | Cancels the specified task.
module Amazonka.Braket.CancelQuantumTask

-- | <i>See:</i> <a>newCancelQuantumTask</a> smart constructor.
data CancelQuantumTask
CancelQuantumTask' :: Text -> Text -> CancelQuantumTask

-- | The client token associated with the request.
[$sel:clientToken:CancelQuantumTask'] :: CancelQuantumTask -> Text

-- | The ARN of the task to cancel.
[$sel:quantumTaskArn:CancelQuantumTask'] :: CancelQuantumTask -> Text

-- | Create a value of <a>CancelQuantumTask</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:CancelQuantumTask'</a>,
--   <a>cancelQuantumTask_clientToken</a> - The client token associated
--   with the request.
--   
--   <a>$sel:quantumTaskArn:CancelQuantumTask'</a>,
--   <a>cancelQuantumTask_quantumTaskArn</a> - The ARN of the task to
--   cancel.
newCancelQuantumTask :: Text -> Text -> CancelQuantumTask

-- | The client token associated with the request.
cancelQuantumTask_clientToken :: Lens' CancelQuantumTask Text

-- | The ARN of the task to cancel.
cancelQuantumTask_quantumTaskArn :: Lens' CancelQuantumTask Text

-- | <i>See:</i> <a>newCancelQuantumTaskResponse</a> smart constructor.
data CancelQuantumTaskResponse
CancelQuantumTaskResponse' :: Int -> CancellationStatus -> Text -> CancelQuantumTaskResponse

-- | The response's http status code.
[$sel:httpStatus:CancelQuantumTaskResponse'] :: CancelQuantumTaskResponse -> Int

-- | The status of the cancellation request.
[$sel:cancellationStatus:CancelQuantumTaskResponse'] :: CancelQuantumTaskResponse -> CancellationStatus

-- | The ARN of the task.
[$sel:quantumTaskArn:CancelQuantumTaskResponse'] :: CancelQuantumTaskResponse -> Text

-- | Create a value of <a>CancelQuantumTaskResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CancelQuantumTaskResponse'</a>,
--   <a>cancelQuantumTaskResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:cancellationStatus:CancelQuantumTaskResponse'</a>,
--   <a>cancelQuantumTaskResponse_cancellationStatus</a> - The status of
--   the cancellation request.
--   
--   <a>$sel:quantumTaskArn:CancelQuantumTask'</a>,
--   <a>cancelQuantumTaskResponse_quantumTaskArn</a> - The ARN of the task.
newCancelQuantumTaskResponse :: Int -> CancellationStatus -> Text -> CancelQuantumTaskResponse

-- | The response's http status code.
cancelQuantumTaskResponse_httpStatus :: Lens' CancelQuantumTaskResponse Int

-- | The status of the cancellation request.
cancelQuantumTaskResponse_cancellationStatus :: Lens' CancelQuantumTaskResponse CancellationStatus

-- | The ARN of the task.
cancelQuantumTaskResponse_quantumTaskArn :: Lens' CancelQuantumTaskResponse Text
instance GHC.Generics.Generic Amazonka.Braket.CancelQuantumTask.CancelQuantumTask
instance GHC.Show.Show Amazonka.Braket.CancelQuantumTask.CancelQuantumTask
instance GHC.Read.Read Amazonka.Braket.CancelQuantumTask.CancelQuantumTask
instance GHC.Classes.Eq Amazonka.Braket.CancelQuantumTask.CancelQuantumTask
instance GHC.Generics.Generic Amazonka.Braket.CancelQuantumTask.CancelQuantumTaskResponse
instance GHC.Show.Show Amazonka.Braket.CancelQuantumTask.CancelQuantumTaskResponse
instance GHC.Read.Read Amazonka.Braket.CancelQuantumTask.CancelQuantumTaskResponse
instance GHC.Classes.Eq Amazonka.Braket.CancelQuantumTask.CancelQuantumTaskResponse
instance Amazonka.Types.AWSRequest Amazonka.Braket.CancelQuantumTask.CancelQuantumTask
instance Control.DeepSeq.NFData Amazonka.Braket.CancelQuantumTask.CancelQuantumTaskResponse
instance Data.Hashable.Class.Hashable Amazonka.Braket.CancelQuantumTask.CancelQuantumTask
instance Control.DeepSeq.NFData Amazonka.Braket.CancelQuantumTask.CancelQuantumTask
instance Amazonka.Data.Headers.ToHeaders Amazonka.Braket.CancelQuantumTask.CancelQuantumTask
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Braket.CancelQuantumTask.CancelQuantumTask
instance Amazonka.Data.Path.ToPath Amazonka.Braket.CancelQuantumTask.CancelQuantumTask
instance Amazonka.Data.Query.ToQuery Amazonka.Braket.CancelQuantumTask.CancelQuantumTask


-- | Remove tags from a resource.
module Amazonka.Braket.UntagResource

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | Specify the <tt>resourceArn</tt> for the resource from which to remove
--   the tags.
[$sel:resourceArn:UntagResource'] :: UntagResource -> Text

-- | Specify the keys for the tags to remove from the resource.
[$sel:tagKeys:UntagResource'] :: UntagResource -> [Text]

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - Specify the <tt>resourceArn</tt>
--   for the resource from which to remove the tags.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> -
--   Specify the keys for the tags to remove from the resource.
newUntagResource :: Text -> UntagResource

-- | Specify the <tt>resourceArn</tt> for the resource from which to remove
--   the tags.
untagResource_resourceArn :: Lens' UntagResource Text

-- | Specify the keys for the tags to remove from the resource.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:UntagResourceResponse'] :: UntagResourceResponse -> Int

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int
instance GHC.Generics.Generic Amazonka.Braket.UntagResource.UntagResource
instance GHC.Show.Show Amazonka.Braket.UntagResource.UntagResource
instance GHC.Read.Read Amazonka.Braket.UntagResource.UntagResource
instance GHC.Classes.Eq Amazonka.Braket.UntagResource.UntagResource
instance GHC.Generics.Generic Amazonka.Braket.UntagResource.UntagResourceResponse
instance GHC.Show.Show Amazonka.Braket.UntagResource.UntagResourceResponse
instance GHC.Read.Read Amazonka.Braket.UntagResource.UntagResourceResponse
instance GHC.Classes.Eq Amazonka.Braket.UntagResource.UntagResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.Braket.UntagResource.UntagResource
instance Control.DeepSeq.NFData Amazonka.Braket.UntagResource.UntagResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.Braket.UntagResource.UntagResource
instance Control.DeepSeq.NFData Amazonka.Braket.UntagResource.UntagResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.Braket.UntagResource.UntagResource
instance Amazonka.Data.Path.ToPath Amazonka.Braket.UntagResource.UntagResource
instance Amazonka.Data.Query.ToQuery Amazonka.Braket.UntagResource.UntagResource


module Amazonka.Braket.Lens

-- | the ARN of the task to retrieve.
getQuantumTask_quantumTaskArn :: Lens' GetQuantumTask Text

-- | The reason that a task failed.
getQuantumTaskResponse_failureReason :: Lens' GetQuantumTaskResponse (Maybe Text)

-- | The time at which the task ended.
getQuantumTaskResponse_endedAt :: Lens' GetQuantumTaskResponse (Maybe UTCTime)

-- | The tags that belong to this task.
getQuantumTaskResponse_tags :: Lens' GetQuantumTaskResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
getQuantumTaskResponse_httpStatus :: Lens' GetQuantumTaskResponse Int

-- | The time at which the task was created.
getQuantumTaskResponse_createdAt :: Lens' GetQuantumTaskResponse UTCTime

-- | The ARN of the device the task was run on.
getQuantumTaskResponse_deviceArn :: Lens' GetQuantumTaskResponse Text

-- | The parameters for the device on which the task ran.
getQuantumTaskResponse_deviceParameters :: Lens' GetQuantumTaskResponse Text

-- | The S3 bucket where task results are stored.
getQuantumTaskResponse_outputS3Bucket :: Lens' GetQuantumTaskResponse Text

-- | The folder in the S3 bucket where task results are stored.
getQuantumTaskResponse_outputS3Directory :: Lens' GetQuantumTaskResponse Text

-- | The ARN of the task.
getQuantumTaskResponse_quantumTaskArn :: Lens' GetQuantumTaskResponse Text

-- | The number of shots used in the task.
getQuantumTaskResponse_shots :: Lens' GetQuantumTaskResponse Integer

-- | The status of the task.
getQuantumTaskResponse_status :: Lens' GetQuantumTaskResponse QuantumTaskStatus

-- | A token used for pagination of results returned in the response. Use
--   the token returned from the previous request continue results where
--   the previous request ended.
searchQuantumTasks_nextToken :: Lens' SearchQuantumTasks (Maybe Text)

-- | Maximum number of results to return in the response.
searchQuantumTasks_maxResults :: Lens' SearchQuantumTasks (Maybe Natural)

-- | Array of <tt>SearchQuantumTasksFilter</tt> objects.
searchQuantumTasks_filters :: Lens' SearchQuantumTasks [SearchQuantumTasksFilter]

-- | A token used for pagination of results, or null if there are no
--   additional results. Use the token value in a subsequent request to
--   continue results where the previous request ended.
searchQuantumTasksResponse_nextToken :: Lens' SearchQuantumTasksResponse (Maybe Text)

-- | The response's http status code.
searchQuantumTasksResponse_httpStatus :: Lens' SearchQuantumTasksResponse Int

-- | An array of <tt>QuantumTaskSummary</tt> objects for tasks that match
--   the specified filters.
searchQuantumTasksResponse_quantumTasks :: Lens' SearchQuantumTasksResponse [QuantumTaskSummary]

-- | Specify the <tt>resourceArn</tt> for the resource whose tags to
--   display.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | Displays the key, value pairs of tags associated with this resource.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int

-- | The ARN of the device to retrieve.
getDevice_deviceArn :: Lens' GetDevice Text

-- | The response's http status code.
getDeviceResponse_httpStatus :: Lens' GetDeviceResponse Int

-- | The ARN of the device.
getDeviceResponse_deviceArn :: Lens' GetDeviceResponse Text

-- | Details about the capabilities of the device.
getDeviceResponse_deviceCapabilities :: Lens' GetDeviceResponse Text

-- | The name of the device.
getDeviceResponse_deviceName :: Lens' GetDeviceResponse Text

-- | The status of the device.
getDeviceResponse_deviceStatus :: Lens' GetDeviceResponse DeviceStatus

-- | The type of the device.
getDeviceResponse_deviceType :: Lens' GetDeviceResponse DeviceType

-- | The name of the partner company for the device.
getDeviceResponse_providerName :: Lens' GetDeviceResponse Text

-- | The client token associated with the request.
cancelQuantumTask_clientToken :: Lens' CancelQuantumTask Text

-- | The ARN of the task to cancel.
cancelQuantumTask_quantumTaskArn :: Lens' CancelQuantumTask Text

-- | The response's http status code.
cancelQuantumTaskResponse_httpStatus :: Lens' CancelQuantumTaskResponse Int

-- | The status of the cancellation request.
cancelQuantumTaskResponse_cancellationStatus :: Lens' CancelQuantumTaskResponse CancellationStatus

-- | The ARN of the task.
cancelQuantumTaskResponse_quantumTaskArn :: Lens' CancelQuantumTaskResponse Text

-- | A token used for pagination of results returned in the response. Use
--   the token returned from the previous request continue results where
--   the previous request ended.
searchDevices_nextToken :: Lens' SearchDevices (Maybe Text)

-- | The maximum number of results to return in the response.
searchDevices_maxResults :: Lens' SearchDevices (Maybe Natural)

-- | The filter values to use to search for a device.
searchDevices_filters :: Lens' SearchDevices [SearchDevicesFilter]

-- | A token used for pagination of results, or null if there are no
--   additional results. Use the token value in a subsequent request to
--   continue results where the previous request ended.
searchDevicesResponse_nextToken :: Lens' SearchDevicesResponse (Maybe Text)

-- | The response's http status code.
searchDevicesResponse_httpStatus :: Lens' SearchDevicesResponse Int

-- | An array of <tt>DeviceSummary</tt> objects for devices that match the
--   specified filter values.
searchDevicesResponse_devices :: Lens' SearchDevicesResponse [DeviceSummary]

-- | Specify the <tt>resourceArn</tt> of the resource to which a tag will
--   be added.
tagResource_resourceArn :: Lens' TagResource Text

-- | Specify the tags to add to the resource.
tagResource_tags :: Lens' TagResource (HashMap Text Text)

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int

-- | Specify the <tt>resourceArn</tt> for the resource from which to remove
--   the tags.
untagResource_resourceArn :: Lens' UntagResource Text

-- | Specify the keys for the tags to remove from the resource.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int

-- | The parameters for the device to run the task on.
createQuantumTask_deviceParameters :: Lens' CreateQuantumTask (Maybe Text)

-- | Tags to be added to the quantum task you're creating.
createQuantumTask_tags :: Lens' CreateQuantumTask (Maybe (HashMap Text Text))

-- | The action associated with the task.
createQuantumTask_action :: Lens' CreateQuantumTask Text

-- | The client token associated with the request.
createQuantumTask_clientToken :: Lens' CreateQuantumTask Text

-- | The ARN of the device to run the task on.
createQuantumTask_deviceArn :: Lens' CreateQuantumTask Text

-- | The S3 bucket to store task result files in.
createQuantumTask_outputS3Bucket :: Lens' CreateQuantumTask Text

-- | The key prefix for the location in the S3 bucket to store task results
--   in.
createQuantumTask_outputS3KeyPrefix :: Lens' CreateQuantumTask Text

-- | The number of shots to use for the task.
createQuantumTask_shots :: Lens' CreateQuantumTask Natural

-- | The response's http status code.
createQuantumTaskResponse_httpStatus :: Lens' CreateQuantumTaskResponse Int

-- | The ARN of the task created by the request.
createQuantumTaskResponse_quantumTaskArn :: Lens' CreateQuantumTaskResponse Text

-- | The ARN of the device.
deviceSummary_deviceArn :: Lens' DeviceSummary Text

-- | The name of the device.
deviceSummary_deviceName :: Lens' DeviceSummary Text

-- | The status of the device.
deviceSummary_deviceStatus :: Lens' DeviceSummary DeviceStatus

-- | The type of the device.
deviceSummary_deviceType :: Lens' DeviceSummary DeviceType

-- | The provider of the device.
deviceSummary_providerName :: Lens' DeviceSummary Text

-- | The time at which the task finished.
quantumTaskSummary_endedAt :: Lens' QuantumTaskSummary (Maybe UTCTime)

-- | Displays the key, value pairs of tags associated with this quantum
--   task.
quantumTaskSummary_tags :: Lens' QuantumTaskSummary (Maybe (HashMap Text Text))

-- | The time at which the task was created.
quantumTaskSummary_createdAt :: Lens' QuantumTaskSummary UTCTime

-- | The ARN of the device the task ran on.
quantumTaskSummary_deviceArn :: Lens' QuantumTaskSummary Text

-- | The S3 bucket where the task result file is stored..
quantumTaskSummary_outputS3Bucket :: Lens' QuantumTaskSummary Text

-- | The folder in the S3 bucket where the task result file is stored.
quantumTaskSummary_outputS3Directory :: Lens' QuantumTaskSummary Text

-- | The ARN of the task.
quantumTaskSummary_quantumTaskArn :: Lens' QuantumTaskSummary Text

-- | The shots used for the task.
quantumTaskSummary_shots :: Lens' QuantumTaskSummary Integer

-- | The status of the task.
quantumTaskSummary_status :: Lens' QuantumTaskSummary QuantumTaskStatus

-- | The name to use to filter results.
searchDevicesFilter_name :: Lens' SearchDevicesFilter Text

-- | The values to use to filter results.
searchDevicesFilter_values :: Lens' SearchDevicesFilter (NonEmpty Text)

-- | The name of the device used for the task.
searchQuantumTasksFilter_name :: Lens' SearchQuantumTasksFilter Text

-- | An operator to use in the filter.
searchQuantumTasksFilter_operator :: Lens' SearchQuantumTasksFilter SearchQuantumTasksFilterOperator

-- | The values to use for the filter.
searchQuantumTasksFilter_values :: Lens' SearchQuantumTasksFilter (NonEmpty Text)


module Amazonka.Braket.Waiters


-- | Derived from API version <tt>2019-09-01</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   The Amazon Braket API Reference provides information about the
--   operations and structures supported in Amazon Braket.
module Amazonka.Braket

-- | API version <tt>2019-09-01</tt> of the Amazon Braket SDK
--   configuration.
defaultService :: Service

-- | The input fails to satisfy the constraints specified by an AWS
--   service.
_ValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You do not have sufficient access to perform this action.
_AccessDeniedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified device is currently offline.
_DeviceOfflineException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified device has been retired.
_DeviceRetiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An error occurred due to a conflict.
_ConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request failed because a service quota is exceeded.
_ServiceQuotaExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The throttling rate limit is met.
_ThrottlingException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request processing has failed because of an unknown error,
--   exception, or failure.
_InternalServiceException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified resource was not found.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newGetQuantumTask</a> smart constructor.
data GetQuantumTask
GetQuantumTask' :: Text -> GetQuantumTask

-- | Create a value of <a>GetQuantumTask</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:quantumTaskArn:GetQuantumTask'</a>,
--   <a>getQuantumTask_quantumTaskArn</a> - the ARN of the task to
--   retrieve.
newGetQuantumTask :: Text -> GetQuantumTask

-- | <i>See:</i> <a>newGetQuantumTaskResponse</a> smart constructor.
data GetQuantumTaskResponse
GetQuantumTaskResponse' :: Maybe Text -> Maybe POSIX -> Maybe (HashMap Text Text) -> Int -> POSIX -> Text -> Text -> Text -> Text -> Text -> Integer -> QuantumTaskStatus -> GetQuantumTaskResponse

-- | Create a value of <a>GetQuantumTaskResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:GetQuantumTaskResponse'</a>,
--   <a>getQuantumTaskResponse_failureReason</a> - The reason that a task
--   failed.
--   
--   <a>$sel:endedAt:GetQuantumTaskResponse'</a>,
--   <a>getQuantumTaskResponse_endedAt</a> - The time at which the task
--   ended.
--   
--   <a>$sel:tags:GetQuantumTaskResponse'</a>,
--   <a>getQuantumTaskResponse_tags</a> - The tags that belong to this
--   task.
--   
--   <a>$sel:httpStatus:GetQuantumTaskResponse'</a>,
--   <a>getQuantumTaskResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:createdAt:GetQuantumTaskResponse'</a>,
--   <a>getQuantumTaskResponse_createdAt</a> - The time at which the task
--   was created.
--   
--   <a>$sel:deviceArn:GetQuantumTaskResponse'</a>,
--   <a>getQuantumTaskResponse_deviceArn</a> - The ARN of the device the
--   task was run on.
--   
--   <a>$sel:deviceParameters:GetQuantumTaskResponse'</a>,
--   <a>getQuantumTaskResponse_deviceParameters</a> - The parameters for
--   the device on which the task ran.
--   
--   <a>$sel:outputS3Bucket:GetQuantumTaskResponse'</a>,
--   <a>getQuantumTaskResponse_outputS3Bucket</a> - The S3 bucket where
--   task results are stored.
--   
--   <a>$sel:outputS3Directory:GetQuantumTaskResponse'</a>,
--   <a>getQuantumTaskResponse_outputS3Directory</a> - The folder in the S3
--   bucket where task results are stored.
--   
--   <a>$sel:quantumTaskArn:GetQuantumTask'</a>,
--   <a>getQuantumTaskResponse_quantumTaskArn</a> - The ARN of the task.
--   
--   <a>$sel:shots:GetQuantumTaskResponse'</a>,
--   <a>getQuantumTaskResponse_shots</a> - The number of shots used in the
--   task.
--   
--   <a>$sel:status:GetQuantumTaskResponse'</a>,
--   <a>getQuantumTaskResponse_status</a> - The status of the task.
newGetQuantumTaskResponse :: Int -> UTCTime -> Text -> Text -> Text -> Text -> Text -> Integer -> QuantumTaskStatus -> GetQuantumTaskResponse

-- | <i>See:</i> <a>newSearchQuantumTasks</a> smart constructor.
data SearchQuantumTasks
SearchQuantumTasks' :: Maybe Text -> Maybe Natural -> [SearchQuantumTasksFilter] -> SearchQuantumTasks

-- | Create a value of <a>SearchQuantumTasks</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:SearchQuantumTasks'</a>,
--   <a>searchQuantumTasks_nextToken</a> - A token used for pagination of
--   results returned in the response. Use the token returned from the
--   previous request continue results where the previous request ended.
--   
--   <a>$sel:maxResults:SearchQuantumTasks'</a>,
--   <a>searchQuantumTasks_maxResults</a> - Maximum number of results to
--   return in the response.
--   
--   <a>$sel:filters:SearchQuantumTasks'</a>,
--   <a>searchQuantumTasks_filters</a> - Array of
--   <tt>SearchQuantumTasksFilter</tt> objects.
newSearchQuantumTasks :: SearchQuantumTasks

-- | <i>See:</i> <a>newSearchQuantumTasksResponse</a> smart constructor.
data SearchQuantumTasksResponse
SearchQuantumTasksResponse' :: Maybe Text -> Int -> [QuantumTaskSummary] -> SearchQuantumTasksResponse

-- | Create a value of <a>SearchQuantumTasksResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:SearchQuantumTasks'</a>,
--   <a>searchQuantumTasksResponse_nextToken</a> - A token used for
--   pagination of results, or null if there are no additional results. Use
--   the token value in a subsequent request to continue results where the
--   previous request ended.
--   
--   <a>$sel:httpStatus:SearchQuantumTasksResponse'</a>,
--   <a>searchQuantumTasksResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:quantumTasks:SearchQuantumTasksResponse'</a>,
--   <a>searchQuantumTasksResponse_quantumTasks</a> - An array of
--   <tt>QuantumTaskSummary</tt> objects for tasks that match the specified
--   filters.
newSearchQuantumTasksResponse :: Int -> SearchQuantumTasksResponse

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - Specify the
--   <tt>resourceArn</tt> for the resource whose tags to display.
newListTagsForResource :: Text -> ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe (HashMap Text Text) -> Int -> ListTagsForResourceResponse

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - Displays the key, value
--   pairs of tags associated with this resource.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | <i>See:</i> <a>newGetDevice</a> smart constructor.
data GetDevice
GetDevice' :: Text -> GetDevice

-- | Create a value of <a>GetDevice</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceArn:GetDevice'</a>, <a>getDevice_deviceArn</a> - The ARN
--   of the device to retrieve.
newGetDevice :: Text -> GetDevice

-- | <i>See:</i> <a>newGetDeviceResponse</a> smart constructor.
data GetDeviceResponse
GetDeviceResponse' :: Int -> Text -> Text -> Text -> DeviceStatus -> DeviceType -> Text -> GetDeviceResponse

-- | Create a value of <a>GetDeviceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetDeviceResponse'</a>,
--   <a>getDeviceResponse_httpStatus</a> - The response's http status code.
--   
--   <a>$sel:deviceArn:GetDevice'</a>, <a>getDeviceResponse_deviceArn</a> -
--   The ARN of the device.
--   
--   <a>$sel:deviceCapabilities:GetDeviceResponse'</a>,
--   <a>getDeviceResponse_deviceCapabilities</a> - Details about the
--   capabilities of the device.
--   
--   <a>$sel:deviceName:GetDeviceResponse'</a>,
--   <a>getDeviceResponse_deviceName</a> - The name of the device.
--   
--   <a>$sel:deviceStatus:GetDeviceResponse'</a>,
--   <a>getDeviceResponse_deviceStatus</a> - The status of the device.
--   
--   <a>$sel:deviceType:GetDeviceResponse'</a>,
--   <a>getDeviceResponse_deviceType</a> - The type of the device.
--   
--   <a>$sel:providerName:GetDeviceResponse'</a>,
--   <a>getDeviceResponse_providerName</a> - The name of the partner
--   company for the device.
newGetDeviceResponse :: Int -> Text -> Text -> Text -> DeviceStatus -> DeviceType -> Text -> GetDeviceResponse

-- | <i>See:</i> <a>newCancelQuantumTask</a> smart constructor.
data CancelQuantumTask
CancelQuantumTask' :: Text -> Text -> CancelQuantumTask

-- | Create a value of <a>CancelQuantumTask</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:CancelQuantumTask'</a>,
--   <a>cancelQuantumTask_clientToken</a> - The client token associated
--   with the request.
--   
--   <a>$sel:quantumTaskArn:CancelQuantumTask'</a>,
--   <a>cancelQuantumTask_quantumTaskArn</a> - The ARN of the task to
--   cancel.
newCancelQuantumTask :: Text -> Text -> CancelQuantumTask

-- | <i>See:</i> <a>newCancelQuantumTaskResponse</a> smart constructor.
data CancelQuantumTaskResponse
CancelQuantumTaskResponse' :: Int -> CancellationStatus -> Text -> CancelQuantumTaskResponse

-- | Create a value of <a>CancelQuantumTaskResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CancelQuantumTaskResponse'</a>,
--   <a>cancelQuantumTaskResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:cancellationStatus:CancelQuantumTaskResponse'</a>,
--   <a>cancelQuantumTaskResponse_cancellationStatus</a> - The status of
--   the cancellation request.
--   
--   <a>$sel:quantumTaskArn:CancelQuantumTask'</a>,
--   <a>cancelQuantumTaskResponse_quantumTaskArn</a> - The ARN of the task.
newCancelQuantumTaskResponse :: Int -> CancellationStatus -> Text -> CancelQuantumTaskResponse

-- | <i>See:</i> <a>newSearchDevices</a> smart constructor.
data SearchDevices
SearchDevices' :: Maybe Text -> Maybe Natural -> [SearchDevicesFilter] -> SearchDevices

-- | Create a value of <a>SearchDevices</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:SearchDevices'</a>, <a>searchDevices_nextToken</a> -
--   A token used for pagination of results returned in the response. Use
--   the token returned from the previous request continue results where
--   the previous request ended.
--   
--   <a>$sel:maxResults:SearchDevices'</a>, <a>searchDevices_maxResults</a>
--   - The maximum number of results to return in the response.
--   
--   <a>$sel:filters:SearchDevices'</a>, <a>searchDevices_filters</a> - The
--   filter values to use to search for a device.
newSearchDevices :: SearchDevices

-- | <i>See:</i> <a>newSearchDevicesResponse</a> smart constructor.
data SearchDevicesResponse
SearchDevicesResponse' :: Maybe Text -> Int -> [DeviceSummary] -> SearchDevicesResponse

-- | Create a value of <a>SearchDevicesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:SearchDevices'</a>,
--   <a>searchDevicesResponse_nextToken</a> - A token used for pagination
--   of results, or null if there are no additional results. Use the token
--   value in a subsequent request to continue results where the previous
--   request ended.
--   
--   <a>$sel:httpStatus:SearchDevicesResponse'</a>,
--   <a>searchDevicesResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:devices:SearchDevicesResponse'</a>,
--   <a>searchDevicesResponse_devices</a> - An array of
--   <tt>DeviceSummary</tt> objects for devices that match the specified
--   filter values.
newSearchDevicesResponse :: Int -> SearchDevicesResponse

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> HashMap Text Text -> TagResource

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   Specify the <tt>resourceArn</tt> of the resource to which a tag will
--   be added.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - Specify the
--   tags to add to the resource.
newTagResource :: Text -> TagResource

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - Specify the <tt>resourceArn</tt>
--   for the resource from which to remove the tags.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> -
--   Specify the keys for the tags to remove from the resource.
newUntagResource :: Text -> UntagResource

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | <i>See:</i> <a>newCreateQuantumTask</a> smart constructor.
data CreateQuantumTask
CreateQuantumTask' :: Maybe Text -> Maybe (HashMap Text Text) -> Text -> Text -> Text -> Text -> Text -> Natural -> CreateQuantumTask

-- | Create a value of <a>CreateQuantumTask</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceParameters:CreateQuantumTask'</a>,
--   <a>createQuantumTask_deviceParameters</a> - The parameters for the
--   device to run the task on.
--   
--   <a>$sel:tags:CreateQuantumTask'</a>, <a>createQuantumTask_tags</a> -
--   Tags to be added to the quantum task you're creating.
--   
--   <a>$sel:action:CreateQuantumTask'</a>, <a>createQuantumTask_action</a>
--   - The action associated with the task.
--   
--   <a>$sel:clientToken:CreateQuantumTask'</a>,
--   <a>createQuantumTask_clientToken</a> - The client token associated
--   with the request.
--   
--   <a>$sel:deviceArn:CreateQuantumTask'</a>,
--   <a>createQuantumTask_deviceArn</a> - The ARN of the device to run the
--   task on.
--   
--   <a>$sel:outputS3Bucket:CreateQuantumTask'</a>,
--   <a>createQuantumTask_outputS3Bucket</a> - The S3 bucket to store task
--   result files in.
--   
--   <a>$sel:outputS3KeyPrefix:CreateQuantumTask'</a>,
--   <a>createQuantumTask_outputS3KeyPrefix</a> - The key prefix for the
--   location in the S3 bucket to store task results in.
--   
--   <a>$sel:shots:CreateQuantumTask'</a>, <a>createQuantumTask_shots</a> -
--   The number of shots to use for the task.
newCreateQuantumTask :: Text -> Text -> Text -> Text -> Text -> Natural -> CreateQuantumTask

-- | <i>See:</i> <a>newCreateQuantumTaskResponse</a> smart constructor.
data CreateQuantumTaskResponse
CreateQuantumTaskResponse' :: Int -> Text -> CreateQuantumTaskResponse

-- | Create a value of <a>CreateQuantumTaskResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateQuantumTaskResponse'</a>,
--   <a>createQuantumTaskResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:quantumTaskArn:CreateQuantumTaskResponse'</a>,
--   <a>createQuantumTaskResponse_quantumTaskArn</a> - The ARN of the task
--   created by the request.
newCreateQuantumTaskResponse :: Int -> Text -> CreateQuantumTaskResponse
newtype CancellationStatus
CancellationStatus' :: Text -> CancellationStatus
[fromCancellationStatus] :: CancellationStatus -> Text
pattern CancellationStatus_CANCELLED :: CancellationStatus
pattern CancellationStatus_CANCELLING :: CancellationStatus
newtype DeviceStatus
DeviceStatus' :: Text -> DeviceStatus
[fromDeviceStatus] :: DeviceStatus -> Text
pattern DeviceStatus_OFFLINE :: DeviceStatus
pattern DeviceStatus_ONLINE :: DeviceStatus
pattern DeviceStatus_RETIRED :: DeviceStatus
newtype DeviceType
DeviceType' :: Text -> DeviceType
[fromDeviceType] :: DeviceType -> Text
pattern DeviceType_QPU :: DeviceType
pattern DeviceType_SIMULATOR :: DeviceType
newtype QuantumTaskStatus
QuantumTaskStatus' :: Text -> QuantumTaskStatus
[fromQuantumTaskStatus] :: QuantumTaskStatus -> Text
pattern QuantumTaskStatus_CANCELLED :: QuantumTaskStatus
pattern QuantumTaskStatus_CANCELLING :: QuantumTaskStatus
pattern QuantumTaskStatus_COMPLETED :: QuantumTaskStatus
pattern QuantumTaskStatus_CREATED :: QuantumTaskStatus
pattern QuantumTaskStatus_FAILED :: QuantumTaskStatus
pattern QuantumTaskStatus_QUEUED :: QuantumTaskStatus
pattern QuantumTaskStatus_RUNNING :: QuantumTaskStatus
newtype SearchQuantumTasksFilterOperator
SearchQuantumTasksFilterOperator' :: Text -> SearchQuantumTasksFilterOperator
[fromSearchQuantumTasksFilterOperator] :: SearchQuantumTasksFilterOperator -> Text
pattern SearchQuantumTasksFilterOperator_BETWEEN :: SearchQuantumTasksFilterOperator
pattern SearchQuantumTasksFilterOperator_EQUAL :: SearchQuantumTasksFilterOperator
pattern SearchQuantumTasksFilterOperator_GT :: SearchQuantumTasksFilterOperator
pattern SearchQuantumTasksFilterOperator_GTE :: SearchQuantumTasksFilterOperator
pattern SearchQuantumTasksFilterOperator_LT :: SearchQuantumTasksFilterOperator
pattern SearchQuantumTasksFilterOperator_LTE :: SearchQuantumTasksFilterOperator

-- | Includes information about the device.
--   
--   <i>See:</i> <a>newDeviceSummary</a> smart constructor.
data DeviceSummary
DeviceSummary' :: Text -> Text -> DeviceStatus -> DeviceType -> Text -> DeviceSummary

-- | Create a value of <a>DeviceSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceArn:DeviceSummary'</a>, <a>deviceSummary_deviceArn</a> -
--   The ARN of the device.
--   
--   <a>$sel:deviceName:DeviceSummary'</a>, <a>deviceSummary_deviceName</a>
--   - The name of the device.
--   
--   <a>$sel:deviceStatus:DeviceSummary'</a>,
--   <a>deviceSummary_deviceStatus</a> - The status of the device.
--   
--   <a>$sel:deviceType:DeviceSummary'</a>, <a>deviceSummary_deviceType</a>
--   - The type of the device.
--   
--   <a>$sel:providerName:DeviceSummary'</a>,
--   <a>deviceSummary_providerName</a> - The provider of the device.
newDeviceSummary :: Text -> Text -> DeviceStatus -> DeviceType -> Text -> DeviceSummary

-- | Includes information about a quantum task.
--   
--   <i>See:</i> <a>newQuantumTaskSummary</a> smart constructor.
data QuantumTaskSummary
QuantumTaskSummary' :: Maybe POSIX -> Maybe (HashMap Text Text) -> POSIX -> Text -> Text -> Text -> Text -> Integer -> QuantumTaskStatus -> QuantumTaskSummary

-- | Create a value of <a>QuantumTaskSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:endedAt:QuantumTaskSummary'</a>,
--   <a>quantumTaskSummary_endedAt</a> - The time at which the task
--   finished.
--   
--   <a>$sel:tags:QuantumTaskSummary'</a>, <a>quantumTaskSummary_tags</a> -
--   Displays the key, value pairs of tags associated with this quantum
--   task.
--   
--   <a>$sel:createdAt:QuantumTaskSummary'</a>,
--   <a>quantumTaskSummary_createdAt</a> - The time at which the task was
--   created.
--   
--   <a>$sel:deviceArn:QuantumTaskSummary'</a>,
--   <a>quantumTaskSummary_deviceArn</a> - The ARN of the device the task
--   ran on.
--   
--   <a>$sel:outputS3Bucket:QuantumTaskSummary'</a>,
--   <a>quantumTaskSummary_outputS3Bucket</a> - The S3 bucket where the
--   task result file is stored..
--   
--   <a>$sel:outputS3Directory:QuantumTaskSummary'</a>,
--   <a>quantumTaskSummary_outputS3Directory</a> - The folder in the S3
--   bucket where the task result file is stored.
--   
--   <a>$sel:quantumTaskArn:QuantumTaskSummary'</a>,
--   <a>quantumTaskSummary_quantumTaskArn</a> - The ARN of the task.
--   
--   <a>$sel:shots:QuantumTaskSummary'</a>, <a>quantumTaskSummary_shots</a>
--   - The shots used for the task.
--   
--   <a>$sel:status:QuantumTaskSummary'</a>,
--   <a>quantumTaskSummary_status</a> - The status of the task.
newQuantumTaskSummary :: UTCTime -> Text -> Text -> Text -> Text -> Integer -> QuantumTaskStatus -> QuantumTaskSummary

-- | The filter to use for searching devices.
--   
--   <i>See:</i> <a>newSearchDevicesFilter</a> smart constructor.
data SearchDevicesFilter
SearchDevicesFilter' :: Text -> NonEmpty Text -> SearchDevicesFilter

-- | Create a value of <a>SearchDevicesFilter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:SearchDevicesFilter'</a>, <a>searchDevicesFilter_name</a>
--   - The name to use to filter results.
--   
--   <a>$sel:values:SearchDevicesFilter'</a>,
--   <a>searchDevicesFilter_values</a> - The values to use to filter
--   results.
newSearchDevicesFilter :: Text -> NonEmpty Text -> SearchDevicesFilter

-- | A filter to use to search for tasks.
--   
--   <i>See:</i> <a>newSearchQuantumTasksFilter</a> smart constructor.
data SearchQuantumTasksFilter
SearchQuantumTasksFilter' :: Text -> SearchQuantumTasksFilterOperator -> NonEmpty Text -> SearchQuantumTasksFilter

-- | Create a value of <a>SearchQuantumTasksFilter</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:SearchQuantumTasksFilter'</a>,
--   <a>searchQuantumTasksFilter_name</a> - The name of the device used for
--   the task.
--   
--   <a>$sel:operator:SearchQuantumTasksFilter'</a>,
--   <a>searchQuantumTasksFilter_operator</a> - An operator to use in the
--   filter.
--   
--   <a>$sel:values:SearchQuantumTasksFilter'</a>,
--   <a>searchQuantumTasksFilter_values</a> - The values to use for the
--   filter.
newSearchQuantumTasksFilter :: Text -> SearchQuantumTasksFilterOperator -> NonEmpty Text -> SearchQuantumTasksFilter
