-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-ioteventsZSamazonka-iotevents
@version 2.0


module Amazonka.IoTEvents.Types.AcknowledgeFlow

-- | Specifies whether to get notified for alarm state changes.
--   
--   <i>See:</i> <a>newAcknowledgeFlow</a> smart constructor.
data AcknowledgeFlow
AcknowledgeFlow' :: Bool -> AcknowledgeFlow

-- | The value must be <tt>TRUE</tt> or <tt>FALSE</tt>. If <tt>TRUE</tt>,
--   you receive a notification when the alarm state changes. You must
--   choose to acknowledge the notification before the alarm state can
--   return to <tt>NORMAL</tt>. If <tt>FALSE</tt>, you won't receive
--   notifications. The alarm automatically changes to the <tt>NORMAL</tt>
--   state when the input property value returns to the specified range.
[$sel:enabled:AcknowledgeFlow'] :: AcknowledgeFlow -> Bool

-- | Create a value of <a>AcknowledgeFlow</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabled:AcknowledgeFlow'</a>, <a>acknowledgeFlow_enabled</a> -
--   The value must be <tt>TRUE</tt> or <tt>FALSE</tt>. If <tt>TRUE</tt>,
--   you receive a notification when the alarm state changes. You must
--   choose to acknowledge the notification before the alarm state can
--   return to <tt>NORMAL</tt>. If <tt>FALSE</tt>, you won't receive
--   notifications. The alarm automatically changes to the <tt>NORMAL</tt>
--   state when the input property value returns to the specified range.
newAcknowledgeFlow :: Bool -> AcknowledgeFlow

-- | The value must be <tt>TRUE</tt> or <tt>FALSE</tt>. If <tt>TRUE</tt>,
--   you receive a notification when the alarm state changes. You must
--   choose to acknowledge the notification before the alarm state can
--   return to <tt>NORMAL</tt>. If <tt>FALSE</tt>, you won't receive
--   notifications. The alarm automatically changes to the <tt>NORMAL</tt>
--   state when the input property value returns to the specified range.
acknowledgeFlow_enabled :: Lens' AcknowledgeFlow Bool
instance GHC.Generics.Generic Amazonka.IoTEvents.Types.AcknowledgeFlow.AcknowledgeFlow
instance GHC.Show.Show Amazonka.IoTEvents.Types.AcknowledgeFlow.AcknowledgeFlow
instance GHC.Read.Read Amazonka.IoTEvents.Types.AcknowledgeFlow.AcknowledgeFlow
instance GHC.Classes.Eq Amazonka.IoTEvents.Types.AcknowledgeFlow.AcknowledgeFlow
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEvents.Types.AcknowledgeFlow.AcknowledgeFlow
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.Types.AcknowledgeFlow.AcknowledgeFlow
instance Control.DeepSeq.NFData Amazonka.IoTEvents.Types.AcknowledgeFlow.AcknowledgeFlow
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEvents.Types.AcknowledgeFlow.AcknowledgeFlow


module Amazonka.IoTEvents.Types.AlarmModelSummary

-- | Contains a summary of an alarm model.
--   
--   <i>See:</i> <a>newAlarmModelSummary</a> smart constructor.
data AlarmModelSummary
AlarmModelSummary' :: Maybe POSIX -> Maybe Text -> Maybe Text -> AlarmModelSummary

-- | The time the alarm model was created, in the Unix epoch format.
[$sel:creationTime:AlarmModelSummary'] :: AlarmModelSummary -> Maybe POSIX

-- | The name of the alarm model.
[$sel:alarmModelName:AlarmModelSummary'] :: AlarmModelSummary -> Maybe Text

-- | The description of the alarm model.
[$sel:alarmModelDescription:AlarmModelSummary'] :: AlarmModelSummary -> Maybe Text

-- | Create a value of <a>AlarmModelSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:AlarmModelSummary'</a>,
--   <a>alarmModelSummary_creationTime</a> - The time the alarm model was
--   created, in the Unix epoch format.
--   
--   <a>$sel:alarmModelName:AlarmModelSummary'</a>,
--   <a>alarmModelSummary_alarmModelName</a> - The name of the alarm model.
--   
--   <a>$sel:alarmModelDescription:AlarmModelSummary'</a>,
--   <a>alarmModelSummary_alarmModelDescription</a> - The description of
--   the alarm model.
newAlarmModelSummary :: AlarmModelSummary

-- | The time the alarm model was created, in the Unix epoch format.
alarmModelSummary_creationTime :: Lens' AlarmModelSummary (Maybe UTCTime)

-- | The name of the alarm model.
alarmModelSummary_alarmModelName :: Lens' AlarmModelSummary (Maybe Text)

-- | The description of the alarm model.
alarmModelSummary_alarmModelDescription :: Lens' AlarmModelSummary (Maybe Text)
instance GHC.Generics.Generic Amazonka.IoTEvents.Types.AlarmModelSummary.AlarmModelSummary
instance GHC.Show.Show Amazonka.IoTEvents.Types.AlarmModelSummary.AlarmModelSummary
instance GHC.Read.Read Amazonka.IoTEvents.Types.AlarmModelSummary.AlarmModelSummary
instance GHC.Classes.Eq Amazonka.IoTEvents.Types.AlarmModelSummary.AlarmModelSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEvents.Types.AlarmModelSummary.AlarmModelSummary
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.Types.AlarmModelSummary.AlarmModelSummary
instance Control.DeepSeq.NFData Amazonka.IoTEvents.Types.AlarmModelSummary.AlarmModelSummary


module Amazonka.IoTEvents.Types.AlarmModelVersionStatus
newtype AlarmModelVersionStatus
AlarmModelVersionStatus' :: Text -> AlarmModelVersionStatus
[fromAlarmModelVersionStatus] :: AlarmModelVersionStatus -> Text
pattern AlarmModelVersionStatus_ACTIVATING :: AlarmModelVersionStatus
pattern AlarmModelVersionStatus_ACTIVE :: AlarmModelVersionStatus
pattern AlarmModelVersionStatus_FAILED :: AlarmModelVersionStatus
pattern AlarmModelVersionStatus_INACTIVE :: AlarmModelVersionStatus
instance Amazonka.Data.XML.ToXML Amazonka.IoTEvents.Types.AlarmModelVersionStatus.AlarmModelVersionStatus
instance Amazonka.Data.XML.FromXML Amazonka.IoTEvents.Types.AlarmModelVersionStatus.AlarmModelVersionStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.IoTEvents.Types.AlarmModelVersionStatus.AlarmModelVersionStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEvents.Types.AlarmModelVersionStatus.AlarmModelVersionStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.IoTEvents.Types.AlarmModelVersionStatus.AlarmModelVersionStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEvents.Types.AlarmModelVersionStatus.AlarmModelVersionStatus
instance Amazonka.Data.Query.ToQuery Amazonka.IoTEvents.Types.AlarmModelVersionStatus.AlarmModelVersionStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.IoTEvents.Types.AlarmModelVersionStatus.AlarmModelVersionStatus
instance Amazonka.Data.Log.ToLog Amazonka.IoTEvents.Types.AlarmModelVersionStatus.AlarmModelVersionStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.IoTEvents.Types.AlarmModelVersionStatus.AlarmModelVersionStatus
instance Amazonka.Data.Text.ToText Amazonka.IoTEvents.Types.AlarmModelVersionStatus.AlarmModelVersionStatus
instance Amazonka.Data.Text.FromText Amazonka.IoTEvents.Types.AlarmModelVersionStatus.AlarmModelVersionStatus
instance Control.DeepSeq.NFData Amazonka.IoTEvents.Types.AlarmModelVersionStatus.AlarmModelVersionStatus
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.Types.AlarmModelVersionStatus.AlarmModelVersionStatus
instance GHC.Generics.Generic Amazonka.IoTEvents.Types.AlarmModelVersionStatus.AlarmModelVersionStatus
instance GHC.Classes.Ord Amazonka.IoTEvents.Types.AlarmModelVersionStatus.AlarmModelVersionStatus
instance GHC.Classes.Eq Amazonka.IoTEvents.Types.AlarmModelVersionStatus.AlarmModelVersionStatus
instance GHC.Read.Read Amazonka.IoTEvents.Types.AlarmModelVersionStatus.AlarmModelVersionStatus
instance GHC.Show.Show Amazonka.IoTEvents.Types.AlarmModelVersionStatus.AlarmModelVersionStatus


module Amazonka.IoTEvents.Types.AlarmModelVersionSummary

-- | Contains a summary of an alarm model version.
--   
--   <i>See:</i> <a>newAlarmModelVersionSummary</a> smart constructor.
data AlarmModelVersionSummary
AlarmModelVersionSummary' :: Maybe POSIX -> Maybe AlarmModelVersionStatus -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> AlarmModelVersionSummary

-- | The time the alarm model was created, in the Unix epoch format.
[$sel:creationTime:AlarmModelVersionSummary'] :: AlarmModelVersionSummary -> Maybe POSIX

-- | The status of the alarm model. The status can be one of the following
--   values:
--   
--   <ul>
--   <li><tt>ACTIVE</tt> - The alarm model is active and it's ready to
--   evaluate data.</li>
--   <li><tt>ACTIVATING</tt> - AWS IoT Events is activating your alarm
--   model. Activating an alarm model can take up to a few minutes.</li>
--   <li><tt>INACTIVE</tt> - The alarm model is inactive, so it isn't ready
--   to evaluate data. Check your alarm model information and update the
--   alarm model.</li>
--   <li><tt>FAILED</tt> - You couldn't create or update the alarm model.
--   Check your alarm model information and try again.</li>
--   </ul>
[$sel:status:AlarmModelVersionSummary'] :: AlarmModelVersionSummary -> Maybe AlarmModelVersionStatus

-- | The name of the alarm model.
[$sel:alarmModelName:AlarmModelVersionSummary'] :: AlarmModelVersionSummary -> Maybe Text

-- | Contains information about the status of the alarm model version.
[$sel:statusMessage:AlarmModelVersionSummary'] :: AlarmModelVersionSummary -> Maybe Text

-- | The time the alarm model was last updated, in the Unix epoch format.
[$sel:lastUpdateTime:AlarmModelVersionSummary'] :: AlarmModelVersionSummary -> Maybe POSIX

-- | The version of the alarm model.
[$sel:alarmModelVersion:AlarmModelVersionSummary'] :: AlarmModelVersionSummary -> Maybe Text

-- | The ARN of the alarm model. For more information, see <a>Amazon
--   Resource Names (ARNs)</a> in the <i>AWS General Reference</i>.
[$sel:alarmModelArn:AlarmModelVersionSummary'] :: AlarmModelVersionSummary -> Maybe Text

-- | The ARN of the IAM role that allows the alarm to perform actions and
--   access AWS resources. For more information, see <a>Amazon Resource
--   Names (ARNs)</a> in the <i>AWS General Reference</i>.
[$sel:roleArn:AlarmModelVersionSummary'] :: AlarmModelVersionSummary -> Maybe Text

-- | Create a value of <a>AlarmModelVersionSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:AlarmModelVersionSummary'</a>,
--   <a>alarmModelVersionSummary_creationTime</a> - The time the alarm
--   model was created, in the Unix epoch format.
--   
--   <a>$sel:status:AlarmModelVersionSummary'</a>,
--   <a>alarmModelVersionSummary_status</a> - The status of the alarm
--   model. The status can be one of the following values:
--   
--   <ul>
--   <li><tt>ACTIVE</tt> - The alarm model is active and it's ready to
--   evaluate data.</li>
--   <li><tt>ACTIVATING</tt> - AWS IoT Events is activating your alarm
--   model. Activating an alarm model can take up to a few minutes.</li>
--   <li><tt>INACTIVE</tt> - The alarm model is inactive, so it isn't ready
--   to evaluate data. Check your alarm model information and update the
--   alarm model.</li>
--   <li><tt>FAILED</tt> - You couldn't create or update the alarm model.
--   Check your alarm model information and try again.</li>
--   </ul>
--   
--   <a>$sel:alarmModelName:AlarmModelVersionSummary'</a>,
--   <a>alarmModelVersionSummary_alarmModelName</a> - The name of the alarm
--   model.
--   
--   <a>$sel:statusMessage:AlarmModelVersionSummary'</a>,
--   <a>alarmModelVersionSummary_statusMessage</a> - Contains information
--   about the status of the alarm model version.
--   
--   <a>$sel:lastUpdateTime:AlarmModelVersionSummary'</a>,
--   <a>alarmModelVersionSummary_lastUpdateTime</a> - The time the alarm
--   model was last updated, in the Unix epoch format.
--   
--   <a>$sel:alarmModelVersion:AlarmModelVersionSummary'</a>,
--   <a>alarmModelVersionSummary_alarmModelVersion</a> - The version of the
--   alarm model.
--   
--   <a>$sel:alarmModelArn:AlarmModelVersionSummary'</a>,
--   <a>alarmModelVersionSummary_alarmModelArn</a> - The ARN of the alarm
--   model. For more information, see <a>Amazon Resource Names (ARNs)</a>
--   in the <i>AWS General Reference</i>.
--   
--   <a>$sel:roleArn:AlarmModelVersionSummary'</a>,
--   <a>alarmModelVersionSummary_roleArn</a> - The ARN of the IAM role that
--   allows the alarm to perform actions and access AWS resources. For more
--   information, see <a>Amazon Resource Names (ARNs)</a> in the <i>AWS
--   General Reference</i>.
newAlarmModelVersionSummary :: AlarmModelVersionSummary

-- | The time the alarm model was created, in the Unix epoch format.
alarmModelVersionSummary_creationTime :: Lens' AlarmModelVersionSummary (Maybe UTCTime)

-- | The status of the alarm model. The status can be one of the following
--   values:
--   
--   <ul>
--   <li><tt>ACTIVE</tt> - The alarm model is active and it's ready to
--   evaluate data.</li>
--   <li><tt>ACTIVATING</tt> - AWS IoT Events is activating your alarm
--   model. Activating an alarm model can take up to a few minutes.</li>
--   <li><tt>INACTIVE</tt> - The alarm model is inactive, so it isn't ready
--   to evaluate data. Check your alarm model information and update the
--   alarm model.</li>
--   <li><tt>FAILED</tt> - You couldn't create or update the alarm model.
--   Check your alarm model information and try again.</li>
--   </ul>
alarmModelVersionSummary_status :: Lens' AlarmModelVersionSummary (Maybe AlarmModelVersionStatus)

-- | The name of the alarm model.
alarmModelVersionSummary_alarmModelName :: Lens' AlarmModelVersionSummary (Maybe Text)

-- | Contains information about the status of the alarm model version.
alarmModelVersionSummary_statusMessage :: Lens' AlarmModelVersionSummary (Maybe Text)

-- | The time the alarm model was last updated, in the Unix epoch format.
alarmModelVersionSummary_lastUpdateTime :: Lens' AlarmModelVersionSummary (Maybe UTCTime)

-- | The version of the alarm model.
alarmModelVersionSummary_alarmModelVersion :: Lens' AlarmModelVersionSummary (Maybe Text)

-- | The ARN of the alarm model. For more information, see <a>Amazon
--   Resource Names (ARNs)</a> in the <i>AWS General Reference</i>.
alarmModelVersionSummary_alarmModelArn :: Lens' AlarmModelVersionSummary (Maybe Text)

-- | The ARN of the IAM role that allows the alarm to perform actions and
--   access AWS resources. For more information, see <a>Amazon Resource
--   Names (ARNs)</a> in the <i>AWS General Reference</i>.
alarmModelVersionSummary_roleArn :: Lens' AlarmModelVersionSummary (Maybe Text)
instance GHC.Generics.Generic Amazonka.IoTEvents.Types.AlarmModelVersionSummary.AlarmModelVersionSummary
instance GHC.Show.Show Amazonka.IoTEvents.Types.AlarmModelVersionSummary.AlarmModelVersionSummary
instance GHC.Read.Read Amazonka.IoTEvents.Types.AlarmModelVersionSummary.AlarmModelVersionSummary
instance GHC.Classes.Eq Amazonka.IoTEvents.Types.AlarmModelVersionSummary.AlarmModelVersionSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEvents.Types.AlarmModelVersionSummary.AlarmModelVersionSummary
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.Types.AlarmModelVersionSummary.AlarmModelVersionSummary
instance Control.DeepSeq.NFData Amazonka.IoTEvents.Types.AlarmModelVersionSummary.AlarmModelVersionSummary


module Amazonka.IoTEvents.Types.AnalysisResultLevel
newtype AnalysisResultLevel
AnalysisResultLevel' :: Text -> AnalysisResultLevel
[fromAnalysisResultLevel] :: AnalysisResultLevel -> Text
pattern AnalysisResultLevel_ERROR :: AnalysisResultLevel
pattern AnalysisResultLevel_INFO :: AnalysisResultLevel
pattern AnalysisResultLevel_WARNING :: AnalysisResultLevel
instance Amazonka.Data.XML.ToXML Amazonka.IoTEvents.Types.AnalysisResultLevel.AnalysisResultLevel
instance Amazonka.Data.XML.FromXML Amazonka.IoTEvents.Types.AnalysisResultLevel.AnalysisResultLevel
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.IoTEvents.Types.AnalysisResultLevel.AnalysisResultLevel
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEvents.Types.AnalysisResultLevel.AnalysisResultLevel
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.IoTEvents.Types.AnalysisResultLevel.AnalysisResultLevel
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEvents.Types.AnalysisResultLevel.AnalysisResultLevel
instance Amazonka.Data.Query.ToQuery Amazonka.IoTEvents.Types.AnalysisResultLevel.AnalysisResultLevel
instance Amazonka.Data.Headers.ToHeader Amazonka.IoTEvents.Types.AnalysisResultLevel.AnalysisResultLevel
instance Amazonka.Data.Log.ToLog Amazonka.IoTEvents.Types.AnalysisResultLevel.AnalysisResultLevel
instance Amazonka.Data.ByteString.ToByteString Amazonka.IoTEvents.Types.AnalysisResultLevel.AnalysisResultLevel
instance Amazonka.Data.Text.ToText Amazonka.IoTEvents.Types.AnalysisResultLevel.AnalysisResultLevel
instance Amazonka.Data.Text.FromText Amazonka.IoTEvents.Types.AnalysisResultLevel.AnalysisResultLevel
instance Control.DeepSeq.NFData Amazonka.IoTEvents.Types.AnalysisResultLevel.AnalysisResultLevel
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.Types.AnalysisResultLevel.AnalysisResultLevel
instance GHC.Generics.Generic Amazonka.IoTEvents.Types.AnalysisResultLevel.AnalysisResultLevel
instance GHC.Classes.Ord Amazonka.IoTEvents.Types.AnalysisResultLevel.AnalysisResultLevel
instance GHC.Classes.Eq Amazonka.IoTEvents.Types.AnalysisResultLevel.AnalysisResultLevel
instance GHC.Read.Read Amazonka.IoTEvents.Types.AnalysisResultLevel.AnalysisResultLevel
instance GHC.Show.Show Amazonka.IoTEvents.Types.AnalysisResultLevel.AnalysisResultLevel


module Amazonka.IoTEvents.Types.AnalysisResultLocation

-- | Contains information that you can use to locate the field in your
--   detector model that the analysis result references.
--   
--   <i>See:</i> <a>newAnalysisResultLocation</a> smart constructor.
data AnalysisResultLocation
AnalysisResultLocation' :: Maybe Text -> AnalysisResultLocation

-- | A <a>JsonPath</a> expression that identifies the error field in your
--   detector model.
[$sel:path:AnalysisResultLocation'] :: AnalysisResultLocation -> Maybe Text

-- | Create a value of <a>AnalysisResultLocation</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:path:AnalysisResultLocation'</a>,
--   <a>analysisResultLocation_path</a> - A <a>JsonPath</a> expression that
--   identifies the error field in your detector model.
newAnalysisResultLocation :: AnalysisResultLocation

-- | A <a>JsonPath</a> expression that identifies the error field in your
--   detector model.
analysisResultLocation_path :: Lens' AnalysisResultLocation (Maybe Text)
instance GHC.Generics.Generic Amazonka.IoTEvents.Types.AnalysisResultLocation.AnalysisResultLocation
instance GHC.Show.Show Amazonka.IoTEvents.Types.AnalysisResultLocation.AnalysisResultLocation
instance GHC.Read.Read Amazonka.IoTEvents.Types.AnalysisResultLocation.AnalysisResultLocation
instance GHC.Classes.Eq Amazonka.IoTEvents.Types.AnalysisResultLocation.AnalysisResultLocation
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEvents.Types.AnalysisResultLocation.AnalysisResultLocation
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.Types.AnalysisResultLocation.AnalysisResultLocation
instance Control.DeepSeq.NFData Amazonka.IoTEvents.Types.AnalysisResultLocation.AnalysisResultLocation


module Amazonka.IoTEvents.Types.AnalysisResult

-- | Contains the result of the analysis.
--   
--   <i>See:</i> <a>newAnalysisResult</a> smart constructor.
data AnalysisResult
AnalysisResult' :: Maybe Text -> Maybe Text -> Maybe AnalysisResultLevel -> Maybe [AnalysisResultLocation] -> AnalysisResult

-- | The type of the analysis result. Analyses fall into the following
--   types based on the validators used to generate the analysis result:
--   
--   <ul>
--   <li><tt>supported-actions</tt> - You must specify AWS IoT Events
--   supported actions that work with other AWS services in a supported AWS
--   Region.</li>
--   <li><tt>service-limits</tt> - Resources or API operations can't exceed
--   service quotas (also known as limits). Update your detector model or
--   request a quota increase.</li>
--   <li><tt>structure</tt> - The detector model must follow a structure
--   that AWS IoT Events supports.</li>
--   <li><tt>expression-syntax</tt> - Your expression must follow the
--   required syntax.</li>
--   <li><tt>data-type</tt> - Data types referenced in the detector model
--   must be compatible.</li>
--   <li><tt>referenced-data</tt> - You must define the data referenced in
--   your detector model before you can use the data.</li>
--   <li><tt>referenced-resource</tt> - Resources that the detector model
--   uses must be available.</li>
--   </ul>
--   
--   For more information, see <a>Running detector model analyses</a> in
--   the <i>AWS IoT Events Developer Guide</i>.
[$sel:type':AnalysisResult'] :: AnalysisResult -> Maybe Text

-- | Contains additional information about the analysis result.
[$sel:message:AnalysisResult'] :: AnalysisResult -> Maybe Text

-- | The severity level of the analysis result. Based on the severity
--   level, analysis results fall into three general categories:
--   
--   <ul>
--   <li><tt>INFO</tt> - An information result tells you about a
--   significant field in your detector model. This type of result usually
--   doesn't require immediate action.</li>
--   <li><tt>WARNING</tt> - A warning result draws special attention to
--   fields that might cause issues for your detector model. We recommend
--   that you review warnings and take necessary actions before you use
--   your detector model in production environments. Otherwise, the
--   detector model might not work as expected.</li>
--   <li><tt>ERROR</tt> - An error result notifies you about a problem
--   found in your detector model. You must fix all errors before you can
--   publish your detector model.</li>
--   </ul>
[$sel:level:AnalysisResult'] :: AnalysisResult -> Maybe AnalysisResultLevel

-- | Contains one or more locations that you can use to locate the fields
--   in your detector model that the analysis result references.
[$sel:locations:AnalysisResult'] :: AnalysisResult -> Maybe [AnalysisResultLocation]

-- | Create a value of <a>AnalysisResult</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:type':AnalysisResult'</a>, <a>analysisResult_type</a> - The
--   type of the analysis result. Analyses fall into the following types
--   based on the validators used to generate the analysis result:
--   
--   <ul>
--   <li><tt>supported-actions</tt> - You must specify AWS IoT Events
--   supported actions that work with other AWS services in a supported AWS
--   Region.</li>
--   <li><tt>service-limits</tt> - Resources or API operations can't exceed
--   service quotas (also known as limits). Update your detector model or
--   request a quota increase.</li>
--   <li><tt>structure</tt> - The detector model must follow a structure
--   that AWS IoT Events supports.</li>
--   <li><tt>expression-syntax</tt> - Your expression must follow the
--   required syntax.</li>
--   <li><tt>data-type</tt> - Data types referenced in the detector model
--   must be compatible.</li>
--   <li><tt>referenced-data</tt> - You must define the data referenced in
--   your detector model before you can use the data.</li>
--   <li><tt>referenced-resource</tt> - Resources that the detector model
--   uses must be available.</li>
--   </ul>
--   
--   For more information, see <a>Running detector model analyses</a> in
--   the <i>AWS IoT Events Developer Guide</i>.
--   
--   <a>$sel:message:AnalysisResult'</a>, <a>analysisResult_message</a> -
--   Contains additional information about the analysis result.
--   
--   <a>$sel:level:AnalysisResult'</a>, <a>analysisResult_level</a> - The
--   severity level of the analysis result. Based on the severity level,
--   analysis results fall into three general categories:
--   
--   <ul>
--   <li><tt>INFO</tt> - An information result tells you about a
--   significant field in your detector model. This type of result usually
--   doesn't require immediate action.</li>
--   <li><tt>WARNING</tt> - A warning result draws special attention to
--   fields that might cause issues for your detector model. We recommend
--   that you review warnings and take necessary actions before you use
--   your detector model in production environments. Otherwise, the
--   detector model might not work as expected.</li>
--   <li><tt>ERROR</tt> - An error result notifies you about a problem
--   found in your detector model. You must fix all errors before you can
--   publish your detector model.</li>
--   </ul>
--   
--   <a>$sel:locations:AnalysisResult'</a>, <a>analysisResult_locations</a>
--   - Contains one or more locations that you can use to locate the fields
--   in your detector model that the analysis result references.
newAnalysisResult :: AnalysisResult

-- | The type of the analysis result. Analyses fall into the following
--   types based on the validators used to generate the analysis result:
--   
--   <ul>
--   <li><tt>supported-actions</tt> - You must specify AWS IoT Events
--   supported actions that work with other AWS services in a supported AWS
--   Region.</li>
--   <li><tt>service-limits</tt> - Resources or API operations can't exceed
--   service quotas (also known as limits). Update your detector model or
--   request a quota increase.</li>
--   <li><tt>structure</tt> - The detector model must follow a structure
--   that AWS IoT Events supports.</li>
--   <li><tt>expression-syntax</tt> - Your expression must follow the
--   required syntax.</li>
--   <li><tt>data-type</tt> - Data types referenced in the detector model
--   must be compatible.</li>
--   <li><tt>referenced-data</tt> - You must define the data referenced in
--   your detector model before you can use the data.</li>
--   <li><tt>referenced-resource</tt> - Resources that the detector model
--   uses must be available.</li>
--   </ul>
--   
--   For more information, see <a>Running detector model analyses</a> in
--   the <i>AWS IoT Events Developer Guide</i>.
analysisResult_type :: Lens' AnalysisResult (Maybe Text)

-- | Contains additional information about the analysis result.
analysisResult_message :: Lens' AnalysisResult (Maybe Text)

-- | The severity level of the analysis result. Based on the severity
--   level, analysis results fall into three general categories:
--   
--   <ul>
--   <li><tt>INFO</tt> - An information result tells you about a
--   significant field in your detector model. This type of result usually
--   doesn't require immediate action.</li>
--   <li><tt>WARNING</tt> - A warning result draws special attention to
--   fields that might cause issues for your detector model. We recommend
--   that you review warnings and take necessary actions before you use
--   your detector model in production environments. Otherwise, the
--   detector model might not work as expected.</li>
--   <li><tt>ERROR</tt> - An error result notifies you about a problem
--   found in your detector model. You must fix all errors before you can
--   publish your detector model.</li>
--   </ul>
analysisResult_level :: Lens' AnalysisResult (Maybe AnalysisResultLevel)

-- | Contains one or more locations that you can use to locate the fields
--   in your detector model that the analysis result references.
analysisResult_locations :: Lens' AnalysisResult (Maybe [AnalysisResultLocation])
instance GHC.Generics.Generic Amazonka.IoTEvents.Types.AnalysisResult.AnalysisResult
instance GHC.Show.Show Amazonka.IoTEvents.Types.AnalysisResult.AnalysisResult
instance GHC.Read.Read Amazonka.IoTEvents.Types.AnalysisResult.AnalysisResult
instance GHC.Classes.Eq Amazonka.IoTEvents.Types.AnalysisResult.AnalysisResult
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEvents.Types.AnalysisResult.AnalysisResult
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.Types.AnalysisResult.AnalysisResult
instance Control.DeepSeq.NFData Amazonka.IoTEvents.Types.AnalysisResult.AnalysisResult


module Amazonka.IoTEvents.Types.AnalysisStatus
newtype AnalysisStatus
AnalysisStatus' :: Text -> AnalysisStatus
[fromAnalysisStatus] :: AnalysisStatus -> Text
pattern AnalysisStatus_COMPLETE :: AnalysisStatus
pattern AnalysisStatus_FAILED :: AnalysisStatus
pattern AnalysisStatus_RUNNING :: AnalysisStatus
instance Amazonka.Data.XML.ToXML Amazonka.IoTEvents.Types.AnalysisStatus.AnalysisStatus
instance Amazonka.Data.XML.FromXML Amazonka.IoTEvents.Types.AnalysisStatus.AnalysisStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.IoTEvents.Types.AnalysisStatus.AnalysisStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEvents.Types.AnalysisStatus.AnalysisStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.IoTEvents.Types.AnalysisStatus.AnalysisStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEvents.Types.AnalysisStatus.AnalysisStatus
instance Amazonka.Data.Query.ToQuery Amazonka.IoTEvents.Types.AnalysisStatus.AnalysisStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.IoTEvents.Types.AnalysisStatus.AnalysisStatus
instance Amazonka.Data.Log.ToLog Amazonka.IoTEvents.Types.AnalysisStatus.AnalysisStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.IoTEvents.Types.AnalysisStatus.AnalysisStatus
instance Amazonka.Data.Text.ToText Amazonka.IoTEvents.Types.AnalysisStatus.AnalysisStatus
instance Amazonka.Data.Text.FromText Amazonka.IoTEvents.Types.AnalysisStatus.AnalysisStatus
instance Control.DeepSeq.NFData Amazonka.IoTEvents.Types.AnalysisStatus.AnalysisStatus
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.Types.AnalysisStatus.AnalysisStatus
instance GHC.Generics.Generic Amazonka.IoTEvents.Types.AnalysisStatus.AnalysisStatus
instance GHC.Classes.Ord Amazonka.IoTEvents.Types.AnalysisStatus.AnalysisStatus
instance GHC.Classes.Eq Amazonka.IoTEvents.Types.AnalysisStatus.AnalysisStatus
instance GHC.Read.Read Amazonka.IoTEvents.Types.AnalysisStatus.AnalysisStatus
instance GHC.Show.Show Amazonka.IoTEvents.Types.AnalysisStatus.AnalysisStatus


module Amazonka.IoTEvents.Types.AssetPropertyTimestamp

-- | A structure that contains timestamp information. For more information,
--   see <a>TimeInNanos</a> in the <i>AWS IoT SiteWise API Reference</i>.
--   
--   You must use expressions for all parameters in
--   <tt>AssetPropertyTimestamp</tt>. The expressions accept literals,
--   operators, functions, references, and substitution templates.
--   
--   <b>Examples</b>
--   
--   <ul>
--   <li>For literal values, the expressions must contain single quotes.
--   For example, the value for the <tt>timeInSeconds</tt> parameter can be
--   <tt>'1586400675'</tt>.</li>
--   <li>For references, you must specify either variables or input values.
--   For example, the value for the <tt>offsetInNanos</tt> parameter can be
--   <tt>$variable.time</tt>.</li>
--   <li>For a substitution template, you must use <tt>${}</tt>, and the
--   template must be in single quotes. A substitution template can also
--   contain a combination of literals, operators, functions, references,
--   and substitution templates.In the following example, the value for the
--   <tt>timeInSeconds</tt> parameter uses a substitution
--   template.<pre>'${$input.TemperatureInput.sensorData.timestamp /
--   1000}'</pre></li>
--   </ul>
--   
--   For more information, see <a>Expressions</a> in the <i>AWS IoT Events
--   Developer Guide</i>.
--   
--   <i>See:</i> <a>newAssetPropertyTimestamp</a> smart constructor.
data AssetPropertyTimestamp
AssetPropertyTimestamp' :: Maybe Text -> Text -> AssetPropertyTimestamp

-- | The nanosecond offset converted from <tt>timeInSeconds</tt>. The valid
--   range is between 0-999999999.
[$sel:offsetInNanos:AssetPropertyTimestamp'] :: AssetPropertyTimestamp -> Maybe Text

-- | The timestamp, in seconds, in the Unix epoch format. The valid range
--   is between 1-31556889864403199.
[$sel:timeInSeconds:AssetPropertyTimestamp'] :: AssetPropertyTimestamp -> Text

-- | Create a value of <a>AssetPropertyTimestamp</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:offsetInNanos:AssetPropertyTimestamp'</a>,
--   <a>assetPropertyTimestamp_offsetInNanos</a> - The nanosecond offset
--   converted from <tt>timeInSeconds</tt>. The valid range is between
--   0-999999999.
--   
--   <a>$sel:timeInSeconds:AssetPropertyTimestamp'</a>,
--   <a>assetPropertyTimestamp_timeInSeconds</a> - The timestamp, in
--   seconds, in the Unix epoch format. The valid range is between
--   1-31556889864403199.
newAssetPropertyTimestamp :: Text -> AssetPropertyTimestamp

-- | The nanosecond offset converted from <tt>timeInSeconds</tt>. The valid
--   range is between 0-999999999.
assetPropertyTimestamp_offsetInNanos :: Lens' AssetPropertyTimestamp (Maybe Text)

-- | The timestamp, in seconds, in the Unix epoch format. The valid range
--   is between 1-31556889864403199.
assetPropertyTimestamp_timeInSeconds :: Lens' AssetPropertyTimestamp Text
instance GHC.Generics.Generic Amazonka.IoTEvents.Types.AssetPropertyTimestamp.AssetPropertyTimestamp
instance GHC.Show.Show Amazonka.IoTEvents.Types.AssetPropertyTimestamp.AssetPropertyTimestamp
instance GHC.Read.Read Amazonka.IoTEvents.Types.AssetPropertyTimestamp.AssetPropertyTimestamp
instance GHC.Classes.Eq Amazonka.IoTEvents.Types.AssetPropertyTimestamp.AssetPropertyTimestamp
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEvents.Types.AssetPropertyTimestamp.AssetPropertyTimestamp
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.Types.AssetPropertyTimestamp.AssetPropertyTimestamp
instance Control.DeepSeq.NFData Amazonka.IoTEvents.Types.AssetPropertyTimestamp.AssetPropertyTimestamp
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEvents.Types.AssetPropertyTimestamp.AssetPropertyTimestamp


module Amazonka.IoTEvents.Types.AssetPropertyVariant

-- | A structure that contains an asset property value. For more
--   information, see <a>Variant</a> in the <i>AWS IoT SiteWise API
--   Reference</i>.
--   
--   You must use expressions for all parameters in
--   <tt>AssetPropertyVariant</tt>. The expressions accept literals,
--   operators, functions, references, and substitution templates.
--   
--   <b>Examples</b>
--   
--   <ul>
--   <li>For literal values, the expressions must contain single quotes.
--   For example, the value for the <tt>integerValue</tt> parameter can be
--   <tt>'100'</tt>.</li>
--   <li>For references, you must specify either variables or parameters.
--   For example, the value for the <tt>booleanValue</tt> parameter can be
--   <tt>$variable.offline</tt>.</li>
--   <li>For a substitution template, you must use <tt>${}</tt>, and the
--   template must be in single quotes. A substitution template can also
--   contain a combination of literals, operators, functions, references,
--   and substitution templates.In the following example, the value for the
--   <tt>doubleValue</tt> parameter uses a substitution
--   template.<pre>'${$input.TemperatureInput.sensorData.temperature * 6 /
--   5 + 32}'</pre></li>
--   </ul>
--   
--   For more information, see <a>Expressions</a> in the <i>AWS IoT Events
--   Developer Guide</i>.
--   
--   You must specify one of the following value types, depending on the
--   <tt>dataType</tt> of the specified asset property. For more
--   information, see <a>AssetProperty</a> in the <i>AWS IoT SiteWise API
--   Reference</i>.
--   
--   <i>See:</i> <a>newAssetPropertyVariant</a> smart constructor.
data AssetPropertyVariant
AssetPropertyVariant' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> AssetPropertyVariant

-- | The asset property value is an integer. You must use an expression,
--   and the evaluated result should be an integer.
[$sel:integerValue:AssetPropertyVariant'] :: AssetPropertyVariant -> Maybe Text

-- | The asset property value is a double. You must use an expression, and
--   the evaluated result should be a double.
[$sel:doubleValue:AssetPropertyVariant'] :: AssetPropertyVariant -> Maybe Text

-- | The asset property value is a string. You must use an expression, and
--   the evaluated result should be a string.
[$sel:stringValue:AssetPropertyVariant'] :: AssetPropertyVariant -> Maybe Text

-- | The asset property value is a Boolean value that must be
--   <tt>'TRUE'</tt> or <tt>'FALSE'</tt>. You must use an expression, and
--   the evaluated result should be a Boolean value.
[$sel:booleanValue:AssetPropertyVariant'] :: AssetPropertyVariant -> Maybe Text

-- | Create a value of <a>AssetPropertyVariant</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:integerValue:AssetPropertyVariant'</a>,
--   <a>assetPropertyVariant_integerValue</a> - The asset property value is
--   an integer. You must use an expression, and the evaluated result
--   should be an integer.
--   
--   <a>$sel:doubleValue:AssetPropertyVariant'</a>,
--   <a>assetPropertyVariant_doubleValue</a> - The asset property value is
--   a double. You must use an expression, and the evaluated result should
--   be a double.
--   
--   <a>$sel:stringValue:AssetPropertyVariant'</a>,
--   <a>assetPropertyVariant_stringValue</a> - The asset property value is
--   a string. You must use an expression, and the evaluated result should
--   be a string.
--   
--   <a>$sel:booleanValue:AssetPropertyVariant'</a>,
--   <a>assetPropertyVariant_booleanValue</a> - The asset property value is
--   a Boolean value that must be <tt>'TRUE'</tt> or <tt>'FALSE'</tt>. You
--   must use an expression, and the evaluated result should be a Boolean
--   value.
newAssetPropertyVariant :: AssetPropertyVariant

-- | The asset property value is an integer. You must use an expression,
--   and the evaluated result should be an integer.
assetPropertyVariant_integerValue :: Lens' AssetPropertyVariant (Maybe Text)

-- | The asset property value is a double. You must use an expression, and
--   the evaluated result should be a double.
assetPropertyVariant_doubleValue :: Lens' AssetPropertyVariant (Maybe Text)

-- | The asset property value is a string. You must use an expression, and
--   the evaluated result should be a string.
assetPropertyVariant_stringValue :: Lens' AssetPropertyVariant (Maybe Text)

-- | The asset property value is a Boolean value that must be
--   <tt>'TRUE'</tt> or <tt>'FALSE'</tt>. You must use an expression, and
--   the evaluated result should be a Boolean value.
assetPropertyVariant_booleanValue :: Lens' AssetPropertyVariant (Maybe Text)
instance GHC.Generics.Generic Amazonka.IoTEvents.Types.AssetPropertyVariant.AssetPropertyVariant
instance GHC.Show.Show Amazonka.IoTEvents.Types.AssetPropertyVariant.AssetPropertyVariant
instance GHC.Read.Read Amazonka.IoTEvents.Types.AssetPropertyVariant.AssetPropertyVariant
instance GHC.Classes.Eq Amazonka.IoTEvents.Types.AssetPropertyVariant.AssetPropertyVariant
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEvents.Types.AssetPropertyVariant.AssetPropertyVariant
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.Types.AssetPropertyVariant.AssetPropertyVariant
instance Control.DeepSeq.NFData Amazonka.IoTEvents.Types.AssetPropertyVariant.AssetPropertyVariant
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEvents.Types.AssetPropertyVariant.AssetPropertyVariant


module Amazonka.IoTEvents.Types.AssetPropertyValue

-- | A structure that contains value information. For more information, see
--   <a>AssetPropertyValue</a> in the <i>AWS IoT SiteWise API
--   Reference</i>.
--   
--   You must use expressions for all parameters in
--   <tt>AssetPropertyValue</tt>. The expressions accept literals,
--   operators, functions, references, and substitution templates.
--   
--   <b>Examples</b>
--   
--   <ul>
--   <li>For literal values, the expressions must contain single quotes.
--   For example, the value for the <tt>quality</tt> parameter can be
--   <tt>'GOOD'</tt>.</li>
--   <li>For references, you must specify either variables or input values.
--   For example, the value for the <tt>quality</tt> parameter can be
--   <tt>$input.TemperatureInput.sensorData.quality</tt>.</li>
--   </ul>
--   
--   For more information, see <a>Expressions</a> in the <i>AWS IoT Events
--   Developer Guide</i>.
--   
--   <i>See:</i> <a>newAssetPropertyValue</a> smart constructor.
data AssetPropertyValue
AssetPropertyValue' :: Maybe AssetPropertyVariant -> Maybe Text -> Maybe AssetPropertyTimestamp -> AssetPropertyValue

-- | The value to send to an asset property.
[$sel:value:AssetPropertyValue'] :: AssetPropertyValue -> Maybe AssetPropertyVariant

-- | The quality of the asset property value. The value must be
--   <tt>'GOOD'</tt>, <tt>'BAD'</tt>, or <tt>'UNCERTAIN'</tt>.
[$sel:quality:AssetPropertyValue'] :: AssetPropertyValue -> Maybe Text

-- | The timestamp associated with the asset property value. The default is
--   the current event time.
[$sel:timestamp:AssetPropertyValue'] :: AssetPropertyValue -> Maybe AssetPropertyTimestamp

-- | Create a value of <a>AssetPropertyValue</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:AssetPropertyValue'</a>, <a>assetPropertyValue_value</a>
--   - The value to send to an asset property.
--   
--   <a>$sel:quality:AssetPropertyValue'</a>,
--   <a>assetPropertyValue_quality</a> - The quality of the asset property
--   value. The value must be <tt>'GOOD'</tt>, <tt>'BAD'</tt>, or
--   <tt>'UNCERTAIN'</tt>.
--   
--   <a>$sel:timestamp:AssetPropertyValue'</a>,
--   <a>assetPropertyValue_timestamp</a> - The timestamp associated with
--   the asset property value. The default is the current event time.
newAssetPropertyValue :: AssetPropertyValue

-- | The value to send to an asset property.
assetPropertyValue_value :: Lens' AssetPropertyValue (Maybe AssetPropertyVariant)

-- | The quality of the asset property value. The value must be
--   <tt>'GOOD'</tt>, <tt>'BAD'</tt>, or <tt>'UNCERTAIN'</tt>.
assetPropertyValue_quality :: Lens' AssetPropertyValue (Maybe Text)

-- | The timestamp associated with the asset property value. The default is
--   the current event time.
assetPropertyValue_timestamp :: Lens' AssetPropertyValue (Maybe AssetPropertyTimestamp)
instance GHC.Generics.Generic Amazonka.IoTEvents.Types.AssetPropertyValue.AssetPropertyValue
instance GHC.Show.Show Amazonka.IoTEvents.Types.AssetPropertyValue.AssetPropertyValue
instance GHC.Read.Read Amazonka.IoTEvents.Types.AssetPropertyValue.AssetPropertyValue
instance GHC.Classes.Eq Amazonka.IoTEvents.Types.AssetPropertyValue.AssetPropertyValue
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEvents.Types.AssetPropertyValue.AssetPropertyValue
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.Types.AssetPropertyValue.AssetPropertyValue
instance Control.DeepSeq.NFData Amazonka.IoTEvents.Types.AssetPropertyValue.AssetPropertyValue
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEvents.Types.AssetPropertyValue.AssetPropertyValue


module Amazonka.IoTEvents.Types.Attribute

-- | The attributes from the JSON payload that are made available by the
--   input. Inputs are derived from messages sent to the AWS IoT Events
--   system using <tt>BatchPutMessage</tt>. Each such message contains a
--   JSON payload. Those attributes (and their paired values) specified
--   here are available for use in the <tt>condition</tt> expressions used
--   by detectors.
--   
--   <i>See:</i> <a>newAttribute</a> smart constructor.
data Attribute
Attribute' :: Text -> Attribute

-- | An expression that specifies an attribute-value pair in a JSON
--   structure. Use this to specify an attribute from the JSON payload that
--   is made available by the input. Inputs are derived from messages sent
--   to AWS IoT Events (<tt>BatchPutMessage</tt>). Each such message
--   contains a JSON payload. The attribute (and its paired value)
--   specified here are available for use in the <tt>condition</tt>
--   expressions used by detectors.
--   
--   Syntax: <tt>&lt;field-name&gt;.&lt;field-name&gt;...</tt>
[$sel:jsonPath:Attribute'] :: Attribute -> Text

-- | Create a value of <a>Attribute</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jsonPath:Attribute'</a>, <a>attribute_jsonPath</a> - An
--   expression that specifies an attribute-value pair in a JSON structure.
--   Use this to specify an attribute from the JSON payload that is made
--   available by the input. Inputs are derived from messages sent to AWS
--   IoT Events (<tt>BatchPutMessage</tt>). Each such message contains a
--   JSON payload. The attribute (and its paired value) specified here are
--   available for use in the <tt>condition</tt> expressions used by
--   detectors.
--   
--   Syntax: <tt>&lt;field-name&gt;.&lt;field-name&gt;...</tt>
newAttribute :: Text -> Attribute

-- | An expression that specifies an attribute-value pair in a JSON
--   structure. Use this to specify an attribute from the JSON payload that
--   is made available by the input. Inputs are derived from messages sent
--   to AWS IoT Events (<tt>BatchPutMessage</tt>). Each such message
--   contains a JSON payload. The attribute (and its paired value)
--   specified here are available for use in the <tt>condition</tt>
--   expressions used by detectors.
--   
--   Syntax: <tt>&lt;field-name&gt;.&lt;field-name&gt;...</tt>
attribute_jsonPath :: Lens' Attribute Text
instance GHC.Generics.Generic Amazonka.IoTEvents.Types.Attribute.Attribute
instance GHC.Show.Show Amazonka.IoTEvents.Types.Attribute.Attribute
instance GHC.Read.Read Amazonka.IoTEvents.Types.Attribute.Attribute
instance GHC.Classes.Eq Amazonka.IoTEvents.Types.Attribute.Attribute
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEvents.Types.Attribute.Attribute
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.Types.Attribute.Attribute
instance Control.DeepSeq.NFData Amazonka.IoTEvents.Types.Attribute.Attribute
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEvents.Types.Attribute.Attribute


module Amazonka.IoTEvents.Types.ClearTimerAction

-- | Information needed to clear the timer.
--   
--   <i>See:</i> <a>newClearTimerAction</a> smart constructor.
data ClearTimerAction
ClearTimerAction' :: Text -> ClearTimerAction

-- | The name of the timer to clear.
[$sel:timerName:ClearTimerAction'] :: ClearTimerAction -> Text

-- | Create a value of <a>ClearTimerAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timerName:ClearTimerAction'</a>,
--   <a>clearTimerAction_timerName</a> - The name of the timer to clear.
newClearTimerAction :: Text -> ClearTimerAction

-- | The name of the timer to clear.
clearTimerAction_timerName :: Lens' ClearTimerAction Text
instance GHC.Generics.Generic Amazonka.IoTEvents.Types.ClearTimerAction.ClearTimerAction
instance GHC.Show.Show Amazonka.IoTEvents.Types.ClearTimerAction.ClearTimerAction
instance GHC.Read.Read Amazonka.IoTEvents.Types.ClearTimerAction.ClearTimerAction
instance GHC.Classes.Eq Amazonka.IoTEvents.Types.ClearTimerAction.ClearTimerAction
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEvents.Types.ClearTimerAction.ClearTimerAction
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.Types.ClearTimerAction.ClearTimerAction
instance Control.DeepSeq.NFData Amazonka.IoTEvents.Types.ClearTimerAction.ClearTimerAction
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEvents.Types.ClearTimerAction.ClearTimerAction


module Amazonka.IoTEvents.Types.ComparisonOperator
newtype ComparisonOperator
ComparisonOperator' :: Text -> ComparisonOperator
[fromComparisonOperator] :: ComparisonOperator -> Text
pattern ComparisonOperator_EQUAL :: ComparisonOperator
pattern ComparisonOperator_GREATER :: ComparisonOperator
pattern ComparisonOperator_GREATER_OR_EQUAL :: ComparisonOperator
pattern ComparisonOperator_LESS :: ComparisonOperator
pattern ComparisonOperator_LESS_OR_EQUAL :: ComparisonOperator
pattern ComparisonOperator_NOT_EQUAL :: ComparisonOperator
instance Amazonka.Data.XML.ToXML Amazonka.IoTEvents.Types.ComparisonOperator.ComparisonOperator
instance Amazonka.Data.XML.FromXML Amazonka.IoTEvents.Types.ComparisonOperator.ComparisonOperator
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.IoTEvents.Types.ComparisonOperator.ComparisonOperator
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEvents.Types.ComparisonOperator.ComparisonOperator
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.IoTEvents.Types.ComparisonOperator.ComparisonOperator
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEvents.Types.ComparisonOperator.ComparisonOperator
instance Amazonka.Data.Query.ToQuery Amazonka.IoTEvents.Types.ComparisonOperator.ComparisonOperator
instance Amazonka.Data.Headers.ToHeader Amazonka.IoTEvents.Types.ComparisonOperator.ComparisonOperator
instance Amazonka.Data.Log.ToLog Amazonka.IoTEvents.Types.ComparisonOperator.ComparisonOperator
instance Amazonka.Data.ByteString.ToByteString Amazonka.IoTEvents.Types.ComparisonOperator.ComparisonOperator
instance Amazonka.Data.Text.ToText Amazonka.IoTEvents.Types.ComparisonOperator.ComparisonOperator
instance Amazonka.Data.Text.FromText Amazonka.IoTEvents.Types.ComparisonOperator.ComparisonOperator
instance Control.DeepSeq.NFData Amazonka.IoTEvents.Types.ComparisonOperator.ComparisonOperator
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.Types.ComparisonOperator.ComparisonOperator
instance GHC.Generics.Generic Amazonka.IoTEvents.Types.ComparisonOperator.ComparisonOperator
instance GHC.Classes.Ord Amazonka.IoTEvents.Types.ComparisonOperator.ComparisonOperator
instance GHC.Classes.Eq Amazonka.IoTEvents.Types.ComparisonOperator.ComparisonOperator
instance GHC.Read.Read Amazonka.IoTEvents.Types.ComparisonOperator.ComparisonOperator
instance GHC.Show.Show Amazonka.IoTEvents.Types.ComparisonOperator.ComparisonOperator


module Amazonka.IoTEvents.Types.DetectorDebugOption

-- | The detector model and the specific detectors (instances) for which
--   the logging level is given.
--   
--   <i>See:</i> <a>newDetectorDebugOption</a> smart constructor.
data DetectorDebugOption
DetectorDebugOption' :: Maybe Text -> Text -> DetectorDebugOption

-- | The value of the input attribute key used to create the detector (the
--   instance of the detector model).
[$sel:keyValue:DetectorDebugOption'] :: DetectorDebugOption -> Maybe Text

-- | The name of the detector model.
[$sel:detectorModelName:DetectorDebugOption'] :: DetectorDebugOption -> Text

-- | Create a value of <a>DetectorDebugOption</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyValue:DetectorDebugOption'</a>,
--   <a>detectorDebugOption_keyValue</a> - The value of the input attribute
--   key used to create the detector (the instance of the detector model).
--   
--   <a>$sel:detectorModelName:DetectorDebugOption'</a>,
--   <a>detectorDebugOption_detectorModelName</a> - The name of the
--   detector model.
newDetectorDebugOption :: Text -> DetectorDebugOption

-- | The value of the input attribute key used to create the detector (the
--   instance of the detector model).
detectorDebugOption_keyValue :: Lens' DetectorDebugOption (Maybe Text)

-- | The name of the detector model.
detectorDebugOption_detectorModelName :: Lens' DetectorDebugOption Text
instance GHC.Generics.Generic Amazonka.IoTEvents.Types.DetectorDebugOption.DetectorDebugOption
instance GHC.Show.Show Amazonka.IoTEvents.Types.DetectorDebugOption.DetectorDebugOption
instance GHC.Read.Read Amazonka.IoTEvents.Types.DetectorDebugOption.DetectorDebugOption
instance GHC.Classes.Eq Amazonka.IoTEvents.Types.DetectorDebugOption.DetectorDebugOption
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEvents.Types.DetectorDebugOption.DetectorDebugOption
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.Types.DetectorDebugOption.DetectorDebugOption
instance Control.DeepSeq.NFData Amazonka.IoTEvents.Types.DetectorDebugOption.DetectorDebugOption
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEvents.Types.DetectorDebugOption.DetectorDebugOption


module Amazonka.IoTEvents.Types.DetectorModelSummary

-- | Information about the detector model.
--   
--   <i>See:</i> <a>newDetectorModelSummary</a> smart constructor.
data DetectorModelSummary
DetectorModelSummary' :: Maybe POSIX -> Maybe Text -> Maybe Text -> DetectorModelSummary

-- | The time the detector model was created.
[$sel:creationTime:DetectorModelSummary'] :: DetectorModelSummary -> Maybe POSIX

-- | The name of the detector model.
[$sel:detectorModelName:DetectorModelSummary'] :: DetectorModelSummary -> Maybe Text

-- | A brief description of the detector model.
[$sel:detectorModelDescription:DetectorModelSummary'] :: DetectorModelSummary -> Maybe Text

-- | Create a value of <a>DetectorModelSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:DetectorModelSummary'</a>,
--   <a>detectorModelSummary_creationTime</a> - The time the detector model
--   was created.
--   
--   <a>$sel:detectorModelName:DetectorModelSummary'</a>,
--   <a>detectorModelSummary_detectorModelName</a> - The name of the
--   detector model.
--   
--   <a>$sel:detectorModelDescription:DetectorModelSummary'</a>,
--   <a>detectorModelSummary_detectorModelDescription</a> - A brief
--   description of the detector model.
newDetectorModelSummary :: DetectorModelSummary

-- | The time the detector model was created.
detectorModelSummary_creationTime :: Lens' DetectorModelSummary (Maybe UTCTime)

-- | The name of the detector model.
detectorModelSummary_detectorModelName :: Lens' DetectorModelSummary (Maybe Text)

-- | A brief description of the detector model.
detectorModelSummary_detectorModelDescription :: Lens' DetectorModelSummary (Maybe Text)
instance GHC.Generics.Generic Amazonka.IoTEvents.Types.DetectorModelSummary.DetectorModelSummary
instance GHC.Show.Show Amazonka.IoTEvents.Types.DetectorModelSummary.DetectorModelSummary
instance GHC.Read.Read Amazonka.IoTEvents.Types.DetectorModelSummary.DetectorModelSummary
instance GHC.Classes.Eq Amazonka.IoTEvents.Types.DetectorModelSummary.DetectorModelSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEvents.Types.DetectorModelSummary.DetectorModelSummary
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.Types.DetectorModelSummary.DetectorModelSummary
instance Control.DeepSeq.NFData Amazonka.IoTEvents.Types.DetectorModelSummary.DetectorModelSummary


module Amazonka.IoTEvents.Types.DetectorModelVersionStatus
newtype DetectorModelVersionStatus
DetectorModelVersionStatus' :: Text -> DetectorModelVersionStatus
[fromDetectorModelVersionStatus] :: DetectorModelVersionStatus -> Text
pattern DetectorModelVersionStatus_ACTIVATING :: DetectorModelVersionStatus
pattern DetectorModelVersionStatus_ACTIVE :: DetectorModelVersionStatus
pattern DetectorModelVersionStatus_DEPRECATED :: DetectorModelVersionStatus
pattern DetectorModelVersionStatus_DRAFT :: DetectorModelVersionStatus
pattern DetectorModelVersionStatus_FAILED :: DetectorModelVersionStatus
pattern DetectorModelVersionStatus_INACTIVE :: DetectorModelVersionStatus
pattern DetectorModelVersionStatus_PAUSED :: DetectorModelVersionStatus
instance Amazonka.Data.XML.ToXML Amazonka.IoTEvents.Types.DetectorModelVersionStatus.DetectorModelVersionStatus
instance Amazonka.Data.XML.FromXML Amazonka.IoTEvents.Types.DetectorModelVersionStatus.DetectorModelVersionStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.IoTEvents.Types.DetectorModelVersionStatus.DetectorModelVersionStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEvents.Types.DetectorModelVersionStatus.DetectorModelVersionStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.IoTEvents.Types.DetectorModelVersionStatus.DetectorModelVersionStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEvents.Types.DetectorModelVersionStatus.DetectorModelVersionStatus
instance Amazonka.Data.Query.ToQuery Amazonka.IoTEvents.Types.DetectorModelVersionStatus.DetectorModelVersionStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.IoTEvents.Types.DetectorModelVersionStatus.DetectorModelVersionStatus
instance Amazonka.Data.Log.ToLog Amazonka.IoTEvents.Types.DetectorModelVersionStatus.DetectorModelVersionStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.IoTEvents.Types.DetectorModelVersionStatus.DetectorModelVersionStatus
instance Amazonka.Data.Text.ToText Amazonka.IoTEvents.Types.DetectorModelVersionStatus.DetectorModelVersionStatus
instance Amazonka.Data.Text.FromText Amazonka.IoTEvents.Types.DetectorModelVersionStatus.DetectorModelVersionStatus
instance Control.DeepSeq.NFData Amazonka.IoTEvents.Types.DetectorModelVersionStatus.DetectorModelVersionStatus
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.Types.DetectorModelVersionStatus.DetectorModelVersionStatus
instance GHC.Generics.Generic Amazonka.IoTEvents.Types.DetectorModelVersionStatus.DetectorModelVersionStatus
instance GHC.Classes.Ord Amazonka.IoTEvents.Types.DetectorModelVersionStatus.DetectorModelVersionStatus
instance GHC.Classes.Eq Amazonka.IoTEvents.Types.DetectorModelVersionStatus.DetectorModelVersionStatus
instance GHC.Read.Read Amazonka.IoTEvents.Types.DetectorModelVersionStatus.DetectorModelVersionStatus
instance GHC.Show.Show Amazonka.IoTEvents.Types.DetectorModelVersionStatus.DetectorModelVersionStatus


module Amazonka.IoTEvents.Types.EmailContent

-- | Contains the subject and message of an email.
--   
--   <i>See:</i> <a>newEmailContent</a> smart constructor.
data EmailContent
EmailContent' :: Maybe Text -> Maybe Text -> EmailContent

-- | The subject of the email.
[$sel:subject:EmailContent'] :: EmailContent -> Maybe Text

-- | The message that you want to send. The message can be up to 200
--   characters.
[$sel:additionalMessage:EmailContent'] :: EmailContent -> Maybe Text

-- | Create a value of <a>EmailContent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subject:EmailContent'</a>, <a>emailContent_subject</a> - The
--   subject of the email.
--   
--   <a>$sel:additionalMessage:EmailContent'</a>,
--   <a>emailContent_additionalMessage</a> - The message that you want to
--   send. The message can be up to 200 characters.
newEmailContent :: EmailContent

-- | The subject of the email.
emailContent_subject :: Lens' EmailContent (Maybe Text)

-- | The message that you want to send. The message can be up to 200
--   characters.
emailContent_additionalMessage :: Lens' EmailContent (Maybe Text)
instance GHC.Generics.Generic Amazonka.IoTEvents.Types.EmailContent.EmailContent
instance GHC.Show.Show Amazonka.IoTEvents.Types.EmailContent.EmailContent
instance GHC.Read.Read Amazonka.IoTEvents.Types.EmailContent.EmailContent
instance GHC.Classes.Eq Amazonka.IoTEvents.Types.EmailContent.EmailContent
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEvents.Types.EmailContent.EmailContent
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.Types.EmailContent.EmailContent
instance Control.DeepSeq.NFData Amazonka.IoTEvents.Types.EmailContent.EmailContent
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEvents.Types.EmailContent.EmailContent


module Amazonka.IoTEvents.Types.EvaluationMethod
newtype EvaluationMethod
EvaluationMethod' :: Text -> EvaluationMethod
[fromEvaluationMethod] :: EvaluationMethod -> Text
pattern EvaluationMethod_BATCH :: EvaluationMethod
pattern EvaluationMethod_SERIAL :: EvaluationMethod
instance Amazonka.Data.XML.ToXML Amazonka.IoTEvents.Types.EvaluationMethod.EvaluationMethod
instance Amazonka.Data.XML.FromXML Amazonka.IoTEvents.Types.EvaluationMethod.EvaluationMethod
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.IoTEvents.Types.EvaluationMethod.EvaluationMethod
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEvents.Types.EvaluationMethod.EvaluationMethod
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.IoTEvents.Types.EvaluationMethod.EvaluationMethod
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEvents.Types.EvaluationMethod.EvaluationMethod
instance Amazonka.Data.Query.ToQuery Amazonka.IoTEvents.Types.EvaluationMethod.EvaluationMethod
instance Amazonka.Data.Headers.ToHeader Amazonka.IoTEvents.Types.EvaluationMethod.EvaluationMethod
instance Amazonka.Data.Log.ToLog Amazonka.IoTEvents.Types.EvaluationMethod.EvaluationMethod
instance Amazonka.Data.ByteString.ToByteString Amazonka.IoTEvents.Types.EvaluationMethod.EvaluationMethod
instance Amazonka.Data.Text.ToText Amazonka.IoTEvents.Types.EvaluationMethod.EvaluationMethod
instance Amazonka.Data.Text.FromText Amazonka.IoTEvents.Types.EvaluationMethod.EvaluationMethod
instance Control.DeepSeq.NFData Amazonka.IoTEvents.Types.EvaluationMethod.EvaluationMethod
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.Types.EvaluationMethod.EvaluationMethod
instance GHC.Generics.Generic Amazonka.IoTEvents.Types.EvaluationMethod.EvaluationMethod
instance GHC.Classes.Ord Amazonka.IoTEvents.Types.EvaluationMethod.EvaluationMethod
instance GHC.Classes.Eq Amazonka.IoTEvents.Types.EvaluationMethod.EvaluationMethod
instance GHC.Read.Read Amazonka.IoTEvents.Types.EvaluationMethod.EvaluationMethod
instance GHC.Show.Show Amazonka.IoTEvents.Types.EvaluationMethod.EvaluationMethod


module Amazonka.IoTEvents.Types.DetectorModelVersionSummary

-- | Information about the detector model version.
--   
--   <i>See:</i> <a>newDetectorModelVersionSummary</a> smart constructor.
data DetectorModelVersionSummary
DetectorModelVersionSummary' :: Maybe POSIX -> Maybe DetectorModelVersionStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe EvaluationMethod -> Maybe Text -> DetectorModelVersionSummary

-- | The time the detector model version was created.
[$sel:creationTime:DetectorModelVersionSummary'] :: DetectorModelVersionSummary -> Maybe POSIX

-- | The status of the detector model version.
[$sel:status:DetectorModelVersionSummary'] :: DetectorModelVersionSummary -> Maybe DetectorModelVersionStatus

-- | The name of the detector model.
[$sel:detectorModelName:DetectorModelVersionSummary'] :: DetectorModelVersionSummary -> Maybe Text

-- | The ARN of the detector model version.
[$sel:detectorModelArn:DetectorModelVersionSummary'] :: DetectorModelVersionSummary -> Maybe Text

-- | The ID of the detector model version.
[$sel:detectorModelVersion:DetectorModelVersionSummary'] :: DetectorModelVersionSummary -> Maybe Text

-- | The last time the detector model version was updated.
[$sel:lastUpdateTime:DetectorModelVersionSummary'] :: DetectorModelVersionSummary -> Maybe POSIX

-- | Information about the order in which events are evaluated and how
--   actions are executed.
[$sel:evaluationMethod:DetectorModelVersionSummary'] :: DetectorModelVersionSummary -> Maybe EvaluationMethod

-- | The ARN of the role that grants the detector model permission to
--   perform its tasks.
[$sel:roleArn:DetectorModelVersionSummary'] :: DetectorModelVersionSummary -> Maybe Text

-- | Create a value of <a>DetectorModelVersionSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:DetectorModelVersionSummary'</a>,
--   <a>detectorModelVersionSummary_creationTime</a> - The time the
--   detector model version was created.
--   
--   <a>$sel:status:DetectorModelVersionSummary'</a>,
--   <a>detectorModelVersionSummary_status</a> - The status of the detector
--   model version.
--   
--   <a>$sel:detectorModelName:DetectorModelVersionSummary'</a>,
--   <a>detectorModelVersionSummary_detectorModelName</a> - The name of the
--   detector model.
--   
--   <a>$sel:detectorModelArn:DetectorModelVersionSummary'</a>,
--   <a>detectorModelVersionSummary_detectorModelArn</a> - The ARN of the
--   detector model version.
--   
--   <a>$sel:detectorModelVersion:DetectorModelVersionSummary'</a>,
--   <a>detectorModelVersionSummary_detectorModelVersion</a> - The ID of
--   the detector model version.
--   
--   <a>$sel:lastUpdateTime:DetectorModelVersionSummary'</a>,
--   <a>detectorModelVersionSummary_lastUpdateTime</a> - The last time the
--   detector model version was updated.
--   
--   <a>$sel:evaluationMethod:DetectorModelVersionSummary'</a>,
--   <a>detectorModelVersionSummary_evaluationMethod</a> - Information
--   about the order in which events are evaluated and how actions are
--   executed.
--   
--   <a>$sel:roleArn:DetectorModelVersionSummary'</a>,
--   <a>detectorModelVersionSummary_roleArn</a> - The ARN of the role that
--   grants the detector model permission to perform its tasks.
newDetectorModelVersionSummary :: DetectorModelVersionSummary

-- | The time the detector model version was created.
detectorModelVersionSummary_creationTime :: Lens' DetectorModelVersionSummary (Maybe UTCTime)

-- | The status of the detector model version.
detectorModelVersionSummary_status :: Lens' DetectorModelVersionSummary (Maybe DetectorModelVersionStatus)

-- | The name of the detector model.
detectorModelVersionSummary_detectorModelName :: Lens' DetectorModelVersionSummary (Maybe Text)

-- | The ARN of the detector model version.
detectorModelVersionSummary_detectorModelArn :: Lens' DetectorModelVersionSummary (Maybe Text)

-- | The ID of the detector model version.
detectorModelVersionSummary_detectorModelVersion :: Lens' DetectorModelVersionSummary (Maybe Text)

-- | The last time the detector model version was updated.
detectorModelVersionSummary_lastUpdateTime :: Lens' DetectorModelVersionSummary (Maybe UTCTime)

-- | Information about the order in which events are evaluated and how
--   actions are executed.
detectorModelVersionSummary_evaluationMethod :: Lens' DetectorModelVersionSummary (Maybe EvaluationMethod)

-- | The ARN of the role that grants the detector model permission to
--   perform its tasks.
detectorModelVersionSummary_roleArn :: Lens' DetectorModelVersionSummary (Maybe Text)
instance GHC.Generics.Generic Amazonka.IoTEvents.Types.DetectorModelVersionSummary.DetectorModelVersionSummary
instance GHC.Show.Show Amazonka.IoTEvents.Types.DetectorModelVersionSummary.DetectorModelVersionSummary
instance GHC.Read.Read Amazonka.IoTEvents.Types.DetectorModelVersionSummary.DetectorModelVersionSummary
instance GHC.Classes.Eq Amazonka.IoTEvents.Types.DetectorModelVersionSummary.DetectorModelVersionSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEvents.Types.DetectorModelVersionSummary.DetectorModelVersionSummary
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.Types.DetectorModelVersionSummary.DetectorModelVersionSummary
instance Control.DeepSeq.NFData Amazonka.IoTEvents.Types.DetectorModelVersionSummary.DetectorModelVersionSummary


module Amazonka.IoTEvents.Types.DetectorModelConfiguration

-- | Information about how the detector model is configured.
--   
--   <i>See:</i> <a>newDetectorModelConfiguration</a> smart constructor.
data DetectorModelConfiguration
DetectorModelConfiguration' :: Maybe POSIX -> Maybe DetectorModelVersionStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe EvaluationMethod -> Maybe Text -> DetectorModelConfiguration

-- | The time the detector model was created.
[$sel:creationTime:DetectorModelConfiguration'] :: DetectorModelConfiguration -> Maybe POSIX

-- | The status of the detector model.
[$sel:status:DetectorModelConfiguration'] :: DetectorModelConfiguration -> Maybe DetectorModelVersionStatus

-- | The name of the detector model.
[$sel:detectorModelName:DetectorModelConfiguration'] :: DetectorModelConfiguration -> Maybe Text

-- | The ARN of the detector model.
[$sel:detectorModelArn:DetectorModelConfiguration'] :: DetectorModelConfiguration -> Maybe Text

-- | A brief description of the detector model.
[$sel:detectorModelDescription:DetectorModelConfiguration'] :: DetectorModelConfiguration -> Maybe Text

-- | The value used to identify a detector instance. When a device or
--   system sends input, a new detector instance with a unique key value is
--   created. AWS IoT Events can continue to route input to its
--   corresponding detector instance based on this identifying information.
--   
--   This parameter uses a JSON-path expression to select the
--   attribute-value pair in the message payload that is used for
--   identification. To route the message to the correct detector instance,
--   the device must send a message payload that contains the same
--   attribute-value.
[$sel:key:DetectorModelConfiguration'] :: DetectorModelConfiguration -> Maybe Text

-- | The version of the detector model.
[$sel:detectorModelVersion:DetectorModelConfiguration'] :: DetectorModelConfiguration -> Maybe Text

-- | The time the detector model was last updated.
[$sel:lastUpdateTime:DetectorModelConfiguration'] :: DetectorModelConfiguration -> Maybe POSIX

-- | Information about the order in which events are evaluated and how
--   actions are executed.
[$sel:evaluationMethod:DetectorModelConfiguration'] :: DetectorModelConfiguration -> Maybe EvaluationMethod

-- | The ARN of the role that grants permission to AWS IoT Events to
--   perform its operations.
[$sel:roleArn:DetectorModelConfiguration'] :: DetectorModelConfiguration -> Maybe Text

-- | Create a value of <a>DetectorModelConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:DetectorModelConfiguration'</a>,
--   <a>detectorModelConfiguration_creationTime</a> - The time the detector
--   model was created.
--   
--   <a>$sel:status:DetectorModelConfiguration'</a>,
--   <a>detectorModelConfiguration_status</a> - The status of the detector
--   model.
--   
--   <a>$sel:detectorModelName:DetectorModelConfiguration'</a>,
--   <a>detectorModelConfiguration_detectorModelName</a> - The name of the
--   detector model.
--   
--   <a>$sel:detectorModelArn:DetectorModelConfiguration'</a>,
--   <a>detectorModelConfiguration_detectorModelArn</a> - The ARN of the
--   detector model.
--   
--   <a>$sel:detectorModelDescription:DetectorModelConfiguration'</a>,
--   <a>detectorModelConfiguration_detectorModelDescription</a> - A brief
--   description of the detector model.
--   
--   <a>$sel:key:DetectorModelConfiguration'</a>,
--   <a>detectorModelConfiguration_key</a> - The value used to identify a
--   detector instance. When a device or system sends input, a new detector
--   instance with a unique key value is created. AWS IoT Events can
--   continue to route input to its corresponding detector instance based
--   on this identifying information.
--   
--   This parameter uses a JSON-path expression to select the
--   attribute-value pair in the message payload that is used for
--   identification. To route the message to the correct detector instance,
--   the device must send a message payload that contains the same
--   attribute-value.
--   
--   <a>$sel:detectorModelVersion:DetectorModelConfiguration'</a>,
--   <a>detectorModelConfiguration_detectorModelVersion</a> - The version
--   of the detector model.
--   
--   <a>$sel:lastUpdateTime:DetectorModelConfiguration'</a>,
--   <a>detectorModelConfiguration_lastUpdateTime</a> - The time the
--   detector model was last updated.
--   
--   <a>$sel:evaluationMethod:DetectorModelConfiguration'</a>,
--   <a>detectorModelConfiguration_evaluationMethod</a> - Information about
--   the order in which events are evaluated and how actions are executed.
--   
--   <a>$sel:roleArn:DetectorModelConfiguration'</a>,
--   <a>detectorModelConfiguration_roleArn</a> - The ARN of the role that
--   grants permission to AWS IoT Events to perform its operations.
newDetectorModelConfiguration :: DetectorModelConfiguration

-- | The time the detector model was created.
detectorModelConfiguration_creationTime :: Lens' DetectorModelConfiguration (Maybe UTCTime)

-- | The status of the detector model.
detectorModelConfiguration_status :: Lens' DetectorModelConfiguration (Maybe DetectorModelVersionStatus)

-- | The name of the detector model.
detectorModelConfiguration_detectorModelName :: Lens' DetectorModelConfiguration (Maybe Text)

-- | The ARN of the detector model.
detectorModelConfiguration_detectorModelArn :: Lens' DetectorModelConfiguration (Maybe Text)

-- | A brief description of the detector model.
detectorModelConfiguration_detectorModelDescription :: Lens' DetectorModelConfiguration (Maybe Text)

-- | The value used to identify a detector instance. When a device or
--   system sends input, a new detector instance with a unique key value is
--   created. AWS IoT Events can continue to route input to its
--   corresponding detector instance based on this identifying information.
--   
--   This parameter uses a JSON-path expression to select the
--   attribute-value pair in the message payload that is used for
--   identification. To route the message to the correct detector instance,
--   the device must send a message payload that contains the same
--   attribute-value.
detectorModelConfiguration_key :: Lens' DetectorModelConfiguration (Maybe Text)

-- | The version of the detector model.
detectorModelConfiguration_detectorModelVersion :: Lens' DetectorModelConfiguration (Maybe Text)

-- | The time the detector model was last updated.
detectorModelConfiguration_lastUpdateTime :: Lens' DetectorModelConfiguration (Maybe UTCTime)

-- | Information about the order in which events are evaluated and how
--   actions are executed.
detectorModelConfiguration_evaluationMethod :: Lens' DetectorModelConfiguration (Maybe EvaluationMethod)

-- | The ARN of the role that grants permission to AWS IoT Events to
--   perform its operations.
detectorModelConfiguration_roleArn :: Lens' DetectorModelConfiguration (Maybe Text)
instance GHC.Generics.Generic Amazonka.IoTEvents.Types.DetectorModelConfiguration.DetectorModelConfiguration
instance GHC.Show.Show Amazonka.IoTEvents.Types.DetectorModelConfiguration.DetectorModelConfiguration
instance GHC.Read.Read Amazonka.IoTEvents.Types.DetectorModelConfiguration.DetectorModelConfiguration
instance GHC.Classes.Eq Amazonka.IoTEvents.Types.DetectorModelConfiguration.DetectorModelConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEvents.Types.DetectorModelConfiguration.DetectorModelConfiguration
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.Types.DetectorModelConfiguration.DetectorModelConfiguration
instance Control.DeepSeq.NFData Amazonka.IoTEvents.Types.DetectorModelConfiguration.DetectorModelConfiguration


module Amazonka.IoTEvents.Types.InitializationConfiguration

-- | Specifies the default alarm state. The configuration applies to all
--   alarms that were created based on this alarm model.
--   
--   <i>See:</i> <a>newInitializationConfiguration</a> smart constructor.
data InitializationConfiguration
InitializationConfiguration' :: Bool -> InitializationConfiguration

-- | The value must be <tt>TRUE</tt> or <tt>FALSE</tt>. If <tt>FALSE</tt>,
--   all alarm instances created based on the alarm model are activated.
--   The default value is <tt>TRUE</tt>.
[$sel:disabledOnInitialization:InitializationConfiguration'] :: InitializationConfiguration -> Bool

-- | Create a value of <a>InitializationConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:disabledOnInitialization:InitializationConfiguration'</a>,
--   <a>initializationConfiguration_disabledOnInitialization</a> - The
--   value must be <tt>TRUE</tt> or <tt>FALSE</tt>. If <tt>FALSE</tt>, all
--   alarm instances created based on the alarm model are activated. The
--   default value is <tt>TRUE</tt>.
newInitializationConfiguration :: Bool -> InitializationConfiguration

-- | The value must be <tt>TRUE</tt> or <tt>FALSE</tt>. If <tt>FALSE</tt>,
--   all alarm instances created based on the alarm model are activated.
--   The default value is <tt>TRUE</tt>.
initializationConfiguration_disabledOnInitialization :: Lens' InitializationConfiguration Bool
instance GHC.Generics.Generic Amazonka.IoTEvents.Types.InitializationConfiguration.InitializationConfiguration
instance GHC.Show.Show Amazonka.IoTEvents.Types.InitializationConfiguration.InitializationConfiguration
instance GHC.Read.Read Amazonka.IoTEvents.Types.InitializationConfiguration.InitializationConfiguration
instance GHC.Classes.Eq Amazonka.IoTEvents.Types.InitializationConfiguration.InitializationConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEvents.Types.InitializationConfiguration.InitializationConfiguration
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.Types.InitializationConfiguration.InitializationConfiguration
instance Control.DeepSeq.NFData Amazonka.IoTEvents.Types.InitializationConfiguration.InitializationConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEvents.Types.InitializationConfiguration.InitializationConfiguration


module Amazonka.IoTEvents.Types.AlarmCapabilities

-- | Contains the configuration information of alarm state changes.
--   
--   <i>See:</i> <a>newAlarmCapabilities</a> smart constructor.
data AlarmCapabilities
AlarmCapabilities' :: Maybe AcknowledgeFlow -> Maybe InitializationConfiguration -> AlarmCapabilities

-- | Specifies whether to get notified for alarm state changes.
[$sel:acknowledgeFlow:AlarmCapabilities'] :: AlarmCapabilities -> Maybe AcknowledgeFlow

-- | Specifies the default alarm state. The configuration applies to all
--   alarms that were created based on this alarm model.
[$sel:initializationConfiguration:AlarmCapabilities'] :: AlarmCapabilities -> Maybe InitializationConfiguration

-- | Create a value of <a>AlarmCapabilities</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:acknowledgeFlow:AlarmCapabilities'</a>,
--   <a>alarmCapabilities_acknowledgeFlow</a> - Specifies whether to get
--   notified for alarm state changes.
--   
--   <a>$sel:initializationConfiguration:AlarmCapabilities'</a>,
--   <a>alarmCapabilities_initializationConfiguration</a> - Specifies the
--   default alarm state. The configuration applies to all alarms that were
--   created based on this alarm model.
newAlarmCapabilities :: AlarmCapabilities

-- | Specifies whether to get notified for alarm state changes.
alarmCapabilities_acknowledgeFlow :: Lens' AlarmCapabilities (Maybe AcknowledgeFlow)

-- | Specifies the default alarm state. The configuration applies to all
--   alarms that were created based on this alarm model.
alarmCapabilities_initializationConfiguration :: Lens' AlarmCapabilities (Maybe InitializationConfiguration)
instance GHC.Generics.Generic Amazonka.IoTEvents.Types.AlarmCapabilities.AlarmCapabilities
instance GHC.Show.Show Amazonka.IoTEvents.Types.AlarmCapabilities.AlarmCapabilities
instance GHC.Read.Read Amazonka.IoTEvents.Types.AlarmCapabilities.AlarmCapabilities
instance GHC.Classes.Eq Amazonka.IoTEvents.Types.AlarmCapabilities.AlarmCapabilities
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEvents.Types.AlarmCapabilities.AlarmCapabilities
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.Types.AlarmCapabilities.AlarmCapabilities
instance Control.DeepSeq.NFData Amazonka.IoTEvents.Types.AlarmCapabilities.AlarmCapabilities
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEvents.Types.AlarmCapabilities.AlarmCapabilities


module Amazonka.IoTEvents.Types.InputDefinition

-- | The definition of the input.
--   
--   <i>See:</i> <a>newInputDefinition</a> smart constructor.
data InputDefinition
InputDefinition' :: NonEmpty Attribute -> InputDefinition

-- | The attributes from the JSON payload that are made available by the
--   input. Inputs are derived from messages sent to the AWS IoT Events
--   system using <tt>BatchPutMessage</tt>. Each such message contains a
--   JSON payload, and those attributes (and their paired values) specified
--   here are available for use in the <tt>condition</tt> expressions used
--   by detectors that monitor this input.
[$sel:attributes:InputDefinition'] :: InputDefinition -> NonEmpty Attribute

-- | Create a value of <a>InputDefinition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributes:InputDefinition'</a>,
--   <a>inputDefinition_attributes</a> - The attributes from the JSON
--   payload that are made available by the input. Inputs are derived from
--   messages sent to the AWS IoT Events system using
--   <tt>BatchPutMessage</tt>. Each such message contains a JSON payload,
--   and those attributes (and their paired values) specified here are
--   available for use in the <tt>condition</tt> expressions used by
--   detectors that monitor this input.
newInputDefinition :: NonEmpty Attribute -> InputDefinition

-- | The attributes from the JSON payload that are made available by the
--   input. Inputs are derived from messages sent to the AWS IoT Events
--   system using <tt>BatchPutMessage</tt>. Each such message contains a
--   JSON payload, and those attributes (and their paired values) specified
--   here are available for use in the <tt>condition</tt> expressions used
--   by detectors that monitor this input.
inputDefinition_attributes :: Lens' InputDefinition (NonEmpty Attribute)
instance GHC.Generics.Generic Amazonka.IoTEvents.Types.InputDefinition.InputDefinition
instance GHC.Show.Show Amazonka.IoTEvents.Types.InputDefinition.InputDefinition
instance GHC.Read.Read Amazonka.IoTEvents.Types.InputDefinition.InputDefinition
instance GHC.Classes.Eq Amazonka.IoTEvents.Types.InputDefinition.InputDefinition
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEvents.Types.InputDefinition.InputDefinition
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.Types.InputDefinition.InputDefinition
instance Control.DeepSeq.NFData Amazonka.IoTEvents.Types.InputDefinition.InputDefinition
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEvents.Types.InputDefinition.InputDefinition


module Amazonka.IoTEvents.Types.InputStatus
newtype InputStatus
InputStatus' :: Text -> InputStatus
[fromInputStatus] :: InputStatus -> Text
pattern InputStatus_ACTIVE :: InputStatus
pattern InputStatus_CREATING :: InputStatus
pattern InputStatus_DELETING :: InputStatus
pattern InputStatus_UPDATING :: InputStatus
instance Amazonka.Data.XML.ToXML Amazonka.IoTEvents.Types.InputStatus.InputStatus
instance Amazonka.Data.XML.FromXML Amazonka.IoTEvents.Types.InputStatus.InputStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.IoTEvents.Types.InputStatus.InputStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEvents.Types.InputStatus.InputStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.IoTEvents.Types.InputStatus.InputStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEvents.Types.InputStatus.InputStatus
instance Amazonka.Data.Query.ToQuery Amazonka.IoTEvents.Types.InputStatus.InputStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.IoTEvents.Types.InputStatus.InputStatus
instance Amazonka.Data.Log.ToLog Amazonka.IoTEvents.Types.InputStatus.InputStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.IoTEvents.Types.InputStatus.InputStatus
instance Amazonka.Data.Text.ToText Amazonka.IoTEvents.Types.InputStatus.InputStatus
instance Amazonka.Data.Text.FromText Amazonka.IoTEvents.Types.InputStatus.InputStatus
instance Control.DeepSeq.NFData Amazonka.IoTEvents.Types.InputStatus.InputStatus
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.Types.InputStatus.InputStatus
instance GHC.Generics.Generic Amazonka.IoTEvents.Types.InputStatus.InputStatus
instance GHC.Classes.Ord Amazonka.IoTEvents.Types.InputStatus.InputStatus
instance GHC.Classes.Eq Amazonka.IoTEvents.Types.InputStatus.InputStatus
instance GHC.Read.Read Amazonka.IoTEvents.Types.InputStatus.InputStatus
instance GHC.Show.Show Amazonka.IoTEvents.Types.InputStatus.InputStatus


module Amazonka.IoTEvents.Types.InputConfiguration

-- | Information about the configuration of an input.
--   
--   <i>See:</i> <a>newInputConfiguration</a> smart constructor.
data InputConfiguration
InputConfiguration' :: Maybe Text -> Text -> Text -> POSIX -> POSIX -> InputStatus -> InputConfiguration

-- | A brief description of the input.
[$sel:inputDescription:InputConfiguration'] :: InputConfiguration -> Maybe Text

-- | The name of the input.
[$sel:inputName:InputConfiguration'] :: InputConfiguration -> Text

-- | The ARN of the input.
[$sel:inputArn:InputConfiguration'] :: InputConfiguration -> Text

-- | The time the input was created.
[$sel:creationTime:InputConfiguration'] :: InputConfiguration -> POSIX

-- | The last time the input was updated.
[$sel:lastUpdateTime:InputConfiguration'] :: InputConfiguration -> POSIX

-- | The status of the input.
[$sel:status:InputConfiguration'] :: InputConfiguration -> InputStatus

-- | Create a value of <a>InputConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputDescription:InputConfiguration'</a>,
--   <a>inputConfiguration_inputDescription</a> - A brief description of
--   the input.
--   
--   <a>$sel:inputName:InputConfiguration'</a>,
--   <a>inputConfiguration_inputName</a> - The name of the input.
--   
--   <a>$sel:inputArn:InputConfiguration'</a>,
--   <a>inputConfiguration_inputArn</a> - The ARN of the input.
--   
--   <a>$sel:creationTime:InputConfiguration'</a>,
--   <a>inputConfiguration_creationTime</a> - The time the input was
--   created.
--   
--   <a>$sel:lastUpdateTime:InputConfiguration'</a>,
--   <a>inputConfiguration_lastUpdateTime</a> - The last time the input was
--   updated.
--   
--   <a>$sel:status:InputConfiguration'</a>,
--   <a>inputConfiguration_status</a> - The status of the input.
newInputConfiguration :: Text -> Text -> UTCTime -> UTCTime -> InputStatus -> InputConfiguration

-- | A brief description of the input.
inputConfiguration_inputDescription :: Lens' InputConfiguration (Maybe Text)

-- | The name of the input.
inputConfiguration_inputName :: Lens' InputConfiguration Text

-- | The ARN of the input.
inputConfiguration_inputArn :: Lens' InputConfiguration Text

-- | The time the input was created.
inputConfiguration_creationTime :: Lens' InputConfiguration UTCTime

-- | The last time the input was updated.
inputConfiguration_lastUpdateTime :: Lens' InputConfiguration UTCTime

-- | The status of the input.
inputConfiguration_status :: Lens' InputConfiguration InputStatus
instance GHC.Generics.Generic Amazonka.IoTEvents.Types.InputConfiguration.InputConfiguration
instance GHC.Show.Show Amazonka.IoTEvents.Types.InputConfiguration.InputConfiguration
instance GHC.Read.Read Amazonka.IoTEvents.Types.InputConfiguration.InputConfiguration
instance GHC.Classes.Eq Amazonka.IoTEvents.Types.InputConfiguration.InputConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEvents.Types.InputConfiguration.InputConfiguration
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.Types.InputConfiguration.InputConfiguration
instance Control.DeepSeq.NFData Amazonka.IoTEvents.Types.InputConfiguration.InputConfiguration


module Amazonka.IoTEvents.Types.Input

-- | Information about the input.
--   
--   <i>See:</i> <a>newInput</a> smart constructor.
data Input
Input' :: Maybe InputDefinition -> Maybe InputConfiguration -> Input

-- | The definition of the input.
[$sel:inputDefinition:Input'] :: Input -> Maybe InputDefinition

-- | Information about the configuration of an input.
[$sel:inputConfiguration:Input'] :: Input -> Maybe InputConfiguration

-- | Create a value of <a>Input</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputDefinition:Input'</a>, <a>input_inputDefinition</a> - The
--   definition of the input.
--   
--   <a>$sel:inputConfiguration:Input'</a>, <a>input_inputConfiguration</a>
--   - Information about the configuration of an input.
newInput :: Input

-- | The definition of the input.
input_inputDefinition :: Lens' Input (Maybe InputDefinition)

-- | Information about the configuration of an input.
input_inputConfiguration :: Lens' Input (Maybe InputConfiguration)
instance GHC.Generics.Generic Amazonka.IoTEvents.Types.Input.Input
instance GHC.Show.Show Amazonka.IoTEvents.Types.Input.Input
instance GHC.Read.Read Amazonka.IoTEvents.Types.Input.Input
instance GHC.Classes.Eq Amazonka.IoTEvents.Types.Input.Input
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEvents.Types.Input.Input
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.Types.Input.Input
instance Control.DeepSeq.NFData Amazonka.IoTEvents.Types.Input.Input


module Amazonka.IoTEvents.Types.InputSummary

-- | Information about the input.
--   
--   <i>See:</i> <a>newInputSummary</a> smart constructor.
data InputSummary
InputSummary' :: Maybe POSIX -> Maybe InputStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> InputSummary

-- | The time the input was created.
[$sel:creationTime:InputSummary'] :: InputSummary -> Maybe POSIX

-- | The status of the input.
[$sel:status:InputSummary'] :: InputSummary -> Maybe InputStatus

-- | The name of the input.
[$sel:inputName:InputSummary'] :: InputSummary -> Maybe Text

-- | A brief description of the input.
[$sel:inputDescription:InputSummary'] :: InputSummary -> Maybe Text

-- | The ARN of the input.
[$sel:inputArn:InputSummary'] :: InputSummary -> Maybe Text

-- | The last time the input was updated.
[$sel:lastUpdateTime:InputSummary'] :: InputSummary -> Maybe POSIX

-- | Create a value of <a>InputSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:InputSummary'</a>,
--   <a>inputSummary_creationTime</a> - The time the input was created.
--   
--   <a>$sel:status:InputSummary'</a>, <a>inputSummary_status</a> - The
--   status of the input.
--   
--   <a>$sel:inputName:InputSummary'</a>, <a>inputSummary_inputName</a> -
--   The name of the input.
--   
--   <a>$sel:inputDescription:InputSummary'</a>,
--   <a>inputSummary_inputDescription</a> - A brief description of the
--   input.
--   
--   <a>$sel:inputArn:InputSummary'</a>, <a>inputSummary_inputArn</a> - The
--   ARN of the input.
--   
--   <a>$sel:lastUpdateTime:InputSummary'</a>,
--   <a>inputSummary_lastUpdateTime</a> - The last time the input was
--   updated.
newInputSummary :: InputSummary

-- | The time the input was created.
inputSummary_creationTime :: Lens' InputSummary (Maybe UTCTime)

-- | The status of the input.
inputSummary_status :: Lens' InputSummary (Maybe InputStatus)

-- | The name of the input.
inputSummary_inputName :: Lens' InputSummary (Maybe Text)

-- | A brief description of the input.
inputSummary_inputDescription :: Lens' InputSummary (Maybe Text)

-- | The ARN of the input.
inputSummary_inputArn :: Lens' InputSummary (Maybe Text)

-- | The last time the input was updated.
inputSummary_lastUpdateTime :: Lens' InputSummary (Maybe UTCTime)
instance GHC.Generics.Generic Amazonka.IoTEvents.Types.InputSummary.InputSummary
instance GHC.Show.Show Amazonka.IoTEvents.Types.InputSummary.InputSummary
instance GHC.Read.Read Amazonka.IoTEvents.Types.InputSummary.InputSummary
instance GHC.Classes.Eq Amazonka.IoTEvents.Types.InputSummary.InputSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEvents.Types.InputSummary.InputSummary
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.Types.InputSummary.InputSummary
instance Control.DeepSeq.NFData Amazonka.IoTEvents.Types.InputSummary.InputSummary


module Amazonka.IoTEvents.Types.IotEventsInputIdentifier

-- | The identifier of the input routed to AWS IoT Events.
--   
--   <i>See:</i> <a>newIotEventsInputIdentifier</a> smart constructor.
data IotEventsInputIdentifier
IotEventsInputIdentifier' :: Text -> IotEventsInputIdentifier

-- | The name of the input routed to AWS IoT Events.
[$sel:inputName:IotEventsInputIdentifier'] :: IotEventsInputIdentifier -> Text

-- | Create a value of <a>IotEventsInputIdentifier</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputName:IotEventsInputIdentifier'</a>,
--   <a>iotEventsInputIdentifier_inputName</a> - The name of the input
--   routed to AWS IoT Events.
newIotEventsInputIdentifier :: Text -> IotEventsInputIdentifier

-- | The name of the input routed to AWS IoT Events.
iotEventsInputIdentifier_inputName :: Lens' IotEventsInputIdentifier Text
instance GHC.Generics.Generic Amazonka.IoTEvents.Types.IotEventsInputIdentifier.IotEventsInputIdentifier
instance GHC.Show.Show Amazonka.IoTEvents.Types.IotEventsInputIdentifier.IotEventsInputIdentifier
instance GHC.Read.Read Amazonka.IoTEvents.Types.IotEventsInputIdentifier.IotEventsInputIdentifier
instance GHC.Classes.Eq Amazonka.IoTEvents.Types.IotEventsInputIdentifier.IotEventsInputIdentifier
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.Types.IotEventsInputIdentifier.IotEventsInputIdentifier
instance Control.DeepSeq.NFData Amazonka.IoTEvents.Types.IotEventsInputIdentifier.IotEventsInputIdentifier
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEvents.Types.IotEventsInputIdentifier.IotEventsInputIdentifier


module Amazonka.IoTEvents.Types.IotSiteWiseAction

-- | Sends information about the detector model instance and the event that
--   triggered the action to a specified asset property in AWS IoT
--   SiteWise.
--   
--   You must use expressions for all parameters in
--   <tt>IotSiteWiseAction</tt>. The expressions accept literals,
--   operators, functions, references, and substitutions templates.
--   
--   <b>Examples</b>
--   
--   <ul>
--   <li>For literal values, the expressions must contain single quotes.
--   For example, the value for the <tt>propertyAlias</tt> parameter can be
--   <tt>'/company/windfarm/3/turbine/7/temperature'</tt>.</li>
--   <li>For references, you must specify either variables or input values.
--   For example, the value for the <tt>assetId</tt> parameter can be
--   <tt>$input.TurbineInput.assetId1</tt>.</li>
--   <li>For a substitution template, you must use <tt>${}</tt>, and the
--   template must be in single quotes. A substitution template can also
--   contain a combination of literals, operators, functions, references,
--   and substitution templates.In the following example, the value for the
--   <tt>propertyAlias</tt> parameter uses a substitution
--   template.<pre>'company/windfarm/${$input.TemperatureInput.sensorData.windfarmID}/turbine/
--   ${$input.TemperatureInput.sensorData.turbineID}/temperature'</pre></li>
--   </ul>
--   
--   You must specify either <tt>propertyAlias</tt> or both
--   <tt>assetId</tt> and <tt>propertyId</tt> to identify the target asset
--   property in AWS IoT SiteWise.
--   
--   For more information, see <a>Expressions</a> in the <i>AWS IoT Events
--   Developer Guide</i>.
--   
--   <i>See:</i> <a>newIotSiteWiseAction</a> smart constructor.
data IotSiteWiseAction
IotSiteWiseAction' :: Maybe Text -> Maybe Text -> Maybe AssetPropertyValue -> Maybe Text -> Maybe Text -> IotSiteWiseAction

-- | A unique identifier for this entry. You can use the entry ID to track
--   which data entry causes an error in case of failure. The default is a
--   new unique identifier.
[$sel:entryId:IotSiteWiseAction'] :: IotSiteWiseAction -> Maybe Text

-- | The alias of the asset property.
[$sel:propertyAlias:IotSiteWiseAction'] :: IotSiteWiseAction -> Maybe Text

-- | The value to send to the asset property. This value contains
--   timestamp, quality, and value (TQV) information.
[$sel:propertyValue:IotSiteWiseAction'] :: IotSiteWiseAction -> Maybe AssetPropertyValue

-- | The ID of the asset property.
[$sel:propertyId:IotSiteWiseAction'] :: IotSiteWiseAction -> Maybe Text

-- | The ID of the asset that has the specified property.
[$sel:assetId:IotSiteWiseAction'] :: IotSiteWiseAction -> Maybe Text

-- | Create a value of <a>IotSiteWiseAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:entryId:IotSiteWiseAction'</a>,
--   <a>iotSiteWiseAction_entryId</a> - A unique identifier for this entry.
--   You can use the entry ID to track which data entry causes an error in
--   case of failure. The default is a new unique identifier.
--   
--   <a>$sel:propertyAlias:IotSiteWiseAction'</a>,
--   <a>iotSiteWiseAction_propertyAlias</a> - The alias of the asset
--   property.
--   
--   <a>$sel:propertyValue:IotSiteWiseAction'</a>,
--   <a>iotSiteWiseAction_propertyValue</a> - The value to send to the
--   asset property. This value contains timestamp, quality, and value
--   (TQV) information.
--   
--   <a>$sel:propertyId:IotSiteWiseAction'</a>,
--   <a>iotSiteWiseAction_propertyId</a> - The ID of the asset property.
--   
--   <a>$sel:assetId:IotSiteWiseAction'</a>,
--   <a>iotSiteWiseAction_assetId</a> - The ID of the asset that has the
--   specified property.
newIotSiteWiseAction :: IotSiteWiseAction

-- | A unique identifier for this entry. You can use the entry ID to track
--   which data entry causes an error in case of failure. The default is a
--   new unique identifier.
iotSiteWiseAction_entryId :: Lens' IotSiteWiseAction (Maybe Text)

-- | The alias of the asset property.
iotSiteWiseAction_propertyAlias :: Lens' IotSiteWiseAction (Maybe Text)

-- | The value to send to the asset property. This value contains
--   timestamp, quality, and value (TQV) information.
iotSiteWiseAction_propertyValue :: Lens' IotSiteWiseAction (Maybe AssetPropertyValue)

-- | The ID of the asset property.
iotSiteWiseAction_propertyId :: Lens' IotSiteWiseAction (Maybe Text)

-- | The ID of the asset that has the specified property.
iotSiteWiseAction_assetId :: Lens' IotSiteWiseAction (Maybe Text)
instance GHC.Generics.Generic Amazonka.IoTEvents.Types.IotSiteWiseAction.IotSiteWiseAction
instance GHC.Show.Show Amazonka.IoTEvents.Types.IotSiteWiseAction.IotSiteWiseAction
instance GHC.Read.Read Amazonka.IoTEvents.Types.IotSiteWiseAction.IotSiteWiseAction
instance GHC.Classes.Eq Amazonka.IoTEvents.Types.IotSiteWiseAction.IotSiteWiseAction
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEvents.Types.IotSiteWiseAction.IotSiteWiseAction
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.Types.IotSiteWiseAction.IotSiteWiseAction
instance Control.DeepSeq.NFData Amazonka.IoTEvents.Types.IotSiteWiseAction.IotSiteWiseAction
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEvents.Types.IotSiteWiseAction.IotSiteWiseAction


module Amazonka.IoTEvents.Types.IotSiteWiseAssetModelPropertyIdentifier

-- | The asset model property identifer of the input routed from AWS IoT
--   SiteWise.
--   
--   <i>See:</i> <a>newIotSiteWiseAssetModelPropertyIdentifier</a> smart
--   constructor.
data IotSiteWiseAssetModelPropertyIdentifier
IotSiteWiseAssetModelPropertyIdentifier' :: Text -> Text -> IotSiteWiseAssetModelPropertyIdentifier

-- | The ID of the AWS IoT SiteWise asset model.
[$sel:assetModelId:IotSiteWiseAssetModelPropertyIdentifier'] :: IotSiteWiseAssetModelPropertyIdentifier -> Text

-- | The ID of the AWS IoT SiteWise asset property.
[$sel:propertyId:IotSiteWiseAssetModelPropertyIdentifier'] :: IotSiteWiseAssetModelPropertyIdentifier -> Text

-- | Create a value of <a>IotSiteWiseAssetModelPropertyIdentifier</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:assetModelId:IotSiteWiseAssetModelPropertyIdentifier'</a>,
--   <a>iotSiteWiseAssetModelPropertyIdentifier_assetModelId</a> - The ID
--   of the AWS IoT SiteWise asset model.
--   
--   <a>$sel:propertyId:IotSiteWiseAssetModelPropertyIdentifier'</a>,
--   <a>iotSiteWiseAssetModelPropertyIdentifier_propertyId</a> - The ID of
--   the AWS IoT SiteWise asset property.
newIotSiteWiseAssetModelPropertyIdentifier :: Text -> Text -> IotSiteWiseAssetModelPropertyIdentifier

-- | The ID of the AWS IoT SiteWise asset model.
iotSiteWiseAssetModelPropertyIdentifier_assetModelId :: Lens' IotSiteWiseAssetModelPropertyIdentifier Text

-- | The ID of the AWS IoT SiteWise asset property.
iotSiteWiseAssetModelPropertyIdentifier_propertyId :: Lens' IotSiteWiseAssetModelPropertyIdentifier Text
instance GHC.Generics.Generic Amazonka.IoTEvents.Types.IotSiteWiseAssetModelPropertyIdentifier.IotSiteWiseAssetModelPropertyIdentifier
instance GHC.Show.Show Amazonka.IoTEvents.Types.IotSiteWiseAssetModelPropertyIdentifier.IotSiteWiseAssetModelPropertyIdentifier
instance GHC.Read.Read Amazonka.IoTEvents.Types.IotSiteWiseAssetModelPropertyIdentifier.IotSiteWiseAssetModelPropertyIdentifier
instance GHC.Classes.Eq Amazonka.IoTEvents.Types.IotSiteWiseAssetModelPropertyIdentifier.IotSiteWiseAssetModelPropertyIdentifier
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.Types.IotSiteWiseAssetModelPropertyIdentifier.IotSiteWiseAssetModelPropertyIdentifier
instance Control.DeepSeq.NFData Amazonka.IoTEvents.Types.IotSiteWiseAssetModelPropertyIdentifier.IotSiteWiseAssetModelPropertyIdentifier
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEvents.Types.IotSiteWiseAssetModelPropertyIdentifier.IotSiteWiseAssetModelPropertyIdentifier


module Amazonka.IoTEvents.Types.IotSiteWiseInputIdentifier

-- | The identifer of the input routed from AWS IoT SiteWise.
--   
--   <i>See:</i> <a>newIotSiteWiseInputIdentifier</a> smart constructor.
data IotSiteWiseInputIdentifier
IotSiteWiseInputIdentifier' :: Maybe IotSiteWiseAssetModelPropertyIdentifier -> IotSiteWiseInputIdentifier

-- | The identifier of the AWS IoT SiteWise asset model property.
[$sel:iotSiteWiseAssetModelPropertyIdentifier:IotSiteWiseInputIdentifier'] :: IotSiteWiseInputIdentifier -> Maybe IotSiteWiseAssetModelPropertyIdentifier

-- | Create a value of <a>IotSiteWiseInputIdentifier</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:iotSiteWiseAssetModelPropertyIdentifier:IotSiteWiseInputIdentifier'</a>,
--   <a>iotSiteWiseInputIdentifier_iotSiteWiseAssetModelPropertyIdentifier</a>
--   - The identifier of the AWS IoT SiteWise asset model property.
newIotSiteWiseInputIdentifier :: IotSiteWiseInputIdentifier

-- | The identifier of the AWS IoT SiteWise asset model property.
iotSiteWiseInputIdentifier_iotSiteWiseAssetModelPropertyIdentifier :: Lens' IotSiteWiseInputIdentifier (Maybe IotSiteWiseAssetModelPropertyIdentifier)
instance GHC.Generics.Generic Amazonka.IoTEvents.Types.IotSiteWiseInputIdentifier.IotSiteWiseInputIdentifier
instance GHC.Show.Show Amazonka.IoTEvents.Types.IotSiteWiseInputIdentifier.IotSiteWiseInputIdentifier
instance GHC.Read.Read Amazonka.IoTEvents.Types.IotSiteWiseInputIdentifier.IotSiteWiseInputIdentifier
instance GHC.Classes.Eq Amazonka.IoTEvents.Types.IotSiteWiseInputIdentifier.IotSiteWiseInputIdentifier
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.Types.IotSiteWiseInputIdentifier.IotSiteWiseInputIdentifier
instance Control.DeepSeq.NFData Amazonka.IoTEvents.Types.IotSiteWiseInputIdentifier.IotSiteWiseInputIdentifier
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEvents.Types.IotSiteWiseInputIdentifier.IotSiteWiseInputIdentifier


module Amazonka.IoTEvents.Types.InputIdentifier

-- | The identifer of the input.
--   
--   <i>See:</i> <a>newInputIdentifier</a> smart constructor.
data InputIdentifier
InputIdentifier' :: Maybe IotSiteWiseInputIdentifier -> Maybe IotEventsInputIdentifier -> InputIdentifier

-- | The identifer of the input routed from AWS IoT SiteWise.
[$sel:iotSiteWiseInputIdentifier:InputIdentifier'] :: InputIdentifier -> Maybe IotSiteWiseInputIdentifier

-- | The identifier of the input routed to AWS IoT Events.
[$sel:iotEventsInputIdentifier:InputIdentifier'] :: InputIdentifier -> Maybe IotEventsInputIdentifier

-- | Create a value of <a>InputIdentifier</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:iotSiteWiseInputIdentifier:InputIdentifier'</a>,
--   <a>inputIdentifier_iotSiteWiseInputIdentifier</a> - The identifer of
--   the input routed from AWS IoT SiteWise.
--   
--   <a>$sel:iotEventsInputIdentifier:InputIdentifier'</a>,
--   <a>inputIdentifier_iotEventsInputIdentifier</a> - The identifier of
--   the input routed to AWS IoT Events.
newInputIdentifier :: InputIdentifier

-- | The identifer of the input routed from AWS IoT SiteWise.
inputIdentifier_iotSiteWiseInputIdentifier :: Lens' InputIdentifier (Maybe IotSiteWiseInputIdentifier)

-- | The identifier of the input routed to AWS IoT Events.
inputIdentifier_iotEventsInputIdentifier :: Lens' InputIdentifier (Maybe IotEventsInputIdentifier)
instance GHC.Generics.Generic Amazonka.IoTEvents.Types.InputIdentifier.InputIdentifier
instance GHC.Show.Show Amazonka.IoTEvents.Types.InputIdentifier.InputIdentifier
instance GHC.Read.Read Amazonka.IoTEvents.Types.InputIdentifier.InputIdentifier
instance GHC.Classes.Eq Amazonka.IoTEvents.Types.InputIdentifier.InputIdentifier
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.Types.InputIdentifier.InputIdentifier
instance Control.DeepSeq.NFData Amazonka.IoTEvents.Types.InputIdentifier.InputIdentifier
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEvents.Types.InputIdentifier.InputIdentifier


module Amazonka.IoTEvents.Types.LoggingLevel
newtype LoggingLevel
LoggingLevel' :: Text -> LoggingLevel
[fromLoggingLevel] :: LoggingLevel -> Text
pattern LoggingLevel_DEBUG :: LoggingLevel
pattern LoggingLevel_ERROR :: LoggingLevel
pattern LoggingLevel_INFO :: LoggingLevel
instance Amazonka.Data.XML.ToXML Amazonka.IoTEvents.Types.LoggingLevel.LoggingLevel
instance Amazonka.Data.XML.FromXML Amazonka.IoTEvents.Types.LoggingLevel.LoggingLevel
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.IoTEvents.Types.LoggingLevel.LoggingLevel
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEvents.Types.LoggingLevel.LoggingLevel
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.IoTEvents.Types.LoggingLevel.LoggingLevel
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEvents.Types.LoggingLevel.LoggingLevel
instance Amazonka.Data.Query.ToQuery Amazonka.IoTEvents.Types.LoggingLevel.LoggingLevel
instance Amazonka.Data.Headers.ToHeader Amazonka.IoTEvents.Types.LoggingLevel.LoggingLevel
instance Amazonka.Data.Log.ToLog Amazonka.IoTEvents.Types.LoggingLevel.LoggingLevel
instance Amazonka.Data.ByteString.ToByteString Amazonka.IoTEvents.Types.LoggingLevel.LoggingLevel
instance Amazonka.Data.Text.ToText Amazonka.IoTEvents.Types.LoggingLevel.LoggingLevel
instance Amazonka.Data.Text.FromText Amazonka.IoTEvents.Types.LoggingLevel.LoggingLevel
instance Control.DeepSeq.NFData Amazonka.IoTEvents.Types.LoggingLevel.LoggingLevel
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.Types.LoggingLevel.LoggingLevel
instance GHC.Generics.Generic Amazonka.IoTEvents.Types.LoggingLevel.LoggingLevel
instance GHC.Classes.Ord Amazonka.IoTEvents.Types.LoggingLevel.LoggingLevel
instance GHC.Classes.Eq Amazonka.IoTEvents.Types.LoggingLevel.LoggingLevel
instance GHC.Read.Read Amazonka.IoTEvents.Types.LoggingLevel.LoggingLevel
instance GHC.Show.Show Amazonka.IoTEvents.Types.LoggingLevel.LoggingLevel


module Amazonka.IoTEvents.Types.LoggingOptions

-- | The values of the AWS IoT Events logging options.
--   
--   <i>See:</i> <a>newLoggingOptions</a> smart constructor.
data LoggingOptions
LoggingOptions' :: Maybe (NonEmpty DetectorDebugOption) -> Text -> LoggingLevel -> Bool -> LoggingOptions

-- | Information that identifies those detector models and their detectors
--   (instances) for which the logging level is given.
[$sel:detectorDebugOptions:LoggingOptions'] :: LoggingOptions -> Maybe (NonEmpty DetectorDebugOption)

-- | The ARN of the role that grants permission to AWS IoT Events to
--   perform logging.
[$sel:roleArn:LoggingOptions'] :: LoggingOptions -> Text

-- | The logging level.
[$sel:level:LoggingOptions'] :: LoggingOptions -> LoggingLevel

-- | If TRUE, logging is enabled for AWS IoT Events.
[$sel:enabled:LoggingOptions'] :: LoggingOptions -> Bool

-- | Create a value of <a>LoggingOptions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:detectorDebugOptions:LoggingOptions'</a>,
--   <a>loggingOptions_detectorDebugOptions</a> - Information that
--   identifies those detector models and their detectors (instances) for
--   which the logging level is given.
--   
--   <a>$sel:roleArn:LoggingOptions'</a>, <a>loggingOptions_roleArn</a> -
--   The ARN of the role that grants permission to AWS IoT Events to
--   perform logging.
--   
--   <a>$sel:level:LoggingOptions'</a>, <a>loggingOptions_level</a> - The
--   logging level.
--   
--   <a>$sel:enabled:LoggingOptions'</a>, <a>loggingOptions_enabled</a> -
--   If TRUE, logging is enabled for AWS IoT Events.
newLoggingOptions :: Text -> LoggingLevel -> Bool -> LoggingOptions

-- | Information that identifies those detector models and their detectors
--   (instances) for which the logging level is given.
loggingOptions_detectorDebugOptions :: Lens' LoggingOptions (Maybe (NonEmpty DetectorDebugOption))

-- | The ARN of the role that grants permission to AWS IoT Events to
--   perform logging.
loggingOptions_roleArn :: Lens' LoggingOptions Text

-- | The logging level.
loggingOptions_level :: Lens' LoggingOptions LoggingLevel

-- | If TRUE, logging is enabled for AWS IoT Events.
loggingOptions_enabled :: Lens' LoggingOptions Bool
instance GHC.Generics.Generic Amazonka.IoTEvents.Types.LoggingOptions.LoggingOptions
instance GHC.Show.Show Amazonka.IoTEvents.Types.LoggingOptions.LoggingOptions
instance GHC.Read.Read Amazonka.IoTEvents.Types.LoggingOptions.LoggingOptions
instance GHC.Classes.Eq Amazonka.IoTEvents.Types.LoggingOptions.LoggingOptions
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEvents.Types.LoggingOptions.LoggingOptions
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.Types.LoggingOptions.LoggingOptions
instance Control.DeepSeq.NFData Amazonka.IoTEvents.Types.LoggingOptions.LoggingOptions
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEvents.Types.LoggingOptions.LoggingOptions


module Amazonka.IoTEvents.Types.PayloadType
newtype PayloadType
PayloadType' :: Text -> PayloadType
[fromPayloadType] :: PayloadType -> Text
pattern PayloadType_JSON :: PayloadType
pattern PayloadType_STRING :: PayloadType
instance Amazonka.Data.XML.ToXML Amazonka.IoTEvents.Types.PayloadType.PayloadType
instance Amazonka.Data.XML.FromXML Amazonka.IoTEvents.Types.PayloadType.PayloadType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.IoTEvents.Types.PayloadType.PayloadType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEvents.Types.PayloadType.PayloadType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.IoTEvents.Types.PayloadType.PayloadType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEvents.Types.PayloadType.PayloadType
instance Amazonka.Data.Query.ToQuery Amazonka.IoTEvents.Types.PayloadType.PayloadType
instance Amazonka.Data.Headers.ToHeader Amazonka.IoTEvents.Types.PayloadType.PayloadType
instance Amazonka.Data.Log.ToLog Amazonka.IoTEvents.Types.PayloadType.PayloadType
instance Amazonka.Data.ByteString.ToByteString Amazonka.IoTEvents.Types.PayloadType.PayloadType
instance Amazonka.Data.Text.ToText Amazonka.IoTEvents.Types.PayloadType.PayloadType
instance Amazonka.Data.Text.FromText Amazonka.IoTEvents.Types.PayloadType.PayloadType
instance Control.DeepSeq.NFData Amazonka.IoTEvents.Types.PayloadType.PayloadType
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.Types.PayloadType.PayloadType
instance GHC.Generics.Generic Amazonka.IoTEvents.Types.PayloadType.PayloadType
instance GHC.Classes.Ord Amazonka.IoTEvents.Types.PayloadType.PayloadType
instance GHC.Classes.Eq Amazonka.IoTEvents.Types.PayloadType.PayloadType
instance GHC.Read.Read Amazonka.IoTEvents.Types.PayloadType.PayloadType
instance GHC.Show.Show Amazonka.IoTEvents.Types.PayloadType.PayloadType


module Amazonka.IoTEvents.Types.Payload

-- | Information needed to configure the payload.
--   
--   By default, AWS IoT Events generates a standard payload in JSON for
--   any action. This action payload contains all attribute-value pairs
--   that have the information about the detector model instance and the
--   event triggered the action. To configure the action payload, you can
--   use <tt>contentExpression</tt>.
--   
--   <i>See:</i> <a>newPayload</a> smart constructor.
data Payload
Payload' :: Text -> PayloadType -> Payload

-- | The content of the payload. You can use a string expression that
--   includes quoted strings (<tt>'&lt;string&gt;'</tt>), variables
--   (<tt>$variable.&lt;variable-name&gt;</tt>), input values
--   (<tt>$input.&lt;input-name&gt;.&lt;path-to-datum&gt;</tt>), string
--   concatenations, and quoted strings that contain <tt>${}</tt> as the
--   content. The recommended maximum size of a content expression is 1 KB.
[$sel:contentExpression:Payload'] :: Payload -> Text

-- | The value of the payload type can be either <tt>STRING</tt> or
--   <tt>JSON</tt>.
[$sel:type':Payload'] :: Payload -> PayloadType

-- | Create a value of <a>Payload</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:contentExpression:Payload'</a>,
--   <a>payload_contentExpression</a> - The content of the payload. You can
--   use a string expression that includes quoted strings
--   (<tt>'&lt;string&gt;'</tt>), variables
--   (<tt>$variable.&lt;variable-name&gt;</tt>), input values
--   (<tt>$input.&lt;input-name&gt;.&lt;path-to-datum&gt;</tt>), string
--   concatenations, and quoted strings that contain <tt>${}</tt> as the
--   content. The recommended maximum size of a content expression is 1 KB.
--   
--   <a>$sel:type':Payload'</a>, <a>payload_type</a> - The value of the
--   payload type can be either <tt>STRING</tt> or <tt>JSON</tt>.
newPayload :: Text -> PayloadType -> Payload

-- | The content of the payload. You can use a string expression that
--   includes quoted strings (<tt>'&lt;string&gt;'</tt>), variables
--   (<tt>$variable.&lt;variable-name&gt;</tt>), input values
--   (<tt>$input.&lt;input-name&gt;.&lt;path-to-datum&gt;</tt>), string
--   concatenations, and quoted strings that contain <tt>${}</tt> as the
--   content. The recommended maximum size of a content expression is 1 KB.
payload_contentExpression :: Lens' Payload Text

-- | The value of the payload type can be either <tt>STRING</tt> or
--   <tt>JSON</tt>.
payload_type :: Lens' Payload PayloadType
instance GHC.Generics.Generic Amazonka.IoTEvents.Types.Payload.Payload
instance GHC.Show.Show Amazonka.IoTEvents.Types.Payload.Payload
instance GHC.Read.Read Amazonka.IoTEvents.Types.Payload.Payload
instance GHC.Classes.Eq Amazonka.IoTEvents.Types.Payload.Payload
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEvents.Types.Payload.Payload
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.Types.Payload.Payload
instance Control.DeepSeq.NFData Amazonka.IoTEvents.Types.Payload.Payload
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEvents.Types.Payload.Payload


module Amazonka.IoTEvents.Types.LambdaAction

-- | Calls a Lambda function, passing in information about the detector
--   model instance and the event that triggered the action.
--   
--   <i>See:</i> <a>newLambdaAction</a> smart constructor.
data LambdaAction
LambdaAction' :: Maybe Payload -> Text -> LambdaAction

-- | You can configure the action payload when you send a message to a
--   Lambda function.
[$sel:payload:LambdaAction'] :: LambdaAction -> Maybe Payload

-- | The ARN of the Lambda function that is executed.
[$sel:functionArn:LambdaAction'] :: LambdaAction -> Text

-- | Create a value of <a>LambdaAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:payload:LambdaAction'</a>, <a>lambdaAction_payload</a> - You
--   can configure the action payload when you send a message to a Lambda
--   function.
--   
--   <a>$sel:functionArn:LambdaAction'</a>, <a>lambdaAction_functionArn</a>
--   - The ARN of the Lambda function that is executed.
newLambdaAction :: Text -> LambdaAction

-- | You can configure the action payload when you send a message to a
--   Lambda function.
lambdaAction_payload :: Lens' LambdaAction (Maybe Payload)

-- | The ARN of the Lambda function that is executed.
lambdaAction_functionArn :: Lens' LambdaAction Text
instance GHC.Generics.Generic Amazonka.IoTEvents.Types.LambdaAction.LambdaAction
instance GHC.Show.Show Amazonka.IoTEvents.Types.LambdaAction.LambdaAction
instance GHC.Read.Read Amazonka.IoTEvents.Types.LambdaAction.LambdaAction
instance GHC.Classes.Eq Amazonka.IoTEvents.Types.LambdaAction.LambdaAction
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEvents.Types.LambdaAction.LambdaAction
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.Types.LambdaAction.LambdaAction
instance Control.DeepSeq.NFData Amazonka.IoTEvents.Types.LambdaAction.LambdaAction
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEvents.Types.LambdaAction.LambdaAction


module Amazonka.IoTEvents.Types.NotificationTargetActions

-- | Specifies an AWS Lambda function to manage alarm notifications. You
--   can create one or use the <a>AWS Lambda function provided by AWS IoT
--   Events</a>.
--   
--   <i>See:</i> <a>newNotificationTargetActions</a> smart constructor.
data NotificationTargetActions
NotificationTargetActions' :: Maybe LambdaAction -> NotificationTargetActions
[$sel:lambdaAction:NotificationTargetActions'] :: NotificationTargetActions -> Maybe LambdaAction

-- | Create a value of <a>NotificationTargetActions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lambdaAction:NotificationTargetActions'</a>,
--   <a>notificationTargetActions_lambdaAction</a> - Undocumented member.
newNotificationTargetActions :: NotificationTargetActions

-- | Undocumented member.
notificationTargetActions_lambdaAction :: Lens' NotificationTargetActions (Maybe LambdaAction)
instance GHC.Generics.Generic Amazonka.IoTEvents.Types.NotificationTargetActions.NotificationTargetActions
instance GHC.Show.Show Amazonka.IoTEvents.Types.NotificationTargetActions.NotificationTargetActions
instance GHC.Read.Read Amazonka.IoTEvents.Types.NotificationTargetActions.NotificationTargetActions
instance GHC.Classes.Eq Amazonka.IoTEvents.Types.NotificationTargetActions.NotificationTargetActions
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEvents.Types.NotificationTargetActions.NotificationTargetActions
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.Types.NotificationTargetActions.NotificationTargetActions
instance Control.DeepSeq.NFData Amazonka.IoTEvents.Types.NotificationTargetActions.NotificationTargetActions
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEvents.Types.NotificationTargetActions.NotificationTargetActions


module Amazonka.IoTEvents.Types.IotTopicPublishAction

-- | Information required to publish the MQTT message through the AWS IoT
--   message broker.
--   
--   <i>See:</i> <a>newIotTopicPublishAction</a> smart constructor.
data IotTopicPublishAction
IotTopicPublishAction' :: Maybe Payload -> Text -> IotTopicPublishAction

-- | You can configure the action payload when you publish a message to an
--   AWS IoT Core topic.
[$sel:payload:IotTopicPublishAction'] :: IotTopicPublishAction -> Maybe Payload

-- | The MQTT topic of the message. You can use a string expression that
--   includes variables (<tt>$variable.&lt;variable-name&gt;</tt>) and
--   input values
--   (<tt>$input.&lt;input-name&gt;.&lt;path-to-datum&gt;</tt>) as the
--   topic string.
[$sel:mqttTopic:IotTopicPublishAction'] :: IotTopicPublishAction -> Text

-- | Create a value of <a>IotTopicPublishAction</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:payload:IotTopicPublishAction'</a>,
--   <a>iotTopicPublishAction_payload</a> - You can configure the action
--   payload when you publish a message to an AWS IoT Core topic.
--   
--   <a>$sel:mqttTopic:IotTopicPublishAction'</a>,
--   <a>iotTopicPublishAction_mqttTopic</a> - The MQTT topic of the
--   message. You can use a string expression that includes variables
--   (<tt>$variable.&lt;variable-name&gt;</tt>) and input values
--   (<tt>$input.&lt;input-name&gt;.&lt;path-to-datum&gt;</tt>) as the
--   topic string.
newIotTopicPublishAction :: Text -> IotTopicPublishAction

-- | You can configure the action payload when you publish a message to an
--   AWS IoT Core topic.
iotTopicPublishAction_payload :: Lens' IotTopicPublishAction (Maybe Payload)

-- | The MQTT topic of the message. You can use a string expression that
--   includes variables (<tt>$variable.&lt;variable-name&gt;</tt>) and
--   input values
--   (<tt>$input.&lt;input-name&gt;.&lt;path-to-datum&gt;</tt>) as the
--   topic string.
iotTopicPublishAction_mqttTopic :: Lens' IotTopicPublishAction Text
instance GHC.Generics.Generic Amazonka.IoTEvents.Types.IotTopicPublishAction.IotTopicPublishAction
instance GHC.Show.Show Amazonka.IoTEvents.Types.IotTopicPublishAction.IotTopicPublishAction
instance GHC.Read.Read Amazonka.IoTEvents.Types.IotTopicPublishAction.IotTopicPublishAction
instance GHC.Classes.Eq Amazonka.IoTEvents.Types.IotTopicPublishAction.IotTopicPublishAction
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEvents.Types.IotTopicPublishAction.IotTopicPublishAction
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.Types.IotTopicPublishAction.IotTopicPublishAction
instance Control.DeepSeq.NFData Amazonka.IoTEvents.Types.IotTopicPublishAction.IotTopicPublishAction
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEvents.Types.IotTopicPublishAction.IotTopicPublishAction


module Amazonka.IoTEvents.Types.IotEventsAction

-- | Sends an AWS IoT Events input, passing in information about the
--   detector model instance and the event that triggered the action.
--   
--   <i>See:</i> <a>newIotEventsAction</a> smart constructor.
data IotEventsAction
IotEventsAction' :: Maybe Payload -> Text -> IotEventsAction

-- | You can configure the action payload when you send a message to an AWS
--   IoT Events input.
[$sel:payload:IotEventsAction'] :: IotEventsAction -> Maybe Payload

-- | The name of the AWS IoT Events input where the data is sent.
[$sel:inputName:IotEventsAction'] :: IotEventsAction -> Text

-- | Create a value of <a>IotEventsAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:payload:IotEventsAction'</a>, <a>iotEventsAction_payload</a> -
--   You can configure the action payload when you send a message to an AWS
--   IoT Events input.
--   
--   <a>$sel:inputName:IotEventsAction'</a>,
--   <a>iotEventsAction_inputName</a> - The name of the AWS IoT Events
--   input where the data is sent.
newIotEventsAction :: Text -> IotEventsAction

-- | You can configure the action payload when you send a message to an AWS
--   IoT Events input.
iotEventsAction_payload :: Lens' IotEventsAction (Maybe Payload)

-- | The name of the AWS IoT Events input where the data is sent.
iotEventsAction_inputName :: Lens' IotEventsAction Text
instance GHC.Generics.Generic Amazonka.IoTEvents.Types.IotEventsAction.IotEventsAction
instance GHC.Show.Show Amazonka.IoTEvents.Types.IotEventsAction.IotEventsAction
instance GHC.Read.Read Amazonka.IoTEvents.Types.IotEventsAction.IotEventsAction
instance GHC.Classes.Eq Amazonka.IoTEvents.Types.IotEventsAction.IotEventsAction
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEvents.Types.IotEventsAction.IotEventsAction
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.Types.IotEventsAction.IotEventsAction
instance Control.DeepSeq.NFData Amazonka.IoTEvents.Types.IotEventsAction.IotEventsAction
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEvents.Types.IotEventsAction.IotEventsAction


module Amazonka.IoTEvents.Types.FirehoseAction

-- | Sends information about the detector model instance and the event that
--   triggered the action to an Amazon Kinesis Data Firehose delivery
--   stream.
--   
--   <i>See:</i> <a>newFirehoseAction</a> smart constructor.
data FirehoseAction
FirehoseAction' :: Maybe Text -> Maybe Payload -> Text -> FirehoseAction

-- | A character separator that is used to separate records written to the
--   Kinesis Data Firehose delivery stream. Valid values are: '\n'
--   (newline), '\t' (tab), '\r\n' (Windows newline), ',' (comma).
[$sel:separator:FirehoseAction'] :: FirehoseAction -> Maybe Text

-- | You can configure the action payload when you send a message to an
--   Amazon Kinesis Data Firehose delivery stream.
[$sel:payload:FirehoseAction'] :: FirehoseAction -> Maybe Payload

-- | The name of the Kinesis Data Firehose delivery stream where the data
--   is written.
[$sel:deliveryStreamName:FirehoseAction'] :: FirehoseAction -> Text

-- | Create a value of <a>FirehoseAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:separator:FirehoseAction'</a>, <a>firehoseAction_separator</a>
--   - A character separator that is used to separate records written to
--   the Kinesis Data Firehose delivery stream. Valid values are: '\n'
--   (newline), '\t' (tab), '\r\n' (Windows newline), ',' (comma).
--   
--   <a>$sel:payload:FirehoseAction'</a>, <a>firehoseAction_payload</a> -
--   You can configure the action payload when you send a message to an
--   Amazon Kinesis Data Firehose delivery stream.
--   
--   <a>$sel:deliveryStreamName:FirehoseAction'</a>,
--   <a>firehoseAction_deliveryStreamName</a> - The name of the Kinesis
--   Data Firehose delivery stream where the data is written.
newFirehoseAction :: Text -> FirehoseAction

-- | A character separator that is used to separate records written to the
--   Kinesis Data Firehose delivery stream. Valid values are: '\n'
--   (newline), '\t' (tab), '\r\n' (Windows newline), ',' (comma).
firehoseAction_separator :: Lens' FirehoseAction (Maybe Text)

-- | You can configure the action payload when you send a message to an
--   Amazon Kinesis Data Firehose delivery stream.
firehoseAction_payload :: Lens' FirehoseAction (Maybe Payload)

-- | The name of the Kinesis Data Firehose delivery stream where the data
--   is written.
firehoseAction_deliveryStreamName :: Lens' FirehoseAction Text
instance GHC.Generics.Generic Amazonka.IoTEvents.Types.FirehoseAction.FirehoseAction
instance GHC.Show.Show Amazonka.IoTEvents.Types.FirehoseAction.FirehoseAction
instance GHC.Read.Read Amazonka.IoTEvents.Types.FirehoseAction.FirehoseAction
instance GHC.Classes.Eq Amazonka.IoTEvents.Types.FirehoseAction.FirehoseAction
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEvents.Types.FirehoseAction.FirehoseAction
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.Types.FirehoseAction.FirehoseAction
instance Control.DeepSeq.NFData Amazonka.IoTEvents.Types.FirehoseAction.FirehoseAction
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEvents.Types.FirehoseAction.FirehoseAction


module Amazonka.IoTEvents.Types.DynamoDBv2Action

-- | Defines an action to write to the Amazon DynamoDB table that you
--   created. The default action payload contains all the information about
--   the detector model instance and the event that triggered the action.
--   You can customize the <a>payload</a>. A separate column of the
--   DynamoDB table receives one attribute-value pair in the payload that
--   you specify.
--   
--   You must use expressions for all parameters in
--   <tt>DynamoDBv2Action</tt>. The expressions accept literals, operators,
--   functions, references, and substitution templates.
--   
--   <b>Examples</b>
--   
--   <ul>
--   <li>For literal values, the expressions must contain single quotes.
--   For example, the value for the <tt>tableName</tt> parameter can be
--   <tt>'GreenhouseTemperatureTable'</tt>.</li>
--   <li>For references, you must specify either variables or input values.
--   For example, the value for the <tt>tableName</tt> parameter can be
--   <tt>$variable.ddbtableName</tt>.</li>
--   <li>For a substitution template, you must use <tt>${}</tt>, and the
--   template must be in single quotes. A substitution template can also
--   contain a combination of literals, operators, functions, references,
--   and substitution templates.In the following example, the value for the
--   <tt>contentExpression</tt> parameter in <tt>Payload</tt> uses a
--   substitution template.<pre>'{\"sensorID\":
--   \"${$input.GreenhouseInput.sensor_id}\", \"temperature\":
--   \"${$input.GreenhouseInput.temperature * 9 / 5 + 32}\"}'</pre></li>
--   <li>For a string concatenation, you must use <tt>+</tt>. A string
--   concatenation can also contain a combination of literals, operators,
--   functions, references, and substitution templates.In the following
--   example, the value for the <tt>tableName</tt> parameter uses a string
--   concatenation.<pre>'GreenhouseTemperatureTable ' +
--   $input.GreenhouseInput.date</pre></li>
--   </ul>
--   
--   For more information, see <a>Expressions</a> in the <i>AWS IoT Events
--   Developer Guide</i>.
--   
--   The value for the <tt>type</tt> parameter in <tt>Payload</tt> must be
--   <tt>JSON</tt>.
--   
--   <i>See:</i> <a>newDynamoDBv2Action</a> smart constructor.
data DynamoDBv2Action
DynamoDBv2Action' :: Maybe Payload -> Text -> DynamoDBv2Action
[$sel:payload:DynamoDBv2Action'] :: DynamoDBv2Action -> Maybe Payload

-- | The name of the DynamoDB table.
[$sel:tableName:DynamoDBv2Action'] :: DynamoDBv2Action -> Text

-- | Create a value of <a>DynamoDBv2Action</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:payload:DynamoDBv2Action'</a>, <a>dynamoDBv2Action_payload</a>
--   - Undocumented member.
--   
--   <a>$sel:tableName:DynamoDBv2Action'</a>,
--   <a>dynamoDBv2Action_tableName</a> - The name of the DynamoDB table.
newDynamoDBv2Action :: Text -> DynamoDBv2Action

-- | Undocumented member.
dynamoDBv2Action_payload :: Lens' DynamoDBv2Action (Maybe Payload)

-- | The name of the DynamoDB table.
dynamoDBv2Action_tableName :: Lens' DynamoDBv2Action Text
instance GHC.Generics.Generic Amazonka.IoTEvents.Types.DynamoDBv2Action.DynamoDBv2Action
instance GHC.Show.Show Amazonka.IoTEvents.Types.DynamoDBv2Action.DynamoDBv2Action
instance GHC.Read.Read Amazonka.IoTEvents.Types.DynamoDBv2Action.DynamoDBv2Action
instance GHC.Classes.Eq Amazonka.IoTEvents.Types.DynamoDBv2Action.DynamoDBv2Action
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEvents.Types.DynamoDBv2Action.DynamoDBv2Action
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.Types.DynamoDBv2Action.DynamoDBv2Action
instance Control.DeepSeq.NFData Amazonka.IoTEvents.Types.DynamoDBv2Action.DynamoDBv2Action
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEvents.Types.DynamoDBv2Action.DynamoDBv2Action


module Amazonka.IoTEvents.Types.DynamoDBAction

-- | Defines an action to write to the Amazon DynamoDB table that you
--   created. The standard action payload contains all the information
--   about the detector model instance and the event that triggered the
--   action. You can customize the <a>payload</a>. One column of the
--   DynamoDB table receives all attribute-value pairs in the payload that
--   you specify.
--   
--   You must use expressions for all parameters in
--   <tt>DynamoDBAction</tt>. The expressions accept literals, operators,
--   functions, references, and substitution templates.
--   
--   <b>Examples</b>
--   
--   <ul>
--   <li>For literal values, the expressions must contain single quotes.
--   For example, the value for the <tt>hashKeyType</tt> parameter can be
--   <tt>'STRING'</tt>.</li>
--   <li>For references, you must specify either variables or input values.
--   For example, the value for the <tt>hashKeyField</tt> parameter can be
--   <tt>$input.GreenhouseInput.name</tt>.</li>
--   <li>For a substitution template, you must use <tt>${}</tt>, and the
--   template must be in single quotes. A substitution template can also
--   contain a combination of literals, operators, functions, references,
--   and substitution templates.In the following example, the value for the
--   <tt>hashKeyValue</tt> parameter uses a substitution
--   template.<pre>'${$input.GreenhouseInput.temperature * 6 / 5 + 32} in
--   Fahrenheit'</pre></li>
--   <li>For a string concatenation, you must use <tt>+</tt>. A string
--   concatenation can also contain a combination of literals, operators,
--   functions, references, and substitution templates.In the following
--   example, the value for the <tt>tableName</tt> parameter uses a string
--   concatenation.<pre>'GreenhouseTemperatureTable ' +
--   $input.GreenhouseInput.date</pre></li>
--   </ul>
--   
--   For more information, see <a>Expressions</a> in the <i>AWS IoT Events
--   Developer Guide</i>.
--   
--   If the defined payload type is a string, <tt>DynamoDBAction</tt>
--   writes non-JSON data to the DynamoDB table as binary data. The
--   DynamoDB console displays the data as Base64-encoded text. The value
--   for the <tt>payloadField</tt> parameter is
--   <tt>&lt;payload-field&gt;_raw</tt>.
--   
--   <i>See:</i> <a>newDynamoDBAction</a> smart constructor.
data DynamoDBAction
DynamoDBAction' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Payload -> Maybe Text -> Maybe Text -> Maybe Text -> Text -> Text -> Text -> DynamoDBAction

-- | The data type for the hash key (also called the partition key). You
--   can specify the following values:
--   
--   <ul>
--   <li><tt>'STRING'</tt> - The hash key is a string.</li>
--   <li><tt>'NUMBER'</tt> - The hash key is a number.</li>
--   </ul>
--   
--   If you don't specify <tt>hashKeyType</tt>, the default value is
--   <tt>'STRING'</tt>.
[$sel:hashKeyType:DynamoDBAction'] :: DynamoDBAction -> Maybe Text

-- | The type of operation to perform. You can specify the following
--   values:
--   
--   <ul>
--   <li><tt>'INSERT'</tt> - Insert data as a new item into the DynamoDB
--   table. This item uses the specified hash key as a partition key. If
--   you specified a range key, the item uses the range key as a sort
--   key.</li>
--   <li><tt>'UPDATE'</tt> - Update an existing item of the DynamoDB table
--   with new data. This item's partition key must match the specified hash
--   key. If you specified a range key, the range key must match the item's
--   sort key.</li>
--   <li><tt>'DELETE'</tt> - Delete an existing item of the DynamoDB table.
--   This item's partition key must match the specified hash key. If you
--   specified a range key, the range key must match the item's sort
--   key.</li>
--   </ul>
--   
--   If you don't specify this parameter, AWS IoT Events triggers the
--   <tt>'INSERT'</tt> operation.
[$sel:operation:DynamoDBAction'] :: DynamoDBAction -> Maybe Text

-- | The data type for the range key (also called the sort key), You can
--   specify the following values:
--   
--   <ul>
--   <li><tt>'STRING'</tt> - The range key is a string.</li>
--   <li><tt>'NUMBER'</tt> - The range key is number.</li>
--   </ul>
--   
--   If you don't specify <tt>rangeKeyField</tt>, the default value is
--   <tt>'STRING'</tt>.
[$sel:rangeKeyType:DynamoDBAction'] :: DynamoDBAction -> Maybe Text
[$sel:payload:DynamoDBAction'] :: DynamoDBAction -> Maybe Payload

-- | The name of the DynamoDB column that receives the action payload.
--   
--   If you don't specify this parameter, the name of the DynamoDB column
--   is <tt>payload</tt>.
[$sel:payloadField:DynamoDBAction'] :: DynamoDBAction -> Maybe Text

-- | The name of the range key (also called the sort key). The
--   <tt>rangeKeyField</tt> value must match the sort key of the target
--   DynamoDB table.
[$sel:rangeKeyField:DynamoDBAction'] :: DynamoDBAction -> Maybe Text

-- | The value of the range key (also called the sort key).
[$sel:rangeKeyValue:DynamoDBAction'] :: DynamoDBAction -> Maybe Text

-- | The name of the hash key (also called the partition key). The
--   <tt>hashKeyField</tt> value must match the partition key of the target
--   DynamoDB table.
[$sel:hashKeyField:DynamoDBAction'] :: DynamoDBAction -> Text

-- | The value of the hash key (also called the partition key).
[$sel:hashKeyValue:DynamoDBAction'] :: DynamoDBAction -> Text

-- | The name of the DynamoDB table. The <tt>tableName</tt> value must
--   match the table name of the target DynamoDB table.
[$sel:tableName:DynamoDBAction'] :: DynamoDBAction -> Text

-- | Create a value of <a>DynamoDBAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hashKeyType:DynamoDBAction'</a>,
--   <a>dynamoDBAction_hashKeyType</a> - The data type for the hash key
--   (also called the partition key). You can specify the following values:
--   
--   <ul>
--   <li><tt>'STRING'</tt> - The hash key is a string.</li>
--   <li><tt>'NUMBER'</tt> - The hash key is a number.</li>
--   </ul>
--   
--   If you don't specify <tt>hashKeyType</tt>, the default value is
--   <tt>'STRING'</tt>.
--   
--   <a>$sel:operation:DynamoDBAction'</a>, <a>dynamoDBAction_operation</a>
--   - The type of operation to perform. You can specify the following
--   values:
--   
--   <ul>
--   <li><tt>'INSERT'</tt> - Insert data as a new item into the DynamoDB
--   table. This item uses the specified hash key as a partition key. If
--   you specified a range key, the item uses the range key as a sort
--   key.</li>
--   <li><tt>'UPDATE'</tt> - Update an existing item of the DynamoDB table
--   with new data. This item's partition key must match the specified hash
--   key. If you specified a range key, the range key must match the item's
--   sort key.</li>
--   <li><tt>'DELETE'</tt> - Delete an existing item of the DynamoDB table.
--   This item's partition key must match the specified hash key. If you
--   specified a range key, the range key must match the item's sort
--   key.</li>
--   </ul>
--   
--   If you don't specify this parameter, AWS IoT Events triggers the
--   <tt>'INSERT'</tt> operation.
--   
--   <a>$sel:rangeKeyType:DynamoDBAction'</a>,
--   <a>dynamoDBAction_rangeKeyType</a> - The data type for the range key
--   (also called the sort key), You can specify the following values:
--   
--   <ul>
--   <li><tt>'STRING'</tt> - The range key is a string.</li>
--   <li><tt>'NUMBER'</tt> - The range key is number.</li>
--   </ul>
--   
--   If you don't specify <tt>rangeKeyField</tt>, the default value is
--   <tt>'STRING'</tt>.
--   
--   <a>$sel:payload:DynamoDBAction'</a>, <a>dynamoDBAction_payload</a> -
--   Undocumented member.
--   
--   <a>$sel:payloadField:DynamoDBAction'</a>,
--   <a>dynamoDBAction_payloadField</a> - The name of the DynamoDB column
--   that receives the action payload.
--   
--   If you don't specify this parameter, the name of the DynamoDB column
--   is <tt>payload</tt>.
--   
--   <a>$sel:rangeKeyField:DynamoDBAction'</a>,
--   <a>dynamoDBAction_rangeKeyField</a> - The name of the range key (also
--   called the sort key). The <tt>rangeKeyField</tt> value must match the
--   sort key of the target DynamoDB table.
--   
--   <a>$sel:rangeKeyValue:DynamoDBAction'</a>,
--   <a>dynamoDBAction_rangeKeyValue</a> - The value of the range key (also
--   called the sort key).
--   
--   <a>$sel:hashKeyField:DynamoDBAction'</a>,
--   <a>dynamoDBAction_hashKeyField</a> - The name of the hash key (also
--   called the partition key). The <tt>hashKeyField</tt> value must match
--   the partition key of the target DynamoDB table.
--   
--   <a>$sel:hashKeyValue:DynamoDBAction'</a>,
--   <a>dynamoDBAction_hashKeyValue</a> - The value of the hash key (also
--   called the partition key).
--   
--   <a>$sel:tableName:DynamoDBAction'</a>, <a>dynamoDBAction_tableName</a>
--   - The name of the DynamoDB table. The <tt>tableName</tt> value must
--   match the table name of the target DynamoDB table.
newDynamoDBAction :: Text -> Text -> Text -> DynamoDBAction

-- | The data type for the hash key (also called the partition key). You
--   can specify the following values:
--   
--   <ul>
--   <li><tt>'STRING'</tt> - The hash key is a string.</li>
--   <li><tt>'NUMBER'</tt> - The hash key is a number.</li>
--   </ul>
--   
--   If you don't specify <tt>hashKeyType</tt>, the default value is
--   <tt>'STRING'</tt>.
dynamoDBAction_hashKeyType :: Lens' DynamoDBAction (Maybe Text)

-- | The type of operation to perform. You can specify the following
--   values:
--   
--   <ul>
--   <li><tt>'INSERT'</tt> - Insert data as a new item into the DynamoDB
--   table. This item uses the specified hash key as a partition key. If
--   you specified a range key, the item uses the range key as a sort
--   key.</li>
--   <li><tt>'UPDATE'</tt> - Update an existing item of the DynamoDB table
--   with new data. This item's partition key must match the specified hash
--   key. If you specified a range key, the range key must match the item's
--   sort key.</li>
--   <li><tt>'DELETE'</tt> - Delete an existing item of the DynamoDB table.
--   This item's partition key must match the specified hash key. If you
--   specified a range key, the range key must match the item's sort
--   key.</li>
--   </ul>
--   
--   If you don't specify this parameter, AWS IoT Events triggers the
--   <tt>'INSERT'</tt> operation.
dynamoDBAction_operation :: Lens' DynamoDBAction (Maybe Text)

-- | The data type for the range key (also called the sort key), You can
--   specify the following values:
--   
--   <ul>
--   <li><tt>'STRING'</tt> - The range key is a string.</li>
--   <li><tt>'NUMBER'</tt> - The range key is number.</li>
--   </ul>
--   
--   If you don't specify <tt>rangeKeyField</tt>, the default value is
--   <tt>'STRING'</tt>.
dynamoDBAction_rangeKeyType :: Lens' DynamoDBAction (Maybe Text)

-- | Undocumented member.
dynamoDBAction_payload :: Lens' DynamoDBAction (Maybe Payload)

-- | The name of the DynamoDB column that receives the action payload.
--   
--   If you don't specify this parameter, the name of the DynamoDB column
--   is <tt>payload</tt>.
dynamoDBAction_payloadField :: Lens' DynamoDBAction (Maybe Text)

-- | The name of the range key (also called the sort key). The
--   <tt>rangeKeyField</tt> value must match the sort key of the target
--   DynamoDB table.
dynamoDBAction_rangeKeyField :: Lens' DynamoDBAction (Maybe Text)

-- | The value of the range key (also called the sort key).
dynamoDBAction_rangeKeyValue :: Lens' DynamoDBAction (Maybe Text)

-- | The name of the hash key (also called the partition key). The
--   <tt>hashKeyField</tt> value must match the partition key of the target
--   DynamoDB table.
dynamoDBAction_hashKeyField :: Lens' DynamoDBAction Text

-- | The value of the hash key (also called the partition key).
dynamoDBAction_hashKeyValue :: Lens' DynamoDBAction Text

-- | The name of the DynamoDB table. The <tt>tableName</tt> value must
--   match the table name of the target DynamoDB table.
dynamoDBAction_tableName :: Lens' DynamoDBAction Text
instance GHC.Generics.Generic Amazonka.IoTEvents.Types.DynamoDBAction.DynamoDBAction
instance GHC.Show.Show Amazonka.IoTEvents.Types.DynamoDBAction.DynamoDBAction
instance GHC.Read.Read Amazonka.IoTEvents.Types.DynamoDBAction.DynamoDBAction
instance GHC.Classes.Eq Amazonka.IoTEvents.Types.DynamoDBAction.DynamoDBAction
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEvents.Types.DynamoDBAction.DynamoDBAction
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.Types.DynamoDBAction.DynamoDBAction
instance Control.DeepSeq.NFData Amazonka.IoTEvents.Types.DynamoDBAction.DynamoDBAction
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEvents.Types.DynamoDBAction.DynamoDBAction


module Amazonka.IoTEvents.Types.ResetTimerAction

-- | Information required to reset the timer. The timer is reset to the
--   previously evaluated result of the duration. The duration expression
--   isn't reevaluated when you reset the timer.
--   
--   <i>See:</i> <a>newResetTimerAction</a> smart constructor.
data ResetTimerAction
ResetTimerAction' :: Text -> ResetTimerAction

-- | The name of the timer to reset.
[$sel:timerName:ResetTimerAction'] :: ResetTimerAction -> Text

-- | Create a value of <a>ResetTimerAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timerName:ResetTimerAction'</a>,
--   <a>resetTimerAction_timerName</a> - The name of the timer to reset.
newResetTimerAction :: Text -> ResetTimerAction

-- | The name of the timer to reset.
resetTimerAction_timerName :: Lens' ResetTimerAction Text
instance GHC.Generics.Generic Amazonka.IoTEvents.Types.ResetTimerAction.ResetTimerAction
instance GHC.Show.Show Amazonka.IoTEvents.Types.ResetTimerAction.ResetTimerAction
instance GHC.Read.Read Amazonka.IoTEvents.Types.ResetTimerAction.ResetTimerAction
instance GHC.Classes.Eq Amazonka.IoTEvents.Types.ResetTimerAction.ResetTimerAction
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEvents.Types.ResetTimerAction.ResetTimerAction
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.Types.ResetTimerAction.ResetTimerAction
instance Control.DeepSeq.NFData Amazonka.IoTEvents.Types.ResetTimerAction.ResetTimerAction
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEvents.Types.ResetTimerAction.ResetTimerAction


module Amazonka.IoTEvents.Types.RoutedResource

-- | Contains information about the routed resource.
--   
--   <i>See:</i> <a>newRoutedResource</a> smart constructor.
data RoutedResource
RoutedResource' :: Maybe Text -> Maybe Text -> RoutedResource

-- | The ARN of the routed resource. For more information, see <a>Amazon
--   Resource Names (ARNs)</a> in the <i>AWS General Reference</i>.
[$sel:arn:RoutedResource'] :: RoutedResource -> Maybe Text

-- | The name of the routed resource.
[$sel:name:RoutedResource'] :: RoutedResource -> Maybe Text

-- | Create a value of <a>RoutedResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:RoutedResource'</a>, <a>routedResource_arn</a> - The ARN
--   of the routed resource. For more information, see <a>Amazon Resource
--   Names (ARNs)</a> in the <i>AWS General Reference</i>.
--   
--   <a>$sel:name:RoutedResource'</a>, <a>routedResource_name</a> - The
--   name of the routed resource.
newRoutedResource :: RoutedResource

-- | The ARN of the routed resource. For more information, see <a>Amazon
--   Resource Names (ARNs)</a> in the <i>AWS General Reference</i>.
routedResource_arn :: Lens' RoutedResource (Maybe Text)

-- | The name of the routed resource.
routedResource_name :: Lens' RoutedResource (Maybe Text)
instance GHC.Generics.Generic Amazonka.IoTEvents.Types.RoutedResource.RoutedResource
instance GHC.Show.Show Amazonka.IoTEvents.Types.RoutedResource.RoutedResource
instance GHC.Read.Read Amazonka.IoTEvents.Types.RoutedResource.RoutedResource
instance GHC.Classes.Eq Amazonka.IoTEvents.Types.RoutedResource.RoutedResource
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEvents.Types.RoutedResource.RoutedResource
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.Types.RoutedResource.RoutedResource
instance Control.DeepSeq.NFData Amazonka.IoTEvents.Types.RoutedResource.RoutedResource


module Amazonka.IoTEvents.Types.SNSTopicPublishAction

-- | Information required to publish the Amazon SNS message.
--   
--   <i>See:</i> <a>newSNSTopicPublishAction</a> smart constructor.
data SNSTopicPublishAction
SNSTopicPublishAction' :: Maybe Payload -> Text -> SNSTopicPublishAction

-- | You can configure the action payload when you send a message as an
--   Amazon SNS push notification.
[$sel:payload:SNSTopicPublishAction'] :: SNSTopicPublishAction -> Maybe Payload

-- | The ARN of the Amazon SNS target where the message is sent.
[$sel:targetArn:SNSTopicPublishAction'] :: SNSTopicPublishAction -> Text

-- | Create a value of <a>SNSTopicPublishAction</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:payload:SNSTopicPublishAction'</a>,
--   <a>sNSTopicPublishAction_payload</a> - You can configure the action
--   payload when you send a message as an Amazon SNS push notification.
--   
--   <a>$sel:targetArn:SNSTopicPublishAction'</a>,
--   <a>sNSTopicPublishAction_targetArn</a> - The ARN of the Amazon SNS
--   target where the message is sent.
newSNSTopicPublishAction :: Text -> SNSTopicPublishAction

-- | You can configure the action payload when you send a message as an
--   Amazon SNS push notification.
sNSTopicPublishAction_payload :: Lens' SNSTopicPublishAction (Maybe Payload)

-- | The ARN of the Amazon SNS target where the message is sent.
sNSTopicPublishAction_targetArn :: Lens' SNSTopicPublishAction Text
instance GHC.Generics.Generic Amazonka.IoTEvents.Types.SNSTopicPublishAction.SNSTopicPublishAction
instance GHC.Show.Show Amazonka.IoTEvents.Types.SNSTopicPublishAction.SNSTopicPublishAction
instance GHC.Read.Read Amazonka.IoTEvents.Types.SNSTopicPublishAction.SNSTopicPublishAction
instance GHC.Classes.Eq Amazonka.IoTEvents.Types.SNSTopicPublishAction.SNSTopicPublishAction
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEvents.Types.SNSTopicPublishAction.SNSTopicPublishAction
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.Types.SNSTopicPublishAction.SNSTopicPublishAction
instance Control.DeepSeq.NFData Amazonka.IoTEvents.Types.SNSTopicPublishAction.SNSTopicPublishAction
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEvents.Types.SNSTopicPublishAction.SNSTopicPublishAction


module Amazonka.IoTEvents.Types.SSOIdentity

-- | Contains information about your identity source in AWS Single Sign-On.
--   For more information, see the <a>AWS Single Sign-On User Guide</a>.
--   
--   <i>See:</i> <a>newSSOIdentity</a> smart constructor.
data SSOIdentity
SSOIdentity' :: Maybe Text -> Text -> SSOIdentity

-- | The user ID.
[$sel:userId:SSOIdentity'] :: SSOIdentity -> Maybe Text

-- | The ID of the AWS SSO identity store.
[$sel:identityStoreId:SSOIdentity'] :: SSOIdentity -> Text

-- | Create a value of <a>SSOIdentity</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userId:SSOIdentity'</a>, <a>sSOIdentity_userId</a> - The user
--   ID.
--   
--   <a>$sel:identityStoreId:SSOIdentity'</a>,
--   <a>sSOIdentity_identityStoreId</a> - The ID of the AWS SSO identity
--   store.
newSSOIdentity :: Text -> SSOIdentity

-- | The user ID.
sSOIdentity_userId :: Lens' SSOIdentity (Maybe Text)

-- | The ID of the AWS SSO identity store.
sSOIdentity_identityStoreId :: Lens' SSOIdentity Text
instance GHC.Generics.Generic Amazonka.IoTEvents.Types.SSOIdentity.SSOIdentity
instance GHC.Show.Show Amazonka.IoTEvents.Types.SSOIdentity.SSOIdentity
instance GHC.Read.Read Amazonka.IoTEvents.Types.SSOIdentity.SSOIdentity
instance GHC.Classes.Eq Amazonka.IoTEvents.Types.SSOIdentity.SSOIdentity
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEvents.Types.SSOIdentity.SSOIdentity
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.Types.SSOIdentity.SSOIdentity
instance Control.DeepSeq.NFData Amazonka.IoTEvents.Types.SSOIdentity.SSOIdentity
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEvents.Types.SSOIdentity.SSOIdentity


module Amazonka.IoTEvents.Types.RecipientDetail

-- | The information that identifies the recipient.
--   
--   <i>See:</i> <a>newRecipientDetail</a> smart constructor.
data RecipientDetail
RecipientDetail' :: Maybe SSOIdentity -> RecipientDetail

-- | The AWS Single Sign-On (AWS SSO) authentication information.
[$sel:ssoIdentity:RecipientDetail'] :: RecipientDetail -> Maybe SSOIdentity

-- | Create a value of <a>RecipientDetail</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ssoIdentity:RecipientDetail'</a>,
--   <a>recipientDetail_ssoIdentity</a> - The AWS Single Sign-On (AWS SSO)
--   authentication information.
newRecipientDetail :: RecipientDetail

-- | The AWS Single Sign-On (AWS SSO) authentication information.
recipientDetail_ssoIdentity :: Lens' RecipientDetail (Maybe SSOIdentity)
instance GHC.Generics.Generic Amazonka.IoTEvents.Types.RecipientDetail.RecipientDetail
instance GHC.Show.Show Amazonka.IoTEvents.Types.RecipientDetail.RecipientDetail
instance GHC.Read.Read Amazonka.IoTEvents.Types.RecipientDetail.RecipientDetail
instance GHC.Classes.Eq Amazonka.IoTEvents.Types.RecipientDetail.RecipientDetail
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEvents.Types.RecipientDetail.RecipientDetail
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.Types.RecipientDetail.RecipientDetail
instance Control.DeepSeq.NFData Amazonka.IoTEvents.Types.RecipientDetail.RecipientDetail
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEvents.Types.RecipientDetail.RecipientDetail


module Amazonka.IoTEvents.Types.SMSConfiguration

-- | Contains the configuration information of SMS notifications.
--   
--   <i>See:</i> <a>newSMSConfiguration</a> smart constructor.
data SMSConfiguration
SMSConfiguration' :: Maybe Text -> Maybe Text -> NonEmpty RecipientDetail -> SMSConfiguration

-- | The message that you want to send. The message can be up to 200
--   characters.
[$sel:additionalMessage:SMSConfiguration'] :: SMSConfiguration -> Maybe Text

-- | The sender ID.
[$sel:senderId:SMSConfiguration'] :: SMSConfiguration -> Maybe Text

-- | Specifies one or more recipients who receive the message.
--   
--   You must <a>add the users that receive SMS messages to your AWS SSO
--   store</a>.
[$sel:recipients:SMSConfiguration'] :: SMSConfiguration -> NonEmpty RecipientDetail

-- | Create a value of <a>SMSConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:additionalMessage:SMSConfiguration'</a>,
--   <a>sMSConfiguration_additionalMessage</a> - The message that you want
--   to send. The message can be up to 200 characters.
--   
--   <a>$sel:senderId:SMSConfiguration'</a>,
--   <a>sMSConfiguration_senderId</a> - The sender ID.
--   
--   <a>$sel:recipients:SMSConfiguration'</a>,
--   <a>sMSConfiguration_recipients</a> - Specifies one or more recipients
--   who receive the message.
--   
--   You must <a>add the users that receive SMS messages to your AWS SSO
--   store</a>.
newSMSConfiguration :: NonEmpty RecipientDetail -> SMSConfiguration

-- | The message that you want to send. The message can be up to 200
--   characters.
sMSConfiguration_additionalMessage :: Lens' SMSConfiguration (Maybe Text)

-- | The sender ID.
sMSConfiguration_senderId :: Lens' SMSConfiguration (Maybe Text)

-- | Specifies one or more recipients who receive the message.
--   
--   You must <a>add the users that receive SMS messages to your AWS SSO
--   store</a>.
sMSConfiguration_recipients :: Lens' SMSConfiguration (NonEmpty RecipientDetail)
instance GHC.Generics.Generic Amazonka.IoTEvents.Types.SMSConfiguration.SMSConfiguration
instance GHC.Show.Show Amazonka.IoTEvents.Types.SMSConfiguration.SMSConfiguration
instance GHC.Read.Read Amazonka.IoTEvents.Types.SMSConfiguration.SMSConfiguration
instance GHC.Classes.Eq Amazonka.IoTEvents.Types.SMSConfiguration.SMSConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEvents.Types.SMSConfiguration.SMSConfiguration
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.Types.SMSConfiguration.SMSConfiguration
instance Control.DeepSeq.NFData Amazonka.IoTEvents.Types.SMSConfiguration.SMSConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEvents.Types.SMSConfiguration.SMSConfiguration


module Amazonka.IoTEvents.Types.EmailRecipients

-- | Contains the information of one or more recipients who receive the
--   emails.
--   
--   You must <a>add the users that receive emails to your AWS SSO
--   store</a>.
--   
--   <i>See:</i> <a>newEmailRecipients</a> smart constructor.
data EmailRecipients
EmailRecipients' :: Maybe (NonEmpty RecipientDetail) -> EmailRecipients

-- | Specifies one or more recipients who receive the email.
[$sel:to:EmailRecipients'] :: EmailRecipients -> Maybe (NonEmpty RecipientDetail)

-- | Create a value of <a>EmailRecipients</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:to:EmailRecipients'</a>, <a>emailRecipients_to</a> - Specifies
--   one or more recipients who receive the email.
newEmailRecipients :: EmailRecipients

-- | Specifies one or more recipients who receive the email.
emailRecipients_to :: Lens' EmailRecipients (Maybe (NonEmpty RecipientDetail))
instance GHC.Generics.Generic Amazonka.IoTEvents.Types.EmailRecipients.EmailRecipients
instance GHC.Show.Show Amazonka.IoTEvents.Types.EmailRecipients.EmailRecipients
instance GHC.Read.Read Amazonka.IoTEvents.Types.EmailRecipients.EmailRecipients
instance GHC.Classes.Eq Amazonka.IoTEvents.Types.EmailRecipients.EmailRecipients
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEvents.Types.EmailRecipients.EmailRecipients
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.Types.EmailRecipients.EmailRecipients
instance Control.DeepSeq.NFData Amazonka.IoTEvents.Types.EmailRecipients.EmailRecipients
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEvents.Types.EmailRecipients.EmailRecipients


module Amazonka.IoTEvents.Types.EmailConfiguration

-- | Contains the configuration information of email notifications.
--   
--   <i>See:</i> <a>newEmailConfiguration</a> smart constructor.
data EmailConfiguration
EmailConfiguration' :: Maybe EmailContent -> Text -> EmailRecipients -> EmailConfiguration

-- | Contains the subject and message of an email.
[$sel:content:EmailConfiguration'] :: EmailConfiguration -> Maybe EmailContent

-- | The email address that sends emails.
--   
--   If you use the AWS IoT Events managed AWS Lambda function to manage
--   your emails, you must <a>verify the email address that sends emails in
--   Amazon SES</a>.
[$sel:from:EmailConfiguration'] :: EmailConfiguration -> Text

-- | Contains the information of one or more recipients who receive the
--   emails.
--   
--   You must <a>add the users that receive emails to your AWS SSO
--   store</a>.
[$sel:recipients:EmailConfiguration'] :: EmailConfiguration -> EmailRecipients

-- | Create a value of <a>EmailConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:content:EmailConfiguration'</a>,
--   <a>emailConfiguration_content</a> - Contains the subject and message
--   of an email.
--   
--   <a>$sel:from:EmailConfiguration'</a>, <a>emailConfiguration_from</a> -
--   The email address that sends emails.
--   
--   If you use the AWS IoT Events managed AWS Lambda function to manage
--   your emails, you must <a>verify the email address that sends emails in
--   Amazon SES</a>.
--   
--   <a>$sel:recipients:EmailConfiguration'</a>,
--   <a>emailConfiguration_recipients</a> - Contains the information of one
--   or more recipients who receive the emails.
--   
--   You must <a>add the users that receive emails to your AWS SSO
--   store</a>.
newEmailConfiguration :: Text -> EmailRecipients -> EmailConfiguration

-- | Contains the subject and message of an email.
emailConfiguration_content :: Lens' EmailConfiguration (Maybe EmailContent)

-- | The email address that sends emails.
--   
--   If you use the AWS IoT Events managed AWS Lambda function to manage
--   your emails, you must <a>verify the email address that sends emails in
--   Amazon SES</a>.
emailConfiguration_from :: Lens' EmailConfiguration Text

-- | Contains the information of one or more recipients who receive the
--   emails.
--   
--   You must <a>add the users that receive emails to your AWS SSO
--   store</a>.
emailConfiguration_recipients :: Lens' EmailConfiguration EmailRecipients
instance GHC.Generics.Generic Amazonka.IoTEvents.Types.EmailConfiguration.EmailConfiguration
instance GHC.Show.Show Amazonka.IoTEvents.Types.EmailConfiguration.EmailConfiguration
instance GHC.Read.Read Amazonka.IoTEvents.Types.EmailConfiguration.EmailConfiguration
instance GHC.Classes.Eq Amazonka.IoTEvents.Types.EmailConfiguration.EmailConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEvents.Types.EmailConfiguration.EmailConfiguration
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.Types.EmailConfiguration.EmailConfiguration
instance Control.DeepSeq.NFData Amazonka.IoTEvents.Types.EmailConfiguration.EmailConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEvents.Types.EmailConfiguration.EmailConfiguration


module Amazonka.IoTEvents.Types.NotificationAction

-- | Contains the notification settings of an alarm model. The settings
--   apply to all alarms that were created based on this alarm model.
--   
--   <i>See:</i> <a>newNotificationAction</a> smart constructor.
data NotificationAction
NotificationAction' :: Maybe (NonEmpty EmailConfiguration) -> Maybe (NonEmpty SMSConfiguration) -> NotificationTargetActions -> NotificationAction

-- | Contains the configuration information of email notifications.
[$sel:emailConfigurations:NotificationAction'] :: NotificationAction -> Maybe (NonEmpty EmailConfiguration)

-- | Contains the configuration information of SMS notifications.
[$sel:smsConfigurations:NotificationAction'] :: NotificationAction -> Maybe (NonEmpty SMSConfiguration)

-- | Specifies an AWS Lambda function to manage alarm notifications. You
--   can create one or use the <a>AWS Lambda function provided by AWS IoT
--   Events</a>.
[$sel:action:NotificationAction'] :: NotificationAction -> NotificationTargetActions

-- | Create a value of <a>NotificationAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:emailConfigurations:NotificationAction'</a>,
--   <a>notificationAction_emailConfigurations</a> - Contains the
--   configuration information of email notifications.
--   
--   <a>$sel:smsConfigurations:NotificationAction'</a>,
--   <a>notificationAction_smsConfigurations</a> - Contains the
--   configuration information of SMS notifications.
--   
--   <a>$sel:action:NotificationAction'</a>,
--   <a>notificationAction_action</a> - Specifies an AWS Lambda function to
--   manage alarm notifications. You can create one or use the <a>AWS
--   Lambda function provided by AWS IoT Events</a>.
newNotificationAction :: NotificationTargetActions -> NotificationAction

-- | Contains the configuration information of email notifications.
notificationAction_emailConfigurations :: Lens' NotificationAction (Maybe (NonEmpty EmailConfiguration))

-- | Contains the configuration information of SMS notifications.
notificationAction_smsConfigurations :: Lens' NotificationAction (Maybe (NonEmpty SMSConfiguration))

-- | Specifies an AWS Lambda function to manage alarm notifications. You
--   can create one or use the <a>AWS Lambda function provided by AWS IoT
--   Events</a>.
notificationAction_action :: Lens' NotificationAction NotificationTargetActions
instance GHC.Generics.Generic Amazonka.IoTEvents.Types.NotificationAction.NotificationAction
instance GHC.Show.Show Amazonka.IoTEvents.Types.NotificationAction.NotificationAction
instance GHC.Read.Read Amazonka.IoTEvents.Types.NotificationAction.NotificationAction
instance GHC.Classes.Eq Amazonka.IoTEvents.Types.NotificationAction.NotificationAction
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEvents.Types.NotificationAction.NotificationAction
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.Types.NotificationAction.NotificationAction
instance Control.DeepSeq.NFData Amazonka.IoTEvents.Types.NotificationAction.NotificationAction
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEvents.Types.NotificationAction.NotificationAction


module Amazonka.IoTEvents.Types.AlarmNotification

-- | Contains information about one or more notification actions.
--   
--   <i>See:</i> <a>newAlarmNotification</a> smart constructor.
data AlarmNotification
AlarmNotification' :: Maybe (NonEmpty NotificationAction) -> AlarmNotification

-- | Contains the notification settings of an alarm model. The settings
--   apply to all alarms that were created based on this alarm model.
[$sel:notificationActions:AlarmNotification'] :: AlarmNotification -> Maybe (NonEmpty NotificationAction)

-- | Create a value of <a>AlarmNotification</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:notificationActions:AlarmNotification'</a>,
--   <a>alarmNotification_notificationActions</a> - Contains the
--   notification settings of an alarm model. The settings apply to all
--   alarms that were created based on this alarm model.
newAlarmNotification :: AlarmNotification

-- | Contains the notification settings of an alarm model. The settings
--   apply to all alarms that were created based on this alarm model.
alarmNotification_notificationActions :: Lens' AlarmNotification (Maybe (NonEmpty NotificationAction))
instance GHC.Generics.Generic Amazonka.IoTEvents.Types.AlarmNotification.AlarmNotification
instance GHC.Show.Show Amazonka.IoTEvents.Types.AlarmNotification.AlarmNotification
instance GHC.Read.Read Amazonka.IoTEvents.Types.AlarmNotification.AlarmNotification
instance GHC.Classes.Eq Amazonka.IoTEvents.Types.AlarmNotification.AlarmNotification
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEvents.Types.AlarmNotification.AlarmNotification
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.Types.AlarmNotification.AlarmNotification
instance Control.DeepSeq.NFData Amazonka.IoTEvents.Types.AlarmNotification.AlarmNotification
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEvents.Types.AlarmNotification.AlarmNotification


module Amazonka.IoTEvents.Types.SetTimerAction

-- | Information needed to set the timer.
--   
--   <i>See:</i> <a>newSetTimerAction</a> smart constructor.
data SetTimerAction
SetTimerAction' :: Maybe Text -> Maybe Natural -> Text -> SetTimerAction

-- | The duration of the timer, in seconds. You can use a string expression
--   that includes numbers, variables
--   (<tt>$variable.&lt;variable-name&gt;</tt>), and input values
--   (<tt>$input.&lt;input-name&gt;.&lt;path-to-datum&gt;</tt>) as the
--   duration. The range of the duration is 1-31622400 seconds. To ensure
--   accuracy, the minimum duration is 60 seconds. The evaluated result of
--   the duration is rounded down to the nearest whole number.
[$sel:durationExpression:SetTimerAction'] :: SetTimerAction -> Maybe Text

-- | The number of seconds until the timer expires. The minimum value is 60
--   seconds to ensure accuracy. The maximum value is 31622400 seconds.
[$sel:seconds:SetTimerAction'] :: SetTimerAction -> Maybe Natural

-- | The name of the timer.
[$sel:timerName:SetTimerAction'] :: SetTimerAction -> Text

-- | Create a value of <a>SetTimerAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:durationExpression:SetTimerAction'</a>,
--   <a>setTimerAction_durationExpression</a> - The duration of the timer,
--   in seconds. You can use a string expression that includes numbers,
--   variables (<tt>$variable.&lt;variable-name&gt;</tt>), and input values
--   (<tt>$input.&lt;input-name&gt;.&lt;path-to-datum&gt;</tt>) as the
--   duration. The range of the duration is 1-31622400 seconds. To ensure
--   accuracy, the minimum duration is 60 seconds. The evaluated result of
--   the duration is rounded down to the nearest whole number.
--   
--   <a>$sel:seconds:SetTimerAction'</a>, <a>setTimerAction_seconds</a> -
--   The number of seconds until the timer expires. The minimum value is 60
--   seconds to ensure accuracy. The maximum value is 31622400 seconds.
--   
--   <a>$sel:timerName:SetTimerAction'</a>, <a>setTimerAction_timerName</a>
--   - The name of the timer.
newSetTimerAction :: Text -> SetTimerAction

-- | The duration of the timer, in seconds. You can use a string expression
--   that includes numbers, variables
--   (<tt>$variable.&lt;variable-name&gt;</tt>), and input values
--   (<tt>$input.&lt;input-name&gt;.&lt;path-to-datum&gt;</tt>) as the
--   duration. The range of the duration is 1-31622400 seconds. To ensure
--   accuracy, the minimum duration is 60 seconds. The evaluated result of
--   the duration is rounded down to the nearest whole number.
setTimerAction_durationExpression :: Lens' SetTimerAction (Maybe Text)

-- | The number of seconds until the timer expires. The minimum value is 60
--   seconds to ensure accuracy. The maximum value is 31622400 seconds.
setTimerAction_seconds :: Lens' SetTimerAction (Maybe Natural)

-- | The name of the timer.
setTimerAction_timerName :: Lens' SetTimerAction Text
instance GHC.Generics.Generic Amazonka.IoTEvents.Types.SetTimerAction.SetTimerAction
instance GHC.Show.Show Amazonka.IoTEvents.Types.SetTimerAction.SetTimerAction
instance GHC.Read.Read Amazonka.IoTEvents.Types.SetTimerAction.SetTimerAction
instance GHC.Classes.Eq Amazonka.IoTEvents.Types.SetTimerAction.SetTimerAction
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEvents.Types.SetTimerAction.SetTimerAction
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.Types.SetTimerAction.SetTimerAction
instance Control.DeepSeq.NFData Amazonka.IoTEvents.Types.SetTimerAction.SetTimerAction
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEvents.Types.SetTimerAction.SetTimerAction


module Amazonka.IoTEvents.Types.SetVariableAction

-- | Information about the variable and its new value.
--   
--   <i>See:</i> <a>newSetVariableAction</a> smart constructor.
data SetVariableAction
SetVariableAction' :: Text -> Text -> SetVariableAction

-- | The name of the variable.
[$sel:variableName:SetVariableAction'] :: SetVariableAction -> Text

-- | The new value of the variable.
[$sel:value:SetVariableAction'] :: SetVariableAction -> Text

-- | Create a value of <a>SetVariableAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:variableName:SetVariableAction'</a>,
--   <a>setVariableAction_variableName</a> - The name of the variable.
--   
--   <a>$sel:value:SetVariableAction'</a>, <a>setVariableAction_value</a> -
--   The new value of the variable.
newSetVariableAction :: Text -> Text -> SetVariableAction

-- | The name of the variable.
setVariableAction_variableName :: Lens' SetVariableAction Text

-- | The new value of the variable.
setVariableAction_value :: Lens' SetVariableAction Text
instance GHC.Generics.Generic Amazonka.IoTEvents.Types.SetVariableAction.SetVariableAction
instance GHC.Show.Show Amazonka.IoTEvents.Types.SetVariableAction.SetVariableAction
instance GHC.Read.Read Amazonka.IoTEvents.Types.SetVariableAction.SetVariableAction
instance GHC.Classes.Eq Amazonka.IoTEvents.Types.SetVariableAction.SetVariableAction
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEvents.Types.SetVariableAction.SetVariableAction
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.Types.SetVariableAction.SetVariableAction
instance Control.DeepSeq.NFData Amazonka.IoTEvents.Types.SetVariableAction.SetVariableAction
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEvents.Types.SetVariableAction.SetVariableAction


module Amazonka.IoTEvents.Types.SimpleRule

-- | A rule that compares an input property value to a threshold value with
--   a comparison operator.
--   
--   <i>See:</i> <a>newSimpleRule</a> smart constructor.
data SimpleRule
SimpleRule' :: Text -> ComparisonOperator -> Text -> SimpleRule

-- | The value on the left side of the comparison operator. You can specify
--   an AWS IoT Events input attribute as an input property.
[$sel:inputProperty:SimpleRule'] :: SimpleRule -> Text

-- | The comparison operator.
[$sel:comparisonOperator:SimpleRule'] :: SimpleRule -> ComparisonOperator

-- | The value on the right side of the comparison operator. You can enter
--   a number or specify an AWS IoT Events input attribute.
[$sel:threshold:SimpleRule'] :: SimpleRule -> Text

-- | Create a value of <a>SimpleRule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputProperty:SimpleRule'</a>, <a>simpleRule_inputProperty</a>
--   - The value on the left side of the comparison operator. You can
--   specify an AWS IoT Events input attribute as an input property.
--   
--   <a>$sel:comparisonOperator:SimpleRule'</a>,
--   <a>simpleRule_comparisonOperator</a> - The comparison operator.
--   
--   <a>$sel:threshold:SimpleRule'</a>, <a>simpleRule_threshold</a> - The
--   value on the right side of the comparison operator. You can enter a
--   number or specify an AWS IoT Events input attribute.
newSimpleRule :: Text -> ComparisonOperator -> Text -> SimpleRule

-- | The value on the left side of the comparison operator. You can specify
--   an AWS IoT Events input attribute as an input property.
simpleRule_inputProperty :: Lens' SimpleRule Text

-- | The comparison operator.
simpleRule_comparisonOperator :: Lens' SimpleRule ComparisonOperator

-- | The value on the right side of the comparison operator. You can enter
--   a number or specify an AWS IoT Events input attribute.
simpleRule_threshold :: Lens' SimpleRule Text
instance GHC.Generics.Generic Amazonka.IoTEvents.Types.SimpleRule.SimpleRule
instance GHC.Show.Show Amazonka.IoTEvents.Types.SimpleRule.SimpleRule
instance GHC.Read.Read Amazonka.IoTEvents.Types.SimpleRule.SimpleRule
instance GHC.Classes.Eq Amazonka.IoTEvents.Types.SimpleRule.SimpleRule
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEvents.Types.SimpleRule.SimpleRule
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.Types.SimpleRule.SimpleRule
instance Control.DeepSeq.NFData Amazonka.IoTEvents.Types.SimpleRule.SimpleRule
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEvents.Types.SimpleRule.SimpleRule


module Amazonka.IoTEvents.Types.AlarmRule

-- | Defines when your alarm is invoked.
--   
--   <i>See:</i> <a>newAlarmRule</a> smart constructor.
data AlarmRule
AlarmRule' :: Maybe SimpleRule -> AlarmRule

-- | A rule that compares an input property value to a threshold value with
--   a comparison operator.
[$sel:simpleRule:AlarmRule'] :: AlarmRule -> Maybe SimpleRule

-- | Create a value of <a>AlarmRule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:simpleRule:AlarmRule'</a>, <a>alarmRule_simpleRule</a> - A
--   rule that compares an input property value to a threshold value with a
--   comparison operator.
newAlarmRule :: AlarmRule

-- | A rule that compares an input property value to a threshold value with
--   a comparison operator.
alarmRule_simpleRule :: Lens' AlarmRule (Maybe SimpleRule)
instance GHC.Generics.Generic Amazonka.IoTEvents.Types.AlarmRule.AlarmRule
instance GHC.Show.Show Amazonka.IoTEvents.Types.AlarmRule.AlarmRule
instance GHC.Read.Read Amazonka.IoTEvents.Types.AlarmRule.AlarmRule
instance GHC.Classes.Eq Amazonka.IoTEvents.Types.AlarmRule.AlarmRule
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEvents.Types.AlarmRule.AlarmRule
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.Types.AlarmRule.AlarmRule
instance Control.DeepSeq.NFData Amazonka.IoTEvents.Types.AlarmRule.AlarmRule
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEvents.Types.AlarmRule.AlarmRule


module Amazonka.IoTEvents.Types.SqsAction

-- | Sends information about the detector model instance and the event that
--   triggered the action to an Amazon SQS queue.
--   
--   <i>See:</i> <a>newSqsAction</a> smart constructor.
data SqsAction
SqsAction' :: Maybe Payload -> Maybe Bool -> Text -> SqsAction

-- | You can configure the action payload when you send a message to an
--   Amazon SQS queue.
[$sel:payload:SqsAction'] :: SqsAction -> Maybe Payload

-- | Set this to TRUE if you want the data to be base-64 encoded before it
--   is written to the queue. Otherwise, set this to FALSE.
[$sel:useBase64:SqsAction'] :: SqsAction -> Maybe Bool

-- | The URL of the SQS queue where the data is written.
[$sel:queueUrl:SqsAction'] :: SqsAction -> Text

-- | Create a value of <a>SqsAction</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:payload:SqsAction'</a>, <a>sqsAction_payload</a> - You can
--   configure the action payload when you send a message to an Amazon SQS
--   queue.
--   
--   <a>$sel:useBase64:SqsAction'</a>, <a>sqsAction_useBase64</a> - Set
--   this to TRUE if you want the data to be base-64 encoded before it is
--   written to the queue. Otherwise, set this to FALSE.
--   
--   <a>$sel:queueUrl:SqsAction'</a>, <a>sqsAction_queueUrl</a> - The URL
--   of the SQS queue where the data is written.
newSqsAction :: Text -> SqsAction

-- | You can configure the action payload when you send a message to an
--   Amazon SQS queue.
sqsAction_payload :: Lens' SqsAction (Maybe Payload)

-- | Set this to TRUE if you want the data to be base-64 encoded before it
--   is written to the queue. Otherwise, set this to FALSE.
sqsAction_useBase64 :: Lens' SqsAction (Maybe Bool)

-- | The URL of the SQS queue where the data is written.
sqsAction_queueUrl :: Lens' SqsAction Text
instance GHC.Generics.Generic Amazonka.IoTEvents.Types.SqsAction.SqsAction
instance GHC.Show.Show Amazonka.IoTEvents.Types.SqsAction.SqsAction
instance GHC.Read.Read Amazonka.IoTEvents.Types.SqsAction.SqsAction
instance GHC.Classes.Eq Amazonka.IoTEvents.Types.SqsAction.SqsAction
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEvents.Types.SqsAction.SqsAction
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.Types.SqsAction.SqsAction
instance Control.DeepSeq.NFData Amazonka.IoTEvents.Types.SqsAction.SqsAction
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEvents.Types.SqsAction.SqsAction


module Amazonka.IoTEvents.Types.AlarmAction

-- | Specifies one of the following actions to receive notifications when
--   the alarm state changes.
--   
--   <i>See:</i> <a>newAlarmAction</a> smart constructor.
data AlarmAction
AlarmAction' :: Maybe IotTopicPublishAction -> Maybe DynamoDBv2Action -> Maybe SNSTopicPublishAction -> Maybe DynamoDBAction -> Maybe FirehoseAction -> Maybe IotSiteWiseAction -> Maybe LambdaAction -> Maybe IotEventsAction -> Maybe SqsAction -> AlarmAction
[$sel:iotTopicPublish:AlarmAction'] :: AlarmAction -> Maybe IotTopicPublishAction
[$sel:dynamoDBv2:AlarmAction'] :: AlarmAction -> Maybe DynamoDBv2Action
[$sel:sns:AlarmAction'] :: AlarmAction -> Maybe SNSTopicPublishAction
[$sel:dynamoDB:AlarmAction'] :: AlarmAction -> Maybe DynamoDBAction
[$sel:firehose:AlarmAction'] :: AlarmAction -> Maybe FirehoseAction
[$sel:iotSiteWise:AlarmAction'] :: AlarmAction -> Maybe IotSiteWiseAction
[$sel:lambda:AlarmAction'] :: AlarmAction -> Maybe LambdaAction
[$sel:iotEvents:AlarmAction'] :: AlarmAction -> Maybe IotEventsAction
[$sel:sqs:AlarmAction'] :: AlarmAction -> Maybe SqsAction

-- | Create a value of <a>AlarmAction</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:iotTopicPublish:AlarmAction'</a>,
--   <a>alarmAction_iotTopicPublish</a> - Undocumented member.
--   
--   <a>$sel:dynamoDBv2:AlarmAction'</a>, <a>alarmAction_dynamoDBv2</a> -
--   Undocumented member.
--   
--   <a>$sel:sns:AlarmAction'</a>, <a>alarmAction_sns</a> - Undocumented
--   member.
--   
--   <a>$sel:dynamoDB:AlarmAction'</a>, <a>alarmAction_dynamoDB</a> -
--   Undocumented member.
--   
--   <a>$sel:firehose:AlarmAction'</a>, <a>alarmAction_firehose</a> -
--   Undocumented member.
--   
--   <a>$sel:iotSiteWise:AlarmAction'</a>, <a>alarmAction_iotSiteWise</a> -
--   Undocumented member.
--   
--   <a>$sel:lambda:AlarmAction'</a>, <a>alarmAction_lambda</a> -
--   Undocumented member.
--   
--   <a>$sel:iotEvents:AlarmAction'</a>, <a>alarmAction_iotEvents</a> -
--   Undocumented member.
--   
--   <a>$sel:sqs:AlarmAction'</a>, <a>alarmAction_sqs</a> - Undocumented
--   member.
newAlarmAction :: AlarmAction

-- | Undocumented member.
alarmAction_iotTopicPublish :: Lens' AlarmAction (Maybe IotTopicPublishAction)

-- | Undocumented member.
alarmAction_dynamoDBv2 :: Lens' AlarmAction (Maybe DynamoDBv2Action)

-- | Undocumented member.
alarmAction_sns :: Lens' AlarmAction (Maybe SNSTopicPublishAction)

-- | Undocumented member.
alarmAction_dynamoDB :: Lens' AlarmAction (Maybe DynamoDBAction)

-- | Undocumented member.
alarmAction_firehose :: Lens' AlarmAction (Maybe FirehoseAction)

-- | Undocumented member.
alarmAction_iotSiteWise :: Lens' AlarmAction (Maybe IotSiteWiseAction)

-- | Undocumented member.
alarmAction_lambda :: Lens' AlarmAction (Maybe LambdaAction)

-- | Undocumented member.
alarmAction_iotEvents :: Lens' AlarmAction (Maybe IotEventsAction)

-- | Undocumented member.
alarmAction_sqs :: Lens' AlarmAction (Maybe SqsAction)
instance GHC.Generics.Generic Amazonka.IoTEvents.Types.AlarmAction.AlarmAction
instance GHC.Show.Show Amazonka.IoTEvents.Types.AlarmAction.AlarmAction
instance GHC.Read.Read Amazonka.IoTEvents.Types.AlarmAction.AlarmAction
instance GHC.Classes.Eq Amazonka.IoTEvents.Types.AlarmAction.AlarmAction
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEvents.Types.AlarmAction.AlarmAction
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.Types.AlarmAction.AlarmAction
instance Control.DeepSeq.NFData Amazonka.IoTEvents.Types.AlarmAction.AlarmAction
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEvents.Types.AlarmAction.AlarmAction


module Amazonka.IoTEvents.Types.AlarmEventActions

-- | Contains information about one or more alarm actions.
--   
--   <i>See:</i> <a>newAlarmEventActions</a> smart constructor.
data AlarmEventActions
AlarmEventActions' :: Maybe [AlarmAction] -> AlarmEventActions

-- | Specifies one or more supported actions to receive notifications when
--   the alarm state changes.
[$sel:alarmActions:AlarmEventActions'] :: AlarmEventActions -> Maybe [AlarmAction]

-- | Create a value of <a>AlarmEventActions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:alarmActions:AlarmEventActions'</a>,
--   <a>alarmEventActions_alarmActions</a> - Specifies one or more
--   supported actions to receive notifications when the alarm state
--   changes.
newAlarmEventActions :: AlarmEventActions

-- | Specifies one or more supported actions to receive notifications when
--   the alarm state changes.
alarmEventActions_alarmActions :: Lens' AlarmEventActions (Maybe [AlarmAction])
instance GHC.Generics.Generic Amazonka.IoTEvents.Types.AlarmEventActions.AlarmEventActions
instance GHC.Show.Show Amazonka.IoTEvents.Types.AlarmEventActions.AlarmEventActions
instance GHC.Read.Read Amazonka.IoTEvents.Types.AlarmEventActions.AlarmEventActions
instance GHC.Classes.Eq Amazonka.IoTEvents.Types.AlarmEventActions.AlarmEventActions
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEvents.Types.AlarmEventActions.AlarmEventActions
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.Types.AlarmEventActions.AlarmEventActions
instance Control.DeepSeq.NFData Amazonka.IoTEvents.Types.AlarmEventActions.AlarmEventActions
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEvents.Types.AlarmEventActions.AlarmEventActions


module Amazonka.IoTEvents.Types.Action

-- | An action to be performed when the <tt>condition</tt> is TRUE.
--   
--   <i>See:</i> <a>newAction</a> smart constructor.
data Action
Action' :: Maybe IotTopicPublishAction -> Maybe DynamoDBv2Action -> Maybe ResetTimerAction -> Maybe SetTimerAction -> Maybe SNSTopicPublishAction -> Maybe ClearTimerAction -> Maybe DynamoDBAction -> Maybe FirehoseAction -> Maybe IotSiteWiseAction -> Maybe SetVariableAction -> Maybe LambdaAction -> Maybe IotEventsAction -> Maybe SqsAction -> Action

-- | Publishes an MQTT message with the given topic to the AWS IoT message
--   broker.
[$sel:iotTopicPublish:Action'] :: Action -> Maybe IotTopicPublishAction

-- | Writes to the DynamoDB table that you created. The default action
--   payload contains all attribute-value pairs that have the information
--   about the detector model instance and the event that triggered the
--   action. You can customize the <a>payload</a>. A separate column of the
--   DynamoDB table receives one attribute-value pair in the payload that
--   you specify. For more information, see <a>Actions</a> in <i>AWS IoT
--   Events Developer Guide</i>.
[$sel:dynamoDBv2:Action'] :: Action -> Maybe DynamoDBv2Action

-- | Information needed to reset the timer.
[$sel:resetTimer:Action'] :: Action -> Maybe ResetTimerAction

-- | Information needed to set the timer.
[$sel:setTimer:Action'] :: Action -> Maybe SetTimerAction

-- | Sends an Amazon SNS message.
[$sel:sns:Action'] :: Action -> Maybe SNSTopicPublishAction

-- | Information needed to clear the timer.
[$sel:clearTimer:Action'] :: Action -> Maybe ClearTimerAction

-- | Writes to the DynamoDB table that you created. The default action
--   payload contains all attribute-value pairs that have the information
--   about the detector model instance and the event that triggered the
--   action. You can customize the <a>payload</a>. One column of the
--   DynamoDB table receives all attribute-value pairs in the payload that
--   you specify. For more information, see <a>Actions</a> in <i>AWS IoT
--   Events Developer Guide</i>.
[$sel:dynamoDB:Action'] :: Action -> Maybe DynamoDBAction

-- | Sends information about the detector model instance and the event that
--   triggered the action to an Amazon Kinesis Data Firehose delivery
--   stream.
[$sel:firehose:Action'] :: Action -> Maybe FirehoseAction

-- | Sends information about the detector model instance and the event that
--   triggered the action to an asset property in AWS IoT SiteWise .
[$sel:iotSiteWise:Action'] :: Action -> Maybe IotSiteWiseAction

-- | Sets a variable to a specified value.
[$sel:setVariable:Action'] :: Action -> Maybe SetVariableAction

-- | Calls a Lambda function, passing in information about the detector
--   model instance and the event that triggered the action.
[$sel:lambda:Action'] :: Action -> Maybe LambdaAction

-- | Sends AWS IoT Events input, which passes information about the
--   detector model instance and the event that triggered the action.
[$sel:iotEvents:Action'] :: Action -> Maybe IotEventsAction

-- | Sends information about the detector model instance and the event that
--   triggered the action to an Amazon SQS queue.
[$sel:sqs:Action'] :: Action -> Maybe SqsAction

-- | Create a value of <a>Action</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:iotTopicPublish:Action'</a>, <a>action_iotTopicPublish</a> -
--   Publishes an MQTT message with the given topic to the AWS IoT message
--   broker.
--   
--   <a>$sel:dynamoDBv2:Action'</a>, <a>action_dynamoDBv2</a> - Writes to
--   the DynamoDB table that you created. The default action payload
--   contains all attribute-value pairs that have the information about the
--   detector model instance and the event that triggered the action. You
--   can customize the <a>payload</a>. A separate column of the DynamoDB
--   table receives one attribute-value pair in the payload that you
--   specify. For more information, see <a>Actions</a> in <i>AWS IoT Events
--   Developer Guide</i>.
--   
--   <a>$sel:resetTimer:Action'</a>, <a>action_resetTimer</a> - Information
--   needed to reset the timer.
--   
--   <a>$sel:setTimer:Action'</a>, <a>action_setTimer</a> - Information
--   needed to set the timer.
--   
--   <a>$sel:sns:Action'</a>, <a>action_sns</a> - Sends an Amazon SNS
--   message.
--   
--   <a>$sel:clearTimer:Action'</a>, <a>action_clearTimer</a> - Information
--   needed to clear the timer.
--   
--   <a>$sel:dynamoDB:Action'</a>, <a>action_dynamoDB</a> - Writes to the
--   DynamoDB table that you created. The default action payload contains
--   all attribute-value pairs that have the information about the detector
--   model instance and the event that triggered the action. You can
--   customize the <a>payload</a>. One column of the DynamoDB table
--   receives all attribute-value pairs in the payload that you specify.
--   For more information, see <a>Actions</a> in <i>AWS IoT Events
--   Developer Guide</i>.
--   
--   <a>$sel:firehose:Action'</a>, <a>action_firehose</a> - Sends
--   information about the detector model instance and the event that
--   triggered the action to an Amazon Kinesis Data Firehose delivery
--   stream.
--   
--   <a>$sel:iotSiteWise:Action'</a>, <a>action_iotSiteWise</a> - Sends
--   information about the detector model instance and the event that
--   triggered the action to an asset property in AWS IoT SiteWise .
--   
--   <a>$sel:setVariable:Action'</a>, <a>action_setVariable</a> - Sets a
--   variable to a specified value.
--   
--   <a>$sel:lambda:Action'</a>, <a>action_lambda</a> - Calls a Lambda
--   function, passing in information about the detector model instance and
--   the event that triggered the action.
--   
--   <a>$sel:iotEvents:Action'</a>, <a>action_iotEvents</a> - Sends AWS IoT
--   Events input, which passes information about the detector model
--   instance and the event that triggered the action.
--   
--   <a>$sel:sqs:Action'</a>, <a>action_sqs</a> - Sends information about
--   the detector model instance and the event that triggered the action to
--   an Amazon SQS queue.
newAction :: Action

-- | Publishes an MQTT message with the given topic to the AWS IoT message
--   broker.
action_iotTopicPublish :: Lens' Action (Maybe IotTopicPublishAction)

-- | Writes to the DynamoDB table that you created. The default action
--   payload contains all attribute-value pairs that have the information
--   about the detector model instance and the event that triggered the
--   action. You can customize the <a>payload</a>. A separate column of the
--   DynamoDB table receives one attribute-value pair in the payload that
--   you specify. For more information, see <a>Actions</a> in <i>AWS IoT
--   Events Developer Guide</i>.
action_dynamoDBv2 :: Lens' Action (Maybe DynamoDBv2Action)

-- | Information needed to reset the timer.
action_resetTimer :: Lens' Action (Maybe ResetTimerAction)

-- | Information needed to set the timer.
action_setTimer :: Lens' Action (Maybe SetTimerAction)

-- | Sends an Amazon SNS message.
action_sns :: Lens' Action (Maybe SNSTopicPublishAction)

-- | Information needed to clear the timer.
action_clearTimer :: Lens' Action (Maybe ClearTimerAction)

-- | Writes to the DynamoDB table that you created. The default action
--   payload contains all attribute-value pairs that have the information
--   about the detector model instance and the event that triggered the
--   action. You can customize the <a>payload</a>. One column of the
--   DynamoDB table receives all attribute-value pairs in the payload that
--   you specify. For more information, see <a>Actions</a> in <i>AWS IoT
--   Events Developer Guide</i>.
action_dynamoDB :: Lens' Action (Maybe DynamoDBAction)

-- | Sends information about the detector model instance and the event that
--   triggered the action to an Amazon Kinesis Data Firehose delivery
--   stream.
action_firehose :: Lens' Action (Maybe FirehoseAction)

-- | Sends information about the detector model instance and the event that
--   triggered the action to an asset property in AWS IoT SiteWise .
action_iotSiteWise :: Lens' Action (Maybe IotSiteWiseAction)

-- | Sets a variable to a specified value.
action_setVariable :: Lens' Action (Maybe SetVariableAction)

-- | Calls a Lambda function, passing in information about the detector
--   model instance and the event that triggered the action.
action_lambda :: Lens' Action (Maybe LambdaAction)

-- | Sends AWS IoT Events input, which passes information about the
--   detector model instance and the event that triggered the action.
action_iotEvents :: Lens' Action (Maybe IotEventsAction)

-- | Sends information about the detector model instance and the event that
--   triggered the action to an Amazon SQS queue.
action_sqs :: Lens' Action (Maybe SqsAction)
instance GHC.Generics.Generic Amazonka.IoTEvents.Types.Action.Action
instance GHC.Show.Show Amazonka.IoTEvents.Types.Action.Action
instance GHC.Read.Read Amazonka.IoTEvents.Types.Action.Action
instance GHC.Classes.Eq Amazonka.IoTEvents.Types.Action.Action
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEvents.Types.Action.Action
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.Types.Action.Action
instance Control.DeepSeq.NFData Amazonka.IoTEvents.Types.Action.Action
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEvents.Types.Action.Action


module Amazonka.IoTEvents.Types.Event

-- | Specifies the <tt>actions</tt> to be performed when the
--   <tt>condition</tt> evaluates to TRUE.
--   
--   <i>See:</i> <a>newEvent</a> smart constructor.
data Event
Event' :: Maybe [Action] -> Maybe Text -> Text -> Event

-- | The actions to be performed.
[$sel:actions:Event'] :: Event -> Maybe [Action]

-- | Optional. The Boolean expression that, when TRUE, causes the
--   <tt>actions</tt> to be performed. If not present, the actions are
--   performed (=TRUE). If the expression result is not a Boolean value,
--   the actions are not performed (=FALSE).
[$sel:condition:Event'] :: Event -> Maybe Text

-- | The name of the event.
[$sel:eventName:Event'] :: Event -> Text

-- | Create a value of <a>Event</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:actions:Event'</a>, <a>event_actions</a> - The actions to be
--   performed.
--   
--   <a>$sel:condition:Event'</a>, <a>event_condition</a> - Optional. The
--   Boolean expression that, when TRUE, causes the <tt>actions</tt> to be
--   performed. If not present, the actions are performed (=TRUE). If the
--   expression result is not a Boolean value, the actions are not
--   performed (=FALSE).
--   
--   <a>$sel:eventName:Event'</a>, <a>event_eventName</a> - The name of the
--   event.
newEvent :: Text -> Event

-- | The actions to be performed.
event_actions :: Lens' Event (Maybe [Action])

-- | Optional. The Boolean expression that, when TRUE, causes the
--   <tt>actions</tt> to be performed. If not present, the actions are
--   performed (=TRUE). If the expression result is not a Boolean value,
--   the actions are not performed (=FALSE).
event_condition :: Lens' Event (Maybe Text)

-- | The name of the event.
event_eventName :: Lens' Event Text
instance GHC.Generics.Generic Amazonka.IoTEvents.Types.Event.Event
instance GHC.Show.Show Amazonka.IoTEvents.Types.Event.Event
instance GHC.Read.Read Amazonka.IoTEvents.Types.Event.Event
instance GHC.Classes.Eq Amazonka.IoTEvents.Types.Event.Event
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEvents.Types.Event.Event
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.Types.Event.Event
instance Control.DeepSeq.NFData Amazonka.IoTEvents.Types.Event.Event
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEvents.Types.Event.Event


module Amazonka.IoTEvents.Types.OnExitLifecycle

-- | When exiting this state, perform these <tt>actions</tt> if the
--   specified <tt>condition</tt> is <tt>TRUE</tt>.
--   
--   <i>See:</i> <a>newOnExitLifecycle</a> smart constructor.
data OnExitLifecycle
OnExitLifecycle' :: Maybe [Event] -> OnExitLifecycle

-- | Specifies the <tt>actions</tt> that are performed when the state is
--   exited and the <tt>condition</tt> is <tt>TRUE</tt>.
[$sel:events:OnExitLifecycle'] :: OnExitLifecycle -> Maybe [Event]

-- | Create a value of <a>OnExitLifecycle</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:events:OnExitLifecycle'</a>, <a>onExitLifecycle_events</a> -
--   Specifies the <tt>actions</tt> that are performed when the state is
--   exited and the <tt>condition</tt> is <tt>TRUE</tt>.
newOnExitLifecycle :: OnExitLifecycle

-- | Specifies the <tt>actions</tt> that are performed when the state is
--   exited and the <tt>condition</tt> is <tt>TRUE</tt>.
onExitLifecycle_events :: Lens' OnExitLifecycle (Maybe [Event])
instance GHC.Generics.Generic Amazonka.IoTEvents.Types.OnExitLifecycle.OnExitLifecycle
instance GHC.Show.Show Amazonka.IoTEvents.Types.OnExitLifecycle.OnExitLifecycle
instance GHC.Read.Read Amazonka.IoTEvents.Types.OnExitLifecycle.OnExitLifecycle
instance GHC.Classes.Eq Amazonka.IoTEvents.Types.OnExitLifecycle.OnExitLifecycle
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEvents.Types.OnExitLifecycle.OnExitLifecycle
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.Types.OnExitLifecycle.OnExitLifecycle
instance Control.DeepSeq.NFData Amazonka.IoTEvents.Types.OnExitLifecycle.OnExitLifecycle
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEvents.Types.OnExitLifecycle.OnExitLifecycle


module Amazonka.IoTEvents.Types.OnEnterLifecycle

-- | When entering this state, perform these <tt>actions</tt> if the
--   <tt>condition</tt> is TRUE.
--   
--   <i>See:</i> <a>newOnEnterLifecycle</a> smart constructor.
data OnEnterLifecycle
OnEnterLifecycle' :: Maybe [Event] -> OnEnterLifecycle

-- | Specifies the actions that are performed when the state is entered and
--   the <tt>condition</tt> is <tt>TRUE</tt>.
[$sel:events:OnEnterLifecycle'] :: OnEnterLifecycle -> Maybe [Event]

-- | Create a value of <a>OnEnterLifecycle</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:events:OnEnterLifecycle'</a>, <a>onEnterLifecycle_events</a> -
--   Specifies the actions that are performed when the state is entered and
--   the <tt>condition</tt> is <tt>TRUE</tt>.
newOnEnterLifecycle :: OnEnterLifecycle

-- | Specifies the actions that are performed when the state is entered and
--   the <tt>condition</tt> is <tt>TRUE</tt>.
onEnterLifecycle_events :: Lens' OnEnterLifecycle (Maybe [Event])
instance GHC.Generics.Generic Amazonka.IoTEvents.Types.OnEnterLifecycle.OnEnterLifecycle
instance GHC.Show.Show Amazonka.IoTEvents.Types.OnEnterLifecycle.OnEnterLifecycle
instance GHC.Read.Read Amazonka.IoTEvents.Types.OnEnterLifecycle.OnEnterLifecycle
instance GHC.Classes.Eq Amazonka.IoTEvents.Types.OnEnterLifecycle.OnEnterLifecycle
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEvents.Types.OnEnterLifecycle.OnEnterLifecycle
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.Types.OnEnterLifecycle.OnEnterLifecycle
instance Control.DeepSeq.NFData Amazonka.IoTEvents.Types.OnEnterLifecycle.OnEnterLifecycle
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEvents.Types.OnEnterLifecycle.OnEnterLifecycle


module Amazonka.IoTEvents.Types.Tag

-- | Metadata that can be used to manage the resource.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | The tag's key.
[$sel:key:Tag'] :: Tag -> Text

-- | The tag's value.
[$sel:value:Tag'] :: Tag -> Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The tag's key.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The tag's value.
newTag :: Text -> Text -> Tag

-- | The tag's key.
tag_key :: Lens' Tag Text

-- | The tag's value.
tag_value :: Lens' Tag Text
instance GHC.Generics.Generic Amazonka.IoTEvents.Types.Tag.Tag
instance GHC.Show.Show Amazonka.IoTEvents.Types.Tag.Tag
instance GHC.Read.Read Amazonka.IoTEvents.Types.Tag.Tag
instance GHC.Classes.Eq Amazonka.IoTEvents.Types.Tag.Tag
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEvents.Types.Tag.Tag
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.Types.Tag.Tag
instance Control.DeepSeq.NFData Amazonka.IoTEvents.Types.Tag.Tag
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEvents.Types.Tag.Tag


module Amazonka.IoTEvents.Types.TransitionEvent

-- | Specifies the actions performed and the next state entered when a
--   <tt>condition</tt> evaluates to TRUE.
--   
--   <i>See:</i> <a>newTransitionEvent</a> smart constructor.
data TransitionEvent
TransitionEvent' :: Maybe [Action] -> Text -> Text -> Text -> TransitionEvent

-- | The actions to be performed.
[$sel:actions:TransitionEvent'] :: TransitionEvent -> Maybe [Action]

-- | The name of the transition event.
[$sel:eventName:TransitionEvent'] :: TransitionEvent -> Text

-- | Required. A Boolean expression that when TRUE causes the actions to be
--   performed and the <tt>nextState</tt> to be entered.
[$sel:condition:TransitionEvent'] :: TransitionEvent -> Text

-- | The next state to enter.
[$sel:nextState:TransitionEvent'] :: TransitionEvent -> Text

-- | Create a value of <a>TransitionEvent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:actions:TransitionEvent'</a>, <a>transitionEvent_actions</a> -
--   The actions to be performed.
--   
--   <a>$sel:eventName:TransitionEvent'</a>,
--   <a>transitionEvent_eventName</a> - The name of the transition event.
--   
--   <a>$sel:condition:TransitionEvent'</a>,
--   <a>transitionEvent_condition</a> - Required. A Boolean expression that
--   when TRUE causes the actions to be performed and the
--   <tt>nextState</tt> to be entered.
--   
--   <a>$sel:nextState:TransitionEvent'</a>,
--   <a>transitionEvent_nextState</a> - The next state to enter.
newTransitionEvent :: Text -> Text -> Text -> TransitionEvent

-- | The actions to be performed.
transitionEvent_actions :: Lens' TransitionEvent (Maybe [Action])

-- | The name of the transition event.
transitionEvent_eventName :: Lens' TransitionEvent Text

-- | Required. A Boolean expression that when TRUE causes the actions to be
--   performed and the <tt>nextState</tt> to be entered.
transitionEvent_condition :: Lens' TransitionEvent Text

-- | The next state to enter.
transitionEvent_nextState :: Lens' TransitionEvent Text
instance GHC.Generics.Generic Amazonka.IoTEvents.Types.TransitionEvent.TransitionEvent
instance GHC.Show.Show Amazonka.IoTEvents.Types.TransitionEvent.TransitionEvent
instance GHC.Read.Read Amazonka.IoTEvents.Types.TransitionEvent.TransitionEvent
instance GHC.Classes.Eq Amazonka.IoTEvents.Types.TransitionEvent.TransitionEvent
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEvents.Types.TransitionEvent.TransitionEvent
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.Types.TransitionEvent.TransitionEvent
instance Control.DeepSeq.NFData Amazonka.IoTEvents.Types.TransitionEvent.TransitionEvent
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEvents.Types.TransitionEvent.TransitionEvent


module Amazonka.IoTEvents.Types.OnInputLifecycle

-- | Specifies the actions performed when the <tt>condition</tt> evaluates
--   to TRUE.
--   
--   <i>See:</i> <a>newOnInputLifecycle</a> smart constructor.
data OnInputLifecycle
OnInputLifecycle' :: Maybe [Event] -> Maybe [TransitionEvent] -> OnInputLifecycle

-- | Specifies the actions performed when the <tt>condition</tt> evaluates
--   to TRUE.
[$sel:events:OnInputLifecycle'] :: OnInputLifecycle -> Maybe [Event]

-- | Specifies the actions performed, and the next state entered, when a
--   <tt>condition</tt> evaluates to TRUE.
[$sel:transitionEvents:OnInputLifecycle'] :: OnInputLifecycle -> Maybe [TransitionEvent]

-- | Create a value of <a>OnInputLifecycle</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:events:OnInputLifecycle'</a>, <a>onInputLifecycle_events</a> -
--   Specifies the actions performed when the <tt>condition</tt> evaluates
--   to TRUE.
--   
--   <a>$sel:transitionEvents:OnInputLifecycle'</a>,
--   <a>onInputLifecycle_transitionEvents</a> - Specifies the actions
--   performed, and the next state entered, when a <tt>condition</tt>
--   evaluates to TRUE.
newOnInputLifecycle :: OnInputLifecycle

-- | Specifies the actions performed when the <tt>condition</tt> evaluates
--   to TRUE.
onInputLifecycle_events :: Lens' OnInputLifecycle (Maybe [Event])

-- | Specifies the actions performed, and the next state entered, when a
--   <tt>condition</tt> evaluates to TRUE.
onInputLifecycle_transitionEvents :: Lens' OnInputLifecycle (Maybe [TransitionEvent])
instance GHC.Generics.Generic Amazonka.IoTEvents.Types.OnInputLifecycle.OnInputLifecycle
instance GHC.Show.Show Amazonka.IoTEvents.Types.OnInputLifecycle.OnInputLifecycle
instance GHC.Read.Read Amazonka.IoTEvents.Types.OnInputLifecycle.OnInputLifecycle
instance GHC.Classes.Eq Amazonka.IoTEvents.Types.OnInputLifecycle.OnInputLifecycle
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEvents.Types.OnInputLifecycle.OnInputLifecycle
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.Types.OnInputLifecycle.OnInputLifecycle
instance Control.DeepSeq.NFData Amazonka.IoTEvents.Types.OnInputLifecycle.OnInputLifecycle
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEvents.Types.OnInputLifecycle.OnInputLifecycle


module Amazonka.IoTEvents.Types.State

-- | Information that defines a state of a detector.
--   
--   <i>See:</i> <a>newState</a> smart constructor.
data State
State' :: Maybe OnEnterLifecycle -> Maybe OnInputLifecycle -> Maybe OnExitLifecycle -> Text -> State

-- | When entering this state, perform these <tt>actions</tt> if the
--   <tt>condition</tt> is TRUE.
[$sel:onEnter:State'] :: State -> Maybe OnEnterLifecycle

-- | When an input is received and the <tt>condition</tt> is TRUE, perform
--   the specified <tt>actions</tt>.
[$sel:onInput:State'] :: State -> Maybe OnInputLifecycle

-- | When exiting this state, perform these <tt>actions</tt> if the
--   specified <tt>condition</tt> is <tt>TRUE</tt>.
[$sel:onExit:State'] :: State -> Maybe OnExitLifecycle

-- | The name of the state.
[$sel:stateName:State'] :: State -> Text

-- | Create a value of <a>State</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:onEnter:State'</a>, <a>state_onEnter</a> - When entering this
--   state, perform these <tt>actions</tt> if the <tt>condition</tt> is
--   TRUE.
--   
--   <a>$sel:onInput:State'</a>, <a>state_onInput</a> - When an input is
--   received and the <tt>condition</tt> is TRUE, perform the specified
--   <tt>actions</tt>.
--   
--   <a>$sel:onExit:State'</a>, <a>state_onExit</a> - When exiting this
--   state, perform these <tt>actions</tt> if the specified
--   <tt>condition</tt> is <tt>TRUE</tt>.
--   
--   <a>$sel:stateName:State'</a>, <a>state_stateName</a> - The name of the
--   state.
newState :: Text -> State

-- | When entering this state, perform these <tt>actions</tt> if the
--   <tt>condition</tt> is TRUE.
state_onEnter :: Lens' State (Maybe OnEnterLifecycle)

-- | When an input is received and the <tt>condition</tt> is TRUE, perform
--   the specified <tt>actions</tt>.
state_onInput :: Lens' State (Maybe OnInputLifecycle)

-- | When exiting this state, perform these <tt>actions</tt> if the
--   specified <tt>condition</tt> is <tt>TRUE</tt>.
state_onExit :: Lens' State (Maybe OnExitLifecycle)

-- | The name of the state.
state_stateName :: Lens' State Text
instance GHC.Generics.Generic Amazonka.IoTEvents.Types.State.State
instance GHC.Show.Show Amazonka.IoTEvents.Types.State.State
instance GHC.Read.Read Amazonka.IoTEvents.Types.State.State
instance GHC.Classes.Eq Amazonka.IoTEvents.Types.State.State
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEvents.Types.State.State
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.Types.State.State
instance Control.DeepSeq.NFData Amazonka.IoTEvents.Types.State.State
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEvents.Types.State.State


module Amazonka.IoTEvents.Types.DetectorModelDefinition

-- | Information that defines how a detector operates.
--   
--   <i>See:</i> <a>newDetectorModelDefinition</a> smart constructor.
data DetectorModelDefinition
DetectorModelDefinition' :: NonEmpty State -> Text -> DetectorModelDefinition

-- | Information about the states of the detector.
[$sel:states:DetectorModelDefinition'] :: DetectorModelDefinition -> NonEmpty State

-- | The state that is entered at the creation of each detector (instance).
[$sel:initialStateName:DetectorModelDefinition'] :: DetectorModelDefinition -> Text

-- | Create a value of <a>DetectorModelDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:states:DetectorModelDefinition'</a>,
--   <a>detectorModelDefinition_states</a> - Information about the states
--   of the detector.
--   
--   <a>$sel:initialStateName:DetectorModelDefinition'</a>,
--   <a>detectorModelDefinition_initialStateName</a> - The state that is
--   entered at the creation of each detector (instance).
newDetectorModelDefinition :: NonEmpty State -> Text -> DetectorModelDefinition

-- | Information about the states of the detector.
detectorModelDefinition_states :: Lens' DetectorModelDefinition (NonEmpty State)

-- | The state that is entered at the creation of each detector (instance).
detectorModelDefinition_initialStateName :: Lens' DetectorModelDefinition Text
instance GHC.Generics.Generic Amazonka.IoTEvents.Types.DetectorModelDefinition.DetectorModelDefinition
instance GHC.Show.Show Amazonka.IoTEvents.Types.DetectorModelDefinition.DetectorModelDefinition
instance GHC.Read.Read Amazonka.IoTEvents.Types.DetectorModelDefinition.DetectorModelDefinition
instance GHC.Classes.Eq Amazonka.IoTEvents.Types.DetectorModelDefinition.DetectorModelDefinition
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEvents.Types.DetectorModelDefinition.DetectorModelDefinition
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.Types.DetectorModelDefinition.DetectorModelDefinition
instance Control.DeepSeq.NFData Amazonka.IoTEvents.Types.DetectorModelDefinition.DetectorModelDefinition
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEvents.Types.DetectorModelDefinition.DetectorModelDefinition


module Amazonka.IoTEvents.Types.DetectorModel

-- | Information about the detector model.
--   
--   <i>See:</i> <a>newDetectorModel</a> smart constructor.
data DetectorModel
DetectorModel' :: Maybe DetectorModelConfiguration -> Maybe DetectorModelDefinition -> DetectorModel

-- | Information about how the detector is configured.
[$sel:detectorModelConfiguration:DetectorModel'] :: DetectorModel -> Maybe DetectorModelConfiguration

-- | Information that defines how a detector operates.
[$sel:detectorModelDefinition:DetectorModel'] :: DetectorModel -> Maybe DetectorModelDefinition

-- | Create a value of <a>DetectorModel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:detectorModelConfiguration:DetectorModel'</a>,
--   <a>detectorModel_detectorModelConfiguration</a> - Information about
--   how the detector is configured.
--   
--   <a>$sel:detectorModelDefinition:DetectorModel'</a>,
--   <a>detectorModel_detectorModelDefinition</a> - Information that
--   defines how a detector operates.
newDetectorModel :: DetectorModel

-- | Information about how the detector is configured.
detectorModel_detectorModelConfiguration :: Lens' DetectorModel (Maybe DetectorModelConfiguration)

-- | Information that defines how a detector operates.
detectorModel_detectorModelDefinition :: Lens' DetectorModel (Maybe DetectorModelDefinition)
instance GHC.Generics.Generic Amazonka.IoTEvents.Types.DetectorModel.DetectorModel
instance GHC.Show.Show Amazonka.IoTEvents.Types.DetectorModel.DetectorModel
instance GHC.Read.Read Amazonka.IoTEvents.Types.DetectorModel.DetectorModel
instance GHC.Classes.Eq Amazonka.IoTEvents.Types.DetectorModel.DetectorModel
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEvents.Types.DetectorModel.DetectorModel
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.Types.DetectorModel.DetectorModel
instance Control.DeepSeq.NFData Amazonka.IoTEvents.Types.DetectorModel.DetectorModel


module Amazonka.IoTEvents.Types

-- | API version <tt>2018-07-27</tt> of the Amazon IoT Events SDK
--   configuration.
defaultService :: Service

-- | The request was invalid.
_InvalidRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested operation is not supported.
_UnsupportedOperationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource already exists.
_ResourceAlreadyExistsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request could not be completed due to throttling.
_ThrottlingException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An internal failure occurred.
_InternalFailureException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The service is currently unavailable.
_ServiceUnavailableException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource was not found.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A limit was exceeded.
_LimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource is in use.
_ResourceInUseException :: AsError a => Getting (First ServiceError) a ServiceError
newtype AlarmModelVersionStatus
AlarmModelVersionStatus' :: Text -> AlarmModelVersionStatus
[fromAlarmModelVersionStatus] :: AlarmModelVersionStatus -> Text
pattern AlarmModelVersionStatus_ACTIVATING :: AlarmModelVersionStatus
pattern AlarmModelVersionStatus_ACTIVE :: AlarmModelVersionStatus
pattern AlarmModelVersionStatus_FAILED :: AlarmModelVersionStatus
pattern AlarmModelVersionStatus_INACTIVE :: AlarmModelVersionStatus
newtype AnalysisResultLevel
AnalysisResultLevel' :: Text -> AnalysisResultLevel
[fromAnalysisResultLevel] :: AnalysisResultLevel -> Text
pattern AnalysisResultLevel_ERROR :: AnalysisResultLevel
pattern AnalysisResultLevel_INFO :: AnalysisResultLevel
pattern AnalysisResultLevel_WARNING :: AnalysisResultLevel
newtype AnalysisStatus
AnalysisStatus' :: Text -> AnalysisStatus
[fromAnalysisStatus] :: AnalysisStatus -> Text
pattern AnalysisStatus_COMPLETE :: AnalysisStatus
pattern AnalysisStatus_FAILED :: AnalysisStatus
pattern AnalysisStatus_RUNNING :: AnalysisStatus
newtype ComparisonOperator
ComparisonOperator' :: Text -> ComparisonOperator
[fromComparisonOperator] :: ComparisonOperator -> Text
pattern ComparisonOperator_EQUAL :: ComparisonOperator
pattern ComparisonOperator_GREATER :: ComparisonOperator
pattern ComparisonOperator_GREATER_OR_EQUAL :: ComparisonOperator
pattern ComparisonOperator_LESS :: ComparisonOperator
pattern ComparisonOperator_LESS_OR_EQUAL :: ComparisonOperator
pattern ComparisonOperator_NOT_EQUAL :: ComparisonOperator
newtype DetectorModelVersionStatus
DetectorModelVersionStatus' :: Text -> DetectorModelVersionStatus
[fromDetectorModelVersionStatus] :: DetectorModelVersionStatus -> Text
pattern DetectorModelVersionStatus_ACTIVATING :: DetectorModelVersionStatus
pattern DetectorModelVersionStatus_ACTIVE :: DetectorModelVersionStatus
pattern DetectorModelVersionStatus_DEPRECATED :: DetectorModelVersionStatus
pattern DetectorModelVersionStatus_DRAFT :: DetectorModelVersionStatus
pattern DetectorModelVersionStatus_FAILED :: DetectorModelVersionStatus
pattern DetectorModelVersionStatus_INACTIVE :: DetectorModelVersionStatus
pattern DetectorModelVersionStatus_PAUSED :: DetectorModelVersionStatus
newtype EvaluationMethod
EvaluationMethod' :: Text -> EvaluationMethod
[fromEvaluationMethod] :: EvaluationMethod -> Text
pattern EvaluationMethod_BATCH :: EvaluationMethod
pattern EvaluationMethod_SERIAL :: EvaluationMethod
newtype InputStatus
InputStatus' :: Text -> InputStatus
[fromInputStatus] :: InputStatus -> Text
pattern InputStatus_ACTIVE :: InputStatus
pattern InputStatus_CREATING :: InputStatus
pattern InputStatus_DELETING :: InputStatus
pattern InputStatus_UPDATING :: InputStatus
newtype LoggingLevel
LoggingLevel' :: Text -> LoggingLevel
[fromLoggingLevel] :: LoggingLevel -> Text
pattern LoggingLevel_DEBUG :: LoggingLevel
pattern LoggingLevel_ERROR :: LoggingLevel
pattern LoggingLevel_INFO :: LoggingLevel
newtype PayloadType
PayloadType' :: Text -> PayloadType
[fromPayloadType] :: PayloadType -> Text
pattern PayloadType_JSON :: PayloadType
pattern PayloadType_STRING :: PayloadType

-- | Specifies whether to get notified for alarm state changes.
--   
--   <i>See:</i> <a>newAcknowledgeFlow</a> smart constructor.
data AcknowledgeFlow
AcknowledgeFlow' :: Bool -> AcknowledgeFlow

-- | The value must be <tt>TRUE</tt> or <tt>FALSE</tt>. If <tt>TRUE</tt>,
--   you receive a notification when the alarm state changes. You must
--   choose to acknowledge the notification before the alarm state can
--   return to <tt>NORMAL</tt>. If <tt>FALSE</tt>, you won't receive
--   notifications. The alarm automatically changes to the <tt>NORMAL</tt>
--   state when the input property value returns to the specified range.
[$sel:enabled:AcknowledgeFlow'] :: AcknowledgeFlow -> Bool

-- | Create a value of <a>AcknowledgeFlow</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabled:AcknowledgeFlow'</a>, <a>acknowledgeFlow_enabled</a> -
--   The value must be <tt>TRUE</tt> or <tt>FALSE</tt>. If <tt>TRUE</tt>,
--   you receive a notification when the alarm state changes. You must
--   choose to acknowledge the notification before the alarm state can
--   return to <tt>NORMAL</tt>. If <tt>FALSE</tt>, you won't receive
--   notifications. The alarm automatically changes to the <tt>NORMAL</tt>
--   state when the input property value returns to the specified range.
newAcknowledgeFlow :: Bool -> AcknowledgeFlow

-- | The value must be <tt>TRUE</tt> or <tt>FALSE</tt>. If <tt>TRUE</tt>,
--   you receive a notification when the alarm state changes. You must
--   choose to acknowledge the notification before the alarm state can
--   return to <tt>NORMAL</tt>. If <tt>FALSE</tt>, you won't receive
--   notifications. The alarm automatically changes to the <tt>NORMAL</tt>
--   state when the input property value returns to the specified range.
acknowledgeFlow_enabled :: Lens' AcknowledgeFlow Bool

-- | An action to be performed when the <tt>condition</tt> is TRUE.
--   
--   <i>See:</i> <a>newAction</a> smart constructor.
data Action
Action' :: Maybe IotTopicPublishAction -> Maybe DynamoDBv2Action -> Maybe ResetTimerAction -> Maybe SetTimerAction -> Maybe SNSTopicPublishAction -> Maybe ClearTimerAction -> Maybe DynamoDBAction -> Maybe FirehoseAction -> Maybe IotSiteWiseAction -> Maybe SetVariableAction -> Maybe LambdaAction -> Maybe IotEventsAction -> Maybe SqsAction -> Action

-- | Publishes an MQTT message with the given topic to the AWS IoT message
--   broker.
[$sel:iotTopicPublish:Action'] :: Action -> Maybe IotTopicPublishAction

-- | Writes to the DynamoDB table that you created. The default action
--   payload contains all attribute-value pairs that have the information
--   about the detector model instance and the event that triggered the
--   action. You can customize the <a>payload</a>. A separate column of the
--   DynamoDB table receives one attribute-value pair in the payload that
--   you specify. For more information, see <a>Actions</a> in <i>AWS IoT
--   Events Developer Guide</i>.
[$sel:dynamoDBv2:Action'] :: Action -> Maybe DynamoDBv2Action

-- | Information needed to reset the timer.
[$sel:resetTimer:Action'] :: Action -> Maybe ResetTimerAction

-- | Information needed to set the timer.
[$sel:setTimer:Action'] :: Action -> Maybe SetTimerAction

-- | Sends an Amazon SNS message.
[$sel:sns:Action'] :: Action -> Maybe SNSTopicPublishAction

-- | Information needed to clear the timer.
[$sel:clearTimer:Action'] :: Action -> Maybe ClearTimerAction

-- | Writes to the DynamoDB table that you created. The default action
--   payload contains all attribute-value pairs that have the information
--   about the detector model instance and the event that triggered the
--   action. You can customize the <a>payload</a>. One column of the
--   DynamoDB table receives all attribute-value pairs in the payload that
--   you specify. For more information, see <a>Actions</a> in <i>AWS IoT
--   Events Developer Guide</i>.
[$sel:dynamoDB:Action'] :: Action -> Maybe DynamoDBAction

-- | Sends information about the detector model instance and the event that
--   triggered the action to an Amazon Kinesis Data Firehose delivery
--   stream.
[$sel:firehose:Action'] :: Action -> Maybe FirehoseAction

-- | Sends information about the detector model instance and the event that
--   triggered the action to an asset property in AWS IoT SiteWise .
[$sel:iotSiteWise:Action'] :: Action -> Maybe IotSiteWiseAction

-- | Sets a variable to a specified value.
[$sel:setVariable:Action'] :: Action -> Maybe SetVariableAction

-- | Calls a Lambda function, passing in information about the detector
--   model instance and the event that triggered the action.
[$sel:lambda:Action'] :: Action -> Maybe LambdaAction

-- | Sends AWS IoT Events input, which passes information about the
--   detector model instance and the event that triggered the action.
[$sel:iotEvents:Action'] :: Action -> Maybe IotEventsAction

-- | Sends information about the detector model instance and the event that
--   triggered the action to an Amazon SQS queue.
[$sel:sqs:Action'] :: Action -> Maybe SqsAction

-- | Create a value of <a>Action</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:iotTopicPublish:Action'</a>, <a>action_iotTopicPublish</a> -
--   Publishes an MQTT message with the given topic to the AWS IoT message
--   broker.
--   
--   <a>$sel:dynamoDBv2:Action'</a>, <a>action_dynamoDBv2</a> - Writes to
--   the DynamoDB table that you created. The default action payload
--   contains all attribute-value pairs that have the information about the
--   detector model instance and the event that triggered the action. You
--   can customize the <a>payload</a>. A separate column of the DynamoDB
--   table receives one attribute-value pair in the payload that you
--   specify. For more information, see <a>Actions</a> in <i>AWS IoT Events
--   Developer Guide</i>.
--   
--   <a>$sel:resetTimer:Action'</a>, <a>action_resetTimer</a> - Information
--   needed to reset the timer.
--   
--   <a>$sel:setTimer:Action'</a>, <a>action_setTimer</a> - Information
--   needed to set the timer.
--   
--   <a>$sel:sns:Action'</a>, <a>action_sns</a> - Sends an Amazon SNS
--   message.
--   
--   <a>$sel:clearTimer:Action'</a>, <a>action_clearTimer</a> - Information
--   needed to clear the timer.
--   
--   <a>$sel:dynamoDB:Action'</a>, <a>action_dynamoDB</a> - Writes to the
--   DynamoDB table that you created. The default action payload contains
--   all attribute-value pairs that have the information about the detector
--   model instance and the event that triggered the action. You can
--   customize the <a>payload</a>. One column of the DynamoDB table
--   receives all attribute-value pairs in the payload that you specify.
--   For more information, see <a>Actions</a> in <i>AWS IoT Events
--   Developer Guide</i>.
--   
--   <a>$sel:firehose:Action'</a>, <a>action_firehose</a> - Sends
--   information about the detector model instance and the event that
--   triggered the action to an Amazon Kinesis Data Firehose delivery
--   stream.
--   
--   <a>$sel:iotSiteWise:Action'</a>, <a>action_iotSiteWise</a> - Sends
--   information about the detector model instance and the event that
--   triggered the action to an asset property in AWS IoT SiteWise .
--   
--   <a>$sel:setVariable:Action'</a>, <a>action_setVariable</a> - Sets a
--   variable to a specified value.
--   
--   <a>$sel:lambda:Action'</a>, <a>action_lambda</a> - Calls a Lambda
--   function, passing in information about the detector model instance and
--   the event that triggered the action.
--   
--   <a>$sel:iotEvents:Action'</a>, <a>action_iotEvents</a> - Sends AWS IoT
--   Events input, which passes information about the detector model
--   instance and the event that triggered the action.
--   
--   <a>$sel:sqs:Action'</a>, <a>action_sqs</a> - Sends information about
--   the detector model instance and the event that triggered the action to
--   an Amazon SQS queue.
newAction :: Action

-- | Publishes an MQTT message with the given topic to the AWS IoT message
--   broker.
action_iotTopicPublish :: Lens' Action (Maybe IotTopicPublishAction)

-- | Writes to the DynamoDB table that you created. The default action
--   payload contains all attribute-value pairs that have the information
--   about the detector model instance and the event that triggered the
--   action. You can customize the <a>payload</a>. A separate column of the
--   DynamoDB table receives one attribute-value pair in the payload that
--   you specify. For more information, see <a>Actions</a> in <i>AWS IoT
--   Events Developer Guide</i>.
action_dynamoDBv2 :: Lens' Action (Maybe DynamoDBv2Action)

-- | Information needed to reset the timer.
action_resetTimer :: Lens' Action (Maybe ResetTimerAction)

-- | Information needed to set the timer.
action_setTimer :: Lens' Action (Maybe SetTimerAction)

-- | Sends an Amazon SNS message.
action_sns :: Lens' Action (Maybe SNSTopicPublishAction)

-- | Information needed to clear the timer.
action_clearTimer :: Lens' Action (Maybe ClearTimerAction)

-- | Writes to the DynamoDB table that you created. The default action
--   payload contains all attribute-value pairs that have the information
--   about the detector model instance and the event that triggered the
--   action. You can customize the <a>payload</a>. One column of the
--   DynamoDB table receives all attribute-value pairs in the payload that
--   you specify. For more information, see <a>Actions</a> in <i>AWS IoT
--   Events Developer Guide</i>.
action_dynamoDB :: Lens' Action (Maybe DynamoDBAction)

-- | Sends information about the detector model instance and the event that
--   triggered the action to an Amazon Kinesis Data Firehose delivery
--   stream.
action_firehose :: Lens' Action (Maybe FirehoseAction)

-- | Sends information about the detector model instance and the event that
--   triggered the action to an asset property in AWS IoT SiteWise .
action_iotSiteWise :: Lens' Action (Maybe IotSiteWiseAction)

-- | Sets a variable to a specified value.
action_setVariable :: Lens' Action (Maybe SetVariableAction)

-- | Calls a Lambda function, passing in information about the detector
--   model instance and the event that triggered the action.
action_lambda :: Lens' Action (Maybe LambdaAction)

-- | Sends AWS IoT Events input, which passes information about the
--   detector model instance and the event that triggered the action.
action_iotEvents :: Lens' Action (Maybe IotEventsAction)

-- | Sends information about the detector model instance and the event that
--   triggered the action to an Amazon SQS queue.
action_sqs :: Lens' Action (Maybe SqsAction)

-- | Specifies one of the following actions to receive notifications when
--   the alarm state changes.
--   
--   <i>See:</i> <a>newAlarmAction</a> smart constructor.
data AlarmAction
AlarmAction' :: Maybe IotTopicPublishAction -> Maybe DynamoDBv2Action -> Maybe SNSTopicPublishAction -> Maybe DynamoDBAction -> Maybe FirehoseAction -> Maybe IotSiteWiseAction -> Maybe LambdaAction -> Maybe IotEventsAction -> Maybe SqsAction -> AlarmAction
[$sel:iotTopicPublish:AlarmAction'] :: AlarmAction -> Maybe IotTopicPublishAction
[$sel:dynamoDBv2:AlarmAction'] :: AlarmAction -> Maybe DynamoDBv2Action
[$sel:sns:AlarmAction'] :: AlarmAction -> Maybe SNSTopicPublishAction
[$sel:dynamoDB:AlarmAction'] :: AlarmAction -> Maybe DynamoDBAction
[$sel:firehose:AlarmAction'] :: AlarmAction -> Maybe FirehoseAction
[$sel:iotSiteWise:AlarmAction'] :: AlarmAction -> Maybe IotSiteWiseAction
[$sel:lambda:AlarmAction'] :: AlarmAction -> Maybe LambdaAction
[$sel:iotEvents:AlarmAction'] :: AlarmAction -> Maybe IotEventsAction
[$sel:sqs:AlarmAction'] :: AlarmAction -> Maybe SqsAction

-- | Create a value of <a>AlarmAction</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:iotTopicPublish:AlarmAction'</a>,
--   <a>alarmAction_iotTopicPublish</a> - Undocumented member.
--   
--   <a>$sel:dynamoDBv2:AlarmAction'</a>, <a>alarmAction_dynamoDBv2</a> -
--   Undocumented member.
--   
--   <a>$sel:sns:AlarmAction'</a>, <a>alarmAction_sns</a> - Undocumented
--   member.
--   
--   <a>$sel:dynamoDB:AlarmAction'</a>, <a>alarmAction_dynamoDB</a> -
--   Undocumented member.
--   
--   <a>$sel:firehose:AlarmAction'</a>, <a>alarmAction_firehose</a> -
--   Undocumented member.
--   
--   <a>$sel:iotSiteWise:AlarmAction'</a>, <a>alarmAction_iotSiteWise</a> -
--   Undocumented member.
--   
--   <a>$sel:lambda:AlarmAction'</a>, <a>alarmAction_lambda</a> -
--   Undocumented member.
--   
--   <a>$sel:iotEvents:AlarmAction'</a>, <a>alarmAction_iotEvents</a> -
--   Undocumented member.
--   
--   <a>$sel:sqs:AlarmAction'</a>, <a>alarmAction_sqs</a> - Undocumented
--   member.
newAlarmAction :: AlarmAction

-- | Undocumented member.
alarmAction_iotTopicPublish :: Lens' AlarmAction (Maybe IotTopicPublishAction)

-- | Undocumented member.
alarmAction_dynamoDBv2 :: Lens' AlarmAction (Maybe DynamoDBv2Action)

-- | Undocumented member.
alarmAction_sns :: Lens' AlarmAction (Maybe SNSTopicPublishAction)

-- | Undocumented member.
alarmAction_dynamoDB :: Lens' AlarmAction (Maybe DynamoDBAction)

-- | Undocumented member.
alarmAction_firehose :: Lens' AlarmAction (Maybe FirehoseAction)

-- | Undocumented member.
alarmAction_iotSiteWise :: Lens' AlarmAction (Maybe IotSiteWiseAction)

-- | Undocumented member.
alarmAction_lambda :: Lens' AlarmAction (Maybe LambdaAction)

-- | Undocumented member.
alarmAction_iotEvents :: Lens' AlarmAction (Maybe IotEventsAction)

-- | Undocumented member.
alarmAction_sqs :: Lens' AlarmAction (Maybe SqsAction)

-- | Contains the configuration information of alarm state changes.
--   
--   <i>See:</i> <a>newAlarmCapabilities</a> smart constructor.
data AlarmCapabilities
AlarmCapabilities' :: Maybe AcknowledgeFlow -> Maybe InitializationConfiguration -> AlarmCapabilities

-- | Specifies whether to get notified for alarm state changes.
[$sel:acknowledgeFlow:AlarmCapabilities'] :: AlarmCapabilities -> Maybe AcknowledgeFlow

-- | Specifies the default alarm state. The configuration applies to all
--   alarms that were created based on this alarm model.
[$sel:initializationConfiguration:AlarmCapabilities'] :: AlarmCapabilities -> Maybe InitializationConfiguration

-- | Create a value of <a>AlarmCapabilities</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:acknowledgeFlow:AlarmCapabilities'</a>,
--   <a>alarmCapabilities_acknowledgeFlow</a> - Specifies whether to get
--   notified for alarm state changes.
--   
--   <a>$sel:initializationConfiguration:AlarmCapabilities'</a>,
--   <a>alarmCapabilities_initializationConfiguration</a> - Specifies the
--   default alarm state. The configuration applies to all alarms that were
--   created based on this alarm model.
newAlarmCapabilities :: AlarmCapabilities

-- | Specifies whether to get notified for alarm state changes.
alarmCapabilities_acknowledgeFlow :: Lens' AlarmCapabilities (Maybe AcknowledgeFlow)

-- | Specifies the default alarm state. The configuration applies to all
--   alarms that were created based on this alarm model.
alarmCapabilities_initializationConfiguration :: Lens' AlarmCapabilities (Maybe InitializationConfiguration)

-- | Contains information about one or more alarm actions.
--   
--   <i>See:</i> <a>newAlarmEventActions</a> smart constructor.
data AlarmEventActions
AlarmEventActions' :: Maybe [AlarmAction] -> AlarmEventActions

-- | Specifies one or more supported actions to receive notifications when
--   the alarm state changes.
[$sel:alarmActions:AlarmEventActions'] :: AlarmEventActions -> Maybe [AlarmAction]

-- | Create a value of <a>AlarmEventActions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:alarmActions:AlarmEventActions'</a>,
--   <a>alarmEventActions_alarmActions</a> - Specifies one or more
--   supported actions to receive notifications when the alarm state
--   changes.
newAlarmEventActions :: AlarmEventActions

-- | Specifies one or more supported actions to receive notifications when
--   the alarm state changes.
alarmEventActions_alarmActions :: Lens' AlarmEventActions (Maybe [AlarmAction])

-- | Contains a summary of an alarm model.
--   
--   <i>See:</i> <a>newAlarmModelSummary</a> smart constructor.
data AlarmModelSummary
AlarmModelSummary' :: Maybe POSIX -> Maybe Text -> Maybe Text -> AlarmModelSummary

-- | The time the alarm model was created, in the Unix epoch format.
[$sel:creationTime:AlarmModelSummary'] :: AlarmModelSummary -> Maybe POSIX

-- | The name of the alarm model.
[$sel:alarmModelName:AlarmModelSummary'] :: AlarmModelSummary -> Maybe Text

-- | The description of the alarm model.
[$sel:alarmModelDescription:AlarmModelSummary'] :: AlarmModelSummary -> Maybe Text

-- | Create a value of <a>AlarmModelSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:AlarmModelSummary'</a>,
--   <a>alarmModelSummary_creationTime</a> - The time the alarm model was
--   created, in the Unix epoch format.
--   
--   <a>$sel:alarmModelName:AlarmModelSummary'</a>,
--   <a>alarmModelSummary_alarmModelName</a> - The name of the alarm model.
--   
--   <a>$sel:alarmModelDescription:AlarmModelSummary'</a>,
--   <a>alarmModelSummary_alarmModelDescription</a> - The description of
--   the alarm model.
newAlarmModelSummary :: AlarmModelSummary

-- | The time the alarm model was created, in the Unix epoch format.
alarmModelSummary_creationTime :: Lens' AlarmModelSummary (Maybe UTCTime)

-- | The name of the alarm model.
alarmModelSummary_alarmModelName :: Lens' AlarmModelSummary (Maybe Text)

-- | The description of the alarm model.
alarmModelSummary_alarmModelDescription :: Lens' AlarmModelSummary (Maybe Text)

-- | Contains a summary of an alarm model version.
--   
--   <i>See:</i> <a>newAlarmModelVersionSummary</a> smart constructor.
data AlarmModelVersionSummary
AlarmModelVersionSummary' :: Maybe POSIX -> Maybe AlarmModelVersionStatus -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> AlarmModelVersionSummary

-- | The time the alarm model was created, in the Unix epoch format.
[$sel:creationTime:AlarmModelVersionSummary'] :: AlarmModelVersionSummary -> Maybe POSIX

-- | The status of the alarm model. The status can be one of the following
--   values:
--   
--   <ul>
--   <li><tt>ACTIVE</tt> - The alarm model is active and it's ready to
--   evaluate data.</li>
--   <li><tt>ACTIVATING</tt> - AWS IoT Events is activating your alarm
--   model. Activating an alarm model can take up to a few minutes.</li>
--   <li><tt>INACTIVE</tt> - The alarm model is inactive, so it isn't ready
--   to evaluate data. Check your alarm model information and update the
--   alarm model.</li>
--   <li><tt>FAILED</tt> - You couldn't create or update the alarm model.
--   Check your alarm model information and try again.</li>
--   </ul>
[$sel:status:AlarmModelVersionSummary'] :: AlarmModelVersionSummary -> Maybe AlarmModelVersionStatus

-- | The name of the alarm model.
[$sel:alarmModelName:AlarmModelVersionSummary'] :: AlarmModelVersionSummary -> Maybe Text

-- | Contains information about the status of the alarm model version.
[$sel:statusMessage:AlarmModelVersionSummary'] :: AlarmModelVersionSummary -> Maybe Text

-- | The time the alarm model was last updated, in the Unix epoch format.
[$sel:lastUpdateTime:AlarmModelVersionSummary'] :: AlarmModelVersionSummary -> Maybe POSIX

-- | The version of the alarm model.
[$sel:alarmModelVersion:AlarmModelVersionSummary'] :: AlarmModelVersionSummary -> Maybe Text

-- | The ARN of the alarm model. For more information, see <a>Amazon
--   Resource Names (ARNs)</a> in the <i>AWS General Reference</i>.
[$sel:alarmModelArn:AlarmModelVersionSummary'] :: AlarmModelVersionSummary -> Maybe Text

-- | The ARN of the IAM role that allows the alarm to perform actions and
--   access AWS resources. For more information, see <a>Amazon Resource
--   Names (ARNs)</a> in the <i>AWS General Reference</i>.
[$sel:roleArn:AlarmModelVersionSummary'] :: AlarmModelVersionSummary -> Maybe Text

-- | Create a value of <a>AlarmModelVersionSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:AlarmModelVersionSummary'</a>,
--   <a>alarmModelVersionSummary_creationTime</a> - The time the alarm
--   model was created, in the Unix epoch format.
--   
--   <a>$sel:status:AlarmModelVersionSummary'</a>,
--   <a>alarmModelVersionSummary_status</a> - The status of the alarm
--   model. The status can be one of the following values:
--   
--   <ul>
--   <li><tt>ACTIVE</tt> - The alarm model is active and it's ready to
--   evaluate data.</li>
--   <li><tt>ACTIVATING</tt> - AWS IoT Events is activating your alarm
--   model. Activating an alarm model can take up to a few minutes.</li>
--   <li><tt>INACTIVE</tt> - The alarm model is inactive, so it isn't ready
--   to evaluate data. Check your alarm model information and update the
--   alarm model.</li>
--   <li><tt>FAILED</tt> - You couldn't create or update the alarm model.
--   Check your alarm model information and try again.</li>
--   </ul>
--   
--   <a>$sel:alarmModelName:AlarmModelVersionSummary'</a>,
--   <a>alarmModelVersionSummary_alarmModelName</a> - The name of the alarm
--   model.
--   
--   <a>$sel:statusMessage:AlarmModelVersionSummary'</a>,
--   <a>alarmModelVersionSummary_statusMessage</a> - Contains information
--   about the status of the alarm model version.
--   
--   <a>$sel:lastUpdateTime:AlarmModelVersionSummary'</a>,
--   <a>alarmModelVersionSummary_lastUpdateTime</a> - The time the alarm
--   model was last updated, in the Unix epoch format.
--   
--   <a>$sel:alarmModelVersion:AlarmModelVersionSummary'</a>,
--   <a>alarmModelVersionSummary_alarmModelVersion</a> - The version of the
--   alarm model.
--   
--   <a>$sel:alarmModelArn:AlarmModelVersionSummary'</a>,
--   <a>alarmModelVersionSummary_alarmModelArn</a> - The ARN of the alarm
--   model. For more information, see <a>Amazon Resource Names (ARNs)</a>
--   in the <i>AWS General Reference</i>.
--   
--   <a>$sel:roleArn:AlarmModelVersionSummary'</a>,
--   <a>alarmModelVersionSummary_roleArn</a> - The ARN of the IAM role that
--   allows the alarm to perform actions and access AWS resources. For more
--   information, see <a>Amazon Resource Names (ARNs)</a> in the <i>AWS
--   General Reference</i>.
newAlarmModelVersionSummary :: AlarmModelVersionSummary

-- | The time the alarm model was created, in the Unix epoch format.
alarmModelVersionSummary_creationTime :: Lens' AlarmModelVersionSummary (Maybe UTCTime)

-- | The status of the alarm model. The status can be one of the following
--   values:
--   
--   <ul>
--   <li><tt>ACTIVE</tt> - The alarm model is active and it's ready to
--   evaluate data.</li>
--   <li><tt>ACTIVATING</tt> - AWS IoT Events is activating your alarm
--   model. Activating an alarm model can take up to a few minutes.</li>
--   <li><tt>INACTIVE</tt> - The alarm model is inactive, so it isn't ready
--   to evaluate data. Check your alarm model information and update the
--   alarm model.</li>
--   <li><tt>FAILED</tt> - You couldn't create or update the alarm model.
--   Check your alarm model information and try again.</li>
--   </ul>
alarmModelVersionSummary_status :: Lens' AlarmModelVersionSummary (Maybe AlarmModelVersionStatus)

-- | The name of the alarm model.
alarmModelVersionSummary_alarmModelName :: Lens' AlarmModelVersionSummary (Maybe Text)

-- | Contains information about the status of the alarm model version.
alarmModelVersionSummary_statusMessage :: Lens' AlarmModelVersionSummary (Maybe Text)

-- | The time the alarm model was last updated, in the Unix epoch format.
alarmModelVersionSummary_lastUpdateTime :: Lens' AlarmModelVersionSummary (Maybe UTCTime)

-- | The version of the alarm model.
alarmModelVersionSummary_alarmModelVersion :: Lens' AlarmModelVersionSummary (Maybe Text)

-- | The ARN of the alarm model. For more information, see <a>Amazon
--   Resource Names (ARNs)</a> in the <i>AWS General Reference</i>.
alarmModelVersionSummary_alarmModelArn :: Lens' AlarmModelVersionSummary (Maybe Text)

-- | The ARN of the IAM role that allows the alarm to perform actions and
--   access AWS resources. For more information, see <a>Amazon Resource
--   Names (ARNs)</a> in the <i>AWS General Reference</i>.
alarmModelVersionSummary_roleArn :: Lens' AlarmModelVersionSummary (Maybe Text)

-- | Contains information about one or more notification actions.
--   
--   <i>See:</i> <a>newAlarmNotification</a> smart constructor.
data AlarmNotification
AlarmNotification' :: Maybe (NonEmpty NotificationAction) -> AlarmNotification

-- | Contains the notification settings of an alarm model. The settings
--   apply to all alarms that were created based on this alarm model.
[$sel:notificationActions:AlarmNotification'] :: AlarmNotification -> Maybe (NonEmpty NotificationAction)

-- | Create a value of <a>AlarmNotification</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:notificationActions:AlarmNotification'</a>,
--   <a>alarmNotification_notificationActions</a> - Contains the
--   notification settings of an alarm model. The settings apply to all
--   alarms that were created based on this alarm model.
newAlarmNotification :: AlarmNotification

-- | Contains the notification settings of an alarm model. The settings
--   apply to all alarms that were created based on this alarm model.
alarmNotification_notificationActions :: Lens' AlarmNotification (Maybe (NonEmpty NotificationAction))

-- | Defines when your alarm is invoked.
--   
--   <i>See:</i> <a>newAlarmRule</a> smart constructor.
data AlarmRule
AlarmRule' :: Maybe SimpleRule -> AlarmRule

-- | A rule that compares an input property value to a threshold value with
--   a comparison operator.
[$sel:simpleRule:AlarmRule'] :: AlarmRule -> Maybe SimpleRule

-- | Create a value of <a>AlarmRule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:simpleRule:AlarmRule'</a>, <a>alarmRule_simpleRule</a> - A
--   rule that compares an input property value to a threshold value with a
--   comparison operator.
newAlarmRule :: AlarmRule

-- | A rule that compares an input property value to a threshold value with
--   a comparison operator.
alarmRule_simpleRule :: Lens' AlarmRule (Maybe SimpleRule)

-- | Contains the result of the analysis.
--   
--   <i>See:</i> <a>newAnalysisResult</a> smart constructor.
data AnalysisResult
AnalysisResult' :: Maybe Text -> Maybe Text -> Maybe AnalysisResultLevel -> Maybe [AnalysisResultLocation] -> AnalysisResult

-- | The type of the analysis result. Analyses fall into the following
--   types based on the validators used to generate the analysis result:
--   
--   <ul>
--   <li><tt>supported-actions</tt> - You must specify AWS IoT Events
--   supported actions that work with other AWS services in a supported AWS
--   Region.</li>
--   <li><tt>service-limits</tt> - Resources or API operations can't exceed
--   service quotas (also known as limits). Update your detector model or
--   request a quota increase.</li>
--   <li><tt>structure</tt> - The detector model must follow a structure
--   that AWS IoT Events supports.</li>
--   <li><tt>expression-syntax</tt> - Your expression must follow the
--   required syntax.</li>
--   <li><tt>data-type</tt> - Data types referenced in the detector model
--   must be compatible.</li>
--   <li><tt>referenced-data</tt> - You must define the data referenced in
--   your detector model before you can use the data.</li>
--   <li><tt>referenced-resource</tt> - Resources that the detector model
--   uses must be available.</li>
--   </ul>
--   
--   For more information, see <a>Running detector model analyses</a> in
--   the <i>AWS IoT Events Developer Guide</i>.
[$sel:type':AnalysisResult'] :: AnalysisResult -> Maybe Text

-- | Contains additional information about the analysis result.
[$sel:message:AnalysisResult'] :: AnalysisResult -> Maybe Text

-- | The severity level of the analysis result. Based on the severity
--   level, analysis results fall into three general categories:
--   
--   <ul>
--   <li><tt>INFO</tt> - An information result tells you about a
--   significant field in your detector model. This type of result usually
--   doesn't require immediate action.</li>
--   <li><tt>WARNING</tt> - A warning result draws special attention to
--   fields that might cause issues for your detector model. We recommend
--   that you review warnings and take necessary actions before you use
--   your detector model in production environments. Otherwise, the
--   detector model might not work as expected.</li>
--   <li><tt>ERROR</tt> - An error result notifies you about a problem
--   found in your detector model. You must fix all errors before you can
--   publish your detector model.</li>
--   </ul>
[$sel:level:AnalysisResult'] :: AnalysisResult -> Maybe AnalysisResultLevel

-- | Contains one or more locations that you can use to locate the fields
--   in your detector model that the analysis result references.
[$sel:locations:AnalysisResult'] :: AnalysisResult -> Maybe [AnalysisResultLocation]

-- | Create a value of <a>AnalysisResult</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:type':AnalysisResult'</a>, <a>analysisResult_type</a> - The
--   type of the analysis result. Analyses fall into the following types
--   based on the validators used to generate the analysis result:
--   
--   <ul>
--   <li><tt>supported-actions</tt> - You must specify AWS IoT Events
--   supported actions that work with other AWS services in a supported AWS
--   Region.</li>
--   <li><tt>service-limits</tt> - Resources or API operations can't exceed
--   service quotas (also known as limits). Update your detector model or
--   request a quota increase.</li>
--   <li><tt>structure</tt> - The detector model must follow a structure
--   that AWS IoT Events supports.</li>
--   <li><tt>expression-syntax</tt> - Your expression must follow the
--   required syntax.</li>
--   <li><tt>data-type</tt> - Data types referenced in the detector model
--   must be compatible.</li>
--   <li><tt>referenced-data</tt> - You must define the data referenced in
--   your detector model before you can use the data.</li>
--   <li><tt>referenced-resource</tt> - Resources that the detector model
--   uses must be available.</li>
--   </ul>
--   
--   For more information, see <a>Running detector model analyses</a> in
--   the <i>AWS IoT Events Developer Guide</i>.
--   
--   <a>$sel:message:AnalysisResult'</a>, <a>analysisResult_message</a> -
--   Contains additional information about the analysis result.
--   
--   <a>$sel:level:AnalysisResult'</a>, <a>analysisResult_level</a> - The
--   severity level of the analysis result. Based on the severity level,
--   analysis results fall into three general categories:
--   
--   <ul>
--   <li><tt>INFO</tt> - An information result tells you about a
--   significant field in your detector model. This type of result usually
--   doesn't require immediate action.</li>
--   <li><tt>WARNING</tt> - A warning result draws special attention to
--   fields that might cause issues for your detector model. We recommend
--   that you review warnings and take necessary actions before you use
--   your detector model in production environments. Otherwise, the
--   detector model might not work as expected.</li>
--   <li><tt>ERROR</tt> - An error result notifies you about a problem
--   found in your detector model. You must fix all errors before you can
--   publish your detector model.</li>
--   </ul>
--   
--   <a>$sel:locations:AnalysisResult'</a>, <a>analysisResult_locations</a>
--   - Contains one or more locations that you can use to locate the fields
--   in your detector model that the analysis result references.
newAnalysisResult :: AnalysisResult

-- | The type of the analysis result. Analyses fall into the following
--   types based on the validators used to generate the analysis result:
--   
--   <ul>
--   <li><tt>supported-actions</tt> - You must specify AWS IoT Events
--   supported actions that work with other AWS services in a supported AWS
--   Region.</li>
--   <li><tt>service-limits</tt> - Resources or API operations can't exceed
--   service quotas (also known as limits). Update your detector model or
--   request a quota increase.</li>
--   <li><tt>structure</tt> - The detector model must follow a structure
--   that AWS IoT Events supports.</li>
--   <li><tt>expression-syntax</tt> - Your expression must follow the
--   required syntax.</li>
--   <li><tt>data-type</tt> - Data types referenced in the detector model
--   must be compatible.</li>
--   <li><tt>referenced-data</tt> - You must define the data referenced in
--   your detector model before you can use the data.</li>
--   <li><tt>referenced-resource</tt> - Resources that the detector model
--   uses must be available.</li>
--   </ul>
--   
--   For more information, see <a>Running detector model analyses</a> in
--   the <i>AWS IoT Events Developer Guide</i>.
analysisResult_type :: Lens' AnalysisResult (Maybe Text)

-- | Contains additional information about the analysis result.
analysisResult_message :: Lens' AnalysisResult (Maybe Text)

-- | The severity level of the analysis result. Based on the severity
--   level, analysis results fall into three general categories:
--   
--   <ul>
--   <li><tt>INFO</tt> - An information result tells you about a
--   significant field in your detector model. This type of result usually
--   doesn't require immediate action.</li>
--   <li><tt>WARNING</tt> - A warning result draws special attention to
--   fields that might cause issues for your detector model. We recommend
--   that you review warnings and take necessary actions before you use
--   your detector model in production environments. Otherwise, the
--   detector model might not work as expected.</li>
--   <li><tt>ERROR</tt> - An error result notifies you about a problem
--   found in your detector model. You must fix all errors before you can
--   publish your detector model.</li>
--   </ul>
analysisResult_level :: Lens' AnalysisResult (Maybe AnalysisResultLevel)

-- | Contains one or more locations that you can use to locate the fields
--   in your detector model that the analysis result references.
analysisResult_locations :: Lens' AnalysisResult (Maybe [AnalysisResultLocation])

-- | Contains information that you can use to locate the field in your
--   detector model that the analysis result references.
--   
--   <i>See:</i> <a>newAnalysisResultLocation</a> smart constructor.
data AnalysisResultLocation
AnalysisResultLocation' :: Maybe Text -> AnalysisResultLocation

-- | A <a>JsonPath</a> expression that identifies the error field in your
--   detector model.
[$sel:path:AnalysisResultLocation'] :: AnalysisResultLocation -> Maybe Text

-- | Create a value of <a>AnalysisResultLocation</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:path:AnalysisResultLocation'</a>,
--   <a>analysisResultLocation_path</a> - A <a>JsonPath</a> expression that
--   identifies the error field in your detector model.
newAnalysisResultLocation :: AnalysisResultLocation

-- | A <a>JsonPath</a> expression that identifies the error field in your
--   detector model.
analysisResultLocation_path :: Lens' AnalysisResultLocation (Maybe Text)

-- | A structure that contains timestamp information. For more information,
--   see <a>TimeInNanos</a> in the <i>AWS IoT SiteWise API Reference</i>.
--   
--   You must use expressions for all parameters in
--   <tt>AssetPropertyTimestamp</tt>. The expressions accept literals,
--   operators, functions, references, and substitution templates.
--   
--   <b>Examples</b>
--   
--   <ul>
--   <li>For literal values, the expressions must contain single quotes.
--   For example, the value for the <tt>timeInSeconds</tt> parameter can be
--   <tt>'1586400675'</tt>.</li>
--   <li>For references, you must specify either variables or input values.
--   For example, the value for the <tt>offsetInNanos</tt> parameter can be
--   <tt>$variable.time</tt>.</li>
--   <li>For a substitution template, you must use <tt>${}</tt>, and the
--   template must be in single quotes. A substitution template can also
--   contain a combination of literals, operators, functions, references,
--   and substitution templates.In the following example, the value for the
--   <tt>timeInSeconds</tt> parameter uses a substitution
--   template.<pre>'${$input.TemperatureInput.sensorData.timestamp /
--   1000}'</pre></li>
--   </ul>
--   
--   For more information, see <a>Expressions</a> in the <i>AWS IoT Events
--   Developer Guide</i>.
--   
--   <i>See:</i> <a>newAssetPropertyTimestamp</a> smart constructor.
data AssetPropertyTimestamp
AssetPropertyTimestamp' :: Maybe Text -> Text -> AssetPropertyTimestamp

-- | The nanosecond offset converted from <tt>timeInSeconds</tt>. The valid
--   range is between 0-999999999.
[$sel:offsetInNanos:AssetPropertyTimestamp'] :: AssetPropertyTimestamp -> Maybe Text

-- | The timestamp, in seconds, in the Unix epoch format. The valid range
--   is between 1-31556889864403199.
[$sel:timeInSeconds:AssetPropertyTimestamp'] :: AssetPropertyTimestamp -> Text

-- | Create a value of <a>AssetPropertyTimestamp</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:offsetInNanos:AssetPropertyTimestamp'</a>,
--   <a>assetPropertyTimestamp_offsetInNanos</a> - The nanosecond offset
--   converted from <tt>timeInSeconds</tt>. The valid range is between
--   0-999999999.
--   
--   <a>$sel:timeInSeconds:AssetPropertyTimestamp'</a>,
--   <a>assetPropertyTimestamp_timeInSeconds</a> - The timestamp, in
--   seconds, in the Unix epoch format. The valid range is between
--   1-31556889864403199.
newAssetPropertyTimestamp :: Text -> AssetPropertyTimestamp

-- | The nanosecond offset converted from <tt>timeInSeconds</tt>. The valid
--   range is between 0-999999999.
assetPropertyTimestamp_offsetInNanos :: Lens' AssetPropertyTimestamp (Maybe Text)

-- | The timestamp, in seconds, in the Unix epoch format. The valid range
--   is between 1-31556889864403199.
assetPropertyTimestamp_timeInSeconds :: Lens' AssetPropertyTimestamp Text

-- | A structure that contains value information. For more information, see
--   <a>AssetPropertyValue</a> in the <i>AWS IoT SiteWise API
--   Reference</i>.
--   
--   You must use expressions for all parameters in
--   <tt>AssetPropertyValue</tt>. The expressions accept literals,
--   operators, functions, references, and substitution templates.
--   
--   <b>Examples</b>
--   
--   <ul>
--   <li>For literal values, the expressions must contain single quotes.
--   For example, the value for the <tt>quality</tt> parameter can be
--   <tt>'GOOD'</tt>.</li>
--   <li>For references, you must specify either variables or input values.
--   For example, the value for the <tt>quality</tt> parameter can be
--   <tt>$input.TemperatureInput.sensorData.quality</tt>.</li>
--   </ul>
--   
--   For more information, see <a>Expressions</a> in the <i>AWS IoT Events
--   Developer Guide</i>.
--   
--   <i>See:</i> <a>newAssetPropertyValue</a> smart constructor.
data AssetPropertyValue
AssetPropertyValue' :: Maybe AssetPropertyVariant -> Maybe Text -> Maybe AssetPropertyTimestamp -> AssetPropertyValue

-- | The value to send to an asset property.
[$sel:value:AssetPropertyValue'] :: AssetPropertyValue -> Maybe AssetPropertyVariant

-- | The quality of the asset property value. The value must be
--   <tt>'GOOD'</tt>, <tt>'BAD'</tt>, or <tt>'UNCERTAIN'</tt>.
[$sel:quality:AssetPropertyValue'] :: AssetPropertyValue -> Maybe Text

-- | The timestamp associated with the asset property value. The default is
--   the current event time.
[$sel:timestamp:AssetPropertyValue'] :: AssetPropertyValue -> Maybe AssetPropertyTimestamp

-- | Create a value of <a>AssetPropertyValue</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:AssetPropertyValue'</a>, <a>assetPropertyValue_value</a>
--   - The value to send to an asset property.
--   
--   <a>$sel:quality:AssetPropertyValue'</a>,
--   <a>assetPropertyValue_quality</a> - The quality of the asset property
--   value. The value must be <tt>'GOOD'</tt>, <tt>'BAD'</tt>, or
--   <tt>'UNCERTAIN'</tt>.
--   
--   <a>$sel:timestamp:AssetPropertyValue'</a>,
--   <a>assetPropertyValue_timestamp</a> - The timestamp associated with
--   the asset property value. The default is the current event time.
newAssetPropertyValue :: AssetPropertyValue

-- | The value to send to an asset property.
assetPropertyValue_value :: Lens' AssetPropertyValue (Maybe AssetPropertyVariant)

-- | The quality of the asset property value. The value must be
--   <tt>'GOOD'</tt>, <tt>'BAD'</tt>, or <tt>'UNCERTAIN'</tt>.
assetPropertyValue_quality :: Lens' AssetPropertyValue (Maybe Text)

-- | The timestamp associated with the asset property value. The default is
--   the current event time.
assetPropertyValue_timestamp :: Lens' AssetPropertyValue (Maybe AssetPropertyTimestamp)

-- | A structure that contains an asset property value. For more
--   information, see <a>Variant</a> in the <i>AWS IoT SiteWise API
--   Reference</i>.
--   
--   You must use expressions for all parameters in
--   <tt>AssetPropertyVariant</tt>. The expressions accept literals,
--   operators, functions, references, and substitution templates.
--   
--   <b>Examples</b>
--   
--   <ul>
--   <li>For literal values, the expressions must contain single quotes.
--   For example, the value for the <tt>integerValue</tt> parameter can be
--   <tt>'100'</tt>.</li>
--   <li>For references, you must specify either variables or parameters.
--   For example, the value for the <tt>booleanValue</tt> parameter can be
--   <tt>$variable.offline</tt>.</li>
--   <li>For a substitution template, you must use <tt>${}</tt>, and the
--   template must be in single quotes. A substitution template can also
--   contain a combination of literals, operators, functions, references,
--   and substitution templates.In the following example, the value for the
--   <tt>doubleValue</tt> parameter uses a substitution
--   template.<pre>'${$input.TemperatureInput.sensorData.temperature * 6 /
--   5 + 32}'</pre></li>
--   </ul>
--   
--   For more information, see <a>Expressions</a> in the <i>AWS IoT Events
--   Developer Guide</i>.
--   
--   You must specify one of the following value types, depending on the
--   <tt>dataType</tt> of the specified asset property. For more
--   information, see <a>AssetProperty</a> in the <i>AWS IoT SiteWise API
--   Reference</i>.
--   
--   <i>See:</i> <a>newAssetPropertyVariant</a> smart constructor.
data AssetPropertyVariant
AssetPropertyVariant' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> AssetPropertyVariant

-- | The asset property value is an integer. You must use an expression,
--   and the evaluated result should be an integer.
[$sel:integerValue:AssetPropertyVariant'] :: AssetPropertyVariant -> Maybe Text

-- | The asset property value is a double. You must use an expression, and
--   the evaluated result should be a double.
[$sel:doubleValue:AssetPropertyVariant'] :: AssetPropertyVariant -> Maybe Text

-- | The asset property value is a string. You must use an expression, and
--   the evaluated result should be a string.
[$sel:stringValue:AssetPropertyVariant'] :: AssetPropertyVariant -> Maybe Text

-- | The asset property value is a Boolean value that must be
--   <tt>'TRUE'</tt> or <tt>'FALSE'</tt>. You must use an expression, and
--   the evaluated result should be a Boolean value.
[$sel:booleanValue:AssetPropertyVariant'] :: AssetPropertyVariant -> Maybe Text

-- | Create a value of <a>AssetPropertyVariant</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:integerValue:AssetPropertyVariant'</a>,
--   <a>assetPropertyVariant_integerValue</a> - The asset property value is
--   an integer. You must use an expression, and the evaluated result
--   should be an integer.
--   
--   <a>$sel:doubleValue:AssetPropertyVariant'</a>,
--   <a>assetPropertyVariant_doubleValue</a> - The asset property value is
--   a double. You must use an expression, and the evaluated result should
--   be a double.
--   
--   <a>$sel:stringValue:AssetPropertyVariant'</a>,
--   <a>assetPropertyVariant_stringValue</a> - The asset property value is
--   a string. You must use an expression, and the evaluated result should
--   be a string.
--   
--   <a>$sel:booleanValue:AssetPropertyVariant'</a>,
--   <a>assetPropertyVariant_booleanValue</a> - The asset property value is
--   a Boolean value that must be <tt>'TRUE'</tt> or <tt>'FALSE'</tt>. You
--   must use an expression, and the evaluated result should be a Boolean
--   value.
newAssetPropertyVariant :: AssetPropertyVariant

-- | The asset property value is an integer. You must use an expression,
--   and the evaluated result should be an integer.
assetPropertyVariant_integerValue :: Lens' AssetPropertyVariant (Maybe Text)

-- | The asset property value is a double. You must use an expression, and
--   the evaluated result should be a double.
assetPropertyVariant_doubleValue :: Lens' AssetPropertyVariant (Maybe Text)

-- | The asset property value is a string. You must use an expression, and
--   the evaluated result should be a string.
assetPropertyVariant_stringValue :: Lens' AssetPropertyVariant (Maybe Text)

-- | The asset property value is a Boolean value that must be
--   <tt>'TRUE'</tt> or <tt>'FALSE'</tt>. You must use an expression, and
--   the evaluated result should be a Boolean value.
assetPropertyVariant_booleanValue :: Lens' AssetPropertyVariant (Maybe Text)

-- | The attributes from the JSON payload that are made available by the
--   input. Inputs are derived from messages sent to the AWS IoT Events
--   system using <tt>BatchPutMessage</tt>. Each such message contains a
--   JSON payload. Those attributes (and their paired values) specified
--   here are available for use in the <tt>condition</tt> expressions used
--   by detectors.
--   
--   <i>See:</i> <a>newAttribute</a> smart constructor.
data Attribute
Attribute' :: Text -> Attribute

-- | An expression that specifies an attribute-value pair in a JSON
--   structure. Use this to specify an attribute from the JSON payload that
--   is made available by the input. Inputs are derived from messages sent
--   to AWS IoT Events (<tt>BatchPutMessage</tt>). Each such message
--   contains a JSON payload. The attribute (and its paired value)
--   specified here are available for use in the <tt>condition</tt>
--   expressions used by detectors.
--   
--   Syntax: <tt>&lt;field-name&gt;.&lt;field-name&gt;...</tt>
[$sel:jsonPath:Attribute'] :: Attribute -> Text

-- | Create a value of <a>Attribute</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jsonPath:Attribute'</a>, <a>attribute_jsonPath</a> - An
--   expression that specifies an attribute-value pair in a JSON structure.
--   Use this to specify an attribute from the JSON payload that is made
--   available by the input. Inputs are derived from messages sent to AWS
--   IoT Events (<tt>BatchPutMessage</tt>). Each such message contains a
--   JSON payload. The attribute (and its paired value) specified here are
--   available for use in the <tt>condition</tt> expressions used by
--   detectors.
--   
--   Syntax: <tt>&lt;field-name&gt;.&lt;field-name&gt;...</tt>
newAttribute :: Text -> Attribute

-- | An expression that specifies an attribute-value pair in a JSON
--   structure. Use this to specify an attribute from the JSON payload that
--   is made available by the input. Inputs are derived from messages sent
--   to AWS IoT Events (<tt>BatchPutMessage</tt>). Each such message
--   contains a JSON payload. The attribute (and its paired value)
--   specified here are available for use in the <tt>condition</tt>
--   expressions used by detectors.
--   
--   Syntax: <tt>&lt;field-name&gt;.&lt;field-name&gt;...</tt>
attribute_jsonPath :: Lens' Attribute Text

-- | Information needed to clear the timer.
--   
--   <i>See:</i> <a>newClearTimerAction</a> smart constructor.
data ClearTimerAction
ClearTimerAction' :: Text -> ClearTimerAction

-- | The name of the timer to clear.
[$sel:timerName:ClearTimerAction'] :: ClearTimerAction -> Text

-- | Create a value of <a>ClearTimerAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timerName:ClearTimerAction'</a>,
--   <a>clearTimerAction_timerName</a> - The name of the timer to clear.
newClearTimerAction :: Text -> ClearTimerAction

-- | The name of the timer to clear.
clearTimerAction_timerName :: Lens' ClearTimerAction Text

-- | The detector model and the specific detectors (instances) for which
--   the logging level is given.
--   
--   <i>See:</i> <a>newDetectorDebugOption</a> smart constructor.
data DetectorDebugOption
DetectorDebugOption' :: Maybe Text -> Text -> DetectorDebugOption

-- | The value of the input attribute key used to create the detector (the
--   instance of the detector model).
[$sel:keyValue:DetectorDebugOption'] :: DetectorDebugOption -> Maybe Text

-- | The name of the detector model.
[$sel:detectorModelName:DetectorDebugOption'] :: DetectorDebugOption -> Text

-- | Create a value of <a>DetectorDebugOption</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyValue:DetectorDebugOption'</a>,
--   <a>detectorDebugOption_keyValue</a> - The value of the input attribute
--   key used to create the detector (the instance of the detector model).
--   
--   <a>$sel:detectorModelName:DetectorDebugOption'</a>,
--   <a>detectorDebugOption_detectorModelName</a> - The name of the
--   detector model.
newDetectorDebugOption :: Text -> DetectorDebugOption

-- | The value of the input attribute key used to create the detector (the
--   instance of the detector model).
detectorDebugOption_keyValue :: Lens' DetectorDebugOption (Maybe Text)

-- | The name of the detector model.
detectorDebugOption_detectorModelName :: Lens' DetectorDebugOption Text

-- | Information about the detector model.
--   
--   <i>See:</i> <a>newDetectorModel</a> smart constructor.
data DetectorModel
DetectorModel' :: Maybe DetectorModelConfiguration -> Maybe DetectorModelDefinition -> DetectorModel

-- | Information about how the detector is configured.
[$sel:detectorModelConfiguration:DetectorModel'] :: DetectorModel -> Maybe DetectorModelConfiguration

-- | Information that defines how a detector operates.
[$sel:detectorModelDefinition:DetectorModel'] :: DetectorModel -> Maybe DetectorModelDefinition

-- | Create a value of <a>DetectorModel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:detectorModelConfiguration:DetectorModel'</a>,
--   <a>detectorModel_detectorModelConfiguration</a> - Information about
--   how the detector is configured.
--   
--   <a>$sel:detectorModelDefinition:DetectorModel'</a>,
--   <a>detectorModel_detectorModelDefinition</a> - Information that
--   defines how a detector operates.
newDetectorModel :: DetectorModel

-- | Information about how the detector is configured.
detectorModel_detectorModelConfiguration :: Lens' DetectorModel (Maybe DetectorModelConfiguration)

-- | Information that defines how a detector operates.
detectorModel_detectorModelDefinition :: Lens' DetectorModel (Maybe DetectorModelDefinition)

-- | Information about how the detector model is configured.
--   
--   <i>See:</i> <a>newDetectorModelConfiguration</a> smart constructor.
data DetectorModelConfiguration
DetectorModelConfiguration' :: Maybe POSIX -> Maybe DetectorModelVersionStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe EvaluationMethod -> Maybe Text -> DetectorModelConfiguration

-- | The time the detector model was created.
[$sel:creationTime:DetectorModelConfiguration'] :: DetectorModelConfiguration -> Maybe POSIX

-- | The status of the detector model.
[$sel:status:DetectorModelConfiguration'] :: DetectorModelConfiguration -> Maybe DetectorModelVersionStatus

-- | The name of the detector model.
[$sel:detectorModelName:DetectorModelConfiguration'] :: DetectorModelConfiguration -> Maybe Text

-- | The ARN of the detector model.
[$sel:detectorModelArn:DetectorModelConfiguration'] :: DetectorModelConfiguration -> Maybe Text

-- | A brief description of the detector model.
[$sel:detectorModelDescription:DetectorModelConfiguration'] :: DetectorModelConfiguration -> Maybe Text

-- | The value used to identify a detector instance. When a device or
--   system sends input, a new detector instance with a unique key value is
--   created. AWS IoT Events can continue to route input to its
--   corresponding detector instance based on this identifying information.
--   
--   This parameter uses a JSON-path expression to select the
--   attribute-value pair in the message payload that is used for
--   identification. To route the message to the correct detector instance,
--   the device must send a message payload that contains the same
--   attribute-value.
[$sel:key:DetectorModelConfiguration'] :: DetectorModelConfiguration -> Maybe Text

-- | The version of the detector model.
[$sel:detectorModelVersion:DetectorModelConfiguration'] :: DetectorModelConfiguration -> Maybe Text

-- | The time the detector model was last updated.
[$sel:lastUpdateTime:DetectorModelConfiguration'] :: DetectorModelConfiguration -> Maybe POSIX

-- | Information about the order in which events are evaluated and how
--   actions are executed.
[$sel:evaluationMethod:DetectorModelConfiguration'] :: DetectorModelConfiguration -> Maybe EvaluationMethod

-- | The ARN of the role that grants permission to AWS IoT Events to
--   perform its operations.
[$sel:roleArn:DetectorModelConfiguration'] :: DetectorModelConfiguration -> Maybe Text

-- | Create a value of <a>DetectorModelConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:DetectorModelConfiguration'</a>,
--   <a>detectorModelConfiguration_creationTime</a> - The time the detector
--   model was created.
--   
--   <a>$sel:status:DetectorModelConfiguration'</a>,
--   <a>detectorModelConfiguration_status</a> - The status of the detector
--   model.
--   
--   <a>$sel:detectorModelName:DetectorModelConfiguration'</a>,
--   <a>detectorModelConfiguration_detectorModelName</a> - The name of the
--   detector model.
--   
--   <a>$sel:detectorModelArn:DetectorModelConfiguration'</a>,
--   <a>detectorModelConfiguration_detectorModelArn</a> - The ARN of the
--   detector model.
--   
--   <a>$sel:detectorModelDescription:DetectorModelConfiguration'</a>,
--   <a>detectorModelConfiguration_detectorModelDescription</a> - A brief
--   description of the detector model.
--   
--   <a>$sel:key:DetectorModelConfiguration'</a>,
--   <a>detectorModelConfiguration_key</a> - The value used to identify a
--   detector instance. When a device or system sends input, a new detector
--   instance with a unique key value is created. AWS IoT Events can
--   continue to route input to its corresponding detector instance based
--   on this identifying information.
--   
--   This parameter uses a JSON-path expression to select the
--   attribute-value pair in the message payload that is used for
--   identification. To route the message to the correct detector instance,
--   the device must send a message payload that contains the same
--   attribute-value.
--   
--   <a>$sel:detectorModelVersion:DetectorModelConfiguration'</a>,
--   <a>detectorModelConfiguration_detectorModelVersion</a> - The version
--   of the detector model.
--   
--   <a>$sel:lastUpdateTime:DetectorModelConfiguration'</a>,
--   <a>detectorModelConfiguration_lastUpdateTime</a> - The time the
--   detector model was last updated.
--   
--   <a>$sel:evaluationMethod:DetectorModelConfiguration'</a>,
--   <a>detectorModelConfiguration_evaluationMethod</a> - Information about
--   the order in which events are evaluated and how actions are executed.
--   
--   <a>$sel:roleArn:DetectorModelConfiguration'</a>,
--   <a>detectorModelConfiguration_roleArn</a> - The ARN of the role that
--   grants permission to AWS IoT Events to perform its operations.
newDetectorModelConfiguration :: DetectorModelConfiguration

-- | The time the detector model was created.
detectorModelConfiguration_creationTime :: Lens' DetectorModelConfiguration (Maybe UTCTime)

-- | The status of the detector model.
detectorModelConfiguration_status :: Lens' DetectorModelConfiguration (Maybe DetectorModelVersionStatus)

-- | The name of the detector model.
detectorModelConfiguration_detectorModelName :: Lens' DetectorModelConfiguration (Maybe Text)

-- | The ARN of the detector model.
detectorModelConfiguration_detectorModelArn :: Lens' DetectorModelConfiguration (Maybe Text)

-- | A brief description of the detector model.
detectorModelConfiguration_detectorModelDescription :: Lens' DetectorModelConfiguration (Maybe Text)

-- | The value used to identify a detector instance. When a device or
--   system sends input, a new detector instance with a unique key value is
--   created. AWS IoT Events can continue to route input to its
--   corresponding detector instance based on this identifying information.
--   
--   This parameter uses a JSON-path expression to select the
--   attribute-value pair in the message payload that is used for
--   identification. To route the message to the correct detector instance,
--   the device must send a message payload that contains the same
--   attribute-value.
detectorModelConfiguration_key :: Lens' DetectorModelConfiguration (Maybe Text)

-- | The version of the detector model.
detectorModelConfiguration_detectorModelVersion :: Lens' DetectorModelConfiguration (Maybe Text)

-- | The time the detector model was last updated.
detectorModelConfiguration_lastUpdateTime :: Lens' DetectorModelConfiguration (Maybe UTCTime)

-- | Information about the order in which events are evaluated and how
--   actions are executed.
detectorModelConfiguration_evaluationMethod :: Lens' DetectorModelConfiguration (Maybe EvaluationMethod)

-- | The ARN of the role that grants permission to AWS IoT Events to
--   perform its operations.
detectorModelConfiguration_roleArn :: Lens' DetectorModelConfiguration (Maybe Text)

-- | Information that defines how a detector operates.
--   
--   <i>See:</i> <a>newDetectorModelDefinition</a> smart constructor.
data DetectorModelDefinition
DetectorModelDefinition' :: NonEmpty State -> Text -> DetectorModelDefinition

-- | Information about the states of the detector.
[$sel:states:DetectorModelDefinition'] :: DetectorModelDefinition -> NonEmpty State

-- | The state that is entered at the creation of each detector (instance).
[$sel:initialStateName:DetectorModelDefinition'] :: DetectorModelDefinition -> Text

-- | Create a value of <a>DetectorModelDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:states:DetectorModelDefinition'</a>,
--   <a>detectorModelDefinition_states</a> - Information about the states
--   of the detector.
--   
--   <a>$sel:initialStateName:DetectorModelDefinition'</a>,
--   <a>detectorModelDefinition_initialStateName</a> - The state that is
--   entered at the creation of each detector (instance).
newDetectorModelDefinition :: NonEmpty State -> Text -> DetectorModelDefinition

-- | Information about the states of the detector.
detectorModelDefinition_states :: Lens' DetectorModelDefinition (NonEmpty State)

-- | The state that is entered at the creation of each detector (instance).
detectorModelDefinition_initialStateName :: Lens' DetectorModelDefinition Text

-- | Information about the detector model.
--   
--   <i>See:</i> <a>newDetectorModelSummary</a> smart constructor.
data DetectorModelSummary
DetectorModelSummary' :: Maybe POSIX -> Maybe Text -> Maybe Text -> DetectorModelSummary

-- | The time the detector model was created.
[$sel:creationTime:DetectorModelSummary'] :: DetectorModelSummary -> Maybe POSIX

-- | The name of the detector model.
[$sel:detectorModelName:DetectorModelSummary'] :: DetectorModelSummary -> Maybe Text

-- | A brief description of the detector model.
[$sel:detectorModelDescription:DetectorModelSummary'] :: DetectorModelSummary -> Maybe Text

-- | Create a value of <a>DetectorModelSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:DetectorModelSummary'</a>,
--   <a>detectorModelSummary_creationTime</a> - The time the detector model
--   was created.
--   
--   <a>$sel:detectorModelName:DetectorModelSummary'</a>,
--   <a>detectorModelSummary_detectorModelName</a> - The name of the
--   detector model.
--   
--   <a>$sel:detectorModelDescription:DetectorModelSummary'</a>,
--   <a>detectorModelSummary_detectorModelDescription</a> - A brief
--   description of the detector model.
newDetectorModelSummary :: DetectorModelSummary

-- | The time the detector model was created.
detectorModelSummary_creationTime :: Lens' DetectorModelSummary (Maybe UTCTime)

-- | The name of the detector model.
detectorModelSummary_detectorModelName :: Lens' DetectorModelSummary (Maybe Text)

-- | A brief description of the detector model.
detectorModelSummary_detectorModelDescription :: Lens' DetectorModelSummary (Maybe Text)

-- | Information about the detector model version.
--   
--   <i>See:</i> <a>newDetectorModelVersionSummary</a> smart constructor.
data DetectorModelVersionSummary
DetectorModelVersionSummary' :: Maybe POSIX -> Maybe DetectorModelVersionStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe EvaluationMethod -> Maybe Text -> DetectorModelVersionSummary

-- | The time the detector model version was created.
[$sel:creationTime:DetectorModelVersionSummary'] :: DetectorModelVersionSummary -> Maybe POSIX

-- | The status of the detector model version.
[$sel:status:DetectorModelVersionSummary'] :: DetectorModelVersionSummary -> Maybe DetectorModelVersionStatus

-- | The name of the detector model.
[$sel:detectorModelName:DetectorModelVersionSummary'] :: DetectorModelVersionSummary -> Maybe Text

-- | The ARN of the detector model version.
[$sel:detectorModelArn:DetectorModelVersionSummary'] :: DetectorModelVersionSummary -> Maybe Text

-- | The ID of the detector model version.
[$sel:detectorModelVersion:DetectorModelVersionSummary'] :: DetectorModelVersionSummary -> Maybe Text

-- | The last time the detector model version was updated.
[$sel:lastUpdateTime:DetectorModelVersionSummary'] :: DetectorModelVersionSummary -> Maybe POSIX

-- | Information about the order in which events are evaluated and how
--   actions are executed.
[$sel:evaluationMethod:DetectorModelVersionSummary'] :: DetectorModelVersionSummary -> Maybe EvaluationMethod

-- | The ARN of the role that grants the detector model permission to
--   perform its tasks.
[$sel:roleArn:DetectorModelVersionSummary'] :: DetectorModelVersionSummary -> Maybe Text

-- | Create a value of <a>DetectorModelVersionSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:DetectorModelVersionSummary'</a>,
--   <a>detectorModelVersionSummary_creationTime</a> - The time the
--   detector model version was created.
--   
--   <a>$sel:status:DetectorModelVersionSummary'</a>,
--   <a>detectorModelVersionSummary_status</a> - The status of the detector
--   model version.
--   
--   <a>$sel:detectorModelName:DetectorModelVersionSummary'</a>,
--   <a>detectorModelVersionSummary_detectorModelName</a> - The name of the
--   detector model.
--   
--   <a>$sel:detectorModelArn:DetectorModelVersionSummary'</a>,
--   <a>detectorModelVersionSummary_detectorModelArn</a> - The ARN of the
--   detector model version.
--   
--   <a>$sel:detectorModelVersion:DetectorModelVersionSummary'</a>,
--   <a>detectorModelVersionSummary_detectorModelVersion</a> - The ID of
--   the detector model version.
--   
--   <a>$sel:lastUpdateTime:DetectorModelVersionSummary'</a>,
--   <a>detectorModelVersionSummary_lastUpdateTime</a> - The last time the
--   detector model version was updated.
--   
--   <a>$sel:evaluationMethod:DetectorModelVersionSummary'</a>,
--   <a>detectorModelVersionSummary_evaluationMethod</a> - Information
--   about the order in which events are evaluated and how actions are
--   executed.
--   
--   <a>$sel:roleArn:DetectorModelVersionSummary'</a>,
--   <a>detectorModelVersionSummary_roleArn</a> - The ARN of the role that
--   grants the detector model permission to perform its tasks.
newDetectorModelVersionSummary :: DetectorModelVersionSummary

-- | The time the detector model version was created.
detectorModelVersionSummary_creationTime :: Lens' DetectorModelVersionSummary (Maybe UTCTime)

-- | The status of the detector model version.
detectorModelVersionSummary_status :: Lens' DetectorModelVersionSummary (Maybe DetectorModelVersionStatus)

-- | The name of the detector model.
detectorModelVersionSummary_detectorModelName :: Lens' DetectorModelVersionSummary (Maybe Text)

-- | The ARN of the detector model version.
detectorModelVersionSummary_detectorModelArn :: Lens' DetectorModelVersionSummary (Maybe Text)

-- | The ID of the detector model version.
detectorModelVersionSummary_detectorModelVersion :: Lens' DetectorModelVersionSummary (Maybe Text)

-- | The last time the detector model version was updated.
detectorModelVersionSummary_lastUpdateTime :: Lens' DetectorModelVersionSummary (Maybe UTCTime)

-- | Information about the order in which events are evaluated and how
--   actions are executed.
detectorModelVersionSummary_evaluationMethod :: Lens' DetectorModelVersionSummary (Maybe EvaluationMethod)

-- | The ARN of the role that grants the detector model permission to
--   perform its tasks.
detectorModelVersionSummary_roleArn :: Lens' DetectorModelVersionSummary (Maybe Text)

-- | Defines an action to write to the Amazon DynamoDB table that you
--   created. The standard action payload contains all the information
--   about the detector model instance and the event that triggered the
--   action. You can customize the <a>payload</a>. One column of the
--   DynamoDB table receives all attribute-value pairs in the payload that
--   you specify.
--   
--   You must use expressions for all parameters in
--   <tt>DynamoDBAction</tt>. The expressions accept literals, operators,
--   functions, references, and substitution templates.
--   
--   <b>Examples</b>
--   
--   <ul>
--   <li>For literal values, the expressions must contain single quotes.
--   For example, the value for the <tt>hashKeyType</tt> parameter can be
--   <tt>'STRING'</tt>.</li>
--   <li>For references, you must specify either variables or input values.
--   For example, the value for the <tt>hashKeyField</tt> parameter can be
--   <tt>$input.GreenhouseInput.name</tt>.</li>
--   <li>For a substitution template, you must use <tt>${}</tt>, and the
--   template must be in single quotes. A substitution template can also
--   contain a combination of literals, operators, functions, references,
--   and substitution templates.In the following example, the value for the
--   <tt>hashKeyValue</tt> parameter uses a substitution
--   template.<pre>'${$input.GreenhouseInput.temperature * 6 / 5 + 32} in
--   Fahrenheit'</pre></li>
--   <li>For a string concatenation, you must use <tt>+</tt>. A string
--   concatenation can also contain a combination of literals, operators,
--   functions, references, and substitution templates.In the following
--   example, the value for the <tt>tableName</tt> parameter uses a string
--   concatenation.<pre>'GreenhouseTemperatureTable ' +
--   $input.GreenhouseInput.date</pre></li>
--   </ul>
--   
--   For more information, see <a>Expressions</a> in the <i>AWS IoT Events
--   Developer Guide</i>.
--   
--   If the defined payload type is a string, <tt>DynamoDBAction</tt>
--   writes non-JSON data to the DynamoDB table as binary data. The
--   DynamoDB console displays the data as Base64-encoded text. The value
--   for the <tt>payloadField</tt> parameter is
--   <tt>&lt;payload-field&gt;_raw</tt>.
--   
--   <i>See:</i> <a>newDynamoDBAction</a> smart constructor.
data DynamoDBAction
DynamoDBAction' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Payload -> Maybe Text -> Maybe Text -> Maybe Text -> Text -> Text -> Text -> DynamoDBAction

-- | The data type for the hash key (also called the partition key). You
--   can specify the following values:
--   
--   <ul>
--   <li><tt>'STRING'</tt> - The hash key is a string.</li>
--   <li><tt>'NUMBER'</tt> - The hash key is a number.</li>
--   </ul>
--   
--   If you don't specify <tt>hashKeyType</tt>, the default value is
--   <tt>'STRING'</tt>.
[$sel:hashKeyType:DynamoDBAction'] :: DynamoDBAction -> Maybe Text

-- | The type of operation to perform. You can specify the following
--   values:
--   
--   <ul>
--   <li><tt>'INSERT'</tt> - Insert data as a new item into the DynamoDB
--   table. This item uses the specified hash key as a partition key. If
--   you specified a range key, the item uses the range key as a sort
--   key.</li>
--   <li><tt>'UPDATE'</tt> - Update an existing item of the DynamoDB table
--   with new data. This item's partition key must match the specified hash
--   key. If you specified a range key, the range key must match the item's
--   sort key.</li>
--   <li><tt>'DELETE'</tt> - Delete an existing item of the DynamoDB table.
--   This item's partition key must match the specified hash key. If you
--   specified a range key, the range key must match the item's sort
--   key.</li>
--   </ul>
--   
--   If you don't specify this parameter, AWS IoT Events triggers the
--   <tt>'INSERT'</tt> operation.
[$sel:operation:DynamoDBAction'] :: DynamoDBAction -> Maybe Text

-- | The data type for the range key (also called the sort key), You can
--   specify the following values:
--   
--   <ul>
--   <li><tt>'STRING'</tt> - The range key is a string.</li>
--   <li><tt>'NUMBER'</tt> - The range key is number.</li>
--   </ul>
--   
--   If you don't specify <tt>rangeKeyField</tt>, the default value is
--   <tt>'STRING'</tt>.
[$sel:rangeKeyType:DynamoDBAction'] :: DynamoDBAction -> Maybe Text
[$sel:payload:DynamoDBAction'] :: DynamoDBAction -> Maybe Payload

-- | The name of the DynamoDB column that receives the action payload.
--   
--   If you don't specify this parameter, the name of the DynamoDB column
--   is <tt>payload</tt>.
[$sel:payloadField:DynamoDBAction'] :: DynamoDBAction -> Maybe Text

-- | The name of the range key (also called the sort key). The
--   <tt>rangeKeyField</tt> value must match the sort key of the target
--   DynamoDB table.
[$sel:rangeKeyField:DynamoDBAction'] :: DynamoDBAction -> Maybe Text

-- | The value of the range key (also called the sort key).
[$sel:rangeKeyValue:DynamoDBAction'] :: DynamoDBAction -> Maybe Text

-- | The name of the hash key (also called the partition key). The
--   <tt>hashKeyField</tt> value must match the partition key of the target
--   DynamoDB table.
[$sel:hashKeyField:DynamoDBAction'] :: DynamoDBAction -> Text

-- | The value of the hash key (also called the partition key).
[$sel:hashKeyValue:DynamoDBAction'] :: DynamoDBAction -> Text

-- | The name of the DynamoDB table. The <tt>tableName</tt> value must
--   match the table name of the target DynamoDB table.
[$sel:tableName:DynamoDBAction'] :: DynamoDBAction -> Text

-- | Create a value of <a>DynamoDBAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hashKeyType:DynamoDBAction'</a>,
--   <a>dynamoDBAction_hashKeyType</a> - The data type for the hash key
--   (also called the partition key). You can specify the following values:
--   
--   <ul>
--   <li><tt>'STRING'</tt> - The hash key is a string.</li>
--   <li><tt>'NUMBER'</tt> - The hash key is a number.</li>
--   </ul>
--   
--   If you don't specify <tt>hashKeyType</tt>, the default value is
--   <tt>'STRING'</tt>.
--   
--   <a>$sel:operation:DynamoDBAction'</a>, <a>dynamoDBAction_operation</a>
--   - The type of operation to perform. You can specify the following
--   values:
--   
--   <ul>
--   <li><tt>'INSERT'</tt> - Insert data as a new item into the DynamoDB
--   table. This item uses the specified hash key as a partition key. If
--   you specified a range key, the item uses the range key as a sort
--   key.</li>
--   <li><tt>'UPDATE'</tt> - Update an existing item of the DynamoDB table
--   with new data. This item's partition key must match the specified hash
--   key. If you specified a range key, the range key must match the item's
--   sort key.</li>
--   <li><tt>'DELETE'</tt> - Delete an existing item of the DynamoDB table.
--   This item's partition key must match the specified hash key. If you
--   specified a range key, the range key must match the item's sort
--   key.</li>
--   </ul>
--   
--   If you don't specify this parameter, AWS IoT Events triggers the
--   <tt>'INSERT'</tt> operation.
--   
--   <a>$sel:rangeKeyType:DynamoDBAction'</a>,
--   <a>dynamoDBAction_rangeKeyType</a> - The data type for the range key
--   (also called the sort key), You can specify the following values:
--   
--   <ul>
--   <li><tt>'STRING'</tt> - The range key is a string.</li>
--   <li><tt>'NUMBER'</tt> - The range key is number.</li>
--   </ul>
--   
--   If you don't specify <tt>rangeKeyField</tt>, the default value is
--   <tt>'STRING'</tt>.
--   
--   <a>$sel:payload:DynamoDBAction'</a>, <a>dynamoDBAction_payload</a> -
--   Undocumented member.
--   
--   <a>$sel:payloadField:DynamoDBAction'</a>,
--   <a>dynamoDBAction_payloadField</a> - The name of the DynamoDB column
--   that receives the action payload.
--   
--   If you don't specify this parameter, the name of the DynamoDB column
--   is <tt>payload</tt>.
--   
--   <a>$sel:rangeKeyField:DynamoDBAction'</a>,
--   <a>dynamoDBAction_rangeKeyField</a> - The name of the range key (also
--   called the sort key). The <tt>rangeKeyField</tt> value must match the
--   sort key of the target DynamoDB table.
--   
--   <a>$sel:rangeKeyValue:DynamoDBAction'</a>,
--   <a>dynamoDBAction_rangeKeyValue</a> - The value of the range key (also
--   called the sort key).
--   
--   <a>$sel:hashKeyField:DynamoDBAction'</a>,
--   <a>dynamoDBAction_hashKeyField</a> - The name of the hash key (also
--   called the partition key). The <tt>hashKeyField</tt> value must match
--   the partition key of the target DynamoDB table.
--   
--   <a>$sel:hashKeyValue:DynamoDBAction'</a>,
--   <a>dynamoDBAction_hashKeyValue</a> - The value of the hash key (also
--   called the partition key).
--   
--   <a>$sel:tableName:DynamoDBAction'</a>, <a>dynamoDBAction_tableName</a>
--   - The name of the DynamoDB table. The <tt>tableName</tt> value must
--   match the table name of the target DynamoDB table.
newDynamoDBAction :: Text -> Text -> Text -> DynamoDBAction

-- | The data type for the hash key (also called the partition key). You
--   can specify the following values:
--   
--   <ul>
--   <li><tt>'STRING'</tt> - The hash key is a string.</li>
--   <li><tt>'NUMBER'</tt> - The hash key is a number.</li>
--   </ul>
--   
--   If you don't specify <tt>hashKeyType</tt>, the default value is
--   <tt>'STRING'</tt>.
dynamoDBAction_hashKeyType :: Lens' DynamoDBAction (Maybe Text)

-- | The type of operation to perform. You can specify the following
--   values:
--   
--   <ul>
--   <li><tt>'INSERT'</tt> - Insert data as a new item into the DynamoDB
--   table. This item uses the specified hash key as a partition key. If
--   you specified a range key, the item uses the range key as a sort
--   key.</li>
--   <li><tt>'UPDATE'</tt> - Update an existing item of the DynamoDB table
--   with new data. This item's partition key must match the specified hash
--   key. If you specified a range key, the range key must match the item's
--   sort key.</li>
--   <li><tt>'DELETE'</tt> - Delete an existing item of the DynamoDB table.
--   This item's partition key must match the specified hash key. If you
--   specified a range key, the range key must match the item's sort
--   key.</li>
--   </ul>
--   
--   If you don't specify this parameter, AWS IoT Events triggers the
--   <tt>'INSERT'</tt> operation.
dynamoDBAction_operation :: Lens' DynamoDBAction (Maybe Text)

-- | The data type for the range key (also called the sort key), You can
--   specify the following values:
--   
--   <ul>
--   <li><tt>'STRING'</tt> - The range key is a string.</li>
--   <li><tt>'NUMBER'</tt> - The range key is number.</li>
--   </ul>
--   
--   If you don't specify <tt>rangeKeyField</tt>, the default value is
--   <tt>'STRING'</tt>.
dynamoDBAction_rangeKeyType :: Lens' DynamoDBAction (Maybe Text)

-- | Undocumented member.
dynamoDBAction_payload :: Lens' DynamoDBAction (Maybe Payload)

-- | The name of the DynamoDB column that receives the action payload.
--   
--   If you don't specify this parameter, the name of the DynamoDB column
--   is <tt>payload</tt>.
dynamoDBAction_payloadField :: Lens' DynamoDBAction (Maybe Text)

-- | The name of the range key (also called the sort key). The
--   <tt>rangeKeyField</tt> value must match the sort key of the target
--   DynamoDB table.
dynamoDBAction_rangeKeyField :: Lens' DynamoDBAction (Maybe Text)

-- | The value of the range key (also called the sort key).
dynamoDBAction_rangeKeyValue :: Lens' DynamoDBAction (Maybe Text)

-- | The name of the hash key (also called the partition key). The
--   <tt>hashKeyField</tt> value must match the partition key of the target
--   DynamoDB table.
dynamoDBAction_hashKeyField :: Lens' DynamoDBAction Text

-- | The value of the hash key (also called the partition key).
dynamoDBAction_hashKeyValue :: Lens' DynamoDBAction Text

-- | The name of the DynamoDB table. The <tt>tableName</tt> value must
--   match the table name of the target DynamoDB table.
dynamoDBAction_tableName :: Lens' DynamoDBAction Text

-- | Defines an action to write to the Amazon DynamoDB table that you
--   created. The default action payload contains all the information about
--   the detector model instance and the event that triggered the action.
--   You can customize the <a>payload</a>. A separate column of the
--   DynamoDB table receives one attribute-value pair in the payload that
--   you specify.
--   
--   You must use expressions for all parameters in
--   <tt>DynamoDBv2Action</tt>. The expressions accept literals, operators,
--   functions, references, and substitution templates.
--   
--   <b>Examples</b>
--   
--   <ul>
--   <li>For literal values, the expressions must contain single quotes.
--   For example, the value for the <tt>tableName</tt> parameter can be
--   <tt>'GreenhouseTemperatureTable'</tt>.</li>
--   <li>For references, you must specify either variables or input values.
--   For example, the value for the <tt>tableName</tt> parameter can be
--   <tt>$variable.ddbtableName</tt>.</li>
--   <li>For a substitution template, you must use <tt>${}</tt>, and the
--   template must be in single quotes. A substitution template can also
--   contain a combination of literals, operators, functions, references,
--   and substitution templates.In the following example, the value for the
--   <tt>contentExpression</tt> parameter in <tt>Payload</tt> uses a
--   substitution template.<pre>'{\"sensorID\":
--   \"${$input.GreenhouseInput.sensor_id}\", \"temperature\":
--   \"${$input.GreenhouseInput.temperature * 9 / 5 + 32}\"}'</pre></li>
--   <li>For a string concatenation, you must use <tt>+</tt>. A string
--   concatenation can also contain a combination of literals, operators,
--   functions, references, and substitution templates.In the following
--   example, the value for the <tt>tableName</tt> parameter uses a string
--   concatenation.<pre>'GreenhouseTemperatureTable ' +
--   $input.GreenhouseInput.date</pre></li>
--   </ul>
--   
--   For more information, see <a>Expressions</a> in the <i>AWS IoT Events
--   Developer Guide</i>.
--   
--   The value for the <tt>type</tt> parameter in <tt>Payload</tt> must be
--   <tt>JSON</tt>.
--   
--   <i>See:</i> <a>newDynamoDBv2Action</a> smart constructor.
data DynamoDBv2Action
DynamoDBv2Action' :: Maybe Payload -> Text -> DynamoDBv2Action
[$sel:payload:DynamoDBv2Action'] :: DynamoDBv2Action -> Maybe Payload

-- | The name of the DynamoDB table.
[$sel:tableName:DynamoDBv2Action'] :: DynamoDBv2Action -> Text

-- | Create a value of <a>DynamoDBv2Action</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:payload:DynamoDBv2Action'</a>, <a>dynamoDBv2Action_payload</a>
--   - Undocumented member.
--   
--   <a>$sel:tableName:DynamoDBv2Action'</a>,
--   <a>dynamoDBv2Action_tableName</a> - The name of the DynamoDB table.
newDynamoDBv2Action :: Text -> DynamoDBv2Action

-- | Undocumented member.
dynamoDBv2Action_payload :: Lens' DynamoDBv2Action (Maybe Payload)

-- | The name of the DynamoDB table.
dynamoDBv2Action_tableName :: Lens' DynamoDBv2Action Text

-- | Contains the configuration information of email notifications.
--   
--   <i>See:</i> <a>newEmailConfiguration</a> smart constructor.
data EmailConfiguration
EmailConfiguration' :: Maybe EmailContent -> Text -> EmailRecipients -> EmailConfiguration

-- | Contains the subject and message of an email.
[$sel:content:EmailConfiguration'] :: EmailConfiguration -> Maybe EmailContent

-- | The email address that sends emails.
--   
--   If you use the AWS IoT Events managed AWS Lambda function to manage
--   your emails, you must <a>verify the email address that sends emails in
--   Amazon SES</a>.
[$sel:from:EmailConfiguration'] :: EmailConfiguration -> Text

-- | Contains the information of one or more recipients who receive the
--   emails.
--   
--   You must <a>add the users that receive emails to your AWS SSO
--   store</a>.
[$sel:recipients:EmailConfiguration'] :: EmailConfiguration -> EmailRecipients

-- | Create a value of <a>EmailConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:content:EmailConfiguration'</a>,
--   <a>emailConfiguration_content</a> - Contains the subject and message
--   of an email.
--   
--   <a>$sel:from:EmailConfiguration'</a>, <a>emailConfiguration_from</a> -
--   The email address that sends emails.
--   
--   If you use the AWS IoT Events managed AWS Lambda function to manage
--   your emails, you must <a>verify the email address that sends emails in
--   Amazon SES</a>.
--   
--   <a>$sel:recipients:EmailConfiguration'</a>,
--   <a>emailConfiguration_recipients</a> - Contains the information of one
--   or more recipients who receive the emails.
--   
--   You must <a>add the users that receive emails to your AWS SSO
--   store</a>.
newEmailConfiguration :: Text -> EmailRecipients -> EmailConfiguration

-- | Contains the subject and message of an email.
emailConfiguration_content :: Lens' EmailConfiguration (Maybe EmailContent)

-- | The email address that sends emails.
--   
--   If you use the AWS IoT Events managed AWS Lambda function to manage
--   your emails, you must <a>verify the email address that sends emails in
--   Amazon SES</a>.
emailConfiguration_from :: Lens' EmailConfiguration Text

-- | Contains the information of one or more recipients who receive the
--   emails.
--   
--   You must <a>add the users that receive emails to your AWS SSO
--   store</a>.
emailConfiguration_recipients :: Lens' EmailConfiguration EmailRecipients

-- | Contains the subject and message of an email.
--   
--   <i>See:</i> <a>newEmailContent</a> smart constructor.
data EmailContent
EmailContent' :: Maybe Text -> Maybe Text -> EmailContent

-- | The subject of the email.
[$sel:subject:EmailContent'] :: EmailContent -> Maybe Text

-- | The message that you want to send. The message can be up to 200
--   characters.
[$sel:additionalMessage:EmailContent'] :: EmailContent -> Maybe Text

-- | Create a value of <a>EmailContent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subject:EmailContent'</a>, <a>emailContent_subject</a> - The
--   subject of the email.
--   
--   <a>$sel:additionalMessage:EmailContent'</a>,
--   <a>emailContent_additionalMessage</a> - The message that you want to
--   send. The message can be up to 200 characters.
newEmailContent :: EmailContent

-- | The subject of the email.
emailContent_subject :: Lens' EmailContent (Maybe Text)

-- | The message that you want to send. The message can be up to 200
--   characters.
emailContent_additionalMessage :: Lens' EmailContent (Maybe Text)

-- | Contains the information of one or more recipients who receive the
--   emails.
--   
--   You must <a>add the users that receive emails to your AWS SSO
--   store</a>.
--   
--   <i>See:</i> <a>newEmailRecipients</a> smart constructor.
data EmailRecipients
EmailRecipients' :: Maybe (NonEmpty RecipientDetail) -> EmailRecipients

-- | Specifies one or more recipients who receive the email.
[$sel:to:EmailRecipients'] :: EmailRecipients -> Maybe (NonEmpty RecipientDetail)

-- | Create a value of <a>EmailRecipients</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:to:EmailRecipients'</a>, <a>emailRecipients_to</a> - Specifies
--   one or more recipients who receive the email.
newEmailRecipients :: EmailRecipients

-- | Specifies one or more recipients who receive the email.
emailRecipients_to :: Lens' EmailRecipients (Maybe (NonEmpty RecipientDetail))

-- | Specifies the <tt>actions</tt> to be performed when the
--   <tt>condition</tt> evaluates to TRUE.
--   
--   <i>See:</i> <a>newEvent</a> smart constructor.
data Event
Event' :: Maybe [Action] -> Maybe Text -> Text -> Event

-- | The actions to be performed.
[$sel:actions:Event'] :: Event -> Maybe [Action]

-- | Optional. The Boolean expression that, when TRUE, causes the
--   <tt>actions</tt> to be performed. If not present, the actions are
--   performed (=TRUE). If the expression result is not a Boolean value,
--   the actions are not performed (=FALSE).
[$sel:condition:Event'] :: Event -> Maybe Text

-- | The name of the event.
[$sel:eventName:Event'] :: Event -> Text

-- | Create a value of <a>Event</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:actions:Event'</a>, <a>event_actions</a> - The actions to be
--   performed.
--   
--   <a>$sel:condition:Event'</a>, <a>event_condition</a> - Optional. The
--   Boolean expression that, when TRUE, causes the <tt>actions</tt> to be
--   performed. If not present, the actions are performed (=TRUE). If the
--   expression result is not a Boolean value, the actions are not
--   performed (=FALSE).
--   
--   <a>$sel:eventName:Event'</a>, <a>event_eventName</a> - The name of the
--   event.
newEvent :: Text -> Event

-- | The actions to be performed.
event_actions :: Lens' Event (Maybe [Action])

-- | Optional. The Boolean expression that, when TRUE, causes the
--   <tt>actions</tt> to be performed. If not present, the actions are
--   performed (=TRUE). If the expression result is not a Boolean value,
--   the actions are not performed (=FALSE).
event_condition :: Lens' Event (Maybe Text)

-- | The name of the event.
event_eventName :: Lens' Event Text

-- | Sends information about the detector model instance and the event that
--   triggered the action to an Amazon Kinesis Data Firehose delivery
--   stream.
--   
--   <i>See:</i> <a>newFirehoseAction</a> smart constructor.
data FirehoseAction
FirehoseAction' :: Maybe Text -> Maybe Payload -> Text -> FirehoseAction

-- | A character separator that is used to separate records written to the
--   Kinesis Data Firehose delivery stream. Valid values are: '\n'
--   (newline), '\t' (tab), '\r\n' (Windows newline), ',' (comma).
[$sel:separator:FirehoseAction'] :: FirehoseAction -> Maybe Text

-- | You can configure the action payload when you send a message to an
--   Amazon Kinesis Data Firehose delivery stream.
[$sel:payload:FirehoseAction'] :: FirehoseAction -> Maybe Payload

-- | The name of the Kinesis Data Firehose delivery stream where the data
--   is written.
[$sel:deliveryStreamName:FirehoseAction'] :: FirehoseAction -> Text

-- | Create a value of <a>FirehoseAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:separator:FirehoseAction'</a>, <a>firehoseAction_separator</a>
--   - A character separator that is used to separate records written to
--   the Kinesis Data Firehose delivery stream. Valid values are: '\n'
--   (newline), '\t' (tab), '\r\n' (Windows newline), ',' (comma).
--   
--   <a>$sel:payload:FirehoseAction'</a>, <a>firehoseAction_payload</a> -
--   You can configure the action payload when you send a message to an
--   Amazon Kinesis Data Firehose delivery stream.
--   
--   <a>$sel:deliveryStreamName:FirehoseAction'</a>,
--   <a>firehoseAction_deliveryStreamName</a> - The name of the Kinesis
--   Data Firehose delivery stream where the data is written.
newFirehoseAction :: Text -> FirehoseAction

-- | A character separator that is used to separate records written to the
--   Kinesis Data Firehose delivery stream. Valid values are: '\n'
--   (newline), '\t' (tab), '\r\n' (Windows newline), ',' (comma).
firehoseAction_separator :: Lens' FirehoseAction (Maybe Text)

-- | You can configure the action payload when you send a message to an
--   Amazon Kinesis Data Firehose delivery stream.
firehoseAction_payload :: Lens' FirehoseAction (Maybe Payload)

-- | The name of the Kinesis Data Firehose delivery stream where the data
--   is written.
firehoseAction_deliveryStreamName :: Lens' FirehoseAction Text

-- | Specifies the default alarm state. The configuration applies to all
--   alarms that were created based on this alarm model.
--   
--   <i>See:</i> <a>newInitializationConfiguration</a> smart constructor.
data InitializationConfiguration
InitializationConfiguration' :: Bool -> InitializationConfiguration

-- | The value must be <tt>TRUE</tt> or <tt>FALSE</tt>. If <tt>FALSE</tt>,
--   all alarm instances created based on the alarm model are activated.
--   The default value is <tt>TRUE</tt>.
[$sel:disabledOnInitialization:InitializationConfiguration'] :: InitializationConfiguration -> Bool

-- | Create a value of <a>InitializationConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:disabledOnInitialization:InitializationConfiguration'</a>,
--   <a>initializationConfiguration_disabledOnInitialization</a> - The
--   value must be <tt>TRUE</tt> or <tt>FALSE</tt>. If <tt>FALSE</tt>, all
--   alarm instances created based on the alarm model are activated. The
--   default value is <tt>TRUE</tt>.
newInitializationConfiguration :: Bool -> InitializationConfiguration

-- | The value must be <tt>TRUE</tt> or <tt>FALSE</tt>. If <tt>FALSE</tt>,
--   all alarm instances created based on the alarm model are activated.
--   The default value is <tt>TRUE</tt>.
initializationConfiguration_disabledOnInitialization :: Lens' InitializationConfiguration Bool

-- | Information about the input.
--   
--   <i>See:</i> <a>newInput</a> smart constructor.
data Input
Input' :: Maybe InputDefinition -> Maybe InputConfiguration -> Input

-- | The definition of the input.
[$sel:inputDefinition:Input'] :: Input -> Maybe InputDefinition

-- | Information about the configuration of an input.
[$sel:inputConfiguration:Input'] :: Input -> Maybe InputConfiguration

-- | Create a value of <a>Input</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputDefinition:Input'</a>, <a>input_inputDefinition</a> - The
--   definition of the input.
--   
--   <a>$sel:inputConfiguration:Input'</a>, <a>input_inputConfiguration</a>
--   - Information about the configuration of an input.
newInput :: Input

-- | The definition of the input.
input_inputDefinition :: Lens' Input (Maybe InputDefinition)

-- | Information about the configuration of an input.
input_inputConfiguration :: Lens' Input (Maybe InputConfiguration)

-- | Information about the configuration of an input.
--   
--   <i>See:</i> <a>newInputConfiguration</a> smart constructor.
data InputConfiguration
InputConfiguration' :: Maybe Text -> Text -> Text -> POSIX -> POSIX -> InputStatus -> InputConfiguration

-- | A brief description of the input.
[$sel:inputDescription:InputConfiguration'] :: InputConfiguration -> Maybe Text

-- | The name of the input.
[$sel:inputName:InputConfiguration'] :: InputConfiguration -> Text

-- | The ARN of the input.
[$sel:inputArn:InputConfiguration'] :: InputConfiguration -> Text

-- | The time the input was created.
[$sel:creationTime:InputConfiguration'] :: InputConfiguration -> POSIX

-- | The last time the input was updated.
[$sel:lastUpdateTime:InputConfiguration'] :: InputConfiguration -> POSIX

-- | The status of the input.
[$sel:status:InputConfiguration'] :: InputConfiguration -> InputStatus

-- | Create a value of <a>InputConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputDescription:InputConfiguration'</a>,
--   <a>inputConfiguration_inputDescription</a> - A brief description of
--   the input.
--   
--   <a>$sel:inputName:InputConfiguration'</a>,
--   <a>inputConfiguration_inputName</a> - The name of the input.
--   
--   <a>$sel:inputArn:InputConfiguration'</a>,
--   <a>inputConfiguration_inputArn</a> - The ARN of the input.
--   
--   <a>$sel:creationTime:InputConfiguration'</a>,
--   <a>inputConfiguration_creationTime</a> - The time the input was
--   created.
--   
--   <a>$sel:lastUpdateTime:InputConfiguration'</a>,
--   <a>inputConfiguration_lastUpdateTime</a> - The last time the input was
--   updated.
--   
--   <a>$sel:status:InputConfiguration'</a>,
--   <a>inputConfiguration_status</a> - The status of the input.
newInputConfiguration :: Text -> Text -> UTCTime -> UTCTime -> InputStatus -> InputConfiguration

-- | A brief description of the input.
inputConfiguration_inputDescription :: Lens' InputConfiguration (Maybe Text)

-- | The name of the input.
inputConfiguration_inputName :: Lens' InputConfiguration Text

-- | The ARN of the input.
inputConfiguration_inputArn :: Lens' InputConfiguration Text

-- | The time the input was created.
inputConfiguration_creationTime :: Lens' InputConfiguration UTCTime

-- | The last time the input was updated.
inputConfiguration_lastUpdateTime :: Lens' InputConfiguration UTCTime

-- | The status of the input.
inputConfiguration_status :: Lens' InputConfiguration InputStatus

-- | The definition of the input.
--   
--   <i>See:</i> <a>newInputDefinition</a> smart constructor.
data InputDefinition
InputDefinition' :: NonEmpty Attribute -> InputDefinition

-- | The attributes from the JSON payload that are made available by the
--   input. Inputs are derived from messages sent to the AWS IoT Events
--   system using <tt>BatchPutMessage</tt>. Each such message contains a
--   JSON payload, and those attributes (and their paired values) specified
--   here are available for use in the <tt>condition</tt> expressions used
--   by detectors that monitor this input.
[$sel:attributes:InputDefinition'] :: InputDefinition -> NonEmpty Attribute

-- | Create a value of <a>InputDefinition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributes:InputDefinition'</a>,
--   <a>inputDefinition_attributes</a> - The attributes from the JSON
--   payload that are made available by the input. Inputs are derived from
--   messages sent to the AWS IoT Events system using
--   <tt>BatchPutMessage</tt>. Each such message contains a JSON payload,
--   and those attributes (and their paired values) specified here are
--   available for use in the <tt>condition</tt> expressions used by
--   detectors that monitor this input.
newInputDefinition :: NonEmpty Attribute -> InputDefinition

-- | The attributes from the JSON payload that are made available by the
--   input. Inputs are derived from messages sent to the AWS IoT Events
--   system using <tt>BatchPutMessage</tt>. Each such message contains a
--   JSON payload, and those attributes (and their paired values) specified
--   here are available for use in the <tt>condition</tt> expressions used
--   by detectors that monitor this input.
inputDefinition_attributes :: Lens' InputDefinition (NonEmpty Attribute)

-- | The identifer of the input.
--   
--   <i>See:</i> <a>newInputIdentifier</a> smart constructor.
data InputIdentifier
InputIdentifier' :: Maybe IotSiteWiseInputIdentifier -> Maybe IotEventsInputIdentifier -> InputIdentifier

-- | The identifer of the input routed from AWS IoT SiteWise.
[$sel:iotSiteWiseInputIdentifier:InputIdentifier'] :: InputIdentifier -> Maybe IotSiteWiseInputIdentifier

-- | The identifier of the input routed to AWS IoT Events.
[$sel:iotEventsInputIdentifier:InputIdentifier'] :: InputIdentifier -> Maybe IotEventsInputIdentifier

-- | Create a value of <a>InputIdentifier</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:iotSiteWiseInputIdentifier:InputIdentifier'</a>,
--   <a>inputIdentifier_iotSiteWiseInputIdentifier</a> - The identifer of
--   the input routed from AWS IoT SiteWise.
--   
--   <a>$sel:iotEventsInputIdentifier:InputIdentifier'</a>,
--   <a>inputIdentifier_iotEventsInputIdentifier</a> - The identifier of
--   the input routed to AWS IoT Events.
newInputIdentifier :: InputIdentifier

-- | The identifer of the input routed from AWS IoT SiteWise.
inputIdentifier_iotSiteWiseInputIdentifier :: Lens' InputIdentifier (Maybe IotSiteWiseInputIdentifier)

-- | The identifier of the input routed to AWS IoT Events.
inputIdentifier_iotEventsInputIdentifier :: Lens' InputIdentifier (Maybe IotEventsInputIdentifier)

-- | Information about the input.
--   
--   <i>See:</i> <a>newInputSummary</a> smart constructor.
data InputSummary
InputSummary' :: Maybe POSIX -> Maybe InputStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> InputSummary

-- | The time the input was created.
[$sel:creationTime:InputSummary'] :: InputSummary -> Maybe POSIX

-- | The status of the input.
[$sel:status:InputSummary'] :: InputSummary -> Maybe InputStatus

-- | The name of the input.
[$sel:inputName:InputSummary'] :: InputSummary -> Maybe Text

-- | A brief description of the input.
[$sel:inputDescription:InputSummary'] :: InputSummary -> Maybe Text

-- | The ARN of the input.
[$sel:inputArn:InputSummary'] :: InputSummary -> Maybe Text

-- | The last time the input was updated.
[$sel:lastUpdateTime:InputSummary'] :: InputSummary -> Maybe POSIX

-- | Create a value of <a>InputSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:InputSummary'</a>,
--   <a>inputSummary_creationTime</a> - The time the input was created.
--   
--   <a>$sel:status:InputSummary'</a>, <a>inputSummary_status</a> - The
--   status of the input.
--   
--   <a>$sel:inputName:InputSummary'</a>, <a>inputSummary_inputName</a> -
--   The name of the input.
--   
--   <a>$sel:inputDescription:InputSummary'</a>,
--   <a>inputSummary_inputDescription</a> - A brief description of the
--   input.
--   
--   <a>$sel:inputArn:InputSummary'</a>, <a>inputSummary_inputArn</a> - The
--   ARN of the input.
--   
--   <a>$sel:lastUpdateTime:InputSummary'</a>,
--   <a>inputSummary_lastUpdateTime</a> - The last time the input was
--   updated.
newInputSummary :: InputSummary

-- | The time the input was created.
inputSummary_creationTime :: Lens' InputSummary (Maybe UTCTime)

-- | The status of the input.
inputSummary_status :: Lens' InputSummary (Maybe InputStatus)

-- | The name of the input.
inputSummary_inputName :: Lens' InputSummary (Maybe Text)

-- | A brief description of the input.
inputSummary_inputDescription :: Lens' InputSummary (Maybe Text)

-- | The ARN of the input.
inputSummary_inputArn :: Lens' InputSummary (Maybe Text)

-- | The last time the input was updated.
inputSummary_lastUpdateTime :: Lens' InputSummary (Maybe UTCTime)

-- | Sends an AWS IoT Events input, passing in information about the
--   detector model instance and the event that triggered the action.
--   
--   <i>See:</i> <a>newIotEventsAction</a> smart constructor.
data IotEventsAction
IotEventsAction' :: Maybe Payload -> Text -> IotEventsAction

-- | You can configure the action payload when you send a message to an AWS
--   IoT Events input.
[$sel:payload:IotEventsAction'] :: IotEventsAction -> Maybe Payload

-- | The name of the AWS IoT Events input where the data is sent.
[$sel:inputName:IotEventsAction'] :: IotEventsAction -> Text

-- | Create a value of <a>IotEventsAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:payload:IotEventsAction'</a>, <a>iotEventsAction_payload</a> -
--   You can configure the action payload when you send a message to an AWS
--   IoT Events input.
--   
--   <a>$sel:inputName:IotEventsAction'</a>,
--   <a>iotEventsAction_inputName</a> - The name of the AWS IoT Events
--   input where the data is sent.
newIotEventsAction :: Text -> IotEventsAction

-- | You can configure the action payload when you send a message to an AWS
--   IoT Events input.
iotEventsAction_payload :: Lens' IotEventsAction (Maybe Payload)

-- | The name of the AWS IoT Events input where the data is sent.
iotEventsAction_inputName :: Lens' IotEventsAction Text

-- | The identifier of the input routed to AWS IoT Events.
--   
--   <i>See:</i> <a>newIotEventsInputIdentifier</a> smart constructor.
data IotEventsInputIdentifier
IotEventsInputIdentifier' :: Text -> IotEventsInputIdentifier

-- | The name of the input routed to AWS IoT Events.
[$sel:inputName:IotEventsInputIdentifier'] :: IotEventsInputIdentifier -> Text

-- | Create a value of <a>IotEventsInputIdentifier</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputName:IotEventsInputIdentifier'</a>,
--   <a>iotEventsInputIdentifier_inputName</a> - The name of the input
--   routed to AWS IoT Events.
newIotEventsInputIdentifier :: Text -> IotEventsInputIdentifier

-- | The name of the input routed to AWS IoT Events.
iotEventsInputIdentifier_inputName :: Lens' IotEventsInputIdentifier Text

-- | Sends information about the detector model instance and the event that
--   triggered the action to a specified asset property in AWS IoT
--   SiteWise.
--   
--   You must use expressions for all parameters in
--   <tt>IotSiteWiseAction</tt>. The expressions accept literals,
--   operators, functions, references, and substitutions templates.
--   
--   <b>Examples</b>
--   
--   <ul>
--   <li>For literal values, the expressions must contain single quotes.
--   For example, the value for the <tt>propertyAlias</tt> parameter can be
--   <tt>'/company/windfarm/3/turbine/7/temperature'</tt>.</li>
--   <li>For references, you must specify either variables or input values.
--   For example, the value for the <tt>assetId</tt> parameter can be
--   <tt>$input.TurbineInput.assetId1</tt>.</li>
--   <li>For a substitution template, you must use <tt>${}</tt>, and the
--   template must be in single quotes. A substitution template can also
--   contain a combination of literals, operators, functions, references,
--   and substitution templates.In the following example, the value for the
--   <tt>propertyAlias</tt> parameter uses a substitution
--   template.<pre>'company/windfarm/${$input.TemperatureInput.sensorData.windfarmID}/turbine/
--   ${$input.TemperatureInput.sensorData.turbineID}/temperature'</pre></li>
--   </ul>
--   
--   You must specify either <tt>propertyAlias</tt> or both
--   <tt>assetId</tt> and <tt>propertyId</tt> to identify the target asset
--   property in AWS IoT SiteWise.
--   
--   For more information, see <a>Expressions</a> in the <i>AWS IoT Events
--   Developer Guide</i>.
--   
--   <i>See:</i> <a>newIotSiteWiseAction</a> smart constructor.
data IotSiteWiseAction
IotSiteWiseAction' :: Maybe Text -> Maybe Text -> Maybe AssetPropertyValue -> Maybe Text -> Maybe Text -> IotSiteWiseAction

-- | A unique identifier for this entry. You can use the entry ID to track
--   which data entry causes an error in case of failure. The default is a
--   new unique identifier.
[$sel:entryId:IotSiteWiseAction'] :: IotSiteWiseAction -> Maybe Text

-- | The alias of the asset property.
[$sel:propertyAlias:IotSiteWiseAction'] :: IotSiteWiseAction -> Maybe Text

-- | The value to send to the asset property. This value contains
--   timestamp, quality, and value (TQV) information.
[$sel:propertyValue:IotSiteWiseAction'] :: IotSiteWiseAction -> Maybe AssetPropertyValue

-- | The ID of the asset property.
[$sel:propertyId:IotSiteWiseAction'] :: IotSiteWiseAction -> Maybe Text

-- | The ID of the asset that has the specified property.
[$sel:assetId:IotSiteWiseAction'] :: IotSiteWiseAction -> Maybe Text

-- | Create a value of <a>IotSiteWiseAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:entryId:IotSiteWiseAction'</a>,
--   <a>iotSiteWiseAction_entryId</a> - A unique identifier for this entry.
--   You can use the entry ID to track which data entry causes an error in
--   case of failure. The default is a new unique identifier.
--   
--   <a>$sel:propertyAlias:IotSiteWiseAction'</a>,
--   <a>iotSiteWiseAction_propertyAlias</a> - The alias of the asset
--   property.
--   
--   <a>$sel:propertyValue:IotSiteWiseAction'</a>,
--   <a>iotSiteWiseAction_propertyValue</a> - The value to send to the
--   asset property. This value contains timestamp, quality, and value
--   (TQV) information.
--   
--   <a>$sel:propertyId:IotSiteWiseAction'</a>,
--   <a>iotSiteWiseAction_propertyId</a> - The ID of the asset property.
--   
--   <a>$sel:assetId:IotSiteWiseAction'</a>,
--   <a>iotSiteWiseAction_assetId</a> - The ID of the asset that has the
--   specified property.
newIotSiteWiseAction :: IotSiteWiseAction

-- | A unique identifier for this entry. You can use the entry ID to track
--   which data entry causes an error in case of failure. The default is a
--   new unique identifier.
iotSiteWiseAction_entryId :: Lens' IotSiteWiseAction (Maybe Text)

-- | The alias of the asset property.
iotSiteWiseAction_propertyAlias :: Lens' IotSiteWiseAction (Maybe Text)

-- | The value to send to the asset property. This value contains
--   timestamp, quality, and value (TQV) information.
iotSiteWiseAction_propertyValue :: Lens' IotSiteWiseAction (Maybe AssetPropertyValue)

-- | The ID of the asset property.
iotSiteWiseAction_propertyId :: Lens' IotSiteWiseAction (Maybe Text)

-- | The ID of the asset that has the specified property.
iotSiteWiseAction_assetId :: Lens' IotSiteWiseAction (Maybe Text)

-- | The asset model property identifer of the input routed from AWS IoT
--   SiteWise.
--   
--   <i>See:</i> <a>newIotSiteWiseAssetModelPropertyIdentifier</a> smart
--   constructor.
data IotSiteWiseAssetModelPropertyIdentifier
IotSiteWiseAssetModelPropertyIdentifier' :: Text -> Text -> IotSiteWiseAssetModelPropertyIdentifier

-- | The ID of the AWS IoT SiteWise asset model.
[$sel:assetModelId:IotSiteWiseAssetModelPropertyIdentifier'] :: IotSiteWiseAssetModelPropertyIdentifier -> Text

-- | The ID of the AWS IoT SiteWise asset property.
[$sel:propertyId:IotSiteWiseAssetModelPropertyIdentifier'] :: IotSiteWiseAssetModelPropertyIdentifier -> Text

-- | Create a value of <a>IotSiteWiseAssetModelPropertyIdentifier</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:assetModelId:IotSiteWiseAssetModelPropertyIdentifier'</a>,
--   <a>iotSiteWiseAssetModelPropertyIdentifier_assetModelId</a> - The ID
--   of the AWS IoT SiteWise asset model.
--   
--   <a>$sel:propertyId:IotSiteWiseAssetModelPropertyIdentifier'</a>,
--   <a>iotSiteWiseAssetModelPropertyIdentifier_propertyId</a> - The ID of
--   the AWS IoT SiteWise asset property.
newIotSiteWiseAssetModelPropertyIdentifier :: Text -> Text -> IotSiteWiseAssetModelPropertyIdentifier

-- | The ID of the AWS IoT SiteWise asset model.
iotSiteWiseAssetModelPropertyIdentifier_assetModelId :: Lens' IotSiteWiseAssetModelPropertyIdentifier Text

-- | The ID of the AWS IoT SiteWise asset property.
iotSiteWiseAssetModelPropertyIdentifier_propertyId :: Lens' IotSiteWiseAssetModelPropertyIdentifier Text

-- | The identifer of the input routed from AWS IoT SiteWise.
--   
--   <i>See:</i> <a>newIotSiteWiseInputIdentifier</a> smart constructor.
data IotSiteWiseInputIdentifier
IotSiteWiseInputIdentifier' :: Maybe IotSiteWiseAssetModelPropertyIdentifier -> IotSiteWiseInputIdentifier

-- | The identifier of the AWS IoT SiteWise asset model property.
[$sel:iotSiteWiseAssetModelPropertyIdentifier:IotSiteWiseInputIdentifier'] :: IotSiteWiseInputIdentifier -> Maybe IotSiteWiseAssetModelPropertyIdentifier

-- | Create a value of <a>IotSiteWiseInputIdentifier</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:iotSiteWiseAssetModelPropertyIdentifier:IotSiteWiseInputIdentifier'</a>,
--   <a>iotSiteWiseInputIdentifier_iotSiteWiseAssetModelPropertyIdentifier</a>
--   - The identifier of the AWS IoT SiteWise asset model property.
newIotSiteWiseInputIdentifier :: IotSiteWiseInputIdentifier

-- | The identifier of the AWS IoT SiteWise asset model property.
iotSiteWiseInputIdentifier_iotSiteWiseAssetModelPropertyIdentifier :: Lens' IotSiteWiseInputIdentifier (Maybe IotSiteWiseAssetModelPropertyIdentifier)

-- | Information required to publish the MQTT message through the AWS IoT
--   message broker.
--   
--   <i>See:</i> <a>newIotTopicPublishAction</a> smart constructor.
data IotTopicPublishAction
IotTopicPublishAction' :: Maybe Payload -> Text -> IotTopicPublishAction

-- | You can configure the action payload when you publish a message to an
--   AWS IoT Core topic.
[$sel:payload:IotTopicPublishAction'] :: IotTopicPublishAction -> Maybe Payload

-- | The MQTT topic of the message. You can use a string expression that
--   includes variables (<tt>$variable.&lt;variable-name&gt;</tt>) and
--   input values
--   (<tt>$input.&lt;input-name&gt;.&lt;path-to-datum&gt;</tt>) as the
--   topic string.
[$sel:mqttTopic:IotTopicPublishAction'] :: IotTopicPublishAction -> Text

-- | Create a value of <a>IotTopicPublishAction</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:payload:IotTopicPublishAction'</a>,
--   <a>iotTopicPublishAction_payload</a> - You can configure the action
--   payload when you publish a message to an AWS IoT Core topic.
--   
--   <a>$sel:mqttTopic:IotTopicPublishAction'</a>,
--   <a>iotTopicPublishAction_mqttTopic</a> - The MQTT topic of the
--   message. You can use a string expression that includes variables
--   (<tt>$variable.&lt;variable-name&gt;</tt>) and input values
--   (<tt>$input.&lt;input-name&gt;.&lt;path-to-datum&gt;</tt>) as the
--   topic string.
newIotTopicPublishAction :: Text -> IotTopicPublishAction

-- | You can configure the action payload when you publish a message to an
--   AWS IoT Core topic.
iotTopicPublishAction_payload :: Lens' IotTopicPublishAction (Maybe Payload)

-- | The MQTT topic of the message. You can use a string expression that
--   includes variables (<tt>$variable.&lt;variable-name&gt;</tt>) and
--   input values
--   (<tt>$input.&lt;input-name&gt;.&lt;path-to-datum&gt;</tt>) as the
--   topic string.
iotTopicPublishAction_mqttTopic :: Lens' IotTopicPublishAction Text

-- | Calls a Lambda function, passing in information about the detector
--   model instance and the event that triggered the action.
--   
--   <i>See:</i> <a>newLambdaAction</a> smart constructor.
data LambdaAction
LambdaAction' :: Maybe Payload -> Text -> LambdaAction

-- | You can configure the action payload when you send a message to a
--   Lambda function.
[$sel:payload:LambdaAction'] :: LambdaAction -> Maybe Payload

-- | The ARN of the Lambda function that is executed.
[$sel:functionArn:LambdaAction'] :: LambdaAction -> Text

-- | Create a value of <a>LambdaAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:payload:LambdaAction'</a>, <a>lambdaAction_payload</a> - You
--   can configure the action payload when you send a message to a Lambda
--   function.
--   
--   <a>$sel:functionArn:LambdaAction'</a>, <a>lambdaAction_functionArn</a>
--   - The ARN of the Lambda function that is executed.
newLambdaAction :: Text -> LambdaAction

-- | You can configure the action payload when you send a message to a
--   Lambda function.
lambdaAction_payload :: Lens' LambdaAction (Maybe Payload)

-- | The ARN of the Lambda function that is executed.
lambdaAction_functionArn :: Lens' LambdaAction Text

-- | The values of the AWS IoT Events logging options.
--   
--   <i>See:</i> <a>newLoggingOptions</a> smart constructor.
data LoggingOptions
LoggingOptions' :: Maybe (NonEmpty DetectorDebugOption) -> Text -> LoggingLevel -> Bool -> LoggingOptions

-- | Information that identifies those detector models and their detectors
--   (instances) for which the logging level is given.
[$sel:detectorDebugOptions:LoggingOptions'] :: LoggingOptions -> Maybe (NonEmpty DetectorDebugOption)

-- | The ARN of the role that grants permission to AWS IoT Events to
--   perform logging.
[$sel:roleArn:LoggingOptions'] :: LoggingOptions -> Text

-- | The logging level.
[$sel:level:LoggingOptions'] :: LoggingOptions -> LoggingLevel

-- | If TRUE, logging is enabled for AWS IoT Events.
[$sel:enabled:LoggingOptions'] :: LoggingOptions -> Bool

-- | Create a value of <a>LoggingOptions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:detectorDebugOptions:LoggingOptions'</a>,
--   <a>loggingOptions_detectorDebugOptions</a> - Information that
--   identifies those detector models and their detectors (instances) for
--   which the logging level is given.
--   
--   <a>$sel:roleArn:LoggingOptions'</a>, <a>loggingOptions_roleArn</a> -
--   The ARN of the role that grants permission to AWS IoT Events to
--   perform logging.
--   
--   <a>$sel:level:LoggingOptions'</a>, <a>loggingOptions_level</a> - The
--   logging level.
--   
--   <a>$sel:enabled:LoggingOptions'</a>, <a>loggingOptions_enabled</a> -
--   If TRUE, logging is enabled for AWS IoT Events.
newLoggingOptions :: Text -> LoggingLevel -> Bool -> LoggingOptions

-- | Information that identifies those detector models and their detectors
--   (instances) for which the logging level is given.
loggingOptions_detectorDebugOptions :: Lens' LoggingOptions (Maybe (NonEmpty DetectorDebugOption))

-- | The ARN of the role that grants permission to AWS IoT Events to
--   perform logging.
loggingOptions_roleArn :: Lens' LoggingOptions Text

-- | The logging level.
loggingOptions_level :: Lens' LoggingOptions LoggingLevel

-- | If TRUE, logging is enabled for AWS IoT Events.
loggingOptions_enabled :: Lens' LoggingOptions Bool

-- | Contains the notification settings of an alarm model. The settings
--   apply to all alarms that were created based on this alarm model.
--   
--   <i>See:</i> <a>newNotificationAction</a> smart constructor.
data NotificationAction
NotificationAction' :: Maybe (NonEmpty EmailConfiguration) -> Maybe (NonEmpty SMSConfiguration) -> NotificationTargetActions -> NotificationAction

-- | Contains the configuration information of email notifications.
[$sel:emailConfigurations:NotificationAction'] :: NotificationAction -> Maybe (NonEmpty EmailConfiguration)

-- | Contains the configuration information of SMS notifications.
[$sel:smsConfigurations:NotificationAction'] :: NotificationAction -> Maybe (NonEmpty SMSConfiguration)

-- | Specifies an AWS Lambda function to manage alarm notifications. You
--   can create one or use the <a>AWS Lambda function provided by AWS IoT
--   Events</a>.
[$sel:action:NotificationAction'] :: NotificationAction -> NotificationTargetActions

-- | Create a value of <a>NotificationAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:emailConfigurations:NotificationAction'</a>,
--   <a>notificationAction_emailConfigurations</a> - Contains the
--   configuration information of email notifications.
--   
--   <a>$sel:smsConfigurations:NotificationAction'</a>,
--   <a>notificationAction_smsConfigurations</a> - Contains the
--   configuration information of SMS notifications.
--   
--   <a>$sel:action:NotificationAction'</a>,
--   <a>notificationAction_action</a> - Specifies an AWS Lambda function to
--   manage alarm notifications. You can create one or use the <a>AWS
--   Lambda function provided by AWS IoT Events</a>.
newNotificationAction :: NotificationTargetActions -> NotificationAction

-- | Contains the configuration information of email notifications.
notificationAction_emailConfigurations :: Lens' NotificationAction (Maybe (NonEmpty EmailConfiguration))

-- | Contains the configuration information of SMS notifications.
notificationAction_smsConfigurations :: Lens' NotificationAction (Maybe (NonEmpty SMSConfiguration))

-- | Specifies an AWS Lambda function to manage alarm notifications. You
--   can create one or use the <a>AWS Lambda function provided by AWS IoT
--   Events</a>.
notificationAction_action :: Lens' NotificationAction NotificationTargetActions

-- | Specifies an AWS Lambda function to manage alarm notifications. You
--   can create one or use the <a>AWS Lambda function provided by AWS IoT
--   Events</a>.
--   
--   <i>See:</i> <a>newNotificationTargetActions</a> smart constructor.
data NotificationTargetActions
NotificationTargetActions' :: Maybe LambdaAction -> NotificationTargetActions
[$sel:lambdaAction:NotificationTargetActions'] :: NotificationTargetActions -> Maybe LambdaAction

-- | Create a value of <a>NotificationTargetActions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lambdaAction:NotificationTargetActions'</a>,
--   <a>notificationTargetActions_lambdaAction</a> - Undocumented member.
newNotificationTargetActions :: NotificationTargetActions

-- | Undocumented member.
notificationTargetActions_lambdaAction :: Lens' NotificationTargetActions (Maybe LambdaAction)

-- | When entering this state, perform these <tt>actions</tt> if the
--   <tt>condition</tt> is TRUE.
--   
--   <i>See:</i> <a>newOnEnterLifecycle</a> smart constructor.
data OnEnterLifecycle
OnEnterLifecycle' :: Maybe [Event] -> OnEnterLifecycle

-- | Specifies the actions that are performed when the state is entered and
--   the <tt>condition</tt> is <tt>TRUE</tt>.
[$sel:events:OnEnterLifecycle'] :: OnEnterLifecycle -> Maybe [Event]

-- | Create a value of <a>OnEnterLifecycle</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:events:OnEnterLifecycle'</a>, <a>onEnterLifecycle_events</a> -
--   Specifies the actions that are performed when the state is entered and
--   the <tt>condition</tt> is <tt>TRUE</tt>.
newOnEnterLifecycle :: OnEnterLifecycle

-- | Specifies the actions that are performed when the state is entered and
--   the <tt>condition</tt> is <tt>TRUE</tt>.
onEnterLifecycle_events :: Lens' OnEnterLifecycle (Maybe [Event])

-- | When exiting this state, perform these <tt>actions</tt> if the
--   specified <tt>condition</tt> is <tt>TRUE</tt>.
--   
--   <i>See:</i> <a>newOnExitLifecycle</a> smart constructor.
data OnExitLifecycle
OnExitLifecycle' :: Maybe [Event] -> OnExitLifecycle

-- | Specifies the <tt>actions</tt> that are performed when the state is
--   exited and the <tt>condition</tt> is <tt>TRUE</tt>.
[$sel:events:OnExitLifecycle'] :: OnExitLifecycle -> Maybe [Event]

-- | Create a value of <a>OnExitLifecycle</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:events:OnExitLifecycle'</a>, <a>onExitLifecycle_events</a> -
--   Specifies the <tt>actions</tt> that are performed when the state is
--   exited and the <tt>condition</tt> is <tt>TRUE</tt>.
newOnExitLifecycle :: OnExitLifecycle

-- | Specifies the <tt>actions</tt> that are performed when the state is
--   exited and the <tt>condition</tt> is <tt>TRUE</tt>.
onExitLifecycle_events :: Lens' OnExitLifecycle (Maybe [Event])

-- | Specifies the actions performed when the <tt>condition</tt> evaluates
--   to TRUE.
--   
--   <i>See:</i> <a>newOnInputLifecycle</a> smart constructor.
data OnInputLifecycle
OnInputLifecycle' :: Maybe [Event] -> Maybe [TransitionEvent] -> OnInputLifecycle

-- | Specifies the actions performed when the <tt>condition</tt> evaluates
--   to TRUE.
[$sel:events:OnInputLifecycle'] :: OnInputLifecycle -> Maybe [Event]

-- | Specifies the actions performed, and the next state entered, when a
--   <tt>condition</tt> evaluates to TRUE.
[$sel:transitionEvents:OnInputLifecycle'] :: OnInputLifecycle -> Maybe [TransitionEvent]

-- | Create a value of <a>OnInputLifecycle</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:events:OnInputLifecycle'</a>, <a>onInputLifecycle_events</a> -
--   Specifies the actions performed when the <tt>condition</tt> evaluates
--   to TRUE.
--   
--   <a>$sel:transitionEvents:OnInputLifecycle'</a>,
--   <a>onInputLifecycle_transitionEvents</a> - Specifies the actions
--   performed, and the next state entered, when a <tt>condition</tt>
--   evaluates to TRUE.
newOnInputLifecycle :: OnInputLifecycle

-- | Specifies the actions performed when the <tt>condition</tt> evaluates
--   to TRUE.
onInputLifecycle_events :: Lens' OnInputLifecycle (Maybe [Event])

-- | Specifies the actions performed, and the next state entered, when a
--   <tt>condition</tt> evaluates to TRUE.
onInputLifecycle_transitionEvents :: Lens' OnInputLifecycle (Maybe [TransitionEvent])

-- | Information needed to configure the payload.
--   
--   By default, AWS IoT Events generates a standard payload in JSON for
--   any action. This action payload contains all attribute-value pairs
--   that have the information about the detector model instance and the
--   event triggered the action. To configure the action payload, you can
--   use <tt>contentExpression</tt>.
--   
--   <i>See:</i> <a>newPayload</a> smart constructor.
data Payload
Payload' :: Text -> PayloadType -> Payload

-- | The content of the payload. You can use a string expression that
--   includes quoted strings (<tt>'&lt;string&gt;'</tt>), variables
--   (<tt>$variable.&lt;variable-name&gt;</tt>), input values
--   (<tt>$input.&lt;input-name&gt;.&lt;path-to-datum&gt;</tt>), string
--   concatenations, and quoted strings that contain <tt>${}</tt> as the
--   content. The recommended maximum size of a content expression is 1 KB.
[$sel:contentExpression:Payload'] :: Payload -> Text

-- | The value of the payload type can be either <tt>STRING</tt> or
--   <tt>JSON</tt>.
[$sel:type':Payload'] :: Payload -> PayloadType

-- | Create a value of <a>Payload</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:contentExpression:Payload'</a>,
--   <a>payload_contentExpression</a> - The content of the payload. You can
--   use a string expression that includes quoted strings
--   (<tt>'&lt;string&gt;'</tt>), variables
--   (<tt>$variable.&lt;variable-name&gt;</tt>), input values
--   (<tt>$input.&lt;input-name&gt;.&lt;path-to-datum&gt;</tt>), string
--   concatenations, and quoted strings that contain <tt>${}</tt> as the
--   content. The recommended maximum size of a content expression is 1 KB.
--   
--   <a>$sel:type':Payload'</a>, <a>payload_type</a> - The value of the
--   payload type can be either <tt>STRING</tt> or <tt>JSON</tt>.
newPayload :: Text -> PayloadType -> Payload

-- | The content of the payload. You can use a string expression that
--   includes quoted strings (<tt>'&lt;string&gt;'</tt>), variables
--   (<tt>$variable.&lt;variable-name&gt;</tt>), input values
--   (<tt>$input.&lt;input-name&gt;.&lt;path-to-datum&gt;</tt>), string
--   concatenations, and quoted strings that contain <tt>${}</tt> as the
--   content. The recommended maximum size of a content expression is 1 KB.
payload_contentExpression :: Lens' Payload Text

-- | The value of the payload type can be either <tt>STRING</tt> or
--   <tt>JSON</tt>.
payload_type :: Lens' Payload PayloadType

-- | The information that identifies the recipient.
--   
--   <i>See:</i> <a>newRecipientDetail</a> smart constructor.
data RecipientDetail
RecipientDetail' :: Maybe SSOIdentity -> RecipientDetail

-- | The AWS Single Sign-On (AWS SSO) authentication information.
[$sel:ssoIdentity:RecipientDetail'] :: RecipientDetail -> Maybe SSOIdentity

-- | Create a value of <a>RecipientDetail</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ssoIdentity:RecipientDetail'</a>,
--   <a>recipientDetail_ssoIdentity</a> - The AWS Single Sign-On (AWS SSO)
--   authentication information.
newRecipientDetail :: RecipientDetail

-- | The AWS Single Sign-On (AWS SSO) authentication information.
recipientDetail_ssoIdentity :: Lens' RecipientDetail (Maybe SSOIdentity)

-- | Information required to reset the timer. The timer is reset to the
--   previously evaluated result of the duration. The duration expression
--   isn't reevaluated when you reset the timer.
--   
--   <i>See:</i> <a>newResetTimerAction</a> smart constructor.
data ResetTimerAction
ResetTimerAction' :: Text -> ResetTimerAction

-- | The name of the timer to reset.
[$sel:timerName:ResetTimerAction'] :: ResetTimerAction -> Text

-- | Create a value of <a>ResetTimerAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timerName:ResetTimerAction'</a>,
--   <a>resetTimerAction_timerName</a> - The name of the timer to reset.
newResetTimerAction :: Text -> ResetTimerAction

-- | The name of the timer to reset.
resetTimerAction_timerName :: Lens' ResetTimerAction Text

-- | Contains information about the routed resource.
--   
--   <i>See:</i> <a>newRoutedResource</a> smart constructor.
data RoutedResource
RoutedResource' :: Maybe Text -> Maybe Text -> RoutedResource

-- | The ARN of the routed resource. For more information, see <a>Amazon
--   Resource Names (ARNs)</a> in the <i>AWS General Reference</i>.
[$sel:arn:RoutedResource'] :: RoutedResource -> Maybe Text

-- | The name of the routed resource.
[$sel:name:RoutedResource'] :: RoutedResource -> Maybe Text

-- | Create a value of <a>RoutedResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:RoutedResource'</a>, <a>routedResource_arn</a> - The ARN
--   of the routed resource. For more information, see <a>Amazon Resource
--   Names (ARNs)</a> in the <i>AWS General Reference</i>.
--   
--   <a>$sel:name:RoutedResource'</a>, <a>routedResource_name</a> - The
--   name of the routed resource.
newRoutedResource :: RoutedResource

-- | The ARN of the routed resource. For more information, see <a>Amazon
--   Resource Names (ARNs)</a> in the <i>AWS General Reference</i>.
routedResource_arn :: Lens' RoutedResource (Maybe Text)

-- | The name of the routed resource.
routedResource_name :: Lens' RoutedResource (Maybe Text)

-- | Contains the configuration information of SMS notifications.
--   
--   <i>See:</i> <a>newSMSConfiguration</a> smart constructor.
data SMSConfiguration
SMSConfiguration' :: Maybe Text -> Maybe Text -> NonEmpty RecipientDetail -> SMSConfiguration

-- | The message that you want to send. The message can be up to 200
--   characters.
[$sel:additionalMessage:SMSConfiguration'] :: SMSConfiguration -> Maybe Text

-- | The sender ID.
[$sel:senderId:SMSConfiguration'] :: SMSConfiguration -> Maybe Text

-- | Specifies one or more recipients who receive the message.
--   
--   You must <a>add the users that receive SMS messages to your AWS SSO
--   store</a>.
[$sel:recipients:SMSConfiguration'] :: SMSConfiguration -> NonEmpty RecipientDetail

-- | Create a value of <a>SMSConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:additionalMessage:SMSConfiguration'</a>,
--   <a>sMSConfiguration_additionalMessage</a> - The message that you want
--   to send. The message can be up to 200 characters.
--   
--   <a>$sel:senderId:SMSConfiguration'</a>,
--   <a>sMSConfiguration_senderId</a> - The sender ID.
--   
--   <a>$sel:recipients:SMSConfiguration'</a>,
--   <a>sMSConfiguration_recipients</a> - Specifies one or more recipients
--   who receive the message.
--   
--   You must <a>add the users that receive SMS messages to your AWS SSO
--   store</a>.
newSMSConfiguration :: NonEmpty RecipientDetail -> SMSConfiguration

-- | The message that you want to send. The message can be up to 200
--   characters.
sMSConfiguration_additionalMessage :: Lens' SMSConfiguration (Maybe Text)

-- | The sender ID.
sMSConfiguration_senderId :: Lens' SMSConfiguration (Maybe Text)

-- | Specifies one or more recipients who receive the message.
--   
--   You must <a>add the users that receive SMS messages to your AWS SSO
--   store</a>.
sMSConfiguration_recipients :: Lens' SMSConfiguration (NonEmpty RecipientDetail)

-- | Information required to publish the Amazon SNS message.
--   
--   <i>See:</i> <a>newSNSTopicPublishAction</a> smart constructor.
data SNSTopicPublishAction
SNSTopicPublishAction' :: Maybe Payload -> Text -> SNSTopicPublishAction

-- | You can configure the action payload when you send a message as an
--   Amazon SNS push notification.
[$sel:payload:SNSTopicPublishAction'] :: SNSTopicPublishAction -> Maybe Payload

-- | The ARN of the Amazon SNS target where the message is sent.
[$sel:targetArn:SNSTopicPublishAction'] :: SNSTopicPublishAction -> Text

-- | Create a value of <a>SNSTopicPublishAction</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:payload:SNSTopicPublishAction'</a>,
--   <a>sNSTopicPublishAction_payload</a> - You can configure the action
--   payload when you send a message as an Amazon SNS push notification.
--   
--   <a>$sel:targetArn:SNSTopicPublishAction'</a>,
--   <a>sNSTopicPublishAction_targetArn</a> - The ARN of the Amazon SNS
--   target where the message is sent.
newSNSTopicPublishAction :: Text -> SNSTopicPublishAction

-- | You can configure the action payload when you send a message as an
--   Amazon SNS push notification.
sNSTopicPublishAction_payload :: Lens' SNSTopicPublishAction (Maybe Payload)

-- | The ARN of the Amazon SNS target where the message is sent.
sNSTopicPublishAction_targetArn :: Lens' SNSTopicPublishAction Text

-- | Contains information about your identity source in AWS Single Sign-On.
--   For more information, see the <a>AWS Single Sign-On User Guide</a>.
--   
--   <i>See:</i> <a>newSSOIdentity</a> smart constructor.
data SSOIdentity
SSOIdentity' :: Maybe Text -> Text -> SSOIdentity

-- | The user ID.
[$sel:userId:SSOIdentity'] :: SSOIdentity -> Maybe Text

-- | The ID of the AWS SSO identity store.
[$sel:identityStoreId:SSOIdentity'] :: SSOIdentity -> Text

-- | Create a value of <a>SSOIdentity</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userId:SSOIdentity'</a>, <a>sSOIdentity_userId</a> - The user
--   ID.
--   
--   <a>$sel:identityStoreId:SSOIdentity'</a>,
--   <a>sSOIdentity_identityStoreId</a> - The ID of the AWS SSO identity
--   store.
newSSOIdentity :: Text -> SSOIdentity

-- | The user ID.
sSOIdentity_userId :: Lens' SSOIdentity (Maybe Text)

-- | The ID of the AWS SSO identity store.
sSOIdentity_identityStoreId :: Lens' SSOIdentity Text

-- | Information needed to set the timer.
--   
--   <i>See:</i> <a>newSetTimerAction</a> smart constructor.
data SetTimerAction
SetTimerAction' :: Maybe Text -> Maybe Natural -> Text -> SetTimerAction

-- | The duration of the timer, in seconds. You can use a string expression
--   that includes numbers, variables
--   (<tt>$variable.&lt;variable-name&gt;</tt>), and input values
--   (<tt>$input.&lt;input-name&gt;.&lt;path-to-datum&gt;</tt>) as the
--   duration. The range of the duration is 1-31622400 seconds. To ensure
--   accuracy, the minimum duration is 60 seconds. The evaluated result of
--   the duration is rounded down to the nearest whole number.
[$sel:durationExpression:SetTimerAction'] :: SetTimerAction -> Maybe Text

-- | The number of seconds until the timer expires. The minimum value is 60
--   seconds to ensure accuracy. The maximum value is 31622400 seconds.
[$sel:seconds:SetTimerAction'] :: SetTimerAction -> Maybe Natural

-- | The name of the timer.
[$sel:timerName:SetTimerAction'] :: SetTimerAction -> Text

-- | Create a value of <a>SetTimerAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:durationExpression:SetTimerAction'</a>,
--   <a>setTimerAction_durationExpression</a> - The duration of the timer,
--   in seconds. You can use a string expression that includes numbers,
--   variables (<tt>$variable.&lt;variable-name&gt;</tt>), and input values
--   (<tt>$input.&lt;input-name&gt;.&lt;path-to-datum&gt;</tt>) as the
--   duration. The range of the duration is 1-31622400 seconds. To ensure
--   accuracy, the minimum duration is 60 seconds. The evaluated result of
--   the duration is rounded down to the nearest whole number.
--   
--   <a>$sel:seconds:SetTimerAction'</a>, <a>setTimerAction_seconds</a> -
--   The number of seconds until the timer expires. The minimum value is 60
--   seconds to ensure accuracy. The maximum value is 31622400 seconds.
--   
--   <a>$sel:timerName:SetTimerAction'</a>, <a>setTimerAction_timerName</a>
--   - The name of the timer.
newSetTimerAction :: Text -> SetTimerAction

-- | The duration of the timer, in seconds. You can use a string expression
--   that includes numbers, variables
--   (<tt>$variable.&lt;variable-name&gt;</tt>), and input values
--   (<tt>$input.&lt;input-name&gt;.&lt;path-to-datum&gt;</tt>) as the
--   duration. The range of the duration is 1-31622400 seconds. To ensure
--   accuracy, the minimum duration is 60 seconds. The evaluated result of
--   the duration is rounded down to the nearest whole number.
setTimerAction_durationExpression :: Lens' SetTimerAction (Maybe Text)

-- | The number of seconds until the timer expires. The minimum value is 60
--   seconds to ensure accuracy. The maximum value is 31622400 seconds.
setTimerAction_seconds :: Lens' SetTimerAction (Maybe Natural)

-- | The name of the timer.
setTimerAction_timerName :: Lens' SetTimerAction Text

-- | Information about the variable and its new value.
--   
--   <i>See:</i> <a>newSetVariableAction</a> smart constructor.
data SetVariableAction
SetVariableAction' :: Text -> Text -> SetVariableAction

-- | The name of the variable.
[$sel:variableName:SetVariableAction'] :: SetVariableAction -> Text

-- | The new value of the variable.
[$sel:value:SetVariableAction'] :: SetVariableAction -> Text

-- | Create a value of <a>SetVariableAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:variableName:SetVariableAction'</a>,
--   <a>setVariableAction_variableName</a> - The name of the variable.
--   
--   <a>$sel:value:SetVariableAction'</a>, <a>setVariableAction_value</a> -
--   The new value of the variable.
newSetVariableAction :: Text -> Text -> SetVariableAction

-- | The name of the variable.
setVariableAction_variableName :: Lens' SetVariableAction Text

-- | The new value of the variable.
setVariableAction_value :: Lens' SetVariableAction Text

-- | A rule that compares an input property value to a threshold value with
--   a comparison operator.
--   
--   <i>See:</i> <a>newSimpleRule</a> smart constructor.
data SimpleRule
SimpleRule' :: Text -> ComparisonOperator -> Text -> SimpleRule

-- | The value on the left side of the comparison operator. You can specify
--   an AWS IoT Events input attribute as an input property.
[$sel:inputProperty:SimpleRule'] :: SimpleRule -> Text

-- | The comparison operator.
[$sel:comparisonOperator:SimpleRule'] :: SimpleRule -> ComparisonOperator

-- | The value on the right side of the comparison operator. You can enter
--   a number or specify an AWS IoT Events input attribute.
[$sel:threshold:SimpleRule'] :: SimpleRule -> Text

-- | Create a value of <a>SimpleRule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputProperty:SimpleRule'</a>, <a>simpleRule_inputProperty</a>
--   - The value on the left side of the comparison operator. You can
--   specify an AWS IoT Events input attribute as an input property.
--   
--   <a>$sel:comparisonOperator:SimpleRule'</a>,
--   <a>simpleRule_comparisonOperator</a> - The comparison operator.
--   
--   <a>$sel:threshold:SimpleRule'</a>, <a>simpleRule_threshold</a> - The
--   value on the right side of the comparison operator. You can enter a
--   number or specify an AWS IoT Events input attribute.
newSimpleRule :: Text -> ComparisonOperator -> Text -> SimpleRule

-- | The value on the left side of the comparison operator. You can specify
--   an AWS IoT Events input attribute as an input property.
simpleRule_inputProperty :: Lens' SimpleRule Text

-- | The comparison operator.
simpleRule_comparisonOperator :: Lens' SimpleRule ComparisonOperator

-- | The value on the right side of the comparison operator. You can enter
--   a number or specify an AWS IoT Events input attribute.
simpleRule_threshold :: Lens' SimpleRule Text

-- | Sends information about the detector model instance and the event that
--   triggered the action to an Amazon SQS queue.
--   
--   <i>See:</i> <a>newSqsAction</a> smart constructor.
data SqsAction
SqsAction' :: Maybe Payload -> Maybe Bool -> Text -> SqsAction

-- | You can configure the action payload when you send a message to an
--   Amazon SQS queue.
[$sel:payload:SqsAction'] :: SqsAction -> Maybe Payload

-- | Set this to TRUE if you want the data to be base-64 encoded before it
--   is written to the queue. Otherwise, set this to FALSE.
[$sel:useBase64:SqsAction'] :: SqsAction -> Maybe Bool

-- | The URL of the SQS queue where the data is written.
[$sel:queueUrl:SqsAction'] :: SqsAction -> Text

-- | Create a value of <a>SqsAction</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:payload:SqsAction'</a>, <a>sqsAction_payload</a> - You can
--   configure the action payload when you send a message to an Amazon SQS
--   queue.
--   
--   <a>$sel:useBase64:SqsAction'</a>, <a>sqsAction_useBase64</a> - Set
--   this to TRUE if you want the data to be base-64 encoded before it is
--   written to the queue. Otherwise, set this to FALSE.
--   
--   <a>$sel:queueUrl:SqsAction'</a>, <a>sqsAction_queueUrl</a> - The URL
--   of the SQS queue where the data is written.
newSqsAction :: Text -> SqsAction

-- | You can configure the action payload when you send a message to an
--   Amazon SQS queue.
sqsAction_payload :: Lens' SqsAction (Maybe Payload)

-- | Set this to TRUE if you want the data to be base-64 encoded before it
--   is written to the queue. Otherwise, set this to FALSE.
sqsAction_useBase64 :: Lens' SqsAction (Maybe Bool)

-- | The URL of the SQS queue where the data is written.
sqsAction_queueUrl :: Lens' SqsAction Text

-- | Information that defines a state of a detector.
--   
--   <i>See:</i> <a>newState</a> smart constructor.
data State
State' :: Maybe OnEnterLifecycle -> Maybe OnInputLifecycle -> Maybe OnExitLifecycle -> Text -> State

-- | When entering this state, perform these <tt>actions</tt> if the
--   <tt>condition</tt> is TRUE.
[$sel:onEnter:State'] :: State -> Maybe OnEnterLifecycle

-- | When an input is received and the <tt>condition</tt> is TRUE, perform
--   the specified <tt>actions</tt>.
[$sel:onInput:State'] :: State -> Maybe OnInputLifecycle

-- | When exiting this state, perform these <tt>actions</tt> if the
--   specified <tt>condition</tt> is <tt>TRUE</tt>.
[$sel:onExit:State'] :: State -> Maybe OnExitLifecycle

-- | The name of the state.
[$sel:stateName:State'] :: State -> Text

-- | Create a value of <a>State</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:onEnter:State'</a>, <a>state_onEnter</a> - When entering this
--   state, perform these <tt>actions</tt> if the <tt>condition</tt> is
--   TRUE.
--   
--   <a>$sel:onInput:State'</a>, <a>state_onInput</a> - When an input is
--   received and the <tt>condition</tt> is TRUE, perform the specified
--   <tt>actions</tt>.
--   
--   <a>$sel:onExit:State'</a>, <a>state_onExit</a> - When exiting this
--   state, perform these <tt>actions</tt> if the specified
--   <tt>condition</tt> is <tt>TRUE</tt>.
--   
--   <a>$sel:stateName:State'</a>, <a>state_stateName</a> - The name of the
--   state.
newState :: Text -> State

-- | When entering this state, perform these <tt>actions</tt> if the
--   <tt>condition</tt> is TRUE.
state_onEnter :: Lens' State (Maybe OnEnterLifecycle)

-- | When an input is received and the <tt>condition</tt> is TRUE, perform
--   the specified <tt>actions</tt>.
state_onInput :: Lens' State (Maybe OnInputLifecycle)

-- | When exiting this state, perform these <tt>actions</tt> if the
--   specified <tt>condition</tt> is <tt>TRUE</tt>.
state_onExit :: Lens' State (Maybe OnExitLifecycle)

-- | The name of the state.
state_stateName :: Lens' State Text

-- | Metadata that can be used to manage the resource.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | The tag's key.
[$sel:key:Tag'] :: Tag -> Text

-- | The tag's value.
[$sel:value:Tag'] :: Tag -> Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The tag's key.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The tag's value.
newTag :: Text -> Text -> Tag

-- | The tag's key.
tag_key :: Lens' Tag Text

-- | The tag's value.
tag_value :: Lens' Tag Text

-- | Specifies the actions performed and the next state entered when a
--   <tt>condition</tt> evaluates to TRUE.
--   
--   <i>See:</i> <a>newTransitionEvent</a> smart constructor.
data TransitionEvent
TransitionEvent' :: Maybe [Action] -> Text -> Text -> Text -> TransitionEvent

-- | The actions to be performed.
[$sel:actions:TransitionEvent'] :: TransitionEvent -> Maybe [Action]

-- | The name of the transition event.
[$sel:eventName:TransitionEvent'] :: TransitionEvent -> Text

-- | Required. A Boolean expression that when TRUE causes the actions to be
--   performed and the <tt>nextState</tt> to be entered.
[$sel:condition:TransitionEvent'] :: TransitionEvent -> Text

-- | The next state to enter.
[$sel:nextState:TransitionEvent'] :: TransitionEvent -> Text

-- | Create a value of <a>TransitionEvent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:actions:TransitionEvent'</a>, <a>transitionEvent_actions</a> -
--   The actions to be performed.
--   
--   <a>$sel:eventName:TransitionEvent'</a>,
--   <a>transitionEvent_eventName</a> - The name of the transition event.
--   
--   <a>$sel:condition:TransitionEvent'</a>,
--   <a>transitionEvent_condition</a> - Required. A Boolean expression that
--   when TRUE causes the actions to be performed and the
--   <tt>nextState</tt> to be entered.
--   
--   <a>$sel:nextState:TransitionEvent'</a>,
--   <a>transitionEvent_nextState</a> - The next state to enter.
newTransitionEvent :: Text -> Text -> Text -> TransitionEvent

-- | The actions to be performed.
transitionEvent_actions :: Lens' TransitionEvent (Maybe [Action])

-- | The name of the transition event.
transitionEvent_eventName :: Lens' TransitionEvent Text

-- | Required. A Boolean expression that when TRUE causes the actions to be
--   performed and the <tt>nextState</tt> to be entered.
transitionEvent_condition :: Lens' TransitionEvent Text

-- | The next state to enter.
transitionEvent_nextState :: Lens' TransitionEvent Text


-- | Adds to or modifies the tags of the given resource. Tags are metadata
--   that can be used to manage a resource.
module Amazonka.IoTEvents.TagResource

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> [Tag] -> TagResource

-- | The ARN of the resource.
[$sel:resourceArn:TagResource'] :: TagResource -> Text

-- | The new or modified tags for the resource.
[$sel:tags:TagResource'] :: TagResource -> [Tag]

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The ARN of the resource.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - The new or
--   modified tags for the resource.
newTagResource :: Text -> TagResource

-- | The ARN of the resource.
tagResource_resourceArn :: Lens' TagResource Text

-- | The new or modified tags for the resource.
tagResource_tags :: Lens' TagResource [Tag]

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:TagResourceResponse'] :: TagResourceResponse -> Int

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int
instance GHC.Generics.Generic Amazonka.IoTEvents.TagResource.TagResource
instance GHC.Show.Show Amazonka.IoTEvents.TagResource.TagResource
instance GHC.Read.Read Amazonka.IoTEvents.TagResource.TagResource
instance GHC.Classes.Eq Amazonka.IoTEvents.TagResource.TagResource
instance GHC.Generics.Generic Amazonka.IoTEvents.TagResource.TagResourceResponse
instance GHC.Show.Show Amazonka.IoTEvents.TagResource.TagResourceResponse
instance GHC.Read.Read Amazonka.IoTEvents.TagResource.TagResourceResponse
instance GHC.Classes.Eq Amazonka.IoTEvents.TagResource.TagResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTEvents.TagResource.TagResource
instance Control.DeepSeq.NFData Amazonka.IoTEvents.TagResource.TagResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.TagResource.TagResource
instance Control.DeepSeq.NFData Amazonka.IoTEvents.TagResource.TagResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTEvents.TagResource.TagResource
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEvents.TagResource.TagResource
instance Amazonka.Data.Path.ToPath Amazonka.IoTEvents.TagResource.TagResource
instance Amazonka.Data.Query.ToQuery Amazonka.IoTEvents.TagResource.TagResource


-- | Performs an analysis of your detector model. For more information, see
--   <a>Troubleshooting a detector model</a> in the <i>AWS IoT Events
--   Developer Guide</i>.
module Amazonka.IoTEvents.StartDetectorModelAnalysis

-- | <i>See:</i> <a>newStartDetectorModelAnalysis</a> smart constructor.
data StartDetectorModelAnalysis
StartDetectorModelAnalysis' :: DetectorModelDefinition -> StartDetectorModelAnalysis
[$sel:detectorModelDefinition:StartDetectorModelAnalysis'] :: StartDetectorModelAnalysis -> DetectorModelDefinition

-- | Create a value of <a>StartDetectorModelAnalysis</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:detectorModelDefinition:StartDetectorModelAnalysis'</a>,
--   <a>startDetectorModelAnalysis_detectorModelDefinition</a> -
--   Undocumented member.
newStartDetectorModelAnalysis :: DetectorModelDefinition -> StartDetectorModelAnalysis

-- | Undocumented member.
startDetectorModelAnalysis_detectorModelDefinition :: Lens' StartDetectorModelAnalysis DetectorModelDefinition

-- | <i>See:</i> <a>newStartDetectorModelAnalysisResponse</a> smart
--   constructor.
data StartDetectorModelAnalysisResponse
StartDetectorModelAnalysisResponse' :: Maybe Text -> Int -> StartDetectorModelAnalysisResponse

-- | The ID that you can use to retrieve the analysis result.
[$sel:analysisId:StartDetectorModelAnalysisResponse'] :: StartDetectorModelAnalysisResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:StartDetectorModelAnalysisResponse'] :: StartDetectorModelAnalysisResponse -> Int

-- | Create a value of <a>StartDetectorModelAnalysisResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:analysisId:StartDetectorModelAnalysisResponse'</a>,
--   <a>startDetectorModelAnalysisResponse_analysisId</a> - The ID that you
--   can use to retrieve the analysis result.
--   
--   <a>$sel:httpStatus:StartDetectorModelAnalysisResponse'</a>,
--   <a>startDetectorModelAnalysisResponse_httpStatus</a> - The response's
--   http status code.
newStartDetectorModelAnalysisResponse :: Int -> StartDetectorModelAnalysisResponse

-- | The ID that you can use to retrieve the analysis result.
startDetectorModelAnalysisResponse_analysisId :: Lens' StartDetectorModelAnalysisResponse (Maybe Text)

-- | The response's http status code.
startDetectorModelAnalysisResponse_httpStatus :: Lens' StartDetectorModelAnalysisResponse Int
instance GHC.Generics.Generic Amazonka.IoTEvents.StartDetectorModelAnalysis.StartDetectorModelAnalysis
instance GHC.Show.Show Amazonka.IoTEvents.StartDetectorModelAnalysis.StartDetectorModelAnalysis
instance GHC.Read.Read Amazonka.IoTEvents.StartDetectorModelAnalysis.StartDetectorModelAnalysis
instance GHC.Classes.Eq Amazonka.IoTEvents.StartDetectorModelAnalysis.StartDetectorModelAnalysis
instance GHC.Generics.Generic Amazonka.IoTEvents.StartDetectorModelAnalysis.StartDetectorModelAnalysisResponse
instance GHC.Show.Show Amazonka.IoTEvents.StartDetectorModelAnalysis.StartDetectorModelAnalysisResponse
instance GHC.Read.Read Amazonka.IoTEvents.StartDetectorModelAnalysis.StartDetectorModelAnalysisResponse
instance GHC.Classes.Eq Amazonka.IoTEvents.StartDetectorModelAnalysis.StartDetectorModelAnalysisResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTEvents.StartDetectorModelAnalysis.StartDetectorModelAnalysis
instance Control.DeepSeq.NFData Amazonka.IoTEvents.StartDetectorModelAnalysis.StartDetectorModelAnalysisResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.StartDetectorModelAnalysis.StartDetectorModelAnalysis
instance Control.DeepSeq.NFData Amazonka.IoTEvents.StartDetectorModelAnalysis.StartDetectorModelAnalysis
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTEvents.StartDetectorModelAnalysis.StartDetectorModelAnalysis
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEvents.StartDetectorModelAnalysis.StartDetectorModelAnalysis
instance Amazonka.Data.Path.ToPath Amazonka.IoTEvents.StartDetectorModelAnalysis.StartDetectorModelAnalysis
instance Amazonka.Data.Query.ToQuery Amazonka.IoTEvents.StartDetectorModelAnalysis.StartDetectorModelAnalysis


-- | Sets or updates the AWS IoT Events logging options.
--   
--   If you update the value of any <tt>loggingOptions</tt> field, it takes
--   up to one minute for the change to take effect. If you change the
--   policy attached to the role you specified in the <tt>roleArn</tt>
--   field (for example, to correct an invalid policy), it takes up to five
--   minutes for that change to take effect.
module Amazonka.IoTEvents.PutLoggingOptions

-- | <i>See:</i> <a>newPutLoggingOptions</a> smart constructor.
data PutLoggingOptions
PutLoggingOptions' :: LoggingOptions -> PutLoggingOptions

-- | The new values of the AWS IoT Events logging options.
[$sel:loggingOptions:PutLoggingOptions'] :: PutLoggingOptions -> LoggingOptions

-- | Create a value of <a>PutLoggingOptions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:loggingOptions:PutLoggingOptions'</a>,
--   <a>putLoggingOptions_loggingOptions</a> - The new values of the AWS
--   IoT Events logging options.
newPutLoggingOptions :: LoggingOptions -> PutLoggingOptions

-- | The new values of the AWS IoT Events logging options.
putLoggingOptions_loggingOptions :: Lens' PutLoggingOptions LoggingOptions

-- | <i>See:</i> <a>newPutLoggingOptionsResponse</a> smart constructor.
data PutLoggingOptionsResponse
PutLoggingOptionsResponse' :: PutLoggingOptionsResponse

-- | Create a value of <a>PutLoggingOptionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newPutLoggingOptionsResponse :: PutLoggingOptionsResponse
instance GHC.Generics.Generic Amazonka.IoTEvents.PutLoggingOptions.PutLoggingOptions
instance GHC.Show.Show Amazonka.IoTEvents.PutLoggingOptions.PutLoggingOptions
instance GHC.Read.Read Amazonka.IoTEvents.PutLoggingOptions.PutLoggingOptions
instance GHC.Classes.Eq Amazonka.IoTEvents.PutLoggingOptions.PutLoggingOptions
instance GHC.Generics.Generic Amazonka.IoTEvents.PutLoggingOptions.PutLoggingOptionsResponse
instance GHC.Show.Show Amazonka.IoTEvents.PutLoggingOptions.PutLoggingOptionsResponse
instance GHC.Read.Read Amazonka.IoTEvents.PutLoggingOptions.PutLoggingOptionsResponse
instance GHC.Classes.Eq Amazonka.IoTEvents.PutLoggingOptions.PutLoggingOptionsResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTEvents.PutLoggingOptions.PutLoggingOptions
instance Control.DeepSeq.NFData Amazonka.IoTEvents.PutLoggingOptions.PutLoggingOptionsResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.PutLoggingOptions.PutLoggingOptions
instance Control.DeepSeq.NFData Amazonka.IoTEvents.PutLoggingOptions.PutLoggingOptions
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTEvents.PutLoggingOptions.PutLoggingOptions
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEvents.PutLoggingOptions.PutLoggingOptions
instance Amazonka.Data.Path.ToPath Amazonka.IoTEvents.PutLoggingOptions.PutLoggingOptions
instance Amazonka.Data.Query.ToQuery Amazonka.IoTEvents.PutLoggingOptions.PutLoggingOptions


-- | Lists the tags (metadata) you have assigned to the resource.
module Amazonka.IoTEvents.ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | The ARN of the resource.
[$sel:resourceArn:ListTagsForResource'] :: ListTagsForResource -> Text

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The ARN of the resource.
newListTagsForResource :: Text -> ListTagsForResource

-- | The ARN of the resource.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe [Tag] -> Int -> ListTagsForResourceResponse

-- | The list of tags assigned to the resource.
[$sel:tags:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Maybe [Tag]

-- | The response's http status code.
[$sel:httpStatus:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Int

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - The list of tags assigned to
--   the resource.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | The list of tags assigned to the resource.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe [Tag])

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int
instance GHC.Generics.Generic Amazonka.IoTEvents.ListTagsForResource.ListTagsForResource
instance GHC.Show.Show Amazonka.IoTEvents.ListTagsForResource.ListTagsForResource
instance GHC.Read.Read Amazonka.IoTEvents.ListTagsForResource.ListTagsForResource
instance GHC.Classes.Eq Amazonka.IoTEvents.ListTagsForResource.ListTagsForResource
instance GHC.Generics.Generic Amazonka.IoTEvents.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Show.Show Amazonka.IoTEvents.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Read.Read Amazonka.IoTEvents.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Classes.Eq Amazonka.IoTEvents.ListTagsForResource.ListTagsForResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTEvents.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Amazonka.IoTEvents.ListTagsForResource.ListTagsForResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Amazonka.IoTEvents.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTEvents.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Path.ToPath Amazonka.IoTEvents.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Query.ToQuery Amazonka.IoTEvents.ListTagsForResource.ListTagsForResource


-- | Lists the inputs you have created.
module Amazonka.IoTEvents.ListInputs

-- | <i>See:</i> <a>newListInputs</a> smart constructor.
data ListInputs
ListInputs' :: Maybe Text -> Maybe Natural -> ListInputs

-- | The token that you can use to return the next set of results.
[$sel:nextToken:ListInputs'] :: ListInputs -> Maybe Text

-- | The maximum number of results to be returned per request.
[$sel:maxResults:ListInputs'] :: ListInputs -> Maybe Natural

-- | Create a value of <a>ListInputs</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListInputs'</a>, <a>listInputs_nextToken</a> - The
--   token that you can use to return the next set of results.
--   
--   <a>$sel:maxResults:ListInputs'</a>, <a>listInputs_maxResults</a> - The
--   maximum number of results to be returned per request.
newListInputs :: ListInputs

-- | The token that you can use to return the next set of results.
listInputs_nextToken :: Lens' ListInputs (Maybe Text)

-- | The maximum number of results to be returned per request.
listInputs_maxResults :: Lens' ListInputs (Maybe Natural)

-- | <i>See:</i> <a>newListInputsResponse</a> smart constructor.
data ListInputsResponse
ListInputsResponse' :: Maybe [InputSummary] -> Maybe Text -> Int -> ListInputsResponse

-- | Summary information about the inputs.
[$sel:inputSummaries:ListInputsResponse'] :: ListInputsResponse -> Maybe [InputSummary]

-- | The token that you can use to return the next set of results, or
--   <tt>null</tt> if there are no more results.
[$sel:nextToken:ListInputsResponse'] :: ListInputsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListInputsResponse'] :: ListInputsResponse -> Int

-- | Create a value of <a>ListInputsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputSummaries:ListInputsResponse'</a>,
--   <a>listInputsResponse_inputSummaries</a> - Summary information about
--   the inputs.
--   
--   <a>$sel:nextToken:ListInputs'</a>, <a>listInputsResponse_nextToken</a>
--   - The token that you can use to return the next set of results, or
--   <tt>null</tt> if there are no more results.
--   
--   <a>$sel:httpStatus:ListInputsResponse'</a>,
--   <a>listInputsResponse_httpStatus</a> - The response's http status
--   code.
newListInputsResponse :: Int -> ListInputsResponse

-- | Summary information about the inputs.
listInputsResponse_inputSummaries :: Lens' ListInputsResponse (Maybe [InputSummary])

-- | The token that you can use to return the next set of results, or
--   <tt>null</tt> if there are no more results.
listInputsResponse_nextToken :: Lens' ListInputsResponse (Maybe Text)

-- | The response's http status code.
listInputsResponse_httpStatus :: Lens' ListInputsResponse Int
instance GHC.Generics.Generic Amazonka.IoTEvents.ListInputs.ListInputs
instance GHC.Show.Show Amazonka.IoTEvents.ListInputs.ListInputs
instance GHC.Read.Read Amazonka.IoTEvents.ListInputs.ListInputs
instance GHC.Classes.Eq Amazonka.IoTEvents.ListInputs.ListInputs
instance GHC.Generics.Generic Amazonka.IoTEvents.ListInputs.ListInputsResponse
instance GHC.Show.Show Amazonka.IoTEvents.ListInputs.ListInputsResponse
instance GHC.Read.Read Amazonka.IoTEvents.ListInputs.ListInputsResponse
instance GHC.Classes.Eq Amazonka.IoTEvents.ListInputs.ListInputsResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTEvents.ListInputs.ListInputs
instance Control.DeepSeq.NFData Amazonka.IoTEvents.ListInputs.ListInputsResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.ListInputs.ListInputs
instance Control.DeepSeq.NFData Amazonka.IoTEvents.ListInputs.ListInputs
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTEvents.ListInputs.ListInputs
instance Amazonka.Data.Path.ToPath Amazonka.IoTEvents.ListInputs.ListInputs
instance Amazonka.Data.Query.ToQuery Amazonka.IoTEvents.ListInputs.ListInputs


-- | Lists one or more input routings.
module Amazonka.IoTEvents.ListInputRoutings

-- | <i>See:</i> <a>newListInputRoutings</a> smart constructor.
data ListInputRoutings
ListInputRoutings' :: Maybe Text -> Maybe Natural -> InputIdentifier -> ListInputRoutings

-- | The token that you can use to return the next set of results.
[$sel:nextToken:ListInputRoutings'] :: ListInputRoutings -> Maybe Text

-- | The maximum number of results to be returned per request.
[$sel:maxResults:ListInputRoutings'] :: ListInputRoutings -> Maybe Natural

-- | The identifer of the routed input.
[$sel:inputIdentifier:ListInputRoutings'] :: ListInputRoutings -> InputIdentifier

-- | Create a value of <a>ListInputRoutings</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListInputRoutings'</a>,
--   <a>listInputRoutings_nextToken</a> - The token that you can use to
--   return the next set of results.
--   
--   <a>$sel:maxResults:ListInputRoutings'</a>,
--   <a>listInputRoutings_maxResults</a> - The maximum number of results to
--   be returned per request.
--   
--   <a>$sel:inputIdentifier:ListInputRoutings'</a>,
--   <a>listInputRoutings_inputIdentifier</a> - The identifer of the routed
--   input.
newListInputRoutings :: InputIdentifier -> ListInputRoutings

-- | The token that you can use to return the next set of results.
listInputRoutings_nextToken :: Lens' ListInputRoutings (Maybe Text)

-- | The maximum number of results to be returned per request.
listInputRoutings_maxResults :: Lens' ListInputRoutings (Maybe Natural)

-- | The identifer of the routed input.
listInputRoutings_inputIdentifier :: Lens' ListInputRoutings InputIdentifier

-- | <i>See:</i> <a>newListInputRoutingsResponse</a> smart constructor.
data ListInputRoutingsResponse
ListInputRoutingsResponse' :: Maybe [RoutedResource] -> Maybe Text -> Int -> ListInputRoutingsResponse

-- | Summary information about the routed resources.
[$sel:routedResources:ListInputRoutingsResponse'] :: ListInputRoutingsResponse -> Maybe [RoutedResource]

-- | The token that you can use to return the next set of results, or
--   <tt>null</tt> if there are no more results.
[$sel:nextToken:ListInputRoutingsResponse'] :: ListInputRoutingsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListInputRoutingsResponse'] :: ListInputRoutingsResponse -> Int

-- | Create a value of <a>ListInputRoutingsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:routedResources:ListInputRoutingsResponse'</a>,
--   <a>listInputRoutingsResponse_routedResources</a> - Summary information
--   about the routed resources.
--   
--   <a>$sel:nextToken:ListInputRoutings'</a>,
--   <a>listInputRoutingsResponse_nextToken</a> - The token that you can
--   use to return the next set of results, or <tt>null</tt> if there are
--   no more results.
--   
--   <a>$sel:httpStatus:ListInputRoutingsResponse'</a>,
--   <a>listInputRoutingsResponse_httpStatus</a> - The response's http
--   status code.
newListInputRoutingsResponse :: Int -> ListInputRoutingsResponse

-- | Summary information about the routed resources.
listInputRoutingsResponse_routedResources :: Lens' ListInputRoutingsResponse (Maybe [RoutedResource])

-- | The token that you can use to return the next set of results, or
--   <tt>null</tt> if there are no more results.
listInputRoutingsResponse_nextToken :: Lens' ListInputRoutingsResponse (Maybe Text)

-- | The response's http status code.
listInputRoutingsResponse_httpStatus :: Lens' ListInputRoutingsResponse Int
instance GHC.Generics.Generic Amazonka.IoTEvents.ListInputRoutings.ListInputRoutings
instance GHC.Show.Show Amazonka.IoTEvents.ListInputRoutings.ListInputRoutings
instance GHC.Read.Read Amazonka.IoTEvents.ListInputRoutings.ListInputRoutings
instance GHC.Classes.Eq Amazonka.IoTEvents.ListInputRoutings.ListInputRoutings
instance GHC.Generics.Generic Amazonka.IoTEvents.ListInputRoutings.ListInputRoutingsResponse
instance GHC.Show.Show Amazonka.IoTEvents.ListInputRoutings.ListInputRoutingsResponse
instance GHC.Read.Read Amazonka.IoTEvents.ListInputRoutings.ListInputRoutingsResponse
instance GHC.Classes.Eq Amazonka.IoTEvents.ListInputRoutings.ListInputRoutingsResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTEvents.ListInputRoutings.ListInputRoutings
instance Control.DeepSeq.NFData Amazonka.IoTEvents.ListInputRoutings.ListInputRoutingsResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.ListInputRoutings.ListInputRoutings
instance Control.DeepSeq.NFData Amazonka.IoTEvents.ListInputRoutings.ListInputRoutings
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTEvents.ListInputRoutings.ListInputRoutings
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEvents.ListInputRoutings.ListInputRoutings
instance Amazonka.Data.Path.ToPath Amazonka.IoTEvents.ListInputRoutings.ListInputRoutings
instance Amazonka.Data.Query.ToQuery Amazonka.IoTEvents.ListInputRoutings.ListInputRoutings


-- | Lists the detector models you have created. Only the metadata
--   associated with each detector model is returned.
module Amazonka.IoTEvents.ListDetectorModels

-- | <i>See:</i> <a>newListDetectorModels</a> smart constructor.
data ListDetectorModels
ListDetectorModels' :: Maybe Text -> Maybe Natural -> ListDetectorModels

-- | The token that you can use to return the next set of results.
[$sel:nextToken:ListDetectorModels'] :: ListDetectorModels -> Maybe Text

-- | The maximum number of results to be returned per request.
[$sel:maxResults:ListDetectorModels'] :: ListDetectorModels -> Maybe Natural

-- | Create a value of <a>ListDetectorModels</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDetectorModels'</a>,
--   <a>listDetectorModels_nextToken</a> - The token that you can use to
--   return the next set of results.
--   
--   <a>$sel:maxResults:ListDetectorModels'</a>,
--   <a>listDetectorModels_maxResults</a> - The maximum number of results
--   to be returned per request.
newListDetectorModels :: ListDetectorModels

-- | The token that you can use to return the next set of results.
listDetectorModels_nextToken :: Lens' ListDetectorModels (Maybe Text)

-- | The maximum number of results to be returned per request.
listDetectorModels_maxResults :: Lens' ListDetectorModels (Maybe Natural)

-- | <i>See:</i> <a>newListDetectorModelsResponse</a> smart constructor.
data ListDetectorModelsResponse
ListDetectorModelsResponse' :: Maybe Text -> Maybe [DetectorModelSummary] -> Int -> ListDetectorModelsResponse

-- | The token that you can use to return the next set of results, or
--   <tt>null</tt> if there are no more results.
[$sel:nextToken:ListDetectorModelsResponse'] :: ListDetectorModelsResponse -> Maybe Text

-- | Summary information about the detector models.
[$sel:detectorModelSummaries:ListDetectorModelsResponse'] :: ListDetectorModelsResponse -> Maybe [DetectorModelSummary]

-- | The response's http status code.
[$sel:httpStatus:ListDetectorModelsResponse'] :: ListDetectorModelsResponse -> Int

-- | Create a value of <a>ListDetectorModelsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDetectorModels'</a>,
--   <a>listDetectorModelsResponse_nextToken</a> - The token that you can
--   use to return the next set of results, or <tt>null</tt> if there are
--   no more results.
--   
--   <a>$sel:detectorModelSummaries:ListDetectorModelsResponse'</a>,
--   <a>listDetectorModelsResponse_detectorModelSummaries</a> - Summary
--   information about the detector models.
--   
--   <a>$sel:httpStatus:ListDetectorModelsResponse'</a>,
--   <a>listDetectorModelsResponse_httpStatus</a> - The response's http
--   status code.
newListDetectorModelsResponse :: Int -> ListDetectorModelsResponse

-- | The token that you can use to return the next set of results, or
--   <tt>null</tt> if there are no more results.
listDetectorModelsResponse_nextToken :: Lens' ListDetectorModelsResponse (Maybe Text)

-- | Summary information about the detector models.
listDetectorModelsResponse_detectorModelSummaries :: Lens' ListDetectorModelsResponse (Maybe [DetectorModelSummary])

-- | The response's http status code.
listDetectorModelsResponse_httpStatus :: Lens' ListDetectorModelsResponse Int
instance GHC.Generics.Generic Amazonka.IoTEvents.ListDetectorModels.ListDetectorModels
instance GHC.Show.Show Amazonka.IoTEvents.ListDetectorModels.ListDetectorModels
instance GHC.Read.Read Amazonka.IoTEvents.ListDetectorModels.ListDetectorModels
instance GHC.Classes.Eq Amazonka.IoTEvents.ListDetectorModels.ListDetectorModels
instance GHC.Generics.Generic Amazonka.IoTEvents.ListDetectorModels.ListDetectorModelsResponse
instance GHC.Show.Show Amazonka.IoTEvents.ListDetectorModels.ListDetectorModelsResponse
instance GHC.Read.Read Amazonka.IoTEvents.ListDetectorModels.ListDetectorModelsResponse
instance GHC.Classes.Eq Amazonka.IoTEvents.ListDetectorModels.ListDetectorModelsResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTEvents.ListDetectorModels.ListDetectorModels
instance Control.DeepSeq.NFData Amazonka.IoTEvents.ListDetectorModels.ListDetectorModelsResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.ListDetectorModels.ListDetectorModels
instance Control.DeepSeq.NFData Amazonka.IoTEvents.ListDetectorModels.ListDetectorModels
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTEvents.ListDetectorModels.ListDetectorModels
instance Amazonka.Data.Path.ToPath Amazonka.IoTEvents.ListDetectorModels.ListDetectorModels
instance Amazonka.Data.Query.ToQuery Amazonka.IoTEvents.ListDetectorModels.ListDetectorModels


-- | Lists all the versions of a detector model. Only the metadata
--   associated with each detector model version is returned.
module Amazonka.IoTEvents.ListDetectorModelVersions

-- | <i>See:</i> <a>newListDetectorModelVersions</a> smart constructor.
data ListDetectorModelVersions
ListDetectorModelVersions' :: Maybe Text -> Maybe Natural -> Text -> ListDetectorModelVersions

-- | The token that you can use to return the next set of results.
[$sel:nextToken:ListDetectorModelVersions'] :: ListDetectorModelVersions -> Maybe Text

-- | The maximum number of results to be returned per request.
[$sel:maxResults:ListDetectorModelVersions'] :: ListDetectorModelVersions -> Maybe Natural

-- | The name of the detector model whose versions are returned.
[$sel:detectorModelName:ListDetectorModelVersions'] :: ListDetectorModelVersions -> Text

-- | Create a value of <a>ListDetectorModelVersions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDetectorModelVersions'</a>,
--   <a>listDetectorModelVersions_nextToken</a> - The token that you can
--   use to return the next set of results.
--   
--   <a>$sel:maxResults:ListDetectorModelVersions'</a>,
--   <a>listDetectorModelVersions_maxResults</a> - The maximum number of
--   results to be returned per request.
--   
--   <a>$sel:detectorModelName:ListDetectorModelVersions'</a>,
--   <a>listDetectorModelVersions_detectorModelName</a> - The name of the
--   detector model whose versions are returned.
newListDetectorModelVersions :: Text -> ListDetectorModelVersions

-- | The token that you can use to return the next set of results.
listDetectorModelVersions_nextToken :: Lens' ListDetectorModelVersions (Maybe Text)

-- | The maximum number of results to be returned per request.
listDetectorModelVersions_maxResults :: Lens' ListDetectorModelVersions (Maybe Natural)

-- | The name of the detector model whose versions are returned.
listDetectorModelVersions_detectorModelName :: Lens' ListDetectorModelVersions Text

-- | <i>See:</i> <a>newListDetectorModelVersionsResponse</a> smart
--   constructor.
data ListDetectorModelVersionsResponse
ListDetectorModelVersionsResponse' :: Maybe Text -> Maybe [DetectorModelVersionSummary] -> Int -> ListDetectorModelVersionsResponse

-- | The token that you can use to return the next set of results, or
--   <tt>null</tt> if there are no more results.
[$sel:nextToken:ListDetectorModelVersionsResponse'] :: ListDetectorModelVersionsResponse -> Maybe Text

-- | Summary information about the detector model versions.
[$sel:detectorModelVersionSummaries:ListDetectorModelVersionsResponse'] :: ListDetectorModelVersionsResponse -> Maybe [DetectorModelVersionSummary]

-- | The response's http status code.
[$sel:httpStatus:ListDetectorModelVersionsResponse'] :: ListDetectorModelVersionsResponse -> Int

-- | Create a value of <a>ListDetectorModelVersionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDetectorModelVersions'</a>,
--   <a>listDetectorModelVersionsResponse_nextToken</a> - The token that
--   you can use to return the next set of results, or <tt>null</tt> if
--   there are no more results.
--   
--   
--   <a>$sel:detectorModelVersionSummaries:ListDetectorModelVersionsResponse'</a>,
--   <a>listDetectorModelVersionsResponse_detectorModelVersionSummaries</a>
--   - Summary information about the detector model versions.
--   
--   <a>$sel:httpStatus:ListDetectorModelVersionsResponse'</a>,
--   <a>listDetectorModelVersionsResponse_httpStatus</a> - The response's
--   http status code.
newListDetectorModelVersionsResponse :: Int -> ListDetectorModelVersionsResponse

-- | The token that you can use to return the next set of results, or
--   <tt>null</tt> if there are no more results.
listDetectorModelVersionsResponse_nextToken :: Lens' ListDetectorModelVersionsResponse (Maybe Text)

-- | Summary information about the detector model versions.
listDetectorModelVersionsResponse_detectorModelVersionSummaries :: Lens' ListDetectorModelVersionsResponse (Maybe [DetectorModelVersionSummary])

-- | The response's http status code.
listDetectorModelVersionsResponse_httpStatus :: Lens' ListDetectorModelVersionsResponse Int
instance GHC.Generics.Generic Amazonka.IoTEvents.ListDetectorModelVersions.ListDetectorModelVersions
instance GHC.Show.Show Amazonka.IoTEvents.ListDetectorModelVersions.ListDetectorModelVersions
instance GHC.Read.Read Amazonka.IoTEvents.ListDetectorModelVersions.ListDetectorModelVersions
instance GHC.Classes.Eq Amazonka.IoTEvents.ListDetectorModelVersions.ListDetectorModelVersions
instance GHC.Generics.Generic Amazonka.IoTEvents.ListDetectorModelVersions.ListDetectorModelVersionsResponse
instance GHC.Show.Show Amazonka.IoTEvents.ListDetectorModelVersions.ListDetectorModelVersionsResponse
instance GHC.Read.Read Amazonka.IoTEvents.ListDetectorModelVersions.ListDetectorModelVersionsResponse
instance GHC.Classes.Eq Amazonka.IoTEvents.ListDetectorModelVersions.ListDetectorModelVersionsResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTEvents.ListDetectorModelVersions.ListDetectorModelVersions
instance Control.DeepSeq.NFData Amazonka.IoTEvents.ListDetectorModelVersions.ListDetectorModelVersionsResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.ListDetectorModelVersions.ListDetectorModelVersions
instance Control.DeepSeq.NFData Amazonka.IoTEvents.ListDetectorModelVersions.ListDetectorModelVersions
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTEvents.ListDetectorModelVersions.ListDetectorModelVersions
instance Amazonka.Data.Path.ToPath Amazonka.IoTEvents.ListDetectorModelVersions.ListDetectorModelVersions
instance Amazonka.Data.Query.ToQuery Amazonka.IoTEvents.ListDetectorModelVersions.ListDetectorModelVersions


-- | Lists the alarm models that you created. The operation returns only
--   the metadata associated with each alarm model.
module Amazonka.IoTEvents.ListAlarmModels

-- | <i>See:</i> <a>newListAlarmModels</a> smart constructor.
data ListAlarmModels
ListAlarmModels' :: Maybe Text -> Maybe Natural -> ListAlarmModels

-- | The token that you can use to return the next set of results.
[$sel:nextToken:ListAlarmModels'] :: ListAlarmModels -> Maybe Text

-- | The maximum number of results to be returned per request.
[$sel:maxResults:ListAlarmModels'] :: ListAlarmModels -> Maybe Natural

-- | Create a value of <a>ListAlarmModels</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListAlarmModels'</a>,
--   <a>listAlarmModels_nextToken</a> - The token that you can use to
--   return the next set of results.
--   
--   <a>$sel:maxResults:ListAlarmModels'</a>,
--   <a>listAlarmModels_maxResults</a> - The maximum number of results to
--   be returned per request.
newListAlarmModels :: ListAlarmModels

-- | The token that you can use to return the next set of results.
listAlarmModels_nextToken :: Lens' ListAlarmModels (Maybe Text)

-- | The maximum number of results to be returned per request.
listAlarmModels_maxResults :: Lens' ListAlarmModels (Maybe Natural)

-- | <i>See:</i> <a>newListAlarmModelsResponse</a> smart constructor.
data ListAlarmModelsResponse
ListAlarmModelsResponse' :: Maybe Text -> Maybe [AlarmModelSummary] -> Int -> ListAlarmModelsResponse

-- | The token that you can use to return the next set of results, or
--   <tt>null</tt> if there are no more results.
[$sel:nextToken:ListAlarmModelsResponse'] :: ListAlarmModelsResponse -> Maybe Text

-- | A list that summarizes each alarm model.
[$sel:alarmModelSummaries:ListAlarmModelsResponse'] :: ListAlarmModelsResponse -> Maybe [AlarmModelSummary]

-- | The response's http status code.
[$sel:httpStatus:ListAlarmModelsResponse'] :: ListAlarmModelsResponse -> Int

-- | Create a value of <a>ListAlarmModelsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListAlarmModels'</a>,
--   <a>listAlarmModelsResponse_nextToken</a> - The token that you can use
--   to return the next set of results, or <tt>null</tt> if there are no
--   more results.
--   
--   <a>$sel:alarmModelSummaries:ListAlarmModelsResponse'</a>,
--   <a>listAlarmModelsResponse_alarmModelSummaries</a> - A list that
--   summarizes each alarm model.
--   
--   <a>$sel:httpStatus:ListAlarmModelsResponse'</a>,
--   <a>listAlarmModelsResponse_httpStatus</a> - The response's http status
--   code.
newListAlarmModelsResponse :: Int -> ListAlarmModelsResponse

-- | The token that you can use to return the next set of results, or
--   <tt>null</tt> if there are no more results.
listAlarmModelsResponse_nextToken :: Lens' ListAlarmModelsResponse (Maybe Text)

-- | A list that summarizes each alarm model.
listAlarmModelsResponse_alarmModelSummaries :: Lens' ListAlarmModelsResponse (Maybe [AlarmModelSummary])

-- | The response's http status code.
listAlarmModelsResponse_httpStatus :: Lens' ListAlarmModelsResponse Int
instance GHC.Generics.Generic Amazonka.IoTEvents.ListAlarmModels.ListAlarmModels
instance GHC.Show.Show Amazonka.IoTEvents.ListAlarmModels.ListAlarmModels
instance GHC.Read.Read Amazonka.IoTEvents.ListAlarmModels.ListAlarmModels
instance GHC.Classes.Eq Amazonka.IoTEvents.ListAlarmModels.ListAlarmModels
instance GHC.Generics.Generic Amazonka.IoTEvents.ListAlarmModels.ListAlarmModelsResponse
instance GHC.Show.Show Amazonka.IoTEvents.ListAlarmModels.ListAlarmModelsResponse
instance GHC.Read.Read Amazonka.IoTEvents.ListAlarmModels.ListAlarmModelsResponse
instance GHC.Classes.Eq Amazonka.IoTEvents.ListAlarmModels.ListAlarmModelsResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTEvents.ListAlarmModels.ListAlarmModels
instance Control.DeepSeq.NFData Amazonka.IoTEvents.ListAlarmModels.ListAlarmModelsResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.ListAlarmModels.ListAlarmModels
instance Control.DeepSeq.NFData Amazonka.IoTEvents.ListAlarmModels.ListAlarmModels
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTEvents.ListAlarmModels.ListAlarmModels
instance Amazonka.Data.Path.ToPath Amazonka.IoTEvents.ListAlarmModels.ListAlarmModels
instance Amazonka.Data.Query.ToQuery Amazonka.IoTEvents.ListAlarmModels.ListAlarmModels


-- | Lists all the versions of an alarm model. The operation returns only
--   the metadata associated with each alarm model version.
module Amazonka.IoTEvents.ListAlarmModelVersions

-- | <i>See:</i> <a>newListAlarmModelVersions</a> smart constructor.
data ListAlarmModelVersions
ListAlarmModelVersions' :: Maybe Text -> Maybe Natural -> Text -> ListAlarmModelVersions

-- | The token that you can use to return the next set of results.
[$sel:nextToken:ListAlarmModelVersions'] :: ListAlarmModelVersions -> Maybe Text

-- | The maximum number of results to be returned per request.
[$sel:maxResults:ListAlarmModelVersions'] :: ListAlarmModelVersions -> Maybe Natural

-- | The name of the alarm model.
[$sel:alarmModelName:ListAlarmModelVersions'] :: ListAlarmModelVersions -> Text

-- | Create a value of <a>ListAlarmModelVersions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListAlarmModelVersions'</a>,
--   <a>listAlarmModelVersions_nextToken</a> - The token that you can use
--   to return the next set of results.
--   
--   <a>$sel:maxResults:ListAlarmModelVersions'</a>,
--   <a>listAlarmModelVersions_maxResults</a> - The maximum number of
--   results to be returned per request.
--   
--   <a>$sel:alarmModelName:ListAlarmModelVersions'</a>,
--   <a>listAlarmModelVersions_alarmModelName</a> - The name of the alarm
--   model.
newListAlarmModelVersions :: Text -> ListAlarmModelVersions

-- | The token that you can use to return the next set of results.
listAlarmModelVersions_nextToken :: Lens' ListAlarmModelVersions (Maybe Text)

-- | The maximum number of results to be returned per request.
listAlarmModelVersions_maxResults :: Lens' ListAlarmModelVersions (Maybe Natural)

-- | The name of the alarm model.
listAlarmModelVersions_alarmModelName :: Lens' ListAlarmModelVersions Text

-- | <i>See:</i> <a>newListAlarmModelVersionsResponse</a> smart
--   constructor.
data ListAlarmModelVersionsResponse
ListAlarmModelVersionsResponse' :: Maybe [AlarmModelVersionSummary] -> Maybe Text -> Int -> ListAlarmModelVersionsResponse

-- | A list that summarizes each alarm model version.
[$sel:alarmModelVersionSummaries:ListAlarmModelVersionsResponse'] :: ListAlarmModelVersionsResponse -> Maybe [AlarmModelVersionSummary]

-- | The token that you can use to return the next set of results, or
--   <tt>null</tt> if there are no more results.
[$sel:nextToken:ListAlarmModelVersionsResponse'] :: ListAlarmModelVersionsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListAlarmModelVersionsResponse'] :: ListAlarmModelVersionsResponse -> Int

-- | Create a value of <a>ListAlarmModelVersionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:alarmModelVersionSummaries:ListAlarmModelVersionsResponse'</a>,
--   <a>listAlarmModelVersionsResponse_alarmModelVersionSummaries</a> - A
--   list that summarizes each alarm model version.
--   
--   <a>$sel:nextToken:ListAlarmModelVersions'</a>,
--   <a>listAlarmModelVersionsResponse_nextToken</a> - The token that you
--   can use to return the next set of results, or <tt>null</tt> if there
--   are no more results.
--   
--   <a>$sel:httpStatus:ListAlarmModelVersionsResponse'</a>,
--   <a>listAlarmModelVersionsResponse_httpStatus</a> - The response's http
--   status code.
newListAlarmModelVersionsResponse :: Int -> ListAlarmModelVersionsResponse

-- | A list that summarizes each alarm model version.
listAlarmModelVersionsResponse_alarmModelVersionSummaries :: Lens' ListAlarmModelVersionsResponse (Maybe [AlarmModelVersionSummary])

-- | The token that you can use to return the next set of results, or
--   <tt>null</tt> if there are no more results.
listAlarmModelVersionsResponse_nextToken :: Lens' ListAlarmModelVersionsResponse (Maybe Text)

-- | The response's http status code.
listAlarmModelVersionsResponse_httpStatus :: Lens' ListAlarmModelVersionsResponse Int
instance GHC.Generics.Generic Amazonka.IoTEvents.ListAlarmModelVersions.ListAlarmModelVersions
instance GHC.Show.Show Amazonka.IoTEvents.ListAlarmModelVersions.ListAlarmModelVersions
instance GHC.Read.Read Amazonka.IoTEvents.ListAlarmModelVersions.ListAlarmModelVersions
instance GHC.Classes.Eq Amazonka.IoTEvents.ListAlarmModelVersions.ListAlarmModelVersions
instance GHC.Generics.Generic Amazonka.IoTEvents.ListAlarmModelVersions.ListAlarmModelVersionsResponse
instance GHC.Show.Show Amazonka.IoTEvents.ListAlarmModelVersions.ListAlarmModelVersionsResponse
instance GHC.Read.Read Amazonka.IoTEvents.ListAlarmModelVersions.ListAlarmModelVersionsResponse
instance GHC.Classes.Eq Amazonka.IoTEvents.ListAlarmModelVersions.ListAlarmModelVersionsResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTEvents.ListAlarmModelVersions.ListAlarmModelVersions
instance Control.DeepSeq.NFData Amazonka.IoTEvents.ListAlarmModelVersions.ListAlarmModelVersionsResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.ListAlarmModelVersions.ListAlarmModelVersions
instance Control.DeepSeq.NFData Amazonka.IoTEvents.ListAlarmModelVersions.ListAlarmModelVersions
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTEvents.ListAlarmModelVersions.ListAlarmModelVersions
instance Amazonka.Data.Path.ToPath Amazonka.IoTEvents.ListAlarmModelVersions.ListAlarmModelVersions
instance Amazonka.Data.Query.ToQuery Amazonka.IoTEvents.ListAlarmModelVersions.ListAlarmModelVersions


-- | Retrieves one or more analysis results of the detector model.
--   
--   After AWS IoT Events starts analyzing your detector model, you have up
--   to 24 hours to retrieve the analysis results.
module Amazonka.IoTEvents.GetDetectorModelAnalysisResults

-- | <i>See:</i> <a>newGetDetectorModelAnalysisResults</a> smart
--   constructor.
data GetDetectorModelAnalysisResults
GetDetectorModelAnalysisResults' :: Maybe Text -> Maybe Int -> Text -> GetDetectorModelAnalysisResults

-- | The token that you can use to return the next set of results.
[$sel:nextToken:GetDetectorModelAnalysisResults'] :: GetDetectorModelAnalysisResults -> Maybe Text

-- | The maximum number of results to be returned per request.
[$sel:maxResults:GetDetectorModelAnalysisResults'] :: GetDetectorModelAnalysisResults -> Maybe Int

-- | The ID of the analysis result that you want to retrieve.
[$sel:analysisId:GetDetectorModelAnalysisResults'] :: GetDetectorModelAnalysisResults -> Text

-- | Create a value of <a>GetDetectorModelAnalysisResults</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetDetectorModelAnalysisResults'</a>,
--   <a>getDetectorModelAnalysisResults_nextToken</a> - The token that you
--   can use to return the next set of results.
--   
--   <a>$sel:maxResults:GetDetectorModelAnalysisResults'</a>,
--   <a>getDetectorModelAnalysisResults_maxResults</a> - The maximum number
--   of results to be returned per request.
--   
--   <a>$sel:analysisId:GetDetectorModelAnalysisResults'</a>,
--   <a>getDetectorModelAnalysisResults_analysisId</a> - The ID of the
--   analysis result that you want to retrieve.
newGetDetectorModelAnalysisResults :: Text -> GetDetectorModelAnalysisResults

-- | The token that you can use to return the next set of results.
getDetectorModelAnalysisResults_nextToken :: Lens' GetDetectorModelAnalysisResults (Maybe Text)

-- | The maximum number of results to be returned per request.
getDetectorModelAnalysisResults_maxResults :: Lens' GetDetectorModelAnalysisResults (Maybe Int)

-- | The ID of the analysis result that you want to retrieve.
getDetectorModelAnalysisResults_analysisId :: Lens' GetDetectorModelAnalysisResults Text

-- | <i>See:</i> <a>newGetDetectorModelAnalysisResultsResponse</a> smart
--   constructor.
data GetDetectorModelAnalysisResultsResponse
GetDetectorModelAnalysisResultsResponse' :: Maybe Text -> Maybe [AnalysisResult] -> Int -> GetDetectorModelAnalysisResultsResponse

-- | The token that you can use to return the next set of results, or
--   <tt>null</tt> if there are no more results.
[$sel:nextToken:GetDetectorModelAnalysisResultsResponse'] :: GetDetectorModelAnalysisResultsResponse -> Maybe Text

-- | Contains information about one or more analysis results.
[$sel:analysisResults:GetDetectorModelAnalysisResultsResponse'] :: GetDetectorModelAnalysisResultsResponse -> Maybe [AnalysisResult]

-- | The response's http status code.
[$sel:httpStatus:GetDetectorModelAnalysisResultsResponse'] :: GetDetectorModelAnalysisResultsResponse -> Int

-- | Create a value of <a>GetDetectorModelAnalysisResultsResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetDetectorModelAnalysisResults'</a>,
--   <a>getDetectorModelAnalysisResultsResponse_nextToken</a> - The token
--   that you can use to return the next set of results, or <tt>null</tt>
--   if there are no more results.
--   
--   <a>$sel:analysisResults:GetDetectorModelAnalysisResultsResponse'</a>,
--   <a>getDetectorModelAnalysisResultsResponse_analysisResults</a> -
--   Contains information about one or more analysis results.
--   
--   <a>$sel:httpStatus:GetDetectorModelAnalysisResultsResponse'</a>,
--   <a>getDetectorModelAnalysisResultsResponse_httpStatus</a> - The
--   response's http status code.
newGetDetectorModelAnalysisResultsResponse :: Int -> GetDetectorModelAnalysisResultsResponse

-- | The token that you can use to return the next set of results, or
--   <tt>null</tt> if there are no more results.
getDetectorModelAnalysisResultsResponse_nextToken :: Lens' GetDetectorModelAnalysisResultsResponse (Maybe Text)

-- | Contains information about one or more analysis results.
getDetectorModelAnalysisResultsResponse_analysisResults :: Lens' GetDetectorModelAnalysisResultsResponse (Maybe [AnalysisResult])

-- | The response's http status code.
getDetectorModelAnalysisResultsResponse_httpStatus :: Lens' GetDetectorModelAnalysisResultsResponse Int
instance GHC.Generics.Generic Amazonka.IoTEvents.GetDetectorModelAnalysisResults.GetDetectorModelAnalysisResults
instance GHC.Show.Show Amazonka.IoTEvents.GetDetectorModelAnalysisResults.GetDetectorModelAnalysisResults
instance GHC.Read.Read Amazonka.IoTEvents.GetDetectorModelAnalysisResults.GetDetectorModelAnalysisResults
instance GHC.Classes.Eq Amazonka.IoTEvents.GetDetectorModelAnalysisResults.GetDetectorModelAnalysisResults
instance GHC.Generics.Generic Amazonka.IoTEvents.GetDetectorModelAnalysisResults.GetDetectorModelAnalysisResultsResponse
instance GHC.Show.Show Amazonka.IoTEvents.GetDetectorModelAnalysisResults.GetDetectorModelAnalysisResultsResponse
instance GHC.Read.Read Amazonka.IoTEvents.GetDetectorModelAnalysisResults.GetDetectorModelAnalysisResultsResponse
instance GHC.Classes.Eq Amazonka.IoTEvents.GetDetectorModelAnalysisResults.GetDetectorModelAnalysisResultsResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTEvents.GetDetectorModelAnalysisResults.GetDetectorModelAnalysisResults
instance Control.DeepSeq.NFData Amazonka.IoTEvents.GetDetectorModelAnalysisResults.GetDetectorModelAnalysisResultsResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.GetDetectorModelAnalysisResults.GetDetectorModelAnalysisResults
instance Control.DeepSeq.NFData Amazonka.IoTEvents.GetDetectorModelAnalysisResults.GetDetectorModelAnalysisResults
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTEvents.GetDetectorModelAnalysisResults.GetDetectorModelAnalysisResults
instance Amazonka.Data.Path.ToPath Amazonka.IoTEvents.GetDetectorModelAnalysisResults.GetDetectorModelAnalysisResults
instance Amazonka.Data.Query.ToQuery Amazonka.IoTEvents.GetDetectorModelAnalysisResults.GetDetectorModelAnalysisResults


-- | Retrieves the current settings of the AWS IoT Events logging options.
module Amazonka.IoTEvents.DescribeLoggingOptions

-- | <i>See:</i> <a>newDescribeLoggingOptions</a> smart constructor.
data DescribeLoggingOptions
DescribeLoggingOptions' :: DescribeLoggingOptions

-- | Create a value of <a>DescribeLoggingOptions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDescribeLoggingOptions :: DescribeLoggingOptions

-- | <i>See:</i> <a>newDescribeLoggingOptionsResponse</a> smart
--   constructor.
data DescribeLoggingOptionsResponse
DescribeLoggingOptionsResponse' :: Maybe LoggingOptions -> Int -> DescribeLoggingOptionsResponse

-- | The current settings of the AWS IoT Events logging options.
[$sel:loggingOptions:DescribeLoggingOptionsResponse'] :: DescribeLoggingOptionsResponse -> Maybe LoggingOptions

-- | The response's http status code.
[$sel:httpStatus:DescribeLoggingOptionsResponse'] :: DescribeLoggingOptionsResponse -> Int

-- | Create a value of <a>DescribeLoggingOptionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:loggingOptions:DescribeLoggingOptionsResponse'</a>,
--   <a>describeLoggingOptionsResponse_loggingOptions</a> - The current
--   settings of the AWS IoT Events logging options.
--   
--   <a>$sel:httpStatus:DescribeLoggingOptionsResponse'</a>,
--   <a>describeLoggingOptionsResponse_httpStatus</a> - The response's http
--   status code.
newDescribeLoggingOptionsResponse :: Int -> DescribeLoggingOptionsResponse

-- | The current settings of the AWS IoT Events logging options.
describeLoggingOptionsResponse_loggingOptions :: Lens' DescribeLoggingOptionsResponse (Maybe LoggingOptions)

-- | The response's http status code.
describeLoggingOptionsResponse_httpStatus :: Lens' DescribeLoggingOptionsResponse Int
instance GHC.Generics.Generic Amazonka.IoTEvents.DescribeLoggingOptions.DescribeLoggingOptions
instance GHC.Show.Show Amazonka.IoTEvents.DescribeLoggingOptions.DescribeLoggingOptions
instance GHC.Read.Read Amazonka.IoTEvents.DescribeLoggingOptions.DescribeLoggingOptions
instance GHC.Classes.Eq Amazonka.IoTEvents.DescribeLoggingOptions.DescribeLoggingOptions
instance GHC.Generics.Generic Amazonka.IoTEvents.DescribeLoggingOptions.DescribeLoggingOptionsResponse
instance GHC.Show.Show Amazonka.IoTEvents.DescribeLoggingOptions.DescribeLoggingOptionsResponse
instance GHC.Read.Read Amazonka.IoTEvents.DescribeLoggingOptions.DescribeLoggingOptionsResponse
instance GHC.Classes.Eq Amazonka.IoTEvents.DescribeLoggingOptions.DescribeLoggingOptionsResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTEvents.DescribeLoggingOptions.DescribeLoggingOptions
instance Control.DeepSeq.NFData Amazonka.IoTEvents.DescribeLoggingOptions.DescribeLoggingOptionsResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.DescribeLoggingOptions.DescribeLoggingOptions
instance Control.DeepSeq.NFData Amazonka.IoTEvents.DescribeLoggingOptions.DescribeLoggingOptions
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTEvents.DescribeLoggingOptions.DescribeLoggingOptions
instance Amazonka.Data.Path.ToPath Amazonka.IoTEvents.DescribeLoggingOptions.DescribeLoggingOptions
instance Amazonka.Data.Query.ToQuery Amazonka.IoTEvents.DescribeLoggingOptions.DescribeLoggingOptions


-- | Describes an input.
module Amazonka.IoTEvents.DescribeInput

-- | <i>See:</i> <a>newDescribeInput</a> smart constructor.
data DescribeInput
DescribeInput' :: Text -> DescribeInput

-- | The name of the input.
[$sel:inputName:DescribeInput'] :: DescribeInput -> Text

-- | Create a value of <a>DescribeInput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputName:DescribeInput'</a>, <a>describeInput_inputName</a> -
--   The name of the input.
newDescribeInput :: Text -> DescribeInput

-- | The name of the input.
describeInput_inputName :: Lens' DescribeInput Text

-- | <i>See:</i> <a>newDescribeInputResponse</a> smart constructor.
data DescribeInputResponse
DescribeInputResponse' :: Maybe Input -> Int -> DescribeInputResponse

-- | Information about the input.
[$sel:input:DescribeInputResponse'] :: DescribeInputResponse -> Maybe Input

-- | The response's http status code.
[$sel:httpStatus:DescribeInputResponse'] :: DescribeInputResponse -> Int

-- | Create a value of <a>DescribeInputResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:input:DescribeInputResponse'</a>,
--   <a>describeInputResponse_input</a> - Information about the input.
--   
--   <a>$sel:httpStatus:DescribeInputResponse'</a>,
--   <a>describeInputResponse_httpStatus</a> - The response's http status
--   code.
newDescribeInputResponse :: Int -> DescribeInputResponse

-- | Information about the input.
describeInputResponse_input :: Lens' DescribeInputResponse (Maybe Input)

-- | The response's http status code.
describeInputResponse_httpStatus :: Lens' DescribeInputResponse Int
instance GHC.Generics.Generic Amazonka.IoTEvents.DescribeInput.DescribeInput
instance GHC.Show.Show Amazonka.IoTEvents.DescribeInput.DescribeInput
instance GHC.Read.Read Amazonka.IoTEvents.DescribeInput.DescribeInput
instance GHC.Classes.Eq Amazonka.IoTEvents.DescribeInput.DescribeInput
instance GHC.Generics.Generic Amazonka.IoTEvents.DescribeInput.DescribeInputResponse
instance GHC.Show.Show Amazonka.IoTEvents.DescribeInput.DescribeInputResponse
instance GHC.Read.Read Amazonka.IoTEvents.DescribeInput.DescribeInputResponse
instance GHC.Classes.Eq Amazonka.IoTEvents.DescribeInput.DescribeInputResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTEvents.DescribeInput.DescribeInput
instance Control.DeepSeq.NFData Amazonka.IoTEvents.DescribeInput.DescribeInputResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.DescribeInput.DescribeInput
instance Control.DeepSeq.NFData Amazonka.IoTEvents.DescribeInput.DescribeInput
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTEvents.DescribeInput.DescribeInput
instance Amazonka.Data.Path.ToPath Amazonka.IoTEvents.DescribeInput.DescribeInput
instance Amazonka.Data.Query.ToQuery Amazonka.IoTEvents.DescribeInput.DescribeInput


-- | Retrieves runtime information about a detector model analysis.
--   
--   After AWS IoT Events starts analyzing your detector model, you have up
--   to 24 hours to retrieve the analysis results.
module Amazonka.IoTEvents.DescribeDetectorModelAnalysis

-- | <i>See:</i> <a>newDescribeDetectorModelAnalysis</a> smart constructor.
data DescribeDetectorModelAnalysis
DescribeDetectorModelAnalysis' :: Text -> DescribeDetectorModelAnalysis

-- | The ID of the analysis result that you want to retrieve.
[$sel:analysisId:DescribeDetectorModelAnalysis'] :: DescribeDetectorModelAnalysis -> Text

-- | Create a value of <a>DescribeDetectorModelAnalysis</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:analysisId:DescribeDetectorModelAnalysis'</a>,
--   <a>describeDetectorModelAnalysis_analysisId</a> - The ID of the
--   analysis result that you want to retrieve.
newDescribeDetectorModelAnalysis :: Text -> DescribeDetectorModelAnalysis

-- | The ID of the analysis result that you want to retrieve.
describeDetectorModelAnalysis_analysisId :: Lens' DescribeDetectorModelAnalysis Text

-- | <i>See:</i> <a>newDescribeDetectorModelAnalysisResponse</a> smart
--   constructor.
data DescribeDetectorModelAnalysisResponse
DescribeDetectorModelAnalysisResponse' :: Maybe AnalysisStatus -> Int -> DescribeDetectorModelAnalysisResponse

-- | The status of the analysis activity. The status can be one of the
--   following values:
--   
--   <ul>
--   <li><tt>RUNNING</tt> - AWS IoT Events is analyzing your detector
--   model. This process can take several minutes to complete.</li>
--   <li><tt>COMPLETE</tt> - AWS IoT Events finished analyzing your
--   detector model.</li>
--   <li><tt>FAILED</tt> - AWS IoT Events couldn't analyze your detector
--   model. Try again later.</li>
--   </ul>
[$sel:status:DescribeDetectorModelAnalysisResponse'] :: DescribeDetectorModelAnalysisResponse -> Maybe AnalysisStatus

-- | The response's http status code.
[$sel:httpStatus:DescribeDetectorModelAnalysisResponse'] :: DescribeDetectorModelAnalysisResponse -> Int

-- | Create a value of <a>DescribeDetectorModelAnalysisResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:DescribeDetectorModelAnalysisResponse'</a>,
--   <a>describeDetectorModelAnalysisResponse_status</a> - The status of
--   the analysis activity. The status can be one of the following values:
--   
--   <ul>
--   <li><tt>RUNNING</tt> - AWS IoT Events is analyzing your detector
--   model. This process can take several minutes to complete.</li>
--   <li><tt>COMPLETE</tt> - AWS IoT Events finished analyzing your
--   detector model.</li>
--   <li><tt>FAILED</tt> - AWS IoT Events couldn't analyze your detector
--   model. Try again later.</li>
--   </ul>
--   
--   <a>$sel:httpStatus:DescribeDetectorModelAnalysisResponse'</a>,
--   <a>describeDetectorModelAnalysisResponse_httpStatus</a> - The
--   response's http status code.
newDescribeDetectorModelAnalysisResponse :: Int -> DescribeDetectorModelAnalysisResponse

-- | The status of the analysis activity. The status can be one of the
--   following values:
--   
--   <ul>
--   <li><tt>RUNNING</tt> - AWS IoT Events is analyzing your detector
--   model. This process can take several minutes to complete.</li>
--   <li><tt>COMPLETE</tt> - AWS IoT Events finished analyzing your
--   detector model.</li>
--   <li><tt>FAILED</tt> - AWS IoT Events couldn't analyze your detector
--   model. Try again later.</li>
--   </ul>
describeDetectorModelAnalysisResponse_status :: Lens' DescribeDetectorModelAnalysisResponse (Maybe AnalysisStatus)

-- | The response's http status code.
describeDetectorModelAnalysisResponse_httpStatus :: Lens' DescribeDetectorModelAnalysisResponse Int
instance GHC.Generics.Generic Amazonka.IoTEvents.DescribeDetectorModelAnalysis.DescribeDetectorModelAnalysis
instance GHC.Show.Show Amazonka.IoTEvents.DescribeDetectorModelAnalysis.DescribeDetectorModelAnalysis
instance GHC.Read.Read Amazonka.IoTEvents.DescribeDetectorModelAnalysis.DescribeDetectorModelAnalysis
instance GHC.Classes.Eq Amazonka.IoTEvents.DescribeDetectorModelAnalysis.DescribeDetectorModelAnalysis
instance GHC.Generics.Generic Amazonka.IoTEvents.DescribeDetectorModelAnalysis.DescribeDetectorModelAnalysisResponse
instance GHC.Show.Show Amazonka.IoTEvents.DescribeDetectorModelAnalysis.DescribeDetectorModelAnalysisResponse
instance GHC.Read.Read Amazonka.IoTEvents.DescribeDetectorModelAnalysis.DescribeDetectorModelAnalysisResponse
instance GHC.Classes.Eq Amazonka.IoTEvents.DescribeDetectorModelAnalysis.DescribeDetectorModelAnalysisResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTEvents.DescribeDetectorModelAnalysis.DescribeDetectorModelAnalysis
instance Control.DeepSeq.NFData Amazonka.IoTEvents.DescribeDetectorModelAnalysis.DescribeDetectorModelAnalysisResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.DescribeDetectorModelAnalysis.DescribeDetectorModelAnalysis
instance Control.DeepSeq.NFData Amazonka.IoTEvents.DescribeDetectorModelAnalysis.DescribeDetectorModelAnalysis
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTEvents.DescribeDetectorModelAnalysis.DescribeDetectorModelAnalysis
instance Amazonka.Data.Path.ToPath Amazonka.IoTEvents.DescribeDetectorModelAnalysis.DescribeDetectorModelAnalysis
instance Amazonka.Data.Query.ToQuery Amazonka.IoTEvents.DescribeDetectorModelAnalysis.DescribeDetectorModelAnalysis


-- | Describes a detector model. If the <tt>version</tt> parameter is not
--   specified, information about the latest version is returned.
module Amazonka.IoTEvents.DescribeDetectorModel

-- | <i>See:</i> <a>newDescribeDetectorModel</a> smart constructor.
data DescribeDetectorModel
DescribeDetectorModel' :: Maybe Text -> Text -> DescribeDetectorModel

-- | The version of the detector model.
[$sel:detectorModelVersion:DescribeDetectorModel'] :: DescribeDetectorModel -> Maybe Text

-- | The name of the detector model.
[$sel:detectorModelName:DescribeDetectorModel'] :: DescribeDetectorModel -> Text

-- | Create a value of <a>DescribeDetectorModel</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:detectorModelVersion:DescribeDetectorModel'</a>,
--   <a>describeDetectorModel_detectorModelVersion</a> - The version of the
--   detector model.
--   
--   <a>$sel:detectorModelName:DescribeDetectorModel'</a>,
--   <a>describeDetectorModel_detectorModelName</a> - The name of the
--   detector model.
newDescribeDetectorModel :: Text -> DescribeDetectorModel

-- | The version of the detector model.
describeDetectorModel_detectorModelVersion :: Lens' DescribeDetectorModel (Maybe Text)

-- | The name of the detector model.
describeDetectorModel_detectorModelName :: Lens' DescribeDetectorModel Text

-- | <i>See:</i> <a>newDescribeDetectorModelResponse</a> smart constructor.
data DescribeDetectorModelResponse
DescribeDetectorModelResponse' :: Maybe DetectorModel -> Int -> DescribeDetectorModelResponse

-- | Information about the detector model.
[$sel:detectorModel:DescribeDetectorModelResponse'] :: DescribeDetectorModelResponse -> Maybe DetectorModel

-- | The response's http status code.
[$sel:httpStatus:DescribeDetectorModelResponse'] :: DescribeDetectorModelResponse -> Int

-- | Create a value of <a>DescribeDetectorModelResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:detectorModel:DescribeDetectorModelResponse'</a>,
--   <a>describeDetectorModelResponse_detectorModel</a> - Information about
--   the detector model.
--   
--   <a>$sel:httpStatus:DescribeDetectorModelResponse'</a>,
--   <a>describeDetectorModelResponse_httpStatus</a> - The response's http
--   status code.
newDescribeDetectorModelResponse :: Int -> DescribeDetectorModelResponse

-- | Information about the detector model.
describeDetectorModelResponse_detectorModel :: Lens' DescribeDetectorModelResponse (Maybe DetectorModel)

-- | The response's http status code.
describeDetectorModelResponse_httpStatus :: Lens' DescribeDetectorModelResponse Int
instance GHC.Generics.Generic Amazonka.IoTEvents.DescribeDetectorModel.DescribeDetectorModel
instance GHC.Show.Show Amazonka.IoTEvents.DescribeDetectorModel.DescribeDetectorModel
instance GHC.Read.Read Amazonka.IoTEvents.DescribeDetectorModel.DescribeDetectorModel
instance GHC.Classes.Eq Amazonka.IoTEvents.DescribeDetectorModel.DescribeDetectorModel
instance GHC.Generics.Generic Amazonka.IoTEvents.DescribeDetectorModel.DescribeDetectorModelResponse
instance GHC.Show.Show Amazonka.IoTEvents.DescribeDetectorModel.DescribeDetectorModelResponse
instance GHC.Read.Read Amazonka.IoTEvents.DescribeDetectorModel.DescribeDetectorModelResponse
instance GHC.Classes.Eq Amazonka.IoTEvents.DescribeDetectorModel.DescribeDetectorModelResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTEvents.DescribeDetectorModel.DescribeDetectorModel
instance Control.DeepSeq.NFData Amazonka.IoTEvents.DescribeDetectorModel.DescribeDetectorModelResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.DescribeDetectorModel.DescribeDetectorModel
instance Control.DeepSeq.NFData Amazonka.IoTEvents.DescribeDetectorModel.DescribeDetectorModel
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTEvents.DescribeDetectorModel.DescribeDetectorModel
instance Amazonka.Data.Path.ToPath Amazonka.IoTEvents.DescribeDetectorModel.DescribeDetectorModel
instance Amazonka.Data.Query.ToQuery Amazonka.IoTEvents.DescribeDetectorModel.DescribeDetectorModel


-- | Retrieves information about an alarm model. If you don't specify a
--   value for the <tt>alarmModelVersion</tt> parameter, the latest version
--   is returned.
module Amazonka.IoTEvents.DescribeAlarmModel

-- | <i>See:</i> <a>newDescribeAlarmModel</a> smart constructor.
data DescribeAlarmModel
DescribeAlarmModel' :: Maybe Text -> Text -> DescribeAlarmModel

-- | The version of the alarm model.
[$sel:alarmModelVersion:DescribeAlarmModel'] :: DescribeAlarmModel -> Maybe Text

-- | The name of the alarm model.
[$sel:alarmModelName:DescribeAlarmModel'] :: DescribeAlarmModel -> Text

-- | Create a value of <a>DescribeAlarmModel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:alarmModelVersion:DescribeAlarmModel'</a>,
--   <a>describeAlarmModel_alarmModelVersion</a> - The version of the alarm
--   model.
--   
--   <a>$sel:alarmModelName:DescribeAlarmModel'</a>,
--   <a>describeAlarmModel_alarmModelName</a> - The name of the alarm
--   model.
newDescribeAlarmModel :: Text -> DescribeAlarmModel

-- | The version of the alarm model.
describeAlarmModel_alarmModelVersion :: Lens' DescribeAlarmModel (Maybe Text)

-- | The name of the alarm model.
describeAlarmModel_alarmModelName :: Lens' DescribeAlarmModel Text

-- | <i>See:</i> <a>newDescribeAlarmModelResponse</a> smart constructor.
data DescribeAlarmModelResponse
DescribeAlarmModelResponse' :: Maybe POSIX -> Maybe AlarmModelVersionStatus -> Maybe AlarmRule -> Maybe Text -> Maybe Natural -> Maybe AlarmNotification -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe AlarmEventActions -> Maybe AlarmCapabilities -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> DescribeAlarmModelResponse

-- | The time the alarm model was created, in the Unix epoch format.
[$sel:creationTime:DescribeAlarmModelResponse'] :: DescribeAlarmModelResponse -> Maybe POSIX

-- | The status of the alarm model. The status can be one of the following
--   values:
--   
--   <ul>
--   <li><tt>ACTIVE</tt> - The alarm model is active and it's ready to
--   evaluate data.</li>
--   <li><tt>ACTIVATING</tt> - AWS IoT Events is activating your alarm
--   model. Activating an alarm model can take up to a few minutes.</li>
--   <li><tt>INACTIVE</tt> - The alarm model is inactive, so it isn't ready
--   to evaluate data. Check your alarm model information and update the
--   alarm model.</li>
--   <li><tt>FAILED</tt> - You couldn't create or update the alarm model.
--   Check your alarm model information and try again.</li>
--   </ul>
[$sel:status:DescribeAlarmModelResponse'] :: DescribeAlarmModelResponse -> Maybe AlarmModelVersionStatus

-- | Defines when your alarm is invoked.
[$sel:alarmRule:DescribeAlarmModelResponse'] :: DescribeAlarmModelResponse -> Maybe AlarmRule

-- | The name of the alarm model.
[$sel:alarmModelName:DescribeAlarmModelResponse'] :: DescribeAlarmModelResponse -> Maybe Text

-- | A non-negative integer that reflects the severity level of the alarm.
[$sel:severity:DescribeAlarmModelResponse'] :: DescribeAlarmModelResponse -> Maybe Natural

-- | Contains information about one or more notification actions.
[$sel:alarmNotification:DescribeAlarmModelResponse'] :: DescribeAlarmModelResponse -> Maybe AlarmNotification

-- | An input attribute used as a key to create an alarm. AWS IoT Events
--   routes <a>inputs</a> associated with this key to the alarm.
[$sel:key:DescribeAlarmModelResponse'] :: DescribeAlarmModelResponse -> Maybe Text

-- | Contains information about the status of the alarm model.
[$sel:statusMessage:DescribeAlarmModelResponse'] :: DescribeAlarmModelResponse -> Maybe Text

-- | The description of the alarm model.
[$sel:alarmModelDescription:DescribeAlarmModelResponse'] :: DescribeAlarmModelResponse -> Maybe Text

-- | Contains information about one or more alarm actions.
[$sel:alarmEventActions:DescribeAlarmModelResponse'] :: DescribeAlarmModelResponse -> Maybe AlarmEventActions

-- | Contains the configuration information of alarm state changes.
[$sel:alarmCapabilities:DescribeAlarmModelResponse'] :: DescribeAlarmModelResponse -> Maybe AlarmCapabilities

-- | The time the alarm model was last updated, in the Unix epoch format.
[$sel:lastUpdateTime:DescribeAlarmModelResponse'] :: DescribeAlarmModelResponse -> Maybe POSIX

-- | The version of the alarm model.
[$sel:alarmModelVersion:DescribeAlarmModelResponse'] :: DescribeAlarmModelResponse -> Maybe Text

-- | The ARN of the alarm model. For more information, see <a>Amazon
--   Resource Names (ARNs)</a> in the <i>AWS General Reference</i>.
[$sel:alarmModelArn:DescribeAlarmModelResponse'] :: DescribeAlarmModelResponse -> Maybe Text

-- | The ARN of the IAM role that allows the alarm to perform actions and
--   access AWS resources. For more information, see <a>Amazon Resource
--   Names (ARNs)</a> in the <i>AWS General Reference</i>.
[$sel:roleArn:DescribeAlarmModelResponse'] :: DescribeAlarmModelResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeAlarmModelResponse'] :: DescribeAlarmModelResponse -> Int

-- | Create a value of <a>DescribeAlarmModelResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:DescribeAlarmModelResponse'</a>,
--   <a>describeAlarmModelResponse_creationTime</a> - The time the alarm
--   model was created, in the Unix epoch format.
--   
--   <a>$sel:status:DescribeAlarmModelResponse'</a>,
--   <a>describeAlarmModelResponse_status</a> - The status of the alarm
--   model. The status can be one of the following values:
--   
--   <ul>
--   <li><tt>ACTIVE</tt> - The alarm model is active and it's ready to
--   evaluate data.</li>
--   <li><tt>ACTIVATING</tt> - AWS IoT Events is activating your alarm
--   model. Activating an alarm model can take up to a few minutes.</li>
--   <li><tt>INACTIVE</tt> - The alarm model is inactive, so it isn't ready
--   to evaluate data. Check your alarm model information and update the
--   alarm model.</li>
--   <li><tt>FAILED</tt> - You couldn't create or update the alarm model.
--   Check your alarm model information and try again.</li>
--   </ul>
--   
--   <a>$sel:alarmRule:DescribeAlarmModelResponse'</a>,
--   <a>describeAlarmModelResponse_alarmRule</a> - Defines when your alarm
--   is invoked.
--   
--   <a>$sel:alarmModelName:DescribeAlarmModel'</a>,
--   <a>describeAlarmModelResponse_alarmModelName</a> - The name of the
--   alarm model.
--   
--   <a>$sel:severity:DescribeAlarmModelResponse'</a>,
--   <a>describeAlarmModelResponse_severity</a> - A non-negative integer
--   that reflects the severity level of the alarm.
--   
--   <a>$sel:alarmNotification:DescribeAlarmModelResponse'</a>,
--   <a>describeAlarmModelResponse_alarmNotification</a> - Contains
--   information about one or more notification actions.
--   
--   <a>$sel:key:DescribeAlarmModelResponse'</a>,
--   <a>describeAlarmModelResponse_key</a> - An input attribute used as a
--   key to create an alarm. AWS IoT Events routes <a>inputs</a> associated
--   with this key to the alarm.
--   
--   <a>$sel:statusMessage:DescribeAlarmModelResponse'</a>,
--   <a>describeAlarmModelResponse_statusMessage</a> - Contains information
--   about the status of the alarm model.
--   
--   <a>$sel:alarmModelDescription:DescribeAlarmModelResponse'</a>,
--   <a>describeAlarmModelResponse_alarmModelDescription</a> - The
--   description of the alarm model.
--   
--   <a>$sel:alarmEventActions:DescribeAlarmModelResponse'</a>,
--   <a>describeAlarmModelResponse_alarmEventActions</a> - Contains
--   information about one or more alarm actions.
--   
--   <a>$sel:alarmCapabilities:DescribeAlarmModelResponse'</a>,
--   <a>describeAlarmModelResponse_alarmCapabilities</a> - Contains the
--   configuration information of alarm state changes.
--   
--   <a>$sel:lastUpdateTime:DescribeAlarmModelResponse'</a>,
--   <a>describeAlarmModelResponse_lastUpdateTime</a> - The time the alarm
--   model was last updated, in the Unix epoch format.
--   
--   <a>$sel:alarmModelVersion:DescribeAlarmModel'</a>,
--   <a>describeAlarmModelResponse_alarmModelVersion</a> - The version of
--   the alarm model.
--   
--   <a>$sel:alarmModelArn:DescribeAlarmModelResponse'</a>,
--   <a>describeAlarmModelResponse_alarmModelArn</a> - The ARN of the alarm
--   model. For more information, see <a>Amazon Resource Names (ARNs)</a>
--   in the <i>AWS General Reference</i>.
--   
--   <a>$sel:roleArn:DescribeAlarmModelResponse'</a>,
--   <a>describeAlarmModelResponse_roleArn</a> - The ARN of the IAM role
--   that allows the alarm to perform actions and access AWS resources. For
--   more information, see <a>Amazon Resource Names (ARNs)</a> in the
--   <i>AWS General Reference</i>.
--   
--   <a>$sel:httpStatus:DescribeAlarmModelResponse'</a>,
--   <a>describeAlarmModelResponse_httpStatus</a> - The response's http
--   status code.
newDescribeAlarmModelResponse :: Int -> DescribeAlarmModelResponse

-- | The time the alarm model was created, in the Unix epoch format.
describeAlarmModelResponse_creationTime :: Lens' DescribeAlarmModelResponse (Maybe UTCTime)

-- | The status of the alarm model. The status can be one of the following
--   values:
--   
--   <ul>
--   <li><tt>ACTIVE</tt> - The alarm model is active and it's ready to
--   evaluate data.</li>
--   <li><tt>ACTIVATING</tt> - AWS IoT Events is activating your alarm
--   model. Activating an alarm model can take up to a few minutes.</li>
--   <li><tt>INACTIVE</tt> - The alarm model is inactive, so it isn't ready
--   to evaluate data. Check your alarm model information and update the
--   alarm model.</li>
--   <li><tt>FAILED</tt> - You couldn't create or update the alarm model.
--   Check your alarm model information and try again.</li>
--   </ul>
describeAlarmModelResponse_status :: Lens' DescribeAlarmModelResponse (Maybe AlarmModelVersionStatus)

-- | Defines when your alarm is invoked.
describeAlarmModelResponse_alarmRule :: Lens' DescribeAlarmModelResponse (Maybe AlarmRule)

-- | The name of the alarm model.
describeAlarmModelResponse_alarmModelName :: Lens' DescribeAlarmModelResponse (Maybe Text)

-- | A non-negative integer that reflects the severity level of the alarm.
describeAlarmModelResponse_severity :: Lens' DescribeAlarmModelResponse (Maybe Natural)

-- | Contains information about one or more notification actions.
describeAlarmModelResponse_alarmNotification :: Lens' DescribeAlarmModelResponse (Maybe AlarmNotification)

-- | An input attribute used as a key to create an alarm. AWS IoT Events
--   routes <a>inputs</a> associated with this key to the alarm.
describeAlarmModelResponse_key :: Lens' DescribeAlarmModelResponse (Maybe Text)

-- | Contains information about the status of the alarm model.
describeAlarmModelResponse_statusMessage :: Lens' DescribeAlarmModelResponse (Maybe Text)

-- | The description of the alarm model.
describeAlarmModelResponse_alarmModelDescription :: Lens' DescribeAlarmModelResponse (Maybe Text)

-- | Contains information about one or more alarm actions.
describeAlarmModelResponse_alarmEventActions :: Lens' DescribeAlarmModelResponse (Maybe AlarmEventActions)

-- | Contains the configuration information of alarm state changes.
describeAlarmModelResponse_alarmCapabilities :: Lens' DescribeAlarmModelResponse (Maybe AlarmCapabilities)

-- | The time the alarm model was last updated, in the Unix epoch format.
describeAlarmModelResponse_lastUpdateTime :: Lens' DescribeAlarmModelResponse (Maybe UTCTime)

-- | The version of the alarm model.
describeAlarmModelResponse_alarmModelVersion :: Lens' DescribeAlarmModelResponse (Maybe Text)

-- | The ARN of the alarm model. For more information, see <a>Amazon
--   Resource Names (ARNs)</a> in the <i>AWS General Reference</i>.
describeAlarmModelResponse_alarmModelArn :: Lens' DescribeAlarmModelResponse (Maybe Text)

-- | The ARN of the IAM role that allows the alarm to perform actions and
--   access AWS resources. For more information, see <a>Amazon Resource
--   Names (ARNs)</a> in the <i>AWS General Reference</i>.
describeAlarmModelResponse_roleArn :: Lens' DescribeAlarmModelResponse (Maybe Text)

-- | The response's http status code.
describeAlarmModelResponse_httpStatus :: Lens' DescribeAlarmModelResponse Int
instance GHC.Generics.Generic Amazonka.IoTEvents.DescribeAlarmModel.DescribeAlarmModel
instance GHC.Show.Show Amazonka.IoTEvents.DescribeAlarmModel.DescribeAlarmModel
instance GHC.Read.Read Amazonka.IoTEvents.DescribeAlarmModel.DescribeAlarmModel
instance GHC.Classes.Eq Amazonka.IoTEvents.DescribeAlarmModel.DescribeAlarmModel
instance GHC.Generics.Generic Amazonka.IoTEvents.DescribeAlarmModel.DescribeAlarmModelResponse
instance GHC.Show.Show Amazonka.IoTEvents.DescribeAlarmModel.DescribeAlarmModelResponse
instance GHC.Read.Read Amazonka.IoTEvents.DescribeAlarmModel.DescribeAlarmModelResponse
instance GHC.Classes.Eq Amazonka.IoTEvents.DescribeAlarmModel.DescribeAlarmModelResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTEvents.DescribeAlarmModel.DescribeAlarmModel
instance Control.DeepSeq.NFData Amazonka.IoTEvents.DescribeAlarmModel.DescribeAlarmModelResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.DescribeAlarmModel.DescribeAlarmModel
instance Control.DeepSeq.NFData Amazonka.IoTEvents.DescribeAlarmModel.DescribeAlarmModel
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTEvents.DescribeAlarmModel.DescribeAlarmModel
instance Amazonka.Data.Path.ToPath Amazonka.IoTEvents.DescribeAlarmModel.DescribeAlarmModel
instance Amazonka.Data.Query.ToQuery Amazonka.IoTEvents.DescribeAlarmModel.DescribeAlarmModel


-- | Deletes an input.
module Amazonka.IoTEvents.DeleteInput

-- | <i>See:</i> <a>newDeleteInput</a> smart constructor.
data DeleteInput
DeleteInput' :: Text -> DeleteInput

-- | The name of the input to delete.
[$sel:inputName:DeleteInput'] :: DeleteInput -> Text

-- | Create a value of <a>DeleteInput</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputName:DeleteInput'</a>, <a>deleteInput_inputName</a> - The
--   name of the input to delete.
newDeleteInput :: Text -> DeleteInput

-- | The name of the input to delete.
deleteInput_inputName :: Lens' DeleteInput Text

-- | <i>See:</i> <a>newDeleteInputResponse</a> smart constructor.
data DeleteInputResponse
DeleteInputResponse' :: Int -> DeleteInputResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteInputResponse'] :: DeleteInputResponse -> Int

-- | Create a value of <a>DeleteInputResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteInputResponse'</a>,
--   <a>deleteInputResponse_httpStatus</a> - The response's http status
--   code.
newDeleteInputResponse :: Int -> DeleteInputResponse

-- | The response's http status code.
deleteInputResponse_httpStatus :: Lens' DeleteInputResponse Int
instance GHC.Generics.Generic Amazonka.IoTEvents.DeleteInput.DeleteInput
instance GHC.Show.Show Amazonka.IoTEvents.DeleteInput.DeleteInput
instance GHC.Read.Read Amazonka.IoTEvents.DeleteInput.DeleteInput
instance GHC.Classes.Eq Amazonka.IoTEvents.DeleteInput.DeleteInput
instance GHC.Generics.Generic Amazonka.IoTEvents.DeleteInput.DeleteInputResponse
instance GHC.Show.Show Amazonka.IoTEvents.DeleteInput.DeleteInputResponse
instance GHC.Read.Read Amazonka.IoTEvents.DeleteInput.DeleteInputResponse
instance GHC.Classes.Eq Amazonka.IoTEvents.DeleteInput.DeleteInputResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTEvents.DeleteInput.DeleteInput
instance Control.DeepSeq.NFData Amazonka.IoTEvents.DeleteInput.DeleteInputResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.DeleteInput.DeleteInput
instance Control.DeepSeq.NFData Amazonka.IoTEvents.DeleteInput.DeleteInput
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTEvents.DeleteInput.DeleteInput
instance Amazonka.Data.Path.ToPath Amazonka.IoTEvents.DeleteInput.DeleteInput
instance Amazonka.Data.Query.ToQuery Amazonka.IoTEvents.DeleteInput.DeleteInput


-- | Deletes a detector model. Any active instances of the detector model
--   are also deleted.
module Amazonka.IoTEvents.DeleteDetectorModel

-- | <i>See:</i> <a>newDeleteDetectorModel</a> smart constructor.
data DeleteDetectorModel
DeleteDetectorModel' :: Text -> DeleteDetectorModel

-- | The name of the detector model to be deleted.
[$sel:detectorModelName:DeleteDetectorModel'] :: DeleteDetectorModel -> Text

-- | Create a value of <a>DeleteDetectorModel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:detectorModelName:DeleteDetectorModel'</a>,
--   <a>deleteDetectorModel_detectorModelName</a> - The name of the
--   detector model to be deleted.
newDeleteDetectorModel :: Text -> DeleteDetectorModel

-- | The name of the detector model to be deleted.
deleteDetectorModel_detectorModelName :: Lens' DeleteDetectorModel Text

-- | <i>See:</i> <a>newDeleteDetectorModelResponse</a> smart constructor.
data DeleteDetectorModelResponse
DeleteDetectorModelResponse' :: Int -> DeleteDetectorModelResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteDetectorModelResponse'] :: DeleteDetectorModelResponse -> Int

-- | Create a value of <a>DeleteDetectorModelResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteDetectorModelResponse'</a>,
--   <a>deleteDetectorModelResponse_httpStatus</a> - The response's http
--   status code.
newDeleteDetectorModelResponse :: Int -> DeleteDetectorModelResponse

-- | The response's http status code.
deleteDetectorModelResponse_httpStatus :: Lens' DeleteDetectorModelResponse Int
instance GHC.Generics.Generic Amazonka.IoTEvents.DeleteDetectorModel.DeleteDetectorModel
instance GHC.Show.Show Amazonka.IoTEvents.DeleteDetectorModel.DeleteDetectorModel
instance GHC.Read.Read Amazonka.IoTEvents.DeleteDetectorModel.DeleteDetectorModel
instance GHC.Classes.Eq Amazonka.IoTEvents.DeleteDetectorModel.DeleteDetectorModel
instance GHC.Generics.Generic Amazonka.IoTEvents.DeleteDetectorModel.DeleteDetectorModelResponse
instance GHC.Show.Show Amazonka.IoTEvents.DeleteDetectorModel.DeleteDetectorModelResponse
instance GHC.Read.Read Amazonka.IoTEvents.DeleteDetectorModel.DeleteDetectorModelResponse
instance GHC.Classes.Eq Amazonka.IoTEvents.DeleteDetectorModel.DeleteDetectorModelResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTEvents.DeleteDetectorModel.DeleteDetectorModel
instance Control.DeepSeq.NFData Amazonka.IoTEvents.DeleteDetectorModel.DeleteDetectorModelResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.DeleteDetectorModel.DeleteDetectorModel
instance Control.DeepSeq.NFData Amazonka.IoTEvents.DeleteDetectorModel.DeleteDetectorModel
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTEvents.DeleteDetectorModel.DeleteDetectorModel
instance Amazonka.Data.Path.ToPath Amazonka.IoTEvents.DeleteDetectorModel.DeleteDetectorModel
instance Amazonka.Data.Query.ToQuery Amazonka.IoTEvents.DeleteDetectorModel.DeleteDetectorModel


-- | Deletes an alarm model. Any alarm instances that were created based on
--   this alarm model are also deleted. This action can't be undone.
module Amazonka.IoTEvents.DeleteAlarmModel

-- | <i>See:</i> <a>newDeleteAlarmModel</a> smart constructor.
data DeleteAlarmModel
DeleteAlarmModel' :: Text -> DeleteAlarmModel

-- | The name of the alarm model.
[$sel:alarmModelName:DeleteAlarmModel'] :: DeleteAlarmModel -> Text

-- | Create a value of <a>DeleteAlarmModel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:alarmModelName:DeleteAlarmModel'</a>,
--   <a>deleteAlarmModel_alarmModelName</a> - The name of the alarm model.
newDeleteAlarmModel :: Text -> DeleteAlarmModel

-- | The name of the alarm model.
deleteAlarmModel_alarmModelName :: Lens' DeleteAlarmModel Text

-- | <i>See:</i> <a>newDeleteAlarmModelResponse</a> smart constructor.
data DeleteAlarmModelResponse
DeleteAlarmModelResponse' :: Int -> DeleteAlarmModelResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteAlarmModelResponse'] :: DeleteAlarmModelResponse -> Int

-- | Create a value of <a>DeleteAlarmModelResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteAlarmModelResponse'</a>,
--   <a>deleteAlarmModelResponse_httpStatus</a> - The response's http
--   status code.
newDeleteAlarmModelResponse :: Int -> DeleteAlarmModelResponse

-- | The response's http status code.
deleteAlarmModelResponse_httpStatus :: Lens' DeleteAlarmModelResponse Int
instance GHC.Generics.Generic Amazonka.IoTEvents.DeleteAlarmModel.DeleteAlarmModel
instance GHC.Show.Show Amazonka.IoTEvents.DeleteAlarmModel.DeleteAlarmModel
instance GHC.Read.Read Amazonka.IoTEvents.DeleteAlarmModel.DeleteAlarmModel
instance GHC.Classes.Eq Amazonka.IoTEvents.DeleteAlarmModel.DeleteAlarmModel
instance GHC.Generics.Generic Amazonka.IoTEvents.DeleteAlarmModel.DeleteAlarmModelResponse
instance GHC.Show.Show Amazonka.IoTEvents.DeleteAlarmModel.DeleteAlarmModelResponse
instance GHC.Read.Read Amazonka.IoTEvents.DeleteAlarmModel.DeleteAlarmModelResponse
instance GHC.Classes.Eq Amazonka.IoTEvents.DeleteAlarmModel.DeleteAlarmModelResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTEvents.DeleteAlarmModel.DeleteAlarmModel
instance Control.DeepSeq.NFData Amazonka.IoTEvents.DeleteAlarmModel.DeleteAlarmModelResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.DeleteAlarmModel.DeleteAlarmModel
instance Control.DeepSeq.NFData Amazonka.IoTEvents.DeleteAlarmModel.DeleteAlarmModel
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTEvents.DeleteAlarmModel.DeleteAlarmModel
instance Amazonka.Data.Path.ToPath Amazonka.IoTEvents.DeleteAlarmModel.DeleteAlarmModel
instance Amazonka.Data.Query.ToQuery Amazonka.IoTEvents.DeleteAlarmModel.DeleteAlarmModel


-- | Creates an input.
module Amazonka.IoTEvents.CreateInput

-- | <i>See:</i> <a>newCreateInput</a> smart constructor.
data CreateInput
CreateInput' :: Maybe Text -> Maybe [Tag] -> Text -> InputDefinition -> CreateInput

-- | A brief description of the input.
[$sel:inputDescription:CreateInput'] :: CreateInput -> Maybe Text

-- | Metadata that can be used to manage the input.
[$sel:tags:CreateInput'] :: CreateInput -> Maybe [Tag]

-- | The name you want to give to the input.
[$sel:inputName:CreateInput'] :: CreateInput -> Text

-- | The definition of the input.
[$sel:inputDefinition:CreateInput'] :: CreateInput -> InputDefinition

-- | Create a value of <a>CreateInput</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputDescription:CreateInput'</a>,
--   <a>createInput_inputDescription</a> - A brief description of the
--   input.
--   
--   <a>$sel:tags:CreateInput'</a>, <a>createInput_tags</a> - Metadata that
--   can be used to manage the input.
--   
--   <a>$sel:inputName:CreateInput'</a>, <a>createInput_inputName</a> - The
--   name you want to give to the input.
--   
--   <a>$sel:inputDefinition:CreateInput'</a>,
--   <a>createInput_inputDefinition</a> - The definition of the input.
newCreateInput :: Text -> InputDefinition -> CreateInput

-- | A brief description of the input.
createInput_inputDescription :: Lens' CreateInput (Maybe Text)

-- | Metadata that can be used to manage the input.
createInput_tags :: Lens' CreateInput (Maybe [Tag])

-- | The name you want to give to the input.
createInput_inputName :: Lens' CreateInput Text

-- | The definition of the input.
createInput_inputDefinition :: Lens' CreateInput InputDefinition

-- | <i>See:</i> <a>newCreateInputResponse</a> smart constructor.
data CreateInputResponse
CreateInputResponse' :: Maybe InputConfiguration -> Int -> CreateInputResponse

-- | Information about the configuration of the input.
[$sel:inputConfiguration:CreateInputResponse'] :: CreateInputResponse -> Maybe InputConfiguration

-- | The response's http status code.
[$sel:httpStatus:CreateInputResponse'] :: CreateInputResponse -> Int

-- | Create a value of <a>CreateInputResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputConfiguration:CreateInputResponse'</a>,
--   <a>createInputResponse_inputConfiguration</a> - Information about the
--   configuration of the input.
--   
--   <a>$sel:httpStatus:CreateInputResponse'</a>,
--   <a>createInputResponse_httpStatus</a> - The response's http status
--   code.
newCreateInputResponse :: Int -> CreateInputResponse

-- | Information about the configuration of the input.
createInputResponse_inputConfiguration :: Lens' CreateInputResponse (Maybe InputConfiguration)

-- | The response's http status code.
createInputResponse_httpStatus :: Lens' CreateInputResponse Int
instance GHC.Generics.Generic Amazonka.IoTEvents.CreateInput.CreateInput
instance GHC.Show.Show Amazonka.IoTEvents.CreateInput.CreateInput
instance GHC.Read.Read Amazonka.IoTEvents.CreateInput.CreateInput
instance GHC.Classes.Eq Amazonka.IoTEvents.CreateInput.CreateInput
instance GHC.Generics.Generic Amazonka.IoTEvents.CreateInput.CreateInputResponse
instance GHC.Show.Show Amazonka.IoTEvents.CreateInput.CreateInputResponse
instance GHC.Read.Read Amazonka.IoTEvents.CreateInput.CreateInputResponse
instance GHC.Classes.Eq Amazonka.IoTEvents.CreateInput.CreateInputResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTEvents.CreateInput.CreateInput
instance Control.DeepSeq.NFData Amazonka.IoTEvents.CreateInput.CreateInputResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.CreateInput.CreateInput
instance Control.DeepSeq.NFData Amazonka.IoTEvents.CreateInput.CreateInput
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTEvents.CreateInput.CreateInput
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEvents.CreateInput.CreateInput
instance Amazonka.Data.Path.ToPath Amazonka.IoTEvents.CreateInput.CreateInput
instance Amazonka.Data.Query.ToQuery Amazonka.IoTEvents.CreateInput.CreateInput


-- | Creates a detector model.
module Amazonka.IoTEvents.CreateDetectorModel

-- | <i>See:</i> <a>newCreateDetectorModel</a> smart constructor.
data CreateDetectorModel
CreateDetectorModel' :: Maybe Text -> Maybe Text -> Maybe EvaluationMethod -> Maybe [Tag] -> Text -> DetectorModelDefinition -> Text -> CreateDetectorModel

-- | A brief description of the detector model.
[$sel:detectorModelDescription:CreateDetectorModel'] :: CreateDetectorModel -> Maybe Text

-- | The input attribute key used to identify a device or system to create
--   a detector (an instance of the detector model) and then to route each
--   input received to the appropriate detector (instance). This parameter
--   uses a JSON-path expression in the message payload of each input to
--   specify the attribute-value pair that is used to identify the device
--   associated with the input.
[$sel:key:CreateDetectorModel'] :: CreateDetectorModel -> Maybe Text

-- | Information about the order in which events are evaluated and how
--   actions are executed.
[$sel:evaluationMethod:CreateDetectorModel'] :: CreateDetectorModel -> Maybe EvaluationMethod

-- | Metadata that can be used to manage the detector model.
[$sel:tags:CreateDetectorModel'] :: CreateDetectorModel -> Maybe [Tag]

-- | The name of the detector model.
[$sel:detectorModelName:CreateDetectorModel'] :: CreateDetectorModel -> Text

-- | Information that defines how the detectors operate.
[$sel:detectorModelDefinition:CreateDetectorModel'] :: CreateDetectorModel -> DetectorModelDefinition

-- | The ARN of the role that grants permission to AWS IoT Events to
--   perform its operations.
[$sel:roleArn:CreateDetectorModel'] :: CreateDetectorModel -> Text

-- | Create a value of <a>CreateDetectorModel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:detectorModelDescription:CreateDetectorModel'</a>,
--   <a>createDetectorModel_detectorModelDescription</a> - A brief
--   description of the detector model.
--   
--   <a>$sel:key:CreateDetectorModel'</a>, <a>createDetectorModel_key</a> -
--   The input attribute key used to identify a device or system to create
--   a detector (an instance of the detector model) and then to route each
--   input received to the appropriate detector (instance). This parameter
--   uses a JSON-path expression in the message payload of each input to
--   specify the attribute-value pair that is used to identify the device
--   associated with the input.
--   
--   <a>$sel:evaluationMethod:CreateDetectorModel'</a>,
--   <a>createDetectorModel_evaluationMethod</a> - Information about the
--   order in which events are evaluated and how actions are executed.
--   
--   <a>$sel:tags:CreateDetectorModel'</a>, <a>createDetectorModel_tags</a>
--   - Metadata that can be used to manage the detector model.
--   
--   <a>$sel:detectorModelName:CreateDetectorModel'</a>,
--   <a>createDetectorModel_detectorModelName</a> - The name of the
--   detector model.
--   
--   <a>$sel:detectorModelDefinition:CreateDetectorModel'</a>,
--   <a>createDetectorModel_detectorModelDefinition</a> - Information that
--   defines how the detectors operate.
--   
--   <a>$sel:roleArn:CreateDetectorModel'</a>,
--   <a>createDetectorModel_roleArn</a> - The ARN of the role that grants
--   permission to AWS IoT Events to perform its operations.
newCreateDetectorModel :: Text -> DetectorModelDefinition -> Text -> CreateDetectorModel

-- | A brief description of the detector model.
createDetectorModel_detectorModelDescription :: Lens' CreateDetectorModel (Maybe Text)

-- | The input attribute key used to identify a device or system to create
--   a detector (an instance of the detector model) and then to route each
--   input received to the appropriate detector (instance). This parameter
--   uses a JSON-path expression in the message payload of each input to
--   specify the attribute-value pair that is used to identify the device
--   associated with the input.
createDetectorModel_key :: Lens' CreateDetectorModel (Maybe Text)

-- | Information about the order in which events are evaluated and how
--   actions are executed.
createDetectorModel_evaluationMethod :: Lens' CreateDetectorModel (Maybe EvaluationMethod)

-- | Metadata that can be used to manage the detector model.
createDetectorModel_tags :: Lens' CreateDetectorModel (Maybe [Tag])

-- | The name of the detector model.
createDetectorModel_detectorModelName :: Lens' CreateDetectorModel Text

-- | Information that defines how the detectors operate.
createDetectorModel_detectorModelDefinition :: Lens' CreateDetectorModel DetectorModelDefinition

-- | The ARN of the role that grants permission to AWS IoT Events to
--   perform its operations.
createDetectorModel_roleArn :: Lens' CreateDetectorModel Text

-- | <i>See:</i> <a>newCreateDetectorModelResponse</a> smart constructor.
data CreateDetectorModelResponse
CreateDetectorModelResponse' :: Maybe DetectorModelConfiguration -> Int -> CreateDetectorModelResponse

-- | Information about how the detector model is configured.
[$sel:detectorModelConfiguration:CreateDetectorModelResponse'] :: CreateDetectorModelResponse -> Maybe DetectorModelConfiguration

-- | The response's http status code.
[$sel:httpStatus:CreateDetectorModelResponse'] :: CreateDetectorModelResponse -> Int

-- | Create a value of <a>CreateDetectorModelResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:detectorModelConfiguration:CreateDetectorModelResponse'</a>,
--   <a>createDetectorModelResponse_detectorModelConfiguration</a> -
--   Information about how the detector model is configured.
--   
--   <a>$sel:httpStatus:CreateDetectorModelResponse'</a>,
--   <a>createDetectorModelResponse_httpStatus</a> - The response's http
--   status code.
newCreateDetectorModelResponse :: Int -> CreateDetectorModelResponse

-- | Information about how the detector model is configured.
createDetectorModelResponse_detectorModelConfiguration :: Lens' CreateDetectorModelResponse (Maybe DetectorModelConfiguration)

-- | The response's http status code.
createDetectorModelResponse_httpStatus :: Lens' CreateDetectorModelResponse Int
instance GHC.Generics.Generic Amazonka.IoTEvents.CreateDetectorModel.CreateDetectorModel
instance GHC.Show.Show Amazonka.IoTEvents.CreateDetectorModel.CreateDetectorModel
instance GHC.Read.Read Amazonka.IoTEvents.CreateDetectorModel.CreateDetectorModel
instance GHC.Classes.Eq Amazonka.IoTEvents.CreateDetectorModel.CreateDetectorModel
instance GHC.Generics.Generic Amazonka.IoTEvents.CreateDetectorModel.CreateDetectorModelResponse
instance GHC.Show.Show Amazonka.IoTEvents.CreateDetectorModel.CreateDetectorModelResponse
instance GHC.Read.Read Amazonka.IoTEvents.CreateDetectorModel.CreateDetectorModelResponse
instance GHC.Classes.Eq Amazonka.IoTEvents.CreateDetectorModel.CreateDetectorModelResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTEvents.CreateDetectorModel.CreateDetectorModel
instance Control.DeepSeq.NFData Amazonka.IoTEvents.CreateDetectorModel.CreateDetectorModelResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.CreateDetectorModel.CreateDetectorModel
instance Control.DeepSeq.NFData Amazonka.IoTEvents.CreateDetectorModel.CreateDetectorModel
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTEvents.CreateDetectorModel.CreateDetectorModel
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEvents.CreateDetectorModel.CreateDetectorModel
instance Amazonka.Data.Path.ToPath Amazonka.IoTEvents.CreateDetectorModel.CreateDetectorModel
instance Amazonka.Data.Query.ToQuery Amazonka.IoTEvents.CreateDetectorModel.CreateDetectorModel


-- | Creates an alarm model to monitor an AWS IoT Events input attribute.
--   You can use the alarm to get notified when the value is outside a
--   specified range. For more information, see <a>Create an alarm
--   model</a> in the <i>AWS IoT Events Developer Guide</i>.
module Amazonka.IoTEvents.CreateAlarmModel

-- | <i>See:</i> <a>newCreateAlarmModel</a> smart constructor.
data CreateAlarmModel
CreateAlarmModel' :: Maybe Natural -> Maybe AlarmNotification -> Maybe Text -> Maybe Text -> Maybe AlarmEventActions -> Maybe AlarmCapabilities -> Maybe [Tag] -> Text -> Text -> AlarmRule -> CreateAlarmModel

-- | A non-negative integer that reflects the severity level of the alarm.
[$sel:severity:CreateAlarmModel'] :: CreateAlarmModel -> Maybe Natural

-- | Contains information about one or more notification actions.
[$sel:alarmNotification:CreateAlarmModel'] :: CreateAlarmModel -> Maybe AlarmNotification

-- | An input attribute used as a key to create an alarm. AWS IoT Events
--   routes <a>inputs</a> associated with this key to the alarm.
[$sel:key:CreateAlarmModel'] :: CreateAlarmModel -> Maybe Text

-- | A description that tells you what the alarm model detects.
[$sel:alarmModelDescription:CreateAlarmModel'] :: CreateAlarmModel -> Maybe Text

-- | Contains information about one or more alarm actions.
[$sel:alarmEventActions:CreateAlarmModel'] :: CreateAlarmModel -> Maybe AlarmEventActions

-- | Contains the configuration information of alarm state changes.
[$sel:alarmCapabilities:CreateAlarmModel'] :: CreateAlarmModel -> Maybe AlarmCapabilities

-- | A list of key-value pairs that contain metadata for the alarm model.
--   The tags help you manage the alarm model. For more information, see
--   <a>Tagging your AWS IoT Events resources</a> in the <i>AWS IoT Events
--   Developer Guide</i>.
--   
--   You can create up to 50 tags for one alarm model.
[$sel:tags:CreateAlarmModel'] :: CreateAlarmModel -> Maybe [Tag]

-- | A unique name that helps you identify the alarm model. You can't
--   change this name after you create the alarm model.
[$sel:alarmModelName:CreateAlarmModel'] :: CreateAlarmModel -> Text

-- | The ARN of the IAM role that allows the alarm to perform actions and
--   access AWS resources. For more information, see <a>Amazon Resource
--   Names (ARNs)</a> in the <i>AWS General Reference</i>.
[$sel:roleArn:CreateAlarmModel'] :: CreateAlarmModel -> Text

-- | Defines when your alarm is invoked.
[$sel:alarmRule:CreateAlarmModel'] :: CreateAlarmModel -> AlarmRule

-- | Create a value of <a>CreateAlarmModel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:severity:CreateAlarmModel'</a>,
--   <a>createAlarmModel_severity</a> - A non-negative integer that
--   reflects the severity level of the alarm.
--   
--   <a>$sel:alarmNotification:CreateAlarmModel'</a>,
--   <a>createAlarmModel_alarmNotification</a> - Contains information about
--   one or more notification actions.
--   
--   <a>$sel:key:CreateAlarmModel'</a>, <a>createAlarmModel_key</a> - An
--   input attribute used as a key to create an alarm. AWS IoT Events
--   routes <a>inputs</a> associated with this key to the alarm.
--   
--   <a>$sel:alarmModelDescription:CreateAlarmModel'</a>,
--   <a>createAlarmModel_alarmModelDescription</a> - A description that
--   tells you what the alarm model detects.
--   
--   <a>$sel:alarmEventActions:CreateAlarmModel'</a>,
--   <a>createAlarmModel_alarmEventActions</a> - Contains information about
--   one or more alarm actions.
--   
--   <a>$sel:alarmCapabilities:CreateAlarmModel'</a>,
--   <a>createAlarmModel_alarmCapabilities</a> - Contains the configuration
--   information of alarm state changes.
--   
--   <a>$sel:tags:CreateAlarmModel'</a>, <a>createAlarmModel_tags</a> - A
--   list of key-value pairs that contain metadata for the alarm model. The
--   tags help you manage the alarm model. For more information, see
--   <a>Tagging your AWS IoT Events resources</a> in the <i>AWS IoT Events
--   Developer Guide</i>.
--   
--   You can create up to 50 tags for one alarm model.
--   
--   <a>$sel:alarmModelName:CreateAlarmModel'</a>,
--   <a>createAlarmModel_alarmModelName</a> - A unique name that helps you
--   identify the alarm model. You can't change this name after you create
--   the alarm model.
--   
--   <a>$sel:roleArn:CreateAlarmModel'</a>, <a>createAlarmModel_roleArn</a>
--   - The ARN of the IAM role that allows the alarm to perform actions and
--   access AWS resources. For more information, see <a>Amazon Resource
--   Names (ARNs)</a> in the <i>AWS General Reference</i>.
--   
--   <a>$sel:alarmRule:CreateAlarmModel'</a>,
--   <a>createAlarmModel_alarmRule</a> - Defines when your alarm is
--   invoked.
newCreateAlarmModel :: Text -> Text -> AlarmRule -> CreateAlarmModel

-- | A non-negative integer that reflects the severity level of the alarm.
createAlarmModel_severity :: Lens' CreateAlarmModel (Maybe Natural)

-- | Contains information about one or more notification actions.
createAlarmModel_alarmNotification :: Lens' CreateAlarmModel (Maybe AlarmNotification)

-- | An input attribute used as a key to create an alarm. AWS IoT Events
--   routes <a>inputs</a> associated with this key to the alarm.
createAlarmModel_key :: Lens' CreateAlarmModel (Maybe Text)

-- | A description that tells you what the alarm model detects.
createAlarmModel_alarmModelDescription :: Lens' CreateAlarmModel (Maybe Text)

-- | Contains information about one or more alarm actions.
createAlarmModel_alarmEventActions :: Lens' CreateAlarmModel (Maybe AlarmEventActions)

-- | Contains the configuration information of alarm state changes.
createAlarmModel_alarmCapabilities :: Lens' CreateAlarmModel (Maybe AlarmCapabilities)

-- | A list of key-value pairs that contain metadata for the alarm model.
--   The tags help you manage the alarm model. For more information, see
--   <a>Tagging your AWS IoT Events resources</a> in the <i>AWS IoT Events
--   Developer Guide</i>.
--   
--   You can create up to 50 tags for one alarm model.
createAlarmModel_tags :: Lens' CreateAlarmModel (Maybe [Tag])

-- | A unique name that helps you identify the alarm model. You can't
--   change this name after you create the alarm model.
createAlarmModel_alarmModelName :: Lens' CreateAlarmModel Text

-- | The ARN of the IAM role that allows the alarm to perform actions and
--   access AWS resources. For more information, see <a>Amazon Resource
--   Names (ARNs)</a> in the <i>AWS General Reference</i>.
createAlarmModel_roleArn :: Lens' CreateAlarmModel Text

-- | Defines when your alarm is invoked.
createAlarmModel_alarmRule :: Lens' CreateAlarmModel AlarmRule

-- | <i>See:</i> <a>newCreateAlarmModelResponse</a> smart constructor.
data CreateAlarmModelResponse
CreateAlarmModelResponse' :: Maybe POSIX -> Maybe AlarmModelVersionStatus -> Maybe POSIX -> Maybe Text -> Maybe Text -> Int -> CreateAlarmModelResponse

-- | The time the alarm model was created, in the Unix epoch format.
[$sel:creationTime:CreateAlarmModelResponse'] :: CreateAlarmModelResponse -> Maybe POSIX

-- | The status of the alarm model. The status can be one of the following
--   values:
--   
--   <ul>
--   <li><tt>ACTIVE</tt> - The alarm model is active and it's ready to
--   evaluate data.</li>
--   <li><tt>ACTIVATING</tt> - AWS IoT Events is activating your alarm
--   model. Activating an alarm model can take up to a few minutes.</li>
--   <li><tt>INACTIVE</tt> - The alarm model is inactive, so it isn't ready
--   to evaluate data. Check your alarm model information and update the
--   alarm model.</li>
--   <li><tt>FAILED</tt> - You couldn't create or update the alarm model.
--   Check your alarm model information and try again.</li>
--   </ul>
[$sel:status:CreateAlarmModelResponse'] :: CreateAlarmModelResponse -> Maybe AlarmModelVersionStatus

-- | The time the alarm model was last updated, in the Unix epoch format.
[$sel:lastUpdateTime:CreateAlarmModelResponse'] :: CreateAlarmModelResponse -> Maybe POSIX

-- | The version of the alarm model.
[$sel:alarmModelVersion:CreateAlarmModelResponse'] :: CreateAlarmModelResponse -> Maybe Text

-- | The ARN of the alarm model. For more information, see <a>Amazon
--   Resource Names (ARNs)</a> in the <i>AWS General Reference</i>.
[$sel:alarmModelArn:CreateAlarmModelResponse'] :: CreateAlarmModelResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateAlarmModelResponse'] :: CreateAlarmModelResponse -> Int

-- | Create a value of <a>CreateAlarmModelResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:CreateAlarmModelResponse'</a>,
--   <a>createAlarmModelResponse_creationTime</a> - The time the alarm
--   model was created, in the Unix epoch format.
--   
--   <a>$sel:status:CreateAlarmModelResponse'</a>,
--   <a>createAlarmModelResponse_status</a> - The status of the alarm
--   model. The status can be one of the following values:
--   
--   <ul>
--   <li><tt>ACTIVE</tt> - The alarm model is active and it's ready to
--   evaluate data.</li>
--   <li><tt>ACTIVATING</tt> - AWS IoT Events is activating your alarm
--   model. Activating an alarm model can take up to a few minutes.</li>
--   <li><tt>INACTIVE</tt> - The alarm model is inactive, so it isn't ready
--   to evaluate data. Check your alarm model information and update the
--   alarm model.</li>
--   <li><tt>FAILED</tt> - You couldn't create or update the alarm model.
--   Check your alarm model information and try again.</li>
--   </ul>
--   
--   <a>$sel:lastUpdateTime:CreateAlarmModelResponse'</a>,
--   <a>createAlarmModelResponse_lastUpdateTime</a> - The time the alarm
--   model was last updated, in the Unix epoch format.
--   
--   <a>$sel:alarmModelVersion:CreateAlarmModelResponse'</a>,
--   <a>createAlarmModelResponse_alarmModelVersion</a> - The version of the
--   alarm model.
--   
--   <a>$sel:alarmModelArn:CreateAlarmModelResponse'</a>,
--   <a>createAlarmModelResponse_alarmModelArn</a> - The ARN of the alarm
--   model. For more information, see <a>Amazon Resource Names (ARNs)</a>
--   in the <i>AWS General Reference</i>.
--   
--   <a>$sel:httpStatus:CreateAlarmModelResponse'</a>,
--   <a>createAlarmModelResponse_httpStatus</a> - The response's http
--   status code.
newCreateAlarmModelResponse :: Int -> CreateAlarmModelResponse

-- | The time the alarm model was created, in the Unix epoch format.
createAlarmModelResponse_creationTime :: Lens' CreateAlarmModelResponse (Maybe UTCTime)

-- | The status of the alarm model. The status can be one of the following
--   values:
--   
--   <ul>
--   <li><tt>ACTIVE</tt> - The alarm model is active and it's ready to
--   evaluate data.</li>
--   <li><tt>ACTIVATING</tt> - AWS IoT Events is activating your alarm
--   model. Activating an alarm model can take up to a few minutes.</li>
--   <li><tt>INACTIVE</tt> - The alarm model is inactive, so it isn't ready
--   to evaluate data. Check your alarm model information and update the
--   alarm model.</li>
--   <li><tt>FAILED</tt> - You couldn't create or update the alarm model.
--   Check your alarm model information and try again.</li>
--   </ul>
createAlarmModelResponse_status :: Lens' CreateAlarmModelResponse (Maybe AlarmModelVersionStatus)

-- | The time the alarm model was last updated, in the Unix epoch format.
createAlarmModelResponse_lastUpdateTime :: Lens' CreateAlarmModelResponse (Maybe UTCTime)

-- | The version of the alarm model.
createAlarmModelResponse_alarmModelVersion :: Lens' CreateAlarmModelResponse (Maybe Text)

-- | The ARN of the alarm model. For more information, see <a>Amazon
--   Resource Names (ARNs)</a> in the <i>AWS General Reference</i>.
createAlarmModelResponse_alarmModelArn :: Lens' CreateAlarmModelResponse (Maybe Text)

-- | The response's http status code.
createAlarmModelResponse_httpStatus :: Lens' CreateAlarmModelResponse Int
instance GHC.Generics.Generic Amazonka.IoTEvents.CreateAlarmModel.CreateAlarmModel
instance GHC.Show.Show Amazonka.IoTEvents.CreateAlarmModel.CreateAlarmModel
instance GHC.Read.Read Amazonka.IoTEvents.CreateAlarmModel.CreateAlarmModel
instance GHC.Classes.Eq Amazonka.IoTEvents.CreateAlarmModel.CreateAlarmModel
instance GHC.Generics.Generic Amazonka.IoTEvents.CreateAlarmModel.CreateAlarmModelResponse
instance GHC.Show.Show Amazonka.IoTEvents.CreateAlarmModel.CreateAlarmModelResponse
instance GHC.Read.Read Amazonka.IoTEvents.CreateAlarmModel.CreateAlarmModelResponse
instance GHC.Classes.Eq Amazonka.IoTEvents.CreateAlarmModel.CreateAlarmModelResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTEvents.CreateAlarmModel.CreateAlarmModel
instance Control.DeepSeq.NFData Amazonka.IoTEvents.CreateAlarmModel.CreateAlarmModelResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.CreateAlarmModel.CreateAlarmModel
instance Control.DeepSeq.NFData Amazonka.IoTEvents.CreateAlarmModel.CreateAlarmModel
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTEvents.CreateAlarmModel.CreateAlarmModel
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEvents.CreateAlarmModel.CreateAlarmModel
instance Amazonka.Data.Path.ToPath Amazonka.IoTEvents.CreateAlarmModel.CreateAlarmModel
instance Amazonka.Data.Query.ToQuery Amazonka.IoTEvents.CreateAlarmModel.CreateAlarmModel


-- | Removes the given tags (metadata) from the resource.
module Amazonka.IoTEvents.UntagResource

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | The ARN of the resource.
[$sel:resourceArn:UntagResource'] :: UntagResource -> Text

-- | A list of the keys of the tags to be removed from the resource.
[$sel:tagKeys:UntagResource'] :: UntagResource -> [Text]

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The ARN of the resource.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - A
--   list of the keys of the tags to be removed from the resource.
newUntagResource :: Text -> UntagResource

-- | The ARN of the resource.
untagResource_resourceArn :: Lens' UntagResource Text

-- | A list of the keys of the tags to be removed from the resource.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:UntagResourceResponse'] :: UntagResourceResponse -> Int

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int
instance GHC.Generics.Generic Amazonka.IoTEvents.UntagResource.UntagResource
instance GHC.Show.Show Amazonka.IoTEvents.UntagResource.UntagResource
instance GHC.Read.Read Amazonka.IoTEvents.UntagResource.UntagResource
instance GHC.Classes.Eq Amazonka.IoTEvents.UntagResource.UntagResource
instance GHC.Generics.Generic Amazonka.IoTEvents.UntagResource.UntagResourceResponse
instance GHC.Show.Show Amazonka.IoTEvents.UntagResource.UntagResourceResponse
instance GHC.Read.Read Amazonka.IoTEvents.UntagResource.UntagResourceResponse
instance GHC.Classes.Eq Amazonka.IoTEvents.UntagResource.UntagResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTEvents.UntagResource.UntagResource
instance Control.DeepSeq.NFData Amazonka.IoTEvents.UntagResource.UntagResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.UntagResource.UntagResource
instance Control.DeepSeq.NFData Amazonka.IoTEvents.UntagResource.UntagResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTEvents.UntagResource.UntagResource
instance Amazonka.Data.Path.ToPath Amazonka.IoTEvents.UntagResource.UntagResource
instance Amazonka.Data.Query.ToQuery Amazonka.IoTEvents.UntagResource.UntagResource


-- | Updates an alarm model. Any alarms that were created based on the
--   previous version are deleted and then created again as new data
--   arrives.
module Amazonka.IoTEvents.UpdateAlarmModel

-- | <i>See:</i> <a>newUpdateAlarmModel</a> smart constructor.
data UpdateAlarmModel
UpdateAlarmModel' :: Maybe Natural -> Maybe AlarmNotification -> Maybe Text -> Maybe AlarmEventActions -> Maybe AlarmCapabilities -> Text -> Text -> AlarmRule -> UpdateAlarmModel

-- | A non-negative integer that reflects the severity level of the alarm.
[$sel:severity:UpdateAlarmModel'] :: UpdateAlarmModel -> Maybe Natural

-- | Contains information about one or more notification actions.
[$sel:alarmNotification:UpdateAlarmModel'] :: UpdateAlarmModel -> Maybe AlarmNotification

-- | The description of the alarm model.
[$sel:alarmModelDescription:UpdateAlarmModel'] :: UpdateAlarmModel -> Maybe Text

-- | Contains information about one or more alarm actions.
[$sel:alarmEventActions:UpdateAlarmModel'] :: UpdateAlarmModel -> Maybe AlarmEventActions

-- | Contains the configuration information of alarm state changes.
[$sel:alarmCapabilities:UpdateAlarmModel'] :: UpdateAlarmModel -> Maybe AlarmCapabilities

-- | The name of the alarm model.
[$sel:alarmModelName:UpdateAlarmModel'] :: UpdateAlarmModel -> Text

-- | The ARN of the IAM role that allows the alarm to perform actions and
--   access AWS resources. For more information, see <a>Amazon Resource
--   Names (ARNs)</a> in the <i>AWS General Reference</i>.
[$sel:roleArn:UpdateAlarmModel'] :: UpdateAlarmModel -> Text

-- | Defines when your alarm is invoked.
[$sel:alarmRule:UpdateAlarmModel'] :: UpdateAlarmModel -> AlarmRule

-- | Create a value of <a>UpdateAlarmModel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:severity:UpdateAlarmModel'</a>,
--   <a>updateAlarmModel_severity</a> - A non-negative integer that
--   reflects the severity level of the alarm.
--   
--   <a>$sel:alarmNotification:UpdateAlarmModel'</a>,
--   <a>updateAlarmModel_alarmNotification</a> - Contains information about
--   one or more notification actions.
--   
--   <a>$sel:alarmModelDescription:UpdateAlarmModel'</a>,
--   <a>updateAlarmModel_alarmModelDescription</a> - The description of the
--   alarm model.
--   
--   <a>$sel:alarmEventActions:UpdateAlarmModel'</a>,
--   <a>updateAlarmModel_alarmEventActions</a> - Contains information about
--   one or more alarm actions.
--   
--   <a>$sel:alarmCapabilities:UpdateAlarmModel'</a>,
--   <a>updateAlarmModel_alarmCapabilities</a> - Contains the configuration
--   information of alarm state changes.
--   
--   <a>$sel:alarmModelName:UpdateAlarmModel'</a>,
--   <a>updateAlarmModel_alarmModelName</a> - The name of the alarm model.
--   
--   <a>$sel:roleArn:UpdateAlarmModel'</a>, <a>updateAlarmModel_roleArn</a>
--   - The ARN of the IAM role that allows the alarm to perform actions and
--   access AWS resources. For more information, see <a>Amazon Resource
--   Names (ARNs)</a> in the <i>AWS General Reference</i>.
--   
--   <a>$sel:alarmRule:UpdateAlarmModel'</a>,
--   <a>updateAlarmModel_alarmRule</a> - Defines when your alarm is
--   invoked.
newUpdateAlarmModel :: Text -> Text -> AlarmRule -> UpdateAlarmModel

-- | A non-negative integer that reflects the severity level of the alarm.
updateAlarmModel_severity :: Lens' UpdateAlarmModel (Maybe Natural)

-- | Contains information about one or more notification actions.
updateAlarmModel_alarmNotification :: Lens' UpdateAlarmModel (Maybe AlarmNotification)

-- | The description of the alarm model.
updateAlarmModel_alarmModelDescription :: Lens' UpdateAlarmModel (Maybe Text)

-- | Contains information about one or more alarm actions.
updateAlarmModel_alarmEventActions :: Lens' UpdateAlarmModel (Maybe AlarmEventActions)

-- | Contains the configuration information of alarm state changes.
updateAlarmModel_alarmCapabilities :: Lens' UpdateAlarmModel (Maybe AlarmCapabilities)

-- | The name of the alarm model.
updateAlarmModel_alarmModelName :: Lens' UpdateAlarmModel Text

-- | The ARN of the IAM role that allows the alarm to perform actions and
--   access AWS resources. For more information, see <a>Amazon Resource
--   Names (ARNs)</a> in the <i>AWS General Reference</i>.
updateAlarmModel_roleArn :: Lens' UpdateAlarmModel Text

-- | Defines when your alarm is invoked.
updateAlarmModel_alarmRule :: Lens' UpdateAlarmModel AlarmRule

-- | <i>See:</i> <a>newUpdateAlarmModelResponse</a> smart constructor.
data UpdateAlarmModelResponse
UpdateAlarmModelResponse' :: Maybe POSIX -> Maybe AlarmModelVersionStatus -> Maybe POSIX -> Maybe Text -> Maybe Text -> Int -> UpdateAlarmModelResponse

-- | The time the alarm model was created, in the Unix epoch format.
[$sel:creationTime:UpdateAlarmModelResponse'] :: UpdateAlarmModelResponse -> Maybe POSIX

-- | The status of the alarm model. The status can be one of the following
--   values:
--   
--   <ul>
--   <li><tt>ACTIVE</tt> - The alarm model is active and it's ready to
--   evaluate data.</li>
--   <li><tt>ACTIVATING</tt> - AWS IoT Events is activating your alarm
--   model. Activating an alarm model can take up to a few minutes.</li>
--   <li><tt>INACTIVE</tt> - The alarm model is inactive, so it isn't ready
--   to evaluate data. Check your alarm model information and update the
--   alarm model.</li>
--   <li><tt>FAILED</tt> - You couldn't create or update the alarm model.
--   Check your alarm model information and try again.</li>
--   </ul>
[$sel:status:UpdateAlarmModelResponse'] :: UpdateAlarmModelResponse -> Maybe AlarmModelVersionStatus

-- | The time the alarm model was last updated, in the Unix epoch format.
[$sel:lastUpdateTime:UpdateAlarmModelResponse'] :: UpdateAlarmModelResponse -> Maybe POSIX

-- | The version of the alarm model.
[$sel:alarmModelVersion:UpdateAlarmModelResponse'] :: UpdateAlarmModelResponse -> Maybe Text

-- | The ARN of the alarm model. For more information, see <a>Amazon
--   Resource Names (ARNs)</a> in the <i>AWS General Reference</i>.
[$sel:alarmModelArn:UpdateAlarmModelResponse'] :: UpdateAlarmModelResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:UpdateAlarmModelResponse'] :: UpdateAlarmModelResponse -> Int

-- | Create a value of <a>UpdateAlarmModelResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:UpdateAlarmModelResponse'</a>,
--   <a>updateAlarmModelResponse_creationTime</a> - The time the alarm
--   model was created, in the Unix epoch format.
--   
--   <a>$sel:status:UpdateAlarmModelResponse'</a>,
--   <a>updateAlarmModelResponse_status</a> - The status of the alarm
--   model. The status can be one of the following values:
--   
--   <ul>
--   <li><tt>ACTIVE</tt> - The alarm model is active and it's ready to
--   evaluate data.</li>
--   <li><tt>ACTIVATING</tt> - AWS IoT Events is activating your alarm
--   model. Activating an alarm model can take up to a few minutes.</li>
--   <li><tt>INACTIVE</tt> - The alarm model is inactive, so it isn't ready
--   to evaluate data. Check your alarm model information and update the
--   alarm model.</li>
--   <li><tt>FAILED</tt> - You couldn't create or update the alarm model.
--   Check your alarm model information and try again.</li>
--   </ul>
--   
--   <a>$sel:lastUpdateTime:UpdateAlarmModelResponse'</a>,
--   <a>updateAlarmModelResponse_lastUpdateTime</a> - The time the alarm
--   model was last updated, in the Unix epoch format.
--   
--   <a>$sel:alarmModelVersion:UpdateAlarmModelResponse'</a>,
--   <a>updateAlarmModelResponse_alarmModelVersion</a> - The version of the
--   alarm model.
--   
--   <a>$sel:alarmModelArn:UpdateAlarmModelResponse'</a>,
--   <a>updateAlarmModelResponse_alarmModelArn</a> - The ARN of the alarm
--   model. For more information, see <a>Amazon Resource Names (ARNs)</a>
--   in the <i>AWS General Reference</i>.
--   
--   <a>$sel:httpStatus:UpdateAlarmModelResponse'</a>,
--   <a>updateAlarmModelResponse_httpStatus</a> - The response's http
--   status code.
newUpdateAlarmModelResponse :: Int -> UpdateAlarmModelResponse

-- | The time the alarm model was created, in the Unix epoch format.
updateAlarmModelResponse_creationTime :: Lens' UpdateAlarmModelResponse (Maybe UTCTime)

-- | The status of the alarm model. The status can be one of the following
--   values:
--   
--   <ul>
--   <li><tt>ACTIVE</tt> - The alarm model is active and it's ready to
--   evaluate data.</li>
--   <li><tt>ACTIVATING</tt> - AWS IoT Events is activating your alarm
--   model. Activating an alarm model can take up to a few minutes.</li>
--   <li><tt>INACTIVE</tt> - The alarm model is inactive, so it isn't ready
--   to evaluate data. Check your alarm model information and update the
--   alarm model.</li>
--   <li><tt>FAILED</tt> - You couldn't create or update the alarm model.
--   Check your alarm model information and try again.</li>
--   </ul>
updateAlarmModelResponse_status :: Lens' UpdateAlarmModelResponse (Maybe AlarmModelVersionStatus)

-- | The time the alarm model was last updated, in the Unix epoch format.
updateAlarmModelResponse_lastUpdateTime :: Lens' UpdateAlarmModelResponse (Maybe UTCTime)

-- | The version of the alarm model.
updateAlarmModelResponse_alarmModelVersion :: Lens' UpdateAlarmModelResponse (Maybe Text)

-- | The ARN of the alarm model. For more information, see <a>Amazon
--   Resource Names (ARNs)</a> in the <i>AWS General Reference</i>.
updateAlarmModelResponse_alarmModelArn :: Lens' UpdateAlarmModelResponse (Maybe Text)

-- | The response's http status code.
updateAlarmModelResponse_httpStatus :: Lens' UpdateAlarmModelResponse Int
instance GHC.Generics.Generic Amazonka.IoTEvents.UpdateAlarmModel.UpdateAlarmModel
instance GHC.Show.Show Amazonka.IoTEvents.UpdateAlarmModel.UpdateAlarmModel
instance GHC.Read.Read Amazonka.IoTEvents.UpdateAlarmModel.UpdateAlarmModel
instance GHC.Classes.Eq Amazonka.IoTEvents.UpdateAlarmModel.UpdateAlarmModel
instance GHC.Generics.Generic Amazonka.IoTEvents.UpdateAlarmModel.UpdateAlarmModelResponse
instance GHC.Show.Show Amazonka.IoTEvents.UpdateAlarmModel.UpdateAlarmModelResponse
instance GHC.Read.Read Amazonka.IoTEvents.UpdateAlarmModel.UpdateAlarmModelResponse
instance GHC.Classes.Eq Amazonka.IoTEvents.UpdateAlarmModel.UpdateAlarmModelResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTEvents.UpdateAlarmModel.UpdateAlarmModel
instance Control.DeepSeq.NFData Amazonka.IoTEvents.UpdateAlarmModel.UpdateAlarmModelResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.UpdateAlarmModel.UpdateAlarmModel
instance Control.DeepSeq.NFData Amazonka.IoTEvents.UpdateAlarmModel.UpdateAlarmModel
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTEvents.UpdateAlarmModel.UpdateAlarmModel
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEvents.UpdateAlarmModel.UpdateAlarmModel
instance Amazonka.Data.Path.ToPath Amazonka.IoTEvents.UpdateAlarmModel.UpdateAlarmModel
instance Amazonka.Data.Query.ToQuery Amazonka.IoTEvents.UpdateAlarmModel.UpdateAlarmModel


-- | Updates a detector model. Detectors (instances) spawned by the
--   previous version are deleted and then re-created as new inputs arrive.
module Amazonka.IoTEvents.UpdateDetectorModel

-- | <i>See:</i> <a>newUpdateDetectorModel</a> smart constructor.
data UpdateDetectorModel
UpdateDetectorModel' :: Maybe Text -> Maybe EvaluationMethod -> Text -> DetectorModelDefinition -> Text -> UpdateDetectorModel

-- | A brief description of the detector model.
[$sel:detectorModelDescription:UpdateDetectorModel'] :: UpdateDetectorModel -> Maybe Text

-- | Information about the order in which events are evaluated and how
--   actions are executed.
[$sel:evaluationMethod:UpdateDetectorModel'] :: UpdateDetectorModel -> Maybe EvaluationMethod

-- | The name of the detector model that is updated.
[$sel:detectorModelName:UpdateDetectorModel'] :: UpdateDetectorModel -> Text

-- | Information that defines how a detector operates.
[$sel:detectorModelDefinition:UpdateDetectorModel'] :: UpdateDetectorModel -> DetectorModelDefinition

-- | The ARN of the role that grants permission to AWS IoT Events to
--   perform its operations.
[$sel:roleArn:UpdateDetectorModel'] :: UpdateDetectorModel -> Text

-- | Create a value of <a>UpdateDetectorModel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:detectorModelDescription:UpdateDetectorModel'</a>,
--   <a>updateDetectorModel_detectorModelDescription</a> - A brief
--   description of the detector model.
--   
--   <a>$sel:evaluationMethod:UpdateDetectorModel'</a>,
--   <a>updateDetectorModel_evaluationMethod</a> - Information about the
--   order in which events are evaluated and how actions are executed.
--   
--   <a>$sel:detectorModelName:UpdateDetectorModel'</a>,
--   <a>updateDetectorModel_detectorModelName</a> - The name of the
--   detector model that is updated.
--   
--   <a>$sel:detectorModelDefinition:UpdateDetectorModel'</a>,
--   <a>updateDetectorModel_detectorModelDefinition</a> - Information that
--   defines how a detector operates.
--   
--   <a>$sel:roleArn:UpdateDetectorModel'</a>,
--   <a>updateDetectorModel_roleArn</a> - The ARN of the role that grants
--   permission to AWS IoT Events to perform its operations.
newUpdateDetectorModel :: Text -> DetectorModelDefinition -> Text -> UpdateDetectorModel

-- | A brief description of the detector model.
updateDetectorModel_detectorModelDescription :: Lens' UpdateDetectorModel (Maybe Text)

-- | Information about the order in which events are evaluated and how
--   actions are executed.
updateDetectorModel_evaluationMethod :: Lens' UpdateDetectorModel (Maybe EvaluationMethod)

-- | The name of the detector model that is updated.
updateDetectorModel_detectorModelName :: Lens' UpdateDetectorModel Text

-- | Information that defines how a detector operates.
updateDetectorModel_detectorModelDefinition :: Lens' UpdateDetectorModel DetectorModelDefinition

-- | The ARN of the role that grants permission to AWS IoT Events to
--   perform its operations.
updateDetectorModel_roleArn :: Lens' UpdateDetectorModel Text

-- | <i>See:</i> <a>newUpdateDetectorModelResponse</a> smart constructor.
data UpdateDetectorModelResponse
UpdateDetectorModelResponse' :: Maybe DetectorModelConfiguration -> Int -> UpdateDetectorModelResponse

-- | Information about how the detector model is configured.
[$sel:detectorModelConfiguration:UpdateDetectorModelResponse'] :: UpdateDetectorModelResponse -> Maybe DetectorModelConfiguration

-- | The response's http status code.
[$sel:httpStatus:UpdateDetectorModelResponse'] :: UpdateDetectorModelResponse -> Int

-- | Create a value of <a>UpdateDetectorModelResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:detectorModelConfiguration:UpdateDetectorModelResponse'</a>,
--   <a>updateDetectorModelResponse_detectorModelConfiguration</a> -
--   Information about how the detector model is configured.
--   
--   <a>$sel:httpStatus:UpdateDetectorModelResponse'</a>,
--   <a>updateDetectorModelResponse_httpStatus</a> - The response's http
--   status code.
newUpdateDetectorModelResponse :: Int -> UpdateDetectorModelResponse

-- | Information about how the detector model is configured.
updateDetectorModelResponse_detectorModelConfiguration :: Lens' UpdateDetectorModelResponse (Maybe DetectorModelConfiguration)

-- | The response's http status code.
updateDetectorModelResponse_httpStatus :: Lens' UpdateDetectorModelResponse Int
instance GHC.Generics.Generic Amazonka.IoTEvents.UpdateDetectorModel.UpdateDetectorModel
instance GHC.Show.Show Amazonka.IoTEvents.UpdateDetectorModel.UpdateDetectorModel
instance GHC.Read.Read Amazonka.IoTEvents.UpdateDetectorModel.UpdateDetectorModel
instance GHC.Classes.Eq Amazonka.IoTEvents.UpdateDetectorModel.UpdateDetectorModel
instance GHC.Generics.Generic Amazonka.IoTEvents.UpdateDetectorModel.UpdateDetectorModelResponse
instance GHC.Show.Show Amazonka.IoTEvents.UpdateDetectorModel.UpdateDetectorModelResponse
instance GHC.Read.Read Amazonka.IoTEvents.UpdateDetectorModel.UpdateDetectorModelResponse
instance GHC.Classes.Eq Amazonka.IoTEvents.UpdateDetectorModel.UpdateDetectorModelResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTEvents.UpdateDetectorModel.UpdateDetectorModel
instance Control.DeepSeq.NFData Amazonka.IoTEvents.UpdateDetectorModel.UpdateDetectorModelResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.UpdateDetectorModel.UpdateDetectorModel
instance Control.DeepSeq.NFData Amazonka.IoTEvents.UpdateDetectorModel.UpdateDetectorModel
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTEvents.UpdateDetectorModel.UpdateDetectorModel
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEvents.UpdateDetectorModel.UpdateDetectorModel
instance Amazonka.Data.Path.ToPath Amazonka.IoTEvents.UpdateDetectorModel.UpdateDetectorModel
instance Amazonka.Data.Query.ToQuery Amazonka.IoTEvents.UpdateDetectorModel.UpdateDetectorModel


-- | Updates an input.
module Amazonka.IoTEvents.UpdateInput

-- | <i>See:</i> <a>newUpdateInput</a> smart constructor.
data UpdateInput
UpdateInput' :: Maybe Text -> Text -> InputDefinition -> UpdateInput

-- | A brief description of the input.
[$sel:inputDescription:UpdateInput'] :: UpdateInput -> Maybe Text

-- | The name of the input you want to update.
[$sel:inputName:UpdateInput'] :: UpdateInput -> Text

-- | The definition of the input.
[$sel:inputDefinition:UpdateInput'] :: UpdateInput -> InputDefinition

-- | Create a value of <a>UpdateInput</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputDescription:UpdateInput'</a>,
--   <a>updateInput_inputDescription</a> - A brief description of the
--   input.
--   
--   <a>$sel:inputName:UpdateInput'</a>, <a>updateInput_inputName</a> - The
--   name of the input you want to update.
--   
--   <a>$sel:inputDefinition:UpdateInput'</a>,
--   <a>updateInput_inputDefinition</a> - The definition of the input.
newUpdateInput :: Text -> InputDefinition -> UpdateInput

-- | A brief description of the input.
updateInput_inputDescription :: Lens' UpdateInput (Maybe Text)

-- | The name of the input you want to update.
updateInput_inputName :: Lens' UpdateInput Text

-- | The definition of the input.
updateInput_inputDefinition :: Lens' UpdateInput InputDefinition

-- | <i>See:</i> <a>newUpdateInputResponse</a> smart constructor.
data UpdateInputResponse
UpdateInputResponse' :: Maybe InputConfiguration -> Int -> UpdateInputResponse

-- | Information about the configuration of the input.
[$sel:inputConfiguration:UpdateInputResponse'] :: UpdateInputResponse -> Maybe InputConfiguration

-- | The response's http status code.
[$sel:httpStatus:UpdateInputResponse'] :: UpdateInputResponse -> Int

-- | Create a value of <a>UpdateInputResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputConfiguration:UpdateInputResponse'</a>,
--   <a>updateInputResponse_inputConfiguration</a> - Information about the
--   configuration of the input.
--   
--   <a>$sel:httpStatus:UpdateInputResponse'</a>,
--   <a>updateInputResponse_httpStatus</a> - The response's http status
--   code.
newUpdateInputResponse :: Int -> UpdateInputResponse

-- | Information about the configuration of the input.
updateInputResponse_inputConfiguration :: Lens' UpdateInputResponse (Maybe InputConfiguration)

-- | The response's http status code.
updateInputResponse_httpStatus :: Lens' UpdateInputResponse Int
instance GHC.Generics.Generic Amazonka.IoTEvents.UpdateInput.UpdateInput
instance GHC.Show.Show Amazonka.IoTEvents.UpdateInput.UpdateInput
instance GHC.Read.Read Amazonka.IoTEvents.UpdateInput.UpdateInput
instance GHC.Classes.Eq Amazonka.IoTEvents.UpdateInput.UpdateInput
instance GHC.Generics.Generic Amazonka.IoTEvents.UpdateInput.UpdateInputResponse
instance GHC.Show.Show Amazonka.IoTEvents.UpdateInput.UpdateInputResponse
instance GHC.Read.Read Amazonka.IoTEvents.UpdateInput.UpdateInputResponse
instance GHC.Classes.Eq Amazonka.IoTEvents.UpdateInput.UpdateInputResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTEvents.UpdateInput.UpdateInput
instance Control.DeepSeq.NFData Amazonka.IoTEvents.UpdateInput.UpdateInputResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTEvents.UpdateInput.UpdateInput
instance Control.DeepSeq.NFData Amazonka.IoTEvents.UpdateInput.UpdateInput
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTEvents.UpdateInput.UpdateInput
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEvents.UpdateInput.UpdateInput
instance Amazonka.Data.Path.ToPath Amazonka.IoTEvents.UpdateInput.UpdateInput
instance Amazonka.Data.Query.ToQuery Amazonka.IoTEvents.UpdateInput.UpdateInput


module Amazonka.IoTEvents.Lens

-- | The token that you can use to return the next set of results.
listInputs_nextToken :: Lens' ListInputs (Maybe Text)

-- | The maximum number of results to be returned per request.
listInputs_maxResults :: Lens' ListInputs (Maybe Natural)

-- | Summary information about the inputs.
listInputsResponse_inputSummaries :: Lens' ListInputsResponse (Maybe [InputSummary])

-- | The token that you can use to return the next set of results, or
--   <tt>null</tt> if there are no more results.
listInputsResponse_nextToken :: Lens' ListInputsResponse (Maybe Text)

-- | The response's http status code.
listInputsResponse_httpStatus :: Lens' ListInputsResponse Int

-- | Undocumented member.
startDetectorModelAnalysis_detectorModelDefinition :: Lens' StartDetectorModelAnalysis DetectorModelDefinition

-- | The ID that you can use to retrieve the analysis result.
startDetectorModelAnalysisResponse_analysisId :: Lens' StartDetectorModelAnalysisResponse (Maybe Text)

-- | The response's http status code.
startDetectorModelAnalysisResponse_httpStatus :: Lens' StartDetectorModelAnalysisResponse Int

-- | The new values of the AWS IoT Events logging options.
putLoggingOptions_loggingOptions :: Lens' PutLoggingOptions LoggingOptions

-- | The ID of the analysis result that you want to retrieve.
describeDetectorModelAnalysis_analysisId :: Lens' DescribeDetectorModelAnalysis Text

-- | The status of the analysis activity. The status can be one of the
--   following values:
--   
--   <ul>
--   <li><tt>RUNNING</tt> - AWS IoT Events is analyzing your detector
--   model. This process can take several minutes to complete.</li>
--   <li><tt>COMPLETE</tt> - AWS IoT Events finished analyzing your
--   detector model.</li>
--   <li><tt>FAILED</tt> - AWS IoT Events couldn't analyze your detector
--   model. Try again later.</li>
--   </ul>
describeDetectorModelAnalysisResponse_status :: Lens' DescribeDetectorModelAnalysisResponse (Maybe AnalysisStatus)

-- | The response's http status code.
describeDetectorModelAnalysisResponse_httpStatus :: Lens' DescribeDetectorModelAnalysisResponse Int

-- | A brief description of the input.
createInput_inputDescription :: Lens' CreateInput (Maybe Text)

-- | Metadata that can be used to manage the input.
createInput_tags :: Lens' CreateInput (Maybe [Tag])

-- | The name you want to give to the input.
createInput_inputName :: Lens' CreateInput Text

-- | The definition of the input.
createInput_inputDefinition :: Lens' CreateInput InputDefinition

-- | Information about the configuration of the input.
createInputResponse_inputConfiguration :: Lens' CreateInputResponse (Maybe InputConfiguration)

-- | The response's http status code.
createInputResponse_httpStatus :: Lens' CreateInputResponse Int

-- | The ARN of the resource.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | The list of tags assigned to the resource.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe [Tag])

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int

-- | The token that you can use to return the next set of results.
listAlarmModels_nextToken :: Lens' ListAlarmModels (Maybe Text)

-- | The maximum number of results to be returned per request.
listAlarmModels_maxResults :: Lens' ListAlarmModels (Maybe Natural)

-- | The token that you can use to return the next set of results, or
--   <tt>null</tt> if there are no more results.
listAlarmModelsResponse_nextToken :: Lens' ListAlarmModelsResponse (Maybe Text)

-- | A list that summarizes each alarm model.
listAlarmModelsResponse_alarmModelSummaries :: Lens' ListAlarmModelsResponse (Maybe [AlarmModelSummary])

-- | The response's http status code.
listAlarmModelsResponse_httpStatus :: Lens' ListAlarmModelsResponse Int

-- | The name of the alarm model.
deleteAlarmModel_alarmModelName :: Lens' DeleteAlarmModel Text

-- | The response's http status code.
deleteAlarmModelResponse_httpStatus :: Lens' DeleteAlarmModelResponse Int

-- | A non-negative integer that reflects the severity level of the alarm.
updateAlarmModel_severity :: Lens' UpdateAlarmModel (Maybe Natural)

-- | Contains information about one or more notification actions.
updateAlarmModel_alarmNotification :: Lens' UpdateAlarmModel (Maybe AlarmNotification)

-- | The description of the alarm model.
updateAlarmModel_alarmModelDescription :: Lens' UpdateAlarmModel (Maybe Text)

-- | Contains information about one or more alarm actions.
updateAlarmModel_alarmEventActions :: Lens' UpdateAlarmModel (Maybe AlarmEventActions)

-- | Contains the configuration information of alarm state changes.
updateAlarmModel_alarmCapabilities :: Lens' UpdateAlarmModel (Maybe AlarmCapabilities)

-- | The name of the alarm model.
updateAlarmModel_alarmModelName :: Lens' UpdateAlarmModel Text

-- | The ARN of the IAM role that allows the alarm to perform actions and
--   access AWS resources. For more information, see <a>Amazon Resource
--   Names (ARNs)</a> in the <i>AWS General Reference</i>.
updateAlarmModel_roleArn :: Lens' UpdateAlarmModel Text

-- | Defines when your alarm is invoked.
updateAlarmModel_alarmRule :: Lens' UpdateAlarmModel AlarmRule

-- | The time the alarm model was created, in the Unix epoch format.
updateAlarmModelResponse_creationTime :: Lens' UpdateAlarmModelResponse (Maybe UTCTime)

-- | The status of the alarm model. The status can be one of the following
--   values:
--   
--   <ul>
--   <li><tt>ACTIVE</tt> - The alarm model is active and it's ready to
--   evaluate data.</li>
--   <li><tt>ACTIVATING</tt> - AWS IoT Events is activating your alarm
--   model. Activating an alarm model can take up to a few minutes.</li>
--   <li><tt>INACTIVE</tt> - The alarm model is inactive, so it isn't ready
--   to evaluate data. Check your alarm model information and update the
--   alarm model.</li>
--   <li><tt>FAILED</tt> - You couldn't create or update the alarm model.
--   Check your alarm model information and try again.</li>
--   </ul>
updateAlarmModelResponse_status :: Lens' UpdateAlarmModelResponse (Maybe AlarmModelVersionStatus)

-- | The time the alarm model was last updated, in the Unix epoch format.
updateAlarmModelResponse_lastUpdateTime :: Lens' UpdateAlarmModelResponse (Maybe UTCTime)

-- | The version of the alarm model.
updateAlarmModelResponse_alarmModelVersion :: Lens' UpdateAlarmModelResponse (Maybe Text)

-- | The ARN of the alarm model. For more information, see <a>Amazon
--   Resource Names (ARNs)</a> in the <i>AWS General Reference</i>.
updateAlarmModelResponse_alarmModelArn :: Lens' UpdateAlarmModelResponse (Maybe Text)

-- | The response's http status code.
updateAlarmModelResponse_httpStatus :: Lens' UpdateAlarmModelResponse Int

-- | A non-negative integer that reflects the severity level of the alarm.
createAlarmModel_severity :: Lens' CreateAlarmModel (Maybe Natural)

-- | Contains information about one or more notification actions.
createAlarmModel_alarmNotification :: Lens' CreateAlarmModel (Maybe AlarmNotification)

-- | An input attribute used as a key to create an alarm. AWS IoT Events
--   routes <a>inputs</a> associated with this key to the alarm.
createAlarmModel_key :: Lens' CreateAlarmModel (Maybe Text)

-- | A description that tells you what the alarm model detects.
createAlarmModel_alarmModelDescription :: Lens' CreateAlarmModel (Maybe Text)

-- | Contains information about one or more alarm actions.
createAlarmModel_alarmEventActions :: Lens' CreateAlarmModel (Maybe AlarmEventActions)

-- | Contains the configuration information of alarm state changes.
createAlarmModel_alarmCapabilities :: Lens' CreateAlarmModel (Maybe AlarmCapabilities)

-- | A list of key-value pairs that contain metadata for the alarm model.
--   The tags help you manage the alarm model. For more information, see
--   <a>Tagging your AWS IoT Events resources</a> in the <i>AWS IoT Events
--   Developer Guide</i>.
--   
--   You can create up to 50 tags for one alarm model.
createAlarmModel_tags :: Lens' CreateAlarmModel (Maybe [Tag])

-- | A unique name that helps you identify the alarm model. You can't
--   change this name after you create the alarm model.
createAlarmModel_alarmModelName :: Lens' CreateAlarmModel Text

-- | The ARN of the IAM role that allows the alarm to perform actions and
--   access AWS resources. For more information, see <a>Amazon Resource
--   Names (ARNs)</a> in the <i>AWS General Reference</i>.
createAlarmModel_roleArn :: Lens' CreateAlarmModel Text

-- | Defines when your alarm is invoked.
createAlarmModel_alarmRule :: Lens' CreateAlarmModel AlarmRule

-- | The time the alarm model was created, in the Unix epoch format.
createAlarmModelResponse_creationTime :: Lens' CreateAlarmModelResponse (Maybe UTCTime)

-- | The status of the alarm model. The status can be one of the following
--   values:
--   
--   <ul>
--   <li><tt>ACTIVE</tt> - The alarm model is active and it's ready to
--   evaluate data.</li>
--   <li><tt>ACTIVATING</tt> - AWS IoT Events is activating your alarm
--   model. Activating an alarm model can take up to a few minutes.</li>
--   <li><tt>INACTIVE</tt> - The alarm model is inactive, so it isn't ready
--   to evaluate data. Check your alarm model information and update the
--   alarm model.</li>
--   <li><tt>FAILED</tt> - You couldn't create or update the alarm model.
--   Check your alarm model information and try again.</li>
--   </ul>
createAlarmModelResponse_status :: Lens' CreateAlarmModelResponse (Maybe AlarmModelVersionStatus)

-- | The time the alarm model was last updated, in the Unix epoch format.
createAlarmModelResponse_lastUpdateTime :: Lens' CreateAlarmModelResponse (Maybe UTCTime)

-- | The version of the alarm model.
createAlarmModelResponse_alarmModelVersion :: Lens' CreateAlarmModelResponse (Maybe Text)

-- | The ARN of the alarm model. For more information, see <a>Amazon
--   Resource Names (ARNs)</a> in the <i>AWS General Reference</i>.
createAlarmModelResponse_alarmModelArn :: Lens' CreateAlarmModelResponse (Maybe Text)

-- | The response's http status code.
createAlarmModelResponse_httpStatus :: Lens' CreateAlarmModelResponse Int

-- | The token that you can use to return the next set of results.
getDetectorModelAnalysisResults_nextToken :: Lens' GetDetectorModelAnalysisResults (Maybe Text)

-- | The maximum number of results to be returned per request.
getDetectorModelAnalysisResults_maxResults :: Lens' GetDetectorModelAnalysisResults (Maybe Int)

-- | The ID of the analysis result that you want to retrieve.
getDetectorModelAnalysisResults_analysisId :: Lens' GetDetectorModelAnalysisResults Text

-- | The token that you can use to return the next set of results, or
--   <tt>null</tt> if there are no more results.
getDetectorModelAnalysisResultsResponse_nextToken :: Lens' GetDetectorModelAnalysisResultsResponse (Maybe Text)

-- | Contains information about one or more analysis results.
getDetectorModelAnalysisResultsResponse_analysisResults :: Lens' GetDetectorModelAnalysisResultsResponse (Maybe [AnalysisResult])

-- | The response's http status code.
getDetectorModelAnalysisResultsResponse_httpStatus :: Lens' GetDetectorModelAnalysisResultsResponse Int

-- | The token that you can use to return the next set of results.
listDetectorModelVersions_nextToken :: Lens' ListDetectorModelVersions (Maybe Text)

-- | The maximum number of results to be returned per request.
listDetectorModelVersions_maxResults :: Lens' ListDetectorModelVersions (Maybe Natural)

-- | The name of the detector model whose versions are returned.
listDetectorModelVersions_detectorModelName :: Lens' ListDetectorModelVersions Text

-- | The token that you can use to return the next set of results, or
--   <tt>null</tt> if there are no more results.
listDetectorModelVersionsResponse_nextToken :: Lens' ListDetectorModelVersionsResponse (Maybe Text)

-- | Summary information about the detector model versions.
listDetectorModelVersionsResponse_detectorModelVersionSummaries :: Lens' ListDetectorModelVersionsResponse (Maybe [DetectorModelVersionSummary])

-- | The response's http status code.
listDetectorModelVersionsResponse_httpStatus :: Lens' ListDetectorModelVersionsResponse Int

-- | The version of the alarm model.
describeAlarmModel_alarmModelVersion :: Lens' DescribeAlarmModel (Maybe Text)

-- | The name of the alarm model.
describeAlarmModel_alarmModelName :: Lens' DescribeAlarmModel Text

-- | The time the alarm model was created, in the Unix epoch format.
describeAlarmModelResponse_creationTime :: Lens' DescribeAlarmModelResponse (Maybe UTCTime)

-- | The status of the alarm model. The status can be one of the following
--   values:
--   
--   <ul>
--   <li><tt>ACTIVE</tt> - The alarm model is active and it's ready to
--   evaluate data.</li>
--   <li><tt>ACTIVATING</tt> - AWS IoT Events is activating your alarm
--   model. Activating an alarm model can take up to a few minutes.</li>
--   <li><tt>INACTIVE</tt> - The alarm model is inactive, so it isn't ready
--   to evaluate data. Check your alarm model information and update the
--   alarm model.</li>
--   <li><tt>FAILED</tt> - You couldn't create or update the alarm model.
--   Check your alarm model information and try again.</li>
--   </ul>
describeAlarmModelResponse_status :: Lens' DescribeAlarmModelResponse (Maybe AlarmModelVersionStatus)

-- | Defines when your alarm is invoked.
describeAlarmModelResponse_alarmRule :: Lens' DescribeAlarmModelResponse (Maybe AlarmRule)

-- | The name of the alarm model.
describeAlarmModelResponse_alarmModelName :: Lens' DescribeAlarmModelResponse (Maybe Text)

-- | A non-negative integer that reflects the severity level of the alarm.
describeAlarmModelResponse_severity :: Lens' DescribeAlarmModelResponse (Maybe Natural)

-- | Contains information about one or more notification actions.
describeAlarmModelResponse_alarmNotification :: Lens' DescribeAlarmModelResponse (Maybe AlarmNotification)

-- | An input attribute used as a key to create an alarm. AWS IoT Events
--   routes <a>inputs</a> associated with this key to the alarm.
describeAlarmModelResponse_key :: Lens' DescribeAlarmModelResponse (Maybe Text)

-- | Contains information about the status of the alarm model.
describeAlarmModelResponse_statusMessage :: Lens' DescribeAlarmModelResponse (Maybe Text)

-- | The description of the alarm model.
describeAlarmModelResponse_alarmModelDescription :: Lens' DescribeAlarmModelResponse (Maybe Text)

-- | Contains information about one or more alarm actions.
describeAlarmModelResponse_alarmEventActions :: Lens' DescribeAlarmModelResponse (Maybe AlarmEventActions)

-- | Contains the configuration information of alarm state changes.
describeAlarmModelResponse_alarmCapabilities :: Lens' DescribeAlarmModelResponse (Maybe AlarmCapabilities)

-- | The time the alarm model was last updated, in the Unix epoch format.
describeAlarmModelResponse_lastUpdateTime :: Lens' DescribeAlarmModelResponse (Maybe UTCTime)

-- | The version of the alarm model.
describeAlarmModelResponse_alarmModelVersion :: Lens' DescribeAlarmModelResponse (Maybe Text)

-- | The ARN of the alarm model. For more information, see <a>Amazon
--   Resource Names (ARNs)</a> in the <i>AWS General Reference</i>.
describeAlarmModelResponse_alarmModelArn :: Lens' DescribeAlarmModelResponse (Maybe Text)

-- | The ARN of the IAM role that allows the alarm to perform actions and
--   access AWS resources. For more information, see <a>Amazon Resource
--   Names (ARNs)</a> in the <i>AWS General Reference</i>.
describeAlarmModelResponse_roleArn :: Lens' DescribeAlarmModelResponse (Maybe Text)

-- | The response's http status code.
describeAlarmModelResponse_httpStatus :: Lens' DescribeAlarmModelResponse Int

-- | A brief description of the detector model.
createDetectorModel_detectorModelDescription :: Lens' CreateDetectorModel (Maybe Text)

-- | The input attribute key used to identify a device or system to create
--   a detector (an instance of the detector model) and then to route each
--   input received to the appropriate detector (instance). This parameter
--   uses a JSON-path expression in the message payload of each input to
--   specify the attribute-value pair that is used to identify the device
--   associated with the input.
createDetectorModel_key :: Lens' CreateDetectorModel (Maybe Text)

-- | Information about the order in which events are evaluated and how
--   actions are executed.
createDetectorModel_evaluationMethod :: Lens' CreateDetectorModel (Maybe EvaluationMethod)

-- | Metadata that can be used to manage the detector model.
createDetectorModel_tags :: Lens' CreateDetectorModel (Maybe [Tag])

-- | The name of the detector model.
createDetectorModel_detectorModelName :: Lens' CreateDetectorModel Text

-- | Information that defines how the detectors operate.
createDetectorModel_detectorModelDefinition :: Lens' CreateDetectorModel DetectorModelDefinition

-- | The ARN of the role that grants permission to AWS IoT Events to
--   perform its operations.
createDetectorModel_roleArn :: Lens' CreateDetectorModel Text

-- | Information about how the detector model is configured.
createDetectorModelResponse_detectorModelConfiguration :: Lens' CreateDetectorModelResponse (Maybe DetectorModelConfiguration)

-- | The response's http status code.
createDetectorModelResponse_httpStatus :: Lens' CreateDetectorModelResponse Int

-- | The token that you can use to return the next set of results.
listDetectorModels_nextToken :: Lens' ListDetectorModels (Maybe Text)

-- | The maximum number of results to be returned per request.
listDetectorModels_maxResults :: Lens' ListDetectorModels (Maybe Natural)

-- | The token that you can use to return the next set of results, or
--   <tt>null</tt> if there are no more results.
listDetectorModelsResponse_nextToken :: Lens' ListDetectorModelsResponse (Maybe Text)

-- | Summary information about the detector models.
listDetectorModelsResponse_detectorModelSummaries :: Lens' ListDetectorModelsResponse (Maybe [DetectorModelSummary])

-- | The response's http status code.
listDetectorModelsResponse_httpStatus :: Lens' ListDetectorModelsResponse Int

-- | A brief description of the detector model.
updateDetectorModel_detectorModelDescription :: Lens' UpdateDetectorModel (Maybe Text)

-- | Information about the order in which events are evaluated and how
--   actions are executed.
updateDetectorModel_evaluationMethod :: Lens' UpdateDetectorModel (Maybe EvaluationMethod)

-- | The name of the detector model that is updated.
updateDetectorModel_detectorModelName :: Lens' UpdateDetectorModel Text

-- | Information that defines how a detector operates.
updateDetectorModel_detectorModelDefinition :: Lens' UpdateDetectorModel DetectorModelDefinition

-- | The ARN of the role that grants permission to AWS IoT Events to
--   perform its operations.
updateDetectorModel_roleArn :: Lens' UpdateDetectorModel Text

-- | Information about how the detector model is configured.
updateDetectorModelResponse_detectorModelConfiguration :: Lens' UpdateDetectorModelResponse (Maybe DetectorModelConfiguration)

-- | The response's http status code.
updateDetectorModelResponse_httpStatus :: Lens' UpdateDetectorModelResponse Int

-- | The name of the detector model to be deleted.
deleteDetectorModel_detectorModelName :: Lens' DeleteDetectorModel Text

-- | The response's http status code.
deleteDetectorModelResponse_httpStatus :: Lens' DeleteDetectorModelResponse Int

-- | The name of the input to delete.
deleteInput_inputName :: Lens' DeleteInput Text

-- | The response's http status code.
deleteInputResponse_httpStatus :: Lens' DeleteInputResponse Int

-- | A brief description of the input.
updateInput_inputDescription :: Lens' UpdateInput (Maybe Text)

-- | The name of the input you want to update.
updateInput_inputName :: Lens' UpdateInput Text

-- | The definition of the input.
updateInput_inputDefinition :: Lens' UpdateInput InputDefinition

-- | Information about the configuration of the input.
updateInputResponse_inputConfiguration :: Lens' UpdateInputResponse (Maybe InputConfiguration)

-- | The response's http status code.
updateInputResponse_httpStatus :: Lens' UpdateInputResponse Int

-- | The token that you can use to return the next set of results.
listAlarmModelVersions_nextToken :: Lens' ListAlarmModelVersions (Maybe Text)

-- | The maximum number of results to be returned per request.
listAlarmModelVersions_maxResults :: Lens' ListAlarmModelVersions (Maybe Natural)

-- | The name of the alarm model.
listAlarmModelVersions_alarmModelName :: Lens' ListAlarmModelVersions Text

-- | A list that summarizes each alarm model version.
listAlarmModelVersionsResponse_alarmModelVersionSummaries :: Lens' ListAlarmModelVersionsResponse (Maybe [AlarmModelVersionSummary])

-- | The token that you can use to return the next set of results, or
--   <tt>null</tt> if there are no more results.
listAlarmModelVersionsResponse_nextToken :: Lens' ListAlarmModelVersionsResponse (Maybe Text)

-- | The response's http status code.
listAlarmModelVersionsResponse_httpStatus :: Lens' ListAlarmModelVersionsResponse Int

-- | The ARN of the resource.
tagResource_resourceArn :: Lens' TagResource Text

-- | The new or modified tags for the resource.
tagResource_tags :: Lens' TagResource [Tag]

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int

-- | The version of the detector model.
describeDetectorModel_detectorModelVersion :: Lens' DescribeDetectorModel (Maybe Text)

-- | The name of the detector model.
describeDetectorModel_detectorModelName :: Lens' DescribeDetectorModel Text

-- | Information about the detector model.
describeDetectorModelResponse_detectorModel :: Lens' DescribeDetectorModelResponse (Maybe DetectorModel)

-- | The response's http status code.
describeDetectorModelResponse_httpStatus :: Lens' DescribeDetectorModelResponse Int

-- | The name of the input.
describeInput_inputName :: Lens' DescribeInput Text

-- | Information about the input.
describeInputResponse_input :: Lens' DescribeInputResponse (Maybe Input)

-- | The response's http status code.
describeInputResponse_httpStatus :: Lens' DescribeInputResponse Int

-- | The ARN of the resource.
untagResource_resourceArn :: Lens' UntagResource Text

-- | A list of the keys of the tags to be removed from the resource.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int

-- | The token that you can use to return the next set of results.
listInputRoutings_nextToken :: Lens' ListInputRoutings (Maybe Text)

-- | The maximum number of results to be returned per request.
listInputRoutings_maxResults :: Lens' ListInputRoutings (Maybe Natural)

-- | The identifer of the routed input.
listInputRoutings_inputIdentifier :: Lens' ListInputRoutings InputIdentifier

-- | Summary information about the routed resources.
listInputRoutingsResponse_routedResources :: Lens' ListInputRoutingsResponse (Maybe [RoutedResource])

-- | The token that you can use to return the next set of results, or
--   <tt>null</tt> if there are no more results.
listInputRoutingsResponse_nextToken :: Lens' ListInputRoutingsResponse (Maybe Text)

-- | The response's http status code.
listInputRoutingsResponse_httpStatus :: Lens' ListInputRoutingsResponse Int

-- | The current settings of the AWS IoT Events logging options.
describeLoggingOptionsResponse_loggingOptions :: Lens' DescribeLoggingOptionsResponse (Maybe LoggingOptions)

-- | The response's http status code.
describeLoggingOptionsResponse_httpStatus :: Lens' DescribeLoggingOptionsResponse Int

-- | The value must be <tt>TRUE</tt> or <tt>FALSE</tt>. If <tt>TRUE</tt>,
--   you receive a notification when the alarm state changes. You must
--   choose to acknowledge the notification before the alarm state can
--   return to <tt>NORMAL</tt>. If <tt>FALSE</tt>, you won't receive
--   notifications. The alarm automatically changes to the <tt>NORMAL</tt>
--   state when the input property value returns to the specified range.
acknowledgeFlow_enabled :: Lens' AcknowledgeFlow Bool

-- | Publishes an MQTT message with the given topic to the AWS IoT message
--   broker.
action_iotTopicPublish :: Lens' Action (Maybe IotTopicPublishAction)

-- | Writes to the DynamoDB table that you created. The default action
--   payload contains all attribute-value pairs that have the information
--   about the detector model instance and the event that triggered the
--   action. You can customize the <a>payload</a>. A separate column of the
--   DynamoDB table receives one attribute-value pair in the payload that
--   you specify. For more information, see <a>Actions</a> in <i>AWS IoT
--   Events Developer Guide</i>.
action_dynamoDBv2 :: Lens' Action (Maybe DynamoDBv2Action)

-- | Information needed to reset the timer.
action_resetTimer :: Lens' Action (Maybe ResetTimerAction)

-- | Information needed to set the timer.
action_setTimer :: Lens' Action (Maybe SetTimerAction)

-- | Sends an Amazon SNS message.
action_sns :: Lens' Action (Maybe SNSTopicPublishAction)

-- | Information needed to clear the timer.
action_clearTimer :: Lens' Action (Maybe ClearTimerAction)

-- | Writes to the DynamoDB table that you created. The default action
--   payload contains all attribute-value pairs that have the information
--   about the detector model instance and the event that triggered the
--   action. You can customize the <a>payload</a>. One column of the
--   DynamoDB table receives all attribute-value pairs in the payload that
--   you specify. For more information, see <a>Actions</a> in <i>AWS IoT
--   Events Developer Guide</i>.
action_dynamoDB :: Lens' Action (Maybe DynamoDBAction)

-- | Sends information about the detector model instance and the event that
--   triggered the action to an Amazon Kinesis Data Firehose delivery
--   stream.
action_firehose :: Lens' Action (Maybe FirehoseAction)

-- | Sends information about the detector model instance and the event that
--   triggered the action to an asset property in AWS IoT SiteWise .
action_iotSiteWise :: Lens' Action (Maybe IotSiteWiseAction)

-- | Sets a variable to a specified value.
action_setVariable :: Lens' Action (Maybe SetVariableAction)

-- | Calls a Lambda function, passing in information about the detector
--   model instance and the event that triggered the action.
action_lambda :: Lens' Action (Maybe LambdaAction)

-- | Sends AWS IoT Events input, which passes information about the
--   detector model instance and the event that triggered the action.
action_iotEvents :: Lens' Action (Maybe IotEventsAction)

-- | Sends information about the detector model instance and the event that
--   triggered the action to an Amazon SQS queue.
action_sqs :: Lens' Action (Maybe SqsAction)

-- | Undocumented member.
alarmAction_iotTopicPublish :: Lens' AlarmAction (Maybe IotTopicPublishAction)

-- | Undocumented member.
alarmAction_dynamoDBv2 :: Lens' AlarmAction (Maybe DynamoDBv2Action)

-- | Undocumented member.
alarmAction_sns :: Lens' AlarmAction (Maybe SNSTopicPublishAction)

-- | Undocumented member.
alarmAction_dynamoDB :: Lens' AlarmAction (Maybe DynamoDBAction)

-- | Undocumented member.
alarmAction_firehose :: Lens' AlarmAction (Maybe FirehoseAction)

-- | Undocumented member.
alarmAction_iotSiteWise :: Lens' AlarmAction (Maybe IotSiteWiseAction)

-- | Undocumented member.
alarmAction_lambda :: Lens' AlarmAction (Maybe LambdaAction)

-- | Undocumented member.
alarmAction_iotEvents :: Lens' AlarmAction (Maybe IotEventsAction)

-- | Undocumented member.
alarmAction_sqs :: Lens' AlarmAction (Maybe SqsAction)

-- | Specifies whether to get notified for alarm state changes.
alarmCapabilities_acknowledgeFlow :: Lens' AlarmCapabilities (Maybe AcknowledgeFlow)

-- | Specifies the default alarm state. The configuration applies to all
--   alarms that were created based on this alarm model.
alarmCapabilities_initializationConfiguration :: Lens' AlarmCapabilities (Maybe InitializationConfiguration)

-- | Specifies one or more supported actions to receive notifications when
--   the alarm state changes.
alarmEventActions_alarmActions :: Lens' AlarmEventActions (Maybe [AlarmAction])

-- | The time the alarm model was created, in the Unix epoch format.
alarmModelSummary_creationTime :: Lens' AlarmModelSummary (Maybe UTCTime)

-- | The name of the alarm model.
alarmModelSummary_alarmModelName :: Lens' AlarmModelSummary (Maybe Text)

-- | The description of the alarm model.
alarmModelSummary_alarmModelDescription :: Lens' AlarmModelSummary (Maybe Text)

-- | The time the alarm model was created, in the Unix epoch format.
alarmModelVersionSummary_creationTime :: Lens' AlarmModelVersionSummary (Maybe UTCTime)

-- | The status of the alarm model. The status can be one of the following
--   values:
--   
--   <ul>
--   <li><tt>ACTIVE</tt> - The alarm model is active and it's ready to
--   evaluate data.</li>
--   <li><tt>ACTIVATING</tt> - AWS IoT Events is activating your alarm
--   model. Activating an alarm model can take up to a few minutes.</li>
--   <li><tt>INACTIVE</tt> - The alarm model is inactive, so it isn't ready
--   to evaluate data. Check your alarm model information and update the
--   alarm model.</li>
--   <li><tt>FAILED</tt> - You couldn't create or update the alarm model.
--   Check your alarm model information and try again.</li>
--   </ul>
alarmModelVersionSummary_status :: Lens' AlarmModelVersionSummary (Maybe AlarmModelVersionStatus)

-- | The name of the alarm model.
alarmModelVersionSummary_alarmModelName :: Lens' AlarmModelVersionSummary (Maybe Text)

-- | Contains information about the status of the alarm model version.
alarmModelVersionSummary_statusMessage :: Lens' AlarmModelVersionSummary (Maybe Text)

-- | The time the alarm model was last updated, in the Unix epoch format.
alarmModelVersionSummary_lastUpdateTime :: Lens' AlarmModelVersionSummary (Maybe UTCTime)

-- | The version of the alarm model.
alarmModelVersionSummary_alarmModelVersion :: Lens' AlarmModelVersionSummary (Maybe Text)

-- | The ARN of the alarm model. For more information, see <a>Amazon
--   Resource Names (ARNs)</a> in the <i>AWS General Reference</i>.
alarmModelVersionSummary_alarmModelArn :: Lens' AlarmModelVersionSummary (Maybe Text)

-- | The ARN of the IAM role that allows the alarm to perform actions and
--   access AWS resources. For more information, see <a>Amazon Resource
--   Names (ARNs)</a> in the <i>AWS General Reference</i>.
alarmModelVersionSummary_roleArn :: Lens' AlarmModelVersionSummary (Maybe Text)

-- | Contains the notification settings of an alarm model. The settings
--   apply to all alarms that were created based on this alarm model.
alarmNotification_notificationActions :: Lens' AlarmNotification (Maybe (NonEmpty NotificationAction))

-- | A rule that compares an input property value to a threshold value with
--   a comparison operator.
alarmRule_simpleRule :: Lens' AlarmRule (Maybe SimpleRule)

-- | The type of the analysis result. Analyses fall into the following
--   types based on the validators used to generate the analysis result:
--   
--   <ul>
--   <li><tt>supported-actions</tt> - You must specify AWS IoT Events
--   supported actions that work with other AWS services in a supported AWS
--   Region.</li>
--   <li><tt>service-limits</tt> - Resources or API operations can't exceed
--   service quotas (also known as limits). Update your detector model or
--   request a quota increase.</li>
--   <li><tt>structure</tt> - The detector model must follow a structure
--   that AWS IoT Events supports.</li>
--   <li><tt>expression-syntax</tt> - Your expression must follow the
--   required syntax.</li>
--   <li><tt>data-type</tt> - Data types referenced in the detector model
--   must be compatible.</li>
--   <li><tt>referenced-data</tt> - You must define the data referenced in
--   your detector model before you can use the data.</li>
--   <li><tt>referenced-resource</tt> - Resources that the detector model
--   uses must be available.</li>
--   </ul>
--   
--   For more information, see <a>Running detector model analyses</a> in
--   the <i>AWS IoT Events Developer Guide</i>.
analysisResult_type :: Lens' AnalysisResult (Maybe Text)

-- | Contains additional information about the analysis result.
analysisResult_message :: Lens' AnalysisResult (Maybe Text)

-- | The severity level of the analysis result. Based on the severity
--   level, analysis results fall into three general categories:
--   
--   <ul>
--   <li><tt>INFO</tt> - An information result tells you about a
--   significant field in your detector model. This type of result usually
--   doesn't require immediate action.</li>
--   <li><tt>WARNING</tt> - A warning result draws special attention to
--   fields that might cause issues for your detector model. We recommend
--   that you review warnings and take necessary actions before you use
--   your detector model in production environments. Otherwise, the
--   detector model might not work as expected.</li>
--   <li><tt>ERROR</tt> - An error result notifies you about a problem
--   found in your detector model. You must fix all errors before you can
--   publish your detector model.</li>
--   </ul>
analysisResult_level :: Lens' AnalysisResult (Maybe AnalysisResultLevel)

-- | Contains one or more locations that you can use to locate the fields
--   in your detector model that the analysis result references.
analysisResult_locations :: Lens' AnalysisResult (Maybe [AnalysisResultLocation])

-- | A <a>JsonPath</a> expression that identifies the error field in your
--   detector model.
analysisResultLocation_path :: Lens' AnalysisResultLocation (Maybe Text)

-- | The nanosecond offset converted from <tt>timeInSeconds</tt>. The valid
--   range is between 0-999999999.
assetPropertyTimestamp_offsetInNanos :: Lens' AssetPropertyTimestamp (Maybe Text)

-- | The timestamp, in seconds, in the Unix epoch format. The valid range
--   is between 1-31556889864403199.
assetPropertyTimestamp_timeInSeconds :: Lens' AssetPropertyTimestamp Text

-- | The value to send to an asset property.
assetPropertyValue_value :: Lens' AssetPropertyValue (Maybe AssetPropertyVariant)

-- | The quality of the asset property value. The value must be
--   <tt>'GOOD'</tt>, <tt>'BAD'</tt>, or <tt>'UNCERTAIN'</tt>.
assetPropertyValue_quality :: Lens' AssetPropertyValue (Maybe Text)

-- | The timestamp associated with the asset property value. The default is
--   the current event time.
assetPropertyValue_timestamp :: Lens' AssetPropertyValue (Maybe AssetPropertyTimestamp)

-- | The asset property value is an integer. You must use an expression,
--   and the evaluated result should be an integer.
assetPropertyVariant_integerValue :: Lens' AssetPropertyVariant (Maybe Text)

-- | The asset property value is a double. You must use an expression, and
--   the evaluated result should be a double.
assetPropertyVariant_doubleValue :: Lens' AssetPropertyVariant (Maybe Text)

-- | The asset property value is a string. You must use an expression, and
--   the evaluated result should be a string.
assetPropertyVariant_stringValue :: Lens' AssetPropertyVariant (Maybe Text)

-- | The asset property value is a Boolean value that must be
--   <tt>'TRUE'</tt> or <tt>'FALSE'</tt>. You must use an expression, and
--   the evaluated result should be a Boolean value.
assetPropertyVariant_booleanValue :: Lens' AssetPropertyVariant (Maybe Text)

-- | An expression that specifies an attribute-value pair in a JSON
--   structure. Use this to specify an attribute from the JSON payload that
--   is made available by the input. Inputs are derived from messages sent
--   to AWS IoT Events (<tt>BatchPutMessage</tt>). Each such message
--   contains a JSON payload. The attribute (and its paired value)
--   specified here are available for use in the <tt>condition</tt>
--   expressions used by detectors.
--   
--   Syntax: <tt>&lt;field-name&gt;.&lt;field-name&gt;...</tt>
attribute_jsonPath :: Lens' Attribute Text

-- | The name of the timer to clear.
clearTimerAction_timerName :: Lens' ClearTimerAction Text

-- | The value of the input attribute key used to create the detector (the
--   instance of the detector model).
detectorDebugOption_keyValue :: Lens' DetectorDebugOption (Maybe Text)

-- | The name of the detector model.
detectorDebugOption_detectorModelName :: Lens' DetectorDebugOption Text

-- | Information about how the detector is configured.
detectorModel_detectorModelConfiguration :: Lens' DetectorModel (Maybe DetectorModelConfiguration)

-- | Information that defines how a detector operates.
detectorModel_detectorModelDefinition :: Lens' DetectorModel (Maybe DetectorModelDefinition)

-- | The time the detector model was created.
detectorModelConfiguration_creationTime :: Lens' DetectorModelConfiguration (Maybe UTCTime)

-- | The status of the detector model.
detectorModelConfiguration_status :: Lens' DetectorModelConfiguration (Maybe DetectorModelVersionStatus)

-- | The name of the detector model.
detectorModelConfiguration_detectorModelName :: Lens' DetectorModelConfiguration (Maybe Text)

-- | The ARN of the detector model.
detectorModelConfiguration_detectorModelArn :: Lens' DetectorModelConfiguration (Maybe Text)

-- | A brief description of the detector model.
detectorModelConfiguration_detectorModelDescription :: Lens' DetectorModelConfiguration (Maybe Text)

-- | The value used to identify a detector instance. When a device or
--   system sends input, a new detector instance with a unique key value is
--   created. AWS IoT Events can continue to route input to its
--   corresponding detector instance based on this identifying information.
--   
--   This parameter uses a JSON-path expression to select the
--   attribute-value pair in the message payload that is used for
--   identification. To route the message to the correct detector instance,
--   the device must send a message payload that contains the same
--   attribute-value.
detectorModelConfiguration_key :: Lens' DetectorModelConfiguration (Maybe Text)

-- | The version of the detector model.
detectorModelConfiguration_detectorModelVersion :: Lens' DetectorModelConfiguration (Maybe Text)

-- | The time the detector model was last updated.
detectorModelConfiguration_lastUpdateTime :: Lens' DetectorModelConfiguration (Maybe UTCTime)

-- | Information about the order in which events are evaluated and how
--   actions are executed.
detectorModelConfiguration_evaluationMethod :: Lens' DetectorModelConfiguration (Maybe EvaluationMethod)

-- | The ARN of the role that grants permission to AWS IoT Events to
--   perform its operations.
detectorModelConfiguration_roleArn :: Lens' DetectorModelConfiguration (Maybe Text)

-- | Information about the states of the detector.
detectorModelDefinition_states :: Lens' DetectorModelDefinition (NonEmpty State)

-- | The state that is entered at the creation of each detector (instance).
detectorModelDefinition_initialStateName :: Lens' DetectorModelDefinition Text

-- | The time the detector model was created.
detectorModelSummary_creationTime :: Lens' DetectorModelSummary (Maybe UTCTime)

-- | The name of the detector model.
detectorModelSummary_detectorModelName :: Lens' DetectorModelSummary (Maybe Text)

-- | A brief description of the detector model.
detectorModelSummary_detectorModelDescription :: Lens' DetectorModelSummary (Maybe Text)

-- | The time the detector model version was created.
detectorModelVersionSummary_creationTime :: Lens' DetectorModelVersionSummary (Maybe UTCTime)

-- | The status of the detector model version.
detectorModelVersionSummary_status :: Lens' DetectorModelVersionSummary (Maybe DetectorModelVersionStatus)

-- | The name of the detector model.
detectorModelVersionSummary_detectorModelName :: Lens' DetectorModelVersionSummary (Maybe Text)

-- | The ARN of the detector model version.
detectorModelVersionSummary_detectorModelArn :: Lens' DetectorModelVersionSummary (Maybe Text)

-- | The ID of the detector model version.
detectorModelVersionSummary_detectorModelVersion :: Lens' DetectorModelVersionSummary (Maybe Text)

-- | The last time the detector model version was updated.
detectorModelVersionSummary_lastUpdateTime :: Lens' DetectorModelVersionSummary (Maybe UTCTime)

-- | Information about the order in which events are evaluated and how
--   actions are executed.
detectorModelVersionSummary_evaluationMethod :: Lens' DetectorModelVersionSummary (Maybe EvaluationMethod)

-- | The ARN of the role that grants the detector model permission to
--   perform its tasks.
detectorModelVersionSummary_roleArn :: Lens' DetectorModelVersionSummary (Maybe Text)

-- | The data type for the hash key (also called the partition key). You
--   can specify the following values:
--   
--   <ul>
--   <li><tt>'STRING'</tt> - The hash key is a string.</li>
--   <li><tt>'NUMBER'</tt> - The hash key is a number.</li>
--   </ul>
--   
--   If you don't specify <tt>hashKeyType</tt>, the default value is
--   <tt>'STRING'</tt>.
dynamoDBAction_hashKeyType :: Lens' DynamoDBAction (Maybe Text)

-- | The type of operation to perform. You can specify the following
--   values:
--   
--   <ul>
--   <li><tt>'INSERT'</tt> - Insert data as a new item into the DynamoDB
--   table. This item uses the specified hash key as a partition key. If
--   you specified a range key, the item uses the range key as a sort
--   key.</li>
--   <li><tt>'UPDATE'</tt> - Update an existing item of the DynamoDB table
--   with new data. This item's partition key must match the specified hash
--   key. If you specified a range key, the range key must match the item's
--   sort key.</li>
--   <li><tt>'DELETE'</tt> - Delete an existing item of the DynamoDB table.
--   This item's partition key must match the specified hash key. If you
--   specified a range key, the range key must match the item's sort
--   key.</li>
--   </ul>
--   
--   If you don't specify this parameter, AWS IoT Events triggers the
--   <tt>'INSERT'</tt> operation.
dynamoDBAction_operation :: Lens' DynamoDBAction (Maybe Text)

-- | The data type for the range key (also called the sort key), You can
--   specify the following values:
--   
--   <ul>
--   <li><tt>'STRING'</tt> - The range key is a string.</li>
--   <li><tt>'NUMBER'</tt> - The range key is number.</li>
--   </ul>
--   
--   If you don't specify <tt>rangeKeyField</tt>, the default value is
--   <tt>'STRING'</tt>.
dynamoDBAction_rangeKeyType :: Lens' DynamoDBAction (Maybe Text)

-- | Undocumented member.
dynamoDBAction_payload :: Lens' DynamoDBAction (Maybe Payload)

-- | The name of the DynamoDB column that receives the action payload.
--   
--   If you don't specify this parameter, the name of the DynamoDB column
--   is <tt>payload</tt>.
dynamoDBAction_payloadField :: Lens' DynamoDBAction (Maybe Text)

-- | The name of the range key (also called the sort key). The
--   <tt>rangeKeyField</tt> value must match the sort key of the target
--   DynamoDB table.
dynamoDBAction_rangeKeyField :: Lens' DynamoDBAction (Maybe Text)

-- | The value of the range key (also called the sort key).
dynamoDBAction_rangeKeyValue :: Lens' DynamoDBAction (Maybe Text)

-- | The name of the hash key (also called the partition key). The
--   <tt>hashKeyField</tt> value must match the partition key of the target
--   DynamoDB table.
dynamoDBAction_hashKeyField :: Lens' DynamoDBAction Text

-- | The value of the hash key (also called the partition key).
dynamoDBAction_hashKeyValue :: Lens' DynamoDBAction Text

-- | The name of the DynamoDB table. The <tt>tableName</tt> value must
--   match the table name of the target DynamoDB table.
dynamoDBAction_tableName :: Lens' DynamoDBAction Text

-- | Undocumented member.
dynamoDBv2Action_payload :: Lens' DynamoDBv2Action (Maybe Payload)

-- | The name of the DynamoDB table.
dynamoDBv2Action_tableName :: Lens' DynamoDBv2Action Text

-- | Contains the subject and message of an email.
emailConfiguration_content :: Lens' EmailConfiguration (Maybe EmailContent)

-- | The email address that sends emails.
--   
--   If you use the AWS IoT Events managed AWS Lambda function to manage
--   your emails, you must <a>verify the email address that sends emails in
--   Amazon SES</a>.
emailConfiguration_from :: Lens' EmailConfiguration Text

-- | Contains the information of one or more recipients who receive the
--   emails.
--   
--   You must <a>add the users that receive emails to your AWS SSO
--   store</a>.
emailConfiguration_recipients :: Lens' EmailConfiguration EmailRecipients

-- | The subject of the email.
emailContent_subject :: Lens' EmailContent (Maybe Text)

-- | The message that you want to send. The message can be up to 200
--   characters.
emailContent_additionalMessage :: Lens' EmailContent (Maybe Text)

-- | Specifies one or more recipients who receive the email.
emailRecipients_to :: Lens' EmailRecipients (Maybe (NonEmpty RecipientDetail))

-- | The actions to be performed.
event_actions :: Lens' Event (Maybe [Action])

-- | Optional. The Boolean expression that, when TRUE, causes the
--   <tt>actions</tt> to be performed. If not present, the actions are
--   performed (=TRUE). If the expression result is not a Boolean value,
--   the actions are not performed (=FALSE).
event_condition :: Lens' Event (Maybe Text)

-- | The name of the event.
event_eventName :: Lens' Event Text

-- | A character separator that is used to separate records written to the
--   Kinesis Data Firehose delivery stream. Valid values are: '\n'
--   (newline), '\t' (tab), '\r\n' (Windows newline), ',' (comma).
firehoseAction_separator :: Lens' FirehoseAction (Maybe Text)

-- | You can configure the action payload when you send a message to an
--   Amazon Kinesis Data Firehose delivery stream.
firehoseAction_payload :: Lens' FirehoseAction (Maybe Payload)

-- | The name of the Kinesis Data Firehose delivery stream where the data
--   is written.
firehoseAction_deliveryStreamName :: Lens' FirehoseAction Text

-- | The value must be <tt>TRUE</tt> or <tt>FALSE</tt>. If <tt>FALSE</tt>,
--   all alarm instances created based on the alarm model are activated.
--   The default value is <tt>TRUE</tt>.
initializationConfiguration_disabledOnInitialization :: Lens' InitializationConfiguration Bool

-- | The definition of the input.
input_inputDefinition :: Lens' Input (Maybe InputDefinition)

-- | Information about the configuration of an input.
input_inputConfiguration :: Lens' Input (Maybe InputConfiguration)

-- | A brief description of the input.
inputConfiguration_inputDescription :: Lens' InputConfiguration (Maybe Text)

-- | The name of the input.
inputConfiguration_inputName :: Lens' InputConfiguration Text

-- | The ARN of the input.
inputConfiguration_inputArn :: Lens' InputConfiguration Text

-- | The time the input was created.
inputConfiguration_creationTime :: Lens' InputConfiguration UTCTime

-- | The last time the input was updated.
inputConfiguration_lastUpdateTime :: Lens' InputConfiguration UTCTime

-- | The status of the input.
inputConfiguration_status :: Lens' InputConfiguration InputStatus

-- | The attributes from the JSON payload that are made available by the
--   input. Inputs are derived from messages sent to the AWS IoT Events
--   system using <tt>BatchPutMessage</tt>. Each such message contains a
--   JSON payload, and those attributes (and their paired values) specified
--   here are available for use in the <tt>condition</tt> expressions used
--   by detectors that monitor this input.
inputDefinition_attributes :: Lens' InputDefinition (NonEmpty Attribute)

-- | The identifer of the input routed from AWS IoT SiteWise.
inputIdentifier_iotSiteWiseInputIdentifier :: Lens' InputIdentifier (Maybe IotSiteWiseInputIdentifier)

-- | The identifier of the input routed to AWS IoT Events.
inputIdentifier_iotEventsInputIdentifier :: Lens' InputIdentifier (Maybe IotEventsInputIdentifier)

-- | The time the input was created.
inputSummary_creationTime :: Lens' InputSummary (Maybe UTCTime)

-- | The status of the input.
inputSummary_status :: Lens' InputSummary (Maybe InputStatus)

-- | The name of the input.
inputSummary_inputName :: Lens' InputSummary (Maybe Text)

-- | A brief description of the input.
inputSummary_inputDescription :: Lens' InputSummary (Maybe Text)

-- | The ARN of the input.
inputSummary_inputArn :: Lens' InputSummary (Maybe Text)

-- | The last time the input was updated.
inputSummary_lastUpdateTime :: Lens' InputSummary (Maybe UTCTime)

-- | You can configure the action payload when you send a message to an AWS
--   IoT Events input.
iotEventsAction_payload :: Lens' IotEventsAction (Maybe Payload)

-- | The name of the AWS IoT Events input where the data is sent.
iotEventsAction_inputName :: Lens' IotEventsAction Text

-- | The name of the input routed to AWS IoT Events.
iotEventsInputIdentifier_inputName :: Lens' IotEventsInputIdentifier Text

-- | A unique identifier for this entry. You can use the entry ID to track
--   which data entry causes an error in case of failure. The default is a
--   new unique identifier.
iotSiteWiseAction_entryId :: Lens' IotSiteWiseAction (Maybe Text)

-- | The alias of the asset property.
iotSiteWiseAction_propertyAlias :: Lens' IotSiteWiseAction (Maybe Text)

-- | The value to send to the asset property. This value contains
--   timestamp, quality, and value (TQV) information.
iotSiteWiseAction_propertyValue :: Lens' IotSiteWiseAction (Maybe AssetPropertyValue)

-- | The ID of the asset property.
iotSiteWiseAction_propertyId :: Lens' IotSiteWiseAction (Maybe Text)

-- | The ID of the asset that has the specified property.
iotSiteWiseAction_assetId :: Lens' IotSiteWiseAction (Maybe Text)

-- | The ID of the AWS IoT SiteWise asset model.
iotSiteWiseAssetModelPropertyIdentifier_assetModelId :: Lens' IotSiteWiseAssetModelPropertyIdentifier Text

-- | The ID of the AWS IoT SiteWise asset property.
iotSiteWiseAssetModelPropertyIdentifier_propertyId :: Lens' IotSiteWiseAssetModelPropertyIdentifier Text

-- | The identifier of the AWS IoT SiteWise asset model property.
iotSiteWiseInputIdentifier_iotSiteWiseAssetModelPropertyIdentifier :: Lens' IotSiteWiseInputIdentifier (Maybe IotSiteWiseAssetModelPropertyIdentifier)

-- | You can configure the action payload when you publish a message to an
--   AWS IoT Core topic.
iotTopicPublishAction_payload :: Lens' IotTopicPublishAction (Maybe Payload)

-- | The MQTT topic of the message. You can use a string expression that
--   includes variables (<tt>$variable.&lt;variable-name&gt;</tt>) and
--   input values
--   (<tt>$input.&lt;input-name&gt;.&lt;path-to-datum&gt;</tt>) as the
--   topic string.
iotTopicPublishAction_mqttTopic :: Lens' IotTopicPublishAction Text

-- | You can configure the action payload when you send a message to a
--   Lambda function.
lambdaAction_payload :: Lens' LambdaAction (Maybe Payload)

-- | The ARN of the Lambda function that is executed.
lambdaAction_functionArn :: Lens' LambdaAction Text

-- | Information that identifies those detector models and their detectors
--   (instances) for which the logging level is given.
loggingOptions_detectorDebugOptions :: Lens' LoggingOptions (Maybe (NonEmpty DetectorDebugOption))

-- | The ARN of the role that grants permission to AWS IoT Events to
--   perform logging.
loggingOptions_roleArn :: Lens' LoggingOptions Text

-- | The logging level.
loggingOptions_level :: Lens' LoggingOptions LoggingLevel

-- | If TRUE, logging is enabled for AWS IoT Events.
loggingOptions_enabled :: Lens' LoggingOptions Bool

-- | Contains the configuration information of email notifications.
notificationAction_emailConfigurations :: Lens' NotificationAction (Maybe (NonEmpty EmailConfiguration))

-- | Contains the configuration information of SMS notifications.
notificationAction_smsConfigurations :: Lens' NotificationAction (Maybe (NonEmpty SMSConfiguration))

-- | Specifies an AWS Lambda function to manage alarm notifications. You
--   can create one or use the <a>AWS Lambda function provided by AWS IoT
--   Events</a>.
notificationAction_action :: Lens' NotificationAction NotificationTargetActions

-- | Undocumented member.
notificationTargetActions_lambdaAction :: Lens' NotificationTargetActions (Maybe LambdaAction)

-- | Specifies the actions that are performed when the state is entered and
--   the <tt>condition</tt> is <tt>TRUE</tt>.
onEnterLifecycle_events :: Lens' OnEnterLifecycle (Maybe [Event])

-- | Specifies the <tt>actions</tt> that are performed when the state is
--   exited and the <tt>condition</tt> is <tt>TRUE</tt>.
onExitLifecycle_events :: Lens' OnExitLifecycle (Maybe [Event])

-- | Specifies the actions performed when the <tt>condition</tt> evaluates
--   to TRUE.
onInputLifecycle_events :: Lens' OnInputLifecycle (Maybe [Event])

-- | Specifies the actions performed, and the next state entered, when a
--   <tt>condition</tt> evaluates to TRUE.
onInputLifecycle_transitionEvents :: Lens' OnInputLifecycle (Maybe [TransitionEvent])

-- | The content of the payload. You can use a string expression that
--   includes quoted strings (<tt>'&lt;string&gt;'</tt>), variables
--   (<tt>$variable.&lt;variable-name&gt;</tt>), input values
--   (<tt>$input.&lt;input-name&gt;.&lt;path-to-datum&gt;</tt>), string
--   concatenations, and quoted strings that contain <tt>${}</tt> as the
--   content. The recommended maximum size of a content expression is 1 KB.
payload_contentExpression :: Lens' Payload Text

-- | The value of the payload type can be either <tt>STRING</tt> or
--   <tt>JSON</tt>.
payload_type :: Lens' Payload PayloadType

-- | The AWS Single Sign-On (AWS SSO) authentication information.
recipientDetail_ssoIdentity :: Lens' RecipientDetail (Maybe SSOIdentity)

-- | The name of the timer to reset.
resetTimerAction_timerName :: Lens' ResetTimerAction Text

-- | The ARN of the routed resource. For more information, see <a>Amazon
--   Resource Names (ARNs)</a> in the <i>AWS General Reference</i>.
routedResource_arn :: Lens' RoutedResource (Maybe Text)

-- | The name of the routed resource.
routedResource_name :: Lens' RoutedResource (Maybe Text)

-- | The message that you want to send. The message can be up to 200
--   characters.
sMSConfiguration_additionalMessage :: Lens' SMSConfiguration (Maybe Text)

-- | The sender ID.
sMSConfiguration_senderId :: Lens' SMSConfiguration (Maybe Text)

-- | Specifies one or more recipients who receive the message.
--   
--   You must <a>add the users that receive SMS messages to your AWS SSO
--   store</a>.
sMSConfiguration_recipients :: Lens' SMSConfiguration (NonEmpty RecipientDetail)

-- | You can configure the action payload when you send a message as an
--   Amazon SNS push notification.
sNSTopicPublishAction_payload :: Lens' SNSTopicPublishAction (Maybe Payload)

-- | The ARN of the Amazon SNS target where the message is sent.
sNSTopicPublishAction_targetArn :: Lens' SNSTopicPublishAction Text

-- | The user ID.
sSOIdentity_userId :: Lens' SSOIdentity (Maybe Text)

-- | The ID of the AWS SSO identity store.
sSOIdentity_identityStoreId :: Lens' SSOIdentity Text

-- | The duration of the timer, in seconds. You can use a string expression
--   that includes numbers, variables
--   (<tt>$variable.&lt;variable-name&gt;</tt>), and input values
--   (<tt>$input.&lt;input-name&gt;.&lt;path-to-datum&gt;</tt>) as the
--   duration. The range of the duration is 1-31622400 seconds. To ensure
--   accuracy, the minimum duration is 60 seconds. The evaluated result of
--   the duration is rounded down to the nearest whole number.
setTimerAction_durationExpression :: Lens' SetTimerAction (Maybe Text)

-- | The number of seconds until the timer expires. The minimum value is 60
--   seconds to ensure accuracy. The maximum value is 31622400 seconds.
setTimerAction_seconds :: Lens' SetTimerAction (Maybe Natural)

-- | The name of the timer.
setTimerAction_timerName :: Lens' SetTimerAction Text

-- | The name of the variable.
setVariableAction_variableName :: Lens' SetVariableAction Text

-- | The new value of the variable.
setVariableAction_value :: Lens' SetVariableAction Text

-- | The value on the left side of the comparison operator. You can specify
--   an AWS IoT Events input attribute as an input property.
simpleRule_inputProperty :: Lens' SimpleRule Text

-- | The comparison operator.
simpleRule_comparisonOperator :: Lens' SimpleRule ComparisonOperator

-- | The value on the right side of the comparison operator. You can enter
--   a number or specify an AWS IoT Events input attribute.
simpleRule_threshold :: Lens' SimpleRule Text

-- | You can configure the action payload when you send a message to an
--   Amazon SQS queue.
sqsAction_payload :: Lens' SqsAction (Maybe Payload)

-- | Set this to TRUE if you want the data to be base-64 encoded before it
--   is written to the queue. Otherwise, set this to FALSE.
sqsAction_useBase64 :: Lens' SqsAction (Maybe Bool)

-- | The URL of the SQS queue where the data is written.
sqsAction_queueUrl :: Lens' SqsAction Text

-- | When entering this state, perform these <tt>actions</tt> if the
--   <tt>condition</tt> is TRUE.
state_onEnter :: Lens' State (Maybe OnEnterLifecycle)

-- | When an input is received and the <tt>condition</tt> is TRUE, perform
--   the specified <tt>actions</tt>.
state_onInput :: Lens' State (Maybe OnInputLifecycle)

-- | When exiting this state, perform these <tt>actions</tt> if the
--   specified <tt>condition</tt> is <tt>TRUE</tt>.
state_onExit :: Lens' State (Maybe OnExitLifecycle)

-- | The name of the state.
state_stateName :: Lens' State Text

-- | The tag's key.
tag_key :: Lens' Tag Text

-- | The tag's value.
tag_value :: Lens' Tag Text

-- | The actions to be performed.
transitionEvent_actions :: Lens' TransitionEvent (Maybe [Action])

-- | The name of the transition event.
transitionEvent_eventName :: Lens' TransitionEvent Text

-- | Required. A Boolean expression that when TRUE causes the actions to be
--   performed and the <tt>nextState</tt> to be entered.
transitionEvent_condition :: Lens' TransitionEvent Text

-- | The next state to enter.
transitionEvent_nextState :: Lens' TransitionEvent Text


module Amazonka.IoTEvents.Waiters


-- | Derived from API version <tt>2018-07-27</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   AWS IoT Events monitors your equipment or device fleets for failures
--   or changes in operation, and triggers actions when such events occur.
--   You can use AWS IoT Events API operations to create, read, update, and
--   delete inputs and detector models, and to list their versions.
module Amazonka.IoTEvents

-- | API version <tt>2018-07-27</tt> of the Amazon IoT Events SDK
--   configuration.
defaultService :: Service

-- | The request was invalid.
_InvalidRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested operation is not supported.
_UnsupportedOperationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource already exists.
_ResourceAlreadyExistsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request could not be completed due to throttling.
_ThrottlingException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An internal failure occurred.
_InternalFailureException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The service is currently unavailable.
_ServiceUnavailableException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource was not found.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A limit was exceeded.
_LimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource is in use.
_ResourceInUseException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newListInputs</a> smart constructor.
data ListInputs
ListInputs' :: Maybe Text -> Maybe Natural -> ListInputs

-- | Create a value of <a>ListInputs</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListInputs'</a>, <a>listInputs_nextToken</a> - The
--   token that you can use to return the next set of results.
--   
--   <a>$sel:maxResults:ListInputs'</a>, <a>listInputs_maxResults</a> - The
--   maximum number of results to be returned per request.
newListInputs :: ListInputs

-- | <i>See:</i> <a>newListInputsResponse</a> smart constructor.
data ListInputsResponse
ListInputsResponse' :: Maybe [InputSummary] -> Maybe Text -> Int -> ListInputsResponse

-- | Create a value of <a>ListInputsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputSummaries:ListInputsResponse'</a>,
--   <a>listInputsResponse_inputSummaries</a> - Summary information about
--   the inputs.
--   
--   <a>$sel:nextToken:ListInputs'</a>, <a>listInputsResponse_nextToken</a>
--   - The token that you can use to return the next set of results, or
--   <tt>null</tt> if there are no more results.
--   
--   <a>$sel:httpStatus:ListInputsResponse'</a>,
--   <a>listInputsResponse_httpStatus</a> - The response's http status
--   code.
newListInputsResponse :: Int -> ListInputsResponse

-- | <i>See:</i> <a>newStartDetectorModelAnalysis</a> smart constructor.
data StartDetectorModelAnalysis
StartDetectorModelAnalysis' :: DetectorModelDefinition -> StartDetectorModelAnalysis

-- | Create a value of <a>StartDetectorModelAnalysis</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:detectorModelDefinition:StartDetectorModelAnalysis'</a>,
--   <a>startDetectorModelAnalysis_detectorModelDefinition</a> -
--   Undocumented member.
newStartDetectorModelAnalysis :: DetectorModelDefinition -> StartDetectorModelAnalysis

-- | <i>See:</i> <a>newStartDetectorModelAnalysisResponse</a> smart
--   constructor.
data StartDetectorModelAnalysisResponse
StartDetectorModelAnalysisResponse' :: Maybe Text -> Int -> StartDetectorModelAnalysisResponse

-- | Create a value of <a>StartDetectorModelAnalysisResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:analysisId:StartDetectorModelAnalysisResponse'</a>,
--   <a>startDetectorModelAnalysisResponse_analysisId</a> - The ID that you
--   can use to retrieve the analysis result.
--   
--   <a>$sel:httpStatus:StartDetectorModelAnalysisResponse'</a>,
--   <a>startDetectorModelAnalysisResponse_httpStatus</a> - The response's
--   http status code.
newStartDetectorModelAnalysisResponse :: Int -> StartDetectorModelAnalysisResponse

-- | <i>See:</i> <a>newPutLoggingOptions</a> smart constructor.
data PutLoggingOptions
PutLoggingOptions' :: LoggingOptions -> PutLoggingOptions

-- | Create a value of <a>PutLoggingOptions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:loggingOptions:PutLoggingOptions'</a>,
--   <a>putLoggingOptions_loggingOptions</a> - The new values of the AWS
--   IoT Events logging options.
newPutLoggingOptions :: LoggingOptions -> PutLoggingOptions

-- | <i>See:</i> <a>newPutLoggingOptionsResponse</a> smart constructor.
data PutLoggingOptionsResponse
PutLoggingOptionsResponse' :: PutLoggingOptionsResponse

-- | Create a value of <a>PutLoggingOptionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newPutLoggingOptionsResponse :: PutLoggingOptionsResponse

-- | <i>See:</i> <a>newDescribeDetectorModelAnalysis</a> smart constructor.
data DescribeDetectorModelAnalysis
DescribeDetectorModelAnalysis' :: Text -> DescribeDetectorModelAnalysis

-- | Create a value of <a>DescribeDetectorModelAnalysis</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:analysisId:DescribeDetectorModelAnalysis'</a>,
--   <a>describeDetectorModelAnalysis_analysisId</a> - The ID of the
--   analysis result that you want to retrieve.
newDescribeDetectorModelAnalysis :: Text -> DescribeDetectorModelAnalysis

-- | <i>See:</i> <a>newDescribeDetectorModelAnalysisResponse</a> smart
--   constructor.
data DescribeDetectorModelAnalysisResponse
DescribeDetectorModelAnalysisResponse' :: Maybe AnalysisStatus -> Int -> DescribeDetectorModelAnalysisResponse

-- | Create a value of <a>DescribeDetectorModelAnalysisResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:DescribeDetectorModelAnalysisResponse'</a>,
--   <a>describeDetectorModelAnalysisResponse_status</a> - The status of
--   the analysis activity. The status can be one of the following values:
--   
--   <ul>
--   <li><tt>RUNNING</tt> - AWS IoT Events is analyzing your detector
--   model. This process can take several minutes to complete.</li>
--   <li><tt>COMPLETE</tt> - AWS IoT Events finished analyzing your
--   detector model.</li>
--   <li><tt>FAILED</tt> - AWS IoT Events couldn't analyze your detector
--   model. Try again later.</li>
--   </ul>
--   
--   <a>$sel:httpStatus:DescribeDetectorModelAnalysisResponse'</a>,
--   <a>describeDetectorModelAnalysisResponse_httpStatus</a> - The
--   response's http status code.
newDescribeDetectorModelAnalysisResponse :: Int -> DescribeDetectorModelAnalysisResponse

-- | <i>See:</i> <a>newCreateInput</a> smart constructor.
data CreateInput
CreateInput' :: Maybe Text -> Maybe [Tag] -> Text -> InputDefinition -> CreateInput

-- | Create a value of <a>CreateInput</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputDescription:CreateInput'</a>,
--   <a>createInput_inputDescription</a> - A brief description of the
--   input.
--   
--   <a>$sel:tags:CreateInput'</a>, <a>createInput_tags</a> - Metadata that
--   can be used to manage the input.
--   
--   <a>$sel:inputName:CreateInput'</a>, <a>createInput_inputName</a> - The
--   name you want to give to the input.
--   
--   <a>$sel:inputDefinition:CreateInput'</a>,
--   <a>createInput_inputDefinition</a> - The definition of the input.
newCreateInput :: Text -> InputDefinition -> CreateInput

-- | <i>See:</i> <a>newCreateInputResponse</a> smart constructor.
data CreateInputResponse
CreateInputResponse' :: Maybe InputConfiguration -> Int -> CreateInputResponse

-- | Create a value of <a>CreateInputResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputConfiguration:CreateInputResponse'</a>,
--   <a>createInputResponse_inputConfiguration</a> - Information about the
--   configuration of the input.
--   
--   <a>$sel:httpStatus:CreateInputResponse'</a>,
--   <a>createInputResponse_httpStatus</a> - The response's http status
--   code.
newCreateInputResponse :: Int -> CreateInputResponse

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The ARN of the resource.
newListTagsForResource :: Text -> ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe [Tag] -> Int -> ListTagsForResourceResponse

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - The list of tags assigned to
--   the resource.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | <i>See:</i> <a>newListAlarmModels</a> smart constructor.
data ListAlarmModels
ListAlarmModels' :: Maybe Text -> Maybe Natural -> ListAlarmModels

-- | Create a value of <a>ListAlarmModels</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListAlarmModels'</a>,
--   <a>listAlarmModels_nextToken</a> - The token that you can use to
--   return the next set of results.
--   
--   <a>$sel:maxResults:ListAlarmModels'</a>,
--   <a>listAlarmModels_maxResults</a> - The maximum number of results to
--   be returned per request.
newListAlarmModels :: ListAlarmModels

-- | <i>See:</i> <a>newListAlarmModelsResponse</a> smart constructor.
data ListAlarmModelsResponse
ListAlarmModelsResponse' :: Maybe Text -> Maybe [AlarmModelSummary] -> Int -> ListAlarmModelsResponse

-- | Create a value of <a>ListAlarmModelsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListAlarmModels'</a>,
--   <a>listAlarmModelsResponse_nextToken</a> - The token that you can use
--   to return the next set of results, or <tt>null</tt> if there are no
--   more results.
--   
--   <a>$sel:alarmModelSummaries:ListAlarmModelsResponse'</a>,
--   <a>listAlarmModelsResponse_alarmModelSummaries</a> - A list that
--   summarizes each alarm model.
--   
--   <a>$sel:httpStatus:ListAlarmModelsResponse'</a>,
--   <a>listAlarmModelsResponse_httpStatus</a> - The response's http status
--   code.
newListAlarmModelsResponse :: Int -> ListAlarmModelsResponse

-- | <i>See:</i> <a>newDeleteAlarmModel</a> smart constructor.
data DeleteAlarmModel
DeleteAlarmModel' :: Text -> DeleteAlarmModel

-- | Create a value of <a>DeleteAlarmModel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:alarmModelName:DeleteAlarmModel'</a>,
--   <a>deleteAlarmModel_alarmModelName</a> - The name of the alarm model.
newDeleteAlarmModel :: Text -> DeleteAlarmModel

-- | <i>See:</i> <a>newDeleteAlarmModelResponse</a> smart constructor.
data DeleteAlarmModelResponse
DeleteAlarmModelResponse' :: Int -> DeleteAlarmModelResponse

-- | Create a value of <a>DeleteAlarmModelResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteAlarmModelResponse'</a>,
--   <a>deleteAlarmModelResponse_httpStatus</a> - The response's http
--   status code.
newDeleteAlarmModelResponse :: Int -> DeleteAlarmModelResponse

-- | <i>See:</i> <a>newUpdateAlarmModel</a> smart constructor.
data UpdateAlarmModel
UpdateAlarmModel' :: Maybe Natural -> Maybe AlarmNotification -> Maybe Text -> Maybe AlarmEventActions -> Maybe AlarmCapabilities -> Text -> Text -> AlarmRule -> UpdateAlarmModel

-- | Create a value of <a>UpdateAlarmModel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:severity:UpdateAlarmModel'</a>,
--   <a>updateAlarmModel_severity</a> - A non-negative integer that
--   reflects the severity level of the alarm.
--   
--   <a>$sel:alarmNotification:UpdateAlarmModel'</a>,
--   <a>updateAlarmModel_alarmNotification</a> - Contains information about
--   one or more notification actions.
--   
--   <a>$sel:alarmModelDescription:UpdateAlarmModel'</a>,
--   <a>updateAlarmModel_alarmModelDescription</a> - The description of the
--   alarm model.
--   
--   <a>$sel:alarmEventActions:UpdateAlarmModel'</a>,
--   <a>updateAlarmModel_alarmEventActions</a> - Contains information about
--   one or more alarm actions.
--   
--   <a>$sel:alarmCapabilities:UpdateAlarmModel'</a>,
--   <a>updateAlarmModel_alarmCapabilities</a> - Contains the configuration
--   information of alarm state changes.
--   
--   <a>$sel:alarmModelName:UpdateAlarmModel'</a>,
--   <a>updateAlarmModel_alarmModelName</a> - The name of the alarm model.
--   
--   <a>$sel:roleArn:UpdateAlarmModel'</a>, <a>updateAlarmModel_roleArn</a>
--   - The ARN of the IAM role that allows the alarm to perform actions and
--   access AWS resources. For more information, see <a>Amazon Resource
--   Names (ARNs)</a> in the <i>AWS General Reference</i>.
--   
--   <a>$sel:alarmRule:UpdateAlarmModel'</a>,
--   <a>updateAlarmModel_alarmRule</a> - Defines when your alarm is
--   invoked.
newUpdateAlarmModel :: Text -> Text -> AlarmRule -> UpdateAlarmModel

-- | <i>See:</i> <a>newUpdateAlarmModelResponse</a> smart constructor.
data UpdateAlarmModelResponse
UpdateAlarmModelResponse' :: Maybe POSIX -> Maybe AlarmModelVersionStatus -> Maybe POSIX -> Maybe Text -> Maybe Text -> Int -> UpdateAlarmModelResponse

-- | Create a value of <a>UpdateAlarmModelResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:UpdateAlarmModelResponse'</a>,
--   <a>updateAlarmModelResponse_creationTime</a> - The time the alarm
--   model was created, in the Unix epoch format.
--   
--   <a>$sel:status:UpdateAlarmModelResponse'</a>,
--   <a>updateAlarmModelResponse_status</a> - The status of the alarm
--   model. The status can be one of the following values:
--   
--   <ul>
--   <li><tt>ACTIVE</tt> - The alarm model is active and it's ready to
--   evaluate data.</li>
--   <li><tt>ACTIVATING</tt> - AWS IoT Events is activating your alarm
--   model. Activating an alarm model can take up to a few minutes.</li>
--   <li><tt>INACTIVE</tt> - The alarm model is inactive, so it isn't ready
--   to evaluate data. Check your alarm model information and update the
--   alarm model.</li>
--   <li><tt>FAILED</tt> - You couldn't create or update the alarm model.
--   Check your alarm model information and try again.</li>
--   </ul>
--   
--   <a>$sel:lastUpdateTime:UpdateAlarmModelResponse'</a>,
--   <a>updateAlarmModelResponse_lastUpdateTime</a> - The time the alarm
--   model was last updated, in the Unix epoch format.
--   
--   <a>$sel:alarmModelVersion:UpdateAlarmModelResponse'</a>,
--   <a>updateAlarmModelResponse_alarmModelVersion</a> - The version of the
--   alarm model.
--   
--   <a>$sel:alarmModelArn:UpdateAlarmModelResponse'</a>,
--   <a>updateAlarmModelResponse_alarmModelArn</a> - The ARN of the alarm
--   model. For more information, see <a>Amazon Resource Names (ARNs)</a>
--   in the <i>AWS General Reference</i>.
--   
--   <a>$sel:httpStatus:UpdateAlarmModelResponse'</a>,
--   <a>updateAlarmModelResponse_httpStatus</a> - The response's http
--   status code.
newUpdateAlarmModelResponse :: Int -> UpdateAlarmModelResponse

-- | <i>See:</i> <a>newCreateAlarmModel</a> smart constructor.
data CreateAlarmModel
CreateAlarmModel' :: Maybe Natural -> Maybe AlarmNotification -> Maybe Text -> Maybe Text -> Maybe AlarmEventActions -> Maybe AlarmCapabilities -> Maybe [Tag] -> Text -> Text -> AlarmRule -> CreateAlarmModel

-- | Create a value of <a>CreateAlarmModel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:severity:CreateAlarmModel'</a>,
--   <a>createAlarmModel_severity</a> - A non-negative integer that
--   reflects the severity level of the alarm.
--   
--   <a>$sel:alarmNotification:CreateAlarmModel'</a>,
--   <a>createAlarmModel_alarmNotification</a> - Contains information about
--   one or more notification actions.
--   
--   <a>$sel:key:CreateAlarmModel'</a>, <a>createAlarmModel_key</a> - An
--   input attribute used as a key to create an alarm. AWS IoT Events
--   routes <a>inputs</a> associated with this key to the alarm.
--   
--   <a>$sel:alarmModelDescription:CreateAlarmModel'</a>,
--   <a>createAlarmModel_alarmModelDescription</a> - A description that
--   tells you what the alarm model detects.
--   
--   <a>$sel:alarmEventActions:CreateAlarmModel'</a>,
--   <a>createAlarmModel_alarmEventActions</a> - Contains information about
--   one or more alarm actions.
--   
--   <a>$sel:alarmCapabilities:CreateAlarmModel'</a>,
--   <a>createAlarmModel_alarmCapabilities</a> - Contains the configuration
--   information of alarm state changes.
--   
--   <a>$sel:tags:CreateAlarmModel'</a>, <a>createAlarmModel_tags</a> - A
--   list of key-value pairs that contain metadata for the alarm model. The
--   tags help you manage the alarm model. For more information, see
--   <a>Tagging your AWS IoT Events resources</a> in the <i>AWS IoT Events
--   Developer Guide</i>.
--   
--   You can create up to 50 tags for one alarm model.
--   
--   <a>$sel:alarmModelName:CreateAlarmModel'</a>,
--   <a>createAlarmModel_alarmModelName</a> - A unique name that helps you
--   identify the alarm model. You can't change this name after you create
--   the alarm model.
--   
--   <a>$sel:roleArn:CreateAlarmModel'</a>, <a>createAlarmModel_roleArn</a>
--   - The ARN of the IAM role that allows the alarm to perform actions and
--   access AWS resources. For more information, see <a>Amazon Resource
--   Names (ARNs)</a> in the <i>AWS General Reference</i>.
--   
--   <a>$sel:alarmRule:CreateAlarmModel'</a>,
--   <a>createAlarmModel_alarmRule</a> - Defines when your alarm is
--   invoked.
newCreateAlarmModel :: Text -> Text -> AlarmRule -> CreateAlarmModel

-- | <i>See:</i> <a>newCreateAlarmModelResponse</a> smart constructor.
data CreateAlarmModelResponse
CreateAlarmModelResponse' :: Maybe POSIX -> Maybe AlarmModelVersionStatus -> Maybe POSIX -> Maybe Text -> Maybe Text -> Int -> CreateAlarmModelResponse

-- | Create a value of <a>CreateAlarmModelResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:CreateAlarmModelResponse'</a>,
--   <a>createAlarmModelResponse_creationTime</a> - The time the alarm
--   model was created, in the Unix epoch format.
--   
--   <a>$sel:status:CreateAlarmModelResponse'</a>,
--   <a>createAlarmModelResponse_status</a> - The status of the alarm
--   model. The status can be one of the following values:
--   
--   <ul>
--   <li><tt>ACTIVE</tt> - The alarm model is active and it's ready to
--   evaluate data.</li>
--   <li><tt>ACTIVATING</tt> - AWS IoT Events is activating your alarm
--   model. Activating an alarm model can take up to a few minutes.</li>
--   <li><tt>INACTIVE</tt> - The alarm model is inactive, so it isn't ready
--   to evaluate data. Check your alarm model information and update the
--   alarm model.</li>
--   <li><tt>FAILED</tt> - You couldn't create or update the alarm model.
--   Check your alarm model information and try again.</li>
--   </ul>
--   
--   <a>$sel:lastUpdateTime:CreateAlarmModelResponse'</a>,
--   <a>createAlarmModelResponse_lastUpdateTime</a> - The time the alarm
--   model was last updated, in the Unix epoch format.
--   
--   <a>$sel:alarmModelVersion:CreateAlarmModelResponse'</a>,
--   <a>createAlarmModelResponse_alarmModelVersion</a> - The version of the
--   alarm model.
--   
--   <a>$sel:alarmModelArn:CreateAlarmModelResponse'</a>,
--   <a>createAlarmModelResponse_alarmModelArn</a> - The ARN of the alarm
--   model. For more information, see <a>Amazon Resource Names (ARNs)</a>
--   in the <i>AWS General Reference</i>.
--   
--   <a>$sel:httpStatus:CreateAlarmModelResponse'</a>,
--   <a>createAlarmModelResponse_httpStatus</a> - The response's http
--   status code.
newCreateAlarmModelResponse :: Int -> CreateAlarmModelResponse

-- | <i>See:</i> <a>newGetDetectorModelAnalysisResults</a> smart
--   constructor.
data GetDetectorModelAnalysisResults
GetDetectorModelAnalysisResults' :: Maybe Text -> Maybe Int -> Text -> GetDetectorModelAnalysisResults

-- | Create a value of <a>GetDetectorModelAnalysisResults</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetDetectorModelAnalysisResults'</a>,
--   <a>getDetectorModelAnalysisResults_nextToken</a> - The token that you
--   can use to return the next set of results.
--   
--   <a>$sel:maxResults:GetDetectorModelAnalysisResults'</a>,
--   <a>getDetectorModelAnalysisResults_maxResults</a> - The maximum number
--   of results to be returned per request.
--   
--   <a>$sel:analysisId:GetDetectorModelAnalysisResults'</a>,
--   <a>getDetectorModelAnalysisResults_analysisId</a> - The ID of the
--   analysis result that you want to retrieve.
newGetDetectorModelAnalysisResults :: Text -> GetDetectorModelAnalysisResults

-- | <i>See:</i> <a>newGetDetectorModelAnalysisResultsResponse</a> smart
--   constructor.
data GetDetectorModelAnalysisResultsResponse
GetDetectorModelAnalysisResultsResponse' :: Maybe Text -> Maybe [AnalysisResult] -> Int -> GetDetectorModelAnalysisResultsResponse

-- | Create a value of <a>GetDetectorModelAnalysisResultsResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetDetectorModelAnalysisResults'</a>,
--   <a>getDetectorModelAnalysisResultsResponse_nextToken</a> - The token
--   that you can use to return the next set of results, or <tt>null</tt>
--   if there are no more results.
--   
--   <a>$sel:analysisResults:GetDetectorModelAnalysisResultsResponse'</a>,
--   <a>getDetectorModelAnalysisResultsResponse_analysisResults</a> -
--   Contains information about one or more analysis results.
--   
--   <a>$sel:httpStatus:GetDetectorModelAnalysisResultsResponse'</a>,
--   <a>getDetectorModelAnalysisResultsResponse_httpStatus</a> - The
--   response's http status code.
newGetDetectorModelAnalysisResultsResponse :: Int -> GetDetectorModelAnalysisResultsResponse

-- | <i>See:</i> <a>newListDetectorModelVersions</a> smart constructor.
data ListDetectorModelVersions
ListDetectorModelVersions' :: Maybe Text -> Maybe Natural -> Text -> ListDetectorModelVersions

-- | Create a value of <a>ListDetectorModelVersions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDetectorModelVersions'</a>,
--   <a>listDetectorModelVersions_nextToken</a> - The token that you can
--   use to return the next set of results.
--   
--   <a>$sel:maxResults:ListDetectorModelVersions'</a>,
--   <a>listDetectorModelVersions_maxResults</a> - The maximum number of
--   results to be returned per request.
--   
--   <a>$sel:detectorModelName:ListDetectorModelVersions'</a>,
--   <a>listDetectorModelVersions_detectorModelName</a> - The name of the
--   detector model whose versions are returned.
newListDetectorModelVersions :: Text -> ListDetectorModelVersions

-- | <i>See:</i> <a>newListDetectorModelVersionsResponse</a> smart
--   constructor.
data ListDetectorModelVersionsResponse
ListDetectorModelVersionsResponse' :: Maybe Text -> Maybe [DetectorModelVersionSummary] -> Int -> ListDetectorModelVersionsResponse

-- | Create a value of <a>ListDetectorModelVersionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDetectorModelVersions'</a>,
--   <a>listDetectorModelVersionsResponse_nextToken</a> - The token that
--   you can use to return the next set of results, or <tt>null</tt> if
--   there are no more results.
--   
--   
--   <a>$sel:detectorModelVersionSummaries:ListDetectorModelVersionsResponse'</a>,
--   <a>listDetectorModelVersionsResponse_detectorModelVersionSummaries</a>
--   - Summary information about the detector model versions.
--   
--   <a>$sel:httpStatus:ListDetectorModelVersionsResponse'</a>,
--   <a>listDetectorModelVersionsResponse_httpStatus</a> - The response's
--   http status code.
newListDetectorModelVersionsResponse :: Int -> ListDetectorModelVersionsResponse

-- | <i>See:</i> <a>newDescribeAlarmModel</a> smart constructor.
data DescribeAlarmModel
DescribeAlarmModel' :: Maybe Text -> Text -> DescribeAlarmModel

-- | Create a value of <a>DescribeAlarmModel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:alarmModelVersion:DescribeAlarmModel'</a>,
--   <a>describeAlarmModel_alarmModelVersion</a> - The version of the alarm
--   model.
--   
--   <a>$sel:alarmModelName:DescribeAlarmModel'</a>,
--   <a>describeAlarmModel_alarmModelName</a> - The name of the alarm
--   model.
newDescribeAlarmModel :: Text -> DescribeAlarmModel

-- | <i>See:</i> <a>newDescribeAlarmModelResponse</a> smart constructor.
data DescribeAlarmModelResponse
DescribeAlarmModelResponse' :: Maybe POSIX -> Maybe AlarmModelVersionStatus -> Maybe AlarmRule -> Maybe Text -> Maybe Natural -> Maybe AlarmNotification -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe AlarmEventActions -> Maybe AlarmCapabilities -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> DescribeAlarmModelResponse

-- | Create a value of <a>DescribeAlarmModelResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:DescribeAlarmModelResponse'</a>,
--   <a>describeAlarmModelResponse_creationTime</a> - The time the alarm
--   model was created, in the Unix epoch format.
--   
--   <a>$sel:status:DescribeAlarmModelResponse'</a>,
--   <a>describeAlarmModelResponse_status</a> - The status of the alarm
--   model. The status can be one of the following values:
--   
--   <ul>
--   <li><tt>ACTIVE</tt> - The alarm model is active and it's ready to
--   evaluate data.</li>
--   <li><tt>ACTIVATING</tt> - AWS IoT Events is activating your alarm
--   model. Activating an alarm model can take up to a few minutes.</li>
--   <li><tt>INACTIVE</tt> - The alarm model is inactive, so it isn't ready
--   to evaluate data. Check your alarm model information and update the
--   alarm model.</li>
--   <li><tt>FAILED</tt> - You couldn't create or update the alarm model.
--   Check your alarm model information and try again.</li>
--   </ul>
--   
--   <a>$sel:alarmRule:DescribeAlarmModelResponse'</a>,
--   <a>describeAlarmModelResponse_alarmRule</a> - Defines when your alarm
--   is invoked.
--   
--   <a>$sel:alarmModelName:DescribeAlarmModel'</a>,
--   <a>describeAlarmModelResponse_alarmModelName</a> - The name of the
--   alarm model.
--   
--   <a>$sel:severity:DescribeAlarmModelResponse'</a>,
--   <a>describeAlarmModelResponse_severity</a> - A non-negative integer
--   that reflects the severity level of the alarm.
--   
--   <a>$sel:alarmNotification:DescribeAlarmModelResponse'</a>,
--   <a>describeAlarmModelResponse_alarmNotification</a> - Contains
--   information about one or more notification actions.
--   
--   <a>$sel:key:DescribeAlarmModelResponse'</a>,
--   <a>describeAlarmModelResponse_key</a> - An input attribute used as a
--   key to create an alarm. AWS IoT Events routes <a>inputs</a> associated
--   with this key to the alarm.
--   
--   <a>$sel:statusMessage:DescribeAlarmModelResponse'</a>,
--   <a>describeAlarmModelResponse_statusMessage</a> - Contains information
--   about the status of the alarm model.
--   
--   <a>$sel:alarmModelDescription:DescribeAlarmModelResponse'</a>,
--   <a>describeAlarmModelResponse_alarmModelDescription</a> - The
--   description of the alarm model.
--   
--   <a>$sel:alarmEventActions:DescribeAlarmModelResponse'</a>,
--   <a>describeAlarmModelResponse_alarmEventActions</a> - Contains
--   information about one or more alarm actions.
--   
--   <a>$sel:alarmCapabilities:DescribeAlarmModelResponse'</a>,
--   <a>describeAlarmModelResponse_alarmCapabilities</a> - Contains the
--   configuration information of alarm state changes.
--   
--   <a>$sel:lastUpdateTime:DescribeAlarmModelResponse'</a>,
--   <a>describeAlarmModelResponse_lastUpdateTime</a> - The time the alarm
--   model was last updated, in the Unix epoch format.
--   
--   <a>$sel:alarmModelVersion:DescribeAlarmModel'</a>,
--   <a>describeAlarmModelResponse_alarmModelVersion</a> - The version of
--   the alarm model.
--   
--   <a>$sel:alarmModelArn:DescribeAlarmModelResponse'</a>,
--   <a>describeAlarmModelResponse_alarmModelArn</a> - The ARN of the alarm
--   model. For more information, see <a>Amazon Resource Names (ARNs)</a>
--   in the <i>AWS General Reference</i>.
--   
--   <a>$sel:roleArn:DescribeAlarmModelResponse'</a>,
--   <a>describeAlarmModelResponse_roleArn</a> - The ARN of the IAM role
--   that allows the alarm to perform actions and access AWS resources. For
--   more information, see <a>Amazon Resource Names (ARNs)</a> in the
--   <i>AWS General Reference</i>.
--   
--   <a>$sel:httpStatus:DescribeAlarmModelResponse'</a>,
--   <a>describeAlarmModelResponse_httpStatus</a> - The response's http
--   status code.
newDescribeAlarmModelResponse :: Int -> DescribeAlarmModelResponse

-- | <i>See:</i> <a>newCreateDetectorModel</a> smart constructor.
data CreateDetectorModel
CreateDetectorModel' :: Maybe Text -> Maybe Text -> Maybe EvaluationMethod -> Maybe [Tag] -> Text -> DetectorModelDefinition -> Text -> CreateDetectorModel

-- | Create a value of <a>CreateDetectorModel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:detectorModelDescription:CreateDetectorModel'</a>,
--   <a>createDetectorModel_detectorModelDescription</a> - A brief
--   description of the detector model.
--   
--   <a>$sel:key:CreateDetectorModel'</a>, <a>createDetectorModel_key</a> -
--   The input attribute key used to identify a device or system to create
--   a detector (an instance of the detector model) and then to route each
--   input received to the appropriate detector (instance). This parameter
--   uses a JSON-path expression in the message payload of each input to
--   specify the attribute-value pair that is used to identify the device
--   associated with the input.
--   
--   <a>$sel:evaluationMethod:CreateDetectorModel'</a>,
--   <a>createDetectorModel_evaluationMethod</a> - Information about the
--   order in which events are evaluated and how actions are executed.
--   
--   <a>$sel:tags:CreateDetectorModel'</a>, <a>createDetectorModel_tags</a>
--   - Metadata that can be used to manage the detector model.
--   
--   <a>$sel:detectorModelName:CreateDetectorModel'</a>,
--   <a>createDetectorModel_detectorModelName</a> - The name of the
--   detector model.
--   
--   <a>$sel:detectorModelDefinition:CreateDetectorModel'</a>,
--   <a>createDetectorModel_detectorModelDefinition</a> - Information that
--   defines how the detectors operate.
--   
--   <a>$sel:roleArn:CreateDetectorModel'</a>,
--   <a>createDetectorModel_roleArn</a> - The ARN of the role that grants
--   permission to AWS IoT Events to perform its operations.
newCreateDetectorModel :: Text -> DetectorModelDefinition -> Text -> CreateDetectorModel

-- | <i>See:</i> <a>newCreateDetectorModelResponse</a> smart constructor.
data CreateDetectorModelResponse
CreateDetectorModelResponse' :: Maybe DetectorModelConfiguration -> Int -> CreateDetectorModelResponse

-- | Create a value of <a>CreateDetectorModelResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:detectorModelConfiguration:CreateDetectorModelResponse'</a>,
--   <a>createDetectorModelResponse_detectorModelConfiguration</a> -
--   Information about how the detector model is configured.
--   
--   <a>$sel:httpStatus:CreateDetectorModelResponse'</a>,
--   <a>createDetectorModelResponse_httpStatus</a> - The response's http
--   status code.
newCreateDetectorModelResponse :: Int -> CreateDetectorModelResponse

-- | <i>See:</i> <a>newListDetectorModels</a> smart constructor.
data ListDetectorModels
ListDetectorModels' :: Maybe Text -> Maybe Natural -> ListDetectorModels

-- | Create a value of <a>ListDetectorModels</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDetectorModels'</a>,
--   <a>listDetectorModels_nextToken</a> - The token that you can use to
--   return the next set of results.
--   
--   <a>$sel:maxResults:ListDetectorModels'</a>,
--   <a>listDetectorModels_maxResults</a> - The maximum number of results
--   to be returned per request.
newListDetectorModels :: ListDetectorModels

-- | <i>See:</i> <a>newListDetectorModelsResponse</a> smart constructor.
data ListDetectorModelsResponse
ListDetectorModelsResponse' :: Maybe Text -> Maybe [DetectorModelSummary] -> Int -> ListDetectorModelsResponse

-- | Create a value of <a>ListDetectorModelsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDetectorModels'</a>,
--   <a>listDetectorModelsResponse_nextToken</a> - The token that you can
--   use to return the next set of results, or <tt>null</tt> if there are
--   no more results.
--   
--   <a>$sel:detectorModelSummaries:ListDetectorModelsResponse'</a>,
--   <a>listDetectorModelsResponse_detectorModelSummaries</a> - Summary
--   information about the detector models.
--   
--   <a>$sel:httpStatus:ListDetectorModelsResponse'</a>,
--   <a>listDetectorModelsResponse_httpStatus</a> - The response's http
--   status code.
newListDetectorModelsResponse :: Int -> ListDetectorModelsResponse

-- | <i>See:</i> <a>newUpdateDetectorModel</a> smart constructor.
data UpdateDetectorModel
UpdateDetectorModel' :: Maybe Text -> Maybe EvaluationMethod -> Text -> DetectorModelDefinition -> Text -> UpdateDetectorModel

-- | Create a value of <a>UpdateDetectorModel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:detectorModelDescription:UpdateDetectorModel'</a>,
--   <a>updateDetectorModel_detectorModelDescription</a> - A brief
--   description of the detector model.
--   
--   <a>$sel:evaluationMethod:UpdateDetectorModel'</a>,
--   <a>updateDetectorModel_evaluationMethod</a> - Information about the
--   order in which events are evaluated and how actions are executed.
--   
--   <a>$sel:detectorModelName:UpdateDetectorModel'</a>,
--   <a>updateDetectorModel_detectorModelName</a> - The name of the
--   detector model that is updated.
--   
--   <a>$sel:detectorModelDefinition:UpdateDetectorModel'</a>,
--   <a>updateDetectorModel_detectorModelDefinition</a> - Information that
--   defines how a detector operates.
--   
--   <a>$sel:roleArn:UpdateDetectorModel'</a>,
--   <a>updateDetectorModel_roleArn</a> - The ARN of the role that grants
--   permission to AWS IoT Events to perform its operations.
newUpdateDetectorModel :: Text -> DetectorModelDefinition -> Text -> UpdateDetectorModel

-- | <i>See:</i> <a>newUpdateDetectorModelResponse</a> smart constructor.
data UpdateDetectorModelResponse
UpdateDetectorModelResponse' :: Maybe DetectorModelConfiguration -> Int -> UpdateDetectorModelResponse

-- | Create a value of <a>UpdateDetectorModelResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:detectorModelConfiguration:UpdateDetectorModelResponse'</a>,
--   <a>updateDetectorModelResponse_detectorModelConfiguration</a> -
--   Information about how the detector model is configured.
--   
--   <a>$sel:httpStatus:UpdateDetectorModelResponse'</a>,
--   <a>updateDetectorModelResponse_httpStatus</a> - The response's http
--   status code.
newUpdateDetectorModelResponse :: Int -> UpdateDetectorModelResponse

-- | <i>See:</i> <a>newDeleteDetectorModel</a> smart constructor.
data DeleteDetectorModel
DeleteDetectorModel' :: Text -> DeleteDetectorModel

-- | Create a value of <a>DeleteDetectorModel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:detectorModelName:DeleteDetectorModel'</a>,
--   <a>deleteDetectorModel_detectorModelName</a> - The name of the
--   detector model to be deleted.
newDeleteDetectorModel :: Text -> DeleteDetectorModel

-- | <i>See:</i> <a>newDeleteDetectorModelResponse</a> smart constructor.
data DeleteDetectorModelResponse
DeleteDetectorModelResponse' :: Int -> DeleteDetectorModelResponse

-- | Create a value of <a>DeleteDetectorModelResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteDetectorModelResponse'</a>,
--   <a>deleteDetectorModelResponse_httpStatus</a> - The response's http
--   status code.
newDeleteDetectorModelResponse :: Int -> DeleteDetectorModelResponse

-- | <i>See:</i> <a>newDeleteInput</a> smart constructor.
data DeleteInput
DeleteInput' :: Text -> DeleteInput

-- | Create a value of <a>DeleteInput</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputName:DeleteInput'</a>, <a>deleteInput_inputName</a> - The
--   name of the input to delete.
newDeleteInput :: Text -> DeleteInput

-- | <i>See:</i> <a>newDeleteInputResponse</a> smart constructor.
data DeleteInputResponse
DeleteInputResponse' :: Int -> DeleteInputResponse

-- | Create a value of <a>DeleteInputResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteInputResponse'</a>,
--   <a>deleteInputResponse_httpStatus</a> - The response's http status
--   code.
newDeleteInputResponse :: Int -> DeleteInputResponse

-- | <i>See:</i> <a>newUpdateInput</a> smart constructor.
data UpdateInput
UpdateInput' :: Maybe Text -> Text -> InputDefinition -> UpdateInput

-- | Create a value of <a>UpdateInput</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputDescription:UpdateInput'</a>,
--   <a>updateInput_inputDescription</a> - A brief description of the
--   input.
--   
--   <a>$sel:inputName:UpdateInput'</a>, <a>updateInput_inputName</a> - The
--   name of the input you want to update.
--   
--   <a>$sel:inputDefinition:UpdateInput'</a>,
--   <a>updateInput_inputDefinition</a> - The definition of the input.
newUpdateInput :: Text -> InputDefinition -> UpdateInput

-- | <i>See:</i> <a>newUpdateInputResponse</a> smart constructor.
data UpdateInputResponse
UpdateInputResponse' :: Maybe InputConfiguration -> Int -> UpdateInputResponse

-- | Create a value of <a>UpdateInputResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputConfiguration:UpdateInputResponse'</a>,
--   <a>updateInputResponse_inputConfiguration</a> - Information about the
--   configuration of the input.
--   
--   <a>$sel:httpStatus:UpdateInputResponse'</a>,
--   <a>updateInputResponse_httpStatus</a> - The response's http status
--   code.
newUpdateInputResponse :: Int -> UpdateInputResponse

-- | <i>See:</i> <a>newListAlarmModelVersions</a> smart constructor.
data ListAlarmModelVersions
ListAlarmModelVersions' :: Maybe Text -> Maybe Natural -> Text -> ListAlarmModelVersions

-- | Create a value of <a>ListAlarmModelVersions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListAlarmModelVersions'</a>,
--   <a>listAlarmModelVersions_nextToken</a> - The token that you can use
--   to return the next set of results.
--   
--   <a>$sel:maxResults:ListAlarmModelVersions'</a>,
--   <a>listAlarmModelVersions_maxResults</a> - The maximum number of
--   results to be returned per request.
--   
--   <a>$sel:alarmModelName:ListAlarmModelVersions'</a>,
--   <a>listAlarmModelVersions_alarmModelName</a> - The name of the alarm
--   model.
newListAlarmModelVersions :: Text -> ListAlarmModelVersions

-- | <i>See:</i> <a>newListAlarmModelVersionsResponse</a> smart
--   constructor.
data ListAlarmModelVersionsResponse
ListAlarmModelVersionsResponse' :: Maybe [AlarmModelVersionSummary] -> Maybe Text -> Int -> ListAlarmModelVersionsResponse

-- | Create a value of <a>ListAlarmModelVersionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:alarmModelVersionSummaries:ListAlarmModelVersionsResponse'</a>,
--   <a>listAlarmModelVersionsResponse_alarmModelVersionSummaries</a> - A
--   list that summarizes each alarm model version.
--   
--   <a>$sel:nextToken:ListAlarmModelVersions'</a>,
--   <a>listAlarmModelVersionsResponse_nextToken</a> - The token that you
--   can use to return the next set of results, or <tt>null</tt> if there
--   are no more results.
--   
--   <a>$sel:httpStatus:ListAlarmModelVersionsResponse'</a>,
--   <a>listAlarmModelVersionsResponse_httpStatus</a> - The response's http
--   status code.
newListAlarmModelVersionsResponse :: Int -> ListAlarmModelVersionsResponse

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> [Tag] -> TagResource

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The ARN of the resource.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - The new or
--   modified tags for the resource.
newTagResource :: Text -> TagResource

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | <i>See:</i> <a>newDescribeDetectorModel</a> smart constructor.
data DescribeDetectorModel
DescribeDetectorModel' :: Maybe Text -> Text -> DescribeDetectorModel

-- | Create a value of <a>DescribeDetectorModel</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:detectorModelVersion:DescribeDetectorModel'</a>,
--   <a>describeDetectorModel_detectorModelVersion</a> - The version of the
--   detector model.
--   
--   <a>$sel:detectorModelName:DescribeDetectorModel'</a>,
--   <a>describeDetectorModel_detectorModelName</a> - The name of the
--   detector model.
newDescribeDetectorModel :: Text -> DescribeDetectorModel

-- | <i>See:</i> <a>newDescribeDetectorModelResponse</a> smart constructor.
data DescribeDetectorModelResponse
DescribeDetectorModelResponse' :: Maybe DetectorModel -> Int -> DescribeDetectorModelResponse

-- | Create a value of <a>DescribeDetectorModelResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:detectorModel:DescribeDetectorModelResponse'</a>,
--   <a>describeDetectorModelResponse_detectorModel</a> - Information about
--   the detector model.
--   
--   <a>$sel:httpStatus:DescribeDetectorModelResponse'</a>,
--   <a>describeDetectorModelResponse_httpStatus</a> - The response's http
--   status code.
newDescribeDetectorModelResponse :: Int -> DescribeDetectorModelResponse

-- | <i>See:</i> <a>newDescribeInput</a> smart constructor.
data DescribeInput
DescribeInput' :: Text -> DescribeInput

-- | Create a value of <a>DescribeInput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputName:DescribeInput'</a>, <a>describeInput_inputName</a> -
--   The name of the input.
newDescribeInput :: Text -> DescribeInput

-- | <i>See:</i> <a>newDescribeInputResponse</a> smart constructor.
data DescribeInputResponse
DescribeInputResponse' :: Maybe Input -> Int -> DescribeInputResponse

-- | Create a value of <a>DescribeInputResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:input:DescribeInputResponse'</a>,
--   <a>describeInputResponse_input</a> - Information about the input.
--   
--   <a>$sel:httpStatus:DescribeInputResponse'</a>,
--   <a>describeInputResponse_httpStatus</a> - The response's http status
--   code.
newDescribeInputResponse :: Int -> DescribeInputResponse

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The ARN of the resource.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - A
--   list of the keys of the tags to be removed from the resource.
newUntagResource :: Text -> UntagResource

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | <i>See:</i> <a>newListInputRoutings</a> smart constructor.
data ListInputRoutings
ListInputRoutings' :: Maybe Text -> Maybe Natural -> InputIdentifier -> ListInputRoutings

-- | Create a value of <a>ListInputRoutings</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListInputRoutings'</a>,
--   <a>listInputRoutings_nextToken</a> - The token that you can use to
--   return the next set of results.
--   
--   <a>$sel:maxResults:ListInputRoutings'</a>,
--   <a>listInputRoutings_maxResults</a> - The maximum number of results to
--   be returned per request.
--   
--   <a>$sel:inputIdentifier:ListInputRoutings'</a>,
--   <a>listInputRoutings_inputIdentifier</a> - The identifer of the routed
--   input.
newListInputRoutings :: InputIdentifier -> ListInputRoutings

-- | <i>See:</i> <a>newListInputRoutingsResponse</a> smart constructor.
data ListInputRoutingsResponse
ListInputRoutingsResponse' :: Maybe [RoutedResource] -> Maybe Text -> Int -> ListInputRoutingsResponse

-- | Create a value of <a>ListInputRoutingsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:routedResources:ListInputRoutingsResponse'</a>,
--   <a>listInputRoutingsResponse_routedResources</a> - Summary information
--   about the routed resources.
--   
--   <a>$sel:nextToken:ListInputRoutings'</a>,
--   <a>listInputRoutingsResponse_nextToken</a> - The token that you can
--   use to return the next set of results, or <tt>null</tt> if there are
--   no more results.
--   
--   <a>$sel:httpStatus:ListInputRoutingsResponse'</a>,
--   <a>listInputRoutingsResponse_httpStatus</a> - The response's http
--   status code.
newListInputRoutingsResponse :: Int -> ListInputRoutingsResponse

-- | <i>See:</i> <a>newDescribeLoggingOptions</a> smart constructor.
data DescribeLoggingOptions
DescribeLoggingOptions' :: DescribeLoggingOptions

-- | Create a value of <a>DescribeLoggingOptions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDescribeLoggingOptions :: DescribeLoggingOptions

-- | <i>See:</i> <a>newDescribeLoggingOptionsResponse</a> smart
--   constructor.
data DescribeLoggingOptionsResponse
DescribeLoggingOptionsResponse' :: Maybe LoggingOptions -> Int -> DescribeLoggingOptionsResponse

-- | Create a value of <a>DescribeLoggingOptionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:loggingOptions:DescribeLoggingOptionsResponse'</a>,
--   <a>describeLoggingOptionsResponse_loggingOptions</a> - The current
--   settings of the AWS IoT Events logging options.
--   
--   <a>$sel:httpStatus:DescribeLoggingOptionsResponse'</a>,
--   <a>describeLoggingOptionsResponse_httpStatus</a> - The response's http
--   status code.
newDescribeLoggingOptionsResponse :: Int -> DescribeLoggingOptionsResponse
newtype AlarmModelVersionStatus
AlarmModelVersionStatus' :: Text -> AlarmModelVersionStatus
[fromAlarmModelVersionStatus] :: AlarmModelVersionStatus -> Text
pattern AlarmModelVersionStatus_ACTIVATING :: AlarmModelVersionStatus
pattern AlarmModelVersionStatus_ACTIVE :: AlarmModelVersionStatus
pattern AlarmModelVersionStatus_FAILED :: AlarmModelVersionStatus
pattern AlarmModelVersionStatus_INACTIVE :: AlarmModelVersionStatus
newtype AnalysisResultLevel
AnalysisResultLevel' :: Text -> AnalysisResultLevel
[fromAnalysisResultLevel] :: AnalysisResultLevel -> Text
pattern AnalysisResultLevel_ERROR :: AnalysisResultLevel
pattern AnalysisResultLevel_INFO :: AnalysisResultLevel
pattern AnalysisResultLevel_WARNING :: AnalysisResultLevel
newtype AnalysisStatus
AnalysisStatus' :: Text -> AnalysisStatus
[fromAnalysisStatus] :: AnalysisStatus -> Text
pattern AnalysisStatus_COMPLETE :: AnalysisStatus
pattern AnalysisStatus_FAILED :: AnalysisStatus
pattern AnalysisStatus_RUNNING :: AnalysisStatus
newtype ComparisonOperator
ComparisonOperator' :: Text -> ComparisonOperator
[fromComparisonOperator] :: ComparisonOperator -> Text
pattern ComparisonOperator_EQUAL :: ComparisonOperator
pattern ComparisonOperator_GREATER :: ComparisonOperator
pattern ComparisonOperator_GREATER_OR_EQUAL :: ComparisonOperator
pattern ComparisonOperator_LESS :: ComparisonOperator
pattern ComparisonOperator_LESS_OR_EQUAL :: ComparisonOperator
pattern ComparisonOperator_NOT_EQUAL :: ComparisonOperator
newtype DetectorModelVersionStatus
DetectorModelVersionStatus' :: Text -> DetectorModelVersionStatus
[fromDetectorModelVersionStatus] :: DetectorModelVersionStatus -> Text
pattern DetectorModelVersionStatus_ACTIVATING :: DetectorModelVersionStatus
pattern DetectorModelVersionStatus_ACTIVE :: DetectorModelVersionStatus
pattern DetectorModelVersionStatus_DEPRECATED :: DetectorModelVersionStatus
pattern DetectorModelVersionStatus_DRAFT :: DetectorModelVersionStatus
pattern DetectorModelVersionStatus_FAILED :: DetectorModelVersionStatus
pattern DetectorModelVersionStatus_INACTIVE :: DetectorModelVersionStatus
pattern DetectorModelVersionStatus_PAUSED :: DetectorModelVersionStatus
newtype EvaluationMethod
EvaluationMethod' :: Text -> EvaluationMethod
[fromEvaluationMethod] :: EvaluationMethod -> Text
pattern EvaluationMethod_BATCH :: EvaluationMethod
pattern EvaluationMethod_SERIAL :: EvaluationMethod
newtype InputStatus
InputStatus' :: Text -> InputStatus
[fromInputStatus] :: InputStatus -> Text
pattern InputStatus_ACTIVE :: InputStatus
pattern InputStatus_CREATING :: InputStatus
pattern InputStatus_DELETING :: InputStatus
pattern InputStatus_UPDATING :: InputStatus
newtype LoggingLevel
LoggingLevel' :: Text -> LoggingLevel
[fromLoggingLevel] :: LoggingLevel -> Text
pattern LoggingLevel_DEBUG :: LoggingLevel
pattern LoggingLevel_ERROR :: LoggingLevel
pattern LoggingLevel_INFO :: LoggingLevel
newtype PayloadType
PayloadType' :: Text -> PayloadType
[fromPayloadType] :: PayloadType -> Text
pattern PayloadType_JSON :: PayloadType
pattern PayloadType_STRING :: PayloadType

-- | Specifies whether to get notified for alarm state changes.
--   
--   <i>See:</i> <a>newAcknowledgeFlow</a> smart constructor.
data AcknowledgeFlow
AcknowledgeFlow' :: Bool -> AcknowledgeFlow

-- | Create a value of <a>AcknowledgeFlow</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabled:AcknowledgeFlow'</a>, <a>acknowledgeFlow_enabled</a> -
--   The value must be <tt>TRUE</tt> or <tt>FALSE</tt>. If <tt>TRUE</tt>,
--   you receive a notification when the alarm state changes. You must
--   choose to acknowledge the notification before the alarm state can
--   return to <tt>NORMAL</tt>. If <tt>FALSE</tt>, you won't receive
--   notifications. The alarm automatically changes to the <tt>NORMAL</tt>
--   state when the input property value returns to the specified range.
newAcknowledgeFlow :: Bool -> AcknowledgeFlow

-- | An action to be performed when the <tt>condition</tt> is TRUE.
--   
--   <i>See:</i> <a>newAction</a> smart constructor.
data Action
Action' :: Maybe IotTopicPublishAction -> Maybe DynamoDBv2Action -> Maybe ResetTimerAction -> Maybe SetTimerAction -> Maybe SNSTopicPublishAction -> Maybe ClearTimerAction -> Maybe DynamoDBAction -> Maybe FirehoseAction -> Maybe IotSiteWiseAction -> Maybe SetVariableAction -> Maybe LambdaAction -> Maybe IotEventsAction -> Maybe SqsAction -> Action

-- | Create a value of <a>Action</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:iotTopicPublish:Action'</a>, <a>action_iotTopicPublish</a> -
--   Publishes an MQTT message with the given topic to the AWS IoT message
--   broker.
--   
--   <a>$sel:dynamoDBv2:Action'</a>, <a>action_dynamoDBv2</a> - Writes to
--   the DynamoDB table that you created. The default action payload
--   contains all attribute-value pairs that have the information about the
--   detector model instance and the event that triggered the action. You
--   can customize the <a>payload</a>. A separate column of the DynamoDB
--   table receives one attribute-value pair in the payload that you
--   specify. For more information, see <a>Actions</a> in <i>AWS IoT Events
--   Developer Guide</i>.
--   
--   <a>$sel:resetTimer:Action'</a>, <a>action_resetTimer</a> - Information
--   needed to reset the timer.
--   
--   <a>$sel:setTimer:Action'</a>, <a>action_setTimer</a> - Information
--   needed to set the timer.
--   
--   <a>$sel:sns:Action'</a>, <a>action_sns</a> - Sends an Amazon SNS
--   message.
--   
--   <a>$sel:clearTimer:Action'</a>, <a>action_clearTimer</a> - Information
--   needed to clear the timer.
--   
--   <a>$sel:dynamoDB:Action'</a>, <a>action_dynamoDB</a> - Writes to the
--   DynamoDB table that you created. The default action payload contains
--   all attribute-value pairs that have the information about the detector
--   model instance and the event that triggered the action. You can
--   customize the <a>payload</a>. One column of the DynamoDB table
--   receives all attribute-value pairs in the payload that you specify.
--   For more information, see <a>Actions</a> in <i>AWS IoT Events
--   Developer Guide</i>.
--   
--   <a>$sel:firehose:Action'</a>, <a>action_firehose</a> - Sends
--   information about the detector model instance and the event that
--   triggered the action to an Amazon Kinesis Data Firehose delivery
--   stream.
--   
--   <a>$sel:iotSiteWise:Action'</a>, <a>action_iotSiteWise</a> - Sends
--   information about the detector model instance and the event that
--   triggered the action to an asset property in AWS IoT SiteWise .
--   
--   <a>$sel:setVariable:Action'</a>, <a>action_setVariable</a> - Sets a
--   variable to a specified value.
--   
--   <a>$sel:lambda:Action'</a>, <a>action_lambda</a> - Calls a Lambda
--   function, passing in information about the detector model instance and
--   the event that triggered the action.
--   
--   <a>$sel:iotEvents:Action'</a>, <a>action_iotEvents</a> - Sends AWS IoT
--   Events input, which passes information about the detector model
--   instance and the event that triggered the action.
--   
--   <a>$sel:sqs:Action'</a>, <a>action_sqs</a> - Sends information about
--   the detector model instance and the event that triggered the action to
--   an Amazon SQS queue.
newAction :: Action

-- | Specifies one of the following actions to receive notifications when
--   the alarm state changes.
--   
--   <i>See:</i> <a>newAlarmAction</a> smart constructor.
data AlarmAction
AlarmAction' :: Maybe IotTopicPublishAction -> Maybe DynamoDBv2Action -> Maybe SNSTopicPublishAction -> Maybe DynamoDBAction -> Maybe FirehoseAction -> Maybe IotSiteWiseAction -> Maybe LambdaAction -> Maybe IotEventsAction -> Maybe SqsAction -> AlarmAction

-- | Create a value of <a>AlarmAction</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:iotTopicPublish:AlarmAction'</a>,
--   <a>alarmAction_iotTopicPublish</a> - Undocumented member.
--   
--   <a>$sel:dynamoDBv2:AlarmAction'</a>, <a>alarmAction_dynamoDBv2</a> -
--   Undocumented member.
--   
--   <a>$sel:sns:AlarmAction'</a>, <a>alarmAction_sns</a> - Undocumented
--   member.
--   
--   <a>$sel:dynamoDB:AlarmAction'</a>, <a>alarmAction_dynamoDB</a> -
--   Undocumented member.
--   
--   <a>$sel:firehose:AlarmAction'</a>, <a>alarmAction_firehose</a> -
--   Undocumented member.
--   
--   <a>$sel:iotSiteWise:AlarmAction'</a>, <a>alarmAction_iotSiteWise</a> -
--   Undocumented member.
--   
--   <a>$sel:lambda:AlarmAction'</a>, <a>alarmAction_lambda</a> -
--   Undocumented member.
--   
--   <a>$sel:iotEvents:AlarmAction'</a>, <a>alarmAction_iotEvents</a> -
--   Undocumented member.
--   
--   <a>$sel:sqs:AlarmAction'</a>, <a>alarmAction_sqs</a> - Undocumented
--   member.
newAlarmAction :: AlarmAction

-- | Contains the configuration information of alarm state changes.
--   
--   <i>See:</i> <a>newAlarmCapabilities</a> smart constructor.
data AlarmCapabilities
AlarmCapabilities' :: Maybe AcknowledgeFlow -> Maybe InitializationConfiguration -> AlarmCapabilities

-- | Create a value of <a>AlarmCapabilities</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:acknowledgeFlow:AlarmCapabilities'</a>,
--   <a>alarmCapabilities_acknowledgeFlow</a> - Specifies whether to get
--   notified for alarm state changes.
--   
--   <a>$sel:initializationConfiguration:AlarmCapabilities'</a>,
--   <a>alarmCapabilities_initializationConfiguration</a> - Specifies the
--   default alarm state. The configuration applies to all alarms that were
--   created based on this alarm model.
newAlarmCapabilities :: AlarmCapabilities

-- | Contains information about one or more alarm actions.
--   
--   <i>See:</i> <a>newAlarmEventActions</a> smart constructor.
data AlarmEventActions
AlarmEventActions' :: Maybe [AlarmAction] -> AlarmEventActions

-- | Create a value of <a>AlarmEventActions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:alarmActions:AlarmEventActions'</a>,
--   <a>alarmEventActions_alarmActions</a> - Specifies one or more
--   supported actions to receive notifications when the alarm state
--   changes.
newAlarmEventActions :: AlarmEventActions

-- | Contains a summary of an alarm model.
--   
--   <i>See:</i> <a>newAlarmModelSummary</a> smart constructor.
data AlarmModelSummary
AlarmModelSummary' :: Maybe POSIX -> Maybe Text -> Maybe Text -> AlarmModelSummary

-- | Create a value of <a>AlarmModelSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:AlarmModelSummary'</a>,
--   <a>alarmModelSummary_creationTime</a> - The time the alarm model was
--   created, in the Unix epoch format.
--   
--   <a>$sel:alarmModelName:AlarmModelSummary'</a>,
--   <a>alarmModelSummary_alarmModelName</a> - The name of the alarm model.
--   
--   <a>$sel:alarmModelDescription:AlarmModelSummary'</a>,
--   <a>alarmModelSummary_alarmModelDescription</a> - The description of
--   the alarm model.
newAlarmModelSummary :: AlarmModelSummary

-- | Contains a summary of an alarm model version.
--   
--   <i>See:</i> <a>newAlarmModelVersionSummary</a> smart constructor.
data AlarmModelVersionSummary
AlarmModelVersionSummary' :: Maybe POSIX -> Maybe AlarmModelVersionStatus -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> AlarmModelVersionSummary

-- | Create a value of <a>AlarmModelVersionSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:AlarmModelVersionSummary'</a>,
--   <a>alarmModelVersionSummary_creationTime</a> - The time the alarm
--   model was created, in the Unix epoch format.
--   
--   <a>$sel:status:AlarmModelVersionSummary'</a>,
--   <a>alarmModelVersionSummary_status</a> - The status of the alarm
--   model. The status can be one of the following values:
--   
--   <ul>
--   <li><tt>ACTIVE</tt> - The alarm model is active and it's ready to
--   evaluate data.</li>
--   <li><tt>ACTIVATING</tt> - AWS IoT Events is activating your alarm
--   model. Activating an alarm model can take up to a few minutes.</li>
--   <li><tt>INACTIVE</tt> - The alarm model is inactive, so it isn't ready
--   to evaluate data. Check your alarm model information and update the
--   alarm model.</li>
--   <li><tt>FAILED</tt> - You couldn't create or update the alarm model.
--   Check your alarm model information and try again.</li>
--   </ul>
--   
--   <a>$sel:alarmModelName:AlarmModelVersionSummary'</a>,
--   <a>alarmModelVersionSummary_alarmModelName</a> - The name of the alarm
--   model.
--   
--   <a>$sel:statusMessage:AlarmModelVersionSummary'</a>,
--   <a>alarmModelVersionSummary_statusMessage</a> - Contains information
--   about the status of the alarm model version.
--   
--   <a>$sel:lastUpdateTime:AlarmModelVersionSummary'</a>,
--   <a>alarmModelVersionSummary_lastUpdateTime</a> - The time the alarm
--   model was last updated, in the Unix epoch format.
--   
--   <a>$sel:alarmModelVersion:AlarmModelVersionSummary'</a>,
--   <a>alarmModelVersionSummary_alarmModelVersion</a> - The version of the
--   alarm model.
--   
--   <a>$sel:alarmModelArn:AlarmModelVersionSummary'</a>,
--   <a>alarmModelVersionSummary_alarmModelArn</a> - The ARN of the alarm
--   model. For more information, see <a>Amazon Resource Names (ARNs)</a>
--   in the <i>AWS General Reference</i>.
--   
--   <a>$sel:roleArn:AlarmModelVersionSummary'</a>,
--   <a>alarmModelVersionSummary_roleArn</a> - The ARN of the IAM role that
--   allows the alarm to perform actions and access AWS resources. For more
--   information, see <a>Amazon Resource Names (ARNs)</a> in the <i>AWS
--   General Reference</i>.
newAlarmModelVersionSummary :: AlarmModelVersionSummary

-- | Contains information about one or more notification actions.
--   
--   <i>See:</i> <a>newAlarmNotification</a> smart constructor.
data AlarmNotification
AlarmNotification' :: Maybe (NonEmpty NotificationAction) -> AlarmNotification

-- | Create a value of <a>AlarmNotification</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:notificationActions:AlarmNotification'</a>,
--   <a>alarmNotification_notificationActions</a> - Contains the
--   notification settings of an alarm model. The settings apply to all
--   alarms that were created based on this alarm model.
newAlarmNotification :: AlarmNotification

-- | Defines when your alarm is invoked.
--   
--   <i>See:</i> <a>newAlarmRule</a> smart constructor.
data AlarmRule
AlarmRule' :: Maybe SimpleRule -> AlarmRule

-- | Create a value of <a>AlarmRule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:simpleRule:AlarmRule'</a>, <a>alarmRule_simpleRule</a> - A
--   rule that compares an input property value to a threshold value with a
--   comparison operator.
newAlarmRule :: AlarmRule

-- | Contains the result of the analysis.
--   
--   <i>See:</i> <a>newAnalysisResult</a> smart constructor.
data AnalysisResult
AnalysisResult' :: Maybe Text -> Maybe Text -> Maybe AnalysisResultLevel -> Maybe [AnalysisResultLocation] -> AnalysisResult

-- | Create a value of <a>AnalysisResult</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:type':AnalysisResult'</a>, <a>analysisResult_type</a> - The
--   type of the analysis result. Analyses fall into the following types
--   based on the validators used to generate the analysis result:
--   
--   <ul>
--   <li><tt>supported-actions</tt> - You must specify AWS IoT Events
--   supported actions that work with other AWS services in a supported AWS
--   Region.</li>
--   <li><tt>service-limits</tt> - Resources or API operations can't exceed
--   service quotas (also known as limits). Update your detector model or
--   request a quota increase.</li>
--   <li><tt>structure</tt> - The detector model must follow a structure
--   that AWS IoT Events supports.</li>
--   <li><tt>expression-syntax</tt> - Your expression must follow the
--   required syntax.</li>
--   <li><tt>data-type</tt> - Data types referenced in the detector model
--   must be compatible.</li>
--   <li><tt>referenced-data</tt> - You must define the data referenced in
--   your detector model before you can use the data.</li>
--   <li><tt>referenced-resource</tt> - Resources that the detector model
--   uses must be available.</li>
--   </ul>
--   
--   For more information, see <a>Running detector model analyses</a> in
--   the <i>AWS IoT Events Developer Guide</i>.
--   
--   <a>$sel:message:AnalysisResult'</a>, <a>analysisResult_message</a> -
--   Contains additional information about the analysis result.
--   
--   <a>$sel:level:AnalysisResult'</a>, <a>analysisResult_level</a> - The
--   severity level of the analysis result. Based on the severity level,
--   analysis results fall into three general categories:
--   
--   <ul>
--   <li><tt>INFO</tt> - An information result tells you about a
--   significant field in your detector model. This type of result usually
--   doesn't require immediate action.</li>
--   <li><tt>WARNING</tt> - A warning result draws special attention to
--   fields that might cause issues for your detector model. We recommend
--   that you review warnings and take necessary actions before you use
--   your detector model in production environments. Otherwise, the
--   detector model might not work as expected.</li>
--   <li><tt>ERROR</tt> - An error result notifies you about a problem
--   found in your detector model. You must fix all errors before you can
--   publish your detector model.</li>
--   </ul>
--   
--   <a>$sel:locations:AnalysisResult'</a>, <a>analysisResult_locations</a>
--   - Contains one or more locations that you can use to locate the fields
--   in your detector model that the analysis result references.
newAnalysisResult :: AnalysisResult

-- | Contains information that you can use to locate the field in your
--   detector model that the analysis result references.
--   
--   <i>See:</i> <a>newAnalysisResultLocation</a> smart constructor.
data AnalysisResultLocation
AnalysisResultLocation' :: Maybe Text -> AnalysisResultLocation

-- | Create a value of <a>AnalysisResultLocation</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:path:AnalysisResultLocation'</a>,
--   <a>analysisResultLocation_path</a> - A <a>JsonPath</a> expression that
--   identifies the error field in your detector model.
newAnalysisResultLocation :: AnalysisResultLocation

-- | A structure that contains timestamp information. For more information,
--   see <a>TimeInNanos</a> in the <i>AWS IoT SiteWise API Reference</i>.
--   
--   You must use expressions for all parameters in
--   <tt>AssetPropertyTimestamp</tt>. The expressions accept literals,
--   operators, functions, references, and substitution templates.
--   
--   <b>Examples</b>
--   
--   <ul>
--   <li>For literal values, the expressions must contain single quotes.
--   For example, the value for the <tt>timeInSeconds</tt> parameter can be
--   <tt>'1586400675'</tt>.</li>
--   <li>For references, you must specify either variables or input values.
--   For example, the value for the <tt>offsetInNanos</tt> parameter can be
--   <tt>$variable.time</tt>.</li>
--   <li>For a substitution template, you must use <tt>${}</tt>, and the
--   template must be in single quotes. A substitution template can also
--   contain a combination of literals, operators, functions, references,
--   and substitution templates.In the following example, the value for the
--   <tt>timeInSeconds</tt> parameter uses a substitution
--   template.<pre>'${$input.TemperatureInput.sensorData.timestamp /
--   1000}'</pre></li>
--   </ul>
--   
--   For more information, see <a>Expressions</a> in the <i>AWS IoT Events
--   Developer Guide</i>.
--   
--   <i>See:</i> <a>newAssetPropertyTimestamp</a> smart constructor.
data AssetPropertyTimestamp
AssetPropertyTimestamp' :: Maybe Text -> Text -> AssetPropertyTimestamp

-- | Create a value of <a>AssetPropertyTimestamp</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:offsetInNanos:AssetPropertyTimestamp'</a>,
--   <a>assetPropertyTimestamp_offsetInNanos</a> - The nanosecond offset
--   converted from <tt>timeInSeconds</tt>. The valid range is between
--   0-999999999.
--   
--   <a>$sel:timeInSeconds:AssetPropertyTimestamp'</a>,
--   <a>assetPropertyTimestamp_timeInSeconds</a> - The timestamp, in
--   seconds, in the Unix epoch format. The valid range is between
--   1-31556889864403199.
newAssetPropertyTimestamp :: Text -> AssetPropertyTimestamp

-- | A structure that contains value information. For more information, see
--   <a>AssetPropertyValue</a> in the <i>AWS IoT SiteWise API
--   Reference</i>.
--   
--   You must use expressions for all parameters in
--   <tt>AssetPropertyValue</tt>. The expressions accept literals,
--   operators, functions, references, and substitution templates.
--   
--   <b>Examples</b>
--   
--   <ul>
--   <li>For literal values, the expressions must contain single quotes.
--   For example, the value for the <tt>quality</tt> parameter can be
--   <tt>'GOOD'</tt>.</li>
--   <li>For references, you must specify either variables or input values.
--   For example, the value for the <tt>quality</tt> parameter can be
--   <tt>$input.TemperatureInput.sensorData.quality</tt>.</li>
--   </ul>
--   
--   For more information, see <a>Expressions</a> in the <i>AWS IoT Events
--   Developer Guide</i>.
--   
--   <i>See:</i> <a>newAssetPropertyValue</a> smart constructor.
data AssetPropertyValue
AssetPropertyValue' :: Maybe AssetPropertyVariant -> Maybe Text -> Maybe AssetPropertyTimestamp -> AssetPropertyValue

-- | Create a value of <a>AssetPropertyValue</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:AssetPropertyValue'</a>, <a>assetPropertyValue_value</a>
--   - The value to send to an asset property.
--   
--   <a>$sel:quality:AssetPropertyValue'</a>,
--   <a>assetPropertyValue_quality</a> - The quality of the asset property
--   value. The value must be <tt>'GOOD'</tt>, <tt>'BAD'</tt>, or
--   <tt>'UNCERTAIN'</tt>.
--   
--   <a>$sel:timestamp:AssetPropertyValue'</a>,
--   <a>assetPropertyValue_timestamp</a> - The timestamp associated with
--   the asset property value. The default is the current event time.
newAssetPropertyValue :: AssetPropertyValue

-- | A structure that contains an asset property value. For more
--   information, see <a>Variant</a> in the <i>AWS IoT SiteWise API
--   Reference</i>.
--   
--   You must use expressions for all parameters in
--   <tt>AssetPropertyVariant</tt>. The expressions accept literals,
--   operators, functions, references, and substitution templates.
--   
--   <b>Examples</b>
--   
--   <ul>
--   <li>For literal values, the expressions must contain single quotes.
--   For example, the value for the <tt>integerValue</tt> parameter can be
--   <tt>'100'</tt>.</li>
--   <li>For references, you must specify either variables or parameters.
--   For example, the value for the <tt>booleanValue</tt> parameter can be
--   <tt>$variable.offline</tt>.</li>
--   <li>For a substitution template, you must use <tt>${}</tt>, and the
--   template must be in single quotes. A substitution template can also
--   contain a combination of literals, operators, functions, references,
--   and substitution templates.In the following example, the value for the
--   <tt>doubleValue</tt> parameter uses a substitution
--   template.<pre>'${$input.TemperatureInput.sensorData.temperature * 6 /
--   5 + 32}'</pre></li>
--   </ul>
--   
--   For more information, see <a>Expressions</a> in the <i>AWS IoT Events
--   Developer Guide</i>.
--   
--   You must specify one of the following value types, depending on the
--   <tt>dataType</tt> of the specified asset property. For more
--   information, see <a>AssetProperty</a> in the <i>AWS IoT SiteWise API
--   Reference</i>.
--   
--   <i>See:</i> <a>newAssetPropertyVariant</a> smart constructor.
data AssetPropertyVariant
AssetPropertyVariant' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> AssetPropertyVariant

-- | Create a value of <a>AssetPropertyVariant</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:integerValue:AssetPropertyVariant'</a>,
--   <a>assetPropertyVariant_integerValue</a> - The asset property value is
--   an integer. You must use an expression, and the evaluated result
--   should be an integer.
--   
--   <a>$sel:doubleValue:AssetPropertyVariant'</a>,
--   <a>assetPropertyVariant_doubleValue</a> - The asset property value is
--   a double. You must use an expression, and the evaluated result should
--   be a double.
--   
--   <a>$sel:stringValue:AssetPropertyVariant'</a>,
--   <a>assetPropertyVariant_stringValue</a> - The asset property value is
--   a string. You must use an expression, and the evaluated result should
--   be a string.
--   
--   <a>$sel:booleanValue:AssetPropertyVariant'</a>,
--   <a>assetPropertyVariant_booleanValue</a> - The asset property value is
--   a Boolean value that must be <tt>'TRUE'</tt> or <tt>'FALSE'</tt>. You
--   must use an expression, and the evaluated result should be a Boolean
--   value.
newAssetPropertyVariant :: AssetPropertyVariant

-- | The attributes from the JSON payload that are made available by the
--   input. Inputs are derived from messages sent to the AWS IoT Events
--   system using <tt>BatchPutMessage</tt>. Each such message contains a
--   JSON payload. Those attributes (and their paired values) specified
--   here are available for use in the <tt>condition</tt> expressions used
--   by detectors.
--   
--   <i>See:</i> <a>newAttribute</a> smart constructor.
data Attribute
Attribute' :: Text -> Attribute

-- | Create a value of <a>Attribute</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jsonPath:Attribute'</a>, <a>attribute_jsonPath</a> - An
--   expression that specifies an attribute-value pair in a JSON structure.
--   Use this to specify an attribute from the JSON payload that is made
--   available by the input. Inputs are derived from messages sent to AWS
--   IoT Events (<tt>BatchPutMessage</tt>). Each such message contains a
--   JSON payload. The attribute (and its paired value) specified here are
--   available for use in the <tt>condition</tt> expressions used by
--   detectors.
--   
--   Syntax: <tt>&lt;field-name&gt;.&lt;field-name&gt;...</tt>
newAttribute :: Text -> Attribute

-- | Information needed to clear the timer.
--   
--   <i>See:</i> <a>newClearTimerAction</a> smart constructor.
data ClearTimerAction
ClearTimerAction' :: Text -> ClearTimerAction

-- | Create a value of <a>ClearTimerAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timerName:ClearTimerAction'</a>,
--   <a>clearTimerAction_timerName</a> - The name of the timer to clear.
newClearTimerAction :: Text -> ClearTimerAction

-- | The detector model and the specific detectors (instances) for which
--   the logging level is given.
--   
--   <i>See:</i> <a>newDetectorDebugOption</a> smart constructor.
data DetectorDebugOption
DetectorDebugOption' :: Maybe Text -> Text -> DetectorDebugOption

-- | Create a value of <a>DetectorDebugOption</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyValue:DetectorDebugOption'</a>,
--   <a>detectorDebugOption_keyValue</a> - The value of the input attribute
--   key used to create the detector (the instance of the detector model).
--   
--   <a>$sel:detectorModelName:DetectorDebugOption'</a>,
--   <a>detectorDebugOption_detectorModelName</a> - The name of the
--   detector model.
newDetectorDebugOption :: Text -> DetectorDebugOption

-- | Information about the detector model.
--   
--   <i>See:</i> <a>newDetectorModel</a> smart constructor.
data DetectorModel
DetectorModel' :: Maybe DetectorModelConfiguration -> Maybe DetectorModelDefinition -> DetectorModel

-- | Create a value of <a>DetectorModel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:detectorModelConfiguration:DetectorModel'</a>,
--   <a>detectorModel_detectorModelConfiguration</a> - Information about
--   how the detector is configured.
--   
--   <a>$sel:detectorModelDefinition:DetectorModel'</a>,
--   <a>detectorModel_detectorModelDefinition</a> - Information that
--   defines how a detector operates.
newDetectorModel :: DetectorModel

-- | Information about how the detector model is configured.
--   
--   <i>See:</i> <a>newDetectorModelConfiguration</a> smart constructor.
data DetectorModelConfiguration
DetectorModelConfiguration' :: Maybe POSIX -> Maybe DetectorModelVersionStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe EvaluationMethod -> Maybe Text -> DetectorModelConfiguration

-- | Create a value of <a>DetectorModelConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:DetectorModelConfiguration'</a>,
--   <a>detectorModelConfiguration_creationTime</a> - The time the detector
--   model was created.
--   
--   <a>$sel:status:DetectorModelConfiguration'</a>,
--   <a>detectorModelConfiguration_status</a> - The status of the detector
--   model.
--   
--   <a>$sel:detectorModelName:DetectorModelConfiguration'</a>,
--   <a>detectorModelConfiguration_detectorModelName</a> - The name of the
--   detector model.
--   
--   <a>$sel:detectorModelArn:DetectorModelConfiguration'</a>,
--   <a>detectorModelConfiguration_detectorModelArn</a> - The ARN of the
--   detector model.
--   
--   <a>$sel:detectorModelDescription:DetectorModelConfiguration'</a>,
--   <a>detectorModelConfiguration_detectorModelDescription</a> - A brief
--   description of the detector model.
--   
--   <a>$sel:key:DetectorModelConfiguration'</a>,
--   <a>detectorModelConfiguration_key</a> - The value used to identify a
--   detector instance. When a device or system sends input, a new detector
--   instance with a unique key value is created. AWS IoT Events can
--   continue to route input to its corresponding detector instance based
--   on this identifying information.
--   
--   This parameter uses a JSON-path expression to select the
--   attribute-value pair in the message payload that is used for
--   identification. To route the message to the correct detector instance,
--   the device must send a message payload that contains the same
--   attribute-value.
--   
--   <a>$sel:detectorModelVersion:DetectorModelConfiguration'</a>,
--   <a>detectorModelConfiguration_detectorModelVersion</a> - The version
--   of the detector model.
--   
--   <a>$sel:lastUpdateTime:DetectorModelConfiguration'</a>,
--   <a>detectorModelConfiguration_lastUpdateTime</a> - The time the
--   detector model was last updated.
--   
--   <a>$sel:evaluationMethod:DetectorModelConfiguration'</a>,
--   <a>detectorModelConfiguration_evaluationMethod</a> - Information about
--   the order in which events are evaluated and how actions are executed.
--   
--   <a>$sel:roleArn:DetectorModelConfiguration'</a>,
--   <a>detectorModelConfiguration_roleArn</a> - The ARN of the role that
--   grants permission to AWS IoT Events to perform its operations.
newDetectorModelConfiguration :: DetectorModelConfiguration

-- | Information that defines how a detector operates.
--   
--   <i>See:</i> <a>newDetectorModelDefinition</a> smart constructor.
data DetectorModelDefinition
DetectorModelDefinition' :: NonEmpty State -> Text -> DetectorModelDefinition

-- | Create a value of <a>DetectorModelDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:states:DetectorModelDefinition'</a>,
--   <a>detectorModelDefinition_states</a> - Information about the states
--   of the detector.
--   
--   <a>$sel:initialStateName:DetectorModelDefinition'</a>,
--   <a>detectorModelDefinition_initialStateName</a> - The state that is
--   entered at the creation of each detector (instance).
newDetectorModelDefinition :: NonEmpty State -> Text -> DetectorModelDefinition

-- | Information about the detector model.
--   
--   <i>See:</i> <a>newDetectorModelSummary</a> smart constructor.
data DetectorModelSummary
DetectorModelSummary' :: Maybe POSIX -> Maybe Text -> Maybe Text -> DetectorModelSummary

-- | Create a value of <a>DetectorModelSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:DetectorModelSummary'</a>,
--   <a>detectorModelSummary_creationTime</a> - The time the detector model
--   was created.
--   
--   <a>$sel:detectorModelName:DetectorModelSummary'</a>,
--   <a>detectorModelSummary_detectorModelName</a> - The name of the
--   detector model.
--   
--   <a>$sel:detectorModelDescription:DetectorModelSummary'</a>,
--   <a>detectorModelSummary_detectorModelDescription</a> - A brief
--   description of the detector model.
newDetectorModelSummary :: DetectorModelSummary

-- | Information about the detector model version.
--   
--   <i>See:</i> <a>newDetectorModelVersionSummary</a> smart constructor.
data DetectorModelVersionSummary
DetectorModelVersionSummary' :: Maybe POSIX -> Maybe DetectorModelVersionStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe EvaluationMethod -> Maybe Text -> DetectorModelVersionSummary

-- | Create a value of <a>DetectorModelVersionSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:DetectorModelVersionSummary'</a>,
--   <a>detectorModelVersionSummary_creationTime</a> - The time the
--   detector model version was created.
--   
--   <a>$sel:status:DetectorModelVersionSummary'</a>,
--   <a>detectorModelVersionSummary_status</a> - The status of the detector
--   model version.
--   
--   <a>$sel:detectorModelName:DetectorModelVersionSummary'</a>,
--   <a>detectorModelVersionSummary_detectorModelName</a> - The name of the
--   detector model.
--   
--   <a>$sel:detectorModelArn:DetectorModelVersionSummary'</a>,
--   <a>detectorModelVersionSummary_detectorModelArn</a> - The ARN of the
--   detector model version.
--   
--   <a>$sel:detectorModelVersion:DetectorModelVersionSummary'</a>,
--   <a>detectorModelVersionSummary_detectorModelVersion</a> - The ID of
--   the detector model version.
--   
--   <a>$sel:lastUpdateTime:DetectorModelVersionSummary'</a>,
--   <a>detectorModelVersionSummary_lastUpdateTime</a> - The last time the
--   detector model version was updated.
--   
--   <a>$sel:evaluationMethod:DetectorModelVersionSummary'</a>,
--   <a>detectorModelVersionSummary_evaluationMethod</a> - Information
--   about the order in which events are evaluated and how actions are
--   executed.
--   
--   <a>$sel:roleArn:DetectorModelVersionSummary'</a>,
--   <a>detectorModelVersionSummary_roleArn</a> - The ARN of the role that
--   grants the detector model permission to perform its tasks.
newDetectorModelVersionSummary :: DetectorModelVersionSummary

-- | Defines an action to write to the Amazon DynamoDB table that you
--   created. The standard action payload contains all the information
--   about the detector model instance and the event that triggered the
--   action. You can customize the <a>payload</a>. One column of the
--   DynamoDB table receives all attribute-value pairs in the payload that
--   you specify.
--   
--   You must use expressions for all parameters in
--   <tt>DynamoDBAction</tt>. The expressions accept literals, operators,
--   functions, references, and substitution templates.
--   
--   <b>Examples</b>
--   
--   <ul>
--   <li>For literal values, the expressions must contain single quotes.
--   For example, the value for the <tt>hashKeyType</tt> parameter can be
--   <tt>'STRING'</tt>.</li>
--   <li>For references, you must specify either variables or input values.
--   For example, the value for the <tt>hashKeyField</tt> parameter can be
--   <tt>$input.GreenhouseInput.name</tt>.</li>
--   <li>For a substitution template, you must use <tt>${}</tt>, and the
--   template must be in single quotes. A substitution template can also
--   contain a combination of literals, operators, functions, references,
--   and substitution templates.In the following example, the value for the
--   <tt>hashKeyValue</tt> parameter uses a substitution
--   template.<pre>'${$input.GreenhouseInput.temperature * 6 / 5 + 32} in
--   Fahrenheit'</pre></li>
--   <li>For a string concatenation, you must use <tt>+</tt>. A string
--   concatenation can also contain a combination of literals, operators,
--   functions, references, and substitution templates.In the following
--   example, the value for the <tt>tableName</tt> parameter uses a string
--   concatenation.<pre>'GreenhouseTemperatureTable ' +
--   $input.GreenhouseInput.date</pre></li>
--   </ul>
--   
--   For more information, see <a>Expressions</a> in the <i>AWS IoT Events
--   Developer Guide</i>.
--   
--   If the defined payload type is a string, <tt>DynamoDBAction</tt>
--   writes non-JSON data to the DynamoDB table as binary data. The
--   DynamoDB console displays the data as Base64-encoded text. The value
--   for the <tt>payloadField</tt> parameter is
--   <tt>&lt;payload-field&gt;_raw</tt>.
--   
--   <i>See:</i> <a>newDynamoDBAction</a> smart constructor.
data DynamoDBAction
DynamoDBAction' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Payload -> Maybe Text -> Maybe Text -> Maybe Text -> Text -> Text -> Text -> DynamoDBAction

-- | Create a value of <a>DynamoDBAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hashKeyType:DynamoDBAction'</a>,
--   <a>dynamoDBAction_hashKeyType</a> - The data type for the hash key
--   (also called the partition key). You can specify the following values:
--   
--   <ul>
--   <li><tt>'STRING'</tt> - The hash key is a string.</li>
--   <li><tt>'NUMBER'</tt> - The hash key is a number.</li>
--   </ul>
--   
--   If you don't specify <tt>hashKeyType</tt>, the default value is
--   <tt>'STRING'</tt>.
--   
--   <a>$sel:operation:DynamoDBAction'</a>, <a>dynamoDBAction_operation</a>
--   - The type of operation to perform. You can specify the following
--   values:
--   
--   <ul>
--   <li><tt>'INSERT'</tt> - Insert data as a new item into the DynamoDB
--   table. This item uses the specified hash key as a partition key. If
--   you specified a range key, the item uses the range key as a sort
--   key.</li>
--   <li><tt>'UPDATE'</tt> - Update an existing item of the DynamoDB table
--   with new data. This item's partition key must match the specified hash
--   key. If you specified a range key, the range key must match the item's
--   sort key.</li>
--   <li><tt>'DELETE'</tt> - Delete an existing item of the DynamoDB table.
--   This item's partition key must match the specified hash key. If you
--   specified a range key, the range key must match the item's sort
--   key.</li>
--   </ul>
--   
--   If you don't specify this parameter, AWS IoT Events triggers the
--   <tt>'INSERT'</tt> operation.
--   
--   <a>$sel:rangeKeyType:DynamoDBAction'</a>,
--   <a>dynamoDBAction_rangeKeyType</a> - The data type for the range key
--   (also called the sort key), You can specify the following values:
--   
--   <ul>
--   <li><tt>'STRING'</tt> - The range key is a string.</li>
--   <li><tt>'NUMBER'</tt> - The range key is number.</li>
--   </ul>
--   
--   If you don't specify <tt>rangeKeyField</tt>, the default value is
--   <tt>'STRING'</tt>.
--   
--   <a>$sel:payload:DynamoDBAction'</a>, <a>dynamoDBAction_payload</a> -
--   Undocumented member.
--   
--   <a>$sel:payloadField:DynamoDBAction'</a>,
--   <a>dynamoDBAction_payloadField</a> - The name of the DynamoDB column
--   that receives the action payload.
--   
--   If you don't specify this parameter, the name of the DynamoDB column
--   is <tt>payload</tt>.
--   
--   <a>$sel:rangeKeyField:DynamoDBAction'</a>,
--   <a>dynamoDBAction_rangeKeyField</a> - The name of the range key (also
--   called the sort key). The <tt>rangeKeyField</tt> value must match the
--   sort key of the target DynamoDB table.
--   
--   <a>$sel:rangeKeyValue:DynamoDBAction'</a>,
--   <a>dynamoDBAction_rangeKeyValue</a> - The value of the range key (also
--   called the sort key).
--   
--   <a>$sel:hashKeyField:DynamoDBAction'</a>,
--   <a>dynamoDBAction_hashKeyField</a> - The name of the hash key (also
--   called the partition key). The <tt>hashKeyField</tt> value must match
--   the partition key of the target DynamoDB table.
--   
--   <a>$sel:hashKeyValue:DynamoDBAction'</a>,
--   <a>dynamoDBAction_hashKeyValue</a> - The value of the hash key (also
--   called the partition key).
--   
--   <a>$sel:tableName:DynamoDBAction'</a>, <a>dynamoDBAction_tableName</a>
--   - The name of the DynamoDB table. The <tt>tableName</tt> value must
--   match the table name of the target DynamoDB table.
newDynamoDBAction :: Text -> Text -> Text -> DynamoDBAction

-- | Defines an action to write to the Amazon DynamoDB table that you
--   created. The default action payload contains all the information about
--   the detector model instance and the event that triggered the action.
--   You can customize the <a>payload</a>. A separate column of the
--   DynamoDB table receives one attribute-value pair in the payload that
--   you specify.
--   
--   You must use expressions for all parameters in
--   <tt>DynamoDBv2Action</tt>. The expressions accept literals, operators,
--   functions, references, and substitution templates.
--   
--   <b>Examples</b>
--   
--   <ul>
--   <li>For literal values, the expressions must contain single quotes.
--   For example, the value for the <tt>tableName</tt> parameter can be
--   <tt>'GreenhouseTemperatureTable'</tt>.</li>
--   <li>For references, you must specify either variables or input values.
--   For example, the value for the <tt>tableName</tt> parameter can be
--   <tt>$variable.ddbtableName</tt>.</li>
--   <li>For a substitution template, you must use <tt>${}</tt>, and the
--   template must be in single quotes. A substitution template can also
--   contain a combination of literals, operators, functions, references,
--   and substitution templates.In the following example, the value for the
--   <tt>contentExpression</tt> parameter in <tt>Payload</tt> uses a
--   substitution template.<pre>'{\"sensorID\":
--   \"${$input.GreenhouseInput.sensor_id}\", \"temperature\":
--   \"${$input.GreenhouseInput.temperature * 9 / 5 + 32}\"}'</pre></li>
--   <li>For a string concatenation, you must use <tt>+</tt>. A string
--   concatenation can also contain a combination of literals, operators,
--   functions, references, and substitution templates.In the following
--   example, the value for the <tt>tableName</tt> parameter uses a string
--   concatenation.<pre>'GreenhouseTemperatureTable ' +
--   $input.GreenhouseInput.date</pre></li>
--   </ul>
--   
--   For more information, see <a>Expressions</a> in the <i>AWS IoT Events
--   Developer Guide</i>.
--   
--   The value for the <tt>type</tt> parameter in <tt>Payload</tt> must be
--   <tt>JSON</tt>.
--   
--   <i>See:</i> <a>newDynamoDBv2Action</a> smart constructor.
data DynamoDBv2Action
DynamoDBv2Action' :: Maybe Payload -> Text -> DynamoDBv2Action

-- | Create a value of <a>DynamoDBv2Action</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:payload:DynamoDBv2Action'</a>, <a>dynamoDBv2Action_payload</a>
--   - Undocumented member.
--   
--   <a>$sel:tableName:DynamoDBv2Action'</a>,
--   <a>dynamoDBv2Action_tableName</a> - The name of the DynamoDB table.
newDynamoDBv2Action :: Text -> DynamoDBv2Action

-- | Contains the configuration information of email notifications.
--   
--   <i>See:</i> <a>newEmailConfiguration</a> smart constructor.
data EmailConfiguration
EmailConfiguration' :: Maybe EmailContent -> Text -> EmailRecipients -> EmailConfiguration

-- | Create a value of <a>EmailConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:content:EmailConfiguration'</a>,
--   <a>emailConfiguration_content</a> - Contains the subject and message
--   of an email.
--   
--   <a>$sel:from:EmailConfiguration'</a>, <a>emailConfiguration_from</a> -
--   The email address that sends emails.
--   
--   If you use the AWS IoT Events managed AWS Lambda function to manage
--   your emails, you must <a>verify the email address that sends emails in
--   Amazon SES</a>.
--   
--   <a>$sel:recipients:EmailConfiguration'</a>,
--   <a>emailConfiguration_recipients</a> - Contains the information of one
--   or more recipients who receive the emails.
--   
--   You must <a>add the users that receive emails to your AWS SSO
--   store</a>.
newEmailConfiguration :: Text -> EmailRecipients -> EmailConfiguration

-- | Contains the subject and message of an email.
--   
--   <i>See:</i> <a>newEmailContent</a> smart constructor.
data EmailContent
EmailContent' :: Maybe Text -> Maybe Text -> EmailContent

-- | Create a value of <a>EmailContent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subject:EmailContent'</a>, <a>emailContent_subject</a> - The
--   subject of the email.
--   
--   <a>$sel:additionalMessage:EmailContent'</a>,
--   <a>emailContent_additionalMessage</a> - The message that you want to
--   send. The message can be up to 200 characters.
newEmailContent :: EmailContent

-- | Contains the information of one or more recipients who receive the
--   emails.
--   
--   You must <a>add the users that receive emails to your AWS SSO
--   store</a>.
--   
--   <i>See:</i> <a>newEmailRecipients</a> smart constructor.
data EmailRecipients
EmailRecipients' :: Maybe (NonEmpty RecipientDetail) -> EmailRecipients

-- | Create a value of <a>EmailRecipients</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:to:EmailRecipients'</a>, <a>emailRecipients_to</a> - Specifies
--   one or more recipients who receive the email.
newEmailRecipients :: EmailRecipients

-- | Specifies the <tt>actions</tt> to be performed when the
--   <tt>condition</tt> evaluates to TRUE.
--   
--   <i>See:</i> <a>newEvent</a> smart constructor.
data Event
Event' :: Maybe [Action] -> Maybe Text -> Text -> Event

-- | Create a value of <a>Event</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:actions:Event'</a>, <a>event_actions</a> - The actions to be
--   performed.
--   
--   <a>$sel:condition:Event'</a>, <a>event_condition</a> - Optional. The
--   Boolean expression that, when TRUE, causes the <tt>actions</tt> to be
--   performed. If not present, the actions are performed (=TRUE). If the
--   expression result is not a Boolean value, the actions are not
--   performed (=FALSE).
--   
--   <a>$sel:eventName:Event'</a>, <a>event_eventName</a> - The name of the
--   event.
newEvent :: Text -> Event

-- | Sends information about the detector model instance and the event that
--   triggered the action to an Amazon Kinesis Data Firehose delivery
--   stream.
--   
--   <i>See:</i> <a>newFirehoseAction</a> smart constructor.
data FirehoseAction
FirehoseAction' :: Maybe Text -> Maybe Payload -> Text -> FirehoseAction

-- | Create a value of <a>FirehoseAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:separator:FirehoseAction'</a>, <a>firehoseAction_separator</a>
--   - A character separator that is used to separate records written to
--   the Kinesis Data Firehose delivery stream. Valid values are: '\n'
--   (newline), '\t' (tab), '\r\n' (Windows newline), ',' (comma).
--   
--   <a>$sel:payload:FirehoseAction'</a>, <a>firehoseAction_payload</a> -
--   You can configure the action payload when you send a message to an
--   Amazon Kinesis Data Firehose delivery stream.
--   
--   <a>$sel:deliveryStreamName:FirehoseAction'</a>,
--   <a>firehoseAction_deliveryStreamName</a> - The name of the Kinesis
--   Data Firehose delivery stream where the data is written.
newFirehoseAction :: Text -> FirehoseAction

-- | Specifies the default alarm state. The configuration applies to all
--   alarms that were created based on this alarm model.
--   
--   <i>See:</i> <a>newInitializationConfiguration</a> smart constructor.
data InitializationConfiguration
InitializationConfiguration' :: Bool -> InitializationConfiguration

-- | Create a value of <a>InitializationConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:disabledOnInitialization:InitializationConfiguration'</a>,
--   <a>initializationConfiguration_disabledOnInitialization</a> - The
--   value must be <tt>TRUE</tt> or <tt>FALSE</tt>. If <tt>FALSE</tt>, all
--   alarm instances created based on the alarm model are activated. The
--   default value is <tt>TRUE</tt>.
newInitializationConfiguration :: Bool -> InitializationConfiguration

-- | Information about the input.
--   
--   <i>See:</i> <a>newInput</a> smart constructor.
data Input
Input' :: Maybe InputDefinition -> Maybe InputConfiguration -> Input

-- | Create a value of <a>Input</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputDefinition:Input'</a>, <a>input_inputDefinition</a> - The
--   definition of the input.
--   
--   <a>$sel:inputConfiguration:Input'</a>, <a>input_inputConfiguration</a>
--   - Information about the configuration of an input.
newInput :: Input

-- | Information about the configuration of an input.
--   
--   <i>See:</i> <a>newInputConfiguration</a> smart constructor.
data InputConfiguration
InputConfiguration' :: Maybe Text -> Text -> Text -> POSIX -> POSIX -> InputStatus -> InputConfiguration

-- | Create a value of <a>InputConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputDescription:InputConfiguration'</a>,
--   <a>inputConfiguration_inputDescription</a> - A brief description of
--   the input.
--   
--   <a>$sel:inputName:InputConfiguration'</a>,
--   <a>inputConfiguration_inputName</a> - The name of the input.
--   
--   <a>$sel:inputArn:InputConfiguration'</a>,
--   <a>inputConfiguration_inputArn</a> - The ARN of the input.
--   
--   <a>$sel:creationTime:InputConfiguration'</a>,
--   <a>inputConfiguration_creationTime</a> - The time the input was
--   created.
--   
--   <a>$sel:lastUpdateTime:InputConfiguration'</a>,
--   <a>inputConfiguration_lastUpdateTime</a> - The last time the input was
--   updated.
--   
--   <a>$sel:status:InputConfiguration'</a>,
--   <a>inputConfiguration_status</a> - The status of the input.
newInputConfiguration :: Text -> Text -> UTCTime -> UTCTime -> InputStatus -> InputConfiguration

-- | The definition of the input.
--   
--   <i>See:</i> <a>newInputDefinition</a> smart constructor.
data InputDefinition
InputDefinition' :: NonEmpty Attribute -> InputDefinition

-- | Create a value of <a>InputDefinition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributes:InputDefinition'</a>,
--   <a>inputDefinition_attributes</a> - The attributes from the JSON
--   payload that are made available by the input. Inputs are derived from
--   messages sent to the AWS IoT Events system using
--   <tt>BatchPutMessage</tt>. Each such message contains a JSON payload,
--   and those attributes (and their paired values) specified here are
--   available for use in the <tt>condition</tt> expressions used by
--   detectors that monitor this input.
newInputDefinition :: NonEmpty Attribute -> InputDefinition

-- | The identifer of the input.
--   
--   <i>See:</i> <a>newInputIdentifier</a> smart constructor.
data InputIdentifier
InputIdentifier' :: Maybe IotSiteWiseInputIdentifier -> Maybe IotEventsInputIdentifier -> InputIdentifier

-- | Create a value of <a>InputIdentifier</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:iotSiteWiseInputIdentifier:InputIdentifier'</a>,
--   <a>inputIdentifier_iotSiteWiseInputIdentifier</a> - The identifer of
--   the input routed from AWS IoT SiteWise.
--   
--   <a>$sel:iotEventsInputIdentifier:InputIdentifier'</a>,
--   <a>inputIdentifier_iotEventsInputIdentifier</a> - The identifier of
--   the input routed to AWS IoT Events.
newInputIdentifier :: InputIdentifier

-- | Information about the input.
--   
--   <i>See:</i> <a>newInputSummary</a> smart constructor.
data InputSummary
InputSummary' :: Maybe POSIX -> Maybe InputStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> InputSummary

-- | Create a value of <a>InputSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:InputSummary'</a>,
--   <a>inputSummary_creationTime</a> - The time the input was created.
--   
--   <a>$sel:status:InputSummary'</a>, <a>inputSummary_status</a> - The
--   status of the input.
--   
--   <a>$sel:inputName:InputSummary'</a>, <a>inputSummary_inputName</a> -
--   The name of the input.
--   
--   <a>$sel:inputDescription:InputSummary'</a>,
--   <a>inputSummary_inputDescription</a> - A brief description of the
--   input.
--   
--   <a>$sel:inputArn:InputSummary'</a>, <a>inputSummary_inputArn</a> - The
--   ARN of the input.
--   
--   <a>$sel:lastUpdateTime:InputSummary'</a>,
--   <a>inputSummary_lastUpdateTime</a> - The last time the input was
--   updated.
newInputSummary :: InputSummary

-- | Sends an AWS IoT Events input, passing in information about the
--   detector model instance and the event that triggered the action.
--   
--   <i>See:</i> <a>newIotEventsAction</a> smart constructor.
data IotEventsAction
IotEventsAction' :: Maybe Payload -> Text -> IotEventsAction

-- | Create a value of <a>IotEventsAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:payload:IotEventsAction'</a>, <a>iotEventsAction_payload</a> -
--   You can configure the action payload when you send a message to an AWS
--   IoT Events input.
--   
--   <a>$sel:inputName:IotEventsAction'</a>,
--   <a>iotEventsAction_inputName</a> - The name of the AWS IoT Events
--   input where the data is sent.
newIotEventsAction :: Text -> IotEventsAction

-- | The identifier of the input routed to AWS IoT Events.
--   
--   <i>See:</i> <a>newIotEventsInputIdentifier</a> smart constructor.
data IotEventsInputIdentifier
IotEventsInputIdentifier' :: Text -> IotEventsInputIdentifier

-- | Create a value of <a>IotEventsInputIdentifier</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputName:IotEventsInputIdentifier'</a>,
--   <a>iotEventsInputIdentifier_inputName</a> - The name of the input
--   routed to AWS IoT Events.
newIotEventsInputIdentifier :: Text -> IotEventsInputIdentifier

-- | Sends information about the detector model instance and the event that
--   triggered the action to a specified asset property in AWS IoT
--   SiteWise.
--   
--   You must use expressions for all parameters in
--   <tt>IotSiteWiseAction</tt>. The expressions accept literals,
--   operators, functions, references, and substitutions templates.
--   
--   <b>Examples</b>
--   
--   <ul>
--   <li>For literal values, the expressions must contain single quotes.
--   For example, the value for the <tt>propertyAlias</tt> parameter can be
--   <tt>'/company/windfarm/3/turbine/7/temperature'</tt>.</li>
--   <li>For references, you must specify either variables or input values.
--   For example, the value for the <tt>assetId</tt> parameter can be
--   <tt>$input.TurbineInput.assetId1</tt>.</li>
--   <li>For a substitution template, you must use <tt>${}</tt>, and the
--   template must be in single quotes. A substitution template can also
--   contain a combination of literals, operators, functions, references,
--   and substitution templates.In the following example, the value for the
--   <tt>propertyAlias</tt> parameter uses a substitution
--   template.<pre>'company/windfarm/${$input.TemperatureInput.sensorData.windfarmID}/turbine/
--   ${$input.TemperatureInput.sensorData.turbineID}/temperature'</pre></li>
--   </ul>
--   
--   You must specify either <tt>propertyAlias</tt> or both
--   <tt>assetId</tt> and <tt>propertyId</tt> to identify the target asset
--   property in AWS IoT SiteWise.
--   
--   For more information, see <a>Expressions</a> in the <i>AWS IoT Events
--   Developer Guide</i>.
--   
--   <i>See:</i> <a>newIotSiteWiseAction</a> smart constructor.
data IotSiteWiseAction
IotSiteWiseAction' :: Maybe Text -> Maybe Text -> Maybe AssetPropertyValue -> Maybe Text -> Maybe Text -> IotSiteWiseAction

-- | Create a value of <a>IotSiteWiseAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:entryId:IotSiteWiseAction'</a>,
--   <a>iotSiteWiseAction_entryId</a> - A unique identifier for this entry.
--   You can use the entry ID to track which data entry causes an error in
--   case of failure. The default is a new unique identifier.
--   
--   <a>$sel:propertyAlias:IotSiteWiseAction'</a>,
--   <a>iotSiteWiseAction_propertyAlias</a> - The alias of the asset
--   property.
--   
--   <a>$sel:propertyValue:IotSiteWiseAction'</a>,
--   <a>iotSiteWiseAction_propertyValue</a> - The value to send to the
--   asset property. This value contains timestamp, quality, and value
--   (TQV) information.
--   
--   <a>$sel:propertyId:IotSiteWiseAction'</a>,
--   <a>iotSiteWiseAction_propertyId</a> - The ID of the asset property.
--   
--   <a>$sel:assetId:IotSiteWiseAction'</a>,
--   <a>iotSiteWiseAction_assetId</a> - The ID of the asset that has the
--   specified property.
newIotSiteWiseAction :: IotSiteWiseAction

-- | The asset model property identifer of the input routed from AWS IoT
--   SiteWise.
--   
--   <i>See:</i> <a>newIotSiteWiseAssetModelPropertyIdentifier</a> smart
--   constructor.
data IotSiteWiseAssetModelPropertyIdentifier
IotSiteWiseAssetModelPropertyIdentifier' :: Text -> Text -> IotSiteWiseAssetModelPropertyIdentifier

-- | Create a value of <a>IotSiteWiseAssetModelPropertyIdentifier</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:assetModelId:IotSiteWiseAssetModelPropertyIdentifier'</a>,
--   <a>iotSiteWiseAssetModelPropertyIdentifier_assetModelId</a> - The ID
--   of the AWS IoT SiteWise asset model.
--   
--   <a>$sel:propertyId:IotSiteWiseAssetModelPropertyIdentifier'</a>,
--   <a>iotSiteWiseAssetModelPropertyIdentifier_propertyId</a> - The ID of
--   the AWS IoT SiteWise asset property.
newIotSiteWiseAssetModelPropertyIdentifier :: Text -> Text -> IotSiteWiseAssetModelPropertyIdentifier

-- | The identifer of the input routed from AWS IoT SiteWise.
--   
--   <i>See:</i> <a>newIotSiteWiseInputIdentifier</a> smart constructor.
data IotSiteWiseInputIdentifier
IotSiteWiseInputIdentifier' :: Maybe IotSiteWiseAssetModelPropertyIdentifier -> IotSiteWiseInputIdentifier

-- | Create a value of <a>IotSiteWiseInputIdentifier</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:iotSiteWiseAssetModelPropertyIdentifier:IotSiteWiseInputIdentifier'</a>,
--   <a>iotSiteWiseInputIdentifier_iotSiteWiseAssetModelPropertyIdentifier</a>
--   - The identifier of the AWS IoT SiteWise asset model property.
newIotSiteWiseInputIdentifier :: IotSiteWiseInputIdentifier

-- | Information required to publish the MQTT message through the AWS IoT
--   message broker.
--   
--   <i>See:</i> <a>newIotTopicPublishAction</a> smart constructor.
data IotTopicPublishAction
IotTopicPublishAction' :: Maybe Payload -> Text -> IotTopicPublishAction

-- | Create a value of <a>IotTopicPublishAction</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:payload:IotTopicPublishAction'</a>,
--   <a>iotTopicPublishAction_payload</a> - You can configure the action
--   payload when you publish a message to an AWS IoT Core topic.
--   
--   <a>$sel:mqttTopic:IotTopicPublishAction'</a>,
--   <a>iotTopicPublishAction_mqttTopic</a> - The MQTT topic of the
--   message. You can use a string expression that includes variables
--   (<tt>$variable.&lt;variable-name&gt;</tt>) and input values
--   (<tt>$input.&lt;input-name&gt;.&lt;path-to-datum&gt;</tt>) as the
--   topic string.
newIotTopicPublishAction :: Text -> IotTopicPublishAction

-- | Calls a Lambda function, passing in information about the detector
--   model instance and the event that triggered the action.
--   
--   <i>See:</i> <a>newLambdaAction</a> smart constructor.
data LambdaAction
LambdaAction' :: Maybe Payload -> Text -> LambdaAction

-- | Create a value of <a>LambdaAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:payload:LambdaAction'</a>, <a>lambdaAction_payload</a> - You
--   can configure the action payload when you send a message to a Lambda
--   function.
--   
--   <a>$sel:functionArn:LambdaAction'</a>, <a>lambdaAction_functionArn</a>
--   - The ARN of the Lambda function that is executed.
newLambdaAction :: Text -> LambdaAction

-- | The values of the AWS IoT Events logging options.
--   
--   <i>See:</i> <a>newLoggingOptions</a> smart constructor.
data LoggingOptions
LoggingOptions' :: Maybe (NonEmpty DetectorDebugOption) -> Text -> LoggingLevel -> Bool -> LoggingOptions

-- | Create a value of <a>LoggingOptions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:detectorDebugOptions:LoggingOptions'</a>,
--   <a>loggingOptions_detectorDebugOptions</a> - Information that
--   identifies those detector models and their detectors (instances) for
--   which the logging level is given.
--   
--   <a>$sel:roleArn:LoggingOptions'</a>, <a>loggingOptions_roleArn</a> -
--   The ARN of the role that grants permission to AWS IoT Events to
--   perform logging.
--   
--   <a>$sel:level:LoggingOptions'</a>, <a>loggingOptions_level</a> - The
--   logging level.
--   
--   <a>$sel:enabled:LoggingOptions'</a>, <a>loggingOptions_enabled</a> -
--   If TRUE, logging is enabled for AWS IoT Events.
newLoggingOptions :: Text -> LoggingLevel -> Bool -> LoggingOptions

-- | Contains the notification settings of an alarm model. The settings
--   apply to all alarms that were created based on this alarm model.
--   
--   <i>See:</i> <a>newNotificationAction</a> smart constructor.
data NotificationAction
NotificationAction' :: Maybe (NonEmpty EmailConfiguration) -> Maybe (NonEmpty SMSConfiguration) -> NotificationTargetActions -> NotificationAction

-- | Create a value of <a>NotificationAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:emailConfigurations:NotificationAction'</a>,
--   <a>notificationAction_emailConfigurations</a> - Contains the
--   configuration information of email notifications.
--   
--   <a>$sel:smsConfigurations:NotificationAction'</a>,
--   <a>notificationAction_smsConfigurations</a> - Contains the
--   configuration information of SMS notifications.
--   
--   <a>$sel:action:NotificationAction'</a>,
--   <a>notificationAction_action</a> - Specifies an AWS Lambda function to
--   manage alarm notifications. You can create one or use the <a>AWS
--   Lambda function provided by AWS IoT Events</a>.
newNotificationAction :: NotificationTargetActions -> NotificationAction

-- | Specifies an AWS Lambda function to manage alarm notifications. You
--   can create one or use the <a>AWS Lambda function provided by AWS IoT
--   Events</a>.
--   
--   <i>See:</i> <a>newNotificationTargetActions</a> smart constructor.
data NotificationTargetActions
NotificationTargetActions' :: Maybe LambdaAction -> NotificationTargetActions

-- | Create a value of <a>NotificationTargetActions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lambdaAction:NotificationTargetActions'</a>,
--   <a>notificationTargetActions_lambdaAction</a> - Undocumented member.
newNotificationTargetActions :: NotificationTargetActions

-- | When entering this state, perform these <tt>actions</tt> if the
--   <tt>condition</tt> is TRUE.
--   
--   <i>See:</i> <a>newOnEnterLifecycle</a> smart constructor.
data OnEnterLifecycle
OnEnterLifecycle' :: Maybe [Event] -> OnEnterLifecycle

-- | Create a value of <a>OnEnterLifecycle</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:events:OnEnterLifecycle'</a>, <a>onEnterLifecycle_events</a> -
--   Specifies the actions that are performed when the state is entered and
--   the <tt>condition</tt> is <tt>TRUE</tt>.
newOnEnterLifecycle :: OnEnterLifecycle

-- | When exiting this state, perform these <tt>actions</tt> if the
--   specified <tt>condition</tt> is <tt>TRUE</tt>.
--   
--   <i>See:</i> <a>newOnExitLifecycle</a> smart constructor.
data OnExitLifecycle
OnExitLifecycle' :: Maybe [Event] -> OnExitLifecycle

-- | Create a value of <a>OnExitLifecycle</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:events:OnExitLifecycle'</a>, <a>onExitLifecycle_events</a> -
--   Specifies the <tt>actions</tt> that are performed when the state is
--   exited and the <tt>condition</tt> is <tt>TRUE</tt>.
newOnExitLifecycle :: OnExitLifecycle

-- | Specifies the actions performed when the <tt>condition</tt> evaluates
--   to TRUE.
--   
--   <i>See:</i> <a>newOnInputLifecycle</a> smart constructor.
data OnInputLifecycle
OnInputLifecycle' :: Maybe [Event] -> Maybe [TransitionEvent] -> OnInputLifecycle

-- | Create a value of <a>OnInputLifecycle</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:events:OnInputLifecycle'</a>, <a>onInputLifecycle_events</a> -
--   Specifies the actions performed when the <tt>condition</tt> evaluates
--   to TRUE.
--   
--   <a>$sel:transitionEvents:OnInputLifecycle'</a>,
--   <a>onInputLifecycle_transitionEvents</a> - Specifies the actions
--   performed, and the next state entered, when a <tt>condition</tt>
--   evaluates to TRUE.
newOnInputLifecycle :: OnInputLifecycle

-- | Information needed to configure the payload.
--   
--   By default, AWS IoT Events generates a standard payload in JSON for
--   any action. This action payload contains all attribute-value pairs
--   that have the information about the detector model instance and the
--   event triggered the action. To configure the action payload, you can
--   use <tt>contentExpression</tt>.
--   
--   <i>See:</i> <a>newPayload</a> smart constructor.
data Payload
Payload' :: Text -> PayloadType -> Payload

-- | Create a value of <a>Payload</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:contentExpression:Payload'</a>,
--   <a>payload_contentExpression</a> - The content of the payload. You can
--   use a string expression that includes quoted strings
--   (<tt>'&lt;string&gt;'</tt>), variables
--   (<tt>$variable.&lt;variable-name&gt;</tt>), input values
--   (<tt>$input.&lt;input-name&gt;.&lt;path-to-datum&gt;</tt>), string
--   concatenations, and quoted strings that contain <tt>${}</tt> as the
--   content. The recommended maximum size of a content expression is 1 KB.
--   
--   <a>$sel:type':Payload'</a>, <a>payload_type</a> - The value of the
--   payload type can be either <tt>STRING</tt> or <tt>JSON</tt>.
newPayload :: Text -> PayloadType -> Payload

-- | The information that identifies the recipient.
--   
--   <i>See:</i> <a>newRecipientDetail</a> smart constructor.
data RecipientDetail
RecipientDetail' :: Maybe SSOIdentity -> RecipientDetail

-- | Create a value of <a>RecipientDetail</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ssoIdentity:RecipientDetail'</a>,
--   <a>recipientDetail_ssoIdentity</a> - The AWS Single Sign-On (AWS SSO)
--   authentication information.
newRecipientDetail :: RecipientDetail

-- | Information required to reset the timer. The timer is reset to the
--   previously evaluated result of the duration. The duration expression
--   isn't reevaluated when you reset the timer.
--   
--   <i>See:</i> <a>newResetTimerAction</a> smart constructor.
data ResetTimerAction
ResetTimerAction' :: Text -> ResetTimerAction

-- | Create a value of <a>ResetTimerAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timerName:ResetTimerAction'</a>,
--   <a>resetTimerAction_timerName</a> - The name of the timer to reset.
newResetTimerAction :: Text -> ResetTimerAction

-- | Contains information about the routed resource.
--   
--   <i>See:</i> <a>newRoutedResource</a> smart constructor.
data RoutedResource
RoutedResource' :: Maybe Text -> Maybe Text -> RoutedResource

-- | Create a value of <a>RoutedResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:RoutedResource'</a>, <a>routedResource_arn</a> - The ARN
--   of the routed resource. For more information, see <a>Amazon Resource
--   Names (ARNs)</a> in the <i>AWS General Reference</i>.
--   
--   <a>$sel:name:RoutedResource'</a>, <a>routedResource_name</a> - The
--   name of the routed resource.
newRoutedResource :: RoutedResource

-- | Contains the configuration information of SMS notifications.
--   
--   <i>See:</i> <a>newSMSConfiguration</a> smart constructor.
data SMSConfiguration
SMSConfiguration' :: Maybe Text -> Maybe Text -> NonEmpty RecipientDetail -> SMSConfiguration

-- | Create a value of <a>SMSConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:additionalMessage:SMSConfiguration'</a>,
--   <a>sMSConfiguration_additionalMessage</a> - The message that you want
--   to send. The message can be up to 200 characters.
--   
--   <a>$sel:senderId:SMSConfiguration'</a>,
--   <a>sMSConfiguration_senderId</a> - The sender ID.
--   
--   <a>$sel:recipients:SMSConfiguration'</a>,
--   <a>sMSConfiguration_recipients</a> - Specifies one or more recipients
--   who receive the message.
--   
--   You must <a>add the users that receive SMS messages to your AWS SSO
--   store</a>.
newSMSConfiguration :: NonEmpty RecipientDetail -> SMSConfiguration

-- | Information required to publish the Amazon SNS message.
--   
--   <i>See:</i> <a>newSNSTopicPublishAction</a> smart constructor.
data SNSTopicPublishAction
SNSTopicPublishAction' :: Maybe Payload -> Text -> SNSTopicPublishAction

-- | Create a value of <a>SNSTopicPublishAction</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:payload:SNSTopicPublishAction'</a>,
--   <a>sNSTopicPublishAction_payload</a> - You can configure the action
--   payload when you send a message as an Amazon SNS push notification.
--   
--   <a>$sel:targetArn:SNSTopicPublishAction'</a>,
--   <a>sNSTopicPublishAction_targetArn</a> - The ARN of the Amazon SNS
--   target where the message is sent.
newSNSTopicPublishAction :: Text -> SNSTopicPublishAction

-- | Contains information about your identity source in AWS Single Sign-On.
--   For more information, see the <a>AWS Single Sign-On User Guide</a>.
--   
--   <i>See:</i> <a>newSSOIdentity</a> smart constructor.
data SSOIdentity
SSOIdentity' :: Maybe Text -> Text -> SSOIdentity

-- | Create a value of <a>SSOIdentity</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userId:SSOIdentity'</a>, <a>sSOIdentity_userId</a> - The user
--   ID.
--   
--   <a>$sel:identityStoreId:SSOIdentity'</a>,
--   <a>sSOIdentity_identityStoreId</a> - The ID of the AWS SSO identity
--   store.
newSSOIdentity :: Text -> SSOIdentity

-- | Information needed to set the timer.
--   
--   <i>See:</i> <a>newSetTimerAction</a> smart constructor.
data SetTimerAction
SetTimerAction' :: Maybe Text -> Maybe Natural -> Text -> SetTimerAction

-- | Create a value of <a>SetTimerAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:durationExpression:SetTimerAction'</a>,
--   <a>setTimerAction_durationExpression</a> - The duration of the timer,
--   in seconds. You can use a string expression that includes numbers,
--   variables (<tt>$variable.&lt;variable-name&gt;</tt>), and input values
--   (<tt>$input.&lt;input-name&gt;.&lt;path-to-datum&gt;</tt>) as the
--   duration. The range of the duration is 1-31622400 seconds. To ensure
--   accuracy, the minimum duration is 60 seconds. The evaluated result of
--   the duration is rounded down to the nearest whole number.
--   
--   <a>$sel:seconds:SetTimerAction'</a>, <a>setTimerAction_seconds</a> -
--   The number of seconds until the timer expires. The minimum value is 60
--   seconds to ensure accuracy. The maximum value is 31622400 seconds.
--   
--   <a>$sel:timerName:SetTimerAction'</a>, <a>setTimerAction_timerName</a>
--   - The name of the timer.
newSetTimerAction :: Text -> SetTimerAction

-- | Information about the variable and its new value.
--   
--   <i>See:</i> <a>newSetVariableAction</a> smart constructor.
data SetVariableAction
SetVariableAction' :: Text -> Text -> SetVariableAction

-- | Create a value of <a>SetVariableAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:variableName:SetVariableAction'</a>,
--   <a>setVariableAction_variableName</a> - The name of the variable.
--   
--   <a>$sel:value:SetVariableAction'</a>, <a>setVariableAction_value</a> -
--   The new value of the variable.
newSetVariableAction :: Text -> Text -> SetVariableAction

-- | A rule that compares an input property value to a threshold value with
--   a comparison operator.
--   
--   <i>See:</i> <a>newSimpleRule</a> smart constructor.
data SimpleRule
SimpleRule' :: Text -> ComparisonOperator -> Text -> SimpleRule

-- | Create a value of <a>SimpleRule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputProperty:SimpleRule'</a>, <a>simpleRule_inputProperty</a>
--   - The value on the left side of the comparison operator. You can
--   specify an AWS IoT Events input attribute as an input property.
--   
--   <a>$sel:comparisonOperator:SimpleRule'</a>,
--   <a>simpleRule_comparisonOperator</a> - The comparison operator.
--   
--   <a>$sel:threshold:SimpleRule'</a>, <a>simpleRule_threshold</a> - The
--   value on the right side of the comparison operator. You can enter a
--   number or specify an AWS IoT Events input attribute.
newSimpleRule :: Text -> ComparisonOperator -> Text -> SimpleRule

-- | Sends information about the detector model instance and the event that
--   triggered the action to an Amazon SQS queue.
--   
--   <i>See:</i> <a>newSqsAction</a> smart constructor.
data SqsAction
SqsAction' :: Maybe Payload -> Maybe Bool -> Text -> SqsAction

-- | Create a value of <a>SqsAction</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:payload:SqsAction'</a>, <a>sqsAction_payload</a> - You can
--   configure the action payload when you send a message to an Amazon SQS
--   queue.
--   
--   <a>$sel:useBase64:SqsAction'</a>, <a>sqsAction_useBase64</a> - Set
--   this to TRUE if you want the data to be base-64 encoded before it is
--   written to the queue. Otherwise, set this to FALSE.
--   
--   <a>$sel:queueUrl:SqsAction'</a>, <a>sqsAction_queueUrl</a> - The URL
--   of the SQS queue where the data is written.
newSqsAction :: Text -> SqsAction

-- | Information that defines a state of a detector.
--   
--   <i>See:</i> <a>newState</a> smart constructor.
data State
State' :: Maybe OnEnterLifecycle -> Maybe OnInputLifecycle -> Maybe OnExitLifecycle -> Text -> State

-- | Create a value of <a>State</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:onEnter:State'</a>, <a>state_onEnter</a> - When entering this
--   state, perform these <tt>actions</tt> if the <tt>condition</tt> is
--   TRUE.
--   
--   <a>$sel:onInput:State'</a>, <a>state_onInput</a> - When an input is
--   received and the <tt>condition</tt> is TRUE, perform the specified
--   <tt>actions</tt>.
--   
--   <a>$sel:onExit:State'</a>, <a>state_onExit</a> - When exiting this
--   state, perform these <tt>actions</tt> if the specified
--   <tt>condition</tt> is <tt>TRUE</tt>.
--   
--   <a>$sel:stateName:State'</a>, <a>state_stateName</a> - The name of the
--   state.
newState :: Text -> State

-- | Metadata that can be used to manage the resource.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The tag's key.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The tag's value.
newTag :: Text -> Text -> Tag

-- | Specifies the actions performed and the next state entered when a
--   <tt>condition</tt> evaluates to TRUE.
--   
--   <i>See:</i> <a>newTransitionEvent</a> smart constructor.
data TransitionEvent
TransitionEvent' :: Maybe [Action] -> Text -> Text -> Text -> TransitionEvent

-- | Create a value of <a>TransitionEvent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:actions:TransitionEvent'</a>, <a>transitionEvent_actions</a> -
--   The actions to be performed.
--   
--   <a>$sel:eventName:TransitionEvent'</a>,
--   <a>transitionEvent_eventName</a> - The name of the transition event.
--   
--   <a>$sel:condition:TransitionEvent'</a>,
--   <a>transitionEvent_condition</a> - Required. A Boolean expression that
--   when TRUE causes the actions to be performed and the
--   <tt>nextState</tt> to be entered.
--   
--   <a>$sel:nextState:TransitionEvent'</a>,
--   <a>transitionEvent_nextState</a> - The next state to enter.
newTransitionEvent :: Text -> Text -> Text -> TransitionEvent
